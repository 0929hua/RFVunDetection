Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa2]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x85f0316
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa2
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x85f0316
0x3b: V13 = EQ V11 0x85f0316
0x3c: V14 = 0xa2
0x3f: JUMPI 0xa2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc9]
---
0x40 DUP1
0x41 PUSH4 0x1ad100bb
0x46 EQ
0x47 PUSH2 0xc9
0x4a JUMPI
---
0x41: V15 = 0x1ad100bb
0x46: V16 = EQ 0x1ad100bb V11
0x47: V17 = 0xc9
0x4a: JUMPI 0xc9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xfa]
---
0x4b DUP1
0x4c PUSH4 0x2bea500d
0x51 EQ
0x52 PUSH2 0xfa
0x55 JUMPI
---
0x4c: V18 = 0x2bea500d
0x51: V19 = EQ 0x2bea500d V11
0x52: V20 = 0xfa
0x55: JUMPI 0xfa V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x10f]
---
0x56 DUP1
0x57 PUSH4 0x3bf47720
0x5c EQ
0x5d PUSH2 0x10f
0x60 JUMPI
---
0x57: V21 = 0x3bf47720
0x5c: V22 = EQ 0x3bf47720 V11
0x5d: V23 = 0x10f
0x60: JUMPI 0x10f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x124]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0x124
0x6b JUMPI
---
0x62: V24 = 0x8da5cb5b
0x67: V25 = EQ 0x8da5cb5b V11
0x68: V26 = 0x124
0x6b: JUMPI 0x124 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x139]
---
0x6c DUP1
0x6d PUSH4 0x9d1b464a
0x72 EQ
0x73 PUSH2 0x139
0x76 JUMPI
---
0x6d: V27 = 0x9d1b464a
0x72: V28 = EQ 0x9d1b464a V11
0x73: V29 = 0x139
0x76: JUMPI 0x139 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x14e]
---
0x77 DUP1
0x78 PUSH4 0xbab2f552
0x7d EQ
0x7e PUSH2 0x14e
0x81 JUMPI
---
0x78: V30 = 0xbab2f552
0x7d: V31 = EQ 0xbab2f552 V11
0x7e: V32 = 0x14e
0x81: JUMPI 0x14e V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x163]
---
0x82 DUP1
0x83 PUSH4 0xe927fc5c
0x88 EQ
0x89 PUSH2 0x163
0x8c JUMPI
---
0x83: V33 = 0xe927fc5c
0x88: V34 = EQ 0xe927fc5c V11
0x89: V35 = 0x163
0x8c: JUMPI 0x163 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x178]
---
0x8d DUP1
0x8e PUSH4 0xf6f57127
0x93 EQ
0x94 PUSH2 0x178
0x97 JUMPI
---
0x8e: V36 = 0xf6f57127
0x93: V37 = EQ 0xf6f57127 V11
0x94: V38 = 0x178
0x97: JUMPI 0x178 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9f]
---
Predecessors: [0x0, 0x8d]
Successors: [0x18d]
---
0x98 JUMPDEST
0x99 PUSH2 0xa0
0x9c PUSH2 0x18d
0x9f JUMP
---
0x98: JUMPDEST 
0x99: V39 = 0xa0
0x9c: V40 = 0x18d
0x9f: JUMP 0x18d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa0]
Exit stack: [V11, 0xa0]

================================

Block 0xa0
[0xa0:0xa1]
---
Predecessors: [0x4d0, 0x564, 0x79f]
Successors: []
---
0xa0 JUMPDEST
0xa1 STOP
---
0xa0: JUMPDEST 
0xa1: STOP 
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0xd]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V41 = CALLVALUE
0xa5: V42 = ISZERO V41
0xa6: V43 = 0xae
0xa9: JUMPI 0xae V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V44 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V11, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41]

================================

Block 0xae
[0xae:0xb6]
---
Predecessors: [0xa2]
Successors: [0x4d2]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xb7
0xb3 PUSH2 0x4d2
0xb6 JUMP
---
0xae: JUMPDEST 
0xb0: V45 = 0xb7
0xb3: V46 = 0x4d2
0xb6: JUMP 0x4d2
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V11, 0xb7]

================================

Block 0xb7
[0xb7:0xc8]
---
Predecessors: [0x4d2, 0x4f6, 0x50b, 0x511]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x40
0xba DUP1
0xbb MLOAD
0xbc SWAP2
0xbd DUP3
0xbe MSTORE
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 SWAP1
0xc3 SUB
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 RETURN
---
0xb7: JUMPDEST 
0xb8: V47 = 0x40
0xbb: V48 = M[0x40]
0xbe: M[V48] = S0
0xbf: V49 = M[0x40]
0xc3: V50 = SUB V48 V49
0xc4: V51 = 0x20
0xc6: V52 = ADD 0x20 V50
0xc8: RETURN V49 V52
---
Entry stack: [V11, 0xb7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb7]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x40]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V53 = CALLVALUE
0xcc: V54 = ISZERO V53
0xcd: V55 = 0xd5
0xd0: JUMPI 0xd5 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V53]
Exit stack: [V11, V53]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V56 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V53]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x4d8]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0xde
0xda PUSH2 0x4d8
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V57 = 0xde
0xda: V58 = 0x4d8
0xdd: JUMP 0x4d8
---
Entry stack: [V11, V53]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0xde
[0xde:0xf9]
---
Predecessors: [0x4d8, 0x4e7, 0x4fc, 0x517, 0x526]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 DUP1
0xe2 MLOAD
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb SWAP1
0xec SWAP3
0xed AND
0xee DUP3
0xef MSTORE
0xf0 MLOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 SWAP1
0xf4 SUB
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 RETURN
---
0xde: JUMPDEST 
0xdf: V59 = 0x40
0xe2: V60 = M[0x40]
0xe3: V61 = 0x1
0xe5: V62 = 0xa0
0xe7: V63 = 0x2
0xe9: V64 = EXP 0x2 0xa0
0xea: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed: V66 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xef: M[V60] = V66
0xf0: V67 = M[0x40]
0xf4: V68 = SUB V60 V67
0xf5: V69 = 0x20
0xf7: V70 = ADD 0x20 V68
0xf9: RETURN V67 V70
---
Entry stack: [V11, 0xde, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x4b]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V71 = CALLVALUE
0xfd: V72 = ISZERO V71
0xfe: V73 = 0x106
0x101: JUMPI 0x106 V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V11, V71]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V74 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V71]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xfa]
Successors: [0x4e7]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0xde
0x10b PUSH2 0x4e7
0x10e JUMP
---
0x106: JUMPDEST 
0x108: V75 = 0xde
0x10b: V76 = 0x4e7
0x10e: JUMP 0x4e7
---
Entry stack: [V11, V71]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x56]
Successors: [0x117, 0x11b]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 DUP1
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x10f: JUMPDEST 
0x110: V77 = CALLVALUE
0x112: V78 = ISZERO V77
0x113: V79 = 0x11b
0x116: JUMPI 0x11b V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x10f]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V80 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x11b
[0x11b:0x123]
---
Predecessors: [0x10f]
Successors: [0x4f6]
---
0x11b JUMPDEST
0x11c POP
0x11d PUSH2 0xb7
0x120 PUSH2 0x4f6
0x123 JUMP
---
0x11b: JUMPDEST 
0x11d: V81 = 0xb7
0x120: V82 = 0x4f6
0x123: JUMP 0x4f6
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V11, 0xb7]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x61]
Successors: [0x12c, 0x130]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 DUP1
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0x124: JUMPDEST 
0x125: V83 = CALLVALUE
0x127: V84 = ISZERO V83
0x128: V85 = 0x130
0x12b: JUMPI 0x130 V84
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V11, V83]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x124]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V86 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V11, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V83]

================================

Block 0x130
[0x130:0x138]
---
Predecessors: [0x124]
Successors: [0x4fc]
---
0x130 JUMPDEST
0x131 POP
0x132 PUSH2 0xde
0x135 PUSH2 0x4fc
0x138 JUMP
---
0x130: JUMPDEST 
0x132: V87 = 0xde
0x135: V88 = 0x4fc
0x138: JUMP 0x4fc
---
Entry stack: [V11, V83]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x6c]
Successors: [0x141, 0x145]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b DUP1
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x139: JUMPDEST 
0x13a: V89 = CALLVALUE
0x13c: V90 = ISZERO V89
0x13d: V91 = 0x145
0x140: JUMPI 0x145 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x139]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V92 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V11, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V89]

================================

Block 0x145
[0x145:0x14d]
---
Predecessors: [0x139]
Successors: [0x50b]
---
0x145 JUMPDEST
0x146 POP
0x147 PUSH2 0xb7
0x14a PUSH2 0x50b
0x14d JUMP
---
0x145: JUMPDEST 
0x147: V93 = 0xb7
0x14a: V94 = 0x50b
0x14d: JUMP 0x50b
---
Entry stack: [V11, V89]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V11, 0xb7]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x77]
Successors: [0x156, 0x15a]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 DUP1
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14e: JUMPDEST 
0x14f: V95 = CALLVALUE
0x151: V96 = ISZERO V95
0x152: V97 = 0x15a
0x155: JUMPI 0x15a V96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V95]
Exit stack: [V11, V95]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14e]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V98 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V11, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V95]

================================

Block 0x15a
[0x15a:0x162]
---
Predecessors: [0x14e]
Successors: [0x511]
---
0x15a JUMPDEST
0x15b POP
0x15c PUSH2 0xb7
0x15f PUSH2 0x511
0x162 JUMP
---
0x15a: JUMPDEST 
0x15c: V99 = 0xb7
0x15f: V100 = 0x511
0x162: JUMP 0x511
---
Entry stack: [V11, V95]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V11, 0xb7]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x82]
Successors: [0x16b, 0x16f]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 DUP1
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x163: JUMPDEST 
0x164: V101 = CALLVALUE
0x166: V102 = ISZERO V101
0x167: V103 = 0x16f
0x16a: JUMPI 0x16f V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V11, V101]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x163]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V104 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V11, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V101]

================================

Block 0x16f
[0x16f:0x177]
---
Predecessors: [0x163]
Successors: [0x517]
---
0x16f JUMPDEST
0x170 POP
0x171 PUSH2 0xde
0x174 PUSH2 0x517
0x177 JUMP
---
0x16f: JUMPDEST 
0x171: V105 = 0xde
0x174: V106 = 0x517
0x177: JUMP 0x517
---
Entry stack: [V11, V101]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x8d]
Successors: [0x180, 0x184]
---
0x178 JUMPDEST
0x179 CALLVALUE
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x178: JUMPDEST 
0x179: V107 = CALLVALUE
0x17b: V108 = ISZERO V107
0x17c: V109 = 0x184
0x17f: JUMPI 0x184 V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V11, V107]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x178]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V110 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V11, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V107]

================================

Block 0x184
[0x184:0x18c]
---
Predecessors: [0x178]
Successors: [0x526]
---
0x184 JUMPDEST
0x185 POP
0x186 PUSH2 0xde
0x189 PUSH2 0x526
0x18c JUMP
---
0x184: JUMPDEST 
0x186: V111 = 0xde
0x189: V112 = 0x526
0x18c: JUMP 0x526
---
Entry stack: [V11, V107]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0x18d
[0x18d:0x196]
---
Predecessors: [0x98]
Successors: [0x197, 0x472]
---
0x18d JUMPDEST
0x18e PUSH1 0x0
0x190 CALLVALUE
0x191 GT
0x192 ISZERO
0x193 PUSH2 0x472
0x196 JUMPI
---
0x18d: JUMPDEST 
0x18e: V113 = 0x0
0x190: V114 = CALLVALUE
0x191: V115 = GT V114 0x0
0x192: V116 = ISZERO V115
0x193: V117 = 0x472
0x196: JUMPI 0x472 V116
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x197
[0x197:0x19f]
---
Predecessors: [0x18d]
Successors: [0x1a0, 0x3fb]
---
0x197 PUSH1 0x9
0x199 SLOAD
0x19a CALLVALUE
0x19b LT
0x19c PUSH2 0x3fb
0x19f JUMPI
---
0x197: V118 = 0x9
0x199: V119 = S[0x9]
0x19a: V120 = CALLVALUE
0x19b: V121 = LT V120 V119
0x19c: V122 = 0x3fb
0x19f: JUMPI 0x3fb V121
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x1a0
[0x1a0:0x1c3]
---
Predecessors: [0x197]
Successors: [0x535]
---
0x1a0 PUSH1 0x6
0x1a2 DUP1
0x1a3 SLOAD
0x1a4 PUSH1 0x1
0x1a6 SWAP1
0x1a7 DUP2
0x1a8 ADD
0x1a9 SWAP1
0x1aa SWAP2
0x1ab SSTORE
0x1ac TIMESTAMP
0x1ad SWAP1
0x1ae SSTORE
0x1af PUSH1 0x0
0x1b1 PUSH1 0x5
0x1b3 SSTORE
0x1b4 PUSH2 0x1c4
0x1b7 CALLVALUE
0x1b8 PUSH1 0x2
0x1ba PUSH4 0xffffffff
0x1bf PUSH2 0x535
0x1c2 AND
0x1c3 JUMP
---
0x1a0: V123 = 0x6
0x1a3: V124 = S[0x6]
0x1a4: V125 = 0x1
0x1a8: V126 = ADD 0x1 V124
0x1ab: S[0x6] = V126
0x1ac: V127 = TIMESTAMP
0x1ae: S[0x1] = V127
0x1af: V128 = 0x0
0x1b1: V129 = 0x5
0x1b3: S[0x5] = 0x0
0x1b4: V130 = 0x1c4
0x1b7: V131 = CALLVALUE
0x1b8: V132 = 0x2
0x1ba: V133 = 0xffffffff
0x1bf: V134 = 0x535
0x1c2: V135 = AND 0x535 0xffffffff
0x1c3: JUMP 0x535
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x1c4, V131, 0x2]
Exit stack: [V11, 0xa0, 0x1c4, V131, 0x2]

================================

Block 0x1c4
[0x1c4:0x1f4]
---
Predecessors: [0x564]
Successors: [0x535]
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x9
0x1c7 SSTORE
0x1c8 PUSH1 0x2
0x1ca SLOAD
0x1cb PUSH1 0xa
0x1cd SLOAD
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 SWAP1
0x1d7 SWAP2
0x1d8 AND
0x1d9 SWAP1
0x1da PUSH2 0x8fc
0x1dd SWAP1
0x1de PUSH2 0x201
0x1e1 SWAP1
0x1e2 PUSH1 0x64
0x1e4 SWAP1
0x1e5 PUSH2 0x1f5
0x1e8 SWAP1
0x1e9 CALLVALUE
0x1ea SWAP1
0x1eb PUSH4 0xffffffff
0x1f0 PUSH2 0x535
0x1f3 AND
0x1f4 JUMP
---
0x1c4: JUMPDEST 
0x1c5: V136 = 0x9
0x1c7: S[0x9] = S0
0x1c8: V137 = 0x2
0x1ca: V138 = S[0x2]
0x1cb: V139 = 0xa
0x1cd: V140 = S[0xa]
0x1ce: V141 = 0x1
0x1d0: V142 = 0xa0
0x1d2: V143 = 0x2
0x1d4: V144 = EXP 0x2 0xa0
0x1d5: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V146 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V147 = 0x8fc
0x1de: V148 = 0x201
0x1e2: V149 = 0x64
0x1e5: V150 = 0x1f5
0x1e9: V151 = CALLVALUE
0x1eb: V152 = 0xffffffff
0x1f0: V153 = 0x535
0x1f3: V154 = AND 0x535 0xffffffff
0x1f4: JUMP 0x535
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V146, 0x8fc, 0x201, 0x64, 0x1f5, V151, V140]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V146, 0x8fc, 0x201, 0x64, 0x1f5, V151, V140]

================================

Block 0x1f5
[0x1f5:0x200]
---
Predecessors: [0x564]
Successors: [0x56b]
---
0x1f5 JUMPDEST
0x1f6 SWAP1
0x1f7 PUSH4 0xffffffff
0x1fc PUSH2 0x56b
0x1ff AND
0x200 JUMP
---
0x1f5: JUMPDEST 
0x1f7: V155 = 0xffffffff
0x1fc: V156 = 0x56b
0x1ff: V157 = AND 0x56b 0xffffffff
0x200: JUMP 0x56b
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x201
[0x201:0x21f]
---
Predecessors: [0x4d0, 0x579, 0x79f]
Successors: [0x220, 0x229]
---
0x201 JUMPDEST
0x202 PUSH1 0x40
0x204 MLOAD
0x205 DUP2
0x206 ISZERO
0x207 SWAP1
0x208 SWAP3
0x209 MUL
0x20a SWAP2
0x20b PUSH1 0x0
0x20d DUP2
0x20e DUP2
0x20f DUP2
0x210 DUP6
0x211 DUP9
0x212 DUP9
0x213 CALL
0x214 SWAP4
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 ISZERO
0x21a DUP1
0x21b ISZERO
0x21c PUSH2 0x229
0x21f JUMPI
---
0x201: JUMPDEST 
0x202: V158 = 0x40
0x204: V159 = M[0x40]
0x206: V160 = ISZERO S0
0x209: V161 = MUL S1 V160
0x20b: V162 = 0x0
0x213: V163 = CALL V161 S2 S0 V159 0x0 V159 0x0
0x219: V164 = ISZERO V163
0x21b: V165 = ISZERO V164
0x21c: V166 = 0x229
0x21f: JUMPI 0x229 V165
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V164]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V164]

================================

Block 0x220
[0x220:0x228]
---
Predecessors: [0x201]
Successors: []
---
0x220 RETURNDATASIZE
0x221 PUSH1 0x0
0x223 DUP1
0x224 RETURNDATACOPY
0x225 RETURNDATASIZE
0x226 PUSH1 0x0
0x228 REVERT
---
0x220: V167 = RETURNDATASIZE
0x221: V168 = 0x0
0x224: RETURNDATACOPY 0x0 0x0 V167
0x225: V169 = RETURNDATASIZE
0x226: V170 = 0x0
0x228: REVERT 0x0 V169
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V164]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V164]

================================

Block 0x229
[0x229:0x23b]
---
Predecessors: [0x201]
Successors: [0x23c, 0x293]
---
0x229 JUMPDEST
0x22a POP
0x22b PUSH1 0xd
0x22d SLOAD
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 AND
0x237 ISZERO
0x238 PUSH2 0x293
0x23b JUMPI
---
0x229: JUMPDEST 
0x22b: V171 = 0xd
0x22d: V172 = S[0xd]
0x22e: V173 = 0x1
0x230: V174 = 0xa0
0x232: V175 = 0x2
0x234: V176 = EXP 0x2 0xa0
0x235: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x237: V179 = ISZERO V178
0x238: V180 = 0x293
0x23b: JUMPI 0x293 V179
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V164]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x23c
[0x23c:0x268]
---
Predecessors: [0x229]
Successors: [0x535]
---
0x23c PUSH1 0xd
0x23e SLOAD
0x23f PUSH1 0xe
0x241 SLOAD
0x242 PUSH1 0x1
0x244 PUSH1 0xa0
0x246 PUSH1 0x2
0x248 EXP
0x249 SUB
0x24a SWAP1
0x24b SWAP2
0x24c AND
0x24d SWAP1
0x24e PUSH2 0x8fc
0x251 SWAP1
0x252 PUSH2 0x269
0x255 SWAP1
0x256 PUSH1 0x64
0x258 SWAP1
0x259 PUSH2 0x1f5
0x25c SWAP1
0x25d CALLVALUE
0x25e SWAP1
0x25f PUSH4 0xffffffff
0x264 PUSH2 0x535
0x267 AND
0x268 JUMP
---
0x23c: V181 = 0xd
0x23e: V182 = S[0xd]
0x23f: V183 = 0xe
0x241: V184 = S[0xe]
0x242: V185 = 0x1
0x244: V186 = 0xa0
0x246: V187 = 0x2
0x248: V188 = EXP 0x2 0xa0
0x249: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V190 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x24e: V191 = 0x8fc
0x252: V192 = 0x269
0x256: V193 = 0x64
0x259: V194 = 0x1f5
0x25d: V195 = CALLVALUE
0x25f: V196 = 0xffffffff
0x264: V197 = 0x535
0x267: V198 = AND 0x535 0xffffffff
0x268: JUMP 0x535
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V190, 0x8fc, 0x269, 0x64, 0x1f5, V195, V184]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V190, 0x8fc, 0x269, 0x64, 0x1f5, V195, V184]

================================

Block 0x269
[0x269:0x287]
---
Predecessors: [0x4d0, 0x579, 0x79f]
Successors: [0x288, 0x291]
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c MLOAD
0x26d DUP2
0x26e ISZERO
0x26f SWAP1
0x270 SWAP3
0x271 MUL
0x272 SWAP2
0x273 PUSH1 0x0
0x275 DUP2
0x276 DUP2
0x277 DUP2
0x278 DUP6
0x279 DUP9
0x27a DUP9
0x27b CALL
0x27c SWAP4
0x27d POP
0x27e POP
0x27f POP
0x280 POP
0x281 ISZERO
0x282 DUP1
0x283 ISZERO
0x284 PUSH2 0x291
0x287 JUMPI
---
0x269: JUMPDEST 
0x26a: V199 = 0x40
0x26c: V200 = M[0x40]
0x26e: V201 = ISZERO S0
0x271: V202 = MUL S1 V201
0x273: V203 = 0x0
0x27b: V204 = CALL V202 S2 S0 V200 0x0 V200 0x0
0x281: V205 = ISZERO V204
0x283: V206 = ISZERO V205
0x284: V207 = 0x291
0x287: JUMPI 0x291 V206
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V205]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V205]

================================

Block 0x288
[0x288:0x290]
---
Predecessors: [0x269]
Successors: []
---
0x288 RETURNDATASIZE
0x289 PUSH1 0x0
0x28b DUP1
0x28c RETURNDATACOPY
0x28d RETURNDATASIZE
0x28e PUSH1 0x0
0x290 REVERT
---
0x288: V208 = RETURNDATASIZE
0x289: V209 = 0x0
0x28c: RETURNDATACOPY 0x0 0x0 V208
0x28d: V210 = RETURNDATASIZE
0x28e: V211 = 0x0
0x290: REVERT 0x0 V210
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V205]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V205]

================================

Block 0x291
[0x291:0x292]
---
Predecessors: [0x269]
Successors: [0x293]
---
0x291 JUMPDEST
0x292 POP
---
0x291: JUMPDEST 
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V205]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x293
[0x293:0x2a4]
---
Predecessors: [0x229, 0x291]
Successors: [0x2a5, 0x2fc]
---
0x293 JUMPDEST
0x294 PUSH1 0xf
0x296 SLOAD
0x297 PUSH1 0x1
0x299 PUSH1 0xa0
0x29b PUSH1 0x2
0x29d EXP
0x29e SUB
0x29f AND
0x2a0 ISZERO
0x2a1 PUSH2 0x2fc
0x2a4 JUMPI
---
0x293: JUMPDEST 
0x294: V212 = 0xf
0x296: V213 = S[0xf]
0x297: V214 = 0x1
0x299: V215 = 0xa0
0x29b: V216 = 0x2
0x29d: V217 = EXP 0x2 0xa0
0x29e: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29f: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x2a0: V220 = ISZERO V219
0x2a1: V221 = 0x2fc
0x2a4: JUMPI 0x2fc V220
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x2a5
[0x2a5:0x2d1]
---
Predecessors: [0x293]
Successors: [0x535]
---
0x2a5 PUSH1 0xf
0x2a7 SLOAD
0x2a8 PUSH1 0x10
0x2aa SLOAD
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 SWAP1
0x2b4 SWAP2
0x2b5 AND
0x2b6 SWAP1
0x2b7 PUSH2 0x8fc
0x2ba SWAP1
0x2bb PUSH2 0x2d2
0x2be SWAP1
0x2bf PUSH1 0x64
0x2c1 SWAP1
0x2c2 PUSH2 0x1f5
0x2c5 SWAP1
0x2c6 CALLVALUE
0x2c7 SWAP1
0x2c8 PUSH4 0xffffffff
0x2cd PUSH2 0x535
0x2d0 AND
0x2d1 JUMP
---
0x2a5: V222 = 0xf
0x2a7: V223 = S[0xf]
0x2a8: V224 = 0x10
0x2aa: V225 = S[0x10]
0x2ab: V226 = 0x1
0x2ad: V227 = 0xa0
0x2af: V228 = 0x2
0x2b1: V229 = EXP 0x2 0xa0
0x2b2: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V231 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V232 = 0x8fc
0x2bb: V233 = 0x2d2
0x2bf: V234 = 0x64
0x2c2: V235 = 0x1f5
0x2c6: V236 = CALLVALUE
0x2c8: V237 = 0xffffffff
0x2cd: V238 = 0x535
0x2d0: V239 = AND 0x535 0xffffffff
0x2d1: JUMP 0x535
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V231, 0x8fc, 0x2d2, 0x64, 0x1f5, V236, V225]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V231, 0x8fc, 0x2d2, 0x64, 0x1f5, V236, V225]

================================

Block 0x2d2
[0x2d2:0x2f0]
---
Predecessors: [0x4d0, 0x579, 0x79f]
Successors: [0x2f1, 0x2fa]
---
0x2d2 JUMPDEST
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP2
0x2d7 ISZERO
0x2d8 SWAP1
0x2d9 SWAP3
0x2da MUL
0x2db SWAP2
0x2dc PUSH1 0x0
0x2de DUP2
0x2df DUP2
0x2e0 DUP2
0x2e1 DUP6
0x2e2 DUP9
0x2e3 DUP9
0x2e4 CALL
0x2e5 SWAP4
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 POP
0x2ea ISZERO
0x2eb DUP1
0x2ec ISZERO
0x2ed PUSH2 0x2fa
0x2f0 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V240 = 0x40
0x2d5: V241 = M[0x40]
0x2d7: V242 = ISZERO S0
0x2da: V243 = MUL S1 V242
0x2dc: V244 = 0x0
0x2e4: V245 = CALL V243 S2 S0 V241 0x0 V241 0x0
0x2ea: V246 = ISZERO V245
0x2ec: V247 = ISZERO V246
0x2ed: V248 = 0x2fa
0x2f0: JUMPI 0x2fa V247
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V246]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V246]

================================

Block 0x2f1
[0x2f1:0x2f9]
---
Predecessors: [0x2d2]
Successors: []
---
0x2f1 RETURNDATASIZE
0x2f2 PUSH1 0x0
0x2f4 DUP1
0x2f5 RETURNDATACOPY
0x2f6 RETURNDATASIZE
0x2f7 PUSH1 0x0
0x2f9 REVERT
---
0x2f1: V249 = RETURNDATASIZE
0x2f2: V250 = 0x0
0x2f5: RETURNDATACOPY 0x0 0x0 V249
0x2f6: V251 = RETURNDATASIZE
0x2f7: V252 = 0x0
0x2f9: REVERT 0x0 V251
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V246]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V246]

================================

Block 0x2fa
[0x2fa:0x2fb]
---
Predecessors: [0x2d2]
Successors: [0x2fc]
---
0x2fa JUMPDEST
0x2fb POP
---
0x2fa: JUMPDEST 
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V246]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2fc
[0x2fc:0x30d]
---
Predecessors: [0x293, 0x2fa]
Successors: [0x30e, 0x365]
---
0x2fc JUMPDEST
0x2fd PUSH1 0x11
0x2ff SLOAD
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 AND
0x309 ISZERO
0x30a PUSH2 0x365
0x30d JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V253 = 0x11
0x2ff: V254 = S[0x11]
0x300: V255 = 0x1
0x302: V256 = 0xa0
0x304: V257 = 0x2
0x306: V258 = EXP 0x2 0xa0
0x307: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x309: V261 = ISZERO V260
0x30a: V262 = 0x365
0x30d: JUMPI 0x365 V261
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x30e
[0x30e:0x33a]
---
Predecessors: [0x2fc]
Successors: [0x535]
---
0x30e PUSH1 0x11
0x310 SLOAD
0x311 PUSH1 0x12
0x313 SLOAD
0x314 PUSH1 0x1
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SUB
0x31c SWAP1
0x31d SWAP2
0x31e AND
0x31f SWAP1
0x320 PUSH2 0x8fc
0x323 SWAP1
0x324 PUSH2 0x33b
0x327 SWAP1
0x328 PUSH1 0x64
0x32a SWAP1
0x32b PUSH2 0x1f5
0x32e SWAP1
0x32f CALLVALUE
0x330 SWAP1
0x331 PUSH4 0xffffffff
0x336 PUSH2 0x535
0x339 AND
0x33a JUMP
---
0x30e: V263 = 0x11
0x310: V264 = S[0x11]
0x311: V265 = 0x12
0x313: V266 = S[0x12]
0x314: V267 = 0x1
0x316: V268 = 0xa0
0x318: V269 = 0x2
0x31a: V270 = EXP 0x2 0xa0
0x31b: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V272 = AND V264 0xffffffffffffffffffffffffffffffffffffffff
0x320: V273 = 0x8fc
0x324: V274 = 0x33b
0x328: V275 = 0x64
0x32b: V276 = 0x1f5
0x32f: V277 = CALLVALUE
0x331: V278 = 0xffffffff
0x336: V279 = 0x535
0x339: V280 = AND 0x535 0xffffffff
0x33a: JUMP 0x535
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V272, 0x8fc, 0x33b, 0x64, 0x1f5, V277, V266]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V272, 0x8fc, 0x33b, 0x64, 0x1f5, V277, V266]

================================

Block 0x33b
[0x33b:0x359]
---
Predecessors: [0x4d0, 0x579, 0x79f]
Successors: [0x35a, 0x363]
---
0x33b JUMPDEST
0x33c PUSH1 0x40
0x33e MLOAD
0x33f DUP2
0x340 ISZERO
0x341 SWAP1
0x342 SWAP3
0x343 MUL
0x344 SWAP2
0x345 PUSH1 0x0
0x347 DUP2
0x348 DUP2
0x349 DUP2
0x34a DUP6
0x34b DUP9
0x34c DUP9
0x34d CALL
0x34e SWAP4
0x34f POP
0x350 POP
0x351 POP
0x352 POP
0x353 ISZERO
0x354 DUP1
0x355 ISZERO
0x356 PUSH2 0x363
0x359 JUMPI
---
0x33b: JUMPDEST 
0x33c: V281 = 0x40
0x33e: V282 = M[0x40]
0x340: V283 = ISZERO S0
0x343: V284 = MUL S1 V283
0x345: V285 = 0x0
0x34d: V286 = CALL V284 S2 S0 V282 0x0 V282 0x0
0x353: V287 = ISZERO V286
0x355: V288 = ISZERO V287
0x356: V289 = 0x363
0x359: JUMPI 0x363 V288
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V287]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V287]

================================

Block 0x35a
[0x35a:0x362]
---
Predecessors: [0x33b]
Successors: []
---
0x35a RETURNDATASIZE
0x35b PUSH1 0x0
0x35d DUP1
0x35e RETURNDATACOPY
0x35f RETURNDATASIZE
0x360 PUSH1 0x0
0x362 REVERT
---
0x35a: V290 = RETURNDATASIZE
0x35b: V291 = 0x0
0x35e: RETURNDATACOPY 0x0 0x0 V290
0x35f: V292 = RETURNDATASIZE
0x360: V293 = 0x0
0x362: REVERT 0x0 V292
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V287]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V287]

================================

Block 0x363
[0x363:0x364]
---
Predecessors: [0x33b]
Successors: [0x365]
---
0x363 JUMPDEST
0x364 POP
---
0x363: JUMPDEST 
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V287]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x365
[0x365:0x392]
---
Predecessors: [0x2fc, 0x363]
Successors: [0x535]
---
0x365 JUMPDEST
0x366 PUSH1 0x0
0x368 SLOAD
0x369 PUSH1 0xb
0x36b SLOAD
0x36c PUSH1 0x1
0x36e PUSH1 0xa0
0x370 PUSH1 0x2
0x372 EXP
0x373 SUB
0x374 SWAP1
0x375 SWAP2
0x376 AND
0x377 SWAP1
0x378 PUSH2 0x8fc
0x37b SWAP1
0x37c PUSH2 0x393
0x37f SWAP1
0x380 PUSH1 0x64
0x382 SWAP1
0x383 PUSH2 0x1f5
0x386 SWAP1
0x387 CALLVALUE
0x388 SWAP1
0x389 PUSH4 0xffffffff
0x38e PUSH2 0x535
0x391 AND
0x392 JUMP
---
0x365: JUMPDEST 
0x366: V294 = 0x0
0x368: V295 = S[0x0]
0x369: V296 = 0xb
0x36b: V297 = S[0xb]
0x36c: V298 = 0x1
0x36e: V299 = 0xa0
0x370: V300 = 0x2
0x372: V301 = EXP 0x2 0xa0
0x373: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x376: V303 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x378: V304 = 0x8fc
0x37c: V305 = 0x393
0x380: V306 = 0x64
0x383: V307 = 0x1f5
0x387: V308 = CALLVALUE
0x389: V309 = 0xffffffff
0x38e: V310 = 0x535
0x391: V311 = AND 0x535 0xffffffff
0x392: JUMP 0x535
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V303, 0x8fc, 0x393, 0x64, 0x1f5, V308, V297]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V303, 0x8fc, 0x393, 0x64, 0x1f5, V308, V297]

================================

Block 0x393
[0x393:0x3b1]
---
Predecessors: [0x4d0, 0x579, 0x79f]
Successors: [0x3b2, 0x3bb]
---
0x393 JUMPDEST
0x394 PUSH1 0x40
0x396 MLOAD
0x397 DUP2
0x398 ISZERO
0x399 SWAP1
0x39a SWAP3
0x39b MUL
0x39c SWAP2
0x39d PUSH1 0x0
0x39f DUP2
0x3a0 DUP2
0x3a1 DUP2
0x3a2 DUP6
0x3a3 DUP9
0x3a4 DUP9
0x3a5 CALL
0x3a6 SWAP4
0x3a7 POP
0x3a8 POP
0x3a9 POP
0x3aa POP
0x3ab ISZERO
0x3ac DUP1
0x3ad ISZERO
0x3ae PUSH2 0x3bb
0x3b1 JUMPI
---
0x393: JUMPDEST 
0x394: V312 = 0x40
0x396: V313 = M[0x40]
0x398: V314 = ISZERO S0
0x39b: V315 = MUL S1 V314
0x39d: V316 = 0x0
0x3a5: V317 = CALL V315 S2 S0 V313 0x0 V313 0x0
0x3ab: V318 = ISZERO V317
0x3ad: V319 = ISZERO V318
0x3ae: V320 = 0x3bb
0x3b1: JUMPI 0x3bb V319
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V318]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V318]

================================

Block 0x3b2
[0x3b2:0x3ba]
---
Predecessors: [0x393]
Successors: []
---
0x3b2 RETURNDATASIZE
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 RETURNDATACOPY
0x3b7 RETURNDATASIZE
0x3b8 PUSH1 0x0
0x3ba REVERT
---
0x3b2: V321 = RETURNDATASIZE
0x3b3: V322 = 0x0
0x3b6: RETURNDATACOPY 0x0 0x0 V321
0x3b7: V323 = RETURNDATASIZE
0x3b8: V324 = 0x0
0x3ba: REVERT 0x0 V323
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V318]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V318]

================================

Block 0x3bb
[0x3bb:0x3fa]
---
Predecessors: [0x393]
Successors: [0x582]
---
0x3bb JUMPDEST
0x3bc POP
0x3bd PUSH1 0x40
0x3bf DUP1
0x3c0 MLOAD
0x3c1 CALLER
0x3c2 DUP2
0x3c3 MSTORE
0x3c4 SWAP1
0x3c5 MLOAD
0x3c6 CALLVALUE
0x3c7 SWAP2
0x3c8 PUSH32 0xc6851889326b4ff916523ef06f539b4cf0b81d78fc6e0f97c30e6223d1831990
0x3e9 SWAP2
0x3ea SWAP1
0x3eb DUP2
0x3ec SWAP1
0x3ed SUB
0x3ee PUSH1 0x20
0x3f0 ADD
0x3f1 SWAP1
0x3f2 LOG2
0x3f3 PUSH2 0x3fb
0x3f6 CALLER
0x3f7 PUSH2 0x582
0x3fa JUMP
---
0x3bb: JUMPDEST 
0x3bd: V325 = 0x40
0x3c0: V326 = M[0x40]
0x3c1: V327 = CALLER
0x3c3: M[V326] = V327
0x3c5: V328 = M[0x40]
0x3c6: V329 = CALLVALUE
0x3c8: V330 = 0xc6851889326b4ff916523ef06f539b4cf0b81d78fc6e0f97c30e6223d1831990
0x3ed: V331 = SUB V326 V328
0x3ee: V332 = 0x20
0x3f0: V333 = ADD 0x20 V331
0x3f2: LOG V328 V333 0xc6851889326b4ff916523ef06f539b4cf0b81d78fc6e0f97c30e6223d1831990 V329
0x3f3: V334 = 0x3fb
0x3f6: V335 = CALLER
0x3f7: V336 = 0x582
0x3fa: JUMP 0x582
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V318]
Stack pops: 1
Stack additions: [0x3fb, V335]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3fb, V335]

================================

Block 0x3fb
[0x3fb:0x405]
---
Predecessors: [0x197, 0x597]
Successors: [0x406, 0x46d]
---
0x3fb JUMPDEST
0x3fc PUSH1 0x9
0x3fe SLOAD
0x3ff CALLVALUE
0x400 LT
0x401 ISZERO
0x402 PUSH2 0x46d
0x405 JUMPI
---
0x3fb: JUMPDEST 
0x3fc: V337 = 0x9
0x3fe: V338 = S[0x9]
0x3ff: V339 = CALLVALUE
0x400: V340 = LT V339 V338
0x401: V341 = ISZERO V340
0x402: V342 = 0x46d
0x405: JUMPI 0x46d V341
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x406
[0x406:0x461]
---
Predecessors: [0x3fb]
Successors: [0x462, 0x46b]
---
0x406 PUSH1 0x40
0x408 DUP1
0x409 MLOAD
0x40a CALLER
0x40b DUP2
0x40c MSTORE
0x40d CALLVALUE
0x40e PUSH1 0x20
0x410 DUP3
0x411 ADD
0x412 MSTORE
0x413 DUP2
0x414 MLOAD
0x415 PUSH32 0x6c244a34f5ff6f78dddabfbd3b653d0eeefea64c12e40e48c37683749f496ce4
0x436 SWAP3
0x437 SWAP2
0x438 DUP2
0x439 SWAP1
0x43a SUB
0x43b SWAP1
0x43c SWAP2
0x43d ADD
0x43e SWAP1
0x43f LOG1
0x440 PUSH1 0x40
0x442 MLOAD
0x443 CALLER
0x444 SWAP1
0x445 CALLVALUE
0x446 DUP1
0x447 ISZERO
0x448 PUSH2 0x8fc
0x44b MUL
0x44c SWAP2
0x44d PUSH1 0x0
0x44f DUP2
0x450 DUP2
0x451 DUP2
0x452 DUP6
0x453 DUP9
0x454 DUP9
0x455 CALL
0x456 SWAP4
0x457 POP
0x458 POP
0x459 POP
0x45a POP
0x45b ISZERO
0x45c DUP1
0x45d ISZERO
0x45e PUSH2 0x46b
0x461 JUMPI
---
0x406: V343 = 0x40
0x409: V344 = M[0x40]
0x40a: V345 = CALLER
0x40c: M[V344] = V345
0x40d: V346 = CALLVALUE
0x40e: V347 = 0x20
0x411: V348 = ADD V344 0x20
0x412: M[V348] = V346
0x414: V349 = M[0x40]
0x415: V350 = 0x6c244a34f5ff6f78dddabfbd3b653d0eeefea64c12e40e48c37683749f496ce4
0x43a: V351 = SUB V344 V349
0x43d: V352 = ADD 0x40 V351
0x43f: LOG V349 V352 0x6c244a34f5ff6f78dddabfbd3b653d0eeefea64c12e40e48c37683749f496ce4
0x440: V353 = 0x40
0x442: V354 = M[0x40]
0x443: V355 = CALLER
0x445: V356 = CALLVALUE
0x447: V357 = ISZERO V356
0x448: V358 = 0x8fc
0x44b: V359 = MUL 0x8fc V357
0x44d: V360 = 0x0
0x455: V361 = CALL V359 V355 V356 V354 0x0 V354 0x0
0x45b: V362 = ISZERO V361
0x45d: V363 = ISZERO V362
0x45e: V364 = 0x46b
0x461: JUMPI 0x46b V363
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V362]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V362]

================================

Block 0x462
[0x462:0x46a]
---
Predecessors: [0x406]
Successors: []
---
0x462 RETURNDATASIZE
0x463 PUSH1 0x0
0x465 DUP1
0x466 RETURNDATACOPY
0x467 RETURNDATASIZE
0x468 PUSH1 0x0
0x46a REVERT
---
0x462: V365 = RETURNDATASIZE
0x463: V366 = 0x0
0x466: RETURNDATACOPY 0x0 0x0 V365
0x467: V367 = RETURNDATASIZE
0x468: V368 = 0x0
0x46a: REVERT 0x0 V367
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V362]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V362]

================================

Block 0x46b
[0x46b:0x46c]
---
Predecessors: [0x406]
Successors: [0x46d]
---
0x46b JUMPDEST
0x46c POP
---
0x46b: JUMPDEST 
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V362]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x46d
[0x46d:0x471]
---
Predecessors: [0x3fb, 0x46b, 0x49a, 0x4a8, 0x4d0, 0x564, 0x79f]
Successors: [0x4d0]
---
0x46d JUMPDEST
0x46e PUSH2 0x4d0
0x471 JUMP
---
0x46d: JUMPDEST 
0x46e: V369 = 0x4d0
0x471: JUMP 0x4d0
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x472
[0x472:0x485]
---
Predecessors: [0x18d]
Successors: [0x486, 0x4ad]
---
0x472 JUMPDEST
0x473 PUSH1 0x0
0x475 SLOAD
0x476 PUSH1 0x1
0x478 PUSH1 0xa0
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e AND
0x47f CALLER
0x480 EQ
0x481 ISZERO
0x482 PUSH2 0x4ad
0x485 JUMPI
---
0x472: JUMPDEST 
0x473: V370 = 0x0
0x475: V371 = S[0x0]
0x476: V372 = 0x1
0x478: V373 = 0xa0
0x47a: V374 = 0x2
0x47c: V375 = EXP 0x2 0xa0
0x47d: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x47f: V378 = CALLER
0x480: V379 = EQ V378 V377
0x481: V380 = ISZERO V379
0x482: V381 = 0x4ad
0x485: JUMPI 0x4ad V380
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x486
[0x486:0x499]
---
Predecessors: [0x472]
Successors: [0x5ff]
---
0x486 PUSH1 0x3
0x488 SLOAD
0x489 PUSH1 0x1
0x48b SLOAD
0x48c PUSH2 0x49a
0x48f SWAP2
0x490 PUSH4 0xffffffff
0x495 PUSH2 0x5ff
0x498 AND
0x499 JUMP
---
0x486: V382 = 0x3
0x488: V383 = S[0x3]
0x489: V384 = 0x1
0x48b: V385 = S[0x1]
0x48c: V386 = 0x49a
0x490: V387 = 0xffffffff
0x495: V388 = 0x5ff
0x498: V389 = AND 0x5ff 0xffffffff
0x499: JUMP 0x5ff
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x49a, V385, V383]
Exit stack: [V11, 0xa0, 0x49a, V385, V383]

================================

Block 0x49a
[0x49a:0x4a0]
---
Predecessors: [0x564]
Successors: [0x46d, 0x4a1]
---
0x49a JUMPDEST
0x49b TIMESTAMP
0x49c LT
0x49d PUSH2 0x46d
0x4a0 JUMPI
---
0x49a: JUMPDEST 
0x49b: V390 = TIMESTAMP
0x49c: V391 = LT V390 S0
0x49d: V392 = 0x46d
0x4a0: JUMPI 0x46d V391
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x4a1
[0x4a1:0x4a7]
---
Predecessors: [0x49a]
Successors: [0x60e]
---
0x4a1 PUSH2 0x4a8
0x4a4 PUSH2 0x60e
0x4a7 JUMP
---
0x4a1: V393 = 0x4a8
0x4a4: V394 = 0x60e
0x4a7: JUMP 0x60e
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4a8]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4a8]

================================

Block 0x4a8
[0x4a8:0x4ac]
---
Predecessors: [0x4d0, 0x564, 0x79f]
Successors: [0x46d]
---
0x4a8 JUMPDEST
0x4a9 PUSH2 0x46d
0x4ac JUMP
---
0x4a8: JUMPDEST 
0x4a9: V395 = 0x46d
0x4ac: JUMP 0x46d
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4ad
[0x4ad:0x4c1]
---
Predecessors: [0x472]
Successors: [0x5ff]
---
0x4ad JUMPDEST
0x4ae PUSH1 0x4
0x4b0 SLOAD
0x4b1 PUSH1 0x1
0x4b3 SLOAD
0x4b4 PUSH2 0x4c2
0x4b7 SWAP2
0x4b8 PUSH4 0xffffffff
0x4bd PUSH2 0x5ff
0x4c0 AND
0x4c1 JUMP
---
0x4ad: JUMPDEST 
0x4ae: V396 = 0x4
0x4b0: V397 = S[0x4]
0x4b1: V398 = 0x1
0x4b3: V399 = S[0x1]
0x4b4: V400 = 0x4c2
0x4b8: V401 = 0xffffffff
0x4bd: V402 = 0x5ff
0x4c0: V403 = AND 0x5ff 0xffffffff
0x4c1: JUMP 0x5ff
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x4c2, V399, V397]
Exit stack: [V11, 0xa0, 0x4c2, V399, V397]

================================

Block 0x4c2
[0x4c2:0x4c8]
---
Predecessors: [0x564]
Successors: [0x4c9, 0x4d0]
---
0x4c2 JUMPDEST
0x4c3 TIMESTAMP
0x4c4 LT
0x4c5 PUSH2 0x4d0
0x4c8 JUMPI
---
0x4c2: JUMPDEST 
0x4c3: V404 = TIMESTAMP
0x4c4: V405 = LT V404 S0
0x4c5: V406 = 0x4d0
0x4c8: JUMPI 0x4d0 V405
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x4c9
[0x4c9:0x4cf]
---
Predecessors: [0x4c2]
Successors: [0x60e]
---
0x4c9 PUSH2 0x46d
0x4cc PUSH2 0x60e
0x4cf JUMP
---
0x4c9: V407 = 0x46d
0x4cc: V408 = 0x60e
0x4cf: JUMP 0x60e
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x46d]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x46d]

================================

Block 0x4d0
[0x4d0:0x4d1]
---
Predecessors: [0x46d, 0x4c2]
Successors: [0xa0, 0x201, 0x269, 0x2d2, 0x33b, 0x393, 0x46d, 0x4a8, 0x71d, 0x729, 0x777]
---
0x4d0 JUMPDEST
0x4d1 JUMP
---
0x4d0: JUMPDEST 
0x4d1: JUMP S0
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x4d2
[0x4d2:0x4d7]
---
Predecessors: [0xae]
Successors: [0xb7]
---
0x4d2 JUMPDEST
0x4d3 PUSH1 0x1
0x4d5 SLOAD
0x4d6 DUP2
0x4d7 JUMP
---
0x4d2: JUMPDEST 
0x4d3: V409 = 0x1
0x4d5: V410 = S[0x1]
0x4d7: JUMP 0xb7
---
Entry stack: [V11, 0xb7]
Stack pops: 1
Stack additions: [S0, V410]
Exit stack: [V11, 0xb7, V410]

================================

Block 0x4d8
[0x4d8:0x4e6]
---
Predecessors: [0xd5]
Successors: [0xde]
---
0x4d8 JUMPDEST
0x4d9 PUSH1 0x11
0x4db SLOAD
0x4dc PUSH1 0x1
0x4de PUSH1 0xa0
0x4e0 PUSH1 0x2
0x4e2 EXP
0x4e3 SUB
0x4e4 AND
0x4e5 DUP2
0x4e6 JUMP
---
0x4d8: JUMPDEST 
0x4d9: V411 = 0x11
0x4db: V412 = S[0x11]
0x4dc: V413 = 0x1
0x4de: V414 = 0xa0
0x4e0: V415 = 0x2
0x4e2: V416 = EXP 0x2 0xa0
0x4e3: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e4: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x4e6: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V418]
Exit stack: [V11, 0xde, V418]

================================

Block 0x4e7
[0x4e7:0x4f5]
---
Predecessors: [0x106]
Successors: [0xde]
---
0x4e7 JUMPDEST
0x4e8 PUSH1 0xf
0x4ea SLOAD
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 AND
0x4f4 DUP2
0x4f5 JUMP
---
0x4e7: JUMPDEST 
0x4e8: V419 = 0xf
0x4ea: V420 = S[0xf]
0x4eb: V421 = 0x1
0x4ed: V422 = 0xa0
0x4ef: V423 = 0x2
0x4f1: V424 = EXP 0x2 0xa0
0x4f2: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x4f5: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V426]
Exit stack: [V11, 0xde, V426]

================================

Block 0x4f6
[0x4f6:0x4fb]
---
Predecessors: [0x11b]
Successors: [0xb7]
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x6
0x4f9 SLOAD
0x4fa DUP2
0x4fb JUMP
---
0x4f6: JUMPDEST 
0x4f7: V427 = 0x6
0x4f9: V428 = S[0x6]
0x4fb: JUMP 0xb7
---
Entry stack: [V11, 0xb7]
Stack pops: 1
Stack additions: [S0, V428]
Exit stack: [V11, 0xb7, V428]

================================

Block 0x4fc
[0x4fc:0x50a]
---
Predecessors: [0x130]
Successors: [0xde]
---
0x4fc JUMPDEST
0x4fd PUSH1 0x0
0x4ff SLOAD
0x500 PUSH1 0x1
0x502 PUSH1 0xa0
0x504 PUSH1 0x2
0x506 EXP
0x507 SUB
0x508 AND
0x509 DUP2
0x50a JUMP
---
0x4fc: JUMPDEST 
0x4fd: V429 = 0x0
0x4ff: V430 = S[0x0]
0x500: V431 = 0x1
0x502: V432 = 0xa0
0x504: V433 = 0x2
0x506: V434 = EXP 0x2 0xa0
0x507: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x508: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x50a: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V436]
Exit stack: [V11, 0xde, V436]

================================

Block 0x50b
[0x50b:0x510]
---
Predecessors: [0x145]
Successors: [0xb7]
---
0x50b JUMPDEST
0x50c PUSH1 0x9
0x50e SLOAD
0x50f DUP2
0x510 JUMP
---
0x50b: JUMPDEST 
0x50c: V437 = 0x9
0x50e: V438 = S[0x9]
0x510: JUMP 0xb7
---
Entry stack: [V11, 0xb7]
Stack pops: 1
Stack additions: [S0, V438]
Exit stack: [V11, 0xb7, V438]

================================

Block 0x511
[0x511:0x516]
---
Predecessors: [0x15a]
Successors: [0xb7]
---
0x511 JUMPDEST
0x512 PUSH1 0x7
0x514 SLOAD
0x515 DUP2
0x516 JUMP
---
0x511: JUMPDEST 
0x512: V439 = 0x7
0x514: V440 = S[0x7]
0x516: JUMP 0xb7
---
Entry stack: [V11, 0xb7]
Stack pops: 1
Stack additions: [S0, V440]
Exit stack: [V11, 0xb7, V440]

================================

Block 0x517
[0x517:0x525]
---
Predecessors: [0x16f]
Successors: [0xde]
---
0x517 JUMPDEST
0x518 PUSH1 0x2
0x51a SLOAD
0x51b PUSH1 0x1
0x51d PUSH1 0xa0
0x51f PUSH1 0x2
0x521 EXP
0x522 SUB
0x523 AND
0x524 DUP2
0x525 JUMP
---
0x517: JUMPDEST 
0x518: V441 = 0x2
0x51a: V442 = S[0x2]
0x51b: V443 = 0x1
0x51d: V444 = 0xa0
0x51f: V445 = 0x2
0x521: V446 = EXP 0x2 0xa0
0x522: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x523: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x525: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V448]
Exit stack: [V11, 0xde, V448]

================================

Block 0x526
[0x526:0x534]
---
Predecessors: [0x184]
Successors: [0xde]
---
0x526 JUMPDEST
0x527 PUSH1 0xd
0x529 SLOAD
0x52a PUSH1 0x1
0x52c PUSH1 0xa0
0x52e PUSH1 0x2
0x530 EXP
0x531 SUB
0x532 AND
0x533 DUP2
0x534 JUMP
---
0x526: JUMPDEST 
0x527: V449 = 0xd
0x529: V450 = S[0xd]
0x52a: V451 = 0x1
0x52c: V452 = 0xa0
0x52e: V453 = 0x2
0x530: V454 = EXP 0x2 0xa0
0x531: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x532: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x534: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V456]
Exit stack: [V11, 0xde, V456]

================================

Block 0x535
[0x535:0x53f]
---
Predecessors: [0x1a0, 0x1c4, 0x23c, 0x2a5, 0x30e, 0x365, 0x60e, 0x711, 0x729]
Successors: [0x540, 0x548]
---
0x535 JUMPDEST
0x536 PUSH1 0x0
0x538 DUP1
0x539 DUP4
0x53a ISZERO
0x53b ISZERO
0x53c PUSH2 0x548
0x53f JUMPI
---
0x535: JUMPDEST 
0x536: V457 = 0x0
0x53a: V458 = ISZERO S1
0x53b: V459 = ISZERO V458
0x53c: V460 = 0x548
0x53f: JUMPI 0x548 V459
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0]

================================

Block 0x540
[0x540:0x547]
---
Predecessors: [0x535]
Successors: [0x564]
---
0x540 PUSH1 0x0
0x542 SWAP2
0x543 POP
0x544 PUSH2 0x564
0x547 JUMP
---
0x540: V461 = 0x0
0x544: V462 = 0x564
0x547: JUMP 0x564
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x548
[0x548:0x556]
---
Predecessors: [0x535]
Successors: [0x557, 0x558]
---
0x548 JUMPDEST
0x549 POP
0x54a DUP3
0x54b DUP3
0x54c MUL
0x54d DUP3
0x54e DUP5
0x54f DUP3
0x550 DUP2
0x551 ISZERO
0x552 ISZERO
0x553 PUSH2 0x558
0x556 JUMPI
---
0x548: JUMPDEST 
0x54c: V463 = MUL S2 S3
0x551: V464 = ISZERO S3
0x552: V465 = ISZERO V464
0x553: V466 = 0x558
0x556: JUMPI 0x558 V465
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V463, S2, S3, V463]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V463, S2, S3, V463]

================================

Block 0x557
[0x557:0x557]
---
Predecessors: [0x548]
Successors: []
---
0x557 INVALID
---
0x557: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V463, S2, S1, V463]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V463, S2, S1, V463]

================================

Block 0x558
[0x558:0x55e]
---
Predecessors: [0x548]
Successors: [0x55f, 0x560]
---
0x558 JUMPDEST
0x559 DIV
0x55a EQ
0x55b PUSH2 0x560
0x55e JUMPI
---
0x558: JUMPDEST 
0x559: V467 = DIV V463 S1
0x55a: V468 = EQ V467 S2
0x55b: V469 = 0x560
0x55e: JUMPI 0x560 V468
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V463, S2, S1, V463]
Stack pops: 3
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V463]

================================

Block 0x55f
[0x55f:0x55f]
---
Predecessors: [0x558]
Successors: []
---
0x55f INVALID
---
0x55f: INVALID 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x64, 0xa0, 0x729, 0x777}, {0x1c4, 0x1f5, 0x6f0}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x64, 0xa0, 0x729, 0x777}, {0x1c4, 0x1f5, 0x6f0}, S3, S2, 0x0, S0]

================================

Block 0x560
[0x560:0x563]
---
Predecessors: [0x558, 0x5ff]
Successors: [0x564]
---
0x560 JUMPDEST
0x561 DUP1
0x562 SWAP2
0x563 POP
---
0x560: JUMPDEST 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0x564
[0x564:0x56a]
---
Predecessors: [0x540, 0x560]
Successors: [0xa0, 0x1c4, 0x1f5, 0x46d, 0x49a, 0x4a8, 0x4c2, 0x6f0, 0x729, 0x777]
---
0x564 JUMPDEST
0x565 POP
0x566 SWAP3
0x567 SWAP2
0x568 POP
0x569 POP
0x56a JUMP
---
0x564: JUMPDEST 
0x56a: JUMP S4
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0x56b
[0x56b:0x577]
---
Predecessors: [0x1f5, 0x6f0]
Successors: [0x578, 0x579]
---
0x56b JUMPDEST
0x56c PUSH1 0x0
0x56e DUP1
0x56f DUP3
0x570 DUP5
0x571 DUP2
0x572 ISZERO
0x573 ISZERO
0x574 PUSH2 0x579
0x577 JUMPI
---
0x56b: JUMPDEST 
0x56c: V470 = 0x0
0x572: V471 = ISZERO S0
0x573: V472 = ISZERO V471
0x574: V473 = 0x579
0x577: JUMPI 0x579 V472
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x578
[0x578:0x578]
---
Predecessors: [0x56b]
Successors: []
---
0x578 INVALID
---
0x578: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x2, 0x64, 0xa0, 0x729, 0x777}, 0x0, 0x0, {0x2, 0x64, 0xa0, 0x729, 0x777}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x2, 0x64, 0xa0, 0x729, 0x777}, 0x0, 0x0, {0x2, 0x64, 0xa0, 0x729, 0x777}, S0]

================================

Block 0x579
[0x579:0x581]
---
Predecessors: [0x56b]
Successors: [0x201, 0x269, 0x2d2, 0x33b, 0x393, 0x711, 0x71d]
---
0x579 JUMPDEST
0x57a DIV
0x57b SWAP5
0x57c SWAP4
0x57d POP
0x57e POP
0x57f POP
0x580 POP
0x581 JUMP
---
0x579: JUMPDEST 
0x57a: V474 = DIV S0 {0x2, 0x64, 0xa0, 0x729, 0x777}
0x581: JUMP S6
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x2, 0x64, 0xa0, 0x729, 0x777}, 0x0, 0x0, {0x2, 0x64, 0xa0, 0x729, 0x777}, S0]
Stack pops: 7
Stack additions: [V474]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V474]

================================

Block 0x582
[0x582:0x592]
---
Predecessors: [0x3bb]
Successors: [0x593, 0x597]
---
0x582 JUMPDEST
0x583 PUSH1 0x1
0x585 PUSH1 0xa0
0x587 PUSH1 0x2
0x589 EXP
0x58a SUB
0x58b DUP2
0x58c AND
0x58d ISZERO
0x58e ISZERO
0x58f PUSH2 0x597
0x592 JUMPI
---
0x582: JUMPDEST 
0x583: V475 = 0x1
0x585: V476 = 0xa0
0x587: V477 = 0x2
0x589: V478 = EXP 0x2 0xa0
0x58a: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58c: V480 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x58d: V481 = ISZERO V480
0x58e: V482 = ISZERO V481
0x58f: V483 = 0x597
0x592: JUMPI 0x597 V482
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]

================================

Block 0x593
[0x593:0x596]
---
Predecessors: [0x582]
Successors: []
---
0x593 PUSH1 0x0
0x595 DUP1
0x596 REVERT
---
0x593: V484 = 0x0
0x596: REVERT 0x0 0x0
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]

================================

Block 0x597
[0x597:0x5fe]
---
Predecessors: [0x582]
Successors: [0x3fb]
---
0x597 JUMPDEST
0x598 PUSH1 0x0
0x59a DUP1
0x59b SLOAD
0x59c PUSH1 0x40
0x59e MLOAD
0x59f PUSH1 0x1
0x5a1 PUSH1 0xa0
0x5a3 PUSH1 0x2
0x5a5 EXP
0x5a6 SUB
0x5a7 DUP1
0x5a8 DUP6
0x5a9 AND
0x5aa SWAP4
0x5ab SWAP3
0x5ac AND
0x5ad SWAP2
0x5ae PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5cf SWAP2
0x5d0 LOG3
0x5d1 PUSH1 0x0
0x5d3 DUP1
0x5d4 SLOAD
0x5d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ea NOT
0x5eb AND
0x5ec PUSH1 0x1
0x5ee PUSH1 0xa0
0x5f0 PUSH1 0x2
0x5f2 EXP
0x5f3 SUB
0x5f4 SWAP3
0x5f5 SWAP1
0x5f6 SWAP3
0x5f7 AND
0x5f8 SWAP2
0x5f9 SWAP1
0x5fa SWAP2
0x5fb OR
0x5fc SWAP1
0x5fd SSTORE
0x5fe JUMP
---
0x597: JUMPDEST 
0x598: V485 = 0x0
0x59b: V486 = S[0x0]
0x59c: V487 = 0x40
0x59e: V488 = M[0x40]
0x59f: V489 = 0x1
0x5a1: V490 = 0xa0
0x5a3: V491 = 0x2
0x5a5: V492 = EXP 0x2 0xa0
0x5a6: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a9: V494 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V495 = AND V486 0xffffffffffffffffffffffffffffffffffffffff
0x5ae: V496 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5d0: LOG V488 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V495 V494
0x5d1: V497 = 0x0
0x5d4: V498 = S[0x0]
0x5d5: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ea: V500 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5eb: V501 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V498
0x5ec: V502 = 0x1
0x5ee: V503 = 0xa0
0x5f0: V504 = 0x2
0x5f2: V505 = EXP 0x2 0xa0
0x5f3: V506 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f7: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x5fb: V508 = OR V507 V501
0x5fd: S[0x0] = V508
0x5fe: JUMP 0x3fb
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]
Stack pops: 2
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x5ff
[0x5ff:0x60c]
---
Predecessors: [0x486, 0x4ad, 0x71d]
Successors: [0x560, 0x60d]
---
0x5ff JUMPDEST
0x600 PUSH1 0x0
0x602 DUP3
0x603 DUP3
0x604 ADD
0x605 DUP4
0x606 DUP2
0x607 LT
0x608 ISZERO
0x609 PUSH2 0x560
0x60c JUMPI
---
0x5ff: JUMPDEST 
0x600: V509 = 0x0
0x604: V510 = ADD S0 S1
0x607: V511 = LT V510 S1
0x608: V512 = ISZERO V511
0x609: V513 = 0x560
0x60c: JUMPI 0x560 V512
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V510]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V510]

================================

Block 0x60d
[0x60d:0x60d]
---
Predecessors: [0x5ff]
Successors: []
---
0x60d INVALID
---
0x60d: INVALID 
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V510]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V510]

================================

Block 0x60e
[0x60e:0x6ef]
---
Predecessors: [0x4a1, 0x4c9]
Successors: [0x535]
---
0x60e JUMPDEST
0x60f PUSH1 0x7
0x611 DUP1
0x612 SLOAD
0x613 PUSH1 0x1
0x615 SWAP1
0x616 DUP2
0x617 ADD
0x618 SWAP1
0x619 SWAP2
0x61a SSTORE
0x61b TIMESTAMP
0x61c SWAP1
0x61d SSTORE
0x61e PUSH1 0xd
0x620 DUP1
0x621 SLOAD
0x622 PUSH1 0xf
0x624 DUP1
0x625 SLOAD
0x626 PUSH1 0x1
0x628 PUSH1 0xa0
0x62a PUSH1 0x2
0x62c EXP
0x62d SUB
0x62e DUP1
0x62f DUP5
0x630 AND
0x631 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x646 NOT
0x647 SWAP3
0x648 DUP4
0x649 AND
0x64a OR
0x64b SWAP3
0x64c DUP4
0x64d SWAP1
0x64e SSTORE
0x64f PUSH1 0x11
0x651 DUP1
0x652 SLOAD
0x653 SWAP4
0x654 DUP3
0x655 AND
0x656 SWAP4
0x657 DUP4
0x658 AND
0x659 SWAP4
0x65a SWAP1
0x65b SWAP4
0x65c OR
0x65d SWAP1
0x65e SWAP3
0x65f SSTORE
0x660 PUSH1 0x0
0x662 SLOAD
0x663 SWAP1
0x664 SWAP2
0x665 AND
0x666 SWAP2
0x667 AND
0x668 OR
0x669 SWAP1
0x66a SSTORE
0x66b PUSH1 0x9
0x66d SLOAD
0x66e PUSH1 0x40
0x670 DUP1
0x671 MLOAD
0x672 CALLER
0x673 DUP2
0x674 MSTORE
0x675 PUSH1 0x20
0x677 DUP2
0x678 ADD
0x679 SWAP3
0x67a SWAP1
0x67b SWAP3
0x67c MSTORE
0x67d DUP1
0x67e MLOAD
0x67f PUSH32 0xb65810055505787fa0facf68d8c6d62d27e70eb23ba720089d71dc8981960ffc
0x6a0 SWAP3
0x6a1 DUP2
0x6a2 SWAP1
0x6a3 SUB
0x6a4 SWAP1
0x6a5 SWAP2
0x6a6 ADD
0x6a7 SWAP1
0x6a8 LOG1
0x6a9 PUSH1 0x0
0x6ab SLOAD
0x6ac PUSH1 0x5
0x6ae SLOAD
0x6af PUSH1 0x8
0x6b1 SLOAD
0x6b2 PUSH32 0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6
0x6d3 SWAP3
0x6d4 PUSH1 0x1
0x6d6 PUSH1 0xa0
0x6d8 PUSH1 0x2
0x6da EXP
0x6db SUB
0x6dc AND
0x6dd SWAP2
0x6de PUSH2 0x729
0x6e1 SWAP2
0x6e2 PUSH2 0x6f0
0x6e5 SWAP2
0x6e6 PUSH4 0xffffffff
0x6eb PUSH2 0x535
0x6ee AND
0x6ef JUMP
---
0x60e: JUMPDEST 
0x60f: V514 = 0x7
0x612: V515 = S[0x7]
0x613: V516 = 0x1
0x617: V517 = ADD 0x1 V515
0x61a: S[0x7] = V517
0x61b: V518 = TIMESTAMP
0x61d: S[0x1] = V518
0x61e: V519 = 0xd
0x621: V520 = S[0xd]
0x622: V521 = 0xf
0x625: V522 = S[0xf]
0x626: V523 = 0x1
0x628: V524 = 0xa0
0x62a: V525 = 0x2
0x62c: V526 = EXP 0x2 0xa0
0x62d: V527 = SUB 0x10000000000000000000000000000000000000000 0x1
0x630: V528 = AND V520 0xffffffffffffffffffffffffffffffffffffffff
0x631: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x646: V530 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x649: V531 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V522
0x64a: V532 = OR V531 V528
0x64e: S[0xf] = V532
0x64f: V533 = 0x11
0x652: V534 = S[0x11]
0x655: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x658: V536 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V534
0x65c: V537 = OR V536 V535
0x65f: S[0x11] = V537
0x660: V538 = 0x0
0x662: V539 = S[0x0]
0x665: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x667: V541 = AND V520 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x668: V542 = OR V541 V540
0x66a: S[0xd] = V542
0x66b: V543 = 0x9
0x66d: V544 = S[0x9]
0x66e: V545 = 0x40
0x671: V546 = M[0x40]
0x672: V547 = CALLER
0x674: M[V546] = V547
0x675: V548 = 0x20
0x678: V549 = ADD V546 0x20
0x67c: M[V549] = V544
0x67e: V550 = M[0x40]
0x67f: V551 = 0xb65810055505787fa0facf68d8c6d62d27e70eb23ba720089d71dc8981960ffc
0x6a3: V552 = SUB V546 V550
0x6a6: V553 = ADD 0x40 V552
0x6a8: LOG V550 V553 0xb65810055505787fa0facf68d8c6d62d27e70eb23ba720089d71dc8981960ffc
0x6a9: V554 = 0x0
0x6ab: V555 = S[0x0]
0x6ac: V556 = 0x5
0x6ae: V557 = S[0x5]
0x6af: V558 = 0x8
0x6b1: V559 = S[0x8]
0x6b2: V560 = 0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6
0x6d4: V561 = 0x1
0x6d6: V562 = 0xa0
0x6d8: V563 = 0x2
0x6da: V564 = EXP 0x2 0xa0
0x6db: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dc: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x6de: V567 = 0x729
0x6e2: V568 = 0x6f0
0x6e6: V569 = 0xffffffff
0x6eb: V570 = 0x535
0x6ee: V571 = AND 0x535 0xffffffff
0x6ef: JUMP 0x535
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x46d, 0x4a8}]
Stack pops: 0
Stack additions: [0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6, V566, 0x729, 0x6f0, V559, V557]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x46d, 0x4a8}, 0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6, V566, 0x729, 0x6f0, V559, V557]

================================

Block 0x6f0
[0x6f0:0x710]
---
Predecessors: [0x564]
Successors: [0x56b]
---
0x6f0 JUMPDEST
0x6f1 PUSH2 0x71d
0x6f4 PUSH1 0x64
0x6f6 PUSH2 0x1f5
0x6f9 PUSH1 0xc
0x6fb SLOAD
0x6fc PUSH2 0x711
0x6ff PUSH1 0x2
0x701 PUSH1 0x9
0x703 SLOAD
0x704 PUSH2 0x56b
0x707 SWAP1
0x708 SWAP2
0x709 SWAP1
0x70a PUSH4 0xffffffff
0x70f AND
0x710 JUMP
---
0x6f0: JUMPDEST 
0x6f1: V572 = 0x71d
0x6f4: V573 = 0x64
0x6f6: V574 = 0x1f5
0x6f9: V575 = 0xc
0x6fb: V576 = S[0xc]
0x6fc: V577 = 0x711
0x6ff: V578 = 0x2
0x701: V579 = 0x9
0x703: V580 = S[0x9]
0x704: V581 = 0x56b
0x70a: V582 = 0xffffffff
0x70f: V583 = AND 0xffffffff 0x56b
0x710: JUMP 0x56b
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x71d, 0x64, 0x1f5, V576, 0x711, V580, 0x2]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x71d, 0x64, 0x1f5, V576, 0x711, V580, 0x2]

================================

Block 0x711
[0x711:0x71c]
---
Predecessors: [0x579]
Successors: [0x535]
---
0x711 JUMPDEST
0x712 SWAP1
0x713 PUSH4 0xffffffff
0x718 PUSH2 0x535
0x71b AND
0x71c JUMP
---
0x711: JUMPDEST 
0x713: V584 = 0xffffffff
0x718: V585 = 0x535
0x71b: V586 = AND 0x535 0xffffffff
0x71c: JUMP 0x535
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V474]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V474, S1]

================================

Block 0x71d
[0x71d:0x728]
---
Predecessors: [0x4d0, 0x579, 0x79f]
Successors: [0x5ff]
---
0x71d JUMPDEST
0x71e SWAP1
0x71f PUSH4 0xffffffff
0x724 PUSH2 0x5ff
0x727 AND
0x728 JUMP
---
0x71d: JUMPDEST 
0x71f: V587 = 0xffffffff
0x724: V588 = 0x5ff
0x727: V589 = AND 0x5ff 0xffffffff
0x728: JUMP 0x5ff
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x729
[0x729:0x776]
---
Predecessors: [0x4d0, 0x564, 0x79f]
Successors: [0x535]
---
0x729 JUMPDEST
0x72a PUSH1 0x40
0x72c DUP1
0x72d MLOAD
0x72e PUSH1 0x1
0x730 PUSH1 0xa0
0x732 PUSH1 0x2
0x734 EXP
0x735 SUB
0x736 SWAP1
0x737 SWAP4
0x738 AND
0x739 DUP4
0x73a MSTORE
0x73b PUSH1 0x20
0x73d DUP4
0x73e ADD
0x73f SWAP2
0x740 SWAP1
0x741 SWAP2
0x742 MSTORE
0x743 DUP1
0x744 MLOAD
0x745 SWAP2
0x746 DUP3
0x747 SWAP1
0x748 SUB
0x749 ADD
0x74a SWAP1
0x74b LOG1
0x74c PUSH1 0x0
0x74e SLOAD
0x74f PUSH1 0x5
0x751 SLOAD
0x752 PUSH1 0x8
0x754 SLOAD
0x755 PUSH1 0x1
0x757 PUSH1 0xa0
0x759 PUSH1 0x2
0x75b EXP
0x75c SUB
0x75d SWAP1
0x75e SWAP3
0x75f AND
0x760 SWAP2
0x761 PUSH2 0x8fc
0x764 SWAP2
0x765 PUSH2 0x777
0x768 SWAP2
0x769 PUSH2 0x6f0
0x76c SWAP2
0x76d PUSH4 0xffffffff
0x772 PUSH2 0x535
0x775 AND
0x776 JUMP
---
0x729: JUMPDEST 
0x72a: V590 = 0x40
0x72d: V591 = M[0x40]
0x72e: V592 = 0x1
0x730: V593 = 0xa0
0x732: V594 = 0x2
0x734: V595 = EXP 0x2 0xa0
0x735: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x738: V597 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x73a: M[V591] = V597
0x73b: V598 = 0x20
0x73e: V599 = ADD V591 0x20
0x742: M[V599] = S0
0x744: V600 = M[0x40]
0x748: V601 = SUB V591 V600
0x749: V602 = ADD V601 0x40
0x74b: LOG V600 V602 S2
0x74c: V603 = 0x0
0x74e: V604 = S[0x0]
0x74f: V605 = 0x5
0x751: V606 = S[0x5]
0x752: V607 = 0x8
0x754: V608 = S[0x8]
0x755: V609 = 0x1
0x757: V610 = 0xa0
0x759: V611 = 0x2
0x75b: V612 = EXP 0x2 0xa0
0x75c: V613 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75f: V614 = AND V604 0xffffffffffffffffffffffffffffffffffffffff
0x761: V615 = 0x8fc
0x765: V616 = 0x777
0x769: V617 = 0x6f0
0x76d: V618 = 0xffffffff
0x772: V619 = 0x535
0x775: V620 = AND 0x535 0xffffffff
0x776: JUMP 0x535
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V614, 0x8fc, 0x777, 0x6f0, V608, V606]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V614, 0x8fc, 0x777, 0x6f0, V608, V606]

================================

Block 0x777
[0x777:0x795]
---
Predecessors: [0x4d0, 0x564, 0x79f]
Successors: [0x796, 0x79f]
---
0x777 JUMPDEST
0x778 PUSH1 0x40
0x77a MLOAD
0x77b DUP2
0x77c ISZERO
0x77d SWAP1
0x77e SWAP3
0x77f MUL
0x780 SWAP2
0x781 PUSH1 0x0
0x783 DUP2
0x784 DUP2
0x785 DUP2
0x786 DUP6
0x787 DUP9
0x788 DUP9
0x789 CALL
0x78a SWAP4
0x78b POP
0x78c POP
0x78d POP
0x78e POP
0x78f ISZERO
0x790 DUP1
0x791 ISZERO
0x792 PUSH2 0x79f
0x795 JUMPI
---
0x777: JUMPDEST 
0x778: V621 = 0x40
0x77a: V622 = M[0x40]
0x77c: V623 = ISZERO S0
0x77f: V624 = MUL S1 V623
0x781: V625 = 0x0
0x789: V626 = CALL V624 S2 S0 V622 0x0 V622 0x0
0x78f: V627 = ISZERO V626
0x791: V628 = ISZERO V627
0x792: V629 = 0x79f
0x795: JUMPI 0x79f V628
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V627]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V627]

================================

Block 0x796
[0x796:0x79e]
---
Predecessors: [0x777]
Successors: []
---
0x796 RETURNDATASIZE
0x797 PUSH1 0x0
0x799 DUP1
0x79a RETURNDATACOPY
0x79b RETURNDATASIZE
0x79c PUSH1 0x0
0x79e REVERT
---
0x796: V630 = RETURNDATASIZE
0x797: V631 = 0x0
0x79a: RETURNDATACOPY 0x0 0x0 V630
0x79b: V632 = RETURNDATASIZE
0x79c: V633 = 0x0
0x79e: REVERT 0x0 V632
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V627]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V627]

================================

Block 0x79f
[0x79f:0x7b0]
---
Predecessors: [0x777]
Successors: [0xa0, 0x201, 0x269, 0x2d2, 0x33b, 0x393, 0x46d, 0x4a8, 0x71d, 0x729, 0x777]
---
0x79f JUMPDEST
0x7a0 POP
0x7a1 PUSH1 0x8
0x7a3 SLOAD
0x7a4 PUSH1 0x9
0x7a6 SSTORE
0x7a7 PUSH1 0x5
0x7a9 DUP1
0x7aa SLOAD
0x7ab PUSH1 0x1
0x7ad ADD
0x7ae SWAP1
0x7af SSTORE
0x7b0 JUMP
---
0x79f: JUMPDEST 
0x7a1: V634 = 0x8
0x7a3: V635 = S[0x8]
0x7a4: V636 = 0x9
0x7a6: S[0x9] = V635
0x7a7: V637 = 0x5
0x7aa: V638 = S[0x5]
0x7ab: V639 = 0x1
0x7ad: V640 = ADD 0x1 V638
0x7af: S[0x5] = V640
0x7b0: JUMP S1
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V627]
Stack pops: 2
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x7b1
[0x7b1:0x7dd]
---
Predecessors: []
Successors: []
---
0x7b1 STOP
0x7b2 LOG1
0x7b3 PUSH6 0x627a7a723058
0x7ba SHA3
0x7bb MISSING 0xb7
0x7bc DUP15
0x7bd CALLDATALOAD
0x7be MISSING 0xe4
0x7bf MISSING 0xef
0x7c0 MISSING 0xed
0x7c1 SHR
0x7c2 DIFFICULTY
0x7c3 MISSING 0xf7
0x7c4 PUSH15 0x23475ce4dde88c875bbafbf6236a04
0x7d4 EXTCODECOPY
0x7d5 DIV
0x7d6 MISSING 0xd7
0x7d7 PUSH6 0xb57eea0029
---
0x7b1: STOP 
0x7b2: LOG S0 S1 S2
0x7b3: V641 = 0x627a7a723058
0x7ba: V642 = SHA3 0x627a7a723058 S3
0x7bb: MISSING 0xb7
0x7bd: V643 = CALLDATALOAD S14
0x7be: MISSING 0xe4
0x7bf: MISSING 0xef
0x7c0: MISSING 0xed
0x7c1: V644 = SHR S0 S1
0x7c2: V645 = DIFFICULTY
0x7c3: MISSING 0xf7
0x7c4: V646 = 0x23475ce4dde88c875bbafbf6236a04
0x7d4: EXTCODECOPY 0x23475ce4dde88c875bbafbf6236a04 S0 S1 S2
0x7d5: V647 = DIV S3 S4
0x7d6: MISSING 0xd7
0x7d7: V648 = 0xb57eea0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V642, V643, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V645, V644, V647, 0xb57eea0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x85f0316
Entry block: 0xa2
Exit block: 0xb7
Body: 0xa2, 0xaa, 0xae, 0xb7, 0x4d2

Function 1:
Public function signature: 0x1ad100bb
Entry block: 0xc9
Exit block: 0xde
Body: 0xc9, 0xd1, 0xd5, 0xde, 0x4d8

Function 2:
Public function signature: 0x2bea500d
Entry block: 0xfa
Exit block: 0xde
Body: 0xde, 0xfa, 0x102, 0x106, 0x4e7

Function 3:
Public function signature: 0x3bf47720
Entry block: 0x10f
Exit block: 0xb7
Body: 0xb7, 0x10f, 0x117, 0x11b, 0x4f6

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x124
Exit block: 0xde
Body: 0xde, 0x124, 0x12c, 0x130, 0x4fc

Function 5:
Public function signature: 0x9d1b464a
Entry block: 0x139
Exit block: 0xb7
Body: 0xb7, 0x139, 0x141, 0x145, 0x50b

Function 6:
Public function signature: 0xbab2f552
Entry block: 0x14e
Exit block: 0xb7
Body: 0xb7, 0x14e, 0x156, 0x15a, 0x511

Function 7:
Public function signature: 0xe927fc5c
Entry block: 0x163
Exit block: 0xde
Body: 0xde, 0x163, 0x16b, 0x16f, 0x517

Function 8:
Public function signature: 0xf6f57127
Entry block: 0x178
Exit block: 0xde
Body: 0xde, 0x178, 0x180, 0x184, 0x526

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x60d
Body: 0x98, 0x18d, 0x197, 0x1a0, 0x1c4, 0x472, 0x486, 0x49a, 0x4ad, 0x4c2, 0x60d, 0x796

Function 10:
Private function
Entry block: 0x5ff
Exit block: 0x564
Body: 0x1c4, 0x1f5, 0x201, 0x229, 0x23c, 0x269, 0x291, 0x293, 0x2a5, 0x2d2, 0x2fa, 0x2fc, 0x30e, 0x33b, 0x363, 0x365, 0x365, 0x393, 0x3bb, 0x3fb, 0x406, 0x46b, 0x46d, 0x4a8, 0x4d0, 0x535, 0x540, 0x548, 0x558, 0x560, 0x564, 0x56b, 0x579, 0x582, 0x597, 0x5ff, 0x6f0, 0x711, 0x71d, 0x729, 0x729, 0x729, 0x777, 0x79f

Function 11:
Private function
Entry block: 0x535
Exit block: 0x564
Body: 0x1f5, 0x201, 0x229, 0x23c, 0x269, 0x291, 0x293, 0x2a5, 0x2d2, 0x2fa, 0x2fc, 0x30e, 0x33b, 0x363, 0x365, 0x365, 0x393, 0x3bb, 0x3fb, 0x406, 0x46b, 0x46d, 0x49a, 0x4a1, 0x4a8, 0x4c2, 0x4c9, 0x4d0, 0x535, 0x540, 0x548, 0x558, 0x560, 0x564, 0x56b, 0x579, 0x582, 0x597, 0x5ff, 0x6f0, 0x711, 0x71d, 0x729, 0x729, 0x729, 0x777, 0x79f

Function 12:
Private function
Entry block: 0x60e
Exit block: 0x79f
Body: 0x1c4, 0x1f5, 0x201, 0x229, 0x23c, 0x269, 0x291, 0x293, 0x2a5, 0x2d2, 0x2fa, 0x2fc, 0x30e, 0x33b, 0x363, 0x365, 0x365, 0x393, 0x3bb, 0x3fb, 0x406, 0x46b, 0x46d, 0x49a, 0x4a1, 0x4a8, 0x4c2, 0x4c9, 0x4d0, 0x535, 0x540, 0x548, 0x558, 0x560, 0x564, 0x56b, 0x579, 0x582, 0x597, 0x5ff, 0x60e, 0x6f0, 0x711, 0x71d, 0x729, 0x729, 0x729, 0x777, 0x79f

