Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xd7]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xd7
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xd7
0xc: JUMPI 0xd7 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xe2]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1725a0b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xe2
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1725a0b
0x22: V15 = EQ V13 0x1725a0b
0x23: V16 = 0xe2
0x26: JUMPI 0xe2 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x111]
---
0x27 DUP1
0x28 PUSH4 0x15d3e0a3
0x2d EQ
0x2e PUSH2 0x111
0x31 JUMPI
---
0x28: V17 = 0x15d3e0a3
0x2d: V18 = EQ 0x15d3e0a3 V13
0x2e: V19 = 0x111
0x31: JUMPI 0x111 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x124]
---
0x32 DUP1
0x33 PUSH4 0x2616501d
0x38 EQ
0x39 PUSH2 0x124
0x3c JUMPI
---
0x33: V20 = 0x2616501d
0x38: V21 = EQ 0x2616501d V13
0x39: V22 = 0x124
0x3c: JUMPI 0x124 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x149]
---
0x3d DUP1
0x3e PUSH4 0x29648398
0x43 EQ
0x44 PUSH2 0x149
0x47 JUMPI
---
0x3e: V23 = 0x29648398
0x43: V24 = EQ 0x29648398 V13
0x44: V25 = 0x149
0x47: JUMPI 0x149 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x168]
---
0x48 DUP1
0x49 PUSH4 0x2c4e722e
0x4e EQ
0x4f PUSH2 0x168
0x52 JUMPI
---
0x49: V26 = 0x2c4e722e
0x4e: V27 = EQ 0x2c4e722e V13
0x4f: V28 = 0x168
0x52: JUMPI 0x168 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x17b]
---
0x53 DUP1
0x54 PUSH4 0x3197cbb6
0x59 EQ
0x5a PUSH2 0x17b
0x5d JUMPI
---
0x54: V29 = 0x3197cbb6
0x59: V30 = EQ 0x3197cbb6 V13
0x5a: V31 = 0x17b
0x5d: JUMPI 0x17b V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x18e]
---
0x5e DUP1
0x5f PUSH4 0x3fa615b0
0x64 EQ
0x65 PUSH2 0x18e
0x68 JUMPI
---
0x5f: V32 = 0x3fa615b0
0x64: V33 = EQ 0x3fa615b0 V13
0x65: V34 = 0x18e
0x68: JUMPI 0x18e V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1a1]
---
0x69 DUP1
0x6a PUSH4 0x4042b66f
0x6f EQ
0x70 PUSH2 0x1a1
0x73 JUMPI
---
0x6a: V35 = 0x4042b66f
0x6f: V36 = EQ 0x4042b66f V13
0x70: V37 = 0x1a1
0x73: JUMPI 0x1a1 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1b4]
---
0x74 DUP1
0x75 PUSH4 0x4eb259aa
0x7a EQ
0x7b PUSH2 0x1b4
0x7e JUMPI
---
0x75: V38 = 0x4eb259aa
0x7a: V39 = EQ 0x4eb259aa V13
0x7b: V40 = 0x1b4
0x7e: JUMPI 0x1b4 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1d3]
---
0x7f DUP1
0x80 PUSH4 0x521eb273
0x85 EQ
0x86 PUSH2 0x1d3
0x89 JUMPI
---
0x80: V41 = 0x521eb273
0x85: V42 = EQ 0x521eb273 V13
0x86: V43 = 0x1d3
0x89: JUMPI 0x1d3 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x1e6]
---
0x8a DUP1
0x8b PUSH4 0x78e97925
0x90 EQ
0x91 PUSH2 0x1e6
0x94 JUMPI
---
0x8b: V44 = 0x78e97925
0x90: V45 = EQ 0x78e97925 V13
0x91: V46 = 0x1e6
0x94: JUMPI 0x1e6 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x1f9]
---
0x95 DUP1
0x96 PUSH4 0x8da5cb5b
0x9b EQ
0x9c PUSH2 0x1f9
0x9f JUMPI
---
0x96: V47 = 0x8da5cb5b
0x9b: V48 = EQ 0x8da5cb5b V13
0x9c: V49 = 0x1f9
0x9f: JUMPI 0x1f9 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x20c]
---
0xa0 DUP1
0xa1 PUSH4 0x93e59dc1
0xa6 EQ
0xa7 PUSH2 0x20c
0xaa JUMPI
---
0xa1: V50 = 0x93e59dc1
0xa6: V51 = EQ 0x93e59dc1 V13
0xa7: V52 = 0x20c
0xaa: JUMPI 0x20c V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x21f]
---
0xab DUP1
0xac PUSH4 0xde306229
0xb1 EQ
0xb2 PUSH2 0x21f
0xb5 JUMPI
---
0xac: V53 = 0xde306229
0xb1: V54 = EQ 0xde306229 V13
0xb2: V55 = 0x21f
0xb5: JUMPI 0x21f V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x233]
---
0xb6 DUP1
0xb7 PUSH4 0xecb70fb7
0xbc EQ
0xbd PUSH2 0x233
0xc0 JUMPI
---
0xb7: V56 = 0xecb70fb7
0xbc: V57 = EQ 0xecb70fb7 V13
0xbd: V58 = 0x233
0xc0: JUMPI 0x233 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x25a]
---
0xc1 DUP1
0xc2 PUSH4 0xf2fde38b
0xc7 EQ
0xc8 PUSH2 0x25a
0xcb JUMPI
---
0xc2: V59 = 0xf2fde38b
0xc7: V60 = EQ 0xf2fde38b V13
0xc8: V61 = 0x25a
0xcb: JUMPI 0x25a V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x279]
---
0xcc DUP1
0xcd PUSH4 0xfb86a404
0xd2 EQ
0xd3 PUSH2 0x279
0xd6 JUMPI
---
0xcd: V62 = 0xfb86a404
0xd2: V63 = EQ 0xfb86a404 V13
0xd3: V64 = 0x279
0xd6: JUMPI 0x279 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xdf]
---
Predecessors: [0x0, 0xcc]
Successors: [0x28c]
---
0xd7 JUMPDEST
0xd8 PUSH2 0xe0
0xdb CALLER
0xdc PUSH2 0x28c
0xdf JUMP
---
0xd7: JUMPDEST 
0xd8: V65 = 0xe0
0xdb: V66 = CALLER
0xdc: V67 = 0x28c
0xdf: JUMP 0x28c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0, V66]
Exit stack: [V13, 0xe0, V66]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: [0x60a, 0x688, 0x7e1, 0x9e1, 0xab1]
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: [V13, S5, S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, 0x0, S1, S0]

================================

Block 0xe2
[0xe2:0xe8]
---
Predecessors: [0xd]
Successors: [0xe9, 0xed]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe2: JUMPDEST 
0xe3: V68 = CALLVALUE
0xe4: V69 = ISZERO V68
0xe5: V70 = 0xed
0xe8: JUMPI 0xed V69
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe2]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V71 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xed
[0xed:0xf4]
---
Predecessors: [0xe2]
Successors: [0x612]
---
0xed JUMPDEST
0xee PUSH2 0xf5
0xf1 PUSH2 0x612
0xf4 JUMP
---
0xed: JUMPDEST 
0xee: V72 = 0xf5
0xf1: V73 = 0x612
0xf4: JUMP 0x612
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf5]
Exit stack: [V13, 0xf5]

================================

Block 0xf5
[0xf5:0x110]
---
Predecessors: [0x612, 0xa2d, 0xa42, 0xa51]
Successors: []
---
0xf5 JUMPDEST
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 PUSH1 0x1
0xfb PUSH1 0xa0
0xfd PUSH1 0x2
0xff EXP
0x100 SUB
0x101 SWAP1
0x102 SWAP2
0x103 AND
0x104 DUP2
0x105 MSTORE
0x106 PUSH1 0x20
0x108 ADD
0x109 PUSH1 0x40
0x10b MLOAD
0x10c DUP1
0x10d SWAP2
0x10e SUB
0x10f SWAP1
0x110 RETURN
---
0xf5: JUMPDEST 
0xf6: V74 = 0x40
0xf8: V75 = M[0x40]
0xf9: V76 = 0x1
0xfb: V77 = 0xa0
0xfd: V78 = 0x2
0xff: V79 = EXP 0x2 0xa0
0x100: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0x103: V81 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x105: M[V75] = V81
0x106: V82 = 0x20
0x108: V83 = ADD 0x20 V75
0x109: V84 = 0x40
0x10b: V85 = M[0x40]
0x10e: V86 = SUB V83 V85
0x110: RETURN V85 V86
---
Entry stack: [V13, 0xf5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xf5]

================================

Block 0x111
[0x111:0x117]
---
Predecessors: [0x27]
Successors: [0x118, 0x11c]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x111: JUMPDEST 
0x112: V87 = CALLVALUE
0x113: V88 = ISZERO V87
0x114: V89 = 0x11c
0x117: JUMPI 0x11c V88
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x111]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V90 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11c
[0x11c:0x123]
---
Predecessors: [0x111]
Successors: [0x621]
---
0x11c JUMPDEST
0x11d PUSH2 0xe0
0x120 PUSH2 0x621
0x123 JUMP
---
0x11c: JUMPDEST 
0x11d: V91 = 0xe0
0x120: V92 = 0x621
0x123: JUMP 0x621
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0]
Exit stack: [V13, 0xe0]

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0x32]
Successors: [0x12b, 0x12f]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V93 = CALLVALUE
0x126: V94 = ISZERO V93
0x127: V95 = 0x12f
0x12a: JUMPI 0x12f V94
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x124]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V96 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12f
[0x12f:0x136]
---
Predecessors: [0x124]
Successors: [0x6b6]
---
0x12f JUMPDEST
0x130 PUSH2 0x137
0x133 PUSH2 0x6b6
0x136 JUMP
---
0x12f: JUMPDEST 
0x130: V97 = 0x137
0x133: V98 = 0x6b6
0x136: JUMP 0x6b6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V13, 0x137]

================================

Block 0x137
[0x137:0x148]
---
Predecessors: [0x6b6, 0x7ef, 0x7f5, 0x7fb, 0x801, 0xa3c, 0xb1c]
Successors: []
---
0x137 JUMPDEST
0x138 PUSH1 0x40
0x13a MLOAD
0x13b SWAP1
0x13c DUP2
0x13d MSTORE
0x13e PUSH1 0x20
0x140 ADD
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 SWAP2
0x146 SUB
0x147 SWAP1
0x148 RETURN
---
0x137: JUMPDEST 
0x138: V99 = 0x40
0x13a: V100 = M[0x40]
0x13d: M[V100] = S0
0x13e: V101 = 0x20
0x140: V102 = ADD 0x20 V100
0x141: V103 = 0x40
0x143: V104 = M[0x40]
0x146: V105 = SUB V102 V104
0x148: RETURN V104 V105
---
Entry stack: [V13, 0x137, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x137]

================================

Block 0x149
[0x149:0x14f]
---
Predecessors: [0x3d]
Successors: [0x150, 0x154]
---
0x149 JUMPDEST
0x14a CALLVALUE
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x149: JUMPDEST 
0x14a: V106 = CALLVALUE
0x14b: V107 = ISZERO V106
0x14c: V108 = 0x154
0x14f: JUMPI 0x154 V107
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x149]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V109 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x154
[0x154:0x167]
---
Predecessors: [0x149]
Successors: [0x6bc]
---
0x154 JUMPDEST
0x155 PUSH2 0xe0
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 PUSH1 0x4
0x162 CALLDATALOAD
0x163 AND
0x164 PUSH2 0x6bc
0x167 JUMP
---
0x154: JUMPDEST 
0x155: V110 = 0xe0
0x158: V111 = 0x1
0x15a: V112 = 0xa0
0x15c: V113 = 0x2
0x15e: V114 = EXP 0x2 0xa0
0x15f: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V116 = 0x4
0x162: V117 = CALLDATALOAD 0x4
0x163: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x164: V119 = 0x6bc
0x167: JUMP 0x6bc
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0, V118]
Exit stack: [V13, 0xe0, V118]

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x48]
Successors: [0x16f, 0x173]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V120 = CALLVALUE
0x16a: V121 = ISZERO V120
0x16b: V122 = 0x173
0x16e: JUMPI 0x173 V121
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x168]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V123 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x168]
Successors: [0x7ef]
---
0x173 JUMPDEST
0x174 PUSH2 0x137
0x177 PUSH2 0x7ef
0x17a JUMP
---
0x173: JUMPDEST 
0x174: V124 = 0x137
0x177: V125 = 0x7ef
0x17a: JUMP 0x7ef
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V13, 0x137]

================================

Block 0x17b
[0x17b:0x181]
---
Predecessors: [0x53]
Successors: [0x182, 0x186]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d ISZERO
0x17e PUSH2 0x186
0x181 JUMPI
---
0x17b: JUMPDEST 
0x17c: V126 = CALLVALUE
0x17d: V127 = ISZERO V126
0x17e: V128 = 0x186
0x181: JUMPI 0x186 V127
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x182
[0x182:0x185]
---
Predecessors: [0x17b]
Successors: []
---
0x182 PUSH1 0x0
0x184 DUP1
0x185 REVERT
---
0x182: V129 = 0x0
0x185: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x186
[0x186:0x18d]
---
Predecessors: [0x17b]
Successors: [0x7f5]
---
0x186 JUMPDEST
0x187 PUSH2 0x137
0x18a PUSH2 0x7f5
0x18d JUMP
---
0x186: JUMPDEST 
0x187: V130 = 0x137
0x18a: V131 = 0x7f5
0x18d: JUMP 0x7f5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V13, 0x137]

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x5e]
Successors: [0x195, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V132 = CALLVALUE
0x190: V133 = ISZERO V132
0x191: V134 = 0x199
0x194: JUMPI 0x199 V133
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V135 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x199
[0x199:0x1a0]
---
Predecessors: [0x18e]
Successors: [0x7fb]
---
0x199 JUMPDEST
0x19a PUSH2 0x137
0x19d PUSH2 0x7fb
0x1a0 JUMP
---
0x199: JUMPDEST 
0x19a: V136 = 0x137
0x19d: V137 = 0x7fb
0x1a0: JUMP 0x7fb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V13, 0x137]

================================

Block 0x1a1
[0x1a1:0x1a7]
---
Predecessors: [0x69]
Successors: [0x1a8, 0x1ac]
---
0x1a1 JUMPDEST
0x1a2 CALLVALUE
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V138 = CALLVALUE
0x1a3: V139 = ISZERO V138
0x1a4: V140 = 0x1ac
0x1a7: JUMPI 0x1ac V139
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x1a1]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V141 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ac
[0x1ac:0x1b3]
---
Predecessors: [0x1a1]
Successors: [0x801]
---
0x1ac JUMPDEST
0x1ad PUSH2 0x137
0x1b0 PUSH2 0x801
0x1b3 JUMP
---
0x1ac: JUMPDEST 
0x1ad: V142 = 0x137
0x1b0: V143 = 0x801
0x1b3: JUMP 0x801
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V13, 0x137]

================================

Block 0x1b4
[0x1b4:0x1ba]
---
Predecessors: [0x74]
Successors: [0x1bb, 0x1bf]
---
0x1b4 JUMPDEST
0x1b5 CALLVALUE
0x1b6 ISZERO
0x1b7 PUSH2 0x1bf
0x1ba JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V144 = CALLVALUE
0x1b6: V145 = ISZERO V144
0x1b7: V146 = 0x1bf
0x1ba: JUMPI 0x1bf V145
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x1b4]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V147 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1bf
[0x1bf:0x1d2]
---
Predecessors: [0x1b4]
Successors: [0x807]
---
0x1bf JUMPDEST
0x1c0 PUSH2 0xe0
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb PUSH1 0x4
0x1cd CALLDATALOAD
0x1ce AND
0x1cf PUSH2 0x807
0x1d2 JUMP
---
0x1bf: JUMPDEST 
0x1c0: V148 = 0xe0
0x1c3: V149 = 0x1
0x1c5: V150 = 0xa0
0x1c7: V151 = 0x2
0x1c9: V152 = EXP 0x2 0xa0
0x1ca: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V154 = 0x4
0x1cd: V155 = CALLDATALOAD 0x4
0x1ce: V156 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x1cf: V157 = 0x807
0x1d2: JUMP 0x807
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0, V156]
Exit stack: [V13, 0xe0, V156]

================================

Block 0x1d3
[0x1d3:0x1d9]
---
Predecessors: [0x7f]
Successors: [0x1da, 0x1de]
---
0x1d3 JUMPDEST
0x1d4 CALLVALUE
0x1d5 ISZERO
0x1d6 PUSH2 0x1de
0x1d9 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V158 = CALLVALUE
0x1d5: V159 = ISZERO V158
0x1d6: V160 = 0x1de
0x1d9: JUMPI 0x1de V159
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1da
[0x1da:0x1dd]
---
Predecessors: [0x1d3]
Successors: []
---
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd REVERT
---
0x1da: V161 = 0x0
0x1dd: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1de
[0x1de:0x1e5]
---
Predecessors: [0x1d3]
Successors: [0xa2d]
---
0x1de JUMPDEST
0x1df PUSH2 0xf5
0x1e2 PUSH2 0xa2d
0x1e5 JUMP
---
0x1de: JUMPDEST 
0x1df: V162 = 0xf5
0x1e2: V163 = 0xa2d
0x1e5: JUMP 0xa2d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf5]
Exit stack: [V13, 0xf5]

================================

Block 0x1e6
[0x1e6:0x1ec]
---
Predecessors: [0x8a]
Successors: [0x1ed, 0x1f1]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V164 = CALLVALUE
0x1e8: V165 = ISZERO V164
0x1e9: V166 = 0x1f1
0x1ec: JUMPI 0x1f1 V165
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V167 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f1
[0x1f1:0x1f8]
---
Predecessors: [0x1e6]
Successors: [0xa3c]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0x137
0x1f5 PUSH2 0xa3c
0x1f8 JUMP
---
0x1f1: JUMPDEST 
0x1f2: V168 = 0x137
0x1f5: V169 = 0xa3c
0x1f8: JUMP 0xa3c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V13, 0x137]

================================

Block 0x1f9
[0x1f9:0x1ff]
---
Predecessors: [0x95]
Successors: [0x200, 0x204]
---
0x1f9 JUMPDEST
0x1fa CALLVALUE
0x1fb ISZERO
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V170 = CALLVALUE
0x1fb: V171 = ISZERO V170
0x1fc: V172 = 0x204
0x1ff: JUMPI 0x204 V171
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1f9]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V173 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x204
[0x204:0x20b]
---
Predecessors: [0x1f9]
Successors: [0xa42]
---
0x204 JUMPDEST
0x205 PUSH2 0xf5
0x208 PUSH2 0xa42
0x20b JUMP
---
0x204: JUMPDEST 
0x205: V174 = 0xf5
0x208: V175 = 0xa42
0x20b: JUMP 0xa42
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf5]
Exit stack: [V13, 0xf5]

================================

Block 0x20c
[0x20c:0x212]
---
Predecessors: [0xa0]
Successors: [0x213, 0x217]
---
0x20c JUMPDEST
0x20d CALLVALUE
0x20e ISZERO
0x20f PUSH2 0x217
0x212 JUMPI
---
0x20c: JUMPDEST 
0x20d: V176 = CALLVALUE
0x20e: V177 = ISZERO V176
0x20f: V178 = 0x217
0x212: JUMPI 0x217 V177
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x213
[0x213:0x216]
---
Predecessors: [0x20c]
Successors: []
---
0x213 PUSH1 0x0
0x215 DUP1
0x216 REVERT
---
0x213: V179 = 0x0
0x216: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x217
[0x217:0x21e]
---
Predecessors: [0x20c]
Successors: [0xa51]
---
0x217 JUMPDEST
0x218 PUSH2 0xf5
0x21b PUSH2 0xa51
0x21e JUMP
---
0x217: JUMPDEST 
0x218: V180 = 0xf5
0x21b: V181 = 0xa51
0x21e: JUMP 0xa51
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf5]
Exit stack: [V13, 0xf5]

================================

Block 0x21f
[0x21f:0x232]
---
Predecessors: [0xab]
Successors: [0x28c]
---
0x21f JUMPDEST
0x220 PUSH2 0xe0
0x223 PUSH1 0x1
0x225 PUSH1 0xa0
0x227 PUSH1 0x2
0x229 EXP
0x22a SUB
0x22b PUSH1 0x4
0x22d CALLDATALOAD
0x22e AND
0x22f PUSH2 0x28c
0x232 JUMP
---
0x21f: JUMPDEST 
0x220: V182 = 0xe0
0x223: V183 = 0x1
0x225: V184 = 0xa0
0x227: V185 = 0x2
0x229: V186 = EXP 0x2 0xa0
0x22a: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22b: V188 = 0x4
0x22d: V189 = CALLDATALOAD 0x4
0x22e: V190 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V191 = 0x28c
0x232: JUMP 0x28c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0, V190]
Exit stack: [V13, 0xe0, V190]

================================

Block 0x233
[0x233:0x239]
---
Predecessors: [0xb6]
Successors: [0x23a, 0x23e]
---
0x233 JUMPDEST
0x234 CALLVALUE
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x233: JUMPDEST 
0x234: V192 = CALLVALUE
0x235: V193 = ISZERO V192
0x236: V194 = 0x23e
0x239: JUMPI 0x23e V193
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x233]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V195 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x23e
[0x23e:0x245]
---
Predecessors: [0x233]
Successors: [0xa60]
---
0x23e JUMPDEST
0x23f PUSH2 0x246
0x242 PUSH2 0xa60
0x245 JUMP
---
0x23e: JUMPDEST 
0x23f: V196 = 0x246
0x242: V197 = 0xa60
0x245: JUMP 0xa60
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x246]
Exit stack: [V13, 0x246]

================================

Block 0x246
[0x246:0x259]
---
Predecessors: [0xa7b]
Successors: []
---
0x246 JUMPDEST
0x247 PUSH1 0x40
0x249 MLOAD
0x24a SWAP1
0x24b ISZERO
0x24c ISZERO
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 SWAP2
0x257 SUB
0x258 SWAP1
0x259 RETURN
---
0x246: JUMPDEST 
0x247: V198 = 0x40
0x249: V199 = M[0x40]
0x24b: V200 = ISZERO S0
0x24c: V201 = ISZERO V200
0x24e: M[V199] = V201
0x24f: V202 = 0x20
0x251: V203 = ADD 0x20 V199
0x252: V204 = 0x40
0x254: V205 = M[0x40]
0x257: V206 = SUB V203 V205
0x259: RETURN V205 V206
---
Entry stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1]

================================

Block 0x25a
[0x25a:0x260]
---
Predecessors: [0xc1]
Successors: [0x261, 0x265]
---
0x25a JUMPDEST
0x25b CALLVALUE
0x25c ISZERO
0x25d PUSH2 0x265
0x260 JUMPI
---
0x25a: JUMPDEST 
0x25b: V207 = CALLVALUE
0x25c: V208 = ISZERO V207
0x25d: V209 = 0x265
0x260: JUMPI 0x265 V208
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x25a]
Successors: []
---
0x261 PUSH1 0x0
0x263 DUP1
0x264 REVERT
---
0x261: V210 = 0x0
0x264: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x265
[0x265:0x278]
---
Predecessors: [0x25a]
Successors: [0xa81]
---
0x265 JUMPDEST
0x266 PUSH2 0xe0
0x269 PUSH1 0x1
0x26b PUSH1 0xa0
0x26d PUSH1 0x2
0x26f EXP
0x270 SUB
0x271 PUSH1 0x4
0x273 CALLDATALOAD
0x274 AND
0x275 PUSH2 0xa81
0x278 JUMP
---
0x265: JUMPDEST 
0x266: V211 = 0xe0
0x269: V212 = 0x1
0x26b: V213 = 0xa0
0x26d: V214 = 0x2
0x26f: V215 = EXP 0x2 0xa0
0x270: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x271: V217 = 0x4
0x273: V218 = CALLDATALOAD 0x4
0x274: V219 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0x275: V220 = 0xa81
0x278: JUMP 0xa81
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0, V219]
Exit stack: [V13, 0xe0, V219]

================================

Block 0x279
[0x279:0x27f]
---
Predecessors: [0xcc]
Successors: [0x280, 0x284]
---
0x279 JUMPDEST
0x27a CALLVALUE
0x27b ISZERO
0x27c PUSH2 0x284
0x27f JUMPI
---
0x279: JUMPDEST 
0x27a: V221 = CALLVALUE
0x27b: V222 = ISZERO V221
0x27c: V223 = 0x284
0x27f: JUMPI 0x284 V222
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x280
[0x280:0x283]
---
Predecessors: [0x279]
Successors: []
---
0x280 PUSH1 0x0
0x282 DUP1
0x283 REVERT
---
0x280: V224 = 0x0
0x283: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x284
[0x284:0x28b]
---
Predecessors: [0x279]
Successors: [0xb1c]
---
0x284 JUMPDEST
0x285 PUSH2 0x137
0x288 PUSH2 0xb1c
0x28b JUMP
---
0x284: JUMPDEST 
0x285: V225 = 0x137
0x288: V226 = 0xb1c
0x28b: JUMP 0xb1c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V13, 0x137]

================================

Block 0x28c
[0x28c:0x2ea]
---
Predecessors: [0xd7, 0x21f]
Successors: [0x2eb, 0x2ef]
---
0x28c JUMPDEST
0x28d PUSH1 0x2
0x28f SLOAD
0x290 PUSH1 0x0
0x292 SWAP1
0x293 DUP2
0x294 SWAP1
0x295 DUP2
0x296 SWAP1
0x297 DUP2
0x298 SWAP1
0x299 DUP2
0x29a SWAP1
0x29b PUSH1 0x1
0x29d PUSH1 0xa0
0x29f PUSH1 0x2
0x2a1 EXP
0x2a2 SUB
0x2a3 AND
0x2a4 PUSH4 0xc683630d
0x2a9 CALLER
0x2aa DUP4
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 MSTORE
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 PUSH1 0xe0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba PUSH4 0xffffffff
0x2bf DUP5
0x2c0 AND
0x2c1 MUL
0x2c2 DUP2
0x2c3 MSTORE
0x2c4 PUSH1 0x1
0x2c6 PUSH1 0xa0
0x2c8 PUSH1 0x2
0x2ca EXP
0x2cb SUB
0x2cc SWAP1
0x2cd SWAP2
0x2ce AND
0x2cf PUSH1 0x4
0x2d1 DUP3
0x2d2 ADD
0x2d3 MSTORE
0x2d4 PUSH1 0x24
0x2d6 ADD
0x2d7 PUSH1 0x20
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc DUP1
0x2dd DUP4
0x2de SUB
0x2df DUP2
0x2e0 PUSH1 0x0
0x2e2 DUP8
0x2e3 DUP1
0x2e4 EXTCODESIZE
0x2e5 ISZERO
0x2e6 ISZERO
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x28c: JUMPDEST 
0x28d: V227 = 0x2
0x28f: V228 = S[0x2]
0x290: V229 = 0x0
0x29b: V230 = 0x1
0x29d: V231 = 0xa0
0x29f: V232 = 0x2
0x2a1: V233 = EXP 0x2 0xa0
0x2a2: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x2a4: V236 = 0xc683630d
0x2a9: V237 = CALLER
0x2ab: V238 = 0x40
0x2ad: V239 = M[0x40]
0x2ae: V240 = 0x20
0x2b0: V241 = ADD 0x20 V239
0x2b1: M[V241] = 0x0
0x2b2: V242 = 0x40
0x2b4: V243 = M[0x40]
0x2b5: V244 = 0xe0
0x2b7: V245 = 0x2
0x2b9: V246 = EXP 0x2 0xe0
0x2ba: V247 = 0xffffffff
0x2c0: V248 = AND 0xc683630d 0xffffffff
0x2c1: V249 = MUL 0xc683630d 0x100000000000000000000000000000000000000000000000000000000
0x2c3: M[V243] = 0xc683630d00000000000000000000000000000000000000000000000000000000
0x2c4: V250 = 0x1
0x2c6: V251 = 0xa0
0x2c8: V252 = 0x2
0x2ca: V253 = EXP 0x2 0xa0
0x2cb: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ce: V255 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: V256 = 0x4
0x2d2: V257 = ADD V243 0x4
0x2d3: M[V257] = V255
0x2d4: V258 = 0x24
0x2d6: V259 = ADD 0x24 V243
0x2d7: V260 = 0x20
0x2d9: V261 = 0x40
0x2db: V262 = M[0x40]
0x2de: V263 = SUB V259 V262
0x2e0: V264 = 0x0
0x2e4: V265 = EXTCODESIZE V235
0x2e5: V266 = ISZERO V265
0x2e6: V267 = ISZERO V266
0x2e7: V268 = 0x2ef
0x2ea: JUMPI 0x2ef V267
---
Entry stack: [V13, 0xe0, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, V235, 0xc683630d, V259, 0x20, V262, V263, V262, 0x0, V235]
Exit stack: [V13, 0xe0, S0, 0x0, 0x0, 0x0, 0x0, 0x0, V235, 0xc683630d, V259, 0x20, V262, V263, V262, 0x0, V235]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x28c]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V269 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V235, 0xc683630d, V259, 0x20, V262, V263, V262, 0x0, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V235, 0xc683630d, V259, 0x20, V262, V263, V262, 0x0, V235]

================================

Block 0x2ef
[0x2ef:0x2fb]
---
Predecessors: [0x28c]
Successors: [0x2fc, 0x300]
---
0x2ef JUMPDEST
0x2f0 PUSH2 0x2c6
0x2f3 GAS
0x2f4 SUB
0x2f5 CALL
0x2f6 ISZERO
0x2f7 ISZERO
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2ef: JUMPDEST 
0x2f0: V270 = 0x2c6
0x2f3: V271 = GAS
0x2f4: V272 = SUB V271 0x2c6
0x2f5: V273 = CALL V272 V235 0x0 V262 V263 V262 0x20
0x2f6: V274 = ISZERO V273
0x2f7: V275 = ISZERO V274
0x2f8: V276 = 0x300
0x2fb: JUMPI 0x300 V275
---
Entry stack: [V13, 0xe0, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V235, 0xc683630d, V259, 0x20, V262, V263, V262, 0x0, V235]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xe0, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V235, 0xc683630d, V259]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2ef]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V277 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, S8, 0x0, 0x0, 0x0, 0x0, 0x0, V235, 0xc683630d, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S8, 0x0, 0x0, 0x0, 0x0, 0x0, V235, 0xc683630d, V259]

================================

Block 0x300
[0x300:0x310]
---
Predecessors: [0x2ef]
Successors: [0x311, 0x315]
---
0x300 JUMPDEST
0x301 POP
0x302 POP
0x303 POP
0x304 PUSH1 0x40
0x306 MLOAD
0x307 DUP1
0x308 MLOAD
0x309 SWAP1
0x30a POP
0x30b ISZERO
0x30c ISZERO
0x30d PUSH2 0x315
0x310 JUMPI
---
0x300: JUMPDEST 
0x304: V278 = 0x40
0x306: V279 = M[0x40]
0x308: V280 = M[V279]
0x30b: V281 = ISZERO V280
0x30c: V282 = ISZERO V281
0x30d: V283 = 0x315
0x310: JUMPI 0x315 V282
---
Entry stack: [V13, 0xe0, S8, 0x0, 0x0, 0x0, 0x0, 0x0, V235, 0xc683630d, V259]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xe0, S8, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x300]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 REVERT
---
0x311: V284 = 0x0
0x314: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, S5, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S5, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x315
[0x315:0x31c]
---
Predecessors: [0x300]
Successors: [0xa60]
---
0x315 JUMPDEST
0x316 PUSH2 0x31d
0x319 PUSH2 0xa60
0x31c JUMP
---
0x315: JUMPDEST 
0x316: V285 = 0x31d
0x319: V286 = 0xa60
0x31c: JUMP 0xa60
---
Entry stack: [V13, 0xe0, S5, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x31d]
Exit stack: [V13, 0xe0, S5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x31d]

================================

Block 0x31d
[0x31d:0x322]
---
Predecessors: [0xa7b]
Successors: [0x323, 0x327]
---
0x31d JUMPDEST
0x31e ISZERO
0x31f PUSH2 0x327
0x322 JUMPI
---
0x31d: JUMPDEST 
0x31e: V287 = ISZERO S0
0x31f: V288 = 0x327
0x322: JUMPI 0x327 V287
---
Entry stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1]

================================

Block 0x323
[0x323:0x326]
---
Predecessors: [0x31d]
Successors: []
---
0x323 PUSH1 0x0
0x325 DUP1
0x326 REVERT
---
0x323: V289 = 0x0
0x326: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x327
[0x327:0x32e]
---
Predecessors: [0x31d]
Successors: [0xb22]
---
0x327 JUMPDEST
0x328 PUSH2 0x32f
0x32b PUSH2 0xb22
0x32e JUMP
---
0x327: JUMPDEST 
0x328: V290 = 0x32f
0x32b: V291 = 0xb22
0x32e: JUMP 0xb22
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: [0x32f]
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0, 0x32f]

================================

Block 0x32f
[0x32f:0x335]
---
Predecessors: [0xb22]
Successors: [0x336, 0x33a]
---
0x32f JUMPDEST
0x330 ISZERO
0x331 ISZERO
0x332 PUSH2 0x33a
0x335 JUMPI
---
0x32f: JUMPDEST 
0x330: V292 = ISZERO V1056
0x331: V293 = ISZERO V292
0x332: V294 = 0x33a
0x335: JUMPI 0x33a V293
---
Entry stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1, V1056]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1]

================================

Block 0x336
[0x336:0x339]
---
Predecessors: [0x32f]
Successors: []
---
0x336 PUSH1 0x0
0x338 DUP1
0x339 REVERT
---
0x336: V295 = 0x0
0x339: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x33a
[0x33a:0x34a]
---
Predecessors: [0x32f]
Successors: [0x34b, 0x34f]
---
0x33a JUMPDEST
0x33b PUSH1 0x1
0x33d PUSH1 0xa0
0x33f PUSH1 0x2
0x341 EXP
0x342 SUB
0x343 DUP7
0x344 AND
0x345 ISZERO
0x346 ISZERO
0x347 PUSH2 0x34f
0x34a JUMPI
---
0x33a: JUMPDEST 
0x33b: V296 = 0x1
0x33d: V297 = 0xa0
0x33f: V298 = 0x2
0x341: V299 = EXP 0x2 0xa0
0x342: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x344: V301 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x345: V302 = ISZERO V301
0x346: V303 = ISZERO V302
0x347: V304 = 0x34f
0x34a: JUMPI 0x34f V303
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x33a]
Successors: []
---
0x34b PUSH1 0x0
0x34d DUP1
0x34e REVERT
---
0x34b: V305 = 0x0
0x34e: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x34f
[0x34f:0x36a]
---
Predecessors: [0x33a]
Successors: [0x36b, 0x36f]
---
0x34f JUMPDEST
0x350 CALLER
0x351 PUSH1 0x1
0x353 PUSH1 0xa0
0x355 PUSH1 0x2
0x357 EXP
0x358 SUB
0x359 AND
0x35a DUP7
0x35b PUSH1 0x1
0x35d PUSH1 0xa0
0x35f PUSH1 0x2
0x361 EXP
0x362 SUB
0x363 AND
0x364 EQ
0x365 ISZERO
0x366 ISZERO
0x367 PUSH2 0x36f
0x36a JUMPI
---
0x34f: JUMPDEST 
0x350: V306 = CALLER
0x351: V307 = 0x1
0x353: V308 = 0xa0
0x355: V309 = 0x2
0x357: V310 = EXP 0x2 0xa0
0x358: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x35b: V313 = 0x1
0x35d: V314 = 0xa0
0x35f: V315 = 0x2
0x361: V316 = EXP 0x2 0xa0
0x362: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x363: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x364: V319 = EQ V318 V312
0x365: V320 = ISZERO V319
0x366: V321 = ISZERO V320
0x367: V322 = 0x36f
0x36a: JUMPI 0x36f V321
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x36b
[0x36b:0x36e]
---
Predecessors: [0x34f]
Successors: []
---
0x36b PUSH1 0x0
0x36d DUP1
0x36e REVERT
---
0x36b: V323 = 0x0
0x36e: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x36f
[0x36f:0x379]
---
Predecessors: [0x34f]
Successors: [0x37a, 0x37e]
---
0x36f JUMPDEST
0x370 PUSH1 0x6
0x372 SLOAD
0x373 CALLVALUE
0x374 LT
0x375 ISZERO
0x376 PUSH2 0x37e
0x379 JUMPI
---
0x36f: JUMPDEST 
0x370: V324 = 0x6
0x372: V325 = S[0x6]
0x373: V326 = CALLVALUE
0x374: V327 = LT V326 V325
0x375: V328 = ISZERO V327
0x376: V329 = 0x37e
0x379: JUMPI 0x37e V328
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x37a
[0x37a:0x37d]
---
Predecessors: [0x36f]
Successors: []
---
0x37a PUSH1 0x0
0x37c DUP1
0x37d REVERT
---
0x37a: V330 = 0x0
0x37d: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x37e
[0x37e:0x393]
---
Predecessors: [0x36f]
Successors: [0xb2b]
---
0x37e JUMPDEST
0x37f PUSH1 0x5
0x381 SLOAD
0x382 CALLVALUE
0x383 SWAP6
0x384 POP
0x385 PUSH2 0x394
0x388 SWAP1
0x389 DUP7
0x38a PUSH4 0xffffffff
0x38f PUSH2 0xb2b
0x392 AND
0x393 JUMP
---
0x37e: JUMPDEST 
0x37f: V331 = 0x5
0x381: V332 = S[0x5]
0x382: V333 = CALLVALUE
0x385: V334 = 0x394
0x38a: V335 = 0xffffffff
0x38f: V336 = 0xb2b
0x392: V337 = AND 0xb2b 0xffffffff
0x393: JUMP 0xb2b
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 5
Stack additions: [V333, S3, S2, S1, S0, 0x394, V332, V333]
Exit stack: [V13, S6, S5, V333, 0x0, 0x0, S1, S0, 0x394, V332, V333]

================================

Block 0x394
[0x394:0x3a0]
---
Predecessors: [0xb3e]
Successors: [0x3a1, 0x483]
---
0x394 JUMPDEST
0x395 PUSH1 0x4
0x397 SLOAD
0x398 SWAP1
0x399 SWAP5
0x39a POP
0x39b DUP5
0x39c GT
0x39d PUSH2 0x483
0x3a0 JUMPI
---
0x394: JUMPDEST 
0x395: V338 = 0x4
0x397: V339 = S[0x4]
0x39c: V340 = GT S0 V339
0x39d: V341 = 0x483
0x3a0: JUMPI 0x483 V340
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0, S3, S2, S1]
Exit stack: [V13, S7, S6, S5, S0, S3, S2, S1]

================================

Block 0x3a1
[0x3a1:0x3b3]
---
Predecessors: [0x394]
Successors: [0xb45]
---
0x3a1 PUSH1 0x7
0x3a3 SLOAD
0x3a4 PUSH2 0x3b4
0x3a7 SWAP1
0x3a8 DUP7
0x3a9 SWAP1
0x3aa PUSH4 0xffffffff
0x3af PUSH2 0xb45
0x3b2 AND
0x3b3 JUMP
---
0x3a1: V342 = 0x7
0x3a3: V343 = S[0x7]
0x3a4: V344 = 0x3b4
0x3aa: V345 = 0xffffffff
0x3af: V346 = 0xb45
0x3b2: V347 = AND 0xb45 0xffffffff
0x3b3: JUMP 0xb45
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x3b4, S4, V343]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0, 0x3b4, S4, V343]

================================

Block 0x3b4
[0x3b4:0x411]
---
Predecessors: [0xb3e]
Successors: [0x412, 0x416]
---
0x3b4 JUMPDEST
0x3b5 PUSH1 0x1
0x3b7 SLOAD
0x3b8 SWAP1
0x3b9 SWAP4
0x3ba POP
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 AND
0x3c4 PUSH4 0xa51a8682
0x3c9 DUP8
0x3ca DUP6
0x3cb PUSH1 0x0
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 PUSH1 0x20
0x3d2 ADD
0x3d3 MSTORE
0x3d4 PUSH1 0x40
0x3d6 MLOAD
0x3d7 PUSH1 0xe0
0x3d9 PUSH1 0x2
0x3db EXP
0x3dc PUSH4 0xffffffff
0x3e1 DUP6
0x3e2 AND
0x3e3 MUL
0x3e4 DUP2
0x3e5 MSTORE
0x3e6 PUSH1 0x1
0x3e8 PUSH1 0xa0
0x3ea PUSH1 0x2
0x3ec EXP
0x3ed SUB
0x3ee SWAP1
0x3ef SWAP3
0x3f0 AND
0x3f1 PUSH1 0x4
0x3f3 DUP4
0x3f4 ADD
0x3f5 MSTORE
0x3f6 PUSH1 0x24
0x3f8 DUP3
0x3f9 ADD
0x3fa MSTORE
0x3fb PUSH1 0x44
0x3fd ADD
0x3fe PUSH1 0x20
0x400 PUSH1 0x40
0x402 MLOAD
0x403 DUP1
0x404 DUP4
0x405 SUB
0x406 DUP2
0x407 PUSH1 0x0
0x409 DUP8
0x40a DUP1
0x40b EXTCODESIZE
0x40c ISZERO
0x40d ISZERO
0x40e PUSH2 0x416
0x411 JUMPI
---
0x3b4: JUMPDEST 
0x3b5: V348 = 0x1
0x3b7: V349 = S[0x1]
0x3bb: V350 = 0x1
0x3bd: V351 = 0xa0
0x3bf: V352 = 0x2
0x3c1: V353 = EXP 0x2 0xa0
0x3c2: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c3: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x3c4: V356 = 0xa51a8682
0x3cb: V357 = 0x0
0x3cd: V358 = 0x40
0x3cf: V359 = M[0x40]
0x3d0: V360 = 0x20
0x3d2: V361 = ADD 0x20 V359
0x3d3: M[V361] = 0x0
0x3d4: V362 = 0x40
0x3d6: V363 = M[0x40]
0x3d7: V364 = 0xe0
0x3d9: V365 = 0x2
0x3db: V366 = EXP 0x2 0xe0
0x3dc: V367 = 0xffffffff
0x3e2: V368 = AND 0xa51a8682 0xffffffff
0x3e3: V369 = MUL 0xa51a8682 0x100000000000000000000000000000000000000000000000000000000
0x3e5: M[V363] = 0xa51a868200000000000000000000000000000000000000000000000000000000
0x3e6: V370 = 0x1
0x3e8: V371 = 0xa0
0x3ea: V372 = 0x2
0x3ec: V373 = EXP 0x2 0xa0
0x3ed: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f0: V375 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V376 = 0x4
0x3f4: V377 = ADD V363 0x4
0x3f5: M[V377] = V375
0x3f6: V378 = 0x24
0x3f9: V379 = ADD V363 0x24
0x3fa: M[V379] = S0
0x3fb: V380 = 0x44
0x3fd: V381 = ADD 0x44 V363
0x3fe: V382 = 0x20
0x400: V383 = 0x40
0x402: V384 = M[0x40]
0x405: V385 = SUB V381 V384
0x407: V386 = 0x0
0x40b: V387 = EXTCODESIZE V355
0x40c: V388 = ISZERO V387
0x40d: V389 = ISZERO V388
0x40e: V390 = 0x416
0x411: JUMPI 0x416 V389
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S0, S2, S1, V355, 0xa51a8682, V381, 0x20, V384, V385, V384, 0x0, V355]
Exit stack: [V13, S7, S6, S5, S4, S0, S2, S1, V355, 0xa51a8682, V381, 0x20, V384, V385, V384, 0x0, V355]

================================

Block 0x412
[0x412:0x415]
---
Predecessors: [0x3b4]
Successors: []
---
0x412 PUSH1 0x0
0x414 DUP1
0x415 REVERT
---
0x412: V391 = 0x0
0x415: REVERT 0x0 0x0
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, V355, 0xa51a8682, V381, 0x20, V384, V385, V384, 0x0, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, V355, 0xa51a8682, V381, 0x20, V384, V385, V384, 0x0, V355]

================================

Block 0x416
[0x416:0x422]
---
Predecessors: [0x3b4]
Successors: [0x423, 0x427]
---
0x416 JUMPDEST
0x417 PUSH2 0x2c6
0x41a GAS
0x41b SUB
0x41c CALL
0x41d ISZERO
0x41e ISZERO
0x41f PUSH2 0x427
0x422 JUMPI
---
0x416: JUMPDEST 
0x417: V392 = 0x2c6
0x41a: V393 = GAS
0x41b: V394 = SUB V393 0x2c6
0x41c: V395 = CALL V394 V355 0x0 V384 V385 V384 0x20
0x41d: V396 = ISZERO V395
0x41e: V397 = ISZERO V396
0x41f: V398 = 0x427
0x422: JUMPI 0x427 V397
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, V355, 0xa51a8682, V381, 0x20, V384, V385, V384, 0x0, V355]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, V355, 0xa51a8682, V381]

================================

Block 0x423
[0x423:0x426]
---
Predecessors: [0x416]
Successors: []
---
0x423 PUSH1 0x0
0x425 DUP1
0x426 REVERT
---
0x423: V399 = 0x0
0x426: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0xa51a8682, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0xa51a8682, S0]

================================

Block 0x427
[0x427:0x482]
---
Predecessors: [0x416]
Successors: [0x60a]
---
0x427 JUMPDEST
0x428 POP
0x429 POP
0x42a POP
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f MLOAD
0x430 POP
0x431 POP
0x432 PUSH1 0x5
0x434 DUP5
0x435 SWAP1
0x436 SSTORE
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f DUP1
0x440 DUP8
0x441 AND
0x442 SWAP1
0x443 CALLER
0x444 AND
0x445 PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x466 DUP8
0x467 DUP7
0x468 PUSH1 0x40
0x46a MLOAD
0x46b SWAP2
0x46c DUP3
0x46d MSTORE
0x46e PUSH1 0x20
0x470 DUP3
0x471 ADD
0x472 MSTORE
0x473 PUSH1 0x40
0x475 SWAP1
0x476 DUP2
0x477 ADD
0x478 SWAP1
0x479 MLOAD
0x47a DUP1
0x47b SWAP2
0x47c SUB
0x47d SWAP1
0x47e LOG3
0x47f PUSH2 0x60a
0x482 JUMP
---
0x427: JUMPDEST 
0x42b: V400 = 0x40
0x42d: V401 = M[0x40]
0x42f: V402 = M[V401]
0x432: V403 = 0x5
0x436: S[0x5] = S6
0x437: V404 = 0x1
0x439: V405 = 0xa0
0x43b: V406 = 0x2
0x43d: V407 = EXP 0x2 0xa0
0x43e: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V409 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0x443: V410 = CALLER
0x444: V411 = AND V410 0xffffffffffffffffffffffffffffffffffffffff
0x445: V412 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x468: V413 = 0x40
0x46a: V414 = M[0x40]
0x46d: M[V414] = S7
0x46e: V415 = 0x20
0x471: V416 = ADD V414 0x20
0x472: M[V416] = S5
0x473: V417 = 0x40
0x477: V418 = ADD 0x40 V414
0x479: V419 = M[0x40]
0x47c: V420 = SUB V418 V419
0x47e: LOG V419 V420 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V411 V409
0x47f: V421 = 0x60a
0x482: JUMP 0x60a
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0xa51a8682, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x483
[0x483:0x496]
---
Predecessors: [0x394]
Successors: [0xb70]
---
0x483 JUMPDEST
0x484 PUSH1 0x4
0x486 SLOAD
0x487 PUSH2 0x497
0x48a SWAP1
0x48b DUP6
0x48c SWAP1
0x48d PUSH4 0xffffffff
0x492 PUSH2 0xb70
0x495 AND
0x496 JUMP
---
0x483: JUMPDEST 
0x484: V422 = 0x4
0x486: V423 = S[0x4]
0x487: V424 = 0x497
0x48d: V425 = 0xffffffff
0x492: V426 = 0xb70
0x495: V427 = AND 0xb70 0xffffffff
0x496: JUMP 0xb70
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x497, S3, V423]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0, 0x497, S3, V423]

================================

Block 0x497
[0x497:0x4a8]
---
Predecessors: [0xb7c]
Successors: [0xb70]
---
0x497 JUMPDEST
0x498 SWAP2
0x499 POP
0x49a PUSH2 0x4a9
0x49d DUP6
0x49e DUP4
0x49f PUSH4 0xffffffff
0x4a4 PUSH2 0xb70
0x4a7 AND
0x4a8 JUMP
---
0x497: JUMPDEST 
0x49a: V428 = 0x4a9
0x49f: V429 = 0xffffffff
0x4a4: V430 = 0xb70
0x4a7: V431 = AND 0xb70 0xffffffff
0x4a8: JUMP 0xb70
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1079]
Stack pops: 6
Stack additions: [S5, S4, S3, S0, S1, 0x4a9, S5, S0]
Exit stack: [V13, S7, S6, S5, S4, S3, V1079, S1, 0x4a9, S5, V1079]

================================

Block 0x4a9
[0x4a9:0x4bf]
---
Predecessors: [0xb7c]
Successors: [0xb45]
---
0x4a9 JUMPDEST
0x4aa SWAP1
0x4ab POP
0x4ac PUSH2 0x4c0
0x4af PUSH1 0x7
0x4b1 SLOAD
0x4b2 DUP3
0x4b3 PUSH2 0xb45
0x4b6 SWAP1
0x4b7 SWAP2
0x4b8 SWAP1
0x4b9 PUSH4 0xffffffff
0x4be AND
0x4bf JUMP
---
0x4a9: JUMPDEST 
0x4ac: V432 = 0x4c0
0x4af: V433 = 0x7
0x4b1: V434 = S[0x7]
0x4b3: V435 = 0xb45
0x4b9: V436 = 0xffffffff
0x4be: V437 = AND 0xffffffff 0xb45
0x4bf: JUMP 0xb45
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1079]
Stack pops: 2
Stack additions: [S0, 0x4c0, S0, V434]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, V1079, 0x4c0, V1079, V434]

================================

Block 0x4c0
[0x4c0:0x51d]
---
Predecessors: [0xb3e]
Successors: [0x51e, 0x522]
---
0x4c0 JUMPDEST
0x4c1 PUSH1 0x1
0x4c3 SLOAD
0x4c4 SWAP1
0x4c5 SWAP4
0x4c6 POP
0x4c7 PUSH1 0x1
0x4c9 PUSH1 0xa0
0x4cb PUSH1 0x2
0x4cd EXP
0x4ce SUB
0x4cf AND
0x4d0 PUSH4 0xa51a8682
0x4d5 DUP8
0x4d6 DUP6
0x4d7 PUSH1 0x0
0x4d9 PUSH1 0x40
0x4db MLOAD
0x4dc PUSH1 0x20
0x4de ADD
0x4df MSTORE
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 PUSH1 0xe0
0x4e5 PUSH1 0x2
0x4e7 EXP
0x4e8 PUSH4 0xffffffff
0x4ed DUP6
0x4ee AND
0x4ef MUL
0x4f0 DUP2
0x4f1 MSTORE
0x4f2 PUSH1 0x1
0x4f4 PUSH1 0xa0
0x4f6 PUSH1 0x2
0x4f8 EXP
0x4f9 SUB
0x4fa SWAP1
0x4fb SWAP3
0x4fc AND
0x4fd PUSH1 0x4
0x4ff DUP4
0x500 ADD
0x501 MSTORE
0x502 PUSH1 0x24
0x504 DUP3
0x505 ADD
0x506 MSTORE
0x507 PUSH1 0x44
0x509 ADD
0x50a PUSH1 0x20
0x50c PUSH1 0x40
0x50e MLOAD
0x50f DUP1
0x510 DUP4
0x511 SUB
0x512 DUP2
0x513 PUSH1 0x0
0x515 DUP8
0x516 DUP1
0x517 EXTCODESIZE
0x518 ISZERO
0x519 ISZERO
0x51a PUSH2 0x522
0x51d JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V438 = 0x1
0x4c3: V439 = S[0x1]
0x4c7: V440 = 0x1
0x4c9: V441 = 0xa0
0x4cb: V442 = 0x2
0x4cd: V443 = EXP 0x2 0xa0
0x4ce: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x4d0: V446 = 0xa51a8682
0x4d7: V447 = 0x0
0x4d9: V448 = 0x40
0x4db: V449 = M[0x40]
0x4dc: V450 = 0x20
0x4de: V451 = ADD 0x20 V449
0x4df: M[V451] = 0x0
0x4e0: V452 = 0x40
0x4e2: V453 = M[0x40]
0x4e3: V454 = 0xe0
0x4e5: V455 = 0x2
0x4e7: V456 = EXP 0x2 0xe0
0x4e8: V457 = 0xffffffff
0x4ee: V458 = AND 0xa51a8682 0xffffffff
0x4ef: V459 = MUL 0xa51a8682 0x100000000000000000000000000000000000000000000000000000000
0x4f1: M[V453] = 0xa51a868200000000000000000000000000000000000000000000000000000000
0x4f2: V460 = 0x1
0x4f4: V461 = 0xa0
0x4f6: V462 = 0x2
0x4f8: V463 = EXP 0x2 0xa0
0x4f9: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fc: V465 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x4fd: V466 = 0x4
0x500: V467 = ADD V453 0x4
0x501: M[V467] = V465
0x502: V468 = 0x24
0x505: V469 = ADD V453 0x24
0x506: M[V469] = S0
0x507: V470 = 0x44
0x509: V471 = ADD 0x44 V453
0x50a: V472 = 0x20
0x50c: V473 = 0x40
0x50e: V474 = M[0x40]
0x511: V475 = SUB V471 V474
0x513: V476 = 0x0
0x517: V477 = EXTCODESIZE V445
0x518: V478 = ISZERO V477
0x519: V479 = ISZERO V478
0x51a: V480 = 0x522
0x51d: JUMPI 0x522 V479
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S0, S2, S1, V445, 0xa51a8682, V471, 0x20, V474, V475, V474, 0x0, V445]
Exit stack: [V13, S7, S6, S5, S4, S0, S2, S1, V445, 0xa51a8682, V471, 0x20, V474, V475, V474, 0x0, V445]

================================

Block 0x51e
[0x51e:0x521]
---
Predecessors: [0x4c0]
Successors: []
---
0x51e PUSH1 0x0
0x520 DUP1
0x521 REVERT
---
0x51e: V481 = 0x0
0x521: REVERT 0x0 0x0
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, V445, 0xa51a8682, V471, 0x20, V474, V475, V474, 0x0, V445]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, V445, 0xa51a8682, V471, 0x20, V474, V475, V474, 0x0, V445]

================================

Block 0x522
[0x522:0x52e]
---
Predecessors: [0x4c0]
Successors: [0x52f, 0x533]
---
0x522 JUMPDEST
0x523 PUSH2 0x2c6
0x526 GAS
0x527 SUB
0x528 CALL
0x529 ISZERO
0x52a ISZERO
0x52b PUSH2 0x533
0x52e JUMPI
---
0x522: JUMPDEST 
0x523: V482 = 0x2c6
0x526: V483 = GAS
0x527: V484 = SUB V483 0x2c6
0x528: V485 = CALL V484 V445 0x0 V474 V475 V474 0x20
0x529: V486 = ISZERO V485
0x52a: V487 = ISZERO V486
0x52b: V488 = 0x533
0x52e: JUMPI 0x533 V487
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, V445, 0xa51a8682, V471, 0x20, V474, V475, V474, 0x0, V445]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, V445, 0xa51a8682, V471]

================================

Block 0x52f
[0x52f:0x532]
---
Predecessors: [0x522]
Successors: []
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
---
0x52f: V489 = 0x0
0x532: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, V445, 0xa51a8682, V471]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, V445, 0xa51a8682, V471]

================================

Block 0x533
[0x533:0x54f]
---
Predecessors: [0x522]
Successors: [0xb2b]
---
0x533 JUMPDEST
0x534 POP
0x535 POP
0x536 POP
0x537 PUSH1 0x40
0x539 MLOAD
0x53a DUP1
0x53b MLOAD
0x53c POP
0x53d POP
0x53e PUSH1 0x5
0x540 SLOAD
0x541 PUSH2 0x550
0x544 SWAP1
0x545 DUP3
0x546 PUSH4 0xffffffff
0x54b PUSH2 0xb2b
0x54e AND
0x54f JUMP
---
0x533: JUMPDEST 
0x537: V490 = 0x40
0x539: V491 = M[0x40]
0x53b: V492 = M[V491]
0x53e: V493 = 0x5
0x540: V494 = S[0x5]
0x541: V495 = 0x550
0x546: V496 = 0xffffffff
0x54b: V497 = 0xb2b
0x54e: V498 = AND 0xb2b 0xffffffff
0x54f: JUMP 0xb2b
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, V445, 0xa51a8682, V471]
Stack pops: 4
Stack additions: [S3, 0x550, V494, S3]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x550, V494, S3]

================================

Block 0x550
[0x550:0x5c7]
---
Predecessors: [0xb3e]
Successors: [0x5c8, 0x5cc]
---
0x550 JUMPDEST
0x551 PUSH1 0x5
0x553 SSTORE
0x554 PUSH1 0x1
0x556 PUSH1 0xa0
0x558 PUSH1 0x2
0x55a EXP
0x55b SUB
0x55c DUP1
0x55d DUP8
0x55e AND
0x55f SWAP1
0x560 CALLER
0x561 AND
0x562 PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x583 DUP4
0x584 DUP7
0x585 PUSH1 0x40
0x587 MLOAD
0x588 SWAP2
0x589 DUP3
0x58a MSTORE
0x58b PUSH1 0x20
0x58d DUP3
0x58e ADD
0x58f MSTORE
0x590 PUSH1 0x40
0x592 SWAP1
0x593 DUP2
0x594 ADD
0x595 SWAP1
0x596 MLOAD
0x597 DUP1
0x598 SWAP2
0x599 SUB
0x59a SWAP1
0x59b LOG3
0x59c PUSH1 0x1
0x59e PUSH1 0xa0
0x5a0 PUSH1 0x2
0x5a2 EXP
0x5a3 SUB
0x5a4 DUP7
0x5a5 AND
0x5a6 DUP3
0x5a7 ISZERO
0x5a8 PUSH2 0x8fc
0x5ab MUL
0x5ac DUP4
0x5ad PUSH1 0x40
0x5af MLOAD
0x5b0 PUSH1 0x0
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP1
0x5b6 DUP4
0x5b7 SUB
0x5b8 DUP2
0x5b9 DUP6
0x5ba DUP9
0x5bb DUP9
0x5bc CALL
0x5bd SWAP4
0x5be POP
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 ISZERO
0x5c3 ISZERO
0x5c4 PUSH2 0x5cc
0x5c7 JUMPI
---
0x550: JUMPDEST 
0x551: V499 = 0x5
0x553: S[0x5] = S0
0x554: V500 = 0x1
0x556: V501 = 0xa0
0x558: V502 = 0x2
0x55a: V503 = EXP 0x2 0xa0
0x55b: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55e: V505 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x560: V506 = CALLER
0x561: V507 = AND V506 0xffffffffffffffffffffffffffffffffffffffff
0x562: V508 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x585: V509 = 0x40
0x587: V510 = M[0x40]
0x58a: M[V510] = S1
0x58b: V511 = 0x20
0x58e: V512 = ADD V510 0x20
0x58f: M[V512] = S3
0x590: V513 = 0x40
0x594: V514 = ADD 0x40 V510
0x596: V515 = M[0x40]
0x599: V516 = SUB V514 V515
0x59b: LOG V515 V516 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V507 V505
0x59c: V517 = 0x1
0x59e: V518 = 0xa0
0x5a0: V519 = 0x2
0x5a2: V520 = EXP 0x2 0xa0
0x5a3: V521 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a5: V522 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x5a7: V523 = ISZERO S2
0x5a8: V524 = 0x8fc
0x5ab: V525 = MUL 0x8fc V523
0x5ad: V526 = 0x40
0x5af: V527 = M[0x40]
0x5b0: V528 = 0x0
0x5b2: V529 = 0x40
0x5b4: V530 = M[0x40]
0x5b7: V531 = SUB V527 V530
0x5bc: V532 = CALL V525 V522 S2 V530 V531 V530 0x0
0x5c2: V533 = ISZERO V532
0x5c3: V534 = ISZERO V533
0x5c4: V535 = 0x5cc
0x5c7: JUMPI 0x5cc V534
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x5c8
[0x5c8:0x5cb]
---
Predecessors: [0x550]
Successors: []
---
0x5c8 PUSH1 0x0
0x5ca DUP1
0x5cb REVERT
---
0x5c8: V536 = 0x0
0x5cb: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5cc
[0x5cc:0x609]
---
Predecessors: [0x550]
Successors: [0x60a]
---
0x5cc JUMPDEST
0x5cd DUP6
0x5ce PUSH1 0x1
0x5d0 PUSH1 0xa0
0x5d2 PUSH1 0x2
0x5d4 EXP
0x5d5 SUB
0x5d6 AND
0x5d7 PUSH32 0xbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d
0x5f8 DUP4
0x5f9 PUSH1 0x40
0x5fb MLOAD
0x5fc SWAP1
0x5fd DUP2
0x5fe MSTORE
0x5ff PUSH1 0x20
0x601 ADD
0x602 PUSH1 0x40
0x604 MLOAD
0x605 DUP1
0x606 SWAP2
0x607 SUB
0x608 SWAP1
0x609 LOG2
---
0x5cc: JUMPDEST 
0x5ce: V537 = 0x1
0x5d0: V538 = 0xa0
0x5d2: V539 = 0x2
0x5d4: V540 = EXP 0x2 0xa0
0x5d5: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d6: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x5d7: V543 = 0xbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d
0x5f9: V544 = 0x40
0x5fb: V545 = M[0x40]
0x5fe: M[V545] = S1
0x5ff: V546 = 0x20
0x601: V547 = ADD 0x20 V545
0x602: V548 = 0x40
0x604: V549 = M[0x40]
0x607: V550 = SUB V547 V549
0x609: LOG V549 V550 0xbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d V542
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x60a
[0x60a:0x611]
---
Predecessors: [0x427, 0x5cc]
Successors: [0xe0]
---
0x60a JUMPDEST
0x60b POP
0x60c POP
0x60d POP
0x60e POP
0x60f POP
0x610 POP
0x611 JUMP
---
0x60a: JUMPDEST 
0x611: JUMP S6
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x612
[0x612:0x620]
---
Predecessors: [0xed]
Successors: [0xf5]
---
0x612 JUMPDEST
0x613 PUSH1 0x1
0x615 SLOAD
0x616 PUSH1 0x1
0x618 PUSH1 0xa0
0x61a PUSH1 0x2
0x61c EXP
0x61d SUB
0x61e AND
0x61f DUP2
0x620 JUMP
---
0x612: JUMPDEST 
0x613: V551 = 0x1
0x615: V552 = S[0x1]
0x616: V553 = 0x1
0x618: V554 = 0xa0
0x61a: V555 = 0x2
0x61c: V556 = EXP 0x2 0xa0
0x61d: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61e: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x620: JUMP 0xf5
---
Entry stack: [V13, 0xf5]
Stack pops: 1
Stack additions: [S0, V558]
Exit stack: [V13, 0xf5, V558]

================================

Block 0x621
[0x621:0x637]
---
Predecessors: [0x11c]
Successors: [0x638, 0x63c]
---
0x621 JUMPDEST
0x622 PUSH1 0x0
0x624 SLOAD
0x625 CALLER
0x626 PUSH1 0x1
0x628 PUSH1 0xa0
0x62a PUSH1 0x2
0x62c EXP
0x62d SUB
0x62e SWAP1
0x62f DUP2
0x630 AND
0x631 SWAP2
0x632 AND
0x633 EQ
0x634 PUSH2 0x63c
0x637 JUMPI
---
0x621: JUMPDEST 
0x622: V559 = 0x0
0x624: V560 = S[0x0]
0x625: V561 = CALLER
0x626: V562 = 0x1
0x628: V563 = 0xa0
0x62a: V564 = 0x2
0x62c: V565 = EXP 0x2 0xa0
0x62d: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x630: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0x632: V568 = AND V560 0xffffffffffffffffffffffffffffffffffffffff
0x633: V569 = EQ V568 V567
0x634: V570 = 0x63c
0x637: JUMPI 0x63c V569
---
Entry stack: [V13, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0]

================================

Block 0x638
[0x638:0x63b]
---
Predecessors: [0x621]
Successors: []
---
0x638 PUSH1 0x0
0x63a DUP1
0x63b REVERT
---
0x638: V571 = 0x0
0x63b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0]

================================

Block 0x63c
[0x63c:0x643]
---
Predecessors: [0x621]
Successors: [0xa60]
---
0x63c JUMPDEST
0x63d PUSH2 0x644
0x640 PUSH2 0xa60
0x643 JUMP
---
0x63c: JUMPDEST 
0x63d: V572 = 0x644
0x640: V573 = 0xa60
0x643: JUMP 0xa60
---
Entry stack: [V13, 0xe0]
Stack pops: 0
Stack additions: [0x644]
Exit stack: [V13, 0xe0, 0x644]

================================

Block 0x644
[0x644:0x64a]
---
Predecessors: [0xa7b]
Successors: [0x64b, 0x64f]
---
0x644 JUMPDEST
0x645 ISZERO
0x646 ISZERO
0x647 PUSH2 0x64f
0x64a JUMPI
---
0x644: JUMPDEST 
0x645: V574 = ISZERO S0
0x646: V575 = ISZERO V574
0x647: V576 = 0x64f
0x64a: JUMPI 0x64f V575
---
Entry stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1]

================================

Block 0x64b
[0x64b:0x64e]
---
Predecessors: [0x644]
Successors: []
---
0x64b PUSH1 0x0
0x64d DUP1
0x64e REVERT
---
0x64b: V577 = 0x0
0x64e: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x64f
[0x64f:0x683]
---
Predecessors: [0x644]
Successors: [0x684, 0x688]
---
0x64f JUMPDEST
0x650 PUSH1 0x3
0x652 SLOAD
0x653 PUSH1 0x1
0x655 PUSH1 0xa0
0x657 PUSH1 0x2
0x659 EXP
0x65a SUB
0x65b SWAP1
0x65c DUP2
0x65d AND
0x65e SWAP1
0x65f ADDRESS
0x660 AND
0x661 BALANCE
0x662 DUP1
0x663 ISZERO
0x664 PUSH2 0x8fc
0x667 MUL
0x668 SWAP1
0x669 PUSH1 0x40
0x66b MLOAD
0x66c PUSH1 0x0
0x66e PUSH1 0x40
0x670 MLOAD
0x671 DUP1
0x672 DUP4
0x673 SUB
0x674 DUP2
0x675 DUP6
0x676 DUP9
0x677 DUP9
0x678 CALL
0x679 SWAP4
0x67a POP
0x67b POP
0x67c POP
0x67d POP
0x67e ISZERO
0x67f ISZERO
0x680 PUSH2 0x688
0x683 JUMPI
---
0x64f: JUMPDEST 
0x650: V578 = 0x3
0x652: V579 = S[0x3]
0x653: V580 = 0x1
0x655: V581 = 0xa0
0x657: V582 = 0x2
0x659: V583 = EXP 0x2 0xa0
0x65a: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65d: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x65f: V586 = ADDRESS
0x660: V587 = AND V586 0xffffffffffffffffffffffffffffffffffffffff
0x661: V588 = BALANCE V587
0x663: V589 = ISZERO V588
0x664: V590 = 0x8fc
0x667: V591 = MUL 0x8fc V589
0x669: V592 = 0x40
0x66b: V593 = M[0x40]
0x66c: V594 = 0x0
0x66e: V595 = 0x40
0x670: V596 = M[0x40]
0x673: V597 = SUB V593 V596
0x678: V598 = CALL V591 V585 V588 V596 V597 V596 0x0
0x67e: V599 = ISZERO V598
0x67f: V600 = ISZERO V599
0x680: V601 = 0x688
0x683: JUMPI 0x688 V600
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x684
[0x684:0x687]
---
Predecessors: [0x64f]
Successors: []
---
0x684 PUSH1 0x0
0x686 DUP1
0x687 REVERT
---
0x684: V602 = 0x0
0x687: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x688
[0x688:0x6b5]
---
Predecessors: [0x64f]
Successors: [0xe0]
---
0x688 JUMPDEST
0x689 PUSH32 0xd199affd05325a27b0e0712711930c851835f6f9ea725c80b75aaa5022930b97
0x6aa PUSH1 0x40
0x6ac MLOAD
0x6ad PUSH1 0x40
0x6af MLOAD
0x6b0 DUP1
0x6b1 SWAP2
0x6b2 SUB
0x6b3 SWAP1
0x6b4 LOG1
0x6b5 JUMP
---
0x688: JUMPDEST 
0x689: V603 = 0xd199affd05325a27b0e0712711930c851835f6f9ea725c80b75aaa5022930b97
0x6aa: V604 = 0x40
0x6ac: V605 = M[0x40]
0x6ad: V606 = 0x40
0x6af: V607 = M[0x40]
0x6b2: V608 = SUB V605 V607
0x6b4: LOG V607 V608 0xd199affd05325a27b0e0712711930c851835f6f9ea725c80b75aaa5022930b97
0x6b5: JUMP S0
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1]

================================

Block 0x6b6
[0x6b6:0x6bb]
---
Predecessors: [0x12f]
Successors: [0x137]
---
0x6b6 JUMPDEST
0x6b7 PUSH1 0x8
0x6b9 SLOAD
0x6ba DUP2
0x6bb JUMP
---
0x6b6: JUMPDEST 
0x6b7: V609 = 0x8
0x6b9: V610 = S[0x8]
0x6bb: JUMP 0x137
---
Entry stack: [V13, 0x137]
Stack pops: 1
Stack additions: [S0, V610]
Exit stack: [V13, 0x137, V610]

================================

Block 0x6bc
[0x6bc:0x6d3]
---
Predecessors: [0x154]
Successors: [0x6d4, 0x6d8]
---
0x6bc JUMPDEST
0x6bd PUSH1 0x0
0x6bf DUP1
0x6c0 SLOAD
0x6c1 CALLER
0x6c2 PUSH1 0x1
0x6c4 PUSH1 0xa0
0x6c6 PUSH1 0x2
0x6c8 EXP
0x6c9 SUB
0x6ca SWAP1
0x6cb DUP2
0x6cc AND
0x6cd SWAP2
0x6ce AND
0x6cf EQ
0x6d0 PUSH2 0x6d8
0x6d3 JUMPI
---
0x6bc: JUMPDEST 
0x6bd: V611 = 0x0
0x6c0: V612 = S[0x0]
0x6c1: V613 = CALLER
0x6c2: V614 = 0x1
0x6c4: V615 = 0xa0
0x6c6: V616 = 0x2
0x6c8: V617 = EXP 0x2 0xa0
0x6c9: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cc: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0x6ce: V620 = AND V612 0xffffffffffffffffffffffffffffffffffffffff
0x6cf: V621 = EQ V620 V619
0x6d0: V622 = 0x6d8
0x6d3: JUMPI 0x6d8 V621
---
Entry stack: [V13, 0xe0, V118]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xe0, V118, 0x0]

================================

Block 0x6d4
[0x6d4:0x6d7]
---
Predecessors: [0x6bc]
Successors: []
---
0x6d4 PUSH1 0x0
0x6d6 DUP1
0x6d7 REVERT
---
0x6d4: V623 = 0x0
0x6d7: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V118, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V118, 0x0]

================================

Block 0x6d8
[0x6d8:0x6e8]
---
Predecessors: [0x6bc]
Successors: [0x6e9, 0x6ed]
---
0x6d8 JUMPDEST
0x6d9 PUSH1 0x1
0x6db PUSH1 0xa0
0x6dd PUSH1 0x2
0x6df EXP
0x6e0 SUB
0x6e1 DUP3
0x6e2 AND
0x6e3 ISZERO
0x6e4 ISZERO
0x6e5 PUSH2 0x6ed
0x6e8 JUMPI
---
0x6d8: JUMPDEST 
0x6d9: V624 = 0x1
0x6db: V625 = 0xa0
0x6dd: V626 = 0x2
0x6df: V627 = EXP 0x2 0xa0
0x6e0: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e2: V629 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x6e3: V630 = ISZERO V629
0x6e4: V631 = ISZERO V630
0x6e5: V632 = 0x6ed
0x6e8: JUMPI 0x6ed V631
---
Entry stack: [V13, 0xe0, V118, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xe0, V118, 0x0]

================================

Block 0x6e9
[0x6e9:0x6ec]
---
Predecessors: [0x6d8]
Successors: []
---
0x6e9 PUSH1 0x0
0x6eb DUP1
0x6ec REVERT
---
0x6e9: V633 = 0x0
0x6ec: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V118, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V118, 0x0]

================================

Block 0x6ed
[0x6ed:0x6f5]
---
Predecessors: [0x6d8]
Successors: [0x6f6, 0x6fa]
---
0x6ed JUMPDEST
0x6ee PUSH1 0x5
0x6f0 SLOAD
0x6f1 ISZERO
0x6f2 PUSH2 0x6fa
0x6f5 JUMPI
---
0x6ed: JUMPDEST 
0x6ee: V634 = 0x5
0x6f0: V635 = S[0x5]
0x6f1: V636 = ISZERO V635
0x6f2: V637 = 0x6fa
0x6f5: JUMPI 0x6fa V636
---
Entry stack: [V13, 0xe0, V118, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V118, 0x0]

================================

Block 0x6f6
[0x6f6:0x6f9]
---
Predecessors: [0x6ed]
Successors: []
---
0x6f6 PUSH1 0x0
0x6f8 DUP1
0x6f9 REVERT
---
0x6f6: V638 = 0x0
0x6f9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V118, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V118, 0x0]

================================

Block 0x6fa
[0x6fa:0x74e]
---
Predecessors: [0x6ed]
Successors: [0x74f, 0x753]
---
0x6fa JUMPDEST
0x6fb PUSH1 0x1
0x6fd SLOAD
0x6fe PUSH1 0x1
0x700 PUSH1 0xa0
0x702 PUSH1 0x2
0x704 EXP
0x705 SUB
0x706 AND
0x707 PUSH4 0x70a08231
0x70c ADDRESS
0x70d PUSH1 0x0
0x70f PUSH1 0x40
0x711 MLOAD
0x712 PUSH1 0x20
0x714 ADD
0x715 MSTORE
0x716 PUSH1 0x40
0x718 MLOAD
0x719 PUSH1 0xe0
0x71b PUSH1 0x2
0x71d EXP
0x71e PUSH4 0xffffffff
0x723 DUP5
0x724 AND
0x725 MUL
0x726 DUP2
0x727 MSTORE
0x728 PUSH1 0x1
0x72a PUSH1 0xa0
0x72c PUSH1 0x2
0x72e EXP
0x72f SUB
0x730 SWAP1
0x731 SWAP2
0x732 AND
0x733 PUSH1 0x4
0x735 DUP3
0x736 ADD
0x737 MSTORE
0x738 PUSH1 0x24
0x73a ADD
0x73b PUSH1 0x20
0x73d PUSH1 0x40
0x73f MLOAD
0x740 DUP1
0x741 DUP4
0x742 SUB
0x743 DUP2
0x744 PUSH1 0x0
0x746 DUP8
0x747 DUP1
0x748 EXTCODESIZE
0x749 ISZERO
0x74a ISZERO
0x74b PUSH2 0x753
0x74e JUMPI
---
0x6fa: JUMPDEST 
0x6fb: V639 = 0x1
0x6fd: V640 = S[0x1]
0x6fe: V641 = 0x1
0x700: V642 = 0xa0
0x702: V643 = 0x2
0x704: V644 = EXP 0x2 0xa0
0x705: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x706: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0x707: V647 = 0x70a08231
0x70c: V648 = ADDRESS
0x70d: V649 = 0x0
0x70f: V650 = 0x40
0x711: V651 = M[0x40]
0x712: V652 = 0x20
0x714: V653 = ADD 0x20 V651
0x715: M[V653] = 0x0
0x716: V654 = 0x40
0x718: V655 = M[0x40]
0x719: V656 = 0xe0
0x71b: V657 = 0x2
0x71d: V658 = EXP 0x2 0xe0
0x71e: V659 = 0xffffffff
0x724: V660 = AND 0x70a08231 0xffffffff
0x725: V661 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x727: M[V655] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x728: V662 = 0x1
0x72a: V663 = 0xa0
0x72c: V664 = 0x2
0x72e: V665 = EXP 0x2 0xa0
0x72f: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x732: V667 = AND V648 0xffffffffffffffffffffffffffffffffffffffff
0x733: V668 = 0x4
0x736: V669 = ADD V655 0x4
0x737: M[V669] = V667
0x738: V670 = 0x24
0x73a: V671 = ADD 0x24 V655
0x73b: V672 = 0x20
0x73d: V673 = 0x40
0x73f: V674 = M[0x40]
0x742: V675 = SUB V671 V674
0x744: V676 = 0x0
0x748: V677 = EXTCODESIZE V646
0x749: V678 = ISZERO V677
0x74a: V679 = ISZERO V678
0x74b: V680 = 0x753
0x74e: JUMPI 0x753 V679
---
Entry stack: [V13, 0xe0, V118, 0x0]
Stack pops: 0
Stack additions: [V646, 0x70a08231, V671, 0x20, V674, V675, V674, 0x0, V646]
Exit stack: [V13, 0xe0, V118, 0x0, V646, 0x70a08231, V671, 0x20, V674, V675, V674, 0x0, V646]

================================

Block 0x74f
[0x74f:0x752]
---
Predecessors: [0x6fa]
Successors: []
---
0x74f PUSH1 0x0
0x751 DUP1
0x752 REVERT
---
0x74f: V681 = 0x0
0x752: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V118, 0x0, V646, 0x70a08231, V671, 0x20, V674, V675, V674, 0x0, V646]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V118, 0x0, V646, 0x70a08231, V671, 0x20, V674, V675, V674, 0x0, V646]

================================

Block 0x753
[0x753:0x75f]
---
Predecessors: [0x6fa]
Successors: [0x760, 0x764]
---
0x753 JUMPDEST
0x754 PUSH2 0x2c6
0x757 GAS
0x758 SUB
0x759 CALL
0x75a ISZERO
0x75b ISZERO
0x75c PUSH2 0x764
0x75f JUMPI
---
0x753: JUMPDEST 
0x754: V682 = 0x2c6
0x757: V683 = GAS
0x758: V684 = SUB V683 0x2c6
0x759: V685 = CALL V684 V646 0x0 V674 V675 V674 0x20
0x75a: V686 = ISZERO V685
0x75b: V687 = ISZERO V686
0x75c: V688 = 0x764
0x75f: JUMPI 0x764 V687
---
Entry stack: [V13, 0xe0, V118, 0x0, V646, 0x70a08231, V671, 0x20, V674, V675, V674, 0x0, V646]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xe0, V118, 0x0, V646, 0x70a08231, V671]

================================

Block 0x760
[0x760:0x763]
---
Predecessors: [0x753]
Successors: []
---
0x760 PUSH1 0x0
0x762 DUP1
0x763 REVERT
---
0x760: V689 = 0x0
0x763: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V118, 0x0, V646, 0x70a08231, V671]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V118, 0x0, V646, 0x70a08231, V671]

================================

Block 0x764
[0x764:0x7cb]
---
Predecessors: [0x753]
Successors: [0x7cc, 0x7d0]
---
0x764 JUMPDEST
0x765 POP
0x766 POP
0x767 POP
0x768 PUSH1 0x40
0x76a MLOAD
0x76b DUP1
0x76c MLOAD
0x76d PUSH1 0x1
0x76f SLOAD
0x770 SWAP1
0x771 SWAP3
0x772 POP
0x773 PUSH1 0x1
0x775 PUSH1 0xa0
0x777 PUSH1 0x2
0x779 EXP
0x77a SUB
0x77b AND
0x77c SWAP1
0x77d POP
0x77e PUSH4 0xa51a8682
0x783 DUP4
0x784 DUP4
0x785 PUSH1 0x0
0x787 PUSH1 0x40
0x789 MLOAD
0x78a PUSH1 0x20
0x78c ADD
0x78d MSTORE
0x78e PUSH1 0x40
0x790 MLOAD
0x791 PUSH1 0xe0
0x793 PUSH1 0x2
0x795 EXP
0x796 PUSH4 0xffffffff
0x79b DUP6
0x79c AND
0x79d MUL
0x79e DUP2
0x79f MSTORE
0x7a0 PUSH1 0x1
0x7a2 PUSH1 0xa0
0x7a4 PUSH1 0x2
0x7a6 EXP
0x7a7 SUB
0x7a8 SWAP1
0x7a9 SWAP3
0x7aa AND
0x7ab PUSH1 0x4
0x7ad DUP4
0x7ae ADD
0x7af MSTORE
0x7b0 PUSH1 0x24
0x7b2 DUP3
0x7b3 ADD
0x7b4 MSTORE
0x7b5 PUSH1 0x44
0x7b7 ADD
0x7b8 PUSH1 0x20
0x7ba PUSH1 0x40
0x7bc MLOAD
0x7bd DUP1
0x7be DUP4
0x7bf SUB
0x7c0 DUP2
0x7c1 PUSH1 0x0
0x7c3 DUP8
0x7c4 DUP1
0x7c5 EXTCODESIZE
0x7c6 ISZERO
0x7c7 ISZERO
0x7c8 PUSH2 0x7d0
0x7cb JUMPI
---
0x764: JUMPDEST 
0x768: V690 = 0x40
0x76a: V691 = M[0x40]
0x76c: V692 = M[V691]
0x76d: V693 = 0x1
0x76f: V694 = S[0x1]
0x773: V695 = 0x1
0x775: V696 = 0xa0
0x777: V697 = 0x2
0x779: V698 = EXP 0x2 0xa0
0x77a: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77b: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V694
0x77e: V701 = 0xa51a8682
0x785: V702 = 0x0
0x787: V703 = 0x40
0x789: V704 = M[0x40]
0x78a: V705 = 0x20
0x78c: V706 = ADD 0x20 V704
0x78d: M[V706] = 0x0
0x78e: V707 = 0x40
0x790: V708 = M[0x40]
0x791: V709 = 0xe0
0x793: V710 = 0x2
0x795: V711 = EXP 0x2 0xe0
0x796: V712 = 0xffffffff
0x79c: V713 = AND 0xa51a8682 0xffffffff
0x79d: V714 = MUL 0xa51a8682 0x100000000000000000000000000000000000000000000000000000000
0x79f: M[V708] = 0xa51a868200000000000000000000000000000000000000000000000000000000
0x7a0: V715 = 0x1
0x7a2: V716 = 0xa0
0x7a4: V717 = 0x2
0x7a6: V718 = EXP 0x2 0xa0
0x7a7: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7aa: V720 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x7ab: V721 = 0x4
0x7ae: V722 = ADD V708 0x4
0x7af: M[V722] = V720
0x7b0: V723 = 0x24
0x7b3: V724 = ADD V708 0x24
0x7b4: M[V724] = V692
0x7b5: V725 = 0x44
0x7b7: V726 = ADD 0x44 V708
0x7b8: V727 = 0x20
0x7ba: V728 = 0x40
0x7bc: V729 = M[0x40]
0x7bf: V730 = SUB V726 V729
0x7c1: V731 = 0x0
0x7c5: V732 = EXTCODESIZE V700
0x7c6: V733 = ISZERO V732
0x7c7: V734 = ISZERO V733
0x7c8: V735 = 0x7d0
0x7cb: JUMPI 0x7d0 V734
---
Entry stack: [V13, 0xe0, V118, 0x0, V646, 0x70a08231, V671]
Stack pops: 5
Stack additions: [S4, V692, V700, 0xa51a8682, V726, 0x20, V729, V730, V729, 0x0, V700]
Exit stack: [V13, 0xe0, V118, V692, V700, 0xa51a8682, V726, 0x20, V729, V730, V729, 0x0, V700]

================================

Block 0x7cc
[0x7cc:0x7cf]
---
Predecessors: [0x764]
Successors: []
---
0x7cc PUSH1 0x0
0x7ce DUP1
0x7cf REVERT
---
0x7cc: V736 = 0x0
0x7cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V118, V692, V700, 0xa51a8682, V726, 0x20, V729, V730, V729, 0x0, V700]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V118, V692, V700, 0xa51a8682, V726, 0x20, V729, V730, V729, 0x0, V700]

================================

Block 0x7d0
[0x7d0:0x7dc]
---
Predecessors: [0x764]
Successors: [0x7dd, 0x7e1]
---
0x7d0 JUMPDEST
0x7d1 PUSH2 0x2c6
0x7d4 GAS
0x7d5 SUB
0x7d6 CALL
0x7d7 ISZERO
0x7d8 ISZERO
0x7d9 PUSH2 0x7e1
0x7dc JUMPI
---
0x7d0: JUMPDEST 
0x7d1: V737 = 0x2c6
0x7d4: V738 = GAS
0x7d5: V739 = SUB V738 0x2c6
0x7d6: V740 = CALL V739 V700 0x0 V729 V730 V729 0x20
0x7d7: V741 = ISZERO V740
0x7d8: V742 = ISZERO V741
0x7d9: V743 = 0x7e1
0x7dc: JUMPI 0x7e1 V742
---
Entry stack: [V13, 0xe0, V118, V692, V700, 0xa51a8682, V726, 0x20, V729, V730, V729, 0x0, V700]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xe0, V118, V692, V700, 0xa51a8682, V726]

================================

Block 0x7dd
[0x7dd:0x7e0]
---
Predecessors: [0x7d0]
Successors: []
---
0x7dd PUSH1 0x0
0x7df DUP1
0x7e0 REVERT
---
0x7dd: V744 = 0x0
0x7e0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V118, V692, V700, 0xa51a8682, V726]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V118, V692, V700, 0xa51a8682, V726]

================================

Block 0x7e1
[0x7e1:0x7ee]
---
Predecessors: [0x7d0]
Successors: [0xe0]
---
0x7e1 JUMPDEST
0x7e2 POP
0x7e3 POP
0x7e4 POP
0x7e5 PUSH1 0x40
0x7e7 MLOAD
0x7e8 DUP1
0x7e9 MLOAD
0x7ea POP
0x7eb POP
0x7ec POP
0x7ed POP
0x7ee JUMP
---
0x7e1: JUMPDEST 
0x7e5: V745 = 0x40
0x7e7: V746 = M[0x40]
0x7e9: V747 = M[V746]
0x7ee: JUMP 0xe0
---
Entry stack: [V13, 0xe0, V118, V692, V700, 0xa51a8682, V726]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x7ef
[0x7ef:0x7f4]
---
Predecessors: [0x173]
Successors: [0x137]
---
0x7ef JUMPDEST
0x7f0 PUSH1 0x7
0x7f2 SLOAD
0x7f3 DUP2
0x7f4 JUMP
---
0x7ef: JUMPDEST 
0x7f0: V748 = 0x7
0x7f2: V749 = S[0x7]
0x7f4: JUMP 0x137
---
Entry stack: [V13, 0x137]
Stack pops: 1
Stack additions: [S0, V749]
Exit stack: [V13, 0x137, V749]

================================

Block 0x7f5
[0x7f5:0x7fa]
---
Predecessors: [0x186]
Successors: [0x137]
---
0x7f5 JUMPDEST
0x7f6 PUSH1 0xa
0x7f8 SLOAD
0x7f9 DUP2
0x7fa JUMP
---
0x7f5: JUMPDEST 
0x7f6: V750 = 0xa
0x7f8: V751 = S[0xa]
0x7fa: JUMP 0x137
---
Entry stack: [V13, 0x137]
Stack pops: 1
Stack additions: [S0, V751]
Exit stack: [V13, 0x137, V751]

================================

Block 0x7fb
[0x7fb:0x800]
---
Predecessors: [0x199]
Successors: [0x137]
---
0x7fb JUMPDEST
0x7fc PUSH1 0x6
0x7fe SLOAD
0x7ff DUP2
0x800 JUMP
---
0x7fb: JUMPDEST 
0x7fc: V752 = 0x6
0x7fe: V753 = S[0x6]
0x800: JUMP 0x137
---
Entry stack: [V13, 0x137]
Stack pops: 1
Stack additions: [S0, V753]
Exit stack: [V13, 0x137, V753]

================================

Block 0x801
[0x801:0x806]
---
Predecessors: [0x1ac]
Successors: [0x137]
---
0x801 JUMPDEST
0x802 PUSH1 0x5
0x804 SLOAD
0x805 DUP2
0x806 JUMP
---
0x801: JUMPDEST 
0x802: V754 = 0x5
0x804: V755 = S[0x5]
0x806: JUMP 0x137
---
Entry stack: [V13, 0x137]
Stack pops: 1
Stack additions: [S0, V755]
Exit stack: [V13, 0x137, V755]

================================

Block 0x807
[0x807:0x824]
---
Predecessors: [0x1bf]
Successors: [0x825, 0x829]
---
0x807 JUMPDEST
0x808 PUSH1 0x0
0x80a DUP1
0x80b SLOAD
0x80c DUP2
0x80d SWAP1
0x80e DUP2
0x80f SWAP1
0x810 DUP2
0x811 SWAP1
0x812 CALLER
0x813 PUSH1 0x1
0x815 PUSH1 0xa0
0x817 PUSH1 0x2
0x819 EXP
0x81a SUB
0x81b SWAP1
0x81c DUP2
0x81d AND
0x81e SWAP2
0x81f AND
0x820 EQ
0x821 PUSH2 0x829
0x824 JUMPI
---
0x807: JUMPDEST 
0x808: V756 = 0x0
0x80b: V757 = S[0x0]
0x812: V758 = CALLER
0x813: V759 = 0x1
0x815: V760 = 0xa0
0x817: V761 = 0x2
0x819: V762 = EXP 0x2 0xa0
0x81a: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81d: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0x81f: V765 = AND V757 0xffffffffffffffffffffffffffffffffffffffff
0x820: V766 = EQ V765 V764
0x821: V767 = 0x829
0x824: JUMPI 0x829 V766
---
Entry stack: [V13, 0xe0, V156]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0xe0, V156, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x825
[0x825:0x828]
---
Predecessors: [0x807]
Successors: []
---
0x825 PUSH1 0x0
0x827 DUP1
0x828 REVERT
---
0x825: V768 = 0x0
0x828: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V156, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V156, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x829
[0x829:0x839]
---
Predecessors: [0x807]
Successors: [0x83a, 0x83e]
---
0x829 JUMPDEST
0x82a PUSH1 0x1
0x82c PUSH1 0xa0
0x82e PUSH1 0x2
0x830 EXP
0x831 SUB
0x832 DUP6
0x833 AND
0x834 ISZERO
0x835 ISZERO
0x836 PUSH2 0x83e
0x839 JUMPI
---
0x829: JUMPDEST 
0x82a: V769 = 0x1
0x82c: V770 = 0xa0
0x82e: V771 = 0x2
0x830: V772 = EXP 0x2 0xa0
0x831: V773 = SUB 0x10000000000000000000000000000000000000000 0x1
0x833: V774 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x834: V775 = ISZERO V774
0x835: V776 = ISZERO V775
0x836: V777 = 0x83e
0x839: JUMPI 0x83e V776
---
Entry stack: [V13, 0xe0, V156, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0xe0, V156, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x83a
[0x83a:0x83d]
---
Predecessors: [0x829]
Successors: []
---
0x83a PUSH1 0x0
0x83c DUP1
0x83d REVERT
---
0x83a: V778 = 0x0
0x83d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V156, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V156, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x83e
[0x83e:0x845]
---
Predecessors: [0x829]
Successors: [0xa60]
---
0x83e JUMPDEST
0x83f PUSH2 0x846
0x842 PUSH2 0xa60
0x845 JUMP
---
0x83e: JUMPDEST 
0x83f: V779 = 0x846
0x842: V780 = 0xa60
0x845: JUMP 0xa60
---
Entry stack: [V13, 0xe0, V156, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x846]
Exit stack: [V13, 0xe0, V156, 0x0, 0x0, 0x0, 0x0, 0x846]

================================

Block 0x846
[0x846:0x84c]
---
Predecessors: [0xa7b]
Successors: [0x84d, 0x851]
---
0x846 JUMPDEST
0x847 ISZERO
0x848 ISZERO
0x849 PUSH2 0x851
0x84c JUMPI
---
0x846: JUMPDEST 
0x847: V781 = ISZERO S0
0x848: V782 = ISZERO V781
0x849: V783 = 0x851
0x84c: JUMPI 0x851 V782
---
Entry stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1]

================================

Block 0x84d
[0x84d:0x850]
---
Predecessors: [0x846]
Successors: []
---
0x84d PUSH1 0x0
0x84f DUP1
0x850 REVERT
---
0x84d: V784 = 0x0
0x850: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x851
[0x851:0x865]
---
Predecessors: [0x846]
Successors: [0xb70]
---
0x851 JUMPDEST
0x852 PUSH1 0x5
0x854 SLOAD
0x855 PUSH1 0x4
0x857 SLOAD
0x858 PUSH2 0x866
0x85b SWAP2
0x85c PUSH4 0xffffffff
0x861 PUSH2 0xb70
0x864 AND
0x865 JUMP
---
0x851: JUMPDEST 
0x852: V785 = 0x5
0x854: V786 = S[0x5]
0x855: V787 = 0x4
0x857: V788 = S[0x4]
0x858: V789 = 0x866
0x85c: V790 = 0xffffffff
0x861: V791 = 0xb70
0x864: V792 = AND 0xb70 0xffffffff
0x865: JUMP 0xb70
---
Entry stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: [0x866, V788, V786]
Exit stack: [V13, S6, S5, S4, 0x0, 0x0, S1, S0, 0x866, V788, V786]

================================

Block 0x866
[0x866:0x870]
---
Predecessors: [0xb7c]
Successors: [0x871, 0x875]
---
0x866 JUMPDEST
0x867 SWAP4
0x868 POP
0x869 PUSH1 0x0
0x86b DUP5
0x86c GT
0x86d PUSH2 0x875
0x870 JUMPI
---
0x866: JUMPDEST 
0x869: V793 = 0x0
0x86c: V794 = GT V1079 0x0
0x86d: V795 = 0x875
0x870: JUMPI 0x875 V794
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1079]
Stack pops: 5
Stack additions: [S0, S3, S2, S1]
Exit stack: [V13, S7, S6, S5, V1079, S3, S2, S1]

================================

Block 0x871
[0x871:0x874]
---
Predecessors: [0x866]
Successors: []
---
0x871 PUSH1 0x0
0x873 DUP1
0x874 REVERT
---
0x871: V796 = 0x0
0x874: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, V1079, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, V1079, S2, S1, S0]

================================

Block 0x875
[0x875:0x8c9]
---
Predecessors: [0x866]
Successors: [0x8ca, 0x8ce]
---
0x875 JUMPDEST
0x876 PUSH1 0x1
0x878 SLOAD
0x879 PUSH1 0x1
0x87b PUSH1 0xa0
0x87d PUSH1 0x2
0x87f EXP
0x880 SUB
0x881 AND
0x882 PUSH4 0x70a08231
0x887 ADDRESS
0x888 PUSH1 0x0
0x88a PUSH1 0x40
0x88c MLOAD
0x88d PUSH1 0x20
0x88f ADD
0x890 MSTORE
0x891 PUSH1 0x40
0x893 MLOAD
0x894 PUSH1 0xe0
0x896 PUSH1 0x2
0x898 EXP
0x899 PUSH4 0xffffffff
0x89e DUP5
0x89f AND
0x8a0 MUL
0x8a1 DUP2
0x8a2 MSTORE
0x8a3 PUSH1 0x1
0x8a5 PUSH1 0xa0
0x8a7 PUSH1 0x2
0x8a9 EXP
0x8aa SUB
0x8ab SWAP1
0x8ac SWAP2
0x8ad AND
0x8ae PUSH1 0x4
0x8b0 DUP3
0x8b1 ADD
0x8b2 MSTORE
0x8b3 PUSH1 0x24
0x8b5 ADD
0x8b6 PUSH1 0x20
0x8b8 PUSH1 0x40
0x8ba MLOAD
0x8bb DUP1
0x8bc DUP4
0x8bd SUB
0x8be DUP2
0x8bf PUSH1 0x0
0x8c1 DUP8
0x8c2 DUP1
0x8c3 EXTCODESIZE
0x8c4 ISZERO
0x8c5 ISZERO
0x8c6 PUSH2 0x8ce
0x8c9 JUMPI
---
0x875: JUMPDEST 
0x876: V797 = 0x1
0x878: V798 = S[0x1]
0x879: V799 = 0x1
0x87b: V800 = 0xa0
0x87d: V801 = 0x2
0x87f: V802 = EXP 0x2 0xa0
0x880: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x881: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0x882: V805 = 0x70a08231
0x887: V806 = ADDRESS
0x888: V807 = 0x0
0x88a: V808 = 0x40
0x88c: V809 = M[0x40]
0x88d: V810 = 0x20
0x88f: V811 = ADD 0x20 V809
0x890: M[V811] = 0x0
0x891: V812 = 0x40
0x893: V813 = M[0x40]
0x894: V814 = 0xe0
0x896: V815 = 0x2
0x898: V816 = EXP 0x2 0xe0
0x899: V817 = 0xffffffff
0x89f: V818 = AND 0x70a08231 0xffffffff
0x8a0: V819 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x8a2: M[V813] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x8a3: V820 = 0x1
0x8a5: V821 = 0xa0
0x8a7: V822 = 0x2
0x8a9: V823 = EXP 0x2 0xa0
0x8aa: V824 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ad: V825 = AND V806 0xffffffffffffffffffffffffffffffffffffffff
0x8ae: V826 = 0x4
0x8b1: V827 = ADD V813 0x4
0x8b2: M[V827] = V825
0x8b3: V828 = 0x24
0x8b5: V829 = ADD 0x24 V813
0x8b6: V830 = 0x20
0x8b8: V831 = 0x40
0x8ba: V832 = M[0x40]
0x8bd: V833 = SUB V829 V832
0x8bf: V834 = 0x0
0x8c3: V835 = EXTCODESIZE V804
0x8c4: V836 = ISZERO V835
0x8c5: V837 = ISZERO V836
0x8c6: V838 = 0x8ce
0x8c9: JUMPI 0x8ce V837
---
Entry stack: [V13, S6, S5, S4, V1079, S2, S1, S0]
Stack pops: 0
Stack additions: [V804, 0x70a08231, V829, 0x20, V832, V833, V832, 0x0, V804]
Exit stack: [V13, S6, S5, S4, V1079, S2, S1, S0, V804, 0x70a08231, V829, 0x20, V832, V833, V832, 0x0, V804]

================================

Block 0x8ca
[0x8ca:0x8cd]
---
Predecessors: [0x875]
Successors: []
---
0x8ca PUSH1 0x0
0x8cc DUP1
0x8cd REVERT
---
0x8ca: V839 = 0x0
0x8cd: REVERT 0x0 0x0
---
Entry stack: [V13, S15, S14, S13, S12, 0x0, S10, S9, V804, 0x70a08231, V829, 0x20, V832, V833, V832, 0x0, V804]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, 0x0, S10, S9, V804, 0x70a08231, V829, 0x20, V832, V833, V832, 0x0, V804]

================================

Block 0x8ce
[0x8ce:0x8da]
---
Predecessors: [0x875]
Successors: [0x8db, 0x8df]
---
0x8ce JUMPDEST
0x8cf PUSH2 0x2c6
0x8d2 GAS
0x8d3 SUB
0x8d4 CALL
0x8d5 ISZERO
0x8d6 ISZERO
0x8d7 PUSH2 0x8df
0x8da JUMPI
---
0x8ce: JUMPDEST 
0x8cf: V840 = 0x2c6
0x8d2: V841 = GAS
0x8d3: V842 = SUB V841 0x2c6
0x8d4: V843 = CALL V842 V804 0x0 V832 V833 V832 0x20
0x8d5: V844 = ISZERO V843
0x8d6: V845 = ISZERO V844
0x8d7: V846 = 0x8df
0x8da: JUMPI 0x8df V845
---
Entry stack: [V13, S15, S14, S13, S12, 0x0, S10, S9, V804, 0x70a08231, V829, 0x20, V832, V833, V832, 0x0, V804]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, 0x0, S10, S9, V804, 0x70a08231, V829]

================================

Block 0x8db
[0x8db:0x8de]
---
Predecessors: [0x8ce]
Successors: []
---
0x8db PUSH1 0x0
0x8dd DUP1
0x8de REVERT
---
0x8db: V847 = 0x0
0x8de: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, 0x0, S4, S3, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, 0x0, S4, S3, S2, 0x70a08231, S0]

================================

Block 0x8df
[0x8df:0x8fe]
---
Predecessors: [0x8ce]
Successors: [0xb45]
---
0x8df JUMPDEST
0x8e0 POP
0x8e1 POP
0x8e2 POP
0x8e3 PUSH1 0x40
0x8e5 MLOAD
0x8e6 DUP1
0x8e7 MLOAD
0x8e8 PUSH1 0x8
0x8ea SLOAD
0x8eb SWAP1
0x8ec SWAP5
0x8ed POP
0x8ee PUSH2 0x8ff
0x8f1 SWAP2
0x8f2 POP
0x8f3 DUP6
0x8f4 SWAP1
0x8f5 PUSH4 0xffffffff
0x8fa PUSH2 0xb45
0x8fd AND
0x8fe JUMP
---
0x8df: JUMPDEST 
0x8e3: V848 = 0x40
0x8e5: V849 = M[0x40]
0x8e7: V850 = M[V849]
0x8e8: V851 = 0x8
0x8ea: V852 = S[0x8]
0x8ee: V853 = 0x8ff
0x8f5: V854 = 0xffffffff
0x8fa: V855 = 0xb45
0x8fd: V856 = AND 0xb45 0xffffffff
0x8fe: JUMP 0xb45
---
Entry stack: [V13, S9, S8, S7, S6, 0x0, S4, S3, S2, 0x70a08231, S0]
Stack pops: 7
Stack additions: [S6, V850, S4, S3, 0x8ff, S6, V852]
Exit stack: [V13, S9, S8, S7, S6, V850, S4, S3, 0x8ff, S6, V852]

================================

Block 0x8ff
[0x8ff:0x910]
---
Predecessors: [0xb3e]
Successors: [0xb70]
---
0x8ff JUMPDEST
0x900 SWAP2
0x901 POP
0x902 PUSH2 0x911
0x905 DUP4
0x906 DUP4
0x907 PUSH4 0xffffffff
0x90c PUSH2 0xb70
0x90f AND
0x910 JUMP
---
0x8ff: JUMPDEST 
0x902: V857 = 0x911
0x907: V858 = 0xffffffff
0x90c: V859 = 0xb70
0x90f: V860 = AND 0xb70 0xffffffff
0x910: JUMP 0xb70
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S0, S1, 0x911, S3, S0]
Exit stack: [V13, S7, S6, S5, S4, S3, S0, S1, 0x911, S3, S0]

================================

Block 0x911
[0x911:0x957]
---
Predecessors: [0xb7c]
Successors: [0x958, 0x95c]
---
0x911 JUMPDEST
0x912 PUSH1 0x1
0x914 SLOAD
0x915 SWAP1
0x916 SWAP2
0x917 POP
0x918 PUSH1 0x1
0x91a PUSH1 0xa0
0x91c PUSH1 0x2
0x91e EXP
0x91f SUB
0x920 AND
0x921 PUSH4 0x42966c68
0x926 DUP4
0x927 PUSH1 0x40
0x929 MLOAD
0x92a PUSH1 0xe0
0x92c PUSH1 0x2
0x92e EXP
0x92f PUSH4 0xffffffff
0x934 DUP5
0x935 AND
0x936 MUL
0x937 DUP2
0x938 MSTORE
0x939 PUSH1 0x4
0x93b DUP2
0x93c ADD
0x93d SWAP2
0x93e SWAP1
0x93f SWAP2
0x940 MSTORE
0x941 PUSH1 0x24
0x943 ADD
0x944 PUSH1 0x0
0x946 PUSH1 0x40
0x948 MLOAD
0x949 DUP1
0x94a DUP4
0x94b SUB
0x94c DUP2
0x94d PUSH1 0x0
0x94f DUP8
0x950 DUP1
0x951 EXTCODESIZE
0x952 ISZERO
0x953 ISZERO
0x954 PUSH2 0x95c
0x957 JUMPI
---
0x911: JUMPDEST 
0x912: V861 = 0x1
0x914: V862 = S[0x1]
0x918: V863 = 0x1
0x91a: V864 = 0xa0
0x91c: V865 = 0x2
0x91e: V866 = EXP 0x2 0xa0
0x91f: V867 = SUB 0x10000000000000000000000000000000000000000 0x1
0x920: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0x921: V869 = 0x42966c68
0x927: V870 = 0x40
0x929: V871 = M[0x40]
0x92a: V872 = 0xe0
0x92c: V873 = 0x2
0x92e: V874 = EXP 0x2 0xe0
0x92f: V875 = 0xffffffff
0x935: V876 = AND 0x42966c68 0xffffffff
0x936: V877 = MUL 0x42966c68 0x100000000000000000000000000000000000000000000000000000000
0x938: M[V871] = 0x42966c6800000000000000000000000000000000000000000000000000000000
0x939: V878 = 0x4
0x93c: V879 = ADD V871 0x4
0x940: M[V879] = S2
0x941: V880 = 0x24
0x943: V881 = ADD 0x24 V871
0x944: V882 = 0x0
0x946: V883 = 0x40
0x948: V884 = M[0x40]
0x94b: V885 = SUB V881 V884
0x94d: V886 = 0x0
0x951: V887 = EXTCODESIZE V868
0x952: V888 = ISZERO V887
0x953: V889 = ISZERO V888
0x954: V890 = 0x95c
0x957: JUMPI 0x95c V889
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1079]
Stack pops: 3
Stack additions: [S2, S0, V868, 0x42966c68, V881, 0x0, V884, V885, V884, 0x0, V868]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, V1079, V868, 0x42966c68, V881, 0x0, V884, V885, V884, 0x0, V868]

================================

Block 0x958
[0x958:0x95b]
---
Predecessors: [0x911]
Successors: []
---
0x958 PUSH1 0x0
0x95a DUP1
0x95b REVERT
---
0x958: V891 = 0x0
0x95b: REVERT 0x0 0x0
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, V868, 0x42966c68, V881, 0x0, V884, V885, V884, 0x0, V868]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, V868, 0x42966c68, V881, 0x0, V884, V885, V884, 0x0, V868]

================================

Block 0x95c
[0x95c:0x968]
---
Predecessors: [0x911]
Successors: [0x969, 0x96d]
---
0x95c JUMPDEST
0x95d PUSH2 0x2c6
0x960 GAS
0x961 SUB
0x962 CALL
0x963 ISZERO
0x964 ISZERO
0x965 PUSH2 0x96d
0x968 JUMPI
---
0x95c: JUMPDEST 
0x95d: V892 = 0x2c6
0x960: V893 = GAS
0x961: V894 = SUB V893 0x2c6
0x962: V895 = CALL V894 V868 0x0 V884 V885 V884 0x0
0x963: V896 = ISZERO V895
0x964: V897 = ISZERO V896
0x965: V898 = 0x96d
0x968: JUMPI 0x96d V897
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, V868, 0x42966c68, V881, 0x0, V884, V885, V884, 0x0, V868]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, V868, 0x42966c68, V881]

================================

Block 0x969
[0x969:0x96c]
---
Predecessors: [0x95c]
Successors: []
---
0x969 PUSH1 0x0
0x96b DUP1
0x96c REVERT
---
0x969: V899 = 0x0
0x96c: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0x42966c68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0x42966c68, S0]

================================

Block 0x96d
[0x96d:0x9cb]
---
Predecessors: [0x95c]
Successors: [0x9cc, 0x9d0]
---
0x96d JUMPDEST
0x96e POP
0x96f POP
0x970 PUSH1 0x1
0x972 SLOAD
0x973 PUSH1 0x1
0x975 PUSH1 0xa0
0x977 PUSH1 0x2
0x979 EXP
0x97a SUB
0x97b AND
0x97c SWAP1
0x97d POP
0x97e PUSH4 0xa51a8682
0x983 DUP7
0x984 DUP4
0x985 PUSH1 0x0
0x987 PUSH1 0x40
0x989 MLOAD
0x98a PUSH1 0x20
0x98c ADD
0x98d MSTORE
0x98e PUSH1 0x40
0x990 MLOAD
0x991 PUSH1 0xe0
0x993 PUSH1 0x2
0x995 EXP
0x996 PUSH4 0xffffffff
0x99b DUP6
0x99c AND
0x99d MUL
0x99e DUP2
0x99f MSTORE
0x9a0 PUSH1 0x1
0x9a2 PUSH1 0xa0
0x9a4 PUSH1 0x2
0x9a6 EXP
0x9a7 SUB
0x9a8 SWAP1
0x9a9 SWAP3
0x9aa AND
0x9ab PUSH1 0x4
0x9ad DUP4
0x9ae ADD
0x9af MSTORE
0x9b0 PUSH1 0x24
0x9b2 DUP3
0x9b3 ADD
0x9b4 MSTORE
0x9b5 PUSH1 0x44
0x9b7 ADD
0x9b8 PUSH1 0x20
0x9ba PUSH1 0x40
0x9bc MLOAD
0x9bd DUP1
0x9be DUP4
0x9bf SUB
0x9c0 DUP2
0x9c1 PUSH1 0x0
0x9c3 DUP8
0x9c4 DUP1
0x9c5 EXTCODESIZE
0x9c6 ISZERO
0x9c7 ISZERO
0x9c8 PUSH2 0x9d0
0x9cb JUMPI
---
0x96d: JUMPDEST 
0x970: V900 = 0x1
0x972: V901 = S[0x1]
0x973: V902 = 0x1
0x975: V903 = 0xa0
0x977: V904 = 0x2
0x979: V905 = EXP 0x2 0xa0
0x97a: V906 = SUB 0x10000000000000000000000000000000000000000 0x1
0x97b: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V901
0x97e: V908 = 0xa51a8682
0x985: V909 = 0x0
0x987: V910 = 0x40
0x989: V911 = M[0x40]
0x98a: V912 = 0x20
0x98c: V913 = ADD 0x20 V911
0x98d: M[V913] = 0x0
0x98e: V914 = 0x40
0x990: V915 = M[0x40]
0x991: V916 = 0xe0
0x993: V917 = 0x2
0x995: V918 = EXP 0x2 0xe0
0x996: V919 = 0xffffffff
0x99c: V920 = AND 0xa51a8682 0xffffffff
0x99d: V921 = MUL 0xa51a8682 0x100000000000000000000000000000000000000000000000000000000
0x99f: M[V915] = 0xa51a868200000000000000000000000000000000000000000000000000000000
0x9a0: V922 = 0x1
0x9a2: V923 = 0xa0
0x9a4: V924 = 0x2
0x9a6: V925 = EXP 0x2 0xa0
0x9a7: V926 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9aa: V927 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x9ab: V928 = 0x4
0x9ae: V929 = ADD V915 0x4
0x9af: M[V929] = V927
0x9b0: V930 = 0x24
0x9b3: V931 = ADD V915 0x24
0x9b4: M[V931] = S3
0x9b5: V932 = 0x44
0x9b7: V933 = ADD 0x44 V915
0x9b8: V934 = 0x20
0x9ba: V935 = 0x40
0x9bc: V936 = M[0x40]
0x9bf: V937 = SUB V933 V936
0x9c1: V938 = 0x0
0x9c5: V939 = EXTCODESIZE V907
0x9c6: V940 = ISZERO V939
0x9c7: V941 = ISZERO V940
0x9c8: V942 = 0x9d0
0x9cb: JUMPI 0x9d0 V941
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0x42966c68, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V907, 0xa51a8682, V933, 0x20, V936, V937, V936, 0x0, V907]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, V907, 0xa51a8682, V933, 0x20, V936, V937, V936, 0x0, V907]

================================

Block 0x9cc
[0x9cc:0x9cf]
---
Predecessors: [0x96d]
Successors: []
---
0x9cc PUSH1 0x0
0x9ce DUP1
0x9cf REVERT
---
0x9cc: V943 = 0x0
0x9cf: REVERT 0x0 0x0
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, V907, 0xa51a8682, V933, 0x20, V936, V937, V936, 0x0, V907]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, V907, 0xa51a8682, V933, 0x20, V936, V937, V936, 0x0, V907]

================================

Block 0x9d0
[0x9d0:0x9dc]
---
Predecessors: [0x96d]
Successors: [0x9dd, 0x9e1]
---
0x9d0 JUMPDEST
0x9d1 PUSH2 0x2c6
0x9d4 GAS
0x9d5 SUB
0x9d6 CALL
0x9d7 ISZERO
0x9d8 ISZERO
0x9d9 PUSH2 0x9e1
0x9dc JUMPI
---
0x9d0: JUMPDEST 
0x9d1: V944 = 0x2c6
0x9d4: V945 = GAS
0x9d5: V946 = SUB V945 0x2c6
0x9d6: V947 = CALL V946 V907 0x0 V936 V937 V936 0x20
0x9d7: V948 = ISZERO V947
0x9d8: V949 = ISZERO V948
0x9d9: V950 = 0x9e1
0x9dc: JUMPI 0x9e1 V949
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, V907, 0xa51a8682, V933, 0x20, V936, V937, V936, 0x0, V907]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, V907, 0xa51a8682, V933]

================================

Block 0x9dd
[0x9dd:0x9e0]
---
Predecessors: [0x9d0]
Successors: []
---
0x9dd PUSH1 0x0
0x9df DUP1
0x9e0 REVERT
---
0x9dd: V951 = 0x0
0x9e0: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0xa51a8682, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0xa51a8682, S0]

================================

Block 0x9e1
[0x9e1:0xa2c]
---
Predecessors: [0x9d0]
Successors: [0xe0]
---
0x9e1 JUMPDEST
0x9e2 POP
0x9e3 POP
0x9e4 POP
0x9e5 PUSH1 0x40
0x9e7 MLOAD
0x9e8 DUP1
0x9e9 MLOAD
0x9ea SWAP1
0x9eb POP
0x9ec POP
0x9ed PUSH32 0x11ce8bfb61c9db9fd6bd20bfadf06bf5ccb2d1c694752bf7aa91ce195fdae7b
0xa0e DUP3
0xa0f DUP3
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 SWAP2
0xa14 DUP3
0xa15 MSTORE
0xa16 PUSH1 0x20
0xa18 DUP3
0xa19 ADD
0xa1a MSTORE
0xa1b PUSH1 0x40
0xa1d SWAP1
0xa1e DUP2
0xa1f ADD
0xa20 SWAP1
0xa21 MLOAD
0xa22 DUP1
0xa23 SWAP2
0xa24 SUB
0xa25 SWAP1
0xa26 LOG1
0xa27 POP
0xa28 POP
0xa29 POP
0xa2a POP
0xa2b POP
0xa2c JUMP
---
0x9e1: JUMPDEST 
0x9e5: V952 = 0x40
0x9e7: V953 = M[0x40]
0x9e9: V954 = M[V953]
0x9ed: V955 = 0x11ce8bfb61c9db9fd6bd20bfadf06bf5ccb2d1c694752bf7aa91ce195fdae7b
0xa10: V956 = 0x40
0xa12: V957 = M[0x40]
0xa15: M[V957] = S4
0xa16: V958 = 0x20
0xa19: V959 = ADD V957 0x20
0xa1a: M[V959] = S3
0xa1b: V960 = 0x40
0xa1f: V961 = ADD 0x40 V957
0xa21: V962 = M[0x40]
0xa24: V963 = SUB V961 V962
0xa26: LOG V962 V963 0x11ce8bfb61c9db9fd6bd20bfadf06bf5ccb2d1c694752bf7aa91ce195fdae7b
0xa2c: JUMP S8
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0xa51a8682, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V13, S9]

================================

Block 0xa2d
[0xa2d:0xa3b]
---
Predecessors: [0x1de]
Successors: [0xf5]
---
0xa2d JUMPDEST
0xa2e PUSH1 0x3
0xa30 SLOAD
0xa31 PUSH1 0x1
0xa33 PUSH1 0xa0
0xa35 PUSH1 0x2
0xa37 EXP
0xa38 SUB
0xa39 AND
0xa3a DUP2
0xa3b JUMP
---
0xa2d: JUMPDEST 
0xa2e: V964 = 0x3
0xa30: V965 = S[0x3]
0xa31: V966 = 0x1
0xa33: V967 = 0xa0
0xa35: V968 = 0x2
0xa37: V969 = EXP 0x2 0xa0
0xa38: V970 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa39: V971 = AND 0xffffffffffffffffffffffffffffffffffffffff V965
0xa3b: JUMP 0xf5
---
Entry stack: [V13, 0xf5]
Stack pops: 1
Stack additions: [S0, V971]
Exit stack: [V13, 0xf5, V971]

================================

Block 0xa3c
[0xa3c:0xa41]
---
Predecessors: [0x1f1]
Successors: [0x137]
---
0xa3c JUMPDEST
0xa3d PUSH1 0x9
0xa3f SLOAD
0xa40 DUP2
0xa41 JUMP
---
0xa3c: JUMPDEST 
0xa3d: V972 = 0x9
0xa3f: V973 = S[0x9]
0xa41: JUMP 0x137
---
Entry stack: [V13, 0x137]
Stack pops: 1
Stack additions: [S0, V973]
Exit stack: [V13, 0x137, V973]

================================

Block 0xa42
[0xa42:0xa50]
---
Predecessors: [0x204]
Successors: [0xf5]
---
0xa42 JUMPDEST
0xa43 PUSH1 0x0
0xa45 SLOAD
0xa46 PUSH1 0x1
0xa48 PUSH1 0xa0
0xa4a PUSH1 0x2
0xa4c EXP
0xa4d SUB
0xa4e AND
0xa4f DUP2
0xa50 JUMP
---
0xa42: JUMPDEST 
0xa43: V974 = 0x0
0xa45: V975 = S[0x0]
0xa46: V976 = 0x1
0xa48: V977 = 0xa0
0xa4a: V978 = 0x2
0xa4c: V979 = EXP 0x2 0xa0
0xa4d: V980 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4e: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff V975
0xa50: JUMP 0xf5
---
Entry stack: [V13, 0xf5]
Stack pops: 1
Stack additions: [S0, V981]
Exit stack: [V13, 0xf5, V981]

================================

Block 0xa51
[0xa51:0xa5f]
---
Predecessors: [0x217]
Successors: [0xf5]
---
0xa51 JUMPDEST
0xa52 PUSH1 0x2
0xa54 SLOAD
0xa55 PUSH1 0x1
0xa57 PUSH1 0xa0
0xa59 PUSH1 0x2
0xa5b EXP
0xa5c SUB
0xa5d AND
0xa5e DUP2
0xa5f JUMP
---
0xa51: JUMPDEST 
0xa52: V982 = 0x2
0xa54: V983 = S[0x2]
0xa55: V984 = 0x1
0xa57: V985 = 0xa0
0xa59: V986 = 0x2
0xa5b: V987 = EXP 0x2 0xa0
0xa5c: V988 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5d: V989 = AND 0xffffffffffffffffffffffffffffffffffffffff V983
0xa5f: JUMP 0xf5
---
Entry stack: [V13, 0xf5]
Stack pops: 1
Stack additions: [S0, V989]
Exit stack: [V13, 0xf5, V989]

================================

Block 0xa60
[0xa60:0xa72]
---
Predecessors: [0x23e, 0x315, 0x63c, 0x83e]
Successors: [0xa73, 0xa7b]
---
0xa60 JUMPDEST
0xa61 PUSH1 0x4
0xa63 SLOAD
0xa64 PUSH1 0x5
0xa66 SLOAD
0xa67 PUSH1 0x0
0xa69 SWAP2
0xa6a SWAP1
0xa6b LT
0xa6c ISZERO
0xa6d DUP1
0xa6e DUP1
0xa6f PUSH2 0xa7b
0xa72 JUMPI
---
0xa60: JUMPDEST 
0xa61: V990 = 0x4
0xa63: V991 = S[0x4]
0xa64: V992 = 0x5
0xa66: V993 = S[0x5]
0xa67: V994 = 0x0
0xa6b: V995 = LT V993 V991
0xa6c: V996 = ISZERO V995
0xa6f: V997 = 0xa7b
0xa72: JUMPI 0xa7b V996
---
Entry stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1, {0x246, 0x31d, 0x644, 0x846}]
Stack pops: 0
Stack additions: [0x0, V996, V996]
Exit stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1, {0x246, 0x31d, 0x644, 0x846}, 0x0, V996, V996]

================================

Block 0xa73
[0xa73:0xa7a]
---
Predecessors: [0xa60]
Successors: [0xb82]
---
0xa73 POP
0xa74 PUSH2 0xa7b
0xa77 PUSH2 0xb82
0xa7a JUMP
---
0xa74: V998 = 0xa7b
0xa77: V999 = 0xb82
0xa7a: JUMP 0xb82
---
Entry stack: [V13, S10, S9, S8, 0x0, 0x0, S5, S4, {0x246, 0x31d, 0x644, 0x846}, 0x0, V996, V996]
Stack pops: 1
Stack additions: [0xa7b]
Exit stack: [V13, S10, S9, S8, 0x0, 0x0, S5, S4, {0x246, 0x31d, 0x644, 0x846}, 0x0, V996, 0xa7b]

================================

Block 0xa7b
[0xa7b:0xa80]
---
Predecessors: [0xa60, 0xb82]
Successors: [0x246, 0x31d, 0x644, 0x846]
---
0xa7b JUMPDEST
0xa7c SWAP2
0xa7d POP
0xa7e POP
0xa7f SWAP1
0xa80 JUMP
---
0xa7b: JUMPDEST 
0xa80: JUMP {0x246, 0x31d, 0x644, 0x846}
---
Entry stack: [V13, S10, S9, S8, 0x0, 0x0, S5, S4, {0x246, 0x31d, 0x644, 0x846}, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V13, S10, S9, S8, 0x0, 0x0, S5, S4, S0]

================================

Block 0xa81
[0xa81:0xa97]
---
Predecessors: [0x265]
Successors: [0xa98, 0xa9c]
---
0xa81 JUMPDEST
0xa82 PUSH1 0x0
0xa84 SLOAD
0xa85 CALLER
0xa86 PUSH1 0x1
0xa88 PUSH1 0xa0
0xa8a PUSH1 0x2
0xa8c EXP
0xa8d SUB
0xa8e SWAP1
0xa8f DUP2
0xa90 AND
0xa91 SWAP2
0xa92 AND
0xa93 EQ
0xa94 PUSH2 0xa9c
0xa97 JUMPI
---
0xa81: JUMPDEST 
0xa82: V1000 = 0x0
0xa84: V1001 = S[0x0]
0xa85: V1002 = CALLER
0xa86: V1003 = 0x1
0xa88: V1004 = 0xa0
0xa8a: V1005 = 0x2
0xa8c: V1006 = EXP 0x2 0xa0
0xa8d: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa90: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffff V1002
0xa92: V1009 = AND V1001 0xffffffffffffffffffffffffffffffffffffffff
0xa93: V1010 = EQ V1009 V1008
0xa94: V1011 = 0xa9c
0xa97: JUMPI 0xa9c V1010
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V219]

================================

Block 0xa98
[0xa98:0xa9b]
---
Predecessors: [0xa81]
Successors: []
---
0xa98 PUSH1 0x0
0xa9a DUP1
0xa9b REVERT
---
0xa98: V1012 = 0x0
0xa9b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V219]

================================

Block 0xa9c
[0xa9c:0xaac]
---
Predecessors: [0xa81]
Successors: [0xaad, 0xab1]
---
0xa9c JUMPDEST
0xa9d PUSH1 0x1
0xa9f PUSH1 0xa0
0xaa1 PUSH1 0x2
0xaa3 EXP
0xaa4 SUB
0xaa5 DUP2
0xaa6 AND
0xaa7 ISZERO
0xaa8 ISZERO
0xaa9 PUSH2 0xab1
0xaac JUMPI
---
0xa9c: JUMPDEST 
0xa9d: V1013 = 0x1
0xa9f: V1014 = 0xa0
0xaa1: V1015 = 0x2
0xaa3: V1016 = EXP 0x2 0xa0
0xaa4: V1017 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa6: V1018 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0xaa7: V1019 = ISZERO V1018
0xaa8: V1020 = ISZERO V1019
0xaa9: V1021 = 0xab1
0xaac: JUMPI 0xab1 V1020
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xe0, V219]

================================

Block 0xaad
[0xaad:0xab0]
---
Predecessors: [0xa9c]
Successors: []
---
0xaad PUSH1 0x0
0xaaf DUP1
0xab0 REVERT
---
0xaad: V1022 = 0x0
0xab0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V219]

================================

Block 0xab1
[0xab1:0xb1b]
---
Predecessors: [0xa9c]
Successors: [0xe0]
---
0xab1 JUMPDEST
0xab2 PUSH1 0x0
0xab4 SLOAD
0xab5 PUSH1 0x1
0xab7 PUSH1 0xa0
0xab9 PUSH1 0x2
0xabb EXP
0xabc SUB
0xabd DUP1
0xabe DUP4
0xabf AND
0xac0 SWAP2
0xac1 AND
0xac2 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xae3 PUSH1 0x40
0xae5 MLOAD
0xae6 PUSH1 0x40
0xae8 MLOAD
0xae9 DUP1
0xaea SWAP2
0xaeb SUB
0xaec SWAP1
0xaed LOG3
0xaee PUSH1 0x0
0xaf0 DUP1
0xaf1 SLOAD
0xaf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb07 NOT
0xb08 AND
0xb09 PUSH1 0x1
0xb0b PUSH1 0xa0
0xb0d PUSH1 0x2
0xb0f EXP
0xb10 SUB
0xb11 SWAP3
0xb12 SWAP1
0xb13 SWAP3
0xb14 AND
0xb15 SWAP2
0xb16 SWAP1
0xb17 SWAP2
0xb18 OR
0xb19 SWAP1
0xb1a SSTORE
0xb1b JUMP
---
0xab1: JUMPDEST 
0xab2: V1023 = 0x0
0xab4: V1024 = S[0x0]
0xab5: V1025 = 0x1
0xab7: V1026 = 0xa0
0xab9: V1027 = 0x2
0xabb: V1028 = EXP 0x2 0xa0
0xabc: V1029 = SUB 0x10000000000000000000000000000000000000000 0x1
0xabf: V1030 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0xac1: V1031 = AND V1024 0xffffffffffffffffffffffffffffffffffffffff
0xac2: V1032 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xae3: V1033 = 0x40
0xae5: V1034 = M[0x40]
0xae6: V1035 = 0x40
0xae8: V1036 = M[0x40]
0xaeb: V1037 = SUB V1034 V1036
0xaed: LOG V1036 V1037 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1031 V1030
0xaee: V1038 = 0x0
0xaf1: V1039 = S[0x0]
0xaf2: V1040 = 0xffffffffffffffffffffffffffffffffffffffff
0xb07: V1041 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb08: V1042 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1039
0xb09: V1043 = 0x1
0xb0b: V1044 = 0xa0
0xb0d: V1045 = 0x2
0xb0f: V1046 = EXP 0x2 0xa0
0xb10: V1047 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb14: V1048 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0xb18: V1049 = OR V1048 V1042
0xb1a: S[0x0] = V1049
0xb1b: JUMP 0xe0
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xb1c
[0xb1c:0xb21]
---
Predecessors: [0x284]
Successors: [0x137]
---
0xb1c JUMPDEST
0xb1d PUSH1 0x4
0xb1f SLOAD
0xb20 DUP2
0xb21 JUMP
---
0xb1c: JUMPDEST 
0xb1d: V1050 = 0x4
0xb1f: V1051 = S[0x4]
0xb21: JUMP 0x137
---
Entry stack: [V13, 0x137]
Stack pops: 1
Stack additions: [S0, V1051]
Exit stack: [V13, 0x137, V1051]

================================

Block 0xb22
[0xb22:0xb2a]
---
Predecessors: [0x327]
Successors: [0x32f]
---
0xb22 JUMPDEST
0xb23 PUSH1 0x9
0xb25 SLOAD
0xb26 TIMESTAMP
0xb27 LT
0xb28 ISZERO
0xb29 SWAP1
0xb2a JUMP
---
0xb22: JUMPDEST 
0xb23: V1052 = 0x9
0xb25: V1053 = S[0x9]
0xb26: V1054 = TIMESTAMP
0xb27: V1055 = LT V1054 V1053
0xb28: V1056 = ISZERO V1055
0xb2a: JUMP 0x32f
---
Entry stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1, 0x32f]
Stack pops: 1
Stack additions: [V1056]
Exit stack: [V13, S7, S6, S5, 0x0, 0x0, S2, S1, V1056]

================================

Block 0xb2b
[0xb2b:0xb38]
---
Predecessors: [0x37e, 0x533]
Successors: [0xb39, 0xb3a]
---
0xb2b JUMPDEST
0xb2c PUSH1 0x0
0xb2e DUP3
0xb2f DUP3
0xb30 ADD
0xb31 DUP4
0xb32 DUP2
0xb33 LT
0xb34 ISZERO
0xb35 PUSH2 0xb3a
0xb38 JUMPI
---
0xb2b: JUMPDEST 
0xb2c: V1057 = 0x0
0xb30: V1058 = ADD S0 S1
0xb33: V1059 = LT V1058 S1
0xb34: V1060 = ISZERO V1059
0xb35: V1061 = 0xb3a
0xb38: JUMPI 0xb3a V1060
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x394, 0x550}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1058]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x394, 0x550}, S1, S0, 0x0, V1058]

================================

Block 0xb39
[0xb39:0xb39]
---
Predecessors: [0xb2b]
Successors: []
---
0xb39 INVALID
---
0xb39: INVALID 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x394, 0x550}, S3, S2, 0x0, V1058]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x394, 0x550}, S3, S2, 0x0, V1058]

================================

Block 0xb3a
[0xb3a:0xb3d]
---
Predecessors: [0xb2b, 0xb68]
Successors: [0xb3e]
---
0xb3a JUMPDEST
0xb3b DUP1
0xb3c SWAP2
0xb3d POP
---
0xb3a: JUMPDEST 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x394, 0x3b4, 0x4c0, 0x550, 0x8ff}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x394, 0x3b4, 0x4c0, 0x550, 0x8ff}, S3, S2, S0, S0]

================================

Block 0xb3e
[0xb3e:0xb44]
---
Predecessors: [0xb3a, 0xb50]
Successors: [0x394, 0x3b4, 0x4c0, 0x550, 0x8ff]
---
0xb3e JUMPDEST
0xb3f POP
0xb40 SWAP3
0xb41 SWAP2
0xb42 POP
0xb43 POP
0xb44 JUMP
---
0xb3e: JUMPDEST 
0xb44: JUMP {0x394, 0x3b4, 0x4c0, 0x550, 0x8ff}
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x394, 0x3b4, 0x4c0, 0x550, 0x8ff}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xb45
[0xb45:0xb4f]
---
Predecessors: [0x3a1, 0x4a9, 0x8df]
Successors: [0xb50, 0xb58]
---
0xb45 JUMPDEST
0xb46 PUSH1 0x0
0xb48 DUP1
0xb49 DUP4
0xb4a ISZERO
0xb4b ISZERO
0xb4c PUSH2 0xb58
0xb4f JUMPI
---
0xb45: JUMPDEST 
0xb46: V1062 = 0x0
0xb4a: V1063 = ISZERO S1
0xb4b: V1064 = ISZERO V1063
0xb4c: V1065 = 0xb58
0xb4f: JUMPI 0xb58 V1064
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x3b4, 0x4c0, 0x8ff}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x3b4, 0x4c0, 0x8ff}, S1, S0, 0x0, 0x0]

================================

Block 0xb50
[0xb50:0xb57]
---
Predecessors: [0xb45]
Successors: [0xb3e]
---
0xb50 PUSH1 0x0
0xb52 SWAP2
0xb53 POP
0xb54 PUSH2 0xb3e
0xb57 JUMP
---
0xb50: V1066 = 0x0
0xb54: V1067 = 0xb3e
0xb57: JUMP 0xb3e
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x3b4, 0x4c0, 0x8ff}, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x3b4, 0x4c0, 0x8ff}, S3, S2, 0x0, 0x0]

================================

Block 0xb58
[0xb58:0xb66]
---
Predecessors: [0xb45]
Successors: [0xb67, 0xb68]
---
0xb58 JUMPDEST
0xb59 POP
0xb5a DUP3
0xb5b DUP3
0xb5c MUL
0xb5d DUP3
0xb5e DUP5
0xb5f DUP3
0xb60 DUP2
0xb61 ISZERO
0xb62 ISZERO
0xb63 PUSH2 0xb68
0xb66 JUMPI
---
0xb58: JUMPDEST 
0xb5c: V1068 = MUL S2 S3
0xb61: V1069 = ISZERO S3
0xb62: V1070 = ISZERO V1069
0xb63: V1071 = 0xb68
0xb66: JUMPI 0xb68 V1070
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x3b4, 0x4c0, 0x8ff}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V1068, S2, S3, V1068]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x3b4, 0x4c0, 0x8ff}, S3, S2, 0x0, V1068, S2, S3, V1068]

================================

Block 0xb67
[0xb67:0xb67]
---
Predecessors: [0xb58]
Successors: []
---
0xb67 INVALID
---
0xb67: INVALID 
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, {0x3b4, 0x4c0, 0x8ff}, S6, S5, 0x0, V1068, S2, S1, V1068]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, {0x3b4, 0x4c0, 0x8ff}, S6, S5, 0x0, V1068, S2, S1, V1068]

================================

Block 0xb68
[0xb68:0xb6e]
---
Predecessors: [0xb58]
Successors: [0xb3a, 0xb6f]
---
0xb68 JUMPDEST
0xb69 DIV
0xb6a EQ
0xb6b PUSH2 0xb3a
0xb6e JUMPI
---
0xb68: JUMPDEST 
0xb69: V1072 = DIV V1068 S1
0xb6a: V1073 = EQ V1072 S2
0xb6b: V1074 = 0xb3a
0xb6e: JUMPI 0xb3a V1073
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, {0x3b4, 0x4c0, 0x8ff}, S6, S5, 0x0, V1068, S2, S1, V1068]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, {0x3b4, 0x4c0, 0x8ff}, S6, S5, 0x0, V1068]

================================

Block 0xb6f
[0xb6f:0xb6f]
---
Predecessors: [0xb68]
Successors: []
---
0xb6f INVALID
---
0xb6f: INVALID 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x3b4, 0x4c0, 0x8ff}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x3b4, 0x4c0, 0x8ff}, S3, S2, 0x0, S0]

================================

Block 0xb70
[0xb70:0xb7a]
---
Predecessors: [0x483, 0x497, 0x851, 0x8ff]
Successors: [0xb7b, 0xb7c]
---
0xb70 JUMPDEST
0xb71 PUSH1 0x0
0xb73 DUP3
0xb74 DUP3
0xb75 GT
0xb76 ISZERO
0xb77 PUSH2 0xb7c
0xb7a JUMPI
---
0xb70: JUMPDEST 
0xb71: V1075 = 0x0
0xb75: V1076 = GT S0 S1
0xb76: V1077 = ISZERO V1076
0xb77: V1078 = 0xb7c
0xb7a: JUMPI 0xb7c V1077
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x497, 0x4a9, 0x866, 0x911}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x497, 0x4a9, 0x866, 0x911}, S1, S0, 0x0]

================================

Block 0xb7b
[0xb7b:0xb7b]
---
Predecessors: [0xb70]
Successors: []
---
0xb7b INVALID
---
0xb7b: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x497, 0x4a9, 0x866, 0x911}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x497, 0x4a9, 0x866, 0x911}, S2, S1, 0x0]

================================

Block 0xb7c
[0xb7c:0xb81]
---
Predecessors: [0xb70]
Successors: [0x497, 0x4a9, 0x866, 0x911]
---
0xb7c JUMPDEST
0xb7d POP
0xb7e SWAP1
0xb7f SUB
0xb80 SWAP1
0xb81 JUMP
---
0xb7c: JUMPDEST 
0xb7f: V1079 = SUB S2 S1
0xb81: JUMP {0x497, 0x4a9, 0x866, 0x911}
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x497, 0x4a9, 0x866, 0x911}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1079]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, V1079]

================================

Block 0xb82
[0xb82:0xb89]
---
Predecessors: [0xa73]
Successors: [0xa7b]
---
0xb82 JUMPDEST
0xb83 PUSH1 0xa
0xb85 SLOAD
0xb86 TIMESTAMP
0xb87 GT
0xb88 SWAP1
0xb89 JUMP
---
0xb82: JUMPDEST 
0xb83: V1080 = 0xa
0xb85: V1081 = S[0xa]
0xb86: V1082 = TIMESTAMP
0xb87: V1083 = GT V1082 V1081
0xb89: JUMP 0xa7b
---
Entry stack: [V13, S10, S9, S8, 0x0, 0x0, S5, S4, {0x246, 0x31d, 0x644, 0x846}, 0x0, V996, 0xa7b]
Stack pops: 1
Stack additions: [V1083]
Exit stack: [V13, S10, S9, S8, 0x0, 0x0, S5, S4, {0x246, 0x31d, 0x644, 0x846}, 0x0, V996, V1083]

================================

Block 0xb8a
[0xb8a:0xbbc]
---
Predecessors: []
Successors: []
---
0xb8a STOP
0xb8b LOG1
0xb8c PUSH6 0x627a7a723058
0xb93 SHA3
0xb94 MISSING 0xef
0xb95 PUSH1 0xe7
0xb97 MISSING 0x5c
0xb98 MISSING 0xc3
0xb99 SLT
0xb9a SWAP16
0xb9b MOD
0xb9c MISSING 0xcb
0xb9d PUSH31 0x98cbf311083e1e4c14a9dd17eb58dc529861598ae5630029
---
0xb8a: STOP 
0xb8b: LOG S0 S1 S2
0xb8c: V1084 = 0x627a7a723058
0xb93: V1085 = SHA3 0x627a7a723058 S3
0xb94: MISSING 0xef
0xb95: V1086 = 0xe7
0xb97: MISSING 0x5c
0xb98: MISSING 0xc3
0xb99: V1087 = SLT S0 S1
0xb9b: V1088 = MOD S17 S2
0xb9c: MISSING 0xcb
0xb9d: V1089 = 0x98cbf311083e1e4c14a9dd17eb58dc529861598ae5630029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1085, 0xe7, V1088, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V1087, 0x98cbf311083e1e4c14a9dd17eb58dc529861598ae5630029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1725a0b
Entry block: 0xe2
Exit block: 0xf5
Body: 0xe2, 0xe9, 0xed, 0xf5, 0x612

Function 1:
Public function signature: 0x15d3e0a3
Entry block: 0x111
Exit block: 0xe0
Body: 0xe0, 0x111, 0x118, 0x11c, 0x621, 0x638, 0x63c, 0x644, 0x64b, 0x64f, 0x684, 0x688

Function 2:
Public function signature: 0x2616501d
Entry block: 0x124
Exit block: 0x137
Body: 0x124, 0x12b, 0x12f, 0x137, 0x6b6

Function 3:
Public function signature: 0x29648398
Entry block: 0x149
Exit block: 0xe0
Body: 0xe0, 0x149, 0x150, 0x154, 0x6bc, 0x6d4, 0x6d8, 0x6e9, 0x6ed, 0x6f6, 0x6fa, 0x74f, 0x753, 0x760, 0x764, 0x7cc, 0x7d0, 0x7dd, 0x7e1

Function 4:
Public function signature: 0x2c4e722e
Entry block: 0x168
Exit block: 0x137
Body: 0x137, 0x168, 0x16f, 0x173, 0x7ef

Function 5:
Public function signature: 0x3197cbb6
Entry block: 0x17b
Exit block: 0x137
Body: 0x137, 0x17b, 0x182, 0x186, 0x7f5

Function 6:
Public function signature: 0x3fa615b0
Entry block: 0x18e
Exit block: 0x137
Body: 0x137, 0x18e, 0x195, 0x199, 0x7fb

Function 7:
Public function signature: 0x4042b66f
Entry block: 0x1a1
Exit block: 0x137
Body: 0x137, 0x1a1, 0x1a8, 0x1ac, 0x801

Function 8:
Public function signature: 0x4eb259aa
Entry block: 0x1b4
Exit block: 0xb6f
Body: 0x1b4, 0x1bb, 0x1bf, 0x807, 0x825, 0x829, 0x83a, 0x83e, 0x846, 0x84d, 0x851, 0x866, 0x871, 0xb6f

Function 9:
Public function signature: 0x521eb273
Entry block: 0x1d3
Exit block: 0xf5
Body: 0xf5, 0x1d3, 0x1da, 0x1de, 0xa2d

Function 10:
Public function signature: 0x78e97925
Entry block: 0x1e6
Exit block: 0x137
Body: 0x137, 0x1e6, 0x1ed, 0x1f1, 0xa3c

Function 11:
Public function signature: 0x8da5cb5b
Entry block: 0x1f9
Exit block: 0xf5
Body: 0xf5, 0x1f9, 0x200, 0x204, 0xa42

Function 12:
Public function signature: 0x93e59dc1
Entry block: 0x20c
Exit block: 0xf5
Body: 0xf5, 0x20c, 0x213, 0x217, 0xa51

Function 13:
Public function signature: 0xde306229
Entry block: 0x21f
Exit block: 0xe0
Body: 0xe0, 0x21f

Function 14:
Public function signature: 0xecb70fb7
Entry block: 0x233
Exit block: 0x23a
Body: 0x233, 0x23a, 0x23e, 0x246

Function 15:
Public function signature: 0xf2fde38b
Entry block: 0x25a
Exit block: 0xe0
Body: 0xe0, 0x25a, 0x261, 0x265, 0xa81, 0xa98, 0xa9c, 0xaad, 0xab1

Function 16:
Public function signature: 0xfb86a404
Entry block: 0x279
Exit block: 0x137
Body: 0x137, 0x279, 0x280, 0x284, 0xb1c

Function 17:
Public fallback function
Entry block: 0xd7
Exit block: 0xe0
Body: 0xd7, 0xe0

Function 18:
Private function
Entry block: 0xb2b
Exit block: 0xb3e
Body: 0x4c0, 0x522, 0x533, 0x550, 0x8ff, 0xb2b, 0xb3a, 0xb3e

Function 19:
Private function
Entry block: 0xb45
Exit block: 0xb3e
Body: 0x394, 0x3a1, 0x3b4, 0x483, 0x497, 0x497, 0x4a9, 0x4c0, 0x522, 0x533, 0x866, 0x875, 0x8ce, 0x8df, 0x8ff, 0xb3a, 0xb3e, 0xb45, 0xb50, 0xb58, 0xb68, 0xb70, 0xb7c

Function 20:
Private function
Entry block: 0xb70
Exit block: 0xb7c
Body: 0xb70, 0xb7c

Function 21:
Private function
Entry block: 0xa60
Exit block: 0xa7b
Body: 0xa60, 0xa73, 0xa7b, 0xb82

Function 22:
Private function
Entry block: 0x28c
Exit block: 0xab1
Body: 0x28c, 0x2ef, 0x300, 0x315, 0x31d, 0x327, 0x32f, 0x33a, 0x34f, 0x36f, 0x37e, 0x394, 0x3a1, 0x3b4, 0x416, 0x427, 0x483, 0x497, 0x497, 0x4a9, 0x4c0, 0x522, 0x533, 0x550, 0x5cc, 0x60a, 0x866, 0x875, 0x8ce, 0x8df, 0x8ff, 0x911, 0x95c, 0x96d, 0x9d0, 0x9e1, 0xb22, 0xb70, 0xb7c

