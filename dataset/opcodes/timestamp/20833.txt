Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x282]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x10309781
0x3c EQ
0x3d PUSH2 0x282
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x10309781
0x3c: V13 = EQ 0x10309781 V11
0x3d: V14 = 0x282
0x40: JUMPI 0x282 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x2ad]
---
0x41 DUP1
0x42 PUSH4 0x29dcb0cf
0x47 EQ
0x48 PUSH2 0x2ad
0x4b JUMPI
---
0x42: V15 = 0x29dcb0cf
0x47: V16 = EQ 0x29dcb0cf V11
0x48: V17 = 0x2ad
0x4b: JUMPI 0x2ad V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x2d8]
---
0x4c DUP1
0x4d PUSH4 0x38af3eed
0x52 EQ
0x53 PUSH2 0x2d8
0x56 JUMPI
---
0x4d: V18 = 0x38af3eed
0x52: V19 = EQ 0x38af3eed V11
0x53: V20 = 0x2d8
0x56: JUMPI 0x2d8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x32f]
---
0x57 DUP1
0x58 PUSH4 0x70a08231
0x5d EQ
0x5e PUSH2 0x32f
0x61 JUMPI
---
0x58: V21 = 0x70a08231
0x5d: V22 = EQ 0x70a08231 V11
0x5e: V23 = 0x32f
0x61: JUMPI 0x32f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x386]
---
0x62 DUP1
0x63 PUSH4 0x7b3e5e7b
0x68 EQ
0x69 PUSH2 0x386
0x6c JUMPI
---
0x63: V24 = 0x7b3e5e7b
0x68: V25 = EQ 0x7b3e5e7b V11
0x69: V26 = 0x386
0x6c: JUMPI 0x386 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x3b1]
---
0x6d DUP1
0x6e PUSH4 0xbe9a6555
0x73 EQ
0x74 PUSH2 0x3b1
0x77 JUMPI
---
0x6e: V27 = 0xbe9a6555
0x73: V28 = EQ 0xbe9a6555 V11
0x74: V29 = 0x3b1
0x77: JUMPI 0x3b1 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x86]
---
Predecessors: [0x0, 0x6d]
Successors: [0x87, 0x8e]
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b PUSH1 0x1
0x7d SLOAD
0x7e TIMESTAMP
0x7f LT
0x80 ISZERO
0x81 DUP1
0x82 ISZERO
0x83 PUSH2 0x8e
0x86 JUMPI
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7b: V31 = 0x1
0x7d: V32 = S[0x1]
0x7e: V33 = TIMESTAMP
0x7f: V34 = LT V33 V32
0x80: V35 = ISZERO V34
0x82: V36 = ISZERO V35
0x83: V37 = 0x8e
0x86: JUMPI 0x8e V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, V35]
Exit stack: [V11, 0x0, V35]

================================

Block 0x87
[0x87:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e]
---
0x87 POP
0x88 PUSH1 0x2
0x8a SLOAD
0x8b TIMESTAMP
0x8c GT
0x8d ISZERO
---
0x88: V38 = 0x2
0x8a: V39 = S[0x2]
0x8b: V40 = TIMESTAMP
0x8c: V41 = GT V40 V39
0x8d: V42 = ISZERO V41
---
Entry stack: [V11, 0x0, V35]
Stack pops: 1
Stack additions: [V42]
Exit stack: [V11, 0x0, V42]

================================

Block 0x8e
[0x8e:0x94]
---
Predecessors: [0x78, 0x87]
Successors: [0x95, 0xa5]
---
0x8e JUMPDEST
0x8f DUP1
0x90 ISZERO
0x91 PUSH2 0xa5
0x94 JUMPI
---
0x8e: JUMPDEST 
0x90: V43 = ISZERO S0
0x91: V44 = 0xa5
0x94: JUMPI 0xa5 V43
---
Entry stack: [V11, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x0, S0]

================================

Block 0x95
[0x95:0xa4]
---
Predecessors: [0x8e]
Successors: [0xa5]
---
0x95 POP
0x96 PUSH10 0x14542ba12a337c00000
0xa1 PUSH1 0x4
0xa3 SLOAD
0xa4 LT
---
0x96: V45 = 0x14542ba12a337c00000
0xa1: V46 = 0x4
0xa3: V47 = S[0x4]
0xa4: V48 = LT V47 0x14542ba12a337c00000
---
Entry stack: [V11, 0x0, S0]
Stack pops: 1
Stack additions: [V48]
Exit stack: [V11, 0x0, V48]

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0x8e, 0x95]
Successors: [0xac, 0xb0]
---
0xa5 JUMPDEST
0xa6 ISZERO
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V49 = ISZERO S0
0xa7: V50 = ISZERO V49
0xa8: V51 = 0xb0
0xab: JUMPI 0xb0 V50
---
Entry stack: [V11, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa5]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V52 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xb0
[0xb0:0x1e4]
---
Predecessors: [0xa5]
Successors: [0x1e5, 0x27f]
---
0xb0 JUMPDEST
0xb1 CALLVALUE
0xb2 SWAP1
0xb3 POP
0xb4 DUP1
0xb5 PUSH1 0x5
0xb7 PUSH1 0x0
0xb9 CALLER
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5 AND
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP1
0xec DUP2
0xed MSTORE
0xee PUSH1 0x20
0xf0 ADD
0xf1 PUSH1 0x0
0xf3 SHA3
0xf4 PUSH1 0x0
0xf6 DUP3
0xf7 DUP3
0xf8 SLOAD
0xf9 ADD
0xfa SWAP3
0xfb POP
0xfc POP
0xfd DUP2
0xfe SWAP1
0xff SSTORE
0x100 POP
0x101 DUP1
0x102 PUSH1 0x4
0x104 PUSH1 0x0
0x106 DUP3
0x107 DUP3
0x108 SLOAD
0x109 ADD
0x10a SWAP3
0x10b POP
0x10c POP
0x10d DUP2
0x10e SWAP1
0x10f SSTORE
0x110 POP
0x111 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x132 CALLER
0x133 DUP3
0x134 PUSH1 0x1
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a DUP5
0x13b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x150 AND
0x151 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x166 AND
0x167 DUP2
0x168 MSTORE
0x169 PUSH1 0x20
0x16b ADD
0x16c DUP4
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 ADD
0x172 DUP3
0x173 ISZERO
0x174 ISZERO
0x175 ISZERO
0x176 ISZERO
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x20
0x17b ADD
0x17c SWAP4
0x17d POP
0x17e POP
0x17f POP
0x180 POP
0x181 PUSH1 0x40
0x183 MLOAD
0x184 DUP1
0x185 SWAP2
0x186 SUB
0x187 SWAP1
0x188 LOG1
0x189 PUSH1 0x3
0x18b PUSH1 0x0
0x18d SWAP1
0x18e SLOAD
0x18f SWAP1
0x190 PUSH2 0x100
0x193 EXP
0x194 SWAP1
0x195 DIV
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH2 0x8fc
0x1c5 DUP3
0x1c6 SWAP1
0x1c7 DUP2
0x1c8 ISZERO
0x1c9 MUL
0x1ca SWAP1
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce PUSH1 0x0
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 DUP4
0x1d5 SUB
0x1d6 DUP2
0x1d7 DUP6
0x1d8 DUP9
0x1d9 DUP9
0x1da CALL
0x1db SWAP4
0x1dc POP
0x1dd POP
0x1de POP
0x1df POP
0x1e0 ISZERO
0x1e1 PUSH2 0x27f
0x1e4 JUMPI
---
0xb0: JUMPDEST 
0xb1: V53 = CALLVALUE
0xb5: V54 = 0x5
0xb7: V55 = 0x0
0xb9: V56 = CALLER
0xba: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xd0: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xe7: M[0x0] = V60
0xe8: V61 = 0x20
0xea: V62 = ADD 0x20 0x0
0xed: M[0x20] = 0x5
0xee: V63 = 0x20
0xf0: V64 = ADD 0x20 0x20
0xf1: V65 = 0x0
0xf3: V66 = SHA3 0x0 0x40
0xf4: V67 = 0x0
0xf8: V68 = S[V66]
0xf9: V69 = ADD V68 V53
0xff: S[V66] = V69
0x102: V70 = 0x4
0x104: V71 = 0x0
0x108: V72 = S[0x4]
0x109: V73 = ADD V72 V53
0x10f: S[0x4] = V73
0x111: V74 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x132: V75 = CALLER
0x134: V76 = 0x1
0x136: V77 = 0x40
0x138: V78 = M[0x40]
0x13b: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x150: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x151: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x166: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x168: M[V78] = V82
0x169: V83 = 0x20
0x16b: V84 = ADD 0x20 V78
0x16e: M[V84] = V53
0x16f: V85 = 0x20
0x171: V86 = ADD 0x20 V84
0x173: V87 = ISZERO 0x1
0x174: V88 = ISZERO 0x0
0x175: V89 = ISZERO 0x1
0x176: V90 = ISZERO 0x0
0x178: M[V86] = 0x1
0x179: V91 = 0x20
0x17b: V92 = ADD 0x20 V86
0x181: V93 = 0x40
0x183: V94 = M[0x40]
0x186: V95 = SUB V92 V94
0x188: LOG V94 V95 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x189: V96 = 0x3
0x18b: V97 = 0x0
0x18e: V98 = S[0x3]
0x190: V99 = 0x100
0x193: V100 = EXP 0x100 0x0
0x195: V101 = DIV V98 0x1
0x196: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1ac: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1c2: V106 = 0x8fc
0x1c8: V107 = ISZERO V53
0x1c9: V108 = MUL V107 0x8fc
0x1cb: V109 = 0x40
0x1cd: V110 = M[0x40]
0x1ce: V111 = 0x0
0x1d0: V112 = 0x40
0x1d2: V113 = M[0x40]
0x1d5: V114 = SUB V110 V113
0x1da: V115 = CALL V108 V105 V53 V113 V114 V113 0x0
0x1e0: V116 = ISZERO V115
0x1e1: V117 = 0x27f
0x1e4: JUMPI 0x27f V116
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V53]
Exit stack: [V11, V53]

================================

Block 0x1e5
[0x1e5:0x27e]
---
Predecessors: [0xb0]
Successors: [0x27f]
---
0x1e5 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x206 PUSH1 0x3
0x208 PUSH1 0x0
0x20a SWAP1
0x20b SLOAD
0x20c SWAP1
0x20d PUSH2 0x100
0x210 EXP
0x211 SWAP1
0x212 DIV
0x213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x228 AND
0x229 DUP3
0x22a PUSH1 0x0
0x22c PUSH1 0x40
0x22e MLOAD
0x22f DUP1
0x230 DUP5
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x20
0x261 ADD
0x262 DUP4
0x263 DUP2
0x264 MSTORE
0x265 PUSH1 0x20
0x267 ADD
0x268 DUP3
0x269 ISZERO
0x26a ISZERO
0x26b ISZERO
0x26c ISZERO
0x26d DUP2
0x26e MSTORE
0x26f PUSH1 0x20
0x271 ADD
0x272 SWAP4
0x273 POP
0x274 POP
0x275 POP
0x276 POP
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b SWAP2
0x27c SUB
0x27d SWAP1
0x27e LOG1
---
0x1e5: V118 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x206: V119 = 0x3
0x208: V120 = 0x0
0x20b: V121 = S[0x3]
0x20d: V122 = 0x100
0x210: V123 = EXP 0x100 0x0
0x212: V124 = DIV V121 0x1
0x213: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x228: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x22a: V127 = 0x0
0x22c: V128 = 0x40
0x22e: V129 = M[0x40]
0x231: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x247: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x25e: M[V129] = V133
0x25f: V134 = 0x20
0x261: V135 = ADD 0x20 V129
0x264: M[V135] = V53
0x265: V136 = 0x20
0x267: V137 = ADD 0x20 V135
0x269: V138 = ISZERO 0x0
0x26a: V139 = ISZERO 0x1
0x26b: V140 = ISZERO 0x0
0x26c: V141 = ISZERO 0x1
0x26e: M[V137] = 0x0
0x26f: V142 = 0x20
0x271: V143 = ADD 0x20 V137
0x277: V144 = 0x40
0x279: V145 = M[0x40]
0x27c: V146 = SUB V143 V145
0x27e: LOG V145 V146 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V11, V53]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, V53]

================================

Block 0x27f
[0x27f:0x281]
---
Predecessors: [0xb0, 0x1e5]
Successors: []
---
0x27f JUMPDEST
0x280 POP
0x281 STOP
---
0x27f: JUMPDEST 
0x281: STOP 
---
Entry stack: [V11, V53]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x282
[0x282:0x289]
---
Predecessors: [0xd]
Successors: [0x28a, 0x28e]
---
0x282 JUMPDEST
0x283 CALLVALUE
0x284 DUP1
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x282: JUMPDEST 
0x283: V147 = CALLVALUE
0x285: V148 = ISZERO V147
0x286: V149 = 0x28e
0x289: JUMPI 0x28e V148
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V147]
Exit stack: [V11, V147]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x282]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V150 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V11, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V147]

================================

Block 0x28e
[0x28e:0x296]
---
Predecessors: [0x282]
Successors: [0x3dc]
---
0x28e JUMPDEST
0x28f POP
0x290 PUSH2 0x297
0x293 PUSH2 0x3dc
0x296 JUMP
---
0x28e: JUMPDEST 
0x290: V151 = 0x297
0x293: V152 = 0x3dc
0x296: JUMP 0x3dc
---
Entry stack: [V11, V147]
Stack pops: 1
Stack additions: [0x297]
Exit stack: [V11, 0x297]

================================

Block 0x297
[0x297:0x2ac]
---
Predecessors: [0x3dc]
Successors: []
---
0x297 JUMPDEST
0x298 PUSH1 0x40
0x29a MLOAD
0x29b DUP1
0x29c DUP3
0x29d DUP2
0x29e MSTORE
0x29f PUSH1 0x20
0x2a1 ADD
0x2a2 SWAP2
0x2a3 POP
0x2a4 POP
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 DUP1
0x2a9 SWAP2
0x2aa SUB
0x2ab SWAP1
0x2ac RETURN
---
0x297: JUMPDEST 
0x298: V153 = 0x40
0x29a: V154 = M[0x40]
0x29e: M[V154] = V239
0x29f: V155 = 0x20
0x2a1: V156 = ADD 0x20 V154
0x2a5: V157 = 0x40
0x2a7: V158 = M[0x40]
0x2aa: V159 = SUB V156 V158
0x2ac: RETURN V158 V159
---
Entry stack: [V11, 0x297, V239]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x297]

================================

Block 0x2ad
[0x2ad:0x2b4]
---
Predecessors: [0x41]
Successors: [0x2b5, 0x2b9]
---
0x2ad JUMPDEST
0x2ae CALLVALUE
0x2af DUP1
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2ad: JUMPDEST 
0x2ae: V160 = CALLVALUE
0x2b0: V161 = ISZERO V160
0x2b1: V162 = 0x2b9
0x2b4: JUMPI 0x2b9 V161
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V160]
Exit stack: [V11, V160]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2ad]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V163 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V11, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V160]

================================

Block 0x2b9
[0x2b9:0x2c1]
---
Predecessors: [0x2ad]
Successors: [0x3e2]
---
0x2b9 JUMPDEST
0x2ba POP
0x2bb PUSH2 0x2c2
0x2be PUSH2 0x3e2
0x2c1 JUMP
---
0x2b9: JUMPDEST 
0x2bb: V164 = 0x2c2
0x2be: V165 = 0x3e2
0x2c1: JUMP 0x3e2
---
Entry stack: [V11, V160]
Stack pops: 1
Stack additions: [0x2c2]
Exit stack: [V11, 0x2c2]

================================

Block 0x2c2
[0x2c2:0x2d7]
---
Predecessors: [0x3e2]
Successors: []
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 DUP1
0x2c7 DUP3
0x2c8 DUP2
0x2c9 MSTORE
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd SWAP2
0x2ce POP
0x2cf POP
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 DUP1
0x2d4 SWAP2
0x2d5 SUB
0x2d6 SWAP1
0x2d7 RETURN
---
0x2c2: JUMPDEST 
0x2c3: V166 = 0x40
0x2c5: V167 = M[0x40]
0x2c9: M[V167] = V241
0x2ca: V168 = 0x20
0x2cc: V169 = ADD 0x20 V167
0x2d0: V170 = 0x40
0x2d2: V171 = M[0x40]
0x2d5: V172 = SUB V169 V171
0x2d7: RETURN V171 V172
---
Entry stack: [V11, 0x2c2, V241]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2c2]

================================

Block 0x2d8
[0x2d8:0x2df]
---
Predecessors: [0x4c]
Successors: [0x2e0, 0x2e4]
---
0x2d8 JUMPDEST
0x2d9 CALLVALUE
0x2da DUP1
0x2db ISZERO
0x2dc PUSH2 0x2e4
0x2df JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V173 = CALLVALUE
0x2db: V174 = ISZERO V173
0x2dc: V175 = 0x2e4
0x2df: JUMPI 0x2e4 V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V173]
Exit stack: [V11, V173]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: [0x2d8]
Successors: []
---
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 REVERT
---
0x2e0: V176 = 0x0
0x2e3: REVERT 0x0 0x0
---
Entry stack: [V11, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V173]

================================

Block 0x2e4
[0x2e4:0x2ec]
---
Predecessors: [0x2d8]
Successors: [0x3e8]
---
0x2e4 JUMPDEST
0x2e5 POP
0x2e6 PUSH2 0x2ed
0x2e9 PUSH2 0x3e8
0x2ec JUMP
---
0x2e4: JUMPDEST 
0x2e6: V177 = 0x2ed
0x2e9: V178 = 0x3e8
0x2ec: JUMP 0x3e8
---
Entry stack: [V11, V173]
Stack pops: 1
Stack additions: [0x2ed]
Exit stack: [V11, 0x2ed]

================================

Block 0x2ed
[0x2ed:0x32e]
---
Predecessors: [0x3e8]
Successors: []
---
0x2ed JUMPDEST
0x2ee PUSH1 0x40
0x2f0 MLOAD
0x2f1 DUP1
0x2f2 DUP3
0x2f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x308 AND
0x309 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31e AND
0x31f DUP2
0x320 MSTORE
0x321 PUSH1 0x20
0x323 ADD
0x324 SWAP2
0x325 POP
0x326 POP
0x327 PUSH1 0x40
0x329 MLOAD
0x32a DUP1
0x32b SWAP2
0x32c SUB
0x32d SWAP1
0x32e RETURN
---
0x2ed: JUMPDEST 
0x2ee: V179 = 0x40
0x2f0: V180 = M[0x40]
0x2f3: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x308: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x309: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x31e: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x320: M[V180] = V184
0x321: V185 = 0x20
0x323: V186 = ADD 0x20 V180
0x327: V187 = 0x40
0x329: V188 = M[0x40]
0x32c: V189 = SUB V186 V188
0x32e: RETURN V188 V189
---
Entry stack: [V11, 0x2ed, V249]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2ed]

================================

Block 0x32f
[0x32f:0x336]
---
Predecessors: [0x57]
Successors: [0x337, 0x33b]
---
0x32f JUMPDEST
0x330 CALLVALUE
0x331 DUP1
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x32f: JUMPDEST 
0x330: V190 = CALLVALUE
0x332: V191 = ISZERO V190
0x333: V192 = 0x33b
0x336: JUMPI 0x33b V191
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V190]
Exit stack: [V11, V190]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x32f]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V193 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V11, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V190]

================================

Block 0x33b
[0x33b:0x36f]
---
Predecessors: [0x32f]
Successors: [0x40e]
---
0x33b JUMPDEST
0x33c POP
0x33d PUSH2 0x370
0x340 PUSH1 0x4
0x342 DUP1
0x343 CALLDATASIZE
0x344 SUB
0x345 DUP2
0x346 ADD
0x347 SWAP1
0x348 DUP1
0x349 DUP1
0x34a CALLDATALOAD
0x34b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x360 AND
0x361 SWAP1
0x362 PUSH1 0x20
0x364 ADD
0x365 SWAP1
0x366 SWAP3
0x367 SWAP2
0x368 SWAP1
0x369 POP
0x36a POP
0x36b POP
0x36c PUSH2 0x40e
0x36f JUMP
---
0x33b: JUMPDEST 
0x33d: V194 = 0x370
0x340: V195 = 0x4
0x343: V196 = CALLDATASIZE
0x344: V197 = SUB V196 0x4
0x346: V198 = ADD 0x4 V197
0x34a: V199 = CALLDATALOAD 0x4
0x34b: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x360: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x362: V202 = 0x20
0x364: V203 = ADD 0x20 0x4
0x36c: V204 = 0x40e
0x36f: JUMP 0x40e
---
Entry stack: [V11, V190]
Stack pops: 1
Stack additions: [0x370, V201]
Exit stack: [V11, 0x370, V201]

================================

Block 0x370
[0x370:0x385]
---
Predecessors: [0x40e]
Successors: []
---
0x370 JUMPDEST
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP1
0x375 DUP3
0x376 DUP2
0x377 MSTORE
0x378 PUSH1 0x20
0x37a ADD
0x37b SWAP2
0x37c POP
0x37d POP
0x37e PUSH1 0x40
0x380 MLOAD
0x381 DUP1
0x382 SWAP2
0x383 SUB
0x384 SWAP1
0x385 RETURN
---
0x370: JUMPDEST 
0x371: V205 = 0x40
0x373: V206 = M[0x40]
0x377: M[V206] = V257
0x378: V207 = 0x20
0x37a: V208 = ADD 0x20 V206
0x37e: V209 = 0x40
0x380: V210 = M[0x40]
0x383: V211 = SUB V208 V210
0x385: RETURN V210 V211
---
Entry stack: [V11, 0x370, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x370]

================================

Block 0x386
[0x386:0x38d]
---
Predecessors: [0x62]
Successors: [0x38e, 0x392]
---
0x386 JUMPDEST
0x387 CALLVALUE
0x388 DUP1
0x389 ISZERO
0x38a PUSH2 0x392
0x38d JUMPI
---
0x386: JUMPDEST 
0x387: V212 = CALLVALUE
0x389: V213 = ISZERO V212
0x38a: V214 = 0x392
0x38d: JUMPI 0x392 V213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V212]
Exit stack: [V11, V212]

================================

Block 0x38e
[0x38e:0x391]
---
Predecessors: [0x386]
Successors: []
---
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
---
0x38e: V215 = 0x0
0x391: REVERT 0x0 0x0
---
Entry stack: [V11, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V212]

================================

Block 0x392
[0x392:0x39a]
---
Predecessors: [0x386]
Successors: [0x426]
---
0x392 JUMPDEST
0x393 POP
0x394 PUSH2 0x39b
0x397 PUSH2 0x426
0x39a JUMP
---
0x392: JUMPDEST 
0x394: V216 = 0x39b
0x397: V217 = 0x426
0x39a: JUMP 0x426
---
Entry stack: [V11, V212]
Stack pops: 1
Stack additions: [0x39b]
Exit stack: [V11, 0x39b]

================================

Block 0x39b
[0x39b:0x3b0]
---
Predecessors: [0x426]
Successors: []
---
0x39b JUMPDEST
0x39c PUSH1 0x40
0x39e MLOAD
0x39f DUP1
0x3a0 DUP3
0x3a1 DUP2
0x3a2 MSTORE
0x3a3 PUSH1 0x20
0x3a5 ADD
0x3a6 SWAP2
0x3a7 POP
0x3a8 POP
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac DUP1
0x3ad SWAP2
0x3ae SUB
0x3af SWAP1
0x3b0 RETURN
---
0x39b: JUMPDEST 
0x39c: V218 = 0x40
0x39e: V219 = M[0x40]
0x3a2: M[V219] = V259
0x3a3: V220 = 0x20
0x3a5: V221 = ADD 0x20 V219
0x3a9: V222 = 0x40
0x3ab: V223 = M[0x40]
0x3ae: V224 = SUB V221 V223
0x3b0: RETURN V223 V224
---
Entry stack: [V11, 0x39b, V259]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x39b]

================================

Block 0x3b1
[0x3b1:0x3b8]
---
Predecessors: [0x6d]
Successors: [0x3b9, 0x3bd]
---
0x3b1 JUMPDEST
0x3b2 CALLVALUE
0x3b3 DUP1
0x3b4 ISZERO
0x3b5 PUSH2 0x3bd
0x3b8 JUMPI
---
0x3b1: JUMPDEST 
0x3b2: V225 = CALLVALUE
0x3b4: V226 = ISZERO V225
0x3b5: V227 = 0x3bd
0x3b8: JUMPI 0x3bd V226
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V225]
Exit stack: [V11, V225]

================================

Block 0x3b9
[0x3b9:0x3bc]
---
Predecessors: [0x3b1]
Successors: []
---
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc REVERT
---
0x3b9: V228 = 0x0
0x3bc: REVERT 0x0 0x0
---
Entry stack: [V11, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V225]

================================

Block 0x3bd
[0x3bd:0x3c5]
---
Predecessors: [0x3b1]
Successors: [0x42c]
---
0x3bd JUMPDEST
0x3be POP
0x3bf PUSH2 0x3c6
0x3c2 PUSH2 0x42c
0x3c5 JUMP
---
0x3bd: JUMPDEST 
0x3bf: V229 = 0x3c6
0x3c2: V230 = 0x42c
0x3c5: JUMP 0x42c
---
Entry stack: [V11, V225]
Stack pops: 1
Stack additions: [0x3c6]
Exit stack: [V11, 0x3c6]

================================

Block 0x3c6
[0x3c6:0x3db]
---
Predecessors: [0x42c]
Successors: []
---
0x3c6 JUMPDEST
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca DUP1
0x3cb DUP3
0x3cc DUP2
0x3cd MSTORE
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP2
0x3d2 POP
0x3d3 POP
0x3d4 PUSH1 0x40
0x3d6 MLOAD
0x3d7 DUP1
0x3d8 SWAP2
0x3d9 SUB
0x3da SWAP1
0x3db RETURN
---
0x3c6: JUMPDEST 
0x3c7: V231 = 0x40
0x3c9: V232 = M[0x40]
0x3cd: M[V232] = V261
0x3ce: V233 = 0x20
0x3d0: V234 = ADD 0x20 V232
0x3d4: V235 = 0x40
0x3d6: V236 = M[0x40]
0x3d9: V237 = SUB V234 V236
0x3db: RETURN V236 V237
---
Entry stack: [V11, 0x3c6, V261]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3c6]

================================

Block 0x3dc
[0x3dc:0x3e1]
---
Predecessors: [0x28e]
Successors: [0x297]
---
0x3dc JUMPDEST
0x3dd PUSH1 0x0
0x3df SLOAD
0x3e0 DUP2
0x3e1 JUMP
---
0x3dc: JUMPDEST 
0x3dd: V238 = 0x0
0x3df: V239 = S[0x0]
0x3e1: JUMP 0x297
---
Entry stack: [V11, 0x297]
Stack pops: 1
Stack additions: [S0, V239]
Exit stack: [V11, 0x297, V239]

================================

Block 0x3e2
[0x3e2:0x3e7]
---
Predecessors: [0x2b9]
Successors: [0x2c2]
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x2
0x3e5 SLOAD
0x3e6 DUP2
0x3e7 JUMP
---
0x3e2: JUMPDEST 
0x3e3: V240 = 0x2
0x3e5: V241 = S[0x2]
0x3e7: JUMP 0x2c2
---
Entry stack: [V11, 0x2c2]
Stack pops: 1
Stack additions: [S0, V241]
Exit stack: [V11, 0x2c2, V241]

================================

Block 0x3e8
[0x3e8:0x40d]
---
Predecessors: [0x2e4]
Successors: [0x2ed]
---
0x3e8 JUMPDEST
0x3e9 PUSH1 0x3
0x3eb PUSH1 0x0
0x3ed SWAP1
0x3ee SLOAD
0x3ef SWAP1
0x3f0 PUSH2 0x100
0x3f3 EXP
0x3f4 SWAP1
0x3f5 DIV
0x3f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40b AND
0x40c DUP2
0x40d JUMP
---
0x3e8: JUMPDEST 
0x3e9: V242 = 0x3
0x3eb: V243 = 0x0
0x3ee: V244 = S[0x3]
0x3f0: V245 = 0x100
0x3f3: V246 = EXP 0x100 0x0
0x3f5: V247 = DIV V244 0x1
0x3f6: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x40d: JUMP 0x2ed
---
Entry stack: [V11, 0x2ed]
Stack pops: 1
Stack additions: [S0, V249]
Exit stack: [V11, 0x2ed, V249]

================================

Block 0x40e
[0x40e:0x425]
---
Predecessors: [0x33b]
Successors: [0x370]
---
0x40e JUMPDEST
0x40f PUSH1 0x5
0x411 PUSH1 0x20
0x413 MSTORE
0x414 DUP1
0x415 PUSH1 0x0
0x417 MSTORE
0x418 PUSH1 0x40
0x41a PUSH1 0x0
0x41c SHA3
0x41d PUSH1 0x0
0x41f SWAP2
0x420 POP
0x421 SWAP1
0x422 POP
0x423 SLOAD
0x424 DUP2
0x425 JUMP
---
0x40e: JUMPDEST 
0x40f: V250 = 0x5
0x411: V251 = 0x20
0x413: M[0x20] = 0x5
0x415: V252 = 0x0
0x417: M[0x0] = V201
0x418: V253 = 0x40
0x41a: V254 = 0x0
0x41c: V255 = SHA3 0x0 0x40
0x41d: V256 = 0x0
0x423: V257 = S[V255]
0x425: JUMP 0x370
---
Entry stack: [V11, 0x370, V201]
Stack pops: 2
Stack additions: [S1, V257]
Exit stack: [V11, 0x370, V257]

================================

Block 0x426
[0x426:0x42b]
---
Predecessors: [0x392]
Successors: [0x39b]
---
0x426 JUMPDEST
0x427 PUSH1 0x4
0x429 SLOAD
0x42a DUP2
0x42b JUMP
---
0x426: JUMPDEST 
0x427: V258 = 0x4
0x429: V259 = S[0x4]
0x42b: JUMP 0x39b
---
Entry stack: [V11, 0x39b]
Stack pops: 1
Stack additions: [S0, V259]
Exit stack: [V11, 0x39b, V259]

================================

Block 0x42c
[0x42c:0x431]
---
Predecessors: [0x3bd]
Successors: [0x3c6]
---
0x42c JUMPDEST
0x42d PUSH1 0x1
0x42f SLOAD
0x430 DUP2
0x431 JUMP
---
0x42c: JUMPDEST 
0x42d: V260 = 0x1
0x42f: V261 = S[0x1]
0x431: JUMP 0x3c6
---
Entry stack: [V11, 0x3c6]
Stack pops: 1
Stack additions: [S0, V261]
Exit stack: [V11, 0x3c6, V261]

================================

Block 0x432
[0x432:0x464]
---
Predecessors: []
Successors: []
---
0x432 STOP
0x433 LOG1
0x434 PUSH6 0x627a7a723058
0x43b SHA3
0x43c ADD
0x43d SWAP16
0x43e MISSING 0xe9
0x43f MISSING 0xd
0x440 DUP12
0x441 MISSING 0x4e
0x442 MISSING 0x27
0x443 DUP15
0x444 PUSH32 0xa7ee16ac26435a59c60ba48c15f05fed5b82470783ab310029
---
0x432: STOP 
0x433: LOG S0 S1 S2
0x434: V262 = 0x627a7a723058
0x43b: V263 = SHA3 0x627a7a723058 S3
0x43c: V264 = ADD V263 S4
0x43e: MISSING 0xe9
0x43f: MISSING 0xd
0x441: MISSING 0x4e
0x442: MISSING 0x27
0x444: V265 = 0xa7ee16ac26435a59c60ba48c15f05fed5b82470783ab310029
---
Entry stack: []
Stack pops: 0
Stack additions: [S20, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, V264, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0xa7ee16ac26435a59c60ba48c15f05fed5b82470783ab310029, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0x10309781
Entry block: 0x282
Exit block: 0x297
Body: 0x282, 0x28a, 0x28e, 0x297, 0x3dc

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x2ad
Exit block: 0x2c2
Body: 0x2ad, 0x2b5, 0x2b9, 0x2c2, 0x3e2

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x2d8
Exit block: 0x2ed
Body: 0x2d8, 0x2e0, 0x2e4, 0x2ed, 0x3e8

Function 3:
Public function signature: 0x70a08231
Entry block: 0x32f
Exit block: 0x370
Body: 0x32f, 0x337, 0x33b, 0x370, 0x40e

Function 4:
Public function signature: 0x7b3e5e7b
Entry block: 0x386
Exit block: 0x39b
Body: 0x386, 0x38e, 0x392, 0x39b, 0x426

Function 5:
Public function signature: 0xbe9a6555
Entry block: 0x3b1
Exit block: 0x3c6
Body: 0x3b1, 0x3b9, 0x3bd, 0x3c6, 0x42c

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x27f
Body: 0x78, 0x87, 0x8e, 0x95, 0xa5, 0xac, 0xb0, 0x1e5, 0x27f

