Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb9
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb9
0xc: JUMPI 0xb9 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xbb]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xa483421
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xbb
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xa483421
0x3b: V13 = EQ V11 0xa483421
0x3c: V14 = 0xbb
0x3f: JUMPI 0xbb V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xe0]
---
0x40 DUP1
0x41 PUSH4 0xa6fbb05
0x46 EQ
0x47 PUSH2 0xe0
0x4a JUMPI
---
0x41: V15 = 0xa6fbb05
0x46: V16 = EQ 0xa6fbb05 V11
0x47: V17 = 0xe0
0x4a: JUMPI 0xe0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xeb]
---
0x4b DUP1
0x4c PUSH4 0x181ffc5f
0x51 EQ
0x52 PUSH2 0xeb
0x55 JUMPI
---
0x4c: V18 = 0x181ffc5f
0x51: V19 = EQ 0x181ffc5f V11
0x52: V20 = 0xeb
0x55: JUMPI 0xeb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xfe]
---
0x56 DUP1
0x57 PUSH4 0x31fd725a
0x5c EQ
0x5d PUSH2 0xfe
0x60 JUMPI
---
0x57: V21 = 0x31fd725a
0x5c: V22 = EQ 0x31fd725a V11
0x5d: V23 = 0xfe
0x60: JUMPI 0xfe V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x114]
---
0x61 DUP1
0x62 PUSH4 0x410c8005
0x67 EQ
0x68 PUSH2 0x114
0x6b JUMPI
---
0x62: V24 = 0x410c8005
0x67: V25 = EQ 0x410c8005 V11
0x68: V26 = 0x114
0x6b: JUMPI 0x114 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x133]
---
0x6c DUP1
0x6d PUSH4 0x597e1fb5
0x72 EQ
0x73 PUSH2 0x133
0x76 JUMPI
---
0x6d: V27 = 0x597e1fb5
0x72: V28 = EQ 0x597e1fb5 V11
0x73: V29 = 0x133
0x76: JUMPI 0x133 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x15a]
---
0x77 DUP1
0x78 PUSH4 0x67e404ce
0x7d EQ
0x7e PUSH2 0x15a
0x81 JUMPI
---
0x78: V30 = 0x67e404ce
0x7d: V31 = EQ 0x67e404ce V11
0x7e: V32 = 0x15a
0x81: JUMPI 0x15a V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x189]
---
0x82 DUP1
0x83 PUSH4 0x87f24484
0x88 EQ
0x89 PUSH2 0x189
0x8c JUMPI
---
0x83: V33 = 0x87f24484
0x88: V34 = EQ 0x87f24484 V11
0x89: V35 = 0x189
0x8c: JUMPI 0x189 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x19c]
---
0x8d DUP1
0x8e PUSH4 0xa4bbfb74
0x93 EQ
0x94 PUSH2 0x19c
0x97 JUMPI
---
0x8e: V36 = 0xa4bbfb74
0x93: V37 = EQ 0xa4bbfb74 V11
0x94: V38 = 0x19c
0x97: JUMPI 0x19c V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x1af]
---
0x98 DUP1
0x99 PUSH4 0xb456ecc5
0x9e EQ
0x9f PUSH2 0x1af
0xa2 JUMPI
---
0x99: V39 = 0xb456ecc5
0x9e: V40 = EQ 0xb456ecc5 V11
0x9f: V41 = 0x1af
0xa2: JUMPI 0x1af V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x200]
---
0xa3 DUP1
0xa4 PUSH4 0xbea948c8
0xa9 EQ
0xaa PUSH2 0x200
0xad JUMPI
---
0xa4: V42 = 0xbea948c8
0xa9: V43 = EQ 0xbea948c8 V11
0xaa: V44 = 0x200
0xad: JUMPI 0x200 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x208]
---
0xae DUP1
0xaf PUSH4 0xdac47a71
0xb4 EQ
0xb5 PUSH2 0x208
0xb8 JUMPI
---
0xaf: V45 = 0xdac47a71
0xb4: V46 = EQ 0xdac47a71 V11
0xb5: V47 = 0x208
0xb8: JUMPI 0x208 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: [0x0, 0xae, 0x285, 0x2f9, 0x327, 0x352, 0x476, 0x495]
Successors: []
---
0xb9 JUMPDEST
0xba STOP
---
0xb9: JUMPDEST 
0xba: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0xd]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V48 = CALLVALUE
0xbd: V49 = ISZERO V48
0xbe: V50 = 0xc6
0xc1: JUMPI 0xc6 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V51 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbb]
Successors: [0x21e]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xce
0xca PUSH2 0x21e
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V52 = 0xce
0xca: V53 = 0x21e
0xcd: JUMP 0x21e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V11, 0xce]

================================

Block 0xce
[0xce:0xdf]
---
Predecessors: [0x21e, 0x39b, 0x3e2]
Successors: []
---
0xce JUMPDEST
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 SWAP1
0xd3 DUP2
0xd4 MSTORE
0xd5 PUSH1 0x20
0xd7 ADD
0xd8 PUSH1 0x40
0xda MLOAD
0xdb DUP1
0xdc SWAP2
0xdd SUB
0xde SWAP1
0xdf RETURN
---
0xce: JUMPDEST 
0xcf: V54 = 0x40
0xd1: V55 = M[0x40]
0xd4: M[V55] = S0
0xd5: V56 = 0x20
0xd7: V57 = ADD 0x20 V55
0xd8: V58 = 0x40
0xda: V59 = M[0x40]
0xdd: V60 = SUB V57 V59
0xdf: RETURN V59 V60
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0x40]
Successors: [0x224]
---
0xe0 JUMPDEST
0xe1 PUSH2 0xb9
0xe4 PUSH1 0x4
0xe6 CALLDATALOAD
0xe7 PUSH2 0x224
0xea JUMP
---
0xe0: JUMPDEST 
0xe1: V61 = 0xb9
0xe4: V62 = 0x4
0xe6: V63 = CALLDATALOAD 0x4
0xe7: V64 = 0x224
0xea: JUMP 0x224
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9, V63]
Exit stack: [V11, 0xb9, V63]

================================

Block 0xeb
[0xeb:0xfd]
---
Predecessors: [0x4b]
Successors: [0x288]
---
0xeb JUMPDEST
0xec PUSH2 0xb9
0xef PUSH1 0x4
0xf1 DUP1
0xf2 CALLDATALOAD
0xf3 PUSH1 0x24
0xf5 DUP2
0xf6 ADD
0xf7 SWAP2
0xf8 ADD
0xf9 CALLDATALOAD
0xfa PUSH2 0x288
0xfd JUMP
---
0xeb: JUMPDEST 
0xec: V65 = 0xb9
0xef: V66 = 0x4
0xf2: V67 = CALLDATALOAD 0x4
0xf3: V68 = 0x24
0xf6: V69 = ADD V67 0x24
0xf8: V70 = ADD 0x4 V67
0xf9: V71 = CALLDATALOAD V70
0xfa: V72 = 0x288
0xfd: JUMP 0x288
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9, V69, V71]
Exit stack: [V11, 0xb9, V69, V71]

================================

Block 0xfe
[0xfe:0x104]
---
Predecessors: [0x56]
Successors: [0x105, 0x109]
---
0xfe JUMPDEST
0xff CALLVALUE
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xfe: JUMPDEST 
0xff: V73 = CALLVALUE
0x100: V74 = ISZERO V73
0x101: V75 = 0x109
0x104: JUMPI 0x109 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xfe]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V76 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x109
[0x109:0x113]
---
Predecessors: [0xfe]
Successors: [0x2fd]
---
0x109 JUMPDEST
0x10a PUSH2 0xb9
0x10d PUSH1 0x4
0x10f CALLDATALOAD
0x110 PUSH2 0x2fd
0x113 JUMP
---
0x109: JUMPDEST 
0x10a: V77 = 0xb9
0x10d: V78 = 0x4
0x10f: V79 = CALLDATALOAD 0x4
0x110: V80 = 0x2fd
0x113: JUMP 0x2fd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9, V79]
Exit stack: [V11, 0xb9, V79]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x61]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V81 = CALLVALUE
0x116: V82 = ISZERO V81
0x117: V83 = 0x11f
0x11a: JUMPI 0x11f V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V84 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11f
[0x11f:0x132]
---
Predecessors: [0x114]
Successors: [0x335]
---
0x11f JUMPDEST
0x120 PUSH2 0xb9
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b PUSH1 0x4
0x12d CALLDATALOAD
0x12e AND
0x12f PUSH2 0x335
0x132 JUMP
---
0x11f: JUMPDEST 
0x120: V85 = 0xb9
0x123: V86 = 0x1
0x125: V87 = 0xa0
0x127: V88 = 0x2
0x129: V89 = EXP 0x2 0xa0
0x12a: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12b: V91 = 0x4
0x12d: V92 = CALLDATALOAD 0x4
0x12e: V93 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V94 = 0x335
0x132: JUMP 0x335
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9, V93]
Exit stack: [V11, 0xb9, V93]

================================

Block 0x133
[0x133:0x139]
---
Predecessors: [0x6c]
Successors: [0x13a, 0x13e]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0x133: JUMPDEST 
0x134: V95 = CALLVALUE
0x135: V96 = ISZERO V95
0x136: V97 = 0x13e
0x139: JUMPI 0x13e V96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0x133]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V98 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x133]
Successors: [0x37e]
---
0x13e JUMPDEST
0x13f PUSH2 0x146
0x142 PUSH2 0x37e
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V99 = 0x146
0x142: V100 = 0x37e
0x145: JUMP 0x37e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V11, 0x146]

================================

Block 0x146
[0x146:0x159]
---
Predecessors: [0x37e]
Successors: []
---
0x146 JUMPDEST
0x147 PUSH1 0x40
0x149 MLOAD
0x14a SWAP1
0x14b ISZERO
0x14c ISZERO
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x20
0x151 ADD
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 SWAP2
0x157 SUB
0x158 SWAP1
0x159 RETURN
---
0x146: JUMPDEST 
0x147: V101 = 0x40
0x149: V102 = M[0x40]
0x14b: V103 = ISZERO V314
0x14c: V104 = ISZERO V103
0x14e: M[V102] = V104
0x14f: V105 = 0x20
0x151: V106 = ADD 0x20 V102
0x152: V107 = 0x40
0x154: V108 = M[0x40]
0x157: V109 = SUB V106 V108
0x159: RETURN V108 V109
---
Entry stack: [V11, 0x146, V314]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x146]

================================

Block 0x15a
[0x15a:0x160]
---
Predecessors: [0x77]
Successors: [0x161, 0x165]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x15a: JUMPDEST 
0x15b: V110 = CALLVALUE
0x15c: V111 = ISZERO V110
0x15d: V112 = 0x165
0x160: JUMPI 0x165 V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x15a]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V113 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x165
[0x165:0x16c]
---
Predecessors: [0x15a]
Successors: [0x387]
---
0x165 JUMPDEST
0x166 PUSH2 0x16d
0x169 PUSH2 0x387
0x16c JUMP
---
0x165: JUMPDEST 
0x166: V114 = 0x16d
0x169: V115 = 0x387
0x16c: JUMP 0x387
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16d]
Exit stack: [V11, 0x16d]

================================

Block 0x16d
[0x16d:0x188]
---
Predecessors: [0x387, 0x3a1]
Successors: []
---
0x16d JUMPDEST
0x16e PUSH1 0x40
0x170 MLOAD
0x171 PUSH1 0x1
0x173 PUSH1 0xa0
0x175 PUSH1 0x2
0x177 EXP
0x178 SUB
0x179 SWAP1
0x17a SWAP2
0x17b AND
0x17c DUP2
0x17d MSTORE
0x17e PUSH1 0x20
0x180 ADD
0x181 PUSH1 0x40
0x183 MLOAD
0x184 DUP1
0x185 SWAP2
0x186 SUB
0x187 SWAP1
0x188 RETURN
---
0x16d: JUMPDEST 
0x16e: V116 = 0x40
0x170: V117 = M[0x40]
0x171: V118 = 0x1
0x173: V119 = 0xa0
0x175: V120 = 0x2
0x177: V121 = EXP 0x2 0xa0
0x178: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V123 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x17d: M[V117] = V123
0x17e: V124 = 0x20
0x180: V125 = ADD 0x20 V117
0x181: V126 = 0x40
0x183: V127 = M[0x40]
0x186: V128 = SUB V125 V127
0x188: RETURN V127 V128
---
Entry stack: [V11, 0x16d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x16d]

================================

Block 0x189
[0x189:0x18f]
---
Predecessors: [0x82]
Successors: [0x190, 0x194]
---
0x189 JUMPDEST
0x18a CALLVALUE
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x189: JUMPDEST 
0x18a: V129 = CALLVALUE
0x18b: V130 = ISZERO V129
0x18c: V131 = 0x194
0x18f: JUMPI 0x194 V130
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x189]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V132 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x194
[0x194:0x19b]
---
Predecessors: [0x189]
Successors: [0x39b]
---
0x194 JUMPDEST
0x195 PUSH2 0xce
0x198 PUSH2 0x39b
0x19b JUMP
---
0x194: JUMPDEST 
0x195: V133 = 0xce
0x198: V134 = 0x39b
0x19b: JUMP 0x39b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V11, 0xce]

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0x8d]
Successors: [0x1a3, 0x1a7]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V135 = CALLVALUE
0x19e: V136 = ISZERO V135
0x19f: V137 = 0x1a7
0x1a2: JUMPI 0x1a7 V136
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V138 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a7
[0x1a7:0x1ae]
---
Predecessors: [0x19c]
Successors: [0x3a1]
---
0x1a7 JUMPDEST
0x1a8 PUSH2 0x16d
0x1ab PUSH2 0x3a1
0x1ae JUMP
---
0x1a7: JUMPDEST 
0x1a8: V139 = 0x16d
0x1ab: V140 = 0x3a1
0x1ae: JUMP 0x3a1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16d]
Exit stack: [V11, 0x16d]

================================

Block 0x1af
[0x1af:0x1b5]
---
Predecessors: [0x98]
Successors: [0x1b6, 0x1ba]
---
0x1af JUMPDEST
0x1b0 CALLVALUE
0x1b1 ISZERO
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V141 = CALLVALUE
0x1b1: V142 = ISZERO V141
0x1b2: V143 = 0x1ba
0x1b5: JUMPI 0x1ba V142
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x1af]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V144 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ba
[0x1ba:0x1ff]
---
Predecessors: [0x1af]
Successors: [0x3b0]
---
0x1ba JUMPDEST
0x1bb PUSH2 0xce
0x1be PUSH1 0x4
0x1c0 PUSH1 0x24
0x1c2 DUP2
0x1c3 CALLDATALOAD
0x1c4 DUP2
0x1c5 DUP2
0x1c6 ADD
0x1c7 SWAP1
0x1c8 DUP4
0x1c9 ADD
0x1ca CALLDATALOAD
0x1cb DUP1
0x1cc PUSH1 0x20
0x1ce PUSH1 0x1f
0x1d0 DUP3
0x1d1 ADD
0x1d2 DUP2
0x1d3 SWAP1
0x1d4 DIV
0x1d5 DUP2
0x1d6 MUL
0x1d7 ADD
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db SWAP1
0x1dc DUP2
0x1dd ADD
0x1de PUSH1 0x40
0x1e0 MSTORE
0x1e1 DUP2
0x1e2 DUP2
0x1e3 MSTORE
0x1e4 SWAP3
0x1e5 SWAP2
0x1e6 SWAP1
0x1e7 PUSH1 0x20
0x1e9 DUP5
0x1ea ADD
0x1eb DUP4
0x1ec DUP4
0x1ed DUP1
0x1ee DUP3
0x1ef DUP5
0x1f0 CALLDATACOPY
0x1f1 POP
0x1f2 SWAP5
0x1f3 SWAP7
0x1f4 POP
0x1f5 PUSH2 0x3b0
0x1f8 SWAP6
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc POP
0x1fd POP
0x1fe POP
0x1ff JUMP
---
0x1ba: JUMPDEST 
0x1bb: V145 = 0xce
0x1be: V146 = 0x4
0x1c0: V147 = 0x24
0x1c3: V148 = CALLDATALOAD 0x4
0x1c6: V149 = ADD V148 0x24
0x1c9: V150 = ADD 0x4 V148
0x1ca: V151 = CALLDATALOAD V150
0x1cc: V152 = 0x20
0x1ce: V153 = 0x1f
0x1d1: V154 = ADD V151 0x1f
0x1d4: V155 = DIV V154 0x20
0x1d6: V156 = MUL 0x20 V155
0x1d7: V157 = ADD V156 0x20
0x1d8: V158 = 0x40
0x1da: V159 = M[0x40]
0x1dd: V160 = ADD V159 V157
0x1de: V161 = 0x40
0x1e0: M[0x40] = V160
0x1e3: M[V159] = V151
0x1e7: V162 = 0x20
0x1ea: V163 = ADD V159 0x20
0x1f0: CALLDATACOPY V163 V149 V151
0x1f5: V164 = 0x3b0
0x1ff: JUMP 0x3b0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xce, V159]
Exit stack: [V11, 0xce, V159]

================================

Block 0x200
[0x200:0x207]
---
Predecessors: [0xa3]
Successors: [0x415]
---
0x200 JUMPDEST
0x201 PUSH2 0xb9
0x204 PUSH2 0x415
0x207 JUMP
---
0x200: JUMPDEST 
0x201: V165 = 0xb9
0x204: V166 = 0x415
0x207: JUMP 0x415
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9]
Exit stack: [V11, 0xb9]

================================

Block 0x208
[0x208:0x20e]
---
Predecessors: [0xae]
Successors: [0x20f, 0x213]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x208: JUMPDEST 
0x209: V167 = CALLVALUE
0x20a: V168 = ISZERO V167
0x20b: V169 = 0x213
0x20e: JUMPI 0x213 V168
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x208]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V170 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x213
[0x213:0x21d]
---
Predecessors: [0x208]
Successors: [0x478]
---
0x213 JUMPDEST
0x214 PUSH2 0xb9
0x217 PUSH1 0x4
0x219 CALLDATALOAD
0x21a PUSH2 0x478
0x21d JUMP
---
0x213: JUMPDEST 
0x214: V171 = 0xb9
0x217: V172 = 0x4
0x219: V173 = CALLDATALOAD 0x4
0x21a: V174 = 0x478
0x21d: JUMP 0x478
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9, V173]
Exit stack: [V11, 0xb9, V173]

================================

Block 0x21e
[0x21e:0x223]
---
Predecessors: [0xc6]
Successors: [0xce]
---
0x21e JUMPDEST
0x21f PUSH1 0x3
0x221 SLOAD
0x222 DUP2
0x223 JUMP
---
0x21e: JUMPDEST 
0x21f: V175 = 0x3
0x221: V176 = S[0x3]
0x223: JUMP 0xce
---
Entry stack: [V11, 0xce]
Stack pops: 1
Stack additions: [S0, V176]
Exit stack: [V11, 0xce, V176]

================================

Block 0x224
[0x224:0x231]
---
Predecessors: [0xe0]
Successors: [0x232, 0x23e]
---
0x224 JUMPDEST
0x225 PUSH1 0x1
0x227 SLOAD
0x228 PUSH1 0xff
0x22a AND
0x22b ISZERO
0x22c DUP1
0x22d ISZERO
0x22e PUSH2 0x23e
0x231 JUMPI
---
0x224: JUMPDEST 
0x225: V177 = 0x1
0x227: V178 = S[0x1]
0x228: V179 = 0xff
0x22a: V180 = AND 0xff V178
0x22b: V181 = ISZERO V180
0x22d: V182 = ISZERO V181
0x22e: V183 = 0x23e
0x231: JUMPI 0x23e V182
---
Entry stack: [V11, 0xb9, V63]
Stack pops: 0
Stack additions: [V181]
Exit stack: [V11, 0xb9, V63, V181]

================================

Block 0x232
[0x232:0x23d]
---
Predecessors: [0x224]
Successors: [0x23e]
---
0x232 POP
0x233 PUSH8 0xde0b6b3a7640000
0x23c CALLVALUE
0x23d GT
---
0x233: V184 = 0xde0b6b3a7640000
0x23c: V185 = CALLVALUE
0x23d: V186 = GT V185 0xde0b6b3a7640000
---
Entry stack: [V11, 0xb9, V63, V181]
Stack pops: 1
Stack additions: [V186]
Exit stack: [V11, 0xb9, V63, V186]

================================

Block 0x23e
[0x23e:0x243]
---
Predecessors: [0x224, 0x232]
Successors: [0x244, 0x249]
---
0x23e JUMPDEST
0x23f DUP1
0x240 PUSH2 0x249
0x243 JUMPI
---
0x23e: JUMPDEST 
0x240: V187 = 0x249
0x243: JUMPI 0x249 S0
---
Entry stack: [V11, 0xb9, V63, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb9, V63, S0]

================================

Block 0x244
[0x244:0x248]
---
Predecessors: [0x23e]
Successors: [0x249]
---
0x244 POP
0x245 PUSH1 0x0
0x247 SLOAD
0x248 ISZERO
---
0x245: V188 = 0x0
0x247: V189 = S[0x0]
0x248: V190 = ISZERO V189
---
Entry stack: [V11, 0xb9, V63, S0]
Stack pops: 1
Stack additions: [V190]
Exit stack: [V11, 0xb9, V63, V190]

================================

Block 0x249
[0x249:0x24e]
---
Predecessors: [0x23e, 0x244]
Successors: [0x24f, 0x285]
---
0x249 JUMPDEST
0x24a ISZERO
0x24b PUSH2 0x285
0x24e JUMPI
---
0x249: JUMPDEST 
0x24a: V191 = ISZERO S0
0x24b: V192 = 0x285
0x24e: JUMPI 0x285 V191
---
Entry stack: [V11, 0xb9, V63, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb9, V63]

================================

Block 0x24f
[0x24f:0x284]
---
Predecessors: [0x249]
Successors: [0x285]
---
0x24f PUSH1 0x0
0x251 DUP2
0x252 SWAP1
0x253 SSTORE
0x254 PUSH1 0x1
0x256 DUP1
0x257 SLOAD
0x258 PUSH21 0xffffffffffffffffffffffffffffffffffffffff00
0x26e NOT
0x26f AND
0x270 PUSH2 0x100
0x273 CALLER
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c AND
0x27d MUL
0x27e OR
0x27f SWAP1
0x280 SSTORE
0x281 TIMESTAMP
0x282 PUSH1 0x3
0x284 SSTORE
---
0x24f: V193 = 0x0
0x253: S[0x0] = V63
0x254: V194 = 0x1
0x257: V195 = S[0x1]
0x258: V196 = 0xffffffffffffffffffffffffffffffffffffffff00
0x26e: V197 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x26f: V198 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V195
0x270: V199 = 0x100
0x273: V200 = CALLER
0x274: V201 = 0x1
0x276: V202 = 0xa0
0x278: V203 = 0x2
0x27a: V204 = EXP 0x2 0xa0
0x27b: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x27d: V207 = MUL V206 0x100
0x27e: V208 = OR V207 V198
0x280: S[0x1] = V208
0x281: V209 = TIMESTAMP
0x282: V210 = 0x3
0x284: S[0x3] = V209
---
Entry stack: [V11, 0xb9, V63]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb9, V63]

================================

Block 0x285
[0x285:0x287]
---
Predecessors: [0x249, 0x24f, 0x321, 0x335, 0x478]
Successors: [0xb9]
---
0x285 JUMPDEST
0x286 POP
0x287 JUMP
---
0x285: JUMPDEST 
0x287: JUMP 0xb9
---
Entry stack: [V11, 0xb9, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x288
[0x288:0x2b0]
---
Predecessors: [0xeb]
Successors: [0x2b1, 0x2b7]
---
0x288 JUMPDEST
0x289 DUP2
0x28a DUP2
0x28b PUSH1 0x40
0x28d MLOAD
0x28e DUP1
0x28f DUP4
0x290 DUP4
0x291 DUP1
0x292 DUP3
0x293 DUP5
0x294 CALLDATACOPY
0x295 DUP3
0x296 ADD
0x297 SWAP2
0x298 POP
0x299 POP
0x29a SWAP3
0x29b POP
0x29c POP
0x29d POP
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 SWAP1
0x2a2 DUP2
0x2a3 SWAP1
0x2a4 SUB
0x2a5 SWAP1
0x2a6 SHA3
0x2a7 PUSH1 0x0
0x2a9 SLOAD
0x2aa EQ
0x2ab DUP1
0x2ac ISZERO
0x2ad PUSH2 0x2b7
0x2b0 JUMPI
---
0x288: JUMPDEST 
0x28b: V211 = 0x40
0x28d: V212 = M[0x40]
0x294: CALLDATACOPY V212 V69 V71
0x296: V213 = ADD V212 V71
0x29e: V214 = 0x40
0x2a0: V215 = M[0x40]
0x2a4: V216 = SUB V213 V215
0x2a6: V217 = SHA3 V215 V216
0x2a7: V218 = 0x0
0x2a9: V219 = S[0x0]
0x2aa: V220 = EQ V219 V217
0x2ac: V221 = ISZERO V220
0x2ad: V222 = 0x2b7
0x2b0: JUMPI 0x2b7 V221
---
Entry stack: [V11, 0xb9, V69, V71]
Stack pops: 2
Stack additions: [S1, S0, V220]
Exit stack: [V11, 0xb9, V69, V71, V220]

================================

Block 0x2b1
[0x2b1:0x2b6]
---
Predecessors: [0x288]
Successors: [0x2b7]
---
0x2b1 POP
0x2b2 PUSH1 0x3
0x2b4 SLOAD
0x2b5 TIMESTAMP
0x2b6 GT
---
0x2b2: V223 = 0x3
0x2b4: V224 = S[0x3]
0x2b5: V225 = TIMESTAMP
0x2b6: V226 = GT V225 V224
---
Entry stack: [V11, 0xb9, V69, V71, V220]
Stack pops: 1
Stack additions: [V226]
Exit stack: [V11, 0xb9, V69, V71, V226]

================================

Block 0x2b7
[0x2b7:0x2bc]
---
Predecessors: [0x288, 0x2b1]
Successors: [0x2bd, 0x2f9]
---
0x2b7 JUMPDEST
0x2b8 ISZERO
0x2b9 PUSH2 0x2f9
0x2bc JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V227 = ISZERO S0
0x2b9: V228 = 0x2f9
0x2bc: JUMPI 0x2f9 V227
---
Entry stack: [V11, 0xb9, V69, V71, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb9, V69, V71]

================================

Block 0x2bd
[0x2bd:0x2f4]
---
Predecessors: [0x2b7]
Successors: [0x2f5, 0x2f9]
---
0x2bd CALLER
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 AND
0x2c7 PUSH2 0x8fc
0x2ca ADDRESS
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 AND
0x2d4 BALANCE
0x2d5 SWAP1
0x2d6 DUP2
0x2d7 ISZERO
0x2d8 MUL
0x2d9 SWAP1
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd PUSH1 0x0
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 DUP4
0x2e4 SUB
0x2e5 DUP2
0x2e6 DUP6
0x2e7 DUP9
0x2e8 DUP9
0x2e9 CALL
0x2ea SWAP4
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef ISZERO
0x2f0 ISZERO
0x2f1 PUSH2 0x2f9
0x2f4 JUMPI
---
0x2bd: V229 = CALLER
0x2be: V230 = 0x1
0x2c0: V231 = 0xa0
0x2c2: V232 = 0x2
0x2c4: V233 = EXP 0x2 0xa0
0x2c5: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c6: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x2c7: V236 = 0x8fc
0x2ca: V237 = ADDRESS
0x2cb: V238 = 0x1
0x2cd: V239 = 0xa0
0x2cf: V240 = 0x2
0x2d1: V241 = EXP 0x2 0xa0
0x2d2: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d3: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x2d4: V244 = BALANCE V243
0x2d7: V245 = ISZERO V244
0x2d8: V246 = MUL V245 0x8fc
0x2da: V247 = 0x40
0x2dc: V248 = M[0x40]
0x2dd: V249 = 0x0
0x2df: V250 = 0x40
0x2e1: V251 = M[0x40]
0x2e4: V252 = SUB V248 V251
0x2e9: V253 = CALL V246 V235 V244 V251 V252 V251 0x0
0x2ef: V254 = ISZERO V253
0x2f0: V255 = ISZERO V254
0x2f1: V256 = 0x2f9
0x2f4: JUMPI 0x2f9 V255
---
Entry stack: [V11, 0xb9, V69, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V69, V71]

================================

Block 0x2f5
[0x2f5:0x2f8]
---
Predecessors: [0x2bd]
Successors: []
---
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 REVERT
---
0x2f5: V257 = 0x0
0x2f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb9, V69, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V69, V71]

================================

Block 0x2f9
[0x2f9:0x2fc]
---
Predecessors: [0x2b7, 0x2bd]
Successors: [0xb9]
---
0x2f9 JUMPDEST
0x2fa POP
0x2fb POP
0x2fc JUMP
---
0x2f9: JUMPDEST 
0x2fc: JUMP 0xb9
---
Entry stack: [V11, 0xb9, V69, V71]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fd
[0x2fd:0x308]
---
Predecessors: [0x109]
Successors: [0x309, 0x321]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x0
0x300 SLOAD
0x301 DUP2
0x302 EQ
0x303 DUP1
0x304 ISZERO
0x305 PUSH2 0x321
0x308 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V258 = 0x0
0x300: V259 = S[0x0]
0x302: V260 = EQ V79 V259
0x304: V261 = ISZERO V260
0x305: V262 = 0x321
0x308: JUMPI 0x321 V261
---
Entry stack: [V11, 0xb9, V79]
Stack pops: 1
Stack additions: [S0, V260]
Exit stack: [V11, 0xb9, V79, V260]

================================

Block 0x309
[0x309:0x320]
---
Predecessors: [0x2fd]
Successors: [0x321]
---
0x309 POP
0x30a PUSH1 0x1
0x30c SLOAD
0x30d CALLER
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 SWAP1
0x317 DUP2
0x318 AND
0x319 PUSH2 0x100
0x31c SWAP1
0x31d SWAP3
0x31e DIV
0x31f AND
0x320 EQ
---
0x30a: V263 = 0x1
0x30c: V264 = S[0x1]
0x30d: V265 = CALLER
0x30e: V266 = 0x1
0x310: V267 = 0xa0
0x312: V268 = 0x2
0x314: V269 = EXP 0x2 0xa0
0x315: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x319: V272 = 0x100
0x31e: V273 = DIV V264 0x100
0x31f: V274 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0x320: V275 = EQ V274 V271
---
Entry stack: [V11, 0xb9, V79, V260]
Stack pops: 1
Stack additions: [V275]
Exit stack: [V11, 0xb9, V79, V275]

================================

Block 0x321
[0x321:0x326]
---
Predecessors: [0x2fd, 0x309]
Successors: [0x285, 0x327]
---
0x321 JUMPDEST
0x322 ISZERO
0x323 PUSH2 0x285
0x326 JUMPI
---
0x321: JUMPDEST 
0x322: V276 = ISZERO S0
0x323: V277 = 0x285
0x326: JUMPI 0x285 V276
---
Entry stack: [V11, 0xb9, V79, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb9, V79]

================================

Block 0x327
[0x327:0x334]
---
Predecessors: [0x321]
Successors: [0xb9]
---
0x327 PUSH1 0x1
0x329 DUP1
0x32a SLOAD
0x32b PUSH1 0xff
0x32d NOT
0x32e AND
0x32f DUP2
0x330 OR
0x331 SWAP1
0x332 SSTORE
0x333 POP
0x334 JUMP
---
0x327: V278 = 0x1
0x32a: V279 = S[0x1]
0x32b: V280 = 0xff
0x32d: V281 = NOT 0xff
0x32e: V282 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V279
0x330: V283 = OR 0x1 V282
0x332: S[0x1] = V283
0x334: JUMP 0xb9
---
Entry stack: [V11, 0xb9, V79]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x335
[0x335:0x351]
---
Predecessors: [0x11f]
Successors: [0x285, 0x352]
---
0x335 JUMPDEST
0x336 PUSH1 0x1
0x338 SLOAD
0x339 CALLER
0x33a PUSH1 0x1
0x33c PUSH1 0xa0
0x33e PUSH1 0x2
0x340 EXP
0x341 SUB
0x342 SWAP1
0x343 DUP2
0x344 AND
0x345 PUSH2 0x100
0x348 SWAP1
0x349 SWAP3
0x34a DIV
0x34b AND
0x34c EQ
0x34d ISZERO
0x34e PUSH2 0x285
0x351 JUMPI
---
0x335: JUMPDEST 
0x336: V284 = 0x1
0x338: V285 = S[0x1]
0x339: V286 = CALLER
0x33a: V287 = 0x1
0x33c: V288 = 0xa0
0x33e: V289 = 0x2
0x340: V290 = EXP 0x2 0xa0
0x341: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x344: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x345: V293 = 0x100
0x34a: V294 = DIV V285 0x100
0x34b: V295 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V296 = EQ V295 V292
0x34d: V297 = ISZERO V296
0x34e: V298 = 0x285
0x351: JUMPI 0x285 V297
---
Entry stack: [V11, 0xb9, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V93]

================================

Block 0x352
[0x352:0x37d]
---
Predecessors: [0x335]
Successors: [0xb9]
---
0x352 PUSH1 0x2
0x354 DUP1
0x355 SLOAD
0x356 PUSH1 0x1
0x358 PUSH1 0xa0
0x35a PUSH1 0x2
0x35c EXP
0x35d SUB
0x35e DUP4
0x35f AND
0x360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x375 NOT
0x376 SWAP1
0x377 SWAP2
0x378 AND
0x379 OR
0x37a SWAP1
0x37b SSTORE
0x37c POP
0x37d JUMP
---
0x352: V299 = 0x2
0x355: V300 = S[0x2]
0x356: V301 = 0x1
0x358: V302 = 0xa0
0x35a: V303 = 0x2
0x35c: V304 = EXP 0x2 0xa0
0x35d: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V306 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x360: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x375: V308 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x378: V309 = AND V300 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x379: V310 = OR V309 V306
0x37b: S[0x2] = V310
0x37d: JUMP 0xb9
---
Entry stack: [V11, 0xb9, V93]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x37e
[0x37e:0x386]
---
Predecessors: [0x13e]
Successors: [0x146]
---
0x37e JUMPDEST
0x37f PUSH1 0x1
0x381 SLOAD
0x382 PUSH1 0xff
0x384 AND
0x385 DUP2
0x386 JUMP
---
0x37e: JUMPDEST 
0x37f: V311 = 0x1
0x381: V312 = S[0x1]
0x382: V313 = 0xff
0x384: V314 = AND 0xff V312
0x386: JUMP 0x146
---
Entry stack: [V11, 0x146]
Stack pops: 1
Stack additions: [S0, V314]
Exit stack: [V11, 0x146, V314]

================================

Block 0x387
[0x387:0x39a]
---
Predecessors: [0x165]
Successors: [0x16d]
---
0x387 JUMPDEST
0x388 PUSH1 0x1
0x38a SLOAD
0x38b PUSH2 0x100
0x38e SWAP1
0x38f DIV
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 AND
0x399 DUP2
0x39a JUMP
---
0x387: JUMPDEST 
0x388: V315 = 0x1
0x38a: V316 = S[0x1]
0x38b: V317 = 0x100
0x38f: V318 = DIV V316 0x100
0x390: V319 = 0x1
0x392: V320 = 0xa0
0x394: V321 = 0x2
0x396: V322 = EXP 0x2 0xa0
0x397: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x398: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x39a: JUMP 0x16d
---
Entry stack: [V11, 0x16d]
Stack pops: 1
Stack additions: [S0, V324]
Exit stack: [V11, 0x16d, V324]

================================

Block 0x39b
[0x39b:0x3a0]
---
Predecessors: [0x194]
Successors: [0xce]
---
0x39b JUMPDEST
0x39c PUSH1 0x0
0x39e SLOAD
0x39f DUP2
0x3a0 JUMP
---
0x39b: JUMPDEST 
0x39c: V325 = 0x0
0x39e: V326 = S[0x0]
0x3a0: JUMP 0xce
---
Entry stack: [V11, 0xce]
Stack pops: 1
Stack additions: [S0, V326]
Exit stack: [V11, 0xce, V326]

================================

Block 0x3a1
[0x3a1:0x3af]
---
Predecessors: [0x1a7]
Successors: [0x16d]
---
0x3a1 JUMPDEST
0x3a2 PUSH1 0x2
0x3a4 SLOAD
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 PUSH1 0x2
0x3ab EXP
0x3ac SUB
0x3ad AND
0x3ae DUP2
0x3af JUMP
---
0x3a1: JUMPDEST 
0x3a2: V327 = 0x2
0x3a4: V328 = S[0x2]
0x3a5: V329 = 0x1
0x3a7: V330 = 0xa0
0x3a9: V331 = 0x2
0x3ab: V332 = EXP 0x2 0xa0
0x3ac: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ad: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x3af: JUMP 0x16d
---
Entry stack: [V11, 0x16d]
Stack pops: 1
Stack additions: [S0, V334]
Exit stack: [V11, 0x16d, V334]

================================

Block 0x3b0
[0x3b0:0x3c2]
---
Predecessors: [0x1ba]
Successors: [0x3c3]
---
0x3b0 JUMPDEST
0x3b1 PUSH1 0x0
0x3b3 DUP2
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 DUP1
0x3b8 DUP3
0x3b9 DUP1
0x3ba MLOAD
0x3bb SWAP1
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP1
0x3c0 DUP1
0x3c1 DUP4
0x3c2 DUP4
---
0x3b0: JUMPDEST 
0x3b1: V335 = 0x0
0x3b4: V336 = 0x40
0x3b6: V337 = M[0x40]
0x3ba: V338 = M[V159]
0x3bc: V339 = 0x20
0x3be: V340 = ADD 0x20 V159
---
Entry stack: [V11, 0xce, V159]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V337, V337, V340, V338, V338, V337, V340]
Exit stack: [V11, 0xce, V159, 0x0, V159, V337, V337, V340, V338, V338, V337, V340]

================================

Block 0x3c3
[0x3c3:0x3cb]
---
Predecessors: [0x3b0, 0x3cc]
Successors: [0x3cc, 0x3e2]
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x20
0x3c6 DUP4
0x3c7 LT
0x3c8 PUSH2 0x3e2
0x3cb JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V341 = 0x20
0x3c7: V342 = LT S2 0x20
0x3c8: V343 = 0x3e2
0x3cb: JUMPI 0x3e2 V342
---
Entry stack: [V11, 0xce, V159, 0x0, V159, V337, V337, V340, V338, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xce, V159, 0x0, V159, V337, V337, V340, V338, S2, S1, S0]

================================

Block 0x3cc
[0x3cc:0x3e1]
---
Predecessors: [0x3c3]
Successors: [0x3c3]
---
0x3cc DUP1
0x3cd MLOAD
0x3ce DUP3
0x3cf MSTORE
0x3d0 PUSH1 0x1f
0x3d2 NOT
0x3d3 SWAP1
0x3d4 SWAP3
0x3d5 ADD
0x3d6 SWAP2
0x3d7 PUSH1 0x20
0x3d9 SWAP2
0x3da DUP3
0x3db ADD
0x3dc SWAP2
0x3dd ADD
0x3de PUSH2 0x3c3
0x3e1 JUMP
---
0x3cd: V344 = M[S0]
0x3cf: M[S1] = V344
0x3d0: V345 = 0x1f
0x3d2: V346 = NOT 0x1f
0x3d5: V347 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3d7: V348 = 0x20
0x3db: V349 = ADD 0x20 S1
0x3dd: V350 = ADD 0x20 S0
0x3de: V351 = 0x3c3
0x3e1: JUMP 0x3c3
---
Entry stack: [V11, 0xce, V159, 0x0, V159, V337, V337, V340, V338, S2, S1, S0]
Stack pops: 3
Stack additions: [V347, V349, V350]
Exit stack: [V11, 0xce, V159, 0x0, V159, V337, V337, V340, V338, V347, V349, V350]

================================

Block 0x3e2
[0x3e2:0x414]
---
Predecessors: [0x3c3]
Successors: [0xce]
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x1
0x3e5 DUP4
0x3e6 PUSH1 0x20
0x3e8 SUB
0x3e9 PUSH2 0x100
0x3ec EXP
0x3ed SUB
0x3ee DUP1
0x3ef NOT
0x3f0 DUP3
0x3f1 MLOAD
0x3f2 AND
0x3f3 DUP2
0x3f4 DUP5
0x3f5 MLOAD
0x3f6 AND
0x3f7 OR
0x3f8 SWAP1
0x3f9 SWAP3
0x3fa MSTORE
0x3fb POP
0x3fc POP
0x3fd POP
0x3fe SWAP2
0x3ff SWAP1
0x400 SWAP2
0x401 ADD
0x402 SWAP3
0x403 POP
0x404 PUSH1 0x40
0x406 SWAP2
0x407 POP
0x408 POP
0x409 MLOAD
0x40a DUP1
0x40b SWAP2
0x40c SUB
0x40d SWAP1
0x40e SHA3
0x40f SWAP1
0x410 POP
0x411 SWAP2
0x412 SWAP1
0x413 POP
0x414 JUMP
---
0x3e2: JUMPDEST 
0x3e3: V352 = 0x1
0x3e6: V353 = 0x20
0x3e8: V354 = SUB 0x20 S2
0x3e9: V355 = 0x100
0x3ec: V356 = EXP 0x100 V354
0x3ed: V357 = SUB V356 0x1
0x3ef: V358 = NOT V357
0x3f1: V359 = M[S0]
0x3f2: V360 = AND V359 V358
0x3f5: V361 = M[S1]
0x3f6: V362 = AND V361 V357
0x3f7: V363 = OR V362 V360
0x3fa: M[S1] = V363
0x401: V364 = ADD V338 V337
0x404: V365 = 0x40
0x409: V366 = M[0x40]
0x40c: V367 = SUB V364 V366
0x40e: V368 = SHA3 V366 V367
0x414: JUMP 0xce
---
Entry stack: [V11, 0xce, V159, 0x0, V159, V337, V337, V340, V338, S2, S1, S0]
Stack pops: 11
Stack additions: [V368]
Exit stack: [V11, V368]

================================

Block 0x415
[0x415:0x42d]
---
Predecessors: [0x200]
Successors: [0x42e, 0x434]
---
0x415 JUMPDEST
0x416 PUSH1 0x2
0x418 SLOAD
0x419 CALLER
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 SWAP1
0x423 DUP2
0x424 AND
0x425 SWAP2
0x426 AND
0x427 EQ
0x428 DUP1
0x429 ISZERO
0x42a PUSH2 0x434
0x42d JUMPI
---
0x415: JUMPDEST 
0x416: V369 = 0x2
0x418: V370 = S[0x2]
0x419: V371 = CALLER
0x41a: V372 = 0x1
0x41c: V373 = 0xa0
0x41e: V374 = 0x2
0x420: V375 = EXP 0x2 0xa0
0x421: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x426: V378 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x427: V379 = EQ V378 V377
0x429: V380 = ISZERO V379
0x42a: V381 = 0x434
0x42d: JUMPI 0x434 V380
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: [V379]
Exit stack: [V11, 0xb9, V379]

================================

Block 0x42e
[0x42e:0x433]
---
Predecessors: [0x415]
Successors: [0x434]
---
0x42e POP
0x42f PUSH1 0x3
0x431 SLOAD
0x432 TIMESTAMP
0x433 GT
---
0x42f: V382 = 0x3
0x431: V383 = S[0x3]
0x432: V384 = TIMESTAMP
0x433: V385 = GT V384 V383
---
Entry stack: [V11, 0xb9, V379]
Stack pops: 1
Stack additions: [V385]
Exit stack: [V11, 0xb9, V385]

================================

Block 0x434
[0x434:0x439]
---
Predecessors: [0x415, 0x42e]
Successors: [0x43a, 0x476]
---
0x434 JUMPDEST
0x435 ISZERO
0x436 PUSH2 0x476
0x439 JUMPI
---
0x434: JUMPDEST 
0x435: V386 = ISZERO S0
0x436: V387 = 0x476
0x439: JUMPI 0x476 V386
---
Entry stack: [V11, 0xb9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x43a
[0x43a:0x471]
---
Predecessors: [0x434]
Successors: [0x472, 0x476]
---
0x43a CALLER
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 AND
0x444 PUSH2 0x8fc
0x447 ADDRESS
0x448 PUSH1 0x1
0x44a PUSH1 0xa0
0x44c PUSH1 0x2
0x44e EXP
0x44f SUB
0x450 AND
0x451 BALANCE
0x452 SWAP1
0x453 DUP2
0x454 ISZERO
0x455 MUL
0x456 SWAP1
0x457 PUSH1 0x40
0x459 MLOAD
0x45a PUSH1 0x0
0x45c PUSH1 0x40
0x45e MLOAD
0x45f DUP1
0x460 DUP4
0x461 SUB
0x462 DUP2
0x463 DUP6
0x464 DUP9
0x465 DUP9
0x466 CALL
0x467 SWAP4
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c ISZERO
0x46d ISZERO
0x46e PUSH2 0x476
0x471 JUMPI
---
0x43a: V388 = CALLER
0x43b: V389 = 0x1
0x43d: V390 = 0xa0
0x43f: V391 = 0x2
0x441: V392 = EXP 0x2 0xa0
0x442: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x443: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x444: V395 = 0x8fc
0x447: V396 = ADDRESS
0x448: V397 = 0x1
0x44a: V398 = 0xa0
0x44c: V399 = 0x2
0x44e: V400 = EXP 0x2 0xa0
0x44f: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x450: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x451: V403 = BALANCE V402
0x454: V404 = ISZERO V403
0x455: V405 = MUL V404 0x8fc
0x457: V406 = 0x40
0x459: V407 = M[0x40]
0x45a: V408 = 0x0
0x45c: V409 = 0x40
0x45e: V410 = M[0x40]
0x461: V411 = SUB V407 V410
0x466: V412 = CALL V405 V394 V403 V410 V411 V410 0x0
0x46c: V413 = ISZERO V412
0x46d: V414 = ISZERO V413
0x46e: V415 = 0x476
0x471: JUMPI 0x476 V414
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x472
[0x472:0x475]
---
Predecessors: [0x43a]
Successors: []
---
0x472 PUSH1 0x0
0x474 DUP1
0x475 REVERT
---
0x472: V416 = 0x0
0x475: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x476
[0x476:0x477]
---
Predecessors: [0x434, 0x43a]
Successors: [0xb9]
---
0x476 JUMPDEST
0x477 JUMP
---
0x476: JUMPDEST 
0x477: JUMP 0xb9
---
Entry stack: [V11, 0xb9]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x478
[0x478:0x494]
---
Predecessors: [0x213]
Successors: [0x285, 0x495]
---
0x478 JUMPDEST
0x479 PUSH1 0x1
0x47b SLOAD
0x47c CALLER
0x47d PUSH1 0x1
0x47f PUSH1 0xa0
0x481 PUSH1 0x2
0x483 EXP
0x484 SUB
0x485 SWAP1
0x486 DUP2
0x487 AND
0x488 PUSH2 0x100
0x48b SWAP1
0x48c SWAP3
0x48d DIV
0x48e AND
0x48f EQ
0x490 ISZERO
0x491 PUSH2 0x285
0x494 JUMPI
---
0x478: JUMPDEST 
0x479: V417 = 0x1
0x47b: V418 = S[0x1]
0x47c: V419 = CALLER
0x47d: V420 = 0x1
0x47f: V421 = 0xa0
0x481: V422 = 0x2
0x483: V423 = EXP 0x2 0xa0
0x484: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x487: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x488: V426 = 0x100
0x48d: V427 = DIV V418 0x100
0x48e: V428 = AND V427 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V429 = EQ V428 V425
0x490: V430 = ISZERO V429
0x491: V431 = 0x285
0x494: JUMPI 0x285 V430
---
Entry stack: [V11, 0xb9, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V173]

================================

Block 0x495
[0x495:0x498]
---
Predecessors: [0x478]
Successors: [0xb9]
---
0x495 PUSH1 0x3
0x497 SSTORE
0x498 JUMP
---
0x495: V432 = 0x3
0x497: S[0x3] = V173
0x498: JUMP 0xb9
---
Entry stack: [V11, 0xb9, V173]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x499
[0x499:0x4a8]
---
Predecessors: []
Successors: [0x4a9]
Has unresolved jump.
---
0x499 STOP
0x49a LOG1
0x49b PUSH6 0x627a7a723058
0x4a2 SHA3
0x4a3 EXTCODESIZE
0x4a4 MISSING 0xa9
0x4a5 MISSING 0xb2
0x4a6 SHA3
0x4a7 MISSING 0xa7
0x4a8 JUMPI
---
0x499: STOP 
0x49a: LOG S0 S1 S2
0x49b: V433 = 0x627a7a723058
0x4a2: V434 = SHA3 0x627a7a723058 S3
0x4a3: V435 = EXTCODESIZE V434
0x4a4: MISSING 0xa9
0x4a5: MISSING 0xb2
0x4a6: V436 = SHA3 S0 S1
0x4a7: MISSING 0xa7
0x4a8: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V435, V436]
Exit stack: []

================================

Block 0x4a9
[0x4a9:0x4c8]
---
Predecessors: [0x499]
Successors: []
---
0x4a9 MISSING 0xbb
0x4aa MISSING 0x5d
0x4ab PUSH29 0xe0376472b63186f3dadd0c2cf7a0431a6f8b31c31809b70029
---
0x4a9: MISSING 0xbb
0x4aa: MISSING 0x5d
0x4ab: V437 = 0xe0376472b63186f3dadd0c2cf7a0431a6f8b31c31809b70029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xe0376472b63186f3dadd0c2cf7a0431a6f8b31c31809b70029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa483421
Entry block: 0xbb
Exit block: 0xce
Body: 0xbb, 0xc2, 0xc6, 0xce, 0x21e

Function 1:
Public function signature: 0xa6fbb05
Entry block: 0xe0
Exit block: 0xb9
Body: 0xb9, 0xe0, 0x224, 0x232, 0x23e, 0x244, 0x249, 0x24f, 0x285

Function 2:
Public function signature: 0x181ffc5f
Entry block: 0xeb
Exit block: 0xb9
Body: 0xb9, 0xeb, 0x288, 0x2b1, 0x2b7, 0x2bd, 0x2f5, 0x2f9

Function 3:
Public function signature: 0x31fd725a
Entry block: 0xfe
Exit block: 0xb9
Body: 0xb9, 0xfe, 0x105, 0x109, 0x285, 0x2fd, 0x309, 0x321, 0x327

Function 4:
Public function signature: 0x410c8005
Entry block: 0x114
Exit block: 0xb9
Body: 0xb9, 0x114, 0x11b, 0x11f, 0x285, 0x335, 0x352

Function 5:
Public function signature: 0x597e1fb5
Entry block: 0x133
Exit block: 0x146
Body: 0x133, 0x13a, 0x13e, 0x146, 0x37e

Function 6:
Public function signature: 0x67e404ce
Entry block: 0x15a
Exit block: 0x16d
Body: 0x15a, 0x161, 0x165, 0x16d, 0x387

Function 7:
Public function signature: 0x87f24484
Entry block: 0x189
Exit block: 0xce
Body: 0xce, 0x189, 0x190, 0x194, 0x39b

Function 8:
Public function signature: 0xa4bbfb74
Entry block: 0x19c
Exit block: 0x16d
Body: 0x16d, 0x19c, 0x1a3, 0x1a7, 0x3a1

Function 9:
Public function signature: 0xb456ecc5
Entry block: 0x1af
Exit block: 0xce
Body: 0xce, 0x1af, 0x1b6, 0x1ba, 0x3b0, 0x3c3, 0x3cc, 0x3e2

Function 10:
Public function signature: 0xbea948c8
Entry block: 0x200
Exit block: 0x472
Body: 0xb9, 0x200, 0x415, 0x42e, 0x434, 0x43a, 0x472, 0x476

Function 11:
Public function signature: 0xdac47a71
Entry block: 0x208
Exit block: 0xb9
Body: 0xb9, 0x208, 0x20f, 0x213, 0x285, 0x478, 0x495

Function 12:
Public fallback function
Entry block: 0xb9
Exit block: 0xb9
Body: 0xb9

