Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x1d4d691d
0x34 EQ
0x35 PUSH2 0x53
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x1d4d691d
0x34: V9 = EQ 0x1d4d691d V7
0x35: V10 = 0x53
0x38: JUMPI 0x53 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x128]
---
0x39 DUP1
0x3a PUSH4 0x20158c44
0x3f EQ
0x40 PUSH2 0x128
0x43 JUMPI
---
0x3a: V11 = 0x20158c44
0x3f: V12 = EQ 0x20158c44 V7
0x40: V13 = 0x128
0x43: JUMPI 0x128 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x167]
---
0x44 DUP1
0x45 PUSH4 0x66a26419
0x4a EQ
0x4b PUSH2 0x167
0x4e JUMPI
---
0x45: V14 = 0x66a26419
0x4a: V15 = EQ 0x66a26419 V7
0x4b: V16 = 0x167
0x4e: JUMPI 0x167 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x52]
---
Predecessors: [0x44]
Successors: []
---
0x4f PUSH1 0x0
0x51 DUP1
0x52 REVERT
---
0x4f: V17 = 0x0
0x52: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x53
[0x53:0x125]
---
Predecessors: [0x0]
Successors: [0x247]
---
0x53 JUMPDEST
0x54 PUSH2 0x126
0x57 PUSH1 0x4
0x59 DUP1
0x5a DUP1
0x5b CALLDATALOAD
0x5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71 AND
0x72 SWAP1
0x73 PUSH1 0x20
0x75 ADD
0x76 SWAP1
0x77 SWAP2
0x78 SWAP1
0x79 DUP1
0x7a CALLDATALOAD
0x7b SWAP1
0x7c PUSH1 0x20
0x7e ADD
0x7f SWAP1
0x80 SWAP2
0x81 SWAP1
0x82 DUP1
0x83 CALLDATALOAD
0x84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99 AND
0x9a SWAP1
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP1
0x9f SWAP2
0xa0 SWAP1
0xa1 DUP1
0xa2 CALLDATALOAD
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 SWAP1
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe SWAP2
0xbf SWAP1
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 SWAP1
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP1
0xc7 SWAP2
0xc8 SWAP1
0xc9 DUP1
0xca CALLDATALOAD
0xcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0 AND
0xe1 SWAP1
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 SWAP1
0xe6 SWAP2
0xe7 SWAP1
0xe8 DUP1
0xe9 CALLDATALOAD
0xea SWAP1
0xeb PUSH1 0x20
0xed ADD
0xee SWAP1
0xef SWAP2
0xf0 SWAP1
0xf1 DUP1
0xf2 CALLDATALOAD
0xf3 SWAP1
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP1
0xf8 SWAP2
0xf9 SWAP1
0xfa DUP1
0xfb CALLDATALOAD
0xfc PUSH1 0xff
0xfe AND
0xff SWAP1
0x100 PUSH1 0x20
0x102 ADD
0x103 SWAP1
0x104 SWAP2
0x105 SWAP1
0x106 DUP1
0x107 CALLDATALOAD
0x108 PUSH1 0x0
0x10a NOT
0x10b AND
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 SWAP2
0x112 SWAP1
0x113 DUP1
0x114 CALLDATALOAD
0x115 PUSH1 0x0
0x117 NOT
0x118 AND
0x119 SWAP1
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP1
0x11e SWAP2
0x11f SWAP1
0x120 POP
0x121 POP
0x122 PUSH2 0x247
0x125 JUMP
---
0x53: JUMPDEST 
0x54: V18 = 0x126
0x57: V19 = 0x4
0x5b: V20 = CALLDATALOAD 0x4
0x5c: V21 = 0xffffffffffffffffffffffffffffffffffffffff
0x71: V22 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x73: V23 = 0x20
0x75: V24 = ADD 0x20 0x4
0x7a: V25 = CALLDATALOAD 0x24
0x7c: V26 = 0x20
0x7e: V27 = ADD 0x20 0x24
0x83: V28 = CALLDATALOAD 0x44
0x84: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x99: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x9b: V31 = 0x20
0x9d: V32 = ADD 0x20 0x44
0xa2: V33 = CALLDATALOAD 0x64
0xa3: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xba: V36 = 0x20
0xbc: V37 = ADD 0x20 0x64
0xc1: V38 = CALLDATALOAD 0x84
0xc3: V39 = 0x20
0xc5: V40 = ADD 0x20 0x84
0xca: V41 = CALLDATALOAD 0xa4
0xcb: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xe2: V44 = 0x20
0xe4: V45 = ADD 0x20 0xa4
0xe9: V46 = CALLDATALOAD 0xc4
0xeb: V47 = 0x20
0xed: V48 = ADD 0x20 0xc4
0xf2: V49 = CALLDATALOAD 0xe4
0xf4: V50 = 0x20
0xf6: V51 = ADD 0x20 0xe4
0xfb: V52 = CALLDATALOAD 0x104
0xfc: V53 = 0xff
0xfe: V54 = AND 0xff V52
0x100: V55 = 0x20
0x102: V56 = ADD 0x20 0x104
0x107: V57 = CALLDATALOAD 0x124
0x108: V58 = 0x0
0x10a: V59 = NOT 0x0
0x10b: V60 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V57
0x10d: V61 = 0x20
0x10f: V62 = ADD 0x20 0x124
0x114: V63 = CALLDATALOAD 0x144
0x115: V64 = 0x0
0x117: V65 = NOT 0x0
0x118: V66 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V63
0x11a: V67 = 0x20
0x11c: V68 = ADD 0x20 0x144
0x122: V69 = 0x247
0x125: JUMP 0x247
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66]
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66]

================================

Block 0x126
[0x126:0x127]
---
Predecessors: [0xbef, 0xe6f]
Successors: []
---
0x126 JUMPDEST
0x127 STOP
---
0x126: JUMPDEST 
0x127: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x39]
Successors: [0x12f, 0x133]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x128: JUMPDEST 
0x129: V70 = CALLVALUE
0x12a: V71 = ISZERO V70
0x12b: V72 = 0x133
0x12e: JUMPI 0x133 V71
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x128]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V73 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x133
[0x133:0x14c]
---
Predecessors: [0x128]
Successors: [0xbfd]
---
0x133 JUMPDEST
0x134 PUSH2 0x14d
0x137 PUSH1 0x4
0x139 DUP1
0x13a DUP1
0x13b CALLDATALOAD
0x13c PUSH1 0x0
0x13e NOT
0x13f AND
0x140 SWAP1
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP1
0x145 SWAP2
0x146 SWAP1
0x147 POP
0x148 POP
0x149 PUSH2 0xbfd
0x14c JUMP
---
0x133: JUMPDEST 
0x134: V74 = 0x14d
0x137: V75 = 0x4
0x13b: V76 = CALLDATALOAD 0x4
0x13c: V77 = 0x0
0x13e: V78 = NOT 0x0
0x13f: V79 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V76
0x141: V80 = 0x20
0x143: V81 = ADD 0x20 0x4
0x149: V82 = 0xbfd
0x14c: JUMP 0xbfd
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x14d, V79]
Exit stack: [V7, 0x14d, V79]

================================

Block 0x14d
[0x14d:0x166]
---
Predecessors: [0xbfd]
Successors: []
---
0x14d JUMPDEST
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 DUP3
0x153 ISZERO
0x154 ISZERO
0x155 ISZERO
0x156 ISZERO
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c SWAP2
0x15d POP
0x15e POP
0x15f PUSH1 0x40
0x161 MLOAD
0x162 DUP1
0x163 SWAP2
0x164 SUB
0x165 SWAP1
0x166 RETURN
---
0x14d: JUMPDEST 
0x14e: V83 = 0x40
0x150: V84 = M[0x40]
0x153: V85 = ISZERO V626
0x154: V86 = ISZERO V85
0x155: V87 = ISZERO V86
0x156: V88 = ISZERO V87
0x158: M[V84] = V88
0x159: V89 = 0x20
0x15b: V90 = ADD 0x20 V84
0x15f: V91 = 0x40
0x161: V92 = M[0x40]
0x164: V93 = SUB V90 V92
0x166: RETURN V92 V93
---
Entry stack: [V7, 0x14d, V626]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x14d]

================================

Block 0x167
[0x167:0x16d]
---
Predecessors: [0x44]
Successors: [0x16e, 0x172]
---
0x167 JUMPDEST
0x168 CALLVALUE
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x167: JUMPDEST 
0x168: V94 = CALLVALUE
0x169: V95 = ISZERO V94
0x16a: V96 = 0x172
0x16d: JUMPI 0x172 V95
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x167]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V97 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x172
[0x172:0x244]
---
Predecessors: [0x167]
Successors: [0xc1d]
---
0x172 JUMPDEST
0x173 PUSH2 0x245
0x176 PUSH1 0x4
0x178 DUP1
0x179 DUP1
0x17a CALLDATALOAD
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 AND
0x191 SWAP1
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP1
0x196 SWAP2
0x197 SWAP1
0x198 DUP1
0x199 CALLDATALOAD
0x19a SWAP1
0x19b PUSH1 0x20
0x19d ADD
0x19e SWAP1
0x19f SWAP2
0x1a0 SWAP1
0x1a1 DUP1
0x1a2 CALLDATALOAD
0x1a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b8 AND
0x1b9 SWAP1
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd SWAP1
0x1be SWAP2
0x1bf SWAP1
0x1c0 DUP1
0x1c1 CALLDATALOAD
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 SWAP1
0x1d9 PUSH1 0x20
0x1db ADD
0x1dc SWAP1
0x1dd SWAP2
0x1de SWAP1
0x1df DUP1
0x1e0 CALLDATALOAD
0x1e1 SWAP1
0x1e2 PUSH1 0x20
0x1e4 ADD
0x1e5 SWAP1
0x1e6 SWAP2
0x1e7 SWAP1
0x1e8 DUP1
0x1e9 CALLDATALOAD
0x1ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ff AND
0x200 SWAP1
0x201 PUSH1 0x20
0x203 ADD
0x204 SWAP1
0x205 SWAP2
0x206 SWAP1
0x207 DUP1
0x208 CALLDATALOAD
0x209 SWAP1
0x20a PUSH1 0x20
0x20c ADD
0x20d SWAP1
0x20e SWAP2
0x20f SWAP1
0x210 DUP1
0x211 CALLDATALOAD
0x212 SWAP1
0x213 PUSH1 0x20
0x215 ADD
0x216 SWAP1
0x217 SWAP2
0x218 SWAP1
0x219 DUP1
0x21a CALLDATALOAD
0x21b PUSH1 0xff
0x21d AND
0x21e SWAP1
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP1
0x223 SWAP2
0x224 SWAP1
0x225 DUP1
0x226 CALLDATALOAD
0x227 PUSH1 0x0
0x229 NOT
0x22a AND
0x22b SWAP1
0x22c PUSH1 0x20
0x22e ADD
0x22f SWAP1
0x230 SWAP2
0x231 SWAP1
0x232 DUP1
0x233 CALLDATALOAD
0x234 PUSH1 0x0
0x236 NOT
0x237 AND
0x238 SWAP1
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP1
0x23d SWAP2
0x23e SWAP1
0x23f POP
0x240 POP
0x241 PUSH2 0xc1d
0x244 JUMP
---
0x172: JUMPDEST 
0x173: V98 = 0x245
0x176: V99 = 0x4
0x17a: V100 = CALLDATALOAD 0x4
0x17b: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x192: V103 = 0x20
0x194: V104 = ADD 0x20 0x4
0x199: V105 = CALLDATALOAD 0x24
0x19b: V106 = 0x20
0x19d: V107 = ADD 0x20 0x24
0x1a2: V108 = CALLDATALOAD 0x44
0x1a3: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1ba: V111 = 0x20
0x1bc: V112 = ADD 0x20 0x44
0x1c1: V113 = CALLDATALOAD 0x64
0x1c2: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1d9: V116 = 0x20
0x1db: V117 = ADD 0x20 0x64
0x1e0: V118 = CALLDATALOAD 0x84
0x1e2: V119 = 0x20
0x1e4: V120 = ADD 0x20 0x84
0x1e9: V121 = CALLDATALOAD 0xa4
0x1ea: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x201: V124 = 0x20
0x203: V125 = ADD 0x20 0xa4
0x208: V126 = CALLDATALOAD 0xc4
0x20a: V127 = 0x20
0x20c: V128 = ADD 0x20 0xc4
0x211: V129 = CALLDATALOAD 0xe4
0x213: V130 = 0x20
0x215: V131 = ADD 0x20 0xe4
0x21a: V132 = CALLDATALOAD 0x104
0x21b: V133 = 0xff
0x21d: V134 = AND 0xff V132
0x21f: V135 = 0x20
0x221: V136 = ADD 0x20 0x104
0x226: V137 = CALLDATALOAD 0x124
0x227: V138 = 0x0
0x229: V139 = NOT 0x0
0x22a: V140 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V137
0x22c: V141 = 0x20
0x22e: V142 = ADD 0x20 0x124
0x233: V143 = CALLDATALOAD 0x144
0x234: V144 = 0x0
0x236: V145 = NOT 0x0
0x237: V146 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V143
0x239: V147 = 0x20
0x23b: V148 = ADD 0x20 0x144
0x241: V149 = 0xc1d
0x244: JUMP 0xc1d
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x245, V102, V105, V110, V115, V118, V123, V126, V129, V134, V140, V146]
Exit stack: [V7, 0x245, V102, V105, V110, V115, V118, V123, V126, V129, V134, V140, V146]

================================

Block 0x245
[0x245:0x246]
---
Predecessors: [0xbef, 0xe6f]
Successors: []
---
0x245 JUMPDEST
0x246 STOP
---
0x245: JUMPDEST 
0x246: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x247
[0x247:0x27d]
---
Predecessors: [0x53]
Successors: [0x27e, 0x393]
---
0x247 JUMPDEST
0x248 PUSH1 0x0
0x24a DUP9
0x24b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x260 AND
0x261 DUP13
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 AND
0x278 EQ
0x279 ISZERO
0x27a PUSH2 0x393
0x27d JUMPI
---
0x247: JUMPDEST 
0x248: V150 = 0x0
0x24b: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x260: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x262: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x278: V155 = EQ V154 V152
0x279: V156 = ISZERO V155
0x27a: V157 = 0x393
0x27d: JUMPI 0x393 V156
---
Entry stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]

================================

Block 0x27e
[0x27e:0x2b8]
---
Predecessors: [0x247]
Successors: [0x2b9, 0x2bd]
---
0x27e CALLER
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 PUSH2 0x8fc
0x298 CALLVALUE
0x299 SWAP1
0x29a DUP2
0x29b ISZERO
0x29c MUL
0x29d SWAP1
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 PUSH1 0x0
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 DUP1
0x2a7 DUP4
0x2a8 SUB
0x2a9 DUP2
0x2aa DUP6
0x2ab DUP9
0x2ac DUP9
0x2ad CALL
0x2ae SWAP4
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 ISZERO
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x27e: V158 = CALLER
0x27f: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x295: V161 = 0x8fc
0x298: V162 = CALLVALUE
0x29b: V163 = ISZERO V162
0x29c: V164 = MUL V163 0x8fc
0x29e: V165 = 0x40
0x2a0: V166 = M[0x40]
0x2a1: V167 = 0x0
0x2a3: V168 = 0x40
0x2a5: V169 = M[0x40]
0x2a8: V170 = SUB V166 V169
0x2ad: V171 = CALL V164 V160 V162 V169 V170 V169 0x0
0x2b3: V172 = ISZERO V171
0x2b4: V173 = ISZERO V172
0x2b5: V174 = 0x2bd
0x2b8: JUMPI 0x2bd V173
---
Entry stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x27e]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V175 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]

================================

Block 0x2bd
[0x2bd:0x392]
---
Predecessors: [0x27e]
Successors: [0xbef]
---
0x2bd JUMPDEST
0x2be DUP7
0x2bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d4 AND
0x2d5 DUP11
0x2d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2eb AND
0x2ec DUP14
0x2ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x302 AND
0x303 PUSH32 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x324 PUSH1 0x1
0x326 DUP16
0x327 DUP15
0x328 DUP15
0x329 DUP14
0x32a DUP14
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f DUP8
0x330 DUP2
0x331 MSTORE
0x332 PUSH1 0x20
0x334 ADD
0x335 DUP7
0x336 DUP2
0x337 MSTORE
0x338 PUSH1 0x20
0x33a ADD
0x33b DUP6
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x20
0x36c ADD
0x36d DUP5
0x36e DUP2
0x36f MSTORE
0x370 PUSH1 0x20
0x372 ADD
0x373 DUP4
0x374 DUP2
0x375 MSTORE
0x376 PUSH1 0x20
0x378 ADD
0x379 DUP3
0x37a DUP2
0x37b MSTORE
0x37c PUSH1 0x20
0x37e ADD
0x37f SWAP7
0x380 POP
0x381 POP
0x382 POP
0x383 POP
0x384 POP
0x385 POP
0x386 POP
0x387 PUSH1 0x40
0x389 MLOAD
0x38a DUP1
0x38b SWAP2
0x38c SUB
0x38d SWAP1
0x38e LOG4
0x38f PUSH2 0xbef
0x392 JUMP
---
0x2bd: JUMPDEST 
0x2bf: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x2d6: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x2ed: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x302: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x303: V182 = 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x324: V183 = 0x1
0x32b: V184 = 0x40
0x32d: V185 = M[0x40]
0x331: M[V185] = 0x1
0x332: V186 = 0x20
0x334: V187 = ADD 0x20 V185
0x337: M[V187] = V25
0x338: V188 = 0x20
0x33a: V189 = ADD 0x20 V187
0x33c: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x352: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x369: M[V189] = V193
0x36a: V194 = 0x20
0x36c: V195 = ADD 0x20 V189
0x36f: M[V195] = V38
0x370: V196 = 0x20
0x372: V197 = ADD 0x20 V195
0x375: M[V197] = V46
0x376: V198 = 0x20
0x378: V199 = ADD 0x20 V197
0x37b: M[V199] = V49
0x37c: V200 = 0x20
0x37e: V201 = ADD 0x20 V199
0x387: V202 = 0x40
0x389: V203 = M[0x40]
0x38c: V204 = SUB V201 V203
0x38e: LOG V203 V204 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a V181 V179 V177
0x38f: V205 = 0xbef
0x392: JUMP 0xbef
---
Entry stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]

================================

Block 0x393
[0x393:0x39b]
---
Predecessors: [0x247]
Successors: [0x39c, 0x4b1]
---
0x393 JUMPDEST
0x394 TIMESTAMP
0x395 DUP7
0x396 LT
0x397 ISZERO
0x398 PUSH2 0x4b1
0x39b JUMPI
---
0x393: JUMPDEST 
0x394: V206 = TIMESTAMP
0x396: V207 = LT V46 V206
0x397: V208 = ISZERO V207
0x398: V209 = 0x4b1
0x39b: JUMPI 0x4b1 V208
---
Entry stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]

================================

Block 0x39c
[0x39c:0x3d6]
---
Predecessors: [0x393]
Successors: [0x3d7, 0x3db]
---
0x39c CALLER
0x39d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b2 AND
0x3b3 PUSH2 0x8fc
0x3b6 CALLVALUE
0x3b7 SWAP1
0x3b8 DUP2
0x3b9 ISZERO
0x3ba MUL
0x3bb SWAP1
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf PUSH1 0x0
0x3c1 PUSH1 0x40
0x3c3 MLOAD
0x3c4 DUP1
0x3c5 DUP4
0x3c6 SUB
0x3c7 DUP2
0x3c8 DUP6
0x3c9 DUP9
0x3ca DUP9
0x3cb CALL
0x3cc SWAP4
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 ISZERO
0x3d2 ISZERO
0x3d3 PUSH2 0x3db
0x3d6 JUMPI
---
0x39c: V210 = CALLER
0x39d: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x3b3: V213 = 0x8fc
0x3b6: V214 = CALLVALUE
0x3b9: V215 = ISZERO V214
0x3ba: V216 = MUL V215 0x8fc
0x3bc: V217 = 0x40
0x3be: V218 = M[0x40]
0x3bf: V219 = 0x0
0x3c1: V220 = 0x40
0x3c3: V221 = M[0x40]
0x3c6: V222 = SUB V218 V221
0x3cb: V223 = CALL V216 V212 V214 V221 V222 V221 0x0
0x3d1: V224 = ISZERO V223
0x3d2: V225 = ISZERO V224
0x3d3: V226 = 0x3db
0x3d6: JUMPI 0x3db V225
---
Entry stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]

================================

Block 0x3d7
[0x3d7:0x3da]
---
Predecessors: [0x39c]
Successors: []
---
0x3d7 PUSH1 0x0
0x3d9 DUP1
0x3da REVERT
---
0x3d7: V227 = 0x0
0x3da: REVERT 0x0 0x0
---
Entry stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]

================================

Block 0x3db
[0x3db:0x4b0]
---
Predecessors: [0x39c]
Successors: [0xbef]
---
0x3db JUMPDEST
0x3dc DUP7
0x3dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f2 AND
0x3f3 DUP11
0x3f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x409 AND
0x40a DUP14
0x40b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x420 AND
0x421 PUSH32 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x442 PUSH1 0x2
0x444 DUP16
0x445 DUP15
0x446 DUP15
0x447 DUP14
0x448 DUP14
0x449 PUSH1 0x40
0x44b MLOAD
0x44c DUP1
0x44d DUP8
0x44e DUP2
0x44f MSTORE
0x450 PUSH1 0x20
0x452 ADD
0x453 DUP7
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 DUP6
0x45a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46f AND
0x470 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x485 AND
0x486 DUP2
0x487 MSTORE
0x488 PUSH1 0x20
0x48a ADD
0x48b DUP5
0x48c DUP2
0x48d MSTORE
0x48e PUSH1 0x20
0x490 ADD
0x491 DUP4
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x20
0x496 ADD
0x497 DUP3
0x498 DUP2
0x499 MSTORE
0x49a PUSH1 0x20
0x49c ADD
0x49d SWAP7
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 POP
0x4a2 POP
0x4a3 POP
0x4a4 POP
0x4a5 PUSH1 0x40
0x4a7 MLOAD
0x4a8 DUP1
0x4a9 SWAP2
0x4aa SUB
0x4ab SWAP1
0x4ac LOG4
0x4ad PUSH2 0xbef
0x4b0 JUMP
---
0x3db: JUMPDEST 
0x3dd: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f2: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x3f4: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x409: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x40b: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x420: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x421: V234 = 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x442: V235 = 0x2
0x449: V236 = 0x40
0x44b: V237 = M[0x40]
0x44f: M[V237] = 0x2
0x450: V238 = 0x20
0x452: V239 = ADD 0x20 V237
0x455: M[V239] = V25
0x456: V240 = 0x20
0x458: V241 = ADD 0x20 V239
0x45a: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x470: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x485: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x487: M[V241] = V245
0x488: V246 = 0x20
0x48a: V247 = ADD 0x20 V241
0x48d: M[V247] = V38
0x48e: V248 = 0x20
0x490: V249 = ADD 0x20 V247
0x493: M[V249] = V46
0x494: V250 = 0x20
0x496: V251 = ADD 0x20 V249
0x499: M[V251] = V49
0x49a: V252 = 0x20
0x49c: V253 = ADD 0x20 V251
0x4a5: V254 = 0x40
0x4a7: V255 = M[0x40]
0x4aa: V256 = SUB V253 V255
0x4ac: LOG V255 V256 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a V233 V231 V229
0x4ad: V257 = 0xbef
0x4b0: JUMP 0xbef
---
Entry stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]

================================

Block 0x4b1
[0x4b1:0x4c3]
---
Predecessors: [0x393]
Successors: [0xe7d]
---
0x4b1 JUMPDEST
0x4b2 PUSH2 0x4c4
0x4b5 DUP13
0x4b6 DUP13
0x4b7 DUP13
0x4b8 DUP13
0x4b9 DUP13
0x4ba DUP13
0x4bb DUP13
0x4bc DUP13
0x4bd DUP13
0x4be DUP13
0x4bf DUP13
0x4c0 PUSH2 0xe7d
0x4c3 JUMP
---
0x4b1: JUMPDEST 
0x4b2: V258 = 0x4c4
0x4c0: V259 = 0xe7d
0x4c3: JUMP 0xe7d
---
Entry stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4c4, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]
Exit stack: [V7, 0x126, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66, 0x0, 0x4c4, V22, V25, V30, V35, V38, V43, V46, V49, V54, V60, V66]

================================

Block 0x4c4
[0x4c4:0x4f3]
---
Predecessors: [0x1133]
Successors: [0x4f4, 0x609]
---
0x4c4 JUMPDEST
0x4c5 SWAP1
0x4c6 POP
0x4c7 PUSH1 0x0
0x4c9 DUP1
0x4ca DUP3
0x4cb PUSH1 0x0
0x4cd NOT
0x4ce AND
0x4cf PUSH1 0x0
0x4d1 NOT
0x4d2 AND
0x4d3 DUP2
0x4d4 MSTORE
0x4d5 PUSH1 0x20
0x4d7 ADD
0x4d8 SWAP1
0x4d9 DUP2
0x4da MSTORE
0x4db PUSH1 0x20
0x4dd ADD
0x4de PUSH1 0x0
0x4e0 SHA3
0x4e1 PUSH1 0x0
0x4e3 SWAP1
0x4e4 SLOAD
0x4e5 SWAP1
0x4e6 PUSH2 0x100
0x4e9 EXP
0x4ea SWAP1
0x4eb DIV
0x4ec PUSH1 0xff
0x4ee AND
0x4ef ISZERO
0x4f0 PUSH2 0x609
0x4f3 JUMPI
---
0x4c4: JUMPDEST 
0x4c7: V260 = 0x0
0x4cb: V261 = 0x0
0x4cd: V262 = NOT 0x0
0x4ce: V263 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0x4cf: V264 = 0x0
0x4d1: V265 = NOT 0x0
0x4d2: V266 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V263
0x4d4: M[0x0] = V266
0x4d5: V267 = 0x20
0x4d7: V268 = ADD 0x20 0x0
0x4da: M[0x20] = 0x0
0x4db: V269 = 0x20
0x4dd: V270 = ADD 0x20 0x20
0x4de: V271 = 0x0
0x4e0: V272 = SHA3 0x0 0x40
0x4e1: V273 = 0x0
0x4e4: V274 = S[V272]
0x4e6: V275 = 0x100
0x4e9: V276 = EXP 0x100 0x0
0x4eb: V277 = DIV V274 0x1
0x4ec: V278 = 0xff
0x4ee: V279 = AND 0xff V277
0x4ef: V280 = ISZERO V279
0x4f0: V281 = 0x609
0x4f3: JUMPI 0x609 V280
---
Entry stack: [V7, {0x126, 0x245}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, {0x126, 0x245}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x4f4
[0x4f4:0x52e]
---
Predecessors: [0x4c4]
Successors: [0x52f, 0x533]
---
0x4f4 CALLER
0x4f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50a AND
0x50b PUSH2 0x8fc
0x50e CALLVALUE
0x50f SWAP1
0x510 DUP2
0x511 ISZERO
0x512 MUL
0x513 SWAP1
0x514 PUSH1 0x40
0x516 MLOAD
0x517 PUSH1 0x0
0x519 PUSH1 0x40
0x51b MLOAD
0x51c DUP1
0x51d DUP4
0x51e SUB
0x51f DUP2
0x520 DUP6
0x521 DUP9
0x522 DUP9
0x523 CALL
0x524 SWAP4
0x525 POP
0x526 POP
0x527 POP
0x528 POP
0x529 ISZERO
0x52a ISZERO
0x52b PUSH2 0x533
0x52e JUMPI
---
0x4f4: V282 = CALLER
0x4f5: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x50a: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x50b: V285 = 0x8fc
0x50e: V286 = CALLVALUE
0x511: V287 = ISZERO V286
0x512: V288 = MUL V287 0x8fc
0x514: V289 = 0x40
0x516: V290 = M[0x40]
0x517: V291 = 0x0
0x519: V292 = 0x40
0x51b: V293 = M[0x40]
0x51e: V294 = SUB V290 V293
0x523: V295 = CALL V288 V284 V286 V293 V294 V293 0x0
0x529: V296 = ISZERO V295
0x52a: V297 = ISZERO V296
0x52b: V298 = 0x533
0x52e: JUMPI 0x533 V297
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x52f
[0x52f:0x532]
---
Predecessors: [0x4f4]
Successors: []
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
---
0x52f: V299 = 0x0
0x532: REVERT 0x0 0x0
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x533
[0x533:0x608]
---
Predecessors: [0x4f4]
Successors: [0xbef]
---
0x533 JUMPDEST
0x534 DUP7
0x535 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54a AND
0x54b DUP11
0x54c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x561 AND
0x562 DUP14
0x563 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x578 AND
0x579 PUSH32 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x59a PUSH1 0x3
0x59c DUP16
0x59d DUP15
0x59e DUP15
0x59f DUP14
0x5a0 DUP14
0x5a1 PUSH1 0x40
0x5a3 MLOAD
0x5a4 DUP1
0x5a5 DUP8
0x5a6 DUP2
0x5a7 MSTORE
0x5a8 PUSH1 0x20
0x5aa ADD
0x5ab DUP7
0x5ac DUP2
0x5ad MSTORE
0x5ae PUSH1 0x20
0x5b0 ADD
0x5b1 DUP6
0x5b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c7 AND
0x5c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dd AND
0x5de DUP2
0x5df MSTORE
0x5e0 PUSH1 0x20
0x5e2 ADD
0x5e3 DUP5
0x5e4 DUP2
0x5e5 MSTORE
0x5e6 PUSH1 0x20
0x5e8 ADD
0x5e9 DUP4
0x5ea DUP2
0x5eb MSTORE
0x5ec PUSH1 0x20
0x5ee ADD
0x5ef DUP3
0x5f0 DUP2
0x5f1 MSTORE
0x5f2 PUSH1 0x20
0x5f4 ADD
0x5f5 SWAP7
0x5f6 POP
0x5f7 POP
0x5f8 POP
0x5f9 POP
0x5fa POP
0x5fb POP
0x5fc POP
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 DUP1
0x601 SWAP2
0x602 SUB
0x603 SWAP1
0x604 LOG4
0x605 PUSH2 0xbef
0x608 JUMP
---
0x533: JUMPDEST 
0x535: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x54c: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x561: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x563: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x578: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x579: V306 = 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x59a: V307 = 0x3
0x5a1: V308 = 0x40
0x5a3: V309 = M[0x40]
0x5a7: M[V309] = 0x3
0x5a8: V310 = 0x20
0x5aa: V311 = ADD 0x20 V309
0x5ad: M[V311] = S10
0x5ae: V312 = 0x20
0x5b0: V313 = ADD 0x20 V311
0x5b2: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c7: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x5c8: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x5df: M[V313] = V317
0x5e0: V318 = 0x20
0x5e2: V319 = ADD 0x20 V313
0x5e5: M[V319] = S7
0x5e6: V320 = 0x20
0x5e8: V321 = ADD 0x20 V319
0x5eb: M[V321] = S5
0x5ec: V322 = 0x20
0x5ee: V323 = ADD 0x20 V321
0x5f1: M[V323] = S4
0x5f2: V324 = 0x20
0x5f4: V325 = ADD 0x20 V323
0x5fd: V326 = 0x40
0x5ff: V327 = M[0x40]
0x602: V328 = SUB V325 V327
0x604: LOG V327 V328 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a V305 V303 V301
0x605: V329 = 0xbef
0x608: JUMP 0xbef
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x609
[0x609:0x63e]
---
Predecessors: [0x4c4]
Successors: [0x63f, 0x8b1]
---
0x609 JUMPDEST
0x60a PUSH1 0x0
0x60c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x621 AND
0x622 DUP8
0x623 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x638 AND
0x639 EQ
0x63a ISZERO
0x63b PUSH2 0x8b1
0x63e JUMPI
---
0x609: JUMPDEST 
0x60a: V330 = 0x0
0x60c: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x621: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x623: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x638: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x639: V335 = EQ V334 0x0
0x63a: V336 = ISZERO V335
0x63b: V337 = 0x8b1
0x63e: JUMPI 0x8b1 V336
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x63f
[0x63f:0x646]
---
Predecessors: [0x609]
Successors: [0x647, 0x79a]
---
0x63f DUP8
0x640 CALLVALUE
0x641 EQ
0x642 ISZERO
0x643 PUSH2 0x79a
0x646 JUMPI
---
0x640: V338 = CALLVALUE
0x641: V339 = EQ V338 S7
0x642: V340 = ISZERO V339
0x643: V341 = 0x79a
0x646: JUMPI 0x79a V340
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x647
[0x647:0x684]
---
Predecessors: [0x63f]
Successors: [0x1148]
---
0x647 PUSH1 0x1
0x649 PUSH1 0x0
0x64b DUP1
0x64c DUP4
0x64d PUSH1 0x0
0x64f NOT
0x650 AND
0x651 PUSH1 0x0
0x653 NOT
0x654 AND
0x655 DUP2
0x656 MSTORE
0x657 PUSH1 0x20
0x659 ADD
0x65a SWAP1
0x65b DUP2
0x65c MSTORE
0x65d PUSH1 0x20
0x65f ADD
0x660 PUSH1 0x0
0x662 SHA3
0x663 PUSH1 0x0
0x665 PUSH2 0x100
0x668 EXP
0x669 DUP2
0x66a SLOAD
0x66b DUP2
0x66c PUSH1 0xff
0x66e MUL
0x66f NOT
0x670 AND
0x671 SWAP1
0x672 DUP4
0x673 ISZERO
0x674 ISZERO
0x675 MUL
0x676 OR
0x677 SWAP1
0x678 SSTORE
0x679 POP
0x67a PUSH2 0x685
0x67d DUP13
0x67e DUP11
0x67f DUP14
0x680 DUP14
0x681 PUSH2 0x1148
0x684 JUMP
---
0x647: V342 = 0x1
0x649: V343 = 0x0
0x64d: V344 = 0x0
0x64f: V345 = NOT 0x0
0x650: V346 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0x651: V347 = 0x0
0x653: V348 = NOT 0x0
0x654: V349 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V346
0x656: M[0x0] = V349
0x657: V350 = 0x20
0x659: V351 = ADD 0x20 0x0
0x65c: M[0x20] = 0x0
0x65d: V352 = 0x20
0x65f: V353 = ADD 0x20 0x20
0x660: V354 = 0x0
0x662: V355 = SHA3 0x0 0x40
0x663: V356 = 0x0
0x665: V357 = 0x100
0x668: V358 = EXP 0x100 0x0
0x66a: V359 = S[V355]
0x66c: V360 = 0xff
0x66e: V361 = MUL 0xff 0x1
0x66f: V362 = NOT 0xff
0x670: V363 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V359
0x673: V364 = ISZERO 0x1
0x674: V365 = ISZERO 0x0
0x675: V366 = MUL 0x1 0x1
0x676: V367 = OR 0x1 V363
0x678: S[V355] = V367
0x67a: V368 = 0x685
0x681: V369 = 0x1148
0x684: JUMP 0x1148
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x685, S11, S8, S10, S9]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x685, S11, S8, S10, S9]

================================

Block 0x685
[0x685:0x68b]
---
Predecessors: [0x124f]
Successors: [0x68c, 0x68d]
---
0x685 JUMPDEST
0x686 ISZERO
0x687 ISZERO
0x688 PUSH2 0x68d
0x68b JUMPI
---
0x685: JUMPDEST 
0x686: V370 = ISZERO 0x1
0x687: V371 = ISZERO 0x0
0x688: V372 = 0x68d
0x68b: JUMPI 0x68d 0x1
---
Entry stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x68c
[0x68c:0x68c]
---
Predecessors: [0x685]
Successors: []
---
0x68c INVALID
---
0x68c: INVALID 
---
Entry stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x68d
[0x68d:0x6c8]
---
Predecessors: [0x685]
Successors: [0x6c9, 0x6cd]
---
0x68d JUMPDEST
0x68e DUP12
0x68f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a4 AND
0x6a5 PUSH2 0x8fc
0x6a8 CALLVALUE
0x6a9 SWAP1
0x6aa DUP2
0x6ab ISZERO
0x6ac MUL
0x6ad SWAP1
0x6ae PUSH1 0x40
0x6b0 MLOAD
0x6b1 PUSH1 0x0
0x6b3 PUSH1 0x40
0x6b5 MLOAD
0x6b6 DUP1
0x6b7 DUP4
0x6b8 SUB
0x6b9 DUP2
0x6ba DUP6
0x6bb DUP9
0x6bc DUP9
0x6bd CALL
0x6be SWAP4
0x6bf POP
0x6c0 POP
0x6c1 POP
0x6c2 POP
0x6c3 ISZERO
0x6c4 ISZERO
0x6c5 PUSH2 0x6cd
0x6c8 JUMPI
---
0x68d: JUMPDEST 
0x68f: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a4: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x6a5: V375 = 0x8fc
0x6a8: V376 = CALLVALUE
0x6ab: V377 = ISZERO V376
0x6ac: V378 = MUL V377 0x8fc
0x6ae: V379 = 0x40
0x6b0: V380 = M[0x40]
0x6b1: V381 = 0x0
0x6b3: V382 = 0x40
0x6b5: V383 = M[0x40]
0x6b8: V384 = SUB V380 V383
0x6bd: V385 = CALL V378 V374 V376 V383 V384 V383 0x0
0x6c3: V386 = ISZERO V385
0x6c4: V387 = ISZERO V386
0x6c5: V388 = 0x6cd
0x6c8: JUMPI 0x6cd V387
---
Entry stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6c9
[0x6c9:0x6cc]
---
Predecessors: [0x68d]
Successors: []
---
0x6c9 PUSH1 0x0
0x6cb DUP1
0x6cc REVERT
---
0x6c9: V389 = 0x0
0x6cc: REVERT 0x0 0x0
---
Entry stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6cd
[0x6cd:0x799]
---
Predecessors: [0x68d]
Successors: [0x8ac]
---
0x6cd JUMPDEST
0x6ce DUP7
0x6cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e4 AND
0x6e5 DUP11
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc DUP14
0x6fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x712 AND
0x713 PUSH32 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab
0x734 DUP15
0x735 DUP14
0x736 DUP14
0x737 DUP13
0x738 DUP13
0x739 PUSH1 0x40
0x73b MLOAD
0x73c DUP1
0x73d DUP7
0x73e DUP2
0x73f MSTORE
0x740 PUSH1 0x20
0x742 ADD
0x743 DUP6
0x744 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x759 AND
0x75a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76f AND
0x770 DUP2
0x771 MSTORE
0x772 PUSH1 0x20
0x774 ADD
0x775 DUP5
0x776 DUP2
0x777 MSTORE
0x778 PUSH1 0x20
0x77a ADD
0x77b DUP4
0x77c DUP2
0x77d MSTORE
0x77e PUSH1 0x20
0x780 ADD
0x781 DUP3
0x782 DUP2
0x783 MSTORE
0x784 PUSH1 0x20
0x786 ADD
0x787 SWAP6
0x788 POP
0x789 POP
0x78a POP
0x78b POP
0x78c POP
0x78d POP
0x78e PUSH1 0x40
0x790 MLOAD
0x791 DUP1
0x792 SWAP2
0x793 SUB
0x794 SWAP1
0x795 LOG4
0x796 PUSH2 0x8ac
0x799 JUMP
---
0x6cd: JUMPDEST 
0x6cf: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e4: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x6e6: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x6fd: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x712: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x713: V396 = 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab
0x739: V397 = 0x40
0x73b: V398 = M[0x40]
0x73f: M[V398] = S10
0x740: V399 = 0x20
0x742: V400 = ADD 0x20 V398
0x744: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x759: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x75a: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x76f: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x771: M[V400] = V404
0x772: V405 = 0x20
0x774: V406 = ADD 0x20 V400
0x777: M[V406] = S7
0x778: V407 = 0x20
0x77a: V408 = ADD 0x20 V406
0x77d: M[V408] = S5
0x77e: V409 = 0x20
0x780: V410 = ADD 0x20 V408
0x783: M[V410] = S4
0x784: V411 = 0x20
0x786: V412 = ADD 0x20 V410
0x78e: V413 = 0x40
0x790: V414 = M[0x40]
0x793: V415 = SUB V412 V414
0x795: LOG V414 V415 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab V395 V393 V391
0x796: V416 = 0x8ac
0x799: JUMP 0x8ac
---
Entry stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x79a
[0x79a:0x7d5]
---
Predecessors: [0x63f]
Successors: [0x7d6, 0x7da]
---
0x79a JUMPDEST
0x79b CALLER
0x79c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b1 AND
0x7b2 PUSH2 0x8fc
0x7b5 CALLVALUE
0x7b6 SWAP1
0x7b7 DUP2
0x7b8 ISZERO
0x7b9 MUL
0x7ba SWAP1
0x7bb PUSH1 0x40
0x7bd MLOAD
0x7be PUSH1 0x0
0x7c0 PUSH1 0x40
0x7c2 MLOAD
0x7c3 DUP1
0x7c4 DUP4
0x7c5 SUB
0x7c6 DUP2
0x7c7 DUP6
0x7c8 DUP9
0x7c9 DUP9
0x7ca CALL
0x7cb SWAP4
0x7cc POP
0x7cd POP
0x7ce POP
0x7cf POP
0x7d0 ISZERO
0x7d1 ISZERO
0x7d2 PUSH2 0x7da
0x7d5 JUMPI
---
0x79a: JUMPDEST 
0x79b: V417 = CALLER
0x79c: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b1: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x7b2: V420 = 0x8fc
0x7b5: V421 = CALLVALUE
0x7b8: V422 = ISZERO V421
0x7b9: V423 = MUL V422 0x8fc
0x7bb: V424 = 0x40
0x7bd: V425 = M[0x40]
0x7be: V426 = 0x0
0x7c0: V427 = 0x40
0x7c2: V428 = M[0x40]
0x7c5: V429 = SUB V425 V428
0x7ca: V430 = CALL V423 V419 V421 V428 V429 V428 0x0
0x7d0: V431 = ISZERO V430
0x7d1: V432 = ISZERO V431
0x7d2: V433 = 0x7da
0x7d5: JUMPI 0x7da V432
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7d6
[0x7d6:0x7d9]
---
Predecessors: [0x79a]
Successors: []
---
0x7d6 PUSH1 0x0
0x7d8 DUP1
0x7d9 REVERT
---
0x7d6: V434 = 0x0
0x7d9: REVERT 0x0 0x0
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7da
[0x7da:0x8ab]
---
Predecessors: [0x79a]
Successors: [0x8ac]
---
0x7da JUMPDEST
0x7db DUP7
0x7dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f1 AND
0x7f2 DUP11
0x7f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x808 AND
0x809 DUP14
0x80a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81f AND
0x820 PUSH32 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x841 PUSH1 0x4
0x843 DUP16
0x844 DUP15
0x845 DUP15
0x846 DUP14
0x847 DUP14
0x848 PUSH1 0x40
0x84a MLOAD
0x84b DUP1
0x84c DUP8
0x84d DUP2
0x84e MSTORE
0x84f PUSH1 0x20
0x851 ADD
0x852 DUP7
0x853 DUP2
0x854 MSTORE
0x855 PUSH1 0x20
0x857 ADD
0x858 DUP6
0x859 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86e AND
0x86f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x884 AND
0x885 DUP2
0x886 MSTORE
0x887 PUSH1 0x20
0x889 ADD
0x88a DUP5
0x88b DUP2
0x88c MSTORE
0x88d PUSH1 0x20
0x88f ADD
0x890 DUP4
0x891 DUP2
0x892 MSTORE
0x893 PUSH1 0x20
0x895 ADD
0x896 DUP3
0x897 DUP2
0x898 MSTORE
0x899 PUSH1 0x20
0x89b ADD
0x89c SWAP7
0x89d POP
0x89e POP
0x89f POP
0x8a0 POP
0x8a1 POP
0x8a2 POP
0x8a3 POP
0x8a4 PUSH1 0x40
0x8a6 MLOAD
0x8a7 DUP1
0x8a8 SWAP2
0x8a9 SUB
0x8aa SWAP1
0x8ab LOG4
---
0x7da: JUMPDEST 
0x7dc: V435 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f1: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x7f3: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x808: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x80a: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x81f: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x820: V441 = 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x841: V442 = 0x4
0x848: V443 = 0x40
0x84a: V444 = M[0x40]
0x84e: M[V444] = 0x4
0x84f: V445 = 0x20
0x851: V446 = ADD 0x20 V444
0x854: M[V446] = S10
0x855: V447 = 0x20
0x857: V448 = ADD 0x20 V446
0x859: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x86e: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x86f: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x884: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x886: M[V448] = V452
0x887: V453 = 0x20
0x889: V454 = ADD 0x20 V448
0x88c: M[V454] = S7
0x88d: V455 = 0x20
0x88f: V456 = ADD 0x20 V454
0x892: M[V456] = S5
0x893: V457 = 0x20
0x895: V458 = ADD 0x20 V456
0x898: M[V458] = S4
0x899: V459 = 0x20
0x89b: V460 = ADD 0x20 V458
0x8a4: V461 = 0x40
0x8a6: V462 = M[0x40]
0x8a9: V463 = SUB V460 V462
0x8ab: LOG V462 V463 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a V440 V438 V436
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8ac
[0x8ac:0x8b0]
---
Predecessors: [0x6cd, 0x7da]
Successors: [0xbee]
---
0x8ac JUMPDEST
0x8ad PUSH2 0xbee
0x8b0 JUMP
---
0x8ac: JUMPDEST 
0x8ad: V464 = 0xbee
0x8b0: JUMP 0xbee
---
Entry stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8b1
[0x8b1:0x8bb]
---
Predecessors: [0x609]
Successors: [0x8bc, 0x9d1]
---
0x8b1 JUMPDEST
0x8b2 PUSH1 0x0
0x8b4 CALLVALUE
0x8b5 EQ
0x8b6 ISZERO
0x8b7 ISZERO
0x8b8 PUSH2 0x9d1
0x8bb JUMPI
---
0x8b1: JUMPDEST 
0x8b2: V465 = 0x0
0x8b4: V466 = CALLVALUE
0x8b5: V467 = EQ V466 0x0
0x8b6: V468 = ISZERO V467
0x8b7: V469 = ISZERO V468
0x8b8: V470 = 0x9d1
0x8bb: JUMPI 0x9d1 V469
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8bc
[0x8bc:0x8f6]
---
Predecessors: [0x8b1]
Successors: [0x8f7, 0x8fb]
---
0x8bc CALLER
0x8bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d2 AND
0x8d3 PUSH2 0x8fc
0x8d6 CALLVALUE
0x8d7 SWAP1
0x8d8 DUP2
0x8d9 ISZERO
0x8da MUL
0x8db SWAP1
0x8dc PUSH1 0x40
0x8de MLOAD
0x8df PUSH1 0x0
0x8e1 PUSH1 0x40
0x8e3 MLOAD
0x8e4 DUP1
0x8e5 DUP4
0x8e6 SUB
0x8e7 DUP2
0x8e8 DUP6
0x8e9 DUP9
0x8ea DUP9
0x8eb CALL
0x8ec SWAP4
0x8ed POP
0x8ee POP
0x8ef POP
0x8f0 POP
0x8f1 ISZERO
0x8f2 ISZERO
0x8f3 PUSH2 0x8fb
0x8f6 JUMPI
---
0x8bc: V471 = CALLER
0x8bd: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d2: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x8d3: V474 = 0x8fc
0x8d6: V475 = CALLVALUE
0x8d9: V476 = ISZERO V475
0x8da: V477 = MUL V476 0x8fc
0x8dc: V478 = 0x40
0x8de: V479 = M[0x40]
0x8df: V480 = 0x0
0x8e1: V481 = 0x40
0x8e3: V482 = M[0x40]
0x8e6: V483 = SUB V479 V482
0x8eb: V484 = CALL V477 V473 V475 V482 V483 V482 0x0
0x8f1: V485 = ISZERO V484
0x8f2: V486 = ISZERO V485
0x8f3: V487 = 0x8fb
0x8f6: JUMPI 0x8fb V486
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8f7
[0x8f7:0x8fa]
---
Predecessors: [0x8bc]
Successors: []
---
0x8f7 PUSH1 0x0
0x8f9 DUP1
0x8fa REVERT
---
0x8f7: V488 = 0x0
0x8fa: REVERT 0x0 0x0
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8fb
[0x8fb:0x9d0]
---
Predecessors: [0x8bc]
Successors: [0xbef]
---
0x8fb JUMPDEST
0x8fc DUP7
0x8fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x912 AND
0x913 DUP11
0x914 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x929 AND
0x92a DUP14
0x92b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x940 AND
0x941 PUSH32 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x962 PUSH1 0x5
0x964 DUP16
0x965 DUP15
0x966 DUP15
0x967 DUP14
0x968 DUP14
0x969 PUSH1 0x40
0x96b MLOAD
0x96c DUP1
0x96d DUP8
0x96e DUP2
0x96f MSTORE
0x970 PUSH1 0x20
0x972 ADD
0x973 DUP7
0x974 DUP2
0x975 MSTORE
0x976 PUSH1 0x20
0x978 ADD
0x979 DUP6
0x97a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98f AND
0x990 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a5 AND
0x9a6 DUP2
0x9a7 MSTORE
0x9a8 PUSH1 0x20
0x9aa ADD
0x9ab DUP5
0x9ac DUP2
0x9ad MSTORE
0x9ae PUSH1 0x20
0x9b0 ADD
0x9b1 DUP4
0x9b2 DUP2
0x9b3 MSTORE
0x9b4 PUSH1 0x20
0x9b6 ADD
0x9b7 DUP3
0x9b8 DUP2
0x9b9 MSTORE
0x9ba PUSH1 0x20
0x9bc ADD
0x9bd SWAP7
0x9be POP
0x9bf POP
0x9c0 POP
0x9c1 POP
0x9c2 POP
0x9c3 POP
0x9c4 POP
0x9c5 PUSH1 0x40
0x9c7 MLOAD
0x9c8 DUP1
0x9c9 SWAP2
0x9ca SUB
0x9cb SWAP1
0x9cc LOG4
0x9cd PUSH2 0xbef
0x9d0 JUMP
---
0x8fb: JUMPDEST 
0x8fd: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x912: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x914: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x929: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x92b: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x940: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x941: V495 = 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0x962: V496 = 0x5
0x969: V497 = 0x40
0x96b: V498 = M[0x40]
0x96f: M[V498] = 0x5
0x970: V499 = 0x20
0x972: V500 = ADD 0x20 V498
0x975: M[V500] = S10
0x976: V501 = 0x20
0x978: V502 = ADD 0x20 V500
0x97a: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x98f: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x990: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a5: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x9a7: M[V502] = V506
0x9a8: V507 = 0x20
0x9aa: V508 = ADD 0x20 V502
0x9ad: M[V508] = S7
0x9ae: V509 = 0x20
0x9b0: V510 = ADD 0x20 V508
0x9b3: M[V510] = S5
0x9b4: V511 = 0x20
0x9b6: V512 = ADD 0x20 V510
0x9b9: M[V512] = S4
0x9ba: V513 = 0x20
0x9bc: V514 = ADD 0x20 V512
0x9c5: V515 = 0x40
0x9c7: V516 = M[0x40]
0x9ca: V517 = SUB V514 V516
0x9cc: LOG V516 V517 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a V494 V492 V490
0x9cd: V518 = 0xbef
0x9d0: JUMP 0xbef
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9d1
[0x9d1:0xa05]
---
Predecessors: [0x8b1]
Successors: [0xa06, 0xb1b]
---
0x9d1 JUMPDEST
0x9d2 CALLER
0x9d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e8 AND
0x9e9 DUP10
0x9ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ff AND
0xa00 EQ
0xa01 ISZERO
0xa02 PUSH2 0xb1b
0xa05 JUMPI
---
0x9d1: JUMPDEST 
0x9d2: V519 = CALLER
0x9d3: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e8: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x9ea: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ff: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xa00: V524 = EQ V523 V521
0xa01: V525 = ISZERO V524
0xa02: V526 = 0xb1b
0xa05: JUMPI 0xb1b V525
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa06
[0xa06:0xa45]
---
Predecessors: [0x9d1]
Successors: [0x125b]
---
0xa06 PUSH1 0x1
0xa08 PUSH1 0x0
0xa0a DUP1
0xa0b DUP4
0xa0c PUSH1 0x0
0xa0e NOT
0xa0f AND
0xa10 PUSH1 0x0
0xa12 NOT
0xa13 AND
0xa14 DUP2
0xa15 MSTORE
0xa16 PUSH1 0x20
0xa18 ADD
0xa19 SWAP1
0xa1a DUP2
0xa1b MSTORE
0xa1c PUSH1 0x20
0xa1e ADD
0xa1f PUSH1 0x0
0xa21 SHA3
0xa22 PUSH1 0x0
0xa24 PUSH2 0x100
0xa27 EXP
0xa28 DUP2
0xa29 SLOAD
0xa2a DUP2
0xa2b PUSH1 0xff
0xa2d MUL
0xa2e NOT
0xa2f AND
0xa30 SWAP1
0xa31 DUP4
0xa32 ISZERO
0xa33 ISZERO
0xa34 MUL
0xa35 OR
0xa36 SWAP1
0xa37 SSTORE
0xa38 POP
0xa39 PUSH2 0xa46
0xa3c DUP13
0xa3d DUP13
0xa3e DUP13
0xa3f DUP13
0xa40 DUP13
0xa41 DUP13
0xa42 PUSH2 0x125b
0xa45 JUMP
---
0xa06: V527 = 0x1
0xa08: V528 = 0x0
0xa0c: V529 = 0x0
0xa0e: V530 = NOT 0x0
0xa0f: V531 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0xa10: V532 = 0x0
0xa12: V533 = NOT 0x0
0xa13: V534 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V531
0xa15: M[0x0] = V534
0xa16: V535 = 0x20
0xa18: V536 = ADD 0x20 0x0
0xa1b: M[0x20] = 0x0
0xa1c: V537 = 0x20
0xa1e: V538 = ADD 0x20 0x20
0xa1f: V539 = 0x0
0xa21: V540 = SHA3 0x0 0x40
0xa22: V541 = 0x0
0xa24: V542 = 0x100
0xa27: V543 = EXP 0x100 0x0
0xa29: V544 = S[V540]
0xa2b: V545 = 0xff
0xa2d: V546 = MUL 0xff 0x1
0xa2e: V547 = NOT 0xff
0xa2f: V548 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V544
0xa32: V549 = ISZERO 0x1
0xa33: V550 = ISZERO 0x0
0xa34: V551 = MUL 0x1 0x1
0xa35: V552 = OR 0x1 V548
0xa37: S[V540] = V552
0xa39: V553 = 0xa46
0xa42: V554 = 0x125b
0xa45: JUMP 0x125b
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xa46, S11, S10, S9, S8, S7, S6]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xa46, S11, S10, S9, S8, S7, S6]

================================

Block 0xa46
[0xa46:0xa4c]
---
Predecessors: [0x127d]
Successors: [0xa4d, 0xa4e]
---
0xa46 JUMPDEST
0xa47 ISZERO
0xa48 ISZERO
0xa49 PUSH2 0xa4e
0xa4c JUMPI
---
0xa46: JUMPDEST 
0xa47: V555 = ISZERO 0x1
0xa48: V556 = ISZERO 0x0
0xa49: V557 = 0xa4e
0xa4c: JUMPI 0xa4e 0x1
---
Entry stack: [V7, {0x126, 0x245}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xa4d
[0xa4d:0xa4d]
---
Predecessors: [0xa46]
Successors: []
---
0xa4d INVALID
---
0xa4d: INVALID 
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa4e
[0xa4e:0xb1a]
---
Predecessors: [0xa46]
Successors: [0xbed]
---
0xa4e JUMPDEST
0xa4f DUP7
0xa50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa65 AND
0xa66 DUP11
0xa67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7c AND
0xa7d DUP14
0xa7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa93 AND
0xa94 PUSH32 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab
0xab5 DUP15
0xab6 DUP14
0xab7 DUP14
0xab8 DUP13
0xab9 DUP13
0xaba PUSH1 0x40
0xabc MLOAD
0xabd DUP1
0xabe DUP7
0xabf DUP2
0xac0 MSTORE
0xac1 PUSH1 0x20
0xac3 ADD
0xac4 DUP6
0xac5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xada AND
0xadb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf0 AND
0xaf1 DUP2
0xaf2 MSTORE
0xaf3 PUSH1 0x20
0xaf5 ADD
0xaf6 DUP5
0xaf7 DUP2
0xaf8 MSTORE
0xaf9 PUSH1 0x20
0xafb ADD
0xafc DUP4
0xafd DUP2
0xafe MSTORE
0xaff PUSH1 0x20
0xb01 ADD
0xb02 DUP3
0xb03 DUP2
0xb04 MSTORE
0xb05 PUSH1 0x20
0xb07 ADD
0xb08 SWAP6
0xb09 POP
0xb0a POP
0xb0b POP
0xb0c POP
0xb0d POP
0xb0e POP
0xb0f PUSH1 0x40
0xb11 MLOAD
0xb12 DUP1
0xb13 SWAP2
0xb14 SUB
0xb15 SWAP1
0xb16 LOG4
0xb17 PUSH2 0xbed
0xb1a JUMP
---
0xa4e: JUMPDEST 
0xa50: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0xa65: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xa67: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7c: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xa7e: V562 = 0xffffffffffffffffffffffffffffffffffffffff
0xa93: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xa94: V564 = 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab
0xaba: V565 = 0x40
0xabc: V566 = M[0x40]
0xac0: M[V566] = S10
0xac1: V567 = 0x20
0xac3: V568 = ADD 0x20 V566
0xac5: V569 = 0xffffffffffffffffffffffffffffffffffffffff
0xada: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xadb: V571 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf0: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0xaf2: M[V568] = V572
0xaf3: V573 = 0x20
0xaf5: V574 = ADD 0x20 V568
0xaf8: M[V574] = S7
0xaf9: V575 = 0x20
0xafb: V576 = ADD 0x20 V574
0xafe: M[V576] = S5
0xaff: V577 = 0x20
0xb01: V578 = ADD 0x20 V576
0xb04: M[V578] = S4
0xb05: V579 = 0x20
0xb07: V580 = ADD 0x20 V578
0xb0f: V581 = 0x40
0xb11: V582 = M[0x40]
0xb14: V583 = SUB V580 V582
0xb16: LOG V582 V583 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab V563 V561 V559
0xb17: V584 = 0xbed
0xb1a: JUMP 0xbed
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xb1b
[0xb1b:0xbec]
---
Predecessors: [0x9d1]
Successors: [0xbed]
---
0xb1b JUMPDEST
0xb1c DUP7
0xb1d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb32 AND
0xb33 DUP11
0xb34 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb49 AND
0xb4a DUP14
0xb4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb60 AND
0xb61 PUSH32 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0xb82 PUSH1 0x6
0xb84 DUP16
0xb85 DUP15
0xb86 DUP15
0xb87 DUP14
0xb88 DUP14
0xb89 PUSH1 0x40
0xb8b MLOAD
0xb8c DUP1
0xb8d DUP8
0xb8e DUP2
0xb8f MSTORE
0xb90 PUSH1 0x20
0xb92 ADD
0xb93 DUP7
0xb94 DUP2
0xb95 MSTORE
0xb96 PUSH1 0x20
0xb98 ADD
0xb99 DUP6
0xb9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbaf AND
0xbb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc5 AND
0xbc6 DUP2
0xbc7 MSTORE
0xbc8 PUSH1 0x20
0xbca ADD
0xbcb DUP5
0xbcc DUP2
0xbcd MSTORE
0xbce PUSH1 0x20
0xbd0 ADD
0xbd1 DUP4
0xbd2 DUP2
0xbd3 MSTORE
0xbd4 PUSH1 0x20
0xbd6 ADD
0xbd7 DUP3
0xbd8 DUP2
0xbd9 MSTORE
0xbda PUSH1 0x20
0xbdc ADD
0xbdd SWAP7
0xbde POP
0xbdf POP
0xbe0 POP
0xbe1 POP
0xbe2 POP
0xbe3 POP
0xbe4 POP
0xbe5 PUSH1 0x40
0xbe7 MLOAD
0xbe8 DUP1
0xbe9 SWAP2
0xbea SUB
0xbeb SWAP1
0xbec LOG4
---
0xb1b: JUMPDEST 
0xb1d: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0xb32: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xb34: V587 = 0xffffffffffffffffffffffffffffffffffffffff
0xb49: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xb4b: V589 = 0xffffffffffffffffffffffffffffffffffffffff
0xb60: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xb61: V591 = 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0xb82: V592 = 0x6
0xb89: V593 = 0x40
0xb8b: V594 = M[0x40]
0xb8f: M[V594] = 0x6
0xb90: V595 = 0x20
0xb92: V596 = ADD 0x20 V594
0xb95: M[V596] = S10
0xb96: V597 = 0x20
0xb98: V598 = ADD 0x20 V596
0xb9a: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0xbaf: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xbb0: V601 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc5: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0xbc7: M[V598] = V602
0xbc8: V603 = 0x20
0xbca: V604 = ADD 0x20 V598
0xbcd: M[V604] = S7
0xbce: V605 = 0x20
0xbd0: V606 = ADD 0x20 V604
0xbd3: M[V606] = S5
0xbd4: V607 = 0x20
0xbd6: V608 = ADD 0x20 V606
0xbd9: M[V608] = S4
0xbda: V609 = 0x20
0xbdc: V610 = ADD 0x20 V608
0xbe5: V611 = 0x40
0xbe7: V612 = M[0x40]
0xbea: V613 = SUB V610 V612
0xbec: LOG V612 V613 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a V590 V588 V586
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbed
[0xbed:0xbed]
---
Predecessors: [0xa4e, 0xb1b]
Successors: [0xbee]
---
0xbed JUMPDEST
---
0xbed: JUMPDEST 
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbee
[0xbee:0xbee]
---
Predecessors: [0x8ac, 0xbed]
Successors: [0xbef]
---
0xbee JUMPDEST
---
0xbee: JUMPDEST 
---
Entry stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbef
[0xbef:0xbfc]
---
Predecessors: [0x2bd, 0x3db, 0x533, 0x8fb, 0xbee]
Successors: [0x126, 0x245]
---
0xbef JUMPDEST
0xbf0 POP
0xbf1 POP
0xbf2 POP
0xbf3 POP
0xbf4 POP
0xbf5 POP
0xbf6 POP
0xbf7 POP
0xbf8 POP
0xbf9 POP
0xbfa POP
0xbfb POP
0xbfc JUMP
---
0xbef: JUMPDEST 
0xbfc: JUMP {0x126, 0x245}
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V7]

================================

Block 0xbfd
[0xbfd:0xc1c]
---
Predecessors: [0x133]
Successors: [0x14d]
---
0xbfd JUMPDEST
0xbfe PUSH1 0x0
0xc00 PUSH1 0x20
0xc02 MSTORE
0xc03 DUP1
0xc04 PUSH1 0x0
0xc06 MSTORE
0xc07 PUSH1 0x40
0xc09 PUSH1 0x0
0xc0b SHA3
0xc0c PUSH1 0x0
0xc0e SWAP2
0xc0f POP
0xc10 SLOAD
0xc11 SWAP1
0xc12 PUSH2 0x100
0xc15 EXP
0xc16 SWAP1
0xc17 DIV
0xc18 PUSH1 0xff
0xc1a AND
0xc1b DUP2
0xc1c JUMP
---
0xbfd: JUMPDEST 
0xbfe: V614 = 0x0
0xc00: V615 = 0x20
0xc02: M[0x20] = 0x0
0xc04: V616 = 0x0
0xc06: M[0x0] = V79
0xc07: V617 = 0x40
0xc09: V618 = 0x0
0xc0b: V619 = SHA3 0x0 0x40
0xc0c: V620 = 0x0
0xc10: V621 = S[V619]
0xc12: V622 = 0x100
0xc15: V623 = EXP 0x100 0x0
0xc17: V624 = DIV V621 0x1
0xc18: V625 = 0xff
0xc1a: V626 = AND 0xff V624
0xc1c: JUMP 0x14d
---
Entry stack: [V7, 0x14d, V79]
Stack pops: 2
Stack additions: [S1, V626]
Exit stack: [V7, 0x14d, V626]

================================

Block 0xc1d
[0xc1d:0xc31]
---
Predecessors: [0x172]
Successors: [0xe7d]
---
0xc1d JUMPDEST
0xc1e PUSH1 0x0
0xc20 PUSH2 0xc32
0xc23 DUP13
0xc24 DUP13
0xc25 DUP13
0xc26 DUP13
0xc27 DUP13
0xc28 DUP13
0xc29 DUP13
0xc2a DUP13
0xc2b DUP13
0xc2c DUP13
0xc2d DUP13
0xc2e PUSH2 0xe7d
0xc31 JUMP
---
0xc1d: JUMPDEST 
0xc1e: V627 = 0x0
0xc20: V628 = 0xc32
0xc2e: V629 = 0xe7d
0xc31: JUMP 0xe7d
---
Entry stack: [V7, 0x245, V102, V105, V110, V115, V118, V123, V126, V129, V134, V140, V146]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0xc32, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, 0x245, V102, V105, V110, V115, V118, V123, V126, V129, V134, V140, V146, 0x0, 0xc32, V102, V105, V110, V115, V118, V123, V126, V129, V134, V140, V146]

================================

Block 0xc32
[0xc32:0xc68]
---
Predecessors: [0x1133]
Successors: [0xc69, 0xe6f]
---
0xc32 JUMPDEST
0xc33 SWAP1
0xc34 POP
0xc35 DUP12
0xc36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4b AND
0xc4c CALLER
0xc4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc62 AND
0xc63 EQ
0xc64 ISZERO
0xc65 PUSH2 0xe6f
0xc68 JUMPI
---
0xc32: JUMPDEST 
0xc36: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4b: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff S12
0xc4c: V632 = CALLER
0xc4d: V633 = 0xffffffffffffffffffffffffffffffffffffffff
0xc62: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0xc63: V635 = EQ V634 V631
0xc64: V636 = ISZERO V635
0xc65: V637 = 0xe6f
0xc68: JUMPI 0xe6f V636
---
Entry stack: [V7, {0x126, 0x245}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]
Exit stack: [V7, {0x126, 0x245}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xc69
[0xc69:0xc9c]
---
Predecessors: [0xc32]
Successors: [0xc9d, 0xd9c]
---
0xc69 PUSH1 0x0
0xc6b ISZERO
0xc6c ISZERO
0xc6d PUSH1 0x0
0xc6f DUP1
0xc70 DUP4
0xc71 PUSH1 0x0
0xc73 NOT
0xc74 AND
0xc75 PUSH1 0x0
0xc77 NOT
0xc78 AND
0xc79 DUP2
0xc7a MSTORE
0xc7b PUSH1 0x20
0xc7d ADD
0xc7e SWAP1
0xc7f DUP2
0xc80 MSTORE
0xc81 PUSH1 0x20
0xc83 ADD
0xc84 PUSH1 0x0
0xc86 SHA3
0xc87 PUSH1 0x0
0xc89 SWAP1
0xc8a SLOAD
0xc8b SWAP1
0xc8c PUSH2 0x100
0xc8f EXP
0xc90 SWAP1
0xc91 DIV
0xc92 PUSH1 0xff
0xc94 AND
0xc95 ISZERO
0xc96 ISZERO
0xc97 EQ
0xc98 ISZERO
0xc99 PUSH2 0xd9c
0xc9c JUMPI
---
0xc69: V638 = 0x0
0xc6b: V639 = ISZERO 0x0
0xc6c: V640 = ISZERO 0x1
0xc6d: V641 = 0x0
0xc71: V642 = 0x0
0xc73: V643 = NOT 0x0
0xc74: V644 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0xc75: V645 = 0x0
0xc77: V646 = NOT 0x0
0xc78: V647 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V644
0xc7a: M[0x0] = V647
0xc7b: V648 = 0x20
0xc7d: V649 = ADD 0x20 0x0
0xc80: M[0x20] = 0x0
0xc81: V650 = 0x20
0xc83: V651 = ADD 0x20 0x20
0xc84: V652 = 0x0
0xc86: V653 = SHA3 0x0 0x40
0xc87: V654 = 0x0
0xc8a: V655 = S[V653]
0xc8c: V656 = 0x100
0xc8f: V657 = EXP 0x100 0x0
0xc91: V658 = DIV V655 0x1
0xc92: V659 = 0xff
0xc94: V660 = AND 0xff V658
0xc95: V661 = ISZERO V660
0xc96: V662 = ISZERO V661
0xc97: V663 = EQ V662 0x0
0xc98: V664 = ISZERO V663
0xc99: V665 = 0xd9c
0xc9c: JUMPI 0xd9c V664
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xc9d
[0xc9d:0xd9b]
---
Predecessors: [0xc69]
Successors: [0xe6e]
---
0xc9d PUSH1 0x1
0xc9f PUSH1 0x0
0xca1 DUP1
0xca2 DUP4
0xca3 PUSH1 0x0
0xca5 NOT
0xca6 AND
0xca7 PUSH1 0x0
0xca9 NOT
0xcaa AND
0xcab DUP2
0xcac MSTORE
0xcad PUSH1 0x20
0xcaf ADD
0xcb0 SWAP1
0xcb1 DUP2
0xcb2 MSTORE
0xcb3 PUSH1 0x20
0xcb5 ADD
0xcb6 PUSH1 0x0
0xcb8 SHA3
0xcb9 PUSH1 0x0
0xcbb PUSH2 0x100
0xcbe EXP
0xcbf DUP2
0xcc0 SLOAD
0xcc1 DUP2
0xcc2 PUSH1 0xff
0xcc4 MUL
0xcc5 NOT
0xcc6 AND
0xcc7 SWAP1
0xcc8 DUP4
0xcc9 ISZERO
0xcca ISZERO
0xccb MUL
0xccc OR
0xccd SWAP1
0xcce SSTORE
0xccf POP
0xcd0 DUP7
0xcd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce6 AND
0xce7 DUP11
0xce8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcfd AND
0xcfe DUP14
0xcff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd14 AND
0xd15 PUSH32 0x8ce0bae8f3488649f2f29762dfc77af336a695060bc787b9c813c6fdd79fdf25
0xd36 DUP15
0xd37 DUP14
0xd38 DUP14
0xd39 DUP13
0xd3a DUP13
0xd3b PUSH1 0x40
0xd3d MLOAD
0xd3e DUP1
0xd3f DUP7
0xd40 DUP2
0xd41 MSTORE
0xd42 PUSH1 0x20
0xd44 ADD
0xd45 DUP6
0xd46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5b AND
0xd5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd71 AND
0xd72 DUP2
0xd73 MSTORE
0xd74 PUSH1 0x20
0xd76 ADD
0xd77 DUP5
0xd78 DUP2
0xd79 MSTORE
0xd7a PUSH1 0x20
0xd7c ADD
0xd7d DUP4
0xd7e DUP2
0xd7f MSTORE
0xd80 PUSH1 0x20
0xd82 ADD
0xd83 DUP3
0xd84 DUP2
0xd85 MSTORE
0xd86 PUSH1 0x20
0xd88 ADD
0xd89 SWAP6
0xd8a POP
0xd8b POP
0xd8c POP
0xd8d POP
0xd8e POP
0xd8f POP
0xd90 PUSH1 0x40
0xd92 MLOAD
0xd93 DUP1
0xd94 SWAP2
0xd95 SUB
0xd96 SWAP1
0xd97 LOG4
0xd98 PUSH2 0xe6e
0xd9b JUMP
---
0xc9d: V666 = 0x1
0xc9f: V667 = 0x0
0xca3: V668 = 0x0
0xca5: V669 = NOT 0x0
0xca6: V670 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0xca7: V671 = 0x0
0xca9: V672 = NOT 0x0
0xcaa: V673 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V670
0xcac: M[0x0] = V673
0xcad: V674 = 0x20
0xcaf: V675 = ADD 0x20 0x0
0xcb2: M[0x20] = 0x0
0xcb3: V676 = 0x20
0xcb5: V677 = ADD 0x20 0x20
0xcb6: V678 = 0x0
0xcb8: V679 = SHA3 0x0 0x40
0xcb9: V680 = 0x0
0xcbb: V681 = 0x100
0xcbe: V682 = EXP 0x100 0x0
0xcc0: V683 = S[V679]
0xcc2: V684 = 0xff
0xcc4: V685 = MUL 0xff 0x1
0xcc5: V686 = NOT 0xff
0xcc6: V687 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V683
0xcc9: V688 = ISZERO 0x1
0xcca: V689 = ISZERO 0x0
0xccb: V690 = MUL 0x1 0x1
0xccc: V691 = OR 0x1 V687
0xcce: S[V679] = V691
0xcd1: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0xce6: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xce8: V694 = 0xffffffffffffffffffffffffffffffffffffffff
0xcfd: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xcff: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xd14: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xd15: V698 = 0x8ce0bae8f3488649f2f29762dfc77af336a695060bc787b9c813c6fdd79fdf25
0xd3b: V699 = 0x40
0xd3d: V700 = M[0x40]
0xd41: M[V700] = S10
0xd42: V701 = 0x20
0xd44: V702 = ADD 0x20 V700
0xd46: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5b: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xd5c: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xd71: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0xd73: M[V702] = V706
0xd74: V707 = 0x20
0xd76: V708 = ADD 0x20 V702
0xd79: M[V708] = S7
0xd7a: V709 = 0x20
0xd7c: V710 = ADD 0x20 V708
0xd7f: M[V710] = S5
0xd80: V711 = 0x20
0xd82: V712 = ADD 0x20 V710
0xd85: M[V712] = S4
0xd86: V713 = 0x20
0xd88: V714 = ADD 0x20 V712
0xd90: V715 = 0x40
0xd92: V716 = M[0x40]
0xd95: V717 = SUB V714 V716
0xd97: LOG V716 V717 0x8ce0bae8f3488649f2f29762dfc77af336a695060bc787b9c813c6fdd79fdf25 V697 V695 V693
0xd98: V718 = 0xe6e
0xd9b: JUMP 0xe6e
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd9c
[0xd9c:0xe6d]
---
Predecessors: [0xc69]
Successors: [0xe6e]
---
0xd9c JUMPDEST
0xd9d DUP7
0xd9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb3 AND
0xdb4 DUP11
0xdb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdca AND
0xdcb DUP14
0xdcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde1 AND
0xde2 PUSH32 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0xe03 PUSH1 0x7
0xe05 DUP16
0xe06 DUP15
0xe07 DUP15
0xe08 DUP14
0xe09 DUP14
0xe0a PUSH1 0x40
0xe0c MLOAD
0xe0d DUP1
0xe0e DUP8
0xe0f DUP2
0xe10 MSTORE
0xe11 PUSH1 0x20
0xe13 ADD
0xe14 DUP7
0xe15 DUP2
0xe16 MSTORE
0xe17 PUSH1 0x20
0xe19 ADD
0xe1a DUP6
0xe1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe30 AND
0xe31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe46 AND
0xe47 DUP2
0xe48 MSTORE
0xe49 PUSH1 0x20
0xe4b ADD
0xe4c DUP5
0xe4d DUP2
0xe4e MSTORE
0xe4f PUSH1 0x20
0xe51 ADD
0xe52 DUP4
0xe53 DUP2
0xe54 MSTORE
0xe55 PUSH1 0x20
0xe57 ADD
0xe58 DUP3
0xe59 DUP2
0xe5a MSTORE
0xe5b PUSH1 0x20
0xe5d ADD
0xe5e SWAP7
0xe5f POP
0xe60 POP
0xe61 POP
0xe62 POP
0xe63 POP
0xe64 POP
0xe65 POP
0xe66 PUSH1 0x40
0xe68 MLOAD
0xe69 DUP1
0xe6a SWAP2
0xe6b SUB
0xe6c SWAP1
0xe6d LOG4
---
0xd9c: JUMPDEST 
0xd9e: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb3: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xdb5: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xdca: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xdcc: V723 = 0xffffffffffffffffffffffffffffffffffffffff
0xde1: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xde2: V725 = 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a
0xe03: V726 = 0x7
0xe0a: V727 = 0x40
0xe0c: V728 = M[0x40]
0xe10: M[V728] = 0x7
0xe11: V729 = 0x20
0xe13: V730 = ADD 0x20 V728
0xe16: M[V730] = S10
0xe17: V731 = 0x20
0xe19: V732 = ADD 0x20 V730
0xe1b: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0xe30: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xe31: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xe46: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff V734
0xe48: M[V732] = V736
0xe49: V737 = 0x20
0xe4b: V738 = ADD 0x20 V732
0xe4e: M[V738] = S7
0xe4f: V739 = 0x20
0xe51: V740 = ADD 0x20 V738
0xe54: M[V740] = S5
0xe55: V741 = 0x20
0xe57: V742 = ADD 0x20 V740
0xe5a: M[V742] = S4
0xe5b: V743 = 0x20
0xe5d: V744 = ADD 0x20 V742
0xe66: V745 = 0x40
0xe68: V746 = M[0x40]
0xe6b: V747 = SUB V744 V746
0xe6d: LOG V746 V747 0x8e49dd3f283d9a844668a6f422edaa50c4c22987511ec284cebec288ca54f37a V724 V722 V720
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe6e
[0xe6e:0xe6e]
---
Predecessors: [0xc9d, 0xd9c]
Successors: [0xe6f]
---
0xe6e JUMPDEST
---
0xe6e: JUMPDEST 
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe6f
[0xe6f:0xe7c]
---
Predecessors: [0xc32, 0xe6e]
Successors: [0x126, 0x245]
---
0xe6f JUMPDEST
0xe70 POP
0xe71 POP
0xe72 POP
0xe73 POP
0xe74 POP
0xe75 POP
0xe76 POP
0xe77 POP
0xe78 POP
0xe79 POP
0xe7a POP
0xe7b POP
0xe7c JUMP
---
0xe6f: JUMPDEST 
0xe7c: JUMP {0x126, 0x245}
---
Entry stack: [V7, {0x126, 0x245}, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V7]

================================

Block 0xe7d
[0xe7d:0xe87]
---
Predecessors: [0x4b1, 0xc1d]
Successors: [0x1289]
---
0xe7d JUMPDEST
0xe7e PUSH1 0x0
0xe80 DUP1
0xe81 PUSH2 0xe88
0xe84 PUSH2 0x1289
0xe87 JUMP
---
0xe7d: JUMPDEST 
0xe7e: V748 = 0x0
0xe81: V749 = 0xe88
0xe84: V750 = 0x1289
0xe87: JUMP 0x1289
---
Entry stack: [V7, {0x126, 0x245}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, {0x4c4, 0xc32}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0xe88]
Exit stack: [V7, {0x126, 0x245}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, {0x4c4, 0xc32}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, 0xe88]

================================

Block 0xe88
[0xe88:0x100f]
---
Predecessors: [0x1289]
Successors: [0x1010]
---
0xe88 JUMPDEST
0xe89 PUSH1 0x0
0xe8b DUP15
0xe8c DUP15
0xe8d DUP15
0xe8e DUP15
0xe8f DUP15
0xe90 DUP15
0xe91 DUP15
0xe92 DUP15
0xe93 PUSH1 0x40
0xe95 MLOAD
0xe96 DUP1
0xe97 DUP10
0xe98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xead AND
0xeae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec3 AND
0xec4 PUSH13 0x1000000000000000000000000
0xed2 MUL
0xed3 DUP2
0xed4 MSTORE
0xed5 PUSH1 0x14
0xed7 ADD
0xed8 DUP9
0xed9 DUP2
0xeda MSTORE
0xedb PUSH1 0x20
0xedd ADD
0xede DUP8
0xedf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef4 AND
0xef5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0a AND
0xf0b PUSH13 0x1000000000000000000000000
0xf19 MUL
0xf1a DUP2
0xf1b MSTORE
0xf1c PUSH1 0x14
0xf1e ADD
0xf1f DUP7
0xf20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf35 AND
0xf36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4b AND
0xf4c PUSH13 0x1000000000000000000000000
0xf5a MUL
0xf5b DUP2
0xf5c MSTORE
0xf5d PUSH1 0x14
0xf5f ADD
0xf60 DUP6
0xf61 DUP2
0xf62 MSTORE
0xf63 PUSH1 0x20
0xf65 ADD
0xf66 DUP5
0xf67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7c AND
0xf7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf92 AND
0xf93 PUSH13 0x1000000000000000000000000
0xfa1 MUL
0xfa2 DUP2
0xfa3 MSTORE
0xfa4 PUSH1 0x14
0xfa6 ADD
0xfa7 DUP4
0xfa8 DUP2
0xfa9 MSTORE
0xfaa PUSH1 0x20
0xfac ADD
0xfad DUP3
0xfae DUP2
0xfaf MSTORE
0xfb0 PUSH1 0x20
0xfb2 ADD
0xfb3 SWAP9
0xfb4 POP
0xfb5 POP
0xfb6 POP
0xfb7 POP
0xfb8 POP
0xfb9 POP
0xfba POP
0xfbb POP
0xfbc POP
0xfbd PUSH1 0x40
0xfbf MLOAD
0xfc0 DUP1
0xfc1 SWAP2
0xfc2 SUB
0xfc3 SWAP1
0xfc4 SHA3
0xfc5 SWAP3
0xfc6 POP
0xfc7 PUSH1 0x40
0xfc9 DUP1
0xfca MLOAD
0xfcb SWAP1
0xfcc DUP2
0xfcd ADD
0xfce PUSH1 0x40
0xfd0 MSTORE
0xfd1 DUP1
0xfd2 PUSH1 0x1c
0xfd4 DUP2
0xfd5 MSTORE
0xfd6 PUSH1 0x20
0xfd8 ADD
0xfd9 PUSH32 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0xffa DUP2
0xffb MSTORE
0xffc POP
0xffd SWAP2
0xffe POP
0xfff DUP2
0x1000 DUP4
0x1001 PUSH1 0x40
0x1003 MLOAD
0x1004 DUP1
0x1005 DUP4
0x1006 DUP1
0x1007 MLOAD
0x1008 SWAP1
0x1009 PUSH1 0x20
0x100b ADD
0x100c SWAP1
0x100d DUP1
0x100e DUP4
0x100f DUP4
---
0xe88: JUMPDEST 
0xe89: V751 = 0x0
0xe93: V752 = 0x40
0xe95: V753 = M[0x40]
0xe98: V754 = 0xffffffffffffffffffffffffffffffffffffffff
0xead: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff S13
0xeae: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xec3: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0xec4: V758 = 0x1000000000000000000000000
0xed2: V759 = MUL 0x1000000000000000000000000 V757
0xed4: M[V753] = V759
0xed5: V760 = 0x14
0xed7: V761 = ADD 0x14 V753
0xeda: M[V761] = S12
0xedb: V762 = 0x20
0xedd: V763 = ADD 0x20 V761
0xedf: V764 = 0xffffffffffffffffffffffffffffffffffffffff
0xef4: V765 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xef5: V766 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0a: V767 = AND 0xffffffffffffffffffffffffffffffffffffffff V765
0xf0b: V768 = 0x1000000000000000000000000
0xf19: V769 = MUL 0x1000000000000000000000000 V767
0xf1b: M[V763] = V769
0xf1c: V770 = 0x14
0xf1e: V771 = ADD 0x14 V763
0xf20: V772 = 0xffffffffffffffffffffffffffffffffffffffff
0xf35: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0xf36: V774 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4b: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V773
0xf4c: V776 = 0x1000000000000000000000000
0xf5a: V777 = MUL 0x1000000000000000000000000 V775
0xf5c: M[V771] = V777
0xf5d: V778 = 0x14
0xf5f: V779 = ADD 0x14 V771
0xf62: M[V779] = S9
0xf63: V780 = 0x20
0xf65: V781 = ADD 0x20 V779
0xf67: V782 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7c: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xf7d: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xf92: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0xf93: V786 = 0x1000000000000000000000000
0xfa1: V787 = MUL 0x1000000000000000000000000 V785
0xfa3: M[V781] = V787
0xfa4: V788 = 0x14
0xfa6: V789 = ADD 0x14 V781
0xfa9: M[V789] = S7
0xfaa: V790 = 0x20
0xfac: V791 = ADD 0x20 V789
0xfaf: M[V791] = S6
0xfb0: V792 = 0x20
0xfb2: V793 = ADD 0x20 V791
0xfbd: V794 = 0x40
0xfbf: V795 = M[0x40]
0xfc2: V796 = SUB V793 V795
0xfc4: V797 = SHA3 V795 V796
0xfc7: V798 = 0x40
0xfca: V799 = M[0x40]
0xfcd: V800 = ADD V799 0x40
0xfce: V801 = 0x40
0xfd0: M[0x40] = V800
0xfd2: V802 = 0x1c
0xfd5: M[V799] = 0x1c
0xfd6: V803 = 0x20
0xfd8: V804 = ADD 0x20 V799
0xfd9: V805 = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0xffb: M[V804] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x1001: V806 = 0x40
0x1003: V807 = M[0x40]
0x1007: V808 = M[V799]
0x1009: V809 = 0x20
0x100b: V810 = ADD 0x20 V799
---
Entry stack: [V7, {0x126, 0x245}, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x0, {0x4c4, 0xc32}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x0, V988]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V797, V799, 0x0, V799, V797, V807, V807, V810, V808, V808, V807, V810]
Exit stack: [V7, {0x126, 0x245}, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x0, {0x4c4, 0xc32}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V797, V799, 0x0, V799, V797, V807, V807, V810, V808, V808, V807, V810]

================================

Block 0x1010
[0x1010:0x101a]
---
Predecessors: [0xe88, 0x101b]
Successors: [0x101b, 0x1035]
---
0x1010 JUMPDEST
0x1011 PUSH1 0x20
0x1013 DUP4
0x1014 LT
0x1015 ISZERO
0x1016 ISZERO
0x1017 PUSH2 0x1035
0x101a JUMPI
---
0x1010: JUMPDEST 
0x1011: V811 = 0x20
0x1014: V812 = LT S2 0x20
0x1015: V813 = ISZERO V812
0x1016: V814 = ISZERO V813
0x1017: V815 = 0x1035
0x101a: JUMPI 0x1035 V814
---
Entry stack: [V7, {0x126, 0x245}, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x4c4, 0xc32}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, {0x126, 0x245}, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x4c4, 0xc32}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x101b
[0x101b:0x1034]
---
Predecessors: [0x1010]
Successors: [0x1010]
---
0x101b DUP1
0x101c MLOAD
0x101d DUP3
0x101e MSTORE
0x101f PUSH1 0x20
0x1021 DUP3
0x1022 ADD
0x1023 SWAP2
0x1024 POP
0x1025 PUSH1 0x20
0x1027 DUP2
0x1028 ADD
0x1029 SWAP1
0x102a POP
0x102b PUSH1 0x20
0x102d DUP4
0x102e SUB
0x102f SWAP3
0x1030 POP
0x1031 PUSH2 0x1010
0x1034 JUMP
---
0x101c: V816 = M[S0]
0x101e: M[S1] = V816
0x101f: V817 = 0x20
0x1022: V818 = ADD S1 0x20
0x1025: V819 = 0x20
0x1028: V820 = ADD S0 0x20
0x102b: V821 = 0x20
0x102e: V822 = SUB S2 0x20
0x1031: V823 = 0x1010
0x1034: JUMP 0x1010
---
Entry stack: [V7, {0x126, 0x245}, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x4c4, 0xc32}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V822, V818, V820]
Exit stack: [V7, {0x126, 0x245}, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x4c4, 0xc32}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, V822, V818, V820]

================================

Block 0x1035
[0x1035:0x1103]
---
Predecessors: [0x1010]
Successors: [0x1104, 0x1108]
---
0x1035 JUMPDEST
0x1036 PUSH1 0x1
0x1038 DUP4
0x1039 PUSH1 0x20
0x103b SUB
0x103c PUSH2 0x100
0x103f EXP
0x1040 SUB
0x1041 DUP1
0x1042 NOT
0x1043 DUP3
0x1044 MLOAD
0x1045 AND
0x1046 DUP2
0x1047 DUP5
0x1048 MLOAD
0x1049 AND
0x104a DUP1
0x104b DUP3
0x104c OR
0x104d DUP6
0x104e MSTORE
0x104f POP
0x1050 POP
0x1051 POP
0x1052 POP
0x1053 POP
0x1054 POP
0x1055 SWAP1
0x1056 POP
0x1057 ADD
0x1058 DUP3
0x1059 PUSH1 0x0
0x105b NOT
0x105c AND
0x105d PUSH1 0x0
0x105f NOT
0x1060 AND
0x1061 DUP2
0x1062 MSTORE
0x1063 PUSH1 0x20
0x1065 ADD
0x1066 SWAP3
0x1067 POP
0x1068 POP
0x1069 POP
0x106a PUSH1 0x40
0x106c MLOAD
0x106d DUP1
0x106e SWAP2
0x106f SUB
0x1070 SWAP1
0x1071 SHA3
0x1072 SWAP1
0x1073 POP
0x1074 DUP15
0x1075 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108a AND
0x108b PUSH1 0x1
0x108d DUP3
0x108e DUP10
0x108f DUP10
0x1090 DUP10
0x1091 PUSH1 0x40
0x1093 MLOAD
0x1094 PUSH1 0x0
0x1096 DUP2
0x1097 MSTORE
0x1098 PUSH1 0x20
0x109a ADD
0x109b PUSH1 0x40
0x109d MSTORE
0x109e PUSH1 0x0
0x10a0 PUSH1 0x40
0x10a2 MLOAD
0x10a3 PUSH1 0x20
0x10a5 ADD
0x10a6 MSTORE
0x10a7 PUSH1 0x40
0x10a9 MLOAD
0x10aa DUP1
0x10ab DUP6
0x10ac PUSH1 0x0
0x10ae NOT
0x10af AND
0x10b0 PUSH1 0x0
0x10b2 NOT
0x10b3 AND
0x10b4 DUP2
0x10b5 MSTORE
0x10b6 PUSH1 0x20
0x10b8 ADD
0x10b9 DUP5
0x10ba PUSH1 0xff
0x10bc AND
0x10bd PUSH1 0xff
0x10bf AND
0x10c0 DUP2
0x10c1 MSTORE
0x10c2 PUSH1 0x20
0x10c4 ADD
0x10c5 DUP4
0x10c6 PUSH1 0x0
0x10c8 NOT
0x10c9 AND
0x10ca PUSH1 0x0
0x10cc NOT
0x10cd AND
0x10ce DUP2
0x10cf MSTORE
0x10d0 PUSH1 0x20
0x10d2 ADD
0x10d3 DUP3
0x10d4 PUSH1 0x0
0x10d6 NOT
0x10d7 AND
0x10d8 PUSH1 0x0
0x10da NOT
0x10db AND
0x10dc DUP2
0x10dd MSTORE
0x10de PUSH1 0x20
0x10e0 ADD
0x10e1 SWAP5
0x10e2 POP
0x10e3 POP
0x10e4 POP
0x10e5 POP
0x10e6 POP
0x10e7 PUSH1 0x20
0x10e9 PUSH1 0x40
0x10eb MLOAD
0x10ec PUSH1 0x20
0x10ee DUP2
0x10ef SUB
0x10f0 SWAP1
0x10f1 DUP1
0x10f2 DUP5
0x10f3 SUB
0x10f4 SWAP1
0x10f5 PUSH1 0x0
0x10f7 DUP7
0x10f8 PUSH2 0x646e
0x10fb GAS
0x10fc SUB
0x10fd CALL
0x10fe ISZERO
0x10ff ISZERO
0x1100 PUSH2 0x1108
0x1103 JUMPI
---
0x1035: JUMPDEST 
0x1036: V824 = 0x1
0x1039: V825 = 0x20
0x103b: V826 = SUB 0x20 S2
0x103c: V827 = 0x100
0x103f: V828 = EXP 0x100 V826
0x1040: V829 = SUB V828 0x1
0x1042: V830 = NOT V829
0x1044: V831 = M[S0]
0x1045: V832 = AND V831 V830
0x1048: V833 = M[S1]
0x1049: V834 = AND V833 V829
0x104c: V835 = OR V832 V834
0x104e: M[S1] = V835
0x1057: V836 = ADD S3 S5
0x1059: V837 = 0x0
0x105b: V838 = NOT 0x0
0x105c: V839 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S7
0x105d: V840 = 0x0
0x105f: V841 = NOT 0x0
0x1060: V842 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V839
0x1062: M[V836] = V842
0x1063: V843 = 0x20
0x1065: V844 = ADD 0x20 V836
0x106a: V845 = 0x40
0x106c: V846 = M[0x40]
0x106f: V847 = SUB V844 V846
0x1071: V848 = SHA3 V846 V847
0x1075: V849 = 0xffffffffffffffffffffffffffffffffffffffff
0x108a: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff S23
0x108b: V851 = 0x1
0x1091: V852 = 0x40
0x1093: V853 = M[0x40]
0x1094: V854 = 0x0
0x1097: M[V853] = 0x0
0x1098: V855 = 0x20
0x109a: V856 = ADD 0x20 V853
0x109b: V857 = 0x40
0x109d: M[0x40] = V856
0x109e: V858 = 0x0
0x10a0: V859 = 0x40
0x10a2: V860 = M[0x40]
0x10a3: V861 = 0x20
0x10a5: V862 = ADD 0x20 V860
0x10a6: M[V862] = 0x0
0x10a7: V863 = 0x40
0x10a9: V864 = M[0x40]
0x10ac: V865 = 0x0
0x10ae: V866 = NOT 0x0
0x10af: V867 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V848
0x10b0: V868 = 0x0
0x10b2: V869 = NOT 0x0
0x10b3: V870 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V867
0x10b5: M[V864] = V870
0x10b6: V871 = 0x20
0x10b8: V872 = ADD 0x20 V864
0x10ba: V873 = 0xff
0x10bc: V874 = AND 0xff S15
0x10bd: V875 = 0xff
0x10bf: V876 = AND 0xff V874
0x10c1: M[V872] = V876
0x10c2: V877 = 0x20
0x10c4: V878 = ADD 0x20 V872
0x10c6: V879 = 0x0
0x10c8: V880 = NOT 0x0
0x10c9: V881 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S14
0x10ca: V882 = 0x0
0x10cc: V883 = NOT 0x0
0x10cd: V884 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V881
0x10cf: M[V878] = V884
0x10d0: V885 = 0x20
0x10d2: V886 = ADD 0x20 V878
0x10d4: V887 = 0x0
0x10d6: V888 = NOT 0x0
0x10d7: V889 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S13
0x10d8: V890 = 0x0
0x10da: V891 = NOT 0x0
0x10db: V892 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V889
0x10dd: M[V886] = V892
0x10de: V893 = 0x20
0x10e0: V894 = ADD 0x20 V886
0x10e7: V895 = 0x20
0x10e9: V896 = 0x40
0x10eb: V897 = M[0x40]
0x10ec: V898 = 0x20
0x10ef: V899 = SUB V897 0x20
0x10f3: V900 = SUB V894 V897
0x10f5: V901 = 0x0
0x10f8: V902 = 0x646e
0x10fb: V903 = GAS
0x10fc: V904 = SUB V903 0x646e
0x10fd: V905 = CALL V904 0x1 0x0 V897 V900 V899 0x20
0x10fe: V906 = ISZERO V905
0x10ff: V907 = ISZERO V906
0x1100: V908 = 0x1108
0x1103: JUMPI 0x1108 V907
---
Entry stack: [V7, {0x126, 0x245}, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x4c4, 0xc32}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 24
Stack additions: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V848, V850, 0x1, V894]
Exit stack: [V7, {0x126, 0x245}, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x4c4, 0xc32}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, V848, V850, 0x1, V894]

================================

Block 0x1104
[0x1104:0x1107]
---
Predecessors: [0x1035]
Successors: []
---
0x1104 PUSH1 0x0
0x1106 DUP1
0x1107 REVERT
---
0x1104: V909 = 0x0
0x1107: REVERT 0x0 0x0
---
Entry stack: [V7, {0x126, 0x245}, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x0, {0x4c4, 0xc32}, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, V848, V850, 0x1, V894]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x0, {0x4c4, 0xc32}, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, V848, V850, 0x1, V894]

================================

Block 0x1108
[0x1108:0x112e]
---
Predecessors: [0x1035]
Successors: [0x112f, 0x1133]
---
0x1108 JUMPDEST
0x1109 POP
0x110a POP
0x110b PUSH1 0x20
0x110d PUSH1 0x40
0x110f MLOAD
0x1110 SUB
0x1111 MLOAD
0x1112 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1127 AND
0x1128 EQ
0x1129 ISZERO
0x112a ISZERO
0x112b PUSH2 0x1133
0x112e JUMPI
---
0x1108: JUMPDEST 
0x110b: V910 = 0x20
0x110d: V911 = 0x40
0x110f: V912 = M[0x40]
0x1110: V913 = SUB V912 0x20
0x1111: V914 = M[V913]
0x1112: V915 = 0xffffffffffffffffffffffffffffffffffffffff
0x1127: V916 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0x1128: V917 = EQ V916 V850
0x1129: V918 = ISZERO V917
0x112a: V919 = ISZERO V918
0x112b: V920 = 0x1133
0x112e: JUMPI 0x1133 V919
---
Entry stack: [V7, {0x126, 0x245}, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x0, {0x4c4, 0xc32}, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, V848, V850, 0x1, V894]
Stack pops: 3
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x0, {0x4c4, 0xc32}, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, V848]

================================

Block 0x112f
[0x112f:0x1132]
---
Predecessors: [0x1108]
Successors: []
---
0x112f PUSH1 0x0
0x1131 DUP1
0x1132 REVERT
---
0x112f: V921 = 0x0
0x1132: REVERT 0x0 0x0
---
Entry stack: [V7, {0x126, 0x245}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x0, {0x4c4, 0xc32}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x0, {0x4c4, 0xc32}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]

================================

Block 0x1133
[0x1133:0x1147]
---
Predecessors: [0x1108]
Successors: [0x4c4, 0xc32]
---
0x1133 JUMPDEST
0x1134 DUP3
0x1135 SWAP4
0x1136 POP
0x1137 POP
0x1138 POP
0x1139 POP
0x113a SWAP12
0x113b SWAP11
0x113c POP
0x113d POP
0x113e POP
0x113f POP
0x1140 POP
0x1141 POP
0x1142 POP
0x1143 POP
0x1144 POP
0x1145 POP
0x1146 POP
0x1147 JUMP
---
0x1133: JUMPDEST 
0x1147: JUMP {0x4c4, 0xc32}
---
Entry stack: [V7, {0x126, 0x245}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x0, {0x4c4, 0xc32}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 16
Stack additions: [S2]
Exit stack: [V7, {0x126, 0x245}, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x0, S2]

================================

Block 0x1148
[0x1148:0x1224]
---
Predecessors: [0x647, 0x125b, 0x1270]
Successors: [0x1225, 0x1229]
---
0x1148 JUMPDEST
0x1149 PUSH1 0x0
0x114b DUP2
0x114c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1161 AND
0x1162 PUSH4 0x23b872dd
0x1167 DUP7
0x1168 DUP7
0x1169 DUP7
0x116a PUSH1 0x0
0x116c PUSH1 0x40
0x116e MLOAD
0x116f PUSH1 0x20
0x1171 ADD
0x1172 MSTORE
0x1173 PUSH1 0x40
0x1175 MLOAD
0x1176 DUP5
0x1177 PUSH4 0xffffffff
0x117c AND
0x117d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x119b MUL
0x119c DUP2
0x119d MSTORE
0x119e PUSH1 0x4
0x11a0 ADD
0x11a1 DUP1
0x11a2 DUP5
0x11a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b8 AND
0x11b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ce AND
0x11cf DUP2
0x11d0 MSTORE
0x11d1 PUSH1 0x20
0x11d3 ADD
0x11d4 DUP4
0x11d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ea AND
0x11eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1200 AND
0x1201 DUP2
0x1202 MSTORE
0x1203 PUSH1 0x20
0x1205 ADD
0x1206 DUP3
0x1207 DUP2
0x1208 MSTORE
0x1209 PUSH1 0x20
0x120b ADD
0x120c SWAP4
0x120d POP
0x120e POP
0x120f POP
0x1210 POP
0x1211 PUSH1 0x20
0x1213 PUSH1 0x40
0x1215 MLOAD
0x1216 DUP1
0x1217 DUP4
0x1218 SUB
0x1219 DUP2
0x121a PUSH1 0x0
0x121c DUP8
0x121d DUP1
0x121e EXTCODESIZE
0x121f ISZERO
0x1220 ISZERO
0x1221 PUSH2 0x1229
0x1224 JUMPI
---
0x1148: JUMPDEST 
0x1149: V922 = 0x0
0x114c: V923 = 0xffffffffffffffffffffffffffffffffffffffff
0x1161: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1162: V925 = 0x23b872dd
0x116a: V926 = 0x0
0x116c: V927 = 0x40
0x116e: V928 = M[0x40]
0x116f: V929 = 0x20
0x1171: V930 = ADD 0x20 V928
0x1172: M[V930] = 0x0
0x1173: V931 = 0x40
0x1175: V932 = M[0x40]
0x1177: V933 = 0xffffffff
0x117c: V934 = AND 0xffffffff 0x23b872dd
0x117d: V935 = 0x100000000000000000000000000000000000000000000000000000000
0x119b: V936 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x119d: M[V932] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x119e: V937 = 0x4
0x11a0: V938 = ADD 0x4 V932
0x11a3: V939 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b8: V940 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x11b9: V941 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ce: V942 = AND 0xffffffffffffffffffffffffffffffffffffffff V940
0x11d0: M[V938] = V942
0x11d1: V943 = 0x20
0x11d3: V944 = ADD 0x20 V938
0x11d5: V945 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ea: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x11eb: V947 = 0xffffffffffffffffffffffffffffffffffffffff
0x1200: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0x1202: M[V944] = V948
0x1203: V949 = 0x20
0x1205: V950 = ADD 0x20 V944
0x1208: M[V950] = S1
0x1209: V951 = 0x20
0x120b: V952 = ADD 0x20 V950
0x1211: V953 = 0x20
0x1213: V954 = 0x40
0x1215: V955 = M[0x40]
0x1218: V956 = SUB V952 V955
0x121a: V957 = 0x0
0x121e: V958 = EXTCODESIZE V924
0x121f: V959 = ISZERO V958
0x1220: V960 = ISZERO V959
0x1221: V961 = 0x1229
0x1224: JUMPI 0x1229 V960
---
Entry stack: [V7, {0x126, 0x245}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x685, 0x1269, 0x127c}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, V924, 0x23b872dd, V952, 0x20, V955, V956, V955, 0x0, V924]
Exit stack: [V7, {0x126, 0x245}, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x685, 0x1269, 0x127c}, S3, S2, S1, S0, 0x0, V924, 0x23b872dd, V952, 0x20, V955, V956, V955, 0x0, V924]

================================

Block 0x1225
[0x1225:0x1228]
---
Predecessors: [0x1148]
Successors: []
---
0x1225 PUSH1 0x0
0x1227 DUP1
0x1228 REVERT
---
0x1225: V962 = 0x0
0x1228: REVERT 0x0 0x0
---
Entry stack: [V7, {0x126, 0x245}, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x685, 0x1269, 0x127c}, S13, S12, S11, S10, 0x0, V924, 0x23b872dd, V952, 0x20, V955, V956, V955, 0x0, V924]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x685, 0x1269, 0x127c}, S13, S12, S11, S10, 0x0, V924, 0x23b872dd, V952, 0x20, V955, V956, V955, 0x0, V924]

================================

Block 0x1229
[0x1229:0x1235]
---
Predecessors: [0x1148]
Successors: [0x1236, 0x123a]
---
0x1229 JUMPDEST
0x122a PUSH2 0x2c6
0x122d GAS
0x122e SUB
0x122f CALL
0x1230 ISZERO
0x1231 ISZERO
0x1232 PUSH2 0x123a
0x1235 JUMPI
---
0x1229: JUMPDEST 
0x122a: V963 = 0x2c6
0x122d: V964 = GAS
0x122e: V965 = SUB V964 0x2c6
0x122f: V966 = CALL V965 V924 0x0 V955 V956 V955 0x20
0x1230: V967 = ISZERO V966
0x1231: V968 = ISZERO V967
0x1232: V969 = 0x123a
0x1235: JUMPI 0x123a V968
---
Entry stack: [V7, {0x126, 0x245}, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x685, 0x1269, 0x127c}, S13, S12, S11, S10, 0x0, V924, 0x23b872dd, V952, 0x20, V955, V956, V955, 0x0, V924]
Stack pops: 6
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x685, 0x1269, 0x127c}, S13, S12, S11, S10, 0x0, V924, 0x23b872dd, V952]

================================

Block 0x1236
[0x1236:0x1239]
---
Predecessors: [0x1229]
Successors: []
---
0x1236 PUSH1 0x0
0x1238 DUP1
0x1239 REVERT
---
0x1236: V970 = 0x0
0x1239: REVERT 0x0 0x0
---
Entry stack: [V7, {0x126, 0x245}, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x685, 0x1269, 0x127c}, S7, S6, S5, S4, 0x0, S2, 0x23b872dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x685, 0x1269, 0x127c}, S7, S6, S5, S4, 0x0, S2, 0x23b872dd, S0]

================================

Block 0x123a
[0x123a:0x124a]
---
Predecessors: [0x1229]
Successors: [0x124b, 0x124f]
---
0x123a JUMPDEST
0x123b POP
0x123c POP
0x123d POP
0x123e PUSH1 0x40
0x1240 MLOAD
0x1241 DUP1
0x1242 MLOAD
0x1243 SWAP1
0x1244 POP
0x1245 ISZERO
0x1246 ISZERO
0x1247 PUSH2 0x124f
0x124a JUMPI
---
0x123a: JUMPDEST 
0x123e: V971 = 0x40
0x1240: V972 = M[0x40]
0x1242: V973 = M[V972]
0x1245: V974 = ISZERO V973
0x1246: V975 = ISZERO V974
0x1247: V976 = 0x124f
0x124a: JUMPI 0x124f V975
---
Entry stack: [V7, {0x126, 0x245}, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x685, 0x1269, 0x127c}, S7, S6, S5, S4, 0x0, S2, 0x23b872dd, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x685, 0x1269, 0x127c}, S7, S6, S5, S4, 0x0]

================================

Block 0x124b
[0x124b:0x124e]
---
Predecessors: [0x123a]
Successors: []
---
0x124b PUSH1 0x0
0x124d DUP1
0x124e REVERT
---
0x124b: V977 = 0x0
0x124e: REVERT 0x0 0x0
---
Entry stack: [V7, {0x126, 0x245}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x685, 0x1269, 0x127c}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x685, 0x1269, 0x127c}, S4, S3, S2, S1, 0x0]

================================

Block 0x124f
[0x124f:0x125a]
---
Predecessors: [0x123a]
Successors: [0x685, 0x1269, 0x127c]
---
0x124f JUMPDEST
0x1250 PUSH1 0x1
0x1252 SWAP1
0x1253 POP
0x1254 SWAP5
0x1255 SWAP4
0x1256 POP
0x1257 POP
0x1258 POP
0x1259 POP
0x125a JUMP
---
0x124f: JUMPDEST 
0x1250: V978 = 0x1
0x125a: JUMP {0x685, 0x1269, 0x127c}
---
Entry stack: [V7, {0x126, 0x245}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x685, 0x1269, 0x127c}, S4, S3, S2, S1, 0x0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V7, {0x126, 0x245}, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x1]

================================

Block 0x125b
[0x125b:0x1268]
---
Predecessors: [0xa06]
Successors: [0x1148]
---
0x125b JUMPDEST
0x125c PUSH1 0x0
0x125e PUSH2 0x1269
0x1261 DUP8
0x1262 DUP6
0x1263 DUP9
0x1264 DUP9
0x1265 PUSH2 0x1148
0x1268 JUMP
---
0x125b: JUMPDEST 
0x125c: V979 = 0x0
0x125e: V980 = 0x1269
0x1265: V981 = 0x1148
0x1268: JUMP 0x1148
---
Entry stack: [V7, {0x126, 0x245}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0xa46, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x0, 0x1269, S5, S2, S4, S3]
Exit stack: [V7, {0x126, 0x245}, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0xa46, S5, S4, S3, S2, S1, S0, 0x0, 0x1269, S5, S2, S4, S3]

================================

Block 0x1269
[0x1269:0x126f]
---
Predecessors: [0x124f]
Successors: [0x1270, 0x127d]
---
0x1269 JUMPDEST
0x126a DUP1
0x126b ISZERO
0x126c PUSH2 0x127d
0x126f JUMPI
---
0x1269: JUMPDEST 
0x126b: V982 = ISZERO 0x1
0x126c: V983 = 0x127d
0x126f: JUMPI 0x127d 0x0
---
Entry stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x1270
[0x1270:0x127b]
---
Predecessors: [0x1269]
Successors: [0x1148]
---
0x1270 POP
0x1271 PUSH2 0x127c
0x1274 DUP5
0x1275 DUP9
0x1276 DUP6
0x1277 DUP6
0x1278 PUSH2 0x1148
0x127b JUMP
---
0x1271: V984 = 0x127c
0x1278: V985 = 0x1148
0x127b: JUMP 0x1148
---
Entry stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, 0x127c, S4, S7, S3, S2]
Exit stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x127c, S4, S7, S3, S2]

================================

Block 0x127c
[0x127c:0x127c]
---
Predecessors: [0x124f]
Successors: [0x127d]
---
0x127c JUMPDEST
---
0x127c: JUMPDEST 
---
Entry stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x127d
[0x127d:0x1288]
---
Predecessors: [0x1269, 0x127c]
Successors: [0xa46]
---
0x127d JUMPDEST
0x127e SWAP1
0x127f POP
0x1280 SWAP7
0x1281 SWAP6
0x1282 POP
0x1283 POP
0x1284 POP
0x1285 POP
0x1286 POP
0x1287 POP
0x1288 JUMP
---
0x127d: JUMPDEST 
0x1288: JUMP S8
---
Entry stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 9
Stack additions: [S0]
Exit stack: [V7, {0x126, 0x245}, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x1]

================================

Block 0x1289
[0x1289:0x129c]
---
Predecessors: [0xe7d]
Successors: [0xe88]
---
0x1289 JUMPDEST
0x128a PUSH1 0x20
0x128c PUSH1 0x40
0x128e MLOAD
0x128f SWAP1
0x1290 DUP2
0x1291 ADD
0x1292 PUSH1 0x40
0x1294 MSTORE
0x1295 DUP1
0x1296 PUSH1 0x0
0x1298 DUP2
0x1299 MSTORE
0x129a POP
0x129b SWAP1
0x129c JUMP
---
0x1289: JUMPDEST 
0x128a: V986 = 0x20
0x128c: V987 = 0x40
0x128e: V988 = M[0x40]
0x1291: V989 = ADD V988 0x20
0x1292: V990 = 0x40
0x1294: M[0x40] = V989
0x1296: V991 = 0x0
0x1299: M[V988] = 0x0
0x129c: JUMP 0xe88
---
Entry stack: [V7, {0x126, 0x245}, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x0, {0x4c4, 0xc32}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x0, 0xe88]
Stack pops: 1
Stack additions: [V988]
Exit stack: [V7, {0x126, 0x245}, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x0, {0x4c4, 0xc32}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x0, V988]

================================

Block 0x129d
[0x129d:0x12ca]
---
Predecessors: []
Successors: []
---
0x129d STOP
0x129e LOG1
0x129f PUSH6 0x627a7a723058
0x12a6 SHA3
0x12a7 DUP10
0x12a8 MISSING 0x4f
0x12a9 MISSING 0xbe
0x12aa MISSING 0xdb
0x12ab GASLIMIT
0x12ac CALLDATACOPY
0x12ad PUSH29 0xc944ff04fe9af7fca8f5ff2d6ff06934c223d8c8c836bd21a00029
---
0x129d: STOP 
0x129e: LOG S0 S1 S2
0x129f: V992 = 0x627a7a723058
0x12a6: V993 = SHA3 0x627a7a723058 S3
0x12a8: MISSING 0x4f
0x12a9: MISSING 0xbe
0x12aa: MISSING 0xdb
0x12ab: V994 = GASLIMIT
0x12ac: CALLDATACOPY V994 S0 S1
0x12ad: V995 = 0xc944ff04fe9af7fca8f5ff2d6ff06934c223d8c8c836bd21a00029
---
Entry stack: []
Stack pops: 0
Stack additions: [S12, V993, S4, S5, S6, S7, S8, S9, S10, S11, S12, 0xc944ff04fe9af7fca8f5ff2d6ff06934c223d8c8c836bd21a00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1d4d691d
Entry block: 0x53
Exit block: 0xa4d
Body: 0x53, 0x126, 0x245, 0x247, 0x27e, 0x2b9, 0x2bd, 0x393, 0x39c, 0x3d7, 0x3db, 0x4b1, 0x4c4, 0x4f4, 0x52f, 0x533, 0x609, 0x63f, 0x647, 0x685, 0x68c, 0x68d, 0x6c9, 0x6cd, 0x79a, 0x7d6, 0x7da, 0x8ac, 0x8b1, 0x8bc, 0x8f7, 0x8fb, 0x9d1, 0xa06, 0xa46, 0xa4d, 0xa4e, 0xb1b, 0xbed, 0xbee, 0xbef, 0x125b, 0x1269, 0x1270, 0x127c, 0x127d

Function 1:
Public function signature: 0x20158c44
Entry block: 0x128
Exit block: 0x14d
Body: 0x128, 0x12f, 0x133, 0x14d, 0xbfd

Function 2:
Public function signature: 0x66a26419
Entry block: 0x167
Exit block: 0x245
Body: 0x126, 0x167, 0x16e, 0x172, 0x245, 0xc1d, 0xc32, 0xc69, 0xc9d, 0xd9c, 0xe6e, 0xe6f

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x4f
Body: 0x4f

Function 4:
Private function
Entry block: 0xe7d
Exit block: 0x1133
Body: 0xe7d, 0xe88, 0x1010, 0x101b, 0x1035, 0x1108, 0x1133, 0x1289

Function 5:
Private function
Entry block: 0x1148
Exit block: 0x124f
Body: 0x1148, 0x1229, 0x123a, 0x124f

