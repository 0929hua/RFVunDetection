Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x75]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x75
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x75
0xa: JUMPI 0x75 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x7e]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x278ecde1
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x7e
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x278ecde1
0x39: V12 = EQ V10 0x278ecde1
0x3a: V13 = 0x7e
0x3d: JUMPI 0x7e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x96]
---
0x3e DUP1
0x3f PUSH4 0x43d726d6
0x44 EQ
0x45 PUSH2 0x96
0x48 JUMPI
---
0x3f: V14 = 0x43d726d6
0x44: V15 = EQ 0x43d726d6 V10
0x45: V16 = 0x96
0x48: JUMPI 0x96 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xab]
---
0x49 DUP1
0x4a PUSH4 0xb7b0422d
0x4f EQ
0x50 PUSH2 0xab
0x53 JUMPI
---
0x4a: V17 = 0xb7b0422d
0x4f: V18 = EQ 0xb7b0422d V10
0x50: V19 = 0xab
0x53: JUMPI 0xab V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xc3]
---
0x54 DUP1
0x55 PUSH4 0xcb4d11b7
0x5a EQ
0x5b PUSH2 0xc3
0x5e JUMPI
---
0x55: V20 = 0xcb4d11b7
0x5a: V21 = EQ 0xcb4d11b7 V10
0x5b: V22 = 0xc3
0x5e: JUMPI 0xc3 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0xfb]
---
0x5f DUP1
0x60 PUSH4 0xd0e30db0
0x65 EQ
0x66 PUSH2 0xfb
0x69 JUMPI
---
0x60: V23 = 0xd0e30db0
0x65: V24 = EQ 0xd0e30db0 V10
0x66: V25 = 0xfb
0x69: JUMPI 0xfb V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x105]
---
0x6a DUP1
0x6b PUSH4 0xd2514e84
0x70 EQ
0x71 PUSH2 0x105
0x74 JUMPI
---
0x6b: V26 = 0xd2514e84
0x70: V27 = EQ 0xd2514e84 V10
0x71: V28 = 0x105
0x74: JUMPI 0x105 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x0, 0x6a]
Successors: [0x79]
---
0x75 JUMPDEST
0x76 PUSH2 0x7c
---
0x75: JUMPDEST 
0x76: V29 = 0x7c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V10, 0x7c]

================================

Block 0x79
[0x79:0x79]
---
Predecessors: [0x75, 0x1b5, 0x1cd]
Successors: [0x7a]
---
0x79 JUMPDEST
---
0x79: JUMPDEST 
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x79]
Successors: [0x7c]
---
0x7a JUMPDEST
0x7b JUMP
---
0x7a: JUMPDEST 
0x7b: JUMP 0x7c
---
Entry stack: [V10, 0x7c]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: [0x7a, 0x1b2, 0x213, 0x33f]
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7e
[0x7e:0x84]
---
Predecessors: [0xb]
Successors: [0x85, 0x89]
---
0x7e JUMPDEST
0x7f CALLVALUE
0x80 ISZERO
0x81 PUSH2 0x89
0x84 JUMPI
---
0x7e: JUMPDEST 
0x7f: V30 = CALLVALUE
0x80: V31 = ISZERO V30
0x81: V32 = 0x89
0x84: JUMPI 0x89 V31
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x85
[0x85:0x88]
---
Predecessors: [0x7e]
Successors: []
---
0x85 PUSH1 0x0
0x87 DUP1
0x88 REVERT
---
0x85: V33 = 0x0
0x88: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x89
[0x89:0x93]
---
Predecessors: [0x7e]
Successors: [0x136]
---
0x89 JUMPDEST
0x8a PUSH2 0x7c
0x8d PUSH1 0x4
0x8f CALLDATALOAD
0x90 PUSH2 0x136
0x93 JUMP
---
0x89: JUMPDEST 
0x8a: V34 = 0x7c
0x8d: V35 = 0x4
0x8f: V36 = CALLDATALOAD 0x4
0x90: V37 = 0x136
0x93: JUMP 0x136
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c, V36]
Exit stack: [V10, 0x7c, V36]

================================

Block 0x94
[0x94:0x95]
---
Predecessors: []
Successors: []
---
0x94 JUMPDEST
0x95 STOP
---
0x94: JUMPDEST 
0x95: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x96
[0x96:0x9c]
---
Predecessors: [0x3e]
Successors: [0x9d, 0xa1]
---
0x96 JUMPDEST
0x97 CALLVALUE
0x98 ISZERO
0x99 PUSH2 0xa1
0x9c JUMPI
---
0x96: JUMPDEST 
0x97: V38 = CALLVALUE
0x98: V39 = ISZERO V38
0x99: V40 = 0xa1
0x9c: JUMPI 0xa1 V39
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9d
[0x9d:0xa0]
---
Predecessors: [0x96]
Successors: []
---
0x9d PUSH1 0x0
0x9f DUP1
0xa0 REVERT
---
0x9d: V41 = 0x0
0xa0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xa8]
---
Predecessors: [0x96]
Successors: [0x1b5]
---
0xa1 JUMPDEST
0xa2 PUSH2 0x7c
0xa5 PUSH2 0x1b5
0xa8 JUMP
---
0xa1: JUMPDEST 
0xa2: V42 = 0x7c
0xa5: V43 = 0x1b5
0xa8: JUMP 0x1b5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V10, 0x7c]

================================

Block 0xa9
[0xa9:0xaa]
---
Predecessors: []
Successors: []
---
0xa9 JUMPDEST
0xaa STOP
---
0xa9: JUMPDEST 
0xaa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xab
[0xab:0xb1]
---
Predecessors: [0x49]
Successors: [0xb2, 0xb6]
---
0xab JUMPDEST
0xac CALLVALUE
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xab: JUMPDEST 
0xac: V44 = CALLVALUE
0xad: V45 = ISZERO V44
0xae: V46 = 0xb6
0xb1: JUMPI 0xb6 V45
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xab]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V47 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0x20d]
---
0xb6 JUMPDEST
0xb7 PUSH2 0x7c
0xba PUSH1 0x4
0xbc CALLDATALOAD
0xbd PUSH2 0x20d
0xc0 JUMP
---
0xb6: JUMPDEST 
0xb7: V48 = 0x7c
0xba: V49 = 0x4
0xbc: V50 = CALLDATALOAD 0x4
0xbd: V51 = 0x20d
0xc0: JUMP 0x20d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c, V50]
Exit stack: [V10, 0x7c, V50]

================================

Block 0xc1
[0xc1:0xc2]
---
Predecessors: []
Successors: []
---
0xc1 JUMPDEST
0xc2 STOP
---
0xc1: JUMPDEST 
0xc2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc3
[0xc3:0xc9]
---
Predecessors: [0x54]
Successors: [0xca, 0xce]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 ISZERO
0xc6 PUSH2 0xce
0xc9 JUMPI
---
0xc3: JUMPDEST 
0xc4: V52 = CALLVALUE
0xc5: V53 = ISZERO V52
0xc6: V54 = 0xce
0xc9: JUMPI 0xce V53
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xca
[0xca:0xcd]
---
Predecessors: [0xc3]
Successors: []
---
0xca PUSH1 0x0
0xcc DUP1
0xcd REVERT
---
0xca: V55 = 0x0
0xcd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd8]
---
Predecessors: [0xc3]
Successors: [0x216]
---
0xce JUMPDEST
0xcf PUSH2 0xd9
0xd2 PUSH1 0x4
0xd4 CALLDATALOAD
0xd5 PUSH2 0x216
0xd8 JUMP
---
0xce: JUMPDEST 
0xcf: V56 = 0xd9
0xd2: V57 = 0x4
0xd4: V58 = CALLDATALOAD 0x4
0xd5: V59 = 0x216
0xd8: JUMP 0x216
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd9, V58]
Exit stack: [V10, 0xd9, V58]

================================

Block 0xd9
[0xd9:0xfa]
---
Predecessors: [0x235]
Successors: []
---
0xd9 JUMPDEST
0xda PUSH1 0x40
0xdc MLOAD
0xdd PUSH1 0x1
0xdf PUSH1 0xa0
0xe1 PUSH1 0x2
0xe3 EXP
0xe4 SUB
0xe5 SWAP1
0xe6 SWAP3
0xe7 AND
0xe8 DUP3
0xe9 MSTORE
0xea PUSH1 0x20
0xec DUP3
0xed ADD
0xee MSTORE
0xef PUSH1 0x40
0xf1 SWAP1
0xf2 DUP2
0xf3 ADD
0xf4 SWAP1
0xf5 MLOAD
0xf6 DUP1
0xf7 SWAP2
0xf8 SUB
0xf9 SWAP1
0xfa RETURN
---
0xd9: JUMPDEST 
0xda: V60 = 0x40
0xdc: V61 = M[0x40]
0xdd: V62 = 0x1
0xdf: V63 = 0xa0
0xe1: V64 = 0x2
0xe3: V65 = EXP 0x2 0xa0
0xe4: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7: V67 = AND V216 0xffffffffffffffffffffffffffffffffffffffff
0xe9: M[V61] = V67
0xea: V68 = 0x20
0xed: V69 = ADD V61 0x20
0xee: M[V69] = V210
0xef: V70 = 0x40
0xf3: V71 = ADD 0x40 V61
0xf5: V72 = M[0x40]
0xf8: V73 = SUB V71 V72
0xfa: RETURN V72 V73
---
Entry stack: [V10, 0xd9, V216, V210]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xd9]

================================

Block 0xfb
[0xfb:0x102]
---
Predecessors: [0x5f]
Successors: [0x24e]
---
0xfb JUMPDEST
0xfc PUSH2 0x7c
0xff PUSH2 0x24e
0x102 JUMP
---
0xfb: JUMPDEST 
0xfc: V74 = 0x7c
0xff: V75 = 0x24e
0x102: JUMP 0x24e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V10, 0x7c]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: []
Successors: []
---
0x103 JUMPDEST
0x104 STOP
---
0x103: JUMPDEST 
0x104: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x105
[0x105:0x10b]
---
Predecessors: [0x6a]
Successors: [0x10c, 0x110]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x105: JUMPDEST 
0x106: V76 = CALLVALUE
0x107: V77 = ISZERO V76
0x108: V78 = 0x110
0x10b: JUMPI 0x110 V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x105]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V79 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x110
[0x110:0x123]
---
Predecessors: [0x105]
Successors: [0x342]
---
0x110 JUMPDEST
0x111 PUSH2 0x124
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c PUSH1 0x4
0x11e CALLDATALOAD
0x11f AND
0x120 PUSH2 0x342
0x123 JUMP
---
0x110: JUMPDEST 
0x111: V80 = 0x124
0x114: V81 = 0x1
0x116: V82 = 0xa0
0x118: V83 = 0x2
0x11a: V84 = EXP 0x2 0xa0
0x11b: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V86 = 0x4
0x11e: V87 = CALLDATALOAD 0x4
0x11f: V88 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x120: V89 = 0x342
0x123: JUMP 0x342
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x124, V88]
Exit stack: [V10, 0x124, V88]

================================

Block 0x124
[0x124:0x135]
---
Predecessors: [0x342]
Successors: []
---
0x124 JUMPDEST
0x125 PUSH1 0x40
0x127 MLOAD
0x128 SWAP1
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e PUSH1 0x40
0x130 MLOAD
0x131 DUP1
0x132 SWAP2
0x133 SUB
0x134 SWAP1
0x135 RETURN
---
0x124: JUMPDEST 
0x125: V90 = 0x40
0x127: V91 = M[0x40]
0x12a: M[V91] = V312
0x12b: V92 = 0x20
0x12d: V93 = ADD 0x20 V91
0x12e: V94 = 0x40
0x130: V95 = M[0x40]
0x133: V96 = SUB V93 V95
0x135: RETURN V95 V96
---
Entry stack: [V10, 0x124, V312]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x124]

================================

Block 0x136
[0x136:0x142]
---
Predecessors: [0x89]
Successors: [0x143, 0x14b]
---
0x136 JUMPDEST
0x137 PUSH1 0x1
0x139 SLOAD
0x13a TIMESTAMP
0x13b LT
0x13c ISZERO
0x13d DUP1
0x13e ISZERO
0x13f PUSH2 0x14b
0x142 JUMPI
---
0x136: JUMPDEST 
0x137: V97 = 0x1
0x139: V98 = S[0x1]
0x13a: V99 = TIMESTAMP
0x13b: V100 = LT V99 V98
0x13c: V101 = ISZERO V100
0x13e: V102 = ISZERO V101
0x13f: V103 = 0x14b
0x142: JUMPI 0x14b V102
---
Entry stack: [V10, 0x7c, V36]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V10, 0x7c, V36, V101]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x136]
Successors: [0x14b]
---
0x143 POP
0x144 PUSH1 0x0
0x146 SLOAD
0x147 PUSH1 0xff
0x149 AND
0x14a ISZERO
---
0x144: V104 = 0x0
0x146: V105 = S[0x0]
0x147: V106 = 0xff
0x149: V107 = AND 0xff V105
0x14a: V108 = ISZERO V107
---
Entry stack: [V10, 0x7c, V36, V101]
Stack pops: 1
Stack additions: [V108]
Exit stack: [V10, 0x7c, V36, V108]

================================

Block 0x14b
[0x14b:0x150]
---
Predecessors: [0x136, 0x143]
Successors: [0x151, 0x1af]
---
0x14b JUMPDEST
0x14c ISZERO
0x14d PUSH2 0x1af
0x150 JUMPI
---
0x14b: JUMPDEST 
0x14c: V109 = ISZERO S0
0x14d: V110 = 0x1af
0x150: JUMPI 0x1af V109
---
Entry stack: [V10, 0x7c, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7c, V36]

================================

Block 0x151
[0x151:0x173]
---
Predecessors: [0x14b]
Successors: [0x174, 0x179]
---
0x151 PUSH1 0x1
0x153 PUSH1 0xa0
0x155 PUSH1 0x2
0x157 EXP
0x158 SUB
0x159 CALLER
0x15a AND
0x15b PUSH1 0x0
0x15d SWAP1
0x15e DUP2
0x15f MSTORE
0x160 PUSH1 0x4
0x162 PUSH1 0x20
0x164 MSTORE
0x165 PUSH1 0x40
0x167 SWAP1
0x168 SHA3
0x169 SLOAD
0x16a DUP2
0x16b SWAP1
0x16c LT
0x16d DUP1
0x16e ISZERO
0x16f SWAP1
0x170 PUSH2 0x179
0x173 JUMPI
---
0x151: V111 = 0x1
0x153: V112 = 0xa0
0x155: V113 = 0x2
0x157: V114 = EXP 0x2 0xa0
0x158: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V116 = CALLER
0x15a: V117 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V118 = 0x0
0x15f: M[0x0] = V117
0x160: V119 = 0x4
0x162: V120 = 0x20
0x164: M[0x20] = 0x4
0x165: V121 = 0x40
0x168: V122 = SHA3 0x0 0x40
0x169: V123 = S[V122]
0x16c: V124 = LT V123 V36
0x16e: V125 = ISZERO V124
0x170: V126 = 0x179
0x173: JUMPI 0x179 V124
---
Entry stack: [V10, 0x7c, V36]
Stack pops: 1
Stack additions: [S0, V125]
Exit stack: [V10, 0x7c, V36, V125]

================================

Block 0x174
[0x174:0x178]
---
Predecessors: [0x151]
Successors: [0x179]
---
0x174 POP
0x175 PUSH1 0x0
0x177 DUP2
0x178 GT
---
0x175: V127 = 0x0
0x178: V128 = GT V36 0x0
---
Entry stack: [V10, 0x7c, V36, V125]
Stack pops: 2
Stack additions: [S1, V128]
Exit stack: [V10, 0x7c, V36, V128]

================================

Block 0x179
[0x179:0x17e]
---
Predecessors: [0x151, 0x174]
Successors: [0x17f, 0x1af]
---
0x179 JUMPDEST
0x17a ISZERO
0x17b PUSH2 0x1af
0x17e JUMPI
---
0x179: JUMPDEST 
0x17a: V129 = ISZERO S0
0x17b: V130 = 0x1af
0x17e: JUMPI 0x1af V129
---
Entry stack: [V10, 0x7c, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7c, V36]

================================

Block 0x17f
[0x17f:0x1aa]
---
Predecessors: [0x179]
Successors: [0x1ab, 0x1af]
---
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 CALLER
0x188 AND
0x189 DUP2
0x18a ISZERO
0x18b PUSH2 0x8fc
0x18e MUL
0x18f DUP3
0x190 PUSH1 0x40
0x192 MLOAD
0x193 PUSH1 0x0
0x195 PUSH1 0x40
0x197 MLOAD
0x198 DUP1
0x199 DUP4
0x19a SUB
0x19b DUP2
0x19c DUP6
0x19d DUP9
0x19e DUP9
0x19f CALL
0x1a0 SWAP4
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 ISZERO
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x17f: V131 = 0x1
0x181: V132 = 0xa0
0x183: V133 = 0x2
0x185: V134 = EXP 0x2 0xa0
0x186: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V136 = CALLER
0x188: V137 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V138 = ISZERO V36
0x18b: V139 = 0x8fc
0x18e: V140 = MUL 0x8fc V138
0x190: V141 = 0x40
0x192: V142 = M[0x40]
0x193: V143 = 0x0
0x195: V144 = 0x40
0x197: V145 = M[0x40]
0x19a: V146 = SUB V142 V145
0x19f: V147 = CALL V140 V137 V36 V145 V146 V145 0x0
0x1a5: V148 = ISZERO V147
0x1a6: V149 = ISZERO V148
0x1a7: V150 = 0x1af
0x1aa: JUMPI 0x1af V149
---
Entry stack: [V10, 0x7c, V36]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x7c, V36]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x17f]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V151 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V10, 0x7c, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V36]

================================

Block 0x1af
[0x1af:0x1af]
---
Predecessors: [0x14b, 0x179, 0x17f, 0x316]
Successors: [0x1b0]
---
0x1af JUMPDEST
---
0x1af: JUMPDEST 
---
Entry stack: [V10, 0x7c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, S0]

================================

Block 0x1b0
[0x1b0:0x1b0]
---
Predecessors: [0x1af]
Successors: [0x1b1]
---
0x1b0 JUMPDEST
---
0x1b0: JUMPDEST 
---
Entry stack: [V10, 0x7c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, S0]

================================

Block 0x1b1
[0x1b1:0x1b1]
---
Predecessors: [0x1b0]
Successors: [0x1b2]
---
0x1b1 JUMPDEST
---
0x1b1: JUMPDEST 
---
Entry stack: [V10, 0x7c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, S0]

================================

Block 0x1b2
[0x1b2:0x1b4]
---
Predecessors: [0x1b1]
Successors: [0x7c]
---
0x1b2 JUMPDEST
0x1b3 POP
0x1b4 JUMP
---
0x1b2: JUMPDEST 
0x1b4: JUMP 0x7c
---
Entry stack: [V10, 0x7c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b5
[0x1b5:0x1cc]
---
Predecessors: [0xa1]
Successors: [0x79, 0x1cd]
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x2
0x1b8 SLOAD
0x1b9 CALLER
0x1ba PUSH1 0x1
0x1bc PUSH1 0xa0
0x1be PUSH1 0x2
0x1c0 EXP
0x1c1 SUB
0x1c2 SWAP1
0x1c3 DUP2
0x1c4 AND
0x1c5 SWAP2
0x1c6 AND
0x1c7 EQ
0x1c8 ISZERO
0x1c9 PUSH2 0x79
0x1cc JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V152 = 0x2
0x1b8: V153 = S[0x2]
0x1b9: V154 = CALLER
0x1ba: V155 = 0x1
0x1bc: V156 = 0xa0
0x1be: V157 = 0x2
0x1c0: V158 = EXP 0x2 0xa0
0x1c1: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c4: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x1c6: V161 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V162 = EQ V161 V160
0x1c8: V163 = ISZERO V162
0x1c9: V164 = 0x79
0x1cc: JUMPI 0x79 V163
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c]

================================

Block 0x1cd
[0x1cd:0x204]
---
Predecessors: [0x1b5]
Successors: [0x79, 0x205]
---
0x1cd CALLER
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 AND
0x1d7 PUSH2 0x8fc
0x1da ADDRESS
0x1db PUSH1 0x1
0x1dd PUSH1 0xa0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 SUB
0x1e3 AND
0x1e4 BALANCE
0x1e5 SWAP1
0x1e6 DUP2
0x1e7 ISZERO
0x1e8 MUL
0x1e9 SWAP1
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed PUSH1 0x0
0x1ef PUSH1 0x40
0x1f1 MLOAD
0x1f2 DUP1
0x1f3 DUP4
0x1f4 SUB
0x1f5 DUP2
0x1f6 DUP6
0x1f7 DUP9
0x1f8 DUP9
0x1f9 CALL
0x1fa SWAP4
0x1fb POP
0x1fc POP
0x1fd POP
0x1fe POP
0x1ff ISZERO
0x200 ISZERO
0x201 PUSH2 0x79
0x204 JUMPI
---
0x1cd: V165 = CALLER
0x1ce: V166 = 0x1
0x1d0: V167 = 0xa0
0x1d2: V168 = 0x2
0x1d4: V169 = EXP 0x2 0xa0
0x1d5: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x1d7: V172 = 0x8fc
0x1da: V173 = ADDRESS
0x1db: V174 = 0x1
0x1dd: V175 = 0xa0
0x1df: V176 = 0x2
0x1e1: V177 = EXP 0x2 0xa0
0x1e2: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e3: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x1e4: V180 = BALANCE V179
0x1e7: V181 = ISZERO V180
0x1e8: V182 = MUL V181 0x8fc
0x1ea: V183 = 0x40
0x1ec: V184 = M[0x40]
0x1ed: V185 = 0x0
0x1ef: V186 = 0x40
0x1f1: V187 = M[0x40]
0x1f4: V188 = SUB V184 V187
0x1f9: V189 = CALL V182 V171 V180 V187 V188 V187 0x0
0x1ff: V190 = ISZERO V189
0x200: V191 = ISZERO V190
0x201: V192 = 0x79
0x204: JUMPI 0x79 V191
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1cd]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V193 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c]

================================

Block 0x209
[0x209:0x209]
---
Predecessors: []
Successors: [0x20a]
---
0x209 JUMPDEST
---
0x209: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20a
[0x20a:0x20a]
---
Predecessors: [0x209]
Successors: [0x20b]
---
0x20a JUMPDEST
---
0x20a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20b
[0x20b:0x20c]
---
Predecessors: [0x20a]
Successors: []
Has unresolved jump.
---
0x20b JUMPDEST
0x20c JUMP
---
0x20b: JUMPDEST 
0x20c: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x20d
[0x20d:0x212]
---
Predecessors: [0xb6]
Successors: [0x213]
---
0x20d JUMPDEST
0x20e PUSH1 0x1
0x210 DUP2
0x211 SWAP1
0x212 SSTORE
---
0x20d: JUMPDEST 
0x20e: V194 = 0x1
0x212: S[0x1] = V50
---
Entry stack: [V10, 0x7c, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x7c, V50]

================================

Block 0x213
[0x213:0x215]
---
Predecessors: [0x20d]
Successors: [0x7c]
---
0x213 JUMPDEST
0x214 POP
0x215 JUMP
---
0x213: JUMPDEST 
0x215: JUMP 0x7c
---
Entry stack: [V10, 0x7c, V50]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x216
[0x216:0x222]
---
Predecessors: [0xce]
Successors: [0x223, 0x224]
---
0x216 JUMPDEST
0x217 PUSH1 0x3
0x219 DUP1
0x21a SLOAD
0x21b DUP3
0x21c SWAP1
0x21d DUP2
0x21e LT
0x21f PUSH2 0x224
0x222 JUMPI
---
0x216: JUMPDEST 
0x217: V195 = 0x3
0x21a: V196 = S[0x3]
0x21e: V197 = LT V58 V196
0x21f: V198 = 0x224
0x222: JUMPI 0x224 V197
---
Entry stack: [V10, 0xd9, V58]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V10, 0xd9, V58, 0x3, V58]

================================

Block 0x223
[0x223:0x223]
---
Predecessors: [0x216]
Successors: []
---
0x223 INVALID
---
0x223: INVALID 
---
Entry stack: [V10, 0xd9, V58, 0x3, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd9, V58, 0x3, V58]

================================

Block 0x224
[0x224:0x234]
---
Predecessors: [0x216]
Successors: [0x235]
---
0x224 JUMPDEST
0x225 SWAP1
0x226 PUSH1 0x0
0x228 MSTORE
0x229 PUSH1 0x20
0x22b PUSH1 0x0
0x22d SHA3
0x22e SWAP1
0x22f PUSH1 0x2
0x231 MUL
0x232 ADD
0x233 PUSH1 0x0
---
0x224: JUMPDEST 
0x226: V199 = 0x0
0x228: M[0x0] = 0x3
0x229: V200 = 0x20
0x22b: V201 = 0x0
0x22d: V202 = SHA3 0x0 0x20
0x22f: V203 = 0x2
0x231: V204 = MUL 0x2 V58
0x232: V205 = ADD V204 V202
0x233: V206 = 0x0
---
Entry stack: [V10, 0xd9, V58, 0x3, V58]
Stack pops: 2
Stack additions: [V205, 0x0]
Exit stack: [V10, 0xd9, V58, V205, 0x0]

================================

Block 0x235
[0x235:0x24d]
---
Predecessors: [0x224]
Successors: [0xd9]
---
0x235 JUMPDEST
0x236 POP
0x237 DUP1
0x238 SLOAD
0x239 PUSH1 0x1
0x23b SWAP1
0x23c SWAP2
0x23d ADD
0x23e SLOAD
0x23f PUSH1 0x1
0x241 PUSH1 0xa0
0x243 PUSH1 0x2
0x245 EXP
0x246 SUB
0x247 SWAP1
0x248 SWAP2
0x249 AND
0x24a SWAP2
0x24b POP
0x24c DUP3
0x24d JUMP
---
0x235: JUMPDEST 
0x238: V207 = S[V205]
0x239: V208 = 0x1
0x23d: V209 = ADD V205 0x1
0x23e: V210 = S[V209]
0x23f: V211 = 0x1
0x241: V212 = 0xa0
0x243: V213 = 0x2
0x245: V214 = EXP 0x2 0xa0
0x246: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V216 = AND V207 0xffffffffffffffffffffffffffffffffffffffff
0x24d: JUMP 0xd9
---
Entry stack: [V10, 0xd9, V58, V205, 0x0]
Stack pops: 4
Stack additions: [S3, V216, V210]
Exit stack: [V10, 0xd9, V216, V210]

================================

Block 0x24e
[0x24e:0x262]
---
Predecessors: [0xfb]
Successors: [0x263, 0x270]
---
0x24e JUMPDEST
0x24f PUSH1 0x0
0x251 PUSH8 0x3782dace9d90000
0x25a CALLVALUE
0x25b LT
0x25c ISZERO
0x25d DUP1
0x25e ISZERO
0x25f PUSH2 0x270
0x262 JUMPI
---
0x24e: JUMPDEST 
0x24f: V217 = 0x0
0x251: V218 = 0x3782dace9d90000
0x25a: V219 = CALLVALUE
0x25b: V220 = LT V219 0x3782dace9d90000
0x25c: V221 = ISZERO V220
0x25e: V222 = ISZERO V221
0x25f: V223 = 0x270
0x262: JUMPI 0x270 V222
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: [0x0, V221]
Exit stack: [V10, 0x7c, 0x0, V221]

================================

Block 0x263
[0x263:0x26f]
---
Predecessors: [0x24e]
Successors: [0x270]
---
0x263 POP
0x264 PUSH1 0x1
0x266 PUSH1 0xa0
0x268 PUSH1 0x2
0x26a EXP
0x26b SUB
0x26c CALLER
0x26d AND
0x26e ISZERO
0x26f ISZERO
---
0x264: V224 = 0x1
0x266: V225 = 0xa0
0x268: V226 = 0x2
0x26a: V227 = EXP 0x2 0xa0
0x26b: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26c: V229 = CALLER
0x26d: V230 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V231 = ISZERO V230
0x26f: V232 = ISZERO V231
---
Entry stack: [V10, 0x7c, 0x0, V221]
Stack pops: 1
Stack additions: [V232]
Exit stack: [V10, 0x7c, 0x0, V232]

================================

Block 0x270
[0x270:0x275]
---
Predecessors: [0x24e, 0x263]
Successors: [0x276, 0x316]
---
0x270 JUMPDEST
0x271 ISZERO
0x272 PUSH2 0x316
0x275 JUMPI
---
0x270: JUMPDEST 
0x271: V233 = ISZERO S0
0x272: V234 = 0x316
0x275: JUMPI 0x316 V233
---
Entry stack: [V10, 0x7c, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x276
[0x276:0x2b6]
---
Predecessors: [0x270]
Successors: [0x354]
---
0x276 DUP1
0x277 SLOAD
0x278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28d NOT
0x28e AND
0x28f CALLER
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 AND
0x299 OR
0x29a DUP2
0x29b SSTORE
0x29c CALLVALUE
0x29d PUSH1 0x1
0x29f DUP1
0x2a0 DUP4
0x2a1 ADD
0x2a2 SWAP2
0x2a3 SWAP1
0x2a4 SWAP2
0x2a5 SSTORE
0x2a6 PUSH1 0x3
0x2a8 DUP1
0x2a9 SLOAD
0x2aa SWAP1
0x2ab SWAP2
0x2ac DUP2
0x2ad ADD
0x2ae PUSH2 0x2b7
0x2b1 DUP4
0x2b2 DUP3
0x2b3 PUSH2 0x354
0x2b6 JUMP
---
0x277: V235 = S[0x0]
0x278: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V237 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V238 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V235
0x28f: V239 = CALLER
0x290: V240 = 0x1
0x292: V241 = 0xa0
0x294: V242 = 0x2
0x296: V243 = EXP 0x2 0xa0
0x297: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x298: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x299: V246 = OR V245 V238
0x29b: S[0x0] = V246
0x29c: V247 = CALLVALUE
0x29d: V248 = 0x1
0x2a1: V249 = ADD 0x0 0x1
0x2a5: S[0x1] = V247
0x2a6: V250 = 0x3
0x2a9: V251 = S[0x3]
0x2ad: V252 = ADD V251 0x1
0x2ae: V253 = 0x2b7
0x2b3: V254 = 0x354
0x2b6: JUMP 0x354
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 1
Stack additions: [S0, 0x3, V251, V252, 0x2b7, 0x3, V252]
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252]

================================

Block 0x2b7
[0x2b7:0x2c7]
---
Predecessors: [0x381]
Successors: [0x2c8]
---
0x2b7 JUMPDEST
0x2b8 SWAP2
0x2b9 PUSH1 0x0
0x2bb MSTORE
0x2bc PUSH1 0x20
0x2be PUSH1 0x0
0x2c0 SHA3
0x2c1 SWAP1
0x2c2 PUSH1 0x2
0x2c4 MUL
0x2c5 ADD
0x2c6 PUSH1 0x0
---
0x2b7: JUMPDEST 
0x2b9: V255 = 0x0
0x2bb: M[0x0] = 0x3
0x2bc: V256 = 0x20
0x2be: V257 = 0x0
0x2c0: V258 = SHA3 0x0 0x20
0x2c2: V259 = 0x2
0x2c4: V260 = MUL 0x2 V251
0x2c5: V261 = ADD V260 V258
0x2c6: V262 = 0x0
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252]
Stack pops: 3
Stack additions: [S0, V261, 0x0]
Exit stack: [V10, 0x7c, 0x0, V252, V261, 0x0]

================================

Block 0x2c8
[0x2c8:0x315]
---
Predecessors: [0x2b7]
Successors: [0x316]
---
0x2c8 JUMPDEST
0x2c9 POP
0x2ca DUP3
0x2cb SLOAD
0x2cc DUP2
0x2cd SLOAD
0x2ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e3 NOT
0x2e4 AND
0x2e5 PUSH1 0x1
0x2e7 PUSH1 0xa0
0x2e9 PUSH1 0x2
0x2eb EXP
0x2ec SUB
0x2ed SWAP2
0x2ee DUP3
0x2ef AND
0x2f0 OR
0x2f1 DUP3
0x2f2 SSTORE
0x2f3 PUSH1 0x1
0x2f5 DUP1
0x2f6 DUP6
0x2f7 ADD
0x2f8 SLOAD
0x2f9 SWAP3
0x2fa ADD
0x2fb SWAP2
0x2fc SWAP1
0x2fd SWAP2
0x2fe SSTORE
0x2ff CALLER
0x300 AND
0x301 PUSH1 0x0
0x303 SWAP1
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x4
0x308 PUSH1 0x20
0x30a MSTORE
0x30b PUSH1 0x40
0x30d SWAP1
0x30e SHA3
0x30f DUP1
0x310 SLOAD
0x311 CALLVALUE
0x312 ADD
0x313 SWAP1
0x314 SSTORE
0x315 POP
---
0x2c8: JUMPDEST 
0x2cb: V263 = S[0x0]
0x2cd: V264 = S[V261]
0x2ce: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V266 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V267 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V264
0x2e5: V268 = 0x1
0x2e7: V269 = 0xa0
0x2e9: V270 = 0x2
0x2eb: V271 = EXP 0x2 0xa0
0x2ec: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ef: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x2f0: V274 = OR V273 V267
0x2f2: S[V261] = V274
0x2f3: V275 = 0x1
0x2f7: V276 = ADD 0x0 0x1
0x2f8: V277 = S[0x1]
0x2fa: V278 = ADD V261 0x1
0x2fe: S[V278] = V277
0x2ff: V279 = CALLER
0x300: V280 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x301: V281 = 0x0
0x305: M[0x0] = V280
0x306: V282 = 0x4
0x308: V283 = 0x20
0x30a: M[0x20] = 0x4
0x30b: V284 = 0x40
0x30e: V285 = SHA3 0x0 0x40
0x310: V286 = S[V285]
0x311: V287 = CALLVALUE
0x312: V288 = ADD V287 V286
0x314: S[V285] = V288
---
Entry stack: [V10, 0x7c, 0x0, V252, V261, 0x0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x316
[0x316:0x330]
---
Predecessors: [0x270, 0x2c8]
Successors: [0x1af, 0x331]
---
0x316 JUMPDEST
0x317 PUSH9 0x15af1d78b58c40000
0x321 PUSH1 0x1
0x323 PUSH1 0xa0
0x325 PUSH1 0x2
0x327 EXP
0x328 SUB
0x329 ADDRESS
0x32a AND
0x32b BALANCE
0x32c LT
0x32d PUSH2 0x1af
0x330 JUMPI
---
0x316: JUMPDEST 
0x317: V289 = 0x15af1d78b58c40000
0x321: V290 = 0x1
0x323: V291 = 0xa0
0x325: V292 = 0x2
0x327: V293 = EXP 0x2 0xa0
0x328: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x329: V295 = ADDRESS
0x32a: V296 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V297 = BALANCE V296
0x32c: V298 = LT V297 0x15af1d78b58c40000
0x32d: V299 = 0x1af
0x330: JUMPI 0x1af V298
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x331
[0x331:0x33d]
---
Predecessors: [0x316]
Successors: [0x33e]
---
0x331 PUSH1 0x0
0x333 DUP1
0x334 SLOAD
0x335 PUSH1 0xff
0x337 NOT
0x338 AND
0x339 PUSH1 0x1
0x33b OR
0x33c SWAP1
0x33d SSTORE
---
0x331: V300 = 0x0
0x334: V301 = S[0x0]
0x335: V302 = 0xff
0x337: V303 = NOT 0xff
0x338: V304 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V301
0x339: V305 = 0x1
0x33b: V306 = OR 0x1 V304
0x33d: S[0x0] = V306
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x33e
[0x33e:0x33e]
---
Predecessors: [0x331]
Successors: [0x33f]
---
0x33e JUMPDEST
---
0x33e: JUMPDEST 
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x33f
[0x33f:0x341]
---
Predecessors: [0x33e]
Successors: [0x7c]
---
0x33f JUMPDEST
0x340 POP
0x341 JUMP
---
0x33f: JUMPDEST 
0x341: JUMP 0x7c
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x342
[0x342:0x353]
---
Predecessors: [0x110]
Successors: [0x124]
---
0x342 JUMPDEST
0x343 PUSH1 0x4
0x345 PUSH1 0x20
0x347 MSTORE
0x348 PUSH1 0x0
0x34a SWAP1
0x34b DUP2
0x34c MSTORE
0x34d PUSH1 0x40
0x34f SWAP1
0x350 SHA3
0x351 SLOAD
0x352 DUP2
0x353 JUMP
---
0x342: JUMPDEST 
0x343: V307 = 0x4
0x345: V308 = 0x20
0x347: M[0x20] = 0x4
0x348: V309 = 0x0
0x34c: M[0x0] = V88
0x34d: V310 = 0x40
0x350: V311 = SHA3 0x0 0x40
0x351: V312 = S[V311]
0x353: JUMP 0x124
---
Entry stack: [V10, 0x124, V88]
Stack pops: 2
Stack additions: [S1, V312]
Exit stack: [V10, 0x124, V312]

================================

Block 0x354
[0x354:0x361]
---
Predecessors: [0x276]
Successors: [0x362, 0x380]
---
0x354 JUMPDEST
0x355 DUP2
0x356 SLOAD
0x357 DUP2
0x358 DUP4
0x359 SSTORE
0x35a DUP2
0x35b DUP2
0x35c ISZERO
0x35d GT
0x35e PUSH2 0x380
0x361 JUMPI
---
0x354: JUMPDEST 
0x356: V313 = S[0x3]
0x359: S[0x3] = V252
0x35c: V314 = ISZERO V313
0x35d: V315 = GT V314 V252
0x35e: V316 = 0x380
0x361: JUMPI 0x380 V315
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252]
Stack pops: 2
Stack additions: [S1, S0, V313]
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, V313]

================================

Block 0x362
[0x362:0x37f]
---
Predecessors: [0x354]
Successors: [0x386]
---
0x362 PUSH1 0x2
0x364 MUL
0x365 DUP2
0x366 PUSH1 0x2
0x368 MUL
0x369 DUP4
0x36a PUSH1 0x0
0x36c MSTORE
0x36d PUSH1 0x20
0x36f PUSH1 0x0
0x371 SHA3
0x372 SWAP2
0x373 DUP3
0x374 ADD
0x375 SWAP2
0x376 ADD
0x377 PUSH2 0x380
0x37a SWAP2
0x37b SWAP1
0x37c PUSH2 0x386
0x37f JUMP
---
0x362: V317 = 0x2
0x364: V318 = MUL 0x2 V313
0x366: V319 = 0x2
0x368: V320 = MUL 0x2 V252
0x36a: V321 = 0x0
0x36c: M[0x0] = 0x3
0x36d: V322 = 0x20
0x36f: V323 = 0x0
0x371: V324 = SHA3 0x0 0x20
0x374: V325 = ADD V324 V318
0x376: V326 = ADD V324 V320
0x377: V327 = 0x380
0x37c: V328 = 0x386
0x37f: JUMP 0x386
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, V313]
Stack pops: 3
Stack additions: [S2, S1, 0x380, V325, V326]
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, V325, V326]

================================

Block 0x380
[0x380:0x380]
---
Predecessors: [0x354, 0x3c2]
Successors: [0x381]
---
0x380 JUMPDEST
---
0x380: JUMPDEST 
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, S0]

================================

Block 0x381
[0x381:0x385]
---
Predecessors: [0x380]
Successors: [0x2b7]
---
0x381 JUMPDEST
0x382 POP
0x383 POP
0x384 POP
0x385 JUMP
---
0x381: JUMPDEST 
0x385: JUMP 0x2b7
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252]

================================

Block 0x386
[0x386:0x38b]
---
Predecessors: [0x362]
Successors: [0x38c]
---
0x386 JUMPDEST
0x387 PUSH2 0x3c2
0x38a SWAP2
0x38b SWAP1
---
0x386: JUMPDEST 
0x387: V329 = 0x3c2
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, V325, V326]
Stack pops: 2
Stack additions: [0x3c2, S1, S0]
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, 0x3c2, V325, V326]

================================

Block 0x38c
[0x38c:0x394]
---
Predecessors: [0x386, 0x395]
Successors: [0x395, 0x3be]
---
0x38c JUMPDEST
0x38d DUP1
0x38e DUP3
0x38f GT
0x390 ISZERO
0x391 PUSH2 0x3be
0x394 JUMPI
---
0x38c: JUMPDEST 
0x38f: V330 = GT V325 S0
0x390: V331 = ISZERO V330
0x391: V332 = 0x3be
0x394: JUMPI 0x3be V331
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, 0x3c2, V325, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, 0x3c2, V325, S0]

================================

Block 0x395
[0x395:0x3bd]
---
Predecessors: [0x38c]
Successors: [0x38c]
---
0x395 DUP1
0x396 SLOAD
0x397 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ac NOT
0x3ad AND
0x3ae DUP2
0x3af SSTORE
0x3b0 PUSH1 0x0
0x3b2 PUSH1 0x1
0x3b4 DUP3
0x3b5 ADD
0x3b6 SSTORE
0x3b7 PUSH1 0x2
0x3b9 ADD
0x3ba PUSH2 0x38c
0x3bd JUMP
---
0x396: V333 = S[S0]
0x397: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V335 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V336 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V333
0x3af: S[S0] = V336
0x3b0: V337 = 0x0
0x3b2: V338 = 0x1
0x3b5: V339 = ADD S0 0x1
0x3b6: S[V339] = 0x0
0x3b7: V340 = 0x2
0x3b9: V341 = ADD 0x2 S0
0x3ba: V342 = 0x38c
0x3bd: JUMP 0x38c
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, 0x3c2, V325, S0]
Stack pops: 1
Stack additions: [V341]
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, 0x3c2, V325, V341]

================================

Block 0x3be
[0x3be:0x3c1]
---
Predecessors: [0x38c]
Successors: [0x3c2]
---
0x3be JUMPDEST
0x3bf POP
0x3c0 SWAP1
0x3c1 JUMP
---
0x3be: JUMPDEST 
0x3c1: JUMP 0x3c2
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, 0x3c2, V325, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, V325]

================================

Block 0x3c2
[0x3c2:0x3c4]
---
Predecessors: [0x3be]
Successors: [0x380]
---
0x3c2 JUMPDEST
0x3c3 SWAP1
0x3c4 JUMP
---
0x3c2: JUMPDEST 
0x3c4: JUMP 0x380
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, 0x380, V325]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x7c, 0x0, 0x3, V251, V252, 0x2b7, 0x3, V252, V325]

================================

Block 0x3c5
[0x3c5:0x3d3]
---
Predecessors: []
Successors: [0x3d4]
Has unresolved jump.
---
0x3c5 STOP
0x3c6 LOG1
0x3c7 PUSH6 0x627a7a723058
0x3ce SHA3
0x3cf MISSING 0xed
0x3d0 MISSING 0xcc
0x3d1 EQ
0x3d2 DUP16
0x3d3 JUMPI
---
0x3c5: STOP 
0x3c6: LOG S0 S1 S2
0x3c7: V343 = 0x627a7a723058
0x3ce: V344 = SHA3 0x627a7a723058 S3
0x3cf: MISSING 0xed
0x3d0: MISSING 0xcc
0x3d1: V345 = EQ S0 S1
0x3d3: JUMPI S16 V345
---
Entry stack: []
Stack pops: 0
Stack additions: [V344, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16]
Exit stack: []

================================

Block 0x3d4
[0x3d4:0x3ff]
---
Predecessors: [0x3c5]
Successors: []
---
0x3d4 MISSING 0x4c
0x3d5 LOG3
0x3d6 DUP16
0x3d7 TIMESTAMP
0x3d8 MISSING 0x29
0x3d9 MISSING 0x25
0x3da SWAP5
0x3db MISSING 0x2c
0x3dc MISSING 0xd4
0x3dd MISSING 0xc6
0x3de MISSING 0x5e
0x3df GAS
0x3e0 MSTORE
0x3e1 REVERT
0x3e2 PUSH29 0x4b05227e00a3bb157f8500890029
---
0x3d4: MISSING 0x4c
0x3d5: LOG S0 S1 S2 S3 S4
0x3d7: V346 = TIMESTAMP
0x3d8: MISSING 0x29
0x3d9: MISSING 0x25
0x3db: MISSING 0x2c
0x3dc: MISSING 0xd4
0x3dd: MISSING 0xc6
0x3de: MISSING 0x5e
0x3df: V347 = GAS
0x3e0: M[V347] = S0
0x3e1: REVERT S1 S2
0x3e2: V348 = 0x4b05227e00a3bb157f8500890029
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V346, S20, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S5, S1, S2, S3, S4, S0, 0x4b05227e00a3bb157f8500890029]
Exit stack: []

================================

Function 0:
Public function signature: 0x278ecde1
Entry block: 0x7e
Exit block: 0x7c
Body: 0x7c, 0x7e, 0x85, 0x89, 0x136, 0x143, 0x14b, 0x151, 0x174, 0x179, 0x17f, 0x1ab, 0x1af, 0x1b0, 0x1b1, 0x1b2

Function 1:
Public function signature: 0x43d726d6
Entry block: 0x96
Exit block: 0x7c
Body: 0x79, 0x7a, 0x7c, 0x96, 0x9d, 0xa1, 0x1b5, 0x1cd, 0x205

Function 2:
Public function signature: 0xb7b0422d
Entry block: 0xab
Exit block: 0x7c
Body: 0x7c, 0xab, 0xb2, 0xb6, 0x20d, 0x213

Function 3:
Public function signature: 0xcb4d11b7
Entry block: 0xc3
Exit block: 0xd9
Body: 0xc3, 0xca, 0xce, 0xd9, 0x216, 0x223, 0x224, 0x235

Function 4:
Public function signature: 0xd0e30db0
Entry block: 0xfb
Exit block: 0x7c
Body: 0x7c, 0xfb, 0x1af, 0x1b0, 0x1b1, 0x1b2, 0x24e, 0x263, 0x270, 0x276, 0x2b7, 0x2c8, 0x316, 0x331, 0x33e, 0x33f, 0x354, 0x362, 0x380, 0x381, 0x386, 0x38c, 0x395, 0x3be, 0x3c2

Function 5:
Public function signature: 0xd2514e84
Entry block: 0x105
Exit block: 0x124
Body: 0x105, 0x10c, 0x110, 0x124, 0x342

Function 6:
Public fallback function
Entry block: 0x75
Exit block: 0x7c
Body: 0x75, 0x79, 0x7a, 0x7c

