Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xe2]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xe2
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xe2
0xc: JUMPI 0xe2 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xed]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x3f4ba83a
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xed
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x3f4ba83a
0x22: V15 = EQ V13 0x3f4ba83a
0x23: V16 = 0xed
0x26: JUMPI 0xed V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x114]
---
0x27 DUP1
0x28 PUSH4 0x4042b66f
0x2d EQ
0x2e PUSH2 0x114
0x31 JUMPI
---
0x28: V17 = 0x4042b66f
0x2d: V18 = EQ 0x4042b66f V13
0x2e: V19 = 0x114
0x31: JUMPI 0x114 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x139]
---
0x32 DUP1
0x33 PUSH4 0x521eb273
0x38 EQ
0x39 PUSH2 0x139
0x3c JUMPI
---
0x33: V20 = 0x521eb273
0x38: V21 = EQ 0x521eb273 V13
0x39: V22 = 0x139
0x3c: JUMPI 0x139 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x168]
---
0x3d DUP1
0x3e PUSH4 0x5c975abb
0x43 EQ
0x44 PUSH2 0x168
0x47 JUMPI
---
0x3e: V23 = 0x5c975abb
0x43: V24 = EQ 0x5c975abb V13
0x44: V25 = 0x168
0x47: JUMPI 0x168 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x17b]
---
0x48 DUP1
0x49 PUSH4 0x679aefce
0x4e EQ
0x4f PUSH2 0x17b
0x52 JUMPI
---
0x49: V26 = 0x679aefce
0x4e: V27 = EQ 0x679aefce V13
0x4f: V28 = 0x17b
0x52: JUMPI 0x17b V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x1a4]
---
0x53 DUP1
0x54 PUSH4 0x7d64bcb4
0x59 EQ
0x5a PUSH2 0x1a4
0x5d JUMPI
---
0x54: V29 = 0x7d64bcb4
0x59: V30 = EQ 0x7d64bcb4 V13
0x5a: V31 = 0x1a4
0x5d: JUMPI 0x1a4 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1b7]
---
0x5e DUP1
0x5f PUSH4 0x8456cb59
0x64 EQ
0x65 PUSH2 0x1b7
0x68 JUMPI
---
0x5f: V32 = 0x8456cb59
0x64: V33 = EQ 0x8456cb59 V13
0x65: V34 = 0x1b7
0x68: JUMPI 0x1b7 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1ca]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x1ca
0x73 JUMPI
---
0x6a: V35 = 0x8da5cb5b
0x6f: V36 = EQ 0x8da5cb5b V13
0x70: V37 = 0x1ca
0x73: JUMPI 0x1ca V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1dd]
---
0x74 DUP1
0x75 PUSH4 0xb31f8f93
0x7a EQ
0x7b PUSH2 0x1dd
0x7e JUMPI
---
0x75: V38 = 0xb31f8f93
0x7a: V39 = EQ 0xb31f8f93 V13
0x7b: V40 = 0x1dd
0x7e: JUMPI 0x1dd V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1f0]
---
0x7f DUP1
0x80 PUSH4 0xba9a061a
0x85 EQ
0x86 PUSH2 0x1f0
0x89 JUMPI
---
0x80: V41 = 0xba9a061a
0x85: V42 = EQ 0xba9a061a V13
0x86: V43 = 0x1f0
0x89: JUMPI 0x1f0 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x203]
---
0x8a DUP1
0x8b PUSH4 0xc6786e5a
0x90 EQ
0x91 PUSH2 0x203
0x94 JUMPI
---
0x8b: V44 = 0xc6786e5a
0x90: V45 = EQ 0xc6786e5a V13
0x91: V46 = 0x203
0x94: JUMPI 0x203 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x252]
---
0x95 DUP1
0x96 PUSH4 0xe34a90a7
0x9b EQ
0x9c PUSH2 0x252
0x9f JUMPI
---
0x96: V47 = 0xe34a90a7
0x9b: V48 = EQ 0xe34a90a7 V13
0x9c: V49 = 0x252
0x9f: JUMPI 0x252 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x265]
---
0xa0 DUP1
0xa1 PUSH4 0xe5760520
0xa6 EQ
0xa7 PUSH2 0x265
0xaa JUMPI
---
0xa1: V50 = 0xe5760520
0xa6: V51 = EQ 0xe5760520 V13
0xa7: V52 = 0x265
0xaa: JUMPI 0x265 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x278]
---
0xab DUP1
0xac PUSH4 0xe7ff0e38
0xb1 EQ
0xb2 PUSH2 0x278
0xb5 JUMPI
---
0xac: V53 = 0xe7ff0e38
0xb1: V54 = EQ 0xe7ff0e38 V13
0xb2: V55 = 0x278
0xb5: JUMPI 0x278 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x28b]
---
0xb6 DUP1
0xb7 PUSH4 0xec8ac4d8
0xbc EQ
0xbd PUSH2 0x28b
0xc0 JUMPI
---
0xb7: V56 = 0xec8ac4d8
0xbc: V57 = EQ 0xec8ac4d8 V13
0xbd: V58 = 0x28b
0xc0: JUMPI 0x28b V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x29f]
---
0xc1 DUP1
0xc2 PUSH4 0xefe7a504
0xc7 EQ
0xc8 PUSH2 0x29f
0xcb JUMPI
---
0xc2: V59 = 0xefe7a504
0xc7: V60 = EQ 0xefe7a504 V13
0xc8: V61 = 0x29f
0xcb: JUMPI 0x29f V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x2b2]
---
0xcc DUP1
0xcd PUSH4 0xf2fde38b
0xd2 EQ
0xd3 PUSH2 0x2b2
0xd6 JUMPI
---
0xcd: V62 = 0xf2fde38b
0xd2: V63 = EQ 0xf2fde38b V13
0xd3: V64 = 0x2b2
0xd6: JUMPI 0x2b2 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x2d1]
---
0xd7 DUP1
0xd8 PUSH4 0xfc0c546a
0xdd EQ
0xde PUSH2 0x2d1
0xe1 JUMPI
---
0xd8: V65 = 0xfc0c546a
0xdd: V66 = EQ 0xfc0c546a V13
0xde: V67 = 0x2d1
0xe1: JUMPI 0x2d1 V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xea]
---
Predecessors: [0x0, 0xd7]
Successors: [0x2e4]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xeb
0xe6 CALLER
0xe7 PUSH2 0x2e4
0xea JUMP
---
0xe2: JUMPDEST 
0xe3: V68 = 0xeb
0xe6: V69 = CALLER
0xe7: V70 = 0x2e4
0xea: JUMP 0x2e4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xeb, V69]
Exit stack: [V13, 0xeb, V69]

================================

Block 0xeb
[0xeb:0xec]
---
Predecessors: [0x451, 0x8bd, 0x94a]
Successors: []
---
0xeb JUMPDEST
0xec STOP
---
0xeb: JUMPDEST 
0xec: STOP 
---
Entry stack: [V13, 0xeb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S0]

================================

Block 0xed
[0xed:0xf3]
---
Predecessors: [0xd]
Successors: [0xf4, 0xf8]
---
0xed JUMPDEST
0xee CALLVALUE
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xed: JUMPDEST 
0xee: V71 = CALLVALUE
0xef: V72 = ISZERO V71
0xf0: V73 = 0xf8
0xf3: JUMPI 0xf8 V72
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xed]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V74 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xed]
Successors: [0x456]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x100
0xfc PUSH2 0x456
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V75 = 0x100
0xfc: V76 = 0x456
0xff: JUMP 0x456
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V13, 0x100]

================================

Block 0x100
[0x100:0x113]
---
Predecessors: [0x4d8, 0x4f0, 0x5d9, 0x61a, 0x8e6]
Successors: []
---
0x100 JUMPDEST
0x101 PUSH1 0x40
0x103 MLOAD
0x104 SWAP1
0x105 ISZERO
0x106 ISZERO
0x107 DUP2
0x108 MSTORE
0x109 PUSH1 0x20
0x10b ADD
0x10c PUSH1 0x40
0x10e MLOAD
0x10f DUP1
0x110 SWAP2
0x111 SUB
0x112 SWAP1
0x113 RETURN
---
0x100: JUMPDEST 
0x101: V77 = 0x40
0x103: V78 = M[0x40]
0x105: V79 = ISZERO S0
0x106: V80 = ISZERO V79
0x108: M[V78] = V80
0x109: V81 = 0x20
0x10b: V82 = ADD 0x20 V78
0x10c: V83 = 0x40
0x10e: V84 = M[0x40]
0x111: V85 = SUB V82 V84
0x113: RETURN V84 V85
---
Entry stack: [V13, 0xeb, S4, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xeb, S4, 0x0, S2, S1]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x27]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V86 = CALLVALUE
0x116: V87 = ISZERO V86
0x117: V88 = 0x11f
0x11a: JUMPI 0x11f V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V89 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11f
[0x11f:0x126]
---
Predecessors: [0x114]
Successors: [0x4db]
---
0x11f JUMPDEST
0x120 PUSH2 0x127
0x123 PUSH2 0x4db
0x126 JUMP
---
0x11f: JUMPDEST 
0x120: V90 = 0x127
0x123: V91 = 0x4db
0x126: JUMP 0x4db
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x127]
Exit stack: [V13, 0x127]

================================

Block 0x127
[0x127:0x138]
---
Predecessors: [0x4db, 0x67f, 0x685, 0x8ef]
Successors: []
---
0x127 JUMPDEST
0x128 PUSH1 0x40
0x12a MLOAD
0x12b SWAP1
0x12c DUP2
0x12d MSTORE
0x12e PUSH1 0x20
0x130 ADD
0x131 PUSH1 0x40
0x133 MLOAD
0x134 DUP1
0x135 SWAP2
0x136 SUB
0x137 SWAP1
0x138 RETURN
---
0x127: JUMPDEST 
0x128: V92 = 0x40
0x12a: V93 = M[0x40]
0x12d: M[V93] = S0
0x12e: V94 = 0x20
0x130: V95 = ADD 0x20 V93
0x131: V96 = 0x40
0x133: V97 = M[0x40]
0x136: V98 = SUB V95 V97
0x138: RETURN V97 V98
---
Entry stack: [V13, 0x127, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x127]

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x32]
Successors: [0x140, 0x144]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V99 = CALLVALUE
0x13b: V100 = ISZERO V99
0x13c: V101 = 0x144
0x13f: JUMPI 0x144 V100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x139]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V102 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x139]
Successors: [0x4e1]
---
0x144 JUMPDEST
0x145 PUSH2 0x14c
0x148 PUSH2 0x4e1
0x14b JUMP
---
0x144: JUMPDEST 
0x145: V103 = 0x14c
0x148: V104 = 0x4e1
0x14b: JUMP 0x4e1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V13, 0x14c]

================================

Block 0x14c
[0x14c:0x167]
---
Predecessors: [0x4e1, 0x670, 0x8d7, 0x94d]
Successors: []
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f MLOAD
0x150 PUSH1 0x1
0x152 PUSH1 0xa0
0x154 PUSH1 0x2
0x156 EXP
0x157 SUB
0x158 SWAP1
0x159 SWAP2
0x15a AND
0x15b DUP2
0x15c MSTORE
0x15d PUSH1 0x20
0x15f ADD
0x160 PUSH1 0x40
0x162 MLOAD
0x163 DUP1
0x164 SWAP2
0x165 SUB
0x166 SWAP1
0x167 RETURN
---
0x14c: JUMPDEST 
0x14d: V105 = 0x40
0x14f: V106 = M[0x40]
0x150: V107 = 0x1
0x152: V108 = 0xa0
0x154: V109 = 0x2
0x156: V110 = EXP 0x2 0xa0
0x157: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V112 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x15c: M[V106] = V112
0x15d: V113 = 0x20
0x15f: V114 = ADD 0x20 V106
0x160: V115 = 0x40
0x162: V116 = M[0x40]
0x165: V117 = SUB V114 V116
0x167: RETURN V116 V117
---
Entry stack: [V13, 0x14c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x14c]

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x3d]
Successors: [0x16f, 0x173]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V118 = CALLVALUE
0x16a: V119 = ISZERO V118
0x16b: V120 = 0x173
0x16e: JUMPI 0x173 V119
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x168]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V121 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x168]
Successors: [0x4f0]
---
0x173 JUMPDEST
0x174 PUSH2 0x100
0x177 PUSH2 0x4f0
0x17a JUMP
---
0x173: JUMPDEST 
0x174: V122 = 0x100
0x177: V123 = 0x4f0
0x17a: JUMP 0x4f0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V13, 0x100]

================================

Block 0x17b
[0x17b:0x181]
---
Predecessors: [0x48]
Successors: [0x182, 0x186]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d ISZERO
0x17e PUSH2 0x186
0x181 JUMPI
---
0x17b: JUMPDEST 
0x17c: V124 = CALLVALUE
0x17d: V125 = ISZERO V124
0x17e: V126 = 0x186
0x181: JUMPI 0x186 V125
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x182
[0x182:0x185]
---
Predecessors: [0x17b]
Successors: []
---
0x182 PUSH1 0x0
0x184 DUP1
0x185 REVERT
---
0x182: V127 = 0x0
0x185: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x186
[0x186:0x18d]
---
Predecessors: [0x17b]
Successors: [0x500]
---
0x186 JUMPDEST
0x187 PUSH2 0x18e
0x18a PUSH2 0x500
0x18d JUMP
---
0x186: JUMPDEST 
0x187: V128 = 0x18e
0x18a: V129 = 0x500
0x18d: JUMP 0x500
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x18e]
Exit stack: [V13, 0x18e]

================================

Block 0x18e
[0x18e:0x1a3]
---
Predecessors: [0x4d8, 0x53c]
Successors: []
---
0x18e JUMPDEST
0x18f PUSH1 0x40
0x191 MLOAD
0x192 PUSH1 0xff
0x194 SWAP1
0x195 SWAP2
0x196 AND
0x197 DUP2
0x198 MSTORE
0x199 PUSH1 0x20
0x19b ADD
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 SWAP2
0x1a1 SUB
0x1a2 SWAP1
0x1a3 RETURN
---
0x18e: JUMPDEST 
0x18f: V130 = 0x40
0x191: V131 = M[0x40]
0x192: V132 = 0xff
0x196: V133 = AND {0x1, 0x64, 0x85, 0xa7, 0xc8} 0xff
0x198: M[V131] = V133
0x199: V134 = 0x20
0x19b: V135 = ADD 0x20 V131
0x19c: V136 = 0x40
0x19e: V137 = M[0x40]
0x1a1: V138 = SUB V135 V137
0x1a3: RETURN V137 V138
---
Entry stack: [V13, 0xeb, S4, 0x0, 0x0, S1, {0x1, 0x64, 0x85, 0xa7, 0xc8}]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xeb, S4, 0x0, 0x0, S1]

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x53]
Successors: [0x1ab, 0x1af]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V139 = CALLVALUE
0x1a6: V140 = ISZERO V139
0x1a7: V141 = 0x1af
0x1aa: JUMPI 0x1af V140
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V142 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x1a4]
Successors: [0x542]
---
0x1af JUMPDEST
0x1b0 PUSH2 0x100
0x1b3 PUSH2 0x542
0x1b6 JUMP
---
0x1af: JUMPDEST 
0x1b0: V143 = 0x100
0x1b3: V144 = 0x542
0x1b6: JUMP 0x542
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V13, 0x100]

================================

Block 0x1b7
[0x1b7:0x1bd]
---
Predecessors: [0x5e]
Successors: [0x1be, 0x1c2]
---
0x1b7 JUMPDEST
0x1b8 CALLVALUE
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V145 = CALLVALUE
0x1b9: V146 = ISZERO V145
0x1ba: V147 = 0x1c2
0x1bd: JUMPI 0x1c2 V146
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b7]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V148 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c2
[0x1c2:0x1c9]
---
Predecessors: [0x1b7]
Successors: [0x5e7]
---
0x1c2 JUMPDEST
0x1c3 PUSH2 0x100
0x1c6 PUSH2 0x5e7
0x1c9 JUMP
---
0x1c2: JUMPDEST 
0x1c3: V149 = 0x100
0x1c6: V150 = 0x5e7
0x1c9: JUMP 0x5e7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V13, 0x100]

================================

Block 0x1ca
[0x1ca:0x1d0]
---
Predecessors: [0x69]
Successors: [0x1d1, 0x1d5]
---
0x1ca JUMPDEST
0x1cb CALLVALUE
0x1cc ISZERO
0x1cd PUSH2 0x1d5
0x1d0 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V151 = CALLVALUE
0x1cc: V152 = ISZERO V151
0x1cd: V153 = 0x1d5
0x1d0: JUMPI 0x1d5 V152
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d1
[0x1d1:0x1d4]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 REVERT
---
0x1d1: V154 = 0x0
0x1d4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d5
[0x1d5:0x1dc]
---
Predecessors: [0x1ca]
Successors: [0x670]
---
0x1d5 JUMPDEST
0x1d6 PUSH2 0x14c
0x1d9 PUSH2 0x670
0x1dc JUMP
---
0x1d5: JUMPDEST 
0x1d6: V155 = 0x14c
0x1d9: V156 = 0x670
0x1dc: JUMP 0x670
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V13, 0x14c]

================================

Block 0x1dd
[0x1dd:0x1e3]
---
Predecessors: [0x74]
Successors: [0x1e4, 0x1e8]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V157 = CALLVALUE
0x1df: V158 = ISZERO V157
0x1e0: V159 = 0x1e8
0x1e3: JUMPI 0x1e8 V158
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V160 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e8
[0x1e8:0x1ef]
---
Predecessors: [0x1dd]
Successors: [0x67f]
---
0x1e8 JUMPDEST
0x1e9 PUSH2 0x127
0x1ec PUSH2 0x67f
0x1ef JUMP
---
0x1e8: JUMPDEST 
0x1e9: V161 = 0x127
0x1ec: V162 = 0x67f
0x1ef: JUMP 0x67f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x127]
Exit stack: [V13, 0x127]

================================

Block 0x1f0
[0x1f0:0x1f6]
---
Predecessors: [0x7f]
Successors: [0x1f7, 0x1fb]
---
0x1f0 JUMPDEST
0x1f1 CALLVALUE
0x1f2 ISZERO
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V163 = CALLVALUE
0x1f2: V164 = ISZERO V163
0x1f3: V165 = 0x1fb
0x1f6: JUMPI 0x1fb V164
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1f0]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa REVERT
---
0x1f7: V166 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1fb
[0x1fb:0x202]
---
Predecessors: [0x1f0]
Successors: [0x685]
---
0x1fb JUMPDEST
0x1fc PUSH2 0x127
0x1ff PUSH2 0x685
0x202 JUMP
---
0x1fb: JUMPDEST 
0x1fc: V167 = 0x127
0x1ff: V168 = 0x685
0x202: JUMP 0x685
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x127]
Exit stack: [V13, 0x127]

================================

Block 0x203
[0x203:0x209]
---
Predecessors: [0x8a]
Successors: [0x20a, 0x20e]
---
0x203 JUMPDEST
0x204 CALLVALUE
0x205 ISZERO
0x206 PUSH2 0x20e
0x209 JUMPI
---
0x203: JUMPDEST 
0x204: V169 = CALLVALUE
0x205: V170 = ISZERO V169
0x206: V171 = 0x20e
0x209: JUMPI 0x20e V170
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x20a
[0x20a:0x20d]
---
Predecessors: [0x203]
Successors: []
---
0x20a PUSH1 0x0
0x20c DUP1
0x20d REVERT
---
0x20a: V172 = 0x0
0x20d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x20e
[0x20e:0x251]
---
Predecessors: [0x203]
Successors: [0x68d]
---
0x20e JUMPDEST
0x20f PUSH2 0xeb
0x212 PUSH1 0x4
0x214 PUSH1 0x24
0x216 DUP2
0x217 CALLDATALOAD
0x218 DUP2
0x219 DUP2
0x21a ADD
0x21b SWAP1
0x21c DUP4
0x21d ADD
0x21e CALLDATALOAD
0x21f DUP1
0x220 PUSH1 0x20
0x222 DUP2
0x223 DUP2
0x224 MUL
0x225 ADD
0x226 PUSH1 0x40
0x228 MLOAD
0x229 SWAP1
0x22a DUP2
0x22b ADD
0x22c PUSH1 0x40
0x22e MSTORE
0x22f DUP1
0x230 SWAP4
0x231 SWAP3
0x232 SWAP2
0x233 SWAP1
0x234 DUP2
0x235 DUP2
0x236 MSTORE
0x237 PUSH1 0x20
0x239 ADD
0x23a DUP4
0x23b DUP4
0x23c PUSH1 0x20
0x23e MUL
0x23f DUP1
0x240 DUP3
0x241 DUP5
0x242 CALLDATACOPY
0x243 POP
0x244 SWAP5
0x245 SWAP7
0x246 POP
0x247 PUSH2 0x68d
0x24a SWAP6
0x24b POP
0x24c POP
0x24d POP
0x24e POP
0x24f POP
0x250 POP
0x251 JUMP
---
0x20e: JUMPDEST 
0x20f: V173 = 0xeb
0x212: V174 = 0x4
0x214: V175 = 0x24
0x217: V176 = CALLDATALOAD 0x4
0x21a: V177 = ADD V176 0x24
0x21d: V178 = ADD 0x4 V176
0x21e: V179 = CALLDATALOAD V178
0x220: V180 = 0x20
0x224: V181 = MUL 0x20 V179
0x225: V182 = ADD V181 0x20
0x226: V183 = 0x40
0x228: V184 = M[0x40]
0x22b: V185 = ADD V184 V182
0x22c: V186 = 0x40
0x22e: M[0x40] = V185
0x236: M[V184] = V179
0x237: V187 = 0x20
0x239: V188 = ADD 0x20 V184
0x23c: V189 = 0x20
0x23e: V190 = MUL 0x20 V179
0x242: CALLDATACOPY V188 V177 V190
0x247: V191 = 0x68d
0x251: JUMP 0x68d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xeb, V184]
Exit stack: [V13, 0xeb, V184]

================================

Block 0x252
[0x252:0x258]
---
Predecessors: [0x95]
Successors: [0x259, 0x25d]
---
0x252 JUMPDEST
0x253 CALLVALUE
0x254 ISZERO
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x252: JUMPDEST 
0x253: V192 = CALLVALUE
0x254: V193 = ISZERO V192
0x255: V194 = 0x25d
0x258: JUMPI 0x25d V193
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x252]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V195 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x25d
[0x25d:0x264]
---
Predecessors: [0x252]
Successors: [0x7df]
---
0x25d JUMPDEST
0x25e PUSH2 0xeb
0x261 PUSH2 0x7df
0x264 JUMP
---
0x25d: JUMPDEST 
0x25e: V196 = 0xeb
0x261: V197 = 0x7df
0x264: JUMP 0x7df
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xeb]
Exit stack: [V13, 0xeb]

================================

Block 0x265
[0x265:0x26b]
---
Predecessors: [0xa0]
Successors: [0x26c, 0x270]
---
0x265 JUMPDEST
0x266 CALLVALUE
0x267 ISZERO
0x268 PUSH2 0x270
0x26b JUMPI
---
0x265: JUMPDEST 
0x266: V198 = CALLVALUE
0x267: V199 = ISZERO V198
0x268: V200 = 0x270
0x26b: JUMPI 0x270 V199
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0x265]
Successors: []
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f REVERT
---
0x26c: V201 = 0x0
0x26f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x270
[0x270:0x277]
---
Predecessors: [0x265]
Successors: [0x8d7]
---
0x270 JUMPDEST
0x271 PUSH2 0x14c
0x274 PUSH2 0x8d7
0x277 JUMP
---
0x270: JUMPDEST 
0x271: V202 = 0x14c
0x274: V203 = 0x8d7
0x277: JUMP 0x8d7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V13, 0x14c]

================================

Block 0x278
[0x278:0x27e]
---
Predecessors: [0xab]
Successors: [0x27f, 0x283]
---
0x278 JUMPDEST
0x279 CALLVALUE
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x278: JUMPDEST 
0x279: V204 = CALLVALUE
0x27a: V205 = ISZERO V204
0x27b: V206 = 0x283
0x27e: JUMPI 0x283 V205
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x278]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V207 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x283
[0x283:0x28a]
---
Predecessors: [0x278]
Successors: [0x8e6]
---
0x283 JUMPDEST
0x284 PUSH2 0x100
0x287 PUSH2 0x8e6
0x28a JUMP
---
0x283: JUMPDEST 
0x284: V208 = 0x100
0x287: V209 = 0x8e6
0x28a: JUMP 0x8e6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V13, 0x100]

================================

Block 0x28b
[0x28b:0x29e]
---
Predecessors: [0xb6]
Successors: [0x2e4]
---
0x28b JUMPDEST
0x28c PUSH2 0xeb
0x28f PUSH1 0x1
0x291 PUSH1 0xa0
0x293 PUSH1 0x2
0x295 EXP
0x296 SUB
0x297 PUSH1 0x4
0x299 CALLDATALOAD
0x29a AND
0x29b PUSH2 0x2e4
0x29e JUMP
---
0x28b: JUMPDEST 
0x28c: V210 = 0xeb
0x28f: V211 = 0x1
0x291: V212 = 0xa0
0x293: V213 = 0x2
0x295: V214 = EXP 0x2 0xa0
0x296: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V216 = 0x4
0x299: V217 = CALLDATALOAD 0x4
0x29a: V218 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V219 = 0x2e4
0x29e: JUMP 0x2e4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xeb, V218]
Exit stack: [V13, 0xeb, V218]

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0xc1]
Successors: [0x2a6, 0x2aa]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V220 = CALLVALUE
0x2a1: V221 = ISZERO V220
0x2a2: V222 = 0x2aa
0x2a5: JUMPI 0x2aa V221
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V223 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2aa
[0x2aa:0x2b1]
---
Predecessors: [0x29f]
Successors: [0x8ef]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x127
0x2ae PUSH2 0x8ef
0x2b1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V224 = 0x127
0x2ae: V225 = 0x8ef
0x2b1: JUMP 0x8ef
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x127]
Exit stack: [V13, 0x127]

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0xcc]
Successors: [0x2b9, 0x2bd]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V226 = CALLVALUE
0x2b4: V227 = ISZERO V226
0x2b5: V228 = 0x2bd
0x2b8: JUMPI 0x2bd V227
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2b2]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V229 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2bd
[0x2bd:0x2d0]
---
Predecessors: [0x2b2]
Successors: [0x8f7]
---
0x2bd JUMPDEST
0x2be PUSH2 0xeb
0x2c1 PUSH1 0x1
0x2c3 PUSH1 0xa0
0x2c5 PUSH1 0x2
0x2c7 EXP
0x2c8 SUB
0x2c9 PUSH1 0x4
0x2cb CALLDATALOAD
0x2cc AND
0x2cd PUSH2 0x8f7
0x2d0 JUMP
---
0x2bd: JUMPDEST 
0x2be: V230 = 0xeb
0x2c1: V231 = 0x1
0x2c3: V232 = 0xa0
0x2c5: V233 = 0x2
0x2c7: V234 = EXP 0x2 0xa0
0x2c8: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c9: V236 = 0x4
0x2cb: V237 = CALLDATALOAD 0x4
0x2cc: V238 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x2cd: V239 = 0x8f7
0x2d0: JUMP 0x8f7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xeb, V238]
Exit stack: [V13, 0xeb, V238]

================================

Block 0x2d1
[0x2d1:0x2d7]
---
Predecessors: [0xd7]
Successors: [0x2d8, 0x2dc]
---
0x2d1 JUMPDEST
0x2d2 CALLVALUE
0x2d3 ISZERO
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V240 = CALLVALUE
0x2d3: V241 = ISZERO V240
0x2d4: V242 = 0x2dc
0x2d7: JUMPI 0x2dc V241
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2d1]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V243 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2dc
[0x2dc:0x2e3]
---
Predecessors: [0x2d1]
Successors: [0x94d]
---
0x2dc JUMPDEST
0x2dd PUSH2 0x14c
0x2e0 PUSH2 0x94d
0x2e3 JUMP
---
0x2dc: JUMPDEST 
0x2dd: V244 = 0x14c
0x2e0: V245 = 0x94d
0x2e3: JUMP 0x94d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V13, 0x14c]

================================

Block 0x2e4
[0x2e4:0x2f9]
---
Predecessors: [0xe2, 0x28b]
Successors: [0x2fa, 0x2fe]
---
0x2e4 JUMPDEST
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 SLOAD
0x2e9 DUP2
0x2ea SWAP1
0x2eb PUSH1 0xa0
0x2ed PUSH1 0x2
0x2ef EXP
0x2f0 SWAP1
0x2f1 DIV
0x2f2 PUSH1 0xff
0x2f4 AND
0x2f5 ISZERO
0x2f6 PUSH2 0x2fe
0x2f9 JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V246 = 0x0
0x2e8: V247 = S[0x0]
0x2eb: V248 = 0xa0
0x2ed: V249 = 0x2
0x2ef: V250 = EXP 0x2 0xa0
0x2f1: V251 = DIV V247 0x10000000000000000000000000000000000000000
0x2f2: V252 = 0xff
0x2f4: V253 = AND 0xff V251
0x2f5: V254 = ISZERO V253
0x2f6: V255 = 0x2fe
0x2f9: JUMPI 0x2fe V254
---
Entry stack: [V13, 0xeb, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0xeb, S0, 0x0, 0x0]

================================

Block 0x2fa
[0x2fa:0x2fd]
---
Predecessors: [0x2e4]
Successors: []
---
0x2fa PUSH1 0x0
0x2fc DUP1
0x2fd REVERT
---
0x2fa: V256 = 0x0
0x2fd: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S2, 0x0, 0x0]

================================

Block 0x2fe
[0x2fe:0x30e]
---
Predecessors: [0x2e4]
Successors: [0x30f, 0x313]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x1
0x301 PUSH1 0xa0
0x303 PUSH1 0x2
0x305 EXP
0x306 SUB
0x307 DUP4
0x308 AND
0x309 ISZERO
0x30a ISZERO
0x30b PUSH2 0x313
0x30e JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V257 = 0x1
0x301: V258 = 0xa0
0x303: V259 = 0x2
0x305: V260 = EXP 0x2 0xa0
0x306: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V262 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x309: V263 = ISZERO V262
0x30a: V264 = ISZERO V263
0x30b: V265 = 0x313
0x30e: JUMPI 0x313 V264
---
Entry stack: [V13, 0xeb, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xeb, S2, 0x0, 0x0]

================================

Block 0x30f
[0x30f:0x312]
---
Predecessors: [0x2fe]
Successors: []
---
0x30f PUSH1 0x0
0x311 DUP1
0x312 REVERT
---
0x30f: V266 = 0x0
0x312: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S2, 0x0, 0x0]

================================

Block 0x313
[0x313:0x31a]
---
Predecessors: [0x2fe]
Successors: [0x31b, 0x31f]
---
0x313 JUMPDEST
0x314 CALLVALUE
0x315 ISZERO
0x316 ISZERO
0x317 PUSH2 0x31f
0x31a JUMPI
---
0x313: JUMPDEST 
0x314: V267 = CALLVALUE
0x315: V268 = ISZERO V267
0x316: V269 = ISZERO V268
0x317: V270 = 0x31f
0x31a: JUMPI 0x31f V269
---
Entry stack: [V13, 0xeb, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S2, 0x0, 0x0]

================================

Block 0x31b
[0x31b:0x31e]
---
Predecessors: [0x313]
Successors: []
---
0x31b PUSH1 0x0
0x31d DUP1
0x31e REVERT
---
0x31b: V271 = 0x0
0x31e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S2, 0x0, 0x0]

================================

Block 0x31f
[0x31f:0x32b]
---
Predecessors: [0x313]
Successors: [0x32c, 0x330]
---
0x31f JUMPDEST
0x320 PUSH4 0x5a6f68aa
0x325 TIMESTAMP
0x326 GT
0x327 ISZERO
0x328 PUSH2 0x330
0x32b JUMPI
---
0x31f: JUMPDEST 
0x320: V272 = 0x5a6f68aa
0x325: V273 = TIMESTAMP
0x326: V274 = GT V273 0x5a6f68aa
0x327: V275 = ISZERO V274
0x328: V276 = 0x330
0x32b: JUMPI 0x330 V275
---
Entry stack: [V13, 0xeb, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S2, 0x0, 0x0]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x31f]
Successors: []
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
---
0x32c: V277 = 0x0
0x32f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S2, 0x0, 0x0]

================================

Block 0x330
[0x330:0x33a]
---
Predecessors: [0x31f]
Successors: [0x500]
---
0x330 JUMPDEST
0x331 PUSH2 0x350
0x334 PUSH2 0x33b
0x337 PUSH2 0x500
0x33a JUMP
---
0x330: JUMPDEST 
0x331: V278 = 0x350
0x334: V279 = 0x33b
0x337: V280 = 0x500
0x33a: JUMP 0x500
---
Entry stack: [V13, 0xeb, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x350, 0x33b]
Exit stack: [V13, 0xeb, S2, 0x0, 0x0, 0x350, 0x33b]

================================

Block 0x33b
[0x33b:0x34f]
---
Predecessors: [0x4d8, 0x53c]
Successors: [0x95c]
---
0x33b JUMPDEST
0x33c PUSH1 0x4
0x33e MUL
0x33f PUSH1 0xff
0x341 AND
0x342 DUP3
0x343 PUSH2 0x95c
0x346 SWAP1
0x347 SWAP2
0x348 SWAP1
0x349 PUSH4 0xffffffff
0x34e AND
0x34f JUMP
---
0x33b: JUMPDEST 
0x33c: V281 = 0x4
0x33e: V282 = MUL 0x4 {0x1, 0x64, 0x85, 0xa7, 0xc8}
0x33f: V283 = 0xff
0x341: V284 = AND 0xff V282
0x343: V285 = 0x95c
0x349: V286 = 0xffffffff
0x34e: V287 = AND 0xffffffff 0x95c
0x34f: JUMP 0x95c
---
Entry stack: [V13, 0xeb, S4, 0x0, 0x0, S1, {0x1, 0x64, 0x85, 0xa7, 0xc8}]
Stack pops: 3
Stack additions: [S2, S1, S2, V284]
Exit stack: [V13, 0xeb, S4, 0x0, 0x0, S1, 0x0, V284]

================================

Block 0x350
[0x350:0x368]
---
Predecessors: [0x980]
Successors: [0x987]
---
0x350 JUMPDEST
0x351 SWAP2
0x352 POP
0x353 PUSH1 0x0
0x355 PUSH2 0x369
0x358 DUP4
0x359 PUSH1 0x2
0x35b SLOAD
0x35c PUSH2 0x987
0x35f SWAP1
0x360 SWAP2
0x361 SWAP1
0x362 PUSH4 0xffffffff
0x367 AND
0x368 JUMP
---
0x350: JUMPDEST 
0x353: V288 = 0x0
0x355: V289 = 0x369
0x359: V290 = 0x2
0x35b: V291 = S[0x2]
0x35c: V292 = 0x987
0x362: V293 = 0xffffffff
0x367: V294 = AND 0xffffffff 0x987
0x368: JUMP 0x987
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x0, 0x369, V291, S0]
Exit stack: [V13, S5, S4, S3, S0, S1, 0x0, 0x369, V291, S0]

================================

Block 0x369
[0x369:0x36f]
---
Predecessors: [0x993]
Successors: [0x370, 0x374]
---
0x369 JUMPDEST
0x36a LT
0x36b ISZERO
0x36c PUSH2 0x374
0x36f JUMPI
---
0x369: JUMPDEST 
0x36a: V295 = LT V909 0x0
0x36b: V296 = ISZERO V295
0x36c: V297 = 0x374
0x36f: JUMPI 0x374 V296
---
Entry stack: [V13, S5, S4, S3, S2, 0x0, V909]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2]

================================

Block 0x370
[0x370:0x373]
---
Predecessors: [0x369]
Successors: []
---
0x370 PUSH1 0x0
0x372 DUP1
0x373 REVERT
---
0x370: V298 = 0x0
0x373: REVERT 0x0 0x0
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S3, S2, S1, S0]

================================

Block 0x374
[0x374:0x386]
---
Predecessors: [0x369]
Successors: [0x987]
---
0x374 JUMPDEST
0x375 PUSH1 0x2
0x377 SLOAD
0x378 PUSH2 0x387
0x37b SWAP1
0x37c DUP4
0x37d PUSH4 0xffffffff
0x382 PUSH2 0x987
0x385 AND
0x386 JUMP
---
0x374: JUMPDEST 
0x375: V299 = 0x2
0x377: V300 = S[0x2]
0x378: V301 = 0x387
0x37d: V302 = 0xffffffff
0x382: V303 = 0x987
0x385: V304 = AND 0x987 0xffffffff
0x386: JUMP 0x987
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x387, V300, S1]
Exit stack: [V13, S3, S2, S1, S0, 0x387, V300, S1]

================================

Block 0x387
[0x387:0x39f]
---
Predecessors: [0x993]
Successors: [0x999]
---
0x387 JUMPDEST
0x388 PUSH1 0x2
0x38a SSTORE
0x38b POP
0x38c PUSH1 0x5
0x38e SLOAD
0x38f CALLVALUE
0x390 SWAP1
0x391 PUSH2 0x3a0
0x394 SWAP1
0x395 DUP3
0x396 PUSH4 0xffffffff
0x39b PUSH2 0x999
0x39e AND
0x39f JUMP
---
0x387: JUMPDEST 
0x388: V305 = 0x2
0x38a: S[0x2] = V909
0x38c: V306 = 0x5
0x38e: V307 = S[0x5]
0x38f: V308 = CALLVALUE
0x391: V309 = 0x3a0
0x396: V310 = 0xffffffff
0x39b: V311 = 0x999
0x39e: V312 = AND 0x999 0xffffffff
0x39f: JUMP 0x999
---
Entry stack: [V13, S5, S4, S3, S2, 0x0, V909]
Stack pops: 2
Stack additions: [V308, 0x3a0, V307, V308]
Exit stack: [V13, S5, S4, S3, S2, V308, 0x3a0, V307, V308]

================================

Block 0x3a0
[0x3a0:0x3fd]
---
Predecessors: [0x980]
Successors: [0x3fe, 0x402]
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x5
0x3a3 SSTORE
0x3a4 PUSH1 0x1
0x3a6 SLOAD
0x3a7 PUSH1 0x1
0x3a9 PUSH1 0xa0
0x3ab PUSH1 0x2
0x3ad EXP
0x3ae SUB
0x3af AND
0x3b0 PUSH4 0x40c10f19
0x3b5 DUP5
0x3b6 DUP5
0x3b7 PUSH1 0x0
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc PUSH1 0x20
0x3be ADD
0x3bf MSTORE
0x3c0 PUSH1 0x40
0x3c2 MLOAD
0x3c3 PUSH1 0xe0
0x3c5 PUSH1 0x2
0x3c7 EXP
0x3c8 PUSH4 0xffffffff
0x3cd DUP6
0x3ce AND
0x3cf MUL
0x3d0 DUP2
0x3d1 MSTORE
0x3d2 PUSH1 0x1
0x3d4 PUSH1 0xa0
0x3d6 PUSH1 0x2
0x3d8 EXP
0x3d9 SUB
0x3da SWAP1
0x3db SWAP3
0x3dc AND
0x3dd PUSH1 0x4
0x3df DUP4
0x3e0 ADD
0x3e1 MSTORE
0x3e2 PUSH1 0x24
0x3e4 DUP3
0x3e5 ADD
0x3e6 MSTORE
0x3e7 PUSH1 0x44
0x3e9 ADD
0x3ea PUSH1 0x20
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef DUP1
0x3f0 DUP4
0x3f1 SUB
0x3f2 DUP2
0x3f3 PUSH1 0x0
0x3f5 DUP8
0x3f6 DUP1
0x3f7 EXTCODESIZE
0x3f8 ISZERO
0x3f9 ISZERO
0x3fa PUSH2 0x402
0x3fd JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V313 = 0x5
0x3a3: S[0x5] = S0
0x3a4: V314 = 0x1
0x3a6: V315 = S[0x1]
0x3a7: V316 = 0x1
0x3a9: V317 = 0xa0
0x3ab: V318 = 0x2
0x3ad: V319 = EXP 0x2 0xa0
0x3ae: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x3b0: V322 = 0x40c10f19
0x3b7: V323 = 0x0
0x3b9: V324 = 0x40
0x3bb: V325 = M[0x40]
0x3bc: V326 = 0x20
0x3be: V327 = ADD 0x20 V325
0x3bf: M[V327] = 0x0
0x3c0: V328 = 0x40
0x3c2: V329 = M[0x40]
0x3c3: V330 = 0xe0
0x3c5: V331 = 0x2
0x3c7: V332 = EXP 0x2 0xe0
0x3c8: V333 = 0xffffffff
0x3ce: V334 = AND 0x40c10f19 0xffffffff
0x3cf: V335 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x3d1: M[V329] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x3d2: V336 = 0x1
0x3d4: V337 = 0xa0
0x3d6: V338 = 0x2
0x3d8: V339 = EXP 0x2 0xa0
0x3d9: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dc: V341 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V342 = 0x4
0x3e0: V343 = ADD V329 0x4
0x3e1: M[V343] = V341
0x3e2: V344 = 0x24
0x3e5: V345 = ADD V329 0x24
0x3e6: M[V345] = S2
0x3e7: V346 = 0x44
0x3e9: V347 = ADD 0x44 V329
0x3ea: V348 = 0x20
0x3ec: V349 = 0x40
0x3ee: V350 = M[0x40]
0x3f1: V351 = SUB V347 V350
0x3f3: V352 = 0x0
0x3f7: V353 = EXTCODESIZE V321
0x3f8: V354 = ISZERO V353
0x3f9: V355 = ISZERO V354
0x3fa: V356 = 0x402
0x3fd: JUMPI 0x402 V355
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V321, 0x40c10f19, V347, 0x20, V350, V351, V350, 0x0, V321]
Exit stack: [V13, S5, S4, S3, S2, S1, V321, 0x40c10f19, V347, 0x20, V350, V351, V350, 0x0, V321]

================================

Block 0x3fe
[0x3fe:0x401]
---
Predecessors: [0x3a0]
Successors: []
---
0x3fe PUSH1 0x0
0x400 DUP1
0x401 REVERT
---
0x3fe: V357 = 0x0
0x401: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, S11, S10, S9, V321, 0x40c10f19, V347, 0x20, V350, V351, V350, 0x0, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, V321, 0x40c10f19, V347, 0x20, V350, V351, V350, 0x0, V321]

================================

Block 0x402
[0x402:0x40e]
---
Predecessors: [0x3a0]
Successors: [0x40f, 0x413]
---
0x402 JUMPDEST
0x403 PUSH2 0x2c6
0x406 GAS
0x407 SUB
0x408 CALL
0x409 ISZERO
0x40a ISZERO
0x40b PUSH2 0x413
0x40e JUMPI
---
0x402: JUMPDEST 
0x403: V358 = 0x2c6
0x406: V359 = GAS
0x407: V360 = SUB V359 0x2c6
0x408: V361 = CALL V360 V321 0x0 V350 V351 V350 0x20
0x409: V362 = ISZERO V361
0x40a: V363 = ISZERO V362
0x40b: V364 = 0x413
0x40e: JUMPI 0x413 V363
---
Entry stack: [V13, S13, S12, S11, S10, S9, V321, 0x40c10f19, V347, 0x20, V350, V351, V350, 0x0, V321]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, V321, 0x40c10f19, V347]

================================

Block 0x40f
[0x40f:0x412]
---
Predecessors: [0x402]
Successors: []
---
0x40f PUSH1 0x0
0x411 DUP1
0x412 REVERT
---
0x40f: V365 = 0x0
0x412: REVERT 0x0 0x0
---
Entry stack: [V13, S7, S6, S5, S4, S3, V321, 0x40c10f19, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, V321, 0x40c10f19, V347]

================================

Block 0x413
[0x413:0x44c]
---
Predecessors: [0x402]
Successors: [0x44d, 0x451]
---
0x413 JUMPDEST
0x414 POP
0x415 POP
0x416 POP
0x417 PUSH1 0x40
0x419 MLOAD
0x41a DUP1
0x41b MLOAD
0x41c POP
0x41d POP
0x41e PUSH1 0x3
0x420 SLOAD
0x421 PUSH1 0x1
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SUB
0x429 AND
0x42a CALLVALUE
0x42b DUP1
0x42c ISZERO
0x42d PUSH2 0x8fc
0x430 MUL
0x431 SWAP1
0x432 PUSH1 0x40
0x434 MLOAD
0x435 PUSH1 0x0
0x437 PUSH1 0x40
0x439 MLOAD
0x43a DUP1
0x43b DUP4
0x43c SUB
0x43d DUP2
0x43e DUP6
0x43f DUP9
0x440 DUP9
0x441 CALL
0x442 SWAP4
0x443 POP
0x444 POP
0x445 POP
0x446 POP
0x447 ISZERO
0x448 ISZERO
0x449 PUSH2 0x451
0x44c JUMPI
---
0x413: JUMPDEST 
0x417: V366 = 0x40
0x419: V367 = M[0x40]
0x41b: V368 = M[V367]
0x41e: V369 = 0x3
0x420: V370 = S[0x3]
0x421: V371 = 0x1
0x423: V372 = 0xa0
0x425: V373 = 0x2
0x427: V374 = EXP 0x2 0xa0
0x428: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x42a: V377 = CALLVALUE
0x42c: V378 = ISZERO V377
0x42d: V379 = 0x8fc
0x430: V380 = MUL 0x8fc V378
0x432: V381 = 0x40
0x434: V382 = M[0x40]
0x435: V383 = 0x0
0x437: V384 = 0x40
0x439: V385 = M[0x40]
0x43c: V386 = SUB V382 V385
0x441: V387 = CALL V380 V376 V377 V385 V386 V385 0x0
0x447: V388 = ISZERO V387
0x448: V389 = ISZERO V388
0x449: V390 = 0x451
0x44c: JUMPI 0x451 V389
---
Entry stack: [V13, S7, S6, S5, S4, S3, V321, 0x40c10f19, V347]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3]

================================

Block 0x44d
[0x44d:0x450]
---
Predecessors: [0x413]
Successors: []
---
0x44d PUSH1 0x0
0x44f DUP1
0x450 REVERT
---
0x44d: V391 = 0x0
0x450: REVERT 0x0 0x0
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S4, S3, S2, S1, S0]

================================

Block 0x451
[0x451:0x455]
---
Predecessors: [0x413]
Successors: [0xeb]
---
0x451 JUMPDEST
0x452 POP
0x453 POP
0x454 POP
0x455 JUMP
---
0x451: JUMPDEST 
0x455: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S4]

================================

Block 0x456
[0x456:0x46d]
---
Predecessors: [0xf8]
Successors: [0x46e, 0x472]
---
0x456 JUMPDEST
0x457 PUSH1 0x0
0x459 DUP1
0x45a SLOAD
0x45b CALLER
0x45c PUSH1 0x1
0x45e PUSH1 0xa0
0x460 PUSH1 0x2
0x462 EXP
0x463 SUB
0x464 SWAP1
0x465 DUP2
0x466 AND
0x467 SWAP2
0x468 AND
0x469 EQ
0x46a PUSH2 0x472
0x46d JUMPI
---
0x456: JUMPDEST 
0x457: V392 = 0x0
0x45a: V393 = S[0x0]
0x45b: V394 = CALLER
0x45c: V395 = 0x1
0x45e: V396 = 0xa0
0x460: V397 = 0x2
0x462: V398 = EXP 0x2 0xa0
0x463: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x466: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x468: V401 = AND V393 0xffffffffffffffffffffffffffffffffffffffff
0x469: V402 = EQ V401 V400
0x46a: V403 = 0x472
0x46d: JUMPI 0x472 V402
---
Entry stack: [V13, 0x100]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x46e
[0x46e:0x471]
---
Predecessors: [0x456]
Successors: []
---
0x46e PUSH1 0x0
0x470 DUP1
0x471 REVERT
---
0x46e: V404 = 0x0
0x471: REVERT 0x0 0x0
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x472
[0x472:0x485]
---
Predecessors: [0x456]
Successors: [0x486, 0x48a]
---
0x472 JUMPDEST
0x473 PUSH1 0x0
0x475 SLOAD
0x476 PUSH1 0xa0
0x478 PUSH1 0x2
0x47a EXP
0x47b SWAP1
0x47c DIV
0x47d PUSH1 0xff
0x47f AND
0x480 ISZERO
0x481 ISZERO
0x482 PUSH2 0x48a
0x485 JUMPI
---
0x472: JUMPDEST 
0x473: V405 = 0x0
0x475: V406 = S[0x0]
0x476: V407 = 0xa0
0x478: V408 = 0x2
0x47a: V409 = EXP 0x2 0xa0
0x47c: V410 = DIV V406 0x10000000000000000000000000000000000000000
0x47d: V411 = 0xff
0x47f: V412 = AND 0xff V410
0x480: V413 = ISZERO V412
0x481: V414 = ISZERO V413
0x482: V415 = 0x48a
0x485: JUMPI 0x48a V414
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0x472]
Successors: []
---
0x486 PUSH1 0x0
0x488 DUP1
0x489 REVERT
---
0x486: V416 = 0x0
0x489: REVERT 0x0 0x0
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x48a
[0x48a:0x4d7]
---
Predecessors: [0x472]
Successors: [0x4d8]
---
0x48a JUMPDEST
0x48b PUSH1 0x0
0x48d DUP1
0x48e SLOAD
0x48f PUSH21 0xff0000000000000000000000000000000000000000
0x4a5 NOT
0x4a6 AND
0x4a7 SWAP1
0x4a8 SSTORE
0x4a9 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x4ca PUSH1 0x40
0x4cc MLOAD
0x4cd PUSH1 0x40
0x4cf MLOAD
0x4d0 DUP1
0x4d1 SWAP2
0x4d2 SUB
0x4d3 SWAP1
0x4d4 LOG1
0x4d5 POP
0x4d6 PUSH1 0x1
---
0x48a: JUMPDEST 
0x48b: V417 = 0x0
0x48e: V418 = S[0x0]
0x48f: V419 = 0xff0000000000000000000000000000000000000000
0x4a5: V420 = NOT 0xff0000000000000000000000000000000000000000
0x4a6: V421 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V418
0x4a8: S[0x0] = V421
0x4a9: V422 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x4ca: V423 = 0x40
0x4cc: V424 = M[0x40]
0x4cd: V425 = 0x40
0x4cf: V426 = M[0x40]
0x4d2: V427 = SUB V424 V426
0x4d4: LOG V426 V427 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x4d6: V428 = 0x1
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V13, 0x100, 0x1]

================================

Block 0x4d8
[0x4d8:0x4da]
---
Predecessors: [0x48a, 0x50f, 0x522, 0x535]
Successors: [0x100, 0x18e, 0x33b]
---
0x4d8 JUMPDEST
0x4d9 SWAP1
0x4da JUMP
---
0x4d8: JUMPDEST 
0x4da: JUMP {0x100, 0x18e, 0x33b}
---
Entry stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x100, 0x18e, 0x33b}, {0x1, 0x85, 0xa7, 0xc8}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x1, 0x85, 0xa7, 0xc8}]

================================

Block 0x4db
[0x4db:0x4e0]
---
Predecessors: [0x11f]
Successors: [0x127]
---
0x4db JUMPDEST
0x4dc PUSH1 0x5
0x4de SLOAD
0x4df DUP2
0x4e0 JUMP
---
0x4db: JUMPDEST 
0x4dc: V429 = 0x5
0x4de: V430 = S[0x5]
0x4e0: JUMP 0x127
---
Entry stack: [V13, 0x127]
Stack pops: 1
Stack additions: [S0, V430]
Exit stack: [V13, 0x127, V430]

================================

Block 0x4e1
[0x4e1:0x4ef]
---
Predecessors: [0x144]
Successors: [0x14c]
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0x3
0x4e4 SLOAD
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0xa0
0x4e9 PUSH1 0x2
0x4eb EXP
0x4ec SUB
0x4ed AND
0x4ee DUP2
0x4ef JUMP
---
0x4e1: JUMPDEST 
0x4e2: V431 = 0x3
0x4e4: V432 = S[0x3]
0x4e5: V433 = 0x1
0x4e7: V434 = 0xa0
0x4e9: V435 = 0x2
0x4eb: V436 = EXP 0x2 0xa0
0x4ec: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ed: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x4ef: JUMP 0x14c
---
Entry stack: [V13, 0x14c]
Stack pops: 1
Stack additions: [S0, V438]
Exit stack: [V13, 0x14c, V438]

================================

Block 0x4f0
[0x4f0:0x4ff]
---
Predecessors: [0x173]
Successors: [0x100]
---
0x4f0 JUMPDEST
0x4f1 PUSH1 0x0
0x4f3 SLOAD
0x4f4 PUSH1 0xa0
0x4f6 PUSH1 0x2
0x4f8 EXP
0x4f9 SWAP1
0x4fa DIV
0x4fb PUSH1 0xff
0x4fd AND
0x4fe DUP2
0x4ff JUMP
---
0x4f0: JUMPDEST 
0x4f1: V439 = 0x0
0x4f3: V440 = S[0x0]
0x4f4: V441 = 0xa0
0x4f6: V442 = 0x2
0x4f8: V443 = EXP 0x2 0xa0
0x4fa: V444 = DIV V440 0x10000000000000000000000000000000000000000
0x4fb: V445 = 0xff
0x4fd: V446 = AND 0xff V444
0x4ff: JUMP 0x100
---
Entry stack: [V13, 0x100]
Stack pops: 1
Stack additions: [S0, V446]
Exit stack: [V13, 0x100, V446]

================================

Block 0x500
[0x500:0x50e]
---
Predecessors: [0x186, 0x330]
Successors: [0x50f, 0x516]
---
0x500 JUMPDEST
0x501 PUSH1 0x0
0x503 PUSH4 0x5a497a00
0x508 TIMESTAMP
0x509 LT
0x50a ISZERO
0x50b PUSH2 0x516
0x50e JUMPI
---
0x500: JUMPDEST 
0x501: V447 = 0x0
0x503: V448 = 0x5a497a00
0x508: V449 = TIMESTAMP
0x509: V450 = LT V449 0x5a497a00
0x50a: V451 = ISZERO V450
0x50b: V452 = 0x516
0x50e: JUMPI 0x516 V451
---
Entry stack: [V13, 0xeb, S4, 0x0, 0x0, S1, {0x18e, 0x33b}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xeb, S4, 0x0, 0x0, S1, {0x18e, 0x33b}, 0x0]

================================

Block 0x50f
[0x50f:0x515]
---
Predecessors: [0x500]
Successors: [0x4d8]
---
0x50f POP
0x510 PUSH1 0xc8
0x512 PUSH2 0x4d8
0x515 JUMP
---
0x510: V453 = 0xc8
0x512: V454 = 0x4d8
0x515: JUMP 0x4d8
---
Entry stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0x0]
Stack pops: 1
Stack additions: [0xc8]
Exit stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0xc8]

================================

Block 0x516
[0x516:0x521]
---
Predecessors: [0x500]
Successors: [0x522, 0x529]
---
0x516 JUMPDEST
0x517 PUSH4 0x5a5bef00
0x51c TIMESTAMP
0x51d GT
0x51e PUSH2 0x529
0x521 JUMPI
---
0x516: JUMPDEST 
0x517: V455 = 0x5a5bef00
0x51c: V456 = TIMESTAMP
0x51d: V457 = GT V456 0x5a5bef00
0x51e: V458 = 0x529
0x521: JUMPI 0x529 V457
---
Entry stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0x0]

================================

Block 0x522
[0x522:0x528]
---
Predecessors: [0x516]
Successors: [0x4d8]
---
0x522 POP
0x523 PUSH1 0xa7
0x525 PUSH2 0x4d8
0x528 JUMP
---
0x523: V459 = 0xa7
0x525: V460 = 0x4d8
0x528: JUMP 0x4d8
---
Entry stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0x0]
Stack pops: 1
Stack additions: [0xa7]
Exit stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0xa7]

================================

Block 0x529
[0x529:0x534]
---
Predecessors: [0x516]
Successors: [0x535, 0x53c]
---
0x529 JUMPDEST
0x52a PUSH4 0x5a6e6400
0x52f TIMESTAMP
0x530 GT
0x531 PUSH2 0x53c
0x534 JUMPI
---
0x529: JUMPDEST 
0x52a: V461 = 0x5a6e6400
0x52f: V462 = TIMESTAMP
0x530: V463 = GT V462 0x5a6e6400
0x531: V464 = 0x53c
0x534: JUMPI 0x53c V463
---
Entry stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0x0]

================================

Block 0x535
[0x535:0x53b]
---
Predecessors: [0x529]
Successors: [0x4d8]
---
0x535 POP
0x536 PUSH1 0x85
0x538 PUSH2 0x4d8
0x53b JUMP
---
0x536: V465 = 0x85
0x538: V466 = 0x4d8
0x53b: JUMP 0x4d8
---
Entry stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0x0]
Stack pops: 1
Stack additions: [0x85]
Exit stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0x85]

================================

Block 0x53c
[0x53c:0x541]
---
Predecessors: [0x529]
Successors: [0x18e, 0x33b]
---
0x53c JUMPDEST
0x53d POP
0x53e PUSH1 0x64
0x540 SWAP1
0x541 JUMP
---
0x53c: JUMPDEST 
0x53e: V467 = 0x64
0x541: JUMP {0x18e, 0x33b}
---
Entry stack: [V13, 0xeb, S5, 0x0, 0x0, S2, {0x18e, 0x33b}, 0x0]
Stack pops: 2
Stack additions: [0x64]
Exit stack: [V13, 0xeb, S5, 0x0, 0x0, S2, 0x64]

================================

Block 0x542
[0x542:0x559]
---
Predecessors: [0x1af]
Successors: [0x55a, 0x55e]
---
0x542 JUMPDEST
0x543 PUSH1 0x0
0x545 DUP1
0x546 SLOAD
0x547 CALLER
0x548 PUSH1 0x1
0x54a PUSH1 0xa0
0x54c PUSH1 0x2
0x54e EXP
0x54f SUB
0x550 SWAP1
0x551 DUP2
0x552 AND
0x553 SWAP2
0x554 AND
0x555 EQ
0x556 PUSH2 0x55e
0x559 JUMPI
---
0x542: JUMPDEST 
0x543: V468 = 0x0
0x546: V469 = S[0x0]
0x547: V470 = CALLER
0x548: V471 = 0x1
0x54a: V472 = 0xa0
0x54c: V473 = 0x2
0x54e: V474 = EXP 0x2 0xa0
0x54f: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x552: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x554: V477 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x555: V478 = EQ V477 V476
0x556: V479 = 0x55e
0x559: JUMPI 0x55e V478
---
Entry stack: [V13, 0x100]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x55a
[0x55a:0x55d]
---
Predecessors: [0x542]
Successors: []
---
0x55a PUSH1 0x0
0x55c DUP1
0x55d REVERT
---
0x55a: V480 = 0x0
0x55d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x55e
[0x55e:0x56a]
---
Predecessors: [0x542]
Successors: [0x56b, 0x56f]
---
0x55e JUMPDEST
0x55f PUSH1 0x6
0x561 SLOAD
0x562 PUSH1 0xff
0x564 AND
0x565 ISZERO
0x566 ISZERO
0x567 PUSH2 0x56f
0x56a JUMPI
---
0x55e: JUMPDEST 
0x55f: V481 = 0x6
0x561: V482 = S[0x6]
0x562: V483 = 0xff
0x564: V484 = AND 0xff V482
0x565: V485 = ISZERO V484
0x566: V486 = ISZERO V485
0x567: V487 = 0x56f
0x56a: JUMPI 0x56f V486
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x56b
[0x56b:0x56e]
---
Predecessors: [0x55e]
Successors: []
---
0x56b PUSH1 0x0
0x56d DUP1
0x56e REVERT
---
0x56b: V488 = 0x0
0x56e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x56f
[0x56f:0x57b]
---
Predecessors: [0x55e]
Successors: [0x57c, 0x580]
---
0x56f JUMPDEST
0x570 PUSH4 0x5a6f68aa
0x575 TIMESTAMP
0x576 LT
0x577 ISZERO
0x578 PUSH2 0x580
0x57b JUMPI
---
0x56f: JUMPDEST 
0x570: V489 = 0x5a6f68aa
0x575: V490 = TIMESTAMP
0x576: V491 = LT V490 0x5a6f68aa
0x577: V492 = ISZERO V491
0x578: V493 = 0x580
0x57b: JUMPI 0x580 V492
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x57c
[0x57c:0x57f]
---
Predecessors: [0x56f]
Successors: []
---
0x57c PUSH1 0x0
0x57e DUP1
0x57f REVERT
---
0x57c: V494 = 0x0
0x57f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x580
[0x580:0x5c3]
---
Predecessors: [0x56f]
Successors: [0x5c4, 0x5c8]
---
0x580 JUMPDEST
0x581 PUSH1 0x1
0x583 SLOAD
0x584 PUSH1 0x1
0x586 PUSH1 0xa0
0x588 PUSH1 0x2
0x58a EXP
0x58b SUB
0x58c AND
0x58d PUSH4 0x7d64bcb4
0x592 PUSH1 0x0
0x594 PUSH1 0x40
0x596 MLOAD
0x597 PUSH1 0x20
0x599 ADD
0x59a MSTORE
0x59b PUSH1 0x40
0x59d MLOAD
0x59e DUP2
0x59f PUSH4 0xffffffff
0x5a4 AND
0x5a5 PUSH1 0xe0
0x5a7 PUSH1 0x2
0x5a9 EXP
0x5aa MUL
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x4
0x5af ADD
0x5b0 PUSH1 0x20
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP1
0x5b6 DUP4
0x5b7 SUB
0x5b8 DUP2
0x5b9 PUSH1 0x0
0x5bb DUP8
0x5bc DUP1
0x5bd EXTCODESIZE
0x5be ISZERO
0x5bf ISZERO
0x5c0 PUSH2 0x5c8
0x5c3 JUMPI
---
0x580: JUMPDEST 
0x581: V495 = 0x1
0x583: V496 = S[0x1]
0x584: V497 = 0x1
0x586: V498 = 0xa0
0x588: V499 = 0x2
0x58a: V500 = EXP 0x2 0xa0
0x58b: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58c: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x58d: V503 = 0x7d64bcb4
0x592: V504 = 0x0
0x594: V505 = 0x40
0x596: V506 = M[0x40]
0x597: V507 = 0x20
0x599: V508 = ADD 0x20 V506
0x59a: M[V508] = 0x0
0x59b: V509 = 0x40
0x59d: V510 = M[0x40]
0x59f: V511 = 0xffffffff
0x5a4: V512 = AND 0xffffffff 0x7d64bcb4
0x5a5: V513 = 0xe0
0x5a7: V514 = 0x2
0x5a9: V515 = EXP 0x2 0xe0
0x5aa: V516 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0x5ac: M[V510] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0x5ad: V517 = 0x4
0x5af: V518 = ADD 0x4 V510
0x5b0: V519 = 0x20
0x5b2: V520 = 0x40
0x5b4: V521 = M[0x40]
0x5b7: V522 = SUB V518 V521
0x5b9: V523 = 0x0
0x5bd: V524 = EXTCODESIZE V502
0x5be: V525 = ISZERO V524
0x5bf: V526 = ISZERO V525
0x5c0: V527 = 0x5c8
0x5c3: JUMPI 0x5c8 V526
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: [V502, 0x7d64bcb4, V518, 0x20, V521, V522, V521, 0x0, V502]
Exit stack: [V13, 0x100, 0x0, V502, 0x7d64bcb4, V518, 0x20, V521, V522, V521, 0x0, V502]

================================

Block 0x5c4
[0x5c4:0x5c7]
---
Predecessors: [0x580]
Successors: []
---
0x5c4 PUSH1 0x0
0x5c6 DUP1
0x5c7 REVERT
---
0x5c4: V528 = 0x0
0x5c7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x100, 0x0, V502, 0x7d64bcb4, V518, 0x20, V521, V522, V521, 0x0, V502]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0, V502, 0x7d64bcb4, V518, 0x20, V521, V522, V521, 0x0, V502]

================================

Block 0x5c8
[0x5c8:0x5d4]
---
Predecessors: [0x580]
Successors: [0x5d5, 0x5d9]
---
0x5c8 JUMPDEST
0x5c9 PUSH2 0x2c6
0x5cc GAS
0x5cd SUB
0x5ce CALL
0x5cf ISZERO
0x5d0 ISZERO
0x5d1 PUSH2 0x5d9
0x5d4 JUMPI
---
0x5c8: JUMPDEST 
0x5c9: V529 = 0x2c6
0x5cc: V530 = GAS
0x5cd: V531 = SUB V530 0x2c6
0x5ce: V532 = CALL V531 V502 0x0 V521 V522 V521 0x20
0x5cf: V533 = ISZERO V532
0x5d0: V534 = ISZERO V533
0x5d1: V535 = 0x5d9
0x5d4: JUMPI 0x5d9 V534
---
Entry stack: [V13, 0x100, 0x0, V502, 0x7d64bcb4, V518, 0x20, V521, V522, V521, 0x0, V502]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x100, 0x0, V502, 0x7d64bcb4, V518]

================================

Block 0x5d5
[0x5d5:0x5d8]
---
Predecessors: [0x5c8]
Successors: []
---
0x5d5 PUSH1 0x0
0x5d7 DUP1
0x5d8 REVERT
---
0x5d5: V536 = 0x0
0x5d8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x100, 0x0, V502, 0x7d64bcb4, V518]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0, V502, 0x7d64bcb4, V518]

================================

Block 0x5d9
[0x5d9:0x5e6]
---
Predecessors: [0x5c8]
Successors: [0x100]
---
0x5d9 JUMPDEST
0x5da POP
0x5db POP
0x5dc POP
0x5dd PUSH1 0x40
0x5df MLOAD
0x5e0 DUP1
0x5e1 MLOAD
0x5e2 SWAP2
0x5e3 POP
0x5e4 POP
0x5e5 SWAP1
0x5e6 JUMP
---
0x5d9: JUMPDEST 
0x5dd: V537 = 0x40
0x5df: V538 = M[0x40]
0x5e1: V539 = M[V538]
0x5e6: JUMP 0x100
---
Entry stack: [V13, 0x100, 0x0, V502, 0x7d64bcb4, V518]
Stack pops: 5
Stack additions: [V539]
Exit stack: [V13, V539]

================================

Block 0x5e7
[0x5e7:0x5fe]
---
Predecessors: [0x1c2]
Successors: [0x5ff, 0x603]
---
0x5e7 JUMPDEST
0x5e8 PUSH1 0x0
0x5ea DUP1
0x5eb SLOAD
0x5ec CALLER
0x5ed PUSH1 0x1
0x5ef PUSH1 0xa0
0x5f1 PUSH1 0x2
0x5f3 EXP
0x5f4 SUB
0x5f5 SWAP1
0x5f6 DUP2
0x5f7 AND
0x5f8 SWAP2
0x5f9 AND
0x5fa EQ
0x5fb PUSH2 0x603
0x5fe JUMPI
---
0x5e7: JUMPDEST 
0x5e8: V540 = 0x0
0x5eb: V541 = S[0x0]
0x5ec: V542 = CALLER
0x5ed: V543 = 0x1
0x5ef: V544 = 0xa0
0x5f1: V545 = 0x2
0x5f3: V546 = EXP 0x2 0xa0
0x5f4: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f7: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0x5f9: V549 = AND V541 0xffffffffffffffffffffffffffffffffffffffff
0x5fa: V550 = EQ V549 V548
0x5fb: V551 = 0x603
0x5fe: JUMPI 0x603 V550
---
Entry stack: [V13, 0x100]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x5ff
[0x5ff:0x602]
---
Predecessors: [0x5e7]
Successors: []
---
0x5ff PUSH1 0x0
0x601 DUP1
0x602 REVERT
---
0x5ff: V552 = 0x0
0x602: REVERT 0x0 0x0
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x603
[0x603:0x615]
---
Predecessors: [0x5e7]
Successors: [0x616, 0x61a]
---
0x603 JUMPDEST
0x604 PUSH1 0x0
0x606 SLOAD
0x607 PUSH1 0xa0
0x609 PUSH1 0x2
0x60b EXP
0x60c SWAP1
0x60d DIV
0x60e PUSH1 0xff
0x610 AND
0x611 ISZERO
0x612 PUSH2 0x61a
0x615 JUMPI
---
0x603: JUMPDEST 
0x604: V553 = 0x0
0x606: V554 = S[0x0]
0x607: V555 = 0xa0
0x609: V556 = 0x2
0x60b: V557 = EXP 0x2 0xa0
0x60d: V558 = DIV V554 0x10000000000000000000000000000000000000000
0x60e: V559 = 0xff
0x610: V560 = AND 0xff V558
0x611: V561 = ISZERO V560
0x612: V562 = 0x61a
0x615: JUMPI 0x61a V561
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x616
[0x616:0x619]
---
Predecessors: [0x603]
Successors: []
---
0x616 PUSH1 0x0
0x618 DUP1
0x619 REVERT
---
0x616: V563 = 0x0
0x619: REVERT 0x0 0x0
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x100, 0x0]

================================

Block 0x61a
[0x61a:0x66f]
---
Predecessors: [0x603]
Successors: [0x100]
---
0x61a JUMPDEST
0x61b PUSH1 0x0
0x61d DUP1
0x61e SLOAD
0x61f PUSH21 0xff0000000000000000000000000000000000000000
0x635 NOT
0x636 AND
0x637 PUSH1 0xa0
0x639 PUSH1 0x2
0x63b EXP
0x63c OR
0x63d SWAP1
0x63e SSTORE
0x63f PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x660 PUSH1 0x40
0x662 MLOAD
0x663 PUSH1 0x40
0x665 MLOAD
0x666 DUP1
0x667 SWAP2
0x668 SUB
0x669 SWAP1
0x66a LOG1
0x66b POP
0x66c PUSH1 0x1
0x66e SWAP1
0x66f JUMP
---
0x61a: JUMPDEST 
0x61b: V564 = 0x0
0x61e: V565 = S[0x0]
0x61f: V566 = 0xff0000000000000000000000000000000000000000
0x635: V567 = NOT 0xff0000000000000000000000000000000000000000
0x636: V568 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V565
0x637: V569 = 0xa0
0x639: V570 = 0x2
0x63b: V571 = EXP 0x2 0xa0
0x63c: V572 = OR 0x10000000000000000000000000000000000000000 V568
0x63e: S[0x0] = V572
0x63f: V573 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x660: V574 = 0x40
0x662: V575 = M[0x40]
0x663: V576 = 0x40
0x665: V577 = M[0x40]
0x668: V578 = SUB V575 V577
0x66a: LOG V577 V578 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x66c: V579 = 0x1
0x66f: JUMP 0x100
---
Entry stack: [V13, 0x100, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x670
[0x670:0x67e]
---
Predecessors: [0x1d5]
Successors: [0x14c]
---
0x670 JUMPDEST
0x671 PUSH1 0x0
0x673 SLOAD
0x674 PUSH1 0x1
0x676 PUSH1 0xa0
0x678 PUSH1 0x2
0x67a EXP
0x67b SUB
0x67c AND
0x67d DUP2
0x67e JUMP
---
0x670: JUMPDEST 
0x671: V580 = 0x0
0x673: V581 = S[0x0]
0x674: V582 = 0x1
0x676: V583 = 0xa0
0x678: V584 = 0x2
0x67a: V585 = EXP 0x2 0xa0
0x67b: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67c: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x67e: JUMP 0x14c
---
Entry stack: [V13, 0x14c]
Stack pops: 1
Stack additions: [S0, V587]
Exit stack: [V13, 0x14c, V587]

================================

Block 0x67f
[0x67f:0x684]
---
Predecessors: [0x1e8]
Successors: [0x127]
---
0x67f JUMPDEST
0x680 PUSH1 0x2
0x682 SLOAD
0x683 DUP2
0x684 JUMP
---
0x67f: JUMPDEST 
0x680: V588 = 0x2
0x682: V589 = S[0x2]
0x684: JUMP 0x127
---
Entry stack: [V13, 0x127]
Stack pops: 1
Stack additions: [S0, V589]
Exit stack: [V13, 0x127, V589]

================================

Block 0x685
[0x685:0x68c]
---
Predecessors: [0x1fb]
Successors: [0x127]
---
0x685 JUMPDEST
0x686 PUSH4 0x5a497a00
0x68b DUP2
0x68c JUMP
---
0x685: JUMPDEST 
0x686: V590 = 0x5a497a00
0x68c: JUMP 0x127
---
Entry stack: [V13, 0x127]
Stack pops: 1
Stack additions: [S0, 0x5a497a00]
Exit stack: [V13, 0x127, 0x5a497a00]

================================

Block 0x68d
[0x68d:0x6a8]
---
Predecessors: [0x20e]
Successors: [0x6a9, 0x6ad]
---
0x68d JUMPDEST
0x68e PUSH1 0x0
0x690 DUP1
0x691 SLOAD
0x692 DUP2
0x693 SWAP1
0x694 DUP2
0x695 SWAP1
0x696 CALLER
0x697 PUSH1 0x1
0x699 PUSH1 0xa0
0x69b PUSH1 0x2
0x69d EXP
0x69e SUB
0x69f SWAP1
0x6a0 DUP2
0x6a1 AND
0x6a2 SWAP2
0x6a3 AND
0x6a4 EQ
0x6a5 PUSH2 0x6ad
0x6a8 JUMPI
---
0x68d: JUMPDEST 
0x68e: V591 = 0x0
0x691: V592 = S[0x0]
0x696: V593 = CALLER
0x697: V594 = 0x1
0x699: V595 = 0xa0
0x69b: V596 = 0x2
0x69d: V597 = EXP 0x2 0xa0
0x69e: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a1: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x6a3: V600 = AND V592 0xffffffffffffffffffffffffffffffffffffffff
0x6a4: V601 = EQ V600 V599
0x6a5: V602 = 0x6ad
0x6a8: JUMPI 0x6ad V601
---
Entry stack: [V13, 0xeb, V184]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0xeb, V184, 0x0, 0x0, 0x0]

================================

Block 0x6a9
[0x6a9:0x6ac]
---
Predecessors: [0x68d]
Successors: []
---
0x6a9 PUSH1 0x0
0x6ab DUP1
0x6ac REVERT
---
0x6a9: V603 = 0x0
0x6ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, V184, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, V184, 0x0, 0x0, 0x0]

================================

Block 0x6ad
[0x6ad:0x6b1]
---
Predecessors: [0x68d]
Successors: [0x6b2]
---
0x6ad JUMPDEST
0x6ae PUSH1 0x0
0x6b0 SWAP3
0x6b1 POP
---
0x6ad: JUMPDEST 
0x6ae: V604 = 0x0
---
Entry stack: [V13, 0xeb, V184, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V13, 0xeb, V184, 0x0, 0x0, 0x0]

================================

Block 0x6b2
[0x6b2:0x6bb]
---
Predecessors: [0x6ad, 0x7bc]
Successors: [0x6bc, 0x7d1]
---
0x6b2 JUMPDEST
0x6b3 DUP4
0x6b4 MLOAD
0x6b5 DUP4
0x6b6 LT
0x6b7 ISZERO
0x6b8 PUSH2 0x7d1
0x6bb JUMPI
---
0x6b2: JUMPDEST 
0x6b4: V605 = M[V184]
0x6b6: V606 = LT S2 V605
0x6b7: V607 = ISZERO V606
0x6b8: V608 = 0x7d1
0x6bb: JUMPI 0x7d1 V607
---
Entry stack: [V13, 0xeb, V184, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0xeb, V184, S2, S1, S0]

================================

Block 0x6bc
[0x6bc:0x6c5]
---
Predecessors: [0x6b2]
Successors: [0x6c6, 0x6c7]
---
0x6bc DUP4
0x6bd DUP4
0x6be DUP2
0x6bf MLOAD
0x6c0 DUP2
0x6c1 LT
0x6c2 PUSH2 0x6c7
0x6c5 JUMPI
---
0x6bf: V609 = M[V184]
0x6c1: V610 = LT S2 V609
0x6c2: V611 = 0x6c7
0x6c5: JUMPI 0x6c7 V610
---
Entry stack: [V13, 0xeb, V184, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, S2]
Exit stack: [V13, 0xeb, V184, S2, S1, S0, V184, S2]

================================

Block 0x6c6
[0x6c6:0x6c6]
---
Predecessors: [0x6bc]
Successors: []
---
0x6c6 INVALID
---
0x6c6: INVALID 
---
Entry stack: [V13, 0xeb, V184, S4, S3, S2, V184, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, V184, S4, S3, S2, V184, S0]

================================

Block 0x6c7
[0x6c7:0x725]
---
Predecessors: [0x6bc]
Successors: [0x726, 0x72a]
---
0x6c7 JUMPDEST
0x6c8 SWAP1
0x6c9 PUSH1 0x20
0x6cb ADD
0x6cc SWAP1
0x6cd PUSH1 0x20
0x6cf MUL
0x6d0 ADD
0x6d1 MLOAD
0x6d2 SWAP2
0x6d3 POP
0x6d4 DUP2
0x6d5 PUSH1 0x1
0x6d7 PUSH1 0xa0
0x6d9 PUSH1 0x2
0x6db EXP
0x6dc SUB
0x6dd AND
0x6de PUSH4 0x70a08231
0x6e3 ADDRESS
0x6e4 PUSH1 0x0
0x6e6 PUSH1 0x40
0x6e8 MLOAD
0x6e9 PUSH1 0x20
0x6eb ADD
0x6ec MSTORE
0x6ed PUSH1 0x40
0x6ef MLOAD
0x6f0 PUSH1 0xe0
0x6f2 PUSH1 0x2
0x6f4 EXP
0x6f5 PUSH4 0xffffffff
0x6fa DUP5
0x6fb AND
0x6fc MUL
0x6fd DUP2
0x6fe MSTORE
0x6ff PUSH1 0x1
0x701 PUSH1 0xa0
0x703 PUSH1 0x2
0x705 EXP
0x706 SUB
0x707 SWAP1
0x708 SWAP2
0x709 AND
0x70a PUSH1 0x4
0x70c DUP3
0x70d ADD
0x70e MSTORE
0x70f PUSH1 0x24
0x711 ADD
0x712 PUSH1 0x20
0x714 PUSH1 0x40
0x716 MLOAD
0x717 DUP1
0x718 DUP4
0x719 SUB
0x71a DUP2
0x71b PUSH1 0x0
0x71d DUP8
0x71e DUP1
0x71f EXTCODESIZE
0x720 ISZERO
0x721 ISZERO
0x722 PUSH2 0x72a
0x725 JUMPI
---
0x6c7: JUMPDEST 
0x6c9: V612 = 0x20
0x6cb: V613 = ADD 0x20 V184
0x6cd: V614 = 0x20
0x6cf: V615 = MUL 0x20 S0
0x6d0: V616 = ADD V615 V613
0x6d1: V617 = M[V616]
0x6d5: V618 = 0x1
0x6d7: V619 = 0xa0
0x6d9: V620 = 0x2
0x6db: V621 = EXP 0x2 0xa0
0x6dc: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dd: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0x6de: V624 = 0x70a08231
0x6e3: V625 = ADDRESS
0x6e4: V626 = 0x0
0x6e6: V627 = 0x40
0x6e8: V628 = M[0x40]
0x6e9: V629 = 0x20
0x6eb: V630 = ADD 0x20 V628
0x6ec: M[V630] = 0x0
0x6ed: V631 = 0x40
0x6ef: V632 = M[0x40]
0x6f0: V633 = 0xe0
0x6f2: V634 = 0x2
0x6f4: V635 = EXP 0x2 0xe0
0x6f5: V636 = 0xffffffff
0x6fb: V637 = AND 0x70a08231 0xffffffff
0x6fc: V638 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x6fe: M[V632] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6ff: V639 = 0x1
0x701: V640 = 0xa0
0x703: V641 = 0x2
0x705: V642 = EXP 0x2 0xa0
0x706: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x709: V644 = AND V625 0xffffffffffffffffffffffffffffffffffffffff
0x70a: V645 = 0x4
0x70d: V646 = ADD V632 0x4
0x70e: M[V646] = V644
0x70f: V647 = 0x24
0x711: V648 = ADD 0x24 V632
0x712: V649 = 0x20
0x714: V650 = 0x40
0x716: V651 = M[0x40]
0x719: V652 = SUB V648 V651
0x71b: V653 = 0x0
0x71f: V654 = EXTCODESIZE V623
0x720: V655 = ISZERO V654
0x721: V656 = ISZERO V655
0x722: V657 = 0x72a
0x725: JUMPI 0x72a V656
---
Entry stack: [V13, 0xeb, V184, S4, S3, S2, V184, S0]
Stack pops: 4
Stack additions: [V617, S2, V623, 0x70a08231, V648, 0x20, V651, V652, V651, 0x0, V623]
Exit stack: [V13, 0xeb, V184, S4, V617, S2, V623, 0x70a08231, V648, 0x20, V651, V652, V651, 0x0, V623]

================================

Block 0x726
[0x726:0x729]
---
Predecessors: [0x6c7]
Successors: []
---
0x726 PUSH1 0x0
0x728 DUP1
0x729 REVERT
---
0x726: V658 = 0x0
0x729: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, V184, S11, V617, S9, V623, 0x70a08231, V648, 0x20, V651, V652, V651, 0x0, V623]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, V184, S11, V617, S9, V623, 0x70a08231, V648, 0x20, V651, V652, V651, 0x0, V623]

================================

Block 0x72a
[0x72a:0x736]
---
Predecessors: [0x6c7]
Successors: [0x737, 0x73b]
---
0x72a JUMPDEST
0x72b PUSH2 0x2c6
0x72e GAS
0x72f SUB
0x730 CALL
0x731 ISZERO
0x732 ISZERO
0x733 PUSH2 0x73b
0x736 JUMPI
---
0x72a: JUMPDEST 
0x72b: V659 = 0x2c6
0x72e: V660 = GAS
0x72f: V661 = SUB V660 0x2c6
0x730: V662 = CALL V661 V623 0x0 V651 V652 V651 0x20
0x731: V663 = ISZERO V662
0x732: V664 = ISZERO V663
0x733: V665 = 0x73b
0x736: JUMPI 0x73b V664
---
Entry stack: [V13, 0xeb, V184, S11, V617, S9, V623, 0x70a08231, V648, 0x20, V651, V652, V651, 0x0, V623]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xeb, V184, S11, V617, S9, V623, 0x70a08231, V648]

================================

Block 0x737
[0x737:0x73a]
---
Predecessors: [0x72a]
Successors: []
---
0x737 PUSH1 0x0
0x739 DUP1
0x73a REVERT
---
0x737: V666 = 0x0
0x73a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, V184, S5, V617, S3, V623, 0x70a08231, V648]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, V184, S5, V617, S3, V623, 0x70a08231, V648]

================================

Block 0x73b
[0x73b:0x7a6]
---
Predecessors: [0x72a]
Successors: [0x7a7, 0x7ab]
---
0x73b JUMPDEST
0x73c POP
0x73d POP
0x73e POP
0x73f PUSH1 0x40
0x741 MLOAD
0x742 DUP1
0x743 MLOAD
0x744 PUSH1 0x0
0x746 DUP1
0x747 SLOAD
0x748 SWAP2
0x749 SWAP4
0x74a POP
0x74b PUSH1 0x1
0x74d PUSH1 0xa0
0x74f PUSH1 0x2
0x751 EXP
0x752 SUB
0x753 DUP1
0x754 DUP7
0x755 AND
0x756 SWAP4
0x757 POP
0x758 PUSH4 0xa9059cbb
0x75d SWAP3
0x75e AND
0x75f SWAP1
0x760 DUP5
0x761 SWAP1
0x762 PUSH1 0x40
0x764 MLOAD
0x765 PUSH1 0x20
0x767 ADD
0x768 MSTORE
0x769 PUSH1 0x40
0x76b MLOAD
0x76c PUSH1 0xe0
0x76e PUSH1 0x2
0x770 EXP
0x771 PUSH4 0xffffffff
0x776 DUP6
0x777 AND
0x778 MUL
0x779 DUP2
0x77a MSTORE
0x77b PUSH1 0x1
0x77d PUSH1 0xa0
0x77f PUSH1 0x2
0x781 EXP
0x782 SUB
0x783 SWAP1
0x784 SWAP3
0x785 AND
0x786 PUSH1 0x4
0x788 DUP4
0x789 ADD
0x78a MSTORE
0x78b PUSH1 0x24
0x78d DUP3
0x78e ADD
0x78f MSTORE
0x790 PUSH1 0x44
0x792 ADD
0x793 PUSH1 0x20
0x795 PUSH1 0x40
0x797 MLOAD
0x798 DUP1
0x799 DUP4
0x79a SUB
0x79b DUP2
0x79c PUSH1 0x0
0x79e DUP8
0x79f DUP1
0x7a0 EXTCODESIZE
0x7a1 ISZERO
0x7a2 ISZERO
0x7a3 PUSH2 0x7ab
0x7a6 JUMPI
---
0x73b: JUMPDEST 
0x73f: V667 = 0x40
0x741: V668 = M[0x40]
0x743: V669 = M[V668]
0x744: V670 = 0x0
0x747: V671 = S[0x0]
0x74b: V672 = 0x1
0x74d: V673 = 0xa0
0x74f: V674 = 0x2
0x751: V675 = EXP 0x2 0xa0
0x752: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x755: V677 = AND V617 0xffffffffffffffffffffffffffffffffffffffff
0x758: V678 = 0xa9059cbb
0x75e: V679 = AND V671 0xffffffffffffffffffffffffffffffffffffffff
0x762: V680 = 0x40
0x764: V681 = M[0x40]
0x765: V682 = 0x20
0x767: V683 = ADD 0x20 V681
0x768: M[V683] = 0x0
0x769: V684 = 0x40
0x76b: V685 = M[0x40]
0x76c: V686 = 0xe0
0x76e: V687 = 0x2
0x770: V688 = EXP 0x2 0xe0
0x771: V689 = 0xffffffff
0x777: V690 = AND 0xa9059cbb 0xffffffff
0x778: V691 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x77a: M[V685] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x77b: V692 = 0x1
0x77d: V693 = 0xa0
0x77f: V694 = 0x2
0x781: V695 = EXP 0x2 0xa0
0x782: V696 = SUB 0x10000000000000000000000000000000000000000 0x1
0x785: V697 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x786: V698 = 0x4
0x789: V699 = ADD V685 0x4
0x78a: M[V699] = V697
0x78b: V700 = 0x24
0x78e: V701 = ADD V685 0x24
0x78f: M[V701] = V669
0x790: V702 = 0x44
0x792: V703 = ADD 0x44 V685
0x793: V704 = 0x20
0x795: V705 = 0x40
0x797: V706 = M[0x40]
0x79a: V707 = SUB V703 V706
0x79c: V708 = 0x0
0x7a0: V709 = EXTCODESIZE V677
0x7a1: V710 = ISZERO V709
0x7a2: V711 = ISZERO V710
0x7a3: V712 = 0x7ab
0x7a6: JUMPI 0x7ab V711
---
Entry stack: [V13, 0xeb, V184, S5, V617, S3, V623, 0x70a08231, V648]
Stack pops: 5
Stack additions: [S4, V669, V677, 0xa9059cbb, V703, 0x20, V706, V707, V706, 0x0, V677]
Exit stack: [V13, 0xeb, V184, S5, V617, V669, V677, 0xa9059cbb, V703, 0x20, V706, V707, V706, 0x0, V677]

================================

Block 0x7a7
[0x7a7:0x7aa]
---
Predecessors: [0x73b]
Successors: []
---
0x7a7 PUSH1 0x0
0x7a9 DUP1
0x7aa REVERT
---
0x7a7: V713 = 0x0
0x7aa: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, V184, S11, V617, V669, V677, 0xa9059cbb, V703, 0x20, V706, V707, V706, 0x0, V677]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, V184, S11, V617, V669, V677, 0xa9059cbb, V703, 0x20, V706, V707, V706, 0x0, V677]

================================

Block 0x7ab
[0x7ab:0x7b7]
---
Predecessors: [0x73b]
Successors: [0x7b8, 0x7bc]
---
0x7ab JUMPDEST
0x7ac PUSH2 0x2c6
0x7af GAS
0x7b0 SUB
0x7b1 CALL
0x7b2 ISZERO
0x7b3 ISZERO
0x7b4 PUSH2 0x7bc
0x7b7 JUMPI
---
0x7ab: JUMPDEST 
0x7ac: V714 = 0x2c6
0x7af: V715 = GAS
0x7b0: V716 = SUB V715 0x2c6
0x7b1: V717 = CALL V716 V677 0x0 V706 V707 V706 0x20
0x7b2: V718 = ISZERO V717
0x7b3: V719 = ISZERO V718
0x7b4: V720 = 0x7bc
0x7b7: JUMPI 0x7bc V719
---
Entry stack: [V13, 0xeb, V184, S11, V617, V669, V677, 0xa9059cbb, V703, 0x20, V706, V707, V706, 0x0, V677]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xeb, V184, S11, V617, V669, V677, 0xa9059cbb, V703]

================================

Block 0x7b8
[0x7b8:0x7bb]
---
Predecessors: [0x7ab]
Successors: []
---
0x7b8 PUSH1 0x0
0x7ba DUP1
0x7bb REVERT
---
0x7b8: V721 = 0x0
0x7bb: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, V184, S5, V617, V669, V677, 0xa9059cbb, V703]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, V184, S5, V617, V669, V677, 0xa9059cbb, V703]

================================

Block 0x7bc
[0x7bc:0x7d0]
---
Predecessors: [0x7ab]
Successors: [0x6b2]
---
0x7bc JUMPDEST
0x7bd POP
0x7be POP
0x7bf POP
0x7c0 PUSH1 0x40
0x7c2 MLOAD
0x7c3 DUP1
0x7c4 MLOAD
0x7c5 POP
0x7c6 POP
0x7c7 PUSH1 0x1
0x7c9 SWAP1
0x7ca SWAP3
0x7cb ADD
0x7cc SWAP2
0x7cd PUSH2 0x6b2
0x7d0 JUMP
---
0x7bc: JUMPDEST 
0x7c0: V722 = 0x40
0x7c2: V723 = M[0x40]
0x7c4: V724 = M[V723]
0x7c7: V725 = 0x1
0x7cb: V726 = ADD S5 0x1
0x7cd: V727 = 0x6b2
0x7d0: JUMP 0x6b2
---
Entry stack: [V13, 0xeb, V184, S5, V617, V669, V677, 0xa9059cbb, V703]
Stack pops: 6
Stack additions: [V726, S4, S3]
Exit stack: [V13, 0xeb, V184, V726, V617, V669]

================================

Block 0x7d1
[0x7d1:0x7de]
---
Predecessors: [0x6b2]
Successors: []
---
0x7d1 JUMPDEST
0x7d2 PUSH1 0x0
0x7d4 SLOAD
0x7d5 PUSH1 0x1
0x7d7 PUSH1 0xa0
0x7d9 PUSH1 0x2
0x7db EXP
0x7dc SUB
0x7dd AND
0x7de SELFDESTRUCT
---
0x7d1: JUMPDEST 
0x7d2: V728 = 0x0
0x7d4: V729 = S[0x0]
0x7d5: V730 = 0x1
0x7d7: V731 = 0xa0
0x7d9: V732 = 0x2
0x7db: V733 = EXP 0x2 0xa0
0x7dc: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dd: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V729
0x7de: SELFDESTRUCT V735
---
Entry stack: [V13, 0xeb, V184, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, V184, S2, S1, S0]

================================

Block 0x7df
[0x7df:0x7f6]
---
Predecessors: [0x25d]
Successors: [0x7f7, 0x7fb]
---
0x7df JUMPDEST
0x7e0 PUSH1 0x0
0x7e2 DUP1
0x7e3 SLOAD
0x7e4 CALLER
0x7e5 PUSH1 0x1
0x7e7 PUSH1 0xa0
0x7e9 PUSH1 0x2
0x7eb EXP
0x7ec SUB
0x7ed SWAP1
0x7ee DUP2
0x7ef AND
0x7f0 SWAP2
0x7f1 AND
0x7f2 EQ
0x7f3 PUSH2 0x7fb
0x7f6 JUMPI
---
0x7df: JUMPDEST 
0x7e0: V736 = 0x0
0x7e3: V737 = S[0x0]
0x7e4: V738 = CALLER
0x7e5: V739 = 0x1
0x7e7: V740 = 0xa0
0x7e9: V741 = 0x2
0x7eb: V742 = EXP 0x2 0xa0
0x7ec: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ef: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0x7f1: V745 = AND V737 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V746 = EQ V745 V744
0x7f3: V747 = 0x7fb
0x7f6: JUMPI 0x7fb V746
---
Entry stack: [V13, 0xeb]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xeb, 0x0]

================================

Block 0x7f7
[0x7f7:0x7fa]
---
Predecessors: [0x7df]
Successors: []
---
0x7f7 PUSH1 0x0
0x7f9 DUP1
0x7fa REVERT
---
0x7f7: V748 = 0x0
0x7fa: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, 0x0]

================================

Block 0x7fb
[0x7fb:0x806]
---
Predecessors: [0x7df]
Successors: [0x807, 0x80b]
---
0x7fb JUMPDEST
0x7fc PUSH1 0x6
0x7fe SLOAD
0x7ff PUSH1 0xff
0x801 AND
0x802 ISZERO
0x803 PUSH2 0x80b
0x806 JUMPI
---
0x7fb: JUMPDEST 
0x7fc: V749 = 0x6
0x7fe: V750 = S[0x6]
0x7ff: V751 = 0xff
0x801: V752 = AND 0xff V750
0x802: V753 = ISZERO V752
0x803: V754 = 0x80b
0x806: JUMPI 0x80b V753
---
Entry stack: [V13, 0xeb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, 0x0]

================================

Block 0x807
[0x807:0x80a]
---
Predecessors: [0x7fb]
Successors: []
---
0x807 PUSH1 0x0
0x809 DUP1
0x80a REVERT
---
0x807: V755 = 0x0
0x80a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, 0x0]

================================

Block 0x80b
[0x80b:0x817]
---
Predecessors: [0x7fb]
Successors: [0x818, 0x81c]
---
0x80b JUMPDEST
0x80c PUSH4 0x5a6f68aa
0x811 TIMESTAMP
0x812 LT
0x813 ISZERO
0x814 PUSH2 0x81c
0x817 JUMPI
---
0x80b: JUMPDEST 
0x80c: V756 = 0x5a6f68aa
0x811: V757 = TIMESTAMP
0x812: V758 = LT V757 0x5a6f68aa
0x813: V759 = ISZERO V758
0x814: V760 = 0x81c
0x817: JUMPI 0x81c V759
---
Entry stack: [V13, 0xeb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, 0x0]

================================

Block 0x818
[0x818:0x81b]
---
Predecessors: [0x80b]
Successors: []
---
0x818 PUSH1 0x0
0x81a DUP1
0x81b REVERT
---
0x818: V761 = 0x0
0x81b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, 0x0]

================================

Block 0x81c
[0x81c:0x836]
---
Predecessors: [0x80b]
Successors: [0x9a8]
---
0x81c JUMPDEST
0x81d PUSH2 0x843
0x820 PUSH1 0xa
0x822 PUSH2 0x837
0x825 PUSH1 0x64
0x827 PUSH1 0x5
0x829 SLOAD
0x82a PUSH2 0x9a8
0x82d SWAP1
0x82e SWAP2
0x82f SWAP1
0x830 PUSH4 0xffffffff
0x835 AND
0x836 JUMP
---
0x81c: JUMPDEST 
0x81d: V762 = 0x843
0x820: V763 = 0xa
0x822: V764 = 0x837
0x825: V765 = 0x64
0x827: V766 = 0x5
0x829: V767 = S[0x5]
0x82a: V768 = 0x9a8
0x830: V769 = 0xffffffff
0x835: V770 = AND 0xffffffff 0x9a8
0x836: JUMP 0x9a8
---
Entry stack: [V13, 0xeb, 0x0]
Stack pops: 0
Stack additions: [0x843, 0xa, 0x837, V767, 0x64]
Exit stack: [V13, 0xeb, 0x0, 0x843, 0xa, 0x837, V767, 0x64]

================================

Block 0x837
[0x837:0x842]
---
Predecessors: [0x9b6]
Successors: [0x95c]
---
0x837 JUMPDEST
0x838 SWAP1
0x839 PUSH4 0xffffffff
0x83e PUSH2 0x95c
0x841 AND
0x842 JUMP
---
0x837: JUMPDEST 
0x839: V771 = 0xffffffff
0x83e: V772 = 0x95c
0x841: V773 = AND 0x95c 0xffffffff
0x842: JUMP 0x95c
---
Entry stack: [V13, 0xeb, 0x0, 0x843, 0xa, V919]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V13, 0xeb, 0x0, 0x843, V919, 0xa]

================================

Block 0x843
[0x843:0x8a7]
---
Predecessors: [0x980]
Successors: [0x8a8, 0x8ac]
---
0x843 JUMPDEST
0x844 PUSH1 0x1
0x846 SLOAD
0x847 PUSH1 0x4
0x849 SLOAD
0x84a SWAP2
0x84b SWAP3
0x84c POP
0x84d PUSH1 0x1
0x84f PUSH1 0xa0
0x851 PUSH1 0x2
0x853 EXP
0x854 SUB
0x855 SWAP1
0x856 DUP2
0x857 AND
0x858 SWAP2
0x859 PUSH4 0x40c10f19
0x85e SWAP2
0x85f AND
0x860 DUP4
0x861 PUSH1 0x0
0x863 PUSH1 0x40
0x865 MLOAD
0x866 PUSH1 0x20
0x868 ADD
0x869 MSTORE
0x86a PUSH1 0x40
0x86c MLOAD
0x86d PUSH1 0xe0
0x86f PUSH1 0x2
0x871 EXP
0x872 PUSH4 0xffffffff
0x877 DUP6
0x878 AND
0x879 MUL
0x87a DUP2
0x87b MSTORE
0x87c PUSH1 0x1
0x87e PUSH1 0xa0
0x880 PUSH1 0x2
0x882 EXP
0x883 SUB
0x884 SWAP1
0x885 SWAP3
0x886 AND
0x887 PUSH1 0x4
0x889 DUP4
0x88a ADD
0x88b MSTORE
0x88c PUSH1 0x24
0x88e DUP3
0x88f ADD
0x890 MSTORE
0x891 PUSH1 0x44
0x893 ADD
0x894 PUSH1 0x20
0x896 PUSH1 0x40
0x898 MLOAD
0x899 DUP1
0x89a DUP4
0x89b SUB
0x89c DUP2
0x89d PUSH1 0x0
0x89f DUP8
0x8a0 DUP1
0x8a1 EXTCODESIZE
0x8a2 ISZERO
0x8a3 ISZERO
0x8a4 PUSH2 0x8ac
0x8a7 JUMPI
---
0x843: JUMPDEST 
0x844: V774 = 0x1
0x846: V775 = S[0x1]
0x847: V776 = 0x4
0x849: V777 = S[0x4]
0x84d: V778 = 0x1
0x84f: V779 = 0xa0
0x851: V780 = 0x2
0x853: V781 = EXP 0x2 0xa0
0x854: V782 = SUB 0x10000000000000000000000000000000000000000 0x1
0x857: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0x859: V784 = 0x40c10f19
0x85f: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V777
0x861: V786 = 0x0
0x863: V787 = 0x40
0x865: V788 = M[0x40]
0x866: V789 = 0x20
0x868: V790 = ADD 0x20 V788
0x869: M[V790] = 0x0
0x86a: V791 = 0x40
0x86c: V792 = M[0x40]
0x86d: V793 = 0xe0
0x86f: V794 = 0x2
0x871: V795 = EXP 0x2 0xe0
0x872: V796 = 0xffffffff
0x878: V797 = AND 0x40c10f19 0xffffffff
0x879: V798 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x87b: M[V792] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x87c: V799 = 0x1
0x87e: V800 = 0xa0
0x880: V801 = 0x2
0x882: V802 = EXP 0x2 0xa0
0x883: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x886: V804 = AND V785 0xffffffffffffffffffffffffffffffffffffffff
0x887: V805 = 0x4
0x88a: V806 = ADD V792 0x4
0x88b: M[V806] = V804
0x88c: V807 = 0x24
0x88f: V808 = ADD V792 0x24
0x890: M[V808] = S0
0x891: V809 = 0x44
0x893: V810 = ADD 0x44 V792
0x894: V811 = 0x20
0x896: V812 = 0x40
0x898: V813 = M[0x40]
0x89b: V814 = SUB V810 V813
0x89d: V815 = 0x0
0x8a1: V816 = EXTCODESIZE V783
0x8a2: V817 = ISZERO V816
0x8a3: V818 = ISZERO V817
0x8a4: V819 = 0x8ac
0x8a7: JUMPI 0x8ac V818
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, V783, 0x40c10f19, V810, 0x20, V813, V814, V813, 0x0, V783]
Exit stack: [V13, S5, S4, S3, S2, S0, V783, 0x40c10f19, V810, 0x20, V813, V814, V813, 0x0, V783]

================================

Block 0x8a8
[0x8a8:0x8ab]
---
Predecessors: [0x843]
Successors: []
---
0x8a8 PUSH1 0x0
0x8aa DUP1
0x8ab REVERT
---
0x8a8: V820 = 0x0
0x8ab: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, S11, S10, S9, V783, 0x40c10f19, V810, 0x20, V813, V814, V813, 0x0, V783]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, V783, 0x40c10f19, V810, 0x20, V813, V814, V813, 0x0, V783]

================================

Block 0x8ac
[0x8ac:0x8b8]
---
Predecessors: [0x843]
Successors: [0x8b9, 0x8bd]
---
0x8ac JUMPDEST
0x8ad PUSH2 0x2c6
0x8b0 GAS
0x8b1 SUB
0x8b2 CALL
0x8b3 ISZERO
0x8b4 ISZERO
0x8b5 PUSH2 0x8bd
0x8b8 JUMPI
---
0x8ac: JUMPDEST 
0x8ad: V821 = 0x2c6
0x8b0: V822 = GAS
0x8b1: V823 = SUB V822 0x2c6
0x8b2: V824 = CALL V823 V783 0x0 V813 V814 V813 0x20
0x8b3: V825 = ISZERO V824
0x8b4: V826 = ISZERO V825
0x8b5: V827 = 0x8bd
0x8b8: JUMPI 0x8bd V826
---
Entry stack: [V13, S13, S12, S11, S10, S9, V783, 0x40c10f19, V810, 0x20, V813, V814, V813, 0x0, V783]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, V783, 0x40c10f19, V810]

================================

Block 0x8b9
[0x8b9:0x8bc]
---
Predecessors: [0x8ac]
Successors: []
---
0x8b9 PUSH1 0x0
0x8bb DUP1
0x8bc REVERT
---
0x8b9: V828 = 0x0
0x8bc: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, S5, {0x0, 0xeb}, S3, S2, 0x40c10f19, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S5, {0x0, 0xeb}, S3, S2, 0x40c10f19, S0]

================================

Block 0x8bd
[0x8bd:0x8d6]
---
Predecessors: [0x8ac]
Successors: [0xeb]
---
0x8bd JUMPDEST
0x8be POP
0x8bf POP
0x8c0 POP
0x8c1 PUSH1 0x40
0x8c3 MLOAD
0x8c4 DUP1
0x8c5 MLOAD
0x8c6 POP
0x8c7 POP
0x8c8 PUSH1 0x6
0x8ca DUP1
0x8cb SLOAD
0x8cc PUSH1 0xff
0x8ce NOT
0x8cf AND
0x8d0 PUSH1 0x1
0x8d2 OR
0x8d3 SWAP1
0x8d4 SSTORE
0x8d5 POP
0x8d6 JUMP
---
0x8bd: JUMPDEST 
0x8c1: V829 = 0x40
0x8c3: V830 = M[0x40]
0x8c5: V831 = M[V830]
0x8c8: V832 = 0x6
0x8cb: V833 = S[0x6]
0x8cc: V834 = 0xff
0x8ce: V835 = NOT 0xff
0x8cf: V836 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V833
0x8d0: V837 = 0x1
0x8d2: V838 = OR 0x1 V836
0x8d4: S[0x6] = V838
0x8d6: JUMP {0x0, 0xeb}
---
Entry stack: [V13, 0xeb, S5, {0x0, 0xeb}, S3, S2, 0x40c10f19, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0xeb, S5]

================================

Block 0x8d7
[0x8d7:0x8e5]
---
Predecessors: [0x270]
Successors: [0x14c]
---
0x8d7 JUMPDEST
0x8d8 PUSH1 0x4
0x8da SLOAD
0x8db PUSH1 0x1
0x8dd PUSH1 0xa0
0x8df PUSH1 0x2
0x8e1 EXP
0x8e2 SUB
0x8e3 AND
0x8e4 DUP2
0x8e5 JUMP
---
0x8d7: JUMPDEST 
0x8d8: V839 = 0x4
0x8da: V840 = S[0x4]
0x8db: V841 = 0x1
0x8dd: V842 = 0xa0
0x8df: V843 = 0x2
0x8e1: V844 = EXP 0x2 0xa0
0x8e2: V845 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e3: V846 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0x8e5: JUMP 0x14c
---
Entry stack: [V13, 0x14c]
Stack pops: 1
Stack additions: [S0, V846]
Exit stack: [V13, 0x14c, V846]

================================

Block 0x8e6
[0x8e6:0x8ee]
---
Predecessors: [0x283]
Successors: [0x100]
---
0x8e6 JUMPDEST
0x8e7 PUSH1 0x6
0x8e9 SLOAD
0x8ea PUSH1 0xff
0x8ec AND
0x8ed DUP2
0x8ee JUMP
---
0x8e6: JUMPDEST 
0x8e7: V847 = 0x6
0x8e9: V848 = S[0x6]
0x8ea: V849 = 0xff
0x8ec: V850 = AND 0xff V848
0x8ee: JUMP 0x100
---
Entry stack: [V13, 0x100]
Stack pops: 1
Stack additions: [S0, V850]
Exit stack: [V13, 0x100, V850]

================================

Block 0x8ef
[0x8ef:0x8f6]
---
Predecessors: [0x2aa]
Successors: [0x127]
---
0x8ef JUMPDEST
0x8f0 PUSH4 0x5a6f68aa
0x8f5 DUP2
0x8f6 JUMP
---
0x8ef: JUMPDEST 
0x8f0: V851 = 0x5a6f68aa
0x8f6: JUMP 0x127
---
Entry stack: [V13, 0x127]
Stack pops: 1
Stack additions: [S0, 0x5a6f68aa]
Exit stack: [V13, 0x127, 0x5a6f68aa]

================================

Block 0x8f7
[0x8f7:0x90d]
---
Predecessors: [0x2bd]
Successors: [0x90e, 0x912]
---
0x8f7 JUMPDEST
0x8f8 PUSH1 0x0
0x8fa SLOAD
0x8fb CALLER
0x8fc PUSH1 0x1
0x8fe PUSH1 0xa0
0x900 PUSH1 0x2
0x902 EXP
0x903 SUB
0x904 SWAP1
0x905 DUP2
0x906 AND
0x907 SWAP2
0x908 AND
0x909 EQ
0x90a PUSH2 0x912
0x90d JUMPI
---
0x8f7: JUMPDEST 
0x8f8: V852 = 0x0
0x8fa: V853 = S[0x0]
0x8fb: V854 = CALLER
0x8fc: V855 = 0x1
0x8fe: V856 = 0xa0
0x900: V857 = 0x2
0x902: V858 = EXP 0x2 0xa0
0x903: V859 = SUB 0x10000000000000000000000000000000000000000 0x1
0x906: V860 = AND 0xffffffffffffffffffffffffffffffffffffffff V854
0x908: V861 = AND V853 0xffffffffffffffffffffffffffffffffffffffff
0x909: V862 = EQ V861 V860
0x90a: V863 = 0x912
0x90d: JUMPI 0x912 V862
---
Entry stack: [V13, 0xeb, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, V238]

================================

Block 0x90e
[0x90e:0x911]
---
Predecessors: [0x8f7]
Successors: []
---
0x90e PUSH1 0x0
0x910 DUP1
0x911 REVERT
---
0x90e: V864 = 0x0
0x911: REVERT 0x0 0x0
---
Entry stack: [V13, 0xeb, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, V238]

================================

Block 0x912
[0x912:0x921]
---
Predecessors: [0x8f7]
Successors: [0x922, 0x94a]
---
0x912 JUMPDEST
0x913 PUSH1 0x1
0x915 PUSH1 0xa0
0x917 PUSH1 0x2
0x919 EXP
0x91a SUB
0x91b DUP2
0x91c AND
0x91d ISZERO
0x91e PUSH2 0x94a
0x921 JUMPI
---
0x912: JUMPDEST 
0x913: V865 = 0x1
0x915: V866 = 0xa0
0x917: V867 = 0x2
0x919: V868 = EXP 0x2 0xa0
0x91a: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91c: V870 = AND V238 0xffffffffffffffffffffffffffffffffffffffff
0x91d: V871 = ISZERO V870
0x91e: V872 = 0x94a
0x921: JUMPI 0x94a V871
---
Entry stack: [V13, 0xeb, V238]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xeb, V238]

================================

Block 0x922
[0x922:0x949]
---
Predecessors: [0x912]
Successors: [0x94a]
---
0x922 PUSH1 0x0
0x924 DUP1
0x925 SLOAD
0x926 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93b NOT
0x93c AND
0x93d PUSH1 0x1
0x93f PUSH1 0xa0
0x941 PUSH1 0x2
0x943 EXP
0x944 SUB
0x945 DUP4
0x946 AND
0x947 OR
0x948 SWAP1
0x949 SSTORE
---
0x922: V873 = 0x0
0x925: V874 = S[0x0]
0x926: V875 = 0xffffffffffffffffffffffffffffffffffffffff
0x93b: V876 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x93c: V877 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V874
0x93d: V878 = 0x1
0x93f: V879 = 0xa0
0x941: V880 = 0x2
0x943: V881 = EXP 0x2 0xa0
0x944: V882 = SUB 0x10000000000000000000000000000000000000000 0x1
0x946: V883 = AND V238 0xffffffffffffffffffffffffffffffffffffffff
0x947: V884 = OR V883 V877
0x949: S[0x0] = V884
---
Entry stack: [V13, 0xeb, V238]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xeb, V238]

================================

Block 0x94a
[0x94a:0x94c]
---
Predecessors: [0x912, 0x922]
Successors: [0xeb]
---
0x94a JUMPDEST
0x94b POP
0x94c JUMP
---
0x94a: JUMPDEST 
0x94c: JUMP 0xeb
---
Entry stack: [V13, 0xeb, V238]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x94d
[0x94d:0x95b]
---
Predecessors: [0x2dc]
Successors: [0x14c]
---
0x94d JUMPDEST
0x94e PUSH1 0x1
0x950 SLOAD
0x951 PUSH1 0x1
0x953 PUSH1 0xa0
0x955 PUSH1 0x2
0x957 EXP
0x958 SUB
0x959 AND
0x95a DUP2
0x95b JUMP
---
0x94d: JUMPDEST 
0x94e: V885 = 0x1
0x950: V886 = S[0x1]
0x951: V887 = 0x1
0x953: V888 = 0xa0
0x955: V889 = 0x2
0x957: V890 = EXP 0x2 0xa0
0x958: V891 = SUB 0x10000000000000000000000000000000000000000 0x1
0x959: V892 = AND 0xffffffffffffffffffffffffffffffffffffffff V886
0x95b: JUMP 0x14c
---
Entry stack: [V13, 0x14c]
Stack pops: 1
Stack additions: [S0, V892]
Exit stack: [V13, 0x14c, V892]

================================

Block 0x95c
[0x95c:0x968]
---
Predecessors: [0x33b, 0x837]
Successors: [0x969, 0x978]
---
0x95c JUMPDEST
0x95d PUSH1 0x0
0x95f DUP3
0x960 DUP3
0x961 MUL
0x962 DUP4
0x963 ISZERO
0x964 DUP1
0x965 PUSH2 0x978
0x968 JUMPI
---
0x95c: JUMPDEST 
0x95d: V893 = 0x0
0x961: V894 = MUL S0 S1
0x963: V895 = ISZERO S1
0x965: V896 = 0x978
0x968: JUMPI 0x978 V895
---
Entry stack: [V13, 0xeb, S5, {0x0, 0xeb}, 0x0, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V894, V895]
Exit stack: [V13, 0xeb, S5, {0x0, 0xeb}, 0x0, S2, S1, S0, 0x0, V894, V895]

================================

Block 0x969
[0x969:0x973]
---
Predecessors: [0x95c]
Successors: [0x974, 0x975]
---
0x969 POP
0x96a DUP3
0x96b DUP5
0x96c DUP3
0x96d DUP2
0x96e ISZERO
0x96f ISZERO
0x970 PUSH2 0x975
0x973 JUMPI
---
0x96e: V897 = ISZERO S4
0x96f: V898 = ISZERO V897
0x970: V899 = 0x975
0x973: JUMPI 0x975 V898
---
Entry stack: [V13, 0xeb, S8, {0x0, 0xeb}, 0x0, S5, S4, S3, 0x0, V894, V895]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V13, 0xeb, S8, {0x0, 0xeb}, 0x0, S5, S4, S3, 0x0, V894, S3, S4, V894]

================================

Block 0x974
[0x974:0x974]
---
Predecessors: [0x969]
Successors: []
---
0x974 INVALID
---
0x974: INVALID 
---
Entry stack: [V13, 0xeb, S10, {0x0, 0xeb}, 0x0, S7, S6, S5, 0x0, V894, S2, S1, V894]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S10, {0x0, 0xeb}, 0x0, S7, S6, S5, 0x0, V894, S2, S1, V894]

================================

Block 0x975
[0x975:0x977]
---
Predecessors: [0x969]
Successors: [0x978]
---
0x975 JUMPDEST
0x976 DIV
0x977 EQ
---
0x975: JUMPDEST 
0x976: V900 = DIV V894 S1
0x977: V901 = EQ V900 S2
---
Entry stack: [V13, 0xeb, S10, {0x0, 0xeb}, 0x0, S7, S6, S5, 0x0, V894, S2, S1, V894]
Stack pops: 3
Stack additions: [V901]
Exit stack: [V13, 0xeb, S10, {0x0, 0xeb}, 0x0, S7, S6, S5, 0x0, V894, V901]

================================

Block 0x978
[0x978:0x97e]
---
Predecessors: [0x95c, 0x975]
Successors: [0x97f, 0x980]
---
0x978 JUMPDEST
0x979 ISZERO
0x97a ISZERO
0x97b PUSH2 0x980
0x97e JUMPI
---
0x978: JUMPDEST 
0x979: V902 = ISZERO S0
0x97a: V903 = ISZERO V902
0x97b: V904 = 0x980
0x97e: JUMPI 0x980 V903
---
Entry stack: [V13, 0xeb, S8, {0x0, 0xeb}, 0x0, S5, S4, S3, 0x0, V894, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xeb, S8, {0x0, 0xeb}, 0x0, S5, S4, S3, 0x0, V894]

================================

Block 0x97f
[0x97f:0x97f]
---
Predecessors: [0x978]
Successors: []
---
0x97f INVALID
---
0x97f: INVALID 
---
Entry stack: [V13, 0xeb, S7, {0x0, 0xeb}, 0x0, {0x350, 0x843}, S3, {0xa, 0x14, 0x20, 0x90, 0x9c}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, S7, {0x0, 0xeb}, 0x0, {0x350, 0x843}, S3, {0xa, 0x14, 0x20, 0x90, 0x9c}, 0x0, S0]

================================

Block 0x980
[0x980:0x986]
---
Predecessors: [0x978, 0x999]
Successors: [0x350, 0x3a0, 0x843]
---
0x980 JUMPDEST
0x981 SWAP4
0x982 SWAP3
0x983 POP
0x984 POP
0x985 POP
0x986 JUMP
---
0x980: JUMPDEST 
0x986: JUMP {0x350, 0x3a0, 0x843}
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x350, 0x3a0, 0x843}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S9, S8, S7, S6, S5, S0]

================================

Block 0x987
[0x987:0x991]
---
Predecessors: [0x350, 0x374]
Successors: [0x992, 0x993]
---
0x987 JUMPDEST
0x988 PUSH1 0x0
0x98a DUP3
0x98b DUP3
0x98c GT
0x98d ISZERO
0x98e PUSH2 0x993
0x991 JUMPI
---
0x987: JUMPDEST 
0x988: V905 = 0x0
0x98c: V906 = GT S0 S1
0x98d: V907 = ISZERO V906
0x98e: V908 = 0x993
0x991: JUMPI 0x993 V907
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, {0x369, 0x387}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, {0x369, 0x387}, S1, S0, 0x0]

================================

Block 0x992
[0x992:0x992]
---
Predecessors: [0x987]
Successors: []
---
0x992 INVALID
---
0x992: INVALID 
---
Entry stack: [V13, S8, S7, S6, S5, S4, {0x369, 0x387}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, {0x369, 0x387}, S2, S1, 0x0]

================================

Block 0x993
[0x993:0x998]
---
Predecessors: [0x987]
Successors: [0x369, 0x387]
---
0x993 JUMPDEST
0x994 POP
0x995 SWAP1
0x996 SUB
0x997 SWAP1
0x998 JUMP
---
0x993: JUMPDEST 
0x996: V909 = SUB S2 S1
0x998: JUMP {0x369, 0x387}
---
Entry stack: [V13, S8, S7, S6, S5, S4, {0x369, 0x387}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V909]
Exit stack: [V13, S8, S7, S6, S5, S4, V909]

================================

Block 0x999
[0x999:0x9a6]
---
Predecessors: [0x387]
Successors: [0x980, 0x9a7]
---
0x999 JUMPDEST
0x99a PUSH1 0x0
0x99c DUP3
0x99d DUP3
0x99e ADD
0x99f DUP4
0x9a0 DUP2
0x9a1 LT
0x9a2 ISZERO
0x9a3 PUSH2 0x980
0x9a6 JUMPI
---
0x999: JUMPDEST 
0x99a: V910 = 0x0
0x99e: V911 = ADD V308 V307
0x9a1: V912 = LT V911 V307
0x9a2: V913 = ISZERO V912
0x9a3: V914 = 0x980
0x9a6: JUMPI 0x980 V913
---
Entry stack: [V13, S7, S6, S5, S4, V308, 0x3a0, V307, V308]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V911]
Exit stack: [V13, S7, S6, S5, S4, V308, 0x3a0, V307, V308, 0x0, V911]

================================

Block 0x9a7
[0x9a7:0x9a7]
---
Predecessors: [0x999]
Successors: []
---
0x9a7 INVALID
---
0x9a7: INVALID 
---
Entry stack: [V13, S9, S8, S7, S6, V308, 0x3a0, V307, V308, 0x0, V911]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, V308, 0x3a0, V307, V308, 0x0, V911]

================================

Block 0x9a8
[0x9a8:0x9b4]
---
Predecessors: [0x81c]
Successors: [0x9b5, 0x9b6]
---
0x9a8 JUMPDEST
0x9a9 PUSH1 0x0
0x9ab DUP1
0x9ac DUP3
0x9ad DUP5
0x9ae DUP2
0x9af ISZERO
0x9b0 ISZERO
0x9b1 PUSH2 0x9b6
0x9b4 JUMPI
---
0x9a8: JUMPDEST 
0x9a9: V915 = 0x0
0x9af: V916 = ISZERO 0x64
0x9b0: V917 = ISZERO 0x0
0x9b1: V918 = 0x9b6
0x9b4: JUMPI 0x9b6 0x1
---
Entry stack: [V13, 0xeb, 0x0, 0x843, 0xa, 0x837, V767, 0x64]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V13, 0xeb, 0x0, 0x843, 0xa, 0x837, V767, 0x64, 0x0, 0x0, 0x64, V767]

================================

Block 0x9b5
[0x9b5:0x9b5]
---
Predecessors: [0x9a8]
Successors: []
---
0x9b5 INVALID
---
0x9b5: INVALID 
---
Entry stack: [V13, 0xeb, 0x0, 0x843, 0xa, 0x837, V767, 0x64, 0x0, 0x0, 0x64, V767]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xeb, 0x0, 0x843, 0xa, 0x837, V767, 0x64, 0x0, 0x0, 0x64, V767]

================================

Block 0x9b6
[0x9b6:0x9be]
---
Predecessors: [0x9a8]
Successors: [0x837]
---
0x9b6 JUMPDEST
0x9b7 DIV
0x9b8 SWAP5
0x9b9 SWAP4
0x9ba POP
0x9bb POP
0x9bc POP
0x9bd POP
0x9be JUMP
---
0x9b6: JUMPDEST 
0x9b7: V919 = DIV V767 0x64
0x9be: JUMP 0x837
---
Entry stack: [V13, 0xeb, 0x0, 0x843, 0xa, 0x837, V767, 0x64, 0x0, 0x0, 0x64, V767]
Stack pops: 7
Stack additions: [V919]
Exit stack: [V13, 0xeb, 0x0, 0x843, 0xa, V919]

================================

Block 0x9bf
[0x9bf:0x9fd]
---
Predecessors: []
Successors: []
---
0x9bf STOP
0x9c0 LOG1
0x9c1 PUSH6 0x627a7a723058
0x9c8 SHA3
0x9c9 MISSING 0x1e
0x9ca DELEGATECALL
0x9cb MISSING 0xb3
0x9cc MISSING 0xd5
0x9cd PUSH3 0xcaf7fd
0x9d1 MISSING 0xdc
0x9d2 ADDRESS
0x9d3 DIFFICULTY
0x9d4 MISSING 0xdc
0x9d5 MISSING 0xb6
0x9d6 NOT
0x9d7 DIV
0x9d8 PUSH6 0x82dffbeb922
0x9df PUSH30 0x7f29b1d4c9ae73eb220029
---
0x9bf: STOP 
0x9c0: LOG S0 S1 S2
0x9c1: V920 = 0x627a7a723058
0x9c8: V921 = SHA3 0x627a7a723058 S3
0x9c9: MISSING 0x1e
0x9ca: V922 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x9cb: MISSING 0xb3
0x9cc: MISSING 0xd5
0x9cd: V923 = 0xcaf7fd
0x9d1: MISSING 0xdc
0x9d2: V924 = ADDRESS
0x9d3: V925 = DIFFICULTY
0x9d4: MISSING 0xdc
0x9d5: MISSING 0xb6
0x9d6: V926 = NOT S0
0x9d7: V927 = DIV V926 S1
0x9d8: V928 = 0x82dffbeb922
0x9df: V929 = 0x7f29b1d4c9ae73eb220029
---
Entry stack: []
Stack pops: 0
Stack additions: [V921, V922, 0xcaf7fd, V925, V924, 0x7f29b1d4c9ae73eb220029, 0x82dffbeb922, V927]
Exit stack: []

================================

Function 0:
Public function signature: 0x3f4ba83a
Entry block: 0xed
Exit block: 0xeb
Body: 0xeb, 0xed, 0xf4, 0xf8, 0x456, 0x46e, 0x472, 0x486, 0x48a

Function 1:
Public function signature: 0x4042b66f
Entry block: 0x114
Exit block: 0x127
Body: 0x114, 0x11b, 0x11f, 0x127, 0x4db

Function 2:
Public function signature: 0x521eb273
Entry block: 0x139
Exit block: 0x14c
Body: 0x139, 0x140, 0x144, 0x14c, 0x4e1

Function 3:
Public function signature: 0x5c975abb
Entry block: 0x168
Exit block: 0x100
Body: 0x100, 0x168, 0x16f, 0x173, 0x4f0

Function 4:
Public function signature: 0x679aefce
Entry block: 0x17b
Exit block: 0x182
Body: 0x17b, 0x182, 0x186, 0x18e

Function 5:
Public function signature: 0x7d64bcb4
Entry block: 0x1a4
Exit block: 0x100
Body: 0x100, 0x1a4, 0x1ab, 0x1af, 0x542, 0x55a, 0x55e, 0x56b, 0x56f, 0x57c, 0x580, 0x5c4, 0x5c8, 0x5d5, 0x5d9

Function 6:
Public function signature: 0x8456cb59
Entry block: 0x1b7
Exit block: 0x100
Body: 0x100, 0x1b7, 0x1be, 0x1c2, 0x5e7, 0x5ff, 0x603, 0x616, 0x61a

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x1ca
Exit block: 0x14c
Body: 0x14c, 0x1ca, 0x1d1, 0x1d5, 0x670

Function 8:
Public function signature: 0xb31f8f93
Entry block: 0x1dd
Exit block: 0x127
Body: 0x127, 0x1dd, 0x1e4, 0x1e8, 0x67f

Function 9:
Public function signature: 0xba9a061a
Entry block: 0x1f0
Exit block: 0x127
Body: 0x127, 0x1f0, 0x1f7, 0x1fb, 0x685

Function 10:
Public function signature: 0xc6786e5a
Entry block: 0x203
Exit block: 0x7b8
Body: 0x203, 0x20a, 0x20e, 0x68d, 0x6a9, 0x6ad, 0x6b2, 0x6bc, 0x6c6, 0x6c7, 0x726, 0x72a, 0x737, 0x73b, 0x7a7, 0x7ab, 0x7b8, 0x7bc, 0x7d1

Function 11:
Public function signature: 0xe34a90a7
Entry block: 0x252
Exit block: 0xeb
Body: 0xeb, 0x252, 0x259, 0x25d, 0x7df, 0x7f7, 0x7fb, 0x807, 0x80b, 0x818, 0x81c, 0x837, 0x9a8, 0x9b5, 0x9b6

Function 12:
Public function signature: 0xe5760520
Entry block: 0x265
Exit block: 0x14c
Body: 0x14c, 0x265, 0x26c, 0x270, 0x8d7

Function 13:
Public function signature: 0xe7ff0e38
Entry block: 0x278
Exit block: 0x100
Body: 0x100, 0x278, 0x27f, 0x283, 0x8e6

Function 14:
Public function signature: 0xec8ac4d8
Entry block: 0x28b
Exit block: 0xeb
Body: 0xeb, 0x28b

Function 15:
Public function signature: 0xefe7a504
Entry block: 0x29f
Exit block: 0x127
Body: 0x127, 0x29f, 0x2a6, 0x2aa, 0x8ef

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x2b2
Exit block: 0xeb
Body: 0xeb, 0x2b2, 0x2b9, 0x2bd, 0x8f7, 0x90e, 0x912, 0x922, 0x94a

Function 17:
Public function signature: 0xfc0c546a
Entry block: 0x2d1
Exit block: 0x14c
Body: 0x14c, 0x2d1, 0x2d8, 0x2dc, 0x94d

Function 18:
Public fallback function
Entry block: 0xe2
Exit block: 0xeb
Body: 0xe2, 0xeb

Function 19:
Private function
Entry block: 0x987
Exit block: 0x993
Body: 0x987, 0x993

Function 20:
Private function
Entry block: 0x500
Exit block: 0x53c
Body: 0x4d8, 0x500, 0x50f, 0x516, 0x522, 0x529, 0x535, 0x53c

Function 21:
Private function
Entry block: 0x2e4
Exit block: 0x94a
Body: 0x2e4, 0x2fe, 0x313, 0x31f, 0x330, 0x33b, 0x350, 0x369, 0x374, 0x387, 0x3a0, 0x402, 0x413, 0x451, 0x843, 0x8ac, 0x8bd, 0x95c, 0x969, 0x975, 0x978, 0x980, 0x999

