Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8e
0xc: JUMPI 0x8e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x93]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1209b1f6
0x3c EQ
0x3d PUSH2 0x93
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1209b1f6
0x3c: V13 = EQ 0x1209b1f6 V11
0x3d: V14 = 0x93
0x40: JUMPI 0x93 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xbe]
---
0x41 DUP1
0x42 PUSH4 0x18253234
0x47 EQ
0x48 PUSH2 0xbe
0x4b JUMPI
---
0x42: V15 = 0x18253234
0x47: V16 = EQ 0x18253234 V11
0x48: V17 = 0xbe
0x4b: JUMPI 0xbe V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xe9]
---
0x4c DUP1
0x4d PUSH4 0xa123c33e
0x52 EQ
0x53 PUSH2 0xe9
0x56 JUMPI
---
0x4d: V18 = 0xa123c33e
0x52: V19 = EQ 0xa123c33e V11
0x53: V20 = 0xe9
0x56: JUMPI 0xe9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x156]
---
0x57 DUP1
0x58 PUSH4 0xad093409
0x5d EQ
0x5e PUSH2 0x156
0x61 JUMPI
---
0x58: V21 = 0xad093409
0x5d: V22 = EQ 0xad093409 V11
0x5e: V23 = 0x156
0x61: JUMPI 0x156 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1c3]
---
0x62 DUP1
0x63 PUSH4 0xb1e2cb03
0x68 EQ
0x69 PUSH2 0x1c3
0x6c JUMPI
---
0x63: V24 = 0xb1e2cb03
0x68: V25 = EQ 0xb1e2cb03 V11
0x69: V26 = 0x1c3
0x6c: JUMPI 0x1c3 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1da]
---
0x6d DUP1
0x6e PUSH4 0xb948348c
0x73 EQ
0x74 PUSH2 0x1da
0x77 JUMPI
---
0x6e: V27 = 0xb948348c
0x73: V28 = EQ 0xb948348c V11
0x74: V29 = 0x1da
0x77: JUMPI 0x1da V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x1fa]
---
0x78 DUP1
0x79 PUSH4 0xcd8cc844
0x7e EQ
0x7f PUSH2 0x1fa
0x82 JUMPI
---
0x79: V30 = 0xcd8cc844
0x7e: V31 = EQ 0xcd8cc844 V11
0x7f: V32 = 0x1fa
0x82: JUMPI 0x1fa V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x225]
---
0x83 DUP1
0x84 PUSH4 0xddbf5856
0x89 EQ
0x8a PUSH2 0x225
0x8d JUMPI
---
0x84: V33 = 0xddbf5856
0x89: V34 = EQ 0xddbf5856 V11
0x8a: V35 = 0x225
0x8d: JUMPI 0x225 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x92]
---
Predecessors: [0x0, 0x83]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8e: JUMPDEST 
0x8f: V36 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x9a]
---
Predecessors: [0xd]
Successors: [0x9b, 0x9f]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 DUP1
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x93: JUMPDEST 
0x94: V37 = CALLVALUE
0x96: V38 = ISZERO V37
0x97: V39 = 0x9f
0x9a: JUMPI 0x9f V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x93]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V40 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0x9f
[0x9f:0xa7]
---
Predecessors: [0x93]
Successors: [0x23c]
---
0x9f JUMPDEST
0xa0 POP
0xa1 PUSH2 0xa8
0xa4 PUSH2 0x23c
0xa7 JUMP
---
0x9f: JUMPDEST 
0xa1: V41 = 0xa8
0xa4: V42 = 0x23c
0xa7: JUMP 0x23c
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0xa8
[0xa8:0xbd]
---
Predecessors: [0x23c]
Successors: []
---
0xa8 JUMPDEST
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad DUP3
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP2
0xb4 POP
0xb5 POP
0xb6 PUSH1 0x40
0xb8 MLOAD
0xb9 DUP1
0xba SWAP2
0xbb SUB
0xbc SWAP1
0xbd RETURN
---
0xa8: JUMPDEST 
0xa9: V43 = 0x40
0xab: V44 = M[0x40]
0xaf: M[V44] = V146
0xb0: V45 = 0x20
0xb2: V46 = ADD 0x20 V44
0xb6: V47 = 0x40
0xb8: V48 = M[0x40]
0xbb: V49 = SUB V46 V48
0xbd: RETURN V48 V49
---
Entry stack: [V11, 0xa8, V146]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa8]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0x41]
Successors: [0xc6, 0xca]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 DUP1
0xc1 ISZERO
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xbe: JUMPDEST 
0xbf: V50 = CALLVALUE
0xc1: V51 = ISZERO V50
0xc2: V52 = 0xca
0xc5: JUMPI 0xca V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xbe]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V53 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xca
[0xca:0xd2]
---
Predecessors: [0xbe]
Successors: [0x242]
---
0xca JUMPDEST
0xcb POP
0xcc PUSH2 0xd3
0xcf PUSH2 0x242
0xd2 JUMP
---
0xca: JUMPDEST 
0xcc: V54 = 0xd3
0xcf: V55 = 0x242
0xd2: JUMP 0x242
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0xd3]
Exit stack: [V11, 0xd3]

================================

Block 0xd3
[0xd3:0xe8]
---
Predecessors: [0x242]
Successors: []
---
0xd3 JUMPDEST
0xd4 PUSH1 0x40
0xd6 MLOAD
0xd7 DUP1
0xd8 DUP3
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP2
0xdf POP
0xe0 POP
0xe1 PUSH1 0x40
0xe3 MLOAD
0xe4 DUP1
0xe5 SWAP2
0xe6 SUB
0xe7 SWAP1
0xe8 RETURN
---
0xd3: JUMPDEST 
0xd4: V56 = 0x40
0xd6: V57 = M[0x40]
0xda: M[V57] = V148
0xdb: V58 = 0x20
0xdd: V59 = ADD 0x20 V57
0xe1: V60 = 0x40
0xe3: V61 = M[0x40]
0xe6: V62 = SUB V59 V61
0xe8: RETURN V61 V62
---
Entry stack: [V11, 0xd3, V148]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd3]

================================

Block 0xe9
[0xe9:0xf0]
---
Predecessors: [0x4c]
Successors: [0xf1, 0xf5]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb DUP1
0xec ISZERO
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xe9: JUMPDEST 
0xea: V63 = CALLVALUE
0xec: V64 = ISZERO V63
0xed: V65 = 0xf5
0xf0: JUMPI 0xf5 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xe9]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V66 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0xf5
[0xf5:0x113]
---
Predecessors: [0xe9]
Successors: [0x248]
---
0xf5 JUMPDEST
0xf6 POP
0xf7 PUSH2 0x114
0xfa PUSH1 0x4
0xfc DUP1
0xfd CALLDATASIZE
0xfe SUB
0xff DUP2
0x100 ADD
0x101 SWAP1
0x102 DUP1
0x103 DUP1
0x104 CALLDATALOAD
0x105 SWAP1
0x106 PUSH1 0x20
0x108 ADD
0x109 SWAP1
0x10a SWAP3
0x10b SWAP2
0x10c SWAP1
0x10d POP
0x10e POP
0x10f POP
0x110 PUSH2 0x248
0x113 JUMP
---
0xf5: JUMPDEST 
0xf7: V67 = 0x114
0xfa: V68 = 0x4
0xfd: V69 = CALLDATASIZE
0xfe: V70 = SUB V69 0x4
0x100: V71 = ADD 0x4 V70
0x104: V72 = CALLDATALOAD 0x4
0x106: V73 = 0x20
0x108: V74 = ADD 0x20 0x4
0x110: V75 = 0x248
0x113: JUMP 0x248
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0x114, V72]
Exit stack: [V11, 0x114, V72]

================================

Block 0x114
[0x114:0x155]
---
Predecessors: [0x248]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 DUP3
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 DUP2
0x147 MSTORE
0x148 PUSH1 0x20
0x14a ADD
0x14b SWAP2
0x14c POP
0x14d POP
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 SWAP2
0x153 SUB
0x154 SWAP1
0x155 RETURN
---
0x114: JUMPDEST 
0x115: V76 = 0x40
0x117: V77 = M[0x40]
0x11a: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x130: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x147: M[V77] = V81
0x148: V82 = 0x20
0x14a: V83 = ADD 0x20 V77
0x14e: V84 = 0x40
0x150: V85 = M[0x40]
0x153: V86 = SUB V83 V85
0x155: RETURN V85 V86
---
Entry stack: [V11, 0x114, V161]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x114]

================================

Block 0x156
[0x156:0x15d]
---
Predecessors: [0x57]
Successors: [0x15e, 0x162]
---
0x156 JUMPDEST
0x157 CALLVALUE
0x158 DUP1
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0x156: JUMPDEST 
0x157: V87 = CALLVALUE
0x159: V88 = ISZERO V87
0x15a: V89 = 0x162
0x15d: JUMPI 0x162 V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0x156]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V90 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V11, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V87]

================================

Block 0x162
[0x162:0x180]
---
Predecessors: [0x156]
Successors: [0x27b]
---
0x162 JUMPDEST
0x163 POP
0x164 PUSH2 0x181
0x167 PUSH1 0x4
0x169 DUP1
0x16a CALLDATASIZE
0x16b SUB
0x16c DUP2
0x16d ADD
0x16e SWAP1
0x16f DUP1
0x170 DUP1
0x171 CALLDATALOAD
0x172 SWAP1
0x173 PUSH1 0x20
0x175 ADD
0x176 SWAP1
0x177 SWAP3
0x178 SWAP2
0x179 SWAP1
0x17a POP
0x17b POP
0x17c POP
0x17d PUSH2 0x27b
0x180 JUMP
---
0x162: JUMPDEST 
0x164: V91 = 0x181
0x167: V92 = 0x4
0x16a: V93 = CALLDATASIZE
0x16b: V94 = SUB V93 0x4
0x16d: V95 = ADD 0x4 V94
0x171: V96 = CALLDATALOAD 0x4
0x173: V97 = 0x20
0x175: V98 = ADD 0x20 0x4
0x17d: V99 = 0x27b
0x180: JUMP 0x27b
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: [0x181, V96]
Exit stack: [V11, 0x181, V96]

================================

Block 0x181
[0x181:0x1c2]
---
Predecessors: [0x27b]
Successors: []
---
0x181 JUMPDEST
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 DUP3
0x187 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19c AND
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP2
0x1b9 POP
0x1ba POP
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be DUP1
0x1bf SWAP2
0x1c0 SUB
0x1c1 SWAP1
0x1c2 RETURN
---
0x181: JUMPDEST 
0x182: V100 = 0x40
0x184: V101 = M[0x40]
0x187: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x19d: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1b4: M[V101] = V105
0x1b5: V106 = 0x20
0x1b7: V107 = ADD 0x20 V101
0x1bb: V108 = 0x40
0x1bd: V109 = M[0x40]
0x1c0: V110 = SUB V107 V109
0x1c2: RETURN V109 V110
---
Entry stack: [V11, V177]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c3
[0x1c3:0x1ca]
---
Predecessors: [0x62]
Successors: [0x1cb, 0x1cf]
---
0x1c3 JUMPDEST
0x1c4 CALLVALUE
0x1c5 DUP1
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V111 = CALLVALUE
0x1c6: V112 = ISZERO V111
0x1c7: V113 = 0x1cf
0x1ca: JUMPI 0x1cf V112
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V111]
Exit stack: [V11, V111]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c3]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V114 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V11, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V111]

================================

Block 0x1cf
[0x1cf:0x1d7]
---
Predecessors: [0x1c3]
Successors: [0x2b8]
---
0x1cf JUMPDEST
0x1d0 POP
0x1d1 PUSH2 0x1d8
0x1d4 PUSH2 0x2b8
0x1d7 JUMP
---
0x1cf: JUMPDEST 
0x1d1: V115 = 0x1d8
0x1d4: V116 = 0x2b8
0x1d7: JUMP 0x2b8
---
Entry stack: [V11, V111]
Stack pops: 1
Stack additions: [0x1d8]
Exit stack: [V11, 0x1d8]

================================

Block 0x1d8
[0x1d8:0x1d9]
---
Predecessors: [0x3b4]
Successors: []
---
0x1d8 JUMPDEST
0x1d9 STOP
---
0x1d8: JUMPDEST 
0x1d9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1da
[0x1da:0x1f7]
---
Predecessors: [0x6d]
Successors: [0x3d4]
---
0x1da JUMPDEST
0x1db PUSH2 0x1f8
0x1de PUSH1 0x4
0x1e0 DUP1
0x1e1 CALLDATASIZE
0x1e2 SUB
0x1e3 DUP2
0x1e4 ADD
0x1e5 SWAP1
0x1e6 DUP1
0x1e7 DUP1
0x1e8 CALLDATALOAD
0x1e9 SWAP1
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed SWAP1
0x1ee SWAP3
0x1ef SWAP2
0x1f0 SWAP1
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 PUSH2 0x3d4
0x1f7 JUMP
---
0x1da: JUMPDEST 
0x1db: V117 = 0x1f8
0x1de: V118 = 0x4
0x1e1: V119 = CALLDATASIZE
0x1e2: V120 = SUB V119 0x4
0x1e4: V121 = ADD 0x4 V120
0x1e8: V122 = CALLDATALOAD 0x4
0x1ea: V123 = 0x20
0x1ec: V124 = ADD 0x20 0x4
0x1f4: V125 = 0x3d4
0x1f7: JUMP 0x3d4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1f8, V122]
Exit stack: [V11, 0x1f8, V122]

================================

Block 0x1f8
[0x1f8:0x1f9]
---
Predecessors: [0x524]
Successors: []
---
0x1f8 JUMPDEST
0x1f9 STOP
---
0x1f8: JUMPDEST 
0x1f9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fa
[0x1fa:0x201]
---
Predecessors: [0x78]
Successors: [0x202, 0x206]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc DUP1
0x1fd ISZERO
0x1fe PUSH2 0x206
0x201 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V126 = CALLVALUE
0x1fd: V127 = ISZERO V126
0x1fe: V128 = 0x206
0x201: JUMPI 0x206 V127
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V11, V126]

================================

Block 0x202
[0x202:0x205]
---
Predecessors: [0x1fa]
Successors: []
---
0x202 PUSH1 0x0
0x204 DUP1
0x205 REVERT
---
0x202: V129 = 0x0
0x205: REVERT 0x0 0x0
---
Entry stack: [V11, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V126]

================================

Block 0x206
[0x206:0x20e]
---
Predecessors: [0x1fa]
Successors: [0x579]
---
0x206 JUMPDEST
0x207 POP
0x208 PUSH2 0x20f
0x20b PUSH2 0x579
0x20e JUMP
---
0x206: JUMPDEST 
0x208: V130 = 0x20f
0x20b: V131 = 0x579
0x20e: JUMP 0x579
---
Entry stack: [V11, V126]
Stack pops: 1
Stack additions: [0x20f]
Exit stack: [V11, 0x20f]

================================

Block 0x20f
[0x20f:0x224]
---
Predecessors: [0x579]
Successors: []
---
0x20f JUMPDEST
0x210 PUSH1 0x40
0x212 MLOAD
0x213 DUP1
0x214 DUP3
0x215 DUP2
0x216 MSTORE
0x217 PUSH1 0x20
0x219 ADD
0x21a SWAP2
0x21b POP
0x21c POP
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 SWAP2
0x222 SUB
0x223 SWAP1
0x224 RETURN
---
0x20f: JUMPDEST 
0x210: V132 = 0x40
0x212: V133 = M[0x40]
0x216: M[V133] = V335
0x217: V134 = 0x20
0x219: V135 = ADD 0x20 V133
0x21d: V136 = 0x40
0x21f: V137 = M[0x40]
0x222: V138 = SUB V135 V137
0x224: RETURN V137 V138
---
Entry stack: [V11, 0x20f, V335]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x20f]

================================

Block 0x225
[0x225:0x22c]
---
Predecessors: [0x83]
Successors: [0x22d, 0x231]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 DUP1
0x228 ISZERO
0x229 PUSH2 0x231
0x22c JUMPI
---
0x225: JUMPDEST 
0x226: V139 = CALLVALUE
0x228: V140 = ISZERO V139
0x229: V141 = 0x231
0x22c: JUMPI 0x231 V140
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V139]
Exit stack: [V11, V139]

================================

Block 0x22d
[0x22d:0x230]
---
Predecessors: [0x225]
Successors: []
---
0x22d PUSH1 0x0
0x22f DUP1
0x230 REVERT
---
0x22d: V142 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V11, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V139]

================================

Block 0x231
[0x231:0x239]
---
Predecessors: [0x225]
Successors: [0x57f]
---
0x231 JUMPDEST
0x232 POP
0x233 PUSH2 0x23a
0x236 PUSH2 0x57f
0x239 JUMP
---
0x231: JUMPDEST 
0x233: V143 = 0x23a
0x236: V144 = 0x57f
0x239: JUMP 0x57f
---
Entry stack: [V11, V139]
Stack pops: 1
Stack additions: [0x23a]
Exit stack: [V11, 0x23a]

================================

Block 0x23a
[0x23a:0x23b]
---
Predecessors: [0x6d8]
Successors: []
---
0x23a JUMPDEST
0x23b STOP
---
0x23a: JUMPDEST 
0x23b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x23c
[0x23c:0x241]
---
Predecessors: [0x9f]
Successors: [0xa8]
---
0x23c JUMPDEST
0x23d PUSH1 0x1
0x23f SLOAD
0x240 DUP2
0x241 JUMP
---
0x23c: JUMPDEST 
0x23d: V145 = 0x1
0x23f: V146 = S[0x1]
0x241: JUMP 0xa8
---
Entry stack: [V11, 0xa8]
Stack pops: 1
Stack additions: [S0, V146]
Exit stack: [V11, 0xa8, V146]

================================

Block 0x242
[0x242:0x247]
---
Predecessors: [0xca]
Successors: [0xd3]
---
0x242 JUMPDEST
0x243 PUSH1 0x2
0x245 SLOAD
0x246 DUP2
0x247 JUMP
---
0x242: JUMPDEST 
0x243: V147 = 0x2
0x245: V148 = S[0x2]
0x247: JUMP 0xd3
---
Entry stack: [V11, 0xd3]
Stack pops: 1
Stack additions: [S0, V148]
Exit stack: [V11, 0xd3, V148]

================================

Block 0x248
[0x248:0x27a]
---
Predecessors: [0xf5]
Successors: [0x114]
---
0x248 JUMPDEST
0x249 PUSH1 0x3
0x24b PUSH1 0x20
0x24d MSTORE
0x24e DUP1
0x24f PUSH1 0x0
0x251 MSTORE
0x252 PUSH1 0x40
0x254 PUSH1 0x0
0x256 SHA3
0x257 PUSH1 0x0
0x259 SWAP2
0x25a POP
0x25b SLOAD
0x25c SWAP1
0x25d PUSH2 0x100
0x260 EXP
0x261 SWAP1
0x262 DIV
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 AND
0x279 DUP2
0x27a JUMP
---
0x248: JUMPDEST 
0x249: V149 = 0x3
0x24b: V150 = 0x20
0x24d: M[0x20] = 0x3
0x24f: V151 = 0x0
0x251: M[0x0] = V72
0x252: V152 = 0x40
0x254: V153 = 0x0
0x256: V154 = SHA3 0x0 0x40
0x257: V155 = 0x0
0x25b: V156 = S[V154]
0x25d: V157 = 0x100
0x260: V158 = EXP 0x100 0x0
0x262: V159 = DIV V156 0x1
0x263: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x27a: JUMP 0x114
---
Entry stack: [V11, 0x114, V72]
Stack pops: 2
Stack additions: [S1, V161]
Exit stack: [V11, 0x114, V161]

================================

Block 0x27b
[0x27b:0x2b7]
---
Predecessors: [0x162]
Successors: [0x181]
---
0x27b JUMPDEST
0x27c PUSH1 0x0
0x27e PUSH1 0x3
0x280 PUSH1 0x0
0x282 DUP4
0x283 DUP2
0x284 MSTORE
0x285 PUSH1 0x20
0x287 ADD
0x288 SWAP1
0x289 DUP2
0x28a MSTORE
0x28b PUSH1 0x20
0x28d ADD
0x28e PUSH1 0x0
0x290 SHA3
0x291 PUSH1 0x0
0x293 SWAP1
0x294 SLOAD
0x295 SWAP1
0x296 PUSH2 0x100
0x299 EXP
0x29a SWAP1
0x29b DIV
0x29c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b1 AND
0x2b2 SWAP1
0x2b3 POP
0x2b4 SWAP2
0x2b5 SWAP1
0x2b6 POP
0x2b7 JUMP
---
0x27b: JUMPDEST 
0x27c: V162 = 0x0
0x27e: V163 = 0x3
0x280: V164 = 0x0
0x284: M[0x0] = V96
0x285: V165 = 0x20
0x287: V166 = ADD 0x20 0x0
0x28a: M[0x20] = 0x3
0x28b: V167 = 0x20
0x28d: V168 = ADD 0x20 0x20
0x28e: V169 = 0x0
0x290: V170 = SHA3 0x0 0x40
0x291: V171 = 0x0
0x294: V172 = S[V170]
0x296: V173 = 0x100
0x299: V174 = EXP 0x100 0x0
0x29b: V175 = DIV V172 0x1
0x29c: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x2b7: JUMP 0x181
---
Entry stack: [V11, 0x181, V96]
Stack pops: 2
Stack additions: [V177]
Exit stack: [V11, V177]

================================

Block 0x2b8
[0x2b8:0x2c5]
---
Predecessors: [0x1cf]
Successors: [0x2c6, 0x345]
---
0x2b8 JUMPDEST
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc PUSH1 0x0
0x2be SLOAD
0x2bf EQ
0x2c0 ISZERO
0x2c1 ISZERO
0x2c2 PUSH2 0x345
0x2c5 JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V178 = 0x0
0x2bc: V179 = 0x0
0x2be: V180 = S[0x0]
0x2bf: V181 = EQ V180 0x0
0x2c0: V182 = ISZERO V181
0x2c1: V183 = ISZERO V182
0x2c2: V184 = 0x345
0x2c5: JUMPI 0x345 V183
---
Entry stack: [V11, 0x1d8]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1d8, 0x0]

================================

Block 0x2c6
[0x2c6:0x2d6]
---
Predecessors: [0x2b8]
Successors: [0x2d7, 0x344]
---
0x2c6 PUSH3 0x93a80
0x2ca PUSH1 0x0
0x2cc SLOAD
0x2cd ADD
0x2ce TIMESTAMP
0x2cf LT
0x2d0 ISZERO
0x2d1 ISZERO
0x2d2 ISZERO
0x2d3 PUSH2 0x344
0x2d6 JUMPI
---
0x2c6: V185 = 0x93a80
0x2ca: V186 = 0x0
0x2cc: V187 = S[0x0]
0x2cd: V188 = ADD V187 0x93a80
0x2ce: V189 = TIMESTAMP
0x2cf: V190 = LT V189 V188
0x2d0: V191 = ISZERO V190
0x2d1: V192 = ISZERO V191
0x2d2: V193 = ISZERO V192
0x2d3: V194 = 0x344
0x2d6: JUMPI 0x344 V193
---
Entry stack: [V11, 0x1d8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d8, 0x0]

================================

Block 0x2d7
[0x2d7:0x343]
---
Predecessors: [0x2c6]
Successors: []
---
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2fb DUP2
0x2fc MSTORE
0x2fd PUSH1 0x4
0x2ff ADD
0x300 DUP1
0x301 DUP1
0x302 PUSH1 0x20
0x304 ADD
0x305 DUP3
0x306 DUP2
0x307 SUB
0x308 DUP3
0x309 MSTORE
0x30a PUSH1 0x19
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 DUP1
0x312 PUSH32 0x6c6f747465727920686173206e6f7420636f6d706c6574656400000000000000
0x333 DUP2
0x334 MSTORE
0x335 POP
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP2
0x33a POP
0x33b POP
0x33c PUSH1 0x40
0x33e MLOAD
0x33f DUP1
0x340 SWAP2
0x341 SUB
0x342 SWAP1
0x343 REVERT
---
0x2d7: V195 = 0x40
0x2d9: V196 = M[0x40]
0x2da: V197 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2fc: M[V196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2fd: V198 = 0x4
0x2ff: V199 = ADD 0x4 V196
0x302: V200 = 0x20
0x304: V201 = ADD 0x20 V199
0x307: V202 = SUB V201 V199
0x309: M[V199] = V202
0x30a: V203 = 0x19
0x30d: M[V201] = 0x19
0x30e: V204 = 0x20
0x310: V205 = ADD 0x20 V201
0x312: V206 = 0x6c6f747465727920686173206e6f7420636f6d706c6574656400000000000000
0x334: M[V205] = 0x6c6f747465727920686173206e6f7420636f6d706c6574656400000000000000
0x336: V207 = 0x20
0x338: V208 = ADD 0x20 V205
0x33c: V209 = 0x40
0x33e: V210 = M[0x40]
0x341: V211 = SUB V208 V210
0x343: REVERT V210 V211
---
Entry stack: [V11, 0x1d8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d8, 0x0]

================================

Block 0x344
[0x344:0x344]
---
Predecessors: [0x2c6]
Successors: [0x345]
---
0x344 JUMPDEST
---
0x344: JUMPDEST 
---
Entry stack: [V11, 0x1d8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d8, 0x0]

================================

Block 0x345
[0x345:0x349]
---
Predecessors: [0x2b8, 0x344]
Successors: [0x34a]
---
0x345 JUMPDEST
0x346 PUSH1 0x0
0x348 SWAP1
0x349 POP
---
0x345: JUMPDEST 
0x346: V212 = 0x0
---
Entry stack: [V11, 0x1d8, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1d8, 0x0]

================================

Block 0x34a
[0x34a:0x354]
---
Predecessors: [0x345, 0x355]
Successors: [0x355, 0x3b4]
---
0x34a JUMPDEST
0x34b PUSH1 0x2
0x34d SLOAD
0x34e DUP2
0x34f LT
0x350 ISZERO
0x351 PUSH2 0x3b4
0x354 JUMPI
---
0x34a: JUMPDEST 
0x34b: V213 = 0x2
0x34d: V214 = S[0x2]
0x34f: V215 = LT S0 V214
0x350: V216 = ISZERO V215
0x351: V217 = 0x3b4
0x354: JUMPI 0x3b4 V216
---
Entry stack: [V11, 0x1d8, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1d8, S0]

================================

Block 0x355
[0x355:0x3b3]
---
Predecessors: [0x34a]
Successors: [0x34a]
---
0x355 PUSH1 0x0
0x357 PUSH1 0x3
0x359 PUSH1 0x0
0x35b DUP4
0x35c DUP2
0x35d MSTORE
0x35e PUSH1 0x20
0x360 ADD
0x361 SWAP1
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x20
0x366 ADD
0x367 PUSH1 0x0
0x369 SHA3
0x36a PUSH1 0x0
0x36c PUSH2 0x100
0x36f EXP
0x370 DUP2
0x371 SLOAD
0x372 DUP2
0x373 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x388 MUL
0x389 NOT
0x38a AND
0x38b SWAP1
0x38c DUP4
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 AND
0x3a3 MUL
0x3a4 OR
0x3a5 SWAP1
0x3a6 SSTORE
0x3a7 POP
0x3a8 DUP1
0x3a9 DUP1
0x3aa PUSH1 0x1
0x3ac ADD
0x3ad SWAP2
0x3ae POP
0x3af POP
0x3b0 PUSH2 0x34a
0x3b3 JUMP
---
0x355: V218 = 0x0
0x357: V219 = 0x3
0x359: V220 = 0x0
0x35d: M[0x0] = S0
0x35e: V221 = 0x20
0x360: V222 = ADD 0x20 0x0
0x363: M[0x20] = 0x3
0x364: V223 = 0x20
0x366: V224 = ADD 0x20 0x20
0x367: V225 = 0x0
0x369: V226 = SHA3 0x0 0x40
0x36a: V227 = 0x0
0x36c: V228 = 0x100
0x36f: V229 = EXP 0x100 0x0
0x371: V230 = S[V226]
0x373: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x388: V232 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x389: V233 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V234 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V230
0x38d: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3a3: V237 = MUL 0x0 0x1
0x3a4: V238 = OR 0x0 V234
0x3a6: S[V226] = V238
0x3aa: V239 = 0x1
0x3ac: V240 = ADD 0x1 S0
0x3b0: V241 = 0x34a
0x3b3: JUMP 0x34a
---
Entry stack: [V11, 0x1d8, S0]
Stack pops: 1
Stack additions: [V240]
Exit stack: [V11, 0x1d8, V240]

================================

Block 0x3b4
[0x3b4:0x3d3]
---
Predecessors: [0x34a]
Successors: [0x1d8]
---
0x3b4 JUMPDEST
0x3b5 PUSH1 0x64
0x3b7 PUSH1 0x2
0x3b9 DUP2
0x3ba SWAP1
0x3bb SSTORE
0x3bc POP
0x3bd PUSH7 0x2386f26fc10000
0x3c5 PUSH1 0x1
0x3c7 DUP2
0x3c8 SWAP1
0x3c9 SSTORE
0x3ca POP
0x3cb TIMESTAMP
0x3cc PUSH1 0x0
0x3ce DUP2
0x3cf SWAP1
0x3d0 SSTORE
0x3d1 POP
0x3d2 POP
0x3d3 JUMP
---
0x3b4: JUMPDEST 
0x3b5: V242 = 0x64
0x3b7: V243 = 0x2
0x3bb: S[0x2] = 0x64
0x3bd: V244 = 0x2386f26fc10000
0x3c5: V245 = 0x1
0x3c9: S[0x1] = 0x2386f26fc10000
0x3cb: V246 = TIMESTAMP
0x3cc: V247 = 0x0
0x3d0: S[0x0] = V246
0x3d3: JUMP 0x1d8
---
Entry stack: [V11, 0x1d8, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3d4
[0x3d4:0x43d]
---
Predecessors: [0x1da]
Successors: [0x43e, 0x4ab]
---
0x3d4 JUMPDEST
0x3d5 PUSH1 0x0
0x3d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ec AND
0x3ed PUSH1 0x3
0x3ef PUSH1 0x0
0x3f1 DUP4
0x3f2 DUP2
0x3f3 MSTORE
0x3f4 PUSH1 0x20
0x3f6 ADD
0x3f7 SWAP1
0x3f8 DUP2
0x3f9 MSTORE
0x3fa PUSH1 0x20
0x3fc ADD
0x3fd PUSH1 0x0
0x3ff SHA3
0x400 PUSH1 0x0
0x402 SWAP1
0x403 SLOAD
0x404 SWAP1
0x405 PUSH2 0x100
0x408 EXP
0x409 SWAP1
0x40a DIV
0x40b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x420 AND
0x421 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x436 AND
0x437 EQ
0x438 ISZERO
0x439 ISZERO
0x43a PUSH2 0x4ab
0x43d JUMPI
---
0x3d4: JUMPDEST 
0x3d5: V248 = 0x0
0x3d7: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3ed: V251 = 0x3
0x3ef: V252 = 0x0
0x3f3: M[0x0] = V122
0x3f4: V253 = 0x20
0x3f6: V254 = ADD 0x20 0x0
0x3f9: M[0x20] = 0x3
0x3fa: V255 = 0x20
0x3fc: V256 = ADD 0x20 0x20
0x3fd: V257 = 0x0
0x3ff: V258 = SHA3 0x0 0x40
0x400: V259 = 0x0
0x403: V260 = S[V258]
0x405: V261 = 0x100
0x408: V262 = EXP 0x100 0x0
0x40a: V263 = DIV V260 0x1
0x40b: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x420: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x421: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x436: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x437: V268 = EQ V267 0x0
0x438: V269 = ISZERO V268
0x439: V270 = ISZERO V269
0x43a: V271 = 0x4ab
0x43d: JUMPI 0x4ab V270
---
Entry stack: [V11, 0x1f8, V122]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1f8, V122]

================================

Block 0x43e
[0x43e:0x4aa]
---
Predecessors: [0x3d4]
Successors: []
---
0x43e PUSH1 0x40
0x440 MLOAD
0x441 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x462 DUP2
0x463 MSTORE
0x464 PUSH1 0x4
0x466 ADD
0x467 DUP1
0x468 DUP1
0x469 PUSH1 0x20
0x46b ADD
0x46c DUP3
0x46d DUP2
0x46e SUB
0x46f DUP3
0x470 MSTORE
0x471 PUSH1 0x1d
0x473 DUP2
0x474 MSTORE
0x475 PUSH1 0x20
0x477 ADD
0x478 DUP1
0x479 PUSH32 0x746865207469636b657420686173206265656e20707572636861736564000000
0x49a DUP2
0x49b MSTORE
0x49c POP
0x49d PUSH1 0x20
0x49f ADD
0x4a0 SWAP2
0x4a1 POP
0x4a2 POP
0x4a3 PUSH1 0x40
0x4a5 MLOAD
0x4a6 DUP1
0x4a7 SWAP2
0x4a8 SUB
0x4a9 SWAP1
0x4aa REVERT
---
0x43e: V272 = 0x40
0x440: V273 = M[0x40]
0x441: V274 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x463: M[V273] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x464: V275 = 0x4
0x466: V276 = ADD 0x4 V273
0x469: V277 = 0x20
0x46b: V278 = ADD 0x20 V276
0x46e: V279 = SUB V278 V276
0x470: M[V276] = V279
0x471: V280 = 0x1d
0x474: M[V278] = 0x1d
0x475: V281 = 0x20
0x477: V282 = ADD 0x20 V278
0x479: V283 = 0x746865207469636b657420686173206265656e20707572636861736564000000
0x49b: M[V282] = 0x746865207469636b657420686173206265656e20707572636861736564000000
0x49d: V284 = 0x20
0x49f: V285 = ADD 0x20 V282
0x4a3: V286 = 0x40
0x4a5: V287 = M[0x40]
0x4a8: V288 = SUB V285 V287
0x4aa: REVERT V287 V288
---
Entry stack: [V11, 0x1f8, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f8, V122]

================================

Block 0x4ab
[0x4ab:0x4b6]
---
Predecessors: [0x3d4]
Successors: [0x4b7, 0x524]
---
0x4ab JUMPDEST
0x4ac PUSH1 0x1
0x4ae SLOAD
0x4af CALLVALUE
0x4b0 EQ
0x4b1 ISZERO
0x4b2 ISZERO
0x4b3 PUSH2 0x524
0x4b6 JUMPI
---
0x4ab: JUMPDEST 
0x4ac: V289 = 0x1
0x4ae: V290 = S[0x1]
0x4af: V291 = CALLVALUE
0x4b0: V292 = EQ V291 V290
0x4b1: V293 = ISZERO V292
0x4b2: V294 = ISZERO V293
0x4b3: V295 = 0x524
0x4b6: JUMPI 0x524 V294
---
Entry stack: [V11, 0x1f8, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f8, V122]

================================

Block 0x4b7
[0x4b7:0x523]
---
Predecessors: [0x4ab]
Successors: []
---
0x4b7 PUSH1 0x40
0x4b9 MLOAD
0x4ba PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4db DUP2
0x4dc MSTORE
0x4dd PUSH1 0x4
0x4df ADD
0x4e0 DUP1
0x4e1 DUP1
0x4e2 PUSH1 0x20
0x4e4 ADD
0x4e5 DUP3
0x4e6 DUP2
0x4e7 SUB
0x4e8 DUP3
0x4e9 MSTORE
0x4ea PUSH1 0x1c
0x4ec DUP2
0x4ed MSTORE
0x4ee PUSH1 0x20
0x4f0 ADD
0x4f1 DUP1
0x4f2 PUSH32 0x73656e7420616e20696e76616c6964207469636b657420707269636500000000
0x513 DUP2
0x514 MSTORE
0x515 POP
0x516 PUSH1 0x20
0x518 ADD
0x519 SWAP2
0x51a POP
0x51b POP
0x51c PUSH1 0x40
0x51e MLOAD
0x51f DUP1
0x520 SWAP2
0x521 SUB
0x522 SWAP1
0x523 REVERT
---
0x4b7: V296 = 0x40
0x4b9: V297 = M[0x40]
0x4ba: V298 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4dc: M[V297] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4dd: V299 = 0x4
0x4df: V300 = ADD 0x4 V297
0x4e2: V301 = 0x20
0x4e4: V302 = ADD 0x20 V300
0x4e7: V303 = SUB V302 V300
0x4e9: M[V300] = V303
0x4ea: V304 = 0x1c
0x4ed: M[V302] = 0x1c
0x4ee: V305 = 0x20
0x4f0: V306 = ADD 0x20 V302
0x4f2: V307 = 0x73656e7420616e20696e76616c6964207469636b657420707269636500000000
0x514: M[V306] = 0x73656e7420616e20696e76616c6964207469636b657420707269636500000000
0x516: V308 = 0x20
0x518: V309 = ADD 0x20 V306
0x51c: V310 = 0x40
0x51e: V311 = M[0x40]
0x521: V312 = SUB V309 V311
0x523: REVERT V311 V312
---
Entry stack: [V11, 0x1f8, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f8, V122]

================================

Block 0x524
[0x524:0x578]
---
Predecessors: [0x4ab]
Successors: [0x1f8]
---
0x524 JUMPDEST
0x525 CALLER
0x526 PUSH1 0x3
0x528 PUSH1 0x0
0x52a DUP4
0x52b DUP2
0x52c MSTORE
0x52d PUSH1 0x20
0x52f ADD
0x530 SWAP1
0x531 DUP2
0x532 MSTORE
0x533 PUSH1 0x20
0x535 ADD
0x536 PUSH1 0x0
0x538 SHA3
0x539 PUSH1 0x0
0x53b PUSH2 0x100
0x53e EXP
0x53f DUP2
0x540 SLOAD
0x541 DUP2
0x542 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x557 MUL
0x558 NOT
0x559 AND
0x55a SWAP1
0x55b DUP4
0x55c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x571 AND
0x572 MUL
0x573 OR
0x574 SWAP1
0x575 SSTORE
0x576 POP
0x577 POP
0x578 JUMP
---
0x524: JUMPDEST 
0x525: V313 = CALLER
0x526: V314 = 0x3
0x528: V315 = 0x0
0x52c: M[0x0] = V122
0x52d: V316 = 0x20
0x52f: V317 = ADD 0x20 0x0
0x532: M[0x20] = 0x3
0x533: V318 = 0x20
0x535: V319 = ADD 0x20 0x20
0x536: V320 = 0x0
0x538: V321 = SHA3 0x0 0x40
0x539: V322 = 0x0
0x53b: V323 = 0x100
0x53e: V324 = EXP 0x100 0x0
0x540: V325 = S[V321]
0x542: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x557: V327 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x558: V328 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x559: V329 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V325
0x55c: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x571: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x572: V332 = MUL V331 0x1
0x573: V333 = OR V332 V329
0x575: S[V321] = V333
0x578: JUMP 0x1f8
---
Entry stack: [V11, 0x1f8, V122]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x579
[0x579:0x57e]
---
Predecessors: [0x206]
Successors: [0x20f]
---
0x579 JUMPDEST
0x57a PUSH1 0x0
0x57c SLOAD
0x57d DUP2
0x57e JUMP
---
0x579: JUMPDEST 
0x57a: V334 = 0x0
0x57c: V335 = S[0x0]
0x57e: JUMP 0x20f
---
Entry stack: [V11, 0x20f]
Stack pops: 1
Stack additions: [S0, V335]
Exit stack: [V11, 0x20f, V335]

================================

Block 0x57f
[0x57f:0x592]
---
Predecessors: [0x231]
Successors: [0x593, 0x600]
---
0x57f JUMPDEST
0x580 PUSH1 0x0
0x582 PUSH3 0x93a80
0x586 PUSH1 0x0
0x588 SLOAD
0x589 ADD
0x58a TIMESTAMP
0x58b LT
0x58c ISZERO
0x58d ISZERO
0x58e ISZERO
0x58f PUSH2 0x600
0x592 JUMPI
---
0x57f: JUMPDEST 
0x580: V336 = 0x0
0x582: V337 = 0x93a80
0x586: V338 = 0x0
0x588: V339 = S[0x0]
0x589: V340 = ADD V339 0x93a80
0x58a: V341 = TIMESTAMP
0x58b: V342 = LT V341 V340
0x58c: V343 = ISZERO V342
0x58d: V344 = ISZERO V343
0x58e: V345 = ISZERO V344
0x58f: V346 = 0x600
0x592: JUMPI 0x600 V345
---
Entry stack: [V11, 0x23a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x23a, 0x0]

================================

Block 0x593
[0x593:0x5ff]
---
Predecessors: [0x57f]
Successors: []
---
0x593 PUSH1 0x40
0x595 MLOAD
0x596 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5b7 DUP2
0x5b8 MSTORE
0x5b9 PUSH1 0x4
0x5bb ADD
0x5bc DUP1
0x5bd DUP1
0x5be PUSH1 0x20
0x5c0 ADD
0x5c1 DUP3
0x5c2 DUP2
0x5c3 SUB
0x5c4 DUP3
0x5c5 MSTORE
0x5c6 PUSH1 0x19
0x5c8 DUP2
0x5c9 MSTORE
0x5ca PUSH1 0x20
0x5cc ADD
0x5cd DUP1
0x5ce PUSH32 0x6c6f747465727920686173206e6f7420636f6d706c6574656400000000000000
0x5ef DUP2
0x5f0 MSTORE
0x5f1 POP
0x5f2 PUSH1 0x20
0x5f4 ADD
0x5f5 SWAP2
0x5f6 POP
0x5f7 POP
0x5f8 PUSH1 0x40
0x5fa MLOAD
0x5fb DUP1
0x5fc SWAP2
0x5fd SUB
0x5fe SWAP1
0x5ff REVERT
---
0x593: V347 = 0x40
0x595: V348 = M[0x40]
0x596: V349 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5b8: M[V348] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5b9: V350 = 0x4
0x5bb: V351 = ADD 0x4 V348
0x5be: V352 = 0x20
0x5c0: V353 = ADD 0x20 V351
0x5c3: V354 = SUB V353 V351
0x5c5: M[V351] = V354
0x5c6: V355 = 0x19
0x5c9: M[V353] = 0x19
0x5ca: V356 = 0x20
0x5cc: V357 = ADD 0x20 V353
0x5ce: V358 = 0x6c6f747465727920686173206e6f7420636f6d706c6574656400000000000000
0x5f0: M[V357] = 0x6c6f747465727920686173206e6f7420636f6d706c6574656400000000000000
0x5f2: V359 = 0x20
0x5f4: V360 = ADD 0x20 V357
0x5f8: V361 = 0x40
0x5fa: V362 = M[0x40]
0x5fd: V363 = SUB V360 V362
0x5ff: REVERT V362 V363
---
Entry stack: [V11, 0x23a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, 0x0]

================================

Block 0x600
[0x600:0x60f]
---
Predecessors: [0x57f]
Successors: [0x610, 0x611]
---
0x600 JUMPDEST
0x601 PUSH1 0x3
0x603 PUSH1 0x0
0x605 PUSH1 0x2
0x607 SLOAD
0x608 NUMBER
0x609 DUP2
0x60a ISZERO
0x60b ISZERO
0x60c PUSH2 0x611
0x60f JUMPI
---
0x600: JUMPDEST 
0x601: V364 = 0x3
0x603: V365 = 0x0
0x605: V366 = 0x2
0x607: V367 = S[0x2]
0x608: V368 = NUMBER
0x60a: V369 = ISZERO V367
0x60b: V370 = ISZERO V369
0x60c: V371 = 0x611
0x60f: JUMPI 0x611 V370
---
Entry stack: [V11, 0x23a, 0x0]
Stack pops: 0
Stack additions: [0x3, 0x0, V367, V368]
Exit stack: [V11, 0x23a, 0x0, 0x3, 0x0, V367, V368]

================================

Block 0x610
[0x610:0x610]
---
Predecessors: [0x600]
Successors: []
---
0x610 INVALID
---
0x610: INVALID 
---
Entry stack: [V11, 0x23a, 0x0, 0x3, 0x0, V367, V368]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, 0x0, 0x3, 0x0, V367, V368]

================================

Block 0x611
[0x611:0x679]
---
Predecessors: [0x600]
Successors: [0x67a, 0x6d8]
---
0x611 JUMPDEST
0x612 MOD
0x613 DUP2
0x614 MSTORE
0x615 PUSH1 0x20
0x617 ADD
0x618 SWAP1
0x619 DUP2
0x61a MSTORE
0x61b PUSH1 0x20
0x61d ADD
0x61e PUSH1 0x0
0x620 SHA3
0x621 PUSH1 0x0
0x623 SWAP1
0x624 SLOAD
0x625 SWAP1
0x626 PUSH2 0x100
0x629 EXP
0x62a SWAP1
0x62b DIV
0x62c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x641 AND
0x642 SWAP1
0x643 POP
0x644 PUSH1 0x0
0x646 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65b AND
0x65c DUP2
0x65d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x672 AND
0x673 EQ
0x674 ISZERO
0x675 ISZERO
0x676 PUSH2 0x6d8
0x679 JUMPI
---
0x611: JUMPDEST 
0x612: V372 = MOD V368 V367
0x614: M[0x0] = V372
0x615: V373 = 0x20
0x617: V374 = ADD 0x20 0x0
0x61a: M[0x20] = 0x3
0x61b: V375 = 0x20
0x61d: V376 = ADD 0x20 0x20
0x61e: V377 = 0x0
0x620: V378 = SHA3 0x0 0x40
0x621: V379 = 0x0
0x624: V380 = S[V378]
0x626: V381 = 0x100
0x629: V382 = EXP 0x100 0x0
0x62b: V383 = DIV V380 0x1
0x62c: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x641: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x644: V386 = 0x0
0x646: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x65b: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x65d: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x672: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x673: V391 = EQ V390 0x0
0x674: V392 = ISZERO V391
0x675: V393 = ISZERO V392
0x676: V394 = 0x6d8
0x679: JUMPI 0x6d8 V393
---
Entry stack: [V11, 0x23a, 0x0, 0x3, 0x0, V367, V368]
Stack pops: 5
Stack additions: [V385]
Exit stack: [V11, 0x23a, V385]

================================

Block 0x67a
[0x67a:0x6cc]
---
Predecessors: [0x611]
Successors: [0x6cd, 0x6d6]
---
0x67a ADDRESS
0x67b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x690 AND
0x691 PUSH2 0x8fc
0x694 ADDRESS
0x695 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6aa AND
0x6ab BALANCE
0x6ac SWAP1
0x6ad DUP2
0x6ae ISZERO
0x6af MUL
0x6b0 SWAP1
0x6b1 PUSH1 0x40
0x6b3 MLOAD
0x6b4 PUSH1 0x0
0x6b6 PUSH1 0x40
0x6b8 MLOAD
0x6b9 DUP1
0x6ba DUP4
0x6bb SUB
0x6bc DUP2
0x6bd DUP6
0x6be DUP9
0x6bf DUP9
0x6c0 CALL
0x6c1 SWAP4
0x6c2 POP
0x6c3 POP
0x6c4 POP
0x6c5 POP
0x6c6 ISZERO
0x6c7 DUP1
0x6c8 ISZERO
0x6c9 PUSH2 0x6d6
0x6cc JUMPI
---
0x67a: V395 = ADDRESS
0x67b: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x690: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x691: V398 = 0x8fc
0x694: V399 = ADDRESS
0x695: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x6aa: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x6ab: V402 = BALANCE V401
0x6ae: V403 = ISZERO V402
0x6af: V404 = MUL V403 0x8fc
0x6b1: V405 = 0x40
0x6b3: V406 = M[0x40]
0x6b4: V407 = 0x0
0x6b6: V408 = 0x40
0x6b8: V409 = M[0x40]
0x6bb: V410 = SUB V406 V409
0x6c0: V411 = CALL V404 V397 V402 V409 V410 V409 0x0
0x6c6: V412 = ISZERO V411
0x6c8: V413 = ISZERO V412
0x6c9: V414 = 0x6d6
0x6cc: JUMPI 0x6d6 V413
---
Entry stack: [V11, 0x23a, V385]
Stack pops: 0
Stack additions: [V412]
Exit stack: [V11, 0x23a, V385, V412]

================================

Block 0x6cd
[0x6cd:0x6d5]
---
Predecessors: [0x67a]
Successors: []
---
0x6cd RETURNDATASIZE
0x6ce PUSH1 0x0
0x6d0 DUP1
0x6d1 RETURNDATACOPY
0x6d2 RETURNDATASIZE
0x6d3 PUSH1 0x0
0x6d5 REVERT
---
0x6cd: V415 = RETURNDATASIZE
0x6ce: V416 = 0x0
0x6d1: RETURNDATACOPY 0x0 0x0 V415
0x6d2: V417 = RETURNDATASIZE
0x6d3: V418 = 0x0
0x6d5: REVERT 0x0 V417
---
Entry stack: [V11, 0x23a, V385, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23a, V385, V412]

================================

Block 0x6d6
[0x6d6:0x6d7]
---
Predecessors: [0x67a]
Successors: [0x6d8]
---
0x6d6 JUMPDEST
0x6d7 POP
---
0x6d6: JUMPDEST 
---
Entry stack: [V11, 0x23a, V385, V412]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x23a, V385]

================================

Block 0x6d8
[0x6d8:0x6da]
---
Predecessors: [0x611, 0x6d6]
Successors: [0x23a]
---
0x6d8 JUMPDEST
0x6d9 POP
0x6da JUMP
---
0x6d8: JUMPDEST 
0x6da: JUMP 0x23a
---
Entry stack: [V11, 0x23a, V385]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6db
[0x6db:0x706]
---
Predecessors: []
Successors: []
---
0x6db STOP
0x6dc LOG1
0x6dd PUSH6 0x627a7a723058
0x6e4 SHA3
0x6e5 PC
0x6e6 SWAP15
0x6e7 BALANCE
0x6e8 SWAP8
0x6e9 MISSING 0xa7
0x6ea SWAP10
0x6eb PUSH15 0xd42ce67560bbe63ee1c275cb977db2
0x6fb PUSH6 0x9959aa9ac9e4
0x702 LOG0
0x703 BALANCE
0x704 DUP14
0x705 STOP
0x706 MISSING 0x29
---
0x6db: STOP 
0x6dc: LOG S0 S1 S2
0x6dd: V419 = 0x627a7a723058
0x6e4: V420 = SHA3 0x627a7a723058 S3
0x6e5: V421 = PC
0x6e7: V422 = BALANCE S17
0x6e9: MISSING 0xa7
0x6eb: V423 = 0xd42ce67560bbe63ee1c275cb977db2
0x6fb: V424 = 0x9959aa9ac9e4
0x702: LOG 0x9959aa9ac9e4 0xd42ce67560bbe63ee1c275cb977db2
0x703: V425 = BALANCE S10
0x705: STOP 
0x706: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, V420, S4, S5, S6, S7, S8, S9, V422, S11, S12, S13, S14, S15, S16, V421, S13, V425, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, S11, S12, S13]
Exit stack: []

================================

Function 0:
Public function signature: 0x1209b1f6
Entry block: 0x93
Exit block: 0xa8
Body: 0x93, 0x9b, 0x9f, 0xa8, 0x23c

Function 1:
Public function signature: 0x18253234
Entry block: 0xbe
Exit block: 0xd3
Body: 0xbe, 0xc6, 0xca, 0xd3, 0x242

Function 2:
Public function signature: 0xa123c33e
Entry block: 0xe9
Exit block: 0x114
Body: 0xe9, 0xf1, 0xf5, 0x114, 0x248

Function 3:
Public function signature: 0xad093409
Entry block: 0x156
Exit block: 0x181
Body: 0x156, 0x15e, 0x162, 0x181, 0x27b

Function 4:
Public function signature: 0xb1e2cb03
Entry block: 0x1c3
Exit block: 0x1d8
Body: 0x1c3, 0x1cb, 0x1cf, 0x1d8, 0x2b8, 0x2c6, 0x2d7, 0x344, 0x345, 0x34a, 0x355, 0x3b4

Function 5:
Public function signature: 0xb948348c
Entry block: 0x1da
Exit block: 0x1f8
Body: 0x1da, 0x1f8, 0x3d4, 0x43e, 0x4ab, 0x4b7, 0x524

Function 6:
Public function signature: 0xcd8cc844
Entry block: 0x1fa
Exit block: 0x20f
Body: 0x1fa, 0x202, 0x206, 0x20f, 0x579

Function 7:
Public function signature: 0xddbf5856
Entry block: 0x225
Exit block: 0x6cd
Body: 0x225, 0x22d, 0x231, 0x23a, 0x57f, 0x593, 0x600, 0x610, 0x611, 0x67a, 0x6cd, 0x6d6, 0x6d8

Function 8:
Public fallback function
Entry block: 0x8e
Exit block: 0x8e
Body: 0x8e

