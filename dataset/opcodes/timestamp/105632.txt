args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/6/105632.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa1]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa1
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa1
0xa: JUMPI 0xa1 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1d4]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1d4
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x1d4
0x3d: JUMPI 0x1d4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1e9]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x1e9
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x1e9
0x48: JUMPI 0x1e9 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x20e]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x20e
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x20e
0x53: JUMPI 0x20e V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x23d]
---
0x54 DUP1
0x55 PUSH4 0x6e66f6e9
0x5a EQ
0x5b PUSH2 0x23d
0x5e JUMPI
---
0x55: V20 = 0x6e66f6e9
0x5a: V21 = EQ 0x6e66f6e9 V10
0x5b: V22 = 0x23d
0x5e: JUMPI 0x23d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x26c]
---
0x5f DUP1
0x60 PUSH4 0x70a08231
0x65 EQ
0x66 PUSH2 0x26c
0x69 JUMPI
---
0x60: V23 = 0x70a08231
0x65: V24 = EQ 0x70a08231 V10
0x66: V25 = 0x26c
0x69: JUMPI 0x26c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x29d]
---
0x6a DUP1
0x6b PUSH4 0x7a3a0e84
0x70 EQ
0x71 PUSH2 0x29d
0x74 JUMPI
---
0x6b: V26 = 0x7a3a0e84
0x70: V27 = EQ 0x7a3a0e84 V10
0x71: V28 = 0x29d
0x74: JUMPI 0x29d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2c2]
---
0x75 DUP1
0x76 PUSH4 0x7b3e5e7b
0x7b EQ
0x7c PUSH2 0x2c2
0x7f JUMPI
---
0x76: V29 = 0x7b3e5e7b
0x7b: V30 = EQ 0x7b3e5e7b V10
0x7c: V31 = 0x2c2
0x7f: JUMPI 0x2c2 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2e7]
---
0x80 DUP1
0x81 PUSH4 0x906a26e0
0x86 EQ
0x87 PUSH2 0x2e7
0x8a JUMPI
---
0x81: V32 = 0x906a26e0
0x86: V33 = EQ 0x906a26e0 V10
0x87: V34 = 0x2e7
0x8a: JUMPI 0x2e7 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x30c]
---
0x8b DUP1
0x8c PUSH4 0xa035b1fe
0x91 EQ
0x92 PUSH2 0x30c
0x95 JUMPI
---
0x8c: V35 = 0xa035b1fe
0x91: V36 = EQ 0xa035b1fe V10
0x92: V37 = 0x30c
0x95: JUMPI 0x30c V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x331]
---
0x96 DUP1
0x97 PUSH4 0xfd6b7ef8
0x9c EQ
0x9d PUSH2 0x331
0xa0 JUMPI
---
0x97: V38 = 0xfd6b7ef8
0x9c: V39 = EQ 0xfd6b7ef8 V10
0x9d: V40 = 0x331
0xa0: JUMPI 0x331 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xa1]
---
Predecessors: [0x0, 0x96]
Successors: [0xa2]
---
0xa1 JUMPDEST
---
0xa1: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xb3]
---
Predecessors: [0xa1]
Successors: [0xb4, 0xb8]
---
0xa2 JUMPDEST
0xa3 PUSH1 0x0
0xa5 PUSH1 0x2
0xa7 SLOAD
0xa8 CALLVALUE
0xa9 PUSH1 0x3
0xab SLOAD
0xac ADD
0xad LT
0xae ISZERO
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xa2: JUMPDEST 
0xa3: V41 = 0x0
0xa5: V42 = 0x2
0xa7: V43 = S[0x2]
0xa8: V44 = CALLVALUE
0xa9: V45 = 0x3
0xab: V46 = S[0x3]
0xac: V47 = ADD V46 V44
0xad: V48 = LT V47 V43
0xae: V49 = ISZERO V48
0xaf: V50 = ISZERO V49
0xb0: V51 = 0xb8
0xb3: JUMPI 0xb8 V50
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xa2]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V52 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xb8
[0xb8:0x109]
---
Predecessors: [0xa2]
Successors: [0x10a, 0x10b]
---
0xb8 JUMPDEST
0xb9 POP
0xba PUSH1 0x1
0xbc PUSH1 0xa0
0xbe PUSH1 0x2
0xc0 EXP
0xc1 SUB
0xc2 CALLER
0xc3 DUP2
0xc4 DUP2
0xc5 AND
0xc6 PUSH1 0x0
0xc8 SWAP1
0xc9 DUP2
0xca MSTORE
0xcb PUSH1 0x7
0xcd PUSH1 0x20
0xcf MSTORE
0xd0 PUSH1 0x40
0xd2 SWAP1
0xd3 SHA3
0xd4 DUP1
0xd5 SLOAD
0xd6 PUSH8 0xde0b6b3a7640000
0xdf CALLVALUE
0xe0 SWAP1
0xe1 DUP2
0xe2 MUL
0xe3 SWAP2
0xe4 DUP3
0xe5 ADD
0xe6 SWAP1
0xe7 SWAP3
0xe8 SSTORE
0xe9 PUSH1 0x3
0xeb DUP1
0xec SLOAD
0xed DUP4
0xee ADD
0xef SWAP1
0xf0 SSTORE
0xf1 PUSH1 0x6
0xf3 SLOAD
0xf4 PUSH1 0x5
0xf6 SLOAD
0xf7 SWAP3
0xf8 SWAP5
0xf9 AND
0xfa SWAP3
0xfb PUSH4 0xa9059cbb
0x100 SWAP3
0x101 SWAP1
0x102 SWAP2
0x103 DUP2
0x104 ISZERO
0x105 ISZERO
0x106 PUSH2 0x10b
0x109 JUMPI
---
0xb8: JUMPDEST 
0xba: V53 = 0x1
0xbc: V54 = 0xa0
0xbe: V55 = 0x2
0xc0: V56 = EXP 0x2 0xa0
0xc1: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V58 = CALLER
0xc5: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V60 = 0x0
0xca: M[0x0] = V59
0xcb: V61 = 0x7
0xcd: V62 = 0x20
0xcf: M[0x20] = 0x7
0xd0: V63 = 0x40
0xd3: V64 = SHA3 0x0 0x40
0xd5: V65 = S[V64]
0xd6: V66 = 0xde0b6b3a7640000
0xdf: V67 = CALLVALUE
0xe2: V68 = MUL V67 0xde0b6b3a7640000
0xe5: V69 = ADD V68 V65
0xe8: S[V64] = V69
0xe9: V70 = 0x3
0xec: V71 = S[0x3]
0xee: V72 = ADD V67 V71
0xf0: S[0x3] = V72
0xf1: V73 = 0x6
0xf3: V74 = S[0x6]
0xf4: V75 = 0x5
0xf6: V76 = S[0x5]
0xf9: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xfb: V78 = 0xa9059cbb
0x104: V79 = ISZERO V76
0x105: V80 = ISZERO V79
0x106: V81 = 0x10b
0x109: JUMPI 0x10b V80
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: [V67, V77, 0xa9059cbb, V58, V76, V68]
Exit stack: [V10, V67, V77, 0xa9059cbb, V58, V76, V68]

================================

Block 0x10a
[0x10a:0x10a]
---
Predecessors: [0xb8]
Successors: []
---
0x10a INVALID
---
0x10a: INVALID 
---
Entry stack: [V10, V67, V77, 0xa9059cbb, V58, V76, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V67, V77, 0xa9059cbb, V58, V76, V68]

================================

Block 0x10b
[0x10b:0x163]
---
Predecessors: [0xb8]
Successors: [0x164, 0x168]
---
0x10b JUMPDEST
0x10c DIV
0x10d PUSH1 0x40
0x10f MLOAD
0x110 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12e PUSH4 0xffffffff
0x133 DUP6
0x134 AND
0x135 MUL
0x136 DUP2
0x137 MSTORE
0x138 PUSH1 0x1
0x13a PUSH1 0xa0
0x13c PUSH1 0x2
0x13e EXP
0x13f SUB
0x140 SWAP1
0x141 SWAP3
0x142 AND
0x143 PUSH1 0x4
0x145 DUP4
0x146 ADD
0x147 MSTORE
0x148 PUSH1 0x24
0x14a DUP3
0x14b ADD
0x14c MSTORE
0x14d PUSH1 0x44
0x14f ADD
0x150 PUSH1 0x0
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 DUP4
0x157 SUB
0x158 DUP2
0x159 PUSH1 0x0
0x15b DUP8
0x15c DUP1
0x15d EXTCODESIZE
0x15e ISZERO
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x10b: JUMPDEST 
0x10c: V82 = DIV V68 V76
0x10d: V83 = 0x40
0x10f: V84 = M[0x40]
0x110: V85 = 0x100000000000000000000000000000000000000000000000000000000
0x12e: V86 = 0xffffffff
0x134: V87 = AND 0xa9059cbb 0xffffffff
0x135: V88 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x137: M[V84] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x138: V89 = 0x1
0x13a: V90 = 0xa0
0x13c: V91 = 0x2
0x13e: V92 = EXP 0x2 0xa0
0x13f: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x142: V94 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0x143: V95 = 0x4
0x146: V96 = ADD V84 0x4
0x147: M[V96] = V94
0x148: V97 = 0x24
0x14b: V98 = ADD V84 0x24
0x14c: M[V98] = V82
0x14d: V99 = 0x44
0x14f: V100 = ADD 0x44 V84
0x150: V101 = 0x0
0x152: V102 = 0x40
0x154: V103 = M[0x40]
0x157: V104 = SUB V100 V103
0x159: V105 = 0x0
0x15d: V106 = EXTCODESIZE V77
0x15e: V107 = ISZERO V106
0x15f: V108 = ISZERO V107
0x160: V109 = 0x168
0x163: JUMPI 0x168 V108
---
Entry stack: [V10, V67, V77, 0xa9059cbb, V58, V76, V68]
Stack pops: 5
Stack additions: [S4, S3, V100, 0x0, V103, V104, V103, 0x0, S4]
Exit stack: [V10, V67, V77, 0xa9059cbb, V100, 0x0, V103, V104, V103, 0x0, V77]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x10b]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V110 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V10, V67, V77, 0xa9059cbb, V100, 0x0, V103, V104, V103, 0x0, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V67, V77, 0xa9059cbb, V100, 0x0, V103, V104, V103, 0x0, V77]

================================

Block 0x168
[0x168:0x174]
---
Predecessors: [0x10b]
Successors: [0x175, 0x179]
---
0x168 JUMPDEST
0x169 PUSH2 0x2c6
0x16c GAS
0x16d SUB
0x16e CALL
0x16f ISZERO
0x170 ISZERO
0x171 PUSH2 0x179
0x174 JUMPI
---
0x168: JUMPDEST 
0x169: V111 = 0x2c6
0x16c: V112 = GAS
0x16d: V113 = SUB V112 0x2c6
0x16e: V114 = CALL V113 V77 0x0 V103 V104 V103 0x0
0x16f: V115 = ISZERO V114
0x170: V116 = ISZERO V115
0x171: V117 = 0x179
0x174: JUMPI 0x179 V116
---
Entry stack: [V10, V67, V77, 0xa9059cbb, V100, 0x0, V103, V104, V103, 0x0, V77]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V67, V77, 0xa9059cbb, V100]

================================

Block 0x175
[0x175:0x178]
---
Predecessors: [0x168]
Successors: []
---
0x175 PUSH1 0x0
0x177 DUP1
0x178 REVERT
---
0x175: V118 = 0x0
0x178: REVERT 0x0 0x0
---
Entry stack: [V10, V67, V77, 0xa9059cbb, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V67, V77, 0xa9059cbb, V100]

================================

Block 0x179
[0x179:0x1d0]
---
Predecessors: [0x168]
Successors: [0x1d1]
---
0x179 JUMPDEST
0x17a POP
0x17b POP
0x17c POP
0x17d PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x19e CALLER
0x19f DUP3
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0xa0
0x1a9 PUSH1 0x2
0x1ab EXP
0x1ac SUB
0x1ad SWAP1
0x1ae SWAP4
0x1af AND
0x1b0 DUP4
0x1b1 MSTORE
0x1b2 PUSH1 0x20
0x1b4 DUP4
0x1b5 ADD
0x1b6 SWAP2
0x1b7 SWAP1
0x1b8 SWAP2
0x1b9 MSTORE
0x1ba ISZERO
0x1bb ISZERO
0x1bc PUSH1 0x40
0x1be DUP1
0x1bf DUP4
0x1c0 ADD
0x1c1 SWAP2
0x1c2 SWAP1
0x1c3 SWAP2
0x1c4 MSTORE
0x1c5 PUSH1 0x60
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 ADD
0x1ca SWAP1
0x1cb MLOAD
0x1cc DUP1
0x1cd SWAP2
0x1ce SUB
0x1cf SWAP1
0x1d0 LOG1
---
0x179: JUMPDEST 
0x17d: V119 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x19e: V120 = CALLER
0x1a0: V121 = 0x1
0x1a2: V122 = 0x40
0x1a4: V123 = M[0x40]
0x1a5: V124 = 0x1
0x1a7: V125 = 0xa0
0x1a9: V126 = 0x2
0x1ab: V127 = EXP 0x2 0xa0
0x1ac: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1af: V129 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: M[V123] = V129
0x1b2: V130 = 0x20
0x1b5: V131 = ADD V123 0x20
0x1b9: M[V131] = V67
0x1ba: V132 = ISZERO 0x1
0x1bb: V133 = ISZERO 0x0
0x1bc: V134 = 0x40
0x1c0: V135 = ADD V123 0x40
0x1c4: M[V135] = 0x1
0x1c5: V136 = 0x60
0x1c9: V137 = ADD V123 0x60
0x1cb: V138 = M[0x40]
0x1ce: V139 = SUB V137 V138
0x1d0: LOG V138 V139 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, V67, V77, 0xa9059cbb, V100]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, V67]

================================

Block 0x1d1
[0x1d1:0x1d3]
---
Predecessors: [0x179]
Successors: []
---
0x1d1 JUMPDEST
0x1d2 POP
0x1d3 STOP
---
0x1d1: JUMPDEST 
0x1d3: STOP 
---
Entry stack: [V10, V67]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d4
[0x1d4:0x1da]
---
Predecessors: [0xb]
Successors: [0x1db, 0x1df]
---
0x1d4 JUMPDEST
0x1d5 CALLVALUE
0x1d6 ISZERO
0x1d7 PUSH2 0x1df
0x1da JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V140 = CALLVALUE
0x1d6: V141 = ISZERO V140
0x1d7: V142 = 0x1df
0x1da: JUMPI 0x1df V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1db
[0x1db:0x1de]
---
Predecessors: [0x1d4]
Successors: []
---
0x1db PUSH1 0x0
0x1dd DUP1
0x1de REVERT
---
0x1db: V143 = 0x0
0x1de: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1df
[0x1df:0x1e6]
---
Predecessors: [0x1d4]
Successors: [0x346]
---
0x1df JUMPDEST
0x1e0 PUSH2 0x1e7
0x1e3 PUSH2 0x346
0x1e6 JUMP
---
0x1df: JUMPDEST 
0x1e0: V144 = 0x1e7
0x1e3: V145 = 0x346
0x1e6: JUMP 0x346
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7]
Exit stack: [V10, 0x1e7]

================================

Block 0x1e7
[0x1e7:0x1e8]
---
Predecessors: [0x432, 0x63d]
Successors: []
---
0x1e7 JUMPDEST
0x1e8 STOP
---
0x1e7: JUMPDEST 
0x1e8: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0x3e]
Successors: [0x1f0, 0x1f4]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f4
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V146 = CALLVALUE
0x1eb: V147 = ISZERO V146
0x1ec: V148 = 0x1f4
0x1ef: JUMPI 0x1f4 V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f0
[0x1f0:0x1f3]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 REVERT
---
0x1f0: V149 = 0x0
0x1f3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f4
[0x1f4:0x1fb]
---
Predecessors: [0x1e9]
Successors: [0x434]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0x1fc
0x1f8 PUSH2 0x434
0x1fb JUMP
---
0x1f4: JUMPDEST 
0x1f5: V150 = 0x1fc
0x1f8: V151 = 0x434
0x1fb: JUMP 0x434
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x1fc
[0x1fc:0x20d]
---
Predecessors: [0x434, 0x458, 0x46a, 0x470, 0x476, 0x47c]
Successors: []
---
0x1fc JUMPDEST
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 SWAP1
0x201 DUP2
0x202 MSTORE
0x203 PUSH1 0x20
0x205 ADD
0x206 PUSH1 0x40
0x208 MLOAD
0x209 DUP1
0x20a SWAP2
0x20b SUB
0x20c SWAP1
0x20d RETURN
---
0x1fc: JUMPDEST 
0x1fd: V152 = 0x40
0x1ff: V153 = M[0x40]
0x202: M[V153] = S0
0x203: V154 = 0x20
0x205: V155 = ADD 0x20 V153
0x206: V156 = 0x40
0x208: V157 = M[0x40]
0x20b: V158 = SUB V155 V157
0x20d: RETURN V157 V158
---
Entry stack: [V10, 0x1fc, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1fc]

================================

Block 0x20e
[0x20e:0x214]
---
Predecessors: [0x49]
Successors: [0x215, 0x219]
---
0x20e JUMPDEST
0x20f CALLVALUE
0x210 ISZERO
0x211 PUSH2 0x219
0x214 JUMPI
---
0x20e: JUMPDEST 
0x20f: V159 = CALLVALUE
0x210: V160 = ISZERO V159
0x211: V161 = 0x219
0x214: JUMPI 0x219 V160
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x20e]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V162 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x219
[0x219:0x220]
---
Predecessors: [0x20e]
Successors: [0x43a]
---
0x219 JUMPDEST
0x21a PUSH2 0x221
0x21d PUSH2 0x43a
0x220 JUMP
---
0x219: JUMPDEST 
0x21a: V163 = 0x221
0x21d: V164 = 0x43a
0x220: JUMP 0x43a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x221]
Exit stack: [V10, 0x221]

================================

Block 0x221
[0x221:0x23c]
---
Predecessors: [0x43a, 0x449]
Successors: []
---
0x221 JUMPDEST
0x222 PUSH1 0x40
0x224 MLOAD
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d SWAP1
0x22e SWAP2
0x22f AND
0x230 DUP2
0x231 MSTORE
0x232 PUSH1 0x20
0x234 ADD
0x235 PUSH1 0x40
0x237 MLOAD
0x238 DUP1
0x239 SWAP2
0x23a SUB
0x23b SWAP1
0x23c RETURN
---
0x221: JUMPDEST 
0x222: V165 = 0x40
0x224: V166 = M[0x40]
0x225: V167 = 0x1
0x227: V168 = 0xa0
0x229: V169 = 0x2
0x22b: V170 = EXP 0x2 0xa0
0x22c: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V172 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x231: M[V166] = V172
0x232: V173 = 0x20
0x234: V174 = ADD 0x20 V166
0x235: V175 = 0x40
0x237: V176 = M[0x40]
0x23a: V177 = SUB V174 V176
0x23c: RETURN V176 V177
---
Entry stack: [V10, 0x221, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x221]

================================

Block 0x23d
[0x23d:0x243]
---
Predecessors: [0x54]
Successors: [0x244, 0x248]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x23d: JUMPDEST 
0x23e: V178 = CALLVALUE
0x23f: V179 = ISZERO V178
0x240: V180 = 0x248
0x243: JUMPI 0x248 V179
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x23d]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V181 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x248
[0x248:0x24f]
---
Predecessors: [0x23d]
Successors: [0x449]
---
0x248 JUMPDEST
0x249 PUSH2 0x221
0x24c PUSH2 0x449
0x24f JUMP
---
0x248: JUMPDEST 
0x249: V182 = 0x221
0x24c: V183 = 0x449
0x24f: JUMP 0x449
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x221]
Exit stack: [V10, 0x221]

================================

Block 0x250
[0x250:0x26b]
---
Predecessors: []
Successors: []
---
0x250 JUMPDEST
0x251 PUSH1 0x40
0x253 MLOAD
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c SWAP1
0x25d SWAP2
0x25e AND
0x25f DUP2
0x260 MSTORE
0x261 PUSH1 0x20
0x263 ADD
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 SWAP2
0x269 SUB
0x26a SWAP1
0x26b RETURN
---
0x250: JUMPDEST 
0x251: V184 = 0x40
0x253: V185 = M[0x40]
0x254: V186 = 0x1
0x256: V187 = 0xa0
0x258: V188 = 0x2
0x25a: V189 = EXP 0x2 0xa0
0x25b: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V191 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x260: M[V185] = V191
0x261: V192 = 0x20
0x263: V193 = ADD 0x20 V185
0x264: V194 = 0x40
0x266: V195 = M[0x40]
0x269: V196 = SUB V193 V195
0x26b: RETURN V195 V196
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x26c
[0x26c:0x272]
---
Predecessors: [0x5f]
Successors: [0x273, 0x277]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x26c: JUMPDEST 
0x26d: V197 = CALLVALUE
0x26e: V198 = ISZERO V197
0x26f: V199 = 0x277
0x272: JUMPI 0x277 V198
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x26c]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V200 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x277
[0x277:0x28a]
---
Predecessors: [0x26c]
Successors: [0x458]
---
0x277 JUMPDEST
0x278 PUSH2 0x1fc
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 PUSH1 0x4
0x285 CALLDATALOAD
0x286 AND
0x287 PUSH2 0x458
0x28a JUMP
---
0x277: JUMPDEST 
0x278: V201 = 0x1fc
0x27b: V202 = 0x1
0x27d: V203 = 0xa0
0x27f: V204 = 0x2
0x281: V205 = EXP 0x2 0xa0
0x282: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x283: V207 = 0x4
0x285: V208 = CALLDATALOAD 0x4
0x286: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x287: V210 = 0x458
0x28a: JUMP 0x458
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc, V209]
Exit stack: [V10, 0x1fc, V209]

================================

Block 0x28b
[0x28b:0x29c]
---
Predecessors: []
Successors: []
---
0x28b JUMPDEST
0x28c PUSH1 0x40
0x28e MLOAD
0x28f SWAP1
0x290 DUP2
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 PUSH1 0x40
0x297 MLOAD
0x298 DUP1
0x299 SWAP2
0x29a SUB
0x29b SWAP1
0x29c RETURN
---
0x28b: JUMPDEST 
0x28c: V211 = 0x40
0x28e: V212 = M[0x40]
0x291: M[V212] = S0
0x292: V213 = 0x20
0x294: V214 = ADD 0x20 V212
0x295: V215 = 0x40
0x297: V216 = M[0x40]
0x29a: V217 = SUB V214 V216
0x29c: RETURN V216 V217
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29d
[0x29d:0x2a3]
---
Predecessors: [0x6a]
Successors: [0x2a4, 0x2a8]
---
0x29d JUMPDEST
0x29e CALLVALUE
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x29d: JUMPDEST 
0x29e: V218 = CALLVALUE
0x29f: V219 = ISZERO V218
0x2a0: V220 = 0x2a8
0x2a3: JUMPI 0x2a8 V219
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x29d]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V221 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a8
[0x2a8:0x2af]
---
Predecessors: [0x29d]
Successors: [0x46a]
---
0x2a8 JUMPDEST
0x2a9 PUSH2 0x1fc
0x2ac PUSH2 0x46a
0x2af JUMP
---
0x2a8: JUMPDEST 
0x2a9: V222 = 0x1fc
0x2ac: V223 = 0x46a
0x2af: JUMP 0x46a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x2b0
[0x2b0:0x2c1]
---
Predecessors: []
Successors: []
---
0x2b0 JUMPDEST
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be SWAP2
0x2bf SUB
0x2c0 SWAP1
0x2c1 RETURN
---
0x2b0: JUMPDEST 
0x2b1: V224 = 0x40
0x2b3: V225 = M[0x40]
0x2b6: M[V225] = S0
0x2b7: V226 = 0x20
0x2b9: V227 = ADD 0x20 V225
0x2ba: V228 = 0x40
0x2bc: V229 = M[0x40]
0x2bf: V230 = SUB V227 V229
0x2c1: RETURN V229 V230
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c2
[0x2c2:0x2c8]
---
Predecessors: [0x75]
Successors: [0x2c9, 0x2cd]
---
0x2c2 JUMPDEST
0x2c3 CALLVALUE
0x2c4 ISZERO
0x2c5 PUSH2 0x2cd
0x2c8 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V231 = CALLVALUE
0x2c4: V232 = ISZERO V231
0x2c5: V233 = 0x2cd
0x2c8: JUMPI 0x2cd V232
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c9
[0x2c9:0x2cc]
---
Predecessors: [0x2c2]
Successors: []
---
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc REVERT
---
0x2c9: V234 = 0x0
0x2cc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cd
[0x2cd:0x2d4]
---
Predecessors: [0x2c2]
Successors: [0x470]
---
0x2cd JUMPDEST
0x2ce PUSH2 0x1fc
0x2d1 PUSH2 0x470
0x2d4 JUMP
---
0x2cd: JUMPDEST 
0x2ce: V235 = 0x1fc
0x2d1: V236 = 0x470
0x2d4: JUMP 0x470
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x2d5
[0x2d5:0x2e6]
---
Predecessors: []
Successors: []
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 SWAP1
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x20
0x2de ADD
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 SWAP2
0x2e4 SUB
0x2e5 SWAP1
0x2e6 RETURN
---
0x2d5: JUMPDEST 
0x2d6: V237 = 0x40
0x2d8: V238 = M[0x40]
0x2db: M[V238] = S0
0x2dc: V239 = 0x20
0x2de: V240 = ADD 0x20 V238
0x2df: V241 = 0x40
0x2e1: V242 = M[0x40]
0x2e4: V243 = SUB V240 V242
0x2e6: RETURN V242 V243
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e7
[0x2e7:0x2ed]
---
Predecessors: [0x80]
Successors: [0x2ee, 0x2f2]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V244 = CALLVALUE
0x2e9: V245 = ISZERO V244
0x2ea: V246 = 0x2f2
0x2ed: JUMPI 0x2f2 V245
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V247 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f2
[0x2f2:0x2f9]
---
Predecessors: [0x2e7]
Successors: [0x476]
---
0x2f2 JUMPDEST
0x2f3 PUSH2 0x1fc
0x2f6 PUSH2 0x476
0x2f9 JUMP
---
0x2f2: JUMPDEST 
0x2f3: V248 = 0x1fc
0x2f6: V249 = 0x476
0x2f9: JUMP 0x476
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x2fa
[0x2fa:0x30b]
---
Predecessors: []
Successors: []
---
0x2fa JUMPDEST
0x2fb PUSH1 0x40
0x2fd MLOAD
0x2fe SWAP1
0x2ff DUP2
0x300 MSTORE
0x301 PUSH1 0x20
0x303 ADD
0x304 PUSH1 0x40
0x306 MLOAD
0x307 DUP1
0x308 SWAP2
0x309 SUB
0x30a SWAP1
0x30b RETURN
---
0x2fa: JUMPDEST 
0x2fb: V250 = 0x40
0x2fd: V251 = M[0x40]
0x300: M[V251] = S0
0x301: V252 = 0x20
0x303: V253 = ADD 0x20 V251
0x304: V254 = 0x40
0x306: V255 = M[0x40]
0x309: V256 = SUB V253 V255
0x30b: RETURN V255 V256
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30c
[0x30c:0x312]
---
Predecessors: [0x8b]
Successors: [0x313, 0x317]
---
0x30c JUMPDEST
0x30d CALLVALUE
0x30e ISZERO
0x30f PUSH2 0x317
0x312 JUMPI
---
0x30c: JUMPDEST 
0x30d: V257 = CALLVALUE
0x30e: V258 = ISZERO V257
0x30f: V259 = 0x317
0x312: JUMPI 0x317 V258
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x313
[0x313:0x316]
---
Predecessors: [0x30c]
Successors: []
---
0x313 PUSH1 0x0
0x315 DUP1
0x316 REVERT
---
0x313: V260 = 0x0
0x316: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x317
[0x317:0x31e]
---
Predecessors: [0x30c]
Successors: [0x47c]
---
0x317 JUMPDEST
0x318 PUSH2 0x1fc
0x31b PUSH2 0x47c
0x31e JUMP
---
0x317: JUMPDEST 
0x318: V261 = 0x1fc
0x31b: V262 = 0x47c
0x31e: JUMP 0x47c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x31f
[0x31f:0x330]
---
Predecessors: []
Successors: []
---
0x31f JUMPDEST
0x320 PUSH1 0x40
0x322 MLOAD
0x323 SWAP1
0x324 DUP2
0x325 MSTORE
0x326 PUSH1 0x20
0x328 ADD
0x329 PUSH1 0x40
0x32b MLOAD
0x32c DUP1
0x32d SWAP2
0x32e SUB
0x32f SWAP1
0x330 RETURN
---
0x31f: JUMPDEST 
0x320: V263 = 0x40
0x322: V264 = M[0x40]
0x325: M[V264] = S0
0x326: V265 = 0x20
0x328: V266 = ADD 0x20 V264
0x329: V267 = 0x40
0x32b: V268 = M[0x40]
0x32e: V269 = SUB V266 V268
0x330: RETURN V268 V269
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x331
[0x331:0x337]
---
Predecessors: [0x96]
Successors: [0x338, 0x33c]
---
0x331 JUMPDEST
0x332 CALLVALUE
0x333 ISZERO
0x334 PUSH2 0x33c
0x337 JUMPI
---
0x331: JUMPDEST 
0x332: V270 = CALLVALUE
0x333: V271 = ISZERO V270
0x334: V272 = 0x33c
0x337: JUMPI 0x33c V271
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x338
[0x338:0x33b]
---
Predecessors: [0x331]
Successors: []
---
0x338 PUSH1 0x0
0x33a DUP1
0x33b REVERT
---
0x338: V273 = 0x0
0x33b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33c
[0x33c:0x343]
---
Predecessors: [0x331]
Successors: [0x482]
---
0x33c JUMPDEST
0x33d PUSH2 0x1e7
0x340 PUSH2 0x482
0x343 JUMP
---
0x33c: JUMPDEST 
0x33d: V274 = 0x1e7
0x340: V275 = 0x482
0x343: JUMP 0x482
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7]
Exit stack: [V10, 0x1e7]

================================

Block 0x344
[0x344:0x345]
---
Predecessors: []
Successors: []
---
0x344 JUMPDEST
0x345 STOP
---
0x344: JUMPDEST 
0x345: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x346
[0x346:0x351]
---
Predecessors: [0x1df]
Successors: [0x352, 0x3c5]
---
0x346 JUMPDEST
0x347 PUSH1 0x2
0x349 SLOAD
0x34a PUSH1 0x3
0x34c SLOAD
0x34d LT
0x34e PUSH2 0x3c5
0x351 JUMPI
---
0x346: JUMPDEST 
0x347: V276 = 0x2
0x349: V277 = S[0x2]
0x34a: V278 = 0x3
0x34c: V279 = S[0x3]
0x34d: V280 = LT V279 V277
0x34e: V281 = 0x3c5
0x351: JUMPI 0x3c5 V280
---
Entry stack: [V10, 0x1e7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7]

================================

Block 0x352
[0x352:0x3c4]
---
Predecessors: [0x346]
Successors: [0x3c5]
---
0x352 PUSH1 0x8
0x354 DUP1
0x355 SLOAD
0x356 PUSH2 0xff00
0x359 NOT
0x35a AND
0x35b PUSH2 0x100
0x35e OR
0x35f SWAP1
0x360 SSTORE
0x361 PUSH1 0x0
0x363 SLOAD
0x364 PUSH1 0x3
0x366 SLOAD
0x367 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x388 SWAP2
0x389 PUSH1 0x1
0x38b PUSH1 0xa0
0x38d PUSH1 0x2
0x38f EXP
0x390 SUB
0x391 AND
0x392 SWAP1
0x393 PUSH1 0x40
0x395 MLOAD
0x396 PUSH1 0x1
0x398 PUSH1 0xa0
0x39a PUSH1 0x2
0x39c EXP
0x39d SUB
0x39e SWAP1
0x39f SWAP3
0x3a0 AND
0x3a1 DUP3
0x3a2 MSTORE
0x3a3 PUSH1 0x20
0x3a5 DUP3
0x3a6 ADD
0x3a7 MSTORE
0x3a8 PUSH1 0x40
0x3aa SWAP1
0x3ab DUP2
0x3ac ADD
0x3ad SWAP1
0x3ae MLOAD
0x3af DUP1
0x3b0 SWAP2
0x3b1 SUB
0x3b2 SWAP1
0x3b3 LOG1
0x3b4 PUSH1 0x8
0x3b6 DUP1
0x3b7 SLOAD
0x3b8 PUSH3 0xff0000
0x3bc NOT
0x3bd AND
0x3be PUSH3 0x10000
0x3c2 OR
0x3c3 SWAP1
0x3c4 SSTORE
---
0x352: V282 = 0x8
0x355: V283 = S[0x8]
0x356: V284 = 0xff00
0x359: V285 = NOT 0xff00
0x35a: V286 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V283
0x35b: V287 = 0x100
0x35e: V288 = OR 0x100 V286
0x360: S[0x8] = V288
0x361: V289 = 0x0
0x363: V290 = S[0x0]
0x364: V291 = 0x3
0x366: V292 = S[0x3]
0x367: V293 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x389: V294 = 0x1
0x38b: V295 = 0xa0
0x38d: V296 = 0x2
0x38f: V297 = EXP 0x2 0xa0
0x390: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x391: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x393: V300 = 0x40
0x395: V301 = M[0x40]
0x396: V302 = 0x1
0x398: V303 = 0xa0
0x39a: V304 = 0x2
0x39c: V305 = EXP 0x2 0xa0
0x39d: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a0: V307 = AND V299 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: M[V301] = V307
0x3a3: V308 = 0x20
0x3a6: V309 = ADD V301 0x20
0x3a7: M[V309] = V292
0x3a8: V310 = 0x40
0x3ac: V311 = ADD 0x40 V301
0x3ae: V312 = M[0x40]
0x3b1: V313 = SUB V311 V312
0x3b3: LOG V312 V313 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3b4: V314 = 0x8
0x3b7: V315 = S[0x8]
0x3b8: V316 = 0xff0000
0x3bc: V317 = NOT 0xff0000
0x3bd: V318 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V315
0x3be: V319 = 0x10000
0x3c2: V320 = OR 0x10000 V318
0x3c4: S[0x8] = V320
---
Entry stack: [V10, 0x1e7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7]

================================

Block 0x3c5
[0x3c5:0x3d0]
---
Predecessors: [0x346, 0x352]
Successors: [0x3d1, 0x431]
---
0x3c5 JUMPDEST
0x3c6 PUSH1 0x1
0x3c8 SLOAD
0x3c9 PUSH1 0x3
0x3cb SLOAD
0x3cc LT
0x3cd PUSH2 0x431
0x3d0 JUMPI
---
0x3c5: JUMPDEST 
0x3c6: V321 = 0x1
0x3c8: V322 = S[0x1]
0x3c9: V323 = 0x3
0x3cb: V324 = S[0x3]
0x3cc: V325 = LT V324 V322
0x3cd: V326 = 0x431
0x3d0: JUMPI 0x431 V325
---
Entry stack: [V10, 0x1e7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7]

================================

Block 0x3d1
[0x3d1:0x430]
---
Predecessors: [0x3c5]
Successors: [0x431]
---
0x3d1 PUSH1 0x8
0x3d3 DUP1
0x3d4 SLOAD
0x3d5 PUSH1 0xff
0x3d7 NOT
0x3d8 AND
0x3d9 PUSH1 0x1
0x3db OR
0x3dc SWAP1
0x3dd SSTORE
0x3de PUSH1 0x0
0x3e0 SLOAD
0x3e1 PUSH1 0x3
0x3e3 SLOAD
0x3e4 PUSH32 0x127a0d60b64e68d983855c4d67e59aab432c3fded72f4317958b05a2eb1dbe0f
0x405 SWAP2
0x406 PUSH1 0x1
0x408 PUSH1 0xa0
0x40a PUSH1 0x2
0x40c EXP
0x40d SUB
0x40e AND
0x40f SWAP1
0x410 PUSH1 0x40
0x412 MLOAD
0x413 PUSH1 0x1
0x415 PUSH1 0xa0
0x417 PUSH1 0x2
0x419 EXP
0x41a SUB
0x41b SWAP1
0x41c SWAP3
0x41d AND
0x41e DUP3
0x41f MSTORE
0x420 PUSH1 0x20
0x422 DUP3
0x423 ADD
0x424 MSTORE
0x425 PUSH1 0x40
0x427 SWAP1
0x428 DUP2
0x429 ADD
0x42a SWAP1
0x42b MLOAD
0x42c DUP1
0x42d SWAP2
0x42e SUB
0x42f SWAP1
0x430 LOG1
---
0x3d1: V327 = 0x8
0x3d4: V328 = S[0x8]
0x3d5: V329 = 0xff
0x3d7: V330 = NOT 0xff
0x3d8: V331 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V328
0x3d9: V332 = 0x1
0x3db: V333 = OR 0x1 V331
0x3dd: S[0x8] = V333
0x3de: V334 = 0x0
0x3e0: V335 = S[0x0]
0x3e1: V336 = 0x3
0x3e3: V337 = S[0x3]
0x3e4: V338 = 0x127a0d60b64e68d983855c4d67e59aab432c3fded72f4317958b05a2eb1dbe0f
0x406: V339 = 0x1
0x408: V340 = 0xa0
0x40a: V341 = 0x2
0x40c: V342 = EXP 0x2 0xa0
0x40d: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40e: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x410: V345 = 0x40
0x412: V346 = M[0x40]
0x413: V347 = 0x1
0x415: V348 = 0xa0
0x417: V349 = 0x2
0x419: V350 = EXP 0x2 0xa0
0x41a: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41d: V352 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0x41f: M[V346] = V352
0x420: V353 = 0x20
0x423: V354 = ADD V346 0x20
0x424: M[V354] = V337
0x425: V355 = 0x40
0x429: V356 = ADD 0x40 V346
0x42b: V357 = M[0x40]
0x42e: V358 = SUB V356 V357
0x430: LOG V357 V358 0x127a0d60b64e68d983855c4d67e59aab432c3fded72f4317958b05a2eb1dbe0f
---
Entry stack: [V10, 0x1e7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7]

================================

Block 0x431
[0x431:0x431]
---
Predecessors: [0x3c5, 0x3d1]
Successors: [0x432]
---
0x431 JUMPDEST
---
0x431: JUMPDEST 
---
Entry stack: [V10, 0x1e7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7]

================================

Block 0x432
[0x432:0x433]
---
Predecessors: [0x431]
Successors: [0x1e7]
---
0x432 JUMPDEST
0x433 JUMP
---
0x432: JUMPDEST 
0x433: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x434
[0x434:0x439]
---
Predecessors: [0x1f4]
Successors: [0x1fc]
---
0x434 JUMPDEST
0x435 PUSH1 0x4
0x437 SLOAD
0x438 DUP2
0x439 JUMP
---
0x434: JUMPDEST 
0x435: V359 = 0x4
0x437: V360 = S[0x4]
0x439: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V360]
Exit stack: [V10, 0x1fc, V360]

================================

Block 0x43a
[0x43a:0x448]
---
Predecessors: [0x219]
Successors: [0x221]
---
0x43a JUMPDEST
0x43b PUSH1 0x0
0x43d SLOAD
0x43e PUSH1 0x1
0x440 PUSH1 0xa0
0x442 PUSH1 0x2
0x444 EXP
0x445 SUB
0x446 AND
0x447 DUP2
0x448 JUMP
---
0x43a: JUMPDEST 
0x43b: V361 = 0x0
0x43d: V362 = S[0x0]
0x43e: V363 = 0x1
0x440: V364 = 0xa0
0x442: V365 = 0x2
0x444: V366 = EXP 0x2 0xa0
0x445: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x448: JUMP 0x221
---
Entry stack: [V10, 0x221]
Stack pops: 1
Stack additions: [S0, V368]
Exit stack: [V10, 0x221, V368]

================================

Block 0x449
[0x449:0x457]
---
Predecessors: [0x248]
Successors: [0x221]
---
0x449 JUMPDEST
0x44a PUSH1 0x6
0x44c SLOAD
0x44d PUSH1 0x1
0x44f PUSH1 0xa0
0x451 PUSH1 0x2
0x453 EXP
0x454 SUB
0x455 AND
0x456 DUP2
0x457 JUMP
---
0x449: JUMPDEST 
0x44a: V369 = 0x6
0x44c: V370 = S[0x6]
0x44d: V371 = 0x1
0x44f: V372 = 0xa0
0x451: V373 = 0x2
0x453: V374 = EXP 0x2 0xa0
0x454: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x455: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x457: JUMP 0x221
---
Entry stack: [V10, 0x221]
Stack pops: 1
Stack additions: [S0, V376]
Exit stack: [V10, 0x221, V376]

================================

Block 0x458
[0x458:0x469]
---
Predecessors: [0x277]
Successors: [0x1fc]
---
0x458 JUMPDEST
0x459 PUSH1 0x7
0x45b PUSH1 0x20
0x45d MSTORE
0x45e PUSH1 0x0
0x460 SWAP1
0x461 DUP2
0x462 MSTORE
0x463 PUSH1 0x40
0x465 SWAP1
0x466 SHA3
0x467 SLOAD
0x468 DUP2
0x469 JUMP
---
0x458: JUMPDEST 
0x459: V377 = 0x7
0x45b: V378 = 0x20
0x45d: M[0x20] = 0x7
0x45e: V379 = 0x0
0x462: M[0x0] = V209
0x463: V380 = 0x40
0x466: V381 = SHA3 0x0 0x40
0x467: V382 = S[V381]
0x469: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc, V209]
Stack pops: 2
Stack additions: [S1, V382]
Exit stack: [V10, 0x1fc, V382]

================================

Block 0x46a
[0x46a:0x46f]
---
Predecessors: [0x2a8]
Successors: [0x1fc]
---
0x46a JUMPDEST
0x46b PUSH1 0x2
0x46d SLOAD
0x46e DUP2
0x46f JUMP
---
0x46a: JUMPDEST 
0x46b: V383 = 0x2
0x46d: V384 = S[0x2]
0x46f: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V384]
Exit stack: [V10, 0x1fc, V384]

================================

Block 0x470
[0x470:0x475]
---
Predecessors: [0x2cd]
Successors: [0x1fc]
---
0x470 JUMPDEST
0x471 PUSH1 0x3
0x473 SLOAD
0x474 DUP2
0x475 JUMP
---
0x470: JUMPDEST 
0x471: V385 = 0x3
0x473: V386 = S[0x3]
0x475: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V386]
Exit stack: [V10, 0x1fc, V386]

================================

Block 0x476
[0x476:0x47b]
---
Predecessors: [0x2f2]
Successors: [0x1fc]
---
0x476 JUMPDEST
0x477 PUSH1 0x1
0x479 SLOAD
0x47a DUP2
0x47b JUMP
---
0x476: JUMPDEST 
0x477: V387 = 0x1
0x479: V388 = S[0x1]
0x47b: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V388]
Exit stack: [V10, 0x1fc, V388]

================================

Block 0x47c
[0x47c:0x481]
---
Predecessors: [0x317]
Successors: [0x1fc]
---
0x47c JUMPDEST
0x47d PUSH1 0x5
0x47f SLOAD
0x480 DUP2
0x481 JUMP
---
0x47c: JUMPDEST 
0x47d: V389 = 0x5
0x47f: V390 = S[0x5]
0x481: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V390]
Exit stack: [V10, 0x1fc, V390]

================================

Block 0x482
[0x482:0x48e]
---
Predecessors: [0x33c]
Successors: [0x48f, 0x639]
---
0x482 JUMPDEST
0x483 PUSH1 0x4
0x485 SLOAD
0x486 PUSH1 0x0
0x488 SWAP1
0x489 TIMESTAMP
0x48a LT
0x48b PUSH2 0x639
0x48e JUMPI
---
0x482: JUMPDEST 
0x483: V391 = 0x4
0x485: V392 = S[0x4]
0x486: V393 = 0x0
0x489: V394 = TIMESTAMP
0x48a: V395 = LT V394 V392
0x48b: V396 = 0x639
0x48e: JUMPI 0x639 V395
---
Entry stack: [V10, 0x1e7]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1e7, 0x0]

================================

Block 0x48f
[0x48f:0x49a]
---
Predecessors: [0x482]
Successors: [0x49b, 0x56b]
---
0x48f PUSH1 0x8
0x491 SLOAD
0x492 PUSH1 0xff
0x494 AND
0x495 ISZERO
0x496 ISZERO
0x497 PUSH2 0x56b
0x49a JUMPI
---
0x48f: V397 = 0x8
0x491: V398 = S[0x8]
0x492: V399 = 0xff
0x494: V400 = AND 0xff V398
0x495: V401 = ISZERO V400
0x496: V402 = ISZERO V401
0x497: V403 = 0x56b
0x49a: JUMPI 0x56b V402
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, 0x0]

================================

Block 0x49b
[0x49b:0x4c1]
---
Predecessors: [0x48f]
Successors: [0x4c2, 0x56b]
---
0x49b POP
0x49c PUSH1 0x1
0x49e PUSH1 0xa0
0x4a0 PUSH1 0x2
0x4a2 EXP
0x4a3 SUB
0x4a4 CALLER
0x4a5 AND
0x4a6 PUSH1 0x0
0x4a8 SWAP1
0x4a9 DUP2
0x4aa MSTORE
0x4ab PUSH1 0x7
0x4ad PUSH1 0x20
0x4af MSTORE
0x4b0 PUSH1 0x40
0x4b2 DUP2
0x4b3 SHA3
0x4b4 DUP1
0x4b5 SLOAD
0x4b6 SWAP1
0x4b7 DUP3
0x4b8 SWAP1
0x4b9 SSTORE
0x4ba SWAP1
0x4bb DUP2
0x4bc GT
0x4bd ISZERO
0x4be PUSH2 0x56b
0x4c1 JUMPI
---
0x49c: V404 = 0x1
0x49e: V405 = 0xa0
0x4a0: V406 = 0x2
0x4a2: V407 = EXP 0x2 0xa0
0x4a3: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a4: V409 = CALLER
0x4a5: V410 = AND V409 0xffffffffffffffffffffffffffffffffffffffff
0x4a6: V411 = 0x0
0x4aa: M[0x0] = V410
0x4ab: V412 = 0x7
0x4ad: V413 = 0x20
0x4af: M[0x20] = 0x7
0x4b0: V414 = 0x40
0x4b3: V415 = SHA3 0x0 0x40
0x4b5: V416 = S[V415]
0x4b9: S[V415] = 0x0
0x4bc: V417 = GT V416 0x0
0x4bd: V418 = ISZERO V417
0x4be: V419 = 0x56b
0x4c1: JUMPI 0x56b V418
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 1
Stack additions: [V416]
Exit stack: [V10, 0x1e7, V416]

================================

Block 0x4c2
[0x4c2:0x4ec]
---
Predecessors: [0x49b]
Successors: [0x4ed, 0x545]
---
0x4c2 PUSH1 0x1
0x4c4 PUSH1 0xa0
0x4c6 PUSH1 0x2
0x4c8 EXP
0x4c9 SUB
0x4ca CALLER
0x4cb AND
0x4cc DUP2
0x4cd ISZERO
0x4ce PUSH2 0x8fc
0x4d1 MUL
0x4d2 DUP3
0x4d3 PUSH1 0x40
0x4d5 MLOAD
0x4d6 PUSH1 0x0
0x4d8 PUSH1 0x40
0x4da MLOAD
0x4db DUP1
0x4dc DUP4
0x4dd SUB
0x4de DUP2
0x4df DUP6
0x4e0 DUP9
0x4e1 DUP9
0x4e2 CALL
0x4e3 SWAP4
0x4e4 POP
0x4e5 POP
0x4e6 POP
0x4e7 POP
0x4e8 ISZERO
0x4e9 PUSH2 0x545
0x4ec JUMPI
---
0x4c2: V420 = 0x1
0x4c4: V421 = 0xa0
0x4c6: V422 = 0x2
0x4c8: V423 = EXP 0x2 0xa0
0x4c9: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ca: V425 = CALLER
0x4cb: V426 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V427 = ISZERO V416
0x4ce: V428 = 0x8fc
0x4d1: V429 = MUL 0x8fc V427
0x4d3: V430 = 0x40
0x4d5: V431 = M[0x40]
0x4d6: V432 = 0x0
0x4d8: V433 = 0x40
0x4da: V434 = M[0x40]
0x4dd: V435 = SUB V431 V434
0x4e2: V436 = CALL V429 V426 V416 V434 V435 V434 0x0
0x4e8: V437 = ISZERO V436
0x4e9: V438 = 0x545
0x4ec: JUMPI 0x545 V437
---
Entry stack: [V10, 0x1e7, V416]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e7, V416]

================================

Block 0x4ed
[0x4ed:0x544]
---
Predecessors: [0x4c2]
Successors: [0x56b]
---
0x4ed PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x50e CALLER
0x50f DUP3
0x510 PUSH1 0x0
0x512 PUSH1 0x40
0x514 MLOAD
0x515 PUSH1 0x1
0x517 PUSH1 0xa0
0x519 PUSH1 0x2
0x51b EXP
0x51c SUB
0x51d SWAP1
0x51e SWAP4
0x51f AND
0x520 DUP4
0x521 MSTORE
0x522 PUSH1 0x20
0x524 DUP4
0x525 ADD
0x526 SWAP2
0x527 SWAP1
0x528 SWAP2
0x529 MSTORE
0x52a ISZERO
0x52b ISZERO
0x52c PUSH1 0x40
0x52e DUP1
0x52f DUP4
0x530 ADD
0x531 SWAP2
0x532 SWAP1
0x533 SWAP2
0x534 MSTORE
0x535 PUSH1 0x60
0x537 SWAP1
0x538 SWAP2
0x539 ADD
0x53a SWAP1
0x53b MLOAD
0x53c DUP1
0x53d SWAP2
0x53e SUB
0x53f SWAP1
0x540 LOG1
0x541 PUSH2 0x56b
0x544 JUMP
---
0x4ed: V439 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x50e: V440 = CALLER
0x510: V441 = 0x0
0x512: V442 = 0x40
0x514: V443 = M[0x40]
0x515: V444 = 0x1
0x517: V445 = 0xa0
0x519: V446 = 0x2
0x51b: V447 = EXP 0x2 0xa0
0x51c: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51f: V449 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x521: M[V443] = V449
0x522: V450 = 0x20
0x525: V451 = ADD V443 0x20
0x529: M[V451] = V416
0x52a: V452 = ISZERO 0x0
0x52b: V453 = ISZERO 0x1
0x52c: V454 = 0x40
0x530: V455 = ADD V443 0x40
0x534: M[V455] = 0x0
0x535: V456 = 0x60
0x539: V457 = ADD V443 0x60
0x53b: V458 = M[0x40]
0x53e: V459 = SUB V457 V458
0x540: LOG V458 V459 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x541: V460 = 0x56b
0x544: JUMP 0x56b
---
Entry stack: [V10, 0x1e7, V416]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e7, V416]

================================

Block 0x545
[0x545:0x56a]
---
Predecessors: [0x4c2]
Successors: [0x56b]
---
0x545 JUMPDEST
0x546 PUSH1 0x1
0x548 PUSH1 0xa0
0x54a PUSH1 0x2
0x54c EXP
0x54d SUB
0x54e CALLER
0x54f AND
0x550 PUSH1 0x0
0x552 SWAP1
0x553 DUP2
0x554 MSTORE
0x555 PUSH1 0x7
0x557 PUSH1 0x20
0x559 MSTORE
0x55a PUSH1 0x40
0x55c SWAP1
0x55d SHA3
0x55e PUSH8 0xde0b6b3a7640000
0x567 DUP3
0x568 MUL
0x569 SWAP1
0x56a SSTORE
---
0x545: JUMPDEST 
0x546: V461 = 0x1
0x548: V462 = 0xa0
0x54a: V463 = 0x2
0x54c: V464 = EXP 0x2 0xa0
0x54d: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54e: V466 = CALLER
0x54f: V467 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x550: V468 = 0x0
0x554: M[0x0] = V467
0x555: V469 = 0x7
0x557: V470 = 0x20
0x559: M[0x20] = 0x7
0x55a: V471 = 0x40
0x55d: V472 = SHA3 0x0 0x40
0x55e: V473 = 0xde0b6b3a7640000
0x568: V474 = MUL V416 0xde0b6b3a7640000
0x56a: S[V472] = V474
---
Entry stack: [V10, 0x1e7, V416]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e7, V416]

================================

Block 0x56b
[0x56b:0x56b]
---
Predecessors: [0x48f, 0x49b, 0x4ed, 0x545]
Successors: [0x56c]
---
0x56b JUMPDEST
---
0x56b: JUMPDEST 
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, S0]

================================

Block 0x56c
[0x56c:0x56c]
---
Predecessors: [0x56b]
Successors: [0x56d]
---
0x56c JUMPDEST
---
0x56c: JUMPDEST 
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, S0]

================================

Block 0x56d
[0x56d:0x579]
---
Predecessors: [0x56c]
Successors: [0x57a, 0x58d]
---
0x56d JUMPDEST
0x56e PUSH1 0x8
0x570 SLOAD
0x571 PUSH1 0xff
0x573 AND
0x574 DUP1
0x575 ISZERO
0x576 PUSH2 0x58d
0x579 JUMPI
---
0x56d: JUMPDEST 
0x56e: V475 = 0x8
0x570: V476 = S[0x8]
0x571: V477 = 0xff
0x573: V478 = AND 0xff V476
0x575: V479 = ISZERO V478
0x576: V480 = 0x58d
0x579: JUMPI 0x58d V479
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: [V478]
Exit stack: [V10, 0x1e7, S0, V478]

================================

Block 0x57a
[0x57a:0x58c]
---
Predecessors: [0x56d]
Successors: [0x58d]
---
0x57a POP
0x57b PUSH1 0x0
0x57d SLOAD
0x57e CALLER
0x57f PUSH1 0x1
0x581 PUSH1 0xa0
0x583 PUSH1 0x2
0x585 EXP
0x586 SUB
0x587 SWAP1
0x588 DUP2
0x589 AND
0x58a SWAP2
0x58b AND
0x58c EQ
---
0x57b: V481 = 0x0
0x57d: V482 = S[0x0]
0x57e: V483 = CALLER
0x57f: V484 = 0x1
0x581: V485 = 0xa0
0x583: V486 = 0x2
0x585: V487 = EXP 0x2 0xa0
0x586: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x589: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x58b: V490 = AND V482 0xffffffffffffffffffffffffffffffffffffffff
0x58c: V491 = EQ V490 V489
---
Entry stack: [V10, 0x1e7, S1, V478]
Stack pops: 1
Stack additions: [V491]
Exit stack: [V10, 0x1e7, S1, V491]

================================

Block 0x58d
[0x58d:0x592]
---
Predecessors: [0x56d, 0x57a]
Successors: [0x593, 0x639]
---
0x58d JUMPDEST
0x58e ISZERO
0x58f PUSH2 0x639
0x592 JUMPI
---
0x58d: JUMPDEST 
0x58e: V492 = ISZERO S0
0x58f: V493 = 0x639
0x592: JUMPI 0x639 V492
---
Entry stack: [V10, 0x1e7, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1e7, S1]

================================

Block 0x593
[0x593:0x5c5]
---
Predecessors: [0x58d]
Successors: [0x5c6, 0x62e]
---
0x593 PUSH1 0x0
0x595 SLOAD
0x596 PUSH1 0x3
0x598 SLOAD
0x599 PUSH1 0x1
0x59b PUSH1 0xa0
0x59d PUSH1 0x2
0x59f EXP
0x5a0 SUB
0x5a1 SWAP1
0x5a2 SWAP2
0x5a3 AND
0x5a4 SWAP1
0x5a5 DUP1
0x5a6 ISZERO
0x5a7 PUSH2 0x8fc
0x5aa MUL
0x5ab SWAP1
0x5ac PUSH1 0x40
0x5ae MLOAD
0x5af PUSH1 0x0
0x5b1 PUSH1 0x40
0x5b3 MLOAD
0x5b4 DUP1
0x5b5 DUP4
0x5b6 SUB
0x5b7 DUP2
0x5b8 DUP6
0x5b9 DUP9
0x5ba DUP9
0x5bb CALL
0x5bc SWAP4
0x5bd POP
0x5be POP
0x5bf POP
0x5c0 POP
0x5c1 ISZERO
0x5c2 PUSH2 0x62e
0x5c5 JUMPI
---
0x593: V494 = 0x0
0x595: V495 = S[0x0]
0x596: V496 = 0x3
0x598: V497 = S[0x3]
0x599: V498 = 0x1
0x59b: V499 = 0xa0
0x59d: V500 = 0x2
0x59f: V501 = EXP 0x2 0xa0
0x5a0: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a3: V503 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x5a6: V504 = ISZERO V497
0x5a7: V505 = 0x8fc
0x5aa: V506 = MUL 0x8fc V504
0x5ac: V507 = 0x40
0x5ae: V508 = M[0x40]
0x5af: V509 = 0x0
0x5b1: V510 = 0x40
0x5b3: V511 = M[0x40]
0x5b6: V512 = SUB V508 V511
0x5bb: V513 = CALL V506 V503 V497 V511 V512 V511 0x0
0x5c1: V514 = ISZERO V513
0x5c2: V515 = 0x62e
0x5c5: JUMPI 0x62e V514
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, S0]

================================

Block 0x5c6
[0x5c6:0x62d]
---
Predecessors: [0x593]
Successors: [0x639]
---
0x5c6 PUSH1 0x0
0x5c8 DUP1
0x5c9 SLOAD
0x5ca PUSH1 0x3
0x5cc SLOAD
0x5cd PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5ee SWAP3
0x5ef PUSH1 0x1
0x5f1 PUSH1 0xa0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 SUB
0x5f7 SWAP1
0x5f8 SWAP3
0x5f9 AND
0x5fa SWAP2
0x5fb PUSH1 0x40
0x5fd MLOAD
0x5fe PUSH1 0x1
0x600 PUSH1 0xa0
0x602 PUSH1 0x2
0x604 EXP
0x605 SUB
0x606 SWAP1
0x607 SWAP4
0x608 AND
0x609 DUP4
0x60a MSTORE
0x60b PUSH1 0x20
0x60d DUP4
0x60e ADD
0x60f SWAP2
0x610 SWAP1
0x611 SWAP2
0x612 MSTORE
0x613 ISZERO
0x614 ISZERO
0x615 PUSH1 0x40
0x617 DUP1
0x618 DUP4
0x619 ADD
0x61a SWAP2
0x61b SWAP1
0x61c SWAP2
0x61d MSTORE
0x61e PUSH1 0x60
0x620 SWAP1
0x621 SWAP2
0x622 ADD
0x623 SWAP1
0x624 MLOAD
0x625 DUP1
0x626 SWAP2
0x627 SUB
0x628 SWAP1
0x629 LOG1
0x62a PUSH2 0x639
0x62d JUMP
---
0x5c6: V516 = 0x0
0x5c9: V517 = S[0x0]
0x5ca: V518 = 0x3
0x5cc: V519 = S[0x3]
0x5cd: V520 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5ef: V521 = 0x1
0x5f1: V522 = 0xa0
0x5f3: V523 = 0x2
0x5f5: V524 = EXP 0x2 0xa0
0x5f6: V525 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f9: V526 = AND V517 0xffffffffffffffffffffffffffffffffffffffff
0x5fb: V527 = 0x40
0x5fd: V528 = M[0x40]
0x5fe: V529 = 0x1
0x600: V530 = 0xa0
0x602: V531 = 0x2
0x604: V532 = EXP 0x2 0xa0
0x605: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x608: V534 = AND V526 0xffffffffffffffffffffffffffffffffffffffff
0x60a: M[V528] = V534
0x60b: V535 = 0x20
0x60e: V536 = ADD V528 0x20
0x612: M[V536] = V519
0x613: V537 = ISZERO 0x0
0x614: V538 = ISZERO 0x1
0x615: V539 = 0x40
0x619: V540 = ADD V528 0x40
0x61d: M[V540] = 0x0
0x61e: V541 = 0x60
0x622: V542 = ADD V528 0x60
0x624: V543 = M[0x40]
0x627: V544 = SUB V542 V543
0x629: LOG V543 V544 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x62a: V545 = 0x639
0x62d: JUMP 0x639
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, S0]

================================

Block 0x62e
[0x62e:0x638]
---
Predecessors: [0x593]
Successors: [0x639]
---
0x62e JUMPDEST
0x62f PUSH1 0x8
0x631 DUP1
0x632 SLOAD
0x633 PUSH1 0xff
0x635 NOT
0x636 AND
0x637 SWAP1
0x638 SSTORE
---
0x62e: JUMPDEST 
0x62f: V546 = 0x8
0x632: V547 = S[0x8]
0x633: V548 = 0xff
0x635: V549 = NOT 0xff
0x636: V550 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V547
0x638: S[0x8] = V550
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, S0]

================================

Block 0x639
[0x639:0x639]
---
Predecessors: [0x482, 0x58d, 0x5c6, 0x62e]
Successors: [0x63a]
---
0x639 JUMPDEST
---
0x639: JUMPDEST 
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, S0]

================================

Block 0x63a
[0x63a:0x63a]
---
Predecessors: [0x639]
Successors: [0x63b]
---
0x63a JUMPDEST
---
0x63a: JUMPDEST 
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, S0]

================================

Block 0x63b
[0x63b:0x63b]
---
Predecessors: [0x63a]
Successors: [0x63c]
---
0x63b JUMPDEST
---
0x63b: JUMPDEST 
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, S0]

================================

Block 0x63c
[0x63c:0x63c]
---
Predecessors: [0x63b]
Successors: [0x63d]
---
0x63c JUMPDEST
---
0x63c: JUMPDEST 
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, S0]

================================

Block 0x63d
[0x63d:0x63f]
---
Predecessors: [0x63c]
Successors: [0x1e7]
---
0x63d JUMPDEST
0x63e POP
0x63f JUMP
---
0x63d: JUMPDEST 
0x63f: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x640
[0x640:0x672]
---
Predecessors: []
Successors: []
---
0x640 STOP
0x641 LOG1
0x642 PUSH6 0x627a7a723058
0x649 SHA3
0x64a GASPRICE
0x64b EXTCODEHASH
0x64c REVERT
0x64d MISSING 0xea
0x64e SHL
0x64f MISSING 0xd5
0x650 DUP4
0x651 MISSING 0xa6
0x652 MISSING 0xeb
0x653 PUSH31 0x6100ed6f7aa38267e44a9c247b79f544fba9abe6fb990029
---
0x640: STOP 
0x641: LOG S0 S1 S2
0x642: V551 = 0x627a7a723058
0x649: V552 = SHA3 0x627a7a723058 S3
0x64a: V553 = GASPRICE
0x64b: V554 = EXTCODEHASH V553
0x64c: REVERT V554 V552
0x64d: MISSING 0xea
0x64e: V555 = SHL S0 S1
0x64f: MISSING 0xd5
0x651: MISSING 0xa6
0x652: MISSING 0xeb
0x653: V556 = 0x6100ed6f7aa38267e44a9c247b79f544fba9abe6fb990029
---
Entry stack: []
Stack pops: 0
Stack additions: [V555, S3, S0, S1, S2, S3, 0x6100ed6f7aa38267e44a9c247b79f544fba9abe6fb990029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1d4
Exit block: 0x1e7
Body: 0x1d4, 0x1db, 0x1df, 0x1e7, 0x346, 0x352, 0x3c5, 0x3d1, 0x431, 0x432

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1e9
Exit block: 0x1fc
Body: 0x1e9, 0x1f0, 0x1f4, 0x1fc, 0x434

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x20e
Exit block: 0x221
Body: 0x20e, 0x215, 0x219, 0x221, 0x43a

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x23d
Exit block: 0x221
Body: 0x221, 0x23d, 0x244, 0x248, 0x449

Function 4:
Public function signature: 0x70a08231
Entry block: 0x26c
Exit block: 0x1fc
Body: 0x1fc, 0x26c, 0x273, 0x277, 0x458

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x29d
Exit block: 0x1fc
Body: 0x1fc, 0x29d, 0x2a4, 0x2a8, 0x46a

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2c2
Exit block: 0x1fc
Body: 0x1fc, 0x2c2, 0x2c9, 0x2cd, 0x470

Function 7:
Public function signature: 0x906a26e0
Entry block: 0x2e7
Exit block: 0x1fc
Body: 0x1fc, 0x2e7, 0x2ee, 0x2f2, 0x476

Function 8:
Public function signature: 0xa035b1fe
Entry block: 0x30c
Exit block: 0x1fc
Body: 0x1fc, 0x30c, 0x313, 0x317, 0x47c

Function 9:
Public function signature: 0xfd6b7ef8
Entry block: 0x331
Exit block: 0x1e7
Body: 0x1e7, 0x331, 0x338, 0x33c, 0x482, 0x48f, 0x49b, 0x4c2, 0x4ed, 0x545, 0x56b, 0x56c, 0x56d, 0x57a, 0x58d, 0x593, 0x5c6, 0x62e, 0x639, 0x63a, 0x63b, 0x63c, 0x63d

Function 10:
Public fallback function
Entry block: 0xa1
Exit block: 0x1d1
Body: 0xa1, 0xa2, 0xb4, 0xb8, 0x10a, 0x10b, 0x164, 0x168, 0x175, 0x179, 0x1d1

