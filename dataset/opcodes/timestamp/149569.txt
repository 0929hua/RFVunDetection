Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc6]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2d05d3f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc6
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2d05d3f
0x20: V14 = EQ V12 0x2d05d3f
0x21: V15 = 0xc6
0x24: JUMPI 0xc6 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xf5]
---
0x25 DUP1
0x26 PUSH4 0x27e235e3
0x2b EQ
0x2c PUSH2 0xf5
0x2f JUMPI
---
0x26: V16 = 0x27e235e3
0x2b: V17 = EQ 0x27e235e3 V12
0x2c: V18 = 0xf5
0x2f: JUMPI 0xf5 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x126]
---
0x30 DUP1
0x31 PUSH4 0x47a42ff7
0x36 EQ
0x37 PUSH2 0x126
0x3a JUMPI
---
0x31: V19 = 0x47a42ff7
0x36: V20 = EQ 0x47a42ff7 V12
0x37: V21 = 0x126
0x3a: JUMPI 0x126 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xbb]
---
0x3b DUP1
0x3c PUSH4 0x5259347d
0x41 EQ
0x42 PUSH2 0xbb
0x45 JUMPI
---
0x3c: V22 = 0x5259347d
0x41: V23 = EQ 0x5259347d V12
0x42: V24 = 0xbb
0x45: JUMPI 0xbb V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x145]
---
0x46 DUP1
0x47 PUSH4 0x6360fc3f
0x4c EQ
0x4d PUSH2 0x145
0x50 JUMPI
---
0x47: V25 = 0x6360fc3f
0x4c: V26 = EQ 0x6360fc3f V12
0x4d: V27 = 0x145
0x50: JUMPI 0x145 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x16c]
---
0x51 DUP1
0x52 PUSH4 0x6ad1fe02
0x57 EQ
0x58 PUSH2 0x16c
0x5b JUMPI
---
0x52: V28 = 0x6ad1fe02
0x57: V29 = EQ 0x6ad1fe02 V12
0x58: V30 = 0x16c
0x5b: JUMPI 0x16c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x19b]
---
0x5c DUP1
0x5d PUSH4 0xa089feea
0x62 EQ
0x63 PUSH2 0x19b
0x66 JUMPI
---
0x5d: V31 = 0xa089feea
0x62: V32 = EQ 0xa089feea V12
0x63: V33 = 0x19b
0x66: JUMPI 0x19b V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1c2]
---
0x67 DUP1
0x68 PUSH4 0xc3dac9a1
0x6d EQ
0x6e PUSH2 0x1c2
0x71 JUMPI
---
0x68: V34 = 0xc3dac9a1
0x6d: V35 = EQ 0xc3dac9a1 V12
0x6e: V36 = 0x1c2
0x71: JUMPI 0x1c2 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1e7]
---
0x72 DUP1
0x73 PUSH4 0xc42bb1e4
0x78 EQ
0x79 PUSH2 0x1e7
0x7c JUMPI
---
0x73: V37 = 0xc42bb1e4
0x78: V38 = EQ 0xc42bb1e4 V12
0x79: V39 = 0x1e7
0x7c: JUMPI 0x1e7 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x20c]
---
0x7d DUP1
0x7e PUSH4 0xd2c03c01
0x83 EQ
0x84 PUSH2 0x20c
0x87 JUMPI
---
0x7e: V40 = 0xd2c03c01
0x83: V41 = EQ 0xd2c03c01 V12
0x84: V42 = 0x20c
0x87: JUMPI 0x20c V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x22d]
---
0x88 DUP1
0x89 PUSH4 0xd4701c35
0x8e EQ
0x8f PUSH2 0x22d
0x92 JUMPI
---
0x89: V43 = 0xd4701c35
0x8e: V44 = EQ 0xd4701c35 V12
0x8f: V45 = 0x22d
0x92: JUMPI 0x22d V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x280]
---
0x93 DUP1
0x94 PUSH4 0xfc0c546a
0x99 EQ
0x9a PUSH2 0x280
0x9d JUMPI
---
0x94: V46 = 0xfc0c546a
0x99: V47 = EQ 0xfc0c546a V12
0x9a: V48 = 0x280
0x9d: JUMPI 0x280 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0x9e]
---
Predecessors: [0x0, 0x93]
Successors: [0x9f]
---
0x9e JUMPDEST
---
0x9e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9f
[0x9f:0xb6]
---
Predecessors: [0x9e]
Successors: [0xb7, 0xbb]
---
0x9f JUMPDEST
0xa0 PUSH1 0x6
0xa2 SLOAD
0xa3 CALLER
0xa4 PUSH1 0x1
0xa6 PUSH1 0xa0
0xa8 PUSH1 0x2
0xaa EXP
0xab SUB
0xac SWAP1
0xad DUP2
0xae AND
0xaf SWAP2
0xb0 AND
0xb1 EQ
0xb2 ISZERO
0xb3 PUSH2 0xbb
0xb6 JUMPI
---
0x9f: JUMPDEST 
0xa0: V49 = 0x6
0xa2: V50 = S[0x6]
0xa3: V51 = CALLER
0xa4: V52 = 0x1
0xa6: V53 = 0xa0
0xa8: V54 = 0x2
0xaa: V55 = EXP 0x2 0xa0
0xab: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xb0: V58 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0xb1: V59 = EQ V58 V57
0xb2: V60 = ISZERO V59
0xb3: V61 = 0xbb
0xb6: JUMPI 0xbb V60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0x9f]
Successors: []
---
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb7: V62 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0x3b, 0x9f]
Successors: [0x2af]
---
0xbb JUMPDEST
0xbc PUSH2 0xc3
0xbf PUSH2 0x2af
0xc2 JUMP
---
0xbb: JUMPDEST 
0xbc: V63 = 0xc3
0xbf: V64 = 0x2af
0xc2: JUMP 0x2af
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc3]
Exit stack: [V12, 0xc3]

================================

Block 0xc3
[0xc3:0xc3]
---
Predecessors: [0x30b, 0x417, 0x493]
Successors: [0xc4]
---
0xc3 JUMPDEST
---
0xc3: JUMPDEST 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: [0xc3]
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0xb]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V65 = CALLVALUE
0xc8: V66 = ISZERO V65
0xc9: V67 = 0xd1
0xcc: JUMPI 0xd1 V66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V68 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0xd8]
---
Predecessors: [0xc6]
Successors: [0x30d]
---
0xd1 JUMPDEST
0xd2 PUSH2 0xd9
0xd5 PUSH2 0x30d
0xd8 JUMP
---
0xd1: JUMPDEST 
0xd2: V69 = 0xd9
0xd5: V70 = 0x30d
0xd8: JUMP 0x30d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd9]
Exit stack: [V12, 0xd9]

================================

Block 0xd9
[0xd9:0xf4]
---
Predecessors: [0x30d, 0x3c7, 0x496]
Successors: []
---
0xd9 JUMPDEST
0xda PUSH1 0x40
0xdc MLOAD
0xdd PUSH1 0x1
0xdf PUSH1 0xa0
0xe1 PUSH1 0x2
0xe3 EXP
0xe4 SUB
0xe5 SWAP1
0xe6 SWAP2
0xe7 AND
0xe8 DUP2
0xe9 MSTORE
0xea PUSH1 0x20
0xec ADD
0xed PUSH1 0x40
0xef MLOAD
0xf0 DUP1
0xf1 SWAP2
0xf2 SUB
0xf3 SWAP1
0xf4 RETURN
---
0xd9: JUMPDEST 
0xda: V71 = 0x40
0xdc: V72 = M[0x40]
0xdd: V73 = 0x1
0xdf: V74 = 0xa0
0xe1: V75 = 0x2
0xe3: V76 = EXP 0x2 0xa0
0xe4: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7: V78 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe9: M[V72] = V78
0xea: V79 = 0x20
0xec: V80 = ADD 0x20 V72
0xed: V81 = 0x40
0xef: V82 = M[0x40]
0xf2: V83 = SUB V80 V82
0xf4: RETURN V82 V83
---
Entry stack: [V12, 0xd9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd9]

================================

Block 0xf5
[0xf5:0xfb]
---
Predecessors: [0x25]
Successors: [0xfc, 0x100]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 ISZERO
0xf8 PUSH2 0x100
0xfb JUMPI
---
0xf5: JUMPDEST 
0xf6: V84 = CALLVALUE
0xf7: V85 = ISZERO V84
0xf8: V86 = 0x100
0xfb: JUMPI 0x100 V85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc
[0xfc:0xff]
---
Predecessors: [0xf5]
Successors: []
---
0xfc PUSH1 0x0
0xfe DUP1
0xff REVERT
---
0xfc: V87 = 0x0
0xff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x100
[0x100:0x113]
---
Predecessors: [0xf5]
Successors: [0x321]
---
0x100 JUMPDEST
0x101 PUSH2 0x114
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c PUSH1 0x4
0x10e CALLDATALOAD
0x10f AND
0x110 PUSH2 0x321
0x113 JUMP
---
0x100: JUMPDEST 
0x101: V88 = 0x114
0x104: V89 = 0x1
0x106: V90 = 0xa0
0x108: V91 = 0x2
0x10a: V92 = EXP 0x2 0xa0
0x10b: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V94 = 0x4
0x10e: V95 = CALLDATALOAD 0x4
0x10f: V96 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x110: V97 = 0x321
0x113: JUMP 0x321
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x114, V96]
Exit stack: [V12, 0x114, V96]

================================

Block 0x114
[0x114:0x125]
---
Predecessors: [0x321, 0x3df, 0x3e5]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x40
0x117 MLOAD
0x118 SWAP1
0x119 DUP2
0x11a MSTORE
0x11b PUSH1 0x20
0x11d ADD
0x11e PUSH1 0x40
0x120 MLOAD
0x121 DUP1
0x122 SWAP2
0x123 SUB
0x124 SWAP1
0x125 RETURN
---
0x114: JUMPDEST 
0x115: V98 = 0x40
0x117: V99 = M[0x40]
0x11a: M[V99] = S0
0x11b: V100 = 0x20
0x11d: V101 = ADD 0x20 V99
0x11e: V102 = 0x40
0x120: V103 = M[0x40]
0x123: V104 = SUB V101 V103
0x125: RETURN V103 V104
---
Entry stack: [V12, 0x114, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x114]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x30]
Successors: [0x12d, 0x131]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x126: JUMPDEST 
0x127: V105 = CALLVALUE
0x128: V106 = ISZERO V105
0x129: V107 = 0x131
0x12c: JUMPI 0x131 V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x126]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V108 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x131
[0x131:0x138]
---
Predecessors: [0x126]
Successors: [0x333]
---
0x131 JUMPDEST
0x132 PUSH2 0xc3
0x135 PUSH2 0x333
0x138 JUMP
---
0x131: JUMPDEST 
0x132: V109 = 0xc3
0x135: V110 = 0x333
0x138: JUMP 0x333
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc3]
Exit stack: [V12, 0xc3]

================================

Block 0x139
[0x139:0x142]
---
Predecessors: []
Successors: [0x2af]
---
0x139 JUMPDEST
0x13a STOP
0x13b JUMPDEST
0x13c PUSH2 0xc3
0x13f PUSH2 0x2af
0x142 JUMP
---
0x139: JUMPDEST 
0x13a: STOP 
0x13b: JUMPDEST 
0x13c: V111 = 0xc3
0x13f: V112 = 0x2af
0x142: JUMP 0x2af
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc3]
Exit stack: []

================================

Block 0x143
[0x143:0x144]
---
Predecessors: []
Successors: []
---
0x143 JUMPDEST
0x144 STOP
---
0x143: JUMPDEST 
0x144: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x145
[0x145:0x14b]
---
Predecessors: [0x46]
Successors: [0x14c, 0x150]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x145: JUMPDEST 
0x146: V113 = CALLVALUE
0x147: V114 = ISZERO V113
0x148: V115 = 0x150
0x14b: JUMPI 0x150 V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x145]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V116 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x150
[0x150:0x157]
---
Predecessors: [0x145]
Successors: [0x3be]
---
0x150 JUMPDEST
0x151 PUSH2 0x158
0x154 PUSH2 0x3be
0x157 JUMP
---
0x150: JUMPDEST 
0x151: V117 = 0x158
0x154: V118 = 0x3be
0x157: JUMP 0x3be
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x158]
Exit stack: [V12, 0x158]

================================

Block 0x158
[0x158:0x16b]
---
Predecessors: [0x3be, 0x3d6]
Successors: []
---
0x158 JUMPDEST
0x159 PUSH1 0x40
0x15b MLOAD
0x15c SWAP1
0x15d ISZERO
0x15e ISZERO
0x15f DUP2
0x160 MSTORE
0x161 PUSH1 0x20
0x163 ADD
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x158: JUMPDEST 
0x159: V119 = 0x40
0x15b: V120 = M[0x40]
0x15d: V121 = ISZERO S0
0x15e: V122 = ISZERO V121
0x160: M[V120] = V122
0x161: V123 = 0x20
0x163: V124 = ADD 0x20 V120
0x164: V125 = 0x40
0x166: V126 = M[0x40]
0x169: V127 = SUB V124 V126
0x16b: RETURN V126 V127
---
Entry stack: [V12, 0x158, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x158]

================================

Block 0x16c
[0x16c:0x172]
---
Predecessors: [0x51]
Successors: [0x173, 0x177]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x16c: JUMPDEST 
0x16d: V128 = CALLVALUE
0x16e: V129 = ISZERO V128
0x16f: V130 = 0x177
0x172: JUMPI 0x177 V129
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x16c]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V131 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x177
[0x177:0x17e]
---
Predecessors: [0x16c]
Successors: [0x3c7]
---
0x177 JUMPDEST
0x178 PUSH2 0xd9
0x17b PUSH2 0x3c7
0x17e JUMP
---
0x177: JUMPDEST 
0x178: V132 = 0xd9
0x17b: V133 = 0x3c7
0x17e: JUMP 0x3c7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd9]
Exit stack: [V12, 0xd9]

================================

Block 0x17f
[0x17f:0x19a]
---
Predecessors: []
Successors: []
---
0x17f JUMPDEST
0x180 PUSH1 0x40
0x182 MLOAD
0x183 PUSH1 0x1
0x185 PUSH1 0xa0
0x187 PUSH1 0x2
0x189 EXP
0x18a SUB
0x18b SWAP1
0x18c SWAP2
0x18d AND
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 ADD
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 SWAP2
0x198 SUB
0x199 SWAP1
0x19a RETURN
---
0x17f: JUMPDEST 
0x180: V134 = 0x40
0x182: V135 = M[0x40]
0x183: V136 = 0x1
0x185: V137 = 0xa0
0x187: V138 = 0x2
0x189: V139 = EXP 0x2 0xa0
0x18a: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18d: V141 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x18f: M[V135] = V141
0x190: V142 = 0x20
0x192: V143 = ADD 0x20 V135
0x193: V144 = 0x40
0x195: V145 = M[0x40]
0x198: V146 = SUB V143 V145
0x19a: RETURN V145 V146
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x19b
[0x19b:0x1a1]
---
Predecessors: [0x5c]
Successors: [0x1a2, 0x1a6]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d ISZERO
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x19b: JUMPDEST 
0x19c: V147 = CALLVALUE
0x19d: V148 = ISZERO V147
0x19e: V149 = 0x1a6
0x1a1: JUMPI 0x1a6 V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x19b]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V150 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a6
[0x1a6:0x1ad]
---
Predecessors: [0x19b]
Successors: [0x3d6]
---
0x1a6 JUMPDEST
0x1a7 PUSH2 0x158
0x1aa PUSH2 0x3d6
0x1ad JUMP
---
0x1a6: JUMPDEST 
0x1a7: V151 = 0x158
0x1aa: V152 = 0x3d6
0x1ad: JUMP 0x3d6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x158]
Exit stack: [V12, 0x158]

================================

Block 0x1ae
[0x1ae:0x1c1]
---
Predecessors: []
Successors: []
---
0x1ae JUMPDEST
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 SWAP1
0x1b3 ISZERO
0x1b4 ISZERO
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be SWAP2
0x1bf SUB
0x1c0 SWAP1
0x1c1 RETURN
---
0x1ae: JUMPDEST 
0x1af: V153 = 0x40
0x1b1: V154 = M[0x40]
0x1b3: V155 = ISZERO S0
0x1b4: V156 = ISZERO V155
0x1b6: M[V154] = V156
0x1b7: V157 = 0x20
0x1b9: V158 = ADD 0x20 V154
0x1ba: V159 = 0x40
0x1bc: V160 = M[0x40]
0x1bf: V161 = SUB V158 V160
0x1c1: RETURN V160 V161
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1c2
[0x1c2:0x1c8]
---
Predecessors: [0x67]
Successors: [0x1c9, 0x1cd]
---
0x1c2 JUMPDEST
0x1c3 CALLVALUE
0x1c4 ISZERO
0x1c5 PUSH2 0x1cd
0x1c8 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V162 = CALLVALUE
0x1c4: V163 = ISZERO V162
0x1c5: V164 = 0x1cd
0x1c8: JUMPI 0x1cd V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c9
[0x1c9:0x1cc]
---
Predecessors: [0x1c2]
Successors: []
---
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc REVERT
---
0x1c9: V165 = 0x0
0x1cc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cd
[0x1cd:0x1d4]
---
Predecessors: [0x1c2]
Successors: [0x3df]
---
0x1cd JUMPDEST
0x1ce PUSH2 0x114
0x1d1 PUSH2 0x3df
0x1d4 JUMP
---
0x1cd: JUMPDEST 
0x1ce: V166 = 0x114
0x1d1: V167 = 0x3df
0x1d4: JUMP 0x3df
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x114]
Exit stack: [V12, 0x114]

================================

Block 0x1d5
[0x1d5:0x1e6]
---
Predecessors: []
Successors: []
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 SWAP1
0x1da DUP2
0x1db MSTORE
0x1dc PUSH1 0x20
0x1de ADD
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 DUP1
0x1e3 SWAP2
0x1e4 SUB
0x1e5 SWAP1
0x1e6 RETURN
---
0x1d5: JUMPDEST 
0x1d6: V168 = 0x40
0x1d8: V169 = M[0x40]
0x1db: M[V169] = S0
0x1dc: V170 = 0x20
0x1de: V171 = ADD 0x20 V169
0x1df: V172 = 0x40
0x1e1: V173 = M[0x40]
0x1e4: V174 = SUB V171 V173
0x1e6: RETURN V173 V174
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e7
[0x1e7:0x1ed]
---
Predecessors: [0x72]
Successors: [0x1ee, 0x1f2]
---
0x1e7 JUMPDEST
0x1e8 CALLVALUE
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V175 = CALLVALUE
0x1e9: V176 = ISZERO V175
0x1ea: V177 = 0x1f2
0x1ed: JUMPI 0x1f2 V176
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1e7]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V178 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f2
[0x1f2:0x1f9]
---
Predecessors: [0x1e7]
Successors: [0x3e5]
---
0x1f2 JUMPDEST
0x1f3 PUSH2 0x114
0x1f6 PUSH2 0x3e5
0x1f9 JUMP
---
0x1f2: JUMPDEST 
0x1f3: V179 = 0x114
0x1f6: V180 = 0x3e5
0x1f9: JUMP 0x3e5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x114]
Exit stack: [V12, 0x114]

================================

Block 0x1fa
[0x1fa:0x20b]
---
Predecessors: []
Successors: []
---
0x1fa JUMPDEST
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe SWAP1
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 PUSH1 0x40
0x206 MLOAD
0x207 DUP1
0x208 SWAP2
0x209 SUB
0x20a SWAP1
0x20b RETURN
---
0x1fa: JUMPDEST 
0x1fb: V181 = 0x40
0x1fd: V182 = M[0x40]
0x200: M[V182] = S0
0x201: V183 = 0x20
0x203: V184 = ADD 0x20 V182
0x204: V185 = 0x40
0x206: V186 = M[0x40]
0x209: V187 = SUB V184 V186
0x20b: RETURN V186 V187
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x20c
[0x20c:0x212]
---
Predecessors: [0x7d]
Successors: [0x213, 0x217]
---
0x20c JUMPDEST
0x20d CALLVALUE
0x20e ISZERO
0x20f PUSH2 0x217
0x212 JUMPI
---
0x20c: JUMPDEST 
0x20d: V188 = CALLVALUE
0x20e: V189 = ISZERO V188
0x20f: V190 = 0x217
0x212: JUMPI 0x217 V189
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x213
[0x213:0x216]
---
Predecessors: [0x20c]
Successors: []
---
0x213 PUSH1 0x0
0x215 DUP1
0x216 REVERT
---
0x213: V191 = 0x0
0x216: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x217
[0x217:0x22a]
---
Predecessors: [0x20c]
Successors: [0x3eb]
---
0x217 JUMPDEST
0x218 PUSH2 0xc3
0x21b PUSH1 0x1
0x21d PUSH1 0xa0
0x21f PUSH1 0x2
0x221 EXP
0x222 SUB
0x223 PUSH1 0x4
0x225 CALLDATALOAD
0x226 AND
0x227 PUSH2 0x3eb
0x22a JUMP
---
0x217: JUMPDEST 
0x218: V192 = 0xc3
0x21b: V193 = 0x1
0x21d: V194 = 0xa0
0x21f: V195 = 0x2
0x221: V196 = EXP 0x2 0xa0
0x222: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V198 = 0x4
0x225: V199 = CALLDATALOAD 0x4
0x226: V200 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x227: V201 = 0x3eb
0x22a: JUMP 0x3eb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc3, V200]
Exit stack: [V12, 0xc3, V200]

================================

Block 0x22b
[0x22b:0x22c]
---
Predecessors: []
Successors: []
---
0x22b JUMPDEST
0x22c STOP
---
0x22b: JUMPDEST 
0x22c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x22d
[0x22d:0x233]
---
Predecessors: [0x88]
Successors: [0x234, 0x238]
---
0x22d JUMPDEST
0x22e CALLVALUE
0x22f ISZERO
0x230 PUSH2 0x238
0x233 JUMPI
---
0x22d: JUMPDEST 
0x22e: V202 = CALLVALUE
0x22f: V203 = ISZERO V202
0x230: V204 = 0x238
0x233: JUMPI 0x238 V203
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x234
[0x234:0x237]
---
Predecessors: [0x22d]
Successors: []
---
0x234 PUSH1 0x0
0x236 DUP1
0x237 REVERT
---
0x234: V205 = 0x0
0x237: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x238
[0x238:0x27d]
---
Predecessors: [0x22d]
Successors: [0x41a]
---
0x238 JUMPDEST
0x239 PUSH2 0xc3
0x23c PUSH1 0x4
0x23e PUSH1 0x24
0x240 DUP2
0x241 CALLDATALOAD
0x242 DUP2
0x243 DUP2
0x244 ADD
0x245 SWAP1
0x246 DUP4
0x247 ADD
0x248 CALLDATALOAD
0x249 DUP1
0x24a PUSH1 0x20
0x24c PUSH1 0x1f
0x24e DUP3
0x24f ADD
0x250 DUP2
0x251 SWAP1
0x252 DIV
0x253 DUP2
0x254 MUL
0x255 ADD
0x256 PUSH1 0x40
0x258 MLOAD
0x259 SWAP1
0x25a DUP2
0x25b ADD
0x25c PUSH1 0x40
0x25e MSTORE
0x25f DUP2
0x260 DUP2
0x261 MSTORE
0x262 SWAP3
0x263 SWAP2
0x264 SWAP1
0x265 PUSH1 0x20
0x267 DUP5
0x268 ADD
0x269 DUP4
0x26a DUP4
0x26b DUP1
0x26c DUP3
0x26d DUP5
0x26e CALLDATACOPY
0x26f POP
0x270 SWAP5
0x271 SWAP7
0x272 POP
0x273 PUSH2 0x41a
0x276 SWAP6
0x277 POP
0x278 POP
0x279 POP
0x27a POP
0x27b POP
0x27c POP
0x27d JUMP
---
0x238: JUMPDEST 
0x239: V206 = 0xc3
0x23c: V207 = 0x4
0x23e: V208 = 0x24
0x241: V209 = CALLDATALOAD 0x4
0x244: V210 = ADD V209 0x24
0x247: V211 = ADD 0x4 V209
0x248: V212 = CALLDATALOAD V211
0x24a: V213 = 0x20
0x24c: V214 = 0x1f
0x24f: V215 = ADD V212 0x1f
0x252: V216 = DIV V215 0x20
0x254: V217 = MUL 0x20 V216
0x255: V218 = ADD V217 0x20
0x256: V219 = 0x40
0x258: V220 = M[0x40]
0x25b: V221 = ADD V220 V218
0x25c: V222 = 0x40
0x25e: M[0x40] = V221
0x261: M[V220] = V212
0x265: V223 = 0x20
0x268: V224 = ADD V220 0x20
0x26e: CALLDATACOPY V224 V210 V212
0x273: V225 = 0x41a
0x27d: JUMP 0x41a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc3, V220]
Exit stack: [V12, 0xc3, V220]

================================

Block 0x27e
[0x27e:0x27f]
---
Predecessors: []
Successors: []
---
0x27e JUMPDEST
0x27f STOP
---
0x27e: JUMPDEST 
0x27f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x280
[0x280:0x286]
---
Predecessors: [0x93]
Successors: [0x287, 0x28b]
---
0x280 JUMPDEST
0x281 CALLVALUE
0x282 ISZERO
0x283 PUSH2 0x28b
0x286 JUMPI
---
0x280: JUMPDEST 
0x281: V226 = CALLVALUE
0x282: V227 = ISZERO V226
0x283: V228 = 0x28b
0x286: JUMPI 0x28b V227
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x287
[0x287:0x28a]
---
Predecessors: [0x280]
Successors: []
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
---
0x287: V229 = 0x0
0x28a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28b
[0x28b:0x292]
---
Predecessors: [0x280]
Successors: [0x496]
---
0x28b JUMPDEST
0x28c PUSH2 0xd9
0x28f PUSH2 0x496
0x292 JUMP
---
0x28b: JUMPDEST 
0x28c: V230 = 0xd9
0x28f: V231 = 0x496
0x292: JUMP 0x496
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd9]
Exit stack: [V12, 0xd9]

================================

Block 0x293
[0x293:0x2ae]
---
Predecessors: []
Successors: []
---
0x293 JUMPDEST
0x294 PUSH1 0x40
0x296 MLOAD
0x297 PUSH1 0x1
0x299 PUSH1 0xa0
0x29b PUSH1 0x2
0x29d EXP
0x29e SUB
0x29f SWAP1
0x2a0 SWAP2
0x2a1 AND
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa DUP1
0x2ab SWAP2
0x2ac SUB
0x2ad SWAP1
0x2ae RETURN
---
0x293: JUMPDEST 
0x294: V232 = 0x40
0x296: V233 = M[0x40]
0x297: V234 = 0x1
0x299: V235 = 0xa0
0x29b: V236 = 0x2
0x29d: V237 = EXP 0x2 0xa0
0x29e: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a1: V239 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: M[V233] = V239
0x2a4: V240 = 0x20
0x2a6: V241 = ADD 0x20 V233
0x2a7: V242 = 0x40
0x2a9: V243 = M[0x40]
0x2ac: V244 = SUB V241 V243
0x2ae: RETURN V243 V244
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2af
[0x2af:0x2bd]
---
Predecessors: [0xbb, 0x139]
Successors: [0x2be, 0x2cb]
---
0x2af JUMPDEST
0x2b0 PUSH7 0x38d7ea4c68000
0x2b8 CALLVALUE
0x2b9 GT
0x2ba PUSH2 0x2cb
0x2bd JUMPI
---
0x2af: JUMPDEST 
0x2b0: V245 = 0x38d7ea4c68000
0x2b8: V246 = CALLVALUE
0x2b9: V247 = GT V246 0x38d7ea4c68000
0x2ba: V248 = 0x2cb
0x2bd: JUMPI 0x2cb V247
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x2be
[0x2be:0x2c5]
---
Predecessors: [0x2af]
Successors: [0x4a5]
---
0x2be PUSH2 0x2c6
0x2c1 CALLER
0x2c2 PUSH2 0x4a5
0x2c5 JUMP
---
0x2be: V249 = 0x2c6
0x2c1: V250 = CALLER
0x2c2: V251 = 0x4a5
0x2c5: JUMP 0x4a5
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: [0x2c6, V250]
Exit stack: [V12, 0xc3, 0x2c6, V250]

================================

Block 0x2c6
[0x2c6:0x2ca]
---
Predecessors: [0x65d]
Successors: [0x30a]
---
0x2c6 JUMPDEST
0x2c7 PUSH2 0x30a
0x2ca JUMP
---
0x2c6: JUMPDEST 
0x2c7: V252 = 0x30a
0x2ca: JUMP 0x30a
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x2cb
[0x2cb:0x2d6]
---
Predecessors: [0x2af]
Successors: [0x2d7, 0x2db]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x4
0x2ce SLOAD
0x2cf PUSH1 0xff
0x2d1 AND
0x2d2 ISZERO
0x2d3 PUSH2 0x2db
0x2d6 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V253 = 0x4
0x2ce: V254 = S[0x4]
0x2cf: V255 = 0xff
0x2d1: V256 = AND 0xff V254
0x2d2: V257 = ISZERO V256
0x2d3: V258 = 0x2db
0x2d6: JUMPI 0x2db V257
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x2d7
[0x2d7:0x2da]
---
Predecessors: [0x2cb]
Successors: []
---
0x2d7 PUSH1 0x0
0x2d9 DUP1
0x2da REVERT
---
0x2d7: V259 = 0x0
0x2da: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x2db
[0x2db:0x2e6]
---
Predecessors: [0x2cb]
Successors: [0x2e7, 0x2eb]
---
0x2db JUMPDEST
0x2dc PUSH1 0x1
0x2de SLOAD
0x2df PUSH1 0xff
0x2e1 AND
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2db: JUMPDEST 
0x2dc: V260 = 0x1
0x2de: V261 = S[0x1]
0x2df: V262 = 0xff
0x2e1: V263 = AND 0xff V261
0x2e2: V264 = ISZERO V263
0x2e3: V265 = 0x2eb
0x2e6: JUMPI 0x2eb V264
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2db]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V266 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x2eb
[0x2eb:0x309]
---
Predecessors: [0x2db]
Successors: [0x30a]
---
0x2eb JUMPDEST
0x2ec PUSH1 0x1
0x2ee PUSH1 0xa0
0x2f0 PUSH1 0x2
0x2f2 EXP
0x2f3 SUB
0x2f4 CALLER
0x2f5 AND
0x2f6 PUSH1 0x0
0x2f8 SWAP1
0x2f9 DUP2
0x2fa MSTORE
0x2fb PUSH1 0x20
0x2fd DUP2
0x2fe SWAP1
0x2ff MSTORE
0x300 PUSH1 0x40
0x302 SWAP1
0x303 SHA3
0x304 DUP1
0x305 SLOAD
0x306 CALLVALUE
0x307 ADD
0x308 SWAP1
0x309 SSTORE
---
0x2eb: JUMPDEST 
0x2ec: V267 = 0x1
0x2ee: V268 = 0xa0
0x2f0: V269 = 0x2
0x2f2: V270 = EXP 0x2 0xa0
0x2f3: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f4: V272 = CALLER
0x2f5: V273 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V274 = 0x0
0x2fa: M[0x0] = V273
0x2fb: V275 = 0x20
0x2ff: M[0x20] = 0x0
0x300: V276 = 0x40
0x303: V277 = SHA3 0x0 0x40
0x305: V278 = S[V277]
0x306: V279 = CALLVALUE
0x307: V280 = ADD V279 V278
0x309: S[V277] = V280
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x30a
[0x30a:0x30a]
---
Predecessors: [0x2c6, 0x2eb, 0x370]
Successors: [0x30b]
---
0x30a JUMPDEST
---
0x30a: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x30b
[0x30b:0x30c]
---
Predecessors: [0x30a]
Successors: [0xc3]
---
0x30b JUMPDEST
0x30c JUMP
---
0x30b: JUMPDEST 
0x30c: JUMP S0
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x30d
[0x30d:0x320]
---
Predecessors: [0xd1]
Successors: [0xd9]
---
0x30d JUMPDEST
0x30e PUSH1 0x4
0x310 SLOAD
0x311 PUSH2 0x100
0x314 SWAP1
0x315 DIV
0x316 PUSH1 0x1
0x318 PUSH1 0xa0
0x31a PUSH1 0x2
0x31c EXP
0x31d SUB
0x31e AND
0x31f DUP2
0x320 JUMP
---
0x30d: JUMPDEST 
0x30e: V281 = 0x4
0x310: V282 = S[0x4]
0x311: V283 = 0x100
0x315: V284 = DIV V282 0x100
0x316: V285 = 0x1
0x318: V286 = 0xa0
0x31a: V287 = 0x2
0x31c: V288 = EXP 0x2 0xa0
0x31d: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x320: JUMP 0xd9
---
Entry stack: [V12, 0xd9]
Stack pops: 1
Stack additions: [S0, V290]
Exit stack: [V12, 0xd9, V290]

================================

Block 0x321
[0x321:0x332]
---
Predecessors: [0x100]
Successors: [0x114]
---
0x321 JUMPDEST
0x322 PUSH1 0x0
0x324 PUSH1 0x20
0x326 DUP2
0x327 SWAP1
0x328 MSTORE
0x329 SWAP1
0x32a DUP2
0x32b MSTORE
0x32c PUSH1 0x40
0x32e SWAP1
0x32f SHA3
0x330 SLOAD
0x331 DUP2
0x332 JUMP
---
0x321: JUMPDEST 
0x322: V291 = 0x0
0x324: V292 = 0x20
0x328: M[0x20] = 0x0
0x32b: M[0x0] = V96
0x32c: V293 = 0x40
0x32f: V294 = SHA3 0x0 0x40
0x330: V295 = S[V294]
0x332: JUMP 0x114
---
Entry stack: [V12, 0x114, V96]
Stack pops: 2
Stack additions: [S1, V295]
Exit stack: [V12, 0x114, V295]

================================

Block 0x333
[0x333:0x33f]
---
Predecessors: [0x131]
Successors: [0x340, 0x344]
---
0x333 JUMPDEST
0x334 PUSH1 0x1
0x336 SLOAD
0x337 PUSH1 0xff
0x339 AND
0x33a ISZERO
0x33b ISZERO
0x33c PUSH2 0x344
0x33f JUMPI
---
0x333: JUMPDEST 
0x334: V296 = 0x1
0x336: V297 = S[0x1]
0x337: V298 = 0xff
0x339: V299 = AND 0xff V297
0x33a: V300 = ISZERO V299
0x33b: V301 = ISZERO V300
0x33c: V302 = 0x344
0x33f: JUMPI 0x344 V301
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x333]
Successors: []
---
0x340 PUSH1 0x0
0x342 DUP1
0x343 REVERT
---
0x340: V303 = 0x0
0x343: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x344
[0x344:0x34d]
---
Predecessors: [0x333]
Successors: [0x34e, 0x352]
---
0x344 JUMPDEST
0x345 PUSH1 0x9
0x347 SLOAD
0x348 NUMBER
0x349 LT
0x34a PUSH2 0x352
0x34d JUMPI
---
0x344: JUMPDEST 
0x345: V304 = 0x9
0x347: V305 = S[0x9]
0x348: V306 = NUMBER
0x349: V307 = LT V306 V305
0x34a: V308 = 0x352
0x34d: JUMPI 0x352 V307
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x34e
[0x34e:0x351]
---
Predecessors: [0x344]
Successors: []
---
0x34e PUSH1 0x0
0x350 DUP1
0x351 REVERT
---
0x34e: V309 = 0x0
0x351: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x352
[0x352:0x35b]
---
Predecessors: [0x344]
Successors: [0x35c, 0x360]
---
0x352 JUMPDEST
0x353 PUSH1 0xa
0x355 SLOAD
0x356 TIMESTAMP
0x357 LT
0x358 PUSH2 0x360
0x35b JUMPI
---
0x352: JUMPDEST 
0x353: V310 = 0xa
0x355: V311 = S[0xa]
0x356: V312 = TIMESTAMP
0x357: V313 = LT V312 V311
0x358: V314 = 0x360
0x35b: JUMPI 0x360 V313
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x35c
[0x35c:0x35f]
---
Predecessors: [0x352]
Successors: []
---
0x35c PUSH1 0x0
0x35e DUP1
0x35f REVERT
---
0x35c: V315 = 0x0
0x35f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x360
[0x360:0x36b]
---
Predecessors: [0x352]
Successors: [0x36c, 0x370]
---
0x360 JUMPDEST
0x361 PUSH1 0x4
0x363 SLOAD
0x364 PUSH1 0xff
0x366 AND
0x367 ISZERO
0x368 PUSH2 0x370
0x36b JUMPI
---
0x360: JUMPDEST 
0x361: V316 = 0x4
0x363: V317 = S[0x4]
0x364: V318 = 0xff
0x366: V319 = AND 0xff V317
0x367: V320 = ISZERO V319
0x368: V321 = 0x370
0x36b: JUMPI 0x370 V320
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x36c
[0x36c:0x36f]
---
Predecessors: [0x360]
Successors: []
---
0x36c PUSH1 0x0
0x36e DUP1
0x36f REVERT
---
0x36c: V322 = 0x0
0x36f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x370
[0x370:0x3b6]
---
Predecessors: [0x360]
Successors: [0x30a, 0x3b7]
---
0x370 JUMPDEST
0x371 PUSH1 0x1
0x373 DUP1
0x374 SLOAD
0x375 PUSH1 0xff
0x377 NOT
0x378 AND
0x379 DUP2
0x37a OR
0x37b SWAP1
0x37c SSTORE
0x37d TIMESTAMP
0x37e PUSH1 0x2
0x380 SSTORE
0x381 PUSH1 0x1
0x383 PUSH1 0xa0
0x385 PUSH1 0x2
0x387 EXP
0x388 SUB
0x389 ADDRESS
0x38a DUP2
0x38b AND
0x38c BALANCE
0x38d PUSH1 0x3
0x38f DUP2
0x390 SWAP1
0x391 SSTORE
0x392 PUSH1 0x6
0x394 SLOAD
0x395 SWAP1
0x396 SWAP2
0x397 AND
0x398 SWAP1
0x399 PUSH1 0x40
0x39b MLOAD
0x39c PUSH1 0x0
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 DUP1
0x3a2 DUP4
0x3a3 SUB
0x3a4 DUP2
0x3a5 DUP6
0x3a6 DUP8
0x3a7 PUSH2 0x8796
0x3aa GAS
0x3ab SUB
0x3ac CALL
0x3ad SWAP3
0x3ae POP
0x3af POP
0x3b0 POP
0x3b1 ISZERO
0x3b2 ISZERO
0x3b3 PUSH2 0x30a
0x3b6 JUMPI
---
0x370: JUMPDEST 
0x371: V323 = 0x1
0x374: V324 = S[0x1]
0x375: V325 = 0xff
0x377: V326 = NOT 0xff
0x378: V327 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V324
0x37a: V328 = OR 0x1 V327
0x37c: S[0x1] = V328
0x37d: V329 = TIMESTAMP
0x37e: V330 = 0x2
0x380: S[0x2] = V329
0x381: V331 = 0x1
0x383: V332 = 0xa0
0x385: V333 = 0x2
0x387: V334 = EXP 0x2 0xa0
0x388: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x389: V336 = ADDRESS
0x38b: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x38c: V338 = BALANCE V337
0x38d: V339 = 0x3
0x391: S[0x3] = V338
0x392: V340 = 0x6
0x394: V341 = S[0x6]
0x397: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x399: V343 = 0x40
0x39b: V344 = M[0x40]
0x39c: V345 = 0x0
0x39e: V346 = 0x40
0x3a0: V347 = M[0x40]
0x3a3: V348 = SUB V344 V347
0x3a7: V349 = 0x8796
0x3aa: V350 = GAS
0x3ab: V351 = SUB V350 0x8796
0x3ac: V352 = CALL V351 V342 V338 V347 V348 V347 0x0
0x3b1: V353 = ISZERO V352
0x3b2: V354 = ISZERO V353
0x3b3: V355 = 0x30a
0x3b6: JUMPI 0x30a V354
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x3b7
[0x3b7:0x3ba]
---
Predecessors: [0x370]
Successors: []
---
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba REVERT
---
0x3b7: V356 = 0x0
0x3ba: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3]

================================

Block 0x3bb
[0x3bb:0x3bb]
---
Predecessors: []
Successors: [0x3bc]
---
0x3bb JUMPDEST
---
0x3bb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3bc
[0x3bc:0x3bd]
---
Predecessors: [0x3bb]
Successors: []
Has unresolved jump.
---
0x3bc JUMPDEST
0x3bd JUMP
---
0x3bc: JUMPDEST 
0x3bd: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3be
[0x3be:0x3c6]
---
Predecessors: [0x150]
Successors: [0x158]
---
0x3be JUMPDEST
0x3bf PUSH1 0x1
0x3c1 SLOAD
0x3c2 PUSH1 0xff
0x3c4 AND
0x3c5 DUP2
0x3c6 JUMP
---
0x3be: JUMPDEST 
0x3bf: V357 = 0x1
0x3c1: V358 = S[0x1]
0x3c2: V359 = 0xff
0x3c4: V360 = AND 0xff V358
0x3c6: JUMP 0x158
---
Entry stack: [V12, 0x158]
Stack pops: 1
Stack additions: [S0, V360]
Exit stack: [V12, 0x158, V360]

================================

Block 0x3c7
[0x3c7:0x3d5]
---
Predecessors: [0x177]
Successors: [0xd9]
---
0x3c7 JUMPDEST
0x3c8 PUSH1 0x6
0x3ca SLOAD
0x3cb PUSH1 0x1
0x3cd PUSH1 0xa0
0x3cf PUSH1 0x2
0x3d1 EXP
0x3d2 SUB
0x3d3 AND
0x3d4 DUP2
0x3d5 JUMP
---
0x3c7: JUMPDEST 
0x3c8: V361 = 0x6
0x3ca: V362 = S[0x6]
0x3cb: V363 = 0x1
0x3cd: V364 = 0xa0
0x3cf: V365 = 0x2
0x3d1: V366 = EXP 0x2 0xa0
0x3d2: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d3: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x3d5: JUMP 0xd9
---
Entry stack: [V12, 0xd9]
Stack pops: 1
Stack additions: [S0, V368]
Exit stack: [V12, 0xd9, V368]

================================

Block 0x3d6
[0x3d6:0x3de]
---
Predecessors: [0x1a6]
Successors: [0x158]
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0x4
0x3d9 SLOAD
0x3da PUSH1 0xff
0x3dc AND
0x3dd DUP2
0x3de JUMP
---
0x3d6: JUMPDEST 
0x3d7: V369 = 0x4
0x3d9: V370 = S[0x4]
0x3da: V371 = 0xff
0x3dc: V372 = AND 0xff V370
0x3de: JUMP 0x158
---
Entry stack: [V12, 0x158]
Stack pops: 1
Stack additions: [S0, V372]
Exit stack: [V12, 0x158, V372]

================================

Block 0x3df
[0x3df:0x3e4]
---
Predecessors: [0x1cd]
Successors: [0x114]
---
0x3df JUMPDEST
0x3e0 PUSH1 0x2
0x3e2 SLOAD
0x3e3 DUP2
0x3e4 JUMP
---
0x3df: JUMPDEST 
0x3e0: V373 = 0x2
0x3e2: V374 = S[0x2]
0x3e4: JUMP 0x114
---
Entry stack: [V12, 0x114]
Stack pops: 1
Stack additions: [S0, V374]
Exit stack: [V12, 0x114, V374]

================================

Block 0x3e5
[0x3e5:0x3ea]
---
Predecessors: [0x1f2]
Successors: [0x114]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x3
0x3e8 SLOAD
0x3e9 DUP2
0x3ea JUMP
---
0x3e5: JUMPDEST 
0x3e6: V375 = 0x3
0x3e8: V376 = S[0x3]
0x3ea: JUMP 0x114
---
Entry stack: [V12, 0x114]
Stack pops: 1
Stack additions: [S0, V376]
Exit stack: [V12, 0x114, V376]

================================

Block 0x3eb
[0x3eb:0x3f7]
---
Predecessors: [0x217]
Successors: [0x3f8, 0x402]
---
0x3eb JUMPDEST
0x3ec PUSH1 0x1
0x3ee SLOAD
0x3ef PUSH1 0xff
0x3f1 AND
0x3f2 DUP1
0x3f3 ISZERO
0x3f4 PUSH2 0x402
0x3f7 JUMPI
---
0x3eb: JUMPDEST 
0x3ec: V377 = 0x1
0x3ee: V378 = S[0x1]
0x3ef: V379 = 0xff
0x3f1: V380 = AND 0xff V378
0x3f3: V381 = ISZERO V380
0x3f4: V382 = 0x402
0x3f7: JUMPI 0x402 V381
---
Entry stack: [V12, 0xc3, V200]
Stack pops: 0
Stack additions: [V380]
Exit stack: [V12, 0xc3, V200, V380]

================================

Block 0x3f8
[0x3f8:0x401]
---
Predecessors: [0x3eb]
Successors: [0x402]
---
0x3f8 POP
0x3f9 PUSH1 0x2
0x3fb SLOAD
0x3fc PUSH2 0xe10
0x3ff ADD
0x400 TIMESTAMP
0x401 GT
---
0x3f9: V383 = 0x2
0x3fb: V384 = S[0x2]
0x3fc: V385 = 0xe10
0x3ff: V386 = ADD 0xe10 V384
0x400: V387 = TIMESTAMP
0x401: V388 = GT V387 V386
---
Entry stack: [V12, 0xc3, V200, V380]
Stack pops: 1
Stack additions: [V388]
Exit stack: [V12, 0xc3, V200, V388]

================================

Block 0x402
[0x402:0x408]
---
Predecessors: [0x3eb, 0x3f8]
Successors: [0x409, 0x40d]
---
0x402 JUMPDEST
0x403 ISZERO
0x404 ISZERO
0x405 PUSH2 0x40d
0x408 JUMPI
---
0x402: JUMPDEST 
0x403: V389 = ISZERO S0
0x404: V390 = ISZERO V389
0x405: V391 = 0x40d
0x408: JUMPI 0x40d V390
---
Entry stack: [V12, 0xc3, V200, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc3, V200]

================================

Block 0x409
[0x409:0x40c]
---
Predecessors: [0x402]
Successors: []
---
0x409 PUSH1 0x0
0x40b DUP1
0x40c REVERT
---
0x409: V392 = 0x0
0x40c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc3, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3, V200]

================================

Block 0x40d
[0x40d:0x415]
---
Predecessors: [0x402]
Successors: [0x4a5]
---
0x40d JUMPDEST
0x40e PUSH2 0x416
0x411 DUP2
0x412 PUSH2 0x4a5
0x415 JUMP
---
0x40d: JUMPDEST 
0x40e: V393 = 0x416
0x412: V394 = 0x4a5
0x415: JUMP 0x4a5
---
Entry stack: [V12, 0xc3, V200]
Stack pops: 1
Stack additions: [S0, 0x416, S0]
Exit stack: [V12, 0xc3, V200, 0x416, V200]

================================

Block 0x416
[0x416:0x416]
---
Predecessors: [0x65d]
Successors: [0x417]
---
0x416 JUMPDEST
---
0x416: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x417
[0x417:0x419]
---
Predecessors: [0x416]
Successors: [0xc3]
---
0x417 JUMPDEST
0x418 POP
0x419 JUMP
---
0x417: JUMPDEST 
0x419: JUMP S1
---
Entry stack: [V12, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x41a
[0x41a:0x42d]
---
Predecessors: [0x238]
Successors: [0x42e]
---
0x41a JUMPDEST
0x41b PUSH1 0x8
0x41d SLOAD
0x41e DUP2
0x41f PUSH1 0x40
0x421 MLOAD
0x422 DUP1
0x423 DUP3
0x424 DUP1
0x425 MLOAD
0x426 SWAP1
0x427 PUSH1 0x20
0x429 ADD
0x42a SWAP1
0x42b DUP1
0x42c DUP4
0x42d DUP4
---
0x41a: JUMPDEST 
0x41b: V395 = 0x8
0x41d: V396 = S[0x8]
0x41f: V397 = 0x40
0x421: V398 = M[0x40]
0x425: V399 = M[V220]
0x427: V400 = 0x20
0x429: V401 = ADD 0x20 V220
---
Entry stack: [V12, 0xc3, V220]
Stack pops: 1
Stack additions: [S0, V396, S0, V398, V398, V401, V399, V399, V398, V401]
Exit stack: [V12, 0xc3, V220, V396, V220, V398, V398, V401, V399, V399, V398, V401]

================================

Block 0x42e
[0x42e:0x436]
---
Predecessors: [0x41a, 0x43b]
Successors: [0x437, 0x44e]
---
0x42e JUMPDEST
0x42f PUSH1 0x20
0x431 DUP4
0x432 LT
0x433 PUSH2 0x44e
0x436 JUMPI
---
0x42e: JUMPDEST 
0x42f: V402 = 0x20
0x432: V403 = LT S2 0x20
0x433: V404 = 0x44e
0x436: JUMPI 0x44e V403
---
Entry stack: [V12, 0xc3, V220, V396, V220, V398, V398, V401, V399, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xc3, V220, V396, V220, V398, V398, V401, V399, S2, S1, S0]

================================

Block 0x437
[0x437:0x43a]
---
Predecessors: [0x42e]
Successors: [0x43b]
---
0x437 DUP1
0x438 MLOAD
0x439 DUP3
0x43a MSTORE
---
0x438: V405 = M[S0]
0x43a: M[S1] = V405
---
Entry stack: [V12, 0xc3, V220, V396, V220, V398, V398, V401, V399, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xc3, V220, V396, V220, V398, V398, V401, V399, S2, S1, S0]

================================

Block 0x43b
[0x43b:0x44d]
---
Predecessors: [0x437]
Successors: [0x42e]
---
0x43b JUMPDEST
0x43c PUSH1 0x1f
0x43e NOT
0x43f SWAP1
0x440 SWAP3
0x441 ADD
0x442 SWAP2
0x443 PUSH1 0x20
0x445 SWAP2
0x446 DUP3
0x447 ADD
0x448 SWAP2
0x449 ADD
0x44a PUSH2 0x42e
0x44d JUMP
---
0x43b: JUMPDEST 
0x43c: V406 = 0x1f
0x43e: V407 = NOT 0x1f
0x441: V408 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x443: V409 = 0x20
0x447: V410 = ADD 0x20 S1
0x449: V411 = ADD 0x20 S0
0x44a: V412 = 0x42e
0x44d: JUMP 0x42e
---
Entry stack: [V12, 0xc3, V220, V396, V220, V398, V398, V401, V399, S2, S1, S0]
Stack pops: 3
Stack additions: [V408, V410, V411]
Exit stack: [V12, 0xc3, V220, V396, V220, V398, V398, V401, V399, V408, V410, V411]

================================

Block 0x44e
[0x44e:0x480]
---
Predecessors: [0x42e]
Successors: [0x481, 0x485]
---
0x44e JUMPDEST
0x44f PUSH1 0x1
0x451 DUP4
0x452 PUSH1 0x20
0x454 SUB
0x455 PUSH2 0x100
0x458 EXP
0x459 SUB
0x45a DUP1
0x45b NOT
0x45c DUP3
0x45d MLOAD
0x45e AND
0x45f DUP2
0x460 DUP5
0x461 MLOAD
0x462 AND
0x463 OR
0x464 SWAP1
0x465 SWAP3
0x466 MSTORE
0x467 POP
0x468 POP
0x469 POP
0x46a SWAP2
0x46b SWAP1
0x46c SWAP2
0x46d ADD
0x46e SWAP3
0x46f POP
0x470 PUSH1 0x40
0x472 SWAP2
0x473 POP
0x474 POP
0x475 MLOAD
0x476 SWAP1
0x477 DUP2
0x478 SWAP1
0x479 SUB
0x47a SWAP1
0x47b SHA3
0x47c EQ
0x47d PUSH2 0x485
0x480 JUMPI
---
0x44e: JUMPDEST 
0x44f: V413 = 0x1
0x452: V414 = 0x20
0x454: V415 = SUB 0x20 S2
0x455: V416 = 0x100
0x458: V417 = EXP 0x100 V415
0x459: V418 = SUB V417 0x1
0x45b: V419 = NOT V418
0x45d: V420 = M[S0]
0x45e: V421 = AND V420 V419
0x461: V422 = M[S1]
0x462: V423 = AND V422 V418
0x463: V424 = OR V423 V421
0x466: M[S1] = V424
0x46d: V425 = ADD V399 V398
0x470: V426 = 0x40
0x475: V427 = M[0x40]
0x479: V428 = SUB V425 V427
0x47b: V429 = SHA3 V427 V428
0x47c: V430 = EQ V429 V396
0x47d: V431 = 0x485
0x480: JUMPI 0x485 V430
---
Entry stack: [V12, 0xc3, V220, V396, V220, V398, V398, V401, V399, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V12, 0xc3, V220]

================================

Block 0x481
[0x481:0x484]
---
Predecessors: [0x44e]
Successors: []
---
0x481 PUSH1 0x0
0x483 DUP1
0x484 REVERT
---
0x481: V432 = 0x0
0x484: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc3, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3, V220]

================================

Block 0x485
[0x485:0x492]
---
Predecessors: [0x44e]
Successors: [0x493]
---
0x485 JUMPDEST
0x486 PUSH1 0x4
0x488 DUP1
0x489 SLOAD
0x48a PUSH1 0xff
0x48c NOT
0x48d AND
0x48e PUSH1 0x1
0x490 OR
0x491 SWAP1
0x492 SSTORE
---
0x485: JUMPDEST 
0x486: V433 = 0x4
0x489: V434 = S[0x4]
0x48a: V435 = 0xff
0x48c: V436 = NOT 0xff
0x48d: V437 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V434
0x48e: V438 = 0x1
0x490: V439 = OR 0x1 V437
0x492: S[0x4] = V439
---
Entry stack: [V12, 0xc3, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc3, V220]

================================

Block 0x493
[0x493:0x495]
---
Predecessors: [0x485]
Successors: [0xc3]
---
0x493 JUMPDEST
0x494 POP
0x495 JUMP
---
0x493: JUMPDEST 
0x495: JUMP 0xc3
---
Entry stack: [V12, 0xc3, V220]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x496
[0x496:0x4a4]
---
Predecessors: [0x28b]
Successors: [0xd9]
---
0x496 JUMPDEST
0x497 PUSH1 0x7
0x499 SLOAD
0x49a PUSH1 0x1
0x49c PUSH1 0xa0
0x49e PUSH1 0x2
0x4a0 EXP
0x4a1 SUB
0x4a2 AND
0x4a3 DUP2
0x4a4 JUMP
---
0x496: JUMPDEST 
0x497: V440 = 0x7
0x499: V441 = S[0x7]
0x49a: V442 = 0x1
0x49c: V443 = 0xa0
0x49e: V444 = 0x2
0x4a0: V445 = EXP 0x2 0xa0
0x4a1: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a2: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x4a4: JUMP 0xd9
---
Entry stack: [V12, 0xd9]
Stack pops: 1
Stack additions: [S0, V447]
Exit stack: [V12, 0xd9, V447]

================================

Block 0x4a5
[0x4a5:0x4b8]
---
Predecessors: [0x2be, 0x40d]
Successors: [0x4b9, 0x505]
---
0x4a5 JUMPDEST
0x4a6 PUSH1 0x1
0x4a8 SLOAD
0x4a9 PUSH1 0x0
0x4ab SWAP1
0x4ac DUP2
0x4ad SWAP1
0x4ae DUP2
0x4af SWAP1
0x4b0 PUSH1 0xff
0x4b2 AND
0x4b3 ISZERO
0x4b4 ISZERO
0x4b5 PUSH2 0x505
0x4b8 JUMPI
---
0x4a5: JUMPDEST 
0x4a6: V448 = 0x1
0x4a8: V449 = S[0x1]
0x4a9: V450 = 0x0
0x4b0: V451 = 0xff
0x4b2: V452 = AND 0xff V449
0x4b3: V453 = ISZERO V452
0x4b4: V454 = ISZERO V453
0x4b5: V455 = 0x505
0x4b8: JUMPI 0x505 V454
---
Entry stack: [V12, S3, S2, {0x2c6, 0x416}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, S3, S2, {0x2c6, 0x416}, S0, 0x0, 0x0, 0x0]

================================

Block 0x4b9
[0x4b9:0x4fb]
---
Predecessors: [0x4a5]
Successors: [0x4fc, 0x500]
---
0x4b9 PUSH1 0x1
0x4bb PUSH1 0xa0
0x4bd PUSH1 0x2
0x4bf EXP
0x4c0 SUB
0x4c1 DUP5
0x4c2 AND
0x4c3 PUSH1 0x0
0x4c5 DUP2
0x4c6 DUP2
0x4c7 MSTORE
0x4c8 PUSH1 0x20
0x4ca DUP2
0x4cb SWAP1
0x4cc MSTORE
0x4cd PUSH1 0x40
0x4cf DUP1
0x4d0 DUP3
0x4d1 SHA3
0x4d2 DUP1
0x4d3 SLOAD
0x4d4 SWAP3
0x4d5 SWAP1
0x4d6 SSTORE
0x4d7 SWAP1
0x4d8 SWAP5
0x4d9 POP
0x4da DUP5
0x4db ISZERO
0x4dc PUSH2 0x8fc
0x4df MUL
0x4e0 SWAP1
0x4e1 DUP6
0x4e2 SWAP1
0x4e3 MLOAD
0x4e4 PUSH1 0x0
0x4e6 PUSH1 0x40
0x4e8 MLOAD
0x4e9 DUP1
0x4ea DUP4
0x4eb SUB
0x4ec DUP2
0x4ed DUP6
0x4ee DUP9
0x4ef DUP9
0x4f0 CALL
0x4f1 SWAP4
0x4f2 POP
0x4f3 POP
0x4f4 POP
0x4f5 POP
0x4f6 ISZERO
0x4f7 ISZERO
0x4f8 PUSH2 0x500
0x4fb JUMPI
---
0x4b9: V456 = 0x1
0x4bb: V457 = 0xa0
0x4bd: V458 = 0x2
0x4bf: V459 = EXP 0x2 0xa0
0x4c0: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c2: V461 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x4c3: V462 = 0x0
0x4c7: M[0x0] = V461
0x4c8: V463 = 0x20
0x4cc: M[0x20] = 0x0
0x4cd: V464 = 0x40
0x4d1: V465 = SHA3 0x0 0x40
0x4d3: V466 = S[V465]
0x4d6: S[V465] = 0x0
0x4db: V467 = ISZERO V466
0x4dc: V468 = 0x8fc
0x4df: V469 = MUL 0x8fc V467
0x4e3: V470 = M[0x40]
0x4e4: V471 = 0x0
0x4e6: V472 = 0x40
0x4e8: V473 = M[0x40]
0x4eb: V474 = SUB V470 V473
0x4f0: V475 = CALL V469 V461 V466 V473 V474 V473 0x0
0x4f6: V476 = ISZERO V475
0x4f7: V477 = ISZERO V476
0x4f8: V478 = 0x500
0x4fb: JUMPI 0x500 V477
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, V466, S1, S0]
Exit stack: [V12, S6, S5, {0x2c6, 0x416}, S3, V466, 0x0, 0x0]

================================

Block 0x4fc
[0x4fc:0x4ff]
---
Predecessors: [0x4b9]
Successors: []
---
0x4fc PUSH1 0x0
0x4fe DUP1
0x4ff REVERT
---
0x4fc: V479 = 0x0
0x4ff: REVERT 0x0 0x0
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, V466, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, {0x2c6, 0x416}, S3, V466, 0x0, 0x0]

================================

Block 0x500
[0x500:0x504]
---
Predecessors: [0x4b9]
Successors: [0x65b]
---
0x500 JUMPDEST
0x501 PUSH2 0x65b
0x504 JUMP
---
0x500: JUMPDEST 
0x501: V480 = 0x65b
0x504: JUMP 0x65b
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, V466, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, {0x2c6, 0x416}, S3, V466, 0x0, 0x0]

================================

Block 0x505
[0x505:0x559]
---
Predecessors: [0x4a5]
Successors: [0x55a, 0x55e]
---
0x505 JUMPDEST
0x506 PUSH1 0x7
0x508 SLOAD
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 AND
0x512 PUSH4 0x70a08231
0x517 ADDRESS
0x518 PUSH1 0x0
0x51a PUSH1 0x40
0x51c MLOAD
0x51d PUSH1 0x20
0x51f ADD
0x520 MSTORE
0x521 PUSH1 0x40
0x523 MLOAD
0x524 PUSH1 0xe0
0x526 PUSH1 0x2
0x528 EXP
0x529 PUSH4 0xffffffff
0x52e DUP5
0x52f AND
0x530 MUL
0x531 DUP2
0x532 MSTORE
0x533 PUSH1 0x1
0x535 PUSH1 0xa0
0x537 PUSH1 0x2
0x539 EXP
0x53a SUB
0x53b SWAP1
0x53c SWAP2
0x53d AND
0x53e PUSH1 0x4
0x540 DUP3
0x541 ADD
0x542 MSTORE
0x543 PUSH1 0x24
0x545 ADD
0x546 PUSH1 0x20
0x548 PUSH1 0x40
0x54a MLOAD
0x54b DUP1
0x54c DUP4
0x54d SUB
0x54e DUP2
0x54f PUSH1 0x0
0x551 DUP8
0x552 DUP1
0x553 EXTCODESIZE
0x554 ISZERO
0x555 ISZERO
0x556 PUSH2 0x55e
0x559 JUMPI
---
0x505: JUMPDEST 
0x506: V481 = 0x7
0x508: V482 = S[0x7]
0x509: V483 = 0x1
0x50b: V484 = 0xa0
0x50d: V485 = 0x2
0x50f: V486 = EXP 0x2 0xa0
0x510: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x511: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x512: V489 = 0x70a08231
0x517: V490 = ADDRESS
0x518: V491 = 0x0
0x51a: V492 = 0x40
0x51c: V493 = M[0x40]
0x51d: V494 = 0x20
0x51f: V495 = ADD 0x20 V493
0x520: M[V495] = 0x0
0x521: V496 = 0x40
0x523: V497 = M[0x40]
0x524: V498 = 0xe0
0x526: V499 = 0x2
0x528: V500 = EXP 0x2 0xe0
0x529: V501 = 0xffffffff
0x52f: V502 = AND 0x70a08231 0xffffffff
0x530: V503 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x532: M[V497] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x533: V504 = 0x1
0x535: V505 = 0xa0
0x537: V506 = 0x2
0x539: V507 = EXP 0x2 0xa0
0x53a: V508 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53d: V509 = AND V490 0xffffffffffffffffffffffffffffffffffffffff
0x53e: V510 = 0x4
0x541: V511 = ADD V497 0x4
0x542: M[V511] = V509
0x543: V512 = 0x24
0x545: V513 = ADD 0x24 V497
0x546: V514 = 0x20
0x548: V515 = 0x40
0x54a: V516 = M[0x40]
0x54d: V517 = SUB V513 V516
0x54f: V518 = 0x0
0x553: V519 = EXTCODESIZE V488
0x554: V520 = ISZERO V519
0x555: V521 = ISZERO V520
0x556: V522 = 0x55e
0x559: JUMPI 0x55e V521
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V488, 0x70a08231, V513, 0x20, V516, V517, V516, 0x0, V488]
Exit stack: [V12, S6, S5, {0x2c6, 0x416}, S3, 0x0, 0x0, 0x0, V488, 0x70a08231, V513, 0x20, V516, V517, V516, 0x0, V488]

================================

Block 0x55a
[0x55a:0x55d]
---
Predecessors: [0x505]
Successors: []
---
0x55a PUSH1 0x0
0x55c DUP1
0x55d REVERT
---
0x55a: V523 = 0x0
0x55d: REVERT 0x0 0x0
---
Entry stack: [V12, S15, S14, {0x2c6, 0x416}, S12, 0x0, 0x0, 0x0, V488, 0x70a08231, V513, 0x20, V516, V517, V516, 0x0, V488]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, {0x2c6, 0x416}, S12, 0x0, 0x0, 0x0, V488, 0x70a08231, V513, 0x20, V516, V517, V516, 0x0, V488]

================================

Block 0x55e
[0x55e:0x56a]
---
Predecessors: [0x505]
Successors: [0x56b, 0x56f]
---
0x55e JUMPDEST
0x55f PUSH2 0x2c6
0x562 GAS
0x563 SUB
0x564 CALL
0x565 ISZERO
0x566 ISZERO
0x567 PUSH2 0x56f
0x56a JUMPI
---
0x55e: JUMPDEST 
0x55f: V524 = 0x2c6
0x562: V525 = GAS
0x563: V526 = SUB V525 0x2c6
0x564: V527 = CALL V526 V488 0x0 V516 V517 V516 0x20
0x565: V528 = ISZERO V527
0x566: V529 = ISZERO V528
0x567: V530 = 0x56f
0x56a: JUMPI 0x56f V529
---
Entry stack: [V12, S15, S14, {0x2c6, 0x416}, S12, 0x0, 0x0, 0x0, V488, 0x70a08231, V513, 0x20, V516, V517, V516, 0x0, V488]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S15, S14, {0x2c6, 0x416}, S12, 0x0, 0x0, 0x0, V488, 0x70a08231, V513]

================================

Block 0x56b
[0x56b:0x56e]
---
Predecessors: [0x55e]
Successors: []
---
0x56b PUSH1 0x0
0x56d DUP1
0x56e REVERT
---
0x56b: V531 = 0x0
0x56e: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, {0x2c6, 0x416}, S6, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, {0x2c6, 0x416}, S6, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]

================================

Block 0x56f
[0x56f:0x582]
---
Predecessors: [0x55e]
Successors: [0x583, 0x587]
---
0x56f JUMPDEST
0x570 POP
0x571 POP
0x572 POP
0x573 PUSH1 0x40
0x575 MLOAD
0x576 DUP1
0x577 MLOAD
0x578 SWAP3
0x579 POP
0x57a POP
0x57b PUSH1 0x0
0x57d DUP3
0x57e GT
0x57f PUSH2 0x587
0x582 JUMPI
---
0x56f: JUMPDEST 
0x573: V532 = 0x40
0x575: V533 = M[0x40]
0x577: V534 = M[V533]
0x57b: V535 = 0x0
0x57e: V536 = GT V534 0x0
0x57f: V537 = 0x587
0x582: JUMPI 0x587 V536
---
Entry stack: [V12, S9, S8, {0x2c6, 0x416}, S6, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]
Stack pops: 5
Stack additions: [V534, S3]
Exit stack: [V12, S9, S8, {0x2c6, 0x416}, S6, 0x0, V534, 0x0]

================================

Block 0x583
[0x583:0x586]
---
Predecessors: [0x56f]
Successors: []
---
0x583 PUSH1 0x0
0x585 DUP1
0x586 REVERT
---
0x583: V538 = 0x0
0x586: REVERT 0x0 0x0
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, 0x0, V534, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, {0x2c6, 0x416}, S3, 0x0, V534, 0x0]

================================

Block 0x587
[0x587:0x5ac]
---
Predecessors: [0x56f]
Successors: [0x5ad, 0x5ae]
---
0x587 JUMPDEST
0x588 PUSH1 0x3
0x58a SLOAD
0x58b PUSH1 0x1
0x58d PUSH1 0xa0
0x58f PUSH1 0x2
0x591 EXP
0x592 SUB
0x593 DUP6
0x594 AND
0x595 PUSH1 0x0
0x597 SWAP1
0x598 DUP2
0x599 MSTORE
0x59a PUSH1 0x20
0x59c DUP2
0x59d SWAP1
0x59e MSTORE
0x59f PUSH1 0x40
0x5a1 SWAP1
0x5a2 SHA3
0x5a3 SLOAD
0x5a4 DUP4
0x5a5 MUL
0x5a6 DUP2
0x5a7 ISZERO
0x5a8 ISZERO
0x5a9 PUSH2 0x5ae
0x5ac JUMPI
---
0x587: JUMPDEST 
0x588: V539 = 0x3
0x58a: V540 = S[0x3]
0x58b: V541 = 0x1
0x58d: V542 = 0xa0
0x58f: V543 = 0x2
0x591: V544 = EXP 0x2 0xa0
0x592: V545 = SUB 0x10000000000000000000000000000000000000000 0x1
0x594: V546 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x595: V547 = 0x0
0x599: M[0x0] = V546
0x59a: V548 = 0x20
0x59e: M[0x20] = 0x0
0x59f: V549 = 0x40
0x5a2: V550 = SHA3 0x0 0x40
0x5a3: V551 = S[V550]
0x5a5: V552 = MUL V534 V551
0x5a7: V553 = ISZERO V540
0x5a8: V554 = ISZERO V553
0x5a9: V555 = 0x5ae
0x5ac: JUMPI 0x5ae V554
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, 0x0, V534, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V540, V552]
Exit stack: [V12, S6, S5, {0x2c6, 0x416}, S3, 0x0, V534, 0x0, V540, V552]

================================

Block 0x5ad
[0x5ad:0x5ad]
---
Predecessors: [0x587]
Successors: []
---
0x5ad INVALID
---
0x5ad: INVALID 
---
Entry stack: [V12, S8, S7, {0x2c6, 0x416}, S5, 0x0, S3, 0x0, V540, V552]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x2c6, 0x416}, S5, 0x0, S3, 0x0, V540, V552]

================================

Block 0x5ae
[0x5ae:0x630]
---
Predecessors: [0x587]
Successors: [0x631, 0x635]
---
0x5ae JUMPDEST
0x5af PUSH1 0x1
0x5b1 PUSH1 0xa0
0x5b3 PUSH1 0x2
0x5b5 EXP
0x5b6 SUB
0x5b7 DUP1
0x5b8 DUP8
0x5b9 AND
0x5ba PUSH1 0x0
0x5bc SWAP1
0x5bd DUP2
0x5be MSTORE
0x5bf PUSH1 0x20
0x5c1 DUP2
0x5c2 SWAP1
0x5c3 MSTORE
0x5c4 PUSH1 0x40
0x5c6 DUP1
0x5c7 DUP3
0x5c8 SHA3
0x5c9 DUP1
0x5ca SLOAD
0x5cb PUSH1 0x3
0x5cd DUP1
0x5ce SLOAD
0x5cf SWAP2
0x5d0 SWAP1
0x5d1 SWAP2
0x5d2 SUB
0x5d3 SWAP1
0x5d4 SSTORE
0x5d5 DUP3
0x5d6 SWAP1
0x5d7 SSTORE
0x5d8 PUSH1 0x7
0x5da SLOAD
0x5db SWAP5
0x5dc SWAP1
0x5dd SWAP4
0x5de DIV
0x5df SWAP5
0x5e0 POP
0x5e1 SWAP3
0x5e2 AND
0x5e3 SWAP2
0x5e4 PUSH4 0xa9059cbb
0x5e9 SWAP2
0x5ea DUP8
0x5eb SWAP2
0x5ec DUP6
0x5ed SWAP2
0x5ee MLOAD
0x5ef PUSH1 0x20
0x5f1 ADD
0x5f2 MSTORE
0x5f3 PUSH1 0x40
0x5f5 MLOAD
0x5f6 PUSH1 0xe0
0x5f8 PUSH1 0x2
0x5fa EXP
0x5fb PUSH4 0xffffffff
0x600 DUP6
0x601 AND
0x602 MUL
0x603 DUP2
0x604 MSTORE
0x605 PUSH1 0x1
0x607 PUSH1 0xa0
0x609 PUSH1 0x2
0x60b EXP
0x60c SUB
0x60d SWAP1
0x60e SWAP3
0x60f AND
0x610 PUSH1 0x4
0x612 DUP4
0x613 ADD
0x614 MSTORE
0x615 PUSH1 0x24
0x617 DUP3
0x618 ADD
0x619 MSTORE
0x61a PUSH1 0x44
0x61c ADD
0x61d PUSH1 0x20
0x61f PUSH1 0x40
0x621 MLOAD
0x622 DUP1
0x623 DUP4
0x624 SUB
0x625 DUP2
0x626 PUSH1 0x0
0x628 DUP8
0x629 DUP1
0x62a EXTCODESIZE
0x62b ISZERO
0x62c ISZERO
0x62d PUSH2 0x635
0x630 JUMPI
---
0x5ae: JUMPDEST 
0x5af: V556 = 0x1
0x5b1: V557 = 0xa0
0x5b3: V558 = 0x2
0x5b5: V559 = EXP 0x2 0xa0
0x5b6: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b9: V561 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x5ba: V562 = 0x0
0x5be: M[0x0] = V561
0x5bf: V563 = 0x20
0x5c3: M[0x20] = 0x0
0x5c4: V564 = 0x40
0x5c8: V565 = SHA3 0x0 0x40
0x5ca: V566 = S[V565]
0x5cb: V567 = 0x3
0x5ce: V568 = S[0x3]
0x5d2: V569 = SUB V568 V566
0x5d4: S[0x3] = V569
0x5d7: S[V565] = 0x0
0x5d8: V570 = 0x7
0x5da: V571 = S[0x7]
0x5de: V572 = DIV V552 V540
0x5e2: V573 = AND V571 0xffffffffffffffffffffffffffffffffffffffff
0x5e4: V574 = 0xa9059cbb
0x5ee: V575 = M[0x40]
0x5ef: V576 = 0x20
0x5f1: V577 = ADD 0x20 V575
0x5f2: M[V577] = 0x0
0x5f3: V578 = 0x40
0x5f5: V579 = M[0x40]
0x5f6: V580 = 0xe0
0x5f8: V581 = 0x2
0x5fa: V582 = EXP 0x2 0xe0
0x5fb: V583 = 0xffffffff
0x601: V584 = AND 0xa9059cbb 0xffffffff
0x602: V585 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x604: M[V579] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x605: V586 = 0x1
0x607: V587 = 0xa0
0x609: V588 = 0x2
0x60b: V589 = EXP 0x2 0xa0
0x60c: V590 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60f: V591 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x610: V592 = 0x4
0x613: V593 = ADD V579 0x4
0x614: M[V593] = V591
0x615: V594 = 0x24
0x618: V595 = ADD V579 0x24
0x619: M[V595] = V572
0x61a: V596 = 0x44
0x61c: V597 = ADD 0x44 V579
0x61d: V598 = 0x20
0x61f: V599 = 0x40
0x621: V600 = M[0x40]
0x624: V601 = SUB V597 V600
0x626: V602 = 0x0
0x62a: V603 = EXTCODESIZE V573
0x62b: V604 = ISZERO V603
0x62c: V605 = ISZERO V604
0x62d: V606 = 0x635
0x630: JUMPI 0x635 V605
---
Entry stack: [V12, S8, S7, {0x2c6, 0x416}, S5, 0x0, S3, 0x0, V540, V552]
Stack pops: 6
Stack additions: [S5, S4, S3, V572, V573, 0xa9059cbb, V597, 0x20, V600, V601, V600, 0x0, V573]
Exit stack: [V12, S8, S7, {0x2c6, 0x416}, S5, 0x0, S3, V572, V573, 0xa9059cbb, V597, 0x20, V600, V601, V600, 0x0, V573]

================================

Block 0x631
[0x631:0x634]
---
Predecessors: [0x5ae]
Successors: []
---
0x631 PUSH1 0x0
0x633 DUP1
0x634 REVERT
---
0x631: V607 = 0x0
0x634: REVERT 0x0 0x0
---
Entry stack: [V12, S15, S14, {0x2c6, 0x416}, S12, 0x0, S10, V572, V573, 0xa9059cbb, V597, 0x20, V600, V601, V600, 0x0, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, {0x2c6, 0x416}, S12, 0x0, S10, V572, V573, 0xa9059cbb, V597, 0x20, V600, V601, V600, 0x0, V573]

================================

Block 0x635
[0x635:0x641]
---
Predecessors: [0x5ae]
Successors: [0x642, 0x646]
---
0x635 JUMPDEST
0x636 PUSH2 0x2c6
0x639 GAS
0x63a SUB
0x63b CALL
0x63c ISZERO
0x63d ISZERO
0x63e PUSH2 0x646
0x641 JUMPI
---
0x635: JUMPDEST 
0x636: V608 = 0x2c6
0x639: V609 = GAS
0x63a: V610 = SUB V609 0x2c6
0x63b: V611 = CALL V610 V573 0x0 V600 V601 V600 0x20
0x63c: V612 = ISZERO V611
0x63d: V613 = ISZERO V612
0x63e: V614 = 0x646
0x641: JUMPI 0x646 V613
---
Entry stack: [V12, S15, S14, {0x2c6, 0x416}, S12, 0x0, S10, V572, V573, 0xa9059cbb, V597, 0x20, V600, V601, V600, 0x0, V573]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S15, S14, {0x2c6, 0x416}, S12, 0x0, S10, V572, V573, 0xa9059cbb, V597]

================================

Block 0x642
[0x642:0x645]
---
Predecessors: [0x635]
Successors: []
---
0x642 PUSH1 0x0
0x644 DUP1
0x645 REVERT
---
0x642: V615 = 0x0
0x645: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, {0x2c6, 0x416}, S6, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, {0x2c6, 0x416}, S6, 0x0, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x646
[0x646:0x656]
---
Predecessors: [0x635]
Successors: [0x657, 0x65b]
---
0x646 JUMPDEST
0x647 POP
0x648 POP
0x649 POP
0x64a PUSH1 0x40
0x64c MLOAD
0x64d DUP1
0x64e MLOAD
0x64f SWAP1
0x650 POP
0x651 ISZERO
0x652 ISZERO
0x653 PUSH2 0x65b
0x656 JUMPI
---
0x646: JUMPDEST 
0x64a: V616 = 0x40
0x64c: V617 = M[0x40]
0x64e: V618 = M[V617]
0x651: V619 = ISZERO V618
0x652: V620 = ISZERO V619
0x653: V621 = 0x65b
0x656: JUMPI 0x65b V620
---
Entry stack: [V12, S9, S8, {0x2c6, 0x416}, S6, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S9, S8, {0x2c6, 0x416}, S6, 0x0, S4, S3]

================================

Block 0x657
[0x657:0x65a]
---
Predecessors: [0x646]
Successors: []
---
0x657 PUSH1 0x0
0x659 DUP1
0x65a REVERT
---
0x657: V622 = 0x0
0x65a: REVERT 0x0 0x0
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, {0x2c6, 0x416}, S3, 0x0, S1, S0]

================================

Block 0x65b
[0x65b:0x65b]
---
Predecessors: [0x500, 0x646]
Successors: [0x65c]
---
0x65b JUMPDEST
---
0x65b: JUMPDEST 
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, {0x2c6, 0x416}, S3, S2, S1, S0]

================================

Block 0x65c
[0x65c:0x65c]
---
Predecessors: [0x65b]
Successors: [0x65d]
---
0x65c JUMPDEST
---
0x65c: JUMPDEST 
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, {0x2c6, 0x416}, S3, S2, S1, S0]

================================

Block 0x65d
[0x65d:0x662]
---
Predecessors: [0x65c]
Successors: [0x2c6, 0x416]
---
0x65d JUMPDEST
0x65e POP
0x65f POP
0x660 POP
0x661 POP
0x662 JUMP
---
0x65d: JUMPDEST 
0x662: JUMP {0x2c6, 0x416}
---
Entry stack: [V12, S6, S5, {0x2c6, 0x416}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, S6, S5]

================================

Block 0x663
[0x663:0x69d]
---
Predecessors: []
Successors: []
---
0x663 STOP
0x664 LOG1
0x665 PUSH6 0x627a7a723058
0x66c SHA3
0x66d MISSING 0xae
0x66e DIV
0x66f PUSH3 0xa96297
0x673 MISSING 0xf6
0x674 DUP5
0x675 MISSING 0xcb
0x676 PUSH18 0x702b77638027c98083847d3f021d8621c44e
0x689 MISSING 0xc6
0x68a PUSH19 0xdbaa0029
---
0x663: STOP 
0x664: LOG S0 S1 S2
0x665: V623 = 0x627a7a723058
0x66c: V624 = SHA3 0x627a7a723058 S3
0x66d: MISSING 0xae
0x66e: V625 = DIV S0 S1
0x66f: V626 = 0xa96297
0x673: MISSING 0xf6
0x675: MISSING 0xcb
0x676: V627 = 0x702b77638027c98083847d3f021d8621c44e
0x689: MISSING 0xc6
0x68a: V628 = 0xdbaa0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V624, 0xa96297, V625, S4, S0, S1, S2, S3, S4, 0x702b77638027c98083847d3f021d8621c44e, 0xdbaa0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xc6
Exit block: 0xd9
Body: 0xc6, 0xcd, 0xd1, 0xd9, 0x30d

Function 1:
Public function signature: 0x27e235e3
Entry block: 0xf5
Exit block: 0x114
Body: 0xf5, 0xfc, 0x100, 0x114, 0x321

Function 2:
Public function signature: 0x47a42ff7
Entry block: 0x126
Exit block: 0xc4
Body: 0xc3, 0xc4, 0x126, 0x12d, 0x131, 0x333, 0x340, 0x344, 0x34e, 0x352, 0x35c, 0x360, 0x36c, 0x370, 0x3b7

Function 3:
Public function signature: 0x5259347d
Entry block: 0xbb
Exit block: 0xc4
Body: 0xbb, 0xc3, 0xc4

Function 4:
Public function signature: 0x6360fc3f
Entry block: 0x145
Exit block: 0x158
Body: 0x145, 0x14c, 0x150, 0x158, 0x3be

Function 5:
Public function signature: 0x6ad1fe02
Entry block: 0x16c
Exit block: 0xd9
Body: 0xd9, 0x16c, 0x173, 0x177, 0x3c7

Function 6:
Public function signature: 0xa089feea
Entry block: 0x19b
Exit block: 0x158
Body: 0x158, 0x19b, 0x1a2, 0x1a6, 0x3d6

Function 7:
Public function signature: 0xc3dac9a1
Entry block: 0x1c2
Exit block: 0x114
Body: 0x114, 0x1c2, 0x1c9, 0x1cd, 0x3df

Function 8:
Public function signature: 0xc42bb1e4
Entry block: 0x1e7
Exit block: 0x114
Body: 0x114, 0x1e7, 0x1ee, 0x1f2, 0x3e5

Function 9:
Public function signature: 0xd2c03c01
Entry block: 0x20c
Exit block: 0xc4
Body: 0xc3, 0xc4, 0x20c, 0x213, 0x217, 0x3eb, 0x3f8, 0x402, 0x409, 0x40d, 0x416, 0x417

Function 10:
Public function signature: 0xd4701c35
Entry block: 0x22d
Exit block: 0xc4
Body: 0xc3, 0xc4, 0x22d, 0x234, 0x238, 0x41a, 0x42e, 0x437, 0x43b, 0x44e, 0x481, 0x485, 0x493

Function 11:
Public function signature: 0xfc0c546a
Entry block: 0x280
Exit block: 0xd9
Body: 0xd9, 0x280, 0x287, 0x28b, 0x496

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0xc4
Body: 0x9e, 0x9f, 0xb7, 0xbb, 0xc3, 0xc4

Function 13:
Private function
Entry block: 0x2af
Exit block: 0x493
Body: 0x2af, 0x2be, 0x2c6, 0x2cb, 0x2db, 0x2eb, 0x30a, 0x30b

Function 14:
Private function
Entry block: 0x4a5
Exit block: 0x65d
Body: 0x4a5, 0x4b9, 0x500, 0x505, 0x55e, 0x56f, 0x587, 0x5ae, 0x635, 0x646, 0x65b, 0x65c, 0x65d

