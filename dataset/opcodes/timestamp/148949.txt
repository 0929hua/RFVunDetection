Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd5
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd5
0xa: JUMPI 0xd5 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x48d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x48d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x48d
0x24: JUMPI 0x48d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x518]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x518
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x518
0x2f: JUMPI 0x518 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x54e]
---
0x30 DUP1
0x31 PUSH4 0xdcf4b8f
0x36 EQ
0x37 PUSH2 0x54e
0x3a JUMPI
---
0x31: V19 = 0xdcf4b8f
0x36: V20 = EQ 0xdcf4b8f V12
0x37: V21 = 0x54e
0x3a: JUMPI 0x54e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x573]
---
0x3b DUP1
0x3c PUSH4 0x18160ddd
0x41 EQ
0x42 PUSH2 0x573
0x45 JUMPI
---
0x3c: V22 = 0x18160ddd
0x41: V23 = EQ 0x18160ddd V12
0x42: V24 = 0x573
0x45: JUMPI 0x573 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x598]
---
0x46 DUP1
0x47 PUSH4 0x1fc27ef2
0x4c EQ
0x4d PUSH2 0x598
0x50 JUMPI
---
0x47: V25 = 0x1fc27ef2
0x4c: V26 = EQ 0x1fc27ef2 V12
0x4d: V27 = 0x598
0x50: JUMPI 0x598 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x5bf]
---
0x51 DUP1
0x52 PUSH4 0x23b872dd
0x57 EQ
0x58 PUSH2 0x5bf
0x5b JUMPI
---
0x52: V28 = 0x23b872dd
0x57: V29 = EQ 0x23b872dd V12
0x58: V30 = 0x5bf
0x5b: JUMPI 0x5bf V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x5fb]
---
0x5c DUP1
0x5d PUSH4 0x313ce567
0x62 EQ
0x63 PUSH2 0x5fb
0x66 JUMPI
---
0x5d: V31 = 0x313ce567
0x62: V32 = EQ 0x313ce567 V12
0x63: V33 = 0x5fb
0x66: JUMPI 0x5fb V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x624]
---
0x67 DUP1
0x68 PUSH4 0x64acdb77
0x6d EQ
0x6e PUSH2 0x624
0x71 JUMPI
---
0x68: V34 = 0x64acdb77
0x6d: V35 = EQ 0x64acdb77 V12
0x6e: V36 = 0x624
0x71: JUMPI 0x624 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x639]
---
0x72 DUP1
0x73 PUSH4 0x70a08231
0x78 EQ
0x79 PUSH2 0x639
0x7c JUMPI
---
0x73: V37 = 0x70a08231
0x78: V38 = EQ 0x70a08231 V12
0x79: V39 = 0x639
0x7c: JUMPI 0x639 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x66a]
---
0x7d DUP1
0x7e PUSH4 0x8f580996
0x83 EQ
0x84 PUSH2 0x66a
0x87 JUMPI
---
0x7e: V40 = 0x8f580996
0x83: V41 = EQ 0x8f580996 V12
0x84: V42 = 0x66a
0x87: JUMPI 0x66a V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x67f]
---
0x88 DUP1
0x89 PUSH4 0x95d89b41
0x8e EQ
0x8f PUSH2 0x67f
0x92 JUMPI
---
0x89: V43 = 0x95d89b41
0x8e: V44 = EQ 0x95d89b41 V12
0x8f: V45 = 0x67f
0x92: JUMPI 0x67f V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x70a]
---
0x93 DUP1
0x94 PUSH4 0x98b01fe3
0x99 EQ
0x9a PUSH2 0x70a
0x9d JUMPI
---
0x94: V46 = 0x98b01fe3
0x99: V47 = EQ 0x98b01fe3 V12
0x9a: V48 = 0x70a
0x9d: JUMPI 0x70a V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x72f]
---
0x9e DUP1
0x9f PUSH4 0xa9059cbb
0xa4 EQ
0xa5 PUSH2 0x72f
0xa8 JUMPI
---
0x9f: V49 = 0xa9059cbb
0xa4: V50 = EQ 0xa9059cbb V12
0xa5: V51 = 0x72f
0xa8: JUMPI 0x72f V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x765]
---
0xa9 DUP1
0xaa PUSH4 0xc59d4847
0xaf EQ
0xb0 PUSH2 0x765
0xb3 JUMPI
---
0xaa: V52 = 0xc59d4847
0xaf: V53 = EQ 0xc59d4847 V12
0xb0: V54 = 0x765
0xb3: JUMPI 0x765 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x7a4]
---
0xb4 DUP1
0xb5 PUSH4 0xdd62ed3e
0xba EQ
0xbb PUSH2 0x7a4
0xbe JUMPI
---
0xb5: V55 = 0xdd62ed3e
0xba: V56 = EQ 0xdd62ed3e V12
0xbb: V57 = 0x7a4
0xbe: JUMPI 0x7a4 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x7db]
---
0xbf DUP1
0xc0 PUSH4 0xe1913c0b
0xc5 EQ
0xc6 PUSH2 0x7db
0xc9 JUMPI
---
0xc0: V58 = 0xe1913c0b
0xc5: V59 = EQ 0xe1913c0b V12
0xc6: V60 = 0x7db
0xc9: JUMPI 0x7db V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x80e]
---
0xca DUP1
0xcb PUSH4 0xf251fc8c
0xd0 EQ
0xd1 PUSH2 0x80e
0xd4 JUMPI
---
0xcb: V61 = 0xf251fc8c
0xd0: V62 = EQ 0xf251fc8c V12
0xd1: V63 = 0x80e
0xd4: JUMPI 0x80e V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0x0, 0xca]
Successors: [0xd9]
---
0xd5 JUMPDEST
0xd6 PUSH2 0x48b
---
0xd5: JUMPDEST 
0xd6: V64 = 0x48b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x48b]
Exit stack: [V12, 0x48b]

================================

Block 0xd9
[0xd9:0xe6]
---
Predecessors: [0xd5]
Successors: [0x833]
---
0xd9 JUMPDEST
0xda PUSH1 0x0
0xdc DUP1
0xdd PUSH1 0x0
0xdf DUP1
0xe0 PUSH2 0xe7
0xe3 PUSH2 0x833
0xe6 JUMP
---
0xd9: JUMPDEST 
0xda: V65 = 0x0
0xdd: V66 = 0x0
0xe0: V67 = 0xe7
0xe3: V68 = 0x833
0xe6: JUMP 0x833
---
Entry stack: [V12, 0x48b]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0xe7]
Exit stack: [V12, 0x48b, 0x0, 0x0, 0x0, 0x0, 0xe7]

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0x84d]
Successors: [0xee, 0xf2]
---
0xe7 JUMPDEST
0xe8 ISZERO
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V69 = ISZERO S0
0xe9: V70 = ISZERO V69
0xea: V71 = 0xf2
0xed: JUMPI 0xf2 V70
---
Entry stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, 0x0, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, 0x0, S3, S2, S1]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe7]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V72 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xe7]
Successors: [0xfa, 0xfe]
---
0xf2 JUMPDEST
0xf3 CALLVALUE
0xf4 ISZERO
0xf5 ISZERO
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xf2: JUMPDEST 
0xf3: V73 = CALLVALUE
0xf4: V74 = ISZERO V73
0xf5: V75 = ISZERO V74
0xf6: V76 = 0xfe
0xf9: JUMPI 0xfe V75
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xf2]
Successors: [0x485]
---
0xfa PUSH2 0x485
0xfd JUMP
---
0xfa: V77 = 0x485
0xfd: JUMP 0x485
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]

================================

Block 0xfe
[0xfe:0x136]
---
Predecessors: [0xf2]
Successors: [0x137, 0x13b]
---
0xfe JUMPDEST
0xff PUSH1 0x5
0x101 DUP1
0x102 SLOAD
0x103 PUSH1 0x1
0x105 ADD
0x106 SWAP1
0x107 SSTORE
0x108 PUSH1 0x0
0x10a SLOAD
0x10b PUSH1 0x1
0x10d PUSH1 0xa0
0x10f PUSH1 0x2
0x111 EXP
0x112 SUB
0x113 AND
0x114 CALLVALUE
0x115 DUP1
0x116 ISZERO
0x117 PUSH2 0x8fc
0x11a MUL
0x11b SWAP1
0x11c PUSH1 0x40
0x11e MLOAD
0x11f PUSH1 0x0
0x121 PUSH1 0x40
0x123 MLOAD
0x124 DUP1
0x125 DUP4
0x126 SUB
0x127 DUP2
0x128 DUP6
0x129 DUP9
0x12a DUP9
0x12b CALL
0x12c SWAP4
0x12d POP
0x12e POP
0x12f POP
0x130 POP
0x131 ISZERO
0x132 ISZERO
0x133 PUSH2 0x13b
0x136 JUMPI
---
0xfe: JUMPDEST 
0xff: V78 = 0x5
0x102: V79 = S[0x5]
0x103: V80 = 0x1
0x105: V81 = ADD 0x1 V79
0x107: S[0x5] = V81
0x108: V82 = 0x0
0x10a: V83 = S[0x0]
0x10b: V84 = 0x1
0x10d: V85 = 0xa0
0x10f: V86 = 0x2
0x111: V87 = EXP 0x2 0xa0
0x112: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x113: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x114: V90 = CALLVALUE
0x116: V91 = ISZERO V90
0x117: V92 = 0x8fc
0x11a: V93 = MUL 0x8fc V91
0x11c: V94 = 0x40
0x11e: V95 = M[0x40]
0x11f: V96 = 0x0
0x121: V97 = 0x40
0x123: V98 = M[0x40]
0x126: V99 = SUB V95 V98
0x12b: V100 = CALL V93 V89 V90 V98 V99 V98 0x0
0x131: V101 = ISZERO V100
0x132: V102 = ISZERO V101
0x133: V103 = 0x13b
0x136: JUMPI 0x13b V102
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]

================================

Block 0x137
[0x137:0x13a]
---
Predecessors: [0xfe]
Successors: []
---
0x137 PUSH1 0x0
0x139 DUP1
0x13a REVERT
---
0x137: V104 = 0x0
0x13a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]

================================

Block 0x13b
[0x13b:0x158]
---
Predecessors: [0xfe]
Successors: [0x850]
---
0x13b JUMPDEST
0x13c PUSH1 0x6
0x13e DUP1
0x13f SLOAD
0x140 CALLVALUE
0x141 SWAP1
0x142 DUP2
0x143 ADD
0x144 SWAP1
0x145 SWAP2
0x146 SSTORE
0x147 PUSH1 0x5
0x149 SLOAD
0x14a PUSH1 0x65
0x14c SWAP1
0x14d SWAP2
0x14e MUL
0x14f SWAP5
0x150 POP
0x151 PUSH2 0x159
0x154 SWAP1
0x155 PUSH2 0x850
0x158 JUMP
---
0x13b: JUMPDEST 
0x13c: V105 = 0x6
0x13f: V106 = S[0x6]
0x140: V107 = CALLVALUE
0x143: V108 = ADD V107 V106
0x146: S[0x6] = V108
0x147: V109 = 0x5
0x149: V110 = S[0x5]
0x14a: V111 = 0x65
0x14e: V112 = MUL V107 0x65
0x151: V113 = 0x159
0x155: V114 = 0x850
0x158: JUMP 0x850
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [V112, S2, S1, S0, 0x159, V110]
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, V112, S2, S1, S0, 0x159, V110]

================================

Block 0x159
[0x159:0x15e]
---
Predecessors: [0x8a3]
Successors: [0x15f, 0x170]
---
0x159 JUMPDEST
0x15a ISZERO
0x15b PUSH2 0x170
0x15e JUMPI
---
0x159: JUMPDEST 
0x15a: V115 = ISZERO S0
0x15b: V116 = 0x170
0x15e: JUMPI 0x170 V115
---
Entry stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, V112, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, V112, S3, S2, S1]

================================

Block 0x15f
[0x15f:0x16f]
---
Predecessors: [0x159]
Successors: [0x170]
---
0x15f PUSH1 0x7
0x161 DUP1
0x162 SLOAD
0x163 PUSH1 0xb
0x165 SWAP1
0x166 DUP2
0x167 ADD
0x168 SWAP1
0x169 SWAP2
0x16a SSTORE
0x16b SWAP4
0x16c SWAP1
0x16d SWAP4
0x16e ADD
0x16f SWAP3
---
0x15f: V117 = 0x7
0x162: V118 = S[0x7]
0x163: V119 = 0xb
0x167: V120 = ADD 0xb V118
0x16a: S[0x7] = V120
0x16e: V121 = ADD 0xb V112
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, V112, S2, S1, S0]
Stack pops: 4
Stack additions: [V121, S2, S1, S0]
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, V121, S2, S1, S0]

================================

Block 0x170
[0x170:0x17e]
---
Predecessors: [0x159, 0x15f]
Successors: [0x17f, 0x422]
---
0x170 JUMPDEST
0x171 PUSH7 0x2386f26fc10000
0x179 CALLVALUE
0x17a LT
0x17b PUSH2 0x422
0x17e JUMPI
---
0x170: JUMPDEST 
0x171: V122 = 0x2386f26fc10000
0x179: V123 = CALLVALUE
0x17a: V124 = LT V123 0x2386f26fc10000
0x17b: V125 = 0x422
0x17e: JUMPI 0x422 V124
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]

================================

Block 0x17f
[0x17f:0x1db]
---
Predecessors: [0x170]
Successors: [0x1dc, 0x1e0]
---
0x17f PUSH1 0x6
0x181 SLOAD
0x182 DUP5
0x183 ADD
0x184 SWAP4
0x185 POP
0x186 PUSH1 0x3
0x188 COINBASE
0x189 NUMBER
0x18a TIMESTAMP
0x18b PUSH1 0x0
0x18d PUSH1 0x40
0x18f MLOAD
0x190 PUSH1 0x20
0x192 ADD
0x193 MSTORE
0x194 PUSH1 0x40
0x196 MLOAD
0x197 PUSH1 0x1
0x199 PUSH1 0xa0
0x19b PUSH1 0x2
0x19d EXP
0x19e SUB
0x19f SWAP4
0x1a0 SWAP1
0x1a1 SWAP4
0x1a2 AND
0x1a3 PUSH13 0x1000000000000000000000000
0x1b1 MUL
0x1b2 DUP4
0x1b3 MSTORE
0x1b4 PUSH1 0x14
0x1b6 DUP4
0x1b7 ADD
0x1b8 SWAP2
0x1b9 SWAP1
0x1ba SWAP2
0x1bb MSTORE
0x1bc PUSH1 0x34
0x1be DUP3
0x1bf ADD
0x1c0 MSTORE
0x1c1 PUSH1 0x54
0x1c3 ADD
0x1c4 PUSH1 0x20
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 DUP1
0x1ca DUP4
0x1cb SUB
0x1cc DUP2
0x1cd PUSH1 0x0
0x1cf DUP7
0x1d0 PUSH2 0x646e
0x1d3 GAS
0x1d4 SUB
0x1d5 CALL
0x1d6 ISZERO
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x17f: V126 = 0x6
0x181: V127 = S[0x6]
0x183: V128 = ADD S3 V127
0x186: V129 = 0x3
0x188: V130 = COINBASE
0x189: V131 = NUMBER
0x18a: V132 = TIMESTAMP
0x18b: V133 = 0x0
0x18d: V134 = 0x40
0x18f: V135 = M[0x40]
0x190: V136 = 0x20
0x192: V137 = ADD 0x20 V135
0x193: M[V137] = 0x0
0x194: V138 = 0x40
0x196: V139 = M[0x40]
0x197: V140 = 0x1
0x199: V141 = 0xa0
0x19b: V142 = 0x2
0x19d: V143 = EXP 0x2 0xa0
0x19e: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a2: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x1a3: V146 = 0x1000000000000000000000000
0x1b1: V147 = MUL 0x1000000000000000000000000 V145
0x1b3: M[V139] = V147
0x1b4: V148 = 0x14
0x1b7: V149 = ADD V139 0x14
0x1bb: M[V149] = V131
0x1bc: V150 = 0x34
0x1bf: V151 = ADD V139 0x34
0x1c0: M[V151] = V132
0x1c1: V152 = 0x54
0x1c3: V153 = ADD 0x54 V139
0x1c4: V154 = 0x20
0x1c6: V155 = 0x40
0x1c8: V156 = M[0x40]
0x1cb: V157 = SUB V153 V156
0x1cd: V158 = 0x0
0x1d0: V159 = 0x646e
0x1d3: V160 = GAS
0x1d4: V161 = SUB V160 0x646e
0x1d5: V162 = CALL V161 0x3 0x0 V156 V157 V156 0x20
0x1d6: V163 = ISZERO V162
0x1d7: V164 = ISZERO V163
0x1d8: V165 = 0x1e0
0x1db: JUMPI 0x1e0 V164
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V128, S2, S1, S0, 0x3, V153]
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, V128, S2, S1, S0, 0x3, V153]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x17f]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V166 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, V128, S4, S3, S2, 0x3, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, V128, S4, S3, S2, 0x3, V153]

================================

Block 0x1e0
[0x1e0:0x1fa]
---
Predecessors: [0x17f]
Successors: [0x1fb]
---
0x1e0 JUMPDEST
0x1e1 POP
0x1e2 POP
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 MLOAD
0x1e7 PUSH13 0x1000000000000000000000000
0x1f5 MUL
0x1f6 SWAP3
0x1f7 POP
0x1f8 DUP3
0x1f9 PUSH1 0x0
---
0x1e0: JUMPDEST 
0x1e3: V167 = 0x40
0x1e5: V168 = M[0x40]
0x1e6: V169 = M[V168]
0x1e7: V170 = 0x1000000000000000000000000
0x1f5: V171 = MUL 0x1000000000000000000000000 V169
0x1f9: V172 = 0x0
---
Entry stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, V128, S4, S3, S2, 0x3, V153]
Stack pops: 5
Stack additions: [V171, S3, S2, V171, 0x0]
Exit stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, V128, V171, S3, S2, V171, 0x0]

================================

Block 0x1fb
[0x1fb:0x232]
---
Predecessors: [0x1e0]
Successors: [0x233, 0x422]
---
0x1fb JUMPDEST
0x1fc BYTE
0x1fd PUSH1 0xf8
0x1ff PUSH1 0x2
0x201 EXP
0x202 MUL
0x203 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x223 NOT
0x224 AND
0x225 PUSH1 0x0
0x227 PUSH1 0xf8
0x229 PUSH1 0x2
0x22b EXP
0x22c MUL
0x22d EQ
0x22e ISZERO
0x22f PUSH2 0x422
0x232 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V173 = BYTE 0x0 V171
0x1fd: V174 = 0xf8
0x1ff: V175 = 0x2
0x201: V176 = EXP 0x2 0xf8
0x202: V177 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V173
0x203: V178 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x223: V179 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x224: V180 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V177
0x225: V181 = 0x0
0x227: V182 = 0xf8
0x229: V183 = 0x2
0x22b: V184 = EXP 0x2 0xf8
0x22c: V185 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x0
0x22d: V186 = EQ 0x0 V180
0x22e: V187 = ISZERO V186
0x22f: V188 = 0x422
0x232: JUMPI 0x422 V187
---
Entry stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, V171, S3, S2, V171, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, V171, S3, S2]

================================

Block 0x233
[0x233:0x235]
---
Predecessors: [0x1fb]
Successors: [0x236]
---
0x233 DUP3
0x234 PUSH1 0x1
---
0x234: V189 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, 0x1]
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0, S2, 0x1]

================================

Block 0x236
[0x236:0x265]
---
Predecessors: [0x233]
Successors: [0x266, 0x26c]
---
0x236 JUMPDEST
0x237 BYTE
0x238 PUSH1 0xf8
0x23a PUSH1 0x2
0x23c EXP
0x23d MUL
0x23e PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000
0x25f AND
0x260 ISZERO
0x261 ISZERO
0x262 PUSH2 0x26c
0x265 JUMPI
---
0x236: JUMPDEST 
0x237: V190 = BYTE 0x1 S1
0x238: V191 = 0xf8
0x23a: V192 = 0x2
0x23c: V193 = EXP 0x2 0xf8
0x23d: V194 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V190
0x23e: V195 = 0x8000000000000000000000000000000000000000000000000000000000000000
0x25f: V196 = AND 0x8000000000000000000000000000000000000000000000000000000000000000 V194
0x260: V197 = ISZERO V196
0x261: V198 = ISZERO V197
0x262: V199 = 0x26c
0x265: JUMPI 0x26c V198
---
Entry stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, S4, S3, S2, S1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, S4, S3, S2]

================================

Block 0x266
[0x266:0x26b]
---
Predecessors: [0x236]
Successors: [0x26f]
---
0x266 PUSH1 0x0
0x268 PUSH2 0x26f
0x26b JUMP
---
0x266: V200 = 0x0
0x268: V201 = 0x26f
0x26b: JUMP 0x26f
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0, 0x0]

================================

Block 0x26c
[0x26c:0x26e]
---
Predecessors: [0x236]
Successors: [0x26f]
---
0x26c JUMPDEST
0x26d PUSH1 0x1
---
0x26c: JUMPDEST 
0x26d: V202 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0, 0x1]

================================

Block 0x26f
[0x26f:0x272]
---
Predecessors: [0x266, 0x26c]
Successors: [0x273]
---
0x26f JUMPDEST
0x270 DUP4
0x271 PUSH1 0x1
---
0x26f: JUMPDEST 
0x271: V203 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x1]
Exit stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, S4, S3, S2, S1, {0x0, 0x1}, S3, 0x1]

================================

Block 0x273
[0x273:0x2a2]
---
Predecessors: [0x26f]
Successors: [0x2a3, 0x2a9]
---
0x273 JUMPDEST
0x274 BYTE
0x275 PUSH1 0xf8
0x277 PUSH1 0x2
0x279 EXP
0x27a MUL
0x27b PUSH32 0x4000000000000000000000000000000000000000000000000000000000000000
0x29c AND
0x29d ISZERO
0x29e ISZERO
0x29f PUSH2 0x2a9
0x2a2 JUMPI
---
0x273: JUMPDEST 
0x274: V204 = BYTE 0x1 S1
0x275: V205 = 0xf8
0x277: V206 = 0x2
0x279: V207 = EXP 0x2 0xf8
0x27a: V208 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V204
0x27b: V209 = 0x4000000000000000000000000000000000000000000000000000000000000000
0x29c: V210 = AND 0x4000000000000000000000000000000000000000000000000000000000000000 V208
0x29d: V211 = ISZERO V210
0x29e: V212 = ISZERO V211
0x29f: V213 = 0x2a9
0x2a2: JUMPI 0x2a9 V212
---
Entry stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, S6, S5, S4, S3, {0x0, 0x1}, S1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, S6, S5, S4, S3, {0x0, 0x1}]

================================

Block 0x2a3
[0x2a3:0x2a8]
---
Predecessors: [0x273]
Successors: [0x2ac]
---
0x2a3 PUSH1 0x0
0x2a5 PUSH2 0x2ac
0x2a8 JUMP
---
0x2a3: V214 = 0x0
0x2a5: V215 = 0x2ac
0x2a8: JUMP 0x2ac
---
Entry stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, S4, S3, S2, S1, {0x0, 0x1}, 0x0]

================================

Block 0x2a9
[0x2a9:0x2ab]
---
Predecessors: [0x273]
Successors: [0x2ac]
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x1
---
0x2a9: JUMPDEST 
0x2aa: V216 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, S4, S3, S2, S1, {0x0, 0x1}, 0x1]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x2a3, 0x2a9]
Successors: [0x2b0]
---
0x2ac JUMPDEST
0x2ad DUP5
0x2ae PUSH1 0x1
---
0x2ac: JUMPDEST 
0x2ae: V217 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, S4, S3, S2, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x1]
Exit stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, S4, S3, S2, {0x0, 0x1}, {0x0, 0x1}, S4, 0x1]

================================

Block 0x2b0
[0x2b0:0x2df]
---
Predecessors: [0x2ac]
Successors: [0x2e0, 0x2e6]
---
0x2b0 JUMPDEST
0x2b1 BYTE
0x2b2 PUSH1 0xf8
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 MUL
0x2b8 PUSH32 0x2000000000000000000000000000000000000000000000000000000000000000
0x2d9 AND
0x2da ISZERO
0x2db ISZERO
0x2dc PUSH2 0x2e6
0x2df JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V218 = BYTE 0x1 S1
0x2b2: V219 = 0xf8
0x2b4: V220 = 0x2
0x2b6: V221 = EXP 0x2 0xf8
0x2b7: V222 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V218
0x2b8: V223 = 0x2000000000000000000000000000000000000000000000000000000000000000
0x2d9: V224 = AND 0x2000000000000000000000000000000000000000000000000000000000000000 V222
0x2da: V225 = ISZERO V224
0x2db: V226 = ISZERO V225
0x2dc: V227 = 0x2e6
0x2df: JUMPI 0x2e6 V226
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, S7, S6, S5, S4, {0x0, 0x1}, {0x0, 0x1}, S1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, S7, S6, S5, S4, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x2e0
[0x2e0:0x2e5]
---
Predecessors: [0x2b0]
Successors: [0x2e9]
---
0x2e0 PUSH1 0x0
0x2e2 PUSH2 0x2e9
0x2e5 JUMP
---
0x2e0: V228 = 0x0
0x2e2: V229 = 0x2e9
0x2e5: JUMP 0x2e9
---
Entry stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, S4, S3, S2, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, S4, S3, S2, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x2e6
[0x2e6:0x2e8]
---
Predecessors: [0x2b0]
Successors: [0x2e9]
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x1
---
0x2e6: JUMPDEST 
0x2e7: V230 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, S4, S3, S2, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, S5, S4, S3, S2, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2e0, 0x2e6]
Successors: [0x2ed]
---
0x2e9 JUMPDEST
0x2ea DUP6
0x2eb PUSH1 0x1
---
0x2e9: JUMPDEST 
0x2eb: V231 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, S6, S5, S4, S3, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, 0x1]
Exit stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, S6, S5, S4, S3, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S5, 0x1]

================================

Block 0x2ed
[0x2ed:0x31c]
---
Predecessors: [0x2e9]
Successors: [0x31d, 0x323]
---
0x2ed JUMPDEST
0x2ee BYTE
0x2ef PUSH1 0xf8
0x2f1 PUSH1 0x2
0x2f3 EXP
0x2f4 MUL
0x2f5 PUSH32 0x1000000000000000000000000000000000000000000000000000000000000000
0x316 AND
0x317 ISZERO
0x318 ISZERO
0x319 PUSH2 0x323
0x31c JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V232 = BYTE 0x1 S1
0x2ef: V233 = 0xf8
0x2f1: V234 = 0x2
0x2f3: V235 = EXP 0x2 0xf8
0x2f4: V236 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V232
0x2f5: V237 = 0x1000000000000000000000000000000000000000000000000000000000000000
0x316: V238 = AND 0x1000000000000000000000000000000000000000000000000000000000000000 V236
0x317: V239 = ISZERO V238
0x318: V240 = ISZERO V239
0x319: V241 = 0x323
0x31c: JUMPI 0x323 V240
---
Entry stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, S8, S7, S6, S5, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, S8, S7, S6, S5, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x31d
[0x31d:0x322]
---
Predecessors: [0x2ed]
Successors: [0x326]
---
0x31d PUSH1 0x0
0x31f PUSH2 0x326
0x322 JUMP
---
0x31d: V242 = 0x0
0x31f: V243 = 0x326
0x322: JUMP 0x326
---
Entry stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, S6, S5, S4, S3, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, S6, S5, S4, S3, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x323
[0x323:0x325]
---
Predecessors: [0x2ed]
Successors: [0x326]
---
0x323 JUMPDEST
0x324 PUSH1 0x1
---
0x323: JUMPDEST 
0x324: V244 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, S6, S5, S4, S3, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, S6, S5, S4, S3, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x326
[0x326:0x329]
---
Predecessors: [0x31d, 0x323]
Successors: [0x32a]
---
0x326 JUMPDEST
0x327 DUP7
0x328 PUSH1 0x1
---
0x326: JUMPDEST 
0x328: V245 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, S7, S6, S5, S4, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, 0x1]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, S7, S6, S5, S4, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S6, 0x1]

================================

Block 0x32a
[0x32a:0x359]
---
Predecessors: [0x326]
Successors: [0x35a, 0x360]
---
0x32a JUMPDEST
0x32b BYTE
0x32c PUSH1 0xf8
0x32e PUSH1 0x2
0x330 EXP
0x331 MUL
0x332 PUSH32 0x800000000000000000000000000000000000000000000000000000000000000
0x353 AND
0x354 ISZERO
0x355 ISZERO
0x356 PUSH2 0x360
0x359 JUMPI
---
0x32a: JUMPDEST 
0x32b: V246 = BYTE 0x1 S1
0x32c: V247 = 0xf8
0x32e: V248 = 0x2
0x330: V249 = EXP 0x2 0xf8
0x331: V250 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V246
0x332: V251 = 0x800000000000000000000000000000000000000000000000000000000000000
0x353: V252 = AND 0x800000000000000000000000000000000000000000000000000000000000000 V250
0x354: V253 = ISZERO V252
0x355: V254 = ISZERO V253
0x356: V255 = 0x360
0x359: JUMPI 0x360 V254
---
Entry stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, S9, S8, S7, S6, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, S9, S8, S7, S6, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x35a
[0x35a:0x35f]
---
Predecessors: [0x32a]
Successors: [0x363]
---
0x35a PUSH1 0x0
0x35c PUSH2 0x363
0x35f JUMP
---
0x35a: V256 = 0x0
0x35c: V257 = 0x363
0x35f: JUMP 0x363
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, S7, S6, S5, S4, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, S7, S6, S5, S4, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x360
[0x360:0x362]
---
Predecessors: [0x32a]
Successors: [0x363]
---
0x360 JUMPDEST
0x361 PUSH1 0x1
---
0x360: JUMPDEST 
0x361: V258 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, S7, S6, S5, S4, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, S7, S6, S5, S4, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x363
[0x363:0x366]
---
Predecessors: [0x35a, 0x360]
Successors: [0x367]
---
0x363 JUMPDEST
0x364 DUP8
0x365 PUSH1 0x1
---
0x363: JUMPDEST 
0x365: V259 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, S8, S7, S6, S5, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, S7, 0x1]
Exit stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, S8, S7, S6, S5, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S7, 0x1]

================================

Block 0x367
[0x367:0x396]
---
Predecessors: [0x363]
Successors: [0x397, 0x39d]
---
0x367 JUMPDEST
0x368 BYTE
0x369 PUSH1 0xf8
0x36b PUSH1 0x2
0x36d EXP
0x36e MUL
0x36f PUSH32 0x400000000000000000000000000000000000000000000000000000000000000
0x390 AND
0x391 ISZERO
0x392 ISZERO
0x393 PUSH2 0x39d
0x396 JUMPI
---
0x367: JUMPDEST 
0x368: V260 = BYTE 0x1 S1
0x369: V261 = 0xf8
0x36b: V262 = 0x2
0x36d: V263 = EXP 0x2 0xf8
0x36e: V264 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V260
0x36f: V265 = 0x400000000000000000000000000000000000000000000000000000000000000
0x390: V266 = AND 0x400000000000000000000000000000000000000000000000000000000000000 V264
0x391: V267 = ISZERO V266
0x392: V268 = ISZERO V267
0x393: V269 = 0x39d
0x396: JUMPI 0x39d V268
---
Entry stack: [V12, 0x778, 0x0, S12, {0x0, 0x48b}, S10, S9, S8, S7, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S12, {0x0, 0x48b}, S10, S9, S8, S7, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x397
[0x397:0x39c]
---
Predecessors: [0x367]
Successors: [0x3a0]
---
0x397 PUSH1 0x0
0x399 PUSH2 0x3a0
0x39c JUMP
---
0x397: V270 = 0x0
0x399: V271 = 0x3a0
0x39c: JUMP 0x3a0
---
Entry stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, S8, S7, S6, S5, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, S8, S7, S6, S5, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x39d
[0x39d:0x39f]
---
Predecessors: [0x367]
Successors: [0x3a0]
---
0x39d JUMPDEST
0x39e PUSH1 0x1
---
0x39d: JUMPDEST 
0x39e: V272 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, S8, S7, S6, S5, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, S8, S7, S6, S5, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x397, 0x39d]
Successors: [0x3a4]
---
0x3a0 JUMPDEST
0x3a1 DUP9
0x3a2 PUSH1 0x1
---
0x3a0: JUMPDEST 
0x3a2: V273 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, S9, S8, S7, S6, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, S8, 0x1]
Exit stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, S9, S8, S7, S6, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S8, 0x1]

================================

Block 0x3a4
[0x3a4:0x3d3]
---
Predecessors: [0x3a0]
Successors: [0x3d4, 0x3da]
---
0x3a4 JUMPDEST
0x3a5 BYTE
0x3a6 PUSH1 0xf8
0x3a8 PUSH1 0x2
0x3aa EXP
0x3ab MUL
0x3ac PUSH32 0x200000000000000000000000000000000000000000000000000000000000000
0x3cd AND
0x3ce ISZERO
0x3cf ISZERO
0x3d0 PUSH2 0x3da
0x3d3 JUMPI
---
0x3a4: JUMPDEST 
0x3a5: V274 = BYTE 0x1 S1
0x3a6: V275 = 0xf8
0x3a8: V276 = 0x2
0x3aa: V277 = EXP 0x2 0xf8
0x3ab: V278 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V274
0x3ac: V279 = 0x200000000000000000000000000000000000000000000000000000000000000
0x3cd: V280 = AND 0x200000000000000000000000000000000000000000000000000000000000000 V278
0x3ce: V281 = ISZERO V280
0x3cf: V282 = ISZERO V281
0x3d0: V283 = 0x3da
0x3d3: JUMPI 0x3da V282
---
Entry stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, S11, S10, S9, S8, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, S11, S10, S9, S8, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x3d4
[0x3d4:0x3d9]
---
Predecessors: [0x3a4]
Successors: [0x3dd]
---
0x3d4 PUSH1 0x0
0x3d6 PUSH2 0x3dd
0x3d9 JUMP
---
0x3d4: V284 = 0x0
0x3d6: V285 = 0x3dd
0x3d9: JUMP 0x3dd
---
Entry stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, S9, S8, S7, S6, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, S9, S8, S7, S6, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x3da
[0x3da:0x3dc]
---
Predecessors: [0x3a4]
Successors: [0x3dd]
---
0x3da JUMPDEST
0x3db PUSH1 0x1
---
0x3da: JUMPDEST 
0x3db: V286 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, S9, S8, S7, S6, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, S9, S8, S7, S6, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x3dd
[0x3dd:0x3e0]
---
Predecessors: [0x3d4, 0x3da]
Successors: [0x3e1]
---
0x3dd JUMPDEST
0x3de DUP10
0x3df PUSH1 0x1
---
0x3dd: JUMPDEST 
0x3df: V287 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S12, {0x0, 0x48b}, S10, S9, S8, S7, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S9, 0x1]
Exit stack: [V12, 0x778, 0x0, S12, {0x0, 0x48b}, S10, S9, S8, S7, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S9, 0x1]

================================

Block 0x3e1
[0x3e1:0x3f1]
---
Predecessors: [0x3dd]
Successors: [0x3f2, 0x3f8]
---
0x3e1 JUMPDEST
0x3e2 BYTE
0x3e3 PUSH1 0xf8
0x3e5 PUSH1 0x2
0x3e7 EXP
0x3e8 SWAP1
0x3e9 DUP2
0x3ea MUL
0x3eb AND
0x3ec ISZERO
0x3ed ISZERO
0x3ee PUSH2 0x3f8
0x3f1 JUMPI
---
0x3e1: JUMPDEST 
0x3e2: V288 = BYTE 0x1 S1
0x3e3: V289 = 0xf8
0x3e5: V290 = 0x2
0x3e7: V291 = EXP 0x2 0xf8
0x3ea: V292 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V288
0x3eb: V293 = AND V292 0x100000000000000000000000000000000000000000000000000000000000000
0x3ec: V294 = ISZERO V293
0x3ed: V295 = ISZERO V294
0x3ee: V296 = 0x3f8
0x3f1: JUMPI 0x3f8 V295
---
Entry stack: [V12, 0x778, 0x0, S14, {0x0, 0x48b}, S12, S11, S10, S9, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, S1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S14, {0x0, 0x48b}, S12, S11, S10, S9, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x3f2
[0x3f2:0x3f7]
---
Predecessors: [0x3e1]
Successors: [0x3fb]
---
0x3f2 PUSH1 0x0
0x3f4 PUSH2 0x3fb
0x3f7 JUMP
---
0x3f2: V297 = 0x0
0x3f4: V298 = 0x3fb
0x3f7: JUMP 0x3fb
---
Entry stack: [V12, 0x778, 0x0, S12, {0x0, 0x48b}, S10, S9, S8, S7, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x778, 0x0, S12, {0x0, 0x48b}, S10, S9, S8, S7, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x3f8
[0x3f8:0x3fa]
---
Predecessors: [0x3e1]
Successors: [0x3fb]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x1
---
0x3f8: JUMPDEST 
0x3f9: V299 = 0x1
---
Entry stack: [V12, 0x778, 0x0, S12, {0x0, 0x48b}, S10, S9, S8, S7, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x778, 0x0, S12, {0x0, 0x48b}, S10, S9, S8, S7, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x3fb
[0x3fb:0x421]
---
Predecessors: [0x3f2, 0x3f8]
Successors: [0x422]
---
0x3fb JUMPDEST
0x3fc ADD
0x3fd ADD
0x3fe ADD
0x3ff ADD
0x400 ADD
0x401 ADD
0x402 ADD
0x403 SWAP2
0x404 POP
0x405 DUP2
0x406 PUSH1 0xff
0x408 AND
0x409 DUP5
0x40a MUL
0x40b SWAP1
0x40c POP
0x40d DUP1
0x40e DUP5
0x40f ADD
0x410 SWAP4
0x411 POP
0x412 DUP1
0x413 PUSH1 0x7
0x415 PUSH1 0x0
0x417 DUP3
0x418 DUP3
0x419 SLOAD
0x41a ADD
0x41b SWAP3
0x41c POP
0x41d POP
0x41e DUP2
0x41f SWAP1
0x420 SSTORE
0x421 POP
---
0x3fb: JUMPDEST 
0x3fc: V300 = ADD {0x0, 0x1} {0x0, 0x1}
0x3fd: V301 = ADD V300 {0x0, 0x1}
0x3fe: V302 = ADD V301 {0x0, 0x1}
0x3ff: V303 = ADD V302 {0x0, 0x1}
0x400: V304 = ADD V303 {0x0, 0x1}
0x401: V305 = ADD V304 {0x0, 0x1}
0x402: V306 = ADD V305 {0x0, 0x1}
0x406: V307 = 0xff
0x408: V308 = AND 0xff V306
0x40a: V309 = MUL S11 V308
0x40f: V310 = ADD S11 V309
0x413: V311 = 0x7
0x415: V312 = 0x0
0x419: V313 = S[0x7]
0x41a: V314 = ADD V313 V309
0x420: S[0x7] = V314
---
Entry stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, S11, S10, S9, S8, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 12
Stack additions: [V310, S10, V306, V309]
Exit stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, V310, S10, V306, V309]

================================

Block 0x422
[0x422:0x422]
---
Predecessors: [0x170, 0x1fb, 0x3fb]
Successors: [0x423]
---
0x422 JUMPDEST
---
0x422: JUMPDEST 
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]

================================

Block 0x423
[0x423:0x484]
---
Predecessors: [0x422]
Successors: [0x485]
---
0x423 JUMPDEST
0x424 PUSH1 0x8
0x426 DUP1
0x427 SLOAD
0x428 DUP6
0x429 ADD
0x42a SWAP1
0x42b SSTORE
0x42c PUSH1 0x1
0x42e PUSH1 0xa0
0x430 PUSH1 0x2
0x432 EXP
0x433 SUB
0x434 CALLER
0x435 DUP2
0x436 AND
0x437 PUSH1 0x0
0x439 DUP2
0x43a DUP2
0x43b MSTORE
0x43c PUSH1 0x3
0x43e PUSH1 0x20
0x440 MSTORE
0x441 PUSH1 0x40
0x443 SWAP1
0x444 DUP2
0x445 SWAP1
0x446 SHA3
0x447 DUP1
0x448 SLOAD
0x449 DUP9
0x44a ADD
0x44b SWAP1
0x44c SSTORE
0x44d SWAP1
0x44e SWAP2
0x44f ADDRESS
0x450 AND
0x451 SWAP1
0x452 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x473 SWAP1
0x474 DUP8
0x475 SWAP1
0x476 MLOAD
0x477 SWAP1
0x478 DUP2
0x479 MSTORE
0x47a PUSH1 0x20
0x47c ADD
0x47d PUSH1 0x40
0x47f MLOAD
0x480 DUP1
0x481 SWAP2
0x482 SUB
0x483 SWAP1
0x484 LOG3
---
0x423: JUMPDEST 
0x424: V315 = 0x8
0x427: V316 = S[0x8]
0x429: V317 = ADD S3 V316
0x42b: S[0x8] = V317
0x42c: V318 = 0x1
0x42e: V319 = 0xa0
0x430: V320 = 0x2
0x432: V321 = EXP 0x2 0xa0
0x433: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x434: V323 = CALLER
0x436: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x437: V325 = 0x0
0x43b: M[0x0] = V324
0x43c: V326 = 0x3
0x43e: V327 = 0x20
0x440: M[0x20] = 0x3
0x441: V328 = 0x40
0x446: V329 = SHA3 0x0 0x40
0x448: V330 = S[V329]
0x44a: V331 = ADD S3 V330
0x44c: S[V329] = V331
0x44f: V332 = ADDRESS
0x450: V333 = AND V332 0xffffffffffffffffffffffffffffffffffffffff
0x452: V334 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x476: V335 = M[0x40]
0x479: M[V335] = S3
0x47a: V336 = 0x20
0x47c: V337 = ADD 0x20 V335
0x47d: V338 = 0x40
0x47f: V339 = M[0x40]
0x482: V340 = SUB V337 V339
0x484: LOG V339 V340 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V333 V324
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]

================================

Block 0x485
[0x485:0x48a]
---
Predecessors: [0xfa, 0x423]
Successors: [0x48b]
---
0x485 JUMPDEST
0x486 POP
0x487 POP
0x488 POP
0x489 POP
0x48a JUMP
---
0x485: JUMPDEST 
0x48a: JUMP {0x0, 0x48b}
---
Entry stack: [V12, 0x778, 0x0, S5, {0x0, 0x48b}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S5]

================================

Block 0x48b
[0x48b:0x48c]
---
Predecessors: [0x485, 0xb04, 0xb4b]
Successors: []
---
0x48b JUMPDEST
0x48c STOP
---
0x48b: JUMPDEST 
0x48c: STOP 
---
Entry stack: [V12, 0x778, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S0]

================================

Block 0x48d
[0x48d:0x493]
---
Predecessors: [0xb]
Successors: [0x494, 0x498]
---
0x48d JUMPDEST
0x48e CALLVALUE
0x48f ISZERO
0x490 PUSH2 0x498
0x493 JUMPI
---
0x48d: JUMPDEST 
0x48e: V341 = CALLVALUE
0x48f: V342 = ISZERO V341
0x490: V343 = 0x498
0x493: JUMPI 0x498 V342
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x494
[0x494:0x497]
---
Predecessors: [0x48d]
Successors: []
---
0x494 PUSH1 0x0
0x496 DUP1
0x497 REVERT
---
0x494: V344 = 0x0
0x497: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x498
[0x498:0x49f]
---
Predecessors: [0x48d]
Successors: [0x8a9]
---
0x498 JUMPDEST
0x499 PUSH2 0x4a0
0x49c PUSH2 0x8a9
0x49f JUMP
---
0x498: JUMPDEST 
0x499: V345 = 0x4a0
0x49c: V346 = 0x8a9
0x49f: JUMP 0x8a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4a0]
Exit stack: [V12, 0x4a0]

================================

Block 0x4a0
[0x4a0:0x4c3]
---
Predecessors: [0x8e8, 0xb8c]
Successors: [0x4c4]
---
0x4a0 JUMPDEST
0x4a1 PUSH1 0x40
0x4a3 MLOAD
0x4a4 PUSH1 0x20
0x4a6 DUP1
0x4a7 DUP3
0x4a8 MSTORE
0x4a9 DUP2
0x4aa SWAP1
0x4ab DUP2
0x4ac ADD
0x4ad DUP4
0x4ae DUP2
0x4af DUP2
0x4b0 MLOAD
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 PUSH1 0x20
0x4b5 ADD
0x4b6 SWAP2
0x4b7 POP
0x4b8 DUP1
0x4b9 MLOAD
0x4ba SWAP1
0x4bb PUSH1 0x20
0x4bd ADD
0x4be SWAP1
0x4bf DUP1
0x4c0 DUP4
0x4c1 DUP4
0x4c2 PUSH1 0x0
---
0x4a0: JUMPDEST 
0x4a1: V347 = 0x40
0x4a3: V348 = M[0x40]
0x4a4: V349 = 0x20
0x4a8: M[V348] = 0x20
0x4ac: V350 = ADD V348 0x20
0x4b0: V351 = M[S0]
0x4b2: M[V350] = V351
0x4b3: V352 = 0x20
0x4b5: V353 = ADD 0x20 V350
0x4b9: V354 = M[S0]
0x4bb: V355 = 0x20
0x4bd: V356 = ADD 0x20 S0
0x4c2: V357 = 0x0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V348, V348, V353, V356, V354, V354, V353, V356, 0x0]
Exit stack: [V12, S0, V348, V348, V353, V356, V354, V354, V353, V356, 0x0]

================================

Block 0x4c4
[0x4c4:0x4cc]
---
Predecessors: [0x4a0, 0x4d5, 0x6c7]
Successors: [0x4cd, 0x4dd]
---
0x4c4 JUMPDEST
0x4c5 DUP4
0x4c6 DUP2
0x4c7 LT
0x4c8 ISZERO
0x4c9 PUSH2 0x4dd
0x4cc JUMPI
---
0x4c4: JUMPDEST 
0x4c7: V358 = LT S0 S3
0x4c8: V359 = ISZERO V358
0x4c9: V360 = 0x4dd
0x4cc: JUMPI 0x4dd V359
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4cd
[0x4cd:0x4d4]
---
Predecessors: [0x4c4]
Successors: [0x4d5]
---
0x4cd DUP1
0x4ce DUP3
0x4cf ADD
0x4d0 MLOAD
0x4d1 DUP2
0x4d2 DUP5
0x4d3 ADD
0x4d4 MSTORE
---
0x4cf: V361 = ADD S1 S0
0x4d0: V362 = M[V361]
0x4d3: V363 = ADD S2 S0
0x4d4: M[V363] = V362
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4d5
[0x4d5:0x4dc]
---
Predecessors: [0x4cd]
Successors: [0x4c4]
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 PUSH2 0x4c4
0x4dc JUMP
---
0x4d5: JUMPDEST 
0x4d6: V364 = 0x20
0x4d8: V365 = ADD 0x20 S0
0x4d9: V366 = 0x4c4
0x4dc: JUMP 0x4c4
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V365]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, V365]

================================

Block 0x4dd
[0x4dd:0x4f0]
---
Predecessors: [0x4c4, 0x6b6]
Successors: [0x4f1, 0x50a]
---
0x4dd JUMPDEST
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 POP
0x4e2 SWAP1
0x4e3 POP
0x4e4 SWAP1
0x4e5 DUP2
0x4e6 ADD
0x4e7 SWAP1
0x4e8 PUSH1 0x1f
0x4ea AND
0x4eb DUP1
0x4ec ISZERO
0x4ed PUSH2 0x50a
0x4f0 JUMPI
---
0x4dd: JUMPDEST 
0x4e6: V367 = ADD S4 S6
0x4e8: V368 = 0x1f
0x4ea: V369 = AND 0x1f S4
0x4ec: V370 = ISZERO V369
0x4ed: V371 = 0x50a
0x4f0: JUMPI 0x50a V370
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V367, V369]
Exit stack: [V12, S9, S8, S7, V367, V369]

================================

Block 0x4f1
[0x4f1:0x509]
---
Predecessors: [0x4dd]
Successors: [0x50a]
---
0x4f1 DUP1
0x4f2 DUP3
0x4f3 SUB
0x4f4 DUP1
0x4f5 MLOAD
0x4f6 PUSH1 0x1
0x4f8 DUP4
0x4f9 PUSH1 0x20
0x4fb SUB
0x4fc PUSH2 0x100
0x4ff EXP
0x500 SUB
0x501 NOT
0x502 AND
0x503 DUP2
0x504 MSTORE
0x505 PUSH1 0x20
0x507 ADD
0x508 SWAP2
0x509 POP
---
0x4f3: V372 = SUB V367 V369
0x4f5: V373 = M[V372]
0x4f6: V374 = 0x1
0x4f9: V375 = 0x20
0x4fb: V376 = SUB 0x20 V369
0x4fc: V377 = 0x100
0x4ff: V378 = EXP 0x100 V376
0x500: V379 = SUB V378 0x1
0x501: V380 = NOT V379
0x502: V381 = AND V380 V373
0x504: M[V372] = V381
0x505: V382 = 0x20
0x507: V383 = ADD 0x20 V372
---
Entry stack: [V12, S4, S3, S2, V367, V369]
Stack pops: 2
Stack additions: [V383, S0]
Exit stack: [V12, S4, S3, S2, V383, V369]

================================

Block 0x50a
[0x50a:0x517]
---
Predecessors: [0x4dd, 0x4f1, 0x6cf]
Successors: []
---
0x50a JUMPDEST
0x50b POP
0x50c SWAP3
0x50d POP
0x50e POP
0x50f POP
0x510 PUSH1 0x40
0x512 MLOAD
0x513 DUP1
0x514 SWAP2
0x515 SUB
0x516 SWAP1
0x517 RETURN
---
0x50a: JUMPDEST 
0x510: V384 = 0x40
0x512: V385 = M[0x40]
0x515: V386 = SUB S1 V385
0x517: RETURN V385 V386
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x518
[0x518:0x51e]
---
Predecessors: [0x25]
Successors: [0x51f, 0x523]
---
0x518 JUMPDEST
0x519 CALLVALUE
0x51a ISZERO
0x51b PUSH2 0x523
0x51e JUMPI
---
0x518: JUMPDEST 
0x519: V387 = CALLVALUE
0x51a: V388 = ISZERO V387
0x51b: V389 = 0x523
0x51e: JUMPI 0x523 V388
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x51f
[0x51f:0x522]
---
Predecessors: [0x518]
Successors: []
---
0x51f PUSH1 0x0
0x521 DUP1
0x522 REVERT
---
0x51f: V390 = 0x0
0x522: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x523
[0x523:0x539]
---
Predecessors: [0x518]
Successors: [0x8eb]
---
0x523 JUMPDEST
0x524 PUSH2 0x53a
0x527 PUSH1 0x1
0x529 PUSH1 0xa0
0x52b PUSH1 0x2
0x52d EXP
0x52e SUB
0x52f PUSH1 0x4
0x531 CALLDATALOAD
0x532 AND
0x533 PUSH1 0x24
0x535 CALLDATALOAD
0x536 PUSH2 0x8eb
0x539 JUMP
---
0x523: JUMPDEST 
0x524: V391 = 0x53a
0x527: V392 = 0x1
0x529: V393 = 0xa0
0x52b: V394 = 0x2
0x52d: V395 = EXP 0x2 0xa0
0x52e: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52f: V397 = 0x4
0x531: V398 = CALLDATALOAD 0x4
0x532: V399 = AND V398 0xffffffffffffffffffffffffffffffffffffffff
0x533: V400 = 0x24
0x535: V401 = CALLDATALOAD 0x24
0x536: V402 = 0x8eb
0x539: JUMP 0x8eb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x53a, V399, V401]
Exit stack: [V12, 0x53a, V399, V401]

================================

Block 0x53a
[0x53a:0x54d]
---
Predecessors: [0x84d, 0x991, 0xac9, 0xc6c, 0xde0]
Successors: []
---
0x53a JUMPDEST
0x53b PUSH1 0x40
0x53d MLOAD
0x53e SWAP1
0x53f ISZERO
0x540 ISZERO
0x541 DUP2
0x542 MSTORE
0x543 PUSH1 0x20
0x545 ADD
0x546 PUSH1 0x40
0x548 MLOAD
0x549 DUP1
0x54a SWAP2
0x54b SUB
0x54c SWAP1
0x54d RETURN
---
0x53a: JUMPDEST 
0x53b: V403 = 0x40
0x53d: V404 = M[0x40]
0x53f: V405 = ISZERO S0
0x540: V406 = ISZERO V405
0x542: M[V404] = V406
0x543: V407 = 0x20
0x545: V408 = ADD 0x20 V404
0x546: V409 = 0x40
0x548: V410 = M[0x40]
0x54b: V411 = SUB V408 V410
0x54d: RETURN V410 V411
---
Entry stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, 0x0, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, 0x0, S3, S2, S1]

================================

Block 0x54e
[0x54e:0x554]
---
Predecessors: [0x30]
Successors: [0x555, 0x559]
---
0x54e JUMPDEST
0x54f CALLVALUE
0x550 ISZERO
0x551 PUSH2 0x559
0x554 JUMPI
---
0x54e: JUMPDEST 
0x54f: V412 = CALLVALUE
0x550: V413 = ISZERO V412
0x551: V414 = 0x559
0x554: JUMPI 0x559 V413
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x555
[0x555:0x558]
---
Predecessors: [0x54e]
Successors: []
---
0x555 PUSH1 0x0
0x557 DUP1
0x558 REVERT
---
0x555: V415 = 0x0
0x558: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x559
[0x559:0x560]
---
Predecessors: [0x54e]
Successors: [0x997]
---
0x559 JUMPDEST
0x55a PUSH2 0x561
0x55d PUSH2 0x997
0x560 JUMP
---
0x559: JUMPDEST 
0x55a: V416 = 0x561
0x55d: V417 = 0x997
0x560: JUMP 0x997
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x561]
Exit stack: [V12, 0x561]

================================

Block 0x561
[0x561:0x572]
---
Predecessors: [0x997, 0x99d, 0xb20, 0xb8f, 0xcc2, 0xde7]
Successors: []
---
0x561 JUMPDEST
0x562 PUSH1 0x40
0x564 MLOAD
0x565 SWAP1
0x566 DUP2
0x567 MSTORE
0x568 PUSH1 0x20
0x56a ADD
0x56b PUSH1 0x40
0x56d MLOAD
0x56e DUP1
0x56f SWAP2
0x570 SUB
0x571 SWAP1
0x572 RETURN
---
0x561: JUMPDEST 
0x562: V418 = 0x40
0x564: V419 = M[0x40]
0x567: M[V419] = S0
0x568: V420 = 0x20
0x56a: V421 = ADD 0x20 V419
0x56b: V422 = 0x40
0x56d: V423 = M[0x40]
0x570: V424 = SUB V421 V423
0x572: RETURN V423 V424
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x573
[0x573:0x579]
---
Predecessors: [0x3b]
Successors: [0x57a, 0x57e]
---
0x573 JUMPDEST
0x574 CALLVALUE
0x575 ISZERO
0x576 PUSH2 0x57e
0x579 JUMPI
---
0x573: JUMPDEST 
0x574: V425 = CALLVALUE
0x575: V426 = ISZERO V425
0x576: V427 = 0x57e
0x579: JUMPI 0x57e V426
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x57a
[0x57a:0x57d]
---
Predecessors: [0x573]
Successors: []
---
0x57a PUSH1 0x0
0x57c DUP1
0x57d REVERT
---
0x57a: V428 = 0x0
0x57d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x57e
[0x57e:0x585]
---
Predecessors: [0x573]
Successors: [0x99d]
---
0x57e JUMPDEST
0x57f PUSH2 0x561
0x582 PUSH2 0x99d
0x585 JUMP
---
0x57e: JUMPDEST 
0x57f: V429 = 0x561
0x582: V430 = 0x99d
0x585: JUMP 0x99d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x561]
Exit stack: [V12, 0x561]

================================

Block 0x586
[0x586:0x597]
---
Predecessors: []
Successors: []
---
0x586 JUMPDEST
0x587 PUSH1 0x40
0x589 MLOAD
0x58a SWAP1
0x58b DUP2
0x58c MSTORE
0x58d PUSH1 0x20
0x58f ADD
0x590 PUSH1 0x40
0x592 MLOAD
0x593 DUP1
0x594 SWAP2
0x595 SUB
0x596 SWAP1
0x597 RETURN
---
0x586: JUMPDEST 
0x587: V431 = 0x40
0x589: V432 = M[0x40]
0x58c: M[V432] = S0
0x58d: V433 = 0x20
0x58f: V434 = ADD 0x20 V432
0x590: V435 = 0x40
0x592: V436 = M[0x40]
0x595: V437 = SUB V434 V436
0x597: RETURN V436 V437
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x598
[0x598:0x59e]
---
Predecessors: [0x46]
Successors: [0x59f, 0x5a3]
---
0x598 JUMPDEST
0x599 CALLVALUE
0x59a ISZERO
0x59b PUSH2 0x5a3
0x59e JUMPI
---
0x598: JUMPDEST 
0x599: V438 = CALLVALUE
0x59a: V439 = ISZERO V438
0x59b: V440 = 0x5a3
0x59e: JUMPI 0x5a3 V439
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x59f
[0x59f:0x5a2]
---
Predecessors: [0x598]
Successors: []
---
0x59f PUSH1 0x0
0x5a1 DUP1
0x5a2 REVERT
---
0x59f: V441 = 0x0
0x5a2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5a3
[0x5a3:0x5aa]
---
Predecessors: [0x598]
Successors: [0x833]
---
0x5a3 JUMPDEST
0x5a4 PUSH2 0x53a
0x5a7 PUSH2 0x833
0x5aa JUMP
---
0x5a3: JUMPDEST 
0x5a4: V442 = 0x53a
0x5a7: V443 = 0x833
0x5aa: JUMP 0x833
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x53a]
Exit stack: [V12, 0x53a]

================================

Block 0x5ab
[0x5ab:0x5be]
---
Predecessors: []
Successors: []
---
0x5ab JUMPDEST
0x5ac PUSH1 0x40
0x5ae MLOAD
0x5af SWAP1
0x5b0 ISZERO
0x5b1 ISZERO
0x5b2 DUP2
0x5b3 MSTORE
0x5b4 PUSH1 0x20
0x5b6 ADD
0x5b7 PUSH1 0x40
0x5b9 MLOAD
0x5ba DUP1
0x5bb SWAP2
0x5bc SUB
0x5bd SWAP1
0x5be RETURN
---
0x5ab: JUMPDEST 
0x5ac: V444 = 0x40
0x5ae: V445 = M[0x40]
0x5b0: V446 = ISZERO S0
0x5b1: V447 = ISZERO V446
0x5b3: M[V445] = V447
0x5b4: V448 = 0x20
0x5b6: V449 = ADD 0x20 V445
0x5b7: V450 = 0x40
0x5b9: V451 = M[0x40]
0x5bc: V452 = SUB V449 V451
0x5be: RETURN V451 V452
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5bf
[0x5bf:0x5c5]
---
Predecessors: [0x51]
Successors: [0x5c6, 0x5ca]
---
0x5bf JUMPDEST
0x5c0 CALLVALUE
0x5c1 ISZERO
0x5c2 PUSH2 0x5ca
0x5c5 JUMPI
---
0x5bf: JUMPDEST 
0x5c0: V453 = CALLVALUE
0x5c1: V454 = ISZERO V453
0x5c2: V455 = 0x5ca
0x5c5: JUMPI 0x5ca V454
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5c6
[0x5c6:0x5c9]
---
Predecessors: [0x5bf]
Successors: []
---
0x5c6 PUSH1 0x0
0x5c8 DUP1
0x5c9 REVERT
---
0x5c6: V456 = 0x0
0x5c9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ca
[0x5ca:0x5e6]
---
Predecessors: [0x5bf]
Successors: [0x9a3]
---
0x5ca JUMPDEST
0x5cb PUSH2 0x53a
0x5ce PUSH1 0x1
0x5d0 PUSH1 0xa0
0x5d2 PUSH1 0x2
0x5d4 EXP
0x5d5 SUB
0x5d6 PUSH1 0x4
0x5d8 CALLDATALOAD
0x5d9 DUP2
0x5da AND
0x5db SWAP1
0x5dc PUSH1 0x24
0x5de CALLDATALOAD
0x5df AND
0x5e0 PUSH1 0x44
0x5e2 CALLDATALOAD
0x5e3 PUSH2 0x9a3
0x5e6 JUMP
---
0x5ca: JUMPDEST 
0x5cb: V457 = 0x53a
0x5ce: V458 = 0x1
0x5d0: V459 = 0xa0
0x5d2: V460 = 0x2
0x5d4: V461 = EXP 0x2 0xa0
0x5d5: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d6: V463 = 0x4
0x5d8: V464 = CALLDATALOAD 0x4
0x5da: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x5dc: V466 = 0x24
0x5de: V467 = CALLDATALOAD 0x24
0x5df: V468 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x5e0: V469 = 0x44
0x5e2: V470 = CALLDATALOAD 0x44
0x5e3: V471 = 0x9a3
0x5e6: JUMP 0x9a3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x53a, V465, V468, V470]
Exit stack: [V12, 0x53a, V465, V468, V470]

================================

Block 0x5e7
[0x5e7:0x5fa]
---
Predecessors: []
Successors: []
---
0x5e7 JUMPDEST
0x5e8 PUSH1 0x40
0x5ea MLOAD
0x5eb SWAP1
0x5ec ISZERO
0x5ed ISZERO
0x5ee DUP2
0x5ef MSTORE
0x5f0 PUSH1 0x20
0x5f2 ADD
0x5f3 PUSH1 0x40
0x5f5 MLOAD
0x5f6 DUP1
0x5f7 SWAP2
0x5f8 SUB
0x5f9 SWAP1
0x5fa RETURN
---
0x5e7: JUMPDEST 
0x5e8: V472 = 0x40
0x5ea: V473 = M[0x40]
0x5ec: V474 = ISZERO S0
0x5ed: V475 = ISZERO V474
0x5ef: M[V473] = V475
0x5f0: V476 = 0x20
0x5f2: V477 = ADD 0x20 V473
0x5f3: V478 = 0x40
0x5f5: V479 = M[0x40]
0x5f8: V480 = SUB V477 V479
0x5fa: RETURN V479 V480
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5fb
[0x5fb:0x601]
---
Predecessors: [0x5c]
Successors: [0x602, 0x606]
---
0x5fb JUMPDEST
0x5fc CALLVALUE
0x5fd ISZERO
0x5fe PUSH2 0x606
0x601 JUMPI
---
0x5fb: JUMPDEST 
0x5fc: V481 = CALLVALUE
0x5fd: V482 = ISZERO V481
0x5fe: V483 = 0x606
0x601: JUMPI 0x606 V482
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x602
[0x602:0x605]
---
Predecessors: [0x5fb]
Successors: []
---
0x602 PUSH1 0x0
0x604 DUP1
0x605 REVERT
---
0x602: V484 = 0x0
0x605: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x606
[0x606:0x60d]
---
Predecessors: [0x5fb]
Successors: [0xad5]
---
0x606 JUMPDEST
0x607 PUSH2 0x60e
0x60a PUSH2 0xad5
0x60d JUMP
---
0x606: JUMPDEST 
0x607: V485 = 0x60e
0x60a: V486 = 0xad5
0x60d: JUMP 0xad5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x60e]
Exit stack: [V12, 0x60e]

================================

Block 0x60e
[0x60e:0x623]
---
Predecessors: [0xad8]
Successors: []
---
0x60e JUMPDEST
0x60f PUSH1 0x40
0x611 MLOAD
0x612 PUSH1 0xff
0x614 SWAP1
0x615 SWAP2
0x616 AND
0x617 DUP2
0x618 MSTORE
0x619 PUSH1 0x20
0x61b ADD
0x61c PUSH1 0x40
0x61e MLOAD
0x61f DUP1
0x620 SWAP2
0x621 SUB
0x622 SWAP1
0x623 RETURN
---
0x60e: JUMPDEST 
0x60f: V487 = 0x40
0x611: V488 = M[0x40]
0x612: V489 = 0xff
0x616: V490 = AND 0x3 0xff
0x618: M[V488] = 0x3
0x619: V491 = 0x20
0x61b: V492 = ADD 0x20 V488
0x61c: V493 = 0x40
0x61e: V494 = M[0x40]
0x621: V495 = SUB V492 V494
0x623: RETURN V494 V495
---
Entry stack: [V12, 0x3]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x624
[0x624:0x62a]
---
Predecessors: [0x67]
Successors: [0x62b, 0x62f]
---
0x624 JUMPDEST
0x625 CALLVALUE
0x626 ISZERO
0x627 PUSH2 0x62f
0x62a JUMPI
---
0x624: JUMPDEST 
0x625: V496 = CALLVALUE
0x626: V497 = ISZERO V496
0x627: V498 = 0x62f
0x62a: JUMPI 0x62f V497
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x62b
[0x62b:0x62e]
---
Predecessors: [0x624]
Successors: []
---
0x62b PUSH1 0x0
0x62d DUP1
0x62e REVERT
---
0x62b: V499 = 0x0
0x62e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x62f
[0x62f:0x636]
---
Predecessors: [0x624]
Successors: [0xadb]
---
0x62f JUMPDEST
0x630 PUSH2 0x48b
0x633 PUSH2 0xadb
0x636 JUMP
---
0x62f: JUMPDEST 
0x630: V500 = 0x48b
0x633: V501 = 0xadb
0x636: JUMP 0xadb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x48b]
Exit stack: [V12, 0x48b]

================================

Block 0x637
[0x637:0x638]
---
Predecessors: []
Successors: []
---
0x637 JUMPDEST
0x638 STOP
---
0x637: JUMPDEST 
0x638: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x639
[0x639:0x63f]
---
Predecessors: [0x72]
Successors: [0x640, 0x644]
---
0x639 JUMPDEST
0x63a CALLVALUE
0x63b ISZERO
0x63c PUSH2 0x644
0x63f JUMPI
---
0x639: JUMPDEST 
0x63a: V502 = CALLVALUE
0x63b: V503 = ISZERO V502
0x63c: V504 = 0x644
0x63f: JUMPI 0x644 V503
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x640
[0x640:0x643]
---
Predecessors: [0x639]
Successors: []
---
0x640 PUSH1 0x0
0x642 DUP1
0x643 REVERT
---
0x640: V505 = 0x0
0x643: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x644
[0x644:0x657]
---
Predecessors: [0x639]
Successors: [0xb06]
---
0x644 JUMPDEST
0x645 PUSH2 0x561
0x648 PUSH1 0x1
0x64a PUSH1 0xa0
0x64c PUSH1 0x2
0x64e EXP
0x64f SUB
0x650 PUSH1 0x4
0x652 CALLDATALOAD
0x653 AND
0x654 PUSH2 0xb06
0x657 JUMP
---
0x644: JUMPDEST 
0x645: V506 = 0x561
0x648: V507 = 0x1
0x64a: V508 = 0xa0
0x64c: V509 = 0x2
0x64e: V510 = EXP 0x2 0xa0
0x64f: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x650: V512 = 0x4
0x652: V513 = CALLDATALOAD 0x4
0x653: V514 = AND V513 0xffffffffffffffffffffffffffffffffffffffff
0x654: V515 = 0xb06
0x657: JUMP 0xb06
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x561, V514]
Exit stack: [V12, 0x561, V514]

================================

Block 0x658
[0x658:0x669]
---
Predecessors: []
Successors: []
---
0x658 JUMPDEST
0x659 PUSH1 0x40
0x65b MLOAD
0x65c SWAP1
0x65d DUP2
0x65e MSTORE
0x65f PUSH1 0x20
0x661 ADD
0x662 PUSH1 0x40
0x664 MLOAD
0x665 DUP1
0x666 SWAP2
0x667 SUB
0x668 SWAP1
0x669 RETURN
---
0x658: JUMPDEST 
0x659: V516 = 0x40
0x65b: V517 = M[0x40]
0x65e: M[V517] = S0
0x65f: V518 = 0x20
0x661: V519 = ADD 0x20 V517
0x662: V520 = 0x40
0x664: V521 = M[0x40]
0x667: V522 = SUB V519 V521
0x669: RETURN V521 V522
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x66a
[0x66a:0x670]
---
Predecessors: [0x7d]
Successors: [0x671, 0x675]
---
0x66a JUMPDEST
0x66b CALLVALUE
0x66c ISZERO
0x66d PUSH2 0x675
0x670 JUMPI
---
0x66a: JUMPDEST 
0x66b: V523 = CALLVALUE
0x66c: V524 = ISZERO V523
0x66d: V525 = 0x675
0x670: JUMPI 0x675 V524
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x671
[0x671:0x674]
---
Predecessors: [0x66a]
Successors: []
---
0x671 PUSH1 0x0
0x673 DUP1
0x674 REVERT
---
0x671: V526 = 0x0
0x674: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x675
[0x675:0x67c]
---
Predecessors: [0x66a]
Successors: [0xb25]
---
0x675 JUMPDEST
0x676 PUSH2 0x48b
0x679 PUSH2 0xb25
0x67c JUMP
---
0x675: JUMPDEST 
0x676: V527 = 0x48b
0x679: V528 = 0xb25
0x67c: JUMP 0xb25
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x48b]
Exit stack: [V12, 0x48b]

================================

Block 0x67d
[0x67d:0x67e]
---
Predecessors: []
Successors: []
---
0x67d JUMPDEST
0x67e STOP
---
0x67d: JUMPDEST 
0x67e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x67f
[0x67f:0x685]
---
Predecessors: [0x88]
Successors: [0x686, 0x68a]
---
0x67f JUMPDEST
0x680 CALLVALUE
0x681 ISZERO
0x682 PUSH2 0x68a
0x685 JUMPI
---
0x67f: JUMPDEST 
0x680: V529 = CALLVALUE
0x681: V530 = ISZERO V529
0x682: V531 = 0x68a
0x685: JUMPI 0x68a V530
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x686
[0x686:0x689]
---
Predecessors: [0x67f]
Successors: []
---
0x686 PUSH1 0x0
0x688 DUP1
0x689 REVERT
---
0x686: V532 = 0x0
0x689: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68a
[0x68a:0x691]
---
Predecessors: [0x67f]
Successors: [0xb4d]
---
0x68a JUMPDEST
0x68b PUSH2 0x4a0
0x68e PUSH2 0xb4d
0x691 JUMP
---
0x68a: JUMPDEST 
0x68b: V533 = 0x4a0
0x68e: V534 = 0xb4d
0x691: JUMP 0xb4d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4a0]
Exit stack: [V12, 0x4a0]

================================

Block 0x692
[0x692:0x6b5]
---
Predecessors: []
Successors: [0x6b6]
---
0x692 JUMPDEST
0x693 PUSH1 0x40
0x695 MLOAD
0x696 PUSH1 0x20
0x698 DUP1
0x699 DUP3
0x69a MSTORE
0x69b DUP2
0x69c SWAP1
0x69d DUP2
0x69e ADD
0x69f DUP4
0x6a0 DUP2
0x6a1 DUP2
0x6a2 MLOAD
0x6a3 DUP2
0x6a4 MSTORE
0x6a5 PUSH1 0x20
0x6a7 ADD
0x6a8 SWAP2
0x6a9 POP
0x6aa DUP1
0x6ab MLOAD
0x6ac SWAP1
0x6ad PUSH1 0x20
0x6af ADD
0x6b0 SWAP1
0x6b1 DUP1
0x6b2 DUP4
0x6b3 DUP4
0x6b4 PUSH1 0x0
---
0x692: JUMPDEST 
0x693: V535 = 0x40
0x695: V536 = M[0x40]
0x696: V537 = 0x20
0x69a: M[V536] = 0x20
0x69e: V538 = ADD V536 0x20
0x6a2: V539 = M[S0]
0x6a4: M[V538] = V539
0x6a5: V540 = 0x20
0x6a7: V541 = ADD 0x20 V538
0x6ab: V542 = M[S0]
0x6ad: V543 = 0x20
0x6af: V544 = ADD 0x20 S0
0x6b4: V545 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V536, V536, V541, V544, V542, V542, V541, V544, 0x0]
Exit stack: [S0, V536, V536, V541, V544, V542, V542, V541, V544, 0x0]

================================

Block 0x6b6
[0x6b6:0x6be]
---
Predecessors: [0x692]
Successors: [0x4dd, 0x6bf]
---
0x6b6 JUMPDEST
0x6b7 DUP4
0x6b8 DUP2
0x6b9 LT
0x6ba ISZERO
0x6bb PUSH2 0x4dd
0x6be JUMPI
---
0x6b6: JUMPDEST 
0x6b9: V546 = LT 0x0 V542
0x6ba: V547 = ISZERO V546
0x6bb: V548 = 0x4dd
0x6be: JUMPI 0x4dd V547
---
Entry stack: [S9, V536, V536, V541, V544, V542, V542, V541, V544, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V536, V536, V541, V544, V542, V542, V541, V544, 0x0]

================================

Block 0x6bf
[0x6bf:0x6c6]
---
Predecessors: [0x6b6]
Successors: [0x6c7]
---
0x6bf DUP1
0x6c0 DUP3
0x6c1 ADD
0x6c2 MLOAD
0x6c3 DUP2
0x6c4 DUP5
0x6c5 ADD
0x6c6 MSTORE
---
0x6c1: V549 = ADD V544 0x0
0x6c2: V550 = M[V549]
0x6c5: V551 = ADD V541 0x0
0x6c6: M[V551] = V550
---
Entry stack: [S9, V536, V536, V541, V544, V542, V542, V541, V544, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V536, V536, V541, V544, V542, V542, V541, V544, 0x0]

================================

Block 0x6c7
[0x6c7:0x6ce]
---
Predecessors: [0x6bf]
Successors: [0x4c4]
---
0x6c7 JUMPDEST
0x6c8 PUSH1 0x20
0x6ca ADD
0x6cb PUSH2 0x4c4
0x6ce JUMP
---
0x6c7: JUMPDEST 
0x6c8: V552 = 0x20
0x6ca: V553 = ADD 0x20 0x0
0x6cb: V554 = 0x4c4
0x6ce: JUMP 0x4c4
---
Entry stack: [S9, V536, V536, V541, V544, V542, V542, V541, V544, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V536, V536, V541, V544, V542, V542, V541, V544, 0x20]

================================

Block 0x6cf
[0x6cf:0x6e2]
---
Predecessors: []
Successors: [0x50a, 0x6e3]
---
0x6cf JUMPDEST
0x6d0 POP
0x6d1 POP
0x6d2 POP
0x6d3 POP
0x6d4 SWAP1
0x6d5 POP
0x6d6 SWAP1
0x6d7 DUP2
0x6d8 ADD
0x6d9 SWAP1
0x6da PUSH1 0x1f
0x6dc AND
0x6dd DUP1
0x6de ISZERO
0x6df PUSH2 0x50a
0x6e2 JUMPI
---
0x6cf: JUMPDEST 
0x6d8: V555 = ADD S4 S6
0x6da: V556 = 0x1f
0x6dc: V557 = AND 0x1f S4
0x6de: V558 = ISZERO V557
0x6df: V559 = 0x50a
0x6e2: JUMPI 0x50a V558
---
Entry stack: []
Stack pops: 7
Stack additions: [V555, V557]
Exit stack: [V555, V557]

================================

Block 0x6e3
[0x6e3:0x6fb]
---
Predecessors: [0x6cf]
Successors: [0x6fc]
---
0x6e3 DUP1
0x6e4 DUP3
0x6e5 SUB
0x6e6 DUP1
0x6e7 MLOAD
0x6e8 PUSH1 0x1
0x6ea DUP4
0x6eb PUSH1 0x20
0x6ed SUB
0x6ee PUSH2 0x100
0x6f1 EXP
0x6f2 SUB
0x6f3 NOT
0x6f4 AND
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x20
0x6f9 ADD
0x6fa SWAP2
0x6fb POP
---
0x6e5: V560 = SUB V555 V557
0x6e7: V561 = M[V560]
0x6e8: V562 = 0x1
0x6eb: V563 = 0x20
0x6ed: V564 = SUB 0x20 V557
0x6ee: V565 = 0x100
0x6f1: V566 = EXP 0x100 V564
0x6f2: V567 = SUB V566 0x1
0x6f3: V568 = NOT V567
0x6f4: V569 = AND V568 V561
0x6f6: M[V560] = V569
0x6f7: V570 = 0x20
0x6f9: V571 = ADD 0x20 V560
---
Entry stack: [V555, V557]
Stack pops: 2
Stack additions: [V571, S0]
Exit stack: [V571, V557]

================================

Block 0x6fc
[0x6fc:0x709]
---
Predecessors: [0x6e3]
Successors: []
---
0x6fc JUMPDEST
0x6fd POP
0x6fe SWAP3
0x6ff POP
0x700 POP
0x701 POP
0x702 PUSH1 0x40
0x704 MLOAD
0x705 DUP1
0x706 SWAP2
0x707 SUB
0x708 SWAP1
0x709 RETURN
---
0x6fc: JUMPDEST 
0x702: V572 = 0x40
0x704: V573 = M[0x40]
0x707: V574 = SUB V571 V573
0x709: RETURN V573 V574
---
Entry stack: [V571, V557]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x70a
[0x70a:0x710]
---
Predecessors: [0x93]
Successors: [0x711, 0x715]
---
0x70a JUMPDEST
0x70b CALLVALUE
0x70c ISZERO
0x70d PUSH2 0x715
0x710 JUMPI
---
0x70a: JUMPDEST 
0x70b: V575 = CALLVALUE
0x70c: V576 = ISZERO V575
0x70d: V577 = 0x715
0x710: JUMPI 0x715 V576
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x711
[0x711:0x714]
---
Predecessors: [0x70a]
Successors: []
---
0x711 PUSH1 0x0
0x713 DUP1
0x714 REVERT
---
0x711: V578 = 0x0
0x714: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x715
[0x715:0x71c]
---
Predecessors: [0x70a]
Successors: [0xb8f]
---
0x715 JUMPDEST
0x716 PUSH2 0x561
0x719 PUSH2 0xb8f
0x71c JUMP
---
0x715: JUMPDEST 
0x716: V579 = 0x561
0x719: V580 = 0xb8f
0x71c: JUMP 0xb8f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x561]
Exit stack: [V12, 0x561]

================================

Block 0x71d
[0x71d:0x72e]
---
Predecessors: []
Successors: []
---
0x71d JUMPDEST
0x71e PUSH1 0x40
0x720 MLOAD
0x721 SWAP1
0x722 DUP2
0x723 MSTORE
0x724 PUSH1 0x20
0x726 ADD
0x727 PUSH1 0x40
0x729 MLOAD
0x72a DUP1
0x72b SWAP2
0x72c SUB
0x72d SWAP1
0x72e RETURN
---
0x71d: JUMPDEST 
0x71e: V581 = 0x40
0x720: V582 = M[0x40]
0x723: M[V582] = S0
0x724: V583 = 0x20
0x726: V584 = ADD 0x20 V582
0x727: V585 = 0x40
0x729: V586 = M[0x40]
0x72c: V587 = SUB V584 V586
0x72e: RETURN V586 V587
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x72f
[0x72f:0x735]
---
Predecessors: [0x9e]
Successors: [0x736, 0x73a]
---
0x72f JUMPDEST
0x730 CALLVALUE
0x731 ISZERO
0x732 PUSH2 0x73a
0x735 JUMPI
---
0x72f: JUMPDEST 
0x730: V588 = CALLVALUE
0x731: V589 = ISZERO V588
0x732: V590 = 0x73a
0x735: JUMPI 0x73a V589
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x736
[0x736:0x739]
---
Predecessors: [0x72f]
Successors: []
---
0x736 PUSH1 0x0
0x738 DUP1
0x739 REVERT
---
0x736: V591 = 0x0
0x739: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73a
[0x73a:0x750]
---
Predecessors: [0x72f]
Successors: [0xb95]
---
0x73a JUMPDEST
0x73b PUSH2 0x53a
0x73e PUSH1 0x1
0x740 PUSH1 0xa0
0x742 PUSH1 0x2
0x744 EXP
0x745 SUB
0x746 PUSH1 0x4
0x748 CALLDATALOAD
0x749 AND
0x74a PUSH1 0x24
0x74c CALLDATALOAD
0x74d PUSH2 0xb95
0x750 JUMP
---
0x73a: JUMPDEST 
0x73b: V592 = 0x53a
0x73e: V593 = 0x1
0x740: V594 = 0xa0
0x742: V595 = 0x2
0x744: V596 = EXP 0x2 0xa0
0x745: V597 = SUB 0x10000000000000000000000000000000000000000 0x1
0x746: V598 = 0x4
0x748: V599 = CALLDATALOAD 0x4
0x749: V600 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x74a: V601 = 0x24
0x74c: V602 = CALLDATALOAD 0x24
0x74d: V603 = 0xb95
0x750: JUMP 0xb95
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x53a, V600, V602]
Exit stack: [V12, 0x53a, V600, V602]

================================

Block 0x751
[0x751:0x764]
---
Predecessors: []
Successors: []
---
0x751 JUMPDEST
0x752 PUSH1 0x40
0x754 MLOAD
0x755 SWAP1
0x756 ISZERO
0x757 ISZERO
0x758 DUP2
0x759 MSTORE
0x75a PUSH1 0x20
0x75c ADD
0x75d PUSH1 0x40
0x75f MLOAD
0x760 DUP1
0x761 SWAP2
0x762 SUB
0x763 SWAP1
0x764 RETURN
---
0x751: JUMPDEST 
0x752: V604 = 0x40
0x754: V605 = M[0x40]
0x756: V606 = ISZERO S0
0x757: V607 = ISZERO V606
0x759: M[V605] = V607
0x75a: V608 = 0x20
0x75c: V609 = ADD 0x20 V605
0x75d: V610 = 0x40
0x75f: V611 = M[0x40]
0x762: V612 = SUB V609 V611
0x764: RETURN V611 V612
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x765
[0x765:0x76b]
---
Predecessors: [0xa9]
Successors: [0x76c, 0x770]
---
0x765 JUMPDEST
0x766 CALLVALUE
0x767 ISZERO
0x768 PUSH2 0x770
0x76b JUMPI
---
0x765: JUMPDEST 
0x766: V613 = CALLVALUE
0x767: V614 = ISZERO V613
0x768: V615 = 0x770
0x76b: JUMPI 0x770 V614
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76c
[0x76c:0x76f]
---
Predecessors: [0x765]
Successors: []
---
0x76c PUSH1 0x0
0x76e DUP1
0x76f REVERT
---
0x76c: V616 = 0x0
0x76f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x770
[0x770:0x777]
---
Predecessors: [0x765]
Successors: [0xc75]
---
0x770 JUMPDEST
0x771 PUSH2 0x778
0x774 PUSH2 0xc75
0x777 JUMP
---
0x770: JUMPDEST 
0x771: V617 = 0x778
0x774: V618 = 0xc75
0x777: JUMP 0xc75
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x778]
Exit stack: [V12, 0x778]

================================

Block 0x778
[0x778:0x7a3]
---
Predecessors: [0xc95]
Successors: []
---
0x778 JUMPDEST
0x779 PUSH1 0x40
0x77b MLOAD
0x77c SWAP4
0x77d DUP5
0x77e MSTORE
0x77f PUSH1 0x20
0x781 DUP5
0x782 ADD
0x783 SWAP3
0x784 SWAP1
0x785 SWAP3
0x786 MSTORE
0x787 PUSH1 0x40
0x789 DUP1
0x78a DUP5
0x78b ADD
0x78c SWAP2
0x78d SWAP1
0x78e SWAP2
0x78f MSTORE
0x790 SWAP1
0x791 ISZERO
0x792 ISZERO
0x793 PUSH1 0x60
0x795 DUP4
0x796 ADD
0x797 MSTORE
0x798 PUSH1 0x80
0x79a SWAP1
0x79b SWAP2
0x79c ADD
0x79d SWAP1
0x79e MLOAD
0x79f DUP1
0x7a0 SWAP2
0x7a1 SUB
0x7a2 SWAP1
0x7a3 RETURN
---
0x778: JUMPDEST 
0x779: V619 = 0x40
0x77b: V620 = M[0x40]
0x77e: M[V620] = S3
0x77f: V621 = 0x20
0x782: V622 = ADD V620 0x20
0x786: M[V622] = S2
0x787: V623 = 0x40
0x78b: V624 = ADD V620 0x40
0x78f: M[V624] = S1
0x791: V625 = ISZERO S0
0x792: V626 = ISZERO V625
0x793: V627 = 0x60
0x796: V628 = ADD V620 0x60
0x797: M[V628] = V626
0x798: V629 = 0x80
0x79c: V630 = ADD V620 0x80
0x79e: V631 = M[0x40]
0x7a1: V632 = SUB V630 V631
0x7a3: RETURN V631 V632
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a4
[0x7a4:0x7aa]
---
Predecessors: [0xb4]
Successors: [0x7ab, 0x7af]
---
0x7a4 JUMPDEST
0x7a5 CALLVALUE
0x7a6 ISZERO
0x7a7 PUSH2 0x7af
0x7aa JUMPI
---
0x7a4: JUMPDEST 
0x7a5: V633 = CALLVALUE
0x7a6: V634 = ISZERO V633
0x7a7: V635 = 0x7af
0x7aa: JUMPI 0x7af V634
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ab
[0x7ab:0x7ae]
---
Predecessors: [0x7a4]
Successors: []
---
0x7ab PUSH1 0x0
0x7ad DUP1
0x7ae REVERT
---
0x7ab: V636 = 0x0
0x7ae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7af
[0x7af:0x7c8]
---
Predecessors: [0x7a4]
Successors: [0xc9b]
---
0x7af JUMPDEST
0x7b0 PUSH2 0x561
0x7b3 PUSH1 0x1
0x7b5 PUSH1 0xa0
0x7b7 PUSH1 0x2
0x7b9 EXP
0x7ba SUB
0x7bb PUSH1 0x4
0x7bd CALLDATALOAD
0x7be DUP2
0x7bf AND
0x7c0 SWAP1
0x7c1 PUSH1 0x24
0x7c3 CALLDATALOAD
0x7c4 AND
0x7c5 PUSH2 0xc9b
0x7c8 JUMP
---
0x7af: JUMPDEST 
0x7b0: V637 = 0x561
0x7b3: V638 = 0x1
0x7b5: V639 = 0xa0
0x7b7: V640 = 0x2
0x7b9: V641 = EXP 0x2 0xa0
0x7ba: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7bb: V643 = 0x4
0x7bd: V644 = CALLDATALOAD 0x4
0x7bf: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x7c1: V646 = 0x24
0x7c3: V647 = CALLDATALOAD 0x24
0x7c4: V648 = AND V647 0xffffffffffffffffffffffffffffffffffffffff
0x7c5: V649 = 0xc9b
0x7c8: JUMP 0xc9b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x561, V645, V648]
Exit stack: [V12, 0x561, V645, V648]

================================

Block 0x7c9
[0x7c9:0x7da]
---
Predecessors: []
Successors: []
---
0x7c9 JUMPDEST
0x7ca PUSH1 0x40
0x7cc MLOAD
0x7cd SWAP1
0x7ce DUP2
0x7cf MSTORE
0x7d0 PUSH1 0x20
0x7d2 ADD
0x7d3 PUSH1 0x40
0x7d5 MLOAD
0x7d6 DUP1
0x7d7 SWAP2
0x7d8 SUB
0x7d9 SWAP1
0x7da RETURN
---
0x7c9: JUMPDEST 
0x7ca: V650 = 0x40
0x7cc: V651 = M[0x40]
0x7cf: M[V651] = S0
0x7d0: V652 = 0x20
0x7d2: V653 = ADD 0x20 V651
0x7d3: V654 = 0x40
0x7d5: V655 = M[0x40]
0x7d8: V656 = SUB V653 V655
0x7da: RETURN V655 V656
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7db
[0x7db:0x7e1]
---
Predecessors: [0xbf]
Successors: [0x7e2, 0x7e6]
---
0x7db JUMPDEST
0x7dc CALLVALUE
0x7dd ISZERO
0x7de PUSH2 0x7e6
0x7e1 JUMPI
---
0x7db: JUMPDEST 
0x7dc: V657 = CALLVALUE
0x7dd: V658 = ISZERO V657
0x7de: V659 = 0x7e6
0x7e1: JUMPI 0x7e6 V658
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e2
[0x7e2:0x7e5]
---
Predecessors: [0x7db]
Successors: []
---
0x7e2 PUSH1 0x0
0x7e4 DUP1
0x7e5 REVERT
---
0x7e2: V660 = 0x0
0x7e5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e6
[0x7e6:0x7f9]
---
Predecessors: [0x7db]
Successors: [0xcc8]
---
0x7e6 JUMPDEST
0x7e7 PUSH2 0x53a
0x7ea PUSH1 0x1
0x7ec PUSH1 0xa0
0x7ee PUSH1 0x2
0x7f0 EXP
0x7f1 SUB
0x7f2 PUSH1 0x4
0x7f4 CALLDATALOAD
0x7f5 AND
0x7f6 PUSH2 0xcc8
0x7f9 JUMP
---
0x7e6: JUMPDEST 
0x7e7: V661 = 0x53a
0x7ea: V662 = 0x1
0x7ec: V663 = 0xa0
0x7ee: V664 = 0x2
0x7f0: V665 = EXP 0x2 0xa0
0x7f1: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f2: V667 = 0x4
0x7f4: V668 = CALLDATALOAD 0x4
0x7f5: V669 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x7f6: V670 = 0xcc8
0x7f9: JUMP 0xcc8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x53a, V669]
Exit stack: [V12, 0x53a, V669]

================================

Block 0x7fa
[0x7fa:0x80d]
---
Predecessors: []
Successors: []
---
0x7fa JUMPDEST
0x7fb PUSH1 0x40
0x7fd MLOAD
0x7fe SWAP1
0x7ff ISZERO
0x800 ISZERO
0x801 DUP2
0x802 MSTORE
0x803 PUSH1 0x20
0x805 ADD
0x806 PUSH1 0x40
0x808 MLOAD
0x809 DUP1
0x80a SWAP2
0x80b SUB
0x80c SWAP1
0x80d RETURN
---
0x7fa: JUMPDEST 
0x7fb: V671 = 0x40
0x7fd: V672 = M[0x40]
0x7ff: V673 = ISZERO S0
0x800: V674 = ISZERO V673
0x802: M[V672] = V674
0x803: V675 = 0x20
0x805: V676 = ADD 0x20 V672
0x806: V677 = 0x40
0x808: V678 = M[0x40]
0x80b: V679 = SUB V676 V678
0x80d: RETURN V678 V679
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x80e
[0x80e:0x814]
---
Predecessors: [0xca]
Successors: [0x815, 0x819]
---
0x80e JUMPDEST
0x80f CALLVALUE
0x810 ISZERO
0x811 PUSH2 0x819
0x814 JUMPI
---
0x80e: JUMPDEST 
0x80f: V680 = CALLVALUE
0x810: V681 = ISZERO V680
0x811: V682 = 0x819
0x814: JUMPI 0x819 V681
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x815
[0x815:0x818]
---
Predecessors: [0x80e]
Successors: []
---
0x815 PUSH1 0x0
0x817 DUP1
0x818 REVERT
---
0x815: V683 = 0x0
0x818: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x819
[0x819:0x820]
---
Predecessors: [0x80e]
Successors: [0xde7]
---
0x819 JUMPDEST
0x81a PUSH2 0x561
0x81d PUSH2 0xde7
0x820 JUMP
---
0x819: JUMPDEST 
0x81a: V684 = 0x561
0x81d: V685 = 0xde7
0x820: JUMP 0xde7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x561]
Exit stack: [V12, 0x561]

================================

Block 0x821
[0x821:0x832]
---
Predecessors: []
Successors: []
---
0x821 JUMPDEST
0x822 PUSH1 0x40
0x824 MLOAD
0x825 SWAP1
0x826 DUP2
0x827 MSTORE
0x828 PUSH1 0x20
0x82a ADD
0x82b PUSH1 0x40
0x82d MLOAD
0x82e DUP1
0x82f SWAP2
0x830 SUB
0x831 SWAP1
0x832 RETURN
---
0x821: JUMPDEST 
0x822: V686 = 0x40
0x824: V687 = M[0x40]
0x827: M[V687] = S0
0x828: V688 = 0x20
0x82a: V689 = ADD 0x20 V687
0x82b: V690 = 0x40
0x82d: V691 = M[0x40]
0x830: V692 = SUB V689 V691
0x832: RETURN V691 V692
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x833
[0x833:0x841]
---
Predecessors: [0xd9, 0x5a3, 0xc75]
Successors: [0x842, 0x84a]
---
0x833 JUMPDEST
0x834 PUSH1 0x0
0x836 PUSH1 0x1
0x838 SLOAD
0x839 TIMESTAMP
0x83a LT
0x83b ISZERO
0x83c DUP1
0x83d ISZERO
0x83e PUSH2 0x84a
0x841 JUMPI
---
0x833: JUMPDEST 
0x834: V693 = 0x0
0x836: V694 = 0x1
0x838: V695 = S[0x1]
0x839: V696 = TIMESTAMP
0x83a: V697 = LT V696 V695
0x83b: V698 = ISZERO V697
0x83d: V699 = ISZERO V698
0x83e: V700 = 0x84a
0x841: JUMPI 0x84a V699
---
Entry stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, 0x0, S3, S2, S1, {0xe7, 0x53a, 0xc8c}]
Stack pops: 0
Stack additions: [0x0, V698]
Exit stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, 0x0, S3, S2, S1, {0xe7, 0x53a, 0xc8c}, 0x0, V698]

================================

Block 0x842
[0x842:0x849]
---
Predecessors: [0x833]
Successors: [0x84a]
---
0x842 POP
0x843 PUSH1 0x2
0x845 SLOAD
0x846 PUSH1 0xff
0x848 AND
0x849 ISZERO
---
0x843: V701 = 0x2
0x845: V702 = S[0x2]
0x846: V703 = 0xff
0x848: V704 = AND 0xff V702
0x849: V705 = ISZERO V704
---
Entry stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, 0x0, S5, S4, S3, {0xe7, 0x53a, 0xc8c}, 0x0, V698]
Stack pops: 1
Stack additions: [V705]
Exit stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, 0x0, S5, S4, S3, {0xe7, 0x53a, 0xc8c}, 0x0, V705]

================================

Block 0x84a
[0x84a:0x84c]
---
Predecessors: [0x833, 0x842]
Successors: [0x84d]
---
0x84a JUMPDEST
0x84b SWAP1
0x84c POP
---
0x84a: JUMPDEST 
---
Entry stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, 0x0, S5, S4, S3, {0xe7, 0x53a, 0xc8c}, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x778, 0x0, S8, {0x0, 0x48b}, 0x0, S5, S4, S3, {0xe7, 0x53a, 0xc8c}, S0]

================================

Block 0x84d
[0x84d:0x84f]
---
Predecessors: [0x84a]
Successors: [0xe7, 0x53a, 0xc8c]
---
0x84d JUMPDEST
0x84e SWAP1
0x84f JUMP
---
0x84d: JUMPDEST 
0x84f: JUMP {0xe7, 0x53a, 0xc8c}
---
Entry stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, 0x0, S4, S3, S2, {0xe7, 0x53a, 0xc8c}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, 0x0, S4, S3, S2, S0]

================================

Block 0x850
[0x850:0x85c]
---
Predecessors: [0x13b]
Successors: [0x85d, 0x865]
---
0x850 JUMPDEST
0x851 PUSH1 0x0
0x853 DUP1
0x854 DUP3
0x855 PUSH1 0x2
0x857 EQ
0x858 ISZERO
0x859 PUSH2 0x865
0x85c JUMPI
---
0x850: JUMPDEST 
0x851: V706 = 0x0
0x855: V707 = 0x2
0x857: V708 = EQ 0x2 V110
0x858: V709 = ISZERO V708
0x859: V710 = 0x865
0x85c: JUMPI 0x865 V709
---
Entry stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, V112, S4, S3, S2, 0x159, V110]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V12, 0x778, 0x0, S7, {0x0, 0x48b}, V112, S4, S3, S2, 0x159, V110, 0x0, 0x0]

================================

Block 0x85d
[0x85d:0x864]
---
Predecessors: [0x850]
Successors: [0x8a3]
---
0x85d PUSH1 0x1
0x85f SWAP2
0x860 POP
0x861 PUSH2 0x8a3
0x864 JUMP
---
0x85d: V711 = 0x1
0x861: V712 = 0x8a3
0x864: JUMP 0x8a3
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x1, 0x0]

================================

Block 0x865
[0x865:0x868]
---
Predecessors: [0x850]
Successors: [0x869]
---
0x865 JUMPDEST
0x866 POP
0x867 PUSH1 0x3
---
0x865: JUMPDEST 
0x867: V713 = 0x3
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x3]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, 0x3]

================================

Block 0x869
[0x869:0x871]
---
Predecessors: [0x865, 0x894]
Successors: [0xded]
---
0x869 JUMPDEST
0x86a PUSH2 0x872
0x86d DUP4
0x86e PUSH2 0xded
0x871 JUMP
---
0x869: JUMPDEST 
0x86a: V714 = 0x872
0x86e: V715 = 0xded
0x871: JUMP 0xded
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x872, S2]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0, 0x872, V110]

================================

Block 0x872
[0x872:0x878]
---
Predecessors: [0xe2e]
Successors: [0x879, 0x89c]
---
0x872 JUMPDEST
0x873 DUP2
0x874 GT
0x875 PUSH2 0x89c
0x878 JUMPI
---
0x872: JUMPDEST 
0x874: V716 = GT S1 S0
0x875: V717 = 0x89c
0x878: JUMPI 0x89c V716
---
Entry stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, V112, S7, S6, S5, 0x159, V110, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1]
Exit stack: [V12, 0x778, 0x0, S10, {0x0, 0x48b}, V112, S7, S6, S5, 0x159, V110, 0x0, S1]

================================

Block 0x879
[0x879:0x881]
---
Predecessors: [0x872]
Successors: [0x882, 0x883]
---
0x879 DUP1
0x87a DUP4
0x87b DUP2
0x87c ISZERO
0x87d ISZERO
0x87e PUSH2 0x883
0x881 JUMPI
---
0x87c: V718 = ISZERO S0
0x87d: V719 = ISZERO V718
0x87e: V720 = 0x883
0x881: JUMPI 0x883 V719
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S0, S2]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0, S0, V110]

================================

Block 0x882
[0x882:0x882]
---
Predecessors: [0x879]
Successors: []
---
0x882 INVALID
---
0x882: INVALID 
---
Entry stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, V112, S8, S7, S6, 0x159, V110, 0x0, S2, S1, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, V112, S8, S7, S6, 0x159, V110, 0x0, S2, S1, V110]

================================

Block 0x883
[0x883:0x88a]
---
Predecessors: [0x879]
Successors: [0x88b, 0x893]
---
0x883 JUMPDEST
0x884 MOD
0x885 ISZERO
0x886 ISZERO
0x887 PUSH2 0x893
0x88a JUMPI
---
0x883: JUMPDEST 
0x884: V721 = MOD V110 S1
0x885: V722 = ISZERO V721
0x886: V723 = ISZERO V722
0x887: V724 = 0x893
0x88a: JUMPI 0x893 V723
---
Entry stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, V112, S8, S7, S6, 0x159, V110, 0x0, S2, S1, V110]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, V112, S8, S7, S6, 0x159, V110, 0x0, S2]

================================

Block 0x88b
[0x88b:0x892]
---
Predecessors: [0x883]
Successors: [0x8a3]
---
0x88b PUSH1 0x0
0x88d SWAP2
0x88e POP
0x88f PUSH2 0x8a3
0x892 JUMP
---
0x88b: V725 = 0x0
0x88f: V726 = 0x8a3
0x892: JUMP 0x8a3
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0]

================================

Block 0x893
[0x893:0x893]
---
Predecessors: [0x883]
Successors: [0x894]
---
0x893 JUMPDEST
---
0x893: JUMPDEST 
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0]

================================

Block 0x894
[0x894:0x89b]
---
Predecessors: [0x893]
Successors: [0x869]
---
0x894 JUMPDEST
0x895 PUSH1 0x2
0x897 ADD
0x898 PUSH2 0x869
0x89b JUMP
---
0x894: JUMPDEST 
0x895: V727 = 0x2
0x897: V728 = ADD 0x2 S0
0x898: V729 = 0x869
0x89b: JUMP 0x869
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0]
Stack pops: 1
Stack additions: [V728]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, V728]

================================

Block 0x89c
[0x89c:0x8a2]
---
Predecessors: [0x872]
Successors: [0x8a3]
---
0x89c JUMPDEST
0x89d PUSH1 0x2
0x89f DUP4
0x8a0 GT
0x8a1 SWAP2
0x8a2 POP
---
0x89c: JUMPDEST 
0x89d: V730 = 0x2
0x8a0: V731 = GT V110 0x2
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, 0x0, S0]
Stack pops: 3
Stack additions: [S2, V731, S0]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, V731, S0]

================================

Block 0x8a3
[0x8a3:0x8a8]
---
Predecessors: [0x85d, 0x88b, 0x89c]
Successors: [0x159]
---
0x8a3 JUMPDEST
0x8a4 POP
0x8a5 SWAP2
0x8a6 SWAP1
0x8a7 POP
0x8a8 JUMP
---
0x8a3: JUMPDEST 
0x8a8: JUMP 0x159
---
Entry stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, 0x159, V110, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, 0x778, 0x0, S9, {0x0, 0x48b}, V112, S6, S5, S4, S1]

================================

Block 0x8a9
[0x8a9:0x8b0]
---
Predecessors: [0x498]
Successors: [0xe34]
---
0x8a9 JUMPDEST
0x8aa PUSH2 0x8b1
0x8ad PUSH2 0xe34
0x8b0 JUMP
---
0x8a9: JUMPDEST 
0x8aa: V732 = 0x8b1
0x8ad: V733 = 0xe34
0x8b0: JUMP 0xe34
---
Entry stack: [V12, 0x4a0]
Stack pops: 0
Stack additions: [0x8b1]
Exit stack: [V12, 0x4a0, 0x8b1]

================================

Block 0x8b1
[0x8b1:0x8e7]
---
Predecessors: [0xe34]
Successors: [0x8e8]
---
0x8b1 JUMPDEST
0x8b2 PUSH1 0x40
0x8b4 DUP1
0x8b5 MLOAD
0x8b6 SWAP1
0x8b7 DUP2
0x8b8 ADD
0x8b9 PUSH1 0x40
0x8bb MSTORE
0x8bc PUSH1 0x12
0x8be DUP2
0x8bf MSTORE
0x8c0 PUSH32 0x50455420457468657269756d20546f6b656e0000000000000000000000000000
0x8e1 PUSH1 0x20
0x8e3 DUP3
0x8e4 ADD
0x8e5 MSTORE
0x8e6 SWAP1
0x8e7 POP
---
0x8b1: JUMPDEST 
0x8b2: V734 = 0x40
0x8b5: V735 = M[0x40]
0x8b8: V736 = ADD V735 0x40
0x8b9: V737 = 0x40
0x8bb: M[0x40] = V736
0x8bc: V738 = 0x12
0x8bf: M[V735] = 0x12
0x8c0: V739 = 0x50455420457468657269756d20546f6b656e0000000000000000000000000000
0x8e1: V740 = 0x20
0x8e4: V741 = ADD V735 0x20
0x8e5: M[V741] = 0x50455420457468657269756d20546f6b656e0000000000000000000000000000
---
Entry stack: [V12, 0x4a0, V1166]
Stack pops: 1
Stack additions: [V735]
Exit stack: [V12, 0x4a0, V735]

================================

Block 0x8e8
[0x8e8:0x8ea]
---
Predecessors: [0x8b1]
Successors: [0x4a0]
---
0x8e8 JUMPDEST
0x8e9 SWAP1
0x8ea JUMP
---
0x8e8: JUMPDEST 
0x8ea: JUMP 0x4a0
---
Entry stack: [V12, 0x4a0, V735]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V735]

================================

Block 0x8eb
[0x8eb:0x8f6]
---
Predecessors: [0x523]
Successors: [0x8f7, 0x920]
---
0x8eb JUMPDEST
0x8ec PUSH1 0x0
0x8ee DUP2
0x8ef ISZERO
0x8f0 DUP1
0x8f1 ISZERO
0x8f2 SWAP1
0x8f3 PUSH2 0x920
0x8f6 JUMPI
---
0x8eb: JUMPDEST 
0x8ec: V742 = 0x0
0x8ef: V743 = ISZERO V401
0x8f1: V744 = ISZERO V743
0x8f3: V745 = 0x920
0x8f6: JUMPI 0x920 V743
---
Entry stack: [V12, 0x53a, V399, V401]
Stack pops: 1
Stack additions: [S0, 0x0, V744]
Exit stack: [V12, 0x53a, V399, V401, 0x0, V744]

================================

Block 0x8f7
[0x8f7:0x91f]
---
Predecessors: [0x8eb]
Successors: [0x920]
---
0x8f7 POP
0x8f8 PUSH1 0x1
0x8fa PUSH1 0xa0
0x8fc PUSH1 0x2
0x8fe EXP
0x8ff SUB
0x900 CALLER
0x901 DUP2
0x902 AND
0x903 PUSH1 0x0
0x905 SWAP1
0x906 DUP2
0x907 MSTORE
0x908 PUSH1 0x4
0x90a PUSH1 0x20
0x90c SWAP1
0x90d DUP2
0x90e MSTORE
0x90f PUSH1 0x40
0x911 DUP1
0x912 DUP4
0x913 SHA3
0x914 SWAP4
0x915 DUP8
0x916 AND
0x917 DUP4
0x918 MSTORE
0x919 SWAP3
0x91a SWAP1
0x91b MSTORE
0x91c SHA3
0x91d SLOAD
0x91e ISZERO
0x91f ISZERO
---
0x8f8: V746 = 0x1
0x8fa: V747 = 0xa0
0x8fc: V748 = 0x2
0x8fe: V749 = EXP 0x2 0xa0
0x8ff: V750 = SUB 0x10000000000000000000000000000000000000000 0x1
0x900: V751 = CALLER
0x902: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0x903: V753 = 0x0
0x907: M[0x0] = V752
0x908: V754 = 0x4
0x90a: V755 = 0x20
0x90e: M[0x20] = 0x4
0x90f: V756 = 0x40
0x913: V757 = SHA3 0x0 0x40
0x916: V758 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x918: M[0x0] = V758
0x91b: M[0x20] = V757
0x91c: V759 = SHA3 0x0 0x40
0x91d: V760 = S[V759]
0x91e: V761 = ISZERO V760
0x91f: V762 = ISZERO V761
---
Entry stack: [V12, 0x53a, V399, V401, 0x0, V744]
Stack pops: 4
Stack additions: [S3, S2, S1, V762]
Exit stack: [V12, 0x53a, V399, V401, 0x0, V762]

================================

Block 0x920
[0x920:0x925]
---
Predecessors: [0x8eb, 0x8f7]
Successors: [0x926, 0x92d]
---
0x920 JUMPDEST
0x921 ISZERO
0x922 PUSH2 0x92d
0x925 JUMPI
---
0x920: JUMPDEST 
0x921: V763 = ISZERO S0
0x922: V764 = 0x92d
0x925: JUMPI 0x92d V763
---
Entry stack: [V12, 0x53a, V399, V401, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x53a, V399, V401, 0x0]

================================

Block 0x926
[0x926:0x92c]
---
Predecessors: [0x920]
Successors: [0x991]
---
0x926 POP
0x927 PUSH1 0x0
0x929 PUSH2 0x991
0x92c JUMP
---
0x927: V765 = 0x0
0x929: V766 = 0x991
0x92c: JUMP 0x991
---
Entry stack: [V12, 0x53a, V399, V401, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x53a, V399, V401, 0x0]

================================

Block 0x92d
[0x92d:0x990]
---
Predecessors: [0x920]
Successors: [0x991]
---
0x92d JUMPDEST
0x92e PUSH1 0x1
0x930 PUSH1 0xa0
0x932 PUSH1 0x2
0x934 EXP
0x935 SUB
0x936 CALLER
0x937 DUP2
0x938 AND
0x939 PUSH1 0x0
0x93b DUP2
0x93c DUP2
0x93d MSTORE
0x93e PUSH1 0x4
0x940 PUSH1 0x20
0x942 SWAP1
0x943 DUP2
0x944 MSTORE
0x945 PUSH1 0x40
0x947 DUP1
0x948 DUP4
0x949 SHA3
0x94a SWAP5
0x94b DUP9
0x94c AND
0x94d DUP1
0x94e DUP5
0x94f MSTORE
0x950 SWAP5
0x951 SWAP1
0x952 SWAP2
0x953 MSTORE
0x954 SWAP1
0x955 DUP2
0x956 SWAP1
0x957 SHA3
0x958 DUP6
0x959 SWAP1
0x95a SSTORE
0x95b PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x97c SWAP1
0x97d DUP6
0x97e SWAP1
0x97f MLOAD
0x980 SWAP1
0x981 DUP2
0x982 MSTORE
0x983 PUSH1 0x20
0x985 ADD
0x986 PUSH1 0x40
0x988 MLOAD
0x989 DUP1
0x98a SWAP2
0x98b SUB
0x98c SWAP1
0x98d LOG3
0x98e POP
0x98f PUSH1 0x1
---
0x92d: JUMPDEST 
0x92e: V767 = 0x1
0x930: V768 = 0xa0
0x932: V769 = 0x2
0x934: V770 = EXP 0x2 0xa0
0x935: V771 = SUB 0x10000000000000000000000000000000000000000 0x1
0x936: V772 = CALLER
0x938: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V772
0x939: V774 = 0x0
0x93d: M[0x0] = V773
0x93e: V775 = 0x4
0x940: V776 = 0x20
0x944: M[0x20] = 0x4
0x945: V777 = 0x40
0x949: V778 = SHA3 0x0 0x40
0x94c: V779 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x94f: M[0x0] = V779
0x953: M[0x20] = V778
0x957: V780 = SHA3 0x0 0x40
0x95a: S[V780] = V401
0x95b: V781 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x97f: V782 = M[0x40]
0x982: M[V782] = V401
0x983: V783 = 0x20
0x985: V784 = ADD 0x20 V782
0x986: V785 = 0x40
0x988: V786 = M[0x40]
0x98b: V787 = SUB V784 V786
0x98d: LOG V786 V787 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V773 V779
0x98f: V788 = 0x1
---
Entry stack: [V12, 0x53a, V399, V401, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, 0x53a, V399, V401, 0x1]

================================

Block 0x991
[0x991:0x996]
---
Predecessors: [0x926, 0x92d]
Successors: [0x53a]
---
0x991 JUMPDEST
0x992 SWAP3
0x993 SWAP2
0x994 POP
0x995 POP
0x996 JUMP
---
0x991: JUMPDEST 
0x996: JUMP 0x53a
---
Entry stack: [V12, 0x53a, V399, V401, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x997
[0x997:0x99c]
---
Predecessors: [0x559]
Successors: [0x561]
---
0x997 JUMPDEST
0x998 PUSH1 0x6
0x99a SLOAD
0x99b DUP2
0x99c JUMP
---
0x997: JUMPDEST 
0x998: V789 = 0x6
0x99a: V790 = S[0x6]
0x99c: JUMP 0x561
---
Entry stack: [V12, 0x561]
Stack pops: 1
Stack additions: [S0, V790]
Exit stack: [V12, 0x561, V790]

================================

Block 0x99d
[0x99d:0x9a2]
---
Predecessors: [0x57e]
Successors: [0x561]
---
0x99d JUMPDEST
0x99e PUSH1 0x8
0x9a0 SLOAD
0x9a1 DUP2
0x9a2 JUMP
---
0x99d: JUMPDEST 
0x99e: V791 = 0x8
0x9a0: V792 = S[0x8]
0x9a2: JUMP 0x561
---
Entry stack: [V12, 0x561]
Stack pops: 1
Stack additions: [S0, V792]
Exit stack: [V12, 0x561, V792]

================================

Block 0x9a3
[0x9a3:0x9b3]
---
Predecessors: [0x5ca]
Successors: [0x9b4, 0x9b8]
---
0x9a3 JUMPDEST
0x9a4 PUSH1 0x0
0x9a6 DUP1
0x9a7 DUP1
0x9a8 DUP1
0x9a9 DUP1
0x9aa DUP1
0x9ab PUSH1 0x64
0x9ad CALLDATASIZE
0x9ae LT
0x9af ISZERO
0x9b0 PUSH2 0x9b8
0x9b3 JUMPI
---
0x9a3: JUMPDEST 
0x9a4: V793 = 0x0
0x9ab: V794 = 0x64
0x9ad: V795 = CALLDATASIZE
0x9ae: V796 = LT V795 0x64
0x9af: V797 = ISZERO V796
0x9b0: V798 = 0x9b8
0x9b3: JUMPI 0x9b8 V797
---
Entry stack: [V12, 0x53a, V465, V468, V470]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9b4
[0x9b4:0x9b7]
---
Predecessors: [0x9a3]
Successors: []
---
0x9b4 PUSH1 0x0
0x9b6 DUP1
0x9b7 REVERT
---
0x9b4: V799 = 0x0
0x9b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9b8
[0x9b8:0x9bf]
---
Predecessors: [0x9a3]
Successors: [0x9c0, 0x9c8]
---
0x9b8 JUMPDEST
0x9b9 DUP7
0x9ba ISZERO
0x9bb ISZERO
0x9bc PUSH2 0x9c8
0x9bf JUMPI
---
0x9b8: JUMPDEST 
0x9ba: V800 = ISZERO V470
0x9bb: V801 = ISZERO V800
0x9bc: V802 = 0x9c8
0x9bf: JUMPI 0x9c8 V801
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9c0
[0x9c0:0x9c7]
---
Predecessors: [0x9b8]
Successors: [0xac8]
---
0x9c0 PUSH1 0x0
0x9c2 SWAP6
0x9c3 POP
0x9c4 PUSH2 0xac8
0x9c7 JUMP
---
0x9c0: V803 = 0x0
0x9c4: V804 = 0xac8
0x9c7: JUMP 0xac8
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9c8
[0x9c8:0xa24]
---
Predecessors: [0x9b8]
Successors: [0xa25, 0xa27]
---
0x9c8 JUMPDEST
0x9c9 POP
0x9ca POP
0x9cb POP
0x9cc POP
0x9cd PUSH1 0x1
0x9cf PUSH1 0xa0
0x9d1 PUSH1 0x2
0x9d3 EXP
0x9d4 SUB
0x9d5 DUP6
0x9d6 DUP2
0x9d7 AND
0x9d8 PUSH1 0x0
0x9da SWAP1
0x9db DUP2
0x9dc MSTORE
0x9dd PUSH1 0x3
0x9df PUSH1 0x20
0x9e1 DUP2
0x9e2 DUP2
0x9e3 MSTORE
0x9e4 PUSH1 0x40
0x9e6 DUP1
0x9e7 DUP5
0x9e8 SHA3
0x9e9 SLOAD
0x9ea PUSH1 0x4
0x9ec DUP4
0x9ed MSTORE
0x9ee DUP2
0x9ef DUP6
0x9f0 SHA3
0x9f1 CALLER
0x9f2 DUP8
0x9f3 AND
0x9f4 DUP7
0x9f5 MSTORE
0x9f6 DUP4
0x9f7 MSTORE
0x9f8 DUP2
0x9f9 DUP6
0x9fa SHA3
0x9fb SLOAD
0x9fc SWAP6
0x9fd DUP11
0x9fe AND
0x9ff DUP6
0xa00 MSTORE
0xa01 SWAP3
0xa02 SWAP1
0xa03 SWAP2
0xa04 MSTORE
0xa05 SWAP1
0xa06 SWAP2
0xa07 SHA3
0xa08 SLOAD
0xa09 SWAP1
0xa0a SWAP3
0xa0b POP
0xa0c DUP5
0xa0d DUP4
0xa0e GT
0xa0f DUP1
0xa10 ISZERO
0xa11 SWAP2
0xa12 DUP7
0xa13 DUP5
0xa14 GT
0xa15 ISZERO
0xa16 SWAP2
0xa17 DUP8
0xa18 DUP3
0xa19 ADD
0xa1a SWAP2
0xa1b SWAP1
0xa1c SWAP2
0xa1d GT
0xa1e SWAP1
0xa1f DUP4
0xa20 SWAP1
0xa21 PUSH2 0xa27
0xa24 JUMPI
---
0x9c8: JUMPDEST 
0x9cd: V805 = 0x1
0x9cf: V806 = 0xa0
0x9d1: V807 = 0x2
0x9d3: V808 = EXP 0x2 0xa0
0x9d4: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d7: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x9d8: V811 = 0x0
0x9dc: M[0x0] = V810
0x9dd: V812 = 0x3
0x9df: V813 = 0x20
0x9e3: M[0x20] = 0x3
0x9e4: V814 = 0x40
0x9e8: V815 = SHA3 0x0 0x40
0x9e9: V816 = S[V815]
0x9ea: V817 = 0x4
0x9ed: M[0x20] = 0x4
0x9f0: V818 = SHA3 0x0 0x40
0x9f1: V819 = CALLER
0x9f3: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V819
0x9f5: M[0x0] = V820
0x9f7: M[0x20] = V818
0x9fa: V821 = SHA3 0x0 0x40
0x9fb: V822 = S[V821]
0x9fe: V823 = AND V468 0xffffffffffffffffffffffffffffffffffffffff
0xa00: M[0x0] = V823
0xa04: M[0x20] = 0x3
0xa07: V824 = SHA3 0x0 0x40
0xa08: V825 = S[V824]
0xa0e: V826 = GT V816 V470
0xa10: V827 = ISZERO V826
0xa14: V828 = GT V822 V470
0xa15: V829 = ISZERO V828
0xa19: V830 = ADD V825 V470
0xa1d: V831 = GT V830 V825
0xa21: V832 = 0xa27
0xa24: JUMPI 0xa27 V826
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V816, V822, V827, V829, V831, V827]
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831, V827]

================================

Block 0xa25
[0xa25:0xa26]
---
Predecessors: [0x9c8]
Successors: [0xa27]
---
0xa25 POP
0xa26 DUP2
---
0xa25: NOP 
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831, V827]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831, V829]

================================

Block 0xa27
[0xa27:0xa2d]
---
Predecessors: [0x9c8, 0xa25]
Successors: [0xa2e, 0xa31]
---
0xa27 JUMPDEST
0xa28 DUP1
0xa29 ISZERO
0xa2a PUSH2 0xa31
0xa2d JUMPI
---
0xa27: JUMPDEST 
0xa29: V833 = ISZERO S0
0xa2a: V834 = 0xa31
0xa2d: JUMPI 0xa31 V833
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831, S0]

================================

Block 0xa2e
[0xa2e:0xa30]
---
Predecessors: [0xa27]
Successors: [0xa31]
---
0xa2e POP
0xa2f DUP1
0xa30 ISZERO
---
0xa30: V835 = ISZERO V831
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831, S0]
Stack pops: 2
Stack additions: [S1, V835]
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831, V835]

================================

Block 0xa31
[0xa31:0xa36]
---
Predecessors: [0xa27, 0xa2e]
Successors: [0xa37, 0xac3]
---
0xa31 JUMPDEST
0xa32 ISZERO
0xa33 PUSH2 0xac3
0xa36 JUMPI
---
0xa31: JUMPDEST 
0xa32: V836 = ISZERO S0
0xa33: V837 = 0xac3
0xa36: JUMPI 0xac3 V836
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831]

================================

Block 0xa37
[0xa37:0xac2]
---
Predecessors: [0xa31]
Successors: [0xac8]
---
0xa37 PUSH1 0x1
0xa39 PUSH1 0xa0
0xa3b PUSH1 0x2
0xa3d EXP
0xa3e SUB
0xa3f DUP1
0xa40 DUP10
0xa41 AND
0xa42 PUSH1 0x0
0xa44 DUP2
0xa45 DUP2
0xa46 MSTORE
0xa47 PUSH1 0x3
0xa49 PUSH1 0x20
0xa4b SWAP1
0xa4c DUP2
0xa4d MSTORE
0xa4e PUSH1 0x40
0xa50 DUP1
0xa51 DUP4
0xa52 SHA3
0xa53 DUP1
0xa54 SLOAD
0xa55 DUP14
0xa56 ADD
0xa57 SWAP1
0xa58 SSTORE
0xa59 DUP14
0xa5a DUP6
0xa5b AND
0xa5c DUP1
0xa5d DUP5
0xa5e MSTORE
0xa5f DUP2
0xa60 DUP5
0xa61 SHA3
0xa62 DUP1
0xa63 SLOAD
0xa64 DUP15
0xa65 SWAP1
0xa66 SUB
0xa67 SWAP1
0xa68 SSTORE
0xa69 PUSH1 0x4
0xa6b DUP4
0xa6c MSTORE
0xa6d DUP2
0xa6e DUP5
0xa6f SHA3
0xa70 CALLER
0xa71 SWAP1
0xa72 SWAP7
0xa73 AND
0xa74 DUP5
0xa75 MSTORE
0xa76 SWAP5
0xa77 SWAP1
0xa78 SWAP2
0xa79 MSTORE
0xa7a SWAP1
0xa7b DUP2
0xa7c SWAP1
0xa7d SHA3
0xa7e DUP1
0xa7f SLOAD
0xa80 DUP12
0xa81 SWAP1
0xa82 SUB
0xa83 SWAP1
0xa84 SSTORE
0xa85 SWAP1
0xa86 SWAP2
0xa87 SWAP1
0xa88 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaa9 SWAP1
0xaaa DUP11
0xaab SWAP1
0xaac MLOAD
0xaad SWAP1
0xaae DUP2
0xaaf MSTORE
0xab0 PUSH1 0x20
0xab2 ADD
0xab3 PUSH1 0x40
0xab5 MLOAD
0xab6 DUP1
0xab7 SWAP2
0xab8 SUB
0xab9 SWAP1
0xaba LOG3
0xabb PUSH1 0x1
0xabd SWAP6
0xabe POP
0xabf PUSH2 0xac8
0xac2 JUMP
---
0xa37: V838 = 0x1
0xa39: V839 = 0xa0
0xa3b: V840 = 0x2
0xa3d: V841 = EXP 0x2 0xa0
0xa3e: V842 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa41: V843 = AND V468 0xffffffffffffffffffffffffffffffffffffffff
0xa42: V844 = 0x0
0xa46: M[0x0] = V843
0xa47: V845 = 0x3
0xa49: V846 = 0x20
0xa4d: M[0x20] = 0x3
0xa4e: V847 = 0x40
0xa52: V848 = SHA3 0x0 0x40
0xa54: V849 = S[V848]
0xa56: V850 = ADD V470 V849
0xa58: S[V848] = V850
0xa5b: V851 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0xa5e: M[0x0] = V851
0xa61: V852 = SHA3 0x0 0x40
0xa63: V853 = S[V852]
0xa66: V854 = SUB V853 V470
0xa68: S[V852] = V854
0xa69: V855 = 0x4
0xa6c: M[0x20] = 0x4
0xa6f: V856 = SHA3 0x0 0x40
0xa70: V857 = CALLER
0xa73: V858 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0xa75: M[0x0] = V858
0xa79: M[0x20] = V856
0xa7d: V859 = SHA3 0x0 0x40
0xa7f: V860 = S[V859]
0xa82: V861 = SUB V860 V470
0xa84: S[V859] = V861
0xa88: V862 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaac: V863 = M[0x40]
0xaaf: M[V863] = V470
0xab0: V864 = 0x20
0xab2: V865 = ADD 0x20 V863
0xab3: V866 = 0x40
0xab5: V867 = M[0x40]
0xab8: V868 = SUB V865 V867
0xaba: LOG V867 V868 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V851 V843
0xabb: V869 = 0x1
0xabf: V870 = 0xac8
0xac2: JUMP 0xac8
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x53a, V465, V468, V470, 0x1, V816, V822, V827, V829, V831]

================================

Block 0xac3
[0xac3:0xac7]
---
Predecessors: [0xa31]
Successors: [0xac8]
---
0xac3 JUMPDEST
0xac4 PUSH1 0x0
0xac6 SWAP6
0xac7 POP
---
0xac3: JUMPDEST 
0xac4: V871 = 0x0
---
Entry stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x53a, V465, V468, V470, 0x0, V816, V822, V827, V829, V831]

================================

Block 0xac8
[0xac8:0xac8]
---
Predecessors: [0x9c0, 0xa37, 0xac3]
Successors: [0xac9]
---
0xac8 JUMPDEST
---
0xac8: JUMPDEST 
---
Entry stack: [V12, 0x53a, V465, V468, V470, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x53a, V465, V468, V470, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0xac9
[0xac9:0xad4]
---
Predecessors: [0xac8]
Successors: [0x53a]
---
0xac9 JUMPDEST
0xaca POP
0xacb POP
0xacc POP
0xacd POP
0xace POP
0xacf SWAP4
0xad0 SWAP3
0xad1 POP
0xad2 POP
0xad3 POP
0xad4 JUMP
---
0xac9: JUMPDEST 
0xad4: JUMP 0x53a
---
Entry stack: [V12, 0x53a, V465, V468, V470, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0xad5
[0xad5:0xad7]
---
Predecessors: [0x606]
Successors: [0xad8]
---
0xad5 JUMPDEST
0xad6 PUSH1 0x3
---
0xad5: JUMPDEST 
0xad6: V872 = 0x3
---
Entry stack: [V12, 0x60e]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x60e, 0x3]

================================

Block 0xad8
[0xad8:0xada]
---
Predecessors: [0xad5]
Successors: [0x60e]
---
0xad8 JUMPDEST
0xad9 SWAP1
0xada JUMP
---
0xad8: JUMPDEST 
0xada: JUMP 0x60e
---
Entry stack: [V12, 0x60e, 0x3]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x3]

================================

Block 0xadb
[0xadb:0xaf1]
---
Predecessors: [0x62f]
Successors: [0xaf2, 0xaf6]
---
0xadb JUMPDEST
0xadc PUSH1 0x0
0xade SLOAD
0xadf CALLER
0xae0 PUSH1 0x1
0xae2 PUSH1 0xa0
0xae4 PUSH1 0x2
0xae6 EXP
0xae7 SUB
0xae8 SWAP1
0xae9 DUP2
0xaea AND
0xaeb SWAP2
0xaec AND
0xaed EQ
0xaee PUSH2 0xaf6
0xaf1 JUMPI
---
0xadb: JUMPDEST 
0xadc: V873 = 0x0
0xade: V874 = S[0x0]
0xadf: V875 = CALLER
0xae0: V876 = 0x1
0xae2: V877 = 0xa0
0xae4: V878 = 0x2
0xae6: V879 = EXP 0x2 0xa0
0xae7: V880 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaea: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff V875
0xaec: V882 = AND V874 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V883 = EQ V882 V881
0xaee: V884 = 0xaf6
0xaf1: JUMPI 0xaf6 V883
---
Entry stack: [V12, 0x48b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x48b]

================================

Block 0xaf2
[0xaf2:0xaf5]
---
Predecessors: [0xadb]
Successors: []
---
0xaf2 PUSH1 0x0
0xaf4 DUP1
0xaf5 REVERT
---
0xaf2: V885 = 0x0
0xaf5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x48b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x48b]

================================

Block 0xaf6
[0xaf6:0xb03]
---
Predecessors: [0xadb]
Successors: [0xb04]
---
0xaf6 JUMPDEST
0xaf7 PUSH1 0x2
0xaf9 DUP1
0xafa SLOAD
0xafb PUSH1 0xff
0xafd NOT
0xafe AND
0xaff PUSH1 0x1
0xb01 OR
0xb02 SWAP1
0xb03 SSTORE
---
0xaf6: JUMPDEST 
0xaf7: V886 = 0x2
0xafa: V887 = S[0x2]
0xafb: V888 = 0xff
0xafd: V889 = NOT 0xff
0xafe: V890 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V887
0xaff: V891 = 0x1
0xb01: V892 = OR 0x1 V890
0xb03: S[0x2] = V892
---
Entry stack: [V12, 0x48b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x48b]

================================

Block 0xb04
[0xb04:0xb05]
---
Predecessors: [0xaf6]
Successors: [0x48b]
---
0xb04 JUMPDEST
0xb05 JUMP
---
0xb04: JUMPDEST 
0xb05: JUMP 0x48b
---
Entry stack: [V12, 0x48b]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xb06
[0xb06:0xb1f]
---
Predecessors: [0x644]
Successors: [0xb20]
---
0xb06 JUMPDEST
0xb07 PUSH1 0x1
0xb09 PUSH1 0xa0
0xb0b PUSH1 0x2
0xb0d EXP
0xb0e SUB
0xb0f DUP2
0xb10 AND
0xb11 PUSH1 0x0
0xb13 SWAP1
0xb14 DUP2
0xb15 MSTORE
0xb16 PUSH1 0x3
0xb18 PUSH1 0x20
0xb1a MSTORE
0xb1b PUSH1 0x40
0xb1d SWAP1
0xb1e SHA3
0xb1f SLOAD
---
0xb06: JUMPDEST 
0xb07: V893 = 0x1
0xb09: V894 = 0xa0
0xb0b: V895 = 0x2
0xb0d: V896 = EXP 0x2 0xa0
0xb0e: V897 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb10: V898 = AND V514 0xffffffffffffffffffffffffffffffffffffffff
0xb11: V899 = 0x0
0xb15: M[0x0] = V898
0xb16: V900 = 0x3
0xb18: V901 = 0x20
0xb1a: M[0x20] = 0x3
0xb1b: V902 = 0x40
0xb1e: V903 = SHA3 0x0 0x40
0xb1f: V904 = S[V903]
---
Entry stack: [V12, 0x561, V514]
Stack pops: 1
Stack additions: [S0, V904]
Exit stack: [V12, 0x561, V514, V904]

================================

Block 0xb20
[0xb20:0xb24]
---
Predecessors: [0xb06]
Successors: [0x561]
---
0xb20 JUMPDEST
0xb21 SWAP2
0xb22 SWAP1
0xb23 POP
0xb24 JUMP
---
0xb20: JUMPDEST 
0xb24: JUMP 0x561
---
Entry stack: [V12, 0x561, V514, V904]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V904]

================================

Block 0xb25
[0xb25:0xb3b]
---
Predecessors: [0x675]
Successors: [0xb3c, 0xb40]
---
0xb25 JUMPDEST
0xb26 PUSH1 0x0
0xb28 SLOAD
0xb29 CALLER
0xb2a PUSH1 0x1
0xb2c PUSH1 0xa0
0xb2e PUSH1 0x2
0xb30 EXP
0xb31 SUB
0xb32 SWAP1
0xb33 DUP2
0xb34 AND
0xb35 SWAP2
0xb36 AND
0xb37 EQ
0xb38 PUSH2 0xb40
0xb3b JUMPI
---
0xb25: JUMPDEST 
0xb26: V905 = 0x0
0xb28: V906 = S[0x0]
0xb29: V907 = CALLER
0xb2a: V908 = 0x1
0xb2c: V909 = 0xa0
0xb2e: V910 = 0x2
0xb30: V911 = EXP 0x2 0xa0
0xb31: V912 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb34: V913 = AND 0xffffffffffffffffffffffffffffffffffffffff V907
0xb36: V914 = AND V906 0xffffffffffffffffffffffffffffffffffffffff
0xb37: V915 = EQ V914 V913
0xb38: V916 = 0xb40
0xb3b: JUMPI 0xb40 V915
---
Entry stack: [V12, 0x48b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x48b]

================================

Block 0xb3c
[0xb3c:0xb3f]
---
Predecessors: [0xb25]
Successors: []
---
0xb3c PUSH1 0x0
0xb3e DUP1
0xb3f REVERT
---
0xb3c: V917 = 0x0
0xb3f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x48b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x48b]

================================

Block 0xb40
[0xb40:0xb4a]
---
Predecessors: [0xb25]
Successors: [0xb4b]
---
0xb40 JUMPDEST
0xb41 PUSH1 0x2
0xb43 DUP1
0xb44 SLOAD
0xb45 PUSH1 0xff
0xb47 NOT
0xb48 AND
0xb49 SWAP1
0xb4a SSTORE
---
0xb40: JUMPDEST 
0xb41: V918 = 0x2
0xb44: V919 = S[0x2]
0xb45: V920 = 0xff
0xb47: V921 = NOT 0xff
0xb48: V922 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V919
0xb4a: S[0x2] = V922
---
Entry stack: [V12, 0x48b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x48b]

================================

Block 0xb4b
[0xb4b:0xb4c]
---
Predecessors: [0xb40]
Successors: [0x48b]
---
0xb4b JUMPDEST
0xb4c JUMP
---
0xb4b: JUMPDEST 
0xb4c: JUMP 0x48b
---
Entry stack: [V12, 0x48b]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xb4d
[0xb4d:0xb54]
---
Predecessors: [0x68a]
Successors: [0xe34]
---
0xb4d JUMPDEST
0xb4e PUSH2 0xb55
0xb51 PUSH2 0xe34
0xb54 JUMP
---
0xb4d: JUMPDEST 
0xb4e: V923 = 0xb55
0xb51: V924 = 0xe34
0xb54: JUMP 0xe34
---
Entry stack: [V12, 0x4a0]
Stack pops: 0
Stack additions: [0xb55]
Exit stack: [V12, 0x4a0, 0xb55]

================================

Block 0xb55
[0xb55:0xb8b]
---
Predecessors: [0xe34]
Successors: [0xb8c]
---
0xb55 JUMPDEST
0xb56 PUSH1 0x40
0xb58 DUP1
0xb59 MLOAD
0xb5a SWAP1
0xb5b DUP2
0xb5c ADD
0xb5d PUSH1 0x40
0xb5f MSTORE
0xb60 PUSH1 0x5
0xb62 DUP2
0xb63 MSTORE
0xb64 PUSH32 0x5045544554000000000000000000000000000000000000000000000000000000
0xb85 PUSH1 0x20
0xb87 DUP3
0xb88 ADD
0xb89 MSTORE
0xb8a SWAP1
0xb8b POP
---
0xb55: JUMPDEST 
0xb56: V925 = 0x40
0xb59: V926 = M[0x40]
0xb5c: V927 = ADD V926 0x40
0xb5d: V928 = 0x40
0xb5f: M[0x40] = V927
0xb60: V929 = 0x5
0xb63: M[V926] = 0x5
0xb64: V930 = 0x5045544554000000000000000000000000000000000000000000000000000000
0xb85: V931 = 0x20
0xb88: V932 = ADD V926 0x20
0xb89: M[V932] = 0x5045544554000000000000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x4a0, V1166]
Stack pops: 1
Stack additions: [V926]
Exit stack: [V12, 0x4a0, V926]

================================

Block 0xb8c
[0xb8c:0xb8e]
---
Predecessors: [0xb55]
Successors: [0x4a0]
---
0xb8c JUMPDEST
0xb8d SWAP1
0xb8e JUMP
---
0xb8c: JUMPDEST 
0xb8e: JUMP 0x4a0
---
Entry stack: [V12, 0x4a0, V926]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V926]

================================

Block 0xb8f
[0xb8f:0xb94]
---
Predecessors: [0x715]
Successors: [0x561]
---
0xb8f JUMPDEST
0xb90 PUSH1 0x7
0xb92 SLOAD
0xb93 DUP2
0xb94 JUMP
---
0xb8f: JUMPDEST 
0xb90: V933 = 0x7
0xb92: V934 = S[0x7]
0xb94: JUMP 0x561
---
Entry stack: [V12, 0x561]
Stack pops: 1
Stack additions: [S0, V934]
Exit stack: [V12, 0x561, V934]

================================

Block 0xb95
[0xb95:0xba3]
---
Predecessors: [0x73a]
Successors: [0xba4, 0xba8]
---
0xb95 JUMPDEST
0xb96 PUSH1 0x0
0xb98 DUP1
0xb99 DUP1
0xb9a DUP1
0xb9b PUSH1 0x44
0xb9d CALLDATASIZE
0xb9e LT
0xb9f ISZERO
0xba0 PUSH2 0xba8
0xba3 JUMPI
---
0xb95: JUMPDEST 
0xb96: V935 = 0x0
0xb9b: V936 = 0x44
0xb9d: V937 = CALLDATASIZE
0xb9e: V938 = LT V937 0x44
0xb9f: V939 = ISZERO V938
0xba0: V940 = 0xba8
0xba3: JUMPI 0xba8 V939
---
Entry stack: [V12, 0x53a, V600, V602]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x53a, V600, V602, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xba4
[0xba4:0xba7]
---
Predecessors: [0xb95]
Successors: []
---
0xba4 PUSH1 0x0
0xba6 DUP1
0xba7 REVERT
---
0xba4: V941 = 0x0
0xba7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x53a, V600, V602, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x53a, V600, V602, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xba8
[0xba8:0xbaf]
---
Predecessors: [0xb95]
Successors: [0xbb0, 0xbb8]
---
0xba8 JUMPDEST
0xba9 DUP5
0xbaa ISZERO
0xbab ISZERO
0xbac PUSH2 0xbb8
0xbaf JUMPI
---
0xba8: JUMPDEST 
0xbaa: V942 = ISZERO V602
0xbab: V943 = ISZERO V942
0xbac: V944 = 0xbb8
0xbaf: JUMPI 0xbb8 V943
---
Entry stack: [V12, 0x53a, V600, V602, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x53a, V600, V602, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xbb0
[0xbb0:0xbb7]
---
Predecessors: [0xba8]
Successors: [0xc6b]
---
0xbb0 PUSH1 0x0
0xbb2 SWAP4
0xbb3 POP
0xbb4 PUSH2 0xc6b
0xbb7 JUMP
---
0xbb0: V945 = 0x0
0xbb4: V946 = 0xc6b
0xbb7: JUMP 0xc6b
---
Entry stack: [V12, 0x53a, V600, V602, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x53a, V600, V602, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xbb8
[0xbb8:0xbef]
---
Predecessors: [0xba8]
Successors: [0xbf0, 0xbf3]
---
0xbb8 JUMPDEST
0xbb9 POP
0xbba POP
0xbbb POP
0xbbc PUSH1 0x1
0xbbe PUSH1 0xa0
0xbc0 PUSH1 0x2
0xbc2 EXP
0xbc3 SUB
0xbc4 CALLER
0xbc5 DUP2
0xbc6 AND
0xbc7 PUSH1 0x0
0xbc9 SWAP1
0xbca DUP2
0xbcb MSTORE
0xbcc PUSH1 0x3
0xbce PUSH1 0x20
0xbd0 MSTORE
0xbd1 PUSH1 0x40
0xbd3 DUP1
0xbd4 DUP3
0xbd5 SHA3
0xbd6 SLOAD
0xbd7 SWAP3
0xbd8 DUP7
0xbd9 AND
0xbda DUP3
0xbdb MSTORE
0xbdc SWAP1
0xbdd SHA3
0xbde SLOAD
0xbdf DUP4
0xbe0 DUP3
0xbe1 LT
0xbe2 DUP1
0xbe3 ISZERO
0xbe4 SWAP2
0xbe5 DUP1
0xbe6 DUP7
0xbe7 ADD
0xbe8 LT
0xbe9 SWAP1
0xbea DUP3
0xbeb SWAP1
0xbec PUSH2 0xbf3
0xbef JUMPI
---
0xbb8: JUMPDEST 
0xbbc: V947 = 0x1
0xbbe: V948 = 0xa0
0xbc0: V949 = 0x2
0xbc2: V950 = EXP 0x2 0xa0
0xbc3: V951 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc4: V952 = CALLER
0xbc6: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff V952
0xbc7: V954 = 0x0
0xbcb: M[0x0] = V953
0xbcc: V955 = 0x3
0xbce: V956 = 0x20
0xbd0: M[0x20] = 0x3
0xbd1: V957 = 0x40
0xbd5: V958 = SHA3 0x0 0x40
0xbd6: V959 = S[V958]
0xbd9: V960 = AND V600 0xffffffffffffffffffffffffffffffffffffffff
0xbdb: M[0x0] = V960
0xbdd: V961 = SHA3 0x0 0x40
0xbde: V962 = S[V961]
0xbe1: V963 = LT V959 V602
0xbe3: V964 = ISZERO V963
0xbe7: V965 = ADD V602 V962
0xbe8: V966 = LT V965 V962
0xbec: V967 = 0xbf3
0xbef: JUMPI 0xbf3 V963
---
Entry stack: [V12, 0x53a, V600, V602, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V959, V964, V966, V964]
Exit stack: [V12, 0x53a, V600, V602, 0x0, V959, V964, V966, V964]

================================

Block 0xbf0
[0xbf0:0xbf2]
---
Predecessors: [0xbb8]
Successors: [0xbf3]
---
0xbf0 POP
0xbf1 DUP1
0xbf2 ISZERO
---
0xbf2: V968 = ISZERO V966
---
Entry stack: [V12, 0x53a, V600, V602, 0x0, V959, V964, V966, V964]
Stack pops: 2
Stack additions: [S1, V968]
Exit stack: [V12, 0x53a, V600, V602, 0x0, V959, V964, V966, V968]

================================

Block 0xbf3
[0xbf3:0xbf8]
---
Predecessors: [0xbb8, 0xbf0]
Successors: [0xbf9, 0xc66]
---
0xbf3 JUMPDEST
0xbf4 ISZERO
0xbf5 PUSH2 0xc66
0xbf8 JUMPI
---
0xbf3: JUMPDEST 
0xbf4: V969 = ISZERO S0
0xbf5: V970 = 0xc66
0xbf8: JUMPI 0xc66 V969
---
Entry stack: [V12, 0x53a, V600, V602, 0x0, V959, V964, V966, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x53a, V600, V602, 0x0, V959, V964, V966]

================================

Block 0xbf9
[0xbf9:0xc65]
---
Predecessors: [0xbf3]
Successors: [0xc6b]
---
0xbf9 PUSH1 0x1
0xbfb PUSH1 0xa0
0xbfd PUSH1 0x2
0xbff EXP
0xc00 SUB
0xc01 CALLER
0xc02 DUP2
0xc03 AND
0xc04 PUSH1 0x0
0xc06 DUP2
0xc07 DUP2
0xc08 MSTORE
0xc09 PUSH1 0x3
0xc0b PUSH1 0x20
0xc0d MSTORE
0xc0e PUSH1 0x40
0xc10 DUP1
0xc11 DUP3
0xc12 SHA3
0xc13 DUP1
0xc14 SLOAD
0xc15 DUP11
0xc16 SWAP1
0xc17 SUB
0xc18 SWAP1
0xc19 SSTORE
0xc1a SWAP3
0xc1b DUP10
0xc1c AND
0xc1d DUP1
0xc1e DUP3
0xc1f MSTORE
0xc20 SWAP1
0xc21 DUP4
0xc22 SWAP1
0xc23 SHA3
0xc24 DUP1
0xc25 SLOAD
0xc26 DUP10
0xc27 ADD
0xc28 SWAP1
0xc29 SSTORE
0xc2a SWAP2
0xc2b PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc4c SWAP1
0xc4d DUP9
0xc4e SWAP1
0xc4f MLOAD
0xc50 SWAP1
0xc51 DUP2
0xc52 MSTORE
0xc53 PUSH1 0x20
0xc55 ADD
0xc56 PUSH1 0x40
0xc58 MLOAD
0xc59 DUP1
0xc5a SWAP2
0xc5b SUB
0xc5c SWAP1
0xc5d LOG3
0xc5e PUSH1 0x1
0xc60 SWAP4
0xc61 POP
0xc62 PUSH2 0xc6b
0xc65 JUMP
---
0xbf9: V971 = 0x1
0xbfb: V972 = 0xa0
0xbfd: V973 = 0x2
0xbff: V974 = EXP 0x2 0xa0
0xc00: V975 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc01: V976 = CALLER
0xc03: V977 = AND 0xffffffffffffffffffffffffffffffffffffffff V976
0xc04: V978 = 0x0
0xc08: M[0x0] = V977
0xc09: V979 = 0x3
0xc0b: V980 = 0x20
0xc0d: M[0x20] = 0x3
0xc0e: V981 = 0x40
0xc12: V982 = SHA3 0x0 0x40
0xc14: V983 = S[V982]
0xc17: V984 = SUB V983 V602
0xc19: S[V982] = V984
0xc1c: V985 = AND V600 0xffffffffffffffffffffffffffffffffffffffff
0xc1f: M[0x0] = V985
0xc23: V986 = SHA3 0x0 0x40
0xc25: V987 = S[V986]
0xc27: V988 = ADD V602 V987
0xc29: S[V986] = V988
0xc2b: V989 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc4f: V990 = M[0x40]
0xc52: M[V990] = V602
0xc53: V991 = 0x20
0xc55: V992 = ADD 0x20 V990
0xc56: V993 = 0x40
0xc58: V994 = M[0x40]
0xc5b: V995 = SUB V992 V994
0xc5d: LOG V994 V995 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V977 V985
0xc5e: V996 = 0x1
0xc62: V997 = 0xc6b
0xc65: JUMP 0xc6b
---
Entry stack: [V12, 0x53a, V600, V602, 0x0, V959, V964, V966]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V12, 0x53a, V600, V602, 0x1, V959, V964, V966]

================================

Block 0xc66
[0xc66:0xc6a]
---
Predecessors: [0xbf3]
Successors: [0xc6b]
---
0xc66 JUMPDEST
0xc67 PUSH1 0x0
0xc69 SWAP4
0xc6a POP
---
0xc66: JUMPDEST 
0xc67: V998 = 0x0
---
Entry stack: [V12, 0x53a, V600, V602, 0x0, V959, V964, V966]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x53a, V600, V602, 0x0, V959, V964, V966]

================================

Block 0xc6b
[0xc6b:0xc6b]
---
Predecessors: [0xbb0, 0xbf9, 0xc66]
Successors: [0xc6c]
---
0xc6b JUMPDEST
---
0xc6b: JUMPDEST 
---
Entry stack: [V12, 0x53a, V600, V602, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x53a, V600, V602, {0x0, 0x1}, S2, S1, S0]

================================

Block 0xc6c
[0xc6c:0xc74]
---
Predecessors: [0xc6b]
Successors: [0x53a]
---
0xc6c JUMPDEST
0xc6d POP
0xc6e POP
0xc6f POP
0xc70 SWAP3
0xc71 SWAP2
0xc72 POP
0xc73 POP
0xc74 JUMP
---
0xc6c: JUMPDEST 
0xc74: JUMP 0x53a
---
Entry stack: [V12, 0x53a, V600, V602, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0xc75
[0xc75:0xc8b]
---
Predecessors: [0x770]
Successors: [0x833]
---
0xc75 JUMPDEST
0xc76 PUSH1 0x0
0xc78 DUP1
0xc79 PUSH1 0x0
0xc7b DUP1
0xc7c PUSH1 0x6
0xc7e SLOAD
0xc7f PUSH1 0x8
0xc81 SLOAD
0xc82 PUSH1 0x7
0xc84 SLOAD
0xc85 PUSH2 0xc8c
0xc88 PUSH2 0x833
0xc8b JUMP
---
0xc75: JUMPDEST 
0xc76: V999 = 0x0
0xc79: V1000 = 0x0
0xc7c: V1001 = 0x6
0xc7e: V1002 = S[0x6]
0xc7f: V1003 = 0x8
0xc81: V1004 = S[0x8]
0xc82: V1005 = 0x7
0xc84: V1006 = S[0x7]
0xc85: V1007 = 0xc8c
0xc88: V1008 = 0x833
0xc8b: JUMP 0x833
---
Entry stack: [V12, 0x778]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, V1002, V1004, V1006, 0xc8c]
Exit stack: [V12, 0x778, 0x0, 0x0, 0x0, 0x0, V1002, V1004, V1006, 0xc8c]

================================

Block 0xc8c
[0xc8c:0xc94]
---
Predecessors: [0x84d]
Successors: [0xc95]
---
0xc8c JUMPDEST
0xc8d SWAP4
0xc8e POP
0xc8f SWAP4
0xc90 POP
0xc91 SWAP4
0xc92 POP
0xc93 SWAP4
0xc94 POP
---
0xc8c: JUMPDEST 
---
Entry stack: [V12, 0x778, 0x0, S6, {0x0, 0x48b}, 0x0, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x778, S3, S2, S1, S0]

================================

Block 0xc95
[0xc95:0xc9a]
---
Predecessors: [0xc8c]
Successors: [0x778]
---
0xc95 JUMPDEST
0xc96 SWAP1
0xc97 SWAP2
0xc98 SWAP3
0xc99 SWAP4
0xc9a JUMP
---
0xc95: JUMPDEST 
0xc9a: JUMP 0x778
---
Entry stack: [V12, 0x778, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0xc9b
[0xc9b:0xcc1]
---
Predecessors: [0x7af]
Successors: [0xcc2]
---
0xc9b JUMPDEST
0xc9c PUSH1 0x1
0xc9e PUSH1 0xa0
0xca0 PUSH1 0x2
0xca2 EXP
0xca3 SUB
0xca4 DUP1
0xca5 DUP4
0xca6 AND
0xca7 PUSH1 0x0
0xca9 SWAP1
0xcaa DUP2
0xcab MSTORE
0xcac PUSH1 0x4
0xcae PUSH1 0x20
0xcb0 SWAP1
0xcb1 DUP2
0xcb2 MSTORE
0xcb3 PUSH1 0x40
0xcb5 DUP1
0xcb6 DUP4
0xcb7 SHA3
0xcb8 SWAP4
0xcb9 DUP6
0xcba AND
0xcbb DUP4
0xcbc MSTORE
0xcbd SWAP3
0xcbe SWAP1
0xcbf MSTORE
0xcc0 SHA3
0xcc1 SLOAD
---
0xc9b: JUMPDEST 
0xc9c: V1009 = 0x1
0xc9e: V1010 = 0xa0
0xca0: V1011 = 0x2
0xca2: V1012 = EXP 0x2 0xa0
0xca3: V1013 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca6: V1014 = AND V645 0xffffffffffffffffffffffffffffffffffffffff
0xca7: V1015 = 0x0
0xcab: M[0x0] = V1014
0xcac: V1016 = 0x4
0xcae: V1017 = 0x20
0xcb2: M[0x20] = 0x4
0xcb3: V1018 = 0x40
0xcb7: V1019 = SHA3 0x0 0x40
0xcba: V1020 = AND V648 0xffffffffffffffffffffffffffffffffffffffff
0xcbc: M[0x0] = V1020
0xcbf: M[0x20] = V1019
0xcc0: V1021 = SHA3 0x0 0x40
0xcc1: V1022 = S[V1021]
---
Entry stack: [V12, 0x561, V645, V648]
Stack pops: 2
Stack additions: [S1, S0, V1022]
Exit stack: [V12, 0x561, V645, V648, V1022]

================================

Block 0xcc2
[0xcc2:0xcc7]
---
Predecessors: [0xc9b]
Successors: [0x561]
---
0xcc2 JUMPDEST
0xcc3 SWAP3
0xcc4 SWAP2
0xcc5 POP
0xcc6 POP
0xcc7 JUMP
---
0xcc2: JUMPDEST 
0xcc7: JUMP 0x561
---
Entry stack: [V12, 0x561, V645, V648, V1022]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V1022]

================================

Block 0xcc8
[0xcc8:0xce3]
---
Predecessors: [0x7e6]
Successors: [0xce4, 0xce8]
---
0xcc8 JUMPDEST
0xcc9 PUSH1 0x0
0xccb DUP1
0xccc SLOAD
0xccd DUP2
0xcce SWAP1
0xccf DUP2
0xcd0 SWAP1
0xcd1 CALLER
0xcd2 PUSH1 0x1
0xcd4 PUSH1 0xa0
0xcd6 PUSH1 0x2
0xcd8 EXP
0xcd9 SUB
0xcda SWAP1
0xcdb DUP2
0xcdc AND
0xcdd SWAP2
0xcde AND
0xcdf EQ
0xce0 PUSH2 0xce8
0xce3 JUMPI
---
0xcc8: JUMPDEST 
0xcc9: V1023 = 0x0
0xccc: V1024 = S[0x0]
0xcd1: V1025 = CALLER
0xcd2: V1026 = 0x1
0xcd4: V1027 = 0xa0
0xcd6: V1028 = 0x2
0xcd8: V1029 = EXP 0x2 0xa0
0xcd9: V1030 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcdc: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff V1025
0xcde: V1032 = AND V1024 0xffffffffffffffffffffffffffffffffffffffff
0xcdf: V1033 = EQ V1032 V1031
0xce0: V1034 = 0xce8
0xce3: JUMPI 0xce8 V1033
---
Entry stack: [V12, 0x53a, V669]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x53a, V669, 0x0, 0x0, 0x0]

================================

Block 0xce4
[0xce4:0xce7]
---
Predecessors: [0xcc8]
Successors: []
---
0xce4 PUSH1 0x0
0xce6 DUP1
0xce7 REVERT
---
0xce4: V1035 = 0x0
0xce7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x53a, V669, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x53a, V669, 0x0, 0x0, 0x0]

================================

Block 0xce8
[0xce8:0xd3d]
---
Predecessors: [0xcc8]
Successors: [0xd3e, 0xd42]
---
0xce8 JUMPDEST
0xce9 DUP4
0xcea SWAP2
0xceb POP
0xcec DUP2
0xced PUSH1 0x1
0xcef PUSH1 0xa0
0xcf1 PUSH1 0x2
0xcf3 EXP
0xcf4 SUB
0xcf5 AND
0xcf6 PUSH4 0x70a08231
0xcfb ADDRESS
0xcfc PUSH1 0x0
0xcfe PUSH1 0x40
0xd00 MLOAD
0xd01 PUSH1 0x20
0xd03 ADD
0xd04 MSTORE
0xd05 PUSH1 0x40
0xd07 MLOAD
0xd08 PUSH1 0xe0
0xd0a PUSH1 0x2
0xd0c EXP
0xd0d PUSH4 0xffffffff
0xd12 DUP5
0xd13 AND
0xd14 MUL
0xd15 DUP2
0xd16 MSTORE
0xd17 PUSH1 0x1
0xd19 PUSH1 0xa0
0xd1b PUSH1 0x2
0xd1d EXP
0xd1e SUB
0xd1f SWAP1
0xd20 SWAP2
0xd21 AND
0xd22 PUSH1 0x4
0xd24 DUP3
0xd25 ADD
0xd26 MSTORE
0xd27 PUSH1 0x24
0xd29 ADD
0xd2a PUSH1 0x20
0xd2c PUSH1 0x40
0xd2e MLOAD
0xd2f DUP1
0xd30 DUP4
0xd31 SUB
0xd32 DUP2
0xd33 PUSH1 0x0
0xd35 DUP8
0xd36 DUP1
0xd37 EXTCODESIZE
0xd38 ISZERO
0xd39 ISZERO
0xd3a PUSH2 0xd42
0xd3d JUMPI
---
0xce8: JUMPDEST 
0xced: V1036 = 0x1
0xcef: V1037 = 0xa0
0xcf1: V1038 = 0x2
0xcf3: V1039 = EXP 0x2 0xa0
0xcf4: V1040 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf5: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0xcf6: V1042 = 0x70a08231
0xcfb: V1043 = ADDRESS
0xcfc: V1044 = 0x0
0xcfe: V1045 = 0x40
0xd00: V1046 = M[0x40]
0xd01: V1047 = 0x20
0xd03: V1048 = ADD 0x20 V1046
0xd04: M[V1048] = 0x0
0xd05: V1049 = 0x40
0xd07: V1050 = M[0x40]
0xd08: V1051 = 0xe0
0xd0a: V1052 = 0x2
0xd0c: V1053 = EXP 0x2 0xe0
0xd0d: V1054 = 0xffffffff
0xd13: V1055 = AND 0x70a08231 0xffffffff
0xd14: V1056 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xd16: M[V1050] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xd17: V1057 = 0x1
0xd19: V1058 = 0xa0
0xd1b: V1059 = 0x2
0xd1d: V1060 = EXP 0x2 0xa0
0xd1e: V1061 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd21: V1062 = AND V1043 0xffffffffffffffffffffffffffffffffffffffff
0xd22: V1063 = 0x4
0xd25: V1064 = ADD V1050 0x4
0xd26: M[V1064] = V1062
0xd27: V1065 = 0x24
0xd29: V1066 = ADD 0x24 V1050
0xd2a: V1067 = 0x20
0xd2c: V1068 = 0x40
0xd2e: V1069 = M[0x40]
0xd31: V1070 = SUB V1066 V1069
0xd33: V1071 = 0x0
0xd37: V1072 = EXTCODESIZE V1041
0xd38: V1073 = ISZERO V1072
0xd39: V1074 = ISZERO V1073
0xd3a: V1075 = 0xd42
0xd3d: JUMPI 0xd42 V1074
---
Entry stack: [V12, 0x53a, V669, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V1041, 0x70a08231, V1066, 0x20, V1069, V1070, V1069, 0x0, V1041]
Exit stack: [V12, 0x53a, V669, 0x0, V669, 0x0, V1041, 0x70a08231, V1066, 0x20, V1069, V1070, V1069, 0x0, V1041]

================================

Block 0xd3e
[0xd3e:0xd41]
---
Predecessors: [0xce8]
Successors: []
---
0xd3e PUSH1 0x0
0xd40 DUP1
0xd41 REVERT
---
0xd3e: V1076 = 0x0
0xd41: REVERT 0x0 0x0
---
Entry stack: [V12, 0x53a, V669, 0x0, V669, 0x0, V1041, 0x70a08231, V1066, 0x20, V1069, V1070, V1069, 0x0, V1041]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x53a, V669, 0x0, V669, 0x0, V1041, 0x70a08231, V1066, 0x20, V1069, V1070, V1069, 0x0, V1041]

================================

Block 0xd42
[0xd42:0xd4e]
---
Predecessors: [0xce8]
Successors: [0xd4f, 0xd53]
---
0xd42 JUMPDEST
0xd43 PUSH2 0x2c6
0xd46 GAS
0xd47 SUB
0xd48 CALL
0xd49 ISZERO
0xd4a ISZERO
0xd4b PUSH2 0xd53
0xd4e JUMPI
---
0xd42: JUMPDEST 
0xd43: V1077 = 0x2c6
0xd46: V1078 = GAS
0xd47: V1079 = SUB V1078 0x2c6
0xd48: V1080 = CALL V1079 V1041 0x0 V1069 V1070 V1069 0x20
0xd49: V1081 = ISZERO V1080
0xd4a: V1082 = ISZERO V1081
0xd4b: V1083 = 0xd53
0xd4e: JUMPI 0xd53 V1082
---
Entry stack: [V12, 0x53a, V669, 0x0, V669, 0x0, V1041, 0x70a08231, V1066, 0x20, V1069, V1070, V1069, 0x0, V1041]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x53a, V669, 0x0, V669, 0x0, V1041, 0x70a08231, V1066]

================================

Block 0xd4f
[0xd4f:0xd52]
---
Predecessors: [0xd42]
Successors: []
---
0xd4f PUSH1 0x0
0xd51 DUP1
0xd52 REVERT
---
0xd4f: V1084 = 0x0
0xd52: REVERT 0x0 0x0
---
Entry stack: [V12, 0x53a, V669, 0x0, V669, 0x0, V1041, 0x70a08231, V1066]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x53a, V669, 0x0, V669, 0x0, V1041, 0x70a08231, V1066]

================================

Block 0xd53
[0xd53:0xdbe]
---
Predecessors: [0xd42]
Successors: [0xdbf, 0xdc3]
---
0xd53 JUMPDEST
0xd54 POP
0xd55 POP
0xd56 POP
0xd57 PUSH1 0x40
0xd59 MLOAD
0xd5a DUP1
0xd5b MLOAD
0xd5c PUSH1 0x0
0xd5e DUP1
0xd5f SLOAD
0xd60 SWAP2
0xd61 SWAP4
0xd62 POP
0xd63 PUSH1 0x1
0xd65 PUSH1 0xa0
0xd67 PUSH1 0x2
0xd69 EXP
0xd6a SUB
0xd6b DUP1
0xd6c DUP7
0xd6d AND
0xd6e SWAP4
0xd6f POP
0xd70 PUSH4 0xa9059cbb
0xd75 SWAP3
0xd76 AND
0xd77 SWAP1
0xd78 DUP5
0xd79 SWAP1
0xd7a PUSH1 0x40
0xd7c MLOAD
0xd7d PUSH1 0x20
0xd7f ADD
0xd80 MSTORE
0xd81 PUSH1 0x40
0xd83 MLOAD
0xd84 PUSH1 0xe0
0xd86 PUSH1 0x2
0xd88 EXP
0xd89 PUSH4 0xffffffff
0xd8e DUP6
0xd8f AND
0xd90 MUL
0xd91 DUP2
0xd92 MSTORE
0xd93 PUSH1 0x1
0xd95 PUSH1 0xa0
0xd97 PUSH1 0x2
0xd99 EXP
0xd9a SUB
0xd9b SWAP1
0xd9c SWAP3
0xd9d AND
0xd9e PUSH1 0x4
0xda0 DUP4
0xda1 ADD
0xda2 MSTORE
0xda3 PUSH1 0x24
0xda5 DUP3
0xda6 ADD
0xda7 MSTORE
0xda8 PUSH1 0x44
0xdaa ADD
0xdab PUSH1 0x20
0xdad PUSH1 0x40
0xdaf MLOAD
0xdb0 DUP1
0xdb1 DUP4
0xdb2 SUB
0xdb3 DUP2
0xdb4 PUSH1 0x0
0xdb6 DUP8
0xdb7 DUP1
0xdb8 EXTCODESIZE
0xdb9 ISZERO
0xdba ISZERO
0xdbb PUSH2 0xdc3
0xdbe JUMPI
---
0xd53: JUMPDEST 
0xd57: V1085 = 0x40
0xd59: V1086 = M[0x40]
0xd5b: V1087 = M[V1086]
0xd5c: V1088 = 0x0
0xd5f: V1089 = S[0x0]
0xd63: V1090 = 0x1
0xd65: V1091 = 0xa0
0xd67: V1092 = 0x2
0xd69: V1093 = EXP 0x2 0xa0
0xd6a: V1094 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6d: V1095 = AND V669 0xffffffffffffffffffffffffffffffffffffffff
0xd70: V1096 = 0xa9059cbb
0xd76: V1097 = AND V1089 0xffffffffffffffffffffffffffffffffffffffff
0xd7a: V1098 = 0x40
0xd7c: V1099 = M[0x40]
0xd7d: V1100 = 0x20
0xd7f: V1101 = ADD 0x20 V1099
0xd80: M[V1101] = 0x0
0xd81: V1102 = 0x40
0xd83: V1103 = M[0x40]
0xd84: V1104 = 0xe0
0xd86: V1105 = 0x2
0xd88: V1106 = EXP 0x2 0xe0
0xd89: V1107 = 0xffffffff
0xd8f: V1108 = AND 0xa9059cbb 0xffffffff
0xd90: V1109 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xd92: M[V1103] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd93: V1110 = 0x1
0xd95: V1111 = 0xa0
0xd97: V1112 = 0x2
0xd99: V1113 = EXP 0x2 0xa0
0xd9a: V1114 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9d: V1115 = AND V1097 0xffffffffffffffffffffffffffffffffffffffff
0xd9e: V1116 = 0x4
0xda1: V1117 = ADD V1103 0x4
0xda2: M[V1117] = V1115
0xda3: V1118 = 0x24
0xda6: V1119 = ADD V1103 0x24
0xda7: M[V1119] = V1087
0xda8: V1120 = 0x44
0xdaa: V1121 = ADD 0x44 V1103
0xdab: V1122 = 0x20
0xdad: V1123 = 0x40
0xdaf: V1124 = M[0x40]
0xdb2: V1125 = SUB V1121 V1124
0xdb4: V1126 = 0x0
0xdb8: V1127 = EXTCODESIZE V1095
0xdb9: V1128 = ISZERO V1127
0xdba: V1129 = ISZERO V1128
0xdbb: V1130 = 0xdc3
0xdbe: JUMPI 0xdc3 V1129
---
Entry stack: [V12, 0x53a, V669, 0x0, V669, 0x0, V1041, 0x70a08231, V1066]
Stack pops: 5
Stack additions: [S4, V1087, V1095, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1095]
Exit stack: [V12, 0x53a, V669, 0x0, V669, V1087, V1095, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1095]

================================

Block 0xdbf
[0xdbf:0xdc2]
---
Predecessors: [0xd53]
Successors: []
---
0xdbf PUSH1 0x0
0xdc1 DUP1
0xdc2 REVERT
---
0xdbf: V1131 = 0x0
0xdc2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x53a, V669, 0x0, V669, V1087, V1095, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1095]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x53a, V669, 0x0, V669, V1087, V1095, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1095]

================================

Block 0xdc3
[0xdc3:0xdcf]
---
Predecessors: [0xd53]
Successors: [0xdd0, 0xdd4]
---
0xdc3 JUMPDEST
0xdc4 PUSH2 0x2c6
0xdc7 GAS
0xdc8 SUB
0xdc9 CALL
0xdca ISZERO
0xdcb ISZERO
0xdcc PUSH2 0xdd4
0xdcf JUMPI
---
0xdc3: JUMPDEST 
0xdc4: V1132 = 0x2c6
0xdc7: V1133 = GAS
0xdc8: V1134 = SUB V1133 0x2c6
0xdc9: V1135 = CALL V1134 V1095 0x0 V1124 V1125 V1124 0x20
0xdca: V1136 = ISZERO V1135
0xdcb: V1137 = ISZERO V1136
0xdcc: V1138 = 0xdd4
0xdcf: JUMPI 0xdd4 V1137
---
Entry stack: [V12, 0x53a, V669, 0x0, V669, V1087, V1095, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1095]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x53a, V669, 0x0, V669, V1087, V1095, 0xa9059cbb, V1121]

================================

Block 0xdd0
[0xdd0:0xdd3]
---
Predecessors: [0xdc3]
Successors: []
---
0xdd0 PUSH1 0x0
0xdd2 DUP1
0xdd3 REVERT
---
0xdd0: V1139 = 0x0
0xdd3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x53a, V669, 0x0, V669, V1087, V1095, 0xa9059cbb, V1121]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x53a, V669, 0x0, V669, V1087, V1095, 0xa9059cbb, V1121]

================================

Block 0xdd4
[0xdd4:0xddf]
---
Predecessors: [0xdc3]
Successors: [0xde0]
---
0xdd4 JUMPDEST
0xdd5 POP
0xdd6 POP
0xdd7 POP
0xdd8 PUSH1 0x40
0xdda MLOAD
0xddb DUP1
0xddc MLOAD
0xddd SWAP4
0xdde POP
0xddf POP
---
0xdd4: JUMPDEST 
0xdd8: V1140 = 0x40
0xdda: V1141 = M[0x40]
0xddc: V1142 = M[V1141]
---
Entry stack: [V12, 0x53a, V669, 0x0, V669, V1087, V1095, 0xa9059cbb, V1121]
Stack pops: 6
Stack additions: [V1142, S4, S3]
Exit stack: [V12, 0x53a, V669, V1142, V669, V1087]

================================

Block 0xde0
[0xde0:0xde6]
---
Predecessors: [0xdd4]
Successors: [0x53a]
---
0xde0 JUMPDEST
0xde1 POP
0xde2 POP
0xde3 SWAP2
0xde4 SWAP1
0xde5 POP
0xde6 JUMP
---
0xde0: JUMPDEST 
0xde6: JUMP 0x53a
---
Entry stack: [V12, 0x53a, V669, V1142, V669, V1087]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V1142]

================================

Block 0xde7
[0xde7:0xdec]
---
Predecessors: [0x819]
Successors: [0x561]
---
0xde7 JUMPDEST
0xde8 PUSH1 0x5
0xdea SLOAD
0xdeb DUP2
0xdec JUMP
---
0xde7: JUMPDEST 
0xde8: V1143 = 0x5
0xdea: V1144 = S[0x5]
0xdec: JUMP 0x561
---
Entry stack: [V12, 0x561]
Stack pops: 1
Stack additions: [S0, V1144]
Exit stack: [V12, 0x561, V1144]

================================

Block 0xded
[0xded:0xdf6]
---
Predecessors: [0x869]
Successors: [0xdf7]
---
0xded JUMPDEST
0xdee PUSH1 0x0
0xdf0 DUP1
0xdf1 PUSH1 0x2
0xdf3 PUSH1 0x1
0xdf5 DUP5
0xdf6 ADD
---
0xded: JUMPDEST 
0xdee: V1145 = 0x0
0xdf1: V1146 = 0x2
0xdf3: V1147 = 0x1
0xdf6: V1148 = ADD V110 0x1
---
Entry stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, V112, S8, S7, S6, 0x159, V110, 0x0, S2, 0x872, V110]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x2, V1148]
Exit stack: [V12, 0x778, 0x0, S11, {0x0, 0x48b}, V112, S8, S7, S6, 0x159, V110, 0x0, S2, 0x872, V110, 0x0, 0x0, 0x2, V1148]

================================

Block 0xdf7
[0xdf7:0xdfd]
---
Predecessors: [0xded]
Successors: [0xdfe]
---
0xdf7 JUMPDEST
0xdf8 DIV
0xdf9 SWAP1
0xdfa POP
0xdfb DUP3
0xdfc SWAP2
0xdfd POP
---
0xdf7: JUMPDEST 
0xdf8: V1149 = DIV V1148 0x2
---
Entry stack: [V12, 0x778, 0x0, S15, {0x0, 0x48b}, V112, S12, S11, S10, 0x159, V110, 0x0, S6, 0x872, V110, 0x0, 0x0, 0x2, V1148]
Stack pops: 5
Stack additions: [S4, S4, V1149]
Exit stack: [V12, 0x778, 0x0, S15, {0x0, 0x48b}, V112, S12, S11, S10, 0x159, V110, 0x0, S6, 0x872, V110, V110, V1149]

================================

Block 0xdfe
[0xdfe:0xe06]
---
Predecessors: [0xdf7, 0xe22]
Successors: [0xe07, 0xe2a]
---
0xdfe JUMPDEST
0xdff DUP2
0xe00 DUP2
0xe01 LT
0xe02 ISZERO
0xe03 PUSH2 0xe2a
0xe06 JUMPI
---
0xdfe: JUMPDEST 
0xe01: V1150 = LT S0 S1
0xe02: V1151 = ISZERO V1150
0xe03: V1152 = 0xe2a
0xe06: JUMPI 0xe2a V1151
---
Entry stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, V112, S10, S9, S8, 0x159, V110, 0x0, S4, 0x872, V110, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, V112, S10, S9, S8, 0x159, V110, 0x0, S4, 0x872, V110, S1, S0]

================================

Block 0xe07
[0xe07:0xe15]
---
Predecessors: [0xdfe]
Successors: [0xe16, 0xe17]
---
0xe07 DUP1
0xe08 SWAP2
0xe09 POP
0xe0a PUSH1 0x2
0xe0c DUP2
0xe0d DUP3
0xe0e DUP6
0xe0f DUP2
0xe10 ISZERO
0xe11 ISZERO
0xe12 PUSH2 0xe17
0xe15 JUMPI
---
0xe0a: V1153 = 0x2
0xe10: V1154 = ISZERO S0
0xe11: V1155 = ISZERO V1154
0xe12: V1156 = 0xe17
0xe15: JUMPI 0xe17 V1155
---
Entry stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, V112, S10, S9, S8, 0x159, V110, 0x0, S4, 0x872, V110, S1, S0]
Stack pops: 3
Stack additions: [S2, S0, S0, 0x2, S0, S0, S2]
Exit stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, V112, S10, S9, S8, 0x159, V110, 0x0, S4, 0x872, V110, S0, S0, 0x2, S0, S0, V110]

================================

Block 0xe16
[0xe16:0xe16]
---
Predecessors: [0xe07]
Successors: []
---
0xe16 INVALID
---
0xe16: INVALID 
---
Entry stack: [V12, 0x778, 0x0, S17, {0x0, 0x48b}, V112, S14, S13, S12, 0x159, V110, 0x0, S8, 0x872, V110, S5, S4, 0x2, S2, S1, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S17, {0x0, 0x48b}, V112, S14, S13, S12, 0x159, V110, 0x0, S8, 0x872, V110, S5, S4, 0x2, S2, S1, V110]

================================

Block 0xe17
[0xe17:0xe20]
---
Predecessors: [0xe07]
Successors: [0xe21, 0xe22]
---
0xe17 JUMPDEST
0xe18 DIV
0xe19 ADD
0xe1a DUP2
0xe1b ISZERO
0xe1c ISZERO
0xe1d PUSH2 0xe22
0xe20 JUMPI
---
0xe17: JUMPDEST 
0xe18: V1157 = DIV V110 S1
0xe19: V1158 = ADD V1157 S2
0xe1b: V1159 = ISZERO 0x2
0xe1c: V1160 = ISZERO 0x0
0xe1d: V1161 = 0xe22
0xe20: JUMPI 0xe22 0x1
---
Entry stack: [V12, 0x778, 0x0, S17, {0x0, 0x48b}, V112, S14, S13, S12, 0x159, V110, 0x0, S8, 0x872, V110, S5, S4, 0x2, S2, S1, V110]
Stack pops: 4
Stack additions: [S3, V1158]
Exit stack: [V12, 0x778, 0x0, S17, {0x0, 0x48b}, V112, S14, S13, S12, 0x159, V110, 0x0, S8, 0x872, V110, S5, S4, 0x2, V1158]

================================

Block 0xe21
[0xe21:0xe21]
---
Predecessors: [0xe17]
Successors: []
---
0xe21 INVALID
---
0xe21: INVALID 
---
Entry stack: [V12, 0x778, 0x0, S15, {0x0, 0x48b}, V112, S12, S11, S10, 0x159, V110, 0x0, S6, 0x872, V110, S3, S2, 0x2, V1158]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x778, 0x0, S15, {0x0, 0x48b}, V112, S12, S11, S10, 0x159, V110, 0x0, S6, 0x872, V110, S3, S2, 0x2, V1158]

================================

Block 0xe22
[0xe22:0xe29]
---
Predecessors: [0xe17]
Successors: [0xdfe]
---
0xe22 JUMPDEST
0xe23 DIV
0xe24 SWAP1
0xe25 POP
0xe26 PUSH2 0xdfe
0xe29 JUMP
---
0xe22: JUMPDEST 
0xe23: V1162 = DIV V1158 0x2
0xe26: V1163 = 0xdfe
0xe29: JUMP 0xdfe
---
Entry stack: [V12, 0x778, 0x0, S15, {0x0, 0x48b}, V112, S12, S11, S10, 0x159, V110, 0x0, S6, 0x872, V110, S3, S2, 0x2, V1158]
Stack pops: 3
Stack additions: [V1162]
Exit stack: [V12, 0x778, 0x0, S15, {0x0, 0x48b}, V112, S12, S11, S10, 0x159, V110, 0x0, S6, 0x872, V110, S3, V1162]

================================

Block 0xe2a
[0xe2a:0xe2d]
---
Predecessors: [0xdfe]
Successors: [0xe2e]
---
0xe2a JUMPDEST
0xe2b DUP1
0xe2c SWAP2
0xe2d POP
---
0xe2a: JUMPDEST 
---
Entry stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, V112, S10, S9, S8, 0x159, V110, 0x0, S4, 0x872, V110, S1, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, V112, S10, S9, S8, 0x159, V110, 0x0, S4, 0x872, V110, S0, S0]

================================

Block 0xe2e
[0xe2e:0xe33]
---
Predecessors: [0xe2a]
Successors: [0x872]
---
0xe2e JUMPDEST
0xe2f POP
0xe30 SWAP2
0xe31 SWAP1
0xe32 POP
0xe33 JUMP
---
0xe2e: JUMPDEST 
0xe33: JUMP 0x872
---
Entry stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, V112, S10, S9, S8, 0x159, V110, 0x0, S4, 0x872, V110, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, 0x778, 0x0, S13, {0x0, 0x48b}, V112, S10, S9, S8, 0x159, V110, 0x0, S4, S1]

================================

Block 0xe34
[0xe34:0xe45]
---
Predecessors: [0x8a9, 0xb4d]
Successors: [0x8b1, 0xb55]
---
0xe34 JUMPDEST
0xe35 PUSH1 0x20
0xe37 PUSH1 0x40
0xe39 MLOAD
0xe3a SWAP1
0xe3b DUP2
0xe3c ADD
0xe3d PUSH1 0x40
0xe3f MSTORE
0xe40 PUSH1 0x0
0xe42 DUP2
0xe43 MSTORE
0xe44 SWAP1
0xe45 JUMP
---
0xe34: JUMPDEST 
0xe35: V1164 = 0x20
0xe37: V1165 = 0x40
0xe39: V1166 = M[0x40]
0xe3c: V1167 = ADD V1166 0x20
0xe3d: V1168 = 0x40
0xe3f: M[0x40] = V1167
0xe40: V1169 = 0x0
0xe43: M[V1166] = 0x0
0xe45: JUMP {0x8b1, 0xb55}
---
Entry stack: [V12, 0x4a0, {0x8b1, 0xb55}]
Stack pops: 1
Stack additions: [V1166]
Exit stack: [V12, 0x4a0, V1166]

================================

Block 0xe46
[0xe46:0xe71]
---
Predecessors: []
Successors: []
---
0xe46 STOP
0xe47 LOG1
0xe48 PUSH6 0x627a7a723058
0xe4f SHA3
0xe50 MISSING 0xd8
0xe51 MISSING 0xe9
0xe52 MISSING 0xc4
0xe53 DUP5
0xe54 GT
0xe55 MISSING 0xbb
0xe56 SWAP9
0xe57 CALLDATASIZE
0xe58 SGT
0xe59 GASPRICE
0xe5a DUP7
0xe5b SHR
0xe5c BYTE
0xe5d MISSING 0x5e
0xe5e PUSH5 0x3be0c16569
0xe64 MISSING 0xef
0xe65 MSIZE
0xe66 MISSING 0x2e
0xe67 MISSING 0xea
0xe68 GAS
0xe69 DUP3
0xe6a MISSING 0xad
0xe6b INVALID
0xe6c MISSING 0xba
0xe6d MISSING 0xb0
0xe6e DUP8
0xe6f MISSING 0xd9
0xe70 STOP
0xe71 MISSING 0x29
---
0xe46: STOP 
0xe47: LOG S0 S1 S2
0xe48: V1170 = 0x627a7a723058
0xe4f: V1171 = SHA3 0x627a7a723058 S3
0xe50: MISSING 0xd8
0xe51: MISSING 0xe9
0xe52: MISSING 0xc4
0xe54: V1172 = GT S4 S0
0xe55: MISSING 0xbb
0xe57: V1173 = CALLDATASIZE
0xe58: V1174 = SGT V1173 S9
0xe59: V1175 = GASPRICE
0xe5b: V1176 = SHR S5 V1175
0xe5c: V1177 = BYTE V1176 V1174
0xe5d: MISSING 0x5e
0xe5e: V1178 = 0x3be0c16569
0xe64: MISSING 0xef
0xe65: V1179 = MSIZE
0xe66: MISSING 0x2e
0xe67: MISSING 0xea
0xe68: V1180 = GAS
0xe6a: MISSING 0xad
0xe6b: INVALID 
0xe6c: MISSING 0xba
0xe6d: MISSING 0xb0
0xe6f: MISSING 0xd9
0xe70: STOP 
0xe71: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1171, V1172, S1, S2, S3, S4, V1177, S1, S2, S3, S4, S5, S6, S7, S8, S0, 0x3be0c16569, V1179, S1, V1180, S0, S1, S7, S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x48d
Exit block: 0x50a
Body: 0x48d, 0x494, 0x498, 0x4a0, 0x4c4, 0x4cd, 0x4d5, 0x4dd, 0x4f1, 0x50a, 0x8a9, 0x8b1, 0x8e8

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x518
Exit block: 0x53a
Body: 0x518, 0x51f, 0x523, 0x53a, 0x8eb, 0x8f7, 0x920, 0x926, 0x92d, 0x991

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x54e
Exit block: 0x561
Body: 0x54e, 0x555, 0x559, 0x561, 0x997

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x573
Exit block: 0x561
Body: 0x561, 0x573, 0x57a, 0x57e, 0x99d

Function 4:
Public function signature: 0x1fc27ef2
Entry block: 0x598
Exit block: 0x59f
Body: 0x53a, 0x598, 0x59f, 0x5a3

Function 5:
Public function signature: 0x23b872dd
Entry block: 0x5bf
Exit block: 0x53a
Body: 0x53a, 0x5bf, 0x5c6, 0x5ca, 0x9a3, 0x9b4, 0x9b8, 0x9c0, 0x9c8, 0xa25, 0xa27, 0xa2e, 0xa31, 0xa37, 0xac3, 0xac8, 0xac9

Function 6:
Public function signature: 0x313ce567
Entry block: 0x5fb
Exit block: 0x60e
Body: 0x5fb, 0x602, 0x606, 0x60e, 0xad5, 0xad8

Function 7:
Public function signature: 0x64acdb77
Entry block: 0x624
Exit block: 0x48b
Body: 0x48b, 0x624, 0x62b, 0x62f, 0xadb, 0xaf2, 0xaf6, 0xb04

Function 8:
Public function signature: 0x70a08231
Entry block: 0x639
Exit block: 0x561
Body: 0x561, 0x639, 0x640, 0x644, 0xb06, 0xb20

Function 9:
Public function signature: 0x8f580996
Entry block: 0x66a
Exit block: 0x48b
Body: 0x48b, 0x66a, 0x671, 0x675, 0xb25, 0xb3c, 0xb40, 0xb4b

Function 10:
Public function signature: 0x95d89b41
Entry block: 0x67f
Exit block: 0x50a
Body: 0x4a0, 0x4c4, 0x4cd, 0x4d5, 0x4dd, 0x4f1, 0x50a, 0x67f, 0x686, 0x68a, 0xb4d, 0xb55, 0xb8c

Function 11:
Public function signature: 0x98b01fe3
Entry block: 0x70a
Exit block: 0x561
Body: 0x561, 0x70a, 0x711, 0x715, 0xb8f

Function 12:
Public function signature: 0xa9059cbb
Entry block: 0x72f
Exit block: 0x53a
Body: 0x53a, 0x72f, 0x736, 0x73a, 0xb95, 0xba4, 0xba8, 0xbb0, 0xbb8, 0xbf0, 0xbf3, 0xbf9, 0xc66, 0xc6b, 0xc6c

Function 13:
Public function signature: 0xc59d4847
Entry block: 0x765
Exit block: 0x778
Body: 0x765, 0x76c, 0x770, 0x778, 0xc75, 0xc8c, 0xc95

Function 14:
Public function signature: 0xdd62ed3e
Entry block: 0x7a4
Exit block: 0x561
Body: 0x561, 0x7a4, 0x7ab, 0x7af, 0xc9b, 0xcc2

Function 15:
Public function signature: 0xe1913c0b
Entry block: 0x7db
Exit block: 0x53a
Body: 0x53a, 0x7db, 0x7e2, 0x7e6, 0xcc8, 0xce4, 0xce8, 0xd3e, 0xd42, 0xd4f, 0xd53, 0xdbf, 0xdc3, 0xdd0, 0xdd4, 0xde0

Function 16:
Public function signature: 0xf251fc8c
Entry block: 0x80e
Exit block: 0x561
Body: 0x561, 0x80e, 0x815, 0x819, 0xde7

Function 17:
Public fallback function
Entry block: 0xd5
Exit block: 0x882
Body: 0xd5, 0xd9, 0xe7, 0xee, 0xf2, 0xfa, 0xfe, 0x137, 0x13b, 0x159, 0x15f, 0x170, 0x17f, 0x1dc, 0x1e0, 0x1fb, 0x233, 0x236, 0x266, 0x26c, 0x26f, 0x273, 0x2a3, 0x2a9, 0x2ac, 0x2b0, 0x2e0, 0x2e6, 0x2e9, 0x2ed, 0x31d, 0x323, 0x326, 0x32a, 0x35a, 0x360, 0x363, 0x367, 0x397, 0x39d, 0x3a0, 0x3a4, 0x3d4, 0x3da, 0x3dd, 0x3e1, 0x3f2, 0x3f8, 0x3fb, 0x422, 0x423, 0x485, 0x48b, 0x850, 0x85d, 0x865, 0x869, 0x872, 0x879, 0x882, 0x883, 0x88b, 0x893, 0x894, 0x89c, 0x8a3, 0xded, 0xdf7, 0xdfe, 0xe07, 0xe16, 0xe17, 0xe21, 0xe22, 0xe2a, 0xe2e

Function 18:
Private function
Entry block: 0x833
Exit block: 0x84d
Body: 0x833, 0x842, 0x84a, 0x84d

