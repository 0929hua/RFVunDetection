Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x1e6]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1cb3b20
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x1e6
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1cb3b20
0x3b: V13 = EQ V11 0x1cb3b20
0x3c: V14 = 0x1e6
0x3f: JUMPI 0x1e6 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x1fd]
---
0x40 DUP1
0x41 PUSH4 0x29dcb0cf
0x46 EQ
0x47 PUSH2 0x1fd
0x4a JUMPI
---
0x41: V15 = 0x29dcb0cf
0x46: V16 = EQ 0x29dcb0cf V11
0x47: V17 = 0x1fd
0x4a: JUMPI 0x1fd V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x224]
---
0x4b DUP1
0x4c PUSH4 0x38af3eed
0x51 EQ
0x52 PUSH2 0x224
0x55 JUMPI
---
0x4c: V18 = 0x38af3eed
0x51: V19 = EQ 0x38af3eed V11
0x52: V20 = 0x224
0x55: JUMPI 0x224 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x255]
---
0x56 DUP1
0x57 PUSH4 0x6e66f6e9
0x5c EQ
0x5d PUSH2 0x255
0x60 JUMPI
---
0x57: V21 = 0x6e66f6e9
0x5c: V22 = EQ 0x6e66f6e9 V11
0x5d: V23 = 0x255
0x60: JUMPI 0x255 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x26a]
---
0x61 DUP1
0x62 PUSH4 0x70a08231
0x67 EQ
0x68 PUSH2 0x26a
0x6b JUMPI
---
0x62: V24 = 0x70a08231
0x67: V25 = EQ 0x70a08231 V11
0x68: V26 = 0x26a
0x6b: JUMPI 0x26a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x28b]
---
0x6c DUP1
0x6d PUSH4 0x7a3a0e84
0x72 EQ
0x73 PUSH2 0x28b
0x76 JUMPI
---
0x6d: V27 = 0x7a3a0e84
0x72: V28 = EQ 0x7a3a0e84 V11
0x73: V29 = 0x28b
0x76: JUMPI 0x28b V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x2a0]
---
0x77 DUP1
0x78 PUSH4 0x7b3e5e7b
0x7d EQ
0x7e PUSH2 0x2a0
0x81 JUMPI
---
0x78: V30 = 0x7b3e5e7b
0x7d: V31 = EQ 0x7b3e5e7b V11
0x7e: V32 = 0x2a0
0x81: JUMPI 0x2a0 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x2b5]
---
0x82 DUP1
0x83 PUSH4 0xa035b1fe
0x88 EQ
0x89 PUSH2 0x2b5
0x8c JUMPI
---
0x83: V33 = 0xa035b1fe
0x88: V34 = EQ 0xa035b1fe V11
0x89: V35 = 0x2b5
0x8c: JUMPI 0x2b5 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x2ca]
---
0x8d DUP1
0x8e PUSH4 0xfd6b7ef8
0x93 EQ
0x94 PUSH2 0x2ca
0x97 JUMPI
---
0x8e: V36 = 0xfd6b7ef8
0x93: V37 = EQ 0xfd6b7ef8 V11
0x94: V38 = 0x2ca
0x97: JUMPI 0x2ca V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xab]
---
Predecessors: [0x0, 0x8d]
Successors: [0xac, 0xb0]
---
0x98 JUMPDEST
0x99 PUSH1 0x7
0x9b SLOAD
0x9c PUSH1 0x0
0x9e SWAP1
0x9f PUSH2 0x100
0xa2 SWAP1
0xa3 DIV
0xa4 PUSH1 0xff
0xa6 AND
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0x98: JUMPDEST 
0x99: V39 = 0x7
0x9b: V40 = S[0x7]
0x9c: V41 = 0x0
0x9f: V42 = 0x100
0xa3: V43 = DIV V40 0x100
0xa4: V44 = 0xff
0xa6: V45 = AND 0xff V43
0xa7: V46 = ISZERO V45
0xa8: V47 = 0xb0
0xab: JUMPI 0xb0 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0x98]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V48 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xb0
[0xb0:0xf4]
---
Predecessors: [0x98]
Successors: [0xf5, 0xf6]
---
0xb0 JUMPDEST
0xb1 POP
0xb2 CALLER
0xb3 PUSH1 0x0
0xb5 DUP2
0xb6 DUP2
0xb7 MSTORE
0xb8 PUSH1 0x6
0xba PUSH1 0x20
0xbc MSTORE
0xbd PUSH1 0x40
0xbf SWAP1
0xc0 SHA3
0xc1 DUP1
0xc2 SLOAD
0xc3 CALLVALUE
0xc4 SWAP1
0xc5 DUP2
0xc6 ADD
0xc7 SWAP1
0xc8 SWAP2
0xc9 SSTORE
0xca PUSH1 0x2
0xcc DUP1
0xcd SLOAD
0xce DUP3
0xcf ADD
0xd0 SWAP1
0xd1 SSTORE
0xd2 PUSH1 0x5
0xd4 SLOAD
0xd5 PUSH1 0x4
0xd7 SLOAD
0xd8 SWAP2
0xd9 SWAP3
0xda PUSH1 0x1
0xdc PUSH1 0xa0
0xde PUSH1 0x2
0xe0 EXP
0xe1 SUB
0xe2 SWAP1
0xe3 SWAP2
0xe4 AND
0xe5 SWAP2
0xe6 PUSH4 0xa9059cbb
0xeb SWAP2
0xec SWAP1
0xed DUP5
0xee DUP2
0xef ISZERO
0xf0 ISZERO
0xf1 PUSH2 0xf6
0xf4 JUMPI
---
0xb0: JUMPDEST 
0xb2: V49 = CALLER
0xb3: V50 = 0x0
0xb7: M[0x0] = V49
0xb8: V51 = 0x6
0xba: V52 = 0x20
0xbc: M[0x20] = 0x6
0xbd: V53 = 0x40
0xc0: V54 = SHA3 0x0 0x40
0xc2: V55 = S[V54]
0xc3: V56 = CALLVALUE
0xc6: V57 = ADD V56 V55
0xc9: S[V54] = V57
0xca: V58 = 0x2
0xcd: V59 = S[0x2]
0xcf: V60 = ADD V56 V59
0xd1: S[0x2] = V60
0xd2: V61 = 0x5
0xd4: V62 = S[0x5]
0xd5: V63 = 0x4
0xd7: V64 = S[0x4]
0xda: V65 = 0x1
0xdc: V66 = 0xa0
0xde: V67 = 0x2
0xe0: V68 = EXP 0x2 0xa0
0xe1: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4: V70 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V71 = 0xa9059cbb
0xef: V72 = ISZERO V64
0xf0: V73 = ISZERO V72
0xf1: V74 = 0xf6
0xf4: JUMPI 0xf6 V73
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V56, V70, 0xa9059cbb, V49, V64, V56]
Exit stack: [V11, V56, V70, 0xa9059cbb, V49, V64, V56]

================================

Block 0xf5
[0xf5:0xf5]
---
Predecessors: [0xb0]
Successors: []
---
0xf5 INVALID
---
0xf5: INVALID 
---
Entry stack: [V11, V56, V70, 0xa9059cbb, V49, V64, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56, V70, 0xa9059cbb, V49, V64, V56]

================================

Block 0xf6
[0xf6:0x15d]
---
Predecessors: [0xb0]
Successors: [0x15e, 0x162]
---
0xf6 JUMPDEST
0xf7 DIV
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP4
0xfc PUSH4 0xffffffff
0x101 AND
0x102 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x120 MUL
0x121 DUP2
0x122 MSTORE
0x123 PUSH1 0x4
0x125 ADD
0x126 DUP1
0x127 DUP4
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 AND
0x131 PUSH1 0x1
0x133 PUSH1 0xa0
0x135 PUSH1 0x2
0x137 EXP
0x138 SUB
0x139 AND
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f DUP3
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP3
0x146 POP
0x147 POP
0x148 POP
0x149 PUSH1 0x0
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f DUP4
0x150 SUB
0x151 DUP2
0x152 PUSH1 0x0
0x154 DUP8
0x155 DUP1
0x156 EXTCODESIZE
0x157 ISZERO
0x158 DUP1
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0xf6: JUMPDEST 
0xf7: V75 = DIV V56 V64
0xf8: V76 = 0x40
0xfa: V77 = M[0x40]
0xfc: V78 = 0xffffffff
0x101: V79 = AND 0xffffffff 0xa9059cbb
0x102: V80 = 0x100000000000000000000000000000000000000000000000000000000
0x120: V81 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x122: M[V77] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x123: V82 = 0x4
0x125: V83 = ADD 0x4 V77
0x128: V84 = 0x1
0x12a: V85 = 0xa0
0x12c: V86 = 0x2
0x12e: V87 = EXP 0x2 0xa0
0x12f: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x130: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x131: V90 = 0x1
0x133: V91 = 0xa0
0x135: V92 = 0x2
0x137: V93 = EXP 0x2 0xa0
0x138: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x13b: M[V83] = V95
0x13c: V96 = 0x20
0x13e: V97 = ADD 0x20 V83
0x141: M[V97] = V75
0x142: V98 = 0x20
0x144: V99 = ADD 0x20 V97
0x149: V100 = 0x0
0x14b: V101 = 0x40
0x14d: V102 = M[0x40]
0x150: V103 = SUB V99 V102
0x152: V104 = 0x0
0x156: V105 = EXTCODESIZE V70
0x157: V106 = ISZERO V105
0x159: V107 = ISZERO V106
0x15a: V108 = 0x162
0x15d: JUMPI 0x162 V107
---
Entry stack: [V11, V56, V70, 0xa9059cbb, V49, V64, V56]
Stack pops: 5
Stack additions: [S4, S3, V99, 0x0, V102, V103, V102, 0x0, S4, V106]
Exit stack: [V11, V56, V70, 0xa9059cbb, V99, 0x0, V102, V103, V102, 0x0, V70, V106]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0xf6]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V109 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V11, V56, V70, 0xa9059cbb, V99, 0x0, V102, V103, V102, 0x0, V70, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56, V70, 0xa9059cbb, V99, 0x0, V102, V103, V102, 0x0, V70, V106]

================================

Block 0x162
[0x162:0x16c]
---
Predecessors: [0xf6]
Successors: [0x16d, 0x176]
---
0x162 JUMPDEST
0x163 POP
0x164 GAS
0x165 CALL
0x166 ISZERO
0x167 DUP1
0x168 ISZERO
0x169 PUSH2 0x176
0x16c JUMPI
---
0x162: JUMPDEST 
0x164: V110 = GAS
0x165: V111 = CALL V110 V70 0x0 V102 V103 V102 0x0
0x166: V112 = ISZERO V111
0x168: V113 = ISZERO V112
0x169: V114 = 0x176
0x16c: JUMPI 0x176 V113
---
Entry stack: [V11, V56, V70, 0xa9059cbb, V99, 0x0, V102, V103, V102, 0x0, V70, V106]
Stack pops: 7
Stack additions: [V112]
Exit stack: [V11, V56, V70, 0xa9059cbb, V99, V112]

================================

Block 0x16d
[0x16d:0x175]
---
Predecessors: [0x162]
Successors: []
---
0x16d RETURNDATASIZE
0x16e PUSH1 0x0
0x170 DUP1
0x171 RETURNDATACOPY
0x172 RETURNDATASIZE
0x173 PUSH1 0x0
0x175 REVERT
---
0x16d: V115 = RETURNDATASIZE
0x16e: V116 = 0x0
0x171: RETURNDATACOPY 0x0 0x0 V115
0x172: V117 = RETURNDATASIZE
0x173: V118 = 0x0
0x175: REVERT 0x0 V117
---
Entry stack: [V11, V56, V70, 0xa9059cbb, V99, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56, V70, 0xa9059cbb, V99, V112]

================================

Block 0x176
[0x176:0x1e5]
---
Predecessors: [0x162]
Successors: []
---
0x176 JUMPDEST
0x177 POP
0x178 POP
0x179 PUSH1 0x40
0x17b DUP1
0x17c MLOAD
0x17d CALLER
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 DUP2
0x183 ADD
0x184 DUP6
0x185 SWAP1
0x186 MSTORE
0x187 PUSH1 0x1
0x189 DUP2
0x18a DUP4
0x18b ADD
0x18c MSTORE
0x18d SWAP1
0x18e MLOAD
0x18f PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1b0 SWAP4
0x1b1 POP
0x1b2 SWAP1
0x1b3 DUP2
0x1b4 SWAP1
0x1b5 SUB
0x1b6 PUSH1 0x60
0x1b8 ADD
0x1b9 SWAP2
0x1ba POP
0x1bb LOG1
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf SLOAD
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb SWAP1
0x1cc SWAP2
0x1cd AND
0x1ce SWAP2
0x1cf DUP4
0x1d0 ISZERO
0x1d1 PUSH2 0x8fc
0x1d4 MUL
0x1d5 SWAP2
0x1d6 DUP5
0x1d7 SWAP2
0x1d8 DUP2
0x1d9 DUP2
0x1da DUP2
0x1db DUP6
0x1dc DUP9
0x1dd DUP9
0x1de CALL
0x1df POP
0x1e0 POP
0x1e1 POP
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 STOP
---
0x176: JUMPDEST 
0x179: V119 = 0x40
0x17c: V120 = M[0x40]
0x17d: V121 = CALLER
0x17f: M[V120] = V121
0x180: V122 = 0x20
0x183: V123 = ADD V120 0x20
0x186: M[V123] = V56
0x187: V124 = 0x1
0x18b: V125 = ADD 0x40 V120
0x18c: M[V125] = 0x1
0x18e: V126 = M[0x40]
0x18f: V127 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1b5: V128 = SUB V120 V126
0x1b6: V129 = 0x60
0x1b8: V130 = ADD 0x60 V128
0x1bb: LOG V126 V130 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1bc: V131 = 0x0
0x1bf: V132 = S[0x0]
0x1c0: V133 = 0x40
0x1c2: V134 = M[0x40]
0x1c3: V135 = 0x1
0x1c5: V136 = 0xa0
0x1c7: V137 = 0x2
0x1c9: V138 = EXP 0x2 0xa0
0x1ca: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cd: V140 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V141 = ISZERO V56
0x1d1: V142 = 0x8fc
0x1d4: V143 = MUL 0x8fc V141
0x1de: V144 = CALL V143 V140 V56 V134 0x0 V134 0x0
0x1e5: STOP 
---
Entry stack: [V11, V56, V70, 0xa9059cbb, V99, V112]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e6
[0x1e6:0x1ed]
---
Predecessors: [0xd]
Successors: [0x1ee, 0x1f2]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 DUP1
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V145 = CALLVALUE
0x1e9: V146 = ISZERO V145
0x1ea: V147 = 0x1f2
0x1ed: JUMPI 0x1f2 V146
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V145]
Exit stack: [V11, V145]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V148 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V11, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V145]

================================

Block 0x1f2
[0x1f2:0x1fa]
---
Predecessors: [0x1e6]
Successors: [0x2df]
---
0x1f2 JUMPDEST
0x1f3 POP
0x1f4 PUSH2 0x1fb
0x1f7 PUSH2 0x2df
0x1fa JUMP
---
0x1f2: JUMPDEST 
0x1f4: V149 = 0x1fb
0x1f7: V150 = 0x2df
0x1fa: JUMP 0x2df
---
Entry stack: [V11, V145]
Stack pops: 1
Stack additions: [0x1fb]
Exit stack: [V11, 0x1fb]

================================

Block 0x1fb
[0x1fb:0x1fc]
---
Predecessors: [0x35c, 0x508]
Successors: []
---
0x1fb JUMPDEST
0x1fc STOP
---
0x1fb: JUMPDEST 
0x1fc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x40]
Successors: [0x205, 0x209]
---
0x1fd JUMPDEST
0x1fe CALLVALUE
0x1ff DUP1
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V151 = CALLVALUE
0x200: V152 = ISZERO V151
0x201: V153 = 0x209
0x204: JUMPI 0x209 V152
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V151]
Exit stack: [V11, V151]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1fd]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V154 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V11, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V151]

================================

Block 0x209
[0x209:0x211]
---
Predecessors: [0x1fd]
Successors: [0x35e]
---
0x209 JUMPDEST
0x20a POP
0x20b PUSH2 0x212
0x20e PUSH2 0x35e
0x211 JUMP
---
0x209: JUMPDEST 
0x20b: V155 = 0x212
0x20e: V156 = 0x35e
0x211: JUMP 0x35e
---
Entry stack: [V11, V151]
Stack pops: 1
Stack additions: [0x212]
Exit stack: [V11, 0x212]

================================

Block 0x212
[0x212:0x223]
---
Predecessors: [0x35e, 0x382, 0x394, 0x39a, 0x3a0]
Successors: []
---
0x212 JUMPDEST
0x213 PUSH1 0x40
0x215 DUP1
0x216 MLOAD
0x217 SWAP2
0x218 DUP3
0x219 MSTORE
0x21a MLOAD
0x21b SWAP1
0x21c DUP2
0x21d SWAP1
0x21e SUB
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP1
0x223 RETURN
---
0x212: JUMPDEST 
0x213: V157 = 0x40
0x216: V158 = M[0x40]
0x219: M[V158] = S0
0x21a: V159 = M[0x40]
0x21e: V160 = SUB V158 V159
0x21f: V161 = 0x20
0x221: V162 = ADD 0x20 V160
0x223: RETURN V159 V162
---
Entry stack: [V11, 0x212, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x212]

================================

Block 0x224
[0x224:0x22b]
---
Predecessors: [0x4b]
Successors: [0x22c, 0x230]
---
0x224 JUMPDEST
0x225 CALLVALUE
0x226 DUP1
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x224: JUMPDEST 
0x225: V163 = CALLVALUE
0x227: V164 = ISZERO V163
0x228: V165 = 0x230
0x22b: JUMPI 0x230 V164
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V163]
Exit stack: [V11, V163]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x224]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V166 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V11, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V163]

================================

Block 0x230
[0x230:0x238]
---
Predecessors: [0x224]
Successors: [0x364]
---
0x230 JUMPDEST
0x231 POP
0x232 PUSH2 0x239
0x235 PUSH2 0x364
0x238 JUMP
---
0x230: JUMPDEST 
0x232: V167 = 0x239
0x235: V168 = 0x364
0x238: JUMP 0x364
---
Entry stack: [V11, V163]
Stack pops: 1
Stack additions: [0x239]
Exit stack: [V11, 0x239]

================================

Block 0x239
[0x239:0x254]
---
Predecessors: [0x364, 0x373]
Successors: []
---
0x239 JUMPDEST
0x23a PUSH1 0x40
0x23c DUP1
0x23d MLOAD
0x23e PUSH1 0x1
0x240 PUSH1 0xa0
0x242 PUSH1 0x2
0x244 EXP
0x245 SUB
0x246 SWAP1
0x247 SWAP3
0x248 AND
0x249 DUP3
0x24a MSTORE
0x24b MLOAD
0x24c SWAP1
0x24d DUP2
0x24e SWAP1
0x24f SUB
0x250 PUSH1 0x20
0x252 ADD
0x253 SWAP1
0x254 RETURN
---
0x239: JUMPDEST 
0x23a: V169 = 0x40
0x23d: V170 = M[0x40]
0x23e: V171 = 0x1
0x240: V172 = 0xa0
0x242: V173 = 0x2
0x244: V174 = EXP 0x2 0xa0
0x245: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x248: V176 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x24a: M[V170] = V176
0x24b: V177 = M[0x40]
0x24f: V178 = SUB V170 V177
0x250: V179 = 0x20
0x252: V180 = ADD 0x20 V178
0x254: RETURN V177 V180
---
Entry stack: [V11, 0x239, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x239]

================================

Block 0x255
[0x255:0x25c]
---
Predecessors: [0x56]
Successors: [0x25d, 0x261]
---
0x255 JUMPDEST
0x256 CALLVALUE
0x257 DUP1
0x258 ISZERO
0x259 PUSH2 0x261
0x25c JUMPI
---
0x255: JUMPDEST 
0x256: V181 = CALLVALUE
0x258: V182 = ISZERO V181
0x259: V183 = 0x261
0x25c: JUMPI 0x261 V182
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V181]
Exit stack: [V11, V181]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x255]
Successors: []
---
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
---
0x25d: V184 = 0x0
0x260: REVERT 0x0 0x0
---
Entry stack: [V11, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V181]

================================

Block 0x261
[0x261:0x269]
---
Predecessors: [0x255]
Successors: [0x373]
---
0x261 JUMPDEST
0x262 POP
0x263 PUSH2 0x239
0x266 PUSH2 0x373
0x269 JUMP
---
0x261: JUMPDEST 
0x263: V185 = 0x239
0x266: V186 = 0x373
0x269: JUMP 0x373
---
Entry stack: [V11, V181]
Stack pops: 1
Stack additions: [0x239]
Exit stack: [V11, 0x239]

================================

Block 0x26a
[0x26a:0x271]
---
Predecessors: [0x61]
Successors: [0x272, 0x276]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c DUP1
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x26a: JUMPDEST 
0x26b: V187 = CALLVALUE
0x26d: V188 = ISZERO V187
0x26e: V189 = 0x276
0x271: JUMPI 0x276 V188
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V187]
Exit stack: [V11, V187]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x26a]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V190 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V11, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V187]

================================

Block 0x276
[0x276:0x28a]
---
Predecessors: [0x26a]
Successors: [0x382]
---
0x276 JUMPDEST
0x277 POP
0x278 PUSH2 0x212
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 PUSH1 0x4
0x285 CALLDATALOAD
0x286 AND
0x287 PUSH2 0x382
0x28a JUMP
---
0x276: JUMPDEST 
0x278: V191 = 0x212
0x27b: V192 = 0x1
0x27d: V193 = 0xa0
0x27f: V194 = 0x2
0x281: V195 = EXP 0x2 0xa0
0x282: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x283: V197 = 0x4
0x285: V198 = CALLDATALOAD 0x4
0x286: V199 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x287: V200 = 0x382
0x28a: JUMP 0x382
---
Entry stack: [V11, V187]
Stack pops: 1
Stack additions: [0x212, V199]
Exit stack: [V11, 0x212, V199]

================================

Block 0x28b
[0x28b:0x292]
---
Predecessors: [0x6c]
Successors: [0x293, 0x297]
---
0x28b JUMPDEST
0x28c CALLVALUE
0x28d DUP1
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x28b: JUMPDEST 
0x28c: V201 = CALLVALUE
0x28e: V202 = ISZERO V201
0x28f: V203 = 0x297
0x292: JUMPI 0x297 V202
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V201]
Exit stack: [V11, V201]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x28b]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V204 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V11, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V201]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x28b]
Successors: [0x394]
---
0x297 JUMPDEST
0x298 POP
0x299 PUSH2 0x212
0x29c PUSH2 0x394
0x29f JUMP
---
0x297: JUMPDEST 
0x299: V205 = 0x212
0x29c: V206 = 0x394
0x29f: JUMP 0x394
---
Entry stack: [V11, V201]
Stack pops: 1
Stack additions: [0x212]
Exit stack: [V11, 0x212]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x77]
Successors: [0x2a8, 0x2ac]
---
0x2a0 JUMPDEST
0x2a1 CALLVALUE
0x2a2 DUP1
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V207 = CALLVALUE
0x2a3: V208 = ISZERO V207
0x2a4: V209 = 0x2ac
0x2a7: JUMPI 0x2ac V208
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V207]
Exit stack: [V11, V207]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a0]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V210 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V11, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V207]

================================

Block 0x2ac
[0x2ac:0x2b4]
---
Predecessors: [0x2a0]
Successors: [0x39a]
---
0x2ac JUMPDEST
0x2ad POP
0x2ae PUSH2 0x212
0x2b1 PUSH2 0x39a
0x2b4 JUMP
---
0x2ac: JUMPDEST 
0x2ae: V211 = 0x212
0x2b1: V212 = 0x39a
0x2b4: JUMP 0x39a
---
Entry stack: [V11, V207]
Stack pops: 1
Stack additions: [0x212]
Exit stack: [V11, 0x212]

================================

Block 0x2b5
[0x2b5:0x2bc]
---
Predecessors: [0x82]
Successors: [0x2bd, 0x2c1]
---
0x2b5 JUMPDEST
0x2b6 CALLVALUE
0x2b7 DUP1
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V213 = CALLVALUE
0x2b8: V214 = ISZERO V213
0x2b9: V215 = 0x2c1
0x2bc: JUMPI 0x2c1 V214
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V213]
Exit stack: [V11, V213]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2b5]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V216 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V11, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V213]

================================

Block 0x2c1
[0x2c1:0x2c9]
---
Predecessors: [0x2b5]
Successors: [0x3a0]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 PUSH2 0x212
0x2c6 PUSH2 0x3a0
0x2c9 JUMP
---
0x2c1: JUMPDEST 
0x2c3: V217 = 0x212
0x2c6: V218 = 0x3a0
0x2c9: JUMP 0x3a0
---
Entry stack: [V11, V213]
Stack pops: 1
Stack additions: [0x212]
Exit stack: [V11, 0x212]

================================

Block 0x2ca
[0x2ca:0x2d1]
---
Predecessors: [0x8d]
Successors: [0x2d2, 0x2d6]
---
0x2ca JUMPDEST
0x2cb CALLVALUE
0x2cc DUP1
0x2cd ISZERO
0x2ce PUSH2 0x2d6
0x2d1 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V219 = CALLVALUE
0x2cd: V220 = ISZERO V219
0x2ce: V221 = 0x2d6
0x2d1: JUMPI 0x2d6 V220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V219]
Exit stack: [V11, V219]

================================

Block 0x2d2
[0x2d2:0x2d5]
---
Predecessors: [0x2ca]
Successors: []
---
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 REVERT
---
0x2d2: V222 = 0x0
0x2d5: REVERT 0x0 0x0
---
Entry stack: [V11, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V219]

================================

Block 0x2d6
[0x2d6:0x2de]
---
Predecessors: [0x2ca]
Successors: [0x3a6]
---
0x2d6 JUMPDEST
0x2d7 POP
0x2d8 PUSH2 0x1fb
0x2db PUSH2 0x3a6
0x2de JUMP
---
0x2d6: JUMPDEST 
0x2d8: V223 = 0x1fb
0x2db: V224 = 0x3a6
0x2de: JUMP 0x3a6
---
Entry stack: [V11, V219]
Stack pops: 1
Stack additions: [0x1fb]
Exit stack: [V11, 0x1fb]

================================

Block 0x2df
[0x2df:0x2e8]
---
Predecessors: [0x1f2]
Successors: [0x2e9, 0x35c]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x3
0x2e2 SLOAD
0x2e3 TIMESTAMP
0x2e4 LT
0x2e5 PUSH2 0x35c
0x2e8 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V225 = 0x3
0x2e2: V226 = S[0x3]
0x2e3: V227 = TIMESTAMP
0x2e4: V228 = LT V227 V226
0x2e5: V229 = 0x35c
0x2e8: JUMPI 0x35c V228
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb]

================================

Block 0x2e9
[0x2e9:0x2f3]
---
Predecessors: [0x2df]
Successors: [0x2f4, 0x34c]
---
0x2e9 PUSH1 0x1
0x2eb SLOAD
0x2ec PUSH1 0x2
0x2ee SLOAD
0x2ef LT
0x2f0 PUSH2 0x34c
0x2f3 JUMPI
---
0x2e9: V230 = 0x1
0x2eb: V231 = S[0x1]
0x2ec: V232 = 0x2
0x2ee: V233 = S[0x2]
0x2ef: V234 = LT V233 V231
0x2f0: V235 = 0x34c
0x2f3: JUMPI 0x34c V234
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb]

================================

Block 0x2f4
[0x2f4:0x34b]
---
Predecessors: [0x2e9]
Successors: [0x34c]
---
0x2f4 PUSH1 0x7
0x2f6 DUP1
0x2f7 SLOAD
0x2f8 PUSH1 0xff
0x2fa NOT
0x2fb AND
0x2fc PUSH1 0x1
0x2fe OR
0x2ff SWAP1
0x300 SSTORE
0x301 PUSH1 0x0
0x303 SLOAD
0x304 PUSH1 0x2
0x306 SLOAD
0x307 PUSH1 0x40
0x309 DUP1
0x30a MLOAD
0x30b PUSH1 0x1
0x30d PUSH1 0xa0
0x30f PUSH1 0x2
0x311 EXP
0x312 SUB
0x313 SWAP1
0x314 SWAP4
0x315 AND
0x316 DUP4
0x317 MSTORE
0x318 PUSH1 0x20
0x31a DUP4
0x31b ADD
0x31c SWAP2
0x31d SWAP1
0x31e SWAP2
0x31f MSTORE
0x320 DUP1
0x321 MLOAD
0x322 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x343 SWAP3
0x344 DUP2
0x345 SWAP1
0x346 SUB
0x347 SWAP1
0x348 SWAP2
0x349 ADD
0x34a SWAP1
0x34b LOG1
---
0x2f4: V236 = 0x7
0x2f7: V237 = S[0x7]
0x2f8: V238 = 0xff
0x2fa: V239 = NOT 0xff
0x2fb: V240 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V237
0x2fc: V241 = 0x1
0x2fe: V242 = OR 0x1 V240
0x300: S[0x7] = V242
0x301: V243 = 0x0
0x303: V244 = S[0x0]
0x304: V245 = 0x2
0x306: V246 = S[0x2]
0x307: V247 = 0x40
0x30a: V248 = M[0x40]
0x30b: V249 = 0x1
0x30d: V250 = 0xa0
0x30f: V251 = 0x2
0x311: V252 = EXP 0x2 0xa0
0x312: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V254 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x317: M[V248] = V254
0x318: V255 = 0x20
0x31b: V256 = ADD V248 0x20
0x31f: M[V256] = V246
0x321: V257 = M[0x40]
0x322: V258 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x346: V259 = SUB V248 V257
0x349: V260 = ADD 0x40 V259
0x34b: LOG V257 V260 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb]

================================

Block 0x34c
[0x34c:0x35b]
---
Predecessors: [0x2e9, 0x2f4]
Successors: [0x35c]
---
0x34c JUMPDEST
0x34d PUSH1 0x7
0x34f DUP1
0x350 SLOAD
0x351 PUSH2 0xff00
0x354 NOT
0x355 AND
0x356 PUSH2 0x100
0x359 OR
0x35a SWAP1
0x35b SSTORE
---
0x34c: JUMPDEST 
0x34d: V261 = 0x7
0x350: V262 = S[0x7]
0x351: V263 = 0xff00
0x354: V264 = NOT 0xff00
0x355: V265 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V262
0x356: V266 = 0x100
0x359: V267 = OR 0x100 V265
0x35b: S[0x7] = V267
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb]

================================

Block 0x35c
[0x35c:0x35d]
---
Predecessors: [0x2df, 0x34c]
Successors: [0x1fb]
---
0x35c JUMPDEST
0x35d JUMP
---
0x35c: JUMPDEST 
0x35d: JUMP 0x1fb
---
Entry stack: [V11, 0x1fb]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x35e
[0x35e:0x363]
---
Predecessors: [0x209]
Successors: [0x212]
---
0x35e JUMPDEST
0x35f PUSH1 0x3
0x361 SLOAD
0x362 DUP2
0x363 JUMP
---
0x35e: JUMPDEST 
0x35f: V268 = 0x3
0x361: V269 = S[0x3]
0x363: JUMP 0x212
---
Entry stack: [V11, 0x212]
Stack pops: 1
Stack additions: [S0, V269]
Exit stack: [V11, 0x212, V269]

================================

Block 0x364
[0x364:0x372]
---
Predecessors: [0x230]
Successors: [0x239]
---
0x364 JUMPDEST
0x365 PUSH1 0x0
0x367 SLOAD
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 AND
0x371 DUP2
0x372 JUMP
---
0x364: JUMPDEST 
0x365: V270 = 0x0
0x367: V271 = S[0x0]
0x368: V272 = 0x1
0x36a: V273 = 0xa0
0x36c: V274 = 0x2
0x36e: V275 = EXP 0x2 0xa0
0x36f: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x370: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x372: JUMP 0x239
---
Entry stack: [V11, 0x239]
Stack pops: 1
Stack additions: [S0, V277]
Exit stack: [V11, 0x239, V277]

================================

Block 0x373
[0x373:0x381]
---
Predecessors: [0x261]
Successors: [0x239]
---
0x373 JUMPDEST
0x374 PUSH1 0x5
0x376 SLOAD
0x377 PUSH1 0x1
0x379 PUSH1 0xa0
0x37b PUSH1 0x2
0x37d EXP
0x37e SUB
0x37f AND
0x380 DUP2
0x381 JUMP
---
0x373: JUMPDEST 
0x374: V278 = 0x5
0x376: V279 = S[0x5]
0x377: V280 = 0x1
0x379: V281 = 0xa0
0x37b: V282 = 0x2
0x37d: V283 = EXP 0x2 0xa0
0x37e: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37f: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x381: JUMP 0x239
---
Entry stack: [V11, 0x239]
Stack pops: 1
Stack additions: [S0, V285]
Exit stack: [V11, 0x239, V285]

================================

Block 0x382
[0x382:0x393]
---
Predecessors: [0x276]
Successors: [0x212]
---
0x382 JUMPDEST
0x383 PUSH1 0x6
0x385 PUSH1 0x20
0x387 MSTORE
0x388 PUSH1 0x0
0x38a SWAP1
0x38b DUP2
0x38c MSTORE
0x38d PUSH1 0x40
0x38f SWAP1
0x390 SHA3
0x391 SLOAD
0x392 DUP2
0x393 JUMP
---
0x382: JUMPDEST 
0x383: V286 = 0x6
0x385: V287 = 0x20
0x387: M[0x20] = 0x6
0x388: V288 = 0x0
0x38c: M[0x0] = V199
0x38d: V289 = 0x40
0x390: V290 = SHA3 0x0 0x40
0x391: V291 = S[V290]
0x393: JUMP 0x212
---
Entry stack: [V11, 0x212, V199]
Stack pops: 2
Stack additions: [S1, V291]
Exit stack: [V11, 0x212, V291]

================================

Block 0x394
[0x394:0x399]
---
Predecessors: [0x297]
Successors: [0x212]
---
0x394 JUMPDEST
0x395 PUSH1 0x1
0x397 SLOAD
0x398 DUP2
0x399 JUMP
---
0x394: JUMPDEST 
0x395: V292 = 0x1
0x397: V293 = S[0x1]
0x399: JUMP 0x212
---
Entry stack: [V11, 0x212]
Stack pops: 1
Stack additions: [S0, V293]
Exit stack: [V11, 0x212, V293]

================================

Block 0x39a
[0x39a:0x39f]
---
Predecessors: [0x2ac]
Successors: [0x212]
---
0x39a JUMPDEST
0x39b PUSH1 0x2
0x39d SLOAD
0x39e DUP2
0x39f JUMP
---
0x39a: JUMPDEST 
0x39b: V294 = 0x2
0x39d: V295 = S[0x2]
0x39f: JUMP 0x212
---
Entry stack: [V11, 0x212]
Stack pops: 1
Stack additions: [S0, V295]
Exit stack: [V11, 0x212, V295]

================================

Block 0x3a0
[0x3a0:0x3a5]
---
Predecessors: [0x2c1]
Successors: [0x212]
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x4
0x3a3 SLOAD
0x3a4 DUP2
0x3a5 JUMP
---
0x3a0: JUMPDEST 
0x3a1: V296 = 0x4
0x3a3: V297 = S[0x4]
0x3a5: JUMP 0x212
---
Entry stack: [V11, 0x212]
Stack pops: 1
Stack additions: [S0, V297]
Exit stack: [V11, 0x212, V297]

================================

Block 0x3a6
[0x3a6:0x3b2]
---
Predecessors: [0x2d6]
Successors: [0x3b3, 0x508]
---
0x3a6 JUMPDEST
0x3a7 PUSH1 0x3
0x3a9 SLOAD
0x3aa PUSH1 0x0
0x3ac SWAP1
0x3ad TIMESTAMP
0x3ae LT
0x3af PUSH2 0x508
0x3b2 JUMPI
---
0x3a6: JUMPDEST 
0x3a7: V298 = 0x3
0x3a9: V299 = S[0x3]
0x3aa: V300 = 0x0
0x3ad: V301 = TIMESTAMP
0x3ae: V302 = LT V301 V299
0x3af: V303 = 0x508
0x3b2: JUMPI 0x508 V302
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1fb, 0x0]

================================

Block 0x3b3
[0x3b3:0x3be]
---
Predecessors: [0x3a6]
Successors: [0x3bf, 0x455]
---
0x3b3 PUSH1 0x7
0x3b5 SLOAD
0x3b6 PUSH1 0xff
0x3b8 AND
0x3b9 ISZERO
0x3ba ISZERO
0x3bb PUSH2 0x455
0x3be JUMPI
---
0x3b3: V304 = 0x7
0x3b5: V305 = S[0x7]
0x3b6: V306 = 0xff
0x3b8: V307 = AND 0xff V305
0x3b9: V308 = ISZERO V307
0x3ba: V309 = ISZERO V308
0x3bb: V310 = 0x455
0x3be: JUMPI 0x455 V309
---
Entry stack: [V11, 0x1fb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb, 0x0]

================================

Block 0x3bf
[0x3bf:0x3dc]
---
Predecessors: [0x3b3]
Successors: [0x3dd, 0x455]
---
0x3bf POP
0x3c0 CALLER
0x3c1 PUSH1 0x0
0x3c3 SWAP1
0x3c4 DUP2
0x3c5 MSTORE
0x3c6 PUSH1 0x6
0x3c8 PUSH1 0x20
0x3ca MSTORE
0x3cb PUSH1 0x40
0x3cd DUP2
0x3ce SHA3
0x3cf DUP1
0x3d0 SLOAD
0x3d1 SWAP1
0x3d2 DUP3
0x3d3 SWAP1
0x3d4 SSTORE
0x3d5 SWAP1
0x3d6 DUP2
0x3d7 GT
0x3d8 ISZERO
0x3d9 PUSH2 0x455
0x3dc JUMPI
---
0x3c0: V311 = CALLER
0x3c1: V312 = 0x0
0x3c5: M[0x0] = V311
0x3c6: V313 = 0x6
0x3c8: V314 = 0x20
0x3ca: M[0x20] = 0x6
0x3cb: V315 = 0x40
0x3ce: V316 = SHA3 0x0 0x40
0x3d0: V317 = S[V316]
0x3d4: S[V316] = 0x0
0x3d7: V318 = GT V317 0x0
0x3d8: V319 = ISZERO V318
0x3d9: V320 = 0x455
0x3dc: JUMPI 0x455 V319
---
Entry stack: [V11, 0x1fb, 0x0]
Stack pops: 1
Stack additions: [V317]
Exit stack: [V11, 0x1fb, V317]

================================

Block 0x3dd
[0x3dd:0x3fd]
---
Predecessors: [0x3bf]
Successors: [0x3fe, 0x442]
---
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 CALLER
0x3e1 SWAP1
0x3e2 DUP3
0x3e3 ISZERO
0x3e4 PUSH2 0x8fc
0x3e7 MUL
0x3e8 SWAP1
0x3e9 DUP4
0x3ea SWAP1
0x3eb PUSH1 0x0
0x3ed DUP2
0x3ee DUP2
0x3ef DUP2
0x3f0 DUP6
0x3f1 DUP9
0x3f2 DUP9
0x3f3 CALL
0x3f4 SWAP4
0x3f5 POP
0x3f6 POP
0x3f7 POP
0x3f8 POP
0x3f9 ISZERO
0x3fa PUSH2 0x442
0x3fd JUMPI
---
0x3dd: V321 = 0x40
0x3df: V322 = M[0x40]
0x3e0: V323 = CALLER
0x3e3: V324 = ISZERO V317
0x3e4: V325 = 0x8fc
0x3e7: V326 = MUL 0x8fc V324
0x3eb: V327 = 0x0
0x3f3: V328 = CALL V326 V323 V317 V322 0x0 V322 0x0
0x3f9: V329 = ISZERO V328
0x3fa: V330 = 0x442
0x3fd: JUMPI 0x442 V329
---
Entry stack: [V11, 0x1fb, V317]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1fb, V317]

================================

Block 0x3fe
[0x3fe:0x441]
---
Predecessors: [0x3dd]
Successors: [0x455]
---
0x3fe PUSH1 0x40
0x400 DUP1
0x401 MLOAD
0x402 CALLER
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x20
0x407 DUP2
0x408 ADD
0x409 DUP4
0x40a SWAP1
0x40b MSTORE
0x40c PUSH1 0x0
0x40e DUP2
0x40f DUP4
0x410 ADD
0x411 MSTORE
0x412 SWAP1
0x413 MLOAD
0x414 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x435 SWAP2
0x436 DUP2
0x437 SWAP1
0x438 SUB
0x439 PUSH1 0x60
0x43b ADD
0x43c SWAP1
0x43d LOG1
0x43e PUSH2 0x455
0x441 JUMP
---
0x3fe: V331 = 0x40
0x401: V332 = M[0x40]
0x402: V333 = CALLER
0x404: M[V332] = V333
0x405: V334 = 0x20
0x408: V335 = ADD V332 0x20
0x40b: M[V335] = V317
0x40c: V336 = 0x0
0x410: V337 = ADD 0x40 V332
0x411: M[V337] = 0x0
0x413: V338 = M[0x40]
0x414: V339 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x438: V340 = SUB V332 V338
0x439: V341 = 0x60
0x43b: V342 = ADD 0x60 V340
0x43d: LOG V338 V342 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x43e: V343 = 0x455
0x441: JUMP 0x455
---
Entry stack: [V11, 0x1fb, V317]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1fb, V317]

================================

Block 0x442
[0x442:0x454]
---
Predecessors: [0x3dd]
Successors: [0x455]
---
0x442 JUMPDEST
0x443 CALLER
0x444 PUSH1 0x0
0x446 SWAP1
0x447 DUP2
0x448 MSTORE
0x449 PUSH1 0x6
0x44b PUSH1 0x20
0x44d MSTORE
0x44e PUSH1 0x40
0x450 SWAP1
0x451 SHA3
0x452 DUP2
0x453 SWAP1
0x454 SSTORE
---
0x442: JUMPDEST 
0x443: V344 = CALLER
0x444: V345 = 0x0
0x448: M[0x0] = V344
0x449: V346 = 0x6
0x44b: V347 = 0x20
0x44d: M[0x20] = 0x6
0x44e: V348 = 0x40
0x451: V349 = SHA3 0x0 0x40
0x454: S[V349] = V317
---
Entry stack: [V11, 0x1fb, V317]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1fb, V317]

================================

Block 0x455
[0x455:0x461]
---
Predecessors: [0x3b3, 0x3bf, 0x3fe, 0x442]
Successors: [0x462, 0x471]
---
0x455 JUMPDEST
0x456 PUSH1 0x7
0x458 SLOAD
0x459 PUSH1 0xff
0x45b AND
0x45c DUP1
0x45d ISZERO
0x45e PUSH2 0x471
0x461 JUMPI
---
0x455: JUMPDEST 
0x456: V350 = 0x7
0x458: V351 = S[0x7]
0x459: V352 = 0xff
0x45b: V353 = AND 0xff V351
0x45d: V354 = ISZERO V353
0x45e: V355 = 0x471
0x461: JUMPI 0x471 V354
---
Entry stack: [V11, 0x1fb, S0]
Stack pops: 0
Stack additions: [V353]
Exit stack: [V11, 0x1fb, S0, V353]

================================

Block 0x462
[0x462:0x470]
---
Predecessors: [0x455]
Successors: [0x471]
---
0x462 POP
0x463 PUSH1 0x0
0x465 SLOAD
0x466 PUSH1 0x1
0x468 PUSH1 0xa0
0x46a PUSH1 0x2
0x46c EXP
0x46d SUB
0x46e AND
0x46f CALLER
0x470 EQ
---
0x463: V356 = 0x0
0x465: V357 = S[0x0]
0x466: V358 = 0x1
0x468: V359 = 0xa0
0x46a: V360 = 0x2
0x46c: V361 = EXP 0x2 0xa0
0x46d: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46e: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x46f: V364 = CALLER
0x470: V365 = EQ V364 V363
---
Entry stack: [V11, 0x1fb, S1, V353]
Stack pops: 1
Stack additions: [V365]
Exit stack: [V11, 0x1fb, S1, V365]

================================

Block 0x471
[0x471:0x476]
---
Predecessors: [0x455, 0x462]
Successors: [0x477, 0x508]
---
0x471 JUMPDEST
0x472 ISZERO
0x473 PUSH2 0x508
0x476 JUMPI
---
0x471: JUMPDEST 
0x472: V366 = ISZERO S0
0x473: V367 = 0x508
0x476: JUMPI 0x508 V366
---
Entry stack: [V11, 0x1fb, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1fb, S1]

================================

Block 0x477
[0x477:0x4a5]
---
Predecessors: [0x471]
Successors: [0x4a6, 0x4fd]
---
0x477 PUSH1 0x0
0x479 DUP1
0x47a SLOAD
0x47b PUSH1 0x2
0x47d SLOAD
0x47e PUSH1 0x40
0x480 MLOAD
0x481 PUSH1 0x1
0x483 PUSH1 0xa0
0x485 PUSH1 0x2
0x487 EXP
0x488 SUB
0x489 SWAP1
0x48a SWAP3
0x48b AND
0x48c SWAP3
0x48d DUP2
0x48e ISZERO
0x48f PUSH2 0x8fc
0x492 MUL
0x493 SWAP3
0x494 SWAP1
0x495 DUP2
0x496 DUP2
0x497 DUP2
0x498 DUP6
0x499 DUP9
0x49a DUP9
0x49b CALL
0x49c SWAP4
0x49d POP
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 ISZERO
0x4a2 PUSH2 0x4fd
0x4a5 JUMPI
---
0x477: V368 = 0x0
0x47a: V369 = S[0x0]
0x47b: V370 = 0x2
0x47d: V371 = S[0x2]
0x47e: V372 = 0x40
0x480: V373 = M[0x40]
0x481: V374 = 0x1
0x483: V375 = 0xa0
0x485: V376 = 0x2
0x487: V377 = EXP 0x2 0xa0
0x488: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48b: V379 = AND V369 0xffffffffffffffffffffffffffffffffffffffff
0x48e: V380 = ISZERO V371
0x48f: V381 = 0x8fc
0x492: V382 = MUL 0x8fc V380
0x49b: V383 = CALL V382 V379 V371 V373 0x0 V373 0x0
0x4a1: V384 = ISZERO V383
0x4a2: V385 = 0x4fd
0x4a5: JUMPI 0x4fd V384
---
Entry stack: [V11, 0x1fb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb, S0]

================================

Block 0x4a6
[0x4a6:0x4fc]
---
Predecessors: [0x477]
Successors: [0x508]
---
0x4a6 PUSH1 0x0
0x4a8 DUP1
0x4a9 SLOAD
0x4aa PUSH1 0x2
0x4ac SLOAD
0x4ad PUSH1 0x40
0x4af DUP1
0x4b0 MLOAD
0x4b1 PUSH1 0x1
0x4b3 PUSH1 0xa0
0x4b5 PUSH1 0x2
0x4b7 EXP
0x4b8 SUB
0x4b9 SWAP1
0x4ba SWAP4
0x4bb AND
0x4bc DUP4
0x4bd MSTORE
0x4be PUSH1 0x20
0x4c0 DUP4
0x4c1 ADD
0x4c2 SWAP2
0x4c3 SWAP1
0x4c4 SWAP2
0x4c5 MSTORE
0x4c6 DUP2
0x4c7 DUP2
0x4c8 ADD
0x4c9 SWAP3
0x4ca SWAP1
0x4cb SWAP3
0x4cc MSTORE
0x4cd SWAP1
0x4ce MLOAD
0x4cf PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4f0 SWAP2
0x4f1 DUP2
0x4f2 SWAP1
0x4f3 SUB
0x4f4 PUSH1 0x60
0x4f6 ADD
0x4f7 SWAP1
0x4f8 LOG1
0x4f9 PUSH2 0x508
0x4fc JUMP
---
0x4a6: V386 = 0x0
0x4a9: V387 = S[0x0]
0x4aa: V388 = 0x2
0x4ac: V389 = S[0x2]
0x4ad: V390 = 0x40
0x4b0: V391 = M[0x40]
0x4b1: V392 = 0x1
0x4b3: V393 = 0xa0
0x4b5: V394 = 0x2
0x4b7: V395 = EXP 0x2 0xa0
0x4b8: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bb: V397 = AND V387 0xffffffffffffffffffffffffffffffffffffffff
0x4bd: M[V391] = V397
0x4be: V398 = 0x20
0x4c1: V399 = ADD V391 0x20
0x4c5: M[V399] = V389
0x4c8: V400 = ADD 0x40 V391
0x4cc: M[V400] = 0x0
0x4ce: V401 = M[0x40]
0x4cf: V402 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4f3: V403 = SUB V391 V401
0x4f4: V404 = 0x60
0x4f6: V405 = ADD 0x60 V403
0x4f8: LOG V401 V405 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4f9: V406 = 0x508
0x4fc: JUMP 0x508
---
Entry stack: [V11, 0x1fb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb, S0]

================================

Block 0x4fd
[0x4fd:0x507]
---
Predecessors: [0x477]
Successors: [0x508]
---
0x4fd JUMPDEST
0x4fe PUSH1 0x7
0x500 DUP1
0x501 SLOAD
0x502 PUSH1 0xff
0x504 NOT
0x505 AND
0x506 SWAP1
0x507 SSTORE
---
0x4fd: JUMPDEST 
0x4fe: V407 = 0x7
0x501: V408 = S[0x7]
0x502: V409 = 0xff
0x504: V410 = NOT 0xff
0x505: V411 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V408
0x507: S[0x7] = V411
---
Entry stack: [V11, 0x1fb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb, S0]

================================

Block 0x508
[0x508:0x50a]
---
Predecessors: [0x3a6, 0x471, 0x4a6, 0x4fd]
Successors: [0x1fb]
---
0x508 JUMPDEST
0x509 POP
0x50a JUMP
---
0x508: JUMPDEST 
0x50a: JUMP 0x1fb
---
Entry stack: [V11, 0x1fb, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x50b
[0x50b:0x544]
---
Predecessors: []
Successors: []
---
0x50b STOP
0x50c LOG1
0x50d PUSH6 0x627a7a723058
0x514 SHA3
0x515 PUSH7 0x876e0bf0cf43b8
0x51d MISSING 0xf7
0x51e SWAP3
0x51f DUP8
0x520 XOR
0x521 MISSING 0xe3
0x522 DUP11
0x523 MISSING 0xb3
0x524 PUSH32 0x21acde7225dff212c232eb16af4685b20029
---
0x50b: STOP 
0x50c: LOG S0 S1 S2
0x50d: V412 = 0x627a7a723058
0x514: V413 = SHA3 0x627a7a723058 S3
0x515: V414 = 0x876e0bf0cf43b8
0x51d: MISSING 0xf7
0x520: V415 = XOR S7 S3
0x521: MISSING 0xe3
0x523: MISSING 0xb3
0x524: V416 = 0x21acde7225dff212c232eb16af4685b20029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x876e0bf0cf43b8, V413, V415, S1, S2, S0, S4, S5, S6, S7, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x21acde7225dff212c232eb16af4685b20029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1e6
Exit block: 0x1fb
Body: 0x1e6, 0x1ee, 0x1f2, 0x1fb, 0x2df, 0x2e9, 0x2f4, 0x34c, 0x35c

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1fd
Exit block: 0x212
Body: 0x1fd, 0x205, 0x209, 0x212, 0x35e

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x224
Exit block: 0x239
Body: 0x224, 0x22c, 0x230, 0x239, 0x364

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x255
Exit block: 0x239
Body: 0x239, 0x255, 0x25d, 0x261, 0x373

Function 4:
Public function signature: 0x70a08231
Entry block: 0x26a
Exit block: 0x212
Body: 0x212, 0x26a, 0x272, 0x276, 0x382

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x28b
Exit block: 0x212
Body: 0x212, 0x28b, 0x293, 0x297, 0x394

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2a0
Exit block: 0x212
Body: 0x212, 0x2a0, 0x2a8, 0x2ac, 0x39a

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x2b5
Exit block: 0x212
Body: 0x212, 0x2b5, 0x2bd, 0x2c1, 0x3a0

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x2ca
Exit block: 0x1fb
Body: 0x1fb, 0x2ca, 0x2d2, 0x2d6, 0x3a6, 0x3b3, 0x3bf, 0x3dd, 0x3fe, 0x442, 0x455, 0x462, 0x471, 0x477, 0x4a6, 0x4fd, 0x508

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x16d
Body: 0x98, 0xac, 0xb0, 0xf5, 0xf6, 0x15e, 0x162, 0x16d, 0x176

