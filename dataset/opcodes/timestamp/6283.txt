Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x74]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x74
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x74
0xc: JUMPI 0x74 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x1ed]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x2d05d3f
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x1ed
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x2d05d3f
0x22: V15 = EQ V13 0x2d05d3f
0x23: V16 = 0x1ed
0x26: JUMPI 0x1ed V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x21c]
---
0x27 DUP1
0x28 PUSH4 0x13af4035
0x2d EQ
0x2e PUSH2 0x21c
0x31 JUMPI
---
0x28: V17 = 0x13af4035
0x2d: V18 = EQ 0x13af4035 V13
0x2e: V19 = 0x21c
0x31: JUMPI 0x21c V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x23d]
---
0x32 DUP1
0x33 PUSH4 0x144fa6d7
0x38 EQ
0x39 PUSH2 0x23d
0x3c JUMPI
---
0x33: V20 = 0x144fa6d7
0x38: V21 = EQ 0x144fa6d7 V13
0x39: V22 = 0x23d
0x3c: JUMPI 0x23d V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x25c]
---
0x3d DUP1
0x3e PUSH4 0x3f516018
0x43 EQ
0x44 PUSH2 0x25c
0x47 JUMPI
---
0x3e: V23 = 0x3f516018
0x43: V24 = EQ 0x3f516018 V13
0x44: V25 = 0x25c
0x47: JUMPI 0x25c V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x27b]
---
0x48 DUP1
0x49 PUSH4 0x412664ae
0x4e EQ
0x4f PUSH2 0x27b
0x52 JUMPI
---
0x49: V26 = 0x412664ae
0x4e: V27 = EQ 0x412664ae V13
0x4f: V28 = 0x27b
0x52: JUMPI 0x27b V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x29d]
---
0x53 DUP1
0x54 PUSH4 0x41c0e1b5
0x59 EQ
0x5a PUSH2 0x29d
0x5d JUMPI
---
0x54: V29 = 0x41c0e1b5
0x59: V30 = EQ 0x41c0e1b5 V13
0x5a: V31 = 0x29d
0x5d: JUMPI 0x29d V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x2b0]
---
0x5e DUP1
0x5f PUSH4 0x6e66f6e9
0x64 EQ
0x65 PUSH2 0x2b0
0x68 JUMPI
---
0x5f: V32 = 0x6e66f6e9
0x64: V33 = EQ 0x6e66f6e9 V13
0x65: V34 = 0x2b0
0x68: JUMPI 0x2b0 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x2c3]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x2c3
0x73 JUMPI
---
0x6a: V35 = 0x8da5cb5b
0x6f: V36 = EQ 0x8da5cb5b V13
0x70: V37 = 0x2c3
0x73: JUMPI 0x2c3 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x0, 0x69]
Successors: [0x7f, 0x83]
---
0x74 JUMPDEST
0x75 PUSH1 0x0
0x77 CALLVALUE
0x78 DUP2
0x79 SWAP1
0x7a GT
0x7b PUSH2 0x83
0x7e JUMPI
---
0x74: JUMPDEST 
0x75: V38 = 0x0
0x77: V39 = CALLVALUE
0x7a: V40 = GT V39 0x0
0x7b: V41 = 0x83
0x7e: JUMPI 0x83 V40
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x0]

================================

Block 0x7f
[0x7f:0x82]
---
Predecessors: [0x74]
Successors: []
---
0x7f PUSH1 0x0
0x81 DUP1
0x82 REVERT
---
0x7f: V42 = 0x0
0x82: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0x83
[0x83:0x90]
---
Predecessors: [0x74]
Successors: [0x91, 0x99]
---
0x83 JUMPDEST
0x84 PUSH4 0x5acbe260
0x89 TIMESTAMP
0x8a GT
0x8b DUP1
0x8c ISZERO
0x8d PUSH2 0x99
0x90 JUMPI
---
0x83: JUMPDEST 
0x84: V43 = 0x5acbe260
0x89: V44 = TIMESTAMP
0x8a: V45 = GT V44 0x5acbe260
0x8c: V46 = ISZERO V45
0x8d: V47 = 0x99
0x90: JUMPI 0x99 V46
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V13, 0x0, V45]

================================

Block 0x91
[0x91:0x98]
---
Predecessors: [0x83]
Successors: [0x99]
---
0x91 POP
0x92 PUSH4 0x5ae791e0
0x97 TIMESTAMP
0x98 LT
---
0x92: V48 = 0x5ae791e0
0x97: V49 = TIMESTAMP
0x98: V50 = LT V49 0x5ae791e0
---
Entry stack: [V13, 0x0, V45]
Stack pops: 1
Stack additions: [V50]
Exit stack: [V13, 0x0, V50]

================================

Block 0x99
[0x99:0x9e]
---
Predecessors: [0x83, 0x91]
Successors: [0x9f, 0xaa]
---
0x99 JUMPDEST
0x9a ISZERO
0x9b PUSH2 0xaa
0x9e JUMPI
---
0x99: JUMPDEST 
0x9a: V51 = ISZERO S0
0x9b: V52 = 0xaa
0x9e: JUMPI 0xaa V51
---
Entry stack: [V13, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0x9f
[0x9f:0xa9]
---
Predecessors: [0x99]
Successors: [0xaa]
---
0x9f POP
0xa0 PUSH2 0x2af8
0xa3 CALLVALUE
0xa4 MUL
0xa5 PUSH1 0x5
0xa7 DUP2
0xa8 DIV
0xa9 ADD
---
0xa0: V53 = 0x2af8
0xa3: V54 = CALLVALUE
0xa4: V55 = MUL V54 0x2af8
0xa5: V56 = 0x5
0xa8: V57 = DIV V55 0x5
0xa9: V58 = ADD V57 V55
---
Entry stack: [V13, 0x0]
Stack pops: 1
Stack additions: [V58]
Exit stack: [V13, V58]

================================

Block 0xaa
[0xaa:0xb7]
---
Predecessors: [0x99, 0x9f]
Successors: [0xb8, 0xc0]
---
0xaa JUMPDEST
0xab PUSH4 0x5ae791df
0xb0 TIMESTAMP
0xb1 GT
0xb2 DUP1
0xb3 ISZERO
0xb4 PUSH2 0xc0
0xb7 JUMPI
---
0xaa: JUMPDEST 
0xab: V59 = 0x5ae791df
0xb0: V60 = TIMESTAMP
0xb1: V61 = GT V60 0x5ae791df
0xb3: V62 = ISZERO V61
0xb4: V63 = 0xc0
0xb7: JUMPI 0xc0 V62
---
Entry stack: [V13, S0]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V13, S0, V61]

================================

Block 0xb8
[0xb8:0xbf]
---
Predecessors: [0xaa]
Successors: [0xc0]
---
0xb8 POP
0xb9 PUSH4 0x5b0f1ee0
0xbe TIMESTAMP
0xbf LT
---
0xb9: V64 = 0x5b0f1ee0
0xbe: V65 = TIMESTAMP
0xbf: V66 = LT V65 0x5b0f1ee0
---
Entry stack: [V13, S1, V61]
Stack pops: 1
Stack additions: [V66]
Exit stack: [V13, S1, V66]

================================

Block 0xc0
[0xc0:0xc5]
---
Predecessors: [0xaa, 0xb8]
Successors: [0xc6, 0xd1]
---
0xc0 JUMPDEST
0xc1 ISZERO
0xc2 PUSH2 0xd1
0xc5 JUMPI
---
0xc0: JUMPDEST 
0xc1: V67 = ISZERO S0
0xc2: V68 = 0xd1
0xc5: JUMPI 0xd1 V67
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0xc6
[0xc6:0xd0]
---
Predecessors: [0xc0]
Successors: [0xd1]
---
0xc6 POP
0xc7 PUSH2 0x1b58
0xca CALLVALUE
0xcb MUL
0xcc PUSH1 0x5
0xce DUP2
0xcf DIV
0xd0 ADD
---
0xc7: V69 = 0x1b58
0xca: V70 = CALLVALUE
0xcb: V71 = MUL V70 0x1b58
0xcc: V72 = 0x5
0xcf: V73 = DIV V71 0x5
0xd0: V74 = ADD V73 V71
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: [V74]
Exit stack: [V13, V74]

================================

Block 0xd1
[0xd1:0xde]
---
Predecessors: [0xc0, 0xc6]
Successors: [0xdf, 0xe7]
---
0xd1 JUMPDEST
0xd2 PUSH4 0x5b0f1edf
0xd7 TIMESTAMP
0xd8 GT
0xd9 DUP1
0xda ISZERO
0xdb PUSH2 0xe7
0xde JUMPI
---
0xd1: JUMPDEST 
0xd2: V75 = 0x5b0f1edf
0xd7: V76 = TIMESTAMP
0xd8: V77 = GT V76 0x5b0f1edf
0xda: V78 = ISZERO V77
0xdb: V79 = 0xe7
0xde: JUMPI 0xe7 V78
---
Entry stack: [V13, S0]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V13, S0, V77]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0xd1]
Successors: [0xe7]
---
0xdf POP
0xe0 PUSH4 0x5b394ee0
0xe5 TIMESTAMP
0xe6 LT
---
0xe0: V80 = 0x5b394ee0
0xe5: V81 = TIMESTAMP
0xe6: V82 = LT V81 0x5b394ee0
---
Entry stack: [V13, S1, V77]
Stack pops: 1
Stack additions: [V82]
Exit stack: [V13, S1, V82]

================================

Block 0xe7
[0xe7:0xec]
---
Predecessors: [0xd1, 0xdf]
Successors: [0xed, 0xf8]
---
0xe7 JUMPDEST
0xe8 ISZERO
0xe9 PUSH2 0xf8
0xec JUMPI
---
0xe7: JUMPDEST 
0xe8: V83 = ISZERO S0
0xe9: V84 = 0xf8
0xec: JUMPI 0xf8 V83
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0xed
[0xed:0xf7]
---
Predecessors: [0xe7]
Successors: [0xf8]
---
0xed POP
0xee PUSH2 0x16a8
0xf1 CALLVALUE
0xf2 MUL
0xf3 PUSH1 0x5
0xf5 DUP2
0xf6 DIV
0xf7 ADD
---
0xee: V85 = 0x16a8
0xf1: V86 = CALLVALUE
0xf2: V87 = MUL V86 0x16a8
0xf3: V88 = 0x5
0xf6: V89 = DIV V87 0x5
0xf7: V90 = ADD V89 V87
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: [V90]
Exit stack: [V13, V90]

================================

Block 0xf8
[0xf8:0x149]
---
Predecessors: [0xe7, 0xed]
Successors: [0x14a, 0x14e]
---
0xf8 JUMPDEST
0xf9 PUSH1 0x0
0xfb SLOAD
0xfc PUSH1 0x1
0xfe PUSH1 0xa0
0x100 PUSH1 0x2
0x102 EXP
0x103 SUB
0x104 AND
0x105 PUSH4 0xa9059cbb
0x10a CALLER
0x10b DUP4
0x10c PUSH1 0x40
0x10e MLOAD
0x10f PUSH1 0xe0
0x111 PUSH1 0x2
0x113 EXP
0x114 PUSH4 0xffffffff
0x119 DUP6
0x11a AND
0x11b MUL
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 SWAP1
0x127 SWAP3
0x128 AND
0x129 PUSH1 0x4
0x12b DUP4
0x12c ADD
0x12d MSTORE
0x12e PUSH1 0x24
0x130 DUP3
0x131 ADD
0x132 MSTORE
0x133 PUSH1 0x44
0x135 ADD
0x136 PUSH1 0x0
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c DUP4
0x13d SUB
0x13e DUP2
0x13f PUSH1 0x0
0x141 DUP8
0x142 DUP1
0x143 EXTCODESIZE
0x144 ISZERO
0x145 ISZERO
0x146 PUSH2 0x14e
0x149 JUMPI
---
0xf8: JUMPDEST 
0xf9: V91 = 0x0
0xfb: V92 = S[0x0]
0xfc: V93 = 0x1
0xfe: V94 = 0xa0
0x100: V95 = 0x2
0x102: V96 = EXP 0x2 0xa0
0x103: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x105: V99 = 0xa9059cbb
0x10a: V100 = CALLER
0x10c: V101 = 0x40
0x10e: V102 = M[0x40]
0x10f: V103 = 0xe0
0x111: V104 = 0x2
0x113: V105 = EXP 0x2 0xe0
0x114: V106 = 0xffffffff
0x11a: V107 = AND 0xa9059cbb 0xffffffff
0x11b: V108 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x11d: M[V102] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x11e: V109 = 0x1
0x120: V110 = 0xa0
0x122: V111 = 0x2
0x124: V112 = EXP 0x2 0xa0
0x125: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V114 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x129: V115 = 0x4
0x12c: V116 = ADD V102 0x4
0x12d: M[V116] = V114
0x12e: V117 = 0x24
0x131: V118 = ADD V102 0x24
0x132: M[V118] = S0
0x133: V119 = 0x44
0x135: V120 = ADD 0x44 V102
0x136: V121 = 0x0
0x138: V122 = 0x40
0x13a: V123 = M[0x40]
0x13d: V124 = SUB V120 V123
0x13f: V125 = 0x0
0x143: V126 = EXTCODESIZE V98
0x144: V127 = ISZERO V126
0x145: V128 = ISZERO V127
0x146: V129 = 0x14e
0x149: JUMPI 0x14e V128
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: [S0, V98, 0xa9059cbb, V120, 0x0, V123, V124, V123, 0x0, V98]
Exit stack: [V13, S0, V98, 0xa9059cbb, V120, 0x0, V123, V124, V123, 0x0, V98]

================================

Block 0x14a
[0x14a:0x14d]
---
Predecessors: [0xf8]
Successors: []
---
0x14a PUSH1 0x0
0x14c DUP1
0x14d REVERT
---
0x14a: V130 = 0x0
0x14d: REVERT 0x0 0x0
---
Entry stack: [V13, S9, V98, 0xa9059cbb, V120, 0x0, V123, V124, V123, 0x0, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, V98, 0xa9059cbb, V120, 0x0, V123, V124, V123, 0x0, V98]

================================

Block 0x14e
[0x14e:0x15a]
---
Predecessors: [0xf8]
Successors: [0x15b, 0x15f]
---
0x14e JUMPDEST
0x14f PUSH2 0x2c6
0x152 GAS
0x153 SUB
0x154 CALL
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x14e: JUMPDEST 
0x14f: V131 = 0x2c6
0x152: V132 = GAS
0x153: V133 = SUB V132 0x2c6
0x154: V134 = CALL V133 V98 0x0 V123 V124 V123 0x0
0x155: V135 = ISZERO V134
0x156: V136 = ISZERO V135
0x157: V137 = 0x15f
0x15a: JUMPI 0x15f V136
---
Entry stack: [V13, S9, V98, 0xa9059cbb, V120, 0x0, V123, V124, V123, 0x0, V98]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S9, V98, 0xa9059cbb, V120]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x14e]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V138 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V13, S3, V98, 0xa9059cbb, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S3, V98, 0xa9059cbb, V120]

================================

Block 0x15f
[0x15f:0x1e5]
---
Predecessors: [0x14e]
Successors: [0x1e6, 0x1ea]
---
0x15f JUMPDEST
0x160 POP
0x161 POP
0x162 POP
0x163 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x184 CALLER
0x185 DUP3
0x186 PUSH1 0x1
0x188 PUSH1 0x40
0x18a MLOAD
0x18b PUSH1 0x1
0x18d PUSH1 0xa0
0x18f PUSH1 0x2
0x191 EXP
0x192 SUB
0x193 SWAP1
0x194 SWAP4
0x195 AND
0x196 DUP4
0x197 MSTORE
0x198 PUSH1 0x20
0x19a DUP4
0x19b ADD
0x19c SWAP2
0x19d SWAP1
0x19e SWAP2
0x19f MSTORE
0x1a0 ISZERO
0x1a1 ISZERO
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 DUP4
0x1a6 ADD
0x1a7 SWAP2
0x1a8 SWAP1
0x1a9 SWAP2
0x1aa MSTORE
0x1ab PUSH1 0x60
0x1ad SWAP1
0x1ae SWAP2
0x1af ADD
0x1b0 SWAP1
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 SWAP2
0x1b4 SUB
0x1b5 SWAP1
0x1b6 LOG1
0x1b7 PUSH1 0x2
0x1b9 SLOAD
0x1ba PUSH1 0x1
0x1bc PUSH1 0xa0
0x1be PUSH1 0x2
0x1c0 EXP
0x1c1 SUB
0x1c2 AND
0x1c3 CALLVALUE
0x1c4 DUP1
0x1c5 ISZERO
0x1c6 PUSH2 0x8fc
0x1c9 MUL
0x1ca SWAP1
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce PUSH1 0x0
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 DUP4
0x1d5 SUB
0x1d6 DUP2
0x1d7 DUP6
0x1d8 DUP9
0x1d9 DUP9
0x1da CALL
0x1db SWAP4
0x1dc POP
0x1dd POP
0x1de POP
0x1df POP
0x1e0 ISZERO
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x15f: JUMPDEST 
0x163: V139 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x184: V140 = CALLER
0x186: V141 = 0x1
0x188: V142 = 0x40
0x18a: V143 = M[0x40]
0x18b: V144 = 0x1
0x18d: V145 = 0xa0
0x18f: V146 = 0x2
0x191: V147 = EXP 0x2 0xa0
0x192: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V149 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x197: M[V143] = V149
0x198: V150 = 0x20
0x19b: V151 = ADD V143 0x20
0x19f: M[V151] = S3
0x1a0: V152 = ISZERO 0x1
0x1a1: V153 = ISZERO 0x0
0x1a2: V154 = 0x40
0x1a6: V155 = ADD V143 0x40
0x1aa: M[V155] = 0x1
0x1ab: V156 = 0x60
0x1af: V157 = ADD V143 0x60
0x1b1: V158 = M[0x40]
0x1b4: V159 = SUB V157 V158
0x1b6: LOG V158 V159 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1b7: V160 = 0x2
0x1b9: V161 = S[0x2]
0x1ba: V162 = 0x1
0x1bc: V163 = 0xa0
0x1be: V164 = 0x2
0x1c0: V165 = EXP 0x2 0xa0
0x1c1: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c2: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1c3: V168 = CALLVALUE
0x1c5: V169 = ISZERO V168
0x1c6: V170 = 0x8fc
0x1c9: V171 = MUL 0x8fc V169
0x1cb: V172 = 0x40
0x1cd: V173 = M[0x40]
0x1ce: V174 = 0x0
0x1d0: V175 = 0x40
0x1d2: V176 = M[0x40]
0x1d5: V177 = SUB V173 V176
0x1da: V178 = CALL V171 V167 V168 V176 V177 V176 0x0
0x1e0: V179 = ISZERO V178
0x1e1: V180 = ISZERO V179
0x1e2: V181 = 0x1ea
0x1e5: JUMPI 0x1ea V180
---
Entry stack: [V13, S3, V98, 0xa9059cbb, V120]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V13, S3]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x15f]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V182 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V13, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S0]

================================

Block 0x1ea
[0x1ea:0x1ec]
---
Predecessors: [0x15f]
Successors: []
---
0x1ea JUMPDEST
0x1eb POP
0x1ec STOP
---
0x1ea: JUMPDEST 
0x1ec: STOP 
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ed
[0x1ed:0x1f3]
---
Predecessors: [0xd]
Successors: [0x1f4, 0x1f8]
---
0x1ed JUMPDEST
0x1ee CALLVALUE
0x1ef ISZERO
0x1f0 PUSH2 0x1f8
0x1f3 JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V183 = CALLVALUE
0x1ef: V184 = ISZERO V183
0x1f0: V185 = 0x1f8
0x1f3: JUMPI 0x1f8 V184
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f4
[0x1f4:0x1f7]
---
Predecessors: [0x1ed]
Successors: []
---
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 REVERT
---
0x1f4: V186 = 0x0
0x1f7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f8
[0x1f8:0x1ff]
---
Predecessors: [0x1ed]
Successors: [0x2d6]
---
0x1f8 JUMPDEST
0x1f9 PUSH2 0x200
0x1fc PUSH2 0x2d6
0x1ff JUMP
---
0x1f8: JUMPDEST 
0x1f9: V187 = 0x200
0x1fc: V188 = 0x2d6
0x1ff: JUMP 0x2d6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x200]
Exit stack: [V13, 0x200]

================================

Block 0x200
[0x200:0x21b]
---
Predecessors: [0x2d6, 0x475, 0x484]
Successors: []
---
0x200 JUMPDEST
0x201 PUSH1 0x40
0x203 MLOAD
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c SWAP1
0x20d SWAP2
0x20e AND
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x20
0x213 ADD
0x214 PUSH1 0x40
0x216 MLOAD
0x217 DUP1
0x218 SWAP2
0x219 SUB
0x21a SWAP1
0x21b RETURN
---
0x200: JUMPDEST 
0x201: V189 = 0x40
0x203: V190 = M[0x40]
0x204: V191 = 0x1
0x206: V192 = 0xa0
0x208: V193 = 0x2
0x20a: V194 = EXP 0x2 0xa0
0x20b: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V196 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x210: M[V190] = V196
0x211: V197 = 0x20
0x213: V198 = ADD 0x20 V190
0x214: V199 = 0x40
0x216: V200 = M[0x40]
0x219: V201 = SUB V198 V200
0x21b: RETURN V200 V201
---
Entry stack: [V13, 0x200, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x200]

================================

Block 0x21c
[0x21c:0x222]
---
Predecessors: [0x27]
Successors: [0x223, 0x227]
---
0x21c JUMPDEST
0x21d CALLVALUE
0x21e ISZERO
0x21f PUSH2 0x227
0x222 JUMPI
---
0x21c: JUMPDEST 
0x21d: V202 = CALLVALUE
0x21e: V203 = ISZERO V202
0x21f: V204 = 0x227
0x222: JUMPI 0x227 V203
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x223
[0x223:0x226]
---
Predecessors: [0x21c]
Successors: []
---
0x223 PUSH1 0x0
0x225 DUP1
0x226 REVERT
---
0x223: V205 = 0x0
0x226: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x227
[0x227:0x23a]
---
Predecessors: [0x21c]
Successors: [0x2e5]
---
0x227 JUMPDEST
0x228 PUSH2 0x23b
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 PUSH1 0x4
0x235 CALLDATALOAD
0x236 AND
0x237 PUSH2 0x2e5
0x23a JUMP
---
0x227: JUMPDEST 
0x228: V206 = 0x23b
0x22b: V207 = 0x1
0x22d: V208 = 0xa0
0x22f: V209 = 0x2
0x231: V210 = EXP 0x2 0xa0
0x232: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x233: V212 = 0x4
0x235: V213 = CALLDATALOAD 0x4
0x236: V214 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x237: V215 = 0x2e5
0x23a: JUMP 0x2e5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x23b, V214]
Exit stack: [V13, 0x23b, V214]

================================

Block 0x23b
[0x23b:0x23c]
---
Predecessors: [0x300, 0x34a, 0x394, 0x445]
Successors: []
---
0x23b JUMPDEST
0x23c STOP
---
0x23b: JUMPDEST 
0x23c: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x23d
[0x23d:0x243]
---
Predecessors: [0x32]
Successors: [0x244, 0x248]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x23d: JUMPDEST 
0x23e: V216 = CALLVALUE
0x23f: V217 = ISZERO V216
0x240: V218 = 0x248
0x243: JUMPI 0x248 V217
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x23d]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V219 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x248
[0x248:0x25b]
---
Predecessors: [0x23d]
Successors: [0x32f]
---
0x248 JUMPDEST
0x249 PUSH2 0x23b
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 PUSH1 0x4
0x256 CALLDATALOAD
0x257 AND
0x258 PUSH2 0x32f
0x25b JUMP
---
0x248: JUMPDEST 
0x249: V220 = 0x23b
0x24c: V221 = 0x1
0x24e: V222 = 0xa0
0x250: V223 = 0x2
0x252: V224 = EXP 0x2 0xa0
0x253: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V226 = 0x4
0x256: V227 = CALLDATALOAD 0x4
0x257: V228 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x258: V229 = 0x32f
0x25b: JUMP 0x32f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x23b, V228]
Exit stack: [V13, 0x23b, V228]

================================

Block 0x25c
[0x25c:0x262]
---
Predecessors: [0x3d]
Successors: [0x263, 0x267]
---
0x25c JUMPDEST
0x25d CALLVALUE
0x25e ISZERO
0x25f PUSH2 0x267
0x262 JUMPI
---
0x25c: JUMPDEST 
0x25d: V230 = CALLVALUE
0x25e: V231 = ISZERO V230
0x25f: V232 = 0x267
0x262: JUMPI 0x267 V231
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x263
[0x263:0x266]
---
Predecessors: [0x25c]
Successors: []
---
0x263 PUSH1 0x0
0x265 DUP1
0x266 REVERT
---
0x263: V233 = 0x0
0x266: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x267
[0x267:0x27a]
---
Predecessors: [0x25c]
Successors: [0x379]
---
0x267 JUMPDEST
0x268 PUSH2 0x23b
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f PUSH1 0x2
0x271 EXP
0x272 SUB
0x273 PUSH1 0x4
0x275 CALLDATALOAD
0x276 AND
0x277 PUSH2 0x379
0x27a JUMP
---
0x267: JUMPDEST 
0x268: V234 = 0x23b
0x26b: V235 = 0x1
0x26d: V236 = 0xa0
0x26f: V237 = 0x2
0x271: V238 = EXP 0x2 0xa0
0x272: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x273: V240 = 0x4
0x275: V241 = CALLDATALOAD 0x4
0x276: V242 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x277: V243 = 0x379
0x27a: JUMP 0x379
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x23b, V242]
Exit stack: [V13, 0x23b, V242]

================================

Block 0x27b
[0x27b:0x281]
---
Predecessors: [0x48]
Successors: [0x282, 0x286]
---
0x27b JUMPDEST
0x27c CALLVALUE
0x27d ISZERO
0x27e PUSH2 0x286
0x281 JUMPI
---
0x27b: JUMPDEST 
0x27c: V244 = CALLVALUE
0x27d: V245 = ISZERO V244
0x27e: V246 = 0x286
0x281: JUMPI 0x286 V245
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x282
[0x282:0x285]
---
Predecessors: [0x27b]
Successors: []
---
0x282 PUSH1 0x0
0x284 DUP1
0x285 REVERT
---
0x282: V247 = 0x0
0x285: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x286
[0x286:0x29c]
---
Predecessors: [0x27b]
Successors: [0x3c3]
---
0x286 JUMPDEST
0x287 PUSH2 0x23b
0x28a PUSH1 0x1
0x28c PUSH1 0xa0
0x28e PUSH1 0x2
0x290 EXP
0x291 SUB
0x292 PUSH1 0x4
0x294 CALLDATALOAD
0x295 AND
0x296 PUSH1 0x24
0x298 CALLDATALOAD
0x299 PUSH2 0x3c3
0x29c JUMP
---
0x286: JUMPDEST 
0x287: V248 = 0x23b
0x28a: V249 = 0x1
0x28c: V250 = 0xa0
0x28e: V251 = 0x2
0x290: V252 = EXP 0x2 0xa0
0x291: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x292: V254 = 0x4
0x294: V255 = CALLDATALOAD 0x4
0x295: V256 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x296: V257 = 0x24
0x298: V258 = CALLDATALOAD 0x24
0x299: V259 = 0x3c3
0x29c: JUMP 0x3c3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x23b, V256, V258]
Exit stack: [V13, 0x23b, V256, V258]

================================

Block 0x29d
[0x29d:0x2a3]
---
Predecessors: [0x53]
Successors: [0x2a4, 0x2a8]
---
0x29d JUMPDEST
0x29e CALLVALUE
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x29d: JUMPDEST 
0x29e: V260 = CALLVALUE
0x29f: V261 = ISZERO V260
0x2a0: V262 = 0x2a8
0x2a3: JUMPI 0x2a8 V261
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x29d]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V263 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a8
[0x2a8:0x2af]
---
Predecessors: [0x29d]
Successors: [0x44c]
---
0x2a8 JUMPDEST
0x2a9 PUSH2 0x23b
0x2ac PUSH2 0x44c
0x2af JUMP
---
0x2a8: JUMPDEST 
0x2a9: V264 = 0x23b
0x2ac: V265 = 0x44c
0x2af: JUMP 0x44c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x23b]
Exit stack: [V13, 0x23b]

================================

Block 0x2b0
[0x2b0:0x2b6]
---
Predecessors: [0x5e]
Successors: [0x2b7, 0x2bb]
---
0x2b0 JUMPDEST
0x2b1 CALLVALUE
0x2b2 ISZERO
0x2b3 PUSH2 0x2bb
0x2b6 JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V266 = CALLVALUE
0x2b2: V267 = ISZERO V266
0x2b3: V268 = 0x2bb
0x2b6: JUMPI 0x2bb V267
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b7
[0x2b7:0x2ba]
---
Predecessors: [0x2b0]
Successors: []
---
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba REVERT
---
0x2b7: V269 = 0x0
0x2ba: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2bb
[0x2bb:0x2c2]
---
Predecessors: [0x2b0]
Successors: [0x475]
---
0x2bb JUMPDEST
0x2bc PUSH2 0x200
0x2bf PUSH2 0x475
0x2c2 JUMP
---
0x2bb: JUMPDEST 
0x2bc: V270 = 0x200
0x2bf: V271 = 0x475
0x2c2: JUMP 0x475
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x200]
Exit stack: [V13, 0x200]

================================

Block 0x2c3
[0x2c3:0x2c9]
---
Predecessors: [0x69]
Successors: [0x2ca, 0x2ce]
---
0x2c3 JUMPDEST
0x2c4 CALLVALUE
0x2c5 ISZERO
0x2c6 PUSH2 0x2ce
0x2c9 JUMPI
---
0x2c3: JUMPDEST 
0x2c4: V272 = CALLVALUE
0x2c5: V273 = ISZERO V272
0x2c6: V274 = 0x2ce
0x2c9: JUMPI 0x2ce V273
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ca
[0x2ca:0x2cd]
---
Predecessors: [0x2c3]
Successors: []
---
0x2ca PUSH1 0x0
0x2cc DUP1
0x2cd REVERT
---
0x2ca: V275 = 0x0
0x2cd: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ce
[0x2ce:0x2d5]
---
Predecessors: [0x2c3]
Successors: [0x484]
---
0x2ce JUMPDEST
0x2cf PUSH2 0x200
0x2d2 PUSH2 0x484
0x2d5 JUMP
---
0x2ce: JUMPDEST 
0x2cf: V276 = 0x200
0x2d2: V277 = 0x484
0x2d5: JUMP 0x484
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x200]
Exit stack: [V13, 0x200]

================================

Block 0x2d6
[0x2d6:0x2e4]
---
Predecessors: [0x1f8]
Successors: [0x200]
---
0x2d6 JUMPDEST
0x2d7 PUSH1 0x1
0x2d9 SLOAD
0x2da PUSH1 0x1
0x2dc PUSH1 0xa0
0x2de PUSH1 0x2
0x2e0 EXP
0x2e1 SUB
0x2e2 AND
0x2e3 DUP2
0x2e4 JUMP
---
0x2d6: JUMPDEST 
0x2d7: V278 = 0x1
0x2d9: V279 = S[0x1]
0x2da: V280 = 0x1
0x2dc: V281 = 0xa0
0x2de: V282 = 0x2
0x2e0: V283 = EXP 0x2 0xa0
0x2e1: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e2: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x2e4: JUMP 0x200
---
Entry stack: [V13, 0x200]
Stack pops: 1
Stack additions: [S0, V285]
Exit stack: [V13, 0x200, V285]

================================

Block 0x2e5
[0x2e5:0x2fb]
---
Predecessors: [0x227]
Successors: [0x2fc, 0x300]
---
0x2e5 JUMPDEST
0x2e6 PUSH1 0x1
0x2e8 SLOAD
0x2e9 CALLER
0x2ea PUSH1 0x1
0x2ec PUSH1 0xa0
0x2ee PUSH1 0x2
0x2f0 EXP
0x2f1 SUB
0x2f2 SWAP1
0x2f3 DUP2
0x2f4 AND
0x2f5 SWAP2
0x2f6 AND
0x2f7 EQ
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V286 = 0x1
0x2e8: V287 = S[0x1]
0x2e9: V288 = CALLER
0x2ea: V289 = 0x1
0x2ec: V290 = 0xa0
0x2ee: V291 = 0x2
0x2f0: V292 = EXP 0x2 0xa0
0x2f1: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f4: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x2f6: V295 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V296 = EQ V295 V294
0x2f8: V297 = 0x300
0x2fb: JUMPI 0x300 V296
---
Entry stack: [V13, 0x23b, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V214]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2e5]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V298 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23b, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V214]

================================

Block 0x300
[0x300:0x32e]
---
Predecessors: [0x2e5]
Successors: [0x23b]
---
0x300 JUMPDEST
0x301 PUSH1 0x2
0x303 DUP1
0x304 SLOAD
0x305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31a NOT
0x31b AND
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 SWAP3
0x325 SWAP1
0x326 SWAP3
0x327 AND
0x328 SWAP2
0x329 SWAP1
0x32a SWAP2
0x32b OR
0x32c SWAP1
0x32d SSTORE
0x32e JUMP
---
0x300: JUMPDEST 
0x301: V299 = 0x2
0x304: V300 = S[0x2]
0x305: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V302 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V303 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V300
0x31c: V304 = 0x1
0x31e: V305 = 0xa0
0x320: V306 = 0x2
0x322: V307 = EXP 0x2 0xa0
0x323: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x327: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x32b: V310 = OR V309 V303
0x32d: S[0x2] = V310
0x32e: JUMP 0x23b
---
Entry stack: [V13, 0x23b, V214]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x32f
[0x32f:0x345]
---
Predecessors: [0x248]
Successors: [0x346, 0x34a]
---
0x32f JUMPDEST
0x330 PUSH1 0x1
0x332 SLOAD
0x333 CALLER
0x334 PUSH1 0x1
0x336 PUSH1 0xa0
0x338 PUSH1 0x2
0x33a EXP
0x33b SUB
0x33c SWAP1
0x33d DUP2
0x33e AND
0x33f SWAP2
0x340 AND
0x341 EQ
0x342 PUSH2 0x34a
0x345 JUMPI
---
0x32f: JUMPDEST 
0x330: V311 = 0x1
0x332: V312 = S[0x1]
0x333: V313 = CALLER
0x334: V314 = 0x1
0x336: V315 = 0xa0
0x338: V316 = 0x2
0x33a: V317 = EXP 0x2 0xa0
0x33b: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33e: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x340: V320 = AND V312 0xffffffffffffffffffffffffffffffffffffffff
0x341: V321 = EQ V320 V319
0x342: V322 = 0x34a
0x345: JUMPI 0x34a V321
---
Entry stack: [V13, 0x23b, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V228]

================================

Block 0x346
[0x346:0x349]
---
Predecessors: [0x32f]
Successors: []
---
0x346 PUSH1 0x0
0x348 DUP1
0x349 REVERT
---
0x346: V323 = 0x0
0x349: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23b, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V228]

================================

Block 0x34a
[0x34a:0x378]
---
Predecessors: [0x32f]
Successors: [0x23b]
---
0x34a JUMPDEST
0x34b PUSH1 0x0
0x34d DUP1
0x34e SLOAD
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 NOT
0x365 AND
0x366 PUSH1 0x1
0x368 PUSH1 0xa0
0x36a PUSH1 0x2
0x36c EXP
0x36d SUB
0x36e SWAP3
0x36f SWAP1
0x370 SWAP3
0x371 AND
0x372 SWAP2
0x373 SWAP1
0x374 SWAP2
0x375 OR
0x376 SWAP1
0x377 SSTORE
0x378 JUMP
---
0x34a: JUMPDEST 
0x34b: V324 = 0x0
0x34e: V325 = S[0x0]
0x34f: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V327 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x365: V328 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V325
0x366: V329 = 0x1
0x368: V330 = 0xa0
0x36a: V331 = 0x2
0x36c: V332 = EXP 0x2 0xa0
0x36d: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x371: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x375: V335 = OR V334 V328
0x377: S[0x0] = V335
0x378: JUMP 0x23b
---
Entry stack: [V13, 0x23b, V228]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x379
[0x379:0x38f]
---
Predecessors: [0x267]
Successors: [0x390, 0x394]
---
0x379 JUMPDEST
0x37a PUSH1 0x1
0x37c SLOAD
0x37d CALLER
0x37e PUSH1 0x1
0x380 PUSH1 0xa0
0x382 PUSH1 0x2
0x384 EXP
0x385 SUB
0x386 SWAP1
0x387 DUP2
0x388 AND
0x389 SWAP2
0x38a AND
0x38b EQ
0x38c PUSH2 0x394
0x38f JUMPI
---
0x379: JUMPDEST 
0x37a: V336 = 0x1
0x37c: V337 = S[0x1]
0x37d: V338 = CALLER
0x37e: V339 = 0x1
0x380: V340 = 0xa0
0x382: V341 = 0x2
0x384: V342 = EXP 0x2 0xa0
0x385: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x388: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x38a: V345 = AND V337 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V346 = EQ V345 V344
0x38c: V347 = 0x394
0x38f: JUMPI 0x394 V346
---
Entry stack: [V13, 0x23b, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V242]

================================

Block 0x390
[0x390:0x393]
---
Predecessors: [0x379]
Successors: []
---
0x390 PUSH1 0x0
0x392 DUP1
0x393 REVERT
---
0x390: V348 = 0x0
0x393: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23b, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V242]

================================

Block 0x394
[0x394:0x3c2]
---
Predecessors: [0x379]
Successors: [0x23b]
---
0x394 JUMPDEST
0x395 PUSH1 0x1
0x397 DUP1
0x398 SLOAD
0x399 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ae NOT
0x3af AND
0x3b0 PUSH1 0x1
0x3b2 PUSH1 0xa0
0x3b4 PUSH1 0x2
0x3b6 EXP
0x3b7 SUB
0x3b8 SWAP3
0x3b9 SWAP1
0x3ba SWAP3
0x3bb AND
0x3bc SWAP2
0x3bd SWAP1
0x3be SWAP2
0x3bf OR
0x3c0 SWAP1
0x3c1 SSTORE
0x3c2 JUMP
---
0x394: JUMPDEST 
0x395: V349 = 0x1
0x398: V350 = S[0x1]
0x399: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ae: V352 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3af: V353 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V350
0x3b0: V354 = 0x1
0x3b2: V355 = 0xa0
0x3b4: V356 = 0x2
0x3b6: V357 = EXP 0x2 0xa0
0x3b7: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bb: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x3bf: V360 = OR V359 V353
0x3c1: S[0x1] = V360
0x3c2: JUMP 0x23b
---
Entry stack: [V13, 0x23b, V242]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x3c3
[0x3c3:0x3d9]
---
Predecessors: [0x286]
Successors: [0x3da, 0x3de]
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x1
0x3c6 SLOAD
0x3c7 CALLER
0x3c8 PUSH1 0x1
0x3ca PUSH1 0xa0
0x3cc PUSH1 0x2
0x3ce EXP
0x3cf SUB
0x3d0 SWAP1
0x3d1 DUP2
0x3d2 AND
0x3d3 SWAP2
0x3d4 AND
0x3d5 EQ
0x3d6 PUSH2 0x3de
0x3d9 JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V361 = 0x1
0x3c6: V362 = S[0x1]
0x3c7: V363 = CALLER
0x3c8: V364 = 0x1
0x3ca: V365 = 0xa0
0x3cc: V366 = 0x2
0x3ce: V367 = EXP 0x2 0xa0
0x3cf: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d2: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x3d4: V370 = AND V362 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V371 = EQ V370 V369
0x3d6: V372 = 0x3de
0x3d9: JUMPI 0x3de V371
---
Entry stack: [V13, 0x23b, V256, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V256, V258]

================================

Block 0x3da
[0x3da:0x3dd]
---
Predecessors: [0x3c3]
Successors: []
---
0x3da PUSH1 0x0
0x3dc DUP1
0x3dd REVERT
---
0x3da: V373 = 0x0
0x3dd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23b, V256, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V256, V258]

================================

Block 0x3de
[0x3de:0x42f]
---
Predecessors: [0x3c3]
Successors: [0x430, 0x434]
---
0x3de JUMPDEST
0x3df PUSH1 0x0
0x3e1 SLOAD
0x3e2 PUSH1 0x1
0x3e4 PUSH1 0xa0
0x3e6 PUSH1 0x2
0x3e8 EXP
0x3e9 SUB
0x3ea AND
0x3eb PUSH4 0xa9059cbb
0x3f0 DUP4
0x3f1 DUP4
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 PUSH1 0xe0
0x3f7 PUSH1 0x2
0x3f9 EXP
0x3fa PUSH4 0xffffffff
0x3ff DUP6
0x400 AND
0x401 MUL
0x402 DUP2
0x403 MSTORE
0x404 PUSH1 0x1
0x406 PUSH1 0xa0
0x408 PUSH1 0x2
0x40a EXP
0x40b SUB
0x40c SWAP1
0x40d SWAP3
0x40e AND
0x40f PUSH1 0x4
0x411 DUP4
0x412 ADD
0x413 MSTORE
0x414 PUSH1 0x24
0x416 DUP3
0x417 ADD
0x418 MSTORE
0x419 PUSH1 0x44
0x41b ADD
0x41c PUSH1 0x0
0x41e PUSH1 0x40
0x420 MLOAD
0x421 DUP1
0x422 DUP4
0x423 SUB
0x424 DUP2
0x425 PUSH1 0x0
0x427 DUP8
0x428 DUP1
0x429 EXTCODESIZE
0x42a ISZERO
0x42b ISZERO
0x42c PUSH2 0x434
0x42f JUMPI
---
0x3de: JUMPDEST 
0x3df: V374 = 0x0
0x3e1: V375 = S[0x0]
0x3e2: V376 = 0x1
0x3e4: V377 = 0xa0
0x3e6: V378 = 0x2
0x3e8: V379 = EXP 0x2 0xa0
0x3e9: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ea: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x3eb: V382 = 0xa9059cbb
0x3f2: V383 = 0x40
0x3f4: V384 = M[0x40]
0x3f5: V385 = 0xe0
0x3f7: V386 = 0x2
0x3f9: V387 = EXP 0x2 0xe0
0x3fa: V388 = 0xffffffff
0x400: V389 = AND 0xa9059cbb 0xffffffff
0x401: V390 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x403: M[V384] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x404: V391 = 0x1
0x406: V392 = 0xa0
0x408: V393 = 0x2
0x40a: V394 = EXP 0x2 0xa0
0x40b: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40e: V396 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V397 = 0x4
0x412: V398 = ADD V384 0x4
0x413: M[V398] = V396
0x414: V399 = 0x24
0x417: V400 = ADD V384 0x24
0x418: M[V400] = V258
0x419: V401 = 0x44
0x41b: V402 = ADD 0x44 V384
0x41c: V403 = 0x0
0x41e: V404 = 0x40
0x420: V405 = M[0x40]
0x423: V406 = SUB V402 V405
0x425: V407 = 0x0
0x429: V408 = EXTCODESIZE V381
0x42a: V409 = ISZERO V408
0x42b: V410 = ISZERO V409
0x42c: V411 = 0x434
0x42f: JUMPI 0x434 V410
---
Entry stack: [V13, 0x23b, V256, V258]
Stack pops: 2
Stack additions: [S1, S0, V381, 0xa9059cbb, V402, 0x0, V405, V406, V405, 0x0, V381]
Exit stack: [V13, 0x23b, V256, V258, V381, 0xa9059cbb, V402, 0x0, V405, V406, V405, 0x0, V381]

================================

Block 0x430
[0x430:0x433]
---
Predecessors: [0x3de]
Successors: []
---
0x430 PUSH1 0x0
0x432 DUP1
0x433 REVERT
---
0x430: V412 = 0x0
0x433: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23b, V256, V258, V381, 0xa9059cbb, V402, 0x0, V405, V406, V405, 0x0, V381]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V256, V258, V381, 0xa9059cbb, V402, 0x0, V405, V406, V405, 0x0, V381]

================================

Block 0x434
[0x434:0x440]
---
Predecessors: [0x3de]
Successors: [0x441, 0x445]
---
0x434 JUMPDEST
0x435 PUSH2 0x2c6
0x438 GAS
0x439 SUB
0x43a CALL
0x43b ISZERO
0x43c ISZERO
0x43d PUSH2 0x445
0x440 JUMPI
---
0x434: JUMPDEST 
0x435: V413 = 0x2c6
0x438: V414 = GAS
0x439: V415 = SUB V414 0x2c6
0x43a: V416 = CALL V415 V381 0x0 V405 V406 V405 0x0
0x43b: V417 = ISZERO V416
0x43c: V418 = ISZERO V417
0x43d: V419 = 0x445
0x440: JUMPI 0x445 V418
---
Entry stack: [V13, 0x23b, V256, V258, V381, 0xa9059cbb, V402, 0x0, V405, V406, V405, 0x0, V381]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x23b, V256, V258, V381, 0xa9059cbb, V402]

================================

Block 0x441
[0x441:0x444]
---
Predecessors: [0x434]
Successors: []
---
0x441 PUSH1 0x0
0x443 DUP1
0x444 REVERT
---
0x441: V420 = 0x0
0x444: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23b, V256, V258, V381, 0xa9059cbb, V402]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b, V256, V258, V381, 0xa9059cbb, V402]

================================

Block 0x445
[0x445:0x44b]
---
Predecessors: [0x434]
Successors: [0x23b]
---
0x445 JUMPDEST
0x446 POP
0x447 POP
0x448 POP
0x449 POP
0x44a POP
0x44b JUMP
---
0x445: JUMPDEST 
0x44b: JUMP 0x23b
---
Entry stack: [V13, 0x23b, V256, V258, V381, 0xa9059cbb, V402]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x44c
[0x44c:0x462]
---
Predecessors: [0x2a8]
Successors: [0x463, 0x467]
---
0x44c JUMPDEST
0x44d PUSH1 0x1
0x44f SLOAD
0x450 CALLER
0x451 PUSH1 0x1
0x453 PUSH1 0xa0
0x455 PUSH1 0x2
0x457 EXP
0x458 SUB
0x459 SWAP1
0x45a DUP2
0x45b AND
0x45c SWAP2
0x45d AND
0x45e EQ
0x45f PUSH2 0x467
0x462 JUMPI
---
0x44c: JUMPDEST 
0x44d: V421 = 0x1
0x44f: V422 = S[0x1]
0x450: V423 = CALLER
0x451: V424 = 0x1
0x453: V425 = 0xa0
0x455: V426 = 0x2
0x457: V427 = EXP 0x2 0xa0
0x458: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45b: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x45d: V430 = AND V422 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V431 = EQ V430 V429
0x45f: V432 = 0x467
0x462: JUMPI 0x467 V431
---
Entry stack: [V13, 0x23b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x44c]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V433 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b]

================================

Block 0x467
[0x467:0x474]
---
Predecessors: [0x44c]
Successors: []
---
0x467 JUMPDEST
0x468 PUSH1 0x2
0x46a SLOAD
0x46b PUSH1 0x1
0x46d PUSH1 0xa0
0x46f PUSH1 0x2
0x471 EXP
0x472 SUB
0x473 AND
0x474 SELFDESTRUCT
---
0x467: JUMPDEST 
0x468: V434 = 0x2
0x46a: V435 = S[0x2]
0x46b: V436 = 0x1
0x46d: V437 = 0xa0
0x46f: V438 = 0x2
0x471: V439 = EXP 0x2 0xa0
0x472: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x473: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x474: SELFDESTRUCT V441
---
Entry stack: [V13, 0x23b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23b]

================================

Block 0x475
[0x475:0x483]
---
Predecessors: [0x2bb]
Successors: [0x200]
---
0x475 JUMPDEST
0x476 PUSH1 0x0
0x478 SLOAD
0x479 PUSH1 0x1
0x47b PUSH1 0xa0
0x47d PUSH1 0x2
0x47f EXP
0x480 SUB
0x481 AND
0x482 DUP2
0x483 JUMP
---
0x475: JUMPDEST 
0x476: V442 = 0x0
0x478: V443 = S[0x0]
0x479: V444 = 0x1
0x47b: V445 = 0xa0
0x47d: V446 = 0x2
0x47f: V447 = EXP 0x2 0xa0
0x480: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x481: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x483: JUMP 0x200
---
Entry stack: [V13, 0x200]
Stack pops: 1
Stack additions: [S0, V449]
Exit stack: [V13, 0x200, V449]

================================

Block 0x484
[0x484:0x492]
---
Predecessors: [0x2ce]
Successors: [0x200]
---
0x484 JUMPDEST
0x485 PUSH1 0x2
0x487 SLOAD
0x488 PUSH1 0x1
0x48a PUSH1 0xa0
0x48c PUSH1 0x2
0x48e EXP
0x48f SUB
0x490 AND
0x491 DUP2
0x492 JUMP
---
0x484: JUMPDEST 
0x485: V450 = 0x2
0x487: V451 = S[0x2]
0x488: V452 = 0x1
0x48a: V453 = 0xa0
0x48c: V454 = 0x2
0x48e: V455 = EXP 0x2 0xa0
0x48f: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x490: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x492: JUMP 0x200
---
Entry stack: [V13, 0x200]
Stack pops: 1
Stack additions: [S0, V457]
Exit stack: [V13, 0x200, V457]

================================

Block 0x493
[0x493:0x4d0]
---
Predecessors: []
Successors: []
---
0x493 STOP
0x494 LOG1
0x495 PUSH6 0x627a7a723058
0x49c SHA3
0x49d MISSING 0xaa
0x49e OR
0x49f MISSING 0xe8
0x4a0 MISSING 0xc3
0x4a1 DUP7
0x4a2 MISSING 0x21
0x4a3 SELFDESTRUCT
0x4a4 DUP14
0x4a5 MISSING 0x29
0x4a6 MISSING 0x2d
0x4a7 BALANCE
0x4a8 MISSING 0xad
0x4a9 TIMESTAMP
0x4aa MISSING 0x24
0x4ab DUP1
0x4ac MISSING 0x2a
0x4ad DUP7
0x4ae MISSING 0xed
0x4af MSIZE
0x4b0 DUP2
0x4b1 BYTE
0x4b2 MISSING 0xa6
0x4b3 POP
0x4b4 MISSING 0xe
0x4b5 MISSING 0xbf
0x4b6 RETURNDATACOPY
0x4b7 PUSH25 0x5ec9c3b6120029
---
0x493: STOP 
0x494: LOG S0 S1 S2
0x495: V458 = 0x627a7a723058
0x49c: V459 = SHA3 0x627a7a723058 S3
0x49d: MISSING 0xaa
0x49e: V460 = OR S0 S1
0x49f: MISSING 0xe8
0x4a0: MISSING 0xc3
0x4a2: MISSING 0x21
0x4a3: SELFDESTRUCT S0
0x4a5: MISSING 0x29
0x4a6: MISSING 0x2d
0x4a7: V461 = BALANCE S0
0x4a8: MISSING 0xad
0x4a9: V462 = TIMESTAMP
0x4aa: MISSING 0x24
0x4ac: MISSING 0x2a
0x4ae: MISSING 0xed
0x4af: V463 = MSIZE
0x4b1: V464 = BYTE S0 V463
0x4b2: MISSING 0xa6
0x4b4: MISSING 0xe
0x4b5: MISSING 0xbf
0x4b6: RETURNDATACOPY S0 S1 S2
0x4b7: V465 = 0x5ec9c3b6120029
---
Entry stack: []
Stack pops: 0
Stack additions: [V459, V460, S6, S0, S1, S2, S3, S4, S5, S6, S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V461, V462, S0, S0, S6, S0, S1, S2, S3, S4, S5, S6, V464, S0, 0x5ec9c3b6120029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x1ed
Exit block: 0x200
Body: 0x1ed, 0x1f4, 0x1f8, 0x200, 0x2d6

Function 1:
Public function signature: 0x13af4035
Entry block: 0x21c
Exit block: 0x23b
Body: 0x21c, 0x223, 0x227, 0x23b, 0x2e5, 0x2fc, 0x300

Function 2:
Public function signature: 0x144fa6d7
Entry block: 0x23d
Exit block: 0x23b
Body: 0x23b, 0x23d, 0x244, 0x248, 0x32f, 0x346, 0x34a

Function 3:
Public function signature: 0x3f516018
Entry block: 0x25c
Exit block: 0x23b
Body: 0x23b, 0x25c, 0x263, 0x267, 0x379, 0x390, 0x394

Function 4:
Public function signature: 0x412664ae
Entry block: 0x27b
Exit block: 0x23b
Body: 0x23b, 0x27b, 0x282, 0x286, 0x3c3, 0x3da, 0x3de, 0x430, 0x434, 0x441, 0x445

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x29d
Exit block: 0x463
Body: 0x29d, 0x2a4, 0x2a8, 0x44c, 0x463, 0x467

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x2b0
Exit block: 0x200
Body: 0x200, 0x2b0, 0x2b7, 0x2bb, 0x475

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x2c3
Exit block: 0x200
Body: 0x200, 0x2c3, 0x2ca, 0x2ce, 0x484

Function 8:
Public fallback function
Entry block: 0x74
Exit block: 0x1ea
Body: 0x74, 0x7f, 0x83, 0x91, 0x99, 0x9f, 0xaa, 0xb8, 0xc0, 0xc6, 0xd1, 0xdf, 0xe7, 0xed, 0xf8, 0x14a, 0x14e, 0x15b, 0x15f, 0x1e6, 0x1ea

