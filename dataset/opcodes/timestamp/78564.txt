Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x164]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x164
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x164
0xa: JUMPI 0x164 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x751]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x751
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x751
0x24: JUMPI 0x751 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x766]
---
0x25 DUP1
0x26 PUSH4 0x10309781
0x2b EQ
0x2c PUSH2 0x766
0x2f JUMPI
---
0x26: V16 = 0x10309781
0x2b: V17 = EQ 0x10309781 V12
0x2c: V18 = 0x766
0x2f: JUMPI 0x766 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x78b]
---
0x30 DUP1
0x31 PUSH4 0x1fd8ffb0
0x36 EQ
0x37 PUSH2 0x78b
0x3a JUMPI
---
0x31: V19 = 0x1fd8ffb0
0x36: V20 = EQ 0x1fd8ffb0 V12
0x37: V21 = 0x78b
0x3a: JUMPI 0x78b V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x7a3]
---
0x3b DUP1
0x3c PUSH4 0x29dcb0cf
0x41 EQ
0x42 PUSH2 0x7a3
0x45 JUMPI
---
0x3c: V22 = 0x29dcb0cf
0x41: V23 = EQ 0x29dcb0cf V12
0x42: V24 = 0x7a3
0x45: JUMPI 0x7a3 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x7c8]
---
0x46 DUP1
0x47 PUSH4 0x2ec914b5
0x4c EQ
0x4d PUSH2 0x7c8
0x50 JUMPI
---
0x47: V25 = 0x2ec914b5
0x4c: V26 = EQ 0x2ec914b5 V12
0x4d: V27 = 0x7c8
0x50: JUMPI 0x7c8 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x7ed]
---
0x51 DUP1
0x52 PUSH4 0x31252103
0x57 EQ
0x58 PUSH2 0x7ed
0x5b JUMPI
---
0x52: V28 = 0x31252103
0x57: V29 = EQ 0x31252103 V12
0x58: V30 = 0x7ed
0x5b: JUMPI 0x7ed V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x812]
---
0x5c DUP1
0x5d PUSH4 0x38af3eed
0x62 EQ
0x63 PUSH2 0x812
0x66 JUMPI
---
0x5d: V31 = 0x38af3eed
0x62: V32 = EQ 0x38af3eed V12
0x63: V33 = 0x812
0x66: JUMPI 0x812 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x841]
---
0x67 DUP1
0x68 PUSH4 0x3b41ddba
0x6d EQ
0x6e PUSH2 0x841
0x71 JUMPI
---
0x68: V34 = 0x3b41ddba
0x6d: V35 = EQ 0x3b41ddba V12
0x6e: V36 = 0x841
0x71: JUMPI 0x841 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x866]
---
0x72 DUP1
0x73 PUSH4 0x4c95f5d0
0x78 EQ
0x79 PUSH2 0x866
0x7c JUMPI
---
0x73: V37 = 0x4c95f5d0
0x78: V38 = EQ 0x4c95f5d0 V12
0x79: V39 = 0x866
0x7c: JUMPI 0x866 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x88b]
---
0x7d DUP1
0x7e PUSH4 0x4fa34075
0x83 EQ
0x84 PUSH2 0x88b
0x87 JUMPI
---
0x7e: V40 = 0x4fa34075
0x83: V41 = EQ 0x4fa34075 V12
0x84: V42 = 0x88b
0x87: JUMPI 0x88b V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x8a0]
---
0x88 DUP1
0x89 PUSH4 0x5a0254e2
0x8e EQ
0x8f PUSH2 0x8a0
0x92 JUMPI
---
0x89: V43 = 0x5a0254e2
0x8e: V44 = EQ 0x5a0254e2 V12
0x8f: V45 = 0x8a0
0x92: JUMPI 0x8a0 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x8cf]
---
0x93 DUP1
0x94 PUSH4 0x5b54d2d6
0x99 EQ
0x9a PUSH2 0x8cf
0x9d JUMPI
---
0x94: V46 = 0x5b54d2d6
0x99: V47 = EQ 0x5b54d2d6 V12
0x9a: V48 = 0x8cf
0x9d: JUMPI 0x8cf V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x8f6]
---
0x9e DUP1
0x9f PUSH4 0x6e66f6e9
0xa4 EQ
0xa5 PUSH2 0x8f6
0xa8 JUMPI
---
0x9f: V49 = 0x6e66f6e9
0xa4: V50 = EQ 0x6e66f6e9 V12
0xa5: V51 = 0x8f6
0xa8: JUMPI 0x8f6 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x925]
---
0xa9 DUP1
0xaa PUSH4 0x70a08231
0xaf EQ
0xb0 PUSH2 0x925
0xb3 JUMPI
---
0xaa: V52 = 0x70a08231
0xaf: V53 = EQ 0x70a08231 V12
0xb0: V54 = 0x925
0xb3: JUMPI 0x925 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x956]
---
0xb4 DUP1
0xb5 PUSH4 0x7a3a0e84
0xba EQ
0xbb PUSH2 0x956
0xbe JUMPI
---
0xb5: V55 = 0x7a3a0e84
0xba: V56 = EQ 0x7a3a0e84 V12
0xbb: V57 = 0x956
0xbe: JUMPI 0x956 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x97b]
---
0xbf DUP1
0xc0 PUSH4 0x7b3e5e7b
0xc5 EQ
0xc6 PUSH2 0x97b
0xc9 JUMPI
---
0xc0: V58 = 0x7b3e5e7b
0xc5: V59 = EQ 0x7b3e5e7b V12
0xc6: V60 = 0x97b
0xc9: JUMPI 0x97b V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x9a0]
---
0xca DUP1
0xcb PUSH4 0x7c24ce7d
0xd0 EQ
0xd1 PUSH2 0x9a0
0xd4 JUMPI
---
0xcb: V61 = 0x7c24ce7d
0xd0: V62 = EQ 0x7c24ce7d V12
0xd1: V63 = 0x9a0
0xd4: JUMPI 0x9a0 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x9c5]
---
0xd5 DUP1
0xd6 PUSH4 0x827037db
0xdb EQ
0xdc PUSH2 0x9c5
0xdf JUMPI
---
0xd6: V64 = 0x827037db
0xdb: V65 = EQ 0x827037db V12
0xdc: V66 = 0x9c5
0xdf: JUMPI 0x9c5 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x9ea]
---
0xe0 DUP1
0xe1 PUSH4 0x89e66aea
0xe6 EQ
0xe7 PUSH2 0x9ea
0xea JUMPI
---
0xe1: V67 = 0x89e66aea
0xe6: V68 = EQ 0x89e66aea V12
0xe7: V69 = 0x9ea
0xea: JUMPI 0x9ea V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0xa0f]
---
0xeb DUP1
0xec PUSH4 0x8f48399a
0xf1 EQ
0xf2 PUSH2 0xa0f
0xf5 JUMPI
---
0xec: V70 = 0x8f48399a
0xf1: V71 = EQ 0x8f48399a V12
0xf2: V72 = 0xa0f
0xf5: JUMPI 0xa0f V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0xa34]
---
0xf6 DUP1
0xf7 PUSH4 0x92dcc41c
0xfc EQ
0xfd PUSH2 0xa34
0x100 JUMPI
---
0xf7: V73 = 0x92dcc41c
0xfc: V74 = EQ 0x92dcc41c V12
0xfd: V75 = 0xa34
0x100: JUMPI 0xa34 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0xa59]
---
0x101 DUP1
0x102 PUSH4 0x998936b0
0x107 EQ
0x108 PUSH2 0xa59
0x10b JUMPI
---
0x102: V76 = 0x998936b0
0x107: V77 = EQ 0x998936b0 V12
0x108: V78 = 0xa59
0x10b: JUMPI 0xa59 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0xa6e]
---
0x10c DUP1
0x10d PUSH4 0xa02d55a3
0x112 EQ
0x113 PUSH2 0xa6e
0x116 JUMPI
---
0x10d: V79 = 0xa02d55a3
0x112: V80 = EQ 0xa02d55a3 V12
0x113: V81 = 0xa6e
0x116: JUMPI 0xa6e V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0xa83]
---
0x117 DUP1
0x118 PUSH4 0xa8a75b78
0x11d EQ
0x11e PUSH2 0xa83
0x121 JUMPI
---
0x118: V82 = 0xa8a75b78
0x11d: V83 = EQ 0xa8a75b78 V12
0x11e: V84 = 0xa83
0x121: JUMPI 0xa83 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x12c]
---
Predecessors: [0x117]
Successors: [0x12d, 0xaa8]
---
0x122 DUP1
0x123 PUSH4 0xace38f8c
0x128 EQ
0x129 PUSH2 0xaa8
0x12c JUMPI
---
0x123: V85 = 0xace38f8c
0x128: V86 = EQ 0xace38f8c V12
0x129: V87 = 0xaa8
0x12c: JUMPI 0xaa8 V86
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x122]
Successors: [0x138, 0xacd]
---
0x12d DUP1
0x12e PUSH4 0xaff29802
0x133 EQ
0x134 PUSH2 0xacd
0x137 JUMPI
---
0x12e: V88 = 0xaff29802
0x133: V89 = EQ 0xaff29802 V12
0x134: V90 = 0xacd
0x137: JUMPI 0xacd V89
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x138
[0x138:0x142]
---
Predecessors: [0x12d]
Successors: [0x143, 0xaf2]
---
0x138 DUP1
0x139 PUSH4 0xccb07cef
0x13e EQ
0x13f PUSH2 0xaf2
0x142 JUMPI
---
0x139: V91 = 0xccb07cef
0x13e: V92 = EQ 0xccb07cef V12
0x13f: V93 = 0xaf2
0x142: JUMPI 0xaf2 V92
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x143
[0x143:0x14d]
---
Predecessors: [0x138]
Successors: [0x14e, 0xb19]
---
0x143 DUP1
0x144 PUSH4 0xd424f628
0x149 EQ
0x14a PUSH2 0xb19
0x14d JUMPI
---
0x144: V94 = 0xd424f628
0x149: V95 = EQ 0xd424f628 V12
0x14a: V96 = 0xb19
0x14d: JUMPI 0xb19 V95
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x158]
---
Predecessors: [0x143]
Successors: [0x159, 0xb40]
---
0x14e DUP1
0x14f PUSH4 0xdcd22c9b
0x154 EQ
0x155 PUSH2 0xb40
0x158 JUMPI
---
0x14f: V97 = 0xdcd22c9b
0x154: V98 = EQ 0xdcd22c9b V12
0x155: V99 = 0xb40
0x158: JUMPI 0xb40 V98
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x159
[0x159:0x163]
---
Predecessors: [0x14e]
Successors: [0x164, 0xb55]
---
0x159 DUP1
0x15a PUSH4 0xfd6b7ef8
0x15f EQ
0x160 PUSH2 0xb55
0x163 JUMPI
---
0x15a: V100 = 0xfd6b7ef8
0x15f: V101 = EQ 0xfd6b7ef8 V12
0x160: V102 = 0xb55
0x163: JUMPI 0xb55 V101
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x0, 0x159]
Successors: [0x165]
---
0x164 JUMPDEST
---
0x164: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0x164]
Successors: [0x179, 0x17d]
---
0x165 JUMPDEST
0x166 PUSH1 0x14
0x168 SLOAD
0x169 PUSH1 0x0
0x16b SWAP1
0x16c PUSH2 0x100
0x16f SWAP1
0x170 DIV
0x171 PUSH1 0xff
0x173 AND
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x165: JUMPDEST 
0x166: V103 = 0x14
0x168: V104 = S[0x14]
0x169: V105 = 0x0
0x16c: V106 = 0x100
0x170: V107 = DIV V104 0x100
0x171: V108 = 0xff
0x173: V109 = AND 0xff V107
0x174: V110 = ISZERO V109
0x175: V111 = 0x17d
0x178: JUMPI 0x17d V110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x165]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V112 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x17d
[0x17d:0x189]
---
Predecessors: [0x165]
Successors: [0x18a, 0x18e]
---
0x17d JUMPDEST
0x17e PUSH1 0x7
0x180 SLOAD
0x181 PUSH1 0x8
0x183 SLOAD
0x184 GT
0x185 ISZERO
0x186 PUSH2 0x18e
0x189 JUMPI
---
0x17d: JUMPDEST 
0x17e: V113 = 0x7
0x180: V114 = S[0x7]
0x181: V115 = 0x8
0x183: V116 = S[0x8]
0x184: V117 = GT V116 V114
0x185: V118 = ISZERO V117
0x186: V119 = 0x18e
0x189: JUMPI 0x18e V118
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x18a
[0x18a:0x18d]
---
Predecessors: [0x17d]
Successors: []
---
0x18a PUSH1 0x0
0x18c DUP1
0x18d REVERT
---
0x18a: V120 = 0x0
0x18d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x18e
[0x18e:0x199]
---
Predecessors: [0x17d]
Successors: [0x19a, 0x1a7]
---
0x18e JUMPDEST
0x18f PUSH1 0x1
0x191 SLOAD
0x192 TIMESTAMP
0x193 LT
0x194 DUP1
0x195 ISZERO
0x196 PUSH2 0x1a7
0x199 JUMPI
---
0x18e: JUMPDEST 
0x18f: V121 = 0x1
0x191: V122 = S[0x1]
0x192: V123 = TIMESTAMP
0x193: V124 = LT V123 V122
0x195: V125 = ISZERO V124
0x196: V126 = 0x1a7
0x199: JUMPI 0x1a7 V125
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V12, 0x0, V124]

================================

Block 0x19a
[0x19a:0x1a6]
---
Predecessors: [0x18e]
Successors: [0x1a7]
---
0x19a POP
0x19b PUSH8 0x8ac7230489e80000
0x1a4 DUP2
0x1a5 LT
0x1a6 ISZERO
---
0x19b: V127 = 0x8ac7230489e80000
0x1a5: V128 = LT 0x0 0x8ac7230489e80000
0x1a6: V129 = ISZERO 0x1
---
Entry stack: [V12, 0x0, V124]
Stack pops: 2
Stack additions: [S1, 0x0]
Exit stack: [V12, 0x0, 0x0]

================================

Block 0x1a7
[0x1a7:0x1ac]
---
Predecessors: [0x18e, 0x19a]
Successors: [0x1ad, 0x1b4]
---
0x1a7 JUMPDEST
0x1a8 DUP1
0x1a9 PUSH2 0x1b4
0x1ac JUMPI
---
0x1a7: JUMPDEST 
0x1a9: V130 = 0x1b4
0x1ac: JUMPI 0x1b4 S0
---
Entry stack: [V12, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x0, S0]

================================

Block 0x1ad
[0x1ad:0x1b3]
---
Predecessors: [0x1a7]
Successors: [0x1b4]
---
0x1ad POP
0x1ae PUSH1 0x1
0x1b0 SLOAD
0x1b1 TIMESTAMP
0x1b2 LT
0x1b3 ISZERO
---
0x1ae: V131 = 0x1
0x1b0: V132 = S[0x1]
0x1b1: V133 = TIMESTAMP
0x1b2: V134 = LT V133 V132
0x1b3: V135 = ISZERO V134
---
Entry stack: [V12, 0x0, S0]
Stack pops: 1
Stack additions: [V135]
Exit stack: [V12, 0x0, V135]

================================

Block 0x1b4
[0x1b4:0x1ba]
---
Predecessors: [0x1a7, 0x1ad]
Successors: [0x1bb, 0x1bf]
---
0x1b4 JUMPDEST
0x1b5 ISZERO
0x1b6 ISZERO
0x1b7 PUSH2 0x1bf
0x1ba JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V136 = ISZERO S0
0x1b6: V137 = ISZERO V136
0x1b7: V138 = 0x1bf
0x1ba: JUMPI 0x1bf V137
---
Entry stack: [V12, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x1b4]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V139 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x1bf
[0x1bf:0x1f3]
---
Predecessors: [0x1b4]
Successors: [0x1f4, 0x58d]
---
0x1bf JUMPDEST
0x1c0 POP
0x1c1 PUSH1 0x1
0x1c3 PUSH1 0xa0
0x1c5 PUSH1 0x2
0x1c7 EXP
0x1c8 SUB
0x1c9 CALLER
0x1ca AND
0x1cb PUSH1 0x0
0x1cd SWAP1
0x1ce DUP2
0x1cf MSTORE
0x1d0 PUSH1 0x13
0x1d2 PUSH1 0x20
0x1d4 MSTORE
0x1d5 PUSH1 0x40
0x1d7 SWAP1
0x1d8 SHA3
0x1d9 DUP1
0x1da SLOAD
0x1db CALLVALUE
0x1dc SWAP1
0x1dd DUP2
0x1de ADD
0x1df SWAP1
0x1e0 SWAP2
0x1e1 SSTORE
0x1e2 PUSH1 0x8
0x1e4 DUP1
0x1e5 SLOAD
0x1e6 DUP3
0x1e7 ADD
0x1e8 SWAP1
0x1e9 SSTORE
0x1ea PUSH1 0x1
0x1ec SLOAD
0x1ed TIMESTAMP
0x1ee LT
0x1ef ISZERO
0x1f0 PUSH2 0x58d
0x1f3 JUMPI
---
0x1bf: JUMPDEST 
0x1c1: V140 = 0x1
0x1c3: V141 = 0xa0
0x1c5: V142 = 0x2
0x1c7: V143 = EXP 0x2 0xa0
0x1c8: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c9: V145 = CALLER
0x1ca: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V147 = 0x0
0x1cf: M[0x0] = V146
0x1d0: V148 = 0x13
0x1d2: V149 = 0x20
0x1d4: M[0x20] = 0x13
0x1d5: V150 = 0x40
0x1d8: V151 = SHA3 0x0 0x40
0x1da: V152 = S[V151]
0x1db: V153 = CALLVALUE
0x1de: V154 = ADD V153 V152
0x1e1: S[V151] = V154
0x1e2: V155 = 0x8
0x1e5: V156 = S[0x8]
0x1e7: V157 = ADD V153 V156
0x1e9: S[0x8] = V157
0x1ea: V158 = 0x1
0x1ec: V159 = S[0x1]
0x1ed: V160 = TIMESTAMP
0x1ee: V161 = LT V160 V159
0x1ef: V162 = ISZERO V161
0x1f0: V163 = 0x58d
0x1f3: JUMPI 0x58d V162
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V153]
Exit stack: [V12, V153]

================================

Block 0x1f4
[0x1f4:0x204]
---
Predecessors: [0x1bf]
Successors: [0x205, 0x281]
---
0x1f4 PUSH9 0x1158e460913d00000
0x1fe DUP2
0x1ff LT
0x200 ISZERO
0x201 PUSH2 0x281
0x204 JUMPI
---
0x1f4: V164 = 0x1158e460913d00000
0x1ff: V165 = LT V153 0x1158e460913d00000
0x200: V166 = ISZERO V165
0x201: V167 = 0x281
0x204: JUMPI 0x281 V166
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V153]

================================

Block 0x205
[0x205:0x223]
---
Predecessors: [0x1f4]
Successors: [0x224]
---
0x205 PUSH1 0x12
0x207 SLOAD
0x208 PUSH1 0xc
0x20a SLOAD
0x20b PUSH1 0x1
0x20d PUSH1 0xa0
0x20f PUSH1 0x2
0x211 EXP
0x212 SUB
0x213 SWAP1
0x214 SWAP2
0x215 AND
0x216 SWAP1
0x217 PUSH4 0xa9059cbb
0x21c SWAP1
0x21d CALLER
0x21e SWAP1
0x21f PUSH1 0xa
0x221 SWAP1
0x222 DUP6
0x223 MUL
---
0x205: V168 = 0x12
0x207: V169 = S[0x12]
0x208: V170 = 0xc
0x20a: V171 = S[0xc]
0x20b: V172 = 0x1
0x20d: V173 = 0xa0
0x20f: V174 = 0x2
0x211: V175 = EXP 0x2 0xa0
0x212: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x215: V177 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x217: V178 = 0xa9059cbb
0x21d: V179 = CALLER
0x21f: V180 = 0xa
0x223: V181 = MUL V153 V171
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0, V177, 0xa9059cbb, V179, 0xa, V181]
Exit stack: [V12, V153, V177, 0xa9059cbb, V179, 0xa, V181]

================================

Block 0x224
[0x224:0x263]
---
Predecessors: [0x205, 0x293, 0x325, 0x3b7, 0x449]
Successors: [0x264, 0x268]
---
0x224 JUMPDEST
0x225 DIV
0x226 PUSH1 0x40
0x228 MLOAD
0x229 PUSH1 0xe0
0x22b PUSH1 0x2
0x22d EXP
0x22e PUSH4 0xffffffff
0x233 DUP6
0x234 AND
0x235 MUL
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x1
0x23a PUSH1 0xa0
0x23c PUSH1 0x2
0x23e EXP
0x23f SUB
0x240 SWAP1
0x241 SWAP3
0x242 AND
0x243 PUSH1 0x4
0x245 DUP4
0x246 ADD
0x247 MSTORE
0x248 PUSH1 0x24
0x24a DUP3
0x24b ADD
0x24c MSTORE
0x24d PUSH1 0x44
0x24f ADD
0x250 PUSH1 0x0
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 DUP4
0x257 SUB
0x258 DUP2
0x259 PUSH1 0x0
0x25b DUP8
0x25c DUP1
0x25d EXTCODESIZE
0x25e ISZERO
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x224: JUMPDEST 
0x225: V182 = DIV S0 0xa
0x226: V183 = 0x40
0x228: V184 = M[0x40]
0x229: V185 = 0xe0
0x22b: V186 = 0x2
0x22d: V187 = EXP 0x2 0xe0
0x22e: V188 = 0xffffffff
0x234: V189 = AND 0xa9059cbb 0xffffffff
0x235: V190 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x237: M[V184] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x238: V191 = 0x1
0x23a: V192 = 0xa0
0x23c: V193 = 0x2
0x23e: V194 = EXP 0x2 0xa0
0x23f: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x242: V196 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x243: V197 = 0x4
0x246: V198 = ADD V184 0x4
0x247: M[V198] = V196
0x248: V199 = 0x24
0x24b: V200 = ADD V184 0x24
0x24c: M[V200] = V182
0x24d: V201 = 0x44
0x24f: V202 = ADD 0x44 V184
0x250: V203 = 0x0
0x252: V204 = 0x40
0x254: V205 = M[0x40]
0x257: V206 = SUB V202 V205
0x259: V207 = 0x0
0x25d: V208 = EXTCODESIZE S4
0x25e: V209 = ISZERO V208
0x25f: V210 = ISZERO V209
0x260: V211 = 0x268
0x263: JUMPI 0x268 V210
---
Entry stack: [V12, V153, S4, 0xa9059cbb, S2, 0xa, S0]
Stack pops: 5
Stack additions: [S4, S3, V202, 0x0, V205, V206, V205, 0x0, S4]
Exit stack: [V12, V153, S4, 0xa9059cbb, V202, 0x0, V205, V206, V205, 0x0, S4]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x224]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V212 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V12, V153, S8, 0xa9059cbb, V202, 0x0, V205, V206, V205, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153, S8, 0xa9059cbb, V202, 0x0, V205, V206, V205, 0x0, S0]

================================

Block 0x268
[0x268:0x274]
---
Predecessors: [0x224, 0x2b6, 0x348, 0x3da, 0x46c]
Successors: [0x275, 0x279]
---
0x268 JUMPDEST
0x269 PUSH2 0x2c6
0x26c GAS
0x26d SUB
0x26e CALL
0x26f ISZERO
0x270 ISZERO
0x271 PUSH2 0x279
0x274 JUMPI
---
0x268: JUMPDEST 
0x269: V213 = 0x2c6
0x26c: V214 = GAS
0x26d: V215 = SUB V214 0x2c6
0x26e: V216 = CALL V215 S0 0x0 S2 S3 S4 0x0
0x26f: V217 = ISZERO V216
0x270: V218 = ISZERO V217
0x271: V219 = 0x279
0x274: JUMPI 0x279 V218
---
Entry stack: [V12, V153, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V153, S8, S7, S6]

================================

Block 0x275
[0x275:0x278]
---
Predecessors: [0x268]
Successors: []
---
0x275 PUSH1 0x0
0x277 DUP1
0x278 REVERT
---
0x275: V220 = 0x0
0x278: REVERT 0x0 0x0
---
Entry stack: [V12, V153, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153, S2, S1, S0]

================================

Block 0x279
[0x279:0x280]
---
Predecessors: [0x268, 0x2f6, 0x388, 0x41a, 0x4ac]
Successors: [0x542]
---
0x279 JUMPDEST
0x27a POP
0x27b POP
0x27c POP
0x27d PUSH2 0x542
0x280 JUMP
---
0x279: JUMPDEST 
0x27d: V221 = 0x542
0x280: JUMP 0x542
---
Entry stack: [V12, V153, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x281
[0x281:0x292]
---
Predecessors: [0x1f4]
Successors: [0x293, 0x313]
---
0x281 JUMPDEST
0x282 PUSH9 0x1a055690d9db80000
0x28c DUP2
0x28d LT
0x28e ISZERO
0x28f PUSH2 0x313
0x292 JUMPI
---
0x281: JUMPDEST 
0x282: V222 = 0x1a055690d9db80000
0x28d: V223 = LT V153 0x1a055690d9db80000
0x28e: V224 = ISZERO V223
0x28f: V225 = 0x313
0x292: JUMPI 0x313 V224
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V153]

================================

Block 0x293
[0x293:0x2b5]
---
Predecessors: [0x281]
Successors: [0x224]
---
0x293 PUSH1 0x12
0x295 SLOAD
0x296 PUSH1 0xd
0x298 SLOAD
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 SWAP1
0x2a2 SWAP2
0x2a3 AND
0x2a4 SWAP1
0x2a5 PUSH4 0xa9059cbb
0x2aa SWAP1
0x2ab CALLER
0x2ac SWAP1
0x2ad PUSH1 0xa
0x2af SWAP1
0x2b0 DUP6
0x2b1 MUL
0x2b2 PUSH2 0x224
0x2b5 JUMP
---
0x293: V226 = 0x12
0x295: V227 = S[0x12]
0x296: V228 = 0xd
0x298: V229 = S[0xd]
0x299: V230 = 0x1
0x29b: V231 = 0xa0
0x29d: V232 = 0x2
0x29f: V233 = EXP 0x2 0xa0
0x2a0: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V235 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V236 = 0xa9059cbb
0x2ab: V237 = CALLER
0x2ad: V238 = 0xa
0x2b1: V239 = MUL V153 V229
0x2b2: V240 = 0x224
0x2b5: JUMP 0x224
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0, V235, 0xa9059cbb, V237, 0xa, V239]
Exit stack: [V12, V153, V235, 0xa9059cbb, V237, 0xa, V239]

================================

Block 0x2b6
[0x2b6:0x2f5]
---
Predecessors: []
Successors: [0x268, 0x2f6]
---
0x2b6 JUMPDEST
0x2b7 DIV
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb PUSH1 0xe0
0x2bd PUSH1 0x2
0x2bf EXP
0x2c0 PUSH4 0xffffffff
0x2c5 DUP6
0x2c6 AND
0x2c7 MUL
0x2c8 DUP2
0x2c9 MSTORE
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 SWAP1
0x2d3 SWAP3
0x2d4 AND
0x2d5 PUSH1 0x4
0x2d7 DUP4
0x2d8 ADD
0x2d9 MSTORE
0x2da PUSH1 0x24
0x2dc DUP3
0x2dd ADD
0x2de MSTORE
0x2df PUSH1 0x44
0x2e1 ADD
0x2e2 PUSH1 0x0
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 DUP1
0x2e8 DUP4
0x2e9 SUB
0x2ea DUP2
0x2eb PUSH1 0x0
0x2ed DUP8
0x2ee DUP1
0x2ef EXTCODESIZE
0x2f0 ISZERO
0x2f1 ISZERO
0x2f2 PUSH2 0x268
0x2f5 JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V241 = DIV S0 S1
0x2b8: V242 = 0x40
0x2ba: V243 = M[0x40]
0x2bb: V244 = 0xe0
0x2bd: V245 = 0x2
0x2bf: V246 = EXP 0x2 0xe0
0x2c0: V247 = 0xffffffff
0x2c6: V248 = AND S3 0xffffffff
0x2c7: V249 = MUL V248 0x100000000000000000000000000000000000000000000000000000000
0x2c9: M[V243] = V249
0x2ca: V250 = 0x1
0x2cc: V251 = 0xa0
0x2ce: V252 = 0x2
0x2d0: V253 = EXP 0x2 0xa0
0x2d1: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d4: V255 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V256 = 0x4
0x2d8: V257 = ADD V243 0x4
0x2d9: M[V257] = V255
0x2da: V258 = 0x24
0x2dd: V259 = ADD V243 0x24
0x2de: M[V259] = V241
0x2df: V260 = 0x44
0x2e1: V261 = ADD 0x44 V243
0x2e2: V262 = 0x0
0x2e4: V263 = 0x40
0x2e6: V264 = M[0x40]
0x2e9: V265 = SUB V261 V264
0x2eb: V266 = 0x0
0x2ef: V267 = EXTCODESIZE S4
0x2f0: V268 = ISZERO V267
0x2f1: V269 = ISZERO V268
0x2f2: V270 = 0x268
0x2f5: JUMPI 0x268 V269
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V261, 0x0, V264, V265, V264, 0x0, S4]
Exit stack: [S4, S3, V261, 0x0, V264, V265, V264, 0x0, S4]

================================

Block 0x2f6
[0x2f6:0x306]
---
Predecessors: [0x2b6]
Successors: [0x279, 0x307]
---
0x2f6 PUSH1 0x0
0x2f8 DUP1
0x2f9 REVERT
0x2fa JUMPDEST
0x2fb PUSH2 0x2c6
0x2fe GAS
0x2ff SUB
0x300 CALL
0x301 ISZERO
0x302 ISZERO
0x303 PUSH2 0x279
0x306 JUMPI
---
0x2f6: V271 = 0x0
0x2f9: REVERT 0x0 0x0
0x2fa: JUMPDEST 
0x2fb: V272 = 0x2c6
0x2fe: V273 = GAS
0x2ff: V274 = SUB V273 0x2c6
0x300: V275 = CALL V274 S0 S1 S2 S3 S4 S5
0x301: V276 = ISZERO V275
0x302: V277 = ISZERO V276
0x303: V278 = 0x279
0x306: JUMPI 0x279 V277
---
Entry stack: [S8, S7, V261, 0x0, V264, V265, V264, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x307
[0x307:0x312]
---
Predecessors: [0x2f6]
Successors: [0x542]
---
0x307 PUSH1 0x0
0x309 DUP1
0x30a REVERT
0x30b JUMPDEST
0x30c POP
0x30d POP
0x30e POP
0x30f PUSH2 0x542
0x312 JUMP
---
0x307: V279 = 0x0
0x30a: REVERT 0x0 0x0
0x30b: JUMPDEST 
0x30f: V280 = 0x542
0x312: JUMP 0x542
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x313
[0x313:0x324]
---
Predecessors: [0x281]
Successors: [0x325, 0x3a5]
---
0x313 JUMPDEST
0x314 PUSH9 0x2b5e3af16b1880000
0x31e DUP2
0x31f LT
0x320 ISZERO
0x321 PUSH2 0x3a5
0x324 JUMPI
---
0x313: JUMPDEST 
0x314: V281 = 0x2b5e3af16b1880000
0x31f: V282 = LT V153 0x2b5e3af16b1880000
0x320: V283 = ISZERO V282
0x321: V284 = 0x3a5
0x324: JUMPI 0x3a5 V283
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V153]

================================

Block 0x325
[0x325:0x347]
---
Predecessors: [0x313]
Successors: [0x224]
---
0x325 PUSH1 0x12
0x327 SLOAD
0x328 PUSH1 0xe
0x32a SLOAD
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 SWAP1
0x334 SWAP2
0x335 AND
0x336 SWAP1
0x337 PUSH4 0xa9059cbb
0x33c SWAP1
0x33d CALLER
0x33e SWAP1
0x33f PUSH1 0xa
0x341 SWAP1
0x342 DUP6
0x343 MUL
0x344 PUSH2 0x224
0x347 JUMP
---
0x325: V285 = 0x12
0x327: V286 = S[0x12]
0x328: V287 = 0xe
0x32a: V288 = S[0xe]
0x32b: V289 = 0x1
0x32d: V290 = 0xa0
0x32f: V291 = 0x2
0x331: V292 = EXP 0x2 0xa0
0x332: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V294 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0x337: V295 = 0xa9059cbb
0x33d: V296 = CALLER
0x33f: V297 = 0xa
0x343: V298 = MUL V153 V288
0x344: V299 = 0x224
0x347: JUMP 0x224
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0, V294, 0xa9059cbb, V296, 0xa, V298]
Exit stack: [V12, V153, V294, 0xa9059cbb, V296, 0xa, V298]

================================

Block 0x348
[0x348:0x387]
---
Predecessors: []
Successors: [0x268, 0x388]
---
0x348 JUMPDEST
0x349 DIV
0x34a PUSH1 0x40
0x34c MLOAD
0x34d PUSH1 0xe0
0x34f PUSH1 0x2
0x351 EXP
0x352 PUSH4 0xffffffff
0x357 DUP6
0x358 AND
0x359 MUL
0x35a DUP2
0x35b MSTORE
0x35c PUSH1 0x1
0x35e PUSH1 0xa0
0x360 PUSH1 0x2
0x362 EXP
0x363 SUB
0x364 SWAP1
0x365 SWAP3
0x366 AND
0x367 PUSH1 0x4
0x369 DUP4
0x36a ADD
0x36b MSTORE
0x36c PUSH1 0x24
0x36e DUP3
0x36f ADD
0x370 MSTORE
0x371 PUSH1 0x44
0x373 ADD
0x374 PUSH1 0x0
0x376 PUSH1 0x40
0x378 MLOAD
0x379 DUP1
0x37a DUP4
0x37b SUB
0x37c DUP2
0x37d PUSH1 0x0
0x37f DUP8
0x380 DUP1
0x381 EXTCODESIZE
0x382 ISZERO
0x383 ISZERO
0x384 PUSH2 0x268
0x387 JUMPI
---
0x348: JUMPDEST 
0x349: V300 = DIV S0 S1
0x34a: V301 = 0x40
0x34c: V302 = M[0x40]
0x34d: V303 = 0xe0
0x34f: V304 = 0x2
0x351: V305 = EXP 0x2 0xe0
0x352: V306 = 0xffffffff
0x358: V307 = AND S3 0xffffffff
0x359: V308 = MUL V307 0x100000000000000000000000000000000000000000000000000000000
0x35b: M[V302] = V308
0x35c: V309 = 0x1
0x35e: V310 = 0xa0
0x360: V311 = 0x2
0x362: V312 = EXP 0x2 0xa0
0x363: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x366: V314 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x367: V315 = 0x4
0x36a: V316 = ADD V302 0x4
0x36b: M[V316] = V314
0x36c: V317 = 0x24
0x36f: V318 = ADD V302 0x24
0x370: M[V318] = V300
0x371: V319 = 0x44
0x373: V320 = ADD 0x44 V302
0x374: V321 = 0x0
0x376: V322 = 0x40
0x378: V323 = M[0x40]
0x37b: V324 = SUB V320 V323
0x37d: V325 = 0x0
0x381: V326 = EXTCODESIZE S4
0x382: V327 = ISZERO V326
0x383: V328 = ISZERO V327
0x384: V329 = 0x268
0x387: JUMPI 0x268 V328
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V320, 0x0, V323, V324, V323, 0x0, S4]
Exit stack: [S4, S3, V320, 0x0, V323, V324, V323, 0x0, S4]

================================

Block 0x388
[0x388:0x398]
---
Predecessors: [0x348]
Successors: [0x279, 0x399]
---
0x388 PUSH1 0x0
0x38a DUP1
0x38b REVERT
0x38c JUMPDEST
0x38d PUSH2 0x2c6
0x390 GAS
0x391 SUB
0x392 CALL
0x393 ISZERO
0x394 ISZERO
0x395 PUSH2 0x279
0x398 JUMPI
---
0x388: V330 = 0x0
0x38b: REVERT 0x0 0x0
0x38c: JUMPDEST 
0x38d: V331 = 0x2c6
0x390: V332 = GAS
0x391: V333 = SUB V332 0x2c6
0x392: V334 = CALL V333 S0 S1 S2 S3 S4 S5
0x393: V335 = ISZERO V334
0x394: V336 = ISZERO V335
0x395: V337 = 0x279
0x398: JUMPI 0x279 V336
---
Entry stack: [S8, S7, V320, 0x0, V323, V324, V323, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x399
[0x399:0x3a4]
---
Predecessors: [0x388]
Successors: [0x542]
---
0x399 PUSH1 0x0
0x39b DUP1
0x39c REVERT
0x39d JUMPDEST
0x39e POP
0x39f POP
0x3a0 POP
0x3a1 PUSH2 0x542
0x3a4 JUMP
---
0x399: V338 = 0x0
0x39c: REVERT 0x0 0x0
0x39d: JUMPDEST 
0x3a1: V339 = 0x542
0x3a4: JUMP 0x542
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3a5
[0x3a5:0x3b6]
---
Predecessors: [0x313]
Successors: [0x3b7, 0x437]
---
0x3a5 JUMPDEST
0x3a6 PUSH9 0x56bc75e2d63100000
0x3b0 DUP2
0x3b1 LT
0x3b2 ISZERO
0x3b3 PUSH2 0x437
0x3b6 JUMPI
---
0x3a5: JUMPDEST 
0x3a6: V340 = 0x56bc75e2d63100000
0x3b1: V341 = LT V153 0x56bc75e2d63100000
0x3b2: V342 = ISZERO V341
0x3b3: V343 = 0x437
0x3b6: JUMPI 0x437 V342
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V153]

================================

Block 0x3b7
[0x3b7:0x3d9]
---
Predecessors: [0x3a5]
Successors: [0x224]
---
0x3b7 PUSH1 0x12
0x3b9 SLOAD
0x3ba PUSH1 0xf
0x3bc SLOAD
0x3bd PUSH1 0x1
0x3bf PUSH1 0xa0
0x3c1 PUSH1 0x2
0x3c3 EXP
0x3c4 SUB
0x3c5 SWAP1
0x3c6 SWAP2
0x3c7 AND
0x3c8 SWAP1
0x3c9 PUSH4 0xa9059cbb
0x3ce SWAP1
0x3cf CALLER
0x3d0 SWAP1
0x3d1 PUSH1 0xa
0x3d3 SWAP1
0x3d4 DUP6
0x3d5 MUL
0x3d6 PUSH2 0x224
0x3d9 JUMP
---
0x3b7: V344 = 0x12
0x3b9: V345 = S[0x12]
0x3ba: V346 = 0xf
0x3bc: V347 = S[0xf]
0x3bd: V348 = 0x1
0x3bf: V349 = 0xa0
0x3c1: V350 = 0x2
0x3c3: V351 = EXP 0x2 0xa0
0x3c4: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c7: V353 = AND V345 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V354 = 0xa9059cbb
0x3cf: V355 = CALLER
0x3d1: V356 = 0xa
0x3d5: V357 = MUL V153 V347
0x3d6: V358 = 0x224
0x3d9: JUMP 0x224
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0, V353, 0xa9059cbb, V355, 0xa, V357]
Exit stack: [V12, V153, V353, 0xa9059cbb, V355, 0xa, V357]

================================

Block 0x3da
[0x3da:0x419]
---
Predecessors: []
Successors: [0x268, 0x41a]
---
0x3da JUMPDEST
0x3db DIV
0x3dc PUSH1 0x40
0x3de MLOAD
0x3df PUSH1 0xe0
0x3e1 PUSH1 0x2
0x3e3 EXP
0x3e4 PUSH4 0xffffffff
0x3e9 DUP6
0x3ea AND
0x3eb MUL
0x3ec DUP2
0x3ed MSTORE
0x3ee PUSH1 0x1
0x3f0 PUSH1 0xa0
0x3f2 PUSH1 0x2
0x3f4 EXP
0x3f5 SUB
0x3f6 SWAP1
0x3f7 SWAP3
0x3f8 AND
0x3f9 PUSH1 0x4
0x3fb DUP4
0x3fc ADD
0x3fd MSTORE
0x3fe PUSH1 0x24
0x400 DUP3
0x401 ADD
0x402 MSTORE
0x403 PUSH1 0x44
0x405 ADD
0x406 PUSH1 0x0
0x408 PUSH1 0x40
0x40a MLOAD
0x40b DUP1
0x40c DUP4
0x40d SUB
0x40e DUP2
0x40f PUSH1 0x0
0x411 DUP8
0x412 DUP1
0x413 EXTCODESIZE
0x414 ISZERO
0x415 ISZERO
0x416 PUSH2 0x268
0x419 JUMPI
---
0x3da: JUMPDEST 
0x3db: V359 = DIV S0 S1
0x3dc: V360 = 0x40
0x3de: V361 = M[0x40]
0x3df: V362 = 0xe0
0x3e1: V363 = 0x2
0x3e3: V364 = EXP 0x2 0xe0
0x3e4: V365 = 0xffffffff
0x3ea: V366 = AND S3 0xffffffff
0x3eb: V367 = MUL V366 0x100000000000000000000000000000000000000000000000000000000
0x3ed: M[V361] = V367
0x3ee: V368 = 0x1
0x3f0: V369 = 0xa0
0x3f2: V370 = 0x2
0x3f4: V371 = EXP 0x2 0xa0
0x3f5: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f8: V373 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V374 = 0x4
0x3fc: V375 = ADD V361 0x4
0x3fd: M[V375] = V373
0x3fe: V376 = 0x24
0x401: V377 = ADD V361 0x24
0x402: M[V377] = V359
0x403: V378 = 0x44
0x405: V379 = ADD 0x44 V361
0x406: V380 = 0x0
0x408: V381 = 0x40
0x40a: V382 = M[0x40]
0x40d: V383 = SUB V379 V382
0x40f: V384 = 0x0
0x413: V385 = EXTCODESIZE S4
0x414: V386 = ISZERO V385
0x415: V387 = ISZERO V386
0x416: V388 = 0x268
0x419: JUMPI 0x268 V387
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V379, 0x0, V382, V383, V382, 0x0, S4]
Exit stack: [S4, S3, V379, 0x0, V382, V383, V382, 0x0, S4]

================================

Block 0x41a
[0x41a:0x42a]
---
Predecessors: [0x3da]
Successors: [0x279, 0x42b]
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
0x41e JUMPDEST
0x41f PUSH2 0x2c6
0x422 GAS
0x423 SUB
0x424 CALL
0x425 ISZERO
0x426 ISZERO
0x427 PUSH2 0x279
0x42a JUMPI
---
0x41a: V389 = 0x0
0x41d: REVERT 0x0 0x0
0x41e: JUMPDEST 
0x41f: V390 = 0x2c6
0x422: V391 = GAS
0x423: V392 = SUB V391 0x2c6
0x424: V393 = CALL V392 S0 S1 S2 S3 S4 S5
0x425: V394 = ISZERO V393
0x426: V395 = ISZERO V394
0x427: V396 = 0x279
0x42a: JUMPI 0x279 V395
---
Entry stack: [S8, S7, V379, 0x0, V382, V383, V382, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42b
[0x42b:0x436]
---
Predecessors: [0x41a]
Successors: [0x542]
---
0x42b PUSH1 0x0
0x42d DUP1
0x42e REVERT
0x42f JUMPDEST
0x430 POP
0x431 POP
0x432 POP
0x433 PUSH2 0x542
0x436 JUMP
---
0x42b: V397 = 0x0
0x42e: REVERT 0x0 0x0
0x42f: JUMPDEST 
0x433: V398 = 0x542
0x436: JUMP 0x542
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x437
[0x437:0x448]
---
Predecessors: [0x3a5]
Successors: [0x449, 0x4c9]
---
0x437 JUMPDEST
0x438 PUSH9 0x821ab0d4414980000
0x442 DUP2
0x443 LT
0x444 ISZERO
0x445 PUSH2 0x4c9
0x448 JUMPI
---
0x437: JUMPDEST 
0x438: V399 = 0x821ab0d4414980000
0x443: V400 = LT V153 0x821ab0d4414980000
0x444: V401 = ISZERO V400
0x445: V402 = 0x4c9
0x448: JUMPI 0x4c9 V401
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V153]

================================

Block 0x449
[0x449:0x46b]
---
Predecessors: [0x437]
Successors: [0x224]
---
0x449 PUSH1 0x12
0x44b SLOAD
0x44c PUSH1 0x10
0x44e SLOAD
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 SWAP1
0x458 SWAP2
0x459 AND
0x45a SWAP1
0x45b PUSH4 0xa9059cbb
0x460 SWAP1
0x461 CALLER
0x462 SWAP1
0x463 PUSH1 0xa
0x465 SWAP1
0x466 DUP6
0x467 MUL
0x468 PUSH2 0x224
0x46b JUMP
---
0x449: V403 = 0x12
0x44b: V404 = S[0x12]
0x44c: V405 = 0x10
0x44e: V406 = S[0x10]
0x44f: V407 = 0x1
0x451: V408 = 0xa0
0x453: V409 = 0x2
0x455: V410 = EXP 0x2 0xa0
0x456: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x459: V412 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V413 = 0xa9059cbb
0x461: V414 = CALLER
0x463: V415 = 0xa
0x467: V416 = MUL V153 V406
0x468: V417 = 0x224
0x46b: JUMP 0x224
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0, V412, 0xa9059cbb, V414, 0xa, V416]
Exit stack: [V12, V153, V412, 0xa9059cbb, V414, 0xa, V416]

================================

Block 0x46c
[0x46c:0x4ab]
---
Predecessors: []
Successors: [0x268, 0x4ac]
---
0x46c JUMPDEST
0x46d DIV
0x46e PUSH1 0x40
0x470 MLOAD
0x471 PUSH1 0xe0
0x473 PUSH1 0x2
0x475 EXP
0x476 PUSH4 0xffffffff
0x47b DUP6
0x47c AND
0x47d MUL
0x47e DUP2
0x47f MSTORE
0x480 PUSH1 0x1
0x482 PUSH1 0xa0
0x484 PUSH1 0x2
0x486 EXP
0x487 SUB
0x488 SWAP1
0x489 SWAP3
0x48a AND
0x48b PUSH1 0x4
0x48d DUP4
0x48e ADD
0x48f MSTORE
0x490 PUSH1 0x24
0x492 DUP3
0x493 ADD
0x494 MSTORE
0x495 PUSH1 0x44
0x497 ADD
0x498 PUSH1 0x0
0x49a PUSH1 0x40
0x49c MLOAD
0x49d DUP1
0x49e DUP4
0x49f SUB
0x4a0 DUP2
0x4a1 PUSH1 0x0
0x4a3 DUP8
0x4a4 DUP1
0x4a5 EXTCODESIZE
0x4a6 ISZERO
0x4a7 ISZERO
0x4a8 PUSH2 0x268
0x4ab JUMPI
---
0x46c: JUMPDEST 
0x46d: V418 = DIV S0 S1
0x46e: V419 = 0x40
0x470: V420 = M[0x40]
0x471: V421 = 0xe0
0x473: V422 = 0x2
0x475: V423 = EXP 0x2 0xe0
0x476: V424 = 0xffffffff
0x47c: V425 = AND S3 0xffffffff
0x47d: V426 = MUL V425 0x100000000000000000000000000000000000000000000000000000000
0x47f: M[V420] = V426
0x480: V427 = 0x1
0x482: V428 = 0xa0
0x484: V429 = 0x2
0x486: V430 = EXP 0x2 0xa0
0x487: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48a: V432 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x48b: V433 = 0x4
0x48e: V434 = ADD V420 0x4
0x48f: M[V434] = V432
0x490: V435 = 0x24
0x493: V436 = ADD V420 0x24
0x494: M[V436] = V418
0x495: V437 = 0x44
0x497: V438 = ADD 0x44 V420
0x498: V439 = 0x0
0x49a: V440 = 0x40
0x49c: V441 = M[0x40]
0x49f: V442 = SUB V438 V441
0x4a1: V443 = 0x0
0x4a5: V444 = EXTCODESIZE S4
0x4a6: V445 = ISZERO V444
0x4a7: V446 = ISZERO V445
0x4a8: V447 = 0x268
0x4ab: JUMPI 0x268 V446
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V438, 0x0, V441, V442, V441, 0x0, S4]
Exit stack: [S4, S3, V438, 0x0, V441, V442, V441, 0x0, S4]

================================

Block 0x4ac
[0x4ac:0x4bc]
---
Predecessors: [0x46c]
Successors: [0x279, 0x4bd]
---
0x4ac PUSH1 0x0
0x4ae DUP1
0x4af REVERT
0x4b0 JUMPDEST
0x4b1 PUSH2 0x2c6
0x4b4 GAS
0x4b5 SUB
0x4b6 CALL
0x4b7 ISZERO
0x4b8 ISZERO
0x4b9 PUSH2 0x279
0x4bc JUMPI
---
0x4ac: V448 = 0x0
0x4af: REVERT 0x0 0x0
0x4b0: JUMPDEST 
0x4b1: V449 = 0x2c6
0x4b4: V450 = GAS
0x4b5: V451 = SUB V450 0x2c6
0x4b6: V452 = CALL V451 S0 S1 S2 S3 S4 S5
0x4b7: V453 = ISZERO V452
0x4b8: V454 = ISZERO V453
0x4b9: V455 = 0x279
0x4bc: JUMPI 0x279 V454
---
Entry stack: [S8, S7, V438, 0x0, V441, V442, V441, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4bd
[0x4bd:0x4c8]
---
Predecessors: [0x4ac]
Successors: [0x542]
---
0x4bd PUSH1 0x0
0x4bf DUP1
0x4c0 REVERT
0x4c1 JUMPDEST
0x4c2 POP
0x4c3 POP
0x4c4 POP
0x4c5 PUSH2 0x542
0x4c8 JUMP
---
0x4bd: V456 = 0x0
0x4c0: REVERT 0x0 0x0
0x4c1: JUMPDEST 
0x4c5: V457 = 0x542
0x4c8: JUMP 0x542
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4c9
[0x4c9:0x4e8]
---
Predecessors: [0x437]
Successors: [0x4e9]
---
0x4c9 JUMPDEST
0x4ca PUSH1 0x12
0x4cc SLOAD
0x4cd PUSH1 0x11
0x4cf SLOAD
0x4d0 PUSH1 0x1
0x4d2 PUSH1 0xa0
0x4d4 PUSH1 0x2
0x4d6 EXP
0x4d7 SUB
0x4d8 SWAP1
0x4d9 SWAP2
0x4da AND
0x4db SWAP1
0x4dc PUSH4 0xa9059cbb
0x4e1 SWAP1
0x4e2 CALLER
0x4e3 SWAP1
0x4e4 PUSH1 0xa
0x4e6 SWAP1
0x4e7 DUP6
0x4e8 MUL
---
0x4c9: JUMPDEST 
0x4ca: V458 = 0x12
0x4cc: V459 = S[0x12]
0x4cd: V460 = 0x11
0x4cf: V461 = S[0x11]
0x4d0: V462 = 0x1
0x4d2: V463 = 0xa0
0x4d4: V464 = 0x2
0x4d6: V465 = EXP 0x2 0xa0
0x4d7: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4da: V467 = AND V459 0xffffffffffffffffffffffffffffffffffffffff
0x4dc: V468 = 0xa9059cbb
0x4e2: V469 = CALLER
0x4e4: V470 = 0xa
0x4e8: V471 = MUL V153 V461
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0, V467, 0xa9059cbb, V469, 0xa, V471]
Exit stack: [V12, V153, V467, 0xa9059cbb, V469, 0xa, V471]

================================

Block 0x4e9
[0x4e9:0x528]
---
Predecessors: [0x4c9]
Successors: [0x529, 0x52d]
---
0x4e9 JUMPDEST
0x4ea DIV
0x4eb PUSH1 0x40
0x4ed MLOAD
0x4ee PUSH1 0xe0
0x4f0 PUSH1 0x2
0x4f2 EXP
0x4f3 PUSH4 0xffffffff
0x4f8 DUP6
0x4f9 AND
0x4fa MUL
0x4fb DUP2
0x4fc MSTORE
0x4fd PUSH1 0x1
0x4ff PUSH1 0xa0
0x501 PUSH1 0x2
0x503 EXP
0x504 SUB
0x505 SWAP1
0x506 SWAP3
0x507 AND
0x508 PUSH1 0x4
0x50a DUP4
0x50b ADD
0x50c MSTORE
0x50d PUSH1 0x24
0x50f DUP3
0x510 ADD
0x511 MSTORE
0x512 PUSH1 0x44
0x514 ADD
0x515 PUSH1 0x0
0x517 PUSH1 0x40
0x519 MLOAD
0x51a DUP1
0x51b DUP4
0x51c SUB
0x51d DUP2
0x51e PUSH1 0x0
0x520 DUP8
0x521 DUP1
0x522 EXTCODESIZE
0x523 ISZERO
0x524 ISZERO
0x525 PUSH2 0x52d
0x528 JUMPI
---
0x4e9: JUMPDEST 
0x4ea: V472 = DIV V471 0xa
0x4eb: V473 = 0x40
0x4ed: V474 = M[0x40]
0x4ee: V475 = 0xe0
0x4f0: V476 = 0x2
0x4f2: V477 = EXP 0x2 0xe0
0x4f3: V478 = 0xffffffff
0x4f9: V479 = AND 0xa9059cbb 0xffffffff
0x4fa: V480 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x4fc: M[V474] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4fd: V481 = 0x1
0x4ff: V482 = 0xa0
0x501: V483 = 0x2
0x503: V484 = EXP 0x2 0xa0
0x504: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x507: V486 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x508: V487 = 0x4
0x50b: V488 = ADD V474 0x4
0x50c: M[V488] = V486
0x50d: V489 = 0x24
0x510: V490 = ADD V474 0x24
0x511: M[V490] = V472
0x512: V491 = 0x44
0x514: V492 = ADD 0x44 V474
0x515: V493 = 0x0
0x517: V494 = 0x40
0x519: V495 = M[0x40]
0x51c: V496 = SUB V492 V495
0x51e: V497 = 0x0
0x522: V498 = EXTCODESIZE V467
0x523: V499 = ISZERO V498
0x524: V500 = ISZERO V499
0x525: V501 = 0x52d
0x528: JUMPI 0x52d V500
---
Entry stack: [V12, V153, V467, 0xa9059cbb, V469, 0xa, V471]
Stack pops: 5
Stack additions: [S4, S3, V492, 0x0, V495, V496, V495, 0x0, S4]
Exit stack: [V12, V153, V467, 0xa9059cbb, V492, 0x0, V495, V496, V495, 0x0, V467]

================================

Block 0x529
[0x529:0x52c]
---
Predecessors: [0x4e9]
Successors: []
---
0x529 PUSH1 0x0
0x52b DUP1
0x52c REVERT
---
0x529: V502 = 0x0
0x52c: REVERT 0x0 0x0
---
Entry stack: [V12, V153, V467, 0xa9059cbb, V492, 0x0, V495, V496, V495, 0x0, V467]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153, V467, 0xa9059cbb, V492, 0x0, V495, V496, V495, 0x0, V467]

================================

Block 0x52d
[0x52d:0x539]
---
Predecessors: [0x4e9]
Successors: [0x53a, 0x53e]
---
0x52d JUMPDEST
0x52e PUSH2 0x2c6
0x531 GAS
0x532 SUB
0x533 CALL
0x534 ISZERO
0x535 ISZERO
0x536 PUSH2 0x53e
0x539 JUMPI
---
0x52d: JUMPDEST 
0x52e: V503 = 0x2c6
0x531: V504 = GAS
0x532: V505 = SUB V504 0x2c6
0x533: V506 = CALL V505 V467 0x0 V495 V496 V495 0x0
0x534: V507 = ISZERO V506
0x535: V508 = ISZERO V507
0x536: V509 = 0x53e
0x539: JUMPI 0x53e V508
---
Entry stack: [V12, V153, V467, 0xa9059cbb, V492, 0x0, V495, V496, V495, 0x0, V467]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V153, V467, 0xa9059cbb, V492]

================================

Block 0x53a
[0x53a:0x53d]
---
Predecessors: [0x52d]
Successors: []
---
0x53a PUSH1 0x0
0x53c DUP1
0x53d REVERT
---
0x53a: V510 = 0x0
0x53d: REVERT 0x0 0x0
---
Entry stack: [V12, V153, V467, 0xa9059cbb, V492]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153, V467, 0xa9059cbb, V492]

================================

Block 0x53e
[0x53e:0x541]
---
Predecessors: [0x52d]
Successors: [0x542]
---
0x53e JUMPDEST
0x53f POP
0x540 POP
0x541 POP
---
0x53e: JUMPDEST 
---
Entry stack: [V12, V153, V467, 0xa9059cbb, V492]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x542
[0x542:0x542]
---
Predecessors: [0x279, 0x307, 0x399, 0x42b, 0x4bd, 0x53e]
Successors: [0x543]
---
0x542 JUMPDEST
---
0x542: JUMPDEST 
---
Entry stack: [V12, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x543
[0x543:0x543]
---
Predecessors: [0x542]
Successors: [0x544]
---
0x543 JUMPDEST
---
0x543: JUMPDEST 
---
Entry stack: [V12, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x544
[0x544:0x544]
---
Predecessors: [0x543]
Successors: [0x545]
---
0x544 JUMPDEST
---
0x544: JUMPDEST 
---
Entry stack: [V12, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x545
[0x545:0x545]
---
Predecessors: [0x544]
Successors: [0x546]
---
0x545 JUMPDEST
---
0x545: JUMPDEST 
---
Entry stack: [V12, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x546
[0x546:0x58c]
---
Predecessors: [0x545]
Successors: [0x74d]
---
0x546 JUMPDEST
0x547 PUSH1 0x0
0x549 DUP1
0x54a MLOAD
0x54b PUSH1 0x20
0x54d PUSH2 0xf3e
0x550 DUP4
0x551 CODECOPY
0x552 DUP2
0x553 MLOAD
0x554 SWAP2
0x555 MSTORE
0x556 CALLER
0x557 DUP3
0x558 PUSH1 0x1
0x55a PUSH1 0x40
0x55c MLOAD
0x55d PUSH1 0x1
0x55f PUSH1 0xa0
0x561 PUSH1 0x2
0x563 EXP
0x564 SUB
0x565 SWAP1
0x566 SWAP4
0x567 AND
0x568 DUP4
0x569 MSTORE
0x56a PUSH1 0x20
0x56c DUP4
0x56d ADD
0x56e SWAP2
0x56f SWAP1
0x570 SWAP2
0x571 MSTORE
0x572 ISZERO
0x573 ISZERO
0x574 PUSH1 0x40
0x576 DUP1
0x577 DUP4
0x578 ADD
0x579 SWAP2
0x57a SWAP1
0x57b SWAP2
0x57c MSTORE
0x57d PUSH1 0x60
0x57f SWAP1
0x580 SWAP2
0x581 ADD
0x582 SWAP1
0x583 MLOAD
0x584 DUP1
0x585 SWAP2
0x586 SUB
0x587 SWAP1
0x588 LOG1
0x589 PUSH2 0x74d
0x58c JUMP
---
0x546: JUMPDEST 
0x547: V511 = 0x0
0x54a: V512 = M[0x0]
0x54b: V513 = 0x20
0x54d: V514 = 0xf3e
0x551: CODECOPY 0x0 0xf3e 0x20
0x553: V515 = M[0x0]
0x555: M[0x0] = V512
0x556: V516 = CALLER
0x558: V517 = 0x1
0x55a: V518 = 0x40
0x55c: V519 = M[0x40]
0x55d: V520 = 0x1
0x55f: V521 = 0xa0
0x561: V522 = 0x2
0x563: V523 = EXP 0x2 0xa0
0x564: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x567: V525 = AND V516 0xffffffffffffffffffffffffffffffffffffffff
0x569: M[V519] = V525
0x56a: V526 = 0x20
0x56d: V527 = ADD V519 0x20
0x571: M[V527] = V153
0x572: V528 = ISZERO 0x1
0x573: V529 = ISZERO 0x0
0x574: V530 = 0x40
0x578: V531 = ADD V519 0x40
0x57c: M[V531] = 0x1
0x57d: V532 = 0x60
0x581: V533 = ADD V519 0x60
0x583: V534 = M[0x40]
0x586: V535 = SUB V533 V534
0x588: LOG V534 V535 V515
0x589: V536 = 0x74d
0x58c: JUMP 0x74d
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V153]

================================

Block 0x58d
[0x58d:0x599]
---
Predecessors: [0x1bf]
Successors: [0x59a, 0x611]
---
0x58d JUMPDEST
0x58e PUSH1 0x5
0x590 SLOAD
0x591 PUSH1 0x8
0x593 SLOAD
0x594 LT
0x595 ISZERO
0x596 PUSH2 0x611
0x599 JUMPI
---
0x58d: JUMPDEST 
0x58e: V537 = 0x5
0x590: V538 = S[0x5]
0x591: V539 = 0x8
0x593: V540 = S[0x8]
0x594: V541 = LT V540 V538
0x595: V542 = ISZERO V541
0x596: V543 = 0x611
0x599: JUMPI 0x611 V542
---
Entry stack: [V12, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x59a
[0x59a:0x5f3]
---
Predecessors: [0x58d]
Successors: [0x5f4, 0x5f8]
---
0x59a PUSH1 0x12
0x59c SLOAD
0x59d PUSH1 0x9
0x59f SLOAD
0x5a0 PUSH1 0x1
0x5a2 PUSH1 0xa0
0x5a4 PUSH1 0x2
0x5a6 EXP
0x5a7 SUB
0x5a8 SWAP1
0x5a9 SWAP2
0x5aa AND
0x5ab SWAP1
0x5ac PUSH4 0xa9059cbb
0x5b1 SWAP1
0x5b2 CALLER
0x5b3 SWAP1
0x5b4 DUP5
0x5b5 MUL
0x5b6 PUSH1 0x40
0x5b8 MLOAD
0x5b9 PUSH1 0xe0
0x5bb PUSH1 0x2
0x5bd EXP
0x5be PUSH4 0xffffffff
0x5c3 DUP6
0x5c4 AND
0x5c5 MUL
0x5c6 DUP2
0x5c7 MSTORE
0x5c8 PUSH1 0x1
0x5ca PUSH1 0xa0
0x5cc PUSH1 0x2
0x5ce EXP
0x5cf SUB
0x5d0 SWAP1
0x5d1 SWAP3
0x5d2 AND
0x5d3 PUSH1 0x4
0x5d5 DUP4
0x5d6 ADD
0x5d7 MSTORE
0x5d8 PUSH1 0x24
0x5da DUP3
0x5db ADD
0x5dc MSTORE
0x5dd PUSH1 0x44
0x5df ADD
0x5e0 PUSH1 0x0
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 DUP1
0x5e6 DUP4
0x5e7 SUB
0x5e8 DUP2
0x5e9 PUSH1 0x0
0x5eb DUP8
0x5ec DUP1
0x5ed EXTCODESIZE
0x5ee ISZERO
0x5ef ISZERO
0x5f0 PUSH2 0x5f8
0x5f3 JUMPI
---
0x59a: V544 = 0x12
0x59c: V545 = S[0x12]
0x59d: V546 = 0x9
0x59f: V547 = S[0x9]
0x5a0: V548 = 0x1
0x5a2: V549 = 0xa0
0x5a4: V550 = 0x2
0x5a6: V551 = EXP 0x2 0xa0
0x5a7: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5aa: V553 = AND V545 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V554 = 0xa9059cbb
0x5b2: V555 = CALLER
0x5b5: V556 = MUL V153 V547
0x5b6: V557 = 0x40
0x5b8: V558 = M[0x40]
0x5b9: V559 = 0xe0
0x5bb: V560 = 0x2
0x5bd: V561 = EXP 0x2 0xe0
0x5be: V562 = 0xffffffff
0x5c4: V563 = AND 0xa9059cbb 0xffffffff
0x5c5: V564 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5c7: M[V558] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5c8: V565 = 0x1
0x5ca: V566 = 0xa0
0x5cc: V567 = 0x2
0x5ce: V568 = EXP 0x2 0xa0
0x5cf: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d2: V570 = AND V555 0xffffffffffffffffffffffffffffffffffffffff
0x5d3: V571 = 0x4
0x5d6: V572 = ADD V558 0x4
0x5d7: M[V572] = V570
0x5d8: V573 = 0x24
0x5db: V574 = ADD V558 0x24
0x5dc: M[V574] = V556
0x5dd: V575 = 0x44
0x5df: V576 = ADD 0x44 V558
0x5e0: V577 = 0x0
0x5e2: V578 = 0x40
0x5e4: V579 = M[0x40]
0x5e7: V580 = SUB V576 V579
0x5e9: V581 = 0x0
0x5ed: V582 = EXTCODESIZE V553
0x5ee: V583 = ISZERO V582
0x5ef: V584 = ISZERO V583
0x5f0: V585 = 0x5f8
0x5f3: JUMPI 0x5f8 V584
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0, V553, 0xa9059cbb, V576, 0x0, V579, V580, V579, 0x0, V553]
Exit stack: [V12, V153, V553, 0xa9059cbb, V576, 0x0, V579, V580, V579, 0x0, V553]

================================

Block 0x5f4
[0x5f4:0x5f7]
---
Predecessors: [0x59a]
Successors: []
---
0x5f4 PUSH1 0x0
0x5f6 DUP1
0x5f7 REVERT
---
0x5f4: V586 = 0x0
0x5f7: REVERT 0x0 0x0
---
Entry stack: [V12, V153, V553, 0xa9059cbb, V576, 0x0, V579, V580, V579, 0x0, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153, V553, 0xa9059cbb, V576, 0x0, V579, V580, V579, 0x0, V553]

================================

Block 0x5f8
[0x5f8:0x604]
---
Predecessors: [0x59a, 0x61e]
Successors: [0x605, 0x609]
---
0x5f8 JUMPDEST
0x5f9 PUSH2 0x2c6
0x5fc GAS
0x5fd SUB
0x5fe CALL
0x5ff ISZERO
0x600 ISZERO
0x601 PUSH2 0x609
0x604 JUMPI
---
0x5f8: JUMPDEST 
0x5f9: V587 = 0x2c6
0x5fc: V588 = GAS
0x5fd: V589 = SUB V588 0x2c6
0x5fe: V590 = CALL V589 S0 0x0 S2 S3 S4 0x0
0x5ff: V591 = ISZERO V590
0x600: V592 = ISZERO V591
0x601: V593 = 0x609
0x604: JUMPI 0x609 V592
---
Entry stack: [V12, V153, S8, 0xa9059cbb, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V153, S8, 0xa9059cbb, S6]

================================

Block 0x605
[0x605:0x608]
---
Predecessors: [0x5f8]
Successors: []
---
0x605 PUSH1 0x0
0x607 DUP1
0x608 REVERT
---
0x605: V594 = 0x0
0x608: REVERT 0x0 0x0
---
Entry stack: [V12, V153, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153, S2, 0xa9059cbb, S0]

================================

Block 0x609
[0x609:0x610]
---
Predecessors: [0x5f8, 0x67c]
Successors: [0x709]
---
0x609 JUMPDEST
0x60a POP
0x60b POP
0x60c POP
0x60d PUSH2 0x709
0x610 JUMP
---
0x609: JUMPDEST 
0x60d: V595 = 0x709
0x610: JUMP 0x709
---
Entry stack: [V12, V153, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x611
[0x611:0x61d]
---
Predecessors: [0x58d]
Successors: [0x61e, 0x695]
---
0x611 JUMPDEST
0x612 PUSH1 0x6
0x614 SLOAD
0x615 PUSH1 0x8
0x617 SLOAD
0x618 LT
0x619 ISZERO
0x61a PUSH2 0x695
0x61d JUMPI
---
0x611: JUMPDEST 
0x612: V596 = 0x6
0x614: V597 = S[0x6]
0x615: V598 = 0x8
0x617: V599 = S[0x8]
0x618: V600 = LT V599 V597
0x619: V601 = ISZERO V600
0x61a: V602 = 0x695
0x61d: JUMPI 0x695 V601
---
Entry stack: [V12, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x61e
[0x61e:0x677]
---
Predecessors: [0x611]
Successors: [0x5f8, 0x678]
---
0x61e PUSH1 0x12
0x620 SLOAD
0x621 PUSH1 0xa
0x623 SLOAD
0x624 PUSH1 0x1
0x626 PUSH1 0xa0
0x628 PUSH1 0x2
0x62a EXP
0x62b SUB
0x62c SWAP1
0x62d SWAP2
0x62e AND
0x62f SWAP1
0x630 PUSH4 0xa9059cbb
0x635 SWAP1
0x636 CALLER
0x637 SWAP1
0x638 DUP5
0x639 MUL
0x63a PUSH1 0x40
0x63c MLOAD
0x63d PUSH1 0xe0
0x63f PUSH1 0x2
0x641 EXP
0x642 PUSH4 0xffffffff
0x647 DUP6
0x648 AND
0x649 MUL
0x64a DUP2
0x64b MSTORE
0x64c PUSH1 0x1
0x64e PUSH1 0xa0
0x650 PUSH1 0x2
0x652 EXP
0x653 SUB
0x654 SWAP1
0x655 SWAP3
0x656 AND
0x657 PUSH1 0x4
0x659 DUP4
0x65a ADD
0x65b MSTORE
0x65c PUSH1 0x24
0x65e DUP3
0x65f ADD
0x660 MSTORE
0x661 PUSH1 0x44
0x663 ADD
0x664 PUSH1 0x0
0x666 PUSH1 0x40
0x668 MLOAD
0x669 DUP1
0x66a DUP4
0x66b SUB
0x66c DUP2
0x66d PUSH1 0x0
0x66f DUP8
0x670 DUP1
0x671 EXTCODESIZE
0x672 ISZERO
0x673 ISZERO
0x674 PUSH2 0x5f8
0x677 JUMPI
---
0x61e: V603 = 0x12
0x620: V604 = S[0x12]
0x621: V605 = 0xa
0x623: V606 = S[0xa]
0x624: V607 = 0x1
0x626: V608 = 0xa0
0x628: V609 = 0x2
0x62a: V610 = EXP 0x2 0xa0
0x62b: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62e: V612 = AND V604 0xffffffffffffffffffffffffffffffffffffffff
0x630: V613 = 0xa9059cbb
0x636: V614 = CALLER
0x639: V615 = MUL V153 V606
0x63a: V616 = 0x40
0x63c: V617 = M[0x40]
0x63d: V618 = 0xe0
0x63f: V619 = 0x2
0x641: V620 = EXP 0x2 0xe0
0x642: V621 = 0xffffffff
0x648: V622 = AND 0xa9059cbb 0xffffffff
0x649: V623 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x64b: M[V617] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x64c: V624 = 0x1
0x64e: V625 = 0xa0
0x650: V626 = 0x2
0x652: V627 = EXP 0x2 0xa0
0x653: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x656: V629 = AND V614 0xffffffffffffffffffffffffffffffffffffffff
0x657: V630 = 0x4
0x65a: V631 = ADD V617 0x4
0x65b: M[V631] = V629
0x65c: V632 = 0x24
0x65f: V633 = ADD V617 0x24
0x660: M[V633] = V615
0x661: V634 = 0x44
0x663: V635 = ADD 0x44 V617
0x664: V636 = 0x0
0x666: V637 = 0x40
0x668: V638 = M[0x40]
0x66b: V639 = SUB V635 V638
0x66d: V640 = 0x0
0x671: V641 = EXTCODESIZE V612
0x672: V642 = ISZERO V641
0x673: V643 = ISZERO V642
0x674: V644 = 0x5f8
0x677: JUMPI 0x5f8 V643
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0, V612, 0xa9059cbb, V635, 0x0, V638, V639, V638, 0x0, V612]
Exit stack: [V12, V153, V612, 0xa9059cbb, V635, 0x0, V638, V639, V638, 0x0, V612]

================================

Block 0x678
[0x678:0x67b]
---
Predecessors: [0x61e]
Successors: []
---
0x678 PUSH1 0x0
0x67a DUP1
0x67b REVERT
---
0x678: V645 = 0x0
0x67b: REVERT 0x0 0x0
---
Entry stack: [V12, V153, V612, 0xa9059cbb, V635, 0x0, V638, V639, V638, 0x0, V612]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153, V612, 0xa9059cbb, V635, 0x0, V638, V639, V638, 0x0, V612]

================================

Block 0x67c
[0x67c:0x688]
---
Predecessors: []
Successors: [0x609, 0x689]
---
0x67c JUMPDEST
0x67d PUSH2 0x2c6
0x680 GAS
0x681 SUB
0x682 CALL
0x683 ISZERO
0x684 ISZERO
0x685 PUSH2 0x609
0x688 JUMPI
---
0x67c: JUMPDEST 
0x67d: V646 = 0x2c6
0x680: V647 = GAS
0x681: V648 = SUB V647 0x2c6
0x682: V649 = CALL V648 S0 S1 S2 S3 S4 S5
0x683: V650 = ISZERO V649
0x684: V651 = ISZERO V650
0x685: V652 = 0x609
0x688: JUMPI 0x609 V651
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x689
[0x689:0x694]
---
Predecessors: [0x67c]
Successors: [0x709]
---
0x689 PUSH1 0x0
0x68b DUP1
0x68c REVERT
0x68d JUMPDEST
0x68e POP
0x68f POP
0x690 POP
0x691 PUSH2 0x709
0x694 JUMP
---
0x689: V653 = 0x0
0x68c: REVERT 0x0 0x0
0x68d: JUMPDEST 
0x691: V654 = 0x709
0x694: JUMP 0x709
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x695
[0x695:0x6ef]
---
Predecessors: [0x611]
Successors: [0x6f0, 0x6f4]
---
0x695 JUMPDEST
0x696 PUSH1 0x12
0x698 SLOAD
0x699 PUSH1 0xb
0x69b SLOAD
0x69c PUSH1 0x1
0x69e PUSH1 0xa0
0x6a0 PUSH1 0x2
0x6a2 EXP
0x6a3 SUB
0x6a4 SWAP1
0x6a5 SWAP2
0x6a6 AND
0x6a7 SWAP1
0x6a8 PUSH4 0xa9059cbb
0x6ad SWAP1
0x6ae CALLER
0x6af SWAP1
0x6b0 DUP5
0x6b1 MUL
0x6b2 PUSH1 0x40
0x6b4 MLOAD
0x6b5 PUSH1 0xe0
0x6b7 PUSH1 0x2
0x6b9 EXP
0x6ba PUSH4 0xffffffff
0x6bf DUP6
0x6c0 AND
0x6c1 MUL
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x1
0x6c6 PUSH1 0xa0
0x6c8 PUSH1 0x2
0x6ca EXP
0x6cb SUB
0x6cc SWAP1
0x6cd SWAP3
0x6ce AND
0x6cf PUSH1 0x4
0x6d1 DUP4
0x6d2 ADD
0x6d3 MSTORE
0x6d4 PUSH1 0x24
0x6d6 DUP3
0x6d7 ADD
0x6d8 MSTORE
0x6d9 PUSH1 0x44
0x6db ADD
0x6dc PUSH1 0x0
0x6de PUSH1 0x40
0x6e0 MLOAD
0x6e1 DUP1
0x6e2 DUP4
0x6e3 SUB
0x6e4 DUP2
0x6e5 PUSH1 0x0
0x6e7 DUP8
0x6e8 DUP1
0x6e9 EXTCODESIZE
0x6ea ISZERO
0x6eb ISZERO
0x6ec PUSH2 0x6f4
0x6ef JUMPI
---
0x695: JUMPDEST 
0x696: V655 = 0x12
0x698: V656 = S[0x12]
0x699: V657 = 0xb
0x69b: V658 = S[0xb]
0x69c: V659 = 0x1
0x69e: V660 = 0xa0
0x6a0: V661 = 0x2
0x6a2: V662 = EXP 0x2 0xa0
0x6a3: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a6: V664 = AND V656 0xffffffffffffffffffffffffffffffffffffffff
0x6a8: V665 = 0xa9059cbb
0x6ae: V666 = CALLER
0x6b1: V667 = MUL V153 V658
0x6b2: V668 = 0x40
0x6b4: V669 = M[0x40]
0x6b5: V670 = 0xe0
0x6b7: V671 = 0x2
0x6b9: V672 = EXP 0x2 0xe0
0x6ba: V673 = 0xffffffff
0x6c0: V674 = AND 0xa9059cbb 0xffffffff
0x6c1: V675 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6c3: M[V669] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6c4: V676 = 0x1
0x6c6: V677 = 0xa0
0x6c8: V678 = 0x2
0x6ca: V679 = EXP 0x2 0xa0
0x6cb: V680 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ce: V681 = AND V666 0xffffffffffffffffffffffffffffffffffffffff
0x6cf: V682 = 0x4
0x6d2: V683 = ADD V669 0x4
0x6d3: M[V683] = V681
0x6d4: V684 = 0x24
0x6d7: V685 = ADD V669 0x24
0x6d8: M[V685] = V667
0x6d9: V686 = 0x44
0x6db: V687 = ADD 0x44 V669
0x6dc: V688 = 0x0
0x6de: V689 = 0x40
0x6e0: V690 = M[0x40]
0x6e3: V691 = SUB V687 V690
0x6e5: V692 = 0x0
0x6e9: V693 = EXTCODESIZE V664
0x6ea: V694 = ISZERO V693
0x6eb: V695 = ISZERO V694
0x6ec: V696 = 0x6f4
0x6ef: JUMPI 0x6f4 V695
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0, V664, 0xa9059cbb, V687, 0x0, V690, V691, V690, 0x0, V664]
Exit stack: [V12, V153, V664, 0xa9059cbb, V687, 0x0, V690, V691, V690, 0x0, V664]

================================

Block 0x6f0
[0x6f0:0x6f3]
---
Predecessors: [0x695]
Successors: []
---
0x6f0 PUSH1 0x0
0x6f2 DUP1
0x6f3 REVERT
---
0x6f0: V697 = 0x0
0x6f3: REVERT 0x0 0x0
---
Entry stack: [V12, V153, V664, 0xa9059cbb, V687, 0x0, V690, V691, V690, 0x0, V664]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153, V664, 0xa9059cbb, V687, 0x0, V690, V691, V690, 0x0, V664]

================================

Block 0x6f4
[0x6f4:0x700]
---
Predecessors: [0x695]
Successors: [0x701, 0x705]
---
0x6f4 JUMPDEST
0x6f5 PUSH2 0x2c6
0x6f8 GAS
0x6f9 SUB
0x6fa CALL
0x6fb ISZERO
0x6fc ISZERO
0x6fd PUSH2 0x705
0x700 JUMPI
---
0x6f4: JUMPDEST 
0x6f5: V698 = 0x2c6
0x6f8: V699 = GAS
0x6f9: V700 = SUB V699 0x2c6
0x6fa: V701 = CALL V700 V664 0x0 V690 V691 V690 0x0
0x6fb: V702 = ISZERO V701
0x6fc: V703 = ISZERO V702
0x6fd: V704 = 0x705
0x700: JUMPI 0x705 V703
---
Entry stack: [V12, V153, V664, 0xa9059cbb, V687, 0x0, V690, V691, V690, 0x0, V664]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V153, V664, 0xa9059cbb, V687]

================================

Block 0x701
[0x701:0x704]
---
Predecessors: [0x6f4]
Successors: []
---
0x701 PUSH1 0x0
0x703 DUP1
0x704 REVERT
---
0x701: V705 = 0x0
0x704: REVERT 0x0 0x0
---
Entry stack: [V12, V153, V664, 0xa9059cbb, V687]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153, V664, 0xa9059cbb, V687]

================================

Block 0x705
[0x705:0x708]
---
Predecessors: [0x6f4]
Successors: [0x709]
---
0x705 JUMPDEST
0x706 POP
0x707 POP
0x708 POP
---
0x705: JUMPDEST 
---
Entry stack: [V12, V153, V664, 0xa9059cbb, V687]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x709
[0x709:0x709]
---
Predecessors: [0x609, 0x689, 0x705]
Successors: [0x70a]
---
0x709 JUMPDEST
---
0x709: JUMPDEST 
---
Entry stack: [V12, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x70a
[0x70a:0x74c]
---
Predecessors: [0x709]
Successors: [0x74d]
---
0x70a JUMPDEST
0x70b PUSH1 0x0
0x70d DUP1
0x70e MLOAD
0x70f PUSH1 0x20
0x711 PUSH2 0xf3e
0x714 DUP4
0x715 CODECOPY
0x716 DUP2
0x717 MLOAD
0x718 SWAP2
0x719 MSTORE
0x71a CALLER
0x71b DUP3
0x71c PUSH1 0x1
0x71e PUSH1 0x40
0x720 MLOAD
0x721 PUSH1 0x1
0x723 PUSH1 0xa0
0x725 PUSH1 0x2
0x727 EXP
0x728 SUB
0x729 SWAP1
0x72a SWAP4
0x72b AND
0x72c DUP4
0x72d MSTORE
0x72e PUSH1 0x20
0x730 DUP4
0x731 ADD
0x732 SWAP2
0x733 SWAP1
0x734 SWAP2
0x735 MSTORE
0x736 ISZERO
0x737 ISZERO
0x738 PUSH1 0x40
0x73a DUP1
0x73b DUP4
0x73c ADD
0x73d SWAP2
0x73e SWAP1
0x73f SWAP2
0x740 MSTORE
0x741 PUSH1 0x60
0x743 SWAP1
0x744 SWAP2
0x745 ADD
0x746 SWAP1
0x747 MLOAD
0x748 DUP1
0x749 SWAP2
0x74a SUB
0x74b SWAP1
0x74c LOG1
---
0x70a: JUMPDEST 
0x70b: V706 = 0x0
0x70e: V707 = M[0x0]
0x70f: V708 = 0x20
0x711: V709 = 0xf3e
0x715: CODECOPY 0x0 0xf3e 0x20
0x717: V710 = M[0x0]
0x719: M[0x0] = V707
0x71a: V711 = CALLER
0x71c: V712 = 0x1
0x71e: V713 = 0x40
0x720: V714 = M[0x40]
0x721: V715 = 0x1
0x723: V716 = 0xa0
0x725: V717 = 0x2
0x727: V718 = EXP 0x2 0xa0
0x728: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72b: V720 = AND V711 0xffffffffffffffffffffffffffffffffffffffff
0x72d: M[V714] = V720
0x72e: V721 = 0x20
0x731: V722 = ADD V714 0x20
0x735: M[V722] = V153
0x736: V723 = ISZERO 0x1
0x737: V724 = ISZERO 0x0
0x738: V725 = 0x40
0x73c: V726 = ADD V714 0x40
0x740: M[V726] = 0x1
0x741: V727 = 0x60
0x745: V728 = ADD V714 0x60
0x747: V729 = M[0x40]
0x74a: V730 = SUB V728 V729
0x74c: LOG V729 V730 V710
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V153]

================================

Block 0x74d
[0x74d:0x74d]
---
Predecessors: [0x546, 0x70a]
Successors: [0x74e]
---
0x74d JUMPDEST
---
0x74d: JUMPDEST 
---
Entry stack: [V12, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V153]

================================

Block 0x74e
[0x74e:0x750]
---
Predecessors: [0x74d]
Successors: []
---
0x74e JUMPDEST
0x74f POP
0x750 STOP
---
0x74e: JUMPDEST 
0x750: STOP 
---
Entry stack: [V12, V153]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x751
[0x751:0x757]
---
Predecessors: [0xb]
Successors: [0x758, 0x75c]
---
0x751 JUMPDEST
0x752 CALLVALUE
0x753 ISZERO
0x754 PUSH2 0x75c
0x757 JUMPI
---
0x751: JUMPDEST 
0x752: V731 = CALLVALUE
0x753: V732 = ISZERO V731
0x754: V733 = 0x75c
0x757: JUMPI 0x75c V732
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x758
[0x758:0x75b]
---
Predecessors: [0x751]
Successors: []
---
0x758 PUSH1 0x0
0x75a DUP1
0x75b REVERT
---
0x758: V734 = 0x0
0x75b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75c
[0x75c:0x763]
---
Predecessors: [0x751]
Successors: [0xb6a]
---
0x75c JUMPDEST
0x75d PUSH2 0x764
0x760 PUSH2 0xb6a
0x763 JUMP
---
0x75c: JUMPDEST 
0x75d: V735 = 0x764
0x760: V736 = 0xb6a
0x763: JUMP 0xb6a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x764]
Exit stack: [V12, 0x764]

================================

Block 0x764
[0x764:0x765]
---
Predecessors: [0xbb3, 0xc49, 0xc9d, 0xd2d, 0xd57, 0xdac, 0xf3a]
Successors: []
---
0x764 JUMPDEST
0x765 STOP
---
0x764: JUMPDEST 
0x765: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x766
[0x766:0x76c]
---
Predecessors: [0x25]
Successors: [0x76d, 0x771]
---
0x766 JUMPDEST
0x767 CALLVALUE
0x768 ISZERO
0x769 PUSH2 0x771
0x76c JUMPI
---
0x766: JUMPDEST 
0x767: V737 = CALLVALUE
0x768: V738 = ISZERO V737
0x769: V739 = 0x771
0x76c: JUMPI 0x771 V738
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76d
[0x76d:0x770]
---
Predecessors: [0x766]
Successors: []
---
0x76d PUSH1 0x0
0x76f DUP1
0x770 REVERT
---
0x76d: V740 = 0x0
0x770: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x771
[0x771:0x778]
---
Predecessors: [0x766]
Successors: [0xbb5]
---
0x771 JUMPDEST
0x772 PUSH2 0x779
0x775 PUSH2 0xbb5
0x778 JUMP
---
0x771: JUMPDEST 
0x772: V741 = 0x779
0x775: V742 = 0xbb5
0x778: JUMP 0xbb5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x779
[0x779:0x78a]
---
Predecessors: [0xbb5, 0xc4c, 0xc52, 0xc58, 0xc6d, 0xc73, 0xccc, 0xcde, 0xce4, 0xcea, 0xcf0, 0xcf6, 0xcfc, 0xd02, 0xd59, 0xd5f, 0xd65]
Successors: []
---
0x779 JUMPDEST
0x77a PUSH1 0x40
0x77c MLOAD
0x77d SWAP1
0x77e DUP2
0x77f MSTORE
0x780 PUSH1 0x20
0x782 ADD
0x783 PUSH1 0x40
0x785 MLOAD
0x786 DUP1
0x787 SWAP2
0x788 SUB
0x789 SWAP1
0x78a RETURN
---
0x779: JUMPDEST 
0x77a: V743 = 0x40
0x77c: V744 = M[0x40]
0x77f: M[V744] = S0
0x780: V745 = 0x20
0x782: V746 = ADD 0x20 V744
0x783: V747 = 0x40
0x785: V748 = M[0x40]
0x788: V749 = SUB V746 V748
0x78a: RETURN V748 V749
---
Entry stack: [V12, 0x779, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x779]

================================

Block 0x78b
[0x78b:0x791]
---
Predecessors: [0x30]
Successors: [0x792, 0x796]
---
0x78b JUMPDEST
0x78c CALLVALUE
0x78d ISZERO
0x78e PUSH2 0x796
0x791 JUMPI
---
0x78b: JUMPDEST 
0x78c: V750 = CALLVALUE
0x78d: V751 = ISZERO V750
0x78e: V752 = 0x796
0x791: JUMPI 0x796 V751
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x792
[0x792:0x795]
---
Predecessors: [0x78b]
Successors: []
---
0x792 PUSH1 0x0
0x794 DUP1
0x795 REVERT
---
0x792: V753 = 0x0
0x795: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x796
[0x796:0x7a0]
---
Predecessors: [0x78b]
Successors: [0xbbb]
---
0x796 JUMPDEST
0x797 PUSH2 0x764
0x79a PUSH1 0x4
0x79c CALLDATALOAD
0x79d PUSH2 0xbbb
0x7a0 JUMP
---
0x796: JUMPDEST 
0x797: V754 = 0x764
0x79a: V755 = 0x4
0x79c: V756 = CALLDATALOAD 0x4
0x79d: V757 = 0xbbb
0x7a0: JUMP 0xbbb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x764, V756]
Exit stack: [V12, 0x764, V756]

================================

Block 0x7a1
[0x7a1:0x7a2]
---
Predecessors: []
Successors: []
---
0x7a1 JUMPDEST
0x7a2 STOP
---
0x7a1: JUMPDEST 
0x7a2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7a3
[0x7a3:0x7a9]
---
Predecessors: [0x3b]
Successors: [0x7aa, 0x7ae]
---
0x7a3 JUMPDEST
0x7a4 CALLVALUE
0x7a5 ISZERO
0x7a6 PUSH2 0x7ae
0x7a9 JUMPI
---
0x7a3: JUMPDEST 
0x7a4: V758 = CALLVALUE
0x7a5: V759 = ISZERO V758
0x7a6: V760 = 0x7ae
0x7a9: JUMPI 0x7ae V759
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7aa
[0x7aa:0x7ad]
---
Predecessors: [0x7a3]
Successors: []
---
0x7aa PUSH1 0x0
0x7ac DUP1
0x7ad REVERT
---
0x7aa: V761 = 0x0
0x7ad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ae
[0x7ae:0x7b5]
---
Predecessors: [0x7a3]
Successors: [0xc4c]
---
0x7ae JUMPDEST
0x7af PUSH2 0x779
0x7b2 PUSH2 0xc4c
0x7b5 JUMP
---
0x7ae: JUMPDEST 
0x7af: V762 = 0x779
0x7b2: V763 = 0xc4c
0x7b5: JUMP 0xc4c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x7b6
[0x7b6:0x7c7]
---
Predecessors: []
Successors: []
---
0x7b6 JUMPDEST
0x7b7 PUSH1 0x40
0x7b9 MLOAD
0x7ba SWAP1
0x7bb DUP2
0x7bc MSTORE
0x7bd PUSH1 0x20
0x7bf ADD
0x7c0 PUSH1 0x40
0x7c2 MLOAD
0x7c3 DUP1
0x7c4 SWAP2
0x7c5 SUB
0x7c6 SWAP1
0x7c7 RETURN
---
0x7b6: JUMPDEST 
0x7b7: V764 = 0x40
0x7b9: V765 = M[0x40]
0x7bc: M[V765] = S0
0x7bd: V766 = 0x20
0x7bf: V767 = ADD 0x20 V765
0x7c0: V768 = 0x40
0x7c2: V769 = M[0x40]
0x7c5: V770 = SUB V767 V769
0x7c7: RETURN V769 V770
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7c8
[0x7c8:0x7ce]
---
Predecessors: [0x46]
Successors: [0x7cf, 0x7d3]
---
0x7c8 JUMPDEST
0x7c9 CALLVALUE
0x7ca ISZERO
0x7cb PUSH2 0x7d3
0x7ce JUMPI
---
0x7c8: JUMPDEST 
0x7c9: V771 = CALLVALUE
0x7ca: V772 = ISZERO V771
0x7cb: V773 = 0x7d3
0x7ce: JUMPI 0x7d3 V772
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7cf
[0x7cf:0x7d2]
---
Predecessors: [0x7c8]
Successors: []
---
0x7cf PUSH1 0x0
0x7d1 DUP1
0x7d2 REVERT
---
0x7cf: V774 = 0x0
0x7d2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d3
[0x7d3:0x7da]
---
Predecessors: [0x7c8]
Successors: [0xc52]
---
0x7d3 JUMPDEST
0x7d4 PUSH2 0x779
0x7d7 PUSH2 0xc52
0x7da JUMP
---
0x7d3: JUMPDEST 
0x7d4: V775 = 0x779
0x7d7: V776 = 0xc52
0x7da: JUMP 0xc52
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x7db
[0x7db:0x7ec]
---
Predecessors: []
Successors: []
---
0x7db JUMPDEST
0x7dc PUSH1 0x40
0x7de MLOAD
0x7df SWAP1
0x7e0 DUP2
0x7e1 MSTORE
0x7e2 PUSH1 0x20
0x7e4 ADD
0x7e5 PUSH1 0x40
0x7e7 MLOAD
0x7e8 DUP1
0x7e9 SWAP2
0x7ea SUB
0x7eb SWAP1
0x7ec RETURN
---
0x7db: JUMPDEST 
0x7dc: V777 = 0x40
0x7de: V778 = M[0x40]
0x7e1: M[V778] = S0
0x7e2: V779 = 0x20
0x7e4: V780 = ADD 0x20 V778
0x7e5: V781 = 0x40
0x7e7: V782 = M[0x40]
0x7ea: V783 = SUB V780 V782
0x7ec: RETURN V782 V783
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ed
[0x7ed:0x7f3]
---
Predecessors: [0x51]
Successors: [0x7f4, 0x7f8]
---
0x7ed JUMPDEST
0x7ee CALLVALUE
0x7ef ISZERO
0x7f0 PUSH2 0x7f8
0x7f3 JUMPI
---
0x7ed: JUMPDEST 
0x7ee: V784 = CALLVALUE
0x7ef: V785 = ISZERO V784
0x7f0: V786 = 0x7f8
0x7f3: JUMPI 0x7f8 V785
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f4
[0x7f4:0x7f7]
---
Predecessors: [0x7ed]
Successors: []
---
0x7f4 PUSH1 0x0
0x7f6 DUP1
0x7f7 REVERT
---
0x7f4: V787 = 0x0
0x7f7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f8
[0x7f8:0x7ff]
---
Predecessors: [0x7ed]
Successors: [0xc58]
---
0x7f8 JUMPDEST
0x7f9 PUSH2 0x779
0x7fc PUSH2 0xc58
0x7ff JUMP
---
0x7f8: JUMPDEST 
0x7f9: V788 = 0x779
0x7fc: V789 = 0xc58
0x7ff: JUMP 0xc58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x800
[0x800:0x811]
---
Predecessors: []
Successors: []
---
0x800 JUMPDEST
0x801 PUSH1 0x40
0x803 MLOAD
0x804 SWAP1
0x805 DUP2
0x806 MSTORE
0x807 PUSH1 0x20
0x809 ADD
0x80a PUSH1 0x40
0x80c MLOAD
0x80d DUP1
0x80e SWAP2
0x80f SUB
0x810 SWAP1
0x811 RETURN
---
0x800: JUMPDEST 
0x801: V790 = 0x40
0x803: V791 = M[0x40]
0x806: M[V791] = S0
0x807: V792 = 0x20
0x809: V793 = ADD 0x20 V791
0x80a: V794 = 0x40
0x80c: V795 = M[0x40]
0x80f: V796 = SUB V793 V795
0x811: RETURN V795 V796
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x812
[0x812:0x818]
---
Predecessors: [0x5c]
Successors: [0x819, 0x81d]
---
0x812 JUMPDEST
0x813 CALLVALUE
0x814 ISZERO
0x815 PUSH2 0x81d
0x818 JUMPI
---
0x812: JUMPDEST 
0x813: V797 = CALLVALUE
0x814: V798 = ISZERO V797
0x815: V799 = 0x81d
0x818: JUMPI 0x81d V798
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x819
[0x819:0x81c]
---
Predecessors: [0x812]
Successors: []
---
0x819 PUSH1 0x0
0x81b DUP1
0x81c REVERT
---
0x819: V800 = 0x0
0x81c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81d
[0x81d:0x824]
---
Predecessors: [0x812]
Successors: [0xc5e]
---
0x81d JUMPDEST
0x81e PUSH2 0x825
0x821 PUSH2 0xc5e
0x824 JUMP
---
0x81d: JUMPDEST 
0x81e: V801 = 0x825
0x821: V802 = 0xc5e
0x824: JUMP 0xc5e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x825]
Exit stack: [V12, 0x825]

================================

Block 0x825
[0x825:0x840]
---
Predecessors: [0xc5e, 0xc9f, 0xcbd]
Successors: []
---
0x825 JUMPDEST
0x826 PUSH1 0x40
0x828 MLOAD
0x829 PUSH1 0x1
0x82b PUSH1 0xa0
0x82d PUSH1 0x2
0x82f EXP
0x830 SUB
0x831 SWAP1
0x832 SWAP2
0x833 AND
0x834 DUP2
0x835 MSTORE
0x836 PUSH1 0x20
0x838 ADD
0x839 PUSH1 0x40
0x83b MLOAD
0x83c DUP1
0x83d SWAP2
0x83e SUB
0x83f SWAP1
0x840 RETURN
---
0x825: JUMPDEST 
0x826: V803 = 0x40
0x828: V804 = M[0x40]
0x829: V805 = 0x1
0x82b: V806 = 0xa0
0x82d: V807 = 0x2
0x82f: V808 = EXP 0x2 0xa0
0x830: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x833: V810 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x835: M[V804] = V810
0x836: V811 = 0x20
0x838: V812 = ADD 0x20 V804
0x839: V813 = 0x40
0x83b: V814 = M[0x40]
0x83e: V815 = SUB V812 V814
0x840: RETURN V814 V815
---
Entry stack: [V12, 0x825, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x825]

================================

Block 0x841
[0x841:0x847]
---
Predecessors: [0x67]
Successors: [0x848, 0x84c]
---
0x841 JUMPDEST
0x842 CALLVALUE
0x843 ISZERO
0x844 PUSH2 0x84c
0x847 JUMPI
---
0x841: JUMPDEST 
0x842: V816 = CALLVALUE
0x843: V817 = ISZERO V816
0x844: V818 = 0x84c
0x847: JUMPI 0x84c V817
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x848
[0x848:0x84b]
---
Predecessors: [0x841]
Successors: []
---
0x848 PUSH1 0x0
0x84a DUP1
0x84b REVERT
---
0x848: V819 = 0x0
0x84b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84c
[0x84c:0x853]
---
Predecessors: [0x841]
Successors: [0xc6d]
---
0x84c JUMPDEST
0x84d PUSH2 0x779
0x850 PUSH2 0xc6d
0x853 JUMP
---
0x84c: JUMPDEST 
0x84d: V820 = 0x779
0x850: V821 = 0xc6d
0x853: JUMP 0xc6d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x854
[0x854:0x865]
---
Predecessors: []
Successors: []
---
0x854 JUMPDEST
0x855 PUSH1 0x40
0x857 MLOAD
0x858 SWAP1
0x859 DUP2
0x85a MSTORE
0x85b PUSH1 0x20
0x85d ADD
0x85e PUSH1 0x40
0x860 MLOAD
0x861 DUP1
0x862 SWAP2
0x863 SUB
0x864 SWAP1
0x865 RETURN
---
0x854: JUMPDEST 
0x855: V822 = 0x40
0x857: V823 = M[0x40]
0x85a: M[V823] = S0
0x85b: V824 = 0x20
0x85d: V825 = ADD 0x20 V823
0x85e: V826 = 0x40
0x860: V827 = M[0x40]
0x863: V828 = SUB V825 V827
0x865: RETURN V827 V828
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x866
[0x866:0x86c]
---
Predecessors: [0x72]
Successors: [0x86d, 0x871]
---
0x866 JUMPDEST
0x867 CALLVALUE
0x868 ISZERO
0x869 PUSH2 0x871
0x86c JUMPI
---
0x866: JUMPDEST 
0x867: V829 = CALLVALUE
0x868: V830 = ISZERO V829
0x869: V831 = 0x871
0x86c: JUMPI 0x871 V830
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86d
[0x86d:0x870]
---
Predecessors: [0x866]
Successors: []
---
0x86d PUSH1 0x0
0x86f DUP1
0x870 REVERT
---
0x86d: V832 = 0x0
0x870: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x871
[0x871:0x878]
---
Predecessors: [0x866]
Successors: [0xc73]
---
0x871 JUMPDEST
0x872 PUSH2 0x779
0x875 PUSH2 0xc73
0x878 JUMP
---
0x871: JUMPDEST 
0x872: V833 = 0x779
0x875: V834 = 0xc73
0x878: JUMP 0xc73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x879
[0x879:0x88a]
---
Predecessors: []
Successors: []
---
0x879 JUMPDEST
0x87a PUSH1 0x40
0x87c MLOAD
0x87d SWAP1
0x87e DUP2
0x87f MSTORE
0x880 PUSH1 0x20
0x882 ADD
0x883 PUSH1 0x40
0x885 MLOAD
0x886 DUP1
0x887 SWAP2
0x888 SUB
0x889 SWAP1
0x88a RETURN
---
0x879: JUMPDEST 
0x87a: V835 = 0x40
0x87c: V836 = M[0x40]
0x87f: M[V836] = S0
0x880: V837 = 0x20
0x882: V838 = ADD 0x20 V836
0x883: V839 = 0x40
0x885: V840 = M[0x40]
0x888: V841 = SUB V838 V840
0x88a: RETURN V840 V841
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x88b
[0x88b:0x891]
---
Predecessors: [0x7d]
Successors: [0x892, 0x896]
---
0x88b JUMPDEST
0x88c CALLVALUE
0x88d ISZERO
0x88e PUSH2 0x896
0x891 JUMPI
---
0x88b: JUMPDEST 
0x88c: V842 = CALLVALUE
0x88d: V843 = ISZERO V842
0x88e: V844 = 0x896
0x891: JUMPI 0x896 V843
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x892
[0x892:0x895]
---
Predecessors: [0x88b]
Successors: []
---
0x892 PUSH1 0x0
0x894 DUP1
0x895 REVERT
---
0x892: V845 = 0x0
0x895: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x896
[0x896:0x89d]
---
Predecessors: [0x88b]
Successors: [0xc79]
---
0x896 JUMPDEST
0x897 PUSH2 0x764
0x89a PUSH2 0xc79
0x89d JUMP
---
0x896: JUMPDEST 
0x897: V846 = 0x764
0x89a: V847 = 0xc79
0x89d: JUMP 0xc79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x764]
Exit stack: [V12, 0x764]

================================

Block 0x89e
[0x89e:0x89f]
---
Predecessors: []
Successors: []
---
0x89e JUMPDEST
0x89f STOP
---
0x89e: JUMPDEST 
0x89f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8a0
[0x8a0:0x8a6]
---
Predecessors: [0x88]
Successors: [0x8a7, 0x8ab]
---
0x8a0 JUMPDEST
0x8a1 CALLVALUE
0x8a2 ISZERO
0x8a3 PUSH2 0x8ab
0x8a6 JUMPI
---
0x8a0: JUMPDEST 
0x8a1: V848 = CALLVALUE
0x8a2: V849 = ISZERO V848
0x8a3: V850 = 0x8ab
0x8a6: JUMPI 0x8ab V849
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a7
[0x8a7:0x8aa]
---
Predecessors: [0x8a0]
Successors: []
---
0x8a7 PUSH1 0x0
0x8a9 DUP1
0x8aa REVERT
---
0x8a7: V851 = 0x0
0x8aa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8ab
[0x8ab:0x8b2]
---
Predecessors: [0x8a0]
Successors: [0xc9f]
---
0x8ab JUMPDEST
0x8ac PUSH2 0x825
0x8af PUSH2 0xc9f
0x8b2 JUMP
---
0x8ab: JUMPDEST 
0x8ac: V852 = 0x825
0x8af: V853 = 0xc9f
0x8b2: JUMP 0xc9f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x825]
Exit stack: [V12, 0x825]

================================

Block 0x8b3
[0x8b3:0x8ce]
---
Predecessors: []
Successors: []
---
0x8b3 JUMPDEST
0x8b4 PUSH1 0x40
0x8b6 MLOAD
0x8b7 PUSH1 0x1
0x8b9 PUSH1 0xa0
0x8bb PUSH1 0x2
0x8bd EXP
0x8be SUB
0x8bf SWAP1
0x8c0 SWAP2
0x8c1 AND
0x8c2 DUP2
0x8c3 MSTORE
0x8c4 PUSH1 0x20
0x8c6 ADD
0x8c7 PUSH1 0x40
0x8c9 MLOAD
0x8ca DUP1
0x8cb SWAP2
0x8cc SUB
0x8cd SWAP1
0x8ce RETURN
---
0x8b3: JUMPDEST 
0x8b4: V854 = 0x40
0x8b6: V855 = M[0x40]
0x8b7: V856 = 0x1
0x8b9: V857 = 0xa0
0x8bb: V858 = 0x2
0x8bd: V859 = EXP 0x2 0xa0
0x8be: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c1: V861 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8c3: M[V855] = V861
0x8c4: V862 = 0x20
0x8c6: V863 = ADD 0x20 V855
0x8c7: V864 = 0x40
0x8c9: V865 = M[0x40]
0x8cc: V866 = SUB V863 V865
0x8ce: RETURN V865 V866
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8cf
[0x8cf:0x8d5]
---
Predecessors: [0x93]
Successors: [0x8d6, 0x8da]
---
0x8cf JUMPDEST
0x8d0 CALLVALUE
0x8d1 ISZERO
0x8d2 PUSH2 0x8da
0x8d5 JUMPI
---
0x8cf: JUMPDEST 
0x8d0: V867 = CALLVALUE
0x8d1: V868 = ISZERO V867
0x8d2: V869 = 0x8da
0x8d5: JUMPI 0x8da V868
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d6
[0x8d6:0x8d9]
---
Predecessors: [0x8cf]
Successors: []
---
0x8d6 PUSH1 0x0
0x8d8 DUP1
0x8d9 REVERT
---
0x8d6: V870 = 0x0
0x8d9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8da
[0x8da:0x8e1]
---
Predecessors: [0x8cf]
Successors: [0xcae]
---
0x8da JUMPDEST
0x8db PUSH2 0x8e2
0x8de PUSH2 0xcae
0x8e1 JUMP
---
0x8da: JUMPDEST 
0x8db: V871 = 0x8e2
0x8de: V872 = 0xcae
0x8e1: JUMP 0xcae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8e2]
Exit stack: [V12, 0x8e2]

================================

Block 0x8e2
[0x8e2:0x8f5]
---
Predecessors: [0xcae, 0xd6b, 0xd79]
Successors: []
---
0x8e2 JUMPDEST
0x8e3 PUSH1 0x40
0x8e5 MLOAD
0x8e6 SWAP1
0x8e7 ISZERO
0x8e8 ISZERO
0x8e9 DUP2
0x8ea MSTORE
0x8eb PUSH1 0x20
0x8ed ADD
0x8ee PUSH1 0x40
0x8f0 MLOAD
0x8f1 DUP1
0x8f2 SWAP2
0x8f3 SUB
0x8f4 SWAP1
0x8f5 RETURN
---
0x8e2: JUMPDEST 
0x8e3: V873 = 0x40
0x8e5: V874 = M[0x40]
0x8e7: V875 = ISZERO S0
0x8e8: V876 = ISZERO V875
0x8ea: M[V874] = V876
0x8eb: V877 = 0x20
0x8ed: V878 = ADD 0x20 V874
0x8ee: V879 = 0x40
0x8f0: V880 = M[0x40]
0x8f3: V881 = SUB V878 V880
0x8f5: RETURN V880 V881
---
Entry stack: [V12, 0x8e2, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x8e2]

================================

Block 0x8f6
[0x8f6:0x8fc]
---
Predecessors: [0x9e]
Successors: [0x8fd, 0x901]
---
0x8f6 JUMPDEST
0x8f7 CALLVALUE
0x8f8 ISZERO
0x8f9 PUSH2 0x901
0x8fc JUMPI
---
0x8f6: JUMPDEST 
0x8f7: V882 = CALLVALUE
0x8f8: V883 = ISZERO V882
0x8f9: V884 = 0x901
0x8fc: JUMPI 0x901 V883
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8fd
[0x8fd:0x900]
---
Predecessors: [0x8f6]
Successors: []
---
0x8fd PUSH1 0x0
0x8ff DUP1
0x900 REVERT
---
0x8fd: V885 = 0x0
0x900: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x901
[0x901:0x908]
---
Predecessors: [0x8f6]
Successors: [0xcbd]
---
0x901 JUMPDEST
0x902 PUSH2 0x825
0x905 PUSH2 0xcbd
0x908 JUMP
---
0x901: JUMPDEST 
0x902: V886 = 0x825
0x905: V887 = 0xcbd
0x908: JUMP 0xcbd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x825]
Exit stack: [V12, 0x825]

================================

Block 0x909
[0x909:0x924]
---
Predecessors: []
Successors: []
---
0x909 JUMPDEST
0x90a PUSH1 0x40
0x90c MLOAD
0x90d PUSH1 0x1
0x90f PUSH1 0xa0
0x911 PUSH1 0x2
0x913 EXP
0x914 SUB
0x915 SWAP1
0x916 SWAP2
0x917 AND
0x918 DUP2
0x919 MSTORE
0x91a PUSH1 0x20
0x91c ADD
0x91d PUSH1 0x40
0x91f MLOAD
0x920 DUP1
0x921 SWAP2
0x922 SUB
0x923 SWAP1
0x924 RETURN
---
0x909: JUMPDEST 
0x90a: V888 = 0x40
0x90c: V889 = M[0x40]
0x90d: V890 = 0x1
0x90f: V891 = 0xa0
0x911: V892 = 0x2
0x913: V893 = EXP 0x2 0xa0
0x914: V894 = SUB 0x10000000000000000000000000000000000000000 0x1
0x917: V895 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x919: M[V889] = V895
0x91a: V896 = 0x20
0x91c: V897 = ADD 0x20 V889
0x91d: V898 = 0x40
0x91f: V899 = M[0x40]
0x922: V900 = SUB V897 V899
0x924: RETURN V899 V900
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x925
[0x925:0x92b]
---
Predecessors: [0xa9]
Successors: [0x92c, 0x930]
---
0x925 JUMPDEST
0x926 CALLVALUE
0x927 ISZERO
0x928 PUSH2 0x930
0x92b JUMPI
---
0x925: JUMPDEST 
0x926: V901 = CALLVALUE
0x927: V902 = ISZERO V901
0x928: V903 = 0x930
0x92b: JUMPI 0x930 V902
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x92c
[0x92c:0x92f]
---
Predecessors: [0x925]
Successors: []
---
0x92c PUSH1 0x0
0x92e DUP1
0x92f REVERT
---
0x92c: V904 = 0x0
0x92f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x930
[0x930:0x943]
---
Predecessors: [0x925]
Successors: [0xccc]
---
0x930 JUMPDEST
0x931 PUSH2 0x779
0x934 PUSH1 0x1
0x936 PUSH1 0xa0
0x938 PUSH1 0x2
0x93a EXP
0x93b SUB
0x93c PUSH1 0x4
0x93e CALLDATALOAD
0x93f AND
0x940 PUSH2 0xccc
0x943 JUMP
---
0x930: JUMPDEST 
0x931: V905 = 0x779
0x934: V906 = 0x1
0x936: V907 = 0xa0
0x938: V908 = 0x2
0x93a: V909 = EXP 0x2 0xa0
0x93b: V910 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93c: V911 = 0x4
0x93e: V912 = CALLDATALOAD 0x4
0x93f: V913 = AND V912 0xffffffffffffffffffffffffffffffffffffffff
0x940: V914 = 0xccc
0x943: JUMP 0xccc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779, V913]
Exit stack: [V12, 0x779, V913]

================================

Block 0x944
[0x944:0x955]
---
Predecessors: []
Successors: []
---
0x944 JUMPDEST
0x945 PUSH1 0x40
0x947 MLOAD
0x948 SWAP1
0x949 DUP2
0x94a MSTORE
0x94b PUSH1 0x20
0x94d ADD
0x94e PUSH1 0x40
0x950 MLOAD
0x951 DUP1
0x952 SWAP2
0x953 SUB
0x954 SWAP1
0x955 RETURN
---
0x944: JUMPDEST 
0x945: V915 = 0x40
0x947: V916 = M[0x40]
0x94a: M[V916] = S0
0x94b: V917 = 0x20
0x94d: V918 = ADD 0x20 V916
0x94e: V919 = 0x40
0x950: V920 = M[0x40]
0x953: V921 = SUB V918 V920
0x955: RETURN V920 V921
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x956
[0x956:0x95c]
---
Predecessors: [0xb4]
Successors: [0x95d, 0x961]
---
0x956 JUMPDEST
0x957 CALLVALUE
0x958 ISZERO
0x959 PUSH2 0x961
0x95c JUMPI
---
0x956: JUMPDEST 
0x957: V922 = CALLVALUE
0x958: V923 = ISZERO V922
0x959: V924 = 0x961
0x95c: JUMPI 0x961 V923
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95d
[0x95d:0x960]
---
Predecessors: [0x956]
Successors: []
---
0x95d PUSH1 0x0
0x95f DUP1
0x960 REVERT
---
0x95d: V925 = 0x0
0x960: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x961
[0x961:0x968]
---
Predecessors: [0x956]
Successors: [0xcde]
---
0x961 JUMPDEST
0x962 PUSH2 0x779
0x965 PUSH2 0xcde
0x968 JUMP
---
0x961: JUMPDEST 
0x962: V926 = 0x779
0x965: V927 = 0xcde
0x968: JUMP 0xcde
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x969
[0x969:0x97a]
---
Predecessors: []
Successors: []
---
0x969 JUMPDEST
0x96a PUSH1 0x40
0x96c MLOAD
0x96d SWAP1
0x96e DUP2
0x96f MSTORE
0x970 PUSH1 0x20
0x972 ADD
0x973 PUSH1 0x40
0x975 MLOAD
0x976 DUP1
0x977 SWAP2
0x978 SUB
0x979 SWAP1
0x97a RETURN
---
0x969: JUMPDEST 
0x96a: V928 = 0x40
0x96c: V929 = M[0x40]
0x96f: M[V929] = S0
0x970: V930 = 0x20
0x972: V931 = ADD 0x20 V929
0x973: V932 = 0x40
0x975: V933 = M[0x40]
0x978: V934 = SUB V931 V933
0x97a: RETURN V933 V934
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x97b
[0x97b:0x981]
---
Predecessors: [0xbf]
Successors: [0x982, 0x986]
---
0x97b JUMPDEST
0x97c CALLVALUE
0x97d ISZERO
0x97e PUSH2 0x986
0x981 JUMPI
---
0x97b: JUMPDEST 
0x97c: V935 = CALLVALUE
0x97d: V936 = ISZERO V935
0x97e: V937 = 0x986
0x981: JUMPI 0x986 V936
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x982
[0x982:0x985]
---
Predecessors: [0x97b]
Successors: []
---
0x982 PUSH1 0x0
0x984 DUP1
0x985 REVERT
---
0x982: V938 = 0x0
0x985: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x986
[0x986:0x98d]
---
Predecessors: [0x97b]
Successors: [0xce4]
---
0x986 JUMPDEST
0x987 PUSH2 0x779
0x98a PUSH2 0xce4
0x98d JUMP
---
0x986: JUMPDEST 
0x987: V939 = 0x779
0x98a: V940 = 0xce4
0x98d: JUMP 0xce4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x98e
[0x98e:0x99f]
---
Predecessors: []
Successors: []
---
0x98e JUMPDEST
0x98f PUSH1 0x40
0x991 MLOAD
0x992 SWAP1
0x993 DUP2
0x994 MSTORE
0x995 PUSH1 0x20
0x997 ADD
0x998 PUSH1 0x40
0x99a MLOAD
0x99b DUP1
0x99c SWAP2
0x99d SUB
0x99e SWAP1
0x99f RETURN
---
0x98e: JUMPDEST 
0x98f: V941 = 0x40
0x991: V942 = M[0x40]
0x994: M[V942] = S0
0x995: V943 = 0x20
0x997: V944 = ADD 0x20 V942
0x998: V945 = 0x40
0x99a: V946 = M[0x40]
0x99d: V947 = SUB V944 V946
0x99f: RETURN V946 V947
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9a0
[0x9a0:0x9a6]
---
Predecessors: [0xca]
Successors: [0x9a7, 0x9ab]
---
0x9a0 JUMPDEST
0x9a1 CALLVALUE
0x9a2 ISZERO
0x9a3 PUSH2 0x9ab
0x9a6 JUMPI
---
0x9a0: JUMPDEST 
0x9a1: V948 = CALLVALUE
0x9a2: V949 = ISZERO V948
0x9a3: V950 = 0x9ab
0x9a6: JUMPI 0x9ab V949
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9a7
[0x9a7:0x9aa]
---
Predecessors: [0x9a0]
Successors: []
---
0x9a7 PUSH1 0x0
0x9a9 DUP1
0x9aa REVERT
---
0x9a7: V951 = 0x0
0x9aa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9ab
[0x9ab:0x9b2]
---
Predecessors: [0x9a0]
Successors: [0xcea]
---
0x9ab JUMPDEST
0x9ac PUSH2 0x779
0x9af PUSH2 0xcea
0x9b2 JUMP
---
0x9ab: JUMPDEST 
0x9ac: V952 = 0x779
0x9af: V953 = 0xcea
0x9b2: JUMP 0xcea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x9b3
[0x9b3:0x9c4]
---
Predecessors: []
Successors: []
---
0x9b3 JUMPDEST
0x9b4 PUSH1 0x40
0x9b6 MLOAD
0x9b7 SWAP1
0x9b8 DUP2
0x9b9 MSTORE
0x9ba PUSH1 0x20
0x9bc ADD
0x9bd PUSH1 0x40
0x9bf MLOAD
0x9c0 DUP1
0x9c1 SWAP2
0x9c2 SUB
0x9c3 SWAP1
0x9c4 RETURN
---
0x9b3: JUMPDEST 
0x9b4: V954 = 0x40
0x9b6: V955 = M[0x40]
0x9b9: M[V955] = S0
0x9ba: V956 = 0x20
0x9bc: V957 = ADD 0x20 V955
0x9bd: V958 = 0x40
0x9bf: V959 = M[0x40]
0x9c2: V960 = SUB V957 V959
0x9c4: RETURN V959 V960
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9c5
[0x9c5:0x9cb]
---
Predecessors: [0xd5]
Successors: [0x9cc, 0x9d0]
---
0x9c5 JUMPDEST
0x9c6 CALLVALUE
0x9c7 ISZERO
0x9c8 PUSH2 0x9d0
0x9cb JUMPI
---
0x9c5: JUMPDEST 
0x9c6: V961 = CALLVALUE
0x9c7: V962 = ISZERO V961
0x9c8: V963 = 0x9d0
0x9cb: JUMPI 0x9d0 V962
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9cc
[0x9cc:0x9cf]
---
Predecessors: [0x9c5]
Successors: []
---
0x9cc PUSH1 0x0
0x9ce DUP1
0x9cf REVERT
---
0x9cc: V964 = 0x0
0x9cf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d0
[0x9d0:0x9d7]
---
Predecessors: [0x9c5]
Successors: [0xcf0]
---
0x9d0 JUMPDEST
0x9d1 PUSH2 0x779
0x9d4 PUSH2 0xcf0
0x9d7 JUMP
---
0x9d0: JUMPDEST 
0x9d1: V965 = 0x779
0x9d4: V966 = 0xcf0
0x9d7: JUMP 0xcf0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x9d8
[0x9d8:0x9e9]
---
Predecessors: []
Successors: []
---
0x9d8 JUMPDEST
0x9d9 PUSH1 0x40
0x9db MLOAD
0x9dc SWAP1
0x9dd DUP2
0x9de MSTORE
0x9df PUSH1 0x20
0x9e1 ADD
0x9e2 PUSH1 0x40
0x9e4 MLOAD
0x9e5 DUP1
0x9e6 SWAP2
0x9e7 SUB
0x9e8 SWAP1
0x9e9 RETURN
---
0x9d8: JUMPDEST 
0x9d9: V967 = 0x40
0x9db: V968 = M[0x40]
0x9de: M[V968] = S0
0x9df: V969 = 0x20
0x9e1: V970 = ADD 0x20 V968
0x9e2: V971 = 0x40
0x9e4: V972 = M[0x40]
0x9e7: V973 = SUB V970 V972
0x9e9: RETURN V972 V973
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9ea
[0x9ea:0x9f0]
---
Predecessors: [0xe0]
Successors: [0x9f1, 0x9f5]
---
0x9ea JUMPDEST
0x9eb CALLVALUE
0x9ec ISZERO
0x9ed PUSH2 0x9f5
0x9f0 JUMPI
---
0x9ea: JUMPDEST 
0x9eb: V974 = CALLVALUE
0x9ec: V975 = ISZERO V974
0x9ed: V976 = 0x9f5
0x9f0: JUMPI 0x9f5 V975
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9f1
[0x9f1:0x9f4]
---
Predecessors: [0x9ea]
Successors: []
---
0x9f1 PUSH1 0x0
0x9f3 DUP1
0x9f4 REVERT
---
0x9f1: V977 = 0x0
0x9f4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9f5
[0x9f5:0x9fc]
---
Predecessors: [0x9ea]
Successors: [0xcf6]
---
0x9f5 JUMPDEST
0x9f6 PUSH2 0x779
0x9f9 PUSH2 0xcf6
0x9fc JUMP
---
0x9f5: JUMPDEST 
0x9f6: V978 = 0x779
0x9f9: V979 = 0xcf6
0x9fc: JUMP 0xcf6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0x9fd
[0x9fd:0xa0e]
---
Predecessors: []
Successors: []
---
0x9fd JUMPDEST
0x9fe PUSH1 0x40
0xa00 MLOAD
0xa01 SWAP1
0xa02 DUP2
0xa03 MSTORE
0xa04 PUSH1 0x20
0xa06 ADD
0xa07 PUSH1 0x40
0xa09 MLOAD
0xa0a DUP1
0xa0b SWAP2
0xa0c SUB
0xa0d SWAP1
0xa0e RETURN
---
0x9fd: JUMPDEST 
0x9fe: V980 = 0x40
0xa00: V981 = M[0x40]
0xa03: M[V981] = S0
0xa04: V982 = 0x20
0xa06: V983 = ADD 0x20 V981
0xa07: V984 = 0x40
0xa09: V985 = M[0x40]
0xa0c: V986 = SUB V983 V985
0xa0e: RETURN V985 V986
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa0f
[0xa0f:0xa15]
---
Predecessors: [0xeb]
Successors: [0xa16, 0xa1a]
---
0xa0f JUMPDEST
0xa10 CALLVALUE
0xa11 ISZERO
0xa12 PUSH2 0xa1a
0xa15 JUMPI
---
0xa0f: JUMPDEST 
0xa10: V987 = CALLVALUE
0xa11: V988 = ISZERO V987
0xa12: V989 = 0xa1a
0xa15: JUMPI 0xa1a V988
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa16
[0xa16:0xa19]
---
Predecessors: [0xa0f]
Successors: []
---
0xa16 PUSH1 0x0
0xa18 DUP1
0xa19 REVERT
---
0xa16: V990 = 0x0
0xa19: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa1a
[0xa1a:0xa21]
---
Predecessors: [0xa0f]
Successors: [0xcfc]
---
0xa1a JUMPDEST
0xa1b PUSH2 0x779
0xa1e PUSH2 0xcfc
0xa21 JUMP
---
0xa1a: JUMPDEST 
0xa1b: V991 = 0x779
0xa1e: V992 = 0xcfc
0xa21: JUMP 0xcfc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0xa22
[0xa22:0xa33]
---
Predecessors: []
Successors: []
---
0xa22 JUMPDEST
0xa23 PUSH1 0x40
0xa25 MLOAD
0xa26 SWAP1
0xa27 DUP2
0xa28 MSTORE
0xa29 PUSH1 0x20
0xa2b ADD
0xa2c PUSH1 0x40
0xa2e MLOAD
0xa2f DUP1
0xa30 SWAP2
0xa31 SUB
0xa32 SWAP1
0xa33 RETURN
---
0xa22: JUMPDEST 
0xa23: V993 = 0x40
0xa25: V994 = M[0x40]
0xa28: M[V994] = S0
0xa29: V995 = 0x20
0xa2b: V996 = ADD 0x20 V994
0xa2c: V997 = 0x40
0xa2e: V998 = M[0x40]
0xa31: V999 = SUB V996 V998
0xa33: RETURN V998 V999
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa34
[0xa34:0xa3a]
---
Predecessors: [0xf6]
Successors: [0xa3b, 0xa3f]
---
0xa34 JUMPDEST
0xa35 CALLVALUE
0xa36 ISZERO
0xa37 PUSH2 0xa3f
0xa3a JUMPI
---
0xa34: JUMPDEST 
0xa35: V1000 = CALLVALUE
0xa36: V1001 = ISZERO V1000
0xa37: V1002 = 0xa3f
0xa3a: JUMPI 0xa3f V1001
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3b
[0xa3b:0xa3e]
---
Predecessors: [0xa34]
Successors: []
---
0xa3b PUSH1 0x0
0xa3d DUP1
0xa3e REVERT
---
0xa3b: V1003 = 0x0
0xa3e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3f
[0xa3f:0xa46]
---
Predecessors: [0xa34]
Successors: [0xd02]
---
0xa3f JUMPDEST
0xa40 PUSH2 0x779
0xa43 PUSH2 0xd02
0xa46 JUMP
---
0xa3f: JUMPDEST 
0xa40: V1004 = 0x779
0xa43: V1005 = 0xd02
0xa46: JUMP 0xd02
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0xa47
[0xa47:0xa58]
---
Predecessors: []
Successors: []
---
0xa47 JUMPDEST
0xa48 PUSH1 0x40
0xa4a MLOAD
0xa4b SWAP1
0xa4c DUP2
0xa4d MSTORE
0xa4e PUSH1 0x20
0xa50 ADD
0xa51 PUSH1 0x40
0xa53 MLOAD
0xa54 DUP1
0xa55 SWAP2
0xa56 SUB
0xa57 SWAP1
0xa58 RETURN
---
0xa47: JUMPDEST 
0xa48: V1006 = 0x40
0xa4a: V1007 = M[0x40]
0xa4d: M[V1007] = S0
0xa4e: V1008 = 0x20
0xa50: V1009 = ADD 0x20 V1007
0xa51: V1010 = 0x40
0xa53: V1011 = M[0x40]
0xa56: V1012 = SUB V1009 V1011
0xa58: RETURN V1011 V1012
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa59
[0xa59:0xa5f]
---
Predecessors: [0x101]
Successors: [0xa60, 0xa64]
---
0xa59 JUMPDEST
0xa5a CALLVALUE
0xa5b ISZERO
0xa5c PUSH2 0xa64
0xa5f JUMPI
---
0xa59: JUMPDEST 
0xa5a: V1013 = CALLVALUE
0xa5b: V1014 = ISZERO V1013
0xa5c: V1015 = 0xa64
0xa5f: JUMPI 0xa64 V1014
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa60
[0xa60:0xa63]
---
Predecessors: [0xa59]
Successors: []
---
0xa60 PUSH1 0x0
0xa62 DUP1
0xa63 REVERT
---
0xa60: V1016 = 0x0
0xa63: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa64
[0xa64:0xa6b]
---
Predecessors: [0xa59]
Successors: [0xd08]
---
0xa64 JUMPDEST
0xa65 PUSH2 0x764
0xa68 PUSH2 0xd08
0xa6b JUMP
---
0xa64: JUMPDEST 
0xa65: V1017 = 0x764
0xa68: V1018 = 0xd08
0xa6b: JUMP 0xd08
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x764]
Exit stack: [V12, 0x764]

================================

Block 0xa6c
[0xa6c:0xa6d]
---
Predecessors: []
Successors: []
---
0xa6c JUMPDEST
0xa6d STOP
---
0xa6c: JUMPDEST 
0xa6d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa6e
[0xa6e:0xa74]
---
Predecessors: [0x10c]
Successors: [0xa75, 0xa79]
---
0xa6e JUMPDEST
0xa6f CALLVALUE
0xa70 ISZERO
0xa71 PUSH2 0xa79
0xa74 JUMPI
---
0xa6e: JUMPDEST 
0xa6f: V1019 = CALLVALUE
0xa70: V1020 = ISZERO V1019
0xa71: V1021 = 0xa79
0xa74: JUMPI 0xa79 V1020
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa75
[0xa75:0xa78]
---
Predecessors: [0xa6e]
Successors: []
---
0xa75 PUSH1 0x0
0xa77 DUP1
0xa78 REVERT
---
0xa75: V1022 = 0x0
0xa78: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa79
[0xa79:0xa80]
---
Predecessors: [0xa6e]
Successors: [0xd2f]
---
0xa79 JUMPDEST
0xa7a PUSH2 0x764
0xa7d PUSH2 0xd2f
0xa80 JUMP
---
0xa79: JUMPDEST 
0xa7a: V1023 = 0x764
0xa7d: V1024 = 0xd2f
0xa80: JUMP 0xd2f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x764]
Exit stack: [V12, 0x764]

================================

Block 0xa81
[0xa81:0xa82]
---
Predecessors: []
Successors: []
---
0xa81 JUMPDEST
0xa82 STOP
---
0xa81: JUMPDEST 
0xa82: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa83
[0xa83:0xa89]
---
Predecessors: [0x117]
Successors: [0xa8a, 0xa8e]
---
0xa83 JUMPDEST
0xa84 CALLVALUE
0xa85 ISZERO
0xa86 PUSH2 0xa8e
0xa89 JUMPI
---
0xa83: JUMPDEST 
0xa84: V1025 = CALLVALUE
0xa85: V1026 = ISZERO V1025
0xa86: V1027 = 0xa8e
0xa89: JUMPI 0xa8e V1026
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa8a
[0xa8a:0xa8d]
---
Predecessors: [0xa83]
Successors: []
---
0xa8a PUSH1 0x0
0xa8c DUP1
0xa8d REVERT
---
0xa8a: V1028 = 0x0
0xa8d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa8e
[0xa8e:0xa95]
---
Predecessors: [0xa83]
Successors: [0xd59]
---
0xa8e JUMPDEST
0xa8f PUSH2 0x779
0xa92 PUSH2 0xd59
0xa95 JUMP
---
0xa8e: JUMPDEST 
0xa8f: V1029 = 0x779
0xa92: V1030 = 0xd59
0xa95: JUMP 0xd59
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0xa96
[0xa96:0xaa7]
---
Predecessors: []
Successors: []
---
0xa96 JUMPDEST
0xa97 PUSH1 0x40
0xa99 MLOAD
0xa9a SWAP1
0xa9b DUP2
0xa9c MSTORE
0xa9d PUSH1 0x20
0xa9f ADD
0xaa0 PUSH1 0x40
0xaa2 MLOAD
0xaa3 DUP1
0xaa4 SWAP2
0xaa5 SUB
0xaa6 SWAP1
0xaa7 RETURN
---
0xa96: JUMPDEST 
0xa97: V1031 = 0x40
0xa99: V1032 = M[0x40]
0xa9c: M[V1032] = S0
0xa9d: V1033 = 0x20
0xa9f: V1034 = ADD 0x20 V1032
0xaa0: V1035 = 0x40
0xaa2: V1036 = M[0x40]
0xaa5: V1037 = SUB V1034 V1036
0xaa7: RETURN V1036 V1037
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xaa8
[0xaa8:0xaae]
---
Predecessors: [0x122]
Successors: [0xaaf, 0xab3]
---
0xaa8 JUMPDEST
0xaa9 CALLVALUE
0xaaa ISZERO
0xaab PUSH2 0xab3
0xaae JUMPI
---
0xaa8: JUMPDEST 
0xaa9: V1038 = CALLVALUE
0xaaa: V1039 = ISZERO V1038
0xaab: V1040 = 0xab3
0xaae: JUMPI 0xab3 V1039
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaaf
[0xaaf:0xab2]
---
Predecessors: [0xaa8]
Successors: []
---
0xaaf PUSH1 0x0
0xab1 DUP1
0xab2 REVERT
---
0xaaf: V1041 = 0x0
0xab2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xab3
[0xab3:0xaba]
---
Predecessors: [0xaa8]
Successors: [0xd5f]
---
0xab3 JUMPDEST
0xab4 PUSH2 0x779
0xab7 PUSH2 0xd5f
0xaba JUMP
---
0xab3: JUMPDEST 
0xab4: V1042 = 0x779
0xab7: V1043 = 0xd5f
0xaba: JUMP 0xd5f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0xabb
[0xabb:0xacc]
---
Predecessors: []
Successors: []
---
0xabb JUMPDEST
0xabc PUSH1 0x40
0xabe MLOAD
0xabf SWAP1
0xac0 DUP2
0xac1 MSTORE
0xac2 PUSH1 0x20
0xac4 ADD
0xac5 PUSH1 0x40
0xac7 MLOAD
0xac8 DUP1
0xac9 SWAP2
0xaca SUB
0xacb SWAP1
0xacc RETURN
---
0xabb: JUMPDEST 
0xabc: V1044 = 0x40
0xabe: V1045 = M[0x40]
0xac1: M[V1045] = S0
0xac2: V1046 = 0x20
0xac4: V1047 = ADD 0x20 V1045
0xac5: V1048 = 0x40
0xac7: V1049 = M[0x40]
0xaca: V1050 = SUB V1047 V1049
0xacc: RETURN V1049 V1050
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xacd
[0xacd:0xad3]
---
Predecessors: [0x12d]
Successors: [0xad4, 0xad8]
---
0xacd JUMPDEST
0xace CALLVALUE
0xacf ISZERO
0xad0 PUSH2 0xad8
0xad3 JUMPI
---
0xacd: JUMPDEST 
0xace: V1051 = CALLVALUE
0xacf: V1052 = ISZERO V1051
0xad0: V1053 = 0xad8
0xad3: JUMPI 0xad8 V1052
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xad4
[0xad4:0xad7]
---
Predecessors: [0xacd]
Successors: []
---
0xad4 PUSH1 0x0
0xad6 DUP1
0xad7 REVERT
---
0xad4: V1054 = 0x0
0xad7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xad8
[0xad8:0xadf]
---
Predecessors: [0xacd]
Successors: [0xd65]
---
0xad8 JUMPDEST
0xad9 PUSH2 0x779
0xadc PUSH2 0xd65
0xadf JUMP
---
0xad8: JUMPDEST 
0xad9: V1055 = 0x779
0xadc: V1056 = 0xd65
0xadf: JUMP 0xd65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x779]
Exit stack: [V12, 0x779]

================================

Block 0xae0
[0xae0:0xaf1]
---
Predecessors: []
Successors: []
---
0xae0 JUMPDEST
0xae1 PUSH1 0x40
0xae3 MLOAD
0xae4 SWAP1
0xae5 DUP2
0xae6 MSTORE
0xae7 PUSH1 0x20
0xae9 ADD
0xaea PUSH1 0x40
0xaec MLOAD
0xaed DUP1
0xaee SWAP2
0xaef SUB
0xaf0 SWAP1
0xaf1 RETURN
---
0xae0: JUMPDEST 
0xae1: V1057 = 0x40
0xae3: V1058 = M[0x40]
0xae6: M[V1058] = S0
0xae7: V1059 = 0x20
0xae9: V1060 = ADD 0x20 V1058
0xaea: V1061 = 0x40
0xaec: V1062 = M[0x40]
0xaef: V1063 = SUB V1060 V1062
0xaf1: RETURN V1062 V1063
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xaf2
[0xaf2:0xaf8]
---
Predecessors: [0x138]
Successors: [0xaf9, 0xafd]
---
0xaf2 JUMPDEST
0xaf3 CALLVALUE
0xaf4 ISZERO
0xaf5 PUSH2 0xafd
0xaf8 JUMPI
---
0xaf2: JUMPDEST 
0xaf3: V1064 = CALLVALUE
0xaf4: V1065 = ISZERO V1064
0xaf5: V1066 = 0xafd
0xaf8: JUMPI 0xafd V1065
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaf9
[0xaf9:0xafc]
---
Predecessors: [0xaf2]
Successors: []
---
0xaf9 PUSH1 0x0
0xafb DUP1
0xafc REVERT
---
0xaf9: V1067 = 0x0
0xafc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xafd
[0xafd:0xb04]
---
Predecessors: [0xaf2]
Successors: [0xd6b]
---
0xafd JUMPDEST
0xafe PUSH2 0x8e2
0xb01 PUSH2 0xd6b
0xb04 JUMP
---
0xafd: JUMPDEST 
0xafe: V1068 = 0x8e2
0xb01: V1069 = 0xd6b
0xb04: JUMP 0xd6b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8e2]
Exit stack: [V12, 0x8e2]

================================

Block 0xb05
[0xb05:0xb18]
---
Predecessors: []
Successors: []
---
0xb05 JUMPDEST
0xb06 PUSH1 0x40
0xb08 MLOAD
0xb09 SWAP1
0xb0a ISZERO
0xb0b ISZERO
0xb0c DUP2
0xb0d MSTORE
0xb0e PUSH1 0x20
0xb10 ADD
0xb11 PUSH1 0x40
0xb13 MLOAD
0xb14 DUP1
0xb15 SWAP2
0xb16 SUB
0xb17 SWAP1
0xb18 RETURN
---
0xb05: JUMPDEST 
0xb06: V1070 = 0x40
0xb08: V1071 = M[0x40]
0xb0a: V1072 = ISZERO S0
0xb0b: V1073 = ISZERO V1072
0xb0d: M[V1071] = V1073
0xb0e: V1074 = 0x20
0xb10: V1075 = ADD 0x20 V1071
0xb11: V1076 = 0x40
0xb13: V1077 = M[0x40]
0xb16: V1078 = SUB V1075 V1077
0xb18: RETURN V1077 V1078
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb19
[0xb19:0xb1f]
---
Predecessors: [0x143]
Successors: [0xb20, 0xb24]
---
0xb19 JUMPDEST
0xb1a CALLVALUE
0xb1b ISZERO
0xb1c PUSH2 0xb24
0xb1f JUMPI
---
0xb19: JUMPDEST 
0xb1a: V1079 = CALLVALUE
0xb1b: V1080 = ISZERO V1079
0xb1c: V1081 = 0xb24
0xb1f: JUMPI 0xb24 V1080
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb20
[0xb20:0xb23]
---
Predecessors: [0xb19]
Successors: []
---
0xb20 PUSH1 0x0
0xb22 DUP1
0xb23 REVERT
---
0xb20: V1082 = 0x0
0xb23: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb24
[0xb24:0xb2b]
---
Predecessors: [0xb19]
Successors: [0xd79]
---
0xb24 JUMPDEST
0xb25 PUSH2 0x8e2
0xb28 PUSH2 0xd79
0xb2b JUMP
---
0xb24: JUMPDEST 
0xb25: V1083 = 0x8e2
0xb28: V1084 = 0xd79
0xb2b: JUMP 0xd79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8e2]
Exit stack: [V12, 0x8e2]

================================

Block 0xb2c
[0xb2c:0xb3f]
---
Predecessors: []
Successors: []
---
0xb2c JUMPDEST
0xb2d PUSH1 0x40
0xb2f MLOAD
0xb30 SWAP1
0xb31 ISZERO
0xb32 ISZERO
0xb33 DUP2
0xb34 MSTORE
0xb35 PUSH1 0x20
0xb37 ADD
0xb38 PUSH1 0x40
0xb3a MLOAD
0xb3b DUP1
0xb3c SWAP2
0xb3d SUB
0xb3e SWAP1
0xb3f RETURN
---
0xb2c: JUMPDEST 
0xb2d: V1085 = 0x40
0xb2f: V1086 = M[0x40]
0xb31: V1087 = ISZERO S0
0xb32: V1088 = ISZERO V1087
0xb34: M[V1086] = V1088
0xb35: V1089 = 0x20
0xb37: V1090 = ADD 0x20 V1086
0xb38: V1091 = 0x40
0xb3a: V1092 = M[0x40]
0xb3d: V1093 = SUB V1090 V1092
0xb3f: RETURN V1092 V1093
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb40
[0xb40:0xb46]
---
Predecessors: [0x14e]
Successors: [0xb47, 0xb4b]
---
0xb40 JUMPDEST
0xb41 CALLVALUE
0xb42 ISZERO
0xb43 PUSH2 0xb4b
0xb46 JUMPI
---
0xb40: JUMPDEST 
0xb41: V1094 = CALLVALUE
0xb42: V1095 = ISZERO V1094
0xb43: V1096 = 0xb4b
0xb46: JUMPI 0xb4b V1095
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb47
[0xb47:0xb4a]
---
Predecessors: [0xb40]
Successors: []
---
0xb47 PUSH1 0x0
0xb49 DUP1
0xb4a REVERT
---
0xb47: V1097 = 0x0
0xb4a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb4b
[0xb4b:0xb52]
---
Predecessors: [0xb40]
Successors: [0xd82]
---
0xb4b JUMPDEST
0xb4c PUSH2 0x764
0xb4f PUSH2 0xd82
0xb52 JUMP
---
0xb4b: JUMPDEST 
0xb4c: V1098 = 0x764
0xb4f: V1099 = 0xd82
0xb52: JUMP 0xd82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x764]
Exit stack: [V12, 0x764]

================================

Block 0xb53
[0xb53:0xb54]
---
Predecessors: []
Successors: []
---
0xb53 JUMPDEST
0xb54 STOP
---
0xb53: JUMPDEST 
0xb54: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb55
[0xb55:0xb5b]
---
Predecessors: [0x159]
Successors: [0xb5c, 0xb60]
---
0xb55 JUMPDEST
0xb56 CALLVALUE
0xb57 ISZERO
0xb58 PUSH2 0xb60
0xb5b JUMPI
---
0xb55: JUMPDEST 
0xb56: V1100 = CALLVALUE
0xb57: V1101 = ISZERO V1100
0xb58: V1102 = 0xb60
0xb5b: JUMPI 0xb60 V1101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5c
[0xb5c:0xb5f]
---
Predecessors: [0xb55]
Successors: []
---
0xb5c PUSH1 0x0
0xb5e DUP1
0xb5f REVERT
---
0xb5c: V1103 = 0x0
0xb5f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb60
[0xb60:0xb67]
---
Predecessors: [0xb55]
Successors: [0xdae]
---
0xb60 JUMPDEST
0xb61 PUSH2 0x764
0xb64 PUSH2 0xdae
0xb67 JUMP
---
0xb60: JUMPDEST 
0xb61: V1104 = 0x764
0xb64: V1105 = 0xdae
0xb67: JUMP 0xdae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x764]
Exit stack: [V12, 0x764]

================================

Block 0xb68
[0xb68:0xb69]
---
Predecessors: []
Successors: []
---
0xb68 JUMPDEST
0xb69 STOP
---
0xb68: JUMPDEST 
0xb69: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6a
[0xb6a:0xb73]
---
Predecessors: [0x75c]
Successors: [0xb74, 0xbb1]
---
0xb6a JUMPDEST
0xb6b PUSH1 0x2
0xb6d SLOAD
0xb6e TIMESTAMP
0xb6f LT
0xb70 PUSH2 0xbb1
0xb73 JUMPI
---
0xb6a: JUMPDEST 
0xb6b: V1106 = 0x2
0xb6d: V1107 = S[0x2]
0xb6e: V1108 = TIMESTAMP
0xb6f: V1109 = LT V1108 V1107
0xb70: V1110 = 0xbb1
0xb73: JUMPI 0xbb1 V1109
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xb74
[0xb74:0xb80]
---
Predecessors: [0xb6a]
Successors: [0xb81, 0xb8e]
---
0xb74 PUSH1 0x5
0xb76 SLOAD
0xb77 PUSH1 0x8
0xb79 SLOAD
0xb7a LT
0xb7b ISZERO
0xb7c DUP1
0xb7d PUSH2 0xb8e
0xb80 JUMPI
---
0xb74: V1111 = 0x5
0xb76: V1112 = S[0x5]
0xb77: V1113 = 0x8
0xb79: V1114 = S[0x8]
0xb7a: V1115 = LT V1114 V1112
0xb7b: V1116 = ISZERO V1115
0xb7d: V1117 = 0xb8e
0xb80: JUMPI 0xb8e V1116
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: [V1116]
Exit stack: [V12, 0x764, V1116]

================================

Block 0xb81
[0xb81:0xb8d]
---
Predecessors: [0xb74]
Successors: [0xb8e]
---
0xb81 POP
0xb82 PUSH1 0x14
0xb84 SLOAD
0xb85 PUSH3 0x10000
0xb89 SWAP1
0xb8a DIV
0xb8b PUSH1 0xff
0xb8d AND
---
0xb82: V1118 = 0x14
0xb84: V1119 = S[0x14]
0xb85: V1120 = 0x10000
0xb8a: V1121 = DIV V1119 0x10000
0xb8b: V1122 = 0xff
0xb8d: V1123 = AND 0xff V1121
---
Entry stack: [V12, 0x764, V1116]
Stack pops: 1
Stack additions: [V1123]
Exit stack: [V12, 0x764, V1123]

================================

Block 0xb8e
[0xb8e:0xb93]
---
Predecessors: [0xb74, 0xb81]
Successors: [0xb94, 0xba1]
---
0xb8e JUMPDEST
0xb8f ISZERO
0xb90 PUSH2 0xba1
0xb93 JUMPI
---
0xb8e: JUMPDEST 
0xb8f: V1124 = ISZERO S0
0xb90: V1125 = 0xba1
0xb93: JUMPI 0xba1 V1124
---
Entry stack: [V12, 0x764, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xb94
[0xb94:0xba0]
---
Predecessors: [0xb8e]
Successors: [0xba1]
---
0xb94 PUSH1 0x14
0xb96 DUP1
0xb97 SLOAD
0xb98 PUSH1 0xff
0xb9a NOT
0xb9b AND
0xb9c PUSH1 0x1
0xb9e OR
0xb9f SWAP1
0xba0 SSTORE
---
0xb94: V1126 = 0x14
0xb97: V1127 = S[0x14]
0xb98: V1128 = 0xff
0xb9a: V1129 = NOT 0xff
0xb9b: V1130 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1127
0xb9c: V1131 = 0x1
0xb9e: V1132 = OR 0x1 V1130
0xba0: S[0x14] = V1132
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xba1
[0xba1:0xbb0]
---
Predecessors: [0xb8e, 0xb94]
Successors: [0xbb1]
---
0xba1 JUMPDEST
0xba2 PUSH1 0x14
0xba4 DUP1
0xba5 SLOAD
0xba6 PUSH2 0xff00
0xba9 NOT
0xbaa AND
0xbab PUSH2 0x100
0xbae OR
0xbaf SWAP1
0xbb0 SSTORE
---
0xba1: JUMPDEST 
0xba2: V1133 = 0x14
0xba5: V1134 = S[0x14]
0xba6: V1135 = 0xff00
0xba9: V1136 = NOT 0xff00
0xbaa: V1137 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1134
0xbab: V1138 = 0x100
0xbae: V1139 = OR 0x100 V1137
0xbb0: S[0x14] = V1139
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xbb1
[0xbb1:0xbb1]
---
Predecessors: [0xb6a, 0xba1, 0xc79, 0xd08, 0xd2f, 0xd82]
Successors: [0xbb2]
---
0xbb1 JUMPDEST
---
0xbb1: JUMPDEST 
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xbb2
[0xbb2:0xbb2]
---
Predecessors: [0xbb1]
Successors: [0xbb3]
---
0xbb2 JUMPDEST
---
0xbb2: JUMPDEST 
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xbb3
[0xbb3:0xbb4]
---
Predecessors: [0xbb2]
Successors: [0x764]
---
0xbb3 JUMPDEST
0xbb4 JUMP
---
0xbb3: JUMPDEST 
0xbb4: JUMP 0x764
---
Entry stack: [V12, 0x764]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xbb5
[0xbb5:0xbba]
---
Predecessors: [0x771]
Successors: [0x779]
---
0xbb5 JUMPDEST
0xbb6 PUSH1 0x0
0xbb8 SLOAD
0xbb9 DUP2
0xbba JUMP
---
0xbb5: JUMPDEST 
0xbb6: V1140 = 0x0
0xbb8: V1141 = S[0x0]
0xbba: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1141]
Exit stack: [V12, 0x779, V1141]

================================

Block 0xbbb
[0xbbb:0xbc4]
---
Predecessors: [0x796]
Successors: [0xbc5, 0xc46]
---
0xbbb JUMPDEST
0xbbc PUSH1 0x2
0xbbe SLOAD
0xbbf TIMESTAMP
0xbc0 LT
0xbc1 PUSH2 0xc46
0xbc4 JUMPI
---
0xbbb: JUMPDEST 
0xbbc: V1142 = 0x2
0xbbe: V1143 = S[0x2]
0xbbf: V1144 = TIMESTAMP
0xbc0: V1145 = LT V1144 V1143
0xbc1: V1146 = 0xc46
0xbc4: JUMPI 0xc46 V1145
---
Entry stack: [V12, 0x764, V756]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, V756]

================================

Block 0xbc5
[0xbc5:0xbdb]
---
Predecessors: [0xbbb]
Successors: [0xbdc, 0xc46]
---
0xbc5 PUSH1 0x4
0xbc7 SLOAD
0xbc8 CALLER
0xbc9 PUSH1 0x1
0xbcb PUSH1 0xa0
0xbcd PUSH1 0x2
0xbcf EXP
0xbd0 SUB
0xbd1 SWAP1
0xbd2 DUP2
0xbd3 AND
0xbd4 SWAP2
0xbd5 AND
0xbd6 EQ
0xbd7 ISZERO
0xbd8 PUSH2 0xc46
0xbdb JUMPI
---
0xbc5: V1147 = 0x4
0xbc7: V1148 = S[0x4]
0xbc8: V1149 = CALLER
0xbc9: V1150 = 0x1
0xbcb: V1151 = 0xa0
0xbcd: V1152 = 0x2
0xbcf: V1153 = EXP 0x2 0xa0
0xbd0: V1154 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd3: V1155 = AND 0xffffffffffffffffffffffffffffffffffffffff V1149
0xbd5: V1156 = AND V1148 0xffffffffffffffffffffffffffffffffffffffff
0xbd6: V1157 = EQ V1156 V1155
0xbd7: V1158 = ISZERO V1157
0xbd8: V1159 = 0xc46
0xbdb: JUMPI 0xc46 V1158
---
Entry stack: [V12, 0x764, V756]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, V756]

================================

Block 0xbdc
[0xbdc:0xc2c]
---
Predecessors: [0xbc5]
Successors: [0xc2d, 0xc31]
---
0xbdc PUSH1 0x12
0xbde SLOAD
0xbdf PUSH1 0x1
0xbe1 PUSH1 0xa0
0xbe3 PUSH1 0x2
0xbe5 EXP
0xbe6 SUB
0xbe7 AND
0xbe8 PUSH4 0xa9059cbb
0xbed CALLER
0xbee DUP4
0xbef PUSH1 0x40
0xbf1 MLOAD
0xbf2 PUSH1 0xe0
0xbf4 PUSH1 0x2
0xbf6 EXP
0xbf7 PUSH4 0xffffffff
0xbfc DUP6
0xbfd AND
0xbfe MUL
0xbff DUP2
0xc00 MSTORE
0xc01 PUSH1 0x1
0xc03 PUSH1 0xa0
0xc05 PUSH1 0x2
0xc07 EXP
0xc08 SUB
0xc09 SWAP1
0xc0a SWAP3
0xc0b AND
0xc0c PUSH1 0x4
0xc0e DUP4
0xc0f ADD
0xc10 MSTORE
0xc11 PUSH1 0x24
0xc13 DUP3
0xc14 ADD
0xc15 MSTORE
0xc16 PUSH1 0x44
0xc18 ADD
0xc19 PUSH1 0x0
0xc1b PUSH1 0x40
0xc1d MLOAD
0xc1e DUP1
0xc1f DUP4
0xc20 SUB
0xc21 DUP2
0xc22 PUSH1 0x0
0xc24 DUP8
0xc25 DUP1
0xc26 EXTCODESIZE
0xc27 ISZERO
0xc28 ISZERO
0xc29 PUSH2 0xc31
0xc2c JUMPI
---
0xbdc: V1160 = 0x12
0xbde: V1161 = S[0x12]
0xbdf: V1162 = 0x1
0xbe1: V1163 = 0xa0
0xbe3: V1164 = 0x2
0xbe5: V1165 = EXP 0x2 0xa0
0xbe6: V1166 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe7: V1167 = AND 0xffffffffffffffffffffffffffffffffffffffff V1161
0xbe8: V1168 = 0xa9059cbb
0xbed: V1169 = CALLER
0xbef: V1170 = 0x40
0xbf1: V1171 = M[0x40]
0xbf2: V1172 = 0xe0
0xbf4: V1173 = 0x2
0xbf6: V1174 = EXP 0x2 0xe0
0xbf7: V1175 = 0xffffffff
0xbfd: V1176 = AND 0xa9059cbb 0xffffffff
0xbfe: V1177 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc00: M[V1171] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc01: V1178 = 0x1
0xc03: V1179 = 0xa0
0xc05: V1180 = 0x2
0xc07: V1181 = EXP 0x2 0xa0
0xc08: V1182 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0b: V1183 = AND V1169 0xffffffffffffffffffffffffffffffffffffffff
0xc0c: V1184 = 0x4
0xc0f: V1185 = ADD V1171 0x4
0xc10: M[V1185] = V1183
0xc11: V1186 = 0x24
0xc14: V1187 = ADD V1171 0x24
0xc15: M[V1187] = V756
0xc16: V1188 = 0x44
0xc18: V1189 = ADD 0x44 V1171
0xc19: V1190 = 0x0
0xc1b: V1191 = 0x40
0xc1d: V1192 = M[0x40]
0xc20: V1193 = SUB V1189 V1192
0xc22: V1194 = 0x0
0xc26: V1195 = EXTCODESIZE V1167
0xc27: V1196 = ISZERO V1195
0xc28: V1197 = ISZERO V1196
0xc29: V1198 = 0xc31
0xc2c: JUMPI 0xc31 V1197
---
Entry stack: [V12, 0x764, V756]
Stack pops: 1
Stack additions: [S0, V1167, 0xa9059cbb, V1189, 0x0, V1192, V1193, V1192, 0x0, V1167]
Exit stack: [V12, 0x764, V756, V1167, 0xa9059cbb, V1189, 0x0, V1192, V1193, V1192, 0x0, V1167]

================================

Block 0xc2d
[0xc2d:0xc30]
---
Predecessors: [0xbdc]
Successors: []
---
0xc2d PUSH1 0x0
0xc2f DUP1
0xc30 REVERT
---
0xc2d: V1199 = 0x0
0xc30: REVERT 0x0 0x0
---
Entry stack: [V12, 0x764, V756, V1167, 0xa9059cbb, V1189, 0x0, V1192, V1193, V1192, 0x0, V1167]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, V756, V1167, 0xa9059cbb, V1189, 0x0, V1192, V1193, V1192, 0x0, V1167]

================================

Block 0xc31
[0xc31:0xc3d]
---
Predecessors: [0xbdc]
Successors: [0xc3e, 0xc42]
---
0xc31 JUMPDEST
0xc32 PUSH2 0x2c6
0xc35 GAS
0xc36 SUB
0xc37 CALL
0xc38 ISZERO
0xc39 ISZERO
0xc3a PUSH2 0xc42
0xc3d JUMPI
---
0xc31: JUMPDEST 
0xc32: V1200 = 0x2c6
0xc35: V1201 = GAS
0xc36: V1202 = SUB V1201 0x2c6
0xc37: V1203 = CALL V1202 V1167 0x0 V1192 V1193 V1192 0x0
0xc38: V1204 = ISZERO V1203
0xc39: V1205 = ISZERO V1204
0xc3a: V1206 = 0xc42
0xc3d: JUMPI 0xc42 V1205
---
Entry stack: [V12, 0x764, V756, V1167, 0xa9059cbb, V1189, 0x0, V1192, V1193, V1192, 0x0, V1167]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x764, V756, V1167, 0xa9059cbb, V1189]

================================

Block 0xc3e
[0xc3e:0xc41]
---
Predecessors: [0xc31]
Successors: []
---
0xc3e PUSH1 0x0
0xc40 DUP1
0xc41 REVERT
---
0xc3e: V1207 = 0x0
0xc41: REVERT 0x0 0x0
---
Entry stack: [V12, 0x764, V756, V1167, 0xa9059cbb, V1189]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, V756, V1167, 0xa9059cbb, V1189]

================================

Block 0xc42
[0xc42:0xc45]
---
Predecessors: [0xc31]
Successors: [0xc46]
---
0xc42 JUMPDEST
0xc43 POP
0xc44 POP
0xc45 POP
---
0xc42: JUMPDEST 
---
Entry stack: [V12, 0x764, V756, V1167, 0xa9059cbb, V1189]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x764, V756]

================================

Block 0xc46
[0xc46:0xc46]
---
Predecessors: [0xbbb, 0xbc5, 0xc42, 0xdae, 0xe9d, 0xed6]
Successors: [0xc47]
---
0xc46 JUMPDEST
---
0xc46: JUMPDEST 
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xc47
[0xc47:0xc47]
---
Predecessors: [0xc46]
Successors: [0xc48]
---
0xc47 JUMPDEST
---
0xc47: JUMPDEST 
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xc48
[0xc48:0xc48]
---
Predecessors: [0xc47]
Successors: [0xc49]
---
0xc48 JUMPDEST
---
0xc48: JUMPDEST 
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xc49
[0xc49:0xc4b]
---
Predecessors: [0xc48]
Successors: [0x764]
---
0xc49 JUMPDEST
0xc4a POP
0xc4b JUMP
---
0xc49: JUMPDEST 
0xc4b: JUMP 0x764
---
Entry stack: [V12, 0x764, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4c
[0xc4c:0xc51]
---
Predecessors: [0x7ae]
Successors: [0x779]
---
0xc4c JUMPDEST
0xc4d PUSH1 0x2
0xc4f SLOAD
0xc50 DUP2
0xc51 JUMP
---
0xc4c: JUMPDEST 
0xc4d: V1208 = 0x2
0xc4f: V1209 = S[0x2]
0xc51: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1209]
Exit stack: [V12, 0x779, V1209]

================================

Block 0xc52
[0xc52:0xc57]
---
Predecessors: [0x7d3]
Successors: [0x779]
---
0xc52 JUMPDEST
0xc53 PUSH1 0x5
0xc55 SLOAD
0xc56 DUP2
0xc57 JUMP
---
0xc52: JUMPDEST 
0xc53: V1210 = 0x5
0xc55: V1211 = S[0x5]
0xc57: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1211]
Exit stack: [V12, 0x779, V1211]

================================

Block 0xc58
[0xc58:0xc5d]
---
Predecessors: [0x7f8]
Successors: [0x779]
---
0xc58 JUMPDEST
0xc59 PUSH1 0xf
0xc5b SLOAD
0xc5c DUP2
0xc5d JUMP
---
0xc58: JUMPDEST 
0xc59: V1212 = 0xf
0xc5b: V1213 = S[0xf]
0xc5d: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1213]
Exit stack: [V12, 0x779, V1213]

================================

Block 0xc5e
[0xc5e:0xc6c]
---
Predecessors: [0x81d]
Successors: [0x825]
---
0xc5e JUMPDEST
0xc5f PUSH1 0x3
0xc61 SLOAD
0xc62 PUSH1 0x1
0xc64 PUSH1 0xa0
0xc66 PUSH1 0x2
0xc68 EXP
0xc69 SUB
0xc6a AND
0xc6b DUP2
0xc6c JUMP
---
0xc5e: JUMPDEST 
0xc5f: V1214 = 0x3
0xc61: V1215 = S[0x3]
0xc62: V1216 = 0x1
0xc64: V1217 = 0xa0
0xc66: V1218 = 0x2
0xc68: V1219 = EXP 0x2 0xa0
0xc69: V1220 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6a: V1221 = AND 0xffffffffffffffffffffffffffffffffffffffff V1215
0xc6c: JUMP 0x825
---
Entry stack: [V12, 0x825]
Stack pops: 1
Stack additions: [S0, V1221]
Exit stack: [V12, 0x825, V1221]

================================

Block 0xc6d
[0xc6d:0xc72]
---
Predecessors: [0x84c]
Successors: [0x779]
---
0xc6d JUMPDEST
0xc6e PUSH1 0xd
0xc70 SLOAD
0xc71 DUP2
0xc72 JUMP
---
0xc6d: JUMPDEST 
0xc6e: V1222 = 0xd
0xc70: V1223 = S[0xd]
0xc72: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1223]
Exit stack: [V12, 0x779, V1223]

================================

Block 0xc73
[0xc73:0xc78]
---
Predecessors: [0x871]
Successors: [0x779]
---
0xc73 JUMPDEST
0xc74 PUSH1 0x10
0xc76 SLOAD
0xc77 DUP2
0xc78 JUMP
---
0xc73: JUMPDEST 
0xc74: V1224 = 0x10
0xc76: V1225 = S[0x10]
0xc78: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1225]
Exit stack: [V12, 0x779, V1225]

================================

Block 0xc79
[0xc79:0xc90]
---
Predecessors: [0x896]
Successors: [0xbb1, 0xc91]
---
0xc79 JUMPDEST
0xc7a PUSH1 0x4
0xc7c SLOAD
0xc7d CALLER
0xc7e PUSH1 0x1
0xc80 PUSH1 0xa0
0xc82 PUSH1 0x2
0xc84 EXP
0xc85 SUB
0xc86 SWAP1
0xc87 DUP2
0xc88 AND
0xc89 SWAP2
0xc8a AND
0xc8b EQ
0xc8c ISZERO
0xc8d PUSH2 0xbb1
0xc90 JUMPI
---
0xc79: JUMPDEST 
0xc7a: V1226 = 0x4
0xc7c: V1227 = S[0x4]
0xc7d: V1228 = CALLER
0xc7e: V1229 = 0x1
0xc80: V1230 = 0xa0
0xc82: V1231 = 0x2
0xc84: V1232 = EXP 0x2 0xa0
0xc85: V1233 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc88: V1234 = AND 0xffffffffffffffffffffffffffffffffffffffff V1228
0xc8a: V1235 = AND V1227 0xffffffffffffffffffffffffffffffffffffffff
0xc8b: V1236 = EQ V1235 V1234
0xc8c: V1237 = ISZERO V1236
0xc8d: V1238 = 0xbb1
0xc90: JUMPI 0xbb1 V1237
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xc91
[0xc91:0xc9b]
---
Predecessors: [0xc79]
Successors: [0xc9c]
---
0xc91 PUSH1 0x14
0xc93 DUP1
0xc94 SLOAD
0xc95 PUSH2 0xff00
0xc98 NOT
0xc99 AND
0xc9a SWAP1
0xc9b SSTORE
---
0xc91: V1239 = 0x14
0xc94: V1240 = S[0x14]
0xc95: V1241 = 0xff00
0xc98: V1242 = NOT 0xff00
0xc99: V1243 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1240
0xc9b: S[0x14] = V1243
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xc9c
[0xc9c:0xc9c]
---
Predecessors: [0xc91]
Successors: [0xc9d]
---
0xc9c JUMPDEST
---
0xc9c: JUMPDEST 
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xc9d
[0xc9d:0xc9e]
---
Predecessors: [0xc9c]
Successors: [0x764]
---
0xc9d JUMPDEST
0xc9e JUMP
---
0xc9d: JUMPDEST 
0xc9e: JUMP 0x764
---
Entry stack: [V12, 0x764]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc9f
[0xc9f:0xcad]
---
Predecessors: [0x8ab]
Successors: [0x825]
---
0xc9f JUMPDEST
0xca0 PUSH1 0x4
0xca2 SLOAD
0xca3 PUSH1 0x1
0xca5 PUSH1 0xa0
0xca7 PUSH1 0x2
0xca9 EXP
0xcaa SUB
0xcab AND
0xcac DUP2
0xcad JUMP
---
0xc9f: JUMPDEST 
0xca0: V1244 = 0x4
0xca2: V1245 = S[0x4]
0xca3: V1246 = 0x1
0xca5: V1247 = 0xa0
0xca7: V1248 = 0x2
0xca9: V1249 = EXP 0x2 0xa0
0xcaa: V1250 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcab: V1251 = AND 0xffffffffffffffffffffffffffffffffffffffff V1245
0xcad: JUMP 0x825
---
Entry stack: [V12, 0x825]
Stack pops: 1
Stack additions: [S0, V1251]
Exit stack: [V12, 0x825, V1251]

================================

Block 0xcae
[0xcae:0xcbc]
---
Predecessors: [0x8da]
Successors: [0x8e2]
---
0xcae JUMPDEST
0xcaf PUSH1 0x14
0xcb1 SLOAD
0xcb2 PUSH3 0x10000
0xcb6 SWAP1
0xcb7 DIV
0xcb8 PUSH1 0xff
0xcba AND
0xcbb DUP2
0xcbc JUMP
---
0xcae: JUMPDEST 
0xcaf: V1252 = 0x14
0xcb1: V1253 = S[0x14]
0xcb2: V1254 = 0x10000
0xcb7: V1255 = DIV V1253 0x10000
0xcb8: V1256 = 0xff
0xcba: V1257 = AND 0xff V1255
0xcbc: JUMP 0x8e2
---
Entry stack: [V12, 0x8e2]
Stack pops: 1
Stack additions: [S0, V1257]
Exit stack: [V12, 0x8e2, V1257]

================================

Block 0xcbd
[0xcbd:0xccb]
---
Predecessors: [0x901]
Successors: [0x825]
---
0xcbd JUMPDEST
0xcbe PUSH1 0x12
0xcc0 SLOAD
0xcc1 PUSH1 0x1
0xcc3 PUSH1 0xa0
0xcc5 PUSH1 0x2
0xcc7 EXP
0xcc8 SUB
0xcc9 AND
0xcca DUP2
0xccb JUMP
---
0xcbd: JUMPDEST 
0xcbe: V1258 = 0x12
0xcc0: V1259 = S[0x12]
0xcc1: V1260 = 0x1
0xcc3: V1261 = 0xa0
0xcc5: V1262 = 0x2
0xcc7: V1263 = EXP 0x2 0xa0
0xcc8: V1264 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc9: V1265 = AND 0xffffffffffffffffffffffffffffffffffffffff V1259
0xccb: JUMP 0x825
---
Entry stack: [V12, 0x825]
Stack pops: 1
Stack additions: [S0, V1265]
Exit stack: [V12, 0x825, V1265]

================================

Block 0xccc
[0xccc:0xcdd]
---
Predecessors: [0x930]
Successors: [0x779]
---
0xccc JUMPDEST
0xccd PUSH1 0x13
0xccf PUSH1 0x20
0xcd1 MSTORE
0xcd2 PUSH1 0x0
0xcd4 SWAP1
0xcd5 DUP2
0xcd6 MSTORE
0xcd7 PUSH1 0x40
0xcd9 SWAP1
0xcda SHA3
0xcdb SLOAD
0xcdc DUP2
0xcdd JUMP
---
0xccc: JUMPDEST 
0xccd: V1266 = 0x13
0xccf: V1267 = 0x20
0xcd1: M[0x20] = 0x13
0xcd2: V1268 = 0x0
0xcd6: M[0x0] = V913
0xcd7: V1269 = 0x40
0xcda: V1270 = SHA3 0x0 0x40
0xcdb: V1271 = S[V1270]
0xcdd: JUMP 0x779
---
Entry stack: [V12, 0x779, V913]
Stack pops: 2
Stack additions: [S1, V1271]
Exit stack: [V12, 0x779, V1271]

================================

Block 0xcde
[0xcde:0xce3]
---
Predecessors: [0x961]
Successors: [0x779]
---
0xcde JUMPDEST
0xcdf PUSH1 0x7
0xce1 SLOAD
0xce2 DUP2
0xce3 JUMP
---
0xcde: JUMPDEST 
0xcdf: V1272 = 0x7
0xce1: V1273 = S[0x7]
0xce3: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1273]
Exit stack: [V12, 0x779, V1273]

================================

Block 0xce4
[0xce4:0xce9]
---
Predecessors: [0x986]
Successors: [0x779]
---
0xce4 JUMPDEST
0xce5 PUSH1 0x8
0xce7 SLOAD
0xce8 DUP2
0xce9 JUMP
---
0xce4: JUMPDEST 
0xce5: V1274 = 0x8
0xce7: V1275 = S[0x8]
0xce9: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1275]
Exit stack: [V12, 0x779, V1275]

================================

Block 0xcea
[0xcea:0xcef]
---
Predecessors: [0x9ab]
Successors: [0x779]
---
0xcea JUMPDEST
0xceb PUSH1 0x11
0xced SLOAD
0xcee DUP2
0xcef JUMP
---
0xcea: JUMPDEST 
0xceb: V1276 = 0x11
0xced: V1277 = S[0x11]
0xcef: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1277]
Exit stack: [V12, 0x779, V1277]

================================

Block 0xcf0
[0xcf0:0xcf5]
---
Predecessors: [0x9d0]
Successors: [0x779]
---
0xcf0 JUMPDEST
0xcf1 PUSH1 0x1
0xcf3 SLOAD
0xcf4 DUP2
0xcf5 JUMP
---
0xcf0: JUMPDEST 
0xcf1: V1278 = 0x1
0xcf3: V1279 = S[0x1]
0xcf5: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1279]
Exit stack: [V12, 0x779, V1279]

================================

Block 0xcf6
[0xcf6:0xcfb]
---
Predecessors: [0x9f5]
Successors: [0x779]
---
0xcf6 JUMPDEST
0xcf7 PUSH1 0xe
0xcf9 SLOAD
0xcfa DUP2
0xcfb JUMP
---
0xcf6: JUMPDEST 
0xcf7: V1280 = 0xe
0xcf9: V1281 = S[0xe]
0xcfb: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1281]
Exit stack: [V12, 0x779, V1281]

================================

Block 0xcfc
[0xcfc:0xd01]
---
Predecessors: [0xa1a]
Successors: [0x779]
---
0xcfc JUMPDEST
0xcfd PUSH1 0x9
0xcff SLOAD
0xd00 DUP2
0xd01 JUMP
---
0xcfc: JUMPDEST 
0xcfd: V1282 = 0x9
0xcff: V1283 = S[0x9]
0xd01: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1283]
Exit stack: [V12, 0x779, V1283]

================================

Block 0xd02
[0xd02:0xd07]
---
Predecessors: [0xa3f]
Successors: [0x779]
---
0xd02 JUMPDEST
0xd03 PUSH1 0xa
0xd05 SLOAD
0xd06 DUP2
0xd07 JUMP
---
0xd02: JUMPDEST 
0xd03: V1284 = 0xa
0xd05: V1285 = S[0xa]
0xd07: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1285]
Exit stack: [V12, 0x779, V1285]

================================

Block 0xd08
[0xd08:0xd1f]
---
Predecessors: [0xa64]
Successors: [0xbb1, 0xd20]
---
0xd08 JUMPDEST
0xd09 PUSH1 0x4
0xd0b SLOAD
0xd0c CALLER
0xd0d PUSH1 0x1
0xd0f PUSH1 0xa0
0xd11 PUSH1 0x2
0xd13 EXP
0xd14 SUB
0xd15 SWAP1
0xd16 DUP2
0xd17 AND
0xd18 SWAP2
0xd19 AND
0xd1a EQ
0xd1b ISZERO
0xd1c PUSH2 0xbb1
0xd1f JUMPI
---
0xd08: JUMPDEST 
0xd09: V1286 = 0x4
0xd0b: V1287 = S[0x4]
0xd0c: V1288 = CALLER
0xd0d: V1289 = 0x1
0xd0f: V1290 = 0xa0
0xd11: V1291 = 0x2
0xd13: V1292 = EXP 0x2 0xa0
0xd14: V1293 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd17: V1294 = AND 0xffffffffffffffffffffffffffffffffffffffff V1288
0xd19: V1295 = AND V1287 0xffffffffffffffffffffffffffffffffffffffff
0xd1a: V1296 = EQ V1295 V1294
0xd1b: V1297 = ISZERO V1296
0xd1c: V1298 = 0xbb1
0xd1f: JUMPI 0xbb1 V1297
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xd20
[0xd20:0xd2b]
---
Predecessors: [0xd08]
Successors: [0xd2c]
---
0xd20 PUSH1 0x14
0xd22 DUP1
0xd23 SLOAD
0xd24 PUSH3 0xff0000
0xd28 NOT
0xd29 AND
0xd2a SWAP1
0xd2b SSTORE
---
0xd20: V1299 = 0x14
0xd23: V1300 = S[0x14]
0xd24: V1301 = 0xff0000
0xd28: V1302 = NOT 0xff0000
0xd29: V1303 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1300
0xd2b: S[0x14] = V1303
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xd2c
[0xd2c:0xd2c]
---
Predecessors: [0xd20]
Successors: [0xd2d]
---
0xd2c JUMPDEST
---
0xd2c: JUMPDEST 
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xd2d
[0xd2d:0xd2e]
---
Predecessors: [0xd2c]
Successors: [0x764]
---
0xd2d JUMPDEST
0xd2e JUMP
---
0xd2d: JUMPDEST 
0xd2e: JUMP 0x764
---
Entry stack: [V12, 0x764]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd2f
[0xd2f:0xd46]
---
Predecessors: [0xa79]
Successors: [0xbb1, 0xd47]
---
0xd2f JUMPDEST
0xd30 PUSH1 0x4
0xd32 SLOAD
0xd33 CALLER
0xd34 PUSH1 0x1
0xd36 PUSH1 0xa0
0xd38 PUSH1 0x2
0xd3a EXP
0xd3b SUB
0xd3c SWAP1
0xd3d DUP2
0xd3e AND
0xd3f SWAP2
0xd40 AND
0xd41 EQ
0xd42 ISZERO
0xd43 PUSH2 0xbb1
0xd46 JUMPI
---
0xd2f: JUMPDEST 
0xd30: V1304 = 0x4
0xd32: V1305 = S[0x4]
0xd33: V1306 = CALLER
0xd34: V1307 = 0x1
0xd36: V1308 = 0xa0
0xd38: V1309 = 0x2
0xd3a: V1310 = EXP 0x2 0xa0
0xd3b: V1311 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3e: V1312 = AND 0xffffffffffffffffffffffffffffffffffffffff V1306
0xd40: V1313 = AND V1305 0xffffffffffffffffffffffffffffffffffffffff
0xd41: V1314 = EQ V1313 V1312
0xd42: V1315 = ISZERO V1314
0xd43: V1316 = 0xbb1
0xd46: JUMPI 0xbb1 V1315
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xd47
[0xd47:0xd55]
---
Predecessors: [0xd2f]
Successors: [0xd56]
---
0xd47 PUSH1 0x14
0xd49 DUP1
0xd4a SLOAD
0xd4b PUSH2 0xff00
0xd4e NOT
0xd4f AND
0xd50 PUSH2 0x100
0xd53 OR
0xd54 SWAP1
0xd55 SSTORE
---
0xd47: V1317 = 0x14
0xd4a: V1318 = S[0x14]
0xd4b: V1319 = 0xff00
0xd4e: V1320 = NOT 0xff00
0xd4f: V1321 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1318
0xd50: V1322 = 0x100
0xd53: V1323 = OR 0x100 V1321
0xd55: S[0x14] = V1323
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xd56
[0xd56:0xd56]
---
Predecessors: [0xd47]
Successors: [0xd57]
---
0xd56 JUMPDEST
---
0xd56: JUMPDEST 
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xd57
[0xd57:0xd58]
---
Predecessors: [0xd56]
Successors: [0x764]
---
0xd57 JUMPDEST
0xd58 JUMP
---
0xd57: JUMPDEST 
0xd58: JUMP 0x764
---
Entry stack: [V12, 0x764]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd59
[0xd59:0xd5e]
---
Predecessors: [0xa8e]
Successors: [0x779]
---
0xd59 JUMPDEST
0xd5a PUSH1 0xc
0xd5c SLOAD
0xd5d DUP2
0xd5e JUMP
---
0xd59: JUMPDEST 
0xd5a: V1324 = 0xc
0xd5c: V1325 = S[0xc]
0xd5e: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1325]
Exit stack: [V12, 0x779, V1325]

================================

Block 0xd5f
[0xd5f:0xd64]
---
Predecessors: [0xab3]
Successors: [0x779]
---
0xd5f JUMPDEST
0xd60 PUSH1 0xb
0xd62 SLOAD
0xd63 DUP2
0xd64 JUMP
---
0xd5f: JUMPDEST 
0xd60: V1326 = 0xb
0xd62: V1327 = S[0xb]
0xd64: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1327]
Exit stack: [V12, 0x779, V1327]

================================

Block 0xd65
[0xd65:0xd6a]
---
Predecessors: [0xad8]
Successors: [0x779]
---
0xd65 JUMPDEST
0xd66 PUSH1 0x6
0xd68 SLOAD
0xd69 DUP2
0xd6a JUMP
---
0xd65: JUMPDEST 
0xd66: V1328 = 0x6
0xd68: V1329 = S[0x6]
0xd6a: JUMP 0x779
---
Entry stack: [V12, 0x779]
Stack pops: 1
Stack additions: [S0, V1329]
Exit stack: [V12, 0x779, V1329]

================================

Block 0xd6b
[0xd6b:0xd78]
---
Predecessors: [0xafd]
Successors: [0x8e2]
---
0xd6b JUMPDEST
0xd6c PUSH1 0x14
0xd6e SLOAD
0xd6f PUSH2 0x100
0xd72 SWAP1
0xd73 DIV
0xd74 PUSH1 0xff
0xd76 AND
0xd77 DUP2
0xd78 JUMP
---
0xd6b: JUMPDEST 
0xd6c: V1330 = 0x14
0xd6e: V1331 = S[0x14]
0xd6f: V1332 = 0x100
0xd73: V1333 = DIV V1331 0x100
0xd74: V1334 = 0xff
0xd76: V1335 = AND 0xff V1333
0xd78: JUMP 0x8e2
---
Entry stack: [V12, 0x8e2]
Stack pops: 1
Stack additions: [S0, V1335]
Exit stack: [V12, 0x8e2, V1335]

================================

Block 0xd79
[0xd79:0xd81]
---
Predecessors: [0xb24]
Successors: [0x8e2]
---
0xd79 JUMPDEST
0xd7a PUSH1 0x14
0xd7c SLOAD
0xd7d PUSH1 0xff
0xd7f AND
0xd80 DUP2
0xd81 JUMP
---
0xd79: JUMPDEST 
0xd7a: V1336 = 0x14
0xd7c: V1337 = S[0x14]
0xd7d: V1338 = 0xff
0xd7f: V1339 = AND 0xff V1337
0xd81: JUMP 0x8e2
---
Entry stack: [V12, 0x8e2]
Stack pops: 1
Stack additions: [S0, V1339]
Exit stack: [V12, 0x8e2, V1339]

================================

Block 0xd82
[0xd82:0xd99]
---
Predecessors: [0xb4b]
Successors: [0xbb1, 0xd9a]
---
0xd82 JUMPDEST
0xd83 PUSH1 0x4
0xd85 SLOAD
0xd86 CALLER
0xd87 PUSH1 0x1
0xd89 PUSH1 0xa0
0xd8b PUSH1 0x2
0xd8d EXP
0xd8e SUB
0xd8f SWAP1
0xd90 DUP2
0xd91 AND
0xd92 SWAP2
0xd93 AND
0xd94 EQ
0xd95 ISZERO
0xd96 PUSH2 0xbb1
0xd99 JUMPI
---
0xd82: JUMPDEST 
0xd83: V1340 = 0x4
0xd85: V1341 = S[0x4]
0xd86: V1342 = CALLER
0xd87: V1343 = 0x1
0xd89: V1344 = 0xa0
0xd8b: V1345 = 0x2
0xd8d: V1346 = EXP 0x2 0xa0
0xd8e: V1347 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd91: V1348 = AND 0xffffffffffffffffffffffffffffffffffffffff V1342
0xd93: V1349 = AND V1341 0xffffffffffffffffffffffffffffffffffffffff
0xd94: V1350 = EQ V1349 V1348
0xd95: V1351 = ISZERO V1350
0xd96: V1352 = 0xbb1
0xd99: JUMPI 0xbb1 V1351
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xd9a
[0xd9a:0xdaa]
---
Predecessors: [0xd82]
Successors: [0xdab]
---
0xd9a PUSH1 0x14
0xd9c DUP1
0xd9d SLOAD
0xd9e PUSH3 0xff0000
0xda2 NOT
0xda3 AND
0xda4 PUSH3 0x10000
0xda8 OR
0xda9 SWAP1
0xdaa SSTORE
---
0xd9a: V1353 = 0x14
0xd9d: V1354 = S[0x14]
0xd9e: V1355 = 0xff0000
0xda2: V1356 = NOT 0xff0000
0xda3: V1357 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1354
0xda4: V1358 = 0x10000
0xda8: V1359 = OR 0x10000 V1357
0xdaa: S[0x14] = V1359
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xdab
[0xdab:0xdab]
---
Predecessors: [0xd9a]
Successors: [0xdac]
---
0xdab JUMPDEST
---
0xdab: JUMPDEST 
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764]

================================

Block 0xdac
[0xdac:0xdad]
---
Predecessors: [0xdab]
Successors: [0x764]
---
0xdac JUMPDEST
0xdad JUMP
---
0xdac: JUMPDEST 
0xdad: JUMP 0x764
---
Entry stack: [V12, 0x764]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xdae
[0xdae:0xdba]
---
Predecessors: [0xb60]
Successors: [0xc46, 0xdbb]
---
0xdae JUMPDEST
0xdaf PUSH1 0x2
0xdb1 SLOAD
0xdb2 PUSH1 0x0
0xdb4 SWAP1
0xdb5 TIMESTAMP
0xdb6 LT
0xdb7 PUSH2 0xc46
0xdba JUMPI
---
0xdae: JUMPDEST 
0xdaf: V1360 = 0x2
0xdb1: V1361 = S[0x2]
0xdb2: V1362 = 0x0
0xdb5: V1363 = TIMESTAMP
0xdb6: V1364 = LT V1363 V1361
0xdb7: V1365 = 0xc46
0xdba: JUMPI 0xc46 V1364
---
Entry stack: [V12, 0x764]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x764, 0x0]

================================

Block 0xdbb
[0xdbb:0xdc6]
---
Predecessors: [0xdae]
Successors: [0xdc7, 0xe7b]
---
0xdbb PUSH1 0x14
0xdbd SLOAD
0xdbe PUSH1 0xff
0xdc0 AND
0xdc1 ISZERO
0xdc2 ISZERO
0xdc3 PUSH2 0xe7b
0xdc6 JUMPI
---
0xdbb: V1366 = 0x14
0xdbd: V1367 = S[0x14]
0xdbe: V1368 = 0xff
0xdc0: V1369 = AND 0xff V1367
0xdc1: V1370 = ISZERO V1369
0xdc2: V1371 = ISZERO V1370
0xdc3: V1372 = 0xe7b
0xdc6: JUMPI 0xe7b V1371
---
Entry stack: [V12, 0x764, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, 0x0]

================================

Block 0xdc7
[0xdc7:0xded]
---
Predecessors: [0xdbb]
Successors: [0xdee, 0xe7b]
---
0xdc7 POP
0xdc8 PUSH1 0x1
0xdca PUSH1 0xa0
0xdcc PUSH1 0x2
0xdce EXP
0xdcf SUB
0xdd0 CALLER
0xdd1 AND
0xdd2 PUSH1 0x0
0xdd4 SWAP1
0xdd5 DUP2
0xdd6 MSTORE
0xdd7 PUSH1 0x13
0xdd9 PUSH1 0x20
0xddb MSTORE
0xddc PUSH1 0x40
0xdde DUP2
0xddf SHA3
0xde0 DUP1
0xde1 SLOAD
0xde2 SWAP1
0xde3 DUP3
0xde4 SWAP1
0xde5 SSTORE
0xde6 SWAP1
0xde7 DUP2
0xde8 GT
0xde9 ISZERO
0xdea PUSH2 0xe7b
0xded JUMPI
---
0xdc8: V1373 = 0x1
0xdca: V1374 = 0xa0
0xdcc: V1375 = 0x2
0xdce: V1376 = EXP 0x2 0xa0
0xdcf: V1377 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd0: V1378 = CALLER
0xdd1: V1379 = AND V1378 0xffffffffffffffffffffffffffffffffffffffff
0xdd2: V1380 = 0x0
0xdd6: M[0x0] = V1379
0xdd7: V1381 = 0x13
0xdd9: V1382 = 0x20
0xddb: M[0x20] = 0x13
0xddc: V1383 = 0x40
0xddf: V1384 = SHA3 0x0 0x40
0xde1: V1385 = S[V1384]
0xde5: S[V1384] = 0x0
0xde8: V1386 = GT V1385 0x0
0xde9: V1387 = ISZERO V1386
0xdea: V1388 = 0xe7b
0xded: JUMPI 0xe7b V1387
---
Entry stack: [V12, 0x764, 0x0]
Stack pops: 1
Stack additions: [V1385]
Exit stack: [V12, 0x764, V1385]

================================

Block 0xdee
[0xdee:0xe18]
---
Predecessors: [0xdc7]
Successors: [0xe19, 0xe5f]
---
0xdee PUSH1 0x1
0xdf0 PUSH1 0xa0
0xdf2 PUSH1 0x2
0xdf4 EXP
0xdf5 SUB
0xdf6 CALLER
0xdf7 AND
0xdf8 DUP2
0xdf9 ISZERO
0xdfa PUSH2 0x8fc
0xdfd MUL
0xdfe DUP3
0xdff PUSH1 0x40
0xe01 MLOAD
0xe02 PUSH1 0x0
0xe04 PUSH1 0x40
0xe06 MLOAD
0xe07 DUP1
0xe08 DUP4
0xe09 SUB
0xe0a DUP2
0xe0b DUP6
0xe0c DUP9
0xe0d DUP9
0xe0e CALL
0xe0f SWAP4
0xe10 POP
0xe11 POP
0xe12 POP
0xe13 POP
0xe14 ISZERO
0xe15 PUSH2 0xe5f
0xe18 JUMPI
---
0xdee: V1389 = 0x1
0xdf0: V1390 = 0xa0
0xdf2: V1391 = 0x2
0xdf4: V1392 = EXP 0x2 0xa0
0xdf5: V1393 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf6: V1394 = CALLER
0xdf7: V1395 = AND V1394 0xffffffffffffffffffffffffffffffffffffffff
0xdf9: V1396 = ISZERO V1385
0xdfa: V1397 = 0x8fc
0xdfd: V1398 = MUL 0x8fc V1396
0xdff: V1399 = 0x40
0xe01: V1400 = M[0x40]
0xe02: V1401 = 0x0
0xe04: V1402 = 0x40
0xe06: V1403 = M[0x40]
0xe09: V1404 = SUB V1400 V1403
0xe0e: V1405 = CALL V1398 V1395 V1385 V1403 V1404 V1403 0x0
0xe14: V1406 = ISZERO V1405
0xe15: V1407 = 0xe5f
0xe18: JUMPI 0xe5f V1406
---
Entry stack: [V12, 0x764, V1385]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x764, V1385]

================================

Block 0xe19
[0xe19:0xe5e]
---
Predecessors: [0xdee]
Successors: [0xe7b]
---
0xe19 PUSH1 0x0
0xe1b DUP1
0xe1c MLOAD
0xe1d PUSH1 0x20
0xe1f PUSH2 0xf3e
0xe22 DUP4
0xe23 CODECOPY
0xe24 DUP2
0xe25 MLOAD
0xe26 SWAP2
0xe27 MSTORE
0xe28 CALLER
0xe29 DUP3
0xe2a PUSH1 0x0
0xe2c PUSH1 0x40
0xe2e MLOAD
0xe2f PUSH1 0x1
0xe31 PUSH1 0xa0
0xe33 PUSH1 0x2
0xe35 EXP
0xe36 SUB
0xe37 SWAP1
0xe38 SWAP4
0xe39 AND
0xe3a DUP4
0xe3b MSTORE
0xe3c PUSH1 0x20
0xe3e DUP4
0xe3f ADD
0xe40 SWAP2
0xe41 SWAP1
0xe42 SWAP2
0xe43 MSTORE
0xe44 ISZERO
0xe45 ISZERO
0xe46 PUSH1 0x40
0xe48 DUP1
0xe49 DUP4
0xe4a ADD
0xe4b SWAP2
0xe4c SWAP1
0xe4d SWAP2
0xe4e MSTORE
0xe4f PUSH1 0x60
0xe51 SWAP1
0xe52 SWAP2
0xe53 ADD
0xe54 SWAP1
0xe55 MLOAD
0xe56 DUP1
0xe57 SWAP2
0xe58 SUB
0xe59 SWAP1
0xe5a LOG1
0xe5b PUSH2 0xe7b
0xe5e JUMP
---
0xe19: V1408 = 0x0
0xe1c: V1409 = M[0x0]
0xe1d: V1410 = 0x20
0xe1f: V1411 = 0xf3e
0xe23: CODECOPY 0x0 0xf3e 0x20
0xe25: V1412 = M[0x0]
0xe27: M[0x0] = V1409
0xe28: V1413 = CALLER
0xe2a: V1414 = 0x0
0xe2c: V1415 = 0x40
0xe2e: V1416 = M[0x40]
0xe2f: V1417 = 0x1
0xe31: V1418 = 0xa0
0xe33: V1419 = 0x2
0xe35: V1420 = EXP 0x2 0xa0
0xe36: V1421 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe39: V1422 = AND V1413 0xffffffffffffffffffffffffffffffffffffffff
0xe3b: M[V1416] = V1422
0xe3c: V1423 = 0x20
0xe3f: V1424 = ADD V1416 0x20
0xe43: M[V1424] = V1385
0xe44: V1425 = ISZERO 0x0
0xe45: V1426 = ISZERO 0x1
0xe46: V1427 = 0x40
0xe4a: V1428 = ADD V1416 0x40
0xe4e: M[V1428] = 0x0
0xe4f: V1429 = 0x60
0xe53: V1430 = ADD V1416 0x60
0xe55: V1431 = M[0x40]
0xe58: V1432 = SUB V1430 V1431
0xe5a: LOG V1431 V1432 V1412
0xe5b: V1433 = 0xe7b
0xe5e: JUMP 0xe7b
---
Entry stack: [V12, 0x764, V1385]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x764, V1385]

================================

Block 0xe5f
[0xe5f:0xe7a]
---
Predecessors: [0xdee]
Successors: [0xe7b]
---
0xe5f JUMPDEST
0xe60 PUSH1 0x1
0xe62 PUSH1 0xa0
0xe64 PUSH1 0x2
0xe66 EXP
0xe67 SUB
0xe68 CALLER
0xe69 AND
0xe6a PUSH1 0x0
0xe6c SWAP1
0xe6d DUP2
0xe6e MSTORE
0xe6f PUSH1 0x13
0xe71 PUSH1 0x20
0xe73 MSTORE
0xe74 PUSH1 0x40
0xe76 SWAP1
0xe77 SHA3
0xe78 DUP2
0xe79 SWAP1
0xe7a SSTORE
---
0xe5f: JUMPDEST 
0xe60: V1434 = 0x1
0xe62: V1435 = 0xa0
0xe64: V1436 = 0x2
0xe66: V1437 = EXP 0x2 0xa0
0xe67: V1438 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe68: V1439 = CALLER
0xe69: V1440 = AND V1439 0xffffffffffffffffffffffffffffffffffffffff
0xe6a: V1441 = 0x0
0xe6e: M[0x0] = V1440
0xe6f: V1442 = 0x13
0xe71: V1443 = 0x20
0xe73: M[0x20] = 0x13
0xe74: V1444 = 0x40
0xe77: V1445 = SHA3 0x0 0x40
0xe7a: S[V1445] = V1385
---
Entry stack: [V12, 0x764, V1385]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x764, V1385]

================================

Block 0xe7b
[0xe7b:0xe7b]
---
Predecessors: [0xdbb, 0xdc7, 0xe19, 0xe5f]
Successors: [0xe7c]
---
0xe7b JUMPDEST
---
0xe7b: JUMPDEST 
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xe7c
[0xe7c:0xe7c]
---
Predecessors: [0xe7b]
Successors: [0xe7d]
---
0xe7c JUMPDEST
---
0xe7c: JUMPDEST 
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xe7d
[0xe7d:0xe89]
---
Predecessors: [0xe7c]
Successors: [0xe8a, 0xe9d]
---
0xe7d JUMPDEST
0xe7e PUSH1 0x14
0xe80 SLOAD
0xe81 PUSH1 0xff
0xe83 AND
0xe84 DUP1
0xe85 ISZERO
0xe86 PUSH2 0xe9d
0xe89 JUMPI
---
0xe7d: JUMPDEST 
0xe7e: V1446 = 0x14
0xe80: V1447 = S[0x14]
0xe81: V1448 = 0xff
0xe83: V1449 = AND 0xff V1447
0xe85: V1450 = ISZERO V1449
0xe86: V1451 = 0xe9d
0xe89: JUMPI 0xe9d V1450
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: [V1449]
Exit stack: [V12, 0x764, S0, V1449]

================================

Block 0xe8a
[0xe8a:0xe9c]
---
Predecessors: [0xe7d]
Successors: [0xe9d]
---
0xe8a POP
0xe8b PUSH1 0x3
0xe8d SLOAD
0xe8e CALLER
0xe8f PUSH1 0x1
0xe91 PUSH1 0xa0
0xe93 PUSH1 0x2
0xe95 EXP
0xe96 SUB
0xe97 SWAP1
0xe98 DUP2
0xe99 AND
0xe9a SWAP2
0xe9b AND
0xe9c EQ
---
0xe8b: V1452 = 0x3
0xe8d: V1453 = S[0x3]
0xe8e: V1454 = CALLER
0xe8f: V1455 = 0x1
0xe91: V1456 = 0xa0
0xe93: V1457 = 0x2
0xe95: V1458 = EXP 0x2 0xa0
0xe96: V1459 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe99: V1460 = AND 0xffffffffffffffffffffffffffffffffffffffff V1454
0xe9b: V1461 = AND V1453 0xffffffffffffffffffffffffffffffffffffffff
0xe9c: V1462 = EQ V1461 V1460
---
Entry stack: [V12, 0x764, S1, V1449]
Stack pops: 1
Stack additions: [V1462]
Exit stack: [V12, 0x764, S1, V1462]

================================

Block 0xe9d
[0xe9d:0xea2]
---
Predecessors: [0xe7d, 0xe8a]
Successors: [0xc46, 0xea3]
---
0xe9d JUMPDEST
0xe9e ISZERO
0xe9f PUSH2 0xc46
0xea2 JUMPI
---
0xe9d: JUMPDEST 
0xe9e: V1463 = ISZERO S0
0xe9f: V1464 = 0xc46
0xea2: JUMPI 0xc46 V1463
---
Entry stack: [V12, 0x764, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x764, S1]

================================

Block 0xea3
[0xea3:0xed5]
---
Predecessors: [0xe9d]
Successors: [0xed6, 0xf2b]
---
0xea3 PUSH1 0x3
0xea5 SLOAD
0xea6 PUSH1 0x8
0xea8 SLOAD
0xea9 PUSH1 0x1
0xeab PUSH1 0xa0
0xead PUSH1 0x2
0xeaf EXP
0xeb0 SUB
0xeb1 SWAP1
0xeb2 SWAP2
0xeb3 AND
0xeb4 SWAP1
0xeb5 DUP1
0xeb6 ISZERO
0xeb7 PUSH2 0x8fc
0xeba MUL
0xebb SWAP1
0xebc PUSH1 0x40
0xebe MLOAD
0xebf PUSH1 0x0
0xec1 PUSH1 0x40
0xec3 MLOAD
0xec4 DUP1
0xec5 DUP4
0xec6 SUB
0xec7 DUP2
0xec8 DUP6
0xec9 DUP9
0xeca DUP9
0xecb CALL
0xecc SWAP4
0xecd POP
0xece POP
0xecf POP
0xed0 POP
0xed1 ISZERO
0xed2 PUSH2 0xf2b
0xed5 JUMPI
---
0xea3: V1465 = 0x3
0xea5: V1466 = S[0x3]
0xea6: V1467 = 0x8
0xea8: V1468 = S[0x8]
0xea9: V1469 = 0x1
0xeab: V1470 = 0xa0
0xead: V1471 = 0x2
0xeaf: V1472 = EXP 0x2 0xa0
0xeb0: V1473 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb3: V1474 = AND V1466 0xffffffffffffffffffffffffffffffffffffffff
0xeb6: V1475 = ISZERO V1468
0xeb7: V1476 = 0x8fc
0xeba: V1477 = MUL 0x8fc V1475
0xebc: V1478 = 0x40
0xebe: V1479 = M[0x40]
0xebf: V1480 = 0x0
0xec1: V1481 = 0x40
0xec3: V1482 = M[0x40]
0xec6: V1483 = SUB V1479 V1482
0xecb: V1484 = CALL V1477 V1474 V1468 V1482 V1483 V1482 0x0
0xed1: V1485 = ISZERO V1484
0xed2: V1486 = 0xf2b
0xed5: JUMPI 0xf2b V1485
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xed6
[0xed6:0xf2a]
---
Predecessors: [0xea3]
Successors: [0xc46]
---
0xed6 PUSH1 0x3
0xed8 SLOAD
0xed9 PUSH1 0x8
0xedb SLOAD
0xedc PUSH1 0x0
0xede DUP1
0xedf MLOAD
0xee0 PUSH1 0x20
0xee2 PUSH2 0xf3e
0xee5 DUP4
0xee6 CODECOPY
0xee7 DUP2
0xee8 MLOAD
0xee9 SWAP2
0xeea MSTORE
0xeeb SWAP2
0xeec PUSH1 0x1
0xeee PUSH1 0xa0
0xef0 PUSH1 0x2
0xef2 EXP
0xef3 SUB
0xef4 AND
0xef5 SWAP1
0xef6 PUSH1 0x0
0xef8 PUSH1 0x40
0xefa MLOAD
0xefb PUSH1 0x1
0xefd PUSH1 0xa0
0xeff PUSH1 0x2
0xf01 EXP
0xf02 SUB
0xf03 SWAP1
0xf04 SWAP4
0xf05 AND
0xf06 DUP4
0xf07 MSTORE
0xf08 PUSH1 0x20
0xf0a DUP4
0xf0b ADD
0xf0c SWAP2
0xf0d SWAP1
0xf0e SWAP2
0xf0f MSTORE
0xf10 ISZERO
0xf11 ISZERO
0xf12 PUSH1 0x40
0xf14 DUP1
0xf15 DUP4
0xf16 ADD
0xf17 SWAP2
0xf18 SWAP1
0xf19 SWAP2
0xf1a MSTORE
0xf1b PUSH1 0x60
0xf1d SWAP1
0xf1e SWAP2
0xf1f ADD
0xf20 SWAP1
0xf21 MLOAD
0xf22 DUP1
0xf23 SWAP2
0xf24 SUB
0xf25 SWAP1
0xf26 LOG1
0xf27 PUSH2 0xc46
0xf2a JUMP
---
0xed6: V1487 = 0x3
0xed8: V1488 = S[0x3]
0xed9: V1489 = 0x8
0xedb: V1490 = S[0x8]
0xedc: V1491 = 0x0
0xedf: V1492 = M[0x0]
0xee0: V1493 = 0x20
0xee2: V1494 = 0xf3e
0xee6: CODECOPY 0x0 0xf3e 0x20
0xee8: V1495 = M[0x0]
0xeea: M[0x0] = V1492
0xeec: V1496 = 0x1
0xeee: V1497 = 0xa0
0xef0: V1498 = 0x2
0xef2: V1499 = EXP 0x2 0xa0
0xef3: V1500 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef4: V1501 = AND 0xffffffffffffffffffffffffffffffffffffffff V1488
0xef6: V1502 = 0x0
0xef8: V1503 = 0x40
0xefa: V1504 = M[0x40]
0xefb: V1505 = 0x1
0xefd: V1506 = 0xa0
0xeff: V1507 = 0x2
0xf01: V1508 = EXP 0x2 0xa0
0xf02: V1509 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf05: V1510 = AND V1501 0xffffffffffffffffffffffffffffffffffffffff
0xf07: M[V1504] = V1510
0xf08: V1511 = 0x20
0xf0b: V1512 = ADD V1504 0x20
0xf0f: M[V1512] = V1490
0xf10: V1513 = ISZERO 0x0
0xf11: V1514 = ISZERO 0x1
0xf12: V1515 = 0x40
0xf16: V1516 = ADD V1504 0x40
0xf1a: M[V1516] = 0x0
0xf1b: V1517 = 0x60
0xf1f: V1518 = ADD V1504 0x60
0xf21: V1519 = M[0x40]
0xf24: V1520 = SUB V1518 V1519
0xf26: LOG V1519 V1520 V1495
0xf27: V1521 = 0xc46
0xf2a: JUMP 0xc46
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xf2b
[0xf2b:0xf35]
---
Predecessors: [0xea3]
Successors: [0xf36]
---
0xf2b JUMPDEST
0xf2c PUSH1 0x14
0xf2e DUP1
0xf2f SLOAD
0xf30 PUSH1 0xff
0xf32 NOT
0xf33 AND
0xf34 SWAP1
0xf35 SSTORE
---
0xf2b: JUMPDEST 
0xf2c: V1522 = 0x14
0xf2f: V1523 = S[0x14]
0xf30: V1524 = 0xff
0xf32: V1525 = NOT 0xff
0xf33: V1526 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1523
0xf35: S[0x14] = V1526
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xf36
[0xf36:0xf36]
---
Predecessors: [0xf2b]
Successors: [0xf37]
---
0xf36 JUMPDEST
---
0xf36: JUMPDEST 
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xf37
[0xf37:0xf37]
---
Predecessors: [0xf36]
Successors: [0xf38]
---
0xf37 JUMPDEST
---
0xf37: JUMPDEST 
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xf38
[0xf38:0xf38]
---
Predecessors: [0xf37]
Successors: [0xf39]
---
0xf38 JUMPDEST
---
0xf38: JUMPDEST 
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xf39
[0xf39:0xf39]
---
Predecessors: [0xf38]
Successors: [0xf3a]
---
0xf39 JUMPDEST
---
0xf39: JUMPDEST 
---
Entry stack: [V12, 0x764, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x764, S0]

================================

Block 0xf3a
[0xf3a:0xf3c]
---
Predecessors: [0xf39]
Successors: [0x764]
---
0xf3a JUMPDEST
0xf3b POP
0xf3c JUMP
---
0xf3a: JUMPDEST 
0xf3c: JUMP 0x764
---
Entry stack: [V12, 0x764, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xf3d
[0xf3d:0xf9d]
---
Predecessors: []
Successors: []
---
0xf3d STOP
0xf3e MISSING 0xe8
0xf3f TIMESTAMP
0xf40 MISSING 0xae
0xf41 MISSING 0xa7
0xf42 MISSING 0xa5
0xf43 CALL
0xf44 MISSING 0xb0
0xf45 LT
0xf46 MISSING 0x49
0xf47 MISSING 0xd7
0xf48 MSTORE
0xf49 STOP
0xf4a DUP13
0xf4b MSTORE8
0xf4c MISSING 0xc5
0xf4d MISSING 0x28
0xf4e SWAP1
0xf4f MISSING 0xb1
0xf50 MISSING 0xa6
0xf51 MISSING 0xda
0xf52 MISSING 0xf6
0xf53 PUSH1 0xcf
0xf55 CODECOPY
0xf56 MISSING 0xe8
0xf57 MISSING 0xee
0xf58 MISSING 0xc5
0xf59 MOD
0xf5a GT
0xf5b MISSING 0x2b
0xf5c MISSING 0xbd
0xf5d MISSING 0xf6
0xf5e LOG1
0xf5f PUSH6 0x627a7a723058
0xf66 SHA3
0xf67 MISSING 0xc3
0xf68 REVERT
0xf69 MISSING 0x1e
0xf6a MISSING 0xdc
0xf6b EXTCODECOPY
0xf6c MISSING 0xf6
0xf6d MISSING 0xe
0xf6e MISSING 0x4f
0xf6f PUSH14 0xc334da2067d3654d3c58d31d36ad
0xf7e DUP13
0xf7f MISSING 0xe2
0xf80 SWAP2
0xf81 PUSH28 0xa39caf1b0b0029
---
0xf3d: STOP 
0xf3e: MISSING 0xe8
0xf3f: V1527 = TIMESTAMP
0xf40: MISSING 0xae
0xf41: MISSING 0xa7
0xf42: MISSING 0xa5
0xf43: V1528 = CALL S0 S1 S2 S3 S4 S5 S6
0xf44: MISSING 0xb0
0xf45: V1529 = LT S0 S1
0xf46: MISSING 0x49
0xf47: MISSING 0xd7
0xf48: M[S0] = S1
0xf49: STOP 
0xf4b: M8[S12] = S0
0xf4c: MISSING 0xc5
0xf4d: MISSING 0x28
0xf4f: MISSING 0xb1
0xf50: MISSING 0xa6
0xf51: MISSING 0xda
0xf52: MISSING 0xf6
0xf53: V1530 = 0xcf
0xf55: CODECOPY 0xcf S0 S1
0xf56: MISSING 0xe8
0xf57: MISSING 0xee
0xf58: MISSING 0xc5
0xf59: V1531 = MOD S0 S1
0xf5a: V1532 = GT V1531 S2
0xf5b: MISSING 0x2b
0xf5c: MISSING 0xbd
0xf5d: MISSING 0xf6
0xf5e: LOG S0 S1 S2
0xf5f: V1533 = 0x627a7a723058
0xf66: V1534 = SHA3 0x627a7a723058 S3
0xf67: MISSING 0xc3
0xf68: REVERT S0 S1
0xf69: MISSING 0x1e
0xf6a: MISSING 0xdc
0xf6b: EXTCODECOPY S0 S1 S2 S3
0xf6c: MISSING 0xf6
0xf6d: MISSING 0xe
0xf6e: MISSING 0x4f
0xf6f: V1535 = 0xc334da2067d3654d3c58d31d36ad
0xf7f: MISSING 0xe2
0xf81: V1536 = 0xa39caf1b0b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1527, V1528, V1529, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V1532, V1534, S11, 0xc334da2067d3654d3c58d31d36ad, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0xa39caf1b0b0029, S2, S1, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x751
Exit block: 0x764
Body: 0x751, 0x758, 0x75c, 0x764, 0xb6a, 0xb74, 0xb81, 0xb8e, 0xb94, 0xba1, 0xbb1, 0xbb2, 0xbb3

Function 1:
Public function signature: 0x10309781
Entry block: 0x766
Exit block: 0x779
Body: 0x766, 0x76d, 0x771, 0x779, 0xbb5

Function 2:
Public function signature: 0x1fd8ffb0
Entry block: 0x78b
Exit block: 0x764
Body: 0x764, 0x78b, 0x792, 0x796, 0xbbb, 0xbc5, 0xbdc, 0xc2d, 0xc31, 0xc3e, 0xc42, 0xc46, 0xc47, 0xc48, 0xc49

Function 3:
Public function signature: 0x29dcb0cf
Entry block: 0x7a3
Exit block: 0x779
Body: 0x779, 0x7a3, 0x7aa, 0x7ae, 0xc4c

Function 4:
Public function signature: 0x2ec914b5
Entry block: 0x7c8
Exit block: 0x779
Body: 0x779, 0x7c8, 0x7cf, 0x7d3, 0xc52

Function 5:
Public function signature: 0x31252103
Entry block: 0x7ed
Exit block: 0x779
Body: 0x779, 0x7ed, 0x7f4, 0x7f8, 0xc58

Function 6:
Public function signature: 0x38af3eed
Entry block: 0x812
Exit block: 0x825
Body: 0x812, 0x819, 0x81d, 0x825, 0xc5e

Function 7:
Public function signature: 0x3b41ddba
Entry block: 0x841
Exit block: 0x779
Body: 0x779, 0x841, 0x848, 0x84c, 0xc6d

Function 8:
Public function signature: 0x4c95f5d0
Entry block: 0x866
Exit block: 0x779
Body: 0x779, 0x866, 0x86d, 0x871, 0xc73

Function 9:
Public function signature: 0x4fa34075
Entry block: 0x88b
Exit block: 0x764
Body: 0x764, 0x88b, 0x892, 0x896, 0xbb1, 0xbb2, 0xbb3, 0xc79, 0xc91, 0xc9c, 0xc9d

Function 10:
Public function signature: 0x5a0254e2
Entry block: 0x8a0
Exit block: 0x825
Body: 0x825, 0x8a0, 0x8a7, 0x8ab, 0xc9f

Function 11:
Public function signature: 0x5b54d2d6
Entry block: 0x8cf
Exit block: 0x8e2
Body: 0x8cf, 0x8d6, 0x8da, 0x8e2, 0xcae

Function 12:
Public function signature: 0x6e66f6e9
Entry block: 0x8f6
Exit block: 0x825
Body: 0x825, 0x8f6, 0x8fd, 0x901, 0xcbd

Function 13:
Public function signature: 0x70a08231
Entry block: 0x925
Exit block: 0x779
Body: 0x779, 0x925, 0x92c, 0x930, 0xccc

Function 14:
Public function signature: 0x7a3a0e84
Entry block: 0x956
Exit block: 0x779
Body: 0x779, 0x956, 0x95d, 0x961, 0xcde

Function 15:
Public function signature: 0x7b3e5e7b
Entry block: 0x97b
Exit block: 0x779
Body: 0x779, 0x97b, 0x982, 0x986, 0xce4

Function 16:
Public function signature: 0x7c24ce7d
Entry block: 0x9a0
Exit block: 0x779
Body: 0x779, 0x9a0, 0x9a7, 0x9ab, 0xcea

Function 17:
Public function signature: 0x827037db
Entry block: 0x9c5
Exit block: 0x779
Body: 0x779, 0x9c5, 0x9cc, 0x9d0, 0xcf0

Function 18:
Public function signature: 0x89e66aea
Entry block: 0x9ea
Exit block: 0x779
Body: 0x779, 0x9ea, 0x9f1, 0x9f5, 0xcf6

Function 19:
Public function signature: 0x8f48399a
Entry block: 0xa0f
Exit block: 0x779
Body: 0x779, 0xa0f, 0xa16, 0xa1a, 0xcfc

Function 20:
Public function signature: 0x92dcc41c
Entry block: 0xa34
Exit block: 0x779
Body: 0x779, 0xa34, 0xa3b, 0xa3f, 0xd02

Function 21:
Public function signature: 0x998936b0
Entry block: 0xa59
Exit block: 0x764
Body: 0x764, 0xa59, 0xa60, 0xa64, 0xbb1, 0xbb2, 0xbb3, 0xd08, 0xd20, 0xd2c, 0xd2d

Function 22:
Public function signature: 0xa02d55a3
Entry block: 0xa6e
Exit block: 0x764
Body: 0x764, 0xa6e, 0xa75, 0xa79, 0xbb1, 0xbb2, 0xbb3, 0xd2f, 0xd47, 0xd56, 0xd57

Function 23:
Public function signature: 0xa8a75b78
Entry block: 0xa83
Exit block: 0x779
Body: 0x779, 0xa83, 0xa8a, 0xa8e, 0xd59

Function 24:
Public function signature: 0xace38f8c
Entry block: 0xaa8
Exit block: 0x779
Body: 0x779, 0xaa8, 0xaaf, 0xab3, 0xd5f

Function 25:
Public function signature: 0xaff29802
Entry block: 0xacd
Exit block: 0x779
Body: 0x779, 0xacd, 0xad4, 0xad8, 0xd65

Function 26:
Public function signature: 0xccb07cef
Entry block: 0xaf2
Exit block: 0x8e2
Body: 0x8e2, 0xaf2, 0xaf9, 0xafd, 0xd6b

Function 27:
Public function signature: 0xd424f628
Entry block: 0xb19
Exit block: 0x8e2
Body: 0x8e2, 0xb19, 0xb20, 0xb24, 0xd79

Function 28:
Public function signature: 0xdcd22c9b
Entry block: 0xb40
Exit block: 0x764
Body: 0x764, 0xb40, 0xb47, 0xb4b, 0xbb1, 0xbb2, 0xbb3, 0xd82, 0xd9a, 0xdab, 0xdac

Function 29:
Public function signature: 0xfd6b7ef8
Entry block: 0xb55
Exit block: 0x764
Body: 0x764, 0xb55, 0xb5c, 0xb60, 0xc46, 0xc47, 0xc48, 0xc49, 0xdae, 0xdbb, 0xdc7, 0xdee, 0xe19, 0xe5f, 0xe7b, 0xe7c, 0xe7d, 0xe8a, 0xe9d, 0xea3, 0xed6, 0xf2b, 0xf36, 0xf37, 0xf38, 0xf39, 0xf3a

Function 30:
Public fallback function
Entry block: 0x164
Exit block: 0x53a
Body: 0x164, 0x165, 0x179, 0x17d, 0x18a, 0x18e, 0x19a, 0x1a7, 0x1ad, 0x1b4, 0x1bb, 0x1bf, 0x1f4, 0x205, 0x224, 0x264, 0x268, 0x275, 0x279, 0x281, 0x293, 0x313, 0x325, 0x3a5, 0x3b7, 0x437, 0x449, 0x4c9, 0x4e9, 0x529, 0x52d, 0x53a, 0x53e, 0x542, 0x543, 0x544, 0x545, 0x546, 0x58d, 0x59a, 0x5f4, 0x5f8, 0x605, 0x609, 0x611, 0x61e, 0x678, 0x695, 0x6f0, 0x6f4, 0x701, 0x705, 0x709, 0x70a, 0x74d, 0x74e

