Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x110]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x110
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x110
0xc: JUMPI 0x110 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x14c]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH3 0x79efb0
0x39 DUP2
0x3a EQ
0x3b PUSH2 0x14c
0x3e JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x79efb0
0x3a: V13 = EQ V11 0x79efb0
0x3b: V14 = 0x14c
0x3e: JUMPI 0x14c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xd]
Successors: [0x4a, 0x163]
---
0x3f DUP1
0x40 PUSH4 0x67903f9
0x45 EQ
0x46 PUSH2 0x163
0x49 JUMPI
---
0x40: V15 = 0x67903f9
0x45: V16 = EQ 0x67903f9 V11
0x46: V17 = 0x163
0x49: JUMPI 0x163 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x178]
---
0x4a DUP1
0x4b PUSH4 0x1834906c
0x50 EQ
0x51 PUSH2 0x178
0x54 JUMPI
---
0x4b: V18 = 0x1834906c
0x50: V19 = EQ 0x1834906c V11
0x51: V20 = 0x178
0x54: JUMPI 0x178 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1a9]
---
0x55 DUP1
0x56 PUSH4 0x23b1131c
0x5b EQ
0x5c PUSH2 0x1a9
0x5f JUMPI
---
0x56: V21 = 0x23b1131c
0x5b: V22 = EQ 0x23b1131c V11
0x5c: V23 = 0x1a9
0x5f: JUMPI 0x1a9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1d0]
---
0x60 DUP1
0x61 PUSH4 0x2808c8ad
0x66 EQ
0x67 PUSH2 0x1d0
0x6a JUMPI
---
0x61: V24 = 0x2808c8ad
0x66: V25 = EQ 0x2808c8ad V11
0x67: V26 = 0x1d0
0x6a: JUMPI 0x1d0 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x1e5]
---
0x6b DUP1
0x6c PUSH4 0x34592491
0x71 EQ
0x72 PUSH2 0x1e5
0x75 JUMPI
---
0x6c: V27 = 0x34592491
0x71: V28 = EQ 0x34592491 V11
0x72: V29 = 0x1e5
0x75: JUMPI 0x1e5 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x22a]
---
0x76 DUP1
0x77 PUSH4 0x38f8f3cc
0x7c EQ
0x7d PUSH2 0x22a
0x80 JUMPI
---
0x77: V30 = 0x38f8f3cc
0x7c: V31 = EQ 0x38f8f3cc V11
0x7d: V32 = 0x22a
0x80: JUMPI 0x22a V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x23f]
---
0x81 DUP1
0x82 PUSH4 0x39f64289
0x87 EQ
0x88 PUSH2 0x23f
0x8b JUMPI
---
0x82: V33 = 0x39f64289
0x87: V34 = EQ 0x39f64289 V11
0x88: V35 = 0x23f
0x8b: JUMPI 0x23f V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x254]
---
0x8c DUP1
0x8d PUSH4 0x4fa3eeff
0x92 EQ
0x93 PUSH2 0x254
0x96 JUMPI
---
0x8d: V36 = 0x4fa3eeff
0x92: V37 = EQ 0x4fa3eeff V11
0x93: V38 = 0x254
0x96: JUMPI 0x254 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x269]
---
0x97 DUP1
0x98 PUSH4 0x61c651b9
0x9d EQ
0x9e PUSH2 0x269
0xa1 JUMPI
---
0x98: V39 = 0x61c651b9
0x9d: V40 = EQ 0x61c651b9 V11
0x9e: V41 = 0x269
0xa1: JUMPI 0x269 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x27e]
---
0xa2 DUP1
0xa3 PUSH4 0x70ad858b
0xa8 EQ
0xa9 PUSH2 0x27e
0xac JUMPI
---
0xa3: V42 = 0x70ad858b
0xa8: V43 = EQ 0x70ad858b V11
0xa9: V44 = 0x27e
0xac: JUMPI 0x27e V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x293]
---
0xad DUP1
0xae PUSH4 0x8a5cf5ee
0xb3 EQ
0xb4 PUSH2 0x293
0xb7 JUMPI
---
0xae: V45 = 0x8a5cf5ee
0xb3: V46 = EQ 0x8a5cf5ee V11
0xb4: V47 = 0x293
0xb7: JUMPI 0x293 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3, 0x2a8]
---
0xb8 DUP1
0xb9 PUSH4 0xb4d462b3
0xbe EQ
0xbf PUSH2 0x2a8
0xc2 JUMPI
---
0xb9: V48 = 0xb4d462b3
0xbe: V49 = EQ 0xb4d462b3 V11
0xbf: V50 = 0x2a8
0xc2: JUMPI 0x2a8 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xb8]
Successors: [0xce, 0x2bd]
---
0xc3 DUP1
0xc4 PUSH4 0xc0a06ecb
0xc9 EQ
0xca PUSH2 0x2bd
0xcd JUMPI
---
0xc4: V51 = 0xc0a06ecb
0xc9: V52 = EQ 0xc0a06ecb V11
0xca: V53 = 0x2bd
0xcd: JUMPI 0x2bd V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xce
[0xce:0xd8]
---
Predecessors: [0xc3]
Successors: [0xd9, 0x2d2]
---
0xce DUP1
0xcf PUSH4 0xc37bcb1e
0xd4 EQ
0xd5 PUSH2 0x2d2
0xd8 JUMPI
---
0xcf: V54 = 0xc37bcb1e
0xd4: V55 = EQ 0xc37bcb1e V11
0xd5: V56 = 0x2d2
0xd8: JUMPI 0x2d2 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xe3]
---
Predecessors: [0xce]
Successors: [0xe4, 0x2e7]
---
0xd9 DUP1
0xda PUSH4 0xcf09e0d0
0xdf EQ
0xe0 PUSH2 0x2e7
0xe3 JUMPI
---
0xda: V57 = 0xcf09e0d0
0xdf: V58 = EQ 0xcf09e0d0 V11
0xe0: V59 = 0x2e7
0xe3: JUMPI 0x2e7 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xee]
---
Predecessors: [0xd9]
Successors: [0xef, 0x2fc]
---
0xe4 DUP1
0xe5 PUSH4 0xea98847b
0xea EQ
0xeb PUSH2 0x2fc
0xee JUMPI
---
0xe5: V60 = 0xea98847b
0xea: V61 = EQ 0xea98847b V11
0xeb: V62 = 0x2fc
0xee: JUMPI 0x2fc V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf9]
---
Predecessors: [0xe4]
Successors: [0xfa, 0x311]
---
0xef DUP1
0xf0 PUSH4 0xf48e5f27
0xf5 EQ
0xf6 PUSH2 0x311
0xf9 JUMPI
---
0xf0: V63 = 0xf48e5f27
0xf5: V64 = EQ 0xf48e5f27 V11
0xf6: V65 = 0x311
0xf9: JUMPI 0x311 V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfa
[0xfa:0x104]
---
Predecessors: [0xef]
Successors: [0x105, 0x326]
---
0xfa DUP1
0xfb PUSH4 0xf851a440
0x100 EQ
0x101 PUSH2 0x326
0x104 JUMPI
---
0xfb: V66 = 0xf851a440
0x100: V67 = EQ 0xf851a440 V11
0x101: V68 = 0x326
0x104: JUMPI 0x326 V67
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x105
[0x105:0x10f]
---
Predecessors: [0xfa]
Successors: [0x110, 0x33b]
---
0x105 DUP1
0x106 PUSH4 0xfb35d545
0x10b EQ
0x10c PUSH2 0x33b
0x10f JUMPI
---
0x106: V69 = 0xfb35d545
0x10b: V70 = EQ 0xfb35d545 V11
0x10c: V71 = 0x33b
0x10f: JUMPI 0x33b V70
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x110
[0x110:0x14b]
---
Predecessors: [0x0, 0x105]
Successors: []
---
0x110 JUMPDEST
0x111 PUSH1 0x40
0x113 DUP1
0x114 MLOAD
0x115 CALLER
0x116 DUP2
0x117 MSTORE
0x118 CALLVALUE
0x119 PUSH1 0x20
0x11b DUP3
0x11c ADD
0x11d MSTORE
0x11e DUP2
0x11f MLOAD
0x120 PUSH32 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0x141 SWAP3
0x142 SWAP2
0x143 DUP2
0x144 SWAP1
0x145 SUB
0x146 SWAP1
0x147 SWAP2
0x148 ADD
0x149 SWAP1
0x14a LOG1
0x14b STOP
---
0x110: JUMPDEST 
0x111: V72 = 0x40
0x114: V73 = M[0x40]
0x115: V74 = CALLER
0x117: M[V73] = V74
0x118: V75 = CALLVALUE
0x119: V76 = 0x20
0x11c: V77 = ADD V73 0x20
0x11d: M[V77] = V75
0x11f: V78 = M[0x40]
0x120: V79 = 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0x145: V80 = SUB V73 V78
0x148: V81 = ADD 0x40 V80
0x14a: LOG V78 V81 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0x14b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14c
[0x14c:0x153]
---
Predecessors: [0xd]
Successors: [0x154, 0x158]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e DUP1
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14c: JUMPDEST 
0x14d: V82 = CALLVALUE
0x14f: V83 = ISZERO V82
0x150: V84 = 0x158
0x153: JUMPI 0x158 V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V11, V82]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14c]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V85 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V11, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V82]

================================

Block 0x158
[0x158:0x160]
---
Predecessors: [0x14c]
Successors: [0x350]
---
0x158 JUMPDEST
0x159 POP
0x15a PUSH2 0x161
0x15d PUSH2 0x350
0x160 JUMP
---
0x158: JUMPDEST 
0x15a: V86 = 0x161
0x15d: V87 = 0x350
0x160: JUMP 0x350
---
Entry stack: [V11, V82]
Stack pops: 1
Stack additions: [0x161]
Exit stack: [V11, 0x161]

================================

Block 0x161
[0x161:0x162]
---
Predecessors: [0x3e1, 0x458]
Successors: []
---
0x161 JUMPDEST
0x162 STOP
---
0x161: JUMPDEST 
0x162: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x3f]
Successors: [0x16b, 0x16f]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 DUP1
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x163: JUMPDEST 
0x164: V88 = CALLVALUE
0x166: V89 = ISZERO V88
0x167: V90 = 0x16f
0x16a: JUMPI 0x16f V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, V88]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x163]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V91 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V11, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V88]

================================

Block 0x16f
[0x16f:0x177]
---
Predecessors: [0x163]
Successors: [0x405]
---
0x16f JUMPDEST
0x170 POP
0x171 PUSH2 0x161
0x174 PUSH2 0x405
0x177 JUMP
---
0x16f: JUMPDEST 
0x171: V92 = 0x161
0x174: V93 = 0x405
0x177: JUMP 0x405
---
Entry stack: [V11, V88]
Stack pops: 1
Stack additions: [0x161]
Exit stack: [V11, 0x161]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x4a]
Successors: [0x180, 0x184]
---
0x178 JUMPDEST
0x179 CALLVALUE
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x178: JUMPDEST 
0x179: V94 = CALLVALUE
0x17b: V95 = ISZERO V94
0x17c: V96 = 0x184
0x17f: JUMPI 0x184 V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V11, V94]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x178]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V97 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V11, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V94]

================================

Block 0x184
[0x184:0x18c]
---
Predecessors: [0x178]
Successors: [0x484]
---
0x184 JUMPDEST
0x185 POP
0x186 PUSH2 0x18d
0x189 PUSH2 0x484
0x18c JUMP
---
0x184: JUMPDEST 
0x186: V98 = 0x18d
0x189: V99 = 0x484
0x18c: JUMP 0x484
---
Entry stack: [V11, V94]
Stack pops: 1
Stack additions: [0x18d]
Exit stack: [V11, 0x18d]

================================

Block 0x18d
[0x18d:0x1a8]
---
Predecessors: [0x484, 0x65e]
Successors: []
---
0x18d JUMPDEST
0x18e PUSH1 0x40
0x190 DUP1
0x191 MLOAD
0x192 PUSH1 0x1
0x194 PUSH1 0xa0
0x196 PUSH1 0x2
0x198 EXP
0x199 SUB
0x19a SWAP1
0x19b SWAP3
0x19c AND
0x19d DUP3
0x19e MSTORE
0x19f MLOAD
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 SWAP1
0x1a3 SUB
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 SWAP1
0x1a8 RETURN
---
0x18d: JUMPDEST 
0x18e: V100 = 0x40
0x191: V101 = M[0x40]
0x192: V102 = 0x1
0x194: V103 = 0xa0
0x196: V104 = 0x2
0x198: V105 = EXP 0x2 0xa0
0x199: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19c: V107 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x19e: M[V101] = V107
0x19f: V108 = M[0x40]
0x1a3: V109 = SUB V101 V108
0x1a4: V110 = 0x20
0x1a6: V111 = ADD 0x20 V109
0x1a8: RETURN V108 V111
---
Entry stack: [V11, 0x18d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18d]

================================

Block 0x1a9
[0x1a9:0x1b0]
---
Predecessors: [0x55]
Successors: [0x1b1, 0x1b5]
---
0x1a9 JUMPDEST
0x1aa CALLVALUE
0x1ab DUP1
0x1ac ISZERO
0x1ad PUSH2 0x1b5
0x1b0 JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V112 = CALLVALUE
0x1ac: V113 = ISZERO V112
0x1ad: V114 = 0x1b5
0x1b0: JUMPI 0x1b5 V113
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V112]
Exit stack: [V11, V112]

================================

Block 0x1b1
[0x1b1:0x1b4]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b1 PUSH1 0x0
0x1b3 DUP1
0x1b4 REVERT
---
0x1b1: V115 = 0x0
0x1b4: REVERT 0x0 0x0
---
Entry stack: [V11, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V112]

================================

Block 0x1b5
[0x1b5:0x1bd]
---
Predecessors: [0x1a9]
Successors: [0x493]
---
0x1b5 JUMPDEST
0x1b6 POP
0x1b7 PUSH2 0x1be
0x1ba PUSH2 0x493
0x1bd JUMP
---
0x1b5: JUMPDEST 
0x1b7: V116 = 0x1be
0x1ba: V117 = 0x493
0x1bd: JUMP 0x493
---
Entry stack: [V11, V112]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x1be
[0x1be:0x1cf]
---
Predecessors: [0x493, 0x499, 0x4bb, 0x4c1, 0x558, 0x57b, 0x581, 0x5a4, 0x5aa, 0x66d]
Successors: []
---
0x1be JUMPDEST
0x1bf PUSH1 0x40
0x1c1 DUP1
0x1c2 MLOAD
0x1c3 SWAP2
0x1c4 DUP3
0x1c5 MSTORE
0x1c6 MLOAD
0x1c7 SWAP1
0x1c8 DUP2
0x1c9 SWAP1
0x1ca SUB
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce SWAP1
0x1cf RETURN
---
0x1be: JUMPDEST 
0x1bf: V118 = 0x40
0x1c2: V119 = M[0x40]
0x1c5: M[V119] = S0
0x1c6: V120 = M[0x40]
0x1ca: V121 = SUB V119 V120
0x1cb: V122 = 0x20
0x1cd: V123 = ADD 0x20 V121
0x1cf: RETURN V120 V123
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x1d0
[0x1d0:0x1d7]
---
Predecessors: [0x60]
Successors: [0x1d8, 0x1dc]
---
0x1d0 JUMPDEST
0x1d1 CALLVALUE
0x1d2 DUP1
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V124 = CALLVALUE
0x1d3: V125 = ISZERO V124
0x1d4: V126 = 0x1dc
0x1d7: JUMPI 0x1dc V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V11, V124]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d0]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V127 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V11, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V124]

================================

Block 0x1dc
[0x1dc:0x1e4]
---
Predecessors: [0x1d0]
Successors: [0x499]
---
0x1dc JUMPDEST
0x1dd POP
0x1de PUSH2 0x1be
0x1e1 PUSH2 0x499
0x1e4 JUMP
---
0x1dc: JUMPDEST 
0x1de: V128 = 0x1be
0x1e1: V129 = 0x499
0x1e4: JUMP 0x499
---
Entry stack: [V11, V124]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x1e5
[0x1e5:0x1ec]
---
Predecessors: [0x6b]
Successors: [0x1ed, 0x1f1]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 DUP1
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V130 = CALLVALUE
0x1e8: V131 = ISZERO V130
0x1e9: V132 = 0x1f1
0x1ec: JUMPI 0x1f1 V131
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V11, V130]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e5]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V133 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V11, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V130]

================================

Block 0x1f1
[0x1f1:0x1f9]
---
Predecessors: [0x1e5]
Successors: [0x49e]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 PUSH2 0x1fa
0x1f6 PUSH2 0x49e
0x1f9 JUMP
---
0x1f1: JUMPDEST 
0x1f3: V134 = 0x1fa
0x1f6: V135 = 0x49e
0x1f9: JUMP 0x49e
---
Entry stack: [V11, V130]
Stack pops: 1
Stack additions: [0x1fa]
Exit stack: [V11, 0x1fa]

================================

Block 0x1fa
[0x1fa:0x229]
---
Predecessors: [0x49e, 0x55e, 0x587, 0x641]
Successors: []
---
0x1fa JUMPDEST
0x1fb PUSH1 0x40
0x1fd DUP1
0x1fe MLOAD
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 SWAP1
0x208 SWAP6
0x209 AND
0x20a DUP6
0x20b MSTORE
0x20c PUSH1 0x20
0x20e DUP6
0x20f ADD
0x210 SWAP4
0x211 SWAP1
0x212 SWAP4
0x213 MSTORE
0x214 DUP4
0x215 DUP4
0x216 ADD
0x217 SWAP2
0x218 SWAP1
0x219 SWAP2
0x21a MSTORE
0x21b PUSH1 0x60
0x21d DUP4
0x21e ADD
0x21f MSTORE
0x220 MLOAD
0x221 SWAP1
0x222 DUP2
0x223 SWAP1
0x224 SUB
0x225 PUSH1 0x80
0x227 ADD
0x228 SWAP1
0x229 RETURN
---
0x1fa: JUMPDEST 
0x1fb: V136 = 0x40
0x1fe: V137 = M[0x40]
0x1ff: V138 = 0x1
0x201: V139 = 0xa0
0x203: V140 = 0x2
0x205: V141 = EXP 0x2 0xa0
0x206: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x209: V143 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x20b: M[V137] = V143
0x20c: V144 = 0x20
0x20f: V145 = ADD V137 0x20
0x213: M[V145] = S2
0x216: V146 = ADD 0x40 V137
0x21a: M[V146] = S1
0x21b: V147 = 0x60
0x21e: V148 = ADD V137 0x60
0x21f: M[V148] = S0
0x220: V149 = M[0x40]
0x224: V150 = SUB V137 V149
0x225: V151 = 0x80
0x227: V152 = ADD 0x80 V150
0x229: RETURN V149 V152
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x22a
[0x22a:0x231]
---
Predecessors: [0x76]
Successors: [0x232, 0x236]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c DUP1
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x22a: JUMPDEST 
0x22b: V153 = CALLVALUE
0x22d: V154 = ISZERO V153
0x22e: V155 = 0x236
0x231: JUMPI 0x236 V154
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V153]
Exit stack: [V11, V153]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x22a]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V156 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V11, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V153]

================================

Block 0x236
[0x236:0x23e]
---
Predecessors: [0x22a]
Successors: [0x4bb]
---
0x236 JUMPDEST
0x237 POP
0x238 PUSH2 0x1be
0x23b PUSH2 0x4bb
0x23e JUMP
---
0x236: JUMPDEST 
0x238: V157 = 0x1be
0x23b: V158 = 0x4bb
0x23e: JUMP 0x4bb
---
Entry stack: [V11, V153]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x23f
[0x23f:0x246]
---
Predecessors: [0x81]
Successors: [0x247, 0x24b]
---
0x23f JUMPDEST
0x240 CALLVALUE
0x241 DUP1
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x23f: JUMPDEST 
0x240: V159 = CALLVALUE
0x242: V160 = ISZERO V159
0x243: V161 = 0x24b
0x246: JUMPI 0x24b V160
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V159]
Exit stack: [V11, V159]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x23f]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V162 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V11, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V159]

================================

Block 0x24b
[0x24b:0x253]
---
Predecessors: [0x23f]
Successors: [0x4c1]
---
0x24b JUMPDEST
0x24c POP
0x24d PUSH2 0x1be
0x250 PUSH2 0x4c1
0x253 JUMP
---
0x24b: JUMPDEST 
0x24d: V163 = 0x1be
0x250: V164 = 0x4c1
0x253: JUMP 0x4c1
---
Entry stack: [V11, V159]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x254
[0x254:0x25b]
---
Predecessors: [0x8c]
Successors: [0x25c, 0x260]
---
0x254 JUMPDEST
0x255 CALLVALUE
0x256 DUP1
0x257 ISZERO
0x258 PUSH2 0x260
0x25b JUMPI
---
0x254: JUMPDEST 
0x255: V165 = CALLVALUE
0x257: V166 = ISZERO V165
0x258: V167 = 0x260
0x25b: JUMPI 0x260 V166
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V165]
Exit stack: [V11, V165]

================================

Block 0x25c
[0x25c:0x25f]
---
Predecessors: [0x254]
Successors: []
---
0x25c PUSH1 0x0
0x25e DUP1
0x25f REVERT
---
0x25c: V168 = 0x0
0x25f: REVERT 0x0 0x0
---
Entry stack: [V11, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V165]

================================

Block 0x260
[0x260:0x268]
---
Predecessors: [0x254]
Successors: [0x4c7]
---
0x260 JUMPDEST
0x261 POP
0x262 PUSH2 0x161
0x265 PUSH2 0x4c7
0x268 JUMP
---
0x260: JUMPDEST 
0x262: V169 = 0x161
0x265: V170 = 0x4c7
0x268: JUMP 0x4c7
---
Entry stack: [V11, V165]
Stack pops: 1
Stack additions: [0x161]
Exit stack: [V11, 0x161]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x97]
Successors: [0x271, 0x275]
---
0x269 JUMPDEST
0x26a CALLVALUE
0x26b DUP1
0x26c ISZERO
0x26d PUSH2 0x275
0x270 JUMPI
---
0x269: JUMPDEST 
0x26a: V171 = CALLVALUE
0x26c: V172 = ISZERO V171
0x26d: V173 = 0x275
0x270: JUMPI 0x275 V172
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V171]
Exit stack: [V11, V171]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x269]
Successors: []
---
0x271 PUSH1 0x0
0x273 DUP1
0x274 REVERT
---
0x271: V174 = 0x0
0x274: REVERT 0x0 0x0
---
Entry stack: [V11, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V171]

================================

Block 0x275
[0x275:0x27d]
---
Predecessors: [0x269]
Successors: [0x558]
---
0x275 JUMPDEST
0x276 POP
0x277 PUSH2 0x1be
0x27a PUSH2 0x558
0x27d JUMP
---
0x275: JUMPDEST 
0x277: V175 = 0x1be
0x27a: V176 = 0x558
0x27d: JUMP 0x558
---
Entry stack: [V11, V171]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x27e
[0x27e:0x285]
---
Predecessors: [0xa2]
Successors: [0x286, 0x28a]
---
0x27e JUMPDEST
0x27f CALLVALUE
0x280 DUP1
0x281 ISZERO
0x282 PUSH2 0x28a
0x285 JUMPI
---
0x27e: JUMPDEST 
0x27f: V177 = CALLVALUE
0x281: V178 = ISZERO V177
0x282: V179 = 0x28a
0x285: JUMPI 0x28a V178
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V177]
Exit stack: [V11, V177]

================================

Block 0x286
[0x286:0x289]
---
Predecessors: [0x27e]
Successors: []
---
0x286 PUSH1 0x0
0x288 DUP1
0x289 REVERT
---
0x286: V180 = 0x0
0x289: REVERT 0x0 0x0
---
Entry stack: [V11, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V177]

================================

Block 0x28a
[0x28a:0x292]
---
Predecessors: [0x27e]
Successors: [0x55e]
---
0x28a JUMPDEST
0x28b POP
0x28c PUSH2 0x1fa
0x28f PUSH2 0x55e
0x292 JUMP
---
0x28a: JUMPDEST 
0x28c: V181 = 0x1fa
0x28f: V182 = 0x55e
0x292: JUMP 0x55e
---
Entry stack: [V11, V177]
Stack pops: 1
Stack additions: [0x1fa]
Exit stack: [V11, 0x1fa]

================================

Block 0x293
[0x293:0x29a]
---
Predecessors: [0xad]
Successors: [0x29b, 0x29f]
---
0x293 JUMPDEST
0x294 CALLVALUE
0x295 DUP1
0x296 ISZERO
0x297 PUSH2 0x29f
0x29a JUMPI
---
0x293: JUMPDEST 
0x294: V183 = CALLVALUE
0x296: V184 = ISZERO V183
0x297: V185 = 0x29f
0x29a: JUMPI 0x29f V184
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V183]
Exit stack: [V11, V183]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x293]
Successors: []
---
0x29b PUSH1 0x0
0x29d DUP1
0x29e REVERT
---
0x29b: V186 = 0x0
0x29e: REVERT 0x0 0x0
---
Entry stack: [V11, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V183]

================================

Block 0x29f
[0x29f:0x2a7]
---
Predecessors: [0x293]
Successors: [0x57b]
---
0x29f JUMPDEST
0x2a0 POP
0x2a1 PUSH2 0x1be
0x2a4 PUSH2 0x57b
0x2a7 JUMP
---
0x29f: JUMPDEST 
0x2a1: V187 = 0x1be
0x2a4: V188 = 0x57b
0x2a7: JUMP 0x57b
---
Entry stack: [V11, V183]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x2a8
[0x2a8:0x2af]
---
Predecessors: [0xb8]
Successors: [0x2b0, 0x2b4]
---
0x2a8 JUMPDEST
0x2a9 CALLVALUE
0x2aa DUP1
0x2ab ISZERO
0x2ac PUSH2 0x2b4
0x2af JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V189 = CALLVALUE
0x2ab: V190 = ISZERO V189
0x2ac: V191 = 0x2b4
0x2af: JUMPI 0x2b4 V190
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V189]
Exit stack: [V11, V189]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x2a8]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
---
0x2b0: V192 = 0x0
0x2b3: REVERT 0x0 0x0
---
Entry stack: [V11, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V189]

================================

Block 0x2b4
[0x2b4:0x2bc]
---
Predecessors: [0x2a8]
Successors: [0x581]
---
0x2b4 JUMPDEST
0x2b5 POP
0x2b6 PUSH2 0x1be
0x2b9 PUSH2 0x581
0x2bc JUMP
---
0x2b4: JUMPDEST 
0x2b6: V193 = 0x1be
0x2b9: V194 = 0x581
0x2bc: JUMP 0x581
---
Entry stack: [V11, V189]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x2bd
[0x2bd:0x2c4]
---
Predecessors: [0xc3]
Successors: [0x2c5, 0x2c9]
---
0x2bd JUMPDEST
0x2be CALLVALUE
0x2bf DUP1
0x2c0 ISZERO
0x2c1 PUSH2 0x2c9
0x2c4 JUMPI
---
0x2bd: JUMPDEST 
0x2be: V195 = CALLVALUE
0x2c0: V196 = ISZERO V195
0x2c1: V197 = 0x2c9
0x2c4: JUMPI 0x2c9 V196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V195]
Exit stack: [V11, V195]

================================

Block 0x2c5
[0x2c5:0x2c8]
---
Predecessors: [0x2bd]
Successors: []
---
0x2c5 PUSH1 0x0
0x2c7 DUP1
0x2c8 REVERT
---
0x2c5: V198 = 0x0
0x2c8: REVERT 0x0 0x0
---
Entry stack: [V11, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V195]

================================

Block 0x2c9
[0x2c9:0x2d1]
---
Predecessors: [0x2bd]
Successors: [0x587]
---
0x2c9 JUMPDEST
0x2ca POP
0x2cb PUSH2 0x1fa
0x2ce PUSH2 0x587
0x2d1 JUMP
---
0x2c9: JUMPDEST 
0x2cb: V199 = 0x1fa
0x2ce: V200 = 0x587
0x2d1: JUMP 0x587
---
Entry stack: [V11, V195]
Stack pops: 1
Stack additions: [0x1fa]
Exit stack: [V11, 0x1fa]

================================

Block 0x2d2
[0x2d2:0x2d9]
---
Predecessors: [0xce]
Successors: [0x2da, 0x2de]
---
0x2d2 JUMPDEST
0x2d3 CALLVALUE
0x2d4 DUP1
0x2d5 ISZERO
0x2d6 PUSH2 0x2de
0x2d9 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V201 = CALLVALUE
0x2d5: V202 = ISZERO V201
0x2d6: V203 = 0x2de
0x2d9: JUMPI 0x2de V202
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V201]
Exit stack: [V11, V201]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d2]
Successors: []
---
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd REVERT
---
0x2da: V204 = 0x0
0x2dd: REVERT 0x0 0x0
---
Entry stack: [V11, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V201]

================================

Block 0x2de
[0x2de:0x2e6]
---
Predecessors: [0x2d2]
Successors: [0x5a4]
---
0x2de JUMPDEST
0x2df POP
0x2e0 PUSH2 0x1be
0x2e3 PUSH2 0x5a4
0x2e6 JUMP
---
0x2de: JUMPDEST 
0x2e0: V205 = 0x1be
0x2e3: V206 = 0x5a4
0x2e6: JUMP 0x5a4
---
Entry stack: [V11, V201]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x2e7
[0x2e7:0x2ee]
---
Predecessors: [0xd9]
Successors: [0x2ef, 0x2f3]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 DUP1
0x2ea ISZERO
0x2eb PUSH2 0x2f3
0x2ee JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V207 = CALLVALUE
0x2ea: V208 = ISZERO V207
0x2eb: V209 = 0x2f3
0x2ee: JUMPI 0x2f3 V208
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V207]
Exit stack: [V11, V207]

================================

Block 0x2ef
[0x2ef:0x2f2]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 REVERT
---
0x2ef: V210 = 0x0
0x2f2: REVERT 0x0 0x0
---
Entry stack: [V11, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V207]

================================

Block 0x2f3
[0x2f3:0x2fb]
---
Predecessors: [0x2e7]
Successors: [0x5aa]
---
0x2f3 JUMPDEST
0x2f4 POP
0x2f5 PUSH2 0x1be
0x2f8 PUSH2 0x5aa
0x2fb JUMP
---
0x2f3: JUMPDEST 
0x2f5: V211 = 0x1be
0x2f8: V212 = 0x5aa
0x2fb: JUMP 0x5aa
---
Entry stack: [V11, V207]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x2fc
[0x2fc:0x303]
---
Predecessors: [0xe4]
Successors: [0x304, 0x308]
---
0x2fc JUMPDEST
0x2fd CALLVALUE
0x2fe DUP1
0x2ff ISZERO
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V213 = CALLVALUE
0x2ff: V214 = ISZERO V213
0x300: V215 = 0x308
0x303: JUMPI 0x308 V214
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V213]
Exit stack: [V11, V213]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2fc]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V216 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V11, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V213]

================================

Block 0x308
[0x308:0x310]
---
Predecessors: [0x2fc]
Successors: [0x5b0]
---
0x308 JUMPDEST
0x309 POP
0x30a PUSH2 0x161
0x30d PUSH2 0x5b0
0x310 JUMP
---
0x308: JUMPDEST 
0x30a: V217 = 0x161
0x30d: V218 = 0x5b0
0x310: JUMP 0x5b0
---
Entry stack: [V11, V213]
Stack pops: 1
Stack additions: [0x161]
Exit stack: [V11, 0x161]

================================

Block 0x311
[0x311:0x318]
---
Predecessors: [0xef]
Successors: [0x319, 0x31d]
---
0x311 JUMPDEST
0x312 CALLVALUE
0x313 DUP1
0x314 ISZERO
0x315 PUSH2 0x31d
0x318 JUMPI
---
0x311: JUMPDEST 
0x312: V219 = CALLVALUE
0x314: V220 = ISZERO V219
0x315: V221 = 0x31d
0x318: JUMPI 0x31d V220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V219]
Exit stack: [V11, V219]

================================

Block 0x319
[0x319:0x31c]
---
Predecessors: [0x311]
Successors: []
---
0x319 PUSH1 0x0
0x31b DUP1
0x31c REVERT
---
0x319: V222 = 0x0
0x31c: REVERT 0x0 0x0
---
Entry stack: [V11, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V219]

================================

Block 0x31d
[0x31d:0x325]
---
Predecessors: [0x311]
Successors: [0x641]
---
0x31d JUMPDEST
0x31e POP
0x31f PUSH2 0x1fa
0x322 PUSH2 0x641
0x325 JUMP
---
0x31d: JUMPDEST 
0x31f: V223 = 0x1fa
0x322: V224 = 0x641
0x325: JUMP 0x641
---
Entry stack: [V11, V219]
Stack pops: 1
Stack additions: [0x1fa]
Exit stack: [V11, 0x1fa]

================================

Block 0x326
[0x326:0x32d]
---
Predecessors: [0xfa]
Successors: [0x32e, 0x332]
---
0x326 JUMPDEST
0x327 CALLVALUE
0x328 DUP1
0x329 ISZERO
0x32a PUSH2 0x332
0x32d JUMPI
---
0x326: JUMPDEST 
0x327: V225 = CALLVALUE
0x329: V226 = ISZERO V225
0x32a: V227 = 0x332
0x32d: JUMPI 0x332 V226
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V225]
Exit stack: [V11, V225]

================================

Block 0x32e
[0x32e:0x331]
---
Predecessors: [0x326]
Successors: []
---
0x32e PUSH1 0x0
0x330 DUP1
0x331 REVERT
---
0x32e: V228 = 0x0
0x331: REVERT 0x0 0x0
---
Entry stack: [V11, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V225]

================================

Block 0x332
[0x332:0x33a]
---
Predecessors: [0x326]
Successors: [0x65e]
---
0x332 JUMPDEST
0x333 POP
0x334 PUSH2 0x18d
0x337 PUSH2 0x65e
0x33a JUMP
---
0x332: JUMPDEST 
0x334: V229 = 0x18d
0x337: V230 = 0x65e
0x33a: JUMP 0x65e
---
Entry stack: [V11, V225]
Stack pops: 1
Stack additions: [0x18d]
Exit stack: [V11, 0x18d]

================================

Block 0x33b
[0x33b:0x342]
---
Predecessors: [0x105]
Successors: [0x343, 0x347]
---
0x33b JUMPDEST
0x33c CALLVALUE
0x33d DUP1
0x33e ISZERO
0x33f PUSH2 0x347
0x342 JUMPI
---
0x33b: JUMPDEST 
0x33c: V231 = CALLVALUE
0x33e: V232 = ISZERO V231
0x33f: V233 = 0x347
0x342: JUMPI 0x347 V232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V231]
Exit stack: [V11, V231]

================================

Block 0x343
[0x343:0x346]
---
Predecessors: [0x33b]
Successors: []
---
0x343 PUSH1 0x0
0x345 DUP1
0x346 REVERT
---
0x343: V234 = 0x0
0x346: REVERT 0x0 0x0
---
Entry stack: [V11, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V231]

================================

Block 0x347
[0x347:0x34f]
---
Predecessors: [0x33b]
Successors: [0x66d]
---
0x347 JUMPDEST
0x348 POP
0x349 PUSH2 0x1be
0x34c PUSH2 0x66d
0x34f JUMP
---
0x347: JUMPDEST 
0x349: V235 = 0x1be
0x34c: V236 = 0x66d
0x34f: JUMP 0x66d
---
Entry stack: [V11, V231]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x350
[0x350:0x362]
---
Predecessors: [0x158]
Successors: [0x363, 0x367]
---
0x350 JUMPDEST
0x351 PUSH1 0x1
0x353 SLOAD
0x354 PUSH1 0x1
0x356 PUSH1 0xa0
0x358 PUSH1 0x2
0x35a EXP
0x35b SUB
0x35c AND
0x35d CALLER
0x35e EQ
0x35f PUSH2 0x367
0x362 JUMPI
---
0x350: JUMPDEST 
0x351: V237 = 0x1
0x353: V238 = S[0x1]
0x354: V239 = 0x1
0x356: V240 = 0xa0
0x358: V241 = 0x2
0x35a: V242 = EXP 0x2 0xa0
0x35b: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35c: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x35d: V245 = CALLER
0x35e: V246 = EQ V245 V244
0x35f: V247 = 0x367
0x362: JUMPI 0x367 V246
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x363
[0x363:0x366]
---
Predecessors: [0x350]
Successors: []
---
0x363 PUSH1 0x0
0x365 DUP1
0x366 REVERT
---
0x363: V248 = 0x0
0x366: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x367
[0x367:0x371]
---
Predecessors: [0x350]
Successors: [0x372, 0x376]
---
0x367 JUMPDEST
0x368 PUSH1 0x3
0x36a SLOAD
0x36b TIMESTAMP
0x36c LT
0x36d ISZERO
0x36e PUSH2 0x376
0x371 JUMPI
---
0x367: JUMPDEST 
0x368: V249 = 0x3
0x36a: V250 = S[0x3]
0x36b: V251 = TIMESTAMP
0x36c: V252 = LT V251 V250
0x36d: V253 = ISZERO V252
0x36e: V254 = 0x376
0x371: JUMPI 0x376 V253
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x372
[0x372:0x375]
---
Predecessors: [0x367]
Successors: []
---
0x372 PUSH1 0x0
0x374 DUP1
0x375 REVERT
---
0x372: V255 = 0x0
0x375: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x376
[0x376:0x390]
---
Predecessors: [0x367]
Successors: [0x673]
---
0x376 JUMPDEST
0x377 PUSH1 0x8
0x379 SLOAD
0x37a CALLER
0x37b SWAP1
0x37c PUSH2 0x8fc
0x37f SWAP1
0x380 PUSH2 0x391
0x383 SWAP1
0x384 ADDRESS
0x385 BALANCE
0x386 SWAP1
0x387 PUSH4 0xffffffff
0x38c PUSH2 0x673
0x38f AND
0x390 JUMP
---
0x376: JUMPDEST 
0x377: V256 = 0x8
0x379: V257 = S[0x8]
0x37a: V258 = CALLER
0x37c: V259 = 0x8fc
0x380: V260 = 0x391
0x384: V261 = ADDRESS
0x385: V262 = BALANCE V261
0x387: V263 = 0xffffffff
0x38c: V264 = 0x673
0x38f: V265 = AND 0x673 0xffffffff
0x390: JUMP 0x673
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: [V258, 0x8fc, 0x391, V262, V257]
Exit stack: [V11, 0x161, V258, 0x8fc, 0x391, V262, V257]

================================

Block 0x391
[0x391:0x3af]
---
Predecessors: [0x680]
Successors: [0x3b0, 0x3b9]
---
0x391 JUMPDEST
0x392 PUSH1 0x40
0x394 MLOAD
0x395 DUP2
0x396 ISZERO
0x397 SWAP1
0x398 SWAP3
0x399 MUL
0x39a SWAP2
0x39b PUSH1 0x0
0x39d DUP2
0x39e DUP2
0x39f DUP2
0x3a0 DUP6
0x3a1 DUP9
0x3a2 DUP9
0x3a3 CALL
0x3a4 SWAP4
0x3a5 POP
0x3a6 POP
0x3a7 POP
0x3a8 POP
0x3a9 ISZERO
0x3aa DUP1
0x3ab ISZERO
0x3ac PUSH2 0x3b9
0x3af JUMPI
---
0x391: JUMPDEST 
0x392: V266 = 0x40
0x394: V267 = M[0x40]
0x396: V268 = ISZERO V565
0x399: V269 = MUL S1 V268
0x39b: V270 = 0x0
0x3a3: V271 = CALL V269 S2 V565 V267 0x0 V267 0x0
0x3a9: V272 = ISZERO V271
0x3ab: V273 = ISZERO V272
0x3ac: V274 = 0x3b9
0x3af: JUMPI 0x3b9 V273
---
Entry stack: [V11, 0x161, S2, S1, V565]
Stack pops: 3
Stack additions: [V272]
Exit stack: [V11, 0x161, V272]

================================

Block 0x3b0
[0x3b0:0x3b8]
---
Predecessors: [0x391]
Successors: []
---
0x3b0 RETURNDATASIZE
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 RETURNDATACOPY
0x3b5 RETURNDATASIZE
0x3b6 PUSH1 0x0
0x3b8 REVERT
---
0x3b0: V275 = RETURNDATASIZE
0x3b1: V276 = 0x0
0x3b4: RETURNDATACOPY 0x0 0x0 V275
0x3b5: V277 = RETURNDATASIZE
0x3b6: V278 = 0x0
0x3b8: REVERT 0x0 V277
---
Entry stack: [V11, 0x161, V272]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V272]

================================

Block 0x3b9
[0x3b9:0x3e0]
---
Predecessors: [0x391]
Successors: [0x673]
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb PUSH1 0x8
0x3bd SLOAD
0x3be PUSH1 0x0
0x3c0 DUP1
0x3c1 MLOAD
0x3c2 PUSH1 0x20
0x3c4 PUSH2 0x69c
0x3c7 DUP4
0x3c8 CODECOPY
0x3c9 DUP2
0x3ca MLOAD
0x3cb SWAP2
0x3cc MSTORE
0x3cd SWAP1
0x3ce CALLER
0x3cf SWAP1
0x3d0 PUSH2 0x3e1
0x3d3 SWAP1
0x3d4 ADDRESS
0x3d5 BALANCE
0x3d6 SWAP1
0x3d7 PUSH4 0xffffffff
0x3dc PUSH2 0x673
0x3df AND
0x3e0 JUMP
---
0x3b9: JUMPDEST 
0x3bb: V279 = 0x8
0x3bd: V280 = S[0x8]
0x3be: V281 = 0x0
0x3c1: V282 = M[0x0]
0x3c2: V283 = 0x20
0x3c4: V284 = 0x69c
0x3c8: CODECOPY 0x0 0x69c 0x20
0x3ca: V285 = M[0x0]
0x3cc: M[0x0] = V282
0x3ce: V286 = CALLER
0x3d0: V287 = 0x3e1
0x3d4: V288 = ADDRESS
0x3d5: V289 = BALANCE V288
0x3d7: V290 = 0xffffffff
0x3dc: V291 = 0x673
0x3df: V292 = AND 0x673 0xffffffff
0x3e0: JUMP 0x673
---
Entry stack: [V11, 0x161, V272]
Stack pops: 1
Stack additions: [V285, V286, 0x3e1, V289, V280]
Exit stack: [V11, 0x161, V285, V286, 0x3e1, V289, V280]

================================

Block 0x3e1
[0x3e1:0x404]
---
Predecessors: [0x680]
Successors: [0x161]
---
0x3e1 JUMPDEST
0x3e2 PUSH1 0x40
0x3e4 DUP1
0x3e5 MLOAD
0x3e6 PUSH1 0x1
0x3e8 PUSH1 0xa0
0x3ea PUSH1 0x2
0x3ec EXP
0x3ed SUB
0x3ee SWAP1
0x3ef SWAP4
0x3f0 AND
0x3f1 DUP4
0x3f2 MSTORE
0x3f3 PUSH1 0x20
0x3f5 DUP4
0x3f6 ADD
0x3f7 SWAP2
0x3f8 SWAP1
0x3f9 SWAP2
0x3fa MSTORE
0x3fb DUP1
0x3fc MLOAD
0x3fd SWAP2
0x3fe DUP3
0x3ff SWAP1
0x400 SUB
0x401 ADD
0x402 SWAP1
0x403 LOG1
0x404 JUMP
---
0x3e1: JUMPDEST 
0x3e2: V293 = 0x40
0x3e5: V294 = M[0x40]
0x3e6: V295 = 0x1
0x3e8: V296 = 0xa0
0x3ea: V297 = 0x2
0x3ec: V298 = EXP 0x2 0xa0
0x3ed: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f0: V300 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x3f2: M[V294] = V300
0x3f3: V301 = 0x20
0x3f6: V302 = ADD V294 0x20
0x3fa: M[V302] = V565
0x3fc: V303 = M[0x40]
0x400: V304 = SUB V294 V303
0x401: V305 = ADD V304 0x40
0x403: LOG V303 V305 S2
0x404: JUMP 0x161
---
Entry stack: [V11, 0x161, S2, S1, V565]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x405
[0x405:0x417]
---
Predecessors: [0x16f]
Successors: [0x418, 0x41c]
---
0x405 JUMPDEST
0x406 PUSH1 0x1
0x408 SLOAD
0x409 PUSH1 0x1
0x40b PUSH1 0xa0
0x40d PUSH1 0x2
0x40f EXP
0x410 SUB
0x411 AND
0x412 CALLER
0x413 EQ
0x414 PUSH2 0x41c
0x417 JUMPI
---
0x405: JUMPDEST 
0x406: V306 = 0x1
0x408: V307 = S[0x1]
0x409: V308 = 0x1
0x40b: V309 = 0xa0
0x40d: V310 = 0x2
0x40f: V311 = EXP 0x2 0xa0
0x410: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x412: V314 = CALLER
0x413: V315 = EQ V314 V313
0x414: V316 = 0x41c
0x417: JUMPI 0x41c V315
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x418
[0x418:0x41b]
---
Predecessors: [0x405]
Successors: []
---
0x418 PUSH1 0x0
0x41a DUP1
0x41b REVERT
---
0x418: V317 = 0x0
0x41b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x41c
[0x41c:0x426]
---
Predecessors: [0x405]
Successors: [0x427, 0x42b]
---
0x41c JUMPDEST
0x41d PUSH1 0x6
0x41f SLOAD
0x420 TIMESTAMP
0x421 LT
0x422 ISZERO
0x423 PUSH2 0x42b
0x426 JUMPI
---
0x41c: JUMPDEST 
0x41d: V318 = 0x6
0x41f: V319 = S[0x6]
0x420: V320 = TIMESTAMP
0x421: V321 = LT V320 V319
0x422: V322 = ISZERO V321
0x423: V323 = 0x42b
0x426: JUMPI 0x42b V322
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x427
[0x427:0x42a]
---
Predecessors: [0x41c]
Successors: []
---
0x427 PUSH1 0x0
0x429 DUP1
0x42a REVERT
---
0x427: V324 = 0x0
0x42a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x42b
[0x42b:0x44e]
---
Predecessors: [0x41c]
Successors: [0x44f, 0x458]
---
0x42b JUMPDEST
0x42c PUSH1 0x40
0x42e MLOAD
0x42f CALLER
0x430 SWAP1
0x431 ADDRESS
0x432 BALANCE
0x433 DUP1
0x434 ISZERO
0x435 PUSH2 0x8fc
0x438 MUL
0x439 SWAP2
0x43a PUSH1 0x0
0x43c DUP2
0x43d DUP2
0x43e DUP2
0x43f DUP6
0x440 DUP9
0x441 DUP9
0x442 CALL
0x443 SWAP4
0x444 POP
0x445 POP
0x446 POP
0x447 POP
0x448 ISZERO
0x449 DUP1
0x44a ISZERO
0x44b PUSH2 0x458
0x44e JUMPI
---
0x42b: JUMPDEST 
0x42c: V325 = 0x40
0x42e: V326 = M[0x40]
0x42f: V327 = CALLER
0x431: V328 = ADDRESS
0x432: V329 = BALANCE V328
0x434: V330 = ISZERO V329
0x435: V331 = 0x8fc
0x438: V332 = MUL 0x8fc V330
0x43a: V333 = 0x0
0x442: V334 = CALL V332 V327 V329 V326 0x0 V326 0x0
0x448: V335 = ISZERO V334
0x44a: V336 = ISZERO V335
0x44b: V337 = 0x458
0x44e: JUMPI 0x458 V336
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: [V335]
Exit stack: [V11, 0x161, V335]

================================

Block 0x44f
[0x44f:0x457]
---
Predecessors: [0x42b]
Successors: []
---
0x44f RETURNDATASIZE
0x450 PUSH1 0x0
0x452 DUP1
0x453 RETURNDATACOPY
0x454 RETURNDATASIZE
0x455 PUSH1 0x0
0x457 REVERT
---
0x44f: V338 = RETURNDATASIZE
0x450: V339 = 0x0
0x453: RETURNDATACOPY 0x0 0x0 V338
0x454: V340 = RETURNDATASIZE
0x455: V341 = 0x0
0x457: REVERT 0x0 V340
---
Entry stack: [V11, 0x161, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V335]

================================

Block 0x458
[0x458:0x483]
---
Predecessors: [0x42b]
Successors: [0x161]
---
0x458 JUMPDEST
0x459 POP
0x45a PUSH1 0x40
0x45c DUP1
0x45d MLOAD
0x45e CALLER
0x45f DUP2
0x460 MSTORE
0x461 ADDRESS
0x462 BALANCE
0x463 PUSH1 0x20
0x465 DUP3
0x466 ADD
0x467 MSTORE
0x468 DUP2
0x469 MLOAD
0x46a PUSH1 0x0
0x46c DUP1
0x46d MLOAD
0x46e PUSH1 0x20
0x470 PUSH2 0x69c
0x473 DUP4
0x474 CODECOPY
0x475 DUP2
0x476 MLOAD
0x477 SWAP2
0x478 MSTORE
0x479 SWAP3
0x47a SWAP2
0x47b DUP2
0x47c SWAP1
0x47d SUB
0x47e SWAP1
0x47f SWAP2
0x480 ADD
0x481 SWAP1
0x482 LOG1
0x483 JUMP
---
0x458: JUMPDEST 
0x45a: V342 = 0x40
0x45d: V343 = M[0x40]
0x45e: V344 = CALLER
0x460: M[V343] = V344
0x461: V345 = ADDRESS
0x462: V346 = BALANCE V345
0x463: V347 = 0x20
0x466: V348 = ADD V343 0x20
0x467: M[V348] = V346
0x469: V349 = M[0x40]
0x46a: V350 = 0x0
0x46d: V351 = M[0x0]
0x46e: V352 = 0x20
0x470: V353 = 0x69c
0x474: CODECOPY 0x0 0x69c 0x20
0x476: V354 = M[0x0]
0x478: M[0x0] = V351
0x47d: V355 = SUB V343 V349
0x480: V356 = ADD 0x40 V355
0x482: LOG V349 V356 V354
0x483: JUMP 0x161
---
Entry stack: [V11, 0x161, V335]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x484
[0x484:0x492]
---
Predecessors: [0x184]
Successors: [0x18d]
---
0x484 JUMPDEST
0x485 PUSH1 0x0
0x487 SLOAD
0x488 PUSH1 0x1
0x48a PUSH1 0xa0
0x48c PUSH1 0x2
0x48e EXP
0x48f SUB
0x490 AND
0x491 DUP2
0x492 JUMP
---
0x484: JUMPDEST 
0x485: V357 = 0x0
0x487: V358 = S[0x0]
0x488: V359 = 0x1
0x48a: V360 = 0xa0
0x48c: V361 = 0x2
0x48e: V362 = EXP 0x2 0xa0
0x48f: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x490: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x492: JUMP 0x18d
---
Entry stack: [V11, 0x18d]
Stack pops: 1
Stack additions: [S0, V364]
Exit stack: [V11, 0x18d, V364]

================================

Block 0x493
[0x493:0x498]
---
Predecessors: [0x1b5]
Successors: [0x1be]
---
0x493 JUMPDEST
0x494 PUSH1 0x4
0x496 SLOAD
0x497 DUP2
0x498 JUMP
---
0x493: JUMPDEST 
0x494: V365 = 0x4
0x496: V366 = S[0x4]
0x498: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, V366]
Exit stack: [V11, 0x1be, V366]

================================

Block 0x499
[0x499:0x49d]
---
Predecessors: [0x1dc]
Successors: [0x1be]
---
0x499 JUMPDEST
0x49a ADDRESS
0x49b BALANCE
0x49c SWAP1
0x49d JUMP
---
0x499: JUMPDEST 
0x49a: V367 = ADDRESS
0x49b: V368 = BALANCE V367
0x49d: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [V368]
Exit stack: [V11, V368]

================================

Block 0x49e
[0x49e:0x4ba]
---
Predecessors: [0x1f1]
Successors: [0x1fa]
---
0x49e JUMPDEST
0x49f PUSH1 0x1
0x4a1 SLOAD
0x4a2 PUSH1 0x4
0x4a4 SLOAD
0x4a5 PUSH1 0x7
0x4a7 SLOAD
0x4a8 PUSH1 0x1
0x4aa PUSH1 0xa0
0x4ac PUSH1 0x2
0x4ae EXP
0x4af SUB
0x4b0 SWAP1
0x4b1 SWAP3
0x4b2 AND
0x4b3 SWAP2
0x4b4 ADDRESS
0x4b5 BALANCE
0x4b6 SWAP1
0x4b7 SWAP2
0x4b8 SWAP3
0x4b9 SWAP4
0x4ba JUMP
---
0x49e: JUMPDEST 
0x49f: V369 = 0x1
0x4a1: V370 = S[0x1]
0x4a2: V371 = 0x4
0x4a4: V372 = S[0x4]
0x4a5: V373 = 0x7
0x4a7: V374 = S[0x7]
0x4a8: V375 = 0x1
0x4aa: V376 = 0xa0
0x4ac: V377 = 0x2
0x4ae: V378 = EXP 0x2 0xa0
0x4af: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b2: V380 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x4b4: V381 = ADDRESS
0x4b5: V382 = BALANCE V381
0x4ba: JUMP 0x1fa
---
Entry stack: [V11, 0x1fa]
Stack pops: 1
Stack additions: [V380, V372, V374, V382]
Exit stack: [V11, V380, V372, V374, V382]

================================

Block 0x4bb
[0x4bb:0x4c0]
---
Predecessors: [0x236]
Successors: [0x1be]
---
0x4bb JUMPDEST
0x4bc PUSH1 0x8
0x4be SLOAD
0x4bf DUP2
0x4c0 JUMP
---
0x4bb: JUMPDEST 
0x4bc: V383 = 0x8
0x4be: V384 = S[0x8]
0x4c0: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, V384]
Exit stack: [V11, 0x1be, V384]

================================

Block 0x4c1
[0x4c1:0x4c6]
---
Predecessors: [0x24b]
Successors: [0x1be]
---
0x4c1 JUMPDEST
0x4c2 PUSH1 0x9
0x4c4 SLOAD
0x4c5 DUP2
0x4c6 JUMP
---
0x4c1: JUMPDEST 
0x4c2: V385 = 0x9
0x4c4: V386 = S[0x9]
0x4c6: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, V386]
Exit stack: [V11, 0x1be, V386]

================================

Block 0x4c7
[0x4c7:0x4d9]
---
Predecessors: [0x260]
Successors: [0x4da, 0x4de]
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x1
0x4ca SLOAD
0x4cb PUSH1 0x1
0x4cd PUSH1 0xa0
0x4cf PUSH1 0x2
0x4d1 EXP
0x4d2 SUB
0x4d3 AND
0x4d4 CALLER
0x4d5 EQ
0x4d6 PUSH2 0x4de
0x4d9 JUMPI
---
0x4c7: JUMPDEST 
0x4c8: V387 = 0x1
0x4ca: V388 = S[0x1]
0x4cb: V389 = 0x1
0x4cd: V390 = 0xa0
0x4cf: V391 = 0x2
0x4d1: V392 = EXP 0x2 0xa0
0x4d2: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d3: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x4d4: V395 = CALLER
0x4d5: V396 = EQ V395 V394
0x4d6: V397 = 0x4de
0x4d9: JUMPI 0x4de V396
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x4da
[0x4da:0x4dd]
---
Predecessors: [0x4c7]
Successors: []
---
0x4da PUSH1 0x0
0x4dc DUP1
0x4dd REVERT
---
0x4da: V398 = 0x0
0x4dd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x4de
[0x4de:0x4e8]
---
Predecessors: [0x4c7]
Successors: [0x4e9, 0x4ed]
---
0x4de JUMPDEST
0x4df PUSH1 0x5
0x4e1 SLOAD
0x4e2 TIMESTAMP
0x4e3 LT
0x4e4 ISZERO
0x4e5 PUSH2 0x4ed
0x4e8 JUMPI
---
0x4de: JUMPDEST 
0x4df: V399 = 0x5
0x4e1: V400 = S[0x5]
0x4e2: V401 = TIMESTAMP
0x4e3: V402 = LT V401 V400
0x4e4: V403 = ISZERO V402
0x4e5: V404 = 0x4ed
0x4e8: JUMPI 0x4ed V403
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x4e9
[0x4e9:0x4ec]
---
Predecessors: [0x4de]
Successors: []
---
0x4e9 PUSH1 0x0
0x4eb DUP1
0x4ec REVERT
---
0x4e9: V405 = 0x0
0x4ec: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x4ed
[0x4ed:0x507]
---
Predecessors: [0x4de]
Successors: [0x673]
---
0x4ed JUMPDEST
0x4ee PUSH1 0xa
0x4f0 SLOAD
0x4f1 CALLER
0x4f2 SWAP1
0x4f3 PUSH2 0x8fc
0x4f6 SWAP1
0x4f7 PUSH2 0x508
0x4fa SWAP1
0x4fb ADDRESS
0x4fc BALANCE
0x4fd SWAP1
0x4fe PUSH4 0xffffffff
0x503 PUSH2 0x673
0x506 AND
0x507 JUMP
---
0x4ed: JUMPDEST 
0x4ee: V406 = 0xa
0x4f0: V407 = S[0xa]
0x4f1: V408 = CALLER
0x4f3: V409 = 0x8fc
0x4f7: V410 = 0x508
0x4fb: V411 = ADDRESS
0x4fc: V412 = BALANCE V411
0x4fe: V413 = 0xffffffff
0x503: V414 = 0x673
0x506: V415 = AND 0x673 0xffffffff
0x507: JUMP 0x673
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: [V408, 0x8fc, 0x508, V412, V407]
Exit stack: [V11, 0x161, V408, 0x8fc, 0x508, V412, V407]

================================

Block 0x508
[0x508:0x526]
---
Predecessors: [0x680]
Successors: [0x527, 0x530]
---
0x508 JUMPDEST
0x509 PUSH1 0x40
0x50b MLOAD
0x50c DUP2
0x50d ISZERO
0x50e SWAP1
0x50f SWAP3
0x510 MUL
0x511 SWAP2
0x512 PUSH1 0x0
0x514 DUP2
0x515 DUP2
0x516 DUP2
0x517 DUP6
0x518 DUP9
0x519 DUP9
0x51a CALL
0x51b SWAP4
0x51c POP
0x51d POP
0x51e POP
0x51f POP
0x520 ISZERO
0x521 DUP1
0x522 ISZERO
0x523 PUSH2 0x530
0x526 JUMPI
---
0x508: JUMPDEST 
0x509: V416 = 0x40
0x50b: V417 = M[0x40]
0x50d: V418 = ISZERO V565
0x510: V419 = MUL S1 V418
0x512: V420 = 0x0
0x51a: V421 = CALL V419 S2 V565 V417 0x0 V417 0x0
0x520: V422 = ISZERO V421
0x522: V423 = ISZERO V422
0x523: V424 = 0x530
0x526: JUMPI 0x530 V423
---
Entry stack: [V11, 0x161, S2, S1, V565]
Stack pops: 3
Stack additions: [V422]
Exit stack: [V11, 0x161, V422]

================================

Block 0x527
[0x527:0x52f]
---
Predecessors: [0x508]
Successors: []
---
0x527 RETURNDATASIZE
0x528 PUSH1 0x0
0x52a DUP1
0x52b RETURNDATACOPY
0x52c RETURNDATASIZE
0x52d PUSH1 0x0
0x52f REVERT
---
0x527: V425 = RETURNDATASIZE
0x528: V426 = 0x0
0x52b: RETURNDATACOPY 0x0 0x0 V425
0x52c: V427 = RETURNDATASIZE
0x52d: V428 = 0x0
0x52f: REVERT 0x0 V427
---
Entry stack: [V11, 0x161, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V422]

================================

Block 0x530
[0x530:0x557]
---
Predecessors: [0x508]
Successors: [0x673]
---
0x530 JUMPDEST
0x531 POP
0x532 PUSH1 0xa
0x534 SLOAD
0x535 PUSH1 0x0
0x537 DUP1
0x538 MLOAD
0x539 PUSH1 0x20
0x53b PUSH2 0x69c
0x53e DUP4
0x53f CODECOPY
0x540 DUP2
0x541 MLOAD
0x542 SWAP2
0x543 MSTORE
0x544 SWAP1
0x545 CALLER
0x546 SWAP1
0x547 PUSH2 0x3e1
0x54a SWAP1
0x54b ADDRESS
0x54c BALANCE
0x54d SWAP1
0x54e PUSH4 0xffffffff
0x553 PUSH2 0x673
0x556 AND
0x557 JUMP
---
0x530: JUMPDEST 
0x532: V429 = 0xa
0x534: V430 = S[0xa]
0x535: V431 = 0x0
0x538: V432 = M[0x0]
0x539: V433 = 0x20
0x53b: V434 = 0x69c
0x53f: CODECOPY 0x0 0x69c 0x20
0x541: V435 = M[0x0]
0x543: M[0x0] = V432
0x545: V436 = CALLER
0x547: V437 = 0x3e1
0x54b: V438 = ADDRESS
0x54c: V439 = BALANCE V438
0x54e: V440 = 0xffffffff
0x553: V441 = 0x673
0x556: V442 = AND 0x673 0xffffffff
0x557: JUMP 0x673
---
Entry stack: [V11, 0x161, V422]
Stack pops: 1
Stack additions: [V435, V436, 0x3e1, V439, V430]
Exit stack: [V11, 0x161, V435, V436, 0x3e1, V439, V430]

================================

Block 0x558
[0x558:0x55d]
---
Predecessors: [0x275]
Successors: [0x1be]
---
0x558 JUMPDEST
0x559 PUSH1 0x2
0x55b SLOAD
0x55c DUP2
0x55d JUMP
---
0x558: JUMPDEST 
0x559: V443 = 0x2
0x55b: V444 = S[0x2]
0x55d: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, V444]
Exit stack: [V11, 0x1be, V444]

================================

Block 0x55e
[0x55e:0x57a]
---
Predecessors: [0x28a]
Successors: [0x1fa]
---
0x55e JUMPDEST
0x55f PUSH1 0x1
0x561 SLOAD
0x562 PUSH1 0x5
0x564 SLOAD
0x565 PUSH1 0x7
0x567 SLOAD
0x568 PUSH1 0x1
0x56a PUSH1 0xa0
0x56c PUSH1 0x2
0x56e EXP
0x56f SUB
0x570 SWAP1
0x571 SWAP3
0x572 AND
0x573 SWAP2
0x574 ADDRESS
0x575 BALANCE
0x576 SWAP1
0x577 SWAP2
0x578 SWAP3
0x579 SWAP4
0x57a JUMP
---
0x55e: JUMPDEST 
0x55f: V445 = 0x1
0x561: V446 = S[0x1]
0x562: V447 = 0x5
0x564: V448 = S[0x5]
0x565: V449 = 0x7
0x567: V450 = S[0x7]
0x568: V451 = 0x1
0x56a: V452 = 0xa0
0x56c: V453 = 0x2
0x56e: V454 = EXP 0x2 0xa0
0x56f: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x572: V456 = AND V446 0xffffffffffffffffffffffffffffffffffffffff
0x574: V457 = ADDRESS
0x575: V458 = BALANCE V457
0x57a: JUMP 0x1fa
---
Entry stack: [V11, 0x1fa]
Stack pops: 1
Stack additions: [V456, V448, V450, V458]
Exit stack: [V11, V456, V448, V450, V458]

================================

Block 0x57b
[0x57b:0x580]
---
Predecessors: [0x29f]
Successors: [0x1be]
---
0x57b JUMPDEST
0x57c PUSH1 0xa
0x57e SLOAD
0x57f DUP2
0x580 JUMP
---
0x57b: JUMPDEST 
0x57c: V459 = 0xa
0x57e: V460 = S[0xa]
0x580: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, V460]
Exit stack: [V11, 0x1be, V460]

================================

Block 0x581
[0x581:0x586]
---
Predecessors: [0x2b4]
Successors: [0x1be]
---
0x581 JUMPDEST
0x582 PUSH1 0x5
0x584 SLOAD
0x585 DUP2
0x586 JUMP
---
0x581: JUMPDEST 
0x582: V461 = 0x5
0x584: V462 = S[0x5]
0x586: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, V462]
Exit stack: [V11, 0x1be, V462]

================================

Block 0x587
[0x587:0x5a3]
---
Predecessors: [0x2c9]
Successors: [0x1fa]
---
0x587 JUMPDEST
0x588 PUSH1 0x1
0x58a SLOAD
0x58b PUSH1 0x6
0x58d SLOAD
0x58e PUSH1 0x7
0x590 SLOAD
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 SWAP1
0x59a SWAP3
0x59b AND
0x59c SWAP2
0x59d ADDRESS
0x59e BALANCE
0x59f SWAP1
0x5a0 SWAP2
0x5a1 SWAP3
0x5a2 SWAP4
0x5a3 JUMP
---
0x587: JUMPDEST 
0x588: V463 = 0x1
0x58a: V464 = S[0x1]
0x58b: V465 = 0x6
0x58d: V466 = S[0x6]
0x58e: V467 = 0x7
0x590: V468 = S[0x7]
0x591: V469 = 0x1
0x593: V470 = 0xa0
0x595: V471 = 0x2
0x597: V472 = EXP 0x2 0xa0
0x598: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V474 = AND V464 0xffffffffffffffffffffffffffffffffffffffff
0x59d: V475 = ADDRESS
0x59e: V476 = BALANCE V475
0x5a3: JUMP 0x1fa
---
Entry stack: [V11, 0x1fa]
Stack pops: 1
Stack additions: [V474, V466, V468, V476]
Exit stack: [V11, V474, V466, V468, V476]

================================

Block 0x5a4
[0x5a4:0x5a9]
---
Predecessors: [0x2de]
Successors: [0x1be]
---
0x5a4 JUMPDEST
0x5a5 PUSH1 0x3
0x5a7 SLOAD
0x5a8 DUP2
0x5a9 JUMP
---
0x5a4: JUMPDEST 
0x5a5: V477 = 0x3
0x5a7: V478 = S[0x3]
0x5a9: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, V478]
Exit stack: [V11, 0x1be, V478]

================================

Block 0x5aa
[0x5aa:0x5af]
---
Predecessors: [0x2f3]
Successors: [0x1be]
---
0x5aa JUMPDEST
0x5ab PUSH1 0x7
0x5ad SLOAD
0x5ae DUP2
0x5af JUMP
---
0x5aa: JUMPDEST 
0x5ab: V479 = 0x7
0x5ad: V480 = S[0x7]
0x5af: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, V480]
Exit stack: [V11, 0x1be, V480]

================================

Block 0x5b0
[0x5b0:0x5c2]
---
Predecessors: [0x308]
Successors: [0x5c3, 0x5c7]
---
0x5b0 JUMPDEST
0x5b1 PUSH1 0x1
0x5b3 SLOAD
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc AND
0x5bd CALLER
0x5be EQ
0x5bf PUSH2 0x5c7
0x5c2 JUMPI
---
0x5b0: JUMPDEST 
0x5b1: V481 = 0x1
0x5b3: V482 = S[0x1]
0x5b4: V483 = 0x1
0x5b6: V484 = 0xa0
0x5b8: V485 = 0x2
0x5ba: V486 = EXP 0x2 0xa0
0x5bb: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x5bd: V489 = CALLER
0x5be: V490 = EQ V489 V488
0x5bf: V491 = 0x5c7
0x5c2: JUMPI 0x5c7 V490
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x5c3
[0x5c3:0x5c6]
---
Predecessors: [0x5b0]
Successors: []
---
0x5c3 PUSH1 0x0
0x5c5 DUP1
0x5c6 REVERT
---
0x5c3: V492 = 0x0
0x5c6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x5c7
[0x5c7:0x5d1]
---
Predecessors: [0x5b0]
Successors: [0x5d2, 0x5d6]
---
0x5c7 JUMPDEST
0x5c8 PUSH1 0x4
0x5ca SLOAD
0x5cb TIMESTAMP
0x5cc LT
0x5cd ISZERO
0x5ce PUSH2 0x5d6
0x5d1 JUMPI
---
0x5c7: JUMPDEST 
0x5c8: V493 = 0x4
0x5ca: V494 = S[0x4]
0x5cb: V495 = TIMESTAMP
0x5cc: V496 = LT V495 V494
0x5cd: V497 = ISZERO V496
0x5ce: V498 = 0x5d6
0x5d1: JUMPI 0x5d6 V497
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x5d2
[0x5d2:0x5d5]
---
Predecessors: [0x5c7]
Successors: []
---
0x5d2 PUSH1 0x0
0x5d4 DUP1
0x5d5 REVERT
---
0x5d2: V499 = 0x0
0x5d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161]

================================

Block 0x5d6
[0x5d6:0x5f0]
---
Predecessors: [0x5c7]
Successors: [0x673]
---
0x5d6 JUMPDEST
0x5d7 PUSH1 0x9
0x5d9 SLOAD
0x5da CALLER
0x5db SWAP1
0x5dc PUSH2 0x8fc
0x5df SWAP1
0x5e0 PUSH2 0x5f1
0x5e3 SWAP1
0x5e4 ADDRESS
0x5e5 BALANCE
0x5e6 SWAP1
0x5e7 PUSH4 0xffffffff
0x5ec PUSH2 0x673
0x5ef AND
0x5f0 JUMP
---
0x5d6: JUMPDEST 
0x5d7: V500 = 0x9
0x5d9: V501 = S[0x9]
0x5da: V502 = CALLER
0x5dc: V503 = 0x8fc
0x5e0: V504 = 0x5f1
0x5e4: V505 = ADDRESS
0x5e5: V506 = BALANCE V505
0x5e7: V507 = 0xffffffff
0x5ec: V508 = 0x673
0x5ef: V509 = AND 0x673 0xffffffff
0x5f0: JUMP 0x673
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: [V502, 0x8fc, 0x5f1, V506, V501]
Exit stack: [V11, 0x161, V502, 0x8fc, 0x5f1, V506, V501]

================================

Block 0x5f1
[0x5f1:0x60f]
---
Predecessors: [0x680]
Successors: [0x610, 0x619]
---
0x5f1 JUMPDEST
0x5f2 PUSH1 0x40
0x5f4 MLOAD
0x5f5 DUP2
0x5f6 ISZERO
0x5f7 SWAP1
0x5f8 SWAP3
0x5f9 MUL
0x5fa SWAP2
0x5fb PUSH1 0x0
0x5fd DUP2
0x5fe DUP2
0x5ff DUP2
0x600 DUP6
0x601 DUP9
0x602 DUP9
0x603 CALL
0x604 SWAP4
0x605 POP
0x606 POP
0x607 POP
0x608 POP
0x609 ISZERO
0x60a DUP1
0x60b ISZERO
0x60c PUSH2 0x619
0x60f JUMPI
---
0x5f1: JUMPDEST 
0x5f2: V510 = 0x40
0x5f4: V511 = M[0x40]
0x5f6: V512 = ISZERO V565
0x5f9: V513 = MUL S1 V512
0x5fb: V514 = 0x0
0x603: V515 = CALL V513 S2 V565 V511 0x0 V511 0x0
0x609: V516 = ISZERO V515
0x60b: V517 = ISZERO V516
0x60c: V518 = 0x619
0x60f: JUMPI 0x619 V517
---
Entry stack: [V11, 0x161, S2, S1, V565]
Stack pops: 3
Stack additions: [V516]
Exit stack: [V11, 0x161, V516]

================================

Block 0x610
[0x610:0x618]
---
Predecessors: [0x5f1]
Successors: []
---
0x610 RETURNDATASIZE
0x611 PUSH1 0x0
0x613 DUP1
0x614 RETURNDATACOPY
0x615 RETURNDATASIZE
0x616 PUSH1 0x0
0x618 REVERT
---
0x610: V519 = RETURNDATASIZE
0x611: V520 = 0x0
0x614: RETURNDATACOPY 0x0 0x0 V519
0x615: V521 = RETURNDATASIZE
0x616: V522 = 0x0
0x618: REVERT 0x0 V521
---
Entry stack: [V11, 0x161, V516]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V516]

================================

Block 0x619
[0x619:0x640]
---
Predecessors: [0x5f1]
Successors: [0x673]
---
0x619 JUMPDEST
0x61a POP
0x61b PUSH1 0x9
0x61d SLOAD
0x61e PUSH1 0x0
0x620 DUP1
0x621 MLOAD
0x622 PUSH1 0x20
0x624 PUSH2 0x69c
0x627 DUP4
0x628 CODECOPY
0x629 DUP2
0x62a MLOAD
0x62b SWAP2
0x62c MSTORE
0x62d SWAP1
0x62e CALLER
0x62f SWAP1
0x630 PUSH2 0x3e1
0x633 SWAP1
0x634 ADDRESS
0x635 BALANCE
0x636 SWAP1
0x637 PUSH4 0xffffffff
0x63c PUSH2 0x673
0x63f AND
0x640 JUMP
---
0x619: JUMPDEST 
0x61b: V523 = 0x9
0x61d: V524 = S[0x9]
0x61e: V525 = 0x0
0x621: V526 = M[0x0]
0x622: V527 = 0x20
0x624: V528 = 0x69c
0x628: CODECOPY 0x0 0x69c 0x20
0x62a: V529 = M[0x0]
0x62c: M[0x0] = V526
0x62e: V530 = CALLER
0x630: V531 = 0x3e1
0x634: V532 = ADDRESS
0x635: V533 = BALANCE V532
0x637: V534 = 0xffffffff
0x63c: V535 = 0x673
0x63f: V536 = AND 0x673 0xffffffff
0x640: JUMP 0x673
---
Entry stack: [V11, 0x161, V516]
Stack pops: 1
Stack additions: [V529, V530, 0x3e1, V533, V524]
Exit stack: [V11, 0x161, V529, V530, 0x3e1, V533, V524]

================================

Block 0x641
[0x641:0x65d]
---
Predecessors: [0x31d]
Successors: [0x1fa]
---
0x641 JUMPDEST
0x642 PUSH1 0x1
0x644 SLOAD
0x645 PUSH1 0x3
0x647 SLOAD
0x648 PUSH1 0x7
0x64a SLOAD
0x64b PUSH1 0x1
0x64d PUSH1 0xa0
0x64f PUSH1 0x2
0x651 EXP
0x652 SUB
0x653 SWAP1
0x654 SWAP3
0x655 AND
0x656 SWAP2
0x657 ADDRESS
0x658 BALANCE
0x659 SWAP1
0x65a SWAP2
0x65b SWAP3
0x65c SWAP4
0x65d JUMP
---
0x641: JUMPDEST 
0x642: V537 = 0x1
0x644: V538 = S[0x1]
0x645: V539 = 0x3
0x647: V540 = S[0x3]
0x648: V541 = 0x7
0x64a: V542 = S[0x7]
0x64b: V543 = 0x1
0x64d: V544 = 0xa0
0x64f: V545 = 0x2
0x651: V546 = EXP 0x2 0xa0
0x652: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x655: V548 = AND V538 0xffffffffffffffffffffffffffffffffffffffff
0x657: V549 = ADDRESS
0x658: V550 = BALANCE V549
0x65d: JUMP 0x1fa
---
Entry stack: [V11, 0x1fa]
Stack pops: 1
Stack additions: [V548, V540, V542, V550]
Exit stack: [V11, V548, V540, V542, V550]

================================

Block 0x65e
[0x65e:0x66c]
---
Predecessors: [0x332]
Successors: [0x18d]
---
0x65e JUMPDEST
0x65f PUSH1 0x1
0x661 SLOAD
0x662 PUSH1 0x1
0x664 PUSH1 0xa0
0x666 PUSH1 0x2
0x668 EXP
0x669 SUB
0x66a AND
0x66b DUP2
0x66c JUMP
---
0x65e: JUMPDEST 
0x65f: V551 = 0x1
0x661: V552 = S[0x1]
0x662: V553 = 0x1
0x664: V554 = 0xa0
0x666: V555 = 0x2
0x668: V556 = EXP 0x2 0xa0
0x669: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66a: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x66c: JUMP 0x18d
---
Entry stack: [V11, 0x18d]
Stack pops: 1
Stack additions: [S0, V558]
Exit stack: [V11, 0x18d, V558]

================================

Block 0x66d
[0x66d:0x672]
---
Predecessors: [0x347]
Successors: [0x1be]
---
0x66d JUMPDEST
0x66e PUSH1 0x6
0x670 SLOAD
0x671 DUP2
0x672 JUMP
---
0x66d: JUMPDEST 
0x66e: V559 = 0x6
0x670: V560 = S[0x6]
0x672: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, V560]
Exit stack: [V11, 0x1be, V560]

================================

Block 0x673
[0x673:0x67e]
---
Predecessors: [0x376, 0x3b9, 0x4ed, 0x530, 0x5d6, 0x619]
Successors: [0x67f, 0x680]
---
0x673 JUMPDEST
0x674 PUSH1 0x0
0x676 DUP2
0x677 DUP4
0x678 DUP2
0x679 ISZERO
0x67a ISZERO
0x67b PUSH2 0x680
0x67e JUMPI
---
0x673: JUMPDEST 
0x674: V561 = 0x0
0x679: V562 = ISZERO S0
0x67a: V563 = ISZERO V562
0x67b: V564 = 0x680
0x67e: JUMPI 0x680 V563
---
Entry stack: [V11, 0x161, S4, S3, {0x391, 0x3e1, 0x508, 0x5f1}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S0, S1]
Exit stack: [V11, 0x161, S4, S3, {0x391, 0x3e1, 0x508, 0x5f1}, S1, S0, 0x0, S0, S1]

================================

Block 0x67f
[0x67f:0x67f]
---
Predecessors: [0x673]
Successors: []
---
0x67f INVALID
---
0x67f: INVALID 
---
Entry stack: [V11, 0x161, S7, S6, {0x391, 0x3e1, 0x508, 0x5f1}, S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, S7, S6, {0x391, 0x3e1, 0x508, 0x5f1}, S4, S3, 0x0, S1, S0]

================================

Block 0x680
[0x680:0x687]
---
Predecessors: [0x673]
Successors: [0x391, 0x3e1, 0x508, 0x5f1]
---
0x680 JUMPDEST
0x681 DIV
0x682 SWAP4
0x683 SWAP3
0x684 POP
0x685 POP
0x686 POP
0x687 JUMP
---
0x680: JUMPDEST 
0x681: V565 = DIV S0 S1
0x687: JUMP {0x391, 0x3e1, 0x508, 0x5f1}
---
Entry stack: [V11, 0x161, S7, S6, {0x391, 0x3e1, 0x508, 0x5f1}, S4, S3, 0x0, S1, S0]
Stack pops: 6
Stack additions: [V565]
Exit stack: [V11, 0x161, S7, S6, V565]

================================

Block 0x688
[0x688:0x693]
---
Predecessors: []
Successors: [0x694, 0x695]
---
0x688 JUMPDEST
0x689 DUP2
0x68a DUP2
0x68b ADD
0x68c DUP3
0x68d DUP2
0x68e LT
0x68f ISZERO
0x690 PUSH2 0x695
0x693 JUMPI
---
0x688: JUMPDEST 
0x68b: V566 = ADD S0 S1
0x68e: V567 = LT V566 S1
0x68f: V568 = ISZERO V567
0x690: V569 = 0x695
0x693: JUMPI 0x695 V568
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, S0, V566]
Exit stack: [S1, S0, V566]

================================

Block 0x694
[0x694:0x694]
---
Predecessors: [0x688]
Successors: []
---
0x694 INVALID
---
0x694: INVALID 
---
Entry stack: [S2, S1, V566]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, V566]

================================

Block 0x695
[0x695:0x6fe]
---
Predecessors: [0x688]
Successors: []
---
0x695 JUMPDEST
0x696 SWAP3
0x697 SWAP2
0x698 POP
0x699 POP
0x69a JUMP
0x69b STOP
0x69c MISSING 0xb2
0x69d DIFFICULTY
0x69e MISSING 0xb9
0x69f LOG1
0x6a0 PUSH27 0xd633c6e83b7983ee04320484956a68ddbe96a0b70dfca1cf19d723
0x6bc LOG1
0x6bd PUSH6 0x627a7a723058
0x6c4 SHA3
0x6c5 SWAP2
0x6c6 GT
0x6c7 CALLDATASIZE
0x6c8 PUSH13 0xcd11f5ac92cb8581cfb60d8d61
0x6d6 DUP5
0x6d7 MISSING 0xac
0x6d8 DELEGATECALL
0x6d9 PUSH9 0x46bf0db2a400fea597
0x6e3 NOT
0x6e4 PUSH26 0x29
---
0x695: JUMPDEST 
0x69a: JUMP S3
0x69b: STOP 
0x69c: MISSING 0xb2
0x69d: V570 = DIFFICULTY
0x69e: MISSING 0xb9
0x69f: LOG S0 S1 S2
0x6a0: V571 = 0xd633c6e83b7983ee04320484956a68ddbe96a0b70dfca1cf19d723
0x6bc: LOG 0xd633c6e83b7983ee04320484956a68ddbe96a0b70dfca1cf19d723 S3 S4
0x6bd: V572 = 0x627a7a723058
0x6c4: V573 = SHA3 0x627a7a723058 S5
0x6c6: V574 = GT S7 S6
0x6c7: V575 = CALLDATASIZE
0x6c8: V576 = 0xcd11f5ac92cb8581cfb60d8d61
0x6d7: MISSING 0xac
0x6d8: V577 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x6d9: V578 = 0x46bf0db2a400fea597
0x6e3: V579 = NOT 0x46bf0db2a400fea597
0x6e4: V580 = 0x29
---
Entry stack: [S2, S1, V566]
Stack pops: 104
Stack additions: [0x29, 0xffffffffffffffffffffffffffffffffffffffffffffffb940f24d5bff015a68, V577]
Exit stack: []

================================

Function 0:
Public function signature: 0x79efb0
Entry block: 0x14c
Exit block: 0x161
Body: 0x14c, 0x154, 0x158, 0x161, 0x350, 0x363, 0x367, 0x372, 0x376, 0x391, 0x3b0, 0x3b9, 0x3e1

Function 1:
Public function signature: 0x67903f9
Entry block: 0x163
Exit block: 0x161
Body: 0x161, 0x163, 0x16b, 0x16f, 0x405, 0x418, 0x41c, 0x427, 0x42b, 0x44f, 0x458

Function 2:
Public function signature: 0x1834906c
Entry block: 0x178
Exit block: 0x18d
Body: 0x178, 0x180, 0x184, 0x18d, 0x484

Function 3:
Public function signature: 0x23b1131c
Entry block: 0x1a9
Exit block: 0x1be
Body: 0x1a9, 0x1b1, 0x1b5, 0x1be, 0x493

Function 4:
Public function signature: 0x2808c8ad
Entry block: 0x1d0
Exit block: 0x1be
Body: 0x1be, 0x1d0, 0x1d8, 0x1dc, 0x499

Function 5:
Public function signature: 0x34592491
Entry block: 0x1e5
Exit block: 0x1fa
Body: 0x1e5, 0x1ed, 0x1f1, 0x1fa, 0x49e

Function 6:
Public function signature: 0x38f8f3cc
Entry block: 0x22a
Exit block: 0x1be
Body: 0x1be, 0x22a, 0x232, 0x236, 0x4bb

Function 7:
Public function signature: 0x39f64289
Entry block: 0x23f
Exit block: 0x1be
Body: 0x1be, 0x23f, 0x247, 0x24b, 0x4c1

Function 8:
Public function signature: 0x4fa3eeff
Entry block: 0x254
Exit block: 0x161
Body: 0x161, 0x254, 0x25c, 0x260, 0x3e1, 0x4c7, 0x4da, 0x4de, 0x4e9, 0x4ed, 0x508, 0x527, 0x530

Function 9:
Public function signature: 0x61c651b9
Entry block: 0x269
Exit block: 0x1be
Body: 0x1be, 0x269, 0x271, 0x275, 0x558

Function 10:
Public function signature: 0x70ad858b
Entry block: 0x27e
Exit block: 0x1fa
Body: 0x1fa, 0x27e, 0x286, 0x28a, 0x55e

Function 11:
Public function signature: 0x8a5cf5ee
Entry block: 0x293
Exit block: 0x1be
Body: 0x1be, 0x293, 0x29b, 0x29f, 0x57b

Function 12:
Public function signature: 0xb4d462b3
Entry block: 0x2a8
Exit block: 0x1be
Body: 0x1be, 0x2a8, 0x2b0, 0x2b4, 0x581

Function 13:
Public function signature: 0xc0a06ecb
Entry block: 0x2bd
Exit block: 0x1fa
Body: 0x1fa, 0x2bd, 0x2c5, 0x2c9, 0x587

Function 14:
Public function signature: 0xc37bcb1e
Entry block: 0x2d2
Exit block: 0x1be
Body: 0x1be, 0x2d2, 0x2da, 0x2de, 0x5a4

Function 15:
Public function signature: 0xcf09e0d0
Entry block: 0x2e7
Exit block: 0x1be
Body: 0x1be, 0x2e7, 0x2ef, 0x2f3, 0x5aa

Function 16:
Public function signature: 0xea98847b
Entry block: 0x2fc
Exit block: 0x161
Body: 0x161, 0x2fc, 0x304, 0x308, 0x3e1, 0x5b0, 0x5c3, 0x5c7, 0x5d2, 0x5d6, 0x5f1, 0x610, 0x619

Function 17:
Public function signature: 0xf48e5f27
Entry block: 0x311
Exit block: 0x1fa
Body: 0x1fa, 0x311, 0x319, 0x31d, 0x641

Function 18:
Public function signature: 0xf851a440
Entry block: 0x326
Exit block: 0x18d
Body: 0x18d, 0x326, 0x32e, 0x332, 0x65e

Function 19:
Public function signature: 0xfb35d545
Entry block: 0x33b
Exit block: 0x1be
Body: 0x1be, 0x33b, 0x343, 0x347, 0x66d

Function 20:
Public fallback function
Entry block: 0x110
Exit block: 0x110
Body: 0x110

Function 21:
Private function
Entry block: 0x673
Exit block: 0x680
Body: 0x673, 0x680

