Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x137]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x137
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x137
0xa: JUMPI 0x137 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x17d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH3 0x5b4487
0x1e DUP2
0x1f EQ
0x20 PUSH2 0x17d
0x23 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x5b4487
0x1f: V14 = EQ V12 0x5b4487
0x20: V15 = 0x17d
0x23: JUMPI 0x17d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0xb]
Successors: [0x2f, 0x1a2]
---
0x24 DUP1
0x25 PUSH4 0x11df9995
0x2a EQ
0x2b PUSH2 0x1a2
0x2e JUMPI
---
0x25: V16 = 0x11df9995
0x2a: V17 = EQ 0x11df9995 V12
0x2b: V18 = 0x1a2
0x2e: JUMPI 0x1a2 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x1d1]
---
0x2f DUP1
0x30 PUSH4 0x1c53faf8
0x35 EQ
0x36 PUSH2 0x1d1
0x39 JUMPI
---
0x30: V19 = 0x1c53faf8
0x35: V20 = EQ 0x1c53faf8 V12
0x36: V21 = 0x1d1
0x39: JUMPI 0x1d1 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0x1e6]
---
0x3a DUP1
0x3b PUSH4 0x278ecde1
0x40 EQ
0x41 PUSH2 0x1e6
0x44 JUMPI
---
0x3b: V22 = 0x278ecde1
0x40: V23 = EQ 0x278ecde1 V12
0x41: V24 = 0x1e6
0x44: JUMPI 0x1e6 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x45
[0x45:0x4f]
---
Predecessors: [0x3a]
Successors: [0x50, 0x1fe]
---
0x45 DUP1
0x46 PUSH4 0x30adce0e
0x4b EQ
0x4c PUSH2 0x1fe
0x4f JUMPI
---
0x46: V25 = 0x30adce0e
0x4b: V26 = EQ 0x30adce0e V12
0x4c: V27 = 0x1fe
0x4f: JUMPI 0x1fe V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x50
[0x50:0x5a]
---
Predecessors: [0x45]
Successors: [0x5b, 0x223]
---
0x50 DUP1
0x51 PUSH4 0x3197cbb6
0x56 EQ
0x57 PUSH2 0x223
0x5a JUMPI
---
0x51: V28 = 0x3197cbb6
0x56: V29 = EQ 0x3197cbb6 V12
0x57: V30 = 0x223
0x5a: JUMPI 0x223 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5b
[0x5b:0x65]
---
Predecessors: [0x50]
Successors: [0x66, 0x248]
---
0x5b DUP1
0x5c PUSH4 0x3f4ba83a
0x61 EQ
0x62 PUSH2 0x248
0x65 JUMPI
---
0x5c: V31 = 0x3f4ba83a
0x61: V32 = EQ 0x3f4ba83a V12
0x62: V33 = 0x248
0x65: JUMPI 0x248 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x66
[0x66:0x70]
---
Predecessors: [0x5b]
Successors: [0x71, 0x25d]
---
0x66 DUP1
0x67 PUSH4 0x4bb278f3
0x6c EQ
0x6d PUSH2 0x25d
0x70 JUMPI
---
0x67: V34 = 0x4bb278f3
0x6c: V35 = EQ 0x4bb278f3 V12
0x6d: V36 = 0x25d
0x70: JUMPI 0x25d V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x71
[0x71:0x7b]
---
Predecessors: [0x66]
Successors: [0x7c, 0x272]
---
0x71 DUP1
0x72 PUSH4 0x5c975abb
0x77 EQ
0x78 PUSH2 0x272
0x7b JUMPI
---
0x72: V37 = 0x5c975abb
0x77: V38 = EQ 0x5c975abb V12
0x78: V39 = 0x272
0x7b: JUMPI 0x272 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7c
[0x7c:0x86]
---
Predecessors: [0x71]
Successors: [0x87, 0x299]
---
0x7c DUP1
0x7d PUSH4 0x6103d70b
0x82 EQ
0x83 PUSH2 0x299
0x86 JUMPI
---
0x7d: V40 = 0x6103d70b
0x82: V41 = EQ 0x6103d70b V12
0x83: V42 = 0x299
0x86: JUMPI 0x299 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x87
[0x87:0x91]
---
Predecessors: [0x7c]
Successors: [0x92, 0x2ae]
---
0x87 DUP1
0x88 PUSH4 0x6a2d1cb8
0x8d EQ
0x8e PUSH2 0x2ae
0x91 JUMPI
---
0x88: V43 = 0x6a2d1cb8
0x8d: V44 = EQ 0x6a2d1cb8 V12
0x8e: V45 = 0x2ae
0x91: JUMPI 0x2ae V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x92
[0x92:0x9c]
---
Predecessors: [0x87]
Successors: [0x9d, 0x2d3]
---
0x92 DUP1
0x93 PUSH4 0x78e97925
0x98 EQ
0x99 PUSH2 0x2d3
0x9c JUMPI
---
0x93: V46 = 0x78e97925
0x98: V47 = EQ 0x78e97925 V12
0x99: V48 = 0x2d3
0x9c: JUMPI 0x2d3 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9d
[0x9d:0xa7]
---
Predecessors: [0x92]
Successors: [0xa8, 0x2f8]
---
0x9d DUP1
0x9e PUSH4 0x801db9cc
0xa3 EQ
0xa4 PUSH2 0x2f8
0xa7 JUMPI
---
0x9e: V49 = 0x801db9cc
0xa3: V50 = EQ 0x801db9cc V12
0xa4: V51 = 0x2f8
0xa7: JUMPI 0x2f8 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa8
[0xa8:0xb2]
---
Predecessors: [0x9d]
Successors: [0xb3, 0x31d]
---
0xa8 DUP1
0xa9 PUSH4 0x8456cb59
0xae EQ
0xaf PUSH2 0x31d
0xb2 JUMPI
---
0xa9: V52 = 0x8456cb59
0xae: V53 = EQ 0x8456cb59 V12
0xaf: V54 = 0x31d
0xb2: JUMPI 0x31d V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb3
[0xb3:0xbd]
---
Predecessors: [0xa8]
Successors: [0xbe, 0x332]
---
0xb3 DUP1
0xb4 PUSH4 0x8da5cb5b
0xb9 EQ
0xba PUSH2 0x332
0xbd JUMPI
---
0xb4: V55 = 0x8da5cb5b
0xb9: V56 = EQ 0x8da5cb5b V12
0xba: V57 = 0x332
0xbd: JUMPI 0x332 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbe
[0xbe:0xc8]
---
Predecessors: [0xb3]
Successors: [0xc9, 0x361]
---
0xbe DUP1
0xbf PUSH4 0x8ef26a71
0xc4 EQ
0xc5 PUSH2 0x361
0xc8 JUMPI
---
0xbf: V58 = 0x8ef26a71
0xc4: V59 = EQ 0x8ef26a71 V12
0xc5: V60 = 0x361
0xc8: JUMPI 0x361 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xc9
[0xc9:0xd3]
---
Predecessors: [0xbe]
Successors: [0xd4, 0x386]
---
0xc9 DUP1
0xca PUSH4 0x9890220b
0xcf EQ
0xd0 PUSH2 0x386
0xd3 JUMPI
---
0xca: V61 = 0x9890220b
0xcf: V62 = EQ 0x9890220b V12
0xd0: V63 = 0x386
0xd3: JUMPI 0x386 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd4
[0xd4:0xde]
---
Predecessors: [0xc9]
Successors: [0xdf, 0x39b]
---
0xd4 DUP1
0xd5 PUSH4 0x9b39caef
0xda EQ
0xdb PUSH2 0x39b
0xde JUMPI
---
0xd5: V64 = 0x9b39caef
0xda: V65 = EQ 0x9b39caef V12
0xdb: V66 = 0x39b
0xde: JUMPI 0x39b V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xdf
[0xdf:0xe9]
---
Predecessors: [0xd4]
Successors: [0xea, 0x3c0]
---
0xdf DUP1
0xe0 PUSH4 0xb85dfb80
0xe5 EQ
0xe6 PUSH2 0x3c0
0xe9 JUMPI
---
0xe0: V67 = 0xb85dfb80
0xe5: V68 = EQ 0xb85dfb80 V12
0xe6: V69 = 0x3c0
0xe9: JUMPI 0x3c0 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xea
[0xea:0xf4]
---
Predecessors: [0xdf]
Successors: [0xf5, 0x3f7]
---
0xea DUP1
0xeb PUSH4 0xccb07cef
0xf0 EQ
0xf1 PUSH2 0x3f7
0xf4 JUMPI
---
0xeb: V70 = 0xccb07cef
0xf0: V71 = EQ 0xccb07cef V12
0xf1: V72 = 0x3f7
0xf4: JUMPI 0x3f7 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf5
[0xf5:0xff]
---
Predecessors: [0xea]
Successors: [0x100, 0x41e]
---
0xf5 DUP1
0xf6 PUSH4 0xd06c91e4
0xfb EQ
0xfc PUSH2 0x41e
0xff JUMPI
---
0xf6: V73 = 0xd06c91e4
0xfb: V74 = EQ 0xd06c91e4 V12
0xfc: V75 = 0x41e
0xff: JUMPI 0x41e V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x100
[0x100:0x10a]
---
Predecessors: [0xf5]
Successors: [0x10b, 0x44d]
---
0x100 DUP1
0x101 PUSH4 0xd669e1d4
0x106 EQ
0x107 PUSH2 0x44d
0x10a JUMPI
---
0x101: V76 = 0xd669e1d4
0x106: V77 = EQ 0xd669e1d4 V12
0x107: V78 = 0x44d
0x10a: JUMPI 0x44d V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x115]
---
Predecessors: [0x100]
Successors: [0x116, 0x472]
---
0x10b DUP1
0x10c PUSH4 0xdf40503c
0x111 EQ
0x112 PUSH2 0x472
0x115 JUMPI
---
0x10c: V79 = 0xdf40503c
0x111: V80 = EQ 0xdf40503c V12
0x112: V81 = 0x472
0x115: JUMPI 0x472 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x116
[0x116:0x120]
---
Predecessors: [0x10b]
Successors: [0x121, 0x487]
---
0x116 DUP1
0x117 PUSH4 0xe2982c21
0x11c EQ
0x11d PUSH2 0x487
0x120 JUMPI
---
0x117: V82 = 0xe2982c21
0x11c: V83 = EQ 0xe2982c21 V12
0x11d: V84 = 0x487
0x120: JUMPI 0x487 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x121
[0x121:0x12b]
---
Predecessors: [0x116]
Successors: [0x12c, 0x4b8]
---
0x121 DUP1
0x122 PUSH4 0xf2fde38b
0x127 EQ
0x128 PUSH2 0x4b8
0x12b JUMPI
---
0x122: V85 = 0xf2fde38b
0x127: V86 = EQ 0xf2fde38b V12
0x128: V87 = 0x4b8
0x12b: JUMPI 0x4b8 V86
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x12c
[0x12c:0x136]
---
Predecessors: [0x121]
Successors: [0x137, 0x4d9]
---
0x12c DUP1
0x12d PUSH4 0xf3283fba
0x132 EQ
0x133 PUSH2 0x4d9
0x136 JUMPI
---
0x12d: V88 = 0xf3283fba
0x132: V89 = EQ 0xf3283fba V12
0x133: V90 = 0x4d9
0x136: JUMPI 0x4d9 V89
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x137
[0x137:0x137]
---
Predecessors: [0x0, 0x12c]
Successors: [0x138]
---
0x137 JUMPDEST
---
0x137: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x138
[0x138:0x14a]
---
Predecessors: [0x137]
Successors: [0x14b, 0x14f]
---
0x138 JUMPDEST
0x139 PUSH1 0x0
0x13b SLOAD
0x13c PUSH1 0xa0
0x13e PUSH1 0x2
0x140 EXP
0x141 SWAP1
0x142 DIV
0x143 PUSH1 0xff
0x145 AND
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0x138: JUMPDEST 
0x139: V91 = 0x0
0x13b: V92 = S[0x0]
0x13c: V93 = 0xa0
0x13e: V94 = 0x2
0x140: V95 = EXP 0x2 0xa0
0x142: V96 = DIV V92 0x10000000000000000000000000000000000000000
0x143: V97 = 0xff
0x145: V98 = AND 0xff V96
0x146: V99 = ISZERO V98
0x147: V100 = 0x14f
0x14a: JUMPI 0x14f V99
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x138]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V101 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14f
[0x14f:0x15b]
---
Predecessors: [0x138]
Successors: [0x15c, 0x164]
---
0x14f JUMPDEST
0x150 PUSH4 0x599b7400
0x155 TIMESTAMP
0x156 LT
0x157 DUP1
0x158 PUSH2 0x164
0x15b JUMPI
---
0x14f: JUMPDEST 
0x150: V102 = 0x599b7400
0x155: V103 = TIMESTAMP
0x156: V104 = LT V103 0x599b7400
0x158: V105 = 0x164
0x15b: JUMPI 0x164 V104
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V12, V104]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x14f]
Successors: [0x164]
---
0x15c POP
0x15d PUSH4 0x59c05e00
0x162 TIMESTAMP
0x163 GT
---
0x15d: V106 = 0x59c05e00
0x162: V107 = TIMESTAMP
0x163: V108 = GT V107 0x59c05e00
---
Entry stack: [V12, V104]
Stack pops: 1
Stack additions: [V108]
Exit stack: [V12, V108]

================================

Block 0x164
[0x164:0x16a]
---
Predecessors: [0x14f, 0x15c]
Successors: [0x16b, 0x16f]
---
0x164 JUMPDEST
0x165 ISZERO
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x164: JUMPDEST 
0x165: V109 = ISZERO S0
0x166: V110 = ISZERO V109
0x167: V111 = 0x16f
0x16a: JUMPI 0x16f V110
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x164]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V112 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16f
[0x16f:0x177]
---
Predecessors: [0x164]
Successors: [0x4fa]
---
0x16f JUMPDEST
0x170 PUSH2 0x178
0x173 CALLER
0x174 PUSH2 0x4fa
0x177 JUMP
---
0x16f: JUMPDEST 
0x170: V113 = 0x178
0x173: V114 = CALLER
0x174: V115 = 0x4fa
0x177: JUMP 0x4fa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178, V114]
Exit stack: [V12, 0x178, V114]

================================

Block 0x178
[0x178:0x178]
---
Predecessors: [0x6d5, 0x777, 0x8f6, 0x988, 0xb2a, 0xc76, 0xee5, 0xf56, 0xfb2, 0x1037, 0x10af]
Successors: [0x179]
---
0x178 JUMPDEST
---
0x178: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x179
[0x179:0x179]
---
Predecessors: [0x178]
Successors: [0x17a]
---
0x179 JUMPDEST
---
0x179: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x17a
[0x17a:0x17a]
---
Predecessors: [0x179]
Successors: [0x17b]
---
0x17a JUMPDEST
---
0x17a: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x17b
[0x17b:0x17c]
---
Predecessors: [0x17a]
Successors: []
---
0x17b JUMPDEST
0x17c STOP
---
0x17b: JUMPDEST 
0x17c: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x17d
[0x17d:0x183]
---
Predecessors: [0xb]
Successors: [0x184, 0x188]
---
0x17d JUMPDEST
0x17e CALLVALUE
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x17d: JUMPDEST 
0x17e: V116 = CALLVALUE
0x17f: V117 = ISZERO V116
0x180: V118 = 0x188
0x183: JUMPI 0x188 V117
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x17d]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V119 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x188
[0x188:0x18f]
---
Predecessors: [0x17d]
Successors: [0x6da]
---
0x188 JUMPDEST
0x189 PUSH2 0x190
0x18c PUSH2 0x6da
0x18f JUMP
---
0x188: JUMPDEST 
0x189: V120 = 0x190
0x18c: V121 = 0x6da
0x18f: JUMP 0x6da
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V12, 0x190]

================================

Block 0x190
[0x190:0x1a1]
---
Predecessors: [0x6da, 0x8fa, 0x900, 0xbd7, 0xbe2, 0xbea, 0xc87, 0xce5, 0xd1c, 0xeea]
Successors: []
---
0x190 JUMPDEST
0x191 PUSH1 0x40
0x193 MLOAD
0x194 SWAP1
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e SWAP2
0x19f SUB
0x1a0 SWAP1
0x1a1 RETURN
---
0x190: JUMPDEST 
0x191: V122 = 0x40
0x193: V123 = M[0x40]
0x196: M[V123] = S0
0x197: V124 = 0x20
0x199: V125 = ADD 0x20 V123
0x19a: V126 = 0x40
0x19c: V127 = M[0x40]
0x19f: V128 = SUB V125 V127
0x1a1: RETURN V127 V128
---
Entry stack: [V12, 0x190, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x190]

================================

Block 0x1a2
[0x1a2:0x1a8]
---
Predecessors: [0x24]
Successors: [0x1a9, 0x1ad]
---
0x1a2 JUMPDEST
0x1a3 CALLVALUE
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V129 = CALLVALUE
0x1a4: V130 = ISZERO V129
0x1a5: V131 = 0x1ad
0x1a8: JUMPI 0x1ad V130
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x1a2]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V132 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ad
[0x1ad:0x1b4]
---
Predecessors: [0x1a2]
Successors: [0x6e0]
---
0x1ad JUMPDEST
0x1ae PUSH2 0x1b5
0x1b1 PUSH2 0x6e0
0x1b4 JUMP
---
0x1ad: JUMPDEST 
0x1ae: V133 = 0x1b5
0x1b1: V134 = 0x6e0
0x1b4: JUMP 0x6e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b5]
Exit stack: [V12, 0x1b5]

================================

Block 0x1b5
[0x1b5:0x1d0]
---
Predecessors: [0x6e0, 0xc78, 0xd0d]
Successors: []
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x40
0x1b8 MLOAD
0x1b9 PUSH1 0x1
0x1bb PUSH1 0xa0
0x1bd PUSH1 0x2
0x1bf EXP
0x1c0 SUB
0x1c1 SWAP1
0x1c2 SWAP2
0x1c3 AND
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc DUP1
0x1cd SWAP2
0x1ce SUB
0x1cf SWAP1
0x1d0 RETURN
---
0x1b5: JUMPDEST 
0x1b6: V135 = 0x40
0x1b8: V136 = M[0x40]
0x1b9: V137 = 0x1
0x1bb: V138 = 0xa0
0x1bd: V139 = 0x2
0x1bf: V140 = EXP 0x2 0xa0
0x1c0: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c3: V142 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: M[V136] = V142
0x1c6: V143 = 0x20
0x1c8: V144 = ADD 0x20 V136
0x1c9: V145 = 0x40
0x1cb: V146 = M[0x40]
0x1ce: V147 = SUB V144 V146
0x1d0: RETURN V146 V147
---
Entry stack: [V12, 0x1b5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b5]

================================

Block 0x1d1
[0x1d1:0x1d7]
---
Predecessors: [0x2f]
Successors: [0x1d8, 0x1dc]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V148 = CALLVALUE
0x1d3: V149 = ISZERO V148
0x1d4: V150 = 0x1dc
0x1d7: JUMPI 0x1dc V149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V151 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x1d1]
Successors: [0x6ef]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x178
0x1e0 PUSH2 0x6ef
0x1e3 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V152 = 0x178
0x1e0: V153 = 0x6ef
0x1e3: JUMP 0x6ef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V12, 0x178]

================================

Block 0x1e4
[0x1e4:0x1e5]
---
Predecessors: []
Successors: []
---
0x1e4 JUMPDEST
0x1e5 STOP
---
0x1e4: JUMPDEST 
0x1e5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e6
[0x1e6:0x1ec]
---
Predecessors: [0x3a]
Successors: [0x1ed, 0x1f1]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V154 = CALLVALUE
0x1e8: V155 = ISZERO V154
0x1e9: V156 = 0x1f1
0x1ec: JUMPI 0x1f1 V155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V157 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f1
[0x1f1:0x1fb]
---
Predecessors: [0x1e6]
Successors: [0x779]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0x178
0x1f5 PUSH1 0x4
0x1f7 CALLDATALOAD
0x1f8 PUSH2 0x779
0x1fb JUMP
---
0x1f1: JUMPDEST 
0x1f2: V158 = 0x178
0x1f5: V159 = 0x4
0x1f7: V160 = CALLDATALOAD 0x4
0x1f8: V161 = 0x779
0x1fb: JUMP 0x779
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178, V160]
Exit stack: [V12, 0x178, V160]

================================

Block 0x1fc
[0x1fc:0x1fd]
---
Predecessors: []
Successors: []
---
0x1fc JUMPDEST
0x1fd STOP
---
0x1fc: JUMPDEST 
0x1fd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1fe
[0x1fe:0x204]
---
Predecessors: [0x45]
Successors: [0x205, 0x209]
---
0x1fe JUMPDEST
0x1ff CALLVALUE
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V162 = CALLVALUE
0x200: V163 = ISZERO V162
0x201: V164 = 0x209
0x204: JUMPI 0x209 V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1fe]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V165 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x209
[0x209:0x210]
---
Predecessors: [0x1fe]
Successors: [0x8fa]
---
0x209 JUMPDEST
0x20a PUSH2 0x190
0x20d PUSH2 0x8fa
0x210 JUMP
---
0x209: JUMPDEST 
0x20a: V166 = 0x190
0x20d: V167 = 0x8fa
0x210: JUMP 0x8fa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V12, 0x190]

================================

Block 0x211
[0x211:0x222]
---
Predecessors: []
Successors: []
---
0x211 JUMPDEST
0x212 PUSH1 0x40
0x214 MLOAD
0x215 SWAP1
0x216 DUP2
0x217 MSTORE
0x218 PUSH1 0x20
0x21a ADD
0x21b PUSH1 0x40
0x21d MLOAD
0x21e DUP1
0x21f SWAP2
0x220 SUB
0x221 SWAP1
0x222 RETURN
---
0x211: JUMPDEST 
0x212: V168 = 0x40
0x214: V169 = M[0x40]
0x217: M[V169] = S0
0x218: V170 = 0x20
0x21a: V171 = ADD 0x20 V169
0x21b: V172 = 0x40
0x21d: V173 = M[0x40]
0x220: V174 = SUB V171 V173
0x222: RETURN V173 V174
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x223
[0x223:0x229]
---
Predecessors: [0x50]
Successors: [0x22a, 0x22e]
---
0x223 JUMPDEST
0x224 CALLVALUE
0x225 ISZERO
0x226 PUSH2 0x22e
0x229 JUMPI
---
0x223: JUMPDEST 
0x224: V175 = CALLVALUE
0x225: V176 = ISZERO V175
0x226: V177 = 0x22e
0x229: JUMPI 0x22e V176
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22a
[0x22a:0x22d]
---
Predecessors: [0x223]
Successors: []
---
0x22a PUSH1 0x0
0x22c DUP1
0x22d REVERT
---
0x22a: V178 = 0x0
0x22d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22e
[0x22e:0x235]
---
Predecessors: [0x223]
Successors: [0x900]
---
0x22e JUMPDEST
0x22f PUSH2 0x190
0x232 PUSH2 0x900
0x235 JUMP
---
0x22e: JUMPDEST 
0x22f: V179 = 0x190
0x232: V180 = 0x900
0x235: JUMP 0x900
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V12, 0x190]

================================

Block 0x236
[0x236:0x247]
---
Predecessors: []
Successors: []
---
0x236 JUMPDEST
0x237 PUSH1 0x40
0x239 MLOAD
0x23a SWAP1
0x23b DUP2
0x23c MSTORE
0x23d PUSH1 0x20
0x23f ADD
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 SWAP2
0x245 SUB
0x246 SWAP1
0x247 RETURN
---
0x236: JUMPDEST 
0x237: V181 = 0x40
0x239: V182 = M[0x40]
0x23c: M[V182] = S0
0x23d: V183 = 0x20
0x23f: V184 = ADD 0x20 V182
0x240: V185 = 0x40
0x242: V186 = M[0x40]
0x245: V187 = SUB V184 V186
0x247: RETURN V186 V187
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x248
[0x248:0x24e]
---
Predecessors: [0x5b]
Successors: [0x24f, 0x253]
---
0x248 JUMPDEST
0x249 CALLVALUE
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x248: JUMPDEST 
0x249: V188 = CALLVALUE
0x24a: V189 = ISZERO V188
0x24b: V190 = 0x253
0x24e: JUMPI 0x253 V189
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x248]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V191 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x253
[0x253:0x25a]
---
Predecessors: [0x248]
Successors: [0x908]
---
0x253 JUMPDEST
0x254 PUSH2 0x178
0x257 PUSH2 0x908
0x25a JUMP
---
0x253: JUMPDEST 
0x254: V192 = 0x178
0x257: V193 = 0x908
0x25a: JUMP 0x908
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V12, 0x178]

================================

Block 0x25b
[0x25b:0x25c]
---
Predecessors: []
Successors: []
---
0x25b JUMPDEST
0x25c STOP
---
0x25b: JUMPDEST 
0x25c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x25d
[0x25d:0x263]
---
Predecessors: [0x66]
Successors: [0x264, 0x268]
---
0x25d JUMPDEST
0x25e CALLVALUE
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x25d: JUMPDEST 
0x25e: V194 = CALLVALUE
0x25f: V195 = ISZERO V194
0x260: V196 = 0x268
0x263: JUMPI 0x268 V195
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x25d]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V197 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x25d]
Successors: [0x98a]
---
0x268 JUMPDEST
0x269 PUSH2 0x178
0x26c PUSH2 0x98a
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V198 = 0x178
0x26c: V199 = 0x98a
0x26f: JUMP 0x98a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V12, 0x178]

================================

Block 0x270
[0x270:0x271]
---
Predecessors: []
Successors: []
---
0x270 JUMPDEST
0x271 STOP
---
0x270: JUMPDEST 
0x271: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0x71]
Successors: [0x279, 0x27d]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V200 = CALLVALUE
0x274: V201 = ISZERO V200
0x275: V202 = 0x27d
0x278: JUMPI 0x27d V201
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x272]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V203 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x272]
Successors: [0xb2d]
---
0x27d JUMPDEST
0x27e PUSH2 0x285
0x281 PUSH2 0xb2d
0x284 JUMP
---
0x27d: JUMPDEST 
0x27e: V204 = 0x285
0x281: V205 = 0xb2d
0x284: JUMP 0xb2d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x285]
Exit stack: [V12, 0x285]

================================

Block 0x285
[0x285:0x298]
---
Predecessors: [0xb2d, 0xd04]
Successors: []
---
0x285 JUMPDEST
0x286 PUSH1 0x40
0x288 MLOAD
0x289 SWAP1
0x28a ISZERO
0x28b ISZERO
0x28c DUP2
0x28d MSTORE
0x28e PUSH1 0x20
0x290 ADD
0x291 PUSH1 0x40
0x293 MLOAD
0x294 DUP1
0x295 SWAP2
0x296 SUB
0x297 SWAP1
0x298 RETURN
---
0x285: JUMPDEST 
0x286: V206 = 0x40
0x288: V207 = M[0x40]
0x28a: V208 = ISZERO S0
0x28b: V209 = ISZERO V208
0x28d: M[V207] = V209
0x28e: V210 = 0x20
0x290: V211 = ADD 0x20 V207
0x291: V212 = 0x40
0x293: V213 = M[0x40]
0x296: V214 = SUB V211 V213
0x298: RETURN V213 V214
---
Entry stack: [V12, 0x285, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x285]

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0x7c]
Successors: [0x2a0, 0x2a4]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V215 = CALLVALUE
0x29b: V216 = ISZERO V215
0x29c: V217 = 0x2a4
0x29f: JUMPI 0x2a4 V216
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V218 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a4
[0x2a4:0x2ab]
---
Predecessors: [0x299]
Successors: [0xb3d]
---
0x2a4 JUMPDEST
0x2a5 PUSH2 0x178
0x2a8 PUSH2 0xb3d
0x2ab JUMP
---
0x2a4: JUMPDEST 
0x2a5: V219 = 0x178
0x2a8: V220 = 0xb3d
0x2ab: JUMP 0xb3d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V12, 0x178]

================================

Block 0x2ac
[0x2ac:0x2ad]
---
Predecessors: []
Successors: []
---
0x2ac JUMPDEST
0x2ad STOP
---
0x2ac: JUMPDEST 
0x2ad: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ae
[0x2ae:0x2b4]
---
Predecessors: [0x87]
Successors: [0x2b5, 0x2b9]
---
0x2ae JUMPDEST
0x2af CALLVALUE
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2ae: JUMPDEST 
0x2af: V221 = CALLVALUE
0x2b0: V222 = ISZERO V221
0x2b1: V223 = 0x2b9
0x2b4: JUMPI 0x2b9 V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2ae]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V224 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b9
[0x2b9:0x2c0]
---
Predecessors: [0x2ae]
Successors: [0xbd7]
---
0x2b9 JUMPDEST
0x2ba PUSH2 0x190
0x2bd PUSH2 0xbd7
0x2c0 JUMP
---
0x2b9: JUMPDEST 
0x2ba: V225 = 0x190
0x2bd: V226 = 0xbd7
0x2c0: JUMP 0xbd7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V12, 0x190]

================================

Block 0x2c1
[0x2c1:0x2d2]
---
Predecessors: []
Successors: []
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x40
0x2c4 MLOAD
0x2c5 SWAP1
0x2c6 DUP2
0x2c7 MSTORE
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce DUP1
0x2cf SWAP2
0x2d0 SUB
0x2d1 SWAP1
0x2d2 RETURN
---
0x2c1: JUMPDEST 
0x2c2: V227 = 0x40
0x2c4: V228 = M[0x40]
0x2c7: M[V228] = S0
0x2c8: V229 = 0x20
0x2ca: V230 = ADD 0x20 V228
0x2cb: V231 = 0x40
0x2cd: V232 = M[0x40]
0x2d0: V233 = SUB V230 V232
0x2d2: RETURN V232 V233
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0x92]
Successors: [0x2da, 0x2de]
---
0x2d3 JUMPDEST
0x2d4 CALLVALUE
0x2d5 ISZERO
0x2d6 PUSH2 0x2de
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V234 = CALLVALUE
0x2d5: V235 = ISZERO V234
0x2d6: V236 = 0x2de
0x2d9: JUMPI 0x2de V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d3]
Successors: []
---
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd REVERT
---
0x2da: V237 = 0x0
0x2dd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2de
[0x2de:0x2e5]
---
Predecessors: [0x2d3]
Successors: [0xbe2]
---
0x2de JUMPDEST
0x2df PUSH2 0x190
0x2e2 PUSH2 0xbe2
0x2e5 JUMP
---
0x2de: JUMPDEST 
0x2df: V238 = 0x190
0x2e2: V239 = 0xbe2
0x2e5: JUMP 0xbe2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V12, 0x190]

================================

Block 0x2e6
[0x2e6:0x2f7]
---
Predecessors: []
Successors: []
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x40
0x2e9 MLOAD
0x2ea SWAP1
0x2eb DUP2
0x2ec MSTORE
0x2ed PUSH1 0x20
0x2ef ADD
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 SWAP2
0x2f5 SUB
0x2f6 SWAP1
0x2f7 RETURN
---
0x2e6: JUMPDEST 
0x2e7: V240 = 0x40
0x2e9: V241 = M[0x40]
0x2ec: M[V241] = S0
0x2ed: V242 = 0x20
0x2ef: V243 = ADD 0x20 V241
0x2f0: V244 = 0x40
0x2f2: V245 = M[0x40]
0x2f5: V246 = SUB V243 V245
0x2f7: RETURN V245 V246
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0x9d]
Successors: [0x2ff, 0x303]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V247 = CALLVALUE
0x2fa: V248 = ISZERO V247
0x2fb: V249 = 0x303
0x2fe: JUMPI 0x303 V248
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V250 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x303
[0x303:0x30a]
---
Predecessors: [0x2f8]
Successors: [0xbea]
---
0x303 JUMPDEST
0x304 PUSH2 0x190
0x307 PUSH2 0xbea
0x30a JUMP
---
0x303: JUMPDEST 
0x304: V251 = 0x190
0x307: V252 = 0xbea
0x30a: JUMP 0xbea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V12, 0x190]

================================

Block 0x30b
[0x30b:0x31c]
---
Predecessors: []
Successors: []
---
0x30b JUMPDEST
0x30c PUSH1 0x40
0x30e MLOAD
0x30f SWAP1
0x310 DUP2
0x311 MSTORE
0x312 PUSH1 0x20
0x314 ADD
0x315 PUSH1 0x40
0x317 MLOAD
0x318 DUP1
0x319 SWAP2
0x31a SUB
0x31b SWAP1
0x31c RETURN
---
0x30b: JUMPDEST 
0x30c: V253 = 0x40
0x30e: V254 = M[0x40]
0x311: M[V254] = S0
0x312: V255 = 0x20
0x314: V256 = ADD 0x20 V254
0x315: V257 = 0x40
0x317: V258 = M[0x40]
0x31a: V259 = SUB V256 V258
0x31c: RETURN V258 V259
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x31d
[0x31d:0x323]
---
Predecessors: [0xa8]
Successors: [0x324, 0x328]
---
0x31d JUMPDEST
0x31e CALLVALUE
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x31d: JUMPDEST 
0x31e: V260 = CALLVALUE
0x31f: V261 = ISZERO V260
0x320: V262 = 0x328
0x323: JUMPI 0x328 V261
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x31d]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V263 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x328
[0x328:0x32f]
---
Predecessors: [0x31d]
Successors: [0xbf1]
---
0x328 JUMPDEST
0x329 PUSH2 0x178
0x32c PUSH2 0xbf1
0x32f JUMP
---
0x328: JUMPDEST 
0x329: V264 = 0x178
0x32c: V265 = 0xbf1
0x32f: JUMP 0xbf1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V12, 0x178]

================================

Block 0x330
[0x330:0x331]
---
Predecessors: []
Successors: []
---
0x330 JUMPDEST
0x331 STOP
---
0x330: JUMPDEST 
0x331: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x332
[0x332:0x338]
---
Predecessors: [0xb3]
Successors: [0x339, 0x33d]
---
0x332 JUMPDEST
0x333 CALLVALUE
0x334 ISZERO
0x335 PUSH2 0x33d
0x338 JUMPI
---
0x332: JUMPDEST 
0x333: V266 = CALLVALUE
0x334: V267 = ISZERO V266
0x335: V268 = 0x33d
0x338: JUMPI 0x33d V267
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x339
[0x339:0x33c]
---
Predecessors: [0x332]
Successors: []
---
0x339 PUSH1 0x0
0x33b DUP1
0x33c REVERT
---
0x339: V269 = 0x0
0x33c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33d
[0x33d:0x344]
---
Predecessors: [0x332]
Successors: [0xc78]
---
0x33d JUMPDEST
0x33e PUSH2 0x1b5
0x341 PUSH2 0xc78
0x344 JUMP
---
0x33d: JUMPDEST 
0x33e: V270 = 0x1b5
0x341: V271 = 0xc78
0x344: JUMP 0xc78
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b5]
Exit stack: [V12, 0x1b5]

================================

Block 0x345
[0x345:0x360]
---
Predecessors: []
Successors: []
---
0x345 JUMPDEST
0x346 PUSH1 0x40
0x348 MLOAD
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 SWAP1
0x352 SWAP2
0x353 AND
0x354 DUP2
0x355 MSTORE
0x356 PUSH1 0x20
0x358 ADD
0x359 PUSH1 0x40
0x35b MLOAD
0x35c DUP1
0x35d SWAP2
0x35e SUB
0x35f SWAP1
0x360 RETURN
---
0x345: JUMPDEST 
0x346: V272 = 0x40
0x348: V273 = M[0x40]
0x349: V274 = 0x1
0x34b: V275 = 0xa0
0x34d: V276 = 0x2
0x34f: V277 = EXP 0x2 0xa0
0x350: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V279 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x355: M[V273] = V279
0x356: V280 = 0x20
0x358: V281 = ADD 0x20 V273
0x359: V282 = 0x40
0x35b: V283 = M[0x40]
0x35e: V284 = SUB V281 V283
0x360: RETURN V283 V284
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x361
[0x361:0x367]
---
Predecessors: [0xbe]
Successors: [0x368, 0x36c]
---
0x361 JUMPDEST
0x362 CALLVALUE
0x363 ISZERO
0x364 PUSH2 0x36c
0x367 JUMPI
---
0x361: JUMPDEST 
0x362: V285 = CALLVALUE
0x363: V286 = ISZERO V285
0x364: V287 = 0x36c
0x367: JUMPI 0x36c V286
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x368
[0x368:0x36b]
---
Predecessors: [0x361]
Successors: []
---
0x368 PUSH1 0x0
0x36a DUP1
0x36b REVERT
---
0x368: V288 = 0x0
0x36b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36c
[0x36c:0x373]
---
Predecessors: [0x361]
Successors: [0xc87]
---
0x36c JUMPDEST
0x36d PUSH2 0x190
0x370 PUSH2 0xc87
0x373 JUMP
---
0x36c: JUMPDEST 
0x36d: V289 = 0x190
0x370: V290 = 0xc87
0x373: JUMP 0xc87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V12, 0x190]

================================

Block 0x374
[0x374:0x385]
---
Predecessors: []
Successors: []
---
0x374 JUMPDEST
0x375 PUSH1 0x40
0x377 MLOAD
0x378 SWAP1
0x379 DUP2
0x37a MSTORE
0x37b PUSH1 0x20
0x37d ADD
0x37e PUSH1 0x40
0x380 MLOAD
0x381 DUP1
0x382 SWAP2
0x383 SUB
0x384 SWAP1
0x385 RETURN
---
0x374: JUMPDEST 
0x375: V291 = 0x40
0x377: V292 = M[0x40]
0x37a: M[V292] = S0
0x37b: V293 = 0x20
0x37d: V294 = ADD 0x20 V292
0x37e: V295 = 0x40
0x380: V296 = M[0x40]
0x383: V297 = SUB V294 V296
0x385: RETURN V296 V297
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x386
[0x386:0x38c]
---
Predecessors: [0xc9]
Successors: [0x38d, 0x391]
---
0x386 JUMPDEST
0x387 CALLVALUE
0x388 ISZERO
0x389 PUSH2 0x391
0x38c JUMPI
---
0x386: JUMPDEST 
0x387: V298 = CALLVALUE
0x388: V299 = ISZERO V298
0x389: V300 = 0x391
0x38c: JUMPI 0x391 V299
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38d
[0x38d:0x390]
---
Predecessors: [0x386]
Successors: []
---
0x38d PUSH1 0x0
0x38f DUP1
0x390 REVERT
---
0x38d: V301 = 0x0
0x390: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x391
[0x391:0x398]
---
Predecessors: [0x386]
Successors: [0xc8d]
---
0x391 JUMPDEST
0x392 PUSH2 0x178
0x395 PUSH2 0xc8d
0x398 JUMP
---
0x391: JUMPDEST 
0x392: V302 = 0x178
0x395: V303 = 0xc8d
0x398: JUMP 0xc8d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V12, 0x178]

================================

Block 0x399
[0x399:0x39a]
---
Predecessors: []
Successors: []
---
0x399 JUMPDEST
0x39a STOP
---
0x399: JUMPDEST 
0x39a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x39b
[0x39b:0x3a1]
---
Predecessors: [0xd4]
Successors: [0x3a2, 0x3a6]
---
0x39b JUMPDEST
0x39c CALLVALUE
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x39b: JUMPDEST 
0x39c: V304 = CALLVALUE
0x39d: V305 = ISZERO V304
0x39e: V306 = 0x3a6
0x3a1: JUMPI 0x3a6 V305
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x39b]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V307 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a6
[0x3a6:0x3ad]
---
Predecessors: [0x39b]
Successors: [0xce5]
---
0x3a6 JUMPDEST
0x3a7 PUSH2 0x190
0x3aa PUSH2 0xce5
0x3ad JUMP
---
0x3a6: JUMPDEST 
0x3a7: V308 = 0x190
0x3aa: V309 = 0xce5
0x3ad: JUMP 0xce5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V12, 0x190]

================================

Block 0x3ae
[0x3ae:0x3bf]
---
Predecessors: []
Successors: []
---
0x3ae JUMPDEST
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 SWAP1
0x3b3 DUP2
0x3b4 MSTORE
0x3b5 PUSH1 0x20
0x3b7 ADD
0x3b8 PUSH1 0x40
0x3ba MLOAD
0x3bb DUP1
0x3bc SWAP2
0x3bd SUB
0x3be SWAP1
0x3bf RETURN
---
0x3ae: JUMPDEST 
0x3af: V310 = 0x40
0x3b1: V311 = M[0x40]
0x3b4: M[V311] = S0
0x3b5: V312 = 0x20
0x3b7: V313 = ADD 0x20 V311
0x3b8: V314 = 0x40
0x3ba: V315 = M[0x40]
0x3bd: V316 = SUB V313 V315
0x3bf: RETURN V315 V316
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c0
[0x3c0:0x3c6]
---
Predecessors: [0xdf]
Successors: [0x3c7, 0x3cb]
---
0x3c0 JUMPDEST
0x3c1 CALLVALUE
0x3c2 ISZERO
0x3c3 PUSH2 0x3cb
0x3c6 JUMPI
---
0x3c0: JUMPDEST 
0x3c1: V317 = CALLVALUE
0x3c2: V318 = ISZERO V317
0x3c3: V319 = 0x3cb
0x3c6: JUMPI 0x3cb V318
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c7
[0x3c7:0x3ca]
---
Predecessors: [0x3c0]
Successors: []
---
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca REVERT
---
0x3c7: V320 = 0x0
0x3ca: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cb
[0x3cb:0x3de]
---
Predecessors: [0x3c0]
Successors: [0xceb]
---
0x3cb JUMPDEST
0x3cc PUSH2 0x3df
0x3cf PUSH1 0x1
0x3d1 PUSH1 0xa0
0x3d3 PUSH1 0x2
0x3d5 EXP
0x3d6 SUB
0x3d7 PUSH1 0x4
0x3d9 CALLDATALOAD
0x3da AND
0x3db PUSH2 0xceb
0x3de JUMP
---
0x3cb: JUMPDEST 
0x3cc: V321 = 0x3df
0x3cf: V322 = 0x1
0x3d1: V323 = 0xa0
0x3d3: V324 = 0x2
0x3d5: V325 = EXP 0x2 0xa0
0x3d6: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d7: V327 = 0x4
0x3d9: V328 = CALLDATALOAD 0x4
0x3da: V329 = AND V328 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V330 = 0xceb
0x3de: JUMP 0xceb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3df, V329]
Exit stack: [V12, 0x3df, V329]

================================

Block 0x3df
[0x3df:0x3f6]
---
Predecessors: [0xceb]
Successors: []
---
0x3df JUMPDEST
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 SWAP2
0x3e4 DUP3
0x3e5 MSTORE
0x3e6 PUSH1 0x20
0x3e8 DUP3
0x3e9 ADD
0x3ea MSTORE
0x3eb PUSH1 0x40
0x3ed SWAP1
0x3ee DUP2
0x3ef ADD
0x3f0 SWAP1
0x3f1 MLOAD
0x3f2 DUP1
0x3f3 SWAP2
0x3f4 SUB
0x3f5 SWAP1
0x3f6 RETURN
---
0x3df: JUMPDEST 
0x3e0: V331 = 0x40
0x3e2: V332 = M[0x40]
0x3e5: M[V332] = V1203
0x3e6: V333 = 0x20
0x3e9: V334 = ADD V332 0x20
0x3ea: M[V334] = V1206
0x3eb: V335 = 0x40
0x3ef: V336 = ADD 0x40 V332
0x3f1: V337 = M[0x40]
0x3f4: V338 = SUB V336 V337
0x3f6: RETURN V337 V338
---
Entry stack: [V12, 0x3df, V1203, V1206]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x3df]

================================

Block 0x3f7
[0x3f7:0x3fd]
---
Predecessors: [0xea]
Successors: [0x3fe, 0x402]
---
0x3f7 JUMPDEST
0x3f8 CALLVALUE
0x3f9 ISZERO
0x3fa PUSH2 0x402
0x3fd JUMPI
---
0x3f7: JUMPDEST 
0x3f8: V339 = CALLVALUE
0x3f9: V340 = ISZERO V339
0x3fa: V341 = 0x402
0x3fd: JUMPI 0x402 V340
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fe
[0x3fe:0x401]
---
Predecessors: [0x3f7]
Successors: []
---
0x3fe PUSH1 0x0
0x400 DUP1
0x401 REVERT
---
0x3fe: V342 = 0x0
0x401: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x402
[0x402:0x409]
---
Predecessors: [0x3f7]
Successors: [0xd04]
---
0x402 JUMPDEST
0x403 PUSH2 0x285
0x406 PUSH2 0xd04
0x409 JUMP
---
0x402: JUMPDEST 
0x403: V343 = 0x285
0x406: V344 = 0xd04
0x409: JUMP 0xd04
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x285]
Exit stack: [V12, 0x285]

================================

Block 0x40a
[0x40a:0x41d]
---
Predecessors: []
Successors: []
---
0x40a JUMPDEST
0x40b PUSH1 0x40
0x40d MLOAD
0x40e SWAP1
0x40f ISZERO
0x410 ISZERO
0x411 DUP2
0x412 MSTORE
0x413 PUSH1 0x20
0x415 ADD
0x416 PUSH1 0x40
0x418 MLOAD
0x419 DUP1
0x41a SWAP2
0x41b SUB
0x41c SWAP1
0x41d RETURN
---
0x40a: JUMPDEST 
0x40b: V345 = 0x40
0x40d: V346 = M[0x40]
0x40f: V347 = ISZERO S0
0x410: V348 = ISZERO V347
0x412: M[V346] = V348
0x413: V349 = 0x20
0x415: V350 = ADD 0x20 V346
0x416: V351 = 0x40
0x418: V352 = M[0x40]
0x41b: V353 = SUB V350 V352
0x41d: RETURN V352 V353
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x41e
[0x41e:0x424]
---
Predecessors: [0xf5]
Successors: [0x425, 0x429]
---
0x41e JUMPDEST
0x41f CALLVALUE
0x420 ISZERO
0x421 PUSH2 0x429
0x424 JUMPI
---
0x41e: JUMPDEST 
0x41f: V354 = CALLVALUE
0x420: V355 = ISZERO V354
0x421: V356 = 0x429
0x424: JUMPI 0x429 V355
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x425
[0x425:0x428]
---
Predecessors: [0x41e]
Successors: []
---
0x425 PUSH1 0x0
0x427 DUP1
0x428 REVERT
---
0x425: V357 = 0x0
0x428: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x429
[0x429:0x430]
---
Predecessors: [0x41e]
Successors: [0xd0d]
---
0x429 JUMPDEST
0x42a PUSH2 0x1b5
0x42d PUSH2 0xd0d
0x430 JUMP
---
0x429: JUMPDEST 
0x42a: V358 = 0x1b5
0x42d: V359 = 0xd0d
0x430: JUMP 0xd0d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b5]
Exit stack: [V12, 0x1b5]

================================

Block 0x431
[0x431:0x44c]
---
Predecessors: []
Successors: []
---
0x431 JUMPDEST
0x432 PUSH1 0x40
0x434 MLOAD
0x435 PUSH1 0x1
0x437 PUSH1 0xa0
0x439 PUSH1 0x2
0x43b EXP
0x43c SUB
0x43d SWAP1
0x43e SWAP2
0x43f AND
0x440 DUP2
0x441 MSTORE
0x442 PUSH1 0x20
0x444 ADD
0x445 PUSH1 0x40
0x447 MLOAD
0x448 DUP1
0x449 SWAP2
0x44a SUB
0x44b SWAP1
0x44c RETURN
---
0x431: JUMPDEST 
0x432: V360 = 0x40
0x434: V361 = M[0x40]
0x435: V362 = 0x1
0x437: V363 = 0xa0
0x439: V364 = 0x2
0x43b: V365 = EXP 0x2 0xa0
0x43c: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43f: V367 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x441: M[V361] = V367
0x442: V368 = 0x20
0x444: V369 = ADD 0x20 V361
0x445: V370 = 0x40
0x447: V371 = M[0x40]
0x44a: V372 = SUB V369 V371
0x44c: RETURN V371 V372
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x44d
[0x44d:0x453]
---
Predecessors: [0x100]
Successors: [0x454, 0x458]
---
0x44d JUMPDEST
0x44e CALLVALUE
0x44f ISZERO
0x450 PUSH2 0x458
0x453 JUMPI
---
0x44d: JUMPDEST 
0x44e: V373 = CALLVALUE
0x44f: V374 = ISZERO V373
0x450: V375 = 0x458
0x453: JUMPI 0x458 V374
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x454
[0x454:0x457]
---
Predecessors: [0x44d]
Successors: []
---
0x454 PUSH1 0x0
0x456 DUP1
0x457 REVERT
---
0x454: V376 = 0x0
0x457: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x458
[0x458:0x45f]
---
Predecessors: [0x44d]
Successors: [0xd1c]
---
0x458 JUMPDEST
0x459 PUSH2 0x190
0x45c PUSH2 0xd1c
0x45f JUMP
---
0x458: JUMPDEST 
0x459: V377 = 0x190
0x45c: V378 = 0xd1c
0x45f: JUMP 0xd1c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V12, 0x190]

================================

Block 0x460
[0x460:0x471]
---
Predecessors: []
Successors: []
---
0x460 JUMPDEST
0x461 PUSH1 0x40
0x463 MLOAD
0x464 SWAP1
0x465 DUP2
0x466 MSTORE
0x467 PUSH1 0x20
0x469 ADD
0x46a PUSH1 0x40
0x46c MLOAD
0x46d DUP1
0x46e SWAP2
0x46f SUB
0x470 SWAP1
0x471 RETURN
---
0x460: JUMPDEST 
0x461: V379 = 0x40
0x463: V380 = M[0x40]
0x466: M[V380] = S0
0x467: V381 = 0x20
0x469: V382 = ADD 0x20 V380
0x46a: V383 = 0x40
0x46c: V384 = M[0x40]
0x46f: V385 = SUB V382 V384
0x471: RETURN V384 V385
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x472
[0x472:0x478]
---
Predecessors: [0x10b]
Successors: [0x479, 0x47d]
---
0x472 JUMPDEST
0x473 CALLVALUE
0x474 ISZERO
0x475 PUSH2 0x47d
0x478 JUMPI
---
0x472: JUMPDEST 
0x473: V386 = CALLVALUE
0x474: V387 = ISZERO V386
0x475: V388 = 0x47d
0x478: JUMPI 0x47d V387
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x479
[0x479:0x47c]
---
Predecessors: [0x472]
Successors: []
---
0x479 PUSH1 0x0
0x47b DUP1
0x47c REVERT
---
0x479: V389 = 0x0
0x47c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47d
[0x47d:0x484]
---
Predecessors: [0x472]
Successors: [0xd24]
---
0x47d JUMPDEST
0x47e PUSH2 0x178
0x481 PUSH2 0xd24
0x484 JUMP
---
0x47d: JUMPDEST 
0x47e: V390 = 0x178
0x481: V391 = 0xd24
0x484: JUMP 0xd24
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V12, 0x178]

================================

Block 0x485
[0x485:0x486]
---
Predecessors: []
Successors: []
---
0x485 JUMPDEST
0x486 STOP
---
0x485: JUMPDEST 
0x486: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x487
[0x487:0x48d]
---
Predecessors: [0x116]
Successors: [0x48e, 0x492]
---
0x487 JUMPDEST
0x488 CALLVALUE
0x489 ISZERO
0x48a PUSH2 0x492
0x48d JUMPI
---
0x487: JUMPDEST 
0x488: V392 = CALLVALUE
0x489: V393 = ISZERO V392
0x48a: V394 = 0x492
0x48d: JUMPI 0x492 V393
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x48e
[0x48e:0x491]
---
Predecessors: [0x487]
Successors: []
---
0x48e PUSH1 0x0
0x490 DUP1
0x491 REVERT
---
0x48e: V395 = 0x0
0x491: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x492
[0x492:0x4a5]
---
Predecessors: [0x487]
Successors: [0xeea]
---
0x492 JUMPDEST
0x493 PUSH2 0x190
0x496 PUSH1 0x1
0x498 PUSH1 0xa0
0x49a PUSH1 0x2
0x49c EXP
0x49d SUB
0x49e PUSH1 0x4
0x4a0 CALLDATALOAD
0x4a1 AND
0x4a2 PUSH2 0xeea
0x4a5 JUMP
---
0x492: JUMPDEST 
0x493: V396 = 0x190
0x496: V397 = 0x1
0x498: V398 = 0xa0
0x49a: V399 = 0x2
0x49c: V400 = EXP 0x2 0xa0
0x49d: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49e: V402 = 0x4
0x4a0: V403 = CALLDATALOAD 0x4
0x4a1: V404 = AND V403 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V405 = 0xeea
0x4a5: JUMP 0xeea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x190, V404]
Exit stack: [V12, 0x190, V404]

================================

Block 0x4a6
[0x4a6:0x4b7]
---
Predecessors: []
Successors: []
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x40
0x4a9 MLOAD
0x4aa SWAP1
0x4ab DUP2
0x4ac MSTORE
0x4ad PUSH1 0x20
0x4af ADD
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 DUP1
0x4b4 SWAP2
0x4b5 SUB
0x4b6 SWAP1
0x4b7 RETURN
---
0x4a6: JUMPDEST 
0x4a7: V406 = 0x40
0x4a9: V407 = M[0x40]
0x4ac: M[V407] = S0
0x4ad: V408 = 0x20
0x4af: V409 = ADD 0x20 V407
0x4b0: V410 = 0x40
0x4b2: V411 = M[0x40]
0x4b5: V412 = SUB V409 V411
0x4b7: RETURN V411 V412
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4b8
[0x4b8:0x4be]
---
Predecessors: [0x121]
Successors: [0x4bf, 0x4c3]
---
0x4b8 JUMPDEST
0x4b9 CALLVALUE
0x4ba ISZERO
0x4bb PUSH2 0x4c3
0x4be JUMPI
---
0x4b8: JUMPDEST 
0x4b9: V413 = CALLVALUE
0x4ba: V414 = ISZERO V413
0x4bb: V415 = 0x4c3
0x4be: JUMPI 0x4c3 V414
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4bf
[0x4bf:0x4c2]
---
Predecessors: [0x4b8]
Successors: []
---
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 REVERT
---
0x4bf: V416 = 0x0
0x4c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c3
[0x4c3:0x4d6]
---
Predecessors: [0x4b8]
Successors: [0xefc]
---
0x4c3 JUMPDEST
0x4c4 PUSH2 0x178
0x4c7 PUSH1 0x1
0x4c9 PUSH1 0xa0
0x4cb PUSH1 0x2
0x4cd EXP
0x4ce SUB
0x4cf PUSH1 0x4
0x4d1 CALLDATALOAD
0x4d2 AND
0x4d3 PUSH2 0xefc
0x4d6 JUMP
---
0x4c3: JUMPDEST 
0x4c4: V417 = 0x178
0x4c7: V418 = 0x1
0x4c9: V419 = 0xa0
0x4cb: V420 = 0x2
0x4cd: V421 = EXP 0x2 0xa0
0x4ce: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V423 = 0x4
0x4d1: V424 = CALLDATALOAD 0x4
0x4d2: V425 = AND V424 0xffffffffffffffffffffffffffffffffffffffff
0x4d3: V426 = 0xefc
0x4d6: JUMP 0xefc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178, V425]
Exit stack: [V12, 0x178, V425]

================================

Block 0x4d7
[0x4d7:0x4d8]
---
Predecessors: []
Successors: []
---
0x4d7 JUMPDEST
0x4d8 STOP
---
0x4d7: JUMPDEST 
0x4d8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4d9
[0x4d9:0x4df]
---
Predecessors: [0x12c]
Successors: [0x4e0, 0x4e4]
---
0x4d9 JUMPDEST
0x4da CALLVALUE
0x4db ISZERO
0x4dc PUSH2 0x4e4
0x4df JUMPI
---
0x4d9: JUMPDEST 
0x4da: V427 = CALLVALUE
0x4db: V428 = ISZERO V427
0x4dc: V429 = 0x4e4
0x4df: JUMPI 0x4e4 V428
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e0
[0x4e0:0x4e3]
---
Predecessors: [0x4d9]
Successors: []
---
0x4e0 PUSH1 0x0
0x4e2 DUP1
0x4e3 REVERT
---
0x4e0: V430 = 0x0
0x4e3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e4
[0x4e4:0x4f7]
---
Predecessors: [0x4d9]
Successors: [0xf59]
---
0x4e4 JUMPDEST
0x4e5 PUSH2 0x178
0x4e8 PUSH1 0x1
0x4ea PUSH1 0xa0
0x4ec PUSH1 0x2
0x4ee EXP
0x4ef SUB
0x4f0 PUSH1 0x4
0x4f2 CALLDATALOAD
0x4f3 AND
0x4f4 PUSH2 0xf59
0x4f7 JUMP
---
0x4e4: JUMPDEST 
0x4e5: V431 = 0x178
0x4e8: V432 = 0x1
0x4ea: V433 = 0xa0
0x4ec: V434 = 0x2
0x4ee: V435 = EXP 0x2 0xa0
0x4ef: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f0: V437 = 0x4
0x4f2: V438 = CALLDATALOAD 0x4
0x4f3: V439 = AND V438 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V440 = 0xf59
0x4f7: JUMP 0xf59
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178, V439]
Exit stack: [V12, 0x178, V439]

================================

Block 0x4f8
[0x4f8:0x4f9]
---
Predecessors: []
Successors: []
---
0x4f8 JUMPDEST
0x4f9 STOP
---
0x4f8: JUMPDEST 
0x4f9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4fa
[0x4fa:0x50b]
---
Predecessors: [0x16f]
Successors: [0x50c, 0x510]
---
0x4fa JUMPDEST
0x4fb PUSH1 0x0
0x4fd DUP1
0x4fe PUSH7 0x38d7ea4c68000
0x506 CALLVALUE
0x507 LT
0x508 PUSH2 0x510
0x50b JUMPI
---
0x4fa: JUMPDEST 
0x4fb: V441 = 0x0
0x4fe: V442 = 0x38d7ea4c68000
0x506: V443 = CALLVALUE
0x507: V444 = LT V443 0x38d7ea4c68000
0x508: V445 = 0x510
0x50b: JUMPI 0x510 V444
---
Entry stack: [V12, 0x178, V114]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x178, V114, 0x0, 0x0]

================================

Block 0x50c
[0x50c:0x50f]
---
Predecessors: [0x4fa]
Successors: []
---
0x50c PUSH1 0x0
0x50e DUP1
0x50f REVERT
---
0x50c: V446 = 0x0
0x50f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V114, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V114, 0x0, 0x0]

================================

Block 0x510
[0x510:0x530]
---
Predecessors: [0x4fa]
Successors: [0xfb5]
---
0x510 JUMPDEST
0x511 PUSH2 0x542
0x514 PUSH2 0x53d
0x517 PUSH8 0xde0b6b3a7640000
0x520 PUSH2 0x531
0x523 CALLVALUE
0x524 PUSH2 0x280
0x527 PUSH4 0xffffffff
0x52c PUSH2 0xfb5
0x52f AND
0x530 JUMP
---
0x510: JUMPDEST 
0x511: V447 = 0x542
0x514: V448 = 0x53d
0x517: V449 = 0xde0b6b3a7640000
0x520: V450 = 0x531
0x523: V451 = CALLVALUE
0x524: V452 = 0x280
0x527: V453 = 0xffffffff
0x52c: V454 = 0xfb5
0x52f: V455 = AND 0xfb5 0xffffffff
0x530: JUMP 0xfb5
---
Entry stack: [V12, 0x178, V114, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x542, 0x53d, 0xde0b6b3a7640000, 0x531, V451, 0x280]
Exit stack: [V12, 0x178, V114, 0x0, 0x0, 0x542, 0x53d, 0xde0b6b3a7640000, 0x531, V451, 0x280]

================================

Block 0x531
[0x531:0x53c]
---
Predecessors: [0xfdd]
Successors: [0xfe4]
---
0x531 JUMPDEST
0x532 SWAP1
0x533 PUSH4 0xffffffff
0x538 PUSH2 0xfe4
0x53b AND
0x53c JUMP
---
0x531: JUMPDEST 
0x533: V456 = 0xffffffff
0x538: V457 = 0xfe4
0x53b: V458 = AND 0xfe4 0xffffffff
0x53c: JUMP 0xfe4
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x53d
[0x53d:0x541]
---
Predecessors: [0xff9, 0x1037, 0x10af]
Successors: [0x1000]
---
0x53d JUMPDEST
0x53e PUSH2 0x1000
0x541 JUMP
---
0x53d: JUMPDEST 
0x53e: V459 = 0x1000
0x541: JUMP 0x1000
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x542
[0x542:0x55d]
---
Predecessors: [0x6d5, 0x1037, 0x10af]
Successors: [0x103c]
---
0x542 JUMPDEST
0x543 SWAP2
0x544 POP
0x545 PUSH4 0x1dcd6500
0x54a PUSH2 0x55e
0x54d PUSH1 0x6
0x54f SLOAD
0x550 DUP5
0x551 PUSH2 0x103c
0x554 SWAP1
0x555 SWAP2
0x556 SWAP1
0x557 PUSH4 0xffffffff
0x55c AND
0x55d JUMP
---
0x542: JUMPDEST 
0x545: V460 = 0x1dcd6500
0x54a: V461 = 0x55e
0x54d: V462 = 0x6
0x54f: V463 = S[0x6]
0x551: V464 = 0x103c
0x557: V465 = 0xffffffff
0x55c: V466 = AND 0xffffffff 0x103c
0x55d: JUMP 0x103c
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x1dcd6500, 0x55e, S0, V463]
Exit stack: [V12, S5, S4, S3, S0, S1, 0x1dcd6500, 0x55e, S0, V463]

================================

Block 0x55e
[0x55e:0x563]
---
Predecessors: [0xfdd]
Successors: [0x564, 0x568]
---
0x55e JUMPDEST
0x55f GT
0x560 PUSH2 0x568
0x563 JUMPI
---
0x55e: JUMPDEST 
0x55f: V467 = GT S0 S1
0x560: V468 = 0x568
0x563: JUMPI 0x568 V467
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x564
[0x564:0x567]
---
Predecessors: [0x55e]
Successors: []
---
0x564 PUSH1 0x0
0x566 DUP1
0x567 REVERT
---
0x564: V469 = 0x0
0x567: REVERT 0x0 0x0
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x568
[0x568:0x5d7]
---
Predecessors: [0x55e]
Successors: [0x5d8, 0x5dc]
---
0x568 JUMPDEST
0x569 POP
0x56a PUSH1 0x1
0x56c PUSH1 0xa0
0x56e PUSH1 0x2
0x570 EXP
0x571 SUB
0x572 DUP1
0x573 DUP4
0x574 AND
0x575 PUSH1 0x0
0x577 SWAP1
0x578 DUP2
0x579 MSTORE
0x57a PUSH1 0x8
0x57c PUSH1 0x20
0x57e MSTORE
0x57f PUSH1 0x40
0x581 DUP1
0x582 DUP3
0x583 SHA3
0x584 PUSH1 0x3
0x586 SLOAD
0x587 SWAP1
0x588 SWAP4
0x589 AND
0x58a SWAP2
0x58b PUSH4 0xa9059cbb
0x590 SWAP2
0x591 DUP7
0x592 SWAP2
0x593 DUP7
0x594 SWAP2
0x595 MLOAD
0x596 PUSH1 0x20
0x598 ADD
0x599 MSTORE
0x59a PUSH1 0x40
0x59c MLOAD
0x59d PUSH1 0xe0
0x59f PUSH1 0x2
0x5a1 EXP
0x5a2 PUSH4 0xffffffff
0x5a7 DUP6
0x5a8 AND
0x5a9 MUL
0x5aa DUP2
0x5ab MSTORE
0x5ac PUSH1 0x1
0x5ae PUSH1 0xa0
0x5b0 PUSH1 0x2
0x5b2 EXP
0x5b3 SUB
0x5b4 SWAP1
0x5b5 SWAP3
0x5b6 AND
0x5b7 PUSH1 0x4
0x5b9 DUP4
0x5ba ADD
0x5bb MSTORE
0x5bc PUSH1 0x24
0x5be DUP3
0x5bf ADD
0x5c0 MSTORE
0x5c1 PUSH1 0x44
0x5c3 ADD
0x5c4 PUSH1 0x20
0x5c6 PUSH1 0x40
0x5c8 MLOAD
0x5c9 DUP1
0x5ca DUP4
0x5cb SUB
0x5cc DUP2
0x5cd PUSH1 0x0
0x5cf DUP8
0x5d0 DUP1
0x5d1 EXTCODESIZE
0x5d2 ISZERO
0x5d3 ISZERO
0x5d4 PUSH2 0x5dc
0x5d7 JUMPI
---
0x568: JUMPDEST 
0x56a: V470 = 0x1
0x56c: V471 = 0xa0
0x56e: V472 = 0x2
0x570: V473 = EXP 0x2 0xa0
0x571: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x574: V475 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x575: V476 = 0x0
0x579: M[0x0] = V475
0x57a: V477 = 0x8
0x57c: V478 = 0x20
0x57e: M[0x20] = 0x8
0x57f: V479 = 0x40
0x583: V480 = SHA3 0x0 0x40
0x584: V481 = 0x3
0x586: V482 = S[0x3]
0x589: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x58b: V484 = 0xa9059cbb
0x595: V485 = M[0x40]
0x596: V486 = 0x20
0x598: V487 = ADD 0x20 V485
0x599: M[V487] = 0x0
0x59a: V488 = 0x40
0x59c: V489 = M[0x40]
0x59d: V490 = 0xe0
0x59f: V491 = 0x2
0x5a1: V492 = EXP 0x2 0xe0
0x5a2: V493 = 0xffffffff
0x5a8: V494 = AND 0xa9059cbb 0xffffffff
0x5a9: V495 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5ab: M[V489] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5ac: V496 = 0x1
0x5ae: V497 = 0xa0
0x5b0: V498 = 0x2
0x5b2: V499 = EXP 0x2 0xa0
0x5b3: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b6: V501 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V502 = 0x4
0x5ba: V503 = ADD V489 0x4
0x5bb: M[V503] = V501
0x5bc: V504 = 0x24
0x5bf: V505 = ADD V489 0x24
0x5c0: M[V505] = S1
0x5c1: V506 = 0x44
0x5c3: V507 = ADD 0x44 V489
0x5c4: V508 = 0x20
0x5c6: V509 = 0x40
0x5c8: V510 = M[0x40]
0x5cb: V511 = SUB V507 V510
0x5cd: V512 = 0x0
0x5d1: V513 = EXTCODESIZE V483
0x5d2: V514 = ISZERO V513
0x5d3: V515 = ISZERO V514
0x5d4: V516 = 0x5dc
0x5d7: JUMPI 0x5dc V515
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V480, V483, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V483]
Exit stack: [V12, S6, S5, S4, S3, S2, S1, V480, V483, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V483]

================================

Block 0x5d8
[0x5d8:0x5db]
---
Predecessors: [0x568]
Successors: []
---
0x5d8 PUSH1 0x0
0x5da DUP1
0x5db REVERT
---
0x5d8: V517 = 0x0
0x5db: REVERT 0x0 0x0
---
Entry stack: [V12, S13, S12, S11, S10, V480, V483, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, V480, V483, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V483]

================================

Block 0x5dc
[0x5dc:0x5e8]
---
Predecessors: [0x568]
Successors: [0x5e9, 0x5ed]
---
0x5dc JUMPDEST
0x5dd PUSH2 0x2c6
0x5e0 GAS
0x5e1 SUB
0x5e2 CALL
0x5e3 ISZERO
0x5e4 ISZERO
0x5e5 PUSH2 0x5ed
0x5e8 JUMPI
---
0x5dc: JUMPDEST 
0x5dd: V518 = 0x2c6
0x5e0: V519 = GAS
0x5e1: V520 = SUB V519 0x2c6
0x5e2: V521 = CALL V520 V483 0x0 V510 V511 V510 0x20
0x5e3: V522 = ISZERO V521
0x5e4: V523 = ISZERO V522
0x5e5: V524 = 0x5ed
0x5e8: JUMPI 0x5ed V523
---
Entry stack: [V12, S13, S12, S11, S10, V480, V483, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V483]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, V480, V483, 0xa9059cbb, V507]

================================

Block 0x5e9
[0x5e9:0x5ec]
---
Predecessors: [0x5dc]
Successors: []
---
0x5e9 PUSH1 0x0
0x5eb DUP1
0x5ec REVERT
---
0x5e9: V525 = 0x0
0x5ec: REVERT 0x0 0x0
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x5ed
[0x5ed:0x60b]
---
Predecessors: [0x5dc]
Successors: [0x103c]
---
0x5ed JUMPDEST
0x5ee POP
0x5ef POP
0x5f0 POP
0x5f1 PUSH1 0x40
0x5f3 MLOAD
0x5f4 DUP1
0x5f5 MLOAD
0x5f6 POP
0x5f7 POP
0x5f8 PUSH1 0x1
0x5fa DUP2
0x5fb ADD
0x5fc SLOAD
0x5fd PUSH2 0x60c
0x600 SWAP1
0x601 DUP4
0x602 PUSH4 0xffffffff
0x607 PUSH2 0x103c
0x60a AND
0x60b JUMP
---
0x5ed: JUMPDEST 
0x5f1: V526 = 0x40
0x5f3: V527 = M[0x40]
0x5f5: V528 = M[V527]
0x5f8: V529 = 0x1
0x5fb: V530 = ADD S3 0x1
0x5fc: V531 = S[V530]
0x5fd: V532 = 0x60c
0x602: V533 = 0xffffffff
0x607: V534 = 0x103c
0x60a: V535 = AND 0x103c 0xffffffff
0x60b: JUMP 0x103c
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 5
Stack additions: [S4, S3, 0x60c, V531, S4]
Exit stack: [V12, S7, S6, S5, S4, S3, 0x60c, V531, S4]

================================

Block 0x60c
[0x60c:0x622]
---
Predecessors: [0xfdd]
Successors: [0x103c]
---
0x60c JUMPDEST
0x60d PUSH1 0x1
0x60f DUP3
0x610 ADD
0x611 SSTORE
0x612 DUP1
0x613 SLOAD
0x614 PUSH2 0x623
0x617 SWAP1
0x618 CALLVALUE
0x619 PUSH4 0xffffffff
0x61e PUSH2 0x103c
0x621 AND
0x622 JUMP
---
0x60c: JUMPDEST 
0x60d: V536 = 0x1
0x610: V537 = ADD S1 0x1
0x611: S[V537] = S0
0x613: V538 = S[S1]
0x614: V539 = 0x623
0x618: V540 = CALLVALUE
0x619: V541 = 0xffffffff
0x61e: V542 = 0x103c
0x621: V543 = AND 0x103c 0xffffffff
0x622: JUMP 0x103c
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x623, V538, V540]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x623, V538, V540]

================================

Block 0x623
[0x623:0x637]
---
Predecessors: [0xfdd]
Successors: [0x103c]
---
0x623 JUMPDEST
0x624 DUP2
0x625 SSTORE
0x626 PUSH1 0x5
0x628 SLOAD
0x629 PUSH2 0x638
0x62c SWAP1
0x62d CALLVALUE
0x62e PUSH4 0xffffffff
0x633 PUSH2 0x103c
0x636 AND
0x637 JUMP
---
0x623: JUMPDEST 
0x625: S[S1] = S0
0x626: V544 = 0x5
0x628: V545 = S[0x5]
0x629: V546 = 0x638
0x62d: V547 = CALLVALUE
0x62e: V548 = 0xffffffff
0x633: V549 = 0x103c
0x636: V550 = AND 0x103c 0xffffffff
0x637: JUMP 0x103c
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x638, V545, V547]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x638, V545, V547]

================================

Block 0x638
[0x638:0x64d]
---
Predecessors: [0xfdd]
Successors: [0x103c]
---
0x638 JUMPDEST
0x639 PUSH1 0x5
0x63b SSTORE
0x63c PUSH1 0x6
0x63e SLOAD
0x63f PUSH2 0x64e
0x642 SWAP1
0x643 DUP4
0x644 PUSH4 0xffffffff
0x649 PUSH2 0x103c
0x64c AND
0x64d JUMP
---
0x638: JUMPDEST 
0x639: V551 = 0x5
0x63b: S[0x5] = S0
0x63c: V552 = 0x6
0x63e: V553 = S[0x6]
0x63f: V554 = 0x64e
0x644: V555 = 0xffffffff
0x649: V556 = 0x103c
0x64c: V557 = AND 0x103c 0xffffffff
0x64d: JUMP 0x103c
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x64e, V553, S2]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x64e, V553, S2]

================================

Block 0x64e
[0x64e:0x6d4]
---
Predecessors: [0xfdd]
Successors: [0x6d5]
---
0x64e JUMPDEST
0x64f PUSH1 0x6
0x651 SSTORE
0x652 PUSH1 0x1
0x654 PUSH1 0xa0
0x656 PUSH1 0x2
0x658 EXP
0x659 SUB
0x65a CALLER
0x65b AND
0x65c PUSH32 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c
0x67d DUP4
0x67e PUSH1 0x40
0x680 MLOAD
0x681 SWAP1
0x682 DUP2
0x683 MSTORE
0x684 PUSH1 0x20
0x686 ADD
0x687 PUSH1 0x40
0x689 MLOAD
0x68a DUP1
0x68b SWAP2
0x68c SUB
0x68d SWAP1
0x68e LOG2
0x68f PUSH32 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
0x6b0 DUP4
0x6b1 PUSH1 0x5
0x6b3 SLOAD
0x6b4 PUSH1 0x40
0x6b6 MLOAD
0x6b7 PUSH1 0x1
0x6b9 PUSH1 0xa0
0x6bb PUSH1 0x2
0x6bd EXP
0x6be SUB
0x6bf SWAP1
0x6c0 SWAP3
0x6c1 AND
0x6c2 DUP3
0x6c3 MSTORE
0x6c4 PUSH1 0x20
0x6c6 DUP3
0x6c7 ADD
0x6c8 MSTORE
0x6c9 PUSH1 0x40
0x6cb SWAP1
0x6cc DUP2
0x6cd ADD
0x6ce SWAP1
0x6cf MLOAD
0x6d0 DUP1
0x6d1 SWAP2
0x6d2 SUB
0x6d3 SWAP1
0x6d4 LOG1
---
0x64e: JUMPDEST 
0x64f: V558 = 0x6
0x651: S[0x6] = S0
0x652: V559 = 0x1
0x654: V560 = 0xa0
0x656: V561 = 0x2
0x658: V562 = EXP 0x2 0xa0
0x659: V563 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65a: V564 = CALLER
0x65b: V565 = AND V564 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V566 = 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c
0x67e: V567 = 0x40
0x680: V568 = M[0x40]
0x683: M[V568] = S2
0x684: V569 = 0x20
0x686: V570 = ADD 0x20 V568
0x687: V571 = 0x40
0x689: V572 = M[0x40]
0x68c: V573 = SUB V570 V572
0x68e: LOG V572 V573 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c V565
0x68f: V574 = 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
0x6b1: V575 = 0x5
0x6b3: V576 = S[0x5]
0x6b4: V577 = 0x40
0x6b6: V578 = M[0x40]
0x6b7: V579 = 0x1
0x6b9: V580 = 0xa0
0x6bb: V581 = 0x2
0x6bd: V582 = EXP 0x2 0xa0
0x6be: V583 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c1: V584 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x6c3: M[V578] = V584
0x6c4: V585 = 0x20
0x6c7: V586 = ADD V578 0x20
0x6c8: M[V586] = V576
0x6c9: V587 = 0x40
0x6cd: V588 = ADD 0x40 V578
0x6cf: V589 = M[0x40]
0x6d2: V590 = SUB V588 V589
0x6d4: LOG V589 V590 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x6d5
[0x6d5:0x6d9]
---
Predecessors: [0x64e, 0x761]
Successors: [0x178, 0x542]
---
0x6d5 JUMPDEST
0x6d6 POP
0x6d7 POP
0x6d8 POP
0x6d9 JUMP
---
0x6d5: JUMPDEST 
0x6d9: JUMP S3
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4]

================================

Block 0x6da
[0x6da:0x6df]
---
Predecessors: [0x188]
Successors: [0x190]
---
0x6da JUMPDEST
0x6db PUSH1 0x2
0x6dd SLOAD
0x6de DUP2
0x6df JUMP
---
0x6da: JUMPDEST 
0x6db: V591 = 0x2
0x6dd: V592 = S[0x2]
0x6df: JUMP 0x190
---
Entry stack: [V12, 0x190]
Stack pops: 1
Stack additions: [S0, V592]
Exit stack: [V12, 0x190, V592]

================================

Block 0x6e0
[0x6e0:0x6ee]
---
Predecessors: [0x1ad]
Successors: [0x1b5]
---
0x6e0 JUMPDEST
0x6e1 PUSH1 0x3
0x6e3 SLOAD
0x6e4 PUSH1 0x1
0x6e6 PUSH1 0xa0
0x6e8 PUSH1 0x2
0x6ea EXP
0x6eb SUB
0x6ec AND
0x6ed DUP2
0x6ee JUMP
---
0x6e0: JUMPDEST 
0x6e1: V593 = 0x3
0x6e3: V594 = S[0x3]
0x6e4: V595 = 0x1
0x6e6: V596 = 0xa0
0x6e8: V597 = 0x2
0x6ea: V598 = EXP 0x2 0xa0
0x6eb: V599 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ec: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x6ee: JUMP 0x1b5
---
Entry stack: [V12, 0x1b5]
Stack pops: 1
Stack additions: [S0, V600]
Exit stack: [V12, 0x1b5, V600]

================================

Block 0x6ef
[0x6ef:0x705]
---
Predecessors: [0x1dc]
Successors: [0x706, 0x70a]
---
0x6ef JUMPDEST
0x6f0 PUSH1 0x0
0x6f2 SLOAD
0x6f3 CALLER
0x6f4 PUSH1 0x1
0x6f6 PUSH1 0xa0
0x6f8 PUSH1 0x2
0x6fa EXP
0x6fb SUB
0x6fc SWAP1
0x6fd DUP2
0x6fe AND
0x6ff SWAP2
0x700 AND
0x701 EQ
0x702 PUSH2 0x70a
0x705 JUMPI
---
0x6ef: JUMPDEST 
0x6f0: V601 = 0x0
0x6f2: V602 = S[0x0]
0x6f3: V603 = CALLER
0x6f4: V604 = 0x1
0x6f6: V605 = 0xa0
0x6f8: V606 = 0x2
0x6fa: V607 = EXP 0x2 0xa0
0x6fb: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fe: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x700: V610 = AND V602 0xffffffffffffffffffffffffffffffffffffffff
0x701: V611 = EQ V610 V609
0x702: V612 = 0x70a
0x705: JUMPI 0x70a V611
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x706
[0x706:0x709]
---
Predecessors: [0x6ef]
Successors: []
---
0x706 PUSH1 0x0
0x708 DUP1
0x709 REVERT
---
0x706: V613 = 0x0
0x709: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x70a
[0x70a:0x75c]
---
Predecessors: [0x6ef]
Successors: [0x75d, 0x761]
---
0x70a JUMPDEST
0x70b PUSH1 0x3
0x70d SLOAD
0x70e PUSH1 0x0
0x710 SLOAD
0x711 PUSH1 0x1
0x713 PUSH1 0xa0
0x715 PUSH1 0x2
0x717 EXP
0x718 SUB
0x719 SWAP2
0x71a DUP3
0x71b AND
0x71c SWAP2
0x71d PUSH4 0xf2fde38b
0x722 SWAP2
0x723 AND
0x724 PUSH1 0x40
0x726 MLOAD
0x727 PUSH1 0xe0
0x729 PUSH1 0x2
0x72b EXP
0x72c PUSH4 0xffffffff
0x731 DUP5
0x732 AND
0x733 MUL
0x734 DUP2
0x735 MSTORE
0x736 PUSH1 0x1
0x738 PUSH1 0xa0
0x73a PUSH1 0x2
0x73c EXP
0x73d SUB
0x73e SWAP1
0x73f SWAP2
0x740 AND
0x741 PUSH1 0x4
0x743 DUP3
0x744 ADD
0x745 MSTORE
0x746 PUSH1 0x24
0x748 ADD
0x749 PUSH1 0x0
0x74b PUSH1 0x40
0x74d MLOAD
0x74e DUP1
0x74f DUP4
0x750 SUB
0x751 DUP2
0x752 PUSH1 0x0
0x754 DUP8
0x755 DUP1
0x756 EXTCODESIZE
0x757 ISZERO
0x758 ISZERO
0x759 PUSH2 0x761
0x75c JUMPI
---
0x70a: JUMPDEST 
0x70b: V614 = 0x3
0x70d: V615 = S[0x3]
0x70e: V616 = 0x0
0x710: V617 = S[0x0]
0x711: V618 = 0x1
0x713: V619 = 0xa0
0x715: V620 = 0x2
0x717: V621 = EXP 0x2 0xa0
0x718: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71b: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V615
0x71d: V624 = 0xf2fde38b
0x723: V625 = AND V617 0xffffffffffffffffffffffffffffffffffffffff
0x724: V626 = 0x40
0x726: V627 = M[0x40]
0x727: V628 = 0xe0
0x729: V629 = 0x2
0x72b: V630 = EXP 0x2 0xe0
0x72c: V631 = 0xffffffff
0x732: V632 = AND 0xf2fde38b 0xffffffff
0x733: V633 = MUL 0xf2fde38b 0x100000000000000000000000000000000000000000000000000000000
0x735: M[V627] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x736: V634 = 0x1
0x738: V635 = 0xa0
0x73a: V636 = 0x2
0x73c: V637 = EXP 0x2 0xa0
0x73d: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x740: V639 = AND V625 0xffffffffffffffffffffffffffffffffffffffff
0x741: V640 = 0x4
0x744: V641 = ADD V627 0x4
0x745: M[V641] = V639
0x746: V642 = 0x24
0x748: V643 = ADD 0x24 V627
0x749: V644 = 0x0
0x74b: V645 = 0x40
0x74d: V646 = M[0x40]
0x750: V647 = SUB V643 V646
0x752: V648 = 0x0
0x756: V649 = EXTCODESIZE V623
0x757: V650 = ISZERO V649
0x758: V651 = ISZERO V650
0x759: V652 = 0x761
0x75c: JUMPI 0x761 V651
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: [V623, 0xf2fde38b, V643, 0x0, V646, V647, V646, 0x0, V623]
Exit stack: [V12, 0x178, V623, 0xf2fde38b, V643, 0x0, V646, V647, V646, 0x0, V623]

================================

Block 0x75d
[0x75d:0x760]
---
Predecessors: [0x70a]
Successors: []
---
0x75d PUSH1 0x0
0x75f DUP1
0x760 REVERT
---
0x75d: V653 = 0x0
0x760: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V623, 0xf2fde38b, V643, 0x0, V646, V647, V646, 0x0, V623]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V623, 0xf2fde38b, V643, 0x0, V646, V647, V646, 0x0, V623]

================================

Block 0x761
[0x761:0x76d]
---
Predecessors: [0x70a]
Successors: [0x6d5, 0x76e]
---
0x761 JUMPDEST
0x762 PUSH2 0x2c6
0x765 GAS
0x766 SUB
0x767 CALL
0x768 ISZERO
0x769 ISZERO
0x76a PUSH2 0x6d5
0x76d JUMPI
---
0x761: JUMPDEST 
0x762: V654 = 0x2c6
0x765: V655 = GAS
0x766: V656 = SUB V655 0x2c6
0x767: V657 = CALL V656 V623 0x0 V646 V647 V646 0x0
0x768: V658 = ISZERO V657
0x769: V659 = ISZERO V658
0x76a: V660 = 0x6d5
0x76d: JUMPI 0x6d5 V659
---
Entry stack: [V12, 0x178, V623, 0xf2fde38b, V643, 0x0, V646, V647, V646, 0x0, V623]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x178, V623, 0xf2fde38b, V643]

================================

Block 0x76e
[0x76e:0x771]
---
Predecessors: [0x761]
Successors: []
---
0x76e PUSH1 0x0
0x770 DUP1
0x771 REVERT
---
0x76e: V661 = 0x0
0x771: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V623, 0xf2fde38b, V643]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V623, 0xf2fde38b, V643]

================================

Block 0x772
[0x772:0x775]
---
Predecessors: []
Successors: [0x776]
---
0x772 JUMPDEST
0x773 POP
0x774 POP
0x775 POP
---
0x772: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x776
[0x776:0x776]
---
Predecessors: [0x772, 0xca8]
Successors: [0x777]
---
0x776 JUMPDEST
---
0x776: JUMPDEST 
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x777
[0x777:0x778]
---
Predecessors: [0x776]
Successors: [0x178]
---
0x777 JUMPDEST
0x778 JUMP
---
0x777: JUMPDEST 
0x778: JUMP 0x178
---
Entry stack: [V12, 0x178]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x779
[0x779:0x787]
---
Predecessors: [0x1f1]
Successors: [0x788, 0x792]
---
0x779 JUMPDEST
0x77a PUSH1 0x0
0x77c PUSH4 0x59c05e00
0x781 TIMESTAMP
0x782 LT
0x783 DUP1
0x784 PUSH2 0x792
0x787 JUMPI
---
0x779: JUMPDEST 
0x77a: V662 = 0x0
0x77c: V663 = 0x59c05e00
0x781: V664 = TIMESTAMP
0x782: V665 = LT V664 0x59c05e00
0x784: V666 = 0x792
0x787: JUMPI 0x792 V665
---
Entry stack: [V12, 0x178, V160]
Stack pops: 0
Stack additions: [0x0, V665]
Exit stack: [V12, 0x178, V160, 0x0, V665]

================================

Block 0x788
[0x788:0x791]
---
Predecessors: [0x779]
Successors: [0x792]
---
0x788 POP
0x789 PUSH3 0xf4240
0x78d PUSH1 0x6
0x78f SLOAD
0x790 LT
0x791 ISZERO
---
0x789: V667 = 0xf4240
0x78d: V668 = 0x6
0x78f: V669 = S[0x6]
0x790: V670 = LT V669 0xf4240
0x791: V671 = ISZERO V670
---
Entry stack: [V12, 0x178, V160, 0x0, V665]
Stack pops: 1
Stack additions: [V671]
Exit stack: [V12, 0x178, V160, 0x0, V671]

================================

Block 0x792
[0x792:0x798]
---
Predecessors: [0x779, 0x788]
Successors: [0x799, 0x79d]
---
0x792 JUMPDEST
0x793 ISZERO
0x794 ISZERO
0x795 PUSH2 0x79d
0x798 JUMPI
---
0x792: JUMPDEST 
0x793: V672 = ISZERO S0
0x794: V673 = ISZERO V672
0x795: V674 = 0x79d
0x798: JUMPI 0x79d V673
---
Entry stack: [V12, 0x178, V160, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0]

================================

Block 0x799
[0x799:0x79c]
---
Predecessors: [0x792]
Successors: []
---
0x799 PUSH1 0x0
0x79b DUP1
0x79c REVERT
---
0x799: V675 = 0x0
0x79c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V160, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0]

================================

Block 0x79d
[0x79d:0x7c0]
---
Predecessors: [0x792]
Successors: [0x7c1, 0x7c5]
---
0x79d JUMPDEST
0x79e PUSH1 0x1
0x7a0 PUSH1 0xa0
0x7a2 PUSH1 0x2
0x7a4 EXP
0x7a5 SUB
0x7a6 CALLER
0x7a7 AND
0x7a8 PUSH1 0x0
0x7aa SWAP1
0x7ab DUP2
0x7ac MSTORE
0x7ad PUSH1 0x8
0x7af PUSH1 0x20
0x7b1 MSTORE
0x7b2 PUSH1 0x40
0x7b4 SWAP1
0x7b5 SHA3
0x7b6 PUSH1 0x1
0x7b8 ADD
0x7b9 SLOAD
0x7ba DUP3
0x7bb EQ
0x7bc ISZERO
0x7bd PUSH2 0x7c5
0x7c0 JUMPI
---
0x79d: JUMPDEST 
0x79e: V676 = 0x1
0x7a0: V677 = 0xa0
0x7a2: V678 = 0x2
0x7a4: V679 = EXP 0x2 0xa0
0x7a5: V680 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a6: V681 = CALLER
0x7a7: V682 = AND V681 0xffffffffffffffffffffffffffffffffffffffff
0x7a8: V683 = 0x0
0x7ac: M[0x0] = V682
0x7ad: V684 = 0x8
0x7af: V685 = 0x20
0x7b1: M[0x20] = 0x8
0x7b2: V686 = 0x40
0x7b5: V687 = SHA3 0x0 0x40
0x7b6: V688 = 0x1
0x7b8: V689 = ADD 0x1 V687
0x7b9: V690 = S[V689]
0x7bb: V691 = EQ V160 V690
0x7bc: V692 = ISZERO V691
0x7bd: V693 = 0x7c5
0x7c0: JUMPI 0x7c5 V692
---
Entry stack: [V12, 0x178, V160, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x178, V160, 0x0]

================================

Block 0x7c1
[0x7c1:0x7c4]
---
Predecessors: [0x79d]
Successors: []
---
0x7c1 PUSH1 0x0
0x7c3 DUP1
0x7c4 REVERT
---
0x7c1: V694 = 0x0
0x7c4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V160, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0]

================================

Block 0x7c5
[0x7c5:0x82c]
---
Predecessors: [0x79d]
Successors: [0x82d, 0x831]
---
0x7c5 JUMPDEST
0x7c6 PUSH1 0x3
0x7c8 SLOAD
0x7c9 PUSH1 0x1
0x7cb PUSH1 0xa0
0x7cd PUSH1 0x2
0x7cf EXP
0x7d0 SUB
0x7d1 AND
0x7d2 PUSH4 0x23b872dd
0x7d7 CALLER
0x7d8 ADDRESS
0x7d9 DUP6
0x7da PUSH1 0x0
0x7dc PUSH1 0x40
0x7de MLOAD
0x7df PUSH1 0x20
0x7e1 ADD
0x7e2 MSTORE
0x7e3 PUSH1 0x40
0x7e5 MLOAD
0x7e6 PUSH1 0xe0
0x7e8 PUSH1 0x2
0x7ea EXP
0x7eb PUSH4 0xffffffff
0x7f0 DUP7
0x7f1 AND
0x7f2 MUL
0x7f3 DUP2
0x7f4 MSTORE
0x7f5 PUSH1 0x1
0x7f7 PUSH1 0xa0
0x7f9 PUSH1 0x2
0x7fb EXP
0x7fc SUB
0x7fd SWAP4
0x7fe DUP5
0x7ff AND
0x800 PUSH1 0x4
0x802 DUP3
0x803 ADD
0x804 MSTORE
0x805 SWAP2
0x806 SWAP1
0x807 SWAP3
0x808 AND
0x809 PUSH1 0x24
0x80b DUP3
0x80c ADD
0x80d MSTORE
0x80e PUSH1 0x44
0x810 DUP2
0x811 ADD
0x812 SWAP2
0x813 SWAP1
0x814 SWAP2
0x815 MSTORE
0x816 PUSH1 0x64
0x818 ADD
0x819 PUSH1 0x20
0x81b PUSH1 0x40
0x81d MLOAD
0x81e DUP1
0x81f DUP4
0x820 SUB
0x821 DUP2
0x822 PUSH1 0x0
0x824 DUP8
0x825 DUP1
0x826 EXTCODESIZE
0x827 ISZERO
0x828 ISZERO
0x829 PUSH2 0x831
0x82c JUMPI
---
0x7c5: JUMPDEST 
0x7c6: V695 = 0x3
0x7c8: V696 = S[0x3]
0x7c9: V697 = 0x1
0x7cb: V698 = 0xa0
0x7cd: V699 = 0x2
0x7cf: V700 = EXP 0x2 0xa0
0x7d0: V701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d1: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0x7d2: V703 = 0x23b872dd
0x7d7: V704 = CALLER
0x7d8: V705 = ADDRESS
0x7da: V706 = 0x0
0x7dc: V707 = 0x40
0x7de: V708 = M[0x40]
0x7df: V709 = 0x20
0x7e1: V710 = ADD 0x20 V708
0x7e2: M[V710] = 0x0
0x7e3: V711 = 0x40
0x7e5: V712 = M[0x40]
0x7e6: V713 = 0xe0
0x7e8: V714 = 0x2
0x7ea: V715 = EXP 0x2 0xe0
0x7eb: V716 = 0xffffffff
0x7f1: V717 = AND 0x23b872dd 0xffffffff
0x7f2: V718 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x7f4: M[V712] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x7f5: V719 = 0x1
0x7f7: V720 = 0xa0
0x7f9: V721 = 0x2
0x7fb: V722 = EXP 0x2 0xa0
0x7fc: V723 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ff: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0x800: V725 = 0x4
0x803: V726 = ADD V712 0x4
0x804: M[V726] = V724
0x808: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0x809: V728 = 0x24
0x80c: V729 = ADD V712 0x24
0x80d: M[V729] = V727
0x80e: V730 = 0x44
0x811: V731 = ADD V712 0x44
0x815: M[V731] = V160
0x816: V732 = 0x64
0x818: V733 = ADD 0x64 V712
0x819: V734 = 0x20
0x81b: V735 = 0x40
0x81d: V736 = M[0x40]
0x820: V737 = SUB V733 V736
0x822: V738 = 0x0
0x826: V739 = EXTCODESIZE V702
0x827: V740 = ISZERO V739
0x828: V741 = ISZERO V740
0x829: V742 = 0x831
0x82c: JUMPI 0x831 V741
---
Entry stack: [V12, 0x178, V160, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V702, 0x23b872dd, V733, 0x20, V736, V737, V736, 0x0, V702]
Exit stack: [V12, 0x178, V160, 0x0, V702, 0x23b872dd, V733, 0x20, V736, V737, V736, 0x0, V702]

================================

Block 0x82d
[0x82d:0x830]
---
Predecessors: [0x7c5]
Successors: []
---
0x82d PUSH1 0x0
0x82f DUP1
0x830 REVERT
---
0x82d: V743 = 0x0
0x830: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V160, 0x0, V702, 0x23b872dd, V733, 0x20, V736, V737, V736, 0x0, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0, V702, 0x23b872dd, V733, 0x20, V736, V737, V736, 0x0, V702]

================================

Block 0x831
[0x831:0x83d]
---
Predecessors: [0x7c5]
Successors: [0x83e, 0x842]
---
0x831 JUMPDEST
0x832 PUSH2 0x2c6
0x835 GAS
0x836 SUB
0x837 CALL
0x838 ISZERO
0x839 ISZERO
0x83a PUSH2 0x842
0x83d JUMPI
---
0x831: JUMPDEST 
0x832: V744 = 0x2c6
0x835: V745 = GAS
0x836: V746 = SUB V745 0x2c6
0x837: V747 = CALL V746 V702 0x0 V736 V737 V736 0x20
0x838: V748 = ISZERO V747
0x839: V749 = ISZERO V748
0x83a: V750 = 0x842
0x83d: JUMPI 0x842 V749
---
Entry stack: [V12, 0x178, V160, 0x0, V702, 0x23b872dd, V733, 0x20, V736, V737, V736, 0x0, V702]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0, V702, 0x23b872dd, V733]

================================

Block 0x83e
[0x83e:0x841]
---
Predecessors: [0x831]
Successors: []
---
0x83e PUSH1 0x0
0x840 DUP1
0x841 REVERT
---
0x83e: V751 = 0x0
0x841: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V160, 0x0, V702, 0x23b872dd, V733]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0, V702, 0x23b872dd, V733]

================================

Block 0x842
[0x842:0x898]
---
Predecessors: [0x831]
Successors: [0x899, 0x89d]
---
0x842 JUMPDEST
0x843 POP
0x844 POP
0x845 POP
0x846 PUSH1 0x40
0x848 MLOAD
0x849 DUP1
0x84a MLOAD
0x84b POP
0x84c POP
0x84d PUSH1 0x3
0x84f SLOAD
0x850 PUSH1 0x1
0x852 PUSH1 0xa0
0x854 PUSH1 0x2
0x856 EXP
0x857 SUB
0x858 AND
0x859 PUSH4 0x42966c68
0x85e DUP4
0x85f PUSH1 0x0
0x861 PUSH1 0x40
0x863 MLOAD
0x864 PUSH1 0x20
0x866 ADD
0x867 MSTORE
0x868 PUSH1 0x40
0x86a MLOAD
0x86b PUSH1 0xe0
0x86d PUSH1 0x2
0x86f EXP
0x870 PUSH4 0xffffffff
0x875 DUP5
0x876 AND
0x877 MUL
0x878 DUP2
0x879 MSTORE
0x87a PUSH1 0x4
0x87c DUP2
0x87d ADD
0x87e SWAP2
0x87f SWAP1
0x880 SWAP2
0x881 MSTORE
0x882 PUSH1 0x24
0x884 ADD
0x885 PUSH1 0x20
0x887 PUSH1 0x40
0x889 MLOAD
0x88a DUP1
0x88b DUP4
0x88c SUB
0x88d DUP2
0x88e PUSH1 0x0
0x890 DUP8
0x891 DUP1
0x892 EXTCODESIZE
0x893 ISZERO
0x894 ISZERO
0x895 PUSH2 0x89d
0x898 JUMPI
---
0x842: JUMPDEST 
0x846: V752 = 0x40
0x848: V753 = M[0x40]
0x84a: V754 = M[V753]
0x84d: V755 = 0x3
0x84f: V756 = S[0x3]
0x850: V757 = 0x1
0x852: V758 = 0xa0
0x854: V759 = 0x2
0x856: V760 = EXP 0x2 0xa0
0x857: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x858: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0x859: V763 = 0x42966c68
0x85f: V764 = 0x0
0x861: V765 = 0x40
0x863: V766 = M[0x40]
0x864: V767 = 0x20
0x866: V768 = ADD 0x20 V766
0x867: M[V768] = 0x0
0x868: V769 = 0x40
0x86a: V770 = M[0x40]
0x86b: V771 = 0xe0
0x86d: V772 = 0x2
0x86f: V773 = EXP 0x2 0xe0
0x870: V774 = 0xffffffff
0x876: V775 = AND 0x42966c68 0xffffffff
0x877: V776 = MUL 0x42966c68 0x100000000000000000000000000000000000000000000000000000000
0x879: M[V770] = 0x42966c6800000000000000000000000000000000000000000000000000000000
0x87a: V777 = 0x4
0x87d: V778 = ADD V770 0x4
0x881: M[V778] = V160
0x882: V779 = 0x24
0x884: V780 = ADD 0x24 V770
0x885: V781 = 0x20
0x887: V782 = 0x40
0x889: V783 = M[0x40]
0x88c: V784 = SUB V780 V783
0x88e: V785 = 0x0
0x892: V786 = EXTCODESIZE V762
0x893: V787 = ISZERO V786
0x894: V788 = ISZERO V787
0x895: V789 = 0x89d
0x898: JUMPI 0x89d V788
---
Entry stack: [V12, 0x178, V160, 0x0, V702, 0x23b872dd, V733]
Stack pops: 5
Stack additions: [S4, S3, V762, 0x42966c68, V780, 0x20, V783, V784, V783, 0x0, V762]
Exit stack: [V12, 0x178, V160, 0x0, V762, 0x42966c68, V780, 0x20, V783, V784, V783, 0x0, V762]

================================

Block 0x899
[0x899:0x89c]
---
Predecessors: [0x842]
Successors: []
---
0x899 PUSH1 0x0
0x89b DUP1
0x89c REVERT
---
0x899: V790 = 0x0
0x89c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V160, 0x0, V762, 0x42966c68, V780, 0x20, V783, V784, V783, 0x0, V762]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0, V762, 0x42966c68, V780, 0x20, V783, V784, V783, 0x0, V762]

================================

Block 0x89d
[0x89d:0x8a9]
---
Predecessors: [0x842]
Successors: [0x8aa, 0x8ae]
---
0x89d JUMPDEST
0x89e PUSH2 0x2c6
0x8a1 GAS
0x8a2 SUB
0x8a3 CALL
0x8a4 ISZERO
0x8a5 ISZERO
0x8a6 PUSH2 0x8ae
0x8a9 JUMPI
---
0x89d: JUMPDEST 
0x89e: V791 = 0x2c6
0x8a1: V792 = GAS
0x8a2: V793 = SUB V792 0x2c6
0x8a3: V794 = CALL V793 V762 0x0 V783 V784 V783 0x20
0x8a4: V795 = ISZERO V794
0x8a5: V796 = ISZERO V795
0x8a6: V797 = 0x8ae
0x8a9: JUMPI 0x8ae V796
---
Entry stack: [V12, 0x178, V160, 0x0, V762, 0x42966c68, V780, 0x20, V783, V784, V783, 0x0, V762]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0, V762, 0x42966c68, V780]

================================

Block 0x8aa
[0x8aa:0x8ad]
---
Predecessors: [0x89d]
Successors: []
---
0x8aa PUSH1 0x0
0x8ac DUP1
0x8ad REVERT
---
0x8aa: V798 = 0x0
0x8ad: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V160, 0x0, V762, 0x42966c68, V780]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0, V762, 0x42966c68, V780]

================================

Block 0x8ae
[0x8ae:0x8bd]
---
Predecessors: [0x89d]
Successors: [0x8be, 0x8c2]
---
0x8ae JUMPDEST
0x8af POP
0x8b0 POP
0x8b1 POP
0x8b2 PUSH1 0x40
0x8b4 MLOAD
0x8b5 DUP1
0x8b6 MLOAD
0x8b7 ISZERO
0x8b8 SWAP1
0x8b9 POP
0x8ba PUSH2 0x8c2
0x8bd JUMPI
---
0x8ae: JUMPDEST 
0x8b2: V799 = 0x40
0x8b4: V800 = M[0x40]
0x8b6: V801 = M[V800]
0x8b7: V802 = ISZERO V801
0x8ba: V803 = 0x8c2
0x8bd: JUMPI 0x8c2 V802
---
Entry stack: [V12, 0x178, V160, 0x0, V762, 0x42966c68, V780]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0]

================================

Block 0x8be
[0x8be:0x8c1]
---
Predecessors: [0x8ae]
Successors: []
---
0x8be PUSH1 0x0
0x8c0 DUP1
0x8c1 REVERT
---
0x8be: V804 = 0x0
0x8c1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V160, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V160, 0x0]

================================

Block 0x8c2
[0x8c2:0x8e9]
---
Predecessors: [0x8ae]
Successors: [0x8ea, 0x8f3]
---
0x8c2 JUMPDEST
0x8c3 POP
0x8c4 PUSH1 0x1
0x8c6 PUSH1 0xa0
0x8c8 PUSH1 0x2
0x8ca EXP
0x8cb SUB
0x8cc CALLER
0x8cd AND
0x8ce PUSH1 0x0
0x8d0 SWAP1
0x8d1 DUP2
0x8d2 MSTORE
0x8d3 PUSH1 0x8
0x8d5 PUSH1 0x20
0x8d7 MSTORE
0x8d8 PUSH1 0x40
0x8da DUP2
0x8db SHA3
0x8dc DUP1
0x8dd SLOAD
0x8de SWAP1
0x8df DUP3
0x8e0 SWAP1
0x8e1 SSTORE
0x8e2 SWAP1
0x8e3 DUP2
0x8e4 GT
0x8e5 ISZERO
0x8e6 PUSH2 0x8f3
0x8e9 JUMPI
---
0x8c2: JUMPDEST 
0x8c4: V805 = 0x1
0x8c6: V806 = 0xa0
0x8c8: V807 = 0x2
0x8ca: V808 = EXP 0x2 0xa0
0x8cb: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8cc: V810 = CALLER
0x8cd: V811 = AND V810 0xffffffffffffffffffffffffffffffffffffffff
0x8ce: V812 = 0x0
0x8d2: M[0x0] = V811
0x8d3: V813 = 0x8
0x8d5: V814 = 0x20
0x8d7: M[0x20] = 0x8
0x8d8: V815 = 0x40
0x8db: V816 = SHA3 0x0 0x40
0x8dd: V817 = S[V816]
0x8e1: S[V816] = 0x0
0x8e4: V818 = GT V817 0x0
0x8e5: V819 = ISZERO V818
0x8e6: V820 = 0x8f3
0x8e9: JUMPI 0x8f3 V819
---
Entry stack: [V12, 0x178, V160, 0x0]
Stack pops: 1
Stack additions: [V817]
Exit stack: [V12, 0x178, V160, V817]

================================

Block 0x8ea
[0x8ea:0x8f2]
---
Predecessors: [0x8c2]
Successors: [0x1056]
---
0x8ea PUSH2 0x8f3
0x8ed CALLER
0x8ee DUP3
0x8ef PUSH2 0x1056
0x8f2 JUMP
---
0x8ea: V821 = 0x8f3
0x8ed: V822 = CALLER
0x8ef: V823 = 0x1056
0x8f2: JUMP 0x1056
---
Entry stack: [V12, 0x178, V160, V817]
Stack pops: 1
Stack additions: [S0, 0x8f3, V822, S0]
Exit stack: [V12, 0x178, V160, V817, 0x8f3, V822, V817]

================================

Block 0x8f3
[0x8f3:0x8f3]
---
Predecessors: [0x8c2, 0xb8e, 0x1037, 0x10af]
Successors: [0x8f4]
---
0x8f3 JUMPDEST
---
0x8f3: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x8f4
[0x8f4:0x8f4]
---
Predecessors: [0x8f3]
Successors: [0x8f5]
---
0x8f4 JUMPDEST
---
0x8f4: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x8f5
[0x8f5:0x8f5]
---
Predecessors: [0x8f4]
Successors: [0x8f6]
---
0x8f5 JUMPDEST
---
0x8f5: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x8f6
[0x8f6:0x8f9]
---
Predecessors: [0x8f5]
Successors: [0x178]
---
0x8f6 JUMPDEST
0x8f7 POP
0x8f8 POP
0x8f9 JUMP
---
0x8f6: JUMPDEST 
0x8f9: JUMP S2
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x8fa
[0x8fa:0x8ff]
---
Predecessors: [0x209]
Successors: [0x190]
---
0x8fa JUMPDEST
0x8fb PUSH1 0x5
0x8fd SLOAD
0x8fe DUP2
0x8ff JUMP
---
0x8fa: JUMPDEST 
0x8fb: V824 = 0x5
0x8fd: V825 = S[0x5]
0x8ff: JUMP 0x190
---
Entry stack: [V12, 0x190]
Stack pops: 1
Stack additions: [S0, V825]
Exit stack: [V12, 0x190, V825]

================================

Block 0x900
[0x900:0x907]
---
Predecessors: [0x22e]
Successors: [0x190]
---
0x900 JUMPDEST
0x901 PUSH4 0x59c05e00
0x906 DUP2
0x907 JUMP
---
0x900: JUMPDEST 
0x901: V826 = 0x59c05e00
0x907: JUMP 0x190
---
Entry stack: [V12, 0x190]
Stack pops: 1
Stack additions: [S0, 0x59c05e00]
Exit stack: [V12, 0x190, 0x59c05e00]

================================

Block 0x908
[0x908:0x91e]
---
Predecessors: [0x253]
Successors: [0x91f, 0x923]
---
0x908 JUMPDEST
0x909 PUSH1 0x0
0x90b SLOAD
0x90c CALLER
0x90d PUSH1 0x1
0x90f PUSH1 0xa0
0x911 PUSH1 0x2
0x913 EXP
0x914 SUB
0x915 SWAP1
0x916 DUP2
0x917 AND
0x918 SWAP2
0x919 AND
0x91a EQ
0x91b PUSH2 0x923
0x91e JUMPI
---
0x908: JUMPDEST 
0x909: V827 = 0x0
0x90b: V828 = S[0x0]
0x90c: V829 = CALLER
0x90d: V830 = 0x1
0x90f: V831 = 0xa0
0x911: V832 = 0x2
0x913: V833 = EXP 0x2 0xa0
0x914: V834 = SUB 0x10000000000000000000000000000000000000000 0x1
0x917: V835 = AND 0xffffffffffffffffffffffffffffffffffffffff V829
0x919: V836 = AND V828 0xffffffffffffffffffffffffffffffffffffffff
0x91a: V837 = EQ V836 V835
0x91b: V838 = 0x923
0x91e: JUMPI 0x923 V837
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x91f
[0x91f:0x922]
---
Predecessors: [0x908]
Successors: []
---
0x91f PUSH1 0x0
0x921 DUP1
0x922 REVERT
---
0x91f: V839 = 0x0
0x922: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x923
[0x923:0x936]
---
Predecessors: [0x908]
Successors: [0x937, 0x93b]
---
0x923 JUMPDEST
0x924 PUSH1 0x0
0x926 SLOAD
0x927 PUSH1 0xa0
0x929 PUSH1 0x2
0x92b EXP
0x92c SWAP1
0x92d DIV
0x92e PUSH1 0xff
0x930 AND
0x931 ISZERO
0x932 ISZERO
0x933 PUSH2 0x93b
0x936 JUMPI
---
0x923: JUMPDEST 
0x924: V840 = 0x0
0x926: V841 = S[0x0]
0x927: V842 = 0xa0
0x929: V843 = 0x2
0x92b: V844 = EXP 0x2 0xa0
0x92d: V845 = DIV V841 0x10000000000000000000000000000000000000000
0x92e: V846 = 0xff
0x930: V847 = AND 0xff V845
0x931: V848 = ISZERO V847
0x932: V849 = ISZERO V848
0x933: V850 = 0x93b
0x936: JUMPI 0x93b V849
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x937
[0x937:0x93a]
---
Predecessors: [0x923]
Successors: []
---
0x937 PUSH1 0x0
0x939 DUP1
0x93a REVERT
---
0x937: V851 = 0x0
0x93a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x93b
[0x93b:0x985]
---
Predecessors: [0x923]
Successors: [0x986]
---
0x93b JUMPDEST
0x93c PUSH1 0x0
0x93e DUP1
0x93f SLOAD
0x940 PUSH21 0xff0000000000000000000000000000000000000000
0x956 NOT
0x957 AND
0x958 SWAP1
0x959 SSTORE
0x95a PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x97b PUSH1 0x40
0x97d MLOAD
0x97e PUSH1 0x40
0x980 MLOAD
0x981 DUP1
0x982 SWAP2
0x983 SUB
0x984 SWAP1
0x985 LOG1
---
0x93b: JUMPDEST 
0x93c: V852 = 0x0
0x93f: V853 = S[0x0]
0x940: V854 = 0xff0000000000000000000000000000000000000000
0x956: V855 = NOT 0xff0000000000000000000000000000000000000000
0x957: V856 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V853
0x959: S[0x0] = V856
0x95a: V857 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x97b: V858 = 0x40
0x97d: V859 = M[0x40]
0x97e: V860 = 0x40
0x980: V861 = M[0x40]
0x983: V862 = SUB V859 V861
0x985: LOG V861 V862 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x986
[0x986:0x986]
---
Predecessors: [0x93b]
Successors: [0x987]
---
0x986 JUMPDEST
---
0x986: JUMPDEST 
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x987
[0x987:0x987]
---
Predecessors: [0x986]
Successors: [0x988]
---
0x987 JUMPDEST
---
0x987: JUMPDEST 
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x988
[0x988:0x989]
---
Predecessors: [0x987]
Successors: [0x178]
---
0x988 JUMPDEST
0x989 JUMP
---
0x988: JUMPDEST 
0x989: JUMP 0x178
---
Entry stack: [V12, 0x178]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x98a
[0x98a:0x9a1]
---
Predecessors: [0x268]
Successors: [0x9a2, 0x9a6]
---
0x98a JUMPDEST
0x98b PUSH1 0x0
0x98d DUP1
0x98e SLOAD
0x98f CALLER
0x990 PUSH1 0x1
0x992 PUSH1 0xa0
0x994 PUSH1 0x2
0x996 EXP
0x997 SUB
0x998 SWAP1
0x999 DUP2
0x99a AND
0x99b SWAP2
0x99c AND
0x99d EQ
0x99e PUSH2 0x9a6
0x9a1 JUMPI
---
0x98a: JUMPDEST 
0x98b: V863 = 0x0
0x98e: V864 = S[0x0]
0x98f: V865 = CALLER
0x990: V866 = 0x1
0x992: V867 = 0xa0
0x994: V868 = 0x2
0x996: V869 = EXP 0x2 0xa0
0x997: V870 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99a: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V865
0x99c: V872 = AND V864 0xffffffffffffffffffffffffffffffffffffffff
0x99d: V873 = EQ V872 V871
0x99e: V874 = 0x9a6
0x9a1: JUMPI 0x9a6 V873
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x178, 0x0]

================================

Block 0x9a2
[0x9a2:0x9a5]
---
Predecessors: [0x98a]
Successors: []
---
0x9a2 PUSH1 0x0
0x9a4 DUP1
0x9a5 REVERT
---
0x9a2: V875 = 0x0
0x9a5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0x9a6
[0x9a6:0x9b2]
---
Predecessors: [0x98a]
Successors: [0x9b3, 0x9ca]
---
0x9a6 JUMPDEST
0x9a7 PUSH4 0x59c05e00
0x9ac TIMESTAMP
0x9ad LT
0x9ae ISZERO
0x9af PUSH2 0x9ca
0x9b2 JUMPI
---
0x9a6: JUMPDEST 
0x9a7: V876 = 0x59c05e00
0x9ac: V877 = TIMESTAMP
0x9ad: V878 = LT V877 0x59c05e00
0x9ae: V879 = ISZERO V878
0x9af: V880 = 0x9ca
0x9b2: JUMPI 0x9ca V879
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0x9b3
[0x9b3:0x9c0]
---
Predecessors: [0x9a6]
Successors: [0x9c1, 0x9c5]
---
0x9b3 PUSH4 0x1dcd6500
0x9b8 PUSH1 0x6
0x9ba SLOAD
0x9bb EQ
0x9bc ISZERO
0x9bd PUSH2 0x9c5
0x9c0 JUMPI
---
0x9b3: V881 = 0x1dcd6500
0x9b8: V882 = 0x6
0x9ba: V883 = S[0x6]
0x9bb: V884 = EQ V883 0x1dcd6500
0x9bc: V885 = ISZERO V884
0x9bd: V886 = 0x9c5
0x9c0: JUMPI 0x9c5 V885
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0x9c1
[0x9c1:0x9c4]
---
Predecessors: [0x9b3]
Successors: [0x9ca]
---
0x9c1 PUSH2 0x9ca
0x9c4 JUMP
---
0x9c1: V887 = 0x9ca
0x9c4: JUMP 0x9ca
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0x9c5
[0x9c5:0x9c9]
---
Predecessors: [0x9b3]
Successors: [0xb29]
---
0x9c5 JUMPDEST
0x9c6 PUSH2 0xb29
0x9c9 JUMP
---
0x9c5: JUMPDEST 
0x9c6: V888 = 0xb29
0x9c9: JUMP 0xb29
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0x9ca
[0x9ca:0x9ca]
---
Predecessors: [0x9a6, 0x9c1]
Successors: [0x9cb]
---
0x9ca JUMPDEST
---
0x9ca: JUMPDEST 
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0x9cb
[0x9cb:0x9d9]
---
Predecessors: [0x9ca]
Successors: [0x9da, 0x9e2]
---
0x9cb JUMPDEST
0x9cc PUSH3 0xf4240
0x9d0 PUSH1 0x6
0x9d2 SLOAD
0x9d3 LT
0x9d4 DUP1
0x9d5 ISZERO
0x9d6 PUSH2 0x9e2
0x9d9 JUMPI
---
0x9cb: JUMPDEST 
0x9cc: V889 = 0xf4240
0x9d0: V890 = 0x6
0x9d2: V891 = S[0x6]
0x9d3: V892 = LT V891 0xf4240
0x9d5: V893 = ISZERO V892
0x9d6: V894 = 0x9e2
0x9d9: JUMPI 0x9e2 V893
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: [V892]
Exit stack: [V12, 0x178, 0x0, V892]

================================

Block 0x9da
[0x9da:0x9e1]
---
Predecessors: [0x9cb]
Successors: [0x9e2]
---
0x9da POP
0x9db PUSH4 0x59d42480
0x9e0 TIMESTAMP
0x9e1 LT
---
0x9db: V895 = 0x59d42480
0x9e0: V896 = TIMESTAMP
0x9e1: V897 = LT V896 0x59d42480
---
Entry stack: [V12, 0x178, 0x0, V892]
Stack pops: 1
Stack additions: [V897]
Exit stack: [V12, 0x178, 0x0, V897]

================================

Block 0x9e2
[0x9e2:0x9e8]
---
Predecessors: [0x9cb, 0x9da]
Successors: [0x9e9, 0x9ed]
---
0x9e2 JUMPDEST
0x9e3 ISZERO
0x9e4 ISZERO
0x9e5 PUSH2 0x9ed
0x9e8 JUMPI
---
0x9e2: JUMPDEST 
0x9e3: V898 = ISZERO S0
0x9e4: V899 = ISZERO V898
0x9e5: V900 = 0x9ed
0x9e8: JUMPI 0x9ed V899
---
Entry stack: [V12, 0x178, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0x9e9
[0x9e9:0x9ec]
---
Predecessors: [0x9e2]
Successors: []
---
0x9e9 PUSH1 0x0
0x9eb DUP1
0x9ec REVERT
---
0x9e9: V901 = 0x0
0x9ec: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0x9ed
[0x9ed:0xa21]
---
Predecessors: [0x9e2]
Successors: [0xa22, 0xa26]
---
0x9ed JUMPDEST
0x9ee PUSH1 0x4
0x9f0 SLOAD
0x9f1 PUSH1 0x1
0x9f3 PUSH1 0xa0
0x9f5 PUSH1 0x2
0x9f7 EXP
0x9f8 SUB
0x9f9 SWAP1
0x9fa DUP2
0x9fb AND
0x9fc SWAP1
0x9fd ADDRESS
0x9fe AND
0x9ff BALANCE
0xa00 DUP1
0xa01 ISZERO
0xa02 PUSH2 0x8fc
0xa05 MUL
0xa06 SWAP1
0xa07 PUSH1 0x40
0xa09 MLOAD
0xa0a PUSH1 0x0
0xa0c PUSH1 0x40
0xa0e MLOAD
0xa0f DUP1
0xa10 DUP4
0xa11 SUB
0xa12 DUP2
0xa13 DUP6
0xa14 DUP9
0xa15 DUP9
0xa16 CALL
0xa17 ISZERO
0xa18 SWAP4
0xa19 POP
0xa1a PUSH2 0xa26
0xa1d SWAP3
0xa1e POP
0xa1f POP
0xa20 POP
0xa21 JUMPI
---
0x9ed: JUMPDEST 
0x9ee: V902 = 0x4
0x9f0: V903 = S[0x4]
0x9f1: V904 = 0x1
0x9f3: V905 = 0xa0
0x9f5: V906 = 0x2
0x9f7: V907 = EXP 0x2 0xa0
0x9f8: V908 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fb: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V903
0x9fd: V910 = ADDRESS
0x9fe: V911 = AND V910 0xffffffffffffffffffffffffffffffffffffffff
0x9ff: V912 = BALANCE V911
0xa01: V913 = ISZERO V912
0xa02: V914 = 0x8fc
0xa05: V915 = MUL 0x8fc V913
0xa07: V916 = 0x40
0xa09: V917 = M[0x40]
0xa0a: V918 = 0x0
0xa0c: V919 = 0x40
0xa0e: V920 = M[0x40]
0xa11: V921 = SUB V917 V920
0xa16: V922 = CALL V915 V909 V912 V920 V921 V920 0x0
0xa17: V923 = ISZERO V922
0xa1a: V924 = 0xa26
0xa21: JUMPI 0xa26 V923
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0xa22
[0xa22:0xa25]
---
Predecessors: [0x9ed]
Successors: []
---
0xa22 PUSH1 0x0
0xa24 DUP1
0xa25 REVERT
---
0xa22: V925 = 0x0
0xa25: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0]

================================

Block 0xa26
[0xa26:0xa7a]
---
Predecessors: [0x9ed]
Successors: [0xa7b, 0xa7f]
---
0xa26 JUMPDEST
0xa27 PUSH1 0x3
0xa29 SLOAD
0xa2a PUSH1 0x1
0xa2c PUSH1 0xa0
0xa2e PUSH1 0x2
0xa30 EXP
0xa31 SUB
0xa32 AND
0xa33 PUSH4 0x70a08231
0xa38 ADDRESS
0xa39 PUSH1 0x0
0xa3b PUSH1 0x40
0xa3d MLOAD
0xa3e PUSH1 0x20
0xa40 ADD
0xa41 MSTORE
0xa42 PUSH1 0x40
0xa44 MLOAD
0xa45 PUSH1 0xe0
0xa47 PUSH1 0x2
0xa49 EXP
0xa4a PUSH4 0xffffffff
0xa4f DUP5
0xa50 AND
0xa51 MUL
0xa52 DUP2
0xa53 MSTORE
0xa54 PUSH1 0x1
0xa56 PUSH1 0xa0
0xa58 PUSH1 0x2
0xa5a EXP
0xa5b SUB
0xa5c SWAP1
0xa5d SWAP2
0xa5e AND
0xa5f PUSH1 0x4
0xa61 DUP3
0xa62 ADD
0xa63 MSTORE
0xa64 PUSH1 0x24
0xa66 ADD
0xa67 PUSH1 0x20
0xa69 PUSH1 0x40
0xa6b MLOAD
0xa6c DUP1
0xa6d DUP4
0xa6e SUB
0xa6f DUP2
0xa70 PUSH1 0x0
0xa72 DUP8
0xa73 DUP1
0xa74 EXTCODESIZE
0xa75 ISZERO
0xa76 ISZERO
0xa77 PUSH2 0xa7f
0xa7a JUMPI
---
0xa26: JUMPDEST 
0xa27: V926 = 0x3
0xa29: V927 = S[0x3]
0xa2a: V928 = 0x1
0xa2c: V929 = 0xa0
0xa2e: V930 = 0x2
0xa30: V931 = EXP 0x2 0xa0
0xa31: V932 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa32: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff V927
0xa33: V934 = 0x70a08231
0xa38: V935 = ADDRESS
0xa39: V936 = 0x0
0xa3b: V937 = 0x40
0xa3d: V938 = M[0x40]
0xa3e: V939 = 0x20
0xa40: V940 = ADD 0x20 V938
0xa41: M[V940] = 0x0
0xa42: V941 = 0x40
0xa44: V942 = M[0x40]
0xa45: V943 = 0xe0
0xa47: V944 = 0x2
0xa49: V945 = EXP 0x2 0xe0
0xa4a: V946 = 0xffffffff
0xa50: V947 = AND 0x70a08231 0xffffffff
0xa51: V948 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xa53: M[V942] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa54: V949 = 0x1
0xa56: V950 = 0xa0
0xa58: V951 = 0x2
0xa5a: V952 = EXP 0x2 0xa0
0xa5b: V953 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5e: V954 = AND V935 0xffffffffffffffffffffffffffffffffffffffff
0xa5f: V955 = 0x4
0xa62: V956 = ADD V942 0x4
0xa63: M[V956] = V954
0xa64: V957 = 0x24
0xa66: V958 = ADD 0x24 V942
0xa67: V959 = 0x20
0xa69: V960 = 0x40
0xa6b: V961 = M[0x40]
0xa6e: V962 = SUB V958 V961
0xa70: V963 = 0x0
0xa74: V964 = EXTCODESIZE V933
0xa75: V965 = ISZERO V964
0xa76: V966 = ISZERO V965
0xa77: V967 = 0xa7f
0xa7a: JUMPI 0xa7f V966
---
Entry stack: [V12, 0x178, 0x0]
Stack pops: 0
Stack additions: [V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]
Exit stack: [V12, 0x178, 0x0, V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]

================================

Block 0xa7b
[0xa7b:0xa7e]
---
Predecessors: [0xa26]
Successors: []
---
0xa7b PUSH1 0x0
0xa7d DUP1
0xa7e REVERT
---
0xa7b: V968 = 0x0
0xa7e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, 0x0, V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0, V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]

================================

Block 0xa7f
[0xa7f:0xa8b]
---
Predecessors: [0xa26]
Successors: [0xa8c, 0xa90]
---
0xa7f JUMPDEST
0xa80 PUSH2 0x2c6
0xa83 GAS
0xa84 SUB
0xa85 CALL
0xa86 ISZERO
0xa87 ISZERO
0xa88 PUSH2 0xa90
0xa8b JUMPI
---
0xa7f: JUMPDEST 
0xa80: V969 = 0x2c6
0xa83: V970 = GAS
0xa84: V971 = SUB V970 0x2c6
0xa85: V972 = CALL V971 V933 0x0 V961 V962 V961 0x20
0xa86: V973 = ISZERO V972
0xa87: V974 = ISZERO V973
0xa88: V975 = 0xa90
0xa8b: JUMPI 0xa90 V974
---
Entry stack: [V12, 0x178, 0x0, V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x178, 0x0, V933, 0x70a08231, V958]

================================

Block 0xa8c
[0xa8c:0xa8f]
---
Predecessors: [0xa7f]
Successors: []
---
0xa8c PUSH1 0x0
0xa8e DUP1
0xa8f REVERT
---
0xa8c: V976 = 0x0
0xa8f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, 0x0, V933, 0x70a08231, V958]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0, V933, 0x70a08231, V958]

================================

Block 0xa90
[0xa90:0xaa4]
---
Predecessors: [0xa7f]
Successors: [0xaa5, 0xb1a]
---
0xa90 JUMPDEST
0xa91 POP
0xa92 POP
0xa93 POP
0xa94 PUSH1 0x40
0xa96 MLOAD
0xa97 DUP1
0xa98 MLOAD
0xa99 SWAP2
0xa9a POP
0xa9b POP
0xa9c PUSH1 0x0
0xa9e DUP2
0xa9f GT
0xaa0 ISZERO
0xaa1 PUSH2 0xb1a
0xaa4 JUMPI
---
0xa90: JUMPDEST 
0xa94: V977 = 0x40
0xa96: V978 = M[0x40]
0xa98: V979 = M[V978]
0xa9c: V980 = 0x0
0xa9f: V981 = GT V979 0x0
0xaa0: V982 = ISZERO V981
0xaa1: V983 = 0xb1a
0xaa4: JUMPI 0xb1a V982
---
Entry stack: [V12, 0x178, 0x0, V933, 0x70a08231, V958]
Stack pops: 4
Stack additions: [V979]
Exit stack: [V12, 0x178, V979]

================================

Block 0xaa5
[0xaa5:0xaf0]
---
Predecessors: [0xa90]
Successors: [0xaf1, 0xaf5]
---
0xaa5 PUSH1 0x3
0xaa7 SLOAD
0xaa8 PUSH1 0x1
0xaaa PUSH1 0xa0
0xaac PUSH1 0x2
0xaae EXP
0xaaf SUB
0xab0 AND
0xab1 PUSH4 0x42966c68
0xab6 DUP3
0xab7 PUSH1 0x0
0xab9 PUSH1 0x40
0xabb MLOAD
0xabc PUSH1 0x20
0xabe ADD
0xabf MSTORE
0xac0 PUSH1 0x40
0xac2 MLOAD
0xac3 PUSH1 0xe0
0xac5 PUSH1 0x2
0xac7 EXP
0xac8 PUSH4 0xffffffff
0xacd DUP5
0xace AND
0xacf MUL
0xad0 DUP2
0xad1 MSTORE
0xad2 PUSH1 0x4
0xad4 DUP2
0xad5 ADD
0xad6 SWAP2
0xad7 SWAP1
0xad8 SWAP2
0xad9 MSTORE
0xada PUSH1 0x24
0xadc ADD
0xadd PUSH1 0x20
0xadf PUSH1 0x40
0xae1 MLOAD
0xae2 DUP1
0xae3 DUP4
0xae4 SUB
0xae5 DUP2
0xae6 PUSH1 0x0
0xae8 DUP8
0xae9 DUP1
0xaea EXTCODESIZE
0xaeb ISZERO
0xaec ISZERO
0xaed PUSH2 0xaf5
0xaf0 JUMPI
---
0xaa5: V984 = 0x3
0xaa7: V985 = S[0x3]
0xaa8: V986 = 0x1
0xaaa: V987 = 0xa0
0xaac: V988 = 0x2
0xaae: V989 = EXP 0x2 0xa0
0xaaf: V990 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab0: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V985
0xab1: V992 = 0x42966c68
0xab7: V993 = 0x0
0xab9: V994 = 0x40
0xabb: V995 = M[0x40]
0xabc: V996 = 0x20
0xabe: V997 = ADD 0x20 V995
0xabf: M[V997] = 0x0
0xac0: V998 = 0x40
0xac2: V999 = M[0x40]
0xac3: V1000 = 0xe0
0xac5: V1001 = 0x2
0xac7: V1002 = EXP 0x2 0xe0
0xac8: V1003 = 0xffffffff
0xace: V1004 = AND 0x42966c68 0xffffffff
0xacf: V1005 = MUL 0x42966c68 0x100000000000000000000000000000000000000000000000000000000
0xad1: M[V999] = 0x42966c6800000000000000000000000000000000000000000000000000000000
0xad2: V1006 = 0x4
0xad5: V1007 = ADD V999 0x4
0xad9: M[V1007] = V979
0xada: V1008 = 0x24
0xadc: V1009 = ADD 0x24 V999
0xadd: V1010 = 0x20
0xadf: V1011 = 0x40
0xae1: V1012 = M[0x40]
0xae4: V1013 = SUB V1009 V1012
0xae6: V1014 = 0x0
0xaea: V1015 = EXTCODESIZE V991
0xaeb: V1016 = ISZERO V1015
0xaec: V1017 = ISZERO V1016
0xaed: V1018 = 0xaf5
0xaf0: JUMPI 0xaf5 V1017
---
Entry stack: [V12, 0x178, V979]
Stack pops: 1
Stack additions: [S0, V991, 0x42966c68, V1009, 0x20, V1012, V1013, V1012, 0x0, V991]
Exit stack: [V12, 0x178, V979, V991, 0x42966c68, V1009, 0x20, V1012, V1013, V1012, 0x0, V991]

================================

Block 0xaf1
[0xaf1:0xaf4]
---
Predecessors: [0xaa5]
Successors: []
---
0xaf1 PUSH1 0x0
0xaf3 DUP1
0xaf4 REVERT
---
0xaf1: V1019 = 0x0
0xaf4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V979, V991, 0x42966c68, V1009, 0x20, V1012, V1013, V1012, 0x0, V991]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V979, V991, 0x42966c68, V1009, 0x20, V1012, V1013, V1012, 0x0, V991]

================================

Block 0xaf5
[0xaf5:0xb01]
---
Predecessors: [0xaa5]
Successors: [0xb02, 0xb06]
---
0xaf5 JUMPDEST
0xaf6 PUSH2 0x2c6
0xaf9 GAS
0xafa SUB
0xafb CALL
0xafc ISZERO
0xafd ISZERO
0xafe PUSH2 0xb06
0xb01 JUMPI
---
0xaf5: JUMPDEST 
0xaf6: V1020 = 0x2c6
0xaf9: V1021 = GAS
0xafa: V1022 = SUB V1021 0x2c6
0xafb: V1023 = CALL V1022 V991 0x0 V1012 V1013 V1012 0x20
0xafc: V1024 = ISZERO V1023
0xafd: V1025 = ISZERO V1024
0xafe: V1026 = 0xb06
0xb01: JUMPI 0xb06 V1025
---
Entry stack: [V12, 0x178, V979, V991, 0x42966c68, V1009, 0x20, V1012, V1013, V1012, 0x0, V991]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x178, V979, V991, 0x42966c68, V1009]

================================

Block 0xb02
[0xb02:0xb05]
---
Predecessors: [0xaf5]
Successors: []
---
0xb02 PUSH1 0x0
0xb04 DUP1
0xb05 REVERT
---
0xb02: V1027 = 0x0
0xb05: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V979, V991, 0x42966c68, V1009]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V979, V991, 0x42966c68, V1009]

================================

Block 0xb06
[0xb06:0xb15]
---
Predecessors: [0xaf5]
Successors: [0xb16, 0xb1a]
---
0xb06 JUMPDEST
0xb07 POP
0xb08 POP
0xb09 POP
0xb0a PUSH1 0x40
0xb0c MLOAD
0xb0d DUP1
0xb0e MLOAD
0xb0f ISZERO
0xb10 SWAP1
0xb11 POP
0xb12 PUSH2 0xb1a
0xb15 JUMPI
---
0xb06: JUMPDEST 
0xb0a: V1028 = 0x40
0xb0c: V1029 = M[0x40]
0xb0e: V1030 = M[V1029]
0xb0f: V1031 = ISZERO V1030
0xb12: V1032 = 0xb1a
0xb15: JUMPI 0xb1a V1031
---
Entry stack: [V12, 0x178, V979, V991, 0x42966c68, V1009]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x178, V979]

================================

Block 0xb16
[0xb16:0xb19]
---
Predecessors: [0xb06]
Successors: []
---
0xb16 PUSH1 0x0
0xb18 DUP1
0xb19 REVERT
---
0xb16: V1033 = 0x0
0xb19: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V979]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V979]

================================

Block 0xb1a
[0xb1a:0xb1a]
---
Predecessors: [0xa90, 0xb06]
Successors: [0xb1b]
---
0xb1a JUMPDEST
---
0xb1a: JUMPDEST 
---
Entry stack: [V12, 0x178, V979]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V979]

================================

Block 0xb1b
[0xb1b:0xb28]
---
Predecessors: [0xb1a]
Successors: [0xb29]
---
0xb1b JUMPDEST
0xb1c PUSH1 0x7
0xb1e DUP1
0xb1f SLOAD
0xb20 PUSH1 0xff
0xb22 NOT
0xb23 AND
0xb24 PUSH1 0x1
0xb26 OR
0xb27 SWAP1
0xb28 SSTORE
---
0xb1b: JUMPDEST 
0xb1c: V1034 = 0x7
0xb1f: V1035 = S[0x7]
0xb20: V1036 = 0xff
0xb22: V1037 = NOT 0xff
0xb23: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1035
0xb24: V1039 = 0x1
0xb26: V1040 = OR 0x1 V1038
0xb28: S[0x7] = V1040
---
Entry stack: [V12, 0x178, V979]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V979]

================================

Block 0xb29
[0xb29:0xb29]
---
Predecessors: [0x9c5, 0xb1b]
Successors: [0xb2a]
---
0xb29 JUMPDEST
---
0xb29: JUMPDEST 
---
Entry stack: [V12, 0x178, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, S0]

================================

Block 0xb2a
[0xb2a:0xb2c]
---
Predecessors: [0xb29]
Successors: [0x178]
---
0xb2a JUMPDEST
0xb2b POP
0xb2c JUMP
---
0xb2a: JUMPDEST 
0xb2c: JUMP 0x178
---
Entry stack: [V12, 0x178, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xb2d
[0xb2d:0xb3c]
---
Predecessors: [0x27d]
Successors: [0x285]
---
0xb2d JUMPDEST
0xb2e PUSH1 0x0
0xb30 SLOAD
0xb31 PUSH1 0xa0
0xb33 PUSH1 0x2
0xb35 EXP
0xb36 SWAP1
0xb37 DIV
0xb38 PUSH1 0xff
0xb3a AND
0xb3b DUP2
0xb3c JUMP
---
0xb2d: JUMPDEST 
0xb2e: V1041 = 0x0
0xb30: V1042 = S[0x0]
0xb31: V1043 = 0xa0
0xb33: V1044 = 0x2
0xb35: V1045 = EXP 0x2 0xa0
0xb37: V1046 = DIV V1042 0x10000000000000000000000000000000000000000
0xb38: V1047 = 0xff
0xb3a: V1048 = AND 0xff V1046
0xb3c: JUMP 0x285
---
Entry stack: [V12, 0x285]
Stack pops: 1
Stack additions: [S0, V1048]
Exit stack: [V12, 0x285, V1048]

================================

Block 0xb3d
[0xb3d:0xb5e]
---
Predecessors: [0x2a4]
Successors: [0xb5f, 0xb63]
---
0xb3d JUMPDEST
0xb3e CALLER
0xb3f PUSH1 0x1
0xb41 PUSH1 0xa0
0xb43 PUSH1 0x2
0xb45 EXP
0xb46 SUB
0xb47 DUP2
0xb48 AND
0xb49 PUSH1 0x0
0xb4b SWAP1
0xb4c DUP2
0xb4d MSTORE
0xb4e PUSH1 0x1
0xb50 PUSH1 0x20
0xb52 MSTORE
0xb53 PUSH1 0x40
0xb55 SWAP1
0xb56 SHA3
0xb57 SLOAD
0xb58 DUP1
0xb59 ISZERO
0xb5a ISZERO
0xb5b PUSH2 0xb63
0xb5e JUMPI
---
0xb3d: JUMPDEST 
0xb3e: V1049 = CALLER
0xb3f: V1050 = 0x1
0xb41: V1051 = 0xa0
0xb43: V1052 = 0x2
0xb45: V1053 = EXP 0x2 0xa0
0xb46: V1054 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb48: V1055 = AND V1049 0xffffffffffffffffffffffffffffffffffffffff
0xb49: V1056 = 0x0
0xb4d: M[0x0] = V1055
0xb4e: V1057 = 0x1
0xb50: V1058 = 0x20
0xb52: M[0x20] = 0x1
0xb53: V1059 = 0x40
0xb56: V1060 = SHA3 0x0 0x40
0xb57: V1061 = S[V1060]
0xb59: V1062 = ISZERO V1061
0xb5a: V1063 = ISZERO V1062
0xb5b: V1064 = 0xb63
0xb5e: JUMPI 0xb63 V1063
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: [V1049, V1061]
Exit stack: [V12, 0x178, V1049, V1061]

================================

Block 0xb5f
[0xb5f:0xb62]
---
Predecessors: [0xb3d]
Successors: []
---
0xb5f PUSH1 0x0
0xb61 DUP1
0xb62 REVERT
---
0xb5f: V1065 = 0x0
0xb62: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V1049, V1061]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V1049, V1061]

================================

Block 0xb63
[0xb63:0xb76]
---
Predecessors: [0xb3d]
Successors: [0xb77, 0xb7b]
---
0xb63 JUMPDEST
0xb64 PUSH1 0x1
0xb66 PUSH1 0xa0
0xb68 PUSH1 0x2
0xb6a EXP
0xb6b SUB
0xb6c ADDRESS
0xb6d AND
0xb6e BALANCE
0xb6f DUP2
0xb70 SWAP1
0xb71 LT
0xb72 ISZERO
0xb73 PUSH2 0xb7b
0xb76 JUMPI
---
0xb63: JUMPDEST 
0xb64: V1066 = 0x1
0xb66: V1067 = 0xa0
0xb68: V1068 = 0x2
0xb6a: V1069 = EXP 0x2 0xa0
0xb6b: V1070 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6c: V1071 = ADDRESS
0xb6d: V1072 = AND V1071 0xffffffffffffffffffffffffffffffffffffffff
0xb6e: V1073 = BALANCE V1072
0xb71: V1074 = LT V1073 V1061
0xb72: V1075 = ISZERO V1074
0xb73: V1076 = 0xb7b
0xb76: JUMPI 0xb7b V1075
---
Entry stack: [V12, 0x178, V1049, V1061]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x178, V1049, V1061]

================================

Block 0xb77
[0xb77:0xb7a]
---
Predecessors: [0xb63]
Successors: []
---
0xb77 PUSH1 0x0
0xb79 DUP1
0xb7a REVERT
---
0xb77: V1077 = 0x0
0xb7a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V1049, V1061]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V1049, V1061]

================================

Block 0xb7b
[0xb7b:0xb8d]
---
Predecessors: [0xb63]
Successors: [0x10b3]
---
0xb7b JUMPDEST
0xb7c PUSH1 0x2
0xb7e SLOAD
0xb7f PUSH2 0xb8e
0xb82 SWAP1
0xb83 DUP3
0xb84 PUSH4 0xffffffff
0xb89 PUSH2 0x10b3
0xb8c AND
0xb8d JUMP
---
0xb7b: JUMPDEST 
0xb7c: V1078 = 0x2
0xb7e: V1079 = S[0x2]
0xb7f: V1080 = 0xb8e
0xb84: V1081 = 0xffffffff
0xb89: V1082 = 0x10b3
0xb8c: V1083 = AND 0x10b3 0xffffffff
0xb8d: JUMP 0x10b3
---
Entry stack: [V12, 0x178, V1049, V1061]
Stack pops: 1
Stack additions: [S0, 0xb8e, V1079, S0]
Exit stack: [V12, 0x178, V1049, V1061, 0xb8e, V1079, V1061]

================================

Block 0xb8e
[0xb8e:0xbd0]
---
Predecessors: [0x10c4]
Successors: [0x8f3, 0xbd1]
---
0xb8e JUMPDEST
0xb8f PUSH1 0x2
0xb91 SSTORE
0xb92 PUSH1 0x1
0xb94 PUSH1 0xa0
0xb96 PUSH1 0x2
0xb98 EXP
0xb99 SUB
0xb9a DUP3
0xb9b AND
0xb9c PUSH1 0x0
0xb9e DUP2
0xb9f DUP2
0xba0 MSTORE
0xba1 PUSH1 0x1
0xba3 PUSH1 0x20
0xba5 MSTORE
0xba6 PUSH1 0x40
0xba8 DUP1
0xba9 DUP3
0xbaa SHA3
0xbab SWAP2
0xbac SWAP1
0xbad SWAP2
0xbae SSTORE
0xbaf DUP3
0xbb0 ISZERO
0xbb1 PUSH2 0x8fc
0xbb4 MUL
0xbb5 SWAP1
0xbb6 DUP4
0xbb7 SWAP1
0xbb8 MLOAD
0xbb9 PUSH1 0x0
0xbbb PUSH1 0x40
0xbbd MLOAD
0xbbe DUP1
0xbbf DUP4
0xbc0 SUB
0xbc1 DUP2
0xbc2 DUP6
0xbc3 DUP9
0xbc4 DUP9
0xbc5 CALL
0xbc6 SWAP4
0xbc7 POP
0xbc8 POP
0xbc9 POP
0xbca POP
0xbcb ISZERO
0xbcc ISZERO
0xbcd PUSH2 0x8f3
0xbd0 JUMPI
---
0xb8e: JUMPDEST 
0xb8f: V1084 = 0x2
0xb91: S[0x2] = V1519
0xb92: V1085 = 0x1
0xb94: V1086 = 0xa0
0xb96: V1087 = 0x2
0xb98: V1088 = EXP 0x2 0xa0
0xb99: V1089 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9b: V1090 = AND V1049 0xffffffffffffffffffffffffffffffffffffffff
0xb9c: V1091 = 0x0
0xba0: M[0x0] = V1090
0xba1: V1092 = 0x1
0xba3: V1093 = 0x20
0xba5: M[0x20] = 0x1
0xba6: V1094 = 0x40
0xbaa: V1095 = SHA3 0x0 0x40
0xbae: S[V1095] = 0x0
0xbb0: V1096 = ISZERO V1061
0xbb1: V1097 = 0x8fc
0xbb4: V1098 = MUL 0x8fc V1096
0xbb8: V1099 = M[0x40]
0xbb9: V1100 = 0x0
0xbbb: V1101 = 0x40
0xbbd: V1102 = M[0x40]
0xbc0: V1103 = SUB V1099 V1102
0xbc5: V1104 = CALL V1098 V1090 V1061 V1102 V1103 V1102 0x0
0xbcb: V1105 = ISZERO V1104
0xbcc: V1106 = ISZERO V1105
0xbcd: V1107 = 0x8f3
0xbd0: JUMPI 0x8f3 V1106
---
Entry stack: [V12, 0x178, V1049, V1061, V1519]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V12, 0x178, V1049, V1061]

================================

Block 0xbd1
[0xbd1:0xbd1]
---
Predecessors: [0xb8e]
Successors: []
---
0xbd1 INVALID
---
0xbd1: INVALID 
---
Entry stack: [V12, 0x178, V1049, V1061]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V1049, V1061]

================================

Block 0xbd2
[0xbd2:0xbd2]
---
Predecessors: []
Successors: [0xbd3]
---
0xbd2 JUMPDEST
---
0xbd2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbd3
[0xbd3:0xbd6]
---
Predecessors: [0xbd2]
Successors: []
Has unresolved jump.
---
0xbd3 JUMPDEST
0xbd4 POP
0xbd5 POP
0xbd6 JUMP
---
0xbd3: JUMPDEST 
0xbd6: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xbd7
[0xbd7:0xbe1]
---
Predecessors: [0x2b9]
Successors: [0x190]
---
0xbd7 JUMPDEST
0xbd8 PUSH7 0x38d7ea4c68000
0xbe0 DUP2
0xbe1 JUMP
---
0xbd7: JUMPDEST 
0xbd8: V1108 = 0x38d7ea4c68000
0xbe1: JUMP 0x190
---
Entry stack: [V12, 0x190]
Stack pops: 1
Stack additions: [S0, 0x38d7ea4c68000]
Exit stack: [V12, 0x190, 0x38d7ea4c68000]

================================

Block 0xbe2
[0xbe2:0xbe9]
---
Predecessors: [0x2de]
Successors: [0x190]
---
0xbe2 JUMPDEST
0xbe3 PUSH4 0x599b7400
0xbe8 DUP2
0xbe9 JUMP
---
0xbe2: JUMPDEST 
0xbe3: V1109 = 0x599b7400
0xbe9: JUMP 0x190
---
Entry stack: [V12, 0x190]
Stack pops: 1
Stack additions: [S0, 0x599b7400]
Exit stack: [V12, 0x190, 0x599b7400]

================================

Block 0xbea
[0xbea:0xbf0]
---
Predecessors: [0x303]
Successors: [0x190]
---
0xbea JUMPDEST
0xbeb PUSH3 0xf4240
0xbef DUP2
0xbf0 JUMP
---
0xbea: JUMPDEST 
0xbeb: V1110 = 0xf4240
0xbf0: JUMP 0x190
---
Entry stack: [V12, 0x190]
Stack pops: 1
Stack additions: [S0, 0xf4240]
Exit stack: [V12, 0x190, 0xf4240]

================================

Block 0xbf1
[0xbf1:0xc07]
---
Predecessors: [0x328]
Successors: [0xc08, 0xc0c]
---
0xbf1 JUMPDEST
0xbf2 PUSH1 0x0
0xbf4 SLOAD
0xbf5 CALLER
0xbf6 PUSH1 0x1
0xbf8 PUSH1 0xa0
0xbfa PUSH1 0x2
0xbfc EXP
0xbfd SUB
0xbfe SWAP1
0xbff DUP2
0xc00 AND
0xc01 SWAP2
0xc02 AND
0xc03 EQ
0xc04 PUSH2 0xc0c
0xc07 JUMPI
---
0xbf1: JUMPDEST 
0xbf2: V1111 = 0x0
0xbf4: V1112 = S[0x0]
0xbf5: V1113 = CALLER
0xbf6: V1114 = 0x1
0xbf8: V1115 = 0xa0
0xbfa: V1116 = 0x2
0xbfc: V1117 = EXP 0x2 0xa0
0xbfd: V1118 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc00: V1119 = AND 0xffffffffffffffffffffffffffffffffffffffff V1113
0xc02: V1120 = AND V1112 0xffffffffffffffffffffffffffffffffffffffff
0xc03: V1121 = EQ V1120 V1119
0xc04: V1122 = 0xc0c
0xc07: JUMPI 0xc0c V1121
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xc08
[0xc08:0xc0b]
---
Predecessors: [0xbf1]
Successors: []
---
0xc08 PUSH1 0x0
0xc0a DUP1
0xc0b REVERT
---
0xc08: V1123 = 0x0
0xc0b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xc0c
[0xc0c:0xc1e]
---
Predecessors: [0xbf1]
Successors: [0xc1f, 0xc23]
---
0xc0c JUMPDEST
0xc0d PUSH1 0x0
0xc0f SLOAD
0xc10 PUSH1 0xa0
0xc12 PUSH1 0x2
0xc14 EXP
0xc15 SWAP1
0xc16 DIV
0xc17 PUSH1 0xff
0xc19 AND
0xc1a ISZERO
0xc1b PUSH2 0xc23
0xc1e JUMPI
---
0xc0c: JUMPDEST 
0xc0d: V1124 = 0x0
0xc0f: V1125 = S[0x0]
0xc10: V1126 = 0xa0
0xc12: V1127 = 0x2
0xc14: V1128 = EXP 0x2 0xa0
0xc16: V1129 = DIV V1125 0x10000000000000000000000000000000000000000
0xc17: V1130 = 0xff
0xc19: V1131 = AND 0xff V1129
0xc1a: V1132 = ISZERO V1131
0xc1b: V1133 = 0xc23
0xc1e: JUMPI 0xc23 V1132
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xc1f
[0xc1f:0xc22]
---
Predecessors: [0xc0c]
Successors: []
---
0xc1f PUSH1 0x0
0xc21 DUP1
0xc22 REVERT
---
0xc1f: V1134 = 0x0
0xc22: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xc23
[0xc23:0xc73]
---
Predecessors: [0xc0c]
Successors: [0xc74]
---
0xc23 JUMPDEST
0xc24 PUSH1 0x0
0xc26 DUP1
0xc27 SLOAD
0xc28 PUSH21 0xff0000000000000000000000000000000000000000
0xc3e NOT
0xc3f AND
0xc40 PUSH1 0xa0
0xc42 PUSH1 0x2
0xc44 EXP
0xc45 OR
0xc46 SWAP1
0xc47 SSTORE
0xc48 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0xc69 PUSH1 0x40
0xc6b MLOAD
0xc6c PUSH1 0x40
0xc6e MLOAD
0xc6f DUP1
0xc70 SWAP2
0xc71 SUB
0xc72 SWAP1
0xc73 LOG1
---
0xc23: JUMPDEST 
0xc24: V1135 = 0x0
0xc27: V1136 = S[0x0]
0xc28: V1137 = 0xff0000000000000000000000000000000000000000
0xc3e: V1138 = NOT 0xff0000000000000000000000000000000000000000
0xc3f: V1139 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1136
0xc40: V1140 = 0xa0
0xc42: V1141 = 0x2
0xc44: V1142 = EXP 0x2 0xa0
0xc45: V1143 = OR 0x10000000000000000000000000000000000000000 V1139
0xc47: S[0x0] = V1143
0xc48: V1144 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0xc69: V1145 = 0x40
0xc6b: V1146 = M[0x40]
0xc6c: V1147 = 0x40
0xc6e: V1148 = M[0x40]
0xc71: V1149 = SUB V1146 V1148
0xc73: LOG V1148 V1149 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xc74
[0xc74:0xc74]
---
Predecessors: [0xc23]
Successors: [0xc75]
---
0xc74 JUMPDEST
---
0xc74: JUMPDEST 
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xc75
[0xc75:0xc75]
---
Predecessors: [0xc74]
Successors: [0xc76]
---
0xc75 JUMPDEST
---
0xc75: JUMPDEST 
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xc76
[0xc76:0xc77]
---
Predecessors: [0xc75]
Successors: [0x178]
---
0xc76 JUMPDEST
0xc77 JUMP
---
0xc76: JUMPDEST 
0xc77: JUMP 0x178
---
Entry stack: [V12, 0x178]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc78
[0xc78:0xc86]
---
Predecessors: [0x33d]
Successors: [0x1b5]
---
0xc78 JUMPDEST
0xc79 PUSH1 0x0
0xc7b SLOAD
0xc7c PUSH1 0x1
0xc7e PUSH1 0xa0
0xc80 PUSH1 0x2
0xc82 EXP
0xc83 SUB
0xc84 AND
0xc85 DUP2
0xc86 JUMP
---
0xc78: JUMPDEST 
0xc79: V1150 = 0x0
0xc7b: V1151 = S[0x0]
0xc7c: V1152 = 0x1
0xc7e: V1153 = 0xa0
0xc80: V1154 = 0x2
0xc82: V1155 = EXP 0x2 0xa0
0xc83: V1156 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc84: V1157 = AND 0xffffffffffffffffffffffffffffffffffffffff V1151
0xc86: JUMP 0x1b5
---
Entry stack: [V12, 0x1b5]
Stack pops: 1
Stack additions: [S0, V1157]
Exit stack: [V12, 0x1b5, V1157]

================================

Block 0xc87
[0xc87:0xc8c]
---
Predecessors: [0x36c]
Successors: [0x190]
---
0xc87 JUMPDEST
0xc88 PUSH1 0x6
0xc8a SLOAD
0xc8b DUP2
0xc8c JUMP
---
0xc87: JUMPDEST 
0xc88: V1158 = 0x6
0xc8a: V1159 = S[0x6]
0xc8c: JUMP 0x190
---
Entry stack: [V12, 0x190]
Stack pops: 1
Stack additions: [S0, V1159]
Exit stack: [V12, 0x190, V1159]

================================

Block 0xc8d
[0xc8d:0xca3]
---
Predecessors: [0x391]
Successors: [0xca4, 0xca8]
---
0xc8d JUMPDEST
0xc8e PUSH1 0x0
0xc90 SLOAD
0xc91 CALLER
0xc92 PUSH1 0x1
0xc94 PUSH1 0xa0
0xc96 PUSH1 0x2
0xc98 EXP
0xc99 SUB
0xc9a SWAP1
0xc9b DUP2
0xc9c AND
0xc9d SWAP2
0xc9e AND
0xc9f EQ
0xca0 PUSH2 0xca8
0xca3 JUMPI
---
0xc8d: JUMPDEST 
0xc8e: V1160 = 0x0
0xc90: V1161 = S[0x0]
0xc91: V1162 = CALLER
0xc92: V1163 = 0x1
0xc94: V1164 = 0xa0
0xc96: V1165 = 0x2
0xc98: V1166 = EXP 0x2 0xa0
0xc99: V1167 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9c: V1168 = AND 0xffffffffffffffffffffffffffffffffffffffff V1162
0xc9e: V1169 = AND V1161 0xffffffffffffffffffffffffffffffffffffffff
0xc9f: V1170 = EQ V1169 V1168
0xca0: V1171 = 0xca8
0xca3: JUMPI 0xca8 V1170
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xca4
[0xca4:0xca7]
---
Predecessors: [0xc8d]
Successors: []
---
0xca4 PUSH1 0x0
0xca6 DUP1
0xca7 REVERT
---
0xca4: V1172 = 0x0
0xca7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xca8
[0xca8:0xcdc]
---
Predecessors: [0xc8d]
Successors: [0x776, 0xcdd]
---
0xca8 JUMPDEST
0xca9 PUSH1 0x0
0xcab SLOAD
0xcac PUSH1 0x1
0xcae PUSH1 0xa0
0xcb0 PUSH1 0x2
0xcb2 EXP
0xcb3 SUB
0xcb4 SWAP1
0xcb5 DUP2
0xcb6 AND
0xcb7 SWAP1
0xcb8 ADDRESS
0xcb9 AND
0xcba BALANCE
0xcbb DUP1
0xcbc ISZERO
0xcbd PUSH2 0x8fc
0xcc0 MUL
0xcc1 SWAP1
0xcc2 PUSH1 0x40
0xcc4 MLOAD
0xcc5 PUSH1 0x0
0xcc7 PUSH1 0x40
0xcc9 MLOAD
0xcca DUP1
0xccb DUP4
0xccc SUB
0xccd DUP2
0xcce DUP6
0xccf DUP9
0xcd0 DUP9
0xcd1 CALL
0xcd2 ISZERO
0xcd3 SWAP4
0xcd4 POP
0xcd5 PUSH2 0x776
0xcd8 SWAP3
0xcd9 POP
0xcda POP
0xcdb POP
0xcdc JUMPI
---
0xca8: JUMPDEST 
0xca9: V1173 = 0x0
0xcab: V1174 = S[0x0]
0xcac: V1175 = 0x1
0xcae: V1176 = 0xa0
0xcb0: V1177 = 0x2
0xcb2: V1178 = EXP 0x2 0xa0
0xcb3: V1179 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb6: V1180 = AND 0xffffffffffffffffffffffffffffffffffffffff V1174
0xcb8: V1181 = ADDRESS
0xcb9: V1182 = AND V1181 0xffffffffffffffffffffffffffffffffffffffff
0xcba: V1183 = BALANCE V1182
0xcbc: V1184 = ISZERO V1183
0xcbd: V1185 = 0x8fc
0xcc0: V1186 = MUL 0x8fc V1184
0xcc2: V1187 = 0x40
0xcc4: V1188 = M[0x40]
0xcc5: V1189 = 0x0
0xcc7: V1190 = 0x40
0xcc9: V1191 = M[0x40]
0xccc: V1192 = SUB V1188 V1191
0xcd1: V1193 = CALL V1186 V1180 V1183 V1191 V1192 V1191 0x0
0xcd2: V1194 = ISZERO V1193
0xcd5: V1195 = 0x776
0xcdc: JUMPI 0x776 V1194
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xcdd
[0xcdd:0xce0]
---
Predecessors: [0xca8]
Successors: []
---
0xcdd PUSH1 0x0
0xcdf DUP1
0xce0 REVERT
---
0xcdd: V1196 = 0x0
0xce0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0xce1
[0xce1:0xce1]
---
Predecessors: []
Successors: [0xce2]
---
0xce1 JUMPDEST
---
0xce1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce2
[0xce2:0xce2]
---
Predecessors: [0xce1]
Successors: [0xce3]
---
0xce2 JUMPDEST
---
0xce2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce3
[0xce3:0xce4]
---
Predecessors: [0xce2]
Successors: []
Has unresolved jump.
---
0xce3 JUMPDEST
0xce4 JUMP
---
0xce3: JUMPDEST 
0xce4: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xce5
[0xce5:0xcea]
---
Predecessors: [0x3a6]
Successors: [0x190]
---
0xce5 JUMPDEST
0xce6 PUSH2 0x280
0xce9 DUP2
0xcea JUMP
---
0xce5: JUMPDEST 
0xce6: V1197 = 0x280
0xcea: JUMP 0x190
---
Entry stack: [V12, 0x190]
Stack pops: 1
Stack additions: [S0, 0x280]
Exit stack: [V12, 0x190, 0x280]

================================

Block 0xceb
[0xceb:0xd03]
---
Predecessors: [0x3cb]
Successors: [0x3df]
---
0xceb JUMPDEST
0xcec PUSH1 0x8
0xcee PUSH1 0x20
0xcf0 MSTORE
0xcf1 PUSH1 0x0
0xcf3 SWAP1
0xcf4 DUP2
0xcf5 MSTORE
0xcf6 PUSH1 0x40
0xcf8 SWAP1
0xcf9 SHA3
0xcfa DUP1
0xcfb SLOAD
0xcfc PUSH1 0x1
0xcfe SWAP1
0xcff SWAP2
0xd00 ADD
0xd01 SLOAD
0xd02 DUP3
0xd03 JUMP
---
0xceb: JUMPDEST 
0xcec: V1198 = 0x8
0xcee: V1199 = 0x20
0xcf0: M[0x20] = 0x8
0xcf1: V1200 = 0x0
0xcf5: M[0x0] = V329
0xcf6: V1201 = 0x40
0xcf9: V1202 = SHA3 0x0 0x40
0xcfb: V1203 = S[V1202]
0xcfc: V1204 = 0x1
0xd00: V1205 = ADD V1202 0x1
0xd01: V1206 = S[V1205]
0xd03: JUMP 0x3df
---
Entry stack: [V12, 0x3df, V329]
Stack pops: 2
Stack additions: [S1, V1203, V1206]
Exit stack: [V12, 0x3df, V1203, V1206]

================================

Block 0xd04
[0xd04:0xd0c]
---
Predecessors: [0x402]
Successors: [0x285]
---
0xd04 JUMPDEST
0xd05 PUSH1 0x7
0xd07 SLOAD
0xd08 PUSH1 0xff
0xd0a AND
0xd0b DUP2
0xd0c JUMP
---
0xd04: JUMPDEST 
0xd05: V1207 = 0x7
0xd07: V1208 = S[0x7]
0xd08: V1209 = 0xff
0xd0a: V1210 = AND 0xff V1208
0xd0c: JUMP 0x285
---
Entry stack: [V12, 0x285]
Stack pops: 1
Stack additions: [S0, V1210]
Exit stack: [V12, 0x285, V1210]

================================

Block 0xd0d
[0xd0d:0xd1b]
---
Predecessors: [0x429]
Successors: [0x1b5]
---
0xd0d JUMPDEST
0xd0e PUSH1 0x4
0xd10 SLOAD
0xd11 PUSH1 0x1
0xd13 PUSH1 0xa0
0xd15 PUSH1 0x2
0xd17 EXP
0xd18 SUB
0xd19 AND
0xd1a DUP2
0xd1b JUMP
---
0xd0d: JUMPDEST 
0xd0e: V1211 = 0x4
0xd10: V1212 = S[0x4]
0xd11: V1213 = 0x1
0xd13: V1214 = 0xa0
0xd15: V1215 = 0x2
0xd17: V1216 = EXP 0x2 0xa0
0xd18: V1217 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd19: V1218 = AND 0xffffffffffffffffffffffffffffffffffffffff V1212
0xd1b: JUMP 0x1b5
---
Entry stack: [V12, 0x1b5]
Stack pops: 1
Stack additions: [S0, V1218]
Exit stack: [V12, 0x1b5, V1218]

================================

Block 0xd1c
[0xd1c:0xd23]
---
Predecessors: [0x458]
Successors: [0x190]
---
0xd1c JUMPDEST
0xd1d PUSH4 0x1dcd6500
0xd22 DUP2
0xd23 JUMP
---
0xd1c: JUMPDEST 
0xd1d: V1219 = 0x1dcd6500
0xd23: JUMP 0x190
---
Entry stack: [V12, 0x190]
Stack pops: 1
Stack additions: [S0, 0x1dcd6500]
Exit stack: [V12, 0x190, 0x1dcd6500]

================================

Block 0xd24
[0xd24:0xd3f]
---
Predecessors: [0x47d]
Successors: [0xd40, 0xd44]
---
0xd24 JUMPDEST
0xd25 PUSH1 0x0
0xd27 DUP1
0xd28 SLOAD
0xd29 DUP2
0xd2a SWAP1
0xd2b DUP2
0xd2c SWAP1
0xd2d CALLER
0xd2e PUSH1 0x1
0xd30 PUSH1 0xa0
0xd32 PUSH1 0x2
0xd34 EXP
0xd35 SUB
0xd36 SWAP1
0xd37 DUP2
0xd38 AND
0xd39 SWAP2
0xd3a AND
0xd3b EQ
0xd3c PUSH2 0xd44
0xd3f JUMPI
---
0xd24: JUMPDEST 
0xd25: V1220 = 0x0
0xd28: V1221 = S[0x0]
0xd2d: V1222 = CALLER
0xd2e: V1223 = 0x1
0xd30: V1224 = 0xa0
0xd32: V1225 = 0x2
0xd34: V1226 = EXP 0x2 0xa0
0xd35: V1227 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd38: V1228 = AND 0xffffffffffffffffffffffffffffffffffffffff V1222
0xd3a: V1229 = AND V1221 0xffffffffffffffffffffffffffffffffffffffff
0xd3b: V1230 = EQ V1229 V1228
0xd3c: V1231 = 0xd44
0xd3f: JUMPI 0xd44 V1230
---
Entry stack: [V12, 0x178]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x178, 0x0, 0x0, 0x0]

================================

Block 0xd40
[0xd40:0xd43]
---
Predecessors: [0xd24]
Successors: []
---
0xd40 PUSH1 0x0
0xd42 DUP1
0xd43 REVERT
---
0xd40: V1232 = 0x0
0xd43: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, 0x0, 0x0, 0x0]

================================

Block 0xd44
[0xd44:0xd73]
---
Predecessors: [0xd24]
Successors: [0xfb5]
---
0xd44 JUMPDEST
0xd45 PUSH1 0x6
0xd47 SLOAD
0xd48 PUSH4 0x1dcd6500
0xd4d SUB
0xd4e SWAP3
0xd4f POP
0xd50 PUSH2 0xd83
0xd53 PUSH8 0xde0b6b3a7640000
0xd5c PUSH2 0xd74
0xd5f PUSH7 0x38d7ea4c68000
0xd67 PUSH2 0x280
0xd6a PUSH4 0xffffffff
0xd6f PUSH2 0xfb5
0xd72 AND
0xd73 JUMP
---
0xd44: JUMPDEST 
0xd45: V1233 = 0x6
0xd47: V1234 = S[0x6]
0xd48: V1235 = 0x1dcd6500
0xd4d: V1236 = SUB 0x1dcd6500 V1234
0xd50: V1237 = 0xd83
0xd53: V1238 = 0xde0b6b3a7640000
0xd5c: V1239 = 0xd74
0xd5f: V1240 = 0x38d7ea4c68000
0xd67: V1241 = 0x280
0xd6a: V1242 = 0xffffffff
0xd6f: V1243 = 0xfb5
0xd72: V1244 = AND 0xfb5 0xffffffff
0xd73: JUMP 0xfb5
---
Entry stack: [V12, 0x178, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V1236, S1, S0, 0xd83, 0xde0b6b3a7640000, 0xd74, 0x38d7ea4c68000, 0x280]
Exit stack: [V12, 0x178, V1236, 0x0, 0x0, 0xd83, 0xde0b6b3a7640000, 0xd74, 0x38d7ea4c68000, 0x280]

================================

Block 0xd74
[0xd74:0xd7b]
---
Predecessors: [0xfdd]
Successors: [0xd7c, 0xd7d]
---
0xd74 JUMPDEST
0xd75 DUP2
0xd76 ISZERO
0xd77 ISZERO
0xd78 PUSH2 0xd7d
0xd7b JUMPI
---
0xd74: JUMPDEST 
0xd76: V1245 = ISZERO S1
0xd77: V1246 = ISZERO V1245
0xd78: V1247 = 0xd7d
0xd7b: JUMPI 0xd7d V1246
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd7c
[0xd7c:0xd7c]
---
Predecessors: [0xd74]
Successors: []
---
0xd7c INVALID
---
0xd7c: INVALID 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd7d
[0xd7d:0xd82]
---
Predecessors: [0xd74]
Successors: [0x1000]
---
0xd7d JUMPDEST
0xd7e DIV
0xd7f PUSH2 0x1000
0xd82 JUMP
---
0xd7d: JUMPDEST 
0xd7e: V1248 = DIV S0 S1
0xd7f: V1249 = 0x1000
0xd82: JUMP 0x1000
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V1248]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, V1248]

================================

Block 0xd83
[0xd83:0xd8c]
---
Predecessors: [0xff9, 0x1037, 0x10af]
Successors: [0xd8d, 0xd91]
---
0xd83 JUMPDEST
0xd84 SWAP2
0xd85 POP
0xd86 DUP2
0xd87 DUP4
0xd88 GT
0xd89 PUSH2 0xd91
0xd8c JUMPI
---
0xd83: JUMPDEST 
0xd88: V1250 = GT S3 S0
0xd89: V1251 = 0xd91
0xd8c: JUMPI 0xd91 V1250
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S0, S1]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S0, S1]

================================

Block 0xd8d
[0xd8d:0xd90]
---
Predecessors: [0xd83]
Successors: []
---
0xd8d PUSH1 0x0
0xd8f DUP1
0xd90 REVERT
---
0xd8d: V1252 = 0x0
0xd90: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd91
[0xd91:0xe03]
---
Predecessors: [0xd83]
Successors: [0xe04, 0xe08]
---
0xd91 JUMPDEST
0xd92 POP
0xd93 PUSH1 0x0
0xd95 DUP1
0xd96 SLOAD
0xd97 PUSH1 0x1
0xd99 PUSH1 0xa0
0xd9b PUSH1 0x2
0xd9d EXP
0xd9e SUB
0xd9f SWAP1
0xda0 DUP2
0xda1 AND
0xda2 DUP1
0xda3 DUP4
0xda4 MSTORE
0xda5 PUSH1 0x8
0xda7 PUSH1 0x20
0xda9 MSTORE
0xdaa PUSH1 0x40
0xdac DUP1
0xdad DUP5
0xdae SHA3
0xdaf PUSH1 0x3
0xdb1 SLOAD
0xdb2 SWAP1
0xdb3 SWAP5
0xdb4 SWAP4
0xdb5 AND
0xdb6 SWAP3
0xdb7 PUSH4 0xa9059cbb
0xdbc SWAP3
0xdbd SWAP2
0xdbe DUP8
0xdbf SWAP2
0xdc0 SWAP1
0xdc1 MLOAD
0xdc2 PUSH1 0x20
0xdc4 ADD
0xdc5 MSTORE
0xdc6 PUSH1 0x40
0xdc8 MLOAD
0xdc9 PUSH1 0xe0
0xdcb PUSH1 0x2
0xdcd EXP
0xdce PUSH4 0xffffffff
0xdd3 DUP6
0xdd4 AND
0xdd5 MUL
0xdd6 DUP2
0xdd7 MSTORE
0xdd8 PUSH1 0x1
0xdda PUSH1 0xa0
0xddc PUSH1 0x2
0xdde EXP
0xddf SUB
0xde0 SWAP1
0xde1 SWAP3
0xde2 AND
0xde3 PUSH1 0x4
0xde5 DUP4
0xde6 ADD
0xde7 MSTORE
0xde8 PUSH1 0x24
0xdea DUP3
0xdeb ADD
0xdec MSTORE
0xded PUSH1 0x44
0xdef ADD
0xdf0 PUSH1 0x20
0xdf2 PUSH1 0x40
0xdf4 MLOAD
0xdf5 DUP1
0xdf6 DUP4
0xdf7 SUB
0xdf8 DUP2
0xdf9 PUSH1 0x0
0xdfb DUP8
0xdfc DUP1
0xdfd EXTCODESIZE
0xdfe ISZERO
0xdff ISZERO
0xe00 PUSH2 0xe08
0xe03 JUMPI
---
0xd91: JUMPDEST 
0xd93: V1253 = 0x0
0xd96: V1254 = S[0x0]
0xd97: V1255 = 0x1
0xd99: V1256 = 0xa0
0xd9b: V1257 = 0x2
0xd9d: V1258 = EXP 0x2 0xa0
0xd9e: V1259 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda1: V1260 = AND 0xffffffffffffffffffffffffffffffffffffffff V1254
0xda4: M[0x0] = V1260
0xda5: V1261 = 0x8
0xda7: V1262 = 0x20
0xda9: M[0x20] = 0x8
0xdaa: V1263 = 0x40
0xdae: V1264 = SHA3 0x0 0x40
0xdaf: V1265 = 0x3
0xdb1: V1266 = S[0x3]
0xdb5: V1267 = AND 0xffffffffffffffffffffffffffffffffffffffff V1266
0xdb7: V1268 = 0xa9059cbb
0xdc1: V1269 = M[0x40]
0xdc2: V1270 = 0x20
0xdc4: V1271 = ADD 0x20 V1269
0xdc5: M[V1271] = 0x0
0xdc6: V1272 = 0x40
0xdc8: V1273 = M[0x40]
0xdc9: V1274 = 0xe0
0xdcb: V1275 = 0x2
0xdcd: V1276 = EXP 0x2 0xe0
0xdce: V1277 = 0xffffffff
0xdd4: V1278 = AND 0xa9059cbb 0xffffffff
0xdd5: V1279 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xdd7: M[V1273] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xdd8: V1280 = 0x1
0xdda: V1281 = 0xa0
0xddc: V1282 = 0x2
0xdde: V1283 = EXP 0x2 0xa0
0xddf: V1284 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde2: V1285 = AND V1260 0xffffffffffffffffffffffffffffffffffffffff
0xde3: V1286 = 0x4
0xde6: V1287 = ADD V1273 0x4
0xde7: M[V1287] = V1285
0xde8: V1288 = 0x24
0xdeb: V1289 = ADD V1273 0x24
0xdec: M[V1289] = S2
0xded: V1290 = 0x44
0xdef: V1291 = ADD 0x44 V1273
0xdf0: V1292 = 0x20
0xdf2: V1293 = 0x40
0xdf4: V1294 = M[0x40]
0xdf7: V1295 = SUB V1291 V1294
0xdf9: V1296 = 0x0
0xdfd: V1297 = EXTCODESIZE V1267
0xdfe: V1298 = ISZERO V1297
0xdff: V1299 = ISZERO V1298
0xe00: V1300 = 0xe08
0xe03: JUMPI 0xe08 V1299
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V1264, V1267, 0xa9059cbb, V1291, 0x20, V1294, V1295, V1294, 0x0, V1267]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V1264, V1267, 0xa9059cbb, V1291, 0x20, V1294, V1295, V1294, 0x0, V1267]

================================

Block 0xe04
[0xe04:0xe07]
---
Predecessors: [0xd91]
Successors: []
---
0xe04 PUSH1 0x0
0xe06 DUP1
0xe07 REVERT
---
0xe04: V1301 = 0x0
0xe07: REVERT 0x0 0x0
---
Entry stack: [V12, S13, S12, S11, S10, V1264, V1267, 0xa9059cbb, V1291, 0x20, V1294, V1295, V1294, 0x0, V1267]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, V1264, V1267, 0xa9059cbb, V1291, 0x20, V1294, V1295, V1294, 0x0, V1267]

================================

Block 0xe08
[0xe08:0xe14]
---
Predecessors: [0xd91]
Successors: [0xe15, 0xe19]
---
0xe08 JUMPDEST
0xe09 PUSH2 0x2c6
0xe0c GAS
0xe0d SUB
0xe0e CALL
0xe0f ISZERO
0xe10 ISZERO
0xe11 PUSH2 0xe19
0xe14 JUMPI
---
0xe08: JUMPDEST 
0xe09: V1302 = 0x2c6
0xe0c: V1303 = GAS
0xe0d: V1304 = SUB V1303 0x2c6
0xe0e: V1305 = CALL V1304 V1267 0x0 V1294 V1295 V1294 0x20
0xe0f: V1306 = ISZERO V1305
0xe10: V1307 = ISZERO V1306
0xe11: V1308 = 0xe19
0xe14: JUMPI 0xe19 V1307
---
Entry stack: [V12, S13, S12, S11, S10, V1264, V1267, 0xa9059cbb, V1291, 0x20, V1294, V1295, V1294, 0x0, V1267]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, V1264, V1267, 0xa9059cbb, V1291]

================================

Block 0xe15
[0xe15:0xe18]
---
Predecessors: [0xe08]
Successors: []
---
0xe15 PUSH1 0x0
0xe17 DUP1
0xe18 REVERT
---
0xe15: V1309 = 0x0
0xe18: REVERT 0x0 0x0
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0xe19
[0xe19:0xe37]
---
Predecessors: [0xe08]
Successors: [0x103c]
---
0xe19 JUMPDEST
0xe1a POP
0xe1b POP
0xe1c POP
0xe1d PUSH1 0x40
0xe1f MLOAD
0xe20 DUP1
0xe21 MLOAD
0xe22 POP
0xe23 POP
0xe24 PUSH1 0x1
0xe26 DUP2
0xe27 ADD
0xe28 SLOAD
0xe29 PUSH2 0xe38
0xe2c SWAP1
0xe2d DUP5
0xe2e PUSH4 0xffffffff
0xe33 PUSH2 0x103c
0xe36 AND
0xe37 JUMP
---
0xe19: JUMPDEST 
0xe1d: V1310 = 0x40
0xe1f: V1311 = M[0x40]
0xe21: V1312 = M[V1311]
0xe24: V1313 = 0x1
0xe27: V1314 = ADD S3 0x1
0xe28: V1315 = S[V1314]
0xe29: V1316 = 0xe38
0xe2e: V1317 = 0xffffffff
0xe33: V1318 = 0x103c
0xe36: V1319 = AND 0x103c 0xffffffff
0xe37: JUMP 0x103c
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, 0xe38, V1315, S5]
Exit stack: [V12, S7, S6, S5, S4, S3, 0xe38, V1315, S5]

================================

Block 0xe38
[0xe38:0xe4f]
---
Predecessors: [0xfdd]
Successors: [0x103c]
---
0xe38 JUMPDEST
0xe39 PUSH1 0x1
0xe3b DUP3
0xe3c ADD
0xe3d SSTORE
0xe3e PUSH1 0x6
0xe40 SLOAD
0xe41 PUSH2 0xe50
0xe44 SWAP1
0xe45 DUP5
0xe46 PUSH4 0xffffffff
0xe4b PUSH2 0x103c
0xe4e AND
0xe4f JUMP
---
0xe38: JUMPDEST 
0xe39: V1320 = 0x1
0xe3c: V1321 = ADD S1 0x1
0xe3d: S[V1321] = S0
0xe3e: V1322 = 0x6
0xe40: V1323 = S[0x6]
0xe41: V1324 = 0xe50
0xe46: V1325 = 0xffffffff
0xe4b: V1326 = 0x103c
0xe4e: V1327 = AND 0x103c 0xffffffff
0xe4f: JUMP 0x103c
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xe50, V1323, S3]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0xe50, V1323, S3]

================================

Block 0xe50
[0xe50:0xee3]
---
Predecessors: [0xfdd]
Successors: [0xee4]
---
0xe50 JUMPDEST
0xe51 PUSH1 0x6
0xe53 SSTORE
0xe54 PUSH1 0x1
0xe56 PUSH1 0xa0
0xe58 PUSH1 0x2
0xe5a EXP
0xe5b SUB
0xe5c ADDRESS
0xe5d AND
0xe5e PUSH32 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c
0xe7f DUP5
0xe80 PUSH1 0x40
0xe82 MLOAD
0xe83 SWAP1
0xe84 DUP2
0xe85 MSTORE
0xe86 PUSH1 0x20
0xe88 ADD
0xe89 PUSH1 0x40
0xe8b MLOAD
0xe8c DUP1
0xe8d SWAP2
0xe8e SUB
0xe8f SWAP1
0xe90 LOG2
0xe91 PUSH1 0x0
0xe93 SLOAD
0xe94 PUSH1 0x5
0xe96 SLOAD
0xe97 PUSH32 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
0xeb8 SWAP2
0xeb9 PUSH1 0x1
0xebb PUSH1 0xa0
0xebd PUSH1 0x2
0xebf EXP
0xec0 SUB
0xec1 AND
0xec2 SWAP1
0xec3 PUSH1 0x40
0xec5 MLOAD
0xec6 PUSH1 0x1
0xec8 PUSH1 0xa0
0xeca PUSH1 0x2
0xecc EXP
0xecd SUB
0xece SWAP1
0xecf SWAP3
0xed0 AND
0xed1 DUP3
0xed2 MSTORE
0xed3 PUSH1 0x20
0xed5 DUP3
0xed6 ADD
0xed7 MSTORE
0xed8 PUSH1 0x40
0xeda SWAP1
0xedb DUP2
0xedc ADD
0xedd SWAP1
0xede MLOAD
0xedf DUP1
0xee0 SWAP2
0xee1 SUB
0xee2 SWAP1
0xee3 LOG1
---
0xe50: JUMPDEST 
0xe51: V1328 = 0x6
0xe53: S[0x6] = S0
0xe54: V1329 = 0x1
0xe56: V1330 = 0xa0
0xe58: V1331 = 0x2
0xe5a: V1332 = EXP 0x2 0xa0
0xe5b: V1333 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5c: V1334 = ADDRESS
0xe5d: V1335 = AND V1334 0xffffffffffffffffffffffffffffffffffffffff
0xe5e: V1336 = 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c
0xe80: V1337 = 0x40
0xe82: V1338 = M[0x40]
0xe85: M[V1338] = S3
0xe86: V1339 = 0x20
0xe88: V1340 = ADD 0x20 V1338
0xe89: V1341 = 0x40
0xe8b: V1342 = M[0x40]
0xe8e: V1343 = SUB V1340 V1342
0xe90: LOG V1342 V1343 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c V1335
0xe91: V1344 = 0x0
0xe93: V1345 = S[0x0]
0xe94: V1346 = 0x5
0xe96: V1347 = S[0x5]
0xe97: V1348 = 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
0xeb9: V1349 = 0x1
0xebb: V1350 = 0xa0
0xebd: V1351 = 0x2
0xebf: V1352 = EXP 0x2 0xa0
0xec0: V1353 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec1: V1354 = AND 0xffffffffffffffffffffffffffffffffffffffff V1345
0xec3: V1355 = 0x40
0xec5: V1356 = M[0x40]
0xec6: V1357 = 0x1
0xec8: V1358 = 0xa0
0xeca: V1359 = 0x2
0xecc: V1360 = EXP 0x2 0xa0
0xecd: V1361 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed0: V1362 = AND V1354 0xffffffffffffffffffffffffffffffffffffffff
0xed2: M[V1356] = V1362
0xed3: V1363 = 0x20
0xed6: V1364 = ADD V1356 0x20
0xed7: M[V1364] = V1347
0xed8: V1365 = 0x40
0xedc: V1366 = ADD 0x40 V1356
0xede: V1367 = M[0x40]
0xee1: V1368 = SUB V1366 V1367
0xee3: LOG V1367 V1368 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xee4
[0xee4:0xee4]
---
Predecessors: [0xe50]
Successors: [0xee5]
---
0xee4 JUMPDEST
---
0xee4: JUMPDEST 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xee5
[0xee5:0xee9]
---
Predecessors: [0xee4]
Successors: [0x178]
---
0xee5 JUMPDEST
0xee6 POP
0xee7 POP
0xee8 POP
0xee9 JUMP
---
0xee5: JUMPDEST 
0xee9: JUMP S3
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S4]

================================

Block 0xeea
[0xeea:0xefb]
---
Predecessors: [0x492]
Successors: [0x190]
---
0xeea JUMPDEST
0xeeb PUSH1 0x1
0xeed PUSH1 0x20
0xeef MSTORE
0xef0 PUSH1 0x0
0xef2 SWAP1
0xef3 DUP2
0xef4 MSTORE
0xef5 PUSH1 0x40
0xef7 SWAP1
0xef8 SHA3
0xef9 SLOAD
0xefa DUP2
0xefb JUMP
---
0xeea: JUMPDEST 
0xeeb: V1369 = 0x1
0xeed: V1370 = 0x20
0xeef: M[0x20] = 0x1
0xef0: V1371 = 0x0
0xef4: M[0x0] = V404
0xef5: V1372 = 0x40
0xef8: V1373 = SHA3 0x0 0x40
0xef9: V1374 = S[V1373]
0xefb: JUMP 0x190
---
Entry stack: [V12, 0x190, V404]
Stack pops: 2
Stack additions: [S1, V1374]
Exit stack: [V12, 0x190, V1374]

================================

Block 0xefc
[0xefc:0xf12]
---
Predecessors: [0x4c3]
Successors: [0xf13, 0xf17]
---
0xefc JUMPDEST
0xefd PUSH1 0x0
0xeff SLOAD
0xf00 CALLER
0xf01 PUSH1 0x1
0xf03 PUSH1 0xa0
0xf05 PUSH1 0x2
0xf07 EXP
0xf08 SUB
0xf09 SWAP1
0xf0a DUP2
0xf0b AND
0xf0c SWAP2
0xf0d AND
0xf0e EQ
0xf0f PUSH2 0xf17
0xf12 JUMPI
---
0xefc: JUMPDEST 
0xefd: V1375 = 0x0
0xeff: V1376 = S[0x0]
0xf00: V1377 = CALLER
0xf01: V1378 = 0x1
0xf03: V1379 = 0xa0
0xf05: V1380 = 0x2
0xf07: V1381 = EXP 0x2 0xa0
0xf08: V1382 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0b: V1383 = AND 0xffffffffffffffffffffffffffffffffffffffff V1377
0xf0d: V1384 = AND V1376 0xffffffffffffffffffffffffffffffffffffffff
0xf0e: V1385 = EQ V1384 V1383
0xf0f: V1386 = 0xf17
0xf12: JUMPI 0xf17 V1385
---
Entry stack: [V12, 0x178, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V425]

================================

Block 0xf13
[0xf13:0xf16]
---
Predecessors: [0xefc]
Successors: []
---
0xf13 PUSH1 0x0
0xf15 DUP1
0xf16 REVERT
---
0xf13: V1387 = 0x0
0xf16: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V425]

================================

Block 0xf17
[0xf17:0xf27]
---
Predecessors: [0xefc]
Successors: [0xf28, 0xf2c]
---
0xf17 JUMPDEST
0xf18 PUSH1 0x1
0xf1a PUSH1 0xa0
0xf1c PUSH1 0x2
0xf1e EXP
0xf1f SUB
0xf20 DUP2
0xf21 AND
0xf22 ISZERO
0xf23 ISZERO
0xf24 PUSH2 0xf2c
0xf27 JUMPI
---
0xf17: JUMPDEST 
0xf18: V1388 = 0x1
0xf1a: V1389 = 0xa0
0xf1c: V1390 = 0x2
0xf1e: V1391 = EXP 0x2 0xa0
0xf1f: V1392 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf21: V1393 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0xf22: V1394 = ISZERO V1393
0xf23: V1395 = ISZERO V1394
0xf24: V1396 = 0xf2c
0xf27: JUMPI 0xf2c V1395
---
Entry stack: [V12, 0x178, V425]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x178, V425]

================================

Block 0xf28
[0xf28:0xf2b]
---
Predecessors: [0xf17]
Successors: []
---
0xf28 PUSH1 0x0
0xf2a DUP1
0xf2b REVERT
---
0xf28: V1397 = 0x0
0xf2b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V425]

================================

Block 0xf2c
[0xf2c:0xf54]
---
Predecessors: [0xf17]
Successors: [0xf55]
---
0xf2c JUMPDEST
0xf2d PUSH1 0x0
0xf2f DUP1
0xf30 SLOAD
0xf31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf46 NOT
0xf47 AND
0xf48 PUSH1 0x1
0xf4a PUSH1 0xa0
0xf4c PUSH1 0x2
0xf4e EXP
0xf4f SUB
0xf50 DUP4
0xf51 AND
0xf52 OR
0xf53 SWAP1
0xf54 SSTORE
---
0xf2c: JUMPDEST 
0xf2d: V1398 = 0x0
0xf30: V1399 = S[0x0]
0xf31: V1400 = 0xffffffffffffffffffffffffffffffffffffffff
0xf46: V1401 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf47: V1402 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1399
0xf48: V1403 = 0x1
0xf4a: V1404 = 0xa0
0xf4c: V1405 = 0x2
0xf4e: V1406 = EXP 0x2 0xa0
0xf4f: V1407 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf51: V1408 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0xf52: V1409 = OR V1408 V1402
0xf54: S[0x0] = V1409
---
Entry stack: [V12, 0x178, V425]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x178, V425]

================================

Block 0xf55
[0xf55:0xf55]
---
Predecessors: [0xf2c]
Successors: [0xf56]
---
0xf55 JUMPDEST
---
0xf55: JUMPDEST 
---
Entry stack: [V12, 0x178, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V425]

================================

Block 0xf56
[0xf56:0xf58]
---
Predecessors: [0xf55]
Successors: [0x178]
---
0xf56 JUMPDEST
0xf57 POP
0xf58 JUMP
---
0xf56: JUMPDEST 
0xf58: JUMP 0x178
---
Entry stack: [V12, 0x178, V425]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xf59
[0xf59:0xf6f]
---
Predecessors: [0x4e4]
Successors: [0xf70, 0xf74]
---
0xf59 JUMPDEST
0xf5a PUSH1 0x0
0xf5c SLOAD
0xf5d CALLER
0xf5e PUSH1 0x1
0xf60 PUSH1 0xa0
0xf62 PUSH1 0x2
0xf64 EXP
0xf65 SUB
0xf66 SWAP1
0xf67 DUP2
0xf68 AND
0xf69 SWAP2
0xf6a AND
0xf6b EQ
0xf6c PUSH2 0xf74
0xf6f JUMPI
---
0xf59: JUMPDEST 
0xf5a: V1410 = 0x0
0xf5c: V1411 = S[0x0]
0xf5d: V1412 = CALLER
0xf5e: V1413 = 0x1
0xf60: V1414 = 0xa0
0xf62: V1415 = 0x2
0xf64: V1416 = EXP 0x2 0xa0
0xf65: V1417 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf68: V1418 = AND 0xffffffffffffffffffffffffffffffffffffffff V1412
0xf6a: V1419 = AND V1411 0xffffffffffffffffffffffffffffffffffffffff
0xf6b: V1420 = EQ V1419 V1418
0xf6c: V1421 = 0xf74
0xf6f: JUMPI 0xf74 V1420
---
Entry stack: [V12, 0x178, V439]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V439]

================================

Block 0xf70
[0xf70:0xf73]
---
Predecessors: [0xf59]
Successors: []
---
0xf70 PUSH1 0x0
0xf72 DUP1
0xf73 REVERT
---
0xf70: V1422 = 0x0
0xf73: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V439]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V439]

================================

Block 0xf74
[0xf74:0xf83]
---
Predecessors: [0xf59]
Successors: [0xf84, 0xf88]
---
0xf74 JUMPDEST
0xf75 PUSH1 0x1
0xf77 PUSH1 0xa0
0xf79 PUSH1 0x2
0xf7b EXP
0xf7c SUB
0xf7d DUP2
0xf7e AND
0xf7f ISZERO
0xf80 PUSH2 0xf88
0xf83 JUMPI
---
0xf74: JUMPDEST 
0xf75: V1423 = 0x1
0xf77: V1424 = 0xa0
0xf79: V1425 = 0x2
0xf7b: V1426 = EXP 0x2 0xa0
0xf7c: V1427 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7e: V1428 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0xf7f: V1429 = ISZERO V1428
0xf80: V1430 = 0xf88
0xf83: JUMPI 0xf88 V1429
---
Entry stack: [V12, 0x178, V439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x178, V439]

================================

Block 0xf84
[0xf84:0xf87]
---
Predecessors: [0xf74]
Successors: []
---
0xf84 PUSH1 0x0
0xf86 DUP1
0xf87 REVERT
---
0xf84: V1431 = 0x0
0xf87: REVERT 0x0 0x0
---
Entry stack: [V12, 0x178, V439]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V439]

================================

Block 0xf88
[0xf88:0xfb0]
---
Predecessors: [0xf74]
Successors: [0xfb1]
---
0xf88 JUMPDEST
0xf89 PUSH1 0x4
0xf8b DUP1
0xf8c SLOAD
0xf8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa2 NOT
0xfa3 AND
0xfa4 PUSH1 0x1
0xfa6 PUSH1 0xa0
0xfa8 PUSH1 0x2
0xfaa EXP
0xfab SUB
0xfac DUP4
0xfad AND
0xfae OR
0xfaf SWAP1
0xfb0 SSTORE
---
0xf88: JUMPDEST 
0xf89: V1432 = 0x4
0xf8c: V1433 = S[0x4]
0xf8d: V1434 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa2: V1435 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfa3: V1436 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1433
0xfa4: V1437 = 0x1
0xfa6: V1438 = 0xa0
0xfa8: V1439 = 0x2
0xfaa: V1440 = EXP 0x2 0xa0
0xfab: V1441 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfad: V1442 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0xfae: V1443 = OR V1442 V1436
0xfb0: S[0x4] = V1443
---
Entry stack: [V12, 0x178, V439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x178, V439]

================================

Block 0xfb1
[0xfb1:0xfb1]
---
Predecessors: [0xf88]
Successors: [0xfb2]
---
0xfb1 JUMPDEST
---
0xfb1: JUMPDEST 
---
Entry stack: [V12, 0x178, V439]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V439]

================================

Block 0xfb2
[0xfb2:0xfb4]
---
Predecessors: [0xfb1]
Successors: [0x178]
---
0xfb2 JUMPDEST
0xfb3 POP
0xfb4 JUMP
---
0xfb2: JUMPDEST 
0xfb4: JUMP 0x178
---
Entry stack: [V12, 0x178, V439]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xfb5
[0xfb5:0xfc1]
---
Predecessors: [0x510, 0xd44]
Successors: [0xfc2, 0xfd1]
---
0xfb5 JUMPDEST
0xfb6 PUSH1 0x0
0xfb8 DUP3
0xfb9 DUP3
0xfba MUL
0xfbb DUP4
0xfbc ISZERO
0xfbd DUP1
0xfbe PUSH2 0xfd1
0xfc1 JUMPI
---
0xfb5: JUMPDEST 
0xfb6: V1444 = 0x0
0xfba: V1445 = MUL 0x280 S1
0xfbc: V1446 = ISZERO S1
0xfbe: V1447 = 0xfd1
0xfc1: JUMPI 0xfd1 V1446
---
Entry stack: [V12, S9, S8, S7, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S1, 0x280]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1445, V1446]
Exit stack: [V12, S9, S8, S7, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S1, 0x280, 0x0, V1445, V1446]

================================

Block 0xfc2
[0xfc2:0xfcc]
---
Predecessors: [0xfb5]
Successors: [0xfcd, 0xfce]
---
0xfc2 POP
0xfc3 DUP3
0xfc4 DUP5
0xfc5 DUP3
0xfc6 DUP2
0xfc7 ISZERO
0xfc8 ISZERO
0xfc9 PUSH2 0xfce
0xfcc JUMPI
---
0xfc7: V1448 = ISZERO S4
0xfc8: V1449 = ISZERO V1448
0xfc9: V1450 = 0xfce
0xfcc: JUMPI 0xfce V1449
---
Entry stack: [V12, S12, S11, S10, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S4, 0x280, 0x0, V1445, V1446]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, S12, S11, S10, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S4, 0x280, 0x0, V1445, 0x280, S4, V1445]

================================

Block 0xfcd
[0xfcd:0xfcd]
---
Predecessors: [0xfc2]
Successors: []
---
0xfcd INVALID
---
0xfcd: INVALID 
---
Entry stack: [V12, S14, S13, S12, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S6, 0x280, 0x0, V1445, 0x280, S1, V1445]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S6, 0x280, 0x0, V1445, 0x280, S1, V1445]

================================

Block 0xfce
[0xfce:0xfd0]
---
Predecessors: [0xfc2]
Successors: [0xfd1]
---
0xfce JUMPDEST
0xfcf DIV
0xfd0 EQ
---
0xfce: JUMPDEST 
0xfcf: V1451 = DIV V1445 S1
0xfd0: V1452 = EQ V1451 0x280
---
Entry stack: [V12, S14, S13, S12, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S6, 0x280, 0x0, V1445, 0x280, S1, V1445]
Stack pops: 3
Stack additions: [V1452]
Exit stack: [V12, S14, S13, S12, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S6, 0x280, 0x0, V1445, V1452]

================================

Block 0xfd1
[0xfd1:0xfd7]
---
Predecessors: [0xfb5, 0xfce]
Successors: [0xfd8, 0xfd9]
---
0xfd1 JUMPDEST
0xfd2 ISZERO
0xfd3 ISZERO
0xfd4 PUSH2 0xfd9
0xfd7 JUMPI
---
0xfd1: JUMPDEST 
0xfd2: V1453 = ISZERO S0
0xfd3: V1454 = ISZERO V1453
0xfd4: V1455 = 0xfd9
0xfd7: JUMPI 0xfd9 V1454
---
Entry stack: [V12, S12, S11, S10, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S4, 0x280, 0x0, V1445, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S4, 0x280, 0x0, V1445]

================================

Block 0xfd8
[0xfd8:0xfd8]
---
Predecessors: [0xfd1]
Successors: []
---
0xfd8 INVALID
---
0xfd8: INVALID 
---
Entry stack: [V12, S11, S10, S9, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S3, 0x280, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, 0x0, {0x0, 0x542}, {0x53d, 0xd83}, 0xde0b6b3a7640000, {0x531, 0xd74}, S3, 0x280, 0x0, S0]

================================

Block 0xfd9
[0xfd9:0xfdc]
---
Predecessors: [0xfd1, 0x103c]
Successors: [0xfdd]
---
0xfd9 JUMPDEST
0xfda DUP1
0xfdb SWAP2
0xfdc POP
---
0xfd9: JUMPDEST 
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x531, 0x55e, 0x60c, 0x623, 0x638, 0x64e, 0xd74, 0xe38, 0xe50, 0x102d, 0x107f, 0x10ab}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x531, 0x55e, 0x60c, 0x623, 0x638, 0x64e, 0xd74, 0xe38, 0xe50, 0x102d, 0x107f, 0x10ab}, S3, S2, S0, S0]

================================

Block 0xfdd
[0xfdd:0xfe3]
---
Predecessors: [0xfd9]
Successors: [0x531, 0x55e, 0x60c, 0x623, 0x638, 0x64e, 0xd74, 0xe38, 0xe50, 0x102d, 0x107f, 0x10ab]
---
0xfdd JUMPDEST
0xfde POP
0xfdf SWAP3
0xfe0 SWAP2
0xfe1 POP
0xfe2 POP
0xfe3 JUMP
---
0xfdd: JUMPDEST 
0xfe3: JUMP {0x531, 0x55e, 0x60c, 0x623, 0x638, 0x64e, 0xd74, 0xe38, 0xe50, 0x102d, 0x107f, 0x10ab}
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x531, 0x55e, 0x60c, 0x623, 0x638, 0x64e, 0xd74, 0xe38, 0xe50, 0x102d, 0x107f, 0x10ab}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xfe4
[0xfe4:0xff0]
---
Predecessors: [0x531, 0x100d]
Successors: [0xff1, 0xff2]
---
0xfe4 JUMPDEST
0xfe5 PUSH1 0x0
0xfe7 DUP1
0xfe8 DUP3
0xfe9 DUP5
0xfea DUP2
0xfeb ISZERO
0xfec ISZERO
0xfed PUSH2 0xff2
0xff0 JUMPI
---
0xfe4: JUMPDEST 
0xfe5: V1456 = 0x0
0xfeb: V1457 = ISZERO S0
0xfec: V1458 = ISZERO V1457
0xfed: V1459 = 0xff2
0xff0: JUMPI 0xff2 V1458
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0xff1
[0xff1:0xff1]
---
Predecessors: [0xfe4]
Successors: []
---
0xff1 INVALID
---
0xff1: INVALID 
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0xff2
[0xff2:0xff8]
---
Predecessors: [0xfe4]
Successors: [0xff9]
---
0xff2 JUMPDEST
0xff3 DIV
0xff4 SWAP1
0xff5 POP
0xff6 DUP1
0xff7 SWAP2
0xff8 POP
---
0xff2: JUMPDEST 
0xff3: V1460 = DIV S0 S1
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V1460, V1460]
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1460, V1460]

================================

Block 0xff9
[0xff9:0xfff]
---
Predecessors: [0xff2]
Successors: [0x53d, 0xd83, 0x1020]
---
0xff9 JUMPDEST
0xffa POP
0xffb SWAP3
0xffc SWAP2
0xffd POP
0xffe POP
0xfff JUMP
---
0xff9: JUMPDEST 
0xfff: JUMP {0x53d, 0xd83, 0x1020}
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x0, 0x542, 0x102d}, {0x53d, 0xd83, 0x1020}, S3, {0x2, 0xde0b6b3a7640000}, V1460, V1460]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x0, 0x542, 0x102d}, V1460]

================================

Block 0x1000
[0x1000:0x100c]
---
Predecessors: [0x53d, 0xd7d]
Successors: [0x100d, 0x1034]
---
0x1000 JUMPDEST
0x1001 PUSH1 0x0
0x1003 PUSH2 0xa00
0x1006 DUP3
0x1007 GT
0x1008 ISZERO
0x1009 PUSH2 0x1034
0x100c JUMPI
---
0x1000: JUMPDEST 
0x1001: V1461 = 0x0
0x1003: V1462 = 0xa00
0x1007: V1463 = GT S0 0xa00
0x1008: V1464 = ISZERO V1463
0x1009: V1465 = 0x1034
0x100c: JUMPI 0x1034 V1464
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x100d
[0x100d:0x101f]
---
Predecessors: [0x1000]
Successors: [0xfe4]
---
0x100d PUSH2 0x102d
0x1010 PUSH2 0x1020
0x1013 DUP4
0x1014 PUSH1 0x2
0x1016 PUSH4 0xffffffff
0x101b PUSH2 0xfe4
0x101e AND
0x101f JUMP
---
0x100d: V1466 = 0x102d
0x1010: V1467 = 0x1020
0x1014: V1468 = 0x2
0x1016: V1469 = 0xffffffff
0x101b: V1470 = 0xfe4
0x101e: V1471 = AND 0xfe4 0xffffffff
0x101f: JUMP 0xfe4
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x102d, 0x1020, S1, 0x2]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, 0x102d, 0x1020, S1, 0x2]

================================

Block 0x1020
[0x1020:0x102c]
---
Predecessors: [0xff9]
Successors: [0x103c]
---
0x1020 JUMPDEST
0x1021 DUP4
0x1022 SWAP1
0x1023 PUSH4 0xffffffff
0x1028 PUSH2 0x103c
0x102b AND
0x102c JUMP
---
0x1020: JUMPDEST 
0x1023: V1472 = 0xffffffff
0x1028: V1473 = 0x103c
0x102b: V1474 = AND 0x103c 0xffffffff
0x102c: JUMP 0x103c
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, 0x0, {0x0, 0x542, 0x102d}, V1460]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, 0x0, {0x0, 0x542, 0x102d}, S3, V1460]

================================

Block 0x102d
[0x102d:0x1033]
---
Predecessors: [0xfdd]
Successors: [0x1037]
---
0x102d JUMPDEST
0x102e SWAP1
0x102f POP
0x1030 PUSH2 0x1037
0x1033 JUMP
---
0x102d: JUMPDEST 
0x1030: V1475 = 0x1037
0x1033: JUMP 0x1037
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x1034
[0x1034:0x1036]
---
Predecessors: [0x1000]
Successors: [0x1037]
---
0x1034 JUMPDEST
0x1035 POP
0x1036 DUP1
---
0x1034: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S1]

================================

Block 0x1037
[0x1037:0x103b]
---
Predecessors: [0x102d, 0x1034]
Successors: [0x178, 0x53d, 0x542, 0x8f3, 0xd83]
---
0x1037 JUMPDEST
0x1038 SWAP2
0x1039 SWAP1
0x103a POP
0x103b JUMP
---
0x1037: JUMPDEST 
0x103b: JUMP S2
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S7, S6, S5, S4, S3, S0]

================================

Block 0x103c
[0x103c:0x1049]
---
Predecessors: [0x542, 0x5ed, 0x60c, 0x623, 0x638, 0xe19, 0xe38, 0x1020, 0x1056, 0x107f]
Successors: [0xfd9, 0x104a]
---
0x103c JUMPDEST
0x103d PUSH1 0x0
0x103f DUP3
0x1040 DUP3
0x1041 ADD
0x1042 DUP4
0x1043 DUP2
0x1044 LT
0x1045 ISZERO
0x1046 PUSH2 0xfd9
0x1049 JUMPI
---
0x103c: JUMPDEST 
0x103d: V1476 = 0x0
0x1041: V1477 = ADD S0 S1
0x1044: V1478 = LT V1477 S1
0x1045: V1479 = ISZERO V1478
0x1046: V1480 = 0xfd9
0x1049: JUMPI 0xfd9 V1479
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x542, 0x55e, 0x60c, 0x623, 0x638, 0x64e, 0xe38, 0xe50, 0x102d, 0x107f, 0x10ab}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1477]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x542, 0x55e, 0x60c, 0x623, 0x638, 0x64e, 0xe38, 0xe50, 0x102d, 0x107f, 0x10ab}, S1, S0, 0x0, V1477]

================================

Block 0x104a
[0x104a:0x104a]
---
Predecessors: [0x103c]
Successors: []
---
0x104a INVALID
---
0x104a: INVALID 
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x55e, 0x60c, 0x623, 0x638, 0x64e, 0xe38, 0xe50, 0x102d, 0x107f, 0x10ab}, S3, S2, 0x0, V1477]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, {0x55e, 0x60c, 0x623, 0x638, 0x64e, 0xe38, 0xe50, 0x102d, 0x107f, 0x10ab}, S3, S2, 0x0, V1477]

================================

Block 0x104b
[0x104b:0x104e]
---
Predecessors: []
Successors: [0x104f]
---
0x104b JUMPDEST
0x104c DUP1
0x104d SWAP2
0x104e POP
---
0x104b: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x104f
[0x104f:0x1055]
---
Predecessors: [0x104b]
Successors: []
Has unresolved jump.
---
0x104f JUMPDEST
0x1050 POP
0x1051 SWAP3
0x1052 SWAP2
0x1053 POP
0x1054 POP
0x1055 JUMP
---
0x104f: JUMPDEST 
0x1055: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x1056
[0x1056:0x107e]
---
Predecessors: [0x8ea]
Successors: [0x103c]
---
0x1056 JUMPDEST
0x1057 PUSH1 0x1
0x1059 PUSH1 0xa0
0x105b PUSH1 0x2
0x105d EXP
0x105e SUB
0x105f DUP3
0x1060 AND
0x1061 PUSH1 0x0
0x1063 SWAP1
0x1064 DUP2
0x1065 MSTORE
0x1066 PUSH1 0x1
0x1068 PUSH1 0x20
0x106a MSTORE
0x106b PUSH1 0x40
0x106d SWAP1
0x106e SHA3
0x106f SLOAD
0x1070 PUSH2 0x107f
0x1073 SWAP1
0x1074 DUP3
0x1075 PUSH4 0xffffffff
0x107a PUSH2 0x103c
0x107d AND
0x107e JUMP
---
0x1056: JUMPDEST 
0x1057: V1481 = 0x1
0x1059: V1482 = 0xa0
0x105b: V1483 = 0x2
0x105d: V1484 = EXP 0x2 0xa0
0x105e: V1485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1060: V1486 = AND V822 0xffffffffffffffffffffffffffffffffffffffff
0x1061: V1487 = 0x0
0x1065: M[0x0] = V1486
0x1066: V1488 = 0x1
0x1068: V1489 = 0x20
0x106a: M[0x20] = 0x1
0x106b: V1490 = 0x40
0x106e: V1491 = SHA3 0x0 0x40
0x106f: V1492 = S[V1491]
0x1070: V1493 = 0x107f
0x1075: V1494 = 0xffffffff
0x107a: V1495 = 0x103c
0x107d: V1496 = AND 0x103c 0xffffffff
0x107e: JUMP 0x103c
---
Entry stack: [V12, 0x178, V160, V817, 0x8f3, V822, V817]
Stack pops: 2
Stack additions: [S1, S0, 0x107f, V1492, S0]
Exit stack: [V12, 0x178, V160, V817, 0x8f3, V822, V817, 0x107f, V1492, V817]

================================

Block 0x107f
[0x107f:0x10aa]
---
Predecessors: [0xfdd]
Successors: [0x103c]
---
0x107f JUMPDEST
0x1080 PUSH1 0x1
0x1082 PUSH1 0xa0
0x1084 PUSH1 0x2
0x1086 EXP
0x1087 SUB
0x1088 DUP4
0x1089 AND
0x108a PUSH1 0x0
0x108c SWAP1
0x108d DUP2
0x108e MSTORE
0x108f PUSH1 0x1
0x1091 PUSH1 0x20
0x1093 MSTORE
0x1094 PUSH1 0x40
0x1096 SWAP1
0x1097 SHA3
0x1098 SSTORE
0x1099 PUSH1 0x2
0x109b SLOAD
0x109c PUSH2 0x10ab
0x109f SWAP1
0x10a0 DUP3
0x10a1 PUSH4 0xffffffff
0x10a6 PUSH2 0x103c
0x10a9 AND
0x10aa JUMP
---
0x107f: JUMPDEST 
0x1080: V1497 = 0x1
0x1082: V1498 = 0xa0
0x1084: V1499 = 0x2
0x1086: V1500 = EXP 0x2 0xa0
0x1087: V1501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1089: V1502 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x108a: V1503 = 0x0
0x108e: M[0x0] = V1502
0x108f: V1504 = 0x1
0x1091: V1505 = 0x20
0x1093: M[0x20] = 0x1
0x1094: V1506 = 0x40
0x1097: V1507 = SHA3 0x0 0x40
0x1098: S[V1507] = S0
0x1099: V1508 = 0x2
0x109b: V1509 = S[0x2]
0x109c: V1510 = 0x10ab
0x10a1: V1511 = 0xffffffff
0x10a6: V1512 = 0x103c
0x10a9: V1513 = AND 0x103c 0xffffffff
0x10aa: JUMP 0x103c
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x10ab, V1509, S1]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x10ab, V1509, S1]

================================

Block 0x10ab
[0x10ab:0x10ae]
---
Predecessors: [0xfdd]
Successors: [0x10af]
---
0x10ab JUMPDEST
0x10ac PUSH1 0x2
0x10ae SSTORE
---
0x10ab: JUMPDEST 
0x10ac: V1514 = 0x2
0x10ae: S[0x2] = S0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x10af
[0x10af:0x10b2]
---
Predecessors: [0x10ab]
Successors: [0x178, 0x53d, 0x542, 0x8f3, 0xd83]
---
0x10af JUMPDEST
0x10b0 POP
0x10b1 POP
0x10b2 JUMP
---
0x10af: JUMPDEST 
0x10b2: JUMP S2
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3]

================================

Block 0x10b3
[0x10b3:0x10bd]
---
Predecessors: [0xb7b]
Successors: [0x10be, 0x10bf]
---
0x10b3 JUMPDEST
0x10b4 PUSH1 0x0
0x10b6 DUP3
0x10b7 DUP3
0x10b8 GT
0x10b9 ISZERO
0x10ba PUSH2 0x10bf
0x10bd JUMPI
---
0x10b3: JUMPDEST 
0x10b4: V1515 = 0x0
0x10b8: V1516 = GT V1061 V1079
0x10b9: V1517 = ISZERO V1516
0x10ba: V1518 = 0x10bf
0x10bd: JUMPI 0x10bf V1517
---
Entry stack: [V12, 0x178, V1049, V1061, 0xb8e, V1079, V1061]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0x178, V1049, V1061, 0xb8e, V1079, V1061, 0x0]

================================

Block 0x10be
[0x10be:0x10be]
---
Predecessors: [0x10b3]
Successors: []
---
0x10be INVALID
---
0x10be: INVALID 
---
Entry stack: [V12, 0x178, V1049, V1061, 0xb8e, V1079, V1061, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x178, V1049, V1061, 0xb8e, V1079, V1061, 0x0]

================================

Block 0x10bf
[0x10bf:0x10c3]
---
Predecessors: [0x10b3]
Successors: [0x10c4]
---
0x10bf JUMPDEST
0x10c0 POP
0x10c1 DUP1
0x10c2 DUP3
0x10c3 SUB
---
0x10bf: JUMPDEST 
0x10c3: V1519 = SUB V1079 V1061
---
Entry stack: [V12, 0x178, V1049, V1061, 0xb8e, V1079, V1061, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1519]
Exit stack: [V12, 0x178, V1049, V1061, 0xb8e, V1079, V1061, V1519]

================================

Block 0x10c4
[0x10c4:0x10c9]
---
Predecessors: [0x10bf]
Successors: [0xb8e]
---
0x10c4 JUMPDEST
0x10c5 SWAP3
0x10c6 SWAP2
0x10c7 POP
0x10c8 POP
0x10c9 JUMP
---
0x10c4: JUMPDEST 
0x10c9: JUMP 0xb8e
---
Entry stack: [V12, 0x178, V1049, V1061, 0xb8e, V1079, V1061, V1519]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x178, V1049, V1061, V1519]

================================

Block 0x10ca
[0x10ca:0x10fa]
---
Predecessors: []
Successors: []
---
0x10ca STOP
0x10cb LOG1
0x10cc PUSH6 0x627a7a723058
0x10d3 SHA3
0x10d4 GT
0x10d5 ORIGIN
0x10d6 LOG0
0x10d7 DUP16
0x10d8 MISSING 0x4b
0x10d9 PUSH16 0xebad70df0d9d9412c145cbf964540291
0x10ea SWAP11
0x10eb MULMOD
0x10ec PUSH14 0xc4c3804f2dcfbd0029
---
0x10ca: STOP 
0x10cb: LOG S0 S1 S2
0x10cc: V1520 = 0x627a7a723058
0x10d3: V1521 = SHA3 0x627a7a723058 S3
0x10d4: V1522 = GT V1521 S4
0x10d5: V1523 = ORIGIN
0x10d6: LOG V1523 V1522
0x10d8: MISSING 0x4b
0x10d9: V1524 = 0xebad70df0d9d9412c145cbf964540291
0x10eb: V1525 = MULMOD S10 S0 S1
0x10ec: V1526 = 0xc4c3804f2dcfbd0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S20, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, 0xc4c3804f2dcfbd0029, V1525, S2, S3, S4, S5, S6, S7, S8, S9, 0xebad70df0d9d9412c145cbf964540291]
Exit stack: []

================================

Function 0:
Public function signature: 0x5b4487
Entry block: 0x17d
Exit block: 0x190
Body: 0x17d, 0x184, 0x188, 0x190, 0x6da

Function 1:
Public function signature: 0x11df9995
Entry block: 0x1a2
Exit block: 0x1b5
Body: 0x1a2, 0x1a9, 0x1ad, 0x1b5, 0x6e0

Function 2:
Public function signature: 0x1c53faf8
Entry block: 0x1d1
Exit block: 0x104a
Body: 0x1d1, 0x1d8, 0x1dc, 0x6ef, 0x706, 0x70a, 0x75d, 0x761, 0x76e, 0x104a

Function 3:
Public function signature: 0x278ecde1
Entry block: 0x1e6
Exit block: 0x17b
Body: 0x178, 0x179, 0x17a, 0x17b, 0x1e6, 0x1ed, 0x1f1, 0x779, 0x788, 0x792, 0x799, 0x79d, 0x7c1, 0x7c5, 0x82d, 0x831, 0x83e, 0x842, 0x899, 0x89d, 0x8aa, 0x8ae, 0x8be, 0x8c2, 0x8ea, 0x8f3, 0x8f4, 0x8f5, 0x8f6, 0x104a, 0x1056, 0x107f

Function 4:
Public function signature: 0x30adce0e
Entry block: 0x1fe
Exit block: 0x190
Body: 0x190, 0x1fe, 0x205, 0x209, 0x8fa

Function 5:
Public function signature: 0x3197cbb6
Entry block: 0x223
Exit block: 0x190
Body: 0x190, 0x223, 0x22a, 0x22e, 0x900

Function 6:
Public function signature: 0x3f4ba83a
Entry block: 0x248
Exit block: 0x17b
Body: 0x178, 0x179, 0x17a, 0x17b, 0x248, 0x24f, 0x253, 0x908, 0x91f, 0x923, 0x937, 0x93b, 0x986, 0x987, 0x988

Function 7:
Public function signature: 0x4bb278f3
Entry block: 0x25d
Exit block: 0xb16
Body: 0x178, 0x179, 0x17a, 0x17b, 0x25d, 0x264, 0x268, 0x98a, 0x9a2, 0x9a6, 0x9b3, 0x9c1, 0x9c5, 0x9ca, 0x9cb, 0x9da, 0x9e2, 0x9e9, 0x9ed, 0xa22, 0xa26, 0xa7b, 0xa7f, 0xa8c, 0xa90, 0xaa5, 0xaf1, 0xaf5, 0xb02, 0xb06, 0xb16, 0xb1a, 0xb1b, 0xb29, 0xb2a

Function 8:
Public function signature: 0x5c975abb
Entry block: 0x272
Exit block: 0x285
Body: 0x272, 0x279, 0x27d, 0x285, 0xb2d

Function 9:
Public function signature: 0x6103d70b
Entry block: 0x299
Exit block: 0x17b
Body: 0x178, 0x179, 0x17a, 0x17b, 0x299, 0x2a0, 0x2a4, 0x8f3, 0x8f4, 0x8f5, 0x8f6, 0xb3d, 0xb5f, 0xb63, 0xb77, 0xb7b, 0xb8e, 0xbd1, 0x10b3, 0x10be, 0x10bf, 0x10c4

Function 10:
Public function signature: 0x6a2d1cb8
Entry block: 0x2ae
Exit block: 0x190
Body: 0x190, 0x2ae, 0x2b5, 0x2b9, 0xbd7

Function 11:
Public function signature: 0x78e97925
Entry block: 0x2d3
Exit block: 0x190
Body: 0x190, 0x2d3, 0x2da, 0x2de, 0xbe2

Function 12:
Public function signature: 0x801db9cc
Entry block: 0x2f8
Exit block: 0x190
Body: 0x190, 0x2f8, 0x2ff, 0x303, 0xbea

Function 13:
Public function signature: 0x8456cb59
Entry block: 0x31d
Exit block: 0x17b
Body: 0x178, 0x179, 0x17a, 0x17b, 0x31d, 0x324, 0x328, 0xbf1, 0xc08, 0xc0c, 0xc1f, 0xc23, 0xc74, 0xc75, 0xc76

Function 14:
Public function signature: 0x8da5cb5b
Entry block: 0x332
Exit block: 0x1b5
Body: 0x1b5, 0x332, 0x339, 0x33d, 0xc78

Function 15:
Public function signature: 0x8ef26a71
Entry block: 0x361
Exit block: 0x190
Body: 0x190, 0x361, 0x368, 0x36c, 0xc87

Function 16:
Public function signature: 0x9890220b
Entry block: 0x386
Exit block: 0x17b
Body: 0x178, 0x179, 0x17a, 0x17b, 0x386, 0x38d, 0x391, 0x776, 0x777, 0xc8d, 0xca4, 0xca8, 0xcdd

Function 17:
Public function signature: 0x9b39caef
Entry block: 0x39b
Exit block: 0x190
Body: 0x190, 0x39b, 0x3a2, 0x3a6, 0xce5

Function 18:
Public function signature: 0xb85dfb80
Entry block: 0x3c0
Exit block: 0x3df
Body: 0x3c0, 0x3c7, 0x3cb, 0x3df, 0xceb

Function 19:
Public function signature: 0xccb07cef
Entry block: 0x3f7
Exit block: 0x285
Body: 0x285, 0x3f7, 0x3fe, 0x402, 0xd04

Function 20:
Public function signature: 0xd06c91e4
Entry block: 0x41e
Exit block: 0x1b5
Body: 0x1b5, 0x41e, 0x425, 0x429, 0xd0d

Function 21:
Public function signature: 0xd669e1d4
Entry block: 0x44d
Exit block: 0x190
Body: 0x190, 0x44d, 0x454, 0x458, 0xd1c

Function 22:
Public function signature: 0xdf40503c
Entry block: 0x472
Exit block: 0xd7c
Body: 0x472, 0x479, 0x47d, 0xd24, 0xd40, 0xd44, 0xd74, 0xd7c, 0x104a

Function 23:
Public function signature: 0xe2982c21
Entry block: 0x487
Exit block: 0x190
Body: 0x190, 0x487, 0x48e, 0x492, 0xeea

Function 24:
Public function signature: 0xf2fde38b
Entry block: 0x4b8
Exit block: 0x17b
Body: 0x178, 0x179, 0x17a, 0x17b, 0x4b8, 0x4bf, 0x4c3, 0xefc, 0xf13, 0xf17, 0xf28, 0xf2c, 0xf55, 0xf56

Function 25:
Public function signature: 0xf3283fba
Entry block: 0x4d9
Exit block: 0x17b
Body: 0x178, 0x179, 0x17a, 0x17b, 0x4d9, 0x4e0, 0x4e4, 0xf59, 0xf70, 0xf74, 0xf84, 0xf88, 0xfb1, 0xfb2

Function 26:
Public fallback function
Entry block: 0x137
Exit block: 0x17b
Body: 0x137, 0x138, 0x14b, 0x14f, 0x15c, 0x164, 0x16b, 0x16f, 0x178, 0x179, 0x17a, 0x17b, 0x4fa, 0x50c, 0x510, 0x531

Function 27:
Private function
Entry block: 0xfb5
Exit block: 0xfdd
Body: 0x53d, 0x542, 0x542, 0x542, 0x55e, 0x568, 0x5dc, 0x5ed, 0x60c, 0x623, 0x638, 0x64e, 0x6d5, 0xd83, 0xd91, 0xe08, 0xe19, 0xe38, 0xfb5, 0xfc2, 0xfce, 0xfd1, 0xfd9, 0xfdd, 0xfe4, 0xff2, 0xff9, 0x1000, 0x100d, 0x1020, 0x102d, 0x1034, 0x1037, 0x103c, 0x107f, 0x10ab, 0x10af

Function 28:
Private function
Entry block: 0x103c
Exit block: 0xfdd
Body: 0x531, 0x53d, 0x542, 0x55e, 0x568, 0x5dc, 0x5ed, 0x60c, 0xd74, 0xd7d, 0xd83, 0xd91, 0xe08, 0xe19, 0xe38, 0xfd9, 0xfdd, 0xfe4, 0xff2, 0xff9, 0x1000, 0x100d, 0x1020, 0x102d, 0x1034, 0x1037, 0x103c

