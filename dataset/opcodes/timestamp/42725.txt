Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x10f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x10f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x10f
0xa: JUMPI 0x10f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x11c]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6fdde03
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x11c
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6fdde03
0x39: V12 = EQ V10 0x6fdde03
0x3a: V13 = 0x11c
0x3d: JUMPI 0x11c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1a7]
---
0x3e DUP1
0x3f PUSH4 0x95ea7b3
0x44 EQ
0x45 PUSH2 0x1a7
0x48 JUMPI
---
0x3f: V14 = 0x95ea7b3
0x44: V15 = EQ 0x95ea7b3 V10
0x45: V16 = 0x1a7
0x48: JUMPI 0x1a7 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1cb]
---
0x49 DUP1
0x4a PUSH4 0x18160ddd
0x4f EQ
0x50 PUSH2 0x1cb
0x53 JUMPI
---
0x4a: V17 = 0x18160ddd
0x4f: V18 = EQ 0x18160ddd V10
0x50: V19 = 0x1cb
0x53: JUMPI 0x1cb V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1f0]
---
0x54 DUP1
0x55 PUSH4 0x23548b8b
0x5a EQ
0x5b PUSH2 0x1f0
0x5e JUMPI
---
0x55: V20 = 0x23548b8b
0x5a: V21 = EQ 0x23548b8b V10
0x5b: V22 = 0x1f0
0x5e: JUMPI 0x1f0 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x215]
---
0x5f DUP1
0x60 PUSH4 0x23b872dd
0x65 EQ
0x66 PUSH2 0x215
0x69 JUMPI
---
0x60: V23 = 0x23b872dd
0x65: V24 = EQ 0x23b872dd V10
0x66: V25 = 0x215
0x69: JUMPI 0x215 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x23f]
---
0x6a DUP1
0x6b PUSH4 0x313ce567
0x70 EQ
0x71 PUSH2 0x23f
0x74 JUMPI
---
0x6b: V26 = 0x313ce567
0x70: V27 = EQ 0x313ce567 V10
0x71: V28 = 0x23f
0x74: JUMPI 0x23f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x264]
---
0x75 DUP1
0x76 PUSH4 0x3c50afe1
0x7b EQ
0x7c PUSH2 0x264
0x7f JUMPI
---
0x76: V29 = 0x3c50afe1
0x7b: V30 = EQ 0x3c50afe1 V10
0x7c: V31 = 0x264
0x7f: JUMPI 0x264 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x289]
---
0x80 DUP1
0x81 PUSH4 0x3eaaf86b
0x86 EQ
0x87 PUSH2 0x289
0x8a JUMPI
---
0x81: V32 = 0x3eaaf86b
0x86: V33 = EQ 0x3eaaf86b V10
0x87: V34 = 0x289
0x8a: JUMPI 0x289 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2ae]
---
0x8b DUP1
0x8c PUSH4 0x558a8f47
0x91 EQ
0x92 PUSH2 0x2ae
0x95 JUMPI
---
0x8c: V35 = 0x558a8f47
0x91: V36 = EQ 0x558a8f47 V10
0x92: V37 = 0x2ae
0x95: JUMPI 0x2ae V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x2d2]
---
0x96 DUP1
0x97 PUSH4 0x70a08231
0x9c EQ
0x9d PUSH2 0x2d2
0xa0 JUMPI
---
0x97: V38 = 0x70a08231
0x9c: V39 = EQ 0x70a08231 V10
0x9d: V40 = 0x2d2
0xa0: JUMPI 0x2d2 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x303]
---
0xa1 DUP1
0xa2 PUSH4 0x78e97925
0xa7 EQ
0xa8 PUSH2 0x303
0xab JUMPI
---
0xa2: V41 = 0x78e97925
0xa7: V42 = EQ 0x78e97925 V10
0xa8: V43 = 0x303
0xab: JUMPI 0x303 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x328]
---
0xac DUP1
0xad PUSH4 0x8d859f3e
0xb2 EQ
0xb3 PUSH2 0x328
0xb6 JUMPI
---
0xad: V44 = 0x8d859f3e
0xb2: V45 = EQ 0x8d859f3e V10
0xb3: V46 = 0x328
0xb6: JUMPI 0x328 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x34d]
---
0xb7 DUP1
0xb8 PUSH4 0x8da5cb5b
0xbd EQ
0xbe PUSH2 0x34d
0xc1 JUMPI
---
0xb8: V47 = 0x8da5cb5b
0xbd: V48 = EQ 0x8da5cb5b V10
0xbe: V49 = 0x34d
0xc1: JUMPI 0x34d V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x37c]
---
0xc2 DUP1
0xc3 PUSH4 0x95d89b41
0xc8 EQ
0xc9 PUSH2 0x37c
0xcc JUMPI
---
0xc3: V50 = 0x95d89b41
0xc8: V51 = EQ 0x95d89b41 V10
0xc9: V52 = 0x37c
0xcc: JUMPI 0x37c V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x407]
---
0xcd DUP1
0xce PUSH4 0x98d5fdca
0xd3 EQ
0xd4 PUSH2 0x407
0xd7 JUMPI
---
0xce: V53 = 0x98d5fdca
0xd3: V54 = EQ 0x98d5fdca V10
0xd4: V55 = 0x407
0xd7: JUMPI 0x407 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x42c]
---
0xd8 DUP1
0xd9 PUSH4 0xa9059cbb
0xde EQ
0xdf PUSH2 0x42c
0xe2 JUMPI
---
0xd9: V56 = 0xa9059cbb
0xde: V57 = EQ 0xa9059cbb V10
0xdf: V58 = 0x42c
0xe2: JUMPI 0x42c V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x450]
---
0xe3 DUP1
0xe4 PUSH4 0xaec3ab53
0xe9 EQ
0xea PUSH2 0x450
0xed JUMPI
---
0xe4: V59 = 0xaec3ab53
0xe9: V60 = EQ 0xaec3ab53 V10
0xea: V61 = 0x450
0xed: JUMPI 0x450 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x475]
---
0xee DUP1
0xef PUSH4 0xb113d9dc
0xf4 EQ
0xf5 PUSH2 0x475
0xf8 JUMPI
---
0xef: V62 = 0xb113d9dc
0xf4: V63 = EQ 0xb113d9dc V10
0xf5: V64 = 0x475
0xf8: JUMPI 0x475 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x48b]
---
0xf9 DUP1
0xfa PUSH4 0xc71c0b40
0xff EQ
0x100 PUSH2 0x48b
0x103 JUMPI
---
0xfa: V65 = 0xc71c0b40
0xff: V66 = EQ 0xc71c0b40 V10
0x100: V67 = 0x48b
0x103: JUMPI 0x48b V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x10e]
---
Predecessors: [0xf9]
Successors: [0x10f, 0x4b0]
---
0x104 DUP1
0x105 PUSH4 0xdd62ed3e
0x10a EQ
0x10b PUSH2 0x4b0
0x10e JUMPI
---
0x105: V68 = 0xdd62ed3e
0x10a: V69 = EQ 0xdd62ed3e V10
0x10b: V70 = 0x4b0
0x10e: JUMPI 0x4b0 V69
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x10f]
---
Predecessors: [0x0, 0x104]
Successors: [0x110]
---
0x10f JUMPDEST
---
0x10f: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x110
[0x110:0x118]
---
Predecessors: [0x10f]
Successors: [0x4e7]
---
0x110 JUMPDEST
0x111 PUSH2 0x119
0x114 CALLER
0x115 PUSH2 0x4e7
0x118 JUMP
---
0x110: JUMPDEST 
0x111: V71 = 0x119
0x114: V72 = CALLER
0x115: V73 = 0x4e7
0x118: JUMP 0x4e7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x119, V72]
Exit stack: [V10, 0x119, V72]

================================

Block 0x119
[0x119:0x119]
---
Predecessors: [0x67b, 0x7b3, 0x935, 0xa6f, 0xca7]
Successors: [0x11a]
---
0x119 JUMPDEST
---
0x119: JUMPDEST 
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, S0]

================================

Block 0x11a
[0x11a:0x11b]
---
Predecessors: [0x119]
Successors: []
---
0x11a JUMPDEST
0x11b STOP
---
0x11a: JUMPDEST 
0x11b: STOP 
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, S0]

================================

Block 0x11c
[0x11c:0x122]
---
Predecessors: [0xb]
Successors: [0x123, 0x127]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11c: JUMPDEST 
0x11d: V74 = CALLVALUE
0x11e: V75 = ISZERO V74
0x11f: V76 = 0x127
0x122: JUMPI 0x127 V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11c]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V77 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x127
[0x127:0x12e]
---
Predecessors: [0x11c]
Successors: [0x680]
---
0x127 JUMPDEST
0x128 PUSH2 0x12f
0x12b PUSH2 0x680
0x12e JUMP
---
0x127: JUMPDEST 
0x128: V78 = 0x12f
0x12b: V79 = 0x680
0x12e: JUMP 0x680
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12f]
Exit stack: [V10, 0x12f]

================================

Block 0x12f
[0x12f:0x152]
---
Predecessors: [0x716]
Successors: [0x153]
---
0x12f JUMPDEST
0x130 PUSH1 0x40
0x132 MLOAD
0x133 PUSH1 0x20
0x135 DUP1
0x136 DUP3
0x137 MSTORE
0x138 DUP2
0x139 SWAP1
0x13a DUP2
0x13b ADD
0x13c DUP4
0x13d DUP2
0x13e DUP2
0x13f MLOAD
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP2
0x146 POP
0x147 DUP1
0x148 MLOAD
0x149 SWAP1
0x14a PUSH1 0x20
0x14c ADD
0x14d SWAP1
0x14e DUP1
0x14f DUP4
0x150 DUP4
0x151 PUSH1 0x0
---
0x12f: JUMPDEST 
0x130: V80 = 0x40
0x132: V81 = M[0x40]
0x133: V82 = 0x20
0x137: M[V81] = 0x20
0x13b: V83 = ADD V81 0x20
0x13f: V84 = M[S0]
0x141: M[V83] = V84
0x142: V85 = 0x20
0x144: V86 = ADD 0x20 V83
0x148: V87 = M[S0]
0x14a: V88 = 0x20
0x14c: V89 = ADD 0x20 S0
0x151: V90 = 0x0
---
Entry stack: [V10, 0x12f, S0]
Stack pops: 1
Stack additions: [S0, V81, V81, V86, V89, V87, V87, V86, V89, 0x0]
Exit stack: [V10, 0x12f, S0, V81, V81, V86, V89, V87, V87, V86, V89, 0x0]

================================

Block 0x153
[0x153:0x15b]
---
Predecessors: [0x12f, 0x164, 0x3c4]
Successors: [0x15c, 0x16c]
---
0x153 JUMPDEST
0x154 DUP4
0x155 DUP2
0x156 LT
0x157 ISZERO
0x158 PUSH2 0x16c
0x15b JUMPI
---
0x153: JUMPDEST 
0x156: V91 = LT S0 S3
0x157: V92 = ISZERO V91
0x158: V93 = 0x16c
0x15b: JUMPI 0x16c V92
---
Entry stack: [V10, 0x12f, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x12f, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x153]
Successors: [0x164]
---
0x15c DUP1
0x15d DUP3
0x15e ADD
0x15f MLOAD
0x160 DUP2
0x161 DUP5
0x162 ADD
0x163 MSTORE
---
0x15e: V94 = ADD S1 S0
0x15f: V95 = M[V94]
0x162: V96 = ADD S2 S0
0x163: M[V96] = V95
---
Entry stack: [V10, 0x12f, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x12f, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x15c]
Successors: [0x153]
---
0x164 JUMPDEST
0x165 PUSH1 0x20
0x167 ADD
0x168 PUSH2 0x153
0x16b JUMP
---
0x164: JUMPDEST 
0x165: V97 = 0x20
0x167: V98 = ADD 0x20 S0
0x168: V99 = 0x153
0x16b: JUMP 0x153
---
Entry stack: [V10, 0x12f, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V98]
Exit stack: [V10, 0x12f, S9, S8, S7, S6, S5, S4, S3, S2, S1, V98]

================================

Block 0x16c
[0x16c:0x17f]
---
Predecessors: [0x153, 0x3b3]
Successors: [0x180, 0x199]
---
0x16c JUMPDEST
0x16d POP
0x16e POP
0x16f POP
0x170 POP
0x171 SWAP1
0x172 POP
0x173 SWAP1
0x174 DUP2
0x175 ADD
0x176 SWAP1
0x177 PUSH1 0x1f
0x179 AND
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x199
0x17f JUMPI
---
0x16c: JUMPDEST 
0x175: V100 = ADD S4 S6
0x177: V101 = 0x1f
0x179: V102 = AND 0x1f S4
0x17b: V103 = ISZERO V102
0x17c: V104 = 0x199
0x17f: JUMPI 0x199 V103
---
Entry stack: [V10, 0x12f, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V100, V102]
Exit stack: [V10, 0x12f, S9, S8, S7, V100, V102]

================================

Block 0x180
[0x180:0x198]
---
Predecessors: [0x16c]
Successors: [0x199]
---
0x180 DUP1
0x181 DUP3
0x182 SUB
0x183 DUP1
0x184 MLOAD
0x185 PUSH1 0x1
0x187 DUP4
0x188 PUSH1 0x20
0x18a SUB
0x18b PUSH2 0x100
0x18e EXP
0x18f SUB
0x190 NOT
0x191 AND
0x192 DUP2
0x193 MSTORE
0x194 PUSH1 0x20
0x196 ADD
0x197 SWAP2
0x198 POP
---
0x182: V105 = SUB V100 V102
0x184: V106 = M[V105]
0x185: V107 = 0x1
0x188: V108 = 0x20
0x18a: V109 = SUB 0x20 V102
0x18b: V110 = 0x100
0x18e: V111 = EXP 0x100 V109
0x18f: V112 = SUB V111 0x1
0x190: V113 = NOT V112
0x191: V114 = AND V113 V106
0x193: M[V105] = V114
0x194: V115 = 0x20
0x196: V116 = ADD 0x20 V105
---
Entry stack: [V10, 0x12f, S4, S3, S2, V100, V102]
Stack pops: 2
Stack additions: [V116, S0]
Exit stack: [V10, 0x12f, S4, S3, S2, V116, V102]

================================

Block 0x199
[0x199:0x1a6]
---
Predecessors: [0x16c, 0x180, 0x3cc]
Successors: []
---
0x199 JUMPDEST
0x19a POP
0x19b SWAP3
0x19c POP
0x19d POP
0x19e POP
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 DUP1
0x1a3 SWAP2
0x1a4 SUB
0x1a5 SWAP1
0x1a6 RETURN
---
0x199: JUMPDEST 
0x19f: V117 = 0x40
0x1a1: V118 = M[0x40]
0x1a4: V119 = SUB S1 V118
0x1a6: RETURN V118 V119
---
Entry stack: [V10, 0x12f, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x12f]

================================

Block 0x1a7
[0x1a7:0x1ad]
---
Predecessors: [0x3e]
Successors: [0x1ae, 0x1b2]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V120 = CALLVALUE
0x1a9: V121 = ISZERO V120
0x1aa: V122 = 0x1b2
0x1ad: JUMPI 0x1b2 V121
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V123 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b2
[0x1b2:0x1c8]
---
Predecessors: [0x1a7]
Successors: [0x71e]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x119
0x1b6 PUSH1 0x1
0x1b8 PUSH1 0xa0
0x1ba PUSH1 0x2
0x1bc EXP
0x1bd SUB
0x1be PUSH1 0x4
0x1c0 CALLDATALOAD
0x1c1 AND
0x1c2 PUSH1 0x24
0x1c4 CALLDATALOAD
0x1c5 PUSH2 0x71e
0x1c8 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V124 = 0x119
0x1b6: V125 = 0x1
0x1b8: V126 = 0xa0
0x1ba: V127 = 0x2
0x1bc: V128 = EXP 0x2 0xa0
0x1bd: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V130 = 0x4
0x1c0: V131 = CALLDATALOAD 0x4
0x1c1: V132 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V133 = 0x24
0x1c4: V134 = CALLDATALOAD 0x24
0x1c5: V135 = 0x71e
0x1c8: JUMP 0x71e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x119, V132, V134]
Exit stack: [V10, 0x119, V132, V134]

================================

Block 0x1c9
[0x1c9:0x1ca]
---
Predecessors: []
Successors: []
---
0x1c9 JUMPDEST
0x1ca STOP
---
0x1c9: JUMPDEST 
0x1ca: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x49]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V136 = CALLVALUE
0x1cd: V137 = ISZERO V136
0x1ce: V138 = 0x1d6
0x1d1: JUMPI 0x1d6 V137
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V139 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x1cb]
Successors: [0x7b7]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x1de
0x1da PUSH2 0x7b7
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V140 = 0x1de
0x1da: V141 = 0x7b7
0x1dd: JUMP 0x7b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x1de
[0x1de:0x1ef]
---
Predecessors: [0x7bb, 0x7be, 0x93a, 0x940, 0x946, 0xa8d, 0xa92, 0xa98, 0xcab, 0xcb1, 0xcde]
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH1 0x20
0x1e7 ADD
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec SWAP2
0x1ed SUB
0x1ee SWAP1
0x1ef RETURN
---
0x1de: JUMPDEST 
0x1df: V142 = 0x40
0x1e1: V143 = M[0x40]
0x1e4: M[V143] = S0
0x1e5: V144 = 0x20
0x1e7: V145 = ADD 0x20 V143
0x1e8: V146 = 0x40
0x1ea: V147 = M[0x40]
0x1ed: V148 = SUB V145 V147
0x1ef: RETURN V147 V148
---
Entry stack: [V10, 0x119, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x119, S4, S3, S2, S1]

================================

Block 0x1f0
[0x1f0:0x1f6]
---
Predecessors: [0x54]
Successors: [0x1f7, 0x1fb]
---
0x1f0 JUMPDEST
0x1f1 CALLVALUE
0x1f2 ISZERO
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V149 = CALLVALUE
0x1f2: V150 = ISZERO V149
0x1f3: V151 = 0x1fb
0x1f6: JUMPI 0x1fb V150
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1f0]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa REVERT
---
0x1f7: V152 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fb
[0x1fb:0x202]
---
Predecessors: [0x1f0]
Successors: [0x7be]
---
0x1fb JUMPDEST
0x1fc PUSH2 0x1de
0x1ff PUSH2 0x7be
0x202 JUMP
---
0x1fb: JUMPDEST 
0x1fc: V153 = 0x1de
0x1ff: V154 = 0x7be
0x202: JUMP 0x7be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x203
[0x203:0x214]
---
Predecessors: []
Successors: []
---
0x203 JUMPDEST
0x204 PUSH1 0x40
0x206 MLOAD
0x207 SWAP1
0x208 DUP2
0x209 MSTORE
0x20a PUSH1 0x20
0x20c ADD
0x20d PUSH1 0x40
0x20f MLOAD
0x210 DUP1
0x211 SWAP2
0x212 SUB
0x213 SWAP1
0x214 RETURN
---
0x203: JUMPDEST 
0x204: V155 = 0x40
0x206: V156 = M[0x40]
0x209: M[V156] = S0
0x20a: V157 = 0x20
0x20c: V158 = ADD 0x20 V156
0x20d: V159 = 0x40
0x20f: V160 = M[0x40]
0x212: V161 = SUB V158 V160
0x214: RETURN V160 V161
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x215
[0x215:0x21b]
---
Predecessors: [0x5f]
Successors: [0x21c, 0x220]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 ISZERO
0x218 PUSH2 0x220
0x21b JUMPI
---
0x215: JUMPDEST 
0x216: V162 = CALLVALUE
0x217: V163 = ISZERO V162
0x218: V164 = 0x220
0x21b: JUMPI 0x220 V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21c
[0x21c:0x21f]
---
Predecessors: [0x215]
Successors: []
---
0x21c PUSH1 0x0
0x21e DUP1
0x21f REVERT
---
0x21c: V165 = 0x0
0x21f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x220
[0x220:0x23c]
---
Predecessors: [0x215]
Successors: [0x7c4]
---
0x220 JUMPDEST
0x221 PUSH2 0x119
0x224 PUSH1 0x1
0x226 PUSH1 0xa0
0x228 PUSH1 0x2
0x22a EXP
0x22b SUB
0x22c PUSH1 0x4
0x22e CALLDATALOAD
0x22f DUP2
0x230 AND
0x231 SWAP1
0x232 PUSH1 0x24
0x234 CALLDATALOAD
0x235 AND
0x236 PUSH1 0x44
0x238 CALLDATALOAD
0x239 PUSH2 0x7c4
0x23c JUMP
---
0x220: JUMPDEST 
0x221: V166 = 0x119
0x224: V167 = 0x1
0x226: V168 = 0xa0
0x228: V169 = 0x2
0x22a: V170 = EXP 0x2 0xa0
0x22b: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22c: V172 = 0x4
0x22e: V173 = CALLDATALOAD 0x4
0x230: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x232: V175 = 0x24
0x234: V176 = CALLDATALOAD 0x24
0x235: V177 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x236: V178 = 0x44
0x238: V179 = CALLDATALOAD 0x44
0x239: V180 = 0x7c4
0x23c: JUMP 0x7c4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x119, V174, V177, V179]
Exit stack: [V10, 0x119, V174, V177, V179]

================================

Block 0x23d
[0x23d:0x23e]
---
Predecessors: []
Successors: []
---
0x23d JUMPDEST
0x23e STOP
---
0x23d: JUMPDEST 
0x23e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23f
[0x23f:0x245]
---
Predecessors: [0x6a]
Successors: [0x246, 0x24a]
---
0x23f JUMPDEST
0x240 CALLVALUE
0x241 ISZERO
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x23f: JUMPDEST 
0x240: V181 = CALLVALUE
0x241: V182 = ISZERO V181
0x242: V183 = 0x24a
0x245: JUMPI 0x24a V182
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x23f]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V184 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24a
[0x24a:0x251]
---
Predecessors: [0x23f]
Successors: [0x93a]
---
0x24a JUMPDEST
0x24b PUSH2 0x1de
0x24e PUSH2 0x93a
0x251 JUMP
---
0x24a: JUMPDEST 
0x24b: V185 = 0x1de
0x24e: V186 = 0x93a
0x251: JUMP 0x93a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x252
[0x252:0x263]
---
Predecessors: []
Successors: []
---
0x252 JUMPDEST
0x253 PUSH1 0x40
0x255 MLOAD
0x256 SWAP1
0x257 DUP2
0x258 MSTORE
0x259 PUSH1 0x20
0x25b ADD
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 SWAP2
0x261 SUB
0x262 SWAP1
0x263 RETURN
---
0x252: JUMPDEST 
0x253: V187 = 0x40
0x255: V188 = M[0x40]
0x258: M[V188] = S0
0x259: V189 = 0x20
0x25b: V190 = ADD 0x20 V188
0x25c: V191 = 0x40
0x25e: V192 = M[0x40]
0x261: V193 = SUB V190 V192
0x263: RETURN V192 V193
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x264
[0x264:0x26a]
---
Predecessors: [0x75]
Successors: [0x26b, 0x26f]
---
0x264 JUMPDEST
0x265 CALLVALUE
0x266 ISZERO
0x267 PUSH2 0x26f
0x26a JUMPI
---
0x264: JUMPDEST 
0x265: V194 = CALLVALUE
0x266: V195 = ISZERO V194
0x267: V196 = 0x26f
0x26a: JUMPI 0x26f V195
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26b
[0x26b:0x26e]
---
Predecessors: [0x264]
Successors: []
---
0x26b PUSH1 0x0
0x26d DUP1
0x26e REVERT
---
0x26b: V197 = 0x0
0x26e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26f
[0x26f:0x276]
---
Predecessors: [0x264]
Successors: [0x940]
---
0x26f JUMPDEST
0x270 PUSH2 0x1de
0x273 PUSH2 0x940
0x276 JUMP
---
0x26f: JUMPDEST 
0x270: V198 = 0x1de
0x273: V199 = 0x940
0x276: JUMP 0x940
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x277
[0x277:0x288]
---
Predecessors: []
Successors: []
---
0x277 JUMPDEST
0x278 PUSH1 0x40
0x27a MLOAD
0x27b SWAP1
0x27c DUP2
0x27d MSTORE
0x27e PUSH1 0x20
0x280 ADD
0x281 PUSH1 0x40
0x283 MLOAD
0x284 DUP1
0x285 SWAP2
0x286 SUB
0x287 SWAP1
0x288 RETURN
---
0x277: JUMPDEST 
0x278: V200 = 0x40
0x27a: V201 = M[0x40]
0x27d: M[V201] = S0
0x27e: V202 = 0x20
0x280: V203 = ADD 0x20 V201
0x281: V204 = 0x40
0x283: V205 = M[0x40]
0x286: V206 = SUB V203 V205
0x288: RETURN V205 V206
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x289
[0x289:0x28f]
---
Predecessors: [0x80]
Successors: [0x290, 0x294]
---
0x289 JUMPDEST
0x28a CALLVALUE
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x289: JUMPDEST 
0x28a: V207 = CALLVALUE
0x28b: V208 = ISZERO V207
0x28c: V209 = 0x294
0x28f: JUMPI 0x294 V208
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x289]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V210 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0x289]
Successors: [0x946]
---
0x294 JUMPDEST
0x295 PUSH2 0x1de
0x298 PUSH2 0x946
0x29b JUMP
---
0x294: JUMPDEST 
0x295: V211 = 0x1de
0x298: V212 = 0x946
0x29b: JUMP 0x946
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x29c
[0x29c:0x2ad]
---
Predecessors: []
Successors: []
---
0x29c JUMPDEST
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 SWAP1
0x2a1 DUP2
0x2a2 MSTORE
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 PUSH1 0x40
0x2a8 MLOAD
0x2a9 DUP1
0x2aa SWAP2
0x2ab SUB
0x2ac SWAP1
0x2ad RETURN
---
0x29c: JUMPDEST 
0x29d: V213 = 0x40
0x29f: V214 = M[0x40]
0x2a2: M[V214] = S0
0x2a3: V215 = 0x20
0x2a5: V216 = ADD 0x20 V214
0x2a6: V217 = 0x40
0x2a8: V218 = M[0x40]
0x2ab: V219 = SUB V216 V218
0x2ad: RETURN V218 V219
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ae
[0x2ae:0x2b4]
---
Predecessors: [0x8b]
Successors: [0x2b5, 0x2b9]
---
0x2ae JUMPDEST
0x2af CALLVALUE
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2ae: JUMPDEST 
0x2af: V220 = CALLVALUE
0x2b0: V221 = ISZERO V220
0x2b1: V222 = 0x2b9
0x2b4: JUMPI 0x2b9 V221
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2ae]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V223 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b9
[0x2b9:0x2cf]
---
Predecessors: [0x2ae]
Successors: [0x94c]
---
0x2b9 JUMPDEST
0x2ba PUSH2 0x119
0x2bd PUSH1 0x1
0x2bf PUSH1 0xa0
0x2c1 PUSH1 0x2
0x2c3 EXP
0x2c4 SUB
0x2c5 PUSH1 0x4
0x2c7 CALLDATALOAD
0x2c8 AND
0x2c9 PUSH1 0x24
0x2cb CALLDATALOAD
0x2cc PUSH2 0x94c
0x2cf JUMP
---
0x2b9: JUMPDEST 
0x2ba: V224 = 0x119
0x2bd: V225 = 0x1
0x2bf: V226 = 0xa0
0x2c1: V227 = 0x2
0x2c3: V228 = EXP 0x2 0xa0
0x2c4: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c5: V230 = 0x4
0x2c7: V231 = CALLDATALOAD 0x4
0x2c8: V232 = AND V231 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V233 = 0x24
0x2cb: V234 = CALLDATALOAD 0x24
0x2cc: V235 = 0x94c
0x2cf: JUMP 0x94c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x119, V232, V234]
Exit stack: [V10, 0x119, V232, V234]

================================

Block 0x2d0
[0x2d0:0x2d1]
---
Predecessors: []
Successors: []
---
0x2d0 JUMPDEST
0x2d1 STOP
---
0x2d0: JUMPDEST 
0x2d1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d2
[0x2d2:0x2d8]
---
Predecessors: [0x96]
Successors: [0x2d9, 0x2dd]
---
0x2d2 JUMPDEST
0x2d3 CALLVALUE
0x2d4 ISZERO
0x2d5 PUSH2 0x2dd
0x2d8 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V236 = CALLVALUE
0x2d4: V237 = ISZERO V236
0x2d5: V238 = 0x2dd
0x2d8: JUMPI 0x2dd V237
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d9
[0x2d9:0x2dc]
---
Predecessors: [0x2d2]
Successors: []
---
0x2d9 PUSH1 0x0
0x2db DUP1
0x2dc REVERT
---
0x2d9: V239 = 0x0
0x2dc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2dd
[0x2dd:0x2f0]
---
Predecessors: [0x2d2]
Successors: [0xa73]
---
0x2dd JUMPDEST
0x2de PUSH2 0x1de
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 PUSH1 0x4
0x2eb CALLDATALOAD
0x2ec AND
0x2ed PUSH2 0xa73
0x2f0 JUMP
---
0x2dd: JUMPDEST 
0x2de: V240 = 0x1de
0x2e1: V241 = 0x1
0x2e3: V242 = 0xa0
0x2e5: V243 = 0x2
0x2e7: V244 = EXP 0x2 0xa0
0x2e8: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e9: V246 = 0x4
0x2eb: V247 = CALLDATALOAD 0x4
0x2ec: V248 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: V249 = 0xa73
0x2f0: JUMP 0xa73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de, V248]
Exit stack: [V10, 0x1de, V248]

================================

Block 0x2f1
[0x2f1:0x302]
---
Predecessors: []
Successors: []
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 SWAP1
0x2f6 DUP2
0x2f7 MSTORE
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb PUSH1 0x40
0x2fd MLOAD
0x2fe DUP1
0x2ff SWAP2
0x300 SUB
0x301 SWAP1
0x302 RETURN
---
0x2f1: JUMPDEST 
0x2f2: V250 = 0x40
0x2f4: V251 = M[0x40]
0x2f7: M[V251] = S0
0x2f8: V252 = 0x20
0x2fa: V253 = ADD 0x20 V251
0x2fb: V254 = 0x40
0x2fd: V255 = M[0x40]
0x300: V256 = SUB V253 V255
0x302: RETURN V255 V256
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x303
[0x303:0x309]
---
Predecessors: [0xa1]
Successors: [0x30a, 0x30e]
---
0x303 JUMPDEST
0x304 CALLVALUE
0x305 ISZERO
0x306 PUSH2 0x30e
0x309 JUMPI
---
0x303: JUMPDEST 
0x304: V257 = CALLVALUE
0x305: V258 = ISZERO V257
0x306: V259 = 0x30e
0x309: JUMPI 0x30e V258
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30a
[0x30a:0x30d]
---
Predecessors: [0x303]
Successors: []
---
0x30a PUSH1 0x0
0x30c DUP1
0x30d REVERT
---
0x30a: V260 = 0x0
0x30d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30e
[0x30e:0x315]
---
Predecessors: [0x303]
Successors: [0xa92]
---
0x30e JUMPDEST
0x30f PUSH2 0x1de
0x312 PUSH2 0xa92
0x315 JUMP
---
0x30e: JUMPDEST 
0x30f: V261 = 0x1de
0x312: V262 = 0xa92
0x315: JUMP 0xa92
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x316
[0x316:0x327]
---
Predecessors: []
Successors: []
---
0x316 JUMPDEST
0x317 PUSH1 0x40
0x319 MLOAD
0x31a SWAP1
0x31b DUP2
0x31c MSTORE
0x31d PUSH1 0x20
0x31f ADD
0x320 PUSH1 0x40
0x322 MLOAD
0x323 DUP1
0x324 SWAP2
0x325 SUB
0x326 SWAP1
0x327 RETURN
---
0x316: JUMPDEST 
0x317: V263 = 0x40
0x319: V264 = M[0x40]
0x31c: M[V264] = S0
0x31d: V265 = 0x20
0x31f: V266 = ADD 0x20 V264
0x320: V267 = 0x40
0x322: V268 = M[0x40]
0x325: V269 = SUB V266 V268
0x327: RETURN V268 V269
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x328
[0x328:0x32e]
---
Predecessors: [0xac]
Successors: [0x32f, 0x333]
---
0x328 JUMPDEST
0x329 CALLVALUE
0x32a ISZERO
0x32b PUSH2 0x333
0x32e JUMPI
---
0x328: JUMPDEST 
0x329: V270 = CALLVALUE
0x32a: V271 = ISZERO V270
0x32b: V272 = 0x333
0x32e: JUMPI 0x333 V271
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32f
[0x32f:0x332]
---
Predecessors: [0x328]
Successors: []
---
0x32f PUSH1 0x0
0x331 DUP1
0x332 REVERT
---
0x32f: V273 = 0x0
0x332: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x333
[0x333:0x33a]
---
Predecessors: [0x328]
Successors: [0xa98]
---
0x333 JUMPDEST
0x334 PUSH2 0x1de
0x337 PUSH2 0xa98
0x33a JUMP
---
0x333: JUMPDEST 
0x334: V274 = 0x1de
0x337: V275 = 0xa98
0x33a: JUMP 0xa98
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x33b
[0x33b:0x34c]
---
Predecessors: []
Successors: []
---
0x33b JUMPDEST
0x33c PUSH1 0x40
0x33e MLOAD
0x33f SWAP1
0x340 DUP2
0x341 MSTORE
0x342 PUSH1 0x20
0x344 ADD
0x345 PUSH1 0x40
0x347 MLOAD
0x348 DUP1
0x349 SWAP2
0x34a SUB
0x34b SWAP1
0x34c RETURN
---
0x33b: JUMPDEST 
0x33c: V276 = 0x40
0x33e: V277 = M[0x40]
0x341: M[V277] = S0
0x342: V278 = 0x20
0x344: V279 = ADD 0x20 V277
0x345: V280 = 0x40
0x347: V281 = M[0x40]
0x34a: V282 = SUB V279 V281
0x34c: RETURN V281 V282
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x34d
[0x34d:0x353]
---
Predecessors: [0xb7]
Successors: [0x354, 0x358]
---
0x34d JUMPDEST
0x34e CALLVALUE
0x34f ISZERO
0x350 PUSH2 0x358
0x353 JUMPI
---
0x34d: JUMPDEST 
0x34e: V283 = CALLVALUE
0x34f: V284 = ISZERO V283
0x350: V285 = 0x358
0x353: JUMPI 0x358 V284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x354
[0x354:0x357]
---
Predecessors: [0x34d]
Successors: []
---
0x354 PUSH1 0x0
0x356 DUP1
0x357 REVERT
---
0x354: V286 = 0x0
0x357: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x358
[0x358:0x35f]
---
Predecessors: [0x34d]
Successors: [0xa9e]
---
0x358 JUMPDEST
0x359 PUSH2 0x360
0x35c PUSH2 0xa9e
0x35f JUMP
---
0x358: JUMPDEST 
0x359: V287 = 0x360
0x35c: V288 = 0xa9e
0x35f: JUMP 0xa9e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360]
Exit stack: [V10, 0x360]

================================

Block 0x360
[0x360:0x37b]
---
Predecessors: [0xa9e]
Successors: []
---
0x360 JUMPDEST
0x361 PUSH1 0x40
0x363 MLOAD
0x364 PUSH1 0x1
0x366 PUSH1 0xa0
0x368 PUSH1 0x2
0x36a EXP
0x36b SUB
0x36c SWAP1
0x36d SWAP2
0x36e AND
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x20
0x373 ADD
0x374 PUSH1 0x40
0x376 MLOAD
0x377 DUP1
0x378 SWAP2
0x379 SUB
0x37a SWAP1
0x37b RETURN
---
0x360: JUMPDEST 
0x361: V289 = 0x40
0x363: V290 = M[0x40]
0x364: V291 = 0x1
0x366: V292 = 0xa0
0x368: V293 = 0x2
0x36a: V294 = EXP 0x2 0xa0
0x36b: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36e: V296 = AND V949 0xffffffffffffffffffffffffffffffffffffffff
0x370: M[V290] = V296
0x371: V297 = 0x20
0x373: V298 = ADD 0x20 V290
0x374: V299 = 0x40
0x376: V300 = M[0x40]
0x379: V301 = SUB V298 V300
0x37b: RETURN V300 V301
---
Entry stack: [V10, 0x360, V949]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x360]

================================

Block 0x37c
[0x37c:0x382]
---
Predecessors: [0xc2]
Successors: [0x383, 0x387]
---
0x37c JUMPDEST
0x37d CALLVALUE
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x37c: JUMPDEST 
0x37d: V302 = CALLVALUE
0x37e: V303 = ISZERO V302
0x37f: V304 = 0x387
0x382: JUMPI 0x387 V303
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x37c]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V305 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x387
[0x387:0x38e]
---
Predecessors: [0x37c]
Successors: [0xaad]
---
0x387 JUMPDEST
0x388 PUSH2 0x12f
0x38b PUSH2 0xaad
0x38e JUMP
---
0x387: JUMPDEST 
0x388: V306 = 0x12f
0x38b: V307 = 0xaad
0x38e: JUMP 0xaad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12f]
Exit stack: [V10, 0x12f]

================================

Block 0x38f
[0x38f:0x3b2]
---
Predecessors: []
Successors: [0x3b3]
---
0x38f JUMPDEST
0x390 PUSH1 0x40
0x392 MLOAD
0x393 PUSH1 0x20
0x395 DUP1
0x396 DUP3
0x397 MSTORE
0x398 DUP2
0x399 SWAP1
0x39a DUP2
0x39b ADD
0x39c DUP4
0x39d DUP2
0x39e DUP2
0x39f MLOAD
0x3a0 DUP2
0x3a1 MSTORE
0x3a2 PUSH1 0x20
0x3a4 ADD
0x3a5 SWAP2
0x3a6 POP
0x3a7 DUP1
0x3a8 MLOAD
0x3a9 SWAP1
0x3aa PUSH1 0x20
0x3ac ADD
0x3ad SWAP1
0x3ae DUP1
0x3af DUP4
0x3b0 DUP4
0x3b1 PUSH1 0x0
---
0x38f: JUMPDEST 
0x390: V308 = 0x40
0x392: V309 = M[0x40]
0x393: V310 = 0x20
0x397: M[V309] = 0x20
0x39b: V311 = ADD V309 0x20
0x39f: V312 = M[S0]
0x3a1: M[V311] = V312
0x3a2: V313 = 0x20
0x3a4: V314 = ADD 0x20 V311
0x3a8: V315 = M[S0]
0x3aa: V316 = 0x20
0x3ac: V317 = ADD 0x20 S0
0x3b1: V318 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V309, V309, V314, V317, V315, V315, V314, V317, 0x0]
Exit stack: [S0, V309, V309, V314, V317, V315, V315, V314, V317, 0x0]

================================

Block 0x3b3
[0x3b3:0x3bb]
---
Predecessors: [0x38f]
Successors: [0x16c, 0x3bc]
---
0x3b3 JUMPDEST
0x3b4 DUP4
0x3b5 DUP2
0x3b6 LT
0x3b7 ISZERO
0x3b8 PUSH2 0x16c
0x3bb JUMPI
---
0x3b3: JUMPDEST 
0x3b6: V319 = LT 0x0 V315
0x3b7: V320 = ISZERO V319
0x3b8: V321 = 0x16c
0x3bb: JUMPI 0x16c V320
---
Entry stack: [S9, V309, V309, V314, V317, V315, V315, V314, V317, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V309, V309, V314, V317, V315, V315, V314, V317, 0x0]

================================

Block 0x3bc
[0x3bc:0x3c3]
---
Predecessors: [0x3b3]
Successors: [0x3c4]
---
0x3bc DUP1
0x3bd DUP3
0x3be ADD
0x3bf MLOAD
0x3c0 DUP2
0x3c1 DUP5
0x3c2 ADD
0x3c3 MSTORE
---
0x3be: V322 = ADD V317 0x0
0x3bf: V323 = M[V322]
0x3c2: V324 = ADD V314 0x0
0x3c3: M[V324] = V323
---
Entry stack: [S9, V309, V309, V314, V317, V315, V315, V314, V317, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V309, V309, V314, V317, V315, V315, V314, V317, 0x0]

================================

Block 0x3c4
[0x3c4:0x3cb]
---
Predecessors: [0x3bc]
Successors: [0x153]
---
0x3c4 JUMPDEST
0x3c5 PUSH1 0x20
0x3c7 ADD
0x3c8 PUSH2 0x153
0x3cb JUMP
---
0x3c4: JUMPDEST 
0x3c5: V325 = 0x20
0x3c7: V326 = ADD 0x20 0x0
0x3c8: V327 = 0x153
0x3cb: JUMP 0x153
---
Entry stack: [S9, V309, V309, V314, V317, V315, V315, V314, V317, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V309, V309, V314, V317, V315, V315, V314, V317, 0x20]

================================

Block 0x3cc
[0x3cc:0x3df]
---
Predecessors: []
Successors: [0x199, 0x3e0]
---
0x3cc JUMPDEST
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 SWAP1
0x3d2 POP
0x3d3 SWAP1
0x3d4 DUP2
0x3d5 ADD
0x3d6 SWAP1
0x3d7 PUSH1 0x1f
0x3d9 AND
0x3da DUP1
0x3db ISZERO
0x3dc PUSH2 0x199
0x3df JUMPI
---
0x3cc: JUMPDEST 
0x3d5: V328 = ADD S4 S6
0x3d7: V329 = 0x1f
0x3d9: V330 = AND 0x1f S4
0x3db: V331 = ISZERO V330
0x3dc: V332 = 0x199
0x3df: JUMPI 0x199 V331
---
Entry stack: []
Stack pops: 7
Stack additions: [V328, V330]
Exit stack: [V328, V330]

================================

Block 0x3e0
[0x3e0:0x3f8]
---
Predecessors: [0x3cc]
Successors: [0x3f9]
---
0x3e0 DUP1
0x3e1 DUP3
0x3e2 SUB
0x3e3 DUP1
0x3e4 MLOAD
0x3e5 PUSH1 0x1
0x3e7 DUP4
0x3e8 PUSH1 0x20
0x3ea SUB
0x3eb PUSH2 0x100
0x3ee EXP
0x3ef SUB
0x3f0 NOT
0x3f1 AND
0x3f2 DUP2
0x3f3 MSTORE
0x3f4 PUSH1 0x20
0x3f6 ADD
0x3f7 SWAP2
0x3f8 POP
---
0x3e2: V333 = SUB V328 V330
0x3e4: V334 = M[V333]
0x3e5: V335 = 0x1
0x3e8: V336 = 0x20
0x3ea: V337 = SUB 0x20 V330
0x3eb: V338 = 0x100
0x3ee: V339 = EXP 0x100 V337
0x3ef: V340 = SUB V339 0x1
0x3f0: V341 = NOT V340
0x3f1: V342 = AND V341 V334
0x3f3: M[V333] = V342
0x3f4: V343 = 0x20
0x3f6: V344 = ADD 0x20 V333
---
Entry stack: [V328, V330]
Stack pops: 2
Stack additions: [V344, S0]
Exit stack: [V344, V330]

================================

Block 0x3f9
[0x3f9:0x406]
---
Predecessors: [0x3e0]
Successors: []
---
0x3f9 JUMPDEST
0x3fa POP
0x3fb SWAP3
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP1
0x403 SWAP2
0x404 SUB
0x405 SWAP1
0x406 RETURN
---
0x3f9: JUMPDEST 
0x3ff: V345 = 0x40
0x401: V346 = M[0x40]
0x404: V347 = SUB V344 V346
0x406: RETURN V346 V347
---
Entry stack: [V344, V330]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x407
[0x407:0x40d]
---
Predecessors: [0xcd]
Successors: [0x40e, 0x412]
---
0x407 JUMPDEST
0x408 CALLVALUE
0x409 ISZERO
0x40a PUSH2 0x412
0x40d JUMPI
---
0x407: JUMPDEST 
0x408: V348 = CALLVALUE
0x409: V349 = ISZERO V348
0x40a: V350 = 0x412
0x40d: JUMPI 0x412 V349
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x40e
[0x40e:0x411]
---
Predecessors: [0x407]
Successors: []
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
---
0x40e: V351 = 0x0
0x411: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x412
[0x412:0x419]
---
Predecessors: [0x407]
Successors: [0xb4b]
---
0x412 JUMPDEST
0x413 PUSH2 0x1de
0x416 PUSH2 0xb4b
0x419 JUMP
---
0x412: JUMPDEST 
0x413: V352 = 0x1de
0x416: V353 = 0xb4b
0x419: JUMP 0xb4b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x41a
[0x41a:0x42b]
---
Predecessors: []
Successors: []
---
0x41a JUMPDEST
0x41b PUSH1 0x40
0x41d MLOAD
0x41e SWAP1
0x41f DUP2
0x420 MSTORE
0x421 PUSH1 0x20
0x423 ADD
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 SWAP2
0x429 SUB
0x42a SWAP1
0x42b RETURN
---
0x41a: JUMPDEST 
0x41b: V354 = 0x40
0x41d: V355 = M[0x40]
0x420: M[V355] = S0
0x421: V356 = 0x20
0x423: V357 = ADD 0x20 V355
0x424: V358 = 0x40
0x426: V359 = M[0x40]
0x429: V360 = SUB V357 V359
0x42b: RETURN V359 V360
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x42c
[0x42c:0x432]
---
Predecessors: [0xd8]
Successors: [0x433, 0x437]
---
0x42c JUMPDEST
0x42d CALLVALUE
0x42e ISZERO
0x42f PUSH2 0x437
0x432 JUMPI
---
0x42c: JUMPDEST 
0x42d: V361 = CALLVALUE
0x42e: V362 = ISZERO V361
0x42f: V363 = 0x437
0x432: JUMPI 0x437 V362
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x433
[0x433:0x436]
---
Predecessors: [0x42c]
Successors: []
---
0x433 PUSH1 0x0
0x435 DUP1
0x436 REVERT
---
0x433: V364 = 0x0
0x436: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x437
[0x437:0x44d]
---
Predecessors: [0x42c]
Successors: [0xbbc]
---
0x437 JUMPDEST
0x438 PUSH2 0x119
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 PUSH1 0x4
0x445 CALLDATALOAD
0x446 AND
0x447 PUSH1 0x24
0x449 CALLDATALOAD
0x44a PUSH2 0xbbc
0x44d JUMP
---
0x437: JUMPDEST 
0x438: V365 = 0x119
0x43b: V366 = 0x1
0x43d: V367 = 0xa0
0x43f: V368 = 0x2
0x441: V369 = EXP 0x2 0xa0
0x442: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x443: V371 = 0x4
0x445: V372 = CALLDATALOAD 0x4
0x446: V373 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x447: V374 = 0x24
0x449: V375 = CALLDATALOAD 0x24
0x44a: V376 = 0xbbc
0x44d: JUMP 0xbbc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x119, V373, V375]
Exit stack: [V10, 0x119, V373, V375]

================================

Block 0x44e
[0x44e:0x44f]
---
Predecessors: []
Successors: []
---
0x44e JUMPDEST
0x44f STOP
---
0x44e: JUMPDEST 
0x44f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x450
[0x450:0x456]
---
Predecessors: [0xe3]
Successors: [0x457, 0x45b]
---
0x450 JUMPDEST
0x451 CALLVALUE
0x452 ISZERO
0x453 PUSH2 0x45b
0x456 JUMPI
---
0x450: JUMPDEST 
0x451: V377 = CALLVALUE
0x452: V378 = ISZERO V377
0x453: V379 = 0x45b
0x456: JUMPI 0x45b V378
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x457
[0x457:0x45a]
---
Predecessors: [0x450]
Successors: []
---
0x457 PUSH1 0x0
0x459 DUP1
0x45a REVERT
---
0x457: V380 = 0x0
0x45a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45b
[0x45b:0x462]
---
Predecessors: [0x450]
Successors: [0xcab]
---
0x45b JUMPDEST
0x45c PUSH2 0x1de
0x45f PUSH2 0xcab
0x462 JUMP
---
0x45b: JUMPDEST 
0x45c: V381 = 0x1de
0x45f: V382 = 0xcab
0x462: JUMP 0xcab
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x463
[0x463:0x474]
---
Predecessors: []
Successors: []
---
0x463 JUMPDEST
0x464 PUSH1 0x40
0x466 MLOAD
0x467 SWAP1
0x468 DUP2
0x469 MSTORE
0x46a PUSH1 0x20
0x46c ADD
0x46d PUSH1 0x40
0x46f MLOAD
0x470 DUP1
0x471 SWAP2
0x472 SUB
0x473 SWAP1
0x474 RETURN
---
0x463: JUMPDEST 
0x464: V383 = 0x40
0x466: V384 = M[0x40]
0x469: M[V384] = S0
0x46a: V385 = 0x20
0x46c: V386 = ADD 0x20 V384
0x46d: V387 = 0x40
0x46f: V388 = M[0x40]
0x472: V389 = SUB V386 V388
0x474: RETURN V388 V389
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x475
[0x475:0x488]
---
Predecessors: [0xee]
Successors: [0x4e7]
---
0x475 JUMPDEST
0x476 PUSH2 0x119
0x479 PUSH1 0x1
0x47b PUSH1 0xa0
0x47d PUSH1 0x2
0x47f EXP
0x480 SUB
0x481 PUSH1 0x4
0x483 CALLDATALOAD
0x484 AND
0x485 PUSH2 0x4e7
0x488 JUMP
---
0x475: JUMPDEST 
0x476: V390 = 0x119
0x479: V391 = 0x1
0x47b: V392 = 0xa0
0x47d: V393 = 0x2
0x47f: V394 = EXP 0x2 0xa0
0x480: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x481: V396 = 0x4
0x483: V397 = CALLDATALOAD 0x4
0x484: V398 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x485: V399 = 0x4e7
0x488: JUMP 0x4e7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x119, V398]
Exit stack: [V10, 0x119, V398]

================================

Block 0x489
[0x489:0x48a]
---
Predecessors: []
Successors: []
---
0x489 JUMPDEST
0x48a STOP
---
0x489: JUMPDEST 
0x48a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x48b
[0x48b:0x491]
---
Predecessors: [0xf9]
Successors: [0x492, 0x496]
---
0x48b JUMPDEST
0x48c CALLVALUE
0x48d ISZERO
0x48e PUSH2 0x496
0x491 JUMPI
---
0x48b: JUMPDEST 
0x48c: V400 = CALLVALUE
0x48d: V401 = ISZERO V400
0x48e: V402 = 0x496
0x491: JUMPI 0x496 V401
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x492
[0x492:0x495]
---
Predecessors: [0x48b]
Successors: []
---
0x492 PUSH1 0x0
0x494 DUP1
0x495 REVERT
---
0x492: V403 = 0x0
0x495: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x496
[0x496:0x49d]
---
Predecessors: [0x48b]
Successors: [0xcb1]
---
0x496 JUMPDEST
0x497 PUSH2 0x1de
0x49a PUSH2 0xcb1
0x49d JUMP
---
0x496: JUMPDEST 
0x497: V404 = 0x1de
0x49a: V405 = 0xcb1
0x49d: JUMP 0xcb1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x49e
[0x49e:0x4af]
---
Predecessors: []
Successors: []
---
0x49e JUMPDEST
0x49f PUSH1 0x40
0x4a1 MLOAD
0x4a2 SWAP1
0x4a3 DUP2
0x4a4 MSTORE
0x4a5 PUSH1 0x20
0x4a7 ADD
0x4a8 PUSH1 0x40
0x4aa MLOAD
0x4ab DUP1
0x4ac SWAP2
0x4ad SUB
0x4ae SWAP1
0x4af RETURN
---
0x49e: JUMPDEST 
0x49f: V406 = 0x40
0x4a1: V407 = M[0x40]
0x4a4: M[V407] = S0
0x4a5: V408 = 0x20
0x4a7: V409 = ADD 0x20 V407
0x4a8: V410 = 0x40
0x4aa: V411 = M[0x40]
0x4ad: V412 = SUB V409 V411
0x4af: RETURN V411 V412
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4b0
[0x4b0:0x4b6]
---
Predecessors: [0x104]
Successors: [0x4b7, 0x4bb]
---
0x4b0 JUMPDEST
0x4b1 CALLVALUE
0x4b2 ISZERO
0x4b3 PUSH2 0x4bb
0x4b6 JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V413 = CALLVALUE
0x4b2: V414 = ISZERO V413
0x4b3: V415 = 0x4bb
0x4b6: JUMPI 0x4bb V414
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b7
[0x4b7:0x4ba]
---
Predecessors: [0x4b0]
Successors: []
---
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba REVERT
---
0x4b7: V416 = 0x0
0x4ba: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4bb
[0x4bb:0x4d4]
---
Predecessors: [0x4b0]
Successors: [0xcb7]
---
0x4bb JUMPDEST
0x4bc PUSH2 0x1de
0x4bf PUSH1 0x1
0x4c1 PUSH1 0xa0
0x4c3 PUSH1 0x2
0x4c5 EXP
0x4c6 SUB
0x4c7 PUSH1 0x4
0x4c9 CALLDATALOAD
0x4ca DUP2
0x4cb AND
0x4cc SWAP1
0x4cd PUSH1 0x24
0x4cf CALLDATALOAD
0x4d0 AND
0x4d1 PUSH2 0xcb7
0x4d4 JUMP
---
0x4bb: JUMPDEST 
0x4bc: V417 = 0x1de
0x4bf: V418 = 0x1
0x4c1: V419 = 0xa0
0x4c3: V420 = 0x2
0x4c5: V421 = EXP 0x2 0xa0
0x4c6: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c7: V423 = 0x4
0x4c9: V424 = CALLDATALOAD 0x4
0x4cb: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x4cd: V426 = 0x24
0x4cf: V427 = CALLDATALOAD 0x24
0x4d0: V428 = AND V427 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V429 = 0xcb7
0x4d4: JUMP 0xcb7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de, V425, V428]
Exit stack: [V10, 0x1de, V425, V428]

================================

Block 0x4d5
[0x4d5:0x4e6]
---
Predecessors: []
Successors: []
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x40
0x4d8 MLOAD
0x4d9 SWAP1
0x4da DUP2
0x4db MSTORE
0x4dc PUSH1 0x20
0x4de ADD
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 DUP1
0x4e3 SWAP2
0x4e4 SUB
0x4e5 SWAP1
0x4e6 RETURN
---
0x4d5: JUMPDEST 
0x4d6: V430 = 0x40
0x4d8: V431 = M[0x40]
0x4db: M[V431] = S0
0x4dc: V432 = 0x20
0x4de: V433 = ADD 0x20 V431
0x4df: V434 = 0x40
0x4e1: V435 = M[0x40]
0x4e4: V436 = SUB V433 V435
0x4e6: RETURN V435 V436
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4e7
[0x4e7:0x4fa]
---
Predecessors: [0x110, 0x475]
Successors: [0x4fb, 0x4ff]
---
0x4e7 JUMPDEST
0x4e8 PUSH1 0x0
0x4ea DUP1
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 DUP4
0x4f4 AND
0x4f5 ISZERO
0x4f6 ISZERO
0x4f7 PUSH2 0x4ff
0x4fa JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V437 = 0x0
0x4eb: V438 = 0x1
0x4ed: V439 = 0xa0
0x4ef: V440 = 0x2
0x4f1: V441 = EXP 0x2 0xa0
0x4f2: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f4: V443 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4f5: V444 = ISZERO V443
0x4f6: V445 = ISZERO V444
0x4f7: V446 = 0x4ff
0x4fa: JUMPI 0x4ff V445
---
Entry stack: [V10, 0x119, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V10, 0x119, S0, 0x0, 0x0]

================================

Block 0x4fb
[0x4fb:0x4fe]
---
Predecessors: [0x4e7]
Successors: []
---
0x4fb PUSH1 0x0
0x4fd DUP1
0x4fe REVERT
---
0x4fb: V447 = 0x0
0x4fe: REVERT 0x0 0x0
---
Entry stack: [V10, 0x119, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S2, 0x0, 0x0]

================================

Block 0x4ff
[0x4ff:0x50c]
---
Predecessors: [0x4e7]
Successors: [0xb4b]
---
0x4ff JUMPDEST
0x500 CALLVALUE
0x501 SWAP2
0x502 POP
0x503 PUSH2 0x51a
0x506 PUSH2 0x50d
0x509 PUSH2 0xb4b
0x50c JUMP
---
0x4ff: JUMPDEST 
0x500: V448 = CALLVALUE
0x503: V449 = 0x51a
0x506: V450 = 0x50d
0x509: V451 = 0xb4b
0x50c: JUMP 0xb4b
---
Entry stack: [V10, 0x119, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V448, S0, 0x51a, 0x50d]
Exit stack: [V10, 0x119, S2, V448, 0x0, 0x51a, 0x50d]

================================

Block 0x50d
[0x50d:0x519]
---
Predecessors: [0x7bb]
Successors: [0xce4]
---
0x50d JUMPDEST
0x50e DUP4
0x50f SWAP1
0x510 PUSH4 0xffffffff
0x515 PUSH2 0xce4
0x518 AND
0x519 JUMP
---
0x50d: JUMPDEST 
0x510: V452 = 0xffffffff
0x515: V453 = 0xce4
0x518: V454 = AND 0xce4 0xffffffff
0x519: JUMP 0xce4
---
Entry stack: [V10, 0x119, S4, S3, {0x0, 0x119}, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, S0]
Exit stack: [V10, 0x119, S4, S3, {0x0, 0x119}, S1, S3, S0]

================================

Block 0x51a
[0x51a:0x528]
---
Predecessors: [0xa6f, 0xca7, 0xd0c]
Successors: [0x529, 0x52d]
---
0x51a JUMPDEST
0x51b SWAP1
0x51c POP
0x51d DUP1
0x51e PUSH1 0x4
0x520 SLOAD
0x521 LT
0x522 ISZERO
0x523 ISZERO
0x524 ISZERO
0x525 PUSH2 0x52d
0x528 JUMPI
---
0x51a: JUMPDEST 
0x51e: V455 = 0x4
0x520: V456 = S[0x4]
0x521: V457 = LT V456 S0
0x522: V458 = ISZERO V457
0x523: V459 = ISZERO V458
0x524: V460 = ISZERO V459
0x525: V461 = 0x52d
0x528: JUMPI 0x52d V460
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S0]

================================

Block 0x529
[0x529:0x52c]
---
Predecessors: [0x51a]
Successors: []
---
0x529 PUSH1 0x0
0x52b DUP1
0x52c REVERT
---
0x529: V462 = 0x0
0x52c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]

================================

Block 0x52d
[0x52d:0x557]
---
Predecessors: [0x51a]
Successors: [0xd13]
---
0x52d JUMPDEST
0x52e PUSH1 0x9
0x530 SLOAD
0x531 PUSH1 0x1
0x533 PUSH1 0xa0
0x535 PUSH1 0x2
0x537 EXP
0x538 SUB
0x539 AND
0x53a PUSH1 0x0
0x53c SWAP1
0x53d DUP2
0x53e MSTORE
0x53f PUSH1 0x6
0x541 PUSH1 0x20
0x543 MSTORE
0x544 PUSH1 0x40
0x546 SWAP1
0x547 SHA3
0x548 SLOAD
0x549 PUSH2 0x558
0x54c SWAP1
0x54d DUP3
0x54e PUSH4 0xffffffff
0x553 PUSH2 0xd13
0x556 AND
0x557 JUMP
---
0x52d: JUMPDEST 
0x52e: V463 = 0x9
0x530: V464 = S[0x9]
0x531: V465 = 0x1
0x533: V466 = 0xa0
0x535: V467 = 0x2
0x537: V468 = EXP 0x2 0xa0
0x538: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x539: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x53a: V471 = 0x0
0x53e: M[0x0] = V470
0x53f: V472 = 0x6
0x541: V473 = 0x20
0x543: M[0x20] = 0x6
0x544: V474 = 0x40
0x547: V475 = SHA3 0x0 0x40
0x548: V476 = S[V475]
0x549: V477 = 0x558
0x54e: V478 = 0xffffffff
0x553: V479 = 0xd13
0x556: V480 = AND 0xd13 0xffffffff
0x557: JUMP 0xd13
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x558, V476, S0]
Exit stack: [V10, 0x119, S5, S4, S3, S2, S1, S0, 0x558, V476, S0]

================================

Block 0x558
[0x558:0x58f]
---
Predecessors: [0xd24]
Successors: [0xd2a]
---
0x558 JUMPDEST
0x559 PUSH1 0x9
0x55b SLOAD
0x55c PUSH1 0x1
0x55e PUSH1 0xa0
0x560 PUSH1 0x2
0x562 EXP
0x563 SUB
0x564 SWAP1
0x565 DUP2
0x566 AND
0x567 PUSH1 0x0
0x569 SWAP1
0x56a DUP2
0x56b MSTORE
0x56c PUSH1 0x6
0x56e PUSH1 0x20
0x570 MSTORE
0x571 PUSH1 0x40
0x573 DUP1
0x574 DUP3
0x575 SHA3
0x576 SWAP4
0x577 SWAP1
0x578 SWAP4
0x579 SSTORE
0x57a SWAP1
0x57b DUP6
0x57c AND
0x57d DUP2
0x57e MSTORE
0x57f SHA3
0x580 SLOAD
0x581 PUSH2 0x590
0x584 SWAP1
0x585 DUP3
0x586 PUSH4 0xffffffff
0x58b PUSH2 0xd2a
0x58e AND
0x58f JUMP
---
0x558: JUMPDEST 
0x559: V481 = 0x9
0x55b: V482 = S[0x9]
0x55c: V483 = 0x1
0x55e: V484 = 0xa0
0x560: V485 = 0x2
0x562: V486 = EXP 0x2 0xa0
0x563: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x566: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x567: V489 = 0x0
0x56b: M[0x0] = V488
0x56c: V490 = 0x6
0x56e: V491 = 0x20
0x570: M[0x20] = 0x6
0x571: V492 = 0x40
0x575: V493 = SHA3 0x0 0x40
0x579: S[V493] = V1174
0x57c: V494 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x57e: M[0x0] = V494
0x57f: V495 = SHA3 0x0 0x40
0x580: V496 = S[V495]
0x581: V497 = 0x590
0x586: V498 = 0xffffffff
0x58b: V499 = 0xd2a
0x58e: V500 = AND 0xd2a 0xffffffff
0x58f: JUMP 0xd2a
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, V1174]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x590, V496, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, 0x590, V496, S1]

================================

Block 0x590
[0x590:0x5bb]
---
Predecessors: [0xd0c]
Successors: [0xd13]
---
0x590 JUMPDEST
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 DUP5
0x59a AND
0x59b PUSH1 0x0
0x59d SWAP1
0x59e DUP2
0x59f MSTORE
0x5a0 PUSH1 0x6
0x5a2 PUSH1 0x20
0x5a4 MSTORE
0x5a5 PUSH1 0x40
0x5a7 SWAP1
0x5a8 SHA3
0x5a9 SSTORE
0x5aa PUSH1 0x4
0x5ac SLOAD
0x5ad PUSH2 0x5bc
0x5b0 SWAP1
0x5b1 DUP3
0x5b2 PUSH4 0xffffffff
0x5b7 PUSH2 0xd13
0x5ba AND
0x5bb JUMP
---
0x590: JUMPDEST 
0x591: V501 = 0x1
0x593: V502 = 0xa0
0x595: V503 = 0x2
0x597: V504 = EXP 0x2 0xa0
0x598: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59a: V506 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x59b: V507 = 0x0
0x59f: M[0x0] = V506
0x5a0: V508 = 0x6
0x5a2: V509 = 0x20
0x5a4: M[0x20] = 0x6
0x5a5: V510 = 0x40
0x5a8: V511 = SHA3 0x0 0x40
0x5a9: S[V511] = S0
0x5aa: V512 = 0x4
0x5ac: V513 = S[0x4]
0x5ad: V514 = 0x5bc
0x5b2: V515 = 0xffffffff
0x5b7: V516 = 0xd13
0x5ba: V517 = AND 0xd13 0xffffffff
0x5bb: JUMP 0xd13
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x5bc, V513, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, 0x5bc, V513, S1]

================================

Block 0x5bc
[0x5bc:0x60e]
---
Predecessors: [0xd24]
Successors: [0x60f, 0x645]
---
0x5bc JUMPDEST
0x5bd PUSH1 0x4
0x5bf SSTORE
0x5c0 PUSH1 0x1
0x5c2 PUSH1 0xa0
0x5c4 PUSH1 0x2
0x5c6 EXP
0x5c7 SUB
0x5c8 DUP1
0x5c9 DUP5
0x5ca AND
0x5cb SWAP1
0x5cc CALLER
0x5cd AND
0x5ce PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x5ef DUP5
0x5f0 DUP5
0x5f1 PUSH1 0x40
0x5f3 MLOAD
0x5f4 SWAP2
0x5f5 DUP3
0x5f6 MSTORE
0x5f7 PUSH1 0x20
0x5f9 DUP3
0x5fa ADD
0x5fb MSTORE
0x5fc PUSH1 0x40
0x5fe SWAP1
0x5ff DUP2
0x600 ADD
0x601 SWAP1
0x602 MLOAD
0x603 DUP1
0x604 SWAP2
0x605 SUB
0x606 SWAP1
0x607 LOG3
0x608 DUP1
0x609 ISZERO
0x60a ISZERO
0x60b PUSH2 0x645
0x60e JUMPI
---
0x5bc: JUMPDEST 
0x5bd: V518 = 0x4
0x5bf: S[0x4] = V1174
0x5c0: V519 = 0x1
0x5c2: V520 = 0xa0
0x5c4: V521 = 0x2
0x5c6: V522 = EXP 0x2 0xa0
0x5c7: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ca: V524 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x5cc: V525 = CALLER
0x5cd: V526 = AND V525 0xffffffffffffffffffffffffffffffffffffffff
0x5ce: V527 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x5f1: V528 = 0x40
0x5f3: V529 = M[0x40]
0x5f6: M[V529] = S2
0x5f7: V530 = 0x20
0x5fa: V531 = ADD V529 0x20
0x5fb: M[V531] = S1
0x5fc: V532 = 0x40
0x600: V533 = ADD 0x40 V529
0x602: V534 = M[0x40]
0x605: V535 = SUB V533 V534
0x607: LOG V534 V535 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V526 V524
0x609: V536 = ISZERO S1
0x60a: V537 = ISZERO V536
0x60b: V538 = 0x645
0x60e: JUMPI 0x645 V537
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, V1174]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1]

================================

Block 0x60f
[0x60f:0x63b]
---
Predecessors: [0x5bc]
Successors: [0x63c, 0x640]
---
0x60f PUSH1 0x1
0x611 PUSH1 0xa0
0x613 PUSH1 0x2
0x615 EXP
0x616 SUB
0x617 DUP4
0x618 AND
0x619 CALLVALUE
0x61a DUP1
0x61b ISZERO
0x61c PUSH2 0x8fc
0x61f MUL
0x620 SWAP1
0x621 PUSH1 0x40
0x623 MLOAD
0x624 PUSH1 0x0
0x626 PUSH1 0x40
0x628 MLOAD
0x629 DUP1
0x62a DUP4
0x62b SUB
0x62c DUP2
0x62d DUP6
0x62e DUP9
0x62f DUP9
0x630 CALL
0x631 SWAP4
0x632 POP
0x633 POP
0x634 POP
0x635 POP
0x636 ISZERO
0x637 ISZERO
0x638 PUSH2 0x640
0x63b JUMPI
---
0x60f: V539 = 0x1
0x611: V540 = 0xa0
0x613: V541 = 0x2
0x615: V542 = EXP 0x2 0xa0
0x616: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x618: V544 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x619: V545 = CALLVALUE
0x61b: V546 = ISZERO V545
0x61c: V547 = 0x8fc
0x61f: V548 = MUL 0x8fc V546
0x621: V549 = 0x40
0x623: V550 = M[0x40]
0x624: V551 = 0x0
0x626: V552 = 0x40
0x628: V553 = M[0x40]
0x62b: V554 = SUB V550 V553
0x630: V555 = CALL V548 V544 V545 V553 V554 V553 0x0
0x636: V556 = ISZERO V555
0x637: V557 = ISZERO V556
0x638: V558 = 0x640
0x63b: JUMPI 0x640 V557
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]

================================

Block 0x63c
[0x63c:0x63f]
---
Predecessors: [0x60f]
Successors: []
---
0x63c PUSH1 0x0
0x63e DUP1
0x63f REVERT
---
0x63c: V559 = 0x0
0x63f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x119, S5, V448, {0x0, 0x119}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S5, V448, {0x0, 0x119}, S2, S1, S0]

================================

Block 0x640
[0x640:0x644]
---
Predecessors: [0x60f]
Successors: [0x679]
---
0x640 JUMPDEST
0x641 PUSH2 0x679
0x644 JUMP
---
0x640: JUMPDEST 
0x641: V560 = 0x679
0x644: JUMP 0x679
---
Entry stack: [V10, 0x119, S5, V448, {0x0, 0x119}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S5, V448, {0x0, 0x119}, S2, S1, S0]

================================

Block 0x645
[0x645:0x674]
---
Predecessors: [0x5bc]
Successors: [0x675, 0x679]
---
0x645 JUMPDEST
0x646 PUSH1 0x9
0x648 SLOAD
0x649 PUSH1 0x1
0x64b PUSH1 0xa0
0x64d PUSH1 0x2
0x64f EXP
0x650 SUB
0x651 AND
0x652 CALLVALUE
0x653 DUP1
0x654 ISZERO
0x655 PUSH2 0x8fc
0x658 MUL
0x659 SWAP1
0x65a PUSH1 0x40
0x65c MLOAD
0x65d PUSH1 0x0
0x65f PUSH1 0x40
0x661 MLOAD
0x662 DUP1
0x663 DUP4
0x664 SUB
0x665 DUP2
0x666 DUP6
0x667 DUP9
0x668 DUP9
0x669 CALL
0x66a SWAP4
0x66b POP
0x66c POP
0x66d POP
0x66e POP
0x66f ISZERO
0x670 ISZERO
0x671 PUSH2 0x679
0x674 JUMPI
---
0x645: JUMPDEST 
0x646: V561 = 0x9
0x648: V562 = S[0x9]
0x649: V563 = 0x1
0x64b: V564 = 0xa0
0x64d: V565 = 0x2
0x64f: V566 = EXP 0x2 0xa0
0x650: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x651: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x652: V569 = CALLVALUE
0x654: V570 = ISZERO V569
0x655: V571 = 0x8fc
0x658: V572 = MUL 0x8fc V570
0x65a: V573 = 0x40
0x65c: V574 = M[0x40]
0x65d: V575 = 0x0
0x65f: V576 = 0x40
0x661: V577 = M[0x40]
0x664: V578 = SUB V574 V577
0x669: V579 = CALL V572 V568 V569 V577 V578 V577 0x0
0x66f: V580 = ISZERO V579
0x670: V581 = ISZERO V580
0x671: V582 = 0x679
0x674: JUMPI 0x679 V581
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]

================================

Block 0x675
[0x675:0x678]
---
Predecessors: [0x645]
Successors: []
---
0x675 PUSH1 0x0
0x677 DUP1
0x678 REVERT
---
0x675: V583 = 0x0
0x678: REVERT 0x0 0x0
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]

================================

Block 0x679
[0x679:0x679]
---
Predecessors: [0x640, 0x645]
Successors: [0x67a]
---
0x679 JUMPDEST
---
0x679: JUMPDEST 
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]

================================

Block 0x67a
[0x67a:0x67a]
---
Predecessors: [0x679]
Successors: [0x67b]
---
0x67a JUMPDEST
---
0x67a: JUMPDEST 
---
Entry stack: [V10, 0x119, S5, V448, {0x0, 0x119}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S5, V448, {0x0, 0x119}, S2, S1, S0]

================================

Block 0x67b
[0x67b:0x67f]
---
Predecessors: [0x67a]
Successors: [0x119]
---
0x67b JUMPDEST
0x67c POP
0x67d POP
0x67e POP
0x67f JUMP
---
0x67b: JUMPDEST 
0x67f: JUMP {0x0, 0x119}
---
Entry stack: [V10, 0x119, S5, V448, {0x0, 0x119}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x119, S5, V448]

================================

Block 0x680
[0x680:0x6cf]
---
Predecessors: [0x127]
Successors: [0x6d0, 0x716]
---
0x680 JUMPDEST
0x681 PUSH1 0x0
0x683 DUP1
0x684 SLOAD
0x685 PUSH1 0x1
0x687 DUP2
0x688 PUSH1 0x1
0x68a AND
0x68b ISZERO
0x68c PUSH2 0x100
0x68f MUL
0x690 SUB
0x691 AND
0x692 PUSH1 0x2
0x694 SWAP1
0x695 DIV
0x696 DUP1
0x697 PUSH1 0x1f
0x699 ADD
0x69a PUSH1 0x20
0x69c DUP1
0x69d SWAP2
0x69e DIV
0x69f MUL
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 PUSH1 0x40
0x6a5 MLOAD
0x6a6 SWAP1
0x6a7 DUP2
0x6a8 ADD
0x6a9 PUSH1 0x40
0x6ab MSTORE
0x6ac DUP1
0x6ad SWAP3
0x6ae SWAP2
0x6af SWAP1
0x6b0 DUP2
0x6b1 DUP2
0x6b2 MSTORE
0x6b3 PUSH1 0x20
0x6b5 ADD
0x6b6 DUP3
0x6b7 DUP1
0x6b8 SLOAD
0x6b9 PUSH1 0x1
0x6bb DUP2
0x6bc PUSH1 0x1
0x6be AND
0x6bf ISZERO
0x6c0 PUSH2 0x100
0x6c3 MUL
0x6c4 SUB
0x6c5 AND
0x6c6 PUSH1 0x2
0x6c8 SWAP1
0x6c9 DIV
0x6ca DUP1
0x6cb ISZERO
0x6cc PUSH2 0x716
0x6cf JUMPI
---
0x680: JUMPDEST 
0x681: V584 = 0x0
0x684: V585 = S[0x0]
0x685: V586 = 0x1
0x688: V587 = 0x1
0x68a: V588 = AND 0x1 V585
0x68b: V589 = ISZERO V588
0x68c: V590 = 0x100
0x68f: V591 = MUL 0x100 V589
0x690: V592 = SUB V591 0x1
0x691: V593 = AND V592 V585
0x692: V594 = 0x2
0x695: V595 = DIV V593 0x2
0x697: V596 = 0x1f
0x699: V597 = ADD 0x1f V595
0x69a: V598 = 0x20
0x69e: V599 = DIV V597 0x20
0x69f: V600 = MUL V599 0x20
0x6a0: V601 = 0x20
0x6a2: V602 = ADD 0x20 V600
0x6a3: V603 = 0x40
0x6a5: V604 = M[0x40]
0x6a8: V605 = ADD V604 V602
0x6a9: V606 = 0x40
0x6ab: M[0x40] = V605
0x6b2: M[V604] = V595
0x6b3: V607 = 0x20
0x6b5: V608 = ADD 0x20 V604
0x6b8: V609 = S[0x0]
0x6b9: V610 = 0x1
0x6bc: V611 = 0x1
0x6be: V612 = AND 0x1 V609
0x6bf: V613 = ISZERO V612
0x6c0: V614 = 0x100
0x6c3: V615 = MUL 0x100 V613
0x6c4: V616 = SUB V615 0x1
0x6c5: V617 = AND V616 V609
0x6c6: V618 = 0x2
0x6c9: V619 = DIV V617 0x2
0x6cb: V620 = ISZERO V619
0x6cc: V621 = 0x716
0x6cf: JUMPI 0x716 V620
---
Entry stack: [V10, 0x12f]
Stack pops: 0
Stack additions: [V604, 0x0, V595, V608, 0x0, V619]
Exit stack: [V10, 0x12f, V604, 0x0, V595, V608, 0x0, V619]

================================

Block 0x6d0
[0x6d0:0x6d7]
---
Predecessors: [0x680]
Successors: [0x6d8, 0x6eb]
---
0x6d0 DUP1
0x6d1 PUSH1 0x1f
0x6d3 LT
0x6d4 PUSH2 0x6eb
0x6d7 JUMPI
---
0x6d1: V622 = 0x1f
0x6d3: V623 = LT 0x1f V619
0x6d4: V624 = 0x6eb
0x6d7: JUMPI 0x6eb V623
---
Entry stack: [V10, 0x12f, V604, 0x0, V595, V608, 0x0, V619]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x12f, V604, 0x0, V595, V608, 0x0, V619]

================================

Block 0x6d8
[0x6d8:0x6ea]
---
Predecessors: [0x6d0]
Successors: [0x716]
---
0x6d8 PUSH2 0x100
0x6db DUP1
0x6dc DUP4
0x6dd SLOAD
0x6de DIV
0x6df MUL
0x6e0 DUP4
0x6e1 MSTORE
0x6e2 SWAP2
0x6e3 PUSH1 0x20
0x6e5 ADD
0x6e6 SWAP2
0x6e7 PUSH2 0x716
0x6ea JUMP
---
0x6d8: V625 = 0x100
0x6dd: V626 = S[0x0]
0x6de: V627 = DIV V626 0x100
0x6df: V628 = MUL V627 0x100
0x6e1: M[V608] = V628
0x6e3: V629 = 0x20
0x6e5: V630 = ADD 0x20 V608
0x6e7: V631 = 0x716
0x6ea: JUMP 0x716
---
Entry stack: [V10, 0x12f, V604, 0x0, V595, V608, 0x0, V619]
Stack pops: 3
Stack additions: [V630, S1, S0]
Exit stack: [V10, 0x12f, V604, 0x0, V595, V630, 0x0, V619]

================================

Block 0x6eb
[0x6eb:0x6f8]
---
Predecessors: [0x6d0, 0xafd]
Successors: [0x6f9]
---
0x6eb JUMPDEST
0x6ec DUP3
0x6ed ADD
0x6ee SWAP2
0x6ef SWAP1
0x6f0 PUSH1 0x0
0x6f2 MSTORE
0x6f3 PUSH1 0x20
0x6f5 PUSH1 0x0
0x6f7 SHA3
0x6f8 SWAP1
---
0x6eb: JUMPDEST 
0x6ed: V632 = ADD S2 S0
0x6f0: V633 = 0x0
0x6f2: M[0x0] = {0x0, 0x1}
0x6f3: V634 = 0x20
0x6f5: V635 = 0x0
0x6f7: V636 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x12f, S5, {0x0, 0x1}, S3, S2, {0x0, 0x1}, S0]
Stack pops: 3
Stack additions: [V632, V636, S2]
Exit stack: [V10, 0x12f, S5, {0x0, 0x1}, S3, V632, V636, S2]

================================

Block 0x6f9
[0x6f9:0x70c]
---
Predecessors: [0x6eb, 0x6f9, 0xb26]
Successors: [0x6f9, 0x70d]
---
0x6f9 JUMPDEST
0x6fa DUP2
0x6fb SLOAD
0x6fc DUP2
0x6fd MSTORE
0x6fe SWAP1
0x6ff PUSH1 0x1
0x701 ADD
0x702 SWAP1
0x703 PUSH1 0x20
0x705 ADD
0x706 DUP1
0x707 DUP4
0x708 GT
0x709 PUSH2 0x6f9
0x70c JUMPI
---
0x6f9: JUMPDEST 
0x6fb: V637 = S[S1]
0x6fd: M[S0] = V637
0x6ff: V638 = 0x1
0x701: V639 = ADD 0x1 S1
0x703: V640 = 0x20
0x705: V641 = ADD 0x20 S0
0x708: V642 = GT S2 V641
0x709: V643 = 0x6f9
0x70c: JUMPI 0x6f9 V642
---
Entry stack: [V10, 0x12f, S5, {0x0, 0x1}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V639, V641]
Exit stack: [V10, 0x12f, S5, {0x0, 0x1}, S3, S2, V639, V641]

================================

Block 0x70d
[0x70d:0x715]
---
Predecessors: [0x6f9]
Successors: [0x716]
---
0x70d DUP3
0x70e SWAP1
0x70f SUB
0x710 PUSH1 0x1f
0x712 AND
0x713 DUP3
0x714 ADD
0x715 SWAP2
---
0x70f: V644 = SUB V641 S2
0x710: V645 = 0x1f
0x712: V646 = AND 0x1f V644
0x714: V647 = ADD S2 V646
---
Entry stack: [V10, 0x12f, S5, {0x0, 0x1}, S3, S2, V639, V641]
Stack pops: 3
Stack additions: [V647, S1, S2]
Exit stack: [V10, 0x12f, S5, {0x0, 0x1}, S3, V647, V639, S2]

================================

Block 0x716
[0x716:0x71d]
---
Predecessors: [0x680, 0x6d8, 0x70d, 0xaad, 0xb05]
Successors: [0x12f]
---
0x716 JUMPDEST
0x717 POP
0x718 POP
0x719 POP
0x71a POP
0x71b POP
0x71c DUP2
0x71d JUMP
---
0x716: JUMPDEST 
0x71d: JUMP 0x12f
---
Entry stack: [V10, 0x12f, S5, {0x0, 0x1}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x12f, S5]

================================

Block 0x71e
[0x71e:0x741]
---
Predecessors: [0x1b2]
Successors: [0x742, 0x747]
---
0x71e JUMPDEST
0x71f PUSH1 0x1
0x721 PUSH1 0xa0
0x723 PUSH1 0x2
0x725 EXP
0x726 SUB
0x727 CALLER
0x728 AND
0x729 PUSH1 0x0
0x72b SWAP1
0x72c DUP2
0x72d MSTORE
0x72e PUSH1 0x6
0x730 PUSH1 0x20
0x732 MSTORE
0x733 PUSH1 0x40
0x735 SWAP1
0x736 SHA3
0x737 SLOAD
0x738 DUP2
0x739 SWAP1
0x73a LT
0x73b DUP1
0x73c ISZERO
0x73d SWAP1
0x73e PUSH2 0x747
0x741 JUMPI
---
0x71e: JUMPDEST 
0x71f: V648 = 0x1
0x721: V649 = 0xa0
0x723: V650 = 0x2
0x725: V651 = EXP 0x2 0xa0
0x726: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x727: V653 = CALLER
0x728: V654 = AND V653 0xffffffffffffffffffffffffffffffffffffffff
0x729: V655 = 0x0
0x72d: M[0x0] = V654
0x72e: V656 = 0x6
0x730: V657 = 0x20
0x732: M[0x20] = 0x6
0x733: V658 = 0x40
0x736: V659 = SHA3 0x0 0x40
0x737: V660 = S[V659]
0x73a: V661 = LT V660 V134
0x73c: V662 = ISZERO V661
0x73e: V663 = 0x747
0x741: JUMPI 0x747 V661
---
Entry stack: [V10, 0x119, V132, V134]
Stack pops: 1
Stack additions: [S0, V662]
Exit stack: [V10, 0x119, V132, V134, V662]

================================

Block 0x742
[0x742:0x746]
---
Predecessors: [0x71e]
Successors: [0x747]
---
0x742 POP
0x743 PUSH1 0x0
0x745 DUP2
0x746 GT
---
0x743: V664 = 0x0
0x746: V665 = GT V134 0x0
---
Entry stack: [V10, 0x119, V132, V134, V662]
Stack pops: 2
Stack additions: [S1, V665]
Exit stack: [V10, 0x119, V132, V134, V665]

================================

Block 0x747
[0x747:0x74d]
---
Predecessors: [0x71e, 0x742]
Successors: [0x74e, 0x752]
---
0x747 JUMPDEST
0x748 ISZERO
0x749 ISZERO
0x74a PUSH2 0x752
0x74d JUMPI
---
0x747: JUMPDEST 
0x748: V666 = ISZERO S0
0x749: V667 = ISZERO V666
0x74a: V668 = 0x752
0x74d: JUMPI 0x752 V667
---
Entry stack: [V10, 0x119, V132, V134, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x119, V132, V134]

================================

Block 0x74e
[0x74e:0x751]
---
Predecessors: [0x747]
Successors: []
---
0x74e PUSH1 0x0
0x750 DUP1
0x751 REVERT
---
0x74e: V669 = 0x0
0x751: REVERT 0x0 0x0
---
Entry stack: [V10, 0x119, V132, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, V132, V134]

================================

Block 0x752
[0x752:0x7b2]
---
Predecessors: [0x747]
Successors: [0x7b3]
---
0x752 JUMPDEST
0x753 PUSH1 0x1
0x755 PUSH1 0xa0
0x757 PUSH1 0x2
0x759 EXP
0x75a SUB
0x75b CALLER
0x75c DUP2
0x75d AND
0x75e PUSH1 0x0
0x760 DUP2
0x761 DUP2
0x762 MSTORE
0x763 PUSH1 0x7
0x765 PUSH1 0x20
0x767 SWAP1
0x768 DUP2
0x769 MSTORE
0x76a PUSH1 0x40
0x76c DUP1
0x76d DUP4
0x76e SHA3
0x76f SWAP5
0x770 DUP8
0x771 AND
0x772 DUP1
0x773 DUP5
0x774 MSTORE
0x775 SWAP5
0x776 SWAP1
0x777 SWAP2
0x778 MSTORE
0x779 SWAP1
0x77a DUP2
0x77b SWAP1
0x77c SHA3
0x77d DUP5
0x77e SWAP1
0x77f SSTORE
0x780 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x7a1 SWAP1
0x7a2 DUP5
0x7a3 SWAP1
0x7a4 MLOAD
0x7a5 SWAP1
0x7a6 DUP2
0x7a7 MSTORE
0x7a8 PUSH1 0x20
0x7aa ADD
0x7ab PUSH1 0x40
0x7ad MLOAD
0x7ae DUP1
0x7af SWAP2
0x7b0 SUB
0x7b1 SWAP1
0x7b2 LOG3
---
0x752: JUMPDEST 
0x753: V670 = 0x1
0x755: V671 = 0xa0
0x757: V672 = 0x2
0x759: V673 = EXP 0x2 0xa0
0x75a: V674 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75b: V675 = CALLER
0x75d: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0x75e: V677 = 0x0
0x762: M[0x0] = V676
0x763: V678 = 0x7
0x765: V679 = 0x20
0x769: M[0x20] = 0x7
0x76a: V680 = 0x40
0x76e: V681 = SHA3 0x0 0x40
0x771: V682 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x774: M[0x0] = V682
0x778: M[0x20] = V681
0x77c: V683 = SHA3 0x0 0x40
0x77f: S[V683] = V134
0x780: V684 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x7a4: V685 = M[0x40]
0x7a7: M[V685] = V134
0x7a8: V686 = 0x20
0x7aa: V687 = ADD 0x20 V685
0x7ab: V688 = 0x40
0x7ad: V689 = M[0x40]
0x7b0: V690 = SUB V687 V689
0x7b2: LOG V689 V690 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V676 V682
---
Entry stack: [V10, 0x119, V132, V134]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x119, V132, V134]

================================

Block 0x7b3
[0x7b3:0x7b6]
---
Predecessors: [0x752]
Successors: [0x119]
---
0x7b3 JUMPDEST
0x7b4 POP
0x7b5 POP
0x7b6 JUMP
---
0x7b3: JUMPDEST 
0x7b6: JUMP 0x119
---
Entry stack: [V10, 0x119, V132, V134]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x7b7
[0x7b7:0x7ba]
---
Predecessors: [0x1d6]
Successors: [0x7bb]
---
0x7b7 JUMPDEST
0x7b8 PUSH1 0x3
0x7ba SLOAD
---
0x7b7: JUMPDEST 
0x7b8: V691 = 0x3
0x7ba: V692 = S[0x3]
---
Entry stack: [V10, 0x1de]
Stack pops: 0
Stack additions: [V692]
Exit stack: [V10, 0x1de, V692]

================================

Block 0x7bb
[0x7bb:0x7bd]
---
Predecessors: [0x7b7, 0xb7e, 0xba7, 0xbaf]
Successors: [0x1de, 0x50d]
---
0x7bb JUMPDEST
0x7bc SWAP1
0x7bd JUMP
---
0x7bb: JUMPDEST 
0x7bd: JUMP S1
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x119, S5, S4, S3, S2, S0]

================================

Block 0x7be
[0x7be:0x7c3]
---
Predecessors: [0x1fb]
Successors: [0x1de]
---
0x7be JUMPDEST
0x7bf PUSH1 0xb
0x7c1 SLOAD
0x7c2 DUP2
0x7c3 JUMP
---
0x7be: JUMPDEST 
0x7bf: V693 = 0xb
0x7c1: V694 = S[0xb]
0x7c3: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V694]
Exit stack: [V10, 0x1de, V694]

================================

Block 0x7c4
[0x7c4:0x7f5]
---
Predecessors: [0x220]
Successors: [0x7f6, 0x814]
---
0x7c4 JUMPDEST
0x7c5 PUSH1 0x1
0x7c7 PUSH1 0xa0
0x7c9 PUSH1 0x2
0x7cb EXP
0x7cc SUB
0x7cd DUP1
0x7ce DUP5
0x7cf AND
0x7d0 PUSH1 0x0
0x7d2 SWAP1
0x7d3 DUP2
0x7d4 MSTORE
0x7d5 PUSH1 0x7
0x7d7 PUSH1 0x20
0x7d9 SWAP1
0x7da DUP2
0x7db MSTORE
0x7dc PUSH1 0x40
0x7de DUP1
0x7df DUP4
0x7e0 SHA3
0x7e1 CALLER
0x7e2 SWAP1
0x7e3 SWAP5
0x7e4 AND
0x7e5 DUP4
0x7e6 MSTORE
0x7e7 SWAP3
0x7e8 SWAP1
0x7e9 MSTORE
0x7ea SHA3
0x7eb SLOAD
0x7ec DUP2
0x7ed SWAP1
0x7ee LT
0x7ef DUP1
0x7f0 ISZERO
0x7f1 SWAP1
0x7f2 PUSH2 0x814
0x7f5 JUMPI
---
0x7c4: JUMPDEST 
0x7c5: V695 = 0x1
0x7c7: V696 = 0xa0
0x7c9: V697 = 0x2
0x7cb: V698 = EXP 0x2 0xa0
0x7cc: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cf: V700 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x7d0: V701 = 0x0
0x7d4: M[0x0] = V700
0x7d5: V702 = 0x7
0x7d7: V703 = 0x20
0x7db: M[0x20] = 0x7
0x7dc: V704 = 0x40
0x7e0: V705 = SHA3 0x0 0x40
0x7e1: V706 = CALLER
0x7e4: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0x7e6: M[0x0] = V707
0x7e9: M[0x20] = V705
0x7ea: V708 = SHA3 0x0 0x40
0x7eb: V709 = S[V708]
0x7ee: V710 = LT V709 V179
0x7f0: V711 = ISZERO V710
0x7f2: V712 = 0x814
0x7f5: JUMPI 0x814 V710
---
Entry stack: [V10, 0x119, V174, V177, V179]
Stack pops: 3
Stack additions: [S2, S1, S0, V711]
Exit stack: [V10, 0x119, V174, V177, V179, V711]

================================

Block 0x7f6
[0x7f6:0x813]
---
Predecessors: [0x7c4]
Successors: [0x814]
---
0x7f6 POP
0x7f7 PUSH1 0x1
0x7f9 PUSH1 0xa0
0x7fb PUSH1 0x2
0x7fd EXP
0x7fe SUB
0x7ff DUP4
0x800 AND
0x801 PUSH1 0x0
0x803 SWAP1
0x804 DUP2
0x805 MSTORE
0x806 PUSH1 0x6
0x808 PUSH1 0x20
0x80a MSTORE
0x80b PUSH1 0x40
0x80d SWAP1
0x80e SHA3
0x80f SLOAD
0x810 DUP2
0x811 SWAP1
0x812 LT
0x813 ISZERO
---
0x7f7: V713 = 0x1
0x7f9: V714 = 0xa0
0x7fb: V715 = 0x2
0x7fd: V716 = EXP 0x2 0xa0
0x7fe: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x800: V718 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x801: V719 = 0x0
0x805: M[0x0] = V718
0x806: V720 = 0x6
0x808: V721 = 0x20
0x80a: M[0x20] = 0x6
0x80b: V722 = 0x40
0x80e: V723 = SHA3 0x0 0x40
0x80f: V724 = S[V723]
0x812: V725 = LT V724 V179
0x813: V726 = ISZERO V725
---
Entry stack: [V10, 0x119, V174, V177, V179, V711]
Stack pops: 4
Stack additions: [S3, S2, S1, V726]
Exit stack: [V10, 0x119, V174, V177, V179, V726]

================================

Block 0x814
[0x814:0x81a]
---
Predecessors: [0x7c4, 0x7f6]
Successors: [0x81b, 0x820]
---
0x814 JUMPDEST
0x815 DUP1
0x816 ISZERO
0x817 PUSH2 0x820
0x81a JUMPI
---
0x814: JUMPDEST 
0x816: V727 = ISZERO S0
0x817: V728 = 0x820
0x81a: JUMPI 0x820 V727
---
Entry stack: [V10, 0x119, V174, V177, V179, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x119, V174, V177, V179, S0]

================================

Block 0x81b
[0x81b:0x81f]
---
Predecessors: [0x814]
Successors: [0x820]
---
0x81b POP
0x81c PUSH1 0x0
0x81e DUP2
0x81f GT
---
0x81c: V729 = 0x0
0x81f: V730 = GT V179 0x0
---
Entry stack: [V10, 0x119, V174, V177, V179, S0]
Stack pops: 2
Stack additions: [S1, V730]
Exit stack: [V10, 0x119, V174, V177, V179, V730]

================================

Block 0x820
[0x820:0x826]
---
Predecessors: [0x814, 0x81b]
Successors: [0x827, 0x82b]
---
0x820 JUMPDEST
0x821 ISZERO
0x822 ISZERO
0x823 PUSH2 0x82b
0x826 JUMPI
---
0x820: JUMPDEST 
0x821: V731 = ISZERO S0
0x822: V732 = ISZERO V731
0x823: V733 = 0x82b
0x826: JUMPI 0x82b V732
---
Entry stack: [V10, 0x119, V174, V177, V179, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x119, V174, V177, V179]

================================

Block 0x827
[0x827:0x82a]
---
Predecessors: [0x820]
Successors: []
---
0x827 PUSH1 0x0
0x829 DUP1
0x82a REVERT
---
0x827: V734 = 0x0
0x82a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x119, V174, V177, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, V174, V177, V179]

================================

Block 0x82b
[0x82b:0x853]
---
Predecessors: [0x820]
Successors: [0xd13]
---
0x82b JUMPDEST
0x82c PUSH1 0x1
0x82e PUSH1 0xa0
0x830 PUSH1 0x2
0x832 EXP
0x833 SUB
0x834 DUP4
0x835 AND
0x836 PUSH1 0x0
0x838 SWAP1
0x839 DUP2
0x83a MSTORE
0x83b PUSH1 0x6
0x83d PUSH1 0x20
0x83f MSTORE
0x840 PUSH1 0x40
0x842 SWAP1
0x843 SHA3
0x844 SLOAD
0x845 PUSH2 0x854
0x848 SWAP1
0x849 DUP3
0x84a PUSH4 0xffffffff
0x84f PUSH2 0xd13
0x852 AND
0x853 JUMP
---
0x82b: JUMPDEST 
0x82c: V735 = 0x1
0x82e: V736 = 0xa0
0x830: V737 = 0x2
0x832: V738 = EXP 0x2 0xa0
0x833: V739 = SUB 0x10000000000000000000000000000000000000000 0x1
0x835: V740 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x836: V741 = 0x0
0x83a: M[0x0] = V740
0x83b: V742 = 0x6
0x83d: V743 = 0x20
0x83f: M[0x20] = 0x6
0x840: V744 = 0x40
0x843: V745 = SHA3 0x0 0x40
0x844: V746 = S[V745]
0x845: V747 = 0x854
0x84a: V748 = 0xffffffff
0x84f: V749 = 0xd13
0x852: V750 = AND 0xd13 0xffffffff
0x853: JUMP 0xd13
---
Entry stack: [V10, 0x119, V174, V177, V179]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x854, V746, S0]
Exit stack: [V10, 0x119, V174, V177, V179, 0x854, V746, V179]

================================

Block 0x854
[0x854:0x888]
---
Predecessors: [0xd24]
Successors: [0xd2a]
---
0x854 JUMPDEST
0x855 PUSH1 0x1
0x857 PUSH1 0xa0
0x859 PUSH1 0x2
0x85b EXP
0x85c SUB
0x85d DUP1
0x85e DUP6
0x85f AND
0x860 PUSH1 0x0
0x862 SWAP1
0x863 DUP2
0x864 MSTORE
0x865 PUSH1 0x6
0x867 PUSH1 0x20
0x869 MSTORE
0x86a PUSH1 0x40
0x86c DUP1
0x86d DUP3
0x86e SHA3
0x86f SWAP4
0x870 SWAP1
0x871 SWAP4
0x872 SSTORE
0x873 SWAP1
0x874 DUP5
0x875 AND
0x876 DUP2
0x877 MSTORE
0x878 SHA3
0x879 SLOAD
0x87a PUSH2 0x889
0x87d SWAP1
0x87e DUP3
0x87f PUSH4 0xffffffff
0x884 PUSH2 0xd2a
0x887 AND
0x888 JUMP
---
0x854: JUMPDEST 
0x855: V751 = 0x1
0x857: V752 = 0xa0
0x859: V753 = 0x2
0x85b: V754 = EXP 0x2 0xa0
0x85c: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85f: V756 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x860: V757 = 0x0
0x864: M[0x0] = V756
0x865: V758 = 0x6
0x867: V759 = 0x20
0x869: M[0x20] = 0x6
0x86a: V760 = 0x40
0x86e: V761 = SHA3 0x0 0x40
0x872: S[V761] = S0
0x875: V762 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x877: M[0x0] = V762
0x878: V763 = SHA3 0x0 0x40
0x879: V764 = S[V763]
0x87a: V765 = 0x889
0x87f: V766 = 0xffffffff
0x884: V767 = 0xd2a
0x887: V768 = AND 0xd2a 0xffffffff
0x888: JUMP 0xd2a
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x889, V764, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, 0x889, V764, S1]

================================

Block 0x889
[0x889:0x8d0]
---
Predecessors: [0xd0c]
Successors: [0xd13]
---
0x889 JUMPDEST
0x88a PUSH1 0x1
0x88c PUSH1 0xa0
0x88e PUSH1 0x2
0x890 EXP
0x891 SUB
0x892 DUP1
0x893 DUP5
0x894 AND
0x895 PUSH1 0x0
0x897 SWAP1
0x898 DUP2
0x899 MSTORE
0x89a PUSH1 0x6
0x89c PUSH1 0x20
0x89e SWAP1
0x89f DUP2
0x8a0 MSTORE
0x8a1 PUSH1 0x40
0x8a3 DUP1
0x8a4 DUP4
0x8a5 SHA3
0x8a6 SWAP5
0x8a7 SWAP1
0x8a8 SWAP5
0x8a9 SSTORE
0x8aa DUP7
0x8ab DUP4
0x8ac AND
0x8ad DUP3
0x8ae MSTORE
0x8af PUSH1 0x7
0x8b1 DUP2
0x8b2 MSTORE
0x8b3 DUP4
0x8b4 DUP3
0x8b5 SHA3
0x8b6 CALLER
0x8b7 SWAP1
0x8b8 SWAP4
0x8b9 AND
0x8ba DUP3
0x8bb MSTORE
0x8bc SWAP2
0x8bd SWAP1
0x8be SWAP2
0x8bf MSTORE
0x8c0 SHA3
0x8c1 SLOAD
0x8c2 PUSH2 0x8d1
0x8c5 SWAP1
0x8c6 DUP3
0x8c7 PUSH4 0xffffffff
0x8cc PUSH2 0xd13
0x8cf AND
0x8d0 JUMP
---
0x889: JUMPDEST 
0x88a: V769 = 0x1
0x88c: V770 = 0xa0
0x88e: V771 = 0x2
0x890: V772 = EXP 0x2 0xa0
0x891: V773 = SUB 0x10000000000000000000000000000000000000000 0x1
0x894: V774 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x895: V775 = 0x0
0x899: M[0x0] = V774
0x89a: V776 = 0x6
0x89c: V777 = 0x20
0x8a0: M[0x20] = 0x6
0x8a1: V778 = 0x40
0x8a5: V779 = SHA3 0x0 0x40
0x8a9: S[V779] = S0
0x8ac: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x8ae: M[0x0] = V780
0x8af: V781 = 0x7
0x8b2: M[0x20] = 0x7
0x8b5: V782 = SHA3 0x0 0x40
0x8b6: V783 = CALLER
0x8b9: V784 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0x8bb: M[0x0] = V784
0x8bf: M[0x20] = V782
0x8c0: V785 = SHA3 0x0 0x40
0x8c1: V786 = S[V785]
0x8c2: V787 = 0x8d1
0x8c7: V788 = 0xffffffff
0x8cc: V789 = 0xd13
0x8cf: V790 = AND 0xd13 0xffffffff
0x8d0: JUMP 0xd13
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x8d1, V786, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, 0x8d1, V786, S1]

================================

Block 0x8d1
[0x8d1:0x934]
---
Predecessors: [0xd24]
Successors: [0x935]
---
0x8d1 JUMPDEST
0x8d2 PUSH1 0x1
0x8d4 PUSH1 0xa0
0x8d6 PUSH1 0x2
0x8d8 EXP
0x8d9 SUB
0x8da DUP1
0x8db DUP6
0x8dc AND
0x8dd PUSH1 0x0
0x8df DUP2
0x8e0 DUP2
0x8e1 MSTORE
0x8e2 PUSH1 0x7
0x8e4 PUSH1 0x20
0x8e6 SWAP1
0x8e7 DUP2
0x8e8 MSTORE
0x8e9 PUSH1 0x40
0x8eb DUP1
0x8ec DUP4
0x8ed SHA3
0x8ee CALLER
0x8ef DUP7
0x8f0 AND
0x8f1 DUP5
0x8f2 MSTORE
0x8f3 SWAP1
0x8f4 SWAP2
0x8f5 MSTORE
0x8f6 SWAP1
0x8f7 DUP2
0x8f8 SWAP1
0x8f9 SHA3
0x8fa SWAP4
0x8fb SWAP1
0x8fc SWAP4
0x8fd SSTORE
0x8fe SWAP1
0x8ff DUP5
0x900 AND
0x901 SWAP2
0x902 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x923 SWAP1
0x924 DUP5
0x925 SWAP1
0x926 MLOAD
0x927 SWAP1
0x928 DUP2
0x929 MSTORE
0x92a PUSH1 0x20
0x92c ADD
0x92d PUSH1 0x40
0x92f MLOAD
0x930 DUP1
0x931 SWAP2
0x932 SUB
0x933 SWAP1
0x934 LOG3
---
0x8d1: JUMPDEST 
0x8d2: V791 = 0x1
0x8d4: V792 = 0xa0
0x8d6: V793 = 0x2
0x8d8: V794 = EXP 0x2 0xa0
0x8d9: V795 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8dc: V796 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x8dd: V797 = 0x0
0x8e1: M[0x0] = V796
0x8e2: V798 = 0x7
0x8e4: V799 = 0x20
0x8e8: M[0x20] = 0x7
0x8e9: V800 = 0x40
0x8ed: V801 = SHA3 0x0 0x40
0x8ee: V802 = CALLER
0x8f0: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff V802
0x8f2: M[0x0] = V803
0x8f5: M[0x20] = V801
0x8f9: V804 = SHA3 0x0 0x40
0x8fd: S[V804] = S0
0x900: V805 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x902: V806 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x926: V807 = M[0x40]
0x929: M[V807] = S1
0x92a: V808 = 0x20
0x92c: V809 = ADD 0x20 V807
0x92d: V810 = 0x40
0x92f: V811 = M[0x40]
0x932: V812 = SUB V809 V811
0x934: LOG V811 V812 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V796 V805
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1]

================================

Block 0x935
[0x935:0x939]
---
Predecessors: [0x8d1]
Successors: [0x119]
---
0x935 JUMPDEST
0x936 POP
0x937 POP
0x938 POP
0x939 JUMP
---
0x935: JUMPDEST 
0x939: JUMP S3
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x119, S5, S4]

================================

Block 0x93a
[0x93a:0x93f]
---
Predecessors: [0x24a]
Successors: [0x1de]
---
0x93a JUMPDEST
0x93b PUSH1 0x2
0x93d SLOAD
0x93e DUP2
0x93f JUMP
---
0x93a: JUMPDEST 
0x93b: V813 = 0x2
0x93d: V814 = S[0x2]
0x93f: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V814]
Exit stack: [V10, 0x1de, V814]

================================

Block 0x940
[0x940:0x945]
---
Predecessors: [0x26f]
Successors: [0x1de]
---
0x940 JUMPDEST
0x941 PUSH1 0x4
0x943 SLOAD
0x944 DUP2
0x945 JUMP
---
0x940: JUMPDEST 
0x941: V815 = 0x4
0x943: V816 = S[0x4]
0x945: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V816]
Exit stack: [V10, 0x1de, V816]

================================

Block 0x946
[0x946:0x94b]
---
Predecessors: [0x294]
Successors: [0x1de]
---
0x946 JUMPDEST
0x947 PUSH1 0x3
0x949 SLOAD
0x94a DUP2
0x94b JUMP
---
0x946: JUMPDEST 
0x947: V817 = 0x3
0x949: V818 = S[0x3]
0x94b: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V818]
Exit stack: [V10, 0x1de, V818]

================================

Block 0x94c
[0x94c:0x962]
---
Predecessors: [0x2b9]
Successors: [0x963, 0x967]
---
0x94c JUMPDEST
0x94d PUSH1 0x9
0x94f SLOAD
0x950 CALLER
0x951 PUSH1 0x1
0x953 PUSH1 0xa0
0x955 PUSH1 0x2
0x957 EXP
0x958 SUB
0x959 SWAP1
0x95a DUP2
0x95b AND
0x95c SWAP2
0x95d AND
0x95e EQ
0x95f PUSH2 0x967
0x962 JUMPI
---
0x94c: JUMPDEST 
0x94d: V819 = 0x9
0x94f: V820 = S[0x9]
0x950: V821 = CALLER
0x951: V822 = 0x1
0x953: V823 = 0xa0
0x955: V824 = 0x2
0x957: V825 = EXP 0x2 0xa0
0x958: V826 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95b: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0x95d: V828 = AND V820 0xffffffffffffffffffffffffffffffffffffffff
0x95e: V829 = EQ V828 V827
0x95f: V830 = 0x967
0x962: JUMPI 0x967 V829
---
Entry stack: [V10, 0x119, V232, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, V232, V234]

================================

Block 0x963
[0x963:0x966]
---
Predecessors: [0x94c]
Successors: []
---
0x963 PUSH1 0x0
0x965 DUP1
0x966 REVERT
---
0x963: V831 = 0x0
0x966: REVERT 0x0 0x0
---
Entry stack: [V10, 0x119, V232, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, V232, V234]

================================

Block 0x967
[0x967:0x979]
---
Predecessors: [0x94c]
Successors: [0x97a, 0x97f]
---
0x967 JUMPDEST
0x968 PUSH1 0x1
0x96a PUSH1 0xa0
0x96c PUSH1 0x2
0x96e EXP
0x96f SUB
0x970 DUP3
0x971 AND
0x972 ISZERO
0x973 DUP1
0x974 ISZERO
0x975 SWAP1
0x976 PUSH2 0x97f
0x979 JUMPI
---
0x967: JUMPDEST 
0x968: V832 = 0x1
0x96a: V833 = 0xa0
0x96c: V834 = 0x2
0x96e: V835 = EXP 0x2 0xa0
0x96f: V836 = SUB 0x10000000000000000000000000000000000000000 0x1
0x971: V837 = AND V232 0xffffffffffffffffffffffffffffffffffffffff
0x972: V838 = ISZERO V837
0x974: V839 = ISZERO V838
0x976: V840 = 0x97f
0x979: JUMPI 0x97f V838
---
Entry stack: [V10, 0x119, V232, V234]
Stack pops: 2
Stack additions: [S1, S0, V839]
Exit stack: [V10, 0x119, V232, V234, V839]

================================

Block 0x97a
[0x97a:0x97e]
---
Predecessors: [0x967]
Successors: [0x97f]
---
0x97a POP
0x97b PUSH1 0x0
0x97d DUP2
0x97e GT
---
0x97b: V841 = 0x0
0x97e: V842 = GT V234 0x0
---
Entry stack: [V10, 0x119, V232, V234, V839]
Stack pops: 2
Stack additions: [S1, V842]
Exit stack: [V10, 0x119, V232, V234, V842]

================================

Block 0x97f
[0x97f:0x985]
---
Predecessors: [0x967, 0x97a]
Successors: [0x986, 0x98d]
---
0x97f JUMPDEST
0x980 DUP1
0x981 ISZERO
0x982 PUSH2 0x98d
0x985 JUMPI
---
0x97f: JUMPDEST 
0x981: V843 = ISZERO S0
0x982: V844 = 0x98d
0x985: JUMPI 0x98d V843
---
Entry stack: [V10, 0x119, V232, V234, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x119, V232, V234, S0]

================================

Block 0x986
[0x986:0x98c]
---
Predecessors: [0x97f]
Successors: [0x98d]
---
0x986 POP
0x987 DUP1
0x988 PUSH1 0x5
0x98a SLOAD
0x98b LT
0x98c ISZERO
---
0x988: V845 = 0x5
0x98a: V846 = S[0x5]
0x98b: V847 = LT V846 V234
0x98c: V848 = ISZERO V847
---
Entry stack: [V10, 0x119, V232, V234, S0]
Stack pops: 2
Stack additions: [S1, V848]
Exit stack: [V10, 0x119, V232, V234, V848]

================================

Block 0x98d
[0x98d:0x993]
---
Predecessors: [0x97f, 0x986]
Successors: [0x994, 0x998]
---
0x98d JUMPDEST
0x98e ISZERO
0x98f ISZERO
0x990 PUSH2 0x998
0x993 JUMPI
---
0x98d: JUMPDEST 
0x98e: V849 = ISZERO S0
0x98f: V850 = ISZERO V849
0x990: V851 = 0x998
0x993: JUMPI 0x998 V850
---
Entry stack: [V10, 0x119, V232, V234, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x119, V232, V234]

================================

Block 0x994
[0x994:0x997]
---
Predecessors: [0x98d]
Successors: []
---
0x994 PUSH1 0x0
0x996 DUP1
0x997 REVERT
---
0x994: V852 = 0x0
0x997: REVERT 0x0 0x0
---
Entry stack: [V10, 0x119, V232, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, V232, V234]

================================

Block 0x998
[0x998:0x9c2]
---
Predecessors: [0x98d]
Successors: [0xd13]
---
0x998 JUMPDEST
0x999 PUSH1 0x9
0x99b SLOAD
0x99c PUSH1 0x1
0x99e PUSH1 0xa0
0x9a0 PUSH1 0x2
0x9a2 EXP
0x9a3 SUB
0x9a4 AND
0x9a5 PUSH1 0x0
0x9a7 SWAP1
0x9a8 DUP2
0x9a9 MSTORE
0x9aa PUSH1 0x6
0x9ac PUSH1 0x20
0x9ae MSTORE
0x9af PUSH1 0x40
0x9b1 SWAP1
0x9b2 SHA3
0x9b3 SLOAD
0x9b4 PUSH2 0x9c3
0x9b7 SWAP1
0x9b8 DUP3
0x9b9 PUSH4 0xffffffff
0x9be PUSH2 0xd13
0x9c1 AND
0x9c2 JUMP
---
0x998: JUMPDEST 
0x999: V853 = 0x9
0x99b: V854 = S[0x9]
0x99c: V855 = 0x1
0x99e: V856 = 0xa0
0x9a0: V857 = 0x2
0x9a2: V858 = EXP 0x2 0xa0
0x9a3: V859 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a4: V860 = AND 0xffffffffffffffffffffffffffffffffffffffff V854
0x9a5: V861 = 0x0
0x9a9: M[0x0] = V860
0x9aa: V862 = 0x6
0x9ac: V863 = 0x20
0x9ae: M[0x20] = 0x6
0x9af: V864 = 0x40
0x9b2: V865 = SHA3 0x0 0x40
0x9b3: V866 = S[V865]
0x9b4: V867 = 0x9c3
0x9b9: V868 = 0xffffffff
0x9be: V869 = 0xd13
0x9c1: V870 = AND 0xd13 0xffffffff
0x9c2: JUMP 0xd13
---
Entry stack: [V10, 0x119, V232, V234]
Stack pops: 1
Stack additions: [S0, 0x9c3, V866, S0]
Exit stack: [V10, 0x119, V232, V234, 0x9c3, V866, V234]

================================

Block 0x9c3
[0x9c3:0x9fa]
---
Predecessors: [0xd24]
Successors: [0xd2a]
---
0x9c3 JUMPDEST
0x9c4 PUSH1 0x9
0x9c6 SLOAD
0x9c7 PUSH1 0x1
0x9c9 PUSH1 0xa0
0x9cb PUSH1 0x2
0x9cd EXP
0x9ce SUB
0x9cf SWAP1
0x9d0 DUP2
0x9d1 AND
0x9d2 PUSH1 0x0
0x9d4 SWAP1
0x9d5 DUP2
0x9d6 MSTORE
0x9d7 PUSH1 0x6
0x9d9 PUSH1 0x20
0x9db MSTORE
0x9dc PUSH1 0x40
0x9de DUP1
0x9df DUP3
0x9e0 SHA3
0x9e1 SWAP4
0x9e2 SWAP1
0x9e3 SWAP4
0x9e4 SSTORE
0x9e5 SWAP1
0x9e6 DUP5
0x9e7 AND
0x9e8 DUP2
0x9e9 MSTORE
0x9ea SHA3
0x9eb SLOAD
0x9ec PUSH2 0x9fb
0x9ef SWAP1
0x9f0 DUP3
0x9f1 PUSH4 0xffffffff
0x9f6 PUSH2 0xd2a
0x9f9 AND
0x9fa JUMP
---
0x9c3: JUMPDEST 
0x9c4: V871 = 0x9
0x9c6: V872 = S[0x9]
0x9c7: V873 = 0x1
0x9c9: V874 = 0xa0
0x9cb: V875 = 0x2
0x9cd: V876 = EXP 0x2 0xa0
0x9ce: V877 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d1: V878 = AND 0xffffffffffffffffffffffffffffffffffffffff V872
0x9d2: V879 = 0x0
0x9d6: M[0x0] = V878
0x9d7: V880 = 0x6
0x9d9: V881 = 0x20
0x9db: M[0x20] = 0x6
0x9dc: V882 = 0x40
0x9e0: V883 = SHA3 0x0 0x40
0x9e4: S[V883] = S0
0x9e7: V884 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x9e9: M[0x0] = V884
0x9ea: V885 = SHA3 0x0 0x40
0x9eb: V886 = S[V885]
0x9ec: V887 = 0x9fb
0x9f1: V888 = 0xffffffff
0x9f6: V889 = 0xd2a
0x9f9: V890 = AND 0xd2a 0xffffffff
0x9fa: JUMP 0xd2a
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x9fb, V886, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, 0x9fb, V886, S1]

================================

Block 0x9fb
[0x9fb:0xa26]
---
Predecessors: [0xd0c]
Successors: [0xd13]
---
0x9fb JUMPDEST
0x9fc PUSH1 0x1
0x9fe PUSH1 0xa0
0xa00 PUSH1 0x2
0xa02 EXP
0xa03 SUB
0xa04 DUP4
0xa05 AND
0xa06 PUSH1 0x0
0xa08 SWAP1
0xa09 DUP2
0xa0a MSTORE
0xa0b PUSH1 0x6
0xa0d PUSH1 0x20
0xa0f MSTORE
0xa10 PUSH1 0x40
0xa12 SWAP1
0xa13 SHA3
0xa14 SSTORE
0xa15 PUSH1 0x5
0xa17 SLOAD
0xa18 PUSH2 0xa27
0xa1b SWAP1
0xa1c DUP3
0xa1d PUSH4 0xffffffff
0xa22 PUSH2 0xd13
0xa25 AND
0xa26 JUMP
---
0x9fb: JUMPDEST 
0x9fc: V891 = 0x1
0x9fe: V892 = 0xa0
0xa00: V893 = 0x2
0xa02: V894 = EXP 0x2 0xa0
0xa03: V895 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa05: V896 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xa06: V897 = 0x0
0xa0a: M[0x0] = V896
0xa0b: V898 = 0x6
0xa0d: V899 = 0x20
0xa0f: M[0x20] = 0x6
0xa10: V900 = 0x40
0xa13: V901 = SHA3 0x0 0x40
0xa14: S[V901] = S0
0xa15: V902 = 0x5
0xa17: V903 = S[0x5]
0xa18: V904 = 0xa27
0xa1d: V905 = 0xffffffff
0xa22: V906 = 0xd13
0xa25: V907 = AND 0xd13 0xffffffff
0xa26: JUMP 0xd13
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xa27, V903, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, 0xa27, V903, S1]

================================

Block 0xa27
[0xa27:0xa6d]
---
Predecessors: [0xd24]
Successors: [0xa6e]
---
0xa27 JUMPDEST
0xa28 PUSH1 0x5
0xa2a SSTORE
0xa2b PUSH1 0x9
0xa2d SLOAD
0xa2e PUSH1 0x1
0xa30 PUSH1 0xa0
0xa32 PUSH1 0x2
0xa34 EXP
0xa35 SUB
0xa36 DUP1
0xa37 DUP5
0xa38 AND
0xa39 SWAP2
0xa3a AND
0xa3b PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa5c DUP4
0xa5d PUSH1 0x40
0xa5f MLOAD
0xa60 SWAP1
0xa61 DUP2
0xa62 MSTORE
0xa63 PUSH1 0x20
0xa65 ADD
0xa66 PUSH1 0x40
0xa68 MLOAD
0xa69 DUP1
0xa6a SWAP2
0xa6b SUB
0xa6c SWAP1
0xa6d LOG3
---
0xa27: JUMPDEST 
0xa28: V908 = 0x5
0xa2a: S[0x5] = V1174
0xa2b: V909 = 0x9
0xa2d: V910 = S[0x9]
0xa2e: V911 = 0x1
0xa30: V912 = 0xa0
0xa32: V913 = 0x2
0xa34: V914 = EXP 0x2 0xa0
0xa35: V915 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa38: V916 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xa3a: V917 = AND V910 0xffffffffffffffffffffffffffffffffffffffff
0xa3b: V918 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa5d: V919 = 0x40
0xa5f: V920 = M[0x40]
0xa62: M[V920] = S1
0xa63: V921 = 0x20
0xa65: V922 = ADD 0x20 V920
0xa66: V923 = 0x40
0xa68: V924 = M[0x40]
0xa6b: V925 = SUB V922 V924
0xa6d: LOG V924 V925 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V917 V916
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, V1174]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1]

================================

Block 0xa6e
[0xa6e:0xa6e]
---
Predecessors: [0xa27]
Successors: [0xa6f]
---
0xa6e JUMPDEST
---
0xa6e: JUMPDEST 
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]

================================

Block 0xa6f
[0xa6f:0xa72]
---
Predecessors: [0xa6e]
Successors: [0x119, 0x51a]
---
0xa6f JUMPDEST
0xa70 POP
0xa71 POP
0xa72 JUMP
---
0xa6f: JUMPDEST 
0xa72: JUMP S2
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S3]

================================

Block 0xa73
[0xa73:0xa8c]
---
Predecessors: [0x2dd]
Successors: [0xa8d]
---
0xa73 JUMPDEST
0xa74 PUSH1 0x1
0xa76 PUSH1 0xa0
0xa78 PUSH1 0x2
0xa7a EXP
0xa7b SUB
0xa7c DUP2
0xa7d AND
0xa7e PUSH1 0x0
0xa80 SWAP1
0xa81 DUP2
0xa82 MSTORE
0xa83 PUSH1 0x6
0xa85 PUSH1 0x20
0xa87 MSTORE
0xa88 PUSH1 0x40
0xa8a SWAP1
0xa8b SHA3
0xa8c SLOAD
---
0xa73: JUMPDEST 
0xa74: V926 = 0x1
0xa76: V927 = 0xa0
0xa78: V928 = 0x2
0xa7a: V929 = EXP 0x2 0xa0
0xa7b: V930 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7d: V931 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0xa7e: V932 = 0x0
0xa82: M[0x0] = V931
0xa83: V933 = 0x6
0xa85: V934 = 0x20
0xa87: M[0x20] = 0x6
0xa88: V935 = 0x40
0xa8b: V936 = SHA3 0x0 0x40
0xa8c: V937 = S[V936]
---
Entry stack: [V10, 0x1de, V248]
Stack pops: 1
Stack additions: [S0, V937]
Exit stack: [V10, 0x1de, V248, V937]

================================

Block 0xa8d
[0xa8d:0xa91]
---
Predecessors: [0xa73]
Successors: [0x1de]
---
0xa8d JUMPDEST
0xa8e SWAP2
0xa8f SWAP1
0xa90 POP
0xa91 JUMP
---
0xa8d: JUMPDEST 
0xa91: JUMP 0x1de
---
Entry stack: [V10, 0x1de, V248, V937]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V937]

================================

Block 0xa92
[0xa92:0xa97]
---
Predecessors: [0x30e]
Successors: [0x1de]
---
0xa92 JUMPDEST
0xa93 PUSH1 0x8
0xa95 SLOAD
0xa96 DUP2
0xa97 JUMP
---
0xa92: JUMPDEST 
0xa93: V938 = 0x8
0xa95: V939 = S[0x8]
0xa97: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V939]
Exit stack: [V10, 0x1de, V939]

================================

Block 0xa98
[0xa98:0xa9d]
---
Predecessors: [0x333]
Successors: [0x1de]
---
0xa98 JUMPDEST
0xa99 PUSH1 0xa
0xa9b SLOAD
0xa9c DUP2
0xa9d JUMP
---
0xa98: JUMPDEST 
0xa99: V940 = 0xa
0xa9b: V941 = S[0xa]
0xa9d: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V941]
Exit stack: [V10, 0x1de, V941]

================================

Block 0xa9e
[0xa9e:0xaac]
---
Predecessors: [0x358]
Successors: [0x360]
---
0xa9e JUMPDEST
0xa9f PUSH1 0x9
0xaa1 SLOAD
0xaa2 PUSH1 0x1
0xaa4 PUSH1 0xa0
0xaa6 PUSH1 0x2
0xaa8 EXP
0xaa9 SUB
0xaaa AND
0xaab DUP2
0xaac JUMP
---
0xa9e: JUMPDEST 
0xa9f: V942 = 0x9
0xaa1: V943 = S[0x9]
0xaa2: V944 = 0x1
0xaa4: V945 = 0xa0
0xaa6: V946 = 0x2
0xaa8: V947 = EXP 0x2 0xa0
0xaa9: V948 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaaa: V949 = AND 0xffffffffffffffffffffffffffffffffffffffff V943
0xaac: JUMP 0x360
---
Entry stack: [V10, 0x360]
Stack pops: 1
Stack additions: [S0, V949]
Exit stack: [V10, 0x360, V949]

================================

Block 0xaad
[0xaad:0xafc]
---
Predecessors: [0x387]
Successors: [0x716, 0xafd]
---
0xaad JUMPDEST
0xaae PUSH1 0x1
0xab0 DUP1
0xab1 SLOAD
0xab2 PUSH1 0x1
0xab4 DUP2
0xab5 PUSH1 0x1
0xab7 AND
0xab8 ISZERO
0xab9 PUSH2 0x100
0xabc MUL
0xabd SUB
0xabe AND
0xabf PUSH1 0x2
0xac1 SWAP1
0xac2 DIV
0xac3 DUP1
0xac4 PUSH1 0x1f
0xac6 ADD
0xac7 PUSH1 0x20
0xac9 DUP1
0xaca SWAP2
0xacb DIV
0xacc MUL
0xacd PUSH1 0x20
0xacf ADD
0xad0 PUSH1 0x40
0xad2 MLOAD
0xad3 SWAP1
0xad4 DUP2
0xad5 ADD
0xad6 PUSH1 0x40
0xad8 MSTORE
0xad9 DUP1
0xada SWAP3
0xadb SWAP2
0xadc SWAP1
0xadd DUP2
0xade DUP2
0xadf MSTORE
0xae0 PUSH1 0x20
0xae2 ADD
0xae3 DUP3
0xae4 DUP1
0xae5 SLOAD
0xae6 PUSH1 0x1
0xae8 DUP2
0xae9 PUSH1 0x1
0xaeb AND
0xaec ISZERO
0xaed PUSH2 0x100
0xaf0 MUL
0xaf1 SUB
0xaf2 AND
0xaf3 PUSH1 0x2
0xaf5 SWAP1
0xaf6 DIV
0xaf7 DUP1
0xaf8 ISZERO
0xaf9 PUSH2 0x716
0xafc JUMPI
---
0xaad: JUMPDEST 
0xaae: V950 = 0x1
0xab1: V951 = S[0x1]
0xab2: V952 = 0x1
0xab5: V953 = 0x1
0xab7: V954 = AND 0x1 V951
0xab8: V955 = ISZERO V954
0xab9: V956 = 0x100
0xabc: V957 = MUL 0x100 V955
0xabd: V958 = SUB V957 0x1
0xabe: V959 = AND V958 V951
0xabf: V960 = 0x2
0xac2: V961 = DIV V959 0x2
0xac4: V962 = 0x1f
0xac6: V963 = ADD 0x1f V961
0xac7: V964 = 0x20
0xacb: V965 = DIV V963 0x20
0xacc: V966 = MUL V965 0x20
0xacd: V967 = 0x20
0xacf: V968 = ADD 0x20 V966
0xad0: V969 = 0x40
0xad2: V970 = M[0x40]
0xad5: V971 = ADD V970 V968
0xad6: V972 = 0x40
0xad8: M[0x40] = V971
0xadf: M[V970] = V961
0xae0: V973 = 0x20
0xae2: V974 = ADD 0x20 V970
0xae5: V975 = S[0x1]
0xae6: V976 = 0x1
0xae9: V977 = 0x1
0xaeb: V978 = AND 0x1 V975
0xaec: V979 = ISZERO V978
0xaed: V980 = 0x100
0xaf0: V981 = MUL 0x100 V979
0xaf1: V982 = SUB V981 0x1
0xaf2: V983 = AND V982 V975
0xaf3: V984 = 0x2
0xaf6: V985 = DIV V983 0x2
0xaf8: V986 = ISZERO V985
0xaf9: V987 = 0x716
0xafc: JUMPI 0x716 V986
---
Entry stack: [V10, 0x12f]
Stack pops: 0
Stack additions: [V970, 0x1, V961, V974, 0x1, V985]
Exit stack: [V10, 0x12f, V970, 0x1, V961, V974, 0x1, V985]

================================

Block 0xafd
[0xafd:0xb04]
---
Predecessors: [0xaad]
Successors: [0x6eb, 0xb05]
---
0xafd DUP1
0xafe PUSH1 0x1f
0xb00 LT
0xb01 PUSH2 0x6eb
0xb04 JUMPI
---
0xafe: V988 = 0x1f
0xb00: V989 = LT 0x1f V985
0xb01: V990 = 0x6eb
0xb04: JUMPI 0x6eb V989
---
Entry stack: [V10, 0x12f, V970, 0x1, V961, V974, 0x1, V985]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x12f, V970, 0x1, V961, V974, 0x1, V985]

================================

Block 0xb05
[0xb05:0xb17]
---
Predecessors: [0xafd]
Successors: [0x716]
---
0xb05 PUSH2 0x100
0xb08 DUP1
0xb09 DUP4
0xb0a SLOAD
0xb0b DIV
0xb0c MUL
0xb0d DUP4
0xb0e MSTORE
0xb0f SWAP2
0xb10 PUSH1 0x20
0xb12 ADD
0xb13 SWAP2
0xb14 PUSH2 0x716
0xb17 JUMP
---
0xb05: V991 = 0x100
0xb0a: V992 = S[0x1]
0xb0b: V993 = DIV V992 0x100
0xb0c: V994 = MUL V993 0x100
0xb0e: M[V974] = V994
0xb10: V995 = 0x20
0xb12: V996 = ADD 0x20 V974
0xb14: V997 = 0x716
0xb17: JUMP 0x716
---
Entry stack: [V10, 0x12f, V970, 0x1, V961, V974, 0x1, V985]
Stack pops: 3
Stack additions: [V996, S1, S0]
Exit stack: [V10, 0x12f, V970, 0x1, V961, V996, 0x1, V985]

================================

Block 0xb18
[0xb18:0xb25]
---
Predecessors: []
Successors: [0xb26]
---
0xb18 JUMPDEST
0xb19 DUP3
0xb1a ADD
0xb1b SWAP2
0xb1c SWAP1
0xb1d PUSH1 0x0
0xb1f MSTORE
0xb20 PUSH1 0x20
0xb22 PUSH1 0x0
0xb24 SHA3
0xb25 SWAP1
---
0xb18: JUMPDEST 
0xb1a: V998 = ADD S2 S0
0xb1d: V999 = 0x0
0xb1f: M[0x0] = S1
0xb20: V1000 = 0x20
0xb22: V1001 = 0x0
0xb24: V1002 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V998, V1002, S2]
Exit stack: [V998, V1002, S2]

================================

Block 0xb26
[0xb26:0xb39]
---
Predecessors: [0xb18]
Successors: [0x6f9, 0xb3a]
---
0xb26 JUMPDEST
0xb27 DUP2
0xb28 SLOAD
0xb29 DUP2
0xb2a MSTORE
0xb2b SWAP1
0xb2c PUSH1 0x1
0xb2e ADD
0xb2f SWAP1
0xb30 PUSH1 0x20
0xb32 ADD
0xb33 DUP1
0xb34 DUP4
0xb35 GT
0xb36 PUSH2 0x6f9
0xb39 JUMPI
---
0xb26: JUMPDEST 
0xb28: V1003 = S[V1002]
0xb2a: M[S0] = V1003
0xb2c: V1004 = 0x1
0xb2e: V1005 = ADD 0x1 V1002
0xb30: V1006 = 0x20
0xb32: V1007 = ADD 0x20 S0
0xb35: V1008 = GT V998 V1007
0xb36: V1009 = 0x6f9
0xb39: JUMPI 0x6f9 V1008
---
Entry stack: [V998, V1002, S0]
Stack pops: 3
Stack additions: [S2, V1005, V1007]
Exit stack: [V998, V1005, V1007]

================================

Block 0xb3a
[0xb3a:0xb42]
---
Predecessors: [0xb26]
Successors: [0xb43]
---
0xb3a DUP3
0xb3b SWAP1
0xb3c SUB
0xb3d PUSH1 0x1f
0xb3f AND
0xb40 DUP3
0xb41 ADD
0xb42 SWAP2
---
0xb3c: V1010 = SUB V1007 V998
0xb3d: V1011 = 0x1f
0xb3f: V1012 = AND 0x1f V1010
0xb41: V1013 = ADD V998 V1012
---
Entry stack: [V998, V1005, V1007]
Stack pops: 3
Stack additions: [V1013, S1, S2]
Exit stack: [V1013, V1005, V998]

================================

Block 0xb43
[0xb43:0xb4a]
---
Predecessors: [0xb3a]
Successors: []
Has unresolved jump.
---
0xb43 JUMPDEST
0xb44 POP
0xb45 POP
0xb46 POP
0xb47 POP
0xb48 POP
0xb49 DUP2
0xb4a JUMP
---
0xb43: JUMPDEST 
0xb4a: JUMP S6
---
Entry stack: [V1013, V1005, V998]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0xb4b
[0xb4b:0xb59]
---
Predecessors: [0x412, 0x4ff]
Successors: [0xb5a, 0xb65]
---
0xb4b JUMPDEST
0xb4c PUSH1 0x0
0xb4e PUSH1 0x8
0xb50 SLOAD
0xb51 TIMESTAMP
0xb52 LT
0xb53 ISZERO
0xb54 DUP1
0xb55 ISZERO
0xb56 PUSH2 0xb65
0xb59 JUMPI
---
0xb4b: JUMPDEST 
0xb4c: V1014 = 0x0
0xb4e: V1015 = 0x8
0xb50: V1016 = S[0x8]
0xb51: V1017 = TIMESTAMP
0xb52: V1018 = LT V1017 V1016
0xb53: V1019 = ISZERO V1018
0xb55: V1020 = ISZERO V1019
0xb56: V1021 = 0xb65
0xb59: JUMPI 0xb65 V1020
---
Entry stack: [V10, 0x119, S4, V448, 0x0, S1, {0x1de, 0x50d}]
Stack pops: 0
Stack additions: [0x0, V1019]
Exit stack: [V10, 0x119, S4, V448, 0x0, S1, {0x1de, 0x50d}, 0x0, V1019]

================================

Block 0xb5a
[0xb5a:0xb64]
---
Predecessors: [0xb4b]
Successors: [0xb65]
---
0xb5a POP
0xb5b PUSH1 0x8
0xb5d SLOAD
0xb5e PUSH2 0x708
0xb61 ADD
0xb62 TIMESTAMP
0xb63 GT
0xb64 ISZERO
---
0xb5b: V1022 = 0x8
0xb5d: V1023 = S[0x8]
0xb5e: V1024 = 0x708
0xb61: V1025 = ADD 0x708 V1023
0xb62: V1026 = TIMESTAMP
0xb63: V1027 = GT V1026 V1025
0xb64: V1028 = ISZERO V1027
---
Entry stack: [V10, 0x119, S6, V448, 0x0, S3, {0x1de, 0x50d}, 0x0, V1019]
Stack pops: 1
Stack additions: [V1028]
Exit stack: [V10, 0x119, S6, V448, 0x0, S3, {0x1de, 0x50d}, 0x0, V1028]

================================

Block 0xb65
[0xb65:0xb6a]
---
Predecessors: [0xb4b, 0xb5a]
Successors: [0xb6b, 0xb85]
---
0xb65 JUMPDEST
0xb66 ISZERO
0xb67 PUSH2 0xb85
0xb6a JUMPI
---
0xb65: JUMPDEST 
0xb66: V1029 = ISZERO S0
0xb67: V1030 = 0xb85
0xb6a: JUMPI 0xb85 V1029
---
Entry stack: [V10, 0x119, S6, V448, 0x0, S3, {0x1de, 0x50d}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x119, S6, V448, 0x0, S3, {0x1de, 0x50d}, 0x0]

================================

Block 0xb6b
[0xb6b:0xb7d]
---
Predecessors: [0xb65]
Successors: [0xce4]
---
0xb6b PUSH1 0xa
0xb6d SLOAD
0xb6e PUSH2 0xb7e
0xb71 SWAP1
0xb72 PUSH1 0x2
0xb74 PUSH4 0xffffffff
0xb79 PUSH2 0xce4
0xb7c AND
0xb7d JUMP
---
0xb6b: V1031 = 0xa
0xb6d: V1032 = S[0xa]
0xb6e: V1033 = 0xb7e
0xb72: V1034 = 0x2
0xb74: V1035 = 0xffffffff
0xb79: V1036 = 0xce4
0xb7c: V1037 = AND 0xce4 0xffffffff
0xb7d: JUMP 0xce4
---
Entry stack: [V10, 0x119, S5, V448, 0x0, S2, {0x1de, 0x50d}, 0x0]
Stack pops: 0
Stack additions: [0xb7e, V1032, 0x2]
Exit stack: [V10, 0x119, S5, V448, 0x0, S2, {0x1de, 0x50d}, 0x0, 0xb7e, V1032, 0x2]

================================

Block 0xb7e
[0xb7e:0xb84]
---
Predecessors: [0xd0c]
Successors: [0x7bb]
---
0xb7e JUMPDEST
0xb7f SWAP1
0xb80 POP
0xb81 PUSH2 0x7bb
0xb84 JUMP
---
0xb7e: JUMPDEST 
0xb81: V1038 = 0x7bb
0xb84: JUMP 0x7bb
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S0]

================================

Block 0xb85
[0xb85:0xb95]
---
Predecessors: [0xb65]
Successors: [0xb96, 0xba1]
---
0xb85 JUMPDEST
0xb86 PUSH1 0x8
0xb88 SLOAD
0xb89 PUSH2 0xe10
0xb8c ADD
0xb8d TIMESTAMP
0xb8e LT
0xb8f ISZERO
0xb90 DUP1
0xb91 ISZERO
0xb92 PUSH2 0xba1
0xb95 JUMPI
---
0xb85: JUMPDEST 
0xb86: V1039 = 0x8
0xb88: V1040 = S[0x8]
0xb89: V1041 = 0xe10
0xb8c: V1042 = ADD 0xe10 V1040
0xb8d: V1043 = TIMESTAMP
0xb8e: V1044 = LT V1043 V1042
0xb8f: V1045 = ISZERO V1044
0xb91: V1046 = ISZERO V1045
0xb92: V1047 = 0xba1
0xb95: JUMPI 0xba1 V1046
---
Entry stack: [V10, 0x119, S5, V448, 0x0, S2, {0x1de, 0x50d}, 0x0]
Stack pops: 0
Stack additions: [V1045]
Exit stack: [V10, 0x119, S5, V448, 0x0, S2, {0x1de, 0x50d}, 0x0, V1045]

================================

Block 0xb96
[0xb96:0xba0]
---
Predecessors: [0xb85]
Successors: [0xba1]
---
0xb96 POP
0xb97 PUSH1 0x8
0xb99 SLOAD
0xb9a PUSH2 0x1518
0xb9d ADD
0xb9e TIMESTAMP
0xb9f GT
0xba0 ISZERO
---
0xb97: V1048 = 0x8
0xb99: V1049 = S[0x8]
0xb9a: V1050 = 0x1518
0xb9d: V1051 = ADD 0x1518 V1049
0xb9e: V1052 = TIMESTAMP
0xb9f: V1053 = GT V1052 V1051
0xba0: V1054 = ISZERO V1053
---
Entry stack: [V10, 0x119, S6, V448, 0x0, S3, {0x1de, 0x50d}, 0x0, V1045]
Stack pops: 1
Stack additions: [V1054]
Exit stack: [V10, 0x119, S6, V448, 0x0, S3, {0x1de, 0x50d}, 0x0, V1054]

================================

Block 0xba1
[0xba1:0xba6]
---
Predecessors: [0xb85, 0xb96]
Successors: [0xba7, 0xbaf]
---
0xba1 JUMPDEST
0xba2 ISZERO
0xba3 PUSH2 0xbaf
0xba6 JUMPI
---
0xba1: JUMPDEST 
0xba2: V1055 = ISZERO S0
0xba3: V1056 = 0xbaf
0xba6: JUMPI 0xbaf V1055
---
Entry stack: [V10, 0x119, S6, V448, 0x0, S3, {0x1de, 0x50d}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x119, S6, V448, 0x0, S3, {0x1de, 0x50d}, 0x0]

================================

Block 0xba7
[0xba7:0xbae]
---
Predecessors: [0xba1]
Successors: [0x7bb]
---
0xba7 POP
0xba8 PUSH1 0xa
0xbaa SLOAD
0xbab PUSH2 0x7bb
0xbae JUMP
---
0xba8: V1057 = 0xa
0xbaa: V1058 = S[0xa]
0xbab: V1059 = 0x7bb
0xbae: JUMP 0x7bb
---
Entry stack: [V10, 0x119, S5, V448, 0x0, S2, {0x1de, 0x50d}, 0x0]
Stack pops: 1
Stack additions: [V1058]
Exit stack: [V10, 0x119, S5, V448, 0x0, S2, {0x1de, 0x50d}, V1058]

================================

Block 0xbaf
[0xbaf:0xbb6]
---
Predecessors: [0xba1]
Successors: [0x7bb]
---
0xbaf JUMPDEST
0xbb0 POP
0xbb1 PUSH1 0x0
0xbb3 PUSH2 0x7bb
0xbb6 JUMP
---
0xbaf: JUMPDEST 
0xbb1: V1060 = 0x0
0xbb3: V1061 = 0x7bb
0xbb6: JUMP 0x7bb
---
Entry stack: [V10, 0x119, S5, V448, 0x0, S2, {0x1de, 0x50d}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x119, S5, V448, 0x0, S2, {0x1de, 0x50d}, 0x0]

================================

Block 0xbb7
[0xbb7:0xbb7]
---
Predecessors: []
Successors: [0xbb8]
---
0xbb7 JUMPDEST
---
0xbb7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbb8
[0xbb8:0xbb8]
---
Predecessors: [0xbb7]
Successors: [0xbb9]
---
0xbb8 JUMPDEST
---
0xbb8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbb9
[0xbb9:0xbbb]
---
Predecessors: [0xbb8]
Successors: []
Has unresolved jump.
---
0xbb9 JUMPDEST
0xbba SWAP1
0xbbb JUMP
---
0xbb9: JUMPDEST 
0xbbb: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xbbc
[0xbbc:0xbdf]
---
Predecessors: [0x437]
Successors: [0xbe0, 0xbe5]
---
0xbbc JUMPDEST
0xbbd PUSH1 0x1
0xbbf PUSH1 0xa0
0xbc1 PUSH1 0x2
0xbc3 EXP
0xbc4 SUB
0xbc5 CALLER
0xbc6 AND
0xbc7 PUSH1 0x0
0xbc9 SWAP1
0xbca DUP2
0xbcb MSTORE
0xbcc PUSH1 0x6
0xbce PUSH1 0x20
0xbd0 MSTORE
0xbd1 PUSH1 0x40
0xbd3 SWAP1
0xbd4 SHA3
0xbd5 SLOAD
0xbd6 DUP2
0xbd7 SWAP1
0xbd8 LT
0xbd9 DUP1
0xbda ISZERO
0xbdb SWAP1
0xbdc PUSH2 0xbe5
0xbdf JUMPI
---
0xbbc: JUMPDEST 
0xbbd: V1062 = 0x1
0xbbf: V1063 = 0xa0
0xbc1: V1064 = 0x2
0xbc3: V1065 = EXP 0x2 0xa0
0xbc4: V1066 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc5: V1067 = CALLER
0xbc6: V1068 = AND V1067 0xffffffffffffffffffffffffffffffffffffffff
0xbc7: V1069 = 0x0
0xbcb: M[0x0] = V1068
0xbcc: V1070 = 0x6
0xbce: V1071 = 0x20
0xbd0: M[0x20] = 0x6
0xbd1: V1072 = 0x40
0xbd4: V1073 = SHA3 0x0 0x40
0xbd5: V1074 = S[V1073]
0xbd8: V1075 = LT V1074 V375
0xbda: V1076 = ISZERO V1075
0xbdc: V1077 = 0xbe5
0xbdf: JUMPI 0xbe5 V1075
---
Entry stack: [V10, 0x119, V373, V375]
Stack pops: 1
Stack additions: [S0, V1076]
Exit stack: [V10, 0x119, V373, V375, V1076]

================================

Block 0xbe0
[0xbe0:0xbe4]
---
Predecessors: [0xbbc]
Successors: [0xbe5]
---
0xbe0 POP
0xbe1 PUSH1 0x0
0xbe3 DUP2
0xbe4 GT
---
0xbe1: V1078 = 0x0
0xbe4: V1079 = GT V375 0x0
---
Entry stack: [V10, 0x119, V373, V375, V1076]
Stack pops: 2
Stack additions: [S1, V1079]
Exit stack: [V10, 0x119, V373, V375, V1079]

================================

Block 0xbe5
[0xbe5:0xbeb]
---
Predecessors: [0xbbc, 0xbe0]
Successors: [0xbec, 0xbf0]
---
0xbe5 JUMPDEST
0xbe6 ISZERO
0xbe7 ISZERO
0xbe8 PUSH2 0xbf0
0xbeb JUMPI
---
0xbe5: JUMPDEST 
0xbe6: V1080 = ISZERO S0
0xbe7: V1081 = ISZERO V1080
0xbe8: V1082 = 0xbf0
0xbeb: JUMPI 0xbf0 V1081
---
Entry stack: [V10, 0x119, V373, V375, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x119, V373, V375]

================================

Block 0xbec
[0xbec:0xbef]
---
Predecessors: [0xbe5]
Successors: []
---
0xbec PUSH1 0x0
0xbee DUP1
0xbef REVERT
---
0xbec: V1083 = 0x0
0xbef: REVERT 0x0 0x0
---
Entry stack: [V10, 0x119, V373, V375]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, V373, V375]

================================

Block 0xbf0
[0xbf0:0xc18]
---
Predecessors: [0xbe5]
Successors: [0xd13]
---
0xbf0 JUMPDEST
0xbf1 PUSH1 0x1
0xbf3 PUSH1 0xa0
0xbf5 PUSH1 0x2
0xbf7 EXP
0xbf8 SUB
0xbf9 CALLER
0xbfa AND
0xbfb PUSH1 0x0
0xbfd SWAP1
0xbfe DUP2
0xbff MSTORE
0xc00 PUSH1 0x6
0xc02 PUSH1 0x20
0xc04 MSTORE
0xc05 PUSH1 0x40
0xc07 SWAP1
0xc08 SHA3
0xc09 SLOAD
0xc0a PUSH2 0xc19
0xc0d SWAP1
0xc0e DUP3
0xc0f PUSH4 0xffffffff
0xc14 PUSH2 0xd13
0xc17 AND
0xc18 JUMP
---
0xbf0: JUMPDEST 
0xbf1: V1084 = 0x1
0xbf3: V1085 = 0xa0
0xbf5: V1086 = 0x2
0xbf7: V1087 = EXP 0x2 0xa0
0xbf8: V1088 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf9: V1089 = CALLER
0xbfa: V1090 = AND V1089 0xffffffffffffffffffffffffffffffffffffffff
0xbfb: V1091 = 0x0
0xbff: M[0x0] = V1090
0xc00: V1092 = 0x6
0xc02: V1093 = 0x20
0xc04: M[0x20] = 0x6
0xc05: V1094 = 0x40
0xc08: V1095 = SHA3 0x0 0x40
0xc09: V1096 = S[V1095]
0xc0a: V1097 = 0xc19
0xc0f: V1098 = 0xffffffff
0xc14: V1099 = 0xd13
0xc17: V1100 = AND 0xd13 0xffffffff
0xc18: JUMP 0xd13
---
Entry stack: [V10, 0x119, V373, V375]
Stack pops: 1
Stack additions: [S0, 0xc19, V1096, S0]
Exit stack: [V10, 0x119, V373, V375, 0xc19, V1096, V375]

================================

Block 0xc19
[0xc19:0xc4d]
---
Predecessors: [0xd24]
Successors: [0xd2a]
---
0xc19 JUMPDEST
0xc1a PUSH1 0x1
0xc1c PUSH1 0xa0
0xc1e PUSH1 0x2
0xc20 EXP
0xc21 SUB
0xc22 CALLER
0xc23 DUP2
0xc24 AND
0xc25 PUSH1 0x0
0xc27 SWAP1
0xc28 DUP2
0xc29 MSTORE
0xc2a PUSH1 0x6
0xc2c PUSH1 0x20
0xc2e MSTORE
0xc2f PUSH1 0x40
0xc31 DUP1
0xc32 DUP3
0xc33 SHA3
0xc34 SWAP4
0xc35 SWAP1
0xc36 SWAP4
0xc37 SSTORE
0xc38 SWAP1
0xc39 DUP5
0xc3a AND
0xc3b DUP2
0xc3c MSTORE
0xc3d SHA3
0xc3e SLOAD
0xc3f PUSH2 0xc4e
0xc42 SWAP1
0xc43 DUP3
0xc44 PUSH4 0xffffffff
0xc49 PUSH2 0xd2a
0xc4c AND
0xc4d JUMP
---
0xc19: JUMPDEST 
0xc1a: V1101 = 0x1
0xc1c: V1102 = 0xa0
0xc1e: V1103 = 0x2
0xc20: V1104 = EXP 0x2 0xa0
0xc21: V1105 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc22: V1106 = CALLER
0xc24: V1107 = AND 0xffffffffffffffffffffffffffffffffffffffff V1106
0xc25: V1108 = 0x0
0xc29: M[0x0] = V1107
0xc2a: V1109 = 0x6
0xc2c: V1110 = 0x20
0xc2e: M[0x20] = 0x6
0xc2f: V1111 = 0x40
0xc33: V1112 = SHA3 0x0 0x40
0xc37: S[V1112] = S0
0xc3a: V1113 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc3c: M[0x0] = V1113
0xc3d: V1114 = SHA3 0x0 0x40
0xc3e: V1115 = S[V1114]
0xc3f: V1116 = 0xc4e
0xc44: V1117 = 0xffffffff
0xc49: V1118 = 0xd2a
0xc4c: V1119 = AND 0xd2a 0xffffffff
0xc4d: JUMP 0xd2a
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xc4e, V1115, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, 0xc4e, V1115, S1]

================================

Block 0xc4e
[0xc4e:0xca6]
---
Predecessors: [0xd0c]
Successors: [0xca7]
---
0xc4e JUMPDEST
0xc4f PUSH1 0x1
0xc51 PUSH1 0xa0
0xc53 PUSH1 0x2
0xc55 EXP
0xc56 SUB
0xc57 DUP1
0xc58 DUP5
0xc59 AND
0xc5a PUSH1 0x0
0xc5c DUP2
0xc5d DUP2
0xc5e MSTORE
0xc5f PUSH1 0x6
0xc61 PUSH1 0x20
0xc63 MSTORE
0xc64 PUSH1 0x40
0xc66 SWAP1
0xc67 DUP2
0xc68 SWAP1
0xc69 SHA3
0xc6a SWAP4
0xc6b SWAP1
0xc6c SWAP4
0xc6d SSTORE
0xc6e SWAP2
0xc6f CALLER
0xc70 SWAP1
0xc71 SWAP2
0xc72 AND
0xc73 SWAP1
0xc74 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc95 SWAP1
0xc96 DUP5
0xc97 SWAP1
0xc98 MLOAD
0xc99 SWAP1
0xc9a DUP2
0xc9b MSTORE
0xc9c PUSH1 0x20
0xc9e ADD
0xc9f PUSH1 0x40
0xca1 MLOAD
0xca2 DUP1
0xca3 SWAP2
0xca4 SUB
0xca5 SWAP1
0xca6 LOG3
---
0xc4e: JUMPDEST 
0xc4f: V1120 = 0x1
0xc51: V1121 = 0xa0
0xc53: V1122 = 0x2
0xc55: V1123 = EXP 0x2 0xa0
0xc56: V1124 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc59: V1125 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc5a: V1126 = 0x0
0xc5e: M[0x0] = V1125
0xc5f: V1127 = 0x6
0xc61: V1128 = 0x20
0xc63: M[0x20] = 0x6
0xc64: V1129 = 0x40
0xc69: V1130 = SHA3 0x0 0x40
0xc6d: S[V1130] = S0
0xc6f: V1131 = CALLER
0xc72: V1132 = AND 0xffffffffffffffffffffffffffffffffffffffff V1131
0xc74: V1133 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc98: V1134 = M[0x40]
0xc9b: M[V1134] = S1
0xc9c: V1135 = 0x20
0xc9e: V1136 = ADD 0x20 V1134
0xc9f: V1137 = 0x40
0xca1: V1138 = M[0x40]
0xca4: V1139 = SUB V1136 V1138
0xca6: LOG V1138 V1139 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1132 V1125
---
Entry stack: [V10, 0x119, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V10, 0x119, S6, S5, S4, S3, S2, S1]

================================

Block 0xca7
[0xca7:0xcaa]
---
Predecessors: [0xc4e]
Successors: [0x119, 0x51a]
---
0xca7 JUMPDEST
0xca8 POP
0xca9 POP
0xcaa JUMP
---
0xca7: JUMPDEST 
0xcaa: JUMP S2
---
Entry stack: [V10, 0x119, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x119, S5, S4, S3]

================================

Block 0xcab
[0xcab:0xcb0]
---
Predecessors: [0x45b]
Successors: [0x1de]
---
0xcab JUMPDEST
0xcac PUSH1 0x5
0xcae SLOAD
0xcaf DUP2
0xcb0 JUMP
---
0xcab: JUMPDEST 
0xcac: V1140 = 0x5
0xcae: V1141 = S[0x5]
0xcb0: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V1141]
Exit stack: [V10, 0x1de, V1141]

================================

Block 0xcb1
[0xcb1:0xcb6]
---
Predecessors: [0x496]
Successors: [0x1de]
---
0xcb1 JUMPDEST
0xcb2 PUSH1 0xc
0xcb4 SLOAD
0xcb5 DUP2
0xcb6 JUMP
---
0xcb1: JUMPDEST 
0xcb2: V1142 = 0xc
0xcb4: V1143 = S[0xc]
0xcb6: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V1143]
Exit stack: [V10, 0x1de, V1143]

================================

Block 0xcb7
[0xcb7:0xcdd]
---
Predecessors: [0x4bb]
Successors: [0xcde]
---
0xcb7 JUMPDEST
0xcb8 PUSH1 0x1
0xcba PUSH1 0xa0
0xcbc PUSH1 0x2
0xcbe EXP
0xcbf SUB
0xcc0 DUP1
0xcc1 DUP4
0xcc2 AND
0xcc3 PUSH1 0x0
0xcc5 SWAP1
0xcc6 DUP2
0xcc7 MSTORE
0xcc8 PUSH1 0x7
0xcca PUSH1 0x20
0xccc SWAP1
0xccd DUP2
0xcce MSTORE
0xccf PUSH1 0x40
0xcd1 DUP1
0xcd2 DUP4
0xcd3 SHA3
0xcd4 SWAP4
0xcd5 DUP6
0xcd6 AND
0xcd7 DUP4
0xcd8 MSTORE
0xcd9 SWAP3
0xcda SWAP1
0xcdb MSTORE
0xcdc SHA3
0xcdd SLOAD
---
0xcb7: JUMPDEST 
0xcb8: V1144 = 0x1
0xcba: V1145 = 0xa0
0xcbc: V1146 = 0x2
0xcbe: V1147 = EXP 0x2 0xa0
0xcbf: V1148 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc2: V1149 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0xcc3: V1150 = 0x0
0xcc7: M[0x0] = V1149
0xcc8: V1151 = 0x7
0xcca: V1152 = 0x20
0xcce: M[0x20] = 0x7
0xccf: V1153 = 0x40
0xcd3: V1154 = SHA3 0x0 0x40
0xcd6: V1155 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0xcd8: M[0x0] = V1155
0xcdb: M[0x20] = V1154
0xcdc: V1156 = SHA3 0x0 0x40
0xcdd: V1157 = S[V1156]
---
Entry stack: [V10, 0x1de, V425, V428]
Stack pops: 2
Stack additions: [S1, S0, V1157]
Exit stack: [V10, 0x1de, V425, V428, V1157]

================================

Block 0xcde
[0xcde:0xce3]
---
Predecessors: [0xcb7]
Successors: [0x1de]
---
0xcde JUMPDEST
0xcdf SWAP3
0xce0 SWAP2
0xce1 POP
0xce2 POP
0xce3 JUMP
---
0xcde: JUMPDEST 
0xce3: JUMP 0x1de
---
Entry stack: [V10, 0x1de, V425, V428, V1157]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V1157]

================================

Block 0xce4
[0xce4:0xcf0]
---
Predecessors: [0x50d, 0xb6b]
Successors: [0xcf1, 0xd00]
---
0xce4 JUMPDEST
0xce5 PUSH1 0x0
0xce7 DUP3
0xce8 DUP3
0xce9 MUL
0xcea DUP4
0xceb ISZERO
0xcec DUP1
0xced PUSH2 0xd00
0xcf0 JUMPI
---
0xce4: JUMPDEST 
0xce5: V1158 = 0x0
0xce9: V1159 = MUL S0 S1
0xceb: V1160 = ISZERO S1
0xced: V1161 = 0xd00
0xcf0: JUMPI 0xd00 V1160
---
Entry stack: [V10, 0x119, S8, S7, {0x0, 0x119}, S5, S4, {0x0, 0x119}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1159, V1160]
Exit stack: [V10, 0x119, S8, S7, {0x0, 0x119}, S5, S4, {0x0, 0x119}, S2, S1, S0, 0x0, V1159, V1160]

================================

Block 0xcf1
[0xcf1:0xcfb]
---
Predecessors: [0xce4]
Successors: [0xcfc, 0xcfd]
---
0xcf1 POP
0xcf2 DUP3
0xcf3 DUP5
0xcf4 DUP3
0xcf5 DUP2
0xcf6 ISZERO
0xcf7 ISZERO
0xcf8 PUSH2 0xcfd
0xcfb JUMPI
---
0xcf6: V1162 = ISZERO S4
0xcf7: V1163 = ISZERO V1162
0xcf8: V1164 = 0xcfd
0xcfb: JUMPI 0xcfd V1163
---
Entry stack: [V10, 0x119, S11, S10, {0x0, 0x119}, S8, S7, {0x0, 0x119}, S5, S4, S3, 0x0, V1159, V1160]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V10, 0x119, S11, S10, {0x0, 0x119}, S8, S7, {0x0, 0x119}, S5, S4, S3, 0x0, V1159, S3, S4, V1159]

================================

Block 0xcfc
[0xcfc:0xcfc]
---
Predecessors: [0xcf1]
Successors: []
---
0xcfc INVALID
---
0xcfc: INVALID 
---
Entry stack: [V10, 0x119, S13, S12, {0x0, 0x119}, S10, S9, {0x0, 0x119}, S7, S6, S5, 0x0, V1159, S2, S1, V1159]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S13, S12, {0x0, 0x119}, S10, S9, {0x0, 0x119}, S7, S6, S5, 0x0, V1159, S2, S1, V1159]

================================

Block 0xcfd
[0xcfd:0xcff]
---
Predecessors: [0xcf1]
Successors: [0xd00]
---
0xcfd JUMPDEST
0xcfe DIV
0xcff EQ
---
0xcfd: JUMPDEST 
0xcfe: V1165 = DIV V1159 S1
0xcff: V1166 = EQ V1165 S2
---
Entry stack: [V10, 0x119, S13, S12, {0x0, 0x119}, S10, S9, {0x0, 0x119}, S7, S6, S5, 0x0, V1159, S2, S1, V1159]
Stack pops: 3
Stack additions: [V1166]
Exit stack: [V10, 0x119, S13, S12, {0x0, 0x119}, S10, S9, {0x0, 0x119}, S7, S6, S5, 0x0, V1159, V1166]

================================

Block 0xd00
[0xd00:0xd06]
---
Predecessors: [0xce4, 0xcfd]
Successors: [0xd07, 0xd08]
---
0xd00 JUMPDEST
0xd01 ISZERO
0xd02 ISZERO
0xd03 PUSH2 0xd08
0xd06 JUMPI
---
0xd00: JUMPDEST 
0xd01: V1167 = ISZERO S0
0xd02: V1168 = ISZERO V1167
0xd03: V1169 = 0xd08
0xd06: JUMPI 0xd08 V1168
---
Entry stack: [V10, 0x119, S11, S10, {0x0, 0x119}, S8, S7, {0x0, 0x119}, S5, S4, S3, 0x0, V1159, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x119, S11, S10, {0x0, 0x119}, S8, S7, {0x0, 0x119}, S5, S4, S3, 0x0, V1159]

================================

Block 0xd07
[0xd07:0xd07]
---
Predecessors: [0xd00]
Successors: []
---
0xd07 INVALID
---
0xd07: INVALID 
---
Entry stack: [V10, 0x119, S10, S9, {0x0, 0x119}, S7, S6, {0x0, 0x119}, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S10, S9, {0x0, 0x119}, S7, S6, {0x0, 0x119}, S4, S3, S2, 0x0, S0]

================================

Block 0xd08
[0xd08:0xd0b]
---
Predecessors: [0xd00, 0xd2a]
Successors: [0xd0c]
---
0xd08 JUMPDEST
0xd09 DUP1
0xd0a SWAP2
0xd0b POP
---
0xd08: JUMPDEST 
---
Entry stack: [V10, 0x119, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x119, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0xd0c
[0xd0c:0xd12]
---
Predecessors: [0xd08]
Successors: [0x51a, 0x590, 0x889, 0x9fb, 0xb7e, 0xc4e]
---
0xd0c JUMPDEST
0xd0d POP
0xd0e SWAP3
0xd0f SWAP2
0xd10 POP
0xd11 POP
0xd12 JUMP
---
0xd0c: JUMPDEST 
0xd12: JUMP S4
---
Entry stack: [V10, 0x119, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x119, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xd13
[0xd13:0xd1d]
---
Predecessors: [0x52d, 0x590, 0x82b, 0x889, 0x998, 0x9fb, 0xbf0]
Successors: [0xd1e, 0xd1f]
---
0xd13 JUMPDEST
0xd14 PUSH1 0x0
0xd16 DUP3
0xd17 DUP3
0xd18 GT
0xd19 ISZERO
0xd1a PUSH2 0xd1f
0xd1d JUMPI
---
0xd13: JUMPDEST 
0xd14: V1170 = 0x0
0xd18: V1171 = GT S0 S1
0xd19: V1172 = ISZERO V1171
0xd1a: V1173 = 0xd1f
0xd1d: JUMPI 0xd1f V1172
---
Entry stack: [V10, 0x119, S8, S7, S6, S5, S4, S3, {0x558, 0x5bc, 0x854, 0x8d1, 0x9c3, 0xa27, 0xc19}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x119, S8, S7, S6, S5, S4, S3, {0x558, 0x5bc, 0x854, 0x8d1, 0x9c3, 0xa27, 0xc19}, S1, S0, 0x0]

================================

Block 0xd1e
[0xd1e:0xd1e]
---
Predecessors: [0xd13]
Successors: []
---
0xd1e INVALID
---
0xd1e: INVALID 
---
Entry stack: [V10, 0x119, S9, S8, S7, S6, S5, S4, {0x558, 0x5bc, 0x854, 0x8d1, 0x9c3, 0xa27, 0xc19}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S9, S8, S7, S6, S5, S4, {0x558, 0x5bc, 0x854, 0x8d1, 0x9c3, 0xa27, 0xc19}, S2, S1, 0x0]

================================

Block 0xd1f
[0xd1f:0xd23]
---
Predecessors: [0xd13]
Successors: [0xd24]
---
0xd1f JUMPDEST
0xd20 POP
0xd21 DUP1
0xd22 DUP3
0xd23 SUB
---
0xd1f: JUMPDEST 
0xd23: V1174 = SUB S2 S1
---
Entry stack: [V10, 0x119, S9, S8, S7, S6, S5, S4, {0x558, 0x5bc, 0x854, 0x8d1, 0x9c3, 0xa27, 0xc19}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1174]
Exit stack: [V10, 0x119, S9, S8, S7, S6, S5, S4, {0x558, 0x5bc, 0x854, 0x8d1, 0x9c3, 0xa27, 0xc19}, S2, S1, V1174]

================================

Block 0xd24
[0xd24:0xd29]
---
Predecessors: [0xd1f]
Successors: [0x558, 0x5bc, 0x854, 0x8d1, 0x9c3, 0xa27, 0xc19]
---
0xd24 JUMPDEST
0xd25 SWAP3
0xd26 SWAP2
0xd27 POP
0xd28 POP
0xd29 JUMP
---
0xd24: JUMPDEST 
0xd29: JUMP {0x558, 0x5bc, 0x854, 0x8d1, 0x9c3, 0xa27, 0xc19}
---
Entry stack: [V10, 0x119, S9, S8, S7, S6, S5, S4, {0x558, 0x5bc, 0x854, 0x8d1, 0x9c3, 0xa27, 0xc19}, S2, S1, V1174]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x119, S9, S8, S7, S6, S5, S4, V1174]

================================

Block 0xd2a
[0xd2a:0xd37]
---
Predecessors: [0x558, 0x854, 0x9c3, 0xc19]
Successors: [0xd08, 0xd38]
---
0xd2a JUMPDEST
0xd2b PUSH1 0x0
0xd2d DUP3
0xd2e DUP3
0xd2f ADD
0xd30 DUP4
0xd31 DUP2
0xd32 LT
0xd33 ISZERO
0xd34 PUSH2 0xd08
0xd37 JUMPI
---
0xd2a: JUMPDEST 
0xd2b: V1175 = 0x0
0xd2f: V1176 = ADD S0 S1
0xd32: V1177 = LT V1176 S1
0xd33: V1178 = ISZERO V1177
0xd34: V1179 = 0xd08
0xd37: JUMPI 0xd08 V1178
---
Entry stack: [V10, 0x119, S8, S7, S6, S5, S4, S3, {0x590, 0x889, 0x9fb, 0xc4e}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1176]
Exit stack: [V10, 0x119, S8, S7, S6, S5, S4, S3, {0x590, 0x889, 0x9fb, 0xc4e}, S1, S0, 0x0, V1176]

================================

Block 0xd38
[0xd38:0xd38]
---
Predecessors: [0xd2a]
Successors: []
---
0xd38 INVALID
---
0xd38: INVALID 
---
Entry stack: [V10, 0x119, S10, S9, S8, S7, S6, S5, {0x590, 0x889, 0x9fb, 0xc4e}, S3, S2, 0x0, V1176]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x119, S10, S9, S8, S7, S6, S5, {0x590, 0x889, 0x9fb, 0xc4e}, S3, S2, 0x0, V1176]

================================

Block 0xd39
[0xd39:0xd3c]
---
Predecessors: []
Successors: [0xd3d]
---
0xd39 JUMPDEST
0xd3a DUP1
0xd3b SWAP2
0xd3c POP
---
0xd39: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xd3d
[0xd3d:0xd8d]
---
Predecessors: [0xd39]
Successors: []
---
0xd3d JUMPDEST
0xd3e POP
0xd3f SWAP3
0xd40 SWAP2
0xd41 POP
0xd42 POP
0xd43 JUMP
0xd44 STOP
0xd45 LOG1
0xd46 PUSH6 0x627a7a723058
0xd4d SHA3
0xd4e PUSH4 0x72d25d29
0xd53 MISSING 0x4f
0xd54 MISSING 0x4b
0xd55 DUP9
0xd56 MISSING 0x28
0xd57 JUMP
0xd58 MISSING 0xcc
0xd59 MISSING 0x2b
0xd5a MISSING 0x4a
0xd5b DUP12
0xd5c MISSING 0xd4
0xd5d MISSING 0xdc
0xd5e MISSING 0xe8
0xd5f MUL
0xd60 PUSH10 0x5b4d65825f81233d9165
0xd6b MISSING 0xb9
0xd6c MISSING 0xd4
0xd6d PUSH32 0x29
---
0xd3d: JUMPDEST 
0xd43: JUMP S4
0xd44: STOP 
0xd45: LOG S0 S1 S2
0xd46: V1180 = 0x627a7a723058
0xd4d: V1181 = SHA3 0x627a7a723058 S3
0xd4e: V1182 = 0x72d25d29
0xd53: MISSING 0x4f
0xd54: MISSING 0x4b
0xd56: MISSING 0x28
0xd57: JUMP S0
0xd58: MISSING 0xcc
0xd59: MISSING 0x2b
0xd5a: MISSING 0x4a
0xd5c: MISSING 0xd4
0xd5d: MISSING 0xdc
0xd5e: MISSING 0xe8
0xd5f: V1183 = MUL S0 S1
0xd60: V1184 = 0x5b4d65825f81233d9165
0xd6b: MISSING 0xb9
0xd6c: MISSING 0xd4
0xd6d: V1185 = 0x29
---
Entry stack: [S1, S0]
Stack pops: 64300
Stack additions: [0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x11c
Exit block: 0x199
Body: 0x11c, 0x123, 0x127, 0x12f, 0x153, 0x15c, 0x164, 0x16c, 0x180, 0x199, 0x680, 0x6d0, 0x6d8, 0x6eb, 0x6f9, 0x70d, 0x716

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x1a7
Exit block: 0x11a
Body: 0x119, 0x11a, 0x1a7, 0x1ae, 0x1b2, 0x71e, 0x742, 0x747, 0x74e, 0x752, 0x7b3

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1cb
Exit block: 0xd38
Body: 0x1cb, 0x1d2, 0x1d6, 0x7b7, 0xd38

Function 3:
Public function signature: 0x23548b8b
Entry block: 0x1f0
Exit block: 0x1de
Body: 0x1de, 0x1f0, 0x1f7, 0x1fb, 0x7be

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x215
Exit block: 0xd38
Body: 0x215, 0x21c, 0x220, 0x7c4, 0x7f6, 0x814, 0x81b, 0x820, 0x827, 0x82b, 0x854, 0xd38

Function 5:
Public function signature: 0x313ce567
Entry block: 0x23f
Exit block: 0x1de
Body: 0x1de, 0x23f, 0x246, 0x24a, 0x93a

Function 6:
Public function signature: 0x3c50afe1
Entry block: 0x264
Exit block: 0x1de
Body: 0x1de, 0x264, 0x26b, 0x26f, 0x940

Function 7:
Public function signature: 0x3eaaf86b
Entry block: 0x289
Exit block: 0x1de
Body: 0x1de, 0x289, 0x290, 0x294, 0x946

Function 8:
Public function signature: 0x558a8f47
Entry block: 0x2ae
Exit block: 0xd38
Body: 0x2ae, 0x2b5, 0x2b9, 0x94c, 0x963, 0x967, 0x97a, 0x97f, 0x986, 0x98d, 0x994, 0x998, 0x9c3, 0xd38

Function 9:
Public function signature: 0x70a08231
Entry block: 0x2d2
Exit block: 0x1de
Body: 0x1de, 0x2d2, 0x2d9, 0x2dd, 0xa73, 0xa8d

Function 10:
Public function signature: 0x78e97925
Entry block: 0x303
Exit block: 0x1de
Body: 0x1de, 0x303, 0x30a, 0x30e, 0xa92

Function 11:
Public function signature: 0x8d859f3e
Entry block: 0x328
Exit block: 0x1de
Body: 0x1de, 0x328, 0x32f, 0x333, 0xa98

Function 12:
Public function signature: 0x8da5cb5b
Entry block: 0x34d
Exit block: 0x360
Body: 0x34d, 0x354, 0x358, 0x360, 0xa9e

Function 13:
Public function signature: 0x95d89b41
Entry block: 0x37c
Exit block: 0x199
Body: 0x12f, 0x153, 0x15c, 0x164, 0x16c, 0x180, 0x199, 0x37c, 0x383, 0x387, 0x6eb, 0x6f9, 0x70d, 0x716, 0xaad, 0xafd, 0xb05

Function 14:
Public function signature: 0x98d5fdca
Entry block: 0x407
Exit block: 0x1de
Body: 0x1de, 0x407, 0x40e, 0x412

Function 15:
Public function signature: 0xa9059cbb
Entry block: 0x42c
Exit block: 0xd38
Body: 0x42c, 0x433, 0x437, 0xbbc, 0xbe0, 0xbe5, 0xbec, 0xbf0, 0xc19, 0xd38

Function 16:
Public function signature: 0xaec3ab53
Entry block: 0x450
Exit block: 0x1de
Body: 0x1de, 0x450, 0x457, 0x45b, 0xcab

Function 17:
Public function signature: 0xb113d9dc
Entry block: 0x475
Exit block: 0x11a
Body: 0x119, 0x11a, 0x475

Function 18:
Public function signature: 0xc71c0b40
Entry block: 0x48b
Exit block: 0x1de
Body: 0x1de, 0x48b, 0x492, 0x496, 0xcb1

Function 19:
Public function signature: 0xdd62ed3e
Entry block: 0x4b0
Exit block: 0x1de
Body: 0x1de, 0x4b0, 0x4b7, 0x4bb, 0xcb7, 0xcde

Function 20:
Public fallback function
Entry block: 0x10f
Exit block: 0x11a
Body: 0x10f, 0x110, 0x119, 0x11a

Function 21:
Private function
Entry block: 0xd2a
Exit block: 0xd0c
Body: 0x50d, 0x51a, 0x52d, 0x558, 0x7bb, 0xb7e, 0xce4, 0xcf1, 0xcfd, 0xd00, 0xd08, 0xd0c, 0xd2a

Function 22:
Private function
Entry block: 0xd13
Exit block: 0xd24
Body: 0xd13, 0xd1f, 0xd24

Function 23:
Private function
Entry block: 0xb4b
Exit block: 0x7bb
Body: 0x51a, 0x52d, 0x558, 0x590, 0x7bb, 0x889, 0x9fb, 0xa27, 0xa6e, 0xa6f, 0xb4b, 0xb5a, 0xb65, 0xb6b, 0xb7e, 0xb85, 0xb96, 0xba1, 0xba7, 0xbaf, 0xc4e, 0xca7, 0xce4, 0xcf1, 0xcfd, 0xd00, 0xd08, 0xd0c, 0xd2a

Function 24:
Private function
Entry block: 0x4e7
Exit block: 0xca7
Body: 0x4e7, 0x4ff, 0x50d, 0x51a, 0x52d, 0x558, 0x590, 0x5bc, 0x60f, 0x640, 0x645, 0x679, 0x67a, 0x67b, 0x7bb, 0x889, 0x8d1, 0x935, 0x9fb, 0xa27, 0xa6e, 0xa6f, 0xb7e, 0xc4e, 0xca7, 0xce4, 0xcf1, 0xcfd, 0xd00, 0xd08, 0xd0c, 0xd2a

