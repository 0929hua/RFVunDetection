Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xc2]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xc2
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xc2
0xa: JUMPI 0xc2 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xce]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x223c217b
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xce
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x223c217b
0x39: V12 = EQ V10 0x223c217b
0x3a: V13 = 0xce
0x3d: JUMPI 0xce V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x10a]
---
0x3e DUP1
0x3f PUSH4 0x3ee2d7c2
0x44 EQ
0x45 PUSH2 0x10a
0x48 JUMPI
---
0x3f: V14 = 0x3ee2d7c2
0x44: V15 = EQ 0x3ee2d7c2 V10
0x45: V16 = 0x10a
0x48: JUMPI 0x10a V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x13b]
---
0x49 DUP1
0x4a PUSH4 0x41c0e1b5
0x4f EQ
0x50 PUSH2 0x13b
0x53 JUMPI
---
0x4a: V17 = 0x41c0e1b5
0x4f: V18 = EQ 0x41c0e1b5 V10
0x50: V19 = 0x13b
0x53: JUMPI 0x13b V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x150]
---
0x54 DUP1
0x55 PUSH4 0x893d20e8
0x5a EQ
0x5b PUSH2 0x150
0x5e JUMPI
---
0x55: V20 = 0x893d20e8
0x5a: V21 = EQ 0x893d20e8 V10
0x5b: V22 = 0x150
0x5e: JUMPI 0x150 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x17f]
---
0x5f DUP1
0x60 PUSH4 0x8cf49cad
0x65 EQ
0x66 PUSH2 0x17f
0x69 JUMPI
---
0x60: V23 = 0x8cf49cad
0x65: V24 = EQ 0x8cf49cad V10
0x66: V25 = 0x17f
0x69: JUMPI 0x17f V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x1a4]
---
0x6a DUP1
0x6b PUSH4 0xbe3eac25
0x70 EQ
0x71 PUSH2 0x1a4
0x74 JUMPI
---
0x6b: V26 = 0xbe3eac25
0x70: V27 = EQ 0xbe3eac25 V10
0x71: V28 = 0x1a4
0x74: JUMPI 0x1a4 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1cb]
---
0x75 DUP1
0x76 PUSH4 0xc635a9f2
0x7b EQ
0x7c PUSH2 0x1cb
0x7f JUMPI
---
0x76: V29 = 0xc635a9f2
0x7b: V30 = EQ 0xc635a9f2 V10
0x7c: V31 = 0x1cb
0x7f: JUMPI 0x1cb V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1f0]
---
0x80 DUP1
0x81 PUSH4 0xcfa4f3e8
0x86 EQ
0x87 PUSH2 0x1f0
0x8a JUMPI
---
0x81: V32 = 0xcfa4f3e8
0x86: V33 = EQ 0xcfa4f3e8 V10
0x87: V34 = 0x1f0
0x8a: JUMPI 0x1f0 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0xc2]
---
0x8b DUP1
0x8c PUSH4 0xd0e30db0
0x91 EQ
0x92 PUSH2 0xc2
0x95 JUMPI
---
0x8c: V35 = 0xd0e30db0
0x91: V36 = EQ 0xd0e30db0 V10
0x92: V37 = 0xc2
0x95: JUMPI 0xc2 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x212]
---
0x96 DUP1
0x97 PUSH4 0xe1c7392a
0x9c EQ
0x9d PUSH2 0x212
0xa0 JUMPI
---
0x97: V38 = 0xe1c7392a
0x9c: V39 = EQ 0xe1c7392a V10
0x9d: V40 = 0x212
0xa0: JUMPI 0x212 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x21c]
---
0xa1 DUP1
0xa2 PUSH4 0xf2fde38b
0xa7 EQ
0xa8 PUSH2 0x21c
0xab JUMPI
---
0xa2: V41 = 0xf2fde38b
0xa7: V42 = EQ 0xf2fde38b V10
0xa8: V43 = 0x21c
0xab: JUMPI 0x21c V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x23d]
---
0xac DUP1
0xad PUSH4 0xf3fef3a3
0xb2 EQ
0xb3 PUSH2 0x23d
0xb6 JUMPI
---
0xad: V44 = 0xf3fef3a3
0xb2: V45 = EQ 0xf3fef3a3 V10
0xb3: V46 = 0x23d
0xb6: JUMPI 0x23d V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x261]
---
0xb7 DUP1
0xb8 PUSH4 0xf83d08ba
0xbd EQ
0xbe PUSH2 0x261
0xc1 JUMPI
---
0xb8: V47 = 0xf83d08ba
0xbd: V48 = EQ 0xf83d08ba V10
0xbe: V49 = 0x261
0xc1: JUMPI 0x261 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xc2]
---
Predecessors: [0x0, 0x8b, 0xb7]
Successors: [0xc3]
---
0xc2 JUMPDEST
---
0xc2: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xca]
---
Predecessors: [0xc2]
Successors: [0x276]
---
0xc3 JUMPDEST
0xc4 PUSH2 0xcb
0xc7 PUSH2 0x276
0xca JUMP
---
0xc3: JUMPDEST 
0xc4: V50 = 0xcb
0xc7: V51 = 0x276
0xca: JUMP 0x276
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V10, 0xcb]

================================

Block 0xcb
[0xcb:0xcb]
---
Predecessors: [0x2eb, 0x423, 0x4a3, 0x4e7, 0x5b0, 0x5c3]
Successors: [0xcc]
---
0xcb JUMPDEST
---
0xcb: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: [0xcb]
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0xb]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V52 = CALLVALUE
0xd0: V53 = ISZERO V52
0xd1: V54 = 0xd9
0xd4: JUMPI 0xd9 V53
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V55 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd9
[0xd9:0xf5]
---
Predecessors: [0xce]
Successors: [0x2ed]
---
0xd9 JUMPDEST
0xda PUSH2 0xf6
0xdd PUSH1 0x1
0xdf PUSH1 0xa0
0xe1 PUSH1 0x2
0xe3 EXP
0xe4 SUB
0xe5 PUSH1 0x4
0xe7 CALLDATALOAD
0xe8 DUP2
0xe9 AND
0xea SWAP1
0xeb PUSH1 0x24
0xed CALLDATALOAD
0xee AND
0xef PUSH1 0x44
0xf1 CALLDATALOAD
0xf2 PUSH2 0x2ed
0xf5 JUMP
---
0xd9: JUMPDEST 
0xda: V56 = 0xf6
0xdd: V57 = 0x1
0xdf: V58 = 0xa0
0xe1: V59 = 0x2
0xe3: V60 = EXP 0x2 0xa0
0xe4: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5: V62 = 0x4
0xe7: V63 = CALLDATALOAD 0x4
0xe9: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xeb: V65 = 0x24
0xed: V66 = CALLDATALOAD 0x24
0xee: V67 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xef: V68 = 0x44
0xf1: V69 = CALLDATALOAD 0x44
0xf2: V70 = 0x2ed
0xf5: JUMP 0x2ed
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf6, V64, V67, V69]
Exit stack: [V10, 0xf6, V64, V67, V69]

================================

Block 0xf6
[0xf6:0x109]
---
Predecessors: [0x373, 0x3e0]
Successors: []
---
0xf6 JUMPDEST
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa SWAP1
0xfb ISZERO
0xfc ISZERO
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x20
0x101 ADD
0x102 PUSH1 0x40
0x104 MLOAD
0x105 DUP1
0x106 SWAP2
0x107 SUB
0x108 SWAP1
0x109 RETURN
---
0xf6: JUMPDEST 
0xf7: V71 = 0x40
0xf9: V72 = M[0x40]
0xfb: V73 = ISZERO S0
0xfc: V74 = ISZERO V73
0xfe: M[V72] = V74
0xff: V75 = 0x20
0x101: V76 = ADD 0x20 V72
0x102: V77 = 0x40
0x104: V78 = M[0x40]
0x107: V79 = SUB V76 V78
0x109: RETURN V78 V79
---
Entry stack: [V10, 0xcb, V205, V207, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xcb, V205, V207, S1]

================================

Block 0x10a
[0x10a:0x110]
---
Predecessors: [0x3e]
Successors: [0x111, 0x115]
---
0x10a JUMPDEST
0x10b CALLVALUE
0x10c ISZERO
0x10d PUSH2 0x115
0x110 JUMPI
---
0x10a: JUMPDEST 
0x10b: V80 = CALLVALUE
0x10c: V81 = ISZERO V80
0x10d: V82 = 0x115
0x110: JUMPI 0x115 V81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x111
[0x111:0x114]
---
Predecessors: [0x10a]
Successors: []
---
0x111 PUSH1 0x0
0x113 DUP1
0x114 REVERT
---
0x111: V83 = 0x0
0x114: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x115
[0x115:0x128]
---
Predecessors: [0x10a]
Successors: [0x37a]
---
0x115 JUMPDEST
0x116 PUSH2 0x129
0x119 PUSH1 0x1
0x11b PUSH1 0xa0
0x11d PUSH1 0x2
0x11f EXP
0x120 SUB
0x121 PUSH1 0x4
0x123 CALLDATALOAD
0x124 AND
0x125 PUSH2 0x37a
0x128 JUMP
---
0x115: JUMPDEST 
0x116: V84 = 0x129
0x119: V85 = 0x1
0x11b: V86 = 0xa0
0x11d: V87 = 0x2
0x11f: V88 = EXP 0x2 0xa0
0x120: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x121: V90 = 0x4
0x123: V91 = CALLDATALOAD 0x4
0x124: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x125: V93 = 0x37a
0x128: JUMP 0x37a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x129, V92]
Exit stack: [V10, 0x129, V92]

================================

Block 0x129
[0x129:0x13a]
---
Predecessors: [0x37a, 0x3c5, 0x3e7]
Successors: []
---
0x129 JUMPDEST
0x12a PUSH1 0x40
0x12c MLOAD
0x12d SWAP1
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 SWAP2
0x138 SUB
0x139 SWAP1
0x13a RETURN
---
0x129: JUMPDEST 
0x12a: V94 = 0x40
0x12c: V95 = M[0x40]
0x12f: M[V95] = S0
0x130: V96 = 0x20
0x132: V97 = ADD 0x20 V95
0x133: V98 = 0x40
0x135: V99 = M[0x40]
0x138: V100 = SUB V97 V99
0x13a: RETURN V99 V100
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x49]
Successors: [0x142, 0x146]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V101 = CALLVALUE
0x13d: V102 = ISZERO V101
0x13e: V103 = 0x146
0x141: JUMPI 0x146 V102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13b]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V104 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x13b]
Successors: [0x38c]
---
0x146 JUMPDEST
0x147 PUSH2 0xcb
0x14a PUSH2 0x38c
0x14d JUMP
---
0x146: JUMPDEST 
0x147: V105 = 0xcb
0x14a: V106 = 0x38c
0x14d: JUMP 0x38c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V10, 0xcb]

================================

Block 0x14e
[0x14e:0x14f]
---
Predecessors: []
Successors: []
---
0x14e JUMPDEST
0x14f STOP
---
0x14e: JUMPDEST 
0x14f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x150
[0x150:0x156]
---
Predecessors: [0x54]
Successors: [0x157, 0x15b]
---
0x150 JUMPDEST
0x151 CALLVALUE
0x152 ISZERO
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x150: JUMPDEST 
0x151: V107 = CALLVALUE
0x152: V108 = ISZERO V107
0x153: V109 = 0x15b
0x156: JUMPI 0x15b V108
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x150]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V110 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15b
[0x15b:0x162]
---
Predecessors: [0x150]
Successors: [0x3b1]
---
0x15b JUMPDEST
0x15c PUSH2 0x163
0x15f PUSH2 0x3b1
0x162 JUMP
---
0x15b: JUMPDEST 
0x15c: V111 = 0x163
0x15f: V112 = 0x3b1
0x162: JUMP 0x3b1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x163]
Exit stack: [V10, 0x163]

================================

Block 0x163
[0x163:0x17e]
---
Predecessors: [0x3be]
Successors: []
---
0x163 JUMPDEST
0x164 PUSH1 0x40
0x166 MLOAD
0x167 PUSH1 0x1
0x169 PUSH1 0xa0
0x16b PUSH1 0x2
0x16d EXP
0x16e SUB
0x16f SWAP1
0x170 SWAP2
0x171 AND
0x172 DUP2
0x173 MSTORE
0x174 PUSH1 0x20
0x176 ADD
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b SWAP2
0x17c SUB
0x17d SWAP1
0x17e RETURN
---
0x163: JUMPDEST 
0x164: V113 = 0x40
0x166: V114 = M[0x40]
0x167: V115 = 0x1
0x169: V116 = 0xa0
0x16b: V117 = 0x2
0x16d: V118 = EXP 0x2 0xa0
0x16e: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V120 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x173: M[V114] = V120
0x174: V121 = 0x20
0x176: V122 = ADD 0x20 V114
0x177: V123 = 0x40
0x179: V124 = M[0x40]
0x17c: V125 = SUB V122 V124
0x17e: RETURN V124 V125
---
Entry stack: [V10, V335]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x17f
[0x17f:0x185]
---
Predecessors: [0x5f]
Successors: [0x186, 0x18a]
---
0x17f JUMPDEST
0x180 CALLVALUE
0x181 ISZERO
0x182 PUSH2 0x18a
0x185 JUMPI
---
0x17f: JUMPDEST 
0x180: V126 = CALLVALUE
0x181: V127 = ISZERO V126
0x182: V128 = 0x18a
0x185: JUMPI 0x18a V127
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x186
[0x186:0x189]
---
Predecessors: [0x17f]
Successors: []
---
0x186 PUSH1 0x0
0x188 DUP1
0x189 REVERT
---
0x186: V129 = 0x0
0x189: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18a
[0x18a:0x191]
---
Predecessors: [0x17f]
Successors: [0x3c1]
---
0x18a JUMPDEST
0x18b PUSH2 0x129
0x18e PUSH2 0x3c1
0x191 JUMP
---
0x18a: JUMPDEST 
0x18b: V130 = 0x129
0x18e: V131 = 0x3c1
0x191: JUMP 0x3c1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V10, 0x129]

================================

Block 0x192
[0x192:0x1a3]
---
Predecessors: []
Successors: []
---
0x192 JUMPDEST
0x193 PUSH1 0x40
0x195 MLOAD
0x196 SWAP1
0x197 DUP2
0x198 MSTORE
0x199 PUSH1 0x20
0x19b ADD
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 SWAP2
0x1a1 SUB
0x1a2 SWAP1
0x1a3 RETURN
---
0x192: JUMPDEST 
0x193: V132 = 0x40
0x195: V133 = M[0x40]
0x198: M[V133] = S0
0x199: V134 = 0x20
0x19b: V135 = ADD 0x20 V133
0x19c: V136 = 0x40
0x19e: V137 = M[0x40]
0x1a1: V138 = SUB V135 V137
0x1a3: RETURN V137 V138
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x6a]
Successors: [0x1ab, 0x1af]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V139 = CALLVALUE
0x1a6: V140 = ISZERO V139
0x1a7: V141 = 0x1af
0x1aa: JUMPI 0x1af V140
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V142 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x1a4]
Successors: [0x3c8]
---
0x1af JUMPDEST
0x1b0 PUSH2 0xf6
0x1b3 PUSH2 0x3c8
0x1b6 JUMP
---
0x1af: JUMPDEST 
0x1b0: V143 = 0xf6
0x1b3: V144 = 0x3c8
0x1b6: JUMP 0x3c8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf6]
Exit stack: [V10, 0xf6]

================================

Block 0x1b7
[0x1b7:0x1ca]
---
Predecessors: []
Successors: []
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb SWAP1
0x1bc ISZERO
0x1bd ISZERO
0x1be DUP2
0x1bf MSTORE
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x1b7: JUMPDEST 
0x1b8: V145 = 0x40
0x1ba: V146 = M[0x40]
0x1bc: V147 = ISZERO S0
0x1bd: V148 = ISZERO V147
0x1bf: M[V146] = V148
0x1c0: V149 = 0x20
0x1c2: V150 = ADD 0x20 V146
0x1c3: V151 = 0x40
0x1c5: V152 = M[0x40]
0x1c8: V153 = SUB V150 V152
0x1ca: RETURN V152 V153
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x75]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V154 = CALLVALUE
0x1cd: V155 = ISZERO V154
0x1ce: V156 = 0x1d6
0x1d1: JUMPI 0x1d6 V155
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V157 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x1cb]
Successors: [0x3e3]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x129
0x1da PUSH2 0x3e3
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V158 = 0x129
0x1da: V159 = 0x3e3
0x1dd: JUMP 0x3e3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V10, 0x129]

================================

Block 0x1de
[0x1de:0x1ef]
---
Predecessors: []
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH1 0x20
0x1e7 ADD
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec SWAP2
0x1ed SUB
0x1ee SWAP1
0x1ef RETURN
---
0x1de: JUMPDEST 
0x1df: V160 = 0x40
0x1e1: V161 = M[0x40]
0x1e4: M[V161] = S0
0x1e5: V162 = 0x20
0x1e7: V163 = ADD 0x20 V161
0x1e8: V164 = 0x40
0x1ea: V165 = M[0x40]
0x1ed: V166 = SUB V163 V165
0x1ef: RETURN V165 V166
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f0
[0x1f0:0x1f6]
---
Predecessors: [0x80]
Successors: [0x1f7, 0x1fb]
---
0x1f0 JUMPDEST
0x1f1 CALLVALUE
0x1f2 ISZERO
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V167 = CALLVALUE
0x1f2: V168 = ISZERO V167
0x1f3: V169 = 0x1fb
0x1f6: JUMPI 0x1fb V168
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1f0]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa REVERT
---
0x1f7: V170 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fb
[0x1fb:0x205]
---
Predecessors: [0x1f0]
Successors: [0x3ea]
---
0x1fb JUMPDEST
0x1fc PUSH2 0xcb
0x1ff PUSH1 0x4
0x201 CALLDATALOAD
0x202 PUSH2 0x3ea
0x205 JUMP
---
0x1fb: JUMPDEST 
0x1fc: V171 = 0xcb
0x1ff: V172 = 0x4
0x201: V173 = CALLDATALOAD 0x4
0x202: V174 = 0x3ea
0x205: JUMP 0x3ea
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcb, V173]
Exit stack: [V10, 0xcb, V173]

================================

Block 0x206
[0x206:0x20f]
---
Predecessors: []
Successors: [0x276]
---
0x206 JUMPDEST
0x207 STOP
0x208 JUMPDEST
0x209 PUSH2 0xcb
0x20c PUSH2 0x276
0x20f JUMP
---
0x206: JUMPDEST 
0x207: STOP 
0x208: JUMPDEST 
0x209: V175 = 0xcb
0x20c: V176 = 0x276
0x20f: JUMP 0x276
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcb]
Exit stack: []

================================

Block 0x210
[0x210:0x211]
---
Predecessors: []
Successors: []
---
0x210 JUMPDEST
0x211 STOP
---
0x210: JUMPDEST 
0x211: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x212
[0x212:0x219]
---
Predecessors: [0x96]
Successors: [0x426]
---
0x212 JUMPDEST
0x213 PUSH2 0xcb
0x216 PUSH2 0x426
0x219 JUMP
---
0x212: JUMPDEST 
0x213: V177 = 0xcb
0x216: V178 = 0x426
0x219: JUMP 0x426
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V10, 0xcb]

================================

Block 0x21a
[0x21a:0x21b]
---
Predecessors: []
Successors: []
---
0x21a JUMPDEST
0x21b STOP
---
0x21a: JUMPDEST 
0x21b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21c
[0x21c:0x222]
---
Predecessors: [0xa1]
Successors: [0x223, 0x227]
---
0x21c JUMPDEST
0x21d CALLVALUE
0x21e ISZERO
0x21f PUSH2 0x227
0x222 JUMPI
---
0x21c: JUMPDEST 
0x21d: V179 = CALLVALUE
0x21e: V180 = ISZERO V179
0x21f: V181 = 0x227
0x222: JUMPI 0x227 V180
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x223
[0x223:0x226]
---
Predecessors: [0x21c]
Successors: []
---
0x223 PUSH1 0x0
0x225 DUP1
0x226 REVERT
---
0x223: V182 = 0x0
0x226: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x227
[0x227:0x23a]
---
Predecessors: [0x21c]
Successors: [0x4a5]
---
0x227 JUMPDEST
0x228 PUSH2 0xcb
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 PUSH1 0x4
0x235 CALLDATALOAD
0x236 AND
0x237 PUSH2 0x4a5
0x23a JUMP
---
0x227: JUMPDEST 
0x228: V183 = 0xcb
0x22b: V184 = 0x1
0x22d: V185 = 0xa0
0x22f: V186 = 0x2
0x231: V187 = EXP 0x2 0xa0
0x232: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x233: V189 = 0x4
0x235: V190 = CALLDATALOAD 0x4
0x236: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x237: V192 = 0x4a5
0x23a: JUMP 0x4a5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcb, V191]
Exit stack: [V10, 0xcb, V191]

================================

Block 0x23b
[0x23b:0x23c]
---
Predecessors: []
Successors: []
---
0x23b JUMPDEST
0x23c STOP
---
0x23b: JUMPDEST 
0x23c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23d
[0x23d:0x243]
---
Predecessors: [0xac]
Successors: [0x244, 0x248]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x23d: JUMPDEST 
0x23e: V193 = CALLVALUE
0x23f: V194 = ISZERO V193
0x240: V195 = 0x248
0x243: JUMPI 0x248 V194
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x23d]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V196 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x248
[0x248:0x25e]
---
Predecessors: [0x23d]
Successors: [0x4ea]
---
0x248 JUMPDEST
0x249 PUSH2 0xcb
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 PUSH1 0x4
0x256 CALLDATALOAD
0x257 AND
0x258 PUSH1 0x24
0x25a CALLDATALOAD
0x25b PUSH2 0x4ea
0x25e JUMP
---
0x248: JUMPDEST 
0x249: V197 = 0xcb
0x24c: V198 = 0x1
0x24e: V199 = 0xa0
0x250: V200 = 0x2
0x252: V201 = EXP 0x2 0xa0
0x253: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V203 = 0x4
0x256: V204 = CALLDATALOAD 0x4
0x257: V205 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x258: V206 = 0x24
0x25a: V207 = CALLDATALOAD 0x24
0x25b: V208 = 0x4ea
0x25e: JUMP 0x4ea
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcb, V205, V207]
Exit stack: [V10, 0xcb, V205, V207]

================================

Block 0x25f
[0x25f:0x260]
---
Predecessors: []
Successors: []
---
0x25f JUMPDEST
0x260 STOP
---
0x25f: JUMPDEST 
0x260: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x261
[0x261:0x267]
---
Predecessors: [0xb7]
Successors: [0x268, 0x26c]
---
0x261 JUMPDEST
0x262 CALLVALUE
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x261: JUMPDEST 
0x262: V209 = CALLVALUE
0x263: V210 = ISZERO V209
0x264: V211 = 0x26c
0x267: JUMPI 0x26c V210
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x261]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V212 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26c
[0x26c:0x273]
---
Predecessors: [0x261]
Successors: [0x5b5]
---
0x26c JUMPDEST
0x26d PUSH2 0xcb
0x270 PUSH2 0x5b5
0x273 JUMP
---
0x26c: JUMPDEST 
0x26d: V213 = 0xcb
0x270: V214 = 0x5b5
0x273: JUMP 0x5b5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V10, 0xcb]

================================

Block 0x274
[0x274:0x275]
---
Predecessors: []
Successors: []
---
0x274 JUMPDEST
0x275 STOP
---
0x274: JUMPDEST 
0x275: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x276
[0x276:0x27f]
---
Predecessors: [0xc3, 0x206, 0x433]
Successors: [0x280, 0x2ea]
---
0x276 JUMPDEST
0x277 PUSH1 0x0
0x279 CALLVALUE
0x27a GT
0x27b ISZERO
0x27c PUSH2 0x2ea
0x27f JUMPI
---
0x276: JUMPDEST 
0x277: V215 = 0x0
0x279: V216 = CALLVALUE
0x27a: V217 = GT V216 0x0
0x27b: V218 = ISZERO V217
0x27c: V219 = 0x2ea
0x27f: JUMPI 0x2ea V218
---
Entry stack: [V10, S1, {0xcb, 0x478}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xcb, 0x478}]

================================

Block 0x280
[0x280:0x286]
---
Predecessors: [0x276]
Successors: [0x3e3]
---
0x280 PUSH2 0x287
0x283 PUSH2 0x3e3
0x286 JUMP
---
0x280: V220 = 0x287
0x283: V221 = 0x3e3
0x286: JUMP 0x3e3
---
Entry stack: [V10, S1, {0xcb, 0x478}]
Stack pops: 0
Stack additions: [0x287]
Exit stack: [V10, S1, {0xcb, 0x478}, 0x287]

================================

Block 0x287
[0x287:0x28d]
---
Predecessors: [0x3e7]
Successors: [0x28e, 0x2ac]
---
0x287 JUMPDEST
0x288 CALLVALUE
0x289 LT
0x28a PUSH2 0x2ac
0x28d JUMPI
---
0x287: JUMPDEST 
0x288: V222 = CALLVALUE
0x289: V223 = LT V222 V350
0x28a: V224 = 0x2ac
0x28d: JUMPI 0x2ac V223
---
Entry stack: [V10, S2, S1, V350]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x28e
[0x28e:0x2ab]
---
Predecessors: [0x287]
Successors: [0x2ac]
---
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 CALLER
0x297 AND
0x298 PUSH1 0x0
0x29a SWAP1
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x1
0x29f PUSH1 0x20
0x2a1 MSTORE
0x2a2 PUSH1 0x40
0x2a4 SWAP1
0x2a5 SHA3
0x2a6 DUP1
0x2a7 SLOAD
0x2a8 CALLVALUE
0x2a9 ADD
0x2aa SWAP1
0x2ab SSTORE
---
0x28e: V225 = 0x1
0x290: V226 = 0xa0
0x292: V227 = 0x2
0x294: V228 = EXP 0x2 0xa0
0x295: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x296: V230 = CALLER
0x297: V231 = AND V230 0xffffffffffffffffffffffffffffffffffffffff
0x298: V232 = 0x0
0x29c: M[0x0] = V231
0x29d: V233 = 0x1
0x29f: V234 = 0x20
0x2a1: M[0x20] = 0x1
0x2a2: V235 = 0x40
0x2a5: V236 = SHA3 0x0 0x40
0x2a7: V237 = S[V236]
0x2a8: V238 = CALLVALUE
0x2a9: V239 = ADD V238 V237
0x2ab: S[V236] = V239
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x2ac
[0x2ac:0x2e9]
---
Predecessors: [0x287, 0x28e]
Successors: [0x2ea]
---
0x2ac JUMPDEST
0x2ad CALLER
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 AND
0x2b7 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x2d8 CALLVALUE
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc SWAP1
0x2dd DUP2
0x2de MSTORE
0x2df PUSH1 0x20
0x2e1 ADD
0x2e2 PUSH1 0x40
0x2e4 MLOAD
0x2e5 DUP1
0x2e6 SWAP2
0x2e7 SUB
0x2e8 SWAP1
0x2e9 LOG2
---
0x2ac: JUMPDEST 
0x2ad: V240 = CALLER
0x2ae: V241 = 0x1
0x2b0: V242 = 0xa0
0x2b2: V243 = 0x2
0x2b4: V244 = EXP 0x2 0xa0
0x2b5: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x2b7: V247 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x2d8: V248 = CALLVALUE
0x2d9: V249 = 0x40
0x2db: V250 = M[0x40]
0x2de: M[V250] = V248
0x2df: V251 = 0x20
0x2e1: V252 = ADD 0x20 V250
0x2e2: V253 = 0x40
0x2e4: V254 = M[0x40]
0x2e7: V255 = SUB V252 V254
0x2e9: LOG V254 V255 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V246
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x2ea
[0x2ea:0x2ea]
---
Predecessors: [0x276, 0x2ac]
Successors: [0x2eb]
---
0x2ea JUMPDEST
---
0x2ea: JUMPDEST 
---
Entry stack: [V10, S1, {0xcb, 0x478}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xcb, 0x478}]

================================

Block 0x2eb
[0x2eb:0x2ec]
---
Predecessors: [0x2ea]
Successors: [0xcb, 0x478]
---
0x2eb JUMPDEST
0x2ec JUMP
---
0x2eb: JUMPDEST 
0x2ec: JUMP {0xcb, 0x478}
---
Entry stack: [V10, S1, {0xcb, 0x478}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2ed
[0x2ed:0x305]
---
Predecessors: [0xd9]
Successors: [0x306, 0x371]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 SLOAD
0x2f2 CALLER
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb SWAP1
0x2fc DUP2
0x2fd AND
0x2fe SWAP2
0x2ff AND
0x300 EQ
0x301 ISZERO
0x302 PUSH2 0x371
0x305 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V256 = 0x0
0x2f1: V257 = S[0x0]
0x2f2: V258 = CALLER
0x2f3: V259 = 0x1
0x2f5: V260 = 0xa0
0x2f7: V261 = 0x2
0x2f9: V262 = EXP 0x2 0xa0
0x2fa: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x2ff: V265 = AND V257 0xffffffffffffffffffffffffffffffffffffffff
0x300: V266 = EQ V265 V264
0x301: V267 = ISZERO V266
0x302: V268 = 0x371
0x305: JUMPI 0x371 V267
---
Entry stack: [V10, 0xf6, V64, V67, V69]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xf6, V64, V67, V69, 0x0]

================================

Block 0x306
[0x306:0x370]
---
Predecessors: [0x2ed]
Successors: [0x371]
---
0x306 PUSH1 0x1
0x308 PUSH1 0xa0
0x30a PUSH1 0x2
0x30c EXP
0x30d SUB
0x30e DUP5
0x30f AND
0x310 PUSH4 0xa9059cbb
0x315 DUP5
0x316 DUP5
0x317 PUSH1 0x40
0x319 MLOAD
0x31a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x338 PUSH4 0xffffffff
0x33d DUP6
0x33e AND
0x33f MUL
0x340 DUP2
0x341 MSTORE
0x342 PUSH1 0x1
0x344 PUSH1 0xa0
0x346 PUSH1 0x2
0x348 EXP
0x349 SUB
0x34a SWAP1
0x34b SWAP3
0x34c AND
0x34d PUSH1 0x4
0x34f DUP4
0x350 ADD
0x351 MSTORE
0x352 PUSH1 0x24
0x354 DUP3
0x355 ADD
0x356 MSTORE
0x357 PUSH1 0x44
0x359 ADD
0x35a PUSH1 0x0
0x35c PUSH1 0x40
0x35e MLOAD
0x35f DUP1
0x360 DUP4
0x361 SUB
0x362 DUP2
0x363 PUSH1 0x0
0x365 DUP8
0x366 PUSH2 0x646e
0x369 GAS
0x36a SUB
0x36b CALL
0x36c SWAP4
0x36d POP
0x36e POP
0x36f POP
0x370 POP
---
0x306: V269 = 0x1
0x308: V270 = 0xa0
0x30a: V271 = 0x2
0x30c: V272 = EXP 0x2 0xa0
0x30d: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V274 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0x310: V275 = 0xa9059cbb
0x317: V276 = 0x40
0x319: V277 = M[0x40]
0x31a: V278 = 0x100000000000000000000000000000000000000000000000000000000
0x338: V279 = 0xffffffff
0x33e: V280 = AND 0xa9059cbb 0xffffffff
0x33f: V281 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x341: M[V277] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x342: V282 = 0x1
0x344: V283 = 0xa0
0x346: V284 = 0x2
0x348: V285 = EXP 0x2 0xa0
0x349: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34c: V287 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0x34d: V288 = 0x4
0x350: V289 = ADD V277 0x4
0x351: M[V289] = V287
0x352: V290 = 0x24
0x355: V291 = ADD V277 0x24
0x356: M[V291] = V69
0x357: V292 = 0x44
0x359: V293 = ADD 0x44 V277
0x35a: V294 = 0x0
0x35c: V295 = 0x40
0x35e: V296 = M[0x40]
0x361: V297 = SUB V293 V296
0x363: V298 = 0x0
0x366: V299 = 0x646e
0x369: V300 = GAS
0x36a: V301 = SUB V300 0x646e
0x36b: V302 = CALL V301 V274 0x0 V296 V297 V296 0x0
---
Entry stack: [V10, 0xf6, V64, V67, V69, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V302]
Exit stack: [V10, 0xf6, V64, V67, V69, V302]

================================

Block 0x371
[0x371:0x371]
---
Predecessors: [0x2ed, 0x306]
Successors: [0x372]
---
0x371 JUMPDEST
---
0x371: JUMPDEST 
---
Entry stack: [V10, 0xf6, V64, V67, V69, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf6, V64, V67, V69, S0]

================================

Block 0x372
[0x372:0x372]
---
Predecessors: [0x371]
Successors: [0x373]
---
0x372 JUMPDEST
---
0x372: JUMPDEST 
---
Entry stack: [V10, 0xf6, V64, V67, V69, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf6, V64, V67, V69, S0]

================================

Block 0x373
[0x373:0x379]
---
Predecessors: [0x372]
Successors: [0xf6]
---
0x373 JUMPDEST
0x374 SWAP4
0x375 SWAP3
0x376 POP
0x377 POP
0x378 POP
0x379 JUMP
---
0x373: JUMPDEST 
0x379: JUMP 0xf6
---
Entry stack: [V10, 0xf6, V64, V67, V69, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x37a
[0x37a:0x38b]
---
Predecessors: [0x115]
Successors: [0x129]
---
0x37a JUMPDEST
0x37b PUSH1 0x1
0x37d PUSH1 0x20
0x37f MSTORE
0x380 PUSH1 0x0
0x382 SWAP1
0x383 DUP2
0x384 MSTORE
0x385 PUSH1 0x40
0x387 SWAP1
0x388 SHA3
0x389 SLOAD
0x38a DUP2
0x38b JUMP
---
0x37a: JUMPDEST 
0x37b: V303 = 0x1
0x37d: V304 = 0x20
0x37f: M[0x20] = 0x1
0x380: V305 = 0x0
0x384: M[0x0] = V92
0x385: V306 = 0x40
0x388: V307 = SHA3 0x0 0x40
0x389: V308 = S[V307]
0x38b: JUMP 0x129
---
Entry stack: [V10, 0x129, V92]
Stack pops: 2
Stack additions: [S1, V308]
Exit stack: [V10, 0x129, V308]

================================

Block 0x38c
[0x38c:0x39c]
---
Predecessors: [0x146]
Successors: [0x39d, 0x3a1]
---
0x38c JUMPDEST
0x38d PUSH1 0x1
0x38f PUSH1 0xa0
0x391 PUSH1 0x2
0x393 EXP
0x394 SUB
0x395 ADDRESS
0x396 AND
0x397 BALANCE
0x398 ISZERO
0x399 PUSH2 0x3a1
0x39c JUMPI
---
0x38c: JUMPDEST 
0x38d: V309 = 0x1
0x38f: V310 = 0xa0
0x391: V311 = 0x2
0x393: V312 = EXP 0x2 0xa0
0x394: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x395: V314 = ADDRESS
0x396: V315 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x397: V316 = BALANCE V315
0x398: V317 = ISZERO V316
0x399: V318 = 0x3a1
0x39c: JUMPI 0x3a1 V317
---
Entry stack: [V10, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb]

================================

Block 0x39d
[0x39d:0x3a0]
---
Predecessors: [0x38c]
Successors: []
---
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 REVERT
---
0x39d: V319 = 0x0
0x3a0: REVERT 0x0 0x0
---
Entry stack: [V10, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb]

================================

Block 0x3a1
[0x3a1:0x3ae]
---
Predecessors: [0x38c]
Successors: []
---
0x3a1 JUMPDEST
0x3a2 PUSH1 0x0
0x3a4 SLOAD
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 PUSH1 0x2
0x3ab EXP
0x3ac SUB
0x3ad AND
0x3ae SELFDESTRUCT
---
0x3a1: JUMPDEST 
0x3a2: V320 = 0x0
0x3a4: V321 = S[0x0]
0x3a5: V322 = 0x1
0x3a7: V323 = 0xa0
0x3a9: V324 = 0x2
0x3ab: V325 = EXP 0x2 0xa0
0x3ac: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ad: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x3ae: SELFDESTRUCT V327
---
Entry stack: [V10, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb]

================================

Block 0x3af
[0x3af:0x3b0]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x3af JUMPDEST
0x3b0 JUMP
---
0x3af: JUMPDEST 
0x3b0: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b1
[0x3b1:0x3bd]
---
Predecessors: [0x15b]
Successors: [0x3be]
---
0x3b1 JUMPDEST
0x3b2 PUSH1 0x5
0x3b4 SLOAD
0x3b5 PUSH1 0x1
0x3b7 PUSH1 0xa0
0x3b9 PUSH1 0x2
0x3bb EXP
0x3bc SUB
0x3bd AND
---
0x3b1: JUMPDEST 
0x3b2: V328 = 0x5
0x3b4: V329 = S[0x5]
0x3b5: V330 = 0x1
0x3b7: V331 = 0xa0
0x3b9: V332 = 0x2
0x3bb: V333 = EXP 0x2 0xa0
0x3bc: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
---
Entry stack: [V10, 0x163]
Stack pops: 0
Stack additions: [V335]
Exit stack: [V10, 0x163, V335]

================================

Block 0x3be
[0x3be:0x3c0]
---
Predecessors: [0x3b1]
Successors: [0x163]
---
0x3be JUMPDEST
0x3bf SWAP1
0x3c0 JUMP
---
0x3be: JUMPDEST 
0x3c0: JUMP 0x163
---
Entry stack: [V10, 0x163, V335]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V335]

================================

Block 0x3c1
[0x3c1:0x3c4]
---
Predecessors: [0x18a]
Successors: [0x3c5]
---
0x3c1 JUMPDEST
0x3c2 PUSH1 0x4
0x3c4 SLOAD
---
0x3c1: JUMPDEST 
0x3c2: V336 = 0x4
0x3c4: V337 = S[0x4]
---
Entry stack: [V10, 0x129]
Stack pops: 0
Stack additions: [V337]
Exit stack: [V10, 0x129, V337]

================================

Block 0x3c5
[0x3c5:0x3c7]
---
Predecessors: [0x3c1]
Successors: [0x129]
---
0x3c5 JUMPDEST
0x3c6 SWAP1
0x3c7 JUMP
---
0x3c5: JUMPDEST 
0x3c7: JUMP 0x129
---
Entry stack: [V10, 0x129, V337]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V337]

================================

Block 0x3c8
[0x3c8:0x3d5]
---
Predecessors: [0x1af, 0x503]
Successors: [0x3d6, 0x3dd]
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc PUSH1 0x4
0x3ce SLOAD
0x3cf GT
0x3d0 DUP1
0x3d1 ISZERO
0x3d2 PUSH2 0x3dd
0x3d5 JUMPI
---
0x3c8: JUMPDEST 
0x3c9: V338 = 0x0
0x3cc: V339 = 0x4
0x3ce: V340 = S[0x4]
0x3cf: V341 = GT V340 0x0
0x3d1: V342 = ISZERO V341
0x3d2: V343 = 0x3dd
0x3d5: JUMPI 0x3dd V342
---
Entry stack: [V10, 0xcb, V205, V207, S1, {0xf6, 0x50a}]
Stack pops: 0
Stack additions: [0x0, V341]
Exit stack: [V10, 0xcb, V205, V207, S1, {0xf6, 0x50a}, 0x0, V341]

================================

Block 0x3d6
[0x3d6:0x3dc]
---
Predecessors: [0x3c8]
Successors: [0x3dd]
---
0x3d6 POP
0x3d7 TIMESTAMP
0x3d8 PUSH1 0x4
0x3da SLOAD
0x3db GT
0x3dc ISZERO
---
0x3d7: V344 = TIMESTAMP
0x3d8: V345 = 0x4
0x3da: V346 = S[0x4]
0x3db: V347 = GT V346 V344
0x3dc: V348 = ISZERO V347
---
Entry stack: [V10, 0xcb, V205, V207, S3, {0xf6, 0x50a}, 0x0, V341]
Stack pops: 1
Stack additions: [V348]
Exit stack: [V10, 0xcb, V205, V207, S3, {0xf6, 0x50a}, 0x0, V348]

================================

Block 0x3dd
[0x3dd:0x3df]
---
Predecessors: [0x3c8, 0x3d6]
Successors: [0x3e0]
---
0x3dd JUMPDEST
0x3de SWAP1
0x3df POP
---
0x3dd: JUMPDEST 
---
Entry stack: [V10, 0xcb, V205, V207, S3, {0xf6, 0x50a}, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0xcb, V205, V207, S3, {0xf6, 0x50a}, S0]

================================

Block 0x3e0
[0x3e0:0x3e2]
---
Predecessors: [0x3dd]
Successors: [0xf6, 0x50a]
---
0x3e0 JUMPDEST
0x3e1 SWAP1
0x3e2 JUMP
---
0x3e0: JUMPDEST 
0x3e2: JUMP {0xf6, 0x50a}
---
Entry stack: [V10, 0xcb, V205, V207, S2, {0xf6, 0x50a}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0xcb, V205, V207, S2, S0]

================================

Block 0x3e3
[0x3e3:0x3e6]
---
Predecessors: [0x1d6, 0x280]
Successors: [0x3e7]
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0x2
0x3e6 SLOAD
---
0x3e3: JUMPDEST 
0x3e4: V349 = 0x2
0x3e6: V350 = S[0x2]
---
Entry stack: [V10, S2, S1, {0x129, 0x287}]
Stack pops: 0
Stack additions: [V350]
Exit stack: [V10, S2, S1, {0x129, 0x287}, V350]

================================

Block 0x3e7
[0x3e7:0x3e9]
---
Predecessors: [0x3e3]
Successors: [0x129, 0x287]
---
0x3e7 JUMPDEST
0x3e8 SWAP1
0x3e9 JUMP
---
0x3e7: JUMPDEST 
0x3e9: JUMP {0x129, 0x287}
---
Entry stack: [V10, S3, S2, {0x129, 0x287}, V350]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S3, S2, V350]

================================

Block 0x3ea
[0x3ea:0x422]
---
Predecessors: [0x1fb]
Successors: [0x423]
---
0x3ea JUMPDEST
0x3eb PUSH1 0x4
0x3ed DUP2
0x3ee SWAP1
0x3ef SSTORE
0x3f0 PUSH32 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0x411 DUP2
0x412 PUSH1 0x40
0x414 MLOAD
0x415 SWAP1
0x416 DUP2
0x417 MSTORE
0x418 PUSH1 0x20
0x41a ADD
0x41b PUSH1 0x40
0x41d MLOAD
0x41e DUP1
0x41f SWAP2
0x420 SUB
0x421 SWAP1
0x422 LOG1
---
0x3ea: JUMPDEST 
0x3eb: V351 = 0x4
0x3ef: S[0x4] = V173
0x3f0: V352 = 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0x412: V353 = 0x40
0x414: V354 = M[0x40]
0x417: M[V354] = V173
0x418: V355 = 0x20
0x41a: V356 = ADD 0x20 V354
0x41b: V357 = 0x40
0x41d: V358 = M[0x40]
0x420: V359 = SUB V356 V358
0x422: LOG V358 V359 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
---
Entry stack: [V10, 0xcb, V173]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xcb, V173]

================================

Block 0x423
[0x423:0x425]
---
Predecessors: [0x3ea, 0x4a5]
Successors: [0xcb]
---
0x423 JUMPDEST
0x424 POP
0x425 JUMP
---
0x423: JUMPDEST 
0x425: JUMP 0xcb
---
Entry stack: [V10, 0xcb, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x426
[0x426:0x432]
---
Predecessors: [0x212]
Successors: [0x433, 0x478]
---
0x426 JUMPDEST
0x427 PUSH1 0x3
0x429 SLOAD
0x42a PUSH1 0xff
0x42c AND
0x42d ISZERO
0x42e ISZERO
0x42f PUSH2 0x478
0x432 JUMPI
---
0x426: JUMPDEST 
0x427: V360 = 0x3
0x429: V361 = S[0x3]
0x42a: V362 = 0xff
0x42c: V363 = AND 0xff V361
0x42d: V364 = ISZERO V363
0x42e: V365 = ISZERO V364
0x42f: V366 = 0x478
0x432: JUMPI 0x478 V365
---
Entry stack: [V10, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb]

================================

Block 0x433
[0x433:0x477]
---
Predecessors: [0x426]
Successors: [0x276]
---
0x433 PUSH1 0x0
0x435 DUP1
0x436 SLOAD
0x437 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44c NOT
0x44d AND
0x44e CALLER
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 AND
0x458 OR
0x459 SWAP1
0x45a SSTORE
0x45b PUSH8 0x6f05b59d3b20000
0x464 PUSH1 0x2
0x466 SSTORE
0x467 PUSH1 0x3
0x469 DUP1
0x46a SLOAD
0x46b PUSH1 0xff
0x46d NOT
0x46e AND
0x46f SWAP1
0x470 SSTORE
0x471 PUSH2 0x478
0x474 PUSH2 0x276
0x477 JUMP
---
0x433: V367 = 0x0
0x436: V368 = S[0x0]
0x437: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x44c: V370 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V371 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V368
0x44e: V372 = CALLER
0x44f: V373 = 0x1
0x451: V374 = 0xa0
0x453: V375 = 0x2
0x455: V376 = EXP 0x2 0xa0
0x456: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x458: V379 = OR V378 V371
0x45a: S[0x0] = V379
0x45b: V380 = 0x6f05b59d3b20000
0x464: V381 = 0x2
0x466: S[0x2] = 0x6f05b59d3b20000
0x467: V382 = 0x3
0x46a: V383 = S[0x3]
0x46b: V384 = 0xff
0x46d: V385 = NOT 0xff
0x46e: V386 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V383
0x470: S[0x3] = V386
0x471: V387 = 0x478
0x474: V388 = 0x276
0x477: JUMP 0x276
---
Entry stack: [V10, 0xcb]
Stack pops: 0
Stack additions: [0x478]
Exit stack: [V10, 0xcb, 0x478]

================================

Block 0x478
[0x478:0x478]
---
Predecessors: [0x2eb, 0x426]
Successors: [0x479]
---
0x478 JUMPDEST
---
0x478: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x479
[0x479:0x479]
---
Predecessors: [0x478]
Successors: [0x47a]
---
0x479 JUMPDEST
---
0x479: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x47a
[0x47a:0x4a2]
---
Predecessors: [0x479]
Successors: [0x4a3]
---
0x47a JUMPDEST
0x47b PUSH1 0x5
0x47d DUP1
0x47e SLOAD
0x47f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x494 NOT
0x495 AND
0x496 CALLER
0x497 PUSH1 0x1
0x499 PUSH1 0xa0
0x49b PUSH1 0x2
0x49d EXP
0x49e SUB
0x49f AND
0x4a0 OR
0x4a1 SWAP1
0x4a2 SSTORE
---
0x47a: JUMPDEST 
0x47b: V389 = 0x5
0x47e: V390 = S[0x5]
0x47f: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x494: V392 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x495: V393 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V390
0x496: V394 = CALLER
0x497: V395 = 0x1
0x499: V396 = 0xa0
0x49b: V397 = 0x2
0x49d: V398 = EXP 0x2 0xa0
0x49e: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49f: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x4a0: V401 = OR V400 V393
0x4a2: S[0x5] = V401
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x4a3
[0x4a3:0x4a4]
---
Predecessors: [0x47a]
Successors: [0xcb]
---
0x4a3 JUMPDEST
0x4a4 JUMP
---
0x4a3: JUMPDEST 
0x4a4: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a5
[0x4a5:0x4bc]
---
Predecessors: [0x227]
Successors: [0x423, 0x4bd]
---
0x4a5 JUMPDEST
0x4a6 PUSH1 0x0
0x4a8 SLOAD
0x4a9 CALLER
0x4aa PUSH1 0x1
0x4ac PUSH1 0xa0
0x4ae PUSH1 0x2
0x4b0 EXP
0x4b1 SUB
0x4b2 SWAP1
0x4b3 DUP2
0x4b4 AND
0x4b5 SWAP2
0x4b6 AND
0x4b7 EQ
0x4b8 ISZERO
0x4b9 PUSH2 0x423
0x4bc JUMPI
---
0x4a5: JUMPDEST 
0x4a6: V402 = 0x0
0x4a8: V403 = S[0x0]
0x4a9: V404 = CALLER
0x4aa: V405 = 0x1
0x4ac: V406 = 0xa0
0x4ae: V407 = 0x2
0x4b0: V408 = EXP 0x2 0xa0
0x4b1: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b4: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x4b6: V411 = AND V403 0xffffffffffffffffffffffffffffffffffffffff
0x4b7: V412 = EQ V411 V410
0x4b8: V413 = ISZERO V412
0x4b9: V414 = 0x423
0x4bc: JUMPI 0x423 V413
---
Entry stack: [V10, 0xcb, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb, V191]

================================

Block 0x4bd
[0x4bd:0x4e4]
---
Predecessors: [0x4a5]
Successors: [0x4e5]
---
0x4bd PUSH1 0x0
0x4bf DUP1
0x4c0 SLOAD
0x4c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d6 NOT
0x4d7 AND
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 DUP4
0x4e1 AND
0x4e2 OR
0x4e3 SWAP1
0x4e4 SSTORE
---
0x4bd: V415 = 0x0
0x4c0: V416 = S[0x0]
0x4c1: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d6: V418 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4d7: V419 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V416
0x4d8: V420 = 0x1
0x4da: V421 = 0xa0
0x4dc: V422 = 0x2
0x4de: V423 = EXP 0x2 0xa0
0x4df: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V425 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x4e2: V426 = OR V425 V419
0x4e4: S[0x0] = V426
---
Entry stack: [V10, 0xcb, V191]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xcb, V191]

================================

Block 0x4e5
[0x4e5:0x4e5]
---
Predecessors: [0x4bd]
Successors: [0x4e6]
---
0x4e5 JUMPDEST
---
0x4e5: JUMPDEST 
---
Entry stack: [V10, 0xcb, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb, V191]

================================

Block 0x4e6
[0x4e6:0x4e6]
---
Predecessors: [0x4e5]
Successors: [0x4e7]
---
0x4e6 JUMPDEST
---
0x4e6: JUMPDEST 
---
Entry stack: [V10, 0xcb, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb, V191]

================================

Block 0x4e7
[0x4e7:0x4e9]
---
Predecessors: [0x4e6]
Successors: [0xcb]
---
0x4e7 JUMPDEST
0x4e8 POP
0x4e9 JUMP
---
0x4e7: JUMPDEST 
0x4e9: JUMP 0xcb
---
Entry stack: [V10, 0xcb, V191]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ea
[0x4ea:0x502]
---
Predecessors: [0x248]
Successors: [0x503, 0x5ac]
---
0x4ea JUMPDEST
0x4eb PUSH1 0x0
0x4ed DUP1
0x4ee SLOAD
0x4ef CALLER
0x4f0 PUSH1 0x1
0x4f2 PUSH1 0xa0
0x4f4 PUSH1 0x2
0x4f6 EXP
0x4f7 SUB
0x4f8 SWAP1
0x4f9 DUP2
0x4fa AND
0x4fb SWAP2
0x4fc AND
0x4fd EQ
0x4fe ISZERO
0x4ff PUSH2 0x5ac
0x502 JUMPI
---
0x4ea: JUMPDEST 
0x4eb: V427 = 0x0
0x4ee: V428 = S[0x0]
0x4ef: V429 = CALLER
0x4f0: V430 = 0x1
0x4f2: V431 = 0xa0
0x4f4: V432 = 0x2
0x4f6: V433 = EXP 0x2 0xa0
0x4f7: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fa: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x4fc: V436 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x4fd: V437 = EQ V436 V435
0x4fe: V438 = ISZERO V437
0x4ff: V439 = 0x5ac
0x502: JUMPI 0x5ac V438
---
Entry stack: [V10, 0xcb, V205, V207]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xcb, V205, V207, 0x0]

================================

Block 0x503
[0x503:0x509]
---
Predecessors: [0x4ea]
Successors: [0x3c8]
---
0x503 PUSH2 0x50a
0x506 PUSH2 0x3c8
0x509 JUMP
---
0x503: V440 = 0x50a
0x506: V441 = 0x3c8
0x509: JUMP 0x3c8
---
Entry stack: [V10, 0xcb, V205, V207, 0x0]
Stack pops: 0
Stack additions: [0x50a]
Exit stack: [V10, 0xcb, V205, V207, 0x0, 0x50a]

================================

Block 0x50a
[0x50a:0x50f]
---
Predecessors: [0x3e0]
Successors: [0x510, 0x5ac]
---
0x50a JUMPDEST
0x50b ISZERO
0x50c PUSH2 0x5ac
0x50f JUMPI
---
0x50a: JUMPDEST 
0x50b: V442 = ISZERO S0
0x50c: V443 = 0x5ac
0x50f: JUMPI 0x5ac V442
---
Entry stack: [V10, 0xcb, V205, V207, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xcb, V205, V207, S1]

================================

Block 0x510
[0x510:0x532]
---
Predecessors: [0x50a]
Successors: [0x533, 0x538]
---
0x510 POP
0x511 PUSH1 0x1
0x513 PUSH1 0xa0
0x515 PUSH1 0x2
0x517 EXP
0x518 SUB
0x519 CALLER
0x51a AND
0x51b PUSH1 0x0
0x51d SWAP1
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x1
0x522 PUSH1 0x20
0x524 MSTORE
0x525 PUSH1 0x40
0x527 DUP2
0x528 SHA3
0x529 SLOAD
0x52a SWAP1
0x52b DUP2
0x52c GT
0x52d DUP1
0x52e ISZERO
0x52f PUSH2 0x538
0x532 JUMPI
---
0x511: V444 = 0x1
0x513: V445 = 0xa0
0x515: V446 = 0x2
0x517: V447 = EXP 0x2 0xa0
0x518: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x519: V449 = CALLER
0x51a: V450 = AND V449 0xffffffffffffffffffffffffffffffffffffffff
0x51b: V451 = 0x0
0x51f: M[0x0] = V450
0x520: V452 = 0x1
0x522: V453 = 0x20
0x524: M[0x20] = 0x1
0x525: V454 = 0x40
0x528: V455 = SHA3 0x0 0x40
0x529: V456 = S[V455]
0x52c: V457 = GT V456 0x0
0x52e: V458 = ISZERO V457
0x52f: V459 = 0x538
0x532: JUMPI 0x538 V458
---
Entry stack: [V10, 0xcb, V205, V207, S0]
Stack pops: 1
Stack additions: [V456, V457]
Exit stack: [V10, 0xcb, V205, V207, V456, V457]

================================

Block 0x533
[0x533:0x537]
---
Predecessors: [0x510]
Successors: [0x538]
---
0x533 POP
0x534 DUP1
0x535 DUP3
0x536 GT
0x537 ISZERO
---
0x536: V460 = GT V207 V456
0x537: V461 = ISZERO V460
---
Entry stack: [V10, 0xcb, V205, V207, V456, V457]
Stack pops: 3
Stack additions: [S2, S1, V461]
Exit stack: [V10, 0xcb, V205, V207, V456, V461]

================================

Block 0x538
[0x538:0x53d]
---
Predecessors: [0x510, 0x533]
Successors: [0x53e, 0x5ac]
---
0x538 JUMPDEST
0x539 ISZERO
0x53a PUSH2 0x5ac
0x53d JUMPI
---
0x538: JUMPDEST 
0x539: V462 = ISZERO S0
0x53a: V463 = 0x5ac
0x53d: JUMPI 0x5ac V462
---
Entry stack: [V10, 0xcb, V205, V207, V456, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xcb, V205, V207, V456]

================================

Block 0x53e
[0x53e:0x569]
---
Predecessors: [0x538]
Successors: [0x56a, 0x56e]
---
0x53e PUSH1 0x1
0x540 PUSH1 0xa0
0x542 PUSH1 0x2
0x544 EXP
0x545 SUB
0x546 DUP4
0x547 AND
0x548 DUP3
0x549 ISZERO
0x54a PUSH2 0x8fc
0x54d MUL
0x54e DUP4
0x54f PUSH1 0x40
0x551 MLOAD
0x552 PUSH1 0x0
0x554 PUSH1 0x40
0x556 MLOAD
0x557 DUP1
0x558 DUP4
0x559 SUB
0x55a DUP2
0x55b DUP6
0x55c DUP9
0x55d DUP9
0x55e CALL
0x55f SWAP4
0x560 POP
0x561 POP
0x562 POP
0x563 POP
0x564 ISZERO
0x565 ISZERO
0x566 PUSH2 0x56e
0x569 JUMPI
---
0x53e: V464 = 0x1
0x540: V465 = 0xa0
0x542: V466 = 0x2
0x544: V467 = EXP 0x2 0xa0
0x545: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x547: V469 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x549: V470 = ISZERO V207
0x54a: V471 = 0x8fc
0x54d: V472 = MUL 0x8fc V470
0x54f: V473 = 0x40
0x551: V474 = M[0x40]
0x552: V475 = 0x0
0x554: V476 = 0x40
0x556: V477 = M[0x40]
0x559: V478 = SUB V474 V477
0x55e: V479 = CALL V472 V469 V207 V477 V478 V477 0x0
0x564: V480 = ISZERO V479
0x565: V481 = ISZERO V480
0x566: V482 = 0x56e
0x569: JUMPI 0x56e V481
---
Entry stack: [V10, 0xcb, V205, V207, V456]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xcb, V205, V207, V456]

================================

Block 0x56a
[0x56a:0x56d]
---
Predecessors: [0x53e]
Successors: []
---
0x56a PUSH1 0x0
0x56c DUP1
0x56d REVERT
---
0x56a: V483 = 0x0
0x56d: REVERT 0x0 0x0
---
Entry stack: [V10, 0xcb, V205, V207, V456]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb, V205, V207, V456]

================================

Block 0x56e
[0x56e:0x5ab]
---
Predecessors: [0x53e]
Successors: [0x5ac]
---
0x56e JUMPDEST
0x56f DUP3
0x570 PUSH1 0x1
0x572 PUSH1 0xa0
0x574 PUSH1 0x2
0x576 EXP
0x577 SUB
0x578 AND
0x579 PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x59a DUP4
0x59b PUSH1 0x40
0x59d MLOAD
0x59e SWAP1
0x59f DUP2
0x5a0 MSTORE
0x5a1 PUSH1 0x20
0x5a3 ADD
0x5a4 PUSH1 0x40
0x5a6 MLOAD
0x5a7 DUP1
0x5a8 SWAP2
0x5a9 SUB
0x5aa SWAP1
0x5ab LOG2
---
0x56e: JUMPDEST 
0x570: V484 = 0x1
0x572: V485 = 0xa0
0x574: V486 = 0x2
0x576: V487 = EXP 0x2 0xa0
0x577: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x578: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x579: V490 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x59b: V491 = 0x40
0x59d: V492 = M[0x40]
0x5a0: M[V492] = V207
0x5a1: V493 = 0x20
0x5a3: V494 = ADD 0x20 V492
0x5a4: V495 = 0x40
0x5a6: V496 = M[0x40]
0x5a9: V497 = SUB V494 V496
0x5ab: LOG V496 V497 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V489
---
Entry stack: [V10, 0xcb, V205, V207, V456]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xcb, V205, V207, V456]

================================

Block 0x5ac
[0x5ac:0x5ac]
---
Predecessors: [0x4ea, 0x50a, 0x538, 0x56e]
Successors: [0x5ad]
---
0x5ac JUMPDEST
---
0x5ac: JUMPDEST 
---
Entry stack: [V10, 0xcb, V205, V207, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb, V205, V207, S0]

================================

Block 0x5ad
[0x5ad:0x5ad]
---
Predecessors: [0x5ac]
Successors: [0x5ae]
---
0x5ad JUMPDEST
---
0x5ad: JUMPDEST 
---
Entry stack: [V10, 0xcb, V205, V207, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb, V205, V207, S0]

================================

Block 0x5ae
[0x5ae:0x5ae]
---
Predecessors: [0x5ad]
Successors: [0x5af]
---
0x5ae JUMPDEST
---
0x5ae: JUMPDEST 
---
Entry stack: [V10, 0xcb, V205, V207, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb, V205, V207, S0]

================================

Block 0x5af
[0x5af:0x5af]
---
Predecessors: [0x5ae]
Successors: [0x5b0]
---
0x5af JUMPDEST
---
0x5af: JUMPDEST 
---
Entry stack: [V10, 0xcb, V205, V207, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb, V205, V207, S0]

================================

Block 0x5b0
[0x5b0:0x5b4]
---
Predecessors: [0x5af]
Successors: [0xcb]
---
0x5b0 JUMPDEST
0x5b1 POP
0x5b2 POP
0x5b3 POP
0x5b4 JUMP
---
0x5b0: JUMPDEST 
0x5b4: JUMP 0xcb
---
Entry stack: [V10, 0xcb, V205, V207, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x5b5
[0x5b5:0x5c2]
---
Predecessors: [0x26c]
Successors: [0x5c3]
---
0x5b5 JUMPDEST
0x5b6 PUSH1 0x3
0x5b8 DUP1
0x5b9 SLOAD
0x5ba PUSH1 0xff
0x5bc NOT
0x5bd AND
0x5be PUSH1 0x1
0x5c0 OR
0x5c1 SWAP1
0x5c2 SSTORE
---
0x5b5: JUMPDEST 
0x5b6: V498 = 0x3
0x5b9: V499 = S[0x3]
0x5ba: V500 = 0xff
0x5bc: V501 = NOT 0xff
0x5bd: V502 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V499
0x5be: V503 = 0x1
0x5c0: V504 = OR 0x1 V502
0x5c2: S[0x3] = V504
---
Entry stack: [V10, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb]

================================

Block 0x5c3
[0x5c3:0x5c4]
---
Predecessors: [0x5b5]
Successors: [0xcb]
---
0x5c3 JUMPDEST
0x5c4 JUMP
---
0x5c3: JUMPDEST 
0x5c4: JUMP 0xcb
---
Entry stack: [V10, 0xcb]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x5c5
[0x5c5:0x5f2]
---
Predecessors: []
Successors: []
---
0x5c5 STOP
0x5c6 LOG1
0x5c7 PUSH6 0x627a7a723058
0x5ce SHA3
0x5cf INVALID
0x5d0 DUP14
0x5d1 PUSH1 0x15
0x5d3 PUSH31 0xf525da7eda4dea20bff103b591802f3a3081ffab8834ae3cefe0770029
---
0x5c5: STOP 
0x5c6: LOG S0 S1 S2
0x5c7: V505 = 0x627a7a723058
0x5ce: V506 = SHA3 0x627a7a723058 S3
0x5cf: INVALID 
0x5d1: V507 = 0x15
0x5d3: V508 = 0xf525da7eda4dea20bff103b591802f3a3081ffab8834ae3cefe0770029
---
Entry stack: []
Stack pops: 0
Stack additions: [V506, 0xf525da7eda4dea20bff103b591802f3a3081ffab8834ae3cefe0770029, 0x15, S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13]
Exit stack: []

================================

Function 0:
Public function signature: 0x223c217b
Entry block: 0xce
Exit block: 0xf6
Body: 0xce, 0xd5, 0xd9, 0xf6, 0x2ed, 0x306, 0x371, 0x372, 0x373

Function 1:
Public function signature: 0x3ee2d7c2
Entry block: 0x10a
Exit block: 0x129
Body: 0x10a, 0x111, 0x115, 0x129, 0x37a

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0x13b
Exit block: 0x39d
Body: 0x13b, 0x142, 0x146, 0x38c, 0x39d, 0x3a1

Function 3:
Public function signature: 0x893d20e8
Entry block: 0x150
Exit block: 0x163
Body: 0x150, 0x157, 0x15b, 0x163, 0x3b1, 0x3be

Function 4:
Public function signature: 0x8cf49cad
Entry block: 0x17f
Exit block: 0x129
Body: 0x129, 0x17f, 0x186, 0x18a, 0x3c1, 0x3c5

Function 5:
Public function signature: 0xbe3eac25
Entry block: 0x1a4
Exit block: 0xf6
Body: 0xf6, 0x1a4, 0x1ab, 0x1af

Function 6:
Public function signature: 0xc635a9f2
Entry block: 0x1cb
Exit block: 0x129
Body: 0x129, 0x1cb, 0x1d2, 0x1d6

Function 7:
Public function signature: 0xcfa4f3e8
Entry block: 0x1f0
Exit block: 0xcc
Body: 0xcb, 0xcc, 0x1f0, 0x1f7, 0x1fb, 0x3ea, 0x423

Function 8:
Public function signature: 0xd0e30db0
Entry block: 0xc2
Exit block: 0xcc
Body: 0xc2, 0xc3, 0xcb, 0xcc

Function 9:
Public function signature: 0xe1c7392a
Entry block: 0x212
Exit block: 0xcc
Body: 0xcb, 0xcc, 0x212, 0x426, 0x433, 0x478, 0x479, 0x47a, 0x4a3

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x21c
Exit block: 0xcc
Body: 0xcb, 0xcc, 0x21c, 0x223, 0x227, 0x423, 0x4a5, 0x4bd, 0x4e5, 0x4e6, 0x4e7

Function 11:
Public function signature: 0xf3fef3a3
Entry block: 0x23d
Exit block: 0xcc
Body: 0xcb, 0xcc, 0x23d, 0x244, 0x248, 0x4ea, 0x503, 0x50a, 0x510, 0x533, 0x538, 0x53e, 0x56a, 0x56e, 0x5ac, 0x5ad, 0x5ae, 0x5af, 0x5b0

Function 12:
Public function signature: 0xf83d08ba
Entry block: 0x261
Exit block: 0xcc
Body: 0xcb, 0xcc, 0x261, 0x268, 0x26c, 0x5b5, 0x5c3

Function 13:
Public fallback function
Entry block: 0xc2
Exit block: 0xcc
Body: 0xc2, 0xc3, 0xcb, 0xcc

Function 14:
Private function
Entry block: 0x3c8
Exit block: 0x3e0
Body: 0x3c8, 0x3d6, 0x3dd, 0x3e0

Function 15:
Private function
Entry block: 0x276
Exit block: 0x2eb
Body: 0x276, 0x280, 0x287, 0x28e, 0x2ac, 0x2ea, 0x2eb

Function 16:
Private function
Entry block: 0x3e3
Exit block: 0x3e7
Body: 0x3e3, 0x3e7

