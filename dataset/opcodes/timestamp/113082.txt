Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x382cf0a6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x382cf0a6
0x3b: V13 = EQ V11 0x382cf0a6
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xb4]
---
0x40 DUP1
0x41 PUSH4 0x41c0e1b5
0x46 EQ
0x47 PUSH2 0xb4
0x4a JUMPI
---
0x41: V15 = 0x41c0e1b5
0x46: V16 = EQ 0x41c0e1b5 V11
0x47: V17 = 0xb4
0x4a: JUMPI 0xb4 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xc9]
---
0x4b DUP1
0x4c PUSH4 0x6898f82b
0x51 EQ
0x52 PUSH2 0xc9
0x55 JUMPI
---
0x4c: V18 = 0x6898f82b
0x51: V19 = EQ 0x6898f82b V11
0x52: V20 = 0xc9
0x55: JUMPI 0xc9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xd4]
---
0x56 DUP1
0x57 PUSH4 0x9c675eaa
0x5c EQ
0x5d PUSH2 0xd4
0x60 JUMPI
---
0x57: V21 = 0x9c675eaa
0x5c: V22 = EQ 0x9c675eaa V11
0x5d: V23 = 0xd4
0x60: JUMPI 0xd4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x105]
---
0x61 DUP1
0x62 PUSH4 0xc5339132
0x67 EQ
0x68 PUSH2 0x105
0x6b JUMPI
---
0x62: V24 = 0xc5339132
0x67: V25 = EQ 0xc5339132 V11
0x68: V26 = 0x105
0x6b: JUMPI 0x105 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x12c]
---
0x6c DUP1
0x6d PUSH4 0xcfd8a175
0x72 EQ
0x73 PUSH2 0x12c
0x76 JUMPI
---
0x6d: V27 = 0xcfd8a175
0x72: V28 = EQ 0xcfd8a175 V11
0x73: V29 = 0x12c
0x76: JUMPI 0x12c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x1ab, 0x2b9]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b DUP1
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x79]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x85
[0x85:0x90]
---
Predecessors: [0x79]
Successors: [0x141]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH2 0x91
0x8a PUSH1 0x4
0x8c CALLDATALOAD
0x8d PUSH2 0x141
0x90 JUMP
---
0x85: JUMPDEST 
0x87: V34 = 0x91
0x8a: V35 = 0x4
0x8c: V36 = CALLDATALOAD 0x4
0x8d: V37 = 0x141
0x90: JUMP 0x141
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x91, V36]
Exit stack: [V11, 0x91, V36]

================================

Block 0x91
[0x91:0xb3]
---
Predecessors: [0x14f]
Successors: []
---
0x91 JUMPDEST
0x92 PUSH1 0x40
0x94 DUP1
0x95 MLOAD
0x96 PUSH1 0x1
0x98 PUSH1 0xa0
0x9a PUSH1 0x2
0x9c EXP
0x9d SUB
0x9e SWAP1
0x9f SWAP4
0xa0 AND
0xa1 DUP4
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 DUP4
0xa6 ADD
0xa7 SWAP2
0xa8 SWAP1
0xa9 SWAP2
0xaa MSTORE
0xab DUP1
0xac MLOAD
0xad SWAP2
0xae DUP3
0xaf SWAP1
0xb0 SUB
0xb1 ADD
0xb2 SWAP1
0xb3 RETURN
---
0x91: JUMPDEST 
0x92: V38 = 0x40
0x95: V39 = M[0x40]
0x96: V40 = 0x1
0x98: V41 = 0xa0
0x9a: V42 = 0x2
0x9c: V43 = EXP 0x2 0xa0
0x9d: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V45 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0xa2: M[V39] = V45
0xa3: V46 = 0x20
0xa6: V47 = ADD V39 0x20
0xaa: M[V47] = V110
0xac: V48 = M[0x40]
0xb0: V49 = SUB V39 V48
0xb1: V50 = ADD V49 0x40
0xb3: RETURN V48 V50
---
Entry stack: [V11, 0x91, V116, V110]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x91]

================================

Block 0xb4
[0xb4:0xbb]
---
Predecessors: [0x40]
Successors: [0xbc, 0xc0]
---
0xb4 JUMPDEST
0xb5 CALLVALUE
0xb6 DUP1
0xb7 ISZERO
0xb8 PUSH2 0xc0
0xbb JUMPI
---
0xb4: JUMPDEST 
0xb5: V51 = CALLVALUE
0xb7: V52 = ISZERO V51
0xb8: V53 = 0xc0
0xbb: JUMPI 0xc0 V52
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V51]
Exit stack: [V11, V51]

================================

Block 0xbc
[0xbc:0xbf]
---
Predecessors: [0xb4]
Successors: []
---
0xbc PUSH1 0x0
0xbe DUP1
0xbf REVERT
---
0xbc: V54 = 0x0
0xbf: REVERT 0x0 0x0
---
Entry stack: [V11, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V51]

================================

Block 0xc0
[0xc0:0xc8]
---
Predecessors: [0xb4]
Successors: [0x177]
---
0xc0 JUMPDEST
0xc1 POP
0xc2 PUSH2 0x77
0xc5 PUSH2 0x177
0xc8 JUMP
---
0xc0: JUMPDEST 
0xc2: V55 = 0x77
0xc5: V56 = 0x177
0xc8: JUMP 0x177
---
Entry stack: [V11, V51]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xc9
[0xc9:0xd3]
---
Predecessors: [0x4b]
Successors: [0x1ad]
---
0xc9 JUMPDEST
0xca PUSH2 0x77
0xcd PUSH1 0x4
0xcf CALLDATALOAD
0xd0 PUSH2 0x1ad
0xd3 JUMP
---
0xc9: JUMPDEST 
0xca: V57 = 0x77
0xcd: V58 = 0x4
0xcf: V59 = CALLDATALOAD 0x4
0xd0: V60 = 0x1ad
0xd3: JUMP 0x1ad
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V59]
Exit stack: [V11, 0x77, V59]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0x56]
Successors: [0xdc, 0xe0]
---
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 DUP1
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xd4: JUMPDEST 
0xd5: V61 = CALLVALUE
0xd7: V62 = ISZERO V61
0xd8: V63 = 0xe0
0xdb: JUMPI 0xe0 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xd4]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V64 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0xe0
[0xe0:0xe8]
---
Predecessors: [0xd4]
Successors: [0x2c1]
---
0xe0 JUMPDEST
0xe1 POP
0xe2 PUSH2 0xe9
0xe5 PUSH2 0x2c1
0xe8 JUMP
---
0xe0: JUMPDEST 
0xe2: V65 = 0xe9
0xe5: V66 = 0x2c1
0xe8: JUMP 0x2c1
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0xe9]
Exit stack: [V11, 0xe9]

================================

Block 0xe9
[0xe9:0x104]
---
Predecessors: [0x2c1]
Successors: []
---
0xe9 JUMPDEST
0xea PUSH1 0x40
0xec DUP1
0xed MLOAD
0xee PUSH1 0x1
0xf0 PUSH1 0xa0
0xf2 PUSH1 0x2
0xf4 EXP
0xf5 SUB
0xf6 SWAP1
0xf7 SWAP3
0xf8 AND
0xf9 DUP3
0xfa MSTORE
0xfb MLOAD
0xfc SWAP1
0xfd DUP2
0xfe SWAP1
0xff SUB
0x100 PUSH1 0x20
0x102 ADD
0x103 SWAP1
0x104 RETURN
---
0xe9: JUMPDEST 
0xea: V67 = 0x40
0xed: V68 = M[0x40]
0xee: V69 = 0x1
0xf0: V70 = 0xa0
0xf2: V71 = 0x2
0xf4: V72 = EXP 0x2 0xa0
0xf5: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8: V74 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0xfa: M[V68] = V74
0xfb: V75 = M[0x40]
0xff: V76 = SUB V68 V75
0x100: V77 = 0x20
0x102: V78 = ADD 0x20 V76
0x104: RETURN V75 V78
---
Entry stack: [V11, 0xe9, V229]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe9]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0x61]
Successors: [0x10d, 0x111]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x105: JUMPDEST 
0x106: V79 = CALLVALUE
0x108: V80 = ISZERO V79
0x109: V81 = 0x111
0x10c: JUMPI 0x111 V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, V79]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x105]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V82 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V79]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0x105]
Successors: [0x2d0]
---
0x111 JUMPDEST
0x112 POP
0x113 PUSH2 0x11a
0x116 PUSH2 0x2d0
0x119 JUMP
---
0x111: JUMPDEST 
0x113: V83 = 0x11a
0x116: V84 = 0x2d0
0x119: JUMP 0x2d0
---
Entry stack: [V11, V79]
Stack pops: 1
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x11a
[0x11a:0x12b]
---
Predecessors: [0x2d0, 0x2d6]
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d DUP1
0x11e MLOAD
0x11f SWAP2
0x120 DUP3
0x121 MSTORE
0x122 MLOAD
0x123 SWAP1
0x124 DUP2
0x125 SWAP1
0x126 SUB
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP1
0x12b RETURN
---
0x11a: JUMPDEST 
0x11b: V85 = 0x40
0x11e: V86 = M[0x40]
0x121: M[V86] = S0
0x122: V87 = M[0x40]
0x126: V88 = SUB V86 V87
0x127: V89 = 0x20
0x129: V90 = ADD 0x20 V88
0x12b: RETURN V87 V90
---
Entry stack: [V11, 0x11a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x11a]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x6c]
Successors: [0x134, 0x138]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e DUP1
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12c: JUMPDEST 
0x12d: V91 = CALLVALUE
0x12f: V92 = ISZERO V91
0x130: V93 = 0x138
0x133: JUMPI 0x138 V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V91]
Exit stack: [V11, V91]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12c]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V94 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V11, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91]

================================

Block 0x138
[0x138:0x140]
---
Predecessors: [0x12c]
Successors: [0x2d6]
---
0x138 JUMPDEST
0x139 POP
0x13a PUSH2 0x11a
0x13d PUSH2 0x2d6
0x140 JUMP
---
0x138: JUMPDEST 
0x13a: V95 = 0x11a
0x13d: V96 = 0x2d6
0x140: JUMP 0x2d6
---
Entry stack: [V11, V91]
Stack pops: 1
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x141
[0x141:0x14d]
---
Predecessors: [0x85]
Successors: [0x14e, 0x14f]
---
0x141 JUMPDEST
0x142 PUSH1 0x4
0x144 DUP1
0x145 SLOAD
0x146 DUP3
0x147 SWAP1
0x148 DUP2
0x149 LT
0x14a PUSH2 0x14f
0x14d JUMPI
---
0x141: JUMPDEST 
0x142: V97 = 0x4
0x145: V98 = S[0x4]
0x149: V99 = LT V36 V98
0x14a: V100 = 0x14f
0x14d: JUMPI 0x14f V99
---
Entry stack: [V11, 0x91, V36]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V11, 0x91, V36, 0x4, V36]

================================

Block 0x14e
[0x14e:0x14e]
---
Predecessors: [0x141]
Successors: []
---
0x14e INVALID
---
0x14e: INVALID 
---
Entry stack: [V11, 0x91, V36, 0x4, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, V36, 0x4, V36]

================================

Block 0x14f
[0x14f:0x176]
---
Predecessors: [0x141]
Successors: [0x91]
---
0x14f JUMPDEST
0x150 PUSH1 0x0
0x152 SWAP2
0x153 DUP3
0x154 MSTORE
0x155 PUSH1 0x20
0x157 SWAP1
0x158 SWAP2
0x159 SHA3
0x15a PUSH1 0x2
0x15c SWAP1
0x15d SWAP2
0x15e MUL
0x15f ADD
0x160 DUP1
0x161 SLOAD
0x162 PUSH1 0x1
0x164 SWAP1
0x165 SWAP2
0x166 ADD
0x167 SLOAD
0x168 PUSH1 0x1
0x16a PUSH1 0xa0
0x16c PUSH1 0x2
0x16e EXP
0x16f SUB
0x170 SWAP1
0x171 SWAP2
0x172 AND
0x173 SWAP2
0x174 POP
0x175 DUP3
0x176 JUMP
---
0x14f: JUMPDEST 
0x150: V101 = 0x0
0x154: M[0x0] = 0x4
0x155: V102 = 0x20
0x159: V103 = SHA3 0x0 0x20
0x15a: V104 = 0x2
0x15e: V105 = MUL V36 0x2
0x15f: V106 = ADD V105 V103
0x161: V107 = S[V106]
0x162: V108 = 0x1
0x166: V109 = ADD V106 0x1
0x167: V110 = S[V109]
0x168: V111 = 0x1
0x16a: V112 = 0xa0
0x16c: V113 = 0x2
0x16e: V114 = EXP 0x2 0xa0
0x16f: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x172: V116 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x176: JUMP 0x91
---
Entry stack: [V11, 0x91, V36, 0x4, V36]
Stack pops: 4
Stack additions: [S3, V116, V110]
Exit stack: [V11, 0x91, V116, V110]

================================

Block 0x177
[0x177:0x18f]
---
Predecessors: [0xc0]
Successors: [0x190, 0x19a]
---
0x177 JUMPDEST
0x178 PUSH1 0x3
0x17a SLOAD
0x17b CALLER
0x17c PUSH1 0x1
0x17e PUSH1 0xa0
0x180 PUSH1 0x2
0x182 EXP
0x183 SUB
0x184 SWAP1
0x185 DUP2
0x186 AND
0x187 SWAP2
0x188 AND
0x189 EQ
0x18a DUP1
0x18b ISZERO
0x18c PUSH2 0x19a
0x18f JUMPI
---
0x177: JUMPDEST 
0x178: V117 = 0x3
0x17a: V118 = S[0x3]
0x17b: V119 = CALLER
0x17c: V120 = 0x1
0x17e: V121 = 0xa0
0x180: V122 = 0x2
0x182: V123 = EXP 0x2 0xa0
0x183: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x188: V126 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x189: V127 = EQ V126 V125
0x18b: V128 = ISZERO V127
0x18c: V129 = 0x19a
0x18f: JUMPI 0x19a V128
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V127]
Exit stack: [V11, 0x77, V127]

================================

Block 0x190
[0x190:0x199]
---
Predecessors: [0x177]
Successors: [0x19a]
---
0x190 POP
0x191 PUSH1 0x1
0x193 SLOAD
0x194 PUSH2 0x5460
0x197 ADD
0x198 TIMESTAMP
0x199 GT
---
0x191: V130 = 0x1
0x193: V131 = S[0x1]
0x194: V132 = 0x5460
0x197: V133 = ADD 0x5460 V131
0x198: V134 = TIMESTAMP
0x199: V135 = GT V134 V133
---
Entry stack: [V11, 0x77, V127]
Stack pops: 1
Stack additions: [V135]
Exit stack: [V11, 0x77, V135]

================================

Block 0x19a
[0x19a:0x19f]
---
Predecessors: [0x177, 0x190]
Successors: [0x1a0, 0x1ab]
---
0x19a JUMPDEST
0x19b ISZERO
0x19c PUSH2 0x1ab
0x19f JUMPI
---
0x19a: JUMPDEST 
0x19b: V136 = ISZERO S0
0x19c: V137 = 0x1ab
0x19f: JUMPI 0x1ab V136
---
Entry stack: [V11, 0x77, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1a0
[0x1a0:0x1aa]
---
Predecessors: [0x19a]
Successors: []
---
0x1a0 CALLER
0x1a1 PUSH1 0x1
0x1a3 PUSH1 0xa0
0x1a5 PUSH1 0x2
0x1a7 EXP
0x1a8 SUB
0x1a9 AND
0x1aa SELFDESTRUCT
---
0x1a0: V138 = CALLER
0x1a1: V139 = 0x1
0x1a3: V140 = 0xa0
0x1a5: V141 = 0x2
0x1a7: V142 = EXP 0x2 0xa0
0x1a8: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a9: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x1aa: SELFDESTRUCT V144
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1ab
[0x1ab:0x1ac]
---
Predecessors: [0x19a]
Successors: [0x77]
---
0x1ab JUMPDEST
0x1ac JUMP
---
0x1ab: JUMPDEST 
0x1ac: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ad
[0x1ad:0x1bb]
---
Predecessors: [0xc9]
Successors: [0x1bc, 0x1c2]
---
0x1ad JUMPDEST
0x1ae PUSH1 0x0
0x1b0 PUSH1 0x2
0x1b2 SLOAD
0x1b3 CALLVALUE
0x1b4 LT
0x1b5 ISZERO
0x1b6 DUP1
0x1b7 ISZERO
0x1b8 PUSH2 0x1c2
0x1bb JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V145 = 0x0
0x1b0: V146 = 0x2
0x1b2: V147 = S[0x2]
0x1b3: V148 = CALLVALUE
0x1b4: V149 = LT V148 V147
0x1b5: V150 = ISZERO V149
0x1b7: V151 = ISZERO V150
0x1b8: V152 = 0x1c2
0x1bb: JUMPI 0x1c2 V151
---
Entry stack: [V11, 0x77, V59]
Stack pops: 0
Stack additions: [0x0, V150]
Exit stack: [V11, 0x77, V59, 0x0, V150]

================================

Block 0x1bc
[0x1bc:0x1c1]
---
Predecessors: [0x1ad]
Successors: [0x1c2]
---
0x1bc POP
0x1bd PUSH1 0x10
0x1bf DUP3
0x1c0 GT
0x1c1 ISZERO
---
0x1bd: V153 = 0x10
0x1c0: V154 = GT V59 0x10
0x1c1: V155 = ISZERO V154
---
Entry stack: [V11, 0x77, V59, 0x0, V150]
Stack pops: 3
Stack additions: [S2, S1, V155]
Exit stack: [V11, 0x77, V59, 0x0, V155]

================================

Block 0x1c2
[0x1c2:0x1c8]
---
Predecessors: [0x1ad, 0x1bc]
Successors: [0x1c9, 0x1cd]
---
0x1c2 JUMPDEST
0x1c3 ISZERO
0x1c4 ISZERO
0x1c5 PUSH2 0x1cd
0x1c8 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V156 = ISZERO S0
0x1c4: V157 = ISZERO V156
0x1c5: V158 = 0x1cd
0x1c8: JUMPI 0x1cd V157
---
Entry stack: [V11, 0x77, V59, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V59, 0x0]

================================

Block 0x1c9
[0x1c9:0x1cc]
---
Predecessors: [0x1c2]
Successors: []
---
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc REVERT
---
0x1c9: V159 = 0x0
0x1cc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V59, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V59, 0x0]

================================

Block 0x1cd
[0x1cd:0x275]
---
Predecessors: [0x1c2]
Successors: [0x276, 0x2b1]
---
0x1cd JUMPDEST
0x1ce DUP1
0x1cf SLOAD
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 CALLER
0x1d9 DUP2
0x1da AND
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 NOT
0x1f1 SWAP3
0x1f2 DUP4
0x1f3 AND
0x1f4 OR
0x1f5 DUP4
0x1f6 SSTORE
0x1f7 PUSH1 0x1
0x1f9 DUP1
0x1fa DUP5
0x1fb ADD
0x1fc DUP6
0x1fd DUP2
0x1fe SSTORE
0x1ff PUSH1 0x4
0x201 DUP1
0x202 SLOAD
0x203 SWAP3
0x204 DUP4
0x205 ADD
0x206 DUP2
0x207 SSTORE
0x208 PUSH1 0x0
0x20a SWAP1
0x20b DUP2
0x20c MSTORE
0x20d DUP6
0x20e SLOAD
0x20f PUSH1 0x2
0x211 SWAP1
0x212 SWAP4
0x213 MUL
0x214 PUSH32 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x235 DUP2
0x236 ADD
0x237 DUP1
0x238 SLOAD
0x239 SWAP1
0x23a SWAP7
0x23b AND
0x23c SWAP4
0x23d SWAP1
0x23e SWAP5
0x23f AND
0x240 SWAP3
0x241 SWAP1
0x242 SWAP3
0x243 OR
0x244 SWAP1
0x245 SWAP4
0x246 SSTORE
0x247 SWAP2
0x248 SLOAD
0x249 PUSH32 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c
0x26a SWAP1
0x26b SWAP2
0x26c ADD
0x26d SSTORE
0x26e SLOAD
0x26f DUP3
0x270 EQ
0x271 ISZERO
0x272 PUSH2 0x2b1
0x275 JUMPI
---
0x1cd: JUMPDEST 
0x1cf: V160 = S[0x0]
0x1d0: V161 = 0x1
0x1d2: V162 = 0xa0
0x1d4: V163 = 0x2
0x1d6: V164 = EXP 0x2 0xa0
0x1d7: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V166 = CALLER
0x1da: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1db: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V169 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V170 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V160
0x1f4: V171 = OR V170 V167
0x1f6: S[0x0] = V171
0x1f7: V172 = 0x1
0x1fb: V173 = ADD 0x0 0x1
0x1fe: S[0x1] = V59
0x1ff: V174 = 0x4
0x202: V175 = S[0x4]
0x205: V176 = ADD V175 0x1
0x207: S[0x4] = V176
0x208: V177 = 0x0
0x20c: M[0x0] = 0x4
0x20e: V178 = S[0x0]
0x20f: V179 = 0x2
0x213: V180 = MUL V175 0x2
0x214: V181 = 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x236: V182 = ADD V180 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x238: V183 = S[V182]
0x23b: V184 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V183
0x23f: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x243: V186 = OR V185 V184
0x246: S[V182] = V186
0x248: V187 = S[0x1]
0x249: V188 = 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c
0x26c: V189 = ADD V180 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c
0x26d: S[V189] = V187
0x26e: V190 = S[0x0]
0x270: V191 = EQ V59 V190
0x271: V192 = ISZERO V191
0x272: V193 = 0x2b1
0x275: JUMPI 0x2b1 V192
---
Entry stack: [V11, 0x77, V59, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, V59, 0x0]

================================

Block 0x276
[0x276:0x2a5]
---
Predecessors: [0x1cd]
Successors: [0x2a6, 0x2af]
---
0x276 PUSH1 0x40
0x278 MLOAD
0x279 PUSH1 0x1
0x27b PUSH1 0xa0
0x27d PUSH1 0x2
0x27f EXP
0x280 SUB
0x281 CALLER
0x282 DUP2
0x283 AND
0x284 SWAP2
0x285 ADDRESS
0x286 SWAP1
0x287 SWAP2
0x288 AND
0x289 BALANCE
0x28a DUP1
0x28b ISZERO
0x28c PUSH2 0x8fc
0x28f MUL
0x290 SWAP2
0x291 PUSH1 0x0
0x293 DUP2
0x294 DUP2
0x295 DUP2
0x296 DUP6
0x297 DUP9
0x298 DUP9
0x299 CALL
0x29a SWAP4
0x29b POP
0x29c POP
0x29d POP
0x29e POP
0x29f ISZERO
0x2a0 DUP1
0x2a1 ISZERO
0x2a2 PUSH2 0x2af
0x2a5 JUMPI
---
0x276: V194 = 0x40
0x278: V195 = M[0x40]
0x279: V196 = 0x1
0x27b: V197 = 0xa0
0x27d: V198 = 0x2
0x27f: V199 = EXP 0x2 0xa0
0x280: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V201 = CALLER
0x283: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x285: V203 = ADDRESS
0x288: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x289: V205 = BALANCE V204
0x28b: V206 = ISZERO V205
0x28c: V207 = 0x8fc
0x28f: V208 = MUL 0x8fc V206
0x291: V209 = 0x0
0x299: V210 = CALL V208 V202 V205 V195 0x0 V195 0x0
0x29f: V211 = ISZERO V210
0x2a1: V212 = ISZERO V211
0x2a2: V213 = 0x2af
0x2a5: JUMPI 0x2af V212
---
Entry stack: [V11, 0x77, V59, 0x0]
Stack pops: 0
Stack additions: [V211]
Exit stack: [V11, 0x77, V59, 0x0, V211]

================================

Block 0x2a6
[0x2a6:0x2ae]
---
Predecessors: [0x276]
Successors: []
---
0x2a6 RETURNDATASIZE
0x2a7 PUSH1 0x0
0x2a9 DUP1
0x2aa RETURNDATACOPY
0x2ab RETURNDATASIZE
0x2ac PUSH1 0x0
0x2ae REVERT
---
0x2a6: V214 = RETURNDATASIZE
0x2a7: V215 = 0x0
0x2aa: RETURNDATACOPY 0x0 0x0 V214
0x2ab: V216 = RETURNDATASIZE
0x2ac: V217 = 0x0
0x2ae: REVERT 0x0 V216
---
Entry stack: [V11, 0x77, V59, 0x0, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V59, 0x0, V211]

================================

Block 0x2af
[0x2af:0x2b0]
---
Predecessors: [0x276]
Successors: [0x2b1]
---
0x2af JUMPDEST
0x2b0 POP
---
0x2af: JUMPDEST 
---
Entry stack: [V11, 0x77, V59, 0x0, V211]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V59, 0x0]

================================

Block 0x2b1
[0x2b1:0x2b8]
---
Predecessors: [0x1cd, 0x2af]
Successors: [0x2dc]
---
0x2b1 JUMPDEST
0x2b2 PUSH2 0x2b9
0x2b5 PUSH2 0x2dc
0x2b8 JUMP
---
0x2b1: JUMPDEST 
0x2b2: V218 = 0x2b9
0x2b5: V219 = 0x2dc
0x2b8: JUMP 0x2dc
---
Entry stack: [V11, 0x77, V59, 0x0]
Stack pops: 0
Stack additions: [0x2b9]
Exit stack: [V11, 0x77, V59, 0x0, 0x2b9]

================================

Block 0x2b9
[0x2b9:0x2c0]
---
Predecessors: [0x2dc]
Successors: [0x77]
---
0x2b9 JUMPDEST
0x2ba POP
0x2bb POP
0x2bc TIMESTAMP
0x2bd PUSH1 0x1
0x2bf SSTORE
0x2c0 JUMP
---
0x2b9: JUMPDEST 
0x2bc: V220 = TIMESTAMP
0x2bd: V221 = 0x1
0x2bf: S[0x1] = V220
0x2c0: JUMP 0x77
---
Entry stack: [V11, 0x77, V59, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c1
[0x2c1:0x2cf]
---
Predecessors: [0xe0]
Successors: [0xe9]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x3
0x2c4 SLOAD
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SUB
0x2cd AND
0x2ce DUP2
0x2cf JUMP
---
0x2c1: JUMPDEST 
0x2c2: V222 = 0x3
0x2c4: V223 = S[0x3]
0x2c5: V224 = 0x1
0x2c7: V225 = 0xa0
0x2c9: V226 = 0x2
0x2cb: V227 = EXP 0x2 0xa0
0x2cc: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cd: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x2cf: JUMP 0xe9
---
Entry stack: [V11, 0xe9]
Stack pops: 1
Stack additions: [S0, V229]
Exit stack: [V11, 0xe9, V229]

================================

Block 0x2d0
[0x2d0:0x2d5]
---
Predecessors: [0x111]
Successors: [0x11a]
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x1
0x2d3 SLOAD
0x2d4 DUP2
0x2d5 JUMP
---
0x2d0: JUMPDEST 
0x2d1: V230 = 0x1
0x2d3: V231 = S[0x1]
0x2d5: JUMP 0x11a
---
Entry stack: [V11, 0x11a]
Stack pops: 1
Stack additions: [S0, V231]
Exit stack: [V11, 0x11a, V231]

================================

Block 0x2d6
[0x2d6:0x2db]
---
Predecessors: [0x138]
Successors: [0x11a]
---
0x2d6 JUMPDEST
0x2d7 PUSH1 0x2
0x2d9 SLOAD
0x2da DUP2
0x2db JUMP
---
0x2d6: JUMPDEST 
0x2d7: V232 = 0x2
0x2d9: V233 = S[0x2]
0x2db: JUMP 0x11a
---
Entry stack: [V11, 0x11a]
Stack pops: 1
Stack additions: [S0, V233]
Exit stack: [V11, 0x11a, V233]

================================

Block 0x2dc
[0x2dc:0x308]
---
Predecessors: [0x2b1]
Successors: [0x2b9]
---
0x2dc JUMPDEST
0x2dd PUSH1 0x40
0x2df DUP1
0x2e0 MLOAD
0x2e1 TIMESTAMP
0x2e2 DUP2
0x2e3 MSTORE
0x2e4 NUMBER
0x2e5 PUSH1 0x0
0x2e7 NOT
0x2e8 ADD
0x2e9 BLOCKHASH
0x2ea PUSH1 0x20
0x2ec DUP3
0x2ed ADD
0x2ee MSTORE
0x2ef DUP2
0x2f0 MLOAD
0x2f1 SWAP1
0x2f2 DUP2
0x2f3 SWAP1
0x2f4 SUB
0x2f5 SWAP1
0x2f6 SWAP2
0x2f7 ADD
0x2f8 SWAP1
0x2f9 SHA3
0x2fa PUSH1 0x1
0x2fc PUSH1 0xf
0x2fe SWAP1
0x2ff SWAP2
0x300 AND
0x301 ADD
0x302 PUSH1 0xff
0x304 AND
0x305 PUSH1 0x0
0x307 SSTORE
0x308 JUMP
---
0x2dc: JUMPDEST 
0x2dd: V234 = 0x40
0x2e0: V235 = M[0x40]
0x2e1: V236 = TIMESTAMP
0x2e3: M[V235] = V236
0x2e4: V237 = NUMBER
0x2e5: V238 = 0x0
0x2e7: V239 = NOT 0x0
0x2e8: V240 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V237
0x2e9: V241 = BLOCKHASH V240
0x2ea: V242 = 0x20
0x2ed: V243 = ADD V235 0x20
0x2ee: M[V243] = V241
0x2f0: V244 = M[0x40]
0x2f4: V245 = SUB V235 V244
0x2f7: V246 = ADD 0x40 V245
0x2f9: V247 = SHA3 V244 V246
0x2fa: V248 = 0x1
0x2fc: V249 = 0xf
0x300: V250 = AND V247 0xf
0x301: V251 = ADD V250 0x1
0x302: V252 = 0xff
0x304: V253 = AND 0xff V251
0x305: V254 = 0x0
0x307: S[0x0] = V253
0x308: JUMP 0x2b9
---
Entry stack: [V11, 0x77, V59, 0x0, 0x2b9]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V59, 0x0]

================================

Block 0x309
[0x309:0x334]
---
Predecessors: []
Successors: []
---
0x309 STOP
0x30a LOG1
0x30b PUSH6 0x627a7a723058
0x312 SHA3
0x313 MISSING 0xe3
0x314 MISSING 0xaf
0x315 AND
0x316 MISSING 0xe
0x317 EXTCODECOPY
0x318 SWAP15
0x319 MISSING 0xd3
0x31a SWAP1
0x31b MISSING 0x29
0x31c MSTORE
0x31d MISSING 0xe3
0x31e PUSH2 0x71e4
0x321 MISSING 0xe5
0x322 DUP11
0x323 MISSING 0xae
0x324 MISSING 0x5f
0x325 PUSH7 0x1aff2627b04ef2
0x32d CALLVALUE
0x32e SWAP2
0x32f MISSING 0xca
0x330 EXP
0x331 GASPRICE
0x332 MISSING 0xb8
0x333 STOP
0x334 MISSING 0x29
---
0x309: STOP 
0x30a: LOG S0 S1 S2
0x30b: V255 = 0x627a7a723058
0x312: V256 = SHA3 0x627a7a723058 S3
0x313: MISSING 0xe3
0x314: MISSING 0xaf
0x315: V257 = AND S0 S1
0x316: MISSING 0xe
0x317: EXTCODECOPY S0 S1 S2 S3
0x319: MISSING 0xd3
0x31b: MISSING 0x29
0x31c: M[S0] = S1
0x31d: MISSING 0xe3
0x31e: V258 = 0x71e4
0x321: MISSING 0xe5
0x323: MISSING 0xae
0x324: MISSING 0x5f
0x325: V259 = 0x1aff2627b04ef2
0x32d: V260 = CALLVALUE
0x32f: MISSING 0xca
0x330: V261 = EXP S0 S1
0x331: V262 = GASPRICE
0x332: MISSING 0xb8
0x333: STOP 
0x334: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V256, V257, S19, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S4, S1, S0, 0x71e4, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0x1aff2627b04ef2, V260, V262, V261]
Exit stack: []

================================

Function 0:
Public function signature: 0x382cf0a6
Entry block: 0x79
Exit block: 0x91
Body: 0x79, 0x81, 0x85, 0x91, 0x141, 0x14e, 0x14f

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xb4
Exit block: 0x77
Body: 0x77, 0xb4, 0xbc, 0xc0, 0x177, 0x190, 0x19a, 0x1a0, 0x1ab

Function 2:
Public function signature: 0x6898f82b
Entry block: 0xc9
Exit block: 0x77
Body: 0x77, 0xc9, 0x1ad, 0x1bc, 0x1c2, 0x1c9, 0x1cd, 0x276, 0x2a6, 0x2af, 0x2b1, 0x2b9, 0x2dc

Function 3:
Public function signature: 0x9c675eaa
Entry block: 0xd4
Exit block: 0xe9
Body: 0xd4, 0xdc, 0xe0, 0xe9, 0x2c1

Function 4:
Public function signature: 0xc5339132
Entry block: 0x105
Exit block: 0x11a
Body: 0x105, 0x10d, 0x111, 0x11a, 0x2d0

Function 5:
Public function signature: 0xcfd8a175
Entry block: 0x12c
Exit block: 0x11a
Body: 0x11a, 0x12c, 0x134, 0x138, 0x2d6

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

