Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x92]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x28d08142
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x92
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x28d08142
0x3b: V13 = EQ V11 0x28d08142
0x3c: V14 = 0x92
0x3f: JUMPI 0x92 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc1]
---
0x40 DUP1
0x41 PUSH4 0x7037ec6f
0x46 EQ
0x47 PUSH2 0xc1
0x4a JUMPI
---
0x41: V15 = 0x7037ec6f
0x46: V16 = EQ 0x7037ec6f V11
0x47: V17 = 0xc1
0x4a: JUMPI 0xc1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xcb]
---
0x4b DUP1
0x4c PUSH4 0x80a37e23
0x51 EQ
0x52 PUSH2 0xcb
0x55 JUMPI
---
0x4c: V18 = 0x80a37e23
0x51: V19 = EQ 0x80a37e23 V11
0x52: V20 = 0xcb
0x55: JUMPI 0xcb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xed]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0xed
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0xed
0x60: JUMPI 0xed V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x100]
---
0x61 DUP1
0x62 PUSH4 0x96fe5418
0x67 EQ
0x68 PUSH2 0x100
0x6b JUMPI
---
0x62: V24 = 0x96fe5418
0x67: V25 = EQ 0x96fe5418 V11
0x68: V26 = 0x100
0x6b: JUMPI 0x100 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x125]
---
0x6c DUP1
0x6d PUSH4 0x9f57d16e
0x72 EQ
0x73 PUSH2 0x125
0x76 JUMPI
---
0x6d: V27 = 0x9f57d16e
0x72: V28 = EQ 0x9f57d16e V11
0x73: V29 = 0x125
0x76: JUMPI 0x125 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x138]
---
0x77 DUP1
0x78 PUSH4 0xc5cf8c7e
0x7d EQ
0x7e PUSH2 0x138
0x81 JUMPI
---
0x78: V30 = 0xc5cf8c7e
0x7d: V31 = EQ 0xc5cf8c7e V11
0x7e: V32 = 0x138
0x81: JUMPI 0x138 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x14b]
---
0x82 DUP1
0x83 PUSH4 0xd69a1a5f
0x88 EQ
0x89 PUSH2 0x14b
0x8c JUMPI
---
0x83: V33 = 0xd69a1a5f
0x88: V34 = EQ 0xd69a1a5f V11
0x89: V35 = 0x14b
0x8c: JUMPI 0x14b V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x91]
---
Predecessors: [0x0, 0x82]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x0
0x90 DUP1
0x91 REVERT
---
0x8d: JUMPDEST 
0x8e: V36 = 0x0
0x91: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x98]
---
Predecessors: [0xd]
Successors: [0x99, 0x9d]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 ISZERO
0x95 PUSH2 0x9d
0x98 JUMPI
---
0x92: JUMPDEST 
0x93: V37 = CALLVALUE
0x94: V38 = ISZERO V37
0x95: V39 = 0x9d
0x98: JUMPI 0x9d V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x99
[0x99:0x9c]
---
Predecessors: [0x92]
Successors: []
---
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x99: V40 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa4]
---
Predecessors: [0x92]
Successors: [0x15e]
---
0x9d JUMPDEST
0x9e PUSH2 0xa5
0xa1 PUSH2 0x15e
0xa4 JUMP
---
0x9d: JUMPDEST 
0x9e: V41 = 0xa5
0xa1: V42 = 0x15e
0xa4: JUMP 0x15e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V11, 0xa5]

================================

Block 0xa5
[0xa5:0xc0]
---
Predecessors: [0x16b, 0x27a]
Successors: []
---
0xa5 JUMPDEST
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 PUSH1 0x1
0xab PUSH1 0xa0
0xad PUSH1 0x2
0xaf EXP
0xb0 SUB
0xb1 SWAP1
0xb2 SWAP2
0xb3 AND
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 PUSH1 0x40
0xbb MLOAD
0xbc DUP1
0xbd SWAP2
0xbe SUB
0xbf SWAP1
0xc0 RETURN
---
0xa5: JUMPDEST 
0xa6: V43 = 0x40
0xa8: V44 = M[0x40]
0xa9: V45 = 0x1
0xab: V46 = 0xa0
0xad: V47 = 0x2
0xaf: V48 = EXP 0x2 0xa0
0xb0: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V50 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xb5: M[V44] = V50
0xb6: V51 = 0x20
0xb8: V52 = ADD 0x20 V44
0xb9: V53 = 0x40
0xbb: V54 = M[0x40]
0xbe: V55 = SUB V52 V54
0xc0: RETURN V54 V55
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xc1
[0xc1:0xc8]
---
Predecessors: [0x40]
Successors: [0x16e]
---
0xc1 JUMPDEST
0xc2 PUSH2 0xc9
0xc5 PUSH2 0x16e
0xc8 JUMP
---
0xc1: JUMPDEST 
0xc2: V56 = 0xc9
0xc5: V57 = 0x16e
0xc8: JUMP 0x16e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc9]
Exit stack: [V11, 0xc9]

================================

Block 0xc9
[0xc9:0xca]
---
Predecessors: [0x1f3, 0x276]
Successors: []
---
0xc9 JUMPDEST
0xca STOP
---
0xc9: JUMPDEST 
0xca: STOP 
---
Entry stack: [V11, 0x113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x113, S0]

================================

Block 0xcb
[0xcb:0xd1]
---
Predecessors: [0x4b]
Successors: [0xd2, 0xd6]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd ISZERO
0xce PUSH2 0xd6
0xd1 JUMPI
---
0xcb: JUMPDEST 
0xcc: V58 = CALLVALUE
0xcd: V59 = ISZERO V58
0xce: V60 = 0xd6
0xd1: JUMPI 0xd6 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xcb]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 REVERT
---
0xd2: V61 = 0x0
0xd5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xec]
---
Predecessors: [0xcb]
Successors: [0x1f5]
---
0xd6 JUMPDEST
0xd7 PUSH2 0xc9
0xda PUSH1 0x4
0xdc CALLDATALOAD
0xdd PUSH1 0x1
0xdf PUSH1 0xa0
0xe1 PUSH1 0x2
0xe3 EXP
0xe4 SUB
0xe5 PUSH1 0x24
0xe7 CALLDATALOAD
0xe8 AND
0xe9 PUSH2 0x1f5
0xec JUMP
---
0xd6: JUMPDEST 
0xd7: V62 = 0xc9
0xda: V63 = 0x4
0xdc: V64 = CALLDATALOAD 0x4
0xdd: V65 = 0x1
0xdf: V66 = 0xa0
0xe1: V67 = 0x2
0xe3: V68 = EXP 0x2 0xa0
0xe4: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5: V70 = 0x24
0xe7: V71 = CALLDATALOAD 0x24
0xe8: V72 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V73 = 0x1f5
0xec: JUMP 0x1f5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc9, V64, V72]
Exit stack: [V11, 0xc9, V64, V72]

================================

Block 0xed
[0xed:0xf3]
---
Predecessors: [0x56]
Successors: [0xf4, 0xf8]
---
0xed JUMPDEST
0xee CALLVALUE
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xed: JUMPDEST 
0xee: V74 = CALLVALUE
0xef: V75 = ISZERO V74
0xf0: V76 = 0xf8
0xf3: JUMPI 0xf8 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xed]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V77 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xed]
Successors: [0x27a]
---
0xf8 JUMPDEST
0xf9 PUSH2 0xa5
0xfc PUSH2 0x27a
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V78 = 0xa5
0xfc: V79 = 0x27a
0xff: JUMP 0x27a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V11, 0xa5]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x61]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V80 = CALLVALUE
0x102: V81 = ISZERO V80
0x103: V82 = 0x10b
0x106: JUMPI 0x10b V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V83 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x100]
Successors: [0x289]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x289
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V84 = 0x113
0x10f: V85 = 0x289
0x112: JUMP 0x289
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x113
[0x113:0x124]
---
Predecessors: [0x16b, 0x289, 0x293, 0x2a1]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 MLOAD
0x117 SWAP1
0x118 DUP2
0x119 MSTORE
0x11a PUSH1 0x20
0x11c ADD
0x11d PUSH1 0x40
0x11f MLOAD
0x120 DUP1
0x121 SWAP2
0x122 SUB
0x123 SWAP1
0x124 RETURN
---
0x113: JUMPDEST 
0x114: V86 = 0x40
0x116: V87 = M[0x40]
0x119: M[V87] = S0
0x11a: V88 = 0x20
0x11c: V89 = ADD 0x20 V87
0x11d: V90 = 0x40
0x11f: V91 = M[0x40]
0x122: V92 = SUB V89 V91
0x124: RETURN V91 V92
---
Entry stack: [V11, 0x113, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x113, S2, S1]

================================

Block 0x125
[0x125:0x12b]
---
Predecessors: [0x6c]
Successors: [0x12c, 0x130]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0x125: JUMPDEST 
0x126: V93 = CALLVALUE
0x127: V94 = ISZERO V93
0x128: V95 = 0x130
0x12b: JUMPI 0x130 V94
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x125]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V96 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x130
[0x130:0x137]
---
Predecessors: [0x125]
Successors: [0x293]
---
0x130 JUMPDEST
0x131 PUSH2 0x113
0x134 PUSH2 0x293
0x137 JUMP
---
0x130: JUMPDEST 
0x131: V97 = 0x113
0x134: V98 = 0x293
0x137: JUMP 0x293
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x138
[0x138:0x13e]
---
Predecessors: [0x77]
Successors: [0x13f, 0x143]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0x138: JUMPDEST 
0x139: V99 = CALLVALUE
0x13a: V100 = ISZERO V99
0x13b: V101 = 0x143
0x13e: JUMPI 0x143 V100
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0x138]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V102 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x138]
Successors: [0x2a1]
---
0x143 JUMPDEST
0x144 PUSH2 0x113
0x147 PUSH2 0x2a1
0x14a JUMP
---
0x143: JUMPDEST 
0x144: V103 = 0x113
0x147: V104 = 0x2a1
0x14a: JUMP 0x2a1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x14b
[0x14b:0x151]
---
Predecessors: [0x82]
Successors: [0x152, 0x156]
---
0x14b JUMPDEST
0x14c CALLVALUE
0x14d ISZERO
0x14e PUSH2 0x156
0x151 JUMPI
---
0x14b: JUMPDEST 
0x14c: V105 = CALLVALUE
0x14d: V106 = ISZERO V105
0x14e: V107 = 0x156
0x151: JUMPI 0x156 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x14b]
Successors: []
---
0x152 PUSH1 0x0
0x154 DUP1
0x155 REVERT
---
0x152: V108 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x156
[0x156:0x15d]
---
Predecessors: [0x14b]
Successors: [0x2a7]
---
0x156 JUMPDEST
0x157 PUSH2 0x113
0x15a PUSH2 0x2a7
0x15d JUMP
---
0x156: JUMPDEST 
0x157: V109 = 0x113
0x15a: V110 = 0x2a7
0x15d: JUMP 0x2a7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x15e
[0x15e:0x16a]
---
Predecessors: [0x9d]
Successors: [0x16b]
---
0x15e JUMPDEST
0x15f PUSH1 0x1
0x161 SLOAD
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a AND
---
0x15e: JUMPDEST 
0x15f: V111 = 0x1
0x161: V112 = S[0x1]
0x162: V113 = 0x1
0x164: V114 = 0xa0
0x166: V115 = 0x2
0x168: V116 = EXP 0x2 0xa0
0x169: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
---
Entry stack: [V11, 0xa5]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V11, 0xa5, V118]

================================

Block 0x16b
[0x16b:0x16d]
---
Predecessors: [0x15e, 0x2c1, 0x2c9]
Successors: [0xa5, 0x113]
---
0x16b JUMPDEST
0x16c SWAP1
0x16d JUMP
---
0x16b: JUMPDEST 
0x16d: JUMP {0xa5, 0x113}
---
Entry stack: [V11, {0xa5, 0x113}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x16e
[0x16e:0x17c]
---
Predecessors: [0xc1]
Successors: [0x17d, 0x1dd]
---
0x16e JUMPDEST
0x16f PUSH7 0x38d7ea4c68000
0x177 CALLVALUE
0x178 LT
0x179 PUSH2 0x1dd
0x17c JUMPI
---
0x16e: JUMPDEST 
0x16f: V119 = 0x38d7ea4c68000
0x177: V120 = CALLVALUE
0x178: V121 = LT V120 0x38d7ea4c68000
0x179: V122 = 0x1dd
0x17c: JUMPI 0x1dd V121
---
Entry stack: [V11, 0xc9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc9]

================================

Block 0x17d
[0x17d:0x1d8]
---
Predecessors: [0x16e]
Successors: [0x1d9, 0x1dd]
---
0x17d PUSH1 0x1
0x17f PUSH1 0xa0
0x181 PUSH1 0x2
0x183 EXP
0x184 SUB
0x185 CALLER
0x186 AND
0x187 PUSH1 0x0
0x189 SWAP1
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x5
0x18e PUSH1 0x20
0x190 DUP2
0x191 SWAP1
0x192 MSTORE
0x193 PUSH1 0x40
0x195 SWAP1
0x196 SWAP2
0x197 SHA3
0x198 DUP1
0x199 SLOAD
0x19a PUSH1 0xff
0x19c NOT
0x19d AND
0x19e PUSH1 0x1
0x1a0 OR
0x1a1 SWAP1
0x1a2 SSTORE
0x1a3 CALLVALUE
0x1a4 DIV
0x1a5 PUSH1 0x3
0x1a7 DUP2
0x1a8 SWAP1
0x1a9 SSTORE
0x1aa PUSH1 0x0
0x1ac SLOAD
0x1ad PUSH1 0x1
0x1af PUSH1 0xa0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 SUB
0x1b5 AND
0x1b6 SWAP1
0x1b7 DUP1
0x1b8 ISZERO
0x1b9 PUSH2 0x8fc
0x1bc MUL
0x1bd SWAP1
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 PUSH1 0x0
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 DUP4
0x1c8 SUB
0x1c9 DUP2
0x1ca DUP6
0x1cb DUP9
0x1cc DUP9
0x1cd CALL
0x1ce SWAP4
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 ISZERO
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x17d: V123 = 0x1
0x17f: V124 = 0xa0
0x181: V125 = 0x2
0x183: V126 = EXP 0x2 0xa0
0x184: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x185: V128 = CALLER
0x186: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x187: V130 = 0x0
0x18b: M[0x0] = V129
0x18c: V131 = 0x5
0x18e: V132 = 0x20
0x192: M[0x20] = 0x5
0x193: V133 = 0x40
0x197: V134 = SHA3 0x0 0x40
0x199: V135 = S[V134]
0x19a: V136 = 0xff
0x19c: V137 = NOT 0xff
0x19d: V138 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V135
0x19e: V139 = 0x1
0x1a0: V140 = OR 0x1 V138
0x1a2: S[V134] = V140
0x1a3: V141 = CALLVALUE
0x1a4: V142 = DIV V141 0x5
0x1a5: V143 = 0x3
0x1a9: S[0x3] = V142
0x1aa: V144 = 0x0
0x1ac: V145 = S[0x0]
0x1ad: V146 = 0x1
0x1af: V147 = 0xa0
0x1b1: V148 = 0x2
0x1b3: V149 = EXP 0x2 0xa0
0x1b4: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x1b8: V152 = ISZERO V142
0x1b9: V153 = 0x8fc
0x1bc: V154 = MUL 0x8fc V152
0x1be: V155 = 0x40
0x1c0: V156 = M[0x40]
0x1c1: V157 = 0x0
0x1c3: V158 = 0x40
0x1c5: V159 = M[0x40]
0x1c8: V160 = SUB V156 V159
0x1cd: V161 = CALL V154 V151 V142 V159 V160 V159 0x0
0x1d3: V162 = ISZERO V161
0x1d4: V163 = ISZERO V162
0x1d5: V164 = 0x1dd
0x1d8: JUMPI 0x1dd V163
---
Entry stack: [V11, 0xc9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc9]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x17d]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V165 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc9]

================================

Block 0x1dd
[0x1dd:0x1e4]
---
Predecessors: [0x16e, 0x17d]
Successors: [0x289]
---
0x1dd JUMPDEST
0x1de PUSH2 0x1e5
0x1e1 PUSH2 0x289
0x1e4 JUMP
---
0x1dd: JUMPDEST 
0x1de: V166 = 0x1e5
0x1e1: V167 = 0x289
0x1e4: JUMP 0x289
---
Entry stack: [V11, 0xc9]
Stack pops: 0
Stack additions: [0x1e5]
Exit stack: [V11, 0xc9, 0x1e5]

================================

Block 0x1e5
[0x1e5:0x1eb]
---
Predecessors: [0x289]
Successors: [0x1ec, 0x1f3]
---
0x1e5 JUMPDEST
0x1e6 TIMESTAMP
0x1e7 LT
0x1e8 PUSH2 0x1f3
0x1eb JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V168 = TIMESTAMP
0x1e7: V169 = LT V168 V236
0x1e8: V170 = 0x1f3
0x1eb: JUMPI 0x1f3 V169
---
Entry stack: [V11, 0x113, S2, S1, V236]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x113, S2, S1]

================================

Block 0x1ec
[0x1ec:0x1f2]
---
Predecessors: [0x1e5]
Successors: [0x2d1]
---
0x1ec PUSH2 0x1f3
0x1ef PUSH2 0x2d1
0x1f2 JUMP
---
0x1ec: V171 = 0x1f3
0x1ef: V172 = 0x2d1
0x1f2: JUMP 0x2d1
---
Entry stack: [V11, 0x113, S1, S0]
Stack pops: 0
Stack additions: [0x1f3]
Exit stack: [V11, 0x113, S1, S0, 0x1f3]

================================

Block 0x1f3
[0x1f3:0x1f4]
---
Predecessors: [0x1e5, 0x30a]
Successors: [0xc9]
---
0x1f3 JUMPDEST
0x1f4 JUMP
---
0x1f3: JUMPDEST 
0x1f4: JUMP S0
---
Entry stack: [V11, 0x113, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x113, S1]

================================

Block 0x1f5
[0x1f5:0x20b]
---
Predecessors: [0xd6]
Successors: [0x20c, 0x210]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x0
0x1f8 SLOAD
0x1f9 CALLER
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 SWAP1
0x203 DUP2
0x204 AND
0x205 SWAP2
0x206 AND
0x207 EQ
0x208 PUSH2 0x210
0x20b JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V173 = 0x0
0x1f8: V174 = S[0x0]
0x1f9: V175 = CALLER
0x1fa: V176 = 0x1
0x1fc: V177 = 0xa0
0x1fe: V178 = 0x2
0x200: V179 = EXP 0x2 0xa0
0x201: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x204: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x206: V182 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x207: V183 = EQ V182 V181
0x208: V184 = 0x210
0x20b: JUMPI 0x210 V183
---
Entry stack: [V11, 0xc9, V64, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc9, V64, V72]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x1f5]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V185 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc9, V64, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc9, V64, V72]

================================

Block 0x210
[0x210:0x231]
---
Predecessors: [0x1f5]
Successors: [0x232, 0x276]
---
0x210 JUMPDEST
0x211 PUSH1 0x1
0x213 PUSH1 0xa0
0x215 PUSH1 0x2
0x217 EXP
0x218 SUB
0x219 DUP2
0x21a AND
0x21b PUSH1 0x0
0x21d SWAP1
0x21e DUP2
0x21f MSTORE
0x220 PUSH1 0x5
0x222 PUSH1 0x20
0x224 MSTORE
0x225 PUSH1 0x40
0x227 SWAP1
0x228 SHA3
0x229 SLOAD
0x22a PUSH1 0xff
0x22c AND
0x22d ISZERO
0x22e PUSH2 0x276
0x231 JUMPI
---
0x210: JUMPDEST 
0x211: V186 = 0x1
0x213: V187 = 0xa0
0x215: V188 = 0x2
0x217: V189 = EXP 0x2 0xa0
0x218: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21a: V191 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V192 = 0x0
0x21f: M[0x0] = V191
0x220: V193 = 0x5
0x222: V194 = 0x20
0x224: M[0x20] = 0x5
0x225: V195 = 0x40
0x228: V196 = SHA3 0x0 0x40
0x229: V197 = S[V196]
0x22a: V198 = 0xff
0x22c: V199 = AND 0xff V197
0x22d: V200 = ISZERO V199
0x22e: V201 = 0x276
0x231: JUMPI 0x276 V200
---
Entry stack: [V11, 0xc9, V64, V72]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xc9, V64, V72]

================================

Block 0x232
[0x232:0x23b]
---
Predecessors: [0x210]
Successors: [0x23c, 0x243]
---
0x232 PUSH1 0x0
0x234 DUP3
0x235 GT
0x236 DUP1
0x237 ISZERO
0x238 PUSH2 0x243
0x23b JUMPI
---
0x232: V202 = 0x0
0x235: V203 = GT V64 0x0
0x237: V204 = ISZERO V203
0x238: V205 = 0x243
0x23b: JUMPI 0x243 V204
---
Entry stack: [V11, 0xc9, V64, V72]
Stack pops: 2
Stack additions: [S1, S0, V203]
Exit stack: [V11, 0xc9, V64, V72, V203]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x232]
Successors: [0x243]
---
0x23c POP
0x23d PUSH1 0x2
0x23f SLOAD
0x240 DUP3
0x241 LT
0x242 ISZERO
---
0x23d: V206 = 0x2
0x23f: V207 = S[0x2]
0x241: V208 = LT V64 V207
0x242: V209 = ISZERO V208
---
Entry stack: [V11, 0xc9, V64, V72, V203]
Stack pops: 3
Stack additions: [S2, S1, V209]
Exit stack: [V11, 0xc9, V64, V72, V209]

================================

Block 0x243
[0x243:0x248]
---
Predecessors: [0x232, 0x23c]
Successors: [0x249, 0x276]
---
0x243 JUMPDEST
0x244 ISZERO
0x245 PUSH2 0x276
0x248 JUMPI
---
0x243: JUMPDEST 
0x244: V210 = ISZERO S0
0x245: V211 = 0x276
0x248: JUMPI 0x276 V210
---
Entry stack: [V11, 0xc9, V64, V72, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc9, V64, V72]

================================

Block 0x249
[0x249:0x275]
---
Predecessors: [0x243]
Successors: [0x276]
---
0x249 PUSH1 0x1
0x24b DUP1
0x24c SLOAD
0x24d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x262 NOT
0x263 AND
0x264 PUSH1 0x1
0x266 PUSH1 0xa0
0x268 PUSH1 0x2
0x26a EXP
0x26b SUB
0x26c DUP4
0x26d AND
0x26e OR
0x26f SWAP1
0x270 SSTORE
0x271 PUSH1 0x2
0x273 DUP3
0x274 SWAP1
0x275 SSTORE
---
0x249: V212 = 0x1
0x24c: V213 = S[0x1]
0x24d: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x262: V215 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x263: V216 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V213
0x264: V217 = 0x1
0x266: V218 = 0xa0
0x268: V219 = 0x2
0x26a: V220 = EXP 0x2 0xa0
0x26b: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26d: V222 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V223 = OR V222 V216
0x270: S[0x1] = V223
0x271: V224 = 0x2
0x275: S[0x2] = V64
---
Entry stack: [V11, 0xc9, V64, V72]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xc9, V64, V72]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x210, 0x243, 0x249]
Successors: [0xc9]
---
0x276 JUMPDEST
0x277 POP
0x278 POP
0x279 JUMP
---
0x276: JUMPDEST 
0x279: JUMP 0xc9
---
Entry stack: [V11, 0xc9, V64, V72]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x27a
[0x27a:0x288]
---
Predecessors: [0xf8]
Successors: [0xa5]
---
0x27a JUMPDEST
0x27b PUSH1 0x0
0x27d SLOAD
0x27e PUSH1 0x1
0x280 PUSH1 0xa0
0x282 PUSH1 0x2
0x284 EXP
0x285 SUB
0x286 AND
0x287 DUP2
0x288 JUMP
---
0x27a: JUMPDEST 
0x27b: V225 = 0x0
0x27d: V226 = S[0x0]
0x27e: V227 = 0x1
0x280: V228 = 0xa0
0x282: V229 = 0x2
0x284: V230 = EXP 0x2 0xa0
0x285: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x286: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x288: JUMP 0xa5
---
Entry stack: [V11, 0xa5]
Stack pops: 1
Stack additions: [S0, V232]
Exit stack: [V11, 0xa5, V232]

================================

Block 0x289
[0x289:0x292]
---
Predecessors: [0x10b, 0x1dd, 0x2a7, 0x2b9]
Successors: [0x113, 0x1e5, 0x2b2, 0x2c1]
---
0x289 JUMPDEST
0x28a PUSH1 0x4
0x28c SLOAD
0x28d PUSH2 0x2a30
0x290 ADD
0x291 SWAP1
0x292 JUMP
---
0x289: JUMPDEST 
0x28a: V233 = 0x4
0x28c: V234 = S[0x4]
0x28d: V235 = 0x2a30
0x290: V236 = ADD 0x2a30 V234
0x292: JUMP {0x113, 0x1e5, 0x2b2, 0x2c1}
---
Entry stack: [V11, 0x113, S2, S1, {0x113, 0x1e5, 0x2b2, 0x2c1}]
Stack pops: 1
Stack additions: [V236]
Exit stack: [V11, 0x113, S2, S1, V236]

================================

Block 0x293
[0x293:0x2a0]
---
Predecessors: [0x130]
Successors: [0x113]
---
0x293 JUMPDEST
0x294 PUSH1 0x1
0x296 PUSH1 0xa0
0x298 PUSH1 0x2
0x29a EXP
0x29b SUB
0x29c ADDRESS
0x29d AND
0x29e BALANCE
0x29f SWAP1
0x2a0 JUMP
---
0x293: JUMPDEST 
0x294: V237 = 0x1
0x296: V238 = 0xa0
0x298: V239 = 0x2
0x29a: V240 = EXP 0x2 0xa0
0x29b: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V242 = ADDRESS
0x29d: V243 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x29e: V244 = BALANCE V243
0x2a0: JUMP 0x113
---
Entry stack: [V11, 0x113]
Stack pops: 1
Stack additions: [V244]
Exit stack: [V11, V244]

================================

Block 0x2a1
[0x2a1:0x2a6]
---
Predecessors: [0x143]
Successors: [0x113]
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x2
0x2a4 SLOAD
0x2a5 SWAP1
0x2a6 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V245 = 0x2
0x2a4: V246 = S[0x2]
0x2a6: JUMP 0x113
---
Entry stack: [V11, 0x113]
Stack pops: 1
Stack additions: [V246]
Exit stack: [V11, V246]

================================

Block 0x2a7
[0x2a7:0x2b1]
---
Predecessors: [0x156]
Successors: [0x289]
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x0
0x2aa TIMESTAMP
0x2ab PUSH2 0x2b2
0x2ae PUSH2 0x289
0x2b1 JUMP
---
0x2a7: JUMPDEST 
0x2a8: V247 = 0x0
0x2aa: V248 = TIMESTAMP
0x2ab: V249 = 0x2b2
0x2ae: V250 = 0x289
0x2b1: JUMP 0x289
---
Entry stack: [V11, 0x113]
Stack pops: 0
Stack additions: [0x0, V248, 0x2b2]
Exit stack: [V11, 0x113, 0x0, V248, 0x2b2]

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0x289]
Successors: [0x2b9, 0x2c9]
---
0x2b2 JUMPDEST
0x2b3 GT
0x2b4 ISZERO
0x2b5 PUSH2 0x2c9
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V251 = GT V236 S1
0x2b4: V252 = ISZERO V251
0x2b5: V253 = 0x2c9
0x2b8: JUMPI 0x2c9 V252
---
Entry stack: [V11, 0x113, S2, S1, V236]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x113, S2]

================================

Block 0x2b9
[0x2b9:0x2c0]
---
Predecessors: [0x2b2]
Successors: [0x289]
---
0x2b9 TIMESTAMP
0x2ba PUSH2 0x2c1
0x2bd PUSH2 0x289
0x2c0 JUMP
---
0x2b9: V254 = TIMESTAMP
0x2ba: V255 = 0x2c1
0x2bd: V256 = 0x289
0x2c0: JUMP 0x289
---
Entry stack: [V11, 0x113, S0]
Stack pops: 0
Stack additions: [V254, 0x2c1]
Exit stack: [V11, 0x113, S0, V254, 0x2c1]

================================

Block 0x2c1
[0x2c1:0x2c8]
---
Predecessors: [0x289]
Successors: [0x16b]
---
0x2c1 JUMPDEST
0x2c2 SUB
0x2c3 SWAP1
0x2c4 POP
0x2c5 PUSH2 0x16b
0x2c8 JUMP
---
0x2c1: JUMPDEST 
0x2c2: V257 = SUB V236 S1
0x2c5: V258 = 0x16b
0x2c8: JUMP 0x16b
---
Entry stack: [V11, 0x113, S2, S1, V236]
Stack pops: 3
Stack additions: [V257]
Exit stack: [V11, 0x113, V257]

================================

Block 0x2c9
[0x2c9:0x2d0]
---
Predecessors: [0x2b2]
Successors: [0x16b]
---
0x2c9 JUMPDEST
0x2ca POP
0x2cb PUSH1 0x0
0x2cd PUSH2 0x16b
0x2d0 JUMP
---
0x2c9: JUMPDEST 
0x2cb: V259 = 0x0
0x2cd: V260 = 0x16b
0x2d0: JUMP 0x16b
---
Entry stack: [V11, 0x113, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x113, 0x0]

================================

Block 0x2d1
[0x2d1:0x305]
---
Predecessors: [0x1ec]
Successors: [0x306, 0x30a]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x1
0x2d4 SLOAD
0x2d5 PUSH1 0x1
0x2d7 PUSH1 0xa0
0x2d9 PUSH1 0x2
0x2db EXP
0x2dc SUB
0x2dd SWAP1
0x2de DUP2
0x2df AND
0x2e0 SWAP1
0x2e1 ADDRESS
0x2e2 AND
0x2e3 BALANCE
0x2e4 DUP1
0x2e5 ISZERO
0x2e6 PUSH2 0x8fc
0x2e9 MUL
0x2ea SWAP1
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee PUSH1 0x0
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 DUP4
0x2f5 SUB
0x2f6 DUP2
0x2f7 DUP6
0x2f8 DUP9
0x2f9 DUP9
0x2fa CALL
0x2fb SWAP4
0x2fc POP
0x2fd POP
0x2fe POP
0x2ff POP
0x300 ISZERO
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V261 = 0x1
0x2d4: V262 = S[0x1]
0x2d5: V263 = 0x1
0x2d7: V264 = 0xa0
0x2d9: V265 = 0x2
0x2db: V266 = EXP 0x2 0xa0
0x2dc: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2df: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x2e1: V269 = ADDRESS
0x2e2: V270 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V271 = BALANCE V270
0x2e5: V272 = ISZERO V271
0x2e6: V273 = 0x8fc
0x2e9: V274 = MUL 0x8fc V272
0x2eb: V275 = 0x40
0x2ed: V276 = M[0x40]
0x2ee: V277 = 0x0
0x2f0: V278 = 0x40
0x2f2: V279 = M[0x40]
0x2f5: V280 = SUB V276 V279
0x2fa: V281 = CALL V274 V268 V271 V279 V280 V279 0x0
0x300: V282 = ISZERO V281
0x301: V283 = ISZERO V282
0x302: V284 = 0x30a
0x305: JUMPI 0x30a V283
---
Entry stack: [V11, 0x113, S2, S1, 0x1f3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x113, S2, S1, 0x1f3]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2d1]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V285 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V11, 0x113, S2, S1, 0x1f3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x113, S2, S1, 0x1f3]

================================

Block 0x30a
[0x30a:0x331]
---
Predecessors: [0x2d1]
Successors: [0x1f3]
---
0x30a JUMPDEST
0x30b TIMESTAMP
0x30c PUSH1 0x4
0x30e SSTORE
0x30f PUSH1 0x0
0x311 PUSH1 0x2
0x313 SSTORE
0x314 PUSH1 0x1
0x316 DUP1
0x317 SLOAD
0x318 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32d NOT
0x32e AND
0x32f SWAP1
0x330 SSTORE
0x331 JUMP
---
0x30a: JUMPDEST 
0x30b: V286 = TIMESTAMP
0x30c: V287 = 0x4
0x30e: S[0x4] = V286
0x30f: V288 = 0x0
0x311: V289 = 0x2
0x313: S[0x2] = 0x0
0x314: V290 = 0x1
0x317: V291 = S[0x1]
0x318: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V293 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V294 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V291
0x330: S[0x1] = V294
0x331: JUMP 0x1f3
---
Entry stack: [V11, 0x113, S2, S1, 0x1f3]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x113, S2, S1]

================================

Block 0x332
[0x332:0x362]
---
Predecessors: []
Successors: []
---
0x332 STOP
0x333 LOG1
0x334 PUSH6 0x627a7a723058
0x33b SHA3
0x33c MISSING 0xd2
0x33d MISSING 0xf
0x33e MISSING 0xea
0x33f SDIV
0x340 MISSING 0xe
0x341 SWAP6
0x342 MISSING 0xac
0x343 MISSING 0xfc
0x344 MISSING 0xd9
0x345 SWAP9
0x346 CALLVALUE
0x347 MISSING 0xd4
0x348 CREATE2
0x349 COINBASE
0x34a MISSING 0xc2
0x34b MISSING 0xb5
0x34c DUP12
0x34d MISSING 0xe5
0x34e ORIGIN
0x34f MISSING 0xc5
0x350 MISSING 0xae
0x351 SHL
0x352 MISSING 0xc0
0x353 PUSH15 0x78e0dfb245ea09d20029
---
0x332: STOP 
0x333: LOG S0 S1 S2
0x334: V295 = 0x627a7a723058
0x33b: V296 = SHA3 0x627a7a723058 S3
0x33c: MISSING 0xd2
0x33d: MISSING 0xf
0x33e: MISSING 0xea
0x33f: V297 = SDIV S0 S1
0x340: MISSING 0xe
0x342: MISSING 0xac
0x343: MISSING 0xfc
0x344: MISSING 0xd9
0x346: V298 = CALLVALUE
0x347: MISSING 0xd4
0x348: V299 = CREATE2 S0 S1 S2 S3
0x349: V300 = COINBASE
0x34a: MISSING 0xc2
0x34b: MISSING 0xb5
0x34d: MISSING 0xe5
0x34e: V301 = ORIGIN
0x34f: MISSING 0xc5
0x350: MISSING 0xae
0x351: V302 = SHL S0 S1
0x352: MISSING 0xc0
0x353: V303 = 0x78e0dfb245ea09d20029
---
Entry stack: []
Stack pops: 0
Stack additions: [V296, V297, S6, S1, S2, S3, S4, S5, S0, V298, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, V300, V299, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V301, V302, 0x78e0dfb245ea09d20029]
Exit stack: []

================================

Function 0:
Public function signature: 0x28d08142
Entry block: 0x92
Exit block: 0x113
Body: 0x92, 0x99, 0x9d, 0xa5, 0x113, 0x15e, 0x16b

Function 1:
Public function signature: 0x7037ec6f
Entry block: 0xc1
Exit block: 0x306
Body: 0xc1, 0xc9, 0x16e, 0x17d, 0x1d9, 0x1dd, 0x1e5, 0x1ec, 0x1f3, 0x2d1, 0x306, 0x30a

Function 2:
Public function signature: 0x80a37e23
Entry block: 0xcb
Exit block: 0xc9
Body: 0xc9, 0xcb, 0xd2, 0xd6, 0x1f5, 0x20c, 0x210, 0x232, 0x23c, 0x243, 0x249, 0x276

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xed
Exit block: 0xa5
Body: 0xa5, 0xed, 0xf4, 0xf8, 0x27a

Function 4:
Public function signature: 0x96fe5418
Entry block: 0x100
Exit block: 0x113
Body: 0x100, 0x107, 0x10b, 0x113

Function 5:
Public function signature: 0x9f57d16e
Entry block: 0x125
Exit block: 0x113
Body: 0x113, 0x125, 0x12c, 0x130, 0x293

Function 6:
Public function signature: 0xc5cf8c7e
Entry block: 0x138
Exit block: 0x113
Body: 0x113, 0x138, 0x13f, 0x143, 0x2a1

Function 7:
Public function signature: 0xd69a1a5f
Entry block: 0x14b
Exit block: 0x113
Body: 0xa5, 0x113, 0x14b, 0x152, 0x156, 0x16b, 0x2a7, 0x2b2, 0x2b9, 0x2c1, 0x2c9

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x8d
Body: 0x8d

