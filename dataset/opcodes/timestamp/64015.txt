Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xf4]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1f2d0065
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xf4
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1f2d0065
0x3b: V13 = EQ V11 0x1f2d0065
0x3c: V14 = 0xf4
0x3f: JUMPI 0xf4 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4c]
---
Predecessors: [0x0, 0xd]
Successors: [0x4d, 0x53]
---
0x40 JUMPDEST
0x41 PUSH1 0x0
0x43 SLOAD
0x44 CALLVALUE
0x45 LT
0x46 ISZERO
0x47 DUP1
0x48 ISZERO
0x49 PUSH2 0x53
0x4c JUMPI
---
0x40: JUMPDEST 
0x41: V15 = 0x0
0x43: V16 = S[0x0]
0x44: V17 = CALLVALUE
0x45: V18 = LT V17 V16
0x46: V19 = ISZERO V18
0x48: V20 = ISZERO V19
0x49: V21 = 0x53
0x4c: JUMPI 0x53 V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x4d
[0x4d:0x52]
---
Predecessors: [0x40]
Successors: [0x53]
---
0x4d POP
0x4e PUSH1 0x1
0x50 SLOAD
0x51 TIMESTAMP
0x52 LT
---
0x4e: V22 = 0x1
0x50: V23 = S[0x1]
0x51: V24 = TIMESTAMP
0x52: V25 = LT V24 V23
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x53
[0x53:0x59]
---
Predecessors: [0x40, 0x4d]
Successors: [0x5a, 0x5e]
---
0x53 JUMPDEST
0x54 ISZERO
0x55 ISZERO
0x56 PUSH2 0x5e
0x59 JUMPI
---
0x53: JUMPDEST 
0x54: V26 = ISZERO S0
0x55: V27 = ISZERO V26
0x56: V28 = 0x5e
0x59: JUMPI 0x5e V27
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5a
[0x5a:0x5d]
---
Predecessors: [0x53]
Successors: []
---
0x5a PUSH1 0x0
0x5c DUP1
0x5d REVERT
---
0x5a: V29 = 0x0
0x5d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5e
[0x5e:0xd4]
---
Predecessors: [0x53]
Successors: [0xd5, 0xd9]
---
0x5e JUMPDEST
0x5f PUSH1 0x2
0x61 SLOAD
0x62 PUSH1 0x40
0x64 DUP1
0x65 MLOAD
0x66 PUSH32 0x310ce49100000000000000000000000000000000000000000000000000000000
0x87 DUP2
0x88 MSTORE
0x89 CALLER
0x8a PUSH1 0x4
0x8c DUP3
0x8d ADD
0x8e MSTORE
0x8f CALLVALUE
0x90 PUSH1 0x24
0x92 DUP3
0x93 ADD
0x94 DUP2
0x95 SWAP1
0x96 MSTORE
0x97 SWAP2
0x98 MLOAD
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae SWAP1
0xaf SWAP4
0xb0 AND
0xb1 SWAP3
0xb2 PUSH4 0x310ce491
0xb7 SWAP3
0xb8 SWAP2
0xb9 PUSH1 0x44
0xbb DUP1
0xbc DUP3
0xbd ADD
0xbe SWAP3
0xbf PUSH1 0x0
0xc1 SWAP3
0xc2 SWAP1
0xc3 SWAP2
0xc4 SWAP1
0xc5 DUP3
0xc6 SWAP1
0xc7 SUB
0xc8 ADD
0xc9 DUP2
0xca DUP6
0xcb DUP9
0xcc DUP1
0xcd EXTCODESIZE
0xce ISZERO
0xcf DUP1
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0x5e: JUMPDEST 
0x5f: V30 = 0x2
0x61: V31 = S[0x2]
0x62: V32 = 0x40
0x65: V33 = M[0x40]
0x66: V34 = 0x310ce49100000000000000000000000000000000000000000000000000000000
0x88: M[V33] = 0x310ce49100000000000000000000000000000000000000000000000000000000
0x89: V35 = CALLER
0x8a: V36 = 0x4
0x8d: V37 = ADD V33 0x4
0x8e: M[V37] = V35
0x8f: V38 = CALLVALUE
0x90: V39 = 0x24
0x93: V40 = ADD V33 0x24
0x96: M[V40] = V38
0x98: V41 = M[0x40]
0x99: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V43 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0xb2: V44 = 0x310ce491
0xb9: V45 = 0x44
0xbd: V46 = ADD V33 0x44
0xbf: V47 = 0x0
0xc7: V48 = SUB V33 V41
0xc8: V49 = ADD V48 0x44
0xcd: V50 = EXTCODESIZE V43
0xce: V51 = ISZERO V50
0xd0: V52 = ISZERO V51
0xd1: V53 = 0xd9
0xd4: JUMPI 0xd9 V52
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43, 0x310ce491, V38, V46, 0x0, V41, V49, V41, V38, V43, V51]
Exit stack: [V11, V43, 0x310ce491, V38, V46, 0x0, V41, V49, V41, V38, V43, V51]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0x5e]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V54 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11, V43, 0x310ce491, V38, V46, 0x0, V41, V49, V41, V38, V43, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0x310ce491, V38, V46, 0x0, V41, V49, V41, V38, V43, V51]

================================

Block 0xd9
[0xd9:0xe3]
---
Predecessors: [0x5e]
Successors: [0xe4, 0xed]
---
0xd9 JUMPDEST
0xda POP
0xdb GAS
0xdc CALL
0xdd ISZERO
0xde DUP1
0xdf ISZERO
0xe0 PUSH2 0xed
0xe3 JUMPI
---
0xd9: JUMPDEST 
0xdb: V55 = GAS
0xdc: V56 = CALL V55 V43 V38 V41 V49 V41 0x0
0xdd: V57 = ISZERO V56
0xdf: V58 = ISZERO V57
0xe0: V59 = 0xed
0xe3: JUMPI 0xed V58
---
Entry stack: [V11, V43, 0x310ce491, V38, V46, 0x0, V41, V49, V41, V38, V43, V51]
Stack pops: 7
Stack additions: [V57]
Exit stack: [V11, V43, 0x310ce491, V38, V46, V57]

================================

Block 0xe4
[0xe4:0xec]
---
Predecessors: [0xd9]
Successors: []
---
0xe4 RETURNDATASIZE
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 RETURNDATACOPY
0xe9 RETURNDATASIZE
0xea PUSH1 0x0
0xec REVERT
---
0xe4: V60 = RETURNDATASIZE
0xe5: V61 = 0x0
0xe8: RETURNDATACOPY 0x0 0x0 V60
0xe9: V62 = RETURNDATASIZE
0xea: V63 = 0x0
0xec: REVERT 0x0 V62
---
Entry stack: [V11, V43, 0x310ce491, V38, V46, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0x310ce491, V38, V46, V57]

================================

Block 0xed
[0xed:0xf3]
---
Predecessors: [0xd9]
Successors: []
---
0xed JUMPDEST
0xee POP
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 STOP
---
0xed: JUMPDEST 
0xf3: STOP 
---
Entry stack: [V11, V43, 0x310ce491, V38, V46, V57]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xf4
[0xf4:0xfb]
---
Predecessors: [0xd]
Successors: [0xfc, 0x100]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 DUP1
0xf7 ISZERO
0xf8 PUSH2 0x100
0xfb JUMPI
---
0xf4: JUMPDEST 
0xf5: V64 = CALLVALUE
0xf7: V65 = ISZERO V64
0xf8: V66 = 0x100
0xfb: JUMPI 0x100 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0xfc
[0xfc:0xff]
---
Predecessors: [0xf4]
Successors: []
---
0xfc PUSH1 0x0
0xfe DUP1
0xff REVERT
---
0xfc: V67 = 0x0
0xff: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0x100
[0x100:0x108]
---
Predecessors: [0xf4]
Successors: [0x132]
---
0x100 JUMPDEST
0x101 POP
0x102 PUSH2 0x109
0x105 PUSH2 0x132
0x108 JUMP
---
0x100: JUMPDEST 
0x102: V68 = 0x109
0x105: V69 = 0x132
0x108: JUMP 0x132
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x109]
Exit stack: [V11, 0x109]

================================

Block 0x109
[0x109:0x131]
---
Predecessors: [0x132]
Successors: []
---
0x109 JUMPDEST
0x10a PUSH1 0x40
0x10c DUP1
0x10d MLOAD
0x10e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123 SWAP1
0x124 SWAP3
0x125 AND
0x126 DUP3
0x127 MSTORE
0x128 MLOAD
0x129 SWAP1
0x12a DUP2
0x12b SWAP1
0x12c SUB
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP1
0x131 RETURN
---
0x109: JUMPDEST 
0x10a: V70 = 0x40
0x10d: V71 = M[0x40]
0x10e: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x125: V73 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x127: M[V71] = V73
0x128: V74 = M[0x40]
0x12c: V75 = SUB V71 V74
0x12d: V76 = 0x20
0x12f: V77 = ADD 0x20 V75
0x131: RETURN V74 V77
---
Entry stack: [V11, 0x109, V81]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x109]

================================

Block 0x132
[0x132:0x14d]
---
Predecessors: [0x100]
Successors: [0x109]
---
0x132 JUMPDEST
0x133 PUSH1 0x2
0x135 SLOAD
0x136 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14b AND
0x14c DUP2
0x14d JUMP
---
0x132: JUMPDEST 
0x133: V78 = 0x2
0x135: V79 = S[0x2]
0x136: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x14d: JUMP 0x109
---
Entry stack: [V11, 0x109]
Stack pops: 1
Stack additions: [S0, V81]
Exit stack: [V11, 0x109, V81]

================================

Block 0x14e
[0x14e:0x17c]
---
Predecessors: []
Successors: []
---
0x14e STOP
0x14f LOG1
0x150 PUSH6 0x627a7a723058
0x157 SHA3
0x158 MISSING 0xc7
0x159 PUSH8 0x7ff7e11662634307
0x162 MISSING 0xde
0x163 MISSING 0x4a
0x164 PUSH24 0x1b6fee3939f275a7f8aab9c1c9bdc3d8da427c0029
---
0x14e: STOP 
0x14f: LOG S0 S1 S2
0x150: V82 = 0x627a7a723058
0x157: V83 = SHA3 0x627a7a723058 S3
0x158: MISSING 0xc7
0x159: V84 = 0x7ff7e11662634307
0x162: MISSING 0xde
0x163: MISSING 0x4a
0x164: V85 = 0x1b6fee3939f275a7f8aab9c1c9bdc3d8da427c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V83, 0x7ff7e11662634307, 0x1b6fee3939f275a7f8aab9c1c9bdc3d8da427c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f2d0065
Entry block: 0xf4
Exit block: 0x109
Body: 0xf4, 0xfc, 0x100, 0x109, 0x132

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0xe4
Body: 0x40, 0x4d, 0x53, 0x5a, 0x5e, 0xd5, 0xd9, 0xe4, 0xed

