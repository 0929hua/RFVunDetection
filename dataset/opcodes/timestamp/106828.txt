args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/7/106828.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x59]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x64edfbf0
0x3c EQ
0x3d PUSH2 0x59
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x64edfbf0
0x3c: V13 = EQ 0x64edfbf0 V11
0x3d: V14 = 0x59
0x40: JUMPI 0x59 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x63]
---
0x41 DUP1
0x42 PUSH4 0x6c40b19a
0x47 EQ
0x48 PUSH2 0x63
0x4b JUMPI
---
0x42: V15 = 0x6c40b19a
0x47: V16 = EQ 0x6c40b19a V11
0x48: V17 = 0x63
0x4b: JUMPI 0x63 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x7a]
---
0x4c DUP1
0x4d PUSH4 0xe9fad8ee
0x52 EQ
0x53 PUSH2 0x7a
0x56 JUMPI
---
0x4d: V18 = 0xe9fad8ee
0x52: V19 = EQ 0xe9fad8ee V11
0x53: V20 = 0x7a
0x56: JUMPI 0x7a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x58]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 STOP
---
0x57: JUMPDEST 
0x58: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0x60]
---
Predecessors: [0xd]
Successors: [0x91]
---
0x59 JUMPDEST
0x5a PUSH2 0x61
0x5d PUSH2 0x91
0x60 JUMP
---
0x59: JUMPDEST 
0x5a: V21 = 0x61
0x5d: V22 = 0x91
0x60: JUMP 0x91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x296]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0x41]
Successors: [0x6b, 0x6f]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 DUP1
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x63: JUMPDEST 
0x64: V23 = CALLVALUE
0x66: V24 = ISZERO V23
0x67: V25 = 0x6f
0x6a: JUMPI 0x6f V24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V23]
Exit stack: [V11, V23]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x63]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V26 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V23]

================================

Block 0x6f
[0x6f:0x77]
---
Predecessors: [0x63]
Successors: [0x2ae]
---
0x6f JUMPDEST
0x70 POP
0x71 PUSH2 0x78
0x74 PUSH2 0x2ae
0x77 JUMP
---
0x6f: JUMPDEST 
0x71: V27 = 0x78
0x74: V28 = 0x2ae
0x77: JUMP 0x2ae
---
Entry stack: [V11, V23]
Stack pops: 1
Stack additions: [0x78]
Exit stack: [V11, 0x78]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x3cb]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x81]
---
Predecessors: [0x4c]
Successors: [0x82, 0x86]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c DUP1
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x7a: JUMPDEST 
0x7b: V29 = CALLVALUE
0x7d: V30 = ISZERO V29
0x7e: V31 = 0x86
0x81: JUMPI 0x86 V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V29]
Exit stack: [V11, V29]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x7a]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V32 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V11, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V29]

================================

Block 0x86
[0x86:0x8e]
---
Predecessors: [0x7a]
Successors: [0x3ce]
---
0x86 JUMPDEST
0x87 POP
0x88 PUSH2 0x8f
0x8b PUSH2 0x3ce
0x8e JUMP
---
0x86: JUMPDEST 
0x88: V33 = 0x8f
0x8b: V34 = 0x3ce
0x8e: JUMP 0x3ce
---
Entry stack: [V11, V29]
Stack pops: 1
Stack additions: [0x8f]
Exit stack: [V11, 0x8f]

================================

Block 0x8f
[0x8f:0x90]
---
Predecessors: [0x4ea]
Successors: []
---
0x8f JUMPDEST
0x90 STOP
---
0x8f: JUMPDEST 
0x90: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x91
[0x91:0xa5]
---
Predecessors: [0x59]
Successors: [0xa6, 0xaa]
---
0x91 JUMPDEST
0x92 PUSH1 0x0
0x94 DUP1
0x95 PUSH1 0x0
0x97 DUP1
0x98 PUSH4 0x5b087950
0x9d TIMESTAMP
0x9e LT
0x9f ISZERO
0xa0 ISZERO
0xa1 ISZERO
0xa2 PUSH2 0xaa
0xa5 JUMPI
---
0x91: JUMPDEST 
0x92: V35 = 0x0
0x95: V36 = 0x0
0x98: V37 = 0x5b087950
0x9d: V38 = TIMESTAMP
0x9e: V39 = LT V38 0x5b087950
0x9f: V40 = ISZERO V39
0xa0: V41 = ISZERO V40
0xa1: V42 = ISZERO V41
0xa2: V43 = 0xaa
0xa5: JUMPI 0xaa V42
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x61, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xa6
[0xa6:0xa9]
---
Predecessors: [0x91]
Successors: []
---
0xa6 PUSH1 0x0
0xa8 DUP1
0xa9 REVERT
---
0xa6: V44 = 0x0
0xa9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xaa
[0xaa:0xee]
---
Predecessors: [0x91]
Successors: [0xef, 0xf3]
---
0xaa JUMPDEST
0xab PUSH1 0x2
0xad SLOAD
0xae PUSH1 0x0
0xb0 DUP1
0xb1 SWAP1
0xb2 SLOAD
0xb3 SWAP1
0xb4 PUSH2 0x100
0xb7 EXP
0xb8 SWAP1
0xb9 DIV
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5 AND
0xe6 BALANCE
0xe7 GT
0xe8 ISZERO
0xe9 ISZERO
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xaa: JUMPDEST 
0xab: V45 = 0x2
0xad: V46 = S[0x2]
0xae: V47 = 0x0
0xb2: V48 = S[0x0]
0xb4: V49 = 0x100
0xb7: V50 = EXP 0x100 0x0
0xb9: V51 = DIV V48 0x1
0xba: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xd0: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xe6: V56 = BALANCE V55
0xe7: V57 = GT V56 V46
0xe8: V58 = ISZERO V57
0xe9: V59 = ISZERO V58
0xea: V60 = ISZERO V59
0xeb: V61 = 0xf3
0xee: JUMPI 0xf3 V60
---
Entry stack: [V11, 0x61, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xaa]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V62 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xf3
[0xf3:0x140]
---
Predecessors: [0xaa]
Successors: [0x141, 0x191]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 SWAP4
0xf6 POP
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa SWAP1
0xfb SLOAD
0xfc SWAP1
0xfd PUSH2 0x100
0x100 EXP
0x101 SWAP1
0x102 DIV
0x103 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x118 AND
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f BALANCE
0x130 SWAP3
0x131 POP
0x132 DUP3
0x133 PUSH1 0x2
0x135 SLOAD
0x136 SUB
0x137 SWAP2
0x138 POP
0x139 DUP2
0x13a DUP5
0x13b GT
0x13c ISZERO
0x13d PUSH2 0x191
0x140 JUMPI
---
0xf3: JUMPDEST 
0xf4: V63 = CALLVALUE
0xf7: V64 = 0x0
0xfb: V65 = S[0x0]
0xfd: V66 = 0x100
0x100: V67 = EXP 0x100 0x0
0x102: V68 = DIV V65 0x1
0x103: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x118: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x119: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x12f: V73 = BALANCE V72
0x133: V74 = 0x2
0x135: V75 = S[0x2]
0x136: V76 = SUB V75 V73
0x13b: V77 = GT V63 V76
0x13c: V78 = ISZERO V77
0x13d: V79 = 0x191
0x140: JUMPI 0x191 V78
---
Entry stack: [V11, 0x61, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V63, V73, V76, S0]
Exit stack: [V11, 0x61, V63, V73, V76, 0x0]

================================

Block 0x141
[0x141:0x181]
---
Predecessors: [0xf3]
Successors: [0x182, 0x18b]
---
0x141 DUP2
0x142 DUP5
0x143 SUB
0x144 SWAP1
0x145 POP
0x146 CALLER
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d PUSH2 0x8fc
0x160 DUP3
0x161 SWAP1
0x162 DUP2
0x163 ISZERO
0x164 MUL
0x165 SWAP1
0x166 PUSH1 0x40
0x168 MLOAD
0x169 PUSH1 0x0
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f DUP4
0x170 SUB
0x171 DUP2
0x172 DUP6
0x173 DUP9
0x174 DUP9
0x175 CALL
0x176 SWAP4
0x177 POP
0x178 POP
0x179 POP
0x17a POP
0x17b ISZERO
0x17c DUP1
0x17d ISZERO
0x17e PUSH2 0x18b
0x181 JUMPI
---
0x143: V80 = SUB V63 V76
0x146: V81 = CALLER
0x147: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x15d: V84 = 0x8fc
0x163: V85 = ISZERO V80
0x164: V86 = MUL V85 0x8fc
0x166: V87 = 0x40
0x168: V88 = M[0x40]
0x169: V89 = 0x0
0x16b: V90 = 0x40
0x16d: V91 = M[0x40]
0x170: V92 = SUB V88 V91
0x175: V93 = CALL V86 V83 V80 V91 V92 V91 0x0
0x17b: V94 = ISZERO V93
0x17d: V95 = ISZERO V94
0x17e: V96 = 0x18b
0x181: JUMPI 0x18b V95
---
Entry stack: [V11, 0x61, V63, V73, V76, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V80, V94]
Exit stack: [V11, 0x61, V63, V73, V76, V80, V94]

================================

Block 0x182
[0x182:0x18a]
---
Predecessors: [0x141]
Successors: []
---
0x182 RETURNDATASIZE
0x183 PUSH1 0x0
0x185 DUP1
0x186 RETURNDATACOPY
0x187 RETURNDATASIZE
0x188 PUSH1 0x0
0x18a REVERT
---
0x182: V97 = RETURNDATASIZE
0x183: V98 = 0x0
0x186: RETURNDATACOPY 0x0 0x0 V97
0x187: V99 = RETURNDATASIZE
0x188: V100 = 0x0
0x18a: REVERT 0x0 V99
---
Entry stack: [V11, 0x61, V63, V73, V76, V80, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V63, V73, V76, V80, V94]

================================

Block 0x18b
[0x18b:0x190]
---
Predecessors: [0x141]
Successors: [0x195]
---
0x18b JUMPDEST
0x18c POP
0x18d PUSH2 0x195
0x190 JUMP
---
0x18b: JUMPDEST 
0x18d: V101 = 0x195
0x190: JUMP 0x195
---
Entry stack: [V11, 0x61, V63, V73, V76, V80, V94]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61, V63, V73, V76, V80]

================================

Block 0x191
[0x191:0x194]
---
Predecessors: [0xf3]
Successors: [0x195]
---
0x191 JUMPDEST
0x192 DUP4
0x193 SWAP2
0x194 POP
---
0x191: JUMPDEST 
---
Entry stack: [V11, 0x61, V63, V73, V76, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0]
Exit stack: [V11, 0x61, V63, V73, V63, 0x0]

================================

Block 0x195
[0x195:0x265]
---
Predecessors: [0x18b, 0x191]
Successors: [0x266, 0x26a]
---
0x195 JUMPDEST
0x196 PUSH1 0x0
0x198 DUP1
0x199 SWAP1
0x19a SLOAD
0x19b SWAP1
0x19c PUSH2 0x100
0x19f EXP
0x1a0 SWAP1
0x1a1 DIV
0x1a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b7 AND
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd AND
0x1ce PUSH4 0xf088d547
0x1d3 DUP4
0x1d4 PUSH3 0x3a980
0x1d8 SWAP1
0x1d9 PUSH20 0xe425300203775a73d336deadf9a789291735a582
0x1ee PUSH1 0x40
0x1f0 MLOAD
0x1f1 DUP5
0x1f2 PUSH4 0xffffffff
0x1f7 AND
0x1f8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x216 MUL
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x4
0x21b ADD
0x21c DUP1
0x21d DUP3
0x21e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x233 AND
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a DUP2
0x24b MSTORE
0x24c PUSH1 0x20
0x24e ADD
0x24f SWAP2
0x250 POP
0x251 POP
0x252 PUSH1 0x20
0x254 PUSH1 0x40
0x256 MLOAD
0x257 DUP1
0x258 DUP4
0x259 SUB
0x25a DUP2
0x25b DUP6
0x25c DUP10
0x25d DUP1
0x25e EXTCODESIZE
0x25f ISZERO
0x260 DUP1
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x195: JUMPDEST 
0x196: V102 = 0x0
0x19a: V103 = S[0x0]
0x19c: V104 = 0x100
0x19f: V105 = EXP 0x100 0x0
0x1a1: V106 = DIV V103 0x1
0x1a2: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b7: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1b8: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1ce: V111 = 0xf088d547
0x1d4: V112 = 0x3a980
0x1d9: V113 = 0xe425300203775a73d336deadf9a789291735a582
0x1ee: V114 = 0x40
0x1f0: V115 = M[0x40]
0x1f2: V116 = 0xffffffff
0x1f7: V117 = AND 0xffffffff 0xf088d547
0x1f8: V118 = 0x100000000000000000000000000000000000000000000000000000000
0x216: V119 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf088d547
0x218: M[V115] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x219: V120 = 0x4
0x21b: V121 = ADD 0x4 V115
0x21e: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x233: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xe425300203775a73d336deadf9a789291735a582
0x234: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xe425300203775a73d336deadf9a789291735a582
0x24b: M[V121] = 0xe425300203775a73d336deadf9a789291735a582
0x24c: V126 = 0x20
0x24e: V127 = ADD 0x20 V121
0x252: V128 = 0x20
0x254: V129 = 0x40
0x256: V130 = M[0x40]
0x259: V131 = SUB V127 V130
0x25e: V132 = EXTCODESIZE V110
0x25f: V133 = ISZERO V132
0x261: V134 = ISZERO V133
0x262: V135 = 0x26a
0x265: JUMPI 0x26a V134
---
Entry stack: [V11, 0x61, V63, V73, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V110, 0xf088d547, 0x3a980, S1, V127, 0x20, V130, V131, V130, S1, V110, V133]
Exit stack: [V11, 0x61, V63, V73, S1, S0, V110, 0xf088d547, 0x3a980, S1, V127, 0x20, V130, V131, V130, S1, V110, V133]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x195]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V136 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V63, V73, S13, S12, V110, 0xf088d547, 0x3a980, S8, V127, 0x20, V130, V131, V130, S2, V110, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V63, V73, S13, S12, V110, 0xf088d547, 0x3a980, S8, V127, 0x20, V130, V131, V130, S2, V110, V133]

================================

Block 0x26a
[0x26a:0x274]
---
Predecessors: [0x195]
Successors: [0x275, 0x27e]
---
0x26a JUMPDEST
0x26b POP
0x26c DUP9
0x26d CALL
0x26e ISZERO
0x26f DUP1
0x270 ISZERO
0x271 PUSH2 0x27e
0x274 JUMPI
---
0x26a: JUMPDEST 
0x26d: V137 = CALL 0x3a980 V110 S2 V130 V131 V130 0x20
0x26e: V138 = ISZERO V137
0x270: V139 = ISZERO V138
0x271: V140 = 0x27e
0x274: JUMPI 0x27e V139
---
Entry stack: [V11, 0x61, V63, V73, S13, S12, V110, 0xf088d547, 0x3a980, S8, V127, 0x20, V130, V131, V130, S2, V110, V133]
Stack pops: 10
Stack additions: [S9, S8, S7, V138]
Exit stack: [V11, 0x61, V63, V73, S13, S12, V110, 0xf088d547, 0x3a980, S8, V127, V138]

================================

Block 0x275
[0x275:0x27d]
---
Predecessors: [0x26a]
Successors: []
---
0x275 RETURNDATASIZE
0x276 PUSH1 0x0
0x278 DUP1
0x279 RETURNDATACOPY
0x27a RETURNDATASIZE
0x27b PUSH1 0x0
0x27d REVERT
---
0x275: V141 = RETURNDATASIZE
0x276: V142 = 0x0
0x279: RETURNDATACOPY 0x0 0x0 V141
0x27a: V143 = RETURNDATASIZE
0x27b: V144 = 0x0
0x27d: REVERT 0x0 V143
---
Entry stack: [V11, 0x61, V63, V73, S7, S6, V110, 0xf088d547, 0x3a980, S2, V127, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V63, V73, S7, S6, V110, 0xf088d547, 0x3a980, S2, V127, V138]

================================

Block 0x27e
[0x27e:0x291]
---
Predecessors: [0x26a]
Successors: [0x292, 0x296]
---
0x27e JUMPDEST
0x27f POP
0x280 POP
0x281 POP
0x282 POP
0x283 POP
0x284 POP
0x285 PUSH1 0x40
0x287 MLOAD
0x288 RETURNDATASIZE
0x289 PUSH1 0x20
0x28b DUP2
0x28c LT
0x28d ISZERO
0x28e PUSH2 0x296
0x291 JUMPI
---
0x27e: JUMPDEST 
0x285: V145 = 0x40
0x287: V146 = M[0x40]
0x288: V147 = RETURNDATASIZE
0x289: V148 = 0x20
0x28c: V149 = LT V147 0x20
0x28d: V150 = ISZERO V149
0x28e: V151 = 0x296
0x291: JUMPI 0x296 V150
---
Entry stack: [V11, 0x61, V63, V73, S7, S6, V110, 0xf088d547, 0x3a980, S2, V127, V138]
Stack pops: 6
Stack additions: [V146, V147]
Exit stack: [V11, 0x61, V63, V73, S7, S6, V146, V147]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x27e]
Successors: []
---
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x292: V152 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V63, V73, S3, S2, V146, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V63, V73, S3, S2, V146, V147]

================================

Block 0x296
[0x296:0x2ad]
---
Predecessors: [0x27e]
Successors: [0x61]
---
0x296 JUMPDEST
0x297 DUP2
0x298 ADD
0x299 SWAP1
0x29a DUP1
0x29b DUP1
0x29c MLOAD
0x29d SWAP1
0x29e PUSH1 0x20
0x2a0 ADD
0x2a1 SWAP1
0x2a2 SWAP3
0x2a3 SWAP2
0x2a4 SWAP1
0x2a5 POP
0x2a6 POP
0x2a7 POP
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad JUMP
---
0x296: JUMPDEST 
0x298: V153 = ADD V146 V147
0x29c: V154 = M[V146]
0x29e: V155 = 0x20
0x2a0: V156 = ADD 0x20 V146
0x2ad: JUMP 0x61
---
Entry stack: [V11, 0x61, V63, V73, S3, S2, V146, V147]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ae
[0x2ae:0x32f]
---
Predecessors: [0x6f]
Successors: [0x330, 0x334]
---
0x2ae JUMPDEST
0x2af PUSH1 0x1
0x2b1 PUSH1 0x0
0x2b3 SWAP1
0x2b4 SLOAD
0x2b5 SWAP1
0x2b6 PUSH2 0x100
0x2b9 EXP
0x2ba SWAP1
0x2bb DIV
0x2bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d1 AND
0x2d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e7 AND
0x2e8 PUSH4 0x74c90d0d
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP2
0x2f1 PUSH4 0xffffffff
0x2f6 AND
0x2f7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x315 MUL
0x316 DUP2
0x317 MSTORE
0x318 PUSH1 0x4
0x31a ADD
0x31b PUSH1 0x0
0x31d PUSH1 0x40
0x31f MLOAD
0x320 DUP1
0x321 DUP4
0x322 SUB
0x323 DUP2
0x324 PUSH1 0x0
0x326 DUP8
0x327 DUP1
0x328 EXTCODESIZE
0x329 ISZERO
0x32a DUP1
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x2ae: JUMPDEST 
0x2af: V157 = 0x1
0x2b1: V158 = 0x0
0x2b4: V159 = S[0x1]
0x2b6: V160 = 0x100
0x2b9: V161 = EXP 0x100 0x0
0x2bb: V162 = DIV V159 0x1
0x2bc: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x2d2: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2e8: V167 = 0x74c90d0d
0x2ed: V168 = 0x40
0x2ef: V169 = M[0x40]
0x2f1: V170 = 0xffffffff
0x2f6: V171 = AND 0xffffffff 0x74c90d0d
0x2f7: V172 = 0x100000000000000000000000000000000000000000000000000000000
0x315: V173 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x74c90d0d
0x317: M[V169] = 0x74c90d0d00000000000000000000000000000000000000000000000000000000
0x318: V174 = 0x4
0x31a: V175 = ADD 0x4 V169
0x31b: V176 = 0x0
0x31d: V177 = 0x40
0x31f: V178 = M[0x40]
0x322: V179 = SUB V175 V178
0x324: V180 = 0x0
0x328: V181 = EXTCODESIZE V166
0x329: V182 = ISZERO V181
0x32b: V183 = ISZERO V182
0x32c: V184 = 0x334
0x32f: JUMPI 0x334 V183
---
Entry stack: [V11, 0x78]
Stack pops: 0
Stack additions: [V166, 0x74c90d0d, V175, 0x0, V178, V179, V178, 0x0, V166, V182]
Exit stack: [V11, 0x78, V166, 0x74c90d0d, V175, 0x0, V178, V179, V178, 0x0, V166, V182]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x2ae]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V185 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V11, 0x78, V166, 0x74c90d0d, V175, 0x0, V178, V179, V178, 0x0, V166, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x78, V166, 0x74c90d0d, V175, 0x0, V178, V179, V178, 0x0, V166, V182]

================================

Block 0x334
[0x334:0x33e]
---
Predecessors: [0x2ae]
Successors: [0x33f, 0x348]
---
0x334 JUMPDEST
0x335 POP
0x336 GAS
0x337 CALL
0x338 ISZERO
0x339 DUP1
0x33a ISZERO
0x33b PUSH2 0x348
0x33e JUMPI
---
0x334: JUMPDEST 
0x336: V186 = GAS
0x337: V187 = CALL V186 V166 0x0 V178 V179 V178 0x0
0x338: V188 = ISZERO V187
0x33a: V189 = ISZERO V188
0x33b: V190 = 0x348
0x33e: JUMPI 0x348 V189
---
Entry stack: [V11, 0x78, V166, 0x74c90d0d, V175, 0x0, V178, V179, V178, 0x0, V166, V182]
Stack pops: 7
Stack additions: [V188]
Exit stack: [V11, 0x78, V166, 0x74c90d0d, V175, V188]

================================

Block 0x33f
[0x33f:0x347]
---
Predecessors: [0x334]
Successors: []
---
0x33f RETURNDATASIZE
0x340 PUSH1 0x0
0x342 DUP1
0x343 RETURNDATACOPY
0x344 RETURNDATASIZE
0x345 PUSH1 0x0
0x347 REVERT
---
0x33f: V191 = RETURNDATASIZE
0x340: V192 = 0x0
0x343: RETURNDATACOPY 0x0 0x0 V191
0x344: V193 = RETURNDATASIZE
0x345: V194 = 0x0
0x347: REVERT 0x0 V193
---
Entry stack: [V11, 0x78, V166, 0x74c90d0d, V175, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x78, V166, 0x74c90d0d, V175, V188]

================================

Block 0x348
[0x348:0x3c1]
---
Predecessors: [0x334]
Successors: [0x3c2, 0x3cb]
---
0x348 JUMPDEST
0x349 POP
0x34a POP
0x34b POP
0x34c POP
0x34d PUSH1 0x3
0x34f PUSH1 0x0
0x351 SWAP1
0x352 SLOAD
0x353 SWAP1
0x354 PUSH2 0x100
0x357 EXP
0x358 SWAP1
0x359 DIV
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x385 AND
0x386 PUSH2 0x8fc
0x389 ADDRESS
0x38a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39f AND
0x3a0 BALANCE
0x3a1 SWAP1
0x3a2 DUP2
0x3a3 ISZERO
0x3a4 MUL
0x3a5 SWAP1
0x3a6 PUSH1 0x40
0x3a8 MLOAD
0x3a9 PUSH1 0x0
0x3ab PUSH1 0x40
0x3ad MLOAD
0x3ae DUP1
0x3af DUP4
0x3b0 SUB
0x3b1 DUP2
0x3b2 DUP6
0x3b3 DUP9
0x3b4 DUP9
0x3b5 CALL
0x3b6 SWAP4
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb ISZERO
0x3bc DUP1
0x3bd ISZERO
0x3be PUSH2 0x3cb
0x3c1 JUMPI
---
0x348: JUMPDEST 
0x34d: V195 = 0x3
0x34f: V196 = 0x0
0x352: V197 = S[0x3]
0x354: V198 = 0x100
0x357: V199 = EXP 0x100 0x0
0x359: V200 = DIV V197 0x1
0x35a: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x370: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x385: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x386: V205 = 0x8fc
0x389: V206 = ADDRESS
0x38a: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x3a0: V209 = BALANCE V208
0x3a3: V210 = ISZERO V209
0x3a4: V211 = MUL V210 0x8fc
0x3a6: V212 = 0x40
0x3a8: V213 = M[0x40]
0x3a9: V214 = 0x0
0x3ab: V215 = 0x40
0x3ad: V216 = M[0x40]
0x3b0: V217 = SUB V213 V216
0x3b5: V218 = CALL V211 V204 V209 V216 V217 V216 0x0
0x3bb: V219 = ISZERO V218
0x3bd: V220 = ISZERO V219
0x3be: V221 = 0x3cb
0x3c1: JUMPI 0x3cb V220
---
Entry stack: [V11, 0x78, V166, 0x74c90d0d, V175, V188]
Stack pops: 4
Stack additions: [V219]
Exit stack: [V11, 0x78, V219]

================================

Block 0x3c2
[0x3c2:0x3ca]
---
Predecessors: [0x348]
Successors: []
---
0x3c2 RETURNDATASIZE
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 RETURNDATACOPY
0x3c7 RETURNDATASIZE
0x3c8 PUSH1 0x0
0x3ca REVERT
---
0x3c2: V222 = RETURNDATASIZE
0x3c3: V223 = 0x0
0x3c6: RETURNDATACOPY 0x0 0x0 V222
0x3c7: V224 = RETURNDATASIZE
0x3c8: V225 = 0x0
0x3ca: REVERT 0x0 V224
---
Entry stack: [V11, 0x78, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x78, V219]

================================

Block 0x3cb
[0x3cb:0x3cd]
---
Predecessors: [0x348]
Successors: [0x78]
---
0x3cb JUMPDEST
0x3cc POP
0x3cd JUMP
---
0x3cb: JUMPDEST 
0x3cd: JUMP 0x78
---
Entry stack: [V11, 0x78, V219]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ce
[0x3ce:0x44e]
---
Predecessors: [0x86]
Successors: [0x44f, 0x453]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x0
0x3d1 DUP1
0x3d2 SWAP1
0x3d3 SLOAD
0x3d4 SWAP1
0x3d5 PUSH2 0x100
0x3d8 EXP
0x3d9 SWAP1
0x3da DIV
0x3db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f0 AND
0x3f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x406 AND
0x407 PUSH4 0xe9fad8ee
0x40c PUSH1 0x40
0x40e MLOAD
0x40f DUP2
0x410 PUSH4 0xffffffff
0x415 AND
0x416 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x434 MUL
0x435 DUP2
0x436 MSTORE
0x437 PUSH1 0x4
0x439 ADD
0x43a PUSH1 0x0
0x43c PUSH1 0x40
0x43e MLOAD
0x43f DUP1
0x440 DUP4
0x441 SUB
0x442 DUP2
0x443 PUSH1 0x0
0x445 DUP8
0x446 DUP1
0x447 EXTCODESIZE
0x448 ISZERO
0x449 DUP1
0x44a ISZERO
0x44b PUSH2 0x453
0x44e JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V226 = 0x0
0x3d3: V227 = S[0x0]
0x3d5: V228 = 0x100
0x3d8: V229 = EXP 0x100 0x0
0x3da: V230 = DIV V227 0x1
0x3db: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x3f1: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x406: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x407: V235 = 0xe9fad8ee
0x40c: V236 = 0x40
0x40e: V237 = M[0x40]
0x410: V238 = 0xffffffff
0x415: V239 = AND 0xffffffff 0xe9fad8ee
0x416: V240 = 0x100000000000000000000000000000000000000000000000000000000
0x434: V241 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe9fad8ee
0x436: M[V237] = 0xe9fad8ee00000000000000000000000000000000000000000000000000000000
0x437: V242 = 0x4
0x439: V243 = ADD 0x4 V237
0x43a: V244 = 0x0
0x43c: V245 = 0x40
0x43e: V246 = M[0x40]
0x441: V247 = SUB V243 V246
0x443: V248 = 0x0
0x447: V249 = EXTCODESIZE V234
0x448: V250 = ISZERO V249
0x44a: V251 = ISZERO V250
0x44b: V252 = 0x453
0x44e: JUMPI 0x453 V251
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: [V234, 0xe9fad8ee, V243, 0x0, V246, V247, V246, 0x0, V234, V250]
Exit stack: [V11, 0x8f, V234, 0xe9fad8ee, V243, 0x0, V246, V247, V246, 0x0, V234, V250]

================================

Block 0x44f
[0x44f:0x452]
---
Predecessors: [0x3ce]
Successors: []
---
0x44f PUSH1 0x0
0x451 DUP1
0x452 REVERT
---
0x44f: V253 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f, V234, 0xe9fad8ee, V243, 0x0, V246, V247, V246, 0x0, V234, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V234, 0xe9fad8ee, V243, 0x0, V246, V247, V246, 0x0, V234, V250]

================================

Block 0x453
[0x453:0x45d]
---
Predecessors: [0x3ce]
Successors: [0x45e, 0x467]
---
0x453 JUMPDEST
0x454 POP
0x455 GAS
0x456 CALL
0x457 ISZERO
0x458 DUP1
0x459 ISZERO
0x45a PUSH2 0x467
0x45d JUMPI
---
0x453: JUMPDEST 
0x455: V254 = GAS
0x456: V255 = CALL V254 V234 0x0 V246 V247 V246 0x0
0x457: V256 = ISZERO V255
0x459: V257 = ISZERO V256
0x45a: V258 = 0x467
0x45d: JUMPI 0x467 V257
---
Entry stack: [V11, 0x8f, V234, 0xe9fad8ee, V243, 0x0, V246, V247, V246, 0x0, V234, V250]
Stack pops: 7
Stack additions: [V256]
Exit stack: [V11, 0x8f, V234, 0xe9fad8ee, V243, V256]

================================

Block 0x45e
[0x45e:0x466]
---
Predecessors: [0x453]
Successors: []
---
0x45e RETURNDATASIZE
0x45f PUSH1 0x0
0x461 DUP1
0x462 RETURNDATACOPY
0x463 RETURNDATASIZE
0x464 PUSH1 0x0
0x466 REVERT
---
0x45e: V259 = RETURNDATASIZE
0x45f: V260 = 0x0
0x462: RETURNDATACOPY 0x0 0x0 V259
0x463: V261 = RETURNDATASIZE
0x464: V262 = 0x0
0x466: REVERT 0x0 V261
---
Entry stack: [V11, 0x8f, V234, 0xe9fad8ee, V243, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V234, 0xe9fad8ee, V243, V256]

================================

Block 0x467
[0x467:0x4e0]
---
Predecessors: [0x453]
Successors: [0x4e1, 0x4ea]
---
0x467 JUMPDEST
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c PUSH1 0x3
0x46e PUSH1 0x0
0x470 SWAP1
0x471 SLOAD
0x472 SWAP1
0x473 PUSH2 0x100
0x476 EXP
0x477 SWAP1
0x478 DIV
0x479 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48e AND
0x48f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a4 AND
0x4a5 PUSH2 0x8fc
0x4a8 ADDRESS
0x4a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4be AND
0x4bf BALANCE
0x4c0 SWAP1
0x4c1 DUP2
0x4c2 ISZERO
0x4c3 MUL
0x4c4 SWAP1
0x4c5 PUSH1 0x40
0x4c7 MLOAD
0x4c8 PUSH1 0x0
0x4ca PUSH1 0x40
0x4cc MLOAD
0x4cd DUP1
0x4ce DUP4
0x4cf SUB
0x4d0 DUP2
0x4d1 DUP6
0x4d2 DUP9
0x4d3 DUP9
0x4d4 CALL
0x4d5 SWAP4
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da ISZERO
0x4db DUP1
0x4dc ISZERO
0x4dd PUSH2 0x4ea
0x4e0 JUMPI
---
0x467: JUMPDEST 
0x46c: V263 = 0x3
0x46e: V264 = 0x0
0x471: V265 = S[0x3]
0x473: V266 = 0x100
0x476: V267 = EXP 0x100 0x0
0x478: V268 = DIV V265 0x1
0x479: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x48e: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x48f: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x4a5: V273 = 0x8fc
0x4a8: V274 = ADDRESS
0x4a9: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x4be: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x4bf: V277 = BALANCE V276
0x4c2: V278 = ISZERO V277
0x4c3: V279 = MUL V278 0x8fc
0x4c5: V280 = 0x40
0x4c7: V281 = M[0x40]
0x4c8: V282 = 0x0
0x4ca: V283 = 0x40
0x4cc: V284 = M[0x40]
0x4cf: V285 = SUB V281 V284
0x4d4: V286 = CALL V279 V272 V277 V284 V285 V284 0x0
0x4da: V287 = ISZERO V286
0x4dc: V288 = ISZERO V287
0x4dd: V289 = 0x4ea
0x4e0: JUMPI 0x4ea V288
---
Entry stack: [V11, 0x8f, V234, 0xe9fad8ee, V243, V256]
Stack pops: 4
Stack additions: [V287]
Exit stack: [V11, 0x8f, V287]

================================

Block 0x4e1
[0x4e1:0x4e9]
---
Predecessors: [0x467]
Successors: []
---
0x4e1 RETURNDATASIZE
0x4e2 PUSH1 0x0
0x4e4 DUP1
0x4e5 RETURNDATACOPY
0x4e6 RETURNDATASIZE
0x4e7 PUSH1 0x0
0x4e9 REVERT
---
0x4e1: V290 = RETURNDATASIZE
0x4e2: V291 = 0x0
0x4e5: RETURNDATACOPY 0x0 0x0 V290
0x4e6: V292 = RETURNDATASIZE
0x4e7: V293 = 0x0
0x4e9: REVERT 0x0 V292
---
Entry stack: [V11, 0x8f, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V287]

================================

Block 0x4ea
[0x4ea:0x4ec]
---
Predecessors: [0x467]
Successors: [0x8f]
---
0x4ea JUMPDEST
0x4eb POP
0x4ec JUMP
---
0x4ea: JUMPDEST 
0x4ec: JUMP 0x8f
---
Entry stack: [V11, 0x8f, V287]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ed
[0x4ed:0x518]
---
Predecessors: []
Successors: []
---
0x4ed STOP
0x4ee LOG1
0x4ef PUSH6 0x627a7a723058
0x4f6 SHA3
0x4f7 MISSING 0xd4
0x4f8 PUSH15 0x98f4a8ac18378bb29661de832d8ab5
0x508 MSIZE
0x509 MISSING 0x5d
0x50a MISSING 0x2a
0x50b MISSING 0xf9
0x50c SAR
0x50d SWAP9
0x50e MISSING 0xb5
0x50f MISSING 0x2d
0x510 SWAP15
0x511 ADDMOD
0x512 PUSH4 0x92b64b6
0x517 STOP
0x518 MISSING 0x29
---
0x4ed: STOP 
0x4ee: LOG S0 S1 S2
0x4ef: V294 = 0x627a7a723058
0x4f6: V295 = SHA3 0x627a7a723058 S3
0x4f7: MISSING 0xd4
0x4f8: V296 = 0x98f4a8ac18378bb29661de832d8ab5
0x508: V297 = MSIZE
0x509: MISSING 0x5d
0x50a: MISSING 0x2a
0x50b: MISSING 0xf9
0x50c: V298 = SAR S0 S1
0x50e: MISSING 0xb5
0x50f: MISSING 0x2d
0x511: V299 = ADDMOD S15 S1 S2
0x512: V300 = 0x92b64b6
0x517: STOP 
0x518: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V295, V297, 0x98f4a8ac18378bb29661de832d8ab5, S10, S2, S3, S4, S5, S6, S7, S8, S9, V298, 0x92b64b6, V299, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x64edfbf0
Entry block: 0x59
Exit block: 0x61
Body: 0x59, 0x61, 0x91, 0xa6, 0xaa, 0xef, 0xf3, 0x141, 0x182, 0x18b, 0x191, 0x195, 0x266, 0x26a, 0x275, 0x27e, 0x292, 0x296

Function 1:
Public function signature: 0x6c40b19a
Entry block: 0x63
Exit block: 0x78
Body: 0x63, 0x6b, 0x6f, 0x78, 0x2ae, 0x330, 0x334, 0x33f, 0x348, 0x3c2, 0x3cb

Function 2:
Public function signature: 0xe9fad8ee
Entry block: 0x7a
Exit block: 0x8f
Body: 0x7a, 0x82, 0x86, 0x8f, 0x3ce, 0x44f, 0x453, 0x45e, 0x467, 0x4e1, 0x4ea

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

