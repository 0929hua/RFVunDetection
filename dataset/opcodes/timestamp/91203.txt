Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb4
0xa: JUMPI 0xb4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc1]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2c4e722e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc1
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2c4e722e
0x20: V14 = EQ V12 0x2c4e722e
0x21: V15 = 0xc1
0x24: JUMPI 0xc1 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xe6]
---
0x25 DUP1
0x26 PUSH4 0x4042b66f
0x2b EQ
0x2c PUSH2 0xe6
0x2f JUMPI
---
0x26: V16 = 0x4042b66f
0x2b: V17 = EQ 0x4042b66f V12
0x2c: V18 = 0xe6
0x2f: JUMPI 0xe6 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x10b]
---
0x30 DUP1
0x31 PUSH4 0x580c2ae9
0x36 EQ
0x37 PUSH2 0x10b
0x3a JUMPI
---
0x31: V19 = 0x580c2ae9
0x36: V20 = EQ 0x580c2ae9 V12
0x37: V21 = 0x10b
0x3a: JUMPI 0x10b V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x130]
---
0x3b DUP1
0x3c PUSH4 0x8da5cb5b
0x41 EQ
0x42 PUSH2 0x130
0x45 JUMPI
---
0x3c: V22 = 0x8da5cb5b
0x41: V23 = EQ 0x8da5cb5b V12
0x42: V24 = 0x130
0x45: JUMPI 0x130 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x15f]
---
0x46 DUP1
0x47 PUSH4 0x974654c6
0x4c EQ
0x4d PUSH2 0x15f
0x50 JUMPI
---
0x47: V25 = 0x974654c6
0x4c: V26 = EQ 0x974654c6 V12
0x4d: V27 = 0x15f
0x50: JUMPI 0x15f V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x174]
---
0x51 DUP1
0x52 PUSH4 0xa85adeab
0x57 EQ
0x58 PUSH2 0x174
0x5b JUMPI
---
0x52: V28 = 0xa85adeab
0x57: V29 = EQ 0xa85adeab V12
0x58: V30 = 0x174
0x5b: JUMPI 0x174 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x199]
---
0x5c DUP1
0x5d PUSH4 0xaaffadf3
0x62 EQ
0x63 PUSH2 0x199
0x66 JUMPI
---
0x5d: V31 = 0xaaffadf3
0x62: V32 = EQ 0xaaffadf3 V12
0x63: V33 = 0x199
0x66: JUMPI 0x199 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1be]
---
0x67 DUP1
0x68 PUSH4 0xb071cbe6
0x6d EQ
0x6e PUSH2 0x1be
0x71 JUMPI
---
0x68: V34 = 0xb071cbe6
0x6d: V35 = EQ 0xb071cbe6 V12
0x6e: V36 = 0x1be
0x71: JUMPI 0x1be V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1e3]
---
0x72 DUP1
0x73 PUSH4 0xe6fd48bc
0x78 EQ
0x79 PUSH2 0x1e3
0x7c JUMPI
---
0x73: V37 = 0xe6fd48bc
0x78: V38 = EQ 0xe6fd48bc V12
0x79: V39 = 0x1e3
0x7c: JUMPI 0x1e3 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x208]
---
0x7d DUP1
0x7e PUSH4 0xe9edf4cd
0x83 EQ
0x84 PUSH2 0x208
0x87 JUMPI
---
0x7e: V40 = 0xe9edf4cd
0x83: V41 = EQ 0xe9edf4cd V12
0x84: V42 = 0x208
0x87: JUMPI 0x208 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x237]
---
0x88 DUP1
0x89 PUSH4 0xec8ac4d8
0x8e EQ
0x8f PUSH2 0x237
0x92 JUMPI
---
0x89: V43 = 0xec8ac4d8
0x8e: V44 = EQ 0xec8ac4d8 V12
0x8f: V45 = 0x237
0x92: JUMPI 0x237 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x24d]
---
0x93 DUP1
0x94 PUSH4 0xecb70fb7
0x99 EQ
0x9a PUSH2 0x24d
0x9d JUMPI
---
0x94: V46 = 0xecb70fb7
0x99: V47 = EQ 0xecb70fb7 V12
0x9a: V48 = 0x24d
0x9d: JUMPI 0x24d V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x274]
---
0x9e DUP1
0x9f PUSH4 0xf2fde38b
0xa4 EQ
0xa5 PUSH2 0x274
0xa8 JUMPI
---
0x9f: V49 = 0xf2fde38b
0xa4: V50 = EQ 0xf2fde38b V12
0xa5: V51 = 0x274
0xa8: JUMPI 0x274 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x295]
---
0xa9 DUP1
0xaa PUSH4 0xfc0c546a
0xaf EQ
0xb0 PUSH2 0x295
0xb3 JUMPI
---
0xaa: V52 = 0xfc0c546a
0xaf: V53 = EQ 0xfc0c546a V12
0xb0: V54 = 0x295
0xb3: JUMPI 0x295 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0x0, 0xa9]
Successors: [0xb5]
---
0xb4 JUMPDEST
---
0xb4: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5
[0xb5:0xbd]
---
Predecessors: [0xb4]
Successors: [0x2c4]
---
0xb5 JUMPDEST
0xb6 PUSH2 0xbe
0xb9 CALLER
0xba PUSH2 0x2c4
0xbd JUMP
---
0xb5: JUMPDEST 
0xb6: V55 = 0xbe
0xb9: V56 = CALLER
0xba: V57 = 0x2c4
0xbd: JUMP 0x2c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe, V56]
Exit stack: [V12, 0xbe, V56]

================================

Block 0xbe
[0xbe:0xbe]
---
Predecessors: [0x470, 0x55d, 0x5fe]
Successors: [0xbf]
---
0xbe JUMPDEST
---
0xbe: JUMPDEST 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xbf
[0xbf:0xc0]
---
Predecessors: [0xbe]
Successors: []
---
0xbf JUMPDEST
0xc0 STOP
---
0xbf: JUMPDEST 
0xc0: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xc1
[0xc1:0xc7]
---
Predecessors: [0xb]
Successors: [0xc8, 0xcc]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 ISZERO
0xc4 PUSH2 0xcc
0xc7 JUMPI
---
0xc1: JUMPDEST 
0xc2: V58 = CALLVALUE
0xc3: V59 = ISZERO V58
0xc4: V60 = 0xcc
0xc7: JUMPI 0xcc V59
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc8
[0xc8:0xcb]
---
Predecessors: [0xc1]
Successors: []
---
0xc8 PUSH1 0x0
0xca DUP1
0xcb REVERT
---
0xc8: V61 = 0x0
0xcb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0xc1]
Successors: [0x475]
---
0xcc JUMPDEST
0xcd PUSH2 0xd4
0xd0 PUSH2 0x475
0xd3 JUMP
---
0xcc: JUMPDEST 
0xcd: V62 = 0xd4
0xd0: V63 = 0x475
0xd3: JUMP 0x475
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0xd4
[0xd4:0xe5]
---
Predecessors: [0x475, 0x47b, 0x481, 0x55f, 0x565, 0x56b, 0x571]
Successors: []
---
0xd4 JUMPDEST
0xd5 PUSH1 0x40
0xd7 MLOAD
0xd8 SWAP1
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 SWAP2
0xe3 SUB
0xe4 SWAP1
0xe5 RETURN
---
0xd4: JUMPDEST 
0xd5: V64 = 0x40
0xd7: V65 = M[0x40]
0xda: M[V65] = S0
0xdb: V66 = 0x20
0xdd: V67 = ADD 0x20 V65
0xde: V68 = 0x40
0xe0: V69 = M[0x40]
0xe3: V70 = SUB V67 V69
0xe5: RETURN V69 V70
---
Entry stack: [V12, 0xd4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0x25]
Successors: [0xed, 0xf1]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe6: JUMPDEST 
0xe7: V71 = CALLVALUE
0xe8: V72 = ISZERO V71
0xe9: V73 = 0xf1
0xec: JUMPI 0xf1 V72
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe6]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V74 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0xe6]
Successors: [0x47b]
---
0xf1 JUMPDEST
0xf2 PUSH2 0xd4
0xf5 PUSH2 0x47b
0xf8 JUMP
---
0xf1: JUMPDEST 
0xf2: V75 = 0xd4
0xf5: V76 = 0x47b
0xf8: JUMP 0x47b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0xf9
[0xf9:0x10a]
---
Predecessors: []
Successors: []
---
0xf9 JUMPDEST
0xfa PUSH1 0x40
0xfc MLOAD
0xfd SWAP1
0xfe DUP2
0xff MSTORE
0x100 PUSH1 0x20
0x102 ADD
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 SWAP2
0x108 SUB
0x109 SWAP1
0x10a RETURN
---
0xf9: JUMPDEST 
0xfa: V77 = 0x40
0xfc: V78 = M[0x40]
0xff: M[V78] = S0
0x100: V79 = 0x20
0x102: V80 = ADD 0x20 V78
0x103: V81 = 0x40
0x105: V82 = M[0x40]
0x108: V83 = SUB V80 V82
0x10a: RETURN V82 V83
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x10b
[0x10b:0x111]
---
Predecessors: [0x30]
Successors: [0x112, 0x116]
---
0x10b JUMPDEST
0x10c CALLVALUE
0x10d ISZERO
0x10e PUSH2 0x116
0x111 JUMPI
---
0x10b: JUMPDEST 
0x10c: V84 = CALLVALUE
0x10d: V85 = ISZERO V84
0x10e: V86 = 0x116
0x111: JUMPI 0x116 V85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x112
[0x112:0x115]
---
Predecessors: [0x10b]
Successors: []
---
0x112 PUSH1 0x0
0x114 DUP1
0x115 REVERT
---
0x112: V87 = 0x0
0x115: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x116
[0x116:0x11d]
---
Predecessors: [0x10b]
Successors: [0x481]
---
0x116 JUMPDEST
0x117 PUSH2 0xd4
0x11a PUSH2 0x481
0x11d JUMP
---
0x116: JUMPDEST 
0x117: V88 = 0xd4
0x11a: V89 = 0x481
0x11d: JUMP 0x481
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x11e
[0x11e:0x12f]
---
Predecessors: []
Successors: []
---
0x11e JUMPDEST
0x11f PUSH1 0x40
0x121 MLOAD
0x122 SWAP1
0x123 DUP2
0x124 MSTORE
0x125 PUSH1 0x20
0x127 ADD
0x128 PUSH1 0x40
0x12a MLOAD
0x12b DUP1
0x12c SWAP2
0x12d SUB
0x12e SWAP1
0x12f RETURN
---
0x11e: JUMPDEST 
0x11f: V90 = 0x40
0x121: V91 = M[0x40]
0x124: M[V91] = S0
0x125: V92 = 0x20
0x127: V93 = ADD 0x20 V91
0x128: V94 = 0x40
0x12a: V95 = M[0x40]
0x12d: V96 = SUB V93 V95
0x12f: RETURN V95 V96
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x130
[0x130:0x136]
---
Predecessors: [0x3b]
Successors: [0x137, 0x13b]
---
0x130 JUMPDEST
0x131 CALLVALUE
0x132 ISZERO
0x133 PUSH2 0x13b
0x136 JUMPI
---
0x130: JUMPDEST 
0x131: V97 = CALLVALUE
0x132: V98 = ISZERO V97
0x133: V99 = 0x13b
0x136: JUMPI 0x13b V98
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x137
[0x137:0x13a]
---
Predecessors: [0x130]
Successors: []
---
0x137 PUSH1 0x0
0x139 DUP1
0x13a REVERT
---
0x137: V100 = 0x0
0x13a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13b
[0x13b:0x142]
---
Predecessors: [0x130]
Successors: [0x487]
---
0x13b JUMPDEST
0x13c PUSH2 0x143
0x13f PUSH2 0x487
0x142 JUMP
---
0x13b: JUMPDEST 
0x13c: V101 = 0x143
0x13f: V102 = 0x487
0x142: JUMP 0x487
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x143]
Exit stack: [V12, 0x143]

================================

Block 0x143
[0x143:0x15e]
---
Predecessors: [0x487, 0x577, 0x601]
Successors: []
---
0x143 JUMPDEST
0x144 PUSH1 0x40
0x146 MLOAD
0x147 PUSH1 0x1
0x149 PUSH1 0xa0
0x14b PUSH1 0x2
0x14d EXP
0x14e SUB
0x14f SWAP1
0x150 SWAP2
0x151 AND
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 ADD
0x157 PUSH1 0x40
0x159 MLOAD
0x15a DUP1
0x15b SWAP2
0x15c SUB
0x15d SWAP1
0x15e RETURN
---
0x143: JUMPDEST 
0x144: V103 = 0x40
0x146: V104 = M[0x40]
0x147: V105 = 0x1
0x149: V106 = 0xa0
0x14b: V107 = 0x2
0x14d: V108 = EXP 0x2 0xa0
0x14e: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V110 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x153: M[V104] = V110
0x154: V111 = 0x20
0x156: V112 = ADD 0x20 V104
0x157: V113 = 0x40
0x159: V114 = M[0x40]
0x15c: V115 = SUB V112 V114
0x15e: RETURN V114 V115
---
Entry stack: [V12, 0x143, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x143]

================================

Block 0x15f
[0x15f:0x165]
---
Predecessors: [0x46]
Successors: [0x166, 0x16a]
---
0x15f JUMPDEST
0x160 CALLVALUE
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x15f: JUMPDEST 
0x160: V116 = CALLVALUE
0x161: V117 = ISZERO V116
0x162: V118 = 0x16a
0x165: JUMPI 0x16a V117
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x15f]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V119 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x15f]
Successors: [0x496]
---
0x16a JUMPDEST
0x16b PUSH2 0xbe
0x16e PUSH2 0x496
0x171 JUMP
---
0x16a: JUMPDEST 
0x16b: V120 = 0xbe
0x16e: V121 = 0x496
0x171: JUMP 0x496
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe]
Exit stack: [V12, 0xbe]

================================

Block 0x172
[0x172:0x173]
---
Predecessors: []
Successors: []
---
0x172 JUMPDEST
0x173 STOP
---
0x172: JUMPDEST 
0x173: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x174
[0x174:0x17a]
---
Predecessors: [0x51]
Successors: [0x17b, 0x17f]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x174: JUMPDEST 
0x175: V122 = CALLVALUE
0x176: V123 = ISZERO V122
0x177: V124 = 0x17f
0x17a: JUMPI 0x17f V123
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x174]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V125 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17f
[0x17f:0x186]
---
Predecessors: [0x174]
Successors: [0x55f]
---
0x17f JUMPDEST
0x180 PUSH2 0xd4
0x183 PUSH2 0x55f
0x186 JUMP
---
0x17f: JUMPDEST 
0x180: V126 = 0xd4
0x183: V127 = 0x55f
0x186: JUMP 0x55f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x187
[0x187:0x198]
---
Predecessors: []
Successors: []
---
0x187 JUMPDEST
0x188 PUSH1 0x40
0x18a MLOAD
0x18b SWAP1
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x20
0x190 ADD
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 SWAP2
0x196 SUB
0x197 SWAP1
0x198 RETURN
---
0x187: JUMPDEST 
0x188: V128 = 0x40
0x18a: V129 = M[0x40]
0x18d: M[V129] = S0
0x18e: V130 = 0x20
0x190: V131 = ADD 0x20 V129
0x191: V132 = 0x40
0x193: V133 = M[0x40]
0x196: V134 = SUB V131 V133
0x198: RETURN V133 V134
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x199
[0x199:0x19f]
---
Predecessors: [0x5c]
Successors: [0x1a0, 0x1a4]
---
0x199 JUMPDEST
0x19a CALLVALUE
0x19b ISZERO
0x19c PUSH2 0x1a4
0x19f JUMPI
---
0x199: JUMPDEST 
0x19a: V135 = CALLVALUE
0x19b: V136 = ISZERO V135
0x19c: V137 = 0x1a4
0x19f: JUMPI 0x1a4 V136
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a0
[0x1a0:0x1a3]
---
Predecessors: [0x199]
Successors: []
---
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 REVERT
---
0x1a0: V138 = 0x0
0x1a3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a4
[0x1a4:0x1ab]
---
Predecessors: [0x199]
Successors: [0x565]
---
0x1a4 JUMPDEST
0x1a5 PUSH2 0xd4
0x1a8 PUSH2 0x565
0x1ab JUMP
---
0x1a4: JUMPDEST 
0x1a5: V139 = 0xd4
0x1a8: V140 = 0x565
0x1ab: JUMP 0x565
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x1ac
[0x1ac:0x1bd]
---
Predecessors: []
Successors: []
---
0x1ac JUMPDEST
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 SWAP1
0x1b1 DUP2
0x1b2 MSTORE
0x1b3 PUSH1 0x20
0x1b5 ADD
0x1b6 PUSH1 0x40
0x1b8 MLOAD
0x1b9 DUP1
0x1ba SWAP2
0x1bb SUB
0x1bc SWAP1
0x1bd RETURN
---
0x1ac: JUMPDEST 
0x1ad: V141 = 0x40
0x1af: V142 = M[0x40]
0x1b2: M[V142] = S0
0x1b3: V143 = 0x20
0x1b5: V144 = ADD 0x20 V142
0x1b6: V145 = 0x40
0x1b8: V146 = M[0x40]
0x1bb: V147 = SUB V144 V146
0x1bd: RETURN V146 V147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1be
[0x1be:0x1c4]
---
Predecessors: [0x67]
Successors: [0x1c5, 0x1c9]
---
0x1be JUMPDEST
0x1bf CALLVALUE
0x1c0 ISZERO
0x1c1 PUSH2 0x1c9
0x1c4 JUMPI
---
0x1be: JUMPDEST 
0x1bf: V148 = CALLVALUE
0x1c0: V149 = ISZERO V148
0x1c1: V150 = 0x1c9
0x1c4: JUMPI 0x1c9 V149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c5
[0x1c5:0x1c8]
---
Predecessors: [0x1be]
Successors: []
---
0x1c5 PUSH1 0x0
0x1c7 DUP1
0x1c8 REVERT
---
0x1c5: V151 = 0x0
0x1c8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c9
[0x1c9:0x1d0]
---
Predecessors: [0x1be]
Successors: [0x56b]
---
0x1c9 JUMPDEST
0x1ca PUSH2 0xd4
0x1cd PUSH2 0x56b
0x1d0 JUMP
---
0x1c9: JUMPDEST 
0x1ca: V152 = 0xd4
0x1cd: V153 = 0x56b
0x1d0: JUMP 0x56b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x1d1
[0x1d1:0x1e2]
---
Predecessors: []
Successors: []
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 SWAP1
0x1d6 DUP2
0x1d7 MSTORE
0x1d8 PUSH1 0x20
0x1da ADD
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de DUP1
0x1df SWAP2
0x1e0 SUB
0x1e1 SWAP1
0x1e2 RETURN
---
0x1d1: JUMPDEST 
0x1d2: V154 = 0x40
0x1d4: V155 = M[0x40]
0x1d7: M[V155] = S0
0x1d8: V156 = 0x20
0x1da: V157 = ADD 0x20 V155
0x1db: V158 = 0x40
0x1dd: V159 = M[0x40]
0x1e0: V160 = SUB V157 V159
0x1e2: RETURN V159 V160
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e3
[0x1e3:0x1e9]
---
Predecessors: [0x72]
Successors: [0x1ea, 0x1ee]
---
0x1e3 JUMPDEST
0x1e4 CALLVALUE
0x1e5 ISZERO
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V161 = CALLVALUE
0x1e5: V162 = ISZERO V161
0x1e6: V163 = 0x1ee
0x1e9: JUMPI 0x1ee V162
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x1e3]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V164 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ee
[0x1ee:0x1f5]
---
Predecessors: [0x1e3]
Successors: [0x571]
---
0x1ee JUMPDEST
0x1ef PUSH2 0xd4
0x1f2 PUSH2 0x571
0x1f5 JUMP
---
0x1ee: JUMPDEST 
0x1ef: V165 = 0xd4
0x1f2: V166 = 0x571
0x1f5: JUMP 0x571
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x1f6
[0x1f6:0x207]
---
Predecessors: []
Successors: []
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa SWAP1
0x1fb DUP2
0x1fc MSTORE
0x1fd PUSH1 0x20
0x1ff ADD
0x200 PUSH1 0x40
0x202 MLOAD
0x203 DUP1
0x204 SWAP2
0x205 SUB
0x206 SWAP1
0x207 RETURN
---
0x1f6: JUMPDEST 
0x1f7: V167 = 0x40
0x1f9: V168 = M[0x40]
0x1fc: M[V168] = S0
0x1fd: V169 = 0x20
0x1ff: V170 = ADD 0x20 V168
0x200: V171 = 0x40
0x202: V172 = M[0x40]
0x205: V173 = SUB V170 V172
0x207: RETURN V172 V173
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x208
[0x208:0x20e]
---
Predecessors: [0x7d]
Successors: [0x20f, 0x213]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x208: JUMPDEST 
0x209: V174 = CALLVALUE
0x20a: V175 = ISZERO V174
0x20b: V176 = 0x213
0x20e: JUMPI 0x213 V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x208]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V177 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x213
[0x213:0x21a]
---
Predecessors: [0x208]
Successors: [0x577]
---
0x213 JUMPDEST
0x214 PUSH2 0x143
0x217 PUSH2 0x577
0x21a JUMP
---
0x213: JUMPDEST 
0x214: V178 = 0x143
0x217: V179 = 0x577
0x21a: JUMP 0x577
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x143]
Exit stack: [V12, 0x143]

================================

Block 0x21b
[0x21b:0x236]
---
Predecessors: []
Successors: []
---
0x21b JUMPDEST
0x21c PUSH1 0x40
0x21e MLOAD
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 SWAP1
0x228 SWAP2
0x229 AND
0x22a DUP2
0x22b MSTORE
0x22c PUSH1 0x20
0x22e ADD
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP1
0x233 SWAP2
0x234 SUB
0x235 SWAP1
0x236 RETURN
---
0x21b: JUMPDEST 
0x21c: V180 = 0x40
0x21e: V181 = M[0x40]
0x21f: V182 = 0x1
0x221: V183 = 0xa0
0x223: V184 = 0x2
0x225: V185 = EXP 0x2 0xa0
0x226: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V187 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x22b: M[V181] = V187
0x22c: V188 = 0x20
0x22e: V189 = ADD 0x20 V181
0x22f: V190 = 0x40
0x231: V191 = M[0x40]
0x234: V192 = SUB V189 V191
0x236: RETURN V191 V192
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x237
[0x237:0x24a]
---
Predecessors: [0x88]
Successors: [0x2c4]
---
0x237 JUMPDEST
0x238 PUSH2 0xbe
0x23b PUSH1 0x1
0x23d PUSH1 0xa0
0x23f PUSH1 0x2
0x241 EXP
0x242 SUB
0x243 PUSH1 0x4
0x245 CALLDATALOAD
0x246 AND
0x247 PUSH2 0x2c4
0x24a JUMP
---
0x237: JUMPDEST 
0x238: V193 = 0xbe
0x23b: V194 = 0x1
0x23d: V195 = 0xa0
0x23f: V196 = 0x2
0x241: V197 = EXP 0x2 0xa0
0x242: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V199 = 0x4
0x245: V200 = CALLDATALOAD 0x4
0x246: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x247: V202 = 0x2c4
0x24a: JUMP 0x2c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe, V201]
Exit stack: [V12, 0xbe, V201]

================================

Block 0x24b
[0x24b:0x24c]
---
Predecessors: []
Successors: []
---
0x24b JUMPDEST
0x24c STOP
---
0x24b: JUMPDEST 
0x24c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x24d
[0x24d:0x253]
---
Predecessors: [0x93]
Successors: [0x254, 0x258]
---
0x24d JUMPDEST
0x24e CALLVALUE
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x24d: JUMPDEST 
0x24e: V203 = CALLVALUE
0x24f: V204 = ISZERO V203
0x250: V205 = 0x258
0x253: JUMPI 0x258 V204
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x24d]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V206 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x258
[0x258:0x25f]
---
Predecessors: [0x24d]
Successors: [0x586]
---
0x258 JUMPDEST
0x259 PUSH2 0x260
0x25c PUSH2 0x586
0x25f JUMP
---
0x258: JUMPDEST 
0x259: V207 = 0x260
0x25c: V208 = 0x586
0x25f: JUMP 0x586
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x260]
Exit stack: [V12, 0x260]

================================

Block 0x260
[0x260:0x273]
---
Predecessors: [0x5a4]
Successors: []
---
0x260 JUMPDEST
0x261 PUSH1 0x40
0x263 MLOAD
0x264 SWAP1
0x265 ISZERO
0x266 ISZERO
0x267 DUP2
0x268 MSTORE
0x269 PUSH1 0x20
0x26b ADD
0x26c PUSH1 0x40
0x26e MLOAD
0x26f DUP1
0x270 SWAP2
0x271 SUB
0x272 SWAP1
0x273 RETURN
---
0x260: JUMPDEST 
0x261: V209 = 0x40
0x263: V210 = M[0x40]
0x265: V211 = ISZERO S0
0x266: V212 = ISZERO V211
0x268: M[V210] = V212
0x269: V213 = 0x20
0x26b: V214 = ADD 0x20 V210
0x26c: V215 = 0x40
0x26e: V216 = M[0x40]
0x271: V217 = SUB V214 V216
0x273: RETURN V216 V217
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x274
[0x274:0x27a]
---
Predecessors: [0x9e]
Successors: [0x27b, 0x27f]
---
0x274 JUMPDEST
0x275 CALLVALUE
0x276 ISZERO
0x277 PUSH2 0x27f
0x27a JUMPI
---
0x274: JUMPDEST 
0x275: V218 = CALLVALUE
0x276: V219 = ISZERO V218
0x277: V220 = 0x27f
0x27a: JUMPI 0x27f V219
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27b
[0x27b:0x27e]
---
Predecessors: [0x274]
Successors: []
---
0x27b PUSH1 0x0
0x27d DUP1
0x27e REVERT
---
0x27b: V221 = 0x0
0x27e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27f
[0x27f:0x292]
---
Predecessors: [0x274]
Successors: [0x5a9]
---
0x27f JUMPDEST
0x280 PUSH2 0xbe
0x283 PUSH1 0x1
0x285 PUSH1 0xa0
0x287 PUSH1 0x2
0x289 EXP
0x28a SUB
0x28b PUSH1 0x4
0x28d CALLDATALOAD
0x28e AND
0x28f PUSH2 0x5a9
0x292 JUMP
---
0x27f: JUMPDEST 
0x280: V222 = 0xbe
0x283: V223 = 0x1
0x285: V224 = 0xa0
0x287: V225 = 0x2
0x289: V226 = EXP 0x2 0xa0
0x28a: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28b: V228 = 0x4
0x28d: V229 = CALLDATALOAD 0x4
0x28e: V230 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V231 = 0x5a9
0x292: JUMP 0x5a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbe, V230]
Exit stack: [V12, 0xbe, V230]

================================

Block 0x293
[0x293:0x294]
---
Predecessors: []
Successors: []
---
0x293 JUMPDEST
0x294 STOP
---
0x293: JUMPDEST 
0x294: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x295
[0x295:0x29b]
---
Predecessors: [0xa9]
Successors: [0x29c, 0x2a0]
---
0x295 JUMPDEST
0x296 CALLVALUE
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x295: JUMPDEST 
0x296: V232 = CALLVALUE
0x297: V233 = ISZERO V232
0x298: V234 = 0x2a0
0x29b: JUMPI 0x2a0 V233
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x295]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V235 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x295]
Successors: [0x601]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x143
0x2a4 PUSH2 0x601
0x2a7 JUMP
---
0x2a0: JUMPDEST 
0x2a1: V236 = 0x143
0x2a4: V237 = 0x601
0x2a7: JUMP 0x601
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x143]
Exit stack: [V12, 0x143]

================================

Block 0x2a8
[0x2a8:0x2c3]
---
Predecessors: []
Successors: []
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac PUSH1 0x1
0x2ae PUSH1 0xa0
0x2b0 PUSH1 0x2
0x2b2 EXP
0x2b3 SUB
0x2b4 SWAP1
0x2b5 SWAP2
0x2b6 AND
0x2b7 DUP2
0x2b8 MSTORE
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc PUSH1 0x40
0x2be MLOAD
0x2bf DUP1
0x2c0 SWAP2
0x2c1 SUB
0x2c2 SWAP1
0x2c3 RETURN
---
0x2a8: JUMPDEST 
0x2a9: V238 = 0x40
0x2ab: V239 = M[0x40]
0x2ac: V240 = 0x1
0x2ae: V241 = 0xa0
0x2b0: V242 = 0x2
0x2b2: V243 = EXP 0x2 0xa0
0x2b3: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V245 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: M[V239] = V245
0x2b9: V246 = 0x20
0x2bb: V247 = ADD 0x20 V239
0x2bc: V248 = 0x40
0x2be: V249 = M[0x40]
0x2c1: V250 = SUB V247 V249
0x2c3: RETURN V249 V250
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c4
[0x2c4:0x2d3]
---
Predecessors: [0xb5, 0x237]
Successors: [0x2d4, 0x2d8]
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x0
0x2c7 DUP1
0x2c8 PUSH1 0x2
0x2ca SLOAD
0x2cb TIMESTAMP
0x2cc LT
0x2cd ISZERO
0x2ce ISZERO
0x2cf ISZERO
0x2d0 PUSH2 0x2d8
0x2d3 JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V251 = 0x0
0x2c8: V252 = 0x2
0x2ca: V253 = S[0x2]
0x2cb: V254 = TIMESTAMP
0x2cc: V255 = LT V254 V253
0x2cd: V256 = ISZERO V255
0x2ce: V257 = ISZERO V256
0x2cf: V258 = ISZERO V257
0x2d0: V259 = 0x2d8
0x2d3: JUMPI 0x2d8 V258
---
Entry stack: [V12, 0xbe, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xbe, S0, 0x0, 0x0]

================================

Block 0x2d4
[0x2d4:0x2d7]
---
Predecessors: [0x2c4]
Successors: []
---
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 REVERT
---
0x2d4: V260 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbe, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, S2, 0x0, 0x0]

================================

Block 0x2d8
[0x2d8:0x2e2]
---
Predecessors: [0x2c4]
Successors: [0x2e3, 0x2e7]
---
0x2d8 JUMPDEST
0x2d9 PUSH1 0x3
0x2db SLOAD
0x2dc TIMESTAMP
0x2dd GT
0x2de ISZERO
0x2df PUSH2 0x2e7
0x2e2 JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V261 = 0x3
0x2db: V262 = S[0x3]
0x2dc: V263 = TIMESTAMP
0x2dd: V264 = GT V263 V262
0x2de: V265 = ISZERO V264
0x2df: V266 = 0x2e7
0x2e2: JUMPI 0x2e7 V265
---
Entry stack: [V12, 0xbe, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, S2, 0x0, 0x0]

================================

Block 0x2e3
[0x2e3:0x2e6]
---
Predecessors: [0x2d8]
Successors: []
---
0x2e3 PUSH1 0x0
0x2e5 DUP1
0x2e6 REVERT
---
0x2e3: V267 = 0x0
0x2e6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbe, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, S2, 0x0, 0x0]

================================

Block 0x2e7
[0x2e7:0x2f1]
---
Predecessors: [0x2d8]
Successors: [0x2f2, 0x2f6]
---
0x2e7 JUMPDEST
0x2e8 PUSH1 0x7
0x2ea SLOAD
0x2eb CALLVALUE
0x2ec LT
0x2ed ISZERO
0x2ee PUSH2 0x2f6
0x2f1 JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V268 = 0x7
0x2ea: V269 = S[0x7]
0x2eb: V270 = CALLVALUE
0x2ec: V271 = LT V270 V269
0x2ed: V272 = ISZERO V271
0x2ee: V273 = 0x2f6
0x2f1: JUMPI 0x2f6 V272
---
Entry stack: [V12, 0xbe, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, S2, 0x0, 0x0]

================================

Block 0x2f2
[0x2f2:0x2f5]
---
Predecessors: [0x2e7]
Successors: []
---
0x2f2 PUSH1 0x0
0x2f4 DUP1
0x2f5 REVERT
---
0x2f2: V274 = 0x0
0x2f5: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbe, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, S2, 0x0, 0x0]

================================

Block 0x2f6
[0x2f6:0x30b]
---
Predecessors: [0x2e7]
Successors: [0x610]
---
0x2f6 JUMPDEST
0x2f7 PUSH1 0x8
0x2f9 SLOAD
0x2fa PUSH1 0x6
0x2fc SLOAD
0x2fd PUSH2 0x30c
0x300 SWAP1
0x301 CALLVALUE
0x302 PUSH4 0xffffffff
0x307 PUSH2 0x610
0x30a AND
0x30b JUMP
---
0x2f6: JUMPDEST 
0x2f7: V275 = 0x8
0x2f9: V276 = S[0x8]
0x2fa: V277 = 0x6
0x2fc: V278 = S[0x6]
0x2fd: V279 = 0x30c
0x301: V280 = CALLVALUE
0x302: V281 = 0xffffffff
0x307: V282 = 0x610
0x30a: V283 = AND 0x610 0xffffffff
0x30b: JUMP 0x610
---
Entry stack: [V12, 0xbe, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [V276, 0x30c, V278, V280]
Exit stack: [V12, 0xbe, S2, 0x0, 0x0, V276, 0x30c, V278, V280]

================================

Block 0x30c
[0x30c:0x312]
---
Predecessors: [0x623]
Successors: [0x313, 0x317]
---
0x30c JUMPDEST
0x30d GT
0x30e ISZERO
0x30f PUSH2 0x317
0x312 JUMPI
---
0x30c: JUMPDEST 
0x30d: V284 = GT S0 S1
0x30e: V285 = ISZERO V284
0x30f: V286 = 0x317
0x312: JUMPI 0x317 V285
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2]

================================

Block 0x313
[0x313:0x316]
---
Predecessors: [0x30c]
Successors: []
---
0x313 PUSH1 0x0
0x315 DUP1
0x316 REVERT
---
0x313: V287 = 0x0
0x316: REVERT 0x0 0x0
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x317
[0x317:0x327]
---
Predecessors: [0x30c]
Successors: [0x328, 0x32c]
---
0x317 JUMPDEST
0x318 PUSH1 0x1
0x31a PUSH1 0xa0
0x31c PUSH1 0x2
0x31e EXP
0x31f SUB
0x320 DUP4
0x321 AND
0x322 ISZERO
0x323 ISZERO
0x324 PUSH2 0x32c
0x327 JUMPI
---
0x317: JUMPDEST 
0x318: V288 = 0x1
0x31a: V289 = 0xa0
0x31c: V290 = 0x2
0x31e: V291 = EXP 0x2 0xa0
0x31f: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x321: V293 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x322: V294 = ISZERO V293
0x323: V295 = ISZERO V294
0x324: V296 = 0x32c
0x327: JUMPI 0x32c V295
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x328
[0x328:0x32b]
---
Predecessors: [0x317]
Successors: []
---
0x328 PUSH1 0x0
0x32a DUP1
0x32b REVERT
---
0x328: V297 = 0x0
0x32b: REVERT 0x0 0x0
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x32c
[0x32c:0x342]
---
Predecessors: [0x317]
Successors: [0x62a]
---
0x32c JUMPDEST
0x32d PUSH1 0x5
0x32f SLOAD
0x330 CALLVALUE
0x331 SWAP3
0x332 POP
0x333 PUSH2 0x343
0x336 SWAP1
0x337 DUP4
0x338 SWAP1
0x339 PUSH4 0xffffffff
0x33e PUSH2 0x62a
0x341 AND
0x342 JUMP
---
0x32c: JUMPDEST 
0x32d: V298 = 0x5
0x32f: V299 = S[0x5]
0x330: V300 = CALLVALUE
0x333: V301 = 0x343
0x339: V302 = 0xffffffff
0x33e: V303 = 0x62a
0x341: V304 = AND 0x62a 0xffffffff
0x342: JUMP 0x62a
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V300, S0, 0x343, V300, V299]
Exit stack: [V12, S3, S2, V300, S0, 0x343, V300, V299]

================================

Block 0x343
[0x343:0x34d]
---
Predecessors: [0x623]
Successors: [0x659]
---
0x343 JUMPDEST
0x344 SWAP1
0x345 POP
0x346 PUSH2 0x34e
0x349 DUP2
0x34a PUSH2 0x659
0x34d JUMP
---
0x343: JUMPDEST 
0x346: V305 = 0x34e
0x34a: V306 = 0x659
0x34d: JUMP 0x659
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x34e, S0]
Exit stack: [V12, S5, S4, S3, S2, S0, 0x34e, S0]

================================

Block 0x34e
[0x34e:0x363]
---
Predecessors: [0x682]
Successors: [0x610]
---
0x34e JUMPDEST
0x34f PUSH1 0x6
0x351 SLOAD
0x352 SWAP2
0x353 ADD
0x354 SWAP1
0x355 PUSH2 0x364
0x358 SWAP1
0x359 DUP4
0x35a PUSH4 0xffffffff
0x35f PUSH2 0x610
0x362 AND
0x363 JUMP
---
0x34e: JUMPDEST 
0x34f: V307 = 0x6
0x351: V308 = S[0x6]
0x353: V309 = ADD S1 S0
0x355: V310 = 0x364
0x35a: V311 = 0xffffffff
0x35f: V312 = 0x610
0x362: V313 = AND 0x610 0xffffffff
0x363: JUMP 0x610
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V309, 0x364, V308, S2]
Exit stack: [V12, S5, S4, S3, S2, V309, 0x364, V308, S2]

================================

Block 0x364
[0x364:0x3cb]
---
Predecessors: [0x623]
Successors: [0x3cc, 0x3d0]
---
0x364 JUMPDEST
0x365 PUSH1 0x6
0x367 SSTORE
0x368 PUSH1 0x9
0x36a DUP1
0x36b SLOAD
0x36c PUSH1 0x1
0x36e SWAP1
0x36f DUP2
0x370 ADD
0x371 SWAP1
0x372 SWAP2
0x373 SSTORE
0x374 SLOAD
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d AND
0x37e PUSH4 0x40c10f19
0x383 DUP5
0x384 DUP4
0x385 PUSH1 0x0
0x387 PUSH1 0x40
0x389 MLOAD
0x38a PUSH1 0x20
0x38c ADD
0x38d MSTORE
0x38e PUSH1 0x40
0x390 MLOAD
0x391 PUSH1 0xe0
0x393 PUSH1 0x2
0x395 EXP
0x396 PUSH4 0xffffffff
0x39b DUP6
0x39c AND
0x39d MUL
0x39e DUP2
0x39f MSTORE
0x3a0 PUSH1 0x1
0x3a2 PUSH1 0xa0
0x3a4 PUSH1 0x2
0x3a6 EXP
0x3a7 SUB
0x3a8 SWAP1
0x3a9 SWAP3
0x3aa AND
0x3ab PUSH1 0x4
0x3ad DUP4
0x3ae ADD
0x3af MSTORE
0x3b0 PUSH1 0x24
0x3b2 DUP3
0x3b3 ADD
0x3b4 MSTORE
0x3b5 PUSH1 0x44
0x3b7 ADD
0x3b8 PUSH1 0x20
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd DUP1
0x3be DUP4
0x3bf SUB
0x3c0 DUP2
0x3c1 PUSH1 0x0
0x3c3 DUP8
0x3c4 DUP1
0x3c5 EXTCODESIZE
0x3c6 ISZERO
0x3c7 ISZERO
0x3c8 PUSH2 0x3d0
0x3cb JUMPI
---
0x364: JUMPDEST 
0x365: V314 = 0x6
0x367: S[0x6] = S0
0x368: V315 = 0x9
0x36b: V316 = S[0x9]
0x36c: V317 = 0x1
0x370: V318 = ADD 0x1 V316
0x373: S[0x9] = V318
0x374: V319 = S[0x1]
0x375: V320 = 0x1
0x377: V321 = 0xa0
0x379: V322 = 0x2
0x37b: V323 = EXP 0x2 0xa0
0x37c: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37d: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x37e: V326 = 0x40c10f19
0x385: V327 = 0x0
0x387: V328 = 0x40
0x389: V329 = M[0x40]
0x38a: V330 = 0x20
0x38c: V331 = ADD 0x20 V329
0x38d: M[V331] = 0x0
0x38e: V332 = 0x40
0x390: V333 = M[0x40]
0x391: V334 = 0xe0
0x393: V335 = 0x2
0x395: V336 = EXP 0x2 0xe0
0x396: V337 = 0xffffffff
0x39c: V338 = AND 0x40c10f19 0xffffffff
0x39d: V339 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x39f: M[V333] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x3a0: V340 = 0x1
0x3a2: V341 = 0xa0
0x3a4: V342 = 0x2
0x3a6: V343 = EXP 0x2 0xa0
0x3a7: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3aa: V345 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V346 = 0x4
0x3ae: V347 = ADD V333 0x4
0x3af: M[V347] = V345
0x3b0: V348 = 0x24
0x3b3: V349 = ADD V333 0x24
0x3b4: M[V349] = S1
0x3b5: V350 = 0x44
0x3b7: V351 = ADD 0x44 V333
0x3b8: V352 = 0x20
0x3ba: V353 = 0x40
0x3bc: V354 = M[0x40]
0x3bf: V355 = SUB V351 V354
0x3c1: V356 = 0x0
0x3c5: V357 = EXTCODESIZE V325
0x3c6: V358 = ISZERO V357
0x3c7: V359 = ISZERO V358
0x3c8: V360 = 0x3d0
0x3cb: JUMPI 0x3d0 V359
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V325, 0x40c10f19, V351, 0x20, V354, V355, V354, 0x0, V325]
Exit stack: [V12, S5, S4, S3, S2, S1, V325, 0x40c10f19, V351, 0x20, V354, V355, V354, 0x0, V325]

================================

Block 0x3cc
[0x3cc:0x3cf]
---
Predecessors: [0x364]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
---
0x3cc: V361 = 0x0
0x3cf: REVERT 0x0 0x0
---
Entry stack: [V12, S13, S12, S11, S10, S9, V325, 0x40c10f19, V351, 0x20, V354, V355, V354, 0x0, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, V325, 0x40c10f19, V351, 0x20, V354, V355, V354, 0x0, V325]

================================

Block 0x3d0
[0x3d0:0x3dc]
---
Predecessors: [0x364]
Successors: [0x3dd, 0x3e1]
---
0x3d0 JUMPDEST
0x3d1 PUSH2 0x2c6
0x3d4 GAS
0x3d5 SUB
0x3d6 CALL
0x3d7 ISZERO
0x3d8 ISZERO
0x3d9 PUSH2 0x3e1
0x3dc JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V362 = 0x2c6
0x3d4: V363 = GAS
0x3d5: V364 = SUB V363 0x2c6
0x3d6: V365 = CALL V364 V325 0x0 V354 V355 V354 0x20
0x3d7: V366 = ISZERO V365
0x3d8: V367 = ISZERO V366
0x3d9: V368 = 0x3e1
0x3dc: JUMPI 0x3e1 V367
---
Entry stack: [V12, S13, S12, S11, S10, S9, V325, 0x40c10f19, V351, 0x20, V354, V355, V354, 0x0, V325]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, V325, 0x40c10f19, V351]

================================

Block 0x3dd
[0x3dd:0x3e0]
---
Predecessors: [0x3d0]
Successors: []
---
0x3dd PUSH1 0x0
0x3df DUP1
0x3e0 REVERT
---
0x3dd: V369 = 0x0
0x3e0: REVERT 0x0 0x0
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]

================================

Block 0x3e1
[0x3e1:0x469]
---
Predecessors: [0x3d0]
Successors: [0x46a, 0x46e]
---
0x3e1 JUMPDEST
0x3e2 POP
0x3e3 POP
0x3e4 POP
0x3e5 PUSH1 0x40
0x3e7 MLOAD
0x3e8 DUP1
0x3e9 MLOAD
0x3ea SWAP1
0x3eb POP
0x3ec POP
0x3ed DUP3
0x3ee PUSH1 0x1
0x3f0 PUSH1 0xa0
0x3f2 PUSH1 0x2
0x3f4 EXP
0x3f5 SUB
0x3f6 AND
0x3f7 CALLER
0x3f8 PUSH1 0x1
0x3fa PUSH1 0xa0
0x3fc PUSH1 0x2
0x3fe EXP
0x3ff SUB
0x400 AND
0x401 PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x422 DUP5
0x423 DUP5
0x424 PUSH1 0x40
0x426 MLOAD
0x427 SWAP2
0x428 DUP3
0x429 MSTORE
0x42a PUSH1 0x20
0x42c DUP3
0x42d ADD
0x42e MSTORE
0x42f PUSH1 0x40
0x431 SWAP1
0x432 DUP2
0x433 ADD
0x434 SWAP1
0x435 MLOAD
0x436 DUP1
0x437 SWAP2
0x438 SUB
0x439 SWAP1
0x43a LOG3
0x43b PUSH1 0x4
0x43d SLOAD
0x43e PUSH1 0x1
0x440 PUSH1 0xa0
0x442 PUSH1 0x2
0x444 EXP
0x445 SUB
0x446 AND
0x447 CALLVALUE
0x448 DUP1
0x449 ISZERO
0x44a PUSH2 0x8fc
0x44d MUL
0x44e SWAP1
0x44f PUSH1 0x40
0x451 MLOAD
0x452 PUSH1 0x0
0x454 PUSH1 0x40
0x456 MLOAD
0x457 DUP1
0x458 DUP4
0x459 SUB
0x45a DUP2
0x45b DUP6
0x45c DUP9
0x45d DUP9
0x45e CALL
0x45f SWAP4
0x460 POP
0x461 POP
0x462 POP
0x463 POP
0x464 ISZERO
0x465 ISZERO
0x466 PUSH2 0x46e
0x469 JUMPI
---
0x3e1: JUMPDEST 
0x3e5: V370 = 0x40
0x3e7: V371 = M[0x40]
0x3e9: V372 = M[V371]
0x3ee: V373 = 0x1
0x3f0: V374 = 0xa0
0x3f2: V375 = 0x2
0x3f4: V376 = EXP 0x2 0xa0
0x3f5: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f6: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x3f7: V379 = CALLER
0x3f8: V380 = 0x1
0x3fa: V381 = 0xa0
0x3fc: V382 = 0x2
0x3fe: V383 = EXP 0x2 0xa0
0x3ff: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x400: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x401: V386 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x424: V387 = 0x40
0x426: V388 = M[0x40]
0x429: M[V388] = S4
0x42a: V389 = 0x20
0x42d: V390 = ADD V388 0x20
0x42e: M[V390] = S3
0x42f: V391 = 0x40
0x433: V392 = ADD 0x40 V388
0x435: V393 = M[0x40]
0x438: V394 = SUB V392 V393
0x43a: LOG V393 V394 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V385 V378
0x43b: V395 = 0x4
0x43d: V396 = S[0x4]
0x43e: V397 = 0x1
0x440: V398 = 0xa0
0x442: V399 = 0x2
0x444: V400 = EXP 0x2 0xa0
0x445: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x447: V403 = CALLVALUE
0x449: V404 = ISZERO V403
0x44a: V405 = 0x8fc
0x44d: V406 = MUL 0x8fc V404
0x44f: V407 = 0x40
0x451: V408 = M[0x40]
0x452: V409 = 0x0
0x454: V410 = 0x40
0x456: V411 = M[0x40]
0x459: V412 = SUB V408 V411
0x45e: V413 = CALL V406 V402 V403 V411 V412 V411 0x0
0x464: V414 = ISZERO V413
0x465: V415 = ISZERO V414
0x466: V416 = 0x46e
0x469: JUMPI 0x46e V415
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, S7, S6, S5, S4, S3]

================================

Block 0x46a
[0x46a:0x46d]
---
Predecessors: [0x3e1]
Successors: []
---
0x46a PUSH1 0x0
0x46c DUP1
0x46d REVERT
---
0x46a: V417 = 0x0
0x46d: REVERT 0x0 0x0
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x46e
[0x46e:0x46e]
---
Predecessors: [0x3e1]
Successors: [0x46f]
---
0x46e JUMPDEST
---
0x46e: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x46f
[0x46f:0x46f]
---
Predecessors: [0x46e]
Successors: [0x470]
---
0x46f JUMPDEST
---
0x46f: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x470
[0x470:0x474]
---
Predecessors: [0x46f]
Successors: [0xbe]
---
0x470 JUMPDEST
0x471 POP
0x472 POP
0x473 POP
0x474 JUMP
---
0x470: JUMPDEST 
0x474: JUMP S3
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S4]

================================

Block 0x475
[0x475:0x47a]
---
Predecessors: [0xcc]
Successors: [0xd4]
---
0x475 JUMPDEST
0x476 PUSH1 0x5
0x478 SLOAD
0x479 DUP2
0x47a JUMP
---
0x475: JUMPDEST 
0x476: V418 = 0x5
0x478: V419 = S[0x5]
0x47a: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: [S0, V419]
Exit stack: [V12, 0xd4, V419]

================================

Block 0x47b
[0x47b:0x480]
---
Predecessors: [0xf1]
Successors: [0xd4]
---
0x47b JUMPDEST
0x47c PUSH1 0x6
0x47e SLOAD
0x47f DUP2
0x480 JUMP
---
0x47b: JUMPDEST 
0x47c: V420 = 0x6
0x47e: V421 = S[0x6]
0x480: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: [S0, V421]
Exit stack: [V12, 0xd4, V421]

================================

Block 0x481
[0x481:0x486]
---
Predecessors: [0x116]
Successors: [0xd4]
---
0x481 JUMPDEST
0x482 PUSH1 0x9
0x484 SLOAD
0x485 DUP2
0x486 JUMP
---
0x481: JUMPDEST 
0x482: V422 = 0x9
0x484: V423 = S[0x9]
0x486: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: [S0, V423]
Exit stack: [V12, 0xd4, V423]

================================

Block 0x487
[0x487:0x495]
---
Predecessors: [0x13b]
Successors: [0x143]
---
0x487 JUMPDEST
0x488 PUSH1 0x0
0x48a SLOAD
0x48b PUSH1 0x1
0x48d PUSH1 0xa0
0x48f PUSH1 0x2
0x491 EXP
0x492 SUB
0x493 AND
0x494 DUP2
0x495 JUMP
---
0x487: JUMPDEST 
0x488: V424 = 0x0
0x48a: V425 = S[0x0]
0x48b: V426 = 0x1
0x48d: V427 = 0xa0
0x48f: V428 = 0x2
0x491: V429 = EXP 0x2 0xa0
0x492: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x493: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x495: JUMP 0x143
---
Entry stack: [V12, 0x143]
Stack pops: 1
Stack additions: [S0, V431]
Exit stack: [V12, 0x143, V431]

================================

Block 0x496
[0x496:0x4ac]
---
Predecessors: [0x16a]
Successors: [0x4ad, 0x4b1]
---
0x496 JUMPDEST
0x497 PUSH1 0x0
0x499 SLOAD
0x49a CALLER
0x49b PUSH1 0x1
0x49d PUSH1 0xa0
0x49f PUSH1 0x2
0x4a1 EXP
0x4a2 SUB
0x4a3 SWAP1
0x4a4 DUP2
0x4a5 AND
0x4a6 SWAP2
0x4a7 AND
0x4a8 EQ
0x4a9 PUSH2 0x4b1
0x4ac JUMPI
---
0x496: JUMPDEST 
0x497: V432 = 0x0
0x499: V433 = S[0x0]
0x49a: V434 = CALLER
0x49b: V435 = 0x1
0x49d: V436 = 0xa0
0x49f: V437 = 0x2
0x4a1: V438 = EXP 0x2 0xa0
0x4a2: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a5: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x4a7: V441 = AND V433 0xffffffffffffffffffffffffffffffffffffffff
0x4a8: V442 = EQ V441 V440
0x4a9: V443 = 0x4b1
0x4ac: JUMPI 0x4b1 V442
---
Entry stack: [V12, 0xbe]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe]

================================

Block 0x4ad
[0x4ad:0x4b0]
---
Predecessors: [0x496]
Successors: []
---
0x4ad PUSH1 0x0
0x4af DUP1
0x4b0 REVERT
---
0x4ad: V444 = 0x0
0x4b0: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbe]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe]

================================

Block 0x4b1
[0x4b1:0x4b8]
---
Predecessors: [0x496]
Successors: [0x586]
---
0x4b1 JUMPDEST
0x4b2 PUSH2 0x4b9
0x4b5 PUSH2 0x586
0x4b8 JUMP
---
0x4b1: JUMPDEST 
0x4b2: V445 = 0x4b9
0x4b5: V446 = 0x586
0x4b8: JUMP 0x586
---
Entry stack: [V12, 0xbe]
Stack pops: 0
Stack additions: [0x4b9]
Exit stack: [V12, 0xbe, 0x4b9]

================================

Block 0x4b9
[0x4b9:0x4bf]
---
Predecessors: [0x5a4]
Successors: [0x4c0, 0x4c4]
---
0x4b9 JUMPDEST
0x4ba ISZERO
0x4bb ISZERO
0x4bc PUSH2 0x4c4
0x4bf JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V447 = ISZERO S0
0x4bb: V448 = ISZERO V447
0x4bc: V449 = 0x4c4
0x4bf: JUMPI 0x4c4 V448
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x4c0
[0x4c0:0x4c3]
---
Predecessors: [0x4b9]
Successors: []
---
0x4c0 PUSH1 0x0
0x4c2 DUP1
0x4c3 REVERT
---
0x4c0: V450 = 0x0
0x4c3: REVERT 0x0 0x0
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x4c4
[0x4c4:0x516]
---
Predecessors: [0x4b9]
Successors: [0x517, 0x51b]
---
0x4c4 JUMPDEST
0x4c5 PUSH1 0x1
0x4c7 SLOAD
0x4c8 PUSH1 0x0
0x4ca SLOAD
0x4cb PUSH1 0x1
0x4cd PUSH1 0xa0
0x4cf PUSH1 0x2
0x4d1 EXP
0x4d2 SUB
0x4d3 SWAP2
0x4d4 DUP3
0x4d5 AND
0x4d6 SWAP2
0x4d7 PUSH4 0xf2fde38b
0x4dc SWAP2
0x4dd AND
0x4de PUSH1 0x40
0x4e0 MLOAD
0x4e1 PUSH1 0xe0
0x4e3 PUSH1 0x2
0x4e5 EXP
0x4e6 PUSH4 0xffffffff
0x4eb DUP5
0x4ec AND
0x4ed MUL
0x4ee DUP2
0x4ef MSTORE
0x4f0 PUSH1 0x1
0x4f2 PUSH1 0xa0
0x4f4 PUSH1 0x2
0x4f6 EXP
0x4f7 SUB
0x4f8 SWAP1
0x4f9 SWAP2
0x4fa AND
0x4fb PUSH1 0x4
0x4fd DUP3
0x4fe ADD
0x4ff MSTORE
0x500 PUSH1 0x24
0x502 ADD
0x503 PUSH1 0x0
0x505 PUSH1 0x40
0x507 MLOAD
0x508 DUP1
0x509 DUP4
0x50a SUB
0x50b DUP2
0x50c PUSH1 0x0
0x50e DUP8
0x50f DUP1
0x510 EXTCODESIZE
0x511 ISZERO
0x512 ISZERO
0x513 PUSH2 0x51b
0x516 JUMPI
---
0x4c4: JUMPDEST 
0x4c5: V451 = 0x1
0x4c7: V452 = S[0x1]
0x4c8: V453 = 0x0
0x4ca: V454 = S[0x0]
0x4cb: V455 = 0x1
0x4cd: V456 = 0xa0
0x4cf: V457 = 0x2
0x4d1: V458 = EXP 0x2 0xa0
0x4d2: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d5: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x4d7: V461 = 0xf2fde38b
0x4dd: V462 = AND V454 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V463 = 0x40
0x4e0: V464 = M[0x40]
0x4e1: V465 = 0xe0
0x4e3: V466 = 0x2
0x4e5: V467 = EXP 0x2 0xe0
0x4e6: V468 = 0xffffffff
0x4ec: V469 = AND 0xf2fde38b 0xffffffff
0x4ed: V470 = MUL 0xf2fde38b 0x100000000000000000000000000000000000000000000000000000000
0x4ef: M[V464] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4f0: V471 = 0x1
0x4f2: V472 = 0xa0
0x4f4: V473 = 0x2
0x4f6: V474 = EXP 0x2 0xa0
0x4f7: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fa: V476 = AND V462 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V477 = 0x4
0x4fe: V478 = ADD V464 0x4
0x4ff: M[V478] = V476
0x500: V479 = 0x24
0x502: V480 = ADD 0x24 V464
0x503: V481 = 0x0
0x505: V482 = 0x40
0x507: V483 = M[0x40]
0x50a: V484 = SUB V480 V483
0x50c: V485 = 0x0
0x510: V486 = EXTCODESIZE V460
0x511: V487 = ISZERO V486
0x512: V488 = ISZERO V487
0x513: V489 = 0x51b
0x516: JUMPI 0x51b V488
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: [V460, 0xf2fde38b, V480, 0x0, V483, V484, V483, 0x0, V460]
Exit stack: [V12, S0, V460, 0xf2fde38b, V480, 0x0, V483, V484, V483, 0x0, V460]

================================

Block 0x517
[0x517:0x51a]
---
Predecessors: [0x4c4]
Successors: []
---
0x517 PUSH1 0x0
0x519 DUP1
0x51a REVERT
---
0x517: V490 = 0x0
0x51a: REVERT 0x0 0x0
---
Entry stack: [V12, S9, V460, 0xf2fde38b, V480, 0x0, V483, V484, V483, 0x0, V460]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, V460, 0xf2fde38b, V480, 0x0, V483, V484, V483, 0x0, V460]

================================

Block 0x51b
[0x51b:0x527]
---
Predecessors: [0x4c4]
Successors: [0x528, 0x52c]
---
0x51b JUMPDEST
0x51c PUSH2 0x2c6
0x51f GAS
0x520 SUB
0x521 CALL
0x522 ISZERO
0x523 ISZERO
0x524 PUSH2 0x52c
0x527 JUMPI
---
0x51b: JUMPDEST 
0x51c: V491 = 0x2c6
0x51f: V492 = GAS
0x520: V493 = SUB V492 0x2c6
0x521: V494 = CALL V493 V460 0x0 V483 V484 V483 0x0
0x522: V495 = ISZERO V494
0x523: V496 = ISZERO V495
0x524: V497 = 0x52c
0x527: JUMPI 0x52c V496
---
Entry stack: [V12, S9, V460, 0xf2fde38b, V480, 0x0, V483, V484, V483, 0x0, V460]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S9, V460, 0xf2fde38b, V480]

================================

Block 0x528
[0x528:0x52b]
---
Predecessors: [0x51b]
Successors: []
---
0x528 PUSH1 0x0
0x52a DUP1
0x52b REVERT
---
0x528: V498 = 0x0
0x52b: REVERT 0x0 0x0
---
Entry stack: [V12, S3, S2, 0xf2fde38b, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, 0xf2fde38b, S0]

================================

Block 0x52c
[0x52c:0x55b]
---
Predecessors: [0x51b]
Successors: [0x55c]
---
0x52c JUMPDEST
0x52d POP
0x52e POP
0x52f POP
0x530 PUSH32 0xfd12c90a5e51aa8a18eeaafb67ad4e7606ec2db88b5b57077a40c5712cbfb2b7
0x551 PUSH1 0x40
0x553 MLOAD
0x554 PUSH1 0x40
0x556 MLOAD
0x557 DUP1
0x558 SWAP2
0x559 SUB
0x55a SWAP1
0x55b LOG1
---
0x52c: JUMPDEST 
0x530: V499 = 0xfd12c90a5e51aa8a18eeaafb67ad4e7606ec2db88b5b57077a40c5712cbfb2b7
0x551: V500 = 0x40
0x553: V501 = M[0x40]
0x554: V502 = 0x40
0x556: V503 = M[0x40]
0x559: V504 = SUB V501 V503
0x55b: LOG V503 V504 0xfd12c90a5e51aa8a18eeaafb67ad4e7606ec2db88b5b57077a40c5712cbfb2b7
---
Entry stack: [V12, S3, S2, 0xf2fde38b, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S3]

================================

Block 0x55c
[0x55c:0x55c]
---
Predecessors: [0x52c]
Successors: [0x55d]
---
0x55c JUMPDEST
---
0x55c: JUMPDEST 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x55d
[0x55d:0x55e]
---
Predecessors: [0x55c]
Successors: [0xbe]
---
0x55d JUMPDEST
0x55e JUMP
---
0x55d: JUMPDEST 
0x55e: JUMP S0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x55f
[0x55f:0x564]
---
Predecessors: [0x17f]
Successors: [0xd4]
---
0x55f JUMPDEST
0x560 PUSH1 0x3
0x562 SLOAD
0x563 DUP2
0x564 JUMP
---
0x55f: JUMPDEST 
0x560: V505 = 0x3
0x562: V506 = S[0x3]
0x564: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: [S0, V506]
Exit stack: [V12, 0xd4, V506]

================================

Block 0x565
[0x565:0x56a]
---
Predecessors: [0x1a4]
Successors: [0xd4]
---
0x565 JUMPDEST
0x566 PUSH1 0x7
0x568 SLOAD
0x569 DUP2
0x56a JUMP
---
0x565: JUMPDEST 
0x566: V507 = 0x7
0x568: V508 = S[0x7]
0x56a: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: [S0, V508]
Exit stack: [V12, 0xd4, V508]

================================

Block 0x56b
[0x56b:0x570]
---
Predecessors: [0x1c9]
Successors: [0xd4]
---
0x56b JUMPDEST
0x56c PUSH1 0x8
0x56e SLOAD
0x56f DUP2
0x570 JUMP
---
0x56b: JUMPDEST 
0x56c: V509 = 0x8
0x56e: V510 = S[0x8]
0x570: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: [S0, V510]
Exit stack: [V12, 0xd4, V510]

================================

Block 0x571
[0x571:0x576]
---
Predecessors: [0x1ee]
Successors: [0xd4]
---
0x571 JUMPDEST
0x572 PUSH1 0x2
0x574 SLOAD
0x575 DUP2
0x576 JUMP
---
0x571: JUMPDEST 
0x572: V511 = 0x2
0x574: V512 = S[0x2]
0x576: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: [S0, V512]
Exit stack: [V12, 0xd4, V512]

================================

Block 0x577
[0x577:0x585]
---
Predecessors: [0x213]
Successors: [0x143]
---
0x577 JUMPDEST
0x578 PUSH1 0x4
0x57a SLOAD
0x57b PUSH1 0x1
0x57d PUSH1 0xa0
0x57f PUSH1 0x2
0x581 EXP
0x582 SUB
0x583 AND
0x584 DUP2
0x585 JUMP
---
0x577: JUMPDEST 
0x578: V513 = 0x4
0x57a: V514 = S[0x4]
0x57b: V515 = 0x1
0x57d: V516 = 0xa0
0x57f: V517 = 0x2
0x581: V518 = EXP 0x2 0xa0
0x582: V519 = SUB 0x10000000000000000000000000000000000000000 0x1
0x583: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x585: JUMP 0x143
---
Entry stack: [V12, 0x143]
Stack pops: 1
Stack additions: [S0, V520]
Exit stack: [V12, 0x143, V520]

================================

Block 0x586
[0x586:0x59e]
---
Predecessors: [0x258, 0x4b1]
Successors: [0x59f, 0x5a1]
---
0x586 JUMPDEST
0x587 PUSH1 0x3
0x589 SLOAD
0x58a PUSH1 0x8
0x58c SLOAD
0x58d PUSH1 0x6
0x58f SLOAD
0x590 PUSH1 0x0
0x592 SWAP3
0x593 TIMESTAMP
0x594 GT
0x595 SWAP2
0x596 SWAP1
0x597 LT
0x598 ISZERO
0x599 DUP2
0x59a DUP1
0x59b PUSH2 0x5a1
0x59e JUMPI
---
0x586: JUMPDEST 
0x587: V521 = 0x3
0x589: V522 = S[0x3]
0x58a: V523 = 0x8
0x58c: V524 = S[0x8]
0x58d: V525 = 0x6
0x58f: V526 = S[0x6]
0x590: V527 = 0x0
0x593: V528 = TIMESTAMP
0x594: V529 = GT V528 V522
0x597: V530 = LT V526 V524
0x598: V531 = ISZERO V530
0x59b: V532 = 0x5a1
0x59e: JUMPI 0x5a1 V529
---
Entry stack: [V12, S1, {0x260, 0x4b9}]
Stack pops: 0
Stack additions: [0x0, V529, V531, V529]
Exit stack: [V12, S1, {0x260, 0x4b9}, 0x0, V529, V531, V529]

================================

Block 0x59f
[0x59f:0x5a0]
---
Predecessors: [0x586]
Successors: [0x5a1]
---
0x59f POP
0x5a0 DUP1
---
0x59f: NOP 
---
Entry stack: [V12, S5, {0x260, 0x4b9}, 0x0, V529, V531, V529]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V12, S5, {0x260, 0x4b9}, 0x0, V529, V531, V531]

================================

Block 0x5a1
[0x5a1:0x5a3]
---
Predecessors: [0x586, 0x59f]
Successors: [0x5a4]
---
0x5a1 JUMPDEST
0x5a2 SWAP3
0x5a3 POP
---
0x5a1: JUMPDEST 
---
Entry stack: [V12, S5, {0x260, 0x4b9}, 0x0, V529, V531, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V12, S5, {0x260, 0x4b9}, S0, V529, V531]

================================

Block 0x5a4
[0x5a4:0x5a8]
---
Predecessors: [0x5a1]
Successors: [0x260, 0x4b9]
---
0x5a4 JUMPDEST
0x5a5 POP
0x5a6 POP
0x5a7 SWAP1
0x5a8 JUMP
---
0x5a4: JUMPDEST 
0x5a8: JUMP {0x260, 0x4b9}
---
Entry stack: [V12, S4, {0x260, 0x4b9}, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, S4, S2]

================================

Block 0x5a9
[0x5a9:0x5bf]
---
Predecessors: [0x27f]
Successors: [0x5c0, 0x5c4]
---
0x5a9 JUMPDEST
0x5aa PUSH1 0x0
0x5ac SLOAD
0x5ad CALLER
0x5ae PUSH1 0x1
0x5b0 PUSH1 0xa0
0x5b2 PUSH1 0x2
0x5b4 EXP
0x5b5 SUB
0x5b6 SWAP1
0x5b7 DUP2
0x5b8 AND
0x5b9 SWAP2
0x5ba AND
0x5bb EQ
0x5bc PUSH2 0x5c4
0x5bf JUMPI
---
0x5a9: JUMPDEST 
0x5aa: V533 = 0x0
0x5ac: V534 = S[0x0]
0x5ad: V535 = CALLER
0x5ae: V536 = 0x1
0x5b0: V537 = 0xa0
0x5b2: V538 = 0x2
0x5b4: V539 = EXP 0x2 0xa0
0x5b5: V540 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b8: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V535
0x5ba: V542 = AND V534 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V543 = EQ V542 V541
0x5bc: V544 = 0x5c4
0x5bf: JUMPI 0x5c4 V543
---
Entry stack: [V12, 0xbe, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V230]

================================

Block 0x5c0
[0x5c0:0x5c3]
---
Predecessors: [0x5a9]
Successors: []
---
0x5c0 PUSH1 0x0
0x5c2 DUP1
0x5c3 REVERT
---
0x5c0: V545 = 0x0
0x5c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbe, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V230]

================================

Block 0x5c4
[0x5c4:0x5d3]
---
Predecessors: [0x5a9]
Successors: [0x5d4, 0x5fc]
---
0x5c4 JUMPDEST
0x5c5 PUSH1 0x1
0x5c7 PUSH1 0xa0
0x5c9 PUSH1 0x2
0x5cb EXP
0x5cc SUB
0x5cd DUP2
0x5ce AND
0x5cf ISZERO
0x5d0 PUSH2 0x5fc
0x5d3 JUMPI
---
0x5c4: JUMPDEST 
0x5c5: V546 = 0x1
0x5c7: V547 = 0xa0
0x5c9: V548 = 0x2
0x5cb: V549 = EXP 0x2 0xa0
0x5cc: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ce: V551 = AND V230 0xffffffffffffffffffffffffffffffffffffffff
0x5cf: V552 = ISZERO V551
0x5d0: V553 = 0x5fc
0x5d3: JUMPI 0x5fc V552
---
Entry stack: [V12, 0xbe, V230]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xbe, V230]

================================

Block 0x5d4
[0x5d4:0x5fb]
---
Predecessors: [0x5c4]
Successors: [0x5fc]
---
0x5d4 PUSH1 0x0
0x5d6 DUP1
0x5d7 SLOAD
0x5d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ed NOT
0x5ee AND
0x5ef PUSH1 0x1
0x5f1 PUSH1 0xa0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 SUB
0x5f7 DUP4
0x5f8 AND
0x5f9 OR
0x5fa SWAP1
0x5fb SSTORE
---
0x5d4: V554 = 0x0
0x5d7: V555 = S[0x0]
0x5d8: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ed: V557 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5ee: V558 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V555
0x5ef: V559 = 0x1
0x5f1: V560 = 0xa0
0x5f3: V561 = 0x2
0x5f5: V562 = EXP 0x2 0xa0
0x5f6: V563 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f8: V564 = AND V230 0xffffffffffffffffffffffffffffffffffffffff
0x5f9: V565 = OR V564 V558
0x5fb: S[0x0] = V565
---
Entry stack: [V12, 0xbe, V230]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xbe, V230]

================================

Block 0x5fc
[0x5fc:0x5fc]
---
Predecessors: [0x5c4, 0x5d4]
Successors: [0x5fd]
---
0x5fc JUMPDEST
---
0x5fc: JUMPDEST 
---
Entry stack: [V12, 0xbe, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V230]

================================

Block 0x5fd
[0x5fd:0x5fd]
---
Predecessors: [0x5fc]
Successors: [0x5fe]
---
0x5fd JUMPDEST
---
0x5fd: JUMPDEST 
---
Entry stack: [V12, 0xbe, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbe, V230]

================================

Block 0x5fe
[0x5fe:0x600]
---
Predecessors: [0x5fd]
Successors: [0xbe]
---
0x5fe JUMPDEST
0x5ff POP
0x600 JUMP
---
0x5fe: JUMPDEST 
0x600: JUMP 0xbe
---
Entry stack: [V12, 0xbe, V230]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x601
[0x601:0x60f]
---
Predecessors: [0x2a0]
Successors: [0x143]
---
0x601 JUMPDEST
0x602 PUSH1 0x1
0x604 SLOAD
0x605 PUSH1 0x1
0x607 PUSH1 0xa0
0x609 PUSH1 0x2
0x60b EXP
0x60c SUB
0x60d AND
0x60e DUP2
0x60f JUMP
---
0x601: JUMPDEST 
0x602: V566 = 0x1
0x604: V567 = S[0x1]
0x605: V568 = 0x1
0x607: V569 = 0xa0
0x609: V570 = 0x2
0x60b: V571 = EXP 0x2 0xa0
0x60c: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60d: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x60f: JUMP 0x143
---
Entry stack: [V12, 0x143]
Stack pops: 1
Stack additions: [S0, V573]
Exit stack: [V12, 0x143, V573]

================================

Block 0x610
[0x610:0x61d]
---
Predecessors: [0x2f6, 0x34e]
Successors: [0x61e, 0x61f]
---
0x610 JUMPDEST
0x611 PUSH1 0x0
0x613 DUP3
0x614 DUP3
0x615 ADD
0x616 DUP4
0x617 DUP2
0x618 LT
0x619 ISZERO
0x61a PUSH2 0x61f
0x61d JUMPI
---
0x610: JUMPDEST 
0x611: V574 = 0x0
0x615: V575 = ADD S0 S1
0x618: V576 = LT V575 S1
0x619: V577 = ISZERO V576
0x61a: V578 = 0x61f
0x61d: JUMPI 0x61f V577
---
Entry stack: [V12, S7, S6, S5, S4, S3, {0x30c, 0x364}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V575]
Exit stack: [V12, S7, S6, S5, S4, S3, {0x30c, 0x364}, S1, S0, 0x0, V575]

================================

Block 0x61e
[0x61e:0x61e]
---
Predecessors: [0x610]
Successors: []
---
0x61e INVALID
---
0x61e: INVALID 
---
Entry stack: [V12, S9, S8, S7, S6, S5, {0x30c, 0x364}, S3, S2, 0x0, V575]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, {0x30c, 0x364}, S3, S2, 0x0, V575]

================================

Block 0x61f
[0x61f:0x622]
---
Predecessors: [0x610, 0x646]
Successors: [0x623]
---
0x61f JUMPDEST
0x620 DUP1
0x621 SWAP2
0x622 POP
---
0x61f: JUMPDEST 
---
Entry stack: [V12, S9, S8, S7, S6, S5, {0x30c, 0x343, 0x364}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, {0x30c, 0x343, 0x364}, S3, S2, S0, S0]

================================

Block 0x623
[0x623:0x629]
---
Predecessors: [0x61f]
Successors: [0x30c, 0x343, 0x364]
---
0x623 JUMPDEST
0x624 POP
0x625 SWAP3
0x626 SWAP2
0x627 POP
0x628 POP
0x629 JUMP
---
0x623: JUMPDEST 
0x629: JUMP {0x30c, 0x343, 0x364}
---
Entry stack: [V12, S9, S8, S7, S6, S5, {0x30c, 0x343, 0x364}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S9, S8, S7, S6, S5, S1]

================================

Block 0x62a
[0x62a:0x636]
---
Predecessors: [0x32c]
Successors: [0x637, 0x646]
---
0x62a JUMPDEST
0x62b PUSH1 0x0
0x62d DUP3
0x62e DUP3
0x62f MUL
0x630 DUP4
0x631 ISZERO
0x632 DUP1
0x633 PUSH2 0x646
0x636 JUMPI
---
0x62a: JUMPDEST 
0x62b: V579 = 0x0
0x62f: V580 = MUL V299 V300
0x631: V581 = ISZERO V300
0x633: V582 = 0x646
0x636: JUMPI 0x646 V581
---
Entry stack: [V12, S6, S5, V300, S3, 0x343, V300, V299]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V580, V581]
Exit stack: [V12, S6, S5, V300, S3, 0x343, V300, V299, 0x0, V580, V581]

================================

Block 0x637
[0x637:0x641]
---
Predecessors: [0x62a]
Successors: [0x642, 0x643]
---
0x637 POP
0x638 DUP3
0x639 DUP5
0x63a DUP3
0x63b DUP2
0x63c ISZERO
0x63d ISZERO
0x63e PUSH2 0x643
0x641 JUMPI
---
0x63c: V583 = ISZERO V300
0x63d: V584 = ISZERO V583
0x63e: V585 = 0x643
0x641: JUMPI 0x643 V584
---
Entry stack: [V12, S9, S8, V300, S6, 0x343, V300, V299, 0x0, V580, V581]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, S9, S8, V300, S6, 0x343, V300, V299, 0x0, V580, V299, V300, V580]

================================

Block 0x642
[0x642:0x642]
---
Predecessors: [0x637]
Successors: []
---
0x642 INVALID
---
0x642: INVALID 
---
Entry stack: [V12, S11, S10, V300, S8, 0x343, V300, V299, 0x0, V580, V299, V300, V580]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, V300, S8, 0x343, V300, V299, 0x0, V580, V299, V300, V580]

================================

Block 0x643
[0x643:0x645]
---
Predecessors: [0x637]
Successors: [0x646]
---
0x643 JUMPDEST
0x644 DIV
0x645 EQ
---
0x643: JUMPDEST 
0x644: V586 = DIV V580 V300
0x645: V587 = EQ V586 V299
---
Entry stack: [V12, S11, S10, V300, S8, 0x343, V300, V299, 0x0, V580, V299, V300, V580]
Stack pops: 3
Stack additions: [V587]
Exit stack: [V12, S11, S10, V300, S8, 0x343, V300, V299, 0x0, V580, V587]

================================

Block 0x646
[0x646:0x64c]
---
Predecessors: [0x62a, 0x643]
Successors: [0x61f, 0x64d]
---
0x646 JUMPDEST
0x647 ISZERO
0x648 ISZERO
0x649 PUSH2 0x61f
0x64c JUMPI
---
0x646: JUMPDEST 
0x647: V588 = ISZERO S0
0x648: V589 = ISZERO V588
0x649: V590 = 0x61f
0x64c: JUMPI 0x61f V589
---
Entry stack: [V12, S9, S8, V300, S6, 0x343, V300, V299, 0x0, V580, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, V300, S6, 0x343, V300, V299, 0x0, V580]

================================

Block 0x64d
[0x64d:0x64d]
---
Predecessors: [0x646]
Successors: []
---
0x64d INVALID
---
0x64d: INVALID 
---
Entry stack: [V12, S8, S7, V300, S5, 0x343, V300, V299, 0x0, V580]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, V300, S5, 0x343, V300, V299, 0x0, V580]

================================

Block 0x64e
[0x64e:0x651]
---
Predecessors: []
Successors: [0x652]
---
0x64e JUMPDEST
0x64f DUP1
0x650 SWAP2
0x651 POP
---
0x64e: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x652
[0x652:0x658]
---
Predecessors: [0x64e]
Successors: []
Has unresolved jump.
---
0x652 JUMPDEST
0x653 POP
0x654 SWAP3
0x655 SWAP2
0x656 POP
0x657 POP
0x658 JUMP
---
0x652: JUMPDEST 
0x658: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x659
[0x659:0x666]
---
Predecessors: [0x343]
Successors: [0x667, 0x675]
---
0x659 JUMPDEST
0x65a PUSH1 0x0
0x65c PUSH1 0x2
0x65e PUSH1 0x9
0x660 SLOAD
0x661 LT
0x662 ISZERO
0x663 PUSH2 0x675
0x666 JUMPI
---
0x659: JUMPDEST 
0x65a: V591 = 0x0
0x65c: V592 = 0x2
0x65e: V593 = 0x9
0x660: V594 = S[0x9]
0x661: V595 = LT V594 0x2
0x662: V596 = ISZERO V595
0x663: V597 = 0x675
0x666: JUMPI 0x675 V596
---
Entry stack: [V12, S6, S5, S4, S3, S2, 0x34e, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, S6, S5, S4, S3, S2, 0x34e, S0, 0x0]

================================

Block 0x667
[0x667:0x66c]
---
Predecessors: [0x659]
Successors: [0x66d]
---
0x667 PUSH1 0xa
0x669 PUSH1 0x3
0x66b DUP4
0x66c MUL
---
0x667: V598 = 0xa
0x669: V599 = 0x3
0x66c: V600 = MUL S1 0x3
---
Entry stack: [V12, S7, S6, S5, S4, S3, 0x34e, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xa, V600]
Exit stack: [V12, S7, S6, S5, S4, S3, 0x34e, S1, 0x0, 0xa, V600]

================================

Block 0x66d
[0x66d:0x674]
---
Predecessors: [0x667, 0x675]
Successors: [0x681]
---
0x66d JUMPDEST
0x66e DIV
0x66f SWAP1
0x670 POP
0x671 PUSH2 0x681
0x674 JUMP
---
0x66d: JUMPDEST 
0x66e: V601 = DIV S0 {0x4, 0xa}
0x671: V602 = 0x681
0x674: JUMP 0x681
---
Entry stack: [V12, S9, S8, S7, S6, S5, 0x34e, S3, 0x0, {0x4, 0xa}, S0]
Stack pops: 3
Stack additions: [V601]
Exit stack: [V12, S9, S8, S7, S6, S5, 0x34e, S3, V601]

================================

Block 0x675
[0x675:0x67c]
---
Predecessors: [0x659]
Successors: [0x66d]
---
0x675 JUMPDEST
0x676 PUSH1 0x4
0x678 DUP3
0x679 PUSH2 0x66d
0x67c JUMP
---
0x675: JUMPDEST 
0x676: V603 = 0x4
0x679: V604 = 0x66d
0x67c: JUMP 0x66d
---
Entry stack: [V12, S7, S6, S5, S4, S3, 0x34e, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x4, S1]
Exit stack: [V12, S7, S6, S5, S4, S3, 0x34e, S1, 0x0, 0x4, S1]

================================

Block 0x67d
[0x67d:0x680]
---
Predecessors: []
Successors: [0x681]
---
0x67d JUMPDEST
0x67e DIV
0x67f SWAP1
0x680 POP
---
0x67d: JUMPDEST 
0x67e: V605 = DIV S0 S1
---
Entry stack: []
Stack pops: 3
Stack additions: [V605]
Exit stack: [V605]

================================

Block 0x681
[0x681:0x681]
---
Predecessors: [0x66d, 0x67d]
Successors: [0x682]
---
0x681 JUMPDEST
---
0x681: JUMPDEST 
---
Entry stack: [V12, S7, S6, S5, S4, S3, 0x34e, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, 0x34e, S1, S0]

================================

Block 0x682
[0x682:0x686]
---
Predecessors: [0x681]
Successors: [0x34e]
---
0x682 JUMPDEST
0x683 SWAP2
0x684 SWAP1
0x685 POP
0x686 JUMP
---
0x682: JUMPDEST 
0x686: JUMP 0x34e
---
Entry stack: [V12, S7, S6, S5, S4, S3, 0x34e, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S7, S6, S5, S4, S3, S0]

================================

Block 0x687
[0x687:0x6b2]
---
Predecessors: []
Successors: []
---
0x687 STOP
0x688 LOG1
0x689 PUSH6 0x627a7a723058
0x690 SHA3
0x691 MISSING 0xc6
0x692 MISSING 0xd6
0x693 PUSH16 0xef3d1f13af03106150083fe6e33461c5
0x6a4 MISSING 0xf6
0x6a5 MISSING 0x24
0x6a6 MISSING 0xd0
0x6a7 DUP2
0x6a8 LOG1
0x6a9 MISSING 0xcf
0x6aa SWAP10
0x6ab CREATE
0x6ac SWAP2
0x6ad DUP10
0x6ae MISSING 0x48
0x6af SWAP11
0x6b0 DUP6
0x6b1 STOP
0x6b2 MISSING 0x29
---
0x687: STOP 
0x688: LOG S0 S1 S2
0x689: V606 = 0x627a7a723058
0x690: V607 = SHA3 0x627a7a723058 S3
0x691: MISSING 0xc6
0x692: MISSING 0xd6
0x693: V608 = 0xef3d1f13af03106150083fe6e33461c5
0x6a4: MISSING 0xf6
0x6a5: MISSING 0x24
0x6a6: MISSING 0xd0
0x6a8: LOG S1 S0 S1
0x6a9: MISSING 0xcf
0x6ab: V609 = CREATE S10 S1 S2
0x6ae: MISSING 0x48
0x6b1: STOP 
0x6b2: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V607, 0xef3d1f13af03106150083fe6e33461c5, S11, S4, S3, V609, S5, S6, S7, S8, S9, S0, S11, S5, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x2c4e722e
Entry block: 0xc1
Exit block: 0xd4
Body: 0xc1, 0xc8, 0xcc, 0xd4, 0x475

Function 1:
Public function signature: 0x4042b66f
Entry block: 0xe6
Exit block: 0xd4
Body: 0xd4, 0xe6, 0xed, 0xf1, 0x47b

Function 2:
Public function signature: 0x580c2ae9
Entry block: 0x10b
Exit block: 0xd4
Body: 0xd4, 0x10b, 0x112, 0x116, 0x481

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x130
Exit block: 0x143
Body: 0x130, 0x137, 0x13b, 0x143, 0x487

Function 4:
Public function signature: 0x974654c6
Entry block: 0x15f
Exit block: 0xbf
Body: 0xbe, 0xbf, 0x15f, 0x166, 0x16a, 0x496, 0x4ad, 0x4b1, 0x4b9, 0x4c0, 0x4c4, 0x517, 0x51b, 0x528, 0x52c, 0x55c, 0x55d

Function 5:
Public function signature: 0xa85adeab
Entry block: 0x174
Exit block: 0xd4
Body: 0xd4, 0x174, 0x17b, 0x17f, 0x55f

Function 6:
Public function signature: 0xaaffadf3
Entry block: 0x199
Exit block: 0xd4
Body: 0xd4, 0x199, 0x1a0, 0x1a4, 0x565

Function 7:
Public function signature: 0xb071cbe6
Entry block: 0x1be
Exit block: 0xd4
Body: 0xd4, 0x1be, 0x1c5, 0x1c9, 0x56b

Function 8:
Public function signature: 0xe6fd48bc
Entry block: 0x1e3
Exit block: 0xd4
Body: 0xd4, 0x1e3, 0x1ea, 0x1ee, 0x571

Function 9:
Public function signature: 0xe9edf4cd
Entry block: 0x208
Exit block: 0x143
Body: 0x143, 0x208, 0x20f, 0x213, 0x577

Function 10:
Public function signature: 0xec8ac4d8
Entry block: 0x237
Exit block: 0xbf
Body: 0xbe, 0xbf, 0x237

Function 11:
Public function signature: 0xecb70fb7
Entry block: 0x24d
Exit block: 0x260
Body: 0x24d, 0x254, 0x258, 0x260

Function 12:
Public function signature: 0xf2fde38b
Entry block: 0x274
Exit block: 0xbf
Body: 0xbe, 0xbf, 0x274, 0x27b, 0x27f, 0x5a9, 0x5c0, 0x5c4, 0x5d4, 0x5fc, 0x5fd, 0x5fe

Function 13:
Public function signature: 0xfc0c546a
Entry block: 0x295
Exit block: 0x143
Body: 0x143, 0x295, 0x29c, 0x2a0, 0x601

Function 14:
Public fallback function
Entry block: 0xb4
Exit block: 0xbf
Body: 0xb4, 0xb5, 0xbe, 0xbf

Function 15:
Private function
Entry block: 0x2c4
Exit block: 0x5fe
Body: 0x2c4, 0x2d8, 0x2e7, 0x2f6, 0x30c, 0x317, 0x32c, 0x343, 0x34e, 0x364, 0x3d0, 0x3e1, 0x46e, 0x46f, 0x470, 0x61f, 0x623, 0x62a, 0x637, 0x643, 0x646, 0x659, 0x667, 0x66d, 0x675, 0x681, 0x682

Function 16:
Private function
Entry block: 0x586
Exit block: 0x5a4
Body: 0x586, 0x59f, 0x5a1, 0x5a4

Function 17:
Private function
Entry block: 0x610
Exit block: 0x623
Body: 0x343, 0x34e, 0x364, 0x610, 0x61f, 0x623, 0x659, 0x667, 0x66d, 0x675, 0x681, 0x682

