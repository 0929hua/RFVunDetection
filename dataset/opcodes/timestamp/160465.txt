Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x111]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x111
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x111
0xc: JUMPI 0x111 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x116]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xbdfa0a4
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x116
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xbdfa0a4
0x3b: V13 = EQ V11 0xbdfa0a4
0x3c: V14 = 0x116
0x3f: JUMPI 0x116 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x13d]
---
0x40 DUP1
0x41 PUSH4 0x12fb1520
0x46 EQ
0x47 PUSH2 0x13d
0x4a JUMPI
---
0x41: V15 = 0x12fb1520
0x46: V16 = EQ 0x12fb1520 V11
0x47: V17 = 0x13d
0x4a: JUMPI 0x13d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x14e]
---
0x4b DUP1
0x4c PUSH4 0x1a3d1354
0x51 EQ
0x52 PUSH2 0x14e
0x55 JUMPI
---
0x4c: V18 = 0x1a3d1354
0x51: V19 = EQ 0x1a3d1354 V11
0x52: V20 = 0x14e
0x55: JUMPI 0x14e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x166]
---
0x56 DUP1
0x57 PUSH4 0x2a9f1239
0x5c EQ
0x5d PUSH2 0x166
0x60 JUMPI
---
0x57: V21 = 0x2a9f1239
0x5c: V22 = EQ 0x2a9f1239 V11
0x5d: V23 = 0x166
0x60: JUMPI 0x166 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x191]
---
0x61 DUP1
0x62 PUSH4 0x3714ae13
0x67 EQ
0x68 PUSH2 0x191
0x6b JUMPI
---
0x62: V24 = 0x3714ae13
0x67: V25 = EQ 0x3714ae13 V11
0x68: V26 = 0x191
0x6b: JUMPI 0x191 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1a6]
---
0x6c DUP1
0x6d PUSH4 0x78edeb60
0x72 EQ
0x73 PUSH2 0x1a6
0x76 JUMPI
---
0x6d: V27 = 0x78edeb60
0x72: V28 = EQ 0x78edeb60 V11
0x73: V29 = 0x1a6
0x76: JUMPI 0x1a6 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1bb]
---
0x77 DUP1
0x78 PUSH4 0x81333c29
0x7d EQ
0x7e PUSH2 0x1bb
0x81 JUMPI
---
0x78: V30 = 0x81333c29
0x7d: V31 = EQ 0x81333c29 V11
0x7e: V32 = 0x1bb
0x81: JUMPI 0x1bb V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1ec]
---
0x82 DUP1
0x83 PUSH4 0x8730e34f
0x88 EQ
0x89 PUSH2 0x1ec
0x8c JUMPI
---
0x83: V33 = 0x8730e34f
0x88: V34 = EQ 0x8730e34f V11
0x89: V35 = 0x1ec
0x8c: JUMPI 0x1ec V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x277]
---
0x8d DUP1
0x8e PUSH4 0x8da5cb5b
0x93 EQ
0x94 PUSH2 0x277
0x97 JUMPI
---
0x8e: V36 = 0x8da5cb5b
0x93: V37 = EQ 0x8da5cb5b V11
0x94: V38 = 0x277
0x97: JUMPI 0x277 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x2a8]
---
0x98 DUP1
0x99 PUSH4 0x937d6378
0x9e EQ
0x9f PUSH2 0x2a8
0xa2 JUMPI
---
0x99: V39 = 0x937d6378
0x9e: V40 = EQ 0x937d6378 V11
0x9f: V41 = 0x2a8
0xa2: JUMPI 0x2a8 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x2bd]
---
0xa3 DUP1
0xa4 PUSH4 0x95897e74
0xa9 EQ
0xaa PUSH2 0x2bd
0xad JUMPI
---
0xa4: V42 = 0x95897e74
0xa9: V43 = EQ 0x95897e74 V11
0xaa: V44 = 0x2bd
0xad: JUMPI 0x2bd V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x2e9]
---
0xae DUP1
0xaf PUSH4 0x9f14af5d
0xb4 EQ
0xb5 PUSH2 0x2e9
0xb8 JUMPI
---
0xaf: V45 = 0x9f14af5d
0xb4: V46 = EQ 0x9f14af5d V11
0xb5: V47 = 0x2e9
0xb8: JUMPI 0x2e9 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x305]
---
0xb9 DUP1
0xba PUSH4 0xad64d068
0xbf EQ
0xc0 PUSH2 0x305
0xc3 JUMPI
---
0xba: V48 = 0xad64d068
0xbf: V49 = EQ 0xad64d068 V11
0xc0: V50 = 0x305
0xc3: JUMPI 0x305 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x33d]
---
0xc4 DUP1
0xc5 PUSH4 0xb3311086
0xca EQ
0xcb PUSH2 0x33d
0xce JUMPI
---
0xc5: V51 = 0xb3311086
0xca: V52 = EQ 0xb3311086 V11
0xcb: V53 = 0x33d
0xce: JUMPI 0x33d V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x352]
---
0xcf DUP1
0xd0 PUSH4 0xb62243a2
0xd5 EQ
0xd6 PUSH2 0x352
0xd9 JUMPI
---
0xd0: V54 = 0xb62243a2
0xd5: V55 = EQ 0xb62243a2 V11
0xd6: V56 = 0x352
0xd9: JUMPI 0x352 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x367]
---
0xda DUP1
0xdb PUSH4 0xb8f2c9e6
0xe0 EQ
0xe1 PUSH2 0x367
0xe4 JUMPI
---
0xdb: V57 = 0xb8f2c9e6
0xe0: V58 = EQ 0xb8f2c9e6 V11
0xe1: V59 = 0x367
0xe4: JUMPI 0x367 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x393]
---
0xe5 DUP1
0xe6 PUSH4 0xc4621546
0xeb EQ
0xec PUSH2 0x393
0xef JUMPI
---
0xe6: V60 = 0xc4621546
0xeb: V61 = EQ 0xc4621546 V11
0xec: V62 = 0x393
0xef: JUMPI 0x393 V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x3ae]
---
0xf0 DUP1
0xf1 PUSH4 0xd2948d4a
0xf6 EQ
0xf7 PUSH2 0x3ae
0xfa JUMPI
---
0xf1: V63 = 0xd2948d4a
0xf6: V64 = EQ 0xd2948d4a V11
0xf7: V65 = 0x3ae
0xfa: JUMPI 0x3ae V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x105]
---
Predecessors: [0xf0]
Successors: [0x106, 0x3ca]
---
0xfb DUP1
0xfc PUSH4 0xd2abb0ff
0x101 EQ
0x102 PUSH2 0x3ca
0x105 JUMPI
---
0xfc: V66 = 0xd2abb0ff
0x101: V67 = EQ 0xd2abb0ff V11
0x102: V68 = 0x3ca
0x105: JUMPI 0x3ca V67
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0xfb]
Successors: [0x111, 0x3ee]
---
0x106 DUP1
0x107 PUSH4 0xf2fde38b
0x10c EQ
0x10d PUSH2 0x3ee
0x110 JUMPI
---
0x107: V69 = 0xf2fde38b
0x10c: V70 = EQ 0xf2fde38b V11
0x10d: V71 = 0x3ee
0x110: JUMPI 0x3ee V70
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x111
[0x111:0x115]
---
Predecessors: [0x0, 0x106]
Successors: []
---
0x111 JUMPDEST
0x112 PUSH1 0x0
0x114 DUP1
0x115 REVERT
---
0x111: JUMPDEST 
0x112: V72 = 0x0
0x115: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x116
[0x116:0x11d]
---
Predecessors: [0xd]
Successors: [0x11e, 0x122]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 DUP1
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x116: JUMPDEST 
0x117: V73 = CALLVALUE
0x119: V74 = ISZERO V73
0x11a: V75 = 0x122
0x11d: JUMPI 0x122 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V11, V73]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x116]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V76 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V11, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V73]

================================

Block 0x122
[0x122:0x12a]
---
Predecessors: [0x116]
Successors: [0x40f]
---
0x122 JUMPDEST
0x123 POP
0x124 PUSH2 0x12b
0x127 PUSH2 0x40f
0x12a JUMP
---
0x122: JUMPDEST 
0x124: V77 = 0x12b
0x127: V78 = 0x40f
0x12a: JUMP 0x40f
---
Entry stack: [V11, V73]
Stack pops: 1
Stack additions: [0x12b]
Exit stack: [V11, 0x12b]

================================

Block 0x12b
[0x12b:0x13c]
---
Predecessors: [0x40f, 0x46e, 0x474, 0x55b, 0x6e6]
Successors: []
---
0x12b JUMPDEST
0x12c PUSH1 0x40
0x12e DUP1
0x12f MLOAD
0x130 SWAP2
0x131 DUP3
0x132 MSTORE
0x133 MLOAD
0x134 SWAP1
0x135 DUP2
0x136 SWAP1
0x137 SUB
0x138 PUSH1 0x20
0x13a ADD
0x13b SWAP1
0x13c RETURN
---
0x12b: JUMPDEST 
0x12c: V79 = 0x40
0x12f: V80 = M[0x40]
0x132: M[V80] = S0
0x133: V81 = M[0x40]
0x137: V82 = SUB V80 V81
0x138: V83 = 0x20
0x13a: V84 = ADD 0x20 V82
0x13c: RETURN V81 V84
---
Entry stack: [V11, 0x12b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x12b]

================================

Block 0x13d
[0x13d:0x14b]
---
Predecessors: [0x40]
Successors: [0x415]
---
0x13d JUMPDEST
0x13e PUSH2 0x14c
0x141 PUSH2 0xffff
0x144 PUSH1 0x4
0x146 CALLDATALOAD
0x147 AND
0x148 PUSH2 0x415
0x14b JUMP
---
0x13d: JUMPDEST 
0x13e: V85 = 0x14c
0x141: V86 = 0xffff
0x144: V87 = 0x4
0x146: V88 = CALLDATALOAD 0x4
0x147: V89 = AND V88 0xffff
0x148: V90 = 0x415
0x14b: JUMP 0x415
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14c, V89]
Exit stack: [V11, 0x14c, V89]

================================

Block 0x14c
[0x14c:0x14d]
---
Predecessors: [0x44a, 0x464, 0x613, 0x655, 0x768, 0x7b3, 0x84f, 0xbc8, 0xee4]
Successors: []
---
0x14c JUMPDEST
0x14d STOP
---
0x14c: JUMPDEST 
0x14d: STOP 
---
Entry stack: [V11, 0x14c, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x4b]
Successors: [0x156, 0x15a]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 DUP1
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14e: JUMPDEST 
0x14f: V91 = CALLVALUE
0x151: V92 = ISZERO V91
0x152: V93 = 0x15a
0x155: JUMPI 0x15a V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V91]
Exit stack: [V11, V91]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14e]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V94 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V11, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91]

================================

Block 0x15a
[0x15a:0x165]
---
Predecessors: [0x14e]
Successors: [0x44d]
---
0x15a JUMPDEST
0x15b POP
0x15c PUSH2 0x14c
0x15f PUSH1 0x4
0x161 CALLDATALOAD
0x162 PUSH2 0x44d
0x165 JUMP
---
0x15a: JUMPDEST 
0x15c: V95 = 0x14c
0x15f: V96 = 0x4
0x161: V97 = CALLDATALOAD 0x4
0x162: V98 = 0x44d
0x165: JUMP 0x44d
---
Entry stack: [V11, V91]
Stack pops: 1
Stack additions: [0x14c, V97]
Exit stack: [V11, 0x14c, V97]

================================

Block 0x166
[0x166:0x16d]
---
Predecessors: [0x56]
Successors: [0x16e, 0x172]
---
0x166 JUMPDEST
0x167 CALLVALUE
0x168 DUP1
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x166: JUMPDEST 
0x167: V99 = CALLVALUE
0x169: V100 = ISZERO V99
0x16a: V101 = 0x172
0x16d: JUMPI 0x172 V100
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V99]
Exit stack: [V11, V99]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x166]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V102 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V11, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V99]

================================

Block 0x172
[0x172:0x17a]
---
Predecessors: [0x166]
Successors: [0x469]
---
0x172 JUMPDEST
0x173 POP
0x174 PUSH2 0x17b
0x177 PUSH2 0x469
0x17a JUMP
---
0x172: JUMPDEST 
0x174: V103 = 0x17b
0x177: V104 = 0x469
0x17a: JUMP 0x469
---
Entry stack: [V11, V99]
Stack pops: 1
Stack additions: [0x17b]
Exit stack: [V11, 0x17b]

================================

Block 0x17b
[0x17b:0x190]
---
Predecessors: [0x469]
Successors: []
---
0x17b JUMPDEST
0x17c PUSH1 0x40
0x17e DUP1
0x17f MLOAD
0x180 PUSH1 0xff
0x182 SWAP1
0x183 SWAP3
0x184 AND
0x185 DUP3
0x186 MSTORE
0x187 MLOAD
0x188 SWAP1
0x189 DUP2
0x18a SWAP1
0x18b SUB
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP1
0x190 RETURN
---
0x17b: JUMPDEST 
0x17c: V105 = 0x40
0x17f: V106 = M[0x40]
0x180: V107 = 0xff
0x184: V108 = AND 0x64 0xff
0x186: M[V106] = 0x64
0x187: V109 = M[0x40]
0x18b: V110 = SUB V106 V109
0x18c: V111 = 0x20
0x18e: V112 = ADD 0x20 V110
0x190: RETURN V109 V112
---
Entry stack: [V11, 0x17b, 0x64]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x17b]

================================

Block 0x191
[0x191:0x198]
---
Predecessors: [0x61]
Successors: [0x199, 0x19d]
---
0x191 JUMPDEST
0x192 CALLVALUE
0x193 DUP1
0x194 ISZERO
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x191: JUMPDEST 
0x192: V113 = CALLVALUE
0x194: V114 = ISZERO V113
0x195: V115 = 0x19d
0x198: JUMPI 0x19d V114
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V11, V113]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x191]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V116 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V11, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V113]

================================

Block 0x19d
[0x19d:0x1a5]
---
Predecessors: [0x191]
Successors: [0x46e]
---
0x19d JUMPDEST
0x19e POP
0x19f PUSH2 0x12b
0x1a2 PUSH2 0x46e
0x1a5 JUMP
---
0x19d: JUMPDEST 
0x19f: V117 = 0x12b
0x1a2: V118 = 0x46e
0x1a5: JUMP 0x46e
---
Entry stack: [V11, V113]
Stack pops: 1
Stack additions: [0x12b]
Exit stack: [V11, 0x12b]

================================

Block 0x1a6
[0x1a6:0x1ad]
---
Predecessors: [0x6c]
Successors: [0x1ae, 0x1b2]
---
0x1a6 JUMPDEST
0x1a7 CALLVALUE
0x1a8 DUP1
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V119 = CALLVALUE
0x1a9: V120 = ISZERO V119
0x1aa: V121 = 0x1b2
0x1ad: JUMPI 0x1b2 V120
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V11, V119]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x1a6]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V122 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V11, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119]

================================

Block 0x1b2
[0x1b2:0x1ba]
---
Predecessors: [0x1a6]
Successors: [0x474]
---
0x1b2 JUMPDEST
0x1b3 POP
0x1b4 PUSH2 0x12b
0x1b7 PUSH2 0x474
0x1ba JUMP
---
0x1b2: JUMPDEST 
0x1b4: V123 = 0x12b
0x1b7: V124 = 0x474
0x1ba: JUMP 0x474
---
Entry stack: [V11, V119]
Stack pops: 1
Stack additions: [0x12b]
Exit stack: [V11, 0x12b]

================================

Block 0x1bb
[0x1bb:0x1c2]
---
Predecessors: [0x77]
Successors: [0x1c3, 0x1c7]
---
0x1bb JUMPDEST
0x1bc CALLVALUE
0x1bd DUP1
0x1be ISZERO
0x1bf PUSH2 0x1c7
0x1c2 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V125 = CALLVALUE
0x1be: V126 = ISZERO V125
0x1bf: V127 = 0x1c7
0x1c2: JUMPI 0x1c7 V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V11, V125]

================================

Block 0x1c3
[0x1c3:0x1c6]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 REVERT
---
0x1c3: V128 = 0x0
0x1c6: REVERT 0x0 0x0
---
Entry stack: [V11, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125]

================================

Block 0x1c7
[0x1c7:0x1d2]
---
Predecessors: [0x1bb]
Successors: [0x47a]
---
0x1c7 JUMPDEST
0x1c8 POP
0x1c9 PUSH2 0x1d3
0x1cc PUSH1 0x4
0x1ce CALLDATALOAD
0x1cf PUSH2 0x47a
0x1d2 JUMP
---
0x1c7: JUMPDEST 
0x1c9: V129 = 0x1d3
0x1cc: V130 = 0x4
0x1ce: V131 = CALLDATALOAD 0x4
0x1cf: V132 = 0x47a
0x1d2: JUMP 0x47a
---
Entry stack: [V11, V125]
Stack pops: 1
Stack additions: [0x1d3, V131]
Exit stack: [V11, 0x1d3, V131]

================================

Block 0x1d3
[0x1d3:0x1eb]
---
Predecessors: [0x4a8, 0x6da]
Successors: []
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x40
0x1d6 DUP1
0x1d7 MLOAD
0x1d8 PUSH4 0xffffffff
0x1dd SWAP1
0x1de SWAP3
0x1df AND
0x1e0 DUP3
0x1e1 MSTORE
0x1e2 MLOAD
0x1e3 SWAP1
0x1e4 DUP2
0x1e5 SWAP1
0x1e6 SUB
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea SWAP1
0x1eb RETURN
---
0x1d3: JUMPDEST 
0x1d4: V133 = 0x40
0x1d7: V134 = M[0x40]
0x1d8: V135 = 0xffffffff
0x1df: V136 = AND S0 0xffffffff
0x1e1: M[V134] = V136
0x1e2: V137 = M[0x40]
0x1e6: V138 = SUB V134 V137
0x1e7: V139 = 0x20
0x1e9: V140 = ADD 0x20 V138
0x1eb: RETURN V137 V140
---
Entry stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1ec
[0x1ec:0x1f3]
---
Predecessors: [0x82]
Successors: [0x1f4, 0x1f8]
---
0x1ec JUMPDEST
0x1ed CALLVALUE
0x1ee DUP1
0x1ef ISZERO
0x1f0 PUSH2 0x1f8
0x1f3 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V141 = CALLVALUE
0x1ef: V142 = ISZERO V141
0x1f0: V143 = 0x1f8
0x1f3: JUMPI 0x1f8 V142
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V141]
Exit stack: [V11, V141]

================================

Block 0x1f4
[0x1f4:0x1f7]
---
Predecessors: [0x1ec]
Successors: []
---
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 REVERT
---
0x1f4: V144 = 0x0
0x1f7: REVERT 0x0 0x0
---
Entry stack: [V11, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V141]

================================

Block 0x1f8
[0x1f8:0x207]
---
Predecessors: [0x1ec]
Successors: [0x4ad]
---
0x1f8 JUMPDEST
0x1f9 POP
0x1fa PUSH2 0x208
0x1fd PUSH2 0xffff
0x200 PUSH1 0x4
0x202 CALLDATALOAD
0x203 AND
0x204 PUSH2 0x4ad
0x207 JUMP
---
0x1f8: JUMPDEST 
0x1fa: V145 = 0x208
0x1fd: V146 = 0xffff
0x200: V147 = 0x4
0x202: V148 = CALLDATALOAD 0x4
0x203: V149 = AND V148 0xffff
0x204: V150 = 0x4ad
0x207: JUMP 0x4ad
---
Entry stack: [V11, V141]
Stack pops: 1
Stack additions: [0x208, V149]
Exit stack: [V11, 0x208, V149]

================================

Block 0x208
[0x208:0x276]
---
Predecessors: [0x4ad]
Successors: []
---
0x208 JUMPDEST
0x209 PUSH1 0x40
0x20b DUP1
0x20c MLOAD
0x20d PUSH1 0xff
0x20f SWAP12
0x210 DUP13
0x211 AND
0x212 DUP2
0x213 MSTORE
0x214 PUSH4 0xffffffff
0x219 SWAP11
0x21a DUP12
0x21b AND
0x21c PUSH1 0x20
0x21e DUP3
0x21f ADD
0x220 MSTORE
0x221 PUSH1 0x1
0x223 PUSH1 0xa0
0x225 PUSH1 0x2
0x227 EXP
0x228 SUB
0x229 SWAP10
0x22a DUP11
0x22b AND
0x22c DUP2
0x22d DUP4
0x22e ADD
0x22f MSTORE
0x230 SWAP8
0x231 SWAP1
0x232 SWAP9
0x233 AND
0x234 PUSH1 0x60
0x236 DUP9
0x237 ADD
0x238 MSTORE
0x239 SWAP5
0x23a SWAP1
0x23b SWAP8
0x23c AND
0x23d PUSH1 0x80
0x23f DUP7
0x240 ADD
0x241 MSTORE
0x242 PUSH1 0xa0
0x244 DUP6
0x245 ADD
0x246 SWAP3
0x247 SWAP1
0x248 SWAP3
0x249 MSTORE
0x24a ISZERO
0x24b ISZERO
0x24c PUSH1 0xc0
0x24e DUP5
0x24f ADD
0x250 MSTORE
0x251 ISZERO
0x252 ISZERO
0x253 PUSH1 0xe0
0x255 DUP4
0x256 ADD
0x257 MSTORE
0x258 PUSH2 0x100
0x25b DUP3
0x25c ADD
0x25d SWAP4
0x25e SWAP1
0x25f SWAP4
0x260 MSTORE
0x261 SWAP2
0x262 SWAP1
0x263 SWAP3
0x264 AND
0x265 PUSH2 0x120
0x268 DUP3
0x269 ADD
0x26a MSTORE
0x26b SWAP1
0x26c MLOAD
0x26d SWAP1
0x26e DUP2
0x26f SWAP1
0x270 SUB
0x271 PUSH2 0x140
0x274 ADD
0x275 SWAP1
0x276 RETURN
---
0x208: JUMPDEST 
0x209: V151 = 0x40
0x20c: V152 = M[0x40]
0x20d: V153 = 0xff
0x211: V154 = AND 0xff V425
0x213: M[V152] = V154
0x214: V155 = 0xffffffff
0x21b: V156 = AND 0xffffffff V428
0x21c: V157 = 0x20
0x21f: V158 = ADD V152 0x20
0x220: M[V158] = V156
0x221: V159 = 0x1
0x223: V160 = 0xa0
0x225: V161 = 0x2
0x227: V162 = EXP 0x2 0xa0
0x228: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22b: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x22e: V165 = ADD 0x40 V152
0x22f: M[V165] = V164
0x233: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x234: V167 = 0x60
0x237: V168 = ADD V152 0x60
0x238: M[V168] = V166
0x23c: V169 = AND 0xffffffff V440
0x23d: V170 = 0x80
0x240: V171 = ADD V152 0x80
0x241: M[V171] = V169
0x242: V172 = 0xa0
0x245: V173 = ADD V152 0xa0
0x249: M[V173] = V405
0x24a: V174 = ISZERO V441
0x24b: V175 = ISZERO V174
0x24c: V176 = 0xc0
0x24f: V177 = ADD V152 0xc0
0x250: M[V177] = V175
0x251: V178 = ISZERO V443
0x252: V179 = ISZERO V178
0x253: V180 = 0xe0
0x256: V181 = ADD V152 0xe0
0x257: M[V181] = V179
0x258: V182 = 0x100
0x25c: V183 = ADD V152 0x100
0x260: M[V183] = V421
0x264: V184 = AND 0xff V444
0x265: V185 = 0x120
0x269: V186 = ADD V152 0x120
0x26a: M[V186] = V184
0x26c: V187 = M[0x40]
0x270: V188 = SUB V152 V187
0x271: V189 = 0x140
0x274: V190 = ADD 0x140 V188
0x276: RETURN V187 V190
---
Entry stack: [V11, 0x208, V425, V428, V436, V437, V440, V405, V441, V443, V421, V444]
Stack pops: 10
Stack additions: []
Exit stack: [V11, 0x208]

================================

Block 0x277
[0x277:0x27e]
---
Predecessors: [0x8d]
Successors: [0x27f, 0x283]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 DUP1
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x277: JUMPDEST 
0x278: V191 = CALLVALUE
0x27a: V192 = ISZERO V191
0x27b: V193 = 0x283
0x27e: JUMPI 0x283 V192
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V11, V191]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x277]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V194 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V11, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V191]

================================

Block 0x283
[0x283:0x28b]
---
Predecessors: [0x277]
Successors: [0x54c]
---
0x283 JUMPDEST
0x284 POP
0x285 PUSH2 0x28c
0x288 PUSH2 0x54c
0x28b JUMP
---
0x283: JUMPDEST 
0x285: V195 = 0x28c
0x288: V196 = 0x54c
0x28b: JUMP 0x54c
---
Entry stack: [V11, V191]
Stack pops: 1
Stack additions: [0x28c]
Exit stack: [V11, 0x28c]

================================

Block 0x28c
[0x28c:0x2a7]
---
Predecessors: [0x54c]
Successors: []
---
0x28c JUMPDEST
0x28d PUSH1 0x40
0x28f DUP1
0x290 MLOAD
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 SWAP1
0x29a SWAP3
0x29b AND
0x29c DUP3
0x29d MSTORE
0x29e MLOAD
0x29f SWAP1
0x2a0 DUP2
0x2a1 SWAP1
0x2a2 SUB
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 SWAP1
0x2a7 RETURN
---
0x28c: JUMPDEST 
0x28d: V197 = 0x40
0x290: V198 = M[0x40]
0x291: V199 = 0x1
0x293: V200 = 0xa0
0x295: V201 = 0x2
0x297: V202 = EXP 0x2 0xa0
0x298: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29b: V204 = AND V452 0xffffffffffffffffffffffffffffffffffffffff
0x29d: M[V198] = V204
0x29e: V205 = M[0x40]
0x2a2: V206 = SUB V198 V205
0x2a3: V207 = 0x20
0x2a5: V208 = ADD 0x20 V206
0x2a7: RETURN V205 V208
---
Entry stack: [V11, 0x28c, V452]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x28c]

================================

Block 0x2a8
[0x2a8:0x2af]
---
Predecessors: [0x98]
Successors: [0x2b0, 0x2b4]
---
0x2a8 JUMPDEST
0x2a9 CALLVALUE
0x2aa DUP1
0x2ab ISZERO
0x2ac PUSH2 0x2b4
0x2af JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V209 = CALLVALUE
0x2ab: V210 = ISZERO V209
0x2ac: V211 = 0x2b4
0x2af: JUMPI 0x2b4 V210
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V209]
Exit stack: [V11, V209]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x2a8]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
---
0x2b0: V212 = 0x0
0x2b3: REVERT 0x0 0x0
---
Entry stack: [V11, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V209]

================================

Block 0x2b4
[0x2b4:0x2bc]
---
Predecessors: [0x2a8]
Successors: [0x55b]
---
0x2b4 JUMPDEST
0x2b5 POP
0x2b6 PUSH2 0x12b
0x2b9 PUSH2 0x55b
0x2bc JUMP
---
0x2b4: JUMPDEST 
0x2b6: V213 = 0x12b
0x2b9: V214 = 0x55b
0x2bc: JUMP 0x55b
---
Entry stack: [V11, V209]
Stack pops: 1
Stack additions: [0x12b]
Exit stack: [V11, 0x12b]

================================

Block 0x2bd
[0x2bd:0x2c4]
---
Predecessors: [0xa3]
Successors: [0x2c5, 0x2c9]
---
0x2bd JUMPDEST
0x2be CALLVALUE
0x2bf DUP1
0x2c0 ISZERO
0x2c1 PUSH2 0x2c9
0x2c4 JUMPI
---
0x2bd: JUMPDEST 
0x2be: V215 = CALLVALUE
0x2c0: V216 = ISZERO V215
0x2c1: V217 = 0x2c9
0x2c4: JUMPI 0x2c9 V216
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V215]
Exit stack: [V11, V215]

================================

Block 0x2c5
[0x2c5:0x2c8]
---
Predecessors: [0x2bd]
Successors: []
---
0x2c5 PUSH1 0x0
0x2c7 DUP1
0x2c8 REVERT
---
0x2c5: V218 = 0x0
0x2c8: REVERT 0x0 0x0
---
Entry stack: [V11, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V215]

================================

Block 0x2c9
[0x2c9:0x2e8]
---
Predecessors: [0x2bd]
Successors: [0x561]
---
0x2c9 JUMPDEST
0x2ca POP
0x2cb PUSH2 0x14c
0x2ce PUSH1 0x24
0x2d0 PUSH1 0x4
0x2d2 DUP1
0x2d3 CALLDATALOAD
0x2d4 DUP3
0x2d5 DUP2
0x2d6 ADD
0x2d7 SWAP3
0x2d8 SWAP1
0x2d9 DUP3
0x2da ADD
0x2db CALLDATALOAD
0x2dc SWAP2
0x2dd DUP2
0x2de CALLDATALOAD
0x2df SWAP2
0x2e0 DUP3
0x2e1 ADD
0x2e2 SWAP2
0x2e3 ADD
0x2e4 CALLDATALOAD
0x2e5 PUSH2 0x561
0x2e8 JUMP
---
0x2c9: JUMPDEST 
0x2cb: V219 = 0x14c
0x2ce: V220 = 0x24
0x2d0: V221 = 0x4
0x2d3: V222 = CALLDATALOAD 0x4
0x2d6: V223 = ADD V222 0x24
0x2da: V224 = ADD 0x4 V222
0x2db: V225 = CALLDATALOAD V224
0x2de: V226 = CALLDATALOAD 0x24
0x2e1: V227 = ADD V226 0x24
0x2e3: V228 = ADD V226 0x4
0x2e4: V229 = CALLDATALOAD V228
0x2e5: V230 = 0x561
0x2e8: JUMP 0x561
---
Entry stack: [V11, V215]
Stack pops: 1
Stack additions: [0x14c, V223, V225, V227, V229]
Exit stack: [V11, 0x14c, V223, V225, V227, V229]

================================

Block 0x2e9
[0x2e9:0x2f0]
---
Predecessors: [0xae]
Successors: [0x2f1, 0x2f5]
---
0x2e9 JUMPDEST
0x2ea CALLVALUE
0x2eb DUP1
0x2ec ISZERO
0x2ed PUSH2 0x2f5
0x2f0 JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V231 = CALLVALUE
0x2ec: V232 = ISZERO V231
0x2ed: V233 = 0x2f5
0x2f0: JUMPI 0x2f5 V232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V231]
Exit stack: [V11, V231]

================================

Block 0x2f1
[0x2f1:0x2f4]
---
Predecessors: [0x2e9]
Successors: []
---
0x2f1 PUSH1 0x0
0x2f3 DUP1
0x2f4 REVERT
---
0x2f1: V234 = 0x0
0x2f4: REVERT 0x0 0x0
---
Entry stack: [V11, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V231]

================================

Block 0x2f5
[0x2f5:0x304]
---
Predecessors: [0x2e9]
Successors: [0x61a]
---
0x2f5 JUMPDEST
0x2f6 POP
0x2f7 PUSH2 0x14c
0x2fa PUSH2 0xffff
0x2fd PUSH1 0x4
0x2ff CALLDATALOAD
0x300 AND
0x301 PUSH2 0x61a
0x304 JUMP
---
0x2f5: JUMPDEST 
0x2f7: V235 = 0x14c
0x2fa: V236 = 0xffff
0x2fd: V237 = 0x4
0x2ff: V238 = CALLDATALOAD 0x4
0x300: V239 = AND V238 0xffff
0x301: V240 = 0x61a
0x304: JUMP 0x61a
---
Entry stack: [V11, V231]
Stack pops: 1
Stack additions: [0x14c, V239]
Exit stack: [V11, 0x14c, V239]

================================

Block 0x305
[0x305:0x30c]
---
Predecessors: [0xb9]
Successors: [0x30d, 0x311]
---
0x305 JUMPDEST
0x306 CALLVALUE
0x307 DUP1
0x308 ISZERO
0x309 PUSH2 0x311
0x30c JUMPI
---
0x305: JUMPDEST 
0x306: V241 = CALLVALUE
0x308: V242 = ISZERO V241
0x309: V243 = 0x311
0x30c: JUMPI 0x311 V242
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V241]
Exit stack: [V11, V241]

================================

Block 0x30d
[0x30d:0x310]
---
Predecessors: [0x305]
Successors: []
---
0x30d PUSH1 0x0
0x30f DUP1
0x310 REVERT
---
0x30d: V244 = 0x0
0x310: REVERT 0x0 0x0
---
Entry stack: [V11, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V241]

================================

Block 0x311
[0x311:0x31c]
---
Predecessors: [0x305]
Successors: [0x6af]
---
0x311 JUMPDEST
0x312 POP
0x313 PUSH2 0x31d
0x316 PUSH1 0x4
0x318 CALLDATALOAD
0x319 PUSH2 0x6af
0x31c JUMP
---
0x311: JUMPDEST 
0x313: V245 = 0x31d
0x316: V246 = 0x4
0x318: V247 = CALLDATALOAD 0x4
0x319: V248 = 0x6af
0x31c: JUMP 0x6af
---
Entry stack: [V11, V241]
Stack pops: 1
Stack additions: [0x31d, V247]
Exit stack: [V11, 0x31d, V247]

================================

Block 0x31d
[0x31d:0x33c]
---
Predecessors: [0x6bd]
Successors: []
---
0x31d JUMPDEST
0x31e PUSH1 0x40
0x320 DUP1
0x321 MLOAD
0x322 PUSH1 0xff
0x324 SWAP4
0x325 DUP5
0x326 AND
0x327 DUP2
0x328 MSTORE
0x329 SWAP2
0x32a SWAP1
0x32b SWAP3
0x32c AND
0x32d PUSH1 0x20
0x32f DUP3
0x330 ADD
0x331 MSTORE
0x332 DUP2
0x333 MLOAD
0x334 SWAP1
0x335 DUP2
0x336 SWAP1
0x337 SUB
0x338 SWAP1
0x339 SWAP2
0x33a ADD
0x33b SWAP1
0x33c RETURN
---
0x31d: JUMPDEST 
0x31e: V249 = 0x40
0x321: V250 = M[0x40]
0x322: V251 = 0xff
0x326: V252 = AND 0xff V580
0x328: M[V250] = V252
0x32c: V253 = AND 0xff V583
0x32d: V254 = 0x20
0x330: V255 = ADD V250 0x20
0x331: M[V255] = V253
0x333: V256 = M[0x40]
0x337: V257 = SUB V250 V256
0x33a: V258 = ADD 0x40 V257
0x33c: RETURN V256 V258
---
Entry stack: [V11, 0x31d, V580, V583]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x31d]

================================

Block 0x33d
[0x33d:0x344]
---
Predecessors: [0xc4]
Successors: [0x345, 0x349]
---
0x33d JUMPDEST
0x33e CALLVALUE
0x33f DUP1
0x340 ISZERO
0x341 PUSH2 0x349
0x344 JUMPI
---
0x33d: JUMPDEST 
0x33e: V259 = CALLVALUE
0x340: V260 = ISZERO V259
0x341: V261 = 0x349
0x344: JUMPI 0x349 V260
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V259]
Exit stack: [V11, V259]

================================

Block 0x345
[0x345:0x348]
---
Predecessors: [0x33d]
Successors: []
---
0x345 PUSH1 0x0
0x347 DUP1
0x348 REVERT
---
0x345: V262 = 0x0
0x348: REVERT 0x0 0x0
---
Entry stack: [V11, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V259]

================================

Block 0x349
[0x349:0x351]
---
Predecessors: [0x33d]
Successors: [0x6da]
---
0x349 JUMPDEST
0x34a POP
0x34b PUSH2 0x1d3
0x34e PUSH2 0x6da
0x351 JUMP
---
0x349: JUMPDEST 
0x34b: V263 = 0x1d3
0x34e: V264 = 0x6da
0x351: JUMP 0x6da
---
Entry stack: [V11, V259]
Stack pops: 1
Stack additions: [0x1d3]
Exit stack: [V11, 0x1d3]

================================

Block 0x352
[0x352:0x359]
---
Predecessors: [0xcf]
Successors: [0x35a, 0x35e]
---
0x352 JUMPDEST
0x353 CALLVALUE
0x354 DUP1
0x355 ISZERO
0x356 PUSH2 0x35e
0x359 JUMPI
---
0x352: JUMPDEST 
0x353: V265 = CALLVALUE
0x355: V266 = ISZERO V265
0x356: V267 = 0x35e
0x359: JUMPI 0x35e V266
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V265]
Exit stack: [V11, V265]

================================

Block 0x35a
[0x35a:0x35d]
---
Predecessors: [0x352]
Successors: []
---
0x35a PUSH1 0x0
0x35c DUP1
0x35d REVERT
---
0x35a: V268 = 0x0
0x35d: REVERT 0x0 0x0
---
Entry stack: [V11, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V265]

================================

Block 0x35e
[0x35e:0x366]
---
Predecessors: [0x352]
Successors: [0x6e6]
---
0x35e JUMPDEST
0x35f POP
0x360 PUSH2 0x12b
0x363 PUSH2 0x6e6
0x366 JUMP
---
0x35e: JUMPDEST 
0x360: V269 = 0x12b
0x363: V270 = 0x6e6
0x366: JUMP 0x6e6
---
Entry stack: [V11, V265]
Stack pops: 1
Stack additions: [0x12b]
Exit stack: [V11, 0x12b]

================================

Block 0x367
[0x367:0x36e]
---
Predecessors: [0xda]
Successors: [0x36f, 0x373]
---
0x367 JUMPDEST
0x368 CALLVALUE
0x369 DUP1
0x36a ISZERO
0x36b PUSH2 0x373
0x36e JUMPI
---
0x367: JUMPDEST 
0x368: V271 = CALLVALUE
0x36a: V272 = ISZERO V271
0x36b: V273 = 0x373
0x36e: JUMPI 0x373 V272
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V271]
Exit stack: [V11, V271]

================================

Block 0x36f
[0x36f:0x372]
---
Predecessors: [0x367]
Successors: []
---
0x36f PUSH1 0x0
0x371 DUP1
0x372 REVERT
---
0x36f: V274 = 0x0
0x372: REVERT 0x0 0x0
---
Entry stack: [V11, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V271]

================================

Block 0x373
[0x373:0x37e]
---
Predecessors: [0x367]
Successors: [0x6ec]
---
0x373 JUMPDEST
0x374 POP
0x375 PUSH2 0x37f
0x378 PUSH1 0x4
0x37a CALLDATALOAD
0x37b PUSH2 0x6ec
0x37e JUMP
---
0x373: JUMPDEST 
0x375: V275 = 0x37f
0x378: V276 = 0x4
0x37a: V277 = CALLDATALOAD 0x4
0x37b: V278 = 0x6ec
0x37e: JUMP 0x6ec
---
Entry stack: [V11, V271]
Stack pops: 1
Stack additions: [0x37f, V277]
Exit stack: [V11, 0x37f, V277]

================================

Block 0x37f
[0x37f:0x392]
---
Predecessors: [0x4a8, 0x76d]
Successors: []
---
0x37f JUMPDEST
0x380 PUSH1 0x40
0x382 DUP1
0x383 MLOAD
0x384 SWAP2
0x385 ISZERO
0x386 ISZERO
0x387 DUP3
0x388 MSTORE
0x389 MLOAD
0x38a SWAP1
0x38b DUP2
0x38c SWAP1
0x38d SUB
0x38e PUSH1 0x20
0x390 ADD
0x391 SWAP1
0x392 RETURN
---
0x37f: JUMPDEST 
0x380: V279 = 0x40
0x383: V280 = M[0x40]
0x385: V281 = ISZERO S0
0x386: V282 = ISZERO V281
0x388: M[V280] = V282
0x389: V283 = M[0x40]
0x38d: V284 = SUB V280 V283
0x38e: V285 = 0x20
0x390: V286 = ADD 0x20 V284
0x392: RETURN V283 V286
---
Entry stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x393
[0x393:0x3ad]
---
Predecessors: [0xe5]
Successors: [0x720]
---
0x393 JUMPDEST
0x394 PUSH2 0x14c
0x397 PUSH2 0xffff
0x39a PUSH1 0x4
0x39c CALLDATALOAD
0x39d AND
0x39e PUSH1 0xff
0x3a0 PUSH1 0x24
0x3a2 CALLDATALOAD
0x3a3 DUP2
0x3a4 AND
0x3a5 SWAP1
0x3a6 PUSH1 0x44
0x3a8 CALLDATALOAD
0x3a9 AND
0x3aa PUSH2 0x720
0x3ad JUMP
---
0x393: JUMPDEST 
0x394: V287 = 0x14c
0x397: V288 = 0xffff
0x39a: V289 = 0x4
0x39c: V290 = CALLDATALOAD 0x4
0x39d: V291 = AND V290 0xffff
0x39e: V292 = 0xff
0x3a0: V293 = 0x24
0x3a2: V294 = CALLDATALOAD 0x24
0x3a4: V295 = AND 0xff V294
0x3a6: V296 = 0x44
0x3a8: V297 = CALLDATALOAD 0x44
0x3a9: V298 = AND V297 0xff
0x3aa: V299 = 0x720
0x3ad: JUMP 0x720
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14c, V291, V295, V298]
Exit stack: [V11, 0x14c, V291, V295, V298]

================================

Block 0x3ae
[0x3ae:0x3b5]
---
Predecessors: [0xf0]
Successors: [0x3b6, 0x3ba]
---
0x3ae JUMPDEST
0x3af CALLVALUE
0x3b0 DUP1
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V300 = CALLVALUE
0x3b1: V301 = ISZERO V300
0x3b2: V302 = 0x3ba
0x3b5: JUMPI 0x3ba V301
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V300]
Exit stack: [V11, V300]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3ae]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V303 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V11, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V300]

================================

Block 0x3ba
[0x3ba:0x3c9]
---
Predecessors: [0x3ae]
Successors: [0x76d]
---
0x3ba JUMPDEST
0x3bb POP
0x3bc PUSH2 0x37f
0x3bf PUSH2 0xffff
0x3c2 PUSH1 0x4
0x3c4 CALLDATALOAD
0x3c5 AND
0x3c6 PUSH2 0x76d
0x3c9 JUMP
---
0x3ba: JUMPDEST 
0x3bc: V304 = 0x37f
0x3bf: V305 = 0xffff
0x3c2: V306 = 0x4
0x3c4: V307 = CALLDATALOAD 0x4
0x3c5: V308 = AND V307 0xffff
0x3c6: V309 = 0x76d
0x3c9: JUMP 0x76d
---
Entry stack: [V11, V300]
Stack pops: 1
Stack additions: [0x37f, V308]
Exit stack: [V11, 0x37f, V308]

================================

Block 0x3ca
[0x3ca:0x3d1]
---
Predecessors: [0xfb]
Successors: [0x3d2, 0x3d6]
---
0x3ca JUMPDEST
0x3cb CALLVALUE
0x3cc DUP1
0x3cd ISZERO
0x3ce PUSH2 0x3d6
0x3d1 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V310 = CALLVALUE
0x3cd: V311 = ISZERO V310
0x3ce: V312 = 0x3d6
0x3d1: JUMPI 0x3d6 V311
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V310]
Exit stack: [V11, V310]

================================

Block 0x3d2
[0x3d2:0x3d5]
---
Predecessors: [0x3ca]
Successors: []
---
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 REVERT
---
0x3d2: V313 = 0x0
0x3d5: REVERT 0x0 0x0
---
Entry stack: [V11, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V310]

================================

Block 0x3d6
[0x3d6:0x3ed]
---
Predecessors: [0x3ca]
Successors: [0x782]
---
0x3d6 JUMPDEST
0x3d7 POP
0x3d8 PUSH2 0x14c
0x3db PUSH2 0xffff
0x3de PUSH1 0x4
0x3e0 CALLDATALOAD
0x3e1 AND
0x3e2 PUSH1 0x24
0x3e4 CALLDATALOAD
0x3e5 PUSH1 0x44
0x3e7 CALLDATALOAD
0x3e8 ISZERO
0x3e9 ISZERO
0x3ea PUSH2 0x782
0x3ed JUMP
---
0x3d6: JUMPDEST 
0x3d8: V314 = 0x14c
0x3db: V315 = 0xffff
0x3de: V316 = 0x4
0x3e0: V317 = CALLDATALOAD 0x4
0x3e1: V318 = AND V317 0xffff
0x3e2: V319 = 0x24
0x3e4: V320 = CALLDATALOAD 0x24
0x3e5: V321 = 0x44
0x3e7: V322 = CALLDATALOAD 0x44
0x3e8: V323 = ISZERO V322
0x3e9: V324 = ISZERO V323
0x3ea: V325 = 0x782
0x3ed: JUMP 0x782
---
Entry stack: [V11, V310]
Stack pops: 1
Stack additions: [0x14c, V318, V320, V324]
Exit stack: [V11, 0x14c, V318, V320, V324]

================================

Block 0x3ee
[0x3ee:0x3f5]
---
Predecessors: [0x106]
Successors: [0x3f6, 0x3fa]
---
0x3ee JUMPDEST
0x3ef CALLVALUE
0x3f0 DUP1
0x3f1 ISZERO
0x3f2 PUSH2 0x3fa
0x3f5 JUMPI
---
0x3ee: JUMPDEST 
0x3ef: V326 = CALLVALUE
0x3f1: V327 = ISZERO V326
0x3f2: V328 = 0x3fa
0x3f5: JUMPI 0x3fa V327
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V326]
Exit stack: [V11, V326]

================================

Block 0x3f6
[0x3f6:0x3f9]
---
Predecessors: [0x3ee]
Successors: []
---
0x3f6 PUSH1 0x0
0x3f8 DUP1
0x3f9 REVERT
---
0x3f6: V329 = 0x0
0x3f9: REVERT 0x0 0x0
---
Entry stack: [V11, V326]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V326]

================================

Block 0x3fa
[0x3fa:0x40e]
---
Predecessors: [0x3ee]
Successors: [0x823]
---
0x3fa JUMPDEST
0x3fb POP
0x3fc PUSH2 0x14c
0x3ff PUSH1 0x1
0x401 PUSH1 0xa0
0x403 PUSH1 0x2
0x405 EXP
0x406 SUB
0x407 PUSH1 0x4
0x409 CALLDATALOAD
0x40a AND
0x40b PUSH2 0x823
0x40e JUMP
---
0x3fa: JUMPDEST 
0x3fc: V330 = 0x14c
0x3ff: V331 = 0x1
0x401: V332 = 0xa0
0x403: V333 = 0x2
0x405: V334 = EXP 0x2 0xa0
0x406: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x407: V336 = 0x4
0x409: V337 = CALLDATALOAD 0x4
0x40a: V338 = AND V337 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V339 = 0x823
0x40e: JUMP 0x823
---
Entry stack: [V11, V326]
Stack pops: 1
Stack additions: [0x14c, V338]
Exit stack: [V11, 0x14c, V338]

================================

Block 0x40f
[0x40f:0x414]
---
Predecessors: [0x122]
Successors: [0x12b]
---
0x40f JUMPDEST
0x410 PUSH1 0x6
0x412 SLOAD
0x413 DUP2
0x414 JUMP
---
0x40f: JUMPDEST 
0x410: V340 = 0x6
0x412: V341 = S[0x6]
0x414: JUMP 0x12b
---
Entry stack: [V11, 0x12b]
Stack pops: 1
Stack additions: [S0, V341]
Exit stack: [V11, 0x12b, V341]

================================

Block 0x415
[0x415:0x431]
---
Predecessors: [0x13d]
Successors: [0x432, 0x440]
---
0x415 JUMPDEST
0x416 PUSH2 0xffff
0x419 DUP2
0x41a AND
0x41b PUSH1 0x0
0x41d SWAP1
0x41e DUP2
0x41f MSTORE
0x420 PUSH1 0x9
0x422 PUSH1 0x20
0x424 MSTORE
0x425 PUSH1 0x40
0x427 SWAP1
0x428 SHA3
0x429 SLOAD
0x42a PUSH1 0xff
0x42c AND
0x42d ISZERO
0x42e PUSH2 0x440
0x431 JUMPI
---
0x415: JUMPDEST 
0x416: V342 = 0xffff
0x41a: V343 = AND V89 0xffff
0x41b: V344 = 0x0
0x41f: M[0x0] = V343
0x420: V345 = 0x9
0x422: V346 = 0x20
0x424: M[0x20] = 0x9
0x425: V347 = 0x40
0x428: V348 = SHA3 0x0 0x40
0x429: V349 = S[V348]
0x42a: V350 = 0xff
0x42c: V351 = AND 0xff V349
0x42d: V352 = ISZERO V351
0x42e: V353 = 0x440
0x431: JUMPI 0x440 V352
---
Entry stack: [V11, 0x14c, V89]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x14c, V89]

================================

Block 0x432
[0x432:0x43a]
---
Predecessors: [0x415]
Successors: [0x8c6]
---
0x432 PUSH2 0x43b
0x435 DUP2
0x436 CALLVALUE
0x437 PUSH2 0x8c6
0x43a JUMP
---
0x432: V354 = 0x43b
0x436: V355 = CALLVALUE
0x437: V356 = 0x8c6
0x43a: JUMP 0x8c6
---
Entry stack: [V11, 0x14c, V89]
Stack pops: 1
Stack additions: [S0, 0x43b, S0, V355]
Exit stack: [V11, 0x14c, V89, 0x43b, V89, V355]

================================

Block 0x43b
[0x43b:0x43f]
---
Predecessors: [0xa04]
Successors: [0x44a]
---
0x43b JUMPDEST
0x43c PUSH2 0x44a
0x43f JUMP
---
0x43b: JUMPDEST 
0x43c: V357 = 0x44a
0x43f: JUMP 0x44a
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x440
[0x440:0x449]
---
Predecessors: [0x415]
Successors: [0xaa3]
---
0x440 JUMPDEST
0x441 PUSH2 0x44a
0x444 DUP2
0x445 CALLVALUE
0x446 PUSH2 0xaa3
0x449 JUMP
---
0x440: JUMPDEST 
0x441: V358 = 0x44a
0x445: V359 = CALLVALUE
0x446: V360 = 0xaa3
0x449: JUMP 0xaa3
---
Entry stack: [V11, 0x14c, V89]
Stack pops: 1
Stack additions: [S0, 0x44a, S0, V359]
Exit stack: [V11, 0x14c, V89, 0x44a, V89, V359]

================================

Block 0x44a
[0x44a:0x44c]
---
Predecessors: [0x43b, 0x44a, 0x768, 0xbc8, 0xee4]
Successors: [0x14c, 0x44a, 0x75d]
---
0x44a JUMPDEST
0x44b POP
0x44c JUMP
---
0x44a: JUMPDEST 
0x44c: JUMP S1
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x44d
[0x44d:0x45f]
---
Predecessors: [0x15a]
Successors: [0x460, 0x464]
---
0x44d JUMPDEST
0x44e PUSH1 0x0
0x450 SLOAD
0x451 PUSH1 0x1
0x453 PUSH1 0xa0
0x455 PUSH1 0x2
0x457 EXP
0x458 SUB
0x459 AND
0x45a CALLER
0x45b EQ
0x45c PUSH2 0x464
0x45f JUMPI
---
0x44d: JUMPDEST 
0x44e: V361 = 0x0
0x450: V362 = S[0x0]
0x451: V363 = 0x1
0x453: V364 = 0xa0
0x455: V365 = 0x2
0x457: V366 = EXP 0x2 0xa0
0x458: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x459: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x45a: V369 = CALLER
0x45b: V370 = EQ V369 V368
0x45c: V371 = 0x464
0x45f: JUMPI 0x464 V370
---
Entry stack: [V11, 0x14c, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V97]

================================

Block 0x460
[0x460:0x463]
---
Predecessors: [0x44d]
Successors: []
---
0x460 PUSH1 0x0
0x462 DUP1
0x463 REVERT
---
0x460: V372 = 0x0
0x463: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V97]

================================

Block 0x464
[0x464:0x468]
---
Predecessors: [0x44d]
Successors: [0x14c]
---
0x464 JUMPDEST
0x465 PUSH1 0x2
0x467 SSTORE
0x468 JUMP
---
0x464: JUMPDEST 
0x465: V373 = 0x2
0x467: S[0x2] = V97
0x468: JUMP 0x14c
---
Entry stack: [V11, 0x14c, V97]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x469
[0x469:0x46d]
---
Predecessors: [0x172]
Successors: [0x17b]
---
0x469 JUMPDEST
0x46a PUSH1 0x64
0x46c DUP2
0x46d JUMP
---
0x469: JUMPDEST 
0x46a: V374 = 0x64
0x46d: JUMP 0x17b
---
Entry stack: [V11, 0x17b]
Stack pops: 1
Stack additions: [S0, 0x64]
Exit stack: [V11, 0x17b, 0x64]

================================

Block 0x46e
[0x46e:0x473]
---
Predecessors: [0x19d]
Successors: [0x12b]
---
0x46e JUMPDEST
0x46f PUSH1 0x2
0x471 SLOAD
0x472 DUP2
0x473 JUMP
---
0x46e: JUMPDEST 
0x46f: V375 = 0x2
0x471: V376 = S[0x2]
0x473: JUMP 0x12b
---
Entry stack: [V11, 0x12b]
Stack pops: 1
Stack additions: [S0, V376]
Exit stack: [V11, 0x12b, V376]

================================

Block 0x474
[0x474:0x479]
---
Predecessors: [0x1b2]
Successors: [0x12b]
---
0x474 JUMPDEST
0x475 PUSH1 0x3
0x477 SLOAD
0x478 DUP2
0x479 JUMP
---
0x474: JUMPDEST 
0x475: V377 = 0x3
0x477: V378 = S[0x3]
0x479: JUMP 0x12b
---
Entry stack: [V11, 0x12b]
Stack pops: 1
Stack additions: [S0, V378]
Exit stack: [V11, 0x12b, V378]

================================

Block 0x47a
[0x47a:0x486]
---
Predecessors: [0x1c7, 0xb66]
Successors: [0x487, 0x495]
---
0x47a JUMPDEST
0x47b PUSH1 0x0
0x47d PUSH2 0x3e8
0x480 DUP3
0x481 LT
0x482 ISZERO
0x483 PUSH2 0x495
0x486 JUMPI
---
0x47a: JUMPDEST 
0x47b: V379 = 0x0
0x47d: V380 = 0x3e8
0x481: V381 = LT S0 0x3e8
0x482: V382 = ISZERO V381
0x483: V383 = 0x495
0x486: JUMPI 0x495 V382
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1255, V954, S2, {0x1d3, 0xb88}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1255, V954, S2, {0x1d3, 0xb88}, S0, 0x0]

================================

Block 0x487
[0x487:0x494]
---
Predecessors: [0x47a]
Successors: [0x4a8]
---
0x487 POP
0x488 PUSH1 0x7
0x48a SLOAD
0x48b PUSH4 0xffffffff
0x490 AND
0x491 PUSH2 0x4a8
0x494 JUMP
---
0x488: V384 = 0x7
0x48a: V385 = S[0x7]
0x48b: V386 = 0xffffffff
0x490: V387 = AND 0xffffffff V385
0x491: V388 = 0x4a8
0x494: JUMP 0x4a8
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V954, S3, {0x1d3, 0xb88}, S1, 0x0]
Stack pops: 1
Stack additions: [V387]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V954, S3, {0x1d3, 0xb88}, S1, V387]

================================

Block 0x495
[0x495:0x4a7]
---
Predecessors: [0x47a]
Successors: [0x4a8]
---
0x495 JUMPDEST
0x496 POP
0x497 PUSH1 0x7
0x499 SLOAD
0x49a PUSH4 0xffffffff
0x49f AND
0x4a0 DUP2
0x4a1 ADD
0x4a2 PUSH3 0xdb81b
0x4a6 NOT
0x4a7 ADD
---
0x495: JUMPDEST 
0x497: V389 = 0x7
0x499: V390 = S[0x7]
0x49a: V391 = 0xffffffff
0x49f: V392 = AND 0xffffffff V390
0x4a1: V393 = ADD S1 V392
0x4a2: V394 = 0xdb81b
0x4a6: V395 = NOT 0xdb81b
0x4a7: V396 = ADD 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff247e4 V393
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V954, S3, {0x1d3, 0xb88}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V396]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V954, S3, {0x1d3, 0xb88}, S1, V396]

================================

Block 0x4a8
[0x4a8:0x4ac]
---
Predecessors: [0x487, 0x495, 0x6f9, 0x700, 0x719]
Successors: [0x1d3, 0x37f, 0xab2, 0xb88]
---
0x4a8 JUMPDEST
0x4a9 SWAP2
0x4aa SWAP1
0x4ab POP
0x4ac JUMP
---
0x4a8: JUMPDEST 
0x4ac: JUMP {0x1d3, 0x37f, 0xab2, 0xb88}
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x1d3, 0x37f, 0xab2, 0xb88}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0]

================================

Block 0x4ad
[0x4ad:0x54b]
---
Predecessors: [0x1f8]
Successors: [0x208]
---
0x4ad JUMPDEST
0x4ae PUSH1 0x1
0x4b0 PUSH1 0x20
0x4b2 DUP2
0x4b3 DUP2
0x4b4 MSTORE
0x4b5 PUSH1 0x0
0x4b7 SWAP3
0x4b8 DUP4
0x4b9 MSTORE
0x4ba PUSH1 0x40
0x4bc SWAP3
0x4bd DUP4
0x4be SWAP1
0x4bf SHA3
0x4c0 DUP1
0x4c1 SLOAD
0x4c2 SWAP3
0x4c3 DUP2
0x4c4 ADD
0x4c5 SLOAD
0x4c6 DUP5
0x4c7 MLOAD
0x4c8 DUP1
0x4c9 DUP7
0x4ca ADD
0x4cb SWAP1
0x4cc SWAP6
0x4cd MSTORE
0x4ce PUSH1 0x2
0x4d0 DUP3
0x4d1 ADD
0x4d2 SLOAD
0x4d3 PUSH1 0xff
0x4d5 DUP2
0x4d6 DUP2
0x4d7 AND
0x4d8 DUP8
0x4d9 MSTORE
0x4da PUSH2 0x100
0x4dd SWAP2
0x4de DUP3
0x4df SWAP1
0x4e0 DIV
0x4e1 DUP2
0x4e2 AND
0x4e3 SWAP5
0x4e4 DUP8
0x4e5 ADD
0x4e6 SWAP5
0x4e7 SWAP1
0x4e8 SWAP5
0x4e9 MSTORE
0x4ea PUSH1 0x3
0x4ec DUP4
0x4ed ADD
0x4ee SLOAD
0x4ef PUSH1 0x4
0x4f1 DUP5
0x4f2 ADD
0x4f3 SLOAD
0x4f4 PUSH1 0x5
0x4f6 SWAP1
0x4f7 SWAP5
0x4f8 ADD
0x4f9 SLOAD
0x4fa DUP6
0x4fb DUP8
0x4fc AND
0x4fd SWAP8
0x4fe PUSH4 0xffffffff
0x503 DUP5
0x504 DUP10
0x505 DIV
0x506 DUP2
0x507 AND
0x508 SWAP9
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 PUSH6 0x10000000000
0x518 SWAP1
0x519 SWAP2
0x51a DIV
0x51b DUP2
0x51c AND
0x51d SWAP9
0x51e SWAP1
0x51f DUP8
0x520 AND
0x521 SWAP8
0x522 PUSH21 0x10000000000000000000000000000000000000000
0x538 SWAP1
0x539 SWAP8
0x53a DIV
0x53b SWAP1
0x53c SWAP2
0x53d AND
0x53e SWAP6
0x53f SWAP2
0x540 SWAP5
0x541 DUP5
0x542 DUP3
0x543 AND
0x544 SWAP5
0x545 DIV
0x546 DUP2
0x547 AND
0x548 SWAP3
0x549 AND
0x54a DUP11
0x54b JUMP
---
0x4ad: JUMPDEST 
0x4ae: V397 = 0x1
0x4b0: V398 = 0x20
0x4b4: M[0x20] = 0x1
0x4b5: V399 = 0x0
0x4b9: M[0x0] = V149
0x4ba: V400 = 0x40
0x4bf: V401 = SHA3 0x0 0x40
0x4c1: V402 = S[V401]
0x4c4: V403 = ADD V401 0x1
0x4c5: V404 = S[V403]
0x4c7: V405 = M[0x40]
0x4ca: V406 = ADD 0x40 V405
0x4cd: M[0x40] = V406
0x4ce: V407 = 0x2
0x4d1: V408 = ADD V401 0x2
0x4d2: V409 = S[V408]
0x4d3: V410 = 0xff
0x4d7: V411 = AND 0xff V409
0x4d9: M[V405] = V411
0x4da: V412 = 0x100
0x4e0: V413 = DIV V409 0x100
0x4e2: V414 = AND 0xff V413
0x4e5: V415 = ADD V405 0x20
0x4e9: M[V415] = V414
0x4ea: V416 = 0x3
0x4ed: V417 = ADD V401 0x3
0x4ee: V418 = S[V417]
0x4ef: V419 = 0x4
0x4f2: V420 = ADD V401 0x4
0x4f3: V421 = S[V420]
0x4f4: V422 = 0x5
0x4f8: V423 = ADD V401 0x5
0x4f9: V424 = S[V423]
0x4fc: V425 = AND V402 0xff
0x4fe: V426 = 0xffffffff
0x505: V427 = DIV V402 0x100
0x507: V428 = AND 0xffffffff V427
0x509: V429 = 0x1
0x50b: V430 = 0xa0
0x50d: V431 = 0x2
0x50f: V432 = EXP 0x2 0xa0
0x510: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x511: V434 = 0x10000000000
0x51a: V435 = DIV V402 0x10000000000
0x51c: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x520: V437 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0x522: V438 = 0x10000000000000000000000000000000000000000
0x53a: V439 = DIV V404 0x10000000000000000000000000000000000000000
0x53d: V440 = AND 0xffffffff V439
0x543: V441 = AND 0xff V418
0x545: V442 = DIV V418 0x100
0x547: V443 = AND 0xff V442
0x549: V444 = AND V424 0xff
0x54b: JUMP 0x208
---
Entry stack: [V11, 0x208, V149]
Stack pops: 2
Stack additions: [S1, V425, V428, V436, V437, V440, V405, V441, V443, V421, V444]
Exit stack: [V11, 0x208, V425, V428, V436, V437, V440, V405, V441, V443, V421, V444]

================================

Block 0x54c
[0x54c:0x55a]
---
Predecessors: [0x283]
Successors: [0x28c]
---
0x54c JUMPDEST
0x54d PUSH1 0x0
0x54f SLOAD
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 AND
0x559 DUP2
0x55a JUMP
---
0x54c: JUMPDEST 
0x54d: V445 = 0x0
0x54f: V446 = S[0x0]
0x550: V447 = 0x1
0x552: V448 = 0xa0
0x554: V449 = 0x2
0x556: V450 = EXP 0x2 0xa0
0x557: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x558: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x55a: JUMP 0x28c
---
Entry stack: [V11, 0x28c]
Stack pops: 1
Stack additions: [S0, V452]
Exit stack: [V11, 0x28c, V452]

================================

Block 0x55b
[0x55b:0x560]
---
Predecessors: [0x2b4]
Successors: [0x12b]
---
0x55b JUMPDEST
0x55c PUSH1 0x5
0x55e SLOAD
0x55f DUP2
0x560 JUMP
---
0x55b: JUMPDEST 
0x55c: V453 = 0x5
0x55e: V454 = S[0x5]
0x560: JUMP 0x12b
---
Entry stack: [V11, 0x12b]
Stack pops: 1
Stack additions: [S0, V454]
Exit stack: [V11, 0x12b, V454]

================================

Block 0x561
[0x561:0x574]
---
Predecessors: [0x2c9]
Successors: [0x575, 0x579]
---
0x561 JUMPDEST
0x562 PUSH1 0x0
0x564 DUP1
0x565 SLOAD
0x566 PUSH1 0x1
0x568 PUSH1 0xa0
0x56a PUSH1 0x2
0x56c EXP
0x56d SUB
0x56e AND
0x56f CALLER
0x570 EQ
0x571 PUSH2 0x579
0x574 JUMPI
---
0x561: JUMPDEST 
0x562: V455 = 0x0
0x565: V456 = S[0x0]
0x566: V457 = 0x1
0x568: V458 = 0xa0
0x56a: V459 = 0x2
0x56c: V460 = EXP 0x2 0xa0
0x56d: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56e: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x56f: V463 = CALLER
0x570: V464 = EQ V463 V462
0x571: V465 = 0x579
0x574: JUMPI 0x579 V464
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x14c, V223, V225, V227, V229, 0x0]

================================

Block 0x575
[0x575:0x578]
---
Predecessors: [0x561]
Successors: []
---
0x575 PUSH1 0x0
0x577 DUP1
0x578 REVERT
---
0x575: V466 = 0x0
0x578: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V223, V225, V227, V229, 0x0]

================================

Block 0x579
[0x579:0x57c]
---
Predecessors: [0x561]
Successors: [0x57d]
---
0x579 JUMPDEST
0x57a POP
0x57b PUSH1 0x0
---
0x579: JUMPDEST 
0x57b: V467 = 0x0
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x14c, V223, V225, V227, V229, 0x0]

================================

Block 0x57d
[0x57d:0x585]
---
Predecessors: [0x579, 0x5c0]
Successors: [0x586, 0x613]
---
0x57d JUMPDEST
0x57e DUP4
0x57f DUP2
0x580 LT
0x581 ISZERO
0x582 PUSH2 0x613
0x585 JUMPI
---
0x57d: JUMPDEST 
0x580: V468 = LT S0 V225
0x581: V469 = ISZERO V468
0x582: V470 = 0x613
0x585: JUMPI 0x613 V469
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x14c, V223, V225, V227, V229, S0]

================================

Block 0x586
[0x586:0x59e]
---
Predecessors: [0x57d]
Successors: [0x59f, 0x5a0]
---
0x586 PUSH1 0x8
0x588 PUSH1 0x40
0x58a DUP1
0x58b MLOAD
0x58c SWAP1
0x58d DUP2
0x58e ADD
0x58f PUSH1 0x40
0x591 MSTORE
0x592 DUP1
0x593 DUP8
0x594 DUP8
0x595 DUP6
0x596 DUP2
0x597 DUP2
0x598 LT
0x599 ISZERO
0x59a ISZERO
0x59b PUSH2 0x5a0
0x59e JUMPI
---
0x586: V471 = 0x8
0x588: V472 = 0x40
0x58b: V473 = M[0x40]
0x58e: V474 = ADD V473 0x40
0x58f: V475 = 0x40
0x591: M[0x40] = V474
0x598: V476 = LT S0 V225
0x599: V477 = ISZERO V476
0x59a: V478 = ISZERO V477
0x59b: V479 = 0x5a0
0x59e: JUMPI 0x5a0 V478
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x8, V473, V473, S4, S3, S0]
Exit stack: [V11, 0x14c, V223, V225, V227, V229, S0, 0x8, V473, V473, V223, V225, S0]

================================

Block 0x59f
[0x59f:0x59f]
---
Predecessors: [0x586]
Successors: []
---
0x59f INVALID
---
0x59f: INVALID 
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229, S6, 0x8, V473, V473, V223, V225, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V223, V225, V227, V229, S6, 0x8, V473, V473, V223, V225, S0]

================================

Block 0x5a0
[0x5a0:0x5be]
---
Predecessors: [0x586]
Successors: [0x5bf, 0x5c0]
---
0x5a0 JUMPDEST
0x5a1 SWAP1
0x5a2 POP
0x5a3 PUSH1 0x20
0x5a5 MUL
0x5a6 ADD
0x5a7 CALLDATALOAD
0x5a8 PUSH1 0xff
0x5aa AND
0x5ab PUSH1 0xff
0x5ad AND
0x5ae DUP2
0x5af MSTORE
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 DUP6
0x5b4 DUP6
0x5b5 DUP6
0x5b6 DUP2
0x5b7 DUP2
0x5b8 LT
0x5b9 ISZERO
0x5ba ISZERO
0x5bb PUSH2 0x5c0
0x5be JUMPI
---
0x5a0: JUMPDEST 
0x5a3: V480 = 0x20
0x5a5: V481 = MUL 0x20 S0
0x5a6: V482 = ADD V481 V223
0x5a7: V483 = CALLDATALOAD V482
0x5a8: V484 = 0xff
0x5aa: V485 = AND 0xff V483
0x5ab: V486 = 0xff
0x5ad: V487 = AND 0xff V485
0x5af: M[V473] = V487
0x5b0: V488 = 0x20
0x5b2: V489 = ADD 0x20 V473
0x5b8: V490 = LT S6 V229
0x5b9: V491 = ISZERO V490
0x5ba: V492 = ISZERO V491
0x5bb: V493 = 0x5c0
0x5be: JUMPI 0x5c0 V492
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229, S6, 0x8, V473, V473, V223, V225, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, V489, S8, S7, S6]
Exit stack: [V11, 0x14c, V223, V225, V227, V229, S6, 0x8, V473, V489, V227, V229, S6]

================================

Block 0x5bf
[0x5bf:0x5bf]
---
Predecessors: [0x5a0]
Successors: []
---
0x5bf INVALID
---
0x5bf: INVALID 
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229, S6, 0x8, V473, V489, V227, V229, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V223, V225, V227, V229, S6, 0x8, V473, V489, V227, V229, S0]

================================

Block 0x5c0
[0x5c0:0x612]
---
Predecessors: [0x5a0]
Successors: [0x57d]
---
0x5c0 JUMPDEST
0x5c1 PUSH1 0x20
0x5c3 SWAP1
0x5c4 DUP2
0x5c5 MUL
0x5c6 SWAP3
0x5c7 SWAP1
0x5c8 SWAP3
0x5c9 ADD
0x5ca CALLDATALOAD
0x5cb PUSH1 0xff
0x5cd SWAP1
0x5ce DUP2
0x5cf AND
0x5d0 SWAP1
0x5d1 SWAP4
0x5d2 MSTORE
0x5d3 POP
0x5d4 DUP4
0x5d5 SLOAD
0x5d6 PUSH1 0x1
0x5d8 DUP1
0x5d9 DUP3
0x5da ADD
0x5db DUP7
0x5dc SSTORE
0x5dd PUSH1 0x0
0x5df SWAP6
0x5e0 DUP7
0x5e1 MSTORE
0x5e2 SWAP5
0x5e3 DUP3
0x5e4 SWAP1
0x5e5 SHA3
0x5e6 DUP5
0x5e7 MLOAD
0x5e8 SWAP2
0x5e9 ADD
0x5ea DUP1
0x5eb SLOAD
0x5ec SWAP5
0x5ed SWAP1
0x5ee SWAP3
0x5ef ADD
0x5f0 MLOAD
0x5f1 PUSH1 0xff
0x5f3 NOT
0x5f4 SWAP1
0x5f5 SWAP5
0x5f6 AND
0x5f7 SWAP1
0x5f8 DUP4
0x5f9 AND
0x5fa OR
0x5fb PUSH2 0xff00
0x5fe NOT
0x5ff AND
0x600 PUSH2 0x100
0x603 SWAP4
0x604 SWAP1
0x605 SWAP3
0x606 AND
0x607 SWAP3
0x608 SWAP1
0x609 SWAP3
0x60a MUL
0x60b OR
0x60c SWAP1
0x60d SSTORE
0x60e ADD
0x60f PUSH2 0x57d
0x612 JUMP
---
0x5c0: JUMPDEST 
0x5c1: V494 = 0x20
0x5c5: V495 = MUL 0x20 S0
0x5c9: V496 = ADD V495 V227
0x5ca: V497 = CALLDATALOAD V496
0x5cb: V498 = 0xff
0x5cf: V499 = AND 0xff V497
0x5d2: M[V489] = V499
0x5d5: V500 = S[0x8]
0x5d6: V501 = 0x1
0x5da: V502 = ADD V500 0x1
0x5dc: S[0x8] = V502
0x5dd: V503 = 0x0
0x5e1: M[0x0] = 0x8
0x5e5: V504 = SHA3 0x0 0x20
0x5e7: V505 = M[V473]
0x5e9: V506 = ADD V500 V504
0x5eb: V507 = S[V506]
0x5ef: V508 = ADD 0x20 V473
0x5f0: V509 = M[V508]
0x5f1: V510 = 0xff
0x5f3: V511 = NOT 0xff
0x5f6: V512 = AND V507 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x5f9: V513 = AND 0xff V505
0x5fa: V514 = OR V513 V512
0x5fb: V515 = 0xff00
0x5fe: V516 = NOT 0xff00
0x5ff: V517 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V514
0x600: V518 = 0x100
0x606: V519 = AND 0xff V509
0x60a: V520 = MUL V519 0x100
0x60b: V521 = OR V520 V517
0x60d: S[V506] = V521
0x60e: V522 = ADD 0x1 S6
0x60f: V523 = 0x57d
0x612: JUMP 0x57d
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229, S6, 0x8, V473, V489, V227, V229, S0]
Stack pops: 7
Stack additions: [V522]
Exit stack: [V11, 0x14c, V223, V225, V227, V229, V522]

================================

Block 0x613
[0x613:0x619]
---
Predecessors: [0x57d]
Successors: [0x14c]
---
0x613 JUMPDEST
0x614 POP
0x615 POP
0x616 POP
0x617 POP
0x618 POP
0x619 JUMP
---
0x613: JUMPDEST 
0x619: JUMP 0x14c
---
Entry stack: [V11, 0x14c, V223, V225, V227, V229, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x61a
[0x61a:0x62c]
---
Predecessors: [0x2f5]
Successors: [0x62d, 0x631]
---
0x61a JUMPDEST
0x61b PUSH1 0x0
0x61d SLOAD
0x61e PUSH1 0x1
0x620 PUSH1 0xa0
0x622 PUSH1 0x2
0x624 EXP
0x625 SUB
0x626 AND
0x627 CALLER
0x628 EQ
0x629 PUSH2 0x631
0x62c JUMPI
---
0x61a: JUMPDEST 
0x61b: V524 = 0x0
0x61d: V525 = S[0x0]
0x61e: V526 = 0x1
0x620: V527 = 0xa0
0x622: V528 = 0x2
0x624: V529 = EXP 0x2 0xa0
0x625: V530 = SUB 0x10000000000000000000000000000000000000000 0x1
0x626: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x627: V532 = CALLER
0x628: V533 = EQ V532 V531
0x629: V534 = 0x631
0x62c: JUMPI 0x631 V533
---
Entry stack: [V11, 0x14c, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V239]

================================

Block 0x62d
[0x62d:0x630]
---
Predecessors: [0x61a]
Successors: []
---
0x62d PUSH1 0x0
0x62f DUP1
0x630 REVERT
---
0x62d: V535 = 0x0
0x630: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V239]

================================

Block 0x631
[0x631:0x650]
---
Predecessors: [0x61a]
Successors: [0x651, 0x655]
---
0x631 JUMPDEST
0x632 PUSH2 0xffff
0x635 DUP2
0x636 AND
0x637 PUSH1 0x0
0x639 SWAP1
0x63a DUP2
0x63b MSTORE
0x63c PUSH1 0x1
0x63e PUSH1 0x20
0x640 MSTORE
0x641 PUSH1 0x40
0x643 SWAP1
0x644 SHA3
0x645 PUSH1 0x3
0x647 ADD
0x648 SLOAD
0x649 PUSH1 0xff
0x64b AND
0x64c ISZERO
0x64d PUSH2 0x655
0x650 JUMPI
---
0x631: JUMPDEST 
0x632: V536 = 0xffff
0x636: V537 = AND V239 0xffff
0x637: V538 = 0x0
0x63b: M[0x0] = V537
0x63c: V539 = 0x1
0x63e: V540 = 0x20
0x640: M[0x20] = 0x1
0x641: V541 = 0x40
0x644: V542 = SHA3 0x0 0x40
0x645: V543 = 0x3
0x647: V544 = ADD 0x3 V542
0x648: V545 = S[V544]
0x649: V546 = 0xff
0x64b: V547 = AND 0xff V545
0x64c: V548 = ISZERO V547
0x64d: V549 = 0x655
0x650: JUMPI 0x655 V548
---
Entry stack: [V11, 0x14c, V239]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x14c, V239]

================================

Block 0x651
[0x651:0x654]
---
Predecessors: [0x631]
Successors: []
---
0x651 PUSH1 0x0
0x653 DUP1
0x654 REVERT
---
0x651: V550 = 0x0
0x654: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V239]

================================

Block 0x655
[0x655:0x6ae]
---
Predecessors: [0x631]
Successors: [0x14c]
---
0x655 JUMPDEST
0x656 PUSH2 0xffff
0x659 DUP2
0x65a AND
0x65b PUSH1 0x0
0x65d DUP2
0x65e DUP2
0x65f MSTORE
0x660 PUSH1 0x1
0x662 PUSH1 0x20
0x664 DUP2
0x665 DUP2
0x666 MSTORE
0x667 PUSH1 0x40
0x669 SWAP3
0x66a DUP4
0x66b SWAP1
0x66c SHA3
0x66d PUSH1 0x3
0x66f ADD
0x670 DUP1
0x671 SLOAD
0x672 PUSH1 0xff
0x674 NOT
0x675 AND
0x676 SWAP1
0x677 SWAP3
0x678 OR
0x679 SWAP1
0x67a SWAP2
0x67b SSTORE
0x67c DUP2
0x67d MLOAD
0x67e SWAP3
0x67f DUP4
0x680 MSTORE
0x681 SWAP1
0x682 MLOAD
0x683 PUSH32 0xc3f54433ce05aad88d1a8351783441e0384326f1c32d8dc81ca37470009b556f
0x6a4 SWAP3
0x6a5 DUP2
0x6a6 SWAP1
0x6a7 SUB
0x6a8 SWAP1
0x6a9 SWAP2
0x6aa ADD
0x6ab SWAP1
0x6ac LOG1
0x6ad POP
0x6ae JUMP
---
0x655: JUMPDEST 
0x656: V551 = 0xffff
0x65a: V552 = AND V239 0xffff
0x65b: V553 = 0x0
0x65f: M[0x0] = V552
0x660: V554 = 0x1
0x662: V555 = 0x20
0x666: M[0x20] = 0x1
0x667: V556 = 0x40
0x66c: V557 = SHA3 0x0 0x40
0x66d: V558 = 0x3
0x66f: V559 = ADD 0x3 V557
0x671: V560 = S[V559]
0x672: V561 = 0xff
0x674: V562 = NOT 0xff
0x675: V563 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V560
0x678: V564 = OR 0x1 V563
0x67b: S[V559] = V564
0x67d: V565 = M[0x40]
0x680: M[V565] = V552
0x682: V566 = M[0x40]
0x683: V567 = 0xc3f54433ce05aad88d1a8351783441e0384326f1c32d8dc81ca37470009b556f
0x6a7: V568 = SUB V565 V566
0x6aa: V569 = ADD 0x20 V568
0x6ac: LOG V566 V569 0xc3f54433ce05aad88d1a8351783441e0384326f1c32d8dc81ca37470009b556f
0x6ae: JUMP 0x14c
---
Entry stack: [V11, 0x14c, V239]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6af
[0x6af:0x6bb]
---
Predecessors: [0x311]
Successors: [0x6bc, 0x6bd]
---
0x6af JUMPDEST
0x6b0 PUSH1 0x8
0x6b2 DUP1
0x6b3 SLOAD
0x6b4 DUP3
0x6b5 SWAP1
0x6b6 DUP2
0x6b7 LT
0x6b8 PUSH2 0x6bd
0x6bb JUMPI
---
0x6af: JUMPDEST 
0x6b0: V570 = 0x8
0x6b3: V571 = S[0x8]
0x6b7: V572 = LT V247 V571
0x6b8: V573 = 0x6bd
0x6bb: JUMPI 0x6bd V572
---
Entry stack: [V11, 0x31d, V247]
Stack pops: 1
Stack additions: [S0, 0x8, S0]
Exit stack: [V11, 0x31d, V247, 0x8, V247]

================================

Block 0x6bc
[0x6bc:0x6bc]
---
Predecessors: [0x6af]
Successors: []
---
0x6bc INVALID
---
0x6bc: INVALID 
---
Entry stack: [V11, 0x31d, V247, 0x8, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x31d, V247, 0x8, V247]

================================

Block 0x6bd
[0x6bd:0x6d9]
---
Predecessors: [0x6af]
Successors: [0x31d]
---
0x6bd JUMPDEST
0x6be PUSH1 0x0
0x6c0 SWAP2
0x6c1 DUP3
0x6c2 MSTORE
0x6c3 PUSH1 0x20
0x6c5 SWAP1
0x6c6 SWAP2
0x6c7 SHA3
0x6c8 ADD
0x6c9 SLOAD
0x6ca PUSH1 0xff
0x6cc DUP1
0x6cd DUP3
0x6ce AND
0x6cf SWAP3
0x6d0 POP
0x6d1 PUSH2 0x100
0x6d4 SWAP1
0x6d5 SWAP2
0x6d6 DIV
0x6d7 AND
0x6d8 DUP3
0x6d9 JUMP
---
0x6bd: JUMPDEST 
0x6be: V574 = 0x0
0x6c2: M[0x0] = 0x8
0x6c3: V575 = 0x20
0x6c7: V576 = SHA3 0x0 0x20
0x6c8: V577 = ADD V576 V247
0x6c9: V578 = S[V577]
0x6ca: V579 = 0xff
0x6ce: V580 = AND V578 0xff
0x6d1: V581 = 0x100
0x6d6: V582 = DIV V578 0x100
0x6d7: V583 = AND V582 0xff
0x6d9: JUMP 0x31d
---
Entry stack: [V11, 0x31d, V247, 0x8, V247]
Stack pops: 4
Stack additions: [S3, V580, V583]
Exit stack: [V11, 0x31d, V580, V583]

================================

Block 0x6da
[0x6da:0x6e5]
---
Predecessors: [0x349]
Successors: [0x1d3]
---
0x6da JUMPDEST
0x6db PUSH1 0x7
0x6dd SLOAD
0x6de PUSH4 0xffffffff
0x6e3 AND
0x6e4 DUP2
0x6e5 JUMP
---
0x6da: JUMPDEST 
0x6db: V584 = 0x7
0x6dd: V585 = S[0x7]
0x6de: V586 = 0xffffffff
0x6e3: V587 = AND 0xffffffff V585
0x6e5: JUMP 0x1d3
---
Entry stack: [V11, 0x1d3]
Stack pops: 1
Stack additions: [S0, V587]
Exit stack: [V11, 0x1d3, V587]

================================

Block 0x6e6
[0x6e6:0x6eb]
---
Predecessors: [0x35e]
Successors: [0x12b]
---
0x6e6 JUMPDEST
0x6e7 PUSH1 0x4
0x6e9 SLOAD
0x6ea DUP2
0x6eb JUMP
---
0x6e6: JUMPDEST 
0x6e7: V588 = 0x4
0x6e9: V589 = S[0x4]
0x6eb: JUMP 0x12b
---
Entry stack: [V11, 0x12b]
Stack pops: 1
Stack additions: [S0, V589]
Exit stack: [V11, 0x12b, V589]

================================

Block 0x6ec
[0x6ec:0x6f8]
---
Predecessors: [0x373, 0xaa3]
Successors: [0x6f9, 0x700]
---
0x6ec JUMPDEST
0x6ed PUSH1 0x0
0x6ef PUSH2 0x3e8
0x6f2 DUP3
0x6f3 LT
0x6f4 ISZERO
0x6f5 PUSH2 0x700
0x6f8 JUMPI
---
0x6ec: JUMPDEST 
0x6ed: V590 = 0x0
0x6ef: V591 = 0x3e8
0x6f3: V592 = LT S0 0x3e8
0x6f4: V593 = ISZERO V592
0x6f5: V594 = 0x700
0x6f8: JUMPI 0x700 V593
---
Entry stack: [V11, 0x14c, V89, 0x44a, V89, V359, S2, {0x37f, 0xab2}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0x14c, V89, 0x44a, V89, V359, S2, {0x37f, 0xab2}, S0, 0x0]

================================

Block 0x6f9
[0x6f9:0x6ff]
---
Predecessors: [0x6ec]
Successors: [0x4a8]
---
0x6f9 POP
0x6fa PUSH1 0x1
0x6fc PUSH2 0x4a8
0x6ff JUMP
---
0x6fa: V595 = 0x1
0x6fc: V596 = 0x4a8
0x6ff: JUMP 0x4a8
---
Entry stack: [V11, 0x14c, V89, 0x44a, V89, V359, S3, {0x37f, 0xab2}, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x14c, V89, 0x44a, V89, V359, S3, {0x37f, 0xab2}, S1, 0x1]

================================

Block 0x700
[0x700:0x718]
---
Predecessors: [0x6ec]
Successors: [0x4a8, 0x719]
---
0x700 JUMPDEST
0x701 PUSH1 0x7
0x703 SLOAD
0x704 PUSH4 0xffffffff
0x709 AND
0x70a TIMESTAMP
0x70b SUB
0x70c PUSH3 0xdb81b
0x710 NOT
0x711 DUP4
0x712 ADD
0x713 LT
0x714 ISZERO
0x715 PUSH2 0x4a8
0x718 JUMPI
---
0x700: JUMPDEST 
0x701: V597 = 0x7
0x703: V598 = S[0x7]
0x704: V599 = 0xffffffff
0x709: V600 = AND 0xffffffff V598
0x70a: V601 = TIMESTAMP
0x70b: V602 = SUB V601 V600
0x70c: V603 = 0xdb81b
0x710: V604 = NOT 0xdb81b
0x712: V605 = ADD S1 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff247e4
0x713: V606 = LT V605 V602
0x714: V607 = ISZERO V606
0x715: V608 = 0x4a8
0x718: JUMPI 0x4a8 V607
---
Entry stack: [V11, 0x14c, V89, 0x44a, V89, V359, S3, {0x37f, 0xab2}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x14c, V89, 0x44a, V89, V359, S3, {0x37f, 0xab2}, S1, 0x0]

================================

Block 0x719
[0x719:0x71f]
---
Predecessors: [0x700]
Successors: [0x4a8]
---
0x719 POP
0x71a PUSH1 0x1
0x71c PUSH2 0x4a8
0x71f JUMP
---
0x71a: V609 = 0x1
0x71c: V610 = 0x4a8
0x71f: JUMP 0x4a8
---
Entry stack: [V11, 0x14c, V89, 0x44a, V89, V359, S3, {0x37f, 0xab2}, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x14c, V89, 0x44a, V89, V359, S3, {0x37f, 0xab2}, S1, 0x1]

================================

Block 0x720
[0x720:0x74c]
---
Predecessors: [0x393]
Successors: [0x74d, 0x751]
---
0x720 JUMPDEST
0x721 PUSH2 0xffff
0x724 DUP4
0x725 AND
0x726 PUSH1 0x0
0x728 SWAP1
0x729 DUP2
0x72a MSTORE
0x72b PUSH1 0x1
0x72d PUSH1 0x20
0x72f MSTORE
0x730 PUSH1 0x40
0x732 SWAP1
0x733 SHA3
0x734 SLOAD
0x735 PUSH6 0x10000000000
0x73c SWAP1
0x73d DIV
0x73e PUSH1 0x1
0x740 PUSH1 0xa0
0x742 PUSH1 0x2
0x744 EXP
0x745 SUB
0x746 AND
0x747 CALLER
0x748 EQ
0x749 PUSH2 0x751
0x74c JUMPI
---
0x720: JUMPDEST 
0x721: V611 = 0xffff
0x725: V612 = AND V291 0xffff
0x726: V613 = 0x0
0x72a: M[0x0] = V612
0x72b: V614 = 0x1
0x72d: V615 = 0x20
0x72f: M[0x20] = 0x1
0x730: V616 = 0x40
0x733: V617 = SHA3 0x0 0x40
0x734: V618 = S[V617]
0x735: V619 = 0x10000000000
0x73d: V620 = DIV V618 0x10000000000
0x73e: V621 = 0x1
0x740: V622 = 0xa0
0x742: V623 = 0x2
0x744: V624 = EXP 0x2 0xa0
0x745: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x746: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x747: V627 = CALLER
0x748: V628 = EQ V627 V626
0x749: V629 = 0x751
0x74c: JUMPI 0x751 V628
---
Entry stack: [V11, 0x14c, V291, V295, V298]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x14c, V291, V295, V298]

================================

Block 0x74d
[0x74d:0x750]
---
Predecessors: [0x720]
Successors: []
---
0x74d PUSH1 0x0
0x74f DUP1
0x750 REVERT
---
0x74d: V630 = 0x0
0x750: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V291, V295, V298]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V291, V295, V298]

================================

Block 0x751
[0x751:0x75c]
---
Predecessors: [0x720]
Successors: [0xda8]
---
0x751 JUMPDEST
0x752 PUSH2 0x75d
0x755 DUP4
0x756 DUP4
0x757 DUP4
0x758 CALLVALUE
0x759 PUSH2 0xda8
0x75c JUMP
---
0x751: JUMPDEST 
0x752: V631 = 0x75d
0x758: V632 = CALLVALUE
0x759: V633 = 0xda8
0x75c: JUMP 0xda8
---
Entry stack: [V11, 0x14c, V291, V295, V298]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x75d, S2, S1, S0, V632]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632]

================================

Block 0x75d
[0x75d:0x763]
---
Predecessors: [0x44a, 0xee4]
Successors: [0x764, 0x768]
---
0x75d JUMPDEST
0x75e ISZERO
0x75f ISZERO
0x760 PUSH2 0x768
0x763 JUMPI
---
0x75d: JUMPDEST 
0x75e: V634 = ISZERO 0x1
0x75f: V635 = ISZERO 0x0
0x760: V636 = 0x768
0x763: JUMPI 0x768 0x1
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2, S1]

================================

Block 0x764
[0x764:0x767]
---
Predecessors: [0x75d]
Successors: []
---
0x764 PUSH1 0x0
0x766 DUP1
0x767 REVERT
---
0x764: V637 = 0x0
0x767: REVERT 0x0 0x0
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1, S0]

================================

Block 0x768
[0x768:0x76c]
---
Predecessors: [0x75d]
Successors: [0x14c, 0x44a]
---
0x768 JUMPDEST
0x769 POP
0x76a POP
0x76b POP
0x76c JUMP
---
0x768: JUMPDEST 
0x76c: JUMP S3
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S5, S4]

================================

Block 0x76d
[0x76d:0x781]
---
Predecessors: [0x3ba]
Successors: [0x37f]
---
0x76d JUMPDEST
0x76e PUSH1 0x9
0x770 PUSH1 0x20
0x772 MSTORE
0x773 PUSH1 0x0
0x775 SWAP1
0x776 DUP2
0x777 MSTORE
0x778 PUSH1 0x40
0x77a SWAP1
0x77b SHA3
0x77c SLOAD
0x77d PUSH1 0xff
0x77f AND
0x780 DUP2
0x781 JUMP
---
0x76d: JUMPDEST 
0x76e: V638 = 0x9
0x770: V639 = 0x20
0x772: M[0x20] = 0x9
0x773: V640 = 0x0
0x777: M[0x0] = V308
0x778: V641 = 0x40
0x77b: V642 = SHA3 0x0 0x40
0x77c: V643 = S[V642]
0x77d: V644 = 0xff
0x77f: V645 = AND 0xff V643
0x781: JUMP 0x37f
---
Entry stack: [V11, 0x37f, V308]
Stack pops: 2
Stack additions: [S1, V645]
Exit stack: [V11, 0x37f, V645]

================================

Block 0x782
[0x782:0x7ae]
---
Predecessors: [0x3d6]
Successors: [0x7af, 0x7b3]
---
0x782 JUMPDEST
0x783 PUSH2 0xffff
0x786 DUP4
0x787 AND
0x788 PUSH1 0x0
0x78a SWAP1
0x78b DUP2
0x78c MSTORE
0x78d PUSH1 0x1
0x78f PUSH1 0x20
0x791 MSTORE
0x792 PUSH1 0x40
0x794 SWAP1
0x795 SHA3
0x796 SLOAD
0x797 PUSH6 0x10000000000
0x79e SWAP1
0x79f DIV
0x7a0 PUSH1 0x1
0x7a2 PUSH1 0xa0
0x7a4 PUSH1 0x2
0x7a6 EXP
0x7a7 SUB
0x7a8 AND
0x7a9 CALLER
0x7aa EQ
0x7ab PUSH2 0x7b3
0x7ae JUMPI
---
0x782: JUMPDEST 
0x783: V646 = 0xffff
0x787: V647 = AND V318 0xffff
0x788: V648 = 0x0
0x78c: M[0x0] = V647
0x78d: V649 = 0x1
0x78f: V650 = 0x20
0x791: M[0x20] = 0x1
0x792: V651 = 0x40
0x795: V652 = SHA3 0x0 0x40
0x796: V653 = S[V652]
0x797: V654 = 0x10000000000
0x79f: V655 = DIV V653 0x10000000000
0x7a0: V656 = 0x1
0x7a2: V657 = 0xa0
0x7a4: V658 = 0x2
0x7a6: V659 = EXP 0x2 0xa0
0x7a7: V660 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a8: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x7a9: V662 = CALLER
0x7aa: V663 = EQ V662 V661
0x7ab: V664 = 0x7b3
0x7ae: JUMPI 0x7b3 V663
---
Entry stack: [V11, 0x14c, V318, V320, V324]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x14c, V318, V320, V324]

================================

Block 0x7af
[0x7af:0x7b2]
---
Predecessors: [0x782]
Successors: []
---
0x7af PUSH1 0x0
0x7b1 DUP1
0x7b2 REVERT
---
0x7af: V665 = 0x0
0x7b2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V318, V320, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V318, V320, V324]

================================

Block 0x7b3
[0x7b3:0x822]
---
Predecessors: [0x782]
Successors: [0x14c]
---
0x7b3 JUMPDEST
0x7b4 PUSH2 0xffff
0x7b7 DUP4
0x7b8 AND
0x7b9 PUSH1 0x0
0x7bb DUP2
0x7bc DUP2
0x7bd MSTORE
0x7be PUSH1 0x1
0x7c0 PUSH1 0x20
0x7c2 SWAP1
0x7c3 DUP2
0x7c4 MSTORE
0x7c5 PUSH1 0x40
0x7c7 SWAP2
0x7c8 DUP3
0x7c9 SWAP1
0x7ca SHA3
0x7cb PUSH1 0x4
0x7cd DUP2
0x7ce ADD
0x7cf DUP7
0x7d0 SWAP1
0x7d1 SSTORE
0x7d2 PUSH1 0x3
0x7d4 ADD
0x7d5 DUP1
0x7d6 SLOAD
0x7d7 PUSH2 0xff00
0x7da NOT
0x7db AND
0x7dc PUSH2 0x100
0x7df DUP7
0x7e0 ISZERO
0x7e1 ISZERO
0x7e2 SWAP1
0x7e3 DUP2
0x7e4 MUL
0x7e5 SWAP2
0x7e6 SWAP1
0x7e7 SWAP2
0x7e8 OR
0x7e9 SWAP1
0x7ea SWAP2
0x7eb SSTORE
0x7ec DUP3
0x7ed MLOAD
0x7ee SWAP1
0x7ef DUP2
0x7f0 MSTORE
0x7f1 SWAP2
0x7f2 MLOAD
0x7f3 DUP6
0x7f4 SWAP4
0x7f5 SWAP3
0x7f6 PUSH32 0x16bc0c67ce43cf944fbe3163b00e641df0ac74ac64c982170bc2c407607dab14
0x817 SWAP3
0x818 SWAP1
0x819 DUP3
0x81a SWAP1
0x81b SUB
0x81c ADD
0x81d SWAP1
0x81e LOG3
0x81f POP
0x820 POP
0x821 POP
0x822 JUMP
---
0x7b3: JUMPDEST 
0x7b4: V666 = 0xffff
0x7b8: V667 = AND V318 0xffff
0x7b9: V668 = 0x0
0x7bd: M[0x0] = V667
0x7be: V669 = 0x1
0x7c0: V670 = 0x20
0x7c4: M[0x20] = 0x1
0x7c5: V671 = 0x40
0x7ca: V672 = SHA3 0x0 0x40
0x7cb: V673 = 0x4
0x7ce: V674 = ADD V672 0x4
0x7d1: S[V674] = V320
0x7d2: V675 = 0x3
0x7d4: V676 = ADD 0x3 V672
0x7d6: V677 = S[V676]
0x7d7: V678 = 0xff00
0x7da: V679 = NOT 0xff00
0x7db: V680 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V677
0x7dc: V681 = 0x100
0x7e0: V682 = ISZERO V324
0x7e1: V683 = ISZERO V682
0x7e4: V684 = MUL V683 0x100
0x7e8: V685 = OR V684 V680
0x7eb: S[V676] = V685
0x7ed: V686 = M[0x40]
0x7f0: M[V686] = V683
0x7f2: V687 = M[0x40]
0x7f6: V688 = 0x16bc0c67ce43cf944fbe3163b00e641df0ac74ac64c982170bc2c407607dab14
0x81b: V689 = SUB V686 V687
0x81c: V690 = ADD V689 0x20
0x81e: LOG V687 V690 0x16bc0c67ce43cf944fbe3163b00e641df0ac74ac64c982170bc2c407607dab14 V667 V320
0x822: JUMP 0x14c
---
Entry stack: [V11, 0x14c, V318, V320, V324]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x823
[0x823:0x835]
---
Predecessors: [0x3fa]
Successors: [0x836, 0x83a]
---
0x823 JUMPDEST
0x824 PUSH1 0x0
0x826 SLOAD
0x827 PUSH1 0x1
0x829 PUSH1 0xa0
0x82b PUSH1 0x2
0x82d EXP
0x82e SUB
0x82f AND
0x830 CALLER
0x831 EQ
0x832 PUSH2 0x83a
0x835 JUMPI
---
0x823: JUMPDEST 
0x824: V691 = 0x0
0x826: V692 = S[0x0]
0x827: V693 = 0x1
0x829: V694 = 0xa0
0x82b: V695 = 0x2
0x82d: V696 = EXP 0x2 0xa0
0x82e: V697 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82f: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0x830: V699 = CALLER
0x831: V700 = EQ V699 V698
0x832: V701 = 0x83a
0x835: JUMPI 0x83a V700
---
Entry stack: [V11, 0x14c, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V338]

================================

Block 0x836
[0x836:0x839]
---
Predecessors: [0x823]
Successors: []
---
0x836 PUSH1 0x0
0x838 DUP1
0x839 REVERT
---
0x836: V702 = 0x0
0x839: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V338]

================================

Block 0x83a
[0x83a:0x84a]
---
Predecessors: [0x823]
Successors: [0x84b, 0x84f]
---
0x83a JUMPDEST
0x83b PUSH1 0x1
0x83d PUSH1 0xa0
0x83f PUSH1 0x2
0x841 EXP
0x842 SUB
0x843 DUP2
0x844 AND
0x845 ISZERO
0x846 ISZERO
0x847 PUSH2 0x84f
0x84a JUMPI
---
0x83a: JUMPDEST 
0x83b: V703 = 0x1
0x83d: V704 = 0xa0
0x83f: V705 = 0x2
0x841: V706 = EXP 0x2 0xa0
0x842: V707 = SUB 0x10000000000000000000000000000000000000000 0x1
0x844: V708 = AND V338 0xffffffffffffffffffffffffffffffffffffffff
0x845: V709 = ISZERO V708
0x846: V710 = ISZERO V709
0x847: V711 = 0x84f
0x84a: JUMPI 0x84f V710
---
Entry stack: [V11, 0x14c, V338]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x14c, V338]

================================

Block 0x84b
[0x84b:0x84e]
---
Predecessors: [0x83a]
Successors: []
---
0x84b PUSH1 0x0
0x84d DUP1
0x84e REVERT
---
0x84b: V712 = 0x0
0x84e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V338]

================================

Block 0x84f
[0x84f:0x8c5]
---
Predecessors: [0x83a]
Successors: [0x14c]
---
0x84f JUMPDEST
0x850 PUSH1 0x0
0x852 SLOAD
0x853 PUSH1 0x40
0x855 DUP1
0x856 MLOAD
0x857 PUSH1 0x1
0x859 PUSH1 0xa0
0x85b PUSH1 0x2
0x85d EXP
0x85e SUB
0x85f SWAP3
0x860 DUP4
0x861 AND
0x862 DUP2
0x863 MSTORE
0x864 SWAP2
0x865 DUP4
0x866 AND
0x867 PUSH1 0x20
0x869 DUP4
0x86a ADD
0x86b MSTORE
0x86c DUP1
0x86d MLOAD
0x86e PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x88f SWAP3
0x890 DUP2
0x891 SWAP1
0x892 SUB
0x893 SWAP1
0x894 SWAP2
0x895 ADD
0x896 SWAP1
0x897 LOG1
0x898 PUSH1 0x0
0x89a DUP1
0x89b SLOAD
0x89c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b1 NOT
0x8b2 AND
0x8b3 PUSH1 0x1
0x8b5 PUSH1 0xa0
0x8b7 PUSH1 0x2
0x8b9 EXP
0x8ba SUB
0x8bb SWAP3
0x8bc SWAP1
0x8bd SWAP3
0x8be AND
0x8bf SWAP2
0x8c0 SWAP1
0x8c1 SWAP2
0x8c2 OR
0x8c3 SWAP1
0x8c4 SSTORE
0x8c5 JUMP
---
0x84f: JUMPDEST 
0x850: V713 = 0x0
0x852: V714 = S[0x0]
0x853: V715 = 0x40
0x856: V716 = M[0x40]
0x857: V717 = 0x1
0x859: V718 = 0xa0
0x85b: V719 = 0x2
0x85d: V720 = EXP 0x2 0xa0
0x85e: V721 = SUB 0x10000000000000000000000000000000000000000 0x1
0x861: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0x863: M[V716] = V722
0x866: V723 = AND V338 0xffffffffffffffffffffffffffffffffffffffff
0x867: V724 = 0x20
0x86a: V725 = ADD V716 0x20
0x86b: M[V725] = V723
0x86d: V726 = M[0x40]
0x86e: V727 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x892: V728 = SUB V716 V726
0x895: V729 = ADD 0x40 V728
0x897: LOG V726 V729 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x898: V730 = 0x0
0x89b: V731 = S[0x0]
0x89c: V732 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b1: V733 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8b2: V734 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V731
0x8b3: V735 = 0x1
0x8b5: V736 = 0xa0
0x8b7: V737 = 0x2
0x8b9: V738 = EXP 0x2 0xa0
0x8ba: V739 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8be: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x8c2: V741 = OR V740 V734
0x8c4: S[0x0] = V741
0x8c5: JUMP 0x14c
---
Entry stack: [V11, 0x14c, V338]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c6
[0x8c6:0x8eb]
---
Predecessors: [0x432]
Successors: [0x8ec, 0x8f0]
---
0x8c6 JUMPDEST
0x8c7 PUSH2 0xffff
0x8ca DUP3
0x8cb AND
0x8cc PUSH1 0x0
0x8ce SWAP1
0x8cf DUP2
0x8d0 MSTORE
0x8d1 PUSH1 0x1
0x8d3 PUSH1 0x20
0x8d5 MSTORE
0x8d6 PUSH1 0x40
0x8d8 SWAP1
0x8d9 SHA3
0x8da PUSH1 0x3
0x8dc ADD
0x8dd SLOAD
0x8de PUSH2 0x100
0x8e1 SWAP1
0x8e2 DIV
0x8e3 PUSH1 0xff
0x8e5 AND
0x8e6 ISZERO
0x8e7 ISZERO
0x8e8 PUSH2 0x8f0
0x8eb JUMPI
---
0x8c6: JUMPDEST 
0x8c7: V742 = 0xffff
0x8cb: V743 = AND V89 0xffff
0x8cc: V744 = 0x0
0x8d0: M[0x0] = V743
0x8d1: V745 = 0x1
0x8d3: V746 = 0x20
0x8d5: M[0x20] = 0x1
0x8d6: V747 = 0x40
0x8d9: V748 = SHA3 0x0 0x40
0x8da: V749 = 0x3
0x8dc: V750 = ADD 0x3 V748
0x8dd: V751 = S[V750]
0x8de: V752 = 0x100
0x8e2: V753 = DIV V751 0x100
0x8e3: V754 = 0xff
0x8e5: V755 = AND 0xff V753
0x8e6: V756 = ISZERO V755
0x8e7: V757 = ISZERO V756
0x8e8: V758 = 0x8f0
0x8eb: JUMPI 0x8f0 V757
---
Entry stack: [V11, 0x14c, V89, 0x43b, V89, V355]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x14c, V89, 0x43b, V89, V355]

================================

Block 0x8ec
[0x8ec:0x8ef]
---
Predecessors: [0x8c6]
Successors: []
---
0x8ec PUSH1 0x0
0x8ee DUP1
0x8ef REVERT
---
0x8ec: V759 = 0x0
0x8ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V89, 0x43b, V89, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V89, 0x43b, V89, V355]

================================

Block 0x8f0
[0x8f0:0x90e]
---
Predecessors: [0x8c6]
Successors: [0x90f, 0x913]
---
0x8f0 JUMPDEST
0x8f1 PUSH2 0xffff
0x8f4 DUP3
0x8f5 AND
0x8f6 PUSH1 0x0
0x8f8 SWAP1
0x8f9 DUP2
0x8fa MSTORE
0x8fb PUSH1 0x1
0x8fd PUSH1 0x20
0x8ff MSTORE
0x900 PUSH1 0x40
0x902 SWAP1
0x903 SHA3
0x904 PUSH1 0x4
0x906 ADD
0x907 SLOAD
0x908 DUP2
0x909 LT
0x90a ISZERO
0x90b PUSH2 0x913
0x90e JUMPI
---
0x8f0: JUMPDEST 
0x8f1: V760 = 0xffff
0x8f5: V761 = AND V89 0xffff
0x8f6: V762 = 0x0
0x8fa: M[0x0] = V761
0x8fb: V763 = 0x1
0x8fd: V764 = 0x20
0x8ff: M[0x20] = 0x1
0x900: V765 = 0x40
0x903: V766 = SHA3 0x0 0x40
0x904: V767 = 0x4
0x906: V768 = ADD 0x4 V766
0x907: V769 = S[V768]
0x909: V770 = LT V355 V769
0x90a: V771 = ISZERO V770
0x90b: V772 = 0x913
0x90e: JUMPI 0x913 V771
---
Entry stack: [V11, 0x14c, V89, 0x43b, V89, V355]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x14c, V89, 0x43b, V89, V355]

================================

Block 0x90f
[0x90f:0x912]
---
Predecessors: [0x8f0]
Successors: []
---
0x90f PUSH1 0x0
0x911 DUP1
0x912 REVERT
---
0x90f: V773 = 0x0
0x912: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V89, 0x43b, V89, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V89, 0x43b, V89, V355]

================================

Block 0x913
[0x913:0x9a3]
---
Predecessors: [0x8f0]
Successors: [0x9a4, 0x9ad]
---
0x913 JUMPDEST
0x914 PUSH2 0xffff
0x917 DUP3
0x918 AND
0x919 PUSH1 0x0
0x91b SWAP1
0x91c DUP2
0x91d MSTORE
0x91e PUSH1 0x1
0x920 PUSH1 0x20
0x922 DUP2
0x923 SWAP1
0x924 MSTORE
0x925 PUSH1 0x40
0x927 DUP1
0x928 DUP4
0x929 SHA3
0x92a SWAP2
0x92b DUP3
0x92c ADD
0x92d DUP1
0x92e SLOAD
0x92f PUSH24 0xffffffff0000000000000000000000000000000000000000
0x948 NOT
0x949 AND
0x94a PUSH21 0x10000000000000000000000000000000000000000
0x960 TIMESTAMP
0x961 PUSH4 0xffffffff
0x966 AND
0x967 MUL
0x968 OR
0x969 SWAP1
0x96a SSTORE
0x96b DUP2
0x96c SLOAD
0x96d PUSH1 0x4
0x96f SWAP1
0x970 SWAP3
0x971 ADD
0x972 SLOAD
0x973 SWAP1
0x974 MLOAD
0x975 PUSH6 0x10000000000
0x97c SWAP1
0x97d SWAP3
0x97e DIV
0x97f PUSH1 0x1
0x981 PUSH1 0xa0
0x983 PUSH1 0x2
0x985 EXP
0x986 SUB
0x987 AND
0x988 SWAP3
0x989 PUSH2 0x8fc
0x98c DUP3
0x98d ISZERO
0x98e MUL
0x98f SWAP3
0x990 SWAP1
0x991 DUP2
0x992 DUP2
0x993 DUP2
0x994 DUP6
0x995 DUP9
0x996 DUP9
0x997 CALL
0x998 SWAP4
0x999 POP
0x99a POP
0x99b POP
0x99c POP
0x99d ISZERO
0x99e DUP1
0x99f ISZERO
0x9a0 PUSH2 0x9ad
0x9a3 JUMPI
---
0x913: JUMPDEST 
0x914: V774 = 0xffff
0x918: V775 = AND V89 0xffff
0x919: V776 = 0x0
0x91d: M[0x0] = V775
0x91e: V777 = 0x1
0x920: V778 = 0x20
0x924: M[0x20] = 0x1
0x925: V779 = 0x40
0x929: V780 = SHA3 0x0 0x40
0x92c: V781 = ADD V780 0x1
0x92e: V782 = S[V781]
0x92f: V783 = 0xffffffff0000000000000000000000000000000000000000
0x948: V784 = NOT 0xffffffff0000000000000000000000000000000000000000
0x949: V785 = AND 0xffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff V782
0x94a: V786 = 0x10000000000000000000000000000000000000000
0x960: V787 = TIMESTAMP
0x961: V788 = 0xffffffff
0x966: V789 = AND 0xffffffff V787
0x967: V790 = MUL V789 0x10000000000000000000000000000000000000000
0x968: V791 = OR V790 V785
0x96a: S[V781] = V791
0x96c: V792 = S[V780]
0x96d: V793 = 0x4
0x971: V794 = ADD V780 0x4
0x972: V795 = S[V794]
0x974: V796 = M[0x40]
0x975: V797 = 0x10000000000
0x97e: V798 = DIV V792 0x10000000000
0x97f: V799 = 0x1
0x981: V800 = 0xa0
0x983: V801 = 0x2
0x985: V802 = EXP 0x2 0xa0
0x986: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x987: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0x989: V805 = 0x8fc
0x98d: V806 = ISZERO V795
0x98e: V807 = MUL V806 0x8fc
0x997: V808 = CALL V807 V804 V795 V796 0x0 V796 0x0
0x99d: V809 = ISZERO V808
0x99f: V810 = ISZERO V809
0x9a0: V811 = 0x9ad
0x9a3: JUMPI 0x9ad V810
---
Entry stack: [V11, 0x14c, V89, 0x43b, V89, V355]
Stack pops: 2
Stack additions: [S1, S0, V809]
Exit stack: [V11, 0x14c, V89, 0x43b, V89, V355, V809]

================================

Block 0x9a4
[0x9a4:0x9ac]
---
Predecessors: [0x913]
Successors: []
---
0x9a4 RETURNDATASIZE
0x9a5 PUSH1 0x0
0x9a7 DUP1
0x9a8 RETURNDATACOPY
0x9a9 RETURNDATASIZE
0x9aa PUSH1 0x0
0x9ac REVERT
---
0x9a4: V812 = RETURNDATASIZE
0x9a5: V813 = 0x0
0x9a8: RETURNDATACOPY 0x0 0x0 V812
0x9a9: V814 = RETURNDATASIZE
0x9aa: V815 = 0x0
0x9ac: REVERT 0x0 V814
---
Entry stack: [V11, 0x14c, V89, 0x43b, V89, V355, V809]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V89, 0x43b, V89, V355, V809]

================================

Block 0x9ad
[0x9ad:0x9db]
---
Predecessors: [0x913]
Successors: [0xf32]
---
0x9ad JUMPDEST
0x9ae POP
0x9af PUSH2 0xffff
0x9b2 DUP3
0x9b3 AND
0x9b4 PUSH1 0x0
0x9b6 SWAP1
0x9b7 DUP2
0x9b8 MSTORE
0x9b9 PUSH1 0x1
0x9bb PUSH1 0x20
0x9bd MSTORE
0x9be PUSH1 0x40
0x9c0 SWAP1
0x9c1 SHA3
0x9c2 PUSH1 0x4
0x9c4 ADD
0x9c5 SLOAD
0x9c6 CALLER
0x9c7 SWAP1
0x9c8 PUSH2 0x8fc
0x9cb SWAP1
0x9cc PUSH2 0x9dc
0x9cf SWAP1
0x9d0 DUP5
0x9d1 SWAP1
0x9d2 PUSH4 0xffffffff
0x9d7 PUSH2 0xf32
0x9da AND
0x9db JUMP
---
0x9ad: JUMPDEST 
0x9af: V816 = 0xffff
0x9b3: V817 = AND V89 0xffff
0x9b4: V818 = 0x0
0x9b8: M[0x0] = V817
0x9b9: V819 = 0x1
0x9bb: V820 = 0x20
0x9bd: M[0x20] = 0x1
0x9be: V821 = 0x40
0x9c1: V822 = SHA3 0x0 0x40
0x9c2: V823 = 0x4
0x9c4: V824 = ADD 0x4 V822
0x9c5: V825 = S[V824]
0x9c6: V826 = CALLER
0x9c8: V827 = 0x8fc
0x9cc: V828 = 0x9dc
0x9d2: V829 = 0xffffffff
0x9d7: V830 = 0xf32
0x9da: V831 = AND 0xf32 0xffffffff
0x9db: JUMP 0xf32
---
Entry stack: [V11, 0x14c, V89, 0x43b, V89, V355, V809]
Stack pops: 3
Stack additions: [S2, S1, V826, 0x8fc, 0x9dc, S1, V825]
Exit stack: [V11, 0x14c, V89, 0x43b, V89, V355, V826, 0x8fc, 0x9dc, V355, V825]

================================

Block 0x9dc
[0x9dc:0x9fa]
---
Predecessors: [0xf3e]
Successors: [0x9fb, 0xa04]
---
0x9dc JUMPDEST
0x9dd PUSH1 0x40
0x9df MLOAD
0x9e0 DUP2
0x9e1 ISZERO
0x9e2 SWAP1
0x9e3 SWAP3
0x9e4 MUL
0x9e5 SWAP2
0x9e6 PUSH1 0x0
0x9e8 DUP2
0x9e9 DUP2
0x9ea DUP2
0x9eb DUP6
0x9ec DUP9
0x9ed DUP9
0x9ee CALL
0x9ef SWAP4
0x9f0 POP
0x9f1 POP
0x9f2 POP
0x9f3 POP
0x9f4 ISZERO
0x9f5 DUP1
0x9f6 ISZERO
0x9f7 PUSH2 0xa04
0x9fa JUMPI
---
0x9dc: JUMPDEST 
0x9dd: V832 = 0x40
0x9df: V833 = M[0x40]
0x9e1: V834 = ISZERO V1255
0x9e4: V835 = MUL S1 V834
0x9e6: V836 = 0x0
0x9ee: V837 = CALL V835 S2 V1255 V833 0x0 V833 0x0
0x9f4: V838 = ISZERO V837
0x9f6: V839 = ISZERO V838
0x9f7: V840 = 0xa04
0x9fa: JUMPI 0xa04 V839
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1255]
Stack pops: 3
Stack additions: [V838]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V838]

================================

Block 0x9fb
[0x9fb:0xa03]
---
Predecessors: [0x9dc]
Successors: []
---
0x9fb RETURNDATASIZE
0x9fc PUSH1 0x0
0x9fe DUP1
0x9ff RETURNDATACOPY
0xa00 RETURNDATASIZE
0xa01 PUSH1 0x0
0xa03 REVERT
---
0x9fb: V841 = RETURNDATASIZE
0x9fc: V842 = 0x0
0x9ff: RETURNDATACOPY 0x0 0x0 V841
0xa00: V843 = RETURNDATASIZE
0xa01: V844 = 0x0
0xa03: REVERT 0x0 V843
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V838]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V838]

================================

Block 0xa04
[0xa04:0xaa2]
---
Predecessors: [0x9dc]
Successors: [0x43b]
---
0xa04 JUMPDEST
0xa05 POP
0xa06 PUSH2 0xffff
0xa09 DUP3
0xa0a AND
0xa0b PUSH1 0x0
0xa0d DUP2
0xa0e DUP2
0xa0f MSTORE
0xa10 PUSH1 0x1
0xa12 PUSH1 0x20
0xa14 DUP2
0xa15 DUP2
0xa16 MSTORE
0xa17 PUSH1 0x40
0xa19 SWAP3
0xa1a DUP4
0xa1b SWAP1
0xa1c SHA3
0xa1d DUP1
0xa1e SLOAD
0xa1f SWAP3
0xa20 DUP2
0xa21 ADD
0xa22 DUP1
0xa23 SLOAD
0xa24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa39 NOT
0xa3a AND
0xa3b PUSH1 0x1
0xa3d PUSH1 0xa0
0xa3f PUSH1 0x2
0xa41 EXP
0xa42 SUB
0xa43 PUSH6 0x10000000000
0xa4a SWAP1
0xa4b SWAP6
0xa4c DIV
0xa4d DUP6
0xa4e AND
0xa4f OR
0xa50 SWAP1
0xa51 DUP2
0xa52 SWAP1
0xa53 SSTORE
0xa54 PUSH1 0x3
0xa56 DUP3
0xa57 ADD
0xa58 DUP1
0xa59 SLOAD
0xa5a PUSH2 0xff00
0xa5d NOT
0xa5e AND
0xa5f SWAP1
0xa60 SSTORE
0xa61 PUSH1 0x4
0xa63 SWAP1
0xa64 SWAP2
0xa65 ADD
0xa66 SLOAD
0xa67 DUP5
0xa68 MLOAD
0xa69 SWAP6
0xa6a DUP7
0xa6b MSTORE
0xa6c SWAP4
0xa6d MLOAD
0xa6e SWAP4
0xa6f SWAP5
0xa70 CALLER
0xa71 SWAP5
0xa72 SWAP2
0xa73 SWAP1
0xa74 SWAP4
0xa75 AND
0xa76 SWAP3
0xa77 PUSH32 0x209ffa82f807d73ef26d9897ba979d93a51d57b84cd1779b347ba76c874e3dfb
0xa98 SWAP3
0xa99 SWAP1
0xa9a DUP3
0xa9b SWAP1
0xa9c SUB
0xa9d ADD
0xa9e SWAP1
0xa9f LOG4
0xaa0 POP
0xaa1 POP
0xaa2 JUMP
---
0xa04: JUMPDEST 
0xa06: V845 = 0xffff
0xa0a: V846 = AND S2 0xffff
0xa0b: V847 = 0x0
0xa0f: M[0x0] = V846
0xa10: V848 = 0x1
0xa12: V849 = 0x20
0xa16: M[0x20] = 0x1
0xa17: V850 = 0x40
0xa1c: V851 = SHA3 0x0 0x40
0xa1e: V852 = S[V851]
0xa21: V853 = ADD V851 0x1
0xa23: V854 = S[V853]
0xa24: V855 = 0xffffffffffffffffffffffffffffffffffffffff
0xa39: V856 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa3a: V857 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V854
0xa3b: V858 = 0x1
0xa3d: V859 = 0xa0
0xa3f: V860 = 0x2
0xa41: V861 = EXP 0x2 0xa0
0xa42: V862 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa43: V863 = 0x10000000000
0xa4c: V864 = DIV V852 0x10000000000
0xa4e: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0xa4f: V866 = OR V865 V857
0xa53: S[V853] = V866
0xa54: V867 = 0x3
0xa57: V868 = ADD V851 0x3
0xa59: V869 = S[V868]
0xa5a: V870 = 0xff00
0xa5d: V871 = NOT 0xff00
0xa5e: V872 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V869
0xa60: S[V868] = V872
0xa61: V873 = 0x4
0xa65: V874 = ADD V851 0x4
0xa66: V875 = S[V874]
0xa68: V876 = M[0x40]
0xa6b: M[V876] = V846
0xa6d: V877 = M[0x40]
0xa70: V878 = CALLER
0xa75: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V866
0xa77: V880 = 0x209ffa82f807d73ef26d9897ba979d93a51d57b84cd1779b347ba76c874e3dfb
0xa9c: V881 = SUB V876 V877
0xa9d: V882 = ADD V881 0x20
0xa9f: LOG V877 V882 0x209ffa82f807d73ef26d9897ba979d93a51d57b84cd1779b347ba76c874e3dfb V879 V878 V875
0xaa2: JUMP S3
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V838]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0xaa3
[0xaa3:0xab1]
---
Predecessors: [0x440]
Successors: [0x6ec]
---
0xaa3 JUMPDEST
0xaa4 PUSH1 0x0
0xaa6 PUSH2 0xab2
0xaa9 DUP4
0xaaa PUSH2 0xffff
0xaad AND
0xaae PUSH2 0x6ec
0xab1 JUMP
---
0xaa3: JUMPDEST 
0xaa4: V883 = 0x0
0xaa6: V884 = 0xab2
0xaaa: V885 = 0xffff
0xaad: V886 = AND 0xffff V89
0xaae: V887 = 0x6ec
0xab1: JUMP 0x6ec
---
Entry stack: [V11, 0x14c, V89, 0x44a, V89, V359]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0xab2, V886]
Exit stack: [V11, 0x14c, V89, 0x44a, V89, V359, 0x0, 0xab2, V886]

================================

Block 0xab2
[0xab2:0xab8]
---
Predecessors: [0x4a8]
Successors: [0xab9, 0xad2]
---
0xab2 JUMPDEST
0xab3 DUP1
0xab4 ISZERO
0xab5 PUSH2 0xad2
0xab8 JUMPI
---
0xab2: JUMPDEST 
0xab4: V888 = ISZERO S0
0xab5: V889 = 0xad2
0xab8: JUMPI 0xad2 V888
---
Entry stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xab9
[0xab9:0xad1]
---
Predecessors: [0xab2]
Successors: [0xad2]
---
0xab9 POP
0xaba PUSH2 0xffff
0xabd DUP4
0xabe AND
0xabf PUSH1 0x0
0xac1 SWAP1
0xac2 DUP2
0xac3 MSTORE
0xac4 PUSH1 0x9
0xac6 PUSH1 0x20
0xac8 MSTORE
0xac9 PUSH1 0x40
0xacb SWAP1
0xacc SHA3
0xacd SLOAD
0xace PUSH1 0xff
0xad0 AND
0xad1 ISZERO
---
0xaba: V890 = 0xffff
0xabe: V891 = AND S3 0xffff
0xabf: V892 = 0x0
0xac3: M[0x0] = V891
0xac4: V893 = 0x9
0xac6: V894 = 0x20
0xac8: M[0x20] = 0x9
0xac9: V895 = 0x40
0xacc: V896 = SHA3 0x0 0x40
0xacd: V897 = S[V896]
0xace: V898 = 0xff
0xad0: V899 = AND 0xff V897
0xad1: V900 = ISZERO V899
---
Entry stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V900]
Exit stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V900]

================================

Block 0xad2
[0xad2:0xad8]
---
Predecessors: [0xab2, 0xab9]
Successors: [0xad9, 0xadd]
---
0xad2 JUMPDEST
0xad3 ISZERO
0xad4 ISZERO
0xad5 PUSH2 0xadd
0xad8 JUMPI
---
0xad2: JUMPDEST 
0xad3: V901 = ISZERO S0
0xad4: V902 = ISZERO V901
0xad5: V903 = 0xadd
0xad8: JUMPI 0xadd V902
---
Entry stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xad9
[0xad9:0xadc]
---
Predecessors: [0xad2]
Successors: []
---
0xad9 PUSH1 0x0
0xadb DUP1
0xadc REVERT
---
0xad9: V904 = 0x0
0xadc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, S14, {0x14c, 0x44a}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, S14, {0x14c, 0x44a}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xadd
[0xadd:0xaf0]
---
Predecessors: [0xad2]
Successors: [0xf32]
---
0xadd JUMPDEST
0xade PUSH1 0x2
0xae0 SLOAD
0xae1 PUSH2 0xaf1
0xae4 SWAP1
0xae5 DUP4
0xae6 SWAP1
0xae7 PUSH4 0xffffffff
0xaec PUSH2 0xf32
0xaef AND
0xaf0 JUMP
---
0xadd: JUMPDEST 
0xade: V905 = 0x2
0xae0: V906 = S[0x2]
0xae1: V907 = 0xaf1
0xae7: V908 = 0xffffffff
0xaec: V909 = 0xf32
0xaef: V910 = AND 0xf32 0xffffffff
0xaf0: JUMP 0xf32
---
Entry stack: [V11, 0x14c, S14, {0x14c, 0x44a}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xaf1, S1, V906]
Exit stack: [V11, 0x14c, S14, {0x14c, 0x44a}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xaf1, S1, V906]

================================

Block 0xaf1
[0xaf1:0xafc]
---
Predecessors: [0xf3e]
Successors: [0xafd, 0xb2b]
---
0xaf1 JUMPDEST
0xaf2 SWAP1
0xaf3 POP
0xaf4 PUSH1 0x0
0xaf6 DUP2
0xaf7 GT
0xaf8 ISZERO
0xaf9 PUSH2 0xb2b
0xafc JUMPI
---
0xaf1: JUMPDEST 
0xaf4: V911 = 0x0
0xaf7: V912 = GT V1255 0x0
0xaf8: V913 = ISZERO V912
0xaf9: V914 = 0xb2b
0xafc: JUMPI 0xb2b V913
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1255]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1255]

================================

Block 0xafd
[0xafd:0xb1f]
---
Predecessors: [0xaf1]
Successors: [0xb20, 0xb29]
---
0xafd PUSH1 0x40
0xaff MLOAD
0xb00 CALLER
0xb01 SWAP1
0xb02 DUP3
0xb03 ISZERO
0xb04 PUSH2 0x8fc
0xb07 MUL
0xb08 SWAP1
0xb09 DUP4
0xb0a SWAP1
0xb0b PUSH1 0x0
0xb0d DUP2
0xb0e DUP2
0xb0f DUP2
0xb10 DUP6
0xb11 DUP9
0xb12 DUP9
0xb13 CALL
0xb14 SWAP4
0xb15 POP
0xb16 POP
0xb17 POP
0xb18 POP
0xb19 ISZERO
0xb1a DUP1
0xb1b ISZERO
0xb1c PUSH2 0xb29
0xb1f JUMPI
---
0xafd: V915 = 0x40
0xaff: V916 = M[0x40]
0xb00: V917 = CALLER
0xb03: V918 = ISZERO V1255
0xb04: V919 = 0x8fc
0xb07: V920 = MUL 0x8fc V918
0xb0b: V921 = 0x0
0xb13: V922 = CALL V920 V917 V1255 V916 0x0 V916 0x0
0xb19: V923 = ISZERO V922
0xb1b: V924 = ISZERO V923
0xb1c: V925 = 0xb29
0xb1f: JUMPI 0xb29 V924
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1255]
Stack pops: 1
Stack additions: [S0, V923]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1255, V923]

================================

Block 0xb20
[0xb20:0xb28]
---
Predecessors: [0xafd]
Successors: []
---
0xb20 RETURNDATASIZE
0xb21 PUSH1 0x0
0xb23 DUP1
0xb24 RETURNDATACOPY
0xb25 RETURNDATASIZE
0xb26 PUSH1 0x0
0xb28 REVERT
---
0xb20: V926 = RETURNDATASIZE
0xb21: V927 = 0x0
0xb24: RETURNDATACOPY 0x0 0x0 V926
0xb25: V928 = RETURNDATASIZE
0xb26: V929 = 0x0
0xb28: REVERT 0x0 V928
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1255, V923]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1255, V923]

================================

Block 0xb29
[0xb29:0xb2a]
---
Predecessors: [0xafd]
Successors: [0xb2b]
---
0xb29 JUMPDEST
0xb2a POP
---
0xb29: JUMPDEST 
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1255, V923]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1255]

================================

Block 0xb2b
[0xb2b:0xb5c]
---
Predecessors: [0xaf1, 0xb29]
Successors: [0xb5d, 0xb66]
---
0xb2b JUMPDEST
0xb2c PUSH1 0x0
0xb2e DUP1
0xb2f SLOAD
0xb30 PUSH1 0x2
0xb32 SLOAD
0xb33 PUSH1 0x40
0xb35 MLOAD
0xb36 PUSH1 0x1
0xb38 PUSH1 0xa0
0xb3a PUSH1 0x2
0xb3c EXP
0xb3d SUB
0xb3e SWAP1
0xb3f SWAP3
0xb40 AND
0xb41 SWAP3
0xb42 DUP2
0xb43 ISZERO
0xb44 PUSH2 0x8fc
0xb47 MUL
0xb48 SWAP3
0xb49 SWAP1
0xb4a DUP2
0xb4b DUP2
0xb4c DUP2
0xb4d DUP6
0xb4e DUP9
0xb4f DUP9
0xb50 CALL
0xb51 SWAP4
0xb52 POP
0xb53 POP
0xb54 POP
0xb55 POP
0xb56 ISZERO
0xb57 DUP1
0xb58 ISZERO
0xb59 PUSH2 0xb66
0xb5c JUMPI
---
0xb2b: JUMPDEST 
0xb2c: V930 = 0x0
0xb2f: V931 = S[0x0]
0xb30: V932 = 0x2
0xb32: V933 = S[0x2]
0xb33: V934 = 0x40
0xb35: V935 = M[0x40]
0xb36: V936 = 0x1
0xb38: V937 = 0xa0
0xb3a: V938 = 0x2
0xb3c: V939 = EXP 0x2 0xa0
0xb3d: V940 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb40: V941 = AND V931 0xffffffffffffffffffffffffffffffffffffffff
0xb43: V942 = ISZERO V933
0xb44: V943 = 0x8fc
0xb47: V944 = MUL 0x8fc V942
0xb50: V945 = CALL V944 V941 V933 V935 0x0 V935 0x0
0xb56: V946 = ISZERO V945
0xb58: V947 = ISZERO V946
0xb59: V948 = 0xb66
0xb5c: JUMPI 0xb66 V947
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1255]
Stack pops: 0
Stack additions: [V946]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1255, V946]

================================

Block 0xb5d
[0xb5d:0xb65]
---
Predecessors: [0xb2b]
Successors: []
---
0xb5d RETURNDATASIZE
0xb5e PUSH1 0x0
0xb60 DUP1
0xb61 RETURNDATACOPY
0xb62 RETURNDATASIZE
0xb63 PUSH1 0x0
0xb65 REVERT
---
0xb5d: V949 = RETURNDATASIZE
0xb5e: V950 = 0x0
0xb61: RETURNDATACOPY 0x0 0x0 V949
0xb62: V951 = RETURNDATASIZE
0xb63: V952 = 0x0
0xb65: REVERT 0x0 V951
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1255, V946]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1255, V946]

================================

Block 0xb66
[0xb66:0xb87]
---
Predecessors: [0xb2b]
Successors: [0x47a]
---
0xb66 JUMPDEST
0xb67 POP
0xb68 PUSH1 0x40
0xb6a DUP1
0xb6b MLOAD
0xb6c PUSH2 0x140
0xb6f DUP2
0xb70 ADD
0xb71 SWAP1
0xb72 SWAP2
0xb73 MSTORE
0xb74 PUSH1 0x0
0xb76 DUP2
0xb77 MSTORE
0xb78 PUSH1 0x20
0xb7a DUP2
0xb7b ADD
0xb7c PUSH2 0xb88
0xb7f PUSH2 0xffff
0xb82 DUP7
0xb83 AND
0xb84 PUSH2 0x47a
0xb87 JUMP
---
0xb66: JUMPDEST 
0xb68: V953 = 0x40
0xb6b: V954 = M[0x40]
0xb6c: V955 = 0x140
0xb70: V956 = ADD V954 0x140
0xb73: M[0x40] = V956
0xb74: V957 = 0x0
0xb77: M[V954] = 0x0
0xb78: V958 = 0x20
0xb7b: V959 = ADD V954 0x20
0xb7c: V960 = 0xb88
0xb7f: V961 = 0xffff
0xb83: V962 = AND S3 0xffff
0xb84: V963 = 0x47a
0xb87: JUMP 0x47a
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1255, V946]
Stack pops: 4
Stack additions: [S3, S2, S1, V954, V959, 0xb88, V962]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1255, V954, V959, 0xb88, V962]

================================

Block 0xb88
[0xb88:0xbc6]
---
Predecessors: [0x4a8]
Successors: [0xbc7, 0xbc8]
---
0xb88 JUMPDEST
0xb89 PUSH4 0xffffffff
0xb8e SWAP1
0xb8f DUP2
0xb90 AND
0xb91 DUP3
0xb92 MSTORE
0xb93 CALLER
0xb94 PUSH1 0x20
0xb96 DUP4
0xb97 ADD
0xb98 MSTORE
0xb99 PUSH1 0x0
0xb9b SLOAD
0xb9c PUSH1 0x1
0xb9e PUSH1 0xa0
0xba0 PUSH1 0x2
0xba2 EXP
0xba3 SUB
0xba4 AND
0xba5 PUSH1 0x40
0xba7 DUP4
0xba8 ADD
0xba9 MSTORE
0xbaa TIMESTAMP
0xbab AND
0xbac PUSH1 0x60
0xbae DUP3
0xbaf ADD
0xbb0 MSTORE
0xbb1 PUSH1 0x8
0xbb3 DUP1
0xbb4 SLOAD
0xbb5 PUSH1 0x80
0xbb7 SWAP1
0xbb8 SWAP3
0xbb9 ADD
0xbba SWAP2
0xbbb PUSH2 0xffff
0xbbe DUP8
0xbbf AND
0xbc0 SWAP1
0xbc1 DUP2
0xbc2 LT
0xbc3 PUSH2 0xbc8
0xbc6 JUMPI
---
0xb88: JUMPDEST 
0xb89: V964 = 0xffffffff
0xb90: V965 = AND 0xffffffff S0
0xb92: M[S1] = V965
0xb93: V966 = CALLER
0xb94: V967 = 0x20
0xb97: V968 = ADD S1 0x20
0xb98: M[V968] = V966
0xb99: V969 = 0x0
0xb9b: V970 = S[0x0]
0xb9c: V971 = 0x1
0xb9e: V972 = 0xa0
0xba0: V973 = 0x2
0xba2: V974 = EXP 0x2 0xa0
0xba3: V975 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba4: V976 = AND 0xffffffffffffffffffffffffffffffffffffffff V970
0xba5: V977 = 0x40
0xba8: V978 = ADD S1 0x40
0xba9: M[V978] = V976
0xbaa: V979 = TIMESTAMP
0xbab: V980 = AND V979 0xffffffff
0xbac: V981 = 0x60
0xbaf: V982 = ADD S1 0x60
0xbb0: M[V982] = V980
0xbb1: V983 = 0x8
0xbb4: V984 = S[0x8]
0xbb5: V985 = 0x80
0xbb9: V986 = ADD S1 0x80
0xbbb: V987 = 0xffff
0xbbf: V988 = AND S5 0xffff
0xbc2: V989 = LT V988 V984
0xbc3: V990 = 0xbc8
0xbc6: JUMPI 0xbc8 V989
---
Entry stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V986, 0x8, V988]
Exit stack: [V11, 0x14c, S15, {0x14c, 0x44a}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V986, 0x8, V988]

================================

Block 0xbc7
[0xbc7:0xbc7]
---
Predecessors: [0xb88]
Successors: []
---
0xbc7 INVALID
---
0xbc7: INVALID 
---
Entry stack: [V11, 0x14c, S16, {0x14c, 0x44a}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V986, 0x8, V988]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, S16, {0x14c, 0x44a}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V986, 0x8, V988]

================================

Block 0xbc8
[0xbc8:0xda7]
---
Predecessors: [0xb88]
Successors: [0x14c, 0x44a]
---
0xbc8 JUMPDEST
0xbc9 PUSH1 0x0
0xbcb SWAP2
0xbcc DUP3
0xbcd MSTORE
0xbce PUSH1 0x20
0xbd0 DUP1
0xbd1 DUP4
0xbd2 SHA3
0xbd3 PUSH1 0x40
0xbd5 DUP1
0xbd6 MLOAD
0xbd7 DUP1
0xbd8 DUP3
0xbd9 ADD
0xbda DUP3
0xbdb MSTORE
0xbdc SWAP4
0xbdd SWAP1
0xbde SWAP2
0xbdf ADD
0xbe0 SLOAD
0xbe1 PUSH1 0xff
0xbe3 DUP1
0xbe4 DUP3
0xbe5 AND
0xbe6 DUP6
0xbe7 MSTORE
0xbe8 PUSH2 0x100
0xbeb SWAP2
0xbec DUP3
0xbed SWAP1
0xbee DIV
0xbef DUP2
0xbf0 AND
0xbf1 DUP6
0xbf2 DUP6
0xbf3 ADD
0xbf4 MSTORE
0xbf5 SWAP4
0xbf6 DUP7
0xbf7 MSTORE
0xbf8 DUP6
0xbf9 DUP4
0xbfa ADD
0xbfb DUP6
0xbfc SWAP1
0xbfd MSTORE
0xbfe DUP6
0xbff DUP3
0xc00 ADD
0xc01 DUP6
0xc02 SWAP1
0xc03 MSTORE
0xc04 PUSH1 0x60
0xc06 DUP1
0xc07 DUP8
0xc08 ADD
0xc09 DUP7
0xc0a SWAP1
0xc0b MSTORE
0xc0c PUSH1 0x80
0xc0e SWAP7
0xc0f DUP8
0xc10 ADD
0xc11 DUP7
0xc12 SWAP1
0xc13 MSTORE
0xc14 PUSH2 0xffff
0xc17 DUP12
0xc18 AND
0xc19 DUP1
0xc1a DUP8
0xc1b MSTORE
0xc1c PUSH1 0x1
0xc1e DUP1
0xc1f DUP7
0xc20 MSTORE
0xc21 DUP5
0xc22 DUP9
0xc23 SHA3
0xc24 DUP11
0xc25 MLOAD
0xc26 DUP2
0xc27 SLOAD
0xc28 DUP13
0xc29 DUP10
0xc2a ADD
0xc2b MLOAD
0xc2c DUP14
0xc2d DUP10
0xc2e ADD
0xc2f MLOAD
0xc30 PUSH1 0xff
0xc32 NOT
0xc33 SWAP3
0xc34 DUP4
0xc35 AND
0xc36 SWAP4
0xc37 DUP13
0xc38 AND
0xc39 SWAP4
0xc3a SWAP1
0xc3b SWAP4
0xc3c OR
0xc3d PUSH5 0xffffffff00
0xc43 NOT
0xc44 AND
0xc45 PUSH4 0xffffffff
0xc4a SWAP2
0xc4b DUP3
0xc4c AND
0xc4d DUP10
0xc4e MUL
0xc4f OR
0xc50 PUSH25 0xffffffffffffffffffffffffffffffffffffffff0000000000
0xc6a NOT
0xc6b AND
0xc6c PUSH6 0x10000000000
0xc73 PUSH1 0x1
0xc75 PUSH1 0xa0
0xc77 PUSH1 0x2
0xc79 EXP
0xc7a SUB
0xc7b SWAP5
0xc7c DUP6
0xc7d AND
0xc7e MUL
0xc7f OR
0xc80 DUP5
0xc81 SSTORE
0xc82 SWAP6
0xc83 DUP14
0xc84 ADD
0xc85 MLOAD
0xc86 DUP4
0xc87 DUP6
0xc88 ADD
0xc89 DUP1
0xc8a SLOAD
0xc8b SWAP14
0xc8c DUP16
0xc8d ADD
0xc8e MLOAD
0xc8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca4 NOT
0xca5 SWAP1
0xca6 SWAP15
0xca7 AND
0xca8 SWAP2
0xca9 SWAP1
0xcaa SWAP4
0xcab AND
0xcac OR
0xcad PUSH24 0xffffffff0000000000000000000000000000000000000000
0xcc6 NOT
0xcc7 AND
0xcc8 PUSH21 0x10000000000000000000000000000000000000000
0xcde SWAP13
0xcdf SWAP1
0xce0 SWAP7
0xce1 AND
0xce2 SWAP12
0xce3 SWAP1
0xce4 SWAP12
0xce5 MUL
0xce6 SWAP5
0xce7 SWAP1
0xce8 SWAP5
0xce9 OR
0xcea SWAP1
0xceb SWAP4
0xcec SSTORE
0xced PUSH1 0xa0
0xcef DUP11
0xcf0 ADD
0xcf1 MLOAD
0xcf2 DUP1
0xcf3 MLOAD
0xcf4 PUSH1 0x2
0xcf6 DUP6
0xcf7 ADD
0xcf8 DUP1
0xcf9 SLOAD
0xcfa SWAP3
0xcfb DUP10
0xcfc ADD
0xcfd MLOAD
0xcfe SWAP3
0xcff DUP13
0xd00 AND
0xd01 SWAP2
0xd02 DUP11
0xd03 AND
0xd04 SWAP2
0xd05 SWAP1
0xd06 SWAP2
0xd07 OR
0xd08 PUSH2 0xff00
0xd0b NOT
0xd0c SWAP1
0xd0d DUP2
0xd0e AND
0xd0f SWAP3
0xd10 DUP11
0xd11 AND
0xd12 DUP8
0xd13 MUL
0xd14 SWAP3
0xd15 SWAP1
0xd16 SWAP3
0xd17 OR
0xd18 SWAP1
0xd19 SSTORE
0xd1a PUSH1 0xc0
0xd1c DUP12
0xd1d ADD
0xd1e MLOAD
0xd1f PUSH1 0x3
0xd21 DUP6
0xd22 ADD
0xd23 DUP1
0xd24 SLOAD
0xd25 PUSH1 0xe0
0xd27 DUP15
0xd28 ADD
0xd29 MLOAD
0xd2a SWAP1
0xd2b DUP14
0xd2c AND
0xd2d SWAP3
0xd2e ISZERO
0xd2f ISZERO
0xd30 SWAP3
0xd31 SWAP1
0xd32 SWAP3
0xd33 OR
0xd34 SWAP1
0xd35 SWAP3
0xd36 AND
0xd37 SWAP1
0xd38 ISZERO
0xd39 ISZERO
0xd3a DUP7
0xd3b MUL
0xd3c OR
0xd3d SWAP1
0xd3e SSTORE
0xd3f SWAP3
0xd40 DUP10
0xd41 ADD
0xd42 MLOAD
0xd43 PUSH1 0x4
0xd45 DUP4
0xd46 ADD
0xd47 SSTORE
0xd48 PUSH2 0x120
0xd4b SWAP1
0xd4c SWAP9
0xd4d ADD
0xd4e MLOAD
0xd4f PUSH1 0x5
0xd51 SWAP1
0xd52 SWAP2
0xd53 ADD
0xd54 DUP1
0xd55 SLOAD
0xd56 DUP9
0xd57 AND
0xd58 SWAP2
0xd59 SWAP1
0xd5a SWAP6
0xd5b AND
0xd5c OR
0xd5d SWAP1
0xd5e SWAP4
0xd5f SSTORE
0xd60 PUSH1 0x9
0xd62 DUP3
0xd63 MSTORE
0xd64 SWAP3
0xd65 DUP4
0xd66 SWAP1
0xd67 SHA3
0xd68 DUP1
0xd69 SLOAD
0xd6a SWAP1
0xd6b SWAP5
0xd6c AND
0xd6d SWAP1
0xd6e SWAP2
0xd6f OR
0xd70 SWAP1
0xd71 SWAP3
0xd72 SSTORE
0xd73 DUP1
0xd74 MLOAD
0xd75 CALLER
0xd76 DUP2
0xd77 MSTORE
0xd78 SWAP1
0xd79 MLOAD
0xd7a PUSH31 0xd4e133f0cbf47a2f5b712c686307b561d94ad7814d40a2baf143016f1f695f
0xd9a SWAP3
0xd9b SWAP2
0xd9c DUP2
0xd9d SWAP1
0xd9e SUB
0xd9f SWAP1
0xda0 SWAP2
0xda1 ADD
0xda2 SWAP1
0xda3 LOG2
0xda4 POP
0xda5 POP
0xda6 POP
0xda7 JUMP
---
0xbc8: JUMPDEST 
0xbc9: V991 = 0x0
0xbcd: M[0x0] = 0x8
0xbce: V992 = 0x20
0xbd2: V993 = SHA3 0x0 0x20
0xbd3: V994 = 0x40
0xbd6: V995 = M[0x40]
0xbd9: V996 = ADD 0x40 V995
0xbdb: M[0x40] = V996
0xbdf: V997 = ADD V993 V988
0xbe0: V998 = S[V997]
0xbe1: V999 = 0xff
0xbe5: V1000 = AND V998 0xff
0xbe7: M[V995] = V1000
0xbe8: V1001 = 0x100
0xbee: V1002 = DIV V998 0x100
0xbf0: V1003 = AND 0xff V1002
0xbf3: V1004 = ADD 0x20 V995
0xbf4: M[V1004] = V1003
0xbf7: M[V986] = V995
0xbfa: V1005 = ADD 0x20 V986
0xbfd: M[V1005] = 0x0
0xc00: V1006 = ADD 0x40 V986
0xc03: M[V1006] = 0x0
0xc04: V1007 = 0x60
0xc08: V1008 = ADD V986 0x60
0xc0b: M[V1008] = 0x0
0xc0c: V1009 = 0x80
0xc10: V1010 = ADD 0x80 V986
0xc13: M[V1010] = 0x0
0xc14: V1011 = 0xffff
0xc18: V1012 = AND S6 0xffff
0xc1b: M[0x0] = V1012
0xc1c: V1013 = 0x1
0xc20: M[0x20] = 0x1
0xc23: V1014 = SHA3 0x0 0x40
0xc25: V1015 = M[S3]
0xc27: V1016 = S[V1014]
0xc2a: V1017 = ADD 0x20 S3
0xc2b: V1018 = M[V1017]
0xc2e: V1019 = ADD 0x40 S3
0xc2f: V1020 = M[V1019]
0xc30: V1021 = 0xff
0xc32: V1022 = NOT 0xff
0xc35: V1023 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1016
0xc38: V1024 = AND 0xff V1015
0xc3c: V1025 = OR V1024 V1023
0xc3d: V1026 = 0xffffffff00
0xc43: V1027 = NOT 0xffffffff00
0xc44: V1028 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff V1025
0xc45: V1029 = 0xffffffff
0xc4c: V1030 = AND 0xffffffff V1018
0xc4e: V1031 = MUL 0x100 V1030
0xc4f: V1032 = OR V1031 V1028
0xc50: V1033 = 0xffffffffffffffffffffffffffffffffffffffff0000000000
0xc6a: V1034 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000000000
0xc6b: V1035 = AND 0xffffffffffffff0000000000000000000000000000000000000000ffffffffff V1032
0xc6c: V1036 = 0x10000000000
0xc73: V1037 = 0x1
0xc75: V1038 = 0xa0
0xc77: V1039 = 0x2
0xc79: V1040 = EXP 0x2 0xa0
0xc7a: V1041 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7d: V1042 = AND 0xffffffffffffffffffffffffffffffffffffffff V1020
0xc7e: V1043 = MUL V1042 0x10000000000
0xc7f: V1044 = OR V1043 V1035
0xc81: S[V1014] = V1044
0xc84: V1045 = ADD S3 0x60
0xc85: V1046 = M[V1045]
0xc88: V1047 = ADD 0x1 V1014
0xc8a: V1048 = S[V1047]
0xc8d: V1049 = ADD S3 0x80
0xc8e: V1050 = M[V1049]
0xc8f: V1051 = 0xffffffffffffffffffffffffffffffffffffffff
0xca4: V1052 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xca7: V1053 = AND V1048 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xcab: V1054 = AND 0xffffffffffffffffffffffffffffffffffffffff V1046
0xcac: V1055 = OR V1054 V1053
0xcad: V1056 = 0xffffffff0000000000000000000000000000000000000000
0xcc6: V1057 = NOT 0xffffffff0000000000000000000000000000000000000000
0xcc7: V1058 = AND 0xffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff V1055
0xcc8: V1059 = 0x10000000000000000000000000000000000000000
0xce1: V1060 = AND 0xffffffff V1050
0xce5: V1061 = MUL V1060 0x10000000000000000000000000000000000000000
0xce9: V1062 = OR V1061 V1058
0xcec: S[V1047] = V1062
0xced: V1063 = 0xa0
0xcf0: V1064 = ADD S3 0xa0
0xcf1: V1065 = M[V1064]
0xcf3: V1066 = M[V1065]
0xcf4: V1067 = 0x2
0xcf7: V1068 = ADD V1014 0x2
0xcf9: V1069 = S[V1068]
0xcfc: V1070 = ADD 0x20 V1065
0xcfd: V1071 = M[V1070]
0xd00: V1072 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1069
0xd03: V1073 = AND 0xff V1066
0xd07: V1074 = OR V1073 V1072
0xd08: V1075 = 0xff00
0xd0b: V1076 = NOT 0xff00
0xd0e: V1077 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1074
0xd11: V1078 = AND 0xff V1071
0xd13: V1079 = MUL 0x100 V1078
0xd17: V1080 = OR V1079 V1077
0xd19: S[V1068] = V1080
0xd1a: V1081 = 0xc0
0xd1d: V1082 = ADD S3 0xc0
0xd1e: V1083 = M[V1082]
0xd1f: V1084 = 0x3
0xd22: V1085 = ADD V1014 0x3
0xd24: V1086 = S[V1085]
0xd25: V1087 = 0xe0
0xd28: V1088 = ADD S3 0xe0
0xd29: V1089 = M[V1088]
0xd2c: V1090 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1086
0xd2e: V1091 = ISZERO V1083
0xd2f: V1092 = ISZERO V1091
0xd33: V1093 = OR V1092 V1090
0xd36: V1094 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1093
0xd38: V1095 = ISZERO V1089
0xd39: V1096 = ISZERO V1095
0xd3b: V1097 = MUL 0x100 V1096
0xd3c: V1098 = OR V1097 V1094
0xd3e: S[V1085] = V1098
0xd41: V1099 = ADD S3 0x100
0xd42: V1100 = M[V1099]
0xd43: V1101 = 0x4
0xd46: V1102 = ADD V1014 0x4
0xd47: S[V1102] = V1100
0xd48: V1103 = 0x120
0xd4d: V1104 = ADD S3 0x120
0xd4e: V1105 = M[V1104]
0xd4f: V1106 = 0x5
0xd53: V1107 = ADD V1014 0x5
0xd55: V1108 = S[V1107]
0xd57: V1109 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1108
0xd5b: V1110 = AND 0xff V1105
0xd5c: V1111 = OR V1110 V1109
0xd5f: S[V1107] = V1111
0xd60: V1112 = 0x9
0xd63: M[0x20] = 0x9
0xd67: V1113 = SHA3 0x0 0x40
0xd69: V1114 = S[V1113]
0xd6c: V1115 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1114
0xd6f: V1116 = OR 0x1 V1115
0xd72: S[V1113] = V1116
0xd74: V1117 = M[0x40]
0xd75: V1118 = CALLER
0xd77: M[V1117] = V1118
0xd79: V1119 = M[0x40]
0xd7a: V1120 = 0xd4e133f0cbf47a2f5b712c686307b561d94ad7814d40a2baf143016f1f695f
0xd9e: V1121 = SUB V1117 V1119
0xda1: V1122 = ADD 0x20 V1121
0xda3: LOG V1119 V1122 0xd4e133f0cbf47a2f5b712c686307b561d94ad7814d40a2baf143016f1f695f V1012
0xda7: JUMP S7
---
Entry stack: [V11, 0x14c, S16, {0x14c, 0x44a}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V986, 0x8, V988]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0x14c, S16, {0x14c, 0x44a}, S14, S13, S12, S11, S10, S9, S8]

================================

Block 0xda8
[0xda8:0xdca]
---
Predecessors: [0x751]
Successors: [0xdcb, 0xdcf]
---
0xda8 JUMPDEST
0xda9 PUSH2 0xffff
0xdac DUP5
0xdad AND
0xdae PUSH1 0x0
0xdb0 SWAP1
0xdb1 DUP2
0xdb2 MSTORE
0xdb3 PUSH1 0x1
0xdb5 PUSH1 0x20
0xdb7 MSTORE
0xdb8 PUSH1 0x40
0xdba DUP2
0xdbb SHA3
0xdbc SLOAD
0xdbd DUP2
0xdbe SWAP1
0xdbf PUSH1 0xff
0xdc1 DUP1
0xdc2 DUP8
0xdc3 AND
0xdc4 SWAP2
0xdc5 AND
0xdc6 LT
0xdc7 PUSH2 0xdcf
0xdca JUMPI
---
0xda8: JUMPDEST 
0xda9: V1123 = 0xffff
0xdad: V1124 = AND V291 0xffff
0xdae: V1125 = 0x0
0xdb2: M[0x0] = V1124
0xdb3: V1126 = 0x1
0xdb5: V1127 = 0x20
0xdb7: M[0x20] = 0x1
0xdb8: V1128 = 0x40
0xdbb: V1129 = SHA3 0x0 0x40
0xdbc: V1130 = S[V1129]
0xdbf: V1131 = 0xff
0xdc3: V1132 = AND V295 0xff
0xdc5: V1133 = AND V1130 0xff
0xdc6: V1134 = LT V1133 V1132
0xdc7: V1135 = 0xdcf
0xdca: JUMPI 0xdcf V1134
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]

================================

Block 0xdcb
[0xdcb:0xdce]
---
Predecessors: [0xda8]
Successors: []
---
0xdcb PUSH1 0x0
0xdcd DUP1
0xdce REVERT
---
0xdcb: V1136 = 0x0
0xdce: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]

================================

Block 0xdcf
[0xdcf:0xddb]
---
Predecessors: [0xda8]
Successors: [0xddc, 0xde4]
---
0xdcf JUMPDEST
0xdd0 DUP5
0xdd1 PUSH1 0xff
0xdd3 AND
0xdd4 PUSH1 0x1
0xdd6 EQ
0xdd7 ISZERO
0xdd8 PUSH2 0xde4
0xddb JUMPI
---
0xdcf: JUMPDEST 
0xdd1: V1137 = 0xff
0xdd3: V1138 = AND 0xff V295
0xdd4: V1139 = 0x1
0xdd6: V1140 = EQ 0x1 V1138
0xdd7: V1141 = ISZERO V1140
0xdd8: V1142 = 0xde4
0xddb: JUMPI 0xde4 V1141
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]

================================

Block 0xddc
[0xddc:0xde3]
---
Predecessors: [0xdcf]
Successors: [0xe1f]
---
0xddc POP
0xddd PUSH1 0x3
0xddf SLOAD
0xde0 PUSH2 0xe1f
0xde3 JUMP
---
0xddd: V1143 = 0x3
0xddf: V1144 = S[0x3]
0xde0: V1145 = 0xe1f
0xde3: JUMP 0xe1f
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]
Stack pops: 1
Stack additions: [V1144]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, V1144]

================================

Block 0xde4
[0xde4:0xdf0]
---
Predecessors: [0xdcf]
Successors: [0xdf1, 0xdf9]
---
0xde4 JUMPDEST
0xde5 DUP5
0xde6 PUSH1 0xff
0xde8 AND
0xde9 PUSH1 0x2
0xdeb EQ
0xdec ISZERO
0xded PUSH2 0xdf9
0xdf0 JUMPI
---
0xde4: JUMPDEST 
0xde6: V1146 = 0xff
0xde8: V1147 = AND 0xff V295
0xde9: V1148 = 0x2
0xdeb: V1149 = EQ 0x2 V1147
0xdec: V1150 = ISZERO V1149
0xded: V1151 = 0xdf9
0xdf0: JUMPI 0xdf9 V1150
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]

================================

Block 0xdf1
[0xdf1:0xdf8]
---
Predecessors: [0xde4]
Successors: [0xe1f]
---
0xdf1 POP
0xdf2 PUSH1 0x4
0xdf4 SLOAD
0xdf5 PUSH2 0xe1f
0xdf8 JUMP
---
0xdf2: V1152 = 0x4
0xdf4: V1153 = S[0x4]
0xdf5: V1154 = 0xe1f
0xdf8: JUMP 0xe1f
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]
Stack pops: 1
Stack additions: [V1153]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, V1153]

================================

Block 0xdf9
[0xdf9:0xe05]
---
Predecessors: [0xde4]
Successors: [0xe06, 0xe0e]
---
0xdf9 JUMPDEST
0xdfa DUP5
0xdfb PUSH1 0xff
0xdfd AND
0xdfe PUSH1 0x3
0xe00 EQ
0xe01 ISZERO
0xe02 PUSH2 0xe0e
0xe05 JUMPI
---
0xdf9: JUMPDEST 
0xdfb: V1155 = 0xff
0xdfd: V1156 = AND 0xff V295
0xdfe: V1157 = 0x3
0xe00: V1158 = EQ 0x3 V1156
0xe01: V1159 = ISZERO V1158
0xe02: V1160 = 0xe0e
0xe05: JUMPI 0xe0e V1159
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]

================================

Block 0xe06
[0xe06:0xe0d]
---
Predecessors: [0xdf9]
Successors: [0xe1f]
---
0xe06 POP
0xe07 PUSH1 0x5
0xe09 SLOAD
0xe0a PUSH2 0xe1f
0xe0d JUMP
---
0xe07: V1161 = 0x5
0xe09: V1162 = S[0x5]
0xe0a: V1163 = 0xe1f
0xe0d: JUMP 0xe1f
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]
Stack pops: 1
Stack additions: [V1162]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, V1162]

================================

Block 0xe0e
[0xe0e:0xe1a]
---
Predecessors: [0xdf9]
Successors: [0xe1b, 0xe1f]
---
0xe0e JUMPDEST
0xe0f DUP5
0xe10 PUSH1 0xff
0xe12 AND
0xe13 PUSH1 0x4
0xe15 EQ
0xe16 ISZERO
0xe17 PUSH2 0xe1f
0xe1a JUMPI
---
0xe0e: JUMPDEST 
0xe10: V1164 = 0xff
0xe12: V1165 = AND 0xff V295
0xe13: V1166 = 0x4
0xe15: V1167 = EQ 0x4 V1165
0xe16: V1168 = ISZERO V1167
0xe17: V1169 = 0xe1f
0xe1a: JUMPI 0xe1f V1168
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]

================================

Block 0xe1b
[0xe1b:0xe1e]
---
Predecessors: [0xe0e]
Successors: [0xe1f]
---
0xe1b POP
0xe1c PUSH1 0x6
0xe1e SLOAD
---
0xe1c: V1170 = 0x6
0xe1e: V1171 = S[0x6]
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, 0x0]
Stack pops: 1
Stack additions: [V1171]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, V1171]

================================

Block 0xe1f
[0xe1f:0xe83]
---
Predecessors: [0xddc, 0xdf1, 0xe06, 0xe0e, 0xe1b]
Successors: [0xe84, 0xe8d]
---
0xe1f JUMPDEST
0xe20 PUSH2 0xffff
0xe23 DUP7
0xe24 AND
0xe25 PUSH1 0x0
0xe27 SWAP1
0xe28 DUP2
0xe29 MSTORE
0xe2a PUSH1 0x1
0xe2c PUSH1 0x20
0xe2e MSTORE
0xe2f PUSH1 0x40
0xe31 DUP1
0xe32 DUP3
0xe33 SHA3
0xe34 DUP1
0xe35 SLOAD
0xe36 PUSH1 0xff
0xe38 DUP1
0xe39 DUP11
0xe3a AND
0xe3b PUSH1 0xff
0xe3d NOT
0xe3e SWAP3
0xe3f DUP4
0xe40 AND
0xe41 OR
0xe42 DUP4
0xe43 SSTORE
0xe44 PUSH1 0x5
0xe46 SWAP1
0xe47 SWAP3
0xe48 ADD
0xe49 DUP1
0xe4a SLOAD
0xe4b SWAP3
0xe4c DUP10
0xe4d AND
0xe4e SWAP3
0xe4f SWAP1
0xe50 SWAP2
0xe51 AND
0xe52 SWAP2
0xe53 SWAP1
0xe54 SWAP2
0xe55 OR
0xe56 SWAP1
0xe57 SSTORE
0xe58 DUP2
0xe59 SLOAD
0xe5a SWAP1
0xe5b MLOAD
0xe5c PUSH1 0x1
0xe5e PUSH1 0xa0
0xe60 PUSH1 0x2
0xe62 EXP
0xe63 SUB
0xe64 SWAP1
0xe65 SWAP2
0xe66 AND
0xe67 SWAP2
0xe68 DUP4
0xe69 ISZERO
0xe6a PUSH2 0x8fc
0xe6d MUL
0xe6e SWAP2
0xe6f DUP5
0xe70 SWAP2
0xe71 DUP2
0xe72 DUP2
0xe73 DUP2
0xe74 DUP6
0xe75 DUP9
0xe76 DUP9
0xe77 CALL
0xe78 SWAP4
0xe79 POP
0xe7a POP
0xe7b POP
0xe7c POP
0xe7d ISZERO
0xe7e DUP1
0xe7f ISZERO
0xe80 PUSH2 0xe8d
0xe83 JUMPI
---
0xe1f: JUMPDEST 
0xe20: V1172 = 0xffff
0xe24: V1173 = AND V291 0xffff
0xe25: V1174 = 0x0
0xe29: M[0x0] = V1173
0xe2a: V1175 = 0x1
0xe2c: V1176 = 0x20
0xe2e: M[0x20] = 0x1
0xe2f: V1177 = 0x40
0xe33: V1178 = SHA3 0x0 0x40
0xe35: V1179 = S[V1178]
0xe36: V1180 = 0xff
0xe3a: V1181 = AND V295 0xff
0xe3b: V1182 = 0xff
0xe3d: V1183 = NOT 0xff
0xe40: V1184 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1179
0xe41: V1185 = OR V1184 V1181
0xe43: S[V1178] = V1185
0xe44: V1186 = 0x5
0xe48: V1187 = ADD V1178 0x5
0xe4a: V1188 = S[V1187]
0xe4d: V1189 = AND V298 0xff
0xe51: V1190 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1188
0xe55: V1191 = OR V1190 V1189
0xe57: S[V1187] = V1191
0xe59: V1192 = S[0x0]
0xe5b: V1193 = M[0x40]
0xe5c: V1194 = 0x1
0xe5e: V1195 = 0xa0
0xe60: V1196 = 0x2
0xe62: V1197 = EXP 0x2 0xa0
0xe63: V1198 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe66: V1199 = AND V1192 0xffffffffffffffffffffffffffffffffffffffff
0xe69: V1200 = ISZERO S0
0xe6a: V1201 = 0x8fc
0xe6d: V1202 = MUL 0x8fc V1200
0xe77: V1203 = CALL V1202 V1199 S0 V1193 0x0 V1193 0x0
0xe7d: V1204 = ISZERO V1203
0xe7f: V1205 = ISZERO V1204
0xe80: V1206 = 0xe8d
0xe83: JUMPI 0xe8d V1205
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V1204]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, S0, V1204]

================================

Block 0xe84
[0xe84:0xe8c]
---
Predecessors: [0xe1f]
Successors: []
---
0xe84 RETURNDATASIZE
0xe85 PUSH1 0x0
0xe87 DUP1
0xe88 RETURNDATACOPY
0xe89 RETURNDATASIZE
0xe8a PUSH1 0x0
0xe8c REVERT
---
0xe84: V1207 = RETURNDATASIZE
0xe85: V1208 = 0x0
0xe88: RETURNDATACOPY 0x0 0x0 V1207
0xe89: V1209 = RETURNDATASIZE
0xe8a: V1210 = 0x0
0xe8c: REVERT 0x0 V1209
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, S1, V1204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, S1, V1204]

================================

Block 0xe8d
[0xe8d:0xe9f]
---
Predecessors: [0xe1f]
Successors: [0xf32]
---
0xe8d JUMPDEST
0xe8e POP
0xe8f PUSH1 0x0
0xe91 PUSH2 0xea0
0xe94 DUP5
0xe95 DUP4
0xe96 PUSH4 0xffffffff
0xe9b PUSH2 0xf32
0xe9e AND
0xe9f JUMP
---
0xe8d: JUMPDEST 
0xe8f: V1211 = 0x0
0xe91: V1212 = 0xea0
0xe96: V1213 = 0xffffffff
0xe9b: V1214 = 0xf32
0xe9e: V1215 = AND 0xf32 0xffffffff
0xe9f: JUMP 0xf32
---
Entry stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, S1, V1204]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x0, 0xea0, S3, S1]
Exit stack: [V11, 0x14c, V291, V295, V298, 0x75d, V291, V295, V298, V632, 0x0, S1, 0x0, 0xea0, V632, S1]

================================

Block 0xea0
[0xea0:0xea6]
---
Predecessors: [0xf3e]
Successors: [0xea7, 0xee4]
---
0xea0 JUMPDEST
0xea1 GT
0xea2 ISZERO
0xea3 PUSH2 0xee4
0xea6 JUMPI
---
0xea0: JUMPDEST 
0xea1: V1216 = GT V1255 S1
0xea2: V1217 = ISZERO V1216
0xea3: V1218 = 0xee4
0xea6: JUMPI 0xee4 V1217
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1255]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xea7
[0xea7:0xeb9]
---
Predecessors: [0xea0]
Successors: [0xf32]
---
0xea7 CALLER
0xea8 PUSH2 0x8fc
0xeab PUSH2 0xeba
0xeae DUP6
0xeaf DUP5
0xeb0 PUSH4 0xffffffff
0xeb5 PUSH2 0xf32
0xeb8 AND
0xeb9 JUMP
---
0xea7: V1219 = CALLER
0xea8: V1220 = 0x8fc
0xeab: V1221 = 0xeba
0xeb0: V1222 = 0xffffffff
0xeb5: V1223 = 0xf32
0xeb8: V1224 = AND 0xf32 0xffffffff
0xeb9: JUMP 0xf32
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1219, 0x8fc, 0xeba, S2, S0]
Exit stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1219, 0x8fc, 0xeba, S2, S0]

================================

Block 0xeba
[0xeba:0xed8]
---
Predecessors: [0xf3e]
Successors: [0xed9, 0xee2]
---
0xeba JUMPDEST
0xebb PUSH1 0x40
0xebd MLOAD
0xebe DUP2
0xebf ISZERO
0xec0 SWAP1
0xec1 SWAP3
0xec2 MUL
0xec3 SWAP2
0xec4 PUSH1 0x0
0xec6 DUP2
0xec7 DUP2
0xec8 DUP2
0xec9 DUP6
0xeca DUP9
0xecb DUP9
0xecc CALL
0xecd SWAP4
0xece POP
0xecf POP
0xed0 POP
0xed1 POP
0xed2 ISZERO
0xed3 DUP1
0xed4 ISZERO
0xed5 PUSH2 0xee2
0xed8 JUMPI
---
0xeba: JUMPDEST 
0xebb: V1225 = 0x40
0xebd: V1226 = M[0x40]
0xebf: V1227 = ISZERO V1255
0xec2: V1228 = MUL S1 V1227
0xec4: V1229 = 0x0
0xecc: V1230 = CALL V1228 S2 V1255 V1226 0x0 V1226 0x0
0xed2: V1231 = ISZERO V1230
0xed4: V1232 = ISZERO V1231
0xed5: V1233 = 0xee2
0xed8: JUMPI 0xee2 V1232
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1255]
Stack pops: 3
Stack additions: [V1231]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1231]

================================

Block 0xed9
[0xed9:0xee1]
---
Predecessors: [0xeba]
Successors: []
---
0xed9 RETURNDATASIZE
0xeda PUSH1 0x0
0xedc DUP1
0xedd RETURNDATACOPY
0xede RETURNDATASIZE
0xedf PUSH1 0x0
0xee1 REVERT
---
0xed9: V1234 = RETURNDATASIZE
0xeda: V1235 = 0x0
0xedd: RETURNDATACOPY 0x0 0x0 V1234
0xede: V1236 = RETURNDATASIZE
0xedf: V1237 = 0x0
0xee1: REVERT 0x0 V1236
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1231]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1231]

================================

Block 0xee2
[0xee2:0xee3]
---
Predecessors: [0xeba]
Successors: [0xee4]
---
0xee2 JUMPDEST
0xee3 POP
---
0xee2: JUMPDEST 
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1231]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xee4
[0xee4:0xf31]
---
Predecessors: [0xea0, 0xee2]
Successors: [0x14c, 0x44a, 0x75d]
---
0xee4 JUMPDEST
0xee5 PUSH1 0x40
0xee7 DUP1
0xee8 MLOAD
0xee9 PUSH1 0xff
0xeeb DUP7
0xeec DUP2
0xeed AND
0xeee DUP3
0xeef MSTORE
0xef0 SWAP2
0xef1 MLOAD
0xef2 SWAP2
0xef3 DUP8
0xef4 AND
0xef5 SWAP2
0xef6 PUSH2 0xffff
0xef9 DUP10
0xefa AND
0xefb SWAP2
0xefc PUSH32 0x99582f813185b285f4bfd00bbdca0ca7b2f912f3aee149bc39a7a9253f9f5c3a
0xf1d SWAP2
0xf1e SWAP1
0xf1f DUP2
0xf20 SWAP1
0xf21 SUB
0xf22 PUSH1 0x20
0xf24 ADD
0xf25 SWAP1
0xf26 LOG3
0xf27 POP
0xf28 PUSH1 0x1
0xf2a SWAP6
0xf2b SWAP5
0xf2c POP
0xf2d POP
0xf2e POP
0xf2f POP
0xf30 POP
0xf31 JUMP
---
0xee4: JUMPDEST 
0xee5: V1238 = 0x40
0xee8: V1239 = M[0x40]
0xee9: V1240 = 0xff
0xeed: V1241 = AND 0xff S3
0xeef: M[V1239] = V1241
0xef1: V1242 = M[0x40]
0xef4: V1243 = AND S4 0xff
0xef6: V1244 = 0xffff
0xefa: V1245 = AND S5 0xffff
0xefc: V1246 = 0x99582f813185b285f4bfd00bbdca0ca7b2f912f3aee149bc39a7a9253f9f5c3a
0xf21: V1247 = SUB V1239 V1242
0xf22: V1248 = 0x20
0xf24: V1249 = ADD 0x20 V1247
0xf26: LOG V1242 V1249 0x99582f813185b285f4bfd00bbdca0ca7b2f912f3aee149bc39a7a9253f9f5c3a V1245 V1243
0xf28: V1250 = 0x1
0xf31: JUMP S6
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V11, S12, S11, S10, S9, S8, S7, 0x1]

================================

Block 0xf32
[0xf32:0xf3c]
---
Predecessors: [0x9ad, 0xadd, 0xe8d, 0xea7]
Successors: [0xf3d, 0xf3e]
---
0xf32 JUMPDEST
0xf33 PUSH1 0x0
0xf35 DUP3
0xf36 DUP3
0xf37 GT
0xf38 ISZERO
0xf39 PUSH2 0xf3e
0xf3c JUMPI
---
0xf32: JUMPDEST 
0xf33: V1251 = 0x0
0xf37: V1252 = GT S0 S1
0xf38: V1253 = ISZERO V1252
0xf39: V1254 = 0xf3e
0xf3c: JUMPI 0xf3e V1253
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x9dc, 0xaf1, 0xea0, 0xeba}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x9dc, 0xaf1, 0xea0, 0xeba}, S1, S0, 0x0]

================================

Block 0xf3d
[0xf3d:0xf3d]
---
Predecessors: [0xf32]
Successors: []
---
0xf3d INVALID
---
0xf3d: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x9dc, 0xaf1, 0xea0, 0xeba}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x9dc, 0xaf1, 0xea0, 0xeba}, S2, S1, 0x0]

================================

Block 0xf3e
[0xf3e:0xf43]
---
Predecessors: [0xf32]
Successors: [0x9dc, 0xaf1, 0xea0, 0xeba]
---
0xf3e JUMPDEST
0xf3f POP
0xf40 SWAP1
0xf41 SUB
0xf42 SWAP1
0xf43 JUMP
---
0xf3e: JUMPDEST 
0xf41: V1255 = SUB S2 S1
0xf43: JUMP {0x9dc, 0xaf1, 0xea0, 0xeba}
---
Entry stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x9dc, 0xaf1, 0xea0, 0xeba}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1255]
Exit stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1255]

================================

Block 0xf44
[0xf44:0xf82]
---
Predecessors: []
Successors: []
---
0xf44 STOP
0xf45 LOG1
0xf46 PUSH6 0x627a7a723058
0xf4d SHA3
0xf4e JUMP
0xf4f SWAP11
0xf50 SWAP2
0xf51 PUSH6 0xe077a52c19bf
0xf58 MISSING 0xb5
0xf59 MISSING 0xb0
0xf5a GASLIMIT
0xf5b MSTORE
0xf5c MISSING 0xba
0xf5d DUP11
0xf5e MISSING 0xe3
0xf5f MISSING 0x2f
0xf60 MISSING 0x2d
0xf61 MISSING 0xcf
0xf62 MISSING 0xbb
0xf63 PUSH31 0x2bff8fb4b6dbb8b9a8580029
---
0xf44: STOP 
0xf45: LOG S0 S1 S2
0xf46: V1256 = 0x627a7a723058
0xf4d: V1257 = SHA3 0x627a7a723058 S3
0xf4e: JUMP V1257
0xf51: V1258 = 0xe077a52c19bf
0xf58: MISSING 0xb5
0xf59: MISSING 0xb0
0xf5a: V1259 = GASLIMIT
0xf5b: M[V1259] = S0
0xf5c: MISSING 0xba
0xf5e: MISSING 0xe3
0xf5f: MISSING 0x2f
0xf60: MISSING 0x2d
0xf61: MISSING 0xcf
0xf62: MISSING 0xbb
0xf63: V1260 = 0x2bff8fb4b6dbb8b9a8580029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xe077a52c19bf, S2, S1, S11, S3, S4, S5, S6, S7, S8, S9, S10, S0, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x2bff8fb4b6dbb8b9a8580029]
Exit stack: []

================================

Function 0:
Public function signature: 0xbdfa0a4
Entry block: 0x116
Exit block: 0x12b
Body: 0x116, 0x11e, 0x122, 0x12b, 0x40f

Function 1:
Public function signature: 0x12fb1520
Entry block: 0x13d
Exit block: 0x14c
Body: 0x13d, 0x14c, 0x415, 0x432, 0x43b, 0x440, 0x44a, 0x75d, 0x764, 0x768, 0x8c6, 0x8ec, 0x8f0, 0x90f, 0x913, 0x9a4, 0x9ad, 0x9dc, 0x9fb, 0xa04, 0xaa3, 0xab2, 0xed9

Function 2:
Public function signature: 0x1a3d1354
Entry block: 0x14e
Exit block: 0x14c
Body: 0x14c, 0x14e, 0x156, 0x15a, 0x44d, 0x460, 0x464

Function 3:
Public function signature: 0x2a9f1239
Entry block: 0x166
Exit block: 0x17b
Body: 0x166, 0x16e, 0x172, 0x17b, 0x469

Function 4:
Public function signature: 0x3714ae13
Entry block: 0x191
Exit block: 0x12b
Body: 0x12b, 0x191, 0x199, 0x19d, 0x46e

Function 5:
Public function signature: 0x78edeb60
Entry block: 0x1a6
Exit block: 0x12b
Body: 0x12b, 0x1a6, 0x1ae, 0x1b2, 0x474

Function 6:
Public function signature: 0x81333c29
Entry block: 0x1bb
Exit block: 0x1d3
Body: 0x1bb, 0x1c3, 0x1c7, 0x1d3

Function 7:
Public function signature: 0x8730e34f
Entry block: 0x1ec
Exit block: 0x208
Body: 0x1ec, 0x1f4, 0x1f8, 0x208, 0x4ad

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x277
Exit block: 0x28c
Body: 0x277, 0x27f, 0x283, 0x28c, 0x54c

Function 9:
Public function signature: 0x937d6378
Entry block: 0x2a8
Exit block: 0x12b
Body: 0x12b, 0x2a8, 0x2b0, 0x2b4, 0x55b

Function 10:
Public function signature: 0x95897e74
Entry block: 0x2bd
Exit block: 0x5bf
Body: 0x14c, 0x2bd, 0x2c5, 0x2c9, 0x561, 0x575, 0x579, 0x57d, 0x586, 0x59f, 0x5a0, 0x5bf, 0x5c0, 0x613

Function 11:
Public function signature: 0x9f14af5d
Entry block: 0x2e9
Exit block: 0x14c
Body: 0x14c, 0x2e9, 0x2f1, 0x2f5, 0x61a, 0x62d, 0x631, 0x651, 0x655

Function 12:
Public function signature: 0xad64d068
Entry block: 0x305
Exit block: 0x31d
Body: 0x305, 0x30d, 0x311, 0x31d, 0x6af, 0x6bc, 0x6bd

Function 13:
Public function signature: 0xb3311086
Entry block: 0x33d
Exit block: 0x1d3
Body: 0x1d3, 0x33d, 0x345, 0x349, 0x6da

Function 14:
Public function signature: 0xb62243a2
Entry block: 0x352
Exit block: 0x12b
Body: 0x12b, 0x352, 0x35a, 0x35e, 0x6e6

Function 15:
Public function signature: 0xb8f2c9e6
Entry block: 0x367
Exit block: 0x36f
Body: 0x367, 0x36f, 0x373, 0x37f

Function 16:
Public function signature: 0xc4621546
Entry block: 0x393
Exit block: 0x14c
Body: 0x14c, 0x393, 0x44a, 0x720, 0x74d, 0x751, 0x75d, 0x764, 0x768, 0xda8, 0xdcb, 0xdcf, 0xddc, 0xde4, 0xdf1, 0xdf9, 0xe06, 0xe0e, 0xe1b, 0xe1f, 0xe84, 0xe8d, 0xea0, 0xea7, 0xeba, 0xed9, 0xee2, 0xee4

Function 17:
Public function signature: 0xd2948d4a
Entry block: 0x3ae
Exit block: 0x37f
Body: 0x37f, 0x3ae, 0x3b6, 0x3ba, 0x76d

Function 18:
Public function signature: 0xd2abb0ff
Entry block: 0x3ca
Exit block: 0x14c
Body: 0x14c, 0x3ca, 0x3d2, 0x3d6, 0x782, 0x7af, 0x7b3

Function 19:
Public function signature: 0xf2fde38b
Entry block: 0x3ee
Exit block: 0x14c
Body: 0x14c, 0x3ee, 0x3f6, 0x3fa, 0x823, 0x836, 0x83a, 0x84b, 0x84f

Function 20:
Public fallback function
Entry block: 0x111
Exit block: 0x111
Body: 0x111

Function 21:
Private function
Entry block: 0x6ec
Exit block: 0x4a8
Body: 0x4a8, 0x6ec, 0x6f9, 0x700, 0x719

Function 22:
Private function
Entry block: 0x47a
Exit block: 0x4a8
Body: 0x47a, 0x487, 0x495, 0x4a8, 0xab2, 0xab9, 0xad2, 0xadd, 0xaf1, 0xafd, 0xb29, 0xb2b, 0xb66, 0xb88

Function 23:
Private function
Entry block: 0xf32
Exit block: 0xf3e
Body: 0xf32, 0xf3e

