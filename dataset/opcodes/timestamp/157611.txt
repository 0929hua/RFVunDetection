Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xca]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xca
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xca
0xa: JUMPI 0xca V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xe0]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2d05d3f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xe0
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2d05d3f
0x20: V14 = EQ V12 0x2d05d3f
0x21: V15 = 0xe0
0x24: JUMPI 0xe0 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x10c]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x10c
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x10c
0x2f: JUMPI 0x10c V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x12e]
---
0x30 DUP1
0x31 PUSH4 0x38771242
0x36 EQ
0x37 PUSH2 0x12e
0x3a JUMPI
---
0x31: V19 = 0x38771242
0x36: V20 = EQ 0x38771242 V12
0x37: V21 = 0x12e
0x3a: JUMPI 0x12e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x150]
---
0x3b DUP1
0x3c PUSH4 0x38af3eed
0x41 EQ
0x42 PUSH2 0x150
0x45 JUMPI
---
0x3c: V22 = 0x38af3eed
0x41: V23 = EQ 0x38af3eed V12
0x42: V24 = 0x150
0x45: JUMPI 0x150 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x17c]
---
0x46 DUP1
0x47 PUSH4 0x3c8da588
0x4c EQ
0x4d PUSH2 0x17c
0x50 JUMPI
---
0x47: V25 = 0x3c8da588
0x4c: V26 = EQ 0x3c8da588 V12
0x4d: V27 = 0x17c
0x50: JUMPI 0x17c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x19e]
---
0x51 DUP1
0x52 PUSH4 0x6e66f6e9
0x57 EQ
0x58 PUSH2 0x19e
0x5b JUMPI
---
0x52: V28 = 0x6e66f6e9
0x57: V29 = EQ 0x6e66f6e9 V12
0x58: V30 = 0x19e
0x5b: JUMPI 0x19e V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1ca]
---
0x5c DUP1
0x5d PUSH4 0x71ae8f02
0x62 EQ
0x63 PUSH2 0x1ca
0x66 JUMPI
---
0x5d: V31 = 0x71ae8f02
0x62: V32 = EQ 0x71ae8f02 V12
0x63: V33 = 0x1ca
0x66: JUMPI 0x1ca V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1ec]
---
0x67 DUP1
0x68 PUSH4 0x86f32586
0x6d EQ
0x6e PUSH2 0x1ec
0x71 JUMPI
---
0x68: V34 = 0x86f32586
0x6d: V35 = EQ 0x86f32586 V12
0x6e: V36 = 0x1ec
0x71: JUMPI 0x1ec V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1fe]
---
0x72 DUP1
0x73 PUSH4 0xaa367664
0x78 EQ
0x79 PUSH2 0x1fe
0x7c JUMPI
---
0x73: V37 = 0xaa367664
0x78: V38 = EQ 0xaa367664 V12
0x79: V39 = 0x1fe
0x7c: JUMPI 0x1fe V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x220]
---
0x7d DUP1
0x7e PUSH4 0xb2d5ae44
0x83 EQ
0x84 PUSH2 0x220
0x87 JUMPI
---
0x7e: V40 = 0xb2d5ae44
0x83: V41 = EQ 0xb2d5ae44 V12
0x84: V42 = 0x220
0x87: JUMPI 0x220 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x244]
---
0x88 DUP1
0x89 PUSH4 0xc19d93fb
0x8e EQ
0x8f PUSH2 0x244
0x92 JUMPI
---
0x89: V43 = 0xc19d93fb
0x8e: V44 = EQ 0xc19d93fb V12
0x8f: V45 = 0x244
0x92: JUMPI 0x244 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x278]
---
0x93 DUP1
0x94 PUSH4 0xc2052403
0x99 EQ
0x9a PUSH2 0x278
0x9d JUMPI
---
0x94: V46 = 0xc2052403
0x99: V47 = EQ 0xc2052403 V12
0x9a: V48 = 0x278
0x9d: JUMPI 0x278 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x28a]
---
0x9e DUP1
0x9f PUSH4 0xc5c4744c
0xa4 EQ
0xa5 PUSH2 0x28a
0xa8 JUMPI
---
0x9f: V49 = 0xc5c4744c
0xa4: V50 = EQ 0xc5c4744c V12
0xa5: V51 = 0x28a
0xa8: JUMPI 0x28a V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2ac]
---
0xa9 DUP1
0xaa PUSH4 0xce845d1d
0xaf EQ
0xb0 PUSH2 0x2ac
0xb3 JUMPI
---
0xaa: V52 = 0xce845d1d
0xaf: V53 = EQ 0xce845d1d V12
0xb0: V54 = 0x2ac
0xb3: JUMPI 0x2ac V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2ce]
---
0xb4 DUP1
0xb5 PUSH4 0xd7bb99ba
0xba EQ
0xbb PUSH2 0x2ce
0xbe JUMPI
---
0xb5: V55 = 0xd7bb99ba
0xba: V56 = EQ 0xd7bb99ba V12
0xbb: V57 = 0x2ce
0xbe: JUMPI 0x2ce V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x2e8]
---
0xbf DUP1
0xc0 PUSH4 0xfe389e09
0xc5 EQ
0xc6 PUSH2 0x2e8
0xc9 JUMPI
---
0xc0: V58 = 0xfe389e09
0xc5: V59 = EQ 0xfe389e09 V12
0xc6: V60 = 0x2e8
0xc9: JUMPI 0x2e8 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x0, 0xbf]
Successors: [0xd1, 0xd2]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd2
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V61 = CALLVALUE
0xcc: V62 = ISZERO V61
0xcd: V63 = 0xd2
0xd0: JUMPI 0xd2 V62
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0xd1]
---
Predecessors: [0xca]
Successors: []
---
0xd1 INVALID
---
0xd1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xca]
Successors: [0xd6]
---
0xd2 JUMPDEST
0xd3 PUSH2 0xde
---
0xd2: JUMPDEST 
0xd3: V64 = 0xde
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0xd6
[0xd6:0xdb]
---
Predecessors: [0xd2]
Successors: []
---
0xd6 JUMPDEST
0xd7 PUSH1 0x0
0xd9 PUSH1 0x0
0xdb REVERT
---
0xd6: JUMPDEST 
0xd7: V65 = 0x0
0xd9: V66 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0xdc
[0xdc:0xdd]
---
Predecessors: [0x3aa, 0x3b3, 0x41e]
Successors: [0xde, 0x8a2]
---
0xdc JUMPDEST
0xdd JUMP
---
0xdc: JUMPDEST 
0xdd: JUMP S0
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S1]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: [0xdc, 0x443, 0x669]
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: [V12, S4, {0x0, 0x11c}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0x0, 0x11c}, S2, S1, S0]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0xb]
Successors: [0xe7, 0xe8]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xe8
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V67 = CALLVALUE
0xe2: V68 = ISZERO V67
0xe3: V69 = 0xe8
0xe6: JUMPI 0xe8 V68
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe7
[0xe7:0xe7]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 INVALID
---
0xe7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe8
[0xe8:0xef]
---
Predecessors: [0xe0]
Successors: [0x2fa]
---
0xe8 JUMPDEST
0xe9 PUSH2 0xf0
0xec PUSH2 0x2fa
0xef JUMP
---
0xe8: JUMPDEST 
0xe9: V70 = 0xf0
0xec: V71 = 0x2fa
0xef: JUMP 0x2fa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf0]
Exit stack: [V12, 0xf0]

================================

Block 0xf0
[0xf0:0x10b]
---
Predecessors: [0x2fa, 0x315, 0x32a]
Successors: []
---
0xf0 JUMPDEST
0xf1 PUSH1 0x40
0xf3 DUP1
0xf4 MLOAD
0xf5 PUSH1 0x1
0xf7 PUSH1 0xa0
0xf9 PUSH1 0x2
0xfb EXP
0xfc SUB
0xfd SWAP1
0xfe SWAP3
0xff AND
0x100 DUP3
0x101 MSTORE
0x102 MLOAD
0x103 SWAP1
0x104 DUP2
0x105 SWAP1
0x106 SUB
0x107 PUSH1 0x20
0x109 ADD
0x10a SWAP1
0x10b RETURN
---
0xf0: JUMPDEST 
0xf1: V72 = 0x40
0xf4: V73 = M[0x40]
0xf5: V74 = 0x1
0xf7: V75 = 0xa0
0xf9: V76 = 0x2
0xfb: V77 = EXP 0x2 0xa0
0xfc: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff: V79 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x101: M[V73] = V79
0x102: V80 = M[0x40]
0x106: V81 = SUB V73 V80
0x107: V82 = 0x20
0x109: V83 = ADD 0x20 V81
0x10b: RETURN V80 V83
---
Entry stack: [V12, 0xf0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xf0]

================================

Block 0x10c
[0x10c:0x112]
---
Predecessors: [0x25]
Successors: [0x113, 0x114]
---
0x10c JUMPDEST
0x10d CALLVALUE
0x10e ISZERO
0x10f PUSH2 0x114
0x112 JUMPI
---
0x10c: JUMPDEST 
0x10d: V84 = CALLVALUE
0x10e: V85 = ISZERO V84
0x10f: V86 = 0x114
0x112: JUMPI 0x114 V85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x113
[0x113:0x113]
---
Predecessors: [0x10c]
Successors: []
---
0x113 INVALID
---
0x113: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x114
[0x114:0x11b]
---
Predecessors: [0x10c]
Successors: [0x309]
---
0x114 JUMPDEST
0x115 PUSH2 0x11c
0x118 PUSH2 0x309
0x11b JUMP
---
0x114: JUMPDEST 
0x115: V87 = 0x11c
0x118: V88 = 0x309
0x11b: JUMP 0x309
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11c]
Exit stack: [V12, 0x11c]

================================

Block 0x11c
[0x11c:0x12d]
---
Predecessors: [0x309, 0x30f, 0x324, 0x339, 0x445, 0x66c, 0x672, 0x8ae]
Successors: []
---
0x11c JUMPDEST
0x11d PUSH1 0x40
0x11f DUP1
0x120 MLOAD
0x121 SWAP2
0x122 DUP3
0x123 MSTORE
0x124 MLOAD
0x125 SWAP1
0x126 DUP2
0x127 SWAP1
0x128 SUB
0x129 PUSH1 0x20
0x12b ADD
0x12c SWAP1
0x12d RETURN
---
0x11c: JUMPDEST 
0x11d: V89 = 0x40
0x120: V90 = M[0x40]
0x123: M[V90] = S0
0x124: V91 = M[0x40]
0x128: V92 = SUB V90 V91
0x129: V93 = 0x20
0x12b: V94 = ADD 0x20 V92
0x12d: RETURN V91 V94
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x12e
[0x12e:0x134]
---
Predecessors: [0x30]
Successors: [0x135, 0x136]
---
0x12e JUMPDEST
0x12f CALLVALUE
0x130 ISZERO
0x131 PUSH2 0x136
0x134 JUMPI
---
0x12e: JUMPDEST 
0x12f: V95 = CALLVALUE
0x130: V96 = ISZERO V95
0x131: V97 = 0x136
0x134: JUMPI 0x136 V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x135
[0x135:0x135]
---
Predecessors: [0x12e]
Successors: []
---
0x135 INVALID
---
0x135: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x136
[0x136:0x13d]
---
Predecessors: [0x12e]
Successors: [0x30f]
---
0x136 JUMPDEST
0x137 PUSH2 0x11c
0x13a PUSH2 0x30f
0x13d JUMP
---
0x136: JUMPDEST 
0x137: V98 = 0x11c
0x13a: V99 = 0x30f
0x13d: JUMP 0x30f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11c]
Exit stack: [V12, 0x11c]

================================

Block 0x13e
[0x13e:0x14f]
---
Predecessors: []
Successors: []
---
0x13e JUMPDEST
0x13f PUSH1 0x40
0x141 DUP1
0x142 MLOAD
0x143 SWAP2
0x144 DUP3
0x145 MSTORE
0x146 MLOAD
0x147 SWAP1
0x148 DUP2
0x149 SWAP1
0x14a SUB
0x14b PUSH1 0x20
0x14d ADD
0x14e SWAP1
0x14f RETURN
---
0x13e: JUMPDEST 
0x13f: V100 = 0x40
0x142: V101 = M[0x40]
0x145: M[V101] = S0
0x146: V102 = M[0x40]
0x14a: V103 = SUB V101 V102
0x14b: V104 = 0x20
0x14d: V105 = ADD 0x20 V103
0x14f: RETURN V102 V105
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x150
[0x150:0x156]
---
Predecessors: [0x3b]
Successors: [0x157, 0x158]
---
0x150 JUMPDEST
0x151 CALLVALUE
0x152 ISZERO
0x153 PUSH2 0x158
0x156 JUMPI
---
0x150: JUMPDEST 
0x151: V106 = CALLVALUE
0x152: V107 = ISZERO V106
0x153: V108 = 0x158
0x156: JUMPI 0x158 V107
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x157
[0x157:0x157]
---
Predecessors: [0x150]
Successors: []
---
0x157 INVALID
---
0x157: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x158
[0x158:0x15f]
---
Predecessors: [0x150]
Successors: [0x315]
---
0x158 JUMPDEST
0x159 PUSH2 0xf0
0x15c PUSH2 0x315
0x15f JUMP
---
0x158: JUMPDEST 
0x159: V109 = 0xf0
0x15c: V110 = 0x315
0x15f: JUMP 0x315
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf0]
Exit stack: [V12, 0xf0]

================================

Block 0x160
[0x160:0x17b]
---
Predecessors: []
Successors: []
---
0x160 JUMPDEST
0x161 PUSH1 0x40
0x163 DUP1
0x164 MLOAD
0x165 PUSH1 0x1
0x167 PUSH1 0xa0
0x169 PUSH1 0x2
0x16b EXP
0x16c SUB
0x16d SWAP1
0x16e SWAP3
0x16f AND
0x170 DUP3
0x171 MSTORE
0x172 MLOAD
0x173 SWAP1
0x174 DUP2
0x175 SWAP1
0x176 SUB
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP1
0x17b RETURN
---
0x160: JUMPDEST 
0x161: V111 = 0x40
0x164: V112 = M[0x40]
0x165: V113 = 0x1
0x167: V114 = 0xa0
0x169: V115 = 0x2
0x16b: V116 = EXP 0x2 0xa0
0x16c: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16f: V118 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x171: M[V112] = V118
0x172: V119 = M[0x40]
0x176: V120 = SUB V112 V119
0x177: V121 = 0x20
0x179: V122 = ADD 0x20 V120
0x17b: RETURN V119 V122
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x17c
[0x17c:0x182]
---
Predecessors: [0x46]
Successors: [0x183, 0x184]
---
0x17c JUMPDEST
0x17d CALLVALUE
0x17e ISZERO
0x17f PUSH2 0x184
0x182 JUMPI
---
0x17c: JUMPDEST 
0x17d: V123 = CALLVALUE
0x17e: V124 = ISZERO V123
0x17f: V125 = 0x184
0x182: JUMPI 0x184 V124
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x183
[0x183:0x183]
---
Predecessors: [0x17c]
Successors: []
---
0x183 INVALID
---
0x183: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x184
[0x184:0x18b]
---
Predecessors: [0x17c]
Successors: [0x324]
---
0x184 JUMPDEST
0x185 PUSH2 0x11c
0x188 PUSH2 0x324
0x18b JUMP
---
0x184: JUMPDEST 
0x185: V126 = 0x11c
0x188: V127 = 0x324
0x18b: JUMP 0x324
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11c]
Exit stack: [V12, 0x11c]

================================

Block 0x18c
[0x18c:0x19d]
---
Predecessors: []
Successors: []
---
0x18c JUMPDEST
0x18d PUSH1 0x40
0x18f DUP1
0x190 MLOAD
0x191 SWAP2
0x192 DUP3
0x193 MSTORE
0x194 MLOAD
0x195 SWAP1
0x196 DUP2
0x197 SWAP1
0x198 SUB
0x199 PUSH1 0x20
0x19b ADD
0x19c SWAP1
0x19d RETURN
---
0x18c: JUMPDEST 
0x18d: V128 = 0x40
0x190: V129 = M[0x40]
0x193: M[V129] = S0
0x194: V130 = M[0x40]
0x198: V131 = SUB V129 V130
0x199: V132 = 0x20
0x19b: V133 = ADD 0x20 V131
0x19d: RETURN V130 V133
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x51]
Successors: [0x1a5, 0x1a6]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a6
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V134 = CALLVALUE
0x1a0: V135 = ISZERO V134
0x1a1: V136 = 0x1a6
0x1a4: JUMPI 0x1a6 V135
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a5
[0x1a5:0x1a5]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 INVALID
---
0x1a5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a6
[0x1a6:0x1ad]
---
Predecessors: [0x19e]
Successors: [0x32a]
---
0x1a6 JUMPDEST
0x1a7 PUSH2 0xf0
0x1aa PUSH2 0x32a
0x1ad JUMP
---
0x1a6: JUMPDEST 
0x1a7: V137 = 0xf0
0x1aa: V138 = 0x32a
0x1ad: JUMP 0x32a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf0]
Exit stack: [V12, 0xf0]

================================

Block 0x1ae
[0x1ae:0x1c9]
---
Predecessors: []
Successors: []
---
0x1ae JUMPDEST
0x1af PUSH1 0x40
0x1b1 DUP1
0x1b2 MLOAD
0x1b3 PUSH1 0x1
0x1b5 PUSH1 0xa0
0x1b7 PUSH1 0x2
0x1b9 EXP
0x1ba SUB
0x1bb SWAP1
0x1bc SWAP3
0x1bd AND
0x1be DUP3
0x1bf MSTORE
0x1c0 MLOAD
0x1c1 SWAP1
0x1c2 DUP2
0x1c3 SWAP1
0x1c4 SUB
0x1c5 PUSH1 0x20
0x1c7 ADD
0x1c8 SWAP1
0x1c9 RETURN
---
0x1ae: JUMPDEST 
0x1af: V139 = 0x40
0x1b2: V140 = M[0x40]
0x1b3: V141 = 0x1
0x1b5: V142 = 0xa0
0x1b7: V143 = 0x2
0x1b9: V144 = EXP 0x2 0xa0
0x1ba: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V146 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: M[V140] = V146
0x1c0: V147 = M[0x40]
0x1c4: V148 = SUB V140 V147
0x1c5: V149 = 0x20
0x1c7: V150 = ADD 0x20 V148
0x1c9: RETURN V147 V150
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ca
[0x1ca:0x1d0]
---
Predecessors: [0x5c]
Successors: [0x1d1, 0x1d2]
---
0x1ca JUMPDEST
0x1cb CALLVALUE
0x1cc ISZERO
0x1cd PUSH2 0x1d2
0x1d0 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V151 = CALLVALUE
0x1cc: V152 = ISZERO V151
0x1cd: V153 = 0x1d2
0x1d0: JUMPI 0x1d2 V152
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d1
[0x1d1:0x1d1]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d1 INVALID
---
0x1d1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d2
[0x1d2:0x1d9]
---
Predecessors: [0x1ca]
Successors: [0x339]
---
0x1d2 JUMPDEST
0x1d3 PUSH2 0x11c
0x1d6 PUSH2 0x339
0x1d9 JUMP
---
0x1d2: JUMPDEST 
0x1d3: V154 = 0x11c
0x1d6: V155 = 0x339
0x1d9: JUMP 0x339
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11c]
Exit stack: [V12, 0x11c]

================================

Block 0x1da
[0x1da:0x1eb]
---
Predecessors: []
Successors: []
---
0x1da JUMPDEST
0x1db PUSH1 0x40
0x1dd DUP1
0x1de MLOAD
0x1df SWAP2
0x1e0 DUP3
0x1e1 MSTORE
0x1e2 MLOAD
0x1e3 SWAP1
0x1e4 DUP2
0x1e5 SWAP1
0x1e6 SUB
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea SWAP1
0x1eb RETURN
---
0x1da: JUMPDEST 
0x1db: V156 = 0x40
0x1de: V157 = M[0x40]
0x1e1: M[V157] = S0
0x1e2: V158 = M[0x40]
0x1e6: V159 = SUB V157 V158
0x1e7: V160 = 0x20
0x1e9: V161 = ADD 0x20 V159
0x1eb: RETURN V158 V161
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ec
[0x1ec:0x1f2]
---
Predecessors: [0x67]
Successors: [0x1f3, 0x1f4]
---
0x1ec JUMPDEST
0x1ed CALLVALUE
0x1ee ISZERO
0x1ef PUSH2 0x1f4
0x1f2 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V162 = CALLVALUE
0x1ee: V163 = ISZERO V162
0x1ef: V164 = 0x1f4
0x1f2: JUMPI 0x1f4 V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f3
[0x1f3:0x1f3]
---
Predecessors: [0x1ec]
Successors: []
---
0x1f3 INVALID
---
0x1f3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f4
[0x1f4:0x1fb]
---
Predecessors: [0x1ec]
Successors: [0x33f]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0xde
0x1f8 PUSH2 0x33f
0x1fb JUMP
---
0x1f4: JUMPDEST 
0x1f5: V165 = 0xde
0x1f8: V166 = 0x33f
0x1fb: JUMP 0x33f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0x1fc
[0x1fc:0x1fd]
---
Predecessors: []
Successors: []
---
0x1fc JUMPDEST
0x1fd STOP
---
0x1fc: JUMPDEST 
0x1fd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1fe
[0x1fe:0x204]
---
Predecessors: [0x72]
Successors: [0x205, 0x206]
---
0x1fe JUMPDEST
0x1ff CALLVALUE
0x200 ISZERO
0x201 PUSH2 0x206
0x204 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V167 = CALLVALUE
0x200: V168 = ISZERO V167
0x201: V169 = 0x206
0x204: JUMPI 0x206 V168
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x205
[0x205:0x205]
---
Predecessors: [0x1fe]
Successors: []
---
0x205 INVALID
---
0x205: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x206
[0x206:0x20d]
---
Predecessors: [0x1fe]
Successors: [0x445]
---
0x206 JUMPDEST
0x207 PUSH2 0x11c
0x20a PUSH2 0x445
0x20d JUMP
---
0x206: JUMPDEST 
0x207: V170 = 0x11c
0x20a: V171 = 0x445
0x20d: JUMP 0x445
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11c]
Exit stack: [V12, 0x11c]

================================

Block 0x20e
[0x20e:0x21f]
---
Predecessors: []
Successors: []
---
0x20e JUMPDEST
0x20f PUSH1 0x40
0x211 DUP1
0x212 MLOAD
0x213 SWAP2
0x214 DUP3
0x215 MSTORE
0x216 MLOAD
0x217 SWAP1
0x218 DUP2
0x219 SWAP1
0x21a SUB
0x21b PUSH1 0x20
0x21d ADD
0x21e SWAP1
0x21f RETURN
---
0x20e: JUMPDEST 
0x20f: V172 = 0x40
0x212: V173 = M[0x40]
0x215: M[V173] = S0
0x216: V174 = M[0x40]
0x21a: V175 = SUB V173 V174
0x21b: V176 = 0x20
0x21d: V177 = ADD 0x20 V175
0x21f: RETURN V174 V177
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x220
[0x220:0x226]
---
Predecessors: [0x7d]
Successors: [0x227, 0x228]
---
0x220 JUMPDEST
0x221 CALLVALUE
0x222 ISZERO
0x223 PUSH2 0x228
0x226 JUMPI
---
0x220: JUMPDEST 
0x221: V178 = CALLVALUE
0x222: V179 = ISZERO V178
0x223: V180 = 0x228
0x226: JUMPI 0x228 V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x227
[0x227:0x227]
---
Predecessors: [0x220]
Successors: []
---
0x227 INVALID
---
0x227: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x228
[0x228:0x22f]
---
Predecessors: [0x220]
Successors: [0x44b]
---
0x228 JUMPDEST
0x229 PUSH2 0x230
0x22c PUSH2 0x44b
0x22f JUMP
---
0x228: JUMPDEST 
0x229: V181 = 0x230
0x22c: V182 = 0x44b
0x22f: JUMP 0x44b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x230]
Exit stack: [V12, 0x230]

================================

Block 0x230
[0x230:0x243]
---
Predecessors: [0x5a9]
Successors: []
---
0x230 JUMPDEST
0x231 PUSH1 0x40
0x233 DUP1
0x234 MLOAD
0x235 SWAP2
0x236 ISZERO
0x237 ISZERO
0x238 DUP3
0x239 MSTORE
0x23a MLOAD
0x23b SWAP1
0x23c DUP2
0x23d SWAP1
0x23e SUB
0x23f PUSH1 0x20
0x241 ADD
0x242 SWAP1
0x243 RETURN
---
0x230: JUMPDEST 
0x231: V183 = 0x40
0x234: V184 = M[0x40]
0x236: V185 = ISZERO {0x0, 0x1}
0x237: V186 = ISZERO V185
0x239: M[V184] = V186
0x23a: V187 = M[0x40]
0x23e: V188 = SUB V184 V187
0x23f: V189 = 0x20
0x241: V190 = ADD 0x20 V188
0x243: RETURN V187 V190
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x244
[0x244:0x24a]
---
Predecessors: [0x88]
Successors: [0x24b, 0x24c]
---
0x244 JUMPDEST
0x245 CALLVALUE
0x246 ISZERO
0x247 PUSH2 0x24c
0x24a JUMPI
---
0x244: JUMPDEST 
0x245: V191 = CALLVALUE
0x246: V192 = ISZERO V191
0x247: V193 = 0x24c
0x24a: JUMPI 0x24c V192
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24b
[0x24b:0x24b]
---
Predecessors: [0x244]
Successors: []
---
0x24b INVALID
---
0x24b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24c
[0x24c:0x253]
---
Predecessors: [0x244]
Successors: [0x5af]
---
0x24c JUMPDEST
0x24d PUSH2 0x254
0x250 PUSH2 0x5af
0x253 JUMP
---
0x24c: JUMPDEST 
0x24d: V194 = 0x254
0x250: V195 = 0x5af
0x253: JUMP 0x5af
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254]
Exit stack: [V12, 0x254]

================================

Block 0x254
[0x254:0x262]
---
Predecessors: [0x5af]
Successors: [0x263, 0x264]
---
0x254 JUMPDEST
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 DUP3
0x25a PUSH1 0x3
0x25c DUP2
0x25d GT
0x25e ISZERO
0x25f PUSH2 0x264
0x262 JUMPI
---
0x254: JUMPDEST 
0x255: V196 = 0x40
0x257: V197 = M[0x40]
0x25a: V198 = 0x3
0x25d: V199 = GT V502 0x3
0x25e: V200 = ISZERO V199
0x25f: V201 = 0x264
0x262: JUMPI 0x264 V200
---
Entry stack: [V12, 0x254, V502]
Stack pops: 1
Stack additions: [S0, V197, V197, S0]
Exit stack: [V12, 0x254, V502, V197, V197, V502]

================================

Block 0x263
[0x263:0x263]
---
Predecessors: [0x254]
Successors: []
---
0x263 INVALID
---
0x263: INVALID 
---
Entry stack: [V12, 0x254, V502, V197, V197, V502]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V502, V197, V197, V502]

================================

Block 0x264
[0x264:0x277]
---
Predecessors: [0x254]
Successors: []
---
0x264 JUMPDEST
0x265 PUSH1 0xff
0x267 AND
0x268 DUP2
0x269 MSTORE
0x26a PUSH1 0x20
0x26c ADD
0x26d SWAP2
0x26e POP
0x26f POP
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 SWAP2
0x275 SUB
0x276 SWAP1
0x277 RETURN
---
0x264: JUMPDEST 
0x265: V202 = 0xff
0x267: V203 = AND 0xff V502
0x269: M[V197] = V203
0x26a: V204 = 0x20
0x26c: V205 = ADD 0x20 V197
0x270: V206 = 0x40
0x272: V207 = M[0x40]
0x275: V208 = SUB V205 V207
0x277: RETURN V207 V208
---
Entry stack: [V12, 0x254, V502, V197, V197, V502]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x254]

================================

Block 0x278
[0x278:0x27e]
---
Predecessors: [0x93]
Successors: [0x27f, 0x280]
---
0x278 JUMPDEST
0x279 CALLVALUE
0x27a ISZERO
0x27b PUSH2 0x280
0x27e JUMPI
---
0x278: JUMPDEST 
0x279: V209 = CALLVALUE
0x27a: V210 = ISZERO V209
0x27b: V211 = 0x280
0x27e: JUMPI 0x280 V210
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27f
[0x27f:0x27f]
---
Predecessors: [0x278]
Successors: []
---
0x27f INVALID
---
0x27f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x280
[0x280:0x287]
---
Predecessors: [0x278]
Successors: [0x5b8]
---
0x280 JUMPDEST
0x281 PUSH2 0xde
0x284 PUSH2 0x5b8
0x287 JUMP
---
0x280: JUMPDEST 
0x281: V212 = 0xde
0x284: V213 = 0x5b8
0x287: JUMP 0x5b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0x288
[0x288:0x289]
---
Predecessors: []
Successors: []
---
0x288 JUMPDEST
0x289 STOP
---
0x288: JUMPDEST 
0x289: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x28a
[0x28a:0x290]
---
Predecessors: [0x9e]
Successors: [0x291, 0x292]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c ISZERO
0x28d PUSH2 0x292
0x290 JUMPI
---
0x28a: JUMPDEST 
0x28b: V214 = CALLVALUE
0x28c: V215 = ISZERO V214
0x28d: V216 = 0x292
0x290: JUMPI 0x292 V215
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x291
[0x291:0x291]
---
Predecessors: [0x28a]
Successors: []
---
0x291 INVALID
---
0x291: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x292
[0x292:0x299]
---
Predecessors: [0x28a]
Successors: [0x66c]
---
0x292 JUMPDEST
0x293 PUSH2 0x11c
0x296 PUSH2 0x66c
0x299 JUMP
---
0x292: JUMPDEST 
0x293: V217 = 0x11c
0x296: V218 = 0x66c
0x299: JUMP 0x66c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11c]
Exit stack: [V12, 0x11c]

================================

Block 0x29a
[0x29a:0x2ab]
---
Predecessors: []
Successors: []
---
0x29a JUMPDEST
0x29b PUSH1 0x40
0x29d DUP1
0x29e MLOAD
0x29f SWAP2
0x2a0 DUP3
0x2a1 MSTORE
0x2a2 MLOAD
0x2a3 SWAP1
0x2a4 DUP2
0x2a5 SWAP1
0x2a6 SUB
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa SWAP1
0x2ab RETURN
---
0x29a: JUMPDEST 
0x29b: V219 = 0x40
0x29e: V220 = M[0x40]
0x2a1: M[V220] = S0
0x2a2: V221 = M[0x40]
0x2a6: V222 = SUB V220 V221
0x2a7: V223 = 0x20
0x2a9: V224 = ADD 0x20 V222
0x2ab: RETURN V221 V224
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ac
[0x2ac:0x2b2]
---
Predecessors: [0xa9]
Successors: [0x2b3, 0x2b4]
---
0x2ac JUMPDEST
0x2ad CALLVALUE
0x2ae ISZERO
0x2af PUSH2 0x2b4
0x2b2 JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V225 = CALLVALUE
0x2ae: V226 = ISZERO V225
0x2af: V227 = 0x2b4
0x2b2: JUMPI 0x2b4 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b3
[0x2b3:0x2b3]
---
Predecessors: [0x2ac]
Successors: []
---
0x2b3 INVALID
---
0x2b3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b4
[0x2b4:0x2bb]
---
Predecessors: [0x2ac]
Successors: [0x672]
---
0x2b4 JUMPDEST
0x2b5 PUSH2 0x11c
0x2b8 PUSH2 0x672
0x2bb JUMP
---
0x2b4: JUMPDEST 
0x2b5: V228 = 0x11c
0x2b8: V229 = 0x672
0x2bb: JUMP 0x672
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11c]
Exit stack: [V12, 0x11c]

================================

Block 0x2bc
[0x2bc:0x2cd]
---
Predecessors: []
Successors: []
---
0x2bc JUMPDEST
0x2bd PUSH1 0x40
0x2bf DUP1
0x2c0 MLOAD
0x2c1 SWAP2
0x2c2 DUP3
0x2c3 MSTORE
0x2c4 MLOAD
0x2c5 SWAP1
0x2c6 DUP2
0x2c7 SWAP1
0x2c8 SUB
0x2c9 PUSH1 0x20
0x2cb ADD
0x2cc SWAP1
0x2cd RETURN
---
0x2bc: JUMPDEST 
0x2bd: V230 = 0x40
0x2c0: V231 = M[0x40]
0x2c3: M[V231] = S0
0x2c4: V232 = M[0x40]
0x2c8: V233 = SUB V231 V232
0x2c9: V234 = 0x20
0x2cb: V235 = ADD 0x20 V233
0x2cd: RETURN V232 V235
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ce
[0x2ce:0x2d5]
---
Predecessors: [0xb4]
Successors: [0x678]
---
0x2ce JUMPDEST
0x2cf PUSH2 0x11c
0x2d2 PUSH2 0x678
0x2d5 JUMP
---
0x2ce: JUMPDEST 
0x2cf: V236 = 0x11c
0x2d2: V237 = 0x678
0x2d5: JUMP 0x678
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11c]
Exit stack: [V12, 0x11c]

================================

Block 0x2d6
[0x2d6:0x2e7]
---
Predecessors: []
Successors: []
---
0x2d6 JUMPDEST
0x2d7 PUSH1 0x40
0x2d9 DUP1
0x2da MLOAD
0x2db SWAP2
0x2dc DUP3
0x2dd MSTORE
0x2de MLOAD
0x2df SWAP1
0x2e0 DUP2
0x2e1 SWAP1
0x2e2 SUB
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 SWAP1
0x2e7 RETURN
---
0x2d6: JUMPDEST 
0x2d7: V238 = 0x40
0x2da: V239 = M[0x40]
0x2dd: M[V239] = S0
0x2de: V240 = M[0x40]
0x2e2: V241 = SUB V239 V240
0x2e3: V242 = 0x20
0x2e5: V243 = ADD 0x20 V241
0x2e7: RETURN V240 V243
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e8
[0x2e8:0x2ee]
---
Predecessors: [0xbf]
Successors: [0x2ef, 0x2f0]
---
0x2e8 JUMPDEST
0x2e9 CALLVALUE
0x2ea ISZERO
0x2eb PUSH2 0x2f0
0x2ee JUMPI
---
0x2e8: JUMPDEST 
0x2e9: V244 = CALLVALUE
0x2ea: V245 = ISZERO V244
0x2eb: V246 = 0x2f0
0x2ee: JUMPI 0x2f0 V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ef
[0x2ef:0x2ef]
---
Predecessors: [0x2e8]
Successors: []
---
0x2ef INVALID
---
0x2ef: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f0
[0x2f0:0x2f7]
---
Predecessors: [0x2e8]
Successors: [0x8b3]
---
0x2f0 JUMPDEST
0x2f1 PUSH2 0xde
0x2f4 PUSH2 0x8b3
0x2f7 JUMP
---
0x2f0: JUMPDEST 
0x2f1: V247 = 0xde
0x2f4: V248 = 0x8b3
0x2f7: JUMP 0x8b3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0x2f8
[0x2f8:0x2f9]
---
Predecessors: []
Successors: []
---
0x2f8 JUMPDEST
0x2f9 STOP
---
0x2f8: JUMPDEST 
0x2f9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2fa
[0x2fa:0x308]
---
Predecessors: [0xe8]
Successors: [0xf0]
---
0x2fa JUMPDEST
0x2fb PUSH1 0xa
0x2fd SLOAD
0x2fe PUSH1 0x1
0x300 PUSH1 0xa0
0x302 PUSH1 0x2
0x304 EXP
0x305 SUB
0x306 AND
0x307 DUP2
0x308 JUMP
---
0x2fa: JUMPDEST 
0x2fb: V249 = 0xa
0x2fd: V250 = S[0xa]
0x2fe: V251 = 0x1
0x300: V252 = 0xa0
0x302: V253 = 0x2
0x304: V254 = EXP 0x2 0xa0
0x305: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x308: JUMP 0xf0
---
Entry stack: [V12, 0xf0]
Stack pops: 1
Stack additions: [S0, V256]
Exit stack: [V12, 0xf0, V256]

================================

Block 0x309
[0x309:0x30e]
---
Predecessors: [0x114]
Successors: [0x11c]
---
0x309 JUMPDEST
0x30a PUSH1 0x4
0x30c SLOAD
0x30d DUP2
0x30e JUMP
---
0x309: JUMPDEST 
0x30a: V257 = 0x4
0x30c: V258 = S[0x4]
0x30e: JUMP 0x11c
---
Entry stack: [V12, 0x11c]
Stack pops: 1
Stack additions: [S0, V258]
Exit stack: [V12, 0x11c, V258]

================================

Block 0x30f
[0x30f:0x314]
---
Predecessors: [0x136]
Successors: [0x11c]
---
0x30f JUMPDEST
0x310 PUSH1 0x5
0x312 SLOAD
0x313 DUP2
0x314 JUMP
---
0x30f: JUMPDEST 
0x310: V259 = 0x5
0x312: V260 = S[0x5]
0x314: JUMP 0x11c
---
Entry stack: [V12, 0x11c]
Stack pops: 1
Stack additions: [S0, V260]
Exit stack: [V12, 0x11c, V260]

================================

Block 0x315
[0x315:0x323]
---
Predecessors: [0x158]
Successors: [0xf0]
---
0x315 JUMPDEST
0x316 PUSH1 0xb
0x318 SLOAD
0x319 PUSH1 0x1
0x31b PUSH1 0xa0
0x31d PUSH1 0x2
0x31f EXP
0x320 SUB
0x321 AND
0x322 DUP2
0x323 JUMP
---
0x315: JUMPDEST 
0x316: V261 = 0xb
0x318: V262 = S[0xb]
0x319: V263 = 0x1
0x31b: V264 = 0xa0
0x31d: V265 = 0x2
0x31f: V266 = EXP 0x2 0xa0
0x320: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x321: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x323: JUMP 0xf0
---
Entry stack: [V12, 0xf0]
Stack pops: 1
Stack additions: [S0, V268]
Exit stack: [V12, 0xf0, V268]

================================

Block 0x324
[0x324:0x329]
---
Predecessors: [0x184]
Successors: [0x11c]
---
0x324 JUMPDEST
0x325 PUSH1 0x6
0x327 SLOAD
0x328 DUP2
0x329 JUMP
---
0x324: JUMPDEST 
0x325: V269 = 0x6
0x327: V270 = S[0x6]
0x329: JUMP 0x11c
---
Entry stack: [V12, 0x11c]
Stack pops: 1
Stack additions: [S0, V270]
Exit stack: [V12, 0x11c, V270]

================================

Block 0x32a
[0x32a:0x338]
---
Predecessors: [0x1a6]
Successors: [0xf0]
---
0x32a JUMPDEST
0x32b PUSH1 0x9
0x32d SLOAD
0x32e PUSH1 0x1
0x330 PUSH1 0xa0
0x332 PUSH1 0x2
0x334 EXP
0x335 SUB
0x336 AND
0x337 DUP2
0x338 JUMP
---
0x32a: JUMPDEST 
0x32b: V271 = 0x9
0x32d: V272 = S[0x9]
0x32e: V273 = 0x1
0x330: V274 = 0xa0
0x332: V275 = 0x2
0x334: V276 = EXP 0x2 0xa0
0x335: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x336: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x338: JUMP 0xf0
---
Entry stack: [V12, 0xf0]
Stack pops: 1
Stack additions: [S0, V278]
Exit stack: [V12, 0xf0, V278]

================================

Block 0x339
[0x339:0x33e]
---
Predecessors: [0x1d2]
Successors: [0x11c]
---
0x339 JUMPDEST
0x33a PUSH1 0x7
0x33c SLOAD
0x33d DUP2
0x33e JUMP
---
0x339: JUMPDEST 
0x33a: V279 = 0x7
0x33c: V280 = S[0x7]
0x33e: JUMP 0x11c
---
Entry stack: [V12, 0x11c]
Stack pops: 1
Stack additions: [S0, V280]
Exit stack: [V12, 0x11c, V280]

================================

Block 0x33f
[0x33f:0x34a]
---
Predecessors: [0x1f4, 0x84f]
Successors: [0x34b, 0x353]
---
0x33f JUMPDEST
0x340 PUSH1 0x8
0x342 SLOAD
0x343 ISZERO
0x344 DUP1
0x345 ISZERO
0x346 SWAP1
0x347 PUSH2 0x353
0x34a JUMPI
---
0x33f: JUMPDEST 
0x340: V281 = 0x8
0x342: V282 = S[0x8]
0x343: V283 = ISZERO V282
0x345: V284 = ISZERO V283
0x347: V285 = 0x353
0x34a: JUMPI 0x353 V283
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 0
Stack additions: [V284]
Exit stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}, V284]

================================

Block 0x34b
[0x34b:0x352]
---
Predecessors: [0x33f]
Successors: [0x353]
---
0x34b POP
0x34c PUSH1 0x8
0x34e SLOAD
0x34f PUSH1 0x2
0x351 SLOAD
0x352 GT
---
0x34c: V286 = 0x8
0x34e: V287 = S[0x8]
0x34f: V288 = 0x2
0x351: V289 = S[0x2]
0x352: V290 = GT V289 V287
---
Entry stack: [V12, 0x11c, 0x0, V592, S2, {0xde, 0x8a2}, V284]
Stack pops: 1
Stack additions: [V290]
Exit stack: [V12, 0x11c, 0x0, V592, S2, {0xde, 0x8a2}, V290]

================================

Block 0x353
[0x353:0x358]
---
Predecessors: [0x33f, 0x34b]
Successors: [0x359, 0x3b3]
---
0x353 JUMPDEST
0x354 ISZERO
0x355 PUSH2 0x3b3
0x358 JUMPI
---
0x353: JUMPDEST 
0x354: V291 = ISZERO S0
0x355: V292 = 0x3b3
0x358: JUMPI 0x3b3 V291
---
Entry stack: [V12, 0x11c, 0x0, V592, S2, {0xde, 0x8a2}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S2, {0xde, 0x8a2}]

================================

Block 0x359
[0x359:0x367]
---
Predecessors: [0x353]
Successors: [0x368]
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c SLOAD
0x35d PUSH1 0x2
0x35f SWAP2
0x360 SWAP1
0x361 PUSH1 0xff
0x363 NOT
0x364 AND
0x365 PUSH1 0x1
0x367 DUP4
---
0x359: V293 = 0x0
0x35c: V294 = S[0x0]
0x35d: V295 = 0x2
0x361: V296 = 0xff
0x363: V297 = NOT 0xff
0x364: V298 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V294
0x365: V299 = 0x1
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 0
Stack additions: [0x2, 0x0, V298, 0x1, 0x2]
Exit stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}, 0x2, 0x0, V298, 0x1, 0x2]

================================

Block 0x368
[0x368:0x3a9]
---
Predecessors: [0x359, 0x3c9]
Successors: [0x5b8]
---
0x368 JUMPDEST
0x369 MUL
0x36a OR
0x36b SWAP1
0x36c SSTORE
0x36d POP
0x36e PUSH1 0x2
0x370 SLOAD
0x371 PUSH1 0x40
0x373 DUP1
0x374 MLOAD
0x375 SWAP2
0x376 DUP3
0x377 MSTORE
0x378 MLOAD
0x379 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x39a SWAP2
0x39b DUP2
0x39c SWAP1
0x39d SUB
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 SWAP1
0x3a2 LOG1
0x3a3 PUSH2 0x3aa
0x3a6 PUSH2 0x5b8
0x3a9 JUMP
---
0x368: JUMPDEST 
0x369: V300 = MUL 0x2 0x1
0x36a: V301 = OR 0x2 S2
0x36c: S[0x0] = V301
0x36e: V302 = 0x2
0x370: V303 = S[0x2]
0x371: V304 = 0x40
0x374: V305 = M[0x40]
0x377: M[V305] = V303
0x378: V306 = M[0x40]
0x379: V307 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x39d: V308 = SUB V305 V306
0x39e: V309 = 0x20
0x3a0: V310 = ADD 0x20 V308
0x3a2: LOG V306 V310 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x3a3: V311 = 0x3aa
0x3a6: V312 = 0x5b8
0x3a9: JUMP 0x5b8
---
Entry stack: [V12, 0x11c, 0x0, V592, S6, {0xde, 0x8a2}, 0x2, 0x0, S2, 0x1, 0x2]
Stack pops: 5
Stack additions: [0x3aa]
Exit stack: [V12, 0x11c, 0x0, V592, S6, {0xde, 0x8a2}, 0x3aa]

================================

Block 0x3aa
[0x3aa:0x3b2]
---
Predecessors: [0x669]
Successors: [0xdc]
---
0x3aa JUMPDEST
0x3ab TIMESTAMP
0x3ac PUSH1 0x5
0x3ae SSTORE
0x3af PUSH2 0xdc
0x3b2 JUMP
---
0x3aa: JUMPDEST 
0x3ab: V313 = TIMESTAMP
0x3ac: V314 = 0x5
0x3ae: S[0x5] = V313
0x3af: V315 = 0xdc
0x3b2: JUMP 0xdc
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S1, S0]

================================

Block 0x3b3
[0x3b3:0x3bd]
---
Predecessors: [0x353]
Successors: [0xdc, 0x3be]
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x4
0x3b6 SLOAD
0x3b7 TIMESTAMP
0x3b8 GT
0x3b9 ISZERO
0x3ba PUSH2 0xdc
0x3bd JUMPI
---
0x3b3: JUMPDEST 
0x3b4: V316 = 0x4
0x3b6: V317 = S[0x4]
0x3b7: V318 = TIMESTAMP
0x3b8: V319 = GT V318 V317
0x3b9: V320 = ISZERO V319
0x3ba: V321 = 0xdc
0x3bd: JUMPI 0xdc V320
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]

================================

Block 0x3be
[0x3be:0x3c8]
---
Predecessors: [0x3b3]
Successors: [0x3c9, 0x427]
---
0x3be PUSH1 0x7
0x3c0 SLOAD
0x3c1 PUSH1 0x2
0x3c3 SLOAD
0x3c4 LT
0x3c5 PUSH2 0x427
0x3c8 JUMPI
---
0x3be: V322 = 0x7
0x3c0: V323 = S[0x7]
0x3c1: V324 = 0x2
0x3c3: V325 = S[0x2]
0x3c4: V326 = LT V325 V323
0x3c5: V327 = 0x427
0x3c8: JUMPI 0x427 V326
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]

================================

Block 0x3c9
[0x3c9:0x3db]
---
Predecessors: [0x3be]
Successors: [0x368]
---
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc SLOAD
0x3cd PUSH1 0x2
0x3cf SWAP2
0x3d0 SWAP1
0x3d1 PUSH1 0xff
0x3d3 NOT
0x3d4 AND
0x3d5 PUSH1 0x1
0x3d7 DUP4
0x3d8 PUSH2 0x368
0x3db JUMP
---
0x3c9: V328 = 0x0
0x3cc: V329 = S[0x0]
0x3cd: V330 = 0x2
0x3d1: V331 = 0xff
0x3d3: V332 = NOT 0xff
0x3d4: V333 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V329
0x3d5: V334 = 0x1
0x3d8: V335 = 0x368
0x3db: JUMP 0x368
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 0
Stack additions: [0x2, 0x0, V333, 0x1, 0x2]
Exit stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}, 0x2, 0x0, V333, 0x1, 0x2]

================================

Block 0x3dc
[0x3dc:0x41d]
---
Predecessors: []
Successors: [0x5b8]
---
0x3dc JUMPDEST
0x3dd MUL
0x3de OR
0x3df SWAP1
0x3e0 SSTORE
0x3e1 POP
0x3e2 PUSH1 0x2
0x3e4 SLOAD
0x3e5 PUSH1 0x40
0x3e7 DUP1
0x3e8 MLOAD
0x3e9 SWAP2
0x3ea DUP3
0x3eb MSTORE
0x3ec MLOAD
0x3ed PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x40e SWAP2
0x40f DUP2
0x410 SWAP1
0x411 SUB
0x412 PUSH1 0x20
0x414 ADD
0x415 SWAP1
0x416 LOG1
0x417 PUSH2 0x3aa
0x41a PUSH2 0x5b8
0x41d JUMP
---
0x3dc: JUMPDEST 
0x3dd: V336 = MUL S0 S1
0x3de: V337 = OR V336 S2
0x3e0: S[S3] = V337
0x3e2: V338 = 0x2
0x3e4: V339 = S[0x2]
0x3e5: V340 = 0x40
0x3e8: V341 = M[0x40]
0x3eb: M[V341] = V339
0x3ec: V342 = M[0x40]
0x3ed: V343 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x411: V344 = SUB V341 V342
0x412: V345 = 0x20
0x414: V346 = ADD 0x20 V344
0x416: LOG V342 V346 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x417: V347 = 0x3aa
0x41a: V348 = 0x5b8
0x41d: JUMP 0x5b8
---
Entry stack: []
Stack pops: 5
Stack additions: [0x3aa]
Exit stack: [0x3aa]

================================

Block 0x41e
[0x41e:0x426]
---
Predecessors: []
Successors: [0xdc]
---
0x41e JUMPDEST
0x41f TIMESTAMP
0x420 PUSH1 0x5
0x422 SSTORE
0x423 PUSH2 0xdc
0x426 JUMP
---
0x41e: JUMPDEST 
0x41f: V349 = TIMESTAMP
0x420: V350 = 0x5
0x422: S[0x5] = V349
0x423: V351 = 0xdc
0x426: JUMP 0xdc
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x427
[0x427:0x435]
---
Predecessors: [0x3be]
Successors: [0x436]
---
0x427 JUMPDEST
0x428 PUSH1 0x0
0x42a DUP1
0x42b SLOAD
0x42c PUSH1 0x1
0x42e SWAP2
0x42f SWAP1
0x430 PUSH1 0xff
0x432 NOT
0x433 AND
0x434 DUP3
0x435 DUP1
---
0x427: JUMPDEST 
0x428: V352 = 0x0
0x42b: V353 = S[0x0]
0x42c: V354 = 0x1
0x430: V355 = 0xff
0x432: V356 = NOT 0xff
0x433: V357 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V353
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 0
Stack additions: [0x1, 0x0, V357, 0x1, 0x1]
Exit stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}, 0x1, 0x0, V357, 0x1, 0x1]

================================

Block 0x436
[0x436:0x43f]
---
Predecessors: [0x427]
Successors: [0x440]
---
0x436 JUMPDEST
0x437 MUL
0x438 OR
0x439 SWAP1
0x43a SSTORE
0x43b POP
0x43c TIMESTAMP
0x43d PUSH1 0x5
0x43f SSTORE
---
0x436: JUMPDEST 
0x437: V358 = MUL 0x1 0x1
0x438: V359 = OR 0x1 V357
0x43a: S[0x0] = V359
0x43c: V360 = TIMESTAMP
0x43d: V361 = 0x5
0x43f: S[0x5] = V360
---
Entry stack: [V12, 0x11c, 0x0, V592, S6, {0xde, 0x8a2}, 0x1, 0x0, V357, 0x1, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S6, {0xde, 0x8a2}]

================================

Block 0x440
[0x440:0x440]
---
Predecessors: [0x436]
Successors: [0x441]
---
0x440 JUMPDEST
---
0x440: JUMPDEST 
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]

================================

Block 0x441
[0x441:0x441]
---
Predecessors: [0x440]
Successors: [0x442]
---
0x441 JUMPDEST
---
0x441: JUMPDEST 
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]

================================

Block 0x442
[0x442:0x442]
---
Predecessors: [0x441]
Successors: [0x443]
---
0x442 JUMPDEST
---
0x442: JUMPDEST 
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]

================================

Block 0x443
[0x443:0x444]
---
Predecessors: [0x442]
Successors: [0xde, 0x8a2]
---
0x443 JUMPDEST
0x444 JUMP
---
0x443: JUMPDEST 
0x444: JUMP {0xde, 0x8a2}
---
Entry stack: [V12, 0x11c, 0x0, V592, S1, {0xde, 0x8a2}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S1]

================================

Block 0x445
[0x445:0x44a]
---
Predecessors: [0x206]
Successors: [0x11c]
---
0x445 JUMPDEST
0x446 PUSH1 0x8
0x448 SLOAD
0x449 DUP2
0x44a JUMP
---
0x445: JUMPDEST 
0x446: V362 = 0x8
0x448: V363 = S[0x8]
0x44a: JUMP 0x11c
---
Entry stack: [V12, 0x11c]
Stack pops: 1
Stack additions: [S0, V363]
Exit stack: [V12, 0x11c, V363]

================================

Block 0x44b
[0x44b:0x452]
---
Predecessors: [0x228]
Successors: [0x453]
---
0x44b JUMPDEST
0x44c PUSH1 0x0
0x44e DUP1
0x44f DUP1
0x450 PUSH1 0x1
0x452 DUP1
---
0x44b: JUMPDEST 
0x44c: V364 = 0x0
0x450: V365 = 0x1
---
Entry stack: [V12, 0x230]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x1, 0x1]
Exit stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1, 0x1]

================================

Block 0x453
[0x453:0x462]
---
Predecessors: [0x44b]
Successors: [0x463, 0x464]
---
0x453 JUMPDEST
0x454 PUSH1 0x0
0x456 SLOAD
0x457 PUSH1 0xff
0x459 AND
0x45a PUSH1 0x3
0x45c DUP2
0x45d GT
0x45e ISZERO
0x45f PUSH2 0x464
0x462 JUMPI
---
0x453: JUMPDEST 
0x454: V366 = 0x0
0x456: V367 = S[0x0]
0x457: V368 = 0xff
0x459: V369 = AND 0xff V367
0x45a: V370 = 0x3
0x45d: V371 = GT V369 0x3
0x45e: V372 = ISZERO V371
0x45f: V373 = 0x464
0x462: JUMPI 0x464 V372
---
Entry stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [V369]
Exit stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1, 0x1, V369]

================================

Block 0x463
[0x463:0x463]
---
Predecessors: [0x453]
Successors: []
---
0x463 INVALID
---
0x463: INVALID 
---
Entry stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1, 0x1, V369]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1, 0x1, V369]

================================

Block 0x464
[0x464:0x469]
---
Predecessors: [0x453]
Successors: [0x46a, 0x46f]
---
0x464 JUMPDEST
0x465 EQ
0x466 PUSH2 0x46f
0x469 JUMPI
---
0x464: JUMPDEST 
0x465: V374 = EQ V369 0x1
0x466: V375 = 0x46f
0x469: JUMPI 0x46f V374
---
Entry stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1, 0x1, V369]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x46a
[0x46a:0x46e]
---
Predecessors: [0x464]
Successors: []
---
0x46a PUSH1 0x0
0x46c PUSH1 0x0
0x46e REVERT
---
0x46a: V376 = 0x0
0x46c: V377 = 0x0
0x46e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x46f
[0x46f:0x473]
---
Predecessors: [0x464]
Successors: [0x474]
---
0x46f JUMPDEST
0x470 PUSH1 0x0
0x472 SWAP3
0x473 POP
---
0x46f: JUMPDEST 
0x470: V378 = 0x0
---
Entry stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, 0x230, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x474
[0x474:0x47d]
---
Predecessors: [0x46f, 0x598]
Successors: [0x47e, 0x5a3]
---
0x474 JUMPDEST
0x475 PUSH1 0x1
0x477 SLOAD
0x478 DUP4
0x479 GT
0x47a PUSH2 0x5a3
0x47d JUMPI
---
0x474: JUMPDEST 
0x475: V379 = 0x1
0x477: V380 = S[0x1]
0x479: V381 = GT S2 V380
0x47a: V382 = 0x5a3
0x47d: JUMPI 0x5a3 V381
---
Entry stack: [V12, 0x230, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x230, 0x0, S2, 0x0, 0x1]

================================

Block 0x47e
[0x47e:0x494]
---
Predecessors: [0x474]
Successors: [0x495, 0x496]
---
0x47e CALLER
0x47f PUSH1 0x1
0x481 PUSH1 0xa0
0x483 PUSH1 0x2
0x485 EXP
0x486 SUB
0x487 AND
0x488 PUSH1 0x1
0x48a DUP5
0x48b DUP2
0x48c SLOAD
0x48d DUP2
0x48e LT
0x48f ISZERO
0x490 ISZERO
0x491 PUSH2 0x496
0x494 JUMPI
---
0x47e: V383 = CALLER
0x47f: V384 = 0x1
0x481: V385 = 0xa0
0x483: V386 = 0x2
0x485: V387 = EXP 0x2 0xa0
0x486: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x487: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x488: V390 = 0x1
0x48c: V391 = S[0x1]
0x48e: V392 = LT S2 V391
0x48f: V393 = ISZERO V392
0x490: V394 = ISZERO V393
0x491: V395 = 0x496
0x494: JUMPI 0x496 V394
---
Entry stack: [V12, 0x230, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, V389, 0x1, S2]
Exit stack: [V12, 0x230, 0x0, S2, 0x0, 0x1, V389, 0x1, S2]

================================

Block 0x495
[0x495:0x495]
---
Predecessors: [0x47e]
Successors: []
---
0x495 INVALID
---
0x495: INVALID 
---
Entry stack: [V12, 0x230, 0x0, S5, 0x0, 0x1, V389, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x0, S5, 0x0, 0x1, V389, 0x1, S0]

================================

Block 0x496
[0x496:0x4a6]
---
Predecessors: [0x47e]
Successors: [0x4a7]
---
0x496 JUMPDEST
0x497 SWAP1
0x498 PUSH1 0x0
0x49a MSTORE
0x49b PUSH1 0x20
0x49d PUSH1 0x0
0x49f SHA3
0x4a0 SWAP1
0x4a1 PUSH1 0x2
0x4a3 MUL
0x4a4 ADD
0x4a5 PUSH1 0x0
---
0x496: JUMPDEST 
0x498: V396 = 0x0
0x49a: M[0x0] = 0x1
0x49b: V397 = 0x20
0x49d: V398 = 0x0
0x49f: V399 = SHA3 0x0 0x20
0x4a1: V400 = 0x2
0x4a3: V401 = MUL 0x2 S0
0x4a4: V402 = ADD V401 V399
0x4a5: V403 = 0x0
---
Entry stack: [V12, 0x230, 0x0, S5, 0x0, 0x1, V389, 0x1, S0]
Stack pops: 2
Stack additions: [V402, 0x0]
Exit stack: [V12, 0x230, 0x0, S5, 0x0, 0x1, V389, V402, 0x0]

================================

Block 0x4a7
[0x4a7:0x4bb]
---
Predecessors: [0x496]
Successors: [0x4bc, 0x597]
---
0x4a7 JUMPDEST
0x4a8 POP
0x4a9 PUSH1 0x1
0x4ab ADD
0x4ac SLOAD
0x4ad PUSH1 0x1
0x4af PUSH1 0xa0
0x4b1 PUSH1 0x2
0x4b3 EXP
0x4b4 SUB
0x4b5 AND
0x4b6 EQ
0x4b7 ISZERO
0x4b8 PUSH2 0x597
0x4bb JUMPI
---
0x4a7: JUMPDEST 
0x4a9: V404 = 0x1
0x4ab: V405 = ADD 0x1 V402
0x4ac: V406 = S[V405]
0x4ad: V407 = 0x1
0x4af: V408 = 0xa0
0x4b1: V409 = 0x2
0x4b3: V410 = EXP 0x2 0xa0
0x4b4: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b5: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x4b6: V413 = EQ V412 V389
0x4b7: V414 = ISZERO V413
0x4b8: V415 = 0x597
0x4bb: JUMPI 0x597 V414
---
Entry stack: [V12, 0x230, 0x0, S5, 0x0, 0x1, V389, V402, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x230, 0x0, S5, 0x0, 0x1]

================================

Block 0x4bc
[0x4bc:0x4c7]
---
Predecessors: [0x4a7]
Successors: [0x4c8, 0x4c9]
---
0x4bc PUSH1 0x1
0x4be DUP1
0x4bf SLOAD
0x4c0 DUP5
0x4c1 SWAP1
0x4c2 DUP2
0x4c3 LT
0x4c4 PUSH2 0x4c9
0x4c7 JUMPI
---
0x4bc: V416 = 0x1
0x4bf: V417 = S[0x1]
0x4c3: V418 = LT S2 V417
0x4c4: V419 = 0x4c9
0x4c7: JUMPI 0x4c9 V418
---
Entry stack: [V12, 0x230, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, S2]
Exit stack: [V12, 0x230, 0x0, S2, 0x0, 0x1, 0x1, S2]

================================

Block 0x4c8
[0x4c8:0x4c8]
---
Predecessors: [0x4bc]
Successors: []
---
0x4c8 INVALID
---
0x4c8: INVALID 
---
Entry stack: [V12, 0x230, 0x0, S4, 0x0, 0x1, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x0, S4, 0x0, 0x1, 0x1, S0]

================================

Block 0x4c9
[0x4c9:0x4d9]
---
Predecessors: [0x4bc]
Successors: [0x4da]
---
0x4c9 JUMPDEST
0x4ca SWAP1
0x4cb PUSH1 0x0
0x4cd MSTORE
0x4ce PUSH1 0x20
0x4d0 PUSH1 0x0
0x4d2 SHA3
0x4d3 SWAP1
0x4d4 PUSH1 0x2
0x4d6 MUL
0x4d7 ADD
0x4d8 PUSH1 0x0
---
0x4c9: JUMPDEST 
0x4cb: V420 = 0x0
0x4cd: M[0x0] = 0x1
0x4ce: V421 = 0x20
0x4d0: V422 = 0x0
0x4d2: V423 = SHA3 0x0 0x20
0x4d4: V424 = 0x2
0x4d6: V425 = MUL 0x2 S0
0x4d7: V426 = ADD V425 V423
0x4d8: V427 = 0x0
---
Entry stack: [V12, 0x230, 0x0, S4, 0x0, 0x1, 0x1, S0]
Stack pops: 2
Stack additions: [V426, 0x0]
Exit stack: [V12, 0x230, 0x0, S4, 0x0, 0x1, V426, 0x0]

================================

Block 0x4da
[0x4da:0x4ee]
---
Predecessors: [0x4c9]
Successors: [0x4ef, 0x4f0]
---
0x4da JUMPDEST
0x4db POP
0x4dc SLOAD
0x4dd PUSH1 0x1
0x4df DUP1
0x4e0 SLOAD
0x4e1 SWAP2
0x4e2 SWAP4
0x4e3 POP
0x4e4 PUSH1 0x0
0x4e6 SWAP2
0x4e7 DUP6
0x4e8 SWAP1
0x4e9 DUP2
0x4ea LT
0x4eb PUSH2 0x4f0
0x4ee JUMPI
---
0x4da: JUMPDEST 
0x4dc: V428 = S[V426]
0x4dd: V429 = 0x1
0x4e0: V430 = S[0x1]
0x4e4: V431 = 0x0
0x4ea: V432 = LT S4 V430
0x4eb: V433 = 0x4f0
0x4ee: JUMPI 0x4f0 V432
---
Entry stack: [V12, 0x230, 0x0, S4, 0x0, 0x1, V426, 0x0]
Stack pops: 5
Stack additions: [S4, V428, S2, 0x0, 0x1, S4]
Exit stack: [V12, 0x230, 0x0, S4, V428, 0x1, 0x0, 0x1, S4]

================================

Block 0x4ef
[0x4ef:0x4ef]
---
Predecessors: [0x4da]
Successors: []
---
0x4ef INVALID
---
0x4ef: INVALID 
---
Entry stack: [V12, 0x230, 0x0, S5, V428, 0x1, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x0, S5, V428, 0x1, 0x0, 0x1, S0]

================================

Block 0x4f0
[0x4f0:0x500]
---
Predecessors: [0x4da]
Successors: [0x501]
---
0x4f0 JUMPDEST
0x4f1 SWAP1
0x4f2 PUSH1 0x0
0x4f4 MSTORE
0x4f5 PUSH1 0x20
0x4f7 PUSH1 0x0
0x4f9 SHA3
0x4fa SWAP1
0x4fb PUSH1 0x2
0x4fd MUL
0x4fe ADD
0x4ff PUSH1 0x0
---
0x4f0: JUMPDEST 
0x4f2: V434 = 0x0
0x4f4: M[0x0] = 0x1
0x4f5: V435 = 0x20
0x4f7: V436 = 0x0
0x4f9: V437 = SHA3 0x0 0x20
0x4fb: V438 = 0x2
0x4fd: V439 = MUL 0x2 S0
0x4fe: V440 = ADD V439 V437
0x4ff: V441 = 0x0
---
Entry stack: [V12, 0x230, 0x0, S5, V428, 0x1, 0x0, 0x1, S0]
Stack pops: 2
Stack additions: [V440, 0x0]
Exit stack: [V12, 0x230, 0x0, S5, V428, 0x1, 0x0, V440, 0x0]

================================

Block 0x501
[0x501:0x50f]
---
Predecessors: [0x4f0]
Successors: [0x510, 0x511]
---
0x501 JUMPDEST
0x502 POP
0x503 SSTORE
0x504 PUSH1 0x1
0x506 DUP1
0x507 SLOAD
0x508 DUP5
0x509 SWAP1
0x50a DUP2
0x50b LT
0x50c PUSH2 0x511
0x50f JUMPI
---
0x501: JUMPDEST 
0x503: S[V440] = 0x0
0x504: V442 = 0x1
0x507: V443 = S[0x1]
0x50b: V444 = LT S5 V443
0x50c: V445 = 0x511
0x50f: JUMPI 0x511 V444
---
Entry stack: [V12, 0x230, 0x0, S5, V428, 0x1, 0x0, V440, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x1, S5]
Exit stack: [V12, 0x230, 0x0, S5, V428, 0x1, 0x1, S5]

================================

Block 0x510
[0x510:0x510]
---
Predecessors: [0x501]
Successors: []
---
0x510 INVALID
---
0x510: INVALID 
---
Entry stack: [V12, 0x230, 0x0, S4, V428, 0x1, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x0, S4, V428, 0x1, 0x1, S0]

================================

Block 0x511
[0x511:0x521]
---
Predecessors: [0x501]
Successors: [0x522]
---
0x511 JUMPDEST
0x512 SWAP1
0x513 PUSH1 0x0
0x515 MSTORE
0x516 PUSH1 0x20
0x518 PUSH1 0x0
0x51a SHA3
0x51b SWAP1
0x51c PUSH1 0x2
0x51e MUL
0x51f ADD
0x520 PUSH1 0x0
---
0x511: JUMPDEST 
0x513: V446 = 0x0
0x515: M[0x0] = 0x1
0x516: V447 = 0x20
0x518: V448 = 0x0
0x51a: V449 = SHA3 0x0 0x20
0x51c: V450 = 0x2
0x51e: V451 = MUL 0x2 S0
0x51f: V452 = ADD V451 V449
0x520: V453 = 0x0
---
Entry stack: [V12, 0x230, 0x0, S4, V428, 0x1, 0x1, S0]
Stack pops: 2
Stack additions: [V452, 0x0]
Exit stack: [V12, 0x230, 0x0, S4, V428, 0x1, V452, 0x0]

================================

Block 0x522
[0x522:0x553]
---
Predecessors: [0x511]
Successors: [0x554, 0x57f]
---
0x522 JUMPDEST
0x523 POP
0x524 PUSH1 0x1
0x526 ADD
0x527 SLOAD
0x528 PUSH1 0x40
0x52a MLOAD
0x52b PUSH1 0x1
0x52d PUSH1 0xa0
0x52f PUSH1 0x2
0x531 EXP
0x532 SUB
0x533 SWAP1
0x534 SWAP2
0x535 AND
0x536 SWAP1
0x537 DUP4
0x538 ISZERO
0x539 PUSH2 0x8fc
0x53c MUL
0x53d SWAP1
0x53e DUP5
0x53f SWAP1
0x540 PUSH1 0x0
0x542 DUP2
0x543 DUP2
0x544 DUP2
0x545 DUP6
0x546 DUP9
0x547 DUP9
0x548 CALL
0x549 SWAP4
0x54a POP
0x54b POP
0x54c POP
0x54d POP
0x54e ISZERO
0x54f ISZERO
0x550 PUSH2 0x57f
0x553 JUMPI
---
0x522: JUMPDEST 
0x524: V454 = 0x1
0x526: V455 = ADD 0x1 V452
0x527: V456 = S[V455]
0x528: V457 = 0x40
0x52a: V458 = M[0x40]
0x52b: V459 = 0x1
0x52d: V460 = 0xa0
0x52f: V461 = 0x2
0x531: V462 = EXP 0x2 0xa0
0x532: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x535: V464 = AND V456 0xffffffffffffffffffffffffffffffffffffffff
0x538: V465 = ISZERO V428
0x539: V466 = 0x8fc
0x53c: V467 = MUL 0x8fc V465
0x540: V468 = 0x0
0x548: V469 = CALL V467 V464 V428 V458 0x0 V458 0x0
0x54e: V470 = ISZERO V469
0x54f: V471 = ISZERO V470
0x550: V472 = 0x57f
0x553: JUMPI 0x57f V471
---
Entry stack: [V12, 0x230, 0x0, S4, V428, 0x1, V452, 0x0]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V12, 0x230, 0x0, S4, V428, 0x1]

================================

Block 0x554
[0x554:0x561]
---
Predecessors: [0x522]
Successors: [0x562, 0x563]
---
0x554 DUP2
0x555 PUSH1 0x1
0x557 DUP5
0x558 DUP2
0x559 SLOAD
0x55a DUP2
0x55b LT
0x55c ISZERO
0x55d ISZERO
0x55e PUSH2 0x563
0x561 JUMPI
---
0x555: V473 = 0x1
0x559: V474 = S[0x1]
0x55b: V475 = LT S2 V474
0x55c: V476 = ISZERO V475
0x55d: V477 = ISZERO V476
0x55e: V478 = 0x563
0x561: JUMPI 0x563 V477
---
Entry stack: [V12, 0x230, 0x0, S2, V428, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, S1, 0x1, S2]
Exit stack: [V12, 0x230, 0x0, S2, V428, 0x1, V428, 0x1, S2]

================================

Block 0x562
[0x562:0x562]
---
Predecessors: [0x554]
Successors: []
---
0x562 INVALID
---
0x562: INVALID 
---
Entry stack: [V12, 0x230, 0x0, S5, V428, 0x1, V428, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x0, S5, V428, 0x1, V428, 0x1, S0]

================================

Block 0x563
[0x563:0x573]
---
Predecessors: [0x554]
Successors: [0x574]
---
0x563 JUMPDEST
0x564 SWAP1
0x565 PUSH1 0x0
0x567 MSTORE
0x568 PUSH1 0x20
0x56a PUSH1 0x0
0x56c SHA3
0x56d SWAP1
0x56e PUSH1 0x2
0x570 MUL
0x571 ADD
0x572 PUSH1 0x0
---
0x563: JUMPDEST 
0x565: V479 = 0x0
0x567: M[0x0] = 0x1
0x568: V480 = 0x20
0x56a: V481 = 0x0
0x56c: V482 = SHA3 0x0 0x20
0x56e: V483 = 0x2
0x570: V484 = MUL 0x2 S0
0x571: V485 = ADD V484 V482
0x572: V486 = 0x0
---
Entry stack: [V12, 0x230, 0x0, S5, V428, 0x1, V428, 0x1, S0]
Stack pops: 2
Stack additions: [V485, 0x0]
Exit stack: [V12, 0x230, 0x0, S5, V428, 0x1, V428, V485, 0x0]

================================

Block 0x574
[0x574:0x57e]
---
Predecessors: [0x563]
Successors: [0x5a8]
---
0x574 JUMPDEST
0x575 POP
0x576 SSTORE
0x577 PUSH1 0x0
0x579 SWAP4
0x57a POP
0x57b PUSH2 0x5a8
0x57e JUMP
---
0x574: JUMPDEST 
0x576: S[V485] = V428
0x577: V487 = 0x0
0x57b: V488 = 0x5a8
0x57e: JUMP 0x5a8
---
Entry stack: [V12, 0x230, 0x0, S5, V428, 0x1, V428, V485, 0x0]
Stack pops: 7
Stack additions: [0x0, S5, S4, S3]
Exit stack: [V12, 0x230, 0x0, S5, V428, 0x1]

================================

Block 0x57f
[0x57f:0x58d]
---
Predecessors: [0x522]
Successors: [0x58e]
---
0x57f JUMPDEST
0x580 PUSH1 0x2
0x582 DUP1
0x583 SLOAD
0x584 DUP4
0x585 SWAP1
0x586 SUB
0x587 SWAP1
0x588 DUP2
0x589 SWAP1
0x58a SSTORE
0x58b PUSH1 0x3
0x58d SSTORE
---
0x57f: JUMPDEST 
0x580: V489 = 0x2
0x583: V490 = S[0x2]
0x586: V491 = SUB V490 V428
0x58a: S[0x2] = V491
0x58b: V492 = 0x3
0x58d: S[0x3] = V491
---
Entry stack: [V12, 0x230, 0x0, S2, V428, 0x1]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x230, 0x0, S2, V428, 0x1]

================================

Block 0x58e
[0x58e:0x596]
---
Predecessors: [0x57f]
Successors: [0x5a8]
---
0x58e JUMPDEST
0x58f PUSH1 0x1
0x591 SWAP4
0x592 POP
0x593 PUSH2 0x5a8
0x596 JUMP
---
0x58e: JUMPDEST 
0x58f: V493 = 0x1
0x593: V494 = 0x5a8
0x596: JUMP 0x5a8
---
Entry stack: [V12, 0x230, 0x0, S2, V428, 0x1]
Stack pops: 4
Stack additions: [0x1, S2, S1, S0]
Exit stack: [V12, 0x230, 0x1, S2, V428, 0x1]

================================

Block 0x597
[0x597:0x597]
---
Predecessors: [0x4a7]
Successors: [0x598]
---
0x597 JUMPDEST
---
0x597: JUMPDEST 
---
Entry stack: [V12, 0x230, 0x0, S2, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x0, S2, 0x0, 0x1]

================================

Block 0x598
[0x598:0x5a2]
---
Predecessors: [0x597]
Successors: [0x474]
---
0x598 JUMPDEST
0x599 PUSH1 0x1
0x59b SWAP1
0x59c SWAP3
0x59d ADD
0x59e SWAP2
0x59f PUSH2 0x474
0x5a2 JUMP
---
0x598: JUMPDEST 
0x599: V495 = 0x1
0x59d: V496 = ADD S2 0x1
0x59f: V497 = 0x474
0x5a2: JUMP 0x474
---
Entry stack: [V12, 0x230, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [V496, S1, S0]
Exit stack: [V12, 0x230, 0x0, V496, 0x0, 0x1]

================================

Block 0x5a3
[0x5a3:0x5a7]
---
Predecessors: [0x474]
Successors: [0x5a8]
---
0x5a3 JUMPDEST
0x5a4 PUSH1 0x0
0x5a6 SWAP4
0x5a7 POP
---
0x5a3: JUMPDEST 
0x5a4: V498 = 0x0
---
Entry stack: [V12, 0x230, 0x0, S2, 0x0, 0x1]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x230, 0x0, S2, 0x0, 0x1]

================================

Block 0x5a8
[0x5a8:0x5a8]
---
Predecessors: [0x574, 0x58e, 0x5a3]
Successors: [0x5a9]
---
0x5a8 JUMPDEST
---
0x5a8: JUMPDEST 
---
Entry stack: [V12, 0x230, {0x0, 0x1}, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, {0x0, 0x1}, S2, S1, 0x1]

================================

Block 0x5a9
[0x5a9:0x5ae]
---
Predecessors: [0x5a8]
Successors: [0x230]
---
0x5a9 JUMPDEST
0x5aa POP
0x5ab POP
0x5ac POP
0x5ad SWAP1
0x5ae JUMP
---
0x5a9: JUMPDEST 
0x5ae: JUMP 0x230
---
Entry stack: [V12, 0x230, {0x0, 0x1}, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x5af
[0x5af:0x5b7]
---
Predecessors: [0x24c]
Successors: [0x254]
---
0x5af JUMPDEST
0x5b0 PUSH1 0x0
0x5b2 SLOAD
0x5b3 PUSH1 0xff
0x5b5 AND
0x5b6 DUP2
0x5b7 JUMP
---
0x5af: JUMPDEST 
0x5b0: V499 = 0x0
0x5b2: V500 = S[0x0]
0x5b3: V501 = 0xff
0x5b5: V502 = AND 0xff V500
0x5b7: JUMP 0x254
---
Entry stack: [V12, 0x254]
Stack pops: 1
Stack additions: [S0, V502]
Exit stack: [V12, 0x254, V502]

================================

Block 0x5b8
[0x5b8:0x5bb]
---
Predecessors: [0x280, 0x368, 0x3dc]
Successors: [0x5bc]
---
0x5b8 JUMPDEST
0x5b9 PUSH1 0x2
0x5bb DUP1
---
0x5b8: JUMPDEST 
0x5b9: V503 = 0x2
---
Entry stack: [V12, 0x11c, 0x0, V592, S2, S1, {0xde, 0x3aa}]
Stack pops: 0
Stack additions: [0x2, 0x2]
Exit stack: [V12, 0x11c, 0x0, V592, S2, S1, {0xde, 0x3aa}, 0x2, 0x2]

================================

Block 0x5bc
[0x5bc:0x5cb]
---
Predecessors: [0x5b8]
Successors: [0x5cc, 0x5cd]
---
0x5bc JUMPDEST
0x5bd PUSH1 0x0
0x5bf SLOAD
0x5c0 PUSH1 0xff
0x5c2 AND
0x5c3 PUSH1 0x3
0x5c5 DUP2
0x5c6 GT
0x5c7 ISZERO
0x5c8 PUSH2 0x5cd
0x5cb JUMPI
---
0x5bc: JUMPDEST 
0x5bd: V504 = 0x0
0x5bf: V505 = S[0x0]
0x5c0: V506 = 0xff
0x5c2: V507 = AND 0xff V505
0x5c3: V508 = 0x3
0x5c6: V509 = GT V507 0x3
0x5c7: V510 = ISZERO V509
0x5c8: V511 = 0x5cd
0x5cb: JUMPI 0x5cd V510
---
Entry stack: [V12, 0x11c, 0x0, V592, S4, S3, {0xde, 0x3aa}, 0x2, 0x2]
Stack pops: 0
Stack additions: [V507]
Exit stack: [V12, 0x11c, 0x0, V592, S4, S3, {0xde, 0x3aa}, 0x2, 0x2, V507]

================================

Block 0x5cc
[0x5cc:0x5cc]
---
Predecessors: [0x5bc]
Successors: []
---
0x5cc INVALID
---
0x5cc: INVALID 
---
Entry stack: [V12, 0x11c, 0x0, V592, S5, S4, {0xde, 0x3aa}, 0x2, 0x2, V507]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S5, S4, {0xde, 0x3aa}, 0x2, 0x2, V507]

================================

Block 0x5cd
[0x5cd:0x5d2]
---
Predecessors: [0x5bc]
Successors: [0x5d3, 0x5d8]
---
0x5cd JUMPDEST
0x5ce EQ
0x5cf PUSH2 0x5d8
0x5d2 JUMPI
---
0x5cd: JUMPDEST 
0x5ce: V512 = EQ V507 0x2
0x5cf: V513 = 0x5d8
0x5d2: JUMPI 0x5d8 V512
---
Entry stack: [V12, 0x11c, 0x0, V592, S5, S4, {0xde, 0x3aa}, 0x2, 0x2, V507]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S5, S4, {0xde, 0x3aa}, 0x2]

================================

Block 0x5d3
[0x5d3:0x5d7]
---
Predecessors: [0x5cd]
Successors: []
---
0x5d3 PUSH1 0x0
0x5d5 PUSH1 0x0
0x5d7 REVERT
---
0x5d3: V514 = 0x0
0x5d5: V515 = 0x0
0x5d7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]

================================

Block 0x5d8
[0x5d8:0x608]
---
Predecessors: [0x5cd]
Successors: [0x609, 0x60e]
---
0x5d8 JUMPDEST
0x5d9 PUSH1 0xb
0x5db SLOAD
0x5dc PUSH1 0x40
0x5de MLOAD
0x5df PUSH1 0x1
0x5e1 PUSH1 0xa0
0x5e3 PUSH1 0x2
0x5e5 EXP
0x5e6 SUB
0x5e7 SWAP2
0x5e8 DUP3
0x5e9 AND
0x5ea SWAP2
0x5eb ADDRESS
0x5ec AND
0x5ed BALANCE
0x5ee DUP1
0x5ef ISZERO
0x5f0 PUSH2 0x8fc
0x5f3 MUL
0x5f4 SWAP2
0x5f5 PUSH1 0x0
0x5f7 DUP2
0x5f8 DUP2
0x5f9 DUP2
0x5fa DUP6
0x5fb DUP9
0x5fc DUP9
0x5fd CALL
0x5fe SWAP4
0x5ff POP
0x600 POP
0x601 POP
0x602 POP
0x603 ISZERO
0x604 ISZERO
0x605 PUSH2 0x60e
0x608 JUMPI
---
0x5d8: JUMPDEST 
0x5d9: V516 = 0xb
0x5db: V517 = S[0xb]
0x5dc: V518 = 0x40
0x5de: V519 = M[0x40]
0x5df: V520 = 0x1
0x5e1: V521 = 0xa0
0x5e3: V522 = 0x2
0x5e5: V523 = EXP 0x2 0xa0
0x5e6: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e9: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x5eb: V526 = ADDRESS
0x5ec: V527 = AND V526 0xffffffffffffffffffffffffffffffffffffffff
0x5ed: V528 = BALANCE V527
0x5ef: V529 = ISZERO V528
0x5f0: V530 = 0x8fc
0x5f3: V531 = MUL 0x8fc V529
0x5f5: V532 = 0x0
0x5fd: V533 = CALL V531 V525 V528 V519 0x0 V519 0x0
0x603: V534 = ISZERO V533
0x604: V535 = ISZERO V534
0x605: V536 = 0x60e
0x608: JUMPI 0x60e V535
---
Entry stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]

================================

Block 0x609
[0x609:0x60d]
---
Predecessors: [0x5d8]
Successors: []
---
0x609 PUSH1 0x0
0x60b PUSH1 0x0
0x60d REVERT
---
0x609: V537 = 0x0
0x60b: V538 = 0x0
0x60d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]

================================

Block 0x60e
[0x60e:0x61d]
---
Predecessors: [0x5d8]
Successors: [0x61e]
---
0x60e JUMPDEST
0x60f PUSH1 0x0
0x611 DUP1
0x612 SLOAD
0x613 PUSH1 0x3
0x615 SWAP2
0x616 SWAP1
0x617 PUSH1 0xff
0x619 NOT
0x61a AND
0x61b PUSH1 0x1
0x61d DUP4
---
0x60e: JUMPDEST 
0x60f: V539 = 0x0
0x612: V540 = S[0x0]
0x613: V541 = 0x3
0x617: V542 = 0xff
0x619: V543 = NOT 0xff
0x61a: V544 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V540
0x61b: V545 = 0x1
---
Entry stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]
Stack pops: 0
Stack additions: [0x3, 0x0, V544, 0x1, 0x3]
Exit stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2, 0x3, 0x0, V544, 0x1, 0x3]

================================

Block 0x61e
[0x61e:0x667]
---
Predecessors: [0x60e]
Successors: [0x668]
---
0x61e JUMPDEST
0x61f MUL
0x620 OR
0x621 SWAP1
0x622 SSTORE
0x623 POP
0x624 PUSH1 0x0
0x626 PUSH1 0x3
0x628 SSTORE
0x629 PUSH1 0xb
0x62b SLOAD
0x62c PUSH1 0x40
0x62e DUP1
0x62f MLOAD
0x630 PUSH1 0x1
0x632 PUSH1 0xa0
0x634 PUSH1 0x2
0x636 EXP
0x637 SUB
0x638 SWAP1
0x639 SWAP3
0x63a AND
0x63b DUP3
0x63c MSTORE
0x63d MLOAD
0x63e PUSH32 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x65f SWAP2
0x660 DUP2
0x661 SWAP1
0x662 SUB
0x663 PUSH1 0x20
0x665 ADD
0x666 SWAP1
0x667 LOG1
---
0x61e: JUMPDEST 
0x61f: V546 = MUL 0x3 0x1
0x620: V547 = OR 0x3 V544
0x622: S[0x0] = V547
0x624: V548 = 0x0
0x626: V549 = 0x3
0x628: S[0x3] = 0x0
0x629: V550 = 0xb
0x62b: V551 = S[0xb]
0x62c: V552 = 0x40
0x62f: V553 = M[0x40]
0x630: V554 = 0x1
0x632: V555 = 0xa0
0x634: V556 = 0x2
0x636: V557 = EXP 0x2 0xa0
0x637: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63a: V559 = AND V551 0xffffffffffffffffffffffffffffffffffffffff
0x63c: M[V553] = V559
0x63d: V560 = M[0x40]
0x63e: V561 = 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x662: V562 = SUB V553 V560
0x663: V563 = 0x20
0x665: V564 = ADD 0x20 V562
0x667: LOG V560 V564 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
---
Entry stack: [V12, 0x11c, 0x0, V592, S8, S7, {0xde, 0x3aa}, 0x2, 0x3, 0x0, V544, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S8, S7, {0xde, 0x3aa}, 0x2]

================================

Block 0x668
[0x668:0x668]
---
Predecessors: [0x61e]
Successors: [0x669]
---
0x668 JUMPDEST
---
0x668: JUMPDEST 
---
Entry stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]

================================

Block 0x669
[0x669:0x66b]
---
Predecessors: [0x668]
Successors: [0xde, 0x3aa]
---
0x669 JUMPDEST
0x66a POP
0x66b JUMP
---
0x669: JUMPDEST 
0x66b: JUMP {0xde, 0x3aa}
---
Entry stack: [V12, 0x11c, 0x0, V592, S3, S2, {0xde, 0x3aa}, 0x2]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, S3, S2]

================================

Block 0x66c
[0x66c:0x671]
---
Predecessors: [0x292]
Successors: [0x11c]
---
0x66c JUMPDEST
0x66d PUSH1 0x2
0x66f SLOAD
0x670 DUP2
0x671 JUMP
---
0x66c: JUMPDEST 
0x66d: V565 = 0x2
0x66f: V566 = S[0x2]
0x671: JUMP 0x11c
---
Entry stack: [V12, 0x11c]
Stack pops: 1
Stack additions: [S0, V566]
Exit stack: [V12, 0x11c, V566]

================================

Block 0x672
[0x672:0x677]
---
Predecessors: [0x2b4]
Successors: [0x11c]
---
0x672 JUMPDEST
0x673 PUSH1 0x3
0x675 SLOAD
0x676 DUP2
0x677 JUMP
---
0x672: JUMPDEST 
0x673: V567 = 0x3
0x675: V568 = S[0x3]
0x677: JUMP 0x11c
---
Entry stack: [V12, 0x11c]
Stack pops: 1
Stack additions: [S0, V568]
Exit stack: [V12, 0x11c, V568]

================================

Block 0x678
[0x678:0x67d]
---
Predecessors: [0x2ce]
Successors: [0x67e]
---
0x678 JUMPDEST
0x679 PUSH1 0x0
0x67b DUP1
0x67c DUP1
0x67d DUP1
---
0x678: JUMPDEST 
0x679: V569 = 0x0
---
Entry stack: [V12, 0x11c]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x11c, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x67e
[0x67e:0x68d]
---
Predecessors: [0x678]
Successors: [0x68e, 0x68f]
---
0x67e JUMPDEST
0x67f PUSH1 0x0
0x681 SLOAD
0x682 PUSH1 0xff
0x684 AND
0x685 PUSH1 0x3
0x687 DUP2
0x688 GT
0x689 ISZERO
0x68a PUSH2 0x68f
0x68d JUMPI
---
0x67e: JUMPDEST 
0x67f: V570 = 0x0
0x681: V571 = S[0x0]
0x682: V572 = 0xff
0x684: V573 = AND 0xff V571
0x685: V574 = 0x3
0x688: V575 = GT V573 0x3
0x689: V576 = ISZERO V575
0x68a: V577 = 0x68f
0x68d: JUMPI 0x68f V576
---
Entry stack: [V12, 0x11c, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V573]
Exit stack: [V12, 0x11c, 0x0, 0x0, 0x0, 0x0, V573]

================================

Block 0x68e
[0x68e:0x68e]
---
Predecessors: [0x67e]
Successors: []
---
0x68e INVALID
---
0x68e: INVALID 
---
Entry stack: [V12, 0x11c, 0x0, 0x0, 0x0, 0x0, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, 0x0, 0x0, 0x0, V573]

================================

Block 0x68f
[0x68f:0x694]
---
Predecessors: [0x67e]
Successors: [0x695, 0x69a]
---
0x68f JUMPDEST
0x690 EQ
0x691 PUSH2 0x69a
0x694 JUMPI
---
0x68f: JUMPDEST 
0x690: V578 = EQ V573 0x0
0x691: V579 = 0x69a
0x694: JUMPI 0x69a V578
---
Entry stack: [V12, 0x11c, 0x0, 0x0, 0x0, 0x0, V573]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, 0x0, 0x0]

================================

Block 0x695
[0x695:0x699]
---
Predecessors: [0x68f]
Successors: []
---
0x695 PUSH1 0x0
0x697 PUSH1 0x0
0x699 REVERT
---
0x695: V580 = 0x0
0x697: V581 = 0x0
0x699: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11c, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, 0x0, 0x0]

================================

Block 0x69a
[0x69a:0x6a4]
---
Predecessors: [0x68f]
Successors: [0x6a5, 0x6aa]
---
0x69a JUMPDEST
0x69b PUSH1 0x6
0x69d SLOAD
0x69e CALLVALUE
0x69f LT
0x6a0 ISZERO
0x6a1 PUSH2 0x6aa
0x6a4 JUMPI
---
0x69a: JUMPDEST 
0x69b: V582 = 0x6
0x69d: V583 = S[0x6]
0x69e: V584 = CALLVALUE
0x69f: V585 = LT V584 V583
0x6a0: V586 = ISZERO V585
0x6a1: V587 = 0x6aa
0x6a4: JUMPI 0x6aa V586
---
Entry stack: [V12, 0x11c, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, 0x0, 0x0]

================================

Block 0x6a5
[0x6a5:0x6a9]
---
Predecessors: [0x69a]
Successors: []
---
0x6a5 PUSH1 0x0
0x6a7 PUSH1 0x0
0x6a9 REVERT
---
0x6a5: V588 = 0x0
0x6a7: V589 = 0x0
0x6a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11c, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, 0x0, 0x0]

================================

Block 0x6aa
[0x6aa:0x6bd]
---
Predecessors: [0x69a]
Successors: [0x92d]
---
0x6aa JUMPDEST
0x6ab PUSH1 0x1
0x6ad DUP1
0x6ae SLOAD
0x6af CALLVALUE
0x6b0 SWAP4
0x6b1 POP
0x6b2 DUP1
0x6b3 DUP3
0x6b4 ADD
0x6b5 PUSH2 0x6be
0x6b8 DUP4
0x6b9 DUP3
0x6ba PUSH2 0x92d
0x6bd JUMP
---
0x6aa: JUMPDEST 
0x6ab: V590 = 0x1
0x6ae: V591 = S[0x1]
0x6af: V592 = CALLVALUE
0x6b4: V593 = ADD 0x1 V591
0x6b5: V594 = 0x6be
0x6ba: V595 = 0x92d
0x6bd: JUMP 0x92d
---
Entry stack: [V12, 0x11c, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V592, S0, 0x1, V591, V593, 0x6be, 0x1, V593]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593]

================================

Block 0x6be
[0x6be:0x6ce]
---
Predecessors: [0x95a]
Successors: [0x6cf]
---
0x6be JUMPDEST
0x6bf SWAP2
0x6c0 PUSH1 0x0
0x6c2 MSTORE
0x6c3 PUSH1 0x20
0x6c5 PUSH1 0x0
0x6c7 SHA3
0x6c8 SWAP1
0x6c9 PUSH1 0x2
0x6cb MUL
0x6cc ADD
0x6cd PUSH1 0x0
---
0x6be: JUMPDEST 
0x6c0: V596 = 0x0
0x6c2: M[0x0] = 0x1
0x6c3: V597 = 0x20
0x6c5: V598 = 0x0
0x6c7: V599 = SHA3 0x0 0x20
0x6c9: V600 = 0x2
0x6cb: V601 = MUL 0x2 V591
0x6cc: V602 = ADD V601 V599
0x6cd: V603 = 0x0
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593]
Stack pops: 3
Stack additions: [S0, V602, 0x0]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V593, V602, 0x0]

================================

Block 0x6cf
[0x6cf:0x72d]
---
Predecessors: [0x6be]
Successors: [0x72e, 0x7c0]
---
0x6cf JUMPDEST
0x6d0 POP
0x6d1 PUSH1 0x40
0x6d3 DUP1
0x6d4 MLOAD
0x6d5 DUP1
0x6d6 DUP3
0x6d7 ADD
0x6d8 SWAP1
0x6d9 SWAP2
0x6da MSTORE
0x6db CALLVALUE
0x6dc DUP1
0x6dd DUP3
0x6de MSTORE
0x6df PUSH1 0x1
0x6e1 PUSH1 0xa0
0x6e3 PUSH1 0x2
0x6e5 EXP
0x6e6 SUB
0x6e7 CALLER
0x6e8 AND
0x6e9 PUSH1 0x20
0x6eb SWAP1
0x6ec SWAP3
0x6ed ADD
0x6ee DUP3
0x6ef SWAP1
0x6f0 MSTORE
0x6f1 DUP1
0x6f2 DUP4
0x6f3 SSTORE
0x6f4 PUSH1 0x1
0x6f6 SWAP1
0x6f7 SWAP3
0x6f8 ADD
0x6f9 DUP1
0x6fa SLOAD
0x6fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x710 NOT
0x711 AND
0x712 SWAP1
0x713 SWAP2
0x714 OR
0x715 SWAP1
0x716 SSTORE
0x717 PUSH1 0x2
0x719 DUP1
0x71a SLOAD
0x71b SWAP1
0x71c SWAP2
0x71d ADD
0x71e SWAP1
0x71f DUP2
0x720 SWAP1
0x721 SSTORE
0x722 PUSH1 0x3
0x724 SSTORE
0x725 POP
0x726 PUSH1 0x8
0x728 SLOAD
0x729 ISZERO
0x72a PUSH2 0x7c0
0x72d JUMPI
---
0x6cf: JUMPDEST 
0x6d1: V604 = 0x40
0x6d4: V605 = M[0x40]
0x6d7: V606 = ADD 0x40 V605
0x6da: M[0x40] = V606
0x6db: V607 = CALLVALUE
0x6de: M[V605] = V607
0x6df: V608 = 0x1
0x6e1: V609 = 0xa0
0x6e3: V610 = 0x2
0x6e5: V611 = EXP 0x2 0xa0
0x6e6: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e7: V613 = CALLER
0x6e8: V614 = AND V613 0xffffffffffffffffffffffffffffffffffffffff
0x6e9: V615 = 0x20
0x6ed: V616 = ADD V605 0x20
0x6f0: M[V616] = V614
0x6f3: S[V602] = V607
0x6f4: V617 = 0x1
0x6f8: V618 = ADD V602 0x1
0x6fa: V619 = S[V618]
0x6fb: V620 = 0xffffffffffffffffffffffffffffffffffffffff
0x710: V621 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x711: V622 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V619
0x714: V623 = OR V614 V622
0x716: S[V618] = V623
0x717: V624 = 0x2
0x71a: V625 = S[0x2]
0x71d: V626 = ADD V607 V625
0x721: S[0x2] = V626
0x722: V627 = 0x3
0x724: S[0x3] = V626
0x726: V628 = 0x8
0x728: V629 = S[0x8]
0x729: V630 = ISZERO V629
0x72a: V631 = 0x7c0
0x72d: JUMPI 0x7c0 V630
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V593, V602, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0]

================================

Block 0x72e
[0x72e:0x759]
---
Predecessors: [0x6cf]
Successors: [0x75a, 0x75b]
---
0x72e PUSH1 0x9
0x730 SLOAD
0x731 PUSH1 0x6
0x733 SLOAD
0x734 PUSH1 0x1
0x736 PUSH1 0xa0
0x738 PUSH1 0x2
0x73a EXP
0x73b SUB
0x73c SWAP1
0x73d SWAP2
0x73e AND
0x73f SWAP1
0x740 PUSH4 0xa9059cbb
0x745 SWAP1
0x746 CALLER
0x747 SWAP1
0x748 PUSH8 0xde0b6b3a7640000
0x751 DUP7
0x752 MUL
0x753 DUP2
0x754 ISZERO
0x755 ISZERO
0x756 PUSH2 0x75b
0x759 JUMPI
---
0x72e: V632 = 0x9
0x730: V633 = S[0x9]
0x731: V634 = 0x6
0x733: V635 = S[0x6]
0x734: V636 = 0x1
0x736: V637 = 0xa0
0x738: V638 = 0x2
0x73a: V639 = EXP 0x2 0xa0
0x73b: V640 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73e: V641 = AND V633 0xffffffffffffffffffffffffffffffffffffffff
0x740: V642 = 0xa9059cbb
0x746: V643 = CALLER
0x748: V644 = 0xde0b6b3a7640000
0x752: V645 = MUL V592 0xde0b6b3a7640000
0x754: V646 = ISZERO V635
0x755: V647 = ISZERO V646
0x756: V648 = 0x75b
0x759: JUMPI 0x75b V647
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V641, 0xa9059cbb, V643, V635, V645]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V643, V635, V645]

================================

Block 0x75a
[0x75a:0x75a]
---
Predecessors: [0x72e]
Successors: []
---
0x75a INVALID
---
0x75a: INVALID 
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V643, V635, V645]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V643, V635, V645]

================================

Block 0x75b
[0x75b:0x7a8]
---
Predecessors: [0x72e]
Successors: [0x7a9, 0x7aa]
---
0x75b JUMPDEST
0x75c DIV
0x75d PUSH1 0x40
0x75f MLOAD
0x760 DUP4
0x761 PUSH4 0xffffffff
0x766 AND
0x767 PUSH1 0xe0
0x769 PUSH1 0x2
0x76b EXP
0x76c MUL
0x76d DUP2
0x76e MSTORE
0x76f PUSH1 0x4
0x771 ADD
0x772 DUP1
0x773 DUP4
0x774 PUSH1 0x1
0x776 PUSH1 0xa0
0x778 PUSH1 0x2
0x77a EXP
0x77b SUB
0x77c AND
0x77d PUSH1 0x1
0x77f PUSH1 0xa0
0x781 PUSH1 0x2
0x783 EXP
0x784 SUB
0x785 AND
0x786 DUP2
0x787 MSTORE
0x788 PUSH1 0x20
0x78a ADD
0x78b DUP3
0x78c DUP2
0x78d MSTORE
0x78e PUSH1 0x20
0x790 ADD
0x791 SWAP3
0x792 POP
0x793 POP
0x794 POP
0x795 PUSH1 0x0
0x797 PUSH1 0x40
0x799 MLOAD
0x79a DUP1
0x79b DUP4
0x79c SUB
0x79d DUP2
0x79e PUSH1 0x0
0x7a0 DUP8
0x7a1 DUP1
0x7a2 EXTCODESIZE
0x7a3 ISZERO
0x7a4 ISZERO
0x7a5 PUSH2 0x7aa
0x7a8 JUMPI
---
0x75b: JUMPDEST 
0x75c: V649 = DIV V645 V635
0x75d: V650 = 0x40
0x75f: V651 = M[0x40]
0x761: V652 = 0xffffffff
0x766: V653 = AND 0xffffffff 0xa9059cbb
0x767: V654 = 0xe0
0x769: V655 = 0x2
0x76b: V656 = EXP 0x2 0xe0
0x76c: V657 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x76e: M[V651] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x76f: V658 = 0x4
0x771: V659 = ADD 0x4 V651
0x774: V660 = 0x1
0x776: V661 = 0xa0
0x778: V662 = 0x2
0x77a: V663 = EXP 0x2 0xa0
0x77b: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77c: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0x77d: V666 = 0x1
0x77f: V667 = 0xa0
0x781: V668 = 0x2
0x783: V669 = EXP 0x2 0xa0
0x784: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x785: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x787: M[V659] = V671
0x788: V672 = 0x20
0x78a: V673 = ADD 0x20 V659
0x78d: M[V673] = V649
0x78e: V674 = 0x20
0x790: V675 = ADD 0x20 V673
0x795: V676 = 0x0
0x797: V677 = 0x40
0x799: V678 = M[0x40]
0x79c: V679 = SUB V675 V678
0x79e: V680 = 0x0
0x7a2: V681 = EXTCODESIZE V641
0x7a3: V682 = ISZERO V681
0x7a4: V683 = ISZERO V682
0x7a5: V684 = 0x7aa
0x7a8: JUMPI 0x7aa V683
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V643, V635, V645]
Stack pops: 5
Stack additions: [S4, S3, V675, 0x0, V678, V679, V678, 0x0, S4]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V675, 0x0, V678, V679, V678, 0x0, V641]

================================

Block 0x7a9
[0x7a9:0x7a9]
---
Predecessors: [0x75b]
Successors: []
---
0x7a9 INVALID
---
0x7a9: INVALID 
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V675, 0x0, V678, V679, V678, 0x0, V641]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V675, 0x0, V678, V679, V678, 0x0, V641]

================================

Block 0x7aa
[0x7aa:0x7b6]
---
Predecessors: [0x75b]
Successors: [0x7b7, 0x7b8]
---
0x7aa JUMPDEST
0x7ab PUSH2 0x2c6
0x7ae GAS
0x7af SUB
0x7b0 CALL
0x7b1 ISZERO
0x7b2 ISZERO
0x7b3 PUSH2 0x7b8
0x7b6 JUMPI
---
0x7aa: JUMPDEST 
0x7ab: V685 = 0x2c6
0x7ae: V686 = GAS
0x7af: V687 = SUB V686 0x2c6
0x7b0: V688 = CALL V687 V641 0x0 V678 V679 V678 0x0
0x7b1: V689 = ISZERO V688
0x7b2: V690 = ISZERO V689
0x7b3: V691 = 0x7b8
0x7b6: JUMPI 0x7b8 V690
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V675, 0x0, V678, V679, V678, 0x0, V641]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V675]

================================

Block 0x7b7
[0x7b7:0x7b7]
---
Predecessors: [0x7aa]
Successors: []
---
0x7b7 INVALID
---
0x7b7: INVALID 
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V675]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V675]

================================

Block 0x7b8
[0x7b8:0x7bf]
---
Predecessors: [0x7aa]
Successors: [0x84f]
---
0x7b8 JUMPDEST
0x7b9 POP
0x7ba POP
0x7bb POP
0x7bc PUSH2 0x84f
0x7bf JUMP
---
0x7b8: JUMPDEST 
0x7bc: V692 = 0x84f
0x7bf: JUMP 0x84f
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V641, 0xa9059cbb, V675]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0]

================================

Block 0x7c0
[0x7c0:0x7ec]
---
Predecessors: [0x6cf]
Successors: [0x7ed, 0x7ee]
---
0x7c0 JUMPDEST
0x7c1 PUSH1 0x9
0x7c3 SLOAD
0x7c4 PUSH1 0x6
0x7c6 SLOAD
0x7c7 PUSH1 0x1
0x7c9 PUSH1 0xa0
0x7cb PUSH1 0x2
0x7cd EXP
0x7ce SUB
0x7cf SWAP1
0x7d0 SWAP2
0x7d1 AND
0x7d2 SWAP1
0x7d3 PUSH4 0x79c65068
0x7d8 SWAP1
0x7d9 CALLER
0x7da SWAP1
0x7db PUSH8 0xde0b6b3a7640000
0x7e4 DUP7
0x7e5 MUL
0x7e6 DUP2
0x7e7 ISZERO
0x7e8 ISZERO
0x7e9 PUSH2 0x7ee
0x7ec JUMPI
---
0x7c0: JUMPDEST 
0x7c1: V693 = 0x9
0x7c3: V694 = S[0x9]
0x7c4: V695 = 0x6
0x7c6: V696 = S[0x6]
0x7c7: V697 = 0x1
0x7c9: V698 = 0xa0
0x7cb: V699 = 0x2
0x7cd: V700 = EXP 0x2 0xa0
0x7ce: V701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d1: V702 = AND V694 0xffffffffffffffffffffffffffffffffffffffff
0x7d3: V703 = 0x79c65068
0x7d9: V704 = CALLER
0x7db: V705 = 0xde0b6b3a7640000
0x7e5: V706 = MUL V592 0xde0b6b3a7640000
0x7e7: V707 = ISZERO V696
0x7e8: V708 = ISZERO V707
0x7e9: V709 = 0x7ee
0x7ec: JUMPI 0x7ee V708
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V702, 0x79c65068, V704, V696, V706]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V704, V696, V706]

================================

Block 0x7ed
[0x7ed:0x7ed]
---
Predecessors: [0x7c0]
Successors: []
---
0x7ed INVALID
---
0x7ed: INVALID 
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V704, V696, V706]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V704, V696, V706]

================================

Block 0x7ee
[0x7ee:0x83b]
---
Predecessors: [0x7c0]
Successors: [0x83c, 0x83d]
---
0x7ee JUMPDEST
0x7ef DIV
0x7f0 PUSH1 0x40
0x7f2 MLOAD
0x7f3 DUP4
0x7f4 PUSH4 0xffffffff
0x7f9 AND
0x7fa PUSH1 0xe0
0x7fc PUSH1 0x2
0x7fe EXP
0x7ff MUL
0x800 DUP2
0x801 MSTORE
0x802 PUSH1 0x4
0x804 ADD
0x805 DUP1
0x806 DUP4
0x807 PUSH1 0x1
0x809 PUSH1 0xa0
0x80b PUSH1 0x2
0x80d EXP
0x80e SUB
0x80f AND
0x810 PUSH1 0x1
0x812 PUSH1 0xa0
0x814 PUSH1 0x2
0x816 EXP
0x817 SUB
0x818 AND
0x819 DUP2
0x81a MSTORE
0x81b PUSH1 0x20
0x81d ADD
0x81e DUP3
0x81f DUP2
0x820 MSTORE
0x821 PUSH1 0x20
0x823 ADD
0x824 SWAP3
0x825 POP
0x826 POP
0x827 POP
0x828 PUSH1 0x0
0x82a PUSH1 0x40
0x82c MLOAD
0x82d DUP1
0x82e DUP4
0x82f SUB
0x830 DUP2
0x831 PUSH1 0x0
0x833 DUP8
0x834 DUP1
0x835 EXTCODESIZE
0x836 ISZERO
0x837 ISZERO
0x838 PUSH2 0x83d
0x83b JUMPI
---
0x7ee: JUMPDEST 
0x7ef: V710 = DIV V706 V696
0x7f0: V711 = 0x40
0x7f2: V712 = M[0x40]
0x7f4: V713 = 0xffffffff
0x7f9: V714 = AND 0xffffffff 0x79c65068
0x7fa: V715 = 0xe0
0x7fc: V716 = 0x2
0x7fe: V717 = EXP 0x2 0xe0
0x7ff: V718 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x79c65068
0x801: M[V712] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x802: V719 = 0x4
0x804: V720 = ADD 0x4 V712
0x807: V721 = 0x1
0x809: V722 = 0xa0
0x80b: V723 = 0x2
0x80d: V724 = EXP 0x2 0xa0
0x80e: V725 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80f: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0x810: V727 = 0x1
0x812: V728 = 0xa0
0x814: V729 = 0x2
0x816: V730 = EXP 0x2 0xa0
0x817: V731 = SUB 0x10000000000000000000000000000000000000000 0x1
0x818: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff V726
0x81a: M[V720] = V732
0x81b: V733 = 0x20
0x81d: V734 = ADD 0x20 V720
0x820: M[V734] = V710
0x821: V735 = 0x20
0x823: V736 = ADD 0x20 V734
0x828: V737 = 0x0
0x82a: V738 = 0x40
0x82c: V739 = M[0x40]
0x82f: V740 = SUB V736 V739
0x831: V741 = 0x0
0x835: V742 = EXTCODESIZE V702
0x836: V743 = ISZERO V742
0x837: V744 = ISZERO V743
0x838: V745 = 0x83d
0x83b: JUMPI 0x83d V744
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V704, V696, V706]
Stack pops: 5
Stack additions: [S4, S3, V736, 0x0, V739, V740, V739, 0x0, S4]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V736, 0x0, V739, V740, V739, 0x0, V702]

================================

Block 0x83c
[0x83c:0x83c]
---
Predecessors: [0x7ee]
Successors: []
---
0x83c INVALID
---
0x83c: INVALID 
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V736, 0x0, V739, V740, V739, 0x0, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V736, 0x0, V739, V740, V739, 0x0, V702]

================================

Block 0x83d
[0x83d:0x849]
---
Predecessors: [0x7ee]
Successors: [0x84a, 0x84b]
---
0x83d JUMPDEST
0x83e PUSH2 0x2c6
0x841 GAS
0x842 SUB
0x843 CALL
0x844 ISZERO
0x845 ISZERO
0x846 PUSH2 0x84b
0x849 JUMPI
---
0x83d: JUMPDEST 
0x83e: V746 = 0x2c6
0x841: V747 = GAS
0x842: V748 = SUB V747 0x2c6
0x843: V749 = CALL V748 V702 0x0 V739 V740 V739 0x0
0x844: V750 = ISZERO V749
0x845: V751 = ISZERO V750
0x846: V752 = 0x84b
0x849: JUMPI 0x84b V751
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V736, 0x0, V739, V740, V739, 0x0, V702]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V736]

================================

Block 0x84a
[0x84a:0x84a]
---
Predecessors: [0x83d]
Successors: []
---
0x84a INVALID
---
0x84a: INVALID 
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V736]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V736]

================================

Block 0x84b
[0x84b:0x84e]
---
Predecessors: [0x83d]
Successors: [0x84f]
---
0x84b JUMPDEST
0x84c POP
0x84d POP
0x84e POP
---
0x84b: JUMPDEST 
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, V702, 0x79c65068, V736]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0]

================================

Block 0x84f
[0x84f:0x8a1]
---
Predecessors: [0x7b8, 0x84b]
Successors: [0x33f]
---
0x84f JUMPDEST
0x850 PUSH1 0x2
0x852 SLOAD
0x853 PUSH1 0x40
0x855 DUP1
0x856 MLOAD
0x857 PUSH1 0x1
0x859 PUSH1 0xa0
0x85b PUSH1 0x2
0x85d EXP
0x85e SUB
0x85f CALLER
0x860 AND
0x861 DUP2
0x862 MSTORE
0x863 CALLVALUE
0x864 PUSH1 0x20
0x866 DUP3
0x867 ADD
0x868 MSTORE
0x869 DUP1
0x86a DUP3
0x86b ADD
0x86c SWAP3
0x86d SWAP1
0x86e SWAP3
0x86f MSTORE
0x870 MLOAD
0x871 PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x892 SWAP2
0x893 DUP2
0x894 SWAP1
0x895 SUB
0x896 PUSH1 0x60
0x898 ADD
0x899 SWAP1
0x89a LOG1
0x89b PUSH2 0x8a2
0x89e PUSH2 0x33f
0x8a1 JUMP
---
0x84f: JUMPDEST 
0x850: V753 = 0x2
0x852: V754 = S[0x2]
0x853: V755 = 0x40
0x856: V756 = M[0x40]
0x857: V757 = 0x1
0x859: V758 = 0xa0
0x85b: V759 = 0x2
0x85d: V760 = EXP 0x2 0xa0
0x85e: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85f: V762 = CALLER
0x860: V763 = AND V762 0xffffffffffffffffffffffffffffffffffffffff
0x862: M[V756] = V763
0x863: V764 = CALLVALUE
0x864: V765 = 0x20
0x867: V766 = ADD V756 0x20
0x868: M[V766] = V764
0x86b: V767 = ADD 0x40 V756
0x86f: M[V767] = V754
0x870: V768 = M[0x40]
0x871: V769 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x895: V770 = SUB V756 V768
0x896: V771 = 0x60
0x898: V772 = ADD 0x60 V770
0x89a: LOG V768 V772 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x89b: V773 = 0x8a2
0x89e: V774 = 0x33f
0x8a1: JUMP 0x33f
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0]
Stack pops: 0
Stack additions: [0x8a2]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x8a2]

================================

Block 0x8a2
[0x8a2:0x8ab]
---
Predecessors: [0xdc, 0x443]
Successors: [0x8ac]
---
0x8a2 JUMPDEST
0x8a3 PUSH1 0x1
0x8a5 SLOAD
0x8a6 PUSH1 0x0
0x8a8 NOT
0x8a9 ADD
0x8aa SWAP3
0x8ab POP
---
0x8a2: JUMPDEST 
0x8a3: V775 = 0x1
0x8a5: V776 = S[0x1]
0x8a6: V777 = 0x0
0x8a8: V778 = NOT 0x0
0x8a9: V779 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V776
---
Entry stack: [V12, 0x11c, 0x0, V592, S0]
Stack pops: 3
Stack additions: [V779, S1, S0]
Exit stack: [V12, 0x11c, V779, V592, S0]

================================

Block 0x8ac
[0x8ac:0x8ac]
---
Predecessors: [0x8a2]
Successors: [0x8ad]
---
0x8ac JUMPDEST
---
0x8ac: JUMPDEST 
---
Entry stack: [V12, 0x11c, V779, V592, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, V779, V592, S0]

================================

Block 0x8ad
[0x8ad:0x8ad]
---
Predecessors: [0x8ac]
Successors: [0x8ae]
---
0x8ad JUMPDEST
---
0x8ad: JUMPDEST 
---
Entry stack: [V12, 0x11c, V779, V592, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, V779, V592, S0]

================================

Block 0x8ae
[0x8ae:0x8b2]
---
Predecessors: [0x8ad]
Successors: [0x11c]
---
0x8ae JUMPDEST
0x8af POP
0x8b0 POP
0x8b1 SWAP1
0x8b2 JUMP
---
0x8ae: JUMPDEST 
0x8b2: JUMP 0x11c
---
Entry stack: [V12, 0x11c, V779, V592, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, V779]

================================

Block 0x8b3
[0x8b3:0x8c9]
---
Predecessors: [0x2f0]
Successors: [0x8ca, 0x8cf]
---
0x8b3 JUMPDEST
0x8b4 PUSH1 0xa
0x8b6 SLOAD
0x8b7 CALLER
0x8b8 PUSH1 0x1
0x8ba PUSH1 0xa0
0x8bc PUSH1 0x2
0x8be EXP
0x8bf SUB
0x8c0 SWAP1
0x8c1 DUP2
0x8c2 AND
0x8c3 SWAP2
0x8c4 AND
0x8c5 EQ
0x8c6 PUSH2 0x8cf
0x8c9 JUMPI
---
0x8b3: JUMPDEST 
0x8b4: V780 = 0xa
0x8b6: V781 = S[0xa]
0x8b7: V782 = CALLER
0x8b8: V783 = 0x1
0x8ba: V784 = 0xa0
0x8bc: V785 = 0x2
0x8be: V786 = EXP 0x2 0xa0
0x8bf: V787 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c2: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V782
0x8c4: V789 = AND V781 0xffffffffffffffffffffffffffffffffffffffff
0x8c5: V790 = EQ V789 V788
0x8c6: V791 = 0x8cf
0x8c9: JUMPI 0x8cf V790
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x8ca
[0x8ca:0x8ce]
---
Predecessors: [0x8b3]
Successors: []
---
0x8ca PUSH1 0x0
0x8cc PUSH1 0x0
0x8ce REVERT
---
0x8ca: V792 = 0x0
0x8cc: V793 = 0x0
0x8ce: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x8cf
[0x8cf:0x8d1]
---
Predecessors: [0x8b3]
Successors: [0x8d2]
---
0x8cf JUMPDEST
0x8d0 PUSH1 0x1
---
0x8cf: JUMPDEST 
0x8d0: V794 = 0x1
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0xde, 0x1]

================================

Block 0x8d2
[0x8d2:0x8e1]
---
Predecessors: [0x8cf]
Successors: [0x8e2, 0x8e3]
---
0x8d2 JUMPDEST
0x8d3 PUSH1 0x0
0x8d5 SLOAD
0x8d6 PUSH1 0xff
0x8d8 AND
0x8d9 PUSH1 0x3
0x8db DUP2
0x8dc GT
0x8dd ISZERO
0x8de PUSH2 0x8e3
0x8e1 JUMPI
---
0x8d2: JUMPDEST 
0x8d3: V795 = 0x0
0x8d5: V796 = S[0x0]
0x8d6: V797 = 0xff
0x8d8: V798 = AND 0xff V796
0x8d9: V799 = 0x3
0x8dc: V800 = GT V798 0x3
0x8dd: V801 = ISZERO V800
0x8de: V802 = 0x8e3
0x8e1: JUMPI 0x8e3 V801
---
Entry stack: [V12, 0xde, 0x1]
Stack pops: 0
Stack additions: [V798]
Exit stack: [V12, 0xde, 0x1, V798]

================================

Block 0x8e2
[0x8e2:0x8e2]
---
Predecessors: [0x8d2]
Successors: []
---
0x8e2 INVALID
---
0x8e2: INVALID 
---
Entry stack: [V12, 0xde, 0x1, V798]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, 0x1, V798]

================================

Block 0x8e3
[0x8e3:0x8e9]
---
Predecessors: [0x8d2]
Successors: [0x8ea, 0x900]
---
0x8e3 JUMPDEST
0x8e4 EQ
0x8e5 DUP1
0x8e6 PUSH2 0x900
0x8e9 JUMPI
---
0x8e3: JUMPDEST 
0x8e4: V803 = EQ V798 0x1
0x8e6: V804 = 0x900
0x8e9: JUMPI 0x900 V803
---
Entry stack: [V12, 0xde, 0x1, V798]
Stack pops: 2
Stack additions: [V803]
Exit stack: [V12, 0xde, V803]

================================

Block 0x8ea
[0x8ea:0x8ec]
---
Predecessors: [0x8e3]
Successors: [0x8ed]
---
0x8ea POP
0x8eb PUSH1 0x2
---
0x8eb: V805 = 0x2
---
Entry stack: [V12, 0xde, V803]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V12, 0xde, 0x2]

================================

Block 0x8ed
[0x8ed:0x8fc]
---
Predecessors: [0x8ea]
Successors: [0x8fd, 0x8fe]
---
0x8ed JUMPDEST
0x8ee PUSH1 0x0
0x8f0 SLOAD
0x8f1 PUSH1 0xff
0x8f3 AND
0x8f4 PUSH1 0x3
0x8f6 DUP2
0x8f7 GT
0x8f8 ISZERO
0x8f9 PUSH2 0x8fe
0x8fc JUMPI
---
0x8ed: JUMPDEST 
0x8ee: V806 = 0x0
0x8f0: V807 = S[0x0]
0x8f1: V808 = 0xff
0x8f3: V809 = AND 0xff V807
0x8f4: V810 = 0x3
0x8f7: V811 = GT V809 0x3
0x8f8: V812 = ISZERO V811
0x8f9: V813 = 0x8fe
0x8fc: JUMPI 0x8fe V812
---
Entry stack: [V12, 0xde, 0x2]
Stack pops: 0
Stack additions: [V809]
Exit stack: [V12, 0xde, 0x2, V809]

================================

Block 0x8fd
[0x8fd:0x8fd]
---
Predecessors: [0x8ed]
Successors: []
---
0x8fd INVALID
---
0x8fd: INVALID 
---
Entry stack: [V12, 0xde, 0x2, V809]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, 0x2, V809]

================================

Block 0x8fe
[0x8fe:0x8ff]
---
Predecessors: [0x8ed]
Successors: [0x900]
---
0x8fe JUMPDEST
0x8ff EQ
---
0x8fe: JUMPDEST 
0x8ff: V814 = EQ V809 0x2
---
Entry stack: [V12, 0xde, 0x2, V809]
Stack pops: 2
Stack additions: [V814]
Exit stack: [V12, 0xde, V814]

================================

Block 0x900
[0x900:0x906]
---
Predecessors: [0x8e3, 0x8fe]
Successors: [0x907, 0x911]
---
0x900 JUMPDEST
0x901 DUP1
0x902 ISZERO
0x903 PUSH2 0x911
0x906 JUMPI
---
0x900: JUMPDEST 
0x902: V815 = ISZERO S0
0x903: V816 = 0x911
0x906: JUMPI 0x911 V815
---
Entry stack: [V12, 0xde, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, S0]

================================

Block 0x907
[0x907:0x910]
---
Predecessors: [0x900]
Successors: [0x911]
---
0x907 POP
0x908 TIMESTAMP
0x909 PUSH1 0x5
0x90b SLOAD
0x90c PUSH2 0xe10
0x90f ADD
0x910 LT
---
0x908: V817 = TIMESTAMP
0x909: V818 = 0x5
0x90b: V819 = S[0x5]
0x90c: V820 = 0xe10
0x90f: V821 = ADD 0xe10 V819
0x910: V822 = LT V821 V817
---
Entry stack: [V12, 0xde, S0]
Stack pops: 1
Stack additions: [V822]
Exit stack: [V12, 0xde, V822]

================================

Block 0x911
[0x911:0x917]
---
Predecessors: [0x900, 0x907]
Successors: [0x918, 0x91d]
---
0x911 JUMPDEST
0x912 ISZERO
0x913 ISZERO
0x914 PUSH2 0x91d
0x917 JUMPI
---
0x911: JUMPDEST 
0x912: V823 = ISZERO S0
0x913: V824 = ISZERO V823
0x914: V825 = 0x91d
0x917: JUMPI 0x91d V824
---
Entry stack: [V12, 0xde, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x918
[0x918:0x91c]
---
Predecessors: [0x911]
Successors: []
---
0x918 PUSH1 0x0
0x91a PUSH1 0x0
0x91c REVERT
---
0x918: V826 = 0x0
0x91a: V827 = 0x0
0x91c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x91d
[0x91d:0x928]
---
Predecessors: [0x911]
Successors: []
---
0x91d JUMPDEST
0x91e CALLER
0x91f PUSH1 0x1
0x921 PUSH1 0xa0
0x923 PUSH1 0x2
0x925 EXP
0x926 SUB
0x927 AND
0x928 SELFDESTRUCT
---
0x91d: JUMPDEST 
0x91e: V828 = CALLER
0x91f: V829 = 0x1
0x921: V830 = 0xa0
0x923: V831 = 0x2
0x925: V832 = EXP 0x2 0xa0
0x926: V833 = SUB 0x10000000000000000000000000000000000000000 0x1
0x927: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V828
0x928: SELFDESTRUCT V834
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x929
[0x929:0x929]
---
Predecessors: []
Successors: [0x92a]
---
0x929 JUMPDEST
---
0x929: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x92a
[0x92a:0x92a]
---
Predecessors: [0x929]
Successors: [0x92b]
---
0x92a JUMPDEST
---
0x92a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x92b
[0x92b:0x92c]
---
Predecessors: [0x92a]
Successors: []
Has unresolved jump.
---
0x92b JUMPDEST
0x92c JUMP
---
0x92b: JUMPDEST 
0x92c: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x92d
[0x92d:0x93a]
---
Predecessors: [0x6aa]
Successors: [0x93b, 0x959]
---
0x92d JUMPDEST
0x92e DUP2
0x92f SLOAD
0x930 DUP2
0x931 DUP4
0x932 SSTORE
0x933 DUP2
0x934 DUP2
0x935 ISZERO
0x936 GT
0x937 PUSH2 0x959
0x93a JUMPI
---
0x92d: JUMPDEST 
0x92f: V835 = S[0x1]
0x932: S[0x1] = V593
0x935: V836 = ISZERO V835
0x936: V837 = GT V836 V593
0x937: V838 = 0x959
0x93a: JUMPI 0x959 V837
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593]
Stack pops: 2
Stack additions: [S1, S0, V835]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, V835]

================================

Block 0x93b
[0x93b:0x958]
---
Predecessors: [0x92d]
Successors: [0x95f]
---
0x93b PUSH1 0x2
0x93d MUL
0x93e DUP2
0x93f PUSH1 0x2
0x941 MUL
0x942 DUP4
0x943 PUSH1 0x0
0x945 MSTORE
0x946 PUSH1 0x20
0x948 PUSH1 0x0
0x94a SHA3
0x94b SWAP2
0x94c DUP3
0x94d ADD
0x94e SWAP2
0x94f ADD
0x950 PUSH2 0x959
0x953 SWAP2
0x954 SWAP1
0x955 PUSH2 0x95f
0x958 JUMP
---
0x93b: V839 = 0x2
0x93d: V840 = MUL 0x2 V835
0x93f: V841 = 0x2
0x941: V842 = MUL 0x2 V593
0x943: V843 = 0x0
0x945: M[0x0] = 0x1
0x946: V844 = 0x20
0x948: V845 = 0x0
0x94a: V846 = SHA3 0x0 0x20
0x94d: V847 = ADD V846 V840
0x94f: V848 = ADD V846 V842
0x950: V849 = 0x959
0x955: V850 = 0x95f
0x958: JUMP 0x95f
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, V835]
Stack pops: 3
Stack additions: [S2, S1, 0x959, V847, V848]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, V847, V848]

================================

Block 0x959
[0x959:0x959]
---
Predecessors: [0x92d, 0x99c]
Successors: [0x95a]
---
0x959 JUMPDEST
---
0x959: JUMPDEST 
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, S0]

================================

Block 0x95a
[0x95a:0x95e]
---
Predecessors: [0x959]
Successors: [0x6be]
---
0x95a JUMPDEST
0x95b POP
0x95c POP
0x95d POP
0x95e JUMP
---
0x95a: JUMPDEST 
0x95e: JUMP 0x6be
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593]

================================

Block 0x95f
[0x95f:0x964]
---
Predecessors: [0x93b]
Successors: [0x965]
---
0x95f JUMPDEST
0x960 PUSH2 0x99c
0x963 SWAP2
0x964 SWAP1
---
0x95f: JUMPDEST 
0x960: V851 = 0x99c
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, V847, V848]
Stack pops: 2
Stack additions: [0x99c, S1, S0]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, 0x99c, V847, V848]

================================

Block 0x965
[0x965:0x96d]
---
Predecessors: [0x95f, 0x96e]
Successors: [0x96e, 0x998]
---
0x965 JUMPDEST
0x966 DUP1
0x967 DUP3
0x968 GT
0x969 ISZERO
0x96a PUSH2 0x998
0x96d JUMPI
---
0x965: JUMPDEST 
0x968: V852 = GT V847 S0
0x969: V853 = ISZERO V852
0x96a: V854 = 0x998
0x96d: JUMPI 0x998 V853
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, 0x99c, V847, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, 0x99c, V847, S0]

================================

Block 0x96e
[0x96e:0x997]
---
Predecessors: [0x965]
Successors: [0x965]
---
0x96e PUSH1 0x0
0x970 DUP2
0x971 SSTORE
0x972 PUSH1 0x1
0x974 DUP2
0x975 ADD
0x976 DUP1
0x977 SLOAD
0x978 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98d NOT
0x98e AND
0x98f SWAP1
0x990 SSTORE
0x991 PUSH1 0x2
0x993 ADD
0x994 PUSH2 0x965
0x997 JUMP
---
0x96e: V855 = 0x0
0x971: S[S0] = 0x0
0x972: V856 = 0x1
0x975: V857 = ADD S0 0x1
0x977: V858 = S[V857]
0x978: V859 = 0xffffffffffffffffffffffffffffffffffffffff
0x98d: V860 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x98e: V861 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V858
0x990: S[V857] = V861
0x991: V862 = 0x2
0x993: V863 = ADD 0x2 S0
0x994: V864 = 0x965
0x997: JUMP 0x965
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, 0x99c, V847, S0]
Stack pops: 1
Stack additions: [V863]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, 0x99c, V847, V863]

================================

Block 0x998
[0x998:0x99b]
---
Predecessors: [0x965]
Successors: [0x99c]
---
0x998 JUMPDEST
0x999 POP
0x99a SWAP1
0x99b JUMP
---
0x998: JUMPDEST 
0x99b: JUMP 0x99c
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, 0x99c, V847, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, V847]

================================

Block 0x99c
[0x99c:0x99e]
---
Predecessors: [0x998]
Successors: [0x959]
---
0x99c JUMPDEST
0x99d SWAP1
0x99e JUMP
---
0x99c: JUMPDEST 
0x99e: JUMP 0x959
---
Entry stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, 0x959, V847]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x11c, 0x0, V592, 0x0, 0x1, V591, V593, 0x6be, 0x1, V593, V847]

================================

Block 0x99f
[0x99f:0x9ca]
---
Predecessors: []
Successors: []
---
0x99f STOP
0x9a0 LOG1
0x9a1 PUSH6 0x627a7a723058
0x9a8 SHA3
0x9a9 PC
0x9aa DUP7
0x9ab DUP11
0x9ac MISSING 0xd2
0x9ad NUMBER
0x9ae PUSH6 0x5957b3713fd9
0x9b5 SMOD
0x9b6 DIV
0x9b7 PUSH17 0x79c76bf3c4ff537cbcc010ed9d26a60343
0x9c9 STOP
0x9ca MISSING 0x29
---
0x99f: STOP 
0x9a0: LOG S0 S1 S2
0x9a1: V865 = 0x627a7a723058
0x9a8: V866 = SHA3 0x627a7a723058 S3
0x9a9: V867 = PC
0x9ac: MISSING 0xd2
0x9ad: V868 = NUMBER
0x9ae: V869 = 0x5957b3713fd9
0x9b5: V870 = SMOD 0x5957b3713fd9 V868
0x9b6: V871 = DIV V870 S0
0x9b7: V872 = 0x79c76bf3c4ff537cbcc010ed9d26a60343
0x9c9: STOP 
0x9ca: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, S8, V867, V866, S4, S5, S6, S7, S8, S9, S10, S11, 0x79c76bf3c4ff537cbcc010ed9d26a60343, V871]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xe0
Exit block: 0xf0
Body: 0xe0, 0xe7, 0xe8, 0xf0, 0x2fa

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x10c
Exit block: 0x11c
Body: 0x10c, 0x113, 0x114, 0x11c, 0x309

Function 2:
Public function signature: 0x38771242
Entry block: 0x12e
Exit block: 0x11c
Body: 0x11c, 0x12e, 0x135, 0x136, 0x30f

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x150
Exit block: 0xf0
Body: 0xf0, 0x150, 0x157, 0x158, 0x315

Function 4:
Public function signature: 0x3c8da588
Entry block: 0x17c
Exit block: 0x11c
Body: 0x11c, 0x17c, 0x183, 0x184, 0x324

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x19e
Exit block: 0xf0
Body: 0xf0, 0x19e, 0x1a5, 0x1a6, 0x32a

Function 6:
Public function signature: 0x71ae8f02
Entry block: 0x1ca
Exit block: 0x11c
Body: 0x11c, 0x1ca, 0x1d1, 0x1d2, 0x339

Function 7:
Public function signature: 0x86f32586
Entry block: 0x1ec
Exit block: 0xde
Body: 0xde, 0x1ec, 0x1f3, 0x1f4

Function 8:
Public function signature: 0xaa367664
Entry block: 0x1fe
Exit block: 0x11c
Body: 0x11c, 0x1fe, 0x205, 0x206, 0x445

Function 9:
Public function signature: 0xb2d5ae44
Entry block: 0x220
Exit block: 0x562
Body: 0x220, 0x227, 0x228, 0x230, 0x44b, 0x453, 0x463, 0x464, 0x46a, 0x46f, 0x474, 0x47e, 0x495, 0x496, 0x4a7, 0x4bc, 0x4c8, 0x4c9, 0x4da, 0x4ef, 0x4f0, 0x501, 0x510, 0x511, 0x522, 0x554, 0x562, 0x563, 0x574, 0x57f, 0x58e, 0x597, 0x598, 0x5a3, 0x5a8, 0x5a9

Function 10:
Public function signature: 0xc19d93fb
Entry block: 0x244
Exit block: 0x264
Body: 0x244, 0x24b, 0x24c, 0x254, 0x263, 0x264, 0x5af

Function 11:
Public function signature: 0xc2052403
Entry block: 0x278
Exit block: 0xde
Body: 0xde, 0x278, 0x27f, 0x280

Function 12:
Public function signature: 0xc5c4744c
Entry block: 0x28a
Exit block: 0x11c
Body: 0x11c, 0x28a, 0x291, 0x292, 0x66c

Function 13:
Public function signature: 0xce845d1d
Entry block: 0x2ac
Exit block: 0x11c
Body: 0x11c, 0x2ac, 0x2b3, 0x2b4, 0x672

Function 14:
Public function signature: 0xd7bb99ba
Entry block: 0x2ce
Exit block: 0x11c
Body: 0x11c, 0x2ce, 0x678, 0x67e, 0x68e, 0x68f, 0x695, 0x69a, 0x6a5, 0x6aa, 0x6be, 0x6cf, 0x72e, 0x75a, 0x75b, 0x7a9, 0x7aa, 0x7b7, 0x7b8, 0x7c0, 0x7ed, 0x7ee, 0x83c, 0x83d, 0x84a, 0x84b, 0x84f, 0x8a2, 0x8ac, 0x8ad, 0x8ae, 0x92d, 0x93b, 0x959, 0x95a, 0x95f, 0x965, 0x96e, 0x998, 0x99c

Function 15:
Public function signature: 0xfe389e09
Entry block: 0x2e8
Exit block: 0x91d
Body: 0x2e8, 0x2ef, 0x2f0, 0x8b3, 0x8ca, 0x8cf, 0x8d2, 0x8e2, 0x8e3, 0x8ea, 0x8ed, 0x8fd, 0x8fe, 0x900, 0x907, 0x911, 0x918, 0x91d

Function 16:
Public fallback function
Entry block: 0xca
Exit block: 0xd6
Body: 0xca, 0xd1, 0xd2, 0xd6

Function 17:
Private function
Entry block: 0x33f
Exit block: 0x443
Body: 0xdc, 0x33f, 0x34b, 0x353, 0x359, 0x368, 0x368, 0x3aa, 0x3b3, 0x3be, 0x3c9, 0x427, 0x436, 0x440, 0x441, 0x442, 0x443

Function 18:
Private function
Entry block: 0x5b8
Exit block: 0x669
Body: 0x5b8, 0x5bc, 0x5cd, 0x5d8, 0x60e, 0x61e, 0x668, 0x669

