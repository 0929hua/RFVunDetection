Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x2a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x2a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x2a
0xa: JUMPI 0x2a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x8b]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x8abb9845
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x8b
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x8abb9845
0x1a: V12 = EQ V10 0x8abb9845
0x1b: V13 = 0x8b
0x1e: JUMPI 0x8b V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x9e]
---
0x1f DUP1
0x20 PUSH4 0xefb98bcf
0x25 EQ
0x26 PUSH2 0x9e
0x29 JUMPI
---
0x20: V14 = 0xefb98bcf
0x25: V15 = EQ 0xefb98bcf V10
0x26: V16 = 0x9e
0x29: JUMPI 0x9e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x3e]
---
Predecessors: [0x0, 0x1f]
Successors: [0x3f, 0xc7]
---
0x2a JUMPDEST
0x2b PUSH2 0xc2
0x2e PUSH1 0x4
0x30 SLOAD
0x31 PUSH1 0x2
0x33 SLOAD
0x34 PUSH1 0x0
0x36 SWAP2
0x37 ADD
0x38 TIMESTAMP
0x39 GT
0x3a ISZERO
0x3b PUSH2 0xc7
0x3e JUMPI
---
0x2a: JUMPDEST 
0x2b: V17 = 0xc2
0x2e: V18 = 0x4
0x30: V19 = S[0x4]
0x31: V20 = 0x2
0x33: V21 = S[0x2]
0x34: V22 = 0x0
0x37: V23 = ADD V19 V21
0x38: V24 = TIMESTAMP
0x39: V25 = GT V24 V23
0x3a: V26 = ISZERO V25
0x3b: V27 = 0xc7
0x3e: JUMPI 0xc7 V26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc2, 0x0]
Exit stack: [V10, 0xc2, 0x0]

================================

Block 0x3f
[0x3f:0x8a]
---
Predecessors: [0x2a]
Successors: [0xf4]
---
0x3f DUP1
0x40 SLOAD
0x41 PUSH1 0x1
0x43 PUSH1 0xa0
0x45 PUSH1 0x2
0x47 EXP
0x48 SUB
0x49 ADDRESS
0x4a DUP2
0x4b AND
0x4c BALANCE
0x4d SWAP3
0x4e SWAP2
0x4f AND
0x50 SWAP1
0x51 PUSH1 0xa
0x53 DUP4
0x54 DIV
0x55 PUSH1 0x60
0x57 DUP3
0x58 DUP2
0x59 DUP2
0x5a DUP2
0x5b DUP6
0x5c DUP9
0x5d DUP4
0x5e CALL
0x5f POP
0x60 POP
0x61 PUSH1 0x1
0x63 SLOAD
0x64 PUSH1 0x40
0x66 MLOAD
0x67 PUSH1 0x1
0x69 PUSH1 0xa0
0x6b PUSH1 0x2
0x6d EXP
0x6e SUB
0x6f SWAP2
0x70 SWAP1
0x71 SWAP2
0x72 AND
0x73 SWAP4
0x74 POP
0x75 SWAP1
0x76 DUP5
0x77 SUB
0x78 SWAP1
0x79 DUP3
0x7a DUP2
0x7b DUP2
0x7c DUP2
0x7d DUP6
0x7e DUP9
0x7f DUP4
0x80 CALL
0x81 SWAP4
0x82 POP
0x83 POP
0x84 POP
0x85 POP
0x86 POP
0x87 PUSH2 0xf4
0x8a JUMP
---
0x40: V28 = S[0x0]
0x41: V29 = 0x1
0x43: V30 = 0xa0
0x45: V31 = 0x2
0x47: V32 = EXP 0x2 0xa0
0x48: V33 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49: V34 = ADDRESS
0x4b: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x4c: V36 = BALANCE V35
0x4f: V37 = AND V28 0xffffffffffffffffffffffffffffffffffffffff
0x51: V38 = 0xa
0x54: V39 = DIV V36 0xa
0x55: V40 = 0x60
0x5e: V41 = CALL 0x0 V37 V39 0x60 0x0 0x60 0x0
0x61: V42 = 0x1
0x63: V43 = S[0x1]
0x64: V44 = 0x40
0x66: V45 = M[0x40]
0x67: V46 = 0x1
0x69: V47 = 0xa0
0x6b: V48 = 0x2
0x6d: V49 = EXP 0x2 0xa0
0x6e: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x77: V52 = SUB V36 V39
0x80: V53 = CALL 0x0 V51 V52 V45 0x0 V45 0x0
0x87: V54 = 0xf4
0x8a: JUMP 0xf4
---
Entry stack: [V10, 0xc2, 0x0]
Stack pops: 1
Stack additions: [V36]
Exit stack: [V10, 0xc2, V36]

================================

Block 0x8b
[0x8b:0x9a]
---
Predecessors: [0xb]
Successors: [0x9b]
---
0x8b JUMPDEST
0x8c PUSH2 0x10e
0x8f PUSH1 0x0
0x91 SLOAD
0x92 PUSH1 0x1
0x94 PUSH1 0xa0
0x96 PUSH1 0x2
0x98 EXP
0x99 SUB
0x9a AND
---
0x8b: JUMPDEST 
0x8c: V55 = 0x10e
0x8f: V56 = 0x0
0x91: V57 = S[0x0]
0x92: V58 = 0x1
0x94: V59 = 0xa0
0x96: V60 = 0x2
0x98: V61 = EXP 0x2 0xa0
0x99: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10e, V63]
Exit stack: [V10, 0x10e, V63]

================================

Block 0x9b
[0x9b:0x9d]
---
Predecessors: [0x8b, 0xb3, 0x12b]
Successors: [0x10e, 0x121]
---
0x9b JUMPDEST
0x9c SWAP1
0x9d JUMP
---
0x9b: JUMPDEST 
0x9d: JUMP {0x10e, 0x121}
---
Entry stack: [V10, {0x10e, 0x121}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x9e
[0x9e:0xb2]
---
Predecessors: [0x1f]
Successors: [0xb3, 0x12b]
---
0x9e JUMPDEST
0x9f PUSH2 0x121
0xa2 PUSH1 0x4
0xa4 SLOAD
0xa5 PUSH1 0x2
0xa7 SLOAD
0xa8 PUSH1 0x0
0xaa SWAP2
0xab ADD
0xac TIMESTAMP
0xad GT
0xae ISZERO
0xaf PUSH2 0x12b
0xb2 JUMPI
---
0x9e: JUMPDEST 
0x9f: V64 = 0x121
0xa2: V65 = 0x4
0xa4: V66 = S[0x4]
0xa5: V67 = 0x2
0xa7: V68 = S[0x2]
0xa8: V69 = 0x0
0xab: V70 = ADD V66 V68
0xac: V71 = TIMESTAMP
0xad: V72 = GT V71 V70
0xae: V73 = ISZERO V72
0xaf: V74 = 0x12b
0xb2: JUMPI 0x12b V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x121, 0x0]
Exit stack: [V10, 0x121, 0x0]

================================

Block 0xb3
[0xb3:0xc1]
---
Predecessors: [0x9e]
Successors: [0x9b]
---
0xb3 POP
0xb4 PUSH1 0x4
0xb6 SLOAD
0xb7 PUSH1 0x2
0xb9 SLOAD
0xba TIMESTAMP
0xbb SWAP2
0xbc ADD
0xbd SUB
0xbe PUSH2 0x9b
0xc1 JUMP
---
0xb4: V75 = 0x4
0xb6: V76 = S[0x4]
0xb7: V77 = 0x2
0xb9: V78 = S[0x2]
0xba: V79 = TIMESTAMP
0xbc: V80 = ADD V76 V78
0xbd: V81 = SUB V80 V79
0xbe: V82 = 0x9b
0xc1: JUMP 0x9b
---
Entry stack: [V10, 0x121, 0x0]
Stack pops: 1
Stack additions: [V81]
Exit stack: [V10, 0x121, V81]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: [0xc4]
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xc6]
---
Predecessors: [0xf4]
Successors: [0xc2]
---
0xc4 JUMPDEST
0xc5 POP
0xc6 JUMP
---
0xc4: JUMPDEST 
0xc6: JUMP 0xc2
---
Entry stack: [V10, 0xc2, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xc7
[0xc7:0xd0]
---
Predecessors: [0x2a]
Successors: [0xd1, 0xf4]
---
0xc7 JUMPDEST
0xc8 PUSH1 0x3
0xca SLOAD
0xcb CALLVALUE
0xcc LT
0xcd PUSH2 0xf4
0xd0 JUMPI
---
0xc7: JUMPDEST 
0xc8: V83 = 0x3
0xca: V84 = S[0x3]
0xcb: V85 = CALLVALUE
0xcc: V86 = LT V85 V84
0xcd: V87 = 0xf4
0xd0: JUMPI 0xf4 V86
---
Entry stack: [V10, 0xc2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc2, 0x0]

================================

Block 0xd1
[0xd1:0xf3]
---
Predecessors: [0xc7]
Successors: [0xf4]
---
0xd1 PUSH1 0x1
0xd3 DUP1
0xd4 SLOAD
0xd5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea NOT
0xeb AND
0xec CALLER
0xed OR
0xee SWAP1
0xef SSTORE
0xf0 TIMESTAMP
0xf1 PUSH1 0x2
0xf3 SSTORE
---
0xd1: V88 = 0x1
0xd4: V89 = S[0x1]
0xd5: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0xea: V91 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V92 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V89
0xec: V93 = CALLER
0xed: V94 = OR V93 V92
0xef: S[0x1] = V94
0xf0: V95 = TIMESTAMP
0xf1: V96 = 0x2
0xf3: S[0x2] = V95
---
Entry stack: [V10, 0xc2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc2, 0x0]

================================

Block 0xf4
[0xf4:0x102]
---
Predecessors: [0x3f, 0xc7, 0xd1]
Successors: [0xc4, 0x103]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 PUSH6 0x6fde2b4eb000
0xfd EQ
0xfe ISZERO
0xff PUSH2 0xc4
0x102 JUMPI
---
0xf4: JUMPDEST 
0xf5: V97 = CALLVALUE
0xf6: V98 = 0x6fde2b4eb000
0xfd: V99 = EQ 0x6fde2b4eb000 V97
0xfe: V100 = ISZERO V99
0xff: V101 = 0xc4
0x102: JUMPI 0xc4 V100
---
Entry stack: [V10, 0xc2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc2, S0]

================================

Block 0x103
[0x103:0x10d]
---
Predecessors: [0xf4]
Successors: []
---
0x103 CALLER
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c AND
0x10d SELFDESTRUCT
---
0x103: V102 = CALLER
0x104: V103 = 0x1
0x106: V104 = 0xa0
0x108: V105 = 0x2
0x10a: V106 = EXP 0x2 0xa0
0x10b: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x10d: SELFDESTRUCT V108
---
Entry stack: [V10, 0xc2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc2, S0]

================================

Block 0x10e
[0x10e:0x120]
---
Predecessors: [0x9b]
Successors: []
---
0x10e JUMPDEST
0x10f PUSH1 0x1
0x111 PUSH1 0xa0
0x113 PUSH1 0x2
0x115 EXP
0x116 SUB
0x117 AND
0x118 PUSH1 0x60
0x11a SWAP1
0x11b DUP2
0x11c MSTORE
0x11d PUSH1 0x20
0x11f SWAP1
0x120 RETURN
---
0x10e: JUMPDEST 
0x10f: V109 = 0x1
0x111: V110 = 0xa0
0x113: V111 = 0x2
0x115: V112 = EXP 0x2 0xa0
0x116: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x117: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x118: V115 = 0x60
0x11c: M[0x60] = V114
0x11d: V116 = 0x20
0x120: RETURN 0x60 0x20
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x121
[0x121:0x12a]
---
Predecessors: [0x9b]
Successors: []
---
0x121 JUMPDEST
0x122 PUSH1 0x60
0x124 SWAP1
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 SWAP1
0x12a RETURN
---
0x121: JUMPDEST 
0x122: V117 = 0x60
0x126: M[0x60] = S0
0x127: V118 = 0x20
0x12a: RETURN 0x60 0x20
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x12f]
---
Predecessors: [0x9e]
Successors: [0x9b]
---
0x12b JUMPDEST
0x12c PUSH2 0x9b
0x12f JUMP
---
0x12b: JUMPDEST 
0x12c: V119 = 0x9b
0x12f: JUMP 0x9b
---
Entry stack: [V10, 0x121, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x121, 0x0]

================================

Function 0:
Public function signature: 0x8abb9845
Entry block: 0x8b
Exit block: 0x121
Body: 0x8b, 0x9b, 0x10e, 0x121

Function 1:
Public function signature: 0xefb98bcf
Entry block: 0x9e
Exit block: 0x121
Body: 0x9b, 0x9e, 0xb3, 0x10e, 0x121, 0x12b

Function 2:
Public fallback function
Entry block: 0x2a
Exit block: 0xc2
Body: 0x2a, 0x3f, 0xc2, 0xc4, 0xc7, 0xd1, 0xf4, 0x103

