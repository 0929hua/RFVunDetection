args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/1/100125.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x96]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x96
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x96
0xa: JUMPI 0x96 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1d4]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1d4
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x1d4
0x3d: JUMPI 0x1d4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1e9]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x1e9
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x1e9
0x48: JUMPI 0x1e9 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x20e]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x20e
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x20e
0x53: JUMPI 0x20e V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x23d]
---
0x54 DUP1
0x55 PUSH4 0x6e66f6e9
0x5a EQ
0x5b PUSH2 0x23d
0x5e JUMPI
---
0x55: V20 = 0x6e66f6e9
0x5a: V21 = EQ 0x6e66f6e9 V10
0x5b: V22 = 0x23d
0x5e: JUMPI 0x23d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x26c]
---
0x5f DUP1
0x60 PUSH4 0x70a08231
0x65 EQ
0x66 PUSH2 0x26c
0x69 JUMPI
---
0x60: V23 = 0x70a08231
0x65: V24 = EQ 0x70a08231 V10
0x66: V25 = 0x26c
0x69: JUMPI 0x26c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x29d]
---
0x6a DUP1
0x6b PUSH4 0x7a3a0e84
0x70 EQ
0x71 PUSH2 0x29d
0x74 JUMPI
---
0x6b: V26 = 0x7a3a0e84
0x70: V27 = EQ 0x7a3a0e84 V10
0x71: V28 = 0x29d
0x74: JUMPI 0x29d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2c2]
---
0x75 DUP1
0x76 PUSH4 0x7b3e5e7b
0x7b EQ
0x7c PUSH2 0x2c2
0x7f JUMPI
---
0x76: V29 = 0x7b3e5e7b
0x7b: V30 = EQ 0x7b3e5e7b V10
0x7c: V31 = 0x2c2
0x7f: JUMPI 0x2c2 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2e7]
---
0x80 DUP1
0x81 PUSH4 0xa035b1fe
0x86 EQ
0x87 PUSH2 0x2e7
0x8a JUMPI
---
0x81: V32 = 0xa035b1fe
0x86: V33 = EQ 0xa035b1fe V10
0x87: V34 = 0x2e7
0x8a: JUMPI 0x2e7 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x30c]
---
0x8b DUP1
0x8c PUSH4 0xfd6b7ef8
0x91 EQ
0x92 PUSH2 0x30c
0x95 JUMPI
---
0x8c: V35 = 0xfd6b7ef8
0x91: V36 = EQ 0xfd6b7ef8 V10
0x92: V37 = 0x30c
0x95: JUMPI 0x30c V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x0, 0x8b]
Successors: [0x9a]
---
0x96 JUMPDEST
0x97 PUSH2 0x1d2
---
0x96: JUMPDEST 
0x97: V38 = 0x1d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d2]
Exit stack: [V10, 0x1d2]

================================

Block 0x9a
[0x9a:0xad]
---
Predecessors: [0x96]
Successors: [0xae, 0xb2]
---
0x9a JUMPDEST
0x9b PUSH1 0x7
0x9d SLOAD
0x9e PUSH1 0x0
0xa0 SWAP1
0xa1 PUSH2 0x100
0xa4 SWAP1
0xa5 DIV
0xa6 PUSH1 0xff
0xa8 AND
0xa9 ISZERO
0xaa PUSH2 0xb2
0xad JUMPI
---
0x9a: JUMPDEST 
0x9b: V39 = 0x7
0x9d: V40 = S[0x7]
0x9e: V41 = 0x0
0xa1: V42 = 0x100
0xa5: V43 = DIV V40 0x100
0xa6: V44 = 0xff
0xa8: V45 = AND 0xff V43
0xa9: V46 = ISZERO V45
0xaa: V47 = 0xb2
0xad: JUMPI 0xb2 V46
---
Entry stack: [V10, 0x1d2]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1d2, 0x0]

================================

Block 0xae
[0xae:0xb1]
---
Predecessors: [0x9a]
Successors: []
---
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xae: V48 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1d2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, 0x0]

================================

Block 0xb2
[0xb2:0xf6]
---
Predecessors: [0x9a]
Successors: [0xf7, 0xf8]
---
0xb2 JUMPDEST
0xb3 POP
0xb4 PUSH1 0x1
0xb6 PUSH1 0xa0
0xb8 PUSH1 0x2
0xba EXP
0xbb SUB
0xbc CALLER
0xbd DUP2
0xbe DUP2
0xbf AND
0xc0 PUSH1 0x0
0xc2 SWAP1
0xc3 DUP2
0xc4 MSTORE
0xc5 PUSH1 0x6
0xc7 PUSH1 0x20
0xc9 MSTORE
0xca PUSH1 0x40
0xcc SWAP1
0xcd SHA3
0xce DUP1
0xcf SLOAD
0xd0 CALLVALUE
0xd1 SWAP1
0xd2 DUP2
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP2
0xd6 SSTORE
0xd7 PUSH1 0x2
0xd9 DUP1
0xda SLOAD
0xdb DUP3
0xdc ADD
0xdd SWAP1
0xde SSTORE
0xdf PUSH1 0x5
0xe1 SLOAD
0xe2 PUSH1 0x4
0xe4 SLOAD
0xe5 SWAP2
0xe6 SWAP4
0xe7 AND
0xe8 SWAP2
0xe9 PUSH4 0xa9059cbb
0xee SWAP2
0xef DUP5
0xf0 DUP2
0xf1 ISZERO
0xf2 ISZERO
0xf3 PUSH2 0xf8
0xf6 JUMPI
---
0xb2: JUMPDEST 
0xb4: V49 = 0x1
0xb6: V50 = 0xa0
0xb8: V51 = 0x2
0xba: V52 = EXP 0x2 0xa0
0xbb: V53 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc: V54 = CALLER
0xbf: V55 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V56 = 0x0
0xc4: M[0x0] = V55
0xc5: V57 = 0x6
0xc7: V58 = 0x20
0xc9: M[0x20] = 0x6
0xca: V59 = 0x40
0xcd: V60 = SHA3 0x0 0x40
0xcf: V61 = S[V60]
0xd0: V62 = CALLVALUE
0xd3: V63 = ADD V62 V61
0xd6: S[V60] = V63
0xd7: V64 = 0x2
0xda: V65 = S[0x2]
0xdc: V66 = ADD V62 V65
0xde: S[0x2] = V66
0xdf: V67 = 0x5
0xe1: V68 = S[0x5]
0xe2: V69 = 0x4
0xe4: V70 = S[0x4]
0xe7: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xe9: V72 = 0xa9059cbb
0xf1: V73 = ISZERO V70
0xf2: V74 = ISZERO V73
0xf3: V75 = 0xf8
0xf6: JUMPI 0xf8 V74
---
Entry stack: [V10, 0x1d2, 0x0]
Stack pops: 1
Stack additions: [V62, V71, 0xa9059cbb, V54, V70, V62]
Exit stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V54, V70, V62]

================================

Block 0xf7
[0xf7:0xf7]
---
Predecessors: [0xb2]
Successors: []
---
0xf7 INVALID
---
0xf7: INVALID 
---
Entry stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V54, V70, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V54, V70, V62]

================================

Block 0xf8
[0xf8:0x159]
---
Predecessors: [0xb2]
Successors: [0x15a, 0x15e]
---
0xf8 JUMPDEST
0xf9 DIV
0xfa PUSH1 0x0
0xfc PUSH1 0x40
0xfe MLOAD
0xff PUSH1 0x20
0x101 ADD
0x102 MSTORE
0x103 PUSH1 0x40
0x105 MLOAD
0x106 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x124 PUSH4 0xffffffff
0x129 DUP6
0x12a AND
0x12b MUL
0x12c DUP2
0x12d MSTORE
0x12e PUSH1 0x1
0x130 PUSH1 0xa0
0x132 PUSH1 0x2
0x134 EXP
0x135 SUB
0x136 SWAP1
0x137 SWAP3
0x138 AND
0x139 PUSH1 0x4
0x13b DUP4
0x13c ADD
0x13d MSTORE
0x13e PUSH1 0x24
0x140 DUP3
0x141 ADD
0x142 MSTORE
0x143 PUSH1 0x44
0x145 ADD
0x146 PUSH1 0x20
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP1
0x14c DUP4
0x14d SUB
0x14e DUP2
0x14f PUSH1 0x0
0x151 DUP8
0x152 DUP1
0x153 EXTCODESIZE
0x154 ISZERO
0x155 ISZERO
0x156 PUSH2 0x15e
0x159 JUMPI
---
0xf8: JUMPDEST 
0xf9: V76 = DIV V62 V70
0xfa: V77 = 0x0
0xfc: V78 = 0x40
0xfe: V79 = M[0x40]
0xff: V80 = 0x20
0x101: V81 = ADD 0x20 V79
0x102: M[V81] = 0x0
0x103: V82 = 0x40
0x105: V83 = M[0x40]
0x106: V84 = 0x100000000000000000000000000000000000000000000000000000000
0x124: V85 = 0xffffffff
0x12a: V86 = AND 0xa9059cbb 0xffffffff
0x12b: V87 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x12d: M[V83] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x12e: V88 = 0x1
0x130: V89 = 0xa0
0x132: V90 = 0x2
0x134: V91 = EXP 0x2 0xa0
0x135: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x138: V93 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0x139: V94 = 0x4
0x13c: V95 = ADD V83 0x4
0x13d: M[V95] = V93
0x13e: V96 = 0x24
0x141: V97 = ADD V83 0x24
0x142: M[V97] = V76
0x143: V98 = 0x44
0x145: V99 = ADD 0x44 V83
0x146: V100 = 0x20
0x148: V101 = 0x40
0x14a: V102 = M[0x40]
0x14d: V103 = SUB V99 V102
0x14f: V104 = 0x0
0x153: V105 = EXTCODESIZE V71
0x154: V106 = ISZERO V105
0x155: V107 = ISZERO V106
0x156: V108 = 0x15e
0x159: JUMPI 0x15e V107
---
Entry stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V54, V70, V62]
Stack pops: 5
Stack additions: [S4, S3, V99, 0x20, V102, V103, V102, 0x0, S4]
Exit stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V99, 0x20, V102, V103, V102, 0x0, V71]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0xf8]
Successors: []
---
0x15a PUSH1 0x0
0x15c DUP1
0x15d REVERT
---
0x15a: V109 = 0x0
0x15d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V99, 0x20, V102, V103, V102, 0x0, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V99, 0x20, V102, V103, V102, 0x0, V71]

================================

Block 0x15e
[0x15e:0x16a]
---
Predecessors: [0xf8]
Successors: [0x16b, 0x16f]
---
0x15e JUMPDEST
0x15f PUSH2 0x2c6
0x162 GAS
0x163 SUB
0x164 CALL
0x165 ISZERO
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x15e: JUMPDEST 
0x15f: V110 = 0x2c6
0x162: V111 = GAS
0x163: V112 = SUB V111 0x2c6
0x164: V113 = CALL V112 V71 0x0 V102 V103 V102 0x20
0x165: V114 = ISZERO V113
0x166: V115 = ISZERO V114
0x167: V116 = 0x16f
0x16a: JUMPI 0x16f V115
---
Entry stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V99, 0x20, V102, V103, V102, 0x0, V71]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V99]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x15e]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V117 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V99]

================================

Block 0x16f
[0x16f:0x1ce]
---
Predecessors: [0x15e]
Successors: [0x1cf]
---
0x16f JUMPDEST
0x170 POP
0x171 POP
0x172 POP
0x173 PUSH1 0x40
0x175 MLOAD
0x176 DUP1
0x177 MLOAD
0x178 SWAP1
0x179 POP
0x17a POP
0x17b PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x19c CALLER
0x19d DUP3
0x19e PUSH1 0x1
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab SWAP1
0x1ac SWAP4
0x1ad AND
0x1ae DUP4
0x1af MSTORE
0x1b0 PUSH1 0x20
0x1b2 DUP4
0x1b3 ADD
0x1b4 SWAP2
0x1b5 SWAP1
0x1b6 SWAP2
0x1b7 MSTORE
0x1b8 ISZERO
0x1b9 ISZERO
0x1ba PUSH1 0x40
0x1bc DUP1
0x1bd DUP4
0x1be ADD
0x1bf SWAP2
0x1c0 SWAP1
0x1c1 SWAP2
0x1c2 MSTORE
0x1c3 PUSH1 0x60
0x1c5 SWAP1
0x1c6 SWAP2
0x1c7 ADD
0x1c8 SWAP1
0x1c9 MLOAD
0x1ca DUP1
0x1cb SWAP2
0x1cc SUB
0x1cd SWAP1
0x1ce LOG1
---
0x16f: JUMPDEST 
0x173: V118 = 0x40
0x175: V119 = M[0x40]
0x177: V120 = M[V119]
0x17b: V121 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x19c: V122 = CALLER
0x19e: V123 = 0x1
0x1a0: V124 = 0x40
0x1a2: V125 = M[0x40]
0x1a3: V126 = 0x1
0x1a5: V127 = 0xa0
0x1a7: V128 = 0x2
0x1a9: V129 = EXP 0x2 0xa0
0x1aa: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V131 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x1af: M[V125] = V131
0x1b0: V132 = 0x20
0x1b3: V133 = ADD V125 0x20
0x1b7: M[V133] = V62
0x1b8: V134 = ISZERO 0x1
0x1b9: V135 = ISZERO 0x0
0x1ba: V136 = 0x40
0x1be: V137 = ADD V125 0x40
0x1c2: M[V137] = 0x1
0x1c3: V138 = 0x60
0x1c7: V139 = ADD V125 0x60
0x1c9: V140 = M[0x40]
0x1cc: V141 = SUB V139 V140
0x1ce: LOG V140 V141 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x1d2, V62, V71, 0xa9059cbb, V99]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1d2, V62]

================================

Block 0x1cf
[0x1cf:0x1d1]
---
Predecessors: [0x16f, 0x3f2, 0x4f3, 0x52c]
Successors: [0x1d2]
---
0x1cf JUMPDEST
0x1d0 POP
0x1d1 JUMP
---
0x1cf: JUMPDEST 
0x1d1: JUMP 0x1d2
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d2
[0x1d2:0x1d3]
---
Predecessors: [0x1cf, 0x3a8, 0x5a3]
Successors: []
---
0x1d2 JUMPDEST
0x1d3 STOP
---
0x1d2: JUMPDEST 
0x1d3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d4
[0x1d4:0x1da]
---
Predecessors: [0xb]
Successors: [0x1db, 0x1df]
---
0x1d4 JUMPDEST
0x1d5 CALLVALUE
0x1d6 ISZERO
0x1d7 PUSH2 0x1df
0x1da JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V142 = CALLVALUE
0x1d6: V143 = ISZERO V142
0x1d7: V144 = 0x1df
0x1da: JUMPI 0x1df V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1db
[0x1db:0x1de]
---
Predecessors: [0x1d4]
Successors: []
---
0x1db PUSH1 0x0
0x1dd DUP1
0x1de REVERT
---
0x1db: V145 = 0x0
0x1de: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1df
[0x1df:0x1e6]
---
Predecessors: [0x1d4]
Successors: [0x321]
---
0x1df JUMPDEST
0x1e0 PUSH2 0x1d2
0x1e3 PUSH2 0x321
0x1e6 JUMP
---
0x1df: JUMPDEST 
0x1e0: V146 = 0x1d2
0x1e3: V147 = 0x321
0x1e6: JUMP 0x321
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d2]
Exit stack: [V10, 0x1d2]

================================

Block 0x1e7
[0x1e7:0x1e8]
---
Predecessors: []
Successors: []
---
0x1e7 JUMPDEST
0x1e8 STOP
---
0x1e7: JUMPDEST 
0x1e8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0x3e]
Successors: [0x1f0, 0x1f4]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f4
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V148 = CALLVALUE
0x1eb: V149 = ISZERO V148
0x1ec: V150 = 0x1f4
0x1ef: JUMPI 0x1f4 V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f0
[0x1f0:0x1f3]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 REVERT
---
0x1f0: V151 = 0x0
0x1f3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f4
[0x1f4:0x1fb]
---
Predecessors: [0x1e9]
Successors: [0x3aa]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0x1fc
0x1f8 PUSH2 0x3aa
0x1fb JUMP
---
0x1f4: JUMPDEST 
0x1f5: V152 = 0x1fc
0x1f8: V153 = 0x3aa
0x1fb: JUMP 0x3aa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x1fc
[0x1fc:0x20d]
---
Predecessors: [0x3aa, 0x3ce, 0x3e0, 0x3e6, 0x3ec]
Successors: []
---
0x1fc JUMPDEST
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 SWAP1
0x201 DUP2
0x202 MSTORE
0x203 PUSH1 0x20
0x205 ADD
0x206 PUSH1 0x40
0x208 MLOAD
0x209 DUP1
0x20a SWAP2
0x20b SUB
0x20c SWAP1
0x20d RETURN
---
0x1fc: JUMPDEST 
0x1fd: V154 = 0x40
0x1ff: V155 = M[0x40]
0x202: M[V155] = S0
0x203: V156 = 0x20
0x205: V157 = ADD 0x20 V155
0x206: V158 = 0x40
0x208: V159 = M[0x40]
0x20b: V160 = SUB V157 V159
0x20d: RETURN V159 V160
---
Entry stack: [V10, 0x1fc, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1fc]

================================

Block 0x20e
[0x20e:0x214]
---
Predecessors: [0x49]
Successors: [0x215, 0x219]
---
0x20e JUMPDEST
0x20f CALLVALUE
0x210 ISZERO
0x211 PUSH2 0x219
0x214 JUMPI
---
0x20e: JUMPDEST 
0x20f: V161 = CALLVALUE
0x210: V162 = ISZERO V161
0x211: V163 = 0x219
0x214: JUMPI 0x219 V162
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x20e]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V164 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x219
[0x219:0x220]
---
Predecessors: [0x20e]
Successors: [0x3b0]
---
0x219 JUMPDEST
0x21a PUSH2 0x221
0x21d PUSH2 0x3b0
0x220 JUMP
---
0x219: JUMPDEST 
0x21a: V165 = 0x221
0x21d: V166 = 0x3b0
0x220: JUMP 0x3b0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x221]
Exit stack: [V10, 0x221]

================================

Block 0x221
[0x221:0x23c]
---
Predecessors: [0x3b0, 0x3bf]
Successors: []
---
0x221 JUMPDEST
0x222 PUSH1 0x40
0x224 MLOAD
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d SWAP1
0x22e SWAP2
0x22f AND
0x230 DUP2
0x231 MSTORE
0x232 PUSH1 0x20
0x234 ADD
0x235 PUSH1 0x40
0x237 MLOAD
0x238 DUP1
0x239 SWAP2
0x23a SUB
0x23b SWAP1
0x23c RETURN
---
0x221: JUMPDEST 
0x222: V167 = 0x40
0x224: V168 = M[0x40]
0x225: V169 = 0x1
0x227: V170 = 0xa0
0x229: V171 = 0x2
0x22b: V172 = EXP 0x2 0xa0
0x22c: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V174 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x231: M[V168] = V174
0x232: V175 = 0x20
0x234: V176 = ADD 0x20 V168
0x235: V177 = 0x40
0x237: V178 = M[0x40]
0x23a: V179 = SUB V176 V178
0x23c: RETURN V178 V179
---
Entry stack: [V10, 0x221, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x221]

================================

Block 0x23d
[0x23d:0x243]
---
Predecessors: [0x54]
Successors: [0x244, 0x248]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x23d: JUMPDEST 
0x23e: V180 = CALLVALUE
0x23f: V181 = ISZERO V180
0x240: V182 = 0x248
0x243: JUMPI 0x248 V181
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x23d]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V183 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x248
[0x248:0x24f]
---
Predecessors: [0x23d]
Successors: [0x3bf]
---
0x248 JUMPDEST
0x249 PUSH2 0x221
0x24c PUSH2 0x3bf
0x24f JUMP
---
0x248: JUMPDEST 
0x249: V184 = 0x221
0x24c: V185 = 0x3bf
0x24f: JUMP 0x3bf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x221]
Exit stack: [V10, 0x221]

================================

Block 0x250
[0x250:0x26b]
---
Predecessors: []
Successors: []
---
0x250 JUMPDEST
0x251 PUSH1 0x40
0x253 MLOAD
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c SWAP1
0x25d SWAP2
0x25e AND
0x25f DUP2
0x260 MSTORE
0x261 PUSH1 0x20
0x263 ADD
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 SWAP2
0x269 SUB
0x26a SWAP1
0x26b RETURN
---
0x250: JUMPDEST 
0x251: V186 = 0x40
0x253: V187 = M[0x40]
0x254: V188 = 0x1
0x256: V189 = 0xa0
0x258: V190 = 0x2
0x25a: V191 = EXP 0x2 0xa0
0x25b: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V193 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x260: M[V187] = V193
0x261: V194 = 0x20
0x263: V195 = ADD 0x20 V187
0x264: V196 = 0x40
0x266: V197 = M[0x40]
0x269: V198 = SUB V195 V197
0x26b: RETURN V197 V198
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x26c
[0x26c:0x272]
---
Predecessors: [0x5f]
Successors: [0x273, 0x277]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x26c: JUMPDEST 
0x26d: V199 = CALLVALUE
0x26e: V200 = ISZERO V199
0x26f: V201 = 0x277
0x272: JUMPI 0x277 V200
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x26c]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V202 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x277
[0x277:0x28a]
---
Predecessors: [0x26c]
Successors: [0x3ce]
---
0x277 JUMPDEST
0x278 PUSH2 0x1fc
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 PUSH1 0x4
0x285 CALLDATALOAD
0x286 AND
0x287 PUSH2 0x3ce
0x28a JUMP
---
0x277: JUMPDEST 
0x278: V203 = 0x1fc
0x27b: V204 = 0x1
0x27d: V205 = 0xa0
0x27f: V206 = 0x2
0x281: V207 = EXP 0x2 0xa0
0x282: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x283: V209 = 0x4
0x285: V210 = CALLDATALOAD 0x4
0x286: V211 = AND V210 0xffffffffffffffffffffffffffffffffffffffff
0x287: V212 = 0x3ce
0x28a: JUMP 0x3ce
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc, V211]
Exit stack: [V10, 0x1fc, V211]

================================

Block 0x28b
[0x28b:0x29c]
---
Predecessors: []
Successors: []
---
0x28b JUMPDEST
0x28c PUSH1 0x40
0x28e MLOAD
0x28f SWAP1
0x290 DUP2
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 PUSH1 0x40
0x297 MLOAD
0x298 DUP1
0x299 SWAP2
0x29a SUB
0x29b SWAP1
0x29c RETURN
---
0x28b: JUMPDEST 
0x28c: V213 = 0x40
0x28e: V214 = M[0x40]
0x291: M[V214] = S0
0x292: V215 = 0x20
0x294: V216 = ADD 0x20 V214
0x295: V217 = 0x40
0x297: V218 = M[0x40]
0x29a: V219 = SUB V216 V218
0x29c: RETURN V218 V219
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29d
[0x29d:0x2a3]
---
Predecessors: [0x6a]
Successors: [0x2a4, 0x2a8]
---
0x29d JUMPDEST
0x29e CALLVALUE
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x29d: JUMPDEST 
0x29e: V220 = CALLVALUE
0x29f: V221 = ISZERO V220
0x2a0: V222 = 0x2a8
0x2a3: JUMPI 0x2a8 V221
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x29d]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V223 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a8
[0x2a8:0x2af]
---
Predecessors: [0x29d]
Successors: [0x3e0]
---
0x2a8 JUMPDEST
0x2a9 PUSH2 0x1fc
0x2ac PUSH2 0x3e0
0x2af JUMP
---
0x2a8: JUMPDEST 
0x2a9: V224 = 0x1fc
0x2ac: V225 = 0x3e0
0x2af: JUMP 0x3e0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x2b0
[0x2b0:0x2c1]
---
Predecessors: []
Successors: []
---
0x2b0 JUMPDEST
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be SWAP2
0x2bf SUB
0x2c0 SWAP1
0x2c1 RETURN
---
0x2b0: JUMPDEST 
0x2b1: V226 = 0x40
0x2b3: V227 = M[0x40]
0x2b6: M[V227] = S0
0x2b7: V228 = 0x20
0x2b9: V229 = ADD 0x20 V227
0x2ba: V230 = 0x40
0x2bc: V231 = M[0x40]
0x2bf: V232 = SUB V229 V231
0x2c1: RETURN V231 V232
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c2
[0x2c2:0x2c8]
---
Predecessors: [0x75]
Successors: [0x2c9, 0x2cd]
---
0x2c2 JUMPDEST
0x2c3 CALLVALUE
0x2c4 ISZERO
0x2c5 PUSH2 0x2cd
0x2c8 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V233 = CALLVALUE
0x2c4: V234 = ISZERO V233
0x2c5: V235 = 0x2cd
0x2c8: JUMPI 0x2cd V234
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c9
[0x2c9:0x2cc]
---
Predecessors: [0x2c2]
Successors: []
---
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc REVERT
---
0x2c9: V236 = 0x0
0x2cc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cd
[0x2cd:0x2d4]
---
Predecessors: [0x2c2]
Successors: [0x3e6]
---
0x2cd JUMPDEST
0x2ce PUSH2 0x1fc
0x2d1 PUSH2 0x3e6
0x2d4 JUMP
---
0x2cd: JUMPDEST 
0x2ce: V237 = 0x1fc
0x2d1: V238 = 0x3e6
0x2d4: JUMP 0x3e6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x2d5
[0x2d5:0x2e6]
---
Predecessors: []
Successors: []
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 SWAP1
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x20
0x2de ADD
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 SWAP2
0x2e4 SUB
0x2e5 SWAP1
0x2e6 RETURN
---
0x2d5: JUMPDEST 
0x2d6: V239 = 0x40
0x2d8: V240 = M[0x40]
0x2db: M[V240] = S0
0x2dc: V241 = 0x20
0x2de: V242 = ADD 0x20 V240
0x2df: V243 = 0x40
0x2e1: V244 = M[0x40]
0x2e4: V245 = SUB V242 V244
0x2e6: RETURN V244 V245
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e7
[0x2e7:0x2ed]
---
Predecessors: [0x80]
Successors: [0x2ee, 0x2f2]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V246 = CALLVALUE
0x2e9: V247 = ISZERO V246
0x2ea: V248 = 0x2f2
0x2ed: JUMPI 0x2f2 V247
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V249 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f2
[0x2f2:0x2f9]
---
Predecessors: [0x2e7]
Successors: [0x3ec]
---
0x2f2 JUMPDEST
0x2f3 PUSH2 0x1fc
0x2f6 PUSH2 0x3ec
0x2f9 JUMP
---
0x2f2: JUMPDEST 
0x2f3: V250 = 0x1fc
0x2f6: V251 = 0x3ec
0x2f9: JUMP 0x3ec
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x2fa
[0x2fa:0x30b]
---
Predecessors: []
Successors: []
---
0x2fa JUMPDEST
0x2fb PUSH1 0x40
0x2fd MLOAD
0x2fe SWAP1
0x2ff DUP2
0x300 MSTORE
0x301 PUSH1 0x20
0x303 ADD
0x304 PUSH1 0x40
0x306 MLOAD
0x307 DUP1
0x308 SWAP2
0x309 SUB
0x30a SWAP1
0x30b RETURN
---
0x2fa: JUMPDEST 
0x2fb: V252 = 0x40
0x2fd: V253 = M[0x40]
0x300: M[V253] = S0
0x301: V254 = 0x20
0x303: V255 = ADD 0x20 V253
0x304: V256 = 0x40
0x306: V257 = M[0x40]
0x309: V258 = SUB V255 V257
0x30b: RETURN V257 V258
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30c
[0x30c:0x312]
---
Predecessors: [0x8b]
Successors: [0x313, 0x317]
---
0x30c JUMPDEST
0x30d CALLVALUE
0x30e ISZERO
0x30f PUSH2 0x317
0x312 JUMPI
---
0x30c: JUMPDEST 
0x30d: V259 = CALLVALUE
0x30e: V260 = ISZERO V259
0x30f: V261 = 0x317
0x312: JUMPI 0x317 V260
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x313
[0x313:0x316]
---
Predecessors: [0x30c]
Successors: []
---
0x313 PUSH1 0x0
0x315 DUP1
0x316 REVERT
---
0x313: V262 = 0x0
0x316: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x317
[0x317:0x31e]
---
Predecessors: [0x30c]
Successors: [0x3f2]
---
0x317 JUMPDEST
0x318 PUSH2 0x1d2
0x31b PUSH2 0x3f2
0x31e JUMP
---
0x317: JUMPDEST 
0x318: V263 = 0x1d2
0x31b: V264 = 0x3f2
0x31e: JUMP 0x3f2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d2]
Exit stack: [V10, 0x1d2]

================================

Block 0x31f
[0x31f:0x320]
---
Predecessors: []
Successors: []
---
0x31f JUMPDEST
0x320 STOP
---
0x31f: JUMPDEST 
0x320: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x321
[0x321:0x32a]
---
Predecessors: [0x1df]
Successors: [0x32b, 0x3a6]
---
0x321 JUMPDEST
0x322 PUSH1 0x3
0x324 SLOAD
0x325 TIMESTAMP
0x326 LT
0x327 PUSH2 0x3a6
0x32a JUMPI
---
0x321: JUMPDEST 
0x322: V265 = 0x3
0x324: V266 = S[0x3]
0x325: V267 = TIMESTAMP
0x326: V268 = LT V267 V266
0x327: V269 = 0x3a6
0x32a: JUMPI 0x3a6 V268
---
Entry stack: [V10, 0x1d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2]

================================

Block 0x32b
[0x32b:0x335]
---
Predecessors: [0x321]
Successors: [0x336, 0x396]
---
0x32b PUSH1 0x1
0x32d SLOAD
0x32e PUSH1 0x2
0x330 SLOAD
0x331 LT
0x332 PUSH2 0x396
0x335 JUMPI
---
0x32b: V270 = 0x1
0x32d: V271 = S[0x1]
0x32e: V272 = 0x2
0x330: V273 = S[0x2]
0x331: V274 = LT V273 V271
0x332: V275 = 0x396
0x335: JUMPI 0x396 V274
---
Entry stack: [V10, 0x1d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2]

================================

Block 0x336
[0x336:0x395]
---
Predecessors: [0x32b]
Successors: [0x396]
---
0x336 PUSH1 0x7
0x338 DUP1
0x339 SLOAD
0x33a PUSH1 0xff
0x33c NOT
0x33d AND
0x33e PUSH1 0x1
0x340 OR
0x341 SWAP1
0x342 SSTORE
0x343 PUSH1 0x0
0x345 SLOAD
0x346 PUSH1 0x2
0x348 SLOAD
0x349 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x36a SWAP2
0x36b PUSH1 0x1
0x36d PUSH1 0xa0
0x36f PUSH1 0x2
0x371 EXP
0x372 SUB
0x373 AND
0x374 SWAP1
0x375 PUSH1 0x40
0x377 MLOAD
0x378 PUSH1 0x1
0x37a PUSH1 0xa0
0x37c PUSH1 0x2
0x37e EXP
0x37f SUB
0x380 SWAP1
0x381 SWAP3
0x382 AND
0x383 DUP3
0x384 MSTORE
0x385 PUSH1 0x20
0x387 DUP3
0x388 ADD
0x389 MSTORE
0x38a PUSH1 0x40
0x38c SWAP1
0x38d DUP2
0x38e ADD
0x38f SWAP1
0x390 MLOAD
0x391 DUP1
0x392 SWAP2
0x393 SUB
0x394 SWAP1
0x395 LOG1
---
0x336: V276 = 0x7
0x339: V277 = S[0x7]
0x33a: V278 = 0xff
0x33c: V279 = NOT 0xff
0x33d: V280 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V277
0x33e: V281 = 0x1
0x340: V282 = OR 0x1 V280
0x342: S[0x7] = V282
0x343: V283 = 0x0
0x345: V284 = S[0x0]
0x346: V285 = 0x2
0x348: V286 = S[0x2]
0x349: V287 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x36b: V288 = 0x1
0x36d: V289 = 0xa0
0x36f: V290 = 0x2
0x371: V291 = EXP 0x2 0xa0
0x372: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x373: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x375: V294 = 0x40
0x377: V295 = M[0x40]
0x378: V296 = 0x1
0x37a: V297 = 0xa0
0x37c: V298 = 0x2
0x37e: V299 = EXP 0x2 0xa0
0x37f: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x382: V301 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x384: M[V295] = V301
0x385: V302 = 0x20
0x388: V303 = ADD V295 0x20
0x389: M[V303] = V286
0x38a: V304 = 0x40
0x38e: V305 = ADD 0x40 V295
0x390: V306 = M[0x40]
0x393: V307 = SUB V305 V306
0x395: LOG V306 V307 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x1d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2]

================================

Block 0x396
[0x396:0x3a5]
---
Predecessors: [0x32b, 0x336]
Successors: [0x3a6]
---
0x396 JUMPDEST
0x397 PUSH1 0x7
0x399 DUP1
0x39a SLOAD
0x39b PUSH2 0xff00
0x39e NOT
0x39f AND
0x3a0 PUSH2 0x100
0x3a3 OR
0x3a4 SWAP1
0x3a5 SSTORE
---
0x396: JUMPDEST 
0x397: V308 = 0x7
0x39a: V309 = S[0x7]
0x39b: V310 = 0xff00
0x39e: V311 = NOT 0xff00
0x39f: V312 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V309
0x3a0: V313 = 0x100
0x3a3: V314 = OR 0x100 V312
0x3a5: S[0x7] = V314
---
Entry stack: [V10, 0x1d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2]

================================

Block 0x3a6
[0x3a6:0x3a6]
---
Predecessors: [0x321, 0x396]
Successors: [0x3a7]
---
0x3a6 JUMPDEST
---
0x3a6: JUMPDEST 
---
Entry stack: [V10, 0x1d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2]

================================

Block 0x3a7
[0x3a7:0x3a7]
---
Predecessors: [0x3a6]
Successors: [0x3a8]
---
0x3a7 JUMPDEST
---
0x3a7: JUMPDEST 
---
Entry stack: [V10, 0x1d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2]

================================

Block 0x3a8
[0x3a8:0x3a9]
---
Predecessors: [0x3a7]
Successors: [0x1d2]
---
0x3a8 JUMPDEST
0x3a9 JUMP
---
0x3a8: JUMPDEST 
0x3a9: JUMP 0x1d2
---
Entry stack: [V10, 0x1d2]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3aa
[0x3aa:0x3af]
---
Predecessors: [0x1f4]
Successors: [0x1fc]
---
0x3aa JUMPDEST
0x3ab PUSH1 0x3
0x3ad SLOAD
0x3ae DUP2
0x3af JUMP
---
0x3aa: JUMPDEST 
0x3ab: V315 = 0x3
0x3ad: V316 = S[0x3]
0x3af: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V10, 0x1fc, V316]

================================

Block 0x3b0
[0x3b0:0x3be]
---
Predecessors: [0x219]
Successors: [0x221]
---
0x3b0 JUMPDEST
0x3b1 PUSH1 0x0
0x3b3 SLOAD
0x3b4 PUSH1 0x1
0x3b6 PUSH1 0xa0
0x3b8 PUSH1 0x2
0x3ba EXP
0x3bb SUB
0x3bc AND
0x3bd DUP2
0x3be JUMP
---
0x3b0: JUMPDEST 
0x3b1: V317 = 0x0
0x3b3: V318 = S[0x0]
0x3b4: V319 = 0x1
0x3b6: V320 = 0xa0
0x3b8: V321 = 0x2
0x3ba: V322 = EXP 0x2 0xa0
0x3bb: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bc: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x3be: JUMP 0x221
---
Entry stack: [V10, 0x221]
Stack pops: 1
Stack additions: [S0, V324]
Exit stack: [V10, 0x221, V324]

================================

Block 0x3bf
[0x3bf:0x3cd]
---
Predecessors: [0x248]
Successors: [0x221]
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x5
0x3c2 SLOAD
0x3c3 PUSH1 0x1
0x3c5 PUSH1 0xa0
0x3c7 PUSH1 0x2
0x3c9 EXP
0x3ca SUB
0x3cb AND
0x3cc DUP2
0x3cd JUMP
---
0x3bf: JUMPDEST 
0x3c0: V325 = 0x5
0x3c2: V326 = S[0x5]
0x3c3: V327 = 0x1
0x3c5: V328 = 0xa0
0x3c7: V329 = 0x2
0x3c9: V330 = EXP 0x2 0xa0
0x3ca: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cb: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x3cd: JUMP 0x221
---
Entry stack: [V10, 0x221]
Stack pops: 1
Stack additions: [S0, V332]
Exit stack: [V10, 0x221, V332]

================================

Block 0x3ce
[0x3ce:0x3df]
---
Predecessors: [0x277]
Successors: [0x1fc]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x6
0x3d1 PUSH1 0x20
0x3d3 MSTORE
0x3d4 PUSH1 0x0
0x3d6 SWAP1
0x3d7 DUP2
0x3d8 MSTORE
0x3d9 PUSH1 0x40
0x3db SWAP1
0x3dc SHA3
0x3dd SLOAD
0x3de DUP2
0x3df JUMP
---
0x3ce: JUMPDEST 
0x3cf: V333 = 0x6
0x3d1: V334 = 0x20
0x3d3: M[0x20] = 0x6
0x3d4: V335 = 0x0
0x3d8: M[0x0] = V211
0x3d9: V336 = 0x40
0x3dc: V337 = SHA3 0x0 0x40
0x3dd: V338 = S[V337]
0x3df: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc, V211]
Stack pops: 2
Stack additions: [S1, V338]
Exit stack: [V10, 0x1fc, V338]

================================

Block 0x3e0
[0x3e0:0x3e5]
---
Predecessors: [0x2a8]
Successors: [0x1fc]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x1
0x3e3 SLOAD
0x3e4 DUP2
0x3e5 JUMP
---
0x3e0: JUMPDEST 
0x3e1: V339 = 0x1
0x3e3: V340 = S[0x1]
0x3e5: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V340]
Exit stack: [V10, 0x1fc, V340]

================================

Block 0x3e6
[0x3e6:0x3eb]
---
Predecessors: [0x2cd]
Successors: [0x1fc]
---
0x3e6 JUMPDEST
0x3e7 PUSH1 0x2
0x3e9 SLOAD
0x3ea DUP2
0x3eb JUMP
---
0x3e6: JUMPDEST 
0x3e7: V341 = 0x2
0x3e9: V342 = S[0x2]
0x3eb: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V342]
Exit stack: [V10, 0x1fc, V342]

================================

Block 0x3ec
[0x3ec:0x3f1]
---
Predecessors: [0x2f2]
Successors: [0x1fc]
---
0x3ec JUMPDEST
0x3ed PUSH1 0x4
0x3ef SLOAD
0x3f0 DUP2
0x3f1 JUMP
---
0x3ec: JUMPDEST 
0x3ed: V343 = 0x4
0x3ef: V344 = S[0x4]
0x3f1: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V344]
Exit stack: [V10, 0x1fc, V344]

================================

Block 0x3f2
[0x3f2:0x3fe]
---
Predecessors: [0x317]
Successors: [0x1cf, 0x3ff]
---
0x3f2 JUMPDEST
0x3f3 PUSH1 0x3
0x3f5 SLOAD
0x3f6 PUSH1 0x0
0x3f8 SWAP1
0x3f9 TIMESTAMP
0x3fa LT
0x3fb PUSH2 0x1cf
0x3fe JUMPI
---
0x3f2: JUMPDEST 
0x3f3: V345 = 0x3
0x3f5: V346 = S[0x3]
0x3f6: V347 = 0x0
0x3f9: V348 = TIMESTAMP
0x3fa: V349 = LT V348 V346
0x3fb: V350 = 0x1cf
0x3fe: JUMPI 0x1cf V349
---
Entry stack: [V10, 0x1d2]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1d2, 0x0]

================================

Block 0x3ff
[0x3ff:0x40a]
---
Predecessors: [0x3f2]
Successors: [0x40b, 0x4d1]
---
0x3ff PUSH1 0x7
0x401 SLOAD
0x402 PUSH1 0xff
0x404 AND
0x405 ISZERO
0x406 ISZERO
0x407 PUSH2 0x4d1
0x40a JUMPI
---
0x3ff: V351 = 0x7
0x401: V352 = S[0x7]
0x402: V353 = 0xff
0x404: V354 = AND 0xff V352
0x405: V355 = ISZERO V354
0x406: V356 = ISZERO V355
0x407: V357 = 0x4d1
0x40a: JUMPI 0x4d1 V356
---
Entry stack: [V10, 0x1d2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, 0x0]

================================

Block 0x40b
[0x40b:0x431]
---
Predecessors: [0x3ff]
Successors: [0x432, 0x4d1]
---
0x40b POP
0x40c PUSH1 0x1
0x40e PUSH1 0xa0
0x410 PUSH1 0x2
0x412 EXP
0x413 SUB
0x414 CALLER
0x415 AND
0x416 PUSH1 0x0
0x418 SWAP1
0x419 DUP2
0x41a MSTORE
0x41b PUSH1 0x6
0x41d PUSH1 0x20
0x41f MSTORE
0x420 PUSH1 0x40
0x422 DUP2
0x423 SHA3
0x424 DUP1
0x425 SLOAD
0x426 SWAP1
0x427 DUP3
0x428 SWAP1
0x429 SSTORE
0x42a SWAP1
0x42b DUP2
0x42c GT
0x42d ISZERO
0x42e PUSH2 0x4d1
0x431 JUMPI
---
0x40c: V358 = 0x1
0x40e: V359 = 0xa0
0x410: V360 = 0x2
0x412: V361 = EXP 0x2 0xa0
0x413: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x414: V363 = CALLER
0x415: V364 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x416: V365 = 0x0
0x41a: M[0x0] = V364
0x41b: V366 = 0x6
0x41d: V367 = 0x20
0x41f: M[0x20] = 0x6
0x420: V368 = 0x40
0x423: V369 = SHA3 0x0 0x40
0x425: V370 = S[V369]
0x429: S[V369] = 0x0
0x42c: V371 = GT V370 0x0
0x42d: V372 = ISZERO V371
0x42e: V373 = 0x4d1
0x431: JUMPI 0x4d1 V372
---
Entry stack: [V10, 0x1d2, 0x0]
Stack pops: 1
Stack additions: [V370]
Exit stack: [V10, 0x1d2, V370]

================================

Block 0x432
[0x432:0x45c]
---
Predecessors: [0x40b]
Successors: [0x45d, 0x4b5]
---
0x432 PUSH1 0x1
0x434 PUSH1 0xa0
0x436 PUSH1 0x2
0x438 EXP
0x439 SUB
0x43a CALLER
0x43b AND
0x43c DUP2
0x43d ISZERO
0x43e PUSH2 0x8fc
0x441 MUL
0x442 DUP3
0x443 PUSH1 0x40
0x445 MLOAD
0x446 PUSH1 0x0
0x448 PUSH1 0x40
0x44a MLOAD
0x44b DUP1
0x44c DUP4
0x44d SUB
0x44e DUP2
0x44f DUP6
0x450 DUP9
0x451 DUP9
0x452 CALL
0x453 SWAP4
0x454 POP
0x455 POP
0x456 POP
0x457 POP
0x458 ISZERO
0x459 PUSH2 0x4b5
0x45c JUMPI
---
0x432: V374 = 0x1
0x434: V375 = 0xa0
0x436: V376 = 0x2
0x438: V377 = EXP 0x2 0xa0
0x439: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43a: V379 = CALLER
0x43b: V380 = AND V379 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V381 = ISZERO V370
0x43e: V382 = 0x8fc
0x441: V383 = MUL 0x8fc V381
0x443: V384 = 0x40
0x445: V385 = M[0x40]
0x446: V386 = 0x0
0x448: V387 = 0x40
0x44a: V388 = M[0x40]
0x44d: V389 = SUB V385 V388
0x452: V390 = CALL V383 V380 V370 V388 V389 V388 0x0
0x458: V391 = ISZERO V390
0x459: V392 = 0x4b5
0x45c: JUMPI 0x4b5 V391
---
Entry stack: [V10, 0x1d2, V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1d2, V370]

================================

Block 0x45d
[0x45d:0x4b4]
---
Predecessors: [0x432]
Successors: [0x4d1]
---
0x45d PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x47e CALLER
0x47f DUP3
0x480 PUSH1 0x0
0x482 PUSH1 0x40
0x484 MLOAD
0x485 PUSH1 0x1
0x487 PUSH1 0xa0
0x489 PUSH1 0x2
0x48b EXP
0x48c SUB
0x48d SWAP1
0x48e SWAP4
0x48f AND
0x490 DUP4
0x491 MSTORE
0x492 PUSH1 0x20
0x494 DUP4
0x495 ADD
0x496 SWAP2
0x497 SWAP1
0x498 SWAP2
0x499 MSTORE
0x49a ISZERO
0x49b ISZERO
0x49c PUSH1 0x40
0x49e DUP1
0x49f DUP4
0x4a0 ADD
0x4a1 SWAP2
0x4a2 SWAP1
0x4a3 SWAP2
0x4a4 MSTORE
0x4a5 PUSH1 0x60
0x4a7 SWAP1
0x4a8 SWAP2
0x4a9 ADD
0x4aa SWAP1
0x4ab MLOAD
0x4ac DUP1
0x4ad SWAP2
0x4ae SUB
0x4af SWAP1
0x4b0 LOG1
0x4b1 PUSH2 0x4d1
0x4b4 JUMP
---
0x45d: V393 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x47e: V394 = CALLER
0x480: V395 = 0x0
0x482: V396 = 0x40
0x484: V397 = M[0x40]
0x485: V398 = 0x1
0x487: V399 = 0xa0
0x489: V400 = 0x2
0x48b: V401 = EXP 0x2 0xa0
0x48c: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48f: V403 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x491: M[V397] = V403
0x492: V404 = 0x20
0x495: V405 = ADD V397 0x20
0x499: M[V405] = V370
0x49a: V406 = ISZERO 0x0
0x49b: V407 = ISZERO 0x1
0x49c: V408 = 0x40
0x4a0: V409 = ADD V397 0x40
0x4a4: M[V409] = 0x0
0x4a5: V410 = 0x60
0x4a9: V411 = ADD V397 0x60
0x4ab: V412 = M[0x40]
0x4ae: V413 = SUB V411 V412
0x4b0: LOG V412 V413 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4b1: V414 = 0x4d1
0x4b4: JUMP 0x4d1
---
Entry stack: [V10, 0x1d2, V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1d2, V370]

================================

Block 0x4b5
[0x4b5:0x4d0]
---
Predecessors: [0x432]
Successors: [0x4d1]
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x1
0x4b8 PUSH1 0xa0
0x4ba PUSH1 0x2
0x4bc EXP
0x4bd SUB
0x4be CALLER
0x4bf AND
0x4c0 PUSH1 0x0
0x4c2 SWAP1
0x4c3 DUP2
0x4c4 MSTORE
0x4c5 PUSH1 0x6
0x4c7 PUSH1 0x20
0x4c9 MSTORE
0x4ca PUSH1 0x40
0x4cc SWAP1
0x4cd SHA3
0x4ce DUP2
0x4cf SWAP1
0x4d0 SSTORE
---
0x4b5: JUMPDEST 
0x4b6: V415 = 0x1
0x4b8: V416 = 0xa0
0x4ba: V417 = 0x2
0x4bc: V418 = EXP 0x2 0xa0
0x4bd: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4be: V420 = CALLER
0x4bf: V421 = AND V420 0xffffffffffffffffffffffffffffffffffffffff
0x4c0: V422 = 0x0
0x4c4: M[0x0] = V421
0x4c5: V423 = 0x6
0x4c7: V424 = 0x20
0x4c9: M[0x20] = 0x6
0x4ca: V425 = 0x40
0x4cd: V426 = SHA3 0x0 0x40
0x4d0: S[V426] = V370
---
Entry stack: [V10, 0x1d2, V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1d2, V370]

================================

Block 0x4d1
[0x4d1:0x4d1]
---
Predecessors: [0x3ff, 0x40b, 0x45d, 0x4b5]
Successors: [0x4d2]
---
0x4d1 JUMPDEST
---
0x4d1: JUMPDEST 
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, S0]

================================

Block 0x4d2
[0x4d2:0x4d2]
---
Predecessors: [0x4d1]
Successors: [0x4d3]
---
0x4d2 JUMPDEST
---
0x4d2: JUMPDEST 
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, S0]

================================

Block 0x4d3
[0x4d3:0x4df]
---
Predecessors: [0x4d2]
Successors: [0x4e0, 0x4f3]
---
0x4d3 JUMPDEST
0x4d4 PUSH1 0x7
0x4d6 SLOAD
0x4d7 PUSH1 0xff
0x4d9 AND
0x4da DUP1
0x4db ISZERO
0x4dc PUSH2 0x4f3
0x4df JUMPI
---
0x4d3: JUMPDEST 
0x4d4: V427 = 0x7
0x4d6: V428 = S[0x7]
0x4d7: V429 = 0xff
0x4d9: V430 = AND 0xff V428
0x4db: V431 = ISZERO V430
0x4dc: V432 = 0x4f3
0x4df: JUMPI 0x4f3 V431
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: [V430]
Exit stack: [V10, 0x1d2, S0, V430]

================================

Block 0x4e0
[0x4e0:0x4f2]
---
Predecessors: [0x4d3]
Successors: [0x4f3]
---
0x4e0 POP
0x4e1 PUSH1 0x0
0x4e3 SLOAD
0x4e4 CALLER
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0xa0
0x4e9 PUSH1 0x2
0x4eb EXP
0x4ec SUB
0x4ed SWAP1
0x4ee DUP2
0x4ef AND
0x4f0 SWAP2
0x4f1 AND
0x4f2 EQ
---
0x4e1: V433 = 0x0
0x4e3: V434 = S[0x0]
0x4e4: V435 = CALLER
0x4e5: V436 = 0x1
0x4e7: V437 = 0xa0
0x4e9: V438 = 0x2
0x4eb: V439 = EXP 0x2 0xa0
0x4ec: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ef: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x4f1: V442 = AND V434 0xffffffffffffffffffffffffffffffffffffffff
0x4f2: V443 = EQ V442 V441
---
Entry stack: [V10, 0x1d2, S1, V430]
Stack pops: 1
Stack additions: [V443]
Exit stack: [V10, 0x1d2, S1, V443]

================================

Block 0x4f3
[0x4f3:0x4f8]
---
Predecessors: [0x4d3, 0x4e0]
Successors: [0x1cf, 0x4f9]
---
0x4f3 JUMPDEST
0x4f4 ISZERO
0x4f5 PUSH2 0x1cf
0x4f8 JUMPI
---
0x4f3: JUMPDEST 
0x4f4: V444 = ISZERO S0
0x4f5: V445 = 0x1cf
0x4f8: JUMPI 0x1cf V444
---
Entry stack: [V10, 0x1d2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d2, S1]

================================

Block 0x4f9
[0x4f9:0x52b]
---
Predecessors: [0x4f3]
Successors: [0x52c, 0x594]
---
0x4f9 PUSH1 0x0
0x4fb SLOAD
0x4fc PUSH1 0x2
0x4fe SLOAD
0x4ff PUSH1 0x1
0x501 PUSH1 0xa0
0x503 PUSH1 0x2
0x505 EXP
0x506 SUB
0x507 SWAP1
0x508 SWAP2
0x509 AND
0x50a SWAP1
0x50b DUP1
0x50c ISZERO
0x50d PUSH2 0x8fc
0x510 MUL
0x511 SWAP1
0x512 PUSH1 0x40
0x514 MLOAD
0x515 PUSH1 0x0
0x517 PUSH1 0x40
0x519 MLOAD
0x51a DUP1
0x51b DUP4
0x51c SUB
0x51d DUP2
0x51e DUP6
0x51f DUP9
0x520 DUP9
0x521 CALL
0x522 SWAP4
0x523 POP
0x524 POP
0x525 POP
0x526 POP
0x527 ISZERO
0x528 PUSH2 0x594
0x52b JUMPI
---
0x4f9: V446 = 0x0
0x4fb: V447 = S[0x0]
0x4fc: V448 = 0x2
0x4fe: V449 = S[0x2]
0x4ff: V450 = 0x1
0x501: V451 = 0xa0
0x503: V452 = 0x2
0x505: V453 = EXP 0x2 0xa0
0x506: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x509: V455 = AND V447 0xffffffffffffffffffffffffffffffffffffffff
0x50c: V456 = ISZERO V449
0x50d: V457 = 0x8fc
0x510: V458 = MUL 0x8fc V456
0x512: V459 = 0x40
0x514: V460 = M[0x40]
0x515: V461 = 0x0
0x517: V462 = 0x40
0x519: V463 = M[0x40]
0x51c: V464 = SUB V460 V463
0x521: V465 = CALL V458 V455 V449 V463 V464 V463 0x0
0x527: V466 = ISZERO V465
0x528: V467 = 0x594
0x52b: JUMPI 0x594 V466
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, S0]

================================

Block 0x52c
[0x52c:0x593]
---
Predecessors: [0x4f9]
Successors: [0x1cf]
---
0x52c PUSH1 0x0
0x52e DUP1
0x52f SLOAD
0x530 PUSH1 0x2
0x532 SLOAD
0x533 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x554 SWAP3
0x555 PUSH1 0x1
0x557 PUSH1 0xa0
0x559 PUSH1 0x2
0x55b EXP
0x55c SUB
0x55d SWAP1
0x55e SWAP3
0x55f AND
0x560 SWAP2
0x561 PUSH1 0x40
0x563 MLOAD
0x564 PUSH1 0x1
0x566 PUSH1 0xa0
0x568 PUSH1 0x2
0x56a EXP
0x56b SUB
0x56c SWAP1
0x56d SWAP4
0x56e AND
0x56f DUP4
0x570 MSTORE
0x571 PUSH1 0x20
0x573 DUP4
0x574 ADD
0x575 SWAP2
0x576 SWAP1
0x577 SWAP2
0x578 MSTORE
0x579 ISZERO
0x57a ISZERO
0x57b PUSH1 0x40
0x57d DUP1
0x57e DUP4
0x57f ADD
0x580 SWAP2
0x581 SWAP1
0x582 SWAP2
0x583 MSTORE
0x584 PUSH1 0x60
0x586 SWAP1
0x587 SWAP2
0x588 ADD
0x589 SWAP1
0x58a MLOAD
0x58b DUP1
0x58c SWAP2
0x58d SUB
0x58e SWAP1
0x58f LOG1
0x590 PUSH2 0x1cf
0x593 JUMP
---
0x52c: V468 = 0x0
0x52f: V469 = S[0x0]
0x530: V470 = 0x2
0x532: V471 = S[0x2]
0x533: V472 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x555: V473 = 0x1
0x557: V474 = 0xa0
0x559: V475 = 0x2
0x55b: V476 = EXP 0x2 0xa0
0x55c: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55f: V478 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x561: V479 = 0x40
0x563: V480 = M[0x40]
0x564: V481 = 0x1
0x566: V482 = 0xa0
0x568: V483 = 0x2
0x56a: V484 = EXP 0x2 0xa0
0x56b: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56e: V486 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x570: M[V480] = V486
0x571: V487 = 0x20
0x574: V488 = ADD V480 0x20
0x578: M[V488] = V471
0x579: V489 = ISZERO 0x0
0x57a: V490 = ISZERO 0x1
0x57b: V491 = 0x40
0x57f: V492 = ADD V480 0x40
0x583: M[V492] = 0x0
0x584: V493 = 0x60
0x588: V494 = ADD V480 0x60
0x58a: V495 = M[0x40]
0x58d: V496 = SUB V494 V495
0x58f: LOG V495 V496 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x590: V497 = 0x1cf
0x593: JUMP 0x1cf
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, S0]

================================

Block 0x594
[0x594:0x59e]
---
Predecessors: [0x4f9]
Successors: [0x59f]
---
0x594 JUMPDEST
0x595 PUSH1 0x7
0x597 DUP1
0x598 SLOAD
0x599 PUSH1 0xff
0x59b NOT
0x59c AND
0x59d SWAP1
0x59e SSTORE
---
0x594: JUMPDEST 
0x595: V498 = 0x7
0x598: V499 = S[0x7]
0x599: V500 = 0xff
0x59b: V501 = NOT 0xff
0x59c: V502 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V499
0x59e: S[0x7] = V502
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, S0]

================================

Block 0x59f
[0x59f:0x59f]
---
Predecessors: [0x594]
Successors: [0x5a0]
---
0x59f JUMPDEST
---
0x59f: JUMPDEST 
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, S0]

================================

Block 0x5a0
[0x5a0:0x5a0]
---
Predecessors: [0x59f]
Successors: [0x5a1]
---
0x5a0 JUMPDEST
---
0x5a0: JUMPDEST 
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, S0]

================================

Block 0x5a1
[0x5a1:0x5a1]
---
Predecessors: [0x5a0]
Successors: [0x5a2]
---
0x5a1 JUMPDEST
---
0x5a1: JUMPDEST 
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, S0]

================================

Block 0x5a2
[0x5a2:0x5a2]
---
Predecessors: [0x5a1]
Successors: [0x5a3]
---
0x5a2 JUMPDEST
---
0x5a2: JUMPDEST 
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d2, S0]

================================

Block 0x5a3
[0x5a3:0x5a5]
---
Predecessors: [0x5a2]
Successors: [0x1d2]
---
0x5a3 JUMPDEST
0x5a4 POP
0x5a5 JUMP
---
0x5a3: JUMPDEST 
0x5a5: JUMP 0x1d2
---
Entry stack: [V10, 0x1d2, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x5a6
[0x5a6:0x5cc]
---
Predecessors: []
Successors: [0x5cd]
---
0x5a6 STOP
0x5a7 LOG1
0x5a8 PUSH6 0x627a7a723058
0x5af SHA3
0x5b0 SDIV
0x5b1 MISSING 0xba
0x5b2 MISSING 0xd5
0x5b3 DUP7
0x5b4 PUSH22 0x13c81ad3cbe9c6927f1f61fd773756e30097d47c29f9
0x5cb NOT
0x5cc LT
---
0x5a6: STOP 
0x5a7: LOG S0 S1 S2
0x5a8: V503 = 0x627a7a723058
0x5af: V504 = SHA3 0x627a7a723058 S3
0x5b0: V505 = SDIV V504 S4
0x5b1: MISSING 0xba
0x5b2: MISSING 0xd5
0x5b4: V506 = 0x13c81ad3cbe9c6927f1f61fd773756e30097d47c29f9
0x5cb: V507 = NOT 0x13c81ad3cbe9c6927f1f61fd773756e30097d47c29f9
0x5cc: V508 = LT 0xffffffffffffffffffffec37e52c3416396d80e09e0288c8a91cff682b83d606 S6
---
Entry stack: []
Stack pops: 0
Stack additions: [V505, V508, S0, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0x5cd
[0x5cd:0x5d1]
---
Predecessors: [0x5a6]
Successors: []
---
0x5cd JUMPDEST
0x5ce INVALID
0x5cf NUMBER
0x5d0 STOP
0x5d1 MISSING 0x29
---
0x5cd: JUMPDEST 
0x5ce: INVALID 
0x5cf: V509 = NUMBER
0x5d0: STOP 
0x5d1: MISSING 0x29
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, V508]
Stack pops: 0
Stack additions: [V509]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1d4
Exit block: 0x1d2
Body: 0x1d2, 0x1d4, 0x1db, 0x1df, 0x321, 0x32b, 0x336, 0x396, 0x3a6, 0x3a7, 0x3a8

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1e9
Exit block: 0x1fc
Body: 0x1e9, 0x1f0, 0x1f4, 0x1fc, 0x3aa

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x20e
Exit block: 0x221
Body: 0x20e, 0x215, 0x219, 0x221, 0x3b0

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x23d
Exit block: 0x221
Body: 0x221, 0x23d, 0x244, 0x248, 0x3bf

Function 4:
Public function signature: 0x70a08231
Entry block: 0x26c
Exit block: 0x1fc
Body: 0x1fc, 0x26c, 0x273, 0x277, 0x3ce

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x29d
Exit block: 0x1fc
Body: 0x1fc, 0x29d, 0x2a4, 0x2a8, 0x3e0

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2c2
Exit block: 0x1fc
Body: 0x1fc, 0x2c2, 0x2c9, 0x2cd, 0x3e6

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x2e7
Exit block: 0x1fc
Body: 0x1fc, 0x2e7, 0x2ee, 0x2f2, 0x3ec

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x30c
Exit block: 0x1d2
Body: 0x1cf, 0x1d2, 0x30c, 0x313, 0x317, 0x3f2, 0x3ff, 0x40b, 0x432, 0x45d, 0x4b5, 0x4d1, 0x4d2, 0x4d3, 0x4e0, 0x4f3, 0x4f9, 0x52c, 0x594, 0x59f, 0x5a0, 0x5a1, 0x5a2, 0x5a3

Function 9:
Public fallback function
Entry block: 0x96
Exit block: 0x1d2
Body: 0x96, 0x9a, 0xae, 0xb2, 0xf7, 0xf8, 0x15a, 0x15e, 0x16b, 0x16f, 0x1cf, 0x1d2

