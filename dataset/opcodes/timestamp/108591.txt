args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/9/108591.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xf6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xf6
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xf6
0xa: JUMPI 0xf6 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x2a5]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x155dd5ee
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x2a5
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x155dd5ee
0x20: V14 = EQ V12 0x155dd5ee
0x21: V15 = 0x2a5
0x24: JUMPI 0x2a5 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x2bd]
---
0x25 DUP1
0x26 PUSH4 0x17ffc320
0x2b EQ
0x2c PUSH2 0x2bd
0x2f JUMPI
---
0x26: V16 = 0x17ffc320
0x2b: V17 = EQ 0x17ffc320 V12
0x2c: V18 = 0x2bd
0x2f: JUMPI 0x2bd V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x2de]
---
0x30 DUP1
0x31 PUSH4 0x1ed692c0
0x36 EQ
0x37 PUSH2 0x2de
0x3a JUMPI
---
0x31: V19 = 0x1ed692c0
0x36: V20 = EQ 0x1ed692c0 V12
0x37: V21 = 0x2de
0x3a: JUMPI 0x2de V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x2f3]
---
0x3b DUP1
0x3c PUSH4 0x2aed7f3f
0x41 EQ
0x42 PUSH2 0x2f3
0x45 JUMPI
---
0x3c: V22 = 0x2aed7f3f
0x41: V23 = EQ 0x2aed7f3f V12
0x42: V24 = 0x2f3
0x45: JUMPI 0x2f3 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x314]
---
0x46 DUP1
0x47 PUSH4 0x40193883
0x4c EQ
0x4d PUSH2 0x314
0x50 JUMPI
---
0x47: V25 = 0x40193883
0x4c: V26 = EQ 0x40193883 V12
0x4d: V27 = 0x314
0x50: JUMPI 0x314 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x339]
---
0x51 DUP1
0x52 PUSH4 0x7ecc2b56
0x57 EQ
0x58 PUSH2 0x339
0x5b JUMPI
---
0x52: V28 = 0x7ecc2b56
0x57: V29 = EQ 0x7ecc2b56 V12
0x58: V30 = 0x339
0x5b: JUMPI 0x339 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x35e]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x35e
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x35e
0x66: JUMPI 0x35e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x38d]
---
0x67 DUP1
0x68 PUSH4 0x9d1b464a
0x6d EQ
0x6e PUSH2 0x38d
0x71 JUMPI
---
0x68: V34 = 0x9d1b464a
0x6d: V35 = EQ 0x9d1b464a V12
0x6e: V36 = 0x38d
0x71: JUMPI 0x38d V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x3b2]
---
0x72 DUP1
0x73 PUSH4 0xa85adeab
0x78 EQ
0x79 PUSH2 0x3b2
0x7c JUMPI
---
0x73: V37 = 0xa85adeab
0x78: V38 = EQ 0xa85adeab V12
0x79: V39 = 0x3b2
0x7c: JUMPI 0x3b2 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3d7]
---
0x7d DUP1
0x7e PUSH4 0xb3f05b97
0x83 EQ
0x84 PUSH2 0x3d7
0x87 JUMPI
---
0x7e: V40 = 0xb3f05b97
0x83: V41 = EQ 0xb3f05b97 V12
0x84: V42 = 0x3d7
0x87: JUMPI 0x3d7 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3fe]
---
0x88 DUP1
0x89 PUSH4 0xb5545a3c
0x8e EQ
0x8f PUSH2 0x3fe
0x92 JUMPI
---
0x89: V43 = 0xb5545a3c
0x8e: V44 = EQ 0xb5545a3c V12
0x8f: V45 = 0x3fe
0x92: JUMPI 0x3fe V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x413]
---
0x93 DUP1
0x94 PUSH4 0xbb50c67a
0x99 EQ
0x9a PUSH2 0x413
0x9d JUMPI
---
0x94: V46 = 0xbb50c67a
0x99: V47 = EQ 0xbb50c67a V12
0x9a: V48 = 0x413
0x9d: JUMPI 0x413 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x43a]
---
0x9e DUP1
0x9f PUSH4 0xbc31c1c1
0xa4 EQ
0xa5 PUSH2 0x43a
0xa8 JUMPI
---
0x9f: V49 = 0xbc31c1c1
0xa4: V50 = EQ 0xbc31c1c1 V12
0xa5: V51 = 0x43a
0xa8: JUMPI 0x43a V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x462]
---
0xa9 DUP1
0xaa PUSH4 0xc0ee0b8a
0xaf EQ
0xb0 PUSH2 0x462
0xb3 JUMPI
---
0xaa: V52 = 0xc0ee0b8a
0xaf: V53 = EQ 0xc0ee0b8a V12
0xb0: V54 = 0x462
0xb3: JUMPI 0x462 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x493]
---
0xb4 DUP1
0xb5 PUSH4 0xe29eb836
0xba EQ
0xbb PUSH2 0x493
0xbe JUMPI
---
0xb5: V55 = 0xe29eb836
0xba: V56 = EQ 0xe29eb836 V12
0xbb: V57 = 0x493
0xbe: JUMPI 0x493 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x4b8]
---
0xbf DUP1
0xc0 PUSH4 0xe3bbb4f1
0xc5 EQ
0xc6 PUSH2 0x4b8
0xc9 JUMPI
---
0xc0: V58 = 0xe3bbb4f1
0xc5: V59 = EQ 0xe3bbb4f1 V12
0xc6: V60 = 0x4b8
0xc9: JUMPI 0x4b8 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x4dd]
---
0xca DUP1
0xcb PUSH4 0xe6fd48bc
0xd0 EQ
0xd1 PUSH2 0x4dd
0xd4 JUMPI
---
0xcb: V61 = 0xe6fd48bc
0xd0: V62 = EQ 0xe6fd48bc V12
0xd1: V63 = 0x4dd
0xd4: JUMPI 0x4dd V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x502]
---
0xd5 DUP1
0xd6 PUSH4 0xea4a1104
0xdb EQ
0xdc PUSH2 0x502
0xdf JUMPI
---
0xd6: V64 = 0xea4a1104
0xdb: V65 = EQ 0xea4a1104 V12
0xdc: V66 = 0x502
0xdf: JUMPI 0x502 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x52a]
---
0xe0 DUP1
0xe1 PUSH4 0xf1388f14
0xe6 EQ
0xe7 PUSH2 0x52a
0xea JUMPI
---
0xe1: V67 = 0xf1388f14
0xe6: V68 = EQ 0xf1388f14 V12
0xe7: V69 = 0x52a
0xea: JUMPI 0x52a V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x559]
---
0xeb DUP1
0xec PUSH4 0xf2fde38b
0xf1 EQ
0xf2 PUSH2 0x559
0xf5 JUMPI
---
0xec: V70 = 0xf2fde38b
0xf1: V71 = EQ 0xf2fde38b V12
0xf2: V72 = 0x559
0xf5: JUMPI 0x559 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0x0, 0xeb]
Successors: [0xfa]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x2a3
---
0xf6: JUMPDEST 
0xf7: V73 = 0x2a3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3]
Exit stack: [V12, 0x2a3]

================================

Block 0xfa
[0xfa:0x10a]
---
Predecessors: [0xf6]
Successors: [0x10b, 0x10c]
---
0xfa JUMPDEST
0xfb PUSH1 0x0
0xfd DUP1
0xfe PUSH5 0xba43b7400
0x104 GASPRICE
0x105 GT
0x106 ISZERO
0x107 PUSH2 0x10c
0x10a JUMPI
---
0xfa: JUMPDEST 
0xfb: V74 = 0x0
0xfe: V75 = 0xba43b7400
0x104: V76 = GASPRICE
0x105: V77 = GT V76 0xba43b7400
0x106: V78 = ISZERO V77
0x107: V79 = 0x10c
0x10a: JUMPI 0x10c V78
---
Entry stack: [V12, 0x2a3]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x2a3, 0x0, 0x0]

================================

Block 0x10b
[0x10b:0x10b]
---
Predecessors: [0xfa]
Successors: []
---
0x10b INVALID
---
0x10b: INVALID 
---
Entry stack: [V12, 0x2a3, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, 0x0]

================================

Block 0x10c
[0x10c:0x113]
---
Predecessors: [0xfa]
Successors: [0x57a]
---
0x10c JUMPDEST
0x10d PUSH2 0x114
0x110 PUSH2 0x57a
0x113 JUMP
---
0x10c: JUMPDEST 
0x10d: V80 = 0x114
0x110: V81 = 0x57a
0x113: JUMP 0x57a
---
Entry stack: [V12, 0x2a3, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x114]
Exit stack: [V12, 0x2a3, 0x0, 0x0, 0x114]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x5af]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 ISZERO
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V82 = ISZERO S0
0x116: V83 = ISZERO V82
0x117: V84 = 0x11f
0x11a: JUMPI 0x11f V83
---
Entry stack: [V12, 0x2a3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, S1]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V85 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, S0]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x114]
Successors: [0x128, 0x12c]
---
0x11f JUMPDEST
0x120 PUSH1 0x0
0x122 CALLVALUE
0x123 GT
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x11f: JUMPDEST 
0x120: V86 = 0x0
0x122: V87 = CALLVALUE
0x123: V88 = GT V87 0x0
0x124: V89 = 0x12c
0x127: JUMPI 0x12c V88
---
Entry stack: [V12, 0x2a3, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, S0]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x11f]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V90 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, S0]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x11f]
Successors: [0x5b2]
---
0x12c JUMPDEST
0x12d PUSH2 0x134
0x130 PUSH2 0x5b2
0x133 JUMP
---
0x12c: JUMPDEST 
0x12d: V91 = 0x134
0x130: V92 = 0x5b2
0x133: JUMP 0x5b2
---
Entry stack: [V12, 0x2a3, 0x0, S0]
Stack pops: 0
Stack additions: [0x134]
Exit stack: [V12, 0x2a3, 0x0, S0, 0x134]

================================

Block 0x134
[0x134:0x13e]
---
Predecessors: [0x63b]
Successors: [0x13f, 0x140]
---
0x134 JUMPDEST
0x135 SWAP2
0x136 POP
0x137 PUSH1 0x0
0x139 DUP3
0x13a GT
0x13b PUSH2 0x140
0x13e JUMPI
---
0x134: JUMPDEST 
0x137: V93 = 0x0
0x13a: V94 = GT S0 0x0
0x13b: V95 = 0x140
0x13e: JUMPI 0x140 V94
---
Entry stack: [V12, 0x2a3, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, 0x2a3, S0, S1]

================================

Block 0x13f
[0x13f:0x13f]
---
Predecessors: [0x134]
Successors: []
---
0x13f INVALID
---
0x13f: INVALID 
---
Entry stack: [V12, 0x2a3, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S1, S0]

================================

Block 0x140
[0x140:0x14f]
---
Predecessors: [0x134]
Successors: [0x63f]
---
0x140 JUMPDEST
0x141 PUSH2 0x150
0x144 DUP3
0x145 CALLVALUE
0x146 PUSH4 0xffffffff
0x14b PUSH2 0x63f
0x14e AND
0x14f JUMP
---
0x140: JUMPDEST 
0x141: V96 = 0x150
0x145: V97 = CALLVALUE
0x146: V98 = 0xffffffff
0x14b: V99 = 0x63f
0x14e: V100 = AND 0x63f 0xffffffff
0x14f: JUMP 0x63f
---
Entry stack: [V12, 0x2a3, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x150, S1, V97]
Exit stack: [V12, 0x2a3, S1, S0, 0x150, S1, V97]

================================

Block 0x150
[0x150:0x15a]
---
Predecessors: [0x667]
Successors: [0x15b, 0x15c]
---
0x150 JUMPDEST
0x151 SWAP1
0x152 POP
0x153 PUSH1 0x0
0x155 DUP2
0x156 GT
0x157 PUSH2 0x15c
0x15a JUMPI
---
0x150: JUMPDEST 
0x153: V101 = 0x0
0x156: V102 = GT S0 0x0
0x157: V103 = 0x15c
0x15a: JUMPI 0x15c V102
---
Entry stack: [V12, 0x2a3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x2a3, S2, S0]

================================

Block 0x15b
[0x15b:0x15b]
---
Predecessors: [0x150]
Successors: []
---
0x15b INVALID
---
0x15b: INVALID 
---
Entry stack: [V12, 0x2a3, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S1, S0]

================================

Block 0x15c
[0x15c:0x16b]
---
Predecessors: [0x150]
Successors: [0x16c, 0x170]
---
0x15c JUMPDEST
0x15d PUSH1 0x0
0x15f DUP2
0x160 PUSH1 0x3
0x162 SLOAD
0x163 SUB
0x164 LT
0x165 ISZERO
0x166 ISZERO
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x15c: JUMPDEST 
0x15d: V104 = 0x0
0x160: V105 = 0x3
0x162: V106 = S[0x3]
0x163: V107 = SUB V106 S0
0x164: V108 = LT V107 0x0
0x165: V109 = ISZERO V108
0x166: V110 = ISZERO V109
0x167: V111 = ISZERO V110
0x168: V112 = 0x170
0x16b: JUMPI 0x170 V111
---
Entry stack: [V12, 0x2a3, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a3, S1, S0]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x15c]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V113 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S1, S0]

================================

Block 0x170
[0x170:0x198]
---
Predecessors: [0x15c]
Successors: [0x66e]
---
0x170 JUMPDEST
0x171 PUSH1 0x1
0x173 PUSH1 0xa0
0x175 PUSH1 0x2
0x177 EXP
0x178 SUB
0x179 CALLER
0x17a AND
0x17b PUSH1 0x0
0x17d SWAP1
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0xa
0x182 PUSH1 0x20
0x184 MSTORE
0x185 PUSH1 0x40
0x187 SWAP1
0x188 SHA3
0x189 SLOAD
0x18a PUSH2 0x199
0x18d SWAP1
0x18e CALLVALUE
0x18f PUSH4 0xffffffff
0x194 PUSH2 0x66e
0x197 AND
0x198 JUMP
---
0x170: JUMPDEST 
0x171: V114 = 0x1
0x173: V115 = 0xa0
0x175: V116 = 0x2
0x177: V117 = EXP 0x2 0xa0
0x178: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V119 = CALLER
0x17a: V120 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V121 = 0x0
0x17f: M[0x0] = V120
0x180: V122 = 0xa
0x182: V123 = 0x20
0x184: M[0x20] = 0xa
0x185: V124 = 0x40
0x188: V125 = SHA3 0x0 0x40
0x189: V126 = S[V125]
0x18a: V127 = 0x199
0x18e: V128 = CALLVALUE
0x18f: V129 = 0xffffffff
0x194: V130 = 0x66e
0x197: V131 = AND 0x66e 0xffffffff
0x198: JUMP 0x66e
---
Entry stack: [V12, 0x2a3, S1, S0]
Stack pops: 0
Stack additions: [0x199, V126, V128]
Exit stack: [V12, 0x2a3, S1, S0, 0x199, V126, V128]

================================

Block 0x199
[0x199:0x1c4]
---
Predecessors: [0x667]
Successors: [0x66e]
---
0x199 JUMPDEST
0x19a PUSH1 0x1
0x19c PUSH1 0xa0
0x19e PUSH1 0x2
0x1a0 EXP
0x1a1 SUB
0x1a2 CALLER
0x1a3 AND
0x1a4 PUSH1 0x0
0x1a6 SWAP1
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0xa
0x1ab PUSH1 0x20
0x1ad MSTORE
0x1ae PUSH1 0x40
0x1b0 SWAP1
0x1b1 SHA3
0x1b2 SSTORE
0x1b3 PUSH1 0x6
0x1b5 SLOAD
0x1b6 PUSH2 0x1c5
0x1b9 SWAP1
0x1ba CALLVALUE
0x1bb PUSH4 0xffffffff
0x1c0 PUSH2 0x66e
0x1c3 AND
0x1c4 JUMP
---
0x199: JUMPDEST 
0x19a: V132 = 0x1
0x19c: V133 = 0xa0
0x19e: V134 = 0x2
0x1a0: V135 = EXP 0x2 0xa0
0x1a1: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a2: V137 = CALLER
0x1a3: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V139 = 0x0
0x1a8: M[0x0] = V138
0x1a9: V140 = 0xa
0x1ab: V141 = 0x20
0x1ad: M[0x20] = 0xa
0x1ae: V142 = 0x40
0x1b1: V143 = SHA3 0x0 0x40
0x1b2: S[V143] = S0
0x1b3: V144 = 0x6
0x1b5: V145 = S[0x6]
0x1b6: V146 = 0x1c5
0x1ba: V147 = CALLVALUE
0x1bb: V148 = 0xffffffff
0x1c0: V149 = 0x66e
0x1c3: V150 = AND 0x66e 0xffffffff
0x1c4: JUMP 0x66e
---
Entry stack: [V12, 0x2a3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1c5, V145, V147]
Exit stack: [V12, 0x2a3, S2, S1, 0x1c5, V145, V147]

================================

Block 0x1c5
[0x1c5:0x1da]
---
Predecessors: [0x667]
Successors: [0x688]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x6
0x1c8 SSTORE
0x1c9 PUSH1 0x3
0x1cb SLOAD
0x1cc PUSH2 0x1db
0x1cf SWAP1
0x1d0 DUP3
0x1d1 PUSH4 0xffffffff
0x1d6 PUSH2 0x688
0x1d9 AND
0x1da JUMP
---
0x1c5: JUMPDEST 
0x1c6: V151 = 0x6
0x1c8: S[0x6] = S0
0x1c9: V152 = 0x3
0x1cb: V153 = S[0x3]
0x1cc: V154 = 0x1db
0x1d1: V155 = 0xffffffff
0x1d6: V156 = 0x688
0x1d9: V157 = AND 0x688 0xffffffff
0x1da: JUMP 0x688
---
Entry stack: [V12, 0x2a3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x1db, V153, S1]
Exit stack: [V12, 0x2a3, S2, S1, 0x1db, V153, S1]

================================

Block 0x1db
[0x1db:0x238]
---
Predecessors: [0x699]
Successors: [0x239, 0x23d]
---
0x1db JUMPDEST
0x1dc PUSH1 0x3
0x1de SSTORE
0x1df PUSH1 0x2
0x1e1 SLOAD
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea AND
0x1eb PUSH4 0x40c10f19
0x1f0 CALLER
0x1f1 DUP4
0x1f2 PUSH1 0x0
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa MSTORE
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe PUSH1 0xe0
0x200 PUSH1 0x2
0x202 EXP
0x203 PUSH4 0xffffffff
0x208 DUP6
0x209 AND
0x20a MUL
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 SWAP1
0x216 SWAP3
0x217 AND
0x218 PUSH1 0x4
0x21a DUP4
0x21b ADD
0x21c MSTORE
0x21d PUSH1 0x24
0x21f DUP3
0x220 ADD
0x221 MSTORE
0x222 PUSH1 0x44
0x224 ADD
0x225 PUSH1 0x20
0x227 PUSH1 0x40
0x229 MLOAD
0x22a DUP1
0x22b DUP4
0x22c SUB
0x22d DUP2
0x22e PUSH1 0x0
0x230 DUP8
0x231 DUP1
0x232 EXTCODESIZE
0x233 ISZERO
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V158 = 0x3
0x1de: S[0x3] = V601
0x1df: V159 = 0x2
0x1e1: V160 = S[0x2]
0x1e2: V161 = 0x1
0x1e4: V162 = 0xa0
0x1e6: V163 = 0x2
0x1e8: V164 = EXP 0x2 0xa0
0x1e9: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1eb: V167 = 0x40c10f19
0x1f0: V168 = CALLER
0x1f2: V169 = 0x0
0x1f4: V170 = 0x40
0x1f6: V171 = M[0x40]
0x1f7: V172 = 0x20
0x1f9: V173 = ADD 0x20 V171
0x1fa: M[V173] = 0x0
0x1fb: V174 = 0x40
0x1fd: V175 = M[0x40]
0x1fe: V176 = 0xe0
0x200: V177 = 0x2
0x202: V178 = EXP 0x2 0xe0
0x203: V179 = 0xffffffff
0x209: V180 = AND 0x40c10f19 0xffffffff
0x20a: V181 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x20c: M[V175] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x20d: V182 = 0x1
0x20f: V183 = 0xa0
0x211: V184 = 0x2
0x213: V185 = EXP 0x2 0xa0
0x214: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V187 = AND V168 0xffffffffffffffffffffffffffffffffffffffff
0x218: V188 = 0x4
0x21b: V189 = ADD V175 0x4
0x21c: M[V189] = V187
0x21d: V190 = 0x24
0x220: V191 = ADD V175 0x24
0x221: M[V191] = S1
0x222: V192 = 0x44
0x224: V193 = ADD 0x44 V175
0x225: V194 = 0x20
0x227: V195 = 0x40
0x229: V196 = M[0x40]
0x22c: V197 = SUB V193 V196
0x22e: V198 = 0x0
0x232: V199 = EXTCODESIZE V166
0x233: V200 = ISZERO V199
0x234: V201 = ISZERO V200
0x235: V202 = 0x23d
0x238: JUMPI 0x23d V201
---
Entry stack: [V12, 0x2a3, S2, S1, V601]
Stack pops: 2
Stack additions: [S1, V166, 0x40c10f19, V193, 0x20, V196, V197, V196, 0x0, V166]
Exit stack: [V12, 0x2a3, S2, S1, V166, 0x40c10f19, V193, 0x20, V196, V197, V196, 0x0, V166]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x1db]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V203 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, S10, S9, V166, 0x40c10f19, V193, 0x20, V196, V197, V196, 0x0, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S10, S9, V166, 0x40c10f19, V193, 0x20, V196, V197, V196, 0x0, V166]

================================

Block 0x23d
[0x23d:0x249]
---
Predecessors: [0x1db]
Successors: [0x24a, 0x24e]
---
0x23d JUMPDEST
0x23e PUSH2 0x2c6
0x241 GAS
0x242 SUB
0x243 CALL
0x244 ISZERO
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x23d: JUMPDEST 
0x23e: V204 = 0x2c6
0x241: V205 = GAS
0x242: V206 = SUB V205 0x2c6
0x243: V207 = CALL V206 V166 0x0 V196 V197 V196 0x20
0x244: V208 = ISZERO V207
0x245: V209 = ISZERO V208
0x246: V210 = 0x24e
0x249: JUMPI 0x24e V209
---
Entry stack: [V12, 0x2a3, S10, S9, V166, 0x40c10f19, V193, 0x20, V196, V197, V196, 0x0, V166]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a3, S10, S9, V166, 0x40c10f19, V193]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x23d]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V211 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, S4, S3, V166, 0x40c10f19, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S4, S3, V166, 0x40c10f19, V193]

================================

Block 0x24e
[0x24e:0x29c]
---
Predecessors: [0x23d]
Successors: [0x29d]
---
0x24e JUMPDEST
0x24f POP
0x250 POP
0x251 POP
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 MLOAD
0x257 POP
0x258 POP
0x259 PUSH1 0x1
0x25b PUSH1 0xa0
0x25d PUSH1 0x2
0x25f EXP
0x260 SUB
0x261 CALLER
0x262 AND
0x263 PUSH32 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f
0x284 CALLVALUE
0x285 DUP4
0x286 PUSH1 0x40
0x288 MLOAD
0x289 SWAP2
0x28a DUP3
0x28b MSTORE
0x28c PUSH1 0x20
0x28e DUP3
0x28f ADD
0x290 MSTORE
0x291 PUSH1 0x40
0x293 SWAP1
0x294 DUP2
0x295 ADD
0x296 SWAP1
0x297 MLOAD
0x298 DUP1
0x299 SWAP2
0x29a SUB
0x29b SWAP1
0x29c LOG2
---
0x24e: JUMPDEST 
0x252: V212 = 0x40
0x254: V213 = M[0x40]
0x256: V214 = M[V213]
0x259: V215 = 0x1
0x25b: V216 = 0xa0
0x25d: V217 = 0x2
0x25f: V218 = EXP 0x2 0xa0
0x260: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V220 = CALLER
0x262: V221 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x263: V222 = 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f
0x284: V223 = CALLVALUE
0x286: V224 = 0x40
0x288: V225 = M[0x40]
0x28b: M[V225] = V223
0x28c: V226 = 0x20
0x28f: V227 = ADD V225 0x20
0x290: M[V227] = S3
0x291: V228 = 0x40
0x295: V229 = ADD 0x40 V225
0x297: V230 = M[0x40]
0x29a: V231 = SUB V229 V230
0x29c: LOG V230 V231 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f V221
---
Entry stack: [V12, 0x2a3, S4, S3, V166, 0x40c10f19, V193]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x2a3, S4, S3]

================================

Block 0x29d
[0x29d:0x29d]
---
Predecessors: [0x24e, 0x8cb]
Successors: [0x29e]
---
0x29d JUMPDEST
---
0x29d: JUMPDEST 
---
Entry stack: [V12, 0x2a3, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S1, S0]

================================

Block 0x29e
[0x29e:0x29e]
---
Predecessors: [0x29d]
Successors: [0x29f]
---
0x29e JUMPDEST
---
0x29e: JUMPDEST 
---
Entry stack: [V12, 0x2a3, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S1, S0]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x29e]
Successors: [0x2a3]
---
0x29f JUMPDEST
0x2a0 POP
0x2a1 POP
0x2a2 JUMP
---
0x29f: JUMPDEST 
0x2a2: JUMP 0x2a3
---
Entry stack: [V12, 0x2a3, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a3
[0x2a3:0x2a4]
---
Predecessors: [0x29f, 0x6ff, 0x8cb, 0x956, 0xb22]
Successors: []
---
0x2a3 JUMPDEST
0x2a4 STOP
---
0x2a3: JUMPDEST 
0x2a4: STOP 
---
Entry stack: [V12, 0x2a3, V252, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V252, S0]

================================

Block 0x2a5
[0x2a5:0x2ab]
---
Predecessors: [0xb]
Successors: [0x2ac, 0x2b0]
---
0x2a5 JUMPDEST
0x2a6 CALLVALUE
0x2a7 ISZERO
0x2a8 PUSH2 0x2b0
0x2ab JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V232 = CALLVALUE
0x2a7: V233 = ISZERO V232
0x2a8: V234 = 0x2b0
0x2ab: JUMPI 0x2b0 V233
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x2a5]
Successors: []
---
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af REVERT
---
0x2ac: V235 = 0x0
0x2af: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b0
[0x2b0:0x2ba]
---
Predecessors: [0x2a5]
Successors: [0x69f]
---
0x2b0 JUMPDEST
0x2b1 PUSH2 0x2a3
0x2b4 PUSH1 0x4
0x2b6 CALLDATALOAD
0x2b7 PUSH2 0x69f
0x2ba JUMP
---
0x2b0: JUMPDEST 
0x2b1: V236 = 0x2a3
0x2b4: V237 = 0x4
0x2b6: V238 = CALLDATALOAD 0x4
0x2b7: V239 = 0x69f
0x2ba: JUMP 0x69f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3, V238]
Exit stack: [V12, 0x2a3, V238]

================================

Block 0x2bb
[0x2bb:0x2bc]
---
Predecessors: []
Successors: []
---
0x2bb JUMPDEST
0x2bc STOP
---
0x2bb: JUMPDEST 
0x2bc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2bd
[0x2bd:0x2c3]
---
Predecessors: [0x25]
Successors: [0x2c4, 0x2c8]
---
0x2bd JUMPDEST
0x2be CALLVALUE
0x2bf ISZERO
0x2c0 PUSH2 0x2c8
0x2c3 JUMPI
---
0x2bd: JUMPDEST 
0x2be: V240 = CALLVALUE
0x2bf: V241 = ISZERO V240
0x2c0: V242 = 0x2c8
0x2c3: JUMPI 0x2c8 V241
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c4
[0x2c4:0x2c7]
---
Predecessors: [0x2bd]
Successors: []
---
0x2c4 PUSH1 0x0
0x2c6 DUP1
0x2c7 REVERT
---
0x2c4: V243 = 0x0
0x2c7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2db]
---
Predecessors: [0x2bd]
Successors: [0x702]
---
0x2c8 JUMPDEST
0x2c9 PUSH2 0x2a3
0x2cc PUSH1 0x1
0x2ce PUSH1 0xa0
0x2d0 PUSH1 0x2
0x2d2 EXP
0x2d3 SUB
0x2d4 PUSH1 0x4
0x2d6 CALLDATALOAD
0x2d7 AND
0x2d8 PUSH2 0x702
0x2db JUMP
---
0x2c8: JUMPDEST 
0x2c9: V244 = 0x2a3
0x2cc: V245 = 0x1
0x2ce: V246 = 0xa0
0x2d0: V247 = 0x2
0x2d2: V248 = EXP 0x2 0xa0
0x2d3: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d4: V250 = 0x4
0x2d6: V251 = CALLDATALOAD 0x4
0x2d7: V252 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V253 = 0x702
0x2db: JUMP 0x702
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3, V252]
Exit stack: [V12, 0x2a3, V252]

================================

Block 0x2dc
[0x2dc:0x2dd]
---
Predecessors: []
Successors: []
---
0x2dc JUMPDEST
0x2dd STOP
---
0x2dc: JUMPDEST 
0x2dd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2de
[0x2de:0x2e4]
---
Predecessors: [0x30]
Successors: [0x2e5, 0x2e9]
---
0x2de JUMPDEST
0x2df CALLVALUE
0x2e0 ISZERO
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2de: JUMPDEST 
0x2df: V254 = CALLVALUE
0x2e0: V255 = ISZERO V254
0x2e1: V256 = 0x2e9
0x2e4: JUMPI 0x2e9 V255
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2de]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V257 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e9
[0x2e9:0x2f0]
---
Predecessors: [0x2de]
Successors: [0x7b8]
---
0x2e9 JUMPDEST
0x2ea PUSH2 0x2a3
0x2ed PUSH2 0x7b8
0x2f0 JUMP
---
0x2e9: JUMPDEST 
0x2ea: V258 = 0x2a3
0x2ed: V259 = 0x7b8
0x2f0: JUMP 0x7b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3]
Exit stack: [V12, 0x2a3]

================================

Block 0x2f1
[0x2f1:0x2f2]
---
Predecessors: []
Successors: []
---
0x2f1 JUMPDEST
0x2f2 STOP
---
0x2f1: JUMPDEST 
0x2f2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f3
[0x2f3:0x2f9]
---
Predecessors: [0x3b]
Successors: [0x2fa, 0x2fe]
---
0x2f3 JUMPDEST
0x2f4 CALLVALUE
0x2f5 ISZERO
0x2f6 PUSH2 0x2fe
0x2f9 JUMPI
---
0x2f3: JUMPDEST 
0x2f4: V260 = CALLVALUE
0x2f5: V261 = ISZERO V260
0x2f6: V262 = 0x2fe
0x2f9: JUMPI 0x2fe V261
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fa
[0x2fa:0x2fd]
---
Predecessors: [0x2f3]
Successors: []
---
0x2fa PUSH1 0x0
0x2fc DUP1
0x2fd REVERT
---
0x2fa: V263 = 0x0
0x2fd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fe
[0x2fe:0x311]
---
Predecessors: [0x2f3]
Successors: [0x8cd]
---
0x2fe JUMPDEST
0x2ff PUSH2 0x2a3
0x302 PUSH1 0x1
0x304 PUSH1 0xa0
0x306 PUSH1 0x2
0x308 EXP
0x309 SUB
0x30a PUSH1 0x4
0x30c CALLDATALOAD
0x30d AND
0x30e PUSH2 0x8cd
0x311 JUMP
---
0x2fe: JUMPDEST 
0x2ff: V264 = 0x2a3
0x302: V265 = 0x1
0x304: V266 = 0xa0
0x306: V267 = 0x2
0x308: V268 = EXP 0x2 0xa0
0x309: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30a: V270 = 0x4
0x30c: V271 = CALLDATALOAD 0x4
0x30d: V272 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x30e: V273 = 0x8cd
0x311: JUMP 0x8cd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3, V272]
Exit stack: [V12, 0x2a3, V272]

================================

Block 0x312
[0x312:0x313]
---
Predecessors: []
Successors: []
---
0x312 JUMPDEST
0x313 STOP
---
0x312: JUMPDEST 
0x313: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x314
[0x314:0x31a]
---
Predecessors: [0x46]
Successors: [0x31b, 0x31f]
---
0x314 JUMPDEST
0x315 CALLVALUE
0x316 ISZERO
0x317 PUSH2 0x31f
0x31a JUMPI
---
0x314: JUMPDEST 
0x315: V274 = CALLVALUE
0x316: V275 = ISZERO V274
0x317: V276 = 0x31f
0x31a: JUMPI 0x31f V275
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31b
[0x31b:0x31e]
---
Predecessors: [0x314]
Successors: []
---
0x31b PUSH1 0x0
0x31d DUP1
0x31e REVERT
---
0x31b: V277 = 0x0
0x31e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31f
[0x31f:0x326]
---
Predecessors: [0x314]
Successors: [0x95a]
---
0x31f JUMPDEST
0x320 PUSH2 0x327
0x323 PUSH2 0x95a
0x326 JUMP
---
0x31f: JUMPDEST 
0x320: V278 = 0x327
0x323: V279 = 0x95a
0x326: JUMP 0x95a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x327]
Exit stack: [V12, 0x327]

================================

Block 0x327
[0x327:0x338]
---
Predecessors: [0x63b, 0x95a, 0x960, 0x975, 0xa33, 0xa45, 0xa4b, 0xa54]
Successors: []
---
0x327 JUMPDEST
0x328 PUSH1 0x40
0x32a MLOAD
0x32b SWAP1
0x32c DUP2
0x32d MSTORE
0x32e PUSH1 0x20
0x330 ADD
0x331 PUSH1 0x40
0x333 MLOAD
0x334 DUP1
0x335 SWAP2
0x336 SUB
0x337 SWAP1
0x338 RETURN
---
0x327: JUMPDEST 
0x328: V280 = 0x40
0x32a: V281 = M[0x40]
0x32d: M[V281] = S0
0x32e: V282 = 0x20
0x330: V283 = ADD 0x20 V281
0x331: V284 = 0x40
0x333: V285 = M[0x40]
0x336: V286 = SUB V283 V285
0x338: RETURN V285 V286
---
Entry stack: [V12, 0x2a3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a3, S2, S1]

================================

Block 0x339
[0x339:0x33f]
---
Predecessors: [0x51]
Successors: [0x340, 0x344]
---
0x339 JUMPDEST
0x33a CALLVALUE
0x33b ISZERO
0x33c PUSH2 0x344
0x33f JUMPI
---
0x339: JUMPDEST 
0x33a: V287 = CALLVALUE
0x33b: V288 = ISZERO V287
0x33c: V289 = 0x344
0x33f: JUMPI 0x344 V288
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x339]
Successors: []
---
0x340 PUSH1 0x0
0x342 DUP1
0x343 REVERT
---
0x340: V290 = 0x0
0x343: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x344
[0x344:0x34b]
---
Predecessors: [0x339]
Successors: [0x960]
---
0x344 JUMPDEST
0x345 PUSH2 0x327
0x348 PUSH2 0x960
0x34b JUMP
---
0x344: JUMPDEST 
0x345: V291 = 0x327
0x348: V292 = 0x960
0x34b: JUMP 0x960
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x327]
Exit stack: [V12, 0x327]

================================

Block 0x34c
[0x34c:0x35d]
---
Predecessors: []
Successors: []
---
0x34c JUMPDEST
0x34d PUSH1 0x40
0x34f MLOAD
0x350 SWAP1
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x20
0x355 ADD
0x356 PUSH1 0x40
0x358 MLOAD
0x359 DUP1
0x35a SWAP2
0x35b SUB
0x35c SWAP1
0x35d RETURN
---
0x34c: JUMPDEST 
0x34d: V293 = 0x40
0x34f: V294 = M[0x40]
0x352: M[V294] = S0
0x353: V295 = 0x20
0x355: V296 = ADD 0x20 V294
0x356: V297 = 0x40
0x358: V298 = M[0x40]
0x35b: V299 = SUB V296 V298
0x35d: RETURN V298 V299
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35e
[0x35e:0x364]
---
Predecessors: [0x5c]
Successors: [0x365, 0x369]
---
0x35e JUMPDEST
0x35f CALLVALUE
0x360 ISZERO
0x361 PUSH2 0x369
0x364 JUMPI
---
0x35e: JUMPDEST 
0x35f: V300 = CALLVALUE
0x360: V301 = ISZERO V300
0x361: V302 = 0x369
0x364: JUMPI 0x369 V301
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x365
[0x365:0x368]
---
Predecessors: [0x35e]
Successors: []
---
0x365 PUSH1 0x0
0x367 DUP1
0x368 REVERT
---
0x365: V303 = 0x0
0x368: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x369
[0x369:0x370]
---
Predecessors: [0x35e]
Successors: [0x966]
---
0x369 JUMPDEST
0x36a PUSH2 0x371
0x36d PUSH2 0x966
0x370 JUMP
---
0x369: JUMPDEST 
0x36a: V304 = 0x371
0x36d: V305 = 0x966
0x370: JUMP 0x966
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x371]
Exit stack: [V12, 0x371]

================================

Block 0x371
[0x371:0x38c]
---
Predecessors: [0x966, 0xa7d]
Successors: []
---
0x371 JUMPDEST
0x372 PUSH1 0x40
0x374 MLOAD
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d SWAP1
0x37e SWAP2
0x37f AND
0x380 DUP2
0x381 MSTORE
0x382 PUSH1 0x20
0x384 ADD
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 SWAP2
0x38a SUB
0x38b SWAP1
0x38c RETURN
---
0x371: JUMPDEST 
0x372: V306 = 0x40
0x374: V307 = M[0x40]
0x375: V308 = 0x1
0x377: V309 = 0xa0
0x379: V310 = 0x2
0x37b: V311 = EXP 0x2 0xa0
0x37c: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37f: V313 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x381: M[V307] = V313
0x382: V314 = 0x20
0x384: V315 = ADD 0x20 V307
0x385: V316 = 0x40
0x387: V317 = M[0x40]
0x38a: V318 = SUB V315 V317
0x38c: RETURN V317 V318
---
Entry stack: [V12, 0x371, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x371]

================================

Block 0x38d
[0x38d:0x393]
---
Predecessors: [0x67]
Successors: [0x394, 0x398]
---
0x38d JUMPDEST
0x38e CALLVALUE
0x38f ISZERO
0x390 PUSH2 0x398
0x393 JUMPI
---
0x38d: JUMPDEST 
0x38e: V319 = CALLVALUE
0x38f: V320 = ISZERO V319
0x390: V321 = 0x398
0x393: JUMPI 0x398 V320
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x394
[0x394:0x397]
---
Predecessors: [0x38d]
Successors: []
---
0x394 PUSH1 0x0
0x396 DUP1
0x397 REVERT
---
0x394: V322 = 0x0
0x397: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x398
[0x398:0x39f]
---
Predecessors: [0x38d]
Successors: [0x5b2]
---
0x398 JUMPDEST
0x399 PUSH2 0x327
0x39c PUSH2 0x5b2
0x39f JUMP
---
0x398: JUMPDEST 
0x399: V323 = 0x327
0x39c: V324 = 0x5b2
0x39f: JUMP 0x5b2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x327]
Exit stack: [V12, 0x327]

================================

Block 0x3a0
[0x3a0:0x3b1]
---
Predecessors: []
Successors: []
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x40
0x3a3 MLOAD
0x3a4 SWAP1
0x3a5 DUP2
0x3a6 MSTORE
0x3a7 PUSH1 0x20
0x3a9 ADD
0x3aa PUSH1 0x40
0x3ac MLOAD
0x3ad DUP1
0x3ae SWAP2
0x3af SUB
0x3b0 SWAP1
0x3b1 RETURN
---
0x3a0: JUMPDEST 
0x3a1: V325 = 0x40
0x3a3: V326 = M[0x40]
0x3a6: M[V326] = S0
0x3a7: V327 = 0x20
0x3a9: V328 = ADD 0x20 V326
0x3aa: V329 = 0x40
0x3ac: V330 = M[0x40]
0x3af: V331 = SUB V328 V330
0x3b1: RETURN V330 V331
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b2
[0x3b2:0x3b8]
---
Predecessors: [0x72]
Successors: [0x3b9, 0x3bd]
---
0x3b2 JUMPDEST
0x3b3 CALLVALUE
0x3b4 ISZERO
0x3b5 PUSH2 0x3bd
0x3b8 JUMPI
---
0x3b2: JUMPDEST 
0x3b3: V332 = CALLVALUE
0x3b4: V333 = ISZERO V332
0x3b5: V334 = 0x3bd
0x3b8: JUMPI 0x3bd V333
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b9
[0x3b9:0x3bc]
---
Predecessors: [0x3b2]
Successors: []
---
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc REVERT
---
0x3b9: V335 = 0x0
0x3bc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3bd
[0x3bd:0x3c4]
---
Predecessors: [0x3b2]
Successors: [0x975]
---
0x3bd JUMPDEST
0x3be PUSH2 0x327
0x3c1 PUSH2 0x975
0x3c4 JUMP
---
0x3bd: JUMPDEST 
0x3be: V336 = 0x327
0x3c1: V337 = 0x975
0x3c4: JUMP 0x975
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x327]
Exit stack: [V12, 0x327]

================================

Block 0x3c5
[0x3c5:0x3d6]
---
Predecessors: []
Successors: []
---
0x3c5 JUMPDEST
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 SWAP1
0x3ca DUP2
0x3cb MSTORE
0x3cc PUSH1 0x20
0x3ce ADD
0x3cf PUSH1 0x40
0x3d1 MLOAD
0x3d2 DUP1
0x3d3 SWAP2
0x3d4 SUB
0x3d5 SWAP1
0x3d6 RETURN
---
0x3c5: JUMPDEST 
0x3c6: V338 = 0x40
0x3c8: V339 = M[0x40]
0x3cb: M[V339] = S0
0x3cc: V340 = 0x20
0x3ce: V341 = ADD 0x20 V339
0x3cf: V342 = 0x40
0x3d1: V343 = M[0x40]
0x3d4: V344 = SUB V341 V343
0x3d6: RETURN V343 V344
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3d7
[0x3d7:0x3dd]
---
Predecessors: [0x7d]
Successors: [0x3de, 0x3e2]
---
0x3d7 JUMPDEST
0x3d8 CALLVALUE
0x3d9 ISZERO
0x3da PUSH2 0x3e2
0x3dd JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V345 = CALLVALUE
0x3d9: V346 = ISZERO V345
0x3da: V347 = 0x3e2
0x3dd: JUMPI 0x3e2 V346
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3de
[0x3de:0x3e1]
---
Predecessors: [0x3d7]
Successors: []
---
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 REVERT
---
0x3de: V348 = 0x0
0x3e1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e2
[0x3e2:0x3e9]
---
Predecessors: [0x3d7]
Successors: [0x97b]
---
0x3e2 JUMPDEST
0x3e3 PUSH2 0x3ea
0x3e6 PUSH2 0x97b
0x3e9 JUMP
---
0x3e2: JUMPDEST 
0x3e3: V349 = 0x3ea
0x3e6: V350 = 0x97b
0x3e9: JUMP 0x97b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3ea]
Exit stack: [V12, 0x3ea]

================================

Block 0x3ea
[0x3ea:0x3fd]
---
Predecessors: [0x5af, 0x97b]
Successors: []
---
0x3ea JUMPDEST
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee SWAP1
0x3ef ISZERO
0x3f0 ISZERO
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 PUSH1 0x40
0x3f8 MLOAD
0x3f9 DUP1
0x3fa SWAP2
0x3fb SUB
0x3fc SWAP1
0x3fd RETURN
---
0x3ea: JUMPDEST 
0x3eb: V351 = 0x40
0x3ed: V352 = M[0x40]
0x3ef: V353 = ISZERO S0
0x3f0: V354 = ISZERO V353
0x3f2: M[V352] = V354
0x3f3: V355 = 0x20
0x3f5: V356 = ADD 0x20 V352
0x3f6: V357 = 0x40
0x3f8: V358 = M[0x40]
0x3fb: V359 = SUB V356 V358
0x3fd: RETURN V358 V359
---
Entry stack: [V12, 0x2a3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a3, S2, S1]

================================

Block 0x3fe
[0x3fe:0x404]
---
Predecessors: [0x88]
Successors: [0x405, 0x409]
---
0x3fe JUMPDEST
0x3ff CALLVALUE
0x400 ISZERO
0x401 PUSH2 0x409
0x404 JUMPI
---
0x3fe: JUMPDEST 
0x3ff: V360 = CALLVALUE
0x400: V361 = ISZERO V360
0x401: V362 = 0x409
0x404: JUMPI 0x409 V361
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x405
[0x405:0x408]
---
Predecessors: [0x3fe]
Successors: []
---
0x405 PUSH1 0x0
0x407 DUP1
0x408 REVERT
---
0x405: V363 = 0x0
0x408: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x409
[0x409:0x410]
---
Predecessors: [0x3fe]
Successors: [0x984]
---
0x409 JUMPDEST
0x40a PUSH2 0x2a3
0x40d PUSH2 0x984
0x410 JUMP
---
0x409: JUMPDEST 
0x40a: V364 = 0x2a3
0x40d: V365 = 0x984
0x410: JUMP 0x984
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3]
Exit stack: [V12, 0x2a3]

================================

Block 0x411
[0x411:0x412]
---
Predecessors: []
Successors: []
---
0x411 JUMPDEST
0x412 STOP
---
0x411: JUMPDEST 
0x412: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x413
[0x413:0x419]
---
Predecessors: [0x93]
Successors: [0x41a, 0x41e]
---
0x413 JUMPDEST
0x414 CALLVALUE
0x415 ISZERO
0x416 PUSH2 0x41e
0x419 JUMPI
---
0x413: JUMPDEST 
0x414: V366 = CALLVALUE
0x415: V367 = ISZERO V366
0x416: V368 = 0x41e
0x419: JUMPI 0x41e V367
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41a
[0x41a:0x41d]
---
Predecessors: [0x413]
Successors: []
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
---
0x41a: V369 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41e
[0x41e:0x425]
---
Predecessors: [0x413]
Successors: [0x57a]
---
0x41e JUMPDEST
0x41f PUSH2 0x3ea
0x422 PUSH2 0x57a
0x425 JUMP
---
0x41e: JUMPDEST 
0x41f: V370 = 0x3ea
0x422: V371 = 0x57a
0x425: JUMP 0x57a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3ea]
Exit stack: [V12, 0x3ea]

================================

Block 0x426
[0x426:0x439]
---
Predecessors: []
Successors: []
---
0x426 JUMPDEST
0x427 PUSH1 0x40
0x429 MLOAD
0x42a SWAP1
0x42b ISZERO
0x42c ISZERO
0x42d DUP2
0x42e MSTORE
0x42f PUSH1 0x20
0x431 ADD
0x432 PUSH1 0x40
0x434 MLOAD
0x435 DUP1
0x436 SWAP2
0x437 SUB
0x438 SWAP1
0x439 RETURN
---
0x426: JUMPDEST 
0x427: V372 = 0x40
0x429: V373 = M[0x40]
0x42b: V374 = ISZERO S0
0x42c: V375 = ISZERO V374
0x42e: M[V373] = V375
0x42f: V376 = 0x20
0x431: V377 = ADD 0x20 V373
0x432: V378 = 0x40
0x434: V379 = M[0x40]
0x437: V380 = SUB V377 V379
0x439: RETURN V379 V380
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x43a
[0x43a:0x440]
---
Predecessors: [0x9e]
Successors: [0x441, 0x445]
---
0x43a JUMPDEST
0x43b CALLVALUE
0x43c ISZERO
0x43d PUSH2 0x445
0x440 JUMPI
---
0x43a: JUMPDEST 
0x43b: V381 = CALLVALUE
0x43c: V382 = ISZERO V381
0x43d: V383 = 0x445
0x440: JUMPI 0x445 V382
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x441
[0x441:0x444]
---
Predecessors: [0x43a]
Successors: []
---
0x441 PUSH1 0x0
0x443 DUP1
0x444 REVERT
---
0x441: V384 = 0x0
0x444: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x445
[0x445:0x44f]
---
Predecessors: [0x43a]
Successors: [0xa17]
---
0x445 JUMPDEST
0x446 PUSH2 0x327
0x449 PUSH1 0x4
0x44b CALLDATALOAD
0x44c PUSH2 0xa17
0x44f JUMP
---
0x445: JUMPDEST 
0x446: V385 = 0x327
0x449: V386 = 0x4
0x44b: V387 = CALLDATALOAD 0x4
0x44c: V388 = 0xa17
0x44f: JUMP 0xa17
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x327, V387]
Exit stack: [V12, 0x327, V387]

================================

Block 0x450
[0x450:0x461]
---
Predecessors: []
Successors: []
---
0x450 JUMPDEST
0x451 PUSH1 0x40
0x453 MLOAD
0x454 SWAP1
0x455 DUP2
0x456 MSTORE
0x457 PUSH1 0x20
0x459 ADD
0x45a PUSH1 0x40
0x45c MLOAD
0x45d DUP1
0x45e SWAP2
0x45f SUB
0x460 SWAP1
0x461 RETURN
---
0x450: JUMPDEST 
0x451: V389 = 0x40
0x453: V390 = M[0x40]
0x456: M[V390] = S0
0x457: V391 = 0x20
0x459: V392 = ADD 0x20 V390
0x45a: V393 = 0x40
0x45c: V394 = M[0x40]
0x45f: V395 = SUB V392 V394
0x461: RETURN V394 V395
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x462
[0x462:0x468]
---
Predecessors: [0xa9]
Successors: [0x469, 0x46d]
---
0x462 JUMPDEST
0x463 CALLVALUE
0x464 ISZERO
0x465 PUSH2 0x46d
0x468 JUMPI
---
0x462: JUMPDEST 
0x463: V396 = CALLVALUE
0x464: V397 = ISZERO V396
0x465: V398 = 0x46d
0x468: JUMPI 0x46d V397
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x469
[0x469:0x46c]
---
Predecessors: [0x462]
Successors: []
---
0x469 PUSH1 0x0
0x46b DUP1
0x46c REVERT
---
0x469: V399 = 0x0
0x46c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x46d
[0x46d:0x490]
---
Predecessors: [0x462]
Successors: [0xa3a]
---
0x46d JUMPDEST
0x46e PUSH2 0x2a3
0x471 PUSH1 0x4
0x473 DUP1
0x474 CALLDATALOAD
0x475 PUSH1 0x1
0x477 PUSH1 0xa0
0x479 PUSH1 0x2
0x47b EXP
0x47c SUB
0x47d AND
0x47e SWAP1
0x47f PUSH1 0x24
0x481 DUP1
0x482 CALLDATALOAD
0x483 SWAP2
0x484 PUSH1 0x44
0x486 CALLDATALOAD
0x487 SWAP2
0x488 DUP3
0x489 ADD
0x48a SWAP2
0x48b ADD
0x48c CALLDATALOAD
0x48d PUSH2 0xa3a
0x490 JUMP
---
0x46d: JUMPDEST 
0x46e: V400 = 0x2a3
0x471: V401 = 0x4
0x474: V402 = CALLDATALOAD 0x4
0x475: V403 = 0x1
0x477: V404 = 0xa0
0x479: V405 = 0x2
0x47b: V406 = EXP 0x2 0xa0
0x47c: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47d: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x47f: V409 = 0x24
0x482: V410 = CALLDATALOAD 0x24
0x484: V411 = 0x44
0x486: V412 = CALLDATALOAD 0x44
0x489: V413 = ADD V412 0x24
0x48b: V414 = ADD V412 0x4
0x48c: V415 = CALLDATALOAD V414
0x48d: V416 = 0xa3a
0x490: JUMP 0xa3a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3, V408, V410, V413, V415]
Exit stack: [V12, 0x2a3, V408, V410, V413, V415]

================================

Block 0x491
[0x491:0x492]
---
Predecessors: []
Successors: []
---
0x491 JUMPDEST
0x492 STOP
---
0x491: JUMPDEST 
0x492: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x493
[0x493:0x499]
---
Predecessors: [0xb4]
Successors: [0x49a, 0x49e]
---
0x493 JUMPDEST
0x494 CALLVALUE
0x495 ISZERO
0x496 PUSH2 0x49e
0x499 JUMPI
---
0x493: JUMPDEST 
0x494: V417 = CALLVALUE
0x495: V418 = ISZERO V417
0x496: V419 = 0x49e
0x499: JUMPI 0x49e V418
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x49a
[0x49a:0x49d]
---
Predecessors: [0x493]
Successors: []
---
0x49a PUSH1 0x0
0x49c DUP1
0x49d REVERT
---
0x49a: V420 = 0x0
0x49d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x49e
[0x49e:0x4a5]
---
Predecessors: [0x493]
Successors: [0xa45]
---
0x49e JUMPDEST
0x49f PUSH2 0x327
0x4a2 PUSH2 0xa45
0x4a5 JUMP
---
0x49e: JUMPDEST 
0x49f: V421 = 0x327
0x4a2: V422 = 0xa45
0x4a5: JUMP 0xa45
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x327]
Exit stack: [V12, 0x327]

================================

Block 0x4a6
[0x4a6:0x4b7]
---
Predecessors: []
Successors: []
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x40
0x4a9 MLOAD
0x4aa SWAP1
0x4ab DUP2
0x4ac MSTORE
0x4ad PUSH1 0x20
0x4af ADD
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 DUP1
0x4b4 SWAP2
0x4b5 SUB
0x4b6 SWAP1
0x4b7 RETURN
---
0x4a6: JUMPDEST 
0x4a7: V423 = 0x40
0x4a9: V424 = M[0x40]
0x4ac: M[V424] = S0
0x4ad: V425 = 0x20
0x4af: V426 = ADD 0x20 V424
0x4b0: V427 = 0x40
0x4b2: V428 = M[0x40]
0x4b5: V429 = SUB V426 V428
0x4b7: RETURN V428 V429
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4b8
[0x4b8:0x4be]
---
Predecessors: [0xbf]
Successors: [0x4bf, 0x4c3]
---
0x4b8 JUMPDEST
0x4b9 CALLVALUE
0x4ba ISZERO
0x4bb PUSH2 0x4c3
0x4be JUMPI
---
0x4b8: JUMPDEST 
0x4b9: V430 = CALLVALUE
0x4ba: V431 = ISZERO V430
0x4bb: V432 = 0x4c3
0x4be: JUMPI 0x4c3 V431
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4bf
[0x4bf:0x4c2]
---
Predecessors: [0x4b8]
Successors: []
---
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 REVERT
---
0x4bf: V433 = 0x0
0x4c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c3
[0x4c3:0x4ca]
---
Predecessors: [0x4b8]
Successors: [0xa4b]
---
0x4c3 JUMPDEST
0x4c4 PUSH2 0x327
0x4c7 PUSH2 0xa4b
0x4ca JUMP
---
0x4c3: JUMPDEST 
0x4c4: V434 = 0x327
0x4c7: V435 = 0xa4b
0x4ca: JUMP 0xa4b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x327]
Exit stack: [V12, 0x327]

================================

Block 0x4cb
[0x4cb:0x4dc]
---
Predecessors: []
Successors: []
---
0x4cb JUMPDEST
0x4cc PUSH1 0x40
0x4ce MLOAD
0x4cf SWAP1
0x4d0 DUP2
0x4d1 MSTORE
0x4d2 PUSH1 0x20
0x4d4 ADD
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 SWAP2
0x4da SUB
0x4db SWAP1
0x4dc RETURN
---
0x4cb: JUMPDEST 
0x4cc: V436 = 0x40
0x4ce: V437 = M[0x40]
0x4d1: M[V437] = S0
0x4d2: V438 = 0x20
0x4d4: V439 = ADD 0x20 V437
0x4d5: V440 = 0x40
0x4d7: V441 = M[0x40]
0x4da: V442 = SUB V439 V441
0x4dc: RETURN V441 V442
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4dd
[0x4dd:0x4e3]
---
Predecessors: [0xca]
Successors: [0x4e4, 0x4e8]
---
0x4dd JUMPDEST
0x4de CALLVALUE
0x4df ISZERO
0x4e0 PUSH2 0x4e8
0x4e3 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V443 = CALLVALUE
0x4df: V444 = ISZERO V443
0x4e0: V445 = 0x4e8
0x4e3: JUMPI 0x4e8 V444
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e4
[0x4e4:0x4e7]
---
Predecessors: [0x4dd]
Successors: []
---
0x4e4 PUSH1 0x0
0x4e6 DUP1
0x4e7 REVERT
---
0x4e4: V446 = 0x0
0x4e7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e8
[0x4e8:0x4ef]
---
Predecessors: [0x4dd]
Successors: [0xa54]
---
0x4e8 JUMPDEST
0x4e9 PUSH2 0x327
0x4ec PUSH2 0xa54
0x4ef JUMP
---
0x4e8: JUMPDEST 
0x4e9: V447 = 0x327
0x4ec: V448 = 0xa54
0x4ef: JUMP 0xa54
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x327]
Exit stack: [V12, 0x327]

================================

Block 0x4f0
[0x4f0:0x501]
---
Predecessors: []
Successors: []
---
0x4f0 JUMPDEST
0x4f1 PUSH1 0x40
0x4f3 MLOAD
0x4f4 SWAP1
0x4f5 DUP2
0x4f6 MSTORE
0x4f7 PUSH1 0x20
0x4f9 ADD
0x4fa PUSH1 0x40
0x4fc MLOAD
0x4fd DUP1
0x4fe SWAP2
0x4ff SUB
0x500 SWAP1
0x501 RETURN
---
0x4f0: JUMPDEST 
0x4f1: V449 = 0x40
0x4f3: V450 = M[0x40]
0x4f6: M[V450] = S0
0x4f7: V451 = 0x20
0x4f9: V452 = ADD 0x20 V450
0x4fa: V453 = 0x40
0x4fc: V454 = M[0x40]
0x4ff: V455 = SUB V452 V454
0x501: RETURN V454 V455
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x502
[0x502:0x508]
---
Predecessors: [0xd5]
Successors: [0x509, 0x50d]
---
0x502 JUMPDEST
0x503 CALLVALUE
0x504 ISZERO
0x505 PUSH2 0x50d
0x508 JUMPI
---
0x502: JUMPDEST 
0x503: V456 = CALLVALUE
0x504: V457 = ISZERO V456
0x505: V458 = 0x50d
0x508: JUMPI 0x50d V457
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x509
[0x509:0x50c]
---
Predecessors: [0x502]
Successors: []
---
0x509 PUSH1 0x0
0x50b DUP1
0x50c REVERT
---
0x509: V459 = 0x0
0x50c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x50d
[0x50d:0x517]
---
Predecessors: [0x502]
Successors: [0xa5a]
---
0x50d JUMPDEST
0x50e PUSH2 0x327
0x511 PUSH1 0x4
0x513 CALLDATALOAD
0x514 PUSH2 0xa5a
0x517 JUMP
---
0x50d: JUMPDEST 
0x50e: V460 = 0x327
0x511: V461 = 0x4
0x513: V462 = CALLDATALOAD 0x4
0x514: V463 = 0xa5a
0x517: JUMP 0xa5a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x327, V462]
Exit stack: [V12, 0x327, V462]

================================

Block 0x518
[0x518:0x529]
---
Predecessors: []
Successors: []
---
0x518 JUMPDEST
0x519 PUSH1 0x40
0x51b MLOAD
0x51c SWAP1
0x51d DUP2
0x51e MSTORE
0x51f PUSH1 0x20
0x521 ADD
0x522 PUSH1 0x40
0x524 MLOAD
0x525 DUP1
0x526 SWAP2
0x527 SUB
0x528 SWAP1
0x529 RETURN
---
0x518: JUMPDEST 
0x519: V464 = 0x40
0x51b: V465 = M[0x40]
0x51e: M[V465] = S0
0x51f: V466 = 0x20
0x521: V467 = ADD 0x20 V465
0x522: V468 = 0x40
0x524: V469 = M[0x40]
0x527: V470 = SUB V467 V469
0x529: RETURN V469 V470
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x52a
[0x52a:0x530]
---
Predecessors: [0xe0]
Successors: [0x531, 0x535]
---
0x52a JUMPDEST
0x52b CALLVALUE
0x52c ISZERO
0x52d PUSH2 0x535
0x530 JUMPI
---
0x52a: JUMPDEST 
0x52b: V471 = CALLVALUE
0x52c: V472 = ISZERO V471
0x52d: V473 = 0x535
0x530: JUMPI 0x535 V472
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x531
[0x531:0x534]
---
Predecessors: [0x52a]
Successors: []
---
0x531 PUSH1 0x0
0x533 DUP1
0x534 REVERT
---
0x531: V474 = 0x0
0x534: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x535
[0x535:0x53c]
---
Predecessors: [0x52a]
Successors: [0xa7d]
---
0x535 JUMPDEST
0x536 PUSH2 0x371
0x539 PUSH2 0xa7d
0x53c JUMP
---
0x535: JUMPDEST 
0x536: V475 = 0x371
0x539: V476 = 0xa7d
0x53c: JUMP 0xa7d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x371]
Exit stack: [V12, 0x371]

================================

Block 0x53d
[0x53d:0x558]
---
Predecessors: []
Successors: []
---
0x53d JUMPDEST
0x53e PUSH1 0x40
0x540 MLOAD
0x541 PUSH1 0x1
0x543 PUSH1 0xa0
0x545 PUSH1 0x2
0x547 EXP
0x548 SUB
0x549 SWAP1
0x54a SWAP2
0x54b AND
0x54c DUP2
0x54d MSTORE
0x54e PUSH1 0x20
0x550 ADD
0x551 PUSH1 0x40
0x553 MLOAD
0x554 DUP1
0x555 SWAP2
0x556 SUB
0x557 SWAP1
0x558 RETURN
---
0x53d: JUMPDEST 
0x53e: V477 = 0x40
0x540: V478 = M[0x40]
0x541: V479 = 0x1
0x543: V480 = 0xa0
0x545: V481 = 0x2
0x547: V482 = EXP 0x2 0xa0
0x548: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54b: V484 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x54d: M[V478] = V484
0x54e: V485 = 0x20
0x550: V486 = ADD 0x20 V478
0x551: V487 = 0x40
0x553: V488 = M[0x40]
0x556: V489 = SUB V486 V488
0x558: RETURN V488 V489
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x559
[0x559:0x55f]
---
Predecessors: [0xeb]
Successors: [0x560, 0x564]
---
0x559 JUMPDEST
0x55a CALLVALUE
0x55b ISZERO
0x55c PUSH2 0x564
0x55f JUMPI
---
0x559: JUMPDEST 
0x55a: V490 = CALLVALUE
0x55b: V491 = ISZERO V490
0x55c: V492 = 0x564
0x55f: JUMPI 0x564 V491
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x560
[0x560:0x563]
---
Predecessors: [0x559]
Successors: []
---
0x560 PUSH1 0x0
0x562 DUP1
0x563 REVERT
---
0x560: V493 = 0x0
0x563: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x564
[0x564:0x577]
---
Predecessors: [0x559]
Successors: [0xa8c]
---
0x564 JUMPDEST
0x565 PUSH2 0x2a3
0x568 PUSH1 0x1
0x56a PUSH1 0xa0
0x56c PUSH1 0x2
0x56e EXP
0x56f SUB
0x570 PUSH1 0x4
0x572 CALLDATALOAD
0x573 AND
0x574 PUSH2 0xa8c
0x577 JUMP
---
0x564: JUMPDEST 
0x565: V494 = 0x2a3
0x568: V495 = 0x1
0x56a: V496 = 0xa0
0x56c: V497 = 0x2
0x56e: V498 = EXP 0x2 0xa0
0x56f: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x570: V500 = 0x4
0x572: V501 = CALLDATALOAD 0x4
0x573: V502 = AND V501 0xffffffffffffffffffffffffffffffffffffffff
0x574: V503 = 0xa8c
0x577: JUMP 0xa8c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3, V502]
Exit stack: [V12, 0x2a3, V502]

================================

Block 0x578
[0x578:0x579]
---
Predecessors: []
Successors: []
---
0x578 JUMPDEST
0x579 STOP
---
0x578: JUMPDEST 
0x579: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x57a
[0x57a:0x587]
---
Predecessors: [0x10c, 0x41e]
Successors: [0x588, 0x58f]
---
0x57a JUMPDEST
0x57b PUSH1 0x0
0x57d PUSH1 0x4
0x57f SLOAD
0x580 TIMESTAMP
0x581 GT
0x582 DUP1
0x583 ISZERO
0x584 PUSH2 0x58f
0x587 JUMPI
---
0x57a: JUMPDEST 
0x57b: V504 = 0x0
0x57d: V505 = 0x4
0x57f: V506 = S[0x4]
0x580: V507 = TIMESTAMP
0x581: V508 = GT V507 V506
0x583: V509 = ISZERO V508
0x584: V510 = 0x58f
0x587: JUMPI 0x58f V509
---
Entry stack: [V12, 0x2a3, 0x0, S1, {0x114, 0x3ea}]
Stack pops: 0
Stack additions: [0x0, V508]
Exit stack: [V12, 0x2a3, 0x0, S1, {0x114, 0x3ea}, 0x0, V508]

================================

Block 0x588
[0x588:0x58e]
---
Predecessors: [0x57a]
Successors: [0x58f]
---
0x588 POP
0x589 PUSH1 0x5
0x58b SLOAD
0x58c TIMESTAMP
0x58d GT
0x58e ISZERO
---
0x589: V511 = 0x5
0x58b: V512 = S[0x5]
0x58c: V513 = TIMESTAMP
0x58d: V514 = GT V513 V512
0x58e: V515 = ISZERO V514
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, V508]
Stack pops: 1
Stack additions: [V515]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, V515]

================================

Block 0x58f
[0x58f:0x595]
---
Predecessors: [0x57a, 0x588]
Successors: [0x596, 0x59d]
---
0x58f JUMPDEST
0x590 DUP1
0x591 ISZERO
0x592 PUSH2 0x59d
0x595 JUMPI
---
0x58f: JUMPDEST 
0x591: V516 = ISZERO S0
0x592: V517 = 0x59d
0x595: JUMPI 0x59d V516
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, S0]

================================

Block 0x596
[0x596:0x59c]
---
Predecessors: [0x58f]
Successors: [0x59d]
---
0x596 POP
0x597 PUSH1 0x0
0x599 PUSH1 0x3
0x59b SLOAD
0x59c GT
---
0x597: V518 = 0x0
0x599: V519 = 0x3
0x59b: V520 = S[0x3]
0x59c: V521 = GT V520 0x0
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, S0]
Stack pops: 1
Stack additions: [V521]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, V521]

================================

Block 0x59d
[0x59d:0x5a3]
---
Predecessors: [0x58f, 0x596]
Successors: [0x5a4, 0x5ac]
---
0x59d JUMPDEST
0x59e DUP1
0x59f ISZERO
0x5a0 PUSH2 0x5ac
0x5a3 JUMPI
---
0x59d: JUMPDEST 
0x59f: V522 = ISZERO S0
0x5a0: V523 = 0x5ac
0x5a3: JUMPI 0x5ac V522
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, S0]

================================

Block 0x5a4
[0x5a4:0x5ab]
---
Predecessors: [0x59d]
Successors: [0x5ac]
---
0x5a4 POP
0x5a5 PUSH1 0x9
0x5a7 SLOAD
0x5a8 PUSH1 0xff
0x5aa AND
0x5ab ISZERO
---
0x5a5: V524 = 0x9
0x5a7: V525 = S[0x9]
0x5a8: V526 = 0xff
0x5aa: V527 = AND 0xff V525
0x5ab: V528 = ISZERO V527
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, S0]
Stack pops: 1
Stack additions: [V528]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, V528]

================================

Block 0x5ac
[0x5ac:0x5ae]
---
Predecessors: [0x59d, 0x5a4]
Successors: [0x5af]
---
0x5ac JUMPDEST
0x5ad SWAP1
0x5ae POP
---
0x5ac: JUMPDEST 
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x114, 0x3ea}, S0]

================================

Block 0x5af
[0x5af:0x5b1]
---
Predecessors: [0x5ac]
Successors: [0x114, 0x3ea]
---
0x5af JUMPDEST
0x5b0 SWAP1
0x5b1 JUMP
---
0x5af: JUMPDEST 
0x5b1: JUMP {0x114, 0x3ea}
---
Entry stack: [V12, 0x2a3, 0x0, S2, {0x114, 0x3ea}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x2a3, 0x0, S2, S0]

================================

Block 0x5b2
[0x5b2:0x5bf]
---
Predecessors: [0x12c, 0x398]
Successors: [0x5c0, 0x5c7]
---
0x5b2 JUMPDEST
0x5b3 PUSH1 0x0
0x5b5 DUP1
0x5b6 PUSH1 0x4
0x5b8 SLOAD
0x5b9 TIMESTAMP
0x5ba LT
0x5bb DUP1
0x5bc PUSH2 0x5c7
0x5bf JUMPI
---
0x5b2: JUMPDEST 
0x5b3: V529 = 0x0
0x5b6: V530 = 0x4
0x5b8: V531 = S[0x4]
0x5b9: V532 = TIMESTAMP
0x5ba: V533 = LT V532 V531
0x5bc: V534 = 0x5c7
0x5bf: JUMPI 0x5c7 V533
---
Entry stack: [V12, 0x2a3, 0x0, S1, {0x134, 0x327}]
Stack pops: 0
Stack additions: [0x0, 0x0, V533]
Exit stack: [V12, 0x2a3, 0x0, S1, {0x134, 0x327}, 0x0, 0x0, V533]

================================

Block 0x5c0
[0x5c0:0x5c6]
---
Predecessors: [0x5b2]
Successors: [0x5c7]
---
0x5c0 POP
0x5c1 PUSH1 0x9
0x5c3 SLOAD
0x5c4 PUSH1 0xff
0x5c6 AND
---
0x5c1: V535 = 0x9
0x5c3: V536 = S[0x9]
0x5c4: V537 = 0xff
0x5c6: V538 = AND 0xff V536
---
Entry stack: [V12, 0x2a3, 0x0, S4, {0x134, 0x327}, 0x0, 0x0, V533]
Stack pops: 1
Stack additions: [V538]
Exit stack: [V12, 0x2a3, 0x0, S4, {0x134, 0x327}, 0x0, 0x0, V538]

================================

Block 0x5c7
[0x5c7:0x5cc]
---
Predecessors: [0x5b2, 0x5c0]
Successors: [0x5cd, 0x5d5]
---
0x5c7 JUMPDEST
0x5c8 ISZERO
0x5c9 PUSH2 0x5d5
0x5cc JUMPI
---
0x5c7: JUMPDEST 
0x5c8: V539 = ISZERO S0
0x5c9: V540 = 0x5d5
0x5cc: JUMPI 0x5d5 V539
---
Entry stack: [V12, 0x2a3, 0x0, S4, {0x134, 0x327}, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, S4, {0x134, 0x327}, 0x0, 0x0]

================================

Block 0x5cd
[0x5cd:0x5d4]
---
Predecessors: [0x5c7]
Successors: [0x63b]
---
0x5cd PUSH1 0x0
0x5cf SWAP2
0x5d0 POP
0x5d1 PUSH2 0x63b
0x5d4 JUMP
---
0x5cd: V541 = 0x0
0x5d1: V542 = 0x63b
0x5d4: JUMP 0x63b
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, 0x0]

================================

Block 0x5d5
[0x5d5:0x5d8]
---
Predecessors: [0x5c7]
Successors: [0x5d9]
---
0x5d5 JUMPDEST
0x5d6 POP
0x5d7 PUSH1 0x0
---
0x5d5: JUMPDEST 
0x5d7: V543 = 0x0
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, 0x0]

================================

Block 0x5d9
[0x5d9:0x5e3]
---
Predecessors: [0x5d5, 0x62e]
Successors: [0x5e4, 0x636]
---
0x5d9 JUMPDEST
0x5da PUSH1 0x7
0x5dc SLOAD
0x5dd DUP2
0x5de LT
0x5df ISZERO
0x5e0 PUSH2 0x636
0x5e3 JUMPI
---
0x5d9: JUMPDEST 
0x5da: V544 = 0x7
0x5dc: V545 = S[0x7]
0x5de: V546 = LT S0 V545
0x5df: V547 = ISZERO V546
0x5e0: V548 = 0x636
0x5e3: JUMPI 0x636 V547
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0]

================================

Block 0x5e4
[0x5e4:0x5ef]
---
Predecessors: [0x5d9]
Successors: [0x5f0, 0x5f1]
---
0x5e4 PUSH1 0x7
0x5e6 DUP1
0x5e7 SLOAD
0x5e8 DUP3
0x5e9 SWAP1
0x5ea DUP2
0x5eb LT
0x5ec PUSH2 0x5f1
0x5ef JUMPI
---
0x5e4: V549 = 0x7
0x5e7: V550 = S[0x7]
0x5eb: V551 = LT S0 V550
0x5ec: V552 = 0x5f1
0x5ef: JUMPI 0x5f1 V551
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0]
Stack pops: 1
Stack additions: [S0, 0x7, S0]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0, 0x7, S0]

================================

Block 0x5f0
[0x5f0:0x5f0]
---
Predecessors: [0x5e4]
Successors: []
---
0x5f0 INVALID
---
0x5f0: INVALID 
---
Entry stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, 0x7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, 0x7, S0]

================================

Block 0x5f1
[0x5f1:0x5fe]
---
Predecessors: [0x5e4]
Successors: [0x5ff]
---
0x5f1 JUMPDEST
0x5f2 SWAP1
0x5f3 PUSH1 0x0
0x5f5 MSTORE
0x5f6 PUSH1 0x20
0x5f8 PUSH1 0x0
0x5fa SHA3
0x5fb SWAP1
0x5fc ADD
0x5fd PUSH1 0x0
---
0x5f1: JUMPDEST 
0x5f3: V553 = 0x0
0x5f5: M[0x0] = 0x7
0x5f6: V554 = 0x20
0x5f8: V555 = 0x0
0x5fa: V556 = SHA3 0x0 0x20
0x5fc: V557 = ADD S0 V556
0x5fd: V558 = 0x0
---
Entry stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, 0x7, S0]
Stack pops: 2
Stack additions: [V557, 0x0]
Exit stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, V557, 0x0]

================================

Block 0x5ff
[0x5ff:0x608]
---
Predecessors: [0x5f1]
Successors: [0x609, 0x62d]
---
0x5ff JUMPDEST
0x600 POP
0x601 SLOAD
0x602 TIMESTAMP
0x603 LT
0x604 ISZERO
0x605 PUSH2 0x62d
0x608 JUMPI
---
0x5ff: JUMPDEST 
0x601: V559 = S[V557]
0x602: V560 = TIMESTAMP
0x603: V561 = LT V560 V559
0x604: V562 = ISZERO V561
0x605: V563 = 0x62d
0x608: JUMPI 0x62d V562
---
Entry stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, V557, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2]

================================

Block 0x609
[0x609:0x614]
---
Predecessors: [0x5ff]
Successors: [0x615, 0x616]
---
0x609 PUSH1 0x8
0x60b DUP1
0x60c SLOAD
0x60d DUP3
0x60e SWAP1
0x60f DUP2
0x610 LT
0x611 PUSH2 0x616
0x614 JUMPI
---
0x609: V564 = 0x8
0x60c: V565 = S[0x8]
0x610: V566 = LT S0 V565
0x611: V567 = 0x616
0x614: JUMPI 0x616 V566
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0]
Stack pops: 1
Stack additions: [S0, 0x8, S0]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0, 0x8, S0]

================================

Block 0x615
[0x615:0x615]
---
Predecessors: [0x609]
Successors: []
---
0x615 INVALID
---
0x615: INVALID 
---
Entry stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, 0x8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, 0x8, S0]

================================

Block 0x616
[0x616:0x623]
---
Predecessors: [0x609]
Successors: [0x624]
---
0x616 JUMPDEST
0x617 SWAP1
0x618 PUSH1 0x0
0x61a MSTORE
0x61b PUSH1 0x20
0x61d PUSH1 0x0
0x61f SHA3
0x620 SWAP1
0x621 ADD
0x622 PUSH1 0x0
---
0x616: JUMPDEST 
0x618: V568 = 0x0
0x61a: M[0x0] = 0x8
0x61b: V569 = 0x20
0x61d: V570 = 0x0
0x61f: V571 = SHA3 0x0 0x20
0x621: V572 = ADD S0 V571
0x622: V573 = 0x0
---
Entry stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, 0x8, S0]
Stack pops: 2
Stack additions: [V572, 0x0]
Exit stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, V572, 0x0]

================================

Block 0x624
[0x624:0x62c]
---
Predecessors: [0x616]
Successors: [0x63b]
---
0x624 JUMPDEST
0x625 POP
0x626 SLOAD
0x627 SWAP2
0x628 POP
0x629 PUSH2 0x63b
0x62c JUMP
---
0x624: JUMPDEST 
0x626: V574 = S[V572]
0x629: V575 = 0x63b
0x62c: JUMP 0x63b
---
Entry stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, 0x0, S2, V572, 0x0]
Stack pops: 4
Stack additions: [V574, S2]
Exit stack: [V12, 0x2a3, 0x0, S5, {0x134, 0x327}, V574, S2]

================================

Block 0x62d
[0x62d:0x62d]
---
Predecessors: [0x5ff]
Successors: [0x62e]
---
0x62d JUMPDEST
---
0x62d: JUMPDEST 
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0]

================================

Block 0x62e
[0x62e:0x635]
---
Predecessors: [0x62d]
Successors: [0x5d9]
---
0x62e JUMPDEST
0x62f PUSH1 0x1
0x631 ADD
0x632 PUSH2 0x5d9
0x635 JUMP
---
0x62e: JUMPDEST 
0x62f: V576 = 0x1
0x631: V577 = ADD 0x1 S0
0x632: V578 = 0x5d9
0x635: JUMP 0x5d9
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0]
Stack pops: 1
Stack additions: [V577]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, V577]

================================

Block 0x636
[0x636:0x63a]
---
Predecessors: [0x5d9]
Successors: [0x63b]
---
0x636 JUMPDEST
0x637 PUSH1 0x0
0x639 SWAP2
0x63a POP
---
0x636: JUMPDEST 
0x637: V579 = 0x0
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, 0x0, S0]

================================

Block 0x63b
[0x63b:0x63e]
---
Predecessors: [0x5cd, 0x624, 0x636]
Successors: [0x134, 0x327]
---
0x63b JUMPDEST
0x63c POP
0x63d SWAP1
0x63e JUMP
---
0x63b: JUMPDEST 
0x63e: JUMP {0x134, 0x327}
---
Entry stack: [V12, 0x2a3, 0x0, S3, {0x134, 0x327}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x2a3, 0x0, S3, S1]

================================

Block 0x63f
[0x63f:0x64b]
---
Predecessors: [0x140]
Successors: [0x64c, 0x65b]
---
0x63f JUMPDEST
0x640 PUSH1 0x0
0x642 DUP3
0x643 DUP3
0x644 MUL
0x645 DUP4
0x646 ISZERO
0x647 DUP1
0x648 PUSH2 0x65b
0x64b JUMPI
---
0x63f: JUMPDEST 
0x640: V580 = 0x0
0x644: V581 = MUL V97 S1
0x646: V582 = ISZERO S1
0x648: V583 = 0x65b
0x64b: JUMPI 0x65b V582
---
Entry stack: [V12, 0x2a3, S4, S3, 0x150, S1, V97]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V581, V582]
Exit stack: [V12, 0x2a3, S4, S3, 0x150, S1, V97, 0x0, V581, V582]

================================

Block 0x64c
[0x64c:0x656]
---
Predecessors: [0x63f]
Successors: [0x657, 0x658]
---
0x64c POP
0x64d DUP3
0x64e DUP5
0x64f DUP3
0x650 DUP2
0x651 ISZERO
0x652 ISZERO
0x653 PUSH2 0x658
0x656 JUMPI
---
0x651: V584 = ISZERO S4
0x652: V585 = ISZERO V584
0x653: V586 = 0x658
0x656: JUMPI 0x658 V585
---
Entry stack: [V12, 0x2a3, S7, S6, 0x150, S4, V97, 0x0, V581, V582]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0x2a3, S7, S6, 0x150, S4, V97, 0x0, V581, V97, S4, V581]

================================

Block 0x657
[0x657:0x657]
---
Predecessors: [0x64c]
Successors: []
---
0x657 INVALID
---
0x657: INVALID 
---
Entry stack: [V12, 0x2a3, S9, S8, 0x150, S6, V97, 0x0, V581, V97, S1, V581]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S9, S8, 0x150, S6, V97, 0x0, V581, V97, S1, V581]

================================

Block 0x658
[0x658:0x65a]
---
Predecessors: [0x64c]
Successors: [0x65b]
---
0x658 JUMPDEST
0x659 DIV
0x65a EQ
---
0x658: JUMPDEST 
0x659: V587 = DIV V581 S1
0x65a: V588 = EQ V587 V97
---
Entry stack: [V12, 0x2a3, S9, S8, 0x150, S6, V97, 0x0, V581, V97, S1, V581]
Stack pops: 3
Stack additions: [V588]
Exit stack: [V12, 0x2a3, S9, S8, 0x150, S6, V97, 0x0, V581, V588]

================================

Block 0x65b
[0x65b:0x661]
---
Predecessors: [0x63f, 0x658]
Successors: [0x662, 0x663]
---
0x65b JUMPDEST
0x65c ISZERO
0x65d ISZERO
0x65e PUSH2 0x663
0x661 JUMPI
---
0x65b: JUMPDEST 
0x65c: V589 = ISZERO S0
0x65d: V590 = ISZERO V589
0x65e: V591 = 0x663
0x661: JUMPI 0x663 V590
---
Entry stack: [V12, 0x2a3, S7, S6, 0x150, S4, V97, 0x0, V581, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a3, S7, S6, 0x150, S4, V97, 0x0, V581]

================================

Block 0x662
[0x662:0x662]
---
Predecessors: [0x65b]
Successors: []
---
0x662 INVALID
---
0x662: INVALID 
---
Entry stack: [V12, 0x2a3, S6, S5, 0x150, S3, V97, 0x0, V581]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S6, S5, 0x150, S3, V97, 0x0, V581]

================================

Block 0x663
[0x663:0x666]
---
Predecessors: [0x65b, 0x66e]
Successors: [0x667]
---
0x663 JUMPDEST
0x664 DUP1
0x665 SWAP2
0x666 POP
---
0x663: JUMPDEST 
---
Entry stack: [V12, 0x2a3, S6, S5, {0x150, 0x199, 0x1c5}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x2a3, S6, S5, {0x150, 0x199, 0x1c5}, S3, S2, S0, S0]

================================

Block 0x667
[0x667:0x66d]
---
Predecessors: [0x663]
Successors: [0x150, 0x199, 0x1c5]
---
0x667 JUMPDEST
0x668 POP
0x669 SWAP3
0x66a SWAP2
0x66b POP
0x66c POP
0x66d JUMP
---
0x667: JUMPDEST 
0x66d: JUMP {0x150, 0x199, 0x1c5}
---
Entry stack: [V12, 0x2a3, S6, S5, {0x150, 0x199, 0x1c5}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x2a3, S6, S5, S1]

================================

Block 0x66e
[0x66e:0x67b]
---
Predecessors: [0x170, 0x199]
Successors: [0x663, 0x67c]
---
0x66e JUMPDEST
0x66f PUSH1 0x0
0x671 DUP3
0x672 DUP3
0x673 ADD
0x674 DUP4
0x675 DUP2
0x676 LT
0x677 ISZERO
0x678 PUSH2 0x663
0x67b JUMPI
---
0x66e: JUMPDEST 
0x66f: V592 = 0x0
0x673: V593 = ADD S0 S1
0x676: V594 = LT V593 S1
0x677: V595 = ISZERO V594
0x678: V596 = 0x663
0x67b: JUMPI 0x663 V595
---
Entry stack: [V12, 0x2a3, S4, S3, {0x199, 0x1c5}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V593]
Exit stack: [V12, 0x2a3, S4, S3, {0x199, 0x1c5}, S1, S0, 0x0, V593]

================================

Block 0x67c
[0x67c:0x67c]
---
Predecessors: [0x66e]
Successors: []
---
0x67c INVALID
---
0x67c: INVALID 
---
Entry stack: [V12, 0x2a3, S6, S5, {0x199, 0x1c5}, S3, S2, 0x0, V593]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S6, S5, {0x199, 0x1c5}, S3, S2, 0x0, V593]

================================

Block 0x67d
[0x67d:0x680]
---
Predecessors: []
Successors: [0x681]
---
0x67d JUMPDEST
0x67e DUP1
0x67f SWAP2
0x680 POP
---
0x67d: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x681
[0x681:0x687]
---
Predecessors: [0x67d]
Successors: []
Has unresolved jump.
---
0x681 JUMPDEST
0x682 POP
0x683 SWAP3
0x684 SWAP2
0x685 POP
0x686 POP
0x687 JUMP
---
0x681: JUMPDEST 
0x687: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x688
[0x688:0x692]
---
Predecessors: [0x1c5]
Successors: [0x693, 0x694]
---
0x688 JUMPDEST
0x689 PUSH1 0x0
0x68b DUP3
0x68c DUP3
0x68d GT
0x68e ISZERO
0x68f PUSH2 0x694
0x692 JUMPI
---
0x688: JUMPDEST 
0x689: V597 = 0x0
0x68d: V598 = GT S0 V153
0x68e: V599 = ISZERO V598
0x68f: V600 = 0x694
0x692: JUMPI 0x694 V599
---
Entry stack: [V12, 0x2a3, S4, S3, 0x1db, V153, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0x2a3, S4, S3, 0x1db, V153, S0, 0x0]

================================

Block 0x693
[0x693:0x693]
---
Predecessors: [0x688]
Successors: []
---
0x693 INVALID
---
0x693: INVALID 
---
Entry stack: [V12, 0x2a3, S5, S4, 0x1db, V153, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S5, S4, 0x1db, V153, S1, 0x0]

================================

Block 0x694
[0x694:0x698]
---
Predecessors: [0x688]
Successors: [0x699]
---
0x694 JUMPDEST
0x695 POP
0x696 DUP1
0x697 DUP3
0x698 SUB
---
0x694: JUMPDEST 
0x698: V601 = SUB V153 S1
---
Entry stack: [V12, 0x2a3, S5, S4, 0x1db, V153, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V601]
Exit stack: [V12, 0x2a3, S5, S4, 0x1db, V153, S1, V601]

================================

Block 0x699
[0x699:0x69e]
---
Predecessors: [0x694]
Successors: [0x1db]
---
0x699 JUMPDEST
0x69a SWAP3
0x69b SWAP2
0x69c POP
0x69d POP
0x69e JUMP
---
0x699: JUMPDEST 
0x69e: JUMP 0x1db
---
Entry stack: [V12, 0x2a3, S5, S4, 0x1db, V153, S1, V601]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x2a3, S5, S4, V601]

================================

Block 0x69f
[0x69f:0x6b5]
---
Predecessors: [0x2b0]
Successors: [0x6b6, 0x6ba]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x0
0x6a2 SLOAD
0x6a3 CALLER
0x6a4 PUSH1 0x1
0x6a6 PUSH1 0xa0
0x6a8 PUSH1 0x2
0x6aa EXP
0x6ab SUB
0x6ac SWAP1
0x6ad DUP2
0x6ae AND
0x6af SWAP2
0x6b0 AND
0x6b1 EQ
0x6b2 PUSH2 0x6ba
0x6b5 JUMPI
---
0x69f: JUMPDEST 
0x6a0: V602 = 0x0
0x6a2: V603 = S[0x0]
0x6a3: V604 = CALLER
0x6a4: V605 = 0x1
0x6a6: V606 = 0xa0
0x6a8: V607 = 0x2
0x6aa: V608 = EXP 0x2 0xa0
0x6ab: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ae: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x6b0: V611 = AND V603 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V612 = EQ V611 V610
0x6b2: V613 = 0x6ba
0x6b5: JUMPI 0x6ba V612
---
Entry stack: [V12, 0x2a3, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V238]

================================

Block 0x6b6
[0x6b6:0x6b9]
---
Predecessors: [0x69f]
Successors: []
---
0x6b6 PUSH1 0x0
0x6b8 DUP1
0x6b9 REVERT
---
0x6b6: V614 = 0x0
0x6b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V238]

================================

Block 0x6ba
[0x6ba:0x6c6]
---
Predecessors: [0x69f]
Successors: [0x6c7, 0x6cb]
---
0x6ba JUMPDEST
0x6bb PUSH1 0x1
0x6bd SLOAD
0x6be PUSH1 0x6
0x6c0 SLOAD
0x6c1 LT
0x6c2 ISZERO
0x6c3 PUSH2 0x6cb
0x6c6 JUMPI
---
0x6ba: JUMPDEST 
0x6bb: V615 = 0x1
0x6bd: V616 = S[0x1]
0x6be: V617 = 0x6
0x6c0: V618 = S[0x6]
0x6c1: V619 = LT V618 V616
0x6c2: V620 = ISZERO V619
0x6c3: V621 = 0x6cb
0x6c6: JUMPI 0x6cb V620
---
Entry stack: [V12, 0x2a3, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V238]

================================

Block 0x6c7
[0x6c7:0x6ca]
---
Predecessors: [0x6ba]
Successors: []
---
0x6c7 PUSH1 0x0
0x6c9 DUP1
0x6ca REVERT
---
0x6c7: V622 = 0x0
0x6ca: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V238]

================================

Block 0x6cb
[0x6cb:0x6f7]
---
Predecessors: [0x6ba]
Successors: [0x6f8, 0x6fc]
---
0x6cb JUMPDEST
0x6cc PUSH1 0x1
0x6ce PUSH1 0xa0
0x6d0 PUSH1 0x2
0x6d2 EXP
0x6d3 SUB
0x6d4 CALLER
0x6d5 AND
0x6d6 DUP2
0x6d7 ISZERO
0x6d8 PUSH2 0x8fc
0x6db MUL
0x6dc DUP3
0x6dd PUSH1 0x40
0x6df MLOAD
0x6e0 PUSH1 0x0
0x6e2 PUSH1 0x40
0x6e4 MLOAD
0x6e5 DUP1
0x6e6 DUP4
0x6e7 SUB
0x6e8 DUP2
0x6e9 DUP6
0x6ea DUP9
0x6eb DUP9
0x6ec CALL
0x6ed SWAP4
0x6ee POP
0x6ef POP
0x6f0 POP
0x6f1 POP
0x6f2 ISZERO
0x6f3 ISZERO
0x6f4 PUSH2 0x6fc
0x6f7 JUMPI
---
0x6cb: JUMPDEST 
0x6cc: V623 = 0x1
0x6ce: V624 = 0xa0
0x6d0: V625 = 0x2
0x6d2: V626 = EXP 0x2 0xa0
0x6d3: V627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d4: V628 = CALLER
0x6d5: V629 = AND V628 0xffffffffffffffffffffffffffffffffffffffff
0x6d7: V630 = ISZERO V238
0x6d8: V631 = 0x8fc
0x6db: V632 = MUL 0x8fc V630
0x6dd: V633 = 0x40
0x6df: V634 = M[0x40]
0x6e0: V635 = 0x0
0x6e2: V636 = 0x40
0x6e4: V637 = M[0x40]
0x6e7: V638 = SUB V634 V637
0x6ec: V639 = CALL V632 V629 V238 V637 V638 V637 0x0
0x6f2: V640 = ISZERO V639
0x6f3: V641 = ISZERO V640
0x6f4: V642 = 0x6fc
0x6f7: JUMPI 0x6fc V641
---
Entry stack: [V12, 0x2a3, V238]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a3, V238]

================================

Block 0x6f8
[0x6f8:0x6fb]
---
Predecessors: [0x6cb]
Successors: []
---
0x6f8 PUSH1 0x0
0x6fa DUP1
0x6fb REVERT
---
0x6f8: V643 = 0x0
0x6fb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V238]

================================

Block 0x6fc
[0x6fc:0x6fc]
---
Predecessors: [0x6cb, 0x9c9]
Successors: [0x6fd]
---
0x6fc JUMPDEST
---
0x6fc: JUMPDEST 
---
Entry stack: [V12, 0x2a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S0]

================================

Block 0x6fd
[0x6fd:0x6fd]
---
Predecessors: [0x6fc]
Successors: [0x6fe]
---
0x6fd JUMPDEST
---
0x6fd: JUMPDEST 
---
Entry stack: [V12, 0x2a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S0]

================================

Block 0x6fe
[0x6fe:0x6fe]
---
Predecessors: [0x6fd]
Successors: [0x6ff]
---
0x6fe JUMPDEST
---
0x6fe: JUMPDEST 
---
Entry stack: [V12, 0x2a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, S0]

================================

Block 0x6ff
[0x6ff:0x701]
---
Predecessors: [0x6fe]
Successors: [0x2a3]
---
0x6ff JUMPDEST
0x700 POP
0x701 JUMP
---
0x6ff: JUMPDEST 
0x701: JUMP 0x2a3
---
Entry stack: [V12, 0x2a3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x702
[0x702:0x719]
---
Predecessors: [0x2c8]
Successors: [0x71a, 0x71e]
---
0x702 JUMPDEST
0x703 PUSH1 0x0
0x705 DUP1
0x706 SLOAD
0x707 CALLER
0x708 PUSH1 0x1
0x70a PUSH1 0xa0
0x70c PUSH1 0x2
0x70e EXP
0x70f SUB
0x710 SWAP1
0x711 DUP2
0x712 AND
0x713 SWAP2
0x714 AND
0x715 EQ
0x716 PUSH2 0x71e
0x719 JUMPI
---
0x702: JUMPDEST 
0x703: V644 = 0x0
0x706: V645 = S[0x0]
0x707: V646 = CALLER
0x708: V647 = 0x1
0x70a: V648 = 0xa0
0x70c: V649 = 0x2
0x70e: V650 = EXP 0x2 0xa0
0x70f: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x712: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x714: V653 = AND V645 0xffffffffffffffffffffffffffffffffffffffff
0x715: V654 = EQ V653 V652
0x716: V655 = 0x71e
0x719: JUMPI 0x71e V654
---
Entry stack: [V12, 0x2a3, V252]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x2a3, V252, 0x0]

================================

Block 0x71a
[0x71a:0x71d]
---
Predecessors: [0x702]
Successors: []
---
0x71a PUSH1 0x0
0x71c DUP1
0x71d REVERT
---
0x71a: V656 = 0x0
0x71d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V252, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V252, 0x0]

================================

Block 0x71e
[0x71e:0x770]
---
Predecessors: [0x702]
Successors: [0x771, 0x775]
---
0x71e JUMPDEST
0x71f DUP2
0x720 PUSH1 0x1
0x722 PUSH1 0xa0
0x724 PUSH1 0x2
0x726 EXP
0x727 SUB
0x728 AND
0x729 PUSH4 0x70a08231
0x72e ADDRESS
0x72f PUSH1 0x0
0x731 PUSH1 0x40
0x733 MLOAD
0x734 PUSH1 0x20
0x736 ADD
0x737 MSTORE
0x738 PUSH1 0x40
0x73a MLOAD
0x73b PUSH1 0xe0
0x73d PUSH1 0x2
0x73f EXP
0x740 PUSH4 0xffffffff
0x745 DUP5
0x746 AND
0x747 MUL
0x748 DUP2
0x749 MSTORE
0x74a PUSH1 0x1
0x74c PUSH1 0xa0
0x74e PUSH1 0x2
0x750 EXP
0x751 SUB
0x752 SWAP1
0x753 SWAP2
0x754 AND
0x755 PUSH1 0x4
0x757 DUP3
0x758 ADD
0x759 MSTORE
0x75a PUSH1 0x24
0x75c ADD
0x75d PUSH1 0x20
0x75f PUSH1 0x40
0x761 MLOAD
0x762 DUP1
0x763 DUP4
0x764 SUB
0x765 DUP2
0x766 PUSH1 0x0
0x768 DUP8
0x769 DUP1
0x76a EXTCODESIZE
0x76b ISZERO
0x76c ISZERO
0x76d PUSH2 0x775
0x770 JUMPI
---
0x71e: JUMPDEST 
0x720: V657 = 0x1
0x722: V658 = 0xa0
0x724: V659 = 0x2
0x726: V660 = EXP 0x2 0xa0
0x727: V661 = SUB 0x10000000000000000000000000000000000000000 0x1
0x728: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x729: V663 = 0x70a08231
0x72e: V664 = ADDRESS
0x72f: V665 = 0x0
0x731: V666 = 0x40
0x733: V667 = M[0x40]
0x734: V668 = 0x20
0x736: V669 = ADD 0x20 V667
0x737: M[V669] = 0x0
0x738: V670 = 0x40
0x73a: V671 = M[0x40]
0x73b: V672 = 0xe0
0x73d: V673 = 0x2
0x73f: V674 = EXP 0x2 0xe0
0x740: V675 = 0xffffffff
0x746: V676 = AND 0x70a08231 0xffffffff
0x747: V677 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x749: M[V671] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x74a: V678 = 0x1
0x74c: V679 = 0xa0
0x74e: V680 = 0x2
0x750: V681 = EXP 0x2 0xa0
0x751: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x754: V683 = AND V664 0xffffffffffffffffffffffffffffffffffffffff
0x755: V684 = 0x4
0x758: V685 = ADD V671 0x4
0x759: M[V685] = V683
0x75a: V686 = 0x24
0x75c: V687 = ADD 0x24 V671
0x75d: V688 = 0x20
0x75f: V689 = 0x40
0x761: V690 = M[0x40]
0x764: V691 = SUB V687 V690
0x766: V692 = 0x0
0x76a: V693 = EXTCODESIZE V662
0x76b: V694 = ISZERO V693
0x76c: V695 = ISZERO V694
0x76d: V696 = 0x775
0x770: JUMPI 0x775 V695
---
Entry stack: [V12, 0x2a3, V252, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V662, 0x70a08231, V687, 0x20, V690, V691, V690, 0x0, V662]
Exit stack: [V12, 0x2a3, V252, 0x0, V662, 0x70a08231, V687, 0x20, V690, V691, V690, 0x0, V662]

================================

Block 0x771
[0x771:0x774]
---
Predecessors: [0x71e]
Successors: []
---
0x771 PUSH1 0x0
0x773 DUP1
0x774 REVERT
---
0x771: V697 = 0x0
0x774: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V252, 0x0, V662, 0x70a08231, V687, 0x20, V690, V691, V690, 0x0, V662]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V252, 0x0, V662, 0x70a08231, V687, 0x20, V690, V691, V690, 0x0, V662]

================================

Block 0x775
[0x775:0x781]
---
Predecessors: [0x71e]
Successors: [0x782, 0x786]
---
0x775 JUMPDEST
0x776 PUSH2 0x2c6
0x779 GAS
0x77a SUB
0x77b CALL
0x77c ISZERO
0x77d ISZERO
0x77e PUSH2 0x786
0x781 JUMPI
---
0x775: JUMPDEST 
0x776: V698 = 0x2c6
0x779: V699 = GAS
0x77a: V700 = SUB V699 0x2c6
0x77b: V701 = CALL V700 V662 0x0 V690 V691 V690 0x20
0x77c: V702 = ISZERO V701
0x77d: V703 = ISZERO V702
0x77e: V704 = 0x786
0x781: JUMPI 0x786 V703
---
Entry stack: [V12, 0x2a3, V252, 0x0, V662, 0x70a08231, V687, 0x20, V690, V691, V690, 0x0, V662]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a3, V252, 0x0, V662, 0x70a08231, V687]

================================

Block 0x782
[0x782:0x785]
---
Predecessors: [0x775]
Successors: []
---
0x782 PUSH1 0x0
0x784 DUP1
0x785 REVERT
---
0x782: V705 = 0x0
0x785: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V252, 0x0, V662, 0x70a08231, V687]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V252, 0x0, V662, 0x70a08231, V687]

================================

Block 0x786
[0x786:0x7b1]
---
Predecessors: [0x775]
Successors: [0xb25]
---
0x786 JUMPDEST
0x787 POP
0x788 POP
0x789 POP
0x78a PUSH1 0x40
0x78c MLOAD
0x78d DUP1
0x78e MLOAD
0x78f PUSH1 0x0
0x791 SLOAD
0x792 SWAP1
0x793 SWAP3
0x794 POP
0x795 PUSH2 0x29d
0x798 SWAP2
0x799 POP
0x79a PUSH1 0x1
0x79c PUSH1 0xa0
0x79e PUSH1 0x2
0x7a0 EXP
0x7a1 SUB
0x7a2 DUP5
0x7a3 DUP2
0x7a4 AND
0x7a5 SWAP2
0x7a6 AND
0x7a7 DUP4
0x7a8 PUSH4 0xffffffff
0x7ad PUSH2 0xb25
0x7b0 AND
0x7b1 JUMP
---
0x786: JUMPDEST 
0x78a: V706 = 0x40
0x78c: V707 = M[0x40]
0x78e: V708 = M[V707]
0x78f: V709 = 0x0
0x791: V710 = S[0x0]
0x795: V711 = 0x29d
0x79a: V712 = 0x1
0x79c: V713 = 0xa0
0x79e: V714 = 0x2
0x7a0: V715 = EXP 0x2 0xa0
0x7a1: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a4: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x7a6: V718 = AND V710 0xffffffffffffffffffffffffffffffffffffffff
0x7a8: V719 = 0xffffffff
0x7ad: V720 = 0xb25
0x7b0: V721 = AND 0xb25 0xffffffff
0x7b1: JUMP 0xb25
---
Entry stack: [V12, 0x2a3, V252, 0x0, V662, 0x70a08231, V687]
Stack pops: 5
Stack additions: [S4, V708, 0x29d, V717, V718, V708]
Exit stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708]

================================

Block 0x7b2
[0x7b2:0x7b2]
---
Predecessors: []
Successors: [0x7b3]
---
0x7b2 JUMPDEST
---
0x7b2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7b3
[0x7b3:0x7b3]
---
Predecessors: [0x7b2]
Successors: [0x7b4]
---
0x7b3 JUMPDEST
---
0x7b3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7b4
[0x7b4:0x7b7]
---
Predecessors: [0x7b3]
Successors: []
Has unresolved jump.
---
0x7b4 JUMPDEST
0x7b5 POP
0x7b6 POP
0x7b7 JUMP
---
0x7b4: JUMPDEST 
0x7b7: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x7b8
[0x7b8:0x7c2]
---
Predecessors: [0x2e9]
Successors: [0x7c3, 0x7c8]
---
0x7b8 JUMPDEST
0x7b9 PUSH1 0x5
0x7bb SLOAD
0x7bc TIMESTAMP
0x7bd GT
0x7be DUP1
0x7bf PUSH2 0x7c8
0x7c2 JUMPI
---
0x7b8: JUMPDEST 
0x7b9: V722 = 0x5
0x7bb: V723 = S[0x5]
0x7bc: V724 = TIMESTAMP
0x7bd: V725 = GT V724 V723
0x7bf: V726 = 0x7c8
0x7c2: JUMPI 0x7c8 V725
---
Entry stack: [V12, 0x2a3]
Stack pops: 0
Stack additions: [V725]
Exit stack: [V12, 0x2a3, V725]

================================

Block 0x7c3
[0x7c3:0x7c7]
---
Predecessors: [0x7b8]
Successors: [0x7c8]
---
0x7c3 POP
0x7c4 PUSH1 0x3
0x7c6 SLOAD
0x7c7 ISZERO
---
0x7c4: V727 = 0x3
0x7c6: V728 = S[0x3]
0x7c7: V729 = ISZERO V728
---
Entry stack: [V12, 0x2a3, V725]
Stack pops: 1
Stack additions: [V729]
Exit stack: [V12, 0x2a3, V729]

================================

Block 0x7c8
[0x7c8:0x7cd]
---
Predecessors: [0x7b8, 0x7c3]
Successors: [0x7ce, 0x7e1]
---
0x7c8 JUMPDEST
0x7c9 DUP1
0x7ca PUSH2 0x7e1
0x7cd JUMPI
---
0x7c8: JUMPDEST 
0x7ca: V730 = 0x7e1
0x7cd: JUMPI 0x7e1 S0
---
Entry stack: [V12, 0x2a3, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a3, S0]

================================

Block 0x7ce
[0x7ce:0x7e0]
---
Predecessors: [0x7c8]
Successors: [0x7e1]
---
0x7ce POP
0x7cf PUSH1 0x0
0x7d1 SLOAD
0x7d2 CALLER
0x7d3 PUSH1 0x1
0x7d5 PUSH1 0xa0
0x7d7 PUSH1 0x2
0x7d9 EXP
0x7da SUB
0x7db SWAP1
0x7dc DUP2
0x7dd AND
0x7de SWAP2
0x7df AND
0x7e0 EQ
---
0x7cf: V731 = 0x0
0x7d1: V732 = S[0x0]
0x7d2: V733 = CALLER
0x7d3: V734 = 0x1
0x7d5: V735 = 0xa0
0x7d7: V736 = 0x2
0x7d9: V737 = EXP 0x2 0xa0
0x7da: V738 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dd: V739 = AND 0xffffffffffffffffffffffffffffffffffffffff V733
0x7df: V740 = AND V732 0xffffffffffffffffffffffffffffffffffffffff
0x7e0: V741 = EQ V740 V739
---
Entry stack: [V12, 0x2a3, S0]
Stack pops: 1
Stack additions: [V741]
Exit stack: [V12, 0x2a3, V741]

================================

Block 0x7e1
[0x7e1:0x7e7]
---
Predecessors: [0x7c8, 0x7ce]
Successors: [0x7e8, 0x7ec]
---
0x7e1 JUMPDEST
0x7e2 ISZERO
0x7e3 ISZERO
0x7e4 PUSH2 0x7ec
0x7e7 JUMPI
---
0x7e1: JUMPDEST 
0x7e2: V742 = ISZERO S0
0x7e3: V743 = ISZERO V742
0x7e4: V744 = 0x7ec
0x7e7: JUMPI 0x7ec V743
---
Entry stack: [V12, 0x2a3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a3]

================================

Block 0x7e8
[0x7e8:0x7eb]
---
Predecessors: [0x7e1]
Successors: []
---
0x7e8 PUSH1 0x0
0x7ea DUP1
0x7eb REVERT
---
0x7e8: V745 = 0x0
0x7eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3]

================================

Block 0x7ec
[0x7ec:0x82f]
---
Predecessors: [0x7e1]
Successors: [0x830, 0x834]
---
0x7ec JUMPDEST
0x7ed PUSH1 0x2
0x7ef SLOAD
0x7f0 PUSH1 0x1
0x7f2 PUSH1 0xa0
0x7f4 PUSH1 0x2
0x7f6 EXP
0x7f7 SUB
0x7f8 AND
0x7f9 PUSH4 0x7d64bcb4
0x7fe PUSH1 0x0
0x800 PUSH1 0x40
0x802 MLOAD
0x803 PUSH1 0x20
0x805 ADD
0x806 MSTORE
0x807 PUSH1 0x40
0x809 MLOAD
0x80a DUP2
0x80b PUSH4 0xffffffff
0x810 AND
0x811 PUSH1 0xe0
0x813 PUSH1 0x2
0x815 EXP
0x816 MUL
0x817 DUP2
0x818 MSTORE
0x819 PUSH1 0x4
0x81b ADD
0x81c PUSH1 0x20
0x81e PUSH1 0x40
0x820 MLOAD
0x821 DUP1
0x822 DUP4
0x823 SUB
0x824 DUP2
0x825 PUSH1 0x0
0x827 DUP8
0x828 DUP1
0x829 EXTCODESIZE
0x82a ISZERO
0x82b ISZERO
0x82c PUSH2 0x834
0x82f JUMPI
---
0x7ec: JUMPDEST 
0x7ed: V746 = 0x2
0x7ef: V747 = S[0x2]
0x7f0: V748 = 0x1
0x7f2: V749 = 0xa0
0x7f4: V750 = 0x2
0x7f6: V751 = EXP 0x2 0xa0
0x7f7: V752 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f8: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V747
0x7f9: V754 = 0x7d64bcb4
0x7fe: V755 = 0x0
0x800: V756 = 0x40
0x802: V757 = M[0x40]
0x803: V758 = 0x20
0x805: V759 = ADD 0x20 V757
0x806: M[V759] = 0x0
0x807: V760 = 0x40
0x809: V761 = M[0x40]
0x80b: V762 = 0xffffffff
0x810: V763 = AND 0xffffffff 0x7d64bcb4
0x811: V764 = 0xe0
0x813: V765 = 0x2
0x815: V766 = EXP 0x2 0xe0
0x816: V767 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0x818: M[V761] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0x819: V768 = 0x4
0x81b: V769 = ADD 0x4 V761
0x81c: V770 = 0x20
0x81e: V771 = 0x40
0x820: V772 = M[0x40]
0x823: V773 = SUB V769 V772
0x825: V774 = 0x0
0x829: V775 = EXTCODESIZE V753
0x82a: V776 = ISZERO V775
0x82b: V777 = ISZERO V776
0x82c: V778 = 0x834
0x82f: JUMPI 0x834 V777
---
Entry stack: [V12, 0x2a3]
Stack pops: 0
Stack additions: [V753, 0x7d64bcb4, V769, 0x20, V772, V773, V772, 0x0, V753]
Exit stack: [V12, 0x2a3, V753, 0x7d64bcb4, V769, 0x20, V772, V773, V772, 0x0, V753]

================================

Block 0x830
[0x830:0x833]
---
Predecessors: [0x7ec]
Successors: []
---
0x830 PUSH1 0x0
0x832 DUP1
0x833 REVERT
---
0x830: V779 = 0x0
0x833: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V753, 0x7d64bcb4, V769, 0x20, V772, V773, V772, 0x0, V753]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V753, 0x7d64bcb4, V769, 0x20, V772, V773, V772, 0x0, V753]

================================

Block 0x834
[0x834:0x840]
---
Predecessors: [0x7ec]
Successors: [0x841, 0x845]
---
0x834 JUMPDEST
0x835 PUSH2 0x2c6
0x838 GAS
0x839 SUB
0x83a CALL
0x83b ISZERO
0x83c ISZERO
0x83d PUSH2 0x845
0x840 JUMPI
---
0x834: JUMPDEST 
0x835: V780 = 0x2c6
0x838: V781 = GAS
0x839: V782 = SUB V781 0x2c6
0x83a: V783 = CALL V782 V753 0x0 V772 V773 V772 0x20
0x83b: V784 = ISZERO V783
0x83c: V785 = ISZERO V784
0x83d: V786 = 0x845
0x840: JUMPI 0x845 V785
---
Entry stack: [V12, 0x2a3, V753, 0x7d64bcb4, V769, 0x20, V772, V773, V772, 0x0, V753]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a3, V753, 0x7d64bcb4, V769]

================================

Block 0x841
[0x841:0x844]
---
Predecessors: [0x834]
Successors: []
---
0x841 PUSH1 0x0
0x843 DUP1
0x844 REVERT
---
0x841: V787 = 0x0
0x844: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V753, 0x7d64bcb4, V769]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V753, 0x7d64bcb4, V769]

================================

Block 0x845
[0x845:0x8b1]
---
Predecessors: [0x834]
Successors: [0x8b2, 0x8b6]
---
0x845 JUMPDEST
0x846 POP
0x847 POP
0x848 POP
0x849 PUSH1 0x40
0x84b MLOAD
0x84c DUP1
0x84d MLOAD
0x84e PUSH1 0x9
0x850 DUP1
0x851 SLOAD
0x852 PUSH1 0xff
0x854 NOT
0x855 AND
0x856 SWAP2
0x857 ISZERO
0x858 ISZERO
0x859 SWAP2
0x85a SWAP1
0x85b SWAP2
0x85c OR
0x85d SWAP1
0x85e SSTORE
0x85f POP
0x860 PUSH1 0x2
0x862 SLOAD
0x863 PUSH1 0x0
0x865 SLOAD
0x866 PUSH1 0x1
0x868 PUSH1 0xa0
0x86a PUSH1 0x2
0x86c EXP
0x86d SUB
0x86e SWAP2
0x86f DUP3
0x870 AND
0x871 SWAP2
0x872 PUSH4 0xf2fde38b
0x877 SWAP2
0x878 AND
0x879 PUSH1 0x40
0x87b MLOAD
0x87c PUSH1 0xe0
0x87e PUSH1 0x2
0x880 EXP
0x881 PUSH4 0xffffffff
0x886 DUP5
0x887 AND
0x888 MUL
0x889 DUP2
0x88a MSTORE
0x88b PUSH1 0x1
0x88d PUSH1 0xa0
0x88f PUSH1 0x2
0x891 EXP
0x892 SUB
0x893 SWAP1
0x894 SWAP2
0x895 AND
0x896 PUSH1 0x4
0x898 DUP3
0x899 ADD
0x89a MSTORE
0x89b PUSH1 0x24
0x89d ADD
0x89e PUSH1 0x0
0x8a0 PUSH1 0x40
0x8a2 MLOAD
0x8a3 DUP1
0x8a4 DUP4
0x8a5 SUB
0x8a6 DUP2
0x8a7 PUSH1 0x0
0x8a9 DUP8
0x8aa DUP1
0x8ab EXTCODESIZE
0x8ac ISZERO
0x8ad ISZERO
0x8ae PUSH2 0x8b6
0x8b1 JUMPI
---
0x845: JUMPDEST 
0x849: V788 = 0x40
0x84b: V789 = M[0x40]
0x84d: V790 = M[V789]
0x84e: V791 = 0x9
0x851: V792 = S[0x9]
0x852: V793 = 0xff
0x854: V794 = NOT 0xff
0x855: V795 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V792
0x857: V796 = ISZERO V790
0x858: V797 = ISZERO V796
0x85c: V798 = OR V797 V795
0x85e: S[0x9] = V798
0x860: V799 = 0x2
0x862: V800 = S[0x2]
0x863: V801 = 0x0
0x865: V802 = S[0x0]
0x866: V803 = 0x1
0x868: V804 = 0xa0
0x86a: V805 = 0x2
0x86c: V806 = EXP 0x2 0xa0
0x86d: V807 = SUB 0x10000000000000000000000000000000000000000 0x1
0x870: V808 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0x872: V809 = 0xf2fde38b
0x878: V810 = AND V802 0xffffffffffffffffffffffffffffffffffffffff
0x879: V811 = 0x40
0x87b: V812 = M[0x40]
0x87c: V813 = 0xe0
0x87e: V814 = 0x2
0x880: V815 = EXP 0x2 0xe0
0x881: V816 = 0xffffffff
0x887: V817 = AND 0xf2fde38b 0xffffffff
0x888: V818 = MUL 0xf2fde38b 0x100000000000000000000000000000000000000000000000000000000
0x88a: M[V812] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x88b: V819 = 0x1
0x88d: V820 = 0xa0
0x88f: V821 = 0x2
0x891: V822 = EXP 0x2 0xa0
0x892: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0x895: V824 = AND V810 0xffffffffffffffffffffffffffffffffffffffff
0x896: V825 = 0x4
0x899: V826 = ADD V812 0x4
0x89a: M[V826] = V824
0x89b: V827 = 0x24
0x89d: V828 = ADD 0x24 V812
0x89e: V829 = 0x0
0x8a0: V830 = 0x40
0x8a2: V831 = M[0x40]
0x8a5: V832 = SUB V828 V831
0x8a7: V833 = 0x0
0x8ab: V834 = EXTCODESIZE V808
0x8ac: V835 = ISZERO V834
0x8ad: V836 = ISZERO V835
0x8ae: V837 = 0x8b6
0x8b1: JUMPI 0x8b6 V836
---
Entry stack: [V12, 0x2a3, V753, 0x7d64bcb4, V769]
Stack pops: 3
Stack additions: [V808, 0xf2fde38b, V828, 0x0, V831, V832, V831, 0x0, V808]
Exit stack: [V12, 0x2a3, V808, 0xf2fde38b, V828, 0x0, V831, V832, V831, 0x0, V808]

================================

Block 0x8b2
[0x8b2:0x8b5]
---
Predecessors: [0x845]
Successors: []
---
0x8b2 PUSH1 0x0
0x8b4 DUP1
0x8b5 REVERT
---
0x8b2: V838 = 0x0
0x8b5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V808, 0xf2fde38b, V828, 0x0, V831, V832, V831, 0x0, V808]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V808, 0xf2fde38b, V828, 0x0, V831, V832, V831, 0x0, V808]

================================

Block 0x8b6
[0x8b6:0x8c2]
---
Predecessors: [0x845]
Successors: [0x8c3, 0x8c7]
---
0x8b6 JUMPDEST
0x8b7 PUSH2 0x2c6
0x8ba GAS
0x8bb SUB
0x8bc CALL
0x8bd ISZERO
0x8be ISZERO
0x8bf PUSH2 0x8c7
0x8c2 JUMPI
---
0x8b6: JUMPDEST 
0x8b7: V839 = 0x2c6
0x8ba: V840 = GAS
0x8bb: V841 = SUB V840 0x2c6
0x8bc: V842 = CALL V841 V808 0x0 V831 V832 V831 0x0
0x8bd: V843 = ISZERO V842
0x8be: V844 = ISZERO V843
0x8bf: V845 = 0x8c7
0x8c2: JUMPI 0x8c7 V844
---
Entry stack: [V12, 0x2a3, V808, 0xf2fde38b, V828, 0x0, V831, V832, V831, 0x0, V808]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a3, V808, 0xf2fde38b, V828]

================================

Block 0x8c3
[0x8c3:0x8c6]
---
Predecessors: [0x8b6]
Successors: []
---
0x8c3 PUSH1 0x0
0x8c5 DUP1
0x8c6 REVERT
---
0x8c3: V846 = 0x0
0x8c6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V808, 0xf2fde38b, V828]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V808, 0xf2fde38b, V828]

================================

Block 0x8c7
[0x8c7:0x8ca]
---
Predecessors: [0x8b6, 0xb93]
Successors: [0x8cb]
---
0x8c7 JUMPDEST
0x8c8 POP
0x8c9 POP
0x8ca POP
---
0x8c7: JUMPDEST 
---
Entry stack: [V12, 0x2a3, V252, S4, {0x29d, 0x2a3}, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x2a3, V252, S4, {0x29d, 0x2a3}]

================================

Block 0x8cb
[0x8cb:0x8cc]
---
Predecessors: [0x8c7]
Successors: [0x29d, 0x2a3]
---
0x8cb JUMPDEST
0x8cc JUMP
---
0x8cb: JUMPDEST 
0x8cc: JUMP {0x29d, 0x2a3}
---
Entry stack: [V12, 0x2a3, V252, S1, {0x29d, 0x2a3}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a3, V252, S1]

================================

Block 0x8cd
[0x8cd:0x8e4]
---
Predecessors: [0x2fe]
Successors: [0x8e5, 0x8e9]
---
0x8cd JUMPDEST
0x8ce PUSH1 0x0
0x8d0 DUP1
0x8d1 SLOAD
0x8d2 CALLER
0x8d3 PUSH1 0x1
0x8d5 PUSH1 0xa0
0x8d7 PUSH1 0x2
0x8d9 EXP
0x8da SUB
0x8db SWAP1
0x8dc DUP2
0x8dd AND
0x8de SWAP2
0x8df AND
0x8e0 EQ
0x8e1 PUSH2 0x8e9
0x8e4 JUMPI
---
0x8cd: JUMPDEST 
0x8ce: V847 = 0x0
0x8d1: V848 = S[0x0]
0x8d2: V849 = CALLER
0x8d3: V850 = 0x1
0x8d5: V851 = 0xa0
0x8d7: V852 = 0x2
0x8d9: V853 = EXP 0x2 0xa0
0x8da: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8dd: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V849
0x8df: V856 = AND V848 0xffffffffffffffffffffffffffffffffffffffff
0x8e0: V857 = EQ V856 V855
0x8e1: V858 = 0x8e9
0x8e4: JUMPI 0x8e9 V857
---
Entry stack: [V12, 0x2a3, V272]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x2a3, V272, 0x0]

================================

Block 0x8e5
[0x8e5:0x8e8]
---
Predecessors: [0x8cd]
Successors: []
---
0x8e5 PUSH1 0x0
0x8e7 DUP1
0x8e8 REVERT
---
0x8e5: V859 = 0x0
0x8e8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V272, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V272, 0x0]

================================

Block 0x8e9
[0x8e9:0x93b]
---
Predecessors: [0x8cd]
Successors: [0x93c, 0x940]
---
0x8e9 JUMPDEST
0x8ea POP
0x8eb PUSH1 0x0
0x8ed SLOAD
0x8ee DUP2
0x8ef SWAP1
0x8f0 PUSH1 0x1
0x8f2 PUSH1 0xa0
0x8f4 PUSH1 0x2
0x8f6 EXP
0x8f7 SUB
0x8f8 DUP1
0x8f9 DUP4
0x8fa AND
0x8fb SWAP2
0x8fc PUSH4 0xf2fde38b
0x901 SWAP2
0x902 AND
0x903 PUSH1 0x40
0x905 MLOAD
0x906 PUSH1 0xe0
0x908 PUSH1 0x2
0x90a EXP
0x90b PUSH4 0xffffffff
0x910 DUP5
0x911 AND
0x912 MUL
0x913 DUP2
0x914 MSTORE
0x915 PUSH1 0x1
0x917 PUSH1 0xa0
0x919 PUSH1 0x2
0x91b EXP
0x91c SUB
0x91d SWAP1
0x91e SWAP2
0x91f AND
0x920 PUSH1 0x4
0x922 DUP3
0x923 ADD
0x924 MSTORE
0x925 PUSH1 0x24
0x927 ADD
0x928 PUSH1 0x0
0x92a PUSH1 0x40
0x92c MLOAD
0x92d DUP1
0x92e DUP4
0x92f SUB
0x930 DUP2
0x931 PUSH1 0x0
0x933 DUP8
0x934 DUP1
0x935 EXTCODESIZE
0x936 ISZERO
0x937 ISZERO
0x938 PUSH2 0x940
0x93b JUMPI
---
0x8e9: JUMPDEST 
0x8eb: V860 = 0x0
0x8ed: V861 = S[0x0]
0x8f0: V862 = 0x1
0x8f2: V863 = 0xa0
0x8f4: V864 = 0x2
0x8f6: V865 = EXP 0x2 0xa0
0x8f7: V866 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fa: V867 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x8fc: V868 = 0xf2fde38b
0x902: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0x903: V870 = 0x40
0x905: V871 = M[0x40]
0x906: V872 = 0xe0
0x908: V873 = 0x2
0x90a: V874 = EXP 0x2 0xe0
0x90b: V875 = 0xffffffff
0x911: V876 = AND 0xf2fde38b 0xffffffff
0x912: V877 = MUL 0xf2fde38b 0x100000000000000000000000000000000000000000000000000000000
0x914: M[V871] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x915: V878 = 0x1
0x917: V879 = 0xa0
0x919: V880 = 0x2
0x91b: V881 = EXP 0x2 0xa0
0x91c: V882 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91f: V883 = AND V869 0xffffffffffffffffffffffffffffffffffffffff
0x920: V884 = 0x4
0x923: V885 = ADD V871 0x4
0x924: M[V885] = V883
0x925: V886 = 0x24
0x927: V887 = ADD 0x24 V871
0x928: V888 = 0x0
0x92a: V889 = 0x40
0x92c: V890 = M[0x40]
0x92f: V891 = SUB V887 V890
0x931: V892 = 0x0
0x935: V893 = EXTCODESIZE V867
0x936: V894 = ISZERO V893
0x937: V895 = ISZERO V894
0x938: V896 = 0x940
0x93b: JUMPI 0x940 V895
---
Entry stack: [V12, 0x2a3, V272, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V867, 0xf2fde38b, V887, 0x0, V890, V891, V890, 0x0, V867]
Exit stack: [V12, 0x2a3, V272, V272, V867, 0xf2fde38b, V887, 0x0, V890, V891, V890, 0x0, V867]

================================

Block 0x93c
[0x93c:0x93f]
---
Predecessors: [0x8e9]
Successors: []
---
0x93c PUSH1 0x0
0x93e DUP1
0x93f REVERT
---
0x93c: V897 = 0x0
0x93f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V272, V272, V867, 0xf2fde38b, V887, 0x0, V890, V891, V890, 0x0, V867]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V272, V272, V867, 0xf2fde38b, V887, 0x0, V890, V891, V890, 0x0, V867]

================================

Block 0x940
[0x940:0x94c]
---
Predecessors: [0x8e9]
Successors: [0x94d, 0x951]
---
0x940 JUMPDEST
0x941 PUSH2 0x2c6
0x944 GAS
0x945 SUB
0x946 CALL
0x947 ISZERO
0x948 ISZERO
0x949 PUSH2 0x951
0x94c JUMPI
---
0x940: JUMPDEST 
0x941: V898 = 0x2c6
0x944: V899 = GAS
0x945: V900 = SUB V899 0x2c6
0x946: V901 = CALL V900 V867 0x0 V890 V891 V890 0x0
0x947: V902 = ISZERO V901
0x948: V903 = ISZERO V902
0x949: V904 = 0x951
0x94c: JUMPI 0x951 V903
---
Entry stack: [V12, 0x2a3, V272, V272, V867, 0xf2fde38b, V887, 0x0, V890, V891, V890, 0x0, V867]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a3, V272, V272, V867, 0xf2fde38b, V887]

================================

Block 0x94d
[0x94d:0x950]
---
Predecessors: [0x940]
Successors: []
---
0x94d PUSH1 0x0
0x94f DUP1
0x950 REVERT
---
0x94d: V905 = 0x0
0x950: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V272, V272, V867, 0xf2fde38b, V887]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V272, V272, V867, 0xf2fde38b, V887]

================================

Block 0x951
[0x951:0x954]
---
Predecessors: [0x940]
Successors: [0x955]
---
0x951 JUMPDEST
0x952 POP
0x953 POP
0x954 POP
---
0x951: JUMPDEST 
---
Entry stack: [V12, 0x2a3, V272, V272, V867, 0xf2fde38b, V887]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x2a3, V272, V272]

================================

Block 0x955
[0x955:0x955]
---
Predecessors: [0x951]
Successors: [0x956]
---
0x955 JUMPDEST
---
0x955: JUMPDEST 
---
Entry stack: [V12, 0x2a3, V272, V272]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V272, V272]

================================

Block 0x956
[0x956:0x959]
---
Predecessors: [0x955]
Successors: [0x2a3]
---
0x956 JUMPDEST
0x957 POP
0x958 POP
0x959 JUMP
---
0x956: JUMPDEST 
0x959: JUMP 0x2a3
---
Entry stack: [V12, 0x2a3, V272, V272]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x95a
[0x95a:0x95f]
---
Predecessors: [0x31f]
Successors: [0x327]
---
0x95a JUMPDEST
0x95b PUSH1 0x1
0x95d SLOAD
0x95e DUP2
0x95f JUMP
---
0x95a: JUMPDEST 
0x95b: V906 = 0x1
0x95d: V907 = S[0x1]
0x95f: JUMP 0x327
---
Entry stack: [V12, 0x327]
Stack pops: 1
Stack additions: [S0, V907]
Exit stack: [V12, 0x327, V907]

================================

Block 0x960
[0x960:0x965]
---
Predecessors: [0x344]
Successors: [0x327]
---
0x960 JUMPDEST
0x961 PUSH1 0x3
0x963 SLOAD
0x964 DUP2
0x965 JUMP
---
0x960: JUMPDEST 
0x961: V908 = 0x3
0x963: V909 = S[0x3]
0x965: JUMP 0x327
---
Entry stack: [V12, 0x327]
Stack pops: 1
Stack additions: [S0, V909]
Exit stack: [V12, 0x327, V909]

================================

Block 0x966
[0x966:0x974]
---
Predecessors: [0x369]
Successors: [0x371]
---
0x966 JUMPDEST
0x967 PUSH1 0x0
0x969 SLOAD
0x96a PUSH1 0x1
0x96c PUSH1 0xa0
0x96e PUSH1 0x2
0x970 EXP
0x971 SUB
0x972 AND
0x973 DUP2
0x974 JUMP
---
0x966: JUMPDEST 
0x967: V910 = 0x0
0x969: V911 = S[0x0]
0x96a: V912 = 0x1
0x96c: V913 = 0xa0
0x96e: V914 = 0x2
0x970: V915 = EXP 0x2 0xa0
0x971: V916 = SUB 0x10000000000000000000000000000000000000000 0x1
0x972: V917 = AND 0xffffffffffffffffffffffffffffffffffffffff V911
0x974: JUMP 0x371
---
Entry stack: [V12, 0x371]
Stack pops: 1
Stack additions: [S0, V917]
Exit stack: [V12, 0x371, V917]

================================

Block 0x975
[0x975:0x97a]
---
Predecessors: [0x3bd]
Successors: [0x327]
---
0x975 JUMPDEST
0x976 PUSH1 0x5
0x978 SLOAD
0x979 DUP2
0x97a JUMP
---
0x975: JUMPDEST 
0x976: V918 = 0x5
0x978: V919 = S[0x5]
0x97a: JUMP 0x327
---
Entry stack: [V12, 0x327]
Stack pops: 1
Stack additions: [S0, V919]
Exit stack: [V12, 0x327, V919]

================================

Block 0x97b
[0x97b:0x983]
---
Predecessors: [0x3e2]
Successors: [0x3ea]
---
0x97b JUMPDEST
0x97c PUSH1 0x9
0x97e SLOAD
0x97f PUSH1 0xff
0x981 AND
0x982 DUP2
0x983 JUMP
---
0x97b: JUMPDEST 
0x97c: V920 = 0x9
0x97e: V921 = S[0x9]
0x97f: V922 = 0xff
0x981: V923 = AND 0xff V921
0x983: JUMP 0x3ea
---
Entry stack: [V12, 0x3ea]
Stack pops: 1
Stack additions: [S0, V923]
Exit stack: [V12, 0x3ea, V923]

================================

Block 0x984
[0x984:0x993]
---
Predecessors: [0x409]
Successors: [0x994, 0x998]
---
0x984 JUMPDEST
0x985 PUSH1 0x0
0x987 PUSH1 0x1
0x989 SLOAD
0x98a PUSH1 0x6
0x98c SLOAD
0x98d LT
0x98e ISZERO
0x98f ISZERO
0x990 PUSH2 0x998
0x993 JUMPI
---
0x984: JUMPDEST 
0x985: V924 = 0x0
0x987: V925 = 0x1
0x989: V926 = S[0x1]
0x98a: V927 = 0x6
0x98c: V928 = S[0x6]
0x98d: V929 = LT V928 V926
0x98e: V930 = ISZERO V929
0x98f: V931 = ISZERO V930
0x990: V932 = 0x998
0x993: JUMPI 0x998 V931
---
Entry stack: [V12, 0x2a3]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x2a3, 0x0]

================================

Block 0x994
[0x994:0x997]
---
Predecessors: [0x984]
Successors: []
---
0x994 PUSH1 0x0
0x996 DUP1
0x997 REVERT
---
0x994: V933 = 0x0
0x997: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0]

================================

Block 0x998
[0x998:0x9a1]
---
Predecessors: [0x984]
Successors: [0x9a2, 0x9a6]
---
0x998 JUMPDEST
0x999 PUSH1 0x5
0x99b SLOAD
0x99c TIMESTAMP
0x99d GT
0x99e PUSH2 0x9a6
0x9a1 JUMPI
---
0x998: JUMPDEST 
0x999: V934 = 0x5
0x99b: V935 = S[0x5]
0x99c: V936 = TIMESTAMP
0x99d: V937 = GT V936 V935
0x99e: V938 = 0x9a6
0x9a1: JUMPI 0x9a6 V937
---
Entry stack: [V12, 0x2a3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0]

================================

Block 0x9a2
[0x9a2:0x9a5]
---
Predecessors: [0x998]
Successors: []
---
0x9a2 PUSH1 0x0
0x9a4 DUP1
0x9a5 REVERT
---
0x9a2: V939 = 0x0
0x9a5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0]

================================

Block 0x9a6
[0x9a6:0x9c4]
---
Predecessors: [0x998]
Successors: [0x9c5, 0x9c9]
---
0x9a6 JUMPDEST
0x9a7 PUSH1 0x1
0x9a9 PUSH1 0xa0
0x9ab PUSH1 0x2
0x9ad EXP
0x9ae SUB
0x9af CALLER
0x9b0 AND
0x9b1 PUSH1 0x0
0x9b3 SWAP1
0x9b4 DUP2
0x9b5 MSTORE
0x9b6 PUSH1 0xa
0x9b8 PUSH1 0x20
0x9ba MSTORE
0x9bb PUSH1 0x40
0x9bd DUP2
0x9be SHA3
0x9bf SLOAD
0x9c0 GT
0x9c1 PUSH2 0x9c9
0x9c4 JUMPI
---
0x9a6: JUMPDEST 
0x9a7: V940 = 0x1
0x9a9: V941 = 0xa0
0x9ab: V942 = 0x2
0x9ad: V943 = EXP 0x2 0xa0
0x9ae: V944 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9af: V945 = CALLER
0x9b0: V946 = AND V945 0xffffffffffffffffffffffffffffffffffffffff
0x9b1: V947 = 0x0
0x9b5: M[0x0] = V946
0x9b6: V948 = 0xa
0x9b8: V949 = 0x20
0x9ba: M[0x20] = 0xa
0x9bb: V950 = 0x40
0x9be: V951 = SHA3 0x0 0x40
0x9bf: V952 = S[V951]
0x9c0: V953 = GT V952 0x0
0x9c1: V954 = 0x9c9
0x9c4: JUMPI 0x9c9 V953
---
Entry stack: [V12, 0x2a3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0]

================================

Block 0x9c5
[0x9c5:0x9c8]
---
Predecessors: [0x9a6]
Successors: []
---
0x9c5 PUSH1 0x0
0x9c7 DUP1
0x9c8 REVERT
---
0x9c5: V955 = 0x0
0x9c8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, 0x0]

================================

Block 0x9c9
[0x9c9:0xa0d]
---
Predecessors: [0x9a6]
Successors: [0x6fc, 0xa0e]
---
0x9c9 JUMPDEST
0x9ca POP
0x9cb PUSH1 0x1
0x9cd PUSH1 0xa0
0x9cf PUSH1 0x2
0x9d1 EXP
0x9d2 SUB
0x9d3 CALLER
0x9d4 AND
0x9d5 PUSH1 0x0
0x9d7 DUP2
0x9d8 DUP2
0x9d9 MSTORE
0x9da PUSH1 0xa
0x9dc PUSH1 0x20
0x9de MSTORE
0x9df PUSH1 0x40
0x9e1 DUP1
0x9e2 DUP3
0x9e3 SHA3
0x9e4 DUP1
0x9e5 SLOAD
0x9e6 SWAP3
0x9e7 SWAP1
0x9e8 SSTORE
0x9e9 SWAP1
0x9ea SWAP2
0x9eb SWAP1
0x9ec DUP3
0x9ed ISZERO
0x9ee PUSH2 0x8fc
0x9f1 MUL
0x9f2 SWAP1
0x9f3 DUP4
0x9f4 SWAP1
0x9f5 MLOAD
0x9f6 PUSH1 0x0
0x9f8 PUSH1 0x40
0x9fa MLOAD
0x9fb DUP1
0x9fc DUP4
0x9fd SUB
0x9fe DUP2
0x9ff DUP6
0xa00 DUP9
0xa01 DUP9
0xa02 CALL
0xa03 SWAP4
0xa04 POP
0xa05 POP
0xa06 POP
0xa07 POP
0xa08 ISZERO
0xa09 ISZERO
0xa0a PUSH2 0x6fc
0xa0d JUMPI
---
0x9c9: JUMPDEST 
0x9cb: V956 = 0x1
0x9cd: V957 = 0xa0
0x9cf: V958 = 0x2
0x9d1: V959 = EXP 0x2 0xa0
0x9d2: V960 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d3: V961 = CALLER
0x9d4: V962 = AND V961 0xffffffffffffffffffffffffffffffffffffffff
0x9d5: V963 = 0x0
0x9d9: M[0x0] = V962
0x9da: V964 = 0xa
0x9dc: V965 = 0x20
0x9de: M[0x20] = 0xa
0x9df: V966 = 0x40
0x9e3: V967 = SHA3 0x0 0x40
0x9e5: V968 = S[V967]
0x9e8: S[V967] = 0x0
0x9ed: V969 = ISZERO V968
0x9ee: V970 = 0x8fc
0x9f1: V971 = MUL 0x8fc V969
0x9f5: V972 = M[0x40]
0x9f6: V973 = 0x0
0x9f8: V974 = 0x40
0x9fa: V975 = M[0x40]
0x9fd: V976 = SUB V972 V975
0xa02: V977 = CALL V971 V962 V968 V975 V976 V975 0x0
0xa08: V978 = ISZERO V977
0xa09: V979 = ISZERO V978
0xa0a: V980 = 0x6fc
0xa0d: JUMPI 0x6fc V979
---
Entry stack: [V12, 0x2a3, 0x0]
Stack pops: 1
Stack additions: [V968]
Exit stack: [V12, 0x2a3, V968]

================================

Block 0xa0e
[0xa0e:0xa11]
---
Predecessors: [0x9c9]
Successors: []
---
0xa0e PUSH1 0x0
0xa10 DUP1
0xa11 REVERT
---
0xa0e: V981 = 0x0
0xa11: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V968]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V968]

================================

Block 0xa12
[0xa12:0xa12]
---
Predecessors: []
Successors: [0xa13]
---
0xa12 JUMPDEST
---
0xa12: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa13
[0xa13:0xa13]
---
Predecessors: [0xa12]
Successors: [0xa14]
---
0xa13 JUMPDEST
---
0xa13: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa14
[0xa14:0xa16]
---
Predecessors: [0xa13]
Successors: []
Has unresolved jump.
---
0xa14 JUMPDEST
0xa15 POP
0xa16 JUMP
---
0xa14: JUMPDEST 
0xa16: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xa17
[0xa17:0xa23]
---
Predecessors: [0x445]
Successors: [0xa24, 0xa25]
---
0xa17 JUMPDEST
0xa18 PUSH1 0x8
0xa1a DUP1
0xa1b SLOAD
0xa1c DUP3
0xa1d SWAP1
0xa1e DUP2
0xa1f LT
0xa20 PUSH2 0xa25
0xa23 JUMPI
---
0xa17: JUMPDEST 
0xa18: V982 = 0x8
0xa1b: V983 = S[0x8]
0xa1f: V984 = LT V387 V983
0xa20: V985 = 0xa25
0xa23: JUMPI 0xa25 V984
---
Entry stack: [V12, 0x327, V387]
Stack pops: 1
Stack additions: [S0, 0x8, S0]
Exit stack: [V12, 0x327, V387, 0x8, V387]

================================

Block 0xa24
[0xa24:0xa24]
---
Predecessors: [0xa17]
Successors: []
---
0xa24 INVALID
---
0xa24: INVALID 
---
Entry stack: [V12, 0x327, V387, 0x8, V387]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x327, V387, 0x8, V387]

================================

Block 0xa25
[0xa25:0xa32]
---
Predecessors: [0xa17, 0xa5a]
Successors: [0xa33]
---
0xa25 JUMPDEST
0xa26 SWAP1
0xa27 PUSH1 0x0
0xa29 MSTORE
0xa2a PUSH1 0x20
0xa2c PUSH1 0x0
0xa2e SHA3
0xa2f SWAP1
0xa30 ADD
0xa31 PUSH1 0x0
---
0xa25: JUMPDEST 
0xa27: V986 = 0x0
0xa29: M[0x0] = {0x7, 0x8}
0xa2a: V987 = 0x20
0xa2c: V988 = 0x0
0xa2e: V989 = SHA3 0x0 0x20
0xa30: V990 = ADD S0 V989
0xa31: V991 = 0x0
---
Entry stack: [V12, 0x327, S2, {0x7, 0x8}, S0]
Stack pops: 2
Stack additions: [V990, 0x0]
Exit stack: [V12, 0x327, S2, V990, 0x0]

================================

Block 0xa33
[0xa33:0xa39]
---
Predecessors: [0xa25]
Successors: [0x327]
---
0xa33 JUMPDEST
0xa34 POP
0xa35 SLOAD
0xa36 SWAP1
0xa37 POP
0xa38 DUP2
0xa39 JUMP
---
0xa33: JUMPDEST 
0xa35: V992 = S[V990]
0xa39: JUMP 0x327
---
Entry stack: [V12, 0x327, S2, V990, 0x0]
Stack pops: 4
Stack additions: [S3, V992]
Exit stack: [V12, 0x327, V992]

================================

Block 0xa3a
[0xa3a:0xa3e]
---
Predecessors: [0x46d]
Successors: []
---
0xa3a JUMPDEST
0xa3b PUSH1 0x0
0xa3d DUP1
0xa3e REVERT
---
0xa3a: JUMPDEST 
0xa3b: V993 = 0x0
0xa3e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V408, V410, V413, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V408, V410, V413, V415]

================================

Block 0xa3f
[0xa3f:0xa44]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xa3f JUMPDEST
0xa40 POP
0xa41 POP
0xa42 POP
0xa43 POP
0xa44 JUMP
---
0xa3f: JUMPDEST 
0xa44: JUMP S4
---
Entry stack: []
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xa45
[0xa45:0xa4a]
---
Predecessors: [0x49e]
Successors: [0x327]
---
0xa45 JUMPDEST
0xa46 PUSH1 0x6
0xa48 SLOAD
0xa49 DUP2
0xa4a JUMP
---
0xa45: JUMPDEST 
0xa46: V994 = 0x6
0xa48: V995 = S[0x6]
0xa4a: JUMP 0x327
---
Entry stack: [V12, 0x327]
Stack pops: 1
Stack additions: [S0, V995]
Exit stack: [V12, 0x327, V995]

================================

Block 0xa4b
[0xa4b:0xa53]
---
Predecessors: [0x4c3]
Successors: [0x327]
---
0xa4b JUMPDEST
0xa4c PUSH5 0xba43b7400
0xa52 DUP2
0xa53 JUMP
---
0xa4b: JUMPDEST 
0xa4c: V996 = 0xba43b7400
0xa53: JUMP 0x327
---
Entry stack: [V12, 0x327]
Stack pops: 1
Stack additions: [S0, 0xba43b7400]
Exit stack: [V12, 0x327, 0xba43b7400]

================================

Block 0xa54
[0xa54:0xa59]
---
Predecessors: [0x4e8]
Successors: [0x327]
---
0xa54 JUMPDEST
0xa55 PUSH1 0x4
0xa57 SLOAD
0xa58 DUP2
0xa59 JUMP
---
0xa54: JUMPDEST 
0xa55: V997 = 0x4
0xa57: V998 = S[0x4]
0xa59: JUMP 0x327
---
Entry stack: [V12, 0x327]
Stack pops: 1
Stack additions: [S0, V998]
Exit stack: [V12, 0x327, V998]

================================

Block 0xa5a
[0xa5a:0xa66]
---
Predecessors: [0x50d]
Successors: [0xa25, 0xa67]
---
0xa5a JUMPDEST
0xa5b PUSH1 0x7
0xa5d DUP1
0xa5e SLOAD
0xa5f DUP3
0xa60 SWAP1
0xa61 DUP2
0xa62 LT
0xa63 PUSH2 0xa25
0xa66 JUMPI
---
0xa5a: JUMPDEST 
0xa5b: V999 = 0x7
0xa5e: V1000 = S[0x7]
0xa62: V1001 = LT V462 V1000
0xa63: V1002 = 0xa25
0xa66: JUMPI 0xa25 V1001
---
Entry stack: [V12, 0x327, V462]
Stack pops: 1
Stack additions: [S0, 0x7, S0]
Exit stack: [V12, 0x327, V462, 0x7, V462]

================================

Block 0xa67
[0xa67:0xa67]
---
Predecessors: [0xa5a]
Successors: []
---
0xa67 INVALID
---
0xa67: INVALID 
---
Entry stack: [V12, 0x327, V462, 0x7, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x327, V462, 0x7, V462]

================================

Block 0xa68
[0xa68:0xa75]
---
Predecessors: []
Successors: [0xa76]
---
0xa68 JUMPDEST
0xa69 SWAP1
0xa6a PUSH1 0x0
0xa6c MSTORE
0xa6d PUSH1 0x20
0xa6f PUSH1 0x0
0xa71 SHA3
0xa72 SWAP1
0xa73 ADD
0xa74 PUSH1 0x0
---
0xa68: JUMPDEST 
0xa6a: V1003 = 0x0
0xa6c: M[0x0] = S1
0xa6d: V1004 = 0x20
0xa6f: V1005 = 0x0
0xa71: V1006 = SHA3 0x0 0x20
0xa73: V1007 = ADD S0 V1006
0xa74: V1008 = 0x0
---
Entry stack: []
Stack pops: 2
Stack additions: [V1007, 0x0]
Exit stack: [V1007, 0x0]

================================

Block 0xa76
[0xa76:0xa7c]
---
Predecessors: [0xa68]
Successors: []
Has unresolved jump.
---
0xa76 JUMPDEST
0xa77 POP
0xa78 SLOAD
0xa79 SWAP1
0xa7a POP
0xa7b DUP2
0xa7c JUMP
---
0xa76: JUMPDEST 
0xa78: V1009 = S[V1007]
0xa7c: JUMP S3
---
Entry stack: [V1007, 0x0]
Stack pops: 4
Stack additions: [S3, V1009]
Exit stack: [S1, V1009]

================================

Block 0xa7d
[0xa7d:0xa8b]
---
Predecessors: [0x535]
Successors: [0x371]
---
0xa7d JUMPDEST
0xa7e PUSH1 0x2
0xa80 SLOAD
0xa81 PUSH1 0x1
0xa83 PUSH1 0xa0
0xa85 PUSH1 0x2
0xa87 EXP
0xa88 SUB
0xa89 AND
0xa8a DUP2
0xa8b JUMP
---
0xa7d: JUMPDEST 
0xa7e: V1010 = 0x2
0xa80: V1011 = S[0x2]
0xa81: V1012 = 0x1
0xa83: V1013 = 0xa0
0xa85: V1014 = 0x2
0xa87: V1015 = EXP 0x2 0xa0
0xa88: V1016 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa89: V1017 = AND 0xffffffffffffffffffffffffffffffffffffffff V1011
0xa8b: JUMP 0x371
---
Entry stack: [V12, 0x371]
Stack pops: 1
Stack additions: [S0, V1017]
Exit stack: [V12, 0x371, V1017]

================================

Block 0xa8c
[0xa8c:0xaa2]
---
Predecessors: [0x564]
Successors: [0xaa3, 0xaa7]
---
0xa8c JUMPDEST
0xa8d PUSH1 0x0
0xa8f SLOAD
0xa90 CALLER
0xa91 PUSH1 0x1
0xa93 PUSH1 0xa0
0xa95 PUSH1 0x2
0xa97 EXP
0xa98 SUB
0xa99 SWAP1
0xa9a DUP2
0xa9b AND
0xa9c SWAP2
0xa9d AND
0xa9e EQ
0xa9f PUSH2 0xaa7
0xaa2 JUMPI
---
0xa8c: JUMPDEST 
0xa8d: V1018 = 0x0
0xa8f: V1019 = S[0x0]
0xa90: V1020 = CALLER
0xa91: V1021 = 0x1
0xa93: V1022 = 0xa0
0xa95: V1023 = 0x2
0xa97: V1024 = EXP 0x2 0xa0
0xa98: V1025 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9b: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1020
0xa9d: V1027 = AND V1019 0xffffffffffffffffffffffffffffffffffffffff
0xa9e: V1028 = EQ V1027 V1026
0xa9f: V1029 = 0xaa7
0xaa2: JUMPI 0xaa7 V1028
---
Entry stack: [V12, 0x2a3, V502]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V502]

================================

Block 0xaa3
[0xaa3:0xaa6]
---
Predecessors: [0xa8c]
Successors: []
---
0xaa3 PUSH1 0x0
0xaa5 DUP1
0xaa6 REVERT
---
0xaa3: V1030 = 0x0
0xaa6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V502]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V502]

================================

Block 0xaa7
[0xaa7:0xab7]
---
Predecessors: [0xa8c]
Successors: [0xab8, 0xabc]
---
0xaa7 JUMPDEST
0xaa8 PUSH1 0x1
0xaaa PUSH1 0xa0
0xaac PUSH1 0x2
0xaae EXP
0xaaf SUB
0xab0 DUP2
0xab1 AND
0xab2 ISZERO
0xab3 ISZERO
0xab4 PUSH2 0xabc
0xab7 JUMPI
---
0xaa7: JUMPDEST 
0xaa8: V1031 = 0x1
0xaaa: V1032 = 0xa0
0xaac: V1033 = 0x2
0xaae: V1034 = EXP 0x2 0xa0
0xaaf: V1035 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab1: V1036 = AND V502 0xffffffffffffffffffffffffffffffffffffffff
0xab2: V1037 = ISZERO V1036
0xab3: V1038 = ISZERO V1037
0xab4: V1039 = 0xabc
0xab7: JUMPI 0xabc V1038
---
Entry stack: [V12, 0x2a3, V502]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a3, V502]

================================

Block 0xab8
[0xab8:0xabb]
---
Predecessors: [0xaa7]
Successors: []
---
0xab8 PUSH1 0x0
0xaba DUP1
0xabb REVERT
---
0xab8: V1040 = 0x0
0xabb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V502]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V502]

================================

Block 0xabc
[0xabc:0xb20]
---
Predecessors: [0xaa7]
Successors: [0xb21]
---
0xabc JUMPDEST
0xabd PUSH1 0x0
0xabf SLOAD
0xac0 PUSH1 0x1
0xac2 PUSH1 0xa0
0xac4 PUSH1 0x2
0xac6 EXP
0xac7 SUB
0xac8 DUP1
0xac9 DUP4
0xaca AND
0xacb SWAP2
0xacc AND
0xacd PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xaee PUSH1 0x40
0xaf0 MLOAD
0xaf1 PUSH1 0x40
0xaf3 MLOAD
0xaf4 DUP1
0xaf5 SWAP2
0xaf6 SUB
0xaf7 SWAP1
0xaf8 LOG3
0xaf9 PUSH1 0x0
0xafb DUP1
0xafc SLOAD
0xafd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb12 NOT
0xb13 AND
0xb14 PUSH1 0x1
0xb16 PUSH1 0xa0
0xb18 PUSH1 0x2
0xb1a EXP
0xb1b SUB
0xb1c DUP4
0xb1d AND
0xb1e OR
0xb1f SWAP1
0xb20 SSTORE
---
0xabc: JUMPDEST 
0xabd: V1041 = 0x0
0xabf: V1042 = S[0x0]
0xac0: V1043 = 0x1
0xac2: V1044 = 0xa0
0xac4: V1045 = 0x2
0xac6: V1046 = EXP 0x2 0xa0
0xac7: V1047 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaca: V1048 = AND V502 0xffffffffffffffffffffffffffffffffffffffff
0xacc: V1049 = AND V1042 0xffffffffffffffffffffffffffffffffffffffff
0xacd: V1050 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xaee: V1051 = 0x40
0xaf0: V1052 = M[0x40]
0xaf1: V1053 = 0x40
0xaf3: V1054 = M[0x40]
0xaf6: V1055 = SUB V1052 V1054
0xaf8: LOG V1054 V1055 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1049 V1048
0xaf9: V1056 = 0x0
0xafc: V1057 = S[0x0]
0xafd: V1058 = 0xffffffffffffffffffffffffffffffffffffffff
0xb12: V1059 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb13: V1060 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1057
0xb14: V1061 = 0x1
0xb16: V1062 = 0xa0
0xb18: V1063 = 0x2
0xb1a: V1064 = EXP 0x2 0xa0
0xb1b: V1065 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1d: V1066 = AND V502 0xffffffffffffffffffffffffffffffffffffffff
0xb1e: V1067 = OR V1066 V1060
0xb20: S[0x0] = V1067
---
Entry stack: [V12, 0x2a3, V502]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a3, V502]

================================

Block 0xb21
[0xb21:0xb21]
---
Predecessors: [0xabc]
Successors: [0xb22]
---
0xb21 JUMPDEST
---
0xb21: JUMPDEST 
---
Entry stack: [V12, 0x2a3, V502]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V502]

================================

Block 0xb22
[0xb22:0xb24]
---
Predecessors: [0xb21]
Successors: [0x2a3]
---
0xb22 JUMPDEST
0xb23 POP
0xb24 JUMP
---
0xb22: JUMPDEST 
0xb24: JUMP 0x2a3
---
Entry stack: [V12, 0x2a3, V502]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xb25
[0xb25:0xb7d]
---
Predecessors: [0x786]
Successors: [0xb7e, 0xb82]
---
0xb25 JUMPDEST
0xb26 DUP3
0xb27 PUSH1 0x1
0xb29 PUSH1 0xa0
0xb2b PUSH1 0x2
0xb2d EXP
0xb2e SUB
0xb2f AND
0xb30 PUSH4 0xa9059cbb
0xb35 DUP4
0xb36 DUP4
0xb37 PUSH1 0x0
0xb39 PUSH1 0x40
0xb3b MLOAD
0xb3c PUSH1 0x20
0xb3e ADD
0xb3f MSTORE
0xb40 PUSH1 0x40
0xb42 MLOAD
0xb43 PUSH1 0xe0
0xb45 PUSH1 0x2
0xb47 EXP
0xb48 PUSH4 0xffffffff
0xb4d DUP6
0xb4e AND
0xb4f MUL
0xb50 DUP2
0xb51 MSTORE
0xb52 PUSH1 0x1
0xb54 PUSH1 0xa0
0xb56 PUSH1 0x2
0xb58 EXP
0xb59 SUB
0xb5a SWAP1
0xb5b SWAP3
0xb5c AND
0xb5d PUSH1 0x4
0xb5f DUP4
0xb60 ADD
0xb61 MSTORE
0xb62 PUSH1 0x24
0xb64 DUP3
0xb65 ADD
0xb66 MSTORE
0xb67 PUSH1 0x44
0xb69 ADD
0xb6a PUSH1 0x20
0xb6c PUSH1 0x40
0xb6e MLOAD
0xb6f DUP1
0xb70 DUP4
0xb71 SUB
0xb72 DUP2
0xb73 PUSH1 0x0
0xb75 DUP8
0xb76 DUP1
0xb77 EXTCODESIZE
0xb78 ISZERO
0xb79 ISZERO
0xb7a PUSH2 0xb82
0xb7d JUMPI
---
0xb25: JUMPDEST 
0xb27: V1068 = 0x1
0xb29: V1069 = 0xa0
0xb2b: V1070 = 0x2
0xb2d: V1071 = EXP 0x2 0xa0
0xb2e: V1072 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2f: V1073 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0xb30: V1074 = 0xa9059cbb
0xb37: V1075 = 0x0
0xb39: V1076 = 0x40
0xb3b: V1077 = M[0x40]
0xb3c: V1078 = 0x20
0xb3e: V1079 = ADD 0x20 V1077
0xb3f: M[V1079] = 0x0
0xb40: V1080 = 0x40
0xb42: V1081 = M[0x40]
0xb43: V1082 = 0xe0
0xb45: V1083 = 0x2
0xb47: V1084 = EXP 0x2 0xe0
0xb48: V1085 = 0xffffffff
0xb4e: V1086 = AND 0xa9059cbb 0xffffffff
0xb4f: V1087 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb51: M[V1081] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb52: V1088 = 0x1
0xb54: V1089 = 0xa0
0xb56: V1090 = 0x2
0xb58: V1091 = EXP 0x2 0xa0
0xb59: V1092 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb5c: V1093 = AND V718 0xffffffffffffffffffffffffffffffffffffffff
0xb5d: V1094 = 0x4
0xb60: V1095 = ADD V1081 0x4
0xb61: M[V1095] = V1093
0xb62: V1096 = 0x24
0xb65: V1097 = ADD V1081 0x24
0xb66: M[V1097] = V708
0xb67: V1098 = 0x44
0xb69: V1099 = ADD 0x44 V1081
0xb6a: V1100 = 0x20
0xb6c: V1101 = 0x40
0xb6e: V1102 = M[0x40]
0xb71: V1103 = SUB V1099 V1102
0xb73: V1104 = 0x0
0xb77: V1105 = EXTCODESIZE V1073
0xb78: V1106 = ISZERO V1105
0xb79: V1107 = ISZERO V1106
0xb7a: V1108 = 0xb82
0xb7d: JUMPI 0xb82 V1107
---
Entry stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708]
Stack pops: 3
Stack additions: [S2, S1, S0, V1073, 0xa9059cbb, V1099, 0x20, V1102, V1103, V1102, 0x0, V1073]
Exit stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708, V1073, 0xa9059cbb, V1099, 0x20, V1102, V1103, V1102, 0x0, V1073]

================================

Block 0xb7e
[0xb7e:0xb81]
---
Predecessors: [0xb25]
Successors: []
---
0xb7e PUSH1 0x0
0xb80 DUP1
0xb81 REVERT
---
0xb7e: V1109 = 0x0
0xb81: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708, V1073, 0xa9059cbb, V1099, 0x20, V1102, V1103, V1102, 0x0, V1073]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708, V1073, 0xa9059cbb, V1099, 0x20, V1102, V1103, V1102, 0x0, V1073]

================================

Block 0xb82
[0xb82:0xb8e]
---
Predecessors: [0xb25]
Successors: [0xb8f, 0xb93]
---
0xb82 JUMPDEST
0xb83 PUSH2 0x2c6
0xb86 GAS
0xb87 SUB
0xb88 CALL
0xb89 ISZERO
0xb8a ISZERO
0xb8b PUSH2 0xb93
0xb8e JUMPI
---
0xb82: JUMPDEST 
0xb83: V1110 = 0x2c6
0xb86: V1111 = GAS
0xb87: V1112 = SUB V1111 0x2c6
0xb88: V1113 = CALL V1112 V1073 0x0 V1102 V1103 V1102 0x20
0xb89: V1114 = ISZERO V1113
0xb8a: V1115 = ISZERO V1114
0xb8b: V1116 = 0xb93
0xb8e: JUMPI 0xb93 V1115
---
Entry stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708, V1073, 0xa9059cbb, V1099, 0x20, V1102, V1103, V1102, 0x0, V1073]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708, V1073, 0xa9059cbb, V1099]

================================

Block 0xb8f
[0xb8f:0xb92]
---
Predecessors: [0xb82]
Successors: []
---
0xb8f PUSH1 0x0
0xb91 DUP1
0xb92 REVERT
---
0xb8f: V1117 = 0x0
0xb92: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708, V1073, 0xa9059cbb, V1099]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708, V1073, 0xa9059cbb, V1099]

================================

Block 0xb93
[0xb93:0xba3]
---
Predecessors: [0xb82]
Successors: [0x8c7, 0xba4]
---
0xb93 JUMPDEST
0xb94 POP
0xb95 POP
0xb96 POP
0xb97 PUSH1 0x40
0xb99 MLOAD
0xb9a DUP1
0xb9b MLOAD
0xb9c SWAP1
0xb9d POP
0xb9e ISZERO
0xb9f ISZERO
0xba0 PUSH2 0x8c7
0xba3 JUMPI
---
0xb93: JUMPDEST 
0xb97: V1118 = 0x40
0xb99: V1119 = M[0x40]
0xb9b: V1120 = M[V1119]
0xb9e: V1121 = ISZERO V1120
0xb9f: V1122 = ISZERO V1121
0xba0: V1123 = 0x8c7
0xba3: JUMPI 0x8c7 V1122
---
Entry stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708, V1073, 0xa9059cbb, V1099]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708]

================================

Block 0xba4
[0xba4:0xba4]
---
Predecessors: [0xb93]
Successors: []
---
0xba4 INVALID
---
0xba4: INVALID 
---
Entry stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a3, V252, V708, 0x29d, V717, V718, V708]

================================

Block 0xba5
[0xba5:0xba5]
---
Predecessors: []
Successors: [0xba6]
---
0xba5 JUMPDEST
---
0xba5: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xba6
[0xba6:0xbe1]
---
Predecessors: [0xba5]
Successors: []
---
0xba6 JUMPDEST
0xba7 POP
0xba8 POP
0xba9 POP
0xbaa JUMP
0xbab STOP
0xbac LOG1
0xbad PUSH6 0x627a7a723058
0xbb4 SHA3
0xbb5 MISSING 0xd4
0xbb6 PUSH27 0x7a682a93488e4f63666ad750c210a7fe24b8f7a5fb5ccccb738614
0xbd2 RETURNDATASIZE
0xbd3 MISSING 0xd8
0xbd4 PUSH13 0x29
---
0xba6: JUMPDEST 
0xbaa: JUMP S3
0xbab: STOP 
0xbac: LOG S0 S1 S2
0xbad: V1124 = 0x627a7a723058
0xbb4: V1125 = SHA3 0x627a7a723058 S3
0xbb5: MISSING 0xd4
0xbb6: V1126 = 0x7a682a93488e4f63666ad750c210a7fe24b8f7a5fb5ccccb738614
0xbd2: V1127 = RETURNDATASIZE
0xbd3: MISSING 0xd8
0xbd4: V1128 = 0x29
---
Entry stack: []
Stack pops: 60
Stack additions: [0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x155dd5ee
Entry block: 0x2a5
Exit block: 0x2a3
Body: 0x2a3, 0x2a5, 0x2ac, 0x2b0, 0x69f, 0x6b6, 0x6ba, 0x6c7, 0x6cb, 0x6f8, 0x6fc, 0x6fd, 0x6fe, 0x6ff

Function 1:
Public function signature: 0x17ffc320
Entry block: 0x2bd
Exit block: 0x2a3
Body: 0x29d, 0x29e, 0x29f, 0x2a3, 0x2bd, 0x2c4, 0x2c8, 0x702, 0x71a, 0x71e, 0x771, 0x775, 0x782, 0x786, 0x8c7, 0x8cb, 0xb25, 0xb7e, 0xb82, 0xb8f, 0xb93, 0xba4

Function 2:
Public function signature: 0x1ed692c0
Entry block: 0x2de
Exit block: 0x2a3
Body: 0x29d, 0x29e, 0x29f, 0x2a3, 0x2de, 0x2e5, 0x2e9, 0x7b8, 0x7c3, 0x7c8, 0x7ce, 0x7e1, 0x7e8, 0x7ec, 0x830, 0x834, 0x841, 0x845, 0x8b2, 0x8b6, 0x8c3, 0x8c7, 0x8cb

Function 3:
Public function signature: 0x2aed7f3f
Entry block: 0x2f3
Exit block: 0x2a3
Body: 0x2a3, 0x2f3, 0x2fa, 0x2fe, 0x8cd, 0x8e5, 0x8e9, 0x93c, 0x940, 0x94d, 0x951, 0x955, 0x956

Function 4:
Public function signature: 0x40193883
Entry block: 0x314
Exit block: 0x327
Body: 0x314, 0x31b, 0x31f, 0x327, 0x95a

Function 5:
Public function signature: 0x7ecc2b56
Entry block: 0x339
Exit block: 0x327
Body: 0x327, 0x339, 0x340, 0x344, 0x960

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x35e
Exit block: 0x371
Body: 0x35e, 0x365, 0x369, 0x371, 0x966

Function 7:
Public function signature: 0x9d1b464a
Entry block: 0x38d
Exit block: 0x327
Body: 0x327, 0x38d, 0x394, 0x398

Function 8:
Public function signature: 0xa85adeab
Entry block: 0x3b2
Exit block: 0x327
Body: 0x327, 0x3b2, 0x3b9, 0x3bd, 0x975

Function 9:
Public function signature: 0xb3f05b97
Entry block: 0x3d7
Exit block: 0x3ea
Body: 0x3d7, 0x3de, 0x3e2, 0x3ea, 0x97b

Function 10:
Public function signature: 0xb5545a3c
Entry block: 0x3fe
Exit block: 0x2a3
Body: 0x2a3, 0x3fe, 0x405, 0x409, 0x6fc, 0x6fd, 0x6fe, 0x6ff, 0x984, 0x994, 0x998, 0x9a2, 0x9a6, 0x9c5, 0x9c9, 0xa0e

Function 11:
Public function signature: 0xbb50c67a
Entry block: 0x413
Exit block: 0x3ea
Body: 0x3ea, 0x413, 0x41a, 0x41e

Function 12:
Public function signature: 0xbc31c1c1
Entry block: 0x43a
Exit block: 0x327
Body: 0x327, 0x43a, 0x441, 0x445, 0xa17, 0xa24, 0xa25, 0xa33

Function 13:
Public function signature: 0xc0ee0b8a
Entry block: 0x462
Exit block: 0xa3a
Body: 0x462, 0x469, 0x46d, 0xa3a

Function 14:
Public function signature: 0xe29eb836
Entry block: 0x493
Exit block: 0x327
Body: 0x327, 0x493, 0x49a, 0x49e, 0xa45

Function 15:
Public function signature: 0xe3bbb4f1
Entry block: 0x4b8
Exit block: 0x327
Body: 0x327, 0x4b8, 0x4bf, 0x4c3, 0xa4b

Function 16:
Public function signature: 0xe6fd48bc
Entry block: 0x4dd
Exit block: 0x327
Body: 0x327, 0x4dd, 0x4e4, 0x4e8, 0xa54

Function 17:
Public function signature: 0xea4a1104
Entry block: 0x502
Exit block: 0x327
Body: 0x327, 0x502, 0x509, 0x50d, 0xa25, 0xa33, 0xa5a, 0xa67

Function 18:
Public function signature: 0xf1388f14
Entry block: 0x52a
Exit block: 0x371
Body: 0x371, 0x52a, 0x531, 0x535, 0xa7d

Function 19:
Public function signature: 0xf2fde38b
Entry block: 0x559
Exit block: 0x2a3
Body: 0x2a3, 0x559, 0x560, 0x564, 0xa8c, 0xaa3, 0xaa7, 0xab8, 0xabc, 0xb21, 0xb22

Function 20:
Public fallback function
Entry block: 0xf6
Exit block: 0x239
Body: 0xf6, 0xfa, 0x10b, 0x10c, 0x114, 0x11b, 0x11f, 0x128, 0x12c, 0x134, 0x13f, 0x140, 0x239, 0x63f, 0x64c, 0x657, 0x658, 0x65b, 0x662

Function 21:
Private function
Entry block: 0x5b2
Exit block: 0x63b
Body: 0x5b2, 0x5c0, 0x5c7, 0x5cd, 0x5d5, 0x5d9, 0x5e4, 0x5f1, 0x5ff, 0x609, 0x616, 0x624, 0x62d, 0x62e, 0x636, 0x63b

Function 22:
Private function
Entry block: 0x66e
Exit block: 0x667
Body: 0x150, 0x15c, 0x170, 0x199, 0x663, 0x667, 0x66e

Function 23:
Private function
Entry block: 0x57a
Exit block: 0x5af
Body: 0x57a, 0x588, 0x58f, 0x596, 0x59d, 0x5a4, 0x5ac, 0x5af

