Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xad]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xad
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xad
0xa: JUMPI 0xad V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x3ea]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x29dcb0cf
0x3a EQ
0x3b PUSH2 0x3ea
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x29dcb0cf
0x3a: V12 = EQ 0x29dcb0cf V10
0x3b: V13 = 0x3ea
0x3e: JUMPI 0x3ea V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x410]
---
0x3f DUP1
0x40 PUSH4 0x30aa189d
0x45 EQ
0x46 PUSH2 0x410
0x49 JUMPI
---
0x40: V14 = 0x30aa189d
0x45: V15 = EQ 0x30aa189d V10
0x46: V16 = 0x410
0x49: JUMPI 0x410 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x422]
---
0x4a DUP1
0x4b PUSH4 0x38af3eed
0x50 EQ
0x51 PUSH2 0x422
0x54 JUMPI
---
0x4b: V17 = 0x38af3eed
0x50: V18 = EQ 0x38af3eed V10
0x51: V19 = 0x422
0x54: JUMPI 0x422 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x474]
---
0x55 DUP1
0x56 PUSH4 0x41c0e1b5
0x5b EQ
0x5c PUSH2 0x474
0x5f JUMPI
---
0x56: V20 = 0x41c0e1b5
0x5b: V21 = EQ 0x41c0e1b5 V10
0x5c: V22 = 0x474
0x5f: JUMPI 0x474 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x486]
---
0x60 DUP1
0x61 PUSH4 0x6e66f6e9
0x66 EQ
0x67 PUSH2 0x486
0x6a JUMPI
---
0x61: V23 = 0x6e66f6e9
0x66: V24 = EQ 0x6e66f6e9 V10
0x67: V25 = 0x486
0x6a: JUMPI 0x486 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x4d8]
---
0x6b DUP1
0x6c PUSH4 0x70a08231
0x71 EQ
0x72 PUSH2 0x4d8
0x75 JUMPI
---
0x6c: V26 = 0x70a08231
0x71: V27 = EQ 0x70a08231 V10
0x72: V28 = 0x4d8
0x75: JUMPI 0x4d8 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x522]
---
0x76 DUP1
0x77 PUSH4 0x7a3a0e84
0x7c EQ
0x7d PUSH2 0x522
0x80 JUMPI
---
0x77: V29 = 0x7a3a0e84
0x7c: V30 = EQ 0x7a3a0e84 V10
0x7d: V31 = 0x522
0x80: JUMPI 0x522 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x548]
---
0x81 DUP1
0x82 PUSH4 0x7b3e5e7b
0x87 EQ
0x88 PUSH2 0x548
0x8b JUMPI
---
0x82: V32 = 0x7b3e5e7b
0x87: V33 = EQ 0x7b3e5e7b V10
0x88: V34 = 0x548
0x8b: JUMPI 0x548 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x56e]
---
0x8c DUP1
0x8d PUSH4 0xa035b1fe
0x92 EQ
0x93 PUSH2 0x56e
0x96 JUMPI
---
0x8d: V35 = 0xa035b1fe
0x92: V36 = EQ 0xa035b1fe V10
0x93: V37 = 0x56e
0x96: JUMPI 0x56e V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x594]
---
0x97 DUP1
0x98 PUSH4 0xf9f16ef2
0x9d EQ
0x9e PUSH2 0x594
0xa1 JUMPI
---
0x98: V38 = 0xf9f16ef2
0x9d: V39 = EQ 0xf9f16ef2 V10
0x9e: V40 = 0x594
0xa1: JUMPI 0x594 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x5ba]
---
0xa2 DUP1
0xa3 PUSH4 0xfd6b7ef8
0xa8 EQ
0xa9 PUSH2 0x5ba
0xac JUMPI
---
0xa3: V41 = 0xfd6b7ef8
0xa8: V42 = EQ 0xfd6b7ef8 V10
0xa9: V43 = 0x5ba
0xac: JUMPI 0x5ba V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0x0, 0xa2]
Successors: [0xb1]
---
0xad JUMPDEST
0xae PUSH2 0x3e8
---
0xad: JUMPDEST 
0xae: V44 = 0x3e8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3e8]
Exit stack: [V10, 0x3e8]

================================

Block 0xb1
[0xb1:0xc9]
---
Predecessors: [0xad]
Successors: [0xca, 0x1c9]
---
0xb1 JUMPDEST
0xb2 PUSH1 0x0
0xb4 PUSH1 0x9
0xb6 PUSH1 0x2
0xb8 SWAP1
0xb9 SLOAD
0xba SWAP1
0xbb PUSH2 0x100
0xbe EXP
0xbf SWAP1
0xc0 DIV
0xc1 PUSH1 0xff
0xc3 AND
0xc4 ISZERO
0xc5 ISZERO
0xc6 PUSH2 0x1c9
0xc9 JUMPI
---
0xb1: JUMPDEST 
0xb2: V45 = 0x0
0xb4: V46 = 0x9
0xb6: V47 = 0x2
0xb9: V48 = S[0x9]
0xbb: V49 = 0x100
0xbe: V50 = EXP 0x100 0x2
0xc0: V51 = DIV V48 0x10000
0xc1: V52 = 0xff
0xc3: V53 = AND 0xff V51
0xc4: V54 = ISZERO V53
0xc5: V55 = ISZERO V54
0xc6: V56 = 0x1c9
0xc9: JUMPI 0x1c9 V55
---
Entry stack: [V10, 0x3e8]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0xca
[0xca:0x18c]
---
Predecessors: [0xb1]
Successors: [0x18d, 0x18e]
---
0xca PUSH1 0x6
0xcc SLOAD
0xcd PUSH1 0x7
0xcf PUSH1 0x0
0xd1 SWAP1
0xd2 SLOAD
0xd3 SWAP1
0xd4 PUSH2 0x100
0xd7 EXP
0xd8 SWAP1
0xd9 DIV
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 PUSH4 0x70a08231
0x10b ADDRESS
0x10c PUSH1 0x0
0x10e PUSH1 0x40
0x110 MLOAD
0x111 PUSH1 0x20
0x113 ADD
0x114 MSTORE
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP3
0x119 PUSH4 0xffffffff
0x11e AND
0x11f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x13d MUL
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x4
0x142 ADD
0x143 DUP1
0x144 DUP3
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x170 AND
0x171 DUP2
0x172 MSTORE
0x173 PUSH1 0x20
0x175 ADD
0x176 SWAP2
0x177 POP
0x178 POP
0x179 PUSH1 0x20
0x17b PUSH1 0x40
0x17d MLOAD
0x17e DUP1
0x17f DUP4
0x180 SUB
0x181 DUP2
0x182 PUSH1 0x0
0x184 DUP8
0x185 DUP1
0x186 EXTCODESIZE
0x187 ISZERO
0x188 ISZERO
0x189 PUSH2 0x18e
0x18c JUMPI
---
0xca: V57 = 0x6
0xcc: V58 = S[0x6]
0xcd: V59 = 0x7
0xcf: V60 = 0x0
0xd2: V61 = S[0x7]
0xd4: V62 = 0x100
0xd7: V63 = EXP 0x100 0x0
0xd9: V64 = DIV V61 0x1
0xda: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xf0: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x106: V69 = 0x70a08231
0x10b: V70 = ADDRESS
0x10c: V71 = 0x0
0x10e: V72 = 0x40
0x110: V73 = M[0x40]
0x111: V74 = 0x20
0x113: V75 = ADD 0x20 V73
0x114: M[V75] = 0x0
0x115: V76 = 0x40
0x117: V77 = M[0x40]
0x119: V78 = 0xffffffff
0x11e: V79 = AND 0xffffffff 0x70a08231
0x11f: V80 = 0x100000000000000000000000000000000000000000000000000000000
0x13d: V81 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x13f: M[V77] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x140: V82 = 0x4
0x142: V83 = ADD 0x4 V77
0x145: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x15b: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x170: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x172: M[V83] = V87
0x173: V88 = 0x20
0x175: V89 = ADD 0x20 V83
0x179: V90 = 0x20
0x17b: V91 = 0x40
0x17d: V92 = M[0x40]
0x180: V93 = SUB V89 V92
0x182: V94 = 0x0
0x186: V95 = EXTCODESIZE V68
0x187: V96 = ISZERO V95
0x188: V97 = ISZERO V96
0x189: V98 = 0x18e
0x18c: JUMPI 0x18e V97
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 0
Stack additions: [V58, V68, 0x70a08231, V89, 0x20, V92, V93, V92, 0x0, V68]
Exit stack: [V10, 0x3e8, 0x0, V58, V68, 0x70a08231, V89, 0x20, V92, V93, V92, 0x0, V68]

================================

Block 0x18d
[0x18d:0x18d]
---
Predecessors: [0xca]
Successors: []
---
0x18d INVALID
---
0x18d: INVALID 
---
Entry stack: [V10, 0x3e8, 0x0, V58, V68, 0x70a08231, V89, 0x20, V92, V93, V92, 0x0, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0, V58, V68, 0x70a08231, V89, 0x20, V92, V93, V92, 0x0, V68]

================================

Block 0x18e
[0x18e:0x199]
---
Predecessors: [0xca]
Successors: [0x19a, 0x19b]
---
0x18e JUMPDEST
0x18f PUSH1 0x32
0x191 GAS
0x192 SUB
0x193 CALL
0x194 ISZERO
0x195 ISZERO
0x196 PUSH2 0x19b
0x199 JUMPI
---
0x18e: JUMPDEST 
0x18f: V99 = 0x32
0x191: V100 = GAS
0x192: V101 = SUB V100 0x32
0x193: V102 = CALL V101 V68 0x0 V92 V93 V92 0x20
0x194: V103 = ISZERO V102
0x195: V104 = ISZERO V103
0x196: V105 = 0x19b
0x199: JUMPI 0x19b V104
---
Entry stack: [V10, 0x3e8, 0x0, V58, V68, 0x70a08231, V89, 0x20, V92, V93, V92, 0x0, V68]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0, V58, V68, 0x70a08231, V89]

================================

Block 0x19a
[0x19a:0x19a]
---
Predecessors: [0x18e]
Successors: []
---
0x19a INVALID
---
0x19a: INVALID 
---
Entry stack: [V10, 0x3e8, 0x0, V58, V68, 0x70a08231, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0, V58, V68, 0x70a08231, V89]

================================

Block 0x19b
[0x19b:0x1ac]
---
Predecessors: [0x18e]
Successors: [0x1ad, 0x1c8]
---
0x19b JUMPDEST
0x19c POP
0x19d POP
0x19e POP
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 DUP1
0x1a3 MLOAD
0x1a4 SWAP1
0x1a5 POP
0x1a6 LT
0x1a7 ISZERO
0x1a8 ISZERO
0x1a9 PUSH2 0x1c8
0x1ac JUMPI
---
0x19b: JUMPDEST 
0x19f: V106 = 0x40
0x1a1: V107 = M[0x40]
0x1a3: V108 = M[V107]
0x1a6: V109 = LT V108 V58
0x1a7: V110 = ISZERO V109
0x1a8: V111 = ISZERO V110
0x1a9: V112 = 0x1c8
0x1ac: JUMPI 0x1c8 V111
---
Entry stack: [V10, 0x3e8, 0x0, V58, V68, 0x70a08231, V89]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0x1ad
[0x1ad:0x1c7]
---
Predecessors: [0x19b]
Successors: [0x1c8]
---
0x1ad PUSH1 0x1
0x1af PUSH1 0x9
0x1b1 PUSH1 0x2
0x1b3 PUSH2 0x100
0x1b6 EXP
0x1b7 DUP2
0x1b8 SLOAD
0x1b9 DUP2
0x1ba PUSH1 0xff
0x1bc MUL
0x1bd NOT
0x1be AND
0x1bf SWAP1
0x1c0 DUP4
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 MUL
0x1c4 OR
0x1c5 SWAP1
0x1c6 SSTORE
0x1c7 POP
---
0x1ad: V113 = 0x1
0x1af: V114 = 0x9
0x1b1: V115 = 0x2
0x1b3: V116 = 0x100
0x1b6: V117 = EXP 0x100 0x2
0x1b8: V118 = S[0x9]
0x1ba: V119 = 0xff
0x1bc: V120 = MUL 0xff 0x10000
0x1bd: V121 = NOT 0xff0000
0x1be: V122 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V118
0x1c1: V123 = ISZERO 0x1
0x1c2: V124 = ISZERO 0x0
0x1c3: V125 = MUL 0x1 0x10000
0x1c4: V126 = OR 0x10000 V122
0x1c6: S[0x9] = V126
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0x1c8
[0x1c8:0x1c8]
---
Predecessors: [0x19b, 0x1ad]
Successors: [0x1c9]
---
0x1c8 JUMPDEST
---
0x1c8: JUMPDEST 
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0x1c9
[0x1c9:0x1d4]
---
Predecessors: [0xb1, 0x1c8]
Successors: [0x1d5, 0x1f0]
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x4
0x1cc SLOAD
0x1cd TIMESTAMP
0x1ce LT
0x1cf ISZERO
0x1d0 ISZERO
0x1d1 PUSH2 0x1f0
0x1d4 JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V127 = 0x4
0x1cc: V128 = S[0x4]
0x1cd: V129 = TIMESTAMP
0x1ce: V130 = LT V129 V128
0x1cf: V131 = ISZERO V130
0x1d0: V132 = ISZERO V131
0x1d1: V133 = 0x1f0
0x1d4: JUMPI 0x1f0 V132
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0x1d5
[0x1d5:0x1ef]
---
Predecessors: [0x1c9]
Successors: [0x1f0]
---
0x1d5 PUSH1 0x1
0x1d7 PUSH1 0x9
0x1d9 PUSH1 0x1
0x1db PUSH2 0x100
0x1de EXP
0x1df DUP2
0x1e0 SLOAD
0x1e1 DUP2
0x1e2 PUSH1 0xff
0x1e4 MUL
0x1e5 NOT
0x1e6 AND
0x1e7 SWAP1
0x1e8 DUP4
0x1e9 ISZERO
0x1ea ISZERO
0x1eb MUL
0x1ec OR
0x1ed SWAP1
0x1ee SSTORE
0x1ef POP
---
0x1d5: V134 = 0x1
0x1d7: V135 = 0x9
0x1d9: V136 = 0x1
0x1db: V137 = 0x100
0x1de: V138 = EXP 0x100 0x1
0x1e0: V139 = S[0x9]
0x1e2: V140 = 0xff
0x1e4: V141 = MUL 0xff 0x100
0x1e5: V142 = NOT 0xff00
0x1e6: V143 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V139
0x1e9: V144 = ISZERO 0x1
0x1ea: V145 = ISZERO 0x0
0x1eb: V146 = MUL 0x1 0x100
0x1ec: V147 = OR 0x100 V143
0x1ee: S[0x9] = V147
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0x1f0
[0x1f0:0x205]
---
Predecessors: [0x1c9, 0x1d5]
Successors: [0x206, 0x218]
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x9
0x1f3 PUSH1 0x1
0x1f5 SWAP1
0x1f6 SLOAD
0x1f7 SWAP1
0x1f8 PUSH2 0x100
0x1fb EXP
0x1fc SWAP1
0x1fd DIV
0x1fe PUSH1 0xff
0x200 AND
0x201 DUP1
0x202 PUSH2 0x218
0x205 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V148 = 0x9
0x1f3: V149 = 0x1
0x1f6: V150 = S[0x9]
0x1f8: V151 = 0x100
0x1fb: V152 = EXP 0x100 0x1
0x1fd: V153 = DIV V150 0x100
0x1fe: V154 = 0xff
0x200: V155 = AND 0xff V153
0x202: V156 = 0x218
0x205: JUMPI 0x218 V155
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 0
Stack additions: [V155]
Exit stack: [V10, 0x3e8, 0x0, V155]

================================

Block 0x206
[0x206:0x217]
---
Predecessors: [0x1f0]
Successors: [0x218]
---
0x206 POP
0x207 PUSH1 0x9
0x209 PUSH1 0x2
0x20b SWAP1
0x20c SLOAD
0x20d SWAP1
0x20e PUSH2 0x100
0x211 EXP
0x212 SWAP1
0x213 DIV
0x214 PUSH1 0xff
0x216 AND
0x217 ISZERO
---
0x207: V157 = 0x9
0x209: V158 = 0x2
0x20c: V159 = S[0x9]
0x20e: V160 = 0x100
0x211: V161 = EXP 0x100 0x2
0x213: V162 = DIV V159 0x10000
0x214: V163 = 0xff
0x216: V164 = AND 0xff V162
0x217: V165 = ISZERO V164
---
Entry stack: [V10, 0x3e8, 0x0, V155]
Stack pops: 1
Stack additions: [V165]
Exit stack: [V10, 0x3e8, 0x0, V165]

================================

Block 0x218
[0x218:0x21d]
---
Predecessors: [0x1f0, 0x206]
Successors: [0x21e, 0x223]
---
0x218 JUMPDEST
0x219 ISZERO
0x21a PUSH2 0x223
0x21d JUMPI
---
0x218: JUMPDEST 
0x219: V166 = ISZERO S0
0x21a: V167 = 0x223
0x21d: JUMPI 0x223 V166
---
Entry stack: [V10, 0x3e8, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0x21e
[0x21e:0x222]
---
Predecessors: [0x218]
Successors: []
---
0x21e PUSH1 0x0
0x220 PUSH1 0x0
0x222 REVERT
---
0x21e: V168 = 0x0
0x220: V169 = 0x0
0x222: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0x223
[0x223:0x231]
---
Predecessors: [0x218]
Successors: [0x232, 0x237]
---
0x223 JUMPDEST
0x224 PUSH1 0x2
0x226 SLOAD
0x227 CALLVALUE
0x228 PUSH1 0x3
0x22a SLOAD
0x22b ADD
0x22c GT
0x22d ISZERO
0x22e PUSH2 0x237
0x231 JUMPI
---
0x223: JUMPDEST 
0x224: V170 = 0x2
0x226: V171 = S[0x2]
0x227: V172 = CALLVALUE
0x228: V173 = 0x3
0x22a: V174 = S[0x3]
0x22b: V175 = ADD V174 V172
0x22c: V176 = GT V175 V171
0x22d: V177 = ISZERO V176
0x22e: V178 = 0x237
0x231: JUMPI 0x237 V177
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0x232
[0x232:0x236]
---
Predecessors: [0x223]
Successors: []
---
0x232 PUSH1 0x0
0x234 PUSH1 0x0
0x236 REVERT
---
0x232: V179 = 0x0
0x234: V180 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, 0x0]

================================

Block 0x237
[0x237:0x2d8]
---
Predecessors: [0x223]
Successors: [0x2d9, 0x2da]
---
0x237 JUMPDEST
0x238 CALLVALUE
0x239 SWAP1
0x23a POP
0x23b DUP1
0x23c PUSH1 0x8
0x23e PUSH1 0x0
0x240 CALLER
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c AND
0x26d DUP2
0x26e MSTORE
0x26f PUSH1 0x20
0x271 ADD
0x272 SWAP1
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x20
0x277 ADD
0x278 PUSH1 0x0
0x27a SHA3
0x27b DUP2
0x27c SWAP1
0x27d SSTORE
0x27e POP
0x27f DUP1
0x280 PUSH1 0x3
0x282 PUSH1 0x0
0x284 DUP3
0x285 DUP3
0x286 SLOAD
0x287 ADD
0x288 SWAP3
0x289 POP
0x28a POP
0x28b DUP2
0x28c SWAP1
0x28d SSTORE
0x28e POP
0x28f PUSH1 0x7
0x291 PUSH1 0x0
0x293 SWAP1
0x294 SLOAD
0x295 SWAP1
0x296 PUSH2 0x100
0x299 EXP
0x29a SWAP1
0x29b DIV
0x29c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b1 AND
0x2b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c7 AND
0x2c8 PUSH4 0xa9059cbb
0x2cd CALLER
0x2ce PUSH1 0x5
0x2d0 SLOAD
0x2d1 DUP5
0x2d2 DUP2
0x2d3 ISZERO
0x2d4 ISZERO
0x2d5 PUSH2 0x2da
0x2d8 JUMPI
---
0x237: JUMPDEST 
0x238: V181 = CALLVALUE
0x23c: V182 = 0x8
0x23e: V183 = 0x0
0x240: V184 = CALLER
0x241: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x257: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x26e: M[0x0] = V188
0x26f: V189 = 0x20
0x271: V190 = ADD 0x20 0x0
0x274: M[0x20] = 0x8
0x275: V191 = 0x20
0x277: V192 = ADD 0x20 0x20
0x278: V193 = 0x0
0x27a: V194 = SHA3 0x0 0x40
0x27d: S[V194] = V181
0x280: V195 = 0x3
0x282: V196 = 0x0
0x286: V197 = S[0x3]
0x287: V198 = ADD V197 V181
0x28d: S[0x3] = V198
0x28f: V199 = 0x7
0x291: V200 = 0x0
0x294: V201 = S[0x7]
0x296: V202 = 0x100
0x299: V203 = EXP 0x100 0x0
0x29b: V204 = DIV V201 0x1
0x29c: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x2b2: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c7: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x2c8: V209 = 0xa9059cbb
0x2cd: V210 = CALLER
0x2ce: V211 = 0x5
0x2d0: V212 = S[0x5]
0x2d3: V213 = ISZERO V212
0x2d4: V214 = ISZERO V213
0x2d5: V215 = 0x2da
0x2d8: JUMPI 0x2da V214
---
Entry stack: [V10, 0x3e8, 0x0]
Stack pops: 1
Stack additions: [V181, V208, 0xa9059cbb, V210, V212, V181]
Exit stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V210, V212, V181]

================================

Block 0x2d9
[0x2d9:0x2d9]
---
Predecessors: [0x237]
Successors: []
---
0x2d9 INVALID
---
0x2d9: INVALID 
---
Entry stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V210, V212, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V210, V212, V181]

================================

Block 0x2da
[0x2da:0x35a]
---
Predecessors: [0x237]
Successors: [0x35b, 0x35c]
---
0x2da JUMPDEST
0x2db DIV
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP4
0x2e0 PUSH4 0xffffffff
0x2e5 AND
0x2e6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x304 MUL
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x4
0x309 ADD
0x30a DUP1
0x30b DUP4
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x337 AND
0x338 DUP2
0x339 MSTORE
0x33a PUSH1 0x20
0x33c ADD
0x33d DUP3
0x33e DUP2
0x33f MSTORE
0x340 PUSH1 0x20
0x342 ADD
0x343 SWAP3
0x344 POP
0x345 POP
0x346 POP
0x347 PUSH1 0x0
0x349 PUSH1 0x40
0x34b MLOAD
0x34c DUP1
0x34d DUP4
0x34e SUB
0x34f DUP2
0x350 PUSH1 0x0
0x352 DUP8
0x353 DUP1
0x354 EXTCODESIZE
0x355 ISZERO
0x356 ISZERO
0x357 PUSH2 0x35c
0x35a JUMPI
---
0x2da: JUMPDEST 
0x2db: V216 = DIV V181 V212
0x2dc: V217 = 0x40
0x2de: V218 = M[0x40]
0x2e0: V219 = 0xffffffff
0x2e5: V220 = AND 0xffffffff 0xa9059cbb
0x2e6: V221 = 0x100000000000000000000000000000000000000000000000000000000
0x304: V222 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x306: M[V218] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x307: V223 = 0x4
0x309: V224 = ADD 0x4 V218
0x30c: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x322: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x337: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x339: M[V224] = V228
0x33a: V229 = 0x20
0x33c: V230 = ADD 0x20 V224
0x33f: M[V230] = V216
0x340: V231 = 0x20
0x342: V232 = ADD 0x20 V230
0x347: V233 = 0x0
0x349: V234 = 0x40
0x34b: V235 = M[0x40]
0x34e: V236 = SUB V232 V235
0x350: V237 = 0x0
0x354: V238 = EXTCODESIZE V208
0x355: V239 = ISZERO V238
0x356: V240 = ISZERO V239
0x357: V241 = 0x35c
0x35a: JUMPI 0x35c V240
---
Entry stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V210, V212, V181]
Stack pops: 5
Stack additions: [S4, S3, V232, 0x0, V235, V236, V235, 0x0, S4]
Exit stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V232, 0x0, V235, V236, V235, 0x0, V208]

================================

Block 0x35b
[0x35b:0x35b]
---
Predecessors: [0x2da]
Successors: []
---
0x35b INVALID
---
0x35b: INVALID 
---
Entry stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V232, 0x0, V235, V236, V235, 0x0, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V232, 0x0, V235, V236, V235, 0x0, V208]

================================

Block 0x35c
[0x35c:0x367]
---
Predecessors: [0x2da]
Successors: [0x368, 0x369]
---
0x35c JUMPDEST
0x35d PUSH1 0x32
0x35f GAS
0x360 SUB
0x361 CALL
0x362 ISZERO
0x363 ISZERO
0x364 PUSH2 0x369
0x367 JUMPI
---
0x35c: JUMPDEST 
0x35d: V242 = 0x32
0x35f: V243 = GAS
0x360: V244 = SUB V243 0x32
0x361: V245 = CALL V244 V208 0x0 V235 V236 V235 0x0
0x362: V246 = ISZERO V245
0x363: V247 = ISZERO V246
0x364: V248 = 0x369
0x367: JUMPI 0x369 V247
---
Entry stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V232, 0x0, V235, V236, V235, 0x0, V208]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V232]

================================

Block 0x368
[0x368:0x368]
---
Predecessors: [0x35c]
Successors: []
---
0x368 INVALID
---
0x368: INVALID 
---
Entry stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V232]

================================

Block 0x369
[0x369:0x3e4]
---
Predecessors: [0x35c]
Successors: [0x3e5]
---
0x369 JUMPDEST
0x36a POP
0x36b POP
0x36c POP
0x36d PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x38e CALLER
0x38f DUP3
0x390 PUSH1 0x1
0x392 PUSH1 0x40
0x394 MLOAD
0x395 DUP1
0x396 DUP5
0x397 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ac AND
0x3ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c2 AND
0x3c3 DUP2
0x3c4 MSTORE
0x3c5 PUSH1 0x20
0x3c7 ADD
0x3c8 DUP4
0x3c9 DUP2
0x3ca MSTORE
0x3cb PUSH1 0x20
0x3cd ADD
0x3ce DUP3
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 ISZERO
0x3d2 ISZERO
0x3d3 DUP2
0x3d4 MSTORE
0x3d5 PUSH1 0x20
0x3d7 ADD
0x3d8 SWAP4
0x3d9 POP
0x3da POP
0x3db POP
0x3dc POP
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 DUP1
0x3e1 SWAP2
0x3e2 SUB
0x3e3 SWAP1
0x3e4 LOG1
---
0x369: JUMPDEST 
0x36d: V249 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x38e: V250 = CALLER
0x390: V251 = 0x1
0x392: V252 = 0x40
0x394: V253 = M[0x40]
0x397: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x3ad: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c2: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x3c4: M[V253] = V257
0x3c5: V258 = 0x20
0x3c7: V259 = ADD 0x20 V253
0x3ca: M[V259] = V181
0x3cb: V260 = 0x20
0x3cd: V261 = ADD 0x20 V259
0x3cf: V262 = ISZERO 0x1
0x3d0: V263 = ISZERO 0x0
0x3d1: V264 = ISZERO 0x1
0x3d2: V265 = ISZERO 0x0
0x3d4: M[V261] = 0x1
0x3d5: V266 = 0x20
0x3d7: V267 = ADD 0x20 V261
0x3dd: V268 = 0x40
0x3df: V269 = M[0x40]
0x3e2: V270 = SUB V267 V269
0x3e4: LOG V269 V270 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x3e8, V181, V208, 0xa9059cbb, V232]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x3e8, V181]

================================

Block 0x3e5
[0x3e5:0x3e7]
---
Predecessors: [0x369]
Successors: [0x3e8]
---
0x3e5 JUMPDEST
0x3e6 POP
0x3e7 JUMP
---
0x3e5: JUMPDEST 
0x3e7: JUMP 0x3e8
---
Entry stack: [V10, 0x3e8, V181]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e8
[0x3e8:0x3e9]
---
Predecessors: [0x3e5]
Successors: []
---
0x3e8 JUMPDEST
0x3e9 STOP
---
0x3e8: JUMPDEST 
0x3e9: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ea
[0x3ea:0x3f0]
---
Predecessors: [0xb]
Successors: [0x3f1, 0x3f2]
---
0x3ea JUMPDEST
0x3eb CALLVALUE
0x3ec ISZERO
0x3ed PUSH2 0x3f2
0x3f0 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V271 = CALLVALUE
0x3ec: V272 = ISZERO V271
0x3ed: V273 = 0x3f2
0x3f0: JUMPI 0x3f2 V272
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f1
[0x3f1:0x3f1]
---
Predecessors: [0x3ea]
Successors: []
---
0x3f1 INVALID
---
0x3f1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f2
[0x3f2:0x3f9]
---
Predecessors: [0x3ea]
Successors: [0x5cc]
---
0x3f2 JUMPDEST
0x3f3 PUSH2 0x3fa
0x3f6 PUSH2 0x5cc
0x3f9 JUMP
---
0x3f2: JUMPDEST 
0x3f3: V274 = 0x3fa
0x3f6: V275 = 0x5cc
0x3f9: JUMP 0x5cc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3fa]
Exit stack: [V10, 0x3fa]

================================

Block 0x3fa
[0x3fa:0x40f]
---
Predecessors: [0x5cc]
Successors: []
---
0x3fa JUMPDEST
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe DUP1
0x3ff DUP3
0x400 DUP2
0x401 MSTORE
0x402 PUSH1 0x20
0x404 ADD
0x405 SWAP2
0x406 POP
0x407 POP
0x408 PUSH1 0x40
0x40a MLOAD
0x40b DUP1
0x40c SWAP2
0x40d SUB
0x40e SWAP1
0x40f RETURN
---
0x3fa: JUMPDEST 
0x3fb: V276 = 0x40
0x3fd: V277 = M[0x40]
0x401: M[V277] = V397
0x402: V278 = 0x20
0x404: V279 = ADD 0x20 V277
0x408: V280 = 0x40
0x40a: V281 = M[0x40]
0x40d: V282 = SUB V279 V281
0x40f: RETURN V281 V282
---
Entry stack: [V10, 0x3fa, V397]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fa]

================================

Block 0x410
[0x410:0x416]
---
Predecessors: [0x3f]
Successors: [0x417, 0x418]
---
0x410 JUMPDEST
0x411 CALLVALUE
0x412 ISZERO
0x413 PUSH2 0x418
0x416 JUMPI
---
0x410: JUMPDEST 
0x411: V283 = CALLVALUE
0x412: V284 = ISZERO V283
0x413: V285 = 0x418
0x416: JUMPI 0x418 V284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x417
[0x417:0x417]
---
Predecessors: [0x410]
Successors: []
---
0x417 INVALID
---
0x417: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x418
[0x418:0x41f]
---
Predecessors: [0x410]
Successors: [0x5d2]
---
0x418 JUMPDEST
0x419 PUSH2 0x420
0x41c PUSH2 0x5d2
0x41f JUMP
---
0x418: JUMPDEST 
0x419: V286 = 0x420
0x41c: V287 = 0x5d2
0x41f: JUMP 0x5d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x420]
Exit stack: [V10, 0x420]

================================

Block 0x420
[0x420:0x421]
---
Predecessors: [0x660]
Successors: []
---
0x420 JUMPDEST
0x421 STOP
---
0x420: JUMPDEST 
0x421: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x422
[0x422:0x428]
---
Predecessors: [0x4a]
Successors: [0x429, 0x42a]
---
0x422 JUMPDEST
0x423 CALLVALUE
0x424 ISZERO
0x425 PUSH2 0x42a
0x428 JUMPI
---
0x422: JUMPDEST 
0x423: V288 = CALLVALUE
0x424: V289 = ISZERO V288
0x425: V290 = 0x42a
0x428: JUMPI 0x42a V289
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x429
[0x429:0x429]
---
Predecessors: [0x422]
Successors: []
---
0x429 INVALID
---
0x429: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x42a
[0x42a:0x431]
---
Predecessors: [0x422]
Successors: [0x662]
---
0x42a JUMPDEST
0x42b PUSH2 0x432
0x42e PUSH2 0x662
0x431 JUMP
---
0x42a: JUMPDEST 
0x42b: V291 = 0x432
0x42e: V292 = 0x662
0x431: JUMP 0x662
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x432]
Exit stack: [V10, 0x432]

================================

Block 0x432
[0x432:0x473]
---
Predecessors: [0x662]
Successors: []
---
0x432 JUMPDEST
0x433 PUSH1 0x40
0x435 MLOAD
0x436 DUP1
0x437 DUP3
0x438 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44d AND
0x44e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x463 AND
0x464 DUP2
0x465 MSTORE
0x466 PUSH1 0x20
0x468 ADD
0x469 SWAP2
0x46a POP
0x46b POP
0x46c PUSH1 0x40
0x46e MLOAD
0x46f DUP1
0x470 SWAP2
0x471 SUB
0x472 SWAP1
0x473 RETURN
---
0x432: JUMPDEST 
0x433: V293 = 0x40
0x435: V294 = M[0x40]
0x438: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x44e: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x463: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x465: M[V294] = V298
0x466: V299 = 0x20
0x468: V300 = ADD 0x20 V294
0x46c: V301 = 0x40
0x46e: V302 = M[0x40]
0x471: V303 = SUB V300 V302
0x473: RETURN V302 V303
---
Entry stack: [V10, 0x432, V449]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x432]

================================

Block 0x474
[0x474:0x47a]
---
Predecessors: [0x55]
Successors: [0x47b, 0x47c]
---
0x474 JUMPDEST
0x475 CALLVALUE
0x476 ISZERO
0x477 PUSH2 0x47c
0x47a JUMPI
---
0x474: JUMPDEST 
0x475: V304 = CALLVALUE
0x476: V305 = ISZERO V304
0x477: V306 = 0x47c
0x47a: JUMPI 0x47c V305
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x47b
[0x47b:0x47b]
---
Predecessors: [0x474]
Successors: []
---
0x47b INVALID
---
0x47b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x47c
[0x47c:0x483]
---
Predecessors: [0x474]
Successors: [0x688]
---
0x47c JUMPDEST
0x47d PUSH2 0x484
0x480 PUSH2 0x688
0x483 JUMP
---
0x47c: JUMPDEST 
0x47d: V307 = 0x484
0x480: V308 = 0x688
0x483: JUMP 0x688
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x484]
Exit stack: [V10, 0x484]

================================

Block 0x484
[0x484:0x485]
---
Predecessors: [0x71a]
Successors: []
---
0x484 JUMPDEST
0x485 STOP
---
0x484: JUMPDEST 
0x485: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x486
[0x486:0x48c]
---
Predecessors: [0x60]
Successors: [0x48d, 0x48e]
---
0x486 JUMPDEST
0x487 CALLVALUE
0x488 ISZERO
0x489 PUSH2 0x48e
0x48c JUMPI
---
0x486: JUMPDEST 
0x487: V309 = CALLVALUE
0x488: V310 = ISZERO V309
0x489: V311 = 0x48e
0x48c: JUMPI 0x48e V310
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x48d
[0x48d:0x48d]
---
Predecessors: [0x486]
Successors: []
---
0x48d INVALID
---
0x48d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x48e
[0x48e:0x495]
---
Predecessors: [0x486]
Successors: [0x71c]
---
0x48e JUMPDEST
0x48f PUSH2 0x496
0x492 PUSH2 0x71c
0x495 JUMP
---
0x48e: JUMPDEST 
0x48f: V312 = 0x496
0x492: V313 = 0x71c
0x495: JUMP 0x71c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x496]
Exit stack: [V10, 0x496]

================================

Block 0x496
[0x496:0x4d7]
---
Predecessors: [0x71c]
Successors: []
---
0x496 JUMPDEST
0x497 PUSH1 0x40
0x499 MLOAD
0x49a DUP1
0x49b DUP3
0x49c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b1 AND
0x4b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c7 AND
0x4c8 DUP2
0x4c9 MSTORE
0x4ca PUSH1 0x20
0x4cc ADD
0x4cd SWAP2
0x4ce POP
0x4cf POP
0x4d0 PUSH1 0x40
0x4d2 MLOAD
0x4d3 DUP1
0x4d4 SWAP2
0x4d5 SUB
0x4d6 SWAP1
0x4d7 RETURN
---
0x496: JUMPDEST 
0x497: V314 = 0x40
0x499: V315 = M[0x40]
0x49c: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b1: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x4b2: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x4c9: M[V315] = V319
0x4ca: V320 = 0x20
0x4cc: V321 = ADD 0x20 V315
0x4d0: V322 = 0x40
0x4d2: V323 = M[0x40]
0x4d5: V324 = SUB V321 V323
0x4d7: RETURN V323 V324
---
Entry stack: [V10, 0x496, V483]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x496]

================================

Block 0x4d8
[0x4d8:0x4de]
---
Predecessors: [0x6b]
Successors: [0x4df, 0x4e0]
---
0x4d8 JUMPDEST
0x4d9 CALLVALUE
0x4da ISZERO
0x4db PUSH2 0x4e0
0x4de JUMPI
---
0x4d8: JUMPDEST 
0x4d9: V325 = CALLVALUE
0x4da: V326 = ISZERO V325
0x4db: V327 = 0x4e0
0x4de: JUMPI 0x4e0 V326
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4df
[0x4df:0x4df]
---
Predecessors: [0x4d8]
Successors: []
---
0x4df INVALID
---
0x4df: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e0
[0x4e0:0x50b]
---
Predecessors: [0x4d8]
Successors: [0x742]
---
0x4e0 JUMPDEST
0x4e1 PUSH2 0x50c
0x4e4 PUSH1 0x4
0x4e6 DUP1
0x4e7 DUP1
0x4e8 CALLDATALOAD
0x4e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fe AND
0x4ff SWAP1
0x500 PUSH1 0x20
0x502 ADD
0x503 SWAP1
0x504 SWAP2
0x505 SWAP1
0x506 POP
0x507 POP
0x508 PUSH2 0x742
0x50b JUMP
---
0x4e0: JUMPDEST 
0x4e1: V328 = 0x50c
0x4e4: V329 = 0x4
0x4e8: V330 = CALLDATALOAD 0x4
0x4e9: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fe: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x500: V333 = 0x20
0x502: V334 = ADD 0x20 0x4
0x508: V335 = 0x742
0x50b: JUMP 0x742
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x50c, V332]
Exit stack: [V10, 0x50c, V332]

================================

Block 0x50c
[0x50c:0x521]
---
Predecessors: [0x742]
Successors: []
---
0x50c JUMPDEST
0x50d PUSH1 0x40
0x50f MLOAD
0x510 DUP1
0x511 DUP3
0x512 DUP2
0x513 MSTORE
0x514 PUSH1 0x20
0x516 ADD
0x517 SWAP2
0x518 POP
0x519 POP
0x51a PUSH1 0x40
0x51c MLOAD
0x51d DUP1
0x51e SWAP2
0x51f SUB
0x520 SWAP1
0x521 RETURN
---
0x50c: JUMPDEST 
0x50d: V336 = 0x40
0x50f: V337 = M[0x40]
0x513: M[V337] = V491
0x514: V338 = 0x20
0x516: V339 = ADD 0x20 V337
0x51a: V340 = 0x40
0x51c: V341 = M[0x40]
0x51f: V342 = SUB V339 V341
0x521: RETURN V341 V342
---
Entry stack: [V10, 0x50c, V491]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x50c]

================================

Block 0x522
[0x522:0x528]
---
Predecessors: [0x76]
Successors: [0x529, 0x52a]
---
0x522 JUMPDEST
0x523 CALLVALUE
0x524 ISZERO
0x525 PUSH2 0x52a
0x528 JUMPI
---
0x522: JUMPDEST 
0x523: V343 = CALLVALUE
0x524: V344 = ISZERO V343
0x525: V345 = 0x52a
0x528: JUMPI 0x52a V344
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x529
[0x529:0x529]
---
Predecessors: [0x522]
Successors: []
---
0x529 INVALID
---
0x529: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x52a
[0x52a:0x531]
---
Predecessors: [0x522]
Successors: [0x75a]
---
0x52a JUMPDEST
0x52b PUSH2 0x532
0x52e PUSH2 0x75a
0x531 JUMP
---
0x52a: JUMPDEST 
0x52b: V346 = 0x532
0x52e: V347 = 0x75a
0x531: JUMP 0x75a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x532]
Exit stack: [V10, 0x532]

================================

Block 0x532
[0x532:0x547]
---
Predecessors: [0x75a]
Successors: []
---
0x532 JUMPDEST
0x533 PUSH1 0x40
0x535 MLOAD
0x536 DUP1
0x537 DUP3
0x538 DUP2
0x539 MSTORE
0x53a PUSH1 0x20
0x53c ADD
0x53d SWAP2
0x53e POP
0x53f POP
0x540 PUSH1 0x40
0x542 MLOAD
0x543 DUP1
0x544 SWAP2
0x545 SUB
0x546 SWAP1
0x547 RETURN
---
0x532: JUMPDEST 
0x533: V348 = 0x40
0x535: V349 = M[0x40]
0x539: M[V349] = V493
0x53a: V350 = 0x20
0x53c: V351 = ADD 0x20 V349
0x540: V352 = 0x40
0x542: V353 = M[0x40]
0x545: V354 = SUB V351 V353
0x547: RETURN V353 V354
---
Entry stack: [V10, 0x532, V493]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x532]

================================

Block 0x548
[0x548:0x54e]
---
Predecessors: [0x81]
Successors: [0x54f, 0x550]
---
0x548 JUMPDEST
0x549 CALLVALUE
0x54a ISZERO
0x54b PUSH2 0x550
0x54e JUMPI
---
0x548: JUMPDEST 
0x549: V355 = CALLVALUE
0x54a: V356 = ISZERO V355
0x54b: V357 = 0x550
0x54e: JUMPI 0x550 V356
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x54f
[0x54f:0x54f]
---
Predecessors: [0x548]
Successors: []
---
0x54f INVALID
---
0x54f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x550
[0x550:0x557]
---
Predecessors: [0x548]
Successors: [0x760]
---
0x550 JUMPDEST
0x551 PUSH2 0x558
0x554 PUSH2 0x760
0x557 JUMP
---
0x550: JUMPDEST 
0x551: V358 = 0x558
0x554: V359 = 0x760
0x557: JUMP 0x760
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x558]
Exit stack: [V10, 0x558]

================================

Block 0x558
[0x558:0x56d]
---
Predecessors: [0x760]
Successors: []
---
0x558 JUMPDEST
0x559 PUSH1 0x40
0x55b MLOAD
0x55c DUP1
0x55d DUP3
0x55e DUP2
0x55f MSTORE
0x560 PUSH1 0x20
0x562 ADD
0x563 SWAP2
0x564 POP
0x565 POP
0x566 PUSH1 0x40
0x568 MLOAD
0x569 DUP1
0x56a SWAP2
0x56b SUB
0x56c SWAP1
0x56d RETURN
---
0x558: JUMPDEST 
0x559: V360 = 0x40
0x55b: V361 = M[0x40]
0x55f: M[V361] = V495
0x560: V362 = 0x20
0x562: V363 = ADD 0x20 V361
0x566: V364 = 0x40
0x568: V365 = M[0x40]
0x56b: V366 = SUB V363 V365
0x56d: RETURN V365 V366
---
Entry stack: [V10, 0x558, V495]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x558]

================================

Block 0x56e
[0x56e:0x574]
---
Predecessors: [0x8c]
Successors: [0x575, 0x576]
---
0x56e JUMPDEST
0x56f CALLVALUE
0x570 ISZERO
0x571 PUSH2 0x576
0x574 JUMPI
---
0x56e: JUMPDEST 
0x56f: V367 = CALLVALUE
0x570: V368 = ISZERO V367
0x571: V369 = 0x576
0x574: JUMPI 0x576 V368
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x575
[0x575:0x575]
---
Predecessors: [0x56e]
Successors: []
---
0x575 INVALID
---
0x575: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x576
[0x576:0x57d]
---
Predecessors: [0x56e]
Successors: [0x766]
---
0x576 JUMPDEST
0x577 PUSH2 0x57e
0x57a PUSH2 0x766
0x57d JUMP
---
0x576: JUMPDEST 
0x577: V370 = 0x57e
0x57a: V371 = 0x766
0x57d: JUMP 0x766
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x57e]
Exit stack: [V10, 0x57e]

================================

Block 0x57e
[0x57e:0x593]
---
Predecessors: [0x766]
Successors: []
---
0x57e JUMPDEST
0x57f PUSH1 0x40
0x581 MLOAD
0x582 DUP1
0x583 DUP3
0x584 DUP2
0x585 MSTORE
0x586 PUSH1 0x20
0x588 ADD
0x589 SWAP2
0x58a POP
0x58b POP
0x58c PUSH1 0x40
0x58e MLOAD
0x58f DUP1
0x590 SWAP2
0x591 SUB
0x592 SWAP1
0x593 RETURN
---
0x57e: JUMPDEST 
0x57f: V372 = 0x40
0x581: V373 = M[0x40]
0x585: M[V373] = V497
0x586: V374 = 0x20
0x588: V375 = ADD 0x20 V373
0x58c: V376 = 0x40
0x58e: V377 = M[0x40]
0x591: V378 = SUB V375 V377
0x593: RETURN V377 V378
---
Entry stack: [V10, 0x57e, V497]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x57e]

================================

Block 0x594
[0x594:0x59a]
---
Predecessors: [0x97]
Successors: [0x59b, 0x59c]
---
0x594 JUMPDEST
0x595 CALLVALUE
0x596 ISZERO
0x597 PUSH2 0x59c
0x59a JUMPI
---
0x594: JUMPDEST 
0x595: V379 = CALLVALUE
0x596: V380 = ISZERO V379
0x597: V381 = 0x59c
0x59a: JUMPI 0x59c V380
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x59b
[0x59b:0x59b]
---
Predecessors: [0x594]
Successors: []
---
0x59b INVALID
---
0x59b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x59c
[0x59c:0x5a3]
---
Predecessors: [0x594]
Successors: [0x76c]
---
0x59c JUMPDEST
0x59d PUSH2 0x5a4
0x5a0 PUSH2 0x76c
0x5a3 JUMP
---
0x59c: JUMPDEST 
0x59d: V382 = 0x5a4
0x5a0: V383 = 0x76c
0x5a3: JUMP 0x76c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5a4]
Exit stack: [V10, 0x5a4]

================================

Block 0x5a4
[0x5a4:0x5b9]
---
Predecessors: [0x76c]
Successors: []
---
0x5a4 JUMPDEST
0x5a5 PUSH1 0x40
0x5a7 MLOAD
0x5a8 DUP1
0x5a9 DUP3
0x5aa DUP2
0x5ab MSTORE
0x5ac PUSH1 0x20
0x5ae ADD
0x5af SWAP2
0x5b0 POP
0x5b1 POP
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP1
0x5b6 SWAP2
0x5b7 SUB
0x5b8 SWAP1
0x5b9 RETURN
---
0x5a4: JUMPDEST 
0x5a5: V384 = 0x40
0x5a7: V385 = M[0x40]
0x5ab: M[V385] = V499
0x5ac: V386 = 0x20
0x5ae: V387 = ADD 0x20 V385
0x5b2: V388 = 0x40
0x5b4: V389 = M[0x40]
0x5b7: V390 = SUB V387 V389
0x5b9: RETURN V389 V390
---
Entry stack: [V10, 0x5a4, V499]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x5a4]

================================

Block 0x5ba
[0x5ba:0x5c0]
---
Predecessors: [0xa2]
Successors: [0x5c1, 0x5c2]
---
0x5ba JUMPDEST
0x5bb CALLVALUE
0x5bc ISZERO
0x5bd PUSH2 0x5c2
0x5c0 JUMPI
---
0x5ba: JUMPDEST 
0x5bb: V391 = CALLVALUE
0x5bc: V392 = ISZERO V391
0x5bd: V393 = 0x5c2
0x5c0: JUMPI 0x5c2 V392
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5c1
[0x5c1:0x5c1]
---
Predecessors: [0x5ba]
Successors: []
---
0x5c1 INVALID
---
0x5c1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5c2
[0x5c2:0x5c9]
---
Predecessors: [0x5ba]
Successors: [0x772]
---
0x5c2 JUMPDEST
0x5c3 PUSH2 0x5ca
0x5c6 PUSH2 0x772
0x5c9 JUMP
---
0x5c2: JUMPDEST 
0x5c3: V394 = 0x5ca
0x5c6: V395 = 0x772
0x5c9: JUMP 0x772
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5ca]
Exit stack: [V10, 0x5ca]

================================

Block 0x5ca
[0x5ca:0x5cb]
---
Predecessors: [0x8d5]
Successors: []
---
0x5ca JUMPDEST
0x5cb STOP
---
0x5ca: JUMPDEST 
0x5cb: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5cc
[0x5cc:0x5d1]
---
Predecessors: [0x3f2]
Successors: [0x3fa]
---
0x5cc JUMPDEST
0x5cd PUSH1 0x4
0x5cf SLOAD
0x5d0 DUP2
0x5d1 JUMP
---
0x5cc: JUMPDEST 
0x5cd: V396 = 0x4
0x5cf: V397 = S[0x4]
0x5d1: JUMP 0x3fa
---
Entry stack: [V10, 0x3fa]
Stack pops: 1
Stack additions: [S0, V397]
Exit stack: [V10, 0x3fa, V397]

================================

Block 0x5d2
[0x5d2:0x629]
---
Predecessors: [0x418]
Successors: [0x62a, 0x62f]
---
0x5d2 JUMPDEST
0x5d3 CALLER
0x5d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e9 AND
0x5ea PUSH1 0x1
0x5ec PUSH1 0x0
0x5ee SWAP1
0x5ef SLOAD
0x5f0 SWAP1
0x5f1 PUSH2 0x100
0x5f4 EXP
0x5f5 SWAP1
0x5f6 DIV
0x5f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60c AND
0x60d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x622 AND
0x623 EQ
0x624 ISZERO
0x625 ISZERO
0x626 PUSH2 0x62f
0x629 JUMPI
---
0x5d2: JUMPDEST 
0x5d3: V398 = CALLER
0x5d4: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e9: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x5ea: V401 = 0x1
0x5ec: V402 = 0x0
0x5ef: V403 = S[0x1]
0x5f1: V404 = 0x100
0x5f4: V405 = EXP 0x100 0x0
0x5f6: V406 = DIV V403 0x1
0x5f7: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x60c: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x60d: V409 = 0xffffffffffffffffffffffffffffffffffffffff
0x622: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x623: V411 = EQ V410 V400
0x624: V412 = ISZERO V411
0x625: V413 = ISZERO V412
0x626: V414 = 0x62f
0x629: JUMPI 0x62f V413
---
Entry stack: [V10, 0x420]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x420]

================================

Block 0x62a
[0x62a:0x62e]
---
Predecessors: [0x5d2]
Successors: []
---
0x62a PUSH1 0x0
0x62c PUSH1 0x0
0x62e REVERT
---
0x62a: V415 = 0x0
0x62c: V416 = 0x0
0x62e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x420]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x420]

================================

Block 0x62f
[0x62f:0x643]
---
Predecessors: [0x5d2]
Successors: [0x644, 0x65f]
---
0x62f JUMPDEST
0x630 PUSH1 0x1
0x632 PUSH3 0xf4240
0x636 PUSH1 0x3
0x638 SLOAD
0x639 PUSH1 0x2
0x63b SLOAD
0x63c SUB
0x63d MUL
0x63e LT
0x63f ISZERO
0x640 PUSH2 0x65f
0x643 JUMPI
---
0x62f: JUMPDEST 
0x630: V417 = 0x1
0x632: V418 = 0xf4240
0x636: V419 = 0x3
0x638: V420 = S[0x3]
0x639: V421 = 0x2
0x63b: V422 = S[0x2]
0x63c: V423 = SUB V422 V420
0x63d: V424 = MUL V423 0xf4240
0x63e: V425 = LT V424 0x1
0x63f: V426 = ISZERO V425
0x640: V427 = 0x65f
0x643: JUMPI 0x65f V426
---
Entry stack: [V10, 0x420]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x420]

================================

Block 0x644
[0x644:0x65e]
---
Predecessors: [0x62f]
Successors: [0x65f]
---
0x644 PUSH1 0x1
0x646 PUSH1 0x9
0x648 PUSH1 0x1
0x64a PUSH2 0x100
0x64d EXP
0x64e DUP2
0x64f SLOAD
0x650 DUP2
0x651 PUSH1 0xff
0x653 MUL
0x654 NOT
0x655 AND
0x656 SWAP1
0x657 DUP4
0x658 ISZERO
0x659 ISZERO
0x65a MUL
0x65b OR
0x65c SWAP1
0x65d SSTORE
0x65e POP
---
0x644: V428 = 0x1
0x646: V429 = 0x9
0x648: V430 = 0x1
0x64a: V431 = 0x100
0x64d: V432 = EXP 0x100 0x1
0x64f: V433 = S[0x9]
0x651: V434 = 0xff
0x653: V435 = MUL 0xff 0x100
0x654: V436 = NOT 0xff00
0x655: V437 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V433
0x658: V438 = ISZERO 0x1
0x659: V439 = ISZERO 0x0
0x65a: V440 = MUL 0x1 0x100
0x65b: V441 = OR 0x100 V437
0x65d: S[0x9] = V441
---
Entry stack: [V10, 0x420]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x420]

================================

Block 0x65f
[0x65f:0x65f]
---
Predecessors: [0x62f, 0x644]
Successors: [0x660]
---
0x65f JUMPDEST
---
0x65f: JUMPDEST 
---
Entry stack: [V10, 0x420]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x420]

================================

Block 0x660
[0x660:0x661]
---
Predecessors: [0x65f]
Successors: [0x420]
---
0x660 JUMPDEST
0x661 JUMP
---
0x660: JUMPDEST 
0x661: JUMP 0x420
---
Entry stack: [V10, 0x420]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x662
[0x662:0x687]
---
Predecessors: [0x42a]
Successors: [0x432]
---
0x662 JUMPDEST
0x663 PUSH1 0x1
0x665 PUSH1 0x0
0x667 SWAP1
0x668 SLOAD
0x669 SWAP1
0x66a PUSH2 0x100
0x66d EXP
0x66e SWAP1
0x66f DIV
0x670 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x685 AND
0x686 DUP2
0x687 JUMP
---
0x662: JUMPDEST 
0x663: V442 = 0x1
0x665: V443 = 0x0
0x668: V444 = S[0x1]
0x66a: V445 = 0x100
0x66d: V446 = EXP 0x100 0x0
0x66f: V447 = DIV V444 0x1
0x670: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x685: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x687: JUMP 0x432
---
Entry stack: [V10, 0x432]
Stack pops: 1
Stack additions: [S0, V449]
Exit stack: [V10, 0x432, V449]

================================

Block 0x688
[0x688:0x6de]
---
Predecessors: [0x47c]
Successors: [0x6df, 0x719]
---
0x688 JUMPDEST
0x689 PUSH1 0x0
0x68b PUSH1 0x0
0x68d SWAP1
0x68e SLOAD
0x68f SWAP1
0x690 PUSH2 0x100
0x693 EXP
0x694 SWAP1
0x695 DIV
0x696 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ab AND
0x6ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c1 AND
0x6c2 CALLER
0x6c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d8 AND
0x6d9 EQ
0x6da ISZERO
0x6db PUSH2 0x719
0x6de JUMPI
---
0x688: JUMPDEST 
0x689: V450 = 0x0
0x68b: V451 = 0x0
0x68e: V452 = S[0x0]
0x690: V453 = 0x100
0x693: V454 = EXP 0x100 0x0
0x695: V455 = DIV V452 0x1
0x696: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ab: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x6ac: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c1: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x6c2: V460 = CALLER
0x6c3: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d8: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x6d9: V463 = EQ V462 V459
0x6da: V464 = ISZERO V463
0x6db: V465 = 0x719
0x6de: JUMPI 0x719 V464
---
Entry stack: [V10, 0x484]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x484]

================================

Block 0x6df
[0x6df:0x718]
---
Predecessors: [0x688]
Successors: []
---
0x6df PUSH1 0x0
0x6e1 PUSH1 0x0
0x6e3 SWAP1
0x6e4 SLOAD
0x6e5 SWAP1
0x6e6 PUSH2 0x100
0x6e9 EXP
0x6ea SWAP1
0x6eb DIV
0x6ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x701 AND
0x702 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x717 AND
0x718 SELFDESTRUCT
---
0x6df: V466 = 0x0
0x6e1: V467 = 0x0
0x6e4: V468 = S[0x0]
0x6e6: V469 = 0x100
0x6e9: V470 = EXP 0x100 0x0
0x6eb: V471 = DIV V468 0x1
0x6ec: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x701: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x702: V474 = 0xffffffffffffffffffffffffffffffffffffffff
0x717: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x718: SELFDESTRUCT V475
---
Entry stack: [V10, 0x484]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x484]

================================

Block 0x719
[0x719:0x719]
---
Predecessors: [0x688]
Successors: [0x71a]
---
0x719 JUMPDEST
---
0x719: JUMPDEST 
---
Entry stack: [V10, 0x484]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x484]

================================

Block 0x71a
[0x71a:0x71b]
---
Predecessors: [0x719]
Successors: [0x484]
---
0x71a JUMPDEST
0x71b JUMP
---
0x71a: JUMPDEST 
0x71b: JUMP 0x484
---
Entry stack: [V10, 0x484]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x71c
[0x71c:0x741]
---
Predecessors: [0x48e]
Successors: [0x496]
---
0x71c JUMPDEST
0x71d PUSH1 0x7
0x71f PUSH1 0x0
0x721 SWAP1
0x722 SLOAD
0x723 SWAP1
0x724 PUSH2 0x100
0x727 EXP
0x728 SWAP1
0x729 DIV
0x72a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73f AND
0x740 DUP2
0x741 JUMP
---
0x71c: JUMPDEST 
0x71d: V476 = 0x7
0x71f: V477 = 0x0
0x722: V478 = S[0x7]
0x724: V479 = 0x100
0x727: V480 = EXP 0x100 0x0
0x729: V481 = DIV V478 0x1
0x72a: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x73f: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x741: JUMP 0x496
---
Entry stack: [V10, 0x496]
Stack pops: 1
Stack additions: [S0, V483]
Exit stack: [V10, 0x496, V483]

================================

Block 0x742
[0x742:0x759]
---
Predecessors: [0x4e0]
Successors: [0x50c]
---
0x742 JUMPDEST
0x743 PUSH1 0x8
0x745 PUSH1 0x20
0x747 MSTORE
0x748 DUP1
0x749 PUSH1 0x0
0x74b MSTORE
0x74c PUSH1 0x40
0x74e PUSH1 0x0
0x750 SHA3
0x751 PUSH1 0x0
0x753 SWAP2
0x754 POP
0x755 SWAP1
0x756 POP
0x757 SLOAD
0x758 DUP2
0x759 JUMP
---
0x742: JUMPDEST 
0x743: V484 = 0x8
0x745: V485 = 0x20
0x747: M[0x20] = 0x8
0x749: V486 = 0x0
0x74b: M[0x0] = V332
0x74c: V487 = 0x40
0x74e: V488 = 0x0
0x750: V489 = SHA3 0x0 0x40
0x751: V490 = 0x0
0x757: V491 = S[V489]
0x759: JUMP 0x50c
---
Entry stack: [V10, 0x50c, V332]
Stack pops: 2
Stack additions: [S1, V491]
Exit stack: [V10, 0x50c, V491]

================================

Block 0x75a
[0x75a:0x75f]
---
Predecessors: [0x52a]
Successors: [0x532]
---
0x75a JUMPDEST
0x75b PUSH1 0x2
0x75d SLOAD
0x75e DUP2
0x75f JUMP
---
0x75a: JUMPDEST 
0x75b: V492 = 0x2
0x75d: V493 = S[0x2]
0x75f: JUMP 0x532
---
Entry stack: [V10, 0x532]
Stack pops: 1
Stack additions: [S0, V493]
Exit stack: [V10, 0x532, V493]

================================

Block 0x760
[0x760:0x765]
---
Predecessors: [0x550]
Successors: [0x558]
---
0x760 JUMPDEST
0x761 PUSH1 0x3
0x763 SLOAD
0x764 DUP2
0x765 JUMP
---
0x760: JUMPDEST 
0x761: V494 = 0x3
0x763: V495 = S[0x3]
0x765: JUMP 0x558
---
Entry stack: [V10, 0x558]
Stack pops: 1
Stack additions: [S0, V495]
Exit stack: [V10, 0x558, V495]

================================

Block 0x766
[0x766:0x76b]
---
Predecessors: [0x576]
Successors: [0x57e]
---
0x766 JUMPDEST
0x767 PUSH1 0x5
0x769 SLOAD
0x76a DUP2
0x76b JUMP
---
0x766: JUMPDEST 
0x767: V496 = 0x5
0x769: V497 = S[0x5]
0x76b: JUMP 0x57e
---
Entry stack: [V10, 0x57e]
Stack pops: 1
Stack additions: [S0, V497]
Exit stack: [V10, 0x57e, V497]

================================

Block 0x76c
[0x76c:0x771]
---
Predecessors: [0x59c]
Successors: [0x5a4]
---
0x76c JUMPDEST
0x76d PUSH1 0x6
0x76f SLOAD
0x770 DUP2
0x771 JUMP
---
0x76c: JUMPDEST 
0x76d: V498 = 0x6
0x76f: V499 = S[0x6]
0x771: JUMP 0x5a4
---
Entry stack: [V10, 0x5a4]
Stack pops: 1
Stack additions: [S0, V499]
Exit stack: [V10, 0x5a4, V499]

================================

Block 0x772
[0x772:0x77d]
---
Predecessors: [0x5c2]
Successors: [0x77e, 0x8d4]
---
0x772 JUMPDEST
0x773 PUSH1 0x4
0x775 SLOAD
0x776 TIMESTAMP
0x777 LT
0x778 ISZERO
0x779 ISZERO
0x77a PUSH2 0x8d4
0x77d JUMPI
---
0x772: JUMPDEST 
0x773: V500 = 0x4
0x775: V501 = S[0x4]
0x776: V502 = TIMESTAMP
0x777: V503 = LT V502 V501
0x778: V504 = ISZERO V503
0x779: V505 = ISZERO V504
0x77a: V506 = 0x8d4
0x77d: JUMPI 0x8d4 V505
---
Entry stack: [V10, 0x5ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5ca]

================================

Block 0x77e
[0x77e:0x7d3]
---
Predecessors: [0x772]
Successors: [0x7d4, 0x8d2]
---
0x77e CALLER
0x77f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x794 AND
0x795 PUSH1 0x1
0x797 PUSH1 0x0
0x799 SWAP1
0x79a SLOAD
0x79b SWAP1
0x79c PUSH2 0x100
0x79f EXP
0x7a0 SWAP1
0x7a1 DIV
0x7a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b7 AND
0x7b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cd AND
0x7ce EQ
0x7cf ISZERO
0x7d0 PUSH2 0x8d2
0x7d3 JUMPI
---
0x77e: V507 = CALLER
0x77f: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x794: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x795: V510 = 0x1
0x797: V511 = 0x0
0x79a: V512 = S[0x1]
0x79c: V513 = 0x100
0x79f: V514 = EXP 0x100 0x0
0x7a1: V515 = DIV V512 0x1
0x7a2: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b7: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x7b8: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cd: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x7ce: V520 = EQ V519 V509
0x7cf: V521 = ISZERO V520
0x7d0: V522 = 0x8d2
0x7d3: JUMPI 0x8d2 V521
---
Entry stack: [V10, 0x5ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5ca]

================================

Block 0x7d4
[0x7d4:0x834]
---
Predecessors: [0x77e]
Successors: [0x835, 0x8d1]
---
0x7d4 PUSH1 0x1
0x7d6 PUSH1 0x0
0x7d8 SWAP1
0x7d9 SLOAD
0x7da SWAP1
0x7db PUSH2 0x100
0x7de EXP
0x7df SWAP1
0x7e0 DIV
0x7e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f6 AND
0x7f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80c AND
0x80d PUSH2 0x8fc
0x810 PUSH1 0x3
0x812 SLOAD
0x813 SWAP1
0x814 DUP2
0x815 ISZERO
0x816 MUL
0x817 SWAP1
0x818 PUSH1 0x40
0x81a MLOAD
0x81b DUP1
0x81c SWAP1
0x81d POP
0x81e PUSH1 0x0
0x820 PUSH1 0x40
0x822 MLOAD
0x823 DUP1
0x824 DUP4
0x825 SUB
0x826 DUP2
0x827 DUP6
0x828 DUP9
0x829 DUP9
0x82a CALL
0x82b SWAP4
0x82c POP
0x82d POP
0x82e POP
0x82f POP
0x830 ISZERO
0x831 PUSH2 0x8d1
0x834 JUMPI
---
0x7d4: V523 = 0x1
0x7d6: V524 = 0x0
0x7d9: V525 = S[0x1]
0x7db: V526 = 0x100
0x7de: V527 = EXP 0x100 0x0
0x7e0: V528 = DIV V525 0x1
0x7e1: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f6: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x7f7: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x80c: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x80d: V533 = 0x8fc
0x810: V534 = 0x3
0x812: V535 = S[0x3]
0x815: V536 = ISZERO V535
0x816: V537 = MUL V536 0x8fc
0x818: V538 = 0x40
0x81a: V539 = M[0x40]
0x81e: V540 = 0x0
0x820: V541 = 0x40
0x822: V542 = M[0x40]
0x825: V543 = SUB V539 V542
0x82a: V544 = CALL V537 V532 V535 V542 V543 V542 0x0
0x830: V545 = ISZERO V544
0x831: V546 = 0x8d1
0x834: JUMPI 0x8d1 V545
---
Entry stack: [V10, 0x5ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5ca]

================================

Block 0x835
[0x835:0x8d0]
---
Predecessors: [0x7d4]
Successors: [0x8d1]
---
0x835 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x856 PUSH1 0x1
0x858 PUSH1 0x0
0x85a SWAP1
0x85b SLOAD
0x85c SWAP1
0x85d PUSH2 0x100
0x860 EXP
0x861 SWAP1
0x862 DIV
0x863 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x878 AND
0x879 PUSH1 0x3
0x87b SLOAD
0x87c PUSH1 0x0
0x87e PUSH1 0x40
0x880 MLOAD
0x881 DUP1
0x882 DUP5
0x883 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x898 AND
0x899 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ae AND
0x8af DUP2
0x8b0 MSTORE
0x8b1 PUSH1 0x20
0x8b3 ADD
0x8b4 DUP4
0x8b5 DUP2
0x8b6 MSTORE
0x8b7 PUSH1 0x20
0x8b9 ADD
0x8ba DUP3
0x8bb ISZERO
0x8bc ISZERO
0x8bd ISZERO
0x8be ISZERO
0x8bf DUP2
0x8c0 MSTORE
0x8c1 PUSH1 0x20
0x8c3 ADD
0x8c4 SWAP4
0x8c5 POP
0x8c6 POP
0x8c7 POP
0x8c8 POP
0x8c9 PUSH1 0x40
0x8cb MLOAD
0x8cc DUP1
0x8cd SWAP2
0x8ce SUB
0x8cf SWAP1
0x8d0 LOG1
---
0x835: V547 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x856: V548 = 0x1
0x858: V549 = 0x0
0x85b: V550 = S[0x1]
0x85d: V551 = 0x100
0x860: V552 = EXP 0x100 0x0
0x862: V553 = DIV V550 0x1
0x863: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x878: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x879: V556 = 0x3
0x87b: V557 = S[0x3]
0x87c: V558 = 0x0
0x87e: V559 = 0x40
0x880: V560 = M[0x40]
0x883: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0x898: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x899: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ae: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x8b0: M[V560] = V564
0x8b1: V565 = 0x20
0x8b3: V566 = ADD 0x20 V560
0x8b6: M[V566] = V557
0x8b7: V567 = 0x20
0x8b9: V568 = ADD 0x20 V566
0x8bb: V569 = ISZERO 0x0
0x8bc: V570 = ISZERO 0x1
0x8bd: V571 = ISZERO 0x0
0x8be: V572 = ISZERO 0x1
0x8c0: M[V568] = 0x0
0x8c1: V573 = 0x20
0x8c3: V574 = ADD 0x20 V568
0x8c9: V575 = 0x40
0x8cb: V576 = M[0x40]
0x8ce: V577 = SUB V574 V576
0x8d0: LOG V576 V577 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x5ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5ca]

================================

Block 0x8d1
[0x8d1:0x8d1]
---
Predecessors: [0x7d4, 0x835]
Successors: [0x8d2]
---
0x8d1 JUMPDEST
---
0x8d1: JUMPDEST 
---
Entry stack: [V10, 0x5ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5ca]

================================

Block 0x8d2
[0x8d2:0x8d2]
---
Predecessors: [0x77e, 0x8d1]
Successors: [0x8d3]
---
0x8d2 JUMPDEST
---
0x8d2: JUMPDEST 
---
Entry stack: [V10, 0x5ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5ca]

================================

Block 0x8d3
[0x8d3:0x8d3]
---
Predecessors: [0x8d2]
Successors: [0x8d4]
---
0x8d3 JUMPDEST
---
0x8d3: JUMPDEST 
---
Entry stack: [V10, 0x5ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5ca]

================================

Block 0x8d4
[0x8d4:0x8d4]
---
Predecessors: [0x772, 0x8d3]
Successors: [0x8d5]
---
0x8d4 JUMPDEST
---
0x8d4: JUMPDEST 
---
Entry stack: [V10, 0x5ca]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5ca]

================================

Block 0x8d5
[0x8d5:0x8d6]
---
Predecessors: [0x8d4]
Successors: [0x5ca]
---
0x8d5 JUMPDEST
0x8d6 JUMP
---
0x8d5: JUMPDEST 
0x8d6: JUMP 0x5ca
---
Entry stack: [V10, 0x5ca]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d7
[0x8d7:0x8e1]
---
Predecessors: []
Successors: [0x8e2]
Has unresolved jump.
---
0x8d7 STOP
0x8d8 LOG1
0x8d9 PUSH6 0x627a7a723058
0x8e0 SHA3
0x8e1 JUMPI
---
0x8d7: STOP 
0x8d8: LOG S0 S1 S2
0x8d9: V578 = 0x627a7a723058
0x8e0: V579 = SHA3 0x627a7a723058 S3
0x8e1: JUMPI V579 S4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8e2
[0x8e2:0x91a]
---
Predecessors: [0x8d7]
Successors: []
---
0x8e2 MISSING 0xc
0x8e3 MISSING 0xd5
0x8e4 PUSH19 0xc5af4bed1d85f517d3a7201f05eb753b61aa9d
0x8f8 DUP2
0x8f9 DUP14
0x8fa PUSH32 0xca106681bdb00029
---
0x8e2: MISSING 0xc
0x8e3: MISSING 0xd5
0x8e4: V580 = 0xc5af4bed1d85f517d3a7201f05eb753b61aa9d
0x8fa: V581 = 0xca106681bdb00029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xca106681bdb00029, S11, S0, 0xc5af4bed1d85f517d3a7201f05eb753b61aa9d, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x3ea
Exit block: 0x3fa
Body: 0x3ea, 0x3f1, 0x3f2, 0x3fa, 0x5cc

Function 1:
Public function signature: 0x30aa189d
Entry block: 0x410
Exit block: 0x420
Body: 0x410, 0x417, 0x418, 0x420, 0x5d2, 0x62a, 0x62f, 0x644, 0x65f, 0x660

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x422
Exit block: 0x432
Body: 0x422, 0x429, 0x42a, 0x432, 0x662

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0x474
Exit block: 0x484
Body: 0x474, 0x47b, 0x47c, 0x484, 0x688, 0x6df, 0x719, 0x71a

Function 4:
Public function signature: 0x6e66f6e9
Entry block: 0x486
Exit block: 0x496
Body: 0x486, 0x48d, 0x48e, 0x496, 0x71c

Function 5:
Public function signature: 0x70a08231
Entry block: 0x4d8
Exit block: 0x50c
Body: 0x4d8, 0x4df, 0x4e0, 0x50c, 0x742

Function 6:
Public function signature: 0x7a3a0e84
Entry block: 0x522
Exit block: 0x532
Body: 0x522, 0x529, 0x52a, 0x532, 0x75a

Function 7:
Public function signature: 0x7b3e5e7b
Entry block: 0x548
Exit block: 0x558
Body: 0x548, 0x54f, 0x550, 0x558, 0x760

Function 8:
Public function signature: 0xa035b1fe
Entry block: 0x56e
Exit block: 0x57e
Body: 0x56e, 0x575, 0x576, 0x57e, 0x766

Function 9:
Public function signature: 0xf9f16ef2
Entry block: 0x594
Exit block: 0x5a4
Body: 0x594, 0x59b, 0x59c, 0x5a4, 0x76c

Function 10:
Public function signature: 0xfd6b7ef8
Entry block: 0x5ba
Exit block: 0x5ca
Body: 0x5ba, 0x5c1, 0x5c2, 0x5ca, 0x772, 0x77e, 0x7d4, 0x835, 0x8d1, 0x8d2, 0x8d3, 0x8d4, 0x8d5

Function 11:
Public fallback function
Entry block: 0xad
Exit block: 0x3e8
Body: 0xad, 0xb1, 0xca, 0x18d, 0x18e, 0x19a, 0x19b, 0x1ad, 0x1c8, 0x1c9, 0x1d5, 0x1f0, 0x206, 0x218, 0x21e, 0x223, 0x232, 0x237, 0x2d9, 0x2da, 0x35b, 0x35c, 0x368, 0x369, 0x3e5, 0x3e8

