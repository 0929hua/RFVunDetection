Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xed]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xed
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xed
0xa: JUMPI 0xed V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3c]
---
Predecessors: [0x0]
Successors: [0x3d, 0x3ff]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH3 0xe5fc5f
0x37 DUP2
0x38 EQ
0x39 PUSH2 0x3ff
0x3c JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0xe5fc5f
0x38: V12 = EQ V10 0xe5fc5f
0x39: V13 = 0x3ff
0x3c: JUMPI 0x3ff V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0xb]
Successors: [0x48, 0x42d]
---
0x3d DUP1
0x3e PUSH4 0x13af4035
0x43 EQ
0x44 PUSH2 0x42d
0x47 JUMPI
---
0x3e: V14 = 0x13af4035
0x43: V15 = EQ 0x13af4035 V10
0x44: V16 = 0x42d
0x47: JUMPI 0x42d V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x44b]
---
0x48 DUP1
0x49 PUSH4 0x2d2fe9d4
0x4e EQ
0x4f PUSH2 0x44b
0x52 JUMPI
---
0x49: V17 = 0x2d2fe9d4
0x4e: V18 = EQ 0x2d2fe9d4 V10
0x4f: V19 = 0x44b
0x52: JUMPI 0x44b V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x472]
---
0x53 DUP1
0x54 PUSH4 0x6113611f
0x59 EQ
0x5a PUSH2 0x472
0x5d JUMPI
---
0x54: V20 = 0x6113611f
0x59: V21 = EQ 0x6113611f V10
0x5a: V22 = 0x472
0x5d: JUMPI 0x472 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x499]
---
0x5e DUP1
0x5f PUSH4 0x64e08644
0x64 EQ
0x65 PUSH2 0x499
0x68 JUMPI
---
0x5f: V23 = 0x64e08644
0x64: V24 = EQ 0x64e08644 V10
0x65: V25 = 0x499
0x68: JUMPI 0x499 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x4c0]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x4c0
0x73 JUMPI
---
0x6a: V26 = 0x8da5cb5b
0x6f: V27 = EQ 0x8da5cb5b V10
0x70: V28 = 0x4c0
0x73: JUMPI 0x4c0 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x4ec]
---
0x74 DUP1
0x75 PUSH4 0x8fe92aed
0x7a EQ
0x7b PUSH2 0x4ec
0x7e JUMPI
---
0x75: V29 = 0x8fe92aed
0x7a: V30 = EQ 0x8fe92aed V10
0x7b: V31 = 0x4ec
0x7e: JUMPI 0x4ec V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x51a]
---
0x7f DUP1
0x80 PUSH4 0x90fe5609
0x85 EQ
0x86 PUSH2 0x51a
0x89 JUMPI
---
0x80: V32 = 0x90fe5609
0x85: V33 = EQ 0x90fe5609 V10
0x86: V34 = 0x51a
0x89: JUMPI 0x51a V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x532]
---
0x8a DUP1
0x8b PUSH4 0xa201d102
0x90 EQ
0x91 PUSH2 0x532
0x94 JUMPI
---
0x8b: V35 = 0xa201d102
0x90: V36 = EQ 0xa201d102 V10
0x91: V37 = 0x532
0x94: JUMPI 0x532 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x554]
---
0x95 DUP1
0x96 PUSH4 0xa4659ba2
0x9b EQ
0x9c PUSH2 0x554
0x9f JUMPI
---
0x96: V38 = 0xa4659ba2
0x9b: V39 = EQ 0xa4659ba2 V10
0x9c: V40 = 0x554
0x9f: JUMPI 0x554 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x57b]
---
0xa0 DUP1
0xa1 PUSH4 0xc19d93fb
0xa6 EQ
0xa7 PUSH2 0x57b
0xaa JUMPI
---
0xa1: V41 = 0xc19d93fb
0xa6: V42 = EQ 0xc19d93fb V10
0xa7: V43 = 0x57b
0xaa: JUMPI 0x57b V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x60b]
---
0xab DUP1
0xac PUSH4 0xc2a15e7e
0xb1 EQ
0xb2 PUSH2 0x60b
0xb5 JUMPI
---
0xac: V44 = 0xc2a15e7e
0xb1: V45 = EQ 0xc2a15e7e V10
0xb2: V46 = 0x60b
0xb5: JUMPI 0x60b V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x63b]
---
0xb6 DUP1
0xb7 PUSH4 0xc8dda301
0xbc EQ
0xbd PUSH2 0x63b
0xc0 JUMPI
---
0xb7: V47 = 0xc8dda301
0xbc: V48 = EQ 0xc8dda301 V10
0xbd: V49 = 0x63b
0xc0: JUMPI 0x63b V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x65d]
---
0xc1 DUP1
0xc2 PUSH4 0xcfd94b01
0xc7 EQ
0xc8 PUSH2 0x65d
0xcb JUMPI
---
0xc2: V50 = 0xcfd94b01
0xc7: V51 = EQ 0xcfd94b01 V10
0xc8: V52 = 0x65d
0xcb: JUMPI 0x65d V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x67f]
---
0xcc DUP1
0xcd PUSH4 0xda58c7d9
0xd2 EQ
0xd3 PUSH2 0x67f
0xd6 JUMPI
---
0xcd: V53 = 0xda58c7d9
0xd2: V54 = EQ 0xda58c7d9 V10
0xd3: V55 = 0x67f
0xd6: JUMPI 0x67f V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x6ae]
---
0xd7 DUP1
0xd8 PUSH4 0xfc34b908
0xdd EQ
0xde PUSH2 0x6ae
0xe1 JUMPI
---
0xd8: V56 = 0xfc34b908
0xdd: V57 = EQ 0xfc34b908 V10
0xde: V58 = 0x6ae
0xe1: JUMPI 0x6ae V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed, 0x6d0]
---
0xe2 DUP1
0xe3 PUSH4 0xffa1ad74
0xe8 EQ
0xe9 PUSH2 0x6d0
0xec JUMPI
---
0xe3: V59 = 0xffa1ad74
0xe8: V60 = EQ 0xffa1ad74 V10
0xe9: V61 = 0x6d0
0xec: JUMPI 0x6d0 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0x0, 0xe2]
Successors: [0xf1]
---
0xed JUMPDEST
0xee PUSH2 0x3fd
---
0xed: JUMPDEST 
0xee: V62 = 0x3fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3fd]
Exit stack: [V10, 0x3fd]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0xed]
Successors: [0xf8]
---
0xf1 JUMPDEST
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 PUSH1 0x1
0xf7 DUP1
---
0xf1: JUMPDEST 
0xf2: V63 = 0x0
0xf5: V64 = 0x1
---
Entry stack: [V10, 0x3fd]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x1, 0x1]
Exit stack: [V10, 0x3fd, 0x0, 0x0, 0x1, 0x1]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xf1]
Successors: [0x760]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x100
0xfc PUSH2 0x760
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V65 = 0x100
0xfc: V66 = 0x760
0xff: JUMP 0x760
---
Entry stack: [V10, 0x3fd, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V10, 0x3fd, 0x0, 0x0, 0x1, 0x1, 0x100]

================================

Block 0x100
[0x100:0x109]
---
Predecessors: [0x795]
Successors: [0x10a, 0x10b]
---
0x100 JUMPDEST
0x101 PUSH1 0x2
0x103 DUP2
0x104 GT
0x105 ISZERO
0x106 PUSH2 0x10b
0x109 JUMPI
---
0x100: JUMPDEST 
0x101: V67 = 0x2
0x104: V68 = GT S0 0x2
0x105: V69 = ISZERO V68
0x106: V70 = 0x10b
0x109: JUMPI 0x10b V69
---
Entry stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]

================================

Block 0x10a
[0x10a:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x10a INVALID
---
0x10a: INVALID 
---
Entry stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]

================================

Block 0x10b
[0x10b:0x110]
---
Predecessors: [0x100]
Successors: [0x111, 0x116]
---
0x10b JUMPDEST
0x10c EQ
0x10d PUSH2 0x116
0x110 JUMPI
---
0x10b: JUMPDEST 
0x10c: V71 = EQ S0 S1
0x10d: V72 = 0x116
0x110: JUMPI 0x116 V71
---
Entry stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2]

================================

Block 0x111
[0x111:0x115]
---
Predecessors: [0x10b]
Successors: []
---
0x111 PUSH1 0x0
0x113 PUSH1 0x0
0x115 REVERT
---
0x111: V73 = 0x0
0x113: V74 = 0x0
0x115: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x58b}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x58b}, S0]

================================

Block 0x116
[0x116:0x182]
---
Predecessors: [0x10b]
Successors: [0x183, 0x184]
---
0x116 JUMPDEST
0x117 PUSH1 0x2
0x119 SLOAD
0x11a PUSH1 0x40
0x11c DUP1
0x11d MLOAD
0x11e PUSH1 0x0
0x120 PUSH1 0x20
0x122 SWAP2
0x123 DUP3
0x124 ADD
0x125 DUP2
0x126 SWAP1
0x127 MSTORE
0x128 DUP3
0x129 MLOAD
0x12a PUSH32 0x27e235e300000000000000000000000000000000000000000000000000000000
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x1
0x14f PUSH1 0xa0
0x151 PUSH1 0x2
0x153 EXP
0x154 SUB
0x155 CALLER
0x156 DUP2
0x157 AND
0x158 PUSH1 0x4
0x15a DUP4
0x15b ADD
0x15c MSTORE
0x15d SWAP4
0x15e MLOAD
0x15f SWAP4
0x160 SWAP1
0x161 SWAP5
0x162 AND
0x163 SWAP4
0x164 PUSH4 0x27e235e3
0x169 SWAP4
0x16a PUSH1 0x24
0x16c DUP1
0x16d DUP4
0x16e ADD
0x16f SWAP5
0x170 SWAP4
0x171 SWAP2
0x172 SWAP3
0x173 DUP4
0x174 SWAP1
0x175 SUB
0x176 ADD
0x177 SWAP1
0x178 DUP3
0x179 SWAP1
0x17a DUP8
0x17b DUP1
0x17c EXTCODESIZE
0x17d ISZERO
0x17e ISZERO
0x17f PUSH2 0x184
0x182 JUMPI
---
0x116: JUMPDEST 
0x117: V75 = 0x2
0x119: V76 = S[0x2]
0x11a: V77 = 0x40
0x11d: V78 = M[0x40]
0x11e: V79 = 0x0
0x120: V80 = 0x20
0x124: V81 = ADD 0x20 V78
0x127: M[V81] = 0x0
0x129: V82 = M[0x40]
0x12a: V83 = 0x27e235e300000000000000000000000000000000000000000000000000000000
0x14c: M[V82] = 0x27e235e300000000000000000000000000000000000000000000000000000000
0x14d: V84 = 0x1
0x14f: V85 = 0xa0
0x151: V86 = 0x2
0x153: V87 = EXP 0x2 0xa0
0x154: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V89 = CALLER
0x157: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x158: V91 = 0x4
0x15b: V92 = ADD V82 0x4
0x15c: M[V92] = V90
0x15e: V93 = M[0x40]
0x162: V94 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0x164: V95 = 0x27e235e3
0x16a: V96 = 0x24
0x16e: V97 = ADD V82 0x24
0x175: V98 = SUB V82 V93
0x176: V99 = ADD V98 0x24
0x17c: V100 = EXTCODESIZE V94
0x17d: V101 = ISZERO V100
0x17e: V102 = ISZERO V101
0x17f: V103 = 0x184
0x182: JUMPI 0x184 V102
---
Entry stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x58b}, S0]
Stack pops: 0
Stack additions: [V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]
Exit stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x58b}, S0, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]

================================

Block 0x183
[0x183:0x183]
---
Predecessors: [0x116]
Successors: []
---
0x183 INVALID
---
0x183: INVALID 
---
Entry stack: [V10, 0x3fd, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x58b}, S9, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x58b}, S9, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]

================================

Block 0x184
[0x184:0x190]
---
Predecessors: [0x116]
Successors: [0x191, 0x192]
---
0x184 JUMPDEST
0x185 PUSH2 0x2c6
0x188 GAS
0x189 SUB
0x18a CALL
0x18b ISZERO
0x18c ISZERO
0x18d PUSH2 0x192
0x190 JUMPI
---
0x184: JUMPDEST 
0x185: V104 = 0x2c6
0x188: V105 = GAS
0x189: V106 = SUB V105 0x2c6
0x18a: V107 = CALL V106 V94 0x0 V93 V99 V93 0x20
0x18b: V108 = ISZERO V107
0x18c: V109 = ISZERO V108
0x18d: V110 = 0x192
0x190: JUMPI 0x192 V109
---
Entry stack: [V10, 0x3fd, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x58b}, S9, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x3fd, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x58b}, S9, V94, 0x27e235e3, V97]

================================

Block 0x191
[0x191:0x191]
---
Predecessors: [0x184]
Successors: []
---
0x191 INVALID
---
0x191: INVALID 
---
Entry stack: [V10, 0x3fd, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x58b}, S3, V94, 0x27e235e3, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x58b}, S3, V94, 0x27e235e3, V97]

================================

Block 0x192
[0x192:0x1a3]
---
Predecessors: [0x184]
Successors: [0x1a4, 0x1a5]
---
0x192 JUMPDEST
0x193 POP
0x194 POP
0x195 PUSH1 0x40
0x197 MLOAD
0x198 MLOAD
0x199 SWAP3
0x19a POP
0x19b POP
0x19c PUSH1 0x0
0x19e DUP3
0x19f GT
0x1a0 PUSH2 0x1a5
0x1a3 JUMPI
---
0x192: JUMPDEST 
0x195: V111 = 0x40
0x197: V112 = M[0x40]
0x198: V113 = M[V112]
0x19c: V114 = 0x0
0x19f: V115 = GT V113 0x0
0x1a0: V116 = 0x1a5
0x1a3: JUMPI 0x1a5 V115
---
Entry stack: [V10, 0x3fd, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x58b}, S3, V94, 0x27e235e3, V97]
Stack pops: 5
Stack additions: [V113, S3]
Exit stack: [V10, 0x3fd, S10, V113, S8, S7, S6, S5, V113, S3]

================================

Block 0x1a4
[0x1a4:0x1a4]
---
Predecessors: [0x192]
Successors: []
---
0x1a4 INVALID
---
0x1a4: INVALID 
---
Entry stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0]

================================

Block 0x1a5
[0x1a5:0x1b5]
---
Predecessors: [0x192]
Successors: [0x1b6, 0x1dc]
---
0x1a5 JUMPDEST
0x1a6 PUSH8 0xde0b6b3a7640000
0x1af CALLVALUE
0x1b0 GT
0x1b1 DUP1
0x1b2 PUSH2 0x1dc
0x1b5 JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V117 = 0xde0b6b3a7640000
0x1af: V118 = CALLVALUE
0x1b0: V119 = GT V118 0xde0b6b3a7640000
0x1b2: V120 = 0x1dc
0x1b5: JUMPI 0x1dc V119
---
Entry stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0, V119]

================================

Block 0x1b6
[0x1b6:0x1db]
---
Predecessors: [0x1a5]
Successors: [0x1dc]
---
0x1b6 POP
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba PUSH1 0x1
0x1bc PUSH1 0xa0
0x1be PUSH1 0x2
0x1c0 EXP
0x1c1 SUB
0x1c2 CALLER
0x1c3 AND
0x1c4 SWAP1
0x1c5 CALLVALUE
0x1c6 DUP1
0x1c7 ISZERO
0x1c8 PUSH2 0x8fc
0x1cb MUL
0x1cc SWAP2
0x1cd PUSH1 0x0
0x1cf DUP2
0x1d0 DUP2
0x1d1 DUP2
0x1d2 DUP6
0x1d3 DUP9
0x1d4 DUP9
0x1d5 CALL
0x1d6 SWAP4
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da POP
0x1db ISZERO
---
0x1b7: V121 = 0x40
0x1b9: V122 = M[0x40]
0x1ba: V123 = 0x1
0x1bc: V124 = 0xa0
0x1be: V125 = 0x2
0x1c0: V126 = EXP 0x2 0xa0
0x1c1: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c2: V128 = CALLER
0x1c3: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V130 = CALLVALUE
0x1c7: V131 = ISZERO V130
0x1c8: V132 = 0x8fc
0x1cb: V133 = MUL 0x8fc V131
0x1cd: V134 = 0x0
0x1d5: V135 = CALL V133 V129 V130 V122 0x0 V122 0x0
0x1db: V136 = ISZERO V135
---
Entry stack: [V10, 0x3fd, S8, V113, S6, S5, S4, S3, V113, S1, V119]
Stack pops: 1
Stack additions: [V136]
Exit stack: [V10, 0x3fd, S8, V113, S6, S5, S4, S3, V113, S1, V136]

================================

Block 0x1dc
[0x1dc:0x1e1]
---
Predecessors: [0x1a5, 0x1b6]
Successors: [0x1e2, 0x1e7]
---
0x1dc JUMPDEST
0x1dd ISZERO
0x1de PUSH2 0x1e7
0x1e1 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V137 = ISZERO S0
0x1de: V138 = 0x1e7
0x1e1: JUMPI 0x1e7 V137
---
Entry stack: [V10, 0x3fd, S8, V113, S6, S5, S4, S3, V113, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fd, S8, V113, S6, S5, S4, S3, V113, S1]

================================

Block 0x1e2
[0x1e2:0x1e6]
---
Predecessors: [0x1dc]
Successors: []
---
0x1e2 PUSH1 0x0
0x1e4 PUSH1 0x0
0x1e6 REVERT
---
0x1e2: V139 = 0x0
0x1e4: V140 = 0x0
0x1e6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0]

================================

Block 0x1e7
[0x1e7:0x206]
---
Predecessors: [0x1dc]
Successors: [0x207, 0x273]
---
0x1e7 JUMPDEST
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 CALLER
0x1f1 AND
0x1f2 PUSH1 0x0
0x1f4 SWAP1
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x6
0x1f9 PUSH1 0x20
0x1fb MSTORE
0x1fc PUSH1 0x40
0x1fe SWAP1
0x1ff SHA3
0x200 SLOAD
0x201 ISZERO
0x202 ISZERO
0x203 PUSH2 0x273
0x206 JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V141 = 0x1
0x1ea: V142 = 0xa0
0x1ec: V143 = 0x2
0x1ee: V144 = EXP 0x2 0xa0
0x1ef: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V146 = CALLER
0x1f1: V147 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V148 = 0x0
0x1f6: M[0x0] = V147
0x1f7: V149 = 0x6
0x1f9: V150 = 0x20
0x1fb: M[0x20] = 0x6
0x1fc: V151 = 0x40
0x1ff: V152 = SHA3 0x0 0x40
0x200: V153 = S[V152]
0x201: V154 = ISZERO V153
0x202: V155 = ISZERO V154
0x203: V156 = 0x273
0x206: JUMPI 0x273 V155
---
Entry stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0]

================================

Block 0x207
[0x207:0x217]
---
Predecessors: [0x1e7]
Successors: [0xa7e]
---
0x207 PUSH1 0x8
0x209 DUP1
0x20a SLOAD
0x20b PUSH1 0x1
0x20d DUP2
0x20e ADD
0x20f PUSH2 0x218
0x212 DUP4
0x213 DUP3
0x214 PUSH2 0xa7e
0x217 JUMP
---
0x207: V157 = 0x8
0x20a: V158 = S[0x8]
0x20b: V159 = 0x1
0x20e: V160 = ADD V158 0x1
0x20f: V161 = 0x218
0x214: V162 = 0xa7e
0x217: JUMP 0xa7e
---
Entry stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: [0x8, V158, V160, 0x218, 0x8, V160]
Exit stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0, 0x8, V158, V160, 0x218, 0x8, V160]

================================

Block 0x218
[0x218:0x225]
---
Predecessors: [0x3f8, 0x9a9]
Successors: [0x226]
---
0x218 JUMPDEST
0x219 SWAP2
0x21a PUSH1 0x0
0x21c MSTORE
0x21d PUSH1 0x20
0x21f PUSH1 0x0
0x221 SHA3
0x222 SWAP1
0x223 ADD
0x224 PUSH1 0x0
---
0x218: JUMPDEST 
0x21a: V163 = 0x0
0x21c: M[0x0] = {0x8, 0x3fd}
0x21d: V164 = 0x20
0x21f: V165 = 0x0
0x221: V166 = SHA3 0x0 0x20
0x223: V167 = ADD S1 V166
0x224: V168 = 0x0
---
Entry stack: [V10, 0x3fd, S5, V113, S3, {0x8, 0x3fd}, S1, S0]
Stack pops: 3
Stack additions: [S0, V167, 0x0]
Exit stack: [V10, 0x3fd, S5, V113, S3, S0, V167, 0x0]

================================

Block 0x226
[0x226:0x24f]
---
Predecessors: [0x218]
Successors: [0x250]
---
0x226 JUMPDEST
0x227 DUP2
0x228 SLOAD
0x229 PUSH1 0x1
0x22b PUSH1 0xa0
0x22d PUSH1 0x2
0x22f EXP
0x230 SUB
0x231 CALLER
0x232 DUP2
0x233 AND
0x234 PUSH2 0x100
0x237 SWAP4
0x238 SWAP1
0x239 SWAP4
0x23a EXP
0x23b SWAP3
0x23c DUP4
0x23d MUL
0x23e SWAP3
0x23f MUL
0x240 NOT
0x241 AND
0x242 OR
0x243 SWAP1
0x244 SSTORE
0x245 POP
0x246 PUSH8 0xde0b6b3a7640000
0x24f DUP3
---
0x226: JUMPDEST 
0x228: V169 = S[V167]
0x229: V170 = 0x1
0x22b: V171 = 0xa0
0x22d: V172 = 0x2
0x22f: V173 = EXP 0x2 0xa0
0x230: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V175 = CALLER
0x233: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x234: V177 = 0x100
0x23a: V178 = EXP 0x100 0x0
0x23d: V179 = MUL 0x1 V176
0x23f: V180 = MUL 0x1 0xffffffffffffffffffffffffffffffffffffffff
0x240: V181 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x241: V182 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V169
0x242: V183 = OR V182 V179
0x244: S[V167] = V183
0x246: V184 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3fd, S5, V113, S3, S2, V167, 0x0]
Stack pops: 5
Stack additions: [S4, S3, 0xde0b6b3a7640000, S4]
Exit stack: [V10, 0x3fd, S5, V113, S3, 0xde0b6b3a7640000, V113]

================================

Block 0x250
[0x250:0x272]
---
Predecessors: [0x226]
Successors: [0x303]
---
0x250 JUMPDEST
0x251 PUSH1 0x9
0x253 DUP1
0x254 SLOAD
0x255 PUSH2 0xffff
0x258 NOT
0x259 DUP2
0x25a AND
0x25b SWAP4
0x25c SWAP1
0x25d SWAP3
0x25e DIV
0x25f PUSH2 0xffff
0x262 SWAP3
0x263 DUP4
0x264 AND
0x265 ADD
0x266 SWAP1
0x267 SWAP2
0x268 AND
0x269 SWAP2
0x26a SWAP1
0x26b SWAP2
0x26c OR
0x26d SWAP1
0x26e SSTORE
0x26f PUSH2 0x303
0x272 JUMP
---
0x250: JUMPDEST 
0x251: V185 = 0x9
0x254: V186 = S[0x9]
0x255: V187 = 0xffff
0x258: V188 = NOT 0xffff
0x25a: V189 = AND V186 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x25e: V190 = DIV V113 0xde0b6b3a7640000
0x25f: V191 = 0xffff
0x264: V192 = AND 0xffff V186
0x265: V193 = ADD V192 V190
0x268: V194 = AND 0xffff V193
0x26c: V195 = OR V194 V189
0x26e: S[0x9] = V195
0x26f: V196 = 0x303
0x272: JUMP 0x303
---
Entry stack: [V10, 0x3fd, S4, V113, S2, 0xde0b6b3a7640000, V113]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3fd, S4, V113, S2]

================================

Block 0x273
[0x273:0x27e]
---
Predecessors: [0x1e7]
Successors: [0x798]
---
0x273 JUMPDEST
0x274 PUSH1 0x64
0x276 DUP3
0x277 PUSH2 0x27f
0x27a CALLER
0x27b PUSH2 0x798
0x27e JUMP
---
0x273: JUMPDEST 
0x274: V197 = 0x64
0x277: V198 = 0x27f
0x27a: V199 = CALLER
0x27b: V200 = 0x798
0x27e: JUMP 0x798
---
Entry stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1, 0x27f, V199]
Exit stack: [V10, 0x3fd, S7, V113, S5, S4, S3, S2, V113, S0, 0x64, V113, 0x27f, V199]

================================

Block 0x27f
[0x27f:0x287]
---
Predecessors: [0x7f5]
Successors: [0x288, 0x289]
---
0x27f JUMPDEST
0x280 MUL
0x281 DUP2
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x289
0x287 JUMPI
---
0x27f: JUMPDEST 
0x280: V201 = MUL S0 S1
0x282: V202 = ISZERO 0x64
0x283: V203 = ISZERO 0x0
0x284: V204 = 0x289
0x287: JUMPI 0x289 0x1
---
Entry stack: [V10, 0x3fd, S5, V113, S3, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V201]
Exit stack: [V10, 0x3fd, S5, V113, S3, 0x64, V201]

================================

Block 0x288
[0x288:0x288]
---
Predecessors: [0x27f]
Successors: []
---
0x288 INVALID
---
0x288: INVALID 
---
Entry stack: [V10, 0x3fd, S4, V113, S2, 0x64, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S4, V113, S2, 0x64, V201]

================================

Block 0x289
[0x289:0x298]
---
Predecessors: [0x27f]
Successors: [0x299]
---
0x289 JUMPDEST
0x28a DIV
0x28b SWAP3
0x28c POP
0x28d PUSH8 0xde0b6b3a7640000
0x296 DUP4
0x297 DUP4
0x298 SUB
---
0x289: JUMPDEST 
0x28a: V205 = DIV V201 0x64
0x28d: V206 = 0xde0b6b3a7640000
0x298: V207 = SUB V113 V205
---
Entry stack: [V10, 0x3fd, S4, V113, S2, 0x64, V201]
Stack pops: 5
Stack additions: [V205, S3, S2, 0xde0b6b3a7640000, V207]
Exit stack: [V10, 0x3fd, V205, V113, S2, 0xde0b6b3a7640000, V207]

================================

Block 0x299
[0x299:0x2d0]
---
Predecessors: [0x289]
Successors: [0x2d1]
---
0x299 JUMPDEST
0x29a PUSH1 0x9
0x29c DUP1
0x29d SLOAD
0x29e SWAP3
0x29f SWAP1
0x2a0 SWAP2
0x2a1 DIV
0x2a2 PUSH2 0xffff
0x2a5 PUSH5 0x100000000
0x2ab DUP1
0x2ac DUP6
0x2ad DIV
0x2ae DUP3
0x2af AND
0x2b0 SWAP3
0x2b1 SWAP1
0x2b2 SWAP3
0x2b3 SUB
0x2b4 AND
0x2b5 MUL
0x2b6 PUSH6 0xffff00000000
0x2bd NOT
0x2be SWAP1
0x2bf SWAP3
0x2c0 AND
0x2c1 SWAP2
0x2c2 SWAP1
0x2c3 SWAP2
0x2c4 OR
0x2c5 SWAP1
0x2c6 SSTORE
0x2c7 PUSH8 0xde0b6b3a7640000
0x2d0 DUP4
---
0x299: JUMPDEST 
0x29a: V208 = 0x9
0x29d: V209 = S[0x9]
0x2a1: V210 = DIV V207 0xde0b6b3a7640000
0x2a2: V211 = 0xffff
0x2a5: V212 = 0x100000000
0x2ad: V213 = DIV V209 0x100000000
0x2af: V214 = AND 0xffff V213
0x2b3: V215 = SUB V214 V210
0x2b4: V216 = AND V215 0xffff
0x2b5: V217 = MUL V216 0x100000000
0x2b6: V218 = 0xffff00000000
0x2bd: V219 = NOT 0xffff00000000
0x2c0: V220 = AND V209 0xffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff
0x2c4: V221 = OR V220 V217
0x2c6: S[0x9] = V221
0x2c7: V222 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3fd, V205, V113, S2, 0xde0b6b3a7640000, V207]
Stack pops: 5
Stack additions: [S4, S3, S2, 0xde0b6b3a7640000, S4]
Exit stack: [V10, 0x3fd, V205, V113, S2, 0xde0b6b3a7640000, V205]

================================

Block 0x2d1
[0x2d1:0x302]
---
Predecessors: [0x299]
Successors: [0x303]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x9
0x2d4 DUP1
0x2d5 SLOAD
0x2d6 SWAP3
0x2d7 SWAP1
0x2d8 SWAP2
0x2d9 DIV
0x2da PUSH2 0xffff
0x2dd PUSH7 0x1000000000000
0x2e5 DUP1
0x2e6 DUP6
0x2e7 DIV
0x2e8 DUP3
0x2e9 AND
0x2ea SWAP3
0x2eb SWAP1
0x2ec SWAP3
0x2ed SUB
0x2ee AND
0x2ef MUL
0x2f0 PUSH8 0xffff000000000000
0x2f9 NOT
0x2fa SWAP1
0x2fb SWAP3
0x2fc AND
0x2fd SWAP2
0x2fe SWAP1
0x2ff SWAP2
0x300 OR
0x301 SWAP1
0x302 SSTORE
---
0x2d1: JUMPDEST 
0x2d2: V223 = 0x9
0x2d5: V224 = S[0x9]
0x2d9: V225 = DIV V205 0xde0b6b3a7640000
0x2da: V226 = 0xffff
0x2dd: V227 = 0x1000000000000
0x2e7: V228 = DIV V224 0x1000000000000
0x2e9: V229 = AND 0xffff V228
0x2ed: V230 = SUB V229 V225
0x2ee: V231 = AND V230 0xffff
0x2ef: V232 = MUL V231 0x1000000000000
0x2f0: V233 = 0xffff000000000000
0x2f9: V234 = NOT 0xffff000000000000
0x2fc: V235 = AND V224 0xffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff
0x300: V236 = OR V235 V232
0x302: S[0x9] = V236
---
Entry stack: [V10, 0x3fd, V205, V113, S2, 0xde0b6b3a7640000, V205]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3fd, V205, V113, S2]

================================

Block 0x303
[0x303:0x30b]
---
Predecessors: [0x250, 0x2d1]
Successors: [0x30c, 0x312]
---
0x303 JUMPDEST
0x304 PUSH1 0x0
0x306 CALLVALUE
0x307 GT
0x308 PUSH2 0x312
0x30b JUMPI
---
0x303: JUMPDEST 
0x304: V237 = 0x0
0x306: V238 = CALLVALUE
0x307: V239 = GT V238 0x0
0x308: V240 = 0x312
0x30b: JUMPI 0x312 V239
---
Entry stack: [V10, 0x3fd, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S2, V113, S0]

================================

Block 0x30c
[0x30c:0x311]
---
Predecessors: [0x303]
Successors: [0x314]
---
0x30c PUSH1 0x1
0x30e PUSH2 0x314
0x311 JUMP
---
0x30c: V241 = 0x1
0x30e: V242 = 0x314
0x311: JUMP 0x314
---
Entry stack: [V10, 0x3fd, S2, V113, S0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x3fd, S2, V113, S0, 0x1]

================================

Block 0x312
[0x312:0x313]
---
Predecessors: [0x303]
Successors: [0x314]
---
0x312 JUMPDEST
0x313 CALLVALUE
---
0x312: JUMPDEST 
0x313: V243 = CALLVALUE
---
Entry stack: [V10, 0x3fd, S2, V113, S0]
Stack pops: 0
Stack additions: [V243]
Exit stack: [V10, 0x3fd, S2, V113, S0, V243]

================================

Block 0x314
[0x314:0x33e]
---
Predecessors: [0x30c, 0x312]
Successors: [0x798]
---
0x314 JUMPDEST
0x315 CALLER
0x316 PUSH1 0x1
0x318 PUSH1 0xa0
0x31a PUSH1 0x2
0x31c EXP
0x31d SUB
0x31e DUP2
0x31f AND
0x320 PUSH1 0x0
0x322 SWAP1
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x6
0x327 PUSH1 0x20
0x329 MSTORE
0x32a PUSH1 0x40
0x32c SWAP1
0x32d SHA3
0x32e SWAP2
0x32f SWAP1
0x330 SWAP2
0x331 SSTORE
0x332 PUSH1 0x64
0x334 SWAP1
0x335 DUP4
0x336 SWAP1
0x337 PUSH2 0x33f
0x33a SWAP1
0x33b PUSH2 0x798
0x33e JUMP
---
0x314: JUMPDEST 
0x315: V244 = CALLER
0x316: V245 = 0x1
0x318: V246 = 0xa0
0x31a: V247 = 0x2
0x31c: V248 = EXP 0x2 0xa0
0x31d: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31f: V250 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x320: V251 = 0x0
0x324: M[0x0] = V250
0x325: V252 = 0x6
0x327: V253 = 0x20
0x329: M[0x20] = 0x6
0x32a: V254 = 0x40
0x32d: V255 = SHA3 0x0 0x40
0x331: S[V255] = S0
0x332: V256 = 0x64
0x337: V257 = 0x33f
0x33b: V258 = 0x798
0x33e: JUMP 0x798
---
Entry stack: [V10, 0x3fd, S3, V113, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x64, S2, 0x33f, V244]
Exit stack: [V10, 0x3fd, S3, V113, S1, 0x64, V113, 0x33f, V244]

================================

Block 0x33f
[0x33f:0x347]
---
Predecessors: [0x7f5]
Successors: [0x348, 0x349]
---
0x33f JUMPDEST
0x340 MUL
0x341 DUP2
0x342 ISZERO
0x343 ISZERO
0x344 PUSH2 0x349
0x347 JUMPI
---
0x33f: JUMPDEST 
0x340: V259 = MUL S0 S1
0x342: V260 = ISZERO 0x64
0x343: V261 = ISZERO 0x0
0x344: V262 = 0x349
0x347: JUMPI 0x349 0x1
---
Entry stack: [V10, 0x3fd, S5, V113, S3, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V259]
Exit stack: [V10, 0x3fd, S5, V113, S3, 0x64, V259]

================================

Block 0x348
[0x348:0x348]
---
Predecessors: [0x33f]
Successors: []
---
0x348 INVALID
---
0x348: INVALID 
---
Entry stack: [V10, 0x3fd, S4, V113, S2, 0x64, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S4, V113, S2, 0x64, V259]

================================

Block 0x349
[0x349:0x358]
---
Predecessors: [0x33f]
Successors: [0x359]
---
0x349 JUMPDEST
0x34a DIV
0x34b SWAP3
0x34c POP
0x34d PUSH8 0xde0b6b3a7640000
0x356 DUP4
0x357 DUP4
0x358 SUB
---
0x349: JUMPDEST 
0x34a: V263 = DIV V259 0x64
0x34d: V264 = 0xde0b6b3a7640000
0x358: V265 = SUB V113 V263
---
Entry stack: [V10, 0x3fd, S4, V113, S2, 0x64, V259]
Stack pops: 5
Stack additions: [V263, S3, S2, 0xde0b6b3a7640000, V265]
Exit stack: [V10, 0x3fd, V263, V113, S2, 0xde0b6b3a7640000, V265]

================================

Block 0x359
[0x359:0x393]
---
Predecessors: [0x349]
Successors: [0x394]
---
0x359 JUMPDEST
0x35a PUSH1 0x9
0x35c DUP1
0x35d SLOAD
0x35e PUSH6 0xffff00000000
0x365 NOT
0x366 DUP2
0x367 AND
0x368 SWAP4
0x369 SWAP1
0x36a SWAP3
0x36b DIV
0x36c PUSH5 0x100000000
0x372 SWAP3
0x373 DUP4
0x374 SWAP1
0x375 DIV
0x376 PUSH2 0xffff
0x379 SWAP1
0x37a DUP2
0x37b AND
0x37c SWAP2
0x37d SWAP1
0x37e SWAP2
0x37f ADD
0x380 AND
0x381 SWAP1
0x382 SWAP2
0x383 MUL
0x384 SWAP2
0x385 SWAP1
0x386 SWAP2
0x387 OR
0x388 SWAP1
0x389 SSTORE
0x38a PUSH8 0xde0b6b3a7640000
0x393 DUP4
---
0x359: JUMPDEST 
0x35a: V266 = 0x9
0x35d: V267 = S[0x9]
0x35e: V268 = 0xffff00000000
0x365: V269 = NOT 0xffff00000000
0x367: V270 = AND V267 0xffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff
0x36b: V271 = DIV V265 0xde0b6b3a7640000
0x36c: V272 = 0x100000000
0x375: V273 = DIV V267 0x100000000
0x376: V274 = 0xffff
0x37b: V275 = AND 0xffff V273
0x37f: V276 = ADD V275 V271
0x380: V277 = AND V276 0xffff
0x383: V278 = MUL 0x100000000 V277
0x387: V279 = OR V278 V270
0x389: S[0x9] = V279
0x38a: V280 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3fd, V263, V113, S2, 0xde0b6b3a7640000, V265]
Stack pops: 5
Stack additions: [S4, S3, S2, 0xde0b6b3a7640000, S4]
Exit stack: [V10, 0x3fd, V263, V113, S2, 0xde0b6b3a7640000, V263]

================================

Block 0x394
[0x394:0x3d8]
---
Predecessors: [0x359]
Successors: [0x3d9]
---
0x394 JUMPDEST
0x395 PUSH1 0x9
0x397 DUP1
0x398 SLOAD
0x399 PUSH2 0xffff
0x39c PUSH7 0x1000000000000
0x3a4 DUP1
0x3a5 DUP4
0x3a6 DIV
0x3a7 DUP3
0x3a8 AND
0x3a9 SWAP6
0x3aa SWAP1
0x3ab SWAP5
0x3ac DIV
0x3ad SWAP5
0x3ae SWAP1
0x3af SWAP5
0x3b0 ADD
0x3b1 DUP5
0x3b2 AND
0x3b3 DUP4
0x3b4 MUL
0x3b5 PUSH8 0xffff000000000000
0x3be NOT
0x3bf SWAP1
0x3c0 SWAP2
0x3c1 AND
0x3c2 OR
0x3c3 SWAP1
0x3c4 DUP2
0x3c5 SWAP1
0x3c6 SSTORE
0x3c7 PUSH8 0xde0b6b3a7640000
0x3d0 SWAP3
0x3d1 SWAP2
0x3d2 SWAP1
0x3d3 DIV
0x3d4 AND
0x3d5 PUSH2 0x2ee0
0x3d8 SUB
---
0x394: JUMPDEST 
0x395: V281 = 0x9
0x398: V282 = S[0x9]
0x399: V283 = 0xffff
0x39c: V284 = 0x1000000000000
0x3a6: V285 = DIV V282 0x1000000000000
0x3a8: V286 = AND 0xffff V285
0x3ac: V287 = DIV V263 0xde0b6b3a7640000
0x3b0: V288 = ADD V287 V286
0x3b2: V289 = AND 0xffff V288
0x3b4: V290 = MUL 0x1000000000000 V289
0x3b5: V291 = 0xffff000000000000
0x3be: V292 = NOT 0xffff000000000000
0x3c1: V293 = AND V282 0xffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff
0x3c2: V294 = OR V293 V290
0x3c6: S[0x9] = V294
0x3c7: V295 = 0xde0b6b3a7640000
0x3d3: V296 = DIV V294 0x1000000000000
0x3d4: V297 = AND V296 0xffff
0x3d5: V298 = 0x2ee0
0x3d8: V299 = SUB 0x2ee0 V297
---
Entry stack: [V10, 0x3fd, V263, V113, S2, 0xde0b6b3a7640000, V263]
Stack pops: 2
Stack additions: [0xde0b6b3a7640000, V299]
Exit stack: [V10, 0x3fd, V263, V113, S2, 0xde0b6b3a7640000, V299]

================================

Block 0x3d9
[0x3d9:0x3f6]
---
Predecessors: [0x394]
Successors: [0x3f7]
---
0x3d9 JUMPDEST
0x3da DIV
0x3db PUSH1 0x9
0x3dd PUSH1 0x2
0x3df PUSH2 0x100
0x3e2 EXP
0x3e3 DUP2
0x3e4 SLOAD
0x3e5 DUP2
0x3e6 PUSH2 0xffff
0x3e9 MUL
0x3ea NOT
0x3eb AND
0x3ec SWAP1
0x3ed DUP4
0x3ee PUSH2 0xffff
0x3f1 AND
0x3f2 MUL
0x3f3 OR
0x3f4 SWAP1
0x3f5 SSTORE
0x3f6 POP
---
0x3d9: JUMPDEST 
0x3da: V300 = DIV V299 0xde0b6b3a7640000
0x3db: V301 = 0x9
0x3dd: V302 = 0x2
0x3df: V303 = 0x100
0x3e2: V304 = EXP 0x100 0x2
0x3e4: V305 = S[0x9]
0x3e6: V306 = 0xffff
0x3e9: V307 = MUL 0xffff 0x10000
0x3ea: V308 = NOT 0xffff0000
0x3eb: V309 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff V305
0x3ee: V310 = 0xffff
0x3f1: V311 = AND 0xffff V300
0x3f2: V312 = MUL V311 0x10000
0x3f3: V313 = OR V312 V309
0x3f5: S[0x9] = V313
---
Entry stack: [V10, 0x3fd, V263, V113, S2, 0xde0b6b3a7640000, V299]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3fd, V263, V113, S2]

================================

Block 0x3f7
[0x3f7:0x3f7]
---
Predecessors: [0x3d9, 0x795, 0xa7e]
Successors: [0x3f8]
---
0x3f7 JUMPDEST
---
0x3f7: JUMPDEST 
---
Entry stack: [V10, 0x3fd, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x3fd, 0x58b}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x3fd, 0x58b}, S2, S1, S0]

================================

Block 0x3f8
[0x3f8:0x3fc]
---
Predecessors: [0x3f7]
Successors: [0x218, 0x3fd, 0x58b]
---
0x3f8 JUMPDEST
0x3f9 POP
0x3fa POP
0x3fb POP
0x3fc JUMP
---
0x3f8: JUMPDEST 
0x3fc: JUMP {0x0, 0x218, 0x3fd, 0x58b}
---
Entry stack: [V10, 0x3fd, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x3fd, 0x58b}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x3fd, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4]

================================

Block 0x3fd
[0x3fd:0x3fe]
---
Predecessors: [0x3f8, 0x853, 0x8d3]
Successors: []
---
0x3fd JUMPDEST
0x3fe STOP
---
0x3fd: JUMPDEST 
0x3fe: STOP 
---
Entry stack: [V10, 0x3fd, S5, V113, S3, 0x8, V158, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S5, V113, S3, 0x8, V158, S0]

================================

Block 0x3ff
[0x3ff:0x405]
---
Predecessors: [0xb]
Successors: [0x406, 0x407]
---
0x3ff JUMPDEST
0x400 CALLVALUE
0x401 ISZERO
0x402 PUSH2 0x407
0x405 JUMPI
---
0x3ff: JUMPDEST 
0x400: V314 = CALLVALUE
0x401: V315 = ISZERO V314
0x402: V316 = 0x407
0x405: JUMPI 0x407 V315
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x406
[0x406:0x406]
---
Predecessors: [0x3ff]
Successors: []
---
0x406 INVALID
---
0x406: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x407
[0x407:0x41a]
---
Predecessors: [0x3ff]
Successors: [0x7fb]
---
0x407 JUMPDEST
0x408 PUSH2 0x41b
0x40b PUSH1 0x1
0x40d PUSH1 0xa0
0x40f PUSH1 0x2
0x411 EXP
0x412 SUB
0x413 PUSH1 0x4
0x415 CALLDATALOAD
0x416 AND
0x417 PUSH2 0x7fb
0x41a JUMP
---
0x407: JUMPDEST 
0x408: V317 = 0x41b
0x40b: V318 = 0x1
0x40d: V319 = 0xa0
0x40f: V320 = 0x2
0x411: V321 = EXP 0x2 0xa0
0x412: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x413: V323 = 0x4
0x415: V324 = CALLDATALOAD 0x4
0x416: V325 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0x417: V326 = 0x7fb
0x41a: JUMP 0x7fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x41b, V325]
Exit stack: [V10, 0x41b, V325]

================================

Block 0x41b
[0x41b:0x42c]
---
Predecessors: [0x7f5, 0x7fb, 0x8d7, 0x9e8, 0x9f2, 0xa27]
Successors: []
---
0x41b JUMPDEST
0x41c PUSH1 0x40
0x41e DUP1
0x41f MLOAD
0x420 SWAP2
0x421 DUP3
0x422 MSTORE
0x423 MLOAD
0x424 SWAP1
0x425 DUP2
0x426 SWAP1
0x427 SUB
0x428 PUSH1 0x20
0x42a ADD
0x42b SWAP1
0x42c RETURN
---
0x41b: JUMPDEST 
0x41c: V327 = 0x40
0x41f: V328 = M[0x40]
0x422: M[V328] = S0
0x423: V329 = M[0x40]
0x427: V330 = SUB V328 V329
0x428: V331 = 0x20
0x42a: V332 = ADD 0x20 V330
0x42c: RETURN V329 V332
---
Entry stack: [V10, 0x3fd, S5, V113, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fd, S5, V113, S3, S2, S1]

================================

Block 0x42d
[0x42d:0x433]
---
Predecessors: [0x3d]
Successors: [0x434, 0x435]
---
0x42d JUMPDEST
0x42e CALLVALUE
0x42f ISZERO
0x430 PUSH2 0x435
0x433 JUMPI
---
0x42d: JUMPDEST 
0x42e: V333 = CALLVALUE
0x42f: V334 = ISZERO V333
0x430: V335 = 0x435
0x433: JUMPI 0x435 V334
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x434
[0x434:0x434]
---
Predecessors: [0x42d]
Successors: []
---
0x434 INVALID
---
0x434: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x435
[0x435:0x448]
---
Predecessors: [0x42d]
Successors: [0x80d]
---
0x435 JUMPDEST
0x436 PUSH2 0x3fd
0x439 PUSH1 0x1
0x43b PUSH1 0xa0
0x43d PUSH1 0x2
0x43f EXP
0x440 SUB
0x441 PUSH1 0x4
0x443 CALLDATALOAD
0x444 AND
0x445 PUSH2 0x80d
0x448 JUMP
---
0x435: JUMPDEST 
0x436: V336 = 0x3fd
0x439: V337 = 0x1
0x43b: V338 = 0xa0
0x43d: V339 = 0x2
0x43f: V340 = EXP 0x2 0xa0
0x440: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V342 = 0x4
0x443: V343 = CALLDATALOAD 0x4
0x444: V344 = AND V343 0xffffffffffffffffffffffffffffffffffffffff
0x445: V345 = 0x80d
0x448: JUMP 0x80d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3fd, V344]
Exit stack: [V10, 0x3fd, V344]

================================

Block 0x449
[0x449:0x44a]
---
Predecessors: []
Successors: []
---
0x449 JUMPDEST
0x44a STOP
---
0x449: JUMPDEST 
0x44a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x44b
[0x44b:0x451]
---
Predecessors: [0x48]
Successors: [0x452, 0x453]
---
0x44b JUMPDEST
0x44c CALLVALUE
0x44d ISZERO
0x44e PUSH2 0x453
0x451 JUMPI
---
0x44b: JUMPDEST 
0x44c: V346 = CALLVALUE
0x44d: V347 = ISZERO V346
0x44e: V348 = 0x453
0x451: JUMPI 0x453 V347
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x452
[0x452:0x452]
---
Predecessors: [0x44b]
Successors: []
---
0x452 INVALID
---
0x452: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x453
[0x453:0x45a]
---
Predecessors: [0x44b]
Successors: [0x856]
---
0x453 JUMPDEST
0x454 PUSH2 0x45b
0x457 PUSH2 0x856
0x45a JUMP
---
0x453: JUMPDEST 
0x454: V349 = 0x45b
0x457: V350 = 0x856
0x45a: JUMP 0x856
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x45b]
Exit stack: [V10, 0x45b]

================================

Block 0x45b
[0x45b:0x471]
---
Predecessors: [0x856, 0x868, 0x872, 0x8dd]
Successors: []
---
0x45b JUMPDEST
0x45c PUSH1 0x40
0x45e DUP1
0x45f MLOAD
0x460 PUSH2 0xffff
0x463 SWAP1
0x464 SWAP3
0x465 AND
0x466 DUP3
0x467 MSTORE
0x468 MLOAD
0x469 SWAP1
0x46a DUP2
0x46b SWAP1
0x46c SUB
0x46d PUSH1 0x20
0x46f ADD
0x470 SWAP1
0x471 RETURN
---
0x45b: JUMPDEST 
0x45c: V351 = 0x40
0x45f: V352 = M[0x40]
0x460: V353 = 0xffff
0x465: V354 = AND S0 0xffff
0x467: M[V352] = V354
0x468: V355 = M[0x40]
0x46c: V356 = SUB V352 V355
0x46d: V357 = 0x20
0x46f: V358 = ADD 0x20 V356
0x471: RETURN V355 V358
---
Entry stack: [V10, 0x45b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x45b]

================================

Block 0x472
[0x472:0x478]
---
Predecessors: [0x53]
Successors: [0x479, 0x47a]
---
0x472 JUMPDEST
0x473 CALLVALUE
0x474 ISZERO
0x475 PUSH2 0x47a
0x478 JUMPI
---
0x472: JUMPDEST 
0x473: V359 = CALLVALUE
0x474: V360 = ISZERO V359
0x475: V361 = 0x47a
0x478: JUMPI 0x47a V360
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x479
[0x479:0x479]
---
Predecessors: [0x472]
Successors: []
---
0x479 INVALID
---
0x479: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x47a
[0x47a:0x481]
---
Predecessors: [0x472]
Successors: [0x868]
---
0x47a JUMPDEST
0x47b PUSH2 0x45b
0x47e PUSH2 0x868
0x481 JUMP
---
0x47a: JUMPDEST 
0x47b: V362 = 0x45b
0x47e: V363 = 0x868
0x481: JUMP 0x868
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x45b]
Exit stack: [V10, 0x45b]

================================

Block 0x482
[0x482:0x498]
---
Predecessors: []
Successors: []
---
0x482 JUMPDEST
0x483 PUSH1 0x40
0x485 DUP1
0x486 MLOAD
0x487 PUSH2 0xffff
0x48a SWAP1
0x48b SWAP3
0x48c AND
0x48d DUP3
0x48e MSTORE
0x48f MLOAD
0x490 SWAP1
0x491 DUP2
0x492 SWAP1
0x493 SUB
0x494 PUSH1 0x20
0x496 ADD
0x497 SWAP1
0x498 RETURN
---
0x482: JUMPDEST 
0x483: V364 = 0x40
0x486: V365 = M[0x40]
0x487: V366 = 0xffff
0x48c: V367 = AND S0 0xffff
0x48e: M[V365] = V367
0x48f: V368 = M[0x40]
0x493: V369 = SUB V365 V368
0x494: V370 = 0x20
0x496: V371 = ADD 0x20 V369
0x498: RETURN V368 V371
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x499
[0x499:0x49f]
---
Predecessors: [0x5e]
Successors: [0x4a0, 0x4a1]
---
0x499 JUMPDEST
0x49a CALLVALUE
0x49b ISZERO
0x49c PUSH2 0x4a1
0x49f JUMPI
---
0x499: JUMPDEST 
0x49a: V372 = CALLVALUE
0x49b: V373 = ISZERO V372
0x49c: V374 = 0x4a1
0x49f: JUMPI 0x4a1 V373
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a0
[0x4a0:0x4a0]
---
Predecessors: [0x499]
Successors: []
---
0x4a0 INVALID
---
0x4a0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a1
[0x4a1:0x4a8]
---
Predecessors: [0x499]
Successors: [0x872]
---
0x4a1 JUMPDEST
0x4a2 PUSH2 0x45b
0x4a5 PUSH2 0x872
0x4a8 JUMP
---
0x4a1: JUMPDEST 
0x4a2: V375 = 0x45b
0x4a5: V376 = 0x872
0x4a8: JUMP 0x872
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x45b]
Exit stack: [V10, 0x45b]

================================

Block 0x4a9
[0x4a9:0x4bf]
---
Predecessors: []
Successors: []
---
0x4a9 JUMPDEST
0x4aa PUSH1 0x40
0x4ac DUP1
0x4ad MLOAD
0x4ae PUSH2 0xffff
0x4b1 SWAP1
0x4b2 SWAP3
0x4b3 AND
0x4b4 DUP3
0x4b5 MSTORE
0x4b6 MLOAD
0x4b7 SWAP1
0x4b8 DUP2
0x4b9 SWAP1
0x4ba SUB
0x4bb PUSH1 0x20
0x4bd ADD
0x4be SWAP1
0x4bf RETURN
---
0x4a9: JUMPDEST 
0x4aa: V377 = 0x40
0x4ad: V378 = M[0x40]
0x4ae: V379 = 0xffff
0x4b3: V380 = AND S0 0xffff
0x4b5: M[V378] = V380
0x4b6: V381 = M[0x40]
0x4ba: V382 = SUB V378 V381
0x4bb: V383 = 0x20
0x4bd: V384 = ADD 0x20 V382
0x4bf: RETURN V381 V384
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4c0
[0x4c0:0x4c6]
---
Predecessors: [0x69]
Successors: [0x4c7, 0x4c8]
---
0x4c0 JUMPDEST
0x4c1 CALLVALUE
0x4c2 ISZERO
0x4c3 PUSH2 0x4c8
0x4c6 JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V385 = CALLVALUE
0x4c2: V386 = ISZERO V385
0x4c3: V387 = 0x4c8
0x4c6: JUMPI 0x4c8 V386
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c7
[0x4c7:0x4c7]
---
Predecessors: [0x4c0]
Successors: []
---
0x4c7 INVALID
---
0x4c7: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c8
[0x4c8:0x4cf]
---
Predecessors: [0x4c0]
Successors: [0x882]
---
0x4c8 JUMPDEST
0x4c9 PUSH2 0x4d0
0x4cc PUSH2 0x882
0x4cf JUMP
---
0x4c8: JUMPDEST 
0x4c9: V388 = 0x4d0
0x4cc: V389 = 0x882
0x4cf: JUMP 0x882
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4d0]
Exit stack: [V10, 0x4d0]

================================

Block 0x4d0
[0x4d0:0x4eb]
---
Predecessors: [0x882, 0xa11]
Successors: []
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x40
0x4d3 DUP1
0x4d4 MLOAD
0x4d5 PUSH1 0x1
0x4d7 PUSH1 0xa0
0x4d9 PUSH1 0x2
0x4db EXP
0x4dc SUB
0x4dd SWAP1
0x4de SWAP3
0x4df AND
0x4e0 DUP3
0x4e1 MSTORE
0x4e2 MLOAD
0x4e3 SWAP1
0x4e4 DUP2
0x4e5 SWAP1
0x4e6 SUB
0x4e7 PUSH1 0x20
0x4e9 ADD
0x4ea SWAP1
0x4eb RETURN
---
0x4d0: JUMPDEST 
0x4d1: V390 = 0x40
0x4d4: V391 = M[0x40]
0x4d5: V392 = 0x1
0x4d7: V393 = 0xa0
0x4d9: V394 = 0x2
0x4db: V395 = EXP 0x2 0xa0
0x4dc: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V397 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: M[V391] = V397
0x4e2: V398 = M[0x40]
0x4e6: V399 = SUB V391 V398
0x4e7: V400 = 0x20
0x4e9: V401 = ADD 0x20 V399
0x4eb: RETURN V398 V401
---
Entry stack: [V10, 0x4d0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x4d0]

================================

Block 0x4ec
[0x4ec:0x4f2]
---
Predecessors: [0x74]
Successors: [0x4f3, 0x4f4]
---
0x4ec JUMPDEST
0x4ed CALLVALUE
0x4ee ISZERO
0x4ef PUSH2 0x4f4
0x4f2 JUMPI
---
0x4ec: JUMPDEST 
0x4ed: V402 = CALLVALUE
0x4ee: V403 = ISZERO V402
0x4ef: V404 = 0x4f4
0x4f2: JUMPI 0x4f4 V403
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f3
[0x4f3:0x4f3]
---
Predecessors: [0x4ec]
Successors: []
---
0x4f3 INVALID
---
0x4f3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f4
[0x4f4:0x507]
---
Predecessors: [0x4ec]
Successors: [0x798]
---
0x4f4 JUMPDEST
0x4f5 PUSH2 0x41b
0x4f8 PUSH1 0x1
0x4fa PUSH1 0xa0
0x4fc PUSH1 0x2
0x4fe EXP
0x4ff SUB
0x500 PUSH1 0x4
0x502 CALLDATALOAD
0x503 AND
0x504 PUSH2 0x798
0x507 JUMP
---
0x4f4: JUMPDEST 
0x4f5: V405 = 0x41b
0x4f8: V406 = 0x1
0x4fa: V407 = 0xa0
0x4fc: V408 = 0x2
0x4fe: V409 = EXP 0x2 0xa0
0x4ff: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V411 = 0x4
0x502: V412 = CALLDATALOAD 0x4
0x503: V413 = AND V412 0xffffffffffffffffffffffffffffffffffffffff
0x504: V414 = 0x798
0x507: JUMP 0x798
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x41b, V413]
Exit stack: [V10, 0x41b, V413]

================================

Block 0x508
[0x508:0x519]
---
Predecessors: []
Successors: []
---
0x508 JUMPDEST
0x509 PUSH1 0x40
0x50b DUP1
0x50c MLOAD
0x50d SWAP2
0x50e DUP3
0x50f MSTORE
0x510 MLOAD
0x511 SWAP1
0x512 DUP2
0x513 SWAP1
0x514 SUB
0x515 PUSH1 0x20
0x517 ADD
0x518 SWAP1
0x519 RETURN
---
0x508: JUMPDEST 
0x509: V415 = 0x40
0x50c: V416 = M[0x40]
0x50f: M[V416] = S0
0x510: V417 = M[0x40]
0x514: V418 = SUB V416 V417
0x515: V419 = 0x20
0x517: V420 = ADD 0x20 V418
0x519: RETURN V417 V420
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x51a
[0x51a:0x520]
---
Predecessors: [0x7f]
Successors: [0x521, 0x522]
---
0x51a JUMPDEST
0x51b CALLVALUE
0x51c ISZERO
0x51d PUSH2 0x522
0x520 JUMPI
---
0x51a: JUMPDEST 
0x51b: V421 = CALLVALUE
0x51c: V422 = ISZERO V421
0x51d: V423 = 0x522
0x520: JUMPI 0x522 V422
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x521
[0x521:0x521]
---
Predecessors: [0x51a]
Successors: []
---
0x521 INVALID
---
0x521: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x522
[0x522:0x52f]
---
Predecessors: [0x51a]
Successors: [0x891]
---
0x522 JUMPDEST
0x523 PUSH2 0x3fd
0x526 PUSH1 0x4
0x528 CALLDATALOAD
0x529 PUSH1 0x24
0x52b CALLDATALOAD
0x52c PUSH2 0x891
0x52f JUMP
---
0x522: JUMPDEST 
0x523: V424 = 0x3fd
0x526: V425 = 0x4
0x528: V426 = CALLDATALOAD 0x4
0x529: V427 = 0x24
0x52b: V428 = CALLDATALOAD 0x24
0x52c: V429 = 0x891
0x52f: JUMP 0x891
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3fd, V426, V428]
Exit stack: [V10, 0x3fd, V426, V428]

================================

Block 0x530
[0x530:0x531]
---
Predecessors: []
Successors: []
---
0x530 JUMPDEST
0x531 STOP
---
0x530: JUMPDEST 
0x531: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x532
[0x532:0x538]
---
Predecessors: [0x8a]
Successors: [0x539, 0x53a]
---
0x532 JUMPDEST
0x533 CALLVALUE
0x534 ISZERO
0x535 PUSH2 0x53a
0x538 JUMPI
---
0x532: JUMPDEST 
0x533: V430 = CALLVALUE
0x534: V431 = ISZERO V430
0x535: V432 = 0x53a
0x538: JUMPI 0x53a V431
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x539
[0x539:0x539]
---
Predecessors: [0x532]
Successors: []
---
0x539 INVALID
---
0x539: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x53a
[0x53a:0x541]
---
Predecessors: [0x532]
Successors: [0x8d7]
---
0x53a JUMPDEST
0x53b PUSH2 0x41b
0x53e PUSH2 0x8d7
0x541 JUMP
---
0x53a: JUMPDEST 
0x53b: V433 = 0x41b
0x53e: V434 = 0x8d7
0x541: JUMP 0x8d7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x41b]
Exit stack: [V10, 0x41b]

================================

Block 0x542
[0x542:0x553]
---
Predecessors: []
Successors: []
---
0x542 JUMPDEST
0x543 PUSH1 0x40
0x545 DUP1
0x546 MLOAD
0x547 SWAP2
0x548 DUP3
0x549 MSTORE
0x54a MLOAD
0x54b SWAP1
0x54c DUP2
0x54d SWAP1
0x54e SUB
0x54f PUSH1 0x20
0x551 ADD
0x552 SWAP1
0x553 RETURN
---
0x542: JUMPDEST 
0x543: V435 = 0x40
0x546: V436 = M[0x40]
0x549: M[V436] = S0
0x54a: V437 = M[0x40]
0x54e: V438 = SUB V436 V437
0x54f: V439 = 0x20
0x551: V440 = ADD 0x20 V438
0x553: RETURN V437 V440
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x554
[0x554:0x55a]
---
Predecessors: [0x95]
Successors: [0x55b, 0x55c]
---
0x554 JUMPDEST
0x555 CALLVALUE
0x556 ISZERO
0x557 PUSH2 0x55c
0x55a JUMPI
---
0x554: JUMPDEST 
0x555: V441 = CALLVALUE
0x556: V442 = ISZERO V441
0x557: V443 = 0x55c
0x55a: JUMPI 0x55c V442
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x55b
[0x55b:0x55b]
---
Predecessors: [0x554]
Successors: []
---
0x55b INVALID
---
0x55b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x55c
[0x55c:0x563]
---
Predecessors: [0x554]
Successors: [0x8dd]
---
0x55c JUMPDEST
0x55d PUSH2 0x45b
0x560 PUSH2 0x8dd
0x563 JUMP
---
0x55c: JUMPDEST 
0x55d: V444 = 0x45b
0x560: V445 = 0x8dd
0x563: JUMP 0x8dd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x45b]
Exit stack: [V10, 0x45b]

================================

Block 0x564
[0x564:0x57a]
---
Predecessors: []
Successors: []
---
0x564 JUMPDEST
0x565 PUSH1 0x40
0x567 DUP1
0x568 MLOAD
0x569 PUSH2 0xffff
0x56c SWAP1
0x56d SWAP3
0x56e AND
0x56f DUP3
0x570 MSTORE
0x571 MLOAD
0x572 SWAP1
0x573 DUP2
0x574 SWAP1
0x575 SUB
0x576 PUSH1 0x20
0x578 ADD
0x579 SWAP1
0x57a RETURN
---
0x564: JUMPDEST 
0x565: V446 = 0x40
0x568: V447 = M[0x40]
0x569: V448 = 0xffff
0x56e: V449 = AND S0 0xffff
0x570: M[V447] = V449
0x571: V450 = M[0x40]
0x575: V451 = SUB V447 V450
0x576: V452 = 0x20
0x578: V453 = ADD 0x20 V451
0x57a: RETURN V450 V453
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x57b
[0x57b:0x581]
---
Predecessors: [0xa0]
Successors: [0x582, 0x583]
---
0x57b JUMPDEST
0x57c CALLVALUE
0x57d ISZERO
0x57e PUSH2 0x583
0x581 JUMPI
---
0x57b: JUMPDEST 
0x57c: V454 = CALLVALUE
0x57d: V455 = ISZERO V454
0x57e: V456 = 0x583
0x581: JUMPI 0x583 V455
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x582
[0x582:0x582]
---
Predecessors: [0x57b]
Successors: []
---
0x582 INVALID
---
0x582: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x583
[0x583:0x58a]
---
Predecessors: [0x57b]
Successors: [0x8f1]
---
0x583 JUMPDEST
0x584 PUSH2 0x58b
0x587 PUSH2 0x8f1
0x58a JUMP
---
0x583: JUMPDEST 
0x584: V457 = 0x58b
0x587: V458 = 0x8f1
0x58a: JUMP 0x8f1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x58b]
Exit stack: [V10, 0x58b]

================================

Block 0x58b
[0x58b:0x5b0]
---
Predecessors: [0x3f8, 0x9a9, 0xa2d]
Successors: [0x5b1, 0x5d1]
---
0x58b JUMPDEST
0x58c PUSH1 0x40
0x58e DUP1
0x58f MLOAD
0x590 PUSH1 0x20
0x592 DUP1
0x593 DUP3
0x594 MSTORE
0x595 DUP4
0x596 MLOAD
0x597 DUP2
0x598 DUP4
0x599 ADD
0x59a MSTORE
0x59b DUP4
0x59c MLOAD
0x59d SWAP2
0x59e SWAP3
0x59f DUP4
0x5a0 SWAP3
0x5a1 SWAP1
0x5a2 DUP4
0x5a3 ADD
0x5a4 SWAP2
0x5a5 DUP6
0x5a6 ADD
0x5a7 SWAP1
0x5a8 DUP1
0x5a9 DUP4
0x5aa DUP4
0x5ab DUP3
0x5ac ISZERO
0x5ad PUSH2 0x5d1
0x5b0 JUMPI
---
0x58b: JUMPDEST 
0x58c: V459 = 0x40
0x58f: V460 = M[0x40]
0x590: V461 = 0x20
0x594: M[V460] = 0x20
0x596: V462 = M[S0]
0x599: V463 = ADD V460 0x20
0x59a: M[V463] = V462
0x59c: V464 = M[S0]
0x5a3: V465 = ADD V460 0x40
0x5a6: V466 = ADD S0 0x20
0x5ac: V467 = ISZERO V464
0x5ad: V468 = 0x5d1
0x5b0: JUMPI 0x5d1 V467
---
Entry stack: [V10, 0x3fd, S5, V113, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V460, V460, V465, V466, V464, V464, V465, V466]
Exit stack: [V10, 0x3fd, S5, V113, S3, S2, S1, S0, V460, V460, V465, V466, V464, V464, V465, V466]

================================

Block 0x5b1
[0x5b1:0x5be]
---
Predecessors: [0x58b, 0x5bf, 0x714]
Successors: [0x5bf, 0x5d1]
---
0x5b1 JUMPDEST
0x5b2 DUP1
0x5b3 MLOAD
0x5b4 DUP3
0x5b5 MSTORE
0x5b6 PUSH1 0x20
0x5b8 DUP4
0x5b9 GT
0x5ba ISZERO
0x5bb PUSH2 0x5d1
0x5be JUMPI
---
0x5b1: JUMPDEST 
0x5b3: V469 = M[S0]
0x5b5: M[S1] = V469
0x5b6: V470 = 0x20
0x5b9: V471 = GT S2 0x20
0x5ba: V472 = ISZERO V471
0x5bb: V473 = 0x5d1
0x5be: JUMPI 0x5d1 V472
---
Entry stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5bf
[0x5bf:0x5d0]
---
Predecessors: [0x5b1]
Successors: [0x5b1]
---
0x5bf PUSH1 0x1f
0x5c1 NOT
0x5c2 SWAP1
0x5c3 SWAP3
0x5c4 ADD
0x5c5 SWAP2
0x5c6 PUSH1 0x20
0x5c8 SWAP2
0x5c9 DUP3
0x5ca ADD
0x5cb SWAP2
0x5cc ADD
0x5cd PUSH2 0x5b1
0x5d0 JUMP
---
0x5bf: V474 = 0x1f
0x5c1: V475 = NOT 0x1f
0x5c4: V476 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x5c6: V477 = 0x20
0x5ca: V478 = ADD 0x20 S1
0x5cc: V479 = ADD 0x20 S0
0x5cd: V480 = 0x5b1
0x5d0: JUMP 0x5b1
---
Entry stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V476, V478, V479]
Exit stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, V476, V478, V479]

================================

Block 0x5d1
[0x5d1:0x5e3]
---
Predecessors: [0x58b, 0x5b1, 0x6e0, 0x706]
Successors: [0x5e4, 0x5fd]
---
0x5d1 JUMPDEST
0x5d2 POP
0x5d3 POP
0x5d4 POP
0x5d5 SWAP1
0x5d6 POP
0x5d7 SWAP1
0x5d8 DUP2
0x5d9 ADD
0x5da SWAP1
0x5db PUSH1 0x1f
0x5dd AND
0x5de DUP1
0x5df ISZERO
0x5e0 PUSH2 0x5fd
0x5e3 JUMPI
---
0x5d1: JUMPDEST 
0x5d9: V481 = ADD S3 S5
0x5db: V482 = 0x1f
0x5dd: V483 = AND 0x1f S3
0x5df: V484 = ISZERO V483
0x5e0: V485 = 0x5fd
0x5e3: JUMPI 0x5fd V484
---
Entry stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V481, V483]
Exit stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, S7, S6, V481, V483]

================================

Block 0x5e4
[0x5e4:0x5fc]
---
Predecessors: [0x5d1]
Successors: [0x5fd]
---
0x5e4 DUP1
0x5e5 DUP3
0x5e6 SUB
0x5e7 DUP1
0x5e8 MLOAD
0x5e9 PUSH1 0x1
0x5eb DUP4
0x5ec PUSH1 0x20
0x5ee SUB
0x5ef PUSH2 0x100
0x5f2 EXP
0x5f3 SUB
0x5f4 NOT
0x5f5 AND
0x5f6 DUP2
0x5f7 MSTORE
0x5f8 PUSH1 0x20
0x5fa ADD
0x5fb SWAP2
0x5fc POP
---
0x5e6: V486 = SUB V481 V483
0x5e8: V487 = M[V486]
0x5e9: V488 = 0x1
0x5ec: V489 = 0x20
0x5ee: V490 = SUB 0x20 V483
0x5ef: V491 = 0x100
0x5f2: V492 = EXP 0x100 V490
0x5f3: V493 = SUB V492 0x1
0x5f4: V494 = NOT V493
0x5f5: V495 = AND V494 V487
0x5f7: M[V486] = V495
0x5f8: V496 = 0x20
0x5fa: V497 = ADD 0x20 V486
---
Entry stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, S3, S2, V481, V483]
Stack pops: 2
Stack additions: [V497, S0]
Exit stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, S3, S2, V497, V483]

================================

Block 0x5fd
[0x5fd:0x60a]
---
Predecessors: [0x5d1, 0x5e4, 0x726]
Successors: []
---
0x5fd JUMPDEST
0x5fe POP
0x5ff SWAP3
0x600 POP
0x601 POP
0x602 POP
0x603 PUSH1 0x40
0x605 MLOAD
0x606 DUP1
0x607 SWAP2
0x608 SUB
0x609 SWAP1
0x60a RETURN
---
0x5fd: JUMPDEST 
0x603: V498 = 0x40
0x605: V499 = M[0x40]
0x608: V500 = SUB S1 V499
0x60a: RETURN V499 V500
---
Entry stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x3fd, S9, V113, S7, S6, S5]

================================

Block 0x60b
[0x60b:0x611]
---
Predecessors: [0xab]
Successors: [0x612, 0x613]
---
0x60b JUMPDEST
0x60c CALLVALUE
0x60d ISZERO
0x60e PUSH2 0x613
0x611 JUMPI
---
0x60b: JUMPDEST 
0x60c: V501 = CALLVALUE
0x60d: V502 = ISZERO V501
0x60e: V503 = 0x613
0x611: JUMPI 0x613 V502
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x612
[0x612:0x612]
---
Predecessors: [0x60b]
Successors: []
---
0x612 INVALID
---
0x612: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x613
[0x613:0x61a]
---
Predecessors: [0x60b]
Successors: [0x9ac]
---
0x613 JUMPDEST
0x614 PUSH2 0x61b
0x617 PUSH2 0x9ac
0x61a JUMP
---
0x613: JUMPDEST 
0x614: V504 = 0x61b
0x617: V505 = 0x9ac
0x61a: JUMP 0x9ac
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x61b]
Exit stack: [V10, 0x61b]

================================

Block 0x61b
[0x61b:0x63a]
---
Predecessors: [0x9e3]
Successors: []
---
0x61b JUMPDEST
0x61c PUSH1 0x40
0x61e DUP1
0x61f MLOAD
0x620 PUSH1 0xff
0x622 SWAP4
0x623 DUP5
0x624 AND
0x625 DUP2
0x626 MSTORE
0x627 SWAP2
0x628 SWAP1
0x629 SWAP3
0x62a AND
0x62b PUSH1 0x20
0x62d DUP3
0x62e ADD
0x62f MSTORE
0x630 DUP2
0x631 MLOAD
0x632 SWAP1
0x633 DUP2
0x634 SWAP1
0x635 SUB
0x636 SWAP1
0x637 SWAP2
0x638 ADD
0x639 SWAP1
0x63a RETURN
---
0x61b: JUMPDEST 
0x61c: V506 = 0x40
0x61f: V507 = M[0x40]
0x620: V508 = 0xff
0x624: V509 = AND 0xff S1
0x626: M[V507] = V509
0x62a: V510 = AND 0xff S0
0x62b: V511 = 0x20
0x62e: V512 = ADD V507 0x20
0x62f: M[V512] = V510
0x631: V513 = M[0x40]
0x635: V514 = SUB V507 V513
0x638: V515 = ADD 0x40 V514
0x63a: RETURN V513 V515
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x63b
[0x63b:0x641]
---
Predecessors: [0xb6]
Successors: [0x642, 0x643]
---
0x63b JUMPDEST
0x63c CALLVALUE
0x63d ISZERO
0x63e PUSH2 0x643
0x641 JUMPI
---
0x63b: JUMPDEST 
0x63c: V516 = CALLVALUE
0x63d: V517 = ISZERO V516
0x63e: V518 = 0x643
0x641: JUMPI 0x643 V517
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x642
[0x642:0x642]
---
Predecessors: [0x63b]
Successors: []
---
0x642 INVALID
---
0x642: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x643
[0x643:0x64a]
---
Predecessors: [0x63b]
Successors: [0x9e8]
---
0x643 JUMPDEST
0x644 PUSH2 0x41b
0x647 PUSH2 0x9e8
0x64a JUMP
---
0x643: JUMPDEST 
0x644: V519 = 0x41b
0x647: V520 = 0x9e8
0x64a: JUMP 0x9e8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x41b]
Exit stack: [V10, 0x41b]

================================

Block 0x64b
[0x64b:0x65c]
---
Predecessors: []
Successors: []
---
0x64b JUMPDEST
0x64c PUSH1 0x40
0x64e DUP1
0x64f MLOAD
0x650 SWAP2
0x651 DUP3
0x652 MSTORE
0x653 MLOAD
0x654 SWAP1
0x655 DUP2
0x656 SWAP1
0x657 SUB
0x658 PUSH1 0x20
0x65a ADD
0x65b SWAP1
0x65c RETURN
---
0x64b: JUMPDEST 
0x64c: V521 = 0x40
0x64f: V522 = M[0x40]
0x652: M[V522] = S0
0x653: V523 = M[0x40]
0x657: V524 = SUB V522 V523
0x658: V525 = 0x20
0x65a: V526 = ADD 0x20 V524
0x65c: RETURN V523 V526
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x65d
[0x65d:0x663]
---
Predecessors: [0xc1]
Successors: [0x664, 0x665]
---
0x65d JUMPDEST
0x65e CALLVALUE
0x65f ISZERO
0x660 PUSH2 0x665
0x663 JUMPI
---
0x65d: JUMPDEST 
0x65e: V527 = CALLVALUE
0x65f: V528 = ISZERO V527
0x660: V529 = 0x665
0x663: JUMPI 0x665 V528
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x664
[0x664:0x664]
---
Predecessors: [0x65d]
Successors: []
---
0x664 INVALID
---
0x664: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x665
[0x665:0x66c]
---
Predecessors: [0x65d]
Successors: [0x9ee]
---
0x665 JUMPDEST
0x666 PUSH2 0x41b
0x669 PUSH2 0x9ee
0x66c JUMP
---
0x665: JUMPDEST 
0x666: V530 = 0x41b
0x669: V531 = 0x9ee
0x66c: JUMP 0x9ee
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x41b]
Exit stack: [V10, 0x41b]

================================

Block 0x66d
[0x66d:0x67e]
---
Predecessors: []
Successors: []
---
0x66d JUMPDEST
0x66e PUSH1 0x40
0x670 DUP1
0x671 MLOAD
0x672 SWAP2
0x673 DUP3
0x674 MSTORE
0x675 MLOAD
0x676 SWAP1
0x677 DUP2
0x678 SWAP1
0x679 SUB
0x67a PUSH1 0x20
0x67c ADD
0x67d SWAP1
0x67e RETURN
---
0x66d: JUMPDEST 
0x66e: V532 = 0x40
0x671: V533 = M[0x40]
0x674: M[V533] = S0
0x675: V534 = M[0x40]
0x679: V535 = SUB V533 V534
0x67a: V536 = 0x20
0x67c: V537 = ADD 0x20 V535
0x67e: RETURN V534 V537
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x67f
[0x67f:0x685]
---
Predecessors: [0xcc]
Successors: [0x686, 0x687]
---
0x67f JUMPDEST
0x680 CALLVALUE
0x681 ISZERO
0x682 PUSH2 0x687
0x685 JUMPI
---
0x67f: JUMPDEST 
0x680: V538 = CALLVALUE
0x681: V539 = ISZERO V538
0x682: V540 = 0x687
0x685: JUMPI 0x687 V539
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x686
[0x686:0x686]
---
Predecessors: [0x67f]
Successors: []
---
0x686 INVALID
---
0x686: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x687
[0x687:0x691]
---
Predecessors: [0x67f]
Successors: [0x9f5]
---
0x687 JUMPDEST
0x688 PUSH2 0x4d0
0x68b PUSH1 0x4
0x68d CALLDATALOAD
0x68e PUSH2 0x9f5
0x691 JUMP
---
0x687: JUMPDEST 
0x688: V541 = 0x4d0
0x68b: V542 = 0x4
0x68d: V543 = CALLDATALOAD 0x4
0x68e: V544 = 0x9f5
0x691: JUMP 0x9f5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4d0, V543]
Exit stack: [V10, 0x4d0, V543]

================================

Block 0x692
[0x692:0x6ad]
---
Predecessors: []
Successors: []
---
0x692 JUMPDEST
0x693 PUSH1 0x40
0x695 DUP1
0x696 MLOAD
0x697 PUSH1 0x1
0x699 PUSH1 0xa0
0x69b PUSH1 0x2
0x69d EXP
0x69e SUB
0x69f SWAP1
0x6a0 SWAP3
0x6a1 AND
0x6a2 DUP3
0x6a3 MSTORE
0x6a4 MLOAD
0x6a5 SWAP1
0x6a6 DUP2
0x6a7 SWAP1
0x6a8 SUB
0x6a9 PUSH1 0x20
0x6ab ADD
0x6ac SWAP1
0x6ad RETURN
---
0x692: JUMPDEST 
0x693: V545 = 0x40
0x696: V546 = M[0x40]
0x697: V547 = 0x1
0x699: V548 = 0xa0
0x69b: V549 = 0x2
0x69d: V550 = EXP 0x2 0xa0
0x69e: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a1: V552 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x6a3: M[V546] = V552
0x6a4: V553 = M[0x40]
0x6a8: V554 = SUB V546 V553
0x6a9: V555 = 0x20
0x6ab: V556 = ADD 0x20 V554
0x6ad: RETURN V553 V556
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6ae
[0x6ae:0x6b4]
---
Predecessors: [0xd7]
Successors: [0x6b5, 0x6b6]
---
0x6ae JUMPDEST
0x6af CALLVALUE
0x6b0 ISZERO
0x6b1 PUSH2 0x6b6
0x6b4 JUMPI
---
0x6ae: JUMPDEST 
0x6af: V557 = CALLVALUE
0x6b0: V558 = ISZERO V557
0x6b1: V559 = 0x6b6
0x6b4: JUMPI 0x6b6 V558
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b5
[0x6b5:0x6b5]
---
Predecessors: [0x6ae]
Successors: []
---
0x6b5 INVALID
---
0x6b5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b6
[0x6b6:0x6bd]
---
Predecessors: [0x6ae]
Successors: [0xa27]
---
0x6b6 JUMPDEST
0x6b7 PUSH2 0x41b
0x6ba PUSH2 0xa27
0x6bd JUMP
---
0x6b6: JUMPDEST 
0x6b7: V560 = 0x41b
0x6ba: V561 = 0xa27
0x6bd: JUMP 0xa27
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x41b]
Exit stack: [V10, 0x41b]

================================

Block 0x6be
[0x6be:0x6cf]
---
Predecessors: []
Successors: []
---
0x6be JUMPDEST
0x6bf PUSH1 0x40
0x6c1 DUP1
0x6c2 MLOAD
0x6c3 SWAP2
0x6c4 DUP3
0x6c5 MSTORE
0x6c6 MLOAD
0x6c7 SWAP1
0x6c8 DUP2
0x6c9 SWAP1
0x6ca SUB
0x6cb PUSH1 0x20
0x6cd ADD
0x6ce SWAP1
0x6cf RETURN
---
0x6be: JUMPDEST 
0x6bf: V562 = 0x40
0x6c2: V563 = M[0x40]
0x6c5: M[V563] = S0
0x6c6: V564 = M[0x40]
0x6ca: V565 = SUB V563 V564
0x6cb: V566 = 0x20
0x6cd: V567 = ADD 0x20 V565
0x6cf: RETURN V564 V567
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6d0
[0x6d0:0x6d6]
---
Predecessors: [0xe2]
Successors: [0x6d7, 0x6d8]
---
0x6d0 JUMPDEST
0x6d1 CALLVALUE
0x6d2 ISZERO
0x6d3 PUSH2 0x6d8
0x6d6 JUMPI
---
0x6d0: JUMPDEST 
0x6d1: V568 = CALLVALUE
0x6d2: V569 = ISZERO V568
0x6d3: V570 = 0x6d8
0x6d6: JUMPI 0x6d8 V569
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d7
[0x6d7:0x6d7]
---
Predecessors: [0x6d0]
Successors: []
---
0x6d7 INVALID
---
0x6d7: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d8
[0x6d8:0x6df]
---
Predecessors: [0x6d0]
Successors: [0xa2d]
---
0x6d8 JUMPDEST
0x6d9 PUSH2 0x58b
0x6dc PUSH2 0xa2d
0x6df JUMP
---
0x6d8: JUMPDEST 
0x6d9: V571 = 0x58b
0x6dc: V572 = 0xa2d
0x6df: JUMP 0xa2d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x58b]
Exit stack: [V10, 0x58b]

================================

Block 0x6e0
[0x6e0:0x705]
---
Predecessors: []
Successors: [0x5d1, 0x706]
---
0x6e0 JUMPDEST
0x6e1 PUSH1 0x40
0x6e3 DUP1
0x6e4 MLOAD
0x6e5 PUSH1 0x20
0x6e7 DUP1
0x6e8 DUP3
0x6e9 MSTORE
0x6ea DUP4
0x6eb MLOAD
0x6ec DUP2
0x6ed DUP4
0x6ee ADD
0x6ef MSTORE
0x6f0 DUP4
0x6f1 MLOAD
0x6f2 SWAP2
0x6f3 SWAP3
0x6f4 DUP4
0x6f5 SWAP3
0x6f6 SWAP1
0x6f7 DUP4
0x6f8 ADD
0x6f9 SWAP2
0x6fa DUP6
0x6fb ADD
0x6fc SWAP1
0x6fd DUP1
0x6fe DUP4
0x6ff DUP4
0x700 DUP3
0x701 ISZERO
0x702 PUSH2 0x5d1
0x705 JUMPI
---
0x6e0: JUMPDEST 
0x6e1: V573 = 0x40
0x6e4: V574 = M[0x40]
0x6e5: V575 = 0x20
0x6e9: M[V574] = 0x20
0x6eb: V576 = M[S0]
0x6ee: V577 = ADD V574 0x20
0x6ef: M[V577] = V576
0x6f1: V578 = M[S0]
0x6f8: V579 = ADD V574 0x40
0x6fb: V580 = ADD S0 0x20
0x701: V581 = ISZERO V578
0x702: V582 = 0x5d1
0x705: JUMPI 0x5d1 V581
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V574, V574, V579, V580, V578, V578, V579, V580]
Exit stack: [S0, V574, V574, V579, V580, V578, V578, V579, V580]

================================

Block 0x706
[0x706:0x713]
---
Predecessors: [0x6e0]
Successors: [0x5d1, 0x714]
---
0x706 JUMPDEST
0x707 DUP1
0x708 MLOAD
0x709 DUP3
0x70a MSTORE
0x70b PUSH1 0x20
0x70d DUP4
0x70e GT
0x70f ISZERO
0x710 PUSH2 0x5d1
0x713 JUMPI
---
0x706: JUMPDEST 
0x708: V583 = M[V580]
0x70a: M[V579] = V583
0x70b: V584 = 0x20
0x70e: V585 = GT V578 0x20
0x70f: V586 = ISZERO V585
0x710: V587 = 0x5d1
0x713: JUMPI 0x5d1 V586
---
Entry stack: [S8, V574, V574, V579, V580, V578, V578, V579, V580]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V574, V574, V579, V580, V578, V578, V579, V580]

================================

Block 0x714
[0x714:0x725]
---
Predecessors: [0x706]
Successors: [0x5b1]
---
0x714 PUSH1 0x1f
0x716 NOT
0x717 SWAP1
0x718 SWAP3
0x719 ADD
0x71a SWAP2
0x71b PUSH1 0x20
0x71d SWAP2
0x71e DUP3
0x71f ADD
0x720 SWAP2
0x721 ADD
0x722 PUSH2 0x5b1
0x725 JUMP
---
0x714: V588 = 0x1f
0x716: V589 = NOT 0x1f
0x719: V590 = ADD V578 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x71b: V591 = 0x20
0x71f: V592 = ADD 0x20 V579
0x721: V593 = ADD 0x20 V580
0x722: V594 = 0x5b1
0x725: JUMP 0x5b1
---
Entry stack: [S8, V574, V574, V579, V580, V578, V578, V579, V580]
Stack pops: 3
Stack additions: [V590, V592, V593]
Exit stack: [S8, V574, V574, V579, V580, V578, V590, V592, V593]

================================

Block 0x726
[0x726:0x738]
---
Predecessors: []
Successors: [0x5fd, 0x739]
---
0x726 JUMPDEST
0x727 POP
0x728 POP
0x729 POP
0x72a SWAP1
0x72b POP
0x72c SWAP1
0x72d DUP2
0x72e ADD
0x72f SWAP1
0x730 PUSH1 0x1f
0x732 AND
0x733 DUP1
0x734 ISZERO
0x735 PUSH2 0x5fd
0x738 JUMPI
---
0x726: JUMPDEST 
0x72e: V595 = ADD S3 S5
0x730: V596 = 0x1f
0x732: V597 = AND 0x1f S3
0x734: V598 = ISZERO V597
0x735: V599 = 0x5fd
0x738: JUMPI 0x5fd V598
---
Entry stack: []
Stack pops: 6
Stack additions: [V595, V597]
Exit stack: [V595, V597]

================================

Block 0x739
[0x739:0x751]
---
Predecessors: [0x726]
Successors: [0x752]
---
0x739 DUP1
0x73a DUP3
0x73b SUB
0x73c DUP1
0x73d MLOAD
0x73e PUSH1 0x1
0x740 DUP4
0x741 PUSH1 0x20
0x743 SUB
0x744 PUSH2 0x100
0x747 EXP
0x748 SUB
0x749 NOT
0x74a AND
0x74b DUP2
0x74c MSTORE
0x74d PUSH1 0x20
0x74f ADD
0x750 SWAP2
0x751 POP
---
0x73b: V600 = SUB V595 V597
0x73d: V601 = M[V600]
0x73e: V602 = 0x1
0x741: V603 = 0x20
0x743: V604 = SUB 0x20 V597
0x744: V605 = 0x100
0x747: V606 = EXP 0x100 V604
0x748: V607 = SUB V606 0x1
0x749: V608 = NOT V607
0x74a: V609 = AND V608 V601
0x74c: M[V600] = V609
0x74d: V610 = 0x20
0x74f: V611 = ADD 0x20 V600
---
Entry stack: [V595, V597]
Stack pops: 2
Stack additions: [V611, S0]
Exit stack: [V611, V597]

================================

Block 0x752
[0x752:0x75f]
---
Predecessors: [0x739]
Successors: []
---
0x752 JUMPDEST
0x753 POP
0x754 SWAP3
0x755 POP
0x756 POP
0x757 POP
0x758 PUSH1 0x40
0x75a MLOAD
0x75b DUP1
0x75c SWAP2
0x75d SUB
0x75e SWAP1
0x75f RETURN
---
0x752: JUMPDEST 
0x758: V612 = 0x40
0x75a: V613 = M[0x40]
0x75d: V614 = SUB V611 V613
0x75f: RETURN V613 V614
---
Entry stack: [V611, V597]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x760
[0x760:0x76a]
---
Predecessors: [0xf8, 0x8f9]
Successors: [0x76b, 0x771]
---
0x760 JUMPDEST
0x761 PUSH1 0x0
0x763 DUP1
0x764 SLOAD
0x765 ISZERO
0x766 DUP1
0x767 PUSH2 0x771
0x76a JUMPI
---
0x760: JUMPDEST 
0x761: V615 = 0x0
0x764: V616 = S[0x0]
0x765: V617 = ISZERO V616
0x767: V618 = 0x771
0x76a: JUMPI 0x771 V617
---
Entry stack: [V10, 0x3fd, S4, {0x0, 0x58b}, S2, {0x1, 0x3}, {0x100, 0x903}]
Stack pops: 0
Stack additions: [0x0, V617]
Exit stack: [V10, 0x3fd, S4, {0x0, 0x58b}, S2, {0x1, 0x3}, {0x100, 0x903}, 0x0, V617]

================================

Block 0x76b
[0x76b:0x770]
---
Predecessors: [0x760]
Successors: [0x771]
---
0x76b POP
0x76c PUSH1 0x0
0x76e SLOAD
0x76f NUMBER
0x770 LT
---
0x76c: V619 = 0x0
0x76e: V620 = S[0x0]
0x76f: V621 = NUMBER
0x770: V622 = LT V621 V620
---
Entry stack: [V10, 0x3fd, S6, {0x0, 0x58b}, S4, {0x1, 0x3}, {0x100, 0x903}, 0x0, V617]
Stack pops: 1
Stack additions: [V622]
Exit stack: [V10, 0x3fd, S6, {0x0, 0x58b}, S4, {0x1, 0x3}, {0x100, 0x903}, 0x0, V622]

================================

Block 0x771
[0x771:0x776]
---
Predecessors: [0x760, 0x76b]
Successors: [0x777, 0x77e]
---
0x771 JUMPDEST
0x772 ISZERO
0x773 PUSH2 0x77e
0x776 JUMPI
---
0x771: JUMPDEST 
0x772: V623 = ISZERO S0
0x773: V624 = 0x77e
0x776: JUMPI 0x77e V623
---
Entry stack: [V10, 0x3fd, S6, {0x0, 0x58b}, S4, {0x1, 0x3}, {0x100, 0x903}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fd, S6, {0x0, 0x58b}, S4, {0x1, 0x3}, {0x100, 0x903}, 0x0]

================================

Block 0x777
[0x777:0x77d]
---
Predecessors: [0x771]
Successors: [0x793]
---
0x777 POP
0x778 PUSH1 0x0
0x77a PUSH2 0x793
0x77d JUMP
---
0x778: V625 = 0x0
0x77a: V626 = 0x793
0x77d: JUMP 0x793
---
Entry stack: [V10, 0x3fd, S5, {0x0, 0x58b}, S3, {0x1, 0x3}, {0x100, 0x903}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x3fd, S5, {0x0, 0x58b}, S3, {0x1, 0x3}, {0x100, 0x903}, 0x0]

================================

Block 0x77e
[0x77e:0x787]
---
Predecessors: [0x771]
Successors: [0x788, 0x78f]
---
0x77e JUMPDEST
0x77f PUSH1 0x1
0x781 SLOAD
0x782 TIMESTAMP
0x783 GT
0x784 PUSH2 0x78f
0x787 JUMPI
---
0x77e: JUMPDEST 
0x77f: V627 = 0x1
0x781: V628 = S[0x1]
0x782: V629 = TIMESTAMP
0x783: V630 = GT V629 V628
0x784: V631 = 0x78f
0x787: JUMPI 0x78f V630
---
Entry stack: [V10, 0x3fd, S5, {0x0, 0x58b}, S3, {0x1, 0x3}, {0x100, 0x903}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S5, {0x0, 0x58b}, S3, {0x1, 0x3}, {0x100, 0x903}, 0x0]

================================

Block 0x788
[0x788:0x78e]
---
Predecessors: [0x77e]
Successors: [0x793]
---
0x788 POP
0x789 PUSH1 0x1
0x78b PUSH2 0x793
0x78e JUMP
---
0x789: V632 = 0x1
0x78b: V633 = 0x793
0x78e: JUMP 0x793
---
Entry stack: [V10, 0x3fd, S5, {0x0, 0x58b}, S3, {0x1, 0x3}, {0x100, 0x903}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x3fd, S5, {0x0, 0x58b}, S3, {0x1, 0x3}, {0x100, 0x903}, 0x1]

================================

Block 0x78f
[0x78f:0x792]
---
Predecessors: [0x77e]
Successors: [0x793]
---
0x78f JUMPDEST
0x790 POP
0x791 PUSH1 0x2
---
0x78f: JUMPDEST 
0x791: V634 = 0x2
---
Entry stack: [V10, 0x3fd, S5, {0x0, 0x58b}, S3, {0x1, 0x3}, {0x100, 0x903}, 0x0]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V10, 0x3fd, S5, {0x0, 0x58b}, S3, {0x1, 0x3}, {0x100, 0x903}, 0x2]

================================

Block 0x793
[0x793:0x793]
---
Predecessors: [0x777, 0x788, 0x78f, 0xad4]
Successors: [0x794]
---
0x793 JUMPDEST
---
0x793: JUMPDEST 
---
Entry stack: [V10, 0x3fd, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x58b}, S3, S2, {0x100, 0x3f7, 0x903}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x58b}, S3, S2, {0x100, 0x3f7, 0x903}, S0]

================================

Block 0x794
[0x794:0x794]
---
Predecessors: [0x793]
Successors: [0x795]
---
0x794 JUMPDEST
---
0x794: JUMPDEST 
---
Entry stack: [V10, 0x3fd, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x58b}, S3, S2, {0x100, 0x3f7, 0x903}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x58b}, S3, S2, {0x100, 0x3f7, 0x903}, S0]

================================

Block 0x795
[0x795:0x797]
---
Predecessors: [0x794]
Successors: [0x100, 0x3f7, 0x903]
---
0x795 JUMPDEST
0x796 SWAP1
0x797 JUMP
---
0x795: JUMPDEST 
0x797: JUMP {0x100, 0x3f7, 0x903}
---
Entry stack: [V10, 0x3fd, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x58b}, S3, S2, {0x100, 0x3f7, 0x903}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x3fd, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x58b}, S3, S2, S0]

================================

Block 0x798
[0x798:0x7c0]
---
Predecessors: [0x273, 0x314, 0x4f4]
Successors: [0x7c1, 0x7c9]
---
0x798 JUMPDEST
0x799 PUSH1 0x1
0x79b PUSH1 0xa0
0x79d PUSH1 0x2
0x79f EXP
0x7a0 SUB
0x7a1 DUP2
0x7a2 AND
0x7a3 PUSH1 0x0
0x7a5 SWAP1
0x7a6 DUP2
0x7a7 MSTORE
0x7a8 PUSH1 0x6
0x7aa PUSH1 0x20
0x7ac MSTORE
0x7ad PUSH1 0x40
0x7af DUP2
0x7b0 SHA3
0x7b1 SLOAD
0x7b2 PUSH7 0x2386f26fc10000
0x7ba DUP2
0x7bb LT
0x7bc ISZERO
0x7bd PUSH2 0x7c9
0x7c0 JUMPI
---
0x798: JUMPDEST 
0x799: V635 = 0x1
0x79b: V636 = 0xa0
0x79d: V637 = 0x2
0x79f: V638 = EXP 0x2 0xa0
0x7a0: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a2: V640 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7a3: V641 = 0x0
0x7a7: M[0x0] = V640
0x7a8: V642 = 0x6
0x7aa: V643 = 0x20
0x7ac: M[0x20] = 0x6
0x7ad: V644 = 0x40
0x7b0: V645 = SHA3 0x0 0x40
0x7b1: V646 = S[V645]
0x7b2: V647 = 0x2386f26fc10000
0x7bb: V648 = LT V646 0x2386f26fc10000
0x7bc: V649 = ISZERO V648
0x7bd: V650 = 0x7c9
0x7c0: JUMPI 0x7c9 V649
---
Entry stack: [V10, 0x3fd, S11, V113, S9, S8, S7, S6, V113, S4, 0x64, S2, {0x27f, 0x33f, 0x41b}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V646]
Exit stack: [V10, 0x3fd, S11, V113, S9, S8, S7, S6, V113, S4, 0x64, S2, {0x27f, 0x33f, 0x41b}, S0, 0x0, V646]

================================

Block 0x7c1
[0x7c1:0x7c8]
---
Predecessors: [0x798]
Successors: [0x7f3]
---
0x7c1 PUSH1 0x0
0x7c3 SWAP2
0x7c4 POP
0x7c5 PUSH2 0x7f3
0x7c8 JUMP
---
0x7c1: V651 = 0x0
0x7c5: V652 = 0x7f3
0x7c8: JUMP 0x7f3
---
Entry stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, 0x0, V646]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, 0x0, V646]

================================

Block 0x7c9
[0x7c9:0x7d8]
---
Predecessors: [0x798]
Successors: [0x7d9, 0x7e1]
---
0x7c9 JUMPDEST
0x7ca PUSH8 0xde0b6b3a7640000
0x7d3 DUP2
0x7d4 LT
0x7d5 PUSH2 0x7e1
0x7d8 JUMPI
---
0x7c9: JUMPDEST 
0x7ca: V653 = 0xde0b6b3a7640000
0x7d4: V654 = LT V646 0xde0b6b3a7640000
0x7d5: V655 = 0x7e1
0x7d8: JUMPI 0x7e1 V654
---
Entry stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, 0x0, V646]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, 0x0, V646]

================================

Block 0x7d9
[0x7d9:0x7e0]
---
Predecessors: [0x7c9]
Successors: [0x7f3]
---
0x7d9 PUSH1 0x64
0x7db SWAP2
0x7dc POP
0x7dd PUSH2 0x7f3
0x7e0 JUMP
---
0x7d9: V656 = 0x64
0x7dd: V657 = 0x7f3
0x7e0: JUMP 0x7f3
---
Entry stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, 0x0, V646]
Stack pops: 2
Stack additions: [0x64, S0]
Exit stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, 0x64, V646]

================================

Block 0x7e1
[0x7e1:0x7ee]
---
Predecessors: [0x7c9]
Successors: [0x7ef]
---
0x7e1 JUMPDEST
0x7e2 PUSH8 0xde0b6b3a7640000
0x7eb PUSH1 0x64
0x7ed DUP3
0x7ee MUL
---
0x7e1: JUMPDEST 
0x7e2: V658 = 0xde0b6b3a7640000
0x7eb: V659 = 0x64
0x7ee: V660 = MUL V646 0x64
---
Entry stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, 0x0, V646]
Stack pops: 1
Stack additions: [S0, 0xde0b6b3a7640000, V660]
Exit stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, 0x0, V646, 0xde0b6b3a7640000, V660]

================================

Block 0x7ef
[0x7ef:0x7f2]
---
Predecessors: [0x7e1]
Successors: [0x7f3]
---
0x7ef JUMPDEST
0x7f0 DIV
0x7f1 SWAP2
0x7f2 POP
---
0x7ef: JUMPDEST 
0x7f0: V661 = DIV V660 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3fd, S15, V113, S13, S12, S11, S10, V113, S8, 0x64, S6, {0x27f, 0x33f, 0x41b}, S4, 0x0, V646, 0xde0b6b3a7640000, V660]
Stack pops: 4
Stack additions: [V661, S2]
Exit stack: [V10, 0x3fd, S15, V113, S13, S12, S11, S10, V113, S8, 0x64, S6, {0x27f, 0x33f, 0x41b}, S4, V661, V646]

================================

Block 0x7f3
[0x7f3:0x7f3]
---
Predecessors: [0x7c1, 0x7d9, 0x7ef]
Successors: [0x7f4]
---
0x7f3 JUMPDEST
---
0x7f3: JUMPDEST 
---
Entry stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, S1, S0]

================================

Block 0x7f4
[0x7f4:0x7f4]
---
Predecessors: [0x7f3]
Successors: [0x7f5]
---
0x7f4 JUMPDEST
---
0x7f4: JUMPDEST 
---
Entry stack: [V10, 0x3fd, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, S1, S0]

================================

Block 0x7f5
[0x7f5:0x7fa]
---
Predecessors: [0x7f4]
Successors: [0x27f, 0x33f, 0x41b]
---
0x7f5 JUMPDEST
0x7f6 POP
0x7f7 SWAP2
0x7f8 SWAP1
0x7f9 POP
0x7fa JUMP
---
0x7f5: JUMPDEST 
0x7fa: JUMP {0x27f, 0x33f, 0x41b}
---
Entry stack: [V10, 0x3fd, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x41b}, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, 0x3fd, S8, V113, S6, 0x64, S4, S1]

================================

Block 0x7fb
[0x7fb:0x80c]
---
Predecessors: [0x407]
Successors: [0x41b]
---
0x7fb JUMPDEST
0x7fc PUSH1 0x6
0x7fe PUSH1 0x20
0x800 MSTORE
0x801 PUSH1 0x0
0x803 SWAP1
0x804 DUP2
0x805 MSTORE
0x806 PUSH1 0x40
0x808 SWAP1
0x809 SHA3
0x80a SLOAD
0x80b DUP2
0x80c JUMP
---
0x7fb: JUMPDEST 
0x7fc: V662 = 0x6
0x7fe: V663 = 0x20
0x800: M[0x20] = 0x6
0x801: V664 = 0x0
0x805: M[0x0] = V325
0x806: V665 = 0x40
0x809: V666 = SHA3 0x0 0x40
0x80a: V667 = S[V666]
0x80c: JUMP 0x41b
---
Entry stack: [V10, 0x41b, V325]
Stack pops: 2
Stack additions: [S1, V667]
Exit stack: [V10, 0x41b, V667]

================================

Block 0x80d
[0x80d:0x823]
---
Predecessors: [0x435]
Successors: [0x824, 0x829]
---
0x80d JUMPDEST
0x80e PUSH1 0x7
0x810 SLOAD
0x811 CALLER
0x812 PUSH1 0x1
0x814 PUSH1 0xa0
0x816 PUSH1 0x2
0x818 EXP
0x819 SUB
0x81a SWAP1
0x81b DUP2
0x81c AND
0x81d SWAP2
0x81e AND
0x81f EQ
0x820 PUSH2 0x829
0x823 JUMPI
---
0x80d: JUMPDEST 
0x80e: V668 = 0x7
0x810: V669 = S[0x7]
0x811: V670 = CALLER
0x812: V671 = 0x1
0x814: V672 = 0xa0
0x816: V673 = 0x2
0x818: V674 = EXP 0x2 0xa0
0x819: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81c: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V670
0x81e: V677 = AND V669 0xffffffffffffffffffffffffffffffffffffffff
0x81f: V678 = EQ V677 V676
0x820: V679 = 0x829
0x823: JUMPI 0x829 V678
---
Entry stack: [V10, 0x3fd, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, V344]

================================

Block 0x824
[0x824:0x828]
---
Predecessors: [0x80d]
Successors: []
---
0x824 PUSH1 0x0
0x826 PUSH1 0x0
0x828 REVERT
---
0x824: V680 = 0x0
0x826: V681 = 0x0
0x828: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3fd, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, V344]

================================

Block 0x829
[0x829:0x851]
---
Predecessors: [0x80d]
Successors: [0x852]
---
0x829 JUMPDEST
0x82a PUSH1 0x7
0x82c DUP1
0x82d SLOAD
0x82e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x843 NOT
0x844 AND
0x845 PUSH1 0x1
0x847 PUSH1 0xa0
0x849 PUSH1 0x2
0x84b EXP
0x84c SUB
0x84d DUP4
0x84e AND
0x84f OR
0x850 SWAP1
0x851 SSTORE
---
0x829: JUMPDEST 
0x82a: V682 = 0x7
0x82d: V683 = S[0x7]
0x82e: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0x843: V685 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x844: V686 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V683
0x845: V687 = 0x1
0x847: V688 = 0xa0
0x849: V689 = 0x2
0x84b: V690 = EXP 0x2 0xa0
0x84c: V691 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84e: V692 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0x84f: V693 = OR V692 V686
0x851: S[0x7] = V693
---
Entry stack: [V10, 0x3fd, V344]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fd, V344]

================================

Block 0x852
[0x852:0x852]
---
Predecessors: [0x829]
Successors: [0x853]
---
0x852 JUMPDEST
---
0x852: JUMPDEST 
---
Entry stack: [V10, 0x3fd, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, V344]

================================

Block 0x853
[0x853:0x855]
---
Predecessors: [0x852]
Successors: [0x3fd]
---
0x853 JUMPDEST
0x854 POP
0x855 JUMP
---
0x853: JUMPDEST 
0x855: JUMP 0x3fd
---
Entry stack: [V10, 0x3fd, V344]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x856
[0x856:0x867]
---
Predecessors: [0x453]
Successors: [0x45b]
---
0x856 JUMPDEST
0x857 PUSH1 0x9
0x859 SLOAD
0x85a PUSH5 0x100000000
0x860 SWAP1
0x861 DIV
0x862 PUSH2 0xffff
0x865 AND
0x866 DUP2
0x867 JUMP
---
0x856: JUMPDEST 
0x857: V694 = 0x9
0x859: V695 = S[0x9]
0x85a: V696 = 0x100000000
0x861: V697 = DIV V695 0x100000000
0x862: V698 = 0xffff
0x865: V699 = AND 0xffff V697
0x867: JUMP 0x45b
---
Entry stack: [V10, 0x45b]
Stack pops: 1
Stack additions: [S0, V699]
Exit stack: [V10, 0x45b, V699]

================================

Block 0x868
[0x868:0x871]
---
Predecessors: [0x47a]
Successors: [0x45b]
---
0x868 JUMPDEST
0x869 PUSH1 0x9
0x86b SLOAD
0x86c PUSH2 0xffff
0x86f AND
0x870 DUP2
0x871 JUMP
---
0x868: JUMPDEST 
0x869: V700 = 0x9
0x86b: V701 = S[0x9]
0x86c: V702 = 0xffff
0x86f: V703 = AND 0xffff V701
0x871: JUMP 0x45b
---
Entry stack: [V10, 0x45b]
Stack pops: 1
Stack additions: [S0, V703]
Exit stack: [V10, 0x45b, V703]

================================

Block 0x872
[0x872:0x881]
---
Predecessors: [0x4a1]
Successors: [0x45b]
---
0x872 JUMPDEST
0x873 PUSH1 0x9
0x875 SLOAD
0x876 PUSH3 0x10000
0x87a SWAP1
0x87b DIV
0x87c PUSH2 0xffff
0x87f AND
0x880 DUP2
0x881 JUMP
---
0x872: JUMPDEST 
0x873: V704 = 0x9
0x875: V705 = S[0x9]
0x876: V706 = 0x10000
0x87b: V707 = DIV V705 0x10000
0x87c: V708 = 0xffff
0x87f: V709 = AND 0xffff V707
0x881: JUMP 0x45b
---
Entry stack: [V10, 0x45b]
Stack pops: 1
Stack additions: [S0, V709]
Exit stack: [V10, 0x45b, V709]

================================

Block 0x882
[0x882:0x890]
---
Predecessors: [0x4c8]
Successors: [0x4d0]
---
0x882 JUMPDEST
0x883 PUSH1 0x7
0x885 SLOAD
0x886 PUSH1 0x1
0x888 PUSH1 0xa0
0x88a PUSH1 0x2
0x88c EXP
0x88d SUB
0x88e AND
0x88f DUP2
0x890 JUMP
---
0x882: JUMPDEST 
0x883: V710 = 0x7
0x885: V711 = S[0x7]
0x886: V712 = 0x1
0x888: V713 = 0xa0
0x88a: V714 = 0x2
0x88c: V715 = EXP 0x2 0xa0
0x88d: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88e: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V711
0x890: JUMP 0x4d0
---
Entry stack: [V10, 0x4d0]
Stack pops: 1
Stack additions: [S0, V717]
Exit stack: [V10, 0x4d0, V717]

================================

Block 0x891
[0x891:0x8a7]
---
Predecessors: [0x522]
Successors: [0x8a8, 0x8ad]
---
0x891 JUMPDEST
0x892 PUSH1 0x7
0x894 SLOAD
0x895 CALLER
0x896 PUSH1 0x1
0x898 PUSH1 0xa0
0x89a PUSH1 0x2
0x89c EXP
0x89d SUB
0x89e SWAP1
0x89f DUP2
0x8a0 AND
0x8a1 SWAP2
0x8a2 AND
0x8a3 EQ
0x8a4 PUSH2 0x8ad
0x8a7 JUMPI
---
0x891: JUMPDEST 
0x892: V718 = 0x7
0x894: V719 = S[0x7]
0x895: V720 = CALLER
0x896: V721 = 0x1
0x898: V722 = 0xa0
0x89a: V723 = 0x2
0x89c: V724 = EXP 0x2 0xa0
0x89d: V725 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a0: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0x8a2: V727 = AND V719 0xffffffffffffffffffffffffffffffffffffffff
0x8a3: V728 = EQ V727 V726
0x8a4: V729 = 0x8ad
0x8a7: JUMPI 0x8ad V728
---
Entry stack: [V10, 0x3fd, V426, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, V426, V428]

================================

Block 0x8a8
[0x8a8:0x8ac]
---
Predecessors: [0x891]
Successors: []
---
0x8a8 PUSH1 0x0
0x8aa PUSH1 0x0
0x8ac REVERT
---
0x8a8: V730 = 0x0
0x8aa: V731 = 0x0
0x8ac: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3fd, V426, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, V426, V428]

================================

Block 0x8ad
[0x8ad:0x8b6]
---
Predecessors: [0x891]
Successors: [0xa64]
---
0x8ad JUMPDEST
0x8ae PUSH2 0x8b7
0x8b1 NUMBER
0x8b2 DUP4
0x8b3 PUSH2 0xa64
0x8b6 JUMP
---
0x8ad: JUMPDEST 
0x8ae: V732 = 0x8b7
0x8b1: V733 = NUMBER
0x8b3: V734 = 0xa64
0x8b6: JUMP 0xa64
---
Entry stack: [V10, 0x3fd, V426, V428]
Stack pops: 2
Stack additions: [S1, S0, 0x8b7, V733, S1]
Exit stack: [V10, 0x3fd, V426, V428, 0x8b7, V733, V426]

================================

Block 0x8b7
[0x8b7:0x8c4]
---
Predecessors: [0xa78]
Successors: [0xa64]
---
0x8b7 JUMPDEST
0x8b8 PUSH1 0x0
0x8ba SSTORE
0x8bb PUSH2 0x8c5
0x8be DUP2
0x8bf PUSH1 0x1
0x8c1 PUSH2 0xa64
0x8c4 JUMP
---
0x8b7: JUMPDEST 
0x8b8: V735 = 0x0
0x8ba: S[0x0] = S0
0x8bb: V736 = 0x8c5
0x8bf: V737 = 0x1
0x8c1: V738 = 0xa64
0x8c4: JUMP 0xa64
---
Entry stack: [V10, 0x3fd, V426, V428, S0]
Stack pops: 2
Stack additions: [S1, 0x8c5, S1, 0x1]
Exit stack: [V10, 0x3fd, V426, V428, 0x8c5, V428, 0x1]

================================

Block 0x8c5
[0x8c5:0x8d1]
---
Predecessors: [0xa78]
Successors: [0x8d2]
---
0x8c5 JUMPDEST
0x8c6 PUSH2 0xe10
0x8c9 MUL
0x8ca TIMESTAMP
0x8cb ADD
0x8cc PUSH1 0x1
0x8ce DUP2
0x8cf SWAP1
0x8d0 SSTORE
0x8d1 POP
---
0x8c5: JUMPDEST 
0x8c6: V739 = 0xe10
0x8c9: V740 = MUL 0xe10 S0
0x8ca: V741 = TIMESTAMP
0x8cb: V742 = ADD V741 V740
0x8cc: V743 = 0x1
0x8d0: S[0x1] = V742
---
Entry stack: [V10, 0x3fd, V426, V428, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fd, V426, V428]

================================

Block 0x8d2
[0x8d2:0x8d2]
---
Predecessors: [0x8c5]
Successors: [0x8d3]
---
0x8d2 JUMPDEST
---
0x8d2: JUMPDEST 
---
Entry stack: [V10, 0x3fd, V426, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, V426, V428]

================================

Block 0x8d3
[0x8d3:0x8d6]
---
Predecessors: [0x8d2]
Successors: [0x3fd]
---
0x8d3 JUMPDEST
0x8d4 POP
0x8d5 POP
0x8d6 JUMP
---
0x8d3: JUMPDEST 
0x8d6: JUMP 0x3fd
---
Entry stack: [V10, 0x3fd, V426, V428]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d7
[0x8d7:0x8dc]
---
Predecessors: [0x53a]
Successors: [0x41b]
---
0x8d7 JUMPDEST
0x8d8 PUSH1 0x1
0x8da SLOAD
0x8db DUP2
0x8dc JUMP
---
0x8d7: JUMPDEST 
0x8d8: V744 = 0x1
0x8da: V745 = S[0x1]
0x8dc: JUMP 0x41b
---
Entry stack: [V10, 0x41b]
Stack pops: 1
Stack additions: [S0, V745]
Exit stack: [V10, 0x41b, V745]

================================

Block 0x8dd
[0x8dd:0x8f0]
---
Predecessors: [0x55c]
Successors: [0x45b]
---
0x8dd JUMPDEST
0x8de PUSH1 0x9
0x8e0 SLOAD
0x8e1 PUSH7 0x1000000000000
0x8e9 SWAP1
0x8ea DIV
0x8eb PUSH2 0xffff
0x8ee AND
0x8ef DUP2
0x8f0 JUMP
---
0x8dd: JUMPDEST 
0x8de: V746 = 0x9
0x8e0: V747 = S[0x9]
0x8e1: V748 = 0x1000000000000
0x8ea: V749 = DIV V747 0x1000000000000
0x8eb: V750 = 0xffff
0x8ee: V751 = AND 0xffff V749
0x8f0: JUMP 0x45b
---
Entry stack: [V10, 0x45b]
Stack pops: 1
Stack additions: [S0, V751]
Exit stack: [V10, 0x45b, V751]

================================

Block 0x8f1
[0x8f1:0x8f8]
---
Predecessors: [0x583]
Successors: [0xaa8]
---
0x8f1 JUMPDEST
0x8f2 PUSH2 0x8f9
0x8f5 PUSH2 0xaa8
0x8f8 JUMP
---
0x8f1: JUMPDEST 
0x8f2: V752 = 0x8f9
0x8f5: V753 = 0xaa8
0x8f8: JUMP 0xaa8
---
Entry stack: [V10, 0x58b]
Stack pops: 0
Stack additions: [0x8f9]
Exit stack: [V10, 0x58b, 0x8f9]

================================

Block 0x8f9
[0x8f9:0x902]
---
Predecessors: [0xaa8]
Successors: [0x760]
---
0x8f9 JUMPDEST
0x8fa PUSH1 0x3
0x8fc PUSH2 0x903
0x8ff PUSH2 0x760
0x902 JUMP
---
0x8f9: JUMPDEST 
0x8fa: V754 = 0x3
0x8fc: V755 = 0x903
0x8ff: V756 = 0x760
0x902: JUMP 0x760
---
Entry stack: [V10, 0x58b, V882]
Stack pops: 0
Stack additions: [0x3, 0x903]
Exit stack: [V10, 0x58b, V882, 0x3, 0x903]

================================

Block 0x903
[0x903:0x90c]
---
Predecessors: [0x795]
Successors: [0x90d, 0x90e]
---
0x903 JUMPDEST
0x904 PUSH1 0x2
0x906 DUP2
0x907 GT
0x908 ISZERO
0x909 PUSH2 0x90e
0x90c JUMPI
---
0x903: JUMPDEST 
0x904: V757 = 0x2
0x907: V758 = GT S0 0x2
0x908: V759 = ISZERO V758
0x909: V760 = 0x90e
0x90c: JUMPI 0x90e V759
---
Entry stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]

================================

Block 0x90d
[0x90d:0x90d]
---
Predecessors: [0x903]
Successors: []
---
0x90d INVALID
---
0x90d: INVALID 
---
Entry stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]

================================

Block 0x90e
[0x90e:0x916]
---
Predecessors: [0x903]
Successors: [0x917, 0x918]
---
0x90e JUMPDEST
0x90f PUSH1 0x3
0x911 DUP2
0x912 LT
0x913 PUSH2 0x918
0x916 JUMPI
---
0x90e: JUMPDEST 
0x90f: V761 = 0x3
0x912: V762 = LT S0 0x3
0x913: V763 = 0x918
0x916: JUMPI 0x918 V762
---
Entry stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fd, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x58b}, S2, S1, S0]

================================

Block 0x917
[0x917:0x917]
---
Predecessors: [0x90e]
Successors: []
---
0x917 INVALID
---
0x917: INVALID 
---
Entry stack: [V10, 0x3fd, S4, {0x0, 0x58b}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fd, S4, {0x0, 0x58b}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x918
[0x918:0x91b]
---
Predecessors: [0x90e]
Successors: [0x91c]
---
0x918 JUMPDEST
0x919 ADD
0x91a PUSH1 0x0
---
0x918: JUMPDEST 
0x919: V764 = ADD {0x0, 0x1, 0x2} {0x1, 0x3}
0x91a: V765 = 0x0
---
Entry stack: [V10, 0x3fd, S4, {0x0, 0x58b}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: [V764, 0x0]
Exit stack: [V10, 0x3fd, S4, {0x0, 0x58b}, S2, V764, 0x0]

================================

Block 0x91c
[0x91c:0x95a]
---
Predecessors: [0x918]
Successors: [0x95b, 0x9a1]
---
0x91c JUMPDEST
0x91d POP
0x91e DUP1
0x91f SLOAD
0x920 PUSH1 0x40
0x922 DUP1
0x923 MLOAD
0x924 PUSH1 0x20
0x926 PUSH1 0x2
0x928 PUSH1 0x1
0x92a DUP6
0x92b AND
0x92c ISZERO
0x92d PUSH2 0x100
0x930 MUL
0x931 PUSH1 0x0
0x933 NOT
0x934 ADD
0x935 SWAP1
0x936 SWAP5
0x937 AND
0x938 SWAP4
0x939 SWAP1
0x93a SWAP4
0x93b DIV
0x93c PUSH1 0x1f
0x93e DUP2
0x93f ADD
0x940 DUP5
0x941 SWAP1
0x942 DIV
0x943 DUP5
0x944 MUL
0x945 DUP3
0x946 ADD
0x947 DUP5
0x948 ADD
0x949 SWAP1
0x94a SWAP3
0x94b MSTORE
0x94c DUP2
0x94d DUP2
0x94e MSTORE
0x94f SWAP3
0x950 SWAP2
0x951 DUP4
0x952 ADD
0x953 DUP3
0x954 DUP3
0x955 DUP1
0x956 ISZERO
0x957 PUSH2 0x9a1
0x95a JUMPI
---
0x91c: JUMPDEST 
0x91f: V766 = S[V764]
0x920: V767 = 0x40
0x923: V768 = M[0x40]
0x924: V769 = 0x20
0x926: V770 = 0x2
0x928: V771 = 0x1
0x92b: V772 = AND V766 0x1
0x92c: V773 = ISZERO V772
0x92d: V774 = 0x100
0x930: V775 = MUL 0x100 V773
0x931: V776 = 0x0
0x933: V777 = NOT 0x0
0x934: V778 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V775
0x937: V779 = AND V766 V778
0x93b: V780 = DIV V779 0x2
0x93c: V781 = 0x1f
0x93f: V782 = ADD V780 0x1f
0x942: V783 = DIV V782 0x20
0x944: V784 = MUL 0x20 V783
0x946: V785 = ADD V768 V784
0x948: V786 = ADD 0x20 V785
0x94b: M[0x40] = V786
0x94e: M[V768] = V780
0x952: V787 = ADD V768 0x20
0x956: V788 = ISZERO V780
0x957: V789 = 0x9a1
0x95a: JUMPI 0x9a1 V788
---
Entry stack: [V10, 0x3fd, S4, {0x0, 0x58b}, S2, V764, 0x0]
Stack pops: 2
Stack additions: [V768, S1, V780, V787, S1, V780]
Exit stack: [V10, 0x3fd, S4, {0x0, 0x58b}, S2, V768, V764, V780, V787, V764, V780]

================================

Block 0x95b
[0x95b:0x962]
---
Predecessors: [0x91c]
Successors: [0x963, 0x976]
---
0x95b DUP1
0x95c PUSH1 0x1f
0x95e LT
0x95f PUSH2 0x976
0x962 JUMPI
---
0x95c: V790 = 0x1f
0x95e: V791 = LT 0x1f V780
0x95f: V792 = 0x976
0x962: JUMPI 0x976 V791
---
Entry stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, V768, V764, V780, V787, V764, V780]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, V768, V764, V780, V787, V764, V780]

================================

Block 0x963
[0x963:0x975]
---
Predecessors: [0x95b]
Successors: [0x9a1]
---
0x963 PUSH2 0x100
0x966 DUP1
0x967 DUP4
0x968 SLOAD
0x969 DIV
0x96a MUL
0x96b DUP4
0x96c MSTORE
0x96d SWAP2
0x96e PUSH1 0x20
0x970 ADD
0x971 SWAP2
0x972 PUSH2 0x9a1
0x975 JUMP
---
0x963: V793 = 0x100
0x968: V794 = S[S1]
0x969: V795 = DIV V794 0x100
0x96a: V796 = MUL V795 0x100
0x96c: M[V787] = V796
0x96e: V797 = 0x20
0x970: V798 = ADD 0x20 V787
0x972: V799 = 0x9a1
0x975: JUMP 0x9a1
---
Entry stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, V768, S4, V780, V787, S1, V780]
Stack pops: 3
Stack additions: [V798, S1, S0]
Exit stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, V768, S4, V780, V798, S1, V780]

================================

Block 0x976
[0x976:0x983]
---
Predecessors: [0x95b]
Successors: [0x984]
---
0x976 JUMPDEST
0x977 DUP3
0x978 ADD
0x979 SWAP2
0x97a SWAP1
0x97b PUSH1 0x0
0x97d MSTORE
0x97e PUSH1 0x20
0x980 PUSH1 0x0
0x982 SHA3
0x983 SWAP1
---
0x976: JUMPDEST 
0x978: V800 = ADD V787 V780
0x97b: V801 = 0x0
0x97d: M[0x0] = S1
0x97e: V802 = 0x20
0x980: V803 = 0x0
0x982: V804 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, V768, S4, V780, V787, S1, V780]
Stack pops: 3
Stack additions: [V800, V804, S2]
Exit stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, V768, S4, V780, V800, V804, V787]

================================

Block 0x984
[0x984:0x997]
---
Predecessors: [0x976, 0x984]
Successors: [0x984, 0x998]
---
0x984 JUMPDEST
0x985 DUP2
0x986 SLOAD
0x987 DUP2
0x988 MSTORE
0x989 SWAP1
0x98a PUSH1 0x1
0x98c ADD
0x98d SWAP1
0x98e PUSH1 0x20
0x990 ADD
0x991 DUP1
0x992 DUP4
0x993 GT
0x994 PUSH2 0x984
0x997 JUMPI
---
0x984: JUMPDEST 
0x986: V805 = S[S1]
0x988: M[S0] = V805
0x98a: V806 = 0x1
0x98c: V807 = ADD 0x1 S1
0x98e: V808 = 0x20
0x990: V809 = ADD 0x20 S0
0x993: V810 = GT V800 V809
0x994: V811 = 0x984
0x997: JUMPI 0x984 V810
---
Entry stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, S5, S4, S3, V800, S1, S0]
Stack pops: 3
Stack additions: [S2, V807, V809]
Exit stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, S5, S4, S3, V800, V807, V809]

================================

Block 0x998
[0x998:0x9a0]
---
Predecessors: [0x984]
Successors: [0x9a1]
---
0x998 DUP3
0x999 SWAP1
0x99a SUB
0x99b PUSH1 0x1f
0x99d AND
0x99e DUP3
0x99f ADD
0x9a0 SWAP2
---
0x99a: V812 = SUB V809 V800
0x99b: V813 = 0x1f
0x99d: V814 = AND 0x1f V812
0x99f: V815 = ADD V800 V814
---
Entry stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, S5, S4, S3, V800, V807, V809]
Stack pops: 3
Stack additions: [V815, S1, S2]
Exit stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, S5, S4, S3, V815, V807, V800]

================================

Block 0x9a1
[0x9a1:0x9a8]
---
Predecessors: [0x91c, 0x963, 0x998]
Successors: [0x9a9]
---
0x9a1 JUMPDEST
0x9a2 POP
0x9a3 POP
0x9a4 POP
0x9a5 POP
0x9a6 POP
0x9a7 SWAP1
0x9a8 POP
---
0x9a1: JUMPDEST 
---
Entry stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V10, 0x3fd, S8, {0x0, 0x58b}, S5]

================================

Block 0x9a9
[0x9a9:0x9ab]
---
Predecessors: [0x9a1]
Successors: [0x218, 0x58b]
---
0x9a9 JUMPDEST
0x9aa SWAP1
0x9ab JUMP
---
0x9a9: JUMPDEST 
0x9ab: JUMP {0x0, 0x58b}
---
Entry stack: [V10, 0x3fd, S2, {0x0, 0x58b}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x3fd, S2, S0]

================================

Block 0x9ac
[0x9ac:0x9bd]
---
Predecessors: [0x613]
Successors: [0x9be, 0x9da]
---
0x9ac JUMPDEST
0x9ad PUSH1 0x1
0x9af SLOAD
0x9b0 PUSH1 0x0
0x9b2 SWAP1
0x9b3 DUP2
0x9b4 SWAP1
0x9b5 TIMESTAMP
0x9b6 DUP2
0x9b7 SUB
0x9b8 SWAP1
0x9b9 ISZERO
0x9ba PUSH2 0x9da
0x9bd JUMPI
---
0x9ac: JUMPDEST 
0x9ad: V816 = 0x1
0x9af: V817 = S[0x1]
0x9b0: V818 = 0x0
0x9b5: V819 = TIMESTAMP
0x9b7: V820 = SUB V817 V819
0x9b9: V821 = ISZERO V817
0x9ba: V822 = 0x9da
0x9bd: JUMPI 0x9da V821
---
Entry stack: [V10, 0x61b]
Stack pops: 0
Stack additions: [0x0, 0x0, V820]
Exit stack: [V10, 0x61b, 0x0, 0x0, V820]

================================

Block 0x9be
[0x9be:0x9c1]
---
Predecessors: [0x9ac]
Successors: [0x9c2]
---
0x9be PUSH2 0xe10
0x9c1 DUP2
---
0x9be: V823 = 0xe10
---
Entry stack: [V10, 0x61b, 0x0, 0x0, V820]
Stack pops: 1
Stack additions: [S0, 0xe10, S0]
Exit stack: [V10, 0x61b, 0x0, 0x0, V820, 0xe10, V820]

================================

Block 0x9c2
[0x9c2:0x9c9]
---
Predecessors: [0x9be]
Successors: [0x9ca]
---
0x9c2 JUMPDEST
0x9c3 DIV
0x9c4 PUSH1 0x3c
0x9c6 PUSH2 0xe10
0x9c9 DUP4
---
0x9c2: JUMPDEST 
0x9c3: V824 = DIV V820 0xe10
0x9c4: V825 = 0x3c
0x9c6: V826 = 0xe10
---
Entry stack: [V10, 0x61b, 0x0, 0x0, V820, 0xe10, V820]
Stack pops: 3
Stack additions: [S2, V824, 0x3c, 0xe10, S2]
Exit stack: [V10, 0x61b, 0x0, 0x0, V820, V824, 0x3c, 0xe10, V820]

================================

Block 0x9ca
[0x9ca:0x9d2]
---
Predecessors: [0x9c2]
Successors: [0x9d3, 0x9d4]
---
0x9ca JUMPDEST
0x9cb MOD
0x9cc DUP2
0x9cd ISZERO
0x9ce ISZERO
0x9cf PUSH2 0x9d4
0x9d2 JUMPI
---
0x9ca: JUMPDEST 
0x9cb: V827 = MOD V820 0xe10
0x9cd: V828 = ISZERO 0x3c
0x9ce: V829 = ISZERO 0x0
0x9cf: V830 = 0x9d4
0x9d2: JUMPI 0x9d4 0x1
---
Entry stack: [V10, 0x61b, 0x0, 0x0, V820, V824, 0x3c, 0xe10, V820]
Stack pops: 3
Stack additions: [S2, V827]
Exit stack: [V10, 0x61b, 0x0, 0x0, V820, V824, 0x3c, V827]

================================

Block 0x9d3
[0x9d3:0x9d3]
---
Predecessors: [0x9ca]
Successors: []
---
0x9d3 INVALID
---
0x9d3: INVALID 
---
Entry stack: [V10, 0x61b, 0x0, 0x0, V820, V824, 0x3c, V827]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61b, 0x0, 0x0, V820, V824, 0x3c, V827]

================================

Block 0x9d4
[0x9d4:0x9d9]
---
Predecessors: [0x9ca]
Successors: [0x9de]
---
0x9d4 JUMPDEST
0x9d5 DIV
0x9d6 PUSH2 0x9de
0x9d9 JUMP
---
0x9d4: JUMPDEST 
0x9d5: V831 = DIV V827 0x3c
0x9d6: V832 = 0x9de
0x9d9: JUMP 0x9de
---
Entry stack: [V10, 0x61b, 0x0, 0x0, V820, V824, 0x3c, V827]
Stack pops: 2
Stack additions: [V831]
Exit stack: [V10, 0x61b, 0x0, 0x0, V820, V824, V831]

================================

Block 0x9da
[0x9da:0x9dd]
---
Predecessors: [0x9ac]
Successors: [0x9de]
---
0x9da JUMPDEST
0x9db PUSH1 0x0
0x9dd DUP1
---
0x9da: JUMPDEST 
0x9db: V833 = 0x0
---
Entry stack: [V10, 0x61b, 0x0, 0x0, V820]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x61b, 0x0, 0x0, V820, 0x0, 0x0]

================================

Block 0x9de
[0x9de:0x9e2]
---
Predecessors: [0x9d4, 0x9da]
Successors: [0x9e3]
---
0x9de JUMPDEST
0x9df SWAP3
0x9e0 POP
0x9e1 SWAP3
0x9e2 POP
---
0x9de: JUMPDEST 
---
Entry stack: [V10, 0x61b, 0x0, 0x0, V820, S1, S0]
Stack pops: 5
Stack additions: [S1, S0, S2]
Exit stack: [V10, 0x61b, S1, S0, V820]

================================

Block 0x9e3
[0x9e3:0x9e7]
---
Predecessors: [0x9de]
Successors: [0x61b]
---
0x9e3 JUMPDEST
0x9e4 POP
0x9e5 SWAP1
0x9e6 SWAP2
0x9e7 JUMP
---
0x9e3: JUMPDEST 
0x9e7: JUMP 0x61b
---
Entry stack: [V10, 0x61b, S2, S1, V820]
Stack pops: 4
Stack additions: [S2, S1]
Exit stack: [V10, S2, S1]

================================

Block 0x9e8
[0x9e8:0x9ed]
---
Predecessors: [0x643]
Successors: [0x41b]
---
0x9e8 JUMPDEST
0x9e9 PUSH1 0x0
0x9eb SLOAD
0x9ec DUP2
0x9ed JUMP
---
0x9e8: JUMPDEST 
0x9e9: V834 = 0x0
0x9eb: V835 = S[0x0]
0x9ed: JUMP 0x41b
---
Entry stack: [V10, 0x41b]
Stack pops: 1
Stack additions: [S0, V835]
Exit stack: [V10, 0x41b, V835]

================================

Block 0x9ee
[0x9ee:0x9f1]
---
Predecessors: [0x665]
Successors: [0x9f2]
---
0x9ee JUMPDEST
0x9ef PUSH1 0x8
0x9f1 SLOAD
---
0x9ee: JUMPDEST 
0x9ef: V836 = 0x8
0x9f1: V837 = S[0x8]
---
Entry stack: [V10, 0x41b]
Stack pops: 0
Stack additions: [V837]
Exit stack: [V10, 0x41b, V837]

================================

Block 0x9f2
[0x9f2:0x9f4]
---
Predecessors: [0x9ee]
Successors: [0x41b]
---
0x9f2 JUMPDEST
0x9f3 SWAP1
0x9f4 JUMP
---
0x9f2: JUMPDEST 
0x9f4: JUMP 0x41b
---
Entry stack: [V10, 0x41b, V837]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V837]

================================

Block 0x9f5
[0x9f5:0xa01]
---
Predecessors: [0x687]
Successors: [0xa02, 0xa03]
---
0x9f5 JUMPDEST
0x9f6 PUSH1 0x8
0x9f8 DUP1
0x9f9 SLOAD
0x9fa DUP3
0x9fb SWAP1
0x9fc DUP2
0x9fd LT
0x9fe PUSH2 0xa03
0xa01 JUMPI
---
0x9f5: JUMPDEST 
0x9f6: V838 = 0x8
0x9f9: V839 = S[0x8]
0x9fd: V840 = LT V543 V839
0x9fe: V841 = 0xa03
0xa01: JUMPI 0xa03 V840
---
Entry stack: [V10, 0x4d0, V543]
Stack pops: 1
Stack additions: [S0, 0x8, S0]
Exit stack: [V10, 0x4d0, V543, 0x8, V543]

================================

Block 0xa02
[0xa02:0xa02]
---
Predecessors: [0x9f5]
Successors: []
---
0xa02 INVALID
---
0xa02: INVALID 
---
Entry stack: [V10, 0x4d0, V543, 0x8, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4d0, V543, 0x8, V543]

================================

Block 0xa03
[0xa03:0xa10]
---
Predecessors: [0x9f5]
Successors: [0xa11]
---
0xa03 JUMPDEST
0xa04 SWAP1
0xa05 PUSH1 0x0
0xa07 MSTORE
0xa08 PUSH1 0x20
0xa0a PUSH1 0x0
0xa0c SHA3
0xa0d SWAP1
0xa0e ADD
0xa0f PUSH1 0x0
---
0xa03: JUMPDEST 
0xa05: V842 = 0x0
0xa07: M[0x0] = 0x8
0xa08: V843 = 0x20
0xa0a: V844 = 0x0
0xa0c: V845 = SHA3 0x0 0x20
0xa0e: V846 = ADD V543 V845
0xa0f: V847 = 0x0
---
Entry stack: [V10, 0x4d0, V543, 0x8, V543]
Stack pops: 2
Stack additions: [V846, 0x0]
Exit stack: [V10, 0x4d0, V543, V846, 0x0]

================================

Block 0xa11
[0xa11:0xa26]
---
Predecessors: [0xa03]
Successors: [0x4d0]
---
0xa11 JUMPDEST
0xa12 SWAP2
0xa13 POP
0xa14 SLOAD
0xa15 SWAP1
0xa16 PUSH2 0x100
0xa19 EXP
0xa1a SWAP1
0xa1b DIV
0xa1c PUSH1 0x1
0xa1e PUSH1 0xa0
0xa20 PUSH1 0x2
0xa22 EXP
0xa23 SUB
0xa24 AND
0xa25 DUP2
0xa26 JUMP
---
0xa11: JUMPDEST 
0xa14: V848 = S[V846]
0xa16: V849 = 0x100
0xa19: V850 = EXP 0x100 0x0
0xa1b: V851 = DIV V848 0x1
0xa1c: V852 = 0x1
0xa1e: V853 = 0xa0
0xa20: V854 = 0x2
0xa22: V855 = EXP 0x2 0xa0
0xa23: V856 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa24: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff V851
0xa26: JUMP 0x4d0
---
Entry stack: [V10, 0x4d0, V543, V846, 0x0]
Stack pops: 4
Stack additions: [S3, V857]
Exit stack: [V10, 0x4d0, V857]

================================

Block 0xa27
[0xa27:0xa2c]
---
Predecessors: [0x6b6]
Successors: [0x41b]
---
0xa27 JUMPDEST
0xa28 PUSH2 0x2ee0
0xa2b DUP2
0xa2c JUMP
---
0xa27: JUMPDEST 
0xa28: V858 = 0x2ee0
0xa2c: JUMP 0x41b
---
Entry stack: [V10, 0x41b]
Stack pops: 1
Stack additions: [S0, 0x2ee0]
Exit stack: [V10, 0x41b, 0x2ee0]

================================

Block 0xa2d
[0xa2d:0xa63]
---
Predecessors: [0x6d8]
Successors: [0x58b]
---
0xa2d JUMPDEST
0xa2e PUSH1 0x40
0xa30 DUP1
0xa31 MLOAD
0xa32 DUP1
0xa33 DUP3
0xa34 ADD
0xa35 SWAP1
0xa36 SWAP2
0xa37 MSTORE
0xa38 PUSH1 0x5
0xa3a DUP2
0xa3b MSTORE
0xa3c PUSH32 0x302e302e38000000000000000000000000000000000000000000000000000000
0xa5d PUSH1 0x20
0xa5f DUP3
0xa60 ADD
0xa61 MSTORE
0xa62 DUP2
0xa63 JUMP
---
0xa2d: JUMPDEST 
0xa2e: V859 = 0x40
0xa31: V860 = M[0x40]
0xa34: V861 = ADD 0x40 V860
0xa37: M[0x40] = V861
0xa38: V862 = 0x5
0xa3b: M[V860] = 0x5
0xa3c: V863 = 0x302e302e38000000000000000000000000000000000000000000000000000000
0xa5d: V864 = 0x20
0xa60: V865 = ADD V860 0x20
0xa61: M[V865] = 0x302e302e38000000000000000000000000000000000000000000000000000000
0xa63: JUMP 0x58b
---
Entry stack: [V10, 0x58b]
Stack pops: 1
Stack additions: [S0, V860]
Exit stack: [V10, 0x58b, V860]

================================

Block 0xa64
[0xa64:0xa6d]
---
Predecessors: [0x8ad, 0x8b7]
Successors: [0xa6e, 0xa73]
---
0xa64 JUMPDEST
0xa65 PUSH1 0x0
0xa67 DUP2
0xa68 DUP4
0xa69 GT
0xa6a PUSH2 0xa73
0xa6d JUMPI
---
0xa64: JUMPDEST 
0xa65: V866 = 0x0
0xa69: V867 = GT S1 S0
0xa6a: V868 = 0xa73
0xa6d: JUMPI 0xa73 V867
---
Entry stack: [V10, 0x3fd, V426, V428, {0x8b7, 0x8c5}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x3fd, V426, V428, {0x8b7, 0x8c5}, S1, S0, 0x0]

================================

Block 0xa6e
[0xa6e:0xa72]
---
Predecessors: [0xa64]
Successors: [0xa75]
---
0xa6e DUP2
0xa6f PUSH2 0xa75
0xa72 JUMP
---
0xa6f: V869 = 0xa75
0xa72: JUMP 0xa75
---
Entry stack: [V10, 0x3fd, V426, V428, {0x8b7, 0x8c5}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V10, 0x3fd, V426, V428, {0x8b7, 0x8c5}, S2, S1, 0x0, S1]

================================

Block 0xa73
[0xa73:0xa74]
---
Predecessors: [0xa64]
Successors: [0xa75]
---
0xa73 JUMPDEST
0xa74 DUP3
---
0xa73: JUMPDEST 
---
Entry stack: [V10, 0x3fd, V426, V428, {0x8b7, 0x8c5}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V10, 0x3fd, V426, V428, {0x8b7, 0x8c5}, S2, S1, 0x0, S2]

================================

Block 0xa75
[0xa75:0xa77]
---
Predecessors: [0xa6e, 0xa73]
Successors: [0xa78]
---
0xa75 JUMPDEST
0xa76 SWAP1
0xa77 POP
---
0xa75: JUMPDEST 
---
Entry stack: [V10, 0x3fd, V426, V428, {0x8b7, 0x8c5}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x3fd, V426, V428, {0x8b7, 0x8c5}, S3, S2, S0]

================================

Block 0xa78
[0xa78:0xa7d]
---
Predecessors: [0xa75]
Successors: [0x8b7, 0x8c5]
---
0xa78 JUMPDEST
0xa79 SWAP3
0xa7a SWAP2
0xa7b POP
0xa7c POP
0xa7d JUMP
---
0xa78: JUMPDEST 
0xa7d: JUMP {0x8b7, 0x8c5}
---
Entry stack: [V10, 0x3fd, V426, V428, {0x8b7, 0x8c5}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x3fd, V426, V428, S0]

================================

Block 0xa7e
[0xa7e:0xa8b]
---
Predecessors: [0x207]
Successors: [0x3f7, 0xa8c]
---
0xa7e JUMPDEST
0xa7f DUP2
0xa80 SLOAD
0xa81 DUP2
0xa82 DUP4
0xa83 SSTORE
0xa84 DUP2
0xa85 DUP2
0xa86 ISZERO
0xa87 GT
0xa88 PUSH2 0x3f7
0xa8b JUMPI
---
0xa7e: JUMPDEST 
0xa80: V870 = S[0x8]
0xa83: S[0x8] = V160
0xa86: V871 = ISZERO V870
0xa87: V872 = GT V871 V160
0xa88: V873 = 0x3f7
0xa8b: JUMPI 0x3f7 V872
---
Entry stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x8, V158, V160, 0x218, 0x8, V160]
Stack pops: 2
Stack additions: [S1, S0, V870]
Exit stack: [V10, 0x3fd, S13, V113, S11, S10, S9, S8, V113, S6, 0x8, V158, V160, 0x218, 0x8, V160, V870]

================================

Block 0xa8c
[0xa8c:0xaa1]
---
Predecessors: [0xa7e]
Successors: [0xaba]
---
0xa8c PUSH1 0x0
0xa8e DUP4
0xa8f DUP2
0xa90 MSTORE
0xa91 PUSH1 0x20
0xa93 SWAP1
0xa94 SHA3
0xa95 PUSH2 0x3f7
0xa98 SWAP2
0xa99 DUP2
0xa9a ADD
0xa9b SWAP1
0xa9c DUP4
0xa9d ADD
0xa9e PUSH2 0xaba
0xaa1 JUMP
---
0xa8c: V874 = 0x0
0xa90: M[0x0] = 0x8
0xa91: V875 = 0x20
0xa94: V876 = SHA3 0x0 0x20
0xa95: V877 = 0x3f7
0xa9a: V878 = ADD V876 V870
0xa9d: V879 = ADD V160 V876
0xa9e: V880 = 0xaba
0xaa1: JUMP 0xaba
---
Entry stack: [V10, 0x3fd, S14, V113, S12, S11, S10, S9, V113, S7, 0x8, V158, V160, 0x218, 0x8, V160, V870]
Stack pops: 3
Stack additions: [S2, S1, 0x3f7, V878, V879]
Exit stack: [V10, 0x3fd, S14, V113, S12, S11, S10, S9, V113, S7, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f7, V878, V879]

================================

Block 0xaa2
[0xaa2:0xaa2]
---
Predecessors: []
Successors: [0xaa3]
---
0xaa2 JUMPDEST
---
0xaa2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaa3
[0xaa3:0xaa7]
---
Predecessors: [0xaa2]
Successors: []
Has unresolved jump.
---
0xaa3 JUMPDEST
0xaa4 POP
0xaa5 POP
0xaa6 POP
0xaa7 JUMP
---
0xaa3: JUMPDEST 
0xaa7: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xaa8
[0xaa8:0xab9]
---
Predecessors: [0x8f1]
Successors: [0x8f9]
---
0xaa8 JUMPDEST
0xaa9 PUSH1 0x40
0xaab DUP1
0xaac MLOAD
0xaad PUSH1 0x20
0xaaf DUP2
0xab0 ADD
0xab1 SWAP1
0xab2 SWAP2
0xab3 MSTORE
0xab4 PUSH1 0x0
0xab6 DUP2
0xab7 MSTORE
0xab8 SWAP1
0xab9 JUMP
---
0xaa8: JUMPDEST 
0xaa9: V881 = 0x40
0xaac: V882 = M[0x40]
0xaad: V883 = 0x20
0xab0: V884 = ADD V882 0x20
0xab3: M[0x40] = V884
0xab4: V885 = 0x0
0xab7: M[V882] = 0x0
0xab9: JUMP 0x8f9
---
Entry stack: [V10, 0x58b, 0x8f9]
Stack pops: 1
Stack additions: [V882]
Exit stack: [V10, 0x58b, V882]

================================

Block 0xaba
[0xaba:0xabf]
---
Predecessors: [0xa8c]
Successors: [0xac0]
---
0xaba JUMPDEST
0xabb PUSH2 0x793
0xabe SWAP2
0xabf SWAP1
---
0xaba: JUMPDEST 
0xabb: V886 = 0x793
---
Entry stack: [V10, 0x3fd, S16, V113, S14, S13, S12, S11, V113, S9, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f7, V878, V879]
Stack pops: 2
Stack additions: [0x793, S1, S0]
Exit stack: [V10, 0x3fd, S16, V113, S14, S13, S12, S11, V113, S9, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f7, 0x793, V878, V879]

================================

Block 0xac0
[0xac0:0xac8]
---
Predecessors: [0xaba, 0xac9]
Successors: [0xac9, 0xad4]
---
0xac0 JUMPDEST
0xac1 DUP1
0xac2 DUP3
0xac3 GT
0xac4 ISZERO
0xac5 PUSH2 0xad4
0xac8 JUMPI
---
0xac0: JUMPDEST 
0xac3: V887 = GT V878 S0
0xac4: V888 = ISZERO V887
0xac5: V889 = 0xad4
0xac8: JUMPI 0xad4 V888
---
Entry stack: [V10, 0x3fd, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f7, 0x793, V878, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x3fd, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f7, 0x793, V878, S0]

================================

Block 0xac9
[0xac9:0xad3]
---
Predecessors: [0xac0]
Successors: [0xac0]
---
0xac9 PUSH1 0x0
0xacb DUP2
0xacc SSTORE
0xacd PUSH1 0x1
0xacf ADD
0xad0 PUSH2 0xac0
0xad3 JUMP
---
0xac9: V890 = 0x0
0xacc: S[S0] = 0x0
0xacd: V891 = 0x1
0xacf: V892 = ADD 0x1 S0
0xad0: V893 = 0xac0
0xad3: JUMP 0xac0
---
Entry stack: [V10, 0x3fd, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f7, 0x793, V878, S0]
Stack pops: 1
Stack additions: [V892]
Exit stack: [V10, 0x3fd, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f7, 0x793, V878, V892]

================================

Block 0xad4
[0xad4:0xad7]
---
Predecessors: [0xac0]
Successors: [0x793]
---
0xad4 JUMPDEST
0xad5 POP
0xad6 SWAP1
0xad7 JUMP
---
0xad4: JUMPDEST 
0xad7: JUMP 0x793
---
Entry stack: [V10, 0x3fd, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f7, 0x793, V878, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x3fd, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f7, V878]

================================

Block 0xad8
[0xad8:0xb0d]
---
Predecessors: []
Successors: []
---
0xad8 JUMPDEST
0xad9 SWAP1
0xada JUMP
0xadb STOP
0xadc LOG1
0xadd PUSH6 0x627a7a723058
0xae4 SHA3
0xae5 DUP5
0xae6 DIV
0xae7 MISSING 0xf6
0xae8 DUP2
0xae9 MISSING 0x28
0xaea MISSING 0xd4
0xaeb BALANCE
0xaec MISSING 0xf
0xaed MISSING 0xe1
0xaee SWAP2
0xaef CALL
0xaf0 MISSING 0xd5
0xaf1 SDIV
0xaf2 MISSING 0xc7
0xaf3 LOG2
0xaf4 DUP13
0xaf5 MISSING 0x25
0xaf6 MISSING 0xec
0xaf7 SLOAD
0xaf8 MISSING 0xbf
0xaf9 DUP10
0xafa SUB
0xafb MISSING 0x4a
0xafc LOG4
0xafd MISSING 0xa7
0xafe MISSING 0xfc
0xaff PUSH14 0x26bd6fa60a0029
---
0xad8: JUMPDEST 
0xada: JUMP S1
0xadb: STOP 
0xadc: LOG S0 S1 S2
0xadd: V894 = 0x627a7a723058
0xae4: V895 = SHA3 0x627a7a723058 S3
0xae6: V896 = DIV S7 V895
0xae7: MISSING 0xf6
0xae9: MISSING 0x28
0xaea: MISSING 0xd4
0xaeb: V897 = BALANCE S0
0xaec: MISSING 0xf
0xaed: MISSING 0xe1
0xaef: V898 = CALL S2 S1 S0 S3 S4 S5 S6
0xaf0: MISSING 0xd5
0xaf1: V899 = SDIV S0 S1
0xaf2: MISSING 0xc7
0xaf3: LOG S0 S1 S2 S3
0xaf5: MISSING 0x25
0xaf6: MISSING 0xec
0xaf7: V900 = S[S0]
0xaf8: MISSING 0xbf
0xafa: V901 = SUB S9 S0
0xafb: MISSING 0x4a
0xafc: LOG S0 S1 S2 S3 S4 S5
0xafd: MISSING 0xa7
0xafe: MISSING 0xfc
0xaff: V902 = 0x26bd6fa60a0029
---
Entry stack: []
Stack pops: 21328
Stack additions: [0x26bd6fa60a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xe5fc5f
Entry block: 0x3ff
Exit block: 0x41b
Body: 0x3ff, 0x406, 0x407, 0x41b, 0x7fb

Function 1:
Public function signature: 0x13af4035
Entry block: 0x42d
Exit block: 0x3fd
Body: 0x3fd, 0x42d, 0x434, 0x435, 0x80d, 0x824, 0x829, 0x852, 0x853

Function 2:
Public function signature: 0x2d2fe9d4
Entry block: 0x44b
Exit block: 0x45b
Body: 0x44b, 0x452, 0x453, 0x45b, 0x856

Function 3:
Public function signature: 0x6113611f
Entry block: 0x472
Exit block: 0x45b
Body: 0x45b, 0x472, 0x479, 0x47a, 0x868

Function 4:
Public function signature: 0x64e08644
Entry block: 0x499
Exit block: 0x45b
Body: 0x45b, 0x499, 0x4a0, 0x4a1, 0x872

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x4c0
Exit block: 0x4d0
Body: 0x4c0, 0x4c7, 0x4c8, 0x4d0, 0x882

Function 6:
Public function signature: 0x8fe92aed
Entry block: 0x4ec
Exit block: 0x4f3
Body: 0x41b, 0x4ec, 0x4f3, 0x4f4

Function 7:
Public function signature: 0x90fe5609
Entry block: 0x51a
Exit block: 0x3fd
Body: 0x3fd, 0x51a, 0x521, 0x522, 0x891, 0x8a8, 0x8ad, 0x8b7

Function 8:
Public function signature: 0xa201d102
Entry block: 0x532
Exit block: 0x41b
Body: 0x41b, 0x532, 0x539, 0x53a, 0x8d7

Function 9:
Public function signature: 0xa4659ba2
Entry block: 0x554
Exit block: 0x45b
Body: 0x45b, 0x554, 0x55b, 0x55c, 0x8dd

Function 10:
Public function signature: 0xc19d93fb
Entry block: 0x57b
Exit block: 0x3fd
Body: 0x218, 0x226, 0x250, 0x303, 0x30c, 0x312, 0x314, 0x33f, 0x348, 0x349, 0x359, 0x394, 0x3d9, 0x3f7, 0x3f8, 0x3fd, 0x57b, 0x582, 0x583, 0x58b, 0x5b1, 0x5bf, 0x5d1, 0x5e4, 0x5fd, 0x8f1, 0x8f9, 0x903, 0x90d, 0x90e, 0x917, 0x918, 0x91c, 0x95b, 0x963, 0x976, 0x984, 0x998, 0x9a1, 0x9a9, 0xaa8

Function 11:
Public function signature: 0xc2a15e7e
Entry block: 0x60b
Exit block: 0x61b
Body: 0x60b, 0x612, 0x613, 0x61b, 0x9ac, 0x9be, 0x9c2, 0x9ca, 0x9d3, 0x9d4, 0x9da, 0x9de, 0x9e3

Function 12:
Public function signature: 0xc8dda301
Entry block: 0x63b
Exit block: 0x41b
Body: 0x41b, 0x63b, 0x642, 0x643, 0x9e8

Function 13:
Public function signature: 0xcfd94b01
Entry block: 0x65d
Exit block: 0x41b
Body: 0x41b, 0x65d, 0x664, 0x665, 0x9ee, 0x9f2

Function 14:
Public function signature: 0xda58c7d9
Entry block: 0x67f
Exit block: 0x4d0
Body: 0x4d0, 0x67f, 0x686, 0x687, 0x9f5, 0xa02, 0xa03, 0xa11

Function 15:
Public function signature: 0xfc34b908
Entry block: 0x6ae
Exit block: 0x41b
Body: 0x41b, 0x6ae, 0x6b5, 0x6b6, 0xa27

Function 16:
Public function signature: 0xffa1ad74
Entry block: 0x6d0
Exit block: 0x5fd
Body: 0x58b, 0x5b1, 0x5bf, 0x5d1, 0x5e4, 0x5fd, 0x6d0, 0x6d7, 0x6d8, 0xa2d

Function 17:
Public fallback function
Entry block: 0xed
Exit block: 0x5fd
Body: 0xed, 0xf1, 0xf8, 0x100, 0x10a, 0x10b, 0x111, 0x116, 0x183, 0x184, 0x191, 0x192, 0x1a4, 0x1a5, 0x1b6, 0x1dc, 0x1e2, 0x1e7, 0x207, 0x218, 0x226, 0x250, 0x273, 0x27f, 0x288, 0x289, 0x299, 0x2d1, 0x303, 0x30c, 0x312, 0x314, 0x33f, 0x348, 0x349, 0x359, 0x394, 0x3d9, 0x3f7, 0x3f8, 0x3fd, 0x58b, 0x5b1, 0x5bf, 0x5d1, 0x5e4, 0x5fd, 0xa7e, 0xa8c, 0xaba, 0xac0, 0xac9, 0xad4

Function 18:
Private function
Entry block: 0x760
Exit block: 0x795
Body: 0x760, 0x76b, 0x771, 0x777, 0x77e, 0x788, 0x78f, 0x793, 0x794, 0x795

Function 19:
Private function
Entry block: 0xa64
Exit block: 0xa78
Body: 0xa64, 0xa6e, 0xa73, 0xa75, 0xa78

Function 20:
Private function
Entry block: 0x798
Exit block: 0x7f5
Body: 0x798, 0x7c1, 0x7c9, 0x7d9, 0x7e1, 0x7ef, 0x7f3, 0x7f4, 0x7f5

