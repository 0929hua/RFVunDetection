Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x1c7]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1cb3b20
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x1c7
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1cb3b20
0x3b: V13 = EQ V11 0x1cb3b20
0x3c: V14 = 0x1c7
0x3f: JUMPI 0x1c7 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x1de]
---
0x40 DUP1
0x41 PUSH4 0x29dcb0cf
0x46 EQ
0x47 PUSH2 0x1de
0x4a JUMPI
---
0x41: V15 = 0x29dcb0cf
0x46: V16 = EQ 0x29dcb0cf V11
0x47: V17 = 0x1de
0x4a: JUMPI 0x1de V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x205]
---
0x4b DUP1
0x4c PUSH4 0x38af3eed
0x51 EQ
0x52 PUSH2 0x205
0x55 JUMPI
---
0x4c: V18 = 0x38af3eed
0x51: V19 = EQ 0x38af3eed V11
0x52: V20 = 0x205
0x55: JUMPI 0x205 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x236]
---
0x56 DUP1
0x57 PUSH4 0x6e66f6e9
0x5c EQ
0x5d PUSH2 0x236
0x60 JUMPI
---
0x57: V21 = 0x6e66f6e9
0x5c: V22 = EQ 0x6e66f6e9 V11
0x5d: V23 = 0x236
0x60: JUMPI 0x236 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x24b]
---
0x61 DUP1
0x62 PUSH4 0x70a08231
0x67 EQ
0x68 PUSH2 0x24b
0x6b JUMPI
---
0x62: V24 = 0x70a08231
0x67: V25 = EQ 0x70a08231 V11
0x68: V26 = 0x24b
0x6b: JUMPI 0x24b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x26c]
---
0x6c DUP1
0x6d PUSH4 0x7a3a0e84
0x72 EQ
0x73 PUSH2 0x26c
0x76 JUMPI
---
0x6d: V27 = 0x7a3a0e84
0x72: V28 = EQ 0x7a3a0e84 V11
0x73: V29 = 0x26c
0x76: JUMPI 0x26c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x281]
---
0x77 DUP1
0x78 PUSH4 0x7b3e5e7b
0x7d EQ
0x7e PUSH2 0x281
0x81 JUMPI
---
0x78: V30 = 0x7b3e5e7b
0x7d: V31 = EQ 0x7b3e5e7b V11
0x7e: V32 = 0x281
0x81: JUMPI 0x281 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x296]
---
0x82 DUP1
0x83 PUSH4 0xa035b1fe
0x88 EQ
0x89 PUSH2 0x296
0x8c JUMPI
---
0x83: V33 = 0xa035b1fe
0x88: V34 = EQ 0xa035b1fe V11
0x89: V35 = 0x296
0x8c: JUMPI 0x296 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x2ab]
---
0x8d DUP1
0x8e PUSH4 0xfd6b7ef8
0x93 EQ
0x94 PUSH2 0x2ab
0x97 JUMPI
---
0x8e: V36 = 0xfd6b7ef8
0x93: V37 = EQ 0xfd6b7ef8 V11
0x94: V38 = 0x2ab
0x97: JUMPI 0x2ab V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xab]
---
Predecessors: [0x0, 0x8d]
Successors: [0xac, 0xb0]
---
0x98 JUMPDEST
0x99 PUSH1 0x7
0x9b SLOAD
0x9c PUSH1 0x0
0x9e SWAP1
0x9f PUSH2 0x100
0xa2 SWAP1
0xa3 DIV
0xa4 PUSH1 0xff
0xa6 AND
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0x98: JUMPDEST 
0x99: V39 = 0x7
0x9b: V40 = S[0x7]
0x9c: V41 = 0x0
0x9f: V42 = 0x100
0xa3: V43 = DIV V40 0x100
0xa4: V44 = 0xff
0xa6: V45 = AND 0xff V43
0xa7: V46 = ISZERO V45
0xa8: V47 = 0xb0
0xab: JUMPI 0xb0 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0x98]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V48 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xb0
[0xb0:0xf4]
---
Predecessors: [0x98]
Successors: [0xf5, 0xf6]
---
0xb0 JUMPDEST
0xb1 POP
0xb2 PUSH1 0x1
0xb4 PUSH1 0xa0
0xb6 PUSH1 0x2
0xb8 EXP
0xb9 SUB
0xba CALLER
0xbb DUP2
0xbc DUP2
0xbd AND
0xbe PUSH1 0x0
0xc0 SWAP1
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x6
0xc5 PUSH1 0x20
0xc7 MSTORE
0xc8 PUSH1 0x40
0xca SWAP1
0xcb SHA3
0xcc DUP1
0xcd SLOAD
0xce CALLVALUE
0xcf SWAP1
0xd0 DUP2
0xd1 ADD
0xd2 SWAP1
0xd3 SWAP2
0xd4 SSTORE
0xd5 PUSH1 0x2
0xd7 DUP1
0xd8 SLOAD
0xd9 DUP3
0xda ADD
0xdb SWAP1
0xdc SSTORE
0xdd PUSH1 0x5
0xdf SLOAD
0xe0 PUSH1 0x4
0xe2 SLOAD
0xe3 SWAP2
0xe4 SWAP4
0xe5 AND
0xe6 SWAP2
0xe7 PUSH4 0xa9059cbb
0xec SWAP2
0xed DUP5
0xee DUP2
0xef ISZERO
0xf0 ISZERO
0xf1 PUSH2 0xf6
0xf4 JUMPI
---
0xb0: JUMPDEST 
0xb2: V49 = 0x1
0xb4: V50 = 0xa0
0xb6: V51 = 0x2
0xb8: V52 = EXP 0x2 0xa0
0xb9: V53 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba: V54 = CALLER
0xbd: V55 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V56 = 0x0
0xc2: M[0x0] = V55
0xc3: V57 = 0x6
0xc5: V58 = 0x20
0xc7: M[0x20] = 0x6
0xc8: V59 = 0x40
0xcb: V60 = SHA3 0x0 0x40
0xcd: V61 = S[V60]
0xce: V62 = CALLVALUE
0xd1: V63 = ADD V62 V61
0xd4: S[V60] = V63
0xd5: V64 = 0x2
0xd8: V65 = S[0x2]
0xda: V66 = ADD V62 V65
0xdc: S[0x2] = V66
0xdd: V67 = 0x5
0xdf: V68 = S[0x5]
0xe0: V69 = 0x4
0xe2: V70 = S[0x4]
0xe5: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xe7: V72 = 0xa9059cbb
0xef: V73 = ISZERO V70
0xf0: V74 = ISZERO V73
0xf1: V75 = 0xf6
0xf4: JUMPI 0xf6 V74
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V62, V71, 0xa9059cbb, V54, V70, V62]
Exit stack: [V11, V62, V71, 0xa9059cbb, V54, V70, V62]

================================

Block 0xf5
[0xf5:0xf5]
---
Predecessors: [0xb0]
Successors: []
---
0xf5 INVALID
---
0xf5: INVALID 
---
Entry stack: [V11, V62, V71, 0xa9059cbb, V54, V70, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V62, V71, 0xa9059cbb, V54, V70, V62]

================================

Block 0xf6
[0xf6:0x15d]
---
Predecessors: [0xb0]
Successors: [0x15e, 0x162]
---
0xf6 JUMPDEST
0xf7 DIV
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP4
0xfc PUSH4 0xffffffff
0x101 AND
0x102 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x120 MUL
0x121 DUP2
0x122 MSTORE
0x123 PUSH1 0x4
0x125 ADD
0x126 DUP1
0x127 DUP4
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 AND
0x131 PUSH1 0x1
0x133 PUSH1 0xa0
0x135 PUSH1 0x2
0x137 EXP
0x138 SUB
0x139 AND
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f DUP3
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP3
0x146 POP
0x147 POP
0x148 POP
0x149 PUSH1 0x0
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f DUP4
0x150 SUB
0x151 DUP2
0x152 PUSH1 0x0
0x154 DUP8
0x155 DUP1
0x156 EXTCODESIZE
0x157 ISZERO
0x158 DUP1
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0xf6: JUMPDEST 
0xf7: V76 = DIV V62 V70
0xf8: V77 = 0x40
0xfa: V78 = M[0x40]
0xfc: V79 = 0xffffffff
0x101: V80 = AND 0xffffffff 0xa9059cbb
0x102: V81 = 0x100000000000000000000000000000000000000000000000000000000
0x120: V82 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x122: M[V78] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x123: V83 = 0x4
0x125: V84 = ADD 0x4 V78
0x128: V85 = 0x1
0x12a: V86 = 0xa0
0x12c: V87 = 0x2
0x12e: V88 = EXP 0x2 0xa0
0x12f: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x130: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x131: V91 = 0x1
0x133: V92 = 0xa0
0x135: V93 = 0x2
0x137: V94 = EXP 0x2 0xa0
0x138: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x13b: M[V84] = V96
0x13c: V97 = 0x20
0x13e: V98 = ADD 0x20 V84
0x141: M[V98] = V76
0x142: V99 = 0x20
0x144: V100 = ADD 0x20 V98
0x149: V101 = 0x0
0x14b: V102 = 0x40
0x14d: V103 = M[0x40]
0x150: V104 = SUB V100 V103
0x152: V105 = 0x0
0x156: V106 = EXTCODESIZE V71
0x157: V107 = ISZERO V106
0x159: V108 = ISZERO V107
0x15a: V109 = 0x162
0x15d: JUMPI 0x162 V108
---
Entry stack: [V11, V62, V71, 0xa9059cbb, V54, V70, V62]
Stack pops: 5
Stack additions: [S4, S3, V100, 0x0, V103, V104, V103, 0x0, S4, V107]
Exit stack: [V11, V62, V71, 0xa9059cbb, V100, 0x0, V103, V104, V103, 0x0, V71, V107]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0xf6]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V110 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V11, V62, V71, 0xa9059cbb, V100, 0x0, V103, V104, V103, 0x0, V71, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V62, V71, 0xa9059cbb, V100, 0x0, V103, V104, V103, 0x0, V71, V107]

================================

Block 0x162
[0x162:0x16c]
---
Predecessors: [0xf6]
Successors: [0x16d, 0x176]
---
0x162 JUMPDEST
0x163 POP
0x164 GAS
0x165 CALL
0x166 ISZERO
0x167 DUP1
0x168 ISZERO
0x169 PUSH2 0x176
0x16c JUMPI
---
0x162: JUMPDEST 
0x164: V111 = GAS
0x165: V112 = CALL V111 V71 0x0 V103 V104 V103 0x0
0x166: V113 = ISZERO V112
0x168: V114 = ISZERO V113
0x169: V115 = 0x176
0x16c: JUMPI 0x176 V114
---
Entry stack: [V11, V62, V71, 0xa9059cbb, V100, 0x0, V103, V104, V103, 0x0, V71, V107]
Stack pops: 7
Stack additions: [V113]
Exit stack: [V11, V62, V71, 0xa9059cbb, V100, V113]

================================

Block 0x16d
[0x16d:0x175]
---
Predecessors: [0x162]
Successors: []
---
0x16d RETURNDATASIZE
0x16e PUSH1 0x0
0x170 DUP1
0x171 RETURNDATACOPY
0x172 RETURNDATASIZE
0x173 PUSH1 0x0
0x175 REVERT
---
0x16d: V116 = RETURNDATASIZE
0x16e: V117 = 0x0
0x171: RETURNDATACOPY 0x0 0x0 V116
0x172: V118 = RETURNDATASIZE
0x173: V119 = 0x0
0x175: REVERT 0x0 V118
---
Entry stack: [V11, V62, V71, 0xa9059cbb, V100, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V62, V71, 0xa9059cbb, V100, V113]

================================

Block 0x176
[0x176:0x1c6]
---
Predecessors: [0x162]
Successors: []
---
0x176 JUMPDEST
0x177 POP
0x178 POP
0x179 PUSH1 0x40
0x17b DUP1
0x17c MLOAD
0x17d PUSH1 0x1
0x17f PUSH1 0xa0
0x181 PUSH1 0x2
0x183 EXP
0x184 SUB
0x185 CALLER
0x186 AND
0x187 DUP2
0x188 MSTORE
0x189 PUSH1 0x20
0x18b DUP2
0x18c ADD
0x18d DUP6
0x18e SWAP1
0x18f MSTORE
0x190 PUSH1 0x1
0x192 DUP2
0x193 DUP4
0x194 ADD
0x195 MSTORE
0x196 SWAP1
0x197 MLOAD
0x198 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1b9 SWAP4
0x1ba POP
0x1bb SWAP1
0x1bc DUP2
0x1bd SWAP1
0x1be SUB
0x1bf PUSH1 0x60
0x1c1 ADD
0x1c2 SWAP2
0x1c3 POP
0x1c4 LOG1
0x1c5 POP
0x1c6 STOP
---
0x176: JUMPDEST 
0x179: V120 = 0x40
0x17c: V121 = M[0x40]
0x17d: V122 = 0x1
0x17f: V123 = 0xa0
0x181: V124 = 0x2
0x183: V125 = EXP 0x2 0xa0
0x184: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x185: V127 = CALLER
0x186: V128 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x188: M[V121] = V128
0x189: V129 = 0x20
0x18c: V130 = ADD V121 0x20
0x18f: M[V130] = V62
0x190: V131 = 0x1
0x194: V132 = ADD 0x40 V121
0x195: M[V132] = 0x1
0x197: V133 = M[0x40]
0x198: V134 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1be: V135 = SUB V121 V133
0x1bf: V136 = 0x60
0x1c1: V137 = ADD 0x60 V135
0x1c4: LOG V133 V137 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1c6: STOP 
---
Entry stack: [V11, V62, V71, 0xa9059cbb, V100, V113]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0xd]
Successors: [0x1cf, 0x1d3]
---
0x1c7 JUMPDEST
0x1c8 CALLVALUE
0x1c9 DUP1
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V138 = CALLVALUE
0x1ca: V139 = ISZERO V138
0x1cb: V140 = 0x1d3
0x1ce: JUMPI 0x1d3 V139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V138]
Exit stack: [V11, V138]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c7]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V141 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V11, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V138]

================================

Block 0x1d3
[0x1d3:0x1db]
---
Predecessors: [0x1c7]
Successors: [0x2c0]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 PUSH2 0x1dc
0x1d8 PUSH2 0x2c0
0x1db JUMP
---
0x1d3: JUMPDEST 
0x1d5: V142 = 0x1dc
0x1d8: V143 = 0x2c0
0x1db: JUMP 0x2c0
---
Entry stack: [V11, V138]
Stack pops: 1
Stack additions: [0x1dc]
Exit stack: [V11, 0x1dc]

================================

Block 0x1dc
[0x1dc:0x1dd]
---
Predecessors: [0x33d, 0x511]
Successors: []
---
0x1dc JUMPDEST
0x1dd STOP
---
0x1dc: JUMPDEST 
0x1dd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1de
[0x1de:0x1e5]
---
Predecessors: [0x40]
Successors: [0x1e6, 0x1ea]
---
0x1de JUMPDEST
0x1df CALLVALUE
0x1e0 DUP1
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1de: JUMPDEST 
0x1df: V144 = CALLVALUE
0x1e1: V145 = ISZERO V144
0x1e2: V146 = 0x1ea
0x1e5: JUMPI 0x1ea V145
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V144]
Exit stack: [V11, V144]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1de]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V147 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V11, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V144]

================================

Block 0x1ea
[0x1ea:0x1f2]
---
Predecessors: [0x1de]
Successors: [0x33f]
---
0x1ea JUMPDEST
0x1eb POP
0x1ec PUSH2 0x1f3
0x1ef PUSH2 0x33f
0x1f2 JUMP
---
0x1ea: JUMPDEST 
0x1ec: V148 = 0x1f3
0x1ef: V149 = 0x33f
0x1f2: JUMP 0x33f
---
Entry stack: [V11, V144]
Stack pops: 1
Stack additions: [0x1f3]
Exit stack: [V11, 0x1f3]

================================

Block 0x1f3
[0x1f3:0x204]
---
Predecessors: [0x33f, 0x363, 0x375, 0x37b, 0x381]
Successors: []
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x40
0x1f6 DUP1
0x1f7 MLOAD
0x1f8 SWAP2
0x1f9 DUP3
0x1fa MSTORE
0x1fb MLOAD
0x1fc SWAP1
0x1fd DUP2
0x1fe SWAP1
0x1ff SUB
0x200 PUSH1 0x20
0x202 ADD
0x203 SWAP1
0x204 RETURN
---
0x1f3: JUMPDEST 
0x1f4: V150 = 0x40
0x1f7: V151 = M[0x40]
0x1fa: M[V151] = S0
0x1fb: V152 = M[0x40]
0x1ff: V153 = SUB V151 V152
0x200: V154 = 0x20
0x202: V155 = ADD 0x20 V153
0x204: RETURN V152 V155
---
Entry stack: [V11, 0x1f3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1f3]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x4b]
Successors: [0x20d, 0x211]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x205: JUMPDEST 
0x206: V156 = CALLVALUE
0x208: V157 = ISZERO V156
0x209: V158 = 0x211
0x20c: JUMPI 0x211 V157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V156]
Exit stack: [V11, V156]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x205]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V159 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V11, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V156]

================================

Block 0x211
[0x211:0x219]
---
Predecessors: [0x205]
Successors: [0x345]
---
0x211 JUMPDEST
0x212 POP
0x213 PUSH2 0x21a
0x216 PUSH2 0x345
0x219 JUMP
---
0x211: JUMPDEST 
0x213: V160 = 0x21a
0x216: V161 = 0x345
0x219: JUMP 0x345
---
Entry stack: [V11, V156]
Stack pops: 1
Stack additions: [0x21a]
Exit stack: [V11, 0x21a]

================================

Block 0x21a
[0x21a:0x235]
---
Predecessors: [0x345, 0x354]
Successors: []
---
0x21a JUMPDEST
0x21b PUSH1 0x40
0x21d DUP1
0x21e MLOAD
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 SWAP1
0x228 SWAP3
0x229 AND
0x22a DUP3
0x22b MSTORE
0x22c MLOAD
0x22d SWAP1
0x22e DUP2
0x22f SWAP1
0x230 SUB
0x231 PUSH1 0x20
0x233 ADD
0x234 SWAP1
0x235 RETURN
---
0x21a: JUMPDEST 
0x21b: V162 = 0x40
0x21e: V163 = M[0x40]
0x21f: V164 = 0x1
0x221: V165 = 0xa0
0x223: V166 = 0x2
0x225: V167 = EXP 0x2 0xa0
0x226: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V169 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x22b: M[V163] = V169
0x22c: V170 = M[0x40]
0x230: V171 = SUB V163 V170
0x231: V172 = 0x20
0x233: V173 = ADD 0x20 V171
0x235: RETURN V170 V173
---
Entry stack: [V11, 0x21a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x21a]

================================

Block 0x236
[0x236:0x23d]
---
Predecessors: [0x56]
Successors: [0x23e, 0x242]
---
0x236 JUMPDEST
0x237 CALLVALUE
0x238 DUP1
0x239 ISZERO
0x23a PUSH2 0x242
0x23d JUMPI
---
0x236: JUMPDEST 
0x237: V174 = CALLVALUE
0x239: V175 = ISZERO V174
0x23a: V176 = 0x242
0x23d: JUMPI 0x242 V175
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V174]
Exit stack: [V11, V174]

================================

Block 0x23e
[0x23e:0x241]
---
Predecessors: [0x236]
Successors: []
---
0x23e PUSH1 0x0
0x240 DUP1
0x241 REVERT
---
0x23e: V177 = 0x0
0x241: REVERT 0x0 0x0
---
Entry stack: [V11, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V174]

================================

Block 0x242
[0x242:0x24a]
---
Predecessors: [0x236]
Successors: [0x354]
---
0x242 JUMPDEST
0x243 POP
0x244 PUSH2 0x21a
0x247 PUSH2 0x354
0x24a JUMP
---
0x242: JUMPDEST 
0x244: V178 = 0x21a
0x247: V179 = 0x354
0x24a: JUMP 0x354
---
Entry stack: [V11, V174]
Stack pops: 1
Stack additions: [0x21a]
Exit stack: [V11, 0x21a]

================================

Block 0x24b
[0x24b:0x252]
---
Predecessors: [0x61]
Successors: [0x253, 0x257]
---
0x24b JUMPDEST
0x24c CALLVALUE
0x24d DUP1
0x24e ISZERO
0x24f PUSH2 0x257
0x252 JUMPI
---
0x24b: JUMPDEST 
0x24c: V180 = CALLVALUE
0x24e: V181 = ISZERO V180
0x24f: V182 = 0x257
0x252: JUMPI 0x257 V181
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V180]
Exit stack: [V11, V180]

================================

Block 0x253
[0x253:0x256]
---
Predecessors: [0x24b]
Successors: []
---
0x253 PUSH1 0x0
0x255 DUP1
0x256 REVERT
---
0x253: V183 = 0x0
0x256: REVERT 0x0 0x0
---
Entry stack: [V11, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V180]

================================

Block 0x257
[0x257:0x26b]
---
Predecessors: [0x24b]
Successors: [0x363]
---
0x257 JUMPDEST
0x258 POP
0x259 PUSH2 0x1f3
0x25c PUSH1 0x1
0x25e PUSH1 0xa0
0x260 PUSH1 0x2
0x262 EXP
0x263 SUB
0x264 PUSH1 0x4
0x266 CALLDATALOAD
0x267 AND
0x268 PUSH2 0x363
0x26b JUMP
---
0x257: JUMPDEST 
0x259: V184 = 0x1f3
0x25c: V185 = 0x1
0x25e: V186 = 0xa0
0x260: V187 = 0x2
0x262: V188 = EXP 0x2 0xa0
0x263: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V190 = 0x4
0x266: V191 = CALLDATALOAD 0x4
0x267: V192 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x268: V193 = 0x363
0x26b: JUMP 0x363
---
Entry stack: [V11, V180]
Stack pops: 1
Stack additions: [0x1f3, V192]
Exit stack: [V11, 0x1f3, V192]

================================

Block 0x26c
[0x26c:0x273]
---
Predecessors: [0x6c]
Successors: [0x274, 0x278]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e DUP1
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x26c: JUMPDEST 
0x26d: V194 = CALLVALUE
0x26f: V195 = ISZERO V194
0x270: V196 = 0x278
0x273: JUMPI 0x278 V195
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V194]
Exit stack: [V11, V194]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x26c]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V197 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V11, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V194]

================================

Block 0x278
[0x278:0x280]
---
Predecessors: [0x26c]
Successors: [0x375]
---
0x278 JUMPDEST
0x279 POP
0x27a PUSH2 0x1f3
0x27d PUSH2 0x375
0x280 JUMP
---
0x278: JUMPDEST 
0x27a: V198 = 0x1f3
0x27d: V199 = 0x375
0x280: JUMP 0x375
---
Entry stack: [V11, V194]
Stack pops: 1
Stack additions: [0x1f3]
Exit stack: [V11, 0x1f3]

================================

Block 0x281
[0x281:0x288]
---
Predecessors: [0x77]
Successors: [0x289, 0x28d]
---
0x281 JUMPDEST
0x282 CALLVALUE
0x283 DUP1
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x281: JUMPDEST 
0x282: V200 = CALLVALUE
0x284: V201 = ISZERO V200
0x285: V202 = 0x28d
0x288: JUMPI 0x28d V201
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V200]
Exit stack: [V11, V200]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x281]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V203 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V11, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V200]

================================

Block 0x28d
[0x28d:0x295]
---
Predecessors: [0x281]
Successors: [0x37b]
---
0x28d JUMPDEST
0x28e POP
0x28f PUSH2 0x1f3
0x292 PUSH2 0x37b
0x295 JUMP
---
0x28d: JUMPDEST 
0x28f: V204 = 0x1f3
0x292: V205 = 0x37b
0x295: JUMP 0x37b
---
Entry stack: [V11, V200]
Stack pops: 1
Stack additions: [0x1f3]
Exit stack: [V11, 0x1f3]

================================

Block 0x296
[0x296:0x29d]
---
Predecessors: [0x82]
Successors: [0x29e, 0x2a2]
---
0x296 JUMPDEST
0x297 CALLVALUE
0x298 DUP1
0x299 ISZERO
0x29a PUSH2 0x2a2
0x29d JUMPI
---
0x296: JUMPDEST 
0x297: V206 = CALLVALUE
0x299: V207 = ISZERO V206
0x29a: V208 = 0x2a2
0x29d: JUMPI 0x2a2 V207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V206]
Exit stack: [V11, V206]

================================

Block 0x29e
[0x29e:0x2a1]
---
Predecessors: [0x296]
Successors: []
---
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 REVERT
---
0x29e: V209 = 0x0
0x2a1: REVERT 0x0 0x0
---
Entry stack: [V11, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V206]

================================

Block 0x2a2
[0x2a2:0x2aa]
---
Predecessors: [0x296]
Successors: [0x381]
---
0x2a2 JUMPDEST
0x2a3 POP
0x2a4 PUSH2 0x1f3
0x2a7 PUSH2 0x381
0x2aa JUMP
---
0x2a2: JUMPDEST 
0x2a4: V210 = 0x1f3
0x2a7: V211 = 0x381
0x2aa: JUMP 0x381
---
Entry stack: [V11, V206]
Stack pops: 1
Stack additions: [0x1f3]
Exit stack: [V11, 0x1f3]

================================

Block 0x2ab
[0x2ab:0x2b2]
---
Predecessors: [0x8d]
Successors: [0x2b3, 0x2b7]
---
0x2ab JUMPDEST
0x2ac CALLVALUE
0x2ad DUP1
0x2ae ISZERO
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V212 = CALLVALUE
0x2ae: V213 = ISZERO V212
0x2af: V214 = 0x2b7
0x2b2: JUMPI 0x2b7 V213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V212]
Exit stack: [V11, V212]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x2ab]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V215 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V11, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V212]

================================

Block 0x2b7
[0x2b7:0x2bf]
---
Predecessors: [0x2ab]
Successors: [0x387]
---
0x2b7 JUMPDEST
0x2b8 POP
0x2b9 PUSH2 0x1dc
0x2bc PUSH2 0x387
0x2bf JUMP
---
0x2b7: JUMPDEST 
0x2b9: V216 = 0x1dc
0x2bc: V217 = 0x387
0x2bf: JUMP 0x387
---
Entry stack: [V11, V212]
Stack pops: 1
Stack additions: [0x1dc]
Exit stack: [V11, 0x1dc]

================================

Block 0x2c0
[0x2c0:0x2c9]
---
Predecessors: [0x1d3]
Successors: [0x2ca, 0x33d]
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x3
0x2c3 SLOAD
0x2c4 TIMESTAMP
0x2c5 LT
0x2c6 PUSH2 0x33d
0x2c9 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V218 = 0x3
0x2c3: V219 = S[0x3]
0x2c4: V220 = TIMESTAMP
0x2c5: V221 = LT V220 V219
0x2c6: V222 = 0x33d
0x2c9: JUMPI 0x33d V221
---
Entry stack: [V11, 0x1dc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc]

================================

Block 0x2ca
[0x2ca:0x2d4]
---
Predecessors: [0x2c0]
Successors: [0x2d5, 0x32d]
---
0x2ca PUSH1 0x1
0x2cc SLOAD
0x2cd PUSH1 0x2
0x2cf SLOAD
0x2d0 LT
0x2d1 PUSH2 0x32d
0x2d4 JUMPI
---
0x2ca: V223 = 0x1
0x2cc: V224 = S[0x1]
0x2cd: V225 = 0x2
0x2cf: V226 = S[0x2]
0x2d0: V227 = LT V226 V224
0x2d1: V228 = 0x32d
0x2d4: JUMPI 0x32d V227
---
Entry stack: [V11, 0x1dc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc]

================================

Block 0x2d5
[0x2d5:0x32c]
---
Predecessors: [0x2ca]
Successors: [0x32d]
---
0x2d5 PUSH1 0x7
0x2d7 DUP1
0x2d8 SLOAD
0x2d9 PUSH1 0xff
0x2db NOT
0x2dc AND
0x2dd PUSH1 0x1
0x2df OR
0x2e0 SWAP1
0x2e1 SSTORE
0x2e2 PUSH1 0x0
0x2e4 SLOAD
0x2e5 PUSH1 0x2
0x2e7 SLOAD
0x2e8 PUSH1 0x40
0x2ea DUP1
0x2eb MLOAD
0x2ec PUSH1 0x1
0x2ee PUSH1 0xa0
0x2f0 PUSH1 0x2
0x2f2 EXP
0x2f3 SUB
0x2f4 SWAP1
0x2f5 SWAP4
0x2f6 AND
0x2f7 DUP4
0x2f8 MSTORE
0x2f9 PUSH1 0x20
0x2fb DUP4
0x2fc ADD
0x2fd SWAP2
0x2fe SWAP1
0x2ff SWAP2
0x300 MSTORE
0x301 DUP1
0x302 MLOAD
0x303 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x324 SWAP3
0x325 DUP2
0x326 SWAP1
0x327 SUB
0x328 SWAP1
0x329 SWAP2
0x32a ADD
0x32b SWAP1
0x32c LOG1
---
0x2d5: V229 = 0x7
0x2d8: V230 = S[0x7]
0x2d9: V231 = 0xff
0x2db: V232 = NOT 0xff
0x2dc: V233 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V230
0x2dd: V234 = 0x1
0x2df: V235 = OR 0x1 V233
0x2e1: S[0x7] = V235
0x2e2: V236 = 0x0
0x2e4: V237 = S[0x0]
0x2e5: V238 = 0x2
0x2e7: V239 = S[0x2]
0x2e8: V240 = 0x40
0x2eb: V241 = M[0x40]
0x2ec: V242 = 0x1
0x2ee: V243 = 0xa0
0x2f0: V244 = 0x2
0x2f2: V245 = EXP 0x2 0xa0
0x2f3: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V247 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: M[V241] = V247
0x2f9: V248 = 0x20
0x2fc: V249 = ADD V241 0x20
0x300: M[V249] = V239
0x302: V250 = M[0x40]
0x303: V251 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x327: V252 = SUB V241 V250
0x32a: V253 = ADD 0x40 V252
0x32c: LOG V250 V253 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V11, 0x1dc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc]

================================

Block 0x32d
[0x32d:0x33c]
---
Predecessors: [0x2ca, 0x2d5]
Successors: [0x33d]
---
0x32d JUMPDEST
0x32e PUSH1 0x7
0x330 DUP1
0x331 SLOAD
0x332 PUSH2 0xff00
0x335 NOT
0x336 AND
0x337 PUSH2 0x100
0x33a OR
0x33b SWAP1
0x33c SSTORE
---
0x32d: JUMPDEST 
0x32e: V254 = 0x7
0x331: V255 = S[0x7]
0x332: V256 = 0xff00
0x335: V257 = NOT 0xff00
0x336: V258 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V255
0x337: V259 = 0x100
0x33a: V260 = OR 0x100 V258
0x33c: S[0x7] = V260
---
Entry stack: [V11, 0x1dc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc]

================================

Block 0x33d
[0x33d:0x33e]
---
Predecessors: [0x2c0, 0x32d]
Successors: [0x1dc]
---
0x33d JUMPDEST
0x33e JUMP
---
0x33d: JUMPDEST 
0x33e: JUMP 0x1dc
---
Entry stack: [V11, 0x1dc]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x33f
[0x33f:0x344]
---
Predecessors: [0x1ea]
Successors: [0x1f3]
---
0x33f JUMPDEST
0x340 PUSH1 0x3
0x342 SLOAD
0x343 DUP2
0x344 JUMP
---
0x33f: JUMPDEST 
0x340: V261 = 0x3
0x342: V262 = S[0x3]
0x344: JUMP 0x1f3
---
Entry stack: [V11, 0x1f3]
Stack pops: 1
Stack additions: [S0, V262]
Exit stack: [V11, 0x1f3, V262]

================================

Block 0x345
[0x345:0x353]
---
Predecessors: [0x211]
Successors: [0x21a]
---
0x345 JUMPDEST
0x346 PUSH1 0x0
0x348 SLOAD
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 AND
0x352 DUP2
0x353 JUMP
---
0x345: JUMPDEST 
0x346: V263 = 0x0
0x348: V264 = S[0x0]
0x349: V265 = 0x1
0x34b: V266 = 0xa0
0x34d: V267 = 0x2
0x34f: V268 = EXP 0x2 0xa0
0x350: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x353: JUMP 0x21a
---
Entry stack: [V11, 0x21a]
Stack pops: 1
Stack additions: [S0, V270]
Exit stack: [V11, 0x21a, V270]

================================

Block 0x354
[0x354:0x362]
---
Predecessors: [0x242]
Successors: [0x21a]
---
0x354 JUMPDEST
0x355 PUSH1 0x5
0x357 SLOAD
0x358 PUSH1 0x1
0x35a PUSH1 0xa0
0x35c PUSH1 0x2
0x35e EXP
0x35f SUB
0x360 AND
0x361 DUP2
0x362 JUMP
---
0x354: JUMPDEST 
0x355: V271 = 0x5
0x357: V272 = S[0x5]
0x358: V273 = 0x1
0x35a: V274 = 0xa0
0x35c: V275 = 0x2
0x35e: V276 = EXP 0x2 0xa0
0x35f: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x360: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x362: JUMP 0x21a
---
Entry stack: [V11, 0x21a]
Stack pops: 1
Stack additions: [S0, V278]
Exit stack: [V11, 0x21a, V278]

================================

Block 0x363
[0x363:0x374]
---
Predecessors: [0x257]
Successors: [0x1f3]
---
0x363 JUMPDEST
0x364 PUSH1 0x6
0x366 PUSH1 0x20
0x368 MSTORE
0x369 PUSH1 0x0
0x36b SWAP1
0x36c DUP2
0x36d MSTORE
0x36e PUSH1 0x40
0x370 SWAP1
0x371 SHA3
0x372 SLOAD
0x373 DUP2
0x374 JUMP
---
0x363: JUMPDEST 
0x364: V279 = 0x6
0x366: V280 = 0x20
0x368: M[0x20] = 0x6
0x369: V281 = 0x0
0x36d: M[0x0] = V192
0x36e: V282 = 0x40
0x371: V283 = SHA3 0x0 0x40
0x372: V284 = S[V283]
0x374: JUMP 0x1f3
---
Entry stack: [V11, 0x1f3, V192]
Stack pops: 2
Stack additions: [S1, V284]
Exit stack: [V11, 0x1f3, V284]

================================

Block 0x375
[0x375:0x37a]
---
Predecessors: [0x278]
Successors: [0x1f3]
---
0x375 JUMPDEST
0x376 PUSH1 0x1
0x378 SLOAD
0x379 DUP2
0x37a JUMP
---
0x375: JUMPDEST 
0x376: V285 = 0x1
0x378: V286 = S[0x1]
0x37a: JUMP 0x1f3
---
Entry stack: [V11, 0x1f3]
Stack pops: 1
Stack additions: [S0, V286]
Exit stack: [V11, 0x1f3, V286]

================================

Block 0x37b
[0x37b:0x380]
---
Predecessors: [0x28d]
Successors: [0x1f3]
---
0x37b JUMPDEST
0x37c PUSH1 0x2
0x37e SLOAD
0x37f DUP2
0x380 JUMP
---
0x37b: JUMPDEST 
0x37c: V287 = 0x2
0x37e: V288 = S[0x2]
0x380: JUMP 0x1f3
---
Entry stack: [V11, 0x1f3]
Stack pops: 1
Stack additions: [S0, V288]
Exit stack: [V11, 0x1f3, V288]

================================

Block 0x381
[0x381:0x386]
---
Predecessors: [0x2a2]
Successors: [0x1f3]
---
0x381 JUMPDEST
0x382 PUSH1 0x4
0x384 SLOAD
0x385 DUP2
0x386 JUMP
---
0x381: JUMPDEST 
0x382: V289 = 0x4
0x384: V290 = S[0x4]
0x386: JUMP 0x1f3
---
Entry stack: [V11, 0x1f3]
Stack pops: 1
Stack additions: [S0, V290]
Exit stack: [V11, 0x1f3, V290]

================================

Block 0x387
[0x387:0x393]
---
Predecessors: [0x2b7]
Successors: [0x394, 0x511]
---
0x387 JUMPDEST
0x388 PUSH1 0x3
0x38a SLOAD
0x38b PUSH1 0x0
0x38d SWAP1
0x38e TIMESTAMP
0x38f LT
0x390 PUSH2 0x511
0x393 JUMPI
---
0x387: JUMPDEST 
0x388: V291 = 0x3
0x38a: V292 = S[0x3]
0x38b: V293 = 0x0
0x38e: V294 = TIMESTAMP
0x38f: V295 = LT V294 V292
0x390: V296 = 0x511
0x393: JUMPI 0x511 V295
---
Entry stack: [V11, 0x1dc]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1dc, 0x0]

================================

Block 0x394
[0x394:0x39f]
---
Predecessors: [0x387]
Successors: [0x3a0, 0x45a]
---
0x394 PUSH1 0x7
0x396 SLOAD
0x397 PUSH1 0xff
0x399 AND
0x39a ISZERO
0x39b ISZERO
0x39c PUSH2 0x45a
0x39f JUMPI
---
0x394: V297 = 0x7
0x396: V298 = S[0x7]
0x397: V299 = 0xff
0x399: V300 = AND 0xff V298
0x39a: V301 = ISZERO V300
0x39b: V302 = ISZERO V301
0x39c: V303 = 0x45a
0x39f: JUMPI 0x45a V302
---
Entry stack: [V11, 0x1dc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, 0x0]

================================

Block 0x3a0
[0x3a0:0x3c6]
---
Predecessors: [0x394]
Successors: [0x3c7, 0x45a]
---
0x3a0 POP
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0xa0
0x3a5 PUSH1 0x2
0x3a7 EXP
0x3a8 SUB
0x3a9 CALLER
0x3aa AND
0x3ab PUSH1 0x0
0x3ad SWAP1
0x3ae DUP2
0x3af MSTORE
0x3b0 PUSH1 0x6
0x3b2 PUSH1 0x20
0x3b4 MSTORE
0x3b5 PUSH1 0x40
0x3b7 DUP2
0x3b8 SHA3
0x3b9 DUP1
0x3ba SLOAD
0x3bb SWAP1
0x3bc DUP3
0x3bd SWAP1
0x3be SSTORE
0x3bf SWAP1
0x3c0 DUP2
0x3c1 GT
0x3c2 ISZERO
0x3c3 PUSH2 0x45a
0x3c6 JUMPI
---
0x3a1: V304 = 0x1
0x3a3: V305 = 0xa0
0x3a5: V306 = 0x2
0x3a7: V307 = EXP 0x2 0xa0
0x3a8: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a9: V309 = CALLER
0x3aa: V310 = AND V309 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V311 = 0x0
0x3af: M[0x0] = V310
0x3b0: V312 = 0x6
0x3b2: V313 = 0x20
0x3b4: M[0x20] = 0x6
0x3b5: V314 = 0x40
0x3b8: V315 = SHA3 0x0 0x40
0x3ba: V316 = S[V315]
0x3be: S[V315] = 0x0
0x3c1: V317 = GT V316 0x0
0x3c2: V318 = ISZERO V317
0x3c3: V319 = 0x45a
0x3c6: JUMPI 0x45a V318
---
Entry stack: [V11, 0x1dc, 0x0]
Stack pops: 1
Stack additions: [V316]
Exit stack: [V11, 0x1dc, V316]

================================

Block 0x3c7
[0x3c7:0x3f0]
---
Predecessors: [0x3a0]
Successors: [0x3f1, 0x43e]
---
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca PUSH1 0x1
0x3cc PUSH1 0xa0
0x3ce PUSH1 0x2
0x3d0 EXP
0x3d1 SUB
0x3d2 CALLER
0x3d3 AND
0x3d4 SWAP1
0x3d5 DUP3
0x3d6 ISZERO
0x3d7 PUSH2 0x8fc
0x3da MUL
0x3db SWAP1
0x3dc DUP4
0x3dd SWAP1
0x3de PUSH1 0x0
0x3e0 DUP2
0x3e1 DUP2
0x3e2 DUP2
0x3e3 DUP6
0x3e4 DUP9
0x3e5 DUP9
0x3e6 CALL
0x3e7 SWAP4
0x3e8 POP
0x3e9 POP
0x3ea POP
0x3eb POP
0x3ec ISZERO
0x3ed PUSH2 0x43e
0x3f0 JUMPI
---
0x3c7: V320 = 0x40
0x3c9: V321 = M[0x40]
0x3ca: V322 = 0x1
0x3cc: V323 = 0xa0
0x3ce: V324 = 0x2
0x3d0: V325 = EXP 0x2 0xa0
0x3d1: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d2: V327 = CALLER
0x3d3: V328 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x3d6: V329 = ISZERO V316
0x3d7: V330 = 0x8fc
0x3da: V331 = MUL 0x8fc V329
0x3de: V332 = 0x0
0x3e6: V333 = CALL V331 V328 V316 V321 0x0 V321 0x0
0x3ec: V334 = ISZERO V333
0x3ed: V335 = 0x43e
0x3f0: JUMPI 0x43e V334
---
Entry stack: [V11, 0x1dc, V316]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1dc, V316]

================================

Block 0x3f1
[0x3f1:0x43d]
---
Predecessors: [0x3c7]
Successors: [0x45a]
---
0x3f1 PUSH1 0x40
0x3f3 DUP1
0x3f4 MLOAD
0x3f5 PUSH1 0x1
0x3f7 PUSH1 0xa0
0x3f9 PUSH1 0x2
0x3fb EXP
0x3fc SUB
0x3fd CALLER
0x3fe AND
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 DUP2
0x404 ADD
0x405 DUP4
0x406 SWAP1
0x407 MSTORE
0x408 PUSH1 0x0
0x40a DUP2
0x40b DUP4
0x40c ADD
0x40d MSTORE
0x40e SWAP1
0x40f MLOAD
0x410 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x431 SWAP2
0x432 DUP2
0x433 SWAP1
0x434 SUB
0x435 PUSH1 0x60
0x437 ADD
0x438 SWAP1
0x439 LOG1
0x43a PUSH2 0x45a
0x43d JUMP
---
0x3f1: V336 = 0x40
0x3f4: V337 = M[0x40]
0x3f5: V338 = 0x1
0x3f7: V339 = 0xa0
0x3f9: V340 = 0x2
0x3fb: V341 = EXP 0x2 0xa0
0x3fc: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fd: V343 = CALLER
0x3fe: V344 = AND V343 0xffffffffffffffffffffffffffffffffffffffff
0x400: M[V337] = V344
0x401: V345 = 0x20
0x404: V346 = ADD V337 0x20
0x407: M[V346] = V316
0x408: V347 = 0x0
0x40c: V348 = ADD 0x40 V337
0x40d: M[V348] = 0x0
0x40f: V349 = M[0x40]
0x410: V350 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x434: V351 = SUB V337 V349
0x435: V352 = 0x60
0x437: V353 = ADD 0x60 V351
0x439: LOG V349 V353 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x43a: V354 = 0x45a
0x43d: JUMP 0x45a
---
Entry stack: [V11, 0x1dc, V316]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1dc, V316]

================================

Block 0x43e
[0x43e:0x459]
---
Predecessors: [0x3c7]
Successors: [0x45a]
---
0x43e JUMPDEST
0x43f PUSH1 0x1
0x441 PUSH1 0xa0
0x443 PUSH1 0x2
0x445 EXP
0x446 SUB
0x447 CALLER
0x448 AND
0x449 PUSH1 0x0
0x44b SWAP1
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x6
0x450 PUSH1 0x20
0x452 MSTORE
0x453 PUSH1 0x40
0x455 SWAP1
0x456 SHA3
0x457 DUP2
0x458 SWAP1
0x459 SSTORE
---
0x43e: JUMPDEST 
0x43f: V355 = 0x1
0x441: V356 = 0xa0
0x443: V357 = 0x2
0x445: V358 = EXP 0x2 0xa0
0x446: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x447: V360 = CALLER
0x448: V361 = AND V360 0xffffffffffffffffffffffffffffffffffffffff
0x449: V362 = 0x0
0x44d: M[0x0] = V361
0x44e: V363 = 0x6
0x450: V364 = 0x20
0x452: M[0x20] = 0x6
0x453: V365 = 0x40
0x456: V366 = SHA3 0x0 0x40
0x459: S[V366] = V316
---
Entry stack: [V11, 0x1dc, V316]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1dc, V316]

================================

Block 0x45a
[0x45a:0x466]
---
Predecessors: [0x394, 0x3a0, 0x3f1, 0x43e]
Successors: [0x467, 0x47a]
---
0x45a JUMPDEST
0x45b PUSH1 0x7
0x45d SLOAD
0x45e PUSH1 0xff
0x460 AND
0x461 DUP1
0x462 ISZERO
0x463 PUSH2 0x47a
0x466 JUMPI
---
0x45a: JUMPDEST 
0x45b: V367 = 0x7
0x45d: V368 = S[0x7]
0x45e: V369 = 0xff
0x460: V370 = AND 0xff V368
0x462: V371 = ISZERO V370
0x463: V372 = 0x47a
0x466: JUMPI 0x47a V371
---
Entry stack: [V11, 0x1dc, S0]
Stack pops: 0
Stack additions: [V370]
Exit stack: [V11, 0x1dc, S0, V370]

================================

Block 0x467
[0x467:0x479]
---
Predecessors: [0x45a]
Successors: [0x47a]
---
0x467 POP
0x468 PUSH1 0x0
0x46a SLOAD
0x46b CALLER
0x46c PUSH1 0x1
0x46e PUSH1 0xa0
0x470 PUSH1 0x2
0x472 EXP
0x473 SUB
0x474 SWAP1
0x475 DUP2
0x476 AND
0x477 SWAP2
0x478 AND
0x479 EQ
---
0x468: V373 = 0x0
0x46a: V374 = S[0x0]
0x46b: V375 = CALLER
0x46c: V376 = 0x1
0x46e: V377 = 0xa0
0x470: V378 = 0x2
0x472: V379 = EXP 0x2 0xa0
0x473: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x476: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x478: V382 = AND V374 0xffffffffffffffffffffffffffffffffffffffff
0x479: V383 = EQ V382 V381
---
Entry stack: [V11, 0x1dc, S1, V370]
Stack pops: 1
Stack additions: [V383]
Exit stack: [V11, 0x1dc, S1, V383]

================================

Block 0x47a
[0x47a:0x47f]
---
Predecessors: [0x45a, 0x467]
Successors: [0x480, 0x511]
---
0x47a JUMPDEST
0x47b ISZERO
0x47c PUSH2 0x511
0x47f JUMPI
---
0x47a: JUMPDEST 
0x47b: V384 = ISZERO S0
0x47c: V385 = 0x511
0x47f: JUMPI 0x511 V384
---
Entry stack: [V11, 0x1dc, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1dc, S1]

================================

Block 0x480
[0x480:0x4ae]
---
Predecessors: [0x47a]
Successors: [0x4af, 0x506]
---
0x480 PUSH1 0x0
0x482 DUP1
0x483 SLOAD
0x484 PUSH1 0x2
0x486 SLOAD
0x487 PUSH1 0x40
0x489 MLOAD
0x48a PUSH1 0x1
0x48c PUSH1 0xa0
0x48e PUSH1 0x2
0x490 EXP
0x491 SUB
0x492 SWAP1
0x493 SWAP3
0x494 AND
0x495 SWAP3
0x496 DUP2
0x497 ISZERO
0x498 PUSH2 0x8fc
0x49b MUL
0x49c SWAP3
0x49d SWAP1
0x49e DUP2
0x49f DUP2
0x4a0 DUP2
0x4a1 DUP6
0x4a2 DUP9
0x4a3 DUP9
0x4a4 CALL
0x4a5 SWAP4
0x4a6 POP
0x4a7 POP
0x4a8 POP
0x4a9 POP
0x4aa ISZERO
0x4ab PUSH2 0x506
0x4ae JUMPI
---
0x480: V386 = 0x0
0x483: V387 = S[0x0]
0x484: V388 = 0x2
0x486: V389 = S[0x2]
0x487: V390 = 0x40
0x489: V391 = M[0x40]
0x48a: V392 = 0x1
0x48c: V393 = 0xa0
0x48e: V394 = 0x2
0x490: V395 = EXP 0x2 0xa0
0x491: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x494: V397 = AND V387 0xffffffffffffffffffffffffffffffffffffffff
0x497: V398 = ISZERO V389
0x498: V399 = 0x8fc
0x49b: V400 = MUL 0x8fc V398
0x4a4: V401 = CALL V400 V397 V389 V391 0x0 V391 0x0
0x4aa: V402 = ISZERO V401
0x4ab: V403 = 0x506
0x4ae: JUMPI 0x506 V402
---
Entry stack: [V11, 0x1dc, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, S0]

================================

Block 0x4af
[0x4af:0x505]
---
Predecessors: [0x480]
Successors: [0x511]
---
0x4af PUSH1 0x0
0x4b1 DUP1
0x4b2 SLOAD
0x4b3 PUSH1 0x2
0x4b5 SLOAD
0x4b6 PUSH1 0x40
0x4b8 DUP1
0x4b9 MLOAD
0x4ba PUSH1 0x1
0x4bc PUSH1 0xa0
0x4be PUSH1 0x2
0x4c0 EXP
0x4c1 SUB
0x4c2 SWAP1
0x4c3 SWAP4
0x4c4 AND
0x4c5 DUP4
0x4c6 MSTORE
0x4c7 PUSH1 0x20
0x4c9 DUP4
0x4ca ADD
0x4cb SWAP2
0x4cc SWAP1
0x4cd SWAP2
0x4ce MSTORE
0x4cf DUP2
0x4d0 DUP2
0x4d1 ADD
0x4d2 SWAP3
0x4d3 SWAP1
0x4d4 SWAP3
0x4d5 MSTORE
0x4d6 SWAP1
0x4d7 MLOAD
0x4d8 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4f9 SWAP2
0x4fa DUP2
0x4fb SWAP1
0x4fc SUB
0x4fd PUSH1 0x60
0x4ff ADD
0x500 SWAP1
0x501 LOG1
0x502 PUSH2 0x511
0x505 JUMP
---
0x4af: V404 = 0x0
0x4b2: V405 = S[0x0]
0x4b3: V406 = 0x2
0x4b5: V407 = S[0x2]
0x4b6: V408 = 0x40
0x4b9: V409 = M[0x40]
0x4ba: V410 = 0x1
0x4bc: V411 = 0xa0
0x4be: V412 = 0x2
0x4c0: V413 = EXP 0x2 0xa0
0x4c1: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c4: V415 = AND V405 0xffffffffffffffffffffffffffffffffffffffff
0x4c6: M[V409] = V415
0x4c7: V416 = 0x20
0x4ca: V417 = ADD V409 0x20
0x4ce: M[V417] = V407
0x4d1: V418 = ADD 0x40 V409
0x4d5: M[V418] = 0x0
0x4d7: V419 = M[0x40]
0x4d8: V420 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4fc: V421 = SUB V409 V419
0x4fd: V422 = 0x60
0x4ff: V423 = ADD 0x60 V421
0x501: LOG V419 V423 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x502: V424 = 0x511
0x505: JUMP 0x511
---
Entry stack: [V11, 0x1dc, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, S0]

================================

Block 0x506
[0x506:0x510]
---
Predecessors: [0x480]
Successors: [0x511]
---
0x506 JUMPDEST
0x507 PUSH1 0x7
0x509 DUP1
0x50a SLOAD
0x50b PUSH1 0xff
0x50d NOT
0x50e AND
0x50f SWAP1
0x510 SSTORE
---
0x506: JUMPDEST 
0x507: V425 = 0x7
0x50a: V426 = S[0x7]
0x50b: V427 = 0xff
0x50d: V428 = NOT 0xff
0x50e: V429 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V426
0x510: S[0x7] = V429
---
Entry stack: [V11, 0x1dc, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, S0]

================================

Block 0x511
[0x511:0x513]
---
Predecessors: [0x387, 0x47a, 0x4af, 0x506]
Successors: [0x1dc]
---
0x511 JUMPDEST
0x512 POP
0x513 JUMP
---
0x511: JUMPDEST 
0x513: JUMP 0x1dc
---
Entry stack: [V11, 0x1dc, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x514
[0x514:0x542]
---
Predecessors: []
Successors: []
---
0x514 STOP
0x515 LOG1
0x516 PUSH6 0x627a7a723058
0x51d SHA3
0x51e MISSING 0xa8
0x51f SWAP5
0x520 SWAP1
0x521 MISSING 0xb5
0x522 CODESIZE
0x523 RETURNDATASIZE
0x524 BLOCKHASH
0x525 MISSING 0x27
0x526 DIFFICULTY
0x527 MISSING 0xbf
0x528 MISSING 0xc7
0x529 MOD
0x52a ADD
0x52b PC
0x52c CALLDATACOPY
0x52d MISSING 0xe3
0x52e PUSH20 0x372eb1bfcc2404b880499823452a590029
---
0x514: STOP 
0x515: LOG S0 S1 S2
0x516: V430 = 0x627a7a723058
0x51d: V431 = SHA3 0x627a7a723058 S3
0x51e: MISSING 0xa8
0x521: MISSING 0xb5
0x522: V432 = CODESIZE
0x523: V433 = RETURNDATASIZE
0x524: V434 = BLOCKHASH V433
0x525: MISSING 0x27
0x526: V435 = DIFFICULTY
0x527: MISSING 0xbf
0x528: MISSING 0xc7
0x529: V436 = MOD S0 S1
0x52a: V437 = ADD V436 S2
0x52b: V438 = PC
0x52c: CALLDATACOPY V438 V437 S3
0x52d: MISSING 0xe3
0x52e: V439 = 0x372eb1bfcc2404b880499823452a590029
---
Entry stack: []
Stack pops: 0
Stack additions: [V431, S1, S5, S2, S3, S4, S0, V434, V432, V435, 0x372eb1bfcc2404b880499823452a590029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1c7
Exit block: 0x1dc
Body: 0x1c7, 0x1cf, 0x1d3, 0x1dc, 0x2c0, 0x2ca, 0x2d5, 0x32d, 0x33d

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1de
Exit block: 0x1f3
Body: 0x1de, 0x1e6, 0x1ea, 0x1f3, 0x33f

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x205
Exit block: 0x21a
Body: 0x205, 0x20d, 0x211, 0x21a, 0x345

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x236
Exit block: 0x21a
Body: 0x21a, 0x236, 0x23e, 0x242, 0x354

Function 4:
Public function signature: 0x70a08231
Entry block: 0x24b
Exit block: 0x1f3
Body: 0x1f3, 0x24b, 0x253, 0x257, 0x363

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x26c
Exit block: 0x1f3
Body: 0x1f3, 0x26c, 0x274, 0x278, 0x375

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x281
Exit block: 0x1f3
Body: 0x1f3, 0x281, 0x289, 0x28d, 0x37b

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x296
Exit block: 0x1f3
Body: 0x1f3, 0x296, 0x29e, 0x2a2, 0x381

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x2ab
Exit block: 0x1dc
Body: 0x1dc, 0x2ab, 0x2b3, 0x2b7, 0x387, 0x394, 0x3a0, 0x3c7, 0x3f1, 0x43e, 0x45a, 0x467, 0x47a, 0x480, 0x4af, 0x506, 0x511

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x16d
Body: 0x98, 0xac, 0xb0, 0xf5, 0xf6, 0x15e, 0x162, 0x16d, 0x176

