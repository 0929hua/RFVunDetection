Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x51]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x51
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x51
0xa: JUMPI 0x51 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x5d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x7d64bcb4
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x5d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x7d64bcb4
0x20: V14 = EQ V12 0x7d64bcb4
0x21: V15 = 0x5d
0x24: JUMPI 0x5d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x72]
---
0x25 DUP1
0x26 PUSH4 0x8da5cb5b
0x2b EQ
0x2c PUSH2 0x72
0x2f JUMPI
---
0x26: V16 = 0x8da5cb5b
0x2b: V17 = EQ 0x8da5cb5b V12
0x2c: V18 = 0x72
0x2f: JUMPI 0x72 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x51]
---
0x30 DUP1
0x31 PUSH4 0xb4427263
0x36 EQ
0x37 PUSH2 0x51
0x3a JUMPI
---
0x31: V19 = 0xb4427263
0x36: V20 = EQ 0xb4427263 V12
0x37: V21 = 0x51
0x3a: JUMPI 0x51 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xab]
---
0x3b DUP1
0x3c PUSH4 0xf2fde38b
0x41 EQ
0x42 PUSH2 0xab
0x45 JUMPI
---
0x3c: V22 = 0xf2fde38b
0x41: V23 = EQ 0xf2fde38b V12
0x42: V24 = 0xab
0x45: JUMPI 0xab V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xcc]
---
0x46 DUP1
0x47 PUSH4 0xfc0c546a
0x4c EQ
0x4d PUSH2 0xcc
0x50 JUMPI
---
0x47: V25 = 0xfc0c546a
0x4c: V26 = EQ 0xfc0c546a V12
0x4d: V27 = 0xcc
0x50: JUMPI 0xcc V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x51]
---
Predecessors: [0x0, 0x30, 0x46]
Successors: [0x52]
---
0x51 JUMPDEST
---
0x51: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x52
[0x52:0x59]
---
Predecessors: [0x51]
Successors: [0xfb]
---
0x52 JUMPDEST
0x53 PUSH2 0x5a
0x56 PUSH2 0xfb
0x59 JUMP
---
0x52: JUMPDEST 
0x53: V28 = 0x5a
0x56: V29 = 0xfb
0x59: JUMP 0xfb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5a]
Exit stack: [V12, 0x5a]

================================

Block 0x5a
[0x5a:0x5a]
---
Predecessors: [0x243, 0x2c7, 0x332]
Successors: [0x5b]
---
0x5a JUMPDEST
---
0x5a: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b
[0x5b:0x5c]
---
Predecessors: [0x5a]
Successors: []
---
0x5b JUMPDEST
0x5c STOP
---
0x5b: JUMPDEST 
0x5c: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5d
[0x5d:0x63]
---
Predecessors: [0xb]
Successors: [0x64, 0x68]
---
0x5d JUMPDEST
0x5e CALLVALUE
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5d: JUMPDEST 
0x5e: V30 = CALLVALUE
0x5f: V31 = ISZERO V30
0x60: V32 = 0x68
0x63: JUMPI 0x68 V31
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5d]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V33 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68
[0x68:0x6f]
---
Predecessors: [0x5d]
Successors: [0x247]
---
0x68 JUMPDEST
0x69 PUSH2 0x5a
0x6c PUSH2 0x247
0x6f JUMP
---
0x68: JUMPDEST 
0x69: V34 = 0x5a
0x6c: V35 = 0x247
0x6f: JUMP 0x247
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5a]
Exit stack: [V12, 0x5a]

================================

Block 0x70
[0x70:0x71]
---
Predecessors: []
Successors: []
---
0x70 JUMPDEST
0x71 STOP
---
0x70: JUMPDEST 
0x71: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x72
[0x72:0x78]
---
Predecessors: [0x25]
Successors: [0x79, 0x7d]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x72: JUMPDEST 
0x73: V36 = CALLVALUE
0x74: V37 = ISZERO V36
0x75: V38 = 0x7d
0x78: JUMPI 0x7d V37
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x72]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V39 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x84]
---
Predecessors: [0x72]
Successors: [0x2c9]
---
0x7d JUMPDEST
0x7e PUSH2 0x85
0x81 PUSH2 0x2c9
0x84 JUMP
---
0x7d: JUMPDEST 
0x7e: V40 = 0x85
0x81: V41 = 0x2c9
0x84: JUMP 0x2c9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x85]
Exit stack: [V12, 0x85]

================================

Block 0x85
[0x85:0xa0]
---
Predecessors: [0x2c9, 0x335]
Successors: []
---
0x85 JUMPDEST
0x86 PUSH1 0x40
0x88 MLOAD
0x89 PUSH1 0x1
0x8b PUSH1 0xa0
0x8d PUSH1 0x2
0x8f EXP
0x90 SUB
0x91 SWAP1
0x92 SWAP2
0x93 AND
0x94 DUP2
0x95 MSTORE
0x96 PUSH1 0x20
0x98 ADD
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d SWAP2
0x9e SUB
0x9f SWAP1
0xa0 RETURN
---
0x85: JUMPDEST 
0x86: V42 = 0x40
0x88: V43 = M[0x40]
0x89: V44 = 0x1
0x8b: V45 = 0xa0
0x8d: V46 = 0x2
0x8f: V47 = EXP 0x2 0xa0
0x90: V48 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93: V49 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x95: M[V43] = V49
0x96: V50 = 0x20
0x98: V51 = ADD 0x20 V43
0x99: V52 = 0x40
0x9b: V53 = M[0x40]
0x9e: V54 = SUB V51 V53
0xa0: RETURN V53 V54
---
Entry stack: [V12, 0x85, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x85]

================================

Block 0xa1
[0xa1:0xa8]
---
Predecessors: []
Successors: [0xfb]
---
0xa1 JUMPDEST
0xa2 PUSH2 0x5a
0xa5 PUSH2 0xfb
0xa8 JUMP
---
0xa1: JUMPDEST 
0xa2: V55 = 0x5a
0xa5: V56 = 0xfb
0xa8: JUMP 0xfb
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5a]
Exit stack: [0x5a]

================================

Block 0xa9
[0xa9:0xaa]
---
Predecessors: []
Successors: []
---
0xa9 JUMPDEST
0xaa STOP
---
0xa9: JUMPDEST 
0xaa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xab
[0xab:0xb1]
---
Predecessors: [0x3b]
Successors: [0xb2, 0xb6]
---
0xab JUMPDEST
0xac CALLVALUE
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xab: JUMPDEST 
0xac: V57 = CALLVALUE
0xad: V58 = ISZERO V57
0xae: V59 = 0xb6
0xb1: JUMPI 0xb6 V58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xab]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V60 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb6
[0xb6:0xc9]
---
Predecessors: [0xab]
Successors: [0x2d8]
---
0xb6 JUMPDEST
0xb7 PUSH2 0x5a
0xba PUSH1 0x1
0xbc PUSH1 0xa0
0xbe PUSH1 0x2
0xc0 EXP
0xc1 SUB
0xc2 PUSH1 0x4
0xc4 CALLDATALOAD
0xc5 AND
0xc6 PUSH2 0x2d8
0xc9 JUMP
---
0xb6: JUMPDEST 
0xb7: V61 = 0x5a
0xba: V62 = 0x1
0xbc: V63 = 0xa0
0xbe: V64 = 0x2
0xc0: V65 = EXP 0x2 0xa0
0xc1: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V67 = 0x4
0xc4: V68 = CALLDATALOAD 0x4
0xc5: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V70 = 0x2d8
0xc9: JUMP 0x2d8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5a, V69]
Exit stack: [V12, 0x5a, V69]

================================

Block 0xca
[0xca:0xcb]
---
Predecessors: []
Successors: []
---
0xca JUMPDEST
0xcb STOP
---
0xca: JUMPDEST 
0xcb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcc
[0xcc:0xd2]
---
Predecessors: [0x46]
Successors: [0xd3, 0xd7]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcc: JUMPDEST 
0xcd: V71 = CALLVALUE
0xce: V72 = ISZERO V71
0xcf: V73 = 0xd7
0xd2: JUMPI 0xd7 V72
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcc]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V74 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd7
[0xd7:0xde]
---
Predecessors: [0xcc]
Successors: [0x335]
---
0xd7 JUMPDEST
0xd8 PUSH2 0x85
0xdb PUSH2 0x335
0xde JUMP
---
0xd7: JUMPDEST 
0xd8: V75 = 0x85
0xdb: V76 = 0x335
0xde: JUMP 0x335
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x85]
Exit stack: [V12, 0x85]

================================

Block 0xdf
[0xdf:0xfa]
---
Predecessors: []
Successors: []
---
0xdf JUMPDEST
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb SWAP1
0xec SWAP2
0xed AND
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP1
0xf7 SWAP2
0xf8 SUB
0xf9 SWAP1
0xfa RETURN
---
0xdf: JUMPDEST 
0xe0: V77 = 0x40
0xe2: V78 = M[0x40]
0xe3: V79 = 0x1
0xe5: V80 = 0xa0
0xe7: V81 = 0x2
0xe9: V82 = EXP 0x2 0xa0
0xea: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed: V84 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xef: M[V78] = V84
0xf0: V85 = 0x20
0xf2: V86 = ADD 0x20 V78
0xf3: V87 = 0x40
0xf5: V88 = M[0x40]
0xf8: V89 = SUB V86 V88
0xfa: RETURN V88 V89
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xfb
[0xfb:0x116]
---
Predecessors: [0x52, 0xa1]
Successors: [0x117, 0x11b]
---
0xfb JUMPDEST
0xfc PUSH1 0x6
0xfe SLOAD
0xff PUSH1 0x5
0x101 SLOAD
0x102 PUSH1 0x0
0x104 SWAP2
0x105 DUP3
0x106 SWAP2
0x107 PUSH1 0x1
0x109 PUSH1 0xa0
0x10b PUSH1 0x2
0x10d EXP
0x10e SUB
0x10f AND
0x110 BALANCE
0x111 GT
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0xfb: JUMPDEST 
0xfc: V90 = 0x6
0xfe: V91 = S[0x6]
0xff: V92 = 0x5
0x101: V93 = S[0x5]
0x102: V94 = 0x0
0x107: V95 = 0x1
0x109: V96 = 0xa0
0x10b: V97 = 0x2
0x10d: V98 = EXP 0x2 0xa0
0x10e: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x110: V101 = BALANCE V100
0x111: V102 = GT V101 V91
0x112: V103 = ISZERO V102
0x113: V104 = 0x11b
0x116: JUMPI 0x11b V103
---
Entry stack: [V12, 0x5a]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x5a, 0x0, 0x0]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0xfb]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V105 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, 0x0, 0x0]

================================

Block 0x11b
[0x11b:0x12f]
---
Predecessors: [0xfb]
Successors: [0x130, 0x134]
---
0x11b JUMPDEST
0x11c PUSH1 0x3
0x11e SLOAD
0x11f PUSH3 0x15180
0x123 MUL
0x124 PUSH1 0x2
0x126 SLOAD
0x127 ADD
0x128 TIMESTAMP
0x129 LT
0x12a ISZERO
0x12b ISZERO
0x12c PUSH2 0x134
0x12f JUMPI
---
0x11b: JUMPDEST 
0x11c: V106 = 0x3
0x11e: V107 = S[0x3]
0x11f: V108 = 0x15180
0x123: V109 = MUL 0x15180 V107
0x124: V110 = 0x2
0x126: V111 = S[0x2]
0x127: V112 = ADD V111 V109
0x128: V113 = TIMESTAMP
0x129: V114 = LT V113 V112
0x12a: V115 = ISZERO V114
0x12b: V116 = ISZERO V115
0x12c: V117 = 0x134
0x12f: JUMPI 0x134 V116
---
Entry stack: [V12, 0x5a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, 0x0, 0x0]

================================

Block 0x130
[0x130:0x133]
---
Predecessors: [0x11b]
Successors: []
---
0x130 PUSH1 0x0
0x132 DUP1
0x133 REVERT
---
0x130: V118 = 0x0
0x133: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, 0x0, 0x0]

================================

Block 0x134
[0x134:0x163]
---
Predecessors: [0x11b]
Successors: [0x164, 0x168]
---
0x134 JUMPDEST
0x135 PUSH1 0x5
0x137 SLOAD
0x138 PUSH1 0x1
0x13a PUSH1 0xa0
0x13c PUSH1 0x2
0x13e EXP
0x13f SUB
0x140 AND
0x141 CALLVALUE
0x142 DUP1
0x143 ISZERO
0x144 PUSH2 0x8fc
0x147 MUL
0x148 SWAP1
0x149 PUSH1 0x40
0x14b MLOAD
0x14c PUSH1 0x0
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 DUP4
0x153 SUB
0x154 DUP2
0x155 DUP6
0x156 DUP9
0x157 DUP9
0x158 CALL
0x159 SWAP4
0x15a POP
0x15b POP
0x15c POP
0x15d POP
0x15e ISZERO
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x134: JUMPDEST 
0x135: V119 = 0x5
0x137: V120 = S[0x5]
0x138: V121 = 0x1
0x13a: V122 = 0xa0
0x13c: V123 = 0x2
0x13e: V124 = EXP 0x2 0xa0
0x13f: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x140: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x141: V127 = CALLVALUE
0x143: V128 = ISZERO V127
0x144: V129 = 0x8fc
0x147: V130 = MUL 0x8fc V128
0x149: V131 = 0x40
0x14b: V132 = M[0x40]
0x14c: V133 = 0x0
0x14e: V134 = 0x40
0x150: V135 = M[0x40]
0x153: V136 = SUB V132 V135
0x158: V137 = CALL V130 V126 V127 V135 V136 V135 0x0
0x15e: V138 = ISZERO V137
0x15f: V139 = ISZERO V138
0x160: V140 = 0x168
0x163: JUMPI 0x168 V139
---
Entry stack: [V12, 0x5a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, 0x0, 0x0]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x134]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V141 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, 0x0, 0x0]

================================

Block 0x168
[0x168:0x188]
---
Predecessors: [0x134]
Successors: [0x344]
---
0x168 JUMPDEST
0x169 PUSH2 0x195
0x16c PUSH8 0xde0b6b3a7640000
0x175 PUSH2 0x189
0x178 CALLVALUE
0x179 PUSH1 0x7
0x17b SLOAD
0x17c PUSH2 0x344
0x17f SWAP1
0x180 SWAP2
0x181 SWAP1
0x182 PUSH4 0xffffffff
0x187 AND
0x188 JUMP
---
0x168: JUMPDEST 
0x169: V142 = 0x195
0x16c: V143 = 0xde0b6b3a7640000
0x175: V144 = 0x189
0x178: V145 = CALLVALUE
0x179: V146 = 0x7
0x17b: V147 = S[0x7]
0x17c: V148 = 0x344
0x182: V149 = 0xffffffff
0x187: V150 = AND 0xffffffff 0x344
0x188: JUMP 0x344
---
Entry stack: [V12, 0x5a, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x195, 0xde0b6b3a7640000, 0x189, V147, V145]
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145]

================================

Block 0x189
[0x189:0x194]
---
Predecessors: [0x36c]
Successors: [0x373]
---
0x189 JUMPDEST
0x18a SWAP1
0x18b PUSH4 0xffffffff
0x190 PUSH2 0x373
0x193 AND
0x194 JUMP
---
0x189: JUMPDEST 
0x18b: V151 = 0xffffffff
0x190: V152 = 0x373
0x193: V153 = AND 0x373 0xffffffff
0x194: JUMP 0x373
---
Entry stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, V338]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, V338, 0xde0b6b3a7640000]

================================

Block 0x195
[0x195:0x1ae]
---
Predecessors: [0x388]
Successors: [0x1af, 0x1c2]
---
0x195 JUMPDEST
0x196 SWAP2
0x197 POP
0x198 PUSH1 0x0
0x19a SWAP1
0x19b POP
0x19c PUSH1 0x4
0x19e SLOAD
0x19f PUSH3 0x15180
0x1a3 MUL
0x1a4 PUSH1 0x2
0x1a6 SLOAD
0x1a7 ADD
0x1a8 TIMESTAMP
0x1a9 LT
0x1aa ISZERO
0x1ab PUSH2 0x1c2
0x1ae JUMPI
---
0x195: JUMPDEST 
0x198: V154 = 0x0
0x19c: V155 = 0x4
0x19e: V156 = S[0x4]
0x19f: V157 = 0x15180
0x1a3: V158 = MUL 0x15180 V156
0x1a4: V159 = 0x2
0x1a6: V160 = S[0x2]
0x1a7: V161 = ADD V160 V158
0x1a8: V162 = TIMESTAMP
0x1a9: V163 = LT V162 V161
0x1aa: V164 = ISZERO V163
0x1ab: V165 = 0x1c2
0x1ae: JUMPI 0x1c2 V164
---
Entry stack: [V12, 0x5a, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S0, 0x0]
Exit stack: [V12, 0x5a, S0, 0x0]

================================

Block 0x1af
[0x1af:0x1be]
---
Predecessors: [0x195]
Successors: [0x373]
---
0x1af PUSH2 0x1bf
0x1b2 DUP3
0x1b3 PUSH1 0x5
0x1b5 PUSH4 0xffffffff
0x1ba PUSH2 0x373
0x1bd AND
0x1be JUMP
---
0x1af: V166 = 0x1bf
0x1b3: V167 = 0x5
0x1b5: V168 = 0xffffffff
0x1ba: V169 = 0x373
0x1bd: V170 = AND 0x373 0xffffffff
0x1be: JUMP 0x373
---
Entry stack: [V12, 0x5a, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x1bf, S1, 0x5]
Exit stack: [V12, 0x5a, S1, 0x0, 0x1bf, S1, 0x5]

================================

Block 0x1bf
[0x1bf:0x1c1]
---
Predecessors: [0x388]
Successors: [0x1c2]
---
0x1bf JUMPDEST
0x1c0 SWAP1
0x1c1 POP
---
0x1bf: JUMPDEST 
---
Entry stack: [V12, 0x5a, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x5a, S2, S0]

================================

Block 0x1c2
[0x1c2:0x220]
---
Predecessors: [0x195, 0x1bf]
Successors: [0x221, 0x225]
---
0x1c2 JUMPDEST
0x1c3 PUSH1 0x1
0x1c5 SLOAD
0x1c6 SWAP2
0x1c7 DUP2
0x1c8 ADD
0x1c9 SWAP2
0x1ca PUSH1 0x1
0x1cc PUSH1 0xa0
0x1ce PUSH1 0x2
0x1d0 EXP
0x1d1 SUB
0x1d2 AND
0x1d3 PUSH4 0x40c10f19
0x1d8 CALLER
0x1d9 DUP5
0x1da PUSH1 0x0
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df PUSH1 0x20
0x1e1 ADD
0x1e2 MSTORE
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 PUSH1 0xe0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb PUSH4 0xffffffff
0x1f0 DUP6
0x1f1 AND
0x1f2 MUL
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd SWAP1
0x1fe SWAP3
0x1ff AND
0x200 PUSH1 0x4
0x202 DUP4
0x203 ADD
0x204 MSTORE
0x205 PUSH1 0x24
0x207 DUP3
0x208 ADD
0x209 MSTORE
0x20a PUSH1 0x44
0x20c ADD
0x20d PUSH1 0x20
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 DUP4
0x214 SUB
0x215 DUP2
0x216 PUSH1 0x0
0x218 DUP8
0x219 DUP1
0x21a EXTCODESIZE
0x21b ISZERO
0x21c ISZERO
0x21d PUSH2 0x225
0x220 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V171 = 0x1
0x1c5: V172 = S[0x1]
0x1c8: V173 = ADD S0 S1
0x1ca: V174 = 0x1
0x1cc: V175 = 0xa0
0x1ce: V176 = 0x2
0x1d0: V177 = EXP 0x2 0xa0
0x1d1: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d2: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x1d3: V180 = 0x40c10f19
0x1d8: V181 = CALLER
0x1da: V182 = 0x0
0x1dc: V183 = 0x40
0x1de: V184 = M[0x40]
0x1df: V185 = 0x20
0x1e1: V186 = ADD 0x20 V184
0x1e2: M[V186] = 0x0
0x1e3: V187 = 0x40
0x1e5: V188 = M[0x40]
0x1e6: V189 = 0xe0
0x1e8: V190 = 0x2
0x1ea: V191 = EXP 0x2 0xe0
0x1eb: V192 = 0xffffffff
0x1f1: V193 = AND 0x40c10f19 0xffffffff
0x1f2: V194 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x1f4: M[V188] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x1f5: V195 = 0x1
0x1f7: V196 = 0xa0
0x1f9: V197 = 0x2
0x1fb: V198 = EXP 0x2 0xa0
0x1fc: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ff: V200 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x200: V201 = 0x4
0x203: V202 = ADD V188 0x4
0x204: M[V202] = V200
0x205: V203 = 0x24
0x208: V204 = ADD V188 0x24
0x209: M[V204] = V173
0x20a: V205 = 0x44
0x20c: V206 = ADD 0x44 V188
0x20d: V207 = 0x20
0x20f: V208 = 0x40
0x211: V209 = M[0x40]
0x214: V210 = SUB V206 V209
0x216: V211 = 0x0
0x21a: V212 = EXTCODESIZE V179
0x21b: V213 = ISZERO V212
0x21c: V214 = ISZERO V213
0x21d: V215 = 0x225
0x220: JUMPI 0x225 V214
---
Entry stack: [V12, 0x5a, S1, S0]
Stack pops: 2
Stack additions: [V173, S0, V179, 0x40c10f19, V206, 0x20, V209, V210, V209, 0x0, V179]
Exit stack: [V12, 0x5a, V173, S0, V179, 0x40c10f19, V206, 0x20, V209, V210, V209, 0x0, V179]

================================

Block 0x221
[0x221:0x224]
---
Predecessors: [0x1c2]
Successors: []
---
0x221 PUSH1 0x0
0x223 DUP1
0x224 REVERT
---
0x221: V216 = 0x0
0x224: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a, V173, S9, V179, 0x40c10f19, V206, 0x20, V209, V210, V209, 0x0, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V173, S9, V179, 0x40c10f19, V206, 0x20, V209, V210, V209, 0x0, V179]

================================

Block 0x225
[0x225:0x231]
---
Predecessors: [0x1c2]
Successors: [0x232, 0x236]
---
0x225 JUMPDEST
0x226 PUSH2 0x2c6
0x229 GAS
0x22a SUB
0x22b CALL
0x22c ISZERO
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x225: JUMPDEST 
0x226: V217 = 0x2c6
0x229: V218 = GAS
0x22a: V219 = SUB V218 0x2c6
0x22b: V220 = CALL V219 V179 0x0 V209 V210 V209 0x20
0x22c: V221 = ISZERO V220
0x22d: V222 = ISZERO V221
0x22e: V223 = 0x236
0x231: JUMPI 0x236 V222
---
Entry stack: [V12, 0x5a, V173, S9, V179, 0x40c10f19, V206, 0x20, V209, V210, V209, 0x0, V179]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x5a, V173, S9, V179, 0x40c10f19, V206]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x225]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V224 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a, V173, S3, V179, 0x40c10f19, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V173, S3, V179, 0x40c10f19, V206]

================================

Block 0x236
[0x236:0x240]
---
Predecessors: [0x225]
Successors: [0x241]
---
0x236 JUMPDEST
0x237 POP
0x238 POP
0x239 POP
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e MLOAD
0x23f POP
0x240 POP
---
0x236: JUMPDEST 
0x23a: V225 = 0x40
0x23c: V226 = M[0x40]
0x23e: V227 = M[V226]
---
Entry stack: [V12, 0x5a, V173, S3, V179, 0x40c10f19, V206]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x5a, V173, S3]

================================

Block 0x241
[0x241:0x241]
---
Predecessors: [0x236]
Successors: [0x242]
---
0x241 JUMPDEST
---
0x241: JUMPDEST 
---
Entry stack: [V12, 0x5a, V173, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V173, S0]

================================

Block 0x242
[0x242:0x242]
---
Predecessors: [0x241]
Successors: [0x243]
---
0x242 JUMPDEST
---
0x242: JUMPDEST 
---
Entry stack: [V12, 0x5a, V173, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V173, S0]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x242]
Successors: [0x5a]
---
0x243 JUMPDEST
0x244 POP
0x245 POP
0x246 JUMP
---
0x243: JUMPDEST 
0x246: JUMP 0x5a
---
Entry stack: [V12, 0x5a, V173, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x247
[0x247:0x25d]
---
Predecessors: [0x68]
Successors: [0x25e, 0x262]
---
0x247 JUMPDEST
0x248 PUSH1 0x0
0x24a SLOAD
0x24b CALLER
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 SWAP1
0x255 DUP2
0x256 AND
0x257 SWAP2
0x258 AND
0x259 EQ
0x25a PUSH2 0x262
0x25d JUMPI
---
0x247: JUMPDEST 
0x248: V228 = 0x0
0x24a: V229 = S[0x0]
0x24b: V230 = CALLER
0x24c: V231 = 0x1
0x24e: V232 = 0xa0
0x250: V233 = 0x2
0x252: V234 = EXP 0x2 0xa0
0x253: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x258: V237 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0x259: V238 = EQ V237 V236
0x25a: V239 = 0x262
0x25d: JUMPI 0x262 V238
---
Entry stack: [V12, 0x5a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a]

================================

Block 0x25e
[0x25e:0x261]
---
Predecessors: [0x247]
Successors: []
---
0x25e PUSH1 0x0
0x260 DUP1
0x261 REVERT
---
0x25e: V240 = 0x0
0x261: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a]

================================

Block 0x262
[0x262:0x2a5]
---
Predecessors: [0x247]
Successors: [0x2a6, 0x2aa]
---
0x262 JUMPDEST
0x263 PUSH1 0x1
0x265 SLOAD
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e AND
0x26f PUSH4 0x7d64bcb4
0x274 PUSH1 0x0
0x276 PUSH1 0x40
0x278 MLOAD
0x279 PUSH1 0x20
0x27b ADD
0x27c MSTORE
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP2
0x281 PUSH4 0xffffffff
0x286 AND
0x287 PUSH1 0xe0
0x289 PUSH1 0x2
0x28b EXP
0x28c MUL
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x4
0x291 ADD
0x292 PUSH1 0x20
0x294 PUSH1 0x40
0x296 MLOAD
0x297 DUP1
0x298 DUP4
0x299 SUB
0x29a DUP2
0x29b PUSH1 0x0
0x29d DUP8
0x29e DUP1
0x29f EXTCODESIZE
0x2a0 ISZERO
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x262: JUMPDEST 
0x263: V241 = 0x1
0x265: V242 = S[0x1]
0x266: V243 = 0x1
0x268: V244 = 0xa0
0x26a: V245 = 0x2
0x26c: V246 = EXP 0x2 0xa0
0x26d: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26e: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x26f: V249 = 0x7d64bcb4
0x274: V250 = 0x0
0x276: V251 = 0x40
0x278: V252 = M[0x40]
0x279: V253 = 0x20
0x27b: V254 = ADD 0x20 V252
0x27c: M[V254] = 0x0
0x27d: V255 = 0x40
0x27f: V256 = M[0x40]
0x281: V257 = 0xffffffff
0x286: V258 = AND 0xffffffff 0x7d64bcb4
0x287: V259 = 0xe0
0x289: V260 = 0x2
0x28b: V261 = EXP 0x2 0xe0
0x28c: V262 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0x28e: M[V256] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0x28f: V263 = 0x4
0x291: V264 = ADD 0x4 V256
0x292: V265 = 0x20
0x294: V266 = 0x40
0x296: V267 = M[0x40]
0x299: V268 = SUB V264 V267
0x29b: V269 = 0x0
0x29f: V270 = EXTCODESIZE V248
0x2a0: V271 = ISZERO V270
0x2a1: V272 = ISZERO V271
0x2a2: V273 = 0x2aa
0x2a5: JUMPI 0x2aa V272
---
Entry stack: [V12, 0x5a]
Stack pops: 0
Stack additions: [V248, 0x7d64bcb4, V264, 0x20, V267, V268, V267, 0x0, V248]
Exit stack: [V12, 0x5a, V248, 0x7d64bcb4, V264, 0x20, V267, V268, V267, 0x0, V248]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x262]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V274 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a, V248, 0x7d64bcb4, V264, 0x20, V267, V268, V267, 0x0, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V248, 0x7d64bcb4, V264, 0x20, V267, V268, V267, 0x0, V248]

================================

Block 0x2aa
[0x2aa:0x2b6]
---
Predecessors: [0x262]
Successors: [0x2b7, 0x2bb]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x2c6
0x2ae GAS
0x2af SUB
0x2b0 CALL
0x2b1 ISZERO
0x2b2 ISZERO
0x2b3 PUSH2 0x2bb
0x2b6 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V275 = 0x2c6
0x2ae: V276 = GAS
0x2af: V277 = SUB V276 0x2c6
0x2b0: V278 = CALL V277 V248 0x0 V267 V268 V267 0x20
0x2b1: V279 = ISZERO V278
0x2b2: V280 = ISZERO V279
0x2b3: V281 = 0x2bb
0x2b6: JUMPI 0x2bb V280
---
Entry stack: [V12, 0x5a, V248, 0x7d64bcb4, V264, 0x20, V267, V268, V267, 0x0, V248]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x5a, V248, 0x7d64bcb4, V264]

================================

Block 0x2b7
[0x2b7:0x2ba]
---
Predecessors: [0x2aa]
Successors: []
---
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba REVERT
---
0x2b7: V282 = 0x0
0x2ba: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a, V248, 0x7d64bcb4, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V248, 0x7d64bcb4, V264]

================================

Block 0x2bb
[0x2bb:0x2c5]
---
Predecessors: [0x2aa]
Successors: [0x2c6]
---
0x2bb JUMPDEST
0x2bc POP
0x2bd POP
0x2be POP
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 DUP1
0x2c3 MLOAD
0x2c4 POP
0x2c5 POP
---
0x2bb: JUMPDEST 
0x2bf: V283 = 0x40
0x2c1: V284 = M[0x40]
0x2c3: V285 = M[V284]
---
Entry stack: [V12, 0x5a, V248, 0x7d64bcb4, V264]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x5a]

================================

Block 0x2c6
[0x2c6:0x2c6]
---
Predecessors: [0x2bb]
Successors: [0x2c7]
---
0x2c6 JUMPDEST
---
0x2c6: JUMPDEST 
---
Entry stack: [V12, 0x5a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a]

================================

Block 0x2c7
[0x2c7:0x2c8]
---
Predecessors: [0x2c6]
Successors: [0x5a]
---
0x2c7 JUMPDEST
0x2c8 JUMP
---
0x2c7: JUMPDEST 
0x2c8: JUMP 0x5a
---
Entry stack: [V12, 0x5a]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c9
[0x2c9:0x2d7]
---
Predecessors: [0x7d]
Successors: [0x85]
---
0x2c9 JUMPDEST
0x2ca PUSH1 0x0
0x2cc SLOAD
0x2cd PUSH1 0x1
0x2cf PUSH1 0xa0
0x2d1 PUSH1 0x2
0x2d3 EXP
0x2d4 SUB
0x2d5 AND
0x2d6 DUP2
0x2d7 JUMP
---
0x2c9: JUMPDEST 
0x2ca: V286 = 0x0
0x2cc: V287 = S[0x0]
0x2cd: V288 = 0x1
0x2cf: V289 = 0xa0
0x2d1: V290 = 0x2
0x2d3: V291 = EXP 0x2 0xa0
0x2d4: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d5: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x2d7: JUMP 0x85
---
Entry stack: [V12, 0x85]
Stack pops: 1
Stack additions: [S0, V293]
Exit stack: [V12, 0x85, V293]

================================

Block 0x2d8
[0x2d8:0x2ee]
---
Predecessors: [0xb6]
Successors: [0x2ef, 0x2f3]
---
0x2d8 JUMPDEST
0x2d9 PUSH1 0x0
0x2db SLOAD
0x2dc CALLER
0x2dd PUSH1 0x1
0x2df PUSH1 0xa0
0x2e1 PUSH1 0x2
0x2e3 EXP
0x2e4 SUB
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 AND
0x2e8 SWAP2
0x2e9 AND
0x2ea EQ
0x2eb PUSH2 0x2f3
0x2ee JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V294 = 0x0
0x2db: V295 = S[0x0]
0x2dc: V296 = CALLER
0x2dd: V297 = 0x1
0x2df: V298 = 0xa0
0x2e1: V299 = 0x2
0x2e3: V300 = EXP 0x2 0xa0
0x2e4: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e7: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x2e9: V303 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V304 = EQ V303 V302
0x2eb: V305 = 0x2f3
0x2ee: JUMPI 0x2f3 V304
---
Entry stack: [V12, 0x5a, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V69]

================================

Block 0x2ef
[0x2ef:0x2f2]
---
Predecessors: [0x2d8]
Successors: []
---
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 REVERT
---
0x2ef: V306 = 0x0
0x2f2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V69]

================================

Block 0x2f3
[0x2f3:0x303]
---
Predecessors: [0x2d8]
Successors: [0x304, 0x308]
---
0x2f3 JUMPDEST
0x2f4 PUSH1 0x1
0x2f6 PUSH1 0xa0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb SUB
0x2fc DUP2
0x2fd AND
0x2fe ISZERO
0x2ff ISZERO
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2f3: JUMPDEST 
0x2f4: V307 = 0x1
0x2f6: V308 = 0xa0
0x2f8: V309 = 0x2
0x2fa: V310 = EXP 0x2 0xa0
0x2fb: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V312 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V313 = ISZERO V312
0x2ff: V314 = ISZERO V313
0x300: V315 = 0x308
0x303: JUMPI 0x308 V314
---
Entry stack: [V12, 0x5a, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x5a, V69]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2f3]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V316 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5a, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V69]

================================

Block 0x308
[0x308:0x330]
---
Predecessors: [0x2f3]
Successors: [0x331]
---
0x308 JUMPDEST
0x309 PUSH1 0x0
0x30b DUP1
0x30c SLOAD
0x30d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x322 NOT
0x323 AND
0x324 PUSH1 0x1
0x326 PUSH1 0xa0
0x328 PUSH1 0x2
0x32a EXP
0x32b SUB
0x32c DUP4
0x32d AND
0x32e OR
0x32f SWAP1
0x330 SSTORE
---
0x308: JUMPDEST 
0x309: V317 = 0x0
0x30c: V318 = S[0x0]
0x30d: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x322: V320 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x323: V321 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V318
0x324: V322 = 0x1
0x326: V323 = 0xa0
0x328: V324 = 0x2
0x32a: V325 = EXP 0x2 0xa0
0x32b: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V327 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V328 = OR V327 V321
0x330: S[0x0] = V328
---
Entry stack: [V12, 0x5a, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x5a, V69]

================================

Block 0x331
[0x331:0x331]
---
Predecessors: [0x308]
Successors: [0x332]
---
0x331 JUMPDEST
---
0x331: JUMPDEST 
---
Entry stack: [V12, 0x5a, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, V69]

================================

Block 0x332
[0x332:0x334]
---
Predecessors: [0x331]
Successors: [0x5a]
---
0x332 JUMPDEST
0x333 POP
0x334 JUMP
---
0x332: JUMPDEST 
0x334: JUMP 0x5a
---
Entry stack: [V12, 0x5a, V69]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x335
[0x335:0x343]
---
Predecessors: [0xd7]
Successors: [0x85]
---
0x335 JUMPDEST
0x336 PUSH1 0x1
0x338 SLOAD
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 AND
0x342 DUP2
0x343 JUMP
---
0x335: JUMPDEST 
0x336: V329 = 0x1
0x338: V330 = S[0x1]
0x339: V331 = 0x1
0x33b: V332 = 0xa0
0x33d: V333 = 0x2
0x33f: V334 = EXP 0x2 0xa0
0x340: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x341: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x343: JUMP 0x85
---
Entry stack: [V12, 0x85]
Stack pops: 1
Stack additions: [S0, V336]
Exit stack: [V12, 0x85, V336]

================================

Block 0x344
[0x344:0x350]
---
Predecessors: [0x168]
Successors: [0x351, 0x360]
---
0x344 JUMPDEST
0x345 PUSH1 0x0
0x347 DUP3
0x348 DUP3
0x349 MUL
0x34a DUP4
0x34b ISZERO
0x34c DUP1
0x34d PUSH2 0x360
0x350 JUMPI
---
0x344: JUMPDEST 
0x345: V337 = 0x0
0x349: V338 = MUL V145 V147
0x34b: V339 = ISZERO V147
0x34d: V340 = 0x360
0x350: JUMPI 0x360 V339
---
Entry stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V338, V339]
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338, V339]

================================

Block 0x351
[0x351:0x35b]
---
Predecessors: [0x344]
Successors: [0x35c, 0x35d]
---
0x351 POP
0x352 DUP3
0x353 DUP5
0x354 DUP3
0x355 DUP2
0x356 ISZERO
0x357 ISZERO
0x358 PUSH2 0x35d
0x35b JUMPI
---
0x356: V341 = ISZERO V147
0x357: V342 = ISZERO V341
0x358: V343 = 0x35d
0x35b: JUMPI 0x35d V342
---
Entry stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338, V339]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338, V145, V147, V338]

================================

Block 0x35c
[0x35c:0x35c]
---
Predecessors: [0x351]
Successors: []
---
0x35c INVALID
---
0x35c: INVALID 
---
Entry stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338, V145, V147, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338, V145, V147, V338]

================================

Block 0x35d
[0x35d:0x35f]
---
Predecessors: [0x351]
Successors: [0x360]
---
0x35d JUMPDEST
0x35e DIV
0x35f EQ
---
0x35d: JUMPDEST 
0x35e: V344 = DIV V338 V147
0x35f: V345 = EQ V344 V145
---
Entry stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338, V145, V147, V338]
Stack pops: 3
Stack additions: [V345]
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338, V345]

================================

Block 0x360
[0x360:0x366]
---
Predecessors: [0x344, 0x35d]
Successors: [0x367, 0x368]
---
0x360 JUMPDEST
0x361 ISZERO
0x362 ISZERO
0x363 PUSH2 0x368
0x366 JUMPI
---
0x360: JUMPDEST 
0x361: V346 = ISZERO S0
0x362: V347 = ISZERO V346
0x363: V348 = 0x368
0x366: JUMPI 0x368 V347
---
Entry stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338]

================================

Block 0x367
[0x367:0x367]
---
Predecessors: [0x360]
Successors: []
---
0x367 INVALID
---
0x367: INVALID 
---
Entry stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338]

================================

Block 0x368
[0x368:0x36b]
---
Predecessors: [0x360]
Successors: [0x36c]
---
0x368 JUMPDEST
0x369 DUP1
0x36a SWAP2
0x36b POP
---
0x368: JUMPDEST 
---
Entry stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, 0x0, V338]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, V338, V338]

================================

Block 0x36c
[0x36c:0x372]
---
Predecessors: [0x368]
Successors: [0x189]
---
0x36c JUMPDEST
0x36d POP
0x36e SWAP3
0x36f SWAP2
0x370 POP
0x371 POP
0x372 JUMP
---
0x36c: JUMPDEST 
0x372: JUMP 0x189
---
Entry stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, 0x189, V147, V145, V338, V338]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x5a, 0x0, 0x0, 0x195, 0xde0b6b3a7640000, V338]

================================

Block 0x373
[0x373:0x37f]
---
Predecessors: [0x189, 0x1af]
Successors: [0x380, 0x381]
---
0x373 JUMPDEST
0x374 PUSH1 0x0
0x376 DUP1
0x377 DUP3
0x378 DUP5
0x379 DUP2
0x37a ISZERO
0x37b ISZERO
0x37c PUSH2 0x381
0x37f JUMPI
---
0x373: JUMPDEST 
0x374: V349 = 0x0
0x37a: V350 = ISZERO {0x5, 0xde0b6b3a7640000}
0x37b: V351 = ISZERO V350
0x37c: V352 = 0x381
0x37f: JUMPI 0x381 V351
---
Entry stack: [V12, 0x5a, S4, 0x0, {0x195, 0x1bf}, S1, {0x5, 0xde0b6b3a7640000}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, 0x5a, S4, 0x0, {0x195, 0x1bf}, S1, {0x5, 0xde0b6b3a7640000}, 0x0, 0x0, {0x5, 0xde0b6b3a7640000}, S1]

================================

Block 0x380
[0x380:0x380]
---
Predecessors: [0x373]
Successors: []
---
0x380 INVALID
---
0x380: INVALID 
---
Entry stack: [V12, 0x5a, S8, 0x0, {0x195, 0x1bf}, S5, {0x5, 0xde0b6b3a7640000}, 0x0, 0x0, {0x5, 0xde0b6b3a7640000}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5a, S8, 0x0, {0x195, 0x1bf}, S5, {0x5, 0xde0b6b3a7640000}, 0x0, 0x0, {0x5, 0xde0b6b3a7640000}, S0]

================================

Block 0x381
[0x381:0x387]
---
Predecessors: [0x373]
Successors: [0x388]
---
0x381 JUMPDEST
0x382 DIV
0x383 SWAP1
0x384 POP
0x385 DUP1
0x386 SWAP2
0x387 POP
---
0x381: JUMPDEST 
0x382: V353 = DIV S0 {0x5, 0xde0b6b3a7640000}
---
Entry stack: [V12, 0x5a, S8, 0x0, {0x195, 0x1bf}, S5, {0x5, 0xde0b6b3a7640000}, 0x0, 0x0, {0x5, 0xde0b6b3a7640000}, S0]
Stack pops: 4
Stack additions: [V353, V353]
Exit stack: [V12, 0x5a, S8, 0x0, {0x195, 0x1bf}, S5, {0x5, 0xde0b6b3a7640000}, V353, V353]

================================

Block 0x388
[0x388:0x38e]
---
Predecessors: [0x381]
Successors: [0x195, 0x1bf]
---
0x388 JUMPDEST
0x389 POP
0x38a SWAP3
0x38b SWAP2
0x38c POP
0x38d POP
0x38e JUMP
---
0x388: JUMPDEST 
0x38e: JUMP {0x195, 0x1bf}
---
Entry stack: [V12, 0x5a, S6, 0x0, {0x195, 0x1bf}, S3, {0x5, 0xde0b6b3a7640000}, V353, V353]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x5a, S6, 0x0, V353]

================================

Block 0x38f
[0x38f:0x3cb]
---
Predecessors: []
Successors: []
---
0x38f STOP
0x390 LOG1
0x391 PUSH6 0x627a7a723058
0x398 SHA3
0x399 GASLIMIT
0x39a GASPRICE
0x39b DUP5
0x39c PUSH15 0xe46945930466f04187a80179bcdd0a
0x3ac MISSING 0xc1
0x3ad MISSING 0xe6
0x3ae MISSING 0xe
0x3af MISSING 0xed
0x3b0 MISSING 0x27
0x3b1 MISSING 0x4f
0x3b2 PUSH25 0xec1a7530968a0029
---
0x38f: STOP 
0x390: LOG S0 S1 S2
0x391: V354 = 0x627a7a723058
0x398: V355 = SHA3 0x627a7a723058 S3
0x399: V356 = GASLIMIT
0x39a: V357 = GASPRICE
0x39c: V358 = 0xe46945930466f04187a80179bcdd0a
0x3ac: MISSING 0xc1
0x3ad: MISSING 0xe6
0x3ae: MISSING 0xe
0x3af: MISSING 0xed
0x3b0: MISSING 0x27
0x3b1: MISSING 0x4f
0x3b2: V359 = 0xec1a7530968a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xe46945930466f04187a80179bcdd0a, S5, V357, V356, V355, S4, S5, 0xec1a7530968a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x7d64bcb4
Entry block: 0x5d
Exit block: 0x5b
Body: 0x5a, 0x5b, 0x5d, 0x64, 0x68, 0x247, 0x25e, 0x262, 0x2a6, 0x2aa, 0x2b7, 0x2bb, 0x2c6, 0x2c7

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x72
Exit block: 0x85
Body: 0x72, 0x79, 0x7d, 0x85, 0x2c9

Function 2:
Public function signature: 0xb4427263
Entry block: 0x51
Exit block: 0x5b
Body: 0x51, 0x52, 0x5a, 0x5b

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0xab
Exit block: 0x5b
Body: 0x5a, 0x5b, 0xab, 0xb2, 0xb6, 0x2d8, 0x2ef, 0x2f3, 0x304, 0x308, 0x331, 0x332

Function 4:
Public function signature: 0xfc0c546a
Entry block: 0xcc
Exit block: 0x85
Body: 0x85, 0xcc, 0xd3, 0xd7, 0x335

Function 5:
Public fallback function
Entry block: 0x51
Exit block: 0x5b
Body: 0x51, 0x52, 0x5a, 0x5b

Function 6:
Private function
Entry block: 0xfb
Exit block: 0x332
Body: 0xfb, 0x11b, 0x134, 0x168, 0x189, 0x195, 0x1af, 0x1bf, 0x1c2, 0x225, 0x236, 0x241, 0x242, 0x243, 0x344, 0x351, 0x35d, 0x360, 0x368, 0x36c, 0x373, 0x381, 0x388

