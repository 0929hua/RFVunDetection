Block 0x0
[0x0:0x37]
---
Predecessors: []
Successors: [0x38, 0x5e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH4 0xffffffff
0xa PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x28 PUSH1 0x0
0x2a CALLDATALOAD
0x2b DIV
0x2c AND
0x2d PUSH4 0xa060bf3
0x32 DUP2
0x33 EQ
0x34 PUSH2 0x5e
0x37 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xffffffff
0xa: V3 = 0x100000000000000000000000000000000000000000000000000000000
0x28: V4 = 0x0
0x2a: V5 = CALLDATALOAD 0x0
0x2b: V6 = DIV V5 0x100000000000000000000000000000000000000000000000000000000
0x2c: V7 = AND V6 0xffffffff
0x2d: V8 = 0xa060bf3
0x33: V9 = EQ V7 0xa060bf3
0x34: V10 = 0x5e
0x37: JUMPI 0x5e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x38
[0x38:0x42]
---
Predecessors: [0x0]
Successors: [0x43, 0x79]
---
0x38 DUP1
0x39 PUSH4 0x5432202a
0x3e EQ
0x3f PUSH2 0x79
0x42 JUMPI
---
0x39: V11 = 0x5432202a
0x3e: V12 = EQ 0x5432202a V7
0x3f: V13 = 0x79
0x42: JUMPI 0x79 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x43
[0x43:0x4d]
---
Predecessors: [0x38]
Successors: [0x4e, 0xa0]
---
0x43 DUP1
0x44 PUSH4 0x919840ad
0x49 EQ
0x4a PUSH2 0xa0
0x4d JUMPI
---
0x44: V14 = 0x919840ad
0x49: V15 = EQ 0x919840ad V7
0x4a: V16 = 0xa0
0x4d: JUMPI 0xa0 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4e
[0x4e:0x58]
---
Predecessors: [0x43]
Successors: [0x59, 0xaa]
---
0x4e DUP1
0x4f PUSH4 0xd333ec79
0x54 EQ
0x55 PUSH2 0xaa
0x58 JUMPI
---
0x4f: V17 = 0xd333ec79
0x54: V18 = EQ 0xd333ec79 V7
0x55: V19 = 0xaa
0x58: JUMPI 0xaa V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x59
[0x59:0x5d]
---
Predecessors: [0x4e]
Successors: []
---
0x59 JUMPDEST
0x5a PUSH1 0x0
0x5c DUP1
0x5d REVERT
---
0x59: JUMPDEST 
0x5a: V20 = 0x0
0x5d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5e
[0x5e:0x64]
---
Predecessors: [0x0]
Successors: [0x65, 0x69]
---
0x5e JUMPDEST
0x5f CALLVALUE
0x60 ISZERO
0x61 PUSH2 0x69
0x64 JUMPI
---
0x5e: JUMPDEST 
0x5f: V21 = CALLVALUE
0x60: V22 = ISZERO V21
0x61: V23 = 0x69
0x64: JUMPI 0x69 V22
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x65
[0x65:0x68]
---
Predecessors: [0x5e]
Successors: []
---
0x65 PUSH1 0x0
0x67 DUP1
0x68 REVERT
---
0x65: V24 = 0x0
0x68: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x69
[0x69:0x76]
---
Predecessors: [0x5e]
Successors: [0xcb]
---
0x69 JUMPDEST
0x6a PUSH2 0x77
0x6d PUSH1 0x4
0x6f CALLDATALOAD
0x70 PUSH1 0x24
0x72 CALLDATALOAD
0x73 PUSH2 0xcb
0x76 JUMP
---
0x69: JUMPDEST 
0x6a: V25 = 0x77
0x6d: V26 = 0x4
0x6f: V27 = CALLDATALOAD 0x4
0x70: V28 = 0x24
0x72: V29 = CALLDATALOAD 0x24
0x73: V30 = 0xcb
0x76: JUMP 0xcb
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x77, V27, V29]
Exit stack: [V7, 0x77, V27, V29]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x1b5, 0x1e4, 0x23d]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V7, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, S1, S0]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0x38]
Successors: [0x80, 0x84]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V31 = CALLVALUE
0x7b: V32 = ISZERO V31
0x7c: V33 = 0x84
0x7f: JUMPI 0x84 V32
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x79]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V34 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x84
[0x84:0x8b]
---
Predecessors: [0x79]
Successors: [0x1ba]
---
0x84 JUMPDEST
0x85 PUSH2 0x8c
0x88 PUSH2 0x1ba
0x8b JUMP
---
0x84: JUMPDEST 
0x85: V35 = 0x8c
0x88: V36 = 0x1ba
0x8b: JUMP 0x1ba
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V7, 0x8c]

================================

Block 0x8c
[0x8c:0x9f]
---
Predecessors: [0x1cd]
Successors: []
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f MLOAD
0x90 SWAP1
0x91 ISZERO
0x92 ISZERO
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x20
0x97 ADD
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c SWAP2
0x9d SUB
0x9e SWAP1
0x9f RETURN
---
0x8c: JUMPDEST 
0x8d: V37 = 0x40
0x8f: V38 = M[0x40]
0x91: V39 = ISZERO V169
0x92: V40 = ISZERO V39
0x94: M[V38] = V40
0x95: V41 = 0x20
0x97: V42 = ADD 0x20 V38
0x98: V43 = 0x40
0x9a: V44 = M[0x40]
0x9d: V45 = SUB V42 V44
0x9f: RETURN V44 V45
---
Entry stack: [V7, V169]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xa0
[0xa0:0xa7]
---
Predecessors: [0x43]
Successors: [0x1d0]
---
0xa0 JUMPDEST
0xa1 PUSH2 0x77
0xa4 PUSH2 0x1d0
0xa7 JUMP
---
0xa0: JUMPDEST 
0xa1: V46 = 0x77
0xa4: V47 = 0x1d0
0xa7: JUMP 0x1d0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V7, 0x77]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: []
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaa
[0xaa:0xb0]
---
Predecessors: [0x4e]
Successors: [0xb1, 0xb5]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0xaa: JUMPDEST 
0xab: V48 = CALLVALUE
0xac: V49 = ISZERO V48
0xad: V50 = 0xb5
0xb0: JUMPI 0xb5 V49
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0xaa]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V51 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb5
[0xb5:0xc8]
---
Predecessors: [0xaa]
Successors: [0x1e6]
---
0xb5 JUMPDEST
0xb6 PUSH2 0x77
0xb9 PUSH1 0x1
0xbb PUSH1 0xa0
0xbd PUSH1 0x2
0xbf EXP
0xc0 SUB
0xc1 PUSH1 0x4
0xc3 CALLDATALOAD
0xc4 AND
0xc5 PUSH2 0x1e6
0xc8 JUMP
---
0xb5: JUMPDEST 
0xb6: V52 = 0x77
0xb9: V53 = 0x1
0xbb: V54 = 0xa0
0xbd: V55 = 0x2
0xbf: V56 = EXP 0x2 0xa0
0xc0: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1: V58 = 0x4
0xc3: V59 = CALLDATALOAD 0x4
0xc4: V60 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V61 = 0x1e6
0xc8: JUMP 0x1e6
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x77, V60]
Exit stack: [V7, 0x77, V60]

================================

Block 0xc9
[0xc9:0xca]
---
Predecessors: []
Successors: []
---
0xc9 JUMPDEST
0xca STOP
---
0xc9: JUMPDEST 
0xca: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcb
[0xcb:0xe2]
---
Predecessors: [0x69]
Successors: [0xe3, 0xe7]
---
0xcb JUMPDEST
0xcc PUSH1 0x0
0xce DUP1
0xcf SLOAD
0xd0 CALLER
0xd1 PUSH1 0x1
0xd3 PUSH1 0xa0
0xd5 PUSH1 0x2
0xd7 EXP
0xd8 SUB
0xd9 SWAP1
0xda DUP2
0xdb AND
0xdc SWAP2
0xdd AND
0xde EQ
0xdf PUSH2 0xe7
0xe2 JUMPI
---
0xcb: JUMPDEST 
0xcc: V62 = 0x0
0xcf: V63 = S[0x0]
0xd0: V64 = CALLER
0xd1: V65 = 0x1
0xd3: V66 = 0xa0
0xd5: V67 = 0x2
0xd7: V68 = EXP 0x2 0xa0
0xd8: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xdd: V71 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xde: V72 = EQ V71 V70
0xdf: V73 = 0xe7
0xe2: JUMPI 0xe7 V72
---
Entry stack: [V7, 0x77, V27, V29]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V7, 0x77, V27, V29, 0x0]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0xcb]
Successors: []
---
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 REVERT
---
0xe3: V74 = 0x0
0xe6: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77, V27, V29, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, 0x0]

================================

Block 0xe7
[0xe7:0xf8]
---
Predecessors: [0xcb]
Successors: [0xf9, 0xfd]
---
0xe7 JUMPDEST
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 ADDRESS
0xf1 AND
0xf2 BALANCE
0xf3 ISZERO
0xf4 ISZERO
0xf5 PUSH2 0xfd
0xf8 JUMPI
---
0xe7: JUMPDEST 
0xe8: V75 = 0x1
0xea: V76 = 0xa0
0xec: V77 = 0x2
0xee: V78 = EXP 0x2 0xa0
0xef: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V80 = ADDRESS
0xf1: V81 = AND V80 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V82 = BALANCE V81
0xf3: V83 = ISZERO V82
0xf4: V84 = ISZERO V83
0xf5: V85 = 0xfd
0xf8: JUMPI 0xfd V84
---
Entry stack: [V7, 0x77, V27, V29, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, 0x0]

================================

Block 0xf9
[0xf9:0xfc]
---
Predecessors: [0xe7]
Successors: []
---
0xf9 PUSH1 0x0
0xfb DUP1
0xfc REVERT
---
0xf9: V86 = 0x0
0xfc: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77, V27, V29, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, 0x0]

================================

Block 0xfd
[0xfd:0x123]
---
Predecessors: [0xe7]
Successors: [0x124, 0x128]
---
0xfd JUMPDEST
0xfe DUP3
0xff DUP3
0x100 PUSH1 0x40
0x102 MLOAD
0x103 SWAP2
0x104 DUP3
0x105 MSTORE
0x106 PUSH1 0x20
0x108 DUP3
0x109 ADD
0x10a MSTORE
0x10b PUSH1 0x40
0x10d SWAP1
0x10e DUP2
0x10f ADD
0x110 SWAP1
0x111 MLOAD
0x112 SWAP1
0x113 DUP2
0x114 SWAP1
0x115 SUB
0x116 SWAP1
0x117 SHA3
0x118 PUSH1 0x3
0x11a SLOAD
0x11b SWAP1
0x11c SWAP2
0x11d POP
0x11e DUP2
0x11f EQ
0x120 PUSH2 0x128
0x123 JUMPI
---
0xfd: JUMPDEST 
0x100: V87 = 0x40
0x102: V88 = M[0x40]
0x105: M[V88] = V27
0x106: V89 = 0x20
0x109: V90 = ADD V88 0x20
0x10a: M[V90] = V29
0x10b: V91 = 0x40
0x10f: V92 = ADD 0x40 V88
0x111: V93 = M[0x40]
0x115: V94 = SUB V92 V93
0x117: V95 = SHA3 V93 V94
0x118: V96 = 0x3
0x11a: V97 = S[0x3]
0x11f: V98 = EQ V95 V97
0x120: V99 = 0x128
0x123: JUMPI 0x128 V98
---
Entry stack: [V7, 0x77, V27, V29, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V95]
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0xfd]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V100 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x128
[0x128:0x13b]
---
Predecessors: [0xfd]
Successors: [0x13c, 0x179]
---
0x128 JUMPDEST
0x129 PUSH1 0x4
0x12b SLOAD
0x12c PUSH8 0xffffffffffffffff
0x135 AND
0x136 TIMESTAMP
0x137 GT
0x138 PUSH2 0x179
0x13b JUMPI
---
0x128: JUMPDEST 
0x129: V101 = 0x4
0x12b: V102 = S[0x4]
0x12c: V103 = 0xffffffffffffffff
0x135: V104 = AND 0xffffffffffffffff V102
0x136: V105 = TIMESTAMP
0x137: V106 = GT V105 V104
0x138: V107 = 0x179
0x13b: JUMPI 0x179 V106
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x13c
[0x13c:0x16f]
---
Predecessors: [0x128]
Successors: [0x170, 0x174]
---
0x13c PUSH1 0x2
0x13e SLOAD
0x13f PUSH1 0x1
0x141 PUSH1 0xa0
0x143 PUSH1 0x2
0x145 EXP
0x146 SUB
0x147 SWAP1
0x148 DUP2
0x149 AND
0x14a SWAP1
0x14b ADDRESS
0x14c AND
0x14d BALANCE
0x14e DUP1
0x14f ISZERO
0x150 PUSH2 0x8fc
0x153 MUL
0x154 SWAP1
0x155 PUSH1 0x40
0x157 MLOAD
0x158 PUSH1 0x0
0x15a PUSH1 0x40
0x15c MLOAD
0x15d DUP1
0x15e DUP4
0x15f SUB
0x160 DUP2
0x161 DUP6
0x162 DUP9
0x163 DUP9
0x164 CALL
0x165 SWAP4
0x166 POP
0x167 POP
0x168 POP
0x169 POP
0x16a ISZERO
0x16b ISZERO
0x16c PUSH2 0x174
0x16f JUMPI
---
0x13c: V108 = 0x2
0x13e: V109 = S[0x2]
0x13f: V110 = 0x1
0x141: V111 = 0xa0
0x143: V112 = 0x2
0x145: V113 = EXP 0x2 0xa0
0x146: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x149: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x14b: V116 = ADDRESS
0x14c: V117 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V118 = BALANCE V117
0x14f: V119 = ISZERO V118
0x150: V120 = 0x8fc
0x153: V121 = MUL 0x8fc V119
0x155: V122 = 0x40
0x157: V123 = M[0x40]
0x158: V124 = 0x0
0x15a: V125 = 0x40
0x15c: V126 = M[0x40]
0x15f: V127 = SUB V123 V126
0x164: V128 = CALL V121 V115 V118 V126 V127 V126 0x0
0x16a: V129 = ISZERO V128
0x16b: V130 = ISZERO V129
0x16c: V131 = 0x174
0x16f: JUMPI 0x174 V130
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x170
[0x170:0x173]
---
Predecessors: [0x13c]
Successors: []
---
0x170 PUSH1 0x0
0x172 DUP1
0x173 REVERT
---
0x170: V132 = 0x0
0x173: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x174
[0x174:0x178]
---
Predecessors: [0x13c]
Successors: [0x1b2]
---
0x174 JUMPDEST
0x175 PUSH2 0x1b2
0x178 JUMP
---
0x174: JUMPDEST 
0x175: V133 = 0x1b2
0x178: JUMP 0x1b2
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x179
[0x179:0x1ad]
---
Predecessors: [0x128]
Successors: [0x1ae, 0x1b2]
---
0x179 JUMPDEST
0x17a PUSH1 0x1
0x17c SLOAD
0x17d PUSH1 0x1
0x17f PUSH1 0xa0
0x181 PUSH1 0x2
0x183 EXP
0x184 SUB
0x185 SWAP1
0x186 DUP2
0x187 AND
0x188 SWAP1
0x189 ADDRESS
0x18a AND
0x18b BALANCE
0x18c DUP1
0x18d ISZERO
0x18e PUSH2 0x8fc
0x191 MUL
0x192 SWAP1
0x193 PUSH1 0x40
0x195 MLOAD
0x196 PUSH1 0x0
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c DUP4
0x19d SUB
0x19e DUP2
0x19f DUP6
0x1a0 DUP9
0x1a1 DUP9
0x1a2 CALL
0x1a3 SWAP4
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 POP
0x1a8 ISZERO
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x179: JUMPDEST 
0x17a: V134 = 0x1
0x17c: V135 = S[0x1]
0x17d: V136 = 0x1
0x17f: V137 = 0xa0
0x181: V138 = 0x2
0x183: V139 = EXP 0x2 0xa0
0x184: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x189: V142 = ADDRESS
0x18a: V143 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V144 = BALANCE V143
0x18d: V145 = ISZERO V144
0x18e: V146 = 0x8fc
0x191: V147 = MUL 0x8fc V145
0x193: V148 = 0x40
0x195: V149 = M[0x40]
0x196: V150 = 0x0
0x198: V151 = 0x40
0x19a: V152 = M[0x40]
0x19d: V153 = SUB V149 V152
0x1a2: V154 = CALL V147 V141 V144 V152 V153 V152 0x0
0x1a8: V155 = ISZERO V154
0x1a9: V156 = ISZERO V155
0x1aa: V157 = 0x1b2
0x1ad: JUMPI 0x1b2 V156
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x179]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V158 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x1b2
[0x1b2:0x1b2]
---
Predecessors: [0x174, 0x179]
Successors: [0x1b3]
---
0x1b2 JUMPDEST
---
0x1b2: JUMPDEST 
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x1b3
[0x1b3:0x1b3]
---
Predecessors: [0x1b2]
Successors: [0x1b4]
---
0x1b3 JUMPDEST
---
0x1b3: JUMPDEST 
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x1b4
[0x1b4:0x1b4]
---
Predecessors: [0x1b3]
Successors: [0x1b5]
---
0x1b4 JUMPDEST
---
0x1b4: JUMPDEST 
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V27, V29, V95]

================================

Block 0x1b5
[0x1b5:0x1b9]
---
Predecessors: [0x1b4]
Successors: [0x77]
---
0x1b5 JUMPDEST
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 JUMP
---
0x1b5: JUMPDEST 
0x1b9: JUMP 0x77
---
Entry stack: [V7, 0x77, V27, V29, V95]
Stack pops: 4
Stack additions: []
Exit stack: [V7]

================================

Block 0x1ba
[0x1ba:0x1cc]
---
Predecessors: [0x84]
Successors: [0x1cd]
---
0x1ba JUMPDEST
0x1bb PUSH1 0x0
0x1bd SLOAD
0x1be CALLER
0x1bf PUSH1 0x1
0x1c1 PUSH1 0xa0
0x1c3 PUSH1 0x2
0x1c5 EXP
0x1c6 SUB
0x1c7 SWAP1
0x1c8 DUP2
0x1c9 AND
0x1ca SWAP2
0x1cb AND
0x1cc EQ
---
0x1ba: JUMPDEST 
0x1bb: V159 = 0x0
0x1bd: V160 = S[0x0]
0x1be: V161 = CALLER
0x1bf: V162 = 0x1
0x1c1: V163 = 0xa0
0x1c3: V164 = 0x2
0x1c5: V165 = EXP 0x2 0xa0
0x1c6: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c9: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1cb: V168 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V169 = EQ V168 V167
---
Entry stack: [V7, 0x8c]
Stack pops: 0
Stack additions: [V169]
Exit stack: [V7, 0x8c, V169]

================================

Block 0x1cd
[0x1cd:0x1cf]
---
Predecessors: [0x1ba]
Successors: [0x8c]
---
0x1cd JUMPDEST
0x1ce SWAP1
0x1cf JUMP
---
0x1cd: JUMPDEST 
0x1cf: JUMP 0x8c
---
Entry stack: [V7, 0x8c, V169]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, V169]

================================

Block 0x1d0
[0x1d0:0x1d6]
---
Predecessors: [0xa0]
Successors: [0x1d7, 0x1db]
---
0x1d0 JUMPDEST
0x1d1 CALLVALUE
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V170 = CALLVALUE
0x1d2: V171 = ISZERO V170
0x1d3: V172 = 0x1db
0x1d6: JUMPI 0x1db V171
---
Entry stack: [V7, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1d0]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V173 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77]

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x1d0]
Successors: [0x240]
---
0x1db JUMPDEST
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x240
0x1e2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V174 = 0x1e3
0x1df: V175 = 0x240
0x1e2: JUMP 0x240
---
Entry stack: [V7, 0x77]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V7, 0x77, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x1e3]
---
Predecessors: [0x1e4, 0x28b, 0x33c]
Successors: [0x1e4]
---
0x1e3 JUMPDEST
---
0x1e3: JUMPDEST 
---
Entry stack: [V7, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, S2, S1, S0]

================================

Block 0x1e4
[0x1e4:0x1e5]
---
Predecessors: [0x1e3]
Successors: [0x77, 0x1e3]
---
0x1e4 JUMPDEST
0x1e5 JUMP
---
0x1e4: JUMPDEST 
0x1e5: JUMP S0
---
Entry stack: [V7, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, S2, S1]

================================

Block 0x1e6
[0x1e6:0x1fc]
---
Predecessors: [0xb5]
Successors: [0x1fd, 0x201]
---
0x1e6 JUMPDEST
0x1e7 PUSH1 0x0
0x1e9 SLOAD
0x1ea CALLER
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 SWAP1
0x1f4 DUP2
0x1f5 AND
0x1f6 SWAP2
0x1f7 AND
0x1f8 EQ
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V176 = 0x0
0x1e9: V177 = S[0x0]
0x1ea: V178 = CALLER
0x1eb: V179 = 0x1
0x1ed: V180 = 0xa0
0x1ef: V181 = 0x2
0x1f1: V182 = EXP 0x2 0xa0
0x1f2: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x1f7: V185 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V186 = EQ V185 V184
0x1f9: V187 = 0x201
0x1fc: JUMPI 0x201 V186
---
Entry stack: [V7, 0x77, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V60]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x1e6]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V188 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V60]

================================

Block 0x201
[0x201:0x211]
---
Predecessors: [0x1e6]
Successors: [0x212, 0x213]
---
0x201 JUMPDEST
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a DUP2
0x20b AND
0x20c ISZERO
0x20d ISZERO
0x20e PUSH2 0x213
0x211 JUMPI
---
0x201: JUMPDEST 
0x202: V189 = 0x1
0x204: V190 = 0xa0
0x206: V191 = 0x2
0x208: V192 = EXP 0x2 0xa0
0x209: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V194 = AND V60 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V195 = ISZERO V194
0x20d: V196 = ISZERO V195
0x20e: V197 = 0x213
0x211: JUMPI 0x213 V196
---
Entry stack: [V7, 0x77, V60]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x77, V60]

================================

Block 0x212
[0x212:0x212]
---
Predecessors: [0x201]
Successors: []
---
0x212 INVALID
---
0x212: INVALID 
---
Entry stack: [V7, 0x77, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V60]

================================

Block 0x213
[0x213:0x23b]
---
Predecessors: [0x201]
Successors: [0x23c]
---
0x213 JUMPDEST
0x214 PUSH1 0x0
0x216 DUP1
0x217 SLOAD
0x218 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22d NOT
0x22e AND
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 DUP4
0x238 AND
0x239 OR
0x23a SWAP1
0x23b SSTORE
---
0x213: JUMPDEST 
0x214: V198 = 0x0
0x217: V199 = S[0x0]
0x218: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V201 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V202 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V199
0x22f: V203 = 0x1
0x231: V204 = 0xa0
0x233: V205 = 0x2
0x235: V206 = EXP 0x2 0xa0
0x236: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x238: V208 = AND V60 0xffffffffffffffffffffffffffffffffffffffff
0x239: V209 = OR V208 V202
0x23b: S[0x0] = V209
---
Entry stack: [V7, 0x77, V60]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x77, V60]

================================

Block 0x23c
[0x23c:0x23c]
---
Predecessors: [0x213]
Successors: [0x23d]
---
0x23c JUMPDEST
---
0x23c: JUMPDEST 
---
Entry stack: [V7, 0x77, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V60]

================================

Block 0x23d
[0x23d:0x23f]
---
Predecessors: [0x23c]
Successors: [0x77]
---
0x23d JUMPDEST
0x23e POP
0x23f JUMP
---
0x23d: JUMPDEST 
0x23f: JUMP 0x77
---
Entry stack: [V7, 0x77, V60]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x240
[0x240:0x256]
---
Predecessors: [0x1db]
Successors: [0x257, 0x25b]
---
0x240 JUMPDEST
0x241 PUSH1 0x0
0x243 SLOAD
0x244 CALLER
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d SWAP1
0x24e DUP2
0x24f AND
0x250 SWAP2
0x251 AND
0x252 EQ
0x253 PUSH2 0x25b
0x256 JUMPI
---
0x240: JUMPDEST 
0x241: V210 = 0x0
0x243: V211 = S[0x0]
0x244: V212 = CALLER
0x245: V213 = 0x1
0x247: V214 = 0xa0
0x249: V215 = 0x2
0x24b: V216 = EXP 0x2 0xa0
0x24c: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x251: V219 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0x252: V220 = EQ V219 V218
0x253: V221 = 0x25b
0x256: JUMPI 0x25b V220
---
Entry stack: [V7, 0x77, 0x1e3]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, 0x1e3]

================================

Block 0x257
[0x257:0x25a]
---
Predecessors: [0x240]
Successors: []
---
0x257 PUSH1 0x0
0x259 DUP1
0x25a REVERT
---
0x257: V222 = 0x0
0x25a: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77, 0x1e3]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, 0x1e3]

================================

Block 0x25b
[0x25b:0x27e]
---
Predecessors: [0x240]
Successors: [0x27f, 0x283]
---
0x25b JUMPDEST
0x25c PUSH1 0x0
0x25e SLOAD
0x25f PUSH21 0x10000000000000000000000000000000000000000
0x275 SWAP1
0x276 DIV
0x277 PUSH1 0xff
0x279 AND
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x25b: JUMPDEST 
0x25c: V223 = 0x0
0x25e: V224 = S[0x0]
0x25f: V225 = 0x10000000000000000000000000000000000000000
0x276: V226 = DIV V224 0x10000000000000000000000000000000000000000
0x277: V227 = 0xff
0x279: V228 = AND 0xff V226
0x27a: V229 = ISZERO V228
0x27b: V230 = 0x283
0x27e: JUMPI 0x283 V229
---
Entry stack: [V7, 0x77, 0x1e3]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, 0x1e3]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x25b]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V231 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77, 0x1e3]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, 0x1e3]

================================

Block 0x283
[0x283:0x28a]
---
Predecessors: [0x25b]
Successors: [0x310]
---
0x283 JUMPDEST
0x284 PUSH2 0x28b
0x287 PUSH2 0x310
0x28a JUMP
---
0x283: JUMPDEST 
0x284: V232 = 0x28b
0x287: V233 = 0x310
0x28a: JUMP 0x310
---
Entry stack: [V7, 0x77, 0x1e3]
Stack pops: 0
Stack additions: [0x28b]
Exit stack: [V7, 0x77, 0x1e3, 0x28b]

================================

Block 0x28b
[0x28b:0x290]
---
Predecessors: [0x339]
Successors: [0x1e3, 0x291]
---
0x28b JUMPDEST
0x28c ISZERO
0x28d PUSH2 0x1e3
0x290 JUMPI
---
0x28b: JUMPDEST 
0x28c: V234 = ISZERO S0
0x28d: V235 = 0x1e3
0x290: JUMPI 0x1e3 V234
---
Entry stack: [V7, 0x77, 0x1e3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x77, 0x1e3]

================================

Block 0x291
[0x291:0x309]
---
Predecessors: [0x28b]
Successors: [0x33c]
---
0x291 PUSH32 0xcdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb
0x2b2 ADDRESS
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb AND
0x2bc BALANCE
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 SWAP1
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 DUP1
0x2ca SWAP2
0x2cb SUB
0x2cc SWAP1
0x2cd LOG1
0x2ce PUSH1 0x0
0x2d0 DUP1
0x2d1 SLOAD
0x2d2 PUSH21 0xff0000000000000000000000000000000000000000
0x2e8 NOT
0x2e9 AND
0x2ea PUSH21 0x10000000000000000000000000000000000000000
0x300 OR
0x301 SWAP1
0x302 SSTORE
0x303 PUSH2 0x1e3
0x306 PUSH2 0x33c
0x309 JUMP
---
0x291: V236 = 0xcdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb
0x2b2: V237 = ADDRESS
0x2b3: V238 = 0x1
0x2b5: V239 = 0xa0
0x2b7: V240 = 0x2
0x2b9: V241 = EXP 0x2 0xa0
0x2ba: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bb: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x2bc: V244 = BALANCE V243
0x2bd: V245 = 0x40
0x2bf: V246 = M[0x40]
0x2c2: M[V246] = V244
0x2c3: V247 = 0x20
0x2c5: V248 = ADD 0x20 V246
0x2c6: V249 = 0x40
0x2c8: V250 = M[0x40]
0x2cb: V251 = SUB V248 V250
0x2cd: LOG V250 V251 0xcdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb
0x2ce: V252 = 0x0
0x2d1: V253 = S[0x0]
0x2d2: V254 = 0xff0000000000000000000000000000000000000000
0x2e8: V255 = NOT 0xff0000000000000000000000000000000000000000
0x2e9: V256 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V253
0x2ea: V257 = 0x10000000000000000000000000000000000000000
0x300: V258 = OR 0x10000000000000000000000000000000000000000 V256
0x302: S[0x0] = V258
0x303: V259 = 0x1e3
0x306: V260 = 0x33c
0x309: JUMP 0x33c
---
Entry stack: [V7, 0x77, 0x1e3]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V7, 0x77, 0x1e3, 0x1e3]

================================

Block 0x30a
[0x30a:0x30a]
---
Predecessors: []
Successors: [0x30b]
---
0x30a JUMPDEST
---
0x30a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30b
[0x30b:0x30b]
---
Predecessors: [0x30a]
Successors: [0x30c]
---
0x30b JUMPDEST
---
0x30b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30c
[0x30c:0x30c]
---
Predecessors: [0x30b]
Successors: [0x30d]
---
0x30c JUMPDEST
---
0x30c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30d
[0x30d:0x30d]
---
Predecessors: [0x30c]
Successors: [0x30e]
---
0x30d JUMPDEST
---
0x30d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30e
[0x30e:0x30f]
---
Predecessors: [0x30d]
Successors: []
Has unresolved jump.
---
0x30e JUMPDEST
0x30f JUMP
---
0x30e: JUMPDEST 
0x30f: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x310
[0x310:0x325]
---
Predecessors: [0x283]
Successors: [0x326, 0x336]
---
0x310 JUMPDEST
0x311 PUSH1 0x0
0x313 PUSH1 0x1
0x315 PUSH1 0xa0
0x317 PUSH1 0x2
0x319 EXP
0x31a SUB
0x31b ADDRESS
0x31c AND
0x31d BALANCE
0x31e ISZERO
0x31f DUP1
0x320 ISZERO
0x321 SWAP1
0x322 PUSH2 0x336
0x325 JUMPI
---
0x310: JUMPDEST 
0x311: V261 = 0x0
0x313: V262 = 0x1
0x315: V263 = 0xa0
0x317: V264 = 0x2
0x319: V265 = EXP 0x2 0xa0
0x31a: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31b: V267 = ADDRESS
0x31c: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x31d: V269 = BALANCE V268
0x31e: V270 = ISZERO V269
0x320: V271 = ISZERO V270
0x322: V272 = 0x336
0x325: JUMPI 0x336 V270
---
Entry stack: [V7, 0x77, 0x1e3, 0x28b]
Stack pops: 0
Stack additions: [0x0, V271]
Exit stack: [V7, 0x77, 0x1e3, 0x28b, 0x0, V271]

================================

Block 0x326
[0x326:0x335]
---
Predecessors: [0x310]
Successors: [0x336]
---
0x326 POP
0x327 PUSH1 0x4
0x329 SLOAD
0x32a PUSH8 0xffffffffffffffff
0x333 AND
0x334 TIMESTAMP
0x335 GT
---
0x327: V273 = 0x4
0x329: V274 = S[0x4]
0x32a: V275 = 0xffffffffffffffff
0x333: V276 = AND 0xffffffffffffffff V274
0x334: V277 = TIMESTAMP
0x335: V278 = GT V277 V276
---
Entry stack: [V7, 0x77, 0x1e3, 0x28b, 0x0, V271]
Stack pops: 1
Stack additions: [V278]
Exit stack: [V7, 0x77, 0x1e3, 0x28b, 0x0, V278]

================================

Block 0x336
[0x336:0x338]
---
Predecessors: [0x310, 0x326]
Successors: [0x339]
---
0x336 JUMPDEST
0x337 SWAP1
0x338 POP
---
0x336: JUMPDEST 
---
Entry stack: [V7, 0x77, 0x1e3, 0x28b, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0x77, 0x1e3, 0x28b, S0]

================================

Block 0x339
[0x339:0x33b]
---
Predecessors: [0x336]
Successors: [0x28b]
---
0x339 JUMPDEST
0x33a SWAP1
0x33b JUMP
---
0x339: JUMPDEST 
0x33b: JUMP 0x28b
---
Entry stack: [V7, 0x77, 0x1e3, 0x28b, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0x77, 0x1e3, S0]

================================

Block 0x33c
[0x33c:0x370]
---
Predecessors: [0x291]
Successors: [0x1e3, 0x371]
---
0x33c JUMPDEST
0x33d PUSH1 0x1
0x33f SLOAD
0x340 PUSH1 0x1
0x342 PUSH1 0xa0
0x344 PUSH1 0x2
0x346 EXP
0x347 SUB
0x348 SWAP1
0x349 DUP2
0x34a AND
0x34b SWAP1
0x34c ADDRESS
0x34d AND
0x34e BALANCE
0x34f DUP1
0x350 ISZERO
0x351 PUSH2 0x8fc
0x354 MUL
0x355 SWAP1
0x356 PUSH1 0x40
0x358 MLOAD
0x359 PUSH1 0x0
0x35b PUSH1 0x40
0x35d MLOAD
0x35e DUP1
0x35f DUP4
0x360 SUB
0x361 DUP2
0x362 DUP6
0x363 DUP9
0x364 DUP9
0x365 CALL
0x366 SWAP4
0x367 POP
0x368 POP
0x369 POP
0x36a POP
0x36b ISZERO
0x36c ISZERO
0x36d PUSH2 0x1e3
0x370 JUMPI
---
0x33c: JUMPDEST 
0x33d: V279 = 0x1
0x33f: V280 = S[0x1]
0x340: V281 = 0x1
0x342: V282 = 0xa0
0x344: V283 = 0x2
0x346: V284 = EXP 0x2 0xa0
0x347: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34a: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x34c: V287 = ADDRESS
0x34d: V288 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V289 = BALANCE V288
0x350: V290 = ISZERO V289
0x351: V291 = 0x8fc
0x354: V292 = MUL 0x8fc V290
0x356: V293 = 0x40
0x358: V294 = M[0x40]
0x359: V295 = 0x0
0x35b: V296 = 0x40
0x35d: V297 = M[0x40]
0x360: V298 = SUB V294 V297
0x365: V299 = CALL V292 V286 V289 V297 V298 V297 0x0
0x36b: V300 = ISZERO V299
0x36c: V301 = ISZERO V300
0x36d: V302 = 0x1e3
0x370: JUMPI 0x1e3 V301
---
Entry stack: [V7, 0x77, 0x1e3, 0x1e3]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, 0x1e3, 0x1e3]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x33c]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V303 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V7, 0x77, 0x1e3, 0x1e3]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, 0x1e3, 0x1e3]

================================

Block 0x375
[0x375:0x375]
---
Predecessors: []
Successors: [0x376]
---
0x375 JUMPDEST
---
0x375: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x376
[0x376:0x3ae]
---
Predecessors: [0x375]
Successors: []
---
0x376 JUMPDEST
0x377 JUMP
0x378 STOP
0x379 LOG1
0x37a PUSH6 0x627a7a723058
0x381 SHA3
0x382 MISSING 0x26
0x383 SWAP10
0x384 MISSING 0xe7
0x385 PC
0x386 PUSH7 0x5535d7f8ec7d71
0x38e DUP14
0x38f LOG3
0x390 DUP6
0x391 MISSING 0x46
0x392 PUSH1 0x9
0x394 MISSING 0xe2
0x395 DUP13
0x396 EXP
0x397 PUSH23 0x942dc46a2a4e76718de40029
---
0x376: JUMPDEST 
0x377: JUMP S0
0x378: STOP 
0x379: LOG S0 S1 S2
0x37a: V304 = 0x627a7a723058
0x381: V305 = SHA3 0x627a7a723058 S3
0x382: MISSING 0x26
0x384: MISSING 0xe7
0x385: V306 = PC
0x386: V307 = 0x5535d7f8ec7d71
0x38f: LOG S11 0x5535d7f8ec7d71 V306 S0 S1
0x391: MISSING 0x46
0x392: V308 = 0x9
0x394: MISSING 0xe2
0x396: V309 = EXP S12 S0
0x397: V310 = 0x942dc46a2a4e76718de40029
---
Entry stack: []
Stack pops: 7
Stack additions: [S10, S1, 0x942dc46a2a4e76718de40029, V309, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12]
Exit stack: []

================================

Function 0:
Public function signature: 0xa060bf3
Entry block: 0x5e
Exit block: 0x77
Body: 0x5e, 0x65, 0x69, 0x77, 0xcb, 0xe3, 0xe7, 0xf9, 0xfd, 0x124, 0x128, 0x13c, 0x170, 0x174, 0x179, 0x1ae, 0x1b2, 0x1b3, 0x1b4, 0x1b5

Function 1:
Public function signature: 0x5432202a
Entry block: 0x79
Exit block: 0x8c
Body: 0x79, 0x80, 0x84, 0x8c, 0x1ba, 0x1cd

Function 2:
Public function signature: 0x919840ad
Entry block: 0xa0
Exit block: 0x77
Body: 0x77, 0xa0, 0x1d0, 0x1d7, 0x1db, 0x1e3, 0x1e4, 0x240, 0x257, 0x25b, 0x27f, 0x283, 0x28b, 0x291, 0x310, 0x326, 0x336, 0x339, 0x33c, 0x371

Function 3:
Public function signature: 0xd333ec79
Entry block: 0xaa
Exit block: 0x77
Body: 0x77, 0xaa, 0xb1, 0xb5, 0x1e6, 0x1fd, 0x201, 0x212, 0x213, 0x23c, 0x23d

Function 4:
Public fallback function
Entry block: 0x59
Exit block: 0x59
Body: 0x59

