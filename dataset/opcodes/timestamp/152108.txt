Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x30e2fe81
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x30e2fe81
0x3b: V13 = EQ V11 0x30e2fe81
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8d]
---
0x40 DUP1
0x41 PUSH4 0x3ccfd60b
0x46 EQ
0x47 PUSH2 0x8d
0x4a JUMPI
---
0x41: V15 = 0x3ccfd60b
0x46: V16 = EQ 0x3ccfd60b V11
0x47: V17 = 0x8d
0x4a: JUMPI 0x8d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa2]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0xa2
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0xa2
0x55: JUMPI 0xa2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xd3]
---
0x56 DUP1
0x57 PUSH4 0xcdb78c82
0x5c EQ
0x5d PUSH2 0xd3
0x60 JUMPI
---
0x57: V21 = 0xcdb78c82
0x5c: V22 = EQ 0xcdb78c82 V11
0x5d: V23 = 0xd3
0x60: JUMPI 0xd3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x199, 0x1f2, 0x2b2]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 DUP1
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x63]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x6f
[0x6f:0x8c]
---
Predecessors: [0x63]
Successors: [0xf3]
---
0x6f JUMPDEST
0x70 POP
0x71 PUSH2 0x61
0x74 PUSH1 0x1
0x76 PUSH1 0xa0
0x78 PUSH1 0x2
0x7a EXP
0x7b SUB
0x7c PUSH1 0x4
0x7e CALLDATALOAD
0x7f DUP2
0x80 AND
0x81 SWAP1
0x82 PUSH1 0x24
0x84 CALLDATALOAD
0x85 AND
0x86 PUSH1 0x44
0x88 CALLDATALOAD
0x89 PUSH2 0xf3
0x8c JUMP
---
0x6f: JUMPDEST 
0x71: V28 = 0x61
0x74: V29 = 0x1
0x76: V30 = 0xa0
0x78: V31 = 0x2
0x7a: V32 = EXP 0x2 0xa0
0x7b: V33 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c: V34 = 0x4
0x7e: V35 = CALLDATALOAD 0x4
0x80: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x82: V37 = 0x24
0x84: V38 = CALLDATALOAD 0x24
0x85: V39 = AND V38 0xffffffffffffffffffffffffffffffffffffffff
0x86: V40 = 0x44
0x88: V41 = CALLDATALOAD 0x44
0x89: V42 = 0xf3
0x8c: JUMP 0xf3
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x61, V36, V39, V41]
Exit stack: [V11, 0x61, V36, V39, V41]

================================

Block 0x8d
[0x8d:0x94]
---
Predecessors: [0x40]
Successors: [0x95, 0x99]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f DUP1
0x90 ISZERO
0x91 PUSH2 0x99
0x94 JUMPI
---
0x8d: JUMPDEST 
0x8e: V43 = CALLVALUE
0x90: V44 = ISZERO V43
0x91: V45 = 0x99
0x94: JUMPI 0x99 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x8d]
Successors: []
---
0x95 PUSH1 0x0
0x97 DUP1
0x98 REVERT
---
0x95: V46 = 0x0
0x98: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0x99
[0x99:0xa1]
---
Predecessors: [0x8d]
Successors: [0x1a2]
---
0x99 JUMPDEST
0x9a POP
0x9b PUSH2 0x61
0x9e PUSH2 0x1a2
0xa1 JUMP
---
0x99: JUMPDEST 
0x9b: V47 = 0x61
0x9e: V48 = 0x1a2
0xa1: JUMP 0x1a2
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0x4b]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V49 = CALLVALUE
0xa5: V50 = ISZERO V49
0xa6: V51 = 0xae
0xa9: JUMPI 0xae V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V52 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xae
[0xae:0xb6]
---
Predecessors: [0xa2]
Successors: [0x1f4]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xb7
0xb3 PUSH2 0x1f4
0xb6 JUMP
---
0xae: JUMPDEST 
0xb0: V53 = 0xb7
0xb3: V54 = 0x1f4
0xb6: JUMP 0x1f4
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V11, 0xb7]

================================

Block 0xb7
[0xb7:0xd2]
---
Predecessors: [0x1f4]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x40
0xba DUP1
0xbb MLOAD
0xbc PUSH1 0x1
0xbe PUSH1 0xa0
0xc0 PUSH1 0x2
0xc2 EXP
0xc3 SUB
0xc4 SWAP1
0xc5 SWAP3
0xc6 AND
0xc7 DUP3
0xc8 MSTORE
0xc9 MLOAD
0xca SWAP1
0xcb DUP2
0xcc SWAP1
0xcd SUB
0xce PUSH1 0x20
0xd0 ADD
0xd1 SWAP1
0xd2 RETURN
---
0xb7: JUMPDEST 
0xb8: V55 = 0x40
0xbb: V56 = M[0x40]
0xbc: V57 = 0x1
0xbe: V58 = 0xa0
0xc0: V59 = 0x2
0xc2: V60 = EXP 0x2 0xa0
0xc3: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6: V62 = AND V167 0xffffffffffffffffffffffffffffffffffffffff
0xc8: M[V56] = V62
0xc9: V63 = M[0x40]
0xcd: V64 = SUB V56 V63
0xce: V65 = 0x20
0xd0: V66 = ADD 0x20 V64
0xd2: RETURN V63 V66
---
Entry stack: [V11, 0xb7, V167]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb7]

================================

Block 0xd3
[0xd3:0xf2]
---
Predecessors: [0x56]
Successors: [0x203]
---
0xd3 JUMPDEST
0xd4 PUSH2 0x61
0xd7 PUSH1 0x1
0xd9 PUSH1 0xa0
0xdb PUSH1 0x2
0xdd EXP
0xde SUB
0xdf PUSH1 0x4
0xe1 CALLDATALOAD
0xe2 AND
0xe3 PUSH4 0xffffffff
0xe8 PUSH1 0x24
0xea CALLDATALOAD
0xeb AND
0xec PUSH1 0x44
0xee CALLDATALOAD
0xef PUSH2 0x203
0xf2 JUMP
---
0xd3: JUMPDEST 
0xd4: V67 = 0x61
0xd7: V68 = 0x1
0xd9: V69 = 0xa0
0xdb: V70 = 0x2
0xdd: V71 = EXP 0x2 0xa0
0xde: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V73 = 0x4
0xe1: V74 = CALLDATALOAD 0x4
0xe2: V75 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V76 = 0xffffffff
0xe8: V77 = 0x24
0xea: V78 = CALLDATALOAD 0x24
0xeb: V79 = AND V78 0xffffffff
0xec: V80 = 0x44
0xee: V81 = CALLDATALOAD 0x44
0xef: V82 = 0x203
0xf2: JUMP 0x203
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V75, V79, V81]
Exit stack: [V11, 0x61, V75, V79, V81]

================================

Block 0xf3
[0xf3:0x180]
---
Predecessors: [0x6f]
Successors: [0x181, 0x185]
---
0xf3 JUMPDEST
0xf4 PUSH1 0x2
0xf6 DUP1
0xf7 SLOAD
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d NOT
0x10e AND
0x10f PUSH1 0x1
0x111 PUSH1 0xa0
0x113 PUSH1 0x2
0x115 EXP
0x116 SUB
0x117 DUP6
0x118 DUP2
0x119 AND
0x11a SWAP2
0x11b SWAP1
0x11c SWAP2
0x11d OR
0x11e SWAP2
0x11f DUP3
0x120 SWAP1
0x121 SSTORE
0x122 PUSH1 0x40
0x124 DUP1
0x125 MLOAD
0x126 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x147 DUP2
0x148 MSTORE
0x149 DUP6
0x14a DUP4
0x14b AND
0x14c PUSH1 0x4
0x14e DUP3
0x14f ADD
0x150 MSTORE
0x151 PUSH1 0x24
0x153 DUP2
0x154 ADD
0x155 DUP6
0x156 SWAP1
0x157 MSTORE
0x158 SWAP1
0x159 MLOAD
0x15a SWAP3
0x15b SWAP1
0x15c SWAP2
0x15d AND
0x15e SWAP2
0x15f PUSH4 0xa9059cbb
0x164 SWAP2
0x165 PUSH1 0x44
0x167 DUP1
0x168 DUP3
0x169 ADD
0x16a SWAP3
0x16b PUSH1 0x0
0x16d SWAP3
0x16e SWAP1
0x16f SWAP2
0x170 SWAP1
0x171 DUP3
0x172 SWAP1
0x173 SUB
0x174 ADD
0x175 DUP2
0x176 DUP4
0x177 DUP8
0x178 DUP1
0x179 EXTCODESIZE
0x17a ISZERO
0x17b DUP1
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0xf3: JUMPDEST 
0xf4: V83 = 0x2
0xf7: V84 = S[0x2]
0xf8: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V86 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V87 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V84
0x10f: V88 = 0x1
0x111: V89 = 0xa0
0x113: V90 = 0x2
0x115: V91 = EXP 0x2 0xa0
0x116: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x119: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x11d: V94 = OR V93 V87
0x121: S[0x2] = V94
0x122: V95 = 0x40
0x125: V96 = M[0x40]
0x126: V97 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x148: M[V96] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x14b: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x14c: V99 = 0x4
0x14f: V100 = ADD V96 0x4
0x150: M[V100] = V98
0x151: V101 = 0x24
0x154: V102 = ADD V96 0x24
0x157: M[V102] = V41
0x159: V103 = M[0x40]
0x15d: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x15f: V105 = 0xa9059cbb
0x165: V106 = 0x44
0x169: V107 = ADD V96 0x44
0x16b: V108 = 0x0
0x173: V109 = SUB V96 V103
0x174: V110 = ADD V109 0x44
0x179: V111 = EXTCODESIZE V104
0x17a: V112 = ISZERO V111
0x17c: V113 = ISZERO V112
0x17d: V114 = 0x185
0x180: JUMPI 0x185 V113
---
Entry stack: [V11, 0x61, V36, V39, V41]
Stack pops: 3
Stack additions: [S2, S1, S0, V104, 0xa9059cbb, V107, 0x0, V103, V110, V103, 0x0, V104, V112]
Exit stack: [V11, 0x61, V36, V39, V41, V104, 0xa9059cbb, V107, 0x0, V103, V110, V103, 0x0, V104, V112]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0xf3]
Successors: []
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
---
0x181: V115 = 0x0
0x184: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V36, V39, V41, V104, 0xa9059cbb, V107, 0x0, V103, V110, V103, 0x0, V104, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V39, V41, V104, 0xa9059cbb, V107, 0x0, V103, V110, V103, 0x0, V104, V112]

================================

Block 0x185
[0x185:0x18f]
---
Predecessors: [0xf3]
Successors: [0x190, 0x199]
---
0x185 JUMPDEST
0x186 POP
0x187 GAS
0x188 CALL
0x189 ISZERO
0x18a DUP1
0x18b ISZERO
0x18c PUSH2 0x199
0x18f JUMPI
---
0x185: JUMPDEST 
0x187: V116 = GAS
0x188: V117 = CALL V116 V104 0x0 V103 V110 V103 0x0
0x189: V118 = ISZERO V117
0x18b: V119 = ISZERO V118
0x18c: V120 = 0x199
0x18f: JUMPI 0x199 V119
---
Entry stack: [V11, 0x61, V36, V39, V41, V104, 0xa9059cbb, V107, 0x0, V103, V110, V103, 0x0, V104, V112]
Stack pops: 7
Stack additions: [V118]
Exit stack: [V11, 0x61, V36, V39, V41, V104, 0xa9059cbb, V107, V118]

================================

Block 0x190
[0x190:0x198]
---
Predecessors: [0x185]
Successors: []
---
0x190 RETURNDATASIZE
0x191 PUSH1 0x0
0x193 DUP1
0x194 RETURNDATACOPY
0x195 RETURNDATASIZE
0x196 PUSH1 0x0
0x198 REVERT
---
0x190: V121 = RETURNDATASIZE
0x191: V122 = 0x0
0x194: RETURNDATACOPY 0x0 0x0 V121
0x195: V123 = RETURNDATASIZE
0x196: V124 = 0x0
0x198: REVERT 0x0 V123
---
Entry stack: [V11, 0x61, V36, V39, V41, V104, 0xa9059cbb, V107, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V39, V41, V104, 0xa9059cbb, V107, V118]

================================

Block 0x199
[0x199:0x1a1]
---
Predecessors: [0x185]
Successors: [0x61]
---
0x199 JUMPDEST
0x19a POP
0x19b POP
0x19c POP
0x19d POP
0x19e POP
0x19f POP
0x1a0 POP
0x1a1 JUMP
---
0x199: JUMPDEST 
0x1a1: JUMP 0x61
---
Entry stack: [V11, 0x61, V36, V39, V41, V104, 0xa9059cbb, V107, V118]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a2
[0x1a2:0x1b5]
---
Predecessors: [0x99]
Successors: [0x1b6, 0x1f2]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x0
0x1a5 SLOAD
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae AND
0x1af CALLER
0x1b0 EQ
0x1b1 ISZERO
0x1b2 PUSH2 0x1f2
0x1b5 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V125 = 0x0
0x1a5: V126 = S[0x0]
0x1a6: V127 = 0x1
0x1a8: V128 = 0xa0
0x1aa: V129 = 0x2
0x1ac: V130 = EXP 0x2 0xa0
0x1ad: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x1af: V133 = CALLER
0x1b0: V134 = EQ V133 V132
0x1b1: V135 = ISZERO V134
0x1b2: V136 = 0x1f2
0x1b5: JUMPI 0x1f2 V135
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1b6
[0x1b6:0x1e6]
---
Predecessors: [0x1a2]
Successors: [0x1e7, 0x1f0]
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 SLOAD
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 SWAP1
0x1c6 SWAP2
0x1c7 AND
0x1c8 SWAP2
0x1c9 ADDRESS
0x1ca BALANCE
0x1cb DUP1
0x1cc ISZERO
0x1cd PUSH2 0x8fc
0x1d0 MUL
0x1d1 SWAP3
0x1d2 SWAP1
0x1d3 SWAP2
0x1d4 DUP2
0x1d5 DUP2
0x1d6 DUP2
0x1d7 DUP6
0x1d8 DUP9
0x1d9 DUP9
0x1da CALL
0x1db SWAP4
0x1dc POP
0x1dd POP
0x1de POP
0x1df POP
0x1e0 ISZERO
0x1e1 DUP1
0x1e2 ISZERO
0x1e3 PUSH2 0x1f0
0x1e6 JUMPI
---
0x1b6: V137 = 0x0
0x1b9: V138 = S[0x0]
0x1ba: V139 = 0x40
0x1bc: V140 = M[0x40]
0x1bd: V141 = 0x1
0x1bf: V142 = 0xa0
0x1c1: V143 = 0x2
0x1c3: V144 = EXP 0x2 0xa0
0x1c4: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c7: V146 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x1c9: V147 = ADDRESS
0x1ca: V148 = BALANCE V147
0x1cc: V149 = ISZERO V148
0x1cd: V150 = 0x8fc
0x1d0: V151 = MUL 0x8fc V149
0x1da: V152 = CALL V151 V146 V148 V140 0x0 V140 0x0
0x1e0: V153 = ISZERO V152
0x1e2: V154 = ISZERO V153
0x1e3: V155 = 0x1f0
0x1e6: JUMPI 0x1f0 V154
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V153]
Exit stack: [V11, 0x61, V153]

================================

Block 0x1e7
[0x1e7:0x1ef]
---
Predecessors: [0x1b6]
Successors: []
---
0x1e7 RETURNDATASIZE
0x1e8 PUSH1 0x0
0x1ea DUP1
0x1eb RETURNDATACOPY
0x1ec RETURNDATASIZE
0x1ed PUSH1 0x0
0x1ef REVERT
---
0x1e7: V156 = RETURNDATASIZE
0x1e8: V157 = 0x0
0x1eb: RETURNDATACOPY 0x0 0x0 V156
0x1ec: V158 = RETURNDATASIZE
0x1ed: V159 = 0x0
0x1ef: REVERT 0x0 V158
---
Entry stack: [V11, 0x61, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V153]

================================

Block 0x1f0
[0x1f0:0x1f1]
---
Predecessors: [0x1b6]
Successors: [0x1f2]
---
0x1f0 JUMPDEST
0x1f1 POP
---
0x1f0: JUMPDEST 
---
Entry stack: [V11, 0x61, V153]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1f2
[0x1f2:0x1f3]
---
Predecessors: [0x1a2, 0x1f0]
Successors: [0x61]
---
0x1f2 JUMPDEST
0x1f3 JUMP
---
0x1f2: JUMPDEST 
0x1f3: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f4
[0x1f4:0x202]
---
Predecessors: [0xae]
Successors: [0xb7]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x0
0x1f7 SLOAD
0x1f8 PUSH1 0x1
0x1fa PUSH1 0xa0
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff SUB
0x200 AND
0x201 DUP2
0x202 JUMP
---
0x1f4: JUMPDEST 
0x1f5: V160 = 0x0
0x1f7: V161 = S[0x0]
0x1f8: V162 = 0x1
0x1fa: V163 = 0xa0
0x1fc: V164 = 0x2
0x1fe: V165 = EXP 0x2 0xa0
0x1ff: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x202: JUMP 0xb7
---
Entry stack: [V11, 0xb7]
Stack pops: 1
Stack additions: [S0, V167]
Exit stack: [V11, 0xb7, V167]

================================

Block 0x203
[0x203:0x20a]
---
Predecessors: [0xd3]
Successors: [0x20b, 0x20f]
---
0x203 JUMPDEST
0x204 TIMESTAMP
0x205 DUP2
0x206 EQ
0x207 PUSH2 0x20f
0x20a JUMPI
---
0x203: JUMPDEST 
0x204: V168 = TIMESTAMP
0x206: V169 = EQ V81 V168
0x207: V170 = 0x20f
0x20a: JUMPI 0x20f V169
---
Entry stack: [V11, 0x61, V75, V79, V81]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V75, V79, V81]

================================

Block 0x20b
[0x20b:0x20e]
---
Predecessors: [0x203]
Successors: []
---
0x20b PUSH1 0x0
0x20d DUP1
0x20e REVERT
---
0x20b: V171 = 0x0
0x20e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V75, V79, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V75, V79, V81]

================================

Block 0x20f
[0x20f:0x299]
---
Predecessors: [0x203]
Successors: [0x29a, 0x29e]
---
0x20f JUMPDEST
0x210 PUSH1 0x1
0x212 DUP1
0x213 SLOAD
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 NOT
0x22a AND
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 DUP6
0x234 DUP2
0x235 AND
0x236 SWAP2
0x237 SWAP1
0x238 SWAP2
0x239 OR
0x23a DUP1
0x23b DUP4
0x23c SSTORE
0x23d PUSH1 0x40
0x23f DUP1
0x240 MLOAD
0x241 PUSH32 0xe8b49df200000000000000000000000000000000000000000000000000000000
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x4
0x266 DUP2
0x267 ADD
0x268 SWAP5
0x269 SWAP1
0x26a SWAP5
0x26b MSTORE
0x26c PUSH1 0x0
0x26e PUSH1 0x24
0x270 DUP6
0x271 ADD
0x272 DUP2
0x273 SWAP1
0x274 MSTORE
0x275 SWAP1
0x276 MLOAD
0x277 SWAP2
0x278 SWAP1
0x279 SWAP3
0x27a AND
0x27b SWAP3
0x27c PUSH4 0xe8b49df2
0x281 SWAP3
0x282 CALLVALUE
0x283 SWAP3
0x284 PUSH1 0x44
0x286 DUP1
0x287 DUP5
0x288 ADD
0x289 SWAP4
0x28a DUP3
0x28b SWAP1
0x28c SUB
0x28d ADD
0x28e DUP2
0x28f DUP6
0x290 DUP9
0x291 DUP1
0x292 EXTCODESIZE
0x293 ISZERO
0x294 DUP1
0x295 ISZERO
0x296 PUSH2 0x29e
0x299 JUMPI
---
0x20f: JUMPDEST 
0x210: V172 = 0x1
0x213: V173 = S[0x1]
0x214: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V175 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V176 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V173
0x22b: V177 = 0x1
0x22d: V178 = 0xa0
0x22f: V179 = 0x2
0x231: V180 = EXP 0x2 0xa0
0x232: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x239: V183 = OR V182 V176
0x23c: S[0x1] = V183
0x23d: V184 = 0x40
0x240: V185 = M[0x40]
0x241: V186 = 0xe8b49df200000000000000000000000000000000000000000000000000000000
0x263: M[V185] = 0xe8b49df200000000000000000000000000000000000000000000000000000000
0x264: V187 = 0x4
0x267: V188 = ADD V185 0x4
0x26b: M[V188] = 0x1
0x26c: V189 = 0x0
0x26e: V190 = 0x24
0x271: V191 = ADD V185 0x24
0x274: M[V191] = 0x0
0x276: V192 = M[0x40]
0x27a: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x27c: V194 = 0xe8b49df2
0x282: V195 = CALLVALUE
0x284: V196 = 0x44
0x288: V197 = ADD V185 0x44
0x28c: V198 = SUB V185 V192
0x28d: V199 = ADD V198 0x44
0x292: V200 = EXTCODESIZE V193
0x293: V201 = ISZERO V200
0x295: V202 = ISZERO V201
0x296: V203 = 0x29e
0x299: JUMPI 0x29e V202
---
Entry stack: [V11, 0x61, V75, V79, V81]
Stack pops: 3
Stack additions: [S2, S1, S0, V193, 0xe8b49df2, V195, V197, 0x0, V192, V199, V192, V195, V193, V201]
Exit stack: [V11, 0x61, V75, V79, V81, V193, 0xe8b49df2, V195, V197, 0x0, V192, V199, V192, V195, V193, V201]

================================

Block 0x29a
[0x29a:0x29d]
---
Predecessors: [0x20f]
Successors: []
---
0x29a PUSH1 0x0
0x29c DUP1
0x29d REVERT
---
0x29a: V204 = 0x0
0x29d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V75, V79, V81, V193, 0xe8b49df2, V195, V197, 0x0, V192, V199, V192, V195, V193, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V75, V79, V81, V193, 0xe8b49df2, V195, V197, 0x0, V192, V199, V192, V195, V193, V201]

================================

Block 0x29e
[0x29e:0x2a8]
---
Predecessors: [0x20f]
Successors: [0x2a9, 0x2b2]
---
0x29e JUMPDEST
0x29f POP
0x2a0 GAS
0x2a1 CALL
0x2a2 ISZERO
0x2a3 DUP1
0x2a4 ISZERO
0x2a5 PUSH2 0x2b2
0x2a8 JUMPI
---
0x29e: JUMPDEST 
0x2a0: V205 = GAS
0x2a1: V206 = CALL V205 V193 V195 V192 V199 V192 0x0
0x2a2: V207 = ISZERO V206
0x2a4: V208 = ISZERO V207
0x2a5: V209 = 0x2b2
0x2a8: JUMPI 0x2b2 V208
---
Entry stack: [V11, 0x61, V75, V79, V81, V193, 0xe8b49df2, V195, V197, 0x0, V192, V199, V192, V195, V193, V201]
Stack pops: 7
Stack additions: [V207]
Exit stack: [V11, 0x61, V75, V79, V81, V193, 0xe8b49df2, V195, V197, V207]

================================

Block 0x2a9
[0x2a9:0x2b1]
---
Predecessors: [0x29e]
Successors: []
---
0x2a9 RETURNDATASIZE
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad RETURNDATACOPY
0x2ae RETURNDATASIZE
0x2af PUSH1 0x0
0x2b1 REVERT
---
0x2a9: V210 = RETURNDATASIZE
0x2aa: V211 = 0x0
0x2ad: RETURNDATACOPY 0x0 0x0 V210
0x2ae: V212 = RETURNDATASIZE
0x2af: V213 = 0x0
0x2b1: REVERT 0x0 V212
---
Entry stack: [V11, 0x61, V75, V79, V81, V193, 0xe8b49df2, V195, V197, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V75, V79, V81, V193, 0xe8b49df2, V195, V197, V207]

================================

Block 0x2b2
[0x2b2:0x2bb]
---
Predecessors: [0x29e]
Successors: [0x61]
---
0x2b2 JUMPDEST
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 POP
0x2b9 POP
0x2ba POP
0x2bb JUMP
---
0x2b2: JUMPDEST 
0x2bb: JUMP 0x61
---
Entry stack: [V11, 0x61, V75, V79, V81, V193, 0xe8b49df2, V195, V197, V207]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bc
[0x2bc:0x2f0]
---
Predecessors: []
Successors: []
---
0x2bc STOP
0x2bd LOG1
0x2be PUSH6 0x627a7a723058
0x2c5 SHA3
0x2c6 GAS
0x2c7 DUP10
0x2c8 MISSING 0xb8
0x2c9 MISSING 0xd9
0x2ca MISSING 0xc2
0x2cb LOG0
0x2cc MISSING 0x5e
0x2cd MISSING 0xd0
0x2ce MISSING 0x48
0x2cf MSTORE
0x2d0 EXP
0x2d1 CALLER
0x2d2 MISSING 0x48
0x2d3 MISSING 0xec
0x2d4 MISSING 0x27
0x2d5 PUSH27 0x1802f229a81075625efbaa95d7f4cfb70029
---
0x2bc: STOP 
0x2bd: LOG S0 S1 S2
0x2be: V214 = 0x627a7a723058
0x2c5: V215 = SHA3 0x627a7a723058 S3
0x2c6: V216 = GAS
0x2c8: MISSING 0xb8
0x2c9: MISSING 0xd9
0x2ca: MISSING 0xc2
0x2cb: LOG S0 S1
0x2cc: MISSING 0x5e
0x2cd: MISSING 0xd0
0x2ce: MISSING 0x48
0x2cf: M[S0] = S1
0x2d0: V217 = EXP S2 S3
0x2d1: V218 = CALLER
0x2d2: MISSING 0x48
0x2d3: MISSING 0xec
0x2d4: MISSING 0x27
0x2d5: V219 = 0x1802f229a81075625efbaa95d7f4cfb70029
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, V216, V215, S4, S5, S6, S7, S8, S9, S10, S11, V218, V217, 0x1802f229a81075625efbaa95d7f4cfb70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x30e2fe81
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x6b, 0x6f, 0xf3, 0x181, 0x185, 0x190, 0x199

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x8d
Exit block: 0x1e7
Body: 0x61, 0x8d, 0x95, 0x99, 0x1a2, 0x1b6, 0x1e7, 0x1f0, 0x1f2

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xa2
Exit block: 0xb7
Body: 0xa2, 0xaa, 0xae, 0xb7, 0x1f4

Function 3:
Public function signature: 0xcdb78c82
Entry block: 0xd3
Exit block: 0x61
Body: 0x61, 0xd3, 0x203, 0x20b, 0x20f, 0x29a, 0x29e, 0x2a9, 0x2b2

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

