Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x17e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x16279055
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x17e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x16279055
0x3b: V13 = EQ V11 0x16279055
0x3c: V14 = 0x17e
0x3f: JUMPI 0x17e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x1b1]
---
0x40 DUP1
0x41 PUSH4 0x3d741994
0x46 EQ
0x47 PUSH2 0x1b1
0x4a JUMPI
---
0x41: V15 = 0x3d741994
0x46: V16 = EQ 0x3d741994 V11
0x47: V17 = 0x1b1
0x4a: JUMPI 0x1b1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1d6]
---
0x4b DUP1
0x4c PUSH4 0x4ef8ff33
0x51 EQ
0x52 PUSH2 0x1d6
0x55 JUMPI
---
0x4c: V18 = 0x4ef8ff33
0x51: V19 = EQ 0x4ef8ff33 V11
0x52: V20 = 0x1d6
0x55: JUMPI 0x1d6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1e9]
---
0x56 DUP1
0x57 PUSH4 0x66b3f6bf
0x5c EQ
0x5d PUSH2 0x1e9
0x60 JUMPI
---
0x57: V21 = 0x66b3f6bf
0x5c: V22 = EQ 0x66b3f6bf V11
0x5d: V23 = 0x1e9
0x60: JUMPI 0x1e9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x208]
---
0x61 DUP1
0x62 PUSH4 0x7fa34e92
0x67 EQ
0x68 PUSH2 0x208
0x6b JUMPI
---
0x62: V24 = 0x7fa34e92
0x67: V25 = EQ 0x7fa34e92 V11
0x68: V26 = 0x208
0x6b: JUMPI 0x208 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x237]
---
0x6c DUP1
0x6d PUSH4 0x833270d8
0x72 EQ
0x73 PUSH2 0x237
0x76 JUMPI
---
0x6d: V27 = 0x833270d8
0x72: V28 = EQ 0x833270d8 V11
0x73: V29 = 0x237
0x76: JUMPI 0x237 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x0, 0x6c]
Successors: [0x82, 0x86]
---
0x77 JUMPDEST
0x78 PUSH1 0x1
0x7a SLOAD
0x7b CALLVALUE
0x7c LT
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x77: JUMPDEST 
0x78: V30 = 0x1
0x7a: V31 = S[0x1]
0x7b: V32 = CALLVALUE
0x7c: V33 = LT V32 V31
0x7d: V34 = ISZERO V33
0x7e: V35 = 0x86
0x81: JUMPI 0x86 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x77]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V36 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x86
[0x86:0x92]
---
Predecessors: [0x77]
Successors: [0x93, 0x9a]
---
0x86 JUMPDEST
0x87 PUSH1 0x3
0x89 SLOAD
0x8a TIMESTAMP
0x8b LT
0x8c ISZERO
0x8d DUP1
0x8e ISZERO
0x8f PUSH2 0x9a
0x92 JUMPI
---
0x86: JUMPDEST 
0x87: V37 = 0x3
0x89: V38 = S[0x3]
0x8a: V39 = TIMESTAMP
0x8b: V40 = LT V39 V38
0x8c: V41 = ISZERO V40
0x8e: V42 = ISZERO V41
0x8f: V43 = 0x9a
0x92: JUMPI 0x9a V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0x93
[0x93:0x99]
---
Predecessors: [0x86]
Successors: [0x9a]
---
0x93 POP
0x94 PUSH1 0x4
0x96 SLOAD
0x97 TIMESTAMP
0x98 GT
0x99 ISZERO
---
0x94: V44 = 0x4
0x96: V45 = S[0x4]
0x97: V46 = TIMESTAMP
0x98: V47 = GT V46 V45
0x99: V48 = ISZERO V47
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0x9a
[0x9a:0xa0]
---
Predecessors: [0x86, 0x93]
Successors: [0xa1, 0xa5]
---
0x9a JUMPDEST
0x9b ISZERO
0x9c ISZERO
0x9d PUSH2 0xa5
0xa0 JUMPI
---
0x9a: JUMPDEST 
0x9b: V49 = ISZERO S0
0x9c: V50 = ISZERO V49
0x9d: V51 = 0xa5
0xa0: JUMPI 0xa5 V50
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x9a]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 REVERT
---
0xa1: V52 = 0x0
0xa4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa5
[0xa5:0xad]
---
Predecessors: [0x9a]
Successors: [0x24a]
---
0xa5 JUMPDEST
0xa6 PUSH2 0xae
0xa9 CALLER
0xaa PUSH2 0x24a
0xad JUMP
---
0xa5: JUMPDEST 
0xa6: V53 = 0xae
0xa9: V54 = CALLER
0xaa: V55 = 0x24a
0xad: JUMP 0x24a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xae, V54]
Exit stack: [V11, 0xae, V54]

================================

Block 0xae
[0xae:0xb3]
---
Predecessors: [0x24a]
Successors: [0xb4, 0xb8]
---
0xae JUMPDEST
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xae: JUMPDEST 
0xaf: V56 = ISZERO V220
0xb0: V57 = 0xb8
0xb3: JUMPI 0xb8 V56
---
Entry stack: [V11, V220]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xae]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V58 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xda]
---
Predecessors: [0xae]
Successors: [0xdb, 0xfe]
---
0xb8 JUMPDEST
0xb9 PUSH1 0x1
0xbb PUSH1 0xa0
0xbd PUSH1 0x2
0xbf EXP
0xc0 SUB
0xc1 CALLER
0xc2 AND
0xc3 PUSH1 0x0
0xc5 SWAP1
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca DUP2
0xcb SWAP1
0xcc MSTORE
0xcd PUSH1 0x40
0xcf SWAP1
0xd0 SHA3
0xd1 SLOAD
0xd2 PUSH1 0xff
0xd4 AND
0xd5 ISZERO
0xd6 ISZERO
0xd7 PUSH2 0xfe
0xda JUMPI
---
0xb8: JUMPDEST 
0xb9: V59 = 0x1
0xbb: V60 = 0xa0
0xbd: V61 = 0x2
0xbf: V62 = EXP 0x2 0xa0
0xc0: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1: V64 = CALLER
0xc2: V65 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V66 = 0x0
0xc7: M[0x0] = V65
0xc8: V67 = 0x20
0xcc: M[0x20] = 0x0
0xcd: V68 = 0x40
0xd0: V69 = SHA3 0x0 0x40
0xd1: V70 = S[V69]
0xd2: V71 = 0xff
0xd4: V72 = AND 0xff V70
0xd5: V73 = ISZERO V72
0xd6: V74 = ISZERO V73
0xd7: V75 = 0xfe
0xda: JUMPI 0xfe V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xfd]
---
Predecessors: [0xb8]
Successors: [0xfe]
---
0xdb PUSH1 0x1
0xdd PUSH1 0xa0
0xdf PUSH1 0x2
0xe1 EXP
0xe2 SUB
0xe3 CALLER
0xe4 AND
0xe5 PUSH1 0x0
0xe7 SWAP1
0xe8 DUP2
0xe9 MSTORE
0xea PUSH1 0x20
0xec DUP2
0xed SWAP1
0xee MSTORE
0xef PUSH1 0x40
0xf1 SWAP1
0xf2 SHA3
0xf3 DUP1
0xf4 SLOAD
0xf5 PUSH1 0xff
0xf7 NOT
0xf8 AND
0xf9 PUSH1 0x1
0xfb OR
0xfc SWAP1
0xfd SSTORE
---
0xdb: V76 = 0x1
0xdd: V77 = 0xa0
0xdf: V78 = 0x2
0xe1: V79 = EXP 0x2 0xa0
0xe2: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V81 = CALLER
0xe4: V82 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V83 = 0x0
0xe9: M[0x0] = V82
0xea: V84 = 0x20
0xee: M[0x20] = 0x0
0xef: V85 = 0x40
0xf2: V86 = SHA3 0x0 0x40
0xf4: V87 = S[V86]
0xf5: V88 = 0xff
0xf7: V89 = NOT 0xff
0xf8: V90 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V87
0xf9: V91 = 0x1
0xfb: V92 = OR 0x1 V90
0xfd: S[V86] = V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfe
[0xfe:0x162]
---
Predecessors: [0xb8, 0xdb]
Successors: [0x163, 0x167]
---
0xfe JUMPDEST
0xff PUSH1 0x2
0x101 SLOAD
0x102 PUSH1 0x1
0x104 PUSH1 0xa0
0x106 PUSH1 0x2
0x108 EXP
0x109 SUB
0x10a AND
0x10b PUSH4 0xec8ac4d8
0x110 CALLVALUE
0x111 CALLER
0x112 PUSH1 0x40
0x114 MLOAD
0x115 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x133 PUSH4 0xffffffff
0x138 DUP6
0x139 AND
0x13a MUL
0x13b DUP2
0x13c MSTORE
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 SWAP1
0x146 SWAP2
0x147 AND
0x148 PUSH1 0x4
0x14a DUP3
0x14b ADD
0x14c MSTORE
0x14d PUSH1 0x24
0x14f ADD
0x150 PUSH1 0x0
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 DUP4
0x157 SUB
0x158 DUP2
0x159 DUP6
0x15a DUP9
0x15b DUP1
0x15c EXTCODESIZE
0x15d ISZERO
0x15e ISZERO
0x15f PUSH2 0x167
0x162 JUMPI
---
0xfe: JUMPDEST 
0xff: V93 = 0x2
0x101: V94 = S[0x2]
0x102: V95 = 0x1
0x104: V96 = 0xa0
0x106: V97 = 0x2
0x108: V98 = EXP 0x2 0xa0
0x109: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x10b: V101 = 0xec8ac4d8
0x110: V102 = CALLVALUE
0x111: V103 = CALLER
0x112: V104 = 0x40
0x114: V105 = M[0x40]
0x115: V106 = 0x100000000000000000000000000000000000000000000000000000000
0x133: V107 = 0xffffffff
0x139: V108 = AND 0xec8ac4d8 0xffffffff
0x13a: V109 = MUL 0xec8ac4d8 0x100000000000000000000000000000000000000000000000000000000
0x13c: M[V105] = 0xec8ac4d800000000000000000000000000000000000000000000000000000000
0x13d: V110 = 0x1
0x13f: V111 = 0xa0
0x141: V112 = 0x2
0x143: V113 = EXP 0x2 0xa0
0x144: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V115 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x148: V116 = 0x4
0x14b: V117 = ADD V105 0x4
0x14c: M[V117] = V115
0x14d: V118 = 0x24
0x14f: V119 = ADD 0x24 V105
0x150: V120 = 0x0
0x152: V121 = 0x40
0x154: V122 = M[0x40]
0x157: V123 = SUB V119 V122
0x15c: V124 = EXTCODESIZE V100
0x15d: V125 = ISZERO V124
0x15e: V126 = ISZERO V125
0x15f: V127 = 0x167
0x162: JUMPI 0x167 V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V100, 0xec8ac4d8, V102, V119, 0x0, V122, V123, V122, V102, V100]
Exit stack: [V11, V100, 0xec8ac4d8, V102, V119, 0x0, V122, V123, V122, V102, V100]

================================

Block 0x163
[0x163:0x166]
---
Predecessors: [0xfe]
Successors: []
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
---
0x163: V128 = 0x0
0x166: REVERT 0x0 0x0
---
Entry stack: [V11, V100, 0xec8ac4d8, V102, V119, 0x0, V122, V123, V122, V102, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V100, 0xec8ac4d8, V102, V119, 0x0, V122, V123, V122, V102, V100]

================================

Block 0x167
[0x167:0x173]
---
Predecessors: [0xfe]
Successors: [0x174, 0x178]
---
0x167 JUMPDEST
0x168 PUSH2 0x25ee
0x16b GAS
0x16c SUB
0x16d CALL
0x16e ISZERO
0x16f ISZERO
0x170 PUSH2 0x178
0x173 JUMPI
---
0x167: JUMPDEST 
0x168: V129 = 0x25ee
0x16b: V130 = GAS
0x16c: V131 = SUB V130 0x25ee
0x16d: V132 = CALL V131 V100 V102 V122 V123 V122 0x0
0x16e: V133 = ISZERO V132
0x16f: V134 = ISZERO V133
0x170: V135 = 0x178
0x173: JUMPI 0x178 V134
---
Entry stack: [V11, V100, 0xec8ac4d8, V102, V119, 0x0, V122, V123, V122, V102, V100]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V100, 0xec8ac4d8, V102, V119]

================================

Block 0x174
[0x174:0x177]
---
Predecessors: [0x167]
Successors: []
---
0x174 PUSH1 0x0
0x176 DUP1
0x177 REVERT
---
0x174: V136 = 0x0
0x177: REVERT 0x0 0x0
---
Entry stack: [V11, V100, 0xec8ac4d8, V102, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V100, 0xec8ac4d8, V102, V119]

================================

Block 0x178
[0x178:0x17d]
---
Predecessors: [0x167]
Successors: []
---
0x178 JUMPDEST
0x179 POP
0x17a POP
0x17b POP
0x17c POP
0x17d STOP
---
0x178: JUMPDEST 
0x17d: STOP 
---
Entry stack: [V11, V100, 0xec8ac4d8, V102, V119]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x17e
[0x17e:0x184]
---
Predecessors: [0xd]
Successors: [0x185, 0x189]
---
0x17e JUMPDEST
0x17f CALLVALUE
0x180 ISZERO
0x181 PUSH2 0x189
0x184 JUMPI
---
0x17e: JUMPDEST 
0x17f: V137 = CALLVALUE
0x180: V138 = ISZERO V137
0x181: V139 = 0x189
0x184: JUMPI 0x189 V138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x185
[0x185:0x188]
---
Predecessors: [0x17e]
Successors: []
---
0x185 PUSH1 0x0
0x187 DUP1
0x188 REVERT
---
0x185: V140 = 0x0
0x188: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x189
[0x189:0x19c]
---
Predecessors: [0x17e]
Successors: [0x24a]
---
0x189 JUMPDEST
0x18a PUSH2 0x19d
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 PUSH1 0x4
0x197 CALLDATALOAD
0x198 AND
0x199 PUSH2 0x24a
0x19c JUMP
---
0x189: JUMPDEST 
0x18a: V141 = 0x19d
0x18d: V142 = 0x1
0x18f: V143 = 0xa0
0x191: V144 = 0x2
0x193: V145 = EXP 0x2 0xa0
0x194: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V147 = 0x4
0x197: V148 = CALLDATALOAD 0x4
0x198: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x199: V150 = 0x24a
0x19c: JUMP 0x24a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x19d, V149]
Exit stack: [V11, 0x19d, V149]

================================

Block 0x19d
[0x19d:0x1b0]
---
Predecessors: [0x24a, 0x25e]
Successors: []
---
0x19d JUMPDEST
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 SWAP1
0x1a2 ISZERO
0x1a3 ISZERO
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x20
0x1a8 ADD
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad SWAP2
0x1ae SUB
0x1af SWAP1
0x1b0 RETURN
---
0x19d: JUMPDEST 
0x19e: V151 = 0x40
0x1a0: V152 = M[0x40]
0x1a2: V153 = ISZERO S0
0x1a3: V154 = ISZERO V153
0x1a5: M[V152] = V154
0x1a6: V155 = 0x20
0x1a8: V156 = ADD 0x20 V152
0x1a9: V157 = 0x40
0x1ab: V158 = M[0x40]
0x1ae: V159 = SUB V156 V158
0x1b0: RETURN V158 V159
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x1b1
[0x1b1:0x1b7]
---
Predecessors: [0x40]
Successors: [0x1b8, 0x1bc]
---
0x1b1 JUMPDEST
0x1b2 CALLVALUE
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V160 = CALLVALUE
0x1b3: V161 = ISZERO V160
0x1b4: V162 = 0x1bc
0x1b7: JUMPI 0x1bc V161
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V163 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bc
[0x1bc:0x1c3]
---
Predecessors: [0x1b1]
Successors: [0x252]
---
0x1bc JUMPDEST
0x1bd PUSH2 0x1c4
0x1c0 PUSH2 0x252
0x1c3 JUMP
---
0x1bc: JUMPDEST 
0x1bd: V164 = 0x1c4
0x1c0: V165 = 0x252
0x1c3: JUMP 0x252
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c4]
Exit stack: [V11, 0x1c4]

================================

Block 0x1c4
[0x1c4:0x1d5]
---
Predecessors: [0x252, 0x258, 0x282]
Successors: []
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 SWAP1
0x1c9 DUP2
0x1ca MSTORE
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 DUP1
0x1d2 SWAP2
0x1d3 SUB
0x1d4 SWAP1
0x1d5 RETURN
---
0x1c4: JUMPDEST 
0x1c5: V166 = 0x40
0x1c7: V167 = M[0x40]
0x1ca: M[V167] = S0
0x1cb: V168 = 0x20
0x1cd: V169 = ADD 0x20 V167
0x1ce: V170 = 0x40
0x1d0: V171 = M[0x40]
0x1d3: V172 = SUB V169 V171
0x1d5: RETURN V171 V172
---
Entry stack: [V11, 0x1c4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1c4]

================================

Block 0x1d6
[0x1d6:0x1dc]
---
Predecessors: [0x4b]
Successors: [0x1dd, 0x1e1]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 ISZERO
0x1d9 PUSH2 0x1e1
0x1dc JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V173 = CALLVALUE
0x1d8: V174 = ISZERO V173
0x1d9: V175 = 0x1e1
0x1dc: JUMPI 0x1e1 V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1dd
[0x1dd:0x1e0]
---
Predecessors: [0x1d6]
Successors: []
---
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 REVERT
---
0x1dd: V176 = 0x0
0x1e0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e1
[0x1e1:0x1e8]
---
Predecessors: [0x1d6]
Successors: [0x258]
---
0x1e1 JUMPDEST
0x1e2 PUSH2 0x1c4
0x1e5 PUSH2 0x258
0x1e8 JUMP
---
0x1e1: JUMPDEST 
0x1e2: V177 = 0x1c4
0x1e5: V178 = 0x258
0x1e8: JUMP 0x258
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c4]
Exit stack: [V11, 0x1c4]

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0x56]
Successors: [0x1f0, 0x1f4]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f4
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V179 = CALLVALUE
0x1eb: V180 = ISZERO V179
0x1ec: V181 = 0x1f4
0x1ef: JUMPI 0x1f4 V180
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f0
[0x1f0:0x1f3]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 REVERT
---
0x1f0: V182 = 0x0
0x1f3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f4
[0x1f4:0x207]
---
Predecessors: [0x1e9]
Successors: [0x25e]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0x19d
0x1f8 PUSH1 0x1
0x1fa PUSH1 0xa0
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff SUB
0x200 PUSH1 0x4
0x202 CALLDATALOAD
0x203 AND
0x204 PUSH2 0x25e
0x207 JUMP
---
0x1f4: JUMPDEST 
0x1f5: V183 = 0x19d
0x1f8: V184 = 0x1
0x1fa: V185 = 0xa0
0x1fc: V186 = 0x2
0x1fe: V187 = EXP 0x2 0xa0
0x1ff: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V189 = 0x4
0x202: V190 = CALLDATALOAD 0x4
0x203: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x204: V192 = 0x25e
0x207: JUMP 0x25e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x19d, V191]
Exit stack: [V11, 0x19d, V191]

================================

Block 0x208
[0x208:0x20e]
---
Predecessors: [0x61]
Successors: [0x20f, 0x213]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x208: JUMPDEST 
0x209: V193 = CALLVALUE
0x20a: V194 = ISZERO V193
0x20b: V195 = 0x213
0x20e: JUMPI 0x213 V194
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x208]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V196 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x213
[0x213:0x21a]
---
Predecessors: [0x208]
Successors: [0x273]
---
0x213 JUMPDEST
0x214 PUSH2 0x21b
0x217 PUSH2 0x273
0x21a JUMP
---
0x213: JUMPDEST 
0x214: V197 = 0x21b
0x217: V198 = 0x273
0x21a: JUMP 0x273
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x21b]
Exit stack: [V11, 0x21b]

================================

Block 0x21b
[0x21b:0x236]
---
Predecessors: [0x273]
Successors: []
---
0x21b JUMPDEST
0x21c PUSH1 0x40
0x21e MLOAD
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 SWAP1
0x228 SWAP2
0x229 AND
0x22a DUP2
0x22b MSTORE
0x22c PUSH1 0x20
0x22e ADD
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP1
0x233 SWAP2
0x234 SUB
0x235 SWAP1
0x236 RETURN
---
0x21b: JUMPDEST 
0x21c: V199 = 0x40
0x21e: V200 = M[0x40]
0x21f: V201 = 0x1
0x221: V202 = 0xa0
0x223: V203 = 0x2
0x225: V204 = EXP 0x2 0xa0
0x226: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V206 = AND V239 0xffffffffffffffffffffffffffffffffffffffff
0x22b: M[V200] = V206
0x22c: V207 = 0x20
0x22e: V208 = ADD 0x20 V200
0x22f: V209 = 0x40
0x231: V210 = M[0x40]
0x234: V211 = SUB V208 V210
0x236: RETURN V210 V211
---
Entry stack: [V11, 0x21b, V239]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x21b]

================================

Block 0x237
[0x237:0x23d]
---
Predecessors: [0x6c]
Successors: [0x23e, 0x242]
---
0x237 JUMPDEST
0x238 CALLVALUE
0x239 ISZERO
0x23a PUSH2 0x242
0x23d JUMPI
---
0x237: JUMPDEST 
0x238: V212 = CALLVALUE
0x239: V213 = ISZERO V212
0x23a: V214 = 0x242
0x23d: JUMPI 0x242 V213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x23e
[0x23e:0x241]
---
Predecessors: [0x237]
Successors: []
---
0x23e PUSH1 0x0
0x240 DUP1
0x241 REVERT
---
0x23e: V215 = 0x0
0x241: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x242
[0x242:0x249]
---
Predecessors: [0x237]
Successors: [0x282]
---
0x242 JUMPDEST
0x243 PUSH2 0x1c4
0x246 PUSH2 0x282
0x249 JUMP
---
0x242: JUMPDEST 
0x243: V216 = 0x1c4
0x246: V217 = 0x282
0x249: JUMP 0x282
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c4]
Exit stack: [V11, 0x1c4]

================================

Block 0x24a
[0x24a:0x251]
---
Predecessors: [0xa5, 0x189]
Successors: [0xae, 0x19d]
---
0x24a JUMPDEST
0x24b PUSH1 0x0
0x24d SWAP1
0x24e EXTCODESIZE
0x24f GT
0x250 SWAP1
0x251 JUMP
---
0x24a: JUMPDEST 
0x24b: V218 = 0x0
0x24e: V219 = EXTCODESIZE S0
0x24f: V220 = GT V219 0x0
0x251: JUMP {0xae, 0x19d}
---
Entry stack: [V11, {0xae, 0x19d}, S0]
Stack pops: 2
Stack additions: [V220]
Exit stack: [V11, V220]

================================

Block 0x252
[0x252:0x257]
---
Predecessors: [0x1bc]
Successors: [0x1c4]
---
0x252 JUMPDEST
0x253 PUSH1 0x3
0x255 SLOAD
0x256 DUP2
0x257 JUMP
---
0x252: JUMPDEST 
0x253: V221 = 0x3
0x255: V222 = S[0x3]
0x257: JUMP 0x1c4
---
Entry stack: [V11, 0x1c4]
Stack pops: 1
Stack additions: [S0, V222]
Exit stack: [V11, 0x1c4, V222]

================================

Block 0x258
[0x258:0x25d]
---
Predecessors: [0x1e1]
Successors: [0x1c4]
---
0x258 JUMPDEST
0x259 PUSH1 0x1
0x25b SLOAD
0x25c DUP2
0x25d JUMP
---
0x258: JUMPDEST 
0x259: V223 = 0x1
0x25b: V224 = S[0x1]
0x25d: JUMP 0x1c4
---
Entry stack: [V11, 0x1c4]
Stack pops: 1
Stack additions: [S0, V224]
Exit stack: [V11, 0x1c4, V224]

================================

Block 0x25e
[0x25e:0x272]
---
Predecessors: [0x1f4]
Successors: [0x19d]
---
0x25e JUMPDEST
0x25f PUSH1 0x0
0x261 PUSH1 0x20
0x263 DUP2
0x264 SWAP1
0x265 MSTORE
0x266 SWAP1
0x267 DUP2
0x268 MSTORE
0x269 PUSH1 0x40
0x26b SWAP1
0x26c SHA3
0x26d SLOAD
0x26e PUSH1 0xff
0x270 AND
0x271 DUP2
0x272 JUMP
---
0x25e: JUMPDEST 
0x25f: V225 = 0x0
0x261: V226 = 0x20
0x265: M[0x20] = 0x0
0x268: M[0x0] = V191
0x269: V227 = 0x40
0x26c: V228 = SHA3 0x0 0x40
0x26d: V229 = S[V228]
0x26e: V230 = 0xff
0x270: V231 = AND 0xff V229
0x272: JUMP 0x19d
---
Entry stack: [V11, 0x19d, V191]
Stack pops: 2
Stack additions: [S1, V231]
Exit stack: [V11, 0x19d, V231]

================================

Block 0x273
[0x273:0x281]
---
Predecessors: [0x213]
Successors: [0x21b]
---
0x273 JUMPDEST
0x274 PUSH1 0x2
0x276 SLOAD
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f AND
0x280 DUP2
0x281 JUMP
---
0x273: JUMPDEST 
0x274: V232 = 0x2
0x276: V233 = S[0x2]
0x277: V234 = 0x1
0x279: V235 = 0xa0
0x27b: V236 = 0x2
0x27d: V237 = EXP 0x2 0xa0
0x27e: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x281: JUMP 0x21b
---
Entry stack: [V11, 0x21b]
Stack pops: 1
Stack additions: [S0, V239]
Exit stack: [V11, 0x21b, V239]

================================

Block 0x282
[0x282:0x287]
---
Predecessors: [0x242]
Successors: [0x1c4]
---
0x282 JUMPDEST
0x283 PUSH1 0x4
0x285 SLOAD
0x286 DUP2
0x287 JUMP
---
0x282: JUMPDEST 
0x283: V240 = 0x4
0x285: V241 = S[0x4]
0x287: JUMP 0x1c4
---
Entry stack: [V11, 0x1c4]
Stack pops: 1
Stack additions: [S0, V241]
Exit stack: [V11, 0x1c4, V241]

================================

Block 0x288
[0x288:0x2c0]
---
Predecessors: []
Successors: []
---
0x288 STOP
0x289 LOG1
0x28a PUSH6 0x627a7a723058
0x291 SHA3
0x292 MISSING 0xd1
0x293 CREATE
0x294 PUSH10 0x6ba17fe081d527be1c56
0x29f SMOD
0x2a0 SHL
0x2a1 PUSH31 0xcce4c511e12de9d94199bdb1e3c1e8940029
---
0x288: STOP 
0x289: LOG S0 S1 S2
0x28a: V242 = 0x627a7a723058
0x291: V243 = SHA3 0x627a7a723058 S3
0x292: MISSING 0xd1
0x293: V244 = CREATE S0 S1 S2
0x294: V245 = 0x6ba17fe081d527be1c56
0x29f: V246 = SMOD 0x6ba17fe081d527be1c56 V244
0x2a0: V247 = SHL V246 S3
0x2a1: V248 = 0xcce4c511e12de9d94199bdb1e3c1e8940029
---
Entry stack: []
Stack pops: 0
Stack additions: [V243, 0xcce4c511e12de9d94199bdb1e3c1e8940029, V247]
Exit stack: []

================================

Function 0:
Public function signature: 0x16279055
Entry block: 0x17e
Exit block: 0x19d
Body: 0x17e, 0x185, 0x189, 0x19d

Function 1:
Public function signature: 0x3d741994
Entry block: 0x1b1
Exit block: 0x1c4
Body: 0x1b1, 0x1b8, 0x1bc, 0x1c4, 0x252

Function 2:
Public function signature: 0x4ef8ff33
Entry block: 0x1d6
Exit block: 0x1c4
Body: 0x1c4, 0x1d6, 0x1dd, 0x1e1, 0x258

Function 3:
Public function signature: 0x66b3f6bf
Entry block: 0x1e9
Exit block: 0x19d
Body: 0x19d, 0x1e9, 0x1f0, 0x1f4, 0x25e

Function 4:
Public function signature: 0x7fa34e92
Entry block: 0x208
Exit block: 0x21b
Body: 0x208, 0x20f, 0x213, 0x21b, 0x273

Function 5:
Public function signature: 0x833270d8
Entry block: 0x237
Exit block: 0x1c4
Body: 0x1c4, 0x237, 0x23e, 0x242, 0x282

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x174
Body: 0x77, 0x82, 0x86, 0x93, 0x9a, 0xa1, 0xa5, 0xae, 0xb4, 0xb8, 0xdb, 0xfe, 0x163, 0x167, 0x174, 0x178

