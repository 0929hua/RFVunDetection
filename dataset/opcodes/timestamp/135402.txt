Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xfb]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xfb
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xfb
0xc: JUMPI 0xfb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x106]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x47fc9aa
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x106
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x47fc9aa
0x3b: V13 = EQ V11 0x47fc9aa
0x3c: V14 = 0x106
0x3f: JUMPI 0x106 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x12d]
---
0x40 DUP1
0x41 PUSH4 0xfb5a6b4
0x46 EQ
0x47 PUSH2 0x12d
0x4a JUMPI
---
0x41: V15 = 0xfb5a6b4
0x46: V16 = EQ 0xfb5a6b4 V11
0x47: V17 = 0x12d
0x4a: JUMPI 0x12d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x142]
---
0x4b DUP1
0x4c PUSH4 0x1515bc2b
0x51 EQ
0x52 PUSH2 0x142
0x55 JUMPI
---
0x4c: V18 = 0x1515bc2b
0x51: V19 = EQ 0x1515bc2b V11
0x52: V20 = 0x142
0x55: JUMPI 0x142 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x16b]
---
0x56 DUP1
0x57 PUSH4 0x2c4e722e
0x5c EQ
0x5d PUSH2 0x16b
0x60 JUMPI
---
0x57: V21 = 0x2c4e722e
0x5c: V22 = EQ 0x2c4e722e V11
0x5d: V23 = 0x16b
0x60: JUMPI 0x16b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x180]
---
0x61 DUP1
0x62 PUSH4 0x3f4ba83a
0x67 EQ
0x68 PUSH2 0x180
0x6b JUMPI
---
0x62: V24 = 0x3f4ba83a
0x67: V25 = EQ 0x3f4ba83a V11
0x68: V26 = 0x180
0x6b: JUMPI 0x180 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x195]
---
0x6c DUP1
0x6d PUSH4 0x4042b66f
0x72 EQ
0x73 PUSH2 0x195
0x76 JUMPI
---
0x6d: V27 = 0x4042b66f
0x72: V28 = EQ 0x4042b66f V11
0x73: V29 = 0x195
0x76: JUMPI 0x195 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1aa]
---
0x77 DUP1
0x78 PUSH4 0x4b6753bc
0x7d EQ
0x7e PUSH2 0x1aa
0x81 JUMPI
---
0x78: V30 = 0x4b6753bc
0x7d: V31 = EQ 0x4b6753bc V11
0x7e: V32 = 0x1aa
0x81: JUMPI 0x1aa V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1bf]
---
0x82 DUP1
0x83 PUSH4 0x521eb273
0x88 EQ
0x89 PUSH2 0x1bf
0x8c JUMPI
---
0x83: V33 = 0x521eb273
0x88: V34 = EQ 0x521eb273 V11
0x89: V35 = 0x1bf
0x8c: JUMPI 0x1bf V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1f0]
---
0x8d DUP1
0x8e PUSH4 0x5c975abb
0x93 EQ
0x94 PUSH2 0x1f0
0x97 JUMPI
---
0x8e: V36 = 0x5c975abb
0x93: V37 = EQ 0x5c975abb V11
0x94: V38 = 0x1f0
0x97: JUMPI 0x1f0 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x205]
---
0x98 DUP1
0x99 PUSH4 0x63fd9e38
0x9e EQ
0x9f PUSH2 0x205
0xa2 JUMPI
---
0x99: V39 = 0x63fd9e38
0x9e: V40 = EQ 0x63fd9e38 V11
0x9f: V41 = 0x205
0xa2: JUMPI 0x205 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x21a]
---
0xa3 DUP1
0xa4 PUSH4 0x8456cb59
0xa9 EQ
0xaa PUSH2 0x21a
0xad JUMPI
---
0xa4: V42 = 0x8456cb59
0xa9: V43 = EQ 0x8456cb59 V11
0xaa: V44 = 0x21a
0xad: JUMPI 0x21a V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x22f]
---
0xae DUP1
0xaf PUSH4 0x8d8f2adb
0xb4 EQ
0xb5 PUSH2 0x22f
0xb8 JUMPI
---
0xaf: V45 = 0x8d8f2adb
0xb4: V46 = EQ 0x8d8f2adb V11
0xb5: V47 = 0x22f
0xb8: JUMPI 0x22f V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x244]
---
0xb9 DUP1
0xba PUSH4 0x8da5cb5b
0xbf EQ
0xc0 PUSH2 0x244
0xc3 JUMPI
---
0xba: V48 = 0x8da5cb5b
0xbf: V49 = EQ 0x8da5cb5b V11
0xc0: V50 = 0x244
0xc3: JUMPI 0x244 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x259]
---
0xc4 DUP1
0xc5 PUSH4 0x95805dad
0xca EQ
0xcb PUSH2 0x259
0xce JUMPI
---
0xc5: V51 = 0x95805dad
0xca: V52 = EQ 0x95805dad V11
0xcb: V53 = 0x259
0xce: JUMPI 0x259 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x271]
---
0xcf DUP1
0xd0 PUSH4 0xb7a8807c
0xd5 EQ
0xd6 PUSH2 0x271
0xd9 JUMPI
---
0xd0: V54 = 0xb7a8807c
0xd5: V55 = EQ 0xb7a8807c V11
0xd6: V56 = 0x271
0xd9: JUMPI 0x271 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x286]
---
0xda DUP1
0xdb PUSH4 0xec8ac4d8
0xe0 EQ
0xe1 PUSH2 0x286
0xe4 JUMPI
---
0xdb: V57 = 0xec8ac4d8
0xe0: V58 = EQ 0xec8ac4d8 V11
0xe1: V59 = 0x286
0xe4: JUMPI 0x286 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x29a]
---
0xe5 DUP1
0xe6 PUSH4 0xf2fde38b
0xeb EQ
0xec PUSH2 0x29a
0xef JUMPI
---
0xe6: V60 = 0xf2fde38b
0xeb: V61 = EQ 0xf2fde38b V11
0xec: V62 = 0x29a
0xef: JUMPI 0x29a V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x2bb]
---
0xf0 DUP1
0xf1 PUSH4 0xfc0c546a
0xf6 EQ
0xf7 PUSH2 0x2bb
0xfa JUMPI
---
0xf1: V63 = 0xfc0c546a
0xf6: V64 = EQ 0xfc0c546a V11
0xf7: V65 = 0x2bb
0xfa: JUMPI 0x2bb V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x103]
---
Predecessors: [0x0, 0xf0]
Successors: [0x2d0]
---
0xfb JUMPDEST
0xfc PUSH2 0x104
0xff CALLER
0x100 PUSH2 0x2d0
0x103 JUMP
---
0xfb: JUMPDEST 
0xfc: V66 = 0x104
0xff: V67 = CALLER
0x100: V68 = 0x2d0
0x103: JUMP 0x2d0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x104, V67]
Exit stack: [V11, 0x104, V67]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: [0x359, 0x3a7, 0x44d, 0x609, 0x64c]
Successors: []
---
0x104 JUMPDEST
0x105 STOP
---
0x104: JUMPDEST 
0x105: STOP 
---
Entry stack: [V11, 0x104, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S1, S0]

================================

Block 0x106
[0x106:0x10d]
---
Predecessors: [0xd]
Successors: [0x10e, 0x112]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 DUP1
0x109 ISZERO
0x10a PUSH2 0x112
0x10d JUMPI
---
0x106: JUMPDEST 
0x107: V69 = CALLVALUE
0x109: V70 = ISZERO V69
0x10a: V71 = 0x112
0x10d: JUMPI 0x112 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, V69]

================================

Block 0x10e
[0x10e:0x111]
---
Predecessors: [0x106]
Successors: []
---
0x10e PUSH1 0x0
0x110 DUP1
0x111 REVERT
---
0x10e: V72 = 0x0
0x111: REVERT 0x0 0x0
---
Entry stack: [V11, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69]

================================

Block 0x112
[0x112:0x11a]
---
Predecessors: [0x106]
Successors: [0x35e]
---
0x112 JUMPDEST
0x113 POP
0x114 PUSH2 0x11b
0x117 PUSH2 0x35e
0x11a JUMP
---
0x112: JUMPDEST 
0x114: V73 = 0x11b
0x117: V74 = 0x35e
0x11a: JUMP 0x35e
---
Entry stack: [V11, V69]
Stack pops: 1
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x11b
[0x11b:0x12c]
---
Predecessors: [0x35e, 0x364, 0x372, 0x3ee, 0x3f4, 0x419, 0x61a]
Successors: []
---
0x11b JUMPDEST
0x11c PUSH1 0x40
0x11e DUP1
0x11f MLOAD
0x120 SWAP2
0x121 DUP3
0x122 MSTORE
0x123 MLOAD
0x124 SWAP1
0x125 DUP2
0x126 SWAP1
0x127 SUB
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP1
0x12c RETURN
---
0x11b: JUMPDEST 
0x11c: V75 = 0x40
0x11f: V76 = M[0x40]
0x122: M[V76] = S0
0x123: V77 = M[0x40]
0x127: V78 = SUB V76 V77
0x128: V79 = 0x20
0x12a: V80 = ADD 0x20 V78
0x12c: RETURN V77 V80
---
Entry stack: [V11, 0x11b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x11b]

================================

Block 0x12d
[0x12d:0x134]
---
Predecessors: [0x40]
Successors: [0x135, 0x139]
---
0x12d JUMPDEST
0x12e CALLVALUE
0x12f DUP1
0x130 ISZERO
0x131 PUSH2 0x139
0x134 JUMPI
---
0x12d: JUMPDEST 
0x12e: V81 = CALLVALUE
0x130: V82 = ISZERO V81
0x131: V83 = 0x139
0x134: JUMPI 0x139 V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V11, V81]

================================

Block 0x135
[0x135:0x138]
---
Predecessors: [0x12d]
Successors: []
---
0x135 PUSH1 0x0
0x137 DUP1
0x138 REVERT
---
0x135: V84 = 0x0
0x138: REVERT 0x0 0x0
---
Entry stack: [V11, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V81]

================================

Block 0x139
[0x139:0x141]
---
Predecessors: [0x12d]
Successors: [0x364]
---
0x139 JUMPDEST
0x13a POP
0x13b PUSH2 0x11b
0x13e PUSH2 0x364
0x141 JUMP
---
0x139: JUMPDEST 
0x13b: V85 = 0x11b
0x13e: V86 = 0x364
0x141: JUMP 0x364
---
Entry stack: [V11, V81]
Stack pops: 1
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x142
[0x142:0x149]
---
Predecessors: [0x4b]
Successors: [0x14a, 0x14e]
---
0x142 JUMPDEST
0x143 CALLVALUE
0x144 DUP1
0x145 ISZERO
0x146 PUSH2 0x14e
0x149 JUMPI
---
0x142: JUMPDEST 
0x143: V87 = CALLVALUE
0x145: V88 = ISZERO V87
0x146: V89 = 0x14e
0x149: JUMPI 0x14e V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x14a
[0x14a:0x14d]
---
Predecessors: [0x142]
Successors: []
---
0x14a PUSH1 0x0
0x14c DUP1
0x14d REVERT
---
0x14a: V90 = 0x0
0x14d: REVERT 0x0 0x0
---
Entry stack: [V11, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V87]

================================

Block 0x14e
[0x14e:0x156]
---
Predecessors: [0x142]
Successors: [0x36a]
---
0x14e JUMPDEST
0x14f POP
0x150 PUSH2 0x157
0x153 PUSH2 0x36a
0x156 JUMP
---
0x14e: JUMPDEST 
0x150: V91 = 0x157
0x153: V92 = 0x36a
0x156: JUMP 0x36a
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: [0x157]
Exit stack: [V11, 0x157]

================================

Block 0x157
[0x157:0x16a]
---
Predecessors: [0x36a, 0x409]
Successors: []
---
0x157 JUMPDEST
0x158 PUSH1 0x40
0x15a DUP1
0x15b MLOAD
0x15c SWAP2
0x15d ISZERO
0x15e ISZERO
0x15f DUP3
0x160 MSTORE
0x161 MLOAD
0x162 SWAP1
0x163 DUP2
0x164 SWAP1
0x165 SUB
0x166 PUSH1 0x20
0x168 ADD
0x169 SWAP1
0x16a RETURN
---
0x157: JUMPDEST 
0x158: V93 = 0x40
0x15b: V94 = M[0x40]
0x15d: V95 = ISZERO S0
0x15e: V96 = ISZERO V95
0x160: M[V94] = V96
0x161: V97 = M[0x40]
0x165: V98 = SUB V94 V97
0x166: V99 = 0x20
0x168: V100 = ADD 0x20 V98
0x16a: RETURN V97 V100
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x16b
[0x16b:0x172]
---
Predecessors: [0x56]
Successors: [0x173, 0x177]
---
0x16b JUMPDEST
0x16c CALLVALUE
0x16d DUP1
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x16b: JUMPDEST 
0x16c: V101 = CALLVALUE
0x16e: V102 = ISZERO V101
0x16f: V103 = 0x177
0x172: JUMPI 0x177 V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V11, V101]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x16b]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V104 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V11, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V101]

================================

Block 0x177
[0x177:0x17f]
---
Predecessors: [0x16b]
Successors: [0x372]
---
0x177 JUMPDEST
0x178 POP
0x179 PUSH2 0x11b
0x17c PUSH2 0x372
0x17f JUMP
---
0x177: JUMPDEST 
0x179: V105 = 0x11b
0x17c: V106 = 0x372
0x17f: JUMP 0x372
---
Entry stack: [V11, V101]
Stack pops: 1
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x180
[0x180:0x187]
---
Predecessors: [0x61]
Successors: [0x188, 0x18c]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 DUP1
0x183 ISZERO
0x184 PUSH2 0x18c
0x187 JUMPI
---
0x180: JUMPDEST 
0x181: V107 = CALLVALUE
0x183: V108 = ISZERO V107
0x184: V109 = 0x18c
0x187: JUMPI 0x18c V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V11, V107]

================================

Block 0x188
[0x188:0x18b]
---
Predecessors: [0x180]
Successors: []
---
0x188 PUSH1 0x0
0x18a DUP1
0x18b REVERT
---
0x188: V110 = 0x0
0x18b: REVERT 0x0 0x0
---
Entry stack: [V11, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V107]

================================

Block 0x18c
[0x18c:0x194]
---
Predecessors: [0x180]
Successors: [0x378]
---
0x18c JUMPDEST
0x18d POP
0x18e PUSH2 0x104
0x191 PUSH2 0x378
0x194 JUMP
---
0x18c: JUMPDEST 
0x18e: V111 = 0x104
0x191: V112 = 0x378
0x194: JUMP 0x378
---
Entry stack: [V11, V107]
Stack pops: 1
Stack additions: [0x104]
Exit stack: [V11, 0x104]

================================

Block 0x195
[0x195:0x19c]
---
Predecessors: [0x6c]
Successors: [0x19d, 0x1a1]
---
0x195 JUMPDEST
0x196 CALLVALUE
0x197 DUP1
0x198 ISZERO
0x199 PUSH2 0x1a1
0x19c JUMPI
---
0x195: JUMPDEST 
0x196: V113 = CALLVALUE
0x198: V114 = ISZERO V113
0x199: V115 = 0x1a1
0x19c: JUMPI 0x1a1 V114
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V11, V113]

================================

Block 0x19d
[0x19d:0x1a0]
---
Predecessors: [0x195]
Successors: []
---
0x19d PUSH1 0x0
0x19f DUP1
0x1a0 REVERT
---
0x19d: V116 = 0x0
0x1a0: REVERT 0x0 0x0
---
Entry stack: [V11, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V113]

================================

Block 0x1a1
[0x1a1:0x1a9]
---
Predecessors: [0x195]
Successors: [0x3ee]
---
0x1a1 JUMPDEST
0x1a2 POP
0x1a3 PUSH2 0x11b
0x1a6 PUSH2 0x3ee
0x1a9 JUMP
---
0x1a1: JUMPDEST 
0x1a3: V117 = 0x11b
0x1a6: V118 = 0x3ee
0x1a9: JUMP 0x3ee
---
Entry stack: [V11, V113]
Stack pops: 1
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x1aa
[0x1aa:0x1b1]
---
Predecessors: [0x77]
Successors: [0x1b2, 0x1b6]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V119 = CALLVALUE
0x1ad: V120 = ISZERO V119
0x1ae: V121 = 0x1b6
0x1b1: JUMPI 0x1b6 V120
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V11, V119]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V122 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V11, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119]

================================

Block 0x1b6
[0x1b6:0x1be]
---
Predecessors: [0x1aa]
Successors: [0x3f4]
---
0x1b6 JUMPDEST
0x1b7 POP
0x1b8 PUSH2 0x11b
0x1bb PUSH2 0x3f4
0x1be JUMP
---
0x1b6: JUMPDEST 
0x1b8: V123 = 0x11b
0x1bb: V124 = 0x3f4
0x1be: JUMP 0x3f4
---
Entry stack: [V11, V119]
Stack pops: 1
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x1bf
[0x1bf:0x1c6]
---
Predecessors: [0x82]
Successors: [0x1c7, 0x1cb]
---
0x1bf JUMPDEST
0x1c0 CALLVALUE
0x1c1 DUP1
0x1c2 ISZERO
0x1c3 PUSH2 0x1cb
0x1c6 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V125 = CALLVALUE
0x1c2: V126 = ISZERO V125
0x1c3: V127 = 0x1cb
0x1c6: JUMPI 0x1cb V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V11, V125]

================================

Block 0x1c7
[0x1c7:0x1ca]
---
Predecessors: [0x1bf]
Successors: []
---
0x1c7 PUSH1 0x0
0x1c9 DUP1
0x1ca REVERT
---
0x1c7: V128 = 0x0
0x1ca: REVERT 0x0 0x0
---
Entry stack: [V11, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125]

================================

Block 0x1cb
[0x1cb:0x1d3]
---
Predecessors: [0x1bf]
Successors: [0x3fa]
---
0x1cb JUMPDEST
0x1cc POP
0x1cd PUSH2 0x1d4
0x1d0 PUSH2 0x3fa
0x1d3 JUMP
---
0x1cb: JUMPDEST 
0x1cd: V129 = 0x1d4
0x1d0: V130 = 0x3fa
0x1d3: JUMP 0x3fa
---
Entry stack: [V11, V125]
Stack pops: 1
Stack additions: [0x1d4]
Exit stack: [V11, 0x1d4]

================================

Block 0x1d4
[0x1d4:0x1ef]
---
Predecessors: [0x3fa, 0x5e3, 0x6b4]
Successors: []
---
0x1d4 JUMPDEST
0x1d5 PUSH1 0x40
0x1d7 DUP1
0x1d8 MLOAD
0x1d9 PUSH1 0x1
0x1db PUSH1 0xa0
0x1dd PUSH1 0x2
0x1df EXP
0x1e0 SUB
0x1e1 SWAP1
0x1e2 SWAP3
0x1e3 AND
0x1e4 DUP3
0x1e5 MSTORE
0x1e6 MLOAD
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 SWAP1
0x1ea SUB
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee SWAP1
0x1ef RETURN
---
0x1d4: JUMPDEST 
0x1d5: V131 = 0x40
0x1d8: V132 = M[0x40]
0x1d9: V133 = 0x1
0x1db: V134 = 0xa0
0x1dd: V135 = 0x2
0x1df: V136 = EXP 0x2 0xa0
0x1e0: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e3: V138 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: M[V132] = V138
0x1e6: V139 = M[0x40]
0x1ea: V140 = SUB V132 V139
0x1eb: V141 = 0x20
0x1ed: V142 = ADD 0x20 V140
0x1ef: RETURN V139 V142
---
Entry stack: [V11, 0x1d4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1d4]

================================

Block 0x1f0
[0x1f0:0x1f7]
---
Predecessors: [0x8d]
Successors: [0x1f8, 0x1fc]
---
0x1f0 JUMPDEST
0x1f1 CALLVALUE
0x1f2 DUP1
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V143 = CALLVALUE
0x1f3: V144 = ISZERO V143
0x1f4: V145 = 0x1fc
0x1f7: JUMPI 0x1fc V144
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V143]
Exit stack: [V11, V143]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f0]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V146 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V11, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V143]

================================

Block 0x1fc
[0x1fc:0x204]
---
Predecessors: [0x1f0]
Successors: [0x409]
---
0x1fc JUMPDEST
0x1fd POP
0x1fe PUSH2 0x157
0x201 PUSH2 0x409
0x204 JUMP
---
0x1fc: JUMPDEST 
0x1fe: V147 = 0x157
0x201: V148 = 0x409
0x204: JUMP 0x409
---
Entry stack: [V11, V143]
Stack pops: 1
Stack additions: [0x157]
Exit stack: [V11, 0x157]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x98]
Successors: [0x20d, 0x211]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x205: JUMPDEST 
0x206: V149 = CALLVALUE
0x208: V150 = ISZERO V149
0x209: V151 = 0x211
0x20c: JUMPI 0x211 V150
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V11, V149]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x205]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V152 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V11, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V149]

================================

Block 0x211
[0x211:0x219]
---
Predecessors: [0x205]
Successors: [0x419]
---
0x211 JUMPDEST
0x212 POP
0x213 PUSH2 0x11b
0x216 PUSH2 0x419
0x219 JUMP
---
0x211: JUMPDEST 
0x213: V153 = 0x11b
0x216: V154 = 0x419
0x219: JUMP 0x419
---
Entry stack: [V11, V149]
Stack pops: 1
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x21a
[0x21a:0x221]
---
Predecessors: [0xa3]
Successors: [0x222, 0x226]
---
0x21a JUMPDEST
0x21b CALLVALUE
0x21c DUP1
0x21d ISZERO
0x21e PUSH2 0x226
0x221 JUMPI
---
0x21a: JUMPDEST 
0x21b: V155 = CALLVALUE
0x21d: V156 = ISZERO V155
0x21e: V157 = 0x226
0x221: JUMPI 0x226 V156
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V155]
Exit stack: [V11, V155]

================================

Block 0x222
[0x222:0x225]
---
Predecessors: [0x21a]
Successors: []
---
0x222 PUSH1 0x0
0x224 DUP1
0x225 REVERT
---
0x222: V158 = 0x0
0x225: REVERT 0x0 0x0
---
Entry stack: [V11, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V155]

================================

Block 0x226
[0x226:0x22e]
---
Predecessors: [0x21a]
Successors: [0x41f]
---
0x226 JUMPDEST
0x227 POP
0x228 PUSH2 0x104
0x22b PUSH2 0x41f
0x22e JUMP
---
0x226: JUMPDEST 
0x228: V159 = 0x104
0x22b: V160 = 0x41f
0x22e: JUMP 0x41f
---
Entry stack: [V11, V155]
Stack pops: 1
Stack additions: [0x104]
Exit stack: [V11, 0x104]

================================

Block 0x22f
[0x22f:0x236]
---
Predecessors: [0xae]
Successors: [0x237, 0x23b]
---
0x22f JUMPDEST
0x230 CALLVALUE
0x231 DUP1
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x22f: JUMPDEST 
0x230: V161 = CALLVALUE
0x232: V162 = ISZERO V161
0x233: V163 = 0x23b
0x236: JUMPI 0x23b V162
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V161]
Exit stack: [V11, V161]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x22f]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V164 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V11, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V161]

================================

Block 0x23b
[0x23b:0x243]
---
Predecessors: [0x22f]
Successors: [0x49a]
---
0x23b JUMPDEST
0x23c POP
0x23d PUSH2 0x104
0x240 PUSH2 0x49a
0x243 JUMP
---
0x23b: JUMPDEST 
0x23d: V165 = 0x104
0x240: V166 = 0x49a
0x243: JUMP 0x49a
---
Entry stack: [V11, V161]
Stack pops: 1
Stack additions: [0x104]
Exit stack: [V11, 0x104]

================================

Block 0x244
[0x244:0x24b]
---
Predecessors: [0xb9]
Successors: [0x24c, 0x250]
---
0x244 JUMPDEST
0x245 CALLVALUE
0x246 DUP1
0x247 ISZERO
0x248 PUSH2 0x250
0x24b JUMPI
---
0x244: JUMPDEST 
0x245: V167 = CALLVALUE
0x247: V168 = ISZERO V167
0x248: V169 = 0x250
0x24b: JUMPI 0x250 V168
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V167]
Exit stack: [V11, V167]

================================

Block 0x24c
[0x24c:0x24f]
---
Predecessors: [0x244]
Successors: []
---
0x24c PUSH1 0x0
0x24e DUP1
0x24f REVERT
---
0x24c: V170 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V11, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V167]

================================

Block 0x250
[0x250:0x258]
---
Predecessors: [0x244]
Successors: [0x5e3]
---
0x250 JUMPDEST
0x251 POP
0x252 PUSH2 0x1d4
0x255 PUSH2 0x5e3
0x258 JUMP
---
0x250: JUMPDEST 
0x252: V171 = 0x1d4
0x255: V172 = 0x5e3
0x258: JUMP 0x5e3
---
Entry stack: [V11, V167]
Stack pops: 1
Stack additions: [0x1d4]
Exit stack: [V11, 0x1d4]

================================

Block 0x259
[0x259:0x260]
---
Predecessors: [0xc4]
Successors: [0x261, 0x265]
---
0x259 JUMPDEST
0x25a CALLVALUE
0x25b DUP1
0x25c ISZERO
0x25d PUSH2 0x265
0x260 JUMPI
---
0x259: JUMPDEST 
0x25a: V173 = CALLVALUE
0x25c: V174 = ISZERO V173
0x25d: V175 = 0x265
0x260: JUMPI 0x265 V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V173]
Exit stack: [V11, V173]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x259]
Successors: []
---
0x261 PUSH1 0x0
0x263 DUP1
0x264 REVERT
---
0x261: V176 = 0x0
0x264: REVERT 0x0 0x0
---
Entry stack: [V11, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V173]

================================

Block 0x265
[0x265:0x270]
---
Predecessors: [0x259]
Successors: [0x5f2]
---
0x265 JUMPDEST
0x266 POP
0x267 PUSH2 0x104
0x26a PUSH1 0x4
0x26c CALLDATALOAD
0x26d PUSH2 0x5f2
0x270 JUMP
---
0x265: JUMPDEST 
0x267: V177 = 0x104
0x26a: V178 = 0x4
0x26c: V179 = CALLDATALOAD 0x4
0x26d: V180 = 0x5f2
0x270: JUMP 0x5f2
---
Entry stack: [V11, V173]
Stack pops: 1
Stack additions: [0x104, V179]
Exit stack: [V11, 0x104, V179]

================================

Block 0x271
[0x271:0x278]
---
Predecessors: [0xcf]
Successors: [0x279, 0x27d]
---
0x271 JUMPDEST
0x272 CALLVALUE
0x273 DUP1
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x271: JUMPDEST 
0x272: V181 = CALLVALUE
0x274: V182 = ISZERO V181
0x275: V183 = 0x27d
0x278: JUMPI 0x27d V182
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V181]
Exit stack: [V11, V181]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x271]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V184 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V11, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V181]

================================

Block 0x27d
[0x27d:0x285]
---
Predecessors: [0x271]
Successors: [0x61a]
---
0x27d JUMPDEST
0x27e POP
0x27f PUSH2 0x11b
0x282 PUSH2 0x61a
0x285 JUMP
---
0x27d: JUMPDEST 
0x27f: V185 = 0x11b
0x282: V186 = 0x61a
0x285: JUMP 0x61a
---
Entry stack: [V11, V181]
Stack pops: 1
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x286
[0x286:0x299]
---
Predecessors: [0xda]
Successors: [0x2d0]
---
0x286 JUMPDEST
0x287 PUSH2 0x104
0x28a PUSH1 0x1
0x28c PUSH1 0xa0
0x28e PUSH1 0x2
0x290 EXP
0x291 SUB
0x292 PUSH1 0x4
0x294 CALLDATALOAD
0x295 AND
0x296 PUSH2 0x2d0
0x299 JUMP
---
0x286: JUMPDEST 
0x287: V187 = 0x104
0x28a: V188 = 0x1
0x28c: V189 = 0xa0
0x28e: V190 = 0x2
0x290: V191 = EXP 0x2 0xa0
0x291: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x292: V193 = 0x4
0x294: V194 = CALLDATALOAD 0x4
0x295: V195 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x296: V196 = 0x2d0
0x299: JUMP 0x2d0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x104, V195]
Exit stack: [V11, 0x104, V195]

================================

Block 0x29a
[0x29a:0x2a1]
---
Predecessors: [0xe5]
Successors: [0x2a2, 0x2a6]
---
0x29a JUMPDEST
0x29b CALLVALUE
0x29c DUP1
0x29d ISZERO
0x29e PUSH2 0x2a6
0x2a1 JUMPI
---
0x29a: JUMPDEST 
0x29b: V197 = CALLVALUE
0x29d: V198 = ISZERO V197
0x29e: V199 = 0x2a6
0x2a1: JUMPI 0x2a6 V198
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V197]
Exit stack: [V11, V197]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x29a]
Successors: []
---
0x2a2 PUSH1 0x0
0x2a4 DUP1
0x2a5 REVERT
---
0x2a2: V200 = 0x0
0x2a5: REVERT 0x0 0x0
---
Entry stack: [V11, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V197]

================================

Block 0x2a6
[0x2a6:0x2ba]
---
Predecessors: [0x29a]
Successors: [0x620]
---
0x2a6 JUMPDEST
0x2a7 POP
0x2a8 PUSH2 0x104
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 PUSH1 0x4
0x2b5 CALLDATALOAD
0x2b6 AND
0x2b7 PUSH2 0x620
0x2ba JUMP
---
0x2a6: JUMPDEST 
0x2a8: V201 = 0x104
0x2ab: V202 = 0x1
0x2ad: V203 = 0xa0
0x2af: V204 = 0x2
0x2b1: V205 = EXP 0x2 0xa0
0x2b2: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V207 = 0x4
0x2b5: V208 = CALLDATALOAD 0x4
0x2b6: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V210 = 0x620
0x2ba: JUMP 0x620
---
Entry stack: [V11, V197]
Stack pops: 1
Stack additions: [0x104, V209]
Exit stack: [V11, 0x104, V209]

================================

Block 0x2bb
[0x2bb:0x2c2]
---
Predecessors: [0xf0]
Successors: [0x2c3, 0x2c7]
---
0x2bb JUMPDEST
0x2bc CALLVALUE
0x2bd DUP1
0x2be ISZERO
0x2bf PUSH2 0x2c7
0x2c2 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V211 = CALLVALUE
0x2be: V212 = ISZERO V211
0x2bf: V213 = 0x2c7
0x2c2: JUMPI 0x2c7 V212
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V211]
Exit stack: [V11, V211]

================================

Block 0x2c3
[0x2c3:0x2c6]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 REVERT
---
0x2c3: V214 = 0x0
0x2c6: REVERT 0x0 0x0
---
Entry stack: [V11, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V211]

================================

Block 0x2c7
[0x2c7:0x2cf]
---
Predecessors: [0x2bb]
Successors: [0x6b4]
---
0x2c7 JUMPDEST
0x2c8 POP
0x2c9 PUSH2 0x1d4
0x2cc PUSH2 0x6b4
0x2cf JUMP
---
0x2c7: JUMPDEST 
0x2c9: V215 = 0x1d4
0x2cc: V216 = 0x6b4
0x2cf: JUMP 0x6b4
---
Entry stack: [V11, V211]
Stack pops: 1
Stack additions: [0x1d4]
Exit stack: [V11, 0x1d4]

================================

Block 0x2d0
[0x2d0:0x2dc]
---
Predecessors: [0xfb, 0x286]
Successors: [0x6c3]
---
0x2d0 JUMPDEST
0x2d1 CALLVALUE
0x2d2 PUSH1 0x0
0x2d4 PUSH2 0x2dd
0x2d7 DUP4
0x2d8 DUP4
0x2d9 PUSH2 0x6c3
0x2dc JUMP
---
0x2d0: JUMPDEST 
0x2d1: V217 = CALLVALUE
0x2d2: V218 = 0x0
0x2d4: V219 = 0x2dd
0x2d9: V220 = 0x6c3
0x2dc: JUMP 0x6c3
---
Entry stack: [V11, 0x104, S0]
Stack pops: 1
Stack additions: [S0, V217, 0x0, 0x2dd, S0, V217]
Exit stack: [V11, 0x104, S0, V217, 0x0, 0x2dd, S0, V217]

================================

Block 0x2dd
[0x2dd:0x2e5]
---
Predecessors: [0x71d]
Successors: [0x721]
---
0x2dd JUMPDEST
0x2de PUSH2 0x2e6
0x2e1 DUP3
0x2e2 PUSH2 0x721
0x2e5 JUMP
---
0x2dd: JUMPDEST 
0x2de: V221 = 0x2e6
0x2e2: V222 = 0x721
0x2e5: JUMP 0x721
---
Entry stack: [V11, 0x104, S5, S4, {0x0, 0x104}, S2, V217, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x2e6, S1]
Exit stack: [V11, 0x104, S5, S4, {0x0, 0x104}, S2, V217, S0, 0x2e6, V217]

================================

Block 0x2e6
[0x2e6:0x2fb]
---
Predecessors: [0x738]
Successors: [0x73e]
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x5
0x2e9 SLOAD
0x2ea SWAP1
0x2eb SWAP2
0x2ec POP
0x2ed PUSH2 0x2fc
0x2f0 SWAP1
0x2f1 DUP4
0x2f2 PUSH4 0xffffffff
0x2f7 PUSH2 0x73e
0x2fa AND
0x2fb JUMP
---
0x2e6: JUMPDEST 
0x2e7: V223 = 0x5
0x2e9: V224 = S[0x5]
0x2ed: V225 = 0x2fc
0x2f2: V226 = 0xffffffff
0x2f7: V227 = 0x73e
0x2fa: V228 = AND 0x73e 0xffffffff
0x2fb: JUMP 0x73e
---
Entry stack: [V11, 0x104, S3, S2, {0x0, 0x104}, S0]
Stack pops: 3
Stack additions: [S2, S0, 0x2fc, V224, S2]
Exit stack: [V11, 0x104, S3, S2, S0, 0x2fc, V224, S2]

================================

Block 0x2fc
[0x2fc:0x308]
---
Predecessors: [0x751]
Successors: [0x758]
---
0x2fc JUMPDEST
0x2fd PUSH1 0x5
0x2ff SSTORE
0x300 PUSH2 0x309
0x303 DUP4
0x304 DUP3
0x305 PUSH2 0x758
0x308 JUMP
---
0x2fc: JUMPDEST 
0x2fd: V229 = 0x5
0x2ff: S[0x5] = S0
0x300: V230 = 0x309
0x305: V231 = 0x758
0x308: JUMP 0x758
---
Entry stack: [V11, 0x104, S9, S8, {0x0, 0x104}, S6, S5, S4, S3, V217, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x309, S3, S1]
Exit stack: [V11, 0x104, S9, S8, {0x0, 0x104}, S6, S5, S4, S3, V217, S1, 0x309, S3, S1]

================================

Block 0x309
[0x309:0x358]
---
Predecessors: [0x71d]
Successors: [0x762]
---
0x309 JUMPDEST
0x30a PUSH1 0x40
0x30c DUP1
0x30d MLOAD
0x30e DUP4
0x30f DUP2
0x310 MSTORE
0x311 PUSH1 0x20
0x313 DUP2
0x314 ADD
0x315 DUP4
0x316 SWAP1
0x317 MSTORE
0x318 DUP2
0x319 MLOAD
0x31a PUSH1 0x1
0x31c PUSH1 0xa0
0x31e PUSH1 0x2
0x320 EXP
0x321 SUB
0x322 DUP7
0x323 AND
0x324 SWAP3
0x325 CALLER
0x326 SWAP3
0x327 PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x348 SWAP3
0x349 SWAP1
0x34a DUP2
0x34b SWAP1
0x34c SUB
0x34d SWAP1
0x34e SWAP2
0x34f ADD
0x350 SWAP1
0x351 LOG3
0x352 PUSH2 0x359
0x355 PUSH2 0x762
0x358 JUMP
---
0x309: JUMPDEST 
0x30a: V232 = 0x40
0x30d: V233 = M[0x40]
0x310: M[V233] = V217
0x311: V234 = 0x20
0x314: V235 = ADD V233 0x20
0x317: M[V235] = S0
0x319: V236 = M[0x40]
0x31a: V237 = 0x1
0x31c: V238 = 0xa0
0x31e: V239 = 0x2
0x320: V240 = EXP 0x2 0xa0
0x321: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x323: V242 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x325: V243 = CALLER
0x327: V244 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x34c: V245 = SUB V233 V236
0x34f: V246 = ADD 0x40 V245
0x351: LOG V236 V246 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V243 V242
0x352: V247 = 0x359
0x355: V248 = 0x762
0x358: JUMP 0x762
---
Entry stack: [V11, 0x104, S5, S4, {0x0, 0x104}, S2, V217, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x359]
Exit stack: [V11, 0x104, S5, S4, {0x0, 0x104}, S2, V217, S0, 0x359]

================================

Block 0x359
[0x359:0x35d]
---
Predecessors: [0x5cd, 0x79b]
Successors: [0x104]
---
0x359 JUMPDEST
0x35a POP
0x35b POP
0x35c POP
0x35d JUMP
---
0x359: JUMPDEST 
0x35d: JUMP {0x0, 0x104}
---
Entry stack: [V11, 0x104, S5, S4, {0x0, 0x104}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x104, S5, S4]

================================

Block 0x35e
[0x35e:0x363]
---
Predecessors: [0x112]
Successors: [0x11b]
---
0x35e JUMPDEST
0x35f PUSH1 0x3
0x361 SLOAD
0x362 DUP2
0x363 JUMP
---
0x35e: JUMPDEST 
0x35f: V249 = 0x3
0x361: V250 = S[0x3]
0x363: JUMP 0x11b
---
Entry stack: [V11, 0x11b]
Stack pops: 1
Stack additions: [S0, V250]
Exit stack: [V11, 0x11b, V250]

================================

Block 0x364
[0x364:0x369]
---
Predecessors: [0x139]
Successors: [0x11b]
---
0x364 JUMPDEST
0x365 PUSH1 0x8
0x367 SLOAD
0x368 DUP2
0x369 JUMP
---
0x364: JUMPDEST 
0x365: V251 = 0x8
0x367: V252 = S[0x8]
0x369: JUMP 0x11b
---
Entry stack: [V11, 0x11b]
Stack pops: 1
Stack additions: [S0, V252]
Exit stack: [V11, 0x11b, V252]

================================

Block 0x36a
[0x36a:0x371]
---
Predecessors: [0x14e]
Successors: [0x157]
---
0x36a JUMPDEST
0x36b PUSH1 0x7
0x36d SLOAD
0x36e TIMESTAMP
0x36f GT
0x370 SWAP1
0x371 JUMP
---
0x36a: JUMPDEST 
0x36b: V253 = 0x7
0x36d: V254 = S[0x7]
0x36e: V255 = TIMESTAMP
0x36f: V256 = GT V255 V254
0x371: JUMP 0x157
---
Entry stack: [V11, 0x157]
Stack pops: 1
Stack additions: [V256]
Exit stack: [V11, V256]

================================

Block 0x372
[0x372:0x377]
---
Predecessors: [0x177]
Successors: [0x11b]
---
0x372 JUMPDEST
0x373 PUSH1 0x4
0x375 SLOAD
0x376 DUP2
0x377 JUMP
---
0x372: JUMPDEST 
0x373: V257 = 0x4
0x375: V258 = S[0x4]
0x377: JUMP 0x11b
---
Entry stack: [V11, 0x11b]
Stack pops: 1
Stack additions: [S0, V258]
Exit stack: [V11, 0x11b, V258]

================================

Block 0x378
[0x378:0x38a]
---
Predecessors: [0x18c]
Successors: [0x38b, 0x38f]
---
0x378 JUMPDEST
0x379 PUSH1 0x0
0x37b SLOAD
0x37c PUSH1 0x1
0x37e PUSH1 0xa0
0x380 PUSH1 0x2
0x382 EXP
0x383 SUB
0x384 AND
0x385 CALLER
0x386 EQ
0x387 PUSH2 0x38f
0x38a JUMPI
---
0x378: JUMPDEST 
0x379: V259 = 0x0
0x37b: V260 = S[0x0]
0x37c: V261 = 0x1
0x37e: V262 = 0xa0
0x380: V263 = 0x2
0x382: V264 = EXP 0x2 0xa0
0x383: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x384: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x385: V267 = CALLER
0x386: V268 = EQ V267 V266
0x387: V269 = 0x38f
0x38a: JUMPI 0x38f V268
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x38b
[0x38b:0x38e]
---
Predecessors: [0x378]
Successors: []
---
0x38b PUSH1 0x0
0x38d DUP1
0x38e REVERT
---
0x38b: V270 = 0x0
0x38e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x38f
[0x38f:0x3a2]
---
Predecessors: [0x378]
Successors: [0x3a3, 0x3a7]
---
0x38f JUMPDEST
0x390 PUSH1 0x0
0x392 SLOAD
0x393 PUSH1 0xa0
0x395 PUSH1 0x2
0x397 EXP
0x398 SWAP1
0x399 DIV
0x39a PUSH1 0xff
0x39c AND
0x39d ISZERO
0x39e ISZERO
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x38f: JUMPDEST 
0x390: V271 = 0x0
0x392: V272 = S[0x0]
0x393: V273 = 0xa0
0x395: V274 = 0x2
0x397: V275 = EXP 0x2 0xa0
0x399: V276 = DIV V272 0x10000000000000000000000000000000000000000
0x39a: V277 = 0xff
0x39c: V278 = AND 0xff V276
0x39d: V279 = ISZERO V278
0x39e: V280 = ISZERO V279
0x39f: V281 = 0x3a7
0x3a2: JUMPI 0x3a7 V280
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x38f]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V282 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x3a7
[0x3a7:0x3ed]
---
Predecessors: [0x38f]
Successors: [0x104]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x0
0x3aa DUP1
0x3ab SLOAD
0x3ac PUSH21 0xff0000000000000000000000000000000000000000
0x3c2 NOT
0x3c3 AND
0x3c4 DUP2
0x3c5 SSTORE
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x3ea SWAP2
0x3eb SWAP1
0x3ec LOG1
0x3ed JUMP
---
0x3a7: JUMPDEST 
0x3a8: V283 = 0x0
0x3ab: V284 = S[0x0]
0x3ac: V285 = 0xff0000000000000000000000000000000000000000
0x3c2: V286 = NOT 0xff0000000000000000000000000000000000000000
0x3c3: V287 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V284
0x3c5: S[0x0] = V287
0x3c6: V288 = 0x40
0x3c8: V289 = M[0x40]
0x3c9: V290 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x3ec: LOG V289 0x0 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x3ed: JUMP 0x104
---
Entry stack: [V11, 0x104]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ee
[0x3ee:0x3f3]
---
Predecessors: [0x1a1]
Successors: [0x11b]
---
0x3ee JUMPDEST
0x3ef PUSH1 0x5
0x3f1 SLOAD
0x3f2 DUP2
0x3f3 JUMP
---
0x3ee: JUMPDEST 
0x3ef: V291 = 0x5
0x3f1: V292 = S[0x5]
0x3f3: JUMP 0x11b
---
Entry stack: [V11, 0x11b]
Stack pops: 1
Stack additions: [S0, V292]
Exit stack: [V11, 0x11b, V292]

================================

Block 0x3f4
[0x3f4:0x3f9]
---
Predecessors: [0x1b6]
Successors: [0x11b]
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x7
0x3f7 SLOAD
0x3f8 DUP2
0x3f9 JUMP
---
0x3f4: JUMPDEST 
0x3f5: V293 = 0x7
0x3f7: V294 = S[0x7]
0x3f9: JUMP 0x11b
---
Entry stack: [V11, 0x11b]
Stack pops: 1
Stack additions: [S0, V294]
Exit stack: [V11, 0x11b, V294]

================================

Block 0x3fa
[0x3fa:0x408]
---
Predecessors: [0x1cb]
Successors: [0x1d4]
---
0x3fa JUMPDEST
0x3fb PUSH1 0x2
0x3fd SLOAD
0x3fe PUSH1 0x1
0x400 PUSH1 0xa0
0x402 PUSH1 0x2
0x404 EXP
0x405 SUB
0x406 AND
0x407 DUP2
0x408 JUMP
---
0x3fa: JUMPDEST 
0x3fb: V295 = 0x2
0x3fd: V296 = S[0x2]
0x3fe: V297 = 0x1
0x400: V298 = 0xa0
0x402: V299 = 0x2
0x404: V300 = EXP 0x2 0xa0
0x405: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x408: JUMP 0x1d4
---
Entry stack: [V11, 0x1d4]
Stack pops: 1
Stack additions: [S0, V302]
Exit stack: [V11, 0x1d4, V302]

================================

Block 0x409
[0x409:0x418]
---
Predecessors: [0x1fc]
Successors: [0x157]
---
0x409 JUMPDEST
0x40a PUSH1 0x0
0x40c SLOAD
0x40d PUSH1 0xa0
0x40f PUSH1 0x2
0x411 EXP
0x412 SWAP1
0x413 DIV
0x414 PUSH1 0xff
0x416 AND
0x417 DUP2
0x418 JUMP
---
0x409: JUMPDEST 
0x40a: V303 = 0x0
0x40c: V304 = S[0x0]
0x40d: V305 = 0xa0
0x40f: V306 = 0x2
0x411: V307 = EXP 0x2 0xa0
0x413: V308 = DIV V304 0x10000000000000000000000000000000000000000
0x414: V309 = 0xff
0x416: V310 = AND 0xff V308
0x418: JUMP 0x157
---
Entry stack: [V11, 0x157]
Stack pops: 1
Stack additions: [S0, V310]
Exit stack: [V11, 0x157, V310]

================================

Block 0x419
[0x419:0x41e]
---
Predecessors: [0x211]
Successors: [0x11b]
---
0x419 JUMPDEST
0x41a PUSH1 0x9
0x41c SLOAD
0x41d DUP2
0x41e JUMP
---
0x419: JUMPDEST 
0x41a: V311 = 0x9
0x41c: V312 = S[0x9]
0x41e: JUMP 0x11b
---
Entry stack: [V11, 0x11b]
Stack pops: 1
Stack additions: [S0, V312]
Exit stack: [V11, 0x11b, V312]

================================

Block 0x41f
[0x41f:0x431]
---
Predecessors: [0x226]
Successors: [0x432, 0x436]
---
0x41f JUMPDEST
0x420 PUSH1 0x0
0x422 SLOAD
0x423 PUSH1 0x1
0x425 PUSH1 0xa0
0x427 PUSH1 0x2
0x429 EXP
0x42a SUB
0x42b AND
0x42c CALLER
0x42d EQ
0x42e PUSH2 0x436
0x431 JUMPI
---
0x41f: JUMPDEST 
0x420: V313 = 0x0
0x422: V314 = S[0x0]
0x423: V315 = 0x1
0x425: V316 = 0xa0
0x427: V317 = 0x2
0x429: V318 = EXP 0x2 0xa0
0x42a: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42b: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x42c: V321 = CALLER
0x42d: V322 = EQ V321 V320
0x42e: V323 = 0x436
0x431: JUMPI 0x436 V322
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x432
[0x432:0x435]
---
Predecessors: [0x41f]
Successors: []
---
0x432 PUSH1 0x0
0x434 DUP1
0x435 REVERT
---
0x432: V324 = 0x0
0x435: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x436
[0x436:0x448]
---
Predecessors: [0x41f]
Successors: [0x449, 0x44d]
---
0x436 JUMPDEST
0x437 PUSH1 0x0
0x439 SLOAD
0x43a PUSH1 0xa0
0x43c PUSH1 0x2
0x43e EXP
0x43f SWAP1
0x440 DIV
0x441 PUSH1 0xff
0x443 AND
0x444 ISZERO
0x445 PUSH2 0x44d
0x448 JUMPI
---
0x436: JUMPDEST 
0x437: V325 = 0x0
0x439: V326 = S[0x0]
0x43a: V327 = 0xa0
0x43c: V328 = 0x2
0x43e: V329 = EXP 0x2 0xa0
0x440: V330 = DIV V326 0x10000000000000000000000000000000000000000
0x441: V331 = 0xff
0x443: V332 = AND 0xff V330
0x444: V333 = ISZERO V332
0x445: V334 = 0x44d
0x448: JUMPI 0x44d V333
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x449
[0x449:0x44c]
---
Predecessors: [0x436]
Successors: []
---
0x449 PUSH1 0x0
0x44b DUP1
0x44c REVERT
---
0x449: V335 = 0x0
0x44c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x44d
[0x44d:0x499]
---
Predecessors: [0x436]
Successors: [0x104]
---
0x44d JUMPDEST
0x44e PUSH1 0x0
0x450 DUP1
0x451 SLOAD
0x452 PUSH21 0xff0000000000000000000000000000000000000000
0x468 NOT
0x469 AND
0x46a PUSH1 0xa0
0x46c PUSH1 0x2
0x46e EXP
0x46f OR
0x470 DUP2
0x471 SSTORE
0x472 PUSH1 0x40
0x474 MLOAD
0x475 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x496 SWAP2
0x497 SWAP1
0x498 LOG1
0x499 JUMP
---
0x44d: JUMPDEST 
0x44e: V336 = 0x0
0x451: V337 = S[0x0]
0x452: V338 = 0xff0000000000000000000000000000000000000000
0x468: V339 = NOT 0xff0000000000000000000000000000000000000000
0x469: V340 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V337
0x46a: V341 = 0xa0
0x46c: V342 = 0x2
0x46e: V343 = EXP 0x2 0xa0
0x46f: V344 = OR 0x10000000000000000000000000000000000000000 V340
0x471: S[0x0] = V344
0x472: V345 = 0x40
0x474: V346 = M[0x40]
0x475: V347 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x498: LOG V346 0x0 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x499: JUMP 0x104
---
Entry stack: [V11, 0x104]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x49a
[0x49a:0x4ad]
---
Predecessors: [0x23b]
Successors: [0x4ae, 0x4b2]
---
0x49a JUMPDEST
0x49b PUSH1 0x0
0x49d DUP1
0x49e SLOAD
0x49f PUSH1 0x1
0x4a1 PUSH1 0xa0
0x4a3 PUSH1 0x2
0x4a5 EXP
0x4a6 SUB
0x4a7 AND
0x4a8 CALLER
0x4a9 EQ
0x4aa PUSH2 0x4b2
0x4ad JUMPI
---
0x49a: JUMPDEST 
0x49b: V348 = 0x0
0x49e: V349 = S[0x0]
0x49f: V350 = 0x1
0x4a1: V351 = 0xa0
0x4a3: V352 = 0x2
0x4a5: V353 = EXP 0x2 0xa0
0x4a6: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a7: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x4a8: V356 = CALLER
0x4a9: V357 = EQ V356 V355
0x4aa: V358 = 0x4b2
0x4ad: JUMPI 0x4b2 V357
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x104, 0x0]

================================

Block 0x4ae
[0x4ae:0x4b1]
---
Predecessors: [0x49a]
Successors: []
---
0x4ae PUSH1 0x0
0x4b0 DUP1
0x4b1 REVERT
---
0x4ae: V359 = 0x0
0x4b1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, 0x0]

================================

Block 0x4b2
[0x4b2:0x513]
---
Predecessors: [0x49a]
Successors: [0x514, 0x518]
---
0x4b2 JUMPDEST
0x4b3 PUSH1 0x1
0x4b5 SLOAD
0x4b6 PUSH1 0x40
0x4b8 DUP1
0x4b9 MLOAD
0x4ba PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4db DUP2
0x4dc MSTORE
0x4dd ADDRESS
0x4de PUSH1 0x4
0x4e0 DUP3
0x4e1 ADD
0x4e2 MSTORE
0x4e3 SWAP1
0x4e4 MLOAD
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0xa0
0x4e9 PUSH1 0x2
0x4eb EXP
0x4ec SUB
0x4ed SWAP1
0x4ee SWAP3
0x4ef AND
0x4f0 SWAP2
0x4f1 PUSH4 0x70a08231
0x4f6 SWAP2
0x4f7 PUSH1 0x24
0x4f9 DUP1
0x4fa DUP3
0x4fb ADD
0x4fc SWAP3
0x4fd PUSH1 0x20
0x4ff SWAP3
0x500 SWAP1
0x501 SWAP2
0x502 SWAP1
0x503 DUP3
0x504 SWAP1
0x505 SUB
0x506 ADD
0x507 DUP2
0x508 PUSH1 0x0
0x50a DUP8
0x50b DUP1
0x50c EXTCODESIZE
0x50d ISZERO
0x50e DUP1
0x50f ISZERO
0x510 PUSH2 0x518
0x513 JUMPI
---
0x4b2: JUMPDEST 
0x4b3: V360 = 0x1
0x4b5: V361 = S[0x1]
0x4b6: V362 = 0x40
0x4b9: V363 = M[0x40]
0x4ba: V364 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4dc: M[V363] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4dd: V365 = ADDRESS
0x4de: V366 = 0x4
0x4e1: V367 = ADD V363 0x4
0x4e2: M[V367] = V365
0x4e4: V368 = M[0x40]
0x4e5: V369 = 0x1
0x4e7: V370 = 0xa0
0x4e9: V371 = 0x2
0x4eb: V372 = EXP 0x2 0xa0
0x4ec: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ef: V374 = AND V361 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V375 = 0x70a08231
0x4f7: V376 = 0x24
0x4fb: V377 = ADD V363 0x24
0x4fd: V378 = 0x20
0x505: V379 = SUB V363 V368
0x506: V380 = ADD V379 0x24
0x508: V381 = 0x0
0x50c: V382 = EXTCODESIZE V374
0x50d: V383 = ISZERO V382
0x50f: V384 = ISZERO V383
0x510: V385 = 0x518
0x513: JUMPI 0x518 V384
---
Entry stack: [V11, 0x104, 0x0]
Stack pops: 0
Stack additions: [V374, 0x70a08231, V377, 0x20, V368, V380, V368, 0x0, V374, V383]
Exit stack: [V11, 0x104, 0x0, V374, 0x70a08231, V377, 0x20, V368, V380, V368, 0x0, V374, V383]

================================

Block 0x514
[0x514:0x517]
---
Predecessors: [0x4b2]
Successors: []
---
0x514 PUSH1 0x0
0x516 DUP1
0x517 REVERT
---
0x514: V386 = 0x0
0x517: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, 0x0, V374, 0x70a08231, V377, 0x20, V368, V380, V368, 0x0, V374, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, 0x0, V374, 0x70a08231, V377, 0x20, V368, V380, V368, 0x0, V374, V383]

================================

Block 0x518
[0x518:0x522]
---
Predecessors: [0x4b2]
Successors: [0x523, 0x52c]
---
0x518 JUMPDEST
0x519 POP
0x51a GAS
0x51b CALL
0x51c ISZERO
0x51d DUP1
0x51e ISZERO
0x51f PUSH2 0x52c
0x522 JUMPI
---
0x518: JUMPDEST 
0x51a: V387 = GAS
0x51b: V388 = CALL V387 V374 0x0 V368 V380 V368 0x20
0x51c: V389 = ISZERO V388
0x51e: V390 = ISZERO V389
0x51f: V391 = 0x52c
0x522: JUMPI 0x52c V390
---
Entry stack: [V11, 0x104, 0x0, V374, 0x70a08231, V377, 0x20, V368, V380, V368, 0x0, V374, V383]
Stack pops: 7
Stack additions: [V389]
Exit stack: [V11, 0x104, 0x0, V374, 0x70a08231, V377, V389]

================================

Block 0x523
[0x523:0x52b]
---
Predecessors: [0x518]
Successors: []
---
0x523 RETURNDATASIZE
0x524 PUSH1 0x0
0x526 DUP1
0x527 RETURNDATACOPY
0x528 RETURNDATASIZE
0x529 PUSH1 0x0
0x52b REVERT
---
0x523: V392 = RETURNDATASIZE
0x524: V393 = 0x0
0x527: RETURNDATACOPY 0x0 0x0 V392
0x528: V394 = RETURNDATASIZE
0x529: V395 = 0x0
0x52b: REVERT 0x0 V394
---
Entry stack: [V11, 0x104, 0x0, V374, 0x70a08231, V377, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, 0x0, V374, 0x70a08231, V377, V389]

================================

Block 0x52c
[0x52c:0x53d]
---
Predecessors: [0x518]
Successors: [0x53e, 0x542]
---
0x52c JUMPDEST
0x52d POP
0x52e POP
0x52f POP
0x530 POP
0x531 PUSH1 0x40
0x533 MLOAD
0x534 RETURNDATASIZE
0x535 PUSH1 0x20
0x537 DUP2
0x538 LT
0x539 ISZERO
0x53a PUSH2 0x542
0x53d JUMPI
---
0x52c: JUMPDEST 
0x531: V396 = 0x40
0x533: V397 = M[0x40]
0x534: V398 = RETURNDATASIZE
0x535: V399 = 0x20
0x538: V400 = LT V398 0x20
0x539: V401 = ISZERO V400
0x53a: V402 = 0x542
0x53d: JUMPI 0x542 V401
---
Entry stack: [V11, 0x104, 0x0, V374, 0x70a08231, V377, V389]
Stack pops: 4
Stack additions: [V397, V398]
Exit stack: [V11, 0x104, 0x0, V397, V398]

================================

Block 0x53e
[0x53e:0x541]
---
Predecessors: [0x52c]
Successors: []
---
0x53e PUSH1 0x0
0x540 DUP1
0x541 REVERT
---
0x53e: V403 = 0x0
0x541: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, 0x0, V397, V398]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, 0x0, V397, V398]

================================

Block 0x542
[0x542:0x5b4]
---
Predecessors: [0x52c]
Successors: [0x5b5, 0x5b9]
---
0x542 JUMPDEST
0x543 POP
0x544 MLOAD
0x545 PUSH1 0x1
0x547 SLOAD
0x548 PUSH1 0x0
0x54a DUP1
0x54b SLOAD
0x54c PUSH1 0x40
0x54e DUP1
0x54f MLOAD
0x550 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x571 DUP2
0x572 MSTORE
0x573 PUSH1 0x1
0x575 PUSH1 0xa0
0x577 PUSH1 0x2
0x579 EXP
0x57a SUB
0x57b SWAP3
0x57c DUP4
0x57d AND
0x57e PUSH1 0x4
0x580 DUP3
0x581 ADD
0x582 MSTORE
0x583 PUSH1 0x24
0x585 DUP2
0x586 ADD
0x587 DUP7
0x588 SWAP1
0x589 MSTORE
0x58a SWAP1
0x58b MLOAD
0x58c SWAP5
0x58d SWAP6
0x58e POP
0x58f SWAP3
0x590 AND
0x591 SWAP3
0x592 PUSH4 0xa9059cbb
0x597 SWAP3
0x598 PUSH1 0x44
0x59a DUP1
0x59b DUP3
0x59c ADD
0x59d SWAP4
0x59e PUSH1 0x20
0x5a0 SWAP4
0x5a1 SWAP3
0x5a2 DUP4
0x5a3 SWAP1
0x5a4 SUB
0x5a5 SWAP1
0x5a6 SWAP2
0x5a7 ADD
0x5a8 SWAP1
0x5a9 DUP3
0x5aa SWAP1
0x5ab DUP8
0x5ac DUP1
0x5ad EXTCODESIZE
0x5ae ISZERO
0x5af DUP1
0x5b0 ISZERO
0x5b1 PUSH2 0x5b9
0x5b4 JUMPI
---
0x542: JUMPDEST 
0x544: V404 = M[V397]
0x545: V405 = 0x1
0x547: V406 = S[0x1]
0x548: V407 = 0x0
0x54b: V408 = S[0x0]
0x54c: V409 = 0x40
0x54f: V410 = M[0x40]
0x550: V411 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x572: M[V410] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x573: V412 = 0x1
0x575: V413 = 0xa0
0x577: V414 = 0x2
0x579: V415 = EXP 0x2 0xa0
0x57a: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57d: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x57e: V418 = 0x4
0x581: V419 = ADD V410 0x4
0x582: M[V419] = V417
0x583: V420 = 0x24
0x586: V421 = ADD V410 0x24
0x589: M[V421] = V404
0x58b: V422 = M[0x40]
0x590: V423 = AND V406 0xffffffffffffffffffffffffffffffffffffffff
0x592: V424 = 0xa9059cbb
0x598: V425 = 0x44
0x59c: V426 = ADD V410 0x44
0x59e: V427 = 0x20
0x5a4: V428 = SUB V410 V422
0x5a7: V429 = ADD 0x44 V428
0x5ad: V430 = EXTCODESIZE V423
0x5ae: V431 = ISZERO V430
0x5b0: V432 = ISZERO V431
0x5b1: V433 = 0x5b9
0x5b4: JUMPI 0x5b9 V432
---
Entry stack: [V11, 0x104, 0x0, V397, V398]
Stack pops: 3
Stack additions: [V404, V423, 0xa9059cbb, V426, 0x20, V422, V429, V422, 0x0, V423, V431]
Exit stack: [V11, 0x104, V404, V423, 0xa9059cbb, V426, 0x20, V422, V429, V422, 0x0, V423, V431]

================================

Block 0x5b5
[0x5b5:0x5b8]
---
Predecessors: [0x542]
Successors: []
---
0x5b5 PUSH1 0x0
0x5b7 DUP1
0x5b8 REVERT
---
0x5b5: V434 = 0x0
0x5b8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, V404, V423, 0xa9059cbb, V426, 0x20, V422, V429, V422, 0x0, V423, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V404, V423, 0xa9059cbb, V426, 0x20, V422, V429, V422, 0x0, V423, V431]

================================

Block 0x5b9
[0x5b9:0x5c3]
---
Predecessors: [0x542]
Successors: [0x5c4, 0x5cd]
---
0x5b9 JUMPDEST
0x5ba POP
0x5bb GAS
0x5bc CALL
0x5bd ISZERO
0x5be DUP1
0x5bf ISZERO
0x5c0 PUSH2 0x5cd
0x5c3 JUMPI
---
0x5b9: JUMPDEST 
0x5bb: V435 = GAS
0x5bc: V436 = CALL V435 V423 0x0 V422 V429 V422 0x20
0x5bd: V437 = ISZERO V436
0x5bf: V438 = ISZERO V437
0x5c0: V439 = 0x5cd
0x5c3: JUMPI 0x5cd V438
---
Entry stack: [V11, 0x104, V404, V423, 0xa9059cbb, V426, 0x20, V422, V429, V422, 0x0, V423, V431]
Stack pops: 7
Stack additions: [V437]
Exit stack: [V11, 0x104, V404, V423, 0xa9059cbb, V426, V437]

================================

Block 0x5c4
[0x5c4:0x5cc]
---
Predecessors: [0x5b9]
Successors: []
---
0x5c4 RETURNDATASIZE
0x5c5 PUSH1 0x0
0x5c7 DUP1
0x5c8 RETURNDATACOPY
0x5c9 RETURNDATASIZE
0x5ca PUSH1 0x0
0x5cc REVERT
---
0x5c4: V440 = RETURNDATASIZE
0x5c5: V441 = 0x0
0x5c8: RETURNDATACOPY 0x0 0x0 V440
0x5c9: V442 = RETURNDATASIZE
0x5ca: V443 = 0x0
0x5cc: REVERT 0x0 V442
---
Entry stack: [V11, 0x104, V404, V423, 0xa9059cbb, V426, V437]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V404, V423, 0xa9059cbb, V426, V437]

================================

Block 0x5cd
[0x5cd:0x5de]
---
Predecessors: [0x5b9]
Successors: [0x359, 0x5df]
---
0x5cd JUMPDEST
0x5ce POP
0x5cf POP
0x5d0 POP
0x5d1 POP
0x5d2 PUSH1 0x40
0x5d4 MLOAD
0x5d5 RETURNDATASIZE
0x5d6 PUSH1 0x20
0x5d8 DUP2
0x5d9 LT
0x5da ISZERO
0x5db PUSH2 0x359
0x5de JUMPI
---
0x5cd: JUMPDEST 
0x5d2: V444 = 0x40
0x5d4: V445 = M[0x40]
0x5d5: V446 = RETURNDATASIZE
0x5d6: V447 = 0x20
0x5d9: V448 = LT V446 0x20
0x5da: V449 = ISZERO V448
0x5db: V450 = 0x359
0x5de: JUMPI 0x359 V449
---
Entry stack: [V11, 0x104, V404, V423, 0xa9059cbb, V426, V437]
Stack pops: 4
Stack additions: [V445, V446]
Exit stack: [V11, 0x104, V404, V445, V446]

================================

Block 0x5df
[0x5df:0x5e2]
---
Predecessors: [0x5cd]
Successors: []
---
0x5df PUSH1 0x0
0x5e1 DUP1
0x5e2 REVERT
---
0x5df: V451 = 0x0
0x5e2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, V404, V445, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V404, V445, V446]

================================

Block 0x5e3
[0x5e3:0x5f1]
---
Predecessors: [0x250]
Successors: [0x1d4]
---
0x5e3 JUMPDEST
0x5e4 PUSH1 0x0
0x5e6 SLOAD
0x5e7 PUSH1 0x1
0x5e9 PUSH1 0xa0
0x5eb PUSH1 0x2
0x5ed EXP
0x5ee SUB
0x5ef AND
0x5f0 DUP2
0x5f1 JUMP
---
0x5e3: JUMPDEST 
0x5e4: V452 = 0x0
0x5e6: V453 = S[0x0]
0x5e7: V454 = 0x1
0x5e9: V455 = 0xa0
0x5eb: V456 = 0x2
0x5ed: V457 = EXP 0x2 0xa0
0x5ee: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ef: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x5f1: JUMP 0x1d4
---
Entry stack: [V11, 0x1d4]
Stack pops: 1
Stack additions: [S0, V459]
Exit stack: [V11, 0x1d4, V459]

================================

Block 0x5f2
[0x5f2:0x604]
---
Predecessors: [0x265]
Successors: [0x605, 0x609]
---
0x5f2 JUMPDEST
0x5f3 PUSH1 0x0
0x5f5 SLOAD
0x5f6 PUSH1 0x1
0x5f8 PUSH1 0xa0
0x5fa PUSH1 0x2
0x5fc EXP
0x5fd SUB
0x5fe AND
0x5ff CALLER
0x600 EQ
0x601 PUSH2 0x609
0x604 JUMPI
---
0x5f2: JUMPDEST 
0x5f3: V460 = 0x0
0x5f5: V461 = S[0x0]
0x5f6: V462 = 0x1
0x5f8: V463 = 0xa0
0x5fa: V464 = 0x2
0x5fc: V465 = EXP 0x2 0xa0
0x5fd: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fe: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x5ff: V468 = CALLER
0x600: V469 = EQ V468 V467
0x601: V470 = 0x609
0x604: JUMPI 0x609 V469
---
Entry stack: [V11, 0x104, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V179]

================================

Block 0x605
[0x605:0x608]
---
Predecessors: [0x5f2]
Successors: []
---
0x605 PUSH1 0x0
0x607 DUP1
0x608 REVERT
---
0x605: V471 = 0x0
0x608: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V179]

================================

Block 0x609
[0x609:0x619]
---
Predecessors: [0x5f2]
Successors: [0x104]
---
0x609 JUMPDEST
0x60a PUSH1 0x8
0x60c DUP2
0x60d SWAP1
0x60e SSTORE
0x60f TIMESTAMP
0x610 PUSH1 0x6
0x612 DUP2
0x613 SWAP1
0x614 SSTORE
0x615 ADD
0x616 PUSH1 0x7
0x618 SSTORE
0x619 JUMP
---
0x609: JUMPDEST 
0x60a: V472 = 0x8
0x60e: S[0x8] = V179
0x60f: V473 = TIMESTAMP
0x610: V474 = 0x6
0x614: S[0x6] = V473
0x615: V475 = ADD V473 V179
0x616: V476 = 0x7
0x618: S[0x7] = V475
0x619: JUMP 0x104
---
Entry stack: [V11, 0x104, V179]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x61a
[0x61a:0x61f]
---
Predecessors: [0x27d]
Successors: [0x11b]
---
0x61a JUMPDEST
0x61b PUSH1 0x6
0x61d SLOAD
0x61e DUP2
0x61f JUMP
---
0x61a: JUMPDEST 
0x61b: V477 = 0x6
0x61d: V478 = S[0x6]
0x61f: JUMP 0x11b
---
Entry stack: [V11, 0x11b]
Stack pops: 1
Stack additions: [S0, V478]
Exit stack: [V11, 0x11b, V478]

================================

Block 0x620
[0x620:0x632]
---
Predecessors: [0x2a6]
Successors: [0x633, 0x637]
---
0x620 JUMPDEST
0x621 PUSH1 0x0
0x623 SLOAD
0x624 PUSH1 0x1
0x626 PUSH1 0xa0
0x628 PUSH1 0x2
0x62a EXP
0x62b SUB
0x62c AND
0x62d CALLER
0x62e EQ
0x62f PUSH2 0x637
0x632 JUMPI
---
0x620: JUMPDEST 
0x621: V479 = 0x0
0x623: V480 = S[0x0]
0x624: V481 = 0x1
0x626: V482 = 0xa0
0x628: V483 = 0x2
0x62a: V484 = EXP 0x2 0xa0
0x62b: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62c: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x62d: V487 = CALLER
0x62e: V488 = EQ V487 V486
0x62f: V489 = 0x637
0x632: JUMPI 0x637 V488
---
Entry stack: [V11, 0x104, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V209]

================================

Block 0x633
[0x633:0x636]
---
Predecessors: [0x620]
Successors: []
---
0x633 PUSH1 0x0
0x635 DUP1
0x636 REVERT
---
0x633: V490 = 0x0
0x636: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V209]

================================

Block 0x637
[0x637:0x647]
---
Predecessors: [0x620]
Successors: [0x648, 0x64c]
---
0x637 JUMPDEST
0x638 PUSH1 0x1
0x63a PUSH1 0xa0
0x63c PUSH1 0x2
0x63e EXP
0x63f SUB
0x640 DUP2
0x641 AND
0x642 ISZERO
0x643 ISZERO
0x644 PUSH2 0x64c
0x647 JUMPI
---
0x637: JUMPDEST 
0x638: V491 = 0x1
0x63a: V492 = 0xa0
0x63c: V493 = 0x2
0x63e: V494 = EXP 0x2 0xa0
0x63f: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x641: V496 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x642: V497 = ISZERO V496
0x643: V498 = ISZERO V497
0x644: V499 = 0x64c
0x647: JUMPI 0x64c V498
---
Entry stack: [V11, 0x104, V209]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x104, V209]

================================

Block 0x648
[0x648:0x64b]
---
Predecessors: [0x637]
Successors: []
---
0x648 PUSH1 0x0
0x64a DUP1
0x64b REVERT
---
0x648: V500 = 0x0
0x64b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V209]

================================

Block 0x64c
[0x64c:0x6b3]
---
Predecessors: [0x637]
Successors: [0x104]
---
0x64c JUMPDEST
0x64d PUSH1 0x0
0x64f DUP1
0x650 SLOAD
0x651 PUSH1 0x40
0x653 MLOAD
0x654 PUSH1 0x1
0x656 PUSH1 0xa0
0x658 PUSH1 0x2
0x65a EXP
0x65b SUB
0x65c DUP1
0x65d DUP6
0x65e AND
0x65f SWAP4
0x660 SWAP3
0x661 AND
0x662 SWAP2
0x663 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x684 SWAP2
0x685 LOG3
0x686 PUSH1 0x0
0x688 DUP1
0x689 SLOAD
0x68a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69f NOT
0x6a0 AND
0x6a1 PUSH1 0x1
0x6a3 PUSH1 0xa0
0x6a5 PUSH1 0x2
0x6a7 EXP
0x6a8 SUB
0x6a9 SWAP3
0x6aa SWAP1
0x6ab SWAP3
0x6ac AND
0x6ad SWAP2
0x6ae SWAP1
0x6af SWAP2
0x6b0 OR
0x6b1 SWAP1
0x6b2 SSTORE
0x6b3 JUMP
---
0x64c: JUMPDEST 
0x64d: V501 = 0x0
0x650: V502 = S[0x0]
0x651: V503 = 0x40
0x653: V504 = M[0x40]
0x654: V505 = 0x1
0x656: V506 = 0xa0
0x658: V507 = 0x2
0x65a: V508 = EXP 0x2 0xa0
0x65b: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65e: V510 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x661: V511 = AND V502 0xffffffffffffffffffffffffffffffffffffffff
0x663: V512 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x685: LOG V504 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V511 V510
0x686: V513 = 0x0
0x689: V514 = S[0x0]
0x68a: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x69f: V516 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V517 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V514
0x6a1: V518 = 0x1
0x6a3: V519 = 0xa0
0x6a5: V520 = 0x2
0x6a7: V521 = EXP 0x2 0xa0
0x6a8: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ac: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x6b0: V524 = OR V523 V517
0x6b2: S[0x0] = V524
0x6b3: JUMP 0x104
---
Entry stack: [V11, 0x104, V209]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b4
[0x6b4:0x6c2]
---
Predecessors: [0x2c7]
Successors: [0x1d4]
---
0x6b4 JUMPDEST
0x6b5 PUSH1 0x1
0x6b7 SLOAD
0x6b8 PUSH1 0x1
0x6ba PUSH1 0xa0
0x6bc PUSH1 0x2
0x6be EXP
0x6bf SUB
0x6c0 AND
0x6c1 DUP2
0x6c2 JUMP
---
0x6b4: JUMPDEST 
0x6b5: V525 = 0x1
0x6b7: V526 = S[0x1]
0x6b8: V527 = 0x1
0x6ba: V528 = 0xa0
0x6bc: V529 = 0x2
0x6be: V530 = EXP 0x2 0xa0
0x6bf: V531 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c0: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x6c2: JUMP 0x1d4
---
Entry stack: [V11, 0x1d4]
Stack pops: 1
Stack additions: [S0, V532]
Exit stack: [V11, 0x1d4, V532]

================================

Block 0x6c3
[0x6c3:0x6d5]
---
Predecessors: [0x2d0]
Successors: [0x6d6, 0x6da]
---
0x6c3 JUMPDEST
0x6c4 PUSH1 0x0
0x6c6 SLOAD
0x6c7 PUSH1 0xa0
0x6c9 PUSH1 0x2
0x6cb EXP
0x6cc SWAP1
0x6cd DIV
0x6ce PUSH1 0xff
0x6d0 AND
0x6d1 ISZERO
0x6d2 PUSH2 0x6da
0x6d5 JUMPI
---
0x6c3: JUMPDEST 
0x6c4: V533 = 0x0
0x6c6: V534 = S[0x0]
0x6c7: V535 = 0xa0
0x6c9: V536 = 0x2
0x6cb: V537 = EXP 0x2 0xa0
0x6cd: V538 = DIV V534 0x10000000000000000000000000000000000000000
0x6ce: V539 = 0xff
0x6d0: V540 = AND 0xff V538
0x6d1: V541 = ISZERO V540
0x6d2: V542 = 0x6da
0x6d5: JUMPI 0x6da V541
---
Entry stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]

================================

Block 0x6d6
[0x6d6:0x6d9]
---
Predecessors: [0x6c3]
Successors: []
---
0x6d6 PUSH1 0x0
0x6d8 DUP1
0x6d9 REVERT
---
0x6d6: V543 = 0x0
0x6d9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]

================================

Block 0x6da
[0x6da:0x6ea]
---
Predecessors: [0x6c3]
Successors: [0x6eb, 0x6ef]
---
0x6da JUMPDEST
0x6db PUSH1 0x1
0x6dd PUSH1 0xa0
0x6df PUSH1 0x2
0x6e1 EXP
0x6e2 SUB
0x6e3 DUP3
0x6e4 AND
0x6e5 ISZERO
0x6e6 ISZERO
0x6e7 PUSH2 0x6ef
0x6ea JUMPI
---
0x6da: JUMPDEST 
0x6db: V544 = 0x1
0x6dd: V545 = 0xa0
0x6df: V546 = 0x2
0x6e1: V547 = EXP 0x2 0xa0
0x6e2: V548 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e4: V549 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x6e5: V550 = ISZERO V549
0x6e6: V551 = ISZERO V550
0x6e7: V552 = 0x6ef
0x6ea: JUMPI 0x6ef V551
---
Entry stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]

================================

Block 0x6eb
[0x6eb:0x6ee]
---
Predecessors: [0x6da]
Successors: []
---
0x6eb PUSH1 0x0
0x6ed DUP1
0x6ee REVERT
---
0x6eb: V553 = 0x0
0x6ee: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]

================================

Block 0x6ef
[0x6ef:0x6f9]
---
Predecessors: [0x6da]
Successors: [0x6fa, 0x6fe]
---
0x6ef JUMPDEST
0x6f0 PUSH1 0x9
0x6f2 SLOAD
0x6f3 DUP2
0x6f4 LT
0x6f5 ISZERO
0x6f6 PUSH2 0x6fe
0x6f9 JUMPI
---
0x6ef: JUMPDEST 
0x6f0: V554 = 0x9
0x6f2: V555 = S[0x9]
0x6f4: V556 = LT V217 V555
0x6f5: V557 = ISZERO V556
0x6f6: V558 = 0x6fe
0x6f9: JUMPI 0x6fe V557
---
Entry stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]

================================

Block 0x6fa
[0x6fa:0x6fd]
---
Predecessors: [0x6ef]
Successors: []
---
0x6fa PUSH1 0x0
0x6fc DUP1
0x6fd REVERT
---
0x6fa: V559 = 0x0
0x6fd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]

================================

Block 0x6fe
[0x6fe:0x70a]
---
Predecessors: [0x6ef]
Successors: [0x70b, 0x712]
---
0x6fe JUMPDEST
0x6ff PUSH1 0x6
0x701 SLOAD
0x702 TIMESTAMP
0x703 LT
0x704 ISZERO
0x705 DUP1
0x706 ISZERO
0x707 PUSH2 0x712
0x70a JUMPI
---
0x6fe: JUMPDEST 
0x6ff: V560 = 0x6
0x701: V561 = S[0x6]
0x702: V562 = TIMESTAMP
0x703: V563 = LT V562 V561
0x704: V564 = ISZERO V563
0x706: V565 = ISZERO V564
0x707: V566 = 0x712
0x70a: JUMPI 0x712 V565
---
Entry stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]
Stack pops: 0
Stack additions: [V564]
Exit stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217, V564]

================================

Block 0x70b
[0x70b:0x711]
---
Predecessors: [0x6fe]
Successors: [0x712]
---
0x70b POP
0x70c PUSH1 0x7
0x70e SLOAD
0x70f TIMESTAMP
0x710 GT
0x711 ISZERO
---
0x70c: V567 = 0x7
0x70e: V568 = S[0x7]
0x70f: V569 = TIMESTAMP
0x710: V570 = GT V569 V568
0x711: V571 = ISZERO V570
---
Entry stack: [V11, 0x104, S6, V217, 0x0, 0x2dd, S2, V217, V564]
Stack pops: 1
Stack additions: [V571]
Exit stack: [V11, 0x104, S6, V217, 0x0, 0x2dd, S2, V217, V571]

================================

Block 0x712
[0x712:0x718]
---
Predecessors: [0x6fe, 0x70b]
Successors: [0x719, 0x71d]
---
0x712 JUMPDEST
0x713 ISZERO
0x714 ISZERO
0x715 PUSH2 0x71d
0x718 JUMPI
---
0x712: JUMPDEST 
0x713: V572 = ISZERO S0
0x714: V573 = ISZERO V572
0x715: V574 = 0x71d
0x718: JUMPI 0x71d V573
---
Entry stack: [V11, 0x104, S6, V217, 0x0, 0x2dd, S2, V217, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x104, S6, V217, 0x0, 0x2dd, S2, V217]

================================

Block 0x719
[0x719:0x71c]
---
Predecessors: [0x712]
Successors: []
---
0x719 PUSH1 0x0
0x71b DUP1
0x71c REVERT
---
0x719: V575 = 0x0
0x71c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S5, V217, 0x0, 0x2dd, S1, V217]

================================

Block 0x71d
[0x71d:0x720]
---
Predecessors: [0x712, 0x862]
Successors: [0x2dd, 0x309]
---
0x71d JUMPDEST
0x71e POP
0x71f POP
0x720 JUMP
---
0x71d: JUMPDEST 
0x720: JUMP {0x2dd, 0x309}
---
Entry stack: [V11, 0x104, S8, S7, {0x0, 0x104}, S5, V217, S3, {0x2dd, 0x309}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x104, S8, S7, {0x0, 0x104}, S5, V217, S3]

================================

Block 0x721
[0x721:0x737]
---
Predecessors: [0x2dd]
Successors: [0x79e]
---
0x721 JUMPDEST
0x722 PUSH1 0x0
0x724 PUSH2 0x738
0x727 PUSH1 0x4
0x729 SLOAD
0x72a DUP4
0x72b PUSH2 0x79e
0x72e SWAP1
0x72f SWAP2
0x730 SWAP1
0x731 PUSH4 0xffffffff
0x736 AND
0x737 JUMP
---
0x721: JUMPDEST 
0x722: V576 = 0x0
0x724: V577 = 0x738
0x727: V578 = 0x4
0x729: V579 = S[0x4]
0x72b: V580 = 0x79e
0x731: V581 = 0xffffffff
0x736: V582 = AND 0xffffffff 0x79e
0x737: JUMP 0x79e
---
Entry stack: [V11, 0x104, S7, S6, {0x0, 0x104}, S4, V217, S2, 0x2e6, V217]
Stack pops: 1
Stack additions: [S0, 0x0, 0x738, S0, V579]
Exit stack: [V11, 0x104, S7, S6, {0x0, 0x104}, S4, V217, S2, 0x2e6, V217, 0x0, 0x738, V217, V579]

================================

Block 0x738
[0x738:0x73d]
---
Predecessors: [0x751]
Successors: [0x2e6]
---
0x738 JUMPDEST
0x739 SWAP3
0x73a SWAP2
0x73b POP
0x73c POP
0x73d JUMP
---
0x738: JUMPDEST 
0x73d: JUMP S3
---
Entry stack: [V11, 0x104, S9, S8, {0x0, 0x104}, S6, S5, S4, S3, V217, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x104, S9, S8, {0x0, 0x104}, S6, S5, S4, S0]

================================

Block 0x73e
[0x73e:0x74b]
---
Predecessors: [0x2e6]
Successors: [0x74c, 0x74d]
---
0x73e JUMPDEST
0x73f PUSH1 0x0
0x741 DUP3
0x742 DUP3
0x743 ADD
0x744 DUP4
0x745 DUP2
0x746 LT
0x747 ISZERO
0x748 PUSH2 0x74d
0x74b JUMPI
---
0x73e: JUMPDEST 
0x73f: V583 = 0x0
0x743: V584 = ADD S0 V224
0x746: V585 = LT V584 V224
0x747: V586 = ISZERO V585
0x748: V587 = 0x74d
0x74b: JUMPI 0x74d V586
---
Entry stack: [V11, 0x104, S5, S4, S3, 0x2fc, V224, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V584]
Exit stack: [V11, 0x104, S5, S4, S3, 0x2fc, V224, S0, 0x0, V584]

================================

Block 0x74c
[0x74c:0x74c]
---
Predecessors: [0x73e]
Successors: []
---
0x74c INVALID
---
0x74c: INVALID 
---
Entry stack: [V11, 0x104, S7, S6, S5, 0x2fc, V224, S2, 0x0, V584]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S7, S6, S5, 0x2fc, V224, S2, 0x0, V584]

================================

Block 0x74d
[0x74d:0x750]
---
Predecessors: [0x73e, 0x7c1]
Successors: [0x751]
---
0x74d JUMPDEST
0x74e DUP1
0x74f SWAP2
0x750 POP
---
0x74d: JUMPDEST 
---
Entry stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, S9, S8, S7, S6, S5, {0x2fc, 0x738}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, S9, S8, S7, S6, S5, {0x2fc, 0x738}, S3, S2, S0, S0]

================================

Block 0x751
[0x751:0x757]
---
Predecessors: [0x74d, 0x7a9]
Successors: [0x2fc, 0x738]
---
0x751 JUMPDEST
0x752 POP
0x753 SWAP3
0x754 SWAP2
0x755 POP
0x756 POP
0x757 JUMP
---
0x751: JUMPDEST 
0x757: JUMP {0x2fc, 0x738}
---
Entry stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, S9, S8, S7, V217, S5, {0x2fc, 0x738}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, S9, S8, S7, V217, S5, S1]

================================

Block 0x758
[0x758:0x761]
---
Predecessors: [0x2fc]
Successors: [0x7c9]
---
0x758 JUMPDEST
0x759 PUSH2 0x71d
0x75c DUP3
0x75d DUP3
0x75e PUSH2 0x7c9
0x761 JUMP
---
0x758: JUMPDEST 
0x759: V588 = 0x71d
0x75e: V589 = 0x7c9
0x761: JUMP 0x7c9
---
Entry stack: [V11, 0x104, S11, S10, {0x0, 0x104}, S8, S7, S6, S5, V217, S3, 0x309, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x71d, S1, S0]
Exit stack: [V11, 0x104, S11, S10, {0x0, 0x104}, S8, S7, S6, S5, V217, S3, 0x309, S1, S0, 0x71d, S1, S0]

================================

Block 0x762
[0x762:0x791]
---
Predecessors: [0x309]
Successors: [0x792, 0x79b]
---
0x762 JUMPDEST
0x763 PUSH1 0x2
0x765 SLOAD
0x766 PUSH1 0x40
0x768 MLOAD
0x769 PUSH1 0x1
0x76b PUSH1 0xa0
0x76d PUSH1 0x2
0x76f EXP
0x770 SUB
0x771 SWAP1
0x772 SWAP2
0x773 AND
0x774 SWAP1
0x775 CALLVALUE
0x776 DUP1
0x777 ISZERO
0x778 PUSH2 0x8fc
0x77b MUL
0x77c SWAP2
0x77d PUSH1 0x0
0x77f DUP2
0x780 DUP2
0x781 DUP2
0x782 DUP6
0x783 DUP9
0x784 DUP9
0x785 CALL
0x786 SWAP4
0x787 POP
0x788 POP
0x789 POP
0x78a POP
0x78b ISZERO
0x78c DUP1
0x78d ISZERO
0x78e PUSH2 0x79b
0x791 JUMPI
---
0x762: JUMPDEST 
0x763: V590 = 0x2
0x765: V591 = S[0x2]
0x766: V592 = 0x40
0x768: V593 = M[0x40]
0x769: V594 = 0x1
0x76b: V595 = 0xa0
0x76d: V596 = 0x2
0x76f: V597 = EXP 0x2 0xa0
0x770: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x773: V599 = AND V591 0xffffffffffffffffffffffffffffffffffffffff
0x775: V600 = CALLVALUE
0x777: V601 = ISZERO V600
0x778: V602 = 0x8fc
0x77b: V603 = MUL 0x8fc V601
0x77d: V604 = 0x0
0x785: V605 = CALL V603 V599 V600 V593 0x0 V593 0x0
0x78b: V606 = ISZERO V605
0x78d: V607 = ISZERO V606
0x78e: V608 = 0x79b
0x791: JUMPI 0x79b V607
---
Entry stack: [V11, 0x104, S6, S5, {0x0, 0x104}, S3, V217, S1, 0x359]
Stack pops: 0
Stack additions: [V606]
Exit stack: [V11, 0x104, S6, S5, {0x0, 0x104}, S3, V217, S1, 0x359, V606]

================================

Block 0x792
[0x792:0x79a]
---
Predecessors: [0x762]
Successors: []
---
0x792 RETURNDATASIZE
0x793 PUSH1 0x0
0x795 DUP1
0x796 RETURNDATACOPY
0x797 RETURNDATASIZE
0x798 PUSH1 0x0
0x79a REVERT
---
0x792: V609 = RETURNDATASIZE
0x793: V610 = 0x0
0x796: RETURNDATACOPY 0x0 0x0 V609
0x797: V611 = RETURNDATASIZE
0x798: V612 = 0x0
0x79a: REVERT 0x0 V611
---
Entry stack: [V11, 0x104, S7, S6, {0x0, 0x104}, S4, V217, S2, 0x359, V606]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S7, S6, {0x0, 0x104}, S4, V217, S2, 0x359, V606]

================================

Block 0x79b
[0x79b:0x79d]
---
Predecessors: [0x762]
Successors: [0x359]
---
0x79b JUMPDEST
0x79c POP
0x79d JUMP
---
0x79b: JUMPDEST 
0x79d: JUMP 0x359
---
Entry stack: [V11, 0x104, S7, S6, {0x0, 0x104}, S4, V217, S2, 0x359, V606]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x104, S7, S6, {0x0, 0x104}, S4, V217, S2]

================================

Block 0x79e
[0x79e:0x7a8]
---
Predecessors: [0x721]
Successors: [0x7a9, 0x7b1]
---
0x79e JUMPDEST
0x79f PUSH1 0x0
0x7a1 DUP1
0x7a2 DUP4
0x7a3 ISZERO
0x7a4 ISZERO
0x7a5 PUSH2 0x7b1
0x7a8 JUMPI
---
0x79e: JUMPDEST 
0x79f: V613 = 0x0
0x7a3: V614 = ISZERO V217
0x7a4: V615 = ISZERO V614
0x7a5: V616 = 0x7b1
0x7a8: JUMPI 0x7b1 V615
---
Entry stack: [V11, 0x104, S11, S10, {0x0, 0x104}, S8, V217, S6, 0x2e6, V217, 0x0, 0x738, V217, V579]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x104, S11, S10, {0x0, 0x104}, S8, V217, S6, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, 0x0]

================================

Block 0x7a9
[0x7a9:0x7b0]
---
Predecessors: [0x79e]
Successors: [0x751]
---
0x7a9 PUSH1 0x0
0x7ab SWAP2
0x7ac POP
0x7ad PUSH2 0x751
0x7b0 JUMP
---
0x7a9: V617 = 0x0
0x7ad: V618 = 0x751
0x7b0: JUMP 0x751
---
Entry stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, 0x0]

================================

Block 0x7b1
[0x7b1:0x7bf]
---
Predecessors: [0x79e]
Successors: [0x7c0, 0x7c1]
---
0x7b1 JUMPDEST
0x7b2 POP
0x7b3 DUP3
0x7b4 DUP3
0x7b5 MUL
0x7b6 DUP3
0x7b7 DUP5
0x7b8 DUP3
0x7b9 DUP2
0x7ba ISZERO
0x7bb ISZERO
0x7bc PUSH2 0x7c1
0x7bf JUMPI
---
0x7b1: JUMPDEST 
0x7b5: V619 = MUL V579 V217
0x7ba: V620 = ISZERO V217
0x7bb: V621 = ISZERO V620
0x7bc: V622 = 0x7c1
0x7bf: JUMPI 0x7c1 V621
---
Entry stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V619, S2, S3, V619]
Exit stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, V619, V579, V217, V619]

================================

Block 0x7c0
[0x7c0:0x7c0]
---
Predecessors: [0x7b1]
Successors: []
---
0x7c0 INVALID
---
0x7c0: INVALID 
---
Entry stack: [V11, 0x104, S16, S15, {0x0, 0x104}, S13, V217, S11, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, V619, V579, V217, V619]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S16, S15, {0x0, 0x104}, S13, V217, S11, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, V619, V579, V217, V619]

================================

Block 0x7c1
[0x7c1:0x7c7]
---
Predecessors: [0x7b1]
Successors: [0x74d, 0x7c8]
---
0x7c1 JUMPDEST
0x7c2 DIV
0x7c3 EQ
0x7c4 PUSH2 0x74d
0x7c7 JUMPI
---
0x7c1: JUMPDEST 
0x7c2: V623 = DIV V619 V217
0x7c3: V624 = EQ V623 V579
0x7c4: V625 = 0x74d
0x7c7: JUMPI 0x74d V624
---
Entry stack: [V11, 0x104, S16, S15, {0x0, 0x104}, S13, V217, S11, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, V619, V579, V217, V619]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x104, S16, S15, {0x0, 0x104}, S13, V217, S11, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, V619]

================================

Block 0x7c8
[0x7c8:0x7c8]
---
Predecessors: [0x7c1]
Successors: []
---
0x7c8 INVALID
---
0x7c8: INVALID 
---
Entry stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, V619]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x2e6, V217, 0x0, 0x738, V217, V579, 0x0, V619]

================================

Block 0x7c9
[0x7c9:0x833]
---
Predecessors: [0x758]
Successors: [0x834, 0x838]
---
0x7c9 JUMPDEST
0x7ca PUSH1 0x1
0x7cc SLOAD
0x7cd PUSH1 0x40
0x7cf DUP1
0x7d0 MLOAD
0x7d1 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7f2 DUP2
0x7f3 MSTORE
0x7f4 PUSH1 0x1
0x7f6 PUSH1 0xa0
0x7f8 PUSH1 0x2
0x7fa EXP
0x7fb SUB
0x7fc DUP6
0x7fd DUP2
0x7fe AND
0x7ff PUSH1 0x4
0x801 DUP4
0x802 ADD
0x803 MSTORE
0x804 PUSH1 0x24
0x806 DUP3
0x807 ADD
0x808 DUP6
0x809 SWAP1
0x80a MSTORE
0x80b SWAP2
0x80c MLOAD
0x80d SWAP2
0x80e SWAP1
0x80f SWAP3
0x810 AND
0x811 SWAP2
0x812 PUSH4 0xa9059cbb
0x817 SWAP2
0x818 PUSH1 0x44
0x81a DUP1
0x81b DUP4
0x81c ADD
0x81d SWAP3
0x81e PUSH1 0x20
0x820 SWAP3
0x821 SWAP2
0x822 SWAP1
0x823 DUP3
0x824 SWAP1
0x825 SUB
0x826 ADD
0x827 DUP2
0x828 PUSH1 0x0
0x82a DUP8
0x82b DUP1
0x82c EXTCODESIZE
0x82d ISZERO
0x82e DUP1
0x82f ISZERO
0x830 PUSH2 0x838
0x833 JUMPI
---
0x7c9: JUMPDEST 
0x7ca: V626 = 0x1
0x7cc: V627 = S[0x1]
0x7cd: V628 = 0x40
0x7d0: V629 = M[0x40]
0x7d1: V630 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7f3: M[V629] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7f4: V631 = 0x1
0x7f6: V632 = 0xa0
0x7f8: V633 = 0x2
0x7fa: V634 = EXP 0x2 0xa0
0x7fb: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fe: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x7ff: V637 = 0x4
0x802: V638 = ADD V629 0x4
0x803: M[V638] = V636
0x804: V639 = 0x24
0x807: V640 = ADD V629 0x24
0x80a: M[V640] = S0
0x80c: V641 = M[0x40]
0x810: V642 = AND V627 0xffffffffffffffffffffffffffffffffffffffff
0x812: V643 = 0xa9059cbb
0x818: V644 = 0x44
0x81c: V645 = ADD V629 0x44
0x81e: V646 = 0x20
0x825: V647 = SUB V629 V641
0x826: V648 = ADD V647 0x44
0x828: V649 = 0x0
0x82c: V650 = EXTCODESIZE V642
0x82d: V651 = ISZERO V650
0x82f: V652 = ISZERO V651
0x830: V653 = 0x838
0x833: JUMPI 0x838 V652
---
Entry stack: [V11, 0x104, S11, S10, {0x0, 0x104}, S8, V217, S6, 0x309, S4, S3, 0x71d, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V642, 0xa9059cbb, V645, 0x20, V641, V648, V641, 0x0, V642, V651]
Exit stack: [V11, 0x104, S11, S10, {0x0, 0x104}, S8, V217, S6, 0x309, S4, S3, 0x71d, S1, S0, V642, 0xa9059cbb, V645, 0x20, V641, V648, V641, 0x0, V642, V651]

================================

Block 0x834
[0x834:0x837]
---
Predecessors: [0x7c9]
Successors: []
---
0x834 PUSH1 0x0
0x836 DUP1
0x837 REVERT
---
0x834: V654 = 0x0
0x837: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, S21, S20, {0x0, 0x104}, S18, V217, S16, 0x309, S14, S13, 0x71d, S11, S10, V642, 0xa9059cbb, V645, 0x20, V641, V648, V641, 0x0, V642, V651]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S21, S20, {0x0, 0x104}, S18, V217, S16, 0x309, S14, S13, 0x71d, S11, S10, V642, 0xa9059cbb, V645, 0x20, V641, V648, V641, 0x0, V642, V651]

================================

Block 0x838
[0x838:0x842]
---
Predecessors: [0x7c9]
Successors: [0x843, 0x84c]
---
0x838 JUMPDEST
0x839 POP
0x83a GAS
0x83b CALL
0x83c ISZERO
0x83d DUP1
0x83e ISZERO
0x83f PUSH2 0x84c
0x842 JUMPI
---
0x838: JUMPDEST 
0x83a: V655 = GAS
0x83b: V656 = CALL V655 V642 0x0 V641 V648 V641 0x20
0x83c: V657 = ISZERO V656
0x83e: V658 = ISZERO V657
0x83f: V659 = 0x84c
0x842: JUMPI 0x84c V658
---
Entry stack: [V11, 0x104, S21, S20, {0x0, 0x104}, S18, V217, S16, 0x309, S14, S13, 0x71d, S11, S10, V642, 0xa9059cbb, V645, 0x20, V641, V648, V641, 0x0, V642, V651]
Stack pops: 7
Stack additions: [V657]
Exit stack: [V11, 0x104, S21, S20, {0x0, 0x104}, S18, V217, S16, 0x309, S14, S13, 0x71d, S11, S10, V642, 0xa9059cbb, V645, V657]

================================

Block 0x843
[0x843:0x84b]
---
Predecessors: [0x838]
Successors: []
---
0x843 RETURNDATASIZE
0x844 PUSH1 0x0
0x846 DUP1
0x847 RETURNDATACOPY
0x848 RETURNDATASIZE
0x849 PUSH1 0x0
0x84b REVERT
---
0x843: V660 = RETURNDATASIZE
0x844: V661 = 0x0
0x847: RETURNDATACOPY 0x0 0x0 V660
0x848: V662 = RETURNDATASIZE
0x849: V663 = 0x0
0x84b: REVERT 0x0 V662
---
Entry stack: [V11, 0x104, S15, S14, {0x0, 0x104}, S12, V217, S10, 0x309, S8, S7, 0x71d, S5, S4, S3, 0xa9059cbb, S1, V657]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S15, S14, {0x0, 0x104}, S12, V217, S10, 0x309, S8, S7, 0x71d, S5, S4, S3, 0xa9059cbb, S1, V657]

================================

Block 0x84c
[0x84c:0x85d]
---
Predecessors: [0x838]
Successors: [0x85e, 0x862]
---
0x84c JUMPDEST
0x84d POP
0x84e POP
0x84f POP
0x850 POP
0x851 PUSH1 0x40
0x853 MLOAD
0x854 RETURNDATASIZE
0x855 PUSH1 0x20
0x857 DUP2
0x858 LT
0x859 ISZERO
0x85a PUSH2 0x862
0x85d JUMPI
---
0x84c: JUMPDEST 
0x851: V664 = 0x40
0x853: V665 = M[0x40]
0x854: V666 = RETURNDATASIZE
0x855: V667 = 0x20
0x858: V668 = LT V666 0x20
0x859: V669 = ISZERO V668
0x85a: V670 = 0x862
0x85d: JUMPI 0x862 V669
---
Entry stack: [V11, 0x104, S15, S14, {0x0, 0x104}, S12, V217, S10, 0x309, S8, S7, 0x71d, S5, S4, S3, 0xa9059cbb, S1, V657]
Stack pops: 4
Stack additions: [V665, V666]
Exit stack: [V11, 0x104, S15, S14, {0x0, 0x104}, S12, V217, S10, 0x309, S8, S7, 0x71d, S5, S4, V665, V666]

================================

Block 0x85e
[0x85e:0x861]
---
Predecessors: [0x84c]
Successors: []
---
0x85e PUSH1 0x0
0x860 DUP1
0x861 REVERT
---
0x85e: V671 = 0x0
0x861: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x309, S6, S5, 0x71d, S3, S2, V665, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x309, S6, S5, 0x71d, S3, S2, V665, V666]

================================

Block 0x862
[0x862:0x867]
---
Predecessors: [0x84c]
Successors: [0x71d]
---
0x862 JUMPDEST
0x863 POP
0x864 POP
0x865 POP
0x866 POP
0x867 JUMP
---
0x862: JUMPDEST 
0x867: JUMP 0x71d
---
Entry stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x309, S6, S5, 0x71d, S3, S2, V665, V666]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x104, S13, S12, {0x0, 0x104}, S10, V217, S8, 0x309, S6, S5]

================================

Block 0x868
[0x868:0x8a4]
---
Predecessors: []
Successors: []
---
0x868 STOP
0x869 LOG1
0x86a PUSH6 0x627a7a723058
0x871 SHA3
0x872 DUP13
0x873 SMOD
0x874 MISSING 0xd9
0x875 MISSING 0xe3
0x876 DIV
0x877 JUMP
0x878 PUSH9 0x47e848c44e20d58420
0x882 DUP7
0x883 COINBASE
0x884 PUSH32 0x23cc627edb36243804d67bb00a0029
---
0x868: STOP 
0x869: LOG S0 S1 S2
0x86a: V672 = 0x627a7a723058
0x871: V673 = SHA3 0x627a7a723058 S3
0x873: V674 = SMOD S15 V673
0x874: MISSING 0xd9
0x875: MISSING 0xe3
0x876: V675 = DIV S0 S1
0x877: JUMP V675
0x878: V676 = 0x47e848c44e20d58420
0x883: V677 = COINBASE
0x884: V678 = 0x23cc627edb36243804d67bb00a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V674, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0x23cc627edb36243804d67bb00a0029, V677, S5, 0x47e848c44e20d58420, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x47fc9aa
Entry block: 0x106
Exit block: 0x11b
Body: 0x106, 0x10e, 0x112, 0x11b, 0x35e

Function 1:
Public function signature: 0xfb5a6b4
Entry block: 0x12d
Exit block: 0x11b
Body: 0x11b, 0x12d, 0x135, 0x139, 0x364

Function 2:
Public function signature: 0x1515bc2b
Entry block: 0x142
Exit block: 0x157
Body: 0x142, 0x14a, 0x14e, 0x157, 0x36a

Function 3:
Public function signature: 0x2c4e722e
Entry block: 0x16b
Exit block: 0x11b
Body: 0x11b, 0x16b, 0x173, 0x177, 0x372

Function 4:
Public function signature: 0x3f4ba83a
Entry block: 0x180
Exit block: 0x104
Body: 0x104, 0x180, 0x188, 0x18c, 0x378, 0x38b, 0x38f, 0x3a3, 0x3a7

Function 5:
Public function signature: 0x4042b66f
Entry block: 0x195
Exit block: 0x11b
Body: 0x11b, 0x195, 0x19d, 0x1a1, 0x3ee

Function 6:
Public function signature: 0x4b6753bc
Entry block: 0x1aa
Exit block: 0x11b
Body: 0x11b, 0x1aa, 0x1b2, 0x1b6, 0x3f4

Function 7:
Public function signature: 0x521eb273
Entry block: 0x1bf
Exit block: 0x1d4
Body: 0x1bf, 0x1c7, 0x1cb, 0x1d4, 0x3fa

Function 8:
Public function signature: 0x5c975abb
Entry block: 0x1f0
Exit block: 0x157
Body: 0x157, 0x1f0, 0x1f8, 0x1fc, 0x409

Function 9:
Public function signature: 0x63fd9e38
Entry block: 0x205
Exit block: 0x11b
Body: 0x11b, 0x205, 0x20d, 0x211, 0x419

Function 10:
Public function signature: 0x8456cb59
Entry block: 0x21a
Exit block: 0x104
Body: 0x104, 0x21a, 0x222, 0x226, 0x41f, 0x432, 0x436, 0x449, 0x44d

Function 11:
Public function signature: 0x8d8f2adb
Entry block: 0x22f
Exit block: 0x104
Body: 0x104, 0x22f, 0x237, 0x23b, 0x49a, 0x4ae, 0x4b2, 0x514, 0x518, 0x523, 0x52c, 0x53e, 0x542, 0x5b5, 0x5b9, 0x5c4, 0x5cd, 0x5df

Function 12:
Public function signature: 0x8da5cb5b
Entry block: 0x244
Exit block: 0x1d4
Body: 0x1d4, 0x244, 0x24c, 0x250, 0x5e3

Function 13:
Public function signature: 0x95805dad
Entry block: 0x259
Exit block: 0x104
Body: 0x104, 0x259, 0x261, 0x265, 0x5f2, 0x605, 0x609

Function 14:
Public function signature: 0xb7a8807c
Entry block: 0x271
Exit block: 0x11b
Body: 0x11b, 0x271, 0x279, 0x27d, 0x61a

Function 15:
Public function signature: 0xec8ac4d8
Entry block: 0x286
Exit block: 0x104
Body: 0x104, 0x286

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x29a
Exit block: 0x104
Body: 0x104, 0x29a, 0x2a2, 0x2a6, 0x620, 0x633, 0x637, 0x648, 0x64c

Function 17:
Public function signature: 0xfc0c546a
Entry block: 0x2bb
Exit block: 0x1d4
Body: 0x1d4, 0x2bb, 0x2c3, 0x2c7, 0x6b4

Function 18:
Public fallback function
Entry block: 0xfb
Exit block: 0x104
Body: 0xfb, 0x104

Function 19:
Private function
Entry block: 0x2d0
Exit block: 0x64c
Body: 0x2d0, 0x2dd, 0x2e6, 0x2fc, 0x309, 0x359, 0x6c3, 0x6da, 0x6ef, 0x6fe, 0x70b, 0x712, 0x71d, 0x721, 0x738, 0x73e, 0x74d, 0x751, 0x758, 0x762, 0x79b, 0x79e, 0x7a9, 0x7b1, 0x7c1, 0x7c9, 0x838, 0x84c, 0x862

