Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb
0xa: JUMPI 0xb V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1b]
---
Predecessors: [0x0]
Successors: [0x1c, 0x29]
---
0xb JUMPDEST
0xc PUSH2 0xa5
0xf PUSH1 0x1
0x11 SLOAD
0x12 PUSH1 0x0
0x14 SWAP1
0x15 GT
0x16 DUP1
0x17 ISZERO
0x18 PUSH2 0x29
0x1b JUMPI
---
0xb: JUMPDEST 
0xc: V5 = 0xa5
0xf: V6 = 0x1
0x11: V7 = S[0x1]
0x12: V8 = 0x0
0x15: V9 = GT V7 0x0
0x17: V10 = ISZERO V9
0x18: V11 = 0x29
0x1b: JUMPI 0x29 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa5, V9]
Exit stack: [0xa5, V9]

================================

Block 0x1c
[0x1c:0x28]
---
Predecessors: [0xb]
Successors: [0x29]
---
0x1c POP
0x1d PUSH2 0x12c
0x20 PUSH1 0x1
0x22 PUSH1 0x0
0x24 POP
0x25 SLOAD
0x26 TIMESTAMP
0x27 SUB
0x28 GT
---
0x1d: V12 = 0x12c
0x20: V13 = 0x1
0x22: V14 = 0x0
0x25: V15 = S[0x1]
0x26: V16 = TIMESTAMP
0x27: V17 = SUB V16 V15
0x28: V18 = GT V17 0x12c
---
Entry stack: [0xa5, V9]
Stack pops: 1
Stack additions: [V18]
Exit stack: [0xa5, V18]

================================

Block 0x29
[0x29:0x2e]
---
Predecessors: [0xb, 0x1c]
Successors: [0x2f, 0xc5]
---
0x29 JUMPDEST
0x2a ISZERO
0x2b PUSH2 0xc5
0x2e JUMPI
---
0x29: JUMPDEST 
0x2a: V19 = ISZERO S0
0x2b: V20 = 0xc5
0x2e: JUMPI 0xc5 V19
---
Entry stack: [0xa5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0xa5]

================================

Block 0x2f
[0x2f:0x5b]
---
Predecessors: [0x29]
Successors: [0x5c, 0x117]
---
0x2f PUSH1 0x1
0x31 PUSH1 0xa0
0x33 PUSH1 0x2
0x35 EXP
0x36 SUB
0x37 CALLER
0x38 AND
0x39 PUSH1 0x0
0x3b CALLVALUE
0x3c PUSH1 0x60
0x3e DUP3
0x3f DUP2
0x40 DUP2
0x41 DUP2
0x42 DUP6
0x43 DUP9
0x44 DUP4
0x45 CALL
0x46 POP
0x47 POP
0x48 POP
0x49 ADDRESS
0x4a PUSH1 0x1
0x4c PUSH1 0xa0
0x4e PUSH1 0x2
0x50 EXP
0x51 SUB
0x52 AND
0x53 BALANCE
0x54 GT
0x55 ISZERO
0x56 SWAP1
0x57 POP
0x58 PUSH2 0x117
0x5b JUMPI
---
0x2f: V21 = 0x1
0x31: V22 = 0xa0
0x33: V23 = 0x2
0x35: V24 = EXP 0x2 0xa0
0x36: V25 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37: V26 = CALLER
0x38: V27 = AND V26 0xffffffffffffffffffffffffffffffffffffffff
0x39: V28 = 0x0
0x3b: V29 = CALLVALUE
0x3c: V30 = 0x60
0x45: V31 = CALL 0x0 V27 V29 0x60 0x0 0x60 0x0
0x49: V32 = ADDRESS
0x4a: V33 = 0x1
0x4c: V34 = 0xa0
0x4e: V35 = 0x2
0x50: V36 = EXP 0x2 0xa0
0x51: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x53: V39 = BALANCE V38
0x54: V40 = GT V39 0x0
0x55: V41 = ISZERO V40
0x58: V42 = 0x117
0x5b: JUMPI 0x117 V41
---
Entry stack: [0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [0xa5]

================================

Block 0x5c
[0x5c:0xa4]
---
Predecessors: [0x2f]
Successors: [0x13a]
---
0x5c PUSH1 0x0
0x5e DUP1
0x5f SLOAD
0x60 PUSH1 0x40
0x62 MLOAD
0x63 PUSH1 0x1
0x65 PUSH1 0xa0
0x67 PUSH1 0x2
0x69 EXP
0x6a SUB
0x6b SWAP2
0x6c DUP3
0x6d AND
0x6e SWAP3
0x6f SWAP2
0x70 ADDRESS
0x71 AND
0x72 BALANCE
0x73 SWAP1
0x74 DUP3
0x75 DUP2
0x76 DUP2
0x77 DUP2
0x78 DUP6
0x79 DUP9
0x7a DUP4
0x7b CALL
0x7c POP
0x7d PUSH1 0x4
0x7f DUP2
0x80 MSTORE
0x81 PUSH1 0x40
0x83 MLOAD
0x84 PUSH1 0x0
0x86 DUP1
0x87 MLOAD
0x88 PUSH1 0x20
0x8a PUSH2 0x140
0x8d DUP4
0x8e CODECOPY
0x8f DUP2
0x90 MLOAD
0x91 SWAP2
0x92 MSTORE
0x93 SWAP5
0x94 POP
0x95 SWAP1
0x96 DUP2
0x97 SWAP1
0x98 SUB
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP3
0x9d POP
0x9e SWAP1
0x9f POP
0xa0 LOG1
0xa1 PUSH2 0x13a
0xa4 JUMP
---
0x5c: V43 = 0x0
0x5f: V44 = S[0x0]
0x60: V45 = 0x40
0x62: V46 = M[0x40]
0x63: V47 = 0x1
0x65: V48 = 0xa0
0x67: V49 = 0x2
0x69: V50 = EXP 0x2 0xa0
0x6a: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x70: V53 = ADDRESS
0x71: V54 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0x72: V55 = BALANCE V54
0x7b: V56 = CALL 0x0 V52 V55 V46 0x0 V46 0x0
0x7d: V57 = 0x4
0x80: M[V46] = 0x4
0x81: V58 = 0x40
0x83: V59 = M[0x40]
0x84: V60 = 0x0
0x87: V61 = M[0x0]
0x88: V62 = 0x20
0x8a: V63 = 0x140
0x8e: CODECOPY 0x0 0x140 0x20
0x90: V64 = M[0x0]
0x92: M[0x0] = V61
0x98: V65 = SUB V46 V59
0x99: V66 = 0x20
0x9b: V67 = ADD 0x20 V65
0xa0: LOG V59 V67 V64
0xa1: V68 = 0x13a
0xa4: JUMP 0x13a
---
Entry stack: [0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [0xa5]

================================

Block 0xa5
[0xa5:0xa6]
---
Predecessors: [0xc3]
Successors: []
---
0xa5 JUMPDEST
0xa6 STOP
---
0xa5: JUMPDEST 
0xa6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa7
[0xa7:0xc2]
---
Predecessors: [0xc5]
Successors: [0xc3]
---
0xa7 JUMPDEST
0xa8 PUSH1 0x3
0xaa PUSH1 0x60
0xac SWAP1
0xad DUP2
0xae MSTORE
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 MLOAD
0xb3 PUSH1 0x20
0xb5 PUSH2 0x140
0xb8 DUP4
0xb9 CODECOPY
0xba DUP2
0xbb MLOAD
0xbc SWAP2
0xbd MSTORE
0xbe SWAP1
0xbf PUSH1 0x20
0xc1 SWAP1
0xc2 LOG1
---
0xa7: JUMPDEST 
0xa8: V69 = 0x3
0xaa: V70 = 0x60
0xae: M[0x60] = 0x3
0xaf: V71 = 0x0
0xb2: V72 = M[0x0]
0xb3: V73 = 0x20
0xb5: V74 = 0x140
0xb9: CODECOPY 0x0 0x140 0x20
0xbb: V75 = M[0x0]
0xbd: M[0x0] = V72
0xbf: V76 = 0x20
0xc2: LOG 0x60 0x20 V75
---
Entry stack: [0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [0xa5]

================================

Block 0xc3
[0xc3:0xc4]
---
Predecessors: [0xa7, 0xd5, 0x13a]
Successors: [0xa5]
---
0xc3 JUMPDEST
0xc4 JUMP
---
0xc3: JUMPDEST 
0xc4: JUMP 0xa5
---
Entry stack: [0xa5]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xc5
[0xc5:0xd4]
---
Predecessors: [0x29]
Successors: [0xa7, 0xd5]
---
0xc5 JUMPDEST
0xc6 PUSH8 0xde0b6b3a7640000
0xcf CALLVALUE
0xd0 LT
0xd1 PUSH2 0xa7
0xd4 JUMPI
---
0xc5: JUMPDEST 
0xc6: V77 = 0xde0b6b3a7640000
0xcf: V78 = CALLVALUE
0xd0: V79 = LT V78 0xde0b6b3a7640000
0xd1: V80 = 0xa7
0xd4: JUMPI 0xa7 V79
---
Entry stack: [0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [0xa5]

================================

Block 0xd5
[0xd5:0x116]
---
Predecessors: [0xc5]
Successors: [0xc3]
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 SLOAD
0xd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee NOT
0xef AND
0xf0 CALLER
0xf1 OR
0xf2 SWAP1
0xf3 SSTORE
0xf4 TIMESTAMP
0xf5 PUSH1 0x1
0xf7 SSTORE
0xf8 PUSH1 0x2
0xfa PUSH1 0x60
0xfc SWAP1
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x0
0x101 DUP1
0x102 MLOAD
0x103 PUSH1 0x20
0x105 PUSH2 0x140
0x108 DUP4
0x109 CODECOPY
0x10a DUP2
0x10b MLOAD
0x10c SWAP2
0x10d MSTORE
0x10e SWAP1
0x10f PUSH1 0x20
0x111 SWAP1
0x112 LOG1
0x113 PUSH2 0xc3
0x116 JUMP
---
0xd5: V81 = 0x0
0xd8: V82 = S[0x0]
0xd9: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0xee: V84 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xef: V85 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V82
0xf0: V86 = CALLER
0xf1: V87 = OR V86 V85
0xf3: S[0x0] = V87
0xf4: V88 = TIMESTAMP
0xf5: V89 = 0x1
0xf7: S[0x1] = V88
0xf8: V90 = 0x2
0xfa: V91 = 0x60
0xfe: M[0x60] = 0x2
0xff: V92 = 0x0
0x102: V93 = M[0x0]
0x103: V94 = 0x20
0x105: V95 = 0x140
0x109: CODECOPY 0x0 0x140 0x20
0x10b: V96 = M[0x0]
0x10d: M[0x0] = V93
0x10f: V97 = 0x20
0x112: LOG 0x60 0x20 V96
0x113: V98 = 0xc3
0x116: JUMP 0xc3
---
Entry stack: [0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [0xa5]

================================

Block 0x117
[0x117:0x139]
---
Predecessors: [0x2f]
Successors: [0x13a]
---
0x117 JUMPDEST
0x118 PUSH1 0x40
0x11a DUP1
0x11b MLOAD
0x11c PUSH1 0x5
0x11e DUP2
0x11f MSTORE
0x120 SWAP1
0x121 MLOAD
0x122 PUSH1 0x0
0x124 DUP1
0x125 MLOAD
0x126 PUSH1 0x20
0x128 PUSH2 0x140
0x12b DUP4
0x12c CODECOPY
0x12d DUP2
0x12e MLOAD
0x12f SWAP2
0x130 MSTORE
0x131 SWAP2
0x132 DUP2
0x133 SWAP1
0x134 SUB
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP1
0x139 LOG1
---
0x117: JUMPDEST 
0x118: V99 = 0x40
0x11b: V100 = M[0x40]
0x11c: V101 = 0x5
0x11f: M[V100] = 0x5
0x121: V102 = M[0x40]
0x122: V103 = 0x0
0x125: V104 = M[0x0]
0x126: V105 = 0x20
0x128: V106 = 0x140
0x12c: CODECOPY 0x0 0x140 0x20
0x12e: V107 = M[0x0]
0x130: M[0x0] = V104
0x134: V108 = SUB V100 V102
0x135: V109 = 0x20
0x137: V110 = ADD 0x20 V108
0x139: LOG V102 V110 V107
---
Entry stack: [0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [0xa5]

================================

Block 0x13a
[0x13a:0x13e]
---
Predecessors: [0x5c, 0x117]
Successors: [0xc3]
---
0x13a JUMPDEST
0x13b PUSH2 0xc3
0x13e JUMP
---
0x13a: JUMPDEST 
0x13b: V111 = 0xc3
0x13e: JUMP 0xc3
---
Entry stack: [0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [0xa5]

================================

Block 0x13f
[0x13f:0x165]
---
Predecessors: []
Successors: []
---
0x13f STOP
0x140 MISSING 0xf8
0x141 MISSING 0x2c
0x142 POP
0x143 CALL
0x144 DUP5
0x145 DUP2
0x146 CALLDATASIZE
0x147 MISSING 0xe6
0x148 MISSING 0xc1
0x149 BLOCKHASH
0x14a MISSING 0xb1
0x14b DUP7
0x14c MISSING 0xea
0x14d MISSING 0xc
0x14e PUSH23 0x8b7deda5efffe42c25e96336a90b26c744
---
0x13f: STOP 
0x140: MISSING 0xf8
0x141: MISSING 0x2c
0x143: V112 = CALL S1 S2 S3 S4 S5 S6 S7
0x146: V113 = CALLDATASIZE
0x147: MISSING 0xe6
0x148: MISSING 0xc1
0x149: V114 = BLOCKHASH S0
0x14a: MISSING 0xb1
0x14c: MISSING 0xea
0x14d: MISSING 0xc
0x14e: V115 = 0x8b7deda5efffe42c25e96336a90b26c744
---
Entry stack: []
Stack pops: 0
Stack additions: [V113, V112, S11, V112, S8, S9, S10, S11, V114, S6, S0, S1, S2, S3, S4, S5, S6, 0x8b7deda5efffe42c25e96336a90b26c744]
Exit stack: []

================================


