Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x19c]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x2d05d3f
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x19c
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x2d05d3f
0x22: V15 = EQ V13 0x2d05d3f
0x23: V16 = 0x19c
0x26: JUMPI 0x19c V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x1cb]
---
0x27 DUP1
0x28 PUSH4 0x13af4035
0x2d EQ
0x2e PUSH2 0x1cb
0x31 JUMPI
---
0x28: V17 = 0x13af4035
0x2d: V18 = EQ 0x13af4035 V13
0x2e: V19 = 0x1cb
0x31: JUMPI 0x1cb V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1ec]
---
0x32 DUP1
0x33 PUSH4 0x144fa6d7
0x38 EQ
0x39 PUSH2 0x1ec
0x3c JUMPI
---
0x33: V20 = 0x144fa6d7
0x38: V21 = EQ 0x144fa6d7 V13
0x39: V22 = 0x1ec
0x3c: JUMPI 0x1ec V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x20b]
---
0x3d DUP1
0x3e PUSH4 0x3f516018
0x43 EQ
0x44 PUSH2 0x20b
0x47 JUMPI
---
0x3e: V23 = 0x3f516018
0x43: V24 = EQ 0x3f516018 V13
0x44: V25 = 0x20b
0x47: JUMPI 0x20b V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x22a]
---
0x48 DUP1
0x49 PUSH4 0x412664ae
0x4e EQ
0x4f PUSH2 0x22a
0x52 JUMPI
---
0x49: V26 = 0x412664ae
0x4e: V27 = EQ 0x412664ae V13
0x4f: V28 = 0x22a
0x52: JUMPI 0x22a V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x24c]
---
0x53 DUP1
0x54 PUSH4 0x41c0e1b5
0x59 EQ
0x5a PUSH2 0x24c
0x5d JUMPI
---
0x54: V29 = 0x41c0e1b5
0x59: V30 = EQ 0x41c0e1b5 V13
0x5a: V31 = 0x24c
0x5d: JUMPI 0x24c V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x25f]
---
0x5e DUP1
0x5f PUSH4 0x6e66f6e9
0x64 EQ
0x65 PUSH2 0x25f
0x68 JUMPI
---
0x5f: V32 = 0x6e66f6e9
0x64: V33 = EQ 0x6e66f6e9 V13
0x65: V34 = 0x25f
0x68: JUMPI 0x25f V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x272]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x272
0x73 JUMPI
---
0x6a: V35 = 0x8da5cb5b
0x6f: V36 = EQ 0x8da5cb5b V13
0x70: V37 = 0x272
0x73: JUMPI 0x272 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x285]
---
0x74 DUP1
0x75 PUSH4 0x91b7f5ed
0x7a EQ
0x7b PUSH2 0x285
0x7e JUMPI
---
0x75: V38 = 0x91b7f5ed
0x7a: V39 = EQ 0x91b7f5ed V13
0x7b: V40 = 0x285
0x7e: JUMPI 0x285 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x0, 0x74]
Successors: [0x8a, 0x8e]
---
0x7f JUMPDEST
0x80 PUSH1 0x0
0x82 CALLVALUE
0x83 DUP2
0x84 SWAP1
0x85 GT
0x86 PUSH2 0x8e
0x89 JUMPI
---
0x7f: JUMPDEST 
0x80: V41 = 0x0
0x82: V42 = CALLVALUE
0x85: V43 = GT V42 0x0
0x86: V44 = 0x8e
0x89: JUMPI 0x8e V43
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x0]

================================

Block 0x8a
[0x8a:0x8d]
---
Predecessors: [0x7f]
Successors: []
---
0x8a PUSH1 0x0
0x8c DUP1
0x8d REVERT
---
0x8a: V45 = 0x0
0x8d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0x8e
[0x8e:0x99]
---
Predecessors: [0x7f]
Successors: [0x9a, 0x9e]
---
0x8e JUMPDEST
0x8f PUSH4 0x5a725880
0x94 TIMESTAMP
0x95 GT
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x8e: JUMPDEST 
0x8f: V46 = 0x5a725880
0x94: V47 = TIMESTAMP
0x95: V48 = GT V47 0x5a725880
0x96: V49 = 0x9e
0x99: JUMPI 0x9e V48
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x8e]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V50 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0x9e
[0x9e:0xf8]
---
Predecessors: [0x8e]
Successors: [0xf9, 0xfd]
---
0x9e JUMPDEST
0x9f POP
0xa0 PUSH1 0x3
0xa2 SLOAD
0xa3 PUSH1 0x0
0xa5 SLOAD
0xa6 CALLVALUE
0xa7 SWAP1
0xa8 SWAP2
0xa9 MUL
0xaa SWAP1
0xab PUSH1 0x1
0xad PUSH1 0xa0
0xaf PUSH1 0x2
0xb1 EXP
0xb2 SUB
0xb3 AND
0xb4 PUSH4 0xa9059cbb
0xb9 CALLER
0xba DUP4
0xbb PUSH1 0x40
0xbd MLOAD
0xbe PUSH1 0xe0
0xc0 PUSH1 0x2
0xc2 EXP
0xc3 PUSH4 0xffffffff
0xc8 DUP6
0xc9 AND
0xca MUL
0xcb DUP2
0xcc MSTORE
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 SWAP1
0xd6 SWAP3
0xd7 AND
0xd8 PUSH1 0x4
0xda DUP4
0xdb ADD
0xdc MSTORE
0xdd PUSH1 0x24
0xdf DUP3
0xe0 ADD
0xe1 MSTORE
0xe2 PUSH1 0x44
0xe4 ADD
0xe5 PUSH1 0x0
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb DUP4
0xec SUB
0xed DUP2
0xee PUSH1 0x0
0xf0 DUP8
0xf1 DUP1
0xf2 EXTCODESIZE
0xf3 ISZERO
0xf4 ISZERO
0xf5 PUSH2 0xfd
0xf8 JUMPI
---
0x9e: JUMPDEST 
0xa0: V51 = 0x3
0xa2: V52 = S[0x3]
0xa3: V53 = 0x0
0xa5: V54 = S[0x0]
0xa6: V55 = CALLVALUE
0xa9: V56 = MUL V52 V55
0xab: V57 = 0x1
0xad: V58 = 0xa0
0xaf: V59 = 0x2
0xb1: V60 = EXP 0x2 0xa0
0xb2: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xb4: V63 = 0xa9059cbb
0xb9: V64 = CALLER
0xbb: V65 = 0x40
0xbd: V66 = M[0x40]
0xbe: V67 = 0xe0
0xc0: V68 = 0x2
0xc2: V69 = EXP 0x2 0xe0
0xc3: V70 = 0xffffffff
0xc9: V71 = AND 0xa9059cbb 0xffffffff
0xca: V72 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xcc: M[V66] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xcd: V73 = 0x1
0xcf: V74 = 0xa0
0xd1: V75 = 0x2
0xd3: V76 = EXP 0x2 0xa0
0xd4: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V78 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0xd8: V79 = 0x4
0xdb: V80 = ADD V66 0x4
0xdc: M[V80] = V78
0xdd: V81 = 0x24
0xe0: V82 = ADD V66 0x24
0xe1: M[V82] = V56
0xe2: V83 = 0x44
0xe4: V84 = ADD 0x44 V66
0xe5: V85 = 0x0
0xe7: V86 = 0x40
0xe9: V87 = M[0x40]
0xec: V88 = SUB V84 V87
0xee: V89 = 0x0
0xf2: V90 = EXTCODESIZE V62
0xf3: V91 = ISZERO V90
0xf4: V92 = ISZERO V91
0xf5: V93 = 0xfd
0xf8: JUMPI 0xfd V92
---
Entry stack: [V13, 0x0]
Stack pops: 1
Stack additions: [V56, V62, 0xa9059cbb, V84, 0x0, V87, V88, V87, 0x0, V62]
Exit stack: [V13, V56, V62, 0xa9059cbb, V84, 0x0, V87, V88, V87, 0x0, V62]

================================

Block 0xf9
[0xf9:0xfc]
---
Predecessors: [0x9e]
Successors: []
---
0xf9 PUSH1 0x0
0xfb DUP1
0xfc REVERT
---
0xf9: V94 = 0x0
0xfc: REVERT 0x0 0x0
---
Entry stack: [V13, V56, V62, 0xa9059cbb, V84, 0x0, V87, V88, V87, 0x0, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V56, V62, 0xa9059cbb, V84, 0x0, V87, V88, V87, 0x0, V62]

================================

Block 0xfd
[0xfd:0x109]
---
Predecessors: [0x9e]
Successors: [0x10a, 0x10e]
---
0xfd JUMPDEST
0xfe PUSH2 0x2c6
0x101 GAS
0x102 SUB
0x103 CALL
0x104 ISZERO
0x105 ISZERO
0x106 PUSH2 0x10e
0x109 JUMPI
---
0xfd: JUMPDEST 
0xfe: V95 = 0x2c6
0x101: V96 = GAS
0x102: V97 = SUB V96 0x2c6
0x103: V98 = CALL V97 V62 0x0 V87 V88 V87 0x0
0x104: V99 = ISZERO V98
0x105: V100 = ISZERO V99
0x106: V101 = 0x10e
0x109: JUMPI 0x10e V100
---
Entry stack: [V13, V56, V62, 0xa9059cbb, V84, 0x0, V87, V88, V87, 0x0, V62]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V56, V62, 0xa9059cbb, V84]

================================

Block 0x10a
[0x10a:0x10d]
---
Predecessors: [0xfd]
Successors: []
---
0x10a PUSH1 0x0
0x10c DUP1
0x10d REVERT
---
0x10a: V102 = 0x0
0x10d: REVERT 0x0 0x0
---
Entry stack: [V13, V56, V62, 0xa9059cbb, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V56, V62, 0xa9059cbb, V84]

================================

Block 0x10e
[0x10e:0x194]
---
Predecessors: [0xfd]
Successors: [0x195, 0x199]
---
0x10e JUMPDEST
0x10f POP
0x110 POP
0x111 POP
0x112 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x133 CALLER
0x134 DUP3
0x135 PUSH1 0x1
0x137 PUSH1 0x40
0x139 MLOAD
0x13a PUSH1 0x1
0x13c PUSH1 0xa0
0x13e PUSH1 0x2
0x140 EXP
0x141 SUB
0x142 SWAP1
0x143 SWAP4
0x144 AND
0x145 DUP4
0x146 MSTORE
0x147 PUSH1 0x20
0x149 DUP4
0x14a ADD
0x14b SWAP2
0x14c SWAP1
0x14d SWAP2
0x14e MSTORE
0x14f ISZERO
0x150 ISZERO
0x151 PUSH1 0x40
0x153 DUP1
0x154 DUP4
0x155 ADD
0x156 SWAP2
0x157 SWAP1
0x158 SWAP2
0x159 MSTORE
0x15a PUSH1 0x60
0x15c SWAP1
0x15d SWAP2
0x15e ADD
0x15f SWAP1
0x160 MLOAD
0x161 DUP1
0x162 SWAP2
0x163 SUB
0x164 SWAP1
0x165 LOG1
0x166 PUSH1 0x2
0x168 SLOAD
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 AND
0x172 CALLVALUE
0x173 DUP1
0x174 ISZERO
0x175 PUSH2 0x8fc
0x178 MUL
0x179 SWAP1
0x17a PUSH1 0x40
0x17c MLOAD
0x17d PUSH1 0x0
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 DUP4
0x184 SUB
0x185 DUP2
0x186 DUP6
0x187 DUP9
0x188 DUP9
0x189 CALL
0x18a SWAP4
0x18b POP
0x18c POP
0x18d POP
0x18e POP
0x18f ISZERO
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x10e: JUMPDEST 
0x112: V103 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x133: V104 = CALLER
0x135: V105 = 0x1
0x137: V106 = 0x40
0x139: V107 = M[0x40]
0x13a: V108 = 0x1
0x13c: V109 = 0xa0
0x13e: V110 = 0x2
0x140: V111 = EXP 0x2 0xa0
0x141: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x144: V113 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x146: M[V107] = V113
0x147: V114 = 0x20
0x14a: V115 = ADD V107 0x20
0x14e: M[V115] = V56
0x14f: V116 = ISZERO 0x1
0x150: V117 = ISZERO 0x0
0x151: V118 = 0x40
0x155: V119 = ADD V107 0x40
0x159: M[V119] = 0x1
0x15a: V120 = 0x60
0x15e: V121 = ADD V107 0x60
0x160: V122 = M[0x40]
0x163: V123 = SUB V121 V122
0x165: LOG V122 V123 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x166: V124 = 0x2
0x168: V125 = S[0x2]
0x169: V126 = 0x1
0x16b: V127 = 0xa0
0x16d: V128 = 0x2
0x16f: V129 = EXP 0x2 0xa0
0x170: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x172: V132 = CALLVALUE
0x174: V133 = ISZERO V132
0x175: V134 = 0x8fc
0x178: V135 = MUL 0x8fc V133
0x17a: V136 = 0x40
0x17c: V137 = M[0x40]
0x17d: V138 = 0x0
0x17f: V139 = 0x40
0x181: V140 = M[0x40]
0x184: V141 = SUB V137 V140
0x189: V142 = CALL V135 V131 V132 V140 V141 V140 0x0
0x18f: V143 = ISZERO V142
0x190: V144 = ISZERO V143
0x191: V145 = 0x199
0x194: JUMPI 0x199 V144
---
Entry stack: [V13, V56, V62, 0xa9059cbb, V84]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V13, V56]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x10e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V146 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V13, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V56]

================================

Block 0x199
[0x199:0x19b]
---
Predecessors: [0x10e]
Successors: []
---
0x199 JUMPDEST
0x19a POP
0x19b STOP
---
0x199: JUMPDEST 
0x19b: STOP 
---
Entry stack: [V13, V56]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0xd]
Successors: [0x1a3, 0x1a7]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V147 = CALLVALUE
0x19e: V148 = ISZERO V147
0x19f: V149 = 0x1a7
0x1a2: JUMPI 0x1a7 V148
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V150 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a7
[0x1a7:0x1ae]
---
Predecessors: [0x19c]
Successors: [0x29b]
---
0x1a7 JUMPDEST
0x1a8 PUSH2 0x1af
0x1ab PUSH2 0x29b
0x1ae JUMP
---
0x1a7: JUMPDEST 
0x1a8: V151 = 0x1af
0x1ab: V152 = 0x29b
0x1ae: JUMP 0x29b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1af]
Exit stack: [V13, 0x1af]

================================

Block 0x1af
[0x1af:0x1ca]
---
Predecessors: [0x29b, 0x43a, 0x449]
Successors: []
---
0x1af JUMPDEST
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 PUSH1 0x1
0x1b5 PUSH1 0xa0
0x1b7 PUSH1 0x2
0x1b9 EXP
0x1ba SUB
0x1bb SWAP1
0x1bc SWAP2
0x1bd AND
0x1be DUP2
0x1bf MSTORE
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x1af: JUMPDEST 
0x1b0: V153 = 0x40
0x1b2: V154 = M[0x40]
0x1b3: V155 = 0x1
0x1b5: V156 = 0xa0
0x1b7: V157 = 0x2
0x1b9: V158 = EXP 0x2 0xa0
0x1ba: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V160 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: M[V154] = V160
0x1c0: V161 = 0x20
0x1c2: V162 = ADD 0x20 V154
0x1c3: V163 = 0x40
0x1c5: V164 = M[0x40]
0x1c8: V165 = SUB V162 V164
0x1ca: RETURN V164 V165
---
Entry stack: [V13, 0x1af, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1af]

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x27]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V166 = CALLVALUE
0x1cd: V167 = ISZERO V166
0x1ce: V168 = 0x1d6
0x1d1: JUMPI 0x1d6 V167
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V169 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d6
[0x1d6:0x1e9]
---
Predecessors: [0x1cb]
Successors: [0x2aa]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x1ea
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 PUSH1 0x4
0x1e4 CALLDATALOAD
0x1e5 AND
0x1e6 PUSH2 0x2aa
0x1e9 JUMP
---
0x1d6: JUMPDEST 
0x1d7: V170 = 0x1ea
0x1da: V171 = 0x1
0x1dc: V172 = 0xa0
0x1de: V173 = 0x2
0x1e0: V174 = EXP 0x2 0xa0
0x1e1: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V176 = 0x4
0x1e4: V177 = CALLDATALOAD 0x4
0x1e5: V178 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V179 = 0x2aa
0x1e9: JUMP 0x2aa
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ea, V178]
Exit stack: [V13, 0x1ea, V178]

================================

Block 0x1ea
[0x1ea:0x1eb]
---
Predecessors: [0x2c5, 0x30f, 0x359, 0x40a, 0x473]
Successors: []
---
0x1ea JUMPDEST
0x1eb STOP
---
0x1ea: JUMPDEST 
0x1eb: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ec
[0x1ec:0x1f2]
---
Predecessors: [0x32]
Successors: [0x1f3, 0x1f7]
---
0x1ec JUMPDEST
0x1ed CALLVALUE
0x1ee ISZERO
0x1ef PUSH2 0x1f7
0x1f2 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V180 = CALLVALUE
0x1ee: V181 = ISZERO V180
0x1ef: V182 = 0x1f7
0x1f2: JUMPI 0x1f7 V181
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f3
[0x1f3:0x1f6]
---
Predecessors: [0x1ec]
Successors: []
---
0x1f3 PUSH1 0x0
0x1f5 DUP1
0x1f6 REVERT
---
0x1f3: V183 = 0x0
0x1f6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f7
[0x1f7:0x20a]
---
Predecessors: [0x1ec]
Successors: [0x2f4]
---
0x1f7 JUMPDEST
0x1f8 PUSH2 0x1ea
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 PUSH1 0x4
0x205 CALLDATALOAD
0x206 AND
0x207 PUSH2 0x2f4
0x20a JUMP
---
0x1f7: JUMPDEST 
0x1f8: V184 = 0x1ea
0x1fb: V185 = 0x1
0x1fd: V186 = 0xa0
0x1ff: V187 = 0x2
0x201: V188 = EXP 0x2 0xa0
0x202: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V190 = 0x4
0x205: V191 = CALLDATALOAD 0x4
0x206: V192 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x207: V193 = 0x2f4
0x20a: JUMP 0x2f4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ea, V192]
Exit stack: [V13, 0x1ea, V192]

================================

Block 0x20b
[0x20b:0x211]
---
Predecessors: [0x3d]
Successors: [0x212, 0x216]
---
0x20b JUMPDEST
0x20c CALLVALUE
0x20d ISZERO
0x20e PUSH2 0x216
0x211 JUMPI
---
0x20b: JUMPDEST 
0x20c: V194 = CALLVALUE
0x20d: V195 = ISZERO V194
0x20e: V196 = 0x216
0x211: JUMPI 0x216 V195
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x20b]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V197 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x216
[0x216:0x229]
---
Predecessors: [0x20b]
Successors: [0x33e]
---
0x216 JUMPDEST
0x217 PUSH2 0x1ea
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 PUSH1 0x4
0x224 CALLDATALOAD
0x225 AND
0x226 PUSH2 0x33e
0x229 JUMP
---
0x216: JUMPDEST 
0x217: V198 = 0x1ea
0x21a: V199 = 0x1
0x21c: V200 = 0xa0
0x21e: V201 = 0x2
0x220: V202 = EXP 0x2 0xa0
0x221: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V204 = 0x4
0x224: V205 = CALLDATALOAD 0x4
0x225: V206 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x226: V207 = 0x33e
0x229: JUMP 0x33e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ea, V206]
Exit stack: [V13, 0x1ea, V206]

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x48]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V208 = CALLVALUE
0x22c: V209 = ISZERO V208
0x22d: V210 = 0x235
0x230: JUMPI 0x235 V209
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V211 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x235
[0x235:0x24b]
---
Predecessors: [0x22a]
Successors: [0x388]
---
0x235 JUMPDEST
0x236 PUSH2 0x1ea
0x239 PUSH1 0x1
0x23b PUSH1 0xa0
0x23d PUSH1 0x2
0x23f EXP
0x240 SUB
0x241 PUSH1 0x4
0x243 CALLDATALOAD
0x244 AND
0x245 PUSH1 0x24
0x247 CALLDATALOAD
0x248 PUSH2 0x388
0x24b JUMP
---
0x235: JUMPDEST 
0x236: V212 = 0x1ea
0x239: V213 = 0x1
0x23b: V214 = 0xa0
0x23d: V215 = 0x2
0x23f: V216 = EXP 0x2 0xa0
0x240: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x241: V218 = 0x4
0x243: V219 = CALLDATALOAD 0x4
0x244: V220 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x245: V221 = 0x24
0x247: V222 = CALLDATALOAD 0x24
0x248: V223 = 0x388
0x24b: JUMP 0x388
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ea, V220, V222]
Exit stack: [V13, 0x1ea, V220, V222]

================================

Block 0x24c
[0x24c:0x252]
---
Predecessors: [0x53]
Successors: [0x253, 0x257]
---
0x24c JUMPDEST
0x24d CALLVALUE
0x24e ISZERO
0x24f PUSH2 0x257
0x252 JUMPI
---
0x24c: JUMPDEST 
0x24d: V224 = CALLVALUE
0x24e: V225 = ISZERO V224
0x24f: V226 = 0x257
0x252: JUMPI 0x257 V225
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x253
[0x253:0x256]
---
Predecessors: [0x24c]
Successors: []
---
0x253 PUSH1 0x0
0x255 DUP1
0x256 REVERT
---
0x253: V227 = 0x0
0x256: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x257
[0x257:0x25e]
---
Predecessors: [0x24c]
Successors: [0x411]
---
0x257 JUMPDEST
0x258 PUSH2 0x1ea
0x25b PUSH2 0x411
0x25e JUMP
---
0x257: JUMPDEST 
0x258: V228 = 0x1ea
0x25b: V229 = 0x411
0x25e: JUMP 0x411
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ea]
Exit stack: [V13, 0x1ea]

================================

Block 0x25f
[0x25f:0x265]
---
Predecessors: [0x5e]
Successors: [0x266, 0x26a]
---
0x25f JUMPDEST
0x260 CALLVALUE
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x25f: JUMPDEST 
0x260: V230 = CALLVALUE
0x261: V231 = ISZERO V230
0x262: V232 = 0x26a
0x265: JUMPI 0x26a V231
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x25f]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V233 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x26a
[0x26a:0x271]
---
Predecessors: [0x25f]
Successors: [0x43a]
---
0x26a JUMPDEST
0x26b PUSH2 0x1af
0x26e PUSH2 0x43a
0x271 JUMP
---
0x26a: JUMPDEST 
0x26b: V234 = 0x1af
0x26e: V235 = 0x43a
0x271: JUMP 0x43a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1af]
Exit stack: [V13, 0x1af]

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0x69]
Successors: [0x279, 0x27d]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V236 = CALLVALUE
0x274: V237 = ISZERO V236
0x275: V238 = 0x27d
0x278: JUMPI 0x27d V237
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x272]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V239 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x272]
Successors: [0x449]
---
0x27d JUMPDEST
0x27e PUSH2 0x1af
0x281 PUSH2 0x449
0x284 JUMP
---
0x27d: JUMPDEST 
0x27e: V240 = 0x1af
0x281: V241 = 0x449
0x284: JUMP 0x449
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1af]
Exit stack: [V13, 0x1af]

================================

Block 0x285
[0x285:0x28b]
---
Predecessors: [0x74]
Successors: [0x28c, 0x290]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x285: JUMPDEST 
0x286: V242 = CALLVALUE
0x287: V243 = ISZERO V242
0x288: V244 = 0x290
0x28b: JUMPI 0x290 V243
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x285]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V245 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x290
[0x290:0x29a]
---
Predecessors: [0x285]
Successors: [0x458]
---
0x290 JUMPDEST
0x291 PUSH2 0x1ea
0x294 PUSH1 0x4
0x296 CALLDATALOAD
0x297 PUSH2 0x458
0x29a JUMP
---
0x290: JUMPDEST 
0x291: V246 = 0x1ea
0x294: V247 = 0x4
0x296: V248 = CALLDATALOAD 0x4
0x297: V249 = 0x458
0x29a: JUMP 0x458
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ea, V248]
Exit stack: [V13, 0x1ea, V248]

================================

Block 0x29b
[0x29b:0x2a9]
---
Predecessors: [0x1a7]
Successors: [0x1af]
---
0x29b JUMPDEST
0x29c PUSH1 0x1
0x29e SLOAD
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 AND
0x2a8 DUP2
0x2a9 JUMP
---
0x29b: JUMPDEST 
0x29c: V250 = 0x1
0x29e: V251 = S[0x1]
0x29f: V252 = 0x1
0x2a1: V253 = 0xa0
0x2a3: V254 = 0x2
0x2a5: V255 = EXP 0x2 0xa0
0x2a6: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a7: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x2a9: JUMP 0x1af
---
Entry stack: [V13, 0x1af]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V13, 0x1af, V257]

================================

Block 0x2aa
[0x2aa:0x2c0]
---
Predecessors: [0x1d6]
Successors: [0x2c1, 0x2c5]
---
0x2aa JUMPDEST
0x2ab PUSH1 0x1
0x2ad SLOAD
0x2ae CALLER
0x2af PUSH1 0x1
0x2b1 PUSH1 0xa0
0x2b3 PUSH1 0x2
0x2b5 EXP
0x2b6 SUB
0x2b7 SWAP1
0x2b8 DUP2
0x2b9 AND
0x2ba SWAP2
0x2bb AND
0x2bc EQ
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V258 = 0x1
0x2ad: V259 = S[0x1]
0x2ae: V260 = CALLER
0x2af: V261 = 0x1
0x2b1: V262 = 0xa0
0x2b3: V263 = 0x2
0x2b5: V264 = EXP 0x2 0xa0
0x2b6: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b9: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x2bb: V267 = AND V259 0xffffffffffffffffffffffffffffffffffffffff
0x2bc: V268 = EQ V267 V266
0x2bd: V269 = 0x2c5
0x2c0: JUMPI 0x2c5 V268
---
Entry stack: [V13, 0x1ea, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V178]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x2aa]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V270 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ea, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V178]

================================

Block 0x2c5
[0x2c5:0x2f3]
---
Predecessors: [0x2aa]
Successors: [0x1ea]
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x2
0x2c8 DUP1
0x2c9 SLOAD
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df NOT
0x2e0 AND
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 SWAP3
0x2ea SWAP1
0x2eb SWAP3
0x2ec AND
0x2ed SWAP2
0x2ee SWAP1
0x2ef SWAP2
0x2f0 OR
0x2f1 SWAP1
0x2f2 SSTORE
0x2f3 JUMP
---
0x2c5: JUMPDEST 
0x2c6: V271 = 0x2
0x2c9: V272 = S[0x2]
0x2ca: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V274 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V275 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V272
0x2e1: V276 = 0x1
0x2e3: V277 = 0xa0
0x2e5: V278 = 0x2
0x2e7: V279 = EXP 0x2 0xa0
0x2e8: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ec: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x2f0: V282 = OR V281 V275
0x2f2: S[0x2] = V282
0x2f3: JUMP 0x1ea
---
Entry stack: [V13, 0x1ea, V178]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2f4
[0x2f4:0x30a]
---
Predecessors: [0x1f7]
Successors: [0x30b, 0x30f]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x1
0x2f7 SLOAD
0x2f8 CALLER
0x2f9 PUSH1 0x1
0x2fb PUSH1 0xa0
0x2fd PUSH1 0x2
0x2ff EXP
0x300 SUB
0x301 SWAP1
0x302 DUP2
0x303 AND
0x304 SWAP2
0x305 AND
0x306 EQ
0x307 PUSH2 0x30f
0x30a JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V283 = 0x1
0x2f7: V284 = S[0x1]
0x2f8: V285 = CALLER
0x2f9: V286 = 0x1
0x2fb: V287 = 0xa0
0x2fd: V288 = 0x2
0x2ff: V289 = EXP 0x2 0xa0
0x300: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x303: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x305: V292 = AND V284 0xffffffffffffffffffffffffffffffffffffffff
0x306: V293 = EQ V292 V291
0x307: V294 = 0x30f
0x30a: JUMPI 0x30f V293
---
Entry stack: [V13, 0x1ea, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V192]

================================

Block 0x30b
[0x30b:0x30e]
---
Predecessors: [0x2f4]
Successors: []
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
---
0x30b: V295 = 0x0
0x30e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ea, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V192]

================================

Block 0x30f
[0x30f:0x33d]
---
Predecessors: [0x2f4]
Successors: [0x1ea]
---
0x30f JUMPDEST
0x310 PUSH1 0x0
0x312 DUP1
0x313 SLOAD
0x314 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x329 NOT
0x32a AND
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 SWAP3
0x334 SWAP1
0x335 SWAP3
0x336 AND
0x337 SWAP2
0x338 SWAP1
0x339 SWAP2
0x33a OR
0x33b SWAP1
0x33c SSTORE
0x33d JUMP
---
0x30f: JUMPDEST 
0x310: V296 = 0x0
0x313: V297 = S[0x0]
0x314: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x329: V299 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V300 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V297
0x32b: V301 = 0x1
0x32d: V302 = 0xa0
0x32f: V303 = 0x2
0x331: V304 = EXP 0x2 0xa0
0x332: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x336: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x33a: V307 = OR V306 V300
0x33c: S[0x0] = V307
0x33d: JUMP 0x1ea
---
Entry stack: [V13, 0x1ea, V192]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x33e
[0x33e:0x354]
---
Predecessors: [0x216]
Successors: [0x355, 0x359]
---
0x33e JUMPDEST
0x33f PUSH1 0x1
0x341 SLOAD
0x342 CALLER
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b SWAP1
0x34c DUP2
0x34d AND
0x34e SWAP2
0x34f AND
0x350 EQ
0x351 PUSH2 0x359
0x354 JUMPI
---
0x33e: JUMPDEST 
0x33f: V308 = 0x1
0x341: V309 = S[0x1]
0x342: V310 = CALLER
0x343: V311 = 0x1
0x345: V312 = 0xa0
0x347: V313 = 0x2
0x349: V314 = EXP 0x2 0xa0
0x34a: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34d: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x34f: V317 = AND V309 0xffffffffffffffffffffffffffffffffffffffff
0x350: V318 = EQ V317 V316
0x351: V319 = 0x359
0x354: JUMPI 0x359 V318
---
Entry stack: [V13, 0x1ea, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V206]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x33e]
Successors: []
---
0x355 PUSH1 0x0
0x357 DUP1
0x358 REVERT
---
0x355: V320 = 0x0
0x358: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ea, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V206]

================================

Block 0x359
[0x359:0x387]
---
Predecessors: [0x33e]
Successors: [0x1ea]
---
0x359 JUMPDEST
0x35a PUSH1 0x1
0x35c DUP1
0x35d SLOAD
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 NOT
0x374 AND
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d SWAP3
0x37e SWAP1
0x37f SWAP3
0x380 AND
0x381 SWAP2
0x382 SWAP1
0x383 SWAP2
0x384 OR
0x385 SWAP1
0x386 SSTORE
0x387 JUMP
---
0x359: JUMPDEST 
0x35a: V321 = 0x1
0x35d: V322 = S[0x1]
0x35e: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V324 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x374: V325 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V322
0x375: V326 = 0x1
0x377: V327 = 0xa0
0x379: V328 = 0x2
0x37b: V329 = EXP 0x2 0xa0
0x37c: V330 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x384: V332 = OR V331 V325
0x386: S[0x1] = V332
0x387: JUMP 0x1ea
---
Entry stack: [V13, 0x1ea, V206]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x388
[0x388:0x39e]
---
Predecessors: [0x235]
Successors: [0x39f, 0x3a3]
---
0x388 JUMPDEST
0x389 PUSH1 0x1
0x38b SLOAD
0x38c CALLER
0x38d PUSH1 0x1
0x38f PUSH1 0xa0
0x391 PUSH1 0x2
0x393 EXP
0x394 SUB
0x395 SWAP1
0x396 DUP2
0x397 AND
0x398 SWAP2
0x399 AND
0x39a EQ
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x388: JUMPDEST 
0x389: V333 = 0x1
0x38b: V334 = S[0x1]
0x38c: V335 = CALLER
0x38d: V336 = 0x1
0x38f: V337 = 0xa0
0x391: V338 = 0x2
0x393: V339 = EXP 0x2 0xa0
0x394: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x397: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x399: V342 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0x39a: V343 = EQ V342 V341
0x39b: V344 = 0x3a3
0x39e: JUMPI 0x3a3 V343
---
Entry stack: [V13, 0x1ea, V220, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V220, V222]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x388]
Successors: []
---
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 REVERT
---
0x39f: V345 = 0x0
0x3a2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ea, V220, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V220, V222]

================================

Block 0x3a3
[0x3a3:0x3f4]
---
Predecessors: [0x388]
Successors: [0x3f5, 0x3f9]
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0x0
0x3a6 SLOAD
0x3a7 PUSH1 0x1
0x3a9 PUSH1 0xa0
0x3ab PUSH1 0x2
0x3ad EXP
0x3ae SUB
0x3af AND
0x3b0 PUSH4 0xa9059cbb
0x3b5 DUP4
0x3b6 DUP4
0x3b7 PUSH1 0x40
0x3b9 MLOAD
0x3ba PUSH1 0xe0
0x3bc PUSH1 0x2
0x3be EXP
0x3bf PUSH4 0xffffffff
0x3c4 DUP6
0x3c5 AND
0x3c6 MUL
0x3c7 DUP2
0x3c8 MSTORE
0x3c9 PUSH1 0x1
0x3cb PUSH1 0xa0
0x3cd PUSH1 0x2
0x3cf EXP
0x3d0 SUB
0x3d1 SWAP1
0x3d2 SWAP3
0x3d3 AND
0x3d4 PUSH1 0x4
0x3d6 DUP4
0x3d7 ADD
0x3d8 MSTORE
0x3d9 PUSH1 0x24
0x3db DUP3
0x3dc ADD
0x3dd MSTORE
0x3de PUSH1 0x44
0x3e0 ADD
0x3e1 PUSH1 0x0
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP1
0x3e7 DUP4
0x3e8 SUB
0x3e9 DUP2
0x3ea PUSH1 0x0
0x3ec DUP8
0x3ed DUP1
0x3ee EXTCODESIZE
0x3ef ISZERO
0x3f0 ISZERO
0x3f1 PUSH2 0x3f9
0x3f4 JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V346 = 0x0
0x3a6: V347 = S[0x0]
0x3a7: V348 = 0x1
0x3a9: V349 = 0xa0
0x3ab: V350 = 0x2
0x3ad: V351 = EXP 0x2 0xa0
0x3ae: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x3b0: V354 = 0xa9059cbb
0x3b7: V355 = 0x40
0x3b9: V356 = M[0x40]
0x3ba: V357 = 0xe0
0x3bc: V358 = 0x2
0x3be: V359 = EXP 0x2 0xe0
0x3bf: V360 = 0xffffffff
0x3c5: V361 = AND 0xa9059cbb 0xffffffff
0x3c6: V362 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3c8: M[V356] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3c9: V363 = 0x1
0x3cb: V364 = 0xa0
0x3cd: V365 = 0x2
0x3cf: V366 = EXP 0x2 0xa0
0x3d0: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d3: V368 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V369 = 0x4
0x3d7: V370 = ADD V356 0x4
0x3d8: M[V370] = V368
0x3d9: V371 = 0x24
0x3dc: V372 = ADD V356 0x24
0x3dd: M[V372] = V222
0x3de: V373 = 0x44
0x3e0: V374 = ADD 0x44 V356
0x3e1: V375 = 0x0
0x3e3: V376 = 0x40
0x3e5: V377 = M[0x40]
0x3e8: V378 = SUB V374 V377
0x3ea: V379 = 0x0
0x3ee: V380 = EXTCODESIZE V353
0x3ef: V381 = ISZERO V380
0x3f0: V382 = ISZERO V381
0x3f1: V383 = 0x3f9
0x3f4: JUMPI 0x3f9 V382
---
Entry stack: [V13, 0x1ea, V220, V222]
Stack pops: 2
Stack additions: [S1, S0, V353, 0xa9059cbb, V374, 0x0, V377, V378, V377, 0x0, V353]
Exit stack: [V13, 0x1ea, V220, V222, V353, 0xa9059cbb, V374, 0x0, V377, V378, V377, 0x0, V353]

================================

Block 0x3f5
[0x3f5:0x3f8]
---
Predecessors: [0x3a3]
Successors: []
---
0x3f5 PUSH1 0x0
0x3f7 DUP1
0x3f8 REVERT
---
0x3f5: V384 = 0x0
0x3f8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ea, V220, V222, V353, 0xa9059cbb, V374, 0x0, V377, V378, V377, 0x0, V353]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V220, V222, V353, 0xa9059cbb, V374, 0x0, V377, V378, V377, 0x0, V353]

================================

Block 0x3f9
[0x3f9:0x405]
---
Predecessors: [0x3a3]
Successors: [0x406, 0x40a]
---
0x3f9 JUMPDEST
0x3fa PUSH2 0x2c6
0x3fd GAS
0x3fe SUB
0x3ff CALL
0x400 ISZERO
0x401 ISZERO
0x402 PUSH2 0x40a
0x405 JUMPI
---
0x3f9: JUMPDEST 
0x3fa: V385 = 0x2c6
0x3fd: V386 = GAS
0x3fe: V387 = SUB V386 0x2c6
0x3ff: V388 = CALL V387 V353 0x0 V377 V378 V377 0x0
0x400: V389 = ISZERO V388
0x401: V390 = ISZERO V389
0x402: V391 = 0x40a
0x405: JUMPI 0x40a V390
---
Entry stack: [V13, 0x1ea, V220, V222, V353, 0xa9059cbb, V374, 0x0, V377, V378, V377, 0x0, V353]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x1ea, V220, V222, V353, 0xa9059cbb, V374]

================================

Block 0x406
[0x406:0x409]
---
Predecessors: [0x3f9]
Successors: []
---
0x406 PUSH1 0x0
0x408 DUP1
0x409 REVERT
---
0x406: V392 = 0x0
0x409: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ea, V220, V222, V353, 0xa9059cbb, V374]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V220, V222, V353, 0xa9059cbb, V374]

================================

Block 0x40a
[0x40a:0x410]
---
Predecessors: [0x3f9]
Successors: [0x1ea]
---
0x40a JUMPDEST
0x40b POP
0x40c POP
0x40d POP
0x40e POP
0x40f POP
0x410 JUMP
---
0x40a: JUMPDEST 
0x410: JUMP 0x1ea
---
Entry stack: [V13, 0x1ea, V220, V222, V353, 0xa9059cbb, V374]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x411
[0x411:0x427]
---
Predecessors: [0x257]
Successors: [0x428, 0x42c]
---
0x411 JUMPDEST
0x412 PUSH1 0x1
0x414 SLOAD
0x415 CALLER
0x416 PUSH1 0x1
0x418 PUSH1 0xa0
0x41a PUSH1 0x2
0x41c EXP
0x41d SUB
0x41e SWAP1
0x41f DUP2
0x420 AND
0x421 SWAP2
0x422 AND
0x423 EQ
0x424 PUSH2 0x42c
0x427 JUMPI
---
0x411: JUMPDEST 
0x412: V393 = 0x1
0x414: V394 = S[0x1]
0x415: V395 = CALLER
0x416: V396 = 0x1
0x418: V397 = 0xa0
0x41a: V398 = 0x2
0x41c: V399 = EXP 0x2 0xa0
0x41d: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x420: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x422: V402 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x423: V403 = EQ V402 V401
0x424: V404 = 0x42c
0x427: JUMPI 0x42c V403
---
Entry stack: [V13, 0x1ea]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea]

================================

Block 0x428
[0x428:0x42b]
---
Predecessors: [0x411]
Successors: []
---
0x428 PUSH1 0x0
0x42a DUP1
0x42b REVERT
---
0x428: V405 = 0x0
0x42b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ea]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea]

================================

Block 0x42c
[0x42c:0x439]
---
Predecessors: [0x411]
Successors: []
---
0x42c JUMPDEST
0x42d PUSH1 0x2
0x42f SLOAD
0x430 PUSH1 0x1
0x432 PUSH1 0xa0
0x434 PUSH1 0x2
0x436 EXP
0x437 SUB
0x438 AND
0x439 SELFDESTRUCT
---
0x42c: JUMPDEST 
0x42d: V406 = 0x2
0x42f: V407 = S[0x2]
0x430: V408 = 0x1
0x432: V409 = 0xa0
0x434: V410 = 0x2
0x436: V411 = EXP 0x2 0xa0
0x437: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x438: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x439: SELFDESTRUCT V413
---
Entry stack: [V13, 0x1ea]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea]

================================

Block 0x43a
[0x43a:0x448]
---
Predecessors: [0x26a]
Successors: [0x1af]
---
0x43a JUMPDEST
0x43b PUSH1 0x0
0x43d SLOAD
0x43e PUSH1 0x1
0x440 PUSH1 0xa0
0x442 PUSH1 0x2
0x444 EXP
0x445 SUB
0x446 AND
0x447 DUP2
0x448 JUMP
---
0x43a: JUMPDEST 
0x43b: V414 = 0x0
0x43d: V415 = S[0x0]
0x43e: V416 = 0x1
0x440: V417 = 0xa0
0x442: V418 = 0x2
0x444: V419 = EXP 0x2 0xa0
0x445: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x448: JUMP 0x1af
---
Entry stack: [V13, 0x1af]
Stack pops: 1
Stack additions: [S0, V421]
Exit stack: [V13, 0x1af, V421]

================================

Block 0x449
[0x449:0x457]
---
Predecessors: [0x27d]
Successors: [0x1af]
---
0x449 JUMPDEST
0x44a PUSH1 0x2
0x44c SLOAD
0x44d PUSH1 0x1
0x44f PUSH1 0xa0
0x451 PUSH1 0x2
0x453 EXP
0x454 SUB
0x455 AND
0x456 DUP2
0x457 JUMP
---
0x449: JUMPDEST 
0x44a: V422 = 0x2
0x44c: V423 = S[0x2]
0x44d: V424 = 0x1
0x44f: V425 = 0xa0
0x451: V426 = 0x2
0x453: V427 = EXP 0x2 0xa0
0x454: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x455: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x457: JUMP 0x1af
---
Entry stack: [V13, 0x1af]
Stack pops: 1
Stack additions: [S0, V429]
Exit stack: [V13, 0x1af, V429]

================================

Block 0x458
[0x458:0x46e]
---
Predecessors: [0x290]
Successors: [0x46f, 0x473]
---
0x458 JUMPDEST
0x459 PUSH1 0x1
0x45b SLOAD
0x45c CALLER
0x45d PUSH1 0x1
0x45f PUSH1 0xa0
0x461 PUSH1 0x2
0x463 EXP
0x464 SUB
0x465 SWAP1
0x466 DUP2
0x467 AND
0x468 SWAP2
0x469 AND
0x46a EQ
0x46b PUSH2 0x473
0x46e JUMPI
---
0x458: JUMPDEST 
0x459: V430 = 0x1
0x45b: V431 = S[0x1]
0x45c: V432 = CALLER
0x45d: V433 = 0x1
0x45f: V434 = 0xa0
0x461: V435 = 0x2
0x463: V436 = EXP 0x2 0xa0
0x464: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x467: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x469: V439 = AND V431 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V440 = EQ V439 V438
0x46b: V441 = 0x473
0x46e: JUMPI 0x473 V440
---
Entry stack: [V13, 0x1ea, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V248]

================================

Block 0x46f
[0x46f:0x472]
---
Predecessors: [0x458]
Successors: []
---
0x46f PUSH1 0x0
0x471 DUP1
0x472 REVERT
---
0x46f: V442 = 0x0
0x472: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ea, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ea, V248]

================================

Block 0x473
[0x473:0x477]
---
Predecessors: [0x458]
Successors: [0x1ea]
---
0x473 JUMPDEST
0x474 PUSH1 0x3
0x476 SSTORE
0x477 JUMP
---
0x473: JUMPDEST 
0x474: V443 = 0x3
0x476: S[0x3] = V248
0x477: JUMP 0x1ea
---
Entry stack: [V13, 0x1ea, V248]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x478
[0x478:0x4a7]
---
Predecessors: []
Successors: []
---
0x478 STOP
0x479 LOG1
0x47a PUSH6 0x627a7a723058
0x481 SHA3
0x482 MISSING 0xb5
0x483 MISSING 0xf6
0x484 MISSING 0xaf
0x485 CALL
0x486 PUSH16 0xd75017dbf578a66de36cd8fa53275026
0x497 EXP
0x498 MISSING 0xe7
0x499 GASLIMIT
0x49a SWAP10
0x49b MISSING 0xc2
0x49c MISSING 0xe0
0x49d SMOD
0x49e PUSH9 0x63be410029
---
0x478: STOP 
0x479: LOG S0 S1 S2
0x47a: V444 = 0x627a7a723058
0x481: V445 = SHA3 0x627a7a723058 S3
0x482: MISSING 0xb5
0x483: MISSING 0xf6
0x484: MISSING 0xaf
0x485: V446 = CALL S0 S1 S2 S3 S4 S5 S6
0x486: V447 = 0xd75017dbf578a66de36cd8fa53275026
0x497: V448 = EXP 0xd75017dbf578a66de36cd8fa53275026 V446
0x498: MISSING 0xe7
0x499: V449 = GASLIMIT
0x49b: MISSING 0xc2
0x49c: MISSING 0xe0
0x49d: V450 = SMOD S0 S1
0x49e: V451 = 0x63be410029
---
Entry stack: []
Stack pops: 0
Stack additions: [V445, V448, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, V449, 0x63be410029, V450]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x19c
Exit block: 0x1af
Body: 0x19c, 0x1a3, 0x1a7, 0x1af, 0x29b

Function 1:
Public function signature: 0x13af4035
Entry block: 0x1cb
Exit block: 0x1ea
Body: 0x1cb, 0x1d2, 0x1d6, 0x1ea, 0x2aa, 0x2c1, 0x2c5

Function 2:
Public function signature: 0x144fa6d7
Entry block: 0x1ec
Exit block: 0x1ea
Body: 0x1ea, 0x1ec, 0x1f3, 0x1f7, 0x2f4, 0x30b, 0x30f

Function 3:
Public function signature: 0x3f516018
Entry block: 0x20b
Exit block: 0x1ea
Body: 0x1ea, 0x20b, 0x212, 0x216, 0x33e, 0x355, 0x359

Function 4:
Public function signature: 0x412664ae
Entry block: 0x22a
Exit block: 0x1ea
Body: 0x1ea, 0x22a, 0x231, 0x235, 0x388, 0x39f, 0x3a3, 0x3f5, 0x3f9, 0x406, 0x40a

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x24c
Exit block: 0x42c
Body: 0x24c, 0x253, 0x257, 0x411, 0x428, 0x42c

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x25f
Exit block: 0x1af
Body: 0x1af, 0x25f, 0x266, 0x26a, 0x43a

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x272
Exit block: 0x1af
Body: 0x1af, 0x272, 0x279, 0x27d, 0x449

Function 8:
Public function signature: 0x91b7f5ed
Entry block: 0x285
Exit block: 0x1ea
Body: 0x1ea, 0x285, 0x28c, 0x290, 0x458, 0x46f, 0x473

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x199
Body: 0x7f, 0x8a, 0x8e, 0x9a, 0x9e, 0xf9, 0xfd, 0x10a, 0x10e, 0x195, 0x199

