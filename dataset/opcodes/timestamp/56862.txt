Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x10e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x10e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x10e
0xc: JUMPI 0x10e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x113]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x113
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0x113
0x26: JUMPI 0x113 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x19d]
---
0x27 DUP1
0x28 PUSH4 0xe7c1cb5
0x2d EQ
0x2e PUSH2 0x19d
0x31 JUMPI
---
0x28: V17 = 0xe7c1cb5
0x2d: V18 = EQ 0xe7c1cb5 V13
0x2e: V19 = 0x19d
0x31: JUMPI 0x19d V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1ce]
---
0x32 DUP1
0x33 PUSH4 0x18160ddd
0x38 EQ
0x39 PUSH2 0x1ce
0x3c JUMPI
---
0x33: V20 = 0x18160ddd
0x38: V21 = EQ 0x18160ddd V13
0x39: V22 = 0x1ce
0x3c: JUMPI 0x1ce V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x1f5]
---
0x3d DUP1
0x3e PUSH4 0x1d6f757d
0x43 EQ
0x44 PUSH2 0x1f5
0x47 JUMPI
---
0x3e: V23 = 0x1d6f757d
0x43: V24 = EQ 0x1d6f757d V13
0x44: V25 = 0x1f5
0x47: JUMPI 0x1f5 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x230]
---
0x48 DUP1
0x49 PUSH4 0x23b872dd
0x4e EQ
0x4f PUSH2 0x230
0x52 JUMPI
---
0x49: V26 = 0x23b872dd
0x4e: V27 = EQ 0x23b872dd V13
0x4f: V28 = 0x230
0x52: JUMPI 0x230 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x25c]
---
0x53 DUP1
0x54 PUSH4 0x27e235e3
0x59 EQ
0x5a PUSH2 0x25c
0x5d JUMPI
---
0x54: V29 = 0x27e235e3
0x59: V30 = EQ 0x27e235e3 V13
0x5a: V31 = 0x25c
0x5d: JUMPI 0x25c V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x27d]
---
0x5e DUP1
0x5f PUSH4 0x313ce567
0x64 EQ
0x65 PUSH2 0x27d
0x68 JUMPI
---
0x5f: V32 = 0x313ce567
0x64: V33 = EQ 0x313ce567 V13
0x65: V34 = 0x27d
0x68: JUMPI 0x27d V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x292]
---
0x69 DUP1
0x6a PUSH4 0x45164b3e
0x6f EQ
0x70 PUSH2 0x292
0x73 JUMPI
---
0x6a: V35 = 0x45164b3e
0x6f: V36 = EQ 0x45164b3e V13
0x70: V37 = 0x292
0x73: JUMPI 0x292 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x2a7]
---
0x74 DUP1
0x75 PUSH4 0x70a08231
0x7a EQ
0x7b PUSH2 0x2a7
0x7e JUMPI
---
0x75: V38 = 0x70a08231
0x7a: V39 = EQ 0x70a08231 V13
0x7b: V40 = 0x2a7
0x7e: JUMPI 0x2a7 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x2c8]
---
0x7f DUP1
0x80 PUSH4 0x74f1d6ce
0x85 EQ
0x86 PUSH2 0x2c8
0x89 JUMPI
---
0x80: V41 = 0x74f1d6ce
0x85: V42 = EQ 0x74f1d6ce V13
0x86: V43 = 0x2c8
0x89: JUMPI 0x2c8 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x2f2]
---
0x8a DUP1
0x8b PUSH4 0x7df73e27
0x90 EQ
0x91 PUSH2 0x2f2
0x94 JUMPI
---
0x8b: V44 = 0x7df73e27
0x90: V45 = EQ 0x7df73e27 V13
0x91: V46 = 0x2f2
0x94: JUMPI 0x2f2 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x313]
---
0x95 DUP1
0x96 PUSH4 0x8b257d3d
0x9b EQ
0x9c PUSH2 0x313
0x9f JUMPI
---
0x96: V47 = 0x8b257d3d
0x9b: V48 = EQ 0x8b257d3d V13
0x9c: V49 = 0x313
0x9f: JUMPI 0x313 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x337]
---
0xa0 DUP1
0xa1 PUSH4 0x8da5cb5b
0xa6 EQ
0xa7 PUSH2 0x337
0xaa JUMPI
---
0xa1: V50 = 0x8da5cb5b
0xa6: V51 = EQ 0x8da5cb5b V13
0xa7: V52 = 0x337
0xaa: JUMPI 0x337 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x34c]
---
0xab DUP1
0xac PUSH4 0x95d89b41
0xb1 EQ
0xb2 PUSH2 0x34c
0xb5 JUMPI
---
0xac: V53 = 0x95d89b41
0xb1: V54 = EQ 0x95d89b41 V13
0xb2: V55 = 0x34c
0xb5: JUMPI 0x34c V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x361]
---
0xb6 DUP1
0xb7 PUSH4 0xa9059cbb
0xbc EQ
0xbd PUSH2 0x361
0xc0 JUMPI
---
0xb7: V56 = 0xa9059cbb
0xbc: V57 = EQ 0xa9059cbb V13
0xbd: V58 = 0x361
0xc0: JUMPI 0x361 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x385]
---
0xc1 DUP1
0xc2 PUSH4 0xad93640f
0xc7 EQ
0xc8 PUSH2 0x385
0xcb JUMPI
---
0xc2: V59 = 0xad93640f
0xc7: V60 = EQ 0xad93640f V13
0xc8: V61 = 0x385
0xcb: JUMPI 0x385 V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x39a]
---
0xcc DUP1
0xcd PUSH4 0xcc891023
0xd2 EQ
0xd3 PUSH2 0x39a
0xd6 JUMPI
---
0xcd: V62 = 0xcc891023
0xd2: V63 = EQ 0xcc891023 V13
0xd3: V64 = 0x39a
0xd6: JUMPI 0x39a V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x3bb]
---
0xd7 DUP1
0xd8 PUSH4 0xd9ee369a
0xdd EQ
0xde PUSH2 0x3bb
0xe1 JUMPI
---
0xd8: V65 = 0xd9ee369a
0xdd: V66 = EQ 0xd9ee369a V13
0xde: V67 = 0x3bb
0xe1: JUMPI 0x3bb V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed, 0x3e1]
---
0xe2 DUP1
0xe3 PUSH4 0xdd62ed3e
0xe8 EQ
0xe9 PUSH2 0x3e1
0xec JUMPI
---
0xe3: V68 = 0xdd62ed3e
0xe8: V69 = EQ 0xdd62ed3e V13
0xe9: V70 = 0x3e1
0xec: JUMPI 0x3e1 V69
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xed
[0xed:0xf7]
---
Predecessors: [0xe2]
Successors: [0xf8, 0x408]
---
0xed DUP1
0xee PUSH4 0xe2bbb158
0xf3 EQ
0xf4 PUSH2 0x408
0xf7 JUMPI
---
0xee: V71 = 0xe2bbb158
0xf3: V72 = EQ 0xe2bbb158 V13
0xf4: V73 = 0x408
0xf7: JUMPI 0x408 V72
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0x102]
---
Predecessors: [0xed]
Successors: [0x103, 0x416]
---
0xf8 DUP1
0xf9 PUSH4 0xeb12d61e
0xfe EQ
0xff PUSH2 0x416
0x102 JUMPI
---
0xf9: V74 = 0xeb12d61e
0xfe: V75 = EQ 0xeb12d61e V13
0xff: V76 = 0x416
0x102: JUMPI 0x416 V75
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x103
[0x103:0x10d]
---
Predecessors: [0xf8]
Successors: [0x10e, 0x437]
---
0x103 DUP1
0x104 PUSH4 0xf2fde38b
0x109 EQ
0x10a PUSH2 0x437
0x10d JUMPI
---
0x104: V77 = 0xf2fde38b
0x109: V78 = EQ 0xf2fde38b V13
0x10a: V79 = 0x437
0x10d: JUMPI 0x437 V78
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x10e
[0x10e:0x112]
---
Predecessors: [0x0, 0x103]
Successors: []
---
0x10e JUMPDEST
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10e: JUMPDEST 
0x10f: V80 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0xd]
Successors: [0x11b, 0x11f]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 DUP1
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x113: JUMPDEST 
0x114: V81 = CALLVALUE
0x116: V82 = ISZERO V81
0x117: V83 = 0x11f
0x11a: JUMPI 0x11f V82
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V13, V81]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x113]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V84 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V13, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V81]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x113]
Successors: [0x458]
---
0x11f JUMPDEST
0x120 POP
0x121 PUSH2 0x128
0x124 PUSH2 0x458
0x127 JUMP
---
0x11f: JUMPDEST 
0x121: V85 = 0x128
0x124: V86 = 0x458
0x127: JUMP 0x458
---
Entry stack: [V13, V81]
Stack pops: 1
Stack additions: [0x128]
Exit stack: [V13, 0x128]

================================

Block 0x128
[0x128:0x149]
---
Predecessors: [0x4de]
Successors: [0x14a]
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b DUP1
0x12c MLOAD
0x12d PUSH1 0x20
0x12f DUP1
0x130 DUP3
0x131 MSTORE
0x132 DUP4
0x133 MLOAD
0x134 DUP2
0x135 DUP4
0x136 ADD
0x137 MSTORE
0x138 DUP4
0x139 MLOAD
0x13a SWAP2
0x13b SWAP3
0x13c DUP4
0x13d SWAP3
0x13e SWAP1
0x13f DUP4
0x140 ADD
0x141 SWAP2
0x142 DUP6
0x143 ADD
0x144 SWAP1
0x145 DUP1
0x146 DUP4
0x147 DUP4
0x148 PUSH1 0x0
---
0x128: JUMPDEST 
0x129: V87 = 0x40
0x12c: V88 = M[0x40]
0x12d: V89 = 0x20
0x131: M[V88] = 0x20
0x133: V90 = M[S0]
0x136: V91 = ADD V88 0x20
0x137: M[V91] = V90
0x139: V92 = M[S0]
0x140: V93 = ADD V88 0x40
0x143: V94 = ADD S0 0x20
0x148: V95 = 0x0
---
Entry stack: [V13, 0x128, S0]
Stack pops: 1
Stack additions: [S0, V88, V88, V93, V94, V92, V92, V93, V94, 0x0]
Exit stack: [V13, 0x128, S0, V88, V88, V93, V94, V92, V92, V93, V94, 0x0]

================================

Block 0x14a
[0x14a:0x152]
---
Predecessors: [0x128, 0x153]
Successors: [0x153, 0x162]
---
0x14a JUMPDEST
0x14b DUP4
0x14c DUP2
0x14d LT
0x14e ISZERO
0x14f PUSH2 0x162
0x152 JUMPI
---
0x14a: JUMPDEST 
0x14d: V96 = LT S0 V92
0x14e: V97 = ISZERO V96
0x14f: V98 = 0x162
0x152: JUMPI 0x162 V97
---
Entry stack: [V13, 0x128, S9, V88, V88, V93, V94, V92, V92, V93, V94, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x128, S9, V88, V88, V93, V94, V92, V92, V93, V94, S0]

================================

Block 0x153
[0x153:0x161]
---
Predecessors: [0x14a]
Successors: [0x14a]
---
0x153 DUP2
0x154 DUP2
0x155 ADD
0x156 MLOAD
0x157 DUP4
0x158 DUP3
0x159 ADD
0x15a MSTORE
0x15b PUSH1 0x20
0x15d ADD
0x15e PUSH2 0x14a
0x161 JUMP
---
0x155: V99 = ADD S0 V94
0x156: V100 = M[V99]
0x159: V101 = ADD S0 V93
0x15a: M[V101] = V100
0x15b: V102 = 0x20
0x15d: V103 = ADD 0x20 S0
0x15e: V104 = 0x14a
0x161: JUMP 0x14a
---
Entry stack: [V13, 0x128, S9, V88, V88, V93, V94, V92, V92, V93, V94, S0]
Stack pops: 3
Stack additions: [S2, S1, V103]
Exit stack: [V13, 0x128, S9, V88, V88, V93, V94, V92, V92, V93, V94, V103]

================================

Block 0x162
[0x162:0x175]
---
Predecessors: [0x14a]
Successors: [0x176, 0x18f]
---
0x162 JUMPDEST
0x163 POP
0x164 POP
0x165 POP
0x166 POP
0x167 SWAP1
0x168 POP
0x169 SWAP1
0x16a DUP2
0x16b ADD
0x16c SWAP1
0x16d PUSH1 0x1f
0x16f AND
0x170 DUP1
0x171 ISZERO
0x172 PUSH2 0x18f
0x175 JUMPI
---
0x162: JUMPDEST 
0x16b: V105 = ADD V92 V93
0x16d: V106 = 0x1f
0x16f: V107 = AND 0x1f V92
0x171: V108 = ISZERO V107
0x172: V109 = 0x18f
0x175: JUMPI 0x18f V108
---
Entry stack: [V13, 0x128, S9, V88, V88, V93, V94, V92, V92, V93, V94, S0]
Stack pops: 7
Stack additions: [V105, V107]
Exit stack: [V13, 0x128, S9, V88, V88, V105, V107]

================================

Block 0x176
[0x176:0x18e]
---
Predecessors: [0x162]
Successors: [0x18f]
---
0x176 DUP1
0x177 DUP3
0x178 SUB
0x179 DUP1
0x17a MLOAD
0x17b PUSH1 0x1
0x17d DUP4
0x17e PUSH1 0x20
0x180 SUB
0x181 PUSH2 0x100
0x184 EXP
0x185 SUB
0x186 NOT
0x187 AND
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d SWAP2
0x18e POP
---
0x178: V110 = SUB V105 V107
0x17a: V111 = M[V110]
0x17b: V112 = 0x1
0x17e: V113 = 0x20
0x180: V114 = SUB 0x20 V107
0x181: V115 = 0x100
0x184: V116 = EXP 0x100 V114
0x185: V117 = SUB V116 0x1
0x186: V118 = NOT V117
0x187: V119 = AND V118 V111
0x189: M[V110] = V119
0x18a: V120 = 0x20
0x18c: V121 = ADD 0x20 V110
---
Entry stack: [V13, 0x128, S4, V88, V88, V105, V107]
Stack pops: 2
Stack additions: [V121, S0]
Exit stack: [V13, 0x128, S4, V88, V88, V121, V107]

================================

Block 0x18f
[0x18f:0x19c]
---
Predecessors: [0x162, 0x176]
Successors: []
---
0x18f JUMPDEST
0x190 POP
0x191 SWAP3
0x192 POP
0x193 POP
0x194 POP
0x195 PUSH1 0x40
0x197 MLOAD
0x198 DUP1
0x199 SWAP2
0x19a SUB
0x19b SWAP1
0x19c RETURN
---
0x18f: JUMPDEST 
0x195: V122 = 0x40
0x197: V123 = M[0x40]
0x19a: V124 = SUB S1 V123
0x19c: RETURN V123 V124
---
Entry stack: [V13, 0x128, S4, V88, V88, S1, V107]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x128]

================================

Block 0x19d
[0x19d:0x1a4]
---
Predecessors: [0x27]
Successors: [0x1a5, 0x1a9]
---
0x19d JUMPDEST
0x19e CALLVALUE
0x19f DUP1
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19d: JUMPDEST 
0x19e: V125 = CALLVALUE
0x1a0: V126 = ISZERO V125
0x1a1: V127 = 0x1a9
0x1a4: JUMPI 0x1a9 V126
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V13, V125]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19d]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V128 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V13, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V125]

================================

Block 0x1a9
[0x1a9:0x1b1]
---
Predecessors: [0x19d]
Successors: [0x4e6]
---
0x1a9 JUMPDEST
0x1aa POP
0x1ab PUSH2 0x1b2
0x1ae PUSH2 0x4e6
0x1b1 JUMP
---
0x1a9: JUMPDEST 
0x1ab: V129 = 0x1b2
0x1ae: V130 = 0x4e6
0x1b1: JUMP 0x4e6
---
Entry stack: [V13, V125]
Stack pops: 1
Stack additions: [0x1b2]
Exit stack: [V13, 0x1b2]

================================

Block 0x1b2
[0x1b2:0x1cd]
---
Predecessors: [0x4e6, 0x823, 0x967, 0x9da]
Successors: []
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x40
0x1b5 DUP1
0x1b6 MLOAD
0x1b7 PUSH1 0x1
0x1b9 PUSH1 0xa0
0x1bb PUSH1 0x2
0x1bd EXP
0x1be SUB
0x1bf SWAP1
0x1c0 SWAP3
0x1c1 AND
0x1c2 DUP3
0x1c3 MSTORE
0x1c4 MLOAD
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 SWAP1
0x1c8 SUB
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd RETURN
---
0x1b2: JUMPDEST 
0x1b3: V131 = 0x40
0x1b6: V132 = M[0x40]
0x1b7: V133 = 0x1
0x1b9: V134 = 0xa0
0x1bb: V135 = 0x2
0x1bd: V136 = EXP 0x2 0xa0
0x1be: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c1: V138 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: M[V132] = V138
0x1c4: V139 = M[0x40]
0x1c8: V140 = SUB V132 V139
0x1c9: V141 = 0x20
0x1cb: V142 = ADD 0x20 V140
0x1cd: RETURN V139 V142
---
Entry stack: [V13, 0x1b2, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1b2]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x32]
Successors: [0x1d6, 0x1da]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 DUP1
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V143 = CALLVALUE
0x1d1: V144 = ISZERO V143
0x1d2: V145 = 0x1da
0x1d5: JUMPI 0x1da V144
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V143]
Exit stack: [V13, V143]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V146 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V13, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V143]

================================

Block 0x1da
[0x1da:0x1e2]
---
Predecessors: [0x1ce]
Successors: [0x4f5]
---
0x1da JUMPDEST
0x1db POP
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x4f5
0x1e2 JUMP
---
0x1da: JUMPDEST 
0x1dc: V147 = 0x1e3
0x1df: V148 = 0x4f5
0x1e2: JUMP 0x4f5
---
Entry stack: [V13, V143]
Stack pops: 1
Stack additions: [0x1e3]
Exit stack: [V13, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x1f4]
---
Predecessors: [0x4f5, 0x80b, 0x81d, 0x832, 0x84d, 0x9d4, 0x9e9]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 DUP1
0x1e7 MLOAD
0x1e8 SWAP2
0x1e9 DUP3
0x1ea MSTORE
0x1eb MLOAD
0x1ec SWAP1
0x1ed DUP2
0x1ee SWAP1
0x1ef SUB
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP1
0x1f4 RETURN
---
0x1e3: JUMPDEST 
0x1e4: V149 = 0x40
0x1e7: V150 = M[0x40]
0x1ea: M[V150] = S0
0x1eb: V151 = M[0x40]
0x1ef: V152 = SUB V150 V151
0x1f0: V153 = 0x20
0x1f2: V154 = ADD 0x20 V152
0x1f4: RETURN V151 V154
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, S2, S1]

================================

Block 0x1f5
[0x1f5:0x1fc]
---
Predecessors: [0x3d]
Successors: [0x1fd, 0x201]
---
0x1f5 JUMPDEST
0x1f6 CALLVALUE
0x1f7 DUP1
0x1f8 ISZERO
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V155 = CALLVALUE
0x1f8: V156 = ISZERO V155
0x1f9: V157 = 0x201
0x1fc: JUMPI 0x201 V156
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V155]
Exit stack: [V13, V155]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x1f5]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V158 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V13, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V155]

================================

Block 0x201
[0x201:0x21b]
---
Predecessors: [0x1f5]
Successors: [0x4fb]
---
0x201 JUMPDEST
0x202 POP
0x203 PUSH2 0x21c
0x206 PUSH1 0x4
0x208 CALLDATALOAD
0x209 PUSH1 0xff
0x20b PUSH1 0x24
0x20d CALLDATALOAD
0x20e AND
0x20f PUSH1 0x44
0x211 CALLDATALOAD
0x212 PUSH1 0x64
0x214 CALLDATALOAD
0x215 PUSH1 0x84
0x217 CALLDATALOAD
0x218 PUSH2 0x4fb
0x21b JUMP
---
0x201: JUMPDEST 
0x203: V159 = 0x21c
0x206: V160 = 0x4
0x208: V161 = CALLDATALOAD 0x4
0x209: V162 = 0xff
0x20b: V163 = 0x24
0x20d: V164 = CALLDATALOAD 0x24
0x20e: V165 = AND V164 0xff
0x20f: V166 = 0x44
0x211: V167 = CALLDATALOAD 0x44
0x212: V168 = 0x64
0x214: V169 = CALLDATALOAD 0x64
0x215: V170 = 0x84
0x217: V171 = CALLDATALOAD 0x84
0x218: V172 = 0x4fb
0x21b: JUMP 0x4fb
---
Entry stack: [V13, V155]
Stack pops: 1
Stack additions: [0x21c, V161, V165, V167, V169, V171]
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171]

================================

Block 0x21c
[0x21c:0x22f]
---
Predecessors: [0x678, 0x88f, 0x937, 0x9d4, 0xcc8, 0xd80]
Successors: []
---
0x21c JUMPDEST
0x21d PUSH1 0x40
0x21f DUP1
0x220 MLOAD
0x221 SWAP2
0x222 ISZERO
0x223 ISZERO
0x224 DUP3
0x225 MSTORE
0x226 MLOAD
0x227 SWAP1
0x228 DUP2
0x229 SWAP1
0x22a SUB
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP1
0x22f RETURN
---
0x21c: JUMPDEST 
0x21d: V173 = 0x40
0x220: V174 = M[0x40]
0x222: V175 = ISZERO S0
0x223: V176 = ISZERO V175
0x225: M[V174] = V176
0x226: V177 = M[0x40]
0x22a: V178 = SUB V174 V177
0x22b: V179 = 0x20
0x22d: V180 = ADD 0x20 V178
0x22f: RETURN V177 V180
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x21c, V161, V165, V167, V169, S2, S1]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x48]
Successors: [0x238, 0x23c]
---
0x230 JUMPDEST
0x231 CALLVALUE
0x232 DUP1
0x233 ISZERO
0x234 PUSH2 0x23c
0x237 JUMPI
---
0x230: JUMPDEST 
0x231: V181 = CALLVALUE
0x233: V182 = ISZERO V181
0x234: V183 = 0x23c
0x237: JUMPI 0x23c V182
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V181]
Exit stack: [V13, V181]

================================

Block 0x238
[0x238:0x23b]
---
Predecessors: [0x230]
Successors: []
---
0x238 PUSH1 0x0
0x23a DUP1
0x23b REVERT
---
0x238: V184 = 0x0
0x23b: REVERT 0x0 0x0
---
Entry stack: [V13, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V181]

================================

Block 0x23c
[0x23c:0x259]
---
Predecessors: [0x230]
Successors: [0x684]
---
0x23c JUMPDEST
0x23d POP
0x23e PUSH2 0x25a
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 PUSH1 0x4
0x24b CALLDATALOAD
0x24c DUP2
0x24d AND
0x24e SWAP1
0x24f PUSH1 0x24
0x251 CALLDATALOAD
0x252 AND
0x253 PUSH1 0x44
0x255 CALLDATALOAD
0x256 PUSH2 0x684
0x259 JUMP
---
0x23c: JUMPDEST 
0x23e: V185 = 0x25a
0x241: V186 = 0x1
0x243: V187 = 0xa0
0x245: V188 = 0x2
0x247: V189 = EXP 0x2 0xa0
0x248: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V191 = 0x4
0x24b: V192 = CALLDATALOAD 0x4
0x24d: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x24f: V194 = 0x24
0x251: V195 = CALLDATALOAD 0x24
0x252: V196 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x253: V197 = 0x44
0x255: V198 = CALLDATALOAD 0x44
0x256: V199 = 0x684
0x259: JUMP 0x684
---
Entry stack: [V13, V181]
Stack pops: 1
Stack additions: [0x25a, V193, V196, V198]
Exit stack: [V13, 0x25a, V193, V196, V198]

================================

Block 0x25a
[0x25a:0x25b]
---
Predecessors: [0x7ad, 0xd80, 0xdc3, 0xe13]
Successors: []
---
0x25a JUMPDEST
0x25b STOP
---
0x25a: JUMPDEST 
0x25b: STOP 
---
Entry stack: [V13, 0x21c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, S1, S0]

================================

Block 0x25c
[0x25c:0x263]
---
Predecessors: [0x53]
Successors: [0x264, 0x268]
---
0x25c JUMPDEST
0x25d CALLVALUE
0x25e DUP1
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x25c: JUMPDEST 
0x25d: V200 = CALLVALUE
0x25f: V201 = ISZERO V200
0x260: V202 = 0x268
0x263: JUMPI 0x268 V201
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V200]
Exit stack: [V13, V200]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x25c]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V203 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V13, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V200]

================================

Block 0x268
[0x268:0x27c]
---
Predecessors: [0x25c]
Successors: [0x80b]
---
0x268 JUMPDEST
0x269 POP
0x26a PUSH2 0x1e3
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 PUSH1 0x4
0x277 CALLDATALOAD
0x278 AND
0x279 PUSH2 0x80b
0x27c JUMP
---
0x268: JUMPDEST 
0x26a: V204 = 0x1e3
0x26d: V205 = 0x1
0x26f: V206 = 0xa0
0x271: V207 = 0x2
0x273: V208 = EXP 0x2 0xa0
0x274: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V210 = 0x4
0x277: V211 = CALLDATALOAD 0x4
0x278: V212 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0x279: V213 = 0x80b
0x27c: JUMP 0x80b
---
Entry stack: [V13, V200]
Stack pops: 1
Stack additions: [0x1e3, V212]
Exit stack: [V13, 0x1e3, V212]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x5e]
Successors: [0x285, 0x289]
---
0x27d JUMPDEST
0x27e CALLVALUE
0x27f DUP1
0x280 ISZERO
0x281 PUSH2 0x289
0x284 JUMPI
---
0x27d: JUMPDEST 
0x27e: V214 = CALLVALUE
0x280: V215 = ISZERO V214
0x281: V216 = 0x289
0x284: JUMPI 0x289 V215
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V214]
Exit stack: [V13, V214]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x27d]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V217 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V13, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V214]

================================

Block 0x289
[0x289:0x291]
---
Predecessors: [0x27d]
Successors: [0x81d]
---
0x289 JUMPDEST
0x28a POP
0x28b PUSH2 0x1e3
0x28e PUSH2 0x81d
0x291 JUMP
---
0x289: JUMPDEST 
0x28b: V218 = 0x1e3
0x28e: V219 = 0x81d
0x291: JUMP 0x81d
---
Entry stack: [V13, V214]
Stack pops: 1
Stack additions: [0x1e3]
Exit stack: [V13, 0x1e3]

================================

Block 0x292
[0x292:0x299]
---
Predecessors: [0x69]
Successors: [0x29a, 0x29e]
---
0x292 JUMPDEST
0x293 CALLVALUE
0x294 DUP1
0x295 ISZERO
0x296 PUSH2 0x29e
0x299 JUMPI
---
0x292: JUMPDEST 
0x293: V220 = CALLVALUE
0x295: V221 = ISZERO V220
0x296: V222 = 0x29e
0x299: JUMPI 0x29e V221
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V220]
Exit stack: [V13, V220]

================================

Block 0x29a
[0x29a:0x29d]
---
Predecessors: [0x292]
Successors: []
---
0x29a PUSH1 0x0
0x29c DUP1
0x29d REVERT
---
0x29a: V223 = 0x0
0x29d: REVERT 0x0 0x0
---
Entry stack: [V13, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V220]

================================

Block 0x29e
[0x29e:0x2a6]
---
Predecessors: [0x292]
Successors: [0x823]
---
0x29e JUMPDEST
0x29f POP
0x2a0 PUSH2 0x1b2
0x2a3 PUSH2 0x823
0x2a6 JUMP
---
0x29e: JUMPDEST 
0x2a0: V224 = 0x1b2
0x2a3: V225 = 0x823
0x2a6: JUMP 0x823
---
Entry stack: [V13, V220]
Stack pops: 1
Stack additions: [0x1b2]
Exit stack: [V13, 0x1b2]

================================

Block 0x2a7
[0x2a7:0x2ae]
---
Predecessors: [0x74]
Successors: [0x2af, 0x2b3]
---
0x2a7 JUMPDEST
0x2a8 CALLVALUE
0x2a9 DUP1
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V226 = CALLVALUE
0x2aa: V227 = ISZERO V226
0x2ab: V228 = 0x2b3
0x2ae: JUMPI 0x2b3 V227
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V226]
Exit stack: [V13, V226]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x2a7]
Successors: []
---
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 REVERT
---
0x2af: V229 = 0x0
0x2b2: REVERT 0x0 0x0
---
Entry stack: [V13, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V226]

================================

Block 0x2b3
[0x2b3:0x2c7]
---
Predecessors: [0x2a7]
Successors: [0x832]
---
0x2b3 JUMPDEST
0x2b4 POP
0x2b5 PUSH2 0x1e3
0x2b8 PUSH1 0x1
0x2ba PUSH1 0xa0
0x2bc PUSH1 0x2
0x2be EXP
0x2bf SUB
0x2c0 PUSH1 0x4
0x2c2 CALLDATALOAD
0x2c3 AND
0x2c4 PUSH2 0x832
0x2c7 JUMP
---
0x2b3: JUMPDEST 
0x2b5: V230 = 0x1e3
0x2b8: V231 = 0x1
0x2ba: V232 = 0xa0
0x2bc: V233 = 0x2
0x2be: V234 = EXP 0x2 0xa0
0x2bf: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c0: V236 = 0x4
0x2c2: V237 = CALLDATALOAD 0x4
0x2c3: V238 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x2c4: V239 = 0x832
0x2c7: JUMP 0x832
---
Entry stack: [V13, V226]
Stack pops: 1
Stack additions: [0x1e3, V238]
Exit stack: [V13, 0x1e3, V238]

================================

Block 0x2c8
[0x2c8:0x2cf]
---
Predecessors: [0x7f]
Successors: [0x2d0, 0x2d4]
---
0x2c8 JUMPDEST
0x2c9 CALLVALUE
0x2ca DUP1
0x2cb ISZERO
0x2cc PUSH2 0x2d4
0x2cf JUMPI
---
0x2c8: JUMPDEST 
0x2c9: V240 = CALLVALUE
0x2cb: V241 = ISZERO V240
0x2cc: V242 = 0x2d4
0x2cf: JUMPI 0x2d4 V241
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V240]
Exit stack: [V13, V240]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x2c8]
Successors: []
---
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 REVERT
---
0x2d0: V243 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V13, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V240]

================================

Block 0x2d4
[0x2d4:0x2f1]
---
Predecessors: [0x2c8]
Successors: [0x84d]
---
0x2d4 JUMPDEST
0x2d5 POP
0x2d6 PUSH2 0x1e3
0x2d9 PUSH1 0x1
0x2db PUSH1 0xa0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 SUB
0x2e1 PUSH1 0x4
0x2e3 CALLDATALOAD
0x2e4 DUP2
0x2e5 AND
0x2e6 SWAP1
0x2e7 PUSH1 0x24
0x2e9 CALLDATALOAD
0x2ea AND
0x2eb PUSH1 0x44
0x2ed CALLDATALOAD
0x2ee PUSH2 0x84d
0x2f1 JUMP
---
0x2d4: JUMPDEST 
0x2d6: V244 = 0x1e3
0x2d9: V245 = 0x1
0x2db: V246 = 0xa0
0x2dd: V247 = 0x2
0x2df: V248 = EXP 0x2 0xa0
0x2e0: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e1: V250 = 0x4
0x2e3: V251 = CALLDATALOAD 0x4
0x2e5: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x2e7: V253 = 0x24
0x2e9: V254 = CALLDATALOAD 0x24
0x2ea: V255 = AND V254 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V256 = 0x44
0x2ed: V257 = CALLDATALOAD 0x44
0x2ee: V258 = 0x84d
0x2f1: JUMP 0x84d
---
Entry stack: [V13, V240]
Stack pops: 1
Stack additions: [0x1e3, V252, V255, V257]
Exit stack: [V13, 0x1e3, V252, V255, V257]

================================

Block 0x2f2
[0x2f2:0x2f9]
---
Predecessors: [0x8a]
Successors: [0x2fa, 0x2fe]
---
0x2f2 JUMPDEST
0x2f3 CALLVALUE
0x2f4 DUP1
0x2f5 ISZERO
0x2f6 PUSH2 0x2fe
0x2f9 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V259 = CALLVALUE
0x2f5: V260 = ISZERO V259
0x2f6: V261 = 0x2fe
0x2f9: JUMPI 0x2fe V260
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V259]
Exit stack: [V13, V259]

================================

Block 0x2fa
[0x2fa:0x2fd]
---
Predecessors: [0x2f2]
Successors: []
---
0x2fa PUSH1 0x0
0x2fc DUP1
0x2fd REVERT
---
0x2fa: V262 = 0x0
0x2fd: REVERT 0x0 0x0
---
Entry stack: [V13, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V259]

================================

Block 0x2fe
[0x2fe:0x312]
---
Predecessors: [0x2f2]
Successors: [0x88f]
---
0x2fe JUMPDEST
0x2ff POP
0x300 PUSH2 0x21c
0x303 PUSH1 0x1
0x305 PUSH1 0xa0
0x307 PUSH1 0x2
0x309 EXP
0x30a SUB
0x30b PUSH1 0x4
0x30d CALLDATALOAD
0x30e AND
0x30f PUSH2 0x88f
0x312 JUMP
---
0x2fe: JUMPDEST 
0x300: V263 = 0x21c
0x303: V264 = 0x1
0x305: V265 = 0xa0
0x307: V266 = 0x2
0x309: V267 = EXP 0x2 0xa0
0x30a: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30b: V269 = 0x4
0x30d: V270 = CALLDATALOAD 0x4
0x30e: V271 = AND V270 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V272 = 0x88f
0x312: JUMP 0x88f
---
Entry stack: [V13, V259]
Stack pops: 1
Stack additions: [0x21c, V271]
Exit stack: [V13, 0x21c, V271]

================================

Block 0x313
[0x313:0x31a]
---
Predecessors: [0x95]
Successors: [0x31b, 0x31f]
---
0x313 JUMPDEST
0x314 CALLVALUE
0x315 DUP1
0x316 ISZERO
0x317 PUSH2 0x31f
0x31a JUMPI
---
0x313: JUMPDEST 
0x314: V273 = CALLVALUE
0x316: V274 = ISZERO V273
0x317: V275 = 0x31f
0x31a: JUMPI 0x31f V274
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V273]
Exit stack: [V13, V273]

================================

Block 0x31b
[0x31b:0x31e]
---
Predecessors: [0x313]
Successors: []
---
0x31b PUSH1 0x0
0x31d DUP1
0x31e REVERT
---
0x31b: V276 = 0x0
0x31e: REVERT 0x0 0x0
---
Entry stack: [V13, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V273]

================================

Block 0x31f
[0x31f:0x336]
---
Predecessors: [0x313]
Successors: [0x8a4]
---
0x31f JUMPDEST
0x320 POP
0x321 PUSH2 0x21c
0x324 PUSH1 0x4
0x326 CALLDATALOAD
0x327 PUSH1 0xff
0x329 PUSH1 0x24
0x32b CALLDATALOAD
0x32c AND
0x32d PUSH1 0x44
0x32f CALLDATALOAD
0x330 PUSH1 0x64
0x332 CALLDATALOAD
0x333 PUSH2 0x8a4
0x336 JUMP
---
0x31f: JUMPDEST 
0x321: V277 = 0x21c
0x324: V278 = 0x4
0x326: V279 = CALLDATALOAD 0x4
0x327: V280 = 0xff
0x329: V281 = 0x24
0x32b: V282 = CALLDATALOAD 0x24
0x32c: V283 = AND V282 0xff
0x32d: V284 = 0x44
0x32f: V285 = CALLDATALOAD 0x44
0x330: V286 = 0x64
0x332: V287 = CALLDATALOAD 0x64
0x333: V288 = 0x8a4
0x336: JUMP 0x8a4
---
Entry stack: [V13, V273]
Stack pops: 1
Stack additions: [0x21c, V279, V283, V285, V287]
Exit stack: [V13, 0x21c, V279, V283, V285, V287]

================================

Block 0x337
[0x337:0x33e]
---
Predecessors: [0xa0]
Successors: [0x33f, 0x343]
---
0x337 JUMPDEST
0x338 CALLVALUE
0x339 DUP1
0x33a ISZERO
0x33b PUSH2 0x343
0x33e JUMPI
---
0x337: JUMPDEST 
0x338: V289 = CALLVALUE
0x33a: V290 = ISZERO V289
0x33b: V291 = 0x343
0x33e: JUMPI 0x343 V290
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V289]
Exit stack: [V13, V289]

================================

Block 0x33f
[0x33f:0x342]
---
Predecessors: [0x337]
Successors: []
---
0x33f PUSH1 0x0
0x341 DUP1
0x342 REVERT
---
0x33f: V292 = 0x0
0x342: REVERT 0x0 0x0
---
Entry stack: [V13, V289]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V289]

================================

Block 0x343
[0x343:0x34b]
---
Predecessors: [0x337]
Successors: [0x967]
---
0x343 JUMPDEST
0x344 POP
0x345 PUSH2 0x1b2
0x348 PUSH2 0x967
0x34b JUMP
---
0x343: JUMPDEST 
0x345: V293 = 0x1b2
0x348: V294 = 0x967
0x34b: JUMP 0x967
---
Entry stack: [V13, V289]
Stack pops: 1
Stack additions: [0x1b2]
Exit stack: [V13, 0x1b2]

================================

Block 0x34c
[0x34c:0x353]
---
Predecessors: [0xab]
Successors: [0x354, 0x358]
---
0x34c JUMPDEST
0x34d CALLVALUE
0x34e DUP1
0x34f ISZERO
0x350 PUSH2 0x358
0x353 JUMPI
---
0x34c: JUMPDEST 
0x34d: V295 = CALLVALUE
0x34f: V296 = ISZERO V295
0x350: V297 = 0x358
0x353: JUMPI 0x358 V296
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V295]
Exit stack: [V13, V295]

================================

Block 0x354
[0x354:0x357]
---
Predecessors: [0x34c]
Successors: []
---
0x354 PUSH1 0x0
0x356 DUP1
0x357 REVERT
---
0x354: V298 = 0x0
0x357: REVERT 0x0 0x0
---
Entry stack: [V13, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V295]

================================

Block 0x358
[0x358:0x360]
---
Predecessors: [0x34c]
Successors: [0x976]
---
0x358 JUMPDEST
0x359 POP
0x35a PUSH2 0x128
0x35d PUSH2 0x976
0x360 JUMP
---
0x358: JUMPDEST 
0x35a: V299 = 0x128
0x35d: V300 = 0x976
0x360: JUMP 0x976
---
Entry stack: [V13, V295]
Stack pops: 1
Stack additions: [0x128]
Exit stack: [V13, 0x128]

================================

Block 0x361
[0x361:0x368]
---
Predecessors: [0xb6]
Successors: [0x369, 0x36d]
---
0x361 JUMPDEST
0x362 CALLVALUE
0x363 DUP1
0x364 ISZERO
0x365 PUSH2 0x36d
0x368 JUMPI
---
0x361: JUMPDEST 
0x362: V301 = CALLVALUE
0x364: V302 = ISZERO V301
0x365: V303 = 0x36d
0x368: JUMPI 0x36d V302
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V301]
Exit stack: [V13, V301]

================================

Block 0x369
[0x369:0x36c]
---
Predecessors: [0x361]
Successors: []
---
0x369 PUSH1 0x0
0x36b DUP1
0x36c REVERT
---
0x369: V304 = 0x0
0x36c: REVERT 0x0 0x0
---
Entry stack: [V13, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V301]

================================

Block 0x36d
[0x36d:0x384]
---
Predecessors: [0x361]
Successors: [0x9d1]
---
0x36d JUMPDEST
0x36e POP
0x36f PUSH2 0x21c
0x372 PUSH1 0x1
0x374 PUSH1 0xa0
0x376 PUSH1 0x2
0x378 EXP
0x379 SUB
0x37a PUSH1 0x4
0x37c CALLDATALOAD
0x37d AND
0x37e PUSH1 0x24
0x380 CALLDATALOAD
0x381 PUSH2 0x9d1
0x384 JUMP
---
0x36d: JUMPDEST 
0x36f: V305 = 0x21c
0x372: V306 = 0x1
0x374: V307 = 0xa0
0x376: V308 = 0x2
0x378: V309 = EXP 0x2 0xa0
0x379: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37a: V311 = 0x4
0x37c: V312 = CALLDATALOAD 0x4
0x37d: V313 = AND V312 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V314 = 0x24
0x380: V315 = CALLDATALOAD 0x24
0x381: V316 = 0x9d1
0x384: JUMP 0x9d1
---
Entry stack: [V13, V301]
Stack pops: 1
Stack additions: [0x21c, V313, V315]
Exit stack: [V13, 0x21c, V313, V315]

================================

Block 0x385
[0x385:0x38c]
---
Predecessors: [0xc1]
Successors: [0x38d, 0x391]
---
0x385 JUMPDEST
0x386 CALLVALUE
0x387 DUP1
0x388 ISZERO
0x389 PUSH2 0x391
0x38c JUMPI
---
0x385: JUMPDEST 
0x386: V317 = CALLVALUE
0x388: V318 = ISZERO V317
0x389: V319 = 0x391
0x38c: JUMPI 0x391 V318
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V317]
Exit stack: [V13, V317]

================================

Block 0x38d
[0x38d:0x390]
---
Predecessors: [0x385]
Successors: []
---
0x38d PUSH1 0x0
0x38f DUP1
0x390 REVERT
---
0x38d: V320 = 0x0
0x390: REVERT 0x0 0x0
---
Entry stack: [V13, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V317]

================================

Block 0x391
[0x391:0x399]
---
Predecessors: [0x385]
Successors: [0x9da]
---
0x391 JUMPDEST
0x392 POP
0x393 PUSH2 0x1b2
0x396 PUSH2 0x9da
0x399 JUMP
---
0x391: JUMPDEST 
0x393: V321 = 0x1b2
0x396: V322 = 0x9da
0x399: JUMP 0x9da
---
Entry stack: [V13, V317]
Stack pops: 1
Stack additions: [0x1b2]
Exit stack: [V13, 0x1b2]

================================

Block 0x39a
[0x39a:0x3a1]
---
Predecessors: [0xcc]
Successors: [0x3a2, 0x3a6]
---
0x39a JUMPDEST
0x39b CALLVALUE
0x39c DUP1
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x39a: JUMPDEST 
0x39b: V323 = CALLVALUE
0x39d: V324 = ISZERO V323
0x39e: V325 = 0x3a6
0x3a1: JUMPI 0x3a6 V324
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V323]
Exit stack: [V13, V323]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x39a]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V326 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V13, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V323]

================================

Block 0x3a6
[0x3a6:0x3ba]
---
Predecessors: [0x39a]
Successors: [0x9e9]
---
0x3a6 JUMPDEST
0x3a7 POP
0x3a8 PUSH2 0x1e3
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 PUSH1 0x4
0x3b5 CALLDATALOAD
0x3b6 AND
0x3b7 PUSH2 0x9e9
0x3ba JUMP
---
0x3a6: JUMPDEST 
0x3a8: V327 = 0x1e3
0x3ab: V328 = 0x1
0x3ad: V329 = 0xa0
0x3af: V330 = 0x2
0x3b1: V331 = EXP 0x2 0xa0
0x3b2: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b3: V333 = 0x4
0x3b5: V334 = CALLDATALOAD 0x4
0x3b6: V335 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V336 = 0x9e9
0x3ba: JUMP 0x9e9
---
Entry stack: [V13, V323]
Stack pops: 1
Stack additions: [0x1e3, V335]
Exit stack: [V13, 0x1e3, V335]

================================

Block 0x3bb
[0x3bb:0x3c2]
---
Predecessors: [0xd7]
Successors: [0x3c3, 0x3c7]
---
0x3bb JUMPDEST
0x3bc CALLVALUE
0x3bd DUP1
0x3be ISZERO
0x3bf PUSH2 0x3c7
0x3c2 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V337 = CALLVALUE
0x3be: V338 = ISZERO V337
0x3bf: V339 = 0x3c7
0x3c2: JUMPI 0x3c7 V338
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V337]
Exit stack: [V13, V337]

================================

Block 0x3c3
[0x3c3:0x3c6]
---
Predecessors: [0x3bb]
Successors: []
---
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 REVERT
---
0x3c3: V340 = 0x0
0x3c6: REVERT 0x0 0x0
---
Entry stack: [V13, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V337]

================================

Block 0x3c7
[0x3c7:0x3e0]
---
Predecessors: [0x3bb]
Successors: [0x9fb]
---
0x3c7 JUMPDEST
0x3c8 POP
0x3c9 PUSH2 0x21c
0x3cc PUSH1 0x1
0x3ce PUSH1 0xa0
0x3d0 PUSH1 0x2
0x3d2 EXP
0x3d3 SUB
0x3d4 PUSH1 0x4
0x3d6 CALLDATALOAD
0x3d7 AND
0x3d8 PUSH1 0x24
0x3da CALLDATALOAD
0x3db ISZERO
0x3dc ISZERO
0x3dd PUSH2 0x9fb
0x3e0 JUMP
---
0x3c7: JUMPDEST 
0x3c9: V341 = 0x21c
0x3cc: V342 = 0x1
0x3ce: V343 = 0xa0
0x3d0: V344 = 0x2
0x3d2: V345 = EXP 0x2 0xa0
0x3d3: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d4: V347 = 0x4
0x3d6: V348 = CALLDATALOAD 0x4
0x3d7: V349 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x3d8: V350 = 0x24
0x3da: V351 = CALLDATALOAD 0x24
0x3db: V352 = ISZERO V351
0x3dc: V353 = ISZERO V352
0x3dd: V354 = 0x9fb
0x3e0: JUMP 0x9fb
---
Entry stack: [V13, V337]
Stack pops: 1
Stack additions: [0x21c, V349, V353]
Exit stack: [V13, 0x21c, V349, V353]

================================

Block 0x3e1
[0x3e1:0x3e8]
---
Predecessors: [0xe2]
Successors: [0x3e9, 0x3ed]
---
0x3e1 JUMPDEST
0x3e2 CALLVALUE
0x3e3 DUP1
0x3e4 ISZERO
0x3e5 PUSH2 0x3ed
0x3e8 JUMPI
---
0x3e1: JUMPDEST 
0x3e2: V355 = CALLVALUE
0x3e4: V356 = ISZERO V355
0x3e5: V357 = 0x3ed
0x3e8: JUMPI 0x3ed V356
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V355]
Exit stack: [V13, V355]

================================

Block 0x3e9
[0x3e9:0x3ec]
---
Predecessors: [0x3e1]
Successors: []
---
0x3e9 PUSH1 0x0
0x3eb DUP1
0x3ec REVERT
---
0x3e9: V358 = 0x0
0x3ec: REVERT 0x0 0x0
---
Entry stack: [V13, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V355]

================================

Block 0x3ed
[0x3ed:0x407]
---
Predecessors: [0x3e1]
Successors: [0xcd1]
---
0x3ed JUMPDEST
0x3ee POP
0x3ef PUSH2 0x1e3
0x3f2 PUSH1 0x1
0x3f4 PUSH1 0xa0
0x3f6 PUSH1 0x2
0x3f8 EXP
0x3f9 SUB
0x3fa PUSH1 0x4
0x3fc CALLDATALOAD
0x3fd DUP2
0x3fe AND
0x3ff SWAP1
0x400 PUSH1 0x24
0x402 CALLDATALOAD
0x403 AND
0x404 PUSH2 0xcd1
0x407 JUMP
---
0x3ed: JUMPDEST 
0x3ef: V359 = 0x1e3
0x3f2: V360 = 0x1
0x3f4: V361 = 0xa0
0x3f6: V362 = 0x2
0x3f8: V363 = EXP 0x2 0xa0
0x3f9: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fa: V365 = 0x4
0x3fc: V366 = CALLDATALOAD 0x4
0x3fe: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x400: V368 = 0x24
0x402: V369 = CALLDATALOAD 0x24
0x403: V370 = AND V369 0xffffffffffffffffffffffffffffffffffffffff
0x404: V371 = 0xcd1
0x407: JUMP 0xcd1
---
Entry stack: [V13, V355]
Stack pops: 1
Stack additions: [0x1e3, V367, V370]
Exit stack: [V13, 0x1e3, V367, V370]

================================

Block 0x408
[0x408:0x415]
---
Predecessors: [0xed]
Successors: [0xd0b]
---
0x408 JUMPDEST
0x409 PUSH2 0x21c
0x40c PUSH1 0x4
0x40e CALLDATALOAD
0x40f PUSH1 0x24
0x411 CALLDATALOAD
0x412 PUSH2 0xd0b
0x415 JUMP
---
0x408: JUMPDEST 
0x409: V372 = 0x21c
0x40c: V373 = 0x4
0x40e: V374 = CALLDATALOAD 0x4
0x40f: V375 = 0x24
0x411: V376 = CALLDATALOAD 0x24
0x412: V377 = 0xd0b
0x415: JUMP 0xd0b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x21c, V374, V376]
Exit stack: [V13, 0x21c, V374, V376]

================================

Block 0x416
[0x416:0x41d]
---
Predecessors: [0xf8]
Successors: [0x41e, 0x422]
---
0x416 JUMPDEST
0x417 CALLVALUE
0x418 DUP1
0x419 ISZERO
0x41a PUSH2 0x422
0x41d JUMPI
---
0x416: JUMPDEST 
0x417: V378 = CALLVALUE
0x419: V379 = ISZERO V378
0x41a: V380 = 0x422
0x41d: JUMPI 0x422 V379
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V378]
Exit stack: [V13, V378]

================================

Block 0x41e
[0x41e:0x421]
---
Predecessors: [0x416]
Successors: []
---
0x41e PUSH1 0x0
0x420 DUP1
0x421 REVERT
---
0x41e: V381 = 0x0
0x421: REVERT 0x0 0x0
---
Entry stack: [V13, V378]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V378]

================================

Block 0x422
[0x422:0x436]
---
Predecessors: [0x416]
Successors: [0xda5]
---
0x422 JUMPDEST
0x423 POP
0x424 PUSH2 0x25a
0x427 PUSH1 0x1
0x429 PUSH1 0xa0
0x42b PUSH1 0x2
0x42d EXP
0x42e SUB
0x42f PUSH1 0x4
0x431 CALLDATALOAD
0x432 AND
0x433 PUSH2 0xda5
0x436 JUMP
---
0x422: JUMPDEST 
0x424: V382 = 0x25a
0x427: V383 = 0x1
0x429: V384 = 0xa0
0x42b: V385 = 0x2
0x42d: V386 = EXP 0x2 0xa0
0x42e: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42f: V388 = 0x4
0x431: V389 = CALLDATALOAD 0x4
0x432: V390 = AND V389 0xffffffffffffffffffffffffffffffffffffffff
0x433: V391 = 0xda5
0x436: JUMP 0xda5
---
Entry stack: [V13, V378]
Stack pops: 1
Stack additions: [0x25a, V390]
Exit stack: [V13, 0x25a, V390]

================================

Block 0x437
[0x437:0x43e]
---
Predecessors: [0x103]
Successors: [0x43f, 0x443]
---
0x437 JUMPDEST
0x438 CALLVALUE
0x439 DUP1
0x43a ISZERO
0x43b PUSH2 0x443
0x43e JUMPI
---
0x437: JUMPDEST 
0x438: V392 = CALLVALUE
0x43a: V393 = ISZERO V392
0x43b: V394 = 0x443
0x43e: JUMPI 0x443 V393
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V392]
Exit stack: [V13, V392]

================================

Block 0x43f
[0x43f:0x442]
---
Predecessors: [0x437]
Successors: []
---
0x43f PUSH1 0x0
0x441 DUP1
0x442 REVERT
---
0x43f: V395 = 0x0
0x442: REVERT 0x0 0x0
---
Entry stack: [V13, V392]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V392]

================================

Block 0x443
[0x443:0x457]
---
Predecessors: [0x437]
Successors: [0xde7]
---
0x443 JUMPDEST
0x444 POP
0x445 PUSH2 0x25a
0x448 PUSH1 0x1
0x44a PUSH1 0xa0
0x44c PUSH1 0x2
0x44e EXP
0x44f SUB
0x450 PUSH1 0x4
0x452 CALLDATALOAD
0x453 AND
0x454 PUSH2 0xde7
0x457 JUMP
---
0x443: JUMPDEST 
0x445: V396 = 0x25a
0x448: V397 = 0x1
0x44a: V398 = 0xa0
0x44c: V399 = 0x2
0x44e: V400 = EXP 0x2 0xa0
0x44f: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x450: V402 = 0x4
0x452: V403 = CALLDATALOAD 0x4
0x453: V404 = AND V403 0xffffffffffffffffffffffffffffffffffffffff
0x454: V405 = 0xde7
0x457: JUMP 0xde7
---
Entry stack: [V13, V392]
Stack pops: 1
Stack additions: [0x25a, V404]
Exit stack: [V13, 0x25a, V404]

================================

Block 0x458
[0x458:0x497]
---
Predecessors: [0x11f]
Successors: [0x498, 0x4de]
---
0x458 JUMPDEST
0x459 PUSH1 0x6
0x45b DUP1
0x45c SLOAD
0x45d PUSH1 0x40
0x45f DUP1
0x460 MLOAD
0x461 PUSH1 0x20
0x463 PUSH1 0x2
0x465 PUSH1 0x1
0x467 DUP6
0x468 AND
0x469 ISZERO
0x46a PUSH2 0x100
0x46d MUL
0x46e PUSH1 0x0
0x470 NOT
0x471 ADD
0x472 SWAP1
0x473 SWAP5
0x474 AND
0x475 SWAP4
0x476 SWAP1
0x477 SWAP4
0x478 DIV
0x479 PUSH1 0x1f
0x47b DUP2
0x47c ADD
0x47d DUP5
0x47e SWAP1
0x47f DIV
0x480 DUP5
0x481 MUL
0x482 DUP3
0x483 ADD
0x484 DUP5
0x485 ADD
0x486 SWAP1
0x487 SWAP3
0x488 MSTORE
0x489 DUP2
0x48a DUP2
0x48b MSTORE
0x48c SWAP3
0x48d SWAP2
0x48e DUP4
0x48f ADD
0x490 DUP3
0x491 DUP3
0x492 DUP1
0x493 ISZERO
0x494 PUSH2 0x4de
0x497 JUMPI
---
0x458: JUMPDEST 
0x459: V406 = 0x6
0x45c: V407 = S[0x6]
0x45d: V408 = 0x40
0x460: V409 = M[0x40]
0x461: V410 = 0x20
0x463: V411 = 0x2
0x465: V412 = 0x1
0x468: V413 = AND V407 0x1
0x469: V414 = ISZERO V413
0x46a: V415 = 0x100
0x46d: V416 = MUL 0x100 V414
0x46e: V417 = 0x0
0x470: V418 = NOT 0x0
0x471: V419 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V416
0x474: V420 = AND V407 V419
0x478: V421 = DIV V420 0x2
0x479: V422 = 0x1f
0x47c: V423 = ADD V421 0x1f
0x47f: V424 = DIV V423 0x20
0x481: V425 = MUL 0x20 V424
0x483: V426 = ADD V409 V425
0x485: V427 = ADD 0x20 V426
0x488: M[0x40] = V427
0x48b: M[V409] = V421
0x48f: V428 = ADD V409 0x20
0x493: V429 = ISZERO V421
0x494: V430 = 0x4de
0x497: JUMPI 0x4de V429
---
Entry stack: [V13, 0x128]
Stack pops: 0
Stack additions: [V409, 0x6, V421, V428, 0x6, V421]
Exit stack: [V13, 0x128, V409, 0x6, V421, V428, 0x6, V421]

================================

Block 0x498
[0x498:0x49f]
---
Predecessors: [0x458]
Successors: [0x4a0, 0x4b3]
---
0x498 DUP1
0x499 PUSH1 0x1f
0x49b LT
0x49c PUSH2 0x4b3
0x49f JUMPI
---
0x499: V431 = 0x1f
0x49b: V432 = LT 0x1f V421
0x49c: V433 = 0x4b3
0x49f: JUMPI 0x4b3 V432
---
Entry stack: [V13, 0x128, V409, 0x6, V421, V428, 0x6, V421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x128, V409, 0x6, V421, V428, 0x6, V421]

================================

Block 0x4a0
[0x4a0:0x4b2]
---
Predecessors: [0x498]
Successors: [0x4de]
---
0x4a0 PUSH2 0x100
0x4a3 DUP1
0x4a4 DUP4
0x4a5 SLOAD
0x4a6 DIV
0x4a7 MUL
0x4a8 DUP4
0x4a9 MSTORE
0x4aa SWAP2
0x4ab PUSH1 0x20
0x4ad ADD
0x4ae SWAP2
0x4af PUSH2 0x4de
0x4b2 JUMP
---
0x4a0: V434 = 0x100
0x4a5: V435 = S[0x6]
0x4a6: V436 = DIV V435 0x100
0x4a7: V437 = MUL V436 0x100
0x4a9: M[V428] = V437
0x4ab: V438 = 0x20
0x4ad: V439 = ADD 0x20 V428
0x4af: V440 = 0x4de
0x4b2: JUMP 0x4de
---
Entry stack: [V13, 0x128, V409, 0x6, V421, V428, 0x6, V421]
Stack pops: 3
Stack additions: [V439, S1, S0]
Exit stack: [V13, 0x128, V409, 0x6, V421, V439, 0x6, V421]

================================

Block 0x4b3
[0x4b3:0x4c0]
---
Predecessors: [0x498, 0x9b6]
Successors: [0x4c1]
---
0x4b3 JUMPDEST
0x4b4 DUP3
0x4b5 ADD
0x4b6 SWAP2
0x4b7 SWAP1
0x4b8 PUSH1 0x0
0x4ba MSTORE
0x4bb PUSH1 0x20
0x4bd PUSH1 0x0
0x4bf SHA3
0x4c0 SWAP1
---
0x4b3: JUMPDEST 
0x4b5: V441 = ADD S2 S0
0x4b8: V442 = 0x0
0x4ba: M[0x0] = {0x6, 0x7}
0x4bb: V443 = 0x20
0x4bd: V444 = 0x0
0x4bf: V445 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x128, S5, {0x6, 0x7}, S3, S2, {0x6, 0x7}, S0]
Stack pops: 3
Stack additions: [V441, V445, S2]
Exit stack: [V13, 0x128, S5, {0x6, 0x7}, S3, V441, V445, S2]

================================

Block 0x4c1
[0x4c1:0x4d4]
---
Predecessors: [0x4b3, 0x4c1]
Successors: [0x4c1, 0x4d5]
---
0x4c1 JUMPDEST
0x4c2 DUP2
0x4c3 SLOAD
0x4c4 DUP2
0x4c5 MSTORE
0x4c6 SWAP1
0x4c7 PUSH1 0x1
0x4c9 ADD
0x4ca SWAP1
0x4cb PUSH1 0x20
0x4cd ADD
0x4ce DUP1
0x4cf DUP4
0x4d0 GT
0x4d1 PUSH2 0x4c1
0x4d4 JUMPI
---
0x4c1: JUMPDEST 
0x4c3: V446 = S[S1]
0x4c5: M[S0] = V446
0x4c7: V447 = 0x1
0x4c9: V448 = ADD 0x1 S1
0x4cb: V449 = 0x20
0x4cd: V450 = ADD 0x20 S0
0x4d0: V451 = GT V441 V450
0x4d1: V452 = 0x4c1
0x4d4: JUMPI 0x4c1 V451
---
Entry stack: [V13, 0x128, S5, {0x6, 0x7}, S3, V441, S1, S0]
Stack pops: 3
Stack additions: [S2, V448, V450]
Exit stack: [V13, 0x128, S5, {0x6, 0x7}, S3, V441, V448, V450]

================================

Block 0x4d5
[0x4d5:0x4dd]
---
Predecessors: [0x4c1]
Successors: [0x4de]
---
0x4d5 DUP3
0x4d6 SWAP1
0x4d7 SUB
0x4d8 PUSH1 0x1f
0x4da AND
0x4db DUP3
0x4dc ADD
0x4dd SWAP2
---
0x4d7: V453 = SUB V450 V441
0x4d8: V454 = 0x1f
0x4da: V455 = AND 0x1f V453
0x4dc: V456 = ADD V441 V455
---
Entry stack: [V13, 0x128, S5, {0x6, 0x7}, S3, V441, V448, V450]
Stack pops: 3
Stack additions: [V456, S1, S2]
Exit stack: [V13, 0x128, S5, {0x6, 0x7}, S3, V456, V448, V441]

================================

Block 0x4de
[0x4de:0x4e5]
---
Predecessors: [0x458, 0x4a0, 0x4d5, 0x976, 0x9be]
Successors: [0x128]
---
0x4de JUMPDEST
0x4df POP
0x4e0 POP
0x4e1 POP
0x4e2 POP
0x4e3 POP
0x4e4 DUP2
0x4e5 JUMP
---
0x4de: JUMPDEST 
0x4e5: JUMP 0x128
---
Entry stack: [V13, 0x128, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V13, 0x128, S5]

================================

Block 0x4e6
[0x4e6:0x4f4]
---
Predecessors: [0x1a9]
Successors: [0x1b2]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x9
0x4e9 SLOAD
0x4ea PUSH1 0x1
0x4ec PUSH1 0xa0
0x4ee PUSH1 0x2
0x4f0 EXP
0x4f1 SUB
0x4f2 AND
0x4f3 DUP2
0x4f4 JUMP
---
0x4e6: JUMPDEST 
0x4e7: V457 = 0x9
0x4e9: V458 = S[0x9]
0x4ea: V459 = 0x1
0x4ec: V460 = 0xa0
0x4ee: V461 = 0x2
0x4f0: V462 = EXP 0x2 0xa0
0x4f1: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f2: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x4f4: JUMP 0x1b2
---
Entry stack: [V13, 0x1b2]
Stack pops: 1
Stack additions: [S0, V464]
Exit stack: [V13, 0x1b2, V464]

================================

Block 0x4f5
[0x4f5:0x4fa]
---
Predecessors: [0x1da]
Successors: [0x1e3]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x1
0x4f8 SLOAD
0x4f9 SWAP1
0x4fa JUMP
---
0x4f5: JUMPDEST 
0x4f6: V465 = 0x1
0x4f8: V466 = S[0x1]
0x4fa: JUMP 0x1e3
---
Entry stack: [V13, 0x1e3]
Stack pops: 1
Stack additions: [V466]
Exit stack: [V13, V466]

================================

Block 0x4fb
[0x4fb:0x506]
---
Predecessors: [0x201]
Successors: [0x832]
---
0x4fb JUMPDEST
0x4fc PUSH1 0x0
0x4fe DUP6
0x4ff PUSH2 0x507
0x502 CALLER
0x503 PUSH2 0x832
0x506 JUMP
---
0x4fb: JUMPDEST 
0x4fc: V467 = 0x0
0x4ff: V468 = 0x507
0x502: V469 = CALLER
0x503: V470 = 0x832
0x506: JUMP 0x832
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, S4, 0x507, V469]
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0, V161, 0x507, V469]

================================

Block 0x507
[0x507:0x50d]
---
Predecessors: [0x832]
Successors: [0x50e, 0x512]
---
0x507 JUMPDEST
0x508 LT
0x509 ISZERO
0x50a PUSH2 0x512
0x50d JUMPI
---
0x507: JUMPDEST 
0x508: V471 = LT V766 S1
0x509: V472 = ISZERO V471
0x50a: V473 = 0x512
0x50d: JUMPI 0x512 V472
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0, S1, V766]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]

================================

Block 0x50e
[0x50e:0x511]
---
Predecessors: [0x507]
Successors: []
---
0x50e PUSH1 0x0
0x510 DUP1
0x511 REVERT
---
0x50e: V474 = 0x0
0x511: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]

================================

Block 0x512
[0x512:0x529]
---
Predecessors: [0x507]
Successors: [0x52a, 0x5a2]
---
0x512 JUMPDEST
0x513 CALLER
0x514 PUSH1 0x0
0x516 SWAP1
0x517 DUP2
0x518 MSTORE
0x519 PUSH1 0xa
0x51b PUSH1 0x20
0x51d MSTORE
0x51e PUSH1 0x40
0x520 SWAP1
0x521 SHA3
0x522 SLOAD
0x523 TIMESTAMP
0x524 GT
0x525 ISZERO
0x526 PUSH2 0x5a2
0x529 JUMPI
---
0x512: JUMPDEST 
0x513: V475 = CALLER
0x514: V476 = 0x0
0x518: M[0x0] = V475
0x519: V477 = 0xa
0x51b: V478 = 0x20
0x51d: M[0x20] = 0xa
0x51e: V479 = 0x40
0x521: V480 = SHA3 0x0 0x40
0x522: V481 = S[V480]
0x523: V482 = TIMESTAMP
0x524: V483 = GT V482 V481
0x525: V484 = ISZERO V483
0x526: V485 = 0x5a2
0x529: JUMPI 0x5a2 V484
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]

================================

Block 0x52a
[0x52a:0x548]
---
Predecessors: [0x512]
Successors: [0xe7c]
---
0x52a CALLER
0x52b PUSH1 0x0
0x52d SWAP1
0x52e DUP2
0x52f MSTORE
0x530 PUSH1 0xb
0x532 PUSH1 0x20
0x534 MSTORE
0x535 PUSH1 0x40
0x537 SWAP1
0x538 SHA3
0x539 SLOAD
0x53a PUSH2 0x549
0x53d SWAP1
0x53e DUP8
0x53f PUSH4 0xffffffff
0x544 PUSH2 0xe7c
0x547 AND
0x548 JUMP
---
0x52a: V486 = CALLER
0x52b: V487 = 0x0
0x52f: M[0x0] = V486
0x530: V488 = 0xb
0x532: V489 = 0x20
0x534: M[0x20] = 0xb
0x535: V490 = 0x40
0x538: V491 = SHA3 0x0 0x40
0x539: V492 = S[V491]
0x53a: V493 = 0x549
0x53f: V494 = 0xffffffff
0x544: V495 = 0xe7c
0x547: V496 = AND 0xe7c 0xffffffff
0x548: JUMP 0xe7c
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x549, V492, S5]
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0, 0x549, V492, V161]

================================

Block 0x549
[0x549:0x56b]
---
Predecessors: [0xe88]
Successors: [0xe7c]
---
0x549 JUMPDEST
0x54a CALLER
0x54b PUSH1 0x0
0x54d SWAP1
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0xb
0x552 PUSH1 0x20
0x554 MSTORE
0x555 PUSH1 0x40
0x557 SWAP1
0x558 SHA3
0x559 SSTORE
0x55a PUSH1 0x1
0x55c SLOAD
0x55d PUSH2 0x56c
0x560 SWAP1
0x561 CALLVALUE
0x562 PUSH4 0xffffffff
0x567 PUSH2 0xe7c
0x56a AND
0x56b JUMP
---
0x549: JUMPDEST 
0x54a: V497 = CALLER
0x54b: V498 = 0x0
0x54f: M[0x0] = V497
0x550: V499 = 0xb
0x552: V500 = 0x20
0x554: M[0x20] = 0xb
0x555: V501 = 0x40
0x558: V502 = SHA3 0x0 0x40
0x559: S[V502] = V1316
0x55a: V503 = 0x1
0x55c: V504 = S[0x1]
0x55d: V505 = 0x56c
0x561: V506 = CALLVALUE
0x562: V507 = 0xffffffff
0x567: V508 = 0xe7c
0x56a: V509 = AND 0xe7c 0xffffffff
0x56b: JUMP 0xe7c
---
Entry stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V1316]
Stack pops: 1
Stack additions: [0x56c, V504, V506]
Exit stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, 0x56c, V504, V506]

================================

Block 0x56c
[0x56c:0x592]
---
Predecessors: [0xe88]
Successors: [0x593, 0x59c]
---
0x56c JUMPDEST
0x56d PUSH1 0x1
0x56f SSTORE
0x570 PUSH1 0x40
0x572 MLOAD
0x573 CALLER
0x574 SWAP1
0x575 DUP8
0x576 ISZERO
0x577 PUSH2 0x8fc
0x57a MUL
0x57b SWAP1
0x57c DUP9
0x57d SWAP1
0x57e PUSH1 0x0
0x580 DUP2
0x581 DUP2
0x582 DUP2
0x583 DUP6
0x584 DUP9
0x585 DUP9
0x586 CALL
0x587 SWAP4
0x588 POP
0x589 POP
0x58a POP
0x58b POP
0x58c ISZERO
0x58d DUP1
0x58e ISZERO
0x58f PUSH2 0x59c
0x592 JUMPI
---
0x56c: JUMPDEST 
0x56d: V510 = 0x1
0x56f: S[0x1] = V1316
0x570: V511 = 0x40
0x572: V512 = M[0x40]
0x573: V513 = CALLER
0x576: V514 = ISZERO V161
0x577: V515 = 0x8fc
0x57a: V516 = MUL 0x8fc V514
0x57e: V517 = 0x0
0x586: V518 = CALL V516 V513 V161 V512 0x0 V512 0x0
0x58c: V519 = ISZERO V518
0x58e: V520 = ISZERO V519
0x58f: V521 = 0x59c
0x592: JUMPI 0x59c V520
---
Entry stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V1316]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V519]
Exit stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V519]

================================

Block 0x593
[0x593:0x59b]
---
Predecessors: [0x56c]
Successors: []
---
0x593 RETURNDATASIZE
0x594 PUSH1 0x0
0x596 DUP1
0x597 RETURNDATACOPY
0x598 RETURNDATASIZE
0x599 PUSH1 0x0
0x59b REVERT
---
0x593: V522 = RETURNDATASIZE
0x594: V523 = 0x0
0x597: RETURNDATACOPY 0x0 0x0 V522
0x598: V524 = RETURNDATASIZE
0x599: V525 = 0x0
0x59b: REVERT 0x0 V524
---
Entry stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V519]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V519]

================================

Block 0x59c
[0x59c:0x5a1]
---
Predecessors: [0x56c]
Successors: [0x678]
---
0x59c JUMPDEST
0x59d POP
0x59e PUSH2 0x678
0x5a1 JUMP
---
0x59c: JUMPDEST 
0x59e: V526 = 0x678
0x5a1: JUMP 0x678
---
Entry stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V519]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1]

================================

Block 0x5a2
[0x5a2:0x5a9]
---
Predecessors: [0x512]
Successors: [0x5aa, 0x5ae]
---
0x5a2 JUMPDEST
0x5a3 NUMBER
0x5a4 DUP3
0x5a5 GT
0x5a6 PUSH2 0x5ae
0x5a9 JUMPI
---
0x5a2: JUMPDEST 
0x5a3: V527 = NUMBER
0x5a5: V528 = GT V171 V527
0x5a6: V529 = 0x5ae
0x5a9: JUMPI 0x5ae V528
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]

================================

Block 0x5aa
[0x5aa:0x5ad]
---
Predecessors: [0x5a2]
Successors: []
---
0x5aa PUSH1 0x0
0x5ac DUP1
0x5ad REVERT
---
0x5aa: V530 = 0x0
0x5ad: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]

================================

Block 0x5ae
[0x5ae:0x5e9]
---
Predecessors: [0x5a2]
Successors: [0x8a4]
---
0x5ae JUMPDEST
0x5af PUSH1 0x40
0x5b1 DUP1
0x5b2 MLOAD
0x5b3 PUSH13 0x1000000000000000000000000
0x5c1 CALLER
0x5c2 DUP2
0x5c3 MUL
0x5c4 DUP3
0x5c5 MSTORE
0x5c6 ADDRESS
0x5c7 MUL
0x5c8 PUSH1 0x14
0x5ca DUP3
0x5cb ADD
0x5cc MSTORE
0x5cd PUSH1 0x28
0x5cf DUP2
0x5d0 ADD
0x5d1 DUP5
0x5d2 SWAP1
0x5d3 MSTORE
0x5d4 SWAP1
0x5d5 MLOAD
0x5d6 SWAP1
0x5d7 DUP2
0x5d8 SWAP1
0x5d9 SUB
0x5da PUSH1 0x48
0x5dc ADD
0x5dd SWAP1
0x5de SHA3
0x5df PUSH2 0x5ea
0x5e2 SWAP1
0x5e3 DUP7
0x5e4 DUP7
0x5e5 DUP7
0x5e6 PUSH2 0x8a4
0x5e9 JUMP
---
0x5ae: JUMPDEST 
0x5af: V531 = 0x40
0x5b2: V532 = M[0x40]
0x5b3: V533 = 0x1000000000000000000000000
0x5c1: V534 = CALLER
0x5c3: V535 = MUL 0x1000000000000000000000000 V534
0x5c5: M[V532] = V535
0x5c6: V536 = ADDRESS
0x5c7: V537 = MUL V536 0x1000000000000000000000000
0x5c8: V538 = 0x14
0x5cb: V539 = ADD V532 0x14
0x5cc: M[V539] = V537
0x5cd: V540 = 0x28
0x5d0: V541 = ADD V532 0x28
0x5d3: M[V541] = V171
0x5d5: V542 = M[0x40]
0x5d9: V543 = SUB V532 V542
0x5da: V544 = 0x48
0x5dc: V545 = ADD 0x48 V543
0x5de: V546 = SHA3 V542 V545
0x5df: V547 = 0x5ea
0x5e6: V548 = 0x8a4
0x5e9: JUMP 0x8a4
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x5ea, V546, S4, S3, S2]
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0, 0x5ea, V546, V165, V167, V169]

================================

Block 0x5ea
[0x5ea:0x5f0]
---
Predecessors: [0x937]
Successors: [0x5f1, 0x5f5]
---
0x5ea JUMPDEST
0x5eb ISZERO
0x5ec ISZERO
0x5ed PUSH2 0x5f5
0x5f0 JUMPI
---
0x5ea: JUMPDEST 
0x5eb: V549 = ISZERO V854
0x5ec: V550 = ISZERO V549
0x5ed: V551 = 0x5f5
0x5f0: JUMPI 0x5f5 V550
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, S1, V854]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, S1]

================================

Block 0x5f1
[0x5f1:0x5f4]
---
Predecessors: [0x5ea]
Successors: []
---
0x5f1 PUSH1 0x0
0x5f3 DUP1
0x5f4 REVERT
---
0x5f1: V552 = 0x0
0x5f4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, S0]

================================

Block 0x5f5
[0x5f5:0x614]
---
Predecessors: [0x5ea]
Successors: [0xe7c]
---
0x5f5 JUMPDEST
0x5f6 CALLER
0x5f7 PUSH1 0x0
0x5f9 SWAP1
0x5fa DUP2
0x5fb MSTORE
0x5fc PUSH1 0xb
0x5fe PUSH1 0x20
0x600 MSTORE
0x601 PUSH1 0x40
0x603 SWAP1
0x604 SHA3
0x605 SLOAD
0x606 PUSH2 0x615
0x609 SWAP1
0x60a DUP8
0x60b PUSH4 0xffffffff
0x610 PUSH2 0xe7c
0x613 AND
0x614 JUMP
---
0x5f5: JUMPDEST 
0x5f6: V553 = CALLER
0x5f7: V554 = 0x0
0x5fb: M[0x0] = V553
0x5fc: V555 = 0xb
0x5fe: V556 = 0x20
0x600: M[0x20] = 0xb
0x601: V557 = 0x40
0x604: V558 = SHA3 0x0 0x40
0x605: V559 = S[V558]
0x606: V560 = 0x615
0x60b: V561 = 0xffffffff
0x610: V562 = 0xe7c
0x613: V563 = AND 0xe7c 0xffffffff
0x614: JUMP 0xe7c
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x615, V559, S5]
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, S0, 0x615, V559, V161]

================================

Block 0x615
[0x615:0x637]
---
Predecessors: [0xe88]
Successors: [0xe7c]
---
0x615 JUMPDEST
0x616 CALLER
0x617 PUSH1 0x0
0x619 SWAP1
0x61a DUP2
0x61b MSTORE
0x61c PUSH1 0xb
0x61e PUSH1 0x20
0x620 MSTORE
0x621 PUSH1 0x40
0x623 SWAP1
0x624 SHA3
0x625 SSTORE
0x626 PUSH1 0x1
0x628 SLOAD
0x629 PUSH2 0x638
0x62c SWAP1
0x62d CALLVALUE
0x62e PUSH4 0xffffffff
0x633 PUSH2 0xe7c
0x636 AND
0x637 JUMP
---
0x615: JUMPDEST 
0x616: V564 = CALLER
0x617: V565 = 0x0
0x61b: M[0x0] = V564
0x61c: V566 = 0xb
0x61e: V567 = 0x20
0x620: M[0x20] = 0xb
0x621: V568 = 0x40
0x624: V569 = SHA3 0x0 0x40
0x625: S[V569] = V1316
0x626: V570 = 0x1
0x628: V571 = S[0x1]
0x629: V572 = 0x638
0x62d: V573 = CALLVALUE
0x62e: V574 = 0xffffffff
0x633: V575 = 0xe7c
0x636: V576 = AND 0xe7c 0xffffffff
0x637: JUMP 0xe7c
---
Entry stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V1316]
Stack pops: 1
Stack additions: [0x638, V571, V573]
Exit stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, 0x638, V571, V573]

================================

Block 0x638
[0x638:0x66c]
---
Predecessors: [0xe88]
Successors: [0x66d, 0x676]
---
0x638 JUMPDEST
0x639 PUSH1 0x1
0x63b SSTORE
0x63c CALLER
0x63d PUSH1 0x0
0x63f DUP2
0x640 DUP2
0x641 MSTORE
0x642 PUSH1 0xa
0x644 PUSH1 0x20
0x646 MSTORE
0x647 PUSH1 0x40
0x649 DUP1
0x64a DUP3
0x64b SHA3
0x64c DUP3
0x64d SWAP1
0x64e SSTORE
0x64f MLOAD
0x650 DUP9
0x651 ISZERO
0x652 PUSH2 0x8fc
0x655 MUL
0x656 SWAP2
0x657 DUP10
0x658 SWAP2
0x659 SWAP1
0x65a DUP2
0x65b DUP2
0x65c DUP2
0x65d DUP6
0x65e DUP9
0x65f DUP9
0x660 CALL
0x661 SWAP4
0x662 POP
0x663 POP
0x664 POP
0x665 POP
0x666 ISZERO
0x667 DUP1
0x668 ISZERO
0x669 PUSH2 0x676
0x66c JUMPI
---
0x638: JUMPDEST 
0x639: V577 = 0x1
0x63b: S[0x1] = V1316
0x63c: V578 = CALLER
0x63d: V579 = 0x0
0x641: M[0x0] = V578
0x642: V580 = 0xa
0x644: V581 = 0x20
0x646: M[0x20] = 0xa
0x647: V582 = 0x40
0x64b: V583 = SHA3 0x0 0x40
0x64e: S[V583] = 0x0
0x64f: V584 = M[0x40]
0x651: V585 = ISZERO V161
0x652: V586 = 0x8fc
0x655: V587 = MUL 0x8fc V585
0x660: V588 = CALL V587 V578 V161 V584 0x0 V584 0x0
0x666: V589 = ISZERO V588
0x668: V590 = ISZERO V589
0x669: V591 = 0x676
0x66c: JUMPI 0x676 V590
---
Entry stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V1316]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V589]
Exit stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V589]

================================

Block 0x66d
[0x66d:0x675]
---
Predecessors: [0x638]
Successors: []
---
0x66d RETURNDATASIZE
0x66e PUSH1 0x0
0x670 DUP1
0x671 RETURNDATACOPY
0x672 RETURNDATASIZE
0x673 PUSH1 0x0
0x675 REVERT
---
0x66d: V592 = RETURNDATASIZE
0x66e: V593 = 0x0
0x671: RETURNDATACOPY 0x0 0x0 V592
0x672: V594 = RETURNDATASIZE
0x673: V595 = 0x0
0x675: REVERT 0x0 V594
---
Entry stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V589]

================================

Block 0x676
[0x676:0x677]
---
Predecessors: [0x638]
Successors: [0x678]
---
0x676 JUMPDEST
0x677 POP
---
0x676: JUMPDEST 
---
Entry stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V589]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1]

================================

Block 0x678
[0x678:0x683]
---
Predecessors: [0x59c, 0x676]
Successors: [0x21c]
---
0x678 JUMPDEST
0x679 POP
0x67a PUSH1 0x1
0x67c SWAP6
0x67d SWAP5
0x67e POP
0x67f POP
0x680 POP
0x681 POP
0x682 POP
0x683 JUMP
---
0x678: JUMPDEST 
0x67a: V596 = 0x1
0x683: JUMP 0x21c
---
Entry stack: [V13, 0x21c, V161, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x684
[0x684:0x6a5]
---
Predecessors: [0x23c]
Successors: [0x6a6, 0x6c3]
---
0x684 JUMPDEST
0x685 PUSH1 0x1
0x687 PUSH1 0xa0
0x689 PUSH1 0x2
0x68b EXP
0x68c SUB
0x68d DUP3
0x68e AND
0x68f PUSH1 0x0
0x691 SWAP1
0x692 DUP2
0x693 MSTORE
0x694 PUSH1 0x5
0x696 PUSH1 0x20
0x698 MSTORE
0x699 PUSH1 0x40
0x69b SWAP1
0x69c SHA3
0x69d SLOAD
0x69e PUSH1 0xff
0x6a0 AND
0x6a1 DUP1
0x6a2 PUSH2 0x6c3
0x6a5 JUMPI
---
0x684: JUMPDEST 
0x685: V597 = 0x1
0x687: V598 = 0xa0
0x689: V599 = 0x2
0x68b: V600 = EXP 0x2 0xa0
0x68c: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68e: V602 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x68f: V603 = 0x0
0x693: M[0x0] = V602
0x694: V604 = 0x5
0x696: V605 = 0x20
0x698: M[0x20] = 0x5
0x699: V606 = 0x40
0x69c: V607 = SHA3 0x0 0x40
0x69d: V608 = S[V607]
0x69e: V609 = 0xff
0x6a0: V610 = AND 0xff V608
0x6a2: V611 = 0x6c3
0x6a5: JUMPI 0x6c3 V610
---
Entry stack: [V13, 0x25a, V193, V196, V198]
Stack pops: 2
Stack additions: [S1, S0, V610]
Exit stack: [V13, 0x25a, V193, V196, V198, V610]

================================

Block 0x6a6
[0x6a6:0x6c2]
---
Predecessors: [0x684]
Successors: [0x6c3]
---
0x6a6 POP
0x6a7 PUSH1 0x1
0x6a9 PUSH1 0xa0
0x6ab PUSH1 0x2
0x6ad EXP
0x6ae SUB
0x6af DUP4
0x6b0 AND
0x6b1 PUSH1 0x0
0x6b3 SWAP1
0x6b4 DUP2
0x6b5 MSTORE
0x6b6 PUSH1 0x5
0x6b8 PUSH1 0x20
0x6ba MSTORE
0x6bb PUSH1 0x40
0x6bd SWAP1
0x6be SHA3
0x6bf SLOAD
0x6c0 PUSH1 0xff
0x6c2 AND
---
0x6a7: V612 = 0x1
0x6a9: V613 = 0xa0
0x6ab: V614 = 0x2
0x6ad: V615 = EXP 0x2 0xa0
0x6ae: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b0: V617 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V618 = 0x0
0x6b5: M[0x0] = V617
0x6b6: V619 = 0x5
0x6b8: V620 = 0x20
0x6ba: M[0x20] = 0x5
0x6bb: V621 = 0x40
0x6be: V622 = SHA3 0x0 0x40
0x6bf: V623 = S[V622]
0x6c0: V624 = 0xff
0x6c2: V625 = AND 0xff V623
---
Entry stack: [V13, 0x25a, V193, V196, V198, V610]
Stack pops: 4
Stack additions: [S3, S2, S1, V625]
Exit stack: [V13, 0x25a, V193, V196, V198, V625]

================================

Block 0x6c3
[0x6c3:0x6c9]
---
Predecessors: [0x684, 0x6a6]
Successors: [0x6ca, 0x6ce]
---
0x6c3 JUMPDEST
0x6c4 ISZERO
0x6c5 ISZERO
0x6c6 PUSH2 0x6ce
0x6c9 JUMPI
---
0x6c3: JUMPDEST 
0x6c4: V626 = ISZERO S0
0x6c5: V627 = ISZERO V626
0x6c6: V628 = 0x6ce
0x6c9: JUMPI 0x6ce V627
---
Entry stack: [V13, 0x25a, V193, V196, V198, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x25a, V193, V196, V198]

================================

Block 0x6ca
[0x6ca:0x6cd]
---
Predecessors: [0x6c3]
Successors: []
---
0x6ca PUSH1 0x0
0x6cc DUP1
0x6cd REVERT
---
0x6ca: V629 = 0x0
0x6cd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x25a, V193, V196, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x25a, V193, V196, V198]

================================

Block 0x6ce
[0x6ce:0x6e1]
---
Predecessors: [0x6c3]
Successors: [0x6e2, 0x6f1]
---
0x6ce JUMPDEST
0x6cf PUSH1 0x3
0x6d1 SLOAD
0x6d2 PUSH1 0x1
0x6d4 PUSH1 0xa0
0x6d6 PUSH1 0x2
0x6d8 EXP
0x6d9 SUB
0x6da AND
0x6db CALLER
0x6dc EQ
0x6dd DUP1
0x6de PUSH2 0x6f1
0x6e1 JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V630 = 0x3
0x6d1: V631 = S[0x3]
0x6d2: V632 = 0x1
0x6d4: V633 = 0xa0
0x6d6: V634 = 0x2
0x6d8: V635 = EXP 0x2 0xa0
0x6d9: V636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6da: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x6db: V638 = CALLER
0x6dc: V639 = EQ V638 V637
0x6de: V640 = 0x6f1
0x6e1: JUMPI 0x6f1 V639
---
Entry stack: [V13, 0x25a, V193, V196, V198]
Stack pops: 0
Stack additions: [V639]
Exit stack: [V13, 0x25a, V193, V196, V198, V639]

================================

Block 0x6e2
[0x6e2:0x6f0]
---
Predecessors: [0x6ce]
Successors: [0x6f1]
---
0x6e2 POP
0x6e3 PUSH1 0x4
0x6e5 SLOAD
0x6e6 PUSH1 0x1
0x6e8 PUSH1 0xa0
0x6ea PUSH1 0x2
0x6ec EXP
0x6ed SUB
0x6ee AND
0x6ef CALLER
0x6f0 EQ
---
0x6e3: V641 = 0x4
0x6e5: V642 = S[0x4]
0x6e6: V643 = 0x1
0x6e8: V644 = 0xa0
0x6ea: V645 = 0x2
0x6ec: V646 = EXP 0x2 0xa0
0x6ed: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ee: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0x6ef: V649 = CALLER
0x6f0: V650 = EQ V649 V648
---
Entry stack: [V13, 0x25a, V193, V196, V198, V639]
Stack pops: 1
Stack additions: [V650]
Exit stack: [V13, 0x25a, V193, V196, V198, V650]

================================

Block 0x6f1
[0x6f1:0x6f7]
---
Predecessors: [0x6ce, 0x6e2]
Successors: [0x6f8, 0x6f9]
---
0x6f1 JUMPDEST
0x6f2 ISZERO
0x6f3 ISZERO
0x6f4 PUSH2 0x6f9
0x6f7 JUMPI
---
0x6f1: JUMPDEST 
0x6f2: V651 = ISZERO S0
0x6f3: V652 = ISZERO V651
0x6f4: V653 = 0x6f9
0x6f7: JUMPI 0x6f9 V652
---
Entry stack: [V13, 0x25a, V193, V196, V198, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x25a, V193, V196, V198]

================================

Block 0x6f8
[0x6f8:0x6f8]
---
Predecessors: [0x6f1]
Successors: []
---
0x6f8 INVALID
---
0x6f8: INVALID 
---
Entry stack: [V13, 0x25a, V193, V196, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x25a, V193, V196, V198]

================================

Block 0x6f9
[0x6f9:0x721]
---
Predecessors: [0x6f1]
Successors: [0xe8e]
---
0x6f9 JUMPDEST
0x6fa PUSH1 0x1
0x6fc PUSH1 0xa0
0x6fe PUSH1 0x2
0x700 EXP
0x701 SUB
0x702 DUP3
0x703 AND
0x704 PUSH1 0x0
0x706 SWAP1
0x707 DUP2
0x708 MSTORE
0x709 PUSH1 0xb
0x70b PUSH1 0x20
0x70d MSTORE
0x70e PUSH1 0x40
0x710 SWAP1
0x711 SHA3
0x712 SLOAD
0x713 PUSH2 0x722
0x716 SWAP1
0x717 DUP3
0x718 PUSH4 0xffffffff
0x71d PUSH2 0xe8e
0x720 AND
0x721 JUMP
---
0x6f9: JUMPDEST 
0x6fa: V654 = 0x1
0x6fc: V655 = 0xa0
0x6fe: V656 = 0x2
0x700: V657 = EXP 0x2 0xa0
0x701: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x703: V659 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x704: V660 = 0x0
0x708: M[0x0] = V659
0x709: V661 = 0xb
0x70b: V662 = 0x20
0x70d: M[0x20] = 0xb
0x70e: V663 = 0x40
0x711: V664 = SHA3 0x0 0x40
0x712: V665 = S[V664]
0x713: V666 = 0x722
0x718: V667 = 0xffffffff
0x71d: V668 = 0xe8e
0x720: V669 = AND 0xe8e 0xffffffff
0x721: JUMP 0xe8e
---
Entry stack: [V13, 0x25a, V193, V196, V198]
Stack pops: 2
Stack additions: [S1, S0, 0x722, V665, S0]
Exit stack: [V13, 0x25a, V193, V196, V198, 0x722, V665, V198]

================================

Block 0x722
[0x722:0x74d]
---
Predecessors: [0xe9d]
Successors: [0x74e, 0x757]
---
0x722 JUMPDEST
0x723 PUSH1 0x1
0x725 PUSH1 0xa0
0x727 PUSH1 0x2
0x729 EXP
0x72a SUB
0x72b DUP4
0x72c AND
0x72d PUSH1 0x0
0x72f SWAP1
0x730 DUP2
0x731 MSTORE
0x732 PUSH1 0xb
0x734 PUSH1 0x20
0x736 SWAP1
0x737 DUP2
0x738 MSTORE
0x739 PUSH1 0x40
0x73b DUP1
0x73c DUP4
0x73d SHA3
0x73e SWAP4
0x73f SWAP1
0x740 SWAP4
0x741 SSTORE
0x742 PUSH1 0xa
0x744 SWAP1
0x745 MSTORE
0x746 SHA3
0x747 SLOAD
0x748 TIMESTAMP
0x749 LT
0x74a PUSH2 0x757
0x74d JUMPI
---
0x722: JUMPDEST 
0x723: V670 = 0x1
0x725: V671 = 0xa0
0x727: V672 = 0x2
0x729: V673 = EXP 0x2 0xa0
0x72a: V674 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72c: V675 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x72d: V676 = 0x0
0x731: M[0x0] = V675
0x732: V677 = 0xb
0x734: V678 = 0x20
0x738: M[0x20] = 0xb
0x739: V679 = 0x40
0x73d: V680 = SHA3 0x0 0x40
0x741: S[V680] = S0
0x742: V681 = 0xa
0x745: M[0x20] = 0xa
0x746: V682 = SHA3 0x0 0x40
0x747: V683 = S[V682]
0x748: V684 = TIMESTAMP
0x749: V685 = LT V684 V683
0x74a: V686 = 0x757
0x74d: JUMPI 0x757 V685
---
Entry stack: [V13, {0x21c, 0x25a}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V13, {0x21c, 0x25a}, S3, S2, S1]

================================

Block 0x74e
[0x74e:0x756]
---
Predecessors: [0x722]
Successors: [0x771]
---
0x74e TIMESTAMP
0x74f PUSH2 0xe10
0x752 ADD
0x753 PUSH2 0x771
0x756 JUMP
---
0x74e: V687 = TIMESTAMP
0x74f: V688 = 0xe10
0x752: V689 = ADD 0xe10 V687
0x753: V690 = 0x771
0x756: JUMP 0x771
---
Entry stack: [V13, {0x21c, 0x25a}, S2, S1, S0]
Stack pops: 0
Stack additions: [V689]
Exit stack: [V13, {0x21c, 0x25a}, S2, S1, S0, V689]

================================

Block 0x757
[0x757:0x770]
---
Predecessors: [0x722]
Successors: [0x771]
---
0x757 JUMPDEST
0x758 PUSH1 0x1
0x75a PUSH1 0xa0
0x75c PUSH1 0x2
0x75e EXP
0x75f SUB
0x760 DUP3
0x761 AND
0x762 PUSH1 0x0
0x764 SWAP1
0x765 DUP2
0x766 MSTORE
0x767 PUSH1 0xa
0x769 PUSH1 0x20
0x76b MSTORE
0x76c PUSH1 0x40
0x76e SWAP1
0x76f SHA3
0x770 SLOAD
---
0x757: JUMPDEST 
0x758: V691 = 0x1
0x75a: V692 = 0xa0
0x75c: V693 = 0x2
0x75e: V694 = EXP 0x2 0xa0
0x75f: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x761: V696 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x762: V697 = 0x0
0x766: M[0x0] = V696
0x767: V698 = 0xa
0x769: V699 = 0x20
0x76b: M[0x20] = 0xa
0x76c: V700 = 0x40
0x76f: V701 = SHA3 0x0 0x40
0x770: V702 = S[V701]
---
Entry stack: [V13, {0x21c, 0x25a}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V702]
Exit stack: [V13, {0x21c, 0x25a}, S2, S1, S0, V702]

================================

Block 0x771
[0x771:0x7ac]
---
Predecessors: [0x74e, 0x757]
Successors: [0xe7c]
---
0x771 JUMPDEST
0x772 PUSH1 0x1
0x774 PUSH1 0xa0
0x776 PUSH1 0x2
0x778 EXP
0x779 SUB
0x77a DUP1
0x77b DUP5
0x77c AND
0x77d PUSH1 0x0
0x77f SWAP1
0x780 DUP2
0x781 MSTORE
0x782 PUSH1 0xa
0x784 PUSH1 0x20
0x786 SWAP1
0x787 DUP2
0x788 MSTORE
0x789 PUSH1 0x40
0x78b DUP1
0x78c DUP4
0x78d SHA3
0x78e SWAP5
0x78f SWAP1
0x790 SWAP5
0x791 SSTORE
0x792 SWAP2
0x793 DUP7
0x794 AND
0x795 DUP2
0x796 MSTORE
0x797 PUSH1 0xb
0x799 SWAP1
0x79a SWAP2
0x79b MSTORE
0x79c SHA3
0x79d SLOAD
0x79e PUSH2 0x7ad
0x7a1 SWAP1
0x7a2 DUP3
0x7a3 PUSH4 0xffffffff
0x7a8 PUSH2 0xe7c
0x7ab AND
0x7ac JUMP
---
0x771: JUMPDEST 
0x772: V703 = 0x1
0x774: V704 = 0xa0
0x776: V705 = 0x2
0x778: V706 = EXP 0x2 0xa0
0x779: V707 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77c: V708 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x77d: V709 = 0x0
0x781: M[0x0] = V708
0x782: V710 = 0xa
0x784: V711 = 0x20
0x788: M[0x20] = 0xa
0x789: V712 = 0x40
0x78d: V713 = SHA3 0x0 0x40
0x791: S[V713] = S0
0x794: V714 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x796: M[0x0] = V714
0x797: V715 = 0xb
0x79b: M[0x20] = 0xb
0x79c: V716 = SHA3 0x0 0x40
0x79d: V717 = S[V716]
0x79e: V718 = 0x7ad
0x7a3: V719 = 0xffffffff
0x7a8: V720 = 0xe7c
0x7ab: V721 = AND 0xe7c 0xffffffff
0x7ac: JUMP 0xe7c
---
Entry stack: [V13, {0x21c, 0x25a}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x7ad, V717, S1]
Exit stack: [V13, {0x21c, 0x25a}, S3, S2, S1, 0x7ad, V717, S1]

================================

Block 0x7ad
[0x7ad:0x80a]
---
Predecessors: [0xe88]
Successors: [0x25a]
---
0x7ad JUMPDEST
0x7ae PUSH1 0x1
0x7b0 PUSH1 0xa0
0x7b2 PUSH1 0x2
0x7b4 EXP
0x7b5 SUB
0x7b6 DUP1
0x7b7 DUP6
0x7b8 AND
0x7b9 PUSH1 0x0
0x7bb DUP2
0x7bc DUP2
0x7bd MSTORE
0x7be PUSH1 0xb
0x7c0 PUSH1 0x20
0x7c2 SWAP1
0x7c3 DUP2
0x7c4 MSTORE
0x7c5 PUSH1 0x40
0x7c7 SWAP2
0x7c8 DUP3
0x7c9 SWAP1
0x7ca SHA3
0x7cb SWAP5
0x7cc SWAP1
0x7cd SWAP5
0x7ce SSTORE
0x7cf DUP1
0x7d0 MLOAD
0x7d1 DUP6
0x7d2 DUP2
0x7d3 MSTORE
0x7d4 SWAP1
0x7d5 MLOAD
0x7d6 SWAP3
0x7d7 DUP7
0x7d8 AND
0x7d9 SWAP4
0x7da SWAP2
0x7db SWAP3
0x7dc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7fd SWAP3
0x7fe SWAP2
0x7ff DUP2
0x800 SWAP1
0x801 SUB
0x802 SWAP1
0x803 SWAP2
0x804 ADD
0x805 SWAP1
0x806 LOG3
0x807 POP
0x808 POP
0x809 POP
0x80a JUMP
---
0x7ad: JUMPDEST 
0x7ae: V722 = 0x1
0x7b0: V723 = 0xa0
0x7b2: V724 = 0x2
0x7b4: V725 = EXP 0x2 0xa0
0x7b5: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b8: V727 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x7b9: V728 = 0x0
0x7bd: M[0x0] = V727
0x7be: V729 = 0xb
0x7c0: V730 = 0x20
0x7c4: M[0x20] = 0xb
0x7c5: V731 = 0x40
0x7ca: V732 = SHA3 0x0 0x40
0x7ce: S[V732] = V1316
0x7d0: V733 = M[0x40]
0x7d3: M[V733] = S1
0x7d5: V734 = M[0x40]
0x7d8: V735 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V736 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x801: V737 = SUB V733 V734
0x804: V738 = ADD 0x20 V737
0x806: LOG V734 V738 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V727 V735
0x80a: JUMP S4
---
Entry stack: [V13, 0x21c, V161, S5, S4, S3, S2, S1, V1316]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x21c, V161, S5]

================================

Block 0x80b
[0x80b:0x81c]
---
Predecessors: [0x268]
Successors: [0x1e3]
---
0x80b JUMPDEST
0x80c PUSH1 0xb
0x80e PUSH1 0x20
0x810 MSTORE
0x811 PUSH1 0x0
0x813 SWAP1
0x814 DUP2
0x815 MSTORE
0x816 PUSH1 0x40
0x818 SWAP1
0x819 SHA3
0x81a SLOAD
0x81b DUP2
0x81c JUMP
---
0x80b: JUMPDEST 
0x80c: V739 = 0xb
0x80e: V740 = 0x20
0x810: M[0x20] = 0xb
0x811: V741 = 0x0
0x815: M[0x0] = V212
0x816: V742 = 0x40
0x819: V743 = SHA3 0x0 0x40
0x81a: V744 = S[V743]
0x81c: JUMP 0x1e3
---
Entry stack: [V13, 0x1e3, V212]
Stack pops: 2
Stack additions: [S1, V744]
Exit stack: [V13, 0x1e3, V744]

================================

Block 0x81d
[0x81d:0x822]
---
Predecessors: [0x289]
Successors: [0x1e3]
---
0x81d JUMPDEST
0x81e PUSH1 0x8
0x820 SLOAD
0x821 DUP2
0x822 JUMP
---
0x81d: JUMPDEST 
0x81e: V745 = 0x8
0x820: V746 = S[0x8]
0x822: JUMP 0x1e3
---
Entry stack: [V13, 0x1e3]
Stack pops: 1
Stack additions: [S0, V746]
Exit stack: [V13, 0x1e3, V746]

================================

Block 0x823
[0x823:0x831]
---
Predecessors: [0x29e]
Successors: [0x1b2]
---
0x823 JUMPDEST
0x824 PUSH1 0x3
0x826 SLOAD
0x827 PUSH1 0x1
0x829 PUSH1 0xa0
0x82b PUSH1 0x2
0x82d EXP
0x82e SUB
0x82f AND
0x830 DUP2
0x831 JUMP
---
0x823: JUMPDEST 
0x824: V747 = 0x3
0x826: V748 = S[0x3]
0x827: V749 = 0x1
0x829: V750 = 0xa0
0x82b: V751 = 0x2
0x82d: V752 = EXP 0x2 0xa0
0x82e: V753 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82f: V754 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0x831: JUMP 0x1b2
---
Entry stack: [V13, 0x1b2]
Stack pops: 1
Stack additions: [S0, V754]
Exit stack: [V13, 0x1b2, V754]

================================

Block 0x832
[0x832:0x84c]
---
Predecessors: [0x2b3, 0x4fb]
Successors: [0x1e3, 0x507]
---
0x832 JUMPDEST
0x833 PUSH1 0x1
0x835 PUSH1 0xa0
0x837 PUSH1 0x2
0x839 EXP
0x83a SUB
0x83b AND
0x83c PUSH1 0x0
0x83e SWAP1
0x83f DUP2
0x840 MSTORE
0x841 PUSH1 0xb
0x843 PUSH1 0x20
0x845 MSTORE
0x846 PUSH1 0x40
0x848 SWAP1
0x849 SHA3
0x84a SLOAD
0x84b SWAP1
0x84c JUMP
---
0x832: JUMPDEST 
0x833: V755 = 0x1
0x835: V756 = 0xa0
0x837: V757 = 0x2
0x839: V758 = EXP 0x2 0xa0
0x83a: V759 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83b: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x83c: V761 = 0x0
0x840: M[0x0] = V760
0x841: V762 = 0xb
0x843: V763 = 0x20
0x845: M[0x20] = 0xb
0x846: V764 = 0x40
0x849: V765 = SHA3 0x0 0x40
0x84a: V766 = S[V765]
0x84c: JUMP {0x1e3, 0x507}
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0, S2, {0x1e3, 0x507}, S0]
Stack pops: 2
Stack additions: [V766]
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, 0x0, S2, V766]

================================

Block 0x84d
[0x84d:0x88e]
---
Predecessors: [0x2d4]
Successors: [0x1e3]
---
0x84d JUMPDEST
0x84e PUSH1 0x40
0x850 DUP1
0x851 MLOAD
0x852 PUSH13 0x1000000000000000000000000
0x860 PUSH1 0x1
0x862 PUSH1 0xa0
0x864 PUSH1 0x2
0x866 EXP
0x867 SUB
0x868 DUP1
0x869 DUP8
0x86a AND
0x86b DUP3
0x86c MUL
0x86d DUP4
0x86e MSTORE
0x86f DUP6
0x870 AND
0x871 MUL
0x872 PUSH1 0x14
0x874 DUP3
0x875 ADD
0x876 MSTORE
0x877 PUSH1 0x28
0x879 DUP2
0x87a ADD
0x87b DUP4
0x87c SWAP1
0x87d MSTORE
0x87e SWAP1
0x87f MLOAD
0x880 SWAP1
0x881 DUP2
0x882 SWAP1
0x883 SUB
0x884 PUSH1 0x48
0x886 ADD
0x887 SWAP1
0x888 SHA3
0x889 SWAP4
0x88a SWAP3
0x88b POP
0x88c POP
0x88d POP
0x88e JUMP
---
0x84d: JUMPDEST 
0x84e: V767 = 0x40
0x851: V768 = M[0x40]
0x852: V769 = 0x1000000000000000000000000
0x860: V770 = 0x1
0x862: V771 = 0xa0
0x864: V772 = 0x2
0x866: V773 = EXP 0x2 0xa0
0x867: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86a: V775 = AND V252 0xffffffffffffffffffffffffffffffffffffffff
0x86c: V776 = MUL 0x1000000000000000000000000 V775
0x86e: M[V768] = V776
0x870: V777 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x871: V778 = MUL V777 0x1000000000000000000000000
0x872: V779 = 0x14
0x875: V780 = ADD V768 0x14
0x876: M[V780] = V778
0x877: V781 = 0x28
0x87a: V782 = ADD V768 0x28
0x87d: M[V782] = V257
0x87f: V783 = M[0x40]
0x883: V784 = SUB V768 V783
0x884: V785 = 0x48
0x886: V786 = ADD 0x48 V784
0x888: V787 = SHA3 V783 V786
0x88e: JUMP 0x1e3
---
Entry stack: [V13, 0x1e3, V252, V255, V257]
Stack pops: 4
Stack additions: [V787]
Exit stack: [V13, V787]

================================

Block 0x88f
[0x88f:0x8a3]
---
Predecessors: [0x2fe]
Successors: [0x21c]
---
0x88f JUMPDEST
0x890 PUSH1 0x5
0x892 PUSH1 0x20
0x894 MSTORE
0x895 PUSH1 0x0
0x897 SWAP1
0x898 DUP2
0x899 MSTORE
0x89a PUSH1 0x40
0x89c SWAP1
0x89d SHA3
0x89e SLOAD
0x89f PUSH1 0xff
0x8a1 AND
0x8a2 DUP2
0x8a3 JUMP
---
0x88f: JUMPDEST 
0x890: V788 = 0x5
0x892: V789 = 0x20
0x894: M[0x20] = 0x5
0x895: V790 = 0x0
0x899: M[0x0] = V271
0x89a: V791 = 0x40
0x89d: V792 = SHA3 0x0 0x40
0x89e: V793 = S[V792]
0x89f: V794 = 0xff
0x8a1: V795 = AND 0xff V793
0x8a3: JUMP 0x21c
---
Entry stack: [V13, 0x21c, V271]
Stack pops: 2
Stack additions: [S1, V795]
Exit stack: [V13, 0x21c, V795]

================================

Block 0x8a4
[0x8a4:0x92d]
---
Predecessors: [0x31f, 0x5ae]
Successors: [0x92e, 0x937]
---
0x8a4 JUMPDEST
0x8a5 PUSH1 0x40
0x8a7 DUP1
0x8a8 MLOAD
0x8a9 PUSH32 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x8ca DUP2
0x8cb MSTORE
0x8cc PUSH1 0x1c
0x8ce DUP2
0x8cf ADD
0x8d0 DUP7
0x8d1 SWAP1
0x8d2 MSTORE
0x8d3 DUP2
0x8d4 MLOAD
0x8d5 SWAP1
0x8d6 DUP2
0x8d7 SWAP1
0x8d8 SUB
0x8d9 PUSH1 0x3c
0x8db ADD
0x8dc DUP2
0x8dd SHA3
0x8de PUSH1 0x0
0x8e0 DUP1
0x8e1 DUP4
0x8e2 MSTORE
0x8e3 PUSH1 0x20
0x8e5 DUP4
0x8e6 DUP2
0x8e7 ADD
0x8e8 DUP1
0x8e9 DUP7
0x8ea MSTORE
0x8eb SWAP3
0x8ec SWAP1
0x8ed SWAP3
0x8ee MSTORE
0x8ef PUSH1 0xff
0x8f1 DUP8
0x8f2 AND
0x8f3 DUP4
0x8f4 DUP6
0x8f5 ADD
0x8f6 MSTORE
0x8f7 PUSH1 0x60
0x8f9 DUP4
0x8fa ADD
0x8fb DUP7
0x8fc SWAP1
0x8fd MSTORE
0x8fe PUSH1 0x80
0x900 DUP4
0x901 ADD
0x902 DUP6
0x903 SWAP1
0x904 MSTORE
0x905 SWAP3
0x906 MLOAD
0x907 PUSH1 0x5
0x909 SWAP3
0x90a DUP5
0x90b SWAP3
0x90c PUSH1 0x1
0x90e SWAP3
0x90f PUSH1 0xa0
0x911 DUP1
0x912 DUP5
0x913 ADD
0x914 SWAP4
0x915 PUSH1 0x1f
0x917 NOT
0x918 DUP4
0x919 ADD
0x91a SWAP3
0x91b SWAP1
0x91c DUP2
0x91d SWAP1
0x91e SUB
0x91f SWAP1
0x920 SWAP2
0x921 ADD
0x922 SWAP1
0x923 DUP7
0x924 DUP7
0x925 GAS
0x926 CALL
0x927 ISZERO
0x928 DUP1
0x929 ISZERO
0x92a PUSH2 0x937
0x92d JUMPI
---
0x8a4: JUMPDEST 
0x8a5: V796 = 0x40
0x8a8: V797 = M[0x40]
0x8a9: V798 = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x8cb: M[V797] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x8cc: V799 = 0x1c
0x8cf: V800 = ADD V797 0x1c
0x8d2: M[V800] = S3
0x8d4: V801 = M[0x40]
0x8d8: V802 = SUB V797 V801
0x8d9: V803 = 0x3c
0x8db: V804 = ADD 0x3c V802
0x8dd: V805 = SHA3 V801 V804
0x8de: V806 = 0x0
0x8e2: M[V801] = 0x0
0x8e3: V807 = 0x20
0x8e7: V808 = ADD 0x20 V801
0x8ea: M[0x40] = V808
0x8ee: M[V808] = V805
0x8ef: V809 = 0xff
0x8f2: V810 = AND S2 0xff
0x8f5: V811 = ADD 0x40 V801
0x8f6: M[V811] = V810
0x8f7: V812 = 0x60
0x8fa: V813 = ADD V801 0x60
0x8fd: M[V813] = S1
0x8fe: V814 = 0x80
0x901: V815 = ADD V801 0x80
0x904: M[V815] = S0
0x906: V816 = M[0x40]
0x907: V817 = 0x5
0x90c: V818 = 0x1
0x90f: V819 = 0xa0
0x913: V820 = ADD V801 0xa0
0x915: V821 = 0x1f
0x917: V822 = NOT 0x1f
0x919: V823 = ADD V816 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x91e: V824 = SUB V801 V816
0x921: V825 = ADD 0xa0 V824
0x925: V826 = GAS
0x926: V827 = CALL V826 0x1 0x0 V816 V825 V823 0x20
0x927: V828 = ISZERO V827
0x929: V829 = ISZERO V828
0x92a: V830 = 0x937
0x92d: JUMPI 0x937 V829
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, S5, {0x21c, 0x5ea}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x5, 0x0, 0x1, V820, V828]
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, S5, {0x21c, 0x5ea}, S3, S2, S1, S0, 0x0, 0x5, 0x0, 0x1, V820, V828]

================================

Block 0x92e
[0x92e:0x936]
---
Predecessors: [0x8a4]
Successors: []
---
0x92e RETURNDATASIZE
0x92f PUSH1 0x0
0x931 DUP1
0x932 RETURNDATACOPY
0x933 RETURNDATASIZE
0x934 PUSH1 0x0
0x936 REVERT
---
0x92e: V831 = RETURNDATASIZE
0x92f: V832 = 0x0
0x932: RETURNDATACOPY 0x0 0x0 V831
0x933: V833 = RETURNDATASIZE
0x934: V834 = 0x0
0x936: REVERT 0x0 V833
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, S11, {0x21c, 0x5ea}, S9, S8, S7, S6, 0x0, 0x5, 0x0, 0x1, V820, V828]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, S11, {0x21c, 0x5ea}, S9, S8, S7, S6, 0x0, 0x5, 0x0, 0x1, V820, V828]

================================

Block 0x937
[0x937:0x966]
---
Predecessors: [0x8a4]
Successors: [0x21c, 0x5ea]
---
0x937 JUMPDEST
0x938 POP
0x939 POP
0x93a PUSH1 0x40
0x93c DUP1
0x93d MLOAD
0x93e PUSH1 0x1f
0x940 NOT
0x941 ADD
0x942 MLOAD
0x943 PUSH1 0x1
0x945 PUSH1 0xa0
0x947 PUSH1 0x2
0x949 EXP
0x94a SUB
0x94b AND
0x94c DUP4
0x94d MSTORE
0x94e PUSH1 0x20
0x950 DUP4
0x951 ADD
0x952 SWAP4
0x953 SWAP1
0x954 SWAP4
0x955 MSTORE
0x956 POP
0x957 ADD
0x958 PUSH1 0x0
0x95a SHA3
0x95b SLOAD
0x95c PUSH1 0xff
0x95e AND
0x95f SWAP6
0x960 SWAP5
0x961 POP
0x962 POP
0x963 POP
0x964 POP
0x965 POP
0x966 JUMP
---
0x937: JUMPDEST 
0x93a: V835 = 0x40
0x93d: V836 = M[0x40]
0x93e: V837 = 0x1f
0x940: V838 = NOT 0x1f
0x941: V839 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0 V836
0x942: V840 = M[V839]
0x943: V841 = 0x1
0x945: V842 = 0xa0
0x947: V843 = 0x2
0x949: V844 = EXP 0x2 0xa0
0x94a: V845 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94b: V846 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0x94d: M[0x0] = V846
0x94e: V847 = 0x20
0x951: V848 = ADD 0x0 0x20
0x955: M[0x20] = 0x5
0x957: V849 = ADD 0x0 0x40
0x958: V850 = 0x0
0x95a: V851 = SHA3 0x0 0x40
0x95b: V852 = S[V851]
0x95c: V853 = 0xff
0x95e: V854 = AND 0xff V852
0x966: JUMP {0x21c, 0x5ea}
---
Entry stack: [V13, 0x21c, V161, V165, V167, V169, V171, S11, {0x21c, 0x5ea}, S9, S8, S7, S6, 0x0, 0x5, 0x0, 0x1, V820, V828]
Stack pops: 11
Stack additions: [V854]
Exit stack: [V13, 0x21c, V161, V165, V167, V169, V171, S11, V854]

================================

Block 0x967
[0x967:0x975]
---
Predecessors: [0x343]
Successors: [0x1b2]
---
0x967 JUMPDEST
0x968 PUSH1 0x2
0x96a SLOAD
0x96b PUSH1 0x1
0x96d PUSH1 0xa0
0x96f PUSH1 0x2
0x971 EXP
0x972 SUB
0x973 AND
0x974 DUP2
0x975 JUMP
---
0x967: JUMPDEST 
0x968: V855 = 0x2
0x96a: V856 = S[0x2]
0x96b: V857 = 0x1
0x96d: V858 = 0xa0
0x96f: V859 = 0x2
0x971: V860 = EXP 0x2 0xa0
0x972: V861 = SUB 0x10000000000000000000000000000000000000000 0x1
0x973: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V856
0x975: JUMP 0x1b2
---
Entry stack: [V13, 0x1b2]
Stack pops: 1
Stack additions: [S0, V862]
Exit stack: [V13, 0x1b2, V862]

================================

Block 0x976
[0x976:0x9b5]
---
Predecessors: [0x358]
Successors: [0x4de, 0x9b6]
---
0x976 JUMPDEST
0x977 PUSH1 0x7
0x979 DUP1
0x97a SLOAD
0x97b PUSH1 0x40
0x97d DUP1
0x97e MLOAD
0x97f PUSH1 0x20
0x981 PUSH1 0x2
0x983 PUSH1 0x1
0x985 DUP6
0x986 AND
0x987 ISZERO
0x988 PUSH2 0x100
0x98b MUL
0x98c PUSH1 0x0
0x98e NOT
0x98f ADD
0x990 SWAP1
0x991 SWAP5
0x992 AND
0x993 SWAP4
0x994 SWAP1
0x995 SWAP4
0x996 DIV
0x997 PUSH1 0x1f
0x999 DUP2
0x99a ADD
0x99b DUP5
0x99c SWAP1
0x99d DIV
0x99e DUP5
0x99f MUL
0x9a0 DUP3
0x9a1 ADD
0x9a2 DUP5
0x9a3 ADD
0x9a4 SWAP1
0x9a5 SWAP3
0x9a6 MSTORE
0x9a7 DUP2
0x9a8 DUP2
0x9a9 MSTORE
0x9aa SWAP3
0x9ab SWAP2
0x9ac DUP4
0x9ad ADD
0x9ae DUP3
0x9af DUP3
0x9b0 DUP1
0x9b1 ISZERO
0x9b2 PUSH2 0x4de
0x9b5 JUMPI
---
0x976: JUMPDEST 
0x977: V863 = 0x7
0x97a: V864 = S[0x7]
0x97b: V865 = 0x40
0x97e: V866 = M[0x40]
0x97f: V867 = 0x20
0x981: V868 = 0x2
0x983: V869 = 0x1
0x986: V870 = AND V864 0x1
0x987: V871 = ISZERO V870
0x988: V872 = 0x100
0x98b: V873 = MUL 0x100 V871
0x98c: V874 = 0x0
0x98e: V875 = NOT 0x0
0x98f: V876 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V873
0x992: V877 = AND V864 V876
0x996: V878 = DIV V877 0x2
0x997: V879 = 0x1f
0x99a: V880 = ADD V878 0x1f
0x99d: V881 = DIV V880 0x20
0x99f: V882 = MUL 0x20 V881
0x9a1: V883 = ADD V866 V882
0x9a3: V884 = ADD 0x20 V883
0x9a6: M[0x40] = V884
0x9a9: M[V866] = V878
0x9ad: V885 = ADD V866 0x20
0x9b1: V886 = ISZERO V878
0x9b2: V887 = 0x4de
0x9b5: JUMPI 0x4de V886
---
Entry stack: [V13, 0x128]
Stack pops: 0
Stack additions: [V866, 0x7, V878, V885, 0x7, V878]
Exit stack: [V13, 0x128, V866, 0x7, V878, V885, 0x7, V878]

================================

Block 0x9b6
[0x9b6:0x9bd]
---
Predecessors: [0x976]
Successors: [0x4b3, 0x9be]
---
0x9b6 DUP1
0x9b7 PUSH1 0x1f
0x9b9 LT
0x9ba PUSH2 0x4b3
0x9bd JUMPI
---
0x9b7: V888 = 0x1f
0x9b9: V889 = LT 0x1f V878
0x9ba: V890 = 0x4b3
0x9bd: JUMPI 0x4b3 V889
---
Entry stack: [V13, 0x128, V866, 0x7, V878, V885, 0x7, V878]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x128, V866, 0x7, V878, V885, 0x7, V878]

================================

Block 0x9be
[0x9be:0x9d0]
---
Predecessors: [0x9b6]
Successors: [0x4de]
---
0x9be PUSH2 0x100
0x9c1 DUP1
0x9c2 DUP4
0x9c3 SLOAD
0x9c4 DIV
0x9c5 MUL
0x9c6 DUP4
0x9c7 MSTORE
0x9c8 SWAP2
0x9c9 PUSH1 0x20
0x9cb ADD
0x9cc SWAP2
0x9cd PUSH2 0x4de
0x9d0 JUMP
---
0x9be: V891 = 0x100
0x9c3: V892 = S[0x7]
0x9c4: V893 = DIV V892 0x100
0x9c5: V894 = MUL V893 0x100
0x9c7: M[V885] = V894
0x9c9: V895 = 0x20
0x9cb: V896 = ADD 0x20 V885
0x9cd: V897 = 0x4de
0x9d0: JUMP 0x4de
---
Entry stack: [V13, 0x128, V866, 0x7, V878, V885, 0x7, V878]
Stack pops: 3
Stack additions: [V896, S1, S0]
Exit stack: [V13, 0x128, V866, 0x7, V878, V896, 0x7, V878]

================================

Block 0x9d1
[0x9d1:0x9d3]
---
Predecessors: [0x36d]
Successors: [0x9d4]
---
0x9d1 JUMPDEST
0x9d2 PUSH1 0x0
---
0x9d1: JUMPDEST 
0x9d2: V898 = 0x0
---
Entry stack: [V13, 0x21c, V313, V315]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x21c, V313, V315, 0x0]

================================

Block 0x9d4
[0x9d4:0x9d9]
---
Predecessors: [0x9d1, 0xcfd, 0xd03]
Successors: [0x1e3, 0x21c]
---
0x9d4 JUMPDEST
0x9d5 SWAP3
0x9d6 SWAP2
0x9d7 POP
0x9d8 POP
0x9d9 JUMP
---
0x9d4: JUMPDEST 
0x9d9: JUMP {0x1e3, 0x21c}
---
Entry stack: [V13, {0x1e3, 0x21c}, S2, S1, {0x0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V13, {0x0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}]

================================

Block 0x9da
[0x9da:0x9e8]
---
Predecessors: [0x391]
Successors: [0x1b2]
---
0x9da JUMPDEST
0x9db PUSH1 0x4
0x9dd SLOAD
0x9de PUSH1 0x1
0x9e0 PUSH1 0xa0
0x9e2 PUSH1 0x2
0x9e4 EXP
0x9e5 SUB
0x9e6 AND
0x9e7 DUP2
0x9e8 JUMP
---
0x9da: JUMPDEST 
0x9db: V899 = 0x4
0x9dd: V900 = S[0x4]
0x9de: V901 = 0x1
0x9e0: V902 = 0xa0
0x9e2: V903 = 0x2
0x9e4: V904 = EXP 0x2 0xa0
0x9e5: V905 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e6: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff V900
0x9e8: JUMP 0x1b2
---
Entry stack: [V13, 0x1b2]
Stack pops: 1
Stack additions: [S0, V906]
Exit stack: [V13, 0x1b2, V906]

================================

Block 0x9e9
[0x9e9:0x9fa]
---
Predecessors: [0x3a6]
Successors: [0x1e3]
---
0x9e9 JUMPDEST
0x9ea PUSH1 0xa
0x9ec PUSH1 0x20
0x9ee MSTORE
0x9ef PUSH1 0x0
0x9f1 SWAP1
0x9f2 DUP2
0x9f3 MSTORE
0x9f4 PUSH1 0x40
0x9f6 SWAP1
0x9f7 SHA3
0x9f8 SLOAD
0x9f9 DUP2
0x9fa JUMP
---
0x9e9: JUMPDEST 
0x9ea: V907 = 0xa
0x9ec: V908 = 0x20
0x9ee: M[0x20] = 0xa
0x9ef: V909 = 0x0
0x9f3: M[0x0] = V335
0x9f4: V910 = 0x40
0x9f7: V911 = SHA3 0x0 0x40
0x9f8: V912 = S[V911]
0x9fa: JUMP 0x1e3
---
Entry stack: [V13, 0x1e3, V335]
Stack pops: 2
Stack additions: [S1, V912]
Exit stack: [V13, 0x1e3, V912]

================================

Block 0x9fb
[0x9fb:0xa10]
---
Predecessors: [0x3c7]
Successors: [0xa11, 0xa15]
---
0x9fb JUMPDEST
0x9fc PUSH1 0x2
0x9fe SLOAD
0x9ff PUSH1 0x0
0xa01 SWAP1
0xa02 PUSH1 0x1
0xa04 PUSH1 0xa0
0xa06 PUSH1 0x2
0xa08 EXP
0xa09 SUB
0xa0a AND
0xa0b CALLER
0xa0c EQ
0xa0d PUSH2 0xa15
0xa10 JUMPI
---
0x9fb: JUMPDEST 
0x9fc: V913 = 0x2
0x9fe: V914 = S[0x2]
0x9ff: V915 = 0x0
0xa02: V916 = 0x1
0xa04: V917 = 0xa0
0xa06: V918 = 0x2
0xa08: V919 = EXP 0x2 0xa0
0xa09: V920 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0a: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0xa0b: V922 = CALLER
0xa0c: V923 = EQ V922 V921
0xa0d: V924 = 0xa15
0xa10: JUMPI 0xa15 V923
---
Entry stack: [V13, 0x21c, V349, V353]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x21c, V349, V353, 0x0]

================================

Block 0xa11
[0xa11:0xa14]
---
Predecessors: [0x9fb]
Successors: []
---
0xa11 PUSH1 0x0
0xa13 DUP1
0xa14 REVERT
---
0xa11: V925 = 0x0
0xa14: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0]

================================

Block 0xa15
[0xa15:0xa74]
---
Predecessors: [0x9fb]
Successors: [0xa75, 0xa79]
---
0xa15 JUMPDEST
0xa16 PUSH1 0x40
0xa18 DUP1
0xa19 MLOAD
0xa1a PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa3b DUP2
0xa3c MSTORE
0xa3d ADDRESS
0xa3e PUSH1 0x4
0xa40 DUP3
0xa41 ADD
0xa42 MSTORE
0xa43 SWAP1
0xa44 MLOAD
0xa45 PUSH1 0x0
0xa47 SWAP2
0xa48 PUSH1 0x1
0xa4a PUSH1 0xa0
0xa4c PUSH1 0x2
0xa4e EXP
0xa4f SUB
0xa50 DUP7
0xa51 AND
0xa52 SWAP2
0xa53 PUSH4 0x70a08231
0xa58 SWAP2
0xa59 PUSH1 0x24
0xa5b DUP1
0xa5c DUP3
0xa5d ADD
0xa5e SWAP3
0xa5f PUSH1 0x20
0xa61 SWAP3
0xa62 SWAP1
0xa63 SWAP2
0xa64 SWAP1
0xa65 DUP3
0xa66 SWAP1
0xa67 SUB
0xa68 ADD
0xa69 DUP2
0xa6a DUP8
0xa6b DUP8
0xa6c DUP1
0xa6d EXTCODESIZE
0xa6e ISZERO
0xa6f DUP1
0xa70 ISZERO
0xa71 PUSH2 0xa79
0xa74 JUMPI
---
0xa15: JUMPDEST 
0xa16: V926 = 0x40
0xa19: V927 = M[0x40]
0xa1a: V928 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa3c: M[V927] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa3d: V929 = ADDRESS
0xa3e: V930 = 0x4
0xa41: V931 = ADD V927 0x4
0xa42: M[V931] = V929
0xa44: V932 = M[0x40]
0xa45: V933 = 0x0
0xa48: V934 = 0x1
0xa4a: V935 = 0xa0
0xa4c: V936 = 0x2
0xa4e: V937 = EXP 0x2 0xa0
0xa4f: V938 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa51: V939 = AND V349 0xffffffffffffffffffffffffffffffffffffffff
0xa53: V940 = 0x70a08231
0xa59: V941 = 0x24
0xa5d: V942 = ADD V927 0x24
0xa5f: V943 = 0x20
0xa67: V944 = SUB V927 V932
0xa68: V945 = ADD V944 0x24
0xa6d: V946 = EXTCODESIZE V939
0xa6e: V947 = ISZERO V946
0xa70: V948 = ISZERO V947
0xa71: V949 = 0xa79
0xa74: JUMPI 0xa79 V948
---
Entry stack: [V13, 0x21c, V349, V353, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V939, 0x70a08231, V942, 0x20, V932, V945, V932, 0x0, V939, V947]
Exit stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V939, 0x70a08231, V942, 0x20, V932, V945, V932, 0x0, V939, V947]

================================

Block 0xa75
[0xa75:0xa78]
---
Predecessors: [0xa15]
Successors: []
---
0xa75 PUSH1 0x0
0xa77 DUP1
0xa78 REVERT
---
0xa75: V950 = 0x0
0xa78: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V939, 0x70a08231, V942, 0x20, V932, V945, V932, 0x0, V939, V947]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V939, 0x70a08231, V942, 0x20, V932, V945, V932, 0x0, V939, V947]

================================

Block 0xa79
[0xa79:0xa83]
---
Predecessors: [0xa15]
Successors: [0xa84, 0xa8d]
---
0xa79 JUMPDEST
0xa7a POP
0xa7b GAS
0xa7c CALL
0xa7d ISZERO
0xa7e DUP1
0xa7f ISZERO
0xa80 PUSH2 0xa8d
0xa83 JUMPI
---
0xa79: JUMPDEST 
0xa7b: V951 = GAS
0xa7c: V952 = CALL V951 V939 0x0 V932 V945 V932 0x20
0xa7d: V953 = ISZERO V952
0xa7f: V954 = ISZERO V953
0xa80: V955 = 0xa8d
0xa83: JUMPI 0xa8d V954
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V939, 0x70a08231, V942, 0x20, V932, V945, V932, 0x0, V939, V947]
Stack pops: 7
Stack additions: [V953]
Exit stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V939, 0x70a08231, V942, V953]

================================

Block 0xa84
[0xa84:0xa8c]
---
Predecessors: [0xa79]
Successors: []
---
0xa84 RETURNDATASIZE
0xa85 PUSH1 0x0
0xa87 DUP1
0xa88 RETURNDATACOPY
0xa89 RETURNDATASIZE
0xa8a PUSH1 0x0
0xa8c REVERT
---
0xa84: V956 = RETURNDATASIZE
0xa85: V957 = 0x0
0xa88: RETURNDATACOPY 0x0 0x0 V956
0xa89: V958 = RETURNDATASIZE
0xa8a: V959 = 0x0
0xa8c: REVERT 0x0 V958
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V939, 0x70a08231, V942, V953]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V939, 0x70a08231, V942, V953]

================================

Block 0xa8d
[0xa8d:0xa9e]
---
Predecessors: [0xa79]
Successors: [0xa9f, 0xaa3]
---
0xa8d JUMPDEST
0xa8e POP
0xa8f POP
0xa90 POP
0xa91 POP
0xa92 PUSH1 0x40
0xa94 MLOAD
0xa95 RETURNDATASIZE
0xa96 PUSH1 0x20
0xa98 DUP2
0xa99 LT
0xa9a ISZERO
0xa9b PUSH2 0xaa3
0xa9e JUMPI
---
0xa8d: JUMPDEST 
0xa92: V960 = 0x40
0xa94: V961 = M[0x40]
0xa95: V962 = RETURNDATASIZE
0xa96: V963 = 0x20
0xa99: V964 = LT V962 0x20
0xa9a: V965 = ISZERO V964
0xa9b: V966 = 0xaa3
0xa9e: JUMPI 0xaa3 V965
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V939, 0x70a08231, V942, V953]
Stack pops: 4
Stack additions: [V961, V962]
Exit stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V961, V962]

================================

Block 0xa9f
[0xa9f:0xaa2]
---
Predecessors: [0xa8d]
Successors: []
---
0xa9f PUSH1 0x0
0xaa1 DUP1
0xaa2 REVERT
---
0xa9f: V967 = 0x0
0xaa2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V961, V962]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V961, V962]

================================

Block 0xaa3
[0xaa3:0xaaa]
---
Predecessors: [0xa8d]
Successors: [0xaab, 0xaaf]
---
0xaa3 JUMPDEST
0xaa4 POP
0xaa5 MLOAD
0xaa6 GT
0xaa7 PUSH2 0xaaf
0xaaa JUMPI
---
0xaa3: JUMPDEST 
0xaa5: V968 = M[V961]
0xaa6: V969 = GT V968 0x0
0xaa7: V970 = 0xaaf
0xaaa: JUMPI 0xaaf V969
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, 0x0, V961, V962]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0]

================================

Block 0xaab
[0xaab:0xaae]
---
Predecessors: [0xaa3]
Successors: []
---
0xaab PUSH1 0x0
0xaad DUP1
0xaae REVERT
---
0xaab: V971 = 0x0
0xaae: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0]

================================

Block 0xaaf
[0xaaf:0xab5]
---
Predecessors: [0xaa3]
Successors: [0xab6, 0xbb6]
---
0xaaf JUMPDEST
0xab0 DUP2
0xab1 ISZERO
0xab2 PUSH2 0xbb6
0xab5 JUMPI
---
0xaaf: JUMPDEST 
0xab1: V972 = ISZERO V353
0xab2: V973 = 0xbb6
0xab5: JUMPI 0xbb6 V972
---
Entry stack: [V13, 0x21c, V349, V353, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x21c, V349, V353, 0x0]

================================

Block 0xab6
[0xab6:0xb1c]
---
Predecessors: [0xaaf]
Successors: [0xb1d, 0xb21]
---
0xab6 PUSH1 0x40
0xab8 DUP1
0xab9 MLOAD
0xaba PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0xadb DUP2
0xadc MSTORE
0xadd ADDRESS
0xade PUSH1 0x4
0xae0 DUP3
0xae1 ADD
0xae2 MSTORE
0xae3 SWAP1
0xae4 MLOAD
0xae5 PUSH1 0x1
0xae7 PUSH1 0xa0
0xae9 PUSH1 0x2
0xaeb EXP
0xaec SUB
0xaed DUP6
0xaee AND
0xaef SWAP2
0xaf0 PUSH4 0xa9059cbb
0xaf5 SWAP2
0xaf6 CALLER
0xaf7 SWAP2
0xaf8 DUP5
0xaf9 SWAP2
0xafa PUSH4 0x70a08231
0xaff SWAP2
0xb00 PUSH1 0x24
0xb02 DUP1
0xb03 DUP3
0xb04 ADD
0xb05 SWAP3
0xb06 PUSH1 0x20
0xb08 SWAP3
0xb09 SWAP1
0xb0a SWAP2
0xb0b SWAP1
0xb0c DUP3
0xb0d SWAP1
0xb0e SUB
0xb0f ADD
0xb10 DUP2
0xb11 PUSH1 0x0
0xb13 DUP8
0xb14 DUP1
0xb15 EXTCODESIZE
0xb16 ISZERO
0xb17 DUP1
0xb18 ISZERO
0xb19 PUSH2 0xb21
0xb1c JUMPI
---
0xab6: V974 = 0x40
0xab9: V975 = M[0x40]
0xaba: V976 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xadc: M[V975] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xadd: V977 = ADDRESS
0xade: V978 = 0x4
0xae1: V979 = ADD V975 0x4
0xae2: M[V979] = V977
0xae4: V980 = M[0x40]
0xae5: V981 = 0x1
0xae7: V982 = 0xa0
0xae9: V983 = 0x2
0xaeb: V984 = EXP 0x2 0xa0
0xaec: V985 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaee: V986 = AND V349 0xffffffffffffffffffffffffffffffffffffffff
0xaf0: V987 = 0xa9059cbb
0xaf6: V988 = CALLER
0xafa: V989 = 0x70a08231
0xb00: V990 = 0x24
0xb04: V991 = ADD V975 0x24
0xb06: V992 = 0x20
0xb0e: V993 = SUB V975 V980
0xb0f: V994 = ADD V993 0x24
0xb11: V995 = 0x0
0xb15: V996 = EXTCODESIZE V986
0xb16: V997 = ISZERO V996
0xb18: V998 = ISZERO V997
0xb19: V999 = 0xb21
0xb1c: JUMPI 0xb21 V998
---
Entry stack: [V13, 0x21c, V349, V353, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V986, 0xa9059cbb, V988, V986, 0x70a08231, V991, 0x20, V980, V994, V980, 0x0, V986, V997]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V986, 0x70a08231, V991, 0x20, V980, V994, V980, 0x0, V986, V997]

================================

Block 0xb1d
[0xb1d:0xb20]
---
Predecessors: [0xab6]
Successors: []
---
0xb1d PUSH1 0x0
0xb1f DUP1
0xb20 REVERT
---
0xb1d: V1000 = 0x0
0xb20: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V986, 0x70a08231, V991, 0x20, V980, V994, V980, 0x0, V986, V997]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V986, 0x70a08231, V991, 0x20, V980, V994, V980, 0x0, V986, V997]

================================

Block 0xb21
[0xb21:0xb2b]
---
Predecessors: [0xab6]
Successors: [0xb2c, 0xb35]
---
0xb21 JUMPDEST
0xb22 POP
0xb23 GAS
0xb24 CALL
0xb25 ISZERO
0xb26 DUP1
0xb27 ISZERO
0xb28 PUSH2 0xb35
0xb2b JUMPI
---
0xb21: JUMPDEST 
0xb23: V1001 = GAS
0xb24: V1002 = CALL V1001 V986 0x0 V980 V994 V980 0x20
0xb25: V1003 = ISZERO V1002
0xb27: V1004 = ISZERO V1003
0xb28: V1005 = 0xb35
0xb2b: JUMPI 0xb35 V1004
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V986, 0x70a08231, V991, 0x20, V980, V994, V980, 0x0, V986, V997]
Stack pops: 7
Stack additions: [V1003]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V986, 0x70a08231, V991, V1003]

================================

Block 0xb2c
[0xb2c:0xb34]
---
Predecessors: [0xb21]
Successors: []
---
0xb2c RETURNDATASIZE
0xb2d PUSH1 0x0
0xb2f DUP1
0xb30 RETURNDATACOPY
0xb31 RETURNDATASIZE
0xb32 PUSH1 0x0
0xb34 REVERT
---
0xb2c: V1006 = RETURNDATASIZE
0xb2d: V1007 = 0x0
0xb30: RETURNDATACOPY 0x0 0x0 V1006
0xb31: V1008 = RETURNDATASIZE
0xb32: V1009 = 0x0
0xb34: REVERT 0x0 V1008
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V986, 0x70a08231, V991, V1003]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V986, 0x70a08231, V991, V1003]

================================

Block 0xb35
[0xb35:0xb46]
---
Predecessors: [0xb21]
Successors: [0xb47, 0xb4b]
---
0xb35 JUMPDEST
0xb36 POP
0xb37 POP
0xb38 POP
0xb39 POP
0xb3a PUSH1 0x40
0xb3c MLOAD
0xb3d RETURNDATASIZE
0xb3e PUSH1 0x20
0xb40 DUP2
0xb41 LT
0xb42 ISZERO
0xb43 PUSH2 0xb4b
0xb46 JUMPI
---
0xb35: JUMPDEST 
0xb3a: V1010 = 0x40
0xb3c: V1011 = M[0x40]
0xb3d: V1012 = RETURNDATASIZE
0xb3e: V1013 = 0x20
0xb41: V1014 = LT V1012 0x20
0xb42: V1015 = ISZERO V1014
0xb43: V1016 = 0xb4b
0xb46: JUMPI 0xb4b V1015
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V986, 0x70a08231, V991, V1003]
Stack pops: 4
Stack additions: [V1011, V1012]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V1011, V1012]

================================

Block 0xb47
[0xb47:0xb4a]
---
Predecessors: [0xb35]
Successors: []
---
0xb47 PUSH1 0x0
0xb49 DUP1
0xb4a REVERT
---
0xb47: V1017 = 0x0
0xb4a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V1011, V1012]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V1011, V1012]

================================

Block 0xb4b
[0xb4b:0xb94]
---
Predecessors: [0xb35]
Successors: [0xb95, 0xb99]
---
0xb4b JUMPDEST
0xb4c POP
0xb4d MLOAD
0xb4e PUSH1 0x40
0xb50 DUP1
0xb51 MLOAD
0xb52 PUSH1 0xe0
0xb54 PUSH1 0x2
0xb56 EXP
0xb57 PUSH4 0xffffffff
0xb5c DUP7
0xb5d AND
0xb5e MUL
0xb5f DUP2
0xb60 MSTORE
0xb61 PUSH1 0x1
0xb63 PUSH1 0xa0
0xb65 PUSH1 0x2
0xb67 EXP
0xb68 SUB
0xb69 SWAP1
0xb6a SWAP4
0xb6b AND
0xb6c PUSH1 0x4
0xb6e DUP5
0xb6f ADD
0xb70 MSTORE
0xb71 PUSH1 0x24
0xb73 DUP4
0xb74 ADD
0xb75 SWAP2
0xb76 SWAP1
0xb77 SWAP2
0xb78 MSTORE
0xb79 MLOAD
0xb7a PUSH1 0x44
0xb7c DUP1
0xb7d DUP4
0xb7e ADD
0xb7f SWAP3
0xb80 PUSH1 0x0
0xb82 SWAP3
0xb83 SWAP2
0xb84 SWAP1
0xb85 DUP3
0xb86 SWAP1
0xb87 SUB
0xb88 ADD
0xb89 DUP2
0xb8a DUP4
0xb8b DUP8
0xb8c DUP1
0xb8d EXTCODESIZE
0xb8e ISZERO
0xb8f DUP1
0xb90 ISZERO
0xb91 PUSH2 0xb99
0xb94 JUMPI
---
0xb4b: JUMPDEST 
0xb4d: V1018 = M[V1011]
0xb4e: V1019 = 0x40
0xb51: V1020 = M[0x40]
0xb52: V1021 = 0xe0
0xb54: V1022 = 0x2
0xb56: V1023 = EXP 0x2 0xe0
0xb57: V1024 = 0xffffffff
0xb5d: V1025 = AND 0xa9059cbb 0xffffffff
0xb5e: V1026 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb60: M[V1020] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb61: V1027 = 0x1
0xb63: V1028 = 0xa0
0xb65: V1029 = 0x2
0xb67: V1030 = EXP 0x2 0xa0
0xb68: V1031 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6b: V1032 = AND V988 0xffffffffffffffffffffffffffffffffffffffff
0xb6c: V1033 = 0x4
0xb6f: V1034 = ADD V1020 0x4
0xb70: M[V1034] = V1032
0xb71: V1035 = 0x24
0xb74: V1036 = ADD V1020 0x24
0xb78: M[V1036] = V1018
0xb79: V1037 = M[0x40]
0xb7a: V1038 = 0x44
0xb7e: V1039 = ADD V1020 0x44
0xb80: V1040 = 0x0
0xb87: V1041 = SUB V1020 V1037
0xb88: V1042 = ADD V1041 0x44
0xb8d: V1043 = EXTCODESIZE V986
0xb8e: V1044 = ISZERO V1043
0xb90: V1045 = ISZERO V1044
0xb91: V1046 = 0xb99
0xb94: JUMPI 0xb99 V1045
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V988, V1011, V1012]
Stack pops: 5
Stack additions: [S4, S3, V1039, 0x0, V1037, V1042, V1037, 0x0, S4, V1044]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V1039, 0x0, V1037, V1042, V1037, 0x0, V986, V1044]

================================

Block 0xb95
[0xb95:0xb98]
---
Predecessors: [0xb4b]
Successors: []
---
0xb95 PUSH1 0x0
0xb97 DUP1
0xb98 REVERT
---
0xb95: V1047 = 0x0
0xb98: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V1039, 0x0, V1037, V1042, V1037, 0x0, V986, V1044]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V1039, 0x0, V1037, V1042, V1037, 0x0, V986, V1044]

================================

Block 0xb99
[0xb99:0xba3]
---
Predecessors: [0xb4b]
Successors: [0xba4, 0xbad]
---
0xb99 JUMPDEST
0xb9a POP
0xb9b GAS
0xb9c CALL
0xb9d ISZERO
0xb9e DUP1
0xb9f ISZERO
0xba0 PUSH2 0xbad
0xba3 JUMPI
---
0xb99: JUMPDEST 
0xb9b: V1048 = GAS
0xb9c: V1049 = CALL V1048 V986 0x0 V1037 V1042 V1037 0x0
0xb9d: V1050 = ISZERO V1049
0xb9f: V1051 = ISZERO V1050
0xba0: V1052 = 0xbad
0xba3: JUMPI 0xbad V1051
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V1039, 0x0, V1037, V1042, V1037, 0x0, V986, V1044]
Stack pops: 7
Stack additions: [V1050]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V1039, V1050]

================================

Block 0xba4
[0xba4:0xbac]
---
Predecessors: [0xb99]
Successors: []
---
0xba4 RETURNDATASIZE
0xba5 PUSH1 0x0
0xba7 DUP1
0xba8 RETURNDATACOPY
0xba9 RETURNDATASIZE
0xbaa PUSH1 0x0
0xbac REVERT
---
0xba4: V1053 = RETURNDATASIZE
0xba5: V1054 = 0x0
0xba8: RETURNDATACOPY 0x0 0x0 V1053
0xba9: V1055 = RETURNDATASIZE
0xbaa: V1056 = 0x0
0xbac: REVERT 0x0 V1055
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V1039, V1050]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V1039, V1050]

================================

Block 0xbad
[0xbad:0xbb5]
---
Predecessors: [0xb99]
Successors: [0xcc8]
---
0xbad JUMPDEST
0xbae POP
0xbaf POP
0xbb0 POP
0xbb1 POP
0xbb2 PUSH2 0xcc8
0xbb5 JUMP
---
0xbad: JUMPDEST 
0xbb2: V1057 = 0xcc8
0xbb5: JUMP 0xcc8
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V986, 0xa9059cbb, V1039, V1050]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0]

================================

Block 0xbb6
[0xbb6:0xc1d]
---
Predecessors: [0xaaf]
Successors: [0xc1e, 0xc22]
---
0xbb6 JUMPDEST
0xbb7 PUSH1 0x40
0xbb9 DUP1
0xbba MLOAD
0xbbb PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbdc DUP2
0xbdd MSTORE
0xbde ADDRESS
0xbdf PUSH1 0x4
0xbe1 DUP3
0xbe2 ADD
0xbe3 MSTORE
0xbe4 SWAP1
0xbe5 MLOAD
0xbe6 PUSH1 0x1
0xbe8 PUSH1 0xa0
0xbea PUSH1 0x2
0xbec EXP
0xbed SUB
0xbee DUP6
0xbef AND
0xbf0 SWAP2
0xbf1 PUSH4 0xa9059cbb
0xbf6 SWAP2
0xbf7 CALLER
0xbf8 SWAP2
0xbf9 DUP5
0xbfa SWAP2
0xbfb PUSH4 0x70a08231
0xc00 SWAP2
0xc01 PUSH1 0x24
0xc03 DUP1
0xc04 DUP3
0xc05 ADD
0xc06 SWAP3
0xc07 PUSH1 0x20
0xc09 SWAP3
0xc0a SWAP1
0xc0b SWAP2
0xc0c SWAP1
0xc0d DUP3
0xc0e SWAP1
0xc0f SUB
0xc10 ADD
0xc11 DUP2
0xc12 PUSH1 0x0
0xc14 DUP8
0xc15 DUP1
0xc16 EXTCODESIZE
0xc17 ISZERO
0xc18 DUP1
0xc19 ISZERO
0xc1a PUSH2 0xc22
0xc1d JUMPI
---
0xbb6: JUMPDEST 
0xbb7: V1058 = 0x40
0xbba: V1059 = M[0x40]
0xbbb: V1060 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbdd: M[V1059] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbde: V1061 = ADDRESS
0xbdf: V1062 = 0x4
0xbe2: V1063 = ADD V1059 0x4
0xbe3: M[V1063] = V1061
0xbe5: V1064 = M[0x40]
0xbe6: V1065 = 0x1
0xbe8: V1066 = 0xa0
0xbea: V1067 = 0x2
0xbec: V1068 = EXP 0x2 0xa0
0xbed: V1069 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbef: V1070 = AND V349 0xffffffffffffffffffffffffffffffffffffffff
0xbf1: V1071 = 0xa9059cbb
0xbf7: V1072 = CALLER
0xbfb: V1073 = 0x70a08231
0xc01: V1074 = 0x24
0xc05: V1075 = ADD V1059 0x24
0xc07: V1076 = 0x20
0xc0f: V1077 = SUB V1059 V1064
0xc10: V1078 = ADD V1077 0x24
0xc12: V1079 = 0x0
0xc16: V1080 = EXTCODESIZE V1070
0xc17: V1081 = ISZERO V1080
0xc19: V1082 = ISZERO V1081
0xc1a: V1083 = 0xc22
0xc1d: JUMPI 0xc22 V1082
---
Entry stack: [V13, 0x21c, V349, V353, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1070, 0xa9059cbb, V1072, V1070, 0x70a08231, V1075, 0x20, V1064, V1078, V1064, 0x0, V1070, V1081]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1070, 0x70a08231, V1075, 0x20, V1064, V1078, V1064, 0x0, V1070, V1081]

================================

Block 0xc1e
[0xc1e:0xc21]
---
Predecessors: [0xbb6]
Successors: []
---
0xc1e PUSH1 0x0
0xc20 DUP1
0xc21 REVERT
---
0xc1e: V1084 = 0x0
0xc21: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1070, 0x70a08231, V1075, 0x20, V1064, V1078, V1064, 0x0, V1070, V1081]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1070, 0x70a08231, V1075, 0x20, V1064, V1078, V1064, 0x0, V1070, V1081]

================================

Block 0xc22
[0xc22:0xc2c]
---
Predecessors: [0xbb6]
Successors: [0xc2d, 0xc36]
---
0xc22 JUMPDEST
0xc23 POP
0xc24 GAS
0xc25 CALL
0xc26 ISZERO
0xc27 DUP1
0xc28 ISZERO
0xc29 PUSH2 0xc36
0xc2c JUMPI
---
0xc22: JUMPDEST 
0xc24: V1085 = GAS
0xc25: V1086 = CALL V1085 V1070 0x0 V1064 V1078 V1064 0x20
0xc26: V1087 = ISZERO V1086
0xc28: V1088 = ISZERO V1087
0xc29: V1089 = 0xc36
0xc2c: JUMPI 0xc36 V1088
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1070, 0x70a08231, V1075, 0x20, V1064, V1078, V1064, 0x0, V1070, V1081]
Stack pops: 7
Stack additions: [V1087]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1070, 0x70a08231, V1075, V1087]

================================

Block 0xc2d
[0xc2d:0xc35]
---
Predecessors: [0xc22]
Successors: []
---
0xc2d RETURNDATASIZE
0xc2e PUSH1 0x0
0xc30 DUP1
0xc31 RETURNDATACOPY
0xc32 RETURNDATASIZE
0xc33 PUSH1 0x0
0xc35 REVERT
---
0xc2d: V1090 = RETURNDATASIZE
0xc2e: V1091 = 0x0
0xc31: RETURNDATACOPY 0x0 0x0 V1090
0xc32: V1092 = RETURNDATASIZE
0xc33: V1093 = 0x0
0xc35: REVERT 0x0 V1092
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1070, 0x70a08231, V1075, V1087]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1070, 0x70a08231, V1075, V1087]

================================

Block 0xc36
[0xc36:0xc47]
---
Predecessors: [0xc22]
Successors: [0xc48, 0xc4c]
---
0xc36 JUMPDEST
0xc37 POP
0xc38 POP
0xc39 POP
0xc3a POP
0xc3b PUSH1 0x40
0xc3d MLOAD
0xc3e RETURNDATASIZE
0xc3f PUSH1 0x20
0xc41 DUP2
0xc42 LT
0xc43 ISZERO
0xc44 PUSH2 0xc4c
0xc47 JUMPI
---
0xc36: JUMPDEST 
0xc3b: V1094 = 0x40
0xc3d: V1095 = M[0x40]
0xc3e: V1096 = RETURNDATASIZE
0xc3f: V1097 = 0x20
0xc42: V1098 = LT V1096 0x20
0xc43: V1099 = ISZERO V1098
0xc44: V1100 = 0xc4c
0xc47: JUMPI 0xc4c V1099
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1070, 0x70a08231, V1075, V1087]
Stack pops: 4
Stack additions: [V1095, V1096]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1095, V1096]

================================

Block 0xc48
[0xc48:0xc4b]
---
Predecessors: [0xc36]
Successors: []
---
0xc48 PUSH1 0x0
0xc4a DUP1
0xc4b REVERT
---
0xc48: V1101 = 0x0
0xc4b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1095, V1096]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1095, V1096]

================================

Block 0xc4c
[0xc4c:0xc96]
---
Predecessors: [0xc36]
Successors: [0xc97, 0xc9b]
---
0xc4c JUMPDEST
0xc4d POP
0xc4e MLOAD
0xc4f PUSH1 0x40
0xc51 DUP1
0xc52 MLOAD
0xc53 PUSH1 0xe0
0xc55 PUSH1 0x2
0xc57 EXP
0xc58 PUSH4 0xffffffff
0xc5d DUP7
0xc5e AND
0xc5f MUL
0xc60 DUP2
0xc61 MSTORE
0xc62 PUSH1 0x1
0xc64 PUSH1 0xa0
0xc66 PUSH1 0x2
0xc68 EXP
0xc69 SUB
0xc6a SWAP1
0xc6b SWAP4
0xc6c AND
0xc6d PUSH1 0x4
0xc6f DUP5
0xc70 ADD
0xc71 MSTORE
0xc72 PUSH1 0x24
0xc74 DUP4
0xc75 ADD
0xc76 SWAP2
0xc77 SWAP1
0xc78 SWAP2
0xc79 MSTORE
0xc7a MLOAD
0xc7b PUSH1 0x44
0xc7d DUP1
0xc7e DUP4
0xc7f ADD
0xc80 SWAP3
0xc81 PUSH1 0x20
0xc83 SWAP3
0xc84 SWAP2
0xc85 SWAP1
0xc86 DUP3
0xc87 SWAP1
0xc88 SUB
0xc89 ADD
0xc8a DUP2
0xc8b PUSH1 0x0
0xc8d DUP8
0xc8e DUP1
0xc8f EXTCODESIZE
0xc90 ISZERO
0xc91 DUP1
0xc92 ISZERO
0xc93 PUSH2 0xc9b
0xc96 JUMPI
---
0xc4c: JUMPDEST 
0xc4e: V1102 = M[V1095]
0xc4f: V1103 = 0x40
0xc52: V1104 = M[0x40]
0xc53: V1105 = 0xe0
0xc55: V1106 = 0x2
0xc57: V1107 = EXP 0x2 0xe0
0xc58: V1108 = 0xffffffff
0xc5e: V1109 = AND 0xa9059cbb 0xffffffff
0xc5f: V1110 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc61: M[V1104] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc62: V1111 = 0x1
0xc64: V1112 = 0xa0
0xc66: V1113 = 0x2
0xc68: V1114 = EXP 0x2 0xa0
0xc69: V1115 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6c: V1116 = AND V1072 0xffffffffffffffffffffffffffffffffffffffff
0xc6d: V1117 = 0x4
0xc70: V1118 = ADD V1104 0x4
0xc71: M[V1118] = V1116
0xc72: V1119 = 0x24
0xc75: V1120 = ADD V1104 0x24
0xc79: M[V1120] = V1102
0xc7a: V1121 = M[0x40]
0xc7b: V1122 = 0x44
0xc7f: V1123 = ADD V1104 0x44
0xc81: V1124 = 0x20
0xc88: V1125 = SUB V1104 V1121
0xc89: V1126 = ADD V1125 0x44
0xc8b: V1127 = 0x0
0xc8f: V1128 = EXTCODESIZE V1070
0xc90: V1129 = ISZERO V1128
0xc92: V1130 = ISZERO V1129
0xc93: V1131 = 0xc9b
0xc96: JUMPI 0xc9b V1130
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1072, V1095, V1096]
Stack pops: 5
Stack additions: [S4, S3, V1123, 0x20, V1121, V1126, V1121, 0x0, S4, V1129]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1123, 0x20, V1121, V1126, V1121, 0x0, V1070, V1129]

================================

Block 0xc97
[0xc97:0xc9a]
---
Predecessors: [0xc4c]
Successors: []
---
0xc97 PUSH1 0x0
0xc99 DUP1
0xc9a REVERT
---
0xc97: V1132 = 0x0
0xc9a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1123, 0x20, V1121, V1126, V1121, 0x0, V1070, V1129]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1123, 0x20, V1121, V1126, V1121, 0x0, V1070, V1129]

================================

Block 0xc9b
[0xc9b:0xca5]
---
Predecessors: [0xc4c]
Successors: [0xca6, 0xcaf]
---
0xc9b JUMPDEST
0xc9c POP
0xc9d GAS
0xc9e CALL
0xc9f ISZERO
0xca0 DUP1
0xca1 ISZERO
0xca2 PUSH2 0xcaf
0xca5 JUMPI
---
0xc9b: JUMPDEST 
0xc9d: V1133 = GAS
0xc9e: V1134 = CALL V1133 V1070 0x0 V1121 V1126 V1121 0x20
0xc9f: V1135 = ISZERO V1134
0xca1: V1136 = ISZERO V1135
0xca2: V1137 = 0xcaf
0xca5: JUMPI 0xcaf V1136
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1123, 0x20, V1121, V1126, V1121, 0x0, V1070, V1129]
Stack pops: 7
Stack additions: [V1135]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1123, V1135]

================================

Block 0xca6
[0xca6:0xcae]
---
Predecessors: [0xc9b]
Successors: []
---
0xca6 RETURNDATASIZE
0xca7 PUSH1 0x0
0xca9 DUP1
0xcaa RETURNDATACOPY
0xcab RETURNDATASIZE
0xcac PUSH1 0x0
0xcae REVERT
---
0xca6: V1138 = RETURNDATASIZE
0xca7: V1139 = 0x0
0xcaa: RETURNDATACOPY 0x0 0x0 V1138
0xcab: V1140 = RETURNDATASIZE
0xcac: V1141 = 0x0
0xcae: REVERT 0x0 V1140
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1123, V1135]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1123, V1135]

================================

Block 0xcaf
[0xcaf:0xcc0]
---
Predecessors: [0xc9b]
Successors: [0xcc1, 0xcc5]
---
0xcaf JUMPDEST
0xcb0 POP
0xcb1 POP
0xcb2 POP
0xcb3 POP
0xcb4 PUSH1 0x40
0xcb6 MLOAD
0xcb7 RETURNDATASIZE
0xcb8 PUSH1 0x20
0xcba DUP2
0xcbb LT
0xcbc ISZERO
0xcbd PUSH2 0xcc5
0xcc0 JUMPI
---
0xcaf: JUMPDEST 
0xcb4: V1142 = 0x40
0xcb6: V1143 = M[0x40]
0xcb7: V1144 = RETURNDATASIZE
0xcb8: V1145 = 0x20
0xcbb: V1146 = LT V1144 0x20
0xcbc: V1147 = ISZERO V1146
0xcbd: V1148 = 0xcc5
0xcc0: JUMPI 0xcc5 V1147
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1070, 0xa9059cbb, V1123, V1135]
Stack pops: 4
Stack additions: [V1143, V1144]
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1143, V1144]

================================

Block 0xcc1
[0xcc1:0xcc4]
---
Predecessors: [0xcaf]
Successors: []
---
0xcc1 PUSH1 0x0
0xcc3 DUP1
0xcc4 REVERT
---
0xcc1: V1149 = 0x0
0xcc4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1143, V1144]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0, V1143, V1144]

================================

Block 0xcc5
[0xcc5:0xcc7]
---
Predecessors: [0xcaf]
Successors: [0xcc8]
---
0xcc5 JUMPDEST
0xcc6 POP
0xcc7 POP
---
0xcc5: JUMPDEST 
---
Entry stack: [V13, 0x21c, V349, V353, 0x0, V1143, V1144]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x21c, V349, V353, 0x0]

================================

Block 0xcc8
[0xcc8:0xcd0]
---
Predecessors: [0xbad, 0xcc5]
Successors: [0x21c]
---
0xcc8 JUMPDEST
0xcc9 POP
0xcca PUSH1 0x1
0xccc SWAP3
0xccd SWAP2
0xcce POP
0xccf POP
0xcd0 JUMP
---
0xcc8: JUMPDEST 
0xcca: V1150 = 0x1
0xcd0: JUMP 0x21c
---
Entry stack: [V13, 0x21c, V349, V353, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0xcd1
[0xcd1:0xcea]
---
Predecessors: [0x3ed]
Successors: [0xceb, 0xcfd]
---
0xcd1 JUMPDEST
0xcd2 PUSH1 0x3
0xcd4 SLOAD
0xcd5 PUSH1 0x0
0xcd7 SWAP1
0xcd8 PUSH1 0x1
0xcda PUSH1 0xa0
0xcdc PUSH1 0x2
0xcde EXP
0xcdf SUB
0xce0 DUP4
0xce1 DUP2
0xce2 AND
0xce3 SWAP2
0xce4 AND
0xce5 EQ
0xce6 DUP1
0xce7 PUSH2 0xcfd
0xcea JUMPI
---
0xcd1: JUMPDEST 
0xcd2: V1151 = 0x3
0xcd4: V1152 = S[0x3]
0xcd5: V1153 = 0x0
0xcd8: V1154 = 0x1
0xcda: V1155 = 0xa0
0xcdc: V1156 = 0x2
0xcde: V1157 = EXP 0x2 0xa0
0xcdf: V1158 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce2: V1159 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0xce4: V1160 = AND V1152 0xffffffffffffffffffffffffffffffffffffffff
0xce5: V1161 = EQ V1160 V1159
0xce7: V1162 = 0xcfd
0xcea: JUMPI 0xcfd V1161
---
Entry stack: [V13, 0x1e3, V367, V370]
Stack pops: 1
Stack additions: [S0, 0x0, V1161]
Exit stack: [V13, 0x1e3, V367, V370, 0x0, V1161]

================================

Block 0xceb
[0xceb:0xcfc]
---
Predecessors: [0xcd1]
Successors: [0xcfd]
---
0xceb POP
0xcec PUSH1 0x4
0xcee SLOAD
0xcef PUSH1 0x1
0xcf1 PUSH1 0xa0
0xcf3 PUSH1 0x2
0xcf5 EXP
0xcf6 SUB
0xcf7 DUP4
0xcf8 DUP2
0xcf9 AND
0xcfa SWAP2
0xcfb AND
0xcfc EQ
---
0xcec: V1163 = 0x4
0xcee: V1164 = S[0x4]
0xcef: V1165 = 0x1
0xcf1: V1166 = 0xa0
0xcf3: V1167 = 0x2
0xcf5: V1168 = EXP 0x2 0xa0
0xcf6: V1169 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf9: V1170 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0xcfb: V1171 = AND V1164 0xffffffffffffffffffffffffffffffffffffffff
0xcfc: V1172 = EQ V1171 V1170
---
Entry stack: [V13, 0x1e3, V367, V370, 0x0, V1161]
Stack pops: 3
Stack additions: [S2, S1, V1172]
Exit stack: [V13, 0x1e3, V367, V370, 0x0, V1172]

================================

Block 0xcfd
[0xcfd:0xd02]
---
Predecessors: [0xcd1, 0xceb]
Successors: [0x9d4, 0xd03]
---
0xcfd JUMPDEST
0xcfe ISZERO
0xcff PUSH2 0x9d4
0xd02 JUMPI
---
0xcfd: JUMPDEST 
0xcfe: V1173 = ISZERO S0
0xcff: V1174 = 0x9d4
0xd02: JUMPI 0x9d4 V1173
---
Entry stack: [V13, 0x1e3, V367, V370, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1e3, V367, V370, 0x0]

================================

Block 0xd03
[0xd03:0xd0a]
---
Predecessors: [0xcfd]
Successors: [0x9d4]
---
0xd03 POP
0xd04 PUSH1 0x0
0xd06 NOT
0xd07 PUSH2 0x9d4
0xd0a JUMP
---
0xd04: V1175 = 0x0
0xd06: V1176 = NOT 0x0
0xd07: V1177 = 0x9d4
0xd0a: JUMP 0x9d4
---
Entry stack: [V13, 0x1e3, V367, V370, 0x0]
Stack pops: 1
Stack additions: [0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]
Exit stack: [V13, 0x1e3, V367, V370, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]

================================

Block 0xd0b
[0xd0b:0xd16]
---
Predecessors: [0x408]
Successors: [0xd17, 0xd1b]
---
0xd0b JUMPDEST
0xd0c PUSH1 0x0
0xd0e PUSH1 0x1
0xd10 DUP3
0xd11 LT
0xd12 ISZERO
0xd13 PUSH2 0xd1b
0xd16 JUMPI
---
0xd0b: JUMPDEST 
0xd0c: V1178 = 0x0
0xd0e: V1179 = 0x1
0xd11: V1180 = LT V376 0x1
0xd12: V1181 = ISZERO V1180
0xd13: V1182 = 0xd1b
0xd16: JUMPI 0xd1b V1181
---
Entry stack: [V13, 0x21c, V374, V376]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V13, 0x21c, V374, V376, 0x0]

================================

Block 0xd17
[0xd17:0xd1a]
---
Predecessors: [0xd0b]
Successors: []
---
0xd17 PUSH1 0x0
0xd19 DUP1
0xd1a REVERT
---
0xd17: V1183 = 0x0
0xd1a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V374, V376, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V374, V376, 0x0]

================================

Block 0xd1b
[0xd1b:0xd38]
---
Predecessors: [0xd0b]
Successors: [0xd39, 0xd3d]
---
0xd1b JUMPDEST
0xd1c CALLER
0xd1d PUSH1 0x0
0xd1f SWAP1
0xd20 DUP2
0xd21 MSTORE
0xd22 PUSH1 0xa
0xd24 PUSH1 0x20
0xd26 MSTORE
0xd27 PUSH1 0x40
0xd29 SWAP1
0xd2a SHA3
0xd2b SLOAD
0xd2c TIMESTAMP
0xd2d PUSH2 0xe10
0xd30 DUP5
0xd31 MUL
0xd32 ADD
0xd33 LT
0xd34 ISZERO
0xd35 PUSH2 0xd3d
0xd38 JUMPI
---
0xd1b: JUMPDEST 
0xd1c: V1184 = CALLER
0xd1d: V1185 = 0x0
0xd21: M[0x0] = V1184
0xd22: V1186 = 0xa
0xd24: V1187 = 0x20
0xd26: M[0x20] = 0xa
0xd27: V1188 = 0x40
0xd2a: V1189 = SHA3 0x0 0x40
0xd2b: V1190 = S[V1189]
0xd2c: V1191 = TIMESTAMP
0xd2d: V1192 = 0xe10
0xd31: V1193 = MUL V376 0xe10
0xd32: V1194 = ADD V1193 V1191
0xd33: V1195 = LT V1194 V1190
0xd34: V1196 = ISZERO V1195
0xd35: V1197 = 0xd3d
0xd38: JUMPI 0xd3d V1196
---
Entry stack: [V13, 0x21c, V374, V376, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x21c, V374, V376, 0x0]

================================

Block 0xd39
[0xd39:0xd3c]
---
Predecessors: [0xd1b]
Successors: []
---
0xd39 PUSH1 0x0
0xd3b DUP1
0xd3c REVERT
---
0xd39: V1198 = 0x0
0xd3c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, V374, V376, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V374, V376, 0x0]

================================

Block 0xd3d
[0xd3d:0xd5c]
---
Predecessors: [0xd1b]
Successors: [0xe8e]
---
0xd3d JUMPDEST
0xd3e CALLER
0xd3f PUSH1 0x0
0xd41 SWAP1
0xd42 DUP2
0xd43 MSTORE
0xd44 PUSH1 0xb
0xd46 PUSH1 0x20
0xd48 MSTORE
0xd49 PUSH1 0x40
0xd4b SWAP1
0xd4c SHA3
0xd4d SLOAD
0xd4e PUSH2 0xd5d
0xd51 SWAP1
0xd52 CALLVALUE
0xd53 PUSH4 0xffffffff
0xd58 PUSH2 0xe8e
0xd5b AND
0xd5c JUMP
---
0xd3d: JUMPDEST 
0xd3e: V1199 = CALLER
0xd3f: V1200 = 0x0
0xd43: M[0x0] = V1199
0xd44: V1201 = 0xb
0xd46: V1202 = 0x20
0xd48: M[0x20] = 0xb
0xd49: V1203 = 0x40
0xd4c: V1204 = SHA3 0x0 0x40
0xd4d: V1205 = S[V1204]
0xd4e: V1206 = 0xd5d
0xd52: V1207 = CALLVALUE
0xd53: V1208 = 0xffffffff
0xd58: V1209 = 0xe8e
0xd5b: V1210 = AND 0xe8e 0xffffffff
0xd5c: JUMP 0xe8e
---
Entry stack: [V13, 0x21c, V374, V376, 0x0]
Stack pops: 0
Stack additions: [0xd5d, V1205, V1207]
Exit stack: [V13, 0x21c, V374, V376, 0x0, 0xd5d, V1205, V1207]

================================

Block 0xd5d
[0xd5d:0xd7f]
---
Predecessors: [0xe9d]
Successors: [0xe8e]
---
0xd5d JUMPDEST
0xd5e CALLER
0xd5f PUSH1 0x0
0xd61 SWAP1
0xd62 DUP2
0xd63 MSTORE
0xd64 PUSH1 0xb
0xd66 PUSH1 0x20
0xd68 MSTORE
0xd69 PUSH1 0x40
0xd6b SWAP1
0xd6c SHA3
0xd6d SSTORE
0xd6e PUSH1 0x1
0xd70 SLOAD
0xd71 PUSH2 0xd80
0xd74 SWAP1
0xd75 CALLVALUE
0xd76 PUSH4 0xffffffff
0xd7b PUSH2 0xe8e
0xd7e AND
0xd7f JUMP
---
0xd5d: JUMPDEST 
0xd5e: V1211 = CALLER
0xd5f: V1212 = 0x0
0xd63: M[0x0] = V1211
0xd64: V1213 = 0xb
0xd66: V1214 = 0x20
0xd68: M[0x20] = 0xb
0xd69: V1215 = 0x40
0xd6c: V1216 = SHA3 0x0 0x40
0xd6d: S[V1216] = S0
0xd6e: V1217 = 0x1
0xd70: V1218 = S[0x1]
0xd71: V1219 = 0xd80
0xd75: V1220 = CALLVALUE
0xd76: V1221 = 0xffffffff
0xd7b: V1222 = 0xe8e
0xd7e: V1223 = AND 0xe8e 0xffffffff
0xd7f: JUMP 0xe8e
---
Entry stack: [V13, {0x21c, 0x25a}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0xd80, V1218, V1220]
Exit stack: [V13, {0x21c, 0x25a}, S3, S2, S1, 0xd80, V1218, V1220]

================================

Block 0xd80
[0xd80:0xda4]
---
Predecessors: [0xe9d]
Successors: [0x21c, 0x25a]
---
0xd80 JUMPDEST
0xd81 PUSH1 0x1
0xd83 SWAP1
0xd84 DUP2
0xd85 SSTORE
0xd86 CALLER
0xd87 PUSH1 0x0
0xd89 SWAP1
0xd8a DUP2
0xd8b MSTORE
0xd8c PUSH1 0xa
0xd8e PUSH1 0x20
0xd90 MSTORE
0xd91 PUSH1 0x40
0xd93 SWAP1
0xd94 SHA3
0xd95 TIMESTAMP
0xd96 PUSH2 0xe10
0xd99 DUP6
0xd9a MUL
0xd9b ADD
0xd9c SWAP1
0xd9d SSTORE
0xd9e SWAP1
0xd9f POP
0xda0 SWAP3
0xda1 SWAP2
0xda2 POP
0xda3 POP
0xda4 JUMP
---
0xd80: JUMPDEST 
0xd81: V1224 = 0x1
0xd85: S[0x1] = S0
0xd86: V1225 = CALLER
0xd87: V1226 = 0x0
0xd8b: M[0x0] = V1225
0xd8c: V1227 = 0xa
0xd8e: V1228 = 0x20
0xd90: M[0x20] = 0xa
0xd91: V1229 = 0x40
0xd94: V1230 = SHA3 0x0 0x40
0xd95: V1231 = TIMESTAMP
0xd96: V1232 = 0xe10
0xd9a: V1233 = MUL S2 0xe10
0xd9b: V1234 = ADD V1233 V1231
0xd9d: S[V1230] = V1234
0xda4: JUMP {0x21c, 0x25a}
---
Entry stack: [V13, {0x21c, 0x25a}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0xda5
[0xda5:0xdbe]
---
Predecessors: [0x422]
Successors: [0xdbf, 0xdc3]
---
0xda5 JUMPDEST
0xda6 CALLER
0xda7 PUSH1 0x0
0xda9 SWAP1
0xdaa DUP2
0xdab MSTORE
0xdac PUSH1 0x5
0xdae PUSH1 0x20
0xdb0 MSTORE
0xdb1 PUSH1 0x40
0xdb3 SWAP1
0xdb4 SHA3
0xdb5 SLOAD
0xdb6 PUSH1 0xff
0xdb8 AND
0xdb9 ISZERO
0xdba ISZERO
0xdbb PUSH2 0xdc3
0xdbe JUMPI
---
0xda5: JUMPDEST 
0xda6: V1235 = CALLER
0xda7: V1236 = 0x0
0xdab: M[0x0] = V1235
0xdac: V1237 = 0x5
0xdae: V1238 = 0x20
0xdb0: M[0x20] = 0x5
0xdb1: V1239 = 0x40
0xdb4: V1240 = SHA3 0x0 0x40
0xdb5: V1241 = S[V1240]
0xdb6: V1242 = 0xff
0xdb8: V1243 = AND 0xff V1241
0xdb9: V1244 = ISZERO V1243
0xdba: V1245 = ISZERO V1244
0xdbb: V1246 = 0xdc3
0xdbe: JUMPI 0xdc3 V1245
---
Entry stack: [V13, 0x25a, V390]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x25a, V390]

================================

Block 0xdbf
[0xdbf:0xdc2]
---
Predecessors: [0xda5]
Successors: []
---
0xdbf PUSH1 0x0
0xdc1 DUP1
0xdc2 REVERT
---
0xdbf: V1247 = 0x0
0xdc2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x25a, V390]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x25a, V390]

================================

Block 0xdc3
[0xdc3:0xde6]
---
Predecessors: [0xda5]
Successors: [0x25a]
---
0xdc3 JUMPDEST
0xdc4 PUSH1 0x1
0xdc6 PUSH1 0xa0
0xdc8 PUSH1 0x2
0xdca EXP
0xdcb SUB
0xdcc AND
0xdcd PUSH1 0x0
0xdcf SWAP1
0xdd0 DUP2
0xdd1 MSTORE
0xdd2 PUSH1 0x5
0xdd4 PUSH1 0x20
0xdd6 MSTORE
0xdd7 PUSH1 0x40
0xdd9 SWAP1
0xdda SHA3
0xddb DUP1
0xddc SLOAD
0xddd PUSH1 0xff
0xddf NOT
0xde0 AND
0xde1 PUSH1 0x1
0xde3 OR
0xde4 SWAP1
0xde5 SSTORE
0xde6 JUMP
---
0xdc3: JUMPDEST 
0xdc4: V1248 = 0x1
0xdc6: V1249 = 0xa0
0xdc8: V1250 = 0x2
0xdca: V1251 = EXP 0x2 0xa0
0xdcb: V1252 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdcc: V1253 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0xdcd: V1254 = 0x0
0xdd1: M[0x0] = V1253
0xdd2: V1255 = 0x5
0xdd4: V1256 = 0x20
0xdd6: M[0x20] = 0x5
0xdd7: V1257 = 0x40
0xdda: V1258 = SHA3 0x0 0x40
0xddc: V1259 = S[V1258]
0xddd: V1260 = 0xff
0xddf: V1261 = NOT 0xff
0xde0: V1262 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1259
0xde1: V1263 = 0x1
0xde3: V1264 = OR 0x1 V1262
0xde5: S[V1258] = V1264
0xde6: JUMP 0x25a
---
Entry stack: [V13, 0x25a, V390]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xde7
[0xde7:0xdf9]
---
Predecessors: [0x443]
Successors: [0xdfa, 0xdfe]
---
0xde7 JUMPDEST
0xde8 PUSH1 0x2
0xdea SLOAD
0xdeb PUSH1 0x1
0xded PUSH1 0xa0
0xdef PUSH1 0x2
0xdf1 EXP
0xdf2 SUB
0xdf3 AND
0xdf4 CALLER
0xdf5 EQ
0xdf6 PUSH2 0xdfe
0xdf9 JUMPI
---
0xde7: JUMPDEST 
0xde8: V1265 = 0x2
0xdea: V1266 = S[0x2]
0xdeb: V1267 = 0x1
0xded: V1268 = 0xa0
0xdef: V1269 = 0x2
0xdf1: V1270 = EXP 0x2 0xa0
0xdf2: V1271 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf3: V1272 = AND 0xffffffffffffffffffffffffffffffffffffffff V1266
0xdf4: V1273 = CALLER
0xdf5: V1274 = EQ V1273 V1272
0xdf6: V1275 = 0xdfe
0xdf9: JUMPI 0xdfe V1274
---
Entry stack: [V13, 0x25a, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x25a, V404]

================================

Block 0xdfa
[0xdfa:0xdfd]
---
Predecessors: [0xde7]
Successors: []
---
0xdfa PUSH1 0x0
0xdfc DUP1
0xdfd REVERT
---
0xdfa: V1276 = 0x0
0xdfd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x25a, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x25a, V404]

================================

Block 0xdfe
[0xdfe:0xe0e]
---
Predecessors: [0xde7]
Successors: [0xe0f, 0xe13]
---
0xdfe JUMPDEST
0xdff PUSH1 0x1
0xe01 PUSH1 0xa0
0xe03 PUSH1 0x2
0xe05 EXP
0xe06 SUB
0xe07 DUP2
0xe08 AND
0xe09 ISZERO
0xe0a ISZERO
0xe0b PUSH2 0xe13
0xe0e JUMPI
---
0xdfe: JUMPDEST 
0xdff: V1277 = 0x1
0xe01: V1278 = 0xa0
0xe03: V1279 = 0x2
0xe05: V1280 = EXP 0x2 0xa0
0xe06: V1281 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe08: V1282 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0xe09: V1283 = ISZERO V1282
0xe0a: V1284 = ISZERO V1283
0xe0b: V1285 = 0xe13
0xe0e: JUMPI 0xe13 V1284
---
Entry stack: [V13, 0x25a, V404]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x25a, V404]

================================

Block 0xe0f
[0xe0f:0xe12]
---
Predecessors: [0xdfe]
Successors: []
---
0xe0f PUSH1 0x0
0xe11 DUP1
0xe12 REVERT
---
0xe0f: V1286 = 0x0
0xe12: REVERT 0x0 0x0
---
Entry stack: [V13, 0x25a, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x25a, V404]

================================

Block 0xe13
[0xe13:0xe7b]
---
Predecessors: [0xdfe]
Successors: [0x25a]
---
0xe13 JUMPDEST
0xe14 PUSH1 0x2
0xe16 SLOAD
0xe17 PUSH1 0x40
0xe19 MLOAD
0xe1a PUSH1 0x1
0xe1c PUSH1 0xa0
0xe1e PUSH1 0x2
0xe20 EXP
0xe21 SUB
0xe22 DUP1
0xe23 DUP5
0xe24 AND
0xe25 SWAP3
0xe26 AND
0xe27 SWAP1
0xe28 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe49 SWAP1
0xe4a PUSH1 0x0
0xe4c SWAP1
0xe4d LOG3
0xe4e PUSH1 0x2
0xe50 DUP1
0xe51 SLOAD
0xe52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe67 NOT
0xe68 AND
0xe69 PUSH1 0x1
0xe6b PUSH1 0xa0
0xe6d PUSH1 0x2
0xe6f EXP
0xe70 SUB
0xe71 SWAP3
0xe72 SWAP1
0xe73 SWAP3
0xe74 AND
0xe75 SWAP2
0xe76 SWAP1
0xe77 SWAP2
0xe78 OR
0xe79 SWAP1
0xe7a SSTORE
0xe7b JUMP
---
0xe13: JUMPDEST 
0xe14: V1287 = 0x2
0xe16: V1288 = S[0x2]
0xe17: V1289 = 0x40
0xe19: V1290 = M[0x40]
0xe1a: V1291 = 0x1
0xe1c: V1292 = 0xa0
0xe1e: V1293 = 0x2
0xe20: V1294 = EXP 0x2 0xa0
0xe21: V1295 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe24: V1296 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0xe26: V1297 = AND V1288 0xffffffffffffffffffffffffffffffffffffffff
0xe28: V1298 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe4a: V1299 = 0x0
0xe4d: LOG V1290 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1297 V1296
0xe4e: V1300 = 0x2
0xe51: V1301 = S[0x2]
0xe52: V1302 = 0xffffffffffffffffffffffffffffffffffffffff
0xe67: V1303 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe68: V1304 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1301
0xe69: V1305 = 0x1
0xe6b: V1306 = 0xa0
0xe6d: V1307 = 0x2
0xe6f: V1308 = EXP 0x2 0xa0
0xe70: V1309 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe74: V1310 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0xe78: V1311 = OR V1310 V1304
0xe7a: S[0x2] = V1311
0xe7b: JUMP 0x25a
---
Entry stack: [V13, 0x25a, V404]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xe7c
[0xe7c:0xe86]
---
Predecessors: [0x52a, 0x549, 0x5f5, 0x615, 0x771]
Successors: [0xe87, 0xe88]
---
0xe7c JUMPDEST
0xe7d PUSH1 0x0
0xe7f DUP3
0xe80 DUP3
0xe81 GT
0xe82 ISZERO
0xe83 PUSH2 0xe88
0xe86 JUMPI
---
0xe7c: JUMPDEST 
0xe7d: V1312 = 0x0
0xe81: V1313 = GT S0 S1
0xe82: V1314 = ISZERO V1313
0xe83: V1315 = 0xe88
0xe86: JUMPI 0xe88 V1314
---
Entry stack: [V13, 0x21c, V161, S7, S6, S5, S4, S3, {0x549, 0x56c, 0x615, 0x638, 0x7ad}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, 0x21c, V161, S7, S6, S5, S4, S3, {0x549, 0x56c, 0x615, 0x638, 0x7ad}, S1, S0, 0x0]

================================

Block 0xe87
[0xe87:0xe87]
---
Predecessors: [0xe7c]
Successors: []
---
0xe87 INVALID
---
0xe87: INVALID 
---
Entry stack: [V13, 0x21c, V161, S8, S7, S6, S5, S4, {0x549, 0x56c, 0x615, 0x638, 0x7ad}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V161, S8, S7, S6, S5, S4, {0x549, 0x56c, 0x615, 0x638, 0x7ad}, S2, S1, 0x0]

================================

Block 0xe88
[0xe88:0xe8d]
---
Predecessors: [0xe7c]
Successors: [0x549, 0x56c, 0x615, 0x638, 0x7ad]
---
0xe88 JUMPDEST
0xe89 POP
0xe8a SWAP1
0xe8b SUB
0xe8c SWAP1
0xe8d JUMP
---
0xe88: JUMPDEST 
0xe8b: V1316 = SUB S2 S1
0xe8d: JUMP {0x549, 0x56c, 0x615, 0x638, 0x7ad}
---
Entry stack: [V13, 0x21c, V161, S8, S7, S6, S5, S4, {0x549, 0x56c, 0x615, 0x638, 0x7ad}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1316]
Exit stack: [V13, 0x21c, V161, S8, S7, S6, S5, S4, V1316]

================================

Block 0xe8e
[0xe8e:0xe9b]
---
Predecessors: [0x6f9, 0xd3d, 0xd5d]
Successors: [0xe9c, 0xe9d]
---
0xe8e JUMPDEST
0xe8f PUSH1 0x0
0xe91 DUP3
0xe92 DUP3
0xe93 ADD
0xe94 DUP4
0xe95 DUP2
0xe96 LT
0xe97 ISZERO
0xe98 PUSH2 0xe9d
0xe9b JUMPI
---
0xe8e: JUMPDEST 
0xe8f: V1317 = 0x0
0xe93: V1318 = ADD S0 S1
0xe96: V1319 = LT V1318 S1
0xe97: V1320 = ISZERO V1319
0xe98: V1321 = 0xe9d
0xe9b: JUMPI 0xe9d V1320
---
Entry stack: [V13, {0x21c, 0x25a}, S5, S4, S3, {0x722, 0xd5d, 0xd80}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1318]
Exit stack: [V13, {0x21c, 0x25a}, S5, S4, S3, {0x722, 0xd5d, 0xd80}, S1, S0, 0x0, V1318]

================================

Block 0xe9c
[0xe9c:0xe9c]
---
Predecessors: [0xe8e]
Successors: []
---
0xe9c INVALID
---
0xe9c: INVALID 
---
Entry stack: [V13, {0x21c, 0x25a}, S7, S6, S5, {0x722, 0xd5d, 0xd80}, S3, S2, 0x0, V1318]
Stack pops: 0
Stack additions: []
Exit stack: [V13, {0x21c, 0x25a}, S7, S6, S5, {0x722, 0xd5d, 0xd80}, S3, S2, 0x0, V1318]

================================

Block 0xe9d
[0xe9d:0xea3]
---
Predecessors: [0xe8e]
Successors: [0x722, 0xd5d, 0xd80]
---
0xe9d JUMPDEST
0xe9e SWAP4
0xe9f SWAP3
0xea0 POP
0xea1 POP
0xea2 POP
0xea3 JUMP
---
0xe9d: JUMPDEST 
0xea3: JUMP {0x722, 0xd5d, 0xd80}
---
Entry stack: [V13, {0x21c, 0x25a}, S7, S6, S5, {0x722, 0xd5d, 0xd80}, S3, S2, 0x0, V1318]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, {0x21c, 0x25a}, S7, S6, S5, V1318]

================================

Block 0xea4
[0xea4:0xecf]
---
Predecessors: []
Successors: []
---
0xea4 STOP
0xea5 LOG1
0xea6 PUSH6 0x627a7a723058
0xead SHA3
0xeae MISSING 0xc9
0xeaf DELEGATECALL
0xeb0 MISSING 0xc7
0xeb1 DIFFICULTY
0xeb2 MISSING 0xc6
0xeb3 CREATE2
0xeb4 MISSING 0x4b
0xeb5 SHA3
0xeb6 PUSH6 0xe414369bc763
0xebd NUMBER
0xebe MISSING 0x1f
0xebf LOG3
0xec0 SUB
0xec1 MISSING 0xe7
0xec2 CALLDATALOAD
0xec3 CREATE2
0xec4 MISSING 0x5f
0xec5 PUSH2 0x6be6
0xec8 SWAP12
0xec9 EXTCODEHASH
0xeca MISSING 0x24
0xecb GASLIMIT
0xecc MISSING 0x5c
0xecd LOG0
0xece STOP
0xecf MISSING 0x29
---
0xea4: STOP 
0xea5: LOG S0 S1 S2
0xea6: V1322 = 0x627a7a723058
0xead: V1323 = SHA3 0x627a7a723058 S3
0xeae: MISSING 0xc9
0xeaf: V1324 = DELEGATECALL S0 S1 S2 S3 S4 S5
0xeb0: MISSING 0xc7
0xeb1: V1325 = DIFFICULTY
0xeb2: MISSING 0xc6
0xeb3: V1326 = CREATE2 S0 S1 S2 S3
0xeb4: MISSING 0x4b
0xeb5: V1327 = SHA3 S0 S1
0xeb6: V1328 = 0xe414369bc763
0xebd: V1329 = NUMBER
0xebe: MISSING 0x1f
0xebf: LOG S0 S1 S2 S3 S4
0xec0: V1330 = SUB S5 S6
0xec1: MISSING 0xe7
0xec2: V1331 = CALLDATALOAD S0
0xec3: V1332 = CREATE2 V1331 S1 S2 S3
0xec4: MISSING 0x5f
0xec5: V1333 = 0x6be6
0xec9: V1334 = EXTCODEHASH S11
0xeca: MISSING 0x24
0xecb: V1335 = GASLIMIT
0xecc: MISSING 0x5c
0xecd: LOG S0 S1
0xece: STOP 
0xecf: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1323, V1324, V1325, V1326, V1329, 0xe414369bc763, V1327, V1330, V1332, V1334, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x6be6, V1335]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x113
Exit block: 0x18f
Body: 0x113, 0x11b, 0x11f, 0x128, 0x14a, 0x153, 0x162, 0x176, 0x18f, 0x458, 0x498, 0x4a0, 0x4b3, 0x4c1, 0x4d5, 0x4de

Function 1:
Public function signature: 0xe7c1cb5
Entry block: 0x19d
Exit block: 0x1b2
Body: 0x19d, 0x1a5, 0x1a9, 0x1b2, 0x4e6

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1ce
Exit block: 0x1e3
Body: 0x1ce, 0x1d6, 0x1da, 0x1e3, 0x4f5

Function 3:
Public function signature: 0x1d6f757d
Entry block: 0x1f5
Exit block: 0x25a
Body: 0x1f5, 0x1fd, 0x201, 0x25a, 0x4fb, 0x507, 0x50e, 0x512, 0x52a, 0x549, 0x5a2, 0x5aa, 0x5ae, 0x5ea, 0x5f1, 0x5f5, 0x615

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x230
Exit block: 0x25a
Body: 0x230, 0x238, 0x23c, 0x25a, 0x684, 0x6a6, 0x6c3, 0x6ca, 0x6ce, 0x6e2, 0x6f1, 0x6f8, 0x6f9, 0x722, 0x74e, 0x757, 0x771, 0x7ad

Function 5:
Public function signature: 0x27e235e3
Entry block: 0x25c
Exit block: 0x1e3
Body: 0x1e3, 0x25c, 0x264, 0x268, 0x80b

Function 6:
Public function signature: 0x313ce567
Entry block: 0x27d
Exit block: 0x1e3
Body: 0x1e3, 0x27d, 0x285, 0x289, 0x81d

Function 7:
Public function signature: 0x45164b3e
Entry block: 0x292
Exit block: 0x1b2
Body: 0x1b2, 0x292, 0x29a, 0x29e, 0x823

Function 8:
Public function signature: 0x70a08231
Entry block: 0x2a7
Exit block: 0x2af
Body: 0x1e3, 0x2a7, 0x2af, 0x2b3

Function 9:
Public function signature: 0x74f1d6ce
Entry block: 0x2c8
Exit block: 0x1e3
Body: 0x1e3, 0x2c8, 0x2d0, 0x2d4, 0x84d

Function 10:
Public function signature: 0x7df73e27
Entry block: 0x2f2
Exit block: 0x21c
Body: 0x21c, 0x2f2, 0x2fa, 0x2fe, 0x88f

Function 11:
Public function signature: 0x8b257d3d
Entry block: 0x313
Exit block: 0x31b
Body: 0x21c, 0x313, 0x31b, 0x31f

Function 12:
Public function signature: 0x8da5cb5b
Entry block: 0x337
Exit block: 0x1b2
Body: 0x1b2, 0x337, 0x33f, 0x343, 0x967

Function 13:
Public function signature: 0x95d89b41
Entry block: 0x34c
Exit block: 0x18f
Body: 0x128, 0x14a, 0x153, 0x162, 0x176, 0x18f, 0x34c, 0x354, 0x358, 0x4b3, 0x4c1, 0x4d5, 0x4de, 0x976, 0x9b6, 0x9be

Function 14:
Public function signature: 0xa9059cbb
Entry block: 0x361
Exit block: 0x21c
Body: 0x1e3, 0x21c, 0x361, 0x369, 0x36d, 0x9d1, 0x9d4

Function 15:
Public function signature: 0xad93640f
Entry block: 0x385
Exit block: 0x1b2
Body: 0x1b2, 0x385, 0x38d, 0x391, 0x9da

Function 16:
Public function signature: 0xcc891023
Entry block: 0x39a
Exit block: 0x1e3
Body: 0x1e3, 0x39a, 0x3a2, 0x3a6, 0x9e9

Function 17:
Public function signature: 0xd9ee369a
Entry block: 0x3bb
Exit block: 0x21c
Body: 0x21c, 0x3bb, 0x3c3, 0x3c7, 0x9fb, 0xa11, 0xa15, 0xa75, 0xa79, 0xa84, 0xa8d, 0xa9f, 0xaa3, 0xaab, 0xaaf, 0xab6, 0xb1d, 0xb21, 0xb2c, 0xb35, 0xb47, 0xb4b, 0xb95, 0xb99, 0xba4, 0xbad, 0xbb6, 0xc1e, 0xc22, 0xc2d, 0xc36, 0xc48, 0xc4c, 0xc97, 0xc9b, 0xca6, 0xcaf, 0xcc1, 0xcc5, 0xcc8

Function 18:
Public function signature: 0xdd62ed3e
Entry block: 0x3e1
Exit block: 0x21c
Body: 0x1e3, 0x21c, 0x3e1, 0x3e9, 0x3ed, 0x9d4, 0xcd1, 0xceb, 0xcfd, 0xd03

Function 19:
Public function signature: 0xe2bbb158
Entry block: 0x408
Exit block: 0x25a
Body: 0x25a, 0x408, 0xd0b, 0xd17, 0xd1b, 0xd39, 0xd3d, 0xd5d

Function 20:
Public function signature: 0xeb12d61e
Entry block: 0x416
Exit block: 0x25a
Body: 0x25a, 0x416, 0x41e, 0x422, 0xda5, 0xdbf, 0xdc3

Function 21:
Public function signature: 0xf2fde38b
Entry block: 0x437
Exit block: 0x25a
Body: 0x25a, 0x437, 0x43f, 0x443, 0xde7, 0xdfa, 0xdfe, 0xe0f, 0xe13

Function 22:
Public fallback function
Entry block: 0x10e
Exit block: 0x10e
Body: 0x10e

Function 23:
Private function
Entry block: 0xe7c
Exit block: 0xe88
Body: 0xe7c, 0xe88

Function 24:
Private function
Entry block: 0xe8e
Exit block: 0xe9d
Body: 0xe8e, 0xe9d

Function 25:
Private function
Entry block: 0x8a4
Exit block: 0x937
Body: 0x8a4, 0x937

