Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xdb]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xdb
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xdb
0xc: JUMPI 0xdb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x781]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x7da68f5
0x3c EQ
0x3d PUSH2 0x781
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x7da68f5
0x3c: V13 = EQ 0x7da68f5 V11
0x3d: V14 = 0x781
0x40: JUMPI 0x781 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7b0]
---
0x41 DUP1
0x42 PUSH4 0xbafd2b7
0x47 EQ
0x48 PUSH2 0x7b0
0x4b JUMPI
---
0x42: V15 = 0xbafd2b7
0x47: V16 = EQ 0xbafd2b7 V11
0x48: V17 = 0x7b0
0x4b: JUMPI 0x7b0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x7db]
---
0x4c DUP1
0x4d PUSH4 0x18160ddd
0x52 EQ
0x53 PUSH2 0x7db
0x56 JUMPI
---
0x4d: V18 = 0x18160ddd
0x52: V19 = EQ 0x18160ddd V11
0x53: V20 = 0x7db
0x56: JUMPI 0x7db V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x806]
---
0x57 DUP1
0x58 PUSH4 0x2024f83c
0x5d EQ
0x5e PUSH2 0x806
0x61 JUMPI
---
0x58: V21 = 0x2024f83c
0x5d: V22 = EQ 0x2024f83c V11
0x5e: V23 = 0x806
0x61: JUMPI 0x806 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x849]
---
0x62 DUP1
0x63 PUSH4 0x38af3eed
0x68 EQ
0x69 PUSH2 0x849
0x6c JUMPI
---
0x63: V24 = 0x38af3eed
0x68: V25 = EQ 0x38af3eed V11
0x69: V26 = 0x849
0x6c: JUMPI 0x849 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x8a0]
---
0x6d DUP1
0x6e PUSH4 0x5fc441ce
0x73 EQ
0x74 PUSH2 0x8a0
0x77 JUMPI
---
0x6e: V27 = 0x5fc441ce
0x73: V28 = EQ 0x5fc441ce V11
0x74: V29 = 0x8a0
0x77: JUMPI 0x8a0 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x8cb]
---
0x78 DUP1
0x79 PUSH4 0x624f011d
0x7e EQ
0x7f PUSH2 0x8cb
0x82 JUMPI
---
0x79: V30 = 0x624f011d
0x7e: V31 = EQ 0x624f011d V11
0x7f: V32 = 0x8cb
0x82: JUMPI 0x8cb V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x8e2]
---
0x83 DUP1
0x84 PUSH4 0x62c2819d
0x89 EQ
0x8a PUSH2 0x8e2
0x8d JUMPI
---
0x84: V33 = 0x62c2819d
0x89: V34 = EQ 0x62c2819d V11
0x8a: V35 = 0x8e2
0x8d: JUMPI 0x8e2 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x8f9]
---
0x8e DUP1
0x8f PUSH4 0x6e58231c
0x94 EQ
0x95 PUSH2 0x8f9
0x98 JUMPI
---
0x8f: V36 = 0x6e58231c
0x94: V37 = EQ 0x6e58231c V11
0x95: V38 = 0x8f9
0x98: JUMPI 0x8f9 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x928]
---
0x99 DUP1
0x9a PUSH4 0x76b71205
0x9f EQ
0xa0 PUSH2 0x928
0xa3 JUMPI
---
0x9a: V39 = 0x76b71205
0x9f: V40 = EQ 0x76b71205 V11
0xa0: V41 = 0x928
0xa3: JUMPI 0x928 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x97f]
---
0xa4 DUP1
0xa5 PUSH4 0x79d303ae
0xaa EQ
0xab PUSH2 0x97f
0xae JUMPI
---
0xa5: V42 = 0x79d303ae
0xaa: V43 = EQ 0x79d303ae V11
0xab: V44 = 0x97f
0xae: JUMPI 0x97f V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x996]
---
0xaf DUP1
0xb0 PUSH4 0x9643d882
0xb5 EQ
0xb6 PUSH2 0x996
0xb9 JUMPI
---
0xb0: V45 = 0x9643d882
0xb5: V46 = EQ 0x9643d882 V11
0xb6: V47 = 0x996
0xb9: JUMPI 0x996 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x9ed]
---
0xba DUP1
0xbb PUSH4 0xb67f8396
0xc0 EQ
0xc1 PUSH2 0x9ed
0xc4 JUMPI
---
0xbb: V48 = 0xb67f8396
0xc0: V49 = EQ 0xb67f8396 V11
0xc1: V50 = 0x9ed
0xc4: JUMPI 0x9ed V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0xa18]
---
0xc5 DUP1
0xc6 PUSH4 0xc5e48e53
0xcb EQ
0xcc PUSH2 0xa18
0xcf JUMPI
---
0xc6: V51 = 0xc5e48e53
0xcb: V52 = EQ 0xc5e48e53 V11
0xcc: V53 = 0xa18
0xcf: JUMPI 0xa18 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0xc5]
Successors: [0xdb, 0xa47]
---
0xd0 DUP1
0xd1 PUSH4 0xf0ce4ac5
0xd6 EQ
0xd7 PUSH2 0xa47
0xda JUMPI
---
0xd1: V54 = 0xf0ce4ac5
0xd6: V55 = EQ 0xf0ce4ac5 V11
0xd7: V56 = 0xa47
0xda: JUMPI 0xa47 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xf4]
---
Predecessors: [0x0, 0xd0]
Successors: [0xf5, 0xf6]
---
0xdb JUMPDEST
0xdc PUSH1 0x0
0xde PUSH1 0x5
0xe0 PUSH1 0x1
0xe2 SWAP1
0xe3 SLOAD
0xe4 SWAP1
0xe5 PUSH2 0x100
0xe8 EXP
0xe9 SWAP1
0xea DIV
0xeb PUSH1 0xff
0xed AND
0xee ISZERO
0xef ISZERO
0xf0 ISZERO
0xf1 PUSH2 0xf6
0xf4 JUMPI
---
0xdb: JUMPDEST 
0xdc: V57 = 0x0
0xde: V58 = 0x5
0xe0: V59 = 0x1
0xe3: V60 = S[0x5]
0xe5: V61 = 0x100
0xe8: V62 = EXP 0x100 0x1
0xea: V63 = DIV V60 0x100
0xeb: V64 = 0xff
0xed: V65 = AND 0xff V63
0xee: V66 = ISZERO V65
0xef: V67 = ISZERO V66
0xf0: V68 = ISZERO V67
0xf1: V69 = 0xf6
0xf4: JUMPI 0xf6 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xf5
[0xf5:0xf5]
---
Predecessors: [0xdb]
Successors: []
---
0xf5 INVALID
---
0xf5: INVALID 
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xf6
[0xf6:0x10b]
---
Predecessors: [0xdb]
Successors: [0x10c, 0x110]
---
0xf6 JUMPDEST
0xf7 PUSH1 0x5
0xf9 PUSH1 0x1
0xfb SWAP1
0xfc SLOAD
0xfd SWAP1
0xfe PUSH2 0x100
0x101 EXP
0x102 SWAP1
0x103 DIV
0x104 PUSH1 0xff
0x106 AND
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0xf6: JUMPDEST 
0xf7: V70 = 0x5
0xf9: V71 = 0x1
0xfc: V72 = S[0x5]
0xfe: V73 = 0x100
0x101: V74 = EXP 0x100 0x1
0x103: V75 = DIV V72 0x100
0x104: V76 = 0xff
0x106: V77 = AND 0xff V75
0x107: V78 = ISZERO V77
0x108: V79 = 0x110
0x10b: JUMPI 0x110 V78
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0xf6]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V80 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x110
[0x110:0x125]
---
Predecessors: [0xf6]
Successors: [0x126, 0x137]
---
0x110 JUMPDEST
0x111 PUSH1 0x5
0x113 PUSH1 0x2
0x115 SWAP1
0x116 SLOAD
0x117 SWAP1
0x118 PUSH2 0x100
0x11b EXP
0x11c SWAP1
0x11d DIV
0x11e PUSH1 0xff
0x120 AND
0x121 DUP1
0x122 PUSH2 0x137
0x125 JUMPI
---
0x110: JUMPDEST 
0x111: V81 = 0x5
0x113: V82 = 0x2
0x116: V83 = S[0x5]
0x118: V84 = 0x100
0x11b: V85 = EXP 0x100 0x2
0x11d: V86 = DIV V83 0x10000
0x11e: V87 = 0xff
0x120: V88 = AND 0xff V86
0x122: V89 = 0x137
0x125: JUMPI 0x137 V88
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, 0x0, V88]

================================

Block 0x126
[0x126:0x136]
---
Predecessors: [0x110]
Successors: [0x137]
---
0x126 POP
0x127 PUSH1 0x5
0x129 PUSH1 0x3
0x12b SWAP1
0x12c SLOAD
0x12d SWAP1
0x12e PUSH2 0x100
0x131 EXP
0x132 SWAP1
0x133 DIV
0x134 PUSH1 0xff
0x136 AND
---
0x127: V90 = 0x5
0x129: V91 = 0x3
0x12c: V92 = S[0x5]
0x12e: V93 = 0x100
0x131: V94 = EXP 0x100 0x3
0x133: V95 = DIV V92 0x1000000
0x134: V96 = 0xff
0x136: V97 = AND 0xff V95
---
Entry stack: [V11, 0x0, V88]
Stack pops: 1
Stack additions: [V97]
Exit stack: [V11, 0x0, V97]

================================

Block 0x137
[0x137:0x13c]
---
Predecessors: [0x110, 0x126]
Successors: [0x13d, 0x141]
---
0x137 JUMPDEST
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x137: JUMPDEST 
0x138: V98 = ISZERO S0
0x139: V99 = 0x141
0x13c: JUMPI 0x141 V98
---
Entry stack: [V11, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x137]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V100 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x141
[0x141:0x158]
---
Predecessors: [0x137]
Successors: [0x159, 0x160]
---
0x141 JUMPDEST
0x142 PUSH1 0x7
0x144 PUSH1 0x0
0x146 SWAP1
0x147 SLOAD
0x148 SWAP1
0x149 PUSH2 0x100
0x14c EXP
0x14d SWAP1
0x14e DIV
0x14f PUSH1 0xff
0x151 AND
0x152 ISZERO
0x153 DUP1
0x154 ISZERO
0x155 PUSH2 0x160
0x158 JUMPI
---
0x141: JUMPDEST 
0x142: V101 = 0x7
0x144: V102 = 0x0
0x147: V103 = S[0x7]
0x149: V104 = 0x100
0x14c: V105 = EXP 0x100 0x0
0x14e: V106 = DIV V103 0x1
0x14f: V107 = 0xff
0x151: V108 = AND 0xff V106
0x152: V109 = ISZERO V108
0x154: V110 = ISZERO V109
0x155: V111 = 0x160
0x158: JUMPI 0x160 V110
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: [V109]
Exit stack: [V11, 0x0, V109]

================================

Block 0x159
[0x159:0x15f]
---
Predecessors: [0x141]
Successors: [0x160]
---
0x159 POP
0x15a PUSH1 0x3
0x15c SLOAD
0x15d TIMESTAMP
0x15e GT
0x15f ISZERO
---
0x15a: V112 = 0x3
0x15c: V113 = S[0x3]
0x15d: V114 = TIMESTAMP
0x15e: V115 = GT V114 V113
0x15f: V116 = ISZERO V115
---
Entry stack: [V11, 0x0, V109]
Stack pops: 1
Stack additions: [V116]
Exit stack: [V11, 0x0, V116]

================================

Block 0x160
[0x160:0x165]
---
Predecessors: [0x141, 0x159]
Successors: [0x166, 0x36d]
---
0x160 JUMPDEST
0x161 ISZERO
0x162 PUSH2 0x36d
0x165 JUMPI
---
0x160: JUMPDEST 
0x161: V117 = ISZERO S0
0x162: V118 = 0x36d
0x165: JUMPI 0x36d V117
---
Entry stack: [V11, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x166
[0x166:0x220]
---
Predecessors: [0x160]
Successors: [0x221, 0x222]
---
0x166 CALLVALUE
0x167 SWAP1
0x168 POP
0x169 DUP1
0x16a PUSH1 0x6
0x16c PUSH1 0x0
0x16e CALLER
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 AND
0x185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19a AND
0x19b DUP2
0x19c MSTORE
0x19d PUSH1 0x20
0x19f ADD
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 PUSH1 0x0
0x1a8 SHA3
0x1a9 PUSH1 0x0
0x1ab DUP3
0x1ac DUP3
0x1ad SLOAD
0x1ae ADD
0x1af SWAP3
0x1b0 POP
0x1b1 POP
0x1b2 DUP2
0x1b3 SWAP1
0x1b4 SSTORE
0x1b5 POP
0x1b6 PUSH1 0x5
0x1b8 PUSH1 0x4
0x1ba SWAP1
0x1bb SLOAD
0x1bc SWAP1
0x1bd PUSH2 0x100
0x1c0 EXP
0x1c1 SWAP1
0x1c2 DIV
0x1c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d8 AND
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef PUSH4 0xa9059cbb
0x1f4 CALLER
0x1f5 PUSH8 0xde0b6b3a7640000
0x1fe PUSH1 0x5
0x200 PUSH1 0x0
0x202 SWAP1
0x203 SLOAD
0x204 SWAP1
0x205 PUSH2 0x100
0x208 EXP
0x209 SWAP1
0x20a DIV
0x20b PUSH1 0xff
0x20d AND
0x20e PUSH1 0xff
0x210 AND
0x211 PUSH1 0xa
0x213 EXP
0x214 PUSH1 0x4
0x216 SLOAD
0x217 DUP7
0x218 MUL
0x219 MUL
0x21a DUP2
0x21b ISZERO
0x21c ISZERO
0x21d PUSH2 0x222
0x220 JUMPI
---
0x166: V119 = CALLVALUE
0x16a: V120 = 0x6
0x16c: V121 = 0x0
0x16e: V122 = CALLER
0x16f: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x184: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x185: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x19c: M[0x0] = V126
0x19d: V127 = 0x20
0x19f: V128 = ADD 0x20 0x0
0x1a2: M[0x20] = 0x6
0x1a3: V129 = 0x20
0x1a5: V130 = ADD 0x20 0x20
0x1a6: V131 = 0x0
0x1a8: V132 = SHA3 0x0 0x40
0x1a9: V133 = 0x0
0x1ad: V134 = S[V132]
0x1ae: V135 = ADD V134 V119
0x1b4: S[V132] = V135
0x1b6: V136 = 0x5
0x1b8: V137 = 0x4
0x1bb: V138 = S[0x5]
0x1bd: V139 = 0x100
0x1c0: V140 = EXP 0x100 0x4
0x1c2: V141 = DIV V138 0x100000000
0x1c3: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x1d9: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x1ef: V146 = 0xa9059cbb
0x1f4: V147 = CALLER
0x1f5: V148 = 0xde0b6b3a7640000
0x1fe: V149 = 0x5
0x200: V150 = 0x0
0x203: V151 = S[0x5]
0x205: V152 = 0x100
0x208: V153 = EXP 0x100 0x0
0x20a: V154 = DIV V151 0x1
0x20b: V155 = 0xff
0x20d: V156 = AND 0xff V154
0x20e: V157 = 0xff
0x210: V158 = AND 0xff V156
0x211: V159 = 0xa
0x213: V160 = EXP 0xa V158
0x214: V161 = 0x4
0x216: V162 = S[0x4]
0x218: V163 = MUL V119 V162
0x219: V164 = MUL V163 V160
0x21b: V165 = ISZERO 0xde0b6b3a7640000
0x21c: V166 = ISZERO 0x0
0x21d: V167 = 0x222
0x220: JUMPI 0x222 0x1
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V119, V145, 0xa9059cbb, V147, 0xde0b6b3a7640000, V164]
Exit stack: [V11, V119, V145, 0xa9059cbb, V147, 0xde0b6b3a7640000, V164]

================================

Block 0x221
[0x221:0x221]
---
Predecessors: [0x166]
Successors: []
---
0x221 INVALID
---
0x221: INVALID 
---
Entry stack: [V11, V119, V145, 0xa9059cbb, V147, 0xde0b6b3a7640000, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119, V145, 0xa9059cbb, V147, 0xde0b6b3a7640000, V164]

================================

Block 0x222
[0x222:0x2a3]
---
Predecessors: [0x166]
Successors: [0x2a4, 0x2a8]
---
0x222 JUMPDEST
0x223 DIV
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP4
0x228 PUSH4 0xffffffff
0x22d AND
0x22e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x24c MUL
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x4
0x251 ADD
0x252 DUP1
0x253 DUP4
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x20
0x284 ADD
0x285 DUP3
0x286 DUP2
0x287 MSTORE
0x288 PUSH1 0x20
0x28a ADD
0x28b SWAP3
0x28c POP
0x28d POP
0x28e POP
0x28f PUSH1 0x20
0x291 PUSH1 0x40
0x293 MLOAD
0x294 DUP1
0x295 DUP4
0x296 SUB
0x297 DUP2
0x298 PUSH1 0x0
0x29a DUP8
0x29b DUP1
0x29c EXTCODESIZE
0x29d ISZERO
0x29e DUP1
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x222: JUMPDEST 
0x223: V168 = DIV V164 0xde0b6b3a7640000
0x224: V169 = 0x40
0x226: V170 = M[0x40]
0x228: V171 = 0xffffffff
0x22d: V172 = AND 0xffffffff 0xa9059cbb
0x22e: V173 = 0x100000000000000000000000000000000000000000000000000000000
0x24c: V174 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x24e: M[V170] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x24f: V175 = 0x4
0x251: V176 = ADD 0x4 V170
0x254: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x26a: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x281: M[V176] = V180
0x282: V181 = 0x20
0x284: V182 = ADD 0x20 V176
0x287: M[V182] = V168
0x288: V183 = 0x20
0x28a: V184 = ADD 0x20 V182
0x28f: V185 = 0x20
0x291: V186 = 0x40
0x293: V187 = M[0x40]
0x296: V188 = SUB V184 V187
0x298: V189 = 0x0
0x29c: V190 = EXTCODESIZE V145
0x29d: V191 = ISZERO V190
0x29f: V192 = ISZERO V191
0x2a0: V193 = 0x2a8
0x2a3: JUMPI 0x2a8 V192
---
Entry stack: [V11, V119, V145, 0xa9059cbb, V147, 0xde0b6b3a7640000, V164]
Stack pops: 5
Stack additions: [S4, S3, V184, 0x20, V187, V188, V187, 0x0, S4, V191]
Exit stack: [V11, V119, V145, 0xa9059cbb, V184, 0x20, V187, V188, V187, 0x0, V145, V191]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x222]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V194 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V11, V119, V145, 0xa9059cbb, V184, 0x20, V187, V188, V187, 0x0, V145, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119, V145, 0xa9059cbb, V184, 0x20, V187, V188, V187, 0x0, V145, V191]

================================

Block 0x2a8
[0x2a8:0x2b2]
---
Predecessors: [0x222]
Successors: [0x2b3, 0x2bc]
---
0x2a8 JUMPDEST
0x2a9 POP
0x2aa GAS
0x2ab CALL
0x2ac ISZERO
0x2ad DUP1
0x2ae ISZERO
0x2af PUSH2 0x2bc
0x2b2 JUMPI
---
0x2a8: JUMPDEST 
0x2aa: V195 = GAS
0x2ab: V196 = CALL V195 V145 0x0 V187 V188 V187 0x20
0x2ac: V197 = ISZERO V196
0x2ae: V198 = ISZERO V197
0x2af: V199 = 0x2bc
0x2b2: JUMPI 0x2bc V198
---
Entry stack: [V11, V119, V145, 0xa9059cbb, V184, 0x20, V187, V188, V187, 0x0, V145, V191]
Stack pops: 7
Stack additions: [V197]
Exit stack: [V11, V119, V145, 0xa9059cbb, V184, V197]

================================

Block 0x2b3
[0x2b3:0x2bb]
---
Predecessors: [0x2a8]
Successors: []
---
0x2b3 RETURNDATASIZE
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 RETURNDATACOPY
0x2b8 RETURNDATASIZE
0x2b9 PUSH1 0x0
0x2bb REVERT
---
0x2b3: V200 = RETURNDATASIZE
0x2b4: V201 = 0x0
0x2b7: RETURNDATACOPY 0x0 0x0 V200
0x2b8: V202 = RETURNDATASIZE
0x2b9: V203 = 0x0
0x2bb: REVERT 0x0 V202
---
Entry stack: [V11, V119, V145, 0xa9059cbb, V184, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119, V145, 0xa9059cbb, V184, V197]

================================

Block 0x2bc
[0x2bc:0x2cd]
---
Predecessors: [0x2a8]
Successors: [0x2ce, 0x2d2]
---
0x2bc JUMPDEST
0x2bd POP
0x2be POP
0x2bf POP
0x2c0 POP
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 RETURNDATASIZE
0x2c5 PUSH1 0x20
0x2c7 DUP2
0x2c8 LT
0x2c9 ISZERO
0x2ca PUSH2 0x2d2
0x2cd JUMPI
---
0x2bc: JUMPDEST 
0x2c1: V204 = 0x40
0x2c3: V205 = M[0x40]
0x2c4: V206 = RETURNDATASIZE
0x2c5: V207 = 0x20
0x2c8: V208 = LT V206 0x20
0x2c9: V209 = ISZERO V208
0x2ca: V210 = 0x2d2
0x2cd: JUMPI 0x2d2 V209
---
Entry stack: [V11, V119, V145, 0xa9059cbb, V184, V197]
Stack pops: 4
Stack additions: [V205, V206]
Exit stack: [V11, V119, V205, V206]

================================

Block 0x2ce
[0x2ce:0x2d1]
---
Predecessors: [0x2bc]
Successors: []
---
0x2ce PUSH1 0x0
0x2d0 DUP1
0x2d1 REVERT
---
0x2ce: V211 = 0x0
0x2d1: REVERT 0x0 0x0
---
Entry stack: [V11, V119, V205, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119, V205, V206]

================================

Block 0x2d2
[0x2d2:0x36c]
---
Predecessors: [0x2bc]
Successors: [0x36d]
---
0x2d2 JUMPDEST
0x2d3 DUP2
0x2d4 ADD
0x2d5 SWAP1
0x2d6 DUP1
0x2d7 DUP1
0x2d8 MLOAD
0x2d9 SWAP1
0x2da PUSH1 0x20
0x2dc ADD
0x2dd SWAP1
0x2de SWAP3
0x2df SWAP2
0x2e0 SWAP1
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 POP
0x2e5 DUP1
0x2e6 PUSH1 0x2
0x2e8 PUSH1 0x0
0x2ea DUP3
0x2eb DUP3
0x2ec SLOAD
0x2ed ADD
0x2ee SWAP3
0x2ef POP
0x2f0 POP
0x2f1 DUP2
0x2f2 SWAP1
0x2f3 SSTORE
0x2f4 POP
0x2f5 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x316 CALLER
0x317 DUP3
0x318 PUSH1 0x1
0x31a PUSH1 0x40
0x31c MLOAD
0x31d DUP1
0x31e DUP5
0x31f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x334 AND
0x335 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34a AND
0x34b DUP2
0x34c MSTORE
0x34d PUSH1 0x20
0x34f ADD
0x350 DUP4
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x20
0x355 ADD
0x356 DUP3
0x357 ISZERO
0x358 ISZERO
0x359 ISZERO
0x35a ISZERO
0x35b DUP2
0x35c MSTORE
0x35d PUSH1 0x20
0x35f ADD
0x360 SWAP4
0x361 POP
0x362 POP
0x363 POP
0x364 POP
0x365 PUSH1 0x40
0x367 MLOAD
0x368 DUP1
0x369 SWAP2
0x36a SUB
0x36b SWAP1
0x36c LOG1
---
0x2d2: JUMPDEST 
0x2d4: V212 = ADD V205 V206
0x2d8: V213 = M[V205]
0x2da: V214 = 0x20
0x2dc: V215 = ADD 0x20 V205
0x2e6: V216 = 0x2
0x2e8: V217 = 0x0
0x2ec: V218 = S[0x2]
0x2ed: V219 = ADD V218 V119
0x2f3: S[0x2] = V219
0x2f5: V220 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x316: V221 = CALLER
0x318: V222 = 0x1
0x31a: V223 = 0x40
0x31c: V224 = M[0x40]
0x31f: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x334: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x335: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x34a: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x34c: M[V224] = V228
0x34d: V229 = 0x20
0x34f: V230 = ADD 0x20 V224
0x352: M[V230] = V119
0x353: V231 = 0x20
0x355: V232 = ADD 0x20 V230
0x357: V233 = ISZERO 0x1
0x358: V234 = ISZERO 0x0
0x359: V235 = ISZERO 0x1
0x35a: V236 = ISZERO 0x0
0x35c: M[V232] = 0x1
0x35d: V237 = 0x20
0x35f: V238 = ADD 0x20 V232
0x365: V239 = 0x40
0x367: V240 = M[0x40]
0x36a: V241 = SUB V238 V240
0x36c: LOG V240 V241 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V11, V119, V205, V206]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V11, V119]

================================

Block 0x36d
[0x36d:0x378]
---
Predecessors: [0x160, 0x2d2]
Successors: [0x379, 0x382]
---
0x36d JUMPDEST
0x36e PUSH1 0x3
0x370 SLOAD
0x371 TIMESTAMP
0x372 LT
0x373 ISZERO
0x374 DUP1
0x375 PUSH2 0x382
0x378 JUMPI
---
0x36d: JUMPDEST 
0x36e: V242 = 0x3
0x370: V243 = S[0x3]
0x371: V244 = TIMESTAMP
0x372: V245 = LT V244 V243
0x373: V246 = ISZERO V245
0x375: V247 = 0x382
0x378: JUMPI 0x382 V246
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: [V246]
Exit stack: [V11, S0, V246]

================================

Block 0x379
[0x379:0x381]
---
Predecessors: [0x36d]
Successors: [0x382]
---
0x379 POP
0x37a PUSH1 0x1
0x37c SLOAD
0x37d PUSH1 0x2
0x37f SLOAD
0x380 LT
0x381 ISZERO
---
0x37a: V248 = 0x1
0x37c: V249 = S[0x1]
0x37d: V250 = 0x2
0x37f: V251 = S[0x2]
0x380: V252 = LT V251 V249
0x381: V253 = ISZERO V252
---
Entry stack: [V11, S1, V246]
Stack pops: 1
Stack additions: [V253]
Exit stack: [V11, S1, V253]

================================

Block 0x382
[0x382:0x388]
---
Predecessors: [0x36d, 0x379]
Successors: [0x389, 0x39b]
---
0x382 JUMPDEST
0x383 DUP1
0x384 ISZERO
0x385 PUSH2 0x39b
0x388 JUMPI
---
0x382: JUMPDEST 
0x384: V254 = ISZERO S0
0x385: V255 = 0x39b
0x388: JUMPI 0x39b V254
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S1, S0]

================================

Block 0x389
[0x389:0x39a]
---
Predecessors: [0x382]
Successors: [0x39b]
---
0x389 POP
0x38a PUSH1 0x5
0x38c PUSH1 0x1
0x38e SWAP1
0x38f SLOAD
0x390 SWAP1
0x391 PUSH2 0x100
0x394 EXP
0x395 SWAP1
0x396 DIV
0x397 PUSH1 0xff
0x399 AND
0x39a ISZERO
---
0x38a: V256 = 0x5
0x38c: V257 = 0x1
0x38f: V258 = S[0x5]
0x391: V259 = 0x100
0x394: V260 = EXP 0x100 0x1
0x396: V261 = DIV V258 0x100
0x397: V262 = 0xff
0x399: V263 = AND 0xff V261
0x39a: V264 = ISZERO V263
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: [V264]
Exit stack: [V11, S1, V264]

================================

Block 0x39b
[0x39b:0x3a0]
---
Predecessors: [0x382, 0x389]
Successors: [0x3a1, 0x77e]
---
0x39b JUMPDEST
0x39c ISZERO
0x39d PUSH2 0x77e
0x3a0 JUMPI
---
0x39b: JUMPDEST 
0x39c: V265 = ISZERO S0
0x39d: V266 = 0x77e
0x3a0: JUMPI 0x77e V265
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x3a1
[0x3a1:0x42e]
---
Predecessors: [0x39b]
Successors: [0x42f, 0x430]
---
0x3a1 PUSH1 0x5
0x3a3 PUSH1 0x4
0x3a5 SWAP1
0x3a6 SLOAD
0x3a7 SWAP1
0x3a8 PUSH2 0x100
0x3ab EXP
0x3ac SWAP1
0x3ad DIV
0x3ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c3 AND
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 AND
0x3da PUSH4 0xa9059cbb
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 SWAP1
0x3e3 SLOAD
0x3e4 SWAP1
0x3e5 PUSH2 0x100
0x3e8 EXP
0x3e9 SWAP1
0x3ea DIV
0x3eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x400 AND
0x401 PUSH8 0xde0b6b3a7640000
0x40a PUSH1 0x5
0x40c PUSH1 0x0
0x40e SWAP1
0x40f SLOAD
0x410 SWAP1
0x411 PUSH2 0x100
0x414 EXP
0x415 SWAP1
0x416 DIV
0x417 PUSH1 0xff
0x419 AND
0x41a PUSH1 0xff
0x41c AND
0x41d PUSH1 0xa
0x41f EXP
0x420 PUSH1 0x4
0x422 SLOAD
0x423 PUSH1 0x2
0x425 SLOAD
0x426 MUL
0x427 MUL
0x428 DUP2
0x429 ISZERO
0x42a ISZERO
0x42b PUSH2 0x430
0x42e JUMPI
---
0x3a1: V267 = 0x5
0x3a3: V268 = 0x4
0x3a6: V269 = S[0x5]
0x3a8: V270 = 0x100
0x3ab: V271 = EXP 0x100 0x4
0x3ad: V272 = DIV V269 0x100000000
0x3ae: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x3c4: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x3da: V277 = 0xa9059cbb
0x3df: V278 = 0x0
0x3e3: V279 = S[0x0]
0x3e5: V280 = 0x100
0x3e8: V281 = EXP 0x100 0x0
0x3ea: V282 = DIV V279 0x1
0x3eb: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x400: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x401: V285 = 0xde0b6b3a7640000
0x40a: V286 = 0x5
0x40c: V287 = 0x0
0x40f: V288 = S[0x5]
0x411: V289 = 0x100
0x414: V290 = EXP 0x100 0x0
0x416: V291 = DIV V288 0x1
0x417: V292 = 0xff
0x419: V293 = AND 0xff V291
0x41a: V294 = 0xff
0x41c: V295 = AND 0xff V293
0x41d: V296 = 0xa
0x41f: V297 = EXP 0xa V295
0x420: V298 = 0x4
0x422: V299 = S[0x4]
0x423: V300 = 0x2
0x425: V301 = S[0x2]
0x426: V302 = MUL V301 V299
0x427: V303 = MUL V302 V297
0x429: V304 = ISZERO 0xde0b6b3a7640000
0x42a: V305 = ISZERO 0x0
0x42b: V306 = 0x430
0x42e: JUMPI 0x430 0x1
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: [V276, 0xa9059cbb, V284, 0xde0b6b3a7640000, V303]
Exit stack: [V11, S0, V276, 0xa9059cbb, V284, 0xde0b6b3a7640000, V303]

================================

Block 0x42f
[0x42f:0x42f]
---
Predecessors: [0x3a1]
Successors: []
---
0x42f INVALID
---
0x42f: INVALID 
---
Entry stack: [V11, S5, V276, 0xa9059cbb, V284, 0xde0b6b3a7640000, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, V276, 0xa9059cbb, V284, 0xde0b6b3a7640000, V303]

================================

Block 0x430
[0x430:0x4b2]
---
Predecessors: [0x3a1]
Successors: [0x4b3, 0x4b7]
---
0x430 JUMPDEST
0x431 DIV
0x432 PUSH1 0x5
0x434 PUSH1 0x4
0x436 SWAP1
0x437 SLOAD
0x438 SWAP1
0x439 PUSH2 0x100
0x43c EXP
0x43d SWAP1
0x43e DIV
0x43f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x454 AND
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b PUSH4 0x18160ddd
0x470 PUSH1 0x40
0x472 MLOAD
0x473 DUP2
0x474 PUSH4 0xffffffff
0x479 AND
0x47a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x498 MUL
0x499 DUP2
0x49a MSTORE
0x49b PUSH1 0x4
0x49d ADD
0x49e PUSH1 0x20
0x4a0 PUSH1 0x40
0x4a2 MLOAD
0x4a3 DUP1
0x4a4 DUP4
0x4a5 SUB
0x4a6 DUP2
0x4a7 PUSH1 0x0
0x4a9 DUP8
0x4aa DUP1
0x4ab EXTCODESIZE
0x4ac ISZERO
0x4ad DUP1
0x4ae ISZERO
0x4af PUSH2 0x4b7
0x4b2 JUMPI
---
0x430: JUMPDEST 
0x431: V307 = DIV V303 0xde0b6b3a7640000
0x432: V308 = 0x5
0x434: V309 = 0x4
0x437: V310 = S[0x5]
0x439: V311 = 0x100
0x43c: V312 = EXP 0x100 0x4
0x43e: V313 = DIV V310 0x100000000
0x43f: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x454: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x455: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x46b: V318 = 0x18160ddd
0x470: V319 = 0x40
0x472: V320 = M[0x40]
0x474: V321 = 0xffffffff
0x479: V322 = AND 0xffffffff 0x18160ddd
0x47a: V323 = 0x100000000000000000000000000000000000000000000000000000000
0x498: V324 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x49a: M[V320] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x49b: V325 = 0x4
0x49d: V326 = ADD 0x4 V320
0x49e: V327 = 0x20
0x4a0: V328 = 0x40
0x4a2: V329 = M[0x40]
0x4a5: V330 = SUB V326 V329
0x4a7: V331 = 0x0
0x4ab: V332 = EXTCODESIZE V317
0x4ac: V333 = ISZERO V332
0x4ae: V334 = ISZERO V333
0x4af: V335 = 0x4b7
0x4b2: JUMPI 0x4b7 V334
---
Entry stack: [V11, S5, V276, 0xa9059cbb, V284, 0xde0b6b3a7640000, V303]
Stack pops: 2
Stack additions: [V307, V317, 0x18160ddd, V326, 0x20, V329, V330, V329, 0x0, V317, V333]
Exit stack: [V11, S5, V276, 0xa9059cbb, V284, V307, V317, 0x18160ddd, V326, 0x20, V329, V330, V329, 0x0, V317, V333]

================================

Block 0x4b3
[0x4b3:0x4b6]
---
Predecessors: [0x430]
Successors: []
---
0x4b3 PUSH1 0x0
0x4b5 DUP1
0x4b6 REVERT
---
0x4b3: V336 = 0x0
0x4b6: REVERT 0x0 0x0
---
Entry stack: [V11, S14, V276, 0xa9059cbb, V284, V307, V317, 0x18160ddd, V326, 0x20, V329, V330, V329, 0x0, V317, V333]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, V276, 0xa9059cbb, V284, V307, V317, 0x18160ddd, V326, 0x20, V329, V330, V329, 0x0, V317, V333]

================================

Block 0x4b7
[0x4b7:0x4c1]
---
Predecessors: [0x430]
Successors: [0x4c2, 0x4cb]
---
0x4b7 JUMPDEST
0x4b8 POP
0x4b9 GAS
0x4ba CALL
0x4bb ISZERO
0x4bc DUP1
0x4bd ISZERO
0x4be PUSH2 0x4cb
0x4c1 JUMPI
---
0x4b7: JUMPDEST 
0x4b9: V337 = GAS
0x4ba: V338 = CALL V337 V317 0x0 V329 V330 V329 0x20
0x4bb: V339 = ISZERO V338
0x4bd: V340 = ISZERO V339
0x4be: V341 = 0x4cb
0x4c1: JUMPI 0x4cb V340
---
Entry stack: [V11, S14, V276, 0xa9059cbb, V284, V307, V317, 0x18160ddd, V326, 0x20, V329, V330, V329, 0x0, V317, V333]
Stack pops: 7
Stack additions: [V339]
Exit stack: [V11, S14, V276, 0xa9059cbb, V284, V307, V317, 0x18160ddd, V326, V339]

================================

Block 0x4c2
[0x4c2:0x4ca]
---
Predecessors: [0x4b7]
Successors: []
---
0x4c2 RETURNDATASIZE
0x4c3 PUSH1 0x0
0x4c5 DUP1
0x4c6 RETURNDATACOPY
0x4c7 RETURNDATASIZE
0x4c8 PUSH1 0x0
0x4ca REVERT
---
0x4c2: V342 = RETURNDATASIZE
0x4c3: V343 = 0x0
0x4c6: RETURNDATACOPY 0x0 0x0 V342
0x4c7: V344 = RETURNDATASIZE
0x4c8: V345 = 0x0
0x4ca: REVERT 0x0 V344
---
Entry stack: [V11, S8, V276, 0xa9059cbb, V284, V307, V317, 0x18160ddd, V326, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, V276, 0xa9059cbb, V284, V307, V317, 0x18160ddd, V326, V339]

================================

Block 0x4cb
[0x4cb:0x4dc]
---
Predecessors: [0x4b7]
Successors: [0x4dd, 0x4e1]
---
0x4cb JUMPDEST
0x4cc POP
0x4cd POP
0x4ce POP
0x4cf POP
0x4d0 PUSH1 0x40
0x4d2 MLOAD
0x4d3 RETURNDATASIZE
0x4d4 PUSH1 0x20
0x4d6 DUP2
0x4d7 LT
0x4d8 ISZERO
0x4d9 PUSH2 0x4e1
0x4dc JUMPI
---
0x4cb: JUMPDEST 
0x4d0: V346 = 0x40
0x4d2: V347 = M[0x40]
0x4d3: V348 = RETURNDATASIZE
0x4d4: V349 = 0x20
0x4d7: V350 = LT V348 0x20
0x4d8: V351 = ISZERO V350
0x4d9: V352 = 0x4e1
0x4dc: JUMPI 0x4e1 V351
---
Entry stack: [V11, S8, V276, 0xa9059cbb, V284, V307, V317, 0x18160ddd, V326, V339]
Stack pops: 4
Stack additions: [V347, V348]
Exit stack: [V11, S8, V276, 0xa9059cbb, V284, V307, V347, V348]

================================

Block 0x4dd
[0x4dd:0x4e0]
---
Predecessors: [0x4cb]
Successors: []
---
0x4dd PUSH1 0x0
0x4df DUP1
0x4e0 REVERT
---
0x4dd: V353 = 0x0
0x4e0: REVERT 0x0 0x0
---
Entry stack: [V11, S6, V276, 0xa9059cbb, V284, V307, V347, V348]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, V276, 0xa9059cbb, V284, V307, V347, V348]

================================

Block 0x4e1
[0x4e1:0x573]
---
Predecessors: [0x4cb]
Successors: [0x574, 0x578]
---
0x4e1 JUMPDEST
0x4e2 DUP2
0x4e3 ADD
0x4e4 SWAP1
0x4e5 DUP1
0x4e6 DUP1
0x4e7 MLOAD
0x4e8 SWAP1
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec SWAP1
0x4ed SWAP3
0x4ee SWAP2
0x4ef SWAP1
0x4f0 POP
0x4f1 POP
0x4f2 POP
0x4f3 SUB
0x4f4 PUSH1 0x40
0x4f6 MLOAD
0x4f7 DUP4
0x4f8 PUSH4 0xffffffff
0x4fd AND
0x4fe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x51c MUL
0x51d DUP2
0x51e MSTORE
0x51f PUSH1 0x4
0x521 ADD
0x522 DUP1
0x523 DUP4
0x524 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x539 AND
0x53a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54f AND
0x550 DUP2
0x551 MSTORE
0x552 PUSH1 0x20
0x554 ADD
0x555 DUP3
0x556 DUP2
0x557 MSTORE
0x558 PUSH1 0x20
0x55a ADD
0x55b SWAP3
0x55c POP
0x55d POP
0x55e POP
0x55f PUSH1 0x20
0x561 PUSH1 0x40
0x563 MLOAD
0x564 DUP1
0x565 DUP4
0x566 SUB
0x567 DUP2
0x568 PUSH1 0x0
0x56a DUP8
0x56b DUP1
0x56c EXTCODESIZE
0x56d ISZERO
0x56e DUP1
0x56f ISZERO
0x570 PUSH2 0x578
0x573 JUMPI
---
0x4e1: JUMPDEST 
0x4e3: V354 = ADD V347 V348
0x4e7: V355 = M[V347]
0x4e9: V356 = 0x20
0x4eb: V357 = ADD 0x20 V347
0x4f3: V358 = SUB V355 V307
0x4f4: V359 = 0x40
0x4f6: V360 = M[0x40]
0x4f8: V361 = 0xffffffff
0x4fd: V362 = AND 0xffffffff 0xa9059cbb
0x4fe: V363 = 0x100000000000000000000000000000000000000000000000000000000
0x51c: V364 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x51e: M[V360] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x51f: V365 = 0x4
0x521: V366 = ADD 0x4 V360
0x524: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x539: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x53a: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x54f: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x551: M[V366] = V370
0x552: V371 = 0x20
0x554: V372 = ADD 0x20 V366
0x557: M[V372] = V358
0x558: V373 = 0x20
0x55a: V374 = ADD 0x20 V372
0x55f: V375 = 0x20
0x561: V376 = 0x40
0x563: V377 = M[0x40]
0x566: V378 = SUB V374 V377
0x568: V379 = 0x0
0x56c: V380 = EXTCODESIZE V276
0x56d: V381 = ISZERO V380
0x56f: V382 = ISZERO V381
0x570: V383 = 0x578
0x573: JUMPI 0x578 V382
---
Entry stack: [V11, S6, V276, 0xa9059cbb, V284, V307, V347, V348]
Stack pops: 6
Stack additions: [S5, S4, V374, 0x20, V377, V378, V377, 0x0, S5, V381]
Exit stack: [V11, S6, V276, 0xa9059cbb, V374, 0x20, V377, V378, V377, 0x0, V276, V381]

================================

Block 0x574
[0x574:0x577]
---
Predecessors: [0x4e1]
Successors: []
---
0x574 PUSH1 0x0
0x576 DUP1
0x577 REVERT
---
0x574: V384 = 0x0
0x577: REVERT 0x0 0x0
---
Entry stack: [V11, S10, V276, 0xa9059cbb, V374, 0x20, V377, V378, V377, 0x0, V276, V381]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, V276, 0xa9059cbb, V374, 0x20, V377, V378, V377, 0x0, V276, V381]

================================

Block 0x578
[0x578:0x582]
---
Predecessors: [0x4e1]
Successors: [0x583, 0x58c]
---
0x578 JUMPDEST
0x579 POP
0x57a GAS
0x57b CALL
0x57c ISZERO
0x57d DUP1
0x57e ISZERO
0x57f PUSH2 0x58c
0x582 JUMPI
---
0x578: JUMPDEST 
0x57a: V385 = GAS
0x57b: V386 = CALL V385 V276 0x0 V377 V378 V377 0x20
0x57c: V387 = ISZERO V386
0x57e: V388 = ISZERO V387
0x57f: V389 = 0x58c
0x582: JUMPI 0x58c V388
---
Entry stack: [V11, S10, V276, 0xa9059cbb, V374, 0x20, V377, V378, V377, 0x0, V276, V381]
Stack pops: 7
Stack additions: [V387]
Exit stack: [V11, S10, V276, 0xa9059cbb, V374, V387]

================================

Block 0x583
[0x583:0x58b]
---
Predecessors: [0x578]
Successors: []
---
0x583 RETURNDATASIZE
0x584 PUSH1 0x0
0x586 DUP1
0x587 RETURNDATACOPY
0x588 RETURNDATASIZE
0x589 PUSH1 0x0
0x58b REVERT
---
0x583: V390 = RETURNDATASIZE
0x584: V391 = 0x0
0x587: RETURNDATACOPY 0x0 0x0 V390
0x588: V392 = RETURNDATASIZE
0x589: V393 = 0x0
0x58b: REVERT 0x0 V392
---
Entry stack: [V11, S4, V276, 0xa9059cbb, V374, V387]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, V276, 0xa9059cbb, V374, V387]

================================

Block 0x58c
[0x58c:0x59d]
---
Predecessors: [0x578]
Successors: [0x59e, 0x5a2]
---
0x58c JUMPDEST
0x58d POP
0x58e POP
0x58f POP
0x590 POP
0x591 PUSH1 0x40
0x593 MLOAD
0x594 RETURNDATASIZE
0x595 PUSH1 0x20
0x597 DUP2
0x598 LT
0x599 ISZERO
0x59a PUSH2 0x5a2
0x59d JUMPI
---
0x58c: JUMPDEST 
0x591: V394 = 0x40
0x593: V395 = M[0x40]
0x594: V396 = RETURNDATASIZE
0x595: V397 = 0x20
0x598: V398 = LT V396 0x20
0x599: V399 = ISZERO V398
0x59a: V400 = 0x5a2
0x59d: JUMPI 0x5a2 V399
---
Entry stack: [V11, S4, V276, 0xa9059cbb, V374, V387]
Stack pops: 4
Stack additions: [V395, V396]
Exit stack: [V11, S4, V395, V396]

================================

Block 0x59e
[0x59e:0x5a1]
---
Predecessors: [0x58c]
Successors: []
---
0x59e PUSH1 0x0
0x5a0 DUP1
0x5a1 REVERT
---
0x59e: V401 = 0x0
0x5a1: REVERT 0x0 0x0
---
Entry stack: [V11, S2, V395, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, V395, V396]

================================

Block 0x5a2
[0x5a2:0x613]
---
Predecessors: [0x58c]
Successors: [0x614, 0x61d]
---
0x5a2 JUMPDEST
0x5a3 DUP2
0x5a4 ADD
0x5a5 SWAP1
0x5a6 DUP1
0x5a7 DUP1
0x5a8 MLOAD
0x5a9 SWAP1
0x5aa PUSH1 0x20
0x5ac ADD
0x5ad SWAP1
0x5ae SWAP3
0x5af SWAP2
0x5b0 SWAP1
0x5b1 POP
0x5b2 POP
0x5b3 POP
0x5b4 POP
0x5b5 PUSH1 0x0
0x5b7 DUP1
0x5b8 SWAP1
0x5b9 SLOAD
0x5ba SWAP1
0x5bb PUSH2 0x100
0x5be EXP
0x5bf SWAP1
0x5c0 DIV
0x5c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d6 AND
0x5d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ec AND
0x5ed PUSH2 0x8fc
0x5f0 PUSH1 0x2
0x5f2 SLOAD
0x5f3 SWAP1
0x5f4 DUP2
0x5f5 ISZERO
0x5f6 MUL
0x5f7 SWAP1
0x5f8 PUSH1 0x40
0x5fa MLOAD
0x5fb PUSH1 0x0
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 DUP1
0x601 DUP4
0x602 SUB
0x603 DUP2
0x604 DUP6
0x605 DUP9
0x606 DUP9
0x607 CALL
0x608 SWAP4
0x609 POP
0x60a POP
0x60b POP
0x60c POP
0x60d ISZERO
0x60e DUP1
0x60f ISZERO
0x610 PUSH2 0x61d
0x613 JUMPI
---
0x5a2: JUMPDEST 
0x5a4: V402 = ADD V395 V396
0x5a8: V403 = M[V395]
0x5aa: V404 = 0x20
0x5ac: V405 = ADD 0x20 V395
0x5b5: V406 = 0x0
0x5b9: V407 = S[0x0]
0x5bb: V408 = 0x100
0x5be: V409 = EXP 0x100 0x0
0x5c0: V410 = DIV V407 0x1
0x5c1: V411 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d6: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x5d7: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ec: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x5ed: V415 = 0x8fc
0x5f0: V416 = 0x2
0x5f2: V417 = S[0x2]
0x5f5: V418 = ISZERO V417
0x5f6: V419 = MUL V418 0x8fc
0x5f8: V420 = 0x40
0x5fa: V421 = M[0x40]
0x5fb: V422 = 0x0
0x5fd: V423 = 0x40
0x5ff: V424 = M[0x40]
0x602: V425 = SUB V421 V424
0x607: V426 = CALL V419 V414 V417 V424 V425 V424 0x0
0x60d: V427 = ISZERO V426
0x60f: V428 = ISZERO V427
0x610: V429 = 0x61d
0x613: JUMPI 0x61d V428
---
Entry stack: [V11, S2, V395, V396]
Stack pops: 2
Stack additions: [V427]
Exit stack: [V11, S2, V427]

================================

Block 0x614
[0x614:0x61c]
---
Predecessors: [0x5a2]
Successors: []
---
0x614 RETURNDATASIZE
0x615 PUSH1 0x0
0x617 DUP1
0x618 RETURNDATACOPY
0x619 RETURNDATASIZE
0x61a PUSH1 0x0
0x61c REVERT
---
0x614: V430 = RETURNDATASIZE
0x615: V431 = 0x0
0x618: RETURNDATACOPY 0x0 0x0 V430
0x619: V432 = RETURNDATASIZE
0x61a: V433 = 0x0
0x61c: REVERT 0x0 V432
---
Entry stack: [V11, S1, V427]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, V427]

================================

Block 0x61d
[0x61d:0x77d]
---
Predecessors: [0x5a2]
Successors: [0x77e]
---
0x61d JUMPDEST
0x61e POP
0x61f PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x640 PUSH1 0x0
0x642 DUP1
0x643 SWAP1
0x644 SLOAD
0x645 SWAP1
0x646 PUSH2 0x100
0x649 EXP
0x64a SWAP1
0x64b DIV
0x64c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x661 AND
0x662 PUSH1 0x2
0x664 SLOAD
0x665 PUSH1 0x0
0x667 PUSH1 0x40
0x669 MLOAD
0x66a DUP1
0x66b DUP5
0x66c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x681 AND
0x682 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x697 AND
0x698 DUP2
0x699 MSTORE
0x69a PUSH1 0x20
0x69c ADD
0x69d DUP4
0x69e DUP2
0x69f MSTORE
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 DUP3
0x6a4 ISZERO
0x6a5 ISZERO
0x6a6 ISZERO
0x6a7 ISZERO
0x6a8 DUP2
0x6a9 MSTORE
0x6aa PUSH1 0x20
0x6ac ADD
0x6ad SWAP4
0x6ae POP
0x6af POP
0x6b0 POP
0x6b1 POP
0x6b2 PUSH1 0x40
0x6b4 MLOAD
0x6b5 DUP1
0x6b6 SWAP2
0x6b7 SUB
0x6b8 SWAP1
0x6b9 LOG1
0x6ba PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x6db PUSH1 0x0
0x6dd DUP1
0x6de SWAP1
0x6df SLOAD
0x6e0 SWAP1
0x6e1 PUSH2 0x100
0x6e4 EXP
0x6e5 SWAP1
0x6e6 DIV
0x6e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fc AND
0x6fd PUSH1 0x2
0x6ff SLOAD
0x700 PUSH1 0x40
0x702 MLOAD
0x703 DUP1
0x704 DUP4
0x705 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71a AND
0x71b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x730 AND
0x731 DUP2
0x732 MSTORE
0x733 PUSH1 0x20
0x735 ADD
0x736 DUP3
0x737 DUP2
0x738 MSTORE
0x739 PUSH1 0x20
0x73b ADD
0x73c SWAP3
0x73d POP
0x73e POP
0x73f POP
0x740 PUSH1 0x40
0x742 MLOAD
0x743 DUP1
0x744 SWAP2
0x745 SUB
0x746 SWAP1
0x747 LOG1
0x748 PUSH1 0x1
0x74a PUSH1 0x7
0x74c PUSH1 0x0
0x74e PUSH2 0x100
0x751 EXP
0x752 DUP2
0x753 SLOAD
0x754 DUP2
0x755 PUSH1 0xff
0x757 MUL
0x758 NOT
0x759 AND
0x75a SWAP1
0x75b DUP4
0x75c ISZERO
0x75d ISZERO
0x75e MUL
0x75f OR
0x760 SWAP1
0x761 SSTORE
0x762 POP
0x763 PUSH1 0x1
0x765 PUSH1 0x5
0x767 PUSH1 0x1
0x769 PUSH2 0x100
0x76c EXP
0x76d DUP2
0x76e SLOAD
0x76f DUP2
0x770 PUSH1 0xff
0x772 MUL
0x773 NOT
0x774 AND
0x775 SWAP1
0x776 DUP4
0x777 ISZERO
0x778 ISZERO
0x779 MUL
0x77a OR
0x77b SWAP1
0x77c SSTORE
0x77d POP
---
0x61d: JUMPDEST 
0x61f: V434 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x640: V435 = 0x0
0x644: V436 = S[0x0]
0x646: V437 = 0x100
0x649: V438 = EXP 0x100 0x0
0x64b: V439 = DIV V436 0x1
0x64c: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x661: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x662: V442 = 0x2
0x664: V443 = S[0x2]
0x665: V444 = 0x0
0x667: V445 = 0x40
0x669: V446 = M[0x40]
0x66c: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x681: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x682: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x697: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x699: M[V446] = V450
0x69a: V451 = 0x20
0x69c: V452 = ADD 0x20 V446
0x69f: M[V452] = V443
0x6a0: V453 = 0x20
0x6a2: V454 = ADD 0x20 V452
0x6a4: V455 = ISZERO 0x0
0x6a5: V456 = ISZERO 0x1
0x6a6: V457 = ISZERO 0x0
0x6a7: V458 = ISZERO 0x1
0x6a9: M[V454] = 0x0
0x6aa: V459 = 0x20
0x6ac: V460 = ADD 0x20 V454
0x6b2: V461 = 0x40
0x6b4: V462 = M[0x40]
0x6b7: V463 = SUB V460 V462
0x6b9: LOG V462 V463 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6ba: V464 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x6db: V465 = 0x0
0x6df: V466 = S[0x0]
0x6e1: V467 = 0x100
0x6e4: V468 = EXP 0x100 0x0
0x6e6: V469 = DIV V466 0x1
0x6e7: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fc: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x6fd: V472 = 0x2
0x6ff: V473 = S[0x2]
0x700: V474 = 0x40
0x702: V475 = M[0x40]
0x705: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x71a: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x71b: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x730: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x732: M[V475] = V479
0x733: V480 = 0x20
0x735: V481 = ADD 0x20 V475
0x738: M[V481] = V473
0x739: V482 = 0x20
0x73b: V483 = ADD 0x20 V481
0x740: V484 = 0x40
0x742: V485 = M[0x40]
0x745: V486 = SUB V483 V485
0x747: LOG V485 V486 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x748: V487 = 0x1
0x74a: V488 = 0x7
0x74c: V489 = 0x0
0x74e: V490 = 0x100
0x751: V491 = EXP 0x100 0x0
0x753: V492 = S[0x7]
0x755: V493 = 0xff
0x757: V494 = MUL 0xff 0x1
0x758: V495 = NOT 0xff
0x759: V496 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V492
0x75c: V497 = ISZERO 0x1
0x75d: V498 = ISZERO 0x0
0x75e: V499 = MUL 0x1 0x1
0x75f: V500 = OR 0x1 V496
0x761: S[0x7] = V500
0x763: V501 = 0x1
0x765: V502 = 0x5
0x767: V503 = 0x1
0x769: V504 = 0x100
0x76c: V505 = EXP 0x100 0x1
0x76e: V506 = S[0x5]
0x770: V507 = 0xff
0x772: V508 = MUL 0xff 0x100
0x773: V509 = NOT 0xff00
0x774: V510 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V506
0x777: V511 = ISZERO 0x1
0x778: V512 = ISZERO 0x0
0x779: V513 = MUL 0x1 0x100
0x77a: V514 = OR 0x100 V510
0x77c: S[0x5] = V514
---
Entry stack: [V11, S1, V427]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x77e
[0x77e:0x780]
---
Predecessors: [0x39b, 0x61d]
Successors: []
---
0x77e JUMPDEST
0x77f POP
0x780 STOP
---
0x77e: JUMPDEST 
0x780: STOP 
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x781
[0x781:0x788]
---
Predecessors: [0xd]
Successors: [0x789, 0x78d]
---
0x781 JUMPDEST
0x782 CALLVALUE
0x783 DUP1
0x784 ISZERO
0x785 PUSH2 0x78d
0x788 JUMPI
---
0x781: JUMPDEST 
0x782: V515 = CALLVALUE
0x784: V516 = ISZERO V515
0x785: V517 = 0x78d
0x788: JUMPI 0x78d V516
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V515]
Exit stack: [V11, V515]

================================

Block 0x789
[0x789:0x78c]
---
Predecessors: [0x781]
Successors: []
---
0x789 PUSH1 0x0
0x78b DUP1
0x78c REVERT
---
0x789: V518 = 0x0
0x78c: REVERT 0x0 0x0
---
Entry stack: [V11, V515]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V515]

================================

Block 0x78d
[0x78d:0x795]
---
Predecessors: [0x781]
Successors: [0xa76]
---
0x78d JUMPDEST
0x78e POP
0x78f PUSH2 0x796
0x792 PUSH2 0xa76
0x795 JUMP
---
0x78d: JUMPDEST 
0x78f: V519 = 0x796
0x792: V520 = 0xa76
0x795: JUMP 0xa76
---
Entry stack: [V11, V515]
Stack pops: 1
Stack additions: [0x796]
Exit stack: [V11, 0x796]

================================

Block 0x796
[0x796:0x7af]
---
Predecessors: [0xa76]
Successors: []
---
0x796 JUMPDEST
0x797 PUSH1 0x40
0x799 MLOAD
0x79a DUP1
0x79b DUP3
0x79c ISZERO
0x79d ISZERO
0x79e ISZERO
0x79f ISZERO
0x7a0 DUP2
0x7a1 MSTORE
0x7a2 PUSH1 0x20
0x7a4 ADD
0x7a5 SWAP2
0x7a6 POP
0x7a7 POP
0x7a8 PUSH1 0x40
0x7aa MLOAD
0x7ab DUP1
0x7ac SWAP2
0x7ad SUB
0x7ae SWAP1
0x7af RETURN
---
0x796: JUMPDEST 
0x797: V521 = 0x40
0x799: V522 = M[0x40]
0x79c: V523 = ISZERO V736
0x79d: V524 = ISZERO V523
0x79e: V525 = ISZERO V524
0x79f: V526 = ISZERO V525
0x7a1: M[V522] = V526
0x7a2: V527 = 0x20
0x7a4: V528 = ADD 0x20 V522
0x7a8: V529 = 0x40
0x7aa: V530 = M[0x40]
0x7ad: V531 = SUB V528 V530
0x7af: RETURN V530 V531
---
Entry stack: [V11, 0x796, V736]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x796]

================================

Block 0x7b0
[0x7b0:0x7b7]
---
Predecessors: [0x41]
Successors: [0x7b8, 0x7bc]
---
0x7b0 JUMPDEST
0x7b1 CALLVALUE
0x7b2 DUP1
0x7b3 ISZERO
0x7b4 PUSH2 0x7bc
0x7b7 JUMPI
---
0x7b0: JUMPDEST 
0x7b1: V532 = CALLVALUE
0x7b3: V533 = ISZERO V532
0x7b4: V534 = 0x7bc
0x7b7: JUMPI 0x7bc V533
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V532]
Exit stack: [V11, V532]

================================

Block 0x7b8
[0x7b8:0x7bb]
---
Predecessors: [0x7b0]
Successors: []
---
0x7b8 PUSH1 0x0
0x7ba DUP1
0x7bb REVERT
---
0x7b8: V535 = 0x0
0x7bb: REVERT 0x0 0x0
---
Entry stack: [V11, V532]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V532]

================================

Block 0x7bc
[0x7bc:0x7c4]
---
Predecessors: [0x7b0]
Successors: [0xa89]
---
0x7bc JUMPDEST
0x7bd POP
0x7be PUSH2 0x7c5
0x7c1 PUSH2 0xa89
0x7c4 JUMP
---
0x7bc: JUMPDEST 
0x7be: V536 = 0x7c5
0x7c1: V537 = 0xa89
0x7c4: JUMP 0xa89
---
Entry stack: [V11, V532]
Stack pops: 1
Stack additions: [0x7c5]
Exit stack: [V11, 0x7c5]

================================

Block 0x7c5
[0x7c5:0x7da]
---
Predecessors: [0xa89]
Successors: []
---
0x7c5 JUMPDEST
0x7c6 PUSH1 0x40
0x7c8 MLOAD
0x7c9 DUP1
0x7ca DUP3
0x7cb DUP2
0x7cc MSTORE
0x7cd PUSH1 0x20
0x7cf ADD
0x7d0 SWAP2
0x7d1 POP
0x7d2 POP
0x7d3 PUSH1 0x40
0x7d5 MLOAD
0x7d6 DUP1
0x7d7 SWAP2
0x7d8 SUB
0x7d9 SWAP1
0x7da RETURN
---
0x7c5: JUMPDEST 
0x7c6: V538 = 0x40
0x7c8: V539 = M[0x40]
0x7cc: M[V539] = V739
0x7cd: V540 = 0x20
0x7cf: V541 = ADD 0x20 V539
0x7d3: V542 = 0x40
0x7d5: V543 = M[0x40]
0x7d8: V544 = SUB V541 V543
0x7da: RETURN V543 V544
---
Entry stack: [V11, V739]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x7db
[0x7db:0x7e2]
---
Predecessors: [0x4c]
Successors: [0x7e3, 0x7e7]
---
0x7db JUMPDEST
0x7dc CALLVALUE
0x7dd DUP1
0x7de ISZERO
0x7df PUSH2 0x7e7
0x7e2 JUMPI
---
0x7db: JUMPDEST 
0x7dc: V545 = CALLVALUE
0x7de: V546 = ISZERO V545
0x7df: V547 = 0x7e7
0x7e2: JUMPI 0x7e7 V546
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V545]
Exit stack: [V11, V545]

================================

Block 0x7e3
[0x7e3:0x7e6]
---
Predecessors: [0x7db]
Successors: []
---
0x7e3 PUSH1 0x0
0x7e5 DUP1
0x7e6 REVERT
---
0x7e3: V548 = 0x0
0x7e6: REVERT 0x0 0x0
---
Entry stack: [V11, V545]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V545]

================================

Block 0x7e7
[0x7e7:0x7ef]
---
Predecessors: [0x7db]
Successors: [0xa93]
---
0x7e7 JUMPDEST
0x7e8 POP
0x7e9 PUSH2 0x7f0
0x7ec PUSH2 0xa93
0x7ef JUMP
---
0x7e7: JUMPDEST 
0x7e9: V549 = 0x7f0
0x7ec: V550 = 0xa93
0x7ef: JUMP 0xa93
---
Entry stack: [V11, V545]
Stack pops: 1
Stack additions: [0x7f0]
Exit stack: [V11, 0x7f0]

================================

Block 0x7f0
[0x7f0:0x805]
---
Predecessors: [0xb45]
Successors: []
---
0x7f0 JUMPDEST
0x7f1 PUSH1 0x40
0x7f3 MLOAD
0x7f4 DUP1
0x7f5 DUP3
0x7f6 DUP2
0x7f7 MSTORE
0x7f8 PUSH1 0x20
0x7fa ADD
0x7fb SWAP2
0x7fc POP
0x7fd POP
0x7fe PUSH1 0x40
0x800 MLOAD
0x801 DUP1
0x802 SWAP2
0x803 SUB
0x804 SWAP1
0x805 RETURN
---
0x7f0: JUMPDEST 
0x7f1: V551 = 0x40
0x7f3: V552 = M[0x40]
0x7f7: M[V552] = V788
0x7f8: V553 = 0x20
0x7fa: V554 = ADD 0x20 V552
0x7fe: V555 = 0x40
0x800: V556 = M[0x40]
0x803: V557 = SUB V554 V556
0x805: RETURN V556 V557
---
Entry stack: [V11, V788]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x806
[0x806:0x80d]
---
Predecessors: [0x57]
Successors: [0x80e, 0x812]
---
0x806 JUMPDEST
0x807 CALLVALUE
0x808 DUP1
0x809 ISZERO
0x80a PUSH2 0x812
0x80d JUMPI
---
0x806: JUMPDEST 
0x807: V558 = CALLVALUE
0x809: V559 = ISZERO V558
0x80a: V560 = 0x812
0x80d: JUMPI 0x812 V559
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V558]
Exit stack: [V11, V558]

================================

Block 0x80e
[0x80e:0x811]
---
Predecessors: [0x806]
Successors: []
---
0x80e PUSH1 0x0
0x810 DUP1
0x811 REVERT
---
0x80e: V561 = 0x0
0x811: REVERT 0x0 0x0
---
Entry stack: [V11, V558]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V558]

================================

Block 0x812
[0x812:0x846]
---
Predecessors: [0x806]
Successors: [0xb5b]
---
0x812 JUMPDEST
0x813 POP
0x814 PUSH2 0x847
0x817 PUSH1 0x4
0x819 DUP1
0x81a CALLDATASIZE
0x81b SUB
0x81c DUP2
0x81d ADD
0x81e SWAP1
0x81f DUP1
0x820 DUP1
0x821 CALLDATALOAD
0x822 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x837 AND
0x838 SWAP1
0x839 PUSH1 0x20
0x83b ADD
0x83c SWAP1
0x83d SWAP3
0x83e SWAP2
0x83f SWAP1
0x840 POP
0x841 POP
0x842 POP
0x843 PUSH2 0xb5b
0x846 JUMP
---
0x812: JUMPDEST 
0x814: V562 = 0x847
0x817: V563 = 0x4
0x81a: V564 = CALLDATASIZE
0x81b: V565 = SUB V564 0x4
0x81d: V566 = ADD 0x4 V565
0x821: V567 = CALLDATALOAD 0x4
0x822: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x837: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x839: V570 = 0x20
0x83b: V571 = ADD 0x20 0x4
0x843: V572 = 0xb5b
0x846: JUMP 0xb5b
---
Entry stack: [V11, V558]
Stack pops: 1
Stack additions: [0x847, V569]
Exit stack: [V11, 0x847, V569]

================================

Block 0x847
[0x847:0x848]
---
Predecessors: []
Successors: []
---
0x847 JUMPDEST
0x848 STOP
---
0x847: JUMPDEST 
0x848: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x849
[0x849:0x850]
---
Predecessors: [0x62]
Successors: [0x851, 0x855]
---
0x849 JUMPDEST
0x84a CALLVALUE
0x84b DUP1
0x84c ISZERO
0x84d PUSH2 0x855
0x850 JUMPI
---
0x849: JUMPDEST 
0x84a: V573 = CALLVALUE
0x84c: V574 = ISZERO V573
0x84d: V575 = 0x855
0x850: JUMPI 0x855 V574
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V573]
Exit stack: [V11, V573]

================================

Block 0x851
[0x851:0x854]
---
Predecessors: [0x849]
Successors: []
---
0x851 PUSH1 0x0
0x853 DUP1
0x854 REVERT
---
0x851: V576 = 0x0
0x854: REVERT 0x0 0x0
---
Entry stack: [V11, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V573]

================================

Block 0x855
[0x855:0x85d]
---
Predecessors: [0x849]
Successors: [0xdc1]
---
0x855 JUMPDEST
0x856 POP
0x857 PUSH2 0x85e
0x85a PUSH2 0xdc1
0x85d JUMP
---
0x855: JUMPDEST 
0x857: V577 = 0x85e
0x85a: V578 = 0xdc1
0x85d: JUMP 0xdc1
---
Entry stack: [V11, V573]
Stack pops: 1
Stack additions: [0x85e]
Exit stack: [V11, 0x85e]

================================

Block 0x85e
[0x85e:0x89f]
---
Predecessors: [0xdc1]
Successors: []
---
0x85e JUMPDEST
0x85f PUSH1 0x40
0x861 MLOAD
0x862 DUP1
0x863 DUP3
0x864 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x879 AND
0x87a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88f AND
0x890 DUP2
0x891 MSTORE
0x892 PUSH1 0x20
0x894 ADD
0x895 SWAP2
0x896 POP
0x897 POP
0x898 PUSH1 0x40
0x89a MLOAD
0x89b DUP1
0x89c SWAP2
0x89d SUB
0x89e SWAP1
0x89f RETURN
---
0x85e: JUMPDEST 
0x85f: V579 = 0x40
0x861: V580 = M[0x40]
0x864: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x879: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0x87a: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0x88f: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x891: M[V580] = V584
0x892: V585 = 0x20
0x894: V586 = ADD 0x20 V580
0x898: V587 = 0x40
0x89a: V588 = M[0x40]
0x89d: V589 = SUB V586 V588
0x89f: RETURN V588 V589
---
Entry stack: [V11, 0x85e, V947]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x85e]

================================

Block 0x8a0
[0x8a0:0x8a7]
---
Predecessors: [0x6d]
Successors: [0x8a8, 0x8ac]
---
0x8a0 JUMPDEST
0x8a1 CALLVALUE
0x8a2 DUP1
0x8a3 ISZERO
0x8a4 PUSH2 0x8ac
0x8a7 JUMPI
---
0x8a0: JUMPDEST 
0x8a1: V590 = CALLVALUE
0x8a3: V591 = ISZERO V590
0x8a4: V592 = 0x8ac
0x8a7: JUMPI 0x8ac V591
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V590]
Exit stack: [V11, V590]

================================

Block 0x8a8
[0x8a8:0x8ab]
---
Predecessors: [0x8a0]
Successors: []
---
0x8a8 PUSH1 0x0
0x8aa DUP1
0x8ab REVERT
---
0x8a8: V593 = 0x0
0x8ab: REVERT 0x0 0x0
---
Entry stack: [V11, V590]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V590]

================================

Block 0x8ac
[0x8ac:0x8b4]
---
Predecessors: [0x8a0]
Successors: [0xde6]
---
0x8ac JUMPDEST
0x8ad POP
0x8ae PUSH2 0x8b5
0x8b1 PUSH2 0xde6
0x8b4 JUMP
---
0x8ac: JUMPDEST 
0x8ae: V594 = 0x8b5
0x8b1: V595 = 0xde6
0x8b4: JUMP 0xde6
---
Entry stack: [V11, V590]
Stack pops: 1
Stack additions: [0x8b5]
Exit stack: [V11, 0x8b5]

================================

Block 0x8b5
[0x8b5:0x8ca]
---
Predecessors: [0xde6]
Successors: []
---
0x8b5 JUMPDEST
0x8b6 PUSH1 0x40
0x8b8 MLOAD
0x8b9 DUP1
0x8ba DUP3
0x8bb DUP2
0x8bc MSTORE
0x8bd PUSH1 0x20
0x8bf ADD
0x8c0 SWAP2
0x8c1 POP
0x8c2 POP
0x8c3 PUSH1 0x40
0x8c5 MLOAD
0x8c6 DUP1
0x8c7 SWAP2
0x8c8 SUB
0x8c9 SWAP1
0x8ca RETURN
---
0x8b5: JUMPDEST 
0x8b6: V596 = 0x40
0x8b8: V597 = M[0x40]
0x8bc: M[V597] = V950
0x8bd: V598 = 0x20
0x8bf: V599 = ADD 0x20 V597
0x8c3: V600 = 0x40
0x8c5: V601 = M[0x40]
0x8c8: V602 = SUB V599 V601
0x8ca: RETURN V601 V602
---
Entry stack: [V11, V950]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x8cb
[0x8cb:0x8d2]
---
Predecessors: [0x78]
Successors: [0x8d3, 0x8d7]
---
0x8cb JUMPDEST
0x8cc CALLVALUE
0x8cd DUP1
0x8ce ISZERO
0x8cf PUSH2 0x8d7
0x8d2 JUMPI
---
0x8cb: JUMPDEST 
0x8cc: V603 = CALLVALUE
0x8ce: V604 = ISZERO V603
0x8cf: V605 = 0x8d7
0x8d2: JUMPI 0x8d7 V604
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V603]
Exit stack: [V11, V603]

================================

Block 0x8d3
[0x8d3:0x8d6]
---
Predecessors: [0x8cb]
Successors: []
---
0x8d3 PUSH1 0x0
0x8d5 DUP1
0x8d6 REVERT
---
0x8d3: V606 = 0x0
0x8d6: REVERT 0x0 0x0
---
Entry stack: [V11, V603]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V603]

================================

Block 0x8d7
[0x8d7:0x8df]
---
Predecessors: [0x8cb]
Successors: [0xdf0]
---
0x8d7 JUMPDEST
0x8d8 POP
0x8d9 PUSH2 0x8e0
0x8dc PUSH2 0xdf0
0x8df JUMP
---
0x8d7: JUMPDEST 
0x8d9: V607 = 0x8e0
0x8dc: V608 = 0xdf0
0x8df: JUMP 0xdf0
---
Entry stack: [V11, V603]
Stack pops: 1
Stack additions: [0x8e0]
Exit stack: [V11, 0x8e0]

================================

Block 0x8e0
[0x8e0:0x8e1]
---
Predecessors: [0x10e8]
Successors: []
---
0x8e0 JUMPDEST
0x8e1 STOP
---
0x8e0: JUMPDEST 
0x8e1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8e2
[0x8e2:0x8e9]
---
Predecessors: [0x83]
Successors: [0x8ea, 0x8ee]
---
0x8e2 JUMPDEST
0x8e3 CALLVALUE
0x8e4 DUP1
0x8e5 ISZERO
0x8e6 PUSH2 0x8ee
0x8e9 JUMPI
---
0x8e2: JUMPDEST 
0x8e3: V609 = CALLVALUE
0x8e5: V610 = ISZERO V609
0x8e6: V611 = 0x8ee
0x8e9: JUMPI 0x8ee V610
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V609]
Exit stack: [V11, V609]

================================

Block 0x8ea
[0x8ea:0x8ed]
---
Predecessors: [0x8e2]
Successors: []
---
0x8ea PUSH1 0x0
0x8ec DUP1
0x8ed REVERT
---
0x8ea: V612 = 0x0
0x8ed: REVERT 0x0 0x0
---
Entry stack: [V11, V609]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V609]

================================

Block 0x8ee
[0x8ee:0x8f6]
---
Predecessors: [0x8e2]
Successors: [0x10ea]
---
0x8ee JUMPDEST
0x8ef POP
0x8f0 PUSH2 0x8f7
0x8f3 PUSH2 0x10ea
0x8f6 JUMP
---
0x8ee: JUMPDEST 
0x8f0: V613 = 0x8f7
0x8f3: V614 = 0x10ea
0x8f6: JUMP 0x10ea
---
Entry stack: [V11, V609]
Stack pops: 1
Stack additions: [0x8f7]
Exit stack: [V11, 0x8f7]

================================

Block 0x8f7
[0x8f7:0x8f8]
---
Predecessors: [0x1164]
Successors: []
---
0x8f7 JUMPDEST
0x8f8 STOP
---
0x8f7: JUMPDEST 
0x8f8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f9
[0x8f9:0x900]
---
Predecessors: [0x8e]
Successors: [0x901, 0x905]
---
0x8f9 JUMPDEST
0x8fa CALLVALUE
0x8fb DUP1
0x8fc ISZERO
0x8fd PUSH2 0x905
0x900 JUMPI
---
0x8f9: JUMPDEST 
0x8fa: V615 = CALLVALUE
0x8fc: V616 = ISZERO V615
0x8fd: V617 = 0x905
0x900: JUMPI 0x905 V616
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V615]
Exit stack: [V11, V615]

================================

Block 0x901
[0x901:0x904]
---
Predecessors: [0x8f9]
Successors: []
---
0x901 PUSH1 0x0
0x903 DUP1
0x904 REVERT
---
0x901: V618 = 0x0
0x904: REVERT 0x0 0x0
---
Entry stack: [V11, V615]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V615]

================================

Block 0x905
[0x905:0x90d]
---
Predecessors: [0x8f9]
Successors: [0x1166]
---
0x905 JUMPDEST
0x906 POP
0x907 PUSH2 0x90e
0x90a PUSH2 0x1166
0x90d JUMP
---
0x905: JUMPDEST 
0x907: V619 = 0x90e
0x90a: V620 = 0x1166
0x90d: JUMP 0x1166
---
Entry stack: [V11, V615]
Stack pops: 1
Stack additions: [0x90e]
Exit stack: [V11, 0x90e]

================================

Block 0x90e
[0x90e:0x927]
---
Predecessors: [0x117d]
Successors: []
---
0x90e JUMPDEST
0x90f PUSH1 0x40
0x911 MLOAD
0x912 DUP1
0x913 DUP3
0x914 ISZERO
0x915 ISZERO
0x916 ISZERO
0x917 ISZERO
0x918 DUP2
0x919 MSTORE
0x91a PUSH1 0x20
0x91c ADD
0x91d SWAP2
0x91e POP
0x91f POP
0x920 PUSH1 0x40
0x922 MLOAD
0x923 DUP1
0x924 SWAP2
0x925 SUB
0x926 SWAP1
0x927 RETURN
---
0x90e: JUMPDEST 
0x90f: V621 = 0x40
0x911: V622 = M[0x40]
0x914: V623 = ISZERO S0
0x915: V624 = ISZERO V623
0x916: V625 = ISZERO V624
0x917: V626 = ISZERO V625
0x919: M[V622] = V626
0x91a: V627 = 0x20
0x91c: V628 = ADD 0x20 V622
0x920: V629 = 0x40
0x922: V630 = M[0x40]
0x925: V631 = SUB V628 V630
0x927: RETURN V630 V631
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x928
[0x928:0x92f]
---
Predecessors: [0x99]
Successors: [0x930, 0x934]
---
0x928 JUMPDEST
0x929 CALLVALUE
0x92a DUP1
0x92b ISZERO
0x92c PUSH2 0x934
0x92f JUMPI
---
0x928: JUMPDEST 
0x929: V632 = CALLVALUE
0x92b: V633 = ISZERO V632
0x92c: V634 = 0x934
0x92f: JUMPI 0x934 V633
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V632]
Exit stack: [V11, V632]

================================

Block 0x930
[0x930:0x933]
---
Predecessors: [0x928]
Successors: []
---
0x930 PUSH1 0x0
0x932 DUP1
0x933 REVERT
---
0x930: V635 = 0x0
0x933: REVERT 0x0 0x0
---
Entry stack: [V11, V632]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V632]

================================

Block 0x934
[0x934:0x968]
---
Predecessors: [0x928]
Successors: [0x1182]
---
0x934 JUMPDEST
0x935 POP
0x936 PUSH2 0x969
0x939 PUSH1 0x4
0x93b DUP1
0x93c CALLDATASIZE
0x93d SUB
0x93e DUP2
0x93f ADD
0x940 SWAP1
0x941 DUP1
0x942 DUP1
0x943 CALLDATALOAD
0x944 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x959 AND
0x95a SWAP1
0x95b PUSH1 0x20
0x95d ADD
0x95e SWAP1
0x95f SWAP3
0x960 SWAP2
0x961 SWAP1
0x962 POP
0x963 POP
0x964 POP
0x965 PUSH2 0x1182
0x968 JUMP
---
0x934: JUMPDEST 
0x936: V636 = 0x969
0x939: V637 = 0x4
0x93c: V638 = CALLDATASIZE
0x93d: V639 = SUB V638 0x4
0x93f: V640 = ADD 0x4 V639
0x943: V641 = CALLDATALOAD 0x4
0x944: V642 = 0xffffffffffffffffffffffffffffffffffffffff
0x959: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x95b: V644 = 0x20
0x95d: V645 = ADD 0x20 0x4
0x965: V646 = 0x1182
0x968: JUMP 0x1182
---
Entry stack: [V11, V632]
Stack pops: 1
Stack additions: [0x969, V643]
Exit stack: [V11, 0x969, V643]

================================

Block 0x969
[0x969:0x97e]
---
Predecessors: [0x126b]
Successors: []
---
0x969 JUMPDEST
0x96a PUSH1 0x40
0x96c MLOAD
0x96d DUP1
0x96e DUP3
0x96f DUP2
0x970 MSTORE
0x971 PUSH1 0x20
0x973 ADD
0x974 SWAP2
0x975 POP
0x976 POP
0x977 PUSH1 0x40
0x979 MLOAD
0x97a DUP1
0x97b SWAP2
0x97c SUB
0x97d SWAP1
0x97e RETURN
---
0x969: JUMPDEST 
0x96a: V647 = 0x40
0x96c: V648 = M[0x40]
0x970: M[V648] = V1247
0x971: V649 = 0x20
0x973: V650 = ADD 0x20 V648
0x977: V651 = 0x40
0x979: V652 = M[0x40]
0x97c: V653 = SUB V650 V652
0x97e: RETURN V652 V653
---
Entry stack: [V11, V1247]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x97f
[0x97f:0x986]
---
Predecessors: [0xa4]
Successors: [0x987, 0x98b]
---
0x97f JUMPDEST
0x980 CALLVALUE
0x981 DUP1
0x982 ISZERO
0x983 PUSH2 0x98b
0x986 JUMPI
---
0x97f: JUMPDEST 
0x980: V654 = CALLVALUE
0x982: V655 = ISZERO V654
0x983: V656 = 0x98b
0x986: JUMPI 0x98b V655
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V654]
Exit stack: [V11, V654]

================================

Block 0x987
[0x987:0x98a]
---
Predecessors: [0x97f]
Successors: []
---
0x987 PUSH1 0x0
0x989 DUP1
0x98a REVERT
---
0x987: V657 = 0x0
0x98a: REVERT 0x0 0x0
---
Entry stack: [V11, V654]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V654]

================================

Block 0x98b
[0x98b:0x993]
---
Predecessors: [0x97f]
Successors: [0x1283]
---
0x98b JUMPDEST
0x98c POP
0x98d PUSH2 0x994
0x990 PUSH2 0x1283
0x993 JUMP
---
0x98b: JUMPDEST 
0x98d: V658 = 0x994
0x990: V659 = 0x1283
0x993: JUMP 0x1283
---
Entry stack: [V11, V654]
Stack pops: 1
Stack additions: [0x994]
Exit stack: [V11, 0x994]

================================

Block 0x994
[0x994:0x995]
---
Predecessors: [0x12fd]
Successors: []
---
0x994 JUMPDEST
0x995 STOP
---
0x994: JUMPDEST 
0x995: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x996
[0x996:0x99d]
---
Predecessors: [0xaf]
Successors: [0x99e, 0x9a2]
---
0x996 JUMPDEST
0x997 CALLVALUE
0x998 DUP1
0x999 ISZERO
0x99a PUSH2 0x9a2
0x99d JUMPI
---
0x996: JUMPDEST 
0x997: V660 = CALLVALUE
0x999: V661 = ISZERO V660
0x99a: V662 = 0x9a2
0x99d: JUMPI 0x9a2 V661
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V660]
Exit stack: [V11, V660]

================================

Block 0x99e
[0x99e:0x9a1]
---
Predecessors: [0x996]
Successors: []
---
0x99e PUSH1 0x0
0x9a0 DUP1
0x9a1 REVERT
---
0x99e: V663 = 0x0
0x9a1: REVERT 0x0 0x0
---
Entry stack: [V11, V660]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V660]

================================

Block 0x9a2
[0x9a2:0x9d6]
---
Predecessors: [0x996]
Successors: [0x12ff]
---
0x9a2 JUMPDEST
0x9a3 POP
0x9a4 PUSH2 0x9d7
0x9a7 PUSH1 0x4
0x9a9 DUP1
0x9aa CALLDATASIZE
0x9ab SUB
0x9ac DUP2
0x9ad ADD
0x9ae SWAP1
0x9af DUP1
0x9b0 DUP1
0x9b1 CALLDATALOAD
0x9b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c7 AND
0x9c8 SWAP1
0x9c9 PUSH1 0x20
0x9cb ADD
0x9cc SWAP1
0x9cd SWAP3
0x9ce SWAP2
0x9cf SWAP1
0x9d0 POP
0x9d1 POP
0x9d2 POP
0x9d3 PUSH2 0x12ff
0x9d6 JUMP
---
0x9a2: JUMPDEST 
0x9a4: V664 = 0x9d7
0x9a7: V665 = 0x4
0x9aa: V666 = CALLDATASIZE
0x9ab: V667 = SUB V666 0x4
0x9ad: V668 = ADD 0x4 V667
0x9b1: V669 = CALLDATALOAD 0x4
0x9b2: V670 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c7: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0x9c9: V672 = 0x20
0x9cb: V673 = ADD 0x20 0x4
0x9d3: V674 = 0x12ff
0x9d6: JUMP 0x12ff
---
Entry stack: [V11, V660]
Stack pops: 1
Stack additions: [0x9d7, V671]
Exit stack: [V11, 0x9d7, V671]

================================

Block 0x9d7
[0x9d7:0x9ec]
---
Predecessors: [0x12ff]
Successors: []
---
0x9d7 JUMPDEST
0x9d8 PUSH1 0x40
0x9da MLOAD
0x9db DUP1
0x9dc DUP3
0x9dd DUP2
0x9de MSTORE
0x9df PUSH1 0x20
0x9e1 ADD
0x9e2 SWAP2
0x9e3 POP
0x9e4 POP
0x9e5 PUSH1 0x40
0x9e7 MLOAD
0x9e8 DUP1
0x9e9 SWAP2
0x9ea SUB
0x9eb SWAP1
0x9ec RETURN
---
0x9d7: JUMPDEST 
0x9d8: V675 = 0x40
0x9da: V676 = M[0x40]
0x9de: M[V676] = V1294
0x9df: V677 = 0x20
0x9e1: V678 = ADD 0x20 V676
0x9e5: V679 = 0x40
0x9e7: V680 = M[0x40]
0x9ea: V681 = SUB V678 V680
0x9ec: RETURN V680 V681
---
Entry stack: [V11, V1294]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x9ed
[0x9ed:0x9f4]
---
Predecessors: [0xba]
Successors: [0x9f5, 0x9f9]
---
0x9ed JUMPDEST
0x9ee CALLVALUE
0x9ef DUP1
0x9f0 ISZERO
0x9f1 PUSH2 0x9f9
0x9f4 JUMPI
---
0x9ed: JUMPDEST 
0x9ee: V682 = CALLVALUE
0x9f0: V683 = ISZERO V682
0x9f1: V684 = 0x9f9
0x9f4: JUMPI 0x9f9 V683
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V682]
Exit stack: [V11, V682]

================================

Block 0x9f5
[0x9f5:0x9f8]
---
Predecessors: [0x9ed]
Successors: []
---
0x9f5 PUSH1 0x0
0x9f7 DUP1
0x9f8 REVERT
---
0x9f5: V685 = 0x0
0x9f8: REVERT 0x0 0x0
---
Entry stack: [V11, V682]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V682]

================================

Block 0x9f9
[0x9f9:0xa01]
---
Predecessors: [0x9ed]
Successors: [0x1348]
---
0x9f9 JUMPDEST
0x9fa POP
0x9fb PUSH2 0xa02
0x9fe PUSH2 0x1348
0xa01 JUMP
---
0x9f9: JUMPDEST 
0x9fb: V686 = 0xa02
0x9fe: V687 = 0x1348
0xa01: JUMP 0x1348
---
Entry stack: [V11, V682]
Stack pops: 1
Stack additions: [0xa02]
Exit stack: [V11, 0xa02]

================================

Block 0xa02
[0xa02:0xa17]
---
Predecessors: [0x1348]
Successors: []
---
0xa02 JUMPDEST
0xa03 PUSH1 0x40
0xa05 MLOAD
0xa06 DUP1
0xa07 DUP3
0xa08 DUP2
0xa09 MSTORE
0xa0a PUSH1 0x20
0xa0c ADD
0xa0d SWAP2
0xa0e POP
0xa0f POP
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 DUP1
0xa14 SWAP2
0xa15 SUB
0xa16 SWAP1
0xa17 RETURN
---
0xa02: JUMPDEST 
0xa03: V688 = 0x40
0xa05: V689 = M[0x40]
0xa09: M[V689] = V1297
0xa0a: V690 = 0x20
0xa0c: V691 = ADD 0x20 V689
0xa10: V692 = 0x40
0xa12: V693 = M[0x40]
0xa15: V694 = SUB V691 V693
0xa17: RETURN V693 V694
---
Entry stack: [V11, V1297]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa18
[0xa18:0xa1f]
---
Predecessors: [0xc5]
Successors: [0xa20, 0xa24]
---
0xa18 JUMPDEST
0xa19 CALLVALUE
0xa1a DUP1
0xa1b ISZERO
0xa1c PUSH2 0xa24
0xa1f JUMPI
---
0xa18: JUMPDEST 
0xa19: V695 = CALLVALUE
0xa1b: V696 = ISZERO V695
0xa1c: V697 = 0xa24
0xa1f: JUMPI 0xa24 V696
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V695]
Exit stack: [V11, V695]

================================

Block 0xa20
[0xa20:0xa23]
---
Predecessors: [0xa18]
Successors: []
---
0xa20 PUSH1 0x0
0xa22 DUP1
0xa23 REVERT
---
0xa20: V698 = 0x0
0xa23: REVERT 0x0 0x0
---
Entry stack: [V11, V695]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V695]

================================

Block 0xa24
[0xa24:0xa2c]
---
Predecessors: [0xa18]
Successors: [0x1352]
---
0xa24 JUMPDEST
0xa25 POP
0xa26 PUSH2 0xa2d
0xa29 PUSH2 0x1352
0xa2c JUMP
---
0xa24: JUMPDEST 
0xa26: V699 = 0xa2d
0xa29: V700 = 0x1352
0xa2c: JUMP 0x1352
---
Entry stack: [V11, V695]
Stack pops: 1
Stack additions: [0xa2d]
Exit stack: [V11, 0xa2d]

================================

Block 0xa2d
[0xa2d:0xa46]
---
Predecessors: [0x1352]
Successors: []
---
0xa2d JUMPDEST
0xa2e PUSH1 0x40
0xa30 MLOAD
0xa31 DUP1
0xa32 DUP3
0xa33 ISZERO
0xa34 ISZERO
0xa35 ISZERO
0xa36 ISZERO
0xa37 DUP2
0xa38 MSTORE
0xa39 PUSH1 0x20
0xa3b ADD
0xa3c SWAP2
0xa3d POP
0xa3e POP
0xa3f PUSH1 0x40
0xa41 MLOAD
0xa42 DUP1
0xa43 SWAP2
0xa44 SUB
0xa45 SWAP1
0xa46 RETURN
---
0xa2d: JUMPDEST 
0xa2e: V701 = 0x40
0xa30: V702 = M[0x40]
0xa33: V703 = ISZERO V1305
0xa34: V704 = ISZERO V703
0xa35: V705 = ISZERO V704
0xa36: V706 = ISZERO V705
0xa38: M[V702] = V706
0xa39: V707 = 0x20
0xa3b: V708 = ADD 0x20 V702
0xa3f: V709 = 0x40
0xa41: V710 = M[0x40]
0xa44: V711 = SUB V708 V710
0xa46: RETURN V710 V711
---
Entry stack: [V11, 0xa2d, V1305]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa2d]

================================

Block 0xa47
[0xa47:0xa4e]
---
Predecessors: [0xd0]
Successors: [0xa4f, 0xa53]
---
0xa47 JUMPDEST
0xa48 CALLVALUE
0xa49 DUP1
0xa4a ISZERO
0xa4b PUSH2 0xa53
0xa4e JUMPI
---
0xa47: JUMPDEST 
0xa48: V712 = CALLVALUE
0xa4a: V713 = ISZERO V712
0xa4b: V714 = 0xa53
0xa4e: JUMPI 0xa53 V713
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V712]
Exit stack: [V11, V712]

================================

Block 0xa4f
[0xa4f:0xa52]
---
Predecessors: [0xa47]
Successors: []
---
0xa4f PUSH1 0x0
0xa51 DUP1
0xa52 REVERT
---
0xa4f: V715 = 0x0
0xa52: REVERT 0x0 0x0
---
Entry stack: [V11, V712]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V712]

================================

Block 0xa53
[0xa53:0xa5b]
---
Predecessors: [0xa47]
Successors: [0x1365]
---
0xa53 JUMPDEST
0xa54 POP
0xa55 PUSH2 0xa5c
0xa58 PUSH2 0x1365
0xa5b JUMP
---
0xa53: JUMPDEST 
0xa55: V716 = 0xa5c
0xa58: V717 = 0x1365
0xa5b: JUMP 0x1365
---
Entry stack: [V11, V712]
Stack pops: 1
Stack additions: [0xa5c]
Exit stack: [V11, 0xa5c]

================================

Block 0xa5c
[0xa5c:0xa75]
---
Predecessors: [0x1365]
Successors: []
---
0xa5c JUMPDEST
0xa5d PUSH1 0x40
0xa5f MLOAD
0xa60 DUP1
0xa61 DUP3
0xa62 ISZERO
0xa63 ISZERO
0xa64 ISZERO
0xa65 ISZERO
0xa66 DUP2
0xa67 MSTORE
0xa68 PUSH1 0x20
0xa6a ADD
0xa6b SWAP2
0xa6c POP
0xa6d POP
0xa6e PUSH1 0x40
0xa70 MLOAD
0xa71 DUP1
0xa72 SWAP2
0xa73 SUB
0xa74 SWAP1
0xa75 RETURN
---
0xa5c: JUMPDEST 
0xa5d: V718 = 0x40
0xa5f: V719 = M[0x40]
0xa62: V720 = ISZERO V1313
0xa63: V721 = ISZERO V720
0xa64: V722 = ISZERO V721
0xa65: V723 = ISZERO V722
0xa67: M[V719] = V723
0xa68: V724 = 0x20
0xa6a: V725 = ADD 0x20 V719
0xa6e: V726 = 0x40
0xa70: V727 = M[0x40]
0xa73: V728 = SUB V725 V727
0xa75: RETURN V727 V728
---
Entry stack: [V11, 0xa5c, V1313]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa5c]

================================

Block 0xa76
[0xa76:0xa88]
---
Predecessors: [0x78d]
Successors: [0x796]
---
0xa76 JUMPDEST
0xa77 PUSH1 0x5
0xa79 PUSH1 0x3
0xa7b SWAP1
0xa7c SLOAD
0xa7d SWAP1
0xa7e PUSH2 0x100
0xa81 EXP
0xa82 SWAP1
0xa83 DIV
0xa84 PUSH1 0xff
0xa86 AND
0xa87 DUP2
0xa88 JUMP
---
0xa76: JUMPDEST 
0xa77: V729 = 0x5
0xa79: V730 = 0x3
0xa7c: V731 = S[0x5]
0xa7e: V732 = 0x100
0xa81: V733 = EXP 0x100 0x3
0xa83: V734 = DIV V731 0x1000000
0xa84: V735 = 0xff
0xa86: V736 = AND 0xff V734
0xa88: JUMP 0x796
---
Entry stack: [V11, 0x796]
Stack pops: 1
Stack additions: [S0, V736]
Exit stack: [V11, 0x796, V736]

================================

Block 0xa89
[0xa89:0xa92]
---
Predecessors: [0x7bc]
Successors: [0x7c5]
---
0xa89 JUMPDEST
0xa8a PUSH1 0x0
0xa8c PUSH1 0x2
0xa8e SLOAD
0xa8f SWAP1
0xa90 POP
0xa91 SWAP1
0xa92 JUMP
---
0xa89: JUMPDEST 
0xa8a: V737 = 0x0
0xa8c: V738 = 0x2
0xa8e: V739 = S[0x2]
0xa92: JUMP 0x7c5
---
Entry stack: [V11, 0x7c5]
Stack pops: 1
Stack additions: [V739]
Exit stack: [V11, V739]

================================

Block 0xa93
[0xa93:0xb16]
---
Predecessors: [0x7e7]
Successors: [0xb17, 0xb1b]
---
0xa93 JUMPDEST
0xa94 PUSH1 0x0
0xa96 PUSH1 0x5
0xa98 PUSH1 0x4
0xa9a SWAP1
0xa9b SLOAD
0xa9c SWAP1
0xa9d PUSH2 0x100
0xaa0 EXP
0xaa1 SWAP1
0xaa2 DIV
0xaa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab8 AND
0xab9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xace AND
0xacf PUSH4 0x18160ddd
0xad4 PUSH1 0x40
0xad6 MLOAD
0xad7 DUP2
0xad8 PUSH4 0xffffffff
0xadd AND
0xade PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xafc MUL
0xafd DUP2
0xafe MSTORE
0xaff PUSH1 0x4
0xb01 ADD
0xb02 PUSH1 0x20
0xb04 PUSH1 0x40
0xb06 MLOAD
0xb07 DUP1
0xb08 DUP4
0xb09 SUB
0xb0a DUP2
0xb0b PUSH1 0x0
0xb0d DUP8
0xb0e DUP1
0xb0f EXTCODESIZE
0xb10 ISZERO
0xb11 DUP1
0xb12 ISZERO
0xb13 PUSH2 0xb1b
0xb16 JUMPI
---
0xa93: JUMPDEST 
0xa94: V740 = 0x0
0xa96: V741 = 0x5
0xa98: V742 = 0x4
0xa9b: V743 = S[0x5]
0xa9d: V744 = 0x100
0xaa0: V745 = EXP 0x100 0x4
0xaa2: V746 = DIV V743 0x100000000
0xaa3: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xab8: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0xab9: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0xace: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0xacf: V751 = 0x18160ddd
0xad4: V752 = 0x40
0xad6: V753 = M[0x40]
0xad8: V754 = 0xffffffff
0xadd: V755 = AND 0xffffffff 0x18160ddd
0xade: V756 = 0x100000000000000000000000000000000000000000000000000000000
0xafc: V757 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0xafe: M[V753] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0xaff: V758 = 0x4
0xb01: V759 = ADD 0x4 V753
0xb02: V760 = 0x20
0xb04: V761 = 0x40
0xb06: V762 = M[0x40]
0xb09: V763 = SUB V759 V762
0xb0b: V764 = 0x0
0xb0f: V765 = EXTCODESIZE V750
0xb10: V766 = ISZERO V765
0xb12: V767 = ISZERO V766
0xb13: V768 = 0xb1b
0xb16: JUMPI 0xb1b V767
---
Entry stack: [V11, 0x7f0]
Stack pops: 0
Stack additions: [0x0, V750, 0x18160ddd, V759, 0x20, V762, V763, V762, 0x0, V750, V766]
Exit stack: [V11, 0x7f0, 0x0, V750, 0x18160ddd, V759, 0x20, V762, V763, V762, 0x0, V750, V766]

================================

Block 0xb17
[0xb17:0xb1a]
---
Predecessors: [0xa93]
Successors: []
---
0xb17 PUSH1 0x0
0xb19 DUP1
0xb1a REVERT
---
0xb17: V769 = 0x0
0xb1a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7f0, 0x0, V750, 0x18160ddd, V759, 0x20, V762, V763, V762, 0x0, V750, V766]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7f0, 0x0, V750, 0x18160ddd, V759, 0x20, V762, V763, V762, 0x0, V750, V766]

================================

Block 0xb1b
[0xb1b:0xb25]
---
Predecessors: [0xa93]
Successors: [0xb26, 0xb2f]
---
0xb1b JUMPDEST
0xb1c POP
0xb1d GAS
0xb1e CALL
0xb1f ISZERO
0xb20 DUP1
0xb21 ISZERO
0xb22 PUSH2 0xb2f
0xb25 JUMPI
---
0xb1b: JUMPDEST 
0xb1d: V770 = GAS
0xb1e: V771 = CALL V770 V750 0x0 V762 V763 V762 0x20
0xb1f: V772 = ISZERO V771
0xb21: V773 = ISZERO V772
0xb22: V774 = 0xb2f
0xb25: JUMPI 0xb2f V773
---
Entry stack: [V11, 0x7f0, 0x0, V750, 0x18160ddd, V759, 0x20, V762, V763, V762, 0x0, V750, V766]
Stack pops: 7
Stack additions: [V772]
Exit stack: [V11, 0x7f0, 0x0, V750, 0x18160ddd, V759, V772]

================================

Block 0xb26
[0xb26:0xb2e]
---
Predecessors: [0xb1b]
Successors: []
---
0xb26 RETURNDATASIZE
0xb27 PUSH1 0x0
0xb29 DUP1
0xb2a RETURNDATACOPY
0xb2b RETURNDATASIZE
0xb2c PUSH1 0x0
0xb2e REVERT
---
0xb26: V775 = RETURNDATASIZE
0xb27: V776 = 0x0
0xb2a: RETURNDATACOPY 0x0 0x0 V775
0xb2b: V777 = RETURNDATASIZE
0xb2c: V778 = 0x0
0xb2e: REVERT 0x0 V777
---
Entry stack: [V11, 0x7f0, 0x0, V750, 0x18160ddd, V759, V772]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7f0, 0x0, V750, 0x18160ddd, V759, V772]

================================

Block 0xb2f
[0xb2f:0xb40]
---
Predecessors: [0xb1b]
Successors: [0xb41, 0xb45]
---
0xb2f JUMPDEST
0xb30 POP
0xb31 POP
0xb32 POP
0xb33 POP
0xb34 PUSH1 0x40
0xb36 MLOAD
0xb37 RETURNDATASIZE
0xb38 PUSH1 0x20
0xb3a DUP2
0xb3b LT
0xb3c ISZERO
0xb3d PUSH2 0xb45
0xb40 JUMPI
---
0xb2f: JUMPDEST 
0xb34: V779 = 0x40
0xb36: V780 = M[0x40]
0xb37: V781 = RETURNDATASIZE
0xb38: V782 = 0x20
0xb3b: V783 = LT V781 0x20
0xb3c: V784 = ISZERO V783
0xb3d: V785 = 0xb45
0xb40: JUMPI 0xb45 V784
---
Entry stack: [V11, 0x7f0, 0x0, V750, 0x18160ddd, V759, V772]
Stack pops: 4
Stack additions: [V780, V781]
Exit stack: [V11, 0x7f0, 0x0, V780, V781]

================================

Block 0xb41
[0xb41:0xb44]
---
Predecessors: [0xb2f]
Successors: []
---
0xb41 PUSH1 0x0
0xb43 DUP1
0xb44 REVERT
---
0xb41: V786 = 0x0
0xb44: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7f0, 0x0, V780, V781]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7f0, 0x0, V780, V781]

================================

Block 0xb45
[0xb45:0xb5a]
---
Predecessors: [0xb2f]
Successors: [0x7f0]
---
0xb45 JUMPDEST
0xb46 DUP2
0xb47 ADD
0xb48 SWAP1
0xb49 DUP1
0xb4a DUP1
0xb4b MLOAD
0xb4c SWAP1
0xb4d PUSH1 0x20
0xb4f ADD
0xb50 SWAP1
0xb51 SWAP3
0xb52 SWAP2
0xb53 SWAP1
0xb54 POP
0xb55 POP
0xb56 POP
0xb57 SWAP1
0xb58 POP
0xb59 SWAP1
0xb5a JUMP
---
0xb45: JUMPDEST 
0xb47: V787 = ADD V780 V781
0xb4b: V788 = M[V780]
0xb4d: V789 = 0x20
0xb4f: V790 = ADD 0x20 V780
0xb5a: JUMP 0x7f0
---
Entry stack: [V11, 0x7f0, 0x0, V780, V781]
Stack pops: 4
Stack additions: [V788]
Exit stack: [V11, V788]

================================

Block 0xb5b
[0xb5b:0xbb0]
---
Predecessors: [0x812]
Successors: [0xbb1, 0xdbc]
---
0xb5b JUMPDEST
0xb5c PUSH1 0x0
0xb5e DUP1
0xb5f SWAP1
0xb60 SLOAD
0xb61 SWAP1
0xb62 PUSH2 0x100
0xb65 EXP
0xb66 SWAP1
0xb67 DIV
0xb68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7d AND
0xb7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb93 AND
0xb94 CALLER
0xb95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbaa AND
0xbab EQ
0xbac ISZERO
0xbad PUSH2 0xdbc
0xbb0 JUMPI
---
0xb5b: JUMPDEST 
0xb5c: V791 = 0x0
0xb60: V792 = S[0x0]
0xb62: V793 = 0x100
0xb65: V794 = EXP 0x100 0x0
0xb67: V795 = DIV V792 0x1
0xb68: V796 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7d: V797 = AND 0xffffffffffffffffffffffffffffffffffffffff V795
0xb7e: V798 = 0xffffffffffffffffffffffffffffffffffffffff
0xb93: V799 = AND 0xffffffffffffffffffffffffffffffffffffffff V797
0xb94: V800 = CALLER
0xb95: V801 = 0xffffffffffffffffffffffffffffffffffffffff
0xbaa: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0xbab: V803 = EQ V802 V799
0xbac: V804 = ISZERO V803
0xbad: V805 = 0xdbc
0xbb0: JUMPI 0xdbc V804
---
Entry stack: [V11, 0x847, V569]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x847, V569]

================================

Block 0xbb1
[0xbb1:0xc1d]
---
Predecessors: [0xb5b]
Successors: [0xc1e, 0xc1f]
---
0xbb1 PUSH1 0x5
0xbb3 PUSH1 0x4
0xbb5 SWAP1
0xbb6 SLOAD
0xbb7 SWAP1
0xbb8 PUSH2 0x100
0xbbb EXP
0xbbc SWAP1
0xbbd DIV
0xbbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd3 AND
0xbd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe9 AND
0xbea PUSH4 0xa9059cbb
0xbef DUP3
0xbf0 PUSH8 0xde0b6b3a7640000
0xbf9 PUSH1 0x5
0xbfb PUSH1 0x0
0xbfd SWAP1
0xbfe SLOAD
0xbff SWAP1
0xc00 PUSH2 0x100
0xc03 EXP
0xc04 SWAP1
0xc05 DIV
0xc06 PUSH1 0xff
0xc08 AND
0xc09 PUSH1 0xff
0xc0b AND
0xc0c PUSH1 0xa
0xc0e EXP
0xc0f PUSH1 0x4
0xc11 SLOAD
0xc12 PUSH1 0x2
0xc14 SLOAD
0xc15 MUL
0xc16 MUL
0xc17 DUP2
0xc18 ISZERO
0xc19 ISZERO
0xc1a PUSH2 0xc1f
0xc1d JUMPI
---
0xbb1: V806 = 0x5
0xbb3: V807 = 0x4
0xbb6: V808 = S[0x5]
0xbb8: V809 = 0x100
0xbbb: V810 = EXP 0x100 0x4
0xbbd: V811 = DIV V808 0x100000000
0xbbe: V812 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd3: V813 = AND 0xffffffffffffffffffffffffffffffffffffffff V811
0xbd4: V814 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe9: V815 = AND 0xffffffffffffffffffffffffffffffffffffffff V813
0xbea: V816 = 0xa9059cbb
0xbf0: V817 = 0xde0b6b3a7640000
0xbf9: V818 = 0x5
0xbfb: V819 = 0x0
0xbfe: V820 = S[0x5]
0xc00: V821 = 0x100
0xc03: V822 = EXP 0x100 0x0
0xc05: V823 = DIV V820 0x1
0xc06: V824 = 0xff
0xc08: V825 = AND 0xff V823
0xc09: V826 = 0xff
0xc0b: V827 = AND 0xff V825
0xc0c: V828 = 0xa
0xc0e: V829 = EXP 0xa V827
0xc0f: V830 = 0x4
0xc11: V831 = S[0x4]
0xc12: V832 = 0x2
0xc14: V833 = S[0x2]
0xc15: V834 = MUL V833 V831
0xc16: V835 = MUL V834 V829
0xc18: V836 = ISZERO 0xde0b6b3a7640000
0xc19: V837 = ISZERO 0x0
0xc1a: V838 = 0xc1f
0xc1d: JUMPI 0xc1f 0x1
---
Entry stack: [V11, 0x847, V569]
Stack pops: 1
Stack additions: [S0, V815, 0xa9059cbb, S0, 0xde0b6b3a7640000, V835]
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, 0xde0b6b3a7640000, V835]

================================

Block 0xc1e
[0xc1e:0xc1e]
---
Predecessors: [0xbb1]
Successors: []
---
0xc1e INVALID
---
0xc1e: INVALID 
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, 0xde0b6b3a7640000, V835]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, 0xde0b6b3a7640000, V835]

================================

Block 0xc1f
[0xc1f:0xca1]
---
Predecessors: [0xbb1]
Successors: [0xca2, 0xca6]
---
0xc1f JUMPDEST
0xc20 DIV
0xc21 PUSH1 0x5
0xc23 PUSH1 0x4
0xc25 SWAP1
0xc26 SLOAD
0xc27 SWAP1
0xc28 PUSH2 0x100
0xc2b EXP
0xc2c SWAP1
0xc2d DIV
0xc2e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc43 AND
0xc44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc59 AND
0xc5a PUSH4 0x18160ddd
0xc5f PUSH1 0x40
0xc61 MLOAD
0xc62 DUP2
0xc63 PUSH4 0xffffffff
0xc68 AND
0xc69 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc87 MUL
0xc88 DUP2
0xc89 MSTORE
0xc8a PUSH1 0x4
0xc8c ADD
0xc8d PUSH1 0x20
0xc8f PUSH1 0x40
0xc91 MLOAD
0xc92 DUP1
0xc93 DUP4
0xc94 SUB
0xc95 DUP2
0xc96 PUSH1 0x0
0xc98 DUP8
0xc99 DUP1
0xc9a EXTCODESIZE
0xc9b ISZERO
0xc9c DUP1
0xc9d ISZERO
0xc9e PUSH2 0xca6
0xca1 JUMPI
---
0xc1f: JUMPDEST 
0xc20: V839 = DIV V835 0xde0b6b3a7640000
0xc21: V840 = 0x5
0xc23: V841 = 0x4
0xc26: V842 = S[0x5]
0xc28: V843 = 0x100
0xc2b: V844 = EXP 0x100 0x4
0xc2d: V845 = DIV V842 0x100000000
0xc2e: V846 = 0xffffffffffffffffffffffffffffffffffffffff
0xc43: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0xc44: V848 = 0xffffffffffffffffffffffffffffffffffffffff
0xc59: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V847
0xc5a: V850 = 0x18160ddd
0xc5f: V851 = 0x40
0xc61: V852 = M[0x40]
0xc63: V853 = 0xffffffff
0xc68: V854 = AND 0xffffffff 0x18160ddd
0xc69: V855 = 0x100000000000000000000000000000000000000000000000000000000
0xc87: V856 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0xc89: M[V852] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0xc8a: V857 = 0x4
0xc8c: V858 = ADD 0x4 V852
0xc8d: V859 = 0x20
0xc8f: V860 = 0x40
0xc91: V861 = M[0x40]
0xc94: V862 = SUB V858 V861
0xc96: V863 = 0x0
0xc9a: V864 = EXTCODESIZE V849
0xc9b: V865 = ISZERO V864
0xc9d: V866 = ISZERO V865
0xc9e: V867 = 0xca6
0xca1: JUMPI 0xca6 V866
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, 0xde0b6b3a7640000, V835]
Stack pops: 2
Stack additions: [V839, V849, 0x18160ddd, V858, 0x20, V861, V862, V861, 0x0, V849, V865]
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V849, 0x18160ddd, V858, 0x20, V861, V862, V861, 0x0, V849, V865]

================================

Block 0xca2
[0xca2:0xca5]
---
Predecessors: [0xc1f]
Successors: []
---
0xca2 PUSH1 0x0
0xca4 DUP1
0xca5 REVERT
---
0xca2: V868 = 0x0
0xca5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V849, 0x18160ddd, V858, 0x20, V861, V862, V861, 0x0, V849, V865]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V849, 0x18160ddd, V858, 0x20, V861, V862, V861, 0x0, V849, V865]

================================

Block 0xca6
[0xca6:0xcb0]
---
Predecessors: [0xc1f]
Successors: [0xcb1, 0xcba]
---
0xca6 JUMPDEST
0xca7 POP
0xca8 GAS
0xca9 CALL
0xcaa ISZERO
0xcab DUP1
0xcac ISZERO
0xcad PUSH2 0xcba
0xcb0 JUMPI
---
0xca6: JUMPDEST 
0xca8: V869 = GAS
0xca9: V870 = CALL V869 V849 0x0 V861 V862 V861 0x20
0xcaa: V871 = ISZERO V870
0xcac: V872 = ISZERO V871
0xcad: V873 = 0xcba
0xcb0: JUMPI 0xcba V872
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V849, 0x18160ddd, V858, 0x20, V861, V862, V861, 0x0, V849, V865]
Stack pops: 7
Stack additions: [V871]
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V849, 0x18160ddd, V858, V871]

================================

Block 0xcb1
[0xcb1:0xcb9]
---
Predecessors: [0xca6]
Successors: []
---
0xcb1 RETURNDATASIZE
0xcb2 PUSH1 0x0
0xcb4 DUP1
0xcb5 RETURNDATACOPY
0xcb6 RETURNDATASIZE
0xcb7 PUSH1 0x0
0xcb9 REVERT
---
0xcb1: V874 = RETURNDATASIZE
0xcb2: V875 = 0x0
0xcb5: RETURNDATACOPY 0x0 0x0 V874
0xcb6: V876 = RETURNDATASIZE
0xcb7: V877 = 0x0
0xcb9: REVERT 0x0 V876
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V849, 0x18160ddd, V858, V871]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V849, 0x18160ddd, V858, V871]

================================

Block 0xcba
[0xcba:0xccb]
---
Predecessors: [0xca6]
Successors: [0xccc, 0xcd0]
---
0xcba JUMPDEST
0xcbb POP
0xcbc POP
0xcbd POP
0xcbe POP
0xcbf PUSH1 0x40
0xcc1 MLOAD
0xcc2 RETURNDATASIZE
0xcc3 PUSH1 0x20
0xcc5 DUP2
0xcc6 LT
0xcc7 ISZERO
0xcc8 PUSH2 0xcd0
0xccb JUMPI
---
0xcba: JUMPDEST 
0xcbf: V878 = 0x40
0xcc1: V879 = M[0x40]
0xcc2: V880 = RETURNDATASIZE
0xcc3: V881 = 0x20
0xcc6: V882 = LT V880 0x20
0xcc7: V883 = ISZERO V882
0xcc8: V884 = 0xcd0
0xccb: JUMPI 0xcd0 V883
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V849, 0x18160ddd, V858, V871]
Stack pops: 4
Stack additions: [V879, V880]
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V879, V880]

================================

Block 0xccc
[0xccc:0xccf]
---
Predecessors: [0xcba]
Successors: []
---
0xccc PUSH1 0x0
0xcce DUP1
0xccf REVERT
---
0xccc: V885 = 0x0
0xccf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V879, V880]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V879, V880]

================================

Block 0xcd0
[0xcd0:0xd62]
---
Predecessors: [0xcba]
Successors: [0xd63, 0xd67]
---
0xcd0 JUMPDEST
0xcd1 DUP2
0xcd2 ADD
0xcd3 SWAP1
0xcd4 DUP1
0xcd5 DUP1
0xcd6 MLOAD
0xcd7 SWAP1
0xcd8 PUSH1 0x20
0xcda ADD
0xcdb SWAP1
0xcdc SWAP3
0xcdd SWAP2
0xcde SWAP1
0xcdf POP
0xce0 POP
0xce1 POP
0xce2 SUB
0xce3 PUSH1 0x40
0xce5 MLOAD
0xce6 DUP4
0xce7 PUSH4 0xffffffff
0xcec AND
0xced PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd0b MUL
0xd0c DUP2
0xd0d MSTORE
0xd0e PUSH1 0x4
0xd10 ADD
0xd11 DUP1
0xd12 DUP4
0xd13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd28 AND
0xd29 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3e AND
0xd3f DUP2
0xd40 MSTORE
0xd41 PUSH1 0x20
0xd43 ADD
0xd44 DUP3
0xd45 DUP2
0xd46 MSTORE
0xd47 PUSH1 0x20
0xd49 ADD
0xd4a SWAP3
0xd4b POP
0xd4c POP
0xd4d POP
0xd4e PUSH1 0x20
0xd50 PUSH1 0x40
0xd52 MLOAD
0xd53 DUP1
0xd54 DUP4
0xd55 SUB
0xd56 DUP2
0xd57 PUSH1 0x0
0xd59 DUP8
0xd5a DUP1
0xd5b EXTCODESIZE
0xd5c ISZERO
0xd5d DUP1
0xd5e ISZERO
0xd5f PUSH2 0xd67
0xd62 JUMPI
---
0xcd0: JUMPDEST 
0xcd2: V886 = ADD V879 V880
0xcd6: V887 = M[V879]
0xcd8: V888 = 0x20
0xcda: V889 = ADD 0x20 V879
0xce2: V890 = SUB V887 V839
0xce3: V891 = 0x40
0xce5: V892 = M[0x40]
0xce7: V893 = 0xffffffff
0xcec: V894 = AND 0xffffffff 0xa9059cbb
0xced: V895 = 0x100000000000000000000000000000000000000000000000000000000
0xd0b: V896 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xd0d: M[V892] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd0e: V897 = 0x4
0xd10: V898 = ADD 0x4 V892
0xd13: V899 = 0xffffffffffffffffffffffffffffffffffffffff
0xd28: V900 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0xd29: V901 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3e: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff V900
0xd40: M[V898] = V902
0xd41: V903 = 0x20
0xd43: V904 = ADD 0x20 V898
0xd46: M[V904] = V890
0xd47: V905 = 0x20
0xd49: V906 = ADD 0x20 V904
0xd4e: V907 = 0x20
0xd50: V908 = 0x40
0xd52: V909 = M[0x40]
0xd55: V910 = SUB V906 V909
0xd57: V911 = 0x0
0xd5b: V912 = EXTCODESIZE V815
0xd5c: V913 = ISZERO V912
0xd5e: V914 = ISZERO V913
0xd5f: V915 = 0xd67
0xd62: JUMPI 0xd67 V914
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V569, V839, V879, V880]
Stack pops: 6
Stack additions: [S5, S4, V906, 0x20, V909, V910, V909, 0x0, S5, V913]
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V906, 0x20, V909, V910, V909, 0x0, V815, V913]

================================

Block 0xd63
[0xd63:0xd66]
---
Predecessors: [0xcd0]
Successors: []
---
0xd63 PUSH1 0x0
0xd65 DUP1
0xd66 REVERT
---
0xd63: V916 = 0x0
0xd66: REVERT 0x0 0x0
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V906, 0x20, V909, V910, V909, 0x0, V815, V913]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V906, 0x20, V909, V910, V909, 0x0, V815, V913]

================================

Block 0xd67
[0xd67:0xd71]
---
Predecessors: [0xcd0]
Successors: [0xd72, 0xd7b]
---
0xd67 JUMPDEST
0xd68 POP
0xd69 GAS
0xd6a CALL
0xd6b ISZERO
0xd6c DUP1
0xd6d ISZERO
0xd6e PUSH2 0xd7b
0xd71 JUMPI
---
0xd67: JUMPDEST 
0xd69: V917 = GAS
0xd6a: V918 = CALL V917 V815 0x0 V909 V910 V909 0x20
0xd6b: V919 = ISZERO V918
0xd6d: V920 = ISZERO V919
0xd6e: V921 = 0xd7b
0xd71: JUMPI 0xd7b V920
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V906, 0x20, V909, V910, V909, 0x0, V815, V913]
Stack pops: 7
Stack additions: [V919]
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V906, V919]

================================

Block 0xd72
[0xd72:0xd7a]
---
Predecessors: [0xd67]
Successors: []
---
0xd72 RETURNDATASIZE
0xd73 PUSH1 0x0
0xd75 DUP1
0xd76 RETURNDATACOPY
0xd77 RETURNDATASIZE
0xd78 PUSH1 0x0
0xd7a REVERT
---
0xd72: V922 = RETURNDATASIZE
0xd73: V923 = 0x0
0xd76: RETURNDATACOPY 0x0 0x0 V922
0xd77: V924 = RETURNDATASIZE
0xd78: V925 = 0x0
0xd7a: REVERT 0x0 V924
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V906, V919]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x847, V569, V815, 0xa9059cbb, V906, V919]

================================

Block 0xd7b
[0xd7b:0xd8c]
---
Predecessors: [0xd67]
Successors: [0xd8d, 0xd91]
---
0xd7b JUMPDEST
0xd7c POP
0xd7d POP
0xd7e POP
0xd7f POP
0xd80 PUSH1 0x40
0xd82 MLOAD
0xd83 RETURNDATASIZE
0xd84 PUSH1 0x20
0xd86 DUP2
0xd87 LT
0xd88 ISZERO
0xd89 PUSH2 0xd91
0xd8c JUMPI
---
0xd7b: JUMPDEST 
0xd80: V926 = 0x40
0xd82: V927 = M[0x40]
0xd83: V928 = RETURNDATASIZE
0xd84: V929 = 0x20
0xd87: V930 = LT V928 0x20
0xd88: V931 = ISZERO V930
0xd89: V932 = 0xd91
0xd8c: JUMPI 0xd91 V931
---
Entry stack: [V11, 0x847, V569, V815, 0xa9059cbb, V906, V919]
Stack pops: 4
Stack additions: [V927, V928]
Exit stack: [V11, 0x847, V569, V927, V928]

================================

Block 0xd8d
[0xd8d:0xd90]
---
Predecessors: [0xd7b]
Successors: []
---
0xd8d PUSH1 0x0
0xd8f DUP1
0xd90 REVERT
---
0xd8d: V933 = 0x0
0xd90: REVERT 0x0 0x0
---
Entry stack: [V11, 0x847, V569, V927, V928]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x847, V569, V927, V928]

================================

Block 0xd91
[0xd91:0xdbb]
---
Predecessors: [0xd7b]
Successors: []
---
0xd91 JUMPDEST
0xd92 DUP2
0xd93 ADD
0xd94 SWAP1
0xd95 DUP1
0xd96 DUP1
0xd97 MLOAD
0xd98 SWAP1
0xd99 PUSH1 0x20
0xd9b ADD
0xd9c SWAP1
0xd9d SWAP3
0xd9e SWAP2
0xd9f SWAP1
0xda0 POP
0xda1 POP
0xda2 POP
0xda3 POP
0xda4 DUP1
0xda5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdba AND
0xdbb SELFDESTRUCT
---
0xd91: JUMPDEST 
0xd93: V934 = ADD V927 V928
0xd97: V935 = M[V927]
0xd99: V936 = 0x20
0xd9b: V937 = ADD 0x20 V927
0xda5: V938 = 0xffffffffffffffffffffffffffffffffffffffff
0xdba: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0xdbb: SELFDESTRUCT V939
---
Entry stack: [V11, 0x847, V569, V927, V928]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V11, 0x847, V569]

================================

Block 0xdbc
[0xdbc:0xdc0]
---
Predecessors: [0xb5b]
Successors: []
---
0xdbc JUMPDEST
0xdbd PUSH1 0x0
0xdbf DUP1
0xdc0 REVERT
---
0xdbc: JUMPDEST 
0xdbd: V940 = 0x0
0xdc0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x847, V569]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x847, V569]

================================

Block 0xdc1
[0xdc1:0xde5]
---
Predecessors: [0x855]
Successors: [0x85e]
---
0xdc1 JUMPDEST
0xdc2 PUSH1 0x0
0xdc4 DUP1
0xdc5 SWAP1
0xdc6 SLOAD
0xdc7 SWAP1
0xdc8 PUSH2 0x100
0xdcb EXP
0xdcc SWAP1
0xdcd DIV
0xdce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde3 AND
0xde4 DUP2
0xde5 JUMP
---
0xdc1: JUMPDEST 
0xdc2: V941 = 0x0
0xdc6: V942 = S[0x0]
0xdc8: V943 = 0x100
0xdcb: V944 = EXP 0x100 0x0
0xdcd: V945 = DIV V942 0x1
0xdce: V946 = 0xffffffffffffffffffffffffffffffffffffffff
0xde3: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V945
0xde5: JUMP 0x85e
---
Entry stack: [V11, 0x85e]
Stack pops: 1
Stack additions: [S0, V947]
Exit stack: [V11, 0x85e, V947]

================================

Block 0xde6
[0xde6:0xdef]
---
Predecessors: [0x8ac]
Successors: [0x8b5]
---
0xde6 JUMPDEST
0xde7 PUSH1 0x0
0xde9 PUSH1 0x3
0xdeb SLOAD
0xdec SWAP1
0xded POP
0xdee SWAP1
0xdef JUMP
---
0xde6: JUMPDEST 
0xde7: V948 = 0x0
0xde9: V949 = 0x3
0xdeb: V950 = S[0x3]
0xdef: JUMP 0x8b5
---
Entry stack: [V11, 0x8b5]
Stack pops: 1
Stack additions: [V950]
Exit stack: [V11, V950]

================================

Block 0xdf0
[0xdf0:0xe45]
---
Predecessors: [0x8d7]
Successors: [0xe46, 0x10e3]
---
0xdf0 JUMPDEST
0xdf1 PUSH1 0x0
0xdf3 DUP1
0xdf4 SWAP1
0xdf5 SLOAD
0xdf6 SWAP1
0xdf7 PUSH2 0x100
0xdfa EXP
0xdfb SWAP1
0xdfc DIV
0xdfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe12 AND
0xe13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe28 AND
0xe29 CALLER
0xe2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3f AND
0xe40 EQ
0xe41 ISZERO
0xe42 PUSH2 0x10e3
0xe45 JUMPI
---
0xdf0: JUMPDEST 
0xdf1: V951 = 0x0
0xdf5: V952 = S[0x0]
0xdf7: V953 = 0x100
0xdfa: V954 = EXP 0x100 0x0
0xdfc: V955 = DIV V952 0x1
0xdfd: V956 = 0xffffffffffffffffffffffffffffffffffffffff
0xe12: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff V955
0xe13: V958 = 0xffffffffffffffffffffffffffffffffffffffff
0xe28: V959 = AND 0xffffffffffffffffffffffffffffffffffffffff V957
0xe29: V960 = CALLER
0xe2a: V961 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3f: V962 = AND 0xffffffffffffffffffffffffffffffffffffffff V960
0xe40: V963 = EQ V962 V959
0xe41: V964 = ISZERO V963
0xe42: V965 = 0x10e3
0xe45: JUMPI 0x10e3 V964
---
Entry stack: [V11, 0x8e0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0]

================================

Block 0xe46
[0xe46:0xed3]
---
Predecessors: [0xdf0]
Successors: [0xed4, 0xed5]
---
0xe46 PUSH1 0x5
0xe48 PUSH1 0x4
0xe4a SWAP1
0xe4b SLOAD
0xe4c SWAP1
0xe4d PUSH2 0x100
0xe50 EXP
0xe51 SWAP1
0xe52 DIV
0xe53 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe68 AND
0xe69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7e AND
0xe7f PUSH4 0xa9059cbb
0xe84 PUSH1 0x0
0xe86 DUP1
0xe87 SWAP1
0xe88 SLOAD
0xe89 SWAP1
0xe8a PUSH2 0x100
0xe8d EXP
0xe8e SWAP1
0xe8f DIV
0xe90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea5 AND
0xea6 PUSH8 0xde0b6b3a7640000
0xeaf PUSH1 0x5
0xeb1 PUSH1 0x0
0xeb3 SWAP1
0xeb4 SLOAD
0xeb5 SWAP1
0xeb6 PUSH2 0x100
0xeb9 EXP
0xeba SWAP1
0xebb DIV
0xebc PUSH1 0xff
0xebe AND
0xebf PUSH1 0xff
0xec1 AND
0xec2 PUSH1 0xa
0xec4 EXP
0xec5 PUSH1 0x4
0xec7 SLOAD
0xec8 PUSH1 0x2
0xeca SLOAD
0xecb MUL
0xecc MUL
0xecd DUP2
0xece ISZERO
0xecf ISZERO
0xed0 PUSH2 0xed5
0xed3 JUMPI
---
0xe46: V966 = 0x5
0xe48: V967 = 0x4
0xe4b: V968 = S[0x5]
0xe4d: V969 = 0x100
0xe50: V970 = EXP 0x100 0x4
0xe52: V971 = DIV V968 0x100000000
0xe53: V972 = 0xffffffffffffffffffffffffffffffffffffffff
0xe68: V973 = AND 0xffffffffffffffffffffffffffffffffffffffff V971
0xe69: V974 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7e: V975 = AND 0xffffffffffffffffffffffffffffffffffffffff V973
0xe7f: V976 = 0xa9059cbb
0xe84: V977 = 0x0
0xe88: V978 = S[0x0]
0xe8a: V979 = 0x100
0xe8d: V980 = EXP 0x100 0x0
0xe8f: V981 = DIV V978 0x1
0xe90: V982 = 0xffffffffffffffffffffffffffffffffffffffff
0xea5: V983 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0xea6: V984 = 0xde0b6b3a7640000
0xeaf: V985 = 0x5
0xeb1: V986 = 0x0
0xeb4: V987 = S[0x5]
0xeb6: V988 = 0x100
0xeb9: V989 = EXP 0x100 0x0
0xebb: V990 = DIV V987 0x1
0xebc: V991 = 0xff
0xebe: V992 = AND 0xff V990
0xebf: V993 = 0xff
0xec1: V994 = AND 0xff V992
0xec2: V995 = 0xa
0xec4: V996 = EXP 0xa V994
0xec5: V997 = 0x4
0xec7: V998 = S[0x4]
0xec8: V999 = 0x2
0xeca: V1000 = S[0x2]
0xecb: V1001 = MUL V1000 V998
0xecc: V1002 = MUL V1001 V996
0xece: V1003 = ISZERO 0xde0b6b3a7640000
0xecf: V1004 = ISZERO 0x0
0xed0: V1005 = 0xed5
0xed3: JUMPI 0xed5 0x1
---
Entry stack: [V11, 0x8e0]
Stack pops: 0
Stack additions: [V975, 0xa9059cbb, V983, 0xde0b6b3a7640000, V1002]
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, 0xde0b6b3a7640000, V1002]

================================

Block 0xed4
[0xed4:0xed4]
---
Predecessors: [0xe46]
Successors: []
---
0xed4 INVALID
---
0xed4: INVALID 
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, 0xde0b6b3a7640000, V1002]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, 0xde0b6b3a7640000, V1002]

================================

Block 0xed5
[0xed5:0xf57]
---
Predecessors: [0xe46]
Successors: [0xf58, 0xf5c]
---
0xed5 JUMPDEST
0xed6 DIV
0xed7 PUSH1 0x5
0xed9 PUSH1 0x4
0xedb SWAP1
0xedc SLOAD
0xedd SWAP1
0xede PUSH2 0x100
0xee1 EXP
0xee2 SWAP1
0xee3 DIV
0xee4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef9 AND
0xefa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0f AND
0xf10 PUSH4 0x18160ddd
0xf15 PUSH1 0x40
0xf17 MLOAD
0xf18 DUP2
0xf19 PUSH4 0xffffffff
0xf1e AND
0xf1f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf3d MUL
0xf3e DUP2
0xf3f MSTORE
0xf40 PUSH1 0x4
0xf42 ADD
0xf43 PUSH1 0x20
0xf45 PUSH1 0x40
0xf47 MLOAD
0xf48 DUP1
0xf49 DUP4
0xf4a SUB
0xf4b DUP2
0xf4c PUSH1 0x0
0xf4e DUP8
0xf4f DUP1
0xf50 EXTCODESIZE
0xf51 ISZERO
0xf52 DUP1
0xf53 ISZERO
0xf54 PUSH2 0xf5c
0xf57 JUMPI
---
0xed5: JUMPDEST 
0xed6: V1006 = DIV V1002 0xde0b6b3a7640000
0xed7: V1007 = 0x5
0xed9: V1008 = 0x4
0xedc: V1009 = S[0x5]
0xede: V1010 = 0x100
0xee1: V1011 = EXP 0x100 0x4
0xee3: V1012 = DIV V1009 0x100000000
0xee4: V1013 = 0xffffffffffffffffffffffffffffffffffffffff
0xef9: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffff V1012
0xefa: V1015 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0f: V1016 = AND 0xffffffffffffffffffffffffffffffffffffffff V1014
0xf10: V1017 = 0x18160ddd
0xf15: V1018 = 0x40
0xf17: V1019 = M[0x40]
0xf19: V1020 = 0xffffffff
0xf1e: V1021 = AND 0xffffffff 0x18160ddd
0xf1f: V1022 = 0x100000000000000000000000000000000000000000000000000000000
0xf3d: V1023 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0xf3f: M[V1019] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0xf40: V1024 = 0x4
0xf42: V1025 = ADD 0x4 V1019
0xf43: V1026 = 0x20
0xf45: V1027 = 0x40
0xf47: V1028 = M[0x40]
0xf4a: V1029 = SUB V1025 V1028
0xf4c: V1030 = 0x0
0xf50: V1031 = EXTCODESIZE V1016
0xf51: V1032 = ISZERO V1031
0xf53: V1033 = ISZERO V1032
0xf54: V1034 = 0xf5c
0xf57: JUMPI 0xf5c V1033
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, 0xde0b6b3a7640000, V1002]
Stack pops: 2
Stack additions: [V1006, V1016, 0x18160ddd, V1025, 0x20, V1028, V1029, V1028, 0x0, V1016, V1032]
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1016, 0x18160ddd, V1025, 0x20, V1028, V1029, V1028, 0x0, V1016, V1032]

================================

Block 0xf58
[0xf58:0xf5b]
---
Predecessors: [0xed5]
Successors: []
---
0xf58 PUSH1 0x0
0xf5a DUP1
0xf5b REVERT
---
0xf58: V1035 = 0x0
0xf5b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1016, 0x18160ddd, V1025, 0x20, V1028, V1029, V1028, 0x0, V1016, V1032]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1016, 0x18160ddd, V1025, 0x20, V1028, V1029, V1028, 0x0, V1016, V1032]

================================

Block 0xf5c
[0xf5c:0xf66]
---
Predecessors: [0xed5]
Successors: [0xf67, 0xf70]
---
0xf5c JUMPDEST
0xf5d POP
0xf5e GAS
0xf5f CALL
0xf60 ISZERO
0xf61 DUP1
0xf62 ISZERO
0xf63 PUSH2 0xf70
0xf66 JUMPI
---
0xf5c: JUMPDEST 
0xf5e: V1036 = GAS
0xf5f: V1037 = CALL V1036 V1016 0x0 V1028 V1029 V1028 0x20
0xf60: V1038 = ISZERO V1037
0xf62: V1039 = ISZERO V1038
0xf63: V1040 = 0xf70
0xf66: JUMPI 0xf70 V1039
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1016, 0x18160ddd, V1025, 0x20, V1028, V1029, V1028, 0x0, V1016, V1032]
Stack pops: 7
Stack additions: [V1038]
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1016, 0x18160ddd, V1025, V1038]

================================

Block 0xf67
[0xf67:0xf6f]
---
Predecessors: [0xf5c]
Successors: []
---
0xf67 RETURNDATASIZE
0xf68 PUSH1 0x0
0xf6a DUP1
0xf6b RETURNDATACOPY
0xf6c RETURNDATASIZE
0xf6d PUSH1 0x0
0xf6f REVERT
---
0xf67: V1041 = RETURNDATASIZE
0xf68: V1042 = 0x0
0xf6b: RETURNDATACOPY 0x0 0x0 V1041
0xf6c: V1043 = RETURNDATASIZE
0xf6d: V1044 = 0x0
0xf6f: REVERT 0x0 V1043
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1016, 0x18160ddd, V1025, V1038]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1016, 0x18160ddd, V1025, V1038]

================================

Block 0xf70
[0xf70:0xf81]
---
Predecessors: [0xf5c]
Successors: [0xf82, 0xf86]
---
0xf70 JUMPDEST
0xf71 POP
0xf72 POP
0xf73 POP
0xf74 POP
0xf75 PUSH1 0x40
0xf77 MLOAD
0xf78 RETURNDATASIZE
0xf79 PUSH1 0x20
0xf7b DUP2
0xf7c LT
0xf7d ISZERO
0xf7e PUSH2 0xf86
0xf81 JUMPI
---
0xf70: JUMPDEST 
0xf75: V1045 = 0x40
0xf77: V1046 = M[0x40]
0xf78: V1047 = RETURNDATASIZE
0xf79: V1048 = 0x20
0xf7c: V1049 = LT V1047 0x20
0xf7d: V1050 = ISZERO V1049
0xf7e: V1051 = 0xf86
0xf81: JUMPI 0xf86 V1050
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1016, 0x18160ddd, V1025, V1038]
Stack pops: 4
Stack additions: [V1046, V1047]
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1046, V1047]

================================

Block 0xf82
[0xf82:0xf85]
---
Predecessors: [0xf70]
Successors: []
---
0xf82 PUSH1 0x0
0xf84 DUP1
0xf85 REVERT
---
0xf82: V1052 = 0x0
0xf85: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1046, V1047]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1046, V1047]

================================

Block 0xf86
[0xf86:0x1018]
---
Predecessors: [0xf70]
Successors: [0x1019, 0x101d]
---
0xf86 JUMPDEST
0xf87 DUP2
0xf88 ADD
0xf89 SWAP1
0xf8a DUP1
0xf8b DUP1
0xf8c MLOAD
0xf8d SWAP1
0xf8e PUSH1 0x20
0xf90 ADD
0xf91 SWAP1
0xf92 SWAP3
0xf93 SWAP2
0xf94 SWAP1
0xf95 POP
0xf96 POP
0xf97 POP
0xf98 SUB
0xf99 PUSH1 0x40
0xf9b MLOAD
0xf9c DUP4
0xf9d PUSH4 0xffffffff
0xfa2 AND
0xfa3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xfc1 MUL
0xfc2 DUP2
0xfc3 MSTORE
0xfc4 PUSH1 0x4
0xfc6 ADD
0xfc7 DUP1
0xfc8 DUP4
0xfc9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfde AND
0xfdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff4 AND
0xff5 DUP2
0xff6 MSTORE
0xff7 PUSH1 0x20
0xff9 ADD
0xffa DUP3
0xffb DUP2
0xffc MSTORE
0xffd PUSH1 0x20
0xfff ADD
0x1000 SWAP3
0x1001 POP
0x1002 POP
0x1003 POP
0x1004 PUSH1 0x20
0x1006 PUSH1 0x40
0x1008 MLOAD
0x1009 DUP1
0x100a DUP4
0x100b SUB
0x100c DUP2
0x100d PUSH1 0x0
0x100f DUP8
0x1010 DUP1
0x1011 EXTCODESIZE
0x1012 ISZERO
0x1013 DUP1
0x1014 ISZERO
0x1015 PUSH2 0x101d
0x1018 JUMPI
---
0xf86: JUMPDEST 
0xf88: V1053 = ADD V1046 V1047
0xf8c: V1054 = M[V1046]
0xf8e: V1055 = 0x20
0xf90: V1056 = ADD 0x20 V1046
0xf98: V1057 = SUB V1054 V1006
0xf99: V1058 = 0x40
0xf9b: V1059 = M[0x40]
0xf9d: V1060 = 0xffffffff
0xfa2: V1061 = AND 0xffffffff 0xa9059cbb
0xfa3: V1062 = 0x100000000000000000000000000000000000000000000000000000000
0xfc1: V1063 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xfc3: M[V1059] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xfc4: V1064 = 0x4
0xfc6: V1065 = ADD 0x4 V1059
0xfc9: V1066 = 0xffffffffffffffffffffffffffffffffffffffff
0xfde: V1067 = AND 0xffffffffffffffffffffffffffffffffffffffff V983
0xfdf: V1068 = 0xffffffffffffffffffffffffffffffffffffffff
0xff4: V1069 = AND 0xffffffffffffffffffffffffffffffffffffffff V1067
0xff6: M[V1065] = V1069
0xff7: V1070 = 0x20
0xff9: V1071 = ADD 0x20 V1065
0xffc: M[V1071] = V1057
0xffd: V1072 = 0x20
0xfff: V1073 = ADD 0x20 V1071
0x1004: V1074 = 0x20
0x1006: V1075 = 0x40
0x1008: V1076 = M[0x40]
0x100b: V1077 = SUB V1073 V1076
0x100d: V1078 = 0x0
0x1011: V1079 = EXTCODESIZE V975
0x1012: V1080 = ISZERO V1079
0x1014: V1081 = ISZERO V1080
0x1015: V1082 = 0x101d
0x1018: JUMPI 0x101d V1081
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V983, V1006, V1046, V1047]
Stack pops: 6
Stack additions: [S5, S4, V1073, 0x20, V1076, V1077, V1076, 0x0, S5, V1080]
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V1073, 0x20, V1076, V1077, V1076, 0x0, V975, V1080]

================================

Block 0x1019
[0x1019:0x101c]
---
Predecessors: [0xf86]
Successors: []
---
0x1019 PUSH1 0x0
0x101b DUP1
0x101c REVERT
---
0x1019: V1083 = 0x0
0x101c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V1073, 0x20, V1076, V1077, V1076, 0x0, V975, V1080]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V1073, 0x20, V1076, V1077, V1076, 0x0, V975, V1080]

================================

Block 0x101d
[0x101d:0x1027]
---
Predecessors: [0xf86]
Successors: [0x1028, 0x1031]
---
0x101d JUMPDEST
0x101e POP
0x101f GAS
0x1020 CALL
0x1021 ISZERO
0x1022 DUP1
0x1023 ISZERO
0x1024 PUSH2 0x1031
0x1027 JUMPI
---
0x101d: JUMPDEST 
0x101f: V1084 = GAS
0x1020: V1085 = CALL V1084 V975 0x0 V1076 V1077 V1076 0x20
0x1021: V1086 = ISZERO V1085
0x1023: V1087 = ISZERO V1086
0x1024: V1088 = 0x1031
0x1027: JUMPI 0x1031 V1087
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V1073, 0x20, V1076, V1077, V1076, 0x0, V975, V1080]
Stack pops: 7
Stack additions: [V1086]
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V1073, V1086]

================================

Block 0x1028
[0x1028:0x1030]
---
Predecessors: [0x101d]
Successors: []
---
0x1028 RETURNDATASIZE
0x1029 PUSH1 0x0
0x102b DUP1
0x102c RETURNDATACOPY
0x102d RETURNDATASIZE
0x102e PUSH1 0x0
0x1030 REVERT
---
0x1028: V1089 = RETURNDATASIZE
0x1029: V1090 = 0x0
0x102c: RETURNDATACOPY 0x0 0x0 V1089
0x102d: V1091 = RETURNDATASIZE
0x102e: V1092 = 0x0
0x1030: REVERT 0x0 V1091
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V1073, V1086]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0, V975, 0xa9059cbb, V1073, V1086]

================================

Block 0x1031
[0x1031:0x1042]
---
Predecessors: [0x101d]
Successors: [0x1043, 0x1047]
---
0x1031 JUMPDEST
0x1032 POP
0x1033 POP
0x1034 POP
0x1035 POP
0x1036 PUSH1 0x40
0x1038 MLOAD
0x1039 RETURNDATASIZE
0x103a PUSH1 0x20
0x103c DUP2
0x103d LT
0x103e ISZERO
0x103f PUSH2 0x1047
0x1042 JUMPI
---
0x1031: JUMPDEST 
0x1036: V1093 = 0x40
0x1038: V1094 = M[0x40]
0x1039: V1095 = RETURNDATASIZE
0x103a: V1096 = 0x20
0x103d: V1097 = LT V1095 0x20
0x103e: V1098 = ISZERO V1097
0x103f: V1099 = 0x1047
0x1042: JUMPI 0x1047 V1098
---
Entry stack: [V11, 0x8e0, V975, 0xa9059cbb, V1073, V1086]
Stack pops: 4
Stack additions: [V1094, V1095]
Exit stack: [V11, 0x8e0, V1094, V1095]

================================

Block 0x1043
[0x1043:0x1046]
---
Predecessors: [0x1031]
Successors: []
---
0x1043 PUSH1 0x0
0x1045 DUP1
0x1046 REVERT
---
0x1043: V1100 = 0x0
0x1046: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8e0, V1094, V1095]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0, V1094, V1095]

================================

Block 0x1047
[0x1047:0x10b8]
---
Predecessors: [0x1031]
Successors: [0x10b9, 0x10c2]
---
0x1047 JUMPDEST
0x1048 DUP2
0x1049 ADD
0x104a SWAP1
0x104b DUP1
0x104c DUP1
0x104d MLOAD
0x104e SWAP1
0x104f PUSH1 0x20
0x1051 ADD
0x1052 SWAP1
0x1053 SWAP3
0x1054 SWAP2
0x1055 SWAP1
0x1056 POP
0x1057 POP
0x1058 POP
0x1059 POP
0x105a PUSH1 0x0
0x105c DUP1
0x105d SWAP1
0x105e SLOAD
0x105f SWAP1
0x1060 PUSH2 0x100
0x1063 EXP
0x1064 SWAP1
0x1065 DIV
0x1066 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107b AND
0x107c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1091 AND
0x1092 PUSH2 0x8fc
0x1095 PUSH1 0x2
0x1097 SLOAD
0x1098 SWAP1
0x1099 DUP2
0x109a ISZERO
0x109b MUL
0x109c SWAP1
0x109d PUSH1 0x40
0x109f MLOAD
0x10a0 PUSH1 0x0
0x10a2 PUSH1 0x40
0x10a4 MLOAD
0x10a5 DUP1
0x10a6 DUP4
0x10a7 SUB
0x10a8 DUP2
0x10a9 DUP6
0x10aa DUP9
0x10ab DUP9
0x10ac CALL
0x10ad SWAP4
0x10ae POP
0x10af POP
0x10b0 POP
0x10b1 POP
0x10b2 ISZERO
0x10b3 DUP1
0x10b4 ISZERO
0x10b5 PUSH2 0x10c2
0x10b8 JUMPI
---
0x1047: JUMPDEST 
0x1049: V1101 = ADD V1094 V1095
0x104d: V1102 = M[V1094]
0x104f: V1103 = 0x20
0x1051: V1104 = ADD 0x20 V1094
0x105a: V1105 = 0x0
0x105e: V1106 = S[0x0]
0x1060: V1107 = 0x100
0x1063: V1108 = EXP 0x100 0x0
0x1065: V1109 = DIV V1106 0x1
0x1066: V1110 = 0xffffffffffffffffffffffffffffffffffffffff
0x107b: V1111 = AND 0xffffffffffffffffffffffffffffffffffffffff V1109
0x107c: V1112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1091: V1113 = AND 0xffffffffffffffffffffffffffffffffffffffff V1111
0x1092: V1114 = 0x8fc
0x1095: V1115 = 0x2
0x1097: V1116 = S[0x2]
0x109a: V1117 = ISZERO V1116
0x109b: V1118 = MUL V1117 0x8fc
0x109d: V1119 = 0x40
0x109f: V1120 = M[0x40]
0x10a0: V1121 = 0x0
0x10a2: V1122 = 0x40
0x10a4: V1123 = M[0x40]
0x10a7: V1124 = SUB V1120 V1123
0x10ac: V1125 = CALL V1118 V1113 V1116 V1123 V1124 V1123 0x0
0x10b2: V1126 = ISZERO V1125
0x10b4: V1127 = ISZERO V1126
0x10b5: V1128 = 0x10c2
0x10b8: JUMPI 0x10c2 V1127
---
Entry stack: [V11, 0x8e0, V1094, V1095]
Stack pops: 2
Stack additions: [V1126]
Exit stack: [V11, 0x8e0, V1126]

================================

Block 0x10b9
[0x10b9:0x10c1]
---
Predecessors: [0x1047]
Successors: []
---
0x10b9 RETURNDATASIZE
0x10ba PUSH1 0x0
0x10bc DUP1
0x10bd RETURNDATACOPY
0x10be RETURNDATASIZE
0x10bf PUSH1 0x0
0x10c1 REVERT
---
0x10b9: V1129 = RETURNDATASIZE
0x10ba: V1130 = 0x0
0x10bd: RETURNDATACOPY 0x0 0x0 V1129
0x10be: V1131 = RETURNDATASIZE
0x10bf: V1132 = 0x0
0x10c1: REVERT 0x0 V1131
---
Entry stack: [V11, 0x8e0, V1126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0, V1126]

================================

Block 0x10c2
[0x10c2:0x10e2]
---
Predecessors: [0x1047]
Successors: [0x10e8]
---
0x10c2 JUMPDEST
0x10c3 POP
0x10c4 PUSH1 0x1
0x10c6 PUSH1 0x5
0x10c8 PUSH1 0x3
0x10ca PUSH2 0x100
0x10cd EXP
0x10ce DUP2
0x10cf SLOAD
0x10d0 DUP2
0x10d1 PUSH1 0xff
0x10d3 MUL
0x10d4 NOT
0x10d5 AND
0x10d6 SWAP1
0x10d7 DUP4
0x10d8 ISZERO
0x10d9 ISZERO
0x10da MUL
0x10db OR
0x10dc SWAP1
0x10dd SSTORE
0x10de POP
0x10df PUSH2 0x10e8
0x10e2 JUMP
---
0x10c2: JUMPDEST 
0x10c4: V1133 = 0x1
0x10c6: V1134 = 0x5
0x10c8: V1135 = 0x3
0x10ca: V1136 = 0x100
0x10cd: V1137 = EXP 0x100 0x3
0x10cf: V1138 = S[0x5]
0x10d1: V1139 = 0xff
0x10d3: V1140 = MUL 0xff 0x1000000
0x10d4: V1141 = NOT 0xff000000
0x10d5: V1142 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff V1138
0x10d8: V1143 = ISZERO 0x1
0x10d9: V1144 = ISZERO 0x0
0x10da: V1145 = MUL 0x1 0x1000000
0x10db: V1146 = OR 0x1000000 V1142
0x10dd: S[0x5] = V1146
0x10df: V1147 = 0x10e8
0x10e2: JUMP 0x10e8
---
Entry stack: [V11, 0x8e0, V1126]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8e0]

================================

Block 0x10e3
[0x10e3:0x10e7]
---
Predecessors: [0xdf0]
Successors: []
---
0x10e3 JUMPDEST
0x10e4 PUSH1 0x0
0x10e6 DUP1
0x10e7 REVERT
---
0x10e3: JUMPDEST 
0x10e4: V1148 = 0x0
0x10e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8e0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e0]

================================

Block 0x10e8
[0x10e8:0x10e9]
---
Predecessors: [0x10c2]
Successors: [0x8e0]
---
0x10e8 JUMPDEST
0x10e9 JUMP
---
0x10e8: JUMPDEST 
0x10e9: JUMP 0x8e0
---
Entry stack: [V11, 0x8e0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x10ea
[0x10ea:0x113f]
---
Predecessors: [0x8ee]
Successors: [0x1140, 0x115f]
---
0x10ea JUMPDEST
0x10eb PUSH1 0x0
0x10ed DUP1
0x10ee SWAP1
0x10ef SLOAD
0x10f0 SWAP1
0x10f1 PUSH2 0x100
0x10f4 EXP
0x10f5 SWAP1
0x10f6 DIV
0x10f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x110c AND
0x110d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1122 AND
0x1123 CALLER
0x1124 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1139 AND
0x113a EQ
0x113b ISZERO
0x113c PUSH2 0x115f
0x113f JUMPI
---
0x10ea: JUMPDEST 
0x10eb: V1149 = 0x0
0x10ef: V1150 = S[0x0]
0x10f1: V1151 = 0x100
0x10f4: V1152 = EXP 0x100 0x0
0x10f6: V1153 = DIV V1150 0x1
0x10f7: V1154 = 0xffffffffffffffffffffffffffffffffffffffff
0x110c: V1155 = AND 0xffffffffffffffffffffffffffffffffffffffff V1153
0x110d: V1156 = 0xffffffffffffffffffffffffffffffffffffffff
0x1122: V1157 = AND 0xffffffffffffffffffffffffffffffffffffffff V1155
0x1123: V1158 = CALLER
0x1124: V1159 = 0xffffffffffffffffffffffffffffffffffffffff
0x1139: V1160 = AND 0xffffffffffffffffffffffffffffffffffffffff V1158
0x113a: V1161 = EQ V1160 V1157
0x113b: V1162 = ISZERO V1161
0x113c: V1163 = 0x115f
0x113f: JUMPI 0x115f V1162
---
Entry stack: [V11, 0x8f7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f7]

================================

Block 0x1140
[0x1140:0x115e]
---
Predecessors: [0x10ea]
Successors: [0x1164]
---
0x1140 PUSH1 0x1
0x1142 PUSH1 0x5
0x1144 PUSH1 0x2
0x1146 PUSH2 0x100
0x1149 EXP
0x114a DUP2
0x114b SLOAD
0x114c DUP2
0x114d PUSH1 0xff
0x114f MUL
0x1150 NOT
0x1151 AND
0x1152 SWAP1
0x1153 DUP4
0x1154 ISZERO
0x1155 ISZERO
0x1156 MUL
0x1157 OR
0x1158 SWAP1
0x1159 SSTORE
0x115a POP
0x115b PUSH2 0x1164
0x115e JUMP
---
0x1140: V1164 = 0x1
0x1142: V1165 = 0x5
0x1144: V1166 = 0x2
0x1146: V1167 = 0x100
0x1149: V1168 = EXP 0x100 0x2
0x114b: V1169 = S[0x5]
0x114d: V1170 = 0xff
0x114f: V1171 = MUL 0xff 0x10000
0x1150: V1172 = NOT 0xff0000
0x1151: V1173 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1169
0x1154: V1174 = ISZERO 0x1
0x1155: V1175 = ISZERO 0x0
0x1156: V1176 = MUL 0x1 0x10000
0x1157: V1177 = OR 0x10000 V1173
0x1159: S[0x5] = V1177
0x115b: V1178 = 0x1164
0x115e: JUMP 0x1164
---
Entry stack: [V11, 0x8f7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f7]

================================

Block 0x115f
[0x115f:0x1163]
---
Predecessors: [0x10ea]
Successors: []
---
0x115f JUMPDEST
0x1160 PUSH1 0x0
0x1162 DUP1
0x1163 REVERT
---
0x115f: JUMPDEST 
0x1160: V1179 = 0x0
0x1163: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f7]

================================

Block 0x1164
[0x1164:0x1165]
---
Predecessors: [0x1140]
Successors: [0x8f7]
---
0x1164 JUMPDEST
0x1165 JUMP
---
0x1164: JUMPDEST 
0x1165: JUMP 0x8f7
---
Entry stack: [V11, 0x8f7]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1166
[0x1166:0x1173]
---
Predecessors: [0x905]
Successors: [0x1174, 0x117d]
---
0x1166 JUMPDEST
0x1167 PUSH1 0x0
0x1169 PUSH1 0x3
0x116b SLOAD
0x116c TIMESTAMP
0x116d LT
0x116e ISZERO
0x116f DUP1
0x1170 PUSH2 0x117d
0x1173 JUMPI
---
0x1166: JUMPDEST 
0x1167: V1180 = 0x0
0x1169: V1181 = 0x3
0x116b: V1182 = S[0x3]
0x116c: V1183 = TIMESTAMP
0x116d: V1184 = LT V1183 V1182
0x116e: V1185 = ISZERO V1184
0x1170: V1186 = 0x117d
0x1173: JUMPI 0x117d V1185
---
Entry stack: [V11, 0x90e]
Stack pops: 0
Stack additions: [0x0, V1185]
Exit stack: [V11, 0x90e, 0x0, V1185]

================================

Block 0x1174
[0x1174:0x117c]
---
Predecessors: [0x1166]
Successors: [0x117d]
---
0x1174 POP
0x1175 PUSH1 0x1
0x1177 SLOAD
0x1178 PUSH1 0x2
0x117a SLOAD
0x117b LT
0x117c ISZERO
---
0x1175: V1187 = 0x1
0x1177: V1188 = S[0x1]
0x1178: V1189 = 0x2
0x117a: V1190 = S[0x2]
0x117b: V1191 = LT V1190 V1188
0x117c: V1192 = ISZERO V1191
---
Entry stack: [V11, 0x90e, 0x0, V1185]
Stack pops: 1
Stack additions: [V1192]
Exit stack: [V11, 0x90e, 0x0, V1192]

================================

Block 0x117d
[0x117d:0x1181]
---
Predecessors: [0x1166, 0x1174]
Successors: [0x90e]
---
0x117d JUMPDEST
0x117e SWAP1
0x117f POP
0x1180 SWAP1
0x1181 JUMP
---
0x117d: JUMPDEST 
0x1181: JUMP 0x90e
---
Entry stack: [V11, 0x90e, 0x0, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x1182
[0x1182:0x123c]
---
Predecessors: [0x934]
Successors: [0x123d, 0x1241]
---
0x1182 JUMPDEST
0x1183 PUSH1 0x0
0x1185 PUSH1 0x5
0x1187 PUSH1 0x4
0x1189 SWAP1
0x118a SLOAD
0x118b SWAP1
0x118c PUSH2 0x100
0x118f EXP
0x1190 SWAP1
0x1191 DIV
0x1192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a7 AND
0x11a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11bd AND
0x11be PUSH4 0x70a08231
0x11c3 DUP4
0x11c4 PUSH1 0x40
0x11c6 MLOAD
0x11c7 DUP3
0x11c8 PUSH4 0xffffffff
0x11cd AND
0x11ce PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11ec MUL
0x11ed DUP2
0x11ee MSTORE
0x11ef PUSH1 0x4
0x11f1 ADD
0x11f2 DUP1
0x11f3 DUP3
0x11f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1209 AND
0x120a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121f AND
0x1220 DUP2
0x1221 MSTORE
0x1222 PUSH1 0x20
0x1224 ADD
0x1225 SWAP2
0x1226 POP
0x1227 POP
0x1228 PUSH1 0x20
0x122a PUSH1 0x40
0x122c MLOAD
0x122d DUP1
0x122e DUP4
0x122f SUB
0x1230 DUP2
0x1231 PUSH1 0x0
0x1233 DUP8
0x1234 DUP1
0x1235 EXTCODESIZE
0x1236 ISZERO
0x1237 DUP1
0x1238 ISZERO
0x1239 PUSH2 0x1241
0x123c JUMPI
---
0x1182: JUMPDEST 
0x1183: V1193 = 0x0
0x1185: V1194 = 0x5
0x1187: V1195 = 0x4
0x118a: V1196 = S[0x5]
0x118c: V1197 = 0x100
0x118f: V1198 = EXP 0x100 0x4
0x1191: V1199 = DIV V1196 0x100000000
0x1192: V1200 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a7: V1201 = AND 0xffffffffffffffffffffffffffffffffffffffff V1199
0x11a8: V1202 = 0xffffffffffffffffffffffffffffffffffffffff
0x11bd: V1203 = AND 0xffffffffffffffffffffffffffffffffffffffff V1201
0x11be: V1204 = 0x70a08231
0x11c4: V1205 = 0x40
0x11c6: V1206 = M[0x40]
0x11c8: V1207 = 0xffffffff
0x11cd: V1208 = AND 0xffffffff 0x70a08231
0x11ce: V1209 = 0x100000000000000000000000000000000000000000000000000000000
0x11ec: V1210 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x11ee: M[V1206] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x11ef: V1211 = 0x4
0x11f1: V1212 = ADD 0x4 V1206
0x11f4: V1213 = 0xffffffffffffffffffffffffffffffffffffffff
0x1209: V1214 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0x120a: V1215 = 0xffffffffffffffffffffffffffffffffffffffff
0x121f: V1216 = AND 0xffffffffffffffffffffffffffffffffffffffff V1214
0x1221: M[V1212] = V1216
0x1222: V1217 = 0x20
0x1224: V1218 = ADD 0x20 V1212
0x1228: V1219 = 0x20
0x122a: V1220 = 0x40
0x122c: V1221 = M[0x40]
0x122f: V1222 = SUB V1218 V1221
0x1231: V1223 = 0x0
0x1235: V1224 = EXTCODESIZE V1203
0x1236: V1225 = ISZERO V1224
0x1238: V1226 = ISZERO V1225
0x1239: V1227 = 0x1241
0x123c: JUMPI 0x1241 V1226
---
Entry stack: [V11, 0x969, V643]
Stack pops: 1
Stack additions: [S0, 0x0, V1203, 0x70a08231, V1218, 0x20, V1221, V1222, V1221, 0x0, V1203, V1225]
Exit stack: [V11, 0x969, V643, 0x0, V1203, 0x70a08231, V1218, 0x20, V1221, V1222, V1221, 0x0, V1203, V1225]

================================

Block 0x123d
[0x123d:0x1240]
---
Predecessors: [0x1182]
Successors: []
---
0x123d PUSH1 0x0
0x123f DUP1
0x1240 REVERT
---
0x123d: V1228 = 0x0
0x1240: REVERT 0x0 0x0
---
Entry stack: [V11, 0x969, V643, 0x0, V1203, 0x70a08231, V1218, 0x20, V1221, V1222, V1221, 0x0, V1203, V1225]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x969, V643, 0x0, V1203, 0x70a08231, V1218, 0x20, V1221, V1222, V1221, 0x0, V1203, V1225]

================================

Block 0x1241
[0x1241:0x124b]
---
Predecessors: [0x1182]
Successors: [0x124c, 0x1255]
---
0x1241 JUMPDEST
0x1242 POP
0x1243 GAS
0x1244 CALL
0x1245 ISZERO
0x1246 DUP1
0x1247 ISZERO
0x1248 PUSH2 0x1255
0x124b JUMPI
---
0x1241: JUMPDEST 
0x1243: V1229 = GAS
0x1244: V1230 = CALL V1229 V1203 0x0 V1221 V1222 V1221 0x20
0x1245: V1231 = ISZERO V1230
0x1247: V1232 = ISZERO V1231
0x1248: V1233 = 0x1255
0x124b: JUMPI 0x1255 V1232
---
Entry stack: [V11, 0x969, V643, 0x0, V1203, 0x70a08231, V1218, 0x20, V1221, V1222, V1221, 0x0, V1203, V1225]
Stack pops: 7
Stack additions: [V1231]
Exit stack: [V11, 0x969, V643, 0x0, V1203, 0x70a08231, V1218, V1231]

================================

Block 0x124c
[0x124c:0x1254]
---
Predecessors: [0x1241]
Successors: []
---
0x124c RETURNDATASIZE
0x124d PUSH1 0x0
0x124f DUP1
0x1250 RETURNDATACOPY
0x1251 RETURNDATASIZE
0x1252 PUSH1 0x0
0x1254 REVERT
---
0x124c: V1234 = RETURNDATASIZE
0x124d: V1235 = 0x0
0x1250: RETURNDATACOPY 0x0 0x0 V1234
0x1251: V1236 = RETURNDATASIZE
0x1252: V1237 = 0x0
0x1254: REVERT 0x0 V1236
---
Entry stack: [V11, 0x969, V643, 0x0, V1203, 0x70a08231, V1218, V1231]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x969, V643, 0x0, V1203, 0x70a08231, V1218, V1231]

================================

Block 0x1255
[0x1255:0x1266]
---
Predecessors: [0x1241]
Successors: [0x1267, 0x126b]
---
0x1255 JUMPDEST
0x1256 POP
0x1257 POP
0x1258 POP
0x1259 POP
0x125a PUSH1 0x40
0x125c MLOAD
0x125d RETURNDATASIZE
0x125e PUSH1 0x20
0x1260 DUP2
0x1261 LT
0x1262 ISZERO
0x1263 PUSH2 0x126b
0x1266 JUMPI
---
0x1255: JUMPDEST 
0x125a: V1238 = 0x40
0x125c: V1239 = M[0x40]
0x125d: V1240 = RETURNDATASIZE
0x125e: V1241 = 0x20
0x1261: V1242 = LT V1240 0x20
0x1262: V1243 = ISZERO V1242
0x1263: V1244 = 0x126b
0x1266: JUMPI 0x126b V1243
---
Entry stack: [V11, 0x969, V643, 0x0, V1203, 0x70a08231, V1218, V1231]
Stack pops: 4
Stack additions: [V1239, V1240]
Exit stack: [V11, 0x969, V643, 0x0, V1239, V1240]

================================

Block 0x1267
[0x1267:0x126a]
---
Predecessors: [0x1255]
Successors: []
---
0x1267 PUSH1 0x0
0x1269 DUP1
0x126a REVERT
---
0x1267: V1245 = 0x0
0x126a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x969, V643, 0x0, V1239, V1240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x969, V643, 0x0, V1239, V1240]

================================

Block 0x126b
[0x126b:0x1282]
---
Predecessors: [0x1255]
Successors: [0x969]
---
0x126b JUMPDEST
0x126c DUP2
0x126d ADD
0x126e SWAP1
0x126f DUP1
0x1270 DUP1
0x1271 MLOAD
0x1272 SWAP1
0x1273 PUSH1 0x20
0x1275 ADD
0x1276 SWAP1
0x1277 SWAP3
0x1278 SWAP2
0x1279 SWAP1
0x127a POP
0x127b POP
0x127c POP
0x127d SWAP1
0x127e POP
0x127f SWAP2
0x1280 SWAP1
0x1281 POP
0x1282 JUMP
---
0x126b: JUMPDEST 
0x126d: V1246 = ADD V1239 V1240
0x1271: V1247 = M[V1239]
0x1273: V1248 = 0x20
0x1275: V1249 = ADD 0x20 V1239
0x1282: JUMP 0x969
---
Entry stack: [V11, 0x969, V643, 0x0, V1239, V1240]
Stack pops: 5
Stack additions: [V1247]
Exit stack: [V11, V1247]

================================

Block 0x1283
[0x1283:0x12d8]
---
Predecessors: [0x98b]
Successors: [0x12d9, 0x12f8]
---
0x1283 JUMPDEST
0x1284 PUSH1 0x0
0x1286 DUP1
0x1287 SWAP1
0x1288 SLOAD
0x1289 SWAP1
0x128a PUSH2 0x100
0x128d EXP
0x128e SWAP1
0x128f DIV
0x1290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a5 AND
0x12a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12bb AND
0x12bc CALLER
0x12bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12d2 AND
0x12d3 EQ
0x12d4 ISZERO
0x12d5 PUSH2 0x12f8
0x12d8 JUMPI
---
0x1283: JUMPDEST 
0x1284: V1250 = 0x0
0x1288: V1251 = S[0x0]
0x128a: V1252 = 0x100
0x128d: V1253 = EXP 0x100 0x0
0x128f: V1254 = DIV V1251 0x1
0x1290: V1255 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a5: V1256 = AND 0xffffffffffffffffffffffffffffffffffffffff V1254
0x12a6: V1257 = 0xffffffffffffffffffffffffffffffffffffffff
0x12bb: V1258 = AND 0xffffffffffffffffffffffffffffffffffffffff V1256
0x12bc: V1259 = CALLER
0x12bd: V1260 = 0xffffffffffffffffffffffffffffffffffffffff
0x12d2: V1261 = AND 0xffffffffffffffffffffffffffffffffffffffff V1259
0x12d3: V1262 = EQ V1261 V1258
0x12d4: V1263 = ISZERO V1262
0x12d5: V1264 = 0x12f8
0x12d8: JUMPI 0x12f8 V1263
---
Entry stack: [V11, 0x994]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x994]

================================

Block 0x12d9
[0x12d9:0x12f7]
---
Predecessors: [0x1283]
Successors: [0x12fd]
---
0x12d9 PUSH1 0x0
0x12db PUSH1 0x5
0x12dd PUSH1 0x2
0x12df PUSH2 0x100
0x12e2 EXP
0x12e3 DUP2
0x12e4 SLOAD
0x12e5 DUP2
0x12e6 PUSH1 0xff
0x12e8 MUL
0x12e9 NOT
0x12ea AND
0x12eb SWAP1
0x12ec DUP4
0x12ed ISZERO
0x12ee ISZERO
0x12ef MUL
0x12f0 OR
0x12f1 SWAP1
0x12f2 SSTORE
0x12f3 POP
0x12f4 PUSH2 0x12fd
0x12f7 JUMP
---
0x12d9: V1265 = 0x0
0x12db: V1266 = 0x5
0x12dd: V1267 = 0x2
0x12df: V1268 = 0x100
0x12e2: V1269 = EXP 0x100 0x2
0x12e4: V1270 = S[0x5]
0x12e6: V1271 = 0xff
0x12e8: V1272 = MUL 0xff 0x10000
0x12e9: V1273 = NOT 0xff0000
0x12ea: V1274 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1270
0x12ed: V1275 = ISZERO 0x0
0x12ee: V1276 = ISZERO 0x1
0x12ef: V1277 = MUL 0x0 0x10000
0x12f0: V1278 = OR 0x0 V1274
0x12f2: S[0x5] = V1278
0x12f4: V1279 = 0x12fd
0x12f7: JUMP 0x12fd
---
Entry stack: [V11, 0x994]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x994]

================================

Block 0x12f8
[0x12f8:0x12fc]
---
Predecessors: [0x1283]
Successors: []
---
0x12f8 JUMPDEST
0x12f9 PUSH1 0x0
0x12fb DUP1
0x12fc REVERT
---
0x12f8: JUMPDEST 
0x12f9: V1280 = 0x0
0x12fc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x994]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x994]

================================

Block 0x12fd
[0x12fd:0x12fe]
---
Predecessors: [0x12d9]
Successors: [0x994]
---
0x12fd JUMPDEST
0x12fe JUMP
---
0x12fd: JUMPDEST 
0x12fe: JUMP 0x994
---
Entry stack: [V11, 0x994]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x12ff
[0x12ff:0x1347]
---
Predecessors: [0x9a2]
Successors: [0x9d7]
---
0x12ff JUMPDEST
0x1300 PUSH1 0x0
0x1302 PUSH1 0x6
0x1304 PUSH1 0x0
0x1306 DUP4
0x1307 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131c AND
0x131d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1332 AND
0x1333 DUP2
0x1334 MSTORE
0x1335 PUSH1 0x20
0x1337 ADD
0x1338 SWAP1
0x1339 DUP2
0x133a MSTORE
0x133b PUSH1 0x20
0x133d ADD
0x133e PUSH1 0x0
0x1340 SHA3
0x1341 SLOAD
0x1342 SWAP1
0x1343 POP
0x1344 SWAP2
0x1345 SWAP1
0x1346 POP
0x1347 JUMP
---
0x12ff: JUMPDEST 
0x1300: V1281 = 0x0
0x1302: V1282 = 0x6
0x1304: V1283 = 0x0
0x1307: V1284 = 0xffffffffffffffffffffffffffffffffffffffff
0x131c: V1285 = AND 0xffffffffffffffffffffffffffffffffffffffff V671
0x131d: V1286 = 0xffffffffffffffffffffffffffffffffffffffff
0x1332: V1287 = AND 0xffffffffffffffffffffffffffffffffffffffff V1285
0x1334: M[0x0] = V1287
0x1335: V1288 = 0x20
0x1337: V1289 = ADD 0x20 0x0
0x133a: M[0x20] = 0x6
0x133b: V1290 = 0x20
0x133d: V1291 = ADD 0x20 0x20
0x133e: V1292 = 0x0
0x1340: V1293 = SHA3 0x0 0x40
0x1341: V1294 = S[V1293]
0x1347: JUMP 0x9d7
---
Entry stack: [V11, 0x9d7, V671]
Stack pops: 2
Stack additions: [V1294]
Exit stack: [V11, V1294]

================================

Block 0x1348
[0x1348:0x1351]
---
Predecessors: [0x9f9]
Successors: [0xa02]
---
0x1348 JUMPDEST
0x1349 PUSH1 0x0
0x134b PUSH1 0x1
0x134d SLOAD
0x134e SWAP1
0x134f POP
0x1350 SWAP1
0x1351 JUMP
---
0x1348: JUMPDEST 
0x1349: V1295 = 0x0
0x134b: V1296 = 0x1
0x134d: V1297 = S[0x1]
0x1351: JUMP 0xa02
---
Entry stack: [V11, 0xa02]
Stack pops: 1
Stack additions: [V1297]
Exit stack: [V11, V1297]

================================

Block 0x1352
[0x1352:0x1364]
---
Predecessors: [0xa24]
Successors: [0xa2d]
---
0x1352 JUMPDEST
0x1353 PUSH1 0x5
0x1355 PUSH1 0x2
0x1357 SWAP1
0x1358 SLOAD
0x1359 SWAP1
0x135a PUSH2 0x100
0x135d EXP
0x135e SWAP1
0x135f DIV
0x1360 PUSH1 0xff
0x1362 AND
0x1363 DUP2
0x1364 JUMP
---
0x1352: JUMPDEST 
0x1353: V1298 = 0x5
0x1355: V1299 = 0x2
0x1358: V1300 = S[0x5]
0x135a: V1301 = 0x100
0x135d: V1302 = EXP 0x100 0x2
0x135f: V1303 = DIV V1300 0x10000
0x1360: V1304 = 0xff
0x1362: V1305 = AND 0xff V1303
0x1364: JUMP 0xa2d
---
Entry stack: [V11, 0xa2d]
Stack pops: 1
Stack additions: [S0, V1305]
Exit stack: [V11, 0xa2d, V1305]

================================

Block 0x1365
[0x1365:0x1377]
---
Predecessors: [0xa53]
Successors: [0xa5c]
---
0x1365 JUMPDEST
0x1366 PUSH1 0x5
0x1368 PUSH1 0x1
0x136a SWAP1
0x136b SLOAD
0x136c SWAP1
0x136d PUSH2 0x100
0x1370 EXP
0x1371 SWAP1
0x1372 DIV
0x1373 PUSH1 0xff
0x1375 AND
0x1376 DUP2
0x1377 JUMP
---
0x1365: JUMPDEST 
0x1366: V1306 = 0x5
0x1368: V1307 = 0x1
0x136b: V1308 = S[0x5]
0x136d: V1309 = 0x100
0x1370: V1310 = EXP 0x100 0x1
0x1372: V1311 = DIV V1308 0x100
0x1373: V1312 = 0xff
0x1375: V1313 = AND 0xff V1311
0x1377: JUMP 0xa5c
---
Entry stack: [V11, 0xa5c]
Stack pops: 1
Stack additions: [S0, V1313]
Exit stack: [V11, 0xa5c, V1313]

================================

Block 0x1378
[0x1378:0x13aa]
---
Predecessors: []
Successors: []
---
0x1378 STOP
0x1379 LOG1
0x137a PUSH6 0x627a7a723058
0x1381 SHA3
0x1382 DIV
0x1383 SSTORE
0x1384 SMOD
0x1385 ADDMOD
0x1386 MISSING 0xb0
0x1387 ADDRESS
0x1388 BALANCE
0x1389 SLT
0x138a MISSING 0x48
0x138b SWAP2
0x138c MISSING 0xe9
0x138d DUP5
0x138e MISSING 0xb4
0x138f MISSING 0x1f
0x1390 SIGNEXTEND
0x1391 MISSING 0xae
0x1392 DUP8
0x1393 MISSING 0x22
0x1394 PUSH22 0x955f503f46fb70bb27ad488d920029
---
0x1378: STOP 
0x1379: LOG S0 S1 S2
0x137a: V1314 = 0x627a7a723058
0x1381: V1315 = SHA3 0x627a7a723058 S3
0x1382: V1316 = DIV V1315 S4
0x1383: S[V1316] = S5
0x1384: V1317 = SMOD S6 S7
0x1385: V1318 = ADDMOD V1317 S8 S9
0x1386: MISSING 0xb0
0x1387: V1319 = ADDRESS
0x1388: V1320 = BALANCE V1319
0x1389: V1321 = SLT V1320 S0
0x138a: MISSING 0x48
0x138c: MISSING 0xe9
0x138e: MISSING 0xb4
0x138f: MISSING 0x1f
0x1390: V1322 = SIGNEXTEND S0 S1
0x1391: MISSING 0xae
0x1393: MISSING 0x22
0x1394: V1323 = 0x955f503f46fb70bb27ad488d920029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1318, V1321, S2, S1, S0, S4, S0, S1, S2, S3, S4, V1322, S7, S0, S1, S2, S3, S4, S5, S6, S7, 0x955f503f46fb70bb27ad488d920029]
Exit stack: []

================================

Function 0:
Public function signature: 0x7da68f5
Entry block: 0x781
Exit block: 0x796
Body: 0x781, 0x789, 0x78d, 0x796, 0xa76

Function 1:
Public function signature: 0xbafd2b7
Entry block: 0x7b0
Exit block: 0x7c5
Body: 0x7b0, 0x7b8, 0x7bc, 0x7c5, 0xa89

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x7db
Exit block: 0x7f0
Body: 0x7db, 0x7e3, 0x7e7, 0x7f0, 0xa93, 0xb17, 0xb1b, 0xb26, 0xb2f, 0xb41, 0xb45

Function 3:
Public function signature: 0x2024f83c
Entry block: 0x806
Exit block: 0xd91
Body: 0x806, 0x80e, 0x812, 0xb5b, 0xbb1, 0xc1e, 0xc1f, 0xca2, 0xca6, 0xcb1, 0xcba, 0xccc, 0xcd0, 0xd63, 0xd67, 0xd72, 0xd7b, 0xd8d, 0xd91, 0xdbc

Function 4:
Public function signature: 0x38af3eed
Entry block: 0x849
Exit block: 0x85e
Body: 0x849, 0x851, 0x855, 0x85e, 0xdc1

Function 5:
Public function signature: 0x5fc441ce
Entry block: 0x8a0
Exit block: 0x8b5
Body: 0x8a0, 0x8a8, 0x8ac, 0x8b5, 0xde6

Function 6:
Public function signature: 0x624f011d
Entry block: 0x8cb
Exit block: 0x8e0
Body: 0x8cb, 0x8d3, 0x8d7, 0x8e0, 0xdf0, 0xe46, 0xed4, 0xed5, 0xf58, 0xf5c, 0xf67, 0xf70, 0xf82, 0xf86, 0x1019, 0x101d, 0x1028, 0x1031, 0x1043, 0x1047, 0x10b9, 0x10c2, 0x10e3, 0x10e8

Function 7:
Public function signature: 0x62c2819d
Entry block: 0x8e2
Exit block: 0x8f7
Body: 0x8e2, 0x8ea, 0x8ee, 0x8f7, 0x10ea, 0x1140, 0x115f, 0x1164

Function 8:
Public function signature: 0x6e58231c
Entry block: 0x8f9
Exit block: 0x90e
Body: 0x8f9, 0x901, 0x905, 0x90e, 0x1166, 0x1174, 0x117d

Function 9:
Public function signature: 0x76b71205
Entry block: 0x928
Exit block: 0x969
Body: 0x928, 0x930, 0x934, 0x969, 0x1182, 0x123d, 0x1241, 0x124c, 0x1255, 0x1267, 0x126b

Function 10:
Public function signature: 0x79d303ae
Entry block: 0x97f
Exit block: 0x994
Body: 0x97f, 0x987, 0x98b, 0x994, 0x1283, 0x12d9, 0x12f8, 0x12fd

Function 11:
Public function signature: 0x9643d882
Entry block: 0x996
Exit block: 0x9d7
Body: 0x996, 0x99e, 0x9a2, 0x9d7, 0x12ff

Function 12:
Public function signature: 0xb67f8396
Entry block: 0x9ed
Exit block: 0xa02
Body: 0x9ed, 0x9f5, 0x9f9, 0xa02, 0x1348

Function 13:
Public function signature: 0xc5e48e53
Entry block: 0xa18
Exit block: 0xa2d
Body: 0xa18, 0xa20, 0xa24, 0xa2d, 0x1352

Function 14:
Public function signature: 0xf0ce4ac5
Entry block: 0xa47
Exit block: 0xa5c
Body: 0xa47, 0xa4f, 0xa53, 0xa5c, 0x1365

Function 15:
Public fallback function
Entry block: 0xdb
Exit block: 0x77e
Body: 0xdb, 0xf5, 0xf6, 0x10c, 0x110, 0x126, 0x137, 0x13d, 0x141, 0x159, 0x160, 0x166, 0x221, 0x222, 0x2a4, 0x2a8, 0x2b3, 0x2bc, 0x2ce, 0x2d2, 0x36d, 0x379, 0x382, 0x389, 0x39b, 0x3a1, 0x42f, 0x430, 0x4b3, 0x4b7, 0x4c2, 0x4cb, 0x4dd, 0x4e1, 0x574, 0x578, 0x583, 0x58c, 0x59e, 0x5a2, 0x614, 0x61d, 0x77e

