Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe0
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe0
0xa: JUMPI 0xe0 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x110]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1d545d09
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x110
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1d545d09
0x20: V14 = EQ V12 0x1d545d09
0x21: V15 = 0x110
0x24: JUMPI 0x110 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x135]
---
0x25 DUP1
0x26 PUSH4 0x1f130761
0x2b EQ
0x2c PUSH2 0x135
0x2f JUMPI
---
0x26: V16 = 0x1f130761
0x2b: V17 = EQ 0x1f130761 V12
0x2c: V18 = 0x135
0x2f: JUMPI 0x135 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x15a]
---
0x30 DUP1
0x31 PUSH4 0x1f6d4942
0x36 EQ
0x37 PUSH2 0x15a
0x3a JUMPI
---
0x31: V19 = 0x1f6d4942
0x36: V20 = EQ 0x1f6d4942 V12
0x37: V21 = 0x15a
0x3a: JUMPI 0x15a V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x191]
---
0x3b DUP1
0x3c PUSH4 0x30adce0e
0x41 EQ
0x42 PUSH2 0x191
0x45 JUMPI
---
0x3c: V22 = 0x30adce0e
0x41: V23 = EQ 0x30adce0e V12
0x42: V24 = 0x191
0x45: JUMPI 0x191 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1b6]
---
0x46 DUP1
0x47 PUSH4 0x4bb278f3
0x4c EQ
0x4d PUSH2 0x1b6
0x50 JUMPI
---
0x47: V25 = 0x4bb278f3
0x4c: V26 = EQ 0x4bb278f3 V12
0x4d: V27 = 0x1b6
0x50: JUMPI 0x1b6 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1cb]
---
0x51 DUP1
0x52 PUSH4 0x6b4a6ded
0x57 EQ
0x58 PUSH2 0x1cb
0x5b JUMPI
---
0x52: V28 = 0x6b4a6ded
0x57: V29 = EQ 0x6b4a6ded V12
0x58: V30 = 0x1cb
0x5b: JUMPI 0x1cb V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1f0]
---
0x5c DUP1
0x5d PUSH4 0x6ffea7bd
0x62 EQ
0x63 PUSH2 0x1f0
0x66 JUMPI
---
0x5d: V31 = 0x6ffea7bd
0x62: V32 = EQ 0x6ffea7bd V12
0x63: V33 = 0x1f0
0x66: JUMPI 0x1f0 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x21f]
---
0x67 DUP1
0x68 PUSH4 0x85565585
0x6d EQ
0x6e PUSH2 0x21f
0x71 JUMPI
---
0x68: V34 = 0x85565585
0x6d: V35 = EQ 0x85565585 V12
0x6e: V36 = 0x21f
0x71: JUMPI 0x21f V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x24e]
---
0x72 DUP1
0x73 PUSH4 0x8d0bba03
0x78 EQ
0x79 PUSH2 0x24e
0x7c JUMPI
---
0x73: V37 = 0x8d0bba03
0x78: V38 = EQ 0x8d0bba03 V12
0x79: V39 = 0x24e
0x7c: JUMPI 0x24e V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x273]
---
0x7d DUP1
0x7e PUSH4 0x8da5cb5b
0x83 EQ
0x84 PUSH2 0x273
0x87 JUMPI
---
0x7e: V40 = 0x8da5cb5b
0x83: V41 = EQ 0x8da5cb5b V12
0x84: V42 = 0x273
0x87: JUMPI 0x273 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2a2]
---
0x88 DUP1
0x89 PUSH4 0x8fd3ab80
0x8e EQ
0x8f PUSH2 0x2a2
0x92 JUMPI
---
0x89: V43 = 0x8fd3ab80
0x8e: V44 = EQ 0x8fd3ab80 V12
0x8f: V45 = 0x2a2
0x92: JUMPI 0x2a2 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2b7]
---
0x93 DUP1
0x94 PUSH4 0x9890220b
0x99 EQ
0x9a PUSH2 0x2b7
0x9d JUMPI
---
0x94: V46 = 0x9890220b
0x99: V47 = EQ 0x9890220b V12
0x9a: V48 = 0x2b7
0x9d: JUMPI 0x2b7 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2cc]
---
0x9e DUP1
0x9f PUSH4 0x9a6524f1
0xa4 EQ
0xa5 PUSH2 0x2cc
0xa8 JUMPI
---
0x9f: V49 = 0x9a6524f1
0xa4: V50 = EQ 0x9a6524f1 V12
0xa5: V51 = 0x2cc
0xa8: JUMPI 0x2cc V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2f1]
---
0xa9 DUP1
0xaa PUSH4 0xad3c0b9d
0xaf EQ
0xb0 PUSH2 0x2f1
0xb3 JUMPI
---
0xaa: V52 = 0xad3c0b9d
0xaf: V53 = EQ 0xad3c0b9d V12
0xb0: V54 = 0x2f1
0xb3: JUMPI 0x2f1 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x316]
---
0xb4 DUP1
0xb5 PUSH4 0xbe9a6555
0xba EQ
0xbb PUSH2 0x316
0xbe JUMPI
---
0xb5: V55 = 0xbe9a6555
0xba: V56 = EQ 0xbe9a6555 V12
0xbb: V57 = 0x316
0xbe: JUMPI 0x316 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x32b]
---
0xbf DUP1
0xc0 PUSH4 0xe2fc421d
0xc5 EQ
0xc6 PUSH2 0x32b
0xc9 JUMPI
---
0xc0: V58 = 0xe2fc421d
0xc5: V59 = EQ 0xe2fc421d V12
0xc6: V60 = 0x32b
0xc9: JUMPI 0x32b V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x350]
---
0xca DUP1
0xcb PUSH4 0xf2fde38b
0xd0 EQ
0xd1 PUSH2 0x350
0xd4 JUMPI
---
0xcb: V61 = 0xf2fde38b
0xd0: V62 = EQ 0xf2fde38b V12
0xd1: V63 = 0x350
0xd4: JUMPI 0x350 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x371]
---
0xd5 DUP1
0xd6 PUSH4 0xfc0c546a
0xdb EQ
0xdc PUSH2 0x371
0xdf JUMPI
---
0xd6: V64 = 0xfc0c546a
0xdb: V65 = EQ 0xfc0c546a V12
0xdc: V66 = 0x371
0xdf: JUMPI 0x371 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0x0, 0xd5]
Successors: [0xe4]
---
0xe0 JUMPDEST
0xe1 PUSH2 0x10e
---
0xe0: JUMPDEST 
0xe1: V67 = 0x10e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V12, 0x10e]

================================

Block 0xe4
[0xe4:0xef]
---
Predecessors: [0xe0]
Successors: [0xf0, 0xf6]
---
0xe4 JUMPDEST
0xe5 PUSH1 0x8
0xe7 SLOAD
0xe8 TIMESTAMP
0xe9 LT
0xea DUP1
0xeb ISZERO
0xec PUSH2 0xf6
0xef JUMPI
---
0xe4: JUMPDEST 
0xe5: V68 = 0x8
0xe7: V69 = S[0x8]
0xe8: V70 = TIMESTAMP
0xe9: V71 = LT V70 V69
0xeb: V72 = ISZERO V71
0xec: V73 = 0xf6
0xef: JUMPI 0xf6 V72
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V12, 0x10e, V71]

================================

Block 0xf0
[0xf0:0xf5]
---
Predecessors: [0xe4]
Successors: [0xf6]
---
0xf0 POP
0xf1 PUSH1 0x7
0xf3 SLOAD
0xf4 ISZERO
0xf5 ISZERO
---
0xf1: V74 = 0x7
0xf3: V75 = S[0x7]
0xf4: V76 = ISZERO V75
0xf5: V77 = ISZERO V76
---
Entry stack: [V12, 0x10e, V71]
Stack pops: 1
Stack additions: [V77]
Exit stack: [V12, 0x10e, V77]

================================

Block 0xf6
[0xf6:0xfc]
---
Predecessors: [0xe4, 0xf0]
Successors: [0xfd, 0x101]
---
0xf6 JUMPDEST
0xf7 ISZERO
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf6: JUMPDEST 
0xf7: V78 = ISZERO S0
0xf8: V79 = ISZERO V78
0xf9: V80 = 0x101
0xfc: JUMPI 0x101 V79
---
Entry stack: [V12, 0x10e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf6]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V81 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x101
[0x101:0x109]
---
Predecessors: [0xf6]
Successors: [0x3a0]
---
0x101 JUMPDEST
0x102 PUSH2 0x10a
0x105 CALLER
0x106 PUSH2 0x3a0
0x109 JUMP
---
0x101: JUMPDEST 
0x102: V82 = 0x10a
0x105: V83 = CALLER
0x106: V84 = 0x3a0
0x109: JUMP 0x3a0
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: [0x10a, V83]
Exit stack: [V12, 0x10e, 0x10a, V83]

================================

Block 0x10a
[0x10a:0x10a]
---
Predecessors: [0x10c, 0x573, 0x949]
Successors: [0x10b]
---
0x10a JUMPDEST
---
0x10a: JUMPDEST 
---
Entry stack: [V12, 0x10e, S2, S1, {0x0, 0x10a, 0x10e}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, S2, S1, {0x0, 0x10a, 0x10e}]

================================

Block 0x10b
[0x10b:0x10b]
---
Predecessors: [0x10a]
Successors: [0x10c]
---
0x10b JUMPDEST
---
0x10b: JUMPDEST 
---
Entry stack: [V12, 0x10e, S2, S1, {0x0, 0x10a, 0x10e}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, S2, S1, {0x0, 0x10a, 0x10e}]

================================

Block 0x10c
[0x10c:0x10d]
---
Predecessors: [0x10b]
Successors: [0x10a, 0x10e]
---
0x10c JUMPDEST
0x10d JUMP
---
0x10c: JUMPDEST 
0x10d: JUMP {0x0, 0x10a, 0x10e}
---
Entry stack: [V12, 0x10e, S2, S1, {0x0, 0x10a, 0x10e}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10e, S2, S1]

================================

Block 0x10e
[0x10e:0x10f]
---
Predecessors: [0x10c, 0x716, 0x92a, 0x9d1, 0xa2e]
Successors: []
---
0x10e JUMPDEST
0x10f STOP
---
0x10e: JUMPDEST 
0x10f: STOP 
---
Entry stack: [V12, 0x10e, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, S1, S0]

================================

Block 0x110
[0x110:0x116]
---
Predecessors: [0xb]
Successors: [0x117, 0x11b]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x110: JUMPDEST 
0x111: V85 = CALLVALUE
0x112: V86 = ISZERO V85
0x113: V87 = 0x11b
0x116: JUMPI 0x11b V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x110]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V88 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x110]
Successors: [0x578]
---
0x11b JUMPDEST
0x11c PUSH2 0x123
0x11f PUSH2 0x578
0x122 JUMP
---
0x11b: JUMPDEST 
0x11c: V89 = 0x123
0x11f: V90 = 0x578
0x122: JUMP 0x578
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x123
[0x123:0x134]
---
Predecessors: [0x578, 0x57e, 0x59d, 0x719, 0x745, 0x983, 0x992, 0x9d3]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 MLOAD
0x127 SWAP1
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x20
0x12c ADD
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 SWAP2
0x132 SUB
0x133 SWAP1
0x134 RETURN
---
0x123: JUMPDEST 
0x124: V91 = 0x40
0x126: V92 = M[0x40]
0x129: M[V92] = S0
0x12a: V93 = 0x20
0x12c: V94 = ADD 0x20 V92
0x12d: V95 = 0x40
0x12f: V96 = M[0x40]
0x132: V97 = SUB V94 V96
0x134: RETURN V96 V97
---
Entry stack: [V12, 0x123, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x123]

================================

Block 0x135
[0x135:0x13b]
---
Predecessors: [0x25]
Successors: [0x13c, 0x140]
---
0x135 JUMPDEST
0x136 CALLVALUE
0x137 ISZERO
0x138 PUSH2 0x140
0x13b JUMPI
---
0x135: JUMPDEST 
0x136: V98 = CALLVALUE
0x137: V99 = ISZERO V98
0x138: V100 = 0x140
0x13b: JUMPI 0x140 V99
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x135]
Successors: []
---
0x13c PUSH1 0x0
0x13e DUP1
0x13f REVERT
---
0x13c: V101 = 0x0
0x13f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x140
[0x140:0x147]
---
Predecessors: [0x135]
Successors: [0x57e]
---
0x140 JUMPDEST
0x141 PUSH2 0x123
0x144 PUSH2 0x57e
0x147 JUMP
---
0x140: JUMPDEST 
0x141: V102 = 0x123
0x144: V103 = 0x57e
0x147: JUMP 0x57e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x148
[0x148:0x159]
---
Predecessors: []
Successors: []
---
0x148 JUMPDEST
0x149 PUSH1 0x40
0x14b MLOAD
0x14c SWAP1
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x20
0x151 ADD
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 SWAP2
0x157 SUB
0x158 SWAP1
0x159 RETURN
---
0x148: JUMPDEST 
0x149: V104 = 0x40
0x14b: V105 = M[0x40]
0x14e: M[V105] = S0
0x14f: V106 = 0x20
0x151: V107 = ADD 0x20 V105
0x152: V108 = 0x40
0x154: V109 = M[0x40]
0x157: V110 = SUB V107 V109
0x159: RETURN V109 V110
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x15a
[0x15a:0x160]
---
Predecessors: [0x30]
Successors: [0x161, 0x165]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x15a: JUMPDEST 
0x15b: V111 = CALLVALUE
0x15c: V112 = ISZERO V111
0x15d: V113 = 0x165
0x160: JUMPI 0x165 V112
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x15a]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V114 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0x15a]
Successors: [0x584]
---
0x165 JUMPDEST
0x166 PUSH2 0x179
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 PUSH1 0x4
0x173 CALLDATALOAD
0x174 AND
0x175 PUSH2 0x584
0x178 JUMP
---
0x165: JUMPDEST 
0x166: V115 = 0x179
0x169: V116 = 0x1
0x16b: V117 = 0xa0
0x16d: V118 = 0x2
0x16f: V119 = EXP 0x2 0xa0
0x170: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V121 = 0x4
0x173: V122 = CALLDATALOAD 0x4
0x174: V123 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x175: V124 = 0x584
0x178: JUMP 0x584
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179, V123]
Exit stack: [V12, 0x179, V123]

================================

Block 0x179
[0x179:0x190]
---
Predecessors: [0x584]
Successors: []
---
0x179 JUMPDEST
0x17a PUSH1 0x40
0x17c MLOAD
0x17d SWAP2
0x17e DUP3
0x17f MSTORE
0x180 PUSH1 0x20
0x182 DUP3
0x183 ADD
0x184 MSTORE
0x185 PUSH1 0x40
0x187 SWAP1
0x188 DUP2
0x189 ADD
0x18a SWAP1
0x18b MLOAD
0x18c DUP1
0x18d SWAP2
0x18e SUB
0x18f SWAP1
0x190 RETURN
---
0x179: JUMPDEST 
0x17a: V125 = 0x40
0x17c: V126 = M[0x40]
0x17f: M[V126] = V479
0x180: V127 = 0x20
0x183: V128 = ADD V126 0x20
0x184: M[V128] = V481
0x185: V129 = 0x40
0x189: V130 = ADD 0x40 V126
0x18b: V131 = M[0x40]
0x18e: V132 = SUB V130 V131
0x190: RETURN V131 V132
---
Entry stack: [V12, 0x179, V479, V481]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x179]

================================

Block 0x191
[0x191:0x197]
---
Predecessors: [0x3b]
Successors: [0x198, 0x19c]
---
0x191 JUMPDEST
0x192 CALLVALUE
0x193 ISZERO
0x194 PUSH2 0x19c
0x197 JUMPI
---
0x191: JUMPDEST 
0x192: V133 = CALLVALUE
0x193: V134 = ISZERO V133
0x194: V135 = 0x19c
0x197: JUMPI 0x19c V134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x198
[0x198:0x19b]
---
Predecessors: [0x191]
Successors: []
---
0x198 PUSH1 0x0
0x19a DUP1
0x19b REVERT
---
0x198: V136 = 0x0
0x19b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19c
[0x19c:0x1a3]
---
Predecessors: [0x191]
Successors: [0x59d]
---
0x19c JUMPDEST
0x19d PUSH2 0x123
0x1a0 PUSH2 0x59d
0x1a3 JUMP
---
0x19c: JUMPDEST 
0x19d: V137 = 0x123
0x1a0: V138 = 0x59d
0x1a3: JUMP 0x59d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x1a4
[0x1a4:0x1b5]
---
Predecessors: []
Successors: []
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 SWAP1
0x1a9 DUP2
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 SWAP2
0x1b3 SUB
0x1b4 SWAP1
0x1b5 RETURN
---
0x1a4: JUMPDEST 
0x1a5: V139 = 0x40
0x1a7: V140 = M[0x40]
0x1aa: M[V140] = S0
0x1ab: V141 = 0x20
0x1ad: V142 = ADD 0x20 V140
0x1ae: V143 = 0x40
0x1b0: V144 = M[0x40]
0x1b3: V145 = SUB V142 V144
0x1b5: RETURN V144 V145
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b6
[0x1b6:0x1bc]
---
Predecessors: [0x46]
Successors: [0x1bd, 0x1c1]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 ISZERO
0x1b9 PUSH2 0x1c1
0x1bc JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V146 = CALLVALUE
0x1b8: V147 = ISZERO V146
0x1b9: V148 = 0x1c1
0x1bc: JUMPI 0x1c1 V147
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bd
[0x1bd:0x1c0]
---
Predecessors: [0x1b6]
Successors: []
---
0x1bd PUSH1 0x0
0x1bf DUP1
0x1c0 REVERT
---
0x1bd: V149 = 0x0
0x1c0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c1
[0x1c1:0x1c8]
---
Predecessors: [0x1b6]
Successors: [0x5a3]
---
0x1c1 JUMPDEST
0x1c2 PUSH2 0x10e
0x1c5 PUSH2 0x5a3
0x1c8 JUMP
---
0x1c1: JUMPDEST 
0x1c2: V150 = 0x10e
0x1c5: V151 = 0x5a3
0x1c8: JUMP 0x5a3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V12, 0x10e]

================================

Block 0x1c9
[0x1c9:0x1ca]
---
Predecessors: []
Successors: []
---
0x1c9 JUMPDEST
0x1ca STOP
---
0x1c9: JUMPDEST 
0x1ca: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x51]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V152 = CALLVALUE
0x1cd: V153 = ISZERO V152
0x1ce: V154 = 0x1d6
0x1d1: JUMPI 0x1d6 V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V155 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x1cb]
Successors: [0x719]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x123
0x1da PUSH2 0x719
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V156 = 0x123
0x1da: V157 = 0x719
0x1dd: JUMP 0x719
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x1de
[0x1de:0x1ef]
---
Predecessors: []
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH1 0x20
0x1e7 ADD
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec SWAP2
0x1ed SUB
0x1ee SWAP1
0x1ef RETURN
---
0x1de: JUMPDEST 
0x1df: V158 = 0x40
0x1e1: V159 = M[0x40]
0x1e4: M[V159] = S0
0x1e5: V160 = 0x20
0x1e7: V161 = ADD 0x20 V159
0x1e8: V162 = 0x40
0x1ea: V163 = M[0x40]
0x1ed: V164 = SUB V161 V163
0x1ef: RETURN V163 V164
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f0
[0x1f0:0x1f6]
---
Predecessors: [0x5c]
Successors: [0x1f7, 0x1fb]
---
0x1f0 JUMPDEST
0x1f1 CALLVALUE
0x1f2 ISZERO
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V165 = CALLVALUE
0x1f2: V166 = ISZERO V165
0x1f3: V167 = 0x1fb
0x1f6: JUMPI 0x1fb V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1f0]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa REVERT
---
0x1f7: V168 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fb
[0x1fb:0x202]
---
Predecessors: [0x1f0]
Successors: [0x727]
---
0x1fb JUMPDEST
0x1fc PUSH2 0x203
0x1ff PUSH2 0x727
0x202 JUMP
---
0x1fb: JUMPDEST 
0x1fc: V169 = 0x203
0x1ff: V170 = 0x727
0x202: JUMP 0x727
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x203]
Exit stack: [V12, 0x203]

================================

Block 0x203
[0x203:0x21e]
---
Predecessors: [0x727, 0x736, 0x750, 0xa31]
Successors: []
---
0x203 JUMPDEST
0x204 PUSH1 0x40
0x206 MLOAD
0x207 PUSH1 0x1
0x209 PUSH1 0xa0
0x20b PUSH1 0x2
0x20d EXP
0x20e SUB
0x20f SWAP1
0x210 SWAP2
0x211 AND
0x212 DUP2
0x213 MSTORE
0x214 PUSH1 0x20
0x216 ADD
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP1
0x21b SWAP2
0x21c SUB
0x21d SWAP1
0x21e RETURN
---
0x203: JUMPDEST 
0x204: V171 = 0x40
0x206: V172 = M[0x40]
0x207: V173 = 0x1
0x209: V174 = 0xa0
0x20b: V175 = 0x2
0x20d: V176 = EXP 0x2 0xa0
0x20e: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x211: V178 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x213: M[V172] = V178
0x214: V179 = 0x20
0x216: V180 = ADD 0x20 V172
0x217: V181 = 0x40
0x219: V182 = M[0x40]
0x21c: V183 = SUB V180 V182
0x21e: RETURN V182 V183
---
Entry stack: [V12, 0x203, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x203]

================================

Block 0x21f
[0x21f:0x225]
---
Predecessors: [0x67]
Successors: [0x226, 0x22a]
---
0x21f JUMPDEST
0x220 CALLVALUE
0x221 ISZERO
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x21f: JUMPDEST 
0x220: V184 = CALLVALUE
0x221: V185 = ISZERO V184
0x222: V186 = 0x22a
0x225: JUMPI 0x22a V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x21f]
Successors: []
---
0x226 PUSH1 0x0
0x228 DUP1
0x229 REVERT
---
0x226: V187 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22a
[0x22a:0x231]
---
Predecessors: [0x21f]
Successors: [0x736]
---
0x22a JUMPDEST
0x22b PUSH2 0x203
0x22e PUSH2 0x736
0x231 JUMP
---
0x22a: JUMPDEST 
0x22b: V188 = 0x203
0x22e: V189 = 0x736
0x231: JUMP 0x736
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x203]
Exit stack: [V12, 0x203]

================================

Block 0x232
[0x232:0x24d]
---
Predecessors: []
Successors: []
---
0x232 JUMPDEST
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0x1
0x238 PUSH1 0xa0
0x23a PUSH1 0x2
0x23c EXP
0x23d SUB
0x23e SWAP1
0x23f SWAP2
0x240 AND
0x241 DUP2
0x242 MSTORE
0x243 PUSH1 0x20
0x245 ADD
0x246 PUSH1 0x40
0x248 MLOAD
0x249 DUP1
0x24a SWAP2
0x24b SUB
0x24c SWAP1
0x24d RETURN
---
0x232: JUMPDEST 
0x233: V190 = 0x40
0x235: V191 = M[0x40]
0x236: V192 = 0x1
0x238: V193 = 0xa0
0x23a: V194 = 0x2
0x23c: V195 = EXP 0x2 0xa0
0x23d: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x240: V197 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x242: M[V191] = V197
0x243: V198 = 0x20
0x245: V199 = ADD 0x20 V191
0x246: V200 = 0x40
0x248: V201 = M[0x40]
0x24b: V202 = SUB V199 V201
0x24d: RETURN V201 V202
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x24e
[0x24e:0x254]
---
Predecessors: [0x72]
Successors: [0x255, 0x259]
---
0x24e JUMPDEST
0x24f CALLVALUE
0x250 ISZERO
0x251 PUSH2 0x259
0x254 JUMPI
---
0x24e: JUMPDEST 
0x24f: V203 = CALLVALUE
0x250: V204 = ISZERO V203
0x251: V205 = 0x259
0x254: JUMPI 0x259 V204
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x255
[0x255:0x258]
---
Predecessors: [0x24e]
Successors: []
---
0x255 PUSH1 0x0
0x257 DUP1
0x258 REVERT
---
0x255: V206 = 0x0
0x258: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x259
[0x259:0x260]
---
Predecessors: [0x24e]
Successors: [0x745]
---
0x259 JUMPDEST
0x25a PUSH2 0x123
0x25d PUSH2 0x745
0x260 JUMP
---
0x259: JUMPDEST 
0x25a: V207 = 0x123
0x25d: V208 = 0x745
0x260: JUMP 0x745
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x261
[0x261:0x272]
---
Predecessors: []
Successors: []
---
0x261 JUMPDEST
0x262 PUSH1 0x40
0x264 MLOAD
0x265 SWAP1
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0x20
0x26a ADD
0x26b PUSH1 0x40
0x26d MLOAD
0x26e DUP1
0x26f SWAP2
0x270 SUB
0x271 SWAP1
0x272 RETURN
---
0x261: JUMPDEST 
0x262: V209 = 0x40
0x264: V210 = M[0x40]
0x267: M[V210] = S0
0x268: V211 = 0x20
0x26a: V212 = ADD 0x20 V210
0x26b: V213 = 0x40
0x26d: V214 = M[0x40]
0x270: V215 = SUB V212 V214
0x272: RETURN V214 V215
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x273
[0x273:0x279]
---
Predecessors: [0x7d]
Successors: [0x27a, 0x27e]
---
0x273 JUMPDEST
0x274 CALLVALUE
0x275 ISZERO
0x276 PUSH2 0x27e
0x279 JUMPI
---
0x273: JUMPDEST 
0x274: V216 = CALLVALUE
0x275: V217 = ISZERO V216
0x276: V218 = 0x27e
0x279: JUMPI 0x27e V217
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27a
[0x27a:0x27d]
---
Predecessors: [0x273]
Successors: []
---
0x27a PUSH1 0x0
0x27c DUP1
0x27d REVERT
---
0x27a: V219 = 0x0
0x27d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27e
[0x27e:0x285]
---
Predecessors: [0x273]
Successors: [0x750]
---
0x27e JUMPDEST
0x27f PUSH2 0x203
0x282 PUSH2 0x750
0x285 JUMP
---
0x27e: JUMPDEST 
0x27f: V220 = 0x203
0x282: V221 = 0x750
0x285: JUMP 0x750
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x203]
Exit stack: [V12, 0x203]

================================

Block 0x286
[0x286:0x2a1]
---
Predecessors: []
Successors: []
---
0x286 JUMPDEST
0x287 PUSH1 0x40
0x289 MLOAD
0x28a PUSH1 0x1
0x28c PUSH1 0xa0
0x28e PUSH1 0x2
0x290 EXP
0x291 SUB
0x292 SWAP1
0x293 SWAP2
0x294 AND
0x295 DUP2
0x296 MSTORE
0x297 PUSH1 0x20
0x299 ADD
0x29a PUSH1 0x40
0x29c MLOAD
0x29d DUP1
0x29e SWAP2
0x29f SUB
0x2a0 SWAP1
0x2a1 RETURN
---
0x286: JUMPDEST 
0x287: V222 = 0x40
0x289: V223 = M[0x40]
0x28a: V224 = 0x1
0x28c: V225 = 0xa0
0x28e: V226 = 0x2
0x290: V227 = EXP 0x2 0xa0
0x291: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V229 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x296: M[V223] = V229
0x297: V230 = 0x20
0x299: V231 = ADD 0x20 V223
0x29a: V232 = 0x40
0x29c: V233 = M[0x40]
0x29f: V234 = SUB V231 V233
0x2a1: RETURN V233 V234
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a2
[0x2a2:0x2a8]
---
Predecessors: [0x88]
Successors: [0x2a9, 0x2ad]
---
0x2a2 JUMPDEST
0x2a3 CALLVALUE
0x2a4 ISZERO
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V235 = CALLVALUE
0x2a4: V236 = ISZERO V235
0x2a5: V237 = 0x2ad
0x2a8: JUMPI 0x2ad V236
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x2a2]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V238 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ad
[0x2ad:0x2b4]
---
Predecessors: [0x2a2]
Successors: [0x75f]
---
0x2ad JUMPDEST
0x2ae PUSH2 0x10e
0x2b1 PUSH2 0x75f
0x2b4 JUMP
---
0x2ad: JUMPDEST 
0x2ae: V239 = 0x10e
0x2b1: V240 = 0x75f
0x2b4: JUMP 0x75f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V12, 0x10e]

================================

Block 0x2b5
[0x2b5:0x2b6]
---
Predecessors: []
Successors: []
---
0x2b5 JUMPDEST
0x2b6 STOP
---
0x2b5: JUMPDEST 
0x2b6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b7
[0x2b7:0x2bd]
---
Predecessors: [0x93]
Successors: [0x2be, 0x2c2]
---
0x2b7 JUMPDEST
0x2b8 CALLVALUE
0x2b9 ISZERO
0x2ba PUSH2 0x2c2
0x2bd JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V241 = CALLVALUE
0x2b9: V242 = ISZERO V241
0x2ba: V243 = 0x2c2
0x2bd: JUMPI 0x2c2 V242
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2be
[0x2be:0x2c1]
---
Predecessors: [0x2b7]
Successors: []
---
0x2be PUSH1 0x0
0x2c0 DUP1
0x2c1 REVERT
---
0x2be: V244 = 0x0
0x2c1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c2
[0x2c2:0x2c9]
---
Predecessors: [0x2b7]
Successors: [0x92e]
---
0x2c2 JUMPDEST
0x2c3 PUSH2 0x10e
0x2c6 PUSH2 0x92e
0x2c9 JUMP
---
0x2c2: JUMPDEST 
0x2c3: V245 = 0x10e
0x2c6: V246 = 0x92e
0x2c9: JUMP 0x92e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V12, 0x10e]

================================

Block 0x2ca
[0x2ca:0x2cb]
---
Predecessors: []
Successors: []
---
0x2ca JUMPDEST
0x2cb STOP
---
0x2ca: JUMPDEST 
0x2cb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2cc
[0x2cc:0x2d2]
---
Predecessors: [0x9e]
Successors: [0x2d3, 0x2d7]
---
0x2cc JUMPDEST
0x2cd CALLVALUE
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V247 = CALLVALUE
0x2ce: V248 = ISZERO V247
0x2cf: V249 = 0x2d7
0x2d2: JUMPI 0x2d7 V248
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2cc]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V250 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d7
[0x2d7:0x2de]
---
Predecessors: [0x2cc]
Successors: [0x983]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x123
0x2db PUSH2 0x983
0x2de JUMP
---
0x2d7: JUMPDEST 
0x2d8: V251 = 0x123
0x2db: V252 = 0x983
0x2de: JUMP 0x983
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x2df
[0x2df:0x2f0]
---
Predecessors: []
Successors: []
---
0x2df JUMPDEST
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 SWAP1
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 PUSH1 0x40
0x2eb MLOAD
0x2ec DUP1
0x2ed SWAP2
0x2ee SUB
0x2ef SWAP1
0x2f0 RETURN
---
0x2df: JUMPDEST 
0x2e0: V253 = 0x40
0x2e2: V254 = M[0x40]
0x2e5: M[V254] = S0
0x2e6: V255 = 0x20
0x2e8: V256 = ADD 0x20 V254
0x2e9: V257 = 0x40
0x2eb: V258 = M[0x40]
0x2ee: V259 = SUB V256 V258
0x2f0: RETURN V258 V259
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f1
[0x2f1:0x2f7]
---
Predecessors: [0xa9]
Successors: [0x2f8, 0x2fc]
---
0x2f1 JUMPDEST
0x2f2 CALLVALUE
0x2f3 ISZERO
0x2f4 PUSH2 0x2fc
0x2f7 JUMPI
---
0x2f1: JUMPDEST 
0x2f2: V260 = CALLVALUE
0x2f3: V261 = ISZERO V260
0x2f4: V262 = 0x2fc
0x2f7: JUMPI 0x2fc V261
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f8
[0x2f8:0x2fb]
---
Predecessors: [0x2f1]
Successors: []
---
0x2f8 PUSH1 0x0
0x2fa DUP1
0x2fb REVERT
---
0x2f8: V263 = 0x0
0x2fb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fc
[0x2fc:0x303]
---
Predecessors: [0x2f1]
Successors: [0x992]
---
0x2fc JUMPDEST
0x2fd PUSH2 0x123
0x300 PUSH2 0x992
0x303 JUMP
---
0x2fc: JUMPDEST 
0x2fd: V264 = 0x123
0x300: V265 = 0x992
0x303: JUMP 0x992
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x304
[0x304:0x315]
---
Predecessors: []
Successors: []
---
0x304 JUMPDEST
0x305 PUSH1 0x40
0x307 MLOAD
0x308 SWAP1
0x309 DUP2
0x30a MSTORE
0x30b PUSH1 0x20
0x30d ADD
0x30e PUSH1 0x40
0x310 MLOAD
0x311 DUP1
0x312 SWAP2
0x313 SUB
0x314 SWAP1
0x315 RETURN
---
0x304: JUMPDEST 
0x305: V266 = 0x40
0x307: V267 = M[0x40]
0x30a: M[V267] = S0
0x30b: V268 = 0x20
0x30d: V269 = ADD 0x20 V267
0x30e: V270 = 0x40
0x310: V271 = M[0x40]
0x313: V272 = SUB V269 V271
0x315: RETURN V271 V272
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x316
[0x316:0x31c]
---
Predecessors: [0xb4]
Successors: [0x31d, 0x321]
---
0x316 JUMPDEST
0x317 CALLVALUE
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x316: JUMPDEST 
0x317: V273 = CALLVALUE
0x318: V274 = ISZERO V273
0x319: V275 = 0x321
0x31c: JUMPI 0x321 V274
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x316]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V276 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x321
[0x321:0x328]
---
Predecessors: [0x316]
Successors: [0x999]
---
0x321 JUMPDEST
0x322 PUSH2 0x10e
0x325 PUSH2 0x999
0x328 JUMP
---
0x321: JUMPDEST 
0x322: V277 = 0x10e
0x325: V278 = 0x999
0x328: JUMP 0x999
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V12, 0x10e]

================================

Block 0x329
[0x329:0x32a]
---
Predecessors: []
Successors: []
---
0x329 JUMPDEST
0x32a STOP
---
0x329: JUMPDEST 
0x32a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x32b
[0x32b:0x331]
---
Predecessors: [0xbf]
Successors: [0x332, 0x336]
---
0x32b JUMPDEST
0x32c CALLVALUE
0x32d ISZERO
0x32e PUSH2 0x336
0x331 JUMPI
---
0x32b: JUMPDEST 
0x32c: V279 = CALLVALUE
0x32d: V280 = ISZERO V279
0x32e: V281 = 0x336
0x331: JUMPI 0x336 V280
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x332
[0x332:0x335]
---
Predecessors: [0x32b]
Successors: []
---
0x332 PUSH1 0x0
0x334 DUP1
0x335 REVERT
---
0x332: V282 = 0x0
0x335: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x336
[0x336:0x33d]
---
Predecessors: [0x32b]
Successors: [0x9d3]
---
0x336 JUMPDEST
0x337 PUSH2 0x123
0x33a PUSH2 0x9d3
0x33d JUMP
---
0x336: JUMPDEST 
0x337: V283 = 0x123
0x33a: V284 = 0x9d3
0x33d: JUMP 0x9d3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x33e
[0x33e:0x34f]
---
Predecessors: []
Successors: []
---
0x33e JUMPDEST
0x33f PUSH1 0x40
0x341 MLOAD
0x342 SWAP1
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x20
0x347 ADD
0x348 PUSH1 0x40
0x34a MLOAD
0x34b DUP1
0x34c SWAP2
0x34d SUB
0x34e SWAP1
0x34f RETURN
---
0x33e: JUMPDEST 
0x33f: V285 = 0x40
0x341: V286 = M[0x40]
0x344: M[V286] = S0
0x345: V287 = 0x20
0x347: V288 = ADD 0x20 V286
0x348: V289 = 0x40
0x34a: V290 = M[0x40]
0x34d: V291 = SUB V288 V290
0x34f: RETURN V290 V291
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x350
[0x350:0x356]
---
Predecessors: [0xca]
Successors: [0x357, 0x35b]
---
0x350 JUMPDEST
0x351 CALLVALUE
0x352 ISZERO
0x353 PUSH2 0x35b
0x356 JUMPI
---
0x350: JUMPDEST 
0x351: V292 = CALLVALUE
0x352: V293 = ISZERO V292
0x353: V294 = 0x35b
0x356: JUMPI 0x35b V293
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x357
[0x357:0x35a]
---
Predecessors: [0x350]
Successors: []
---
0x357 PUSH1 0x0
0x359 DUP1
0x35a REVERT
---
0x357: V295 = 0x0
0x35a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35b
[0x35b:0x36e]
---
Predecessors: [0x350]
Successors: [0x9d9]
---
0x35b JUMPDEST
0x35c PUSH2 0x10e
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 PUSH1 0x4
0x369 CALLDATALOAD
0x36a AND
0x36b PUSH2 0x9d9
0x36e JUMP
---
0x35b: JUMPDEST 
0x35c: V296 = 0x10e
0x35f: V297 = 0x1
0x361: V298 = 0xa0
0x363: V299 = 0x2
0x365: V300 = EXP 0x2 0xa0
0x366: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x367: V302 = 0x4
0x369: V303 = CALLDATALOAD 0x4
0x36a: V304 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V305 = 0x9d9
0x36e: JUMP 0x9d9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10e, V304]
Exit stack: [V12, 0x10e, V304]

================================

Block 0x36f
[0x36f:0x370]
---
Predecessors: []
Successors: []
---
0x36f JUMPDEST
0x370 STOP
---
0x36f: JUMPDEST 
0x370: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x371
[0x371:0x377]
---
Predecessors: [0xd5]
Successors: [0x378, 0x37c]
---
0x371 JUMPDEST
0x372 CALLVALUE
0x373 ISZERO
0x374 PUSH2 0x37c
0x377 JUMPI
---
0x371: JUMPDEST 
0x372: V306 = CALLVALUE
0x373: V307 = ISZERO V306
0x374: V308 = 0x37c
0x377: JUMPI 0x37c V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x378
[0x378:0x37b]
---
Predecessors: [0x371]
Successors: []
---
0x378 PUSH1 0x0
0x37a DUP1
0x37b REVERT
---
0x378: V309 = 0x0
0x37b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37c
[0x37c:0x383]
---
Predecessors: [0x371]
Successors: [0xa31]
---
0x37c JUMPDEST
0x37d PUSH2 0x203
0x380 PUSH2 0xa31
0x383 JUMP
---
0x37c: JUMPDEST 
0x37d: V310 = 0x203
0x380: V311 = 0xa31
0x383: JUMP 0xa31
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x203]
Exit stack: [V12, 0x203]

================================

Block 0x384
[0x384:0x39f]
---
Predecessors: []
Successors: []
---
0x384 JUMPDEST
0x385 PUSH1 0x40
0x387 MLOAD
0x388 PUSH1 0x1
0x38a PUSH1 0xa0
0x38c PUSH1 0x2
0x38e EXP
0x38f SUB
0x390 SWAP1
0x391 SWAP2
0x392 AND
0x393 DUP2
0x394 MSTORE
0x395 PUSH1 0x20
0x397 ADD
0x398 PUSH1 0x40
0x39a MLOAD
0x39b DUP1
0x39c SWAP2
0x39d SUB
0x39e SWAP1
0x39f RETURN
---
0x384: JUMPDEST 
0x385: V312 = 0x40
0x387: V313 = M[0x40]
0x388: V314 = 0x1
0x38a: V315 = 0xa0
0x38c: V316 = 0x2
0x38e: V317 = EXP 0x2 0xa0
0x38f: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x392: V319 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x394: M[V313] = V319
0x395: V320 = 0x20
0x397: V321 = ADD 0x20 V313
0x398: V322 = 0x40
0x39a: V323 = M[0x40]
0x39d: V324 = SUB V321 V323
0x39f: RETURN V323 V324
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3a0
[0x3a0:0x3b2]
---
Predecessors: [0x101]
Successors: [0x3b3, 0x3b7]
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x0
0x3a3 DUP1
0x3a4 PUSH7 0x2386f26fc10000
0x3ac CALLVALUE
0x3ad LT
0x3ae ISZERO
0x3af PUSH2 0x3b7
0x3b2 JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V325 = 0x0
0x3a4: V326 = 0x2386f26fc10000
0x3ac: V327 = CALLVALUE
0x3ad: V328 = LT V327 0x2386f26fc10000
0x3ae: V329 = ISZERO V328
0x3af: V330 = 0x3b7
0x3b2: JUMPI 0x3b7 V329
---
Entry stack: [V12, 0x10e, 0x10a, V83]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0]

================================

Block 0x3b3
[0x3b3:0x3b6]
---
Predecessors: [0x3a0]
Successors: []
---
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 REVERT
---
0x3b3: V331 = 0x0
0x3b6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0]

================================

Block 0x3b7
[0x3b7:0x3df]
---
Predecessors: [0x3a0]
Successors: [0xa40]
---
0x3b7 JUMPDEST
0x3b8 PUSH2 0x3f1
0x3bb PUSH2 0x3ec
0x3be PUSH8 0xde0b6b3a7640000
0x3c7 PUSH2 0x3e0
0x3ca CALLVALUE
0x3cb PUSH10 0x10f0cf064dd59200000
0x3d6 PUSH4 0xffffffff
0x3db PUSH2 0xa40
0x3de AND
0x3df JUMP
---
0x3b7: JUMPDEST 
0x3b8: V332 = 0x3f1
0x3bb: V333 = 0x3ec
0x3be: V334 = 0xde0b6b3a7640000
0x3c7: V335 = 0x3e0
0x3ca: V336 = CALLVALUE
0x3cb: V337 = 0x10f0cf064dd59200000
0x3d6: V338 = 0xffffffff
0x3db: V339 = 0xa40
0x3de: V340 = AND 0xa40 0xffffffff
0x3df: JUMP 0xa40
---
Entry stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000]
Exit stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000]

================================

Block 0x3e0
[0x3e0:0x3eb]
---
Predecessors: [0xa68]
Successors: [0xa6f]
---
0x3e0 JUMPDEST
0x3e1 SWAP1
0x3e2 PUSH4 0xffffffff
0x3e7 PUSH2 0xa6f
0x3ea AND
0x3eb JUMP
---
0x3e0: JUMPDEST 
0x3e2: V341 = 0xffffffff
0x3e7: V342 = 0xa6f
0x3ea: V343 = AND 0xa6f 0xffffffff
0x3eb: JUMP 0xa6f
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S0, S1]

================================

Block 0x3ec
[0x3ec:0x3f0]
---
Predecessors: [0xa84]
Successors: [0xa8b]
---
0x3ec JUMPDEST
0x3ed PUSH2 0xa8b
0x3f0 JUMP
---
0x3ec: JUMPDEST 
0x3ed: V344 = 0xa8b
0x3f0: JUMP 0xa8b
---
Entry stack: [V12, 0x10e, 0x10a, S7, {0x0, 0x10e}, {0x0, 0x10a}, S4, S3, 0x0, {0x3f1, 0xacc}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x10a, S7, {0x0, 0x10e}, {0x0, 0x10a}, S4, S3, 0x0, {0x3f1, 0xacc}, S0]

================================

Block 0x3f1
[0x3f1:0x413]
---
Predecessors: [0xb60]
Successors: [0xb65]
---
0x3f1 JUMPDEST
0x3f2 SWAP2
0x3f3 POP
0x3f4 PUSH11 0x3063db5ac1d44d4a800000
0x400 PUSH2 0x414
0x403 PUSH1 0x6
0x405 SLOAD
0x406 DUP5
0x407 PUSH2 0xb65
0x40a SWAP1
0x40b SWAP2
0x40c SWAP1
0x40d PUSH4 0xffffffff
0x412 AND
0x413 JUMP
---
0x3f1: JUMPDEST 
0x3f4: V345 = 0x3063db5ac1d44d4a800000
0x400: V346 = 0x414
0x403: V347 = 0x6
0x405: V348 = S[0x6]
0x407: V349 = 0xb65
0x40d: V350 = 0xffffffff
0x412: V351 = AND 0xffffffff 0xb65
0x413: JUMP 0xb65
---
Entry stack: [V12, 0x10e, S4, S3, {0x0, 0x10a, 0x10e}, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x3063db5ac1d44d4a800000, 0x414, S0, V348]
Exit stack: [V12, 0x10e, S4, S3, S0, S1, 0x3063db5ac1d44d4a800000, 0x414, S0, V348]

================================

Block 0x414
[0x414:0x41a]
---
Predecessors: [0xa68]
Successors: [0x41b, 0x41f]
---
0x414 JUMPDEST
0x415 GT
0x416 ISZERO
0x417 PUSH2 0x41f
0x41a JUMPI
---
0x414: JUMPDEST 
0x415: V352 = GT S0 S1
0x416: V353 = ISZERO V352
0x417: V354 = 0x41f
0x41a: JUMPI 0x41f V353
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2]

================================

Block 0x41b
[0x41b:0x41e]
---
Predecessors: [0x414]
Successors: []
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
---
0x41b: V355 = 0x0
0x41e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, S5, S4, {0x0, 0x10a, 0x10e}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, S5, S4, {0x0, 0x10a, 0x10e}, S2, S1, S0]

================================

Block 0x41f
[0x41f:0x470]
---
Predecessors: [0x414]
Successors: [0x471, 0x475]
---
0x41f JUMPDEST
0x420 PUSH1 0x2
0x422 SLOAD
0x423 PUSH1 0x1
0x425 PUSH1 0xa0
0x427 PUSH1 0x2
0x429 EXP
0x42a SUB
0x42b AND
0x42c PUSH4 0xa9059cbb
0x431 DUP5
0x432 DUP5
0x433 PUSH1 0x40
0x435 MLOAD
0x436 PUSH1 0xe0
0x438 PUSH1 0x2
0x43a EXP
0x43b PUSH4 0xffffffff
0x440 DUP6
0x441 AND
0x442 MUL
0x443 DUP2
0x444 MSTORE
0x445 PUSH1 0x1
0x447 PUSH1 0xa0
0x449 PUSH1 0x2
0x44b EXP
0x44c SUB
0x44d SWAP1
0x44e SWAP3
0x44f AND
0x450 PUSH1 0x4
0x452 DUP4
0x453 ADD
0x454 MSTORE
0x455 PUSH1 0x24
0x457 DUP3
0x458 ADD
0x459 MSTORE
0x45a PUSH1 0x44
0x45c ADD
0x45d PUSH1 0x0
0x45f PUSH1 0x40
0x461 MLOAD
0x462 DUP1
0x463 DUP4
0x464 SUB
0x465 DUP2
0x466 PUSH1 0x0
0x468 DUP8
0x469 DUP1
0x46a EXTCODESIZE
0x46b ISZERO
0x46c ISZERO
0x46d PUSH2 0x475
0x470 JUMPI
---
0x41f: JUMPDEST 
0x420: V356 = 0x2
0x422: V357 = S[0x2]
0x423: V358 = 0x1
0x425: V359 = 0xa0
0x427: V360 = 0x2
0x429: V361 = EXP 0x2 0xa0
0x42a: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42b: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x42c: V364 = 0xa9059cbb
0x433: V365 = 0x40
0x435: V366 = M[0x40]
0x436: V367 = 0xe0
0x438: V368 = 0x2
0x43a: V369 = EXP 0x2 0xe0
0x43b: V370 = 0xffffffff
0x441: V371 = AND 0xa9059cbb 0xffffffff
0x442: V372 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x444: M[V366] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x445: V373 = 0x1
0x447: V374 = 0xa0
0x449: V375 = 0x2
0x44b: V376 = EXP 0x2 0xa0
0x44c: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44f: V378 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x450: V379 = 0x4
0x453: V380 = ADD V366 0x4
0x454: M[V380] = V378
0x455: V381 = 0x24
0x458: V382 = ADD V366 0x24
0x459: M[V382] = S1
0x45a: V383 = 0x44
0x45c: V384 = ADD 0x44 V366
0x45d: V385 = 0x0
0x45f: V386 = 0x40
0x461: V387 = M[0x40]
0x464: V388 = SUB V384 V387
0x466: V389 = 0x0
0x46a: V390 = EXTCODESIZE V363
0x46b: V391 = ISZERO V390
0x46c: V392 = ISZERO V391
0x46d: V393 = 0x475
0x470: JUMPI 0x475 V392
---
Entry stack: [V12, 0x10e, S5, S4, {0x0, 0x10a, 0x10e}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V363, 0xa9059cbb, V384, 0x0, V387, V388, V387, 0x0, V363]
Exit stack: [V12, 0x10e, S5, S4, {0x0, 0x10a, 0x10e}, S2, S1, S0, V363, 0xa9059cbb, V384, 0x0, V387, V388, V387, 0x0, V363]

================================

Block 0x471
[0x471:0x474]
---
Predecessors: [0x41f]
Successors: []
---
0x471 PUSH1 0x0
0x473 DUP1
0x474 REVERT
---
0x471: V394 = 0x0
0x474: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, S14, S13, {0x0, 0x10a, 0x10e}, S11, S10, S9, V363, 0xa9059cbb, V384, 0x0, V387, V388, V387, 0x0, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, S14, S13, {0x0, 0x10a, 0x10e}, S11, S10, S9, V363, 0xa9059cbb, V384, 0x0, V387, V388, V387, 0x0, V363]

================================

Block 0x475
[0x475:0x481]
---
Predecessors: [0x41f]
Successors: [0x482, 0x486]
---
0x475 JUMPDEST
0x476 PUSH2 0x2c6
0x479 GAS
0x47a SUB
0x47b CALL
0x47c ISZERO
0x47d ISZERO
0x47e PUSH2 0x486
0x481 JUMPI
---
0x475: JUMPDEST 
0x476: V395 = 0x2c6
0x479: V396 = GAS
0x47a: V397 = SUB V396 0x2c6
0x47b: V398 = CALL V397 V363 0x0 V387 V388 V387 0x0
0x47c: V399 = ISZERO V398
0x47d: V400 = ISZERO V399
0x47e: V401 = 0x486
0x481: JUMPI 0x486 V400
---
Entry stack: [V12, 0x10e, S14, S13, {0x0, 0x10a, 0x10e}, S11, S10, S9, V363, 0xa9059cbb, V384, 0x0, V387, V388, V387, 0x0, V363]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10e, S14, S13, {0x0, 0x10a, 0x10e}, S11, S10, S9, V363, 0xa9059cbb, V384]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x475]
Successors: []
---
0x482 PUSH1 0x0
0x484 DUP1
0x485 REVERT
---
0x482: V402 = 0x0
0x485: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, S8, S7, {0x0, 0x10a, 0x10e}, S5, S4, S3, V363, 0xa9059cbb, V384]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, S8, S7, {0x0, 0x10a, 0x10e}, S5, S4, S3, V363, 0xa9059cbb, V384]

================================

Block 0x486
[0x486:0x4b2]
---
Predecessors: [0x475]
Successors: [0xb65]
---
0x486 JUMPDEST
0x487 POP
0x488 POP
0x489 POP
0x48a POP
0x48b PUSH1 0x1
0x48d PUSH1 0xa0
0x48f PUSH1 0x2
0x491 EXP
0x492 SUB
0x493 DUP3
0x494 AND
0x495 PUSH1 0x0
0x497 SWAP1
0x498 DUP2
0x499 MSTORE
0x49a PUSH1 0x1
0x49c PUSH1 0x20
0x49e DUP2
0x49f SWAP1
0x4a0 MSTORE
0x4a1 PUSH1 0x40
0x4a3 SWAP1
0x4a4 SWAP2
0x4a5 SHA3
0x4a6 SWAP1
0x4a7 DUP2
0x4a8 ADD
0x4a9 SLOAD
0x4aa PUSH2 0x4b3
0x4ad SWAP1
0x4ae DUP4
0x4af PUSH2 0xb65
0x4b2 JUMP
---
0x486: JUMPDEST 
0x48b: V403 = 0x1
0x48d: V404 = 0xa0
0x48f: V405 = 0x2
0x491: V406 = EXP 0x2 0xa0
0x492: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x494: V408 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x495: V409 = 0x0
0x499: M[0x0] = V408
0x49a: V410 = 0x1
0x49c: V411 = 0x20
0x4a0: M[0x20] = 0x1
0x4a1: V412 = 0x40
0x4a5: V413 = SHA3 0x0 0x40
0x4a8: V414 = ADD V413 0x1
0x4a9: V415 = S[V414]
0x4aa: V416 = 0x4b3
0x4af: V417 = 0xb65
0x4b2: JUMP 0xb65
---
Entry stack: [V12, 0x10e, S8, S7, {0x0, 0x10a, 0x10e}, S5, S4, S3, V363, 0xa9059cbb, V384]
Stack pops: 6
Stack additions: [S5, S4, V413, 0x4b3, V415, S4]
Exit stack: [V12, 0x10e, S8, S7, {0x0, 0x10a, 0x10e}, S5, S4, V413, 0x4b3, V415, S4]

================================

Block 0x4b3
[0x4b3:0x4c9]
---
Predecessors: [0xa68]
Successors: [0xb65]
---
0x4b3 JUMPDEST
0x4b4 PUSH1 0x1
0x4b6 DUP3
0x4b7 ADD
0x4b8 SSTORE
0x4b9 DUP1
0x4ba SLOAD
0x4bb PUSH2 0x4ca
0x4be SWAP1
0x4bf CALLVALUE
0x4c0 PUSH4 0xffffffff
0x4c5 PUSH2 0xb65
0x4c8 AND
0x4c9 JUMP
---
0x4b3: JUMPDEST 
0x4b4: V418 = 0x1
0x4b7: V419 = ADD S1 0x1
0x4b8: S[V419] = S0
0x4ba: V420 = S[S1]
0x4bb: V421 = 0x4ca
0x4bf: V422 = CALLVALUE
0x4c0: V423 = 0xffffffff
0x4c5: V424 = 0xb65
0x4c8: V425 = AND 0xb65 0xffffffff
0x4c9: JUMP 0xb65
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x4ca, V420, V422]
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, 0x4ca, V420, V422]

================================

Block 0x4ca
[0x4ca:0x4de]
---
Predecessors: [0xa68]
Successors: [0xb65]
---
0x4ca JUMPDEST
0x4cb DUP2
0x4cc SSTORE
0x4cd PUSH1 0x5
0x4cf SLOAD
0x4d0 PUSH2 0x4df
0x4d3 SWAP1
0x4d4 CALLVALUE
0x4d5 PUSH4 0xffffffff
0x4da PUSH2 0xb65
0x4dd AND
0x4de JUMP
---
0x4ca: JUMPDEST 
0x4cc: S[S1] = S0
0x4cd: V426 = 0x5
0x4cf: V427 = S[0x5]
0x4d0: V428 = 0x4df
0x4d4: V429 = CALLVALUE
0x4d5: V430 = 0xffffffff
0x4da: V431 = 0xb65
0x4dd: V432 = AND 0xb65 0xffffffff
0x4de: JUMP 0xb65
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x4df, V427, V429]
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, 0x4df, V427, V429]

================================

Block 0x4df
[0x4df:0x4f4]
---
Predecessors: [0xa68]
Successors: [0xb65]
---
0x4df JUMPDEST
0x4e0 PUSH1 0x5
0x4e2 SSTORE
0x4e3 PUSH1 0x6
0x4e5 SLOAD
0x4e6 PUSH2 0x4f5
0x4e9 SWAP1
0x4ea DUP4
0x4eb PUSH4 0xffffffff
0x4f0 PUSH2 0xb65
0x4f3 AND
0x4f4 JUMP
---
0x4df: JUMPDEST 
0x4e0: V433 = 0x5
0x4e2: S[0x5] = S0
0x4e3: V434 = 0x6
0x4e5: V435 = S[0x6]
0x4e6: V436 = 0x4f5
0x4eb: V437 = 0xffffffff
0x4f0: V438 = 0xb65
0x4f3: V439 = AND 0xb65 0xffffffff
0x4f4: JUMP 0xb65
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x4f5, V435, S2]
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, 0x4f5, V435, S2]

================================

Block 0x4f5
[0x4f5:0x572]
---
Predecessors: [0xa68]
Successors: [0x573]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x6
0x4f8 SSTORE
0x4f9 PUSH1 0x1
0x4fb PUSH1 0xa0
0x4fd PUSH1 0x2
0x4ff EXP
0x500 SUB
0x501 DUP4
0x502 AND
0x503 PUSH32 0xf18d5a93c62c1d0c761ed52107f11d20bc2071851206b79c4dd3283bd9f006f1
0x524 DUP4
0x525 PUSH1 0x40
0x527 MLOAD
0x528 SWAP1
0x529 DUP2
0x52a MSTORE
0x52b PUSH1 0x20
0x52d ADD
0x52e PUSH1 0x40
0x530 MLOAD
0x531 DUP1
0x532 SWAP2
0x533 SUB
0x534 SWAP1
0x535 LOG2
0x536 DUP3
0x537 PUSH1 0x1
0x539 PUSH1 0xa0
0x53b PUSH1 0x2
0x53d EXP
0x53e SUB
0x53f AND
0x540 PUSH32 0x1bb460ccaaf70fbacfec17a376f8acbd278c1405590ffcc8ebe4b88daf4f64ad
0x561 CALLVALUE
0x562 PUSH1 0x40
0x564 MLOAD
0x565 SWAP1
0x566 DUP2
0x567 MSTORE
0x568 PUSH1 0x20
0x56a ADD
0x56b PUSH1 0x40
0x56d MLOAD
0x56e DUP1
0x56f SWAP2
0x570 SUB
0x571 SWAP1
0x572 LOG2
---
0x4f5: JUMPDEST 
0x4f6: V440 = 0x6
0x4f8: S[0x6] = S0
0x4f9: V441 = 0x1
0x4fb: V442 = 0xa0
0x4fd: V443 = 0x2
0x4ff: V444 = EXP 0x2 0xa0
0x500: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x502: V446 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x503: V447 = 0xf18d5a93c62c1d0c761ed52107f11d20bc2071851206b79c4dd3283bd9f006f1
0x525: V448 = 0x40
0x527: V449 = M[0x40]
0x52a: M[V449] = S2
0x52b: V450 = 0x20
0x52d: V451 = ADD 0x20 V449
0x52e: V452 = 0x40
0x530: V453 = M[0x40]
0x533: V454 = SUB V451 V453
0x535: LOG V453 V454 0xf18d5a93c62c1d0c761ed52107f11d20bc2071851206b79c4dd3283bd9f006f1 V446
0x537: V455 = 0x1
0x539: V456 = 0xa0
0x53b: V457 = 0x2
0x53d: V458 = EXP 0x2 0xa0
0x53e: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53f: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x540: V461 = 0x1bb460ccaaf70fbacfec17a376f8acbd278c1405590ffcc8ebe4b88daf4f64ad
0x561: V462 = CALLVALUE
0x562: V463 = 0x40
0x564: V464 = M[0x40]
0x567: M[V464] = V462
0x568: V465 = 0x20
0x56a: V466 = ADD 0x20 V464
0x56b: V467 = 0x40
0x56d: V468 = M[0x40]
0x570: V469 = SUB V466 V468
0x572: LOG V468 V469 0x1bb460ccaaf70fbacfec17a376f8acbd278c1405590ffcc8ebe4b88daf4f64ad V460
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1]

================================

Block 0x573
[0x573:0x577]
---
Predecessors: [0x4f5]
Successors: [0x10a]
---
0x573 JUMPDEST
0x574 POP
0x575 POP
0x576 POP
0x577 JUMP
---
0x573: JUMPDEST 
0x577: JUMP S3
---
Entry stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}]

================================

Block 0x578
[0x578:0x57d]
---
Predecessors: [0x11b]
Successors: [0x123]
---
0x578 JUMPDEST
0x579 PUSH1 0x8
0x57b SLOAD
0x57c DUP2
0x57d JUMP
---
0x578: JUMPDEST 
0x579: V470 = 0x8
0x57b: V471 = S[0x8]
0x57d: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, V471]
Exit stack: [V12, 0x123, V471]

================================

Block 0x57e
[0x57e:0x583]
---
Predecessors: [0x140]
Successors: [0x123]
---
0x57e JUMPDEST
0x57f PUSH1 0x6
0x581 SLOAD
0x582 DUP2
0x583 JUMP
---
0x57e: JUMPDEST 
0x57f: V472 = 0x6
0x581: V473 = S[0x6]
0x583: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, V473]
Exit stack: [V12, 0x123, V473]

================================

Block 0x584
[0x584:0x59c]
---
Predecessors: [0x165]
Successors: [0x179]
---
0x584 JUMPDEST
0x585 PUSH1 0x1
0x587 PUSH1 0x20
0x589 DUP2
0x58a SWAP1
0x58b MSTORE
0x58c PUSH1 0x0
0x58e SWAP2
0x58f DUP3
0x590 MSTORE
0x591 PUSH1 0x40
0x593 SWAP1
0x594 SWAP2
0x595 SHA3
0x596 DUP1
0x597 SLOAD
0x598 SWAP2
0x599 ADD
0x59a SLOAD
0x59b DUP3
0x59c JUMP
---
0x584: JUMPDEST 
0x585: V474 = 0x1
0x587: V475 = 0x20
0x58b: M[0x20] = 0x1
0x58c: V476 = 0x0
0x590: M[0x0] = V123
0x591: V477 = 0x40
0x595: V478 = SHA3 0x0 0x40
0x597: V479 = S[V478]
0x599: V480 = ADD 0x1 V478
0x59a: V481 = S[V480]
0x59c: JUMP 0x179
---
Entry stack: [V12, 0x179, V123]
Stack pops: 2
Stack additions: [S1, V479, V481]
Exit stack: [V12, 0x179, V479, V481]

================================

Block 0x59d
[0x59d:0x5a2]
---
Predecessors: [0x19c]
Successors: [0x123]
---
0x59d JUMPDEST
0x59e PUSH1 0x5
0x5a0 SLOAD
0x5a1 DUP2
0x5a2 JUMP
---
0x59d: JUMPDEST 
0x59e: V482 = 0x5
0x5a0: V483 = S[0x5]
0x5a2: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, V483]
Exit stack: [V12, 0x123, V483]

================================

Block 0x5a3
[0x5a3:0x5ba]
---
Predecessors: [0x1c1]
Successors: [0x5bb, 0x5bf]
---
0x5a3 JUMPDEST
0x5a4 PUSH1 0x0
0x5a6 DUP1
0x5a7 SLOAD
0x5a8 CALLER
0x5a9 PUSH1 0x1
0x5ab PUSH1 0xa0
0x5ad PUSH1 0x2
0x5af EXP
0x5b0 SUB
0x5b1 SWAP1
0x5b2 DUP2
0x5b3 AND
0x5b4 SWAP2
0x5b5 AND
0x5b6 EQ
0x5b7 PUSH2 0x5bf
0x5ba JUMPI
---
0x5a3: JUMPDEST 
0x5a4: V484 = 0x0
0x5a7: V485 = S[0x0]
0x5a8: V486 = CALLER
0x5a9: V487 = 0x1
0x5ab: V488 = 0xa0
0x5ad: V489 = 0x2
0x5af: V490 = EXP 0x2 0xa0
0x5b0: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b3: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V486
0x5b5: V493 = AND V485 0xffffffffffffffffffffffffffffffffffffffff
0x5b6: V494 = EQ V493 V492
0x5b7: V495 = 0x5bf
0x5ba: JUMPI 0x5bf V494
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x10e, 0x0]

================================

Block 0x5bb
[0x5bb:0x5be]
---
Predecessors: [0x5a3]
Successors: []
---
0x5bb PUSH1 0x0
0x5bd DUP1
0x5be REVERT
---
0x5bb: V496 = 0x0
0x5be: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x0]

================================

Block 0x5bf
[0x5bf:0x5ca]
---
Predecessors: [0x5a3]
Successors: [0x5cb, 0x5d1]
---
0x5bf JUMPDEST
0x5c0 PUSH1 0x7
0x5c2 SLOAD
0x5c3 ISZERO
0x5c4 DUP1
0x5c5 ISZERO
0x5c6 SWAP1
0x5c7 PUSH2 0x5d1
0x5ca JUMPI
---
0x5bf: JUMPDEST 
0x5c0: V497 = 0x7
0x5c2: V498 = S[0x7]
0x5c3: V499 = ISZERO V498
0x5c5: V500 = ISZERO V499
0x5c7: V501 = 0x5d1
0x5ca: JUMPI 0x5d1 V499
---
Entry stack: [V12, 0x10e, 0x0]
Stack pops: 0
Stack additions: [V500]
Exit stack: [V12, 0x10e, 0x0, V500]

================================

Block 0x5cb
[0x5cb:0x5d0]
---
Predecessors: [0x5bf]
Successors: [0x5d1]
---
0x5cb POP
0x5cc PUSH1 0x8
0x5ce SLOAD
0x5cf TIMESTAMP
0x5d0 GT
---
0x5cc: V502 = 0x8
0x5ce: V503 = S[0x8]
0x5cf: V504 = TIMESTAMP
0x5d0: V505 = GT V504 V503
---
Entry stack: [V12, 0x10e, 0x0, V500]
Stack pops: 1
Stack additions: [V505]
Exit stack: [V12, 0x10e, 0x0, V505]

================================

Block 0x5d1
[0x5d1:0x5d6]
---
Predecessors: [0x5bf, 0x5cb]
Successors: [0x5d7, 0x5e8]
---
0x5d1 JUMPDEST
0x5d2 DUP1
0x5d3 PUSH2 0x5e8
0x5d6 JUMPI
---
0x5d1: JUMPDEST 
0x5d3: V506 = 0x5e8
0x5d6: JUMPI 0x5e8 S0
---
Entry stack: [V12, 0x10e, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x10e, 0x0, S0]

================================

Block 0x5d7
[0x5d7:0x5e7]
---
Predecessors: [0x5d1]
Successors: [0x5e8]
---
0x5d7 POP
0x5d8 PUSH11 0x3063db5ac1d44d4a800000
0x5e4 PUSH1 0x6
0x5e6 SLOAD
0x5e7 EQ
---
0x5d8: V507 = 0x3063db5ac1d44d4a800000
0x5e4: V508 = 0x6
0x5e6: V509 = S[0x6]
0x5e7: V510 = EQ V509 0x3063db5ac1d44d4a800000
---
Entry stack: [V12, 0x10e, 0x0, S0]
Stack pops: 1
Stack additions: [V510]
Exit stack: [V12, 0x10e, 0x0, V510]

================================

Block 0x5e8
[0x5e8:0x5ee]
---
Predecessors: [0x5d1, 0x5d7]
Successors: [0x5ef, 0x5f3]
---
0x5e8 JUMPDEST
0x5e9 ISZERO
0x5ea ISZERO
0x5eb PUSH2 0x5f3
0x5ee JUMPI
---
0x5e8: JUMPDEST 
0x5e9: V511 = ISZERO S0
0x5ea: V512 = ISZERO V511
0x5eb: V513 = 0x5f3
0x5ee: JUMPI 0x5f3 V512
---
Entry stack: [V12, 0x10e, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10e, 0x0]

================================

Block 0x5ef
[0x5ef:0x5f2]
---
Predecessors: [0x5e8]
Successors: []
---
0x5ef PUSH1 0x0
0x5f1 DUP1
0x5f2 REVERT
---
0x5ef: V514 = 0x0
0x5f2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x0]

================================

Block 0x5f3
[0x5f3:0x647]
---
Predecessors: [0x5e8]
Successors: [0x648, 0x64c]
---
0x5f3 JUMPDEST
0x5f4 PUSH1 0x2
0x5f6 SLOAD
0x5f7 PUSH1 0x1
0x5f9 PUSH1 0xa0
0x5fb PUSH1 0x2
0x5fd EXP
0x5fe SUB
0x5ff AND
0x600 PUSH4 0x70a08231
0x605 ADDRESS
0x606 PUSH1 0x0
0x608 PUSH1 0x40
0x60a MLOAD
0x60b PUSH1 0x20
0x60d ADD
0x60e MSTORE
0x60f PUSH1 0x40
0x611 MLOAD
0x612 PUSH1 0xe0
0x614 PUSH1 0x2
0x616 EXP
0x617 PUSH4 0xffffffff
0x61c DUP5
0x61d AND
0x61e MUL
0x61f DUP2
0x620 MSTORE
0x621 PUSH1 0x1
0x623 PUSH1 0xa0
0x625 PUSH1 0x2
0x627 EXP
0x628 SUB
0x629 SWAP1
0x62a SWAP2
0x62b AND
0x62c PUSH1 0x4
0x62e DUP3
0x62f ADD
0x630 MSTORE
0x631 PUSH1 0x24
0x633 ADD
0x634 PUSH1 0x20
0x636 PUSH1 0x40
0x638 MLOAD
0x639 DUP1
0x63a DUP4
0x63b SUB
0x63c DUP2
0x63d PUSH1 0x0
0x63f DUP8
0x640 DUP1
0x641 EXTCODESIZE
0x642 ISZERO
0x643 ISZERO
0x644 PUSH2 0x64c
0x647 JUMPI
---
0x5f3: JUMPDEST 
0x5f4: V515 = 0x2
0x5f6: V516 = S[0x2]
0x5f7: V517 = 0x1
0x5f9: V518 = 0xa0
0x5fb: V519 = 0x2
0x5fd: V520 = EXP 0x2 0xa0
0x5fe: V521 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ff: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x600: V523 = 0x70a08231
0x605: V524 = ADDRESS
0x606: V525 = 0x0
0x608: V526 = 0x40
0x60a: V527 = M[0x40]
0x60b: V528 = 0x20
0x60d: V529 = ADD 0x20 V527
0x60e: M[V529] = 0x0
0x60f: V530 = 0x40
0x611: V531 = M[0x40]
0x612: V532 = 0xe0
0x614: V533 = 0x2
0x616: V534 = EXP 0x2 0xe0
0x617: V535 = 0xffffffff
0x61d: V536 = AND 0x70a08231 0xffffffff
0x61e: V537 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x620: M[V531] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x621: V538 = 0x1
0x623: V539 = 0xa0
0x625: V540 = 0x2
0x627: V541 = EXP 0x2 0xa0
0x628: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62b: V543 = AND V524 0xffffffffffffffffffffffffffffffffffffffff
0x62c: V544 = 0x4
0x62f: V545 = ADD V531 0x4
0x630: M[V545] = V543
0x631: V546 = 0x24
0x633: V547 = ADD 0x24 V531
0x634: V548 = 0x20
0x636: V549 = 0x40
0x638: V550 = M[0x40]
0x63b: V551 = SUB V547 V550
0x63d: V552 = 0x0
0x641: V553 = EXTCODESIZE V522
0x642: V554 = ISZERO V553
0x643: V555 = ISZERO V554
0x644: V556 = 0x64c
0x647: JUMPI 0x64c V555
---
Entry stack: [V12, 0x10e, 0x0]
Stack pops: 0
Stack additions: [V522, 0x70a08231, V547, 0x20, V550, V551, V550, 0x0, V522]
Exit stack: [V12, 0x10e, 0x0, V522, 0x70a08231, V547, 0x20, V550, V551, V550, 0x0, V522]

================================

Block 0x648
[0x648:0x64b]
---
Predecessors: [0x5f3]
Successors: []
---
0x648 PUSH1 0x0
0x64a DUP1
0x64b REVERT
---
0x648: V557 = 0x0
0x64b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, 0x0, V522, 0x70a08231, V547, 0x20, V550, V551, V550, 0x0, V522]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x0, V522, 0x70a08231, V547, 0x20, V550, V551, V550, 0x0, V522]

================================

Block 0x64c
[0x64c:0x658]
---
Predecessors: [0x5f3]
Successors: [0x659, 0x65d]
---
0x64c JUMPDEST
0x64d PUSH2 0x2c6
0x650 GAS
0x651 SUB
0x652 CALL
0x653 ISZERO
0x654 ISZERO
0x655 PUSH2 0x65d
0x658 JUMPI
---
0x64c: JUMPDEST 
0x64d: V558 = 0x2c6
0x650: V559 = GAS
0x651: V560 = SUB V559 0x2c6
0x652: V561 = CALL V560 V522 0x0 V550 V551 V550 0x20
0x653: V562 = ISZERO V561
0x654: V563 = ISZERO V562
0x655: V564 = 0x65d
0x658: JUMPI 0x65d V563
---
Entry stack: [V12, 0x10e, 0x0, V522, 0x70a08231, V547, 0x20, V550, V551, V550, 0x0, V522]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10e, 0x0, V522, 0x70a08231, V547]

================================

Block 0x659
[0x659:0x65c]
---
Predecessors: [0x64c]
Successors: []
---
0x659 PUSH1 0x0
0x65b DUP1
0x65c REVERT
---
0x659: V565 = 0x0
0x65c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, 0x0, V522, 0x70a08231, V547]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x0, V522, 0x70a08231, V547]

================================

Block 0x65d
[0x65d:0x671]
---
Predecessors: [0x64c]
Successors: [0x672, 0x6de]
---
0x65d JUMPDEST
0x65e POP
0x65f POP
0x660 POP
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 MLOAD
0x666 SWAP2
0x667 POP
0x668 POP
0x669 PUSH1 0x0
0x66b DUP2
0x66c GT
0x66d ISZERO
0x66e PUSH2 0x6de
0x671 JUMPI
---
0x65d: JUMPDEST 
0x661: V566 = 0x40
0x663: V567 = M[0x40]
0x665: V568 = M[V567]
0x669: V569 = 0x0
0x66c: V570 = GT V568 0x0
0x66d: V571 = ISZERO V570
0x66e: V572 = 0x6de
0x671: JUMPI 0x6de V571
---
Entry stack: [V12, 0x10e, 0x0, V522, 0x70a08231, V547]
Stack pops: 4
Stack additions: [V568]
Exit stack: [V12, 0x10e, V568]

================================

Block 0x672
[0x672:0x6bd]
---
Predecessors: [0x65d]
Successors: [0x6be, 0x6c2]
---
0x672 PUSH1 0x2
0x674 SLOAD
0x675 PUSH1 0x1
0x677 PUSH1 0xa0
0x679 PUSH1 0x2
0x67b EXP
0x67c SUB
0x67d AND
0x67e PUSH4 0x9d118770
0x683 DUP3
0x684 PUSH1 0x0
0x686 PUSH1 0x40
0x688 MLOAD
0x689 PUSH1 0x20
0x68b ADD
0x68c MSTORE
0x68d PUSH1 0x40
0x68f MLOAD
0x690 PUSH1 0xe0
0x692 PUSH1 0x2
0x694 EXP
0x695 PUSH4 0xffffffff
0x69a DUP5
0x69b AND
0x69c MUL
0x69d DUP2
0x69e MSTORE
0x69f PUSH1 0x4
0x6a1 DUP2
0x6a2 ADD
0x6a3 SWAP2
0x6a4 SWAP1
0x6a5 SWAP2
0x6a6 MSTORE
0x6a7 PUSH1 0x24
0x6a9 ADD
0x6aa PUSH1 0x20
0x6ac PUSH1 0x40
0x6ae MLOAD
0x6af DUP1
0x6b0 DUP4
0x6b1 SUB
0x6b2 DUP2
0x6b3 PUSH1 0x0
0x6b5 DUP8
0x6b6 DUP1
0x6b7 EXTCODESIZE
0x6b8 ISZERO
0x6b9 ISZERO
0x6ba PUSH2 0x6c2
0x6bd JUMPI
---
0x672: V573 = 0x2
0x674: V574 = S[0x2]
0x675: V575 = 0x1
0x677: V576 = 0xa0
0x679: V577 = 0x2
0x67b: V578 = EXP 0x2 0xa0
0x67c: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67d: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x67e: V581 = 0x9d118770
0x684: V582 = 0x0
0x686: V583 = 0x40
0x688: V584 = M[0x40]
0x689: V585 = 0x20
0x68b: V586 = ADD 0x20 V584
0x68c: M[V586] = 0x0
0x68d: V587 = 0x40
0x68f: V588 = M[0x40]
0x690: V589 = 0xe0
0x692: V590 = 0x2
0x694: V591 = EXP 0x2 0xe0
0x695: V592 = 0xffffffff
0x69b: V593 = AND 0x9d118770 0xffffffff
0x69c: V594 = MUL 0x9d118770 0x100000000000000000000000000000000000000000000000000000000
0x69e: M[V588] = 0x9d11877000000000000000000000000000000000000000000000000000000000
0x69f: V595 = 0x4
0x6a2: V596 = ADD V588 0x4
0x6a6: M[V596] = V568
0x6a7: V597 = 0x24
0x6a9: V598 = ADD 0x24 V588
0x6aa: V599 = 0x20
0x6ac: V600 = 0x40
0x6ae: V601 = M[0x40]
0x6b1: V602 = SUB V598 V601
0x6b3: V603 = 0x0
0x6b7: V604 = EXTCODESIZE V580
0x6b8: V605 = ISZERO V604
0x6b9: V606 = ISZERO V605
0x6ba: V607 = 0x6c2
0x6bd: JUMPI 0x6c2 V606
---
Entry stack: [V12, 0x10e, V568]
Stack pops: 1
Stack additions: [S0, V580, 0x9d118770, V598, 0x20, V601, V602, V601, 0x0, V580]
Exit stack: [V12, 0x10e, V568, V580, 0x9d118770, V598, 0x20, V601, V602, V601, 0x0, V580]

================================

Block 0x6be
[0x6be:0x6c1]
---
Predecessors: [0x672]
Successors: []
---
0x6be PUSH1 0x0
0x6c0 DUP1
0x6c1 REVERT
---
0x6be: V608 = 0x0
0x6c1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, V568, V580, 0x9d118770, V598, 0x20, V601, V602, V601, 0x0, V580]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V568, V580, 0x9d118770, V598, 0x20, V601, V602, V601, 0x0, V580]

================================

Block 0x6c2
[0x6c2:0x6ce]
---
Predecessors: [0x672]
Successors: [0x6cf, 0x6d3]
---
0x6c2 JUMPDEST
0x6c3 PUSH2 0x2c6
0x6c6 GAS
0x6c7 SUB
0x6c8 CALL
0x6c9 ISZERO
0x6ca ISZERO
0x6cb PUSH2 0x6d3
0x6ce JUMPI
---
0x6c2: JUMPDEST 
0x6c3: V609 = 0x2c6
0x6c6: V610 = GAS
0x6c7: V611 = SUB V610 0x2c6
0x6c8: V612 = CALL V611 V580 0x0 V601 V602 V601 0x20
0x6c9: V613 = ISZERO V612
0x6ca: V614 = ISZERO V613
0x6cb: V615 = 0x6d3
0x6ce: JUMPI 0x6d3 V614
---
Entry stack: [V12, 0x10e, V568, V580, 0x9d118770, V598, 0x20, V601, V602, V601, 0x0, V580]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10e, V568, V580, 0x9d118770, V598]

================================

Block 0x6cf
[0x6cf:0x6d2]
---
Predecessors: [0x6c2]
Successors: []
---
0x6cf PUSH1 0x0
0x6d1 DUP1
0x6d2 REVERT
---
0x6cf: V616 = 0x0
0x6d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, V568, V580, 0x9d118770, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V568, V580, 0x9d118770, V598]

================================

Block 0x6d3
[0x6d3:0x6dd]
---
Predecessors: [0x6c2]
Successors: [0x6de]
---
0x6d3 JUMPDEST
0x6d4 POP
0x6d5 POP
0x6d6 POP
0x6d7 PUSH1 0x40
0x6d9 MLOAD
0x6da DUP1
0x6db MLOAD
0x6dc POP
0x6dd POP
---
0x6d3: JUMPDEST 
0x6d7: V617 = 0x40
0x6d9: V618 = M[0x40]
0x6db: V619 = M[V618]
---
Entry stack: [V12, 0x10e, V568, V580, 0x9d118770, V598]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10e, V568]

================================

Block 0x6de
[0x6de:0x712]
---
Predecessors: [0x65d, 0x6d3]
Successors: [0x713, 0x714]
---
0x6de JUMPDEST
0x6df PUSH1 0x4
0x6e1 SLOAD
0x6e2 PUSH1 0x1
0x6e4 PUSH1 0xa0
0x6e6 PUSH1 0x2
0x6e8 EXP
0x6e9 SUB
0x6ea SWAP1
0x6eb DUP2
0x6ec AND
0x6ed SWAP1
0x6ee ADDRESS
0x6ef AND
0x6f0 BALANCE
0x6f1 DUP1
0x6f2 ISZERO
0x6f3 PUSH2 0x8fc
0x6f6 MUL
0x6f7 SWAP1
0x6f8 PUSH1 0x40
0x6fa MLOAD
0x6fb PUSH1 0x0
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 DUP1
0x701 DUP4
0x702 SUB
0x703 DUP2
0x704 DUP6
0x705 DUP9
0x706 DUP9
0x707 CALL
0x708 SWAP4
0x709 POP
0x70a POP
0x70b POP
0x70c POP
0x70d ISZERO
0x70e ISZERO
0x70f PUSH2 0x714
0x712 JUMPI
---
0x6de: JUMPDEST 
0x6df: V620 = 0x4
0x6e1: V621 = S[0x4]
0x6e2: V622 = 0x1
0x6e4: V623 = 0xa0
0x6e6: V624 = 0x2
0x6e8: V625 = EXP 0x2 0xa0
0x6e9: V626 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ec: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V621
0x6ee: V628 = ADDRESS
0x6ef: V629 = AND V628 0xffffffffffffffffffffffffffffffffffffffff
0x6f0: V630 = BALANCE V629
0x6f2: V631 = ISZERO V630
0x6f3: V632 = 0x8fc
0x6f6: V633 = MUL 0x8fc V631
0x6f8: V634 = 0x40
0x6fa: V635 = M[0x40]
0x6fb: V636 = 0x0
0x6fd: V637 = 0x40
0x6ff: V638 = M[0x40]
0x702: V639 = SUB V635 V638
0x707: V640 = CALL V633 V627 V630 V638 V639 V638 0x0
0x70d: V641 = ISZERO V640
0x70e: V642 = ISZERO V641
0x70f: V643 = 0x714
0x712: JUMPI 0x714 V642
---
Entry stack: [V12, 0x10e, V568]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V568]

================================

Block 0x713
[0x713:0x713]
---
Predecessors: [0x6de]
Successors: []
---
0x713 INVALID
---
0x713: INVALID 
---
Entry stack: [V12, 0x10e, V568]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V568]

================================

Block 0x714
[0x714:0x714]
---
Predecessors: [0x6de, 0x9f4]
Successors: [0x715]
---
0x714 JUMPDEST
---
0x714: JUMPDEST 
---
Entry stack: [V12, 0x10e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, S0]

================================

Block 0x715
[0x715:0x715]
---
Predecessors: [0x714]
Successors: [0x716]
---
0x715 JUMPDEST
---
0x715: JUMPDEST 
---
Entry stack: [V12, 0x10e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, S0]

================================

Block 0x716
[0x716:0x718]
---
Predecessors: [0x715]
Successors: [0x10e]
---
0x716 JUMPDEST
0x717 POP
0x718 JUMP
---
0x716: JUMPDEST 
0x718: JUMP 0x10e
---
Entry stack: [V12, 0x10e, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x719
[0x719:0x726]
---
Predecessors: [0x1d6]
Successors: [0x123]
---
0x719 JUMPDEST
0x71a PUSH10 0x10f0cf064dd59200000
0x725 DUP2
0x726 JUMP
---
0x719: JUMPDEST 
0x71a: V644 = 0x10f0cf064dd59200000
0x726: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, 0x10f0cf064dd59200000]
Exit stack: [V12, 0x123, 0x10f0cf064dd59200000]

================================

Block 0x727
[0x727:0x735]
---
Predecessors: [0x1fb]
Successors: [0x203]
---
0x727 JUMPDEST
0x728 PUSH1 0x3
0x72a SLOAD
0x72b PUSH1 0x1
0x72d PUSH1 0xa0
0x72f PUSH1 0x2
0x731 EXP
0x732 SUB
0x733 AND
0x734 DUP2
0x735 JUMP
---
0x727: JUMPDEST 
0x728: V645 = 0x3
0x72a: V646 = S[0x3]
0x72b: V647 = 0x1
0x72d: V648 = 0xa0
0x72f: V649 = 0x2
0x731: V650 = EXP 0x2 0xa0
0x732: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x733: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x735: JUMP 0x203
---
Entry stack: [V12, 0x203]
Stack pops: 1
Stack additions: [S0, V652]
Exit stack: [V12, 0x203, V652]

================================

Block 0x736
[0x736:0x744]
---
Predecessors: [0x22a]
Successors: [0x203]
---
0x736 JUMPDEST
0x737 PUSH1 0x4
0x739 SLOAD
0x73a PUSH1 0x1
0x73c PUSH1 0xa0
0x73e PUSH1 0x2
0x740 EXP
0x741 SUB
0x742 AND
0x743 DUP2
0x744 JUMP
---
0x736: JUMPDEST 
0x737: V653 = 0x4
0x739: V654 = S[0x4]
0x73a: V655 = 0x1
0x73c: V656 = 0xa0
0x73e: V657 = 0x2
0x740: V658 = EXP 0x2 0xa0
0x741: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x742: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0x744: JUMP 0x203
---
Entry stack: [V12, 0x203]
Stack pops: 1
Stack additions: [S0, V660]
Exit stack: [V12, 0x203, V660]

================================

Block 0x745
[0x745:0x74f]
---
Predecessors: [0x259]
Successors: [0x123]
---
0x745 JUMPDEST
0x746 PUSH7 0x2386f26fc10000
0x74e DUP2
0x74f JUMP
---
0x745: JUMPDEST 
0x746: V661 = 0x2386f26fc10000
0x74f: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, 0x2386f26fc10000]
Exit stack: [V12, 0x123, 0x2386f26fc10000]

================================

Block 0x750
[0x750:0x75e]
---
Predecessors: [0x27e]
Successors: [0x203]
---
0x750 JUMPDEST
0x751 PUSH1 0x0
0x753 SLOAD
0x754 PUSH1 0x1
0x756 PUSH1 0xa0
0x758 PUSH1 0x2
0x75a EXP
0x75b SUB
0x75c AND
0x75d DUP2
0x75e JUMP
---
0x750: JUMPDEST 
0x751: V662 = 0x0
0x753: V663 = S[0x0]
0x754: V664 = 0x1
0x756: V665 = 0xa0
0x758: V666 = 0x2
0x75a: V667 = EXP 0x2 0xa0
0x75b: V668 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75c: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V663
0x75e: JUMP 0x203
---
Entry stack: [V12, 0x203]
Stack pops: 1
Stack additions: [S0, V669]
Exit stack: [V12, 0x203, V669]

================================

Block 0x75f
[0x75f:0x76d]
---
Predecessors: [0x2ad]
Successors: [0x76e, 0x774]
---
0x75f JUMPDEST
0x760 PUSH1 0x0
0x762 DUP1
0x763 PUSH1 0x8
0x765 SLOAD
0x766 TIMESTAMP
0x767 LT
0x768 DUP1
0x769 ISZERO
0x76a PUSH2 0x774
0x76d JUMPI
---
0x75f: JUMPDEST 
0x760: V670 = 0x0
0x763: V671 = 0x8
0x765: V672 = S[0x8]
0x766: V673 = TIMESTAMP
0x767: V674 = LT V673 V672
0x769: V675 = ISZERO V674
0x76a: V676 = 0x774
0x76d: JUMPI 0x774 V675
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: [0x0, 0x0, V674]
Exit stack: [V12, 0x10e, 0x0, 0x0, V674]

================================

Block 0x76e
[0x76e:0x773]
---
Predecessors: [0x75f]
Successors: [0x774]
---
0x76e POP
0x76f PUSH1 0x7
0x771 SLOAD
0x772 ISZERO
0x773 ISZERO
---
0x76f: V677 = 0x7
0x771: V678 = S[0x7]
0x772: V679 = ISZERO V678
0x773: V680 = ISZERO V679
---
Entry stack: [V12, 0x10e, 0x0, 0x0, V674]
Stack pops: 1
Stack additions: [V680]
Exit stack: [V12, 0x10e, 0x0, 0x0, V680]

================================

Block 0x774
[0x774:0x77a]
---
Predecessors: [0x75f, 0x76e]
Successors: [0x77b, 0x77f]
---
0x774 JUMPDEST
0x775 ISZERO
0x776 ISZERO
0x777 PUSH2 0x77f
0x77a JUMPI
---
0x774: JUMPDEST 
0x775: V681 = ISZERO S0
0x776: V682 = ISZERO V681
0x777: V683 = 0x77f
0x77a: JUMPI 0x77f V682
---
Entry stack: [V12, 0x10e, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10e, 0x0, 0x0]

================================

Block 0x77b
[0x77b:0x77e]
---
Predecessors: [0x774]
Successors: []
---
0x77b PUSH1 0x0
0x77d DUP1
0x77e REVERT
---
0x77b: V684 = 0x0
0x77e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x0, 0x0]

================================

Block 0x77f
[0x77f:0x7d3]
---
Predecessors: [0x774]
Successors: [0x7d4, 0x7d8]
---
0x77f JUMPDEST
0x780 PUSH1 0x3
0x782 SLOAD
0x783 PUSH1 0x1
0x785 PUSH1 0xa0
0x787 PUSH1 0x2
0x789 EXP
0x78a SUB
0x78b AND
0x78c PUSH4 0x70a08231
0x791 CALLER
0x792 PUSH1 0x0
0x794 PUSH1 0x40
0x796 MLOAD
0x797 PUSH1 0x20
0x799 ADD
0x79a MSTORE
0x79b PUSH1 0x40
0x79d MLOAD
0x79e PUSH1 0xe0
0x7a0 PUSH1 0x2
0x7a2 EXP
0x7a3 PUSH4 0xffffffff
0x7a8 DUP5
0x7a9 AND
0x7aa MUL
0x7ab DUP2
0x7ac MSTORE
0x7ad PUSH1 0x1
0x7af PUSH1 0xa0
0x7b1 PUSH1 0x2
0x7b3 EXP
0x7b4 SUB
0x7b5 SWAP1
0x7b6 SWAP2
0x7b7 AND
0x7b8 PUSH1 0x4
0x7ba DUP3
0x7bb ADD
0x7bc MSTORE
0x7bd PUSH1 0x24
0x7bf ADD
0x7c0 PUSH1 0x20
0x7c2 PUSH1 0x40
0x7c4 MLOAD
0x7c5 DUP1
0x7c6 DUP4
0x7c7 SUB
0x7c8 DUP2
0x7c9 PUSH1 0x0
0x7cb DUP8
0x7cc DUP1
0x7cd EXTCODESIZE
0x7ce ISZERO
0x7cf ISZERO
0x7d0 PUSH2 0x7d8
0x7d3 JUMPI
---
0x77f: JUMPDEST 
0x780: V685 = 0x3
0x782: V686 = S[0x3]
0x783: V687 = 0x1
0x785: V688 = 0xa0
0x787: V689 = 0x2
0x789: V690 = EXP 0x2 0xa0
0x78a: V691 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78b: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0x78c: V693 = 0x70a08231
0x791: V694 = CALLER
0x792: V695 = 0x0
0x794: V696 = 0x40
0x796: V697 = M[0x40]
0x797: V698 = 0x20
0x799: V699 = ADD 0x20 V697
0x79a: M[V699] = 0x0
0x79b: V700 = 0x40
0x79d: V701 = M[0x40]
0x79e: V702 = 0xe0
0x7a0: V703 = 0x2
0x7a2: V704 = EXP 0x2 0xe0
0x7a3: V705 = 0xffffffff
0x7a9: V706 = AND 0x70a08231 0xffffffff
0x7aa: V707 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x7ac: M[V701] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7ad: V708 = 0x1
0x7af: V709 = 0xa0
0x7b1: V710 = 0x2
0x7b3: V711 = EXP 0x2 0xa0
0x7b4: V712 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b7: V713 = AND V694 0xffffffffffffffffffffffffffffffffffffffff
0x7b8: V714 = 0x4
0x7bb: V715 = ADD V701 0x4
0x7bc: M[V715] = V713
0x7bd: V716 = 0x24
0x7bf: V717 = ADD 0x24 V701
0x7c0: V718 = 0x20
0x7c2: V719 = 0x40
0x7c4: V720 = M[0x40]
0x7c7: V721 = SUB V717 V720
0x7c9: V722 = 0x0
0x7cd: V723 = EXTCODESIZE V692
0x7ce: V724 = ISZERO V723
0x7cf: V725 = ISZERO V724
0x7d0: V726 = 0x7d8
0x7d3: JUMPI 0x7d8 V725
---
Entry stack: [V12, 0x10e, 0x0, 0x0]
Stack pops: 0
Stack additions: [V692, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V692]
Exit stack: [V12, 0x10e, 0x0, 0x0, V692, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V692]

================================

Block 0x7d4
[0x7d4:0x7d7]
---
Predecessors: [0x77f]
Successors: []
---
0x7d4 PUSH1 0x0
0x7d6 DUP1
0x7d7 REVERT
---
0x7d4: V727 = 0x0
0x7d7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, 0x0, 0x0, V692, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V692]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x0, 0x0, V692, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V692]

================================

Block 0x7d8
[0x7d8:0x7e4]
---
Predecessors: [0x77f]
Successors: [0x7e5, 0x7e9]
---
0x7d8 JUMPDEST
0x7d9 PUSH2 0x2c6
0x7dc GAS
0x7dd SUB
0x7de CALL
0x7df ISZERO
0x7e0 ISZERO
0x7e1 PUSH2 0x7e9
0x7e4 JUMPI
---
0x7d8: JUMPDEST 
0x7d9: V728 = 0x2c6
0x7dc: V729 = GAS
0x7dd: V730 = SUB V729 0x2c6
0x7de: V731 = CALL V730 V692 0x0 V720 V721 V720 0x20
0x7df: V732 = ISZERO V731
0x7e0: V733 = ISZERO V732
0x7e1: V734 = 0x7e9
0x7e4: JUMPI 0x7e9 V733
---
Entry stack: [V12, 0x10e, 0x0, 0x0, V692, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V692]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10e, 0x0, 0x0, V692, 0x70a08231, V717]

================================

Block 0x7e5
[0x7e5:0x7e8]
---
Predecessors: [0x7d8]
Successors: []
---
0x7e5 PUSH1 0x0
0x7e7 DUP1
0x7e8 REVERT
---
0x7e5: V735 = 0x0
0x7e8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, 0x0, 0x0, V692, 0x70a08231, V717]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x0, 0x0, V692, 0x70a08231, V717]

================================

Block 0x7e9
[0x7e9:0x7fb]
---
Predecessors: [0x7d8]
Successors: [0x7fc, 0x800]
---
0x7e9 JUMPDEST
0x7ea POP
0x7eb POP
0x7ec POP
0x7ed PUSH1 0x40
0x7ef MLOAD
0x7f0 DUP1
0x7f1 MLOAD
0x7f2 SWAP3
0x7f3 POP
0x7f4 POP
0x7f5 DUP2
0x7f6 ISZERO
0x7f7 ISZERO
0x7f8 PUSH2 0x800
0x7fb JUMPI
---
0x7e9: JUMPDEST 
0x7ed: V736 = 0x40
0x7ef: V737 = M[0x40]
0x7f1: V738 = M[V737]
0x7f6: V739 = ISZERO V738
0x7f7: V740 = ISZERO V739
0x7f8: V741 = 0x800
0x7fb: JUMPI 0x800 V740
---
Entry stack: [V12, 0x10e, 0x0, 0x0, V692, 0x70a08231, V717]
Stack pops: 5
Stack additions: [V738, S3]
Exit stack: [V12, 0x10e, V738, 0x0]

================================

Block 0x7fc
[0x7fc:0x7ff]
---
Predecessors: [0x7e9]
Successors: []
---
0x7fc PUSH1 0x0
0x7fe DUP1
0x7ff REVERT
---
0x7fc: V742 = 0x0
0x7ff: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, V738, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V738, 0x0]

================================

Block 0x800
[0x800:0x861]
---
Predecessors: [0x7e9]
Successors: [0x862, 0x866]
---
0x800 JUMPDEST
0x801 POP
0x802 PUSH1 0x3
0x804 SLOAD
0x805 PUSH8 0xde0b6b3a7640000
0x80e DUP3
0x80f MUL
0x810 SWAP1
0x811 PUSH1 0x1
0x813 PUSH1 0xa0
0x815 PUSH1 0x2
0x817 EXP
0x818 SUB
0x819 AND
0x81a PUSH4 0x5398302
0x81f CALLER
0x820 PUSH1 0x0
0x822 PUSH1 0x40
0x824 MLOAD
0x825 PUSH1 0x20
0x827 ADD
0x828 MSTORE
0x829 PUSH1 0x40
0x82b MLOAD
0x82c PUSH1 0xe0
0x82e PUSH1 0x2
0x830 EXP
0x831 PUSH4 0xffffffff
0x836 DUP5
0x837 AND
0x838 MUL
0x839 DUP2
0x83a MSTORE
0x83b PUSH1 0x1
0x83d PUSH1 0xa0
0x83f PUSH1 0x2
0x841 EXP
0x842 SUB
0x843 SWAP1
0x844 SWAP2
0x845 AND
0x846 PUSH1 0x4
0x848 DUP3
0x849 ADD
0x84a MSTORE
0x84b PUSH1 0x24
0x84d ADD
0x84e PUSH1 0x20
0x850 PUSH1 0x40
0x852 MLOAD
0x853 DUP1
0x854 DUP4
0x855 SUB
0x856 DUP2
0x857 PUSH1 0x0
0x859 DUP8
0x85a DUP1
0x85b EXTCODESIZE
0x85c ISZERO
0x85d ISZERO
0x85e PUSH2 0x866
0x861 JUMPI
---
0x800: JUMPDEST 
0x802: V743 = 0x3
0x804: V744 = S[0x3]
0x805: V745 = 0xde0b6b3a7640000
0x80f: V746 = MUL V738 0xde0b6b3a7640000
0x811: V747 = 0x1
0x813: V748 = 0xa0
0x815: V749 = 0x2
0x817: V750 = EXP 0x2 0xa0
0x818: V751 = SUB 0x10000000000000000000000000000000000000000 0x1
0x819: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V744
0x81a: V753 = 0x5398302
0x81f: V754 = CALLER
0x820: V755 = 0x0
0x822: V756 = 0x40
0x824: V757 = M[0x40]
0x825: V758 = 0x20
0x827: V759 = ADD 0x20 V757
0x828: M[V759] = 0x0
0x829: V760 = 0x40
0x82b: V761 = M[0x40]
0x82c: V762 = 0xe0
0x82e: V763 = 0x2
0x830: V764 = EXP 0x2 0xe0
0x831: V765 = 0xffffffff
0x837: V766 = AND 0x5398302 0xffffffff
0x838: V767 = MUL 0x5398302 0x100000000000000000000000000000000000000000000000000000000
0x83a: M[V761] = 0x539830200000000000000000000000000000000000000000000000000000000
0x83b: V768 = 0x1
0x83d: V769 = 0xa0
0x83f: V770 = 0x2
0x841: V771 = EXP 0x2 0xa0
0x842: V772 = SUB 0x10000000000000000000000000000000000000000 0x1
0x845: V773 = AND V754 0xffffffffffffffffffffffffffffffffffffffff
0x846: V774 = 0x4
0x849: V775 = ADD V761 0x4
0x84a: M[V775] = V773
0x84b: V776 = 0x24
0x84d: V777 = ADD 0x24 V761
0x84e: V778 = 0x20
0x850: V779 = 0x40
0x852: V780 = M[0x40]
0x855: V781 = SUB V777 V780
0x857: V782 = 0x0
0x85b: V783 = EXTCODESIZE V752
0x85c: V784 = ISZERO V783
0x85d: V785 = ISZERO V784
0x85e: V786 = 0x866
0x861: JUMPI 0x866 V785
---
Entry stack: [V12, 0x10e, V738, 0x0]
Stack pops: 2
Stack additions: [S1, V746, V752, 0x5398302, V777, 0x20, V780, V781, V780, 0x0, V752]
Exit stack: [V12, 0x10e, V738, V746, V752, 0x5398302, V777, 0x20, V780, V781, V780, 0x0, V752]

================================

Block 0x862
[0x862:0x865]
---
Predecessors: [0x800]
Successors: []
---
0x862 PUSH1 0x0
0x864 DUP1
0x865 REVERT
---
0x862: V787 = 0x0
0x865: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, V738, V746, V752, 0x5398302, V777, 0x20, V780, V781, V780, 0x0, V752]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V738, V746, V752, 0x5398302, V777, 0x20, V780, V781, V780, 0x0, V752]

================================

Block 0x866
[0x866:0x872]
---
Predecessors: [0x800]
Successors: [0x873, 0x877]
---
0x866 JUMPDEST
0x867 PUSH2 0x2c6
0x86a GAS
0x86b SUB
0x86c CALL
0x86d ISZERO
0x86e ISZERO
0x86f PUSH2 0x877
0x872 JUMPI
---
0x866: JUMPDEST 
0x867: V788 = 0x2c6
0x86a: V789 = GAS
0x86b: V790 = SUB V789 0x2c6
0x86c: V791 = CALL V790 V752 0x0 V780 V781 V780 0x20
0x86d: V792 = ISZERO V791
0x86e: V793 = ISZERO V792
0x86f: V794 = 0x877
0x872: JUMPI 0x877 V793
---
Entry stack: [V12, 0x10e, V738, V746, V752, 0x5398302, V777, 0x20, V780, V781, V780, 0x0, V752]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10e, V738, V746, V752, 0x5398302, V777]

================================

Block 0x873
[0x873:0x876]
---
Predecessors: [0x866]
Successors: []
---
0x873 PUSH1 0x0
0x875 DUP1
0x876 REVERT
---
0x873: V795 = 0x0
0x876: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, V738, V746, V752, 0x5398302, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V738, V746, V752, 0x5398302, V777]

================================

Block 0x877
[0x877:0x8d2]
---
Predecessors: [0x866]
Successors: [0x8d3, 0x8d7]
---
0x877 JUMPDEST
0x878 POP
0x879 POP
0x87a POP
0x87b PUSH1 0x40
0x87d MLOAD
0x87e DUP1
0x87f MLOAD
0x880 POP
0x881 POP
0x882 PUSH1 0x2
0x884 SLOAD
0x885 PUSH1 0x1
0x887 PUSH1 0xa0
0x889 PUSH1 0x2
0x88b EXP
0x88c SUB
0x88d AND
0x88e PUSH4 0xa9059cbb
0x893 CALLER
0x894 DUP4
0x895 PUSH1 0x40
0x897 MLOAD
0x898 PUSH1 0xe0
0x89a PUSH1 0x2
0x89c EXP
0x89d PUSH4 0xffffffff
0x8a2 DUP6
0x8a3 AND
0x8a4 MUL
0x8a5 DUP2
0x8a6 MSTORE
0x8a7 PUSH1 0x1
0x8a9 PUSH1 0xa0
0x8ab PUSH1 0x2
0x8ad EXP
0x8ae SUB
0x8af SWAP1
0x8b0 SWAP3
0x8b1 AND
0x8b2 PUSH1 0x4
0x8b4 DUP4
0x8b5 ADD
0x8b6 MSTORE
0x8b7 PUSH1 0x24
0x8b9 DUP3
0x8ba ADD
0x8bb MSTORE
0x8bc PUSH1 0x44
0x8be ADD
0x8bf PUSH1 0x0
0x8c1 PUSH1 0x40
0x8c3 MLOAD
0x8c4 DUP1
0x8c5 DUP4
0x8c6 SUB
0x8c7 DUP2
0x8c8 PUSH1 0x0
0x8ca DUP8
0x8cb DUP1
0x8cc EXTCODESIZE
0x8cd ISZERO
0x8ce ISZERO
0x8cf PUSH2 0x8d7
0x8d2 JUMPI
---
0x877: JUMPDEST 
0x87b: V796 = 0x40
0x87d: V797 = M[0x40]
0x87f: V798 = M[V797]
0x882: V799 = 0x2
0x884: V800 = S[0x2]
0x885: V801 = 0x1
0x887: V802 = 0xa0
0x889: V803 = 0x2
0x88b: V804 = EXP 0x2 0xa0
0x88c: V805 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88d: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0x88e: V807 = 0xa9059cbb
0x893: V808 = CALLER
0x895: V809 = 0x40
0x897: V810 = M[0x40]
0x898: V811 = 0xe0
0x89a: V812 = 0x2
0x89c: V813 = EXP 0x2 0xe0
0x89d: V814 = 0xffffffff
0x8a3: V815 = AND 0xa9059cbb 0xffffffff
0x8a4: V816 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x8a6: M[V810] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8a7: V817 = 0x1
0x8a9: V818 = 0xa0
0x8ab: V819 = 0x2
0x8ad: V820 = EXP 0x2 0xa0
0x8ae: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b1: V822 = AND V808 0xffffffffffffffffffffffffffffffffffffffff
0x8b2: V823 = 0x4
0x8b5: V824 = ADD V810 0x4
0x8b6: M[V824] = V822
0x8b7: V825 = 0x24
0x8ba: V826 = ADD V810 0x24
0x8bb: M[V826] = V746
0x8bc: V827 = 0x44
0x8be: V828 = ADD 0x44 V810
0x8bf: V829 = 0x0
0x8c1: V830 = 0x40
0x8c3: V831 = M[0x40]
0x8c6: V832 = SUB V828 V831
0x8c8: V833 = 0x0
0x8cc: V834 = EXTCODESIZE V806
0x8cd: V835 = ISZERO V834
0x8ce: V836 = ISZERO V835
0x8cf: V837 = 0x8d7
0x8d2: JUMPI 0x8d7 V836
---
Entry stack: [V12, 0x10e, V738, V746, V752, 0x5398302, V777]
Stack pops: 4
Stack additions: [S3, V806, 0xa9059cbb, V828, 0x0, V831, V832, V831, 0x0, V806]
Exit stack: [V12, 0x10e, V738, V746, V806, 0xa9059cbb, V828, 0x0, V831, V832, V831, 0x0, V806]

================================

Block 0x8d3
[0x8d3:0x8d6]
---
Predecessors: [0x877]
Successors: []
---
0x8d3 PUSH1 0x0
0x8d5 DUP1
0x8d6 REVERT
---
0x8d3: V838 = 0x0
0x8d6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, V738, V746, V806, 0xa9059cbb, V828, 0x0, V831, V832, V831, 0x0, V806]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V738, V746, V806, 0xa9059cbb, V828, 0x0, V831, V832, V831, 0x0, V806]

================================

Block 0x8d7
[0x8d7:0x8e3]
---
Predecessors: [0x877]
Successors: [0x8e4, 0x8e8]
---
0x8d7 JUMPDEST
0x8d8 PUSH2 0x2c6
0x8db GAS
0x8dc SUB
0x8dd CALL
0x8de ISZERO
0x8df ISZERO
0x8e0 PUSH2 0x8e8
0x8e3 JUMPI
---
0x8d7: JUMPDEST 
0x8d8: V839 = 0x2c6
0x8db: V840 = GAS
0x8dc: V841 = SUB V840 0x2c6
0x8dd: V842 = CALL V841 V806 0x0 V831 V832 V831 0x0
0x8de: V843 = ISZERO V842
0x8df: V844 = ISZERO V843
0x8e0: V845 = 0x8e8
0x8e3: JUMPI 0x8e8 V844
---
Entry stack: [V12, 0x10e, V738, V746, V806, 0xa9059cbb, V828, 0x0, V831, V832, V831, 0x0, V806]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10e, V738, V746, V806, 0xa9059cbb, V828]

================================

Block 0x8e4
[0x8e4:0x8e7]
---
Predecessors: [0x8d7]
Successors: []
---
0x8e4 PUSH1 0x0
0x8e6 DUP1
0x8e7 REVERT
---
0x8e4: V846 = 0x0
0x8e7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, V738, V746, V806, 0xa9059cbb, V828]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V738, V746, V806, 0xa9059cbb, V828]

================================

Block 0x8e8
[0x8e8:0x928]
---
Predecessors: [0x8d7]
Successors: [0x929]
---
0x8e8 JUMPDEST
0x8e9 POP
0x8ea POP
0x8eb POP
0x8ec CALLER
0x8ed PUSH1 0x1
0x8ef PUSH1 0xa0
0x8f1 PUSH1 0x2
0x8f3 EXP
0x8f4 SUB
0x8f5 AND
0x8f6 PUSH32 0x483f1b18c3ab18ad63c9a3ab7c8fb67b118d752a1c950075de711cb06c5e2ffb
0x917 DUP3
0x918 PUSH1 0x40
0x91a MLOAD
0x91b SWAP1
0x91c DUP2
0x91d MSTORE
0x91e PUSH1 0x20
0x920 ADD
0x921 PUSH1 0x40
0x923 MLOAD
0x924 DUP1
0x925 SWAP2
0x926 SUB
0x927 SWAP1
0x928 LOG2
---
0x8e8: JUMPDEST 
0x8ec: V847 = CALLER
0x8ed: V848 = 0x1
0x8ef: V849 = 0xa0
0x8f1: V850 = 0x2
0x8f3: V851 = EXP 0x2 0xa0
0x8f4: V852 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f5: V853 = AND 0xffffffffffffffffffffffffffffffffffffffff V847
0x8f6: V854 = 0x483f1b18c3ab18ad63c9a3ab7c8fb67b118d752a1c950075de711cb06c5e2ffb
0x918: V855 = 0x40
0x91a: V856 = M[0x40]
0x91d: M[V856] = V746
0x91e: V857 = 0x20
0x920: V858 = ADD 0x20 V856
0x921: V859 = 0x40
0x923: V860 = M[0x40]
0x926: V861 = SUB V858 V860
0x928: LOG V860 V861 0x483f1b18c3ab18ad63c9a3ab7c8fb67b118d752a1c950075de711cb06c5e2ffb V853
---
Entry stack: [V12, 0x10e, V738, V746, V806, 0xa9059cbb, V828]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x10e, V738, V746]

================================

Block 0x929
[0x929:0x929]
---
Predecessors: [0x8e8]
Successors: [0x92a]
---
0x929 JUMPDEST
---
0x929: JUMPDEST 
---
Entry stack: [V12, 0x10e, V738, V746]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V738, V746]

================================

Block 0x92a
[0x92a:0x92d]
---
Predecessors: [0x929]
Successors: [0x10e]
---
0x92a JUMPDEST
0x92b POP
0x92c POP
0x92d JUMP
---
0x92a: JUMPDEST 
0x92d: JUMP 0x10e
---
Entry stack: [V12, 0x10e, V738, V746]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x92e
[0x92e:0x944]
---
Predecessors: [0x2c2]
Successors: [0x945, 0x949]
---
0x92e JUMPDEST
0x92f PUSH1 0x0
0x931 SLOAD
0x932 CALLER
0x933 PUSH1 0x1
0x935 PUSH1 0xa0
0x937 PUSH1 0x2
0x939 EXP
0x93a SUB
0x93b SWAP1
0x93c DUP2
0x93d AND
0x93e SWAP2
0x93f AND
0x940 EQ
0x941 PUSH2 0x949
0x944 JUMPI
---
0x92e: JUMPDEST 
0x92f: V862 = 0x0
0x931: V863 = S[0x0]
0x932: V864 = CALLER
0x933: V865 = 0x1
0x935: V866 = 0xa0
0x937: V867 = 0x2
0x939: V868 = EXP 0x2 0xa0
0x93a: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93d: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0x93f: V871 = AND V863 0xffffffffffffffffffffffffffffffffffffffff
0x940: V872 = EQ V871 V870
0x941: V873 = 0x949
0x944: JUMPI 0x949 V872
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x945
[0x945:0x948]
---
Predecessors: [0x92e]
Successors: []
---
0x945 PUSH1 0x0
0x947 DUP1
0x948 REVERT
---
0x945: V874 = 0x0
0x948: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x949
[0x949:0x97d]
---
Predecessors: [0x92e]
Successors: [0x10a, 0x97e]
---
0x949 JUMPDEST
0x94a PUSH1 0x4
0x94c SLOAD
0x94d PUSH1 0x1
0x94f PUSH1 0xa0
0x951 PUSH1 0x2
0x953 EXP
0x954 SUB
0x955 SWAP1
0x956 DUP2
0x957 AND
0x958 SWAP1
0x959 ADDRESS
0x95a AND
0x95b BALANCE
0x95c DUP1
0x95d ISZERO
0x95e PUSH2 0x8fc
0x961 MUL
0x962 SWAP1
0x963 PUSH1 0x40
0x965 MLOAD
0x966 PUSH1 0x0
0x968 PUSH1 0x40
0x96a MLOAD
0x96b DUP1
0x96c DUP4
0x96d SUB
0x96e DUP2
0x96f DUP6
0x970 DUP9
0x971 DUP9
0x972 CALL
0x973 SWAP4
0x974 POP
0x975 POP
0x976 POP
0x977 POP
0x978 ISZERO
0x979 ISZERO
0x97a PUSH2 0x10a
0x97d JUMPI
---
0x949: JUMPDEST 
0x94a: V875 = 0x4
0x94c: V876 = S[0x4]
0x94d: V877 = 0x1
0x94f: V878 = 0xa0
0x951: V879 = 0x2
0x953: V880 = EXP 0x2 0xa0
0x954: V881 = SUB 0x10000000000000000000000000000000000000000 0x1
0x957: V882 = AND 0xffffffffffffffffffffffffffffffffffffffff V876
0x959: V883 = ADDRESS
0x95a: V884 = AND V883 0xffffffffffffffffffffffffffffffffffffffff
0x95b: V885 = BALANCE V884
0x95d: V886 = ISZERO V885
0x95e: V887 = 0x8fc
0x961: V888 = MUL 0x8fc V886
0x963: V889 = 0x40
0x965: V890 = M[0x40]
0x966: V891 = 0x0
0x968: V892 = 0x40
0x96a: V893 = M[0x40]
0x96d: V894 = SUB V890 V893
0x972: V895 = CALL V888 V882 V885 V893 V894 V893 0x0
0x978: V896 = ISZERO V895
0x979: V897 = ISZERO V896
0x97a: V898 = 0x10a
0x97d: JUMPI 0x10a V897
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x97e
[0x97e:0x97e]
---
Predecessors: [0x949]
Successors: []
---
0x97e INVALID
---
0x97e: INVALID 
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x97f
[0x97f:0x97f]
---
Predecessors: []
Successors: [0x980]
---
0x97f JUMPDEST
---
0x97f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x980
[0x980:0x980]
---
Predecessors: [0x97f]
Successors: [0x981]
---
0x980 JUMPDEST
---
0x980: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x981
[0x981:0x982]
---
Predecessors: [0x980]
Successors: []
Has unresolved jump.
---
0x981 JUMPDEST
0x982 JUMP
---
0x981: JUMPDEST 
0x982: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x983
[0x983:0x991]
---
Predecessors: [0x2d7]
Successors: [0x123]
---
0x983 JUMPDEST
0x984 PUSH11 0x3063db5ac1d44d4a800000
0x990 DUP2
0x991 JUMP
---
0x983: JUMPDEST 
0x984: V899 = 0x3063db5ac1d44d4a800000
0x991: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, 0x3063db5ac1d44d4a800000]
Exit stack: [V12, 0x123, 0x3063db5ac1d44d4a800000]

================================

Block 0x992
[0x992:0x998]
---
Predecessors: [0x2fc]
Successors: [0x123]
---
0x992 JUMPDEST
0x993 PUSH3 0x278d00
0x997 DUP2
0x998 JUMP
---
0x992: JUMPDEST 
0x993: V900 = 0x278d00
0x998: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, 0x278d00]
Exit stack: [V12, 0x123, 0x278d00]

================================

Block 0x999
[0x999:0x9af]
---
Predecessors: [0x321]
Successors: [0x9b0, 0x9b4]
---
0x999 JUMPDEST
0x99a PUSH1 0x0
0x99c SLOAD
0x99d CALLER
0x99e PUSH1 0x1
0x9a0 PUSH1 0xa0
0x9a2 PUSH1 0x2
0x9a4 EXP
0x9a5 SUB
0x9a6 SWAP1
0x9a7 DUP2
0x9a8 AND
0x9a9 SWAP2
0x9aa AND
0x9ab EQ
0x9ac PUSH2 0x9b4
0x9af JUMPI
---
0x999: JUMPDEST 
0x99a: V901 = 0x0
0x99c: V902 = S[0x0]
0x99d: V903 = CALLER
0x99e: V904 = 0x1
0x9a0: V905 = 0xa0
0x9a2: V906 = 0x2
0x9a4: V907 = EXP 0x2 0xa0
0x9a5: V908 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a8: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V903
0x9aa: V910 = AND V902 0xffffffffffffffffffffffffffffffffffffffff
0x9ab: V911 = EQ V910 V909
0x9ac: V912 = 0x9b4
0x9af: JUMPI 0x9b4 V911
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x9b0
[0x9b0:0x9b3]
---
Predecessors: [0x999]
Successors: []
---
0x9b0 PUSH1 0x0
0x9b2 DUP1
0x9b3 REVERT
---
0x9b0: V913 = 0x0
0x9b3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x9b4
[0x9b4:0x9bc]
---
Predecessors: [0x999]
Successors: [0x9bd, 0x9c1]
---
0x9b4 JUMPDEST
0x9b5 PUSH1 0x7
0x9b7 SLOAD
0x9b8 ISZERO
0x9b9 PUSH2 0x9c1
0x9bc JUMPI
---
0x9b4: JUMPDEST 
0x9b5: V914 = 0x7
0x9b7: V915 = S[0x7]
0x9b8: V916 = ISZERO V915
0x9b9: V917 = 0x9c1
0x9bc: JUMPI 0x9c1 V916
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x9bd
[0x9bd:0x9c0]
---
Predecessors: [0x9b4]
Successors: []
---
0x9bd PUSH1 0x0
0x9bf DUP1
0x9c0 REVERT
---
0x9bd: V918 = 0x0
0x9c0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x9c1
[0x9c1:0x9cf]
---
Predecessors: [0x9b4]
Successors: [0x9d0]
---
0x9c1 JUMPDEST
0x9c2 TIMESTAMP
0x9c3 PUSH1 0x7
0x9c5 DUP2
0x9c6 SWAP1
0x9c7 SSTORE
0x9c8 PUSH3 0x278d00
0x9cc ADD
0x9cd PUSH1 0x8
0x9cf SSTORE
---
0x9c1: JUMPDEST 
0x9c2: V919 = TIMESTAMP
0x9c3: V920 = 0x7
0x9c7: S[0x7] = V919
0x9c8: V921 = 0x278d00
0x9cc: V922 = ADD 0x278d00 V919
0x9cd: V923 = 0x8
0x9cf: S[0x8] = V922
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x9d0
[0x9d0:0x9d0]
---
Predecessors: [0x9c1]
Successors: [0x9d1]
---
0x9d0 JUMPDEST
---
0x9d0: JUMPDEST 
---
Entry stack: [V12, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x9d1
[0x9d1:0x9d2]
---
Predecessors: [0x9d0]
Successors: [0x10e]
---
0x9d1 JUMPDEST
0x9d2 JUMP
---
0x9d1: JUMPDEST 
0x9d2: JUMP 0x10e
---
Entry stack: [V12, 0x10e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d3
[0x9d3:0x9d8]
---
Predecessors: [0x336]
Successors: [0x123]
---
0x9d3 JUMPDEST
0x9d4 PUSH1 0x7
0x9d6 SLOAD
0x9d7 DUP2
0x9d8 JUMP
---
0x9d3: JUMPDEST 
0x9d4: V924 = 0x7
0x9d6: V925 = S[0x7]
0x9d8: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, V925]
Exit stack: [V12, 0x123, V925]

================================

Block 0x9d9
[0x9d9:0x9ef]
---
Predecessors: [0x35b]
Successors: [0x9f0, 0x9f4]
---
0x9d9 JUMPDEST
0x9da PUSH1 0x0
0x9dc SLOAD
0x9dd CALLER
0x9de PUSH1 0x1
0x9e0 PUSH1 0xa0
0x9e2 PUSH1 0x2
0x9e4 EXP
0x9e5 SUB
0x9e6 SWAP1
0x9e7 DUP2
0x9e8 AND
0x9e9 SWAP2
0x9ea AND
0x9eb EQ
0x9ec PUSH2 0x9f4
0x9ef JUMPI
---
0x9d9: JUMPDEST 
0x9da: V926 = 0x0
0x9dc: V927 = S[0x0]
0x9dd: V928 = CALLER
0x9de: V929 = 0x1
0x9e0: V930 = 0xa0
0x9e2: V931 = 0x2
0x9e4: V932 = EXP 0x2 0xa0
0x9e5: V933 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e8: V934 = AND 0xffffffffffffffffffffffffffffffffffffffff V928
0x9ea: V935 = AND V927 0xffffffffffffffffffffffffffffffffffffffff
0x9eb: V936 = EQ V935 V934
0x9ec: V937 = 0x9f4
0x9ef: JUMPI 0x9f4 V936
---
Entry stack: [V12, 0x10e, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V304]

================================

Block 0x9f0
[0x9f0:0x9f3]
---
Predecessors: [0x9d9]
Successors: []
---
0x9f0 PUSH1 0x0
0x9f2 DUP1
0x9f3 REVERT
---
0x9f0: V938 = 0x0
0x9f3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10e, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V304]

================================

Block 0x9f4
[0x9f4:0xa03]
---
Predecessors: [0x9d9]
Successors: [0x714, 0xa04]
---
0x9f4 JUMPDEST
0x9f5 PUSH1 0x1
0x9f7 PUSH1 0xa0
0x9f9 PUSH1 0x2
0x9fb EXP
0x9fc SUB
0x9fd DUP2
0x9fe AND
0x9ff ISZERO
0xa00 PUSH2 0x714
0xa03 JUMPI
---
0x9f4: JUMPDEST 
0x9f5: V939 = 0x1
0x9f7: V940 = 0xa0
0x9f9: V941 = 0x2
0x9fb: V942 = EXP 0x2 0xa0
0x9fc: V943 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fe: V944 = AND V304 0xffffffffffffffffffffffffffffffffffffffff
0x9ff: V945 = ISZERO V944
0xa00: V946 = 0x714
0xa03: JUMPI 0x714 V945
---
Entry stack: [V12, 0x10e, V304]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x10e, V304]

================================

Block 0xa04
[0xa04:0xa2b]
---
Predecessors: [0x9f4]
Successors: [0xa2c]
---
0xa04 PUSH1 0x0
0xa06 DUP1
0xa07 SLOAD
0xa08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1d NOT
0xa1e AND
0xa1f PUSH1 0x1
0xa21 PUSH1 0xa0
0xa23 PUSH1 0x2
0xa25 EXP
0xa26 SUB
0xa27 DUP4
0xa28 AND
0xa29 OR
0xa2a SWAP1
0xa2b SSTORE
---
0xa04: V947 = 0x0
0xa07: V948 = S[0x0]
0xa08: V949 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1d: V950 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa1e: V951 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V948
0xa1f: V952 = 0x1
0xa21: V953 = 0xa0
0xa23: V954 = 0x2
0xa25: V955 = EXP 0x2 0xa0
0xa26: V956 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa28: V957 = AND V304 0xffffffffffffffffffffffffffffffffffffffff
0xa29: V958 = OR V957 V951
0xa2b: S[0x0] = V958
---
Entry stack: [V12, 0x10e, V304]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x10e, V304]

================================

Block 0xa2c
[0xa2c:0xa2c]
---
Predecessors: [0xa04]
Successors: [0xa2d]
---
0xa2c JUMPDEST
---
0xa2c: JUMPDEST 
---
Entry stack: [V12, 0x10e, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V304]

================================

Block 0xa2d
[0xa2d:0xa2d]
---
Predecessors: [0xa2c]
Successors: [0xa2e]
---
0xa2d JUMPDEST
---
0xa2d: JUMPDEST 
---
Entry stack: [V12, 0x10e, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, V304]

================================

Block 0xa2e
[0xa2e:0xa30]
---
Predecessors: [0xa2d]
Successors: [0x10e]
---
0xa2e JUMPDEST
0xa2f POP
0xa30 JUMP
---
0xa2e: JUMPDEST 
0xa30: JUMP 0x10e
---
Entry stack: [V12, 0x10e, V304]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa31
[0xa31:0xa3f]
---
Predecessors: [0x37c]
Successors: [0x203]
---
0xa31 JUMPDEST
0xa32 PUSH1 0x2
0xa34 SLOAD
0xa35 PUSH1 0x1
0xa37 PUSH1 0xa0
0xa39 PUSH1 0x2
0xa3b EXP
0xa3c SUB
0xa3d AND
0xa3e DUP2
0xa3f JUMP
---
0xa31: JUMPDEST 
0xa32: V959 = 0x2
0xa34: V960 = S[0x2]
0xa35: V961 = 0x1
0xa37: V962 = 0xa0
0xa39: V963 = 0x2
0xa3b: V964 = EXP 0x2 0xa0
0xa3c: V965 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3d: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V960
0xa3f: JUMP 0x203
---
Entry stack: [V12, 0x203]
Stack pops: 1
Stack additions: [S0, V966]
Exit stack: [V12, 0x203, V966]

================================

Block 0xa40
[0xa40:0xa4c]
---
Predecessors: [0x3b7]
Successors: [0xa4d, 0xa5c]
---
0xa40 JUMPDEST
0xa41 PUSH1 0x0
0xa43 DUP3
0xa44 DUP3
0xa45 MUL
0xa46 DUP4
0xa47 ISZERO
0xa48 DUP1
0xa49 PUSH2 0xa5c
0xa4c JUMPI
---
0xa40: JUMPDEST 
0xa41: V967 = 0x0
0xa45: V968 = MUL 0x10f0cf064dd59200000 V336
0xa47: V969 = ISZERO V336
0xa49: V970 = 0xa5c
0xa4c: JUMPI 0xa5c V969
---
Entry stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V968, V969]
Exit stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968, V969]

================================

Block 0xa4d
[0xa4d:0xa57]
---
Predecessors: [0xa40]
Successors: [0xa58, 0xa59]
---
0xa4d POP
0xa4e DUP3
0xa4f DUP5
0xa50 DUP3
0xa51 DUP2
0xa52 ISZERO
0xa53 ISZERO
0xa54 PUSH2 0xa59
0xa57 JUMPI
---
0xa52: V971 = ISZERO V336
0xa53: V972 = ISZERO V971
0xa54: V973 = 0xa59
0xa57: JUMPI 0xa59 V972
---
Entry stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968, V969]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968, 0x10f0cf064dd59200000, V336, V968]

================================

Block 0xa58
[0xa58:0xa58]
---
Predecessors: [0xa4d]
Successors: []
---
0xa58 INVALID
---
0xa58: INVALID 
---
Entry stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968, 0x10f0cf064dd59200000, V336, V968]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968, 0x10f0cf064dd59200000, V336, V968]

================================

Block 0xa59
[0xa59:0xa5b]
---
Predecessors: [0xa4d]
Successors: [0xa5c]
---
0xa59 JUMPDEST
0xa5a DIV
0xa5b EQ
---
0xa59: JUMPDEST 
0xa5a: V974 = DIV V968 V336
0xa5b: V975 = EQ V974 0x10f0cf064dd59200000
---
Entry stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968, 0x10f0cf064dd59200000, V336, V968]
Stack pops: 3
Stack additions: [V975]
Exit stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968, V975]

================================

Block 0xa5c
[0xa5c:0xa62]
---
Predecessors: [0xa40, 0xa59]
Successors: [0xa63, 0xa64]
---
0xa5c JUMPDEST
0xa5d ISZERO
0xa5e ISZERO
0xa5f PUSH2 0xa64
0xa62 JUMPI
---
0xa5c: JUMPDEST 
0xa5d: V976 = ISZERO S0
0xa5e: V977 = ISZERO V976
0xa5f: V978 = 0xa64
0xa62: JUMPI 0xa64 V977
---
Entry stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968]

================================

Block 0xa63
[0xa63:0xa63]
---
Predecessors: [0xa5c]
Successors: []
---
0xa63 INVALID
---
0xa63: INVALID 
---
Entry stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x10a, V83, 0x0, 0x0, 0x3f1, 0x3ec, 0xde0b6b3a7640000, 0x3e0, V336, 0x10f0cf064dd59200000, 0x0, V968]

================================

Block 0xa64
[0xa64:0xa67]
---
Predecessors: [0xa5c, 0xb65]
Successors: [0xa68]
---
0xa64 JUMPDEST
0xa65 DUP1
0xa66 SWAP2
0xa67 POP
---
0xa64: JUMPDEST 
---
Entry stack: [V12, 0x10e, 0x10a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x10e, 0x10a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0xa68
[0xa68:0xa6e]
---
Predecessors: [0xa64]
Successors: [0x3e0, 0x414, 0x4b3, 0x4ca, 0x4df, 0x4f5, 0xaa4, 0xacc, 0xae9, 0xb2e]
---
0xa68 JUMPDEST
0xa69 POP
0xa6a SWAP3
0xa6b SWAP2
0xa6c POP
0xa6d POP
0xa6e JUMP
---
0xa68: JUMPDEST 
0xa6e: JUMP S4
---
Entry stack: [V12, 0x10e, S11, S10, {0x0, 0x10a, 0x10e}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x10e, S11, S10, {0x0, 0x10a, 0x10e}, S8, S7, S6, S5, S1]

================================

Block 0xa6f
[0xa6f:0xa7b]
---
Predecessors: [0x3e0, 0xaac, 0xaf1, 0xb36]
Successors: [0xa7c, 0xa7d]
---
0xa6f JUMPDEST
0xa70 PUSH1 0x0
0xa72 DUP1
0xa73 DUP3
0xa74 DUP5
0xa75 DUP2
0xa76 ISZERO
0xa77 ISZERO
0xa78 PUSH2 0xa7d
0xa7b JUMPI
---
0xa6f: JUMPDEST 
0xa70: V979 = 0x0
0xa76: V980 = ISZERO S0
0xa77: V981 = ISZERO V980
0xa78: V982 = 0xa7d
0xa7b: JUMPI 0xa7d V981
---
Entry stack: [V12, 0x10e, S10, S9, {0x0, 0x10a, 0x10e}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, 0x10e, S10, S9, {0x0, 0x10a, 0x10e}, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0xa7c
[0xa7c:0xa7c]
---
Predecessors: [0xa6f]
Successors: []
---
0xa7c INVALID
---
0xa7c: INVALID 
---
Entry stack: [V12, 0x10e, S14, S13, {0x0, 0x10a, 0x10e}, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, S14, S13, {0x0, 0x10a, 0x10e}, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0xa7d
[0xa7d:0xa83]
---
Predecessors: [0xa6f]
Successors: [0xa84]
---
0xa7d JUMPDEST
0xa7e DIV
0xa7f SWAP1
0xa80 POP
0xa81 DUP1
0xa82 SWAP2
0xa83 POP
---
0xa7d: JUMPDEST 
0xa7e: V983 = DIV S0 S1
---
Entry stack: [V12, 0x10e, S14, S13, {0x0, 0x10a, 0x10e}, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V983, V983]
Exit stack: [V12, 0x10e, S14, S13, {0x0, 0x10a, 0x10e}, S11, S10, S9, S8, S7, S6, S5, S4, V983, V983]

================================

Block 0xa84
[0xa84:0xa8a]
---
Predecessors: [0xa7d]
Successors: [0x3ec, 0xabf]
---
0xa84 JUMPDEST
0xa85 POP
0xa86 SWAP3
0xa87 SWAP2
0xa88 POP
0xa89 POP
0xa8a JUMP
---
0xa84: JUMPDEST 
0xa8a: JUMP {0x3ec, 0xabf}
---
Entry stack: [V12, 0x10e, 0x10a, S11, {0x0, 0x10e}, {0x0, 0x10a}, S8, S7, 0x0, {0x3f1, 0xacc}, {0x3ec, 0xabf}, S3, {0x5, 0xa, 0x14, 0xde0b6b3a7640000}, V983, V983]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x10e, 0x10a, S11, {0x0, 0x10e}, {0x0, 0x10a}, S8, S7, 0x0, {0x3f1, 0xacc}, V983]

================================

Block 0xa8b
[0xa8b:0xaa3]
---
Predecessors: [0x3ec]
Successors: [0xb65]
---
0xa8b JUMPDEST
0xa8c PUSH1 0x7
0xa8e SLOAD
0xa8f PUSH1 0x0
0xa91 SWAP1
0xa92 PUSH2 0xaa4
0xa95 SWAP1
0xa96 PUSH3 0x2a300
0xa9a PUSH4 0xffffffff
0xa9f PUSH2 0xb65
0xaa2 AND
0xaa3 JUMP
---
0xa8b: JUMPDEST 
0xa8c: V984 = 0x7
0xa8e: V985 = S[0x7]
0xa8f: V986 = 0x0
0xa92: V987 = 0xaa4
0xa96: V988 = 0x2a300
0xa9a: V989 = 0xffffffff
0xa9f: V990 = 0xb65
0xaa2: V991 = AND 0xb65 0xffffffff
0xaa3: JUMP 0xb65
---
Entry stack: [V12, 0x10e, 0x10a, S7, {0x0, 0x10e}, {0x0, 0x10a}, S4, S3, 0x0, {0x3f1, 0xacc}, S0]
Stack pops: 0
Stack additions: [0x0, 0xaa4, V985, 0x2a300]
Exit stack: [V12, 0x10e, 0x10a, S7, {0x0, 0x10e}, {0x0, 0x10a}, S4, S3, 0x0, {0x3f1, 0xacc}, S0, 0x0, 0xaa4, V985, 0x2a300]

================================

Block 0xaa4
[0xaa4:0xaab]
---
Predecessors: [0xa68]
Successors: [0xaac, 0xad3]
---
0xaa4 JUMPDEST
0xaa5 TIMESTAMP
0xaa6 LT
0xaa7 ISZERO
0xaa8 PUSH2 0xad3
0xaab JUMPI
---
0xaa4: JUMPDEST 
0xaa5: V992 = TIMESTAMP
0xaa6: V993 = LT V992 S0
0xaa7: V994 = ISZERO V993
0xaa8: V995 = 0xad3
0xaab: JUMPI 0xad3 V994
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1]

================================

Block 0xaac
[0xaac:0xabe]
---
Predecessors: [0xaa4]
Successors: [0xa6f]
---
0xaac PUSH2 0xacc
0xaaf PUSH2 0xabf
0xab2 DUP4
0xab3 PUSH1 0x5
0xab5 PUSH4 0xffffffff
0xaba PUSH2 0xa6f
0xabd AND
0xabe JUMP
---
0xaac: V996 = 0xacc
0xaaf: V997 = 0xabf
0xab3: V998 = 0x5
0xab5: V999 = 0xffffffff
0xaba: V1000 = 0xa6f
0xabd: V1001 = AND 0xa6f 0xffffffff
0xabe: JUMP 0xa6f
---
Entry stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xacc, 0xabf, S1, 0x5]
Exit stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0, 0xacc, 0xabf, S1, 0x5]

================================

Block 0xabf
[0xabf:0xacb]
---
Predecessors: [0xa84]
Successors: [0xb65]
---
0xabf JUMPDEST
0xac0 DUP4
0xac1 SWAP1
0xac2 PUSH4 0xffffffff
0xac7 PUSH2 0xb65
0xaca AND
0xacb JUMP
---
0xabf: JUMPDEST 
0xac2: V1002 = 0xffffffff
0xac7: V1003 = 0xb65
0xaca: V1004 = AND 0xb65 0xffffffff
0xacb: JUMP 0xb65
---
Entry stack: [V12, 0x10e, 0x10a, S7, {0x0, 0x10e}, {0x0, 0x10a}, S4, S3, 0x0, {0x3f1, 0xacc}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, S0]
Exit stack: [V12, 0x10e, 0x10a, S7, {0x0, 0x10e}, {0x0, 0x10a}, S4, S3, 0x0, {0x3f1, 0xacc}, S3, S0]

================================

Block 0xacc
[0xacc:0xad2]
---
Predecessors: [0xa68]
Successors: [0xb60]
---
0xacc JUMPDEST
0xacd SWAP1
0xace POP
0xacf PUSH2 0xb60
0xad2 JUMP
---
0xacc: JUMPDEST 
0xacf: V1005 = 0xb60
0xad2: JUMP 0xb60
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S0]

================================

Block 0xad3
[0xad3:0xae8]
---
Predecessors: [0xaa4]
Successors: [0xb65]
---
0xad3 JUMPDEST
0xad4 PUSH1 0x7
0xad6 SLOAD
0xad7 PUSH2 0xae9
0xada SWAP1
0xadb PUSH3 0x127500
0xadf PUSH4 0xffffffff
0xae4 PUSH2 0xb65
0xae7 AND
0xae8 JUMP
---
0xad3: JUMPDEST 
0xad4: V1006 = 0x7
0xad6: V1007 = S[0x7]
0xad7: V1008 = 0xae9
0xadb: V1009 = 0x127500
0xadf: V1010 = 0xffffffff
0xae4: V1011 = 0xb65
0xae7: V1012 = AND 0xb65 0xffffffff
0xae8: JUMP 0xb65
---
Entry stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xae9, V1007, 0x127500]
Exit stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0, 0xae9, V1007, 0x127500]

================================

Block 0xae9
[0xae9:0xaf0]
---
Predecessors: [0xa68]
Successors: [0xaf1, 0xb18]
---
0xae9 JUMPDEST
0xaea TIMESTAMP
0xaeb LT
0xaec ISZERO
0xaed PUSH2 0xb18
0xaf0 JUMPI
---
0xae9: JUMPDEST 
0xaea: V1013 = TIMESTAMP
0xaeb: V1014 = LT V1013 S0
0xaec: V1015 = ISZERO V1014
0xaed: V1016 = 0xb18
0xaf0: JUMPI 0xb18 V1015
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1]

================================

Block 0xaf1
[0xaf1:0xb03]
---
Predecessors: [0xae9]
Successors: [0xa6f]
---
0xaf1 PUSH2 0xacc
0xaf4 PUSH2 0xabf
0xaf7 DUP4
0xaf8 PUSH1 0xa
0xafa PUSH4 0xffffffff
0xaff PUSH2 0xa6f
0xb02 AND
0xb03 JUMP
---
0xaf1: V1017 = 0xacc
0xaf4: V1018 = 0xabf
0xaf8: V1019 = 0xa
0xafa: V1020 = 0xffffffff
0xaff: V1021 = 0xa6f
0xb02: V1022 = AND 0xa6f 0xffffffff
0xb03: JUMP 0xa6f
---
Entry stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xacc, 0xabf, S1, 0xa]
Exit stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0, 0xacc, 0xabf, S1, 0xa]

================================

Block 0xb04
[0xb04:0xb10]
---
Predecessors: []
Successors: [0xb65]
---
0xb04 JUMPDEST
0xb05 DUP4
0xb06 SWAP1
0xb07 PUSH4 0xffffffff
0xb0c PUSH2 0xb65
0xb0f AND
0xb10 JUMP
---
0xb04: JUMPDEST 
0xb07: V1023 = 0xffffffff
0xb0c: V1024 = 0xb65
0xb0f: V1025 = AND 0xb65 0xffffffff
0xb10: JUMP 0xb65
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, S3, S0]
Exit stack: [S3, S2, S1, S3, S0]

================================

Block 0xb11
[0xb11:0xb17]
---
Predecessors: []
Successors: [0xb60]
---
0xb11 JUMPDEST
0xb12 SWAP1
0xb13 POP
0xb14 PUSH2 0xb60
0xb17 JUMP
---
0xb11: JUMPDEST 
0xb14: V1026 = 0xb60
0xb17: JUMP 0xb60
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xb18
[0xb18:0xb2d]
---
Predecessors: [0xae9]
Successors: [0xb65]
---
0xb18 JUMPDEST
0xb19 PUSH1 0x7
0xb1b SLOAD
0xb1c PUSH2 0xb2e
0xb1f SWAP1
0xb20 PUSH3 0x1baf80
0xb24 PUSH4 0xffffffff
0xb29 PUSH2 0xb65
0xb2c AND
0xb2d JUMP
---
0xb18: JUMPDEST 
0xb19: V1027 = 0x7
0xb1b: V1028 = S[0x7]
0xb1c: V1029 = 0xb2e
0xb20: V1030 = 0x1baf80
0xb24: V1031 = 0xffffffff
0xb29: V1032 = 0xb65
0xb2c: V1033 = AND 0xb65 0xffffffff
0xb2d: JUMP 0xb65
---
Entry stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xb2e, V1028, 0x1baf80]
Exit stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0, 0xb2e, V1028, 0x1baf80]

================================

Block 0xb2e
[0xb2e:0xb35]
---
Predecessors: [0xa68]
Successors: [0xb36, 0xb5d]
---
0xb2e JUMPDEST
0xb2f TIMESTAMP
0xb30 LT
0xb31 ISZERO
0xb32 PUSH2 0xb5d
0xb35 JUMPI
---
0xb2e: JUMPDEST 
0xb2f: V1034 = TIMESTAMP
0xb30: V1035 = LT V1034 S0
0xb31: V1036 = ISZERO V1035
0xb32: V1037 = 0xb5d
0xb35: JUMPI 0xb5d V1036
---
Entry stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10e, S7, S6, {0x0, 0x10a, 0x10e}, S4, S3, S2, S1]

================================

Block 0xb36
[0xb36:0xb48]
---
Predecessors: [0xb2e]
Successors: [0xa6f]
---
0xb36 PUSH2 0xacc
0xb39 PUSH2 0xabf
0xb3c DUP4
0xb3d PUSH1 0x14
0xb3f PUSH4 0xffffffff
0xb44 PUSH2 0xa6f
0xb47 AND
0xb48 JUMP
---
0xb36: V1038 = 0xacc
0xb39: V1039 = 0xabf
0xb3d: V1040 = 0x14
0xb3f: V1041 = 0xffffffff
0xb44: V1042 = 0xa6f
0xb47: V1043 = AND 0xa6f 0xffffffff
0xb48: JUMP 0xa6f
---
Entry stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xacc, 0xabf, S1, 0x14]
Exit stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0, 0xacc, 0xabf, S1, 0x14]

================================

Block 0xb49
[0xb49:0xb55]
---
Predecessors: []
Successors: [0xb65]
---
0xb49 JUMPDEST
0xb4a DUP4
0xb4b SWAP1
0xb4c PUSH4 0xffffffff
0xb51 PUSH2 0xb65
0xb54 AND
0xb55 JUMP
---
0xb49: JUMPDEST 
0xb4c: V1044 = 0xffffffff
0xb51: V1045 = 0xb65
0xb54: V1046 = AND 0xb65 0xffffffff
0xb55: JUMP 0xb65
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, S3, S0]
Exit stack: [S3, S2, S1, S3, S0]

================================

Block 0xb56
[0xb56:0xb5c]
---
Predecessors: []
Successors: [0xb60]
---
0xb56 JUMPDEST
0xb57 SWAP1
0xb58 POP
0xb59 PUSH2 0xb60
0xb5c JUMP
---
0xb56: JUMPDEST 
0xb59: V1047 = 0xb60
0xb5c: JUMP 0xb60
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xb5d
[0xb5d:0xb5f]
---
Predecessors: [0xb2e]
Successors: [0xb60]
---
0xb5d JUMPDEST
0xb5e POP
0xb5f DUP1
---
0xb5d: JUMPDEST 
---
Entry stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S1]

================================

Block 0xb60
[0xb60:0xb64]
---
Predecessors: [0xacc, 0xb11, 0xb56, 0xb5d]
Successors: [0x3f1]
---
0xb60 JUMPDEST
0xb61 SWAP2
0xb62 SWAP1
0xb63 POP
0xb64 JUMP
---
0xb60: JUMPDEST 
0xb64: JUMP S2
---
Entry stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x10e, S6, S5, {0x0, 0x10a, 0x10e}, S3, S0]

================================

Block 0xb65
[0xb65:0xb72]
---
Predecessors: [0x3f1, 0x486, 0x4b3, 0x4ca, 0x4df, 0xa8b, 0xabf, 0xad3, 0xb04, 0xb18, 0xb49]
Successors: [0xa64, 0xb73]
---
0xb65 JUMPDEST
0xb66 PUSH1 0x0
0xb68 DUP3
0xb69 DUP3
0xb6a ADD
0xb6b DUP4
0xb6c DUP2
0xb6d LT
0xb6e ISZERO
0xb6f PUSH2 0xa64
0xb72 JUMPI
---
0xb65: JUMPDEST 
0xb66: V1048 = 0x0
0xb6a: V1049 = ADD S0 S1
0xb6d: V1050 = LT V1049 S1
0xb6e: V1051 = ISZERO V1050
0xb6f: V1052 = 0xa64
0xb72: JUMPI 0xa64 V1051
---
Entry stack: [V12, 0x10e, 0x10a, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1049]
Exit stack: [V12, 0x10e, 0x10a, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V1049]

================================

Block 0xb73
[0xb73:0xb73]
---
Predecessors: [0xb65]
Successors: []
---
0xb73 INVALID
---
0xb73: INVALID 
---
Entry stack: [V12, 0x10e, 0x10a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1049]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10e, 0x10a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1049]

================================

Block 0xb74
[0xb74:0xb77]
---
Predecessors: []
Successors: [0xb78]
---
0xb74 JUMPDEST
0xb75 DUP1
0xb76 SWAP2
0xb77 POP
---
0xb74: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xb78
[0xb78:0xbc2]
---
Predecessors: [0xb74]
Successors: []
---
0xb78 JUMPDEST
0xb79 POP
0xb7a SWAP3
0xb7b SWAP2
0xb7c POP
0xb7d POP
0xb7e JUMP
0xb7f STOP
0xb80 LOG1
0xb81 PUSH6 0x627a7a723058
0xb88 SHA3
0xb89 MISSING 0xcd
0xb8a PUSH5 0xeebafcabfb
0xb90 DUP4
0xb91 SWAP3
0xb92 MISSING 0x23
0xb93 PUSH20 0xc74fd177025a23b2ab55b93fe1a03b9b5454cb1a
0xba8 PUSH26 0x29
---
0xb78: JUMPDEST 
0xb7e: JUMP S4
0xb7f: STOP 
0xb80: LOG S0 S1 S2
0xb81: V1053 = 0x627a7a723058
0xb88: V1054 = SHA3 0x627a7a723058 S3
0xb89: MISSING 0xcd
0xb8a: V1055 = 0xeebafcabfb
0xb92: MISSING 0x23
0xb93: V1056 = 0xc74fd177025a23b2ab55b93fe1a03b9b5454cb1a
0xba8: V1057 = 0x29
---
Entry stack: [S1, S0]
Stack pops: 65
Stack additions: [0x29, 0xc74fd177025a23b2ab55b93fe1a03b9b5454cb1a]
Exit stack: []

================================

Function 0:
Public function signature: 0x1d545d09
Entry block: 0x110
Exit block: 0x123
Body: 0x110, 0x117, 0x11b, 0x123, 0x578

Function 1:
Public function signature: 0x1f130761
Entry block: 0x135
Exit block: 0x123
Body: 0x123, 0x135, 0x13c, 0x140, 0x57e

Function 2:
Public function signature: 0x1f6d4942
Entry block: 0x15a
Exit block: 0x179
Body: 0x15a, 0x161, 0x165, 0x179, 0x584

Function 3:
Public function signature: 0x30adce0e
Entry block: 0x191
Exit block: 0x123
Body: 0x123, 0x191, 0x198, 0x19c, 0x59d

Function 4:
Public function signature: 0x4bb278f3
Entry block: 0x1b6
Exit block: 0x10e
Body: 0x10e, 0x1b6, 0x1bd, 0x1c1, 0x5a3, 0x5bb, 0x5bf, 0x5cb, 0x5d1, 0x5d7, 0x5e8, 0x5ef, 0x5f3, 0x648, 0x64c, 0x659, 0x65d, 0x672, 0x6be, 0x6c2, 0x6cf, 0x6d3, 0x6de, 0x713, 0x714, 0x715, 0x716

Function 5:
Public function signature: 0x6b4a6ded
Entry block: 0x1cb
Exit block: 0x123
Body: 0x123, 0x1cb, 0x1d2, 0x1d6, 0x719

Function 6:
Public function signature: 0x6ffea7bd
Entry block: 0x1f0
Exit block: 0x203
Body: 0x1f0, 0x1f7, 0x1fb, 0x203, 0x727

Function 7:
Public function signature: 0x85565585
Entry block: 0x21f
Exit block: 0x203
Body: 0x203, 0x21f, 0x226, 0x22a, 0x736

Function 8:
Public function signature: 0x8d0bba03
Entry block: 0x24e
Exit block: 0x123
Body: 0x123, 0x24e, 0x255, 0x259, 0x745

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x273
Exit block: 0x203
Body: 0x203, 0x273, 0x27a, 0x27e, 0x750

Function 10:
Public function signature: 0x8fd3ab80
Entry block: 0x2a2
Exit block: 0x10e
Body: 0x10e, 0x2a2, 0x2a9, 0x2ad, 0x75f, 0x76e, 0x774, 0x77b, 0x77f, 0x7d4, 0x7d8, 0x7e5, 0x7e9, 0x7fc, 0x800, 0x862, 0x866, 0x873, 0x877, 0x8d3, 0x8d7, 0x8e4, 0x8e8, 0x929, 0x92a

Function 11:
Public function signature: 0x9890220b
Entry block: 0x2b7
Exit block: 0x10e
Body: 0x10a, 0x10b, 0x10c, 0x10e, 0x2b7, 0x2be, 0x2c2, 0x92e, 0x945, 0x949, 0x97e

Function 12:
Public function signature: 0x9a6524f1
Entry block: 0x2cc
Exit block: 0x123
Body: 0x123, 0x2cc, 0x2d3, 0x2d7, 0x983

Function 13:
Public function signature: 0xad3c0b9d
Entry block: 0x2f1
Exit block: 0x123
Body: 0x123, 0x2f1, 0x2f8, 0x2fc, 0x992

Function 14:
Public function signature: 0xbe9a6555
Entry block: 0x316
Exit block: 0x10e
Body: 0x10e, 0x316, 0x31d, 0x321, 0x999, 0x9b0, 0x9b4, 0x9bd, 0x9c1, 0x9d0, 0x9d1

Function 15:
Public function signature: 0xe2fc421d
Entry block: 0x32b
Exit block: 0x123
Body: 0x123, 0x32b, 0x332, 0x336, 0x9d3

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x350
Exit block: 0x10e
Body: 0x10e, 0x350, 0x357, 0x35b, 0x714, 0x715, 0x716, 0x9d9, 0x9f0, 0x9f4, 0xa04, 0xa2c, 0xa2d, 0xa2e

Function 17:
Public function signature: 0xfc0c546a
Entry block: 0x371
Exit block: 0x203
Body: 0x203, 0x371, 0x378, 0x37c, 0xa31

Function 18:
Public fallback function
Entry block: 0xe0
Exit block: 0xb73
Body: 0xe0, 0xe4, 0xf0, 0xf6, 0xfd, 0x101, 0x3a0, 0x3b3, 0x3b7, 0xa40, 0xa4d, 0xa58, 0xa59, 0xa5c, 0xa63, 0xb73

Function 19:
Private function
Entry block: 0xb65
Exit block: 0xa68
Body: 0x3e0, 0x3ec, 0x3f1, 0x414, 0x41f, 0x475, 0x486, 0x4b3, 0xa64, 0xa68, 0xa6f, 0xa7d, 0xa84, 0xa8b, 0xaa4, 0xaac, 0xabf, 0xacc, 0xad3, 0xae9, 0xaf1, 0xb18, 0xb2e, 0xb36, 0xb5d, 0xb60, 0xb65

Function 20:
Private function
Entry block: 0xa6f
Exit block: 0xa84
Body: 0x3e0, 0x3ec, 0x3f1, 0x414, 0x41f, 0x475, 0x486, 0x4b3, 0x4ca, 0x4ca, 0x4df, 0x4df, 0xa64, 0xa68, 0xa6f, 0xa7d, 0xa84, 0xa8b, 0xaa4, 0xaac, 0xabf, 0xacc, 0xad3, 0xae9, 0xaf1, 0xb18, 0xb2e, 0xb36, 0xb5d, 0xb60, 0xb65

