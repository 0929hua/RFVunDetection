Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8a
0xa: JUMPI 0x8a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x2d5]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x1cb3b20
0x34 EQ
0x35 PUSH2 0x2d5
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x1cb3b20
0x34: V10 = EQ 0x1cb3b20 V8
0x35: V11 = 0x2d5
0x38: JUMPI 0x2d5 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x2e4]
---
0x39 DUP1
0x3a PUSH4 0x29dcb0cf
0x3f EQ
0x40 PUSH2 0x2e4
0x43 JUMPI
---
0x3a: V12 = 0x29dcb0cf
0x3f: V13 = EQ 0x29dcb0cf V8
0x40: V14 = 0x2e4
0x43: JUMPI 0x2e4 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x307]
---
0x44 DUP1
0x45 PUSH4 0x38af3eed
0x4a EQ
0x4b PUSH2 0x307
0x4e JUMPI
---
0x45: V15 = 0x38af3eed
0x4a: V16 = EQ 0x38af3eed V8
0x4b: V17 = 0x307
0x4e: JUMPI 0x307 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x340]
---
0x4f DUP1
0x50 PUSH4 0x6e66f6e9
0x55 EQ
0x56 PUSH2 0x340
0x59 JUMPI
---
0x50: V18 = 0x6e66f6e9
0x55: V19 = EQ 0x6e66f6e9 V8
0x56: V20 = 0x340
0x59: JUMPI 0x340 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x379]
---
0x5a DUP1
0x5b PUSH4 0x7a3a0e84
0x60 EQ
0x61 PUSH2 0x379
0x64 JUMPI
---
0x5b: V21 = 0x7a3a0e84
0x60: V22 = EQ 0x7a3a0e84 V8
0x61: V23 = 0x379
0x64: JUMPI 0x379 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x39c]
---
0x65 DUP1
0x66 PUSH4 0x7b3e5e7b
0x6b EQ
0x6c PUSH2 0x39c
0x6f JUMPI
---
0x66: V24 = 0x7b3e5e7b
0x6b: V25 = EQ 0x7b3e5e7b V8
0x6c: V26 = 0x39c
0x6f: JUMPI 0x39c V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x3bf]
---
0x70 DUP1
0x71 PUSH4 0xa035b1fe
0x76 EQ
0x77 PUSH2 0x3bf
0x7a JUMPI
---
0x71: V27 = 0xa035b1fe
0x76: V28 = EQ 0xa035b1fe V8
0x77: V29 = 0x3bf
0x7a: JUMPI 0x3bf V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x70]
Successors: [0x86, 0x3e2]
---
0x7b DUP1
0x7c PUSH4 0xdc0d3dff
0x81 EQ
0x82 PUSH2 0x3e2
0x85 JUMPI
---
0x7c: V30 = 0xdc0d3dff
0x81: V31 = EQ 0xdc0d3dff V8
0x82: V32 = 0x3e2
0x85: JUMPI 0x3e2 V31
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7b]
Successors: [0x8a]
---
0x86 PUSH2 0x8a
0x89 JUMP
---
0x86: V33 = 0x8a
0x89: JUMP 0x8a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x8a
[0x8a:0x8d]
---
Predecessors: [0x0, 0x86]
Successors: [0x8e]
---
0x8a JUMPDEST
0x8b PUSH2 0x2d3
---
0x8a: JUMPDEST 
0x8b: V34 = 0x2d3
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: [V8, 0x2d3]

================================

Block 0x8e
[0x8e:0xa5]
---
Predecessors: [0x8a]
Successors: [0xa6, 0xaa]
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 PUSH1 0x7
0x93 PUSH1 0x0
0x95 SWAP1
0x96 SLOAD
0x97 SWAP1
0x98 PUSH2 0x100
0x9b EXP
0x9c SWAP1
0x9d DIV
0x9e PUSH1 0xff
0xa0 AND
0xa1 ISZERO
0xa2 PUSH2 0xaa
0xa5 JUMPI
---
0x8e: JUMPDEST 
0x8f: V35 = 0x0
0x91: V36 = 0x7
0x93: V37 = 0x0
0x96: V38 = S[0x7]
0x98: V39 = 0x100
0x9b: V40 = EXP 0x100 0x0
0x9d: V41 = DIV V38 0x1
0x9e: V42 = 0xff
0xa0: V43 = AND 0xff V41
0xa1: V44 = ISZERO V43
0xa2: V45 = 0xaa
0xa5: JUMPI 0xaa V44
---
Entry stack: [V8, 0x2d3]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V8, 0x2d3, 0x0]

================================

Block 0xa6
[0xa6:0xa9]
---
Predecessors: [0x8e]
Successors: []
---
0xa6 PUSH2 0x2
0xa9 JUMP
---
0xa6: V46 = 0x2
0xa9: THROW 
---
Entry stack: [V8, 0x2d3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2d3, 0x0]

================================

Block 0xaa
[0xaa:0xe7]
---
Predecessors: [0x8e]
Successors: [0xe8, 0x150]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac SWAP1
0xad POP
0xae PUSH1 0x40
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 SWAP1
0xb4 DUP2
0xb5 ADD
0xb6 PUSH1 0x40
0xb8 MSTORE
0xb9 DUP1
0xba CALLER
0xbb DUP2
0xbc MSTORE
0xbd PUSH1 0x20
0xbf ADD
0xc0 DUP3
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 POP
0xc7 PUSH1 0x6
0xc9 PUSH1 0x0
0xcb POP
0xcc PUSH1 0x6
0xce PUSH1 0x0
0xd0 POP
0xd1 DUP1
0xd2 SLOAD
0xd3 DUP1
0xd4 SWAP2
0xd5 SWAP1
0xd6 PUSH1 0x1
0xd8 ADD
0xd9 SWAP1
0xda SWAP1
0xdb DUP2
0xdc SLOAD
0xdd DUP2
0xde DUP4
0xdf SSTORE
0xe0 DUP2
0xe1 DUP2
0xe2 ISZERO
0xe3 GT
0xe4 PUSH2 0x150
0xe7 JUMPI
---
0xaa: JUMPDEST 
0xab: V47 = CALLVALUE
0xae: V48 = 0x40
0xb0: V49 = 0x40
0xb2: V50 = M[0x40]
0xb5: V51 = ADD V50 0x40
0xb6: V52 = 0x40
0xb8: M[0x40] = V51
0xba: V53 = CALLER
0xbc: M[V50] = V53
0xbd: V54 = 0x20
0xbf: V55 = ADD 0x20 V50
0xc2: M[V55] = V47
0xc3: V56 = 0x20
0xc5: V57 = ADD 0x20 V55
0xc7: V58 = 0x6
0xc9: V59 = 0x0
0xcc: V60 = 0x6
0xce: V61 = 0x0
0xd2: V62 = S[0x6]
0xd6: V63 = 0x1
0xd8: V64 = ADD 0x1 V62
0xdc: V65 = S[0x6]
0xdf: S[0x6] = V64
0xe2: V66 = ISZERO V65
0xe3: V67 = GT V66 V64
0xe4: V68 = 0x150
0xe7: JUMPI 0x150 V67
---
Entry stack: [V8, 0x2d3, 0x0]
Stack pops: 1
Stack additions: [V47, V50, 0x6, V62, 0x6, V64, V65]
Exit stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, V65]

================================

Block 0xe8
[0xe8:0x105]
---
Predecessors: [0xaa]
Successors: [0x106]
---
0xe8 PUSH1 0x2
0xea MUL
0xeb DUP2
0xec PUSH1 0x2
0xee MUL
0xef DUP4
0xf0 PUSH1 0x0
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 PUSH1 0x0
0xf7 SHA3
0xf8 SWAP2
0xf9 DUP3
0xfa ADD
0xfb SWAP2
0xfc ADD
0xfd PUSH2 0x14f
0x100 SWAP2
0x101 SWAP1
0x102 PUSH2 0x106
0x105 JUMP
---
0xe8: V69 = 0x2
0xea: V70 = MUL 0x2 V65
0xec: V71 = 0x2
0xee: V72 = MUL 0x2 V64
0xf0: V73 = 0x0
0xf2: M[0x0] = 0x6
0xf3: V74 = 0x20
0xf5: V75 = 0x0
0xf7: V76 = SHA3 0x0 0x20
0xfa: V77 = ADD V76 V70
0xfc: V78 = ADD V76 V72
0xfd: V79 = 0x14f
0x102: V80 = 0x106
0x105: JUMP 0x106
---
Entry stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, V65]
Stack pops: 3
Stack additions: [S2, S1, 0x14f, V77, V78]
Exit stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, 0x14f, V77, V78]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xe8, 0x10f]
Successors: [0x10f, 0x14b]
---
0x106 JUMPDEST
0x107 DUP1
0x108 DUP3
0x109 GT
0x10a ISZERO
0x10b PUSH2 0x14b
0x10e JUMPI
---
0x106: JUMPDEST 
0x109: V81 = GT V77 S0
0x10a: V82 = ISZERO V81
0x10b: V83 = 0x14b
0x10e: JUMPI 0x14b V82
---
Entry stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, 0x14f, V77, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, 0x14f, V77, S0]

================================

Block 0x10f
[0x10f:0x14a]
---
Predecessors: [0x106]
Successors: [0x106]
---
0x10f PUSH1 0x0
0x111 PUSH1 0x0
0x113 DUP3
0x114 ADD
0x115 PUSH1 0x0
0x117 PUSH2 0x100
0x11a EXP
0x11b DUP2
0x11c SLOAD
0x11d SWAP1
0x11e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133 MUL
0x134 NOT
0x135 AND
0x136 SWAP1
0x137 SSTORE
0x138 PUSH1 0x1
0x13a DUP3
0x13b ADD
0x13c PUSH1 0x0
0x13e POP
0x13f PUSH1 0x0
0x141 SWAP1
0x142 SSTORE
0x143 POP
0x144 PUSH1 0x1
0x146 ADD
0x147 PUSH2 0x106
0x14a JUMP
---
0x10f: V84 = 0x0
0x111: V85 = 0x0
0x114: V86 = ADD S0 0x0
0x115: V87 = 0x0
0x117: V88 = 0x100
0x11a: V89 = EXP 0x100 0x0
0x11c: V90 = S[V86]
0x11e: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x133: V92 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x134: V93 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x135: V94 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V90
0x137: S[V86] = V94
0x138: V95 = 0x1
0x13b: V96 = ADD S0 0x1
0x13c: V97 = 0x0
0x13f: V98 = 0x0
0x142: S[V96] = 0x0
0x144: V99 = 0x1
0x146: V100 = ADD 0x1 S0
0x147: V101 = 0x106
0x14a: JUMP 0x106
---
Entry stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, 0x14f, V77, S0]
Stack pops: 1
Stack additions: [V100]
Exit stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, 0x14f, V77, V100]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x106]
Successors: [0x14f]
---
0x14b JUMPDEST
0x14c POP
0x14d SWAP1
0x14e JUMP
---
0x14b: JUMPDEST 
0x14e: JUMP 0x14f
---
Entry stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, 0x14f, V77, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, V77]

================================

Block 0x14f
[0x14f:0x14f]
---
Predecessors: [0x14b]
Successors: [0x150]
---
0x14f JUMPDEST
---
0x14f: JUMPDEST 
---
Entry stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, V77]

================================

Block 0x150
[0x150:0x15c]
---
Predecessors: [0xaa, 0x14f]
Successors: [0x15d]
---
0x150 JUMPDEST
0x151 POP
0x152 POP
0x153 POP
0x154 DUP2
0x155 SLOAD
0x156 DUP2
0x157 LT
0x158 ISZERO
0x159 PUSH2 0x2
0x15c JUMPI
---
0x150: JUMPDEST 
0x155: V102 = S[0x6]
0x157: V103 = LT V62 V102
0x158: V104 = ISZERO V103
0x159: V105 = 0x2
0x15c: THROWI V104
---
Entry stack: [V8, 0x2d3, V47, V50, 0x6, V62, 0x6, V64, S0]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V8, 0x2d3, V47, V50, 0x6, V62]

================================

Block 0x15d
[0x15d:0x16c]
---
Predecessors: [0x150]
Successors: [0x16d]
---
0x15d SWAP1
0x15e PUSH1 0x0
0x160 MSTORE
0x161 PUSH1 0x20
0x163 PUSH1 0x0
0x165 SHA3
0x166 SWAP1
0x167 PUSH1 0x2
0x169 MUL
0x16a ADD
0x16b PUSH1 0x0
---
0x15e: V106 = 0x0
0x160: M[0x0] = 0x6
0x161: V107 = 0x20
0x163: V108 = 0x0
0x165: V109 = SHA3 0x0 0x20
0x167: V110 = 0x2
0x169: V111 = MUL 0x2 V62
0x16a: V112 = ADD V111 V109
0x16b: V113 = 0x0
---
Entry stack: [V8, 0x2d3, V47, V50, 0x6, V62]
Stack pops: 2
Stack additions: [V112, 0x0]
Exit stack: [V8, 0x2d3, V47, V50, V112, 0x0]

================================

Block 0x16d
[0x16d:0x26e]
---
Predecessors: [0x15d]
Successors: [0x26f]
---
0x16d JUMPDEST
0x16e POP
0x16f PUSH1 0x0
0x171 DUP3
0x172 ADD
0x173 MLOAD
0x174 DUP2
0x175 PUSH1 0x0
0x177 ADD
0x178 PUSH1 0x0
0x17a PUSH2 0x100
0x17d EXP
0x17e DUP2
0x17f SLOAD
0x180 DUP2
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 MUL
0x197 NOT
0x198 AND
0x199 SWAP1
0x19a DUP4
0x19b MUL
0x19c OR
0x19d SWAP1
0x19e SSTORE
0x19f POP
0x1a0 PUSH1 0x20
0x1a2 DUP3
0x1a3 ADD
0x1a4 MLOAD
0x1a5 DUP2
0x1a6 PUSH1 0x1
0x1a8 ADD
0x1a9 PUSH1 0x0
0x1ab POP
0x1ac SSTORE
0x1ad SWAP1
0x1ae POP
0x1af POP
0x1b0 DUP1
0x1b1 PUSH1 0x2
0x1b3 PUSH1 0x0
0x1b5 DUP3
0x1b6 DUP3
0x1b7 DUP3
0x1b8 POP
0x1b9 SLOAD
0x1ba ADD
0x1bb SWAP3
0x1bc POP
0x1bd POP
0x1be DUP2
0x1bf SWAP1
0x1c0 SSTORE
0x1c1 POP
0x1c2 PUSH1 0x5
0x1c4 PUSH1 0x0
0x1c6 SWAP1
0x1c7 SLOAD
0x1c8 SWAP1
0x1c9 PUSH2 0x100
0x1cc EXP
0x1cd SWAP1
0x1ce DIV
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 AND
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb PUSH4 0xa9059cbb
0x200 CALLER
0x201 PUSH1 0x4
0x203 PUSH1 0x0
0x205 POP
0x206 SLOAD
0x207 DUP5
0x208 DIV
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP4
0x20d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x22b MUL
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x4
0x230 ADD
0x231 DUP1
0x232 DUP4
0x233 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x248 AND
0x249 DUP2
0x24a MSTORE
0x24b PUSH1 0x20
0x24d ADD
0x24e DUP3
0x24f DUP2
0x250 MSTORE
0x251 PUSH1 0x20
0x253 ADD
0x254 SWAP3
0x255 POP
0x256 POP
0x257 POP
0x258 PUSH1 0x0
0x25a PUSH1 0x40
0x25c MLOAD
0x25d DUP1
0x25e DUP4
0x25f SUB
0x260 DUP2
0x261 PUSH1 0x0
0x263 DUP8
0x264 PUSH2 0x61da
0x267 GAS
0x268 SUB
0x269 CALL
0x26a ISZERO
0x26b PUSH2 0x2
0x26e JUMPI
---
0x16d: JUMPDEST 
0x16f: V114 = 0x0
0x172: V115 = ADD V50 0x0
0x173: V116 = M[V115]
0x175: V117 = 0x0
0x177: V118 = ADD 0x0 V112
0x178: V119 = 0x0
0x17a: V120 = 0x100
0x17d: V121 = EXP 0x100 0x0
0x17f: V122 = S[V118]
0x181: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V124 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x197: V125 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x198: V126 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V122
0x19b: V127 = MUL V116 0x1
0x19c: V128 = OR V127 V126
0x19e: S[V118] = V128
0x1a0: V129 = 0x20
0x1a3: V130 = ADD V50 0x20
0x1a4: V131 = M[V130]
0x1a6: V132 = 0x1
0x1a8: V133 = ADD 0x1 V112
0x1a9: V134 = 0x0
0x1ac: S[V133] = V131
0x1b1: V135 = 0x2
0x1b3: V136 = 0x0
0x1b9: V137 = S[0x2]
0x1ba: V138 = ADD V137 V47
0x1c0: S[0x2] = V138
0x1c2: V139 = 0x5
0x1c4: V140 = 0x0
0x1c7: V141 = S[0x5]
0x1c9: V142 = 0x100
0x1cc: V143 = EXP 0x100 0x0
0x1ce: V144 = DIV V141 0x1
0x1cf: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x1e5: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x1fb: V149 = 0xa9059cbb
0x200: V150 = CALLER
0x201: V151 = 0x4
0x203: V152 = 0x0
0x206: V153 = S[0x4]
0x208: V154 = DIV V47 V153
0x209: V155 = 0x40
0x20b: V156 = M[0x40]
0x20d: V157 = 0x100000000000000000000000000000000000000000000000000000000
0x22b: V158 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x22d: M[V156] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x22e: V159 = 0x4
0x230: V160 = ADD 0x4 V156
0x233: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x248: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x24a: M[V160] = V162
0x24b: V163 = 0x20
0x24d: V164 = ADD 0x20 V160
0x250: M[V164] = V154
0x251: V165 = 0x20
0x253: V166 = ADD 0x20 V164
0x258: V167 = 0x0
0x25a: V168 = 0x40
0x25c: V169 = M[0x40]
0x25f: V170 = SUB V166 V169
0x261: V171 = 0x0
0x264: V172 = 0x61da
0x267: V173 = GAS
0x268: V174 = SUB V173 0x61da
0x269: V175 = CALL V174 V148 0x0 V169 V170 V169 0x0
0x26a: V176 = ISZERO V175
0x26b: V177 = 0x2
0x26e: THROWI V176
---
Entry stack: [V8, 0x2d3, V47, V50, V112, 0x0]
Stack pops: 4
Stack additions: [S3, V148, 0xa9059cbb, V166]
Exit stack: [V8, 0x2d3, V47, V148, 0xa9059cbb, V166]

================================

Block 0x26f
[0x26f:0x2cf]
---
Predecessors: [0x16d]
Successors: [0x2d0]
---
0x26f POP
0x270 POP
0x271 POP
0x272 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x293 CALLER
0x294 DUP3
0x295 PUSH1 0x1
0x297 PUSH1 0x40
0x299 MLOAD
0x29a DUP1
0x29b DUP5
0x29c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b1 AND
0x2b2 DUP2
0x2b3 MSTORE
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 DUP4
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd DUP3
0x2be DUP2
0x2bf MSTORE
0x2c0 PUSH1 0x20
0x2c2 ADD
0x2c3 SWAP4
0x2c4 POP
0x2c5 POP
0x2c6 POP
0x2c7 POP
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc SWAP2
0x2cd SUB
0x2ce SWAP1
0x2cf LOG1
---
0x272: V178 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x293: V179 = CALLER
0x295: V180 = 0x1
0x297: V181 = 0x40
0x299: V182 = M[0x40]
0x29c: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x2b3: M[V182] = V184
0x2b4: V185 = 0x20
0x2b6: V186 = ADD 0x20 V182
0x2b9: M[V186] = V47
0x2ba: V187 = 0x20
0x2bc: V188 = ADD 0x20 V186
0x2bf: M[V188] = 0x1
0x2c0: V189 = 0x20
0x2c2: V190 = ADD 0x20 V188
0x2c8: V191 = 0x40
0x2ca: V192 = M[0x40]
0x2cd: V193 = SUB V190 V192
0x2cf: LOG V192 V193 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V8, 0x2d3, V47, V148, 0xa9059cbb, V166]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V8, 0x2d3, V47]

================================

Block 0x2d0
[0x2d0:0x2d2]
---
Predecessors: [0x26f]
Successors: [0x2d3]
---
0x2d0 JUMPDEST
0x2d1 POP
0x2d2 JUMP
---
0x2d0: JUMPDEST 
0x2d2: JUMP 0x2d3
---
Entry stack: [V8, 0x2d3, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x2d3
[0x2d3:0x2d4]
---
Predecessors: [0x2d0]
Successors: []
---
0x2d3 JUMPDEST
0x2d4 STOP
---
0x2d3: JUMPDEST 
0x2d4: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x2d5
[0x2d5:0x2e1]
---
Predecessors: [0xb]
Successors: [0x4f2]
---
0x2d5 JUMPDEST
0x2d6 PUSH2 0x2e2
0x2d9 PUSH1 0x4
0x2db DUP1
0x2dc POP
0x2dd POP
0x2de PUSH2 0x4f2
0x2e1 JUMP
---
0x2d5: JUMPDEST 
0x2d6: V194 = 0x2e2
0x2d9: V195 = 0x4
0x2de: V196 = 0x4f2
0x2e1: JUMP 0x4f2
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2e2]
Exit stack: [V8, 0x2e2]

================================

Block 0x2e2
[0x2e2:0x2e3]
---
Predecessors: [0x80b]
Successors: []
---
0x2e2 JUMPDEST
0x2e3 STOP
---
0x2e2: JUMPDEST 
0x2e3: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x2e4
[0x2e4:0x2f0]
---
Predecessors: [0x39]
Successors: [0x463]
---
0x2e4 JUMPDEST
0x2e5 PUSH2 0x2f1
0x2e8 PUSH1 0x4
0x2ea DUP1
0x2eb POP
0x2ec POP
0x2ed PUSH2 0x463
0x2f0 JUMP
---
0x2e4: JUMPDEST 
0x2e5: V197 = 0x2f1
0x2e8: V198 = 0x4
0x2ed: V199 = 0x463
0x2f0: JUMP 0x463
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2f1]
Exit stack: [V8, 0x2f1]

================================

Block 0x2f1
[0x2f1:0x306]
---
Predecessors: [0x463]
Successors: []
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 DUP1
0x2f6 DUP3
0x2f7 DUP2
0x2f8 MSTORE
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc SWAP2
0x2fd POP
0x2fe POP
0x2ff PUSH1 0x40
0x301 MLOAD
0x302 DUP1
0x303 SWAP2
0x304 SUB
0x305 SWAP1
0x306 RETURN
---
0x2f1: JUMPDEST 
0x2f2: V200 = 0x40
0x2f4: V201 = M[0x40]
0x2f8: M[V201] = V294
0x2f9: V202 = 0x20
0x2fb: V203 = ADD 0x20 V201
0x2ff: V204 = 0x40
0x301: V205 = M[0x40]
0x304: V206 = SUB V203 V205
0x306: RETURN V205 V206
---
Entry stack: [V8, 0x2f1, V294]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x2f1]

================================

Block 0x307
[0x307:0x313]
---
Predecessors: [0x44]
Successors: [0x42b]
---
0x307 JUMPDEST
0x308 PUSH2 0x314
0x30b PUSH1 0x4
0x30d DUP1
0x30e POP
0x30f POP
0x310 PUSH2 0x42b
0x313 JUMP
---
0x307: JUMPDEST 
0x308: V207 = 0x314
0x30b: V208 = 0x4
0x310: V209 = 0x42b
0x313: JUMP 0x42b
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x314]
Exit stack: [V8, 0x314]

================================

Block 0x314
[0x314:0x33f]
---
Predecessors: [0x42b]
Successors: []
---
0x314 JUMPDEST
0x315 PUSH1 0x40
0x317 MLOAD
0x318 DUP1
0x319 DUP3
0x31a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32f AND
0x330 DUP2
0x331 MSTORE
0x332 PUSH1 0x20
0x334 ADD
0x335 SWAP2
0x336 POP
0x337 POP
0x338 PUSH1 0x40
0x33a MLOAD
0x33b DUP1
0x33c SWAP2
0x33d SUB
0x33e SWAP1
0x33f RETURN
---
0x314: JUMPDEST 
0x315: V210 = 0x40
0x317: V211 = M[0x40]
0x31a: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x32f: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x331: M[V211] = V213
0x332: V214 = 0x20
0x334: V215 = ADD 0x20 V211
0x338: V216 = 0x40
0x33a: V217 = M[0x40]
0x33d: V218 = SUB V215 V217
0x33f: RETURN V217 V218
---
Entry stack: [V8, 0x314, V285]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x314]

================================

Block 0x340
[0x340:0x34c]
---
Predecessors: [0x4f]
Successors: [0x475]
---
0x340 JUMPDEST
0x341 PUSH2 0x34d
0x344 PUSH1 0x4
0x346 DUP1
0x347 POP
0x348 POP
0x349 PUSH2 0x475
0x34c JUMP
---
0x340: JUMPDEST 
0x341: V219 = 0x34d
0x344: V220 = 0x4
0x349: V221 = 0x475
0x34c: JUMP 0x475
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x34d]
Exit stack: [V8, 0x34d]

================================

Block 0x34d
[0x34d:0x378]
---
Predecessors: [0x475]
Successors: []
---
0x34d JUMPDEST
0x34e PUSH1 0x40
0x350 MLOAD
0x351 DUP1
0x352 DUP3
0x353 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x368 AND
0x369 DUP2
0x36a MSTORE
0x36b PUSH1 0x20
0x36d ADD
0x36e SWAP2
0x36f POP
0x370 POP
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP1
0x375 SWAP2
0x376 SUB
0x377 SWAP1
0x378 RETURN
---
0x34d: JUMPDEST 
0x34e: V222 = 0x40
0x350: V223 = M[0x40]
0x353: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x368: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x36a: M[V223] = V225
0x36b: V226 = 0x20
0x36d: V227 = ADD 0x20 V223
0x371: V228 = 0x40
0x373: V229 = M[0x40]
0x376: V230 = SUB V227 V229
0x378: RETURN V229 V230
---
Entry stack: [V8, 0x34d, V305]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x34d]

================================

Block 0x379
[0x379:0x385]
---
Predecessors: [0x5a]
Successors: [0x451]
---
0x379 JUMPDEST
0x37a PUSH2 0x386
0x37d PUSH1 0x4
0x37f DUP1
0x380 POP
0x381 POP
0x382 PUSH2 0x451
0x385 JUMP
---
0x379: JUMPDEST 
0x37a: V231 = 0x386
0x37d: V232 = 0x4
0x382: V233 = 0x451
0x385: JUMP 0x451
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x386]
Exit stack: [V8, 0x386]

================================

Block 0x386
[0x386:0x39b]
---
Predecessors: [0x451]
Successors: []
---
0x386 JUMPDEST
0x387 PUSH1 0x40
0x389 MLOAD
0x38a DUP1
0x38b DUP3
0x38c DUP2
0x38d MSTORE
0x38e PUSH1 0x20
0x390 ADD
0x391 SWAP2
0x392 POP
0x393 POP
0x394 PUSH1 0x40
0x396 MLOAD
0x397 DUP1
0x398 SWAP2
0x399 SUB
0x39a SWAP1
0x39b RETURN
---
0x386: JUMPDEST 
0x387: V234 = 0x40
0x389: V235 = M[0x40]
0x38d: M[V235] = V288
0x38e: V236 = 0x20
0x390: V237 = ADD 0x20 V235
0x394: V238 = 0x40
0x396: V239 = M[0x40]
0x399: V240 = SUB V237 V239
0x39b: RETURN V239 V240
---
Entry stack: [V8, 0x386, V288]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x386]

================================

Block 0x39c
[0x39c:0x3a8]
---
Predecessors: [0x65]
Successors: [0x45a]
---
0x39c JUMPDEST
0x39d PUSH2 0x3a9
0x3a0 PUSH1 0x4
0x3a2 DUP1
0x3a3 POP
0x3a4 POP
0x3a5 PUSH2 0x45a
0x3a8 JUMP
---
0x39c: JUMPDEST 
0x39d: V241 = 0x3a9
0x3a0: V242 = 0x4
0x3a5: V243 = 0x45a
0x3a8: JUMP 0x45a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x3a9]
Exit stack: [V8, 0x3a9]

================================

Block 0x3a9
[0x3a9:0x3be]
---
Predecessors: [0x45a]
Successors: []
---
0x3a9 JUMPDEST
0x3aa PUSH1 0x40
0x3ac MLOAD
0x3ad DUP1
0x3ae DUP3
0x3af DUP2
0x3b0 MSTORE
0x3b1 PUSH1 0x20
0x3b3 ADD
0x3b4 SWAP2
0x3b5 POP
0x3b6 POP
0x3b7 PUSH1 0x40
0x3b9 MLOAD
0x3ba DUP1
0x3bb SWAP2
0x3bc SUB
0x3bd SWAP1
0x3be RETURN
---
0x3a9: JUMPDEST 
0x3aa: V244 = 0x40
0x3ac: V245 = M[0x40]
0x3b0: M[V245] = V291
0x3b1: V246 = 0x20
0x3b3: V247 = ADD 0x20 V245
0x3b7: V248 = 0x40
0x3b9: V249 = M[0x40]
0x3bc: V250 = SUB V247 V249
0x3be: RETURN V249 V250
---
Entry stack: [V8, 0x3a9, V291]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x3a9]

================================

Block 0x3bf
[0x3bf:0x3cb]
---
Predecessors: [0x70]
Successors: [0x46c]
---
0x3bf JUMPDEST
0x3c0 PUSH2 0x3cc
0x3c3 PUSH1 0x4
0x3c5 DUP1
0x3c6 POP
0x3c7 POP
0x3c8 PUSH2 0x46c
0x3cb JUMP
---
0x3bf: JUMPDEST 
0x3c0: V251 = 0x3cc
0x3c3: V252 = 0x4
0x3c8: V253 = 0x46c
0x3cb: JUMP 0x46c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x3cc]
Exit stack: [V8, 0x3cc]

================================

Block 0x3cc
[0x3cc:0x3e1]
---
Predecessors: [0x46c]
Successors: []
---
0x3cc JUMPDEST
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 DUP1
0x3d1 DUP3
0x3d2 DUP2
0x3d3 MSTORE
0x3d4 PUSH1 0x20
0x3d6 ADD
0x3d7 SWAP2
0x3d8 POP
0x3d9 POP
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd DUP1
0x3de SWAP2
0x3df SUB
0x3e0 SWAP1
0x3e1 RETURN
---
0x3cc: JUMPDEST 
0x3cd: V254 = 0x40
0x3cf: V255 = M[0x40]
0x3d3: M[V255] = V297
0x3d4: V256 = 0x20
0x3d6: V257 = ADD 0x20 V255
0x3da: V258 = 0x40
0x3dc: V259 = M[0x40]
0x3df: V260 = SUB V257 V259
0x3e1: RETURN V259 V260
---
Entry stack: [V8, 0x3cc, V297]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x3cc]

================================

Block 0x3e2
[0x3e2:0x3f7]
---
Predecessors: [0x7b]
Successors: [0x49b]
---
0x3e2 JUMPDEST
0x3e3 PUSH2 0x3f8
0x3e6 PUSH1 0x4
0x3e8 DUP1
0x3e9 DUP1
0x3ea CALLDATALOAD
0x3eb SWAP1
0x3ec PUSH1 0x20
0x3ee ADD
0x3ef SWAP1
0x3f0 SWAP2
0x3f1 SWAP1
0x3f2 POP
0x3f3 POP
0x3f4 PUSH2 0x49b
0x3f7 JUMP
---
0x3e2: JUMPDEST 
0x3e3: V261 = 0x3f8
0x3e6: V262 = 0x4
0x3ea: V263 = CALLDATALOAD 0x4
0x3ec: V264 = 0x20
0x3ee: V265 = ADD 0x20 0x4
0x3f4: V266 = 0x49b
0x3f7: JUMP 0x49b
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x3f8, V263]
Exit stack: [V8, 0x3f8, V263]

================================

Block 0x3f8
[0x3f8:0x42a]
---
Predecessors: [0x4bb]
Successors: []
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP1
0x3fd DUP4
0x3fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x413 AND
0x414 DUP2
0x415 MSTORE
0x416 PUSH1 0x20
0x418 ADD
0x419 DUP3
0x41a DUP2
0x41b MSTORE
0x41c PUSH1 0x20
0x41e ADD
0x41f SWAP3
0x420 POP
0x421 POP
0x422 POP
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP1
0x427 SWAP2
0x428 SUB
0x429 SWAP1
0x42a RETURN
---
0x3f8: JUMPDEST 
0x3f9: V267 = 0x40
0x3fb: V268 = M[0x40]
0x3fe: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x413: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x415: M[V268] = V270
0x416: V271 = 0x20
0x418: V272 = ADD 0x20 V268
0x41b: M[V272] = V332
0x41c: V273 = 0x20
0x41e: V274 = ADD 0x20 V272
0x423: V275 = 0x40
0x425: V276 = M[0x40]
0x428: V277 = SUB V274 V276
0x42a: RETURN V276 V277
---
Entry stack: [V8, 0x3f8, V328, V332]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0x3f8]

================================

Block 0x42b
[0x42b:0x450]
---
Predecessors: [0x307]
Successors: [0x314]
---
0x42b JUMPDEST
0x42c PUSH1 0x0
0x42e PUSH1 0x0
0x430 SWAP1
0x431 SLOAD
0x432 SWAP1
0x433 PUSH2 0x100
0x436 EXP
0x437 SWAP1
0x438 DIV
0x439 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44e AND
0x44f DUP2
0x450 JUMP
---
0x42b: JUMPDEST 
0x42c: V278 = 0x0
0x42e: V279 = 0x0
0x431: V280 = S[0x0]
0x433: V281 = 0x100
0x436: V282 = EXP 0x100 0x0
0x438: V283 = DIV V280 0x1
0x439: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x44e: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x450: JUMP 0x314
---
Entry stack: [V8, 0x314]
Stack pops: 1
Stack additions: [S0, V285]
Exit stack: [V8, 0x314, V285]

================================

Block 0x451
[0x451:0x459]
---
Predecessors: [0x379]
Successors: [0x386]
---
0x451 JUMPDEST
0x452 PUSH1 0x1
0x454 PUSH1 0x0
0x456 POP
0x457 SLOAD
0x458 DUP2
0x459 JUMP
---
0x451: JUMPDEST 
0x452: V286 = 0x1
0x454: V287 = 0x0
0x457: V288 = S[0x1]
0x459: JUMP 0x386
---
Entry stack: [V8, 0x386]
Stack pops: 1
Stack additions: [S0, V288]
Exit stack: [V8, 0x386, V288]

================================

Block 0x45a
[0x45a:0x462]
---
Predecessors: [0x39c]
Successors: [0x3a9]
---
0x45a JUMPDEST
0x45b PUSH1 0x2
0x45d PUSH1 0x0
0x45f POP
0x460 SLOAD
0x461 DUP2
0x462 JUMP
---
0x45a: JUMPDEST 
0x45b: V289 = 0x2
0x45d: V290 = 0x0
0x460: V291 = S[0x2]
0x462: JUMP 0x3a9
---
Entry stack: [V8, 0x3a9]
Stack pops: 1
Stack additions: [S0, V291]
Exit stack: [V8, 0x3a9, V291]

================================

Block 0x463
[0x463:0x46b]
---
Predecessors: [0x2e4]
Successors: [0x2f1]
---
0x463 JUMPDEST
0x464 PUSH1 0x3
0x466 PUSH1 0x0
0x468 POP
0x469 SLOAD
0x46a DUP2
0x46b JUMP
---
0x463: JUMPDEST 
0x464: V292 = 0x3
0x466: V293 = 0x0
0x469: V294 = S[0x3]
0x46b: JUMP 0x2f1
---
Entry stack: [V8, 0x2f1]
Stack pops: 1
Stack additions: [S0, V294]
Exit stack: [V8, 0x2f1, V294]

================================

Block 0x46c
[0x46c:0x474]
---
Predecessors: [0x3bf]
Successors: [0x3cc]
---
0x46c JUMPDEST
0x46d PUSH1 0x4
0x46f PUSH1 0x0
0x471 POP
0x472 SLOAD
0x473 DUP2
0x474 JUMP
---
0x46c: JUMPDEST 
0x46d: V295 = 0x4
0x46f: V296 = 0x0
0x472: V297 = S[0x4]
0x474: JUMP 0x3cc
---
Entry stack: [V8, 0x3cc]
Stack pops: 1
Stack additions: [S0, V297]
Exit stack: [V8, 0x3cc, V297]

================================

Block 0x475
[0x475:0x49a]
---
Predecessors: [0x340]
Successors: [0x34d]
---
0x475 JUMPDEST
0x476 PUSH1 0x5
0x478 PUSH1 0x0
0x47a SWAP1
0x47b SLOAD
0x47c SWAP1
0x47d PUSH2 0x100
0x480 EXP
0x481 SWAP1
0x482 DIV
0x483 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x498 AND
0x499 DUP2
0x49a JUMP
---
0x475: JUMPDEST 
0x476: V298 = 0x5
0x478: V299 = 0x0
0x47b: V300 = S[0x5]
0x47d: V301 = 0x100
0x480: V302 = EXP 0x100 0x0
0x482: V303 = DIV V300 0x1
0x483: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x498: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x49a: JUMP 0x34d
---
Entry stack: [V8, 0x34d]
Stack pops: 1
Stack additions: [S0, V305]
Exit stack: [V8, 0x34d, V305]

================================

Block 0x49b
[0x49b:0x4aa]
---
Predecessors: [0x3e2]
Successors: [0x4ab]
---
0x49b JUMPDEST
0x49c PUSH1 0x6
0x49e PUSH1 0x0
0x4a0 POP
0x4a1 DUP2
0x4a2 DUP2
0x4a3 SLOAD
0x4a4 DUP2
0x4a5 LT
0x4a6 ISZERO
0x4a7 PUSH2 0x2
0x4aa JUMPI
---
0x49b: JUMPDEST 
0x49c: V306 = 0x6
0x49e: V307 = 0x0
0x4a3: V308 = S[0x6]
0x4a5: V309 = LT V263 V308
0x4a6: V310 = ISZERO V309
0x4a7: V311 = 0x2
0x4aa: THROWI V310
---
Entry stack: [V8, 0x3f8, V263]
Stack pops: 1
Stack additions: [S0, 0x6, S0]
Exit stack: [V8, 0x3f8, V263, 0x6, V263]

================================

Block 0x4ab
[0x4ab:0x4ba]
---
Predecessors: [0x49b]
Successors: [0x4bb]
---
0x4ab SWAP1
0x4ac PUSH1 0x0
0x4ae MSTORE
0x4af PUSH1 0x20
0x4b1 PUSH1 0x0
0x4b3 SHA3
0x4b4 SWAP1
0x4b5 PUSH1 0x2
0x4b7 MUL
0x4b8 ADD
0x4b9 PUSH1 0x0
---
0x4ac: V312 = 0x0
0x4ae: M[0x0] = 0x6
0x4af: V313 = 0x20
0x4b1: V314 = 0x0
0x4b3: V315 = SHA3 0x0 0x20
0x4b5: V316 = 0x2
0x4b7: V317 = MUL 0x2 V263
0x4b8: V318 = ADD V317 V315
0x4b9: V319 = 0x0
---
Entry stack: [V8, 0x3f8, V263, 0x6, V263]
Stack pops: 2
Stack additions: [V318, 0x0]
Exit stack: [V8, 0x3f8, V263, V318, 0x0]

================================

Block 0x4bb
[0x4bb:0x4f1]
---
Predecessors: [0x4ab]
Successors: [0x3f8]
---
0x4bb JUMPDEST
0x4bc SWAP2
0x4bd POP
0x4be SWAP1
0x4bf POP
0x4c0 DUP1
0x4c1 PUSH1 0x0
0x4c3 ADD
0x4c4 PUSH1 0x0
0x4c6 SWAP1
0x4c7 SLOAD
0x4c8 SWAP1
0x4c9 PUSH2 0x100
0x4cc EXP
0x4cd SWAP1
0x4ce DIV
0x4cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e4 AND
0x4e5 SWAP1
0x4e6 DUP1
0x4e7 PUSH1 0x1
0x4e9 ADD
0x4ea PUSH1 0x0
0x4ec POP
0x4ed SLOAD
0x4ee SWAP1
0x4ef POP
0x4f0 DUP3
0x4f1 JUMP
---
0x4bb: JUMPDEST 
0x4c1: V320 = 0x0
0x4c3: V321 = ADD 0x0 V318
0x4c4: V322 = 0x0
0x4c7: V323 = S[V321]
0x4c9: V324 = 0x100
0x4cc: V325 = EXP 0x100 0x0
0x4ce: V326 = DIV V323 0x1
0x4cf: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e4: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x4e7: V329 = 0x1
0x4e9: V330 = ADD 0x1 V318
0x4ea: V331 = 0x0
0x4ed: V332 = S[V330]
0x4f1: JUMP 0x3f8
---
Entry stack: [V8, 0x3f8, V263, V318, 0x0]
Stack pops: 4
Stack additions: [S3, V328, V332]
Exit stack: [V8, 0x3f8, V328, V332]

================================

Block 0x4f2
[0x4f2:0x502]
---
Predecessors: [0x2d5]
Successors: [0x503, 0x80a]
---
0x4f2 JUMPDEST
0x4f3 PUSH1 0x0
0x4f5 PUSH1 0x3
0x4f7 PUSH1 0x0
0x4f9 POP
0x4fa SLOAD
0x4fb TIMESTAMP
0x4fc LT
0x4fd ISZERO
0x4fe ISZERO
0x4ff PUSH2 0x80a
0x502 JUMPI
---
0x4f2: JUMPDEST 
0x4f3: V333 = 0x0
0x4f5: V334 = 0x3
0x4f7: V335 = 0x0
0x4fa: V336 = S[0x3]
0x4fb: V337 = TIMESTAMP
0x4fc: V338 = LT V337 V336
0x4fd: V339 = ISZERO V338
0x4fe: V340 = ISZERO V339
0x4ff: V341 = 0x80a
0x502: JUMPI 0x80a V340
---
Entry stack: [V8, 0x2e2]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V8, 0x2e2, 0x0]

================================

Block 0x503
[0x503:0x515]
---
Predecessors: [0x4f2]
Successors: [0x516, 0x5f9]
---
0x503 PUSH1 0x1
0x505 PUSH1 0x0
0x507 POP
0x508 SLOAD
0x509 PUSH1 0x2
0x50b PUSH1 0x0
0x50d POP
0x50e SLOAD
0x50f LT
0x510 ISZERO
0x511 ISZERO
0x512 PUSH2 0x5f9
0x515 JUMPI
---
0x503: V342 = 0x1
0x505: V343 = 0x0
0x508: V344 = S[0x1]
0x509: V345 = 0x2
0x50b: V346 = 0x0
0x50e: V347 = S[0x2]
0x50f: V348 = LT V347 V344
0x510: V349 = ISZERO V348
0x511: V350 = ISZERO V349
0x512: V351 = 0x5f9
0x515: JUMPI 0x5f9 V350
---
Entry stack: [V8, 0x2e2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2e2, 0x0]

================================

Block 0x516
[0x516:0x5f8]
---
Predecessors: [0x503]
Successors: [0x784]
---
0x516 PUSH1 0x0
0x518 PUSH1 0x0
0x51a SWAP1
0x51b SLOAD
0x51c SWAP1
0x51d PUSH2 0x100
0x520 EXP
0x521 SWAP1
0x522 DIV
0x523 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x538 AND
0x539 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54e AND
0x54f PUSH1 0x0
0x551 PUSH1 0x2
0x553 PUSH1 0x0
0x555 POP
0x556 SLOAD
0x557 PUSH1 0x40
0x559 MLOAD
0x55a DUP1
0x55b SWAP1
0x55c POP
0x55d PUSH1 0x0
0x55f PUSH1 0x40
0x561 MLOAD
0x562 DUP1
0x563 DUP4
0x564 SUB
0x565 DUP2
0x566 DUP6
0x567 DUP9
0x568 DUP9
0x569 CALL
0x56a SWAP4
0x56b POP
0x56c POP
0x56d POP
0x56e POP
0x56f POP
0x570 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x591 PUSH1 0x0
0x593 PUSH1 0x0
0x595 SWAP1
0x596 SLOAD
0x597 SWAP1
0x598 PUSH2 0x100
0x59b EXP
0x59c SWAP1
0x59d DIV
0x59e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b3 AND
0x5b4 PUSH1 0x2
0x5b6 PUSH1 0x0
0x5b8 POP
0x5b9 SLOAD
0x5ba PUSH1 0x0
0x5bc PUSH1 0x40
0x5be MLOAD
0x5bf DUP1
0x5c0 DUP5
0x5c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d6 AND
0x5d7 DUP2
0x5d8 MSTORE
0x5d9 PUSH1 0x20
0x5db ADD
0x5dc DUP4
0x5dd DUP2
0x5de MSTORE
0x5df PUSH1 0x20
0x5e1 ADD
0x5e2 DUP3
0x5e3 DUP2
0x5e4 MSTORE
0x5e5 PUSH1 0x20
0x5e7 ADD
0x5e8 SWAP4
0x5e9 POP
0x5ea POP
0x5eb POP
0x5ec POP
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 DUP1
0x5f1 SWAP2
0x5f2 SUB
0x5f3 SWAP1
0x5f4 LOG1
0x5f5 PUSH2 0x784
0x5f8 JUMP
---
0x516: V352 = 0x0
0x518: V353 = 0x0
0x51b: V354 = S[0x0]
0x51d: V355 = 0x100
0x520: V356 = EXP 0x100 0x0
0x522: V357 = DIV V354 0x1
0x523: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x538: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x539: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x54e: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x54f: V362 = 0x0
0x551: V363 = 0x2
0x553: V364 = 0x0
0x556: V365 = S[0x2]
0x557: V366 = 0x40
0x559: V367 = M[0x40]
0x55d: V368 = 0x0
0x55f: V369 = 0x40
0x561: V370 = M[0x40]
0x564: V371 = SUB V367 V370
0x569: V372 = CALL 0x0 V361 V365 V370 V371 V370 0x0
0x570: V373 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x591: V374 = 0x0
0x593: V375 = 0x0
0x596: V376 = S[0x0]
0x598: V377 = 0x100
0x59b: V378 = EXP 0x100 0x0
0x59d: V379 = DIV V376 0x1
0x59e: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b3: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x5b4: V382 = 0x2
0x5b6: V383 = 0x0
0x5b9: V384 = S[0x2]
0x5ba: V385 = 0x0
0x5bc: V386 = 0x40
0x5be: V387 = M[0x40]
0x5c1: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d6: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x5d8: M[V387] = V389
0x5d9: V390 = 0x20
0x5db: V391 = ADD 0x20 V387
0x5de: M[V391] = V384
0x5df: V392 = 0x20
0x5e1: V393 = ADD 0x20 V391
0x5e4: M[V393] = 0x0
0x5e5: V394 = 0x20
0x5e7: V395 = ADD 0x20 V393
0x5ed: V396 = 0x40
0x5ef: V397 = M[0x40]
0x5f2: V398 = SUB V395 V397
0x5f4: LOG V397 V398 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5f5: V399 = 0x784
0x5f8: JUMP 0x784
---
Entry stack: [V8, 0x2e2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2e2, 0x0]

================================

Block 0x5f9
[0x5f9:0x5fd]
---
Predecessors: [0x503]
Successors: [0x5fe]
---
0x5f9 JUMPDEST
0x5fa PUSH1 0x0
0x5fc SWAP1
0x5fd POP
---
0x5f9: JUMPDEST 
0x5fa: V400 = 0x0
---
Entry stack: [V8, 0x2e2, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V8, 0x2e2, 0x0]

================================

Block 0x5fe
[0x5fe:0x60e]
---
Predecessors: [0x5f9, 0x776]
Successors: [0x60f, 0x783]
---
0x5fe JUMPDEST
0x5ff PUSH1 0x6
0x601 PUSH1 0x0
0x603 POP
0x604 DUP1
0x605 SLOAD
0x606 SWAP1
0x607 POP
0x608 DUP2
0x609 LT
0x60a ISZERO
0x60b PUSH2 0x783
0x60e JUMPI
---
0x5fe: JUMPDEST 
0x5ff: V401 = 0x6
0x601: V402 = 0x0
0x605: V403 = S[0x6]
0x609: V404 = LT S0 V403
0x60a: V405 = ISZERO V404
0x60b: V406 = 0x783
0x60e: JUMPI 0x783 V405
---
Entry stack: [V8, 0x2e2, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x2e2, S0]

================================

Block 0x60f
[0x60f:0x61d]
---
Predecessors: [0x5fe]
Successors: [0x61e]
---
0x60f PUSH1 0x6
0x611 PUSH1 0x0
0x613 POP
0x614 DUP2
0x615 DUP2
0x616 SLOAD
0x617 DUP2
0x618 LT
0x619 ISZERO
0x61a PUSH2 0x2
0x61d JUMPI
---
0x60f: V407 = 0x6
0x611: V408 = 0x0
0x616: V409 = S[0x6]
0x618: V410 = LT S0 V409
0x619: V411 = ISZERO V410
0x61a: V412 = 0x2
0x61d: THROWI V411
---
Entry stack: [V8, 0x2e2, S0]
Stack pops: 1
Stack additions: [S0, 0x6, S0]
Exit stack: [V8, 0x2e2, S0, 0x6, S0]

================================

Block 0x61e
[0x61e:0x62d]
---
Predecessors: [0x60f]
Successors: [0x62e]
---
0x61e SWAP1
0x61f PUSH1 0x0
0x621 MSTORE
0x622 PUSH1 0x20
0x624 PUSH1 0x0
0x626 SHA3
0x627 SWAP1
0x628 PUSH1 0x2
0x62a MUL
0x62b ADD
0x62c PUSH1 0x0
---
0x61f: V413 = 0x0
0x621: M[0x0] = 0x6
0x622: V414 = 0x20
0x624: V415 = 0x0
0x626: V416 = SHA3 0x0 0x20
0x628: V417 = 0x2
0x62a: V418 = MUL 0x2 S0
0x62b: V419 = ADD V418 V416
0x62c: V420 = 0x0
---
Entry stack: [V8, 0x2e2, S2, 0x6, S0]
Stack pops: 2
Stack additions: [V419, 0x0]
Exit stack: [V8, 0x2e2, S2, V419, 0x0]

================================

Block 0x62e
[0x62e:0x67a]
---
Predecessors: [0x61e]
Successors: [0x67b]
---
0x62e JUMPDEST
0x62f POP
0x630 PUSH1 0x0
0x632 ADD
0x633 PUSH1 0x0
0x635 SWAP1
0x636 SLOAD
0x637 SWAP1
0x638 PUSH2 0x100
0x63b EXP
0x63c SWAP1
0x63d DIV
0x63e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x653 AND
0x654 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x669 AND
0x66a PUSH1 0x0
0x66c PUSH1 0x6
0x66e PUSH1 0x0
0x670 POP
0x671 DUP4
0x672 DUP2
0x673 SLOAD
0x674 DUP2
0x675 LT
0x676 ISZERO
0x677 PUSH2 0x2
0x67a JUMPI
---
0x62e: JUMPDEST 
0x630: V421 = 0x0
0x632: V422 = ADD 0x0 V419
0x633: V423 = 0x0
0x636: V424 = S[V422]
0x638: V425 = 0x100
0x63b: V426 = EXP 0x100 0x0
0x63d: V427 = DIV V424 0x1
0x63e: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x653: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x654: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x669: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x66a: V432 = 0x0
0x66c: V433 = 0x6
0x66e: V434 = 0x0
0x673: V435 = S[0x6]
0x675: V436 = LT S2 V435
0x676: V437 = ISZERO V436
0x677: V438 = 0x2
0x67a: THROWI V437
---
Entry stack: [V8, 0x2e2, S2, V419, 0x0]
Stack pops: 3
Stack additions: [S2, V431, 0x0, 0x6, S2]
Exit stack: [V8, 0x2e2, S2, V431, 0x0, 0x6, S2]

================================

Block 0x67b
[0x67b:0x68a]
---
Predecessors: [0x62e]
Successors: [0x68b]
---
0x67b SWAP1
0x67c PUSH1 0x0
0x67e MSTORE
0x67f PUSH1 0x20
0x681 PUSH1 0x0
0x683 SHA3
0x684 SWAP1
0x685 PUSH1 0x2
0x687 MUL
0x688 ADD
0x689 PUSH1 0x0
---
0x67c: V439 = 0x0
0x67e: M[0x0] = 0x6
0x67f: V440 = 0x20
0x681: V441 = 0x0
0x683: V442 = SHA3 0x0 0x20
0x685: V443 = 0x2
0x687: V444 = MUL 0x2 S0
0x688: V445 = ADD V444 V442
0x689: V446 = 0x0
---
Entry stack: [V8, 0x2e2, S4, V431, 0x0, 0x6, S0]
Stack pops: 2
Stack additions: [V445, 0x0]
Exit stack: [V8, 0x2e2, S4, V431, 0x0, V445, 0x0]

================================

Block 0x68b
[0x68b:0x6dc]
---
Predecessors: [0x67b]
Successors: [0x6dd]
---
0x68b JUMPDEST
0x68c POP
0x68d PUSH1 0x1
0x68f ADD
0x690 PUSH1 0x0
0x692 POP
0x693 SLOAD
0x694 PUSH1 0x40
0x696 MLOAD
0x697 DUP1
0x698 SWAP1
0x699 POP
0x69a PUSH1 0x0
0x69c PUSH1 0x40
0x69e MLOAD
0x69f DUP1
0x6a0 DUP4
0x6a1 SUB
0x6a2 DUP2
0x6a3 DUP6
0x6a4 DUP9
0x6a5 DUP9
0x6a6 CALL
0x6a7 SWAP4
0x6a8 POP
0x6a9 POP
0x6aa POP
0x6ab POP
0x6ac POP
0x6ad PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6ce PUSH1 0x6
0x6d0 PUSH1 0x0
0x6d2 POP
0x6d3 DUP3
0x6d4 DUP2
0x6d5 SLOAD
0x6d6 DUP2
0x6d7 LT
0x6d8 ISZERO
0x6d9 PUSH2 0x2
0x6dc JUMPI
---
0x68b: JUMPDEST 
0x68d: V447 = 0x1
0x68f: V448 = ADD 0x1 V445
0x690: V449 = 0x0
0x693: V450 = S[V448]
0x694: V451 = 0x40
0x696: V452 = M[0x40]
0x69a: V453 = 0x0
0x69c: V454 = 0x40
0x69e: V455 = M[0x40]
0x6a1: V456 = SUB V452 V455
0x6a6: V457 = CALL 0x0 V431 V450 V455 V456 V455 0x0
0x6ad: V458 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6ce: V459 = 0x6
0x6d0: V460 = 0x0
0x6d5: V461 = S[0x6]
0x6d7: V462 = LT S4 V461
0x6d8: V463 = ISZERO V462
0x6d9: V464 = 0x2
0x6dc: THROWI V463
---
Entry stack: [V8, 0x2e2, S4, V431, 0x0, V445, 0x0]
Stack pops: 5
Stack additions: [S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, 0x6, S4]
Exit stack: [V8, 0x2e2, S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, 0x6, S4]

================================

Block 0x6dd
[0x6dd:0x6ec]
---
Predecessors: [0x68b]
Successors: [0x6ed]
---
0x6dd SWAP1
0x6de PUSH1 0x0
0x6e0 MSTORE
0x6e1 PUSH1 0x20
0x6e3 PUSH1 0x0
0x6e5 SHA3
0x6e6 SWAP1
0x6e7 PUSH1 0x2
0x6e9 MUL
0x6ea ADD
0x6eb PUSH1 0x0
---
0x6de: V465 = 0x0
0x6e0: M[0x0] = 0x6
0x6e1: V466 = 0x20
0x6e3: V467 = 0x0
0x6e5: V468 = SHA3 0x0 0x20
0x6e7: V469 = 0x2
0x6e9: V470 = MUL 0x2 S0
0x6ea: V471 = ADD V470 V468
0x6eb: V472 = 0x0
---
Entry stack: [V8, 0x2e2, S3, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, 0x6, S0]
Stack pops: 2
Stack additions: [V471, 0x0]
Exit stack: [V8, 0x2e2, S3, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V471, 0x0]

================================

Block 0x6ed
[0x6ed:0x721]
---
Predecessors: [0x6dd]
Successors: [0x722]
---
0x6ed JUMPDEST
0x6ee POP
0x6ef PUSH1 0x0
0x6f1 ADD
0x6f2 PUSH1 0x0
0x6f4 SWAP1
0x6f5 SLOAD
0x6f6 SWAP1
0x6f7 PUSH2 0x100
0x6fa EXP
0x6fb SWAP1
0x6fc DIV
0x6fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x712 AND
0x713 PUSH1 0x6
0x715 PUSH1 0x0
0x717 POP
0x718 DUP4
0x719 DUP2
0x71a SLOAD
0x71b DUP2
0x71c LT
0x71d ISZERO
0x71e PUSH2 0x2
0x721 JUMPI
---
0x6ed: JUMPDEST 
0x6ef: V473 = 0x0
0x6f1: V474 = ADD 0x0 V471
0x6f2: V475 = 0x0
0x6f5: V476 = S[V474]
0x6f7: V477 = 0x100
0x6fa: V478 = EXP 0x100 0x0
0x6fc: V479 = DIV V476 0x1
0x6fd: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x712: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x713: V482 = 0x6
0x715: V483 = 0x0
0x71a: V484 = S[0x6]
0x71c: V485 = LT S3 V484
0x71d: V486 = ISZERO V485
0x71e: V487 = 0x2
0x721: THROWI V486
---
Entry stack: [V8, 0x2e2, S3, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V471, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V481, 0x6, S3]
Exit stack: [V8, 0x2e2, S3, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V481, 0x6, S3]

================================

Block 0x722
[0x722:0x731]
---
Predecessors: [0x6ed]
Successors: [0x732]
---
0x722 SWAP1
0x723 PUSH1 0x0
0x725 MSTORE
0x726 PUSH1 0x20
0x728 PUSH1 0x0
0x72a SHA3
0x72b SWAP1
0x72c PUSH1 0x2
0x72e MUL
0x72f ADD
0x730 PUSH1 0x0
---
0x723: V488 = 0x0
0x725: M[0x0] = 0x6
0x726: V489 = 0x20
0x728: V490 = 0x0
0x72a: V491 = SHA3 0x0 0x20
0x72c: V492 = 0x2
0x72e: V493 = MUL 0x2 S0
0x72f: V494 = ADD V493 V491
0x730: V495 = 0x0
---
Entry stack: [V8, 0x2e2, S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V481, 0x6, S0]
Stack pops: 2
Stack additions: [V494, 0x0]
Exit stack: [V8, 0x2e2, S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V481, V494, 0x0]

================================

Block 0x732
[0x732:0x775]
---
Predecessors: [0x722]
Successors: [0x776]
---
0x732 JUMPDEST
0x733 POP
0x734 PUSH1 0x1
0x736 ADD
0x737 PUSH1 0x0
0x739 POP
0x73a SLOAD
0x73b PUSH1 0x0
0x73d PUSH1 0x40
0x73f MLOAD
0x740 DUP1
0x741 DUP5
0x742 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x757 AND
0x758 DUP2
0x759 MSTORE
0x75a PUSH1 0x20
0x75c ADD
0x75d DUP4
0x75e DUP2
0x75f MSTORE
0x760 PUSH1 0x20
0x762 ADD
0x763 DUP3
0x764 DUP2
0x765 MSTORE
0x766 PUSH1 0x20
0x768 ADD
0x769 SWAP4
0x76a POP
0x76b POP
0x76c POP
0x76d POP
0x76e PUSH1 0x40
0x770 MLOAD
0x771 DUP1
0x772 SWAP2
0x773 SUB
0x774 SWAP1
0x775 LOG1
---
0x732: JUMPDEST 
0x734: V496 = 0x1
0x736: V497 = ADD 0x1 V494
0x737: V498 = 0x0
0x73a: V499 = S[V497]
0x73b: V500 = 0x0
0x73d: V501 = 0x40
0x73f: V502 = M[0x40]
0x742: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x757: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x759: M[V502] = V504
0x75a: V505 = 0x20
0x75c: V506 = ADD 0x20 V502
0x75f: M[V506] = V499
0x760: V507 = 0x20
0x762: V508 = ADD 0x20 V506
0x765: M[V508] = 0x0
0x766: V509 = 0x20
0x768: V510 = ADD 0x20 V508
0x76e: V511 = 0x40
0x770: V512 = M[0x40]
0x773: V513 = SUB V510 V512
0x775: LOG V512 V513 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V8, 0x2e2, S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V481, V494, 0x0]
Stack pops: 4
Stack additions: []
Exit stack: [V8, 0x2e2, S4]

================================

Block 0x776
[0x776:0x782]
---
Predecessors: [0x732]
Successors: [0x5fe]
---
0x776 JUMPDEST
0x777 DUP1
0x778 PUSH1 0x1
0x77a ADD
0x77b SWAP1
0x77c POP
0x77d DUP1
0x77e POP
0x77f PUSH2 0x5fe
0x782 JUMP
---
0x776: JUMPDEST 
0x778: V514 = 0x1
0x77a: V515 = ADD 0x1 S0
0x77f: V516 = 0x5fe
0x782: JUMP 0x5fe
---
Entry stack: [V8, 0x2e2, S0]
Stack pops: 1
Stack additions: [V515]
Exit stack: [V8, 0x2e2, V515]

================================

Block 0x783
[0x783:0x783]
---
Predecessors: [0x5fe]
Successors: [0x784]
---
0x783 JUMPDEST
---
0x783: JUMPDEST 
---
Entry stack: [V8, 0x2e2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2e2, S0]

================================

Block 0x784
[0x784:0x809]
---
Predecessors: [0x516, 0x783]
Successors: [0x80a]
---
0x784 JUMPDEST
0x785 PUSH1 0x0
0x787 PUSH1 0x0
0x789 SWAP1
0x78a SLOAD
0x78b SWAP1
0x78c PUSH2 0x100
0x78f EXP
0x790 SWAP1
0x791 DIV
0x792 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a7 AND
0x7a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bd AND
0x7be PUSH1 0x0
0x7c0 ADDRESS
0x7c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d6 AND
0x7d7 BALANCE
0x7d8 PUSH1 0x40
0x7da MLOAD
0x7db DUP1
0x7dc SWAP1
0x7dd POP
0x7de PUSH1 0x0
0x7e0 PUSH1 0x40
0x7e2 MLOAD
0x7e3 DUP1
0x7e4 DUP4
0x7e5 SUB
0x7e6 DUP2
0x7e7 DUP6
0x7e8 DUP9
0x7e9 DUP9
0x7ea CALL
0x7eb SWAP4
0x7ec POP
0x7ed POP
0x7ee POP
0x7ef POP
0x7f0 POP
0x7f1 PUSH1 0x1
0x7f3 PUSH1 0x7
0x7f5 PUSH1 0x0
0x7f7 PUSH2 0x100
0x7fa EXP
0x7fb DUP2
0x7fc SLOAD
0x7fd DUP2
0x7fe PUSH1 0xff
0x800 MUL
0x801 NOT
0x802 AND
0x803 SWAP1
0x804 DUP4
0x805 MUL
0x806 OR
0x807 SWAP1
0x808 SSTORE
0x809 POP
---
0x784: JUMPDEST 
0x785: V517 = 0x0
0x787: V518 = 0x0
0x78a: V519 = S[0x0]
0x78c: V520 = 0x100
0x78f: V521 = EXP 0x100 0x0
0x791: V522 = DIV V519 0x1
0x792: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a7: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x7a8: V525 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bd: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x7be: V527 = 0x0
0x7c0: V528 = ADDRESS
0x7c1: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d6: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x7d7: V531 = BALANCE V530
0x7d8: V532 = 0x40
0x7da: V533 = M[0x40]
0x7de: V534 = 0x0
0x7e0: V535 = 0x40
0x7e2: V536 = M[0x40]
0x7e5: V537 = SUB V533 V536
0x7ea: V538 = CALL 0x0 V526 V531 V536 V537 V536 0x0
0x7f1: V539 = 0x1
0x7f3: V540 = 0x7
0x7f5: V541 = 0x0
0x7f7: V542 = 0x100
0x7fa: V543 = EXP 0x100 0x0
0x7fc: V544 = S[0x7]
0x7fe: V545 = 0xff
0x800: V546 = MUL 0xff 0x1
0x801: V547 = NOT 0xff
0x802: V548 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V544
0x805: V549 = MUL 0x1 0x1
0x806: V550 = OR 0x1 V548
0x808: S[0x7] = V550
---
Entry stack: [V8, 0x2e2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2e2, S0]

================================

Block 0x80a
[0x80a:0x80a]
---
Predecessors: [0x4f2, 0x784]
Successors: [0x80b]
---
0x80a JUMPDEST
---
0x80a: JUMPDEST 
---
Entry stack: [V8, 0x2e2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2e2, S0]

================================

Block 0x80b
[0x80b:0x80d]
---
Predecessors: [0x80a]
Successors: [0x2e2]
---
0x80b JUMPDEST
0x80c POP
0x80d JUMP
---
0x80b: JUMPDEST 
0x80d: JUMP 0x2e2
---
Entry stack: [V8, 0x2e2, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x2d5
Exit block: 0x2e2
Body: 0x2d5, 0x2e2, 0x4f2, 0x503, 0x516, 0x5f9, 0x5fe, 0x60f, 0x61e, 0x62e, 0x67b, 0x68b, 0x6dd, 0x6ed, 0x722, 0x732, 0x776, 0x783, 0x784, 0x80a, 0x80b

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x2e4
Exit block: 0x2f1
Body: 0x2e4, 0x2f1, 0x463

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x307
Exit block: 0x314
Body: 0x307, 0x314, 0x42b

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x340
Exit block: 0x34d
Body: 0x340, 0x34d, 0x475

Function 4:
Public function signature: 0x7a3a0e84
Entry block: 0x379
Exit block: 0x386
Body: 0x379, 0x386, 0x451

Function 5:
Public function signature: 0x7b3e5e7b
Entry block: 0x39c
Exit block: 0x3a9
Body: 0x39c, 0x3a9, 0x45a

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x3bf
Exit block: 0x3cc
Body: 0x3bf, 0x3cc, 0x46c

Function 7:
Public function signature: 0xdc0d3dff
Entry block: 0x3e2
Exit block: 0x3f8
Body: 0x3e2, 0x3f8, 0x49b, 0x4ab, 0x4bb

Function 8:
Public fallback function
Entry block: 0x86
Exit block: 0x2d3
Body: 0x86, 0x8a, 0x8e, 0xa6, 0xaa, 0xe8, 0x106, 0x10f, 0x14b, 0x14f, 0x150, 0x15d, 0x16d, 0x26f, 0x2d0, 0x2d3

