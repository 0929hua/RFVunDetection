args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/1/100320.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x59]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x59
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x59
0x40: JUMPI 0x59 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x6e]
---
0x41 DUP1
0x42 PUSH4 0x41c0e1b5
0x47 EQ
0x48 PUSH2 0x6e
0x4b JUMPI
---
0x42: V15 = 0x41c0e1b5
0x47: V16 = EQ 0x41c0e1b5 V11
0x48: V17 = 0x6e
0x4b: JUMPI 0x6e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x83]
---
0x4c DUP1
0x4d PUSH4 0xbf91cbb5
0x52 EQ
0x53 PUSH2 0x83
0x56 JUMPI
---
0x4d: V18 = 0xbf91cbb5
0x52: V19 = EQ 0xbf91cbb5 V11
0x53: V20 = 0x83
0x56: JUMPI 0x83 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x58]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 STOP
---
0x57: JUMPDEST 
0x58: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0x5f]
---
Predecessors: [0xd]
Successors: [0x60, 0x64]
---
0x59 JUMPDEST
0x5a CALLVALUE
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x59: JUMPDEST 
0x5a: V21 = CALLVALUE
0x5b: V22 = ISZERO V21
0x5c: V23 = 0x64
0x5f: JUMPI 0x64 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x59]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V24 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0x59]
Successors: [0x8d]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0x8d
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V25 = 0x6c
0x68: V26 = 0x8d
0x6b: JUMP 0x8d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x155]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x74]
---
Predecessors: [0x41]
Successors: [0x75, 0x79]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 ISZERO
0x71 PUSH2 0x79
0x74 JUMPI
---
0x6e: JUMPDEST 
0x6f: V27 = CALLVALUE
0x70: V28 = ISZERO V27
0x71: V29 = 0x79
0x74: JUMPI 0x79 V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x6e]
Successors: []
---
0x75 PUSH1 0x0
0x77 DUP1
0x78 REVERT
---
0x75: V30 = 0x0
0x78: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0x6e]
Successors: [0x157]
---
0x79 JUMPDEST
0x7a PUSH2 0x81
0x7d PUSH2 0x157
0x80 JUMP
---
0x79: JUMPDEST 
0x7a: V31 = 0x81
0x7d: V32 = 0x157
0x80: JUMP 0x157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x81]
Exit stack: [V11, 0x81]

================================

Block 0x81
[0x81:0x82]
---
Predecessors: [0x1ec]
Successors: []
---
0x81 JUMPDEST
0x82 STOP
---
0x81: JUMPDEST 
0x82: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8a]
---
Predecessors: [0x4c]
Successors: [0x1ee]
---
0x83 JUMPDEST
0x84 PUSH2 0x8b
0x87 PUSH2 0x1ee
0x8a JUMP
---
0x83: JUMPDEST 
0x84: V33 = 0x8b
0x87: V34 = 0x1ee
0x8a: JUMP 0x1ee
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8b]
Exit stack: [V11, 0x8b]

================================

Block 0x8b
[0x8b:0x8c]
---
Predecessors: [0x256]
Successors: []
---
0x8b JUMPDEST
0x8c STOP
---
0x8b: JUMPDEST 
0x8c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0xe4]
---
Predecessors: [0x64]
Successors: [0xe5, 0xe9]
---
0x8d JUMPDEST
0x8e PUSH1 0x1
0x90 PUSH1 0x0
0x92 SWAP1
0x93 SLOAD
0x94 SWAP1
0x95 PUSH2 0x100
0x98 EXP
0x99 SWAP1
0x9a DIV
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 AND
0xc7 CALLER
0xc8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd AND
0xde EQ
0xdf ISZERO
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0x8d: JUMPDEST 
0x8e: V35 = 0x1
0x90: V36 = 0x0
0x93: V37 = S[0x1]
0x95: V38 = 0x100
0x98: V39 = EXP 0x100 0x0
0x9a: V40 = DIV V37 0x1
0x9b: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xb1: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xc7: V45 = CALLER
0xc8: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xde: V48 = EQ V47 V44
0xdf: V49 = ISZERO V48
0xe0: V50 = ISZERO V49
0xe1: V51 = 0xe9
0xe4: JUMPI 0xe9 V50
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0x8d]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V52 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0xe9
[0xe9:0xf9]
---
Predecessors: [0x8d]
Successors: [0xfa, 0xfe]
---
0xe9 JUMPDEST
0xea PUSH3 0x3f480
0xee PUSH1 0x0
0xf0 SLOAD
0xf1 ADD
0xf2 TIMESTAMP
0xf3 GT
0xf4 ISZERO
0xf5 ISZERO
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xe9: JUMPDEST 
0xea: V53 = 0x3f480
0xee: V54 = 0x0
0xf0: V55 = S[0x0]
0xf1: V56 = ADD V55 0x3f480
0xf2: V57 = TIMESTAMP
0xf3: V58 = GT V57 V56
0xf4: V59 = ISZERO V58
0xf5: V60 = ISZERO V59
0xf6: V61 = 0xfe
0xf9: JUMPI 0xfe V60
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xe9]
Successors: []
---
0xfa PUSH1 0x0
0xfc DUP1
0xfd REVERT
---
0xfa: V62 = 0x0
0xfd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0xfe
[0xfe:0x150]
---
Predecessors: [0xe9]
Successors: [0x151, 0x155]
---
0xfe JUMPDEST
0xff CALLER
0x100 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115 AND
0x116 PUSH2 0x8fc
0x119 ADDRESS
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 BALANCE
0x131 SWAP1
0x132 DUP2
0x133 ISZERO
0x134 MUL
0x135 SWAP1
0x136 PUSH1 0x40
0x138 MLOAD
0x139 PUSH1 0x0
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP4
0x140 SUB
0x141 DUP2
0x142 DUP6
0x143 DUP9
0x144 DUP9
0x145 CALL
0x146 SWAP4
0x147 POP
0x148 POP
0x149 POP
0x14a POP
0x14b ISZERO
0x14c ISZERO
0x14d PUSH2 0x155
0x150 JUMPI
---
0xfe: JUMPDEST 
0xff: V63 = CALLER
0x100: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x115: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x116: V66 = 0x8fc
0x119: V67 = ADDRESS
0x11a: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x130: V70 = BALANCE V69
0x133: V71 = ISZERO V70
0x134: V72 = MUL V71 0x8fc
0x136: V73 = 0x40
0x138: V74 = M[0x40]
0x139: V75 = 0x0
0x13b: V76 = 0x40
0x13d: V77 = M[0x40]
0x140: V78 = SUB V74 V77
0x145: V79 = CALL V72 V65 V70 V77 V78 V77 0x0
0x14b: V80 = ISZERO V79
0x14c: V81 = ISZERO V80
0x14d: V82 = 0x155
0x150: JUMPI 0x155 V81
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x151
[0x151:0x154]
---
Predecessors: [0xfe]
Successors: []
---
0x151 PUSH1 0x0
0x153 DUP1
0x154 REVERT
---
0x151: V83 = 0x0
0x154: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x155
[0x155:0x156]
---
Predecessors: [0xfe]
Successors: [0x6c]
---
0x155 JUMPDEST
0x156 JUMP
---
0x155: JUMPDEST 
0x156: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x157
[0x157:0x1ae]
---
Predecessors: [0x79]
Successors: [0x1af, 0x1b3]
---
0x157 JUMPDEST
0x158 PUSH1 0x1
0x15a PUSH1 0x0
0x15c SWAP1
0x15d SLOAD
0x15e SWAP1
0x15f PUSH2 0x100
0x162 EXP
0x163 SWAP1
0x164 DIV
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 AND
0x191 CALLER
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 EQ
0x1a9 ISZERO
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x157: JUMPDEST 
0x158: V84 = 0x1
0x15a: V85 = 0x0
0x15d: V86 = S[0x1]
0x15f: V87 = 0x100
0x162: V88 = EXP 0x100 0x0
0x164: V89 = DIV V86 0x1
0x165: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x17b: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x191: V94 = CALLER
0x192: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1a8: V97 = EQ V96 V93
0x1a9: V98 = ISZERO V97
0x1aa: V99 = ISZERO V98
0x1ab: V100 = 0x1b3
0x1ae: JUMPI 0x1b3 V99
---
Entry stack: [V11, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x81]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x157]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V101 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x81]

================================

Block 0x1b3
[0x1b3:0x1d3]
---
Predecessors: [0x157]
Successors: [0x1d4, 0x1ec]
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x0
0x1b6 ADDRESS
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd BALANCE
0x1ce EQ
0x1cf ISZERO
0x1d0 PUSH2 0x1ec
0x1d3 JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V102 = 0x0
0x1b6: V103 = ADDRESS
0x1b7: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1cd: V106 = BALANCE V105
0x1ce: V107 = EQ V106 0x0
0x1cf: V108 = ISZERO V107
0x1d0: V109 = 0x1ec
0x1d3: JUMPI 0x1ec V108
---
Entry stack: [V11, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x81]

================================

Block 0x1d4
[0x1d4:0x1eb]
---
Predecessors: [0x1b3]
Successors: []
---
0x1d4 CALLER
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea AND
0x1eb SELFDESTRUCT
---
0x1d4: V110 = CALLER
0x1d5: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1eb: SELFDESTRUCT V112
---
Entry stack: [V11, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x81]

================================

Block 0x1ec
[0x1ec:0x1ed]
---
Predecessors: [0x1b3]
Successors: [0x81]
---
0x1ec JUMPDEST
0x1ed JUMP
---
0x1ec: JUMPDEST 
0x1ed: JUMP 0x81
---
Entry stack: [V11, 0x81]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ee
[0x1ee:0x20d]
---
Predecessors: [0x83]
Successors: [0x20e, 0x256]
---
0x1ee JUMPDEST
0x1ef ADDRESS
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 AND
0x206 BALANCE
0x207 CALLVALUE
0x208 GT
0x209 ISZERO
0x20a PUSH2 0x256
0x20d JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V113 = ADDRESS
0x1f0: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x205: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x206: V116 = BALANCE V115
0x207: V117 = CALLVALUE
0x208: V118 = GT V117 V116
0x209: V119 = ISZERO V118
0x20a: V120 = 0x256
0x20d: JUMPI 0x256 V119
---
Entry stack: [V11, 0x8b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8b]

================================

Block 0x20e
[0x20e:0x255]
---
Predecessors: [0x1ee]
Successors: [0x256]
---
0x20e CALLER
0x20f PUSH1 0x1
0x211 PUSH1 0x0
0x213 PUSH2 0x100
0x216 EXP
0x217 DUP2
0x218 SLOAD
0x219 DUP2
0x21a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22f MUL
0x230 NOT
0x231 AND
0x232 SWAP1
0x233 DUP4
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a MUL
0x24b OR
0x24c SWAP1
0x24d SSTORE
0x24e POP
0x24f TIMESTAMP
0x250 PUSH1 0x0
0x252 DUP2
0x253 SWAP1
0x254 SSTORE
0x255 POP
---
0x20e: V121 = CALLER
0x20f: V122 = 0x1
0x211: V123 = 0x0
0x213: V124 = 0x100
0x216: V125 = EXP 0x100 0x0
0x218: V126 = S[0x1]
0x21a: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V128 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x230: V129 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x231: V130 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V126
0x234: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x24a: V133 = MUL V132 0x1
0x24b: V134 = OR V133 V130
0x24d: S[0x1] = V134
0x24f: V135 = TIMESTAMP
0x250: V136 = 0x0
0x254: S[0x0] = V135
---
Entry stack: [V11, 0x8b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8b]

================================

Block 0x256
[0x256:0x257]
---
Predecessors: [0x1ee, 0x20e]
Successors: [0x8b]
---
0x256 JUMPDEST
0x257 JUMP
---
0x256: JUMPDEST 
0x257: JUMP 0x8b
---
Entry stack: [V11, 0x8b]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x258
[0x258:0x283]
---
Predecessors: []
Successors: []
---
0x258 STOP
0x259 LOG1
0x25a PUSH6 0x627a7a723058
0x261 SHA3
0x262 MISSING 0xfb
0x263 PUSH2 0xb78d
0x266 OR
0x267 MISSING 0xc
0x268 MISSING 0x27
0x269 MISSING 0xa8
0x26a SHR
0x26b MISSING 0xfc
0x26c MISSING 0xcb
0x26d MISSING 0xb3
0x26e ADDRESS
0x26f DELEGATECALL
0x270 MISSING 0x4b
0x271 MISSING 0xd8
0x272 MISSING 0xba
0x273 GASPRICE
0x274 LOG4
0x275 MISSING 0xf9
0x276 COINBASE
0x277 MSTORE
0x278 STOP
0x279 MISSING 0xa8
0x27a MISSING 0x48
0x27b MISSING 0xb3
0x27c MISSING 0xc5
0x27d SWAP4
0x27e MISSING 0xe6
0x27f GASLIMIT
0x280 SWAP1
0x281 GT
0x282 STOP
0x283 MISSING 0x29
---
0x258: STOP 
0x259: LOG S0 S1 S2
0x25a: V137 = 0x627a7a723058
0x261: V138 = SHA3 0x627a7a723058 S3
0x262: MISSING 0xfb
0x263: V139 = 0xb78d
0x266: V140 = OR 0xb78d S0
0x267: MISSING 0xc
0x268: MISSING 0x27
0x269: MISSING 0xa8
0x26a: V141 = SHR S0 S1
0x26b: MISSING 0xfc
0x26c: MISSING 0xcb
0x26d: MISSING 0xb3
0x26e: V142 = ADDRESS
0x26f: V143 = DELEGATECALL V142 S0 S1 S2 S3 S4
0x270: MISSING 0x4b
0x271: MISSING 0xd8
0x272: MISSING 0xba
0x273: V144 = GASPRICE
0x274: LOG V144 S0 S1 S2 S3 S4
0x275: MISSING 0xf9
0x276: V145 = COINBASE
0x277: M[V145] = S0
0x278: STOP 
0x279: MISSING 0xa8
0x27a: MISSING 0x48
0x27b: MISSING 0xb3
0x27c: MISSING 0xc5
0x27e: MISSING 0xe6
0x27f: V146 = GASLIMIT
0x281: V147 = GT S0 V146
0x282: STOP 
0x283: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V138, V140, V141, V143, S4, S1, S2, S3, S0, V147]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x59
Exit block: 0x6c
Body: 0x59, 0x60, 0x64, 0x6c, 0x8d, 0xe5, 0xe9, 0xfa, 0xfe, 0x151, 0x155

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x6e
Exit block: 0x81
Body: 0x6e, 0x75, 0x79, 0x81, 0x157, 0x1af, 0x1b3, 0x1d4, 0x1ec

Function 2:
Public function signature: 0xbf91cbb5
Entry block: 0x83
Exit block: 0x8b
Body: 0x83, 0x8b, 0x1ee, 0x20e, 0x256

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

