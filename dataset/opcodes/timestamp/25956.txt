Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6db]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x27ebcf0e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6db
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x27ebcf0e
0x20: V14 = EQ V12 0x27ebcf0e
0x21: V15 = 0x6db
0x24: JUMPI 0x6db V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x70a]
---
0x25 DUP1
0x26 PUSH4 0x30c74e04
0x2b EQ
0x2c PUSH2 0x70a
0x2f JUMPI
---
0x26: V16 = 0x30c74e04
0x2b: V17 = EQ 0x30c74e04 V12
0x2c: V18 = 0x70a
0x2f: JUMPI 0x70a V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x731]
---
0x30 DUP1
0x31 PUSH4 0x519ee19e
0x36 EQ
0x37 PUSH2 0x731
0x3a JUMPI
---
0x31: V19 = 0x519ee19e
0x36: V20 = EQ 0x519ee19e V12
0x37: V21 = 0x731
0x3a: JUMPI 0x731 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x756]
---
0x3b DUP1
0x3c PUSH4 0x7fa8c158
0x41 EQ
0x42 PUSH2 0x756
0x45 JUMPI
---
0x3c: V22 = 0x7fa8c158
0x41: V23 = EQ 0x7fa8c158 V12
0x42: V24 = 0x756
0x45: JUMPI 0x756 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x77b]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x77b
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x77b
0x50: JUMPI 0x77b V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x7aa]
---
0x51 DUP1
0x52 PUSH4 0x96c5406d
0x57 EQ
0x58 PUSH2 0x7aa
0x5b JUMPI
---
0x52: V28 = 0x96c5406d
0x57: V29 = EQ 0x96c5406d V12
0x58: V30 = 0x7aa
0x5b: JUMPI 0x7aa V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x7cf]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x7cf
0x66 JUMPI
---
0x5d: V31 = 0xa035b1fe
0x62: V32 = EQ 0xa035b1fe V12
0x63: V33 = 0x7cf
0x66: JUMPI 0x7cf V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x7f4]
---
0x67 DUP1
0x68 PUSH4 0xb44eccc9
0x6d EQ
0x6e PUSH2 0x7f4
0x71 JUMPI
---
0x68: V34 = 0xb44eccc9
0x6d: V35 = EQ 0xb44eccc9 V12
0x6e: V36 = 0x7f4
0x71: JUMPI 0x7f4 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x819]
---
0x72 DUP1
0x73 PUSH4 0xc8e569a8
0x78 EQ
0x79 PUSH2 0x819
0x7c JUMPI
---
0x73: V37 = 0xc8e569a8
0x78: V38 = EQ 0xc8e569a8 V12
0x79: V39 = 0x819
0x7c: JUMPI 0x819 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x83e]
---
0x7d DUP1
0x7e PUSH4 0xccb07cef
0x83 EQ
0x84 PUSH2 0x83e
0x87 JUMPI
---
0x7e: V40 = 0xccb07cef
0x83: V41 = EQ 0xccb07cef V12
0x84: V42 = 0x83e
0x87: JUMPI 0x83e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x0, 0x7d]
Successors: [0x89]
---
0x88 JUMPDEST
---
0x88: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x9a]
---
Predecessors: [0x88]
Successors: [0x9b, 0xaa]
---
0x89 JUMPDEST
0x8a PUSH1 0x0
0x8c DUP1
0x8d PUSH1 0x0
0x8f PUSH4 0x59f8b318
0x94 TIMESTAMP
0x95 GT
0x96 ISZERO
0x97 PUSH2 0xaa
0x9a JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = 0x0
0x8d: V44 = 0x0
0x8f: V45 = 0x59f8b318
0x94: V46 = TIMESTAMP
0x95: V47 = GT V46 0x59f8b318
0x96: V48 = ISZERO V47
0x97: V49 = 0xaa
0x9a: JUMPI 0xaa V48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x9b
[0x9b:0xa9]
---
Predecessors: [0x89]
Successors: [0xc2]
---
0x9b PUSH7 0x254db1c2244000
0xa3 PUSH1 0x4
0xa5 SSTORE
0xa6 PUSH2 0xc2
0xa9 JUMP
---
0x9b: V50 = 0x254db1c2244000
0xa3: V51 = 0x4
0xa5: S[0x4] = 0x254db1c2244000
0xa6: V52 = 0xc2
0xa9: JUMP 0xc2
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xaa
[0xaa:0xb6]
---
Predecessors: [0x89]
Successors: [0xb7, 0xc2]
---
0xaa JUMPDEST
0xab PUSH4 0x59f8b0c0
0xb0 TIMESTAMP
0xb1 GT
0xb2 ISZERO
0xb3 PUSH2 0xc2
0xb6 JUMPI
---
0xaa: JUMPDEST 
0xab: V53 = 0x59f8b0c0
0xb0: V54 = TIMESTAMP
0xb1: V55 = GT V54 0x59f8b0c0
0xb2: V56 = ISZERO V55
0xb3: V57 = 0xc2
0xb6: JUMPI 0xc2 V56
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xaa]
Successors: [0xc2]
---
0xb7 PUSH7 0x18de76816d8000
0xbf PUSH1 0x4
0xc1 SSTORE
---
0xb7: V58 = 0x18de76816d8000
0xbf: V59 = 0x4
0xc1: S[0x4] = 0x18de76816d8000
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xc2
[0xc2:0xc2]
---
Predecessors: [0x9b, 0xaa, 0xb7]
Successors: [0xc3]
---
0xc2 JUMPDEST
---
0xc2: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xc3
[0xc3:0x119]
---
Predecessors: [0xc2]
Successors: [0x11a, 0x11e]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 SLOAD
0xc8 PUSH1 0x1
0xca PUSH1 0xa0
0xcc PUSH1 0x2
0xce EXP
0xcf SUB
0xd0 AND
0xd1 SWAP1
0xd2 PUSH4 0x70a08231
0xd7 SWAP1
0xd8 ADDRESS
0xd9 SWAP1
0xda PUSH1 0x40
0xdc MLOAD
0xdd PUSH1 0x20
0xdf ADD
0xe0 MSTORE
0xe1 PUSH1 0x40
0xe3 MLOAD
0xe4 PUSH1 0xe0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 PUSH4 0xffffffff
0xee DUP5
0xef AND
0xf0 MUL
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x1
0xf5 PUSH1 0xa0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa SUB
0xfb SWAP1
0xfc SWAP2
0xfd AND
0xfe PUSH1 0x4
0x100 DUP3
0x101 ADD
0x102 MSTORE
0x103 PUSH1 0x24
0x105 ADD
0x106 PUSH1 0x20
0x108 PUSH1 0x40
0x10a MLOAD
0x10b DUP1
0x10c DUP4
0x10d SUB
0x10e DUP2
0x10f PUSH1 0x0
0x111 DUP8
0x112 DUP1
0x113 EXTCODESIZE
0x114 ISZERO
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0xc3: JUMPDEST 
0xc4: V60 = 0x0
0xc7: V61 = S[0x0]
0xc8: V62 = 0x1
0xca: V63 = 0xa0
0xcc: V64 = 0x2
0xce: V65 = EXP 0x2 0xa0
0xcf: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xd2: V68 = 0x70a08231
0xd8: V69 = ADDRESS
0xda: V70 = 0x40
0xdc: V71 = M[0x40]
0xdd: V72 = 0x20
0xdf: V73 = ADD 0x20 V71
0xe0: M[V73] = 0x0
0xe1: V74 = 0x40
0xe3: V75 = M[0x40]
0xe4: V76 = 0xe0
0xe6: V77 = 0x2
0xe8: V78 = EXP 0x2 0xe0
0xe9: V79 = 0xffffffff
0xef: V80 = AND 0x70a08231 0xffffffff
0xf0: V81 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xf2: M[V75] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xf3: V82 = 0x1
0xf5: V83 = 0xa0
0xf7: V84 = 0x2
0xf9: V85 = EXP 0x2 0xa0
0xfa: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd: V87 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0xfe: V88 = 0x4
0x101: V89 = ADD V75 0x4
0x102: M[V89] = V87
0x103: V90 = 0x24
0x105: V91 = ADD 0x24 V75
0x106: V92 = 0x20
0x108: V93 = 0x40
0x10a: V94 = M[0x40]
0x10d: V95 = SUB V91 V94
0x10f: V96 = 0x0
0x113: V97 = EXTCODESIZE V67
0x114: V98 = ISZERO V97
0x115: V99 = ISZERO V98
0x116: V100 = 0x11e
0x119: JUMPI 0x11e V99
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]
Exit stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0xc3]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V101 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]

================================

Block 0x11e
[0x11e:0x12a]
---
Predecessors: [0xc3]
Successors: [0x12b, 0x12f]
---
0x11e JUMPDEST
0x11f PUSH2 0x2c6
0x122 GAS
0x123 SUB
0x124 CALL
0x125 ISZERO
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x11e: JUMPDEST 
0x11f: V102 = 0x2c6
0x122: V103 = GAS
0x123: V104 = SUB V103 0x2c6
0x124: V105 = CALL V104 V67 0x0 V94 V95 V94 0x20
0x125: V106 = ISZERO V105
0x126: V107 = ISZERO V106
0x127: V108 = 0x12f
0x12a: JUMPI 0x12f V107
---
Entry stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x11e]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V109 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91]

================================

Block 0x12f
[0x12f:0x145]
---
Predecessors: [0x11e]
Successors: [0x146, 0x17c]
---
0x12f JUMPDEST
0x130 POP
0x131 POP
0x132 POP
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 MLOAD
0x138 PUSH1 0x7
0x13a SSTORE
0x13b POP
0x13c PUSH1 0x1
0x13e SLOAD
0x13f TIMESTAMP
0x140 LT
0x141 ISZERO
0x142 PUSH2 0x17c
0x145 JUMPI
---
0x12f: JUMPDEST 
0x133: V110 = 0x40
0x135: V111 = M[0x40]
0x137: V112 = M[V111]
0x138: V113 = 0x7
0x13a: S[0x7] = V112
0x13c: V114 = 0x1
0x13e: V115 = S[0x1]
0x13f: V116 = TIMESTAMP
0x140: V117 = LT V116 V115
0x141: V118 = ISZERO V117
0x142: V119 = 0x17c
0x145: JUMPI 0x17c V118
---
Entry stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x146
[0x146:0x172]
---
Predecessors: [0x12f]
Successors: [0x173, 0x177]
---
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e CALLER
0x14f AND
0x150 CALLVALUE
0x151 DUP1
0x152 ISZERO
0x153 PUSH2 0x8fc
0x156 MUL
0x157 SWAP1
0x158 PUSH1 0x40
0x15a MLOAD
0x15b PUSH1 0x0
0x15d PUSH1 0x40
0x15f MLOAD
0x160 DUP1
0x161 DUP4
0x162 SUB
0x163 DUP2
0x164 DUP6
0x165 DUP9
0x166 DUP9
0x167 CALL
0x168 SWAP4
0x169 POP
0x16a POP
0x16b POP
0x16c POP
0x16d ISZERO
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x146: V120 = 0x1
0x148: V121 = 0xa0
0x14a: V122 = 0x2
0x14c: V123 = EXP 0x2 0xa0
0x14d: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14e: V125 = CALLER
0x14f: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x150: V127 = CALLVALUE
0x152: V128 = ISZERO V127
0x153: V129 = 0x8fc
0x156: V130 = MUL 0x8fc V128
0x158: V131 = 0x40
0x15a: V132 = M[0x40]
0x15b: V133 = 0x0
0x15d: V134 = 0x40
0x15f: V135 = M[0x40]
0x162: V136 = SUB V132 V135
0x167: V137 = CALL V130 V126 V127 V135 V136 V135 0x0
0x16d: V138 = ISZERO V137
0x16e: V139 = ISZERO V138
0x16f: V140 = 0x177
0x172: JUMPI 0x177 V139
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x146]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V141 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x177
[0x177:0x17b]
---
Predecessors: [0x146, 0x1b8, 0x356, 0x4aa]
Successors: [0x662]
---
0x177 JUMPDEST
0x178 PUSH2 0x662
0x17b JUMP
---
0x177: JUMPDEST 
0x178: V142 = 0x662
0x17b: JUMP 0x662
---
Entry stack: [V12, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, 0x0]

================================

Block 0x17c
[0x17c:0x186]
---
Predecessors: [0x12f]
Successors: [0x187, 0x34a]
---
0x17c JUMPDEST
0x17d PUSH1 0x3
0x17f SLOAD
0x180 TIMESTAMP
0x181 GT
0x182 ISZERO
0x183 PUSH2 0x34a
0x186 JUMPI
---
0x17c: JUMPDEST 
0x17d: V143 = 0x3
0x17f: V144 = S[0x3]
0x180: V145 = TIMESTAMP
0x181: V146 = GT V145 V144
0x182: V147 = ISZERO V146
0x183: V148 = 0x34a
0x186: JUMPI 0x34a V147
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x187
[0x187:0x1b3]
---
Predecessors: [0x17c]
Successors: [0x1b4, 0x1b8]
---
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f CALLER
0x190 AND
0x191 CALLVALUE
0x192 DUP1
0x193 ISZERO
0x194 PUSH2 0x8fc
0x197 MUL
0x198 SWAP1
0x199 PUSH1 0x40
0x19b MLOAD
0x19c PUSH1 0x0
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 DUP4
0x1a3 SUB
0x1a4 DUP2
0x1a5 DUP6
0x1a6 DUP9
0x1a7 DUP9
0x1a8 CALL
0x1a9 SWAP4
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad POP
0x1ae ISZERO
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x187: V149 = 0x1
0x189: V150 = 0xa0
0x18b: V151 = 0x2
0x18d: V152 = EXP 0x2 0xa0
0x18e: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V154 = CALLER
0x190: V155 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x191: V156 = CALLVALUE
0x193: V157 = ISZERO V156
0x194: V158 = 0x8fc
0x197: V159 = MUL 0x8fc V157
0x199: V160 = 0x40
0x19b: V161 = M[0x40]
0x19c: V162 = 0x0
0x19e: V163 = 0x40
0x1a0: V164 = M[0x40]
0x1a3: V165 = SUB V161 V164
0x1a8: V166 = CALL V159 V155 V156 V164 V165 V164 0x0
0x1ae: V167 = ISZERO V166
0x1af: V168 = ISZERO V167
0x1b0: V169 = 0x1b8
0x1b3: JUMPI 0x1b8 V168
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x187]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V170 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1b8
[0x1b8:0x1c9]
---
Predecessors: [0x187]
Successors: [0x177, 0x1ca]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x8
0x1bb SLOAD
0x1bc PUSH2 0x100
0x1bf SWAP1
0x1c0 DIV
0x1c1 PUSH1 0xff
0x1c3 AND
0x1c4 ISZERO
0x1c5 ISZERO
0x1c6 PUSH2 0x177
0x1c9 JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V171 = 0x8
0x1bb: V172 = S[0x8]
0x1bc: V173 = 0x100
0x1c0: V174 = DIV V172 0x100
0x1c1: V175 = 0xff
0x1c3: V176 = AND 0xff V174
0x1c4: V177 = ISZERO V176
0x1c5: V178 = ISZERO V177
0x1c6: V179 = 0x177
0x1c9: JUMPI 0x177 V178
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1ca
[0x1ca:0x23d]
---
Predecessors: [0x1b8]
Successors: [0x23e, 0x242]
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd SLOAD
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 AND
0x1d7 SWAP1
0x1d8 PUSH4 0xa9059cbb
0x1dd SWAP1
0x1de PUSH20 0x1f5c9ccfa511df548da8448530e2639bdddf5370
0x1f3 SWAP1
0x1f4 DUP4
0x1f5 SWAP1
0x1f6 PUSH4 0x70a08231
0x1fb SWAP1
0x1fc ADDRESS
0x1fd SWAP1
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 PUSH1 0x20
0x203 ADD
0x204 MSTORE
0x205 PUSH1 0x40
0x207 MLOAD
0x208 PUSH1 0xe0
0x20a PUSH1 0x2
0x20c EXP
0x20d PUSH4 0xffffffff
0x212 DUP5
0x213 AND
0x214 MUL
0x215 DUP2
0x216 MSTORE
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f SWAP1
0x220 SWAP2
0x221 AND
0x222 PUSH1 0x4
0x224 DUP3
0x225 ADD
0x226 MSTORE
0x227 PUSH1 0x24
0x229 ADD
0x22a PUSH1 0x20
0x22c PUSH1 0x40
0x22e MLOAD
0x22f DUP1
0x230 DUP4
0x231 SUB
0x232 DUP2
0x233 PUSH1 0x0
0x235 DUP8
0x236 DUP1
0x237 EXTCODESIZE
0x238 ISZERO
0x239 ISZERO
0x23a PUSH2 0x242
0x23d JUMPI
---
0x1ca: V180 = 0x0
0x1cd: V181 = S[0x0]
0x1ce: V182 = 0x1
0x1d0: V183 = 0xa0
0x1d2: V184 = 0x2
0x1d4: V185 = EXP 0x2 0xa0
0x1d5: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x1d8: V188 = 0xa9059cbb
0x1de: V189 = 0x1f5c9ccfa511df548da8448530e2639bdddf5370
0x1f6: V190 = 0x70a08231
0x1fc: V191 = ADDRESS
0x1fe: V192 = 0x40
0x200: V193 = M[0x40]
0x201: V194 = 0x20
0x203: V195 = ADD 0x20 V193
0x204: M[V195] = 0x0
0x205: V196 = 0x40
0x207: V197 = M[0x40]
0x208: V198 = 0xe0
0x20a: V199 = 0x2
0x20c: V200 = EXP 0x2 0xe0
0x20d: V201 = 0xffffffff
0x213: V202 = AND 0x70a08231 0xffffffff
0x214: V203 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x216: M[V197] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x217: V204 = 0x1
0x219: V205 = 0xa0
0x21b: V206 = 0x2
0x21d: V207 = EXP 0x2 0xa0
0x21e: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V209 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x222: V210 = 0x4
0x225: V211 = ADD V197 0x4
0x226: M[V211] = V209
0x227: V212 = 0x24
0x229: V213 = ADD 0x24 V197
0x22a: V214 = 0x20
0x22c: V215 = 0x40
0x22e: V216 = M[0x40]
0x231: V217 = SUB V213 V216
0x233: V218 = 0x0
0x237: V219 = EXTCODESIZE V187
0x238: V220 = ISZERO V219
0x239: V221 = ISZERO V220
0x23a: V222 = 0x242
0x23d: JUMPI 0x242 V221
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V187, 0xa9059cbb, 0x1f5c9ccfa511df548da8448530e2639bdddf5370, V187, 0x70a08231, V213, 0x20, V216, V217, V216, 0x0, V187]
Exit stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, 0x1f5c9ccfa511df548da8448530e2639bdddf5370, V187, 0x70a08231, V213, 0x20, V216, V217, V216, 0x0, V187]

================================

Block 0x23e
[0x23e:0x241]
---
Predecessors: [0x1ca]
Successors: []
---
0x23e PUSH1 0x0
0x240 DUP1
0x241 REVERT
---
0x23e: V223 = 0x0
0x241: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, 0x1f5c9ccfa511df548da8448530e2639bdddf5370, V187, 0x70a08231, V213, 0x20, V216, V217, V216, 0x0, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, 0x1f5c9ccfa511df548da8448530e2639bdddf5370, V187, 0x70a08231, V213, 0x20, V216, V217, V216, 0x0, V187]

================================

Block 0x242
[0x242:0x24e]
---
Predecessors: [0x1ca]
Successors: [0x24f, 0x253]
---
0x242 JUMPDEST
0x243 PUSH2 0x2c6
0x246 GAS
0x247 SUB
0x248 CALL
0x249 ISZERO
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x242: JUMPDEST 
0x243: V224 = 0x2c6
0x246: V225 = GAS
0x247: V226 = SUB V225 0x2c6
0x248: V227 = CALL V226 V187 0x0 V216 V217 V216 0x20
0x249: V228 = ISZERO V227
0x24a: V229 = ISZERO V228
0x24b: V230 = 0x253
0x24e: JUMPI 0x253 V229
---
Entry stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, 0x1f5c9ccfa511df548da8448530e2639bdddf5370, V187, 0x70a08231, V213, 0x20, V216, V217, V216, 0x0, V187]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, 0x1f5c9ccfa511df548da8448530e2639bdddf5370, V187, 0x70a08231, V213]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x242]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V231 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, 0x1f5c9ccfa511df548da8448530e2639bdddf5370, V187, 0x70a08231, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, 0x1f5c9ccfa511df548da8448530e2639bdddf5370, V187, 0x70a08231, V213]

================================

Block 0x253
[0x253:0x29b]
---
Predecessors: [0x242]
Successors: [0x29c, 0x2a0]
---
0x253 JUMPDEST
0x254 POP
0x255 POP
0x256 POP
0x257 PUSH1 0x40
0x259 MLOAD
0x25a DUP1
0x25b MLOAD
0x25c SWAP1
0x25d POP
0x25e PUSH1 0x40
0x260 MLOAD
0x261 PUSH1 0xe0
0x263 PUSH1 0x2
0x265 EXP
0x266 PUSH4 0xffffffff
0x26b DUP6
0x26c AND
0x26d MUL
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x1
0x272 PUSH1 0xa0
0x274 PUSH1 0x2
0x276 EXP
0x277 SUB
0x278 SWAP1
0x279 SWAP3
0x27a AND
0x27b PUSH1 0x4
0x27d DUP4
0x27e ADD
0x27f MSTORE
0x280 PUSH1 0x24
0x282 DUP3
0x283 ADD
0x284 MSTORE
0x285 PUSH1 0x44
0x287 ADD
0x288 PUSH1 0x0
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP1
0x28e DUP4
0x28f SUB
0x290 DUP2
0x291 PUSH1 0x0
0x293 DUP8
0x294 DUP1
0x295 EXTCODESIZE
0x296 ISZERO
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x253: JUMPDEST 
0x257: V232 = 0x40
0x259: V233 = M[0x40]
0x25b: V234 = M[V233]
0x25e: V235 = 0x40
0x260: V236 = M[0x40]
0x261: V237 = 0xe0
0x263: V238 = 0x2
0x265: V239 = EXP 0x2 0xe0
0x266: V240 = 0xffffffff
0x26c: V241 = AND 0xa9059cbb 0xffffffff
0x26d: V242 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x26f: M[V236] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x270: V243 = 0x1
0x272: V244 = 0xa0
0x274: V245 = 0x2
0x276: V246 = EXP 0x2 0xa0
0x277: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27a: V248 = AND 0x1f5c9ccfa511df548da8448530e2639bdddf5370 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V249 = 0x4
0x27e: V250 = ADD V236 0x4
0x27f: M[V250] = 0x1f5c9ccfa511df548da8448530e2639bdddf5370
0x280: V251 = 0x24
0x283: V252 = ADD V236 0x24
0x284: M[V252] = V234
0x285: V253 = 0x44
0x287: V254 = ADD 0x44 V236
0x288: V255 = 0x0
0x28a: V256 = 0x40
0x28c: V257 = M[0x40]
0x28f: V258 = SUB V254 V257
0x291: V259 = 0x0
0x295: V260 = EXTCODESIZE V187
0x296: V261 = ISZERO V260
0x297: V262 = ISZERO V261
0x298: V263 = 0x2a0
0x29b: JUMPI 0x2a0 V262
---
Entry stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, 0x1f5c9ccfa511df548da8448530e2639bdddf5370, V187, 0x70a08231, V213]
Stack pops: 6
Stack additions: [S5, S4, V254, 0x0, V257, V258, V257, 0x0, S5]
Exit stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, V254, 0x0, V257, V258, V257, 0x0, V187]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x253]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V264 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, V254, 0x0, V257, V258, V257, 0x0, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, V254, 0x0, V257, V258, V257, 0x0, V187]

================================

Block 0x2a0
[0x2a0:0x2ac]
---
Predecessors: [0x253]
Successors: [0x2ad, 0x2b1]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x2c6
0x2a4 GAS
0x2a5 SUB
0x2a6 CALL
0x2a7 ISZERO
0x2a8 ISZERO
0x2a9 PUSH2 0x2b1
0x2ac JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V265 = 0x2c6
0x2a4: V266 = GAS
0x2a5: V267 = SUB V266 0x2c6
0x2a6: V268 = CALL V267 V187 0x0 V257 V258 V257 0x0
0x2a7: V269 = ISZERO V268
0x2a8: V270 = ISZERO V269
0x2a9: V271 = 0x2b1
0x2ac: JUMPI 0x2b1 V270
---
Entry stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, V254, 0x0, V257, V258, V257, 0x0, V187]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, V254]

================================

Block 0x2ad
[0x2ad:0x2b0]
---
Predecessors: [0x2a0]
Successors: []
---
0x2ad PUSH1 0x0
0x2af DUP1
0x2b0 REVERT
---
0x2ad: V272 = 0x0
0x2b0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, V254]

================================

Block 0x2b1
[0x2b1:0x30a]
---
Predecessors: [0x2a0]
Successors: [0x30b, 0x30f]
---
0x2b1 JUMPDEST
0x2b2 POP
0x2b3 POP
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 SLOAD
0x2b8 PUSH1 0x1
0x2ba PUSH1 0xa0
0x2bc PUSH1 0x2
0x2be EXP
0x2bf SUB
0x2c0 AND
0x2c1 SWAP2
0x2c2 POP
0x2c3 PUSH4 0x70a08231
0x2c8 SWAP1
0x2c9 ADDRESS
0x2ca SWAP1
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce PUSH1 0x20
0x2d0 ADD
0x2d1 MSTORE
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 PUSH1 0xe0
0x2d7 PUSH1 0x2
0x2d9 EXP
0x2da PUSH4 0xffffffff
0x2df DUP5
0x2e0 AND
0x2e1 MUL
0x2e2 DUP2
0x2e3 MSTORE
0x2e4 PUSH1 0x1
0x2e6 PUSH1 0xa0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb SUB
0x2ec SWAP1
0x2ed SWAP2
0x2ee AND
0x2ef PUSH1 0x4
0x2f1 DUP3
0x2f2 ADD
0x2f3 MSTORE
0x2f4 PUSH1 0x24
0x2f6 ADD
0x2f7 PUSH1 0x20
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd DUP4
0x2fe SUB
0x2ff DUP2
0x300 PUSH1 0x0
0x302 DUP8
0x303 DUP1
0x304 EXTCODESIZE
0x305 ISZERO
0x306 ISZERO
0x307 PUSH2 0x30f
0x30a JUMPI
---
0x2b1: JUMPDEST 
0x2b4: V273 = 0x0
0x2b7: V274 = S[0x0]
0x2b8: V275 = 0x1
0x2ba: V276 = 0xa0
0x2bc: V277 = 0x2
0x2be: V278 = EXP 0x2 0xa0
0x2bf: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c0: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x2c3: V281 = 0x70a08231
0x2c9: V282 = ADDRESS
0x2cb: V283 = 0x40
0x2cd: V284 = M[0x40]
0x2ce: V285 = 0x20
0x2d0: V286 = ADD 0x20 V284
0x2d1: M[V286] = 0x0
0x2d2: V287 = 0x40
0x2d4: V288 = M[0x40]
0x2d5: V289 = 0xe0
0x2d7: V290 = 0x2
0x2d9: V291 = EXP 0x2 0xe0
0x2da: V292 = 0xffffffff
0x2e0: V293 = AND 0x70a08231 0xffffffff
0x2e1: V294 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2e3: M[V288] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2e4: V295 = 0x1
0x2e6: V296 = 0xa0
0x2e8: V297 = 0x2
0x2ea: V298 = EXP 0x2 0xa0
0x2eb: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ee: V300 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x2ef: V301 = 0x4
0x2f2: V302 = ADD V288 0x4
0x2f3: M[V302] = V300
0x2f4: V303 = 0x24
0x2f6: V304 = ADD 0x24 V288
0x2f7: V305 = 0x20
0x2f9: V306 = 0x40
0x2fb: V307 = M[0x40]
0x2fe: V308 = SUB V304 V307
0x300: V309 = 0x0
0x304: V310 = EXTCODESIZE V280
0x305: V311 = ISZERO V310
0x306: V312 = ISZERO V311
0x307: V313 = 0x30f
0x30a: JUMPI 0x30f V312
---
Entry stack: [V12, 0x0, 0x0, 0x0, V187, 0xa9059cbb, V254]
Stack pops: 3
Stack additions: [V280, 0x70a08231, V304, 0x20, V307, V308, V307, 0x0, V280]
Exit stack: [V12, 0x0, 0x0, 0x0, V280, 0x70a08231, V304, 0x20, V307, V308, V307, 0x0, V280]

================================

Block 0x30b
[0x30b:0x30e]
---
Predecessors: [0x2b1]
Successors: []
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
---
0x30b: V314 = 0x0
0x30e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V280, 0x70a08231, V304, 0x20, V307, V308, V307, 0x0, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V280, 0x70a08231, V304, 0x20, V307, V308, V307, 0x0, V280]

================================

Block 0x30f
[0x30f:0x31b]
---
Predecessors: [0x2b1]
Successors: [0x31c, 0x320]
---
0x30f JUMPDEST
0x310 PUSH2 0x2c6
0x313 GAS
0x314 SUB
0x315 CALL
0x316 ISZERO
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x30f: JUMPDEST 
0x310: V315 = 0x2c6
0x313: V316 = GAS
0x314: V317 = SUB V316 0x2c6
0x315: V318 = CALL V317 V280 0x0 V307 V308 V307 0x20
0x316: V319 = ISZERO V318
0x317: V320 = ISZERO V319
0x318: V321 = 0x320
0x31b: JUMPI 0x320 V320
---
Entry stack: [V12, 0x0, 0x0, 0x0, V280, 0x70a08231, V304, 0x20, V307, V308, V307, 0x0, V280]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V280, 0x70a08231, V304]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x30f]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V322 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V280, 0x70a08231, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V280, 0x70a08231, V304]

================================

Block 0x320
[0x320:0x344]
---
Predecessors: [0x30f]
Successors: [0x345]
---
0x320 JUMPDEST
0x321 POP
0x322 POP
0x323 POP
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 MLOAD
0x329 PUSH1 0x7
0x32b SSTORE
0x32c POP
0x32d PUSH1 0x8
0x32f DUP1
0x330 SLOAD
0x331 PUSH1 0xff
0x333 NOT
0x334 PUSH2 0xff00
0x337 NOT
0x338 SWAP1
0x339 SWAP2
0x33a AND
0x33b PUSH2 0x100
0x33e OR
0x33f AND
0x340 PUSH1 0x1
0x342 OR
0x343 SWAP1
0x344 SSTORE
---
0x320: JUMPDEST 
0x324: V323 = 0x40
0x326: V324 = M[0x40]
0x328: V325 = M[V324]
0x329: V326 = 0x7
0x32b: S[0x7] = V325
0x32d: V327 = 0x8
0x330: V328 = S[0x8]
0x331: V329 = 0xff
0x333: V330 = NOT 0xff
0x334: V331 = 0xff00
0x337: V332 = NOT 0xff00
0x33a: V333 = AND V328 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x33b: V334 = 0x100
0x33e: V335 = OR 0x100 V333
0x33f: V336 = AND V335 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x340: V337 = 0x1
0x342: V338 = OR 0x1 V336
0x344: S[0x8] = V338
---
Entry stack: [V12, 0x0, 0x0, 0x0, V280, 0x70a08231, V304]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x345
[0x345:0x349]
---
Predecessors: [0x320]
Successors: [0x662]
---
0x345 JUMPDEST
0x346 PUSH2 0x662
0x349 JUMP
---
0x345: JUMPDEST 
0x346: V339 = 0x662
0x349: JUMP 0x662
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x34a
[0x34a:0x355]
---
Predecessors: [0x17c]
Successors: [0x356, 0x38c]
---
0x34a JUMPDEST
0x34b PUSH1 0x8
0x34d SLOAD
0x34e PUSH1 0xff
0x350 AND
0x351 ISZERO
0x352 PUSH2 0x38c
0x355 JUMPI
---
0x34a: JUMPDEST 
0x34b: V340 = 0x8
0x34d: V341 = S[0x8]
0x34e: V342 = 0xff
0x350: V343 = AND 0xff V341
0x351: V344 = ISZERO V343
0x352: V345 = 0x38c
0x355: JUMPI 0x38c V344
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x356
[0x356:0x382]
---
Predecessors: [0x34a]
Successors: [0x177, 0x383]
---
0x356 PUSH1 0x1
0x358 PUSH1 0xa0
0x35a PUSH1 0x2
0x35c EXP
0x35d SUB
0x35e CALLER
0x35f AND
0x360 CALLVALUE
0x361 DUP1
0x362 ISZERO
0x363 PUSH2 0x8fc
0x366 MUL
0x367 SWAP1
0x368 PUSH1 0x40
0x36a MLOAD
0x36b PUSH1 0x0
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 DUP4
0x372 SUB
0x373 DUP2
0x374 DUP6
0x375 DUP9
0x376 DUP9
0x377 CALL
0x378 SWAP4
0x379 POP
0x37a POP
0x37b POP
0x37c POP
0x37d ISZERO
0x37e ISZERO
0x37f PUSH2 0x177
0x382 JUMPI
---
0x356: V346 = 0x1
0x358: V347 = 0xa0
0x35a: V348 = 0x2
0x35c: V349 = EXP 0x2 0xa0
0x35d: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35e: V351 = CALLER
0x35f: V352 = AND V351 0xffffffffffffffffffffffffffffffffffffffff
0x360: V353 = CALLVALUE
0x362: V354 = ISZERO V353
0x363: V355 = 0x8fc
0x366: V356 = MUL 0x8fc V354
0x368: V357 = 0x40
0x36a: V358 = M[0x40]
0x36b: V359 = 0x0
0x36d: V360 = 0x40
0x36f: V361 = M[0x40]
0x372: V362 = SUB V358 V361
0x377: V363 = CALL V356 V352 V353 V361 V362 V361 0x0
0x37d: V364 = ISZERO V363
0x37e: V365 = ISZERO V364
0x37f: V366 = 0x177
0x382: JUMPI 0x177 V365
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x356]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V367 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x387
[0x387:0x38b]
---
Predecessors: []
Successors: [0x662]
---
0x387 JUMPDEST
0x388 PUSH2 0x662
0x38b JUMP
---
0x387: JUMPDEST 
0x388: V368 = 0x662
0x38b: JUMP 0x662
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x38c
[0x38c:0x39a]
---
Predecessors: [0x34a]
Successors: [0x39b, 0x39c]
---
0x38c JUMPDEST
0x38d PUSH1 0x5
0x38f SLOAD
0x390 PUSH1 0x4
0x392 SLOAD
0x393 CALLVALUE
0x394 DUP2
0x395 ISZERO
0x396 ISZERO
0x397 PUSH2 0x39c
0x39a JUMPI
---
0x38c: JUMPDEST 
0x38d: V369 = 0x5
0x38f: V370 = S[0x5]
0x390: V371 = 0x4
0x392: V372 = S[0x4]
0x393: V373 = CALLVALUE
0x395: V374 = ISZERO V372
0x396: V375 = ISZERO V374
0x397: V376 = 0x39c
0x39a: JUMPI 0x39c V375
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V370, V372, V373]
Exit stack: [V12, 0x0, 0x0, 0x0, V370, V372, V373]

================================

Block 0x39b
[0x39b:0x39b]
---
Predecessors: [0x38c]
Successors: []
---
0x39b INVALID
---
0x39b: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V370, V372, V373]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V370, V372, V373]

================================

Block 0x39c
[0x39c:0x3a8]
---
Predecessors: [0x38c]
Successors: [0x3a9, 0x3ad]
---
0x39c JUMPDEST
0x39d DIV
0x39e MUL
0x39f SWAP3
0x3a0 POP
0x3a1 PUSH1 0x0
0x3a3 DUP4
0x3a4 GT
0x3a5 PUSH2 0x3ad
0x3a8 JUMPI
---
0x39c: JUMPDEST 
0x39d: V377 = DIV V373 V372
0x39e: V378 = MUL V377 V370
0x3a1: V379 = 0x0
0x3a4: V380 = GT V378 0x0
0x3a5: V381 = 0x3ad
0x3a8: JUMPI 0x3ad V380
---
Entry stack: [V12, 0x0, 0x0, 0x0, V370, V372, V373]
Stack pops: 6
Stack additions: [V378, S4, S3]
Exit stack: [V12, V378, 0x0, 0x0]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: [0x39c]
Successors: []
---
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac REVERT
---
0x3a9: V382 = 0x0
0x3ac: REVERT 0x0 0x0
---
Entry stack: [V12, V378, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, 0x0, 0x0]

================================

Block 0x3ad
[0x3ad:0x3bc]
---
Predecessors: [0x39c]
Successors: [0x3bd, 0x3be]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x5
0x3b0 SLOAD
0x3b1 PUSH1 0x4
0x3b3 SLOAD
0x3b4 DUP5
0x3b5 MUL
0x3b6 DUP2
0x3b7 ISZERO
0x3b8 ISZERO
0x3b9 PUSH2 0x3be
0x3bc JUMPI
---
0x3ad: JUMPDEST 
0x3ae: V383 = 0x5
0x3b0: V384 = S[0x5]
0x3b1: V385 = 0x4
0x3b3: V386 = S[0x4]
0x3b5: V387 = MUL V378 V386
0x3b7: V388 = ISZERO V384
0x3b8: V389 = ISZERO V388
0x3b9: V390 = 0x3be
0x3bc: JUMPI 0x3be V389
---
Entry stack: [V12, V378, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V384, V387]
Exit stack: [V12, V378, 0x0, 0x0, V384, V387]

================================

Block 0x3bd
[0x3bd:0x3bd]
---
Predecessors: [0x3ad]
Successors: []
---
0x3bd INVALID
---
0x3bd: INVALID 
---
Entry stack: [V12, V378, 0x0, 0x0, V384, V387]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, 0x0, 0x0, V384, V387]

================================

Block 0x3be
[0x3be:0x3cc]
---
Predecessors: [0x3ad]
Successors: [0x3cd, 0x4d9]
---
0x3be JUMPDEST
0x3bf DIV
0x3c0 SWAP2
0x3c1 POP
0x3c2 DUP3
0x3c3 PUSH1 0x7
0x3c5 SLOAD
0x3c6 LT
0x3c7 ISZERO
0x3c8 ISZERO
0x3c9 PUSH2 0x4d9
0x3cc JUMPI
---
0x3be: JUMPDEST 
0x3bf: V391 = DIV V387 V384
0x3c3: V392 = 0x7
0x3c5: V393 = S[0x7]
0x3c6: V394 = LT V393 V378
0x3c7: V395 = ISZERO V394
0x3c8: V396 = ISZERO V395
0x3c9: V397 = 0x4d9
0x3cc: JUMPI 0x4d9 V396
---
Entry stack: [V12, V378, 0x0, 0x0, V384, V387]
Stack pops: 5
Stack additions: [S4, V391, S2]
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x3cd
[0x3cd:0x400]
---
Predecessors: [0x3be]
Successors: [0x401, 0x405]
---
0x3cd PUSH1 0x8
0x3cf SLOAD
0x3d0 PUSH3 0x10000
0x3d4 SWAP1
0x3d5 DIV
0x3d6 PUSH1 0x1
0x3d8 PUSH1 0xa0
0x3da PUSH1 0x2
0x3dc EXP
0x3dd SUB
0x3de AND
0x3df PUSH2 0x8fc
0x3e2 DUP4
0x3e3 ISZERO
0x3e4 MUL
0x3e5 DUP4
0x3e6 PUSH1 0x40
0x3e8 MLOAD
0x3e9 PUSH1 0x0
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee DUP1
0x3ef DUP4
0x3f0 SUB
0x3f1 DUP2
0x3f2 DUP6
0x3f3 DUP9
0x3f4 DUP9
0x3f5 CALL
0x3f6 SWAP4
0x3f7 POP
0x3f8 POP
0x3f9 POP
0x3fa POP
0x3fb ISZERO
0x3fc ISZERO
0x3fd PUSH2 0x405
0x400 JUMPI
---
0x3cd: V398 = 0x8
0x3cf: V399 = S[0x8]
0x3d0: V400 = 0x10000
0x3d5: V401 = DIV V399 0x10000
0x3d6: V402 = 0x1
0x3d8: V403 = 0xa0
0x3da: V404 = 0x2
0x3dc: V405 = EXP 0x2 0xa0
0x3dd: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3de: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x3df: V408 = 0x8fc
0x3e3: V409 = ISZERO V391
0x3e4: V410 = MUL V409 0x8fc
0x3e6: V411 = 0x40
0x3e8: V412 = M[0x40]
0x3e9: V413 = 0x0
0x3eb: V414 = 0x40
0x3ed: V415 = M[0x40]
0x3f0: V416 = SUB V412 V415
0x3f5: V417 = CALL V410 V407 V391 V415 V416 V415 0x0
0x3fb: V418 = ISZERO V417
0x3fc: V419 = ISZERO V418
0x3fd: V420 = 0x405
0x400: JUMPI 0x405 V419
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x401
[0x401:0x404]
---
Predecessors: [0x3cd]
Successors: []
---
0x401 PUSH1 0x0
0x403 DUP1
0x404 REVERT
---
0x401: V421 = 0x0
0x404: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x405
[0x405:0x40d]
---
Predecessors: [0x3cd]
Successors: [0x40e, 0x442]
---
0x405 JUMPDEST
0x406 DUP2
0x407 CALLVALUE
0x408 GT
0x409 ISZERO
0x40a PUSH2 0x442
0x40d JUMPI
---
0x405: JUMPDEST 
0x407: V422 = CALLVALUE
0x408: V423 = GT V422 V391
0x409: V424 = ISZERO V423
0x40a: V425 = 0x442
0x40d: JUMPI 0x442 V424
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x40e
[0x40e:0x43d]
---
Predecessors: [0x405]
Successors: [0x43e, 0x442]
---
0x40e CALLER
0x40f PUSH1 0x1
0x411 PUSH1 0xa0
0x413 PUSH1 0x2
0x415 EXP
0x416 SUB
0x417 AND
0x418 PUSH2 0x8fc
0x41b DUP4
0x41c CALLVALUE
0x41d SUB
0x41e SWAP1
0x41f DUP2
0x420 ISZERO
0x421 MUL
0x422 SWAP1
0x423 PUSH1 0x40
0x425 MLOAD
0x426 PUSH1 0x0
0x428 PUSH1 0x40
0x42a MLOAD
0x42b DUP1
0x42c DUP4
0x42d SUB
0x42e DUP2
0x42f DUP6
0x430 DUP9
0x431 DUP9
0x432 CALL
0x433 SWAP4
0x434 POP
0x435 POP
0x436 POP
0x437 POP
0x438 ISZERO
0x439 ISZERO
0x43a PUSH2 0x442
0x43d JUMPI
---
0x40e: V426 = CALLER
0x40f: V427 = 0x1
0x411: V428 = 0xa0
0x413: V429 = 0x2
0x415: V430 = EXP 0x2 0xa0
0x416: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x417: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x418: V433 = 0x8fc
0x41c: V434 = CALLVALUE
0x41d: V435 = SUB V434 V391
0x420: V436 = ISZERO V435
0x421: V437 = MUL V436 0x8fc
0x423: V438 = 0x40
0x425: V439 = M[0x40]
0x426: V440 = 0x0
0x428: V441 = 0x40
0x42a: V442 = M[0x40]
0x42d: V443 = SUB V439 V442
0x432: V444 = CALL V437 V432 V435 V442 V443 V442 0x0
0x438: V445 = ISZERO V444
0x439: V446 = ISZERO V445
0x43a: V447 = 0x442
0x43d: JUMPI 0x442 V446
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x43e
[0x43e:0x441]
---
Predecessors: [0x40e]
Successors: []
---
0x43e PUSH1 0x0
0x440 DUP1
0x441 REVERT
---
0x43e: V448 = 0x0
0x441: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x442
[0x442:0x442]
---
Predecessors: [0x405, 0x40e]
Successors: [0x443]
---
0x442 JUMPDEST
---
0x442: JUMPDEST 
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x443
[0x443:0x494]
---
Predecessors: [0x442]
Successors: [0x495, 0x499]
---
0x443 JUMPDEST
0x444 PUSH1 0x0
0x446 SLOAD
0x447 PUSH1 0x1
0x449 PUSH1 0xa0
0x44b PUSH1 0x2
0x44d EXP
0x44e SUB
0x44f AND
0x450 PUSH4 0xa9059cbb
0x455 CALLER
0x456 DUP6
0x457 PUSH1 0x40
0x459 MLOAD
0x45a PUSH1 0xe0
0x45c PUSH1 0x2
0x45e EXP
0x45f PUSH4 0xffffffff
0x464 DUP6
0x465 AND
0x466 MUL
0x467 DUP2
0x468 MSTORE
0x469 PUSH1 0x1
0x46b PUSH1 0xa0
0x46d PUSH1 0x2
0x46f EXP
0x470 SUB
0x471 SWAP1
0x472 SWAP3
0x473 AND
0x474 PUSH1 0x4
0x476 DUP4
0x477 ADD
0x478 MSTORE
0x479 PUSH1 0x24
0x47b DUP3
0x47c ADD
0x47d MSTORE
0x47e PUSH1 0x44
0x480 ADD
0x481 PUSH1 0x0
0x483 PUSH1 0x40
0x485 MLOAD
0x486 DUP1
0x487 DUP4
0x488 SUB
0x489 DUP2
0x48a PUSH1 0x0
0x48c DUP8
0x48d DUP1
0x48e EXTCODESIZE
0x48f ISZERO
0x490 ISZERO
0x491 PUSH2 0x499
0x494 JUMPI
---
0x443: JUMPDEST 
0x444: V449 = 0x0
0x446: V450 = S[0x0]
0x447: V451 = 0x1
0x449: V452 = 0xa0
0x44b: V453 = 0x2
0x44d: V454 = EXP 0x2 0xa0
0x44e: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44f: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x450: V457 = 0xa9059cbb
0x455: V458 = CALLER
0x457: V459 = 0x40
0x459: V460 = M[0x40]
0x45a: V461 = 0xe0
0x45c: V462 = 0x2
0x45e: V463 = EXP 0x2 0xe0
0x45f: V464 = 0xffffffff
0x465: V465 = AND 0xa9059cbb 0xffffffff
0x466: V466 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x468: M[V460] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x469: V467 = 0x1
0x46b: V468 = 0xa0
0x46d: V469 = 0x2
0x46f: V470 = EXP 0x2 0xa0
0x470: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x473: V472 = AND V458 0xffffffffffffffffffffffffffffffffffffffff
0x474: V473 = 0x4
0x477: V474 = ADD V460 0x4
0x478: M[V474] = V472
0x479: V475 = 0x24
0x47c: V476 = ADD V460 0x24
0x47d: M[V476] = V378
0x47e: V477 = 0x44
0x480: V478 = ADD 0x44 V460
0x481: V479 = 0x0
0x483: V480 = 0x40
0x485: V481 = M[0x40]
0x488: V482 = SUB V478 V481
0x48a: V483 = 0x0
0x48e: V484 = EXTCODESIZE V456
0x48f: V485 = ISZERO V484
0x490: V486 = ISZERO V485
0x491: V487 = 0x499
0x494: JUMPI 0x499 V486
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V456, 0xa9059cbb, V478, 0x0, V481, V482, V481, 0x0, V456]
Exit stack: [V12, V378, V391, 0x0, V456, 0xa9059cbb, V478, 0x0, V481, V482, V481, 0x0, V456]

================================

Block 0x495
[0x495:0x498]
---
Predecessors: [0x443]
Successors: []
---
0x495 PUSH1 0x0
0x497 DUP1
0x498 REVERT
---
0x495: V488 = 0x0
0x498: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, 0x0, V456, 0xa9059cbb, V478, 0x0, V481, V482, V481, 0x0, V456]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, 0x0, V456, 0xa9059cbb, V478, 0x0, V481, V482, V481, 0x0, V456]

================================

Block 0x499
[0x499:0x4a5]
---
Predecessors: [0x443]
Successors: [0x4a6, 0x4aa]
---
0x499 JUMPDEST
0x49a PUSH2 0x2c6
0x49d GAS
0x49e SUB
0x49f CALL
0x4a0 ISZERO
0x4a1 ISZERO
0x4a2 PUSH2 0x4aa
0x4a5 JUMPI
---
0x499: JUMPDEST 
0x49a: V489 = 0x2c6
0x49d: V490 = GAS
0x49e: V491 = SUB V490 0x2c6
0x49f: V492 = CALL V491 V456 0x0 V481 V482 V481 0x0
0x4a0: V493 = ISZERO V492
0x4a1: V494 = ISZERO V493
0x4a2: V495 = 0x4aa
0x4a5: JUMPI 0x4aa V494
---
Entry stack: [V12, V378, V391, 0x0, V456, 0xa9059cbb, V478, 0x0, V481, V482, V481, 0x0, V456]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V378, V391, 0x0, V456, 0xa9059cbb, V478]

================================

Block 0x4a6
[0x4a6:0x4a9]
---
Predecessors: [0x499]
Successors: []
---
0x4a6 PUSH1 0x0
0x4a8 DUP1
0x4a9 REVERT
---
0x4a6: V496 = 0x0
0x4a9: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, 0x0, V456, 0xa9059cbb, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, 0x0, V456, 0xa9059cbb, V478]

================================

Block 0x4aa
[0x4aa:0x4c6]
---
Predecessors: [0x499]
Successors: [0x177, 0x4c7]
---
0x4aa JUMPDEST
0x4ab POP
0x4ac POP
0x4ad PUSH1 0x6
0x4af DUP1
0x4b0 SLOAD
0x4b1 DUP6
0x4b2 ADD
0x4b3 SWAP1
0x4b4 SSTORE
0x4b5 POP
0x4b6 PUSH1 0x7
0x4b8 DUP1
0x4b9 SLOAD
0x4ba DUP5
0x4bb SWAP1
0x4bc SUB
0x4bd SWAP1
0x4be DUP2
0x4bf SWAP1
0x4c0 SSTORE
0x4c1 ISZERO
0x4c2 ISZERO
0x4c3 PUSH2 0x177
0x4c6 JUMPI
---
0x4aa: JUMPDEST 
0x4ad: V497 = 0x6
0x4b0: V498 = S[0x6]
0x4b2: V499 = ADD V378 V498
0x4b4: S[0x6] = V499
0x4b6: V500 = 0x7
0x4b9: V501 = S[0x7]
0x4bc: V502 = SUB V501 V378
0x4c0: S[0x7] = V502
0x4c1: V503 = ISZERO V502
0x4c2: V504 = ISZERO V503
0x4c3: V505 = 0x177
0x4c6: JUMPI 0x177 V504
---
Entry stack: [V12, V378, V391, 0x0, V456, 0xa9059cbb, V478]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x4c7
[0x4c7:0x4d3]
---
Predecessors: [0x4aa]
Successors: [0x4d4]
---
0x4c7 PUSH1 0x8
0x4c9 DUP1
0x4ca SLOAD
0x4cb PUSH1 0xff
0x4cd NOT
0x4ce AND
0x4cf PUSH1 0x1
0x4d1 OR
0x4d2 SWAP1
0x4d3 SSTORE
---
0x4c7: V506 = 0x8
0x4ca: V507 = S[0x8]
0x4cb: V508 = 0xff
0x4cd: V509 = NOT 0xff
0x4ce: V510 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V507
0x4cf: V511 = 0x1
0x4d1: V512 = OR 0x1 V510
0x4d3: S[0x8] = V512
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x4d4
[0x4d4:0x4d8]
---
Predecessors: [0x4c7]
Successors: [0x662]
---
0x4d4 JUMPDEST
0x4d5 PUSH2 0x662
0x4d8 JUMP
---
0x4d4: JUMPDEST 
0x4d5: V513 = 0x662
0x4d8: JUMP 0x662
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, 0x0]

================================

Block 0x4d9
[0x4d9:0x4ea]
---
Predecessors: [0x3be]
Successors: [0x4eb, 0x4ec]
---
0x4d9 JUMPDEST
0x4da PUSH1 0x5
0x4dc SLOAD
0x4dd PUSH1 0x4
0x4df SLOAD
0x4e0 PUSH1 0x7
0x4e2 SLOAD
0x4e3 MUL
0x4e4 DUP2
0x4e5 ISZERO
0x4e6 ISZERO
0x4e7 PUSH2 0x4ec
0x4ea JUMPI
---
0x4d9: JUMPDEST 
0x4da: V514 = 0x5
0x4dc: V515 = S[0x5]
0x4dd: V516 = 0x4
0x4df: V517 = S[0x4]
0x4e0: V518 = 0x7
0x4e2: V519 = S[0x7]
0x4e3: V520 = MUL V519 V517
0x4e5: V521 = ISZERO V515
0x4e6: V522 = ISZERO V521
0x4e7: V523 = 0x4ec
0x4ea: JUMPI 0x4ec V522
---
Entry stack: [V12, V378, V391, 0x0]
Stack pops: 0
Stack additions: [V515, V520]
Exit stack: [V12, V378, V391, 0x0, V515, V520]

================================

Block 0x4eb
[0x4eb:0x4eb]
---
Predecessors: [0x4d9]
Successors: []
---
0x4eb INVALID
---
0x4eb: INVALID 
---
Entry stack: [V12, V378, V391, 0x0, V515, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, 0x0, V515, V520]

================================

Block 0x4ec
[0x4ec:0x525]
---
Predecessors: [0x4d9]
Successors: [0x526, 0x52a]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x8
0x4ef SLOAD
0x4f0 SWAP2
0x4f1 SWAP1
0x4f2 DIV
0x4f3 SWAP2
0x4f4 POP
0x4f5 PUSH3 0x10000
0x4f9 SWAP1
0x4fa DIV
0x4fb PUSH1 0x1
0x4fd PUSH1 0xa0
0x4ff PUSH1 0x2
0x501 EXP
0x502 SUB
0x503 AND
0x504 PUSH2 0x8fc
0x507 DUP3
0x508 ISZERO
0x509 MUL
0x50a DUP3
0x50b PUSH1 0x40
0x50d MLOAD
0x50e PUSH1 0x0
0x510 PUSH1 0x40
0x512 MLOAD
0x513 DUP1
0x514 DUP4
0x515 SUB
0x516 DUP2
0x517 DUP6
0x518 DUP9
0x519 DUP9
0x51a CALL
0x51b SWAP4
0x51c POP
0x51d POP
0x51e POP
0x51f POP
0x520 ISZERO
0x521 ISZERO
0x522 PUSH2 0x52a
0x525 JUMPI
---
0x4ec: JUMPDEST 
0x4ed: V524 = 0x8
0x4ef: V525 = S[0x8]
0x4f2: V526 = DIV V520 V515
0x4f5: V527 = 0x10000
0x4fa: V528 = DIV V525 0x10000
0x4fb: V529 = 0x1
0x4fd: V530 = 0xa0
0x4ff: V531 = 0x2
0x501: V532 = EXP 0x2 0xa0
0x502: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x503: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x504: V535 = 0x8fc
0x508: V536 = ISZERO V526
0x509: V537 = MUL V536 0x8fc
0x50b: V538 = 0x40
0x50d: V539 = M[0x40]
0x50e: V540 = 0x0
0x510: V541 = 0x40
0x512: V542 = M[0x40]
0x515: V543 = SUB V539 V542
0x51a: V544 = CALL V537 V534 V526 V542 V543 V542 0x0
0x520: V545 = ISZERO V544
0x521: V546 = ISZERO V545
0x522: V547 = 0x52a
0x525: JUMPI 0x52a V546
---
Entry stack: [V12, V378, V391, 0x0, V515, V520]
Stack pops: 3
Stack additions: [V526]
Exit stack: [V12, V378, V391, V526]

================================

Block 0x526
[0x526:0x529]
---
Predecessors: [0x4ec]
Successors: []
---
0x526 PUSH1 0x0
0x528 DUP1
0x529 REVERT
---
0x526: V548 = 0x0
0x529: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, V526]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, V526]

================================

Block 0x52a
[0x52a:0x582]
---
Predecessors: [0x4ec]
Successors: [0x583, 0x587]
---
0x52a JUMPDEST
0x52b PUSH1 0x0
0x52d SLOAD
0x52e PUSH1 0x7
0x530 SLOAD
0x531 PUSH1 0x1
0x533 PUSH1 0xa0
0x535 PUSH1 0x2
0x537 EXP
0x538 SUB
0x539 SWAP1
0x53a SWAP2
0x53b AND
0x53c SWAP1
0x53d PUSH4 0xa9059cbb
0x542 SWAP1
0x543 CALLER
0x544 SWAP1
0x545 PUSH1 0x40
0x547 MLOAD
0x548 PUSH1 0xe0
0x54a PUSH1 0x2
0x54c EXP
0x54d PUSH4 0xffffffff
0x552 DUP6
0x553 AND
0x554 MUL
0x555 DUP2
0x556 MSTORE
0x557 PUSH1 0x1
0x559 PUSH1 0xa0
0x55b PUSH1 0x2
0x55d EXP
0x55e SUB
0x55f SWAP1
0x560 SWAP3
0x561 AND
0x562 PUSH1 0x4
0x564 DUP4
0x565 ADD
0x566 MSTORE
0x567 PUSH1 0x24
0x569 DUP3
0x56a ADD
0x56b MSTORE
0x56c PUSH1 0x44
0x56e ADD
0x56f PUSH1 0x0
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 DUP4
0x576 SUB
0x577 DUP2
0x578 PUSH1 0x0
0x57a DUP8
0x57b DUP1
0x57c EXTCODESIZE
0x57d ISZERO
0x57e ISZERO
0x57f PUSH2 0x587
0x582 JUMPI
---
0x52a: JUMPDEST 
0x52b: V549 = 0x0
0x52d: V550 = S[0x0]
0x52e: V551 = 0x7
0x530: V552 = S[0x7]
0x531: V553 = 0x1
0x533: V554 = 0xa0
0x535: V555 = 0x2
0x537: V556 = EXP 0x2 0xa0
0x538: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53b: V558 = AND V550 0xffffffffffffffffffffffffffffffffffffffff
0x53d: V559 = 0xa9059cbb
0x543: V560 = CALLER
0x545: V561 = 0x40
0x547: V562 = M[0x40]
0x548: V563 = 0xe0
0x54a: V564 = 0x2
0x54c: V565 = EXP 0x2 0xe0
0x54d: V566 = 0xffffffff
0x553: V567 = AND 0xa9059cbb 0xffffffff
0x554: V568 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x556: M[V562] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x557: V569 = 0x1
0x559: V570 = 0xa0
0x55b: V571 = 0x2
0x55d: V572 = EXP 0x2 0xa0
0x55e: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x561: V574 = AND V560 0xffffffffffffffffffffffffffffffffffffffff
0x562: V575 = 0x4
0x565: V576 = ADD V562 0x4
0x566: M[V576] = V574
0x567: V577 = 0x24
0x56a: V578 = ADD V562 0x24
0x56b: M[V578] = V552
0x56c: V579 = 0x44
0x56e: V580 = ADD 0x44 V562
0x56f: V581 = 0x0
0x571: V582 = 0x40
0x573: V583 = M[0x40]
0x576: V584 = SUB V580 V583
0x578: V585 = 0x0
0x57c: V586 = EXTCODESIZE V558
0x57d: V587 = ISZERO V586
0x57e: V588 = ISZERO V587
0x57f: V589 = 0x587
0x582: JUMPI 0x587 V588
---
Entry stack: [V12, V378, V391, V526]
Stack pops: 0
Stack additions: [V558, 0xa9059cbb, V580, 0x0, V583, V584, V583, 0x0, V558]
Exit stack: [V12, V378, V391, V526, V558, 0xa9059cbb, V580, 0x0, V583, V584, V583, 0x0, V558]

================================

Block 0x583
[0x583:0x586]
---
Predecessors: [0x52a]
Successors: []
---
0x583 PUSH1 0x0
0x585 DUP1
0x586 REVERT
---
0x583: V590 = 0x0
0x586: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, V526, V558, 0xa9059cbb, V580, 0x0, V583, V584, V583, 0x0, V558]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, V526, V558, 0xa9059cbb, V580, 0x0, V583, V584, V583, 0x0, V558]

================================

Block 0x587
[0x587:0x593]
---
Predecessors: [0x52a]
Successors: [0x594, 0x598]
---
0x587 JUMPDEST
0x588 PUSH2 0x2c6
0x58b GAS
0x58c SUB
0x58d CALL
0x58e ISZERO
0x58f ISZERO
0x590 PUSH2 0x598
0x593 JUMPI
---
0x587: JUMPDEST 
0x588: V591 = 0x2c6
0x58b: V592 = GAS
0x58c: V593 = SUB V592 0x2c6
0x58d: V594 = CALL V593 V558 0x0 V583 V584 V583 0x0
0x58e: V595 = ISZERO V594
0x58f: V596 = ISZERO V595
0x590: V597 = 0x598
0x593: JUMPI 0x598 V596
---
Entry stack: [V12, V378, V391, V526, V558, 0xa9059cbb, V580, 0x0, V583, V584, V583, 0x0, V558]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V378, V391, V526, V558, 0xa9059cbb, V580]

================================

Block 0x594
[0x594:0x597]
---
Predecessors: [0x587]
Successors: []
---
0x594 PUSH1 0x0
0x596 DUP1
0x597 REVERT
---
0x594: V598 = 0x0
0x597: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, V526, V558, 0xa9059cbb, V580]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, V526, V558, 0xa9059cbb, V580]

================================

Block 0x598
[0x598:0x5cb]
---
Predecessors: [0x587]
Successors: [0x5cc, 0x5d0]
---
0x598 JUMPDEST
0x599 POP
0x59a POP
0x59b POP
0x59c CALLER
0x59d PUSH1 0x1
0x59f PUSH1 0xa0
0x5a1 PUSH1 0x2
0x5a3 EXP
0x5a4 SUB
0x5a5 AND
0x5a6 PUSH2 0x8fc
0x5a9 DUP3
0x5aa CALLVALUE
0x5ab SUB
0x5ac SWAP1
0x5ad DUP2
0x5ae ISZERO
0x5af MUL
0x5b0 SWAP1
0x5b1 PUSH1 0x40
0x5b3 MLOAD
0x5b4 PUSH1 0x0
0x5b6 PUSH1 0x40
0x5b8 MLOAD
0x5b9 DUP1
0x5ba DUP4
0x5bb SUB
0x5bc DUP2
0x5bd DUP6
0x5be DUP9
0x5bf DUP9
0x5c0 CALL
0x5c1 SWAP4
0x5c2 POP
0x5c3 POP
0x5c4 POP
0x5c5 POP
0x5c6 ISZERO
0x5c7 ISZERO
0x5c8 PUSH2 0x5d0
0x5cb JUMPI
---
0x598: JUMPDEST 
0x59c: V599 = CALLER
0x59d: V600 = 0x1
0x59f: V601 = 0xa0
0x5a1: V602 = 0x2
0x5a3: V603 = EXP 0x2 0xa0
0x5a4: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a5: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V599
0x5a6: V606 = 0x8fc
0x5aa: V607 = CALLVALUE
0x5ab: V608 = SUB V607 V526
0x5ae: V609 = ISZERO V608
0x5af: V610 = MUL V609 0x8fc
0x5b1: V611 = 0x40
0x5b3: V612 = M[0x40]
0x5b4: V613 = 0x0
0x5b6: V614 = 0x40
0x5b8: V615 = M[0x40]
0x5bb: V616 = SUB V612 V615
0x5c0: V617 = CALL V610 V605 V608 V615 V616 V615 0x0
0x5c6: V618 = ISZERO V617
0x5c7: V619 = ISZERO V618
0x5c8: V620 = 0x5d0
0x5cb: JUMPI 0x5d0 V619
---
Entry stack: [V12, V378, V391, V526, V558, 0xa9059cbb, V580]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V378, V391, V526]

================================

Block 0x5cc
[0x5cc:0x5cf]
---
Predecessors: [0x598]
Successors: []
---
0x5cc PUSH1 0x0
0x5ce DUP1
0x5cf REVERT
---
0x5cc: V621 = 0x0
0x5cf: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, V526]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, V526]

================================

Block 0x5d0
[0x5d0:0x632]
---
Predecessors: [0x598]
Successors: [0x633, 0x637]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x7
0x5d3 SLOAD
0x5d4 PUSH1 0x6
0x5d6 DUP1
0x5d7 SLOAD
0x5d8 SWAP1
0x5d9 SWAP2
0x5da ADD
0x5db SWAP1
0x5dc SSTORE
0x5dd PUSH1 0x0
0x5df DUP1
0x5e0 SLOAD
0x5e1 PUSH1 0x1
0x5e3 PUSH1 0xa0
0x5e5 PUSH1 0x2
0x5e7 EXP
0x5e8 SUB
0x5e9 AND
0x5ea SWAP1
0x5eb PUSH4 0x70a08231
0x5f0 SWAP1
0x5f1 ADDRESS
0x5f2 SWAP1
0x5f3 PUSH1 0x40
0x5f5 MLOAD
0x5f6 PUSH1 0x20
0x5f8 ADD
0x5f9 MSTORE
0x5fa PUSH1 0x40
0x5fc MLOAD
0x5fd PUSH1 0xe0
0x5ff PUSH1 0x2
0x601 EXP
0x602 PUSH4 0xffffffff
0x607 DUP5
0x608 AND
0x609 MUL
0x60a DUP2
0x60b MSTORE
0x60c PUSH1 0x1
0x60e PUSH1 0xa0
0x610 PUSH1 0x2
0x612 EXP
0x613 SUB
0x614 SWAP1
0x615 SWAP2
0x616 AND
0x617 PUSH1 0x4
0x619 DUP3
0x61a ADD
0x61b MSTORE
0x61c PUSH1 0x24
0x61e ADD
0x61f PUSH1 0x20
0x621 PUSH1 0x40
0x623 MLOAD
0x624 DUP1
0x625 DUP4
0x626 SUB
0x627 DUP2
0x628 PUSH1 0x0
0x62a DUP8
0x62b DUP1
0x62c EXTCODESIZE
0x62d ISZERO
0x62e ISZERO
0x62f PUSH2 0x637
0x632 JUMPI
---
0x5d0: JUMPDEST 
0x5d1: V622 = 0x7
0x5d3: V623 = S[0x7]
0x5d4: V624 = 0x6
0x5d7: V625 = S[0x6]
0x5da: V626 = ADD V623 V625
0x5dc: S[0x6] = V626
0x5dd: V627 = 0x0
0x5e0: V628 = S[0x0]
0x5e1: V629 = 0x1
0x5e3: V630 = 0xa0
0x5e5: V631 = 0x2
0x5e7: V632 = EXP 0x2 0xa0
0x5e8: V633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e9: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0x5eb: V635 = 0x70a08231
0x5f1: V636 = ADDRESS
0x5f3: V637 = 0x40
0x5f5: V638 = M[0x40]
0x5f6: V639 = 0x20
0x5f8: V640 = ADD 0x20 V638
0x5f9: M[V640] = 0x0
0x5fa: V641 = 0x40
0x5fc: V642 = M[0x40]
0x5fd: V643 = 0xe0
0x5ff: V644 = 0x2
0x601: V645 = EXP 0x2 0xe0
0x602: V646 = 0xffffffff
0x608: V647 = AND 0x70a08231 0xffffffff
0x609: V648 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x60b: M[V642] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x60c: V649 = 0x1
0x60e: V650 = 0xa0
0x610: V651 = 0x2
0x612: V652 = EXP 0x2 0xa0
0x613: V653 = SUB 0x10000000000000000000000000000000000000000 0x1
0x616: V654 = AND V636 0xffffffffffffffffffffffffffffffffffffffff
0x617: V655 = 0x4
0x61a: V656 = ADD V642 0x4
0x61b: M[V656] = V654
0x61c: V657 = 0x24
0x61e: V658 = ADD 0x24 V642
0x61f: V659 = 0x20
0x621: V660 = 0x40
0x623: V661 = M[0x40]
0x626: V662 = SUB V658 V661
0x628: V663 = 0x0
0x62c: V664 = EXTCODESIZE V634
0x62d: V665 = ISZERO V664
0x62e: V666 = ISZERO V665
0x62f: V667 = 0x637
0x632: JUMPI 0x637 V666
---
Entry stack: [V12, V378, V391, V526]
Stack pops: 0
Stack additions: [V634, 0x70a08231, V658, 0x20, V661, V662, V661, 0x0, V634]
Exit stack: [V12, V378, V391, V526, V634, 0x70a08231, V658, 0x20, V661, V662, V661, 0x0, V634]

================================

Block 0x633
[0x633:0x636]
---
Predecessors: [0x5d0]
Successors: []
---
0x633 PUSH1 0x0
0x635 DUP1
0x636 REVERT
---
0x633: V668 = 0x0
0x636: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, V526, V634, 0x70a08231, V658, 0x20, V661, V662, V661, 0x0, V634]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, V526, V634, 0x70a08231, V658, 0x20, V661, V662, V661, 0x0, V634]

================================

Block 0x637
[0x637:0x643]
---
Predecessors: [0x5d0]
Successors: [0x644, 0x648]
---
0x637 JUMPDEST
0x638 PUSH2 0x2c6
0x63b GAS
0x63c SUB
0x63d CALL
0x63e ISZERO
0x63f ISZERO
0x640 PUSH2 0x648
0x643 JUMPI
---
0x637: JUMPDEST 
0x638: V669 = 0x2c6
0x63b: V670 = GAS
0x63c: V671 = SUB V670 0x2c6
0x63d: V672 = CALL V671 V634 0x0 V661 V662 V661 0x20
0x63e: V673 = ISZERO V672
0x63f: V674 = ISZERO V673
0x640: V675 = 0x648
0x643: JUMPI 0x648 V674
---
Entry stack: [V12, V378, V391, V526, V634, 0x70a08231, V658, 0x20, V661, V662, V661, 0x0, V634]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V378, V391, V526, V634, 0x70a08231, V658]

================================

Block 0x644
[0x644:0x647]
---
Predecessors: [0x637]
Successors: []
---
0x644 PUSH1 0x0
0x646 DUP1
0x647 REVERT
---
0x644: V676 = 0x0
0x647: REVERT 0x0 0x0
---
Entry stack: [V12, V378, V391, V526, V634, 0x70a08231, V658]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V378, V391, V526, V634, 0x70a08231, V658]

================================

Block 0x648
[0x648:0x661]
---
Predecessors: [0x637]
Successors: [0x662]
---
0x648 JUMPDEST
0x649 POP
0x64a POP
0x64b POP
0x64c PUSH1 0x40
0x64e MLOAD
0x64f DUP1
0x650 MLOAD
0x651 PUSH1 0x7
0x653 SSTORE
0x654 POP
0x655 PUSH1 0x8
0x657 DUP1
0x658 SLOAD
0x659 PUSH1 0xff
0x65b NOT
0x65c AND
0x65d PUSH1 0x1
0x65f OR
0x660 SWAP1
0x661 SSTORE
---
0x648: JUMPDEST 
0x64c: V677 = 0x40
0x64e: V678 = M[0x40]
0x650: V679 = M[V678]
0x651: V680 = 0x7
0x653: S[0x7] = V679
0x655: V681 = 0x8
0x658: V682 = S[0x8]
0x659: V683 = 0xff
0x65b: V684 = NOT 0xff
0x65c: V685 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V682
0x65d: V686 = 0x1
0x65f: V687 = OR 0x1 V685
0x661: S[0x8] = V687
---
Entry stack: [V12, V378, V391, V526, V634, 0x70a08231, V658]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V378, V391, V526]

================================

Block 0x662
[0x662:0x662]
---
Predecessors: [0x177, 0x345, 0x387, 0x4d4, 0x648]
Successors: [0x663]
---
0x662 JUMPDEST
---
0x662: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x663
[0x663:0x663]
---
Predecessors: [0x662]
Successors: [0x664]
---
0x663 JUMPDEST
---
0x663: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x664
[0x664:0x664]
---
Predecessors: [0x663]
Successors: [0x665]
---
0x664 JUMPDEST
---
0x664: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x665
[0x665:0x6d5]
---
Predecessors: [0x664]
Successors: [0x6d6]
---
0x665 JUMPDEST
0x666 PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x687 PUSH1 0x7
0x689 SLOAD
0x68a PUSH1 0x40
0x68c MLOAD
0x68d SWAP1
0x68e DUP2
0x68f MSTORE
0x690 PUSH1 0x20
0x692 ADD
0x693 PUSH1 0x40
0x695 MLOAD
0x696 DUP1
0x697 SWAP2
0x698 SUB
0x699 SWAP1
0x69a LOG1
0x69b PUSH1 0x8
0x69d SLOAD
0x69e PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6bf SWAP1
0x6c0 PUSH1 0xff
0x6c2 AND
0x6c3 PUSH1 0x40
0x6c5 MLOAD
0x6c6 SWAP1
0x6c7 ISZERO
0x6c8 ISZERO
0x6c9 DUP2
0x6ca MSTORE
0x6cb PUSH1 0x20
0x6cd ADD
0x6ce PUSH1 0x40
0x6d0 MLOAD
0x6d1 DUP1
0x6d2 SWAP2
0x6d3 SUB
0x6d4 SWAP1
0x6d5 LOG1
---
0x665: JUMPDEST 
0x666: V688 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x687: V689 = 0x7
0x689: V690 = S[0x7]
0x68a: V691 = 0x40
0x68c: V692 = M[0x40]
0x68f: M[V692] = V690
0x690: V693 = 0x20
0x692: V694 = ADD 0x20 V692
0x693: V695 = 0x40
0x695: V696 = M[0x40]
0x698: V697 = SUB V694 V696
0x69a: LOG V696 V697 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x69b: V698 = 0x8
0x69d: V699 = S[0x8]
0x69e: V700 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6c0: V701 = 0xff
0x6c2: V702 = AND 0xff V699
0x6c3: V703 = 0x40
0x6c5: V704 = M[0x40]
0x6c7: V705 = ISZERO V702
0x6c8: V706 = ISZERO V705
0x6ca: M[V704] = V706
0x6cb: V707 = 0x20
0x6cd: V708 = ADD 0x20 V704
0x6ce: V709 = 0x40
0x6d0: V710 = M[0x40]
0x6d3: V711 = SUB V708 V710
0x6d5: LOG V710 V711 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x6d6
[0x6d6:0x6da]
---
Predecessors: [0x665]
Successors: []
---
0x6d6 JUMPDEST
0x6d7 POP
0x6d8 POP
0x6d9 POP
0x6da STOP
---
0x6d6: JUMPDEST 
0x6da: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x6db
[0x6db:0x6e1]
---
Predecessors: [0xb]
Successors: [0x6e2, 0x6e6]
---
0x6db JUMPDEST
0x6dc CALLVALUE
0x6dd ISZERO
0x6de PUSH2 0x6e6
0x6e1 JUMPI
---
0x6db: JUMPDEST 
0x6dc: V712 = CALLVALUE
0x6dd: V713 = ISZERO V712
0x6de: V714 = 0x6e6
0x6e1: JUMPI 0x6e6 V713
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e2
[0x6e2:0x6e5]
---
Predecessors: [0x6db]
Successors: []
---
0x6e2 PUSH1 0x0
0x6e4 DUP1
0x6e5 REVERT
---
0x6e2: V715 = 0x0
0x6e5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e6
[0x6e6:0x6ed]
---
Predecessors: [0x6db]
Successors: [0x865]
---
0x6e6 JUMPDEST
0x6e7 PUSH2 0x6ee
0x6ea PUSH2 0x865
0x6ed JUMP
---
0x6e6: JUMPDEST 
0x6e7: V716 = 0x6ee
0x6ea: V717 = 0x865
0x6ed: JUMP 0x865
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6ee]
Exit stack: [V12, 0x6ee]

================================

Block 0x6ee
[0x6ee:0x709]
---
Predecessors: [0x865, 0x88e]
Successors: []
---
0x6ee JUMPDEST
0x6ef PUSH1 0x40
0x6f1 MLOAD
0x6f2 PUSH1 0x1
0x6f4 PUSH1 0xa0
0x6f6 PUSH1 0x2
0x6f8 EXP
0x6f9 SUB
0x6fa SWAP1
0x6fb SWAP2
0x6fc AND
0x6fd DUP2
0x6fe MSTORE
0x6ff PUSH1 0x20
0x701 ADD
0x702 PUSH1 0x40
0x704 MLOAD
0x705 DUP1
0x706 SWAP2
0x707 SUB
0x708 SWAP1
0x709 RETURN
---
0x6ee: JUMPDEST 
0x6ef: V718 = 0x40
0x6f1: V719 = M[0x40]
0x6f2: V720 = 0x1
0x6f4: V721 = 0xa0
0x6f6: V722 = 0x2
0x6f8: V723 = EXP 0x2 0xa0
0x6f9: V724 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fc: V725 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x6fe: M[V719] = V725
0x6ff: V726 = 0x20
0x701: V727 = ADD 0x20 V719
0x702: V728 = 0x40
0x704: V729 = M[0x40]
0x707: V730 = SUB V727 V729
0x709: RETURN V729 V730
---
Entry stack: [V12, 0x6ee, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x6ee]

================================

Block 0x70a
[0x70a:0x710]
---
Predecessors: [0x25]
Successors: [0x711, 0x715]
---
0x70a JUMPDEST
0x70b CALLVALUE
0x70c ISZERO
0x70d PUSH2 0x715
0x710 JUMPI
---
0x70a: JUMPDEST 
0x70b: V731 = CALLVALUE
0x70c: V732 = ISZERO V731
0x70d: V733 = 0x715
0x710: JUMPI 0x715 V732
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x711
[0x711:0x714]
---
Predecessors: [0x70a]
Successors: []
---
0x711 PUSH1 0x0
0x713 DUP1
0x714 REVERT
---
0x711: V734 = 0x0
0x714: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x715
[0x715:0x71c]
---
Predecessors: [0x70a]
Successors: [0x874]
---
0x715 JUMPDEST
0x716 PUSH2 0x71d
0x719 PUSH2 0x874
0x71c JUMP
---
0x715: JUMPDEST 
0x716: V735 = 0x71d
0x719: V736 = 0x874
0x71c: JUMP 0x874
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x71d]
Exit stack: [V12, 0x71d]

================================

Block 0x71d
[0x71d:0x730]
---
Predecessors: [0x874, 0x8bb]
Successors: []
---
0x71d JUMPDEST
0x71e PUSH1 0x40
0x720 MLOAD
0x721 SWAP1
0x722 ISZERO
0x723 ISZERO
0x724 DUP2
0x725 MSTORE
0x726 PUSH1 0x20
0x728 ADD
0x729 PUSH1 0x40
0x72b MLOAD
0x72c DUP1
0x72d SWAP2
0x72e SUB
0x72f SWAP1
0x730 RETURN
---
0x71d: JUMPDEST 
0x71e: V737 = 0x40
0x720: V738 = M[0x40]
0x722: V739 = ISZERO S0
0x723: V740 = ISZERO V739
0x725: M[V738] = V740
0x726: V741 = 0x20
0x728: V742 = ADD 0x20 V738
0x729: V743 = 0x40
0x72b: V744 = M[0x40]
0x72e: V745 = SUB V742 V744
0x730: RETURN V744 V745
---
Entry stack: [V12, 0x71d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x71d]

================================

Block 0x731
[0x731:0x737]
---
Predecessors: [0x30]
Successors: [0x738, 0x73c]
---
0x731 JUMPDEST
0x732 CALLVALUE
0x733 ISZERO
0x734 PUSH2 0x73c
0x737 JUMPI
---
0x731: JUMPDEST 
0x732: V746 = CALLVALUE
0x733: V747 = ISZERO V746
0x734: V748 = 0x73c
0x737: JUMPI 0x73c V747
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x738
[0x738:0x73b]
---
Predecessors: [0x731]
Successors: []
---
0x738 PUSH1 0x0
0x73a DUP1
0x73b REVERT
---
0x738: V749 = 0x0
0x73b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73c
[0x73c:0x743]
---
Predecessors: [0x731]
Successors: [0x882]
---
0x73c JUMPDEST
0x73d PUSH2 0x744
0x740 PUSH2 0x882
0x743 JUMP
---
0x73c: JUMPDEST 
0x73d: V750 = 0x744
0x740: V751 = 0x882
0x743: JUMP 0x882
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x744]
Exit stack: [V12, 0x744]

================================

Block 0x744
[0x744:0x755]
---
Predecessors: [0x882, 0x888, 0x8a3, 0x8a9, 0x8af, 0x8b5]
Successors: []
---
0x744 JUMPDEST
0x745 PUSH1 0x40
0x747 MLOAD
0x748 SWAP1
0x749 DUP2
0x74a MSTORE
0x74b PUSH1 0x20
0x74d ADD
0x74e PUSH1 0x40
0x750 MLOAD
0x751 DUP1
0x752 SWAP2
0x753 SUB
0x754 SWAP1
0x755 RETURN
---
0x744: JUMPDEST 
0x745: V752 = 0x40
0x747: V753 = M[0x40]
0x74a: M[V753] = S0
0x74b: V754 = 0x20
0x74d: V755 = ADD 0x20 V753
0x74e: V756 = 0x40
0x750: V757 = M[0x40]
0x753: V758 = SUB V755 V757
0x755: RETURN V757 V758
---
Entry stack: [V12, 0x744, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x744]

================================

Block 0x756
[0x756:0x75c]
---
Predecessors: [0x3b]
Successors: [0x75d, 0x761]
---
0x756 JUMPDEST
0x757 CALLVALUE
0x758 ISZERO
0x759 PUSH2 0x761
0x75c JUMPI
---
0x756: JUMPDEST 
0x757: V759 = CALLVALUE
0x758: V760 = ISZERO V759
0x759: V761 = 0x761
0x75c: JUMPI 0x761 V760
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75d
[0x75d:0x760]
---
Predecessors: [0x756]
Successors: []
---
0x75d PUSH1 0x0
0x75f DUP1
0x760 REVERT
---
0x75d: V762 = 0x0
0x760: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x761
[0x761:0x768]
---
Predecessors: [0x756]
Successors: [0x888]
---
0x761 JUMPDEST
0x762 PUSH2 0x744
0x765 PUSH2 0x888
0x768 JUMP
---
0x761: JUMPDEST 
0x762: V763 = 0x744
0x765: V764 = 0x888
0x768: JUMP 0x888
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x744]
Exit stack: [V12, 0x744]

================================

Block 0x769
[0x769:0x77a]
---
Predecessors: []
Successors: []
---
0x769 JUMPDEST
0x76a PUSH1 0x40
0x76c MLOAD
0x76d SWAP1
0x76e DUP2
0x76f MSTORE
0x770 PUSH1 0x20
0x772 ADD
0x773 PUSH1 0x40
0x775 MLOAD
0x776 DUP1
0x777 SWAP2
0x778 SUB
0x779 SWAP1
0x77a RETURN
---
0x769: JUMPDEST 
0x76a: V765 = 0x40
0x76c: V766 = M[0x40]
0x76f: M[V766] = S0
0x770: V767 = 0x20
0x772: V768 = ADD 0x20 V766
0x773: V769 = 0x40
0x775: V770 = M[0x40]
0x778: V771 = SUB V768 V770
0x77a: RETURN V770 V771
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x77b
[0x77b:0x781]
---
Predecessors: [0x46]
Successors: [0x782, 0x786]
---
0x77b JUMPDEST
0x77c CALLVALUE
0x77d ISZERO
0x77e PUSH2 0x786
0x781 JUMPI
---
0x77b: JUMPDEST 
0x77c: V772 = CALLVALUE
0x77d: V773 = ISZERO V772
0x77e: V774 = 0x786
0x781: JUMPI 0x786 V773
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x782
[0x782:0x785]
---
Predecessors: [0x77b]
Successors: []
---
0x782 PUSH1 0x0
0x784 DUP1
0x785 REVERT
---
0x782: V775 = 0x0
0x785: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x786
[0x786:0x78d]
---
Predecessors: [0x77b]
Successors: [0x88e]
---
0x786 JUMPDEST
0x787 PUSH2 0x6ee
0x78a PUSH2 0x88e
0x78d JUMP
---
0x786: JUMPDEST 
0x787: V776 = 0x6ee
0x78a: V777 = 0x88e
0x78d: JUMP 0x88e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6ee]
Exit stack: [V12, 0x6ee]

================================

Block 0x78e
[0x78e:0x7a9]
---
Predecessors: []
Successors: []
---
0x78e JUMPDEST
0x78f PUSH1 0x40
0x791 MLOAD
0x792 PUSH1 0x1
0x794 PUSH1 0xa0
0x796 PUSH1 0x2
0x798 EXP
0x799 SUB
0x79a SWAP1
0x79b SWAP2
0x79c AND
0x79d DUP2
0x79e MSTORE
0x79f PUSH1 0x20
0x7a1 ADD
0x7a2 PUSH1 0x40
0x7a4 MLOAD
0x7a5 DUP1
0x7a6 SWAP2
0x7a7 SUB
0x7a8 SWAP1
0x7a9 RETURN
---
0x78e: JUMPDEST 
0x78f: V778 = 0x40
0x791: V779 = M[0x40]
0x792: V780 = 0x1
0x794: V781 = 0xa0
0x796: V782 = 0x2
0x798: V783 = EXP 0x2 0xa0
0x799: V784 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79c: V785 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x79e: M[V779] = V785
0x79f: V786 = 0x20
0x7a1: V787 = ADD 0x20 V779
0x7a2: V788 = 0x40
0x7a4: V789 = M[0x40]
0x7a7: V790 = SUB V787 V789
0x7a9: RETURN V789 V790
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7aa
[0x7aa:0x7b0]
---
Predecessors: [0x51]
Successors: [0x7b1, 0x7b5]
---
0x7aa JUMPDEST
0x7ab CALLVALUE
0x7ac ISZERO
0x7ad PUSH2 0x7b5
0x7b0 JUMPI
---
0x7aa: JUMPDEST 
0x7ab: V791 = CALLVALUE
0x7ac: V792 = ISZERO V791
0x7ad: V793 = 0x7b5
0x7b0: JUMPI 0x7b5 V792
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b1
[0x7b1:0x7b4]
---
Predecessors: [0x7aa]
Successors: []
---
0x7b1 PUSH1 0x0
0x7b3 DUP1
0x7b4 REVERT
---
0x7b1: V794 = 0x0
0x7b4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b5
[0x7b5:0x7bc]
---
Predecessors: [0x7aa]
Successors: [0x8a3]
---
0x7b5 JUMPDEST
0x7b6 PUSH2 0x744
0x7b9 PUSH2 0x8a3
0x7bc JUMP
---
0x7b5: JUMPDEST 
0x7b6: V795 = 0x744
0x7b9: V796 = 0x8a3
0x7bc: JUMP 0x8a3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x744]
Exit stack: [V12, 0x744]

================================

Block 0x7bd
[0x7bd:0x7ce]
---
Predecessors: []
Successors: []
---
0x7bd JUMPDEST
0x7be PUSH1 0x40
0x7c0 MLOAD
0x7c1 SWAP1
0x7c2 DUP2
0x7c3 MSTORE
0x7c4 PUSH1 0x20
0x7c6 ADD
0x7c7 PUSH1 0x40
0x7c9 MLOAD
0x7ca DUP1
0x7cb SWAP2
0x7cc SUB
0x7cd SWAP1
0x7ce RETURN
---
0x7bd: JUMPDEST 
0x7be: V797 = 0x40
0x7c0: V798 = M[0x40]
0x7c3: M[V798] = S0
0x7c4: V799 = 0x20
0x7c6: V800 = ADD 0x20 V798
0x7c7: V801 = 0x40
0x7c9: V802 = M[0x40]
0x7cc: V803 = SUB V800 V802
0x7ce: RETURN V802 V803
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7cf
[0x7cf:0x7d5]
---
Predecessors: [0x5c]
Successors: [0x7d6, 0x7da]
---
0x7cf JUMPDEST
0x7d0 CALLVALUE
0x7d1 ISZERO
0x7d2 PUSH2 0x7da
0x7d5 JUMPI
---
0x7cf: JUMPDEST 
0x7d0: V804 = CALLVALUE
0x7d1: V805 = ISZERO V804
0x7d2: V806 = 0x7da
0x7d5: JUMPI 0x7da V805
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d6
[0x7d6:0x7d9]
---
Predecessors: [0x7cf]
Successors: []
---
0x7d6 PUSH1 0x0
0x7d8 DUP1
0x7d9 REVERT
---
0x7d6: V807 = 0x0
0x7d9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7da
[0x7da:0x7e1]
---
Predecessors: [0x7cf]
Successors: [0x8a9]
---
0x7da JUMPDEST
0x7db PUSH2 0x744
0x7de PUSH2 0x8a9
0x7e1 JUMP
---
0x7da: JUMPDEST 
0x7db: V808 = 0x744
0x7de: V809 = 0x8a9
0x7e1: JUMP 0x8a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x744]
Exit stack: [V12, 0x744]

================================

Block 0x7e2
[0x7e2:0x7f3]
---
Predecessors: []
Successors: []
---
0x7e2 JUMPDEST
0x7e3 PUSH1 0x40
0x7e5 MLOAD
0x7e6 SWAP1
0x7e7 DUP2
0x7e8 MSTORE
0x7e9 PUSH1 0x20
0x7eb ADD
0x7ec PUSH1 0x40
0x7ee MLOAD
0x7ef DUP1
0x7f0 SWAP2
0x7f1 SUB
0x7f2 SWAP1
0x7f3 RETURN
---
0x7e2: JUMPDEST 
0x7e3: V810 = 0x40
0x7e5: V811 = M[0x40]
0x7e8: M[V811] = S0
0x7e9: V812 = 0x20
0x7eb: V813 = ADD 0x20 V811
0x7ec: V814 = 0x40
0x7ee: V815 = M[0x40]
0x7f1: V816 = SUB V813 V815
0x7f3: RETURN V815 V816
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7f4
[0x7f4:0x7fa]
---
Predecessors: [0x67]
Successors: [0x7fb, 0x7ff]
---
0x7f4 JUMPDEST
0x7f5 CALLVALUE
0x7f6 ISZERO
0x7f7 PUSH2 0x7ff
0x7fa JUMPI
---
0x7f4: JUMPDEST 
0x7f5: V817 = CALLVALUE
0x7f6: V818 = ISZERO V817
0x7f7: V819 = 0x7ff
0x7fa: JUMPI 0x7ff V818
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7fb
[0x7fb:0x7fe]
---
Predecessors: [0x7f4]
Successors: []
---
0x7fb PUSH1 0x0
0x7fd DUP1
0x7fe REVERT
---
0x7fb: V820 = 0x0
0x7fe: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ff
[0x7ff:0x806]
---
Predecessors: [0x7f4]
Successors: [0x8af]
---
0x7ff JUMPDEST
0x800 PUSH2 0x744
0x803 PUSH2 0x8af
0x806 JUMP
---
0x7ff: JUMPDEST 
0x800: V821 = 0x744
0x803: V822 = 0x8af
0x806: JUMP 0x8af
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x744]
Exit stack: [V12, 0x744]

================================

Block 0x807
[0x807:0x818]
---
Predecessors: []
Successors: []
---
0x807 JUMPDEST
0x808 PUSH1 0x40
0x80a MLOAD
0x80b SWAP1
0x80c DUP2
0x80d MSTORE
0x80e PUSH1 0x20
0x810 ADD
0x811 PUSH1 0x40
0x813 MLOAD
0x814 DUP1
0x815 SWAP2
0x816 SUB
0x817 SWAP1
0x818 RETURN
---
0x807: JUMPDEST 
0x808: V823 = 0x40
0x80a: V824 = M[0x40]
0x80d: M[V824] = S0
0x80e: V825 = 0x20
0x810: V826 = ADD 0x20 V824
0x811: V827 = 0x40
0x813: V828 = M[0x40]
0x816: V829 = SUB V826 V828
0x818: RETURN V828 V829
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x819
[0x819:0x81f]
---
Predecessors: [0x72]
Successors: [0x820, 0x824]
---
0x819 JUMPDEST
0x81a CALLVALUE
0x81b ISZERO
0x81c PUSH2 0x824
0x81f JUMPI
---
0x819: JUMPDEST 
0x81a: V830 = CALLVALUE
0x81b: V831 = ISZERO V830
0x81c: V832 = 0x824
0x81f: JUMPI 0x824 V831
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x820
[0x820:0x823]
---
Predecessors: [0x819]
Successors: []
---
0x820 PUSH1 0x0
0x822 DUP1
0x823 REVERT
---
0x820: V833 = 0x0
0x823: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x824
[0x824:0x82b]
---
Predecessors: [0x819]
Successors: [0x8b5]
---
0x824 JUMPDEST
0x825 PUSH2 0x744
0x828 PUSH2 0x8b5
0x82b JUMP
---
0x824: JUMPDEST 
0x825: V834 = 0x744
0x828: V835 = 0x8b5
0x82b: JUMP 0x8b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x744]
Exit stack: [V12, 0x744]

================================

Block 0x82c
[0x82c:0x83d]
---
Predecessors: []
Successors: []
---
0x82c JUMPDEST
0x82d PUSH1 0x40
0x82f MLOAD
0x830 SWAP1
0x831 DUP2
0x832 MSTORE
0x833 PUSH1 0x20
0x835 ADD
0x836 PUSH1 0x40
0x838 MLOAD
0x839 DUP1
0x83a SWAP2
0x83b SUB
0x83c SWAP1
0x83d RETURN
---
0x82c: JUMPDEST 
0x82d: V836 = 0x40
0x82f: V837 = M[0x40]
0x832: M[V837] = S0
0x833: V838 = 0x20
0x835: V839 = ADD 0x20 V837
0x836: V840 = 0x40
0x838: V841 = M[0x40]
0x83b: V842 = SUB V839 V841
0x83d: RETURN V841 V842
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x83e
[0x83e:0x844]
---
Predecessors: [0x7d]
Successors: [0x845, 0x849]
---
0x83e JUMPDEST
0x83f CALLVALUE
0x840 ISZERO
0x841 PUSH2 0x849
0x844 JUMPI
---
0x83e: JUMPDEST 
0x83f: V843 = CALLVALUE
0x840: V844 = ISZERO V843
0x841: V845 = 0x849
0x844: JUMPI 0x849 V844
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x845
[0x845:0x848]
---
Predecessors: [0x83e]
Successors: []
---
0x845 PUSH1 0x0
0x847 DUP1
0x848 REVERT
---
0x845: V846 = 0x0
0x848: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x849
[0x849:0x850]
---
Predecessors: [0x83e]
Successors: [0x8bb]
---
0x849 JUMPDEST
0x84a PUSH2 0x71d
0x84d PUSH2 0x8bb
0x850 JUMP
---
0x849: JUMPDEST 
0x84a: V847 = 0x71d
0x84d: V848 = 0x8bb
0x850: JUMP 0x8bb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x71d]
Exit stack: [V12, 0x71d]

================================

Block 0x851
[0x851:0x864]
---
Predecessors: []
Successors: []
---
0x851 JUMPDEST
0x852 PUSH1 0x40
0x854 MLOAD
0x855 SWAP1
0x856 ISZERO
0x857 ISZERO
0x858 DUP2
0x859 MSTORE
0x85a PUSH1 0x20
0x85c ADD
0x85d PUSH1 0x40
0x85f MLOAD
0x860 DUP1
0x861 SWAP2
0x862 SUB
0x863 SWAP1
0x864 RETURN
---
0x851: JUMPDEST 
0x852: V849 = 0x40
0x854: V850 = M[0x40]
0x856: V851 = ISZERO S0
0x857: V852 = ISZERO V851
0x859: M[V850] = V852
0x85a: V853 = 0x20
0x85c: V854 = ADD 0x20 V850
0x85d: V855 = 0x40
0x85f: V856 = M[0x40]
0x862: V857 = SUB V854 V856
0x864: RETURN V856 V857
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x865
[0x865:0x873]
---
Predecessors: [0x6e6]
Successors: [0x6ee]
---
0x865 JUMPDEST
0x866 PUSH1 0x0
0x868 SLOAD
0x869 PUSH1 0x1
0x86b PUSH1 0xa0
0x86d PUSH1 0x2
0x86f EXP
0x870 SUB
0x871 AND
0x872 DUP2
0x873 JUMP
---
0x865: JUMPDEST 
0x866: V858 = 0x0
0x868: V859 = S[0x0]
0x869: V860 = 0x1
0x86b: V861 = 0xa0
0x86d: V862 = 0x2
0x86f: V863 = EXP 0x2 0xa0
0x870: V864 = SUB 0x10000000000000000000000000000000000000000 0x1
0x871: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0x873: JUMP 0x6ee
---
Entry stack: [V12, 0x6ee]
Stack pops: 1
Stack additions: [S0, V865]
Exit stack: [V12, 0x6ee, V865]

================================

Block 0x874
[0x874:0x881]
---
Predecessors: [0x715]
Successors: [0x71d]
---
0x874 JUMPDEST
0x875 PUSH1 0x8
0x877 SLOAD
0x878 PUSH2 0x100
0x87b SWAP1
0x87c DIV
0x87d PUSH1 0xff
0x87f AND
0x880 DUP2
0x881 JUMP
---
0x874: JUMPDEST 
0x875: V866 = 0x8
0x877: V867 = S[0x8]
0x878: V868 = 0x100
0x87c: V869 = DIV V867 0x100
0x87d: V870 = 0xff
0x87f: V871 = AND 0xff V869
0x881: JUMP 0x71d
---
Entry stack: [V12, 0x71d]
Stack pops: 1
Stack additions: [S0, V871]
Exit stack: [V12, 0x71d, V871]

================================

Block 0x882
[0x882:0x887]
---
Predecessors: [0x73c]
Successors: [0x744]
---
0x882 JUMPDEST
0x883 PUSH1 0x6
0x885 SLOAD
0x886 DUP2
0x887 JUMP
---
0x882: JUMPDEST 
0x883: V872 = 0x6
0x885: V873 = S[0x6]
0x887: JUMP 0x744
---
Entry stack: [V12, 0x744]
Stack pops: 1
Stack additions: [S0, V873]
Exit stack: [V12, 0x744, V873]

================================

Block 0x888
[0x888:0x88d]
---
Predecessors: [0x761]
Successors: [0x744]
---
0x888 JUMPDEST
0x889 PUSH1 0x1
0x88b SLOAD
0x88c DUP2
0x88d JUMP
---
0x888: JUMPDEST 
0x889: V874 = 0x1
0x88b: V875 = S[0x1]
0x88d: JUMP 0x744
---
Entry stack: [V12, 0x744]
Stack pops: 1
Stack additions: [S0, V875]
Exit stack: [V12, 0x744, V875]

================================

Block 0x88e
[0x88e:0x8a2]
---
Predecessors: [0x786]
Successors: [0x6ee]
---
0x88e JUMPDEST
0x88f PUSH1 0x8
0x891 SLOAD
0x892 PUSH3 0x10000
0x896 SWAP1
0x897 DIV
0x898 PUSH1 0x1
0x89a PUSH1 0xa0
0x89c PUSH1 0x2
0x89e EXP
0x89f SUB
0x8a0 AND
0x8a1 DUP2
0x8a2 JUMP
---
0x88e: JUMPDEST 
0x88f: V876 = 0x8
0x891: V877 = S[0x8]
0x892: V878 = 0x10000
0x897: V879 = DIV V877 0x10000
0x898: V880 = 0x1
0x89a: V881 = 0xa0
0x89c: V882 = 0x2
0x89e: V883 = EXP 0x2 0xa0
0x89f: V884 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a0: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V879
0x8a2: JUMP 0x6ee
---
Entry stack: [V12, 0x6ee]
Stack pops: 1
Stack additions: [S0, V885]
Exit stack: [V12, 0x6ee, V885]

================================

Block 0x8a3
[0x8a3:0x8a8]
---
Predecessors: [0x7b5]
Successors: [0x744]
---
0x8a3 JUMPDEST
0x8a4 PUSH1 0x7
0x8a6 SLOAD
0x8a7 DUP2
0x8a8 JUMP
---
0x8a3: JUMPDEST 
0x8a4: V886 = 0x7
0x8a6: V887 = S[0x7]
0x8a8: JUMP 0x744
---
Entry stack: [V12, 0x744]
Stack pops: 1
Stack additions: [S0, V887]
Exit stack: [V12, 0x744, V887]

================================

Block 0x8a9
[0x8a9:0x8ae]
---
Predecessors: [0x7da]
Successors: [0x744]
---
0x8a9 JUMPDEST
0x8aa PUSH1 0x4
0x8ac SLOAD
0x8ad DUP2
0x8ae JUMP
---
0x8a9: JUMPDEST 
0x8aa: V888 = 0x4
0x8ac: V889 = S[0x4]
0x8ae: JUMP 0x744
---
Entry stack: [V12, 0x744]
Stack pops: 1
Stack additions: [S0, V889]
Exit stack: [V12, 0x744, V889]

================================

Block 0x8af
[0x8af:0x8b4]
---
Predecessors: [0x7ff]
Successors: [0x744]
---
0x8af JUMPDEST
0x8b0 PUSH1 0x2
0x8b2 SLOAD
0x8b3 DUP2
0x8b4 JUMP
---
0x8af: JUMPDEST 
0x8b0: V890 = 0x2
0x8b2: V891 = S[0x2]
0x8b4: JUMP 0x744
---
Entry stack: [V12, 0x744]
Stack pops: 1
Stack additions: [S0, V891]
Exit stack: [V12, 0x744, V891]

================================

Block 0x8b5
[0x8b5:0x8ba]
---
Predecessors: [0x824]
Successors: [0x744]
---
0x8b5 JUMPDEST
0x8b6 PUSH1 0x3
0x8b8 SLOAD
0x8b9 DUP2
0x8ba JUMP
---
0x8b5: JUMPDEST 
0x8b6: V892 = 0x3
0x8b8: V893 = S[0x3]
0x8ba: JUMP 0x744
---
Entry stack: [V12, 0x744]
Stack pops: 1
Stack additions: [S0, V893]
Exit stack: [V12, 0x744, V893]

================================

Block 0x8bb
[0x8bb:0x8c3]
---
Predecessors: [0x849]
Successors: [0x71d]
---
0x8bb JUMPDEST
0x8bc PUSH1 0x8
0x8be SLOAD
0x8bf PUSH1 0xff
0x8c1 AND
0x8c2 DUP2
0x8c3 JUMP
---
0x8bb: JUMPDEST 
0x8bc: V894 = 0x8
0x8be: V895 = S[0x8]
0x8bf: V896 = 0xff
0x8c1: V897 = AND 0xff V895
0x8c3: JUMP 0x71d
---
Entry stack: [V12, 0x71d]
Stack pops: 1
Stack additions: [S0, V897]
Exit stack: [V12, 0x71d, V897]

================================

Block 0x8c4
[0x8c4:0x8f3]
---
Predecessors: []
Successors: []
---
0x8c4 STOP
0x8c5 LOG1
0x8c6 PUSH6 0x627a7a723058
0x8cd SHA3
0x8ce MISSING 0x48
0x8cf POP
0x8d0 MISSING 0xa8
0x8d1 CODESIZE
0x8d2 SMOD
0x8d3 MISSING 0x4b
0x8d4 SLT
0x8d5 MISSING 0xbf
0x8d6 MISSING 0x2d
0x8d7 SMOD
0x8d8 MISSING 0xb6
0x8d9 PUSH26 0x601200bab4bd6b4c53123999c19482f0e6f066240029
---
0x8c4: STOP 
0x8c5: LOG S0 S1 S2
0x8c6: V898 = 0x627a7a723058
0x8cd: V899 = SHA3 0x627a7a723058 S3
0x8ce: MISSING 0x48
0x8d0: MISSING 0xa8
0x8d1: V900 = CODESIZE
0x8d2: V901 = SMOD V900 S0
0x8d3: MISSING 0x4b
0x8d4: V902 = SLT S0 S1
0x8d5: MISSING 0xbf
0x8d6: MISSING 0x2d
0x8d7: V903 = SMOD S0 S1
0x8d8: MISSING 0xb6
0x8d9: V904 = 0x601200bab4bd6b4c53123999c19482f0e6f066240029
---
Entry stack: []
Stack pops: 0
Stack additions: [V899, V901, V902, V903, 0x601200bab4bd6b4c53123999c19482f0e6f066240029]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebcf0e
Entry block: 0x6db
Exit block: 0x6ee
Body: 0x6db, 0x6e2, 0x6e6, 0x6ee, 0x865

Function 1:
Public function signature: 0x30c74e04
Entry block: 0x70a
Exit block: 0x71d
Body: 0x70a, 0x711, 0x715, 0x71d, 0x874

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x731
Exit block: 0x744
Body: 0x731, 0x738, 0x73c, 0x744, 0x882

Function 3:
Public function signature: 0x7fa8c158
Entry block: 0x756
Exit block: 0x744
Body: 0x744, 0x756, 0x75d, 0x761, 0x888

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x77b
Exit block: 0x6ee
Body: 0x6ee, 0x77b, 0x782, 0x786, 0x88e

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x7aa
Exit block: 0x744
Body: 0x744, 0x7aa, 0x7b1, 0x7b5, 0x8a3

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x7cf
Exit block: 0x744
Body: 0x744, 0x7cf, 0x7d6, 0x7da, 0x8a9

Function 7:
Public function signature: 0xb44eccc9
Entry block: 0x7f4
Exit block: 0x744
Body: 0x744, 0x7f4, 0x7fb, 0x7ff, 0x8af

Function 8:
Public function signature: 0xc8e569a8
Entry block: 0x819
Exit block: 0x744
Body: 0x744, 0x819, 0x820, 0x824, 0x8b5

Function 9:
Public function signature: 0xccb07cef
Entry block: 0x83e
Exit block: 0x71d
Body: 0x71d, 0x83e, 0x845, 0x849, 0x8bb

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x644
Body: 0x88, 0x89, 0x9b, 0xaa, 0xb7, 0xc2, 0xc3, 0x11a, 0x11e, 0x12b, 0x12f, 0x146, 0x173, 0x177, 0x17c, 0x187, 0x1b4, 0x1b8, 0x1ca, 0x23e, 0x242, 0x24f, 0x253, 0x29c, 0x2a0, 0x2ad, 0x2b1, 0x30b, 0x30f, 0x31c, 0x320, 0x345, 0x34a, 0x356, 0x383, 0x38c, 0x39b, 0x39c, 0x3a9, 0x3ad, 0x3bd, 0x3be, 0x3cd, 0x401, 0x405, 0x40e, 0x43e, 0x442, 0x443, 0x495, 0x499, 0x4a6, 0x4aa, 0x4c7, 0x4d4, 0x4d9, 0x4eb, 0x4ec, 0x526, 0x52a, 0x583, 0x587, 0x594, 0x598, 0x5cc, 0x5d0, 0x633, 0x637, 0x644, 0x648, 0x662, 0x663, 0x664, 0x665, 0x6d6

