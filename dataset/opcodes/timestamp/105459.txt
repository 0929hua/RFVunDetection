args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/6/105459.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x7c]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2d2295ad
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x7c
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2d2295ad
0x3b: V13 = EQ V11 0x2d2295ad
0x3c: V14 = 0x7c
0x3f: JUMPI 0x7c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x93]
---
0x40 DUP1
0x41 PUSH4 0x733fd8c7
0x46 EQ
0x47 PUSH2 0x93
0x4a JUMPI
---
0x41: V15 = 0x733fd8c7
0x46: V16 = EQ 0x733fd8c7 V11
0x47: V17 = 0x93
0x4a: JUMPI 0x93 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xc4]
---
0x4b DUP1
0x4c PUSH4 0x7803af8c
0x51 EQ
0x52 PUSH2 0xc4
0x55 JUMPI
---
0x4c: V18 = 0x7803af8c
0x51: V19 = EQ 0x7803af8c V11
0x52: V20 = 0xc4
0x55: JUMPI 0xc4 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xd9]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0xd9
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0xd9
0x60: JUMPI 0xd9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xee]
---
0x61 DUP1
0x62 PUSH4 0xda284dcc
0x67 EQ
0x68 PUSH2 0xee
0x6b JUMPI
---
0x62: V24 = 0xda284dcc
0x67: V25 = EQ 0xda284dcc V11
0x68: V26 = 0xee
0x6b: JUMPI 0xee V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x115]
---
0x6c DUP1
0x6d PUSH4 0xf6954379
0x72 EQ
0x73 PUSH2 0x115
0x76 JUMPI
---
0x6d: V27 = 0xf6954379
0x72: V28 = EQ 0xf6954379 V11
0x73: V29 = 0x115
0x76: JUMPI 0x115 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x7b]
---
Predecessors: [0x0, 0x6c]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x0
0x7a DUP1
0x7b REVERT
---
0x77: JUMPDEST 
0x78: V30 = 0x0
0x7b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x83]
---
Predecessors: [0xd]
Successors: [0x84, 0x88]
---
0x7c JUMPDEST
0x7d CALLVALUE
0x7e DUP1
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7c: JUMPDEST 
0x7d: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, V31]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7c]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V31]

================================

Block 0x88
[0x88:0x90]
---
Predecessors: [0x7c]
Successors: [0x12a]
---
0x88 JUMPDEST
0x89 POP
0x8a PUSH2 0x91
0x8d PUSH2 0x12a
0x90 JUMP
---
0x88: JUMPDEST 
0x8a: V35 = 0x91
0x8d: V36 = 0x12a
0x90: JUMP 0x12a
---
Entry stack: [V11, V31]
Stack pops: 1
Stack additions: [0x91]
Exit stack: [V11, 0x91]

================================

Block 0x91
[0x91:0x92]
---
Predecessors: [0x17b, 0x233]
Successors: []
---
0x91 JUMPDEST
0x92 STOP
---
0x91: JUMPDEST 
0x92: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x9a]
---
Predecessors: [0x40]
Successors: [0x9b, 0x9f]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 DUP1
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x93: JUMPDEST 
0x94: V37 = CALLVALUE
0x96: V38 = ISZERO V37
0x97: V39 = 0x9f
0x9a: JUMPI 0x9f V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x93]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V40 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0x9f
[0x9f:0xa7]
---
Predecessors: [0x93]
Successors: [0x1c5]
---
0x9f JUMPDEST
0xa0 POP
0xa1 PUSH2 0xa8
0xa4 PUSH2 0x1c5
0xa7 JUMP
---
0x9f: JUMPDEST 
0xa1: V41 = 0xa8
0xa4: V42 = 0x1c5
0xa7: JUMP 0x1c5
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0xa8
[0xa8:0xc3]
---
Predecessors: [0x1c5, 0x27d, 0x292]
Successors: []
---
0xa8 JUMPDEST
0xa9 PUSH1 0x40
0xab DUP1
0xac MLOAD
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP1
0xb6 SWAP3
0xb7 AND
0xb8 DUP3
0xb9 MSTORE
0xba MLOAD
0xbb SWAP1
0xbc DUP2
0xbd SWAP1
0xbe SUB
0xbf PUSH1 0x20
0xc1 ADD
0xc2 SWAP1
0xc3 RETURN
---
0xa8: JUMPDEST 
0xa9: V43 = 0x40
0xac: V44 = M[0x40]
0xad: V45 = 0x1
0xaf: V46 = 0xa0
0xb1: V47 = 0x2
0xb3: V48 = EXP 0x2 0xa0
0xb4: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V50 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xb9: M[V44] = V50
0xba: V51 = M[0x40]
0xbe: V52 = SUB V44 V51
0xbf: V53 = 0x20
0xc1: V54 = ADD 0x20 V52
0xc3: RETURN V51 V54
---
Entry stack: [V11, 0xa8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa8]

================================

Block 0xc4
[0xc4:0xcb]
---
Predecessors: [0x4b]
Successors: [0xcc, 0xd0]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 DUP1
0xc7 ISZERO
0xc8 PUSH2 0xd0
0xcb JUMPI
---
0xc4: JUMPDEST 
0xc5: V55 = CALLVALUE
0xc7: V56 = ISZERO V55
0xc8: V57 = 0xd0
0xcb: JUMPI 0xd0 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0xcc
[0xcc:0xcf]
---
Predecessors: [0xc4]
Successors: []
---
0xcc PUSH1 0x0
0xce DUP1
0xcf REVERT
---
0xcc: V58 = 0x0
0xcf: REVERT 0x0 0x0
---
Entry stack: [V11, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55]

================================

Block 0xd0
[0xd0:0xd8]
---
Predecessors: [0xc4]
Successors: [0x1d4]
---
0xd0 JUMPDEST
0xd1 POP
0xd2 PUSH2 0x91
0xd5 PUSH2 0x1d4
0xd8 JUMP
---
0xd0: JUMPDEST 
0xd2: V59 = 0x91
0xd5: V60 = 0x1d4
0xd8: JUMP 0x1d4
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [0x91]
Exit stack: [V11, 0x91]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0x56]
Successors: [0xe1, 0xe5]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb DUP1
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xd9: JUMPDEST 
0xda: V61 = CALLVALUE
0xdc: V62 = ISZERO V61
0xdd: V63 = 0xe5
0xe0: JUMPI 0xe5 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xd9]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V64 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0xe5
[0xe5:0xed]
---
Predecessors: [0xd9]
Successors: [0x27d]
---
0xe5 JUMPDEST
0xe6 POP
0xe7 PUSH2 0xa8
0xea PUSH2 0x27d
0xed JUMP
---
0xe5: JUMPDEST 
0xe7: V65 = 0xa8
0xea: V66 = 0x27d
0xed: JUMP 0x27d
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0xee
[0xee:0xf5]
---
Predecessors: [0x61]
Successors: [0xf6, 0xfa]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 DUP1
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xee: JUMPDEST 
0xef: V67 = CALLVALUE
0xf1: V68 = ISZERO V67
0xf2: V69 = 0xfa
0xf5: JUMPI 0xfa V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xee]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V70 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0xfa
[0xfa:0x102]
---
Predecessors: [0xee]
Successors: [0x28c]
---
0xfa JUMPDEST
0xfb POP
0xfc PUSH2 0x103
0xff PUSH2 0x28c
0x102 JUMP
---
0xfa: JUMPDEST 
0xfc: V71 = 0x103
0xff: V72 = 0x28c
0x102: JUMP 0x28c
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0x103]
Exit stack: [V11, 0x103]

================================

Block 0x103
[0x103:0x114]
---
Predecessors: [0x28c]
Successors: []
---
0x103 JUMPDEST
0x104 PUSH1 0x40
0x106 DUP1
0x107 MLOAD
0x108 SWAP2
0x109 DUP3
0x10a MSTORE
0x10b MLOAD
0x10c SWAP1
0x10d DUP2
0x10e SWAP1
0x10f SUB
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP1
0x114 RETURN
---
0x103: JUMPDEST 
0x104: V73 = 0x40
0x107: V74 = M[0x40]
0x10a: M[V74] = V216
0x10b: V75 = M[0x40]
0x10f: V76 = SUB V74 V75
0x110: V77 = 0x20
0x112: V78 = ADD 0x20 V76
0x114: RETURN V75 V78
---
Entry stack: [V11, 0x103, V216]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x103]

================================

Block 0x115
[0x115:0x11c]
---
Predecessors: [0x6c]
Successors: [0x11d, 0x121]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 DUP1
0x118 ISZERO
0x119 PUSH2 0x121
0x11c JUMPI
---
0x115: JUMPDEST 
0x116: V79 = CALLVALUE
0x118: V80 = ISZERO V79
0x119: V81 = 0x121
0x11c: JUMPI 0x121 V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, V79]

================================

Block 0x11d
[0x11d:0x120]
---
Predecessors: [0x115]
Successors: []
---
0x11d PUSH1 0x0
0x11f DUP1
0x120 REVERT
---
0x11d: V82 = 0x0
0x120: REVERT 0x0 0x0
---
Entry stack: [V11, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V79]

================================

Block 0x121
[0x121:0x129]
---
Predecessors: [0x115]
Successors: [0x292]
---
0x121 JUMPDEST
0x122 POP
0x123 PUSH2 0xa8
0x126 PUSH2 0x292
0x129 JUMP
---
0x121: JUMPDEST 
0x123: V83 = 0xa8
0x126: V84 = 0x292
0x129: JUMP 0x292
---
Entry stack: [V11, V79]
Stack pops: 1
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0x12a
[0x12a:0x13c]
---
Predecessors: [0x88]
Successors: [0x13d, 0x141]
---
0x12a JUMPDEST
0x12b PUSH1 0x0
0x12d SLOAD
0x12e PUSH1 0x1
0x130 PUSH1 0xa0
0x132 PUSH1 0x2
0x134 EXP
0x135 SUB
0x136 AND
0x137 CALLER
0x138 EQ
0x139 PUSH2 0x141
0x13c JUMPI
---
0x12a: JUMPDEST 
0x12b: V85 = 0x0
0x12d: V86 = S[0x0]
0x12e: V87 = 0x1
0x130: V88 = 0xa0
0x132: V89 = 0x2
0x134: V90 = EXP 0x2 0xa0
0x135: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x137: V93 = CALLER
0x138: V94 = EQ V93 V92
0x139: V95 = 0x141
0x13c: JUMPI 0x141 V94
---
Entry stack: [V11, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x12a]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V96 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V11, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91]

================================

Block 0x141
[0x141:0x171]
---
Predecessors: [0x12a]
Successors: [0x172, 0x17b]
---
0x141 JUMPDEST
0x142 PUSH1 0x2
0x144 SLOAD
0x145 PUSH1 0x40
0x147 MLOAD
0x148 PUSH1 0x1
0x14a PUSH1 0xa0
0x14c PUSH1 0x2
0x14e EXP
0x14f SUB
0x150 SWAP1
0x151 SWAP2
0x152 AND
0x153 SWAP1
0x154 ADDRESS
0x155 BALANCE
0x156 DUP1
0x157 ISZERO
0x158 PUSH2 0x8fc
0x15b MUL
0x15c SWAP2
0x15d PUSH1 0x0
0x15f DUP2
0x160 DUP2
0x161 DUP2
0x162 DUP6
0x163 DUP9
0x164 DUP9
0x165 CALL
0x166 SWAP4
0x167 POP
0x168 POP
0x169 POP
0x16a POP
0x16b ISZERO
0x16c DUP1
0x16d ISZERO
0x16e PUSH2 0x17b
0x171 JUMPI
---
0x141: JUMPDEST 
0x142: V97 = 0x2
0x144: V98 = S[0x2]
0x145: V99 = 0x40
0x147: V100 = M[0x40]
0x148: V101 = 0x1
0x14a: V102 = 0xa0
0x14c: V103 = 0x2
0x14e: V104 = EXP 0x2 0xa0
0x14f: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x152: V106 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x154: V107 = ADDRESS
0x155: V108 = BALANCE V107
0x157: V109 = ISZERO V108
0x158: V110 = 0x8fc
0x15b: V111 = MUL 0x8fc V109
0x15d: V112 = 0x0
0x165: V113 = CALL V111 V106 V108 V100 0x0 V100 0x0
0x16b: V114 = ISZERO V113
0x16d: V115 = ISZERO V114
0x16e: V116 = 0x17b
0x171: JUMPI 0x17b V115
---
Entry stack: [V11, 0x91]
Stack pops: 0
Stack additions: [V114]
Exit stack: [V11, 0x91, V114]

================================

Block 0x172
[0x172:0x17a]
---
Predecessors: [0x141]
Successors: []
---
0x172 RETURNDATASIZE
0x173 PUSH1 0x0
0x175 DUP1
0x176 RETURNDATACOPY
0x177 RETURNDATASIZE
0x178 PUSH1 0x0
0x17a REVERT
---
0x172: V117 = RETURNDATASIZE
0x173: V118 = 0x0
0x176: RETURNDATACOPY 0x0 0x0 V117
0x177: V119 = RETURNDATASIZE
0x178: V120 = 0x0
0x17a: REVERT 0x0 V119
---
Entry stack: [V11, 0x91, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, V114]

================================

Block 0x17b
[0x17b:0x1c4]
---
Predecessors: [0x141]
Successors: [0x91]
---
0x17b JUMPDEST
0x17c POP
0x17d PUSH1 0x2
0x17f SLOAD
0x180 PUSH1 0x40
0x182 DUP1
0x183 MLOAD
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c SWAP1
0x18d SWAP3
0x18e AND
0x18f DUP3
0x190 MSTORE
0x191 ADDRESS
0x192 BALANCE
0x193 PUSH1 0x20
0x195 DUP4
0x196 ADD
0x197 MSTORE
0x198 DUP1
0x199 MLOAD
0x19a PUSH32 0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76
0x1bb SWAP3
0x1bc DUP2
0x1bd SWAP1
0x1be SUB
0x1bf SWAP1
0x1c0 SWAP2
0x1c1 ADD
0x1c2 SWAP1
0x1c3 LOG1
0x1c4 JUMP
---
0x17b: JUMPDEST 
0x17d: V121 = 0x2
0x17f: V122 = S[0x2]
0x180: V123 = 0x40
0x183: V124 = M[0x40]
0x184: V125 = 0x1
0x186: V126 = 0xa0
0x188: V127 = 0x2
0x18a: V128 = EXP 0x2 0xa0
0x18b: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V130 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x190: M[V124] = V130
0x191: V131 = ADDRESS
0x192: V132 = BALANCE V131
0x193: V133 = 0x20
0x196: V134 = ADD V124 0x20
0x197: M[V134] = V132
0x199: V135 = M[0x40]
0x19a: V136 = 0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76
0x1be: V137 = SUB V124 V135
0x1c1: V138 = ADD 0x40 V137
0x1c3: LOG V135 V138 0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76
0x1c4: JUMP 0x91
---
Entry stack: [V11, 0x91, V114]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c5
[0x1c5:0x1d3]
---
Predecessors: [0x9f]
Successors: [0xa8]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x2
0x1c8 SLOAD
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 AND
0x1d2 DUP2
0x1d3 JUMP
---
0x1c5: JUMPDEST 
0x1c6: V139 = 0x2
0x1c8: V140 = S[0x2]
0x1c9: V141 = 0x1
0x1cb: V142 = 0xa0
0x1cd: V143 = 0x2
0x1cf: V144 = EXP 0x2 0xa0
0x1d0: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1d3: JUMP 0xa8
---
Entry stack: [V11, 0xa8]
Stack pops: 1
Stack additions: [S0, V146]
Exit stack: [V11, 0xa8, V146]

================================

Block 0x1d4
[0x1d4:0x1e6]
---
Predecessors: [0xd0]
Successors: [0x1e7, 0x1eb]
---
0x1d4 JUMPDEST
0x1d5 PUSH1 0x0
0x1d7 SLOAD
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 AND
0x1e1 CALLER
0x1e2 EQ
0x1e3 PUSH2 0x1eb
0x1e6 JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V147 = 0x0
0x1d7: V148 = S[0x0]
0x1d8: V149 = 0x1
0x1da: V150 = 0xa0
0x1dc: V151 = 0x2
0x1de: V152 = EXP 0x2 0xa0
0x1df: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e0: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1e1: V155 = CALLER
0x1e2: V156 = EQ V155 V154
0x1e3: V157 = 0x1eb
0x1e6: JUMPI 0x1eb V156
---
Entry stack: [V11, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91]

================================

Block 0x1e7
[0x1e7:0x1ea]
---
Predecessors: [0x1d4]
Successors: []
---
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea REVERT
---
0x1e7: V158 = 0x0
0x1ea: REVERT 0x0 0x0
---
Entry stack: [V11, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91]

================================

Block 0x1eb
[0x1eb:0x1f4]
---
Predecessors: [0x1d4]
Successors: [0x1f5, 0x1f9]
---
0x1eb JUMPDEST
0x1ec PUSH1 0x3
0x1ee SLOAD
0x1ef TIMESTAMP
0x1f0 LT
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V159 = 0x3
0x1ee: V160 = S[0x3]
0x1ef: V161 = TIMESTAMP
0x1f0: V162 = LT V161 V160
0x1f1: V163 = 0x1f9
0x1f4: JUMPI 0x1f9 V162
---
Entry stack: [V11, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V164 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91]

================================

Block 0x1f9
[0x1f9:0x229]
---
Predecessors: [0x1eb]
Successors: [0x22a, 0x233]
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x1
0x1fc SLOAD
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 SWAP1
0x209 SWAP2
0x20a AND
0x20b SWAP1
0x20c ADDRESS
0x20d BALANCE
0x20e DUP1
0x20f ISZERO
0x210 PUSH2 0x8fc
0x213 MUL
0x214 SWAP2
0x215 PUSH1 0x0
0x217 DUP2
0x218 DUP2
0x219 DUP2
0x21a DUP6
0x21b DUP9
0x21c DUP9
0x21d CALL
0x21e SWAP4
0x21f POP
0x220 POP
0x221 POP
0x222 POP
0x223 ISZERO
0x224 DUP1
0x225 ISZERO
0x226 PUSH2 0x233
0x229 JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V165 = 0x1
0x1fc: V166 = S[0x1]
0x1fd: V167 = 0x40
0x1ff: V168 = M[0x40]
0x200: V169 = 0x1
0x202: V170 = 0xa0
0x204: V171 = 0x2
0x206: V172 = EXP 0x2 0xa0
0x207: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V174 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V175 = ADDRESS
0x20d: V176 = BALANCE V175
0x20f: V177 = ISZERO V176
0x210: V178 = 0x8fc
0x213: V179 = MUL 0x8fc V177
0x215: V180 = 0x0
0x21d: V181 = CALL V179 V174 V176 V168 0x0 V168 0x0
0x223: V182 = ISZERO V181
0x225: V183 = ISZERO V182
0x226: V184 = 0x233
0x229: JUMPI 0x233 V183
---
Entry stack: [V11, 0x91]
Stack pops: 0
Stack additions: [V182]
Exit stack: [V11, 0x91, V182]

================================

Block 0x22a
[0x22a:0x232]
---
Predecessors: [0x1f9]
Successors: []
---
0x22a RETURNDATASIZE
0x22b PUSH1 0x0
0x22d DUP1
0x22e RETURNDATACOPY
0x22f RETURNDATASIZE
0x230 PUSH1 0x0
0x232 REVERT
---
0x22a: V185 = RETURNDATASIZE
0x22b: V186 = 0x0
0x22e: RETURNDATACOPY 0x0 0x0 V185
0x22f: V187 = RETURNDATASIZE
0x230: V188 = 0x0
0x232: REVERT 0x0 V187
---
Entry stack: [V11, 0x91, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, V182]

================================

Block 0x233
[0x233:0x27c]
---
Predecessors: [0x1f9]
Successors: [0x91]
---
0x233 JUMPDEST
0x234 POP
0x235 PUSH1 0x2
0x237 SLOAD
0x238 PUSH1 0x40
0x23a DUP1
0x23b MLOAD
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 SWAP1
0x245 SWAP3
0x246 AND
0x247 DUP3
0x248 MSTORE
0x249 ADDRESS
0x24a BALANCE
0x24b PUSH1 0x20
0x24d DUP4
0x24e ADD
0x24f MSTORE
0x250 DUP1
0x251 MLOAD
0x252 PUSH32 0x32f9105f1f75b5b33eb364ef7cbcc315a3ab271871d72edcdd802b851df2c322
0x273 SWAP3
0x274 DUP2
0x275 SWAP1
0x276 SUB
0x277 SWAP1
0x278 SWAP2
0x279 ADD
0x27a SWAP1
0x27b LOG1
0x27c JUMP
---
0x233: JUMPDEST 
0x235: V189 = 0x2
0x237: V190 = S[0x2]
0x238: V191 = 0x40
0x23b: V192 = M[0x40]
0x23c: V193 = 0x1
0x23e: V194 = 0xa0
0x240: V195 = 0x2
0x242: V196 = EXP 0x2 0xa0
0x243: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x246: V198 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x248: M[V192] = V198
0x249: V199 = ADDRESS
0x24a: V200 = BALANCE V199
0x24b: V201 = 0x20
0x24e: V202 = ADD V192 0x20
0x24f: M[V202] = V200
0x251: V203 = M[0x40]
0x252: V204 = 0x32f9105f1f75b5b33eb364ef7cbcc315a3ab271871d72edcdd802b851df2c322
0x276: V205 = SUB V192 V203
0x279: V206 = ADD 0x40 V205
0x27b: LOG V203 V206 0x32f9105f1f75b5b33eb364ef7cbcc315a3ab271871d72edcdd802b851df2c322
0x27c: JUMP 0x91
---
Entry stack: [V11, 0x91, V182]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x27d
[0x27d:0x28b]
---
Predecessors: [0xe5]
Successors: [0xa8]
---
0x27d JUMPDEST
0x27e PUSH1 0x0
0x280 SLOAD
0x281 PUSH1 0x1
0x283 PUSH1 0xa0
0x285 PUSH1 0x2
0x287 EXP
0x288 SUB
0x289 AND
0x28a DUP2
0x28b JUMP
---
0x27d: JUMPDEST 
0x27e: V207 = 0x0
0x280: V208 = S[0x0]
0x281: V209 = 0x1
0x283: V210 = 0xa0
0x285: V211 = 0x2
0x287: V212 = EXP 0x2 0xa0
0x288: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x289: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x28b: JUMP 0xa8
---
Entry stack: [V11, 0xa8]
Stack pops: 1
Stack additions: [S0, V214]
Exit stack: [V11, 0xa8, V214]

================================

Block 0x28c
[0x28c:0x291]
---
Predecessors: [0xfa]
Successors: [0x103]
---
0x28c JUMPDEST
0x28d PUSH1 0x3
0x28f SLOAD
0x290 DUP2
0x291 JUMP
---
0x28c: JUMPDEST 
0x28d: V215 = 0x3
0x28f: V216 = S[0x3]
0x291: JUMP 0x103
---
Entry stack: [V11, 0x103]
Stack pops: 1
Stack additions: [S0, V216]
Exit stack: [V11, 0x103, V216]

================================

Block 0x292
[0x292:0x2a0]
---
Predecessors: [0x121]
Successors: [0xa8]
---
0x292 JUMPDEST
0x293 PUSH1 0x1
0x295 SLOAD
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a PUSH1 0x2
0x29c EXP
0x29d SUB
0x29e AND
0x29f DUP2
0x2a0 JUMP
---
0x292: JUMPDEST 
0x293: V217 = 0x1
0x295: V218 = S[0x1]
0x296: V219 = 0x1
0x298: V220 = 0xa0
0x29a: V221 = 0x2
0x29c: V222 = EXP 0x2 0xa0
0x29d: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29e: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x2a0: JUMP 0xa8
---
Entry stack: [V11, 0xa8]
Stack pops: 1
Stack additions: [S0, V224]
Exit stack: [V11, 0xa8, V224]

================================

Block 0x2a1
[0x2a1:0x2d0]
---
Predecessors: []
Successors: []
---
0x2a1 STOP
0x2a2 LOG1
0x2a3 PUSH6 0x627a7a723058
0x2aa SHA3
0x2ab SDIV
0x2ac DUP10
0x2ad MISSING 0xc4
0x2ae MISSING 0x25
0x2af SELFDESTRUCT
0x2b0 RETURNDATASIZE
0x2b1 MISSING 0xd0
0x2b2 MISSING 0xe2
0x2b3 CODESIZE
0x2b4 PUSH15 0xaf80f3dd306455d6f281772e955c30
0x2c4 MISSING 0xb7
0x2c5 DUP3
0x2c6 PUSH10 0xf53ca10f0029
---
0x2a1: STOP 
0x2a2: LOG S0 S1 S2
0x2a3: V225 = 0x627a7a723058
0x2aa: V226 = SHA3 0x627a7a723058 S3
0x2ab: V227 = SDIV V226 S4
0x2ad: MISSING 0xc4
0x2ae: MISSING 0x25
0x2af: SELFDESTRUCT S0
0x2b0: V228 = RETURNDATASIZE
0x2b1: MISSING 0xd0
0x2b2: MISSING 0xe2
0x2b3: V229 = CODESIZE
0x2b4: V230 = 0xaf80f3dd306455d6f281772e955c30
0x2c4: MISSING 0xb7
0x2c6: V231 = 0xf53ca10f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, V227, S5, S6, S7, S8, S9, S10, S11, S12, S13, V228, 0xaf80f3dd306455d6f281772e955c30, V229, 0xf53ca10f0029, S2, S0, S1, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d2295ad
Entry block: 0x7c
Exit block: 0x91
Body: 0x7c, 0x84, 0x88, 0x91, 0x12a, 0x13d, 0x141, 0x172, 0x17b

Function 1:
Public function signature: 0x733fd8c7
Entry block: 0x93
Exit block: 0xa8
Body: 0x93, 0x9b, 0x9f, 0xa8, 0x1c5

Function 2:
Public function signature: 0x7803af8c
Entry block: 0xc4
Exit block: 0x91
Body: 0x91, 0xc4, 0xcc, 0xd0, 0x1d4, 0x1e7, 0x1eb, 0x1f5, 0x1f9, 0x22a, 0x233

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xd9
Exit block: 0xa8
Body: 0xa8, 0xd9, 0xe1, 0xe5, 0x27d

Function 4:
Public function signature: 0xda284dcc
Entry block: 0xee
Exit block: 0x103
Body: 0xee, 0xf6, 0xfa, 0x103, 0x28c

Function 5:
Public function signature: 0xf6954379
Entry block: 0x115
Exit block: 0xa8
Body: 0xa8, 0x115, 0x11d, 0x121, 0x292

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

