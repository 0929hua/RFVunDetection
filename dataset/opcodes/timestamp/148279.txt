Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xe2]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xe2
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xe2
0xc: JUMPI 0xe2 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x2e0]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x23548b8b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x2e0
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x23548b8b
0x22: V15 = EQ V13 0x23548b8b
0x23: V16 = 0x2e0
0x26: JUMPI 0x2e0 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x305]
---
0x27 DUP1
0x28 PUSH4 0x29dcb0cf
0x2d EQ
0x2e PUSH2 0x305
0x31 JUMPI
---
0x28: V17 = 0x29dcb0cf
0x2d: V18 = EQ 0x29dcb0cf V13
0x2e: V19 = 0x305
0x31: JUMPI 0x305 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x318]
---
0x32 DUP1
0x33 PUSH4 0x332d4357
0x38 EQ
0x39 PUSH2 0x318
0x3c JUMPI
---
0x33: V20 = 0x332d4357
0x38: V21 = EQ 0x332d4357 V13
0x39: V22 = 0x318
0x3c: JUMPI 0x318 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x332]
---
0x3d DUP1
0x3e PUSH4 0x34ec740a
0x43 EQ
0x44 PUSH2 0x332
0x47 JUMPI
---
0x3e: V23 = 0x34ec740a
0x43: V24 = EQ 0x34ec740a V13
0x44: V25 = 0x332
0x47: JUMPI 0x332 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x348]
---
0x48 DUP1
0x49 PUSH4 0x38af3eed
0x4e EQ
0x4f PUSH2 0x348
0x52 JUMPI
---
0x49: V26 = 0x38af3eed
0x4e: V27 = EQ 0x38af3eed V13
0x4f: V28 = 0x348
0x52: JUMPI 0x348 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x377]
---
0x53 DUP1
0x54 PUSH4 0x5affbd97
0x59 EQ
0x5a PUSH2 0x377
0x5d JUMPI
---
0x54: V29 = 0x5affbd97
0x59: V30 = EQ 0x5affbd97 V13
0x5a: V31 = 0x377
0x5d: JUMPI 0x377 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x396]
---
0x5e DUP1
0x5f PUSH4 0x6e66f6e9
0x64 EQ
0x65 PUSH2 0x396
0x68 JUMPI
---
0x5f: V32 = 0x6e66f6e9
0x64: V33 = EQ 0x6e66f6e9 V13
0x65: V34 = 0x396
0x68: JUMPI 0x396 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x3a9]
---
0x69 DUP1
0x6a PUSH4 0x70a08231
0x6f EQ
0x70 PUSH2 0x3a9
0x73 JUMPI
---
0x6a: V35 = 0x70a08231
0x6f: V36 = EQ 0x70a08231 V13
0x70: V37 = 0x3a9
0x73: JUMPI 0x3a9 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x3c8]
---
0x74 DUP1
0x75 PUSH4 0x70f48d43
0x7a EQ
0x7b PUSH2 0x3c8
0x7e JUMPI
---
0x75: V38 = 0x70f48d43
0x7a: V39 = EQ 0x70f48d43 V13
0x7b: V40 = 0x3c8
0x7e: JUMPI 0x3c8 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x3ef]
---
0x7f DUP1
0x80 PUSH4 0x7b3e5e7b
0x85 EQ
0x86 PUSH2 0x3ef
0x89 JUMPI
---
0x80: V41 = 0x7b3e5e7b
0x85: V42 = EQ 0x7b3e5e7b V13
0x86: V43 = 0x3ef
0x89: JUMPI 0x3ef V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x402]
---
0x8a DUP1
0x8b PUSH4 0x83197ef0
0x90 EQ
0x91 PUSH2 0x402
0x94 JUMPI
---
0x8b: V44 = 0x83197ef0
0x90: V45 = EQ 0x83197ef0 V13
0x91: V46 = 0x402
0x94: JUMPI 0x402 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x415]
---
0x95 DUP1
0x96 PUSH4 0x8486a79a
0x9b EQ
0x9c PUSH2 0x415
0x9f JUMPI
---
0x96: V47 = 0x8486a79a
0x9b: V48 = EQ 0x8486a79a V13
0x9c: V49 = 0x415
0x9f: JUMPI 0x415 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x428]
---
0xa0 DUP1
0xa1 PUSH4 0x89285fa1
0xa6 EQ
0xa7 PUSH2 0x428
0xaa JUMPI
---
0xa1: V50 = 0x89285fa1
0xa6: V51 = EQ 0x89285fa1 V13
0xa7: V52 = 0x428
0xaa: JUMPI 0x428 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x447]
---
0xab DUP1
0xac PUSH4 0xa035b1fe
0xb1 EQ
0xb2 PUSH2 0x447
0xb5 JUMPI
---
0xac: V53 = 0xa035b1fe
0xb1: V54 = EQ 0xa035b1fe V13
0xb2: V55 = 0x447
0xb5: JUMPI 0x447 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x45a]
---
0xb6 DUP1
0xb7 PUSH4 0xee55efee
0xbc EQ
0xbd PUSH2 0x45a
0xc0 JUMPI
---
0xb7: V56 = 0xee55efee
0xbc: V57 = EQ 0xee55efee V13
0xbd: V58 = 0x45a
0xc0: JUMPI 0x45a V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x46d]
---
0xc1 DUP1
0xc2 PUSH4 0xefb98bcf
0xc7 EQ
0xc8 PUSH2 0x46d
0xcb JUMPI
---
0xc2: V59 = 0xefb98bcf
0xc7: V60 = EQ 0xefb98bcf V13
0xc8: V61 = 0x46d
0xcb: JUMPI 0x46d V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x480]
---
0xcc DUP1
0xcd PUSH4 0xf2fde38b
0xd2 EQ
0xd3 PUSH2 0x480
0xd6 JUMPI
---
0xcd: V62 = 0xf2fde38b
0xd2: V63 = EQ 0xf2fde38b V13
0xd3: V64 = 0x480
0xd6: JUMPI 0x480 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x49f]
---
0xd7 DUP1
0xd8 PUSH4 0xf5074f41
0xdd EQ
0xde PUSH2 0x49f
0xe1 JUMPI
---
0xd8: V65 = 0xf5074f41
0xdd: V66 = EQ 0xf5074f41 V13
0xde: V67 = 0x49f
0xe1: JUMPI 0x49f V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xfa]
---
Predecessors: [0x0, 0xd7]
Successors: [0x4be]
---
0xe2 JUMPDEST
0xe3 PUSH1 0x4
0xe5 SLOAD
0xe6 CALLVALUE
0xe7 SWAP1
0xe8 PUSH1 0x0
0xea SWAP1
0xeb PUSH2 0xfb
0xee SWAP1
0xef DUP4
0xf0 SWAP1
0xf1 PUSH4 0xffffffff
0xf6 PUSH2 0x4be
0xf9 AND
0xfa JUMP
---
0xe2: JUMPDEST 
0xe3: V68 = 0x4
0xe5: V69 = S[0x4]
0xe6: V70 = CALLVALUE
0xe8: V71 = 0x0
0xeb: V72 = 0xfb
0xf1: V73 = 0xffffffff
0xf6: V74 = 0x4be
0xf9: V75 = AND 0x4be 0xffffffff
0xfa: JUMP 0x4be
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V70, 0x0, 0xfb, V70, V69]
Exit stack: [V13, V70, 0x0, 0xfb, V70, V69]

================================

Block 0xfb
[0xfb:0x109]
---
Predecessors: [0x4e7]
Successors: [0x10a, 0x10e]
---
0xfb JUMPDEST
0xfc PUSH1 0x9
0xfe SLOAD
0xff SWAP1
0x100 SWAP2
0x101 POP
0x102 PUSH1 0xff
0x104 AND
0x105 ISZERO
0x106 PUSH2 0x10e
0x109 JUMPI
---
0xfb: JUMPDEST 
0xfc: V76 = 0x9
0xfe: V77 = S[0x9]
0x102: V78 = 0xff
0x104: V79 = AND 0xff V77
0x105: V80 = ISZERO V79
0x106: V81 = 0x10e
0x109: JUMPI 0x10e V80
---
Entry stack: [V13, V70, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, V70, S0]

================================

Block 0x10a
[0x10a:0x10d]
---
Predecessors: [0xfb]
Successors: []
---
0x10a PUSH1 0x0
0x10c DUP1
0x10d REVERT
---
0x10a: V82 = 0x0
0x10d: REVERT 0x0 0x0
---
Entry stack: [V13, V70, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S0]

================================

Block 0x10e
[0x10e:0x118]
---
Predecessors: [0xfb]
Successors: [0x119, 0x11d]
---
0x10e JUMPDEST
0x10f PUSH1 0x5
0x111 SLOAD
0x112 CALLVALUE
0x113 LT
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x10e: JUMPDEST 
0x10f: V83 = 0x5
0x111: V84 = S[0x5]
0x112: V85 = CALLVALUE
0x113: V86 = LT V85 V84
0x114: V87 = ISZERO V86
0x115: V88 = 0x11d
0x118: JUMPI 0x11d V87
---
Entry stack: [V13, V70, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S0]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x10e]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V89 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V13, V70, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S0]

================================

Block 0x11d
[0x11d:0x145]
---
Predecessors: [0x10e]
Successors: [0x4ed]
---
0x11d JUMPDEST
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 CALLER
0x127 AND
0x128 PUSH1 0x0
0x12a SWAP1
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x8
0x12f PUSH1 0x20
0x131 MSTORE
0x132 PUSH1 0x40
0x134 SWAP1
0x135 SHA3
0x136 SLOAD
0x137 PUSH2 0x146
0x13a SWAP1
0x13b DUP4
0x13c PUSH4 0xffffffff
0x141 PUSH2 0x4ed
0x144 AND
0x145 JUMP
---
0x11d: JUMPDEST 
0x11e: V90 = 0x1
0x120: V91 = 0xa0
0x122: V92 = 0x2
0x124: V93 = EXP 0x2 0xa0
0x125: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x126: V95 = CALLER
0x127: V96 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x128: V97 = 0x0
0x12c: M[0x0] = V96
0x12d: V98 = 0x8
0x12f: V99 = 0x20
0x131: M[0x20] = 0x8
0x132: V100 = 0x40
0x135: V101 = SHA3 0x0 0x40
0x136: V102 = S[V101]
0x137: V103 = 0x146
0x13c: V104 = 0xffffffff
0x141: V105 = 0x4ed
0x144: V106 = AND 0x4ed 0xffffffff
0x145: JUMP 0x4ed
---
Entry stack: [V13, V70, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x146, V102, S1]
Exit stack: [V13, V70, S0, 0x146, V102, V70]

================================

Block 0x146
[0x146:0x14f]
---
Predecessors: [0x4e7]
Successors: [0x150, 0x154]
---
0x146 JUMPDEST
0x147 PUSH1 0x6
0x149 SLOAD
0x14a LT
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x146: JUMPDEST 
0x147: V107 = 0x6
0x149: V108 = S[0x6]
0x14a: V109 = LT V108 S0
0x14b: V110 = ISZERO V109
0x14c: V111 = 0x154
0x14f: JUMPI 0x154 V110
---
Entry stack: [V13, V70, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, V70, S1]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x146]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V112 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V13, V70, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S0]

================================

Block 0x154
[0x154:0x1a1]
---
Predecessors: [0x146]
Successors: [0x1a2, 0x1a6]
---
0x154 JUMPDEST
0x155 PUSH1 0x7
0x157 SLOAD
0x158 DUP2
0x159 SWAP1
0x15a PUSH1 0x1
0x15c PUSH1 0xa0
0x15e PUSH1 0x2
0x160 EXP
0x161 SUB
0x162 AND
0x163 PUSH4 0x70a08231
0x168 ADDRESS
0x169 PUSH1 0x40
0x16b MLOAD
0x16c PUSH1 0xe0
0x16e PUSH1 0x2
0x170 EXP
0x171 PUSH4 0xffffffff
0x176 DUP5
0x177 AND
0x178 MUL
0x179 DUP2
0x17a MSTORE
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 SWAP1
0x184 SWAP2
0x185 AND
0x186 PUSH1 0x4
0x188 DUP3
0x189 ADD
0x18a MSTORE
0x18b PUSH1 0x24
0x18d ADD
0x18e PUSH1 0x20
0x190 PUSH1 0x40
0x192 MLOAD
0x193 DUP1
0x194 DUP4
0x195 SUB
0x196 DUP2
0x197 PUSH1 0x0
0x199 DUP8
0x19a DUP1
0x19b EXTCODESIZE
0x19c ISZERO
0x19d ISZERO
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x154: JUMPDEST 
0x155: V113 = 0x7
0x157: V114 = S[0x7]
0x15a: V115 = 0x1
0x15c: V116 = 0xa0
0x15e: V117 = 0x2
0x160: V118 = EXP 0x2 0xa0
0x161: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x162: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x163: V121 = 0x70a08231
0x168: V122 = ADDRESS
0x169: V123 = 0x40
0x16b: V124 = M[0x40]
0x16c: V125 = 0xe0
0x16e: V126 = 0x2
0x170: V127 = EXP 0x2 0xe0
0x171: V128 = 0xffffffff
0x177: V129 = AND 0x70a08231 0xffffffff
0x178: V130 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x17a: M[V124] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x17b: V131 = 0x1
0x17d: V132 = 0xa0
0x17f: V133 = 0x2
0x181: V134 = EXP 0x2 0xa0
0x182: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x185: V136 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x186: V137 = 0x4
0x189: V138 = ADD V124 0x4
0x18a: M[V138] = V136
0x18b: V139 = 0x24
0x18d: V140 = ADD 0x24 V124
0x18e: V141 = 0x20
0x190: V142 = 0x40
0x192: V143 = M[0x40]
0x195: V144 = SUB V140 V143
0x197: V145 = 0x0
0x19b: V146 = EXTCODESIZE V120
0x19c: V147 = ISZERO V146
0x19d: V148 = ISZERO V147
0x19e: V149 = 0x1a6
0x1a1: JUMPI 0x1a6 V148
---
Entry stack: [V13, V70, S0]
Stack pops: 1
Stack additions: [S0, S0, V120, 0x70a08231, V140, 0x20, V143, V144, V143, 0x0, V120]
Exit stack: [V13, V70, S0, S0, V120, 0x70a08231, V140, 0x20, V143, V144, V143, 0x0, V120]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x154]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V150 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V13, V70, S10, S9, V120, 0x70a08231, V140, 0x20, V143, V144, V143, 0x0, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S10, S9, V120, 0x70a08231, V140, 0x20, V143, V144, V143, 0x0, V120]

================================

Block 0x1a6
[0x1a6:0x1ae]
---
Predecessors: [0x154]
Successors: [0x1af, 0x1b3]
---
0x1a6 JUMPDEST
0x1a7 GAS
0x1a8 CALL
0x1a9 ISZERO
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V151 = GAS
0x1a8: V152 = CALL V151 V120 0x0 V143 V144 V143 0x20
0x1a9: V153 = ISZERO V152
0x1aa: V154 = ISZERO V153
0x1ab: V155 = 0x1b3
0x1ae: JUMPI 0x1b3 V154
---
Entry stack: [V13, V70, S10, S9, V120, 0x70a08231, V140, 0x20, V143, V144, V143, 0x0, V120]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V70, S10, S9, V120, 0x70a08231, V140]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x1a6]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V156 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V13, V70, S4, S3, V120, 0x70a08231, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S4, S3, V120, 0x70a08231, V140]

================================

Block 0x1b3
[0x1b3:0x1c5]
---
Predecessors: [0x1a6]
Successors: [0x1c6, 0x1ca]
---
0x1b3 JUMPDEST
0x1b4 POP
0x1b5 POP
0x1b6 POP
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba DUP1
0x1bb MLOAD
0x1bc SWAP1
0x1bd POP
0x1be LT
0x1bf ISZERO
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 PUSH2 0x1ca
0x1c5 JUMPI
---
0x1b3: JUMPDEST 
0x1b7: V157 = 0x40
0x1b9: V158 = M[0x40]
0x1bb: V159 = M[V158]
0x1be: V160 = LT V159 S3
0x1bf: V161 = ISZERO V160
0x1c0: V162 = ISZERO V161
0x1c1: V163 = ISZERO V162
0x1c2: V164 = 0x1ca
0x1c5: JUMPI 0x1ca V163
---
Entry stack: [V13, V70, S4, S3, V120, 0x70a08231, V140]
Stack pops: 4
Stack additions: []
Exit stack: [V13, V70, S4]

================================

Block 0x1c6
[0x1c6:0x1c9]
---
Predecessors: [0x1b3]
Successors: []
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 REVERT
---
0x1c6: V165 = 0x0
0x1c9: REVERT 0x0 0x0
---
Entry stack: [V13, V70, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S0]

================================

Block 0x1ca
[0x1ca:0x1f2]
---
Predecessors: [0x1b3]
Successors: [0x4ed]
---
0x1ca JUMPDEST
0x1cb PUSH1 0x1
0x1cd PUSH1 0xa0
0x1cf PUSH1 0x2
0x1d1 EXP
0x1d2 SUB
0x1d3 CALLER
0x1d4 AND
0x1d5 PUSH1 0x0
0x1d7 SWAP1
0x1d8 DUP2
0x1d9 MSTORE
0x1da PUSH1 0x8
0x1dc PUSH1 0x20
0x1de MSTORE
0x1df PUSH1 0x40
0x1e1 SWAP1
0x1e2 SHA3
0x1e3 SLOAD
0x1e4 PUSH2 0x1f3
0x1e7 SWAP1
0x1e8 DUP4
0x1e9 PUSH4 0xffffffff
0x1ee PUSH2 0x4ed
0x1f1 AND
0x1f2 JUMP
---
0x1ca: JUMPDEST 
0x1cb: V166 = 0x1
0x1cd: V167 = 0xa0
0x1cf: V168 = 0x2
0x1d1: V169 = EXP 0x2 0xa0
0x1d2: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d3: V171 = CALLER
0x1d4: V172 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V173 = 0x0
0x1d9: M[0x0] = V172
0x1da: V174 = 0x8
0x1dc: V175 = 0x20
0x1de: M[0x20] = 0x8
0x1df: V176 = 0x40
0x1e2: V177 = SHA3 0x0 0x40
0x1e3: V178 = S[V177]
0x1e4: V179 = 0x1f3
0x1e9: V180 = 0xffffffff
0x1ee: V181 = 0x4ed
0x1f1: V182 = AND 0x4ed 0xffffffff
0x1f2: JUMP 0x4ed
---
Entry stack: [V13, V70, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1f3, V178, S1]
Exit stack: [V13, V70, S0, 0x1f3, V178, V70]

================================

Block 0x1f3
[0x1f3:0x21e]
---
Predecessors: [0x4e7]
Successors: [0x4ed]
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x1
0x1f6 PUSH1 0xa0
0x1f8 PUSH1 0x2
0x1fa EXP
0x1fb SUB
0x1fc CALLER
0x1fd AND
0x1fe PUSH1 0x0
0x200 SWAP1
0x201 DUP2
0x202 MSTORE
0x203 PUSH1 0x8
0x205 PUSH1 0x20
0x207 MSTORE
0x208 PUSH1 0x40
0x20a SWAP1
0x20b SHA3
0x20c SSTORE
0x20d PUSH1 0x2
0x20f SLOAD
0x210 PUSH2 0x21f
0x213 SWAP1
0x214 DUP4
0x215 PUSH4 0xffffffff
0x21a PUSH2 0x4ed
0x21d AND
0x21e JUMP
---
0x1f3: JUMPDEST 
0x1f4: V183 = 0x1
0x1f6: V184 = 0xa0
0x1f8: V185 = 0x2
0x1fa: V186 = EXP 0x2 0xa0
0x1fb: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fc: V188 = CALLER
0x1fd: V189 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V190 = 0x0
0x202: M[0x0] = V189
0x203: V191 = 0x8
0x205: V192 = 0x20
0x207: M[0x20] = 0x8
0x208: V193 = 0x40
0x20b: V194 = SHA3 0x0 0x40
0x20c: S[V194] = S0
0x20d: V195 = 0x2
0x20f: V196 = S[0x2]
0x210: V197 = 0x21f
0x215: V198 = 0xffffffff
0x21a: V199 = 0x4ed
0x21d: V200 = AND 0x4ed 0xffffffff
0x21e: JUMP 0x4ed
---
Entry stack: [V13, V70, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x21f, V196, S2]
Exit stack: [V13, V70, S1, 0x21f, V196, V70]

================================

Block 0x21f
[0x21f:0x273]
---
Predecessors: [0x4e7]
Successors: [0x274, 0x278]
---
0x21f JUMPDEST
0x220 PUSH1 0x2
0x222 SSTORE
0x223 PUSH1 0x7
0x225 SLOAD
0x226 PUSH1 0x1
0x228 PUSH1 0xa0
0x22a PUSH1 0x2
0x22c EXP
0x22d SUB
0x22e AND
0x22f PUSH4 0xa9059cbb
0x234 CALLER
0x235 DUP4
0x236 PUSH1 0x40
0x238 MLOAD
0x239 PUSH1 0xe0
0x23b PUSH1 0x2
0x23d EXP
0x23e PUSH4 0xffffffff
0x243 DUP6
0x244 AND
0x245 MUL
0x246 DUP2
0x247 MSTORE
0x248 PUSH1 0x1
0x24a PUSH1 0xa0
0x24c PUSH1 0x2
0x24e EXP
0x24f SUB
0x250 SWAP1
0x251 SWAP3
0x252 AND
0x253 PUSH1 0x4
0x255 DUP4
0x256 ADD
0x257 MSTORE
0x258 PUSH1 0x24
0x25a DUP3
0x25b ADD
0x25c MSTORE
0x25d PUSH1 0x44
0x25f ADD
0x260 PUSH1 0x0
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 DUP4
0x267 SUB
0x268 DUP2
0x269 PUSH1 0x0
0x26b DUP8
0x26c DUP1
0x26d EXTCODESIZE
0x26e ISZERO
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x21f: JUMPDEST 
0x220: V201 = 0x2
0x222: S[0x2] = S0
0x223: V202 = 0x7
0x225: V203 = S[0x7]
0x226: V204 = 0x1
0x228: V205 = 0xa0
0x22a: V206 = 0x2
0x22c: V207 = EXP 0x2 0xa0
0x22d: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x22f: V210 = 0xa9059cbb
0x234: V211 = CALLER
0x236: V212 = 0x40
0x238: V213 = M[0x40]
0x239: V214 = 0xe0
0x23b: V215 = 0x2
0x23d: V216 = EXP 0x2 0xe0
0x23e: V217 = 0xffffffff
0x244: V218 = AND 0xa9059cbb 0xffffffff
0x245: V219 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x247: M[V213] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x248: V220 = 0x1
0x24a: V221 = 0xa0
0x24c: V222 = 0x2
0x24e: V223 = EXP 0x2 0xa0
0x24f: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x252: V225 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0x253: V226 = 0x4
0x256: V227 = ADD V213 0x4
0x257: M[V227] = V225
0x258: V228 = 0x24
0x25b: V229 = ADD V213 0x24
0x25c: M[V229] = S1
0x25d: V230 = 0x44
0x25f: V231 = ADD 0x44 V213
0x260: V232 = 0x0
0x262: V233 = 0x40
0x264: V234 = M[0x40]
0x267: V235 = SUB V231 V234
0x269: V236 = 0x0
0x26d: V237 = EXTCODESIZE V209
0x26e: V238 = ISZERO V237
0x26f: V239 = ISZERO V238
0x270: V240 = 0x278
0x273: JUMPI 0x278 V239
---
Entry stack: [V13, V70, S1, S0]
Stack pops: 2
Stack additions: [S1, V209, 0xa9059cbb, V231, 0x0, V234, V235, V234, 0x0, V209]
Exit stack: [V13, V70, S1, V209, 0xa9059cbb, V231, 0x0, V234, V235, V234, 0x0, V209]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x21f]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V241 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V13, V70, S9, V209, 0xa9059cbb, V231, 0x0, V234, V235, V234, 0x0, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S9, V209, 0xa9059cbb, V231, 0x0, V234, V235, V234, 0x0, V209]

================================

Block 0x278
[0x278:0x280]
---
Predecessors: [0x21f]
Successors: [0x281, 0x285]
---
0x278 JUMPDEST
0x279 GAS
0x27a CALL
0x27b ISZERO
0x27c ISZERO
0x27d PUSH2 0x285
0x280 JUMPI
---
0x278: JUMPDEST 
0x279: V242 = GAS
0x27a: V243 = CALL V242 V209 0x0 V234 V235 V234 0x0
0x27b: V244 = ISZERO V243
0x27c: V245 = ISZERO V244
0x27d: V246 = 0x285
0x280: JUMPI 0x285 V245
---
Entry stack: [V13, V70, S9, V209, 0xa9059cbb, V231, 0x0, V234, V235, V234, 0x0, V209]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V70, S9, V209, 0xa9059cbb, V231]

================================

Block 0x281
[0x281:0x284]
---
Predecessors: [0x278]
Successors: []
---
0x281 PUSH1 0x0
0x283 DUP1
0x284 REVERT
---
0x281: V247 = 0x0
0x284: REVERT 0x0 0x0
---
Entry stack: [V13, V70, S3, V209, 0xa9059cbb, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S3, V209, 0xa9059cbb, V231]

================================

Block 0x285
[0x285:0x2df]
---
Predecessors: [0x278]
Successors: []
---
0x285 JUMPDEST
0x286 POP
0x287 POP
0x288 POP
0x289 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2aa CALLER
0x2ab DUP4
0x2ac PUSH1 0x1
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 PUSH1 0x1
0x2b3 PUSH1 0xa0
0x2b5 PUSH1 0x2
0x2b7 EXP
0x2b8 SUB
0x2b9 SWAP1
0x2ba SWAP4
0x2bb AND
0x2bc DUP4
0x2bd MSTORE
0x2be PUSH1 0x20
0x2c0 DUP4
0x2c1 ADD
0x2c2 SWAP2
0x2c3 SWAP1
0x2c4 SWAP2
0x2c5 MSTORE
0x2c6 ISZERO
0x2c7 ISZERO
0x2c8 PUSH1 0x40
0x2ca DUP1
0x2cb DUP4
0x2cc ADD
0x2cd SWAP2
0x2ce SWAP1
0x2cf SWAP2
0x2d0 MSTORE
0x2d1 PUSH1 0x60
0x2d3 SWAP1
0x2d4 SWAP2
0x2d5 ADD
0x2d6 SWAP1
0x2d7 MLOAD
0x2d8 DUP1
0x2d9 SWAP2
0x2da SUB
0x2db SWAP1
0x2dc LOG1
0x2dd POP
0x2de POP
0x2df STOP
---
0x285: JUMPDEST 
0x289: V248 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2aa: V249 = CALLER
0x2ac: V250 = 0x1
0x2ae: V251 = 0x40
0x2b0: V252 = M[0x40]
0x2b1: V253 = 0x1
0x2b3: V254 = 0xa0
0x2b5: V255 = 0x2
0x2b7: V256 = EXP 0x2 0xa0
0x2b8: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bb: V258 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: M[V252] = V258
0x2be: V259 = 0x20
0x2c1: V260 = ADD V252 0x20
0x2c5: M[V260] = V70
0x2c6: V261 = ISZERO 0x1
0x2c7: V262 = ISZERO 0x0
0x2c8: V263 = 0x40
0x2cc: V264 = ADD V252 0x40
0x2d0: M[V264] = 0x1
0x2d1: V265 = 0x60
0x2d5: V266 = ADD V252 0x60
0x2d7: V267 = M[0x40]
0x2da: V268 = SUB V266 V267
0x2dc: LOG V267 V268 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2df: STOP 
---
Entry stack: [V13, V70, S3, V209, 0xa9059cbb, V231]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e0
[0x2e0:0x2e6]
---
Predecessors: [0xd]
Successors: [0x2e7, 0x2eb]
---
0x2e0 JUMPDEST
0x2e1 CALLVALUE
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V269 = CALLVALUE
0x2e2: V270 = ISZERO V269
0x2e3: V271 = 0x2eb
0x2e6: JUMPI 0x2eb V270
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2e0]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V272 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2eb
[0x2eb:0x2f2]
---
Predecessors: [0x2e0]
Successors: [0x4fa]
---
0x2eb JUMPDEST
0x2ec PUSH2 0x2f3
0x2ef PUSH2 0x4fa
0x2f2 JUMP
---
0x2eb: JUMPDEST 
0x2ec: V273 = 0x2f3
0x2ef: V274 = 0x4fa
0x2f2: JUMP 0x4fa
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2f3]
Exit stack: [V13, 0x2f3]

================================

Block 0x2f3
[0x2f3:0x304]
---
Predecessors: [0x4fa, 0x500, 0x7aa, 0x7c5, 0x7fd, 0x8bb, 0x9e3]
Successors: []
---
0x2f3 JUMPDEST
0x2f4 PUSH1 0x40
0x2f6 MLOAD
0x2f7 SWAP1
0x2f8 DUP2
0x2f9 MSTORE
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 DUP1
0x301 SWAP2
0x302 SUB
0x303 SWAP1
0x304 RETURN
---
0x2f3: JUMPDEST 
0x2f4: V275 = 0x40
0x2f6: V276 = M[0x40]
0x2f9: M[V276] = S0
0x2fa: V277 = 0x20
0x2fc: V278 = ADD 0x20 V276
0x2fd: V279 = 0x40
0x2ff: V280 = M[0x40]
0x302: V281 = SUB V278 V280
0x304: RETURN V280 V281
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x305
[0x305:0x30b]
---
Predecessors: [0x27]
Successors: [0x30c, 0x310]
---
0x305 JUMPDEST
0x306 CALLVALUE
0x307 ISZERO
0x308 PUSH2 0x310
0x30b JUMPI
---
0x305: JUMPDEST 
0x306: V282 = CALLVALUE
0x307: V283 = ISZERO V282
0x308: V284 = 0x310
0x30b: JUMPI 0x310 V283
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x30c
[0x30c:0x30f]
---
Predecessors: [0x305]
Successors: []
---
0x30c PUSH1 0x0
0x30e DUP1
0x30f REVERT
---
0x30c: V285 = 0x0
0x30f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x310
[0x310:0x317]
---
Predecessors: [0x305]
Successors: [0x500]
---
0x310 JUMPDEST
0x311 PUSH2 0x2f3
0x314 PUSH2 0x500
0x317 JUMP
---
0x310: JUMPDEST 
0x311: V286 = 0x2f3
0x314: V287 = 0x500
0x317: JUMP 0x500
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2f3]
Exit stack: [V13, 0x2f3]

================================

Block 0x318
[0x318:0x31e]
---
Predecessors: [0x32]
Successors: [0x31f, 0x323]
---
0x318 JUMPDEST
0x319 CALLVALUE
0x31a ISZERO
0x31b PUSH2 0x323
0x31e JUMPI
---
0x318: JUMPDEST 
0x319: V288 = CALLVALUE
0x31a: V289 = ISZERO V288
0x31b: V290 = 0x323
0x31e: JUMPI 0x323 V289
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x318]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V291 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x323
[0x323:0x32f]
---
Predecessors: [0x318]
Successors: [0x506]
---
0x323 JUMPDEST
0x324 PUSH2 0x330
0x327 PUSH1 0x4
0x329 CALLDATALOAD
0x32a ISZERO
0x32b ISZERO
0x32c PUSH2 0x506
0x32f JUMP
---
0x323: JUMPDEST 
0x324: V292 = 0x330
0x327: V293 = 0x4
0x329: V294 = CALLDATALOAD 0x4
0x32a: V295 = ISZERO V294
0x32b: V296 = ISZERO V295
0x32c: V297 = 0x506
0x32f: JUMP 0x506
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x330, V296]
Exit stack: [V13, 0x330, V296]

================================

Block 0x330
[0x330:0x331]
---
Predecessors: [0x521, 0x686, 0x797, 0x864, 0x9a5, 0xa03]
Successors: []
---
0x330 JUMPDEST
0x331 STOP
---
0x330: JUMPDEST 
0x331: STOP 
---
Entry stack: [V13, 0x330, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, S0]

================================

Block 0x332
[0x332:0x338]
---
Predecessors: [0x3d]
Successors: [0x339, 0x33d]
---
0x332 JUMPDEST
0x333 CALLVALUE
0x334 ISZERO
0x335 PUSH2 0x33d
0x338 JUMPI
---
0x332: JUMPDEST 
0x333: V298 = CALLVALUE
0x334: V299 = ISZERO V298
0x335: V300 = 0x33d
0x338: JUMPI 0x33d V299
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x339
[0x339:0x33c]
---
Predecessors: [0x332]
Successors: []
---
0x339 PUSH1 0x0
0x33b DUP1
0x33c REVERT
---
0x339: V301 = 0x0
0x33c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x33d
[0x33d:0x347]
---
Predecessors: [0x332]
Successors: [0x534]
---
0x33d JUMPDEST
0x33e PUSH2 0x330
0x341 PUSH1 0x4
0x343 CALLDATALOAD
0x344 PUSH2 0x534
0x347 JUMP
---
0x33d: JUMPDEST 
0x33e: V302 = 0x330
0x341: V303 = 0x4
0x343: V304 = CALLDATALOAD 0x4
0x344: V305 = 0x534
0x347: JUMP 0x534
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x330, V304]
Exit stack: [V13, 0x330, V304]

================================

Block 0x348
[0x348:0x34e]
---
Predecessors: [0x48]
Successors: [0x34f, 0x353]
---
0x348 JUMPDEST
0x349 CALLVALUE
0x34a ISZERO
0x34b PUSH2 0x353
0x34e JUMPI
---
0x348: JUMPDEST 
0x349: V306 = CALLVALUE
0x34a: V307 = ISZERO V306
0x34b: V308 = 0x353
0x34e: JUMPI 0x353 V307
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x348]
Successors: []
---
0x34f PUSH1 0x0
0x351 DUP1
0x352 REVERT
---
0x34f: V309 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x353
[0x353:0x35a]
---
Predecessors: [0x348]
Successors: [0x694]
---
0x353 JUMPDEST
0x354 PUSH2 0x35b
0x357 PUSH2 0x694
0x35a JUMP
---
0x353: JUMPDEST 
0x354: V310 = 0x35b
0x357: V311 = 0x694
0x35a: JUMP 0x694
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x35b]
Exit stack: [V13, 0x35b]

================================

Block 0x35b
[0x35b:0x376]
---
Predecessors: [0x694, 0x79b]
Successors: []
---
0x35b JUMPDEST
0x35c PUSH1 0x40
0x35e MLOAD
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 SWAP1
0x368 SWAP2
0x369 AND
0x36a DUP2
0x36b MSTORE
0x36c PUSH1 0x20
0x36e ADD
0x36f PUSH1 0x40
0x371 MLOAD
0x372 DUP1
0x373 SWAP2
0x374 SUB
0x375 SWAP1
0x376 RETURN
---
0x35b: JUMPDEST 
0x35c: V312 = 0x40
0x35e: V313 = M[0x40]
0x35f: V314 = 0x1
0x361: V315 = 0xa0
0x363: V316 = 0x2
0x365: V317 = EXP 0x2 0xa0
0x366: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x369: V319 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x36b: M[V313] = V319
0x36c: V320 = 0x20
0x36e: V321 = ADD 0x20 V313
0x36f: V322 = 0x40
0x371: V323 = M[0x40]
0x374: V324 = SUB V321 V323
0x376: RETURN V323 V324
---
Entry stack: [V13, 0x35b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x35b]

================================

Block 0x377
[0x377:0x37d]
---
Predecessors: [0x53]
Successors: [0x37e, 0x382]
---
0x377 JUMPDEST
0x378 CALLVALUE
0x379 ISZERO
0x37a PUSH2 0x382
0x37d JUMPI
---
0x377: JUMPDEST 
0x378: V325 = CALLVALUE
0x379: V326 = ISZERO V325
0x37a: V327 = 0x382
0x37d: JUMPI 0x382 V326
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x37e
[0x37e:0x381]
---
Predecessors: [0x377]
Successors: []
---
0x37e PUSH1 0x0
0x380 DUP1
0x381 REVERT
---
0x37e: V328 = 0x0
0x381: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x382
[0x382:0x395]
---
Predecessors: [0x377]
Successors: [0x6a3]
---
0x382 JUMPDEST
0x383 PUSH2 0x330
0x386 PUSH1 0x1
0x388 PUSH1 0xa0
0x38a PUSH1 0x2
0x38c EXP
0x38d SUB
0x38e PUSH1 0x4
0x390 CALLDATALOAD
0x391 AND
0x392 PUSH2 0x6a3
0x395 JUMP
---
0x382: JUMPDEST 
0x383: V329 = 0x330
0x386: V330 = 0x1
0x388: V331 = 0xa0
0x38a: V332 = 0x2
0x38c: V333 = EXP 0x2 0xa0
0x38d: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38e: V335 = 0x4
0x390: V336 = CALLDATALOAD 0x4
0x391: V337 = AND V336 0xffffffffffffffffffffffffffffffffffffffff
0x392: V338 = 0x6a3
0x395: JUMP 0x6a3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x330, V337]
Exit stack: [V13, 0x330, V337]

================================

Block 0x396
[0x396:0x39c]
---
Predecessors: [0x5e]
Successors: [0x39d, 0x3a1]
---
0x396 JUMPDEST
0x397 CALLVALUE
0x398 ISZERO
0x399 PUSH2 0x3a1
0x39c JUMPI
---
0x396: JUMPDEST 
0x397: V339 = CALLVALUE
0x398: V340 = ISZERO V339
0x399: V341 = 0x3a1
0x39c: JUMPI 0x3a1 V340
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x39d
[0x39d:0x3a0]
---
Predecessors: [0x396]
Successors: []
---
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 REVERT
---
0x39d: V342 = 0x0
0x3a0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a1
[0x3a1:0x3a8]
---
Predecessors: [0x396]
Successors: [0x79b]
---
0x3a1 JUMPDEST
0x3a2 PUSH2 0x35b
0x3a5 PUSH2 0x79b
0x3a8 JUMP
---
0x3a1: JUMPDEST 
0x3a2: V343 = 0x35b
0x3a5: V344 = 0x79b
0x3a8: JUMP 0x79b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x35b]
Exit stack: [V13, 0x35b]

================================

Block 0x3a9
[0x3a9:0x3af]
---
Predecessors: [0x69]
Successors: [0x3b0, 0x3b4]
---
0x3a9 JUMPDEST
0x3aa CALLVALUE
0x3ab ISZERO
0x3ac PUSH2 0x3b4
0x3af JUMPI
---
0x3a9: JUMPDEST 
0x3aa: V345 = CALLVALUE
0x3ab: V346 = ISZERO V345
0x3ac: V347 = 0x3b4
0x3af: JUMPI 0x3b4 V346
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b0
[0x3b0:0x3b3]
---
Predecessors: [0x3a9]
Successors: []
---
0x3b0 PUSH1 0x0
0x3b2 DUP1
0x3b3 REVERT
---
0x3b0: V348 = 0x0
0x3b3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b4
[0x3b4:0x3c7]
---
Predecessors: [0x3a9]
Successors: [0x7aa]
---
0x3b4 JUMPDEST
0x3b5 PUSH2 0x2f3
0x3b8 PUSH1 0x1
0x3ba PUSH1 0xa0
0x3bc PUSH1 0x2
0x3be EXP
0x3bf SUB
0x3c0 PUSH1 0x4
0x3c2 CALLDATALOAD
0x3c3 AND
0x3c4 PUSH2 0x7aa
0x3c7 JUMP
---
0x3b4: JUMPDEST 
0x3b5: V349 = 0x2f3
0x3b8: V350 = 0x1
0x3ba: V351 = 0xa0
0x3bc: V352 = 0x2
0x3be: V353 = EXP 0x2 0xa0
0x3bf: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c0: V355 = 0x4
0x3c2: V356 = CALLDATALOAD 0x4
0x3c3: V357 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V358 = 0x7aa
0x3c7: JUMP 0x7aa
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2f3, V357]
Exit stack: [V13, 0x2f3, V357]

================================

Block 0x3c8
[0x3c8:0x3ce]
---
Predecessors: [0x74]
Successors: [0x3cf, 0x3d3]
---
0x3c8 JUMPDEST
0x3c9 CALLVALUE
0x3ca ISZERO
0x3cb PUSH2 0x3d3
0x3ce JUMPI
---
0x3c8: JUMPDEST 
0x3c9: V359 = CALLVALUE
0x3ca: V360 = ISZERO V359
0x3cb: V361 = 0x3d3
0x3ce: JUMPI 0x3d3 V360
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3cf
[0x3cf:0x3d2]
---
Predecessors: [0x3c8]
Successors: []
---
0x3cf PUSH1 0x0
0x3d1 DUP1
0x3d2 REVERT
---
0x3cf: V362 = 0x0
0x3d2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3d3
[0x3d3:0x3da]
---
Predecessors: [0x3c8]
Successors: [0x7bc]
---
0x3d3 JUMPDEST
0x3d4 PUSH2 0x3db
0x3d7 PUSH2 0x7bc
0x3da JUMP
---
0x3d3: JUMPDEST 
0x3d4: V363 = 0x3db
0x3d7: V364 = 0x7bc
0x3da: JUMP 0x7bc
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x3db]
Exit stack: [V13, 0x3db]

================================

Block 0x3db
[0x3db:0x3ee]
---
Predecessors: [0x7bc]
Successors: []
---
0x3db JUMPDEST
0x3dc PUSH1 0x40
0x3de MLOAD
0x3df SWAP1
0x3e0 ISZERO
0x3e1 ISZERO
0x3e2 DUP2
0x3e3 MSTORE
0x3e4 PUSH1 0x20
0x3e6 ADD
0x3e7 PUSH1 0x40
0x3e9 MLOAD
0x3ea DUP1
0x3eb SWAP2
0x3ec SUB
0x3ed SWAP1
0x3ee RETURN
---
0x3db: JUMPDEST 
0x3dc: V365 = 0x40
0x3de: V366 = M[0x40]
0x3e0: V367 = ISZERO V775
0x3e1: V368 = ISZERO V367
0x3e3: M[V366] = V368
0x3e4: V369 = 0x20
0x3e6: V370 = ADD 0x20 V366
0x3e7: V371 = 0x40
0x3e9: V372 = M[0x40]
0x3ec: V373 = SUB V370 V372
0x3ee: RETURN V372 V373
---
Entry stack: [V13, V775]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x3ef
[0x3ef:0x3f5]
---
Predecessors: [0x7f]
Successors: [0x3f6, 0x3fa]
---
0x3ef JUMPDEST
0x3f0 CALLVALUE
0x3f1 ISZERO
0x3f2 PUSH2 0x3fa
0x3f5 JUMPI
---
0x3ef: JUMPDEST 
0x3f0: V374 = CALLVALUE
0x3f1: V375 = ISZERO V374
0x3f2: V376 = 0x3fa
0x3f5: JUMPI 0x3fa V375
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3f6
[0x3f6:0x3f9]
---
Predecessors: [0x3ef]
Successors: []
---
0x3f6 PUSH1 0x0
0x3f8 DUP1
0x3f9 REVERT
---
0x3f6: V377 = 0x0
0x3f9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3fa
[0x3fa:0x401]
---
Predecessors: [0x3ef]
Successors: [0x7c5]
---
0x3fa JUMPDEST
0x3fb PUSH2 0x2f3
0x3fe PUSH2 0x7c5
0x401 JUMP
---
0x3fa: JUMPDEST 
0x3fb: V378 = 0x2f3
0x3fe: V379 = 0x7c5
0x401: JUMP 0x7c5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2f3]
Exit stack: [V13, 0x2f3]

================================

Block 0x402
[0x402:0x408]
---
Predecessors: [0x8a]
Successors: [0x409, 0x40d]
---
0x402 JUMPDEST
0x403 CALLVALUE
0x404 ISZERO
0x405 PUSH2 0x40d
0x408 JUMPI
---
0x402: JUMPDEST 
0x403: V380 = CALLVALUE
0x404: V381 = ISZERO V380
0x405: V382 = 0x40d
0x408: JUMPI 0x40d V381
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x409
[0x409:0x40c]
---
Predecessors: [0x402]
Successors: []
---
0x409 PUSH1 0x0
0x40b DUP1
0x40c REVERT
---
0x409: V383 = 0x0
0x40c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x40d
[0x40d:0x414]
---
Predecessors: [0x402]
Successors: [0x7cb]
---
0x40d JUMPDEST
0x40e PUSH2 0x330
0x411 PUSH2 0x7cb
0x414 JUMP
---
0x40d: JUMPDEST 
0x40e: V384 = 0x330
0x411: V385 = 0x7cb
0x414: JUMP 0x7cb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x330]
Exit stack: [V13, 0x330]

================================

Block 0x415
[0x415:0x41b]
---
Predecessors: [0x95]
Successors: [0x41c, 0x420]
---
0x415 JUMPDEST
0x416 CALLVALUE
0x417 ISZERO
0x418 PUSH2 0x420
0x41b JUMPI
---
0x415: JUMPDEST 
0x416: V386 = CALLVALUE
0x417: V387 = ISZERO V386
0x418: V388 = 0x420
0x41b: JUMPI 0x420 V387
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x41c
[0x41c:0x41f]
---
Predecessors: [0x415]
Successors: []
---
0x41c PUSH1 0x0
0x41e DUP1
0x41f REVERT
---
0x41c: V389 = 0x0
0x41f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x420
[0x420:0x427]
---
Predecessors: [0x415]
Successors: [0x7fd]
---
0x420 JUMPDEST
0x421 PUSH2 0x2f3
0x424 PUSH2 0x7fd
0x427 JUMP
---
0x420: JUMPDEST 
0x421: V390 = 0x2f3
0x424: V391 = 0x7fd
0x427: JUMP 0x7fd
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2f3]
Exit stack: [V13, 0x2f3]

================================

Block 0x428
[0x428:0x42e]
---
Predecessors: [0xa0]
Successors: [0x42f, 0x433]
---
0x428 JUMPDEST
0x429 CALLVALUE
0x42a ISZERO
0x42b PUSH2 0x433
0x42e JUMPI
---
0x428: JUMPDEST 
0x429: V392 = CALLVALUE
0x42a: V393 = ISZERO V392
0x42b: V394 = 0x433
0x42e: JUMPI 0x433 V393
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x42f
[0x42f:0x432]
---
Predecessors: [0x428]
Successors: []
---
0x42f PUSH1 0x0
0x431 DUP1
0x432 REVERT
---
0x42f: V395 = 0x0
0x432: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x433
[0x433:0x446]
---
Predecessors: [0x428]
Successors: [0x803]
---
0x433 JUMPDEST
0x434 PUSH2 0x330
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f PUSH1 0x4
0x441 CALLDATALOAD
0x442 AND
0x443 PUSH2 0x803
0x446 JUMP
---
0x433: JUMPDEST 
0x434: V396 = 0x330
0x437: V397 = 0x1
0x439: V398 = 0xa0
0x43b: V399 = 0x2
0x43d: V400 = EXP 0x2 0xa0
0x43e: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43f: V402 = 0x4
0x441: V403 = CALLDATALOAD 0x4
0x442: V404 = AND V403 0xffffffffffffffffffffffffffffffffffffffff
0x443: V405 = 0x803
0x446: JUMP 0x803
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x330, V404]
Exit stack: [V13, 0x330, V404]

================================

Block 0x447
[0x447:0x44d]
---
Predecessors: [0xab]
Successors: [0x44e, 0x452]
---
0x447 JUMPDEST
0x448 CALLVALUE
0x449 ISZERO
0x44a PUSH2 0x452
0x44d JUMPI
---
0x447: JUMPDEST 
0x448: V406 = CALLVALUE
0x449: V407 = ISZERO V406
0x44a: V408 = 0x452
0x44d: JUMPI 0x452 V407
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x44e
[0x44e:0x451]
---
Predecessors: [0x447]
Successors: []
---
0x44e PUSH1 0x0
0x450 DUP1
0x451 REVERT
---
0x44e: V409 = 0x0
0x451: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x452
[0x452:0x459]
---
Predecessors: [0x447]
Successors: [0x8bb]
---
0x452 JUMPDEST
0x453 PUSH2 0x2f3
0x456 PUSH2 0x8bb
0x459 JUMP
---
0x452: JUMPDEST 
0x453: V410 = 0x2f3
0x456: V411 = 0x8bb
0x459: JUMP 0x8bb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2f3]
Exit stack: [V13, 0x2f3]

================================

Block 0x45a
[0x45a:0x460]
---
Predecessors: [0xb6]
Successors: [0x461, 0x465]
---
0x45a JUMPDEST
0x45b CALLVALUE
0x45c ISZERO
0x45d PUSH2 0x465
0x460 JUMPI
---
0x45a: JUMPDEST 
0x45b: V412 = CALLVALUE
0x45c: V413 = ISZERO V412
0x45d: V414 = 0x465
0x460: JUMPI 0x465 V413
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x461
[0x461:0x464]
---
Predecessors: [0x45a]
Successors: []
---
0x461 PUSH1 0x0
0x463 DUP1
0x464 REVERT
---
0x461: V415 = 0x0
0x464: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x465
[0x465:0x46c]
---
Predecessors: [0x45a]
Successors: [0x8c1]
---
0x465 JUMPDEST
0x466 PUSH2 0x330
0x469 PUSH2 0x8c1
0x46c JUMP
---
0x465: JUMPDEST 
0x466: V416 = 0x330
0x469: V417 = 0x8c1
0x46c: JUMP 0x8c1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x330]
Exit stack: [V13, 0x330]

================================

Block 0x46d
[0x46d:0x473]
---
Predecessors: [0xc1]
Successors: [0x474, 0x478]
---
0x46d JUMPDEST
0x46e CALLVALUE
0x46f ISZERO
0x470 PUSH2 0x478
0x473 JUMPI
---
0x46d: JUMPDEST 
0x46e: V418 = CALLVALUE
0x46f: V419 = ISZERO V418
0x470: V420 = 0x478
0x473: JUMPI 0x478 V419
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x474
[0x474:0x477]
---
Predecessors: [0x46d]
Successors: []
---
0x474 PUSH1 0x0
0x476 DUP1
0x477 REVERT
---
0x474: V421 = 0x0
0x477: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x478
[0x478:0x47f]
---
Predecessors: [0x46d]
Successors: [0x9b5]
---
0x478 JUMPDEST
0x479 PUSH2 0x2f3
0x47c PUSH2 0x9b5
0x47f JUMP
---
0x478: JUMPDEST 
0x479: V422 = 0x2f3
0x47c: V423 = 0x9b5
0x47f: JUMP 0x9b5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2f3]
Exit stack: [V13, 0x2f3]

================================

Block 0x480
[0x480:0x486]
---
Predecessors: [0xcc]
Successors: [0x487, 0x48b]
---
0x480 JUMPDEST
0x481 CALLVALUE
0x482 ISZERO
0x483 PUSH2 0x48b
0x486 JUMPI
---
0x480: JUMPDEST 
0x481: V424 = CALLVALUE
0x482: V425 = ISZERO V424
0x483: V426 = 0x48b
0x486: JUMPI 0x48b V425
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x487
[0x487:0x48a]
---
Predecessors: [0x480]
Successors: []
---
0x487 PUSH1 0x0
0x489 DUP1
0x48a REVERT
---
0x487: V427 = 0x0
0x48a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x48b
[0x48b:0x49e]
---
Predecessors: [0x480]
Successors: [0x9e8]
---
0x48b JUMPDEST
0x48c PUSH2 0x330
0x48f PUSH1 0x1
0x491 PUSH1 0xa0
0x493 PUSH1 0x2
0x495 EXP
0x496 SUB
0x497 PUSH1 0x4
0x499 CALLDATALOAD
0x49a AND
0x49b PUSH2 0x9e8
0x49e JUMP
---
0x48b: JUMPDEST 
0x48c: V428 = 0x330
0x48f: V429 = 0x1
0x491: V430 = 0xa0
0x493: V431 = 0x2
0x495: V432 = EXP 0x2 0xa0
0x496: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x497: V434 = 0x4
0x499: V435 = CALLDATALOAD 0x4
0x49a: V436 = AND V435 0xffffffffffffffffffffffffffffffffffffffff
0x49b: V437 = 0x9e8
0x49e: JUMP 0x9e8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x330, V436]
Exit stack: [V13, 0x330, V436]

================================

Block 0x49f
[0x49f:0x4a5]
---
Predecessors: [0xd7]
Successors: [0x4a6, 0x4aa]
---
0x49f JUMPDEST
0x4a0 CALLVALUE
0x4a1 ISZERO
0x4a2 PUSH2 0x4aa
0x4a5 JUMPI
---
0x49f: JUMPDEST 
0x4a0: V438 = CALLVALUE
0x4a1: V439 = ISZERO V438
0x4a2: V440 = 0x4aa
0x4a5: JUMPI 0x4aa V439
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x4a6
[0x4a6:0x4a9]
---
Predecessors: [0x49f]
Successors: []
---
0x4a6 PUSH1 0x0
0x4a8 DUP1
0x4a9 REVERT
---
0x4a6: V441 = 0x0
0x4a9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x4aa
[0x4aa:0x4bd]
---
Predecessors: [0x49f]
Successors: [0xa32]
---
0x4aa JUMPDEST
0x4ab PUSH2 0x330
0x4ae PUSH1 0x1
0x4b0 PUSH1 0xa0
0x4b2 PUSH1 0x2
0x4b4 EXP
0x4b5 SUB
0x4b6 PUSH1 0x4
0x4b8 CALLDATALOAD
0x4b9 AND
0x4ba PUSH2 0xa32
0x4bd JUMP
---
0x4aa: JUMPDEST 
0x4ab: V442 = 0x330
0x4ae: V443 = 0x1
0x4b0: V444 = 0xa0
0x4b2: V445 = 0x2
0x4b4: V446 = EXP 0x2 0xa0
0x4b5: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b6: V448 = 0x4
0x4b8: V449 = CALLDATALOAD 0x4
0x4b9: V450 = AND V449 0xffffffffffffffffffffffffffffffffffffffff
0x4ba: V451 = 0xa32
0x4bd: JUMP 0xa32
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x330, V450]
Exit stack: [V13, 0x330, V450]

================================

Block 0x4be
[0x4be:0x4c7]
---
Predecessors: [0xe2]
Successors: [0x4c8, 0x4cf]
---
0x4be JUMPDEST
0x4bf PUSH1 0x0
0x4c1 DUP3
0x4c2 ISZERO
0x4c3 ISZERO
0x4c4 PUSH2 0x4cf
0x4c7 JUMPI
---
0x4be: JUMPDEST 
0x4bf: V452 = 0x0
0x4c2: V453 = ISZERO V70
0x4c3: V454 = ISZERO V453
0x4c4: V455 = 0x4cf
0x4c7: JUMPI 0x4cf V454
---
Entry stack: [V13, V70, 0x0, 0xfb, V70, V69]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, V70, 0x0, 0xfb, V70, V69, 0x0]

================================

Block 0x4c8
[0x4c8:0x4ce]
---
Predecessors: [0x4be]
Successors: [0x4e7]
---
0x4c8 POP
0x4c9 PUSH1 0x0
0x4cb PUSH2 0x4e7
0x4ce JUMP
---
0x4c9: V456 = 0x0
0x4cb: V457 = 0x4e7
0x4ce: JUMP 0x4e7
---
Entry stack: [V13, V70, 0x0, 0xfb, V70, V69, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, V70, 0x0, 0xfb, V70, V69, 0x0]

================================

Block 0x4cf
[0x4cf:0x4dd]
---
Predecessors: [0x4be]
Successors: [0x4de, 0x4df]
---
0x4cf JUMPDEST
0x4d0 POP
0x4d1 DUP2
0x4d2 DUP2
0x4d3 MUL
0x4d4 DUP2
0x4d5 DUP4
0x4d6 DUP3
0x4d7 DUP2
0x4d8 ISZERO
0x4d9 ISZERO
0x4da PUSH2 0x4df
0x4dd JUMPI
---
0x4cf: JUMPDEST 
0x4d3: V458 = MUL V69 V70
0x4d8: V459 = ISZERO V70
0x4d9: V460 = ISZERO V459
0x4da: V461 = 0x4df
0x4dd: JUMPI 0x4df V460
---
Entry stack: [V13, V70, 0x0, 0xfb, V70, V69, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V458, S1, S2, V458]
Exit stack: [V13, V70, 0x0, 0xfb, V70, V69, V458, V69, V70, V458]

================================

Block 0x4de
[0x4de:0x4de]
---
Predecessors: [0x4cf]
Successors: []
---
0x4de INVALID
---
0x4de: INVALID 
---
Entry stack: [V13, V70, 0x0, 0xfb, V70, V69, V458, V69, V70, V458]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, 0x0, 0xfb, V70, V69, V458, V69, V70, V458]

================================

Block 0x4df
[0x4df:0x4e5]
---
Predecessors: [0x4cf]
Successors: [0x4e6, 0x4e7]
---
0x4df JUMPDEST
0x4e0 DIV
0x4e1 EQ
0x4e2 PUSH2 0x4e7
0x4e5 JUMPI
---
0x4df: JUMPDEST 
0x4e0: V462 = DIV V458 V70
0x4e1: V463 = EQ V462 V69
0x4e2: V464 = 0x4e7
0x4e5: JUMPI 0x4e7 V463
---
Entry stack: [V13, V70, 0x0, 0xfb, V70, V69, V458, V69, V70, V458]
Stack pops: 3
Stack additions: []
Exit stack: [V13, V70, 0x0, 0xfb, V70, V69, V458]

================================

Block 0x4e6
[0x4e6:0x4e6]
---
Predecessors: [0x4df]
Successors: []
---
0x4e6 INVALID
---
0x4e6: INVALID 
---
Entry stack: [V13, V70, 0x0, 0xfb, V70, V69, V458]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, 0x0, 0xfb, V70, V69, V458]

================================

Block 0x4e7
[0x4e7:0x4ec]
---
Predecessors: [0x4c8, 0x4df, 0x4ed]
Successors: [0xfb, 0x146, 0x1f3, 0x21f]
---
0x4e7 JUMPDEST
0x4e8 SWAP3
0x4e9 SWAP2
0x4ea POP
0x4eb POP
0x4ec JUMP
---
0x4e7: JUMPDEST 
0x4ec: JUMP {0xfb, 0x146, 0x1f3, 0x21f}
---
Entry stack: [V13, V70, S4, {0xfb, 0x146, 0x1f3, 0x21f}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V13, V70, S4, S0]

================================

Block 0x4ed
[0x4ed:0x4f8]
---
Predecessors: [0x11d, 0x1ca, 0x1f3]
Successors: [0x4e7, 0x4f9]
---
0x4ed JUMPDEST
0x4ee DUP2
0x4ef DUP2
0x4f0 ADD
0x4f1 DUP3
0x4f2 DUP2
0x4f3 LT
0x4f4 ISZERO
0x4f5 PUSH2 0x4e7
0x4f8 JUMPI
---
0x4ed: JUMPDEST 
0x4f0: V465 = ADD V70 S1
0x4f3: V466 = LT V465 S1
0x4f4: V467 = ISZERO V466
0x4f5: V468 = 0x4e7
0x4f8: JUMPI 0x4e7 V467
---
Entry stack: [V13, V70, S3, {0x146, 0x1f3, 0x21f}, S1, V70]
Stack pops: 2
Stack additions: [S1, S0, V465]
Exit stack: [V13, V70, S3, {0x146, 0x1f3, 0x21f}, S1, V70, V465]

================================

Block 0x4f9
[0x4f9:0x4f9]
---
Predecessors: [0x4ed]
Successors: []
---
0x4f9 INVALID
---
0x4f9: INVALID 
---
Entry stack: [V13, V70, S4, {0x146, 0x1f3, 0x21f}, S2, V70, V465]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V70, S4, {0x146, 0x1f3, 0x21f}, S2, V70, V465]

================================

Block 0x4fa
[0x4fa:0x4ff]
---
Predecessors: [0x2eb]
Successors: [0x2f3]
---
0x4fa JUMPDEST
0x4fb PUSH1 0x6
0x4fd SLOAD
0x4fe DUP2
0x4ff JUMP
---
0x4fa: JUMPDEST 
0x4fb: V469 = 0x6
0x4fd: V470 = S[0x6]
0x4ff: JUMP 0x2f3
---
Entry stack: [V13, 0x2f3]
Stack pops: 1
Stack additions: [S0, V470]
Exit stack: [V13, 0x2f3, V470]

================================

Block 0x500
[0x500:0x505]
---
Predecessors: [0x310]
Successors: [0x2f3]
---
0x500 JUMPDEST
0x501 PUSH1 0x3
0x503 SLOAD
0x504 DUP2
0x505 JUMP
---
0x500: JUMPDEST 
0x501: V471 = 0x3
0x503: V472 = S[0x3]
0x505: JUMP 0x2f3
---
Entry stack: [V13, 0x2f3]
Stack pops: 1
Stack additions: [S0, V472]
Exit stack: [V13, 0x2f3, V472]

================================

Block 0x506
[0x506:0x51c]
---
Predecessors: [0x323]
Successors: [0x51d, 0x521]
---
0x506 JUMPDEST
0x507 PUSH1 0x0
0x509 SLOAD
0x50a CALLER
0x50b PUSH1 0x1
0x50d PUSH1 0xa0
0x50f PUSH1 0x2
0x511 EXP
0x512 SUB
0x513 SWAP1
0x514 DUP2
0x515 AND
0x516 SWAP2
0x517 AND
0x518 EQ
0x519 PUSH2 0x521
0x51c JUMPI
---
0x506: JUMPDEST 
0x507: V473 = 0x0
0x509: V474 = S[0x0]
0x50a: V475 = CALLER
0x50b: V476 = 0x1
0x50d: V477 = 0xa0
0x50f: V478 = 0x2
0x511: V479 = EXP 0x2 0xa0
0x512: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x515: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x517: V482 = AND V474 0xffffffffffffffffffffffffffffffffffffffff
0x518: V483 = EQ V482 V481
0x519: V484 = 0x521
0x51c: JUMPI 0x521 V483
---
Entry stack: [V13, 0x330, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V296]

================================

Block 0x51d
[0x51d:0x520]
---
Predecessors: [0x506]
Successors: []
---
0x51d PUSH1 0x0
0x51f DUP1
0x520 REVERT
---
0x51d: V485 = 0x0
0x520: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V296]

================================

Block 0x521
[0x521:0x533]
---
Predecessors: [0x506]
Successors: [0x330]
---
0x521 JUMPDEST
0x522 PUSH1 0x9
0x524 DUP1
0x525 SLOAD
0x526 PUSH1 0xff
0x528 NOT
0x529 AND
0x52a SWAP2
0x52b ISZERO
0x52c ISZERO
0x52d SWAP2
0x52e SWAP1
0x52f SWAP2
0x530 OR
0x531 SWAP1
0x532 SSTORE
0x533 JUMP
---
0x521: JUMPDEST 
0x522: V486 = 0x9
0x525: V487 = S[0x9]
0x526: V488 = 0xff
0x528: V489 = NOT 0xff
0x529: V490 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V487
0x52b: V491 = ISZERO V296
0x52c: V492 = ISZERO V491
0x530: V493 = OR V492 V490
0x532: S[0x9] = V493
0x533: JUMP 0x330
---
Entry stack: [V13, 0x330, V296]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x534
[0x534:0x54b]
---
Predecessors: [0x33d]
Successors: [0x54c, 0x550]
---
0x534 JUMPDEST
0x535 PUSH1 0x0
0x537 DUP1
0x538 SLOAD
0x539 CALLER
0x53a PUSH1 0x1
0x53c PUSH1 0xa0
0x53e PUSH1 0x2
0x540 EXP
0x541 SUB
0x542 SWAP1
0x543 DUP2
0x544 AND
0x545 SWAP2
0x546 AND
0x547 EQ
0x548 PUSH2 0x550
0x54b JUMPI
---
0x534: JUMPDEST 
0x535: V494 = 0x0
0x538: V495 = S[0x0]
0x539: V496 = CALLER
0x53a: V497 = 0x1
0x53c: V498 = 0xa0
0x53e: V499 = 0x2
0x540: V500 = EXP 0x2 0xa0
0x541: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x544: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x546: V503 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x547: V504 = EQ V503 V502
0x548: V505 = 0x550
0x54b: JUMPI 0x550 V504
---
Entry stack: [V13, 0x330, V304]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x330, V304, 0x0]

================================

Block 0x54c
[0x54c:0x54f]
---
Predecessors: [0x534]
Successors: []
---
0x54c PUSH1 0x0
0x54e DUP1
0x54f REVERT
---
0x54c: V506 = 0x0
0x54f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V304, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V304, 0x0]

================================

Block 0x550
[0x550:0x55c]
---
Predecessors: [0x534]
Successors: [0x55d, 0x561]
---
0x550 JUMPDEST
0x551 PUSH1 0x9
0x553 SLOAD
0x554 PUSH1 0xff
0x556 AND
0x557 ISZERO
0x558 ISZERO
0x559 PUSH2 0x561
0x55c JUMPI
---
0x550: JUMPDEST 
0x551: V507 = 0x9
0x553: V508 = S[0x9]
0x554: V509 = 0xff
0x556: V510 = AND 0xff V508
0x557: V511 = ISZERO V510
0x558: V512 = ISZERO V511
0x559: V513 = 0x561
0x55c: JUMPI 0x561 V512
---
Entry stack: [V13, 0x330, V304, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V304, 0x0]

================================

Block 0x55d
[0x55d:0x560]
---
Predecessors: [0x550]
Successors: []
---
0x55d PUSH1 0x0
0x55f DUP1
0x560 REVERT
---
0x55d: V514 = 0x0
0x560: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V304, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V304, 0x0]

================================

Block 0x561
[0x561:0x5ac]
---
Predecessors: [0x550]
Successors: [0x5ad, 0x5b1]
---
0x561 JUMPDEST
0x562 PUSH1 0x7
0x564 SLOAD
0x565 PUSH1 0x1
0x567 PUSH1 0xa0
0x569 PUSH1 0x2
0x56b EXP
0x56c SUB
0x56d AND
0x56e PUSH4 0x70a08231
0x573 ADDRESS
0x574 PUSH1 0x40
0x576 MLOAD
0x577 PUSH1 0xe0
0x579 PUSH1 0x2
0x57b EXP
0x57c PUSH4 0xffffffff
0x581 DUP5
0x582 AND
0x583 MUL
0x584 DUP2
0x585 MSTORE
0x586 PUSH1 0x1
0x588 PUSH1 0xa0
0x58a PUSH1 0x2
0x58c EXP
0x58d SUB
0x58e SWAP1
0x58f SWAP2
0x590 AND
0x591 PUSH1 0x4
0x593 DUP3
0x594 ADD
0x595 MSTORE
0x596 PUSH1 0x24
0x598 ADD
0x599 PUSH1 0x20
0x59b PUSH1 0x40
0x59d MLOAD
0x59e DUP1
0x59f DUP4
0x5a0 SUB
0x5a1 DUP2
0x5a2 PUSH1 0x0
0x5a4 DUP8
0x5a5 DUP1
0x5a6 EXTCODESIZE
0x5a7 ISZERO
0x5a8 ISZERO
0x5a9 PUSH2 0x5b1
0x5ac JUMPI
---
0x561: JUMPDEST 
0x562: V515 = 0x7
0x564: V516 = S[0x7]
0x565: V517 = 0x1
0x567: V518 = 0xa0
0x569: V519 = 0x2
0x56b: V520 = EXP 0x2 0xa0
0x56c: V521 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56d: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x56e: V523 = 0x70a08231
0x573: V524 = ADDRESS
0x574: V525 = 0x40
0x576: V526 = M[0x40]
0x577: V527 = 0xe0
0x579: V528 = 0x2
0x57b: V529 = EXP 0x2 0xe0
0x57c: V530 = 0xffffffff
0x582: V531 = AND 0x70a08231 0xffffffff
0x583: V532 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x585: M[V526] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x586: V533 = 0x1
0x588: V534 = 0xa0
0x58a: V535 = 0x2
0x58c: V536 = EXP 0x2 0xa0
0x58d: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x590: V538 = AND V524 0xffffffffffffffffffffffffffffffffffffffff
0x591: V539 = 0x4
0x594: V540 = ADD V526 0x4
0x595: M[V540] = V538
0x596: V541 = 0x24
0x598: V542 = ADD 0x24 V526
0x599: V543 = 0x20
0x59b: V544 = 0x40
0x59d: V545 = M[0x40]
0x5a0: V546 = SUB V542 V545
0x5a2: V547 = 0x0
0x5a6: V548 = EXTCODESIZE V522
0x5a7: V549 = ISZERO V548
0x5a8: V550 = ISZERO V549
0x5a9: V551 = 0x5b1
0x5ac: JUMPI 0x5b1 V550
---
Entry stack: [V13, 0x330, V304, 0x0]
Stack pops: 0
Stack additions: [V522, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V522]
Exit stack: [V13, 0x330, V304, 0x0, V522, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V522]

================================

Block 0x5ad
[0x5ad:0x5b0]
---
Predecessors: [0x561]
Successors: []
---
0x5ad PUSH1 0x0
0x5af DUP1
0x5b0 REVERT
---
0x5ad: V552 = 0x0
0x5b0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V304, 0x0, V522, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V522]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V304, 0x0, V522, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V522]

================================

Block 0x5b1
[0x5b1:0x5b9]
---
Predecessors: [0x561]
Successors: [0x5ba, 0x5be]
---
0x5b1 JUMPDEST
0x5b2 GAS
0x5b3 CALL
0x5b4 ISZERO
0x5b5 ISZERO
0x5b6 PUSH2 0x5be
0x5b9 JUMPI
---
0x5b1: JUMPDEST 
0x5b2: V553 = GAS
0x5b3: V554 = CALL V553 V522 0x0 V545 V546 V545 0x20
0x5b4: V555 = ISZERO V554
0x5b5: V556 = ISZERO V555
0x5b6: V557 = 0x5be
0x5b9: JUMPI 0x5be V556
---
Entry stack: [V13, 0x330, V304, 0x0, V522, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V522]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x330, V304, 0x0, V522, 0x70a08231, V542]

================================

Block 0x5ba
[0x5ba:0x5bd]
---
Predecessors: [0x5b1]
Successors: []
---
0x5ba PUSH1 0x0
0x5bc DUP1
0x5bd REVERT
---
0x5ba: V558 = 0x0
0x5bd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V304, 0x0, V522, 0x70a08231, V542]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V304, 0x0, V522, 0x70a08231, V542]

================================

Block 0x5be
[0x5be:0x5d3]
---
Predecessors: [0x5b1]
Successors: [0x5d4, 0x5d9]
---
0x5be JUMPDEST
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 PUSH1 0x40
0x5c4 MLOAD
0x5c5 DUP1
0x5c6 MLOAD
0x5c7 SWAP2
0x5c8 POP
0x5c9 POP
0x5ca PUSH1 0x0
0x5cc DUP2
0x5cd GT
0x5ce DUP1
0x5cf ISZERO
0x5d0 PUSH2 0x5d9
0x5d3 JUMPI
---
0x5be: JUMPDEST 
0x5c2: V559 = 0x40
0x5c4: V560 = M[0x40]
0x5c6: V561 = M[V560]
0x5ca: V562 = 0x0
0x5cd: V563 = GT V561 0x0
0x5cf: V564 = ISZERO V563
0x5d0: V565 = 0x5d9
0x5d3: JUMPI 0x5d9 V564
---
Entry stack: [V13, 0x330, V304, 0x0, V522, 0x70a08231, V542]
Stack pops: 4
Stack additions: [V561, V563]
Exit stack: [V13, 0x330, V304, V561, V563]

================================

Block 0x5d4
[0x5d4:0x5d8]
---
Predecessors: [0x5be]
Successors: [0x5d9]
---
0x5d4 POP
0x5d5 PUSH1 0x0
0x5d7 DUP3
0x5d8 GT
---
0x5d5: V566 = 0x0
0x5d8: V567 = GT V304 0x0
---
Entry stack: [V13, 0x330, V304, V561, V563]
Stack pops: 3
Stack additions: [S2, S1, V567]
Exit stack: [V13, 0x330, V304, V561, V567]

================================

Block 0x5d9
[0x5d9:0x5df]
---
Predecessors: [0x5be, 0x5d4]
Successors: [0x5e0, 0x5e4]
---
0x5d9 JUMPDEST
0x5da ISZERO
0x5db ISZERO
0x5dc PUSH2 0x5e4
0x5df JUMPI
---
0x5d9: JUMPDEST 
0x5da: V568 = ISZERO S0
0x5db: V569 = ISZERO V568
0x5dc: V570 = 0x5e4
0x5df: JUMPI 0x5e4 V569
---
Entry stack: [V13, 0x330, V304, V561, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x330, V304, V561]

================================

Block 0x5e0
[0x5e0:0x5e3]
---
Predecessors: [0x5d9]
Successors: []
---
0x5e0 PUSH1 0x0
0x5e2 DUP1
0x5e3 REVERT
---
0x5e0: V571 = 0x0
0x5e3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V304, V561]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V304, V561]

================================

Block 0x5e4
[0x5e4:0x5ec]
---
Predecessors: [0x5d9]
Successors: [0x5ed, 0x5f1]
---
0x5e4 JUMPDEST
0x5e5 DUP2
0x5e6 DUP2
0x5e7 LT
0x5e8 ISZERO
0x5e9 PUSH2 0x5f1
0x5ec JUMPI
---
0x5e4: JUMPDEST 
0x5e7: V572 = LT V561 V304
0x5e8: V573 = ISZERO V572
0x5e9: V574 = 0x5f1
0x5ec: JUMPI 0x5f1 V573
---
Entry stack: [V13, 0x330, V304, V561]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x330, V304, V561]

================================

Block 0x5ed
[0x5ed:0x5f0]
---
Predecessors: [0x5e4]
Successors: []
---
0x5ed PUSH1 0x0
0x5ef DUP1
0x5f0 REVERT
---
0x5ed: V575 = 0x0
0x5f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V304, V561]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V304, V561]

================================

Block 0x5f1
[0x5f1:0x602]
---
Predecessors: [0x5e4]
Successors: [0xacd]
---
0x5f1 JUMPDEST
0x5f2 PUSH1 0x0
0x5f4 PUSH2 0x603
0x5f7 DUP3
0x5f8 DUP5
0x5f9 PUSH4 0xffffffff
0x5fe PUSH2 0xacd
0x601 AND
0x602 JUMP
---
0x5f1: JUMPDEST 
0x5f2: V576 = 0x0
0x5f4: V577 = 0x603
0x5f9: V578 = 0xffffffff
0x5fe: V579 = 0xacd
0x601: V580 = AND 0xacd 0xffffffff
0x602: JUMP 0xacd
---
Entry stack: [V13, 0x330, V304, V561]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x603, S0, S1]
Exit stack: [V13, 0x330, V304, V561, 0x0, 0x603, V561, V304]

================================

Block 0x603
[0x603:0x609]
---
Predecessors: [0xad9]
Successors: [0x60a, 0x686]
---
0x603 JUMPDEST
0x604 GT
0x605 ISZERO
0x606 PUSH2 0x686
0x609 JUMPI
---
0x603: JUMPDEST 
0x604: V581 = GT V1084 S1
0x605: V582 = ISZERO V581
0x606: V583 = 0x686
0x609: JUMPI 0x686 V582
---
Entry stack: [V13, 0x330, S5, S4, S3, S2, S1, V1084]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x330, S5, S4, S3, S2]

================================

Block 0x60a
[0x60a:0x631]
---
Predecessors: [0x603]
Successors: [0xacd]
---
0x60a PUSH1 0x7
0x60c SLOAD
0x60d PUSH1 0x1
0x60f SLOAD
0x610 PUSH1 0x1
0x612 PUSH1 0xa0
0x614 PUSH1 0x2
0x616 EXP
0x617 SUB
0x618 SWAP2
0x619 DUP3
0x61a AND
0x61b SWAP2
0x61c PUSH4 0xa9059cbb
0x621 SWAP2
0x622 AND
0x623 PUSH2 0x632
0x626 DUP5
0x627 DUP7
0x628 PUSH4 0xffffffff
0x62d PUSH2 0xacd
0x630 AND
0x631 JUMP
---
0x60a: V584 = 0x7
0x60c: V585 = S[0x7]
0x60d: V586 = 0x1
0x60f: V587 = S[0x1]
0x610: V588 = 0x1
0x612: V589 = 0xa0
0x614: V590 = 0x2
0x616: V591 = EXP 0x2 0xa0
0x617: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61a: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x61c: V594 = 0xa9059cbb
0x622: V595 = AND V587 0xffffffffffffffffffffffffffffffffffffffff
0x623: V596 = 0x632
0x628: V597 = 0xffffffff
0x62d: V598 = 0xacd
0x630: V599 = AND 0xacd 0xffffffff
0x631: JUMP 0xacd
---
Entry stack: [V13, 0x330, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V593, 0xa9059cbb, V595, 0x632, S0, S1]
Exit stack: [V13, 0x330, S3, S2, S1, S0, V593, 0xa9059cbb, V595, 0x632, S0, S1]

================================

Block 0x632
[0x632:0x670]
---
Predecessors: [0xad9]
Successors: [0x671, 0x675]
---
0x632 JUMPDEST
0x633 PUSH1 0x40
0x635 MLOAD
0x636 PUSH1 0xe0
0x638 PUSH1 0x2
0x63a EXP
0x63b PUSH4 0xffffffff
0x640 DUP6
0x641 AND
0x642 MUL
0x643 DUP2
0x644 MSTORE
0x645 PUSH1 0x1
0x647 PUSH1 0xa0
0x649 PUSH1 0x2
0x64b EXP
0x64c SUB
0x64d SWAP1
0x64e SWAP3
0x64f AND
0x650 PUSH1 0x4
0x652 DUP4
0x653 ADD
0x654 MSTORE
0x655 PUSH1 0x24
0x657 DUP3
0x658 ADD
0x659 MSTORE
0x65a PUSH1 0x44
0x65c ADD
0x65d PUSH1 0x0
0x65f PUSH1 0x40
0x661 MLOAD
0x662 DUP1
0x663 DUP4
0x664 SUB
0x665 DUP2
0x666 PUSH1 0x0
0x668 DUP8
0x669 DUP1
0x66a EXTCODESIZE
0x66b ISZERO
0x66c ISZERO
0x66d PUSH2 0x675
0x670 JUMPI
---
0x632: JUMPDEST 
0x633: V600 = 0x40
0x635: V601 = M[0x40]
0x636: V602 = 0xe0
0x638: V603 = 0x2
0x63a: V604 = EXP 0x2 0xe0
0x63b: V605 = 0xffffffff
0x641: V606 = AND S2 0xffffffff
0x642: V607 = MUL V606 0x100000000000000000000000000000000000000000000000000000000
0x644: M[V601] = V607
0x645: V608 = 0x1
0x647: V609 = 0xa0
0x649: V610 = 0x2
0x64b: V611 = EXP 0x2 0xa0
0x64c: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64f: V613 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x650: V614 = 0x4
0x653: V615 = ADD V601 0x4
0x654: M[V615] = V613
0x655: V616 = 0x24
0x658: V617 = ADD V601 0x24
0x659: M[V617] = V1084
0x65a: V618 = 0x44
0x65c: V619 = ADD 0x44 V601
0x65d: V620 = 0x0
0x65f: V621 = 0x40
0x661: V622 = M[0x40]
0x664: V623 = SUB V619 V622
0x666: V624 = 0x0
0x66a: V625 = EXTCODESIZE S3
0x66b: V626 = ISZERO V625
0x66c: V627 = ISZERO V626
0x66d: V628 = 0x675
0x670: JUMPI 0x675 V627
---
Entry stack: [V13, 0x330, S5, S4, S3, S2, S1, V1084]
Stack pops: 4
Stack additions: [S3, S2, V619, 0x0, V622, V623, V622, 0x0, S3]
Exit stack: [V13, 0x330, S5, S4, S3, S2, V619, 0x0, V622, V623, V622, 0x0, S3]

================================

Block 0x671
[0x671:0x674]
---
Predecessors: [0x632]
Successors: []
---
0x671 PUSH1 0x0
0x673 DUP1
0x674 REVERT
---
0x671: V629 = 0x0
0x674: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, S10, S9, S8, S7, V619, 0x0, V622, V623, V622, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, S10, S9, S8, S7, V619, 0x0, V622, V623, V622, 0x0, S0]

================================

Block 0x675
[0x675:0x67d]
---
Predecessors: [0x632]
Successors: [0x67e, 0x682]
---
0x675 JUMPDEST
0x676 GAS
0x677 CALL
0x678 ISZERO
0x679 ISZERO
0x67a PUSH2 0x682
0x67d JUMPI
---
0x675: JUMPDEST 
0x676: V630 = GAS
0x677: V631 = CALL V630 S0 0x0 V622 V623 V622 0x0
0x678: V632 = ISZERO V631
0x679: V633 = ISZERO V632
0x67a: V634 = 0x682
0x67d: JUMPI 0x682 V633
---
Entry stack: [V13, 0x330, S10, S9, S8, S7, V619, 0x0, V622, V623, V622, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x330, S10, S9, S8, S7, V619]

================================

Block 0x67e
[0x67e:0x681]
---
Predecessors: [0x675]
Successors: []
---
0x67e PUSH1 0x0
0x680 DUP1
0x681 REVERT
---
0x67e: V635 = 0x0
0x681: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, S4, S3, S2, S1, V619]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, S4, S3, S2, S1, V619]

================================

Block 0x682
[0x682:0x685]
---
Predecessors: [0x675]
Successors: [0x686]
---
0x682 JUMPDEST
0x683 POP
0x684 POP
0x685 POP
---
0x682: JUMPDEST 
---
Entry stack: [V13, 0x330, S4, S3, S2, S1, V619]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x330, S4, S3]

================================

Block 0x686
[0x686:0x693]
---
Predecessors: [0x603, 0x682]
Successors: [0x330]
---
0x686 JUMPDEST
0x687 POP
0x688 POP
0x689 PUSH1 0x9
0x68b DUP1
0x68c SLOAD
0x68d PUSH1 0xff
0x68f NOT
0x690 AND
0x691 SWAP1
0x692 SSTORE
0x693 JUMP
---
0x686: JUMPDEST 
0x689: V636 = 0x9
0x68c: V637 = S[0x9]
0x68d: V638 = 0xff
0x68f: V639 = NOT 0xff
0x690: V640 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V637
0x692: S[0x9] = V640
0x693: JUMP S2
---
Entry stack: [V13, 0x330, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x330, S3]

================================

Block 0x694
[0x694:0x6a2]
---
Predecessors: [0x353]
Successors: [0x35b]
---
0x694 JUMPDEST
0x695 PUSH1 0x1
0x697 SLOAD
0x698 PUSH1 0x1
0x69a PUSH1 0xa0
0x69c PUSH1 0x2
0x69e EXP
0x69f SUB
0x6a0 AND
0x6a1 DUP2
0x6a2 JUMP
---
0x694: JUMPDEST 
0x695: V641 = 0x1
0x697: V642 = S[0x1]
0x698: V643 = 0x1
0x69a: V644 = 0xa0
0x69c: V645 = 0x2
0x69e: V646 = EXP 0x2 0xa0
0x69f: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a0: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0x6a2: JUMP 0x35b
---
Entry stack: [V13, 0x35b]
Stack pops: 1
Stack additions: [S0, V648]
Exit stack: [V13, 0x35b, V648]

================================

Block 0x6a3
[0x6a3:0x6ba]
---
Predecessors: [0x382, 0x990]
Successors: [0x6bb, 0x6bf]
---
0x6a3 JUMPDEST
0x6a4 PUSH1 0x0
0x6a6 DUP1
0x6a7 SLOAD
0x6a8 CALLER
0x6a9 PUSH1 0x1
0x6ab PUSH1 0xa0
0x6ad PUSH1 0x2
0x6af EXP
0x6b0 SUB
0x6b1 SWAP1
0x6b2 DUP2
0x6b3 AND
0x6b4 SWAP2
0x6b5 AND
0x6b6 EQ
0x6b7 PUSH2 0x6bf
0x6ba JUMPI
---
0x6a3: JUMPDEST 
0x6a4: V649 = 0x0
0x6a7: V650 = S[0x0]
0x6a8: V651 = CALLER
0x6a9: V652 = 0x1
0x6ab: V653 = 0xa0
0x6ad: V654 = 0x2
0x6af: V655 = EXP 0x2 0xa0
0x6b0: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b3: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x6b5: V658 = AND V650 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V659 = EQ V658 V657
0x6b7: V660 = 0x6bf
0x6ba: JUMPI 0x6bf V659
---
Entry stack: [V13, 0x330, S2, {0x330, 0x9a5}, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x330, S2, {0x330, 0x9a5}, S0, 0x0]

================================

Block 0x6bb
[0x6bb:0x6be]
---
Predecessors: [0x6a3]
Successors: []
---
0x6bb PUSH1 0x0
0x6bd DUP1
0x6be REVERT
---
0x6bb: V661 = 0x0
0x6be: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, S3, {0x330, 0x9a5}, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, S3, {0x330, 0x9a5}, S1, 0x0]

================================

Block 0x6bf
[0x6bf:0x70a]
---
Predecessors: [0x6a3]
Successors: [0x70b, 0x70f]
---
0x6bf JUMPDEST
0x6c0 PUSH1 0x7
0x6c2 SLOAD
0x6c3 PUSH1 0x1
0x6c5 PUSH1 0xa0
0x6c7 PUSH1 0x2
0x6c9 EXP
0x6ca SUB
0x6cb AND
0x6cc PUSH4 0x70a08231
0x6d1 ADDRESS
0x6d2 PUSH1 0x40
0x6d4 MLOAD
0x6d5 PUSH1 0xe0
0x6d7 PUSH1 0x2
0x6d9 EXP
0x6da PUSH4 0xffffffff
0x6df DUP5
0x6e0 AND
0x6e1 MUL
0x6e2 DUP2
0x6e3 MSTORE
0x6e4 PUSH1 0x1
0x6e6 PUSH1 0xa0
0x6e8 PUSH1 0x2
0x6ea EXP
0x6eb SUB
0x6ec SWAP1
0x6ed SWAP2
0x6ee AND
0x6ef PUSH1 0x4
0x6f1 DUP3
0x6f2 ADD
0x6f3 MSTORE
0x6f4 PUSH1 0x24
0x6f6 ADD
0x6f7 PUSH1 0x20
0x6f9 PUSH1 0x40
0x6fb MLOAD
0x6fc DUP1
0x6fd DUP4
0x6fe SUB
0x6ff DUP2
0x700 PUSH1 0x0
0x702 DUP8
0x703 DUP1
0x704 EXTCODESIZE
0x705 ISZERO
0x706 ISZERO
0x707 PUSH2 0x70f
0x70a JUMPI
---
0x6bf: JUMPDEST 
0x6c0: V662 = 0x7
0x6c2: V663 = S[0x7]
0x6c3: V664 = 0x1
0x6c5: V665 = 0xa0
0x6c7: V666 = 0x2
0x6c9: V667 = EXP 0x2 0xa0
0x6ca: V668 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cb: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V663
0x6cc: V670 = 0x70a08231
0x6d1: V671 = ADDRESS
0x6d2: V672 = 0x40
0x6d4: V673 = M[0x40]
0x6d5: V674 = 0xe0
0x6d7: V675 = 0x2
0x6d9: V676 = EXP 0x2 0xe0
0x6da: V677 = 0xffffffff
0x6e0: V678 = AND 0x70a08231 0xffffffff
0x6e1: V679 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x6e3: M[V673] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6e4: V680 = 0x1
0x6e6: V681 = 0xa0
0x6e8: V682 = 0x2
0x6ea: V683 = EXP 0x2 0xa0
0x6eb: V684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ee: V685 = AND V671 0xffffffffffffffffffffffffffffffffffffffff
0x6ef: V686 = 0x4
0x6f2: V687 = ADD V673 0x4
0x6f3: M[V687] = V685
0x6f4: V688 = 0x24
0x6f6: V689 = ADD 0x24 V673
0x6f7: V690 = 0x20
0x6f9: V691 = 0x40
0x6fb: V692 = M[0x40]
0x6fe: V693 = SUB V689 V692
0x700: V694 = 0x0
0x704: V695 = EXTCODESIZE V669
0x705: V696 = ISZERO V695
0x706: V697 = ISZERO V696
0x707: V698 = 0x70f
0x70a: JUMPI 0x70f V697
---
Entry stack: [V13, 0x330, S3, {0x330, 0x9a5}, S1, 0x0]
Stack pops: 0
Stack additions: [V669, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V669]
Exit stack: [V13, 0x330, S3, {0x330, 0x9a5}, S1, 0x0, V669, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V669]

================================

Block 0x70b
[0x70b:0x70e]
---
Predecessors: [0x6bf]
Successors: []
---
0x70b PUSH1 0x0
0x70d DUP1
0x70e REVERT
---
0x70b: V699 = 0x0
0x70e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, S12, {0x330, 0x9a5}, S10, 0x0, V669, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V669]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, S12, {0x330, 0x9a5}, S10, 0x0, V669, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V669]

================================

Block 0x70f
[0x70f:0x717]
---
Predecessors: [0x6bf]
Successors: [0x718, 0x71c]
---
0x70f JUMPDEST
0x710 GAS
0x711 CALL
0x712 ISZERO
0x713 ISZERO
0x714 PUSH2 0x71c
0x717 JUMPI
---
0x70f: JUMPDEST 
0x710: V700 = GAS
0x711: V701 = CALL V700 V669 0x0 V692 V693 V692 0x20
0x712: V702 = ISZERO V701
0x713: V703 = ISZERO V702
0x714: V704 = 0x71c
0x717: JUMPI 0x71c V703
---
Entry stack: [V13, 0x330, S12, {0x330, 0x9a5}, S10, 0x0, V669, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V669]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x330, S12, {0x330, 0x9a5}, S10, 0x0, V669, 0x70a08231, V689]

================================

Block 0x718
[0x718:0x71b]
---
Predecessors: [0x70f]
Successors: []
---
0x718 PUSH1 0x0
0x71a DUP1
0x71b REVERT
---
0x718: V705 = 0x0
0x71b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, S6, {0x330, 0x9a5}, S4, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, S6, {0x330, 0x9a5}, S4, 0x0, S2, 0x70a08231, S0]

================================

Block 0x71c
[0x71c:0x730]
---
Predecessors: [0x70f]
Successors: [0x731, 0x797]
---
0x71c JUMPDEST
0x71d POP
0x71e POP
0x71f POP
0x720 PUSH1 0x40
0x722 MLOAD
0x723 DUP1
0x724 MLOAD
0x725 SWAP2
0x726 POP
0x727 POP
0x728 PUSH1 0x0
0x72a DUP2
0x72b GT
0x72c ISZERO
0x72d PUSH2 0x797
0x730 JUMPI
---
0x71c: JUMPDEST 
0x720: V706 = 0x40
0x722: V707 = M[0x40]
0x724: V708 = M[V707]
0x728: V709 = 0x0
0x72b: V710 = GT V708 0x0
0x72c: V711 = ISZERO V710
0x72d: V712 = 0x797
0x730: JUMPI 0x797 V711
---
Entry stack: [V13, 0x330, S6, {0x330, 0x9a5}, S4, 0x0, S2, 0x70a08231, S0]
Stack pops: 4
Stack additions: [V708]
Exit stack: [V13, 0x330, S6, {0x330, 0x9a5}, S4, V708]

================================

Block 0x731
[0x731:0x781]
---
Predecessors: [0x71c]
Successors: [0x782, 0x786]
---
0x731 PUSH1 0x7
0x733 SLOAD
0x734 PUSH1 0x1
0x736 PUSH1 0xa0
0x738 PUSH1 0x2
0x73a EXP
0x73b SUB
0x73c AND
0x73d PUSH4 0xa9059cbb
0x742 DUP4
0x743 DUP4
0x744 PUSH1 0x40
0x746 MLOAD
0x747 PUSH1 0xe0
0x749 PUSH1 0x2
0x74b EXP
0x74c PUSH4 0xffffffff
0x751 DUP6
0x752 AND
0x753 MUL
0x754 DUP2
0x755 MSTORE
0x756 PUSH1 0x1
0x758 PUSH1 0xa0
0x75a PUSH1 0x2
0x75c EXP
0x75d SUB
0x75e SWAP1
0x75f SWAP3
0x760 AND
0x761 PUSH1 0x4
0x763 DUP4
0x764 ADD
0x765 MSTORE
0x766 PUSH1 0x24
0x768 DUP3
0x769 ADD
0x76a MSTORE
0x76b PUSH1 0x44
0x76d ADD
0x76e PUSH1 0x0
0x770 PUSH1 0x40
0x772 MLOAD
0x773 DUP1
0x774 DUP4
0x775 SUB
0x776 DUP2
0x777 PUSH1 0x0
0x779 DUP8
0x77a DUP1
0x77b EXTCODESIZE
0x77c ISZERO
0x77d ISZERO
0x77e PUSH2 0x786
0x781 JUMPI
---
0x731: V713 = 0x7
0x733: V714 = S[0x7]
0x734: V715 = 0x1
0x736: V716 = 0xa0
0x738: V717 = 0x2
0x73a: V718 = EXP 0x2 0xa0
0x73b: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73c: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0x73d: V721 = 0xa9059cbb
0x744: V722 = 0x40
0x746: V723 = M[0x40]
0x747: V724 = 0xe0
0x749: V725 = 0x2
0x74b: V726 = EXP 0x2 0xe0
0x74c: V727 = 0xffffffff
0x752: V728 = AND 0xa9059cbb 0xffffffff
0x753: V729 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x755: M[V723] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x756: V730 = 0x1
0x758: V731 = 0xa0
0x75a: V732 = 0x2
0x75c: V733 = EXP 0x2 0xa0
0x75d: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x760: V735 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x761: V736 = 0x4
0x764: V737 = ADD V723 0x4
0x765: M[V737] = V735
0x766: V738 = 0x24
0x769: V739 = ADD V723 0x24
0x76a: M[V739] = V708
0x76b: V740 = 0x44
0x76d: V741 = ADD 0x44 V723
0x76e: V742 = 0x0
0x770: V743 = 0x40
0x772: V744 = M[0x40]
0x775: V745 = SUB V741 V744
0x777: V746 = 0x0
0x77b: V747 = EXTCODESIZE V720
0x77c: V748 = ISZERO V747
0x77d: V749 = ISZERO V748
0x77e: V750 = 0x786
0x781: JUMPI 0x786 V749
---
Entry stack: [V13, 0x330, S3, {0x330, 0x9a5}, S1, V708]
Stack pops: 2
Stack additions: [S1, S0, V720, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V720]
Exit stack: [V13, 0x330, S3, {0x330, 0x9a5}, S1, V708, V720, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V720]

================================

Block 0x782
[0x782:0x785]
---
Predecessors: [0x731]
Successors: []
---
0x782 PUSH1 0x0
0x784 DUP1
0x785 REVERT
---
0x782: V751 = 0x0
0x785: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, S12, {0x330, 0x9a5}, S10, V708, V720, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V720]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, S12, {0x330, 0x9a5}, S10, V708, V720, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V720]

================================

Block 0x786
[0x786:0x78e]
---
Predecessors: [0x731]
Successors: [0x78f, 0x793]
---
0x786 JUMPDEST
0x787 GAS
0x788 CALL
0x789 ISZERO
0x78a ISZERO
0x78b PUSH2 0x793
0x78e JUMPI
---
0x786: JUMPDEST 
0x787: V752 = GAS
0x788: V753 = CALL V752 V720 0x0 V744 V745 V744 0x0
0x789: V754 = ISZERO V753
0x78a: V755 = ISZERO V754
0x78b: V756 = 0x793
0x78e: JUMPI 0x793 V755
---
Entry stack: [V13, 0x330, S12, {0x330, 0x9a5}, S10, V708, V720, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V720]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x330, S12, {0x330, 0x9a5}, S10, V708, V720, 0xa9059cbb, V741]

================================

Block 0x78f
[0x78f:0x792]
---
Predecessors: [0x786]
Successors: []
---
0x78f PUSH1 0x0
0x791 DUP1
0x792 REVERT
---
0x78f: V757 = 0x0
0x792: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, S6, {0x330, 0x9a5}, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, S6, {0x330, 0x9a5}, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x793
[0x793:0x796]
---
Predecessors: [0x786]
Successors: [0x797]
---
0x793 JUMPDEST
0x794 POP
0x795 POP
0x796 POP
---
0x793: JUMPDEST 
---
Entry stack: [V13, 0x330, S6, {0x330, 0x9a5}, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x330, S6, {0x330, 0x9a5}, S4, S3]

================================

Block 0x797
[0x797:0x79a]
---
Predecessors: [0x71c, 0x793, 0x838]
Successors: [0x330, 0x9a5]
---
0x797 JUMPDEST
0x798 POP
0x799 POP
0x79a JUMP
---
0x797: JUMPDEST 
0x79a: JUMP {0x330, 0x9a5}
---
Entry stack: [V13, 0x330, S3, {0x330, 0x9a5}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x330, S3]

================================

Block 0x79b
[0x79b:0x7a9]
---
Predecessors: [0x3a1]
Successors: [0x35b]
---
0x79b JUMPDEST
0x79c PUSH1 0x7
0x79e SLOAD
0x79f PUSH1 0x1
0x7a1 PUSH1 0xa0
0x7a3 PUSH1 0x2
0x7a5 EXP
0x7a6 SUB
0x7a7 AND
0x7a8 DUP2
0x7a9 JUMP
---
0x79b: JUMPDEST 
0x79c: V758 = 0x7
0x79e: V759 = S[0x7]
0x79f: V760 = 0x1
0x7a1: V761 = 0xa0
0x7a3: V762 = 0x2
0x7a5: V763 = EXP 0x2 0xa0
0x7a6: V764 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a7: V765 = AND 0xffffffffffffffffffffffffffffffffffffffff V759
0x7a9: JUMP 0x35b
---
Entry stack: [V13, 0x35b]
Stack pops: 1
Stack additions: [S0, V765]
Exit stack: [V13, 0x35b, V765]

================================

Block 0x7aa
[0x7aa:0x7bb]
---
Predecessors: [0x3b4]
Successors: [0x2f3]
---
0x7aa JUMPDEST
0x7ab PUSH1 0x8
0x7ad PUSH1 0x20
0x7af MSTORE
0x7b0 PUSH1 0x0
0x7b2 SWAP1
0x7b3 DUP2
0x7b4 MSTORE
0x7b5 PUSH1 0x40
0x7b7 SWAP1
0x7b8 SHA3
0x7b9 SLOAD
0x7ba DUP2
0x7bb JUMP
---
0x7aa: JUMPDEST 
0x7ab: V766 = 0x8
0x7ad: V767 = 0x20
0x7af: M[0x20] = 0x8
0x7b0: V768 = 0x0
0x7b4: M[0x0] = V357
0x7b5: V769 = 0x40
0x7b8: V770 = SHA3 0x0 0x40
0x7b9: V771 = S[V770]
0x7bb: JUMP 0x2f3
---
Entry stack: [V13, 0x2f3, V357]
Stack pops: 2
Stack additions: [S1, V771]
Exit stack: [V13, 0x2f3, V771]

================================

Block 0x7bc
[0x7bc:0x7c4]
---
Predecessors: [0x3d3]
Successors: [0x3db]
---
0x7bc JUMPDEST
0x7bd PUSH1 0x9
0x7bf SLOAD
0x7c0 PUSH1 0xff
0x7c2 AND
0x7c3 SWAP1
0x7c4 JUMP
---
0x7bc: JUMPDEST 
0x7bd: V772 = 0x9
0x7bf: V773 = S[0x9]
0x7c0: V774 = 0xff
0x7c2: V775 = AND 0xff V773
0x7c4: JUMP 0x3db
---
Entry stack: [V13, 0x3db]
Stack pops: 1
Stack additions: [V775]
Exit stack: [V13, V775]

================================

Block 0x7c5
[0x7c5:0x7ca]
---
Predecessors: [0x3fa]
Successors: [0x2f3]
---
0x7c5 JUMPDEST
0x7c6 PUSH1 0x2
0x7c8 SLOAD
0x7c9 DUP2
0x7ca JUMP
---
0x7c5: JUMPDEST 
0x7c6: V776 = 0x2
0x7c8: V777 = S[0x2]
0x7ca: JUMP 0x2f3
---
Entry stack: [V13, 0x2f3]
Stack pops: 1
Stack additions: [S0, V777]
Exit stack: [V13, 0x2f3, V777]

================================

Block 0x7cb
[0x7cb:0x7e1]
---
Predecessors: [0x40d]
Successors: [0x7e2, 0x7e6]
---
0x7cb JUMPDEST
0x7cc PUSH1 0x0
0x7ce SLOAD
0x7cf CALLER
0x7d0 PUSH1 0x1
0x7d2 PUSH1 0xa0
0x7d4 PUSH1 0x2
0x7d6 EXP
0x7d7 SUB
0x7d8 SWAP1
0x7d9 DUP2
0x7da AND
0x7db SWAP2
0x7dc AND
0x7dd EQ
0x7de PUSH2 0x7e6
0x7e1 JUMPI
---
0x7cb: JUMPDEST 
0x7cc: V778 = 0x0
0x7ce: V779 = S[0x0]
0x7cf: V780 = CALLER
0x7d0: V781 = 0x1
0x7d2: V782 = 0xa0
0x7d4: V783 = 0x2
0x7d6: V784 = EXP 0x2 0xa0
0x7d7: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7da: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0x7dc: V787 = AND V779 0xffffffffffffffffffffffffffffffffffffffff
0x7dd: V788 = EQ V787 V786
0x7de: V789 = 0x7e6
0x7e1: JUMPI 0x7e6 V788
---
Entry stack: [V13, 0x330]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330]

================================

Block 0x7e2
[0x7e2:0x7e5]
---
Predecessors: [0x7cb]
Successors: []
---
0x7e2 PUSH1 0x0
0x7e4 DUP1
0x7e5 REVERT
---
0x7e2: V790 = 0x0
0x7e5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330]

================================

Block 0x7e6
[0x7e6:0x7fa]
---
Predecessors: [0x7cb]
Successors: [0xa32]
---
0x7e6 JUMPDEST
0x7e7 PUSH1 0x0
0x7e9 SLOAD
0x7ea PUSH2 0x7fb
0x7ed SWAP1
0x7ee PUSH1 0x1
0x7f0 PUSH1 0xa0
0x7f2 PUSH1 0x2
0x7f4 EXP
0x7f5 SUB
0x7f6 AND
0x7f7 PUSH2 0xa32
0x7fa JUMP
---
0x7e6: JUMPDEST 
0x7e7: V791 = 0x0
0x7e9: V792 = S[0x0]
0x7ea: V793 = 0x7fb
0x7ee: V794 = 0x1
0x7f0: V795 = 0xa0
0x7f2: V796 = 0x2
0x7f4: V797 = EXP 0x2 0xa0
0x7f5: V798 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f6: V799 = AND 0xffffffffffffffffffffffffffffffffffffffff V792
0x7f7: V800 = 0xa32
0x7fa: JUMP 0xa32
---
Entry stack: [V13, 0x330]
Stack pops: 0
Stack additions: [0x7fb, V799]
Exit stack: [V13, 0x330, 0x7fb, V799]

================================

Block 0x7fb
[0x7fb:0x7fc]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x7fb JUMPDEST
0x7fc JUMP
---
0x7fb: JUMPDEST 
0x7fc: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7fd
[0x7fd:0x802]
---
Predecessors: [0x420]
Successors: [0x2f3]
---
0x7fd JUMPDEST
0x7fe PUSH1 0x5
0x800 SLOAD
0x801 DUP2
0x802 JUMP
---
0x7fd: JUMPDEST 
0x7fe: V801 = 0x5
0x800: V802 = S[0x5]
0x802: JUMP 0x2f3
---
Entry stack: [V13, 0x2f3]
Stack pops: 1
Stack additions: [S0, V802]
Exit stack: [V13, 0x2f3, V802]

================================

Block 0x803
[0x803:0x81a]
---
Predecessors: [0x433]
Successors: [0x81b, 0x81f]
---
0x803 JUMPDEST
0x804 PUSH1 0x0
0x806 DUP1
0x807 SLOAD
0x808 CALLER
0x809 PUSH1 0x1
0x80b PUSH1 0xa0
0x80d PUSH1 0x2
0x80f EXP
0x810 SUB
0x811 SWAP1
0x812 DUP2
0x813 AND
0x814 SWAP2
0x815 AND
0x816 EQ
0x817 PUSH2 0x81f
0x81a JUMPI
---
0x803: JUMPDEST 
0x804: V803 = 0x0
0x807: V804 = S[0x0]
0x808: V805 = CALLER
0x809: V806 = 0x1
0x80b: V807 = 0xa0
0x80d: V808 = 0x2
0x80f: V809 = EXP 0x2 0xa0
0x810: V810 = SUB 0x10000000000000000000000000000000000000000 0x1
0x813: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0x815: V812 = AND V804 0xffffffffffffffffffffffffffffffffffffffff
0x816: V813 = EQ V812 V811
0x817: V814 = 0x81f
0x81a: JUMPI 0x81f V813
---
Entry stack: [V13, 0x330, V404]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x330, V404, 0x0]

================================

Block 0x81b
[0x81b:0x81e]
---
Predecessors: [0x803]
Successors: []
---
0x81b PUSH1 0x0
0x81d DUP1
0x81e REVERT
---
0x81b: V815 = 0x0
0x81e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V404, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V404, 0x0]

================================

Block 0x81f
[0x81f:0x833]
---
Predecessors: [0x803]
Successors: [0x834, 0x838]
---
0x81f JUMPDEST
0x820 POP
0x821 PUSH1 0x1
0x823 PUSH1 0xa0
0x825 PUSH1 0x2
0x827 EXP
0x828 SUB
0x829 ADDRESS
0x82a AND
0x82b BALANCE
0x82c PUSH1 0x0
0x82e DUP2
0x82f GT
0x830 PUSH2 0x838
0x833 JUMPI
---
0x81f: JUMPDEST 
0x821: V816 = 0x1
0x823: V817 = 0xa0
0x825: V818 = 0x2
0x827: V819 = EXP 0x2 0xa0
0x828: V820 = SUB 0x10000000000000000000000000000000000000000 0x1
0x829: V821 = ADDRESS
0x82a: V822 = AND V821 0xffffffffffffffffffffffffffffffffffffffff
0x82b: V823 = BALANCE V822
0x82c: V824 = 0x0
0x82f: V825 = GT V823 0x0
0x830: V826 = 0x838
0x833: JUMPI 0x838 V825
---
Entry stack: [V13, 0x330, V404, 0x0]
Stack pops: 1
Stack additions: [V823]
Exit stack: [V13, 0x330, V404, V823]

================================

Block 0x834
[0x834:0x837]
---
Predecessors: [0x81f]
Successors: []
---
0x834 PUSH1 0x0
0x836 DUP1
0x837 REVERT
---
0x834: V827 = 0x0
0x837: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V404, V823]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V404, V823]

================================

Block 0x838
[0x838:0x863]
---
Predecessors: [0x81f]
Successors: [0x797, 0x864]
---
0x838 JUMPDEST
0x839 PUSH1 0x1
0x83b PUSH1 0xa0
0x83d PUSH1 0x2
0x83f EXP
0x840 SUB
0x841 DUP3
0x842 AND
0x843 DUP2
0x844 ISZERO
0x845 PUSH2 0x8fc
0x848 MUL
0x849 DUP3
0x84a PUSH1 0x40
0x84c MLOAD
0x84d PUSH1 0x0
0x84f PUSH1 0x40
0x851 MLOAD
0x852 DUP1
0x853 DUP4
0x854 SUB
0x855 DUP2
0x856 DUP6
0x857 DUP9
0x858 DUP9
0x859 CALL
0x85a SWAP4
0x85b POP
0x85c POP
0x85d POP
0x85e POP
0x85f ISZERO
0x860 PUSH2 0x797
0x863 JUMPI
---
0x838: JUMPDEST 
0x839: V828 = 0x1
0x83b: V829 = 0xa0
0x83d: V830 = 0x2
0x83f: V831 = EXP 0x2 0xa0
0x840: V832 = SUB 0x10000000000000000000000000000000000000000 0x1
0x842: V833 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0x844: V834 = ISZERO V823
0x845: V835 = 0x8fc
0x848: V836 = MUL 0x8fc V834
0x84a: V837 = 0x40
0x84c: V838 = M[0x40]
0x84d: V839 = 0x0
0x84f: V840 = 0x40
0x851: V841 = M[0x40]
0x854: V842 = SUB V838 V841
0x859: V843 = CALL V836 V833 V823 V841 V842 V841 0x0
0x85f: V844 = ISZERO V843
0x860: V845 = 0x797
0x863: JUMPI 0x797 V844
---
Entry stack: [V13, 0x330, V404, V823]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x330, V404, V823]

================================

Block 0x864
[0x864:0x8ba]
---
Predecessors: [0x838]
Successors: [0x330]
---
0x864 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x885 DUP3
0x886 DUP3
0x887 PUSH1 0x0
0x889 PUSH1 0x40
0x88b MLOAD
0x88c PUSH1 0x1
0x88e PUSH1 0xa0
0x890 PUSH1 0x2
0x892 EXP
0x893 SUB
0x894 SWAP1
0x895 SWAP4
0x896 AND
0x897 DUP4
0x898 MSTORE
0x899 PUSH1 0x20
0x89b DUP4
0x89c ADD
0x89d SWAP2
0x89e SWAP1
0x89f SWAP2
0x8a0 MSTORE
0x8a1 ISZERO
0x8a2 ISZERO
0x8a3 PUSH1 0x40
0x8a5 DUP1
0x8a6 DUP4
0x8a7 ADD
0x8a8 SWAP2
0x8a9 SWAP1
0x8aa SWAP2
0x8ab MSTORE
0x8ac PUSH1 0x60
0x8ae SWAP1
0x8af SWAP2
0x8b0 ADD
0x8b1 SWAP1
0x8b2 MLOAD
0x8b3 DUP1
0x8b4 SWAP2
0x8b5 SUB
0x8b6 SWAP1
0x8b7 LOG1
0x8b8 POP
0x8b9 POP
0x8ba JUMP
---
0x864: V846 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x887: V847 = 0x0
0x889: V848 = 0x40
0x88b: V849 = M[0x40]
0x88c: V850 = 0x1
0x88e: V851 = 0xa0
0x890: V852 = 0x2
0x892: V853 = EXP 0x2 0xa0
0x893: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0x896: V855 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0x898: M[V849] = V855
0x899: V856 = 0x20
0x89c: V857 = ADD V849 0x20
0x8a0: M[V857] = V823
0x8a1: V858 = ISZERO 0x0
0x8a2: V859 = ISZERO 0x1
0x8a3: V860 = 0x40
0x8a7: V861 = ADD V849 0x40
0x8ab: M[V861] = 0x0
0x8ac: V862 = 0x60
0x8b0: V863 = ADD V849 0x60
0x8b2: V864 = M[0x40]
0x8b5: V865 = SUB V863 V864
0x8b7: LOG V864 V865 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x8ba: JUMP 0x330
---
Entry stack: [V13, 0x330, V404, V823]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x8bb
[0x8bb:0x8c0]
---
Predecessors: [0x452]
Successors: [0x2f3]
---
0x8bb JUMPDEST
0x8bc PUSH1 0x4
0x8be SLOAD
0x8bf DUP2
0x8c0 JUMP
---
0x8bb: JUMPDEST 
0x8bc: V866 = 0x4
0x8be: V867 = S[0x4]
0x8c0: JUMP 0x2f3
---
Entry stack: [V13, 0x2f3]
Stack pops: 1
Stack additions: [S0, V867]
Exit stack: [V13, 0x2f3, V867]

================================

Block 0x8c1
[0x8c1:0x8d8]
---
Predecessors: [0x465]
Successors: [0x8d9, 0x8dd]
---
0x8c1 JUMPDEST
0x8c2 PUSH1 0x0
0x8c4 DUP1
0x8c5 SLOAD
0x8c6 CALLER
0x8c7 PUSH1 0x1
0x8c9 PUSH1 0xa0
0x8cb PUSH1 0x2
0x8cd EXP
0x8ce SUB
0x8cf SWAP1
0x8d0 DUP2
0x8d1 AND
0x8d2 SWAP2
0x8d3 AND
0x8d4 EQ
0x8d5 PUSH2 0x8dd
0x8d8 JUMPI
---
0x8c1: JUMPDEST 
0x8c2: V868 = 0x0
0x8c5: V869 = S[0x0]
0x8c6: V870 = CALLER
0x8c7: V871 = 0x1
0x8c9: V872 = 0xa0
0x8cb: V873 = 0x2
0x8cd: V874 = EXP 0x2 0xa0
0x8ce: V875 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d1: V876 = AND 0xffffffffffffffffffffffffffffffffffffffff V870
0x8d3: V877 = AND V869 0xffffffffffffffffffffffffffffffffffffffff
0x8d4: V878 = EQ V877 V876
0x8d5: V879 = 0x8dd
0x8d8: JUMPI 0x8dd V878
---
Entry stack: [V13, 0x330]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x330, 0x0]

================================

Block 0x8d9
[0x8d9:0x8dc]
---
Predecessors: [0x8c1]
Successors: []
---
0x8d9 PUSH1 0x0
0x8db DUP1
0x8dc REVERT
---
0x8d9: V880 = 0x0
0x8dc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, 0x0]

================================

Block 0x8dd
[0x8dd:0x8e7]
---
Predecessors: [0x8c1]
Successors: [0x8e8, 0x8ec]
---
0x8dd JUMPDEST
0x8de PUSH1 0x3
0x8e0 SLOAD
0x8e1 TIMESTAMP
0x8e2 LT
0x8e3 ISZERO
0x8e4 PUSH2 0x8ec
0x8e7 JUMPI
---
0x8dd: JUMPDEST 
0x8de: V881 = 0x3
0x8e0: V882 = S[0x3]
0x8e1: V883 = TIMESTAMP
0x8e2: V884 = LT V883 V882
0x8e3: V885 = ISZERO V884
0x8e4: V886 = 0x8ec
0x8e7: JUMPI 0x8ec V885
---
Entry stack: [V13, 0x330, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, 0x0]

================================

Block 0x8e8
[0x8e8:0x8eb]
---
Predecessors: [0x8dd]
Successors: []
---
0x8e8 PUSH1 0x0
0x8ea DUP1
0x8eb REVERT
---
0x8e8: V887 = 0x0
0x8eb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, 0x0]

================================

Block 0x8ec
[0x8ec:0x8f7]
---
Predecessors: [0x8dd]
Successors: [0x8f8, 0x8fc]
---
0x8ec JUMPDEST
0x8ed PUSH1 0x9
0x8ef SLOAD
0x8f0 PUSH1 0xff
0x8f2 AND
0x8f3 ISZERO
0x8f4 PUSH2 0x8fc
0x8f7 JUMPI
---
0x8ec: JUMPDEST 
0x8ed: V888 = 0x9
0x8ef: V889 = S[0x9]
0x8f0: V890 = 0xff
0x8f2: V891 = AND 0xff V889
0x8f3: V892 = ISZERO V891
0x8f4: V893 = 0x8fc
0x8f7: JUMPI 0x8fc V892
---
Entry stack: [V13, 0x330, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, 0x0]

================================

Block 0x8f8
[0x8f8:0x8fb]
---
Predecessors: [0x8ec]
Successors: []
---
0x8f8 PUSH1 0x0
0x8fa DUP1
0x8fb REVERT
---
0x8f8: V894 = 0x0
0x8fb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, 0x0]

================================

Block 0x8fc
[0x8fc:0x92f]
---
Predecessors: [0x8ec]
Successors: [0x930, 0x990]
---
0x8fc JUMPDEST
0x8fd POP
0x8fe PUSH1 0x1
0x900 SLOAD
0x901 PUSH1 0x1
0x903 PUSH1 0xa0
0x905 PUSH1 0x2
0x907 EXP
0x908 SUB
0x909 ADDRESS
0x90a DUP2
0x90b AND
0x90c BALANCE
0x90d SWAP2
0x90e AND
0x90f DUP2
0x910 ISZERO
0x911 PUSH2 0x8fc
0x914 MUL
0x915 DUP3
0x916 PUSH1 0x40
0x918 MLOAD
0x919 PUSH1 0x0
0x91b PUSH1 0x40
0x91d MLOAD
0x91e DUP1
0x91f DUP4
0x920 SUB
0x921 DUP2
0x922 DUP6
0x923 DUP9
0x924 DUP9
0x925 CALL
0x926 SWAP4
0x927 POP
0x928 POP
0x929 POP
0x92a POP
0x92b ISZERO
0x92c PUSH2 0x990
0x92f JUMPI
---
0x8fc: JUMPDEST 
0x8fe: V895 = 0x1
0x900: V896 = S[0x1]
0x901: V897 = 0x1
0x903: V898 = 0xa0
0x905: V899 = 0x2
0x907: V900 = EXP 0x2 0xa0
0x908: V901 = SUB 0x10000000000000000000000000000000000000000 0x1
0x909: V902 = ADDRESS
0x90b: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff V902
0x90c: V904 = BALANCE V903
0x90e: V905 = AND V896 0xffffffffffffffffffffffffffffffffffffffff
0x910: V906 = ISZERO V904
0x911: V907 = 0x8fc
0x914: V908 = MUL 0x8fc V906
0x916: V909 = 0x40
0x918: V910 = M[0x40]
0x919: V911 = 0x0
0x91b: V912 = 0x40
0x91d: V913 = M[0x40]
0x920: V914 = SUB V910 V913
0x925: V915 = CALL V908 V905 V904 V913 V914 V913 0x0
0x92b: V916 = ISZERO V915
0x92c: V917 = 0x990
0x92f: JUMPI 0x990 V916
---
Entry stack: [V13, 0x330, 0x0]
Stack pops: 1
Stack additions: [V904]
Exit stack: [V13, 0x330, V904]

================================

Block 0x930
[0x930:0x98f]
---
Predecessors: [0x8fc]
Successors: [0x990]
---
0x930 PUSH1 0x1
0x932 SLOAD
0x933 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x954 SWAP1
0x955 PUSH1 0x1
0x957 PUSH1 0xa0
0x959 PUSH1 0x2
0x95b EXP
0x95c SUB
0x95d AND
0x95e DUP3
0x95f PUSH1 0x0
0x961 PUSH1 0x40
0x963 MLOAD
0x964 PUSH1 0x1
0x966 PUSH1 0xa0
0x968 PUSH1 0x2
0x96a EXP
0x96b SUB
0x96c SWAP1
0x96d SWAP4
0x96e AND
0x96f DUP4
0x970 MSTORE
0x971 PUSH1 0x20
0x973 DUP4
0x974 ADD
0x975 SWAP2
0x976 SWAP1
0x977 SWAP2
0x978 MSTORE
0x979 ISZERO
0x97a ISZERO
0x97b PUSH1 0x40
0x97d DUP1
0x97e DUP4
0x97f ADD
0x980 SWAP2
0x981 SWAP1
0x982 SWAP2
0x983 MSTORE
0x984 PUSH1 0x60
0x986 SWAP1
0x987 SWAP2
0x988 ADD
0x989 SWAP1
0x98a MLOAD
0x98b DUP1
0x98c SWAP2
0x98d SUB
0x98e SWAP1
0x98f LOG1
---
0x930: V918 = 0x1
0x932: V919 = S[0x1]
0x933: V920 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x955: V921 = 0x1
0x957: V922 = 0xa0
0x959: V923 = 0x2
0x95b: V924 = EXP 0x2 0xa0
0x95c: V925 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95d: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V919
0x95f: V927 = 0x0
0x961: V928 = 0x40
0x963: V929 = M[0x40]
0x964: V930 = 0x1
0x966: V931 = 0xa0
0x968: V932 = 0x2
0x96a: V933 = EXP 0x2 0xa0
0x96b: V934 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96e: V935 = AND V926 0xffffffffffffffffffffffffffffffffffffffff
0x970: M[V929] = V935
0x971: V936 = 0x20
0x974: V937 = ADD V929 0x20
0x978: M[V937] = V904
0x979: V938 = ISZERO 0x0
0x97a: V939 = ISZERO 0x1
0x97b: V940 = 0x40
0x97f: V941 = ADD V929 0x40
0x983: M[V941] = 0x0
0x984: V942 = 0x60
0x988: V943 = ADD V929 0x60
0x98a: V944 = M[0x40]
0x98d: V945 = SUB V943 V944
0x98f: LOG V944 V945 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V13, 0x330, V904]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x330, V904]

================================

Block 0x990
[0x990:0x9a4]
---
Predecessors: [0x8fc, 0x930]
Successors: [0x6a3]
---
0x990 JUMPDEST
0x991 PUSH1 0x1
0x993 SLOAD
0x994 PUSH2 0x9a5
0x997 SWAP1
0x998 PUSH1 0x1
0x99a PUSH1 0xa0
0x99c PUSH1 0x2
0x99e EXP
0x99f SUB
0x9a0 AND
0x9a1 PUSH2 0x6a3
0x9a4 JUMP
---
0x990: JUMPDEST 
0x991: V946 = 0x1
0x993: V947 = S[0x1]
0x994: V948 = 0x9a5
0x998: V949 = 0x1
0x99a: V950 = 0xa0
0x99c: V951 = 0x2
0x99e: V952 = EXP 0x2 0xa0
0x99f: V953 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a0: V954 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0x9a1: V955 = 0x6a3
0x9a4: JUMP 0x6a3
---
Entry stack: [V13, 0x330, V904]
Stack pops: 0
Stack additions: [0x9a5, V954]
Exit stack: [V13, 0x330, V904, 0x9a5, V954]

================================

Block 0x9a5
[0x9a5:0x9b4]
---
Predecessors: [0x797]
Successors: [0x330]
---
0x9a5 JUMPDEST
0x9a6 POP
0x9a7 PUSH1 0x9
0x9a9 DUP1
0x9aa SLOAD
0x9ab PUSH1 0xff
0x9ad NOT
0x9ae AND
0x9af PUSH1 0x1
0x9b1 OR
0x9b2 SWAP1
0x9b3 SSTORE
0x9b4 JUMP
---
0x9a5: JUMPDEST 
0x9a7: V956 = 0x9
0x9aa: V957 = S[0x9]
0x9ab: V958 = 0xff
0x9ad: V959 = NOT 0xff
0x9ae: V960 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V957
0x9af: V961 = 0x1
0x9b1: V962 = OR 0x1 V960
0x9b3: S[0x9] = V962
0x9b4: JUMP 0x330
---
Entry stack: [V13, 0x330, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x9b5
[0x9b5:0x9c2]
---
Predecessors: [0x478]
Successors: [0x9c3, 0x9cd]
---
0x9b5 JUMPDEST
0x9b6 PUSH1 0x0
0x9b8 TIMESTAMP
0x9b9 PUSH1 0x3
0x9bb SLOAD
0x9bc GT
0x9bd DUP1
0x9be ISZERO
0x9bf PUSH2 0x9cd
0x9c2 JUMPI
---
0x9b5: JUMPDEST 
0x9b6: V963 = 0x0
0x9b8: V964 = TIMESTAMP
0x9b9: V965 = 0x3
0x9bb: V966 = S[0x3]
0x9bc: V967 = GT V966 V964
0x9be: V968 = ISZERO V967
0x9bf: V969 = 0x9cd
0x9c2: JUMPI 0x9cd V968
---
Entry stack: [V13, 0x2f3]
Stack pops: 0
Stack additions: [0x0, V967]
Exit stack: [V13, 0x2f3, 0x0, V967]

================================

Block 0x9c3
[0x9c3:0x9cc]
---
Predecessors: [0x9b5]
Successors: [0x9cd]
---
0x9c3 POP
0x9c4 PUSH1 0x3c
0x9c6 TIMESTAMP
0x9c7 PUSH1 0x3
0x9c9 SLOAD
0x9ca SUB
0x9cb LT
0x9cc ISZERO
---
0x9c4: V970 = 0x3c
0x9c6: V971 = TIMESTAMP
0x9c7: V972 = 0x3
0x9c9: V973 = S[0x3]
0x9ca: V974 = SUB V973 V971
0x9cb: V975 = LT V974 0x3c
0x9cc: V976 = ISZERO V975
---
Entry stack: [V13, 0x2f3, 0x0, V967]
Stack pops: 1
Stack additions: [V976]
Exit stack: [V13, 0x2f3, 0x0, V976]

================================

Block 0x9cd
[0x9cd:0x9d1]
---
Predecessors: [0x9b5, 0x9c3]
Successors: [0x9d2, 0x9d8]
---
0x9cd JUMPDEST
0x9ce PUSH2 0x9d8
0x9d1 JUMPI
---
0x9cd: JUMPDEST 
0x9ce: V977 = 0x9d8
0x9d1: JUMPI 0x9d8 S0
---
Entry stack: [V13, 0x2f3, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x2f3, 0x0]

================================

Block 0x9d2
[0x9d2:0x9d7]
---
Predecessors: [0x9cd]
Successors: [0x9e3]
---
0x9d2 PUSH1 0x0
0x9d4 PUSH2 0x9e3
0x9d7 JUMP
---
0x9d2: V978 = 0x0
0x9d4: V979 = 0x9e3
0x9d7: JUMP 0x9e3
---
Entry stack: [V13, 0x2f3, 0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x2f3, 0x0, 0x0]

================================

Block 0x9d8
[0x9d8:0x9e2]
---
Predecessors: [0x9cd]
Successors: [0x9e3]
---
0x9d8 JUMPDEST
0x9d9 PUSH1 0x3
0x9db SLOAD
0x9dc PUSH1 0x3c
0x9de SWAP1
0x9df TIMESTAMP
0x9e0 SWAP1
0x9e1 SUB
0x9e2 DIV
---
0x9d8: JUMPDEST 
0x9d9: V980 = 0x3
0x9db: V981 = S[0x3]
0x9dc: V982 = 0x3c
0x9df: V983 = TIMESTAMP
0x9e1: V984 = SUB V981 V983
0x9e2: V985 = DIV V984 0x3c
---
Entry stack: [V13, 0x2f3, 0x0]
Stack pops: 0
Stack additions: [V985]
Exit stack: [V13, 0x2f3, 0x0, V985]

================================

Block 0x9e3
[0x9e3:0x9e7]
---
Predecessors: [0x9d2, 0x9d8]
Successors: [0x2f3]
---
0x9e3 JUMPDEST
0x9e4 SWAP1
0x9e5 POP
0x9e6 SWAP1
0x9e7 JUMP
---
0x9e3: JUMPDEST 
0x9e7: JUMP 0x2f3
---
Entry stack: [V13, 0x2f3, 0x0, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V13, S0]

================================

Block 0x9e8
[0x9e8:0x9fe]
---
Predecessors: [0x48b]
Successors: [0x9ff, 0xa03]
---
0x9e8 JUMPDEST
0x9e9 PUSH1 0x0
0x9eb SLOAD
0x9ec CALLER
0x9ed PUSH1 0x1
0x9ef PUSH1 0xa0
0x9f1 PUSH1 0x2
0x9f3 EXP
0x9f4 SUB
0x9f5 SWAP1
0x9f6 DUP2
0x9f7 AND
0x9f8 SWAP2
0x9f9 AND
0x9fa EQ
0x9fb PUSH2 0xa03
0x9fe JUMPI
---
0x9e8: JUMPDEST 
0x9e9: V986 = 0x0
0x9eb: V987 = S[0x0]
0x9ec: V988 = CALLER
0x9ed: V989 = 0x1
0x9ef: V990 = 0xa0
0x9f1: V991 = 0x2
0x9f3: V992 = EXP 0x2 0xa0
0x9f4: V993 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f7: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V988
0x9f9: V995 = AND V987 0xffffffffffffffffffffffffffffffffffffffff
0x9fa: V996 = EQ V995 V994
0x9fb: V997 = 0xa03
0x9fe: JUMPI 0xa03 V996
---
Entry stack: [V13, 0x330, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V436]

================================

Block 0x9ff
[0x9ff:0xa02]
---
Predecessors: [0x9e8]
Successors: []
---
0x9ff PUSH1 0x0
0xa01 DUP1
0xa02 REVERT
---
0x9ff: V998 = 0x0
0xa02: REVERT 0x0 0x0
---
Entry stack: [V13, 0x330, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, V436]

================================

Block 0xa03
[0xa03:0xa31]
---
Predecessors: [0x9e8]
Successors: [0x330]
---
0xa03 JUMPDEST
0xa04 PUSH1 0x0
0xa06 DUP1
0xa07 SLOAD
0xa08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1d NOT
0xa1e AND
0xa1f PUSH1 0x1
0xa21 PUSH1 0xa0
0xa23 PUSH1 0x2
0xa25 EXP
0xa26 SUB
0xa27 SWAP3
0xa28 SWAP1
0xa29 SWAP3
0xa2a AND
0xa2b SWAP2
0xa2c SWAP1
0xa2d SWAP2
0xa2e OR
0xa2f SWAP1
0xa30 SSTORE
0xa31 JUMP
---
0xa03: JUMPDEST 
0xa04: V999 = 0x0
0xa07: V1000 = S[0x0]
0xa08: V1001 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1d: V1002 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa1e: V1003 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1000
0xa1f: V1004 = 0x1
0xa21: V1005 = 0xa0
0xa23: V1006 = 0x2
0xa25: V1007 = EXP 0x2 0xa0
0xa26: V1008 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2a: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0xa2e: V1010 = OR V1009 V1003
0xa30: S[0x0] = V1010
0xa31: JUMP 0x330
---
Entry stack: [V13, 0x330, V436]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xa32
[0xa32:0xa49]
---
Predecessors: [0x4aa, 0x7e6]
Successors: [0xa4a, 0xa4e]
---
0xa32 JUMPDEST
0xa33 PUSH1 0x0
0xa35 DUP1
0xa36 SLOAD
0xa37 CALLER
0xa38 PUSH1 0x1
0xa3a PUSH1 0xa0
0xa3c PUSH1 0x2
0xa3e EXP
0xa3f SUB
0xa40 SWAP1
0xa41 DUP2
0xa42 AND
0xa43 SWAP2
0xa44 AND
0xa45 EQ
0xa46 PUSH2 0xa4e
0xa49 JUMPI
---
0xa32: JUMPDEST 
0xa33: V1011 = 0x0
0xa36: V1012 = S[0x0]
0xa37: V1013 = CALLER
0xa38: V1014 = 0x1
0xa3a: V1015 = 0xa0
0xa3c: V1016 = 0x2
0xa3e: V1017 = EXP 0x2 0xa0
0xa3f: V1018 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa42: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V1013
0xa44: V1020 = AND V1012 0xffffffffffffffffffffffffffffffffffffffff
0xa45: V1021 = EQ V1020 V1019
0xa46: V1022 = 0xa4e
0xa49: JUMPI 0xa4e V1021
---
Entry stack: [V13, S2, {0x330, 0x7fb}, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, S2, {0x330, 0x7fb}, S0, 0x0]

================================

Block 0xa4a
[0xa4a:0xa4d]
---
Predecessors: [0xa32]
Successors: []
---
0xa4a PUSH1 0x0
0xa4c DUP1
0xa4d REVERT
---
0xa4a: V1023 = 0x0
0xa4d: REVERT 0x0 0x0
---
Entry stack: [V13, S3, {0x330, 0x7fb}, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S3, {0x330, 0x7fb}, S1, 0x0]

================================

Block 0xa4e
[0xa4e:0xa99]
---
Predecessors: [0xa32]
Successors: [0xa9a, 0xa9e]
---
0xa4e JUMPDEST
0xa4f PUSH1 0x7
0xa51 SLOAD
0xa52 PUSH1 0x1
0xa54 PUSH1 0xa0
0xa56 PUSH1 0x2
0xa58 EXP
0xa59 SUB
0xa5a AND
0xa5b PUSH4 0x70a08231
0xa60 ADDRESS
0xa61 PUSH1 0x40
0xa63 MLOAD
0xa64 PUSH1 0xe0
0xa66 PUSH1 0x2
0xa68 EXP
0xa69 PUSH4 0xffffffff
0xa6e DUP5
0xa6f AND
0xa70 MUL
0xa71 DUP2
0xa72 MSTORE
0xa73 PUSH1 0x1
0xa75 PUSH1 0xa0
0xa77 PUSH1 0x2
0xa79 EXP
0xa7a SUB
0xa7b SWAP1
0xa7c SWAP2
0xa7d AND
0xa7e PUSH1 0x4
0xa80 DUP3
0xa81 ADD
0xa82 MSTORE
0xa83 PUSH1 0x24
0xa85 ADD
0xa86 PUSH1 0x20
0xa88 PUSH1 0x40
0xa8a MLOAD
0xa8b DUP1
0xa8c DUP4
0xa8d SUB
0xa8e DUP2
0xa8f PUSH1 0x0
0xa91 DUP8
0xa92 DUP1
0xa93 EXTCODESIZE
0xa94 ISZERO
0xa95 ISZERO
0xa96 PUSH2 0xa9e
0xa99 JUMPI
---
0xa4e: JUMPDEST 
0xa4f: V1024 = 0x7
0xa51: V1025 = S[0x7]
0xa52: V1026 = 0x1
0xa54: V1027 = 0xa0
0xa56: V1028 = 0x2
0xa58: V1029 = EXP 0x2 0xa0
0xa59: V1030 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5a: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff V1025
0xa5b: V1032 = 0x70a08231
0xa60: V1033 = ADDRESS
0xa61: V1034 = 0x40
0xa63: V1035 = M[0x40]
0xa64: V1036 = 0xe0
0xa66: V1037 = 0x2
0xa68: V1038 = EXP 0x2 0xe0
0xa69: V1039 = 0xffffffff
0xa6f: V1040 = AND 0x70a08231 0xffffffff
0xa70: V1041 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xa72: M[V1035] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa73: V1042 = 0x1
0xa75: V1043 = 0xa0
0xa77: V1044 = 0x2
0xa79: V1045 = EXP 0x2 0xa0
0xa7a: V1046 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7d: V1047 = AND V1033 0xffffffffffffffffffffffffffffffffffffffff
0xa7e: V1048 = 0x4
0xa81: V1049 = ADD V1035 0x4
0xa82: M[V1049] = V1047
0xa83: V1050 = 0x24
0xa85: V1051 = ADD 0x24 V1035
0xa86: V1052 = 0x20
0xa88: V1053 = 0x40
0xa8a: V1054 = M[0x40]
0xa8d: V1055 = SUB V1051 V1054
0xa8f: V1056 = 0x0
0xa93: V1057 = EXTCODESIZE V1031
0xa94: V1058 = ISZERO V1057
0xa95: V1059 = ISZERO V1058
0xa96: V1060 = 0xa9e
0xa99: JUMPI 0xa9e V1059
---
Entry stack: [V13, S3, {0x330, 0x7fb}, S1, 0x0]
Stack pops: 0
Stack additions: [V1031, 0x70a08231, V1051, 0x20, V1054, V1055, V1054, 0x0, V1031]
Exit stack: [V13, S3, {0x330, 0x7fb}, S1, 0x0, V1031, 0x70a08231, V1051, 0x20, V1054, V1055, V1054, 0x0, V1031]

================================

Block 0xa9a
[0xa9a:0xa9d]
---
Predecessors: [0xa4e]
Successors: []
---
0xa9a PUSH1 0x0
0xa9c DUP1
0xa9d REVERT
---
0xa9a: V1061 = 0x0
0xa9d: REVERT 0x0 0x0
---
Entry stack: [V13, S12, {0x330, 0x7fb}, S10, 0x0, V1031, 0x70a08231, V1051, 0x20, V1054, V1055, V1054, 0x0, V1031]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, {0x330, 0x7fb}, S10, 0x0, V1031, 0x70a08231, V1051, 0x20, V1054, V1055, V1054, 0x0, V1031]

================================

Block 0xa9e
[0xa9e:0xaa6]
---
Predecessors: [0xa4e]
Successors: [0xaa7, 0xaab]
---
0xa9e JUMPDEST
0xa9f GAS
0xaa0 CALL
0xaa1 ISZERO
0xaa2 ISZERO
0xaa3 PUSH2 0xaab
0xaa6 JUMPI
---
0xa9e: JUMPDEST 
0xa9f: V1062 = GAS
0xaa0: V1063 = CALL V1062 V1031 0x0 V1054 V1055 V1054 0x20
0xaa1: V1064 = ISZERO V1063
0xaa2: V1065 = ISZERO V1064
0xaa3: V1066 = 0xaab
0xaa6: JUMPI 0xaab V1065
---
Entry stack: [V13, S12, {0x330, 0x7fb}, S10, 0x0, V1031, 0x70a08231, V1051, 0x20, V1054, V1055, V1054, 0x0, V1031]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S12, {0x330, 0x7fb}, S10, 0x0, V1031, 0x70a08231, V1051]

================================

Block 0xaa7
[0xaa7:0xaaa]
---
Predecessors: [0xa9e]
Successors: []
---
0xaa7 PUSH1 0x0
0xaa9 DUP1
0xaaa REVERT
---
0xaa7: V1067 = 0x0
0xaaa: REVERT 0x0 0x0
---
Entry stack: [V13, S6, {0x330, 0x7fb}, S4, 0x0, V1031, 0x70a08231, V1051]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, {0x330, 0x7fb}, S4, 0x0, V1031, 0x70a08231, V1051]

================================

Block 0xaab
[0xaab:0xabc]
---
Predecessors: [0xa9e]
Successors: [0xabd, 0xac1]
---
0xaab JUMPDEST
0xaac POP
0xaad POP
0xaae POP
0xaaf PUSH1 0x40
0xab1 MLOAD
0xab2 DUP1
0xab3 MLOAD
0xab4 SWAP2
0xab5 POP
0xab6 POP
0xab7 DUP1
0xab8 ISZERO
0xab9 PUSH2 0xac1
0xabc JUMPI
---
0xaab: JUMPDEST 
0xaaf: V1068 = 0x40
0xab1: V1069 = M[0x40]
0xab3: V1070 = M[V1069]
0xab8: V1071 = ISZERO V1070
0xab9: V1072 = 0xac1
0xabc: JUMPI 0xac1 V1071
---
Entry stack: [V13, S6, {0x330, 0x7fb}, S4, 0x0, V1031, 0x70a08231, V1051]
Stack pops: 4
Stack additions: [V1070]
Exit stack: [V13, S6, {0x330, 0x7fb}, S4, V1070]

================================

Block 0xabd
[0xabd:0xac0]
---
Predecessors: [0xaab]
Successors: []
---
0xabd PUSH1 0x0
0xabf DUP1
0xac0 REVERT
---
0xabd: V1073 = 0x0
0xac0: REVERT 0x0 0x0
---
Entry stack: [V13, S3, {0x330, 0x7fb}, S1, V1070]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S3, {0x330, 0x7fb}, S1, V1070]

================================

Block 0xac1
[0xac1:0xacc]
---
Predecessors: [0xaab]
Successors: []
---
0xac1 JUMPDEST
0xac2 DUP2
0xac3 PUSH1 0x1
0xac5 PUSH1 0xa0
0xac7 PUSH1 0x2
0xac9 EXP
0xaca SUB
0xacb AND
0xacc SELFDESTRUCT
---
0xac1: JUMPDEST 
0xac3: V1074 = 0x1
0xac5: V1075 = 0xa0
0xac7: V1076 = 0x2
0xac9: V1077 = EXP 0x2 0xa0
0xaca: V1078 = SUB 0x10000000000000000000000000000000000000000 0x1
0xacb: V1079 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xacc: SELFDESTRUCT V1079
---
Entry stack: [V13, S3, {0x330, 0x7fb}, S1, V1070]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S3, {0x330, 0x7fb}, S1, V1070]

================================

Block 0xacd
[0xacd:0xad7]
---
Predecessors: [0x5f1, 0x60a]
Successors: [0xad8, 0xad9]
---
0xacd JUMPDEST
0xace PUSH1 0x0
0xad0 DUP3
0xad1 DUP3
0xad2 GT
0xad3 ISZERO
0xad4 PUSH2 0xad9
0xad7 JUMPI
---
0xacd: JUMPDEST 
0xace: V1080 = 0x0
0xad2: V1081 = GT S0 S1
0xad3: V1082 = ISZERO V1081
0xad4: V1083 = 0xad9
0xad7: JUMPI 0xad9 V1082
---
Entry stack: [V13, 0x330, S9, S8, S7, S6, S5, S4, S3, {0x603, 0x632}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, 0x330, S9, S8, S7, S6, S5, S4, S3, {0x603, 0x632}, S1, S0, 0x0]

================================

Block 0xad8
[0xad8:0xad8]
---
Predecessors: [0xacd]
Successors: []
---
0xad8 INVALID
---
0xad8: INVALID 
---
Entry stack: [V13, 0x330, S10, S9, S8, S7, S6, S5, S4, {0x603, 0x632}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x330, S10, S9, S8, S7, S6, S5, S4, {0x603, 0x632}, S2, S1, 0x0]

================================

Block 0xad9
[0xad9:0xade]
---
Predecessors: [0xacd]
Successors: [0x603, 0x632]
---
0xad9 JUMPDEST
0xada POP
0xadb SWAP1
0xadc SUB
0xadd SWAP1
0xade JUMP
---
0xad9: JUMPDEST 
0xadc: V1084 = SUB S2 S1
0xade: JUMP {0x603, 0x632}
---
Entry stack: [V13, 0x330, S10, S9, S8, S7, S6, S5, S4, {0x603, 0x632}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1084]
Exit stack: [V13, 0x330, S10, S9, S8, S7, S6, S5, S4, V1084]

================================

Block 0xadf
[0xadf:0xb0a]
---
Predecessors: []
Successors: []
---
0xadf STOP
0xae0 LOG1
0xae1 PUSH6 0x627a7a723058
0xae8 SHA3
0xae9 PUSH32 0x7abba6f25df152145bc6ae99bd4576bddf8bd9c04a69de8a84e3085c92589800
0xb0a MISSING 0x29
---
0xadf: STOP 
0xae0: LOG S0 S1 S2
0xae1: V1085 = 0x627a7a723058
0xae8: V1086 = SHA3 0x627a7a723058 S3
0xae9: V1087 = 0x7abba6f25df152145bc6ae99bd4576bddf8bd9c04a69de8a84e3085c92589800
0xb0a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x7abba6f25df152145bc6ae99bd4576bddf8bd9c04a69de8a84e3085c92589800, V1086]
Exit stack: []

================================

Function 0:
Public function signature: 0x23548b8b
Entry block: 0x2e0
Exit block: 0x2f3
Body: 0x2e0, 0x2e7, 0x2eb, 0x2f3, 0x4fa

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x305
Exit block: 0x2f3
Body: 0x2f3, 0x305, 0x30c, 0x310, 0x500

Function 2:
Public function signature: 0x332d4357
Entry block: 0x318
Exit block: 0x330
Body: 0x318, 0x31f, 0x323, 0x330, 0x506, 0x51d, 0x521

Function 3:
Public function signature: 0x34ec740a
Entry block: 0x332
Exit block: 0x67e
Body: 0x330, 0x332, 0x339, 0x33d, 0x534, 0x54c, 0x550, 0x55d, 0x561, 0x5ad, 0x5b1, 0x5ba, 0x5be, 0x5d4, 0x5d9, 0x5e0, 0x5e4, 0x5ed, 0x5f1, 0x603, 0x60a, 0x632, 0x671, 0x675, 0x67e, 0x682, 0x686

Function 4:
Public function signature: 0x38af3eed
Entry block: 0x348
Exit block: 0x35b
Body: 0x348, 0x34f, 0x353, 0x35b, 0x694

Function 5:
Public function signature: 0x5affbd97
Entry block: 0x377
Exit block: 0x330
Body: 0x330, 0x377, 0x37e, 0x382

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x396
Exit block: 0x35b
Body: 0x35b, 0x396, 0x39d, 0x3a1, 0x79b

Function 7:
Public function signature: 0x70a08231
Entry block: 0x3a9
Exit block: 0x2f3
Body: 0x2f3, 0x3a9, 0x3b0, 0x3b4, 0x7aa

Function 8:
Public function signature: 0x70f48d43
Entry block: 0x3c8
Exit block: 0x3db
Body: 0x3c8, 0x3cf, 0x3d3, 0x3db, 0x7bc

Function 9:
Public function signature: 0x7b3e5e7b
Entry block: 0x3ef
Exit block: 0x2f3
Body: 0x2f3, 0x3ef, 0x3f6, 0x3fa, 0x7c5

Function 10:
Public function signature: 0x83197ef0
Entry block: 0x402
Exit block: 0xac1
Body: 0x402, 0x409, 0x40d, 0x7cb, 0x7e2, 0x7e6, 0xa32, 0xa4a, 0xa4e, 0xa9a, 0xa9e, 0xaa7, 0xaab, 0xabd, 0xac1

Function 11:
Public function signature: 0x8486a79a
Entry block: 0x415
Exit block: 0x2f3
Body: 0x2f3, 0x415, 0x41c, 0x420, 0x7fd

Function 12:
Public function signature: 0x89285fa1
Entry block: 0x428
Exit block: 0x330
Body: 0x330, 0x428, 0x42f, 0x433, 0x803, 0x81b, 0x81f, 0x834, 0x838, 0x864

Function 13:
Public function signature: 0xa035b1fe
Entry block: 0x447
Exit block: 0x2f3
Body: 0x2f3, 0x447, 0x44e, 0x452, 0x8bb

Function 14:
Public function signature: 0xee55efee
Entry block: 0x45a
Exit block: 0x330
Body: 0x330, 0x45a, 0x461, 0x465, 0x8c1, 0x8d9, 0x8dd, 0x8e8, 0x8ec, 0x8f8, 0x8fc, 0x930, 0x990, 0x9a5

Function 15:
Public function signature: 0xefb98bcf
Entry block: 0x46d
Exit block: 0x2f3
Body: 0x2f3, 0x46d, 0x474, 0x478, 0x9b5, 0x9c3, 0x9cd, 0x9d2, 0x9d8, 0x9e3

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x480
Exit block: 0x330
Body: 0x330, 0x480, 0x487, 0x48b, 0x9e8, 0x9ff, 0xa03

Function 17:
Public function signature: 0xf5074f41
Entry block: 0x49f
Exit block: 0xac1
Body: 0x49f, 0x4a6, 0x4aa, 0xa32, 0xa4a, 0xa4e, 0xa9a, 0xa9e, 0xaa7, 0xaab, 0xabd, 0xac1

Function 18:
Public fallback function
Entry block: 0xe2
Exit block: 0x281
Body: 0xe2, 0x281, 0x4be, 0x4c8, 0x4cf, 0x4de, 0x4df, 0x4e6

Function 19:
Private function
Entry block: 0x6a3
Exit block: 0x797
Body: 0x6a3, 0x6bf, 0x70f, 0x71c, 0x731, 0x786, 0x793, 0x797

Function 20:
Private function
Entry block: 0x4ed
Exit block: 0x4e7
Body: 0xfb, 0x10e, 0x11d, 0x146, 0x154, 0x1a6, 0x1b3, 0x1ca, 0x1f3, 0x4e7, 0x4ed

Function 21:
Private function
Entry block: 0xacd
Exit block: 0xad9
Body: 0xacd, 0xad9

