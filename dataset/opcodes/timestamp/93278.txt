Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xcd]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xcd
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xcd
0xa: JUMPI 0xcd V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1e9]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x116e8726
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1e9
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x116e8726
0x39: V12 = EQ V10 0x116e8726
0x3a: V13 = 0x1e9
0x3d: JUMPI 0x1e9 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x215]
---
0x3e DUP1
0x3f PUSH4 0x25568fd7
0x44 EQ
0x45 PUSH2 0x215
0x48 JUMPI
---
0x3f: V14 = 0x25568fd7
0x44: V15 = EQ 0x25568fd7 V10
0x45: V16 = 0x215
0x48: JUMPI 0x215 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x233]
---
0x49 DUP1
0x4a PUSH4 0x2c4bca2c
0x4f EQ
0x50 PUSH2 0x233
0x53 JUMPI
---
0x4a: V17 = 0x2c4bca2c
0x4f: V18 = EQ 0x2c4bca2c V10
0x50: V19 = 0x233
0x53: JUMPI 0x233 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x255]
---
0x54 DUP1
0x55 PUSH4 0x3ccfd60b
0x5a EQ
0x5b PUSH2 0x255
0x5e JUMPI
---
0x55: V20 = 0x3ccfd60b
0x5a: V21 = EQ 0x3ccfd60b V10
0x5b: V22 = 0x255
0x5e: JUMPI 0x255 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x267]
---
0x5f DUP1
0x60 PUSH4 0x3fc6d75a
0x65 EQ
0x66 PUSH2 0x267
0x69 JUMPI
---
0x60: V23 = 0x3fc6d75a
0x65: V24 = EQ 0x3fc6d75a V10
0x66: V25 = 0x267
0x69: JUMPI 0x267 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x289]
---
0x6a DUP1
0x6b PUSH4 0x53bd755a
0x70 EQ
0x71 PUSH2 0x289
0x74 JUMPI
---
0x6b: V26 = 0x53bd755a
0x70: V27 = EQ 0x53bd755a V10
0x71: V28 = 0x289
0x74: JUMPI 0x289 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x29e]
---
0x75 DUP1
0x76 PUSH4 0x6f5e7398
0x7b EQ
0x7c PUSH2 0x29e
0x7f JUMPI
---
0x76: V29 = 0x6f5e7398
0x7b: V30 = EQ 0x6f5e7398 V10
0x7c: V31 = 0x29e
0x7f: JUMPI 0x29e V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2ca]
---
0x80 DUP1
0x81 PUSH4 0x7252bbf2
0x86 EQ
0x87 PUSH2 0x2ca
0x8a JUMPI
---
0x81: V32 = 0x7252bbf2
0x86: V33 = EQ 0x7252bbf2 V10
0x87: V34 = 0x2ca
0x8a: JUMPI 0x2ca V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2f8]
---
0x8b DUP1
0x8c PUSH4 0x7750b2b1
0x91 EQ
0x92 PUSH2 0x2f8
0x95 JUMPI
---
0x8c: V35 = 0x7750b2b1
0x91: V36 = EQ 0x7750b2b1 V10
0x92: V37 = 0x2f8
0x95: JUMPI 0x2f8 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x30d]
---
0x96 DUP1
0x97 PUSH4 0xa7b4b60f
0x9c EQ
0x9d PUSH2 0x30d
0xa0 JUMPI
---
0x97: V38 = 0xa7b4b60f
0x9c: V39 = EQ 0xa7b4b60f V10
0x9d: V40 = 0x30d
0xa0: JUMPI 0x30d V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x372]
---
0xa1 DUP1
0xa2 PUSH4 0xb9e7afd1
0xa7 EQ
0xa8 PUSH2 0x372
0xab JUMPI
---
0xa2: V41 = 0xb9e7afd1
0xa7: V42 = EQ 0xb9e7afd1 V10
0xa8: V43 = 0x372
0xab: JUMPI 0x372 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x390]
---
0xac DUP1
0xad PUSH4 0xbf6537a0
0xb2 EQ
0xb3 PUSH2 0x390
0xb6 JUMPI
---
0xad: V44 = 0xbf6537a0
0xb2: V45 = EQ 0xbf6537a0 V10
0xb3: V46 = 0x390
0xb6: JUMPI 0x390 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x3bc]
---
0xb7 DUP1
0xb8 PUSH4 0xc90755e2
0xbd EQ
0xbe PUSH2 0x3bc
0xc1 JUMPI
---
0xb8: V47 = 0xc90755e2
0xbd: V48 = EQ 0xc90755e2 V10
0xbe: V49 = 0x3bc
0xc1: JUMPI 0x3bc V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x3e8]
---
0xc2 DUP1
0xc3 PUSH4 0xd0b01e68
0xc8 EQ
0xc9 PUSH2 0x3e8
0xcc JUMPI
---
0xc3: V50 = 0xd0b01e68
0xc8: V51 = EQ 0xd0b01e68 V10
0xc9: V52 = 0x3e8
0xcc: JUMPI 0x3e8 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0x0, 0xc2]
Successors: [0xd1]
---
0xcd JUMPDEST
0xce PUSH2 0x1e7
---
0xcd: JUMPDEST 
0xce: V53 = 0x1e7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7]
Exit stack: [V10, 0x1e7]

================================

Block 0xd1
[0xd1:0xde]
---
Predecessors: [0xcd]
Successors: [0xdf, 0xe4]
---
0xd1 JUMPDEST
0xd2 PUSH1 0x3
0xd4 SLOAD
0xd5 PUSH1 0x0
0xd7 SWAP1
0xd8 TIMESTAMP
0xd9 GT
0xda ISZERO
0xdb PUSH2 0xe4
0xde JUMPI
---
0xd1: JUMPDEST 
0xd2: V54 = 0x3
0xd4: V55 = S[0x3]
0xd5: V56 = 0x0
0xd8: V57 = TIMESTAMP
0xd9: V58 = GT V57 V55
0xda: V59 = ISZERO V58
0xdb: V60 = 0xe4
0xde: JUMPI 0xe4 V59
---
Entry stack: [V10, 0x1e7]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1e7, 0x0]

================================

Block 0xdf
[0xdf:0xe3]
---
Predecessors: [0xd1]
Successors: []
---
0xdf PUSH1 0x0
0xe1 PUSH1 0x0
0xe3 REVERT
---
0xdf: V61 = 0x0
0xe1: V62 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, 0x0]

================================

Block 0xe4
[0xe4:0x128]
---
Predecessors: [0xd1]
Successors: [0x129, 0x12a]
---
0xe4 JUMPDEST
0xe5 POP
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee CALLER
0xef DUP2
0xf0 DUP2
0xf1 AND
0xf2 PUSH1 0x0
0xf4 SWAP1
0xf5 DUP2
0xf6 MSTORE
0xf7 PUSH1 0x6
0xf9 PUSH1 0x20
0xfb MSTORE
0xfc PUSH1 0x40
0xfe SWAP1
0xff SHA3
0x100 DUP1
0x101 SLOAD
0x102 CALLVALUE
0x103 SWAP1
0x104 DUP2
0x105 ADD
0x106 SWAP1
0x107 SWAP2
0x108 SSTORE
0x109 PUSH1 0x7
0x10b DUP1
0x10c SLOAD
0x10d DUP3
0x10e ADD
0x10f SWAP1
0x110 SSTORE
0x111 PUSH1 0x5
0x113 SLOAD
0x114 PUSH1 0x4
0x116 SLOAD
0x117 SWAP2
0x118 SWAP4
0x119 AND
0x11a SWAP2
0x11b PUSH4 0xa9059cbb
0x120 SWAP2
0x121 DUP5
0x122 DUP2
0x123 ISZERO
0x124 ISZERO
0x125 PUSH2 0x12a
0x128 JUMPI
---
0xe4: JUMPDEST 
0xe6: V63 = 0x1
0xe8: V64 = 0xa0
0xea: V65 = 0x2
0xec: V66 = EXP 0x2 0xa0
0xed: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V68 = CALLER
0xf1: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V70 = 0x0
0xf6: M[0x0] = V69
0xf7: V71 = 0x6
0xf9: V72 = 0x20
0xfb: M[0x20] = 0x6
0xfc: V73 = 0x40
0xff: V74 = SHA3 0x0 0x40
0x101: V75 = S[V74]
0x102: V76 = CALLVALUE
0x105: V77 = ADD V76 V75
0x108: S[V74] = V77
0x109: V78 = 0x7
0x10c: V79 = S[0x7]
0x10e: V80 = ADD V76 V79
0x110: S[0x7] = V80
0x111: V81 = 0x5
0x113: V82 = S[0x5]
0x114: V83 = 0x4
0x116: V84 = S[0x4]
0x119: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x11b: V86 = 0xa9059cbb
0x123: V87 = ISZERO V84
0x124: V88 = ISZERO V87
0x125: V89 = 0x12a
0x128: JUMPI 0x12a V88
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 1
Stack additions: [V76, V85, 0xa9059cbb, V68, V84, V76]
Exit stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V68, V84, V76]

================================

Block 0x129
[0x129:0x129]
---
Predecessors: [0xe4]
Successors: []
---
0x129 INVALID
---
0x129: INVALID 
---
Entry stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V68, V84, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V68, V84, V76]

================================

Block 0x12a
[0x12a:0x199]
---
Predecessors: [0xe4]
Successors: [0x19a, 0x19b]
---
0x12a JUMPDEST
0x12b DIV
0x12c PUSH1 0x0
0x12e PUSH1 0x40
0x130 MLOAD
0x131 PUSH1 0x20
0x133 ADD
0x134 MSTORE
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP4
0x139 PUSH4 0xffffffff
0x13e AND
0x13f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x15d MUL
0x15e DUP2
0x15f MSTORE
0x160 PUSH1 0x4
0x162 ADD
0x163 DUP1
0x164 DUP4
0x165 PUSH1 0x1
0x167 PUSH1 0xa0
0x169 PUSH1 0x2
0x16b EXP
0x16c SUB
0x16d AND
0x16e PUSH1 0x1
0x170 PUSH1 0xa0
0x172 PUSH1 0x2
0x174 EXP
0x175 SUB
0x176 AND
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x20
0x17b ADD
0x17c DUP3
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP3
0x183 POP
0x184 POP
0x185 POP
0x186 PUSH1 0x20
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP1
0x18c DUP4
0x18d SUB
0x18e DUP2
0x18f PUSH1 0x0
0x191 DUP8
0x192 DUP1
0x193 EXTCODESIZE
0x194 ISZERO
0x195 ISZERO
0x196 PUSH2 0x19b
0x199 JUMPI
---
0x12a: JUMPDEST 
0x12b: V90 = DIV V76 V84
0x12c: V91 = 0x0
0x12e: V92 = 0x40
0x130: V93 = M[0x40]
0x131: V94 = 0x20
0x133: V95 = ADD 0x20 V93
0x134: M[V95] = 0x0
0x135: V96 = 0x40
0x137: V97 = M[0x40]
0x139: V98 = 0xffffffff
0x13e: V99 = AND 0xffffffff 0xa9059cbb
0x13f: V100 = 0x100000000000000000000000000000000000000000000000000000000
0x15d: V101 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x15f: M[V97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x160: V102 = 0x4
0x162: V103 = ADD 0x4 V97
0x165: V104 = 0x1
0x167: V105 = 0xa0
0x169: V106 = 0x2
0x16b: V107 = EXP 0x2 0xa0
0x16c: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16d: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x16e: V110 = 0x1
0x170: V111 = 0xa0
0x172: V112 = 0x2
0x174: V113 = EXP 0x2 0xa0
0x175: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x178: M[V103] = V115
0x179: V116 = 0x20
0x17b: V117 = ADD 0x20 V103
0x17e: M[V117] = V90
0x17f: V118 = 0x20
0x181: V119 = ADD 0x20 V117
0x186: V120 = 0x20
0x188: V121 = 0x40
0x18a: V122 = M[0x40]
0x18d: V123 = SUB V119 V122
0x18f: V124 = 0x0
0x193: V125 = EXTCODESIZE V85
0x194: V126 = ISZERO V125
0x195: V127 = ISZERO V126
0x196: V128 = 0x19b
0x199: JUMPI 0x19b V127
---
Entry stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V68, V84, V76]
Stack pops: 5
Stack additions: [S4, S3, V119, 0x20, V122, V123, V122, 0x0, S4]
Exit stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V119, 0x20, V122, V123, V122, 0x0, V85]

================================

Block 0x19a
[0x19a:0x19a]
---
Predecessors: [0x12a]
Successors: []
---
0x19a INVALID
---
0x19a: INVALID 
---
Entry stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V119, 0x20, V122, V123, V122, 0x0, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V119, 0x20, V122, V123, V122, 0x0, V85]

================================

Block 0x19b
[0x19b:0x1a7]
---
Predecessors: [0x12a]
Successors: [0x1a8, 0x1a9]
---
0x19b JUMPDEST
0x19c PUSH2 0x2c6
0x19f GAS
0x1a0 SUB
0x1a1 CALL
0x1a2 ISZERO
0x1a3 ISZERO
0x1a4 PUSH2 0x1a9
0x1a7 JUMPI
---
0x19b: JUMPDEST 
0x19c: V129 = 0x2c6
0x19f: V130 = GAS
0x1a0: V131 = SUB V130 0x2c6
0x1a1: V132 = CALL V131 V85 0x0 V122 V123 V122 0x20
0x1a2: V133 = ISZERO V132
0x1a3: V134 = ISZERO V133
0x1a4: V135 = 0x1a9
0x1a7: JUMPI 0x1a9 V134
---
Entry stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V119, 0x20, V122, V123, V122, 0x0, V85]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V119]

================================

Block 0x1a8
[0x1a8:0x1a8]
---
Predecessors: [0x19b]
Successors: []
---
0x1a8 INVALID
---
0x1a8: INVALID 
---
Entry stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V119]

================================

Block 0x1a9
[0x1a9:0x1e2]
---
Predecessors: [0x19b]
Successors: [0x1e3]
---
0x1a9 JUMPDEST
0x1aa POP
0x1ab POP
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP3
0x1b0 SWAP2
0x1b1 POP
0x1b2 PUSH1 0x1
0x1b4 PUSH1 0xa0
0x1b6 PUSH1 0x2
0x1b8 EXP
0x1b9 SUB
0x1ba CALLER
0x1bb AND
0x1bc SWAP1
0x1bd PUSH32 0x8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f
0x1de SWAP1
0x1df PUSH1 0x0
0x1e1 SWAP1
0x1e2 LOG3
---
0x1a9: JUMPDEST 
0x1ac: V136 = 0x40
0x1ae: V137 = M[0x40]
0x1b2: V138 = 0x1
0x1b4: V139 = 0xa0
0x1b6: V140 = 0x2
0x1b8: V141 = EXP 0x2 0xa0
0x1b9: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ba: V143 = CALLER
0x1bb: V144 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V145 = 0x8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f
0x1df: V146 = 0x0
0x1e2: LOG V137 0x0 0x8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f V144 V76
---
Entry stack: [V10, 0x1e7, V76, V85, 0xa9059cbb, V119]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1e7, V76]

================================

Block 0x1e3
[0x1e3:0x1e3]
---
Predecessors: [0x1a9]
Successors: [0x1e4]
---
0x1e3 JUMPDEST
---
0x1e3: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V76]

================================

Block 0x1e4
[0x1e4:0x1e6]
---
Predecessors: [0x1e3]
Successors: [0x1e7]
---
0x1e4 JUMPDEST
0x1e5 POP
0x1e6 JUMP
---
0x1e4: JUMPDEST 
0x1e6: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, V76]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e7
[0x1e7:0x1e8]
---
Predecessors: [0x1e4, 0x45b, 0x5eb, 0x618, 0x660, 0x664, 0x6af, 0x709]
Successors: []
---
0x1e7 JUMPDEST
0x1e8 STOP
---
0x1e7: JUMPDEST 
0x1e8: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0xb]
Successors: [0x1f0, 0x1f1]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f1
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V147 = CALLVALUE
0x1eb: V148 = ISZERO V147
0x1ec: V149 = 0x1f1
0x1ef: JUMPI 0x1f1 V148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f0
[0x1f0:0x1f0]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 INVALID
---
0x1f0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f1
[0x1f1:0x1f8]
---
Predecessors: [0x1e9]
Successors: [0x406]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0x1f9
0x1f5 PUSH2 0x406
0x1f8 JUMP
---
0x1f1: JUMPDEST 
0x1f2: V150 = 0x1f9
0x1f5: V151 = 0x406
0x1f8: JUMP 0x406
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V10, 0x1f9]

================================

Block 0x1f9
[0x1f9:0x214]
---
Predecessors: [0x406, 0x61b, 0x6b2, 0x6c1]
Successors: []
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x40
0x1fc DUP1
0x1fd MLOAD
0x1fe PUSH1 0x1
0x200 PUSH1 0xa0
0x202 PUSH1 0x2
0x204 EXP
0x205 SUB
0x206 SWAP1
0x207 SWAP3
0x208 AND
0x209 DUP3
0x20a MSTORE
0x20b MLOAD
0x20c SWAP1
0x20d DUP2
0x20e SWAP1
0x20f SUB
0x210 PUSH1 0x20
0x212 ADD
0x213 SWAP1
0x214 RETURN
---
0x1f9: JUMPDEST 
0x1fa: V152 = 0x40
0x1fd: V153 = M[0x40]
0x1fe: V154 = 0x1
0x200: V155 = 0xa0
0x202: V156 = 0x2
0x204: V157 = EXP 0x2 0xa0
0x205: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x208: V159 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x20a: M[V153] = V159
0x20b: V160 = M[0x40]
0x20f: V161 = SUB V153 V160
0x210: V162 = 0x20
0x212: V163 = ADD 0x20 V161
0x214: RETURN V160 V163
---
Entry stack: [V10, 0x1f9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1f9]

================================

Block 0x215
[0x215:0x21b]
---
Predecessors: [0x3e]
Successors: [0x21c, 0x21d]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 ISZERO
0x218 PUSH2 0x21d
0x21b JUMPI
---
0x215: JUMPDEST 
0x216: V164 = CALLVALUE
0x217: V165 = ISZERO V164
0x218: V166 = 0x21d
0x21b: JUMPI 0x21d V165
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21c
[0x21c:0x21c]
---
Predecessors: [0x215]
Successors: []
---
0x21c INVALID
---
0x21c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21d
[0x21d:0x230]
---
Predecessors: [0x215]
Successors: [0x415]
---
0x21d JUMPDEST
0x21e PUSH2 0x1e7
0x221 PUSH1 0x1
0x223 PUSH1 0xa0
0x225 PUSH1 0x2
0x227 EXP
0x228 SUB
0x229 PUSH1 0x4
0x22b CALLDATALOAD
0x22c AND
0x22d PUSH2 0x415
0x230 JUMP
---
0x21d: JUMPDEST 
0x21e: V167 = 0x1e7
0x221: V168 = 0x1
0x223: V169 = 0xa0
0x225: V170 = 0x2
0x227: V171 = EXP 0x2 0xa0
0x228: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V173 = 0x4
0x22b: V174 = CALLDATALOAD 0x4
0x22c: V175 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V176 = 0x415
0x230: JUMP 0x415
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7, V175]
Exit stack: [V10, 0x1e7, V175]

================================

Block 0x231
[0x231:0x232]
---
Predecessors: []
Successors: []
---
0x231 JUMPDEST
0x232 STOP
---
0x231: JUMPDEST 
0x232: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x233
[0x233:0x239]
---
Predecessors: [0x49]
Successors: [0x23a, 0x23b]
---
0x233 JUMPDEST
0x234 CALLVALUE
0x235 ISZERO
0x236 PUSH2 0x23b
0x239 JUMPI
---
0x233: JUMPDEST 
0x234: V177 = CALLVALUE
0x235: V178 = ISZERO V177
0x236: V179 = 0x23b
0x239: JUMPI 0x23b V178
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23a
[0x23a:0x23a]
---
Predecessors: [0x233]
Successors: []
---
0x23a INVALID
---
0x23a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23b
[0x23b:0x242]
---
Predecessors: [0x233]
Successors: [0x45e]
---
0x23b JUMPDEST
0x23c PUSH2 0x243
0x23f PUSH2 0x45e
0x242 JUMP
---
0x23b: JUMPDEST 
0x23c: V180 = 0x243
0x23f: V181 = 0x45e
0x242: JUMP 0x45e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243]
Exit stack: [V10, 0x243]

================================

Block 0x243
[0x243:0x254]
---
Predecessors: [0x45e, 0x5ef, 0x62a]
Successors: []
---
0x243 JUMPDEST
0x244 PUSH1 0x40
0x246 DUP1
0x247 MLOAD
0x248 SWAP2
0x249 DUP3
0x24a MSTORE
0x24b MLOAD
0x24c SWAP1
0x24d DUP2
0x24e SWAP1
0x24f SUB
0x250 PUSH1 0x20
0x252 ADD
0x253 SWAP1
0x254 RETURN
---
0x243: JUMPDEST 
0x244: V182 = 0x40
0x247: V183 = M[0x40]
0x24a: M[V183] = S0
0x24b: V184 = M[0x40]
0x24f: V185 = SUB V183 V184
0x250: V186 = 0x20
0x252: V187 = ADD 0x20 V185
0x254: RETURN V184 V187
---
Entry stack: [V10, 0x243, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x243]

================================

Block 0x255
[0x255:0x25b]
---
Predecessors: [0x54]
Successors: [0x25c, 0x25d]
---
0x255 JUMPDEST
0x256 CALLVALUE
0x257 ISZERO
0x258 PUSH2 0x25d
0x25b JUMPI
---
0x255: JUMPDEST 
0x256: V188 = CALLVALUE
0x257: V189 = ISZERO V188
0x258: V190 = 0x25d
0x25b: JUMPI 0x25d V189
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x25c
[0x25c:0x25c]
---
Predecessors: [0x255]
Successors: []
---
0x25c INVALID
---
0x25c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x25d
[0x25d:0x264]
---
Predecessors: [0x255]
Successors: [0x464]
---
0x25d JUMPDEST
0x25e PUSH2 0x1e7
0x261 PUSH2 0x464
0x264 JUMP
---
0x25d: JUMPDEST 
0x25e: V191 = 0x1e7
0x261: V192 = 0x464
0x264: JUMP 0x464
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7]
Exit stack: [V10, 0x1e7]

================================

Block 0x265
[0x265:0x266]
---
Predecessors: []
Successors: []
---
0x265 JUMPDEST
0x266 STOP
---
0x265: JUMPDEST 
0x266: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x267
[0x267:0x26d]
---
Predecessors: [0x5f]
Successors: [0x26e, 0x26f]
---
0x267 JUMPDEST
0x268 CALLVALUE
0x269 ISZERO
0x26a PUSH2 0x26f
0x26d JUMPI
---
0x267: JUMPDEST 
0x268: V193 = CALLVALUE
0x269: V194 = ISZERO V193
0x26a: V195 = 0x26f
0x26d: JUMPI 0x26f V194
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26e
[0x26e:0x26e]
---
Predecessors: [0x267]
Successors: []
---
0x26e INVALID
---
0x26e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26f
[0x26f:0x276]
---
Predecessors: [0x267]
Successors: [0x5ef]
---
0x26f JUMPDEST
0x270 PUSH2 0x243
0x273 PUSH2 0x5ef
0x276 JUMP
---
0x26f: JUMPDEST 
0x270: V196 = 0x243
0x273: V197 = 0x5ef
0x276: JUMP 0x5ef
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243]
Exit stack: [V10, 0x243]

================================

Block 0x277
[0x277:0x288]
---
Predecessors: []
Successors: []
---
0x277 JUMPDEST
0x278 PUSH1 0x40
0x27a DUP1
0x27b MLOAD
0x27c SWAP2
0x27d DUP3
0x27e MSTORE
0x27f MLOAD
0x280 SWAP1
0x281 DUP2
0x282 SWAP1
0x283 SUB
0x284 PUSH1 0x20
0x286 ADD
0x287 SWAP1
0x288 RETURN
---
0x277: JUMPDEST 
0x278: V198 = 0x40
0x27b: V199 = M[0x40]
0x27e: M[V199] = S0
0x27f: V200 = M[0x40]
0x283: V201 = SUB V199 V200
0x284: V202 = 0x20
0x286: V203 = ADD 0x20 V201
0x288: RETURN V200 V203
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x289
[0x289:0x28f]
---
Predecessors: [0x6a]
Successors: [0x290, 0x291]
---
0x289 JUMPDEST
0x28a CALLVALUE
0x28b ISZERO
0x28c PUSH2 0x291
0x28f JUMPI
---
0x289: JUMPDEST 
0x28a: V204 = CALLVALUE
0x28b: V205 = ISZERO V204
0x28c: V206 = 0x291
0x28f: JUMPI 0x291 V205
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x290
[0x290:0x290]
---
Predecessors: [0x289]
Successors: []
---
0x290 INVALID
---
0x290: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x291
[0x291:0x29b]
---
Predecessors: [0x289]
Successors: [0x5f5]
---
0x291 JUMPDEST
0x292 PUSH2 0x1e7
0x295 PUSH1 0x4
0x297 CALLDATALOAD
0x298 PUSH2 0x5f5
0x29b JUMP
---
0x291: JUMPDEST 
0x292: V207 = 0x1e7
0x295: V208 = 0x4
0x297: V209 = CALLDATALOAD 0x4
0x298: V210 = 0x5f5
0x29b: JUMP 0x5f5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7, V209]
Exit stack: [V10, 0x1e7, V209]

================================

Block 0x29c
[0x29c:0x29d]
---
Predecessors: []
Successors: []
---
0x29c JUMPDEST
0x29d STOP
---
0x29c: JUMPDEST 
0x29d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29e
[0x29e:0x2a4]
---
Predecessors: [0x75]
Successors: [0x2a5, 0x2a6]
---
0x29e JUMPDEST
0x29f CALLVALUE
0x2a0 ISZERO
0x2a1 PUSH2 0x2a6
0x2a4 JUMPI
---
0x29e: JUMPDEST 
0x29f: V211 = CALLVALUE
0x2a0: V212 = ISZERO V211
0x2a1: V213 = 0x2a6
0x2a4: JUMPI 0x2a6 V212
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a5
[0x2a5:0x2a5]
---
Predecessors: [0x29e]
Successors: []
---
0x2a5 INVALID
---
0x2a5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a6
[0x2a6:0x2ad]
---
Predecessors: [0x29e]
Successors: [0x61b]
---
0x2a6 JUMPDEST
0x2a7 PUSH2 0x1f9
0x2aa PUSH2 0x61b
0x2ad JUMP
---
0x2a6: JUMPDEST 
0x2a7: V214 = 0x1f9
0x2aa: V215 = 0x61b
0x2ad: JUMP 0x61b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V10, 0x1f9]

================================

Block 0x2ae
[0x2ae:0x2c9]
---
Predecessors: []
Successors: []
---
0x2ae JUMPDEST
0x2af PUSH1 0x40
0x2b1 DUP1
0x2b2 MLOAD
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb SWAP1
0x2bc SWAP3
0x2bd AND
0x2be DUP3
0x2bf MSTORE
0x2c0 MLOAD
0x2c1 SWAP1
0x2c2 DUP2
0x2c3 SWAP1
0x2c4 SUB
0x2c5 PUSH1 0x20
0x2c7 ADD
0x2c8 SWAP1
0x2c9 RETURN
---
0x2ae: JUMPDEST 
0x2af: V216 = 0x40
0x2b2: V217 = M[0x40]
0x2b3: V218 = 0x1
0x2b5: V219 = 0xa0
0x2b7: V220 = 0x2
0x2b9: V221 = EXP 0x2 0xa0
0x2ba: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bd: V223 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: M[V217] = V223
0x2c0: V224 = M[0x40]
0x2c4: V225 = SUB V217 V224
0x2c5: V226 = 0x20
0x2c7: V227 = ADD 0x20 V225
0x2c9: RETURN V224 V227
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ca
[0x2ca:0x2d0]
---
Predecessors: [0x80]
Successors: [0x2d1, 0x2d2]
---
0x2ca JUMPDEST
0x2cb CALLVALUE
0x2cc ISZERO
0x2cd PUSH2 0x2d2
0x2d0 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V228 = CALLVALUE
0x2cc: V229 = ISZERO V228
0x2cd: V230 = 0x2d2
0x2d0: JUMPI 0x2d2 V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d1
[0x2d1:0x2d1]
---
Predecessors: [0x2ca]
Successors: []
---
0x2d1 INVALID
---
0x2d1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d2
[0x2d2:0x2e5]
---
Predecessors: [0x2ca]
Successors: [0x62a]
---
0x2d2 JUMPDEST
0x2d3 PUSH2 0x243
0x2d6 PUSH1 0x1
0x2d8 PUSH1 0xa0
0x2da PUSH1 0x2
0x2dc EXP
0x2dd SUB
0x2de PUSH1 0x4
0x2e0 CALLDATALOAD
0x2e1 AND
0x2e2 PUSH2 0x62a
0x2e5 JUMP
---
0x2d2: JUMPDEST 
0x2d3: V231 = 0x243
0x2d6: V232 = 0x1
0x2d8: V233 = 0xa0
0x2da: V234 = 0x2
0x2dc: V235 = EXP 0x2 0xa0
0x2dd: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2de: V237 = 0x4
0x2e0: V238 = CALLDATALOAD 0x4
0x2e1: V239 = AND V238 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V240 = 0x62a
0x2e5: JUMP 0x62a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243, V239]
Exit stack: [V10, 0x243, V239]

================================

Block 0x2e6
[0x2e6:0x2f7]
---
Predecessors: []
Successors: []
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x40
0x2e9 DUP1
0x2ea MLOAD
0x2eb SWAP2
0x2ec DUP3
0x2ed MSTORE
0x2ee MLOAD
0x2ef SWAP1
0x2f0 DUP2
0x2f1 SWAP1
0x2f2 SUB
0x2f3 PUSH1 0x20
0x2f5 ADD
0x2f6 SWAP1
0x2f7 RETURN
---
0x2e6: JUMPDEST 
0x2e7: V241 = 0x40
0x2ea: V242 = M[0x40]
0x2ed: M[V242] = S0
0x2ee: V243 = M[0x40]
0x2f2: V244 = SUB V242 V243
0x2f3: V245 = 0x20
0x2f5: V246 = ADD 0x20 V244
0x2f7: RETURN V243 V246
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0x8b]
Successors: [0x2ff, 0x300]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x300
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V247 = CALLVALUE
0x2fa: V248 = ISZERO V247
0x2fb: V249 = 0x300
0x2fe: JUMPI 0x300 V248
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ff
[0x2ff:0x2ff]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff INVALID
---
0x2ff: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x300
[0x300:0x30a]
---
Predecessors: [0x2f8]
Successors: [0x63c]
---
0x300 JUMPDEST
0x301 PUSH2 0x1e7
0x304 PUSH1 0x4
0x306 CALLDATALOAD
0x307 PUSH2 0x63c
0x30a JUMP
---
0x300: JUMPDEST 
0x301: V250 = 0x1e7
0x304: V251 = 0x4
0x306: V252 = CALLDATALOAD 0x4
0x307: V253 = 0x63c
0x30a: JUMP 0x63c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7, V252]
Exit stack: [V10, 0x1e7, V252]

================================

Block 0x30b
[0x30b:0x30c]
---
Predecessors: []
Successors: []
---
0x30b JUMPDEST
0x30c STOP
---
0x30b: JUMPDEST 
0x30c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30d
[0x30d:0x313]
---
Predecessors: [0x96]
Successors: [0x314, 0x315]
---
0x30d JUMPDEST
0x30e CALLVALUE
0x30f ISZERO
0x310 PUSH2 0x315
0x313 JUMPI
---
0x30d: JUMPDEST 
0x30e: V254 = CALLVALUE
0x30f: V255 = ISZERO V254
0x310: V256 = 0x315
0x313: JUMPI 0x315 V255
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x314
[0x314:0x314]
---
Predecessors: [0x30d]
Successors: []
---
0x314 INVALID
---
0x314: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x315
[0x315:0x36f]
---
Predecessors: [0x30d]
Successors: [0x663]
---
0x315 JUMPDEST
0x316 PUSH1 0x40
0x318 DUP1
0x319 MLOAD
0x31a PUSH1 0x20
0x31c PUSH1 0x4
0x31e PUSH1 0x44
0x320 CALLDATALOAD
0x321 DUP2
0x322 DUP2
0x323 ADD
0x324 CALLDATALOAD
0x325 PUSH1 0x1f
0x327 DUP2
0x328 ADD
0x329 DUP5
0x32a SWAP1
0x32b DIV
0x32c DUP5
0x32d MUL
0x32e DUP6
0x32f ADD
0x330 DUP5
0x331 ADD
0x332 SWAP1
0x333 SWAP6
0x334 MSTORE
0x335 DUP5
0x336 DUP5
0x337 MSTORE
0x338 PUSH2 0x1e7
0x33b SWAP5
0x33c DUP3
0x33d CALLDATALOAD
0x33e PUSH1 0x1
0x340 PUSH1 0xa0
0x342 PUSH1 0x2
0x344 EXP
0x345 SUB
0x346 AND
0x347 SWAP5
0x348 PUSH1 0x24
0x34a DUP1
0x34b CALLDATALOAD
0x34c SWAP6
0x34d PUSH1 0x64
0x34f SWAP5
0x350 SWAP3
0x351 SWAP4
0x352 SWAP2
0x353 SWAP1
0x354 SWAP3
0x355 ADD
0x356 SWAP2
0x357 DUP2
0x358 SWAP1
0x359 DUP5
0x35a ADD
0x35b DUP4
0x35c DUP3
0x35d DUP1
0x35e DUP3
0x35f DUP5
0x360 CALLDATACOPY
0x361 POP
0x362 SWAP5
0x363 SWAP7
0x364 POP
0x365 PUSH2 0x663
0x368 SWAP6
0x369 POP
0x36a POP
0x36b POP
0x36c POP
0x36d POP
0x36e POP
0x36f JUMP
---
0x315: JUMPDEST 
0x316: V257 = 0x40
0x319: V258 = M[0x40]
0x31a: V259 = 0x20
0x31c: V260 = 0x4
0x31e: V261 = 0x44
0x320: V262 = CALLDATALOAD 0x44
0x323: V263 = ADD V262 0x4
0x324: V264 = CALLDATALOAD V263
0x325: V265 = 0x1f
0x328: V266 = ADD V264 0x1f
0x32b: V267 = DIV V266 0x20
0x32d: V268 = MUL 0x20 V267
0x32f: V269 = ADD V258 V268
0x331: V270 = ADD 0x20 V269
0x334: M[0x40] = V270
0x337: M[V258] = V264
0x338: V271 = 0x1e7
0x33d: V272 = CALLDATALOAD 0x4
0x33e: V273 = 0x1
0x340: V274 = 0xa0
0x342: V275 = 0x2
0x344: V276 = EXP 0x2 0xa0
0x345: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x346: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x348: V279 = 0x24
0x34b: V280 = CALLDATALOAD 0x24
0x34d: V281 = 0x64
0x355: V282 = ADD V262 0x24
0x35a: V283 = ADD V258 0x20
0x360: CALLDATACOPY V283 V282 V264
0x365: V284 = 0x663
0x36f: JUMP 0x663
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7, V278, V280, V258]
Exit stack: [V10, 0x1e7, V278, V280, V258]

================================

Block 0x370
[0x370:0x371]
---
Predecessors: []
Successors: []
---
0x370 JUMPDEST
0x371 STOP
---
0x370: JUMPDEST 
0x371: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x372
[0x372:0x378]
---
Predecessors: [0xa1]
Successors: [0x379, 0x37a]
---
0x372 JUMPDEST
0x373 CALLVALUE
0x374 ISZERO
0x375 PUSH2 0x37a
0x378 JUMPI
---
0x372: JUMPDEST 
0x373: V285 = CALLVALUE
0x374: V286 = ISZERO V285
0x375: V287 = 0x37a
0x378: JUMPI 0x37a V286
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x379
[0x379:0x379]
---
Predecessors: [0x372]
Successors: []
---
0x379 INVALID
---
0x379: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37a
[0x37a:0x38d]
---
Predecessors: [0x372]
Successors: [0x669]
---
0x37a JUMPDEST
0x37b PUSH2 0x1e7
0x37e PUSH1 0x1
0x380 PUSH1 0xa0
0x382 PUSH1 0x2
0x384 EXP
0x385 SUB
0x386 PUSH1 0x4
0x388 CALLDATALOAD
0x389 AND
0x38a PUSH2 0x669
0x38d JUMP
---
0x37a: JUMPDEST 
0x37b: V288 = 0x1e7
0x37e: V289 = 0x1
0x380: V290 = 0xa0
0x382: V291 = 0x2
0x384: V292 = EXP 0x2 0xa0
0x385: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x386: V294 = 0x4
0x388: V295 = CALLDATALOAD 0x4
0x389: V296 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V297 = 0x669
0x38d: JUMP 0x669
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7, V296]
Exit stack: [V10, 0x1e7, V296]

================================

Block 0x38e
[0x38e:0x38f]
---
Predecessors: []
Successors: []
---
0x38e JUMPDEST
0x38f STOP
---
0x38e: JUMPDEST 
0x38f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x390
[0x390:0x396]
---
Predecessors: [0xac]
Successors: [0x397, 0x398]
---
0x390 JUMPDEST
0x391 CALLVALUE
0x392 ISZERO
0x393 PUSH2 0x398
0x396 JUMPI
---
0x390: JUMPDEST 
0x391: V298 = CALLVALUE
0x392: V299 = ISZERO V298
0x393: V300 = 0x398
0x396: JUMPI 0x398 V299
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x397
[0x397:0x397]
---
Predecessors: [0x390]
Successors: []
---
0x397 INVALID
---
0x397: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x398
[0x398:0x39f]
---
Predecessors: [0x390]
Successors: [0x6b2]
---
0x398 JUMPDEST
0x399 PUSH2 0x1f9
0x39c PUSH2 0x6b2
0x39f JUMP
---
0x398: JUMPDEST 
0x399: V301 = 0x1f9
0x39c: V302 = 0x6b2
0x39f: JUMP 0x6b2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V10, 0x1f9]

================================

Block 0x3a0
[0x3a0:0x3bb]
---
Predecessors: []
Successors: []
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x40
0x3a3 DUP1
0x3a4 MLOAD
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 PUSH1 0x2
0x3ab EXP
0x3ac SUB
0x3ad SWAP1
0x3ae SWAP3
0x3af AND
0x3b0 DUP3
0x3b1 MSTORE
0x3b2 MLOAD
0x3b3 SWAP1
0x3b4 DUP2
0x3b5 SWAP1
0x3b6 SUB
0x3b7 PUSH1 0x20
0x3b9 ADD
0x3ba SWAP1
0x3bb RETURN
---
0x3a0: JUMPDEST 
0x3a1: V303 = 0x40
0x3a4: V304 = M[0x40]
0x3a5: V305 = 0x1
0x3a7: V306 = 0xa0
0x3a9: V307 = 0x2
0x3ab: V308 = EXP 0x2 0xa0
0x3ac: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V310 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: M[V304] = V310
0x3b2: V311 = M[0x40]
0x3b6: V312 = SUB V304 V311
0x3b7: V313 = 0x20
0x3b9: V314 = ADD 0x20 V312
0x3bb: RETURN V311 V314
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3bc
[0x3bc:0x3c2]
---
Predecessors: [0xb7]
Successors: [0x3c3, 0x3c4]
---
0x3bc JUMPDEST
0x3bd CALLVALUE
0x3be ISZERO
0x3bf PUSH2 0x3c4
0x3c2 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V315 = CALLVALUE
0x3be: V316 = ISZERO V315
0x3bf: V317 = 0x3c4
0x3c2: JUMPI 0x3c4 V316
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c3
[0x3c3:0x3c3]
---
Predecessors: [0x3bc]
Successors: []
---
0x3c3 INVALID
---
0x3c3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c4
[0x3c4:0x3cb]
---
Predecessors: [0x3bc]
Successors: [0x6c1]
---
0x3c4 JUMPDEST
0x3c5 PUSH2 0x1f9
0x3c8 PUSH2 0x6c1
0x3cb JUMP
---
0x3c4: JUMPDEST 
0x3c5: V318 = 0x1f9
0x3c8: V319 = 0x6c1
0x3cb: JUMP 0x6c1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V10, 0x1f9]

================================

Block 0x3cc
[0x3cc:0x3e7]
---
Predecessors: []
Successors: []
---
0x3cc JUMPDEST
0x3cd PUSH1 0x40
0x3cf DUP1
0x3d0 MLOAD
0x3d1 PUSH1 0x1
0x3d3 PUSH1 0xa0
0x3d5 PUSH1 0x2
0x3d7 EXP
0x3d8 SUB
0x3d9 SWAP1
0x3da SWAP3
0x3db AND
0x3dc DUP3
0x3dd MSTORE
0x3de MLOAD
0x3df SWAP1
0x3e0 DUP2
0x3e1 SWAP1
0x3e2 SUB
0x3e3 PUSH1 0x20
0x3e5 ADD
0x3e6 SWAP1
0x3e7 RETURN
---
0x3cc: JUMPDEST 
0x3cd: V320 = 0x40
0x3d0: V321 = M[0x40]
0x3d1: V322 = 0x1
0x3d3: V323 = 0xa0
0x3d5: V324 = 0x2
0x3d7: V325 = EXP 0x2 0xa0
0x3d8: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3db: V327 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: M[V321] = V327
0x3de: V328 = M[0x40]
0x3e2: V329 = SUB V321 V328
0x3e3: V330 = 0x20
0x3e5: V331 = ADD 0x20 V329
0x3e7: RETURN V328 V331
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e8
[0x3e8:0x3ee]
---
Predecessors: [0xc2]
Successors: [0x3ef, 0x3f0]
---
0x3e8 JUMPDEST
0x3e9 CALLVALUE
0x3ea ISZERO
0x3eb PUSH2 0x3f0
0x3ee JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V332 = CALLVALUE
0x3ea: V333 = ISZERO V332
0x3eb: V334 = 0x3f0
0x3ee: JUMPI 0x3f0 V333
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ef
[0x3ef:0x3ef]
---
Predecessors: [0x3e8]
Successors: []
---
0x3ef INVALID
---
0x3ef: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f0
[0x3f0:0x403]
---
Predecessors: [0x3e8]
Successors: [0x6d0]
---
0x3f0 JUMPDEST
0x3f1 PUSH2 0x1e7
0x3f4 PUSH1 0x1
0x3f6 PUSH1 0xa0
0x3f8 PUSH1 0x2
0x3fa EXP
0x3fb SUB
0x3fc PUSH1 0x4
0x3fe CALLDATALOAD
0x3ff AND
0x400 PUSH2 0x6d0
0x403 JUMP
---
0x3f0: JUMPDEST 
0x3f1: V335 = 0x1e7
0x3f4: V336 = 0x1
0x3f6: V337 = 0xa0
0x3f8: V338 = 0x2
0x3fa: V339 = EXP 0x2 0xa0
0x3fb: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fc: V341 = 0x4
0x3fe: V342 = CALLDATALOAD 0x4
0x3ff: V343 = AND V342 0xffffffffffffffffffffffffffffffffffffffff
0x400: V344 = 0x6d0
0x403: JUMP 0x6d0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7, V343]
Exit stack: [V10, 0x1e7, V343]

================================

Block 0x404
[0x404:0x405]
---
Predecessors: []
Successors: []
---
0x404 JUMPDEST
0x405 STOP
---
0x404: JUMPDEST 
0x405: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x406
[0x406:0x414]
---
Predecessors: [0x1f1]
Successors: [0x1f9]
---
0x406 JUMPDEST
0x407 PUSH1 0x2
0x409 SLOAD
0x40a PUSH1 0x1
0x40c PUSH1 0xa0
0x40e PUSH1 0x2
0x410 EXP
0x411 SUB
0x412 AND
0x413 DUP2
0x414 JUMP
---
0x406: JUMPDEST 
0x407: V345 = 0x2
0x409: V346 = S[0x2]
0x40a: V347 = 0x1
0x40c: V348 = 0xa0
0x40e: V349 = 0x2
0x410: V350 = EXP 0x2 0xa0
0x411: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x412: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x414: JUMP 0x1f9
---
Entry stack: [V10, 0x1f9]
Stack pops: 1
Stack additions: [S0, V352]
Exit stack: [V10, 0x1f9, V352]

================================

Block 0x415
[0x415:0x42b]
---
Predecessors: [0x21d]
Successors: [0x42c, 0x431]
---
0x415 JUMPDEST
0x416 PUSH1 0x0
0x418 SLOAD
0x419 CALLER
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 SWAP1
0x423 DUP2
0x424 AND
0x425 SWAP2
0x426 AND
0x427 EQ
0x428 PUSH2 0x431
0x42b JUMPI
---
0x415: JUMPDEST 
0x416: V353 = 0x0
0x418: V354 = S[0x0]
0x419: V355 = CALLER
0x41a: V356 = 0x1
0x41c: V357 = 0xa0
0x41e: V358 = 0x2
0x420: V359 = EXP 0x2 0xa0
0x421: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x426: V362 = AND V354 0xffffffffffffffffffffffffffffffffffffffff
0x427: V363 = EQ V362 V361
0x428: V364 = 0x431
0x42b: JUMPI 0x431 V363
---
Entry stack: [V10, 0x1e7, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V175]

================================

Block 0x42c
[0x42c:0x430]
---
Predecessors: [0x415]
Successors: []
---
0x42c PUSH1 0x0
0x42e PUSH1 0x0
0x430 REVERT
---
0x42c: V365 = 0x0
0x42e: V366 = 0x0
0x430: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e7, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V175]

================================

Block 0x431
[0x431:0x459]
---
Predecessors: [0x415]
Successors: [0x45a]
---
0x431 JUMPDEST
0x432 PUSH1 0x2
0x434 DUP1
0x435 SLOAD
0x436 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44b NOT
0x44c AND
0x44d PUSH1 0x1
0x44f PUSH1 0xa0
0x451 PUSH1 0x2
0x453 EXP
0x454 SUB
0x455 DUP4
0x456 AND
0x457 OR
0x458 SWAP1
0x459 SSTORE
---
0x431: JUMPDEST 
0x432: V367 = 0x2
0x435: V368 = S[0x2]
0x436: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x44b: V370 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x44c: V371 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V368
0x44d: V372 = 0x1
0x44f: V373 = 0xa0
0x451: V374 = 0x2
0x453: V375 = EXP 0x2 0xa0
0x454: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x456: V377 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x457: V378 = OR V377 V371
0x459: S[0x2] = V378
---
Entry stack: [V10, 0x1e7, V175]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e7, V175]

================================

Block 0x45a
[0x45a:0x45a]
---
Predecessors: [0x431]
Successors: [0x45b]
---
0x45a JUMPDEST
---
0x45a: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V175]

================================

Block 0x45b
[0x45b:0x45d]
---
Predecessors: [0x45a]
Successors: [0x1e7]
---
0x45b JUMPDEST
0x45c POP
0x45d JUMP
---
0x45b: JUMPDEST 
0x45d: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, V175]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x45e
[0x45e:0x463]
---
Predecessors: [0x23b]
Successors: [0x243]
---
0x45e JUMPDEST
0x45f PUSH1 0x3
0x461 SLOAD
0x462 DUP2
0x463 JUMP
---
0x45e: JUMPDEST 
0x45f: V379 = 0x3
0x461: V380 = S[0x3]
0x463: JUMP 0x243
---
Entry stack: [V10, 0x243]
Stack pops: 1
Stack additions: [S0, V380]
Exit stack: [V10, 0x243, V380]

================================

Block 0x464
[0x464:0x473]
---
Predecessors: [0x25d]
Successors: [0x474, 0x479]
---
0x464 JUMPDEST
0x465 PUSH1 0x0
0x467 PUSH1 0x0
0x469 PUSH1 0x3
0x46b SLOAD
0x46c TIMESTAMP
0x46d GT
0x46e ISZERO
0x46f ISZERO
0x470 PUSH2 0x479
0x473 JUMPI
---
0x464: JUMPDEST 
0x465: V381 = 0x0
0x467: V382 = 0x0
0x469: V383 = 0x3
0x46b: V384 = S[0x3]
0x46c: V385 = TIMESTAMP
0x46d: V386 = GT V385 V384
0x46e: V387 = ISZERO V386
0x46f: V388 = ISZERO V387
0x470: V389 = 0x479
0x473: JUMPI 0x479 V388
---
Entry stack: [V10, 0x1e7]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x1e7, 0x0, 0x0]

================================

Block 0x474
[0x474:0x478]
---
Predecessors: [0x464]
Successors: []
---
0x474 PUSH1 0x0
0x476 PUSH1 0x0
0x478 REVERT
---
0x474: V390 = 0x0
0x476: V391 = 0x0
0x478: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e7, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, 0x0, 0x0]

================================

Block 0x479
[0x479:0x4eb]
---
Predecessors: [0x464]
Successors: [0x4ec, 0x4ed]
---
0x479 JUMPDEST
0x47a PUSH1 0x5
0x47c SLOAD
0x47d PUSH1 0x40
0x47f DUP1
0x480 MLOAD
0x481 PUSH1 0x0
0x483 PUSH1 0x20
0x485 SWAP2
0x486 DUP3
0x487 ADD
0x488 DUP2
0x489 SWAP1
0x48a MSTORE
0x48b DUP3
0x48c MLOAD
0x48d PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4ae DUP2
0x4af MSTORE
0x4b0 PUSH1 0x1
0x4b2 PUSH1 0xa0
0x4b4 PUSH1 0x2
0x4b6 EXP
0x4b7 SUB
0x4b8 ADDRESS
0x4b9 DUP2
0x4ba AND
0x4bb PUSH1 0x4
0x4bd DUP4
0x4be ADD
0x4bf DUP2
0x4c0 SWAP1
0x4c1 MSTORE
0x4c2 SWAP5
0x4c3 MLOAD
0x4c4 SWAP5
0x4c5 BALANCE
0x4c6 SWAP8
0x4c7 POP
0x4c8 SWAP5
0x4c9 SWAP1
0x4ca SWAP5
0x4cb AND
0x4cc SWAP4
0x4cd PUSH4 0x70a08231
0x4d2 SWAP4
0x4d3 PUSH1 0x24
0x4d5 DUP1
0x4d6 DUP4
0x4d7 ADD
0x4d8 SWAP5
0x4d9 SWAP4
0x4da SWAP2
0x4db SWAP3
0x4dc DUP4
0x4dd SWAP1
0x4de SUB
0x4df ADD
0x4e0 SWAP1
0x4e1 DUP3
0x4e2 SWAP1
0x4e3 DUP8
0x4e4 DUP1
0x4e5 EXTCODESIZE
0x4e6 ISZERO
0x4e7 ISZERO
0x4e8 PUSH2 0x4ed
0x4eb JUMPI
---
0x479: JUMPDEST 
0x47a: V392 = 0x5
0x47c: V393 = S[0x5]
0x47d: V394 = 0x40
0x480: V395 = M[0x40]
0x481: V396 = 0x0
0x483: V397 = 0x20
0x487: V398 = ADD 0x20 V395
0x48a: M[V398] = 0x0
0x48c: V399 = M[0x40]
0x48d: V400 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4af: M[V399] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4b0: V401 = 0x1
0x4b2: V402 = 0xa0
0x4b4: V403 = 0x2
0x4b6: V404 = EXP 0x2 0xa0
0x4b7: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b8: V406 = ADDRESS
0x4ba: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x4bb: V408 = 0x4
0x4be: V409 = ADD V399 0x4
0x4c1: M[V409] = V407
0x4c3: V410 = M[0x40]
0x4c5: V411 = BALANCE V407
0x4cb: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x4cd: V413 = 0x70a08231
0x4d3: V414 = 0x24
0x4d7: V415 = ADD V399 0x24
0x4de: V416 = SUB V399 V410
0x4df: V417 = ADD V416 0x24
0x4e5: V418 = EXTCODESIZE V412
0x4e6: V419 = ISZERO V418
0x4e7: V420 = ISZERO V419
0x4e8: V421 = 0x4ed
0x4eb: JUMPI 0x4ed V420
---
Entry stack: [V10, 0x1e7, 0x0, 0x0]
Stack pops: 2
Stack additions: [V411, S0, V412, 0x70a08231, V415, 0x20, V410, V417, V410, 0x0, V412]
Exit stack: [V10, 0x1e7, V411, 0x0, V412, 0x70a08231, V415, 0x20, V410, V417, V410, 0x0, V412]

================================

Block 0x4ec
[0x4ec:0x4ec]
---
Predecessors: [0x479]
Successors: []
---
0x4ec INVALID
---
0x4ec: INVALID 
---
Entry stack: [V10, 0x1e7, V411, 0x0, V412, 0x70a08231, V415, 0x20, V410, V417, V410, 0x0, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V411, 0x0, V412, 0x70a08231, V415, 0x20, V410, V417, V410, 0x0, V412]

================================

Block 0x4ed
[0x4ed:0x4f9]
---
Predecessors: [0x479]
Successors: [0x4fa, 0x4fb]
---
0x4ed JUMPDEST
0x4ee PUSH2 0x2c6
0x4f1 GAS
0x4f2 SUB
0x4f3 CALL
0x4f4 ISZERO
0x4f5 ISZERO
0x4f6 PUSH2 0x4fb
0x4f9 JUMPI
---
0x4ed: JUMPDEST 
0x4ee: V422 = 0x2c6
0x4f1: V423 = GAS
0x4f2: V424 = SUB V423 0x2c6
0x4f3: V425 = CALL V424 V412 0x0 V410 V417 V410 0x20
0x4f4: V426 = ISZERO V425
0x4f5: V427 = ISZERO V426
0x4f6: V428 = 0x4fb
0x4f9: JUMPI 0x4fb V427
---
Entry stack: [V10, 0x1e7, V411, 0x0, V412, 0x70a08231, V415, 0x20, V410, V417, V410, 0x0, V412]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1e7, V411, 0x0, V412, 0x70a08231, V415]

================================

Block 0x4fa
[0x4fa:0x4fa]
---
Predecessors: [0x4ed]
Successors: []
---
0x4fa INVALID
---
0x4fa: INVALID 
---
Entry stack: [V10, 0x1e7, V411, 0x0, V412, 0x70a08231, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V411, 0x0, V412, 0x70a08231, V415]

================================

Block 0x4fb
[0x4fb:0x50c]
---
Predecessors: [0x4ed]
Successors: [0x50d, 0x510]
---
0x4fb JUMPDEST
0x4fc POP
0x4fd POP
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 MLOAD
0x502 SWAP2
0x503 POP
0x504 POP
0x505 DUP2
0x506 ISZERO
0x507 DUP1
0x508 ISZERO
0x509 PUSH2 0x510
0x50c JUMPI
---
0x4fb: JUMPDEST 
0x4fe: V429 = 0x40
0x500: V430 = M[0x40]
0x501: V431 = M[V430]
0x506: V432 = ISZERO V411
0x508: V433 = ISZERO V432
0x509: V434 = 0x510
0x50c: JUMPI 0x510 V433
---
Entry stack: [V10, 0x1e7, V411, 0x0, V412, 0x70a08231, V415]
Stack pops: 5
Stack additions: [S4, V431, V432]
Exit stack: [V10, 0x1e7, V411, V431, V432]

================================

Block 0x50d
[0x50d:0x50f]
---
Predecessors: [0x4fb]
Successors: [0x510]
---
0x50d POP
0x50e DUP1
0x50f ISZERO
---
0x50f: V435 = ISZERO V431
---
Entry stack: [V10, 0x1e7, V411, V431, V432]
Stack pops: 2
Stack additions: [S1, V435]
Exit stack: [V10, 0x1e7, V411, V431, V435]

================================

Block 0x510
[0x510:0x515]
---
Predecessors: [0x4fb, 0x50d]
Successors: [0x516, 0x51b]
---
0x510 JUMPDEST
0x511 ISZERO
0x512 PUSH2 0x51b
0x515 JUMPI
---
0x510: JUMPDEST 
0x511: V436 = ISZERO S0
0x512: V437 = 0x51b
0x515: JUMPI 0x51b V436
---
Entry stack: [V10, 0x1e7, V411, V431, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x516
[0x516:0x51a]
---
Predecessors: [0x510]
Successors: []
---
0x516 PUSH1 0x0
0x518 PUSH1 0x0
0x51a REVERT
---
0x516: V438 = 0x0
0x518: V439 = 0x0
0x51a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x51b
[0x51b:0x524]
---
Predecessors: [0x510]
Successors: [0x525, 0x555]
---
0x51b JUMPDEST
0x51c PUSH1 0x0
0x51e DUP3
0x51f GT
0x520 ISZERO
0x521 PUSH2 0x555
0x524 JUMPI
---
0x51b: JUMPDEST 
0x51c: V440 = 0x0
0x51f: V441 = GT V411 0x0
0x520: V442 = ISZERO V441
0x521: V443 = 0x555
0x524: JUMPI 0x555 V442
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x525
[0x525:0x553]
---
Predecessors: [0x51b]
Successors: [0x554, 0x555]
---
0x525 PUSH1 0x1
0x527 SLOAD
0x528 PUSH1 0x40
0x52a MLOAD
0x52b PUSH1 0x1
0x52d PUSH1 0xa0
0x52f PUSH1 0x2
0x531 EXP
0x532 SUB
0x533 SWAP1
0x534 SWAP2
0x535 AND
0x536 SWAP1
0x537 DUP4
0x538 ISZERO
0x539 PUSH2 0x8fc
0x53c MUL
0x53d SWAP1
0x53e DUP5
0x53f SWAP1
0x540 PUSH1 0x0
0x542 DUP2
0x543 DUP2
0x544 DUP2
0x545 DUP6
0x546 DUP9
0x547 DUP9
0x548 CALL
0x549 SWAP4
0x54a POP
0x54b POP
0x54c POP
0x54d POP
0x54e ISZERO
0x54f ISZERO
0x550 PUSH2 0x555
0x553 JUMPI
---
0x525: V444 = 0x1
0x527: V445 = S[0x1]
0x528: V446 = 0x40
0x52a: V447 = M[0x40]
0x52b: V448 = 0x1
0x52d: V449 = 0xa0
0x52f: V450 = 0x2
0x531: V451 = EXP 0x2 0xa0
0x532: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x535: V453 = AND V445 0xffffffffffffffffffffffffffffffffffffffff
0x538: V454 = ISZERO V411
0x539: V455 = 0x8fc
0x53c: V456 = MUL 0x8fc V454
0x540: V457 = 0x0
0x548: V458 = CALL V456 V453 V411 V447 0x0 V447 0x0
0x54e: V459 = ISZERO V458
0x54f: V460 = ISZERO V459
0x550: V461 = 0x555
0x553: JUMPI 0x555 V460
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x554
[0x554:0x554]
---
Predecessors: [0x525]
Successors: []
---
0x554 INVALID
---
0x554: INVALID 
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x555
[0x555:0x555]
---
Predecessors: [0x51b, 0x525]
Successors: [0x556]
---
0x555 JUMPDEST
---
0x555: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x556
[0x556:0x55f]
---
Predecessors: [0x555]
Successors: [0x560, 0x5e9]
---
0x556 JUMPDEST
0x557 PUSH1 0x0
0x559 DUP2
0x55a GT
0x55b ISZERO
0x55c PUSH2 0x5e9
0x55f JUMPI
---
0x556: JUMPDEST 
0x557: V462 = 0x0
0x55a: V463 = GT V431 0x0
0x55b: V464 = ISZERO V463
0x55c: V465 = 0x5e9
0x55f: JUMPI 0x5e9 V464
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x560
[0x560:0x5d5]
---
Predecessors: [0x556]
Successors: [0x5d6, 0x5d7]
---
0x560 PUSH1 0x5
0x562 SLOAD
0x563 PUSH1 0x2
0x565 SLOAD
0x566 PUSH1 0x40
0x568 DUP1
0x569 MLOAD
0x56a PUSH1 0x0
0x56c PUSH1 0x20
0x56e SWAP2
0x56f DUP3
0x570 ADD
0x571 DUP2
0x572 SWAP1
0x573 MSTORE
0x574 DUP3
0x575 MLOAD
0x576 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x1
0x59b PUSH1 0xa0
0x59d PUSH1 0x2
0x59f EXP
0x5a0 SUB
0x5a1 SWAP5
0x5a2 DUP6
0x5a3 AND
0x5a4 PUSH1 0x4
0x5a6 DUP3
0x5a7 ADD
0x5a8 MSTORE
0x5a9 PUSH1 0x24
0x5ab DUP2
0x5ac ADD
0x5ad DUP8
0x5ae SWAP1
0x5af MSTORE
0x5b0 SWAP3
0x5b1 MLOAD
0x5b2 SWAP4
0x5b3 SWAP1
0x5b4 SWAP5
0x5b5 AND
0x5b6 SWAP4
0x5b7 PUSH4 0xa9059cbb
0x5bc SWAP4
0x5bd PUSH1 0x44
0x5bf DUP1
0x5c0 DUP6
0x5c1 ADD
0x5c2 SWAP5
0x5c3 SWAP2
0x5c4 SWAP3
0x5c5 SWAP2
0x5c6 DUP4
0x5c7 SWAP1
0x5c8 SUB
0x5c9 ADD
0x5ca SWAP1
0x5cb DUP3
0x5cc SWAP1
0x5cd DUP8
0x5ce DUP1
0x5cf EXTCODESIZE
0x5d0 ISZERO
0x5d1 ISZERO
0x5d2 PUSH2 0x5d7
0x5d5 JUMPI
---
0x560: V466 = 0x5
0x562: V467 = S[0x5]
0x563: V468 = 0x2
0x565: V469 = S[0x2]
0x566: V470 = 0x40
0x569: V471 = M[0x40]
0x56a: V472 = 0x0
0x56c: V473 = 0x20
0x570: V474 = ADD 0x20 V471
0x573: M[V474] = 0x0
0x575: V475 = M[0x40]
0x576: V476 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x598: M[V475] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x599: V477 = 0x1
0x59b: V478 = 0xa0
0x59d: V479 = 0x2
0x59f: V480 = EXP 0x2 0xa0
0x5a0: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a3: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x5a4: V483 = 0x4
0x5a7: V484 = ADD V475 0x4
0x5a8: M[V484] = V482
0x5a9: V485 = 0x24
0x5ac: V486 = ADD V475 0x24
0x5af: M[V486] = V431
0x5b1: V487 = M[0x40]
0x5b5: V488 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V489 = 0xa9059cbb
0x5bd: V490 = 0x44
0x5c1: V491 = ADD V475 0x44
0x5c8: V492 = SUB V475 V487
0x5c9: V493 = ADD V492 0x44
0x5cf: V494 = EXTCODESIZE V488
0x5d0: V495 = ISZERO V494
0x5d1: V496 = ISZERO V495
0x5d2: V497 = 0x5d7
0x5d5: JUMPI 0x5d7 V496
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 1
Stack additions: [S0, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]
Exit stack: [V10, 0x1e7, V411, V431, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]

================================

Block 0x5d6
[0x5d6:0x5d6]
---
Predecessors: [0x560]
Successors: []
---
0x5d6 INVALID
---
0x5d6: INVALID 
---
Entry stack: [V10, 0x1e7, V411, V431, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]

================================

Block 0x5d7
[0x5d7:0x5e3]
---
Predecessors: [0x560]
Successors: [0x5e4, 0x5e5]
---
0x5d7 JUMPDEST
0x5d8 PUSH2 0x2c6
0x5db GAS
0x5dc SUB
0x5dd CALL
0x5de ISZERO
0x5df ISZERO
0x5e0 PUSH2 0x5e5
0x5e3 JUMPI
---
0x5d7: JUMPDEST 
0x5d8: V498 = 0x2c6
0x5db: V499 = GAS
0x5dc: V500 = SUB V499 0x2c6
0x5dd: V501 = CALL V500 V488 0x0 V487 V493 V487 0x20
0x5de: V502 = ISZERO V501
0x5df: V503 = ISZERO V502
0x5e0: V504 = 0x5e5
0x5e3: JUMPI 0x5e5 V503
---
Entry stack: [V10, 0x1e7, V411, V431, V488, 0xa9059cbb, V491, 0x20, V487, V493, V487, 0x0, V488]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431, V488, 0xa9059cbb, V491]

================================

Block 0x5e4
[0x5e4:0x5e4]
---
Predecessors: [0x5d7]
Successors: []
---
0x5e4 INVALID
---
0x5e4: INVALID 
---
Entry stack: [V10, 0x1e7, V411, V431, V488, 0xa9059cbb, V491]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431, V488, 0xa9059cbb, V491]

================================

Block 0x5e5
[0x5e5:0x5e8]
---
Predecessors: [0x5d7]
Successors: [0x5e9]
---
0x5e5 JUMPDEST
0x5e6 POP
0x5e7 POP
0x5e8 POP
---
0x5e5: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V411, V431, V488, 0xa9059cbb, V491]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x5e9
[0x5e9:0x5e9]
---
Predecessors: [0x556, 0x5e5]
Successors: [0x5ea]
---
0x5e9 JUMPDEST
---
0x5e9: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x5ea
[0x5ea:0x5ea]
---
Predecessors: [0x5e9]
Successors: [0x5eb]
---
0x5ea JUMPDEST
---
0x5ea: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V411, V431]

================================

Block 0x5eb
[0x5eb:0x5ee]
---
Predecessors: [0x5ea]
Successors: [0x1e7]
---
0x5eb JUMPDEST
0x5ec POP
0x5ed POP
0x5ee JUMP
---
0x5eb: JUMPDEST 
0x5ee: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, V411, V431]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x5ef
[0x5ef:0x5f4]
---
Predecessors: [0x26f]
Successors: [0x243]
---
0x5ef JUMPDEST
0x5f0 PUSH1 0x4
0x5f2 SLOAD
0x5f3 DUP2
0x5f4 JUMP
---
0x5ef: JUMPDEST 
0x5f0: V505 = 0x4
0x5f2: V506 = S[0x4]
0x5f4: JUMP 0x243
---
Entry stack: [V10, 0x243]
Stack pops: 1
Stack additions: [S0, V506]
Exit stack: [V10, 0x243, V506]

================================

Block 0x5f5
[0x5f5:0x60b]
---
Predecessors: [0x291]
Successors: [0x60c, 0x611]
---
0x5f5 JUMPDEST
0x5f6 PUSH1 0x0
0x5f8 SLOAD
0x5f9 CALLER
0x5fa PUSH1 0x1
0x5fc PUSH1 0xa0
0x5fe PUSH1 0x2
0x600 EXP
0x601 SUB
0x602 SWAP1
0x603 DUP2
0x604 AND
0x605 SWAP2
0x606 AND
0x607 EQ
0x608 PUSH2 0x611
0x60b JUMPI
---
0x5f5: JUMPDEST 
0x5f6: V507 = 0x0
0x5f8: V508 = S[0x0]
0x5f9: V509 = CALLER
0x5fa: V510 = 0x1
0x5fc: V511 = 0xa0
0x5fe: V512 = 0x2
0x600: V513 = EXP 0x2 0xa0
0x601: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x604: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x606: V516 = AND V508 0xffffffffffffffffffffffffffffffffffffffff
0x607: V517 = EQ V516 V515
0x608: V518 = 0x611
0x60b: JUMPI 0x611 V517
---
Entry stack: [V10, 0x1e7, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V209]

================================

Block 0x60c
[0x60c:0x610]
---
Predecessors: [0x5f5]
Successors: []
---
0x60c PUSH1 0x0
0x60e PUSH1 0x0
0x610 REVERT
---
0x60c: V519 = 0x0
0x60e: V520 = 0x0
0x610: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e7, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V209]

================================

Block 0x611
[0x611:0x616]
---
Predecessors: [0x5f5]
Successors: [0x617]
---
0x611 JUMPDEST
0x612 PUSH1 0x4
0x614 DUP2
0x615 SWAP1
0x616 SSTORE
---
0x611: JUMPDEST 
0x612: V521 = 0x4
0x616: S[0x4] = V209
---
Entry stack: [V10, 0x1e7, V209]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e7, V209]

================================

Block 0x617
[0x617:0x617]
---
Predecessors: [0x611]
Successors: [0x618]
---
0x617 JUMPDEST
---
0x617: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V209]

================================

Block 0x618
[0x618:0x61a]
---
Predecessors: [0x617]
Successors: [0x1e7]
---
0x618 JUMPDEST
0x619 POP
0x61a JUMP
---
0x618: JUMPDEST 
0x61a: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, V209]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x61b
[0x61b:0x629]
---
Predecessors: [0x2a6]
Successors: [0x1f9]
---
0x61b JUMPDEST
0x61c PUSH1 0x5
0x61e SLOAD
0x61f PUSH1 0x1
0x621 PUSH1 0xa0
0x623 PUSH1 0x2
0x625 EXP
0x626 SUB
0x627 AND
0x628 DUP2
0x629 JUMP
---
0x61b: JUMPDEST 
0x61c: V522 = 0x5
0x61e: V523 = S[0x5]
0x61f: V524 = 0x1
0x621: V525 = 0xa0
0x623: V526 = 0x2
0x625: V527 = EXP 0x2 0xa0
0x626: V528 = SUB 0x10000000000000000000000000000000000000000 0x1
0x627: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x629: JUMP 0x1f9
---
Entry stack: [V10, 0x1f9]
Stack pops: 1
Stack additions: [S0, V529]
Exit stack: [V10, 0x1f9, V529]

================================

Block 0x62a
[0x62a:0x63b]
---
Predecessors: [0x2d2]
Successors: [0x243]
---
0x62a JUMPDEST
0x62b PUSH1 0x6
0x62d PUSH1 0x20
0x62f MSTORE
0x630 PUSH1 0x0
0x632 SWAP1
0x633 DUP2
0x634 MSTORE
0x635 PUSH1 0x40
0x637 SWAP1
0x638 SHA3
0x639 SLOAD
0x63a DUP2
0x63b JUMP
---
0x62a: JUMPDEST 
0x62b: V530 = 0x6
0x62d: V531 = 0x20
0x62f: M[0x20] = 0x6
0x630: V532 = 0x0
0x634: M[0x0] = V239
0x635: V533 = 0x40
0x638: V534 = SHA3 0x0 0x40
0x639: V535 = S[V534]
0x63b: JUMP 0x243
---
Entry stack: [V10, 0x243, V239]
Stack pops: 2
Stack additions: [S1, V535]
Exit stack: [V10, 0x243, V535]

================================

Block 0x63c
[0x63c:0x652]
---
Predecessors: [0x300]
Successors: [0x653, 0x658]
---
0x63c JUMPDEST
0x63d PUSH1 0x0
0x63f SLOAD
0x640 CALLER
0x641 PUSH1 0x1
0x643 PUSH1 0xa0
0x645 PUSH1 0x2
0x647 EXP
0x648 SUB
0x649 SWAP1
0x64a DUP2
0x64b AND
0x64c SWAP2
0x64d AND
0x64e EQ
0x64f PUSH2 0x658
0x652 JUMPI
---
0x63c: JUMPDEST 
0x63d: V536 = 0x0
0x63f: V537 = S[0x0]
0x640: V538 = CALLER
0x641: V539 = 0x1
0x643: V540 = 0xa0
0x645: V541 = 0x2
0x647: V542 = EXP 0x2 0xa0
0x648: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64b: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x64d: V545 = AND V537 0xffffffffffffffffffffffffffffffffffffffff
0x64e: V546 = EQ V545 V544
0x64f: V547 = 0x658
0x652: JUMPI 0x658 V546
---
Entry stack: [V10, 0x1e7, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V252]

================================

Block 0x653
[0x653:0x657]
---
Predecessors: [0x63c]
Successors: []
---
0x653 PUSH1 0x0
0x655 PUSH1 0x0
0x657 REVERT
---
0x653: V548 = 0x0
0x655: V549 = 0x0
0x657: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e7, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V252]

================================

Block 0x658
[0x658:0x65e]
---
Predecessors: [0x63c]
Successors: [0x65f]
---
0x658 JUMPDEST
0x659 TIMESTAMP
0x65a DUP2
0x65b ADD
0x65c PUSH1 0x3
0x65e SSTORE
---
0x658: JUMPDEST 
0x659: V550 = TIMESTAMP
0x65b: V551 = ADD V252 V550
0x65c: V552 = 0x3
0x65e: S[0x3] = V551
---
Entry stack: [V10, 0x1e7, V252]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e7, V252]

================================

Block 0x65f
[0x65f:0x65f]
---
Predecessors: [0x658]
Successors: [0x660]
---
0x65f JUMPDEST
---
0x65f: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V252]

================================

Block 0x660
[0x660:0x662]
---
Predecessors: [0x65f]
Successors: [0x1e7]
---
0x660 JUMPDEST
0x661 POP
0x662 JUMP
---
0x660: JUMPDEST 
0x662: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, V252]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x663
[0x663:0x663]
---
Predecessors: [0x315]
Successors: [0x664]
---
0x663 JUMPDEST
---
0x663: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V278, V280, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V278, V280, V258]

================================

Block 0x664
[0x664:0x668]
---
Predecessors: [0x663]
Successors: [0x1e7]
---
0x664 JUMPDEST
0x665 POP
0x666 POP
0x667 POP
0x668 JUMP
---
0x664: JUMPDEST 
0x668: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, V278, V280, V258]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x669
[0x669:0x67f]
---
Predecessors: [0x37a]
Successors: [0x680, 0x685]
---
0x669 JUMPDEST
0x66a PUSH1 0x0
0x66c SLOAD
0x66d CALLER
0x66e PUSH1 0x1
0x670 PUSH1 0xa0
0x672 PUSH1 0x2
0x674 EXP
0x675 SUB
0x676 SWAP1
0x677 DUP2
0x678 AND
0x679 SWAP2
0x67a AND
0x67b EQ
0x67c PUSH2 0x685
0x67f JUMPI
---
0x669: JUMPDEST 
0x66a: V553 = 0x0
0x66c: V554 = S[0x0]
0x66d: V555 = CALLER
0x66e: V556 = 0x1
0x670: V557 = 0xa0
0x672: V558 = 0x2
0x674: V559 = EXP 0x2 0xa0
0x675: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x678: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x67a: V562 = AND V554 0xffffffffffffffffffffffffffffffffffffffff
0x67b: V563 = EQ V562 V561
0x67c: V564 = 0x685
0x67f: JUMPI 0x685 V563
---
Entry stack: [V10, 0x1e7, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V296]

================================

Block 0x680
[0x680:0x684]
---
Predecessors: [0x669]
Successors: []
---
0x680 PUSH1 0x0
0x682 PUSH1 0x0
0x684 REVERT
---
0x680: V565 = 0x0
0x682: V566 = 0x0
0x684: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e7, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V296]

================================

Block 0x685
[0x685:0x6ad]
---
Predecessors: [0x669]
Successors: [0x6ae]
---
0x685 JUMPDEST
0x686 PUSH1 0x0
0x688 DUP1
0x689 SLOAD
0x68a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69f NOT
0x6a0 AND
0x6a1 PUSH1 0x1
0x6a3 PUSH1 0xa0
0x6a5 PUSH1 0x2
0x6a7 EXP
0x6a8 SUB
0x6a9 DUP4
0x6aa AND
0x6ab OR
0x6ac SWAP1
0x6ad SSTORE
---
0x685: JUMPDEST 
0x686: V567 = 0x0
0x689: V568 = S[0x0]
0x68a: V569 = 0xffffffffffffffffffffffffffffffffffffffff
0x69f: V570 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V571 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V568
0x6a1: V572 = 0x1
0x6a3: V573 = 0xa0
0x6a5: V574 = 0x2
0x6a7: V575 = EXP 0x2 0xa0
0x6a8: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6aa: V577 = AND V296 0xffffffffffffffffffffffffffffffffffffffff
0x6ab: V578 = OR V577 V571
0x6ad: S[0x0] = V578
---
Entry stack: [V10, 0x1e7, V296]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e7, V296]

================================

Block 0x6ae
[0x6ae:0x6ae]
---
Predecessors: [0x685]
Successors: [0x6af]
---
0x6ae JUMPDEST
---
0x6ae: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V296]

================================

Block 0x6af
[0x6af:0x6b1]
---
Predecessors: [0x6ae]
Successors: [0x1e7]
---
0x6af JUMPDEST
0x6b0 POP
0x6b1 JUMP
---
0x6af: JUMPDEST 
0x6b1: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, V296]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b2
[0x6b2:0x6c0]
---
Predecessors: [0x398]
Successors: [0x1f9]
---
0x6b2 JUMPDEST
0x6b3 PUSH1 0x1
0x6b5 SLOAD
0x6b6 PUSH1 0x1
0x6b8 PUSH1 0xa0
0x6ba PUSH1 0x2
0x6bc EXP
0x6bd SUB
0x6be AND
0x6bf DUP2
0x6c0 JUMP
---
0x6b2: JUMPDEST 
0x6b3: V579 = 0x1
0x6b5: V580 = S[0x1]
0x6b6: V581 = 0x1
0x6b8: V582 = 0xa0
0x6ba: V583 = 0x2
0x6bc: V584 = EXP 0x2 0xa0
0x6bd: V585 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6be: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0x6c0: JUMP 0x1f9
---
Entry stack: [V10, 0x1f9]
Stack pops: 1
Stack additions: [S0, V586]
Exit stack: [V10, 0x1f9, V586]

================================

Block 0x6c1
[0x6c1:0x6cf]
---
Predecessors: [0x3c4]
Successors: [0x1f9]
---
0x6c1 JUMPDEST
0x6c2 PUSH1 0x0
0x6c4 SLOAD
0x6c5 PUSH1 0x1
0x6c7 PUSH1 0xa0
0x6c9 PUSH1 0x2
0x6cb EXP
0x6cc SUB
0x6cd AND
0x6ce DUP2
0x6cf JUMP
---
0x6c1: JUMPDEST 
0x6c2: V587 = 0x0
0x6c4: V588 = S[0x0]
0x6c5: V589 = 0x1
0x6c7: V590 = 0xa0
0x6c9: V591 = 0x2
0x6cb: V592 = EXP 0x2 0xa0
0x6cc: V593 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cd: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V588
0x6cf: JUMP 0x1f9
---
Entry stack: [V10, 0x1f9]
Stack pops: 1
Stack additions: [S0, V594]
Exit stack: [V10, 0x1f9, V594]

================================

Block 0x6d0
[0x6d0:0x6d9]
---
Predecessors: [0x3f0]
Successors: [0x6da, 0x6df]
---
0x6d0 JUMPDEST
0x6d1 PUSH1 0x3
0x6d3 SLOAD
0x6d4 TIMESTAMP
0x6d5 GT
0x6d6 PUSH2 0x6df
0x6d9 JUMPI
---
0x6d0: JUMPDEST 
0x6d1: V595 = 0x3
0x6d3: V596 = S[0x3]
0x6d4: V597 = TIMESTAMP
0x6d5: V598 = GT V597 V596
0x6d6: V599 = 0x6df
0x6d9: JUMPI 0x6df V598
---
Entry stack: [V10, 0x1e7, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V343]

================================

Block 0x6da
[0x6da:0x6de]
---
Predecessors: [0x6d0]
Successors: []
---
0x6da PUSH1 0x0
0x6dc PUSH1 0x0
0x6de REVERT
---
0x6da: V600 = 0x0
0x6dc: V601 = 0x0
0x6de: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e7, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V343]

================================

Block 0x6df
[0x6df:0x707]
---
Predecessors: [0x6d0]
Successors: [0x708]
---
0x6df JUMPDEST
0x6e0 PUSH1 0x1
0x6e2 DUP1
0x6e3 SLOAD
0x6e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f9 NOT
0x6fa AND
0x6fb PUSH1 0x1
0x6fd PUSH1 0xa0
0x6ff PUSH1 0x2
0x701 EXP
0x702 SUB
0x703 DUP4
0x704 AND
0x705 OR
0x706 SWAP1
0x707 SSTORE
---
0x6df: JUMPDEST 
0x6e0: V602 = 0x1
0x6e3: V603 = S[0x1]
0x6e4: V604 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f9: V605 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6fa: V606 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V603
0x6fb: V607 = 0x1
0x6fd: V608 = 0xa0
0x6ff: V609 = 0x2
0x701: V610 = EXP 0x2 0xa0
0x702: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x704: V612 = AND V343 0xffffffffffffffffffffffffffffffffffffffff
0x705: V613 = OR V612 V606
0x707: S[0x1] = V613
---
Entry stack: [V10, 0x1e7, V343]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e7, V343]

================================

Block 0x708
[0x708:0x708]
---
Predecessors: [0x6df]
Successors: [0x709]
---
0x708 JUMPDEST
---
0x708: JUMPDEST 
---
Entry stack: [V10, 0x1e7, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, V343]

================================

Block 0x709
[0x709:0x70b]
---
Predecessors: [0x708]
Successors: [0x1e7]
---
0x709 JUMPDEST
0x70a POP
0x70b JUMP
---
0x709: JUMPDEST 
0x70b: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, V343]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x70c
[0x70c:0x727]
---
Predecessors: []
Successors: [0x728]
Has unresolved jump.
---
0x70c STOP
0x70d LOG1
0x70e PUSH6 0x627a7a723058
0x715 SHA3
0x716 MISSING 0xc6
0x717 MISSING 0xe5
0x718 MISSING 0xd0
0x719 MISSING 0xb1
0x71a MISSING 0xb5
0x71b MISSING 0x21
0x71c STOP
0x71d SGT
0x71e ORIGIN
0x71f MISSING 0xc5
0x720 GASLIMIT
0x721 MISSING 0x29
0x722 SWAP12
0x723 MISSING 0xba
0x724 PUSH1 0x33
0x726 MISSING 0xbe
0x727 JUMPI
---
0x70c: STOP 
0x70d: LOG S0 S1 S2
0x70e: V614 = 0x627a7a723058
0x715: V615 = SHA3 0x627a7a723058 S3
0x716: MISSING 0xc6
0x717: MISSING 0xe5
0x718: MISSING 0xd0
0x719: MISSING 0xb1
0x71a: MISSING 0xb5
0x71b: MISSING 0x21
0x71c: STOP 
0x71d: V616 = SGT S0 S1
0x71e: V617 = ORIGIN
0x71f: MISSING 0xc5
0x720: V618 = GASLIMIT
0x721: MISSING 0x29
0x723: MISSING 0xba
0x724: V619 = 0x33
0x726: MISSING 0xbe
0x727: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V615, V617, V616, V618, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, 0x33]
Exit stack: []

================================

Block 0x728
[0x728:0x737]
---
Predecessors: [0x70c]
Successors: []
---
0x728 MISSING 0xc
0x729 MISSING 0x29
0x72a MISSING 0x22
0x72b MISSING 0x26
0x72c CALLDATACOPY
0x72d MISSING 0xee
0x72e SWAP9
0x72f CODECOPY
0x730 MISSING 0xef
0x731 MISSING 0xe5
0x732 SWAP10
0x733 RETURNDATACOPY
0x734 MISSING 0x4b
0x735 MISSING 0xa7
0x736 STOP
0x737 MISSING 0x29
---
0x728: MISSING 0xc
0x729: MISSING 0x29
0x72a: MISSING 0x22
0x72b: MISSING 0x26
0x72c: CALLDATACOPY S0 S1 S2
0x72d: MISSING 0xee
0x72f: CODECOPY S9 S1 S2
0x730: MISSING 0xef
0x731: MISSING 0xe5
0x733: RETURNDATACOPY S10 S1 S2
0x734: MISSING 0x4b
0x735: MISSING 0xa7
0x736: STOP 
0x737: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S3, S4, S5, S6, S7, S8, S0, S3, S4, S5, S6, S7, S8, S9, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x116e8726
Entry block: 0x1e9
Exit block: 0x1f9
Body: 0x1e9, 0x1f0, 0x1f1, 0x1f9, 0x406

Function 1:
Public function signature: 0x25568fd7
Entry block: 0x215
Exit block: 0x1e7
Body: 0x1e7, 0x215, 0x21c, 0x21d, 0x415, 0x42c, 0x431, 0x45a, 0x45b

Function 2:
Public function signature: 0x2c4bca2c
Entry block: 0x233
Exit block: 0x243
Body: 0x233, 0x23a, 0x23b, 0x243, 0x45e

Function 3:
Public function signature: 0x3ccfd60b
Entry block: 0x255
Exit block: 0x1e7
Body: 0x1e7, 0x255, 0x25c, 0x25d, 0x464, 0x474, 0x479, 0x4ec, 0x4ed, 0x4fa, 0x4fb, 0x50d, 0x510, 0x516, 0x51b, 0x525, 0x554, 0x555, 0x556, 0x560, 0x5d6, 0x5d7, 0x5e4, 0x5e5, 0x5e9, 0x5ea, 0x5eb

Function 4:
Public function signature: 0x3fc6d75a
Entry block: 0x267
Exit block: 0x243
Body: 0x243, 0x267, 0x26e, 0x26f, 0x5ef

Function 5:
Public function signature: 0x53bd755a
Entry block: 0x289
Exit block: 0x1e7
Body: 0x1e7, 0x289, 0x290, 0x291, 0x5f5, 0x60c, 0x611, 0x617, 0x618

Function 6:
Public function signature: 0x6f5e7398
Entry block: 0x29e
Exit block: 0x1f9
Body: 0x1f9, 0x29e, 0x2a5, 0x2a6, 0x61b

Function 7:
Public function signature: 0x7252bbf2
Entry block: 0x2ca
Exit block: 0x243
Body: 0x243, 0x2ca, 0x2d1, 0x2d2, 0x62a

Function 8:
Public function signature: 0x7750b2b1
Entry block: 0x2f8
Exit block: 0x1e7
Body: 0x1e7, 0x2f8, 0x2ff, 0x300, 0x63c, 0x653, 0x658, 0x65f, 0x660

Function 9:
Public function signature: 0xa7b4b60f
Entry block: 0x30d
Exit block: 0x1e7
Body: 0x1e7, 0x30d, 0x314, 0x315, 0x663, 0x664

Function 10:
Public function signature: 0xb9e7afd1
Entry block: 0x372
Exit block: 0x1e7
Body: 0x1e7, 0x372, 0x379, 0x37a, 0x669, 0x680, 0x685, 0x6ae, 0x6af

Function 11:
Public function signature: 0xbf6537a0
Entry block: 0x390
Exit block: 0x1f9
Body: 0x1f9, 0x390, 0x397, 0x398, 0x6b2

Function 12:
Public function signature: 0xc90755e2
Entry block: 0x3bc
Exit block: 0x1f9
Body: 0x1f9, 0x3bc, 0x3c3, 0x3c4, 0x6c1

Function 13:
Public function signature: 0xd0b01e68
Entry block: 0x3e8
Exit block: 0x1e7
Body: 0x1e7, 0x3e8, 0x3ef, 0x3f0, 0x6d0, 0x6da, 0x6df, 0x708, 0x709

Function 14:
Public fallback function
Entry block: 0xcd
Exit block: 0x1e7
Body: 0xcd, 0xd1, 0xdf, 0xe4, 0x129, 0x12a, 0x19a, 0x19b, 0x1a8, 0x1a9, 0x1e3, 0x1e4, 0x1e7

