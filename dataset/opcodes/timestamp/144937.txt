Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xba]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xba
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xba
0xc: JUMPI 0xba V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x2ea]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xb97bc86
0x3c EQ
0x3d PUSH2 0x2ea
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xb97bc86
0x3c: V13 = EQ 0xb97bc86 V11
0x3d: V14 = 0x2ea
0x40: JUMPI 0x2ea V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x315]
---
0x41 DUP1
0x42 PUSH4 0x2095f2d4
0x47 EQ
0x48 PUSH2 0x315
0x4b JUMPI
---
0x42: V15 = 0x2095f2d4
0x47: V16 = EQ 0x2095f2d4 V11
0x48: V17 = 0x315
0x4b: JUMPI 0x315 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x32c]
---
0x4c DUP1
0x4d PUSH4 0x228cb733
0x52 EQ
0x53 PUSH2 0x32c
0x56 JUMPI
---
0x4d: V18 = 0x228cb733
0x52: V19 = EQ 0x228cb733 V11
0x53: V20 = 0x32c
0x56: JUMPI 0x32c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x383]
---
0x57 DUP1
0x58 PUSH4 0x239d198c
0x5d EQ
0x5e PUSH2 0x383
0x61 JUMPI
---
0x58: V21 = 0x239d198c
0x5d: V22 = EQ 0x239d198c V11
0x5e: V23 = 0x383
0x61: JUMPI 0x383 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x3ae]
---
0x62 DUP1
0x63 PUSH4 0x40c65003
0x68 EQ
0x69 PUSH2 0x3ae
0x6c JUMPI
---
0x63: V24 = 0x40c65003
0x68: V25 = EQ 0x40c65003 V11
0x69: V26 = 0x3ae
0x6c: JUMPI 0x3ae V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x3d9]
---
0x6d DUP1
0x6e PUSH4 0x4d9b3d5d
0x73 EQ
0x74 PUSH2 0x3d9
0x77 JUMPI
---
0x6e: V27 = 0x4d9b3d5d
0x73: V28 = EQ 0x4d9b3d5d V11
0x74: V29 = 0x3d9
0x77: JUMPI 0x3d9 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x404]
---
0x78 DUP1
0x79 PUSH4 0x8d8f2adb
0x7e EQ
0x7f PUSH2 0x404
0x82 JUMPI
---
0x79: V30 = 0x8d8f2adb
0x7e: V31 = EQ 0x8d8f2adb V11
0x7f: V32 = 0x404
0x82: JUMPI 0x404 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x41b]
---
0x83 DUP1
0x84 PUSH4 0x8da5cb5b
0x89 EQ
0x8a PUSH2 0x41b
0x8d JUMPI
---
0x84: V33 = 0x8da5cb5b
0x89: V34 = EQ 0x8da5cb5b V11
0x8a: V35 = 0x41b
0x8d: JUMPI 0x41b V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x472]
---
0x8e DUP1
0x8f PUSH4 0xc24a0f8b
0x94 EQ
0x95 PUSH2 0x472
0x98 JUMPI
---
0x8f: V36 = 0xc24a0f8b
0x94: V37 = EQ 0xc24a0f8b V11
0x95: V38 = 0x472
0x98: JUMPI 0x472 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x49d]
---
0x99 DUP1
0x9a PUSH4 0xd4ee1d90
0x9f EQ
0xa0 PUSH2 0x49d
0xa3 JUMPI
---
0x9a: V39 = 0xd4ee1d90
0x9f: V40 = EQ 0xd4ee1d90 V11
0xa0: V41 = 0x49d
0xa3: JUMPI 0x49d V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x4f4]
---
0xa4 DUP1
0xa5 PUSH4 0xf2fde38b
0xaa EQ
0xab PUSH2 0x4f4
0xae JUMPI
---
0xa5: V42 = 0xf2fde38b
0xaa: V43 = EQ 0xf2fde38b V11
0xab: V44 = 0x4f4
0xae: JUMPI 0x4f4 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x537]
---
0xaf DUP1
0xb0 PUSH4 0xfd6b7ef8
0xb5 EQ
0xb6 PUSH2 0x537
0xb9 JUMPI
---
0xb0: V45 = 0xfd6b7ef8
0xb5: V46 = EQ 0xfd6b7ef8 V11
0xb6: V47 = 0x537
0xb9: JUMPI 0x537 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc9]
---
Predecessors: [0x0, 0xaf]
Successors: [0xca, 0xd1]
---
0xba JUMPDEST
0xbb PUSH1 0x0
0xbd DUP1
0xbe PUSH1 0x2
0xc0 SLOAD
0xc1 TIMESTAMP
0xc2 LT
0xc3 ISZERO
0xc4 DUP1
0xc5 ISZERO
0xc6 PUSH2 0xd1
0xc9 JUMPI
---
0xba: JUMPDEST 
0xbb: V48 = 0x0
0xbe: V49 = 0x2
0xc0: V50 = S[0x2]
0xc1: V51 = TIMESTAMP
0xc2: V52 = LT V51 V50
0xc3: V53 = ISZERO V52
0xc5: V54 = ISZERO V53
0xc6: V55 = 0xd1
0xc9: JUMPI 0xd1 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0, V53]
Exit stack: [V11, 0x0, 0x0, V53]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0xba]
Successors: [0xd1]
---
0xca POP
0xcb PUSH1 0x4
0xcd SLOAD
0xce TIMESTAMP
0xcf GT
0xd0 ISZERO
---
0xcb: V56 = 0x4
0xcd: V57 = S[0x4]
0xce: V58 = TIMESTAMP
0xcf: V59 = GT V58 V57
0xd0: V60 = ISZERO V59
---
Entry stack: [V11, 0x0, 0x0, V53]
Stack pops: 1
Stack additions: [V60]
Exit stack: [V11, 0x0, 0x0, V60]

================================

Block 0xd1
[0xd1:0xd7]
---
Predecessors: [0xba, 0xca]
Successors: [0xd8, 0xdc]
---
0xd1 JUMPDEST
0xd2 ISZERO
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xd1: JUMPDEST 
0xd2: V61 = ISZERO S0
0xd3: V62 = ISZERO V61
0xd4: V63 = 0xdc
0xd7: JUMPI 0xdc V62
---
Entry stack: [V11, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xd1]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V64 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xdc
[0xdc:0xe7]
---
Predecessors: [0xd1]
Successors: [0xe8, 0xf3]
---
0xdc JUMPDEST
0xdd PUSH1 0x3
0xdf SLOAD
0xe0 TIMESTAMP
0xe1 GT
0xe2 ISZERO
0xe3 ISZERO
0xe4 PUSH2 0xf3
0xe7 JUMPI
---
0xdc: JUMPDEST 
0xdd: V65 = 0x3
0xdf: V66 = S[0x3]
0xe0: V67 = TIMESTAMP
0xe1: V68 = GT V67 V66
0xe2: V69 = ISZERO V68
0xe3: V70 = ISZERO V69
0xe4: V71 = 0xf3
0xe7: JUMPI 0xf3 V70
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xe8
[0xe8:0xf2]
---
Predecessors: [0xdc]
Successors: [0xfb]
---
0xe8 PUSH2 0x191
0xeb CALLVALUE
0xec MUL
0xed SWAP2
0xee POP
0xef PUSH2 0xfb
0xf2 JUMP
---
0xe8: V72 = 0x191
0xeb: V73 = CALLVALUE
0xec: V74 = MUL V73 0x191
0xef: V75 = 0xfb
0xf2: JUMP 0xfb
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 2
Stack additions: [V74, S0]
Exit stack: [V11, V74, 0x0]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0xdc]
Successors: [0xfb]
---
0xf3 JUMPDEST
0xf4 PUSH2 0x190
0xf7 CALLVALUE
0xf8 MUL
0xf9 SWAP2
0xfa POP
---
0xf3: JUMPDEST 
0xf4: V76 = 0x190
0xf7: V77 = CALLVALUE
0xf8: V78 = MUL V77 0x190
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 2
Stack additions: [V78, S0]
Exit stack: [V11, V78, 0x0]

================================

Block 0xfb
[0xfb:0x143]
---
Predecessors: [0xe8, 0xf3]
Successors: [0x54e]
---
0xfb JUMPDEST
0xfc PUSH2 0x144
0xff PUSH1 0x7
0x101 PUSH1 0x0
0x103 CALLER
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 SWAP1
0x136 DUP2
0x137 MSTORE
0x138 PUSH1 0x20
0x13a ADD
0x13b PUSH1 0x0
0x13d SHA3
0x13e SLOAD
0x13f DUP4
0x140 PUSH2 0x54e
0x143 JUMP
---
0xfb: JUMPDEST 
0xfc: V79 = 0x144
0xff: V80 = 0x7
0x101: V81 = 0x0
0x103: V82 = CALLER
0x104: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x11a: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x131: M[0x0] = V86
0x132: V87 = 0x20
0x134: V88 = ADD 0x20 0x0
0x137: M[0x20] = 0x7
0x138: V89 = 0x20
0x13a: V90 = ADD 0x20 0x20
0x13b: V91 = 0x0
0x13d: V92 = SHA3 0x0 0x40
0x13e: V93 = S[V92]
0x140: V94 = 0x54e
0x143: JUMP 0x54e
---
Entry stack: [V11, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x144, V93, S1]
Exit stack: [V11, S1, 0x0, 0x144, V93, S1]

================================

Block 0x144
[0x144:0x247]
---
Predecessors: [0x564]
Successors: [0x248, 0x24c]
---
0x144 JUMPDEST
0x145 PUSH1 0x7
0x147 PUSH1 0x0
0x149 CALLER
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 DUP2
0x177 MSTORE
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP1
0x17c DUP2
0x17d MSTORE
0x17e PUSH1 0x20
0x180 ADD
0x181 PUSH1 0x0
0x183 SHA3
0x184 DUP2
0x185 SWAP1
0x186 SSTORE
0x187 POP
0x188 PUSH1 0x5
0x18a PUSH1 0x0
0x18c SWAP1
0x18d SLOAD
0x18e SWAP1
0x18f PUSH2 0x100
0x192 EXP
0x193 SWAP1
0x194 DIV
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 PUSH4 0xa9059cbb
0x1c6 CALLER
0x1c7 DUP5
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb DUP4
0x1cc PUSH4 0xffffffff
0x1d1 AND
0x1d2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1f0 MUL
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x4
0x1f5 ADD
0x1f6 DUP1
0x1f7 DUP4
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d AND
0x20e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x223 AND
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x20
0x228 ADD
0x229 DUP3
0x22a DUP2
0x22b MSTORE
0x22c PUSH1 0x20
0x22e ADD
0x22f SWAP3
0x230 POP
0x231 POP
0x232 POP
0x233 PUSH1 0x0
0x235 PUSH1 0x40
0x237 MLOAD
0x238 DUP1
0x239 DUP4
0x23a SUB
0x23b DUP2
0x23c PUSH1 0x0
0x23e DUP8
0x23f DUP1
0x240 EXTCODESIZE
0x241 ISZERO
0x242 DUP1
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x144: JUMPDEST 
0x145: V95 = 0x7
0x147: V96 = 0x0
0x149: V97 = CALLER
0x14a: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x160: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x177: M[0x0] = V101
0x178: V102 = 0x20
0x17a: V103 = ADD 0x20 0x0
0x17d: M[0x20] = 0x7
0x17e: V104 = 0x20
0x180: V105 = ADD 0x20 0x20
0x181: V106 = 0x0
0x183: V107 = SHA3 0x0 0x40
0x186: S[V107] = V335
0x188: V108 = 0x5
0x18a: V109 = 0x0
0x18d: V110 = S[0x5]
0x18f: V111 = 0x100
0x192: V112 = EXP 0x100 0x0
0x194: V113 = DIV V110 0x1
0x195: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1ab: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1c1: V118 = 0xa9059cbb
0x1c6: V119 = CALLER
0x1c8: V120 = 0x40
0x1ca: V121 = M[0x40]
0x1cc: V122 = 0xffffffff
0x1d1: V123 = AND 0xffffffff 0xa9059cbb
0x1d2: V124 = 0x100000000000000000000000000000000000000000000000000000000
0x1f0: V125 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x1f2: M[V121] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1f3: V126 = 0x4
0x1f5: V127 = ADD 0x4 V121
0x1f8: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x20e: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x223: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x225: M[V127] = V131
0x226: V132 = 0x20
0x228: V133 = ADD 0x20 V127
0x22b: M[V133] = S2
0x22c: V134 = 0x20
0x22e: V135 = ADD 0x20 V133
0x233: V136 = 0x0
0x235: V137 = 0x40
0x237: V138 = M[0x40]
0x23a: V139 = SUB V135 V138
0x23c: V140 = 0x0
0x240: V141 = EXTCODESIZE V117
0x241: V142 = ISZERO V141
0x243: V143 = ISZERO V142
0x244: V144 = 0x24c
0x247: JUMPI 0x24c V143
---
Entry stack: [V11, S2, 0x0, V335]
Stack pops: 3
Stack additions: [S2, S1, V117, 0xa9059cbb, V135, 0x0, V138, V139, V138, 0x0, V117, V142]
Exit stack: [V11, S2, 0x0, V117, 0xa9059cbb, V135, 0x0, V138, V139, V138, 0x0, V117, V142]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x144]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V145 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V11, S11, 0x0, V117, 0xa9059cbb, V135, 0x0, V138, V139, V138, 0x0, V117, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S11, 0x0, V117, 0xa9059cbb, V135, 0x0, V138, V139, V138, 0x0, V117, V142]

================================

Block 0x24c
[0x24c:0x256]
---
Predecessors: [0x144]
Successors: [0x257, 0x260]
---
0x24c JUMPDEST
0x24d POP
0x24e GAS
0x24f CALL
0x250 ISZERO
0x251 DUP1
0x252 ISZERO
0x253 PUSH2 0x260
0x256 JUMPI
---
0x24c: JUMPDEST 
0x24e: V146 = GAS
0x24f: V147 = CALL V146 V117 0x0 V138 V139 V138 0x0
0x250: V148 = ISZERO V147
0x252: V149 = ISZERO V148
0x253: V150 = 0x260
0x256: JUMPI 0x260 V149
---
Entry stack: [V11, S11, 0x0, V117, 0xa9059cbb, V135, 0x0, V138, V139, V138, 0x0, V117, V142]
Stack pops: 7
Stack additions: [V148]
Exit stack: [V11, S11, 0x0, V117, 0xa9059cbb, V135, V148]

================================

Block 0x257
[0x257:0x25f]
---
Predecessors: [0x24c]
Successors: []
---
0x257 RETURNDATASIZE
0x258 PUSH1 0x0
0x25a DUP1
0x25b RETURNDATACOPY
0x25c RETURNDATASIZE
0x25d PUSH1 0x0
0x25f REVERT
---
0x257: V151 = RETURNDATASIZE
0x258: V152 = 0x0
0x25b: RETURNDATACOPY 0x0 0x0 V151
0x25c: V153 = RETURNDATASIZE
0x25d: V154 = 0x0
0x25f: REVERT 0x0 V153
---
Entry stack: [V11, S5, 0x0, V117, 0xa9059cbb, V135, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, 0x0, V117, 0xa9059cbb, V135, V148]

================================

Block 0x260
[0x260:0x2db]
---
Predecessors: [0x24c]
Successors: [0x2dc, 0x2e5]
---
0x260 JUMPDEST
0x261 POP
0x262 POP
0x263 POP
0x264 POP
0x265 ADDRESS
0x266 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27b AND
0x27c BALANCE
0x27d SWAP1
0x27e POP
0x27f PUSH1 0x0
0x281 DUP1
0x282 SWAP1
0x283 SLOAD
0x284 SWAP1
0x285 PUSH2 0x100
0x288 EXP
0x289 SWAP1
0x28a DIV
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b6 AND
0x2b7 PUSH2 0x8fc
0x2ba DUP3
0x2bb SWAP1
0x2bc DUP2
0x2bd ISZERO
0x2be MUL
0x2bf SWAP1
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 PUSH1 0x0
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP1
0x2c9 DUP4
0x2ca SUB
0x2cb DUP2
0x2cc DUP6
0x2cd DUP9
0x2ce DUP9
0x2cf CALL
0x2d0 SWAP4
0x2d1 POP
0x2d2 POP
0x2d3 POP
0x2d4 POP
0x2d5 ISZERO
0x2d6 DUP1
0x2d7 ISZERO
0x2d8 PUSH2 0x2e5
0x2db JUMPI
---
0x260: JUMPDEST 
0x265: V155 = ADDRESS
0x266: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x27c: V158 = BALANCE V157
0x27f: V159 = 0x0
0x283: V160 = S[0x0]
0x285: V161 = 0x100
0x288: V162 = EXP 0x100 0x0
0x28a: V163 = DIV V160 0x1
0x28b: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2a1: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2b7: V168 = 0x8fc
0x2bd: V169 = ISZERO V158
0x2be: V170 = MUL V169 0x8fc
0x2c0: V171 = 0x40
0x2c2: V172 = M[0x40]
0x2c3: V173 = 0x0
0x2c5: V174 = 0x40
0x2c7: V175 = M[0x40]
0x2ca: V176 = SUB V172 V175
0x2cf: V177 = CALL V170 V167 V158 V175 V176 V175 0x0
0x2d5: V178 = ISZERO V177
0x2d7: V179 = ISZERO V178
0x2d8: V180 = 0x2e5
0x2db: JUMPI 0x2e5 V179
---
Entry stack: [V11, S5, 0x0, V117, 0xa9059cbb, V135, V148]
Stack pops: 5
Stack additions: [V158, V178]
Exit stack: [V11, S5, V158, V178]

================================

Block 0x2dc
[0x2dc:0x2e4]
---
Predecessors: [0x260]
Successors: []
---
0x2dc RETURNDATASIZE
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 RETURNDATACOPY
0x2e1 RETURNDATASIZE
0x2e2 PUSH1 0x0
0x2e4 REVERT
---
0x2dc: V181 = RETURNDATASIZE
0x2dd: V182 = 0x0
0x2e0: RETURNDATACOPY 0x0 0x0 V181
0x2e1: V183 = RETURNDATASIZE
0x2e2: V184 = 0x0
0x2e4: REVERT 0x0 V183
---
Entry stack: [V11, S2, V158, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, V158, V178]

================================

Block 0x2e5
[0x2e5:0x2e9]
---
Predecessors: [0x260]
Successors: []
---
0x2e5 JUMPDEST
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 STOP
---
0x2e5: JUMPDEST 
0x2e9: STOP 
---
Entry stack: [V11, S2, V158, V178]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ea
[0x2ea:0x2f1]
---
Predecessors: [0xd]
Successors: [0x2f2, 0x2f6]
---
0x2ea JUMPDEST
0x2eb CALLVALUE
0x2ec DUP1
0x2ed ISZERO
0x2ee PUSH2 0x2f6
0x2f1 JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V185 = CALLVALUE
0x2ed: V186 = ISZERO V185
0x2ee: V187 = 0x2f6
0x2f1: JUMPI 0x2f6 V186
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V185]
Exit stack: [V11, V185]

================================

Block 0x2f2
[0x2f2:0x2f5]
---
Predecessors: [0x2ea]
Successors: []
---
0x2f2 PUSH1 0x0
0x2f4 DUP1
0x2f5 REVERT
---
0x2f2: V188 = 0x0
0x2f5: REVERT 0x0 0x0
---
Entry stack: [V11, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V185]

================================

Block 0x2f6
[0x2f6:0x2fe]
---
Predecessors: [0x2ea]
Successors: [0x56a]
---
0x2f6 JUMPDEST
0x2f7 POP
0x2f8 PUSH2 0x2ff
0x2fb PUSH2 0x56a
0x2fe JUMP
---
0x2f6: JUMPDEST 
0x2f8: V189 = 0x2ff
0x2fb: V190 = 0x56a
0x2fe: JUMP 0x56a
---
Entry stack: [V11, V185]
Stack pops: 1
Stack additions: [0x2ff]
Exit stack: [V11, 0x2ff]

================================

Block 0x2ff
[0x2ff:0x314]
---
Predecessors: [0x56a]
Successors: []
---
0x2ff JUMPDEST
0x300 PUSH1 0x40
0x302 MLOAD
0x303 DUP1
0x304 DUP3
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x20
0x309 ADD
0x30a SWAP2
0x30b POP
0x30c POP
0x30d PUSH1 0x40
0x30f MLOAD
0x310 DUP1
0x311 SWAP2
0x312 SUB
0x313 SWAP1
0x314 RETURN
---
0x2ff: JUMPDEST 
0x300: V191 = 0x40
0x302: V192 = M[0x40]
0x306: M[V192] = V343
0x307: V193 = 0x20
0x309: V194 = ADD 0x20 V192
0x30d: V195 = 0x40
0x30f: V196 = M[0x40]
0x312: V197 = SUB V194 V196
0x314: RETURN V196 V197
---
Entry stack: [V11, 0x2ff, V343]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2ff]

================================

Block 0x315
[0x315:0x31c]
---
Predecessors: [0x41]
Successors: [0x31d, 0x321]
---
0x315 JUMPDEST
0x316 CALLVALUE
0x317 DUP1
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x315: JUMPDEST 
0x316: V198 = CALLVALUE
0x318: V199 = ISZERO V198
0x319: V200 = 0x321
0x31c: JUMPI 0x321 V199
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V198]
Exit stack: [V11, V198]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x315]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V201 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V11, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V198]

================================

Block 0x321
[0x321:0x329]
---
Predecessors: [0x315]
Successors: [0x570]
---
0x321 JUMPDEST
0x322 POP
0x323 PUSH2 0x32a
0x326 PUSH2 0x570
0x329 JUMP
---
0x321: JUMPDEST 
0x323: V202 = 0x32a
0x326: V203 = 0x570
0x329: JUMP 0x570
---
Entry stack: [V11, V198]
Stack pops: 1
Stack additions: [0x32a]
Exit stack: [V11, 0x32a]

================================

Block 0x32a
[0x32a:0x32b]
---
Predecessors: [0x5cb]
Successors: []
---
0x32a JUMPDEST
0x32b STOP
---
0x32a: JUMPDEST 
0x32b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x32c
[0x32c:0x333]
---
Predecessors: [0x4c]
Successors: [0x334, 0x338]
---
0x32c JUMPDEST
0x32d CALLVALUE
0x32e DUP1
0x32f ISZERO
0x330 PUSH2 0x338
0x333 JUMPI
---
0x32c: JUMPDEST 
0x32d: V204 = CALLVALUE
0x32f: V205 = ISZERO V204
0x330: V206 = 0x338
0x333: JUMPI 0x338 V205
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V204]
Exit stack: [V11, V204]

================================

Block 0x334
[0x334:0x337]
---
Predecessors: [0x32c]
Successors: []
---
0x334 PUSH1 0x0
0x336 DUP1
0x337 REVERT
---
0x334: V207 = 0x0
0x337: REVERT 0x0 0x0
---
Entry stack: [V11, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V204]

================================

Block 0x338
[0x338:0x340]
---
Predecessors: [0x32c]
Successors: [0x5d4]
---
0x338 JUMPDEST
0x339 POP
0x33a PUSH2 0x341
0x33d PUSH2 0x5d4
0x340 JUMP
---
0x338: JUMPDEST 
0x33a: V208 = 0x341
0x33d: V209 = 0x5d4
0x340: JUMP 0x5d4
---
Entry stack: [V11, V204]
Stack pops: 1
Stack additions: [0x341]
Exit stack: [V11, 0x341]

================================

Block 0x341
[0x341:0x382]
---
Predecessors: [0x5d4]
Successors: []
---
0x341 JUMPDEST
0x342 PUSH1 0x40
0x344 MLOAD
0x345 DUP1
0x346 DUP3
0x347 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35c AND
0x35d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x372 AND
0x373 DUP2
0x374 MSTORE
0x375 PUSH1 0x20
0x377 ADD
0x378 SWAP2
0x379 POP
0x37a POP
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP1
0x37f SWAP2
0x380 SUB
0x381 SWAP1
0x382 RETURN
---
0x341: JUMPDEST 
0x342: V210 = 0x40
0x344: V211 = M[0x40]
0x347: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x35d: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x372: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x374: M[V211] = V215
0x375: V216 = 0x20
0x377: V217 = ADD 0x20 V211
0x37b: V218 = 0x40
0x37d: V219 = M[0x40]
0x380: V220 = SUB V217 V219
0x382: RETURN V219 V220
---
Entry stack: [V11, 0x341, V370]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x341]

================================

Block 0x383
[0x383:0x38a]
---
Predecessors: [0x57]
Successors: [0x38b, 0x38f]
---
0x383 JUMPDEST
0x384 CALLVALUE
0x385 DUP1
0x386 ISZERO
0x387 PUSH2 0x38f
0x38a JUMPI
---
0x383: JUMPDEST 
0x384: V221 = CALLVALUE
0x386: V222 = ISZERO V221
0x387: V223 = 0x38f
0x38a: JUMPI 0x38f V222
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V221]
Exit stack: [V11, V221]

================================

Block 0x38b
[0x38b:0x38e]
---
Predecessors: [0x383]
Successors: []
---
0x38b PUSH1 0x0
0x38d DUP1
0x38e REVERT
---
0x38b: V224 = 0x0
0x38e: REVERT 0x0 0x0
---
Entry stack: [V11, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V221]

================================

Block 0x38f
[0x38f:0x397]
---
Predecessors: [0x383]
Successors: [0x5fa]
---
0x38f JUMPDEST
0x390 POP
0x391 PUSH2 0x398
0x394 PUSH2 0x5fa
0x397 JUMP
---
0x38f: JUMPDEST 
0x391: V225 = 0x398
0x394: V226 = 0x5fa
0x397: JUMP 0x5fa
---
Entry stack: [V11, V221]
Stack pops: 1
Stack additions: [0x398]
Exit stack: [V11, 0x398]

================================

Block 0x398
[0x398:0x3ad]
---
Predecessors: [0x5fa]
Successors: []
---
0x398 JUMPDEST
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d DUP3
0x39e DUP2
0x39f MSTORE
0x3a0 PUSH1 0x20
0x3a2 ADD
0x3a3 SWAP2
0x3a4 POP
0x3a5 POP
0x3a6 PUSH1 0x40
0x3a8 MLOAD
0x3a9 DUP1
0x3aa SWAP2
0x3ab SUB
0x3ac SWAP1
0x3ad RETURN
---
0x398: JUMPDEST 
0x399: V227 = 0x40
0x39b: V228 = M[0x40]
0x39f: M[V228] = V372
0x3a0: V229 = 0x20
0x3a2: V230 = ADD 0x20 V228
0x3a6: V231 = 0x40
0x3a8: V232 = M[0x40]
0x3ab: V233 = SUB V230 V232
0x3ad: RETURN V232 V233
---
Entry stack: [V11, 0x398, V372]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x398]

================================

Block 0x3ae
[0x3ae:0x3b5]
---
Predecessors: [0x62]
Successors: [0x3b6, 0x3ba]
---
0x3ae JUMPDEST
0x3af CALLVALUE
0x3b0 DUP1
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V234 = CALLVALUE
0x3b1: V235 = ISZERO V234
0x3b2: V236 = 0x3ba
0x3b5: JUMPI 0x3ba V235
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V234]
Exit stack: [V11, V234]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3ae]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V237 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V11, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V234]

================================

Block 0x3ba
[0x3ba:0x3c2]
---
Predecessors: [0x3ae]
Successors: [0x600]
---
0x3ba JUMPDEST
0x3bb POP
0x3bc PUSH2 0x3c3
0x3bf PUSH2 0x600
0x3c2 JUMP
---
0x3ba: JUMPDEST 
0x3bc: V238 = 0x3c3
0x3bf: V239 = 0x600
0x3c2: JUMP 0x600
---
Entry stack: [V11, V234]
Stack pops: 1
Stack additions: [0x3c3]
Exit stack: [V11, 0x3c3]

================================

Block 0x3c3
[0x3c3:0x3d8]
---
Predecessors: [0x600]
Successors: []
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 DUP1
0x3c8 DUP3
0x3c9 DUP2
0x3ca MSTORE
0x3cb PUSH1 0x20
0x3cd ADD
0x3ce SWAP2
0x3cf POP
0x3d0 POP
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 DUP1
0x3d5 SWAP2
0x3d6 SUB
0x3d7 SWAP1
0x3d8 RETURN
---
0x3c3: JUMPDEST 
0x3c4: V240 = 0x40
0x3c6: V241 = M[0x40]
0x3ca: M[V241] = V374
0x3cb: V242 = 0x20
0x3cd: V243 = ADD 0x20 V241
0x3d1: V244 = 0x40
0x3d3: V245 = M[0x40]
0x3d6: V246 = SUB V243 V245
0x3d8: RETURN V245 V246
---
Entry stack: [V11, 0x3c3, V374]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3c3]

================================

Block 0x3d9
[0x3d9:0x3e0]
---
Predecessors: [0x6d]
Successors: [0x3e1, 0x3e5]
---
0x3d9 JUMPDEST
0x3da CALLVALUE
0x3db DUP1
0x3dc ISZERO
0x3dd PUSH2 0x3e5
0x3e0 JUMPI
---
0x3d9: JUMPDEST 
0x3da: V247 = CALLVALUE
0x3dc: V248 = ISZERO V247
0x3dd: V249 = 0x3e5
0x3e0: JUMPI 0x3e5 V248
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V247]
Exit stack: [V11, V247]

================================

Block 0x3e1
[0x3e1:0x3e4]
---
Predecessors: [0x3d9]
Successors: []
---
0x3e1 PUSH1 0x0
0x3e3 DUP1
0x3e4 REVERT
---
0x3e1: V250 = 0x0
0x3e4: REVERT 0x0 0x0
---
Entry stack: [V11, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V247]

================================

Block 0x3e5
[0x3e5:0x3ed]
---
Predecessors: [0x3d9]
Successors: [0x606]
---
0x3e5 JUMPDEST
0x3e6 POP
0x3e7 PUSH2 0x3ee
0x3ea PUSH2 0x606
0x3ed JUMP
---
0x3e5: JUMPDEST 
0x3e7: V251 = 0x3ee
0x3ea: V252 = 0x606
0x3ed: JUMP 0x606
---
Entry stack: [V11, V247]
Stack pops: 1
Stack additions: [0x3ee]
Exit stack: [V11, 0x3ee]

================================

Block 0x3ee
[0x3ee:0x403]
---
Predecessors: [0x6f0]
Successors: []
---
0x3ee JUMPDEST
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 DUP1
0x3f3 DUP3
0x3f4 DUP2
0x3f5 MSTORE
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 SWAP2
0x3fa POP
0x3fb POP
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff DUP1
0x400 SWAP2
0x401 SUB
0x402 SWAP1
0x403 RETURN
---
0x3ee: JUMPDEST 
0x3ef: V253 = 0x40
0x3f1: V254 = M[0x40]
0x3f5: M[V254] = V430
0x3f6: V255 = 0x20
0x3f8: V256 = ADD 0x20 V254
0x3fc: V257 = 0x40
0x3fe: V258 = M[0x40]
0x401: V259 = SUB V256 V258
0x403: RETURN V258 V259
---
Entry stack: [V11, V430]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x404
[0x404:0x40b]
---
Predecessors: [0x78]
Successors: [0x40c, 0x410]
---
0x404 JUMPDEST
0x405 CALLVALUE
0x406 DUP1
0x407 ISZERO
0x408 PUSH2 0x410
0x40b JUMPI
---
0x404: JUMPDEST 
0x405: V260 = CALLVALUE
0x407: V261 = ISZERO V260
0x408: V262 = 0x410
0x40b: JUMPI 0x410 V261
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V260]
Exit stack: [V11, V260]

================================

Block 0x40c
[0x40c:0x40f]
---
Predecessors: [0x404]
Successors: []
---
0x40c PUSH1 0x0
0x40e DUP1
0x40f REVERT
---
0x40c: V263 = 0x0
0x40f: REVERT 0x0 0x0
---
Entry stack: [V11, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V260]

================================

Block 0x410
[0x410:0x418]
---
Predecessors: [0x404]
Successors: [0x70a]
---
0x410 JUMPDEST
0x411 POP
0x412 PUSH2 0x419
0x415 PUSH2 0x70a
0x418 JUMP
---
0x410: JUMPDEST 
0x412: V264 = 0x419
0x415: V265 = 0x70a
0x418: JUMP 0x70a
---
Entry stack: [V11, V260]
Stack pops: 1
Stack additions: [0x419]
Exit stack: [V11, 0x419]

================================

Block 0x419
[0x419:0x41a]
---
Predecessors: [0x95f]
Successors: []
---
0x419 JUMPDEST
0x41a STOP
---
0x419: JUMPDEST 
0x41a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x41b
[0x41b:0x422]
---
Predecessors: [0x83]
Successors: [0x423, 0x427]
---
0x41b JUMPDEST
0x41c CALLVALUE
0x41d DUP1
0x41e ISZERO
0x41f PUSH2 0x427
0x422 JUMPI
---
0x41b: JUMPDEST 
0x41c: V266 = CALLVALUE
0x41e: V267 = ISZERO V266
0x41f: V268 = 0x427
0x422: JUMPI 0x427 V267
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V266]
Exit stack: [V11, V266]

================================

Block 0x423
[0x423:0x426]
---
Predecessors: [0x41b]
Successors: []
---
0x423 PUSH1 0x0
0x425 DUP1
0x426 REVERT
---
0x423: V269 = 0x0
0x426: REVERT 0x0 0x0
---
Entry stack: [V11, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V266]

================================

Block 0x427
[0x427:0x42f]
---
Predecessors: [0x41b]
Successors: [0x965]
---
0x427 JUMPDEST
0x428 POP
0x429 PUSH2 0x430
0x42c PUSH2 0x965
0x42f JUMP
---
0x427: JUMPDEST 
0x429: V270 = 0x430
0x42c: V271 = 0x965
0x42f: JUMP 0x965
---
Entry stack: [V11, V266]
Stack pops: 1
Stack additions: [0x430]
Exit stack: [V11, 0x430]

================================

Block 0x430
[0x430:0x471]
---
Predecessors: [0x965]
Successors: []
---
0x430 JUMPDEST
0x431 PUSH1 0x40
0x433 MLOAD
0x434 DUP1
0x435 DUP3
0x436 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44b AND
0x44c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x461 AND
0x462 DUP2
0x463 MSTORE
0x464 PUSH1 0x20
0x466 ADD
0x467 SWAP2
0x468 POP
0x469 POP
0x46a PUSH1 0x40
0x46c MLOAD
0x46d DUP1
0x46e SWAP2
0x46f SUB
0x470 SWAP1
0x471 RETURN
---
0x430: JUMPDEST 
0x431: V272 = 0x40
0x433: V273 = M[0x40]
0x436: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x44b: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x44c: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x461: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x463: M[V273] = V277
0x464: V278 = 0x20
0x466: V279 = ADD 0x20 V273
0x46a: V280 = 0x40
0x46c: V281 = M[0x40]
0x46f: V282 = SUB V279 V281
0x471: RETURN V281 V282
---
Entry stack: [V11, 0x430, V569]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x430]

================================

Block 0x472
[0x472:0x479]
---
Predecessors: [0x8e]
Successors: [0x47a, 0x47e]
---
0x472 JUMPDEST
0x473 CALLVALUE
0x474 DUP1
0x475 ISZERO
0x476 PUSH2 0x47e
0x479 JUMPI
---
0x472: JUMPDEST 
0x473: V283 = CALLVALUE
0x475: V284 = ISZERO V283
0x476: V285 = 0x47e
0x479: JUMPI 0x47e V284
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V283]
Exit stack: [V11, V283]

================================

Block 0x47a
[0x47a:0x47d]
---
Predecessors: [0x472]
Successors: []
---
0x47a PUSH1 0x0
0x47c DUP1
0x47d REVERT
---
0x47a: V286 = 0x0
0x47d: REVERT 0x0 0x0
---
Entry stack: [V11, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V283]

================================

Block 0x47e
[0x47e:0x486]
---
Predecessors: [0x472]
Successors: [0x98a]
---
0x47e JUMPDEST
0x47f POP
0x480 PUSH2 0x487
0x483 PUSH2 0x98a
0x486 JUMP
---
0x47e: JUMPDEST 
0x480: V287 = 0x487
0x483: V288 = 0x98a
0x486: JUMP 0x98a
---
Entry stack: [V11, V283]
Stack pops: 1
Stack additions: [0x487]
Exit stack: [V11, 0x487]

================================

Block 0x487
[0x487:0x49c]
---
Predecessors: [0x98a]
Successors: []
---
0x487 JUMPDEST
0x488 PUSH1 0x40
0x48a MLOAD
0x48b DUP1
0x48c DUP3
0x48d DUP2
0x48e MSTORE
0x48f PUSH1 0x20
0x491 ADD
0x492 SWAP2
0x493 POP
0x494 POP
0x495 PUSH1 0x40
0x497 MLOAD
0x498 DUP1
0x499 SWAP2
0x49a SUB
0x49b SWAP1
0x49c RETURN
---
0x487: JUMPDEST 
0x488: V289 = 0x40
0x48a: V290 = M[0x40]
0x48e: M[V290] = V571
0x48f: V291 = 0x20
0x491: V292 = ADD 0x20 V290
0x495: V293 = 0x40
0x497: V294 = M[0x40]
0x49a: V295 = SUB V292 V294
0x49c: RETURN V294 V295
---
Entry stack: [V11, 0x487, V571]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x487]

================================

Block 0x49d
[0x49d:0x4a4]
---
Predecessors: [0x99]
Successors: [0x4a5, 0x4a9]
---
0x49d JUMPDEST
0x49e CALLVALUE
0x49f DUP1
0x4a0 ISZERO
0x4a1 PUSH2 0x4a9
0x4a4 JUMPI
---
0x49d: JUMPDEST 
0x49e: V296 = CALLVALUE
0x4a0: V297 = ISZERO V296
0x4a1: V298 = 0x4a9
0x4a4: JUMPI 0x4a9 V297
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V296]
Exit stack: [V11, V296]

================================

Block 0x4a5
[0x4a5:0x4a8]
---
Predecessors: [0x49d]
Successors: []
---
0x4a5 PUSH1 0x0
0x4a7 DUP1
0x4a8 REVERT
---
0x4a5: V299 = 0x0
0x4a8: REVERT 0x0 0x0
---
Entry stack: [V11, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V296]

================================

Block 0x4a9
[0x4a9:0x4b1]
---
Predecessors: [0x49d]
Successors: [0x990]
---
0x4a9 JUMPDEST
0x4aa POP
0x4ab PUSH2 0x4b2
0x4ae PUSH2 0x990
0x4b1 JUMP
---
0x4a9: JUMPDEST 
0x4ab: V300 = 0x4b2
0x4ae: V301 = 0x990
0x4b1: JUMP 0x990
---
Entry stack: [V11, V296]
Stack pops: 1
Stack additions: [0x4b2]
Exit stack: [V11, 0x4b2]

================================

Block 0x4b2
[0x4b2:0x4f3]
---
Predecessors: [0x990]
Successors: []
---
0x4b2 JUMPDEST
0x4b3 PUSH1 0x40
0x4b5 MLOAD
0x4b6 DUP1
0x4b7 DUP3
0x4b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cd AND
0x4ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e3 AND
0x4e4 DUP2
0x4e5 MSTORE
0x4e6 PUSH1 0x20
0x4e8 ADD
0x4e9 SWAP2
0x4ea POP
0x4eb POP
0x4ec PUSH1 0x40
0x4ee MLOAD
0x4ef DUP1
0x4f0 SWAP2
0x4f1 SUB
0x4f2 SWAP1
0x4f3 RETURN
---
0x4b2: JUMPDEST 
0x4b3: V302 = 0x40
0x4b5: V303 = M[0x40]
0x4b8: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x4ce: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x4e5: M[V303] = V307
0x4e6: V308 = 0x20
0x4e8: V309 = ADD 0x20 V303
0x4ec: V310 = 0x40
0x4ee: V311 = M[0x40]
0x4f1: V312 = SUB V309 V311
0x4f3: RETURN V311 V312
---
Entry stack: [V11, 0x4b2, V579]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4b2]

================================

Block 0x4f4
[0x4f4:0x4fb]
---
Predecessors: [0xa4]
Successors: [0x4fc, 0x500]
---
0x4f4 JUMPDEST
0x4f5 CALLVALUE
0x4f6 DUP1
0x4f7 ISZERO
0x4f8 PUSH2 0x500
0x4fb JUMPI
---
0x4f4: JUMPDEST 
0x4f5: V313 = CALLVALUE
0x4f7: V314 = ISZERO V313
0x4f8: V315 = 0x500
0x4fb: JUMPI 0x500 V314
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V313]
Exit stack: [V11, V313]

================================

Block 0x4fc
[0x4fc:0x4ff]
---
Predecessors: [0x4f4]
Successors: []
---
0x4fc PUSH1 0x0
0x4fe DUP1
0x4ff REVERT
---
0x4fc: V316 = 0x0
0x4ff: REVERT 0x0 0x0
---
Entry stack: [V11, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V313]

================================

Block 0x500
[0x500:0x534]
---
Predecessors: [0x4f4]
Successors: [0x9b6]
---
0x500 JUMPDEST
0x501 POP
0x502 PUSH2 0x535
0x505 PUSH1 0x4
0x507 DUP1
0x508 CALLDATASIZE
0x509 SUB
0x50a DUP2
0x50b ADD
0x50c SWAP1
0x50d DUP1
0x50e DUP1
0x50f CALLDATALOAD
0x510 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x525 AND
0x526 SWAP1
0x527 PUSH1 0x20
0x529 ADD
0x52a SWAP1
0x52b SWAP3
0x52c SWAP2
0x52d SWAP1
0x52e POP
0x52f POP
0x530 POP
0x531 PUSH2 0x9b6
0x534 JUMP
---
0x500: JUMPDEST 
0x502: V317 = 0x535
0x505: V318 = 0x4
0x508: V319 = CALLDATASIZE
0x509: V320 = SUB V319 0x4
0x50b: V321 = ADD 0x4 V320
0x50f: V322 = CALLDATALOAD 0x4
0x510: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x525: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x527: V325 = 0x20
0x529: V326 = ADD 0x20 0x4
0x531: V327 = 0x9b6
0x534: JUMP 0x9b6
---
Entry stack: [V11, V313]
Stack pops: 1
Stack additions: [0x535, V324]
Exit stack: [V11, 0x535, V324]

================================

Block 0x535
[0x535:0x536]
---
Predecessors: [0xa11]
Successors: []
---
0x535 JUMPDEST
0x536 STOP
---
0x535: JUMPDEST 
0x536: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x537
[0x537:0x53e]
---
Predecessors: [0xaf]
Successors: [0x53f, 0x543]
---
0x537 JUMPDEST
0x538 CALLVALUE
0x539 DUP1
0x53a ISZERO
0x53b PUSH2 0x543
0x53e JUMPI
---
0x537: JUMPDEST 
0x538: V328 = CALLVALUE
0x53a: V329 = ISZERO V328
0x53b: V330 = 0x543
0x53e: JUMPI 0x543 V329
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V328]
Exit stack: [V11, V328]

================================

Block 0x53f
[0x53f:0x542]
---
Predecessors: [0x537]
Successors: []
---
0x53f PUSH1 0x0
0x541 DUP1
0x542 REVERT
---
0x53f: V331 = 0x0
0x542: REVERT 0x0 0x0
---
Entry stack: [V11, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V328]

================================

Block 0x543
[0x543:0x54b]
---
Predecessors: [0x537]
Successors: [0xad0]
---
0x543 JUMPDEST
0x544 POP
0x545 PUSH2 0x54c
0x548 PUSH2 0xad0
0x54b JUMP
---
0x543: JUMPDEST 
0x545: V332 = 0x54c
0x548: V333 = 0xad0
0x54b: JUMP 0xad0
---
Entry stack: [V11, V328]
Stack pops: 1
Stack additions: [0x54c]
Exit stack: [V11, 0x54c]

================================

Block 0x54c
[0x54c:0x54d]
---
Predecessors: [0xbae]
Successors: []
---
0x54c JUMPDEST
0x54d STOP
---
0x54c: JUMPDEST 
0x54d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x54e
[0x54e:0x55f]
---
Predecessors: [0xfb]
Successors: [0x560, 0x564]
---
0x54e JUMPDEST
0x54f PUSH1 0x0
0x551 DUP2
0x552 DUP4
0x553 ADD
0x554 SWAP1
0x555 POP
0x556 DUP3
0x557 DUP2
0x558 LT
0x559 ISZERO
0x55a ISZERO
0x55b ISZERO
0x55c PUSH2 0x564
0x55f JUMPI
---
0x54e: JUMPDEST 
0x54f: V334 = 0x0
0x553: V335 = ADD V93 S0
0x558: V336 = LT V335 V93
0x559: V337 = ISZERO V336
0x55a: V338 = ISZERO V337
0x55b: V339 = ISZERO V338
0x55c: V340 = 0x564
0x55f: JUMPI 0x564 V339
---
Entry stack: [V11, S4, 0x0, 0x144, V93, S0]
Stack pops: 2
Stack additions: [S1, S0, V335]
Exit stack: [V11, S4, 0x0, 0x144, V93, S0, V335]

================================

Block 0x560
[0x560:0x563]
---
Predecessors: [0x54e]
Successors: []
---
0x560 PUSH1 0x0
0x562 DUP1
0x563 REVERT
---
0x560: V341 = 0x0
0x563: REVERT 0x0 0x0
---
Entry stack: [V11, S5, 0x0, 0x144, V93, S1, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, 0x0, 0x144, V93, S1, V335]

================================

Block 0x564
[0x564:0x569]
---
Predecessors: [0x54e]
Successors: [0x144]
---
0x564 JUMPDEST
0x565 SWAP3
0x566 SWAP2
0x567 POP
0x568 POP
0x569 JUMP
---
0x564: JUMPDEST 
0x569: JUMP 0x144
---
Entry stack: [V11, S5, 0x0, 0x144, V93, S1, V335]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, S5, 0x0, V335]

================================

Block 0x56a
[0x56a:0x56f]
---
Predecessors: [0x2f6]
Successors: [0x2ff]
---
0x56a JUMPDEST
0x56b PUSH1 0x2
0x56d SLOAD
0x56e DUP2
0x56f JUMP
---
0x56a: JUMPDEST 
0x56b: V342 = 0x2
0x56d: V343 = S[0x2]
0x56f: JUMP 0x2ff
---
Entry stack: [V11, 0x2ff]
Stack pops: 1
Stack additions: [S0, V343]
Exit stack: [V11, 0x2ff, V343]

================================

Block 0x570
[0x570:0x5c6]
---
Predecessors: [0x321]
Successors: [0x5c7, 0x5cb]
---
0x570 JUMPDEST
0x571 PUSH1 0x0
0x573 DUP1
0x574 SWAP1
0x575 SLOAD
0x576 SWAP1
0x577 PUSH2 0x100
0x57a EXP
0x57b SWAP1
0x57c DIV
0x57d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x592 AND
0x593 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a8 AND
0x5a9 CALLER
0x5aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bf AND
0x5c0 EQ
0x5c1 ISZERO
0x5c2 ISZERO
0x5c3 PUSH2 0x5cb
0x5c6 JUMPI
---
0x570: JUMPDEST 
0x571: V344 = 0x0
0x575: V345 = S[0x0]
0x577: V346 = 0x100
0x57a: V347 = EXP 0x100 0x0
0x57c: V348 = DIV V345 0x1
0x57d: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x592: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x593: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x5a9: V353 = CALLER
0x5aa: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bf: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x5c0: V356 = EQ V355 V352
0x5c1: V357 = ISZERO V356
0x5c2: V358 = ISZERO V357
0x5c3: V359 = 0x5cb
0x5c6: JUMPI 0x5cb V358
---
Entry stack: [V11, 0x32a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x32a]

================================

Block 0x5c7
[0x5c7:0x5ca]
---
Predecessors: [0x570]
Successors: []
---
0x5c7 PUSH1 0x0
0x5c9 DUP1
0x5ca REVERT
---
0x5c7: V360 = 0x0
0x5ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x32a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x32a]

================================

Block 0x5cb
[0x5cb:0x5d3]
---
Predecessors: [0x570]
Successors: [0x32a]
---
0x5cb JUMPDEST
0x5cc TIMESTAMP
0x5cd PUSH1 0x4
0x5cf DUP2
0x5d0 SWAP1
0x5d1 SSTORE
0x5d2 POP
0x5d3 JUMP
---
0x5cb: JUMPDEST 
0x5cc: V361 = TIMESTAMP
0x5cd: V362 = 0x4
0x5d1: S[0x4] = V361
0x5d3: JUMP 0x32a
---
Entry stack: [V11, 0x32a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5d4
[0x5d4:0x5f9]
---
Predecessors: [0x338]
Successors: [0x341]
---
0x5d4 JUMPDEST
0x5d5 PUSH1 0x5
0x5d7 PUSH1 0x0
0x5d9 SWAP1
0x5da SLOAD
0x5db SWAP1
0x5dc PUSH2 0x100
0x5df EXP
0x5e0 SWAP1
0x5e1 DIV
0x5e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f7 AND
0x5f8 DUP2
0x5f9 JUMP
---
0x5d4: JUMPDEST 
0x5d5: V363 = 0x5
0x5d7: V364 = 0x0
0x5da: V365 = S[0x5]
0x5dc: V366 = 0x100
0x5df: V367 = EXP 0x100 0x0
0x5e1: V368 = DIV V365 0x1
0x5e2: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f7: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x5f9: JUMP 0x341
---
Entry stack: [V11, 0x341]
Stack pops: 1
Stack additions: [S0, V370]
Exit stack: [V11, 0x341, V370]

================================

Block 0x5fa
[0x5fa:0x5ff]
---
Predecessors: [0x38f]
Successors: [0x398]
---
0x5fa JUMPDEST
0x5fb PUSH1 0x6
0x5fd SLOAD
0x5fe DUP2
0x5ff JUMP
---
0x5fa: JUMPDEST 
0x5fb: V371 = 0x6
0x5fd: V372 = S[0x6]
0x5ff: JUMP 0x398
---
Entry stack: [V11, 0x398]
Stack pops: 1
Stack additions: [S0, V372]
Exit stack: [V11, 0x398, V372]

================================

Block 0x600
[0x600:0x605]
---
Predecessors: [0x3ba]
Successors: [0x3c3]
---
0x600 JUMPDEST
0x601 PUSH1 0x3
0x603 SLOAD
0x604 DUP2
0x605 JUMP
---
0x600: JUMPDEST 
0x601: V373 = 0x3
0x603: V374 = S[0x3]
0x605: JUMP 0x3c3
---
Entry stack: [V11, 0x3c3]
Stack pops: 1
Stack additions: [S0, V374]
Exit stack: [V11, 0x3c3, V374]

================================

Block 0x606
[0x606:0x6c1]
---
Predecessors: [0x3e5]
Successors: [0x6c2, 0x6c6]
---
0x606 JUMPDEST
0x607 PUSH1 0x0
0x609 DUP1
0x60a PUSH1 0x5
0x60c PUSH1 0x0
0x60e SWAP1
0x60f SLOAD
0x610 SWAP1
0x611 PUSH2 0x100
0x614 EXP
0x615 SWAP1
0x616 DIV
0x617 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62c AND
0x62d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x642 AND
0x643 PUSH4 0x70a08231
0x648 ADDRESS
0x649 PUSH1 0x40
0x64b MLOAD
0x64c DUP3
0x64d PUSH4 0xffffffff
0x652 AND
0x653 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x671 MUL
0x672 DUP2
0x673 MSTORE
0x674 PUSH1 0x4
0x676 ADD
0x677 DUP1
0x678 DUP3
0x679 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68e AND
0x68f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a4 AND
0x6a5 DUP2
0x6a6 MSTORE
0x6a7 PUSH1 0x20
0x6a9 ADD
0x6aa SWAP2
0x6ab POP
0x6ac POP
0x6ad PUSH1 0x20
0x6af PUSH1 0x40
0x6b1 MLOAD
0x6b2 DUP1
0x6b3 DUP4
0x6b4 SUB
0x6b5 DUP2
0x6b6 PUSH1 0x0
0x6b8 DUP8
0x6b9 DUP1
0x6ba EXTCODESIZE
0x6bb ISZERO
0x6bc DUP1
0x6bd ISZERO
0x6be PUSH2 0x6c6
0x6c1 JUMPI
---
0x606: JUMPDEST 
0x607: V375 = 0x0
0x60a: V376 = 0x5
0x60c: V377 = 0x0
0x60f: V378 = S[0x5]
0x611: V379 = 0x100
0x614: V380 = EXP 0x100 0x0
0x616: V381 = DIV V378 0x1
0x617: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x62c: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x62d: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x642: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x643: V386 = 0x70a08231
0x648: V387 = ADDRESS
0x649: V388 = 0x40
0x64b: V389 = M[0x40]
0x64d: V390 = 0xffffffff
0x652: V391 = AND 0xffffffff 0x70a08231
0x653: V392 = 0x100000000000000000000000000000000000000000000000000000000
0x671: V393 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x673: M[V389] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x674: V394 = 0x4
0x676: V395 = ADD 0x4 V389
0x679: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x68e: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x68f: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a4: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x6a6: M[V395] = V399
0x6a7: V400 = 0x20
0x6a9: V401 = ADD 0x20 V395
0x6ad: V402 = 0x20
0x6af: V403 = 0x40
0x6b1: V404 = M[0x40]
0x6b4: V405 = SUB V401 V404
0x6b6: V406 = 0x0
0x6ba: V407 = EXTCODESIZE V385
0x6bb: V408 = ISZERO V407
0x6bd: V409 = ISZERO V408
0x6be: V410 = 0x6c6
0x6c1: JUMPI 0x6c6 V409
---
Entry stack: [V11, 0x3ee]
Stack pops: 0
Stack additions: [0x0, 0x0, V385, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V385, V408]
Exit stack: [V11, 0x3ee, 0x0, 0x0, V385, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V385, V408]

================================

Block 0x6c2
[0x6c2:0x6c5]
---
Predecessors: [0x606]
Successors: []
---
0x6c2 PUSH1 0x0
0x6c4 DUP1
0x6c5 REVERT
---
0x6c2: V411 = 0x0
0x6c5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3ee, 0x0, 0x0, V385, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V385, V408]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3ee, 0x0, 0x0, V385, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V385, V408]

================================

Block 0x6c6
[0x6c6:0x6d0]
---
Predecessors: [0x606]
Successors: [0x6d1, 0x6da]
---
0x6c6 JUMPDEST
0x6c7 POP
0x6c8 GAS
0x6c9 CALL
0x6ca ISZERO
0x6cb DUP1
0x6cc ISZERO
0x6cd PUSH2 0x6da
0x6d0 JUMPI
---
0x6c6: JUMPDEST 
0x6c8: V412 = GAS
0x6c9: V413 = CALL V412 V385 0x0 V404 V405 V404 0x20
0x6ca: V414 = ISZERO V413
0x6cc: V415 = ISZERO V414
0x6cd: V416 = 0x6da
0x6d0: JUMPI 0x6da V415
---
Entry stack: [V11, 0x3ee, 0x0, 0x0, V385, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V385, V408]
Stack pops: 7
Stack additions: [V414]
Exit stack: [V11, 0x3ee, 0x0, 0x0, V385, 0x70a08231, V401, V414]

================================

Block 0x6d1
[0x6d1:0x6d9]
---
Predecessors: [0x6c6]
Successors: []
---
0x6d1 RETURNDATASIZE
0x6d2 PUSH1 0x0
0x6d4 DUP1
0x6d5 RETURNDATACOPY
0x6d6 RETURNDATASIZE
0x6d7 PUSH1 0x0
0x6d9 REVERT
---
0x6d1: V417 = RETURNDATASIZE
0x6d2: V418 = 0x0
0x6d5: RETURNDATACOPY 0x0 0x0 V417
0x6d6: V419 = RETURNDATASIZE
0x6d7: V420 = 0x0
0x6d9: REVERT 0x0 V419
---
Entry stack: [V11, 0x3ee, 0x0, 0x0, V385, 0x70a08231, V401, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3ee, 0x0, 0x0, V385, 0x70a08231, V401, V414]

================================

Block 0x6da
[0x6da:0x6eb]
---
Predecessors: [0x6c6]
Successors: [0x6ec, 0x6f0]
---
0x6da JUMPDEST
0x6db POP
0x6dc POP
0x6dd POP
0x6de POP
0x6df PUSH1 0x40
0x6e1 MLOAD
0x6e2 RETURNDATASIZE
0x6e3 PUSH1 0x20
0x6e5 DUP2
0x6e6 LT
0x6e7 ISZERO
0x6e8 PUSH2 0x6f0
0x6eb JUMPI
---
0x6da: JUMPDEST 
0x6df: V421 = 0x40
0x6e1: V422 = M[0x40]
0x6e2: V423 = RETURNDATASIZE
0x6e3: V424 = 0x20
0x6e6: V425 = LT V423 0x20
0x6e7: V426 = ISZERO V425
0x6e8: V427 = 0x6f0
0x6eb: JUMPI 0x6f0 V426
---
Entry stack: [V11, 0x3ee, 0x0, 0x0, V385, 0x70a08231, V401, V414]
Stack pops: 4
Stack additions: [V422, V423]
Exit stack: [V11, 0x3ee, 0x0, 0x0, V422, V423]

================================

Block 0x6ec
[0x6ec:0x6ef]
---
Predecessors: [0x6da]
Successors: []
---
0x6ec PUSH1 0x0
0x6ee DUP1
0x6ef REVERT
---
0x6ec: V428 = 0x0
0x6ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3ee, 0x0, 0x0, V422, V423]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3ee, 0x0, 0x0, V422, V423]

================================

Block 0x6f0
[0x6f0:0x709]
---
Predecessors: [0x6da]
Successors: [0x3ee]
---
0x6f0 JUMPDEST
0x6f1 DUP2
0x6f2 ADD
0x6f3 SWAP1
0x6f4 DUP1
0x6f5 DUP1
0x6f6 MLOAD
0x6f7 SWAP1
0x6f8 PUSH1 0x20
0x6fa ADD
0x6fb SWAP1
0x6fc SWAP3
0x6fd SWAP2
0x6fe SWAP1
0x6ff POP
0x700 POP
0x701 POP
0x702 SWAP1
0x703 POP
0x704 DUP1
0x705 SWAP2
0x706 POP
0x707 POP
0x708 SWAP1
0x709 JUMP
---
0x6f0: JUMPDEST 
0x6f2: V429 = ADD V422 V423
0x6f6: V430 = M[V422]
0x6f8: V431 = 0x20
0x6fa: V432 = ADD 0x20 V422
0x709: JUMP 0x3ee
---
Entry stack: [V11, 0x3ee, 0x0, 0x0, V422, V423]
Stack pops: 5
Stack additions: [V430]
Exit stack: [V11, V430]

================================

Block 0x70a
[0x70a:0x760]
---
Predecessors: [0x410]
Successors: [0x761, 0x765]
---
0x70a JUMPDEST
0x70b PUSH1 0x0
0x70d DUP1
0x70e SWAP1
0x70f SLOAD
0x710 SWAP1
0x711 PUSH2 0x100
0x714 EXP
0x715 SWAP1
0x716 DIV
0x717 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72c AND
0x72d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x742 AND
0x743 CALLER
0x744 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x759 AND
0x75a EQ
0x75b ISZERO
0x75c ISZERO
0x75d PUSH2 0x765
0x760 JUMPI
---
0x70a: JUMPDEST 
0x70b: V433 = 0x0
0x70f: V434 = S[0x0]
0x711: V435 = 0x100
0x714: V436 = EXP 0x100 0x0
0x716: V437 = DIV V434 0x1
0x717: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x72c: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x72d: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x742: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x743: V442 = CALLER
0x744: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x759: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x75a: V445 = EQ V444 V441
0x75b: V446 = ISZERO V445
0x75c: V447 = ISZERO V446
0x75d: V448 = 0x765
0x760: JUMPI 0x765 V447
---
Entry stack: [V11, 0x419]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x419]

================================

Block 0x761
[0x761:0x764]
---
Predecessors: [0x70a]
Successors: []
---
0x761 PUSH1 0x0
0x763 DUP1
0x764 REVERT
---
0x761: V449 = 0x0
0x764: REVERT 0x0 0x0
---
Entry stack: [V11, 0x419]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x419]

================================

Block 0x765
[0x765:0x81d]
---
Predecessors: [0x70a]
Successors: [0x81e, 0x822]
---
0x765 JUMPDEST
0x766 PUSH1 0x5
0x768 PUSH1 0x0
0x76a SWAP1
0x76b SLOAD
0x76c SWAP1
0x76d PUSH2 0x100
0x770 EXP
0x771 SWAP1
0x772 DIV
0x773 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x788 AND
0x789 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79e AND
0x79f PUSH4 0x70a08231
0x7a4 ADDRESS
0x7a5 PUSH1 0x40
0x7a7 MLOAD
0x7a8 DUP3
0x7a9 PUSH4 0xffffffff
0x7ae AND
0x7af PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7cd MUL
0x7ce DUP2
0x7cf MSTORE
0x7d0 PUSH1 0x4
0x7d2 ADD
0x7d3 DUP1
0x7d4 DUP3
0x7d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ea AND
0x7eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x800 AND
0x801 DUP2
0x802 MSTORE
0x803 PUSH1 0x20
0x805 ADD
0x806 SWAP2
0x807 POP
0x808 POP
0x809 PUSH1 0x20
0x80b PUSH1 0x40
0x80d MLOAD
0x80e DUP1
0x80f DUP4
0x810 SUB
0x811 DUP2
0x812 PUSH1 0x0
0x814 DUP8
0x815 DUP1
0x816 EXTCODESIZE
0x817 ISZERO
0x818 DUP1
0x819 ISZERO
0x81a PUSH2 0x822
0x81d JUMPI
---
0x765: JUMPDEST 
0x766: V450 = 0x5
0x768: V451 = 0x0
0x76b: V452 = S[0x5]
0x76d: V453 = 0x100
0x770: V454 = EXP 0x100 0x0
0x772: V455 = DIV V452 0x1
0x773: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x788: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x789: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x79e: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x79f: V460 = 0x70a08231
0x7a4: V461 = ADDRESS
0x7a5: V462 = 0x40
0x7a7: V463 = M[0x40]
0x7a9: V464 = 0xffffffff
0x7ae: V465 = AND 0xffffffff 0x70a08231
0x7af: V466 = 0x100000000000000000000000000000000000000000000000000000000
0x7cd: V467 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x7cf: M[V463] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7d0: V468 = 0x4
0x7d2: V469 = ADD 0x4 V463
0x7d5: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ea: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x7eb: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x800: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x802: M[V469] = V473
0x803: V474 = 0x20
0x805: V475 = ADD 0x20 V469
0x809: V476 = 0x20
0x80b: V477 = 0x40
0x80d: V478 = M[0x40]
0x810: V479 = SUB V475 V478
0x812: V480 = 0x0
0x816: V481 = EXTCODESIZE V459
0x817: V482 = ISZERO V481
0x819: V483 = ISZERO V482
0x81a: V484 = 0x822
0x81d: JUMPI 0x822 V483
---
Entry stack: [V11, 0x419]
Stack pops: 0
Stack additions: [V459, 0x70a08231, V475, 0x20, V478, V479, V478, 0x0, V459, V482]
Exit stack: [V11, 0x419, V459, 0x70a08231, V475, 0x20, V478, V479, V478, 0x0, V459, V482]

================================

Block 0x81e
[0x81e:0x821]
---
Predecessors: [0x765]
Successors: []
---
0x81e PUSH1 0x0
0x820 DUP1
0x821 REVERT
---
0x81e: V485 = 0x0
0x821: REVERT 0x0 0x0
---
Entry stack: [V11, 0x419, V459, 0x70a08231, V475, 0x20, V478, V479, V478, 0x0, V459, V482]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x419, V459, 0x70a08231, V475, 0x20, V478, V479, V478, 0x0, V459, V482]

================================

Block 0x822
[0x822:0x82c]
---
Predecessors: [0x765]
Successors: [0x82d, 0x836]
---
0x822 JUMPDEST
0x823 POP
0x824 GAS
0x825 CALL
0x826 ISZERO
0x827 DUP1
0x828 ISZERO
0x829 PUSH2 0x836
0x82c JUMPI
---
0x822: JUMPDEST 
0x824: V486 = GAS
0x825: V487 = CALL V486 V459 0x0 V478 V479 V478 0x20
0x826: V488 = ISZERO V487
0x828: V489 = ISZERO V488
0x829: V490 = 0x836
0x82c: JUMPI 0x836 V489
---
Entry stack: [V11, 0x419, V459, 0x70a08231, V475, 0x20, V478, V479, V478, 0x0, V459, V482]
Stack pops: 7
Stack additions: [V488]
Exit stack: [V11, 0x419, V459, 0x70a08231, V475, V488]

================================

Block 0x82d
[0x82d:0x835]
---
Predecessors: [0x822]
Successors: []
---
0x82d RETURNDATASIZE
0x82e PUSH1 0x0
0x830 DUP1
0x831 RETURNDATACOPY
0x832 RETURNDATASIZE
0x833 PUSH1 0x0
0x835 REVERT
---
0x82d: V491 = RETURNDATASIZE
0x82e: V492 = 0x0
0x831: RETURNDATACOPY 0x0 0x0 V491
0x832: V493 = RETURNDATASIZE
0x833: V494 = 0x0
0x835: REVERT 0x0 V493
---
Entry stack: [V11, 0x419, V459, 0x70a08231, V475, V488]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x419, V459, 0x70a08231, V475, V488]

================================

Block 0x836
[0x836:0x847]
---
Predecessors: [0x822]
Successors: [0x848, 0x84c]
---
0x836 JUMPDEST
0x837 POP
0x838 POP
0x839 POP
0x83a POP
0x83b PUSH1 0x40
0x83d MLOAD
0x83e RETURNDATASIZE
0x83f PUSH1 0x20
0x841 DUP2
0x842 LT
0x843 ISZERO
0x844 PUSH2 0x84c
0x847 JUMPI
---
0x836: JUMPDEST 
0x83b: V495 = 0x40
0x83d: V496 = M[0x40]
0x83e: V497 = RETURNDATASIZE
0x83f: V498 = 0x20
0x842: V499 = LT V497 0x20
0x843: V500 = ISZERO V499
0x844: V501 = 0x84c
0x847: JUMPI 0x84c V500
---
Entry stack: [V11, 0x419, V459, 0x70a08231, V475, V488]
Stack pops: 4
Stack additions: [V496, V497]
Exit stack: [V11, 0x419, V496, V497]

================================

Block 0x848
[0x848:0x84b]
---
Predecessors: [0x836]
Successors: []
---
0x848 PUSH1 0x0
0x84a DUP1
0x84b REVERT
---
0x848: V502 = 0x0
0x84b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x419, V496, V497]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x419, V496, V497]

================================

Block 0x84c
[0x84c:0x946]
---
Predecessors: [0x836]
Successors: [0x947, 0x94b]
---
0x84c JUMPDEST
0x84d DUP2
0x84e ADD
0x84f SWAP1
0x850 DUP1
0x851 DUP1
0x852 MLOAD
0x853 SWAP1
0x854 PUSH1 0x20
0x856 ADD
0x857 SWAP1
0x858 SWAP3
0x859 SWAP2
0x85a SWAP1
0x85b POP
0x85c POP
0x85d POP
0x85e PUSH1 0x6
0x860 DUP2
0x861 SWAP1
0x862 SSTORE
0x863 POP
0x864 PUSH1 0x5
0x866 PUSH1 0x0
0x868 SWAP1
0x869 SLOAD
0x86a SWAP1
0x86b PUSH2 0x100
0x86e EXP
0x86f SWAP1
0x870 DIV
0x871 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x886 AND
0x887 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89c AND
0x89d PUSH4 0xa9059cbb
0x8a2 PUSH1 0x0
0x8a4 DUP1
0x8a5 SWAP1
0x8a6 SLOAD
0x8a7 SWAP1
0x8a8 PUSH2 0x100
0x8ab EXP
0x8ac SWAP1
0x8ad DIV
0x8ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c3 AND
0x8c4 PUSH1 0x6
0x8c6 SLOAD
0x8c7 PUSH1 0x40
0x8c9 MLOAD
0x8ca DUP4
0x8cb PUSH4 0xffffffff
0x8d0 AND
0x8d1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8ef MUL
0x8f0 DUP2
0x8f1 MSTORE
0x8f2 PUSH1 0x4
0x8f4 ADD
0x8f5 DUP1
0x8f6 DUP4
0x8f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90c AND
0x90d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x922 AND
0x923 DUP2
0x924 MSTORE
0x925 PUSH1 0x20
0x927 ADD
0x928 DUP3
0x929 DUP2
0x92a MSTORE
0x92b PUSH1 0x20
0x92d ADD
0x92e SWAP3
0x92f POP
0x930 POP
0x931 POP
0x932 PUSH1 0x0
0x934 PUSH1 0x40
0x936 MLOAD
0x937 DUP1
0x938 DUP4
0x939 SUB
0x93a DUP2
0x93b PUSH1 0x0
0x93d DUP8
0x93e DUP1
0x93f EXTCODESIZE
0x940 ISZERO
0x941 DUP1
0x942 ISZERO
0x943 PUSH2 0x94b
0x946 JUMPI
---
0x84c: JUMPDEST 
0x84e: V503 = ADD V496 V497
0x852: V504 = M[V496]
0x854: V505 = 0x20
0x856: V506 = ADD 0x20 V496
0x85e: V507 = 0x6
0x862: S[0x6] = V504
0x864: V508 = 0x5
0x866: V509 = 0x0
0x869: V510 = S[0x5]
0x86b: V511 = 0x100
0x86e: V512 = EXP 0x100 0x0
0x870: V513 = DIV V510 0x1
0x871: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x886: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x887: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x89c: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x89d: V518 = 0xa9059cbb
0x8a2: V519 = 0x0
0x8a6: V520 = S[0x0]
0x8a8: V521 = 0x100
0x8ab: V522 = EXP 0x100 0x0
0x8ad: V523 = DIV V520 0x1
0x8ae: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c3: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x8c4: V526 = 0x6
0x8c6: V527 = S[0x6]
0x8c7: V528 = 0x40
0x8c9: V529 = M[0x40]
0x8cb: V530 = 0xffffffff
0x8d0: V531 = AND 0xffffffff 0xa9059cbb
0x8d1: V532 = 0x100000000000000000000000000000000000000000000000000000000
0x8ef: V533 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x8f1: M[V529] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8f2: V534 = 0x4
0x8f4: V535 = ADD 0x4 V529
0x8f7: V536 = 0xffffffffffffffffffffffffffffffffffffffff
0x90c: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x90d: V538 = 0xffffffffffffffffffffffffffffffffffffffff
0x922: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x924: M[V535] = V539
0x925: V540 = 0x20
0x927: V541 = ADD 0x20 V535
0x92a: M[V541] = V527
0x92b: V542 = 0x20
0x92d: V543 = ADD 0x20 V541
0x932: V544 = 0x0
0x934: V545 = 0x40
0x936: V546 = M[0x40]
0x939: V547 = SUB V543 V546
0x93b: V548 = 0x0
0x93f: V549 = EXTCODESIZE V517
0x940: V550 = ISZERO V549
0x942: V551 = ISZERO V550
0x943: V552 = 0x94b
0x946: JUMPI 0x94b V551
---
Entry stack: [V11, 0x419, V496, V497]
Stack pops: 2
Stack additions: [V517, 0xa9059cbb, V543, 0x0, V546, V547, V546, 0x0, V517, V550]
Exit stack: [V11, 0x419, V517, 0xa9059cbb, V543, 0x0, V546, V547, V546, 0x0, V517, V550]

================================

Block 0x947
[0x947:0x94a]
---
Predecessors: [0x84c]
Successors: []
---
0x947 PUSH1 0x0
0x949 DUP1
0x94a REVERT
---
0x947: V553 = 0x0
0x94a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x419, V517, 0xa9059cbb, V543, 0x0, V546, V547, V546, 0x0, V517, V550]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x419, V517, 0xa9059cbb, V543, 0x0, V546, V547, V546, 0x0, V517, V550]

================================

Block 0x94b
[0x94b:0x955]
---
Predecessors: [0x84c]
Successors: [0x956, 0x95f]
---
0x94b JUMPDEST
0x94c POP
0x94d GAS
0x94e CALL
0x94f ISZERO
0x950 DUP1
0x951 ISZERO
0x952 PUSH2 0x95f
0x955 JUMPI
---
0x94b: JUMPDEST 
0x94d: V554 = GAS
0x94e: V555 = CALL V554 V517 0x0 V546 V547 V546 0x0
0x94f: V556 = ISZERO V555
0x951: V557 = ISZERO V556
0x952: V558 = 0x95f
0x955: JUMPI 0x95f V557
---
Entry stack: [V11, 0x419, V517, 0xa9059cbb, V543, 0x0, V546, V547, V546, 0x0, V517, V550]
Stack pops: 7
Stack additions: [V556]
Exit stack: [V11, 0x419, V517, 0xa9059cbb, V543, V556]

================================

Block 0x956
[0x956:0x95e]
---
Predecessors: [0x94b]
Successors: []
---
0x956 RETURNDATASIZE
0x957 PUSH1 0x0
0x959 DUP1
0x95a RETURNDATACOPY
0x95b RETURNDATASIZE
0x95c PUSH1 0x0
0x95e REVERT
---
0x956: V559 = RETURNDATASIZE
0x957: V560 = 0x0
0x95a: RETURNDATACOPY 0x0 0x0 V559
0x95b: V561 = RETURNDATASIZE
0x95c: V562 = 0x0
0x95e: REVERT 0x0 V561
---
Entry stack: [V11, 0x419, V517, 0xa9059cbb, V543, V556]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x419, V517, 0xa9059cbb, V543, V556]

================================

Block 0x95f
[0x95f:0x964]
---
Predecessors: [0x94b]
Successors: [0x419]
---
0x95f JUMPDEST
0x960 POP
0x961 POP
0x962 POP
0x963 POP
0x964 JUMP
---
0x95f: JUMPDEST 
0x964: JUMP 0x419
---
Entry stack: [V11, 0x419, V517, 0xa9059cbb, V543, V556]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x965
[0x965:0x989]
---
Predecessors: [0x427]
Successors: [0x430]
---
0x965 JUMPDEST
0x966 PUSH1 0x0
0x968 DUP1
0x969 SWAP1
0x96a SLOAD
0x96b SWAP1
0x96c PUSH2 0x100
0x96f EXP
0x970 SWAP1
0x971 DIV
0x972 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x987 AND
0x988 DUP2
0x989 JUMP
---
0x965: JUMPDEST 
0x966: V563 = 0x0
0x96a: V564 = S[0x0]
0x96c: V565 = 0x100
0x96f: V566 = EXP 0x100 0x0
0x971: V567 = DIV V564 0x1
0x972: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x987: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x989: JUMP 0x430
---
Entry stack: [V11, 0x430]
Stack pops: 1
Stack additions: [S0, V569]
Exit stack: [V11, 0x430, V569]

================================

Block 0x98a
[0x98a:0x98f]
---
Predecessors: [0x47e]
Successors: [0x487]
---
0x98a JUMPDEST
0x98b PUSH1 0x4
0x98d SLOAD
0x98e DUP2
0x98f JUMP
---
0x98a: JUMPDEST 
0x98b: V570 = 0x4
0x98d: V571 = S[0x4]
0x98f: JUMP 0x487
---
Entry stack: [V11, 0x487]
Stack pops: 1
Stack additions: [S0, V571]
Exit stack: [V11, 0x487, V571]

================================

Block 0x990
[0x990:0x9b5]
---
Predecessors: [0x4a9]
Successors: [0x4b2]
---
0x990 JUMPDEST
0x991 PUSH1 0x1
0x993 PUSH1 0x0
0x995 SWAP1
0x996 SLOAD
0x997 SWAP1
0x998 PUSH2 0x100
0x99b EXP
0x99c SWAP1
0x99d DIV
0x99e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b3 AND
0x9b4 DUP2
0x9b5 JUMP
---
0x990: JUMPDEST 
0x991: V572 = 0x1
0x993: V573 = 0x0
0x996: V574 = S[0x1]
0x998: V575 = 0x100
0x99b: V576 = EXP 0x100 0x0
0x99d: V577 = DIV V574 0x1
0x99e: V578 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b3: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0x9b5: JUMP 0x4b2
---
Entry stack: [V11, 0x4b2]
Stack pops: 1
Stack additions: [S0, V579]
Exit stack: [V11, 0x4b2, V579]

================================

Block 0x9b6
[0x9b6:0xa0c]
---
Predecessors: [0x500]
Successors: [0xa0d, 0xa11]
---
0x9b6 JUMPDEST
0x9b7 PUSH1 0x0
0x9b9 DUP1
0x9ba SWAP1
0x9bb SLOAD
0x9bc SWAP1
0x9bd PUSH2 0x100
0x9c0 EXP
0x9c1 SWAP1
0x9c2 DIV
0x9c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d8 AND
0x9d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ee AND
0x9ef CALLER
0x9f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa05 AND
0xa06 EQ
0xa07 ISZERO
0xa08 ISZERO
0xa09 PUSH2 0xa11
0xa0c JUMPI
---
0x9b6: JUMPDEST 
0x9b7: V580 = 0x0
0x9bb: V581 = S[0x0]
0x9bd: V582 = 0x100
0x9c0: V583 = EXP 0x100 0x0
0x9c2: V584 = DIV V581 0x1
0x9c3: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d8: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V584
0x9d9: V587 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ee: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x9ef: V589 = CALLER
0x9f0: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0xa05: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0xa06: V592 = EQ V591 V588
0xa07: V593 = ISZERO V592
0xa08: V594 = ISZERO V593
0xa09: V595 = 0xa11
0xa0c: JUMPI 0xa11 V594
---
Entry stack: [V11, 0x535, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x535, V324]

================================

Block 0xa0d
[0xa0d:0xa10]
---
Predecessors: [0x9b6]
Successors: []
---
0xa0d PUSH1 0x0
0xa0f DUP1
0xa10 REVERT
---
0xa0d: V596 = 0x0
0xa10: REVERT 0x0 0x0
---
Entry stack: [V11, 0x535, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x535, V324]

================================

Block 0xa11
[0xa11:0xacf]
---
Predecessors: [0x9b6]
Successors: [0x535]
---
0xa11 JUMPDEST
0xa12 DUP1
0xa13 PUSH1 0x1
0xa15 PUSH1 0x0
0xa17 PUSH2 0x100
0xa1a EXP
0xa1b DUP2
0xa1c SLOAD
0xa1d DUP2
0xa1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa33 MUL
0xa34 NOT
0xa35 AND
0xa36 SWAP1
0xa37 DUP4
0xa38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4d AND
0xa4e MUL
0xa4f OR
0xa50 SWAP1
0xa51 SSTORE
0xa52 POP
0xa53 DUP1
0xa54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa69 AND
0xa6a PUSH1 0x0
0xa6c DUP1
0xa6d SWAP1
0xa6e SLOAD
0xa6f SWAP1
0xa70 PUSH2 0x100
0xa73 EXP
0xa74 SWAP1
0xa75 DIV
0xa76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8b AND
0xa8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa1 AND
0xaa2 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xac3 PUSH1 0x40
0xac5 MLOAD
0xac6 PUSH1 0x40
0xac8 MLOAD
0xac9 DUP1
0xaca SWAP2
0xacb SUB
0xacc SWAP1
0xacd LOG3
0xace POP
0xacf JUMP
---
0xa11: JUMPDEST 
0xa13: V597 = 0x1
0xa15: V598 = 0x0
0xa17: V599 = 0x100
0xa1a: V600 = EXP 0x100 0x0
0xa1c: V601 = S[0x1]
0xa1e: V602 = 0xffffffffffffffffffffffffffffffffffffffff
0xa33: V603 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa34: V604 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa35: V605 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V601
0xa38: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4d: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0xa4e: V608 = MUL V607 0x1
0xa4f: V609 = OR V608 V605
0xa51: S[0x1] = V609
0xa54: V610 = 0xffffffffffffffffffffffffffffffffffffffff
0xa69: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0xa6a: V612 = 0x0
0xa6e: V613 = S[0x0]
0xa70: V614 = 0x100
0xa73: V615 = EXP 0x100 0x0
0xa75: V616 = DIV V613 0x1
0xa76: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8b: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0xa8c: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa1: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0xaa2: V621 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xac3: V622 = 0x40
0xac5: V623 = M[0x40]
0xac6: V624 = 0x40
0xac8: V625 = M[0x40]
0xacb: V626 = SUB V623 V625
0xacd: LOG V625 V626 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V620 V611
0xacf: JUMP 0x535
---
Entry stack: [V11, 0x535, V324]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xad0
[0xad0:0xb28]
---
Predecessors: [0x543]
Successors: [0xb29, 0xb2d]
---
0xad0 JUMPDEST
0xad1 PUSH1 0x0
0xad3 DUP1
0xad4 PUSH1 0x0
0xad6 SWAP1
0xad7 SLOAD
0xad8 SWAP1
0xad9 PUSH2 0x100
0xadc EXP
0xadd SWAP1
0xade DIV
0xadf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf4 AND
0xaf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0a AND
0xb0b CALLER
0xb0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb21 AND
0xb22 EQ
0xb23 ISZERO
0xb24 ISZERO
0xb25 PUSH2 0xb2d
0xb28 JUMPI
---
0xad0: JUMPDEST 
0xad1: V627 = 0x0
0xad4: V628 = 0x0
0xad7: V629 = S[0x0]
0xad9: V630 = 0x100
0xadc: V631 = EXP 0x100 0x0
0xade: V632 = DIV V629 0x1
0xadf: V633 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf4: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0xaf5: V635 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0a: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0xb0b: V637 = CALLER
0xb0c: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0xb21: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0xb22: V640 = EQ V639 V636
0xb23: V641 = ISZERO V640
0xb24: V642 = ISZERO V641
0xb25: V643 = 0xb2d
0xb28: JUMPI 0xb2d V642
---
Entry stack: [V11, 0x54c]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x54c, 0x0]

================================

Block 0xb29
[0xb29:0xb2c]
---
Predecessors: [0xad0]
Successors: []
---
0xb29 PUSH1 0x0
0xb2b DUP1
0xb2c REVERT
---
0xb29: V644 = 0x0
0xb2c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x54c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x54c, 0x0]

================================

Block 0xb2d
[0xb2d:0xba4]
---
Predecessors: [0xad0]
Successors: [0xba5, 0xbae]
---
0xb2d JUMPDEST
0xb2e ADDRESS
0xb2f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb44 AND
0xb45 BALANCE
0xb46 SWAP1
0xb47 POP
0xb48 PUSH1 0x0
0xb4a DUP1
0xb4b SWAP1
0xb4c SLOAD
0xb4d SWAP1
0xb4e PUSH2 0x100
0xb51 EXP
0xb52 SWAP1
0xb53 DIV
0xb54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb69 AND
0xb6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7f AND
0xb80 PUSH2 0x8fc
0xb83 DUP3
0xb84 SWAP1
0xb85 DUP2
0xb86 ISZERO
0xb87 MUL
0xb88 SWAP1
0xb89 PUSH1 0x40
0xb8b MLOAD
0xb8c PUSH1 0x0
0xb8e PUSH1 0x40
0xb90 MLOAD
0xb91 DUP1
0xb92 DUP4
0xb93 SUB
0xb94 DUP2
0xb95 DUP6
0xb96 DUP9
0xb97 DUP9
0xb98 CALL
0xb99 SWAP4
0xb9a POP
0xb9b POP
0xb9c POP
0xb9d POP
0xb9e ISZERO
0xb9f DUP1
0xba0 ISZERO
0xba1 PUSH2 0xbae
0xba4 JUMPI
---
0xb2d: JUMPDEST 
0xb2e: V645 = ADDRESS
0xb2f: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0xb44: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
0xb45: V648 = BALANCE V647
0xb48: V649 = 0x0
0xb4c: V650 = S[0x0]
0xb4e: V651 = 0x100
0xb51: V652 = EXP 0x100 0x0
0xb53: V653 = DIV V650 0x1
0xb54: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xb69: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xb6a: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7f: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0xb80: V658 = 0x8fc
0xb86: V659 = ISZERO V648
0xb87: V660 = MUL V659 0x8fc
0xb89: V661 = 0x40
0xb8b: V662 = M[0x40]
0xb8c: V663 = 0x0
0xb8e: V664 = 0x40
0xb90: V665 = M[0x40]
0xb93: V666 = SUB V662 V665
0xb98: V667 = CALL V660 V657 V648 V665 V666 V665 0x0
0xb9e: V668 = ISZERO V667
0xba0: V669 = ISZERO V668
0xba1: V670 = 0xbae
0xba4: JUMPI 0xbae V669
---
Entry stack: [V11, 0x54c, 0x0]
Stack pops: 1
Stack additions: [V648, V668]
Exit stack: [V11, 0x54c, V648, V668]

================================

Block 0xba5
[0xba5:0xbad]
---
Predecessors: [0xb2d]
Successors: []
---
0xba5 RETURNDATASIZE
0xba6 PUSH1 0x0
0xba8 DUP1
0xba9 RETURNDATACOPY
0xbaa RETURNDATASIZE
0xbab PUSH1 0x0
0xbad REVERT
---
0xba5: V671 = RETURNDATASIZE
0xba6: V672 = 0x0
0xba9: RETURNDATACOPY 0x0 0x0 V671
0xbaa: V673 = RETURNDATASIZE
0xbab: V674 = 0x0
0xbad: REVERT 0x0 V673
---
Entry stack: [V11, 0x54c, V648, V668]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x54c, V648, V668]

================================

Block 0xbae
[0xbae:0xbb1]
---
Predecessors: [0xb2d]
Successors: [0x54c]
---
0xbae JUMPDEST
0xbaf POP
0xbb0 POP
0xbb1 JUMP
---
0xbae: JUMPDEST 
0xbb1: JUMP 0x54c
---
Entry stack: [V11, 0x54c, V648, V668]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0xbb2
[0xbb2:0xbf2]
---
Predecessors: []
Successors: []
---
0xbb2 STOP
0xbb3 LOG1
0xbb4 PUSH6 0x627a7a723058
0xbbb SHA3
0xbbc MISSING 0xb9
0xbbd MISSING 0x4a
0xbbe SWAP3
0xbbf MISSING 0xc1
0xbc0 MISSING 0xe6
0xbc1 AND
0xbc2 SSTORE
0xbc3 MISSING 0xd2
0xbc4 EXTCODEHASH
0xbc5 DUP15
0xbc6 SWAP12
0xbc7 PUSH5 0xd08200a024
0xbcd MISSING 0xc5
0xbce MISSING 0xaa
0xbcf BLOCKHASH
0xbd0 MISSING 0xb8
0xbd1 DUP3
0xbd2 EXTCODEHASH
0xbd3 MISSING 0xc1
0xbd4 MISSING 0x2e
0xbd5 MISSING 0xae
0xbd6 MISSING 0xa6
0xbd7 MISSING 0xaa
0xbd8 SLOAD
0xbd9 MISSING 0xa6
0xbda PUSH24 0x7e0029
---
0xbb2: STOP 
0xbb3: LOG S0 S1 S2
0xbb4: V675 = 0x627a7a723058
0xbbb: V676 = SHA3 0x627a7a723058 S3
0xbbc: MISSING 0xb9
0xbbd: MISSING 0x4a
0xbbf: MISSING 0xc1
0xbc0: MISSING 0xe6
0xbc1: V677 = AND S0 S1
0xbc2: S[V677] = S2
0xbc3: MISSING 0xd2
0xbc4: V678 = EXTCODEHASH S0
0xbc7: V679 = 0xd08200a024
0xbcd: MISSING 0xc5
0xbce: MISSING 0xaa
0xbcf: V680 = BLOCKHASH S0
0xbd0: MISSING 0xb8
0xbd2: V681 = EXTCODEHASH S2
0xbd3: MISSING 0xc1
0xbd4: MISSING 0x2e
0xbd5: MISSING 0xae
0xbd6: MISSING 0xa6
0xbd7: MISSING 0xaa
0xbd8: V682 = S[S0]
0xbd9: MISSING 0xa6
0xbda: V683 = 0x7e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V676, S3, S1, S2, S0, 0xd08200a024, S11, V678, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S14, S12, S13, S14, V680, V681, S0, S1, S2, V682, 0x7e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xb97bc86
Entry block: 0x2ea
Exit block: 0x2ff
Body: 0x2ea, 0x2f2, 0x2f6, 0x2ff, 0x56a

Function 1:
Public function signature: 0x2095f2d4
Entry block: 0x315
Exit block: 0x32a
Body: 0x315, 0x31d, 0x321, 0x32a, 0x570, 0x5c7, 0x5cb

Function 2:
Public function signature: 0x228cb733
Entry block: 0x32c
Exit block: 0x341
Body: 0x32c, 0x334, 0x338, 0x341, 0x5d4

Function 3:
Public function signature: 0x239d198c
Entry block: 0x383
Exit block: 0x398
Body: 0x383, 0x38b, 0x38f, 0x398, 0x5fa

Function 4:
Public function signature: 0x40c65003
Entry block: 0x3ae
Exit block: 0x3c3
Body: 0x3ae, 0x3b6, 0x3ba, 0x3c3, 0x600

Function 5:
Public function signature: 0x4d9b3d5d
Entry block: 0x3d9
Exit block: 0x3ee
Body: 0x3d9, 0x3e1, 0x3e5, 0x3ee, 0x606, 0x6c2, 0x6c6, 0x6d1, 0x6da, 0x6ec, 0x6f0

Function 6:
Public function signature: 0x8d8f2adb
Entry block: 0x404
Exit block: 0x419
Body: 0x404, 0x40c, 0x410, 0x419, 0x70a, 0x761, 0x765, 0x81e, 0x822, 0x82d, 0x836, 0x848, 0x84c, 0x947, 0x94b, 0x956, 0x95f

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x41b
Exit block: 0x430
Body: 0x41b, 0x423, 0x427, 0x430, 0x965

Function 8:
Public function signature: 0xc24a0f8b
Entry block: 0x472
Exit block: 0x487
Body: 0x472, 0x47a, 0x47e, 0x487, 0x98a

Function 9:
Public function signature: 0xd4ee1d90
Entry block: 0x49d
Exit block: 0x4b2
Body: 0x49d, 0x4a5, 0x4a9, 0x4b2, 0x990

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x4f4
Exit block: 0x535
Body: 0x4f4, 0x4fc, 0x500, 0x535, 0x9b6, 0xa0d, 0xa11

Function 11:
Public function signature: 0xfd6b7ef8
Entry block: 0x537
Exit block: 0x54c
Body: 0x537, 0x53f, 0x543, 0x54c, 0xad0, 0xb29, 0xb2d, 0xba5, 0xbae

Function 12:
Public fallback function
Entry block: 0xba
Exit block: 0x2dc
Body: 0xba, 0xca, 0xd1, 0xd8, 0xdc, 0xe8, 0xf3, 0xfb, 0x144, 0x248, 0x24c, 0x257, 0x260, 0x2dc, 0x2e5, 0x54e, 0x560, 0x564

