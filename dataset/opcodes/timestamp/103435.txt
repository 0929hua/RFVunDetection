args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/4/103435.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x93]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x93
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x93
0xa: JUMPI 0x93 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x190]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x190
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x190
0x24: JUMPI 0x190 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1a5]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x1a5
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x1a5
0x2f: JUMPI 0x1a5 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1ca]
---
0x30 DUP1
0x31 PUSH4 0x38af3eed
0x36 EQ
0x37 PUSH2 0x1ca
0x3a JUMPI
---
0x31: V19 = 0x38af3eed
0x36: V20 = EQ 0x38af3eed V12
0x37: V21 = 0x1ca
0x3a: JUMPI 0x1ca V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1f9]
---
0x3b DUP1
0x3c PUSH4 0x6e66f6e9
0x41 EQ
0x42 PUSH2 0x1f9
0x45 JUMPI
---
0x3c: V22 = 0x6e66f6e9
0x41: V23 = EQ 0x6e66f6e9 V12
0x42: V24 = 0x1f9
0x45: JUMPI 0x1f9 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x228]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x228
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x228
0x50: JUMPI 0x228 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x259]
---
0x51 DUP1
0x52 PUSH4 0x7a3a0e84
0x57 EQ
0x58 PUSH2 0x259
0x5b JUMPI
---
0x52: V28 = 0x7a3a0e84
0x57: V29 = EQ 0x7a3a0e84 V12
0x58: V30 = 0x259
0x5b: JUMPI 0x259 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x27e]
---
0x5c DUP1
0x5d PUSH4 0x7b3e5e7b
0x62 EQ
0x63 PUSH2 0x27e
0x66 JUMPI
---
0x5d: V31 = 0x7b3e5e7b
0x62: V32 = EQ 0x7b3e5e7b V12
0x63: V33 = 0x27e
0x66: JUMPI 0x27e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x2a3]
---
0x67 DUP1
0x68 PUSH4 0x9fc71b31
0x6d EQ
0x6e PUSH2 0x2a3
0x71 JUMPI
---
0x68: V34 = 0x9fc71b31
0x6d: V35 = EQ 0x9fc71b31 V12
0x6e: V36 = 0x2a3
0x71: JUMPI 0x2a3 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2bb]
---
0x72 DUP1
0x73 PUSH4 0xa035b1fe
0x78 EQ
0x79 PUSH2 0x2bb
0x7c JUMPI
---
0x73: V37 = 0xa035b1fe
0x78: V38 = EQ 0xa035b1fe V12
0x79: V39 = 0x2bb
0x7c: JUMPI 0x2bb V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2e0]
---
0x7d DUP1
0x7e PUSH4 0xe933e6eb
0x83 EQ
0x84 PUSH2 0x2e0
0x87 JUMPI
---
0x7e: V40 = 0xe933e6eb
0x83: V41 = EQ 0xe933e6eb V12
0x84: V42 = 0x2e0
0x87: JUMPI 0x2e0 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2fb]
---
0x88 DUP1
0x89 PUSH4 0xfd6b7ef8
0x8e EQ
0x8f PUSH2 0x2fb
0x92 JUMPI
---
0x89: V43 = 0xfd6b7ef8
0x8e: V44 = EQ 0xfd6b7ef8 V12
0x8f: V45 = 0x2fb
0x92: JUMPI 0x2fb V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x93]
---
Predecessors: [0x0, 0x88]
Successors: [0x94]
---
0x93 JUMPDEST
---
0x93: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x94
[0x94:0xa7]
---
Predecessors: [0x93]
Successors: [0xa8, 0xac]
---
0x94 JUMPDEST
0x95 PUSH1 0x7
0x97 SLOAD
0x98 PUSH1 0x0
0x9a SWAP1
0x9b PUSH2 0x100
0x9e SWAP1
0x9f DIV
0xa0 PUSH1 0xff
0xa2 AND
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0x94: JUMPDEST 
0x95: V46 = 0x7
0x97: V47 = S[0x7]
0x98: V48 = 0x0
0x9b: V49 = 0x100
0x9f: V50 = DIV V47 0x100
0xa0: V51 = 0xff
0xa2: V52 = AND 0xff V50
0xa3: V53 = ISZERO V52
0xa4: V54 = 0xac
0xa7: JUMPI 0xac V53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0x94]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V55 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xac
[0xac:0xf0]
---
Predecessors: [0x94]
Successors: [0xf1, 0xf2]
---
0xac JUMPDEST
0xad POP
0xae PUSH1 0x1
0xb0 PUSH1 0xa0
0xb2 PUSH1 0x2
0xb4 EXP
0xb5 SUB
0xb6 CALLER
0xb7 DUP2
0xb8 DUP2
0xb9 AND
0xba PUSH1 0x0
0xbc SWAP1
0xbd DUP2
0xbe MSTORE
0xbf PUSH1 0x6
0xc1 PUSH1 0x20
0xc3 MSTORE
0xc4 PUSH1 0x40
0xc6 SWAP1
0xc7 SHA3
0xc8 DUP1
0xc9 SLOAD
0xca CALLVALUE
0xcb SWAP1
0xcc DUP2
0xcd ADD
0xce SWAP1
0xcf SWAP2
0xd0 SSTORE
0xd1 PUSH1 0x2
0xd3 DUP1
0xd4 SLOAD
0xd5 DUP3
0xd6 ADD
0xd7 SWAP1
0xd8 SSTORE
0xd9 PUSH1 0x5
0xdb SLOAD
0xdc PUSH1 0x4
0xde SLOAD
0xdf SWAP2
0xe0 SWAP4
0xe1 AND
0xe2 SWAP2
0xe3 PUSH4 0xa9059cbb
0xe8 SWAP2
0xe9 DUP5
0xea DUP2
0xeb ISZERO
0xec ISZERO
0xed PUSH2 0xf2
0xf0 JUMPI
---
0xac: JUMPDEST 
0xae: V56 = 0x1
0xb0: V57 = 0xa0
0xb2: V58 = 0x2
0xb4: V59 = EXP 0x2 0xa0
0xb5: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6: V61 = CALLER
0xb9: V62 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xba: V63 = 0x0
0xbe: M[0x0] = V62
0xbf: V64 = 0x6
0xc1: V65 = 0x20
0xc3: M[0x20] = 0x6
0xc4: V66 = 0x40
0xc7: V67 = SHA3 0x0 0x40
0xc9: V68 = S[V67]
0xca: V69 = CALLVALUE
0xcd: V70 = ADD V69 V68
0xd0: S[V67] = V70
0xd1: V71 = 0x2
0xd4: V72 = S[0x2]
0xd6: V73 = ADD V69 V72
0xd8: S[0x2] = V73
0xd9: V74 = 0x5
0xdb: V75 = S[0x5]
0xdc: V76 = 0x4
0xde: V77 = S[0x4]
0xe1: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xe3: V79 = 0xa9059cbb
0xeb: V80 = ISZERO V77
0xec: V81 = ISZERO V80
0xed: V82 = 0xf2
0xf0: JUMPI 0xf2 V81
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V69, V78, 0xa9059cbb, V61, V77, V69]
Exit stack: [V12, V69, V78, 0xa9059cbb, V61, V77, V69]

================================

Block 0xf1
[0xf1:0xf1]
---
Predecessors: [0xac]
Successors: []
---
0xf1 INVALID
---
0xf1: INVALID 
---
Entry stack: [V12, V69, V78, 0xa9059cbb, V61, V77, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V69, V78, 0xa9059cbb, V61, V77, V69]

================================

Block 0xf2
[0xf2:0x131]
---
Predecessors: [0xac]
Successors: [0x132, 0x136]
---
0xf2 JUMPDEST
0xf3 DIV
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 PUSH1 0xe0
0xf9 PUSH1 0x2
0xfb EXP
0xfc PUSH4 0xffffffff
0x101 DUP6
0x102 AND
0x103 MUL
0x104 DUP2
0x105 MSTORE
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e SWAP1
0x10f SWAP3
0x110 AND
0x111 PUSH1 0x4
0x113 DUP4
0x114 ADD
0x115 MSTORE
0x116 PUSH1 0x24
0x118 DUP3
0x119 ADD
0x11a MSTORE
0x11b PUSH1 0x44
0x11d ADD
0x11e PUSH1 0x0
0x120 PUSH1 0x40
0x122 MLOAD
0x123 DUP1
0x124 DUP4
0x125 SUB
0x126 DUP2
0x127 PUSH1 0x0
0x129 DUP8
0x12a DUP1
0x12b EXTCODESIZE
0x12c ISZERO
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0xf2: JUMPDEST 
0xf3: V83 = DIV V69 V77
0xf4: V84 = 0x40
0xf6: V85 = M[0x40]
0xf7: V86 = 0xe0
0xf9: V87 = 0x2
0xfb: V88 = EXP 0x2 0xe0
0xfc: V89 = 0xffffffff
0x102: V90 = AND 0xa9059cbb 0xffffffff
0x103: V91 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x105: M[V85] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x106: V92 = 0x1
0x108: V93 = 0xa0
0x10a: V94 = 0x2
0x10c: V95 = EXP 0x2 0xa0
0x10d: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x110: V97 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0x111: V98 = 0x4
0x114: V99 = ADD V85 0x4
0x115: M[V99] = V97
0x116: V100 = 0x24
0x119: V101 = ADD V85 0x24
0x11a: M[V101] = V83
0x11b: V102 = 0x44
0x11d: V103 = ADD 0x44 V85
0x11e: V104 = 0x0
0x120: V105 = 0x40
0x122: V106 = M[0x40]
0x125: V107 = SUB V103 V106
0x127: V108 = 0x0
0x12b: V109 = EXTCODESIZE V78
0x12c: V110 = ISZERO V109
0x12d: V111 = ISZERO V110
0x12e: V112 = 0x136
0x131: JUMPI 0x136 V111
---
Entry stack: [V12, V69, V78, 0xa9059cbb, V61, V77, V69]
Stack pops: 5
Stack additions: [S4, S3, V103, 0x0, V106, V107, V106, 0x0, S4]
Exit stack: [V12, V69, V78, 0xa9059cbb, V103, 0x0, V106, V107, V106, 0x0, V78]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0xf2]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V113 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V12, V69, V78, 0xa9059cbb, V103, 0x0, V106, V107, V106, 0x0, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V69, V78, 0xa9059cbb, V103, 0x0, V106, V107, V106, 0x0, V78]

================================

Block 0x136
[0x136:0x142]
---
Predecessors: [0xf2]
Successors: [0x143, 0x147]
---
0x136 JUMPDEST
0x137 PUSH2 0x2c6
0x13a GAS
0x13b SUB
0x13c CALL
0x13d ISZERO
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x136: JUMPDEST 
0x137: V114 = 0x2c6
0x13a: V115 = GAS
0x13b: V116 = SUB V115 0x2c6
0x13c: V117 = CALL V116 V78 0x0 V106 V107 V106 0x0
0x13d: V118 = ISZERO V117
0x13e: V119 = ISZERO V118
0x13f: V120 = 0x147
0x142: JUMPI 0x147 V119
---
Entry stack: [V12, V69, V78, 0xa9059cbb, V103, 0x0, V106, V107, V106, 0x0, V78]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V69, V78, 0xa9059cbb, V103]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x136]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V121 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V12, V69, V78, 0xa9059cbb, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V69, V78, 0xa9059cbb, V103]

================================

Block 0x147
[0x147:0x18c]
---
Predecessors: [0x136]
Successors: [0x18d]
---
0x147 JUMPDEST
0x148 POP
0x149 POP
0x14a POP
0x14b PUSH1 0x0
0x14d DUP1
0x14e MLOAD
0x14f PUSH1 0x20
0x151 PUSH2 0x6be
0x154 DUP4
0x155 CODECOPY
0x156 DUP2
0x157 MLOAD
0x158 SWAP2
0x159 MSTORE
0x15a CALLER
0x15b DUP3
0x15c PUSH1 0x1
0x15e PUSH1 0x40
0x160 MLOAD
0x161 PUSH1 0x1
0x163 PUSH1 0xa0
0x165 PUSH1 0x2
0x167 EXP
0x168 SUB
0x169 SWAP1
0x16a SWAP4
0x16b AND
0x16c DUP4
0x16d MSTORE
0x16e PUSH1 0x20
0x170 DUP4
0x171 ADD
0x172 SWAP2
0x173 SWAP1
0x174 SWAP2
0x175 MSTORE
0x176 ISZERO
0x177 ISZERO
0x178 PUSH1 0x40
0x17a DUP1
0x17b DUP4
0x17c ADD
0x17d SWAP2
0x17e SWAP1
0x17f SWAP2
0x180 MSTORE
0x181 PUSH1 0x60
0x183 SWAP1
0x184 SWAP2
0x185 ADD
0x186 SWAP1
0x187 MLOAD
0x188 DUP1
0x189 SWAP2
0x18a SUB
0x18b SWAP1
0x18c LOG1
---
0x147: JUMPDEST 
0x14b: V122 = 0x0
0x14e: V123 = M[0x0]
0x14f: V124 = 0x20
0x151: V125 = 0x6be
0x155: CODECOPY 0x0 0x6be 0x20
0x157: V126 = M[0x0]
0x159: M[0x0] = V123
0x15a: V127 = CALLER
0x15c: V128 = 0x1
0x15e: V129 = 0x40
0x160: V130 = M[0x40]
0x161: V131 = 0x1
0x163: V132 = 0xa0
0x165: V133 = 0x2
0x167: V134 = EXP 0x2 0xa0
0x168: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V136 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x16d: M[V130] = V136
0x16e: V137 = 0x20
0x171: V138 = ADD V130 0x20
0x175: M[V138] = V69
0x176: V139 = ISZERO 0x1
0x177: V140 = ISZERO 0x0
0x178: V141 = 0x40
0x17c: V142 = ADD V130 0x40
0x180: M[V142] = 0x1
0x181: V143 = 0x60
0x185: V144 = ADD V130 0x60
0x187: V145 = M[0x40]
0x18a: V146 = SUB V144 V145
0x18c: LOG V145 V146 V126
---
Entry stack: [V12, V69, V78, 0xa9059cbb, V103]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V69]

================================

Block 0x18d
[0x18d:0x18f]
---
Predecessors: [0x147]
Successors: []
---
0x18d JUMPDEST
0x18e POP
0x18f STOP
---
0x18d: JUMPDEST 
0x18f: STOP 
---
Entry stack: [V12, V69]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x190
[0x190:0x196]
---
Predecessors: [0xb]
Successors: [0x197, 0x19b]
---
0x190 JUMPDEST
0x191 CALLVALUE
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x190: JUMPDEST 
0x191: V147 = CALLVALUE
0x192: V148 = ISZERO V147
0x193: V149 = 0x19b
0x196: JUMPI 0x19b V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x190]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V150 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x190]
Successors: [0x310]
---
0x19b JUMPDEST
0x19c PUSH2 0x1a3
0x19f PUSH2 0x310
0x1a2 JUMP
---
0x19b: JUMPDEST 
0x19c: V151 = 0x1a3
0x19f: V152 = 0x310
0x1a2: JUMP 0x310
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3]
Exit stack: [V12, 0x1a3]

================================

Block 0x1a3
[0x1a3:0x1a4]
---
Predecessors: [0x397, 0x4ab, 0x529, 0x6ba]
Successors: []
---
0x1a3 JUMPDEST
0x1a4 STOP
---
0x1a3: JUMPDEST 
0x1a4: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a5
[0x1a5:0x1ab]
---
Predecessors: [0x25]
Successors: [0x1ac, 0x1b0]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V153 = CALLVALUE
0x1a7: V154 = ISZERO V153
0x1a8: V155 = 0x1b0
0x1ab: JUMPI 0x1b0 V154
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V156 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1b7]
---
Predecessors: [0x1a5]
Successors: [0x399]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0x1b8
0x1b4 PUSH2 0x399
0x1b7 JUMP
---
0x1b0: JUMPDEST 
0x1b1: V157 = 0x1b8
0x1b4: V158 = 0x399
0x1b7: JUMP 0x399
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b8]
Exit stack: [V12, 0x1b8]

================================

Block 0x1b8
[0x1b8:0x1c9]
---
Predecessors: [0x399, 0x3bd, 0x3cf, 0x3d5, 0x4ae]
Successors: []
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc SWAP1
0x1bd DUP2
0x1be MSTORE
0x1bf PUSH1 0x20
0x1c1 ADD
0x1c2 PUSH1 0x40
0x1c4 MLOAD
0x1c5 DUP1
0x1c6 SWAP2
0x1c7 SUB
0x1c8 SWAP1
0x1c9 RETURN
---
0x1b8: JUMPDEST 
0x1b9: V159 = 0x40
0x1bb: V160 = M[0x40]
0x1be: M[V160] = S0
0x1bf: V161 = 0x20
0x1c1: V162 = ADD 0x20 V160
0x1c2: V163 = 0x40
0x1c4: V164 = M[0x40]
0x1c7: V165 = SUB V162 V164
0x1c9: RETURN V164 V165
---
Entry stack: [V12, 0x1b8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b8]

================================

Block 0x1ca
[0x1ca:0x1d0]
---
Predecessors: [0x30]
Successors: [0x1d1, 0x1d5]
---
0x1ca JUMPDEST
0x1cb CALLVALUE
0x1cc ISZERO
0x1cd PUSH2 0x1d5
0x1d0 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V166 = CALLVALUE
0x1cc: V167 = ISZERO V166
0x1cd: V168 = 0x1d5
0x1d0: JUMPI 0x1d5 V167
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d1
[0x1d1:0x1d4]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 REVERT
---
0x1d1: V169 = 0x0
0x1d4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d5
[0x1d5:0x1dc]
---
Predecessors: [0x1ca]
Successors: [0x39f]
---
0x1d5 JUMPDEST
0x1d6 PUSH2 0x1dd
0x1d9 PUSH2 0x39f
0x1dc JUMP
---
0x1d5: JUMPDEST 
0x1d6: V170 = 0x1dd
0x1d9: V171 = 0x39f
0x1dc: JUMP 0x39f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1dd]
Exit stack: [V12, 0x1dd]

================================

Block 0x1dd
[0x1dd:0x1f8]
---
Predecessors: [0x39f, 0x3ae]
Successors: []
---
0x1dd JUMPDEST
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0xa0
0x1e5 PUSH1 0x2
0x1e7 EXP
0x1e8 SUB
0x1e9 SWAP1
0x1ea SWAP2
0x1eb AND
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 SWAP2
0x1f6 SUB
0x1f7 SWAP1
0x1f8 RETURN
---
0x1dd: JUMPDEST 
0x1de: V172 = 0x40
0x1e0: V173 = M[0x40]
0x1e1: V174 = 0x1
0x1e3: V175 = 0xa0
0x1e5: V176 = 0x2
0x1e7: V177 = EXP 0x2 0xa0
0x1e8: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1eb: V179 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: M[V173] = V179
0x1ee: V180 = 0x20
0x1f0: V181 = ADD 0x20 V173
0x1f1: V182 = 0x40
0x1f3: V183 = M[0x40]
0x1f6: V184 = SUB V181 V183
0x1f8: RETURN V183 V184
---
Entry stack: [V12, 0x1dd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1dd]

================================

Block 0x1f9
[0x1f9:0x1ff]
---
Predecessors: [0x3b]
Successors: [0x200, 0x204]
---
0x1f9 JUMPDEST
0x1fa CALLVALUE
0x1fb ISZERO
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V185 = CALLVALUE
0x1fb: V186 = ISZERO V185
0x1fc: V187 = 0x204
0x1ff: JUMPI 0x204 V186
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1f9]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V188 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x204
[0x204:0x20b]
---
Predecessors: [0x1f9]
Successors: [0x3ae]
---
0x204 JUMPDEST
0x205 PUSH2 0x1dd
0x208 PUSH2 0x3ae
0x20b JUMP
---
0x204: JUMPDEST 
0x205: V189 = 0x1dd
0x208: V190 = 0x3ae
0x20b: JUMP 0x3ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1dd]
Exit stack: [V12, 0x1dd]

================================

Block 0x20c
[0x20c:0x227]
---
Predecessors: []
Successors: []
---
0x20c JUMPDEST
0x20d PUSH1 0x40
0x20f MLOAD
0x210 PUSH1 0x1
0x212 PUSH1 0xa0
0x214 PUSH1 0x2
0x216 EXP
0x217 SUB
0x218 SWAP1
0x219 SWAP2
0x21a AND
0x21b DUP2
0x21c MSTORE
0x21d PUSH1 0x20
0x21f ADD
0x220 PUSH1 0x40
0x222 MLOAD
0x223 DUP1
0x224 SWAP2
0x225 SUB
0x226 SWAP1
0x227 RETURN
---
0x20c: JUMPDEST 
0x20d: V191 = 0x40
0x20f: V192 = M[0x40]
0x210: V193 = 0x1
0x212: V194 = 0xa0
0x214: V195 = 0x2
0x216: V196 = EXP 0x2 0xa0
0x217: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21a: V198 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x21c: M[V192] = V198
0x21d: V199 = 0x20
0x21f: V200 = ADD 0x20 V192
0x220: V201 = 0x40
0x222: V202 = M[0x40]
0x225: V203 = SUB V200 V202
0x227: RETURN V202 V203
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x228
[0x228:0x22e]
---
Predecessors: [0x46]
Successors: [0x22f, 0x233]
---
0x228 JUMPDEST
0x229 CALLVALUE
0x22a ISZERO
0x22b PUSH2 0x233
0x22e JUMPI
---
0x228: JUMPDEST 
0x229: V204 = CALLVALUE
0x22a: V205 = ISZERO V204
0x22b: V206 = 0x233
0x22e: JUMPI 0x233 V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22f
[0x22f:0x232]
---
Predecessors: [0x228]
Successors: []
---
0x22f PUSH1 0x0
0x231 DUP1
0x232 REVERT
---
0x22f: V207 = 0x0
0x232: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x233
[0x233:0x246]
---
Predecessors: [0x228]
Successors: [0x3bd]
---
0x233 JUMPDEST
0x234 PUSH2 0x1b8
0x237 PUSH1 0x1
0x239 PUSH1 0xa0
0x23b PUSH1 0x2
0x23d EXP
0x23e SUB
0x23f PUSH1 0x4
0x241 CALLDATALOAD
0x242 AND
0x243 PUSH2 0x3bd
0x246 JUMP
---
0x233: JUMPDEST 
0x234: V208 = 0x1b8
0x237: V209 = 0x1
0x239: V210 = 0xa0
0x23b: V211 = 0x2
0x23d: V212 = EXP 0x2 0xa0
0x23e: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23f: V214 = 0x4
0x241: V215 = CALLDATALOAD 0x4
0x242: V216 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x243: V217 = 0x3bd
0x246: JUMP 0x3bd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b8, V216]
Exit stack: [V12, 0x1b8, V216]

================================

Block 0x247
[0x247:0x258]
---
Predecessors: []
Successors: []
---
0x247 JUMPDEST
0x248 PUSH1 0x40
0x24a MLOAD
0x24b SWAP1
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x20
0x250 ADD
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 SWAP2
0x256 SUB
0x257 SWAP1
0x258 RETURN
---
0x247: JUMPDEST 
0x248: V218 = 0x40
0x24a: V219 = M[0x40]
0x24d: M[V219] = S0
0x24e: V220 = 0x20
0x250: V221 = ADD 0x20 V219
0x251: V222 = 0x40
0x253: V223 = M[0x40]
0x256: V224 = SUB V221 V223
0x258: RETURN V223 V224
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x259
[0x259:0x25f]
---
Predecessors: [0x51]
Successors: [0x260, 0x264]
---
0x259 JUMPDEST
0x25a CALLVALUE
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x259: JUMPDEST 
0x25a: V225 = CALLVALUE
0x25b: V226 = ISZERO V225
0x25c: V227 = 0x264
0x25f: JUMPI 0x264 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x259]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V228 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x264
[0x264:0x26b]
---
Predecessors: [0x259]
Successors: [0x3cf]
---
0x264 JUMPDEST
0x265 PUSH2 0x1b8
0x268 PUSH2 0x3cf
0x26b JUMP
---
0x264: JUMPDEST 
0x265: V229 = 0x1b8
0x268: V230 = 0x3cf
0x26b: JUMP 0x3cf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b8]
Exit stack: [V12, 0x1b8]

================================

Block 0x26c
[0x26c:0x27d]
---
Predecessors: []
Successors: []
---
0x26c JUMPDEST
0x26d PUSH1 0x40
0x26f MLOAD
0x270 SWAP1
0x271 DUP2
0x272 MSTORE
0x273 PUSH1 0x20
0x275 ADD
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a SWAP2
0x27b SUB
0x27c SWAP1
0x27d RETURN
---
0x26c: JUMPDEST 
0x26d: V231 = 0x40
0x26f: V232 = M[0x40]
0x272: M[V232] = S0
0x273: V233 = 0x20
0x275: V234 = ADD 0x20 V232
0x276: V235 = 0x40
0x278: V236 = M[0x40]
0x27b: V237 = SUB V234 V236
0x27d: RETURN V236 V237
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x27e
[0x27e:0x284]
---
Predecessors: [0x5c]
Successors: [0x285, 0x289]
---
0x27e JUMPDEST
0x27f CALLVALUE
0x280 ISZERO
0x281 PUSH2 0x289
0x284 JUMPI
---
0x27e: JUMPDEST 
0x27f: V238 = CALLVALUE
0x280: V239 = ISZERO V238
0x281: V240 = 0x289
0x284: JUMPI 0x289 V239
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x27e]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V241 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0x27e]
Successors: [0x3d5]
---
0x289 JUMPDEST
0x28a PUSH2 0x1b8
0x28d PUSH2 0x3d5
0x290 JUMP
---
0x289: JUMPDEST 
0x28a: V242 = 0x1b8
0x28d: V243 = 0x3d5
0x290: JUMP 0x3d5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b8]
Exit stack: [V12, 0x1b8]

================================

Block 0x291
[0x291:0x2a2]
---
Predecessors: []
Successors: []
---
0x291 JUMPDEST
0x292 PUSH1 0x40
0x294 MLOAD
0x295 SWAP1
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x291: JUMPDEST 
0x292: V244 = 0x40
0x294: V245 = M[0x40]
0x297: M[V245] = S0
0x298: V246 = 0x20
0x29a: V247 = ADD 0x20 V245
0x29b: V248 = 0x40
0x29d: V249 = M[0x40]
0x2a0: V250 = SUB V247 V249
0x2a2: RETURN V249 V250
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a3
[0x2a3:0x2a9]
---
Predecessors: [0x67]
Successors: [0x2aa, 0x2ae]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V251 = CALLVALUE
0x2a5: V252 = ISZERO V251
0x2a6: V253 = 0x2ae
0x2a9: JUMPI 0x2ae V252
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x2a3]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V254 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ae
[0x2ae:0x2b8]
---
Predecessors: [0x2a3]
Successors: [0x3db]
---
0x2ae JUMPDEST
0x2af PUSH2 0x1a3
0x2b2 PUSH1 0x4
0x2b4 CALLDATALOAD
0x2b5 PUSH2 0x3db
0x2b8 JUMP
---
0x2ae: JUMPDEST 
0x2af: V255 = 0x1a3
0x2b2: V256 = 0x4
0x2b4: V257 = CALLDATALOAD 0x4
0x2b5: V258 = 0x3db
0x2b8: JUMP 0x3db
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3, V257]
Exit stack: [V12, 0x1a3, V257]

================================

Block 0x2b9
[0x2b9:0x2ba]
---
Predecessors: []
Successors: []
---
0x2b9 JUMPDEST
0x2ba STOP
---
0x2b9: JUMPDEST 
0x2ba: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2bb
[0x2bb:0x2c1]
---
Predecessors: [0x72]
Successors: [0x2c2, 0x2c6]
---
0x2bb JUMPDEST
0x2bc CALLVALUE
0x2bd ISZERO
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V259 = CALLVALUE
0x2bd: V260 = ISZERO V259
0x2be: V261 = 0x2c6
0x2c1: JUMPI 0x2c6 V260
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V262 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c6
[0x2c6:0x2cd]
---
Predecessors: [0x2bb]
Successors: [0x4ae]
---
0x2c6 JUMPDEST
0x2c7 PUSH2 0x1b8
0x2ca PUSH2 0x4ae
0x2cd JUMP
---
0x2c6: JUMPDEST 
0x2c7: V263 = 0x1b8
0x2ca: V264 = 0x4ae
0x2cd: JUMP 0x4ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b8]
Exit stack: [V12, 0x1b8]

================================

Block 0x2ce
[0x2ce:0x2df]
---
Predecessors: []
Successors: []
---
0x2ce JUMPDEST
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 SWAP1
0x2d3 DUP2
0x2d4 MSTORE
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db DUP1
0x2dc SWAP2
0x2dd SUB
0x2de SWAP1
0x2df RETURN
---
0x2ce: JUMPDEST 
0x2cf: V265 = 0x40
0x2d1: V266 = M[0x40]
0x2d4: M[V266] = S0
0x2d5: V267 = 0x20
0x2d7: V268 = ADD 0x20 V266
0x2d8: V269 = 0x40
0x2da: V270 = M[0x40]
0x2dd: V271 = SUB V268 V270
0x2df: RETURN V270 V271
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e0
[0x2e0:0x2e6]
---
Predecessors: [0x7d]
Successors: [0x2e7, 0x2eb]
---
0x2e0 JUMPDEST
0x2e1 CALLVALUE
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V272 = CALLVALUE
0x2e2: V273 = ISZERO V272
0x2e3: V274 = 0x2eb
0x2e6: JUMPI 0x2eb V273
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2e0]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V275 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2eb
[0x2eb:0x2f8]
---
Predecessors: [0x2e0]
Successors: [0x4b4]
---
0x2eb JUMPDEST
0x2ec PUSH2 0x1a3
0x2ef PUSH1 0x4
0x2f1 CALLDATALOAD
0x2f2 PUSH1 0x24
0x2f4 CALLDATALOAD
0x2f5 PUSH2 0x4b4
0x2f8 JUMP
---
0x2eb: JUMPDEST 
0x2ec: V276 = 0x1a3
0x2ef: V277 = 0x4
0x2f1: V278 = CALLDATALOAD 0x4
0x2f2: V279 = 0x24
0x2f4: V280 = CALLDATALOAD 0x24
0x2f5: V281 = 0x4b4
0x2f8: JUMP 0x4b4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3, V278, V280]
Exit stack: [V12, 0x1a3, V278, V280]

================================

Block 0x2f9
[0x2f9:0x2fa]
---
Predecessors: []
Successors: []
---
0x2f9 JUMPDEST
0x2fa STOP
---
0x2f9: JUMPDEST 
0x2fa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2fb
[0x2fb:0x301]
---
Predecessors: [0x88]
Successors: [0x302, 0x306]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V282 = CALLVALUE
0x2fd: V283 = ISZERO V282
0x2fe: V284 = 0x306
0x301: JUMPI 0x306 V283
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2fb]
Successors: []
---
0x302 PUSH1 0x0
0x304 DUP1
0x305 REVERT
---
0x302: V285 = 0x0
0x305: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x306
[0x306:0x30d]
---
Predecessors: [0x2fb]
Successors: [0x52d]
---
0x306 JUMPDEST
0x307 PUSH2 0x1a3
0x30a PUSH2 0x52d
0x30d JUMP
---
0x306: JUMPDEST 
0x307: V286 = 0x1a3
0x30a: V287 = 0x52d
0x30d: JUMP 0x52d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a3]
Exit stack: [V12, 0x1a3]

================================

Block 0x30e
[0x30e:0x30f]
---
Predecessors: []
Successors: []
---
0x30e JUMPDEST
0x30f STOP
---
0x30e: JUMPDEST 
0x30f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x310
[0x310:0x319]
---
Predecessors: [0x19b]
Successors: [0x31a, 0x395]
---
0x310 JUMPDEST
0x311 PUSH1 0x3
0x313 SLOAD
0x314 TIMESTAMP
0x315 LT
0x316 PUSH2 0x395
0x319 JUMPI
---
0x310: JUMPDEST 
0x311: V288 = 0x3
0x313: V289 = S[0x3]
0x314: V290 = TIMESTAMP
0x315: V291 = LT V290 V289
0x316: V292 = 0x395
0x319: JUMPI 0x395 V291
---
Entry stack: [V12, 0x1a3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3]

================================

Block 0x31a
[0x31a:0x324]
---
Predecessors: [0x310]
Successors: [0x325, 0x385]
---
0x31a PUSH1 0x1
0x31c SLOAD
0x31d PUSH1 0x2
0x31f SLOAD
0x320 LT
0x321 PUSH2 0x385
0x324 JUMPI
---
0x31a: V293 = 0x1
0x31c: V294 = S[0x1]
0x31d: V295 = 0x2
0x31f: V296 = S[0x2]
0x320: V297 = LT V296 V294
0x321: V298 = 0x385
0x324: JUMPI 0x385 V297
---
Entry stack: [V12, 0x1a3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3]

================================

Block 0x325
[0x325:0x384]
---
Predecessors: [0x31a]
Successors: [0x385]
---
0x325 PUSH1 0x7
0x327 DUP1
0x328 SLOAD
0x329 PUSH1 0xff
0x32b NOT
0x32c AND
0x32d PUSH1 0x1
0x32f OR
0x330 SWAP1
0x331 SSTORE
0x332 PUSH1 0x0
0x334 SLOAD
0x335 PUSH1 0x2
0x337 SLOAD
0x338 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x359 SWAP2
0x35a PUSH1 0x1
0x35c PUSH1 0xa0
0x35e PUSH1 0x2
0x360 EXP
0x361 SUB
0x362 AND
0x363 SWAP1
0x364 PUSH1 0x40
0x366 MLOAD
0x367 PUSH1 0x1
0x369 PUSH1 0xa0
0x36b PUSH1 0x2
0x36d EXP
0x36e SUB
0x36f SWAP1
0x370 SWAP3
0x371 AND
0x372 DUP3
0x373 MSTORE
0x374 PUSH1 0x20
0x376 DUP3
0x377 ADD
0x378 MSTORE
0x379 PUSH1 0x40
0x37b SWAP1
0x37c DUP2
0x37d ADD
0x37e SWAP1
0x37f MLOAD
0x380 DUP1
0x381 SWAP2
0x382 SUB
0x383 SWAP1
0x384 LOG1
---
0x325: V299 = 0x7
0x328: V300 = S[0x7]
0x329: V301 = 0xff
0x32b: V302 = NOT 0xff
0x32c: V303 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V300
0x32d: V304 = 0x1
0x32f: V305 = OR 0x1 V303
0x331: S[0x7] = V305
0x332: V306 = 0x0
0x334: V307 = S[0x0]
0x335: V308 = 0x2
0x337: V309 = S[0x2]
0x338: V310 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x35a: V311 = 0x1
0x35c: V312 = 0xa0
0x35e: V313 = 0x2
0x360: V314 = EXP 0x2 0xa0
0x361: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x362: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x364: V317 = 0x40
0x366: V318 = M[0x40]
0x367: V319 = 0x1
0x369: V320 = 0xa0
0x36b: V321 = 0x2
0x36d: V322 = EXP 0x2 0xa0
0x36e: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x371: V324 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x373: M[V318] = V324
0x374: V325 = 0x20
0x377: V326 = ADD V318 0x20
0x378: M[V326] = V309
0x379: V327 = 0x40
0x37d: V328 = ADD 0x40 V318
0x37f: V329 = M[0x40]
0x382: V330 = SUB V328 V329
0x384: LOG V329 V330 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V12, 0x1a3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3]

================================

Block 0x385
[0x385:0x394]
---
Predecessors: [0x31a, 0x325]
Successors: [0x395]
---
0x385 JUMPDEST
0x386 PUSH1 0x7
0x388 DUP1
0x389 SLOAD
0x38a PUSH2 0xff00
0x38d NOT
0x38e AND
0x38f PUSH2 0x100
0x392 OR
0x393 SWAP1
0x394 SSTORE
---
0x385: JUMPDEST 
0x386: V331 = 0x7
0x389: V332 = S[0x7]
0x38a: V333 = 0xff00
0x38d: V334 = NOT 0xff00
0x38e: V335 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V332
0x38f: V336 = 0x100
0x392: V337 = OR 0x100 V335
0x394: S[0x7] = V337
---
Entry stack: [V12, 0x1a3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3]

================================

Block 0x395
[0x395:0x395]
---
Predecessors: [0x310, 0x385]
Successors: [0x396]
---
0x395 JUMPDEST
---
0x395: JUMPDEST 
---
Entry stack: [V12, 0x1a3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3]

================================

Block 0x396
[0x396:0x396]
---
Predecessors: [0x395]
Successors: [0x397]
---
0x396 JUMPDEST
---
0x396: JUMPDEST 
---
Entry stack: [V12, 0x1a3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3]

================================

Block 0x397
[0x397:0x398]
---
Predecessors: [0x396]
Successors: [0x1a3]
---
0x397 JUMPDEST
0x398 JUMP
---
0x397: JUMPDEST 
0x398: JUMP 0x1a3
---
Entry stack: [V12, 0x1a3]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x399
[0x399:0x39e]
---
Predecessors: [0x1b0]
Successors: [0x1b8]
---
0x399 JUMPDEST
0x39a PUSH1 0x3
0x39c SLOAD
0x39d DUP2
0x39e JUMP
---
0x399: JUMPDEST 
0x39a: V338 = 0x3
0x39c: V339 = S[0x3]
0x39e: JUMP 0x1b8
---
Entry stack: [V12, 0x1b8]
Stack pops: 1
Stack additions: [S0, V339]
Exit stack: [V12, 0x1b8, V339]

================================

Block 0x39f
[0x39f:0x3ad]
---
Predecessors: [0x1d5]
Successors: [0x1dd]
---
0x39f JUMPDEST
0x3a0 PUSH1 0x0
0x3a2 SLOAD
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0xa0
0x3a7 PUSH1 0x2
0x3a9 EXP
0x3aa SUB
0x3ab AND
0x3ac DUP2
0x3ad JUMP
---
0x39f: JUMPDEST 
0x3a0: V340 = 0x0
0x3a2: V341 = S[0x0]
0x3a3: V342 = 0x1
0x3a5: V343 = 0xa0
0x3a7: V344 = 0x2
0x3a9: V345 = EXP 0x2 0xa0
0x3aa: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ab: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x3ad: JUMP 0x1dd
---
Entry stack: [V12, 0x1dd]
Stack pops: 1
Stack additions: [S0, V347]
Exit stack: [V12, 0x1dd, V347]

================================

Block 0x3ae
[0x3ae:0x3bc]
---
Predecessors: [0x204]
Successors: [0x1dd]
---
0x3ae JUMPDEST
0x3af PUSH1 0x5
0x3b1 SLOAD
0x3b2 PUSH1 0x1
0x3b4 PUSH1 0xa0
0x3b6 PUSH1 0x2
0x3b8 EXP
0x3b9 SUB
0x3ba AND
0x3bb DUP2
0x3bc JUMP
---
0x3ae: JUMPDEST 
0x3af: V348 = 0x5
0x3b1: V349 = S[0x5]
0x3b2: V350 = 0x1
0x3b4: V351 = 0xa0
0x3b6: V352 = 0x2
0x3b8: V353 = EXP 0x2 0xa0
0x3b9: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ba: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x3bc: JUMP 0x1dd
---
Entry stack: [V12, 0x1dd]
Stack pops: 1
Stack additions: [S0, V355]
Exit stack: [V12, 0x1dd, V355]

================================

Block 0x3bd
[0x3bd:0x3ce]
---
Predecessors: [0x233]
Successors: [0x1b8]
---
0x3bd JUMPDEST
0x3be PUSH1 0x6
0x3c0 PUSH1 0x20
0x3c2 MSTORE
0x3c3 PUSH1 0x0
0x3c5 SWAP1
0x3c6 DUP2
0x3c7 MSTORE
0x3c8 PUSH1 0x40
0x3ca SWAP1
0x3cb SHA3
0x3cc SLOAD
0x3cd DUP2
0x3ce JUMP
---
0x3bd: JUMPDEST 
0x3be: V356 = 0x6
0x3c0: V357 = 0x20
0x3c2: M[0x20] = 0x6
0x3c3: V358 = 0x0
0x3c7: M[0x0] = V216
0x3c8: V359 = 0x40
0x3cb: V360 = SHA3 0x0 0x40
0x3cc: V361 = S[V360]
0x3ce: JUMP 0x1b8
---
Entry stack: [V12, 0x1b8, V216]
Stack pops: 2
Stack additions: [S1, V361]
Exit stack: [V12, 0x1b8, V361]

================================

Block 0x3cf
[0x3cf:0x3d4]
---
Predecessors: [0x264]
Successors: [0x1b8]
---
0x3cf JUMPDEST
0x3d0 PUSH1 0x1
0x3d2 SLOAD
0x3d3 DUP2
0x3d4 JUMP
---
0x3cf: JUMPDEST 
0x3d0: V362 = 0x1
0x3d2: V363 = S[0x1]
0x3d4: JUMP 0x1b8
---
Entry stack: [V12, 0x1b8]
Stack pops: 1
Stack additions: [S0, V363]
Exit stack: [V12, 0x1b8, V363]

================================

Block 0x3d5
[0x3d5:0x3da]
---
Predecessors: [0x289]
Successors: [0x1b8]
---
0x3d5 JUMPDEST
0x3d6 PUSH1 0x2
0x3d8 SLOAD
0x3d9 DUP2
0x3da JUMP
---
0x3d5: JUMPDEST 
0x3d6: V364 = 0x2
0x3d8: V365 = S[0x2]
0x3da: JUMP 0x1b8
---
Entry stack: [V12, 0x1b8]
Stack pops: 1
Stack additions: [S0, V365]
Exit stack: [V12, 0x1b8, V365]

================================

Block 0x3db
[0x3db:0x3e4]
---
Predecessors: [0x2ae]
Successors: [0x3e5, 0x4a8]
---
0x3db JUMPDEST
0x3dc PUSH1 0x3
0x3de SLOAD
0x3df TIMESTAMP
0x3e0 LT
0x3e1 PUSH2 0x4a8
0x3e4 JUMPI
---
0x3db: JUMPDEST 
0x3dc: V366 = 0x3
0x3de: V367 = S[0x3]
0x3df: V368 = TIMESTAMP
0x3e0: V369 = LT V368 V367
0x3e1: V370 = 0x4a8
0x3e4: JUMPI 0x4a8 V369
---
Entry stack: [V12, 0x1a3, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, V257]

================================

Block 0x3e5
[0x3e5:0x3fb]
---
Predecessors: [0x3db]
Successors: [0x3fc, 0x4a8]
---
0x3e5 PUSH1 0x0
0x3e7 SLOAD
0x3e8 CALLER
0x3e9 PUSH1 0x1
0x3eb PUSH1 0xa0
0x3ed PUSH1 0x2
0x3ef EXP
0x3f0 SUB
0x3f1 SWAP1
0x3f2 DUP2
0x3f3 AND
0x3f4 SWAP2
0x3f5 AND
0x3f6 EQ
0x3f7 ISZERO
0x3f8 PUSH2 0x4a8
0x3fb JUMPI
---
0x3e5: V371 = 0x0
0x3e7: V372 = S[0x0]
0x3e8: V373 = CALLER
0x3e9: V374 = 0x1
0x3eb: V375 = 0xa0
0x3ed: V376 = 0x2
0x3ef: V377 = EXP 0x2 0xa0
0x3f0: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f3: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x3f5: V380 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V381 = EQ V380 V379
0x3f7: V382 = ISZERO V381
0x3f8: V383 = 0x4a8
0x3fb: JUMPI 0x4a8 V382
---
Entry stack: [V12, 0x1a3, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, V257]

================================

Block 0x3fc
[0x3fc:0x44c]
---
Predecessors: [0x3e5]
Successors: [0x44d, 0x451]
---
0x3fc PUSH1 0x5
0x3fe SLOAD
0x3ff PUSH1 0x1
0x401 PUSH1 0xa0
0x403 PUSH1 0x2
0x405 EXP
0x406 SUB
0x407 AND
0x408 PUSH4 0xa9059cbb
0x40d CALLER
0x40e DUP4
0x40f PUSH1 0x40
0x411 MLOAD
0x412 PUSH1 0xe0
0x414 PUSH1 0x2
0x416 EXP
0x417 PUSH4 0xffffffff
0x41c DUP6
0x41d AND
0x41e MUL
0x41f DUP2
0x420 MSTORE
0x421 PUSH1 0x1
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SUB
0x429 SWAP1
0x42a SWAP3
0x42b AND
0x42c PUSH1 0x4
0x42e DUP4
0x42f ADD
0x430 MSTORE
0x431 PUSH1 0x24
0x433 DUP3
0x434 ADD
0x435 MSTORE
0x436 PUSH1 0x44
0x438 ADD
0x439 PUSH1 0x0
0x43b PUSH1 0x40
0x43d MLOAD
0x43e DUP1
0x43f DUP4
0x440 SUB
0x441 DUP2
0x442 PUSH1 0x0
0x444 DUP8
0x445 DUP1
0x446 EXTCODESIZE
0x447 ISZERO
0x448 ISZERO
0x449 PUSH2 0x451
0x44c JUMPI
---
0x3fc: V384 = 0x5
0x3fe: V385 = S[0x5]
0x3ff: V386 = 0x1
0x401: V387 = 0xa0
0x403: V388 = 0x2
0x405: V389 = EXP 0x2 0xa0
0x406: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x407: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x408: V392 = 0xa9059cbb
0x40d: V393 = CALLER
0x40f: V394 = 0x40
0x411: V395 = M[0x40]
0x412: V396 = 0xe0
0x414: V397 = 0x2
0x416: V398 = EXP 0x2 0xe0
0x417: V399 = 0xffffffff
0x41d: V400 = AND 0xa9059cbb 0xffffffff
0x41e: V401 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x420: M[V395] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x421: V402 = 0x1
0x423: V403 = 0xa0
0x425: V404 = 0x2
0x427: V405 = EXP 0x2 0xa0
0x428: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42b: V407 = AND V393 0xffffffffffffffffffffffffffffffffffffffff
0x42c: V408 = 0x4
0x42f: V409 = ADD V395 0x4
0x430: M[V409] = V407
0x431: V410 = 0x24
0x434: V411 = ADD V395 0x24
0x435: M[V411] = V257
0x436: V412 = 0x44
0x438: V413 = ADD 0x44 V395
0x439: V414 = 0x0
0x43b: V415 = 0x40
0x43d: V416 = M[0x40]
0x440: V417 = SUB V413 V416
0x442: V418 = 0x0
0x446: V419 = EXTCODESIZE V391
0x447: V420 = ISZERO V419
0x448: V421 = ISZERO V420
0x449: V422 = 0x451
0x44c: JUMPI 0x451 V421
---
Entry stack: [V12, 0x1a3, V257]
Stack pops: 1
Stack additions: [S0, V391, 0xa9059cbb, V413, 0x0, V416, V417, V416, 0x0, V391]
Exit stack: [V12, 0x1a3, V257, V391, 0xa9059cbb, V413, 0x0, V416, V417, V416, 0x0, V391]

================================

Block 0x44d
[0x44d:0x450]
---
Predecessors: [0x3fc]
Successors: []
---
0x44d PUSH1 0x0
0x44f DUP1
0x450 REVERT
---
0x44d: V423 = 0x0
0x450: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a3, V257, V391, 0xa9059cbb, V413, 0x0, V416, V417, V416, 0x0, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, V257, V391, 0xa9059cbb, V413, 0x0, V416, V417, V416, 0x0, V391]

================================

Block 0x451
[0x451:0x45d]
---
Predecessors: [0x3fc]
Successors: [0x45e, 0x462]
---
0x451 JUMPDEST
0x452 PUSH2 0x2c6
0x455 GAS
0x456 SUB
0x457 CALL
0x458 ISZERO
0x459 ISZERO
0x45a PUSH2 0x462
0x45d JUMPI
---
0x451: JUMPDEST 
0x452: V424 = 0x2c6
0x455: V425 = GAS
0x456: V426 = SUB V425 0x2c6
0x457: V427 = CALL V426 V391 0x0 V416 V417 V416 0x0
0x458: V428 = ISZERO V427
0x459: V429 = ISZERO V428
0x45a: V430 = 0x462
0x45d: JUMPI 0x462 V429
---
Entry stack: [V12, 0x1a3, V257, V391, 0xa9059cbb, V413, 0x0, V416, V417, V416, 0x0, V391]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1a3, V257, V391, 0xa9059cbb, V413]

================================

Block 0x45e
[0x45e:0x461]
---
Predecessors: [0x451]
Successors: []
---
0x45e PUSH1 0x0
0x460 DUP1
0x461 REVERT
---
0x45e: V431 = 0x0
0x461: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a3, V257, V391, 0xa9059cbb, V413]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, V257, V391, 0xa9059cbb, V413]

================================

Block 0x462
[0x462:0x4a7]
---
Predecessors: [0x451]
Successors: [0x4a8]
---
0x462 JUMPDEST
0x463 POP
0x464 POP
0x465 POP
0x466 PUSH1 0x0
0x468 DUP1
0x469 MLOAD
0x46a PUSH1 0x20
0x46c PUSH2 0x6be
0x46f DUP4
0x470 CODECOPY
0x471 DUP2
0x472 MLOAD
0x473 SWAP2
0x474 MSTORE
0x475 CALLER
0x476 DUP3
0x477 PUSH1 0x1
0x479 PUSH1 0x40
0x47b MLOAD
0x47c PUSH1 0x1
0x47e PUSH1 0xa0
0x480 PUSH1 0x2
0x482 EXP
0x483 SUB
0x484 SWAP1
0x485 SWAP4
0x486 AND
0x487 DUP4
0x488 MSTORE
0x489 PUSH1 0x20
0x48b DUP4
0x48c ADD
0x48d SWAP2
0x48e SWAP1
0x48f SWAP2
0x490 MSTORE
0x491 ISZERO
0x492 ISZERO
0x493 PUSH1 0x40
0x495 DUP1
0x496 DUP4
0x497 ADD
0x498 SWAP2
0x499 SWAP1
0x49a SWAP2
0x49b MSTORE
0x49c PUSH1 0x60
0x49e SWAP1
0x49f SWAP2
0x4a0 ADD
0x4a1 SWAP1
0x4a2 MLOAD
0x4a3 DUP1
0x4a4 SWAP2
0x4a5 SUB
0x4a6 SWAP1
0x4a7 LOG1
---
0x462: JUMPDEST 
0x466: V432 = 0x0
0x469: V433 = M[0x0]
0x46a: V434 = 0x20
0x46c: V435 = 0x6be
0x470: CODECOPY 0x0 0x6be 0x20
0x472: V436 = M[0x0]
0x474: M[0x0] = V433
0x475: V437 = CALLER
0x477: V438 = 0x1
0x479: V439 = 0x40
0x47b: V440 = M[0x40]
0x47c: V441 = 0x1
0x47e: V442 = 0xa0
0x480: V443 = 0x2
0x482: V444 = EXP 0x2 0xa0
0x483: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x486: V446 = AND V437 0xffffffffffffffffffffffffffffffffffffffff
0x488: M[V440] = V446
0x489: V447 = 0x20
0x48c: V448 = ADD V440 0x20
0x490: M[V448] = V257
0x491: V449 = ISZERO 0x1
0x492: V450 = ISZERO 0x0
0x493: V451 = 0x40
0x497: V452 = ADD V440 0x40
0x49b: M[V452] = 0x1
0x49c: V453 = 0x60
0x4a0: V454 = ADD V440 0x60
0x4a2: V455 = M[0x40]
0x4a5: V456 = SUB V454 V455
0x4a7: LOG V455 V456 V436
---
Entry stack: [V12, 0x1a3, V257, V391, 0xa9059cbb, V413]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x1a3, V257]

================================

Block 0x4a8
[0x4a8:0x4a8]
---
Predecessors: [0x3db, 0x3e5, 0x462, 0x52d, 0x61c, 0x655]
Successors: [0x4a9]
---
0x4a8 JUMPDEST
---
0x4a8: JUMPDEST 
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x4a9
[0x4a9:0x4a9]
---
Predecessors: [0x4a8]
Successors: [0x4aa]
---
0x4a9 JUMPDEST
---
0x4a9: JUMPDEST 
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x4aa
[0x4aa:0x4aa]
---
Predecessors: [0x4a9]
Successors: [0x4ab]
---
0x4aa JUMPDEST
---
0x4aa: JUMPDEST 
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x4ab
[0x4ab:0x4ad]
---
Predecessors: [0x4aa]
Successors: [0x1a3]
---
0x4ab JUMPDEST
0x4ac POP
0x4ad JUMP
---
0x4ab: JUMPDEST 
0x4ad: JUMP 0x1a3
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ae
[0x4ae:0x4b3]
---
Predecessors: [0x2c6]
Successors: [0x1b8]
---
0x4ae JUMPDEST
0x4af PUSH1 0x4
0x4b1 SLOAD
0x4b2 DUP2
0x4b3 JUMP
---
0x4ae: JUMPDEST 
0x4af: V457 = 0x4
0x4b1: V458 = S[0x4]
0x4b3: JUMP 0x1b8
---
Entry stack: [V12, 0x1b8]
Stack pops: 1
Stack additions: [S0, V458]
Exit stack: [V12, 0x1b8, V458]

================================

Block 0x4b4
[0x4b4:0x4cb]
---
Predecessors: [0x2eb]
Successors: [0x4cc, 0x528]
---
0x4b4 JUMPDEST
0x4b5 PUSH1 0x0
0x4b7 SLOAD
0x4b8 CALLER
0x4b9 PUSH1 0x1
0x4bb PUSH1 0xa0
0x4bd PUSH1 0x2
0x4bf EXP
0x4c0 SUB
0x4c1 SWAP1
0x4c2 DUP2
0x4c3 AND
0x4c4 SWAP2
0x4c5 AND
0x4c6 EQ
0x4c7 ISZERO
0x4c8 PUSH2 0x528
0x4cb JUMPI
---
0x4b4: JUMPDEST 
0x4b5: V459 = 0x0
0x4b7: V460 = S[0x0]
0x4b8: V461 = CALLER
0x4b9: V462 = 0x1
0x4bb: V463 = 0xa0
0x4bd: V464 = 0x2
0x4bf: V465 = EXP 0x2 0xa0
0x4c0: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c3: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x4c5: V468 = AND V460 0xffffffffffffffffffffffffffffffffffffffff
0x4c6: V469 = EQ V468 V467
0x4c7: V470 = ISZERO V469
0x4c8: V471 = 0x528
0x4cb: JUMPI 0x528 V470
---
Entry stack: [V12, 0x1a3, V278, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, V278, V280]

================================

Block 0x4cc
[0x4cc:0x527]
---
Predecessors: [0x4b4]
Successors: [0x528]
---
0x4cc PUSH7 0x38d7ea4c68000
0x4d4 DUP3
0x4d5 MUL
0x4d6 PUSH5 0xe8d4a51000
0x4dc DUP3
0x4dd MUL
0x4de ADD
0x4df PUSH1 0x4
0x4e1 DUP2
0x4e2 SWAP1
0x4e3 SSTORE
0x4e4 PUSH32 0xfb92488ba7c255b32158331b4dd67ae708a8761b850ca51d1bbf57c177d35f89
0x505 SWAP1
0x506 PUSH1 0x40
0x508 MLOAD
0x509 SWAP1
0x50a DUP2
0x50b MSTORE
0x50c PUSH1 0x20
0x50e ADD
0x50f PUSH1 0x40
0x511 MLOAD
0x512 DUP1
0x513 SWAP2
0x514 SUB
0x515 SWAP1
0x516 LOG1
0x517 PUSH1 0x7
0x519 DUP1
0x51a SLOAD
0x51b PUSH3 0xff0000
0x51f NOT
0x520 AND
0x521 PUSH3 0x10000
0x525 OR
0x526 SWAP1
0x527 SSTORE
---
0x4cc: V472 = 0x38d7ea4c68000
0x4d5: V473 = MUL V278 0x38d7ea4c68000
0x4d6: V474 = 0xe8d4a51000
0x4dd: V475 = MUL V280 0xe8d4a51000
0x4de: V476 = ADD V475 V473
0x4df: V477 = 0x4
0x4e3: S[0x4] = V476
0x4e4: V478 = 0xfb92488ba7c255b32158331b4dd67ae708a8761b850ca51d1bbf57c177d35f89
0x506: V479 = 0x40
0x508: V480 = M[0x40]
0x50b: M[V480] = V476
0x50c: V481 = 0x20
0x50e: V482 = ADD 0x20 V480
0x50f: V483 = 0x40
0x511: V484 = M[0x40]
0x514: V485 = SUB V482 V484
0x516: LOG V484 V485 0xfb92488ba7c255b32158331b4dd67ae708a8761b850ca51d1bbf57c177d35f89
0x517: V486 = 0x7
0x51a: V487 = S[0x7]
0x51b: V488 = 0xff0000
0x51f: V489 = NOT 0xff0000
0x520: V490 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V487
0x521: V491 = 0x10000
0x525: V492 = OR 0x10000 V490
0x527: S[0x7] = V492
---
Entry stack: [V12, 0x1a3, V278, V280]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x1a3, V278, V280]

================================

Block 0x528
[0x528:0x528]
---
Predecessors: [0x4b4, 0x4cc]
Successors: [0x529]
---
0x528 JUMPDEST
---
0x528: JUMPDEST 
---
Entry stack: [V12, 0x1a3, V278, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, V278, V280]

================================

Block 0x529
[0x529:0x52c]
---
Predecessors: [0x528]
Successors: [0x1a3]
---
0x529 JUMPDEST
0x52a POP
0x52b POP
0x52c JUMP
---
0x529: JUMPDEST 
0x52c: JUMP 0x1a3
---
Entry stack: [V12, 0x1a3, V278, V280]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x52d
[0x52d:0x539]
---
Predecessors: [0x306]
Successors: [0x4a8, 0x53a]
---
0x52d JUMPDEST
0x52e PUSH1 0x3
0x530 SLOAD
0x531 PUSH1 0x0
0x533 SWAP1
0x534 TIMESTAMP
0x535 LT
0x536 PUSH2 0x4a8
0x539 JUMPI
---
0x52d: JUMPDEST 
0x52e: V493 = 0x3
0x530: V494 = S[0x3]
0x531: V495 = 0x0
0x534: V496 = TIMESTAMP
0x535: V497 = LT V496 V494
0x536: V498 = 0x4a8
0x539: JUMPI 0x4a8 V497
---
Entry stack: [V12, 0x1a3]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1a3, 0x0]

================================

Block 0x53a
[0x53a:0x545]
---
Predecessors: [0x52d]
Successors: [0x546, 0x5fa]
---
0x53a PUSH1 0x7
0x53c SLOAD
0x53d PUSH1 0xff
0x53f AND
0x540 ISZERO
0x541 ISZERO
0x542 PUSH2 0x5fa
0x545 JUMPI
---
0x53a: V499 = 0x7
0x53c: V500 = S[0x7]
0x53d: V501 = 0xff
0x53f: V502 = AND 0xff V500
0x540: V503 = ISZERO V502
0x541: V504 = ISZERO V503
0x542: V505 = 0x5fa
0x545: JUMPI 0x5fa V504
---
Entry stack: [V12, 0x1a3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, 0x0]

================================

Block 0x546
[0x546:0x56c]
---
Predecessors: [0x53a]
Successors: [0x56d, 0x5fa]
---
0x546 POP
0x547 PUSH1 0x1
0x549 PUSH1 0xa0
0x54b PUSH1 0x2
0x54d EXP
0x54e SUB
0x54f CALLER
0x550 AND
0x551 PUSH1 0x0
0x553 SWAP1
0x554 DUP2
0x555 MSTORE
0x556 PUSH1 0x6
0x558 PUSH1 0x20
0x55a MSTORE
0x55b PUSH1 0x40
0x55d DUP2
0x55e SHA3
0x55f DUP1
0x560 SLOAD
0x561 SWAP1
0x562 DUP3
0x563 SWAP1
0x564 SSTORE
0x565 SWAP1
0x566 DUP2
0x567 GT
0x568 ISZERO
0x569 PUSH2 0x5fa
0x56c JUMPI
---
0x547: V506 = 0x1
0x549: V507 = 0xa0
0x54b: V508 = 0x2
0x54d: V509 = EXP 0x2 0xa0
0x54e: V510 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54f: V511 = CALLER
0x550: V512 = AND V511 0xffffffffffffffffffffffffffffffffffffffff
0x551: V513 = 0x0
0x555: M[0x0] = V512
0x556: V514 = 0x6
0x558: V515 = 0x20
0x55a: M[0x20] = 0x6
0x55b: V516 = 0x40
0x55e: V517 = SHA3 0x0 0x40
0x560: V518 = S[V517]
0x564: S[V517] = 0x0
0x567: V519 = GT V518 0x0
0x568: V520 = ISZERO V519
0x569: V521 = 0x5fa
0x56c: JUMPI 0x5fa V520
---
Entry stack: [V12, 0x1a3, 0x0]
Stack pops: 1
Stack additions: [V518]
Exit stack: [V12, 0x1a3, V518]

================================

Block 0x56d
[0x56d:0x597]
---
Predecessors: [0x546]
Successors: [0x598, 0x5de]
---
0x56d PUSH1 0x1
0x56f PUSH1 0xa0
0x571 PUSH1 0x2
0x573 EXP
0x574 SUB
0x575 CALLER
0x576 AND
0x577 DUP2
0x578 ISZERO
0x579 PUSH2 0x8fc
0x57c MUL
0x57d DUP3
0x57e PUSH1 0x40
0x580 MLOAD
0x581 PUSH1 0x0
0x583 PUSH1 0x40
0x585 MLOAD
0x586 DUP1
0x587 DUP4
0x588 SUB
0x589 DUP2
0x58a DUP6
0x58b DUP9
0x58c DUP9
0x58d CALL
0x58e SWAP4
0x58f POP
0x590 POP
0x591 POP
0x592 POP
0x593 ISZERO
0x594 PUSH2 0x5de
0x597 JUMPI
---
0x56d: V522 = 0x1
0x56f: V523 = 0xa0
0x571: V524 = 0x2
0x573: V525 = EXP 0x2 0xa0
0x574: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x575: V527 = CALLER
0x576: V528 = AND V527 0xffffffffffffffffffffffffffffffffffffffff
0x578: V529 = ISZERO V518
0x579: V530 = 0x8fc
0x57c: V531 = MUL 0x8fc V529
0x57e: V532 = 0x40
0x580: V533 = M[0x40]
0x581: V534 = 0x0
0x583: V535 = 0x40
0x585: V536 = M[0x40]
0x588: V537 = SUB V533 V536
0x58d: V538 = CALL V531 V528 V518 V536 V537 V536 0x0
0x593: V539 = ISZERO V538
0x594: V540 = 0x5de
0x597: JUMPI 0x5de V539
---
Entry stack: [V12, 0x1a3, V518]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1a3, V518]

================================

Block 0x598
[0x598:0x5dd]
---
Predecessors: [0x56d]
Successors: [0x5fa]
---
0x598 PUSH1 0x0
0x59a DUP1
0x59b MLOAD
0x59c PUSH1 0x20
0x59e PUSH2 0x6be
0x5a1 DUP4
0x5a2 CODECOPY
0x5a3 DUP2
0x5a4 MLOAD
0x5a5 SWAP2
0x5a6 MSTORE
0x5a7 CALLER
0x5a8 DUP3
0x5a9 PUSH1 0x0
0x5ab PUSH1 0x40
0x5ad MLOAD
0x5ae PUSH1 0x1
0x5b0 PUSH1 0xa0
0x5b2 PUSH1 0x2
0x5b4 EXP
0x5b5 SUB
0x5b6 SWAP1
0x5b7 SWAP4
0x5b8 AND
0x5b9 DUP4
0x5ba MSTORE
0x5bb PUSH1 0x20
0x5bd DUP4
0x5be ADD
0x5bf SWAP2
0x5c0 SWAP1
0x5c1 SWAP2
0x5c2 MSTORE
0x5c3 ISZERO
0x5c4 ISZERO
0x5c5 PUSH1 0x40
0x5c7 DUP1
0x5c8 DUP4
0x5c9 ADD
0x5ca SWAP2
0x5cb SWAP1
0x5cc SWAP2
0x5cd MSTORE
0x5ce PUSH1 0x60
0x5d0 SWAP1
0x5d1 SWAP2
0x5d2 ADD
0x5d3 SWAP1
0x5d4 MLOAD
0x5d5 DUP1
0x5d6 SWAP2
0x5d7 SUB
0x5d8 SWAP1
0x5d9 LOG1
0x5da PUSH2 0x5fa
0x5dd JUMP
---
0x598: V541 = 0x0
0x59b: V542 = M[0x0]
0x59c: V543 = 0x20
0x59e: V544 = 0x6be
0x5a2: CODECOPY 0x0 0x6be 0x20
0x5a4: V545 = M[0x0]
0x5a6: M[0x0] = V542
0x5a7: V546 = CALLER
0x5a9: V547 = 0x0
0x5ab: V548 = 0x40
0x5ad: V549 = M[0x40]
0x5ae: V550 = 0x1
0x5b0: V551 = 0xa0
0x5b2: V552 = 0x2
0x5b4: V553 = EXP 0x2 0xa0
0x5b5: V554 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b8: V555 = AND V546 0xffffffffffffffffffffffffffffffffffffffff
0x5ba: M[V549] = V555
0x5bb: V556 = 0x20
0x5be: V557 = ADD V549 0x20
0x5c2: M[V557] = V518
0x5c3: V558 = ISZERO 0x0
0x5c4: V559 = ISZERO 0x1
0x5c5: V560 = 0x40
0x5c9: V561 = ADD V549 0x40
0x5cd: M[V561] = 0x0
0x5ce: V562 = 0x60
0x5d2: V563 = ADD V549 0x60
0x5d4: V564 = M[0x40]
0x5d7: V565 = SUB V563 V564
0x5d9: LOG V564 V565 V545
0x5da: V566 = 0x5fa
0x5dd: JUMP 0x5fa
---
Entry stack: [V12, 0x1a3, V518]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1a3, V518]

================================

Block 0x5de
[0x5de:0x5f9]
---
Predecessors: [0x56d]
Successors: [0x5fa]
---
0x5de JUMPDEST
0x5df PUSH1 0x1
0x5e1 PUSH1 0xa0
0x5e3 PUSH1 0x2
0x5e5 EXP
0x5e6 SUB
0x5e7 CALLER
0x5e8 AND
0x5e9 PUSH1 0x0
0x5eb SWAP1
0x5ec DUP2
0x5ed MSTORE
0x5ee PUSH1 0x6
0x5f0 PUSH1 0x20
0x5f2 MSTORE
0x5f3 PUSH1 0x40
0x5f5 SWAP1
0x5f6 SHA3
0x5f7 DUP2
0x5f8 SWAP1
0x5f9 SSTORE
---
0x5de: JUMPDEST 
0x5df: V567 = 0x1
0x5e1: V568 = 0xa0
0x5e3: V569 = 0x2
0x5e5: V570 = EXP 0x2 0xa0
0x5e6: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e7: V572 = CALLER
0x5e8: V573 = AND V572 0xffffffffffffffffffffffffffffffffffffffff
0x5e9: V574 = 0x0
0x5ed: M[0x0] = V573
0x5ee: V575 = 0x6
0x5f0: V576 = 0x20
0x5f2: M[0x20] = 0x6
0x5f3: V577 = 0x40
0x5f6: V578 = SHA3 0x0 0x40
0x5f9: S[V578] = V518
---
Entry stack: [V12, 0x1a3, V518]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1a3, V518]

================================

Block 0x5fa
[0x5fa:0x5fa]
---
Predecessors: [0x53a, 0x546, 0x598, 0x5de]
Successors: [0x5fb]
---
0x5fa JUMPDEST
---
0x5fa: JUMPDEST 
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x5fb
[0x5fb:0x5fb]
---
Predecessors: [0x5fa]
Successors: [0x5fc]
---
0x5fb JUMPDEST
---
0x5fb: JUMPDEST 
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x5fc
[0x5fc:0x608]
---
Predecessors: [0x5fb]
Successors: [0x609, 0x61c]
---
0x5fc JUMPDEST
0x5fd PUSH1 0x7
0x5ff SLOAD
0x600 PUSH1 0xff
0x602 AND
0x603 DUP1
0x604 ISZERO
0x605 PUSH2 0x61c
0x608 JUMPI
---
0x5fc: JUMPDEST 
0x5fd: V579 = 0x7
0x5ff: V580 = S[0x7]
0x600: V581 = 0xff
0x602: V582 = AND 0xff V580
0x604: V583 = ISZERO V582
0x605: V584 = 0x61c
0x608: JUMPI 0x61c V583
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: [V582]
Exit stack: [V12, 0x1a3, S0, V582]

================================

Block 0x609
[0x609:0x61b]
---
Predecessors: [0x5fc]
Successors: [0x61c]
---
0x609 POP
0x60a PUSH1 0x0
0x60c SLOAD
0x60d CALLER
0x60e PUSH1 0x1
0x610 PUSH1 0xa0
0x612 PUSH1 0x2
0x614 EXP
0x615 SUB
0x616 SWAP1
0x617 DUP2
0x618 AND
0x619 SWAP2
0x61a AND
0x61b EQ
---
0x60a: V585 = 0x0
0x60c: V586 = S[0x0]
0x60d: V587 = CALLER
0x60e: V588 = 0x1
0x610: V589 = 0xa0
0x612: V590 = 0x2
0x614: V591 = EXP 0x2 0xa0
0x615: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x618: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x61a: V594 = AND V586 0xffffffffffffffffffffffffffffffffffffffff
0x61b: V595 = EQ V594 V593
---
Entry stack: [V12, 0x1a3, S1, V582]
Stack pops: 1
Stack additions: [V595]
Exit stack: [V12, 0x1a3, S1, V595]

================================

Block 0x61c
[0x61c:0x621]
---
Predecessors: [0x5fc, 0x609]
Successors: [0x4a8, 0x622]
---
0x61c JUMPDEST
0x61d ISZERO
0x61e PUSH2 0x4a8
0x621 JUMPI
---
0x61c: JUMPDEST 
0x61d: V596 = ISZERO S0
0x61e: V597 = 0x4a8
0x621: JUMPI 0x4a8 V596
---
Entry stack: [V12, 0x1a3, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1a3, S1]

================================

Block 0x622
[0x622:0x654]
---
Predecessors: [0x61c]
Successors: [0x655, 0x6ab]
---
0x622 PUSH1 0x0
0x624 SLOAD
0x625 PUSH1 0x2
0x627 SLOAD
0x628 PUSH1 0x1
0x62a PUSH1 0xa0
0x62c PUSH1 0x2
0x62e EXP
0x62f SUB
0x630 SWAP1
0x631 SWAP2
0x632 AND
0x633 SWAP1
0x634 DUP1
0x635 ISZERO
0x636 PUSH2 0x8fc
0x639 MUL
0x63a SWAP1
0x63b PUSH1 0x40
0x63d MLOAD
0x63e PUSH1 0x0
0x640 PUSH1 0x40
0x642 MLOAD
0x643 DUP1
0x644 DUP4
0x645 SUB
0x646 DUP2
0x647 DUP6
0x648 DUP9
0x649 DUP9
0x64a CALL
0x64b SWAP4
0x64c POP
0x64d POP
0x64e POP
0x64f POP
0x650 ISZERO
0x651 PUSH2 0x6ab
0x654 JUMPI
---
0x622: V598 = 0x0
0x624: V599 = S[0x0]
0x625: V600 = 0x2
0x627: V601 = S[0x2]
0x628: V602 = 0x1
0x62a: V603 = 0xa0
0x62c: V604 = 0x2
0x62e: V605 = EXP 0x2 0xa0
0x62f: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x632: V607 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x635: V608 = ISZERO V601
0x636: V609 = 0x8fc
0x639: V610 = MUL 0x8fc V608
0x63b: V611 = 0x40
0x63d: V612 = M[0x40]
0x63e: V613 = 0x0
0x640: V614 = 0x40
0x642: V615 = M[0x40]
0x645: V616 = SUB V612 V615
0x64a: V617 = CALL V610 V607 V601 V615 V616 V615 0x0
0x650: V618 = ISZERO V617
0x651: V619 = 0x6ab
0x654: JUMPI 0x6ab V618
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x655
[0x655:0x6aa]
---
Predecessors: [0x622]
Successors: [0x4a8]
---
0x655 PUSH1 0x0
0x657 DUP1
0x658 SLOAD
0x659 PUSH1 0x2
0x65b SLOAD
0x65c PUSH1 0x0
0x65e DUP1
0x65f MLOAD
0x660 PUSH1 0x20
0x662 PUSH2 0x6be
0x665 DUP4
0x666 CODECOPY
0x667 DUP2
0x668 MLOAD
0x669 SWAP2
0x66a MSTORE
0x66b SWAP3
0x66c PUSH1 0x1
0x66e PUSH1 0xa0
0x670 PUSH1 0x2
0x672 EXP
0x673 SUB
0x674 SWAP1
0x675 SWAP3
0x676 AND
0x677 SWAP2
0x678 PUSH1 0x40
0x67a MLOAD
0x67b PUSH1 0x1
0x67d PUSH1 0xa0
0x67f PUSH1 0x2
0x681 EXP
0x682 SUB
0x683 SWAP1
0x684 SWAP4
0x685 AND
0x686 DUP4
0x687 MSTORE
0x688 PUSH1 0x20
0x68a DUP4
0x68b ADD
0x68c SWAP2
0x68d SWAP1
0x68e SWAP2
0x68f MSTORE
0x690 ISZERO
0x691 ISZERO
0x692 PUSH1 0x40
0x694 DUP1
0x695 DUP4
0x696 ADD
0x697 SWAP2
0x698 SWAP1
0x699 SWAP2
0x69a MSTORE
0x69b PUSH1 0x60
0x69d SWAP1
0x69e SWAP2
0x69f ADD
0x6a0 SWAP1
0x6a1 MLOAD
0x6a2 DUP1
0x6a3 SWAP2
0x6a4 SUB
0x6a5 SWAP1
0x6a6 LOG1
0x6a7 PUSH2 0x4a8
0x6aa JUMP
---
0x655: V620 = 0x0
0x658: V621 = S[0x0]
0x659: V622 = 0x2
0x65b: V623 = S[0x2]
0x65c: V624 = 0x0
0x65f: V625 = M[0x0]
0x660: V626 = 0x20
0x662: V627 = 0x6be
0x666: CODECOPY 0x0 0x6be 0x20
0x668: V628 = M[0x0]
0x66a: M[0x0] = V625
0x66c: V629 = 0x1
0x66e: V630 = 0xa0
0x670: V631 = 0x2
0x672: V632 = EXP 0x2 0xa0
0x673: V633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x676: V634 = AND V621 0xffffffffffffffffffffffffffffffffffffffff
0x678: V635 = 0x40
0x67a: V636 = M[0x40]
0x67b: V637 = 0x1
0x67d: V638 = 0xa0
0x67f: V639 = 0x2
0x681: V640 = EXP 0x2 0xa0
0x682: V641 = SUB 0x10000000000000000000000000000000000000000 0x1
0x685: V642 = AND V634 0xffffffffffffffffffffffffffffffffffffffff
0x687: M[V636] = V642
0x688: V643 = 0x20
0x68b: V644 = ADD V636 0x20
0x68f: M[V644] = V623
0x690: V645 = ISZERO 0x0
0x691: V646 = ISZERO 0x1
0x692: V647 = 0x40
0x696: V648 = ADD V636 0x40
0x69a: M[V648] = 0x0
0x69b: V649 = 0x60
0x69f: V650 = ADD V636 0x60
0x6a1: V651 = M[0x40]
0x6a4: V652 = SUB V650 V651
0x6a6: LOG V651 V652 V628
0x6a7: V653 = 0x4a8
0x6aa: JUMP 0x4a8
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x6ab
[0x6ab:0x6b5]
---
Predecessors: [0x622]
Successors: [0x6b6]
---
0x6ab JUMPDEST
0x6ac PUSH1 0x7
0x6ae DUP1
0x6af SLOAD
0x6b0 PUSH1 0xff
0x6b2 NOT
0x6b3 AND
0x6b4 SWAP1
0x6b5 SSTORE
---
0x6ab: JUMPDEST 
0x6ac: V654 = 0x7
0x6af: V655 = S[0x7]
0x6b0: V656 = 0xff
0x6b2: V657 = NOT 0xff
0x6b3: V658 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V655
0x6b5: S[0x7] = V658
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x6b6
[0x6b6:0x6b6]
---
Predecessors: [0x6ab]
Successors: [0x6b7]
---
0x6b6 JUMPDEST
---
0x6b6: JUMPDEST 
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x6b7
[0x6b7:0x6b7]
---
Predecessors: [0x6b6]
Successors: [0x6b8]
---
0x6b7 JUMPDEST
---
0x6b7: JUMPDEST 
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x6b8
[0x6b8:0x6b8]
---
Predecessors: [0x6b7]
Successors: [0x6b9]
---
0x6b8 JUMPDEST
---
0x6b8: JUMPDEST 
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x6b9
[0x6b9:0x6b9]
---
Predecessors: [0x6b8]
Successors: [0x6ba]
---
0x6b9 JUMPDEST
---
0x6b9: JUMPDEST 
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a3, S0]

================================

Block 0x6ba
[0x6ba:0x6bc]
---
Predecessors: [0x6b9]
Successors: [0x1a3]
---
0x6ba JUMPDEST
0x6bb POP
0x6bc JUMP
---
0x6ba: JUMPDEST 
0x6bc: JUMP 0x1a3
---
Entry stack: [V12, 0x1a3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x6bd
[0x6bd:0x720]
---
Predecessors: []
Successors: []
---
0x6bd STOP
0x6be MISSING 0xe8
0x6bf TIMESTAMP
0x6c0 MISSING 0xae
0x6c1 MISSING 0xa7
0x6c2 MISSING 0xa5
0x6c3 CALL
0x6c4 MISSING 0xb0
0x6c5 LT
0x6c6 MISSING 0x49
0x6c7 MISSING 0xd7
0x6c8 MSTORE
0x6c9 STOP
0x6ca DUP13
0x6cb MSTORE8
0x6cc MISSING 0xc5
0x6cd MISSING 0x28
0x6ce SWAP1
0x6cf MISSING 0xb1
0x6d0 MISSING 0xa6
0x6d1 MISSING 0xda
0x6d2 MISSING 0xf6
0x6d3 PUSH1 0xcf
0x6d5 CODECOPY
0x6d6 MISSING 0xe8
0x6d7 MISSING 0xee
0x6d8 MISSING 0xc5
0x6d9 MOD
0x6da GT
0x6db MISSING 0x2b
0x6dc MISSING 0xbd
0x6dd MISSING 0xf6
0x6de LOG1
0x6df PUSH6 0x627a7a723058
0x6e6 SHA3
0x6e7 NOT
0x6e8 MISSING 0xcc
0x6e9 MISSING 0x48
0x6ea MISSING 0xaa
0x6eb MOD
0x6ec DUP13
0x6ed SWAP8
0x6ee MISSING 0xe7
0x6ef MISSING 0x5d
0x6f0 MISSING 0xd8
0x6f1 MISSING 0x1f
0x6f2 XOR
0x6f3 SHA3
0x6f4 MISSING 0xb4
0x6f5 MISSING 0xb0
0x6f6 INVALID
0x6f7 MISSING 0xc5
0x6f8 DELEGATECALL
0x6f9 MISSING 0xe4
0x6fa SLT
0x6fb REVERT
0x6fc MISSING 0xa6
0x6fd ADD
0x6fe MISSING 0xd6
0x6ff MISSING 0xf9
0x700 DUP4
0x701 CODESIZE
0x702 PUSH30 0x8862a3060029
---
0x6bd: STOP 
0x6be: MISSING 0xe8
0x6bf: V659 = TIMESTAMP
0x6c0: MISSING 0xae
0x6c1: MISSING 0xa7
0x6c2: MISSING 0xa5
0x6c3: V660 = CALL S0 S1 S2 S3 S4 S5 S6
0x6c4: MISSING 0xb0
0x6c5: V661 = LT S0 S1
0x6c6: MISSING 0x49
0x6c7: MISSING 0xd7
0x6c8: M[S0] = S1
0x6c9: STOP 
0x6cb: M8[S12] = S0
0x6cc: MISSING 0xc5
0x6cd: MISSING 0x28
0x6cf: MISSING 0xb1
0x6d0: MISSING 0xa6
0x6d1: MISSING 0xda
0x6d2: MISSING 0xf6
0x6d3: V662 = 0xcf
0x6d5: CODECOPY 0xcf S0 S1
0x6d6: MISSING 0xe8
0x6d7: MISSING 0xee
0x6d8: MISSING 0xc5
0x6d9: V663 = MOD S0 S1
0x6da: V664 = GT V663 S2
0x6db: MISSING 0x2b
0x6dc: MISSING 0xbd
0x6dd: MISSING 0xf6
0x6de: LOG S0 S1 S2
0x6df: V665 = 0x627a7a723058
0x6e6: V666 = SHA3 0x627a7a723058 S3
0x6e7: V667 = NOT V666
0x6e8: MISSING 0xcc
0x6e9: MISSING 0x48
0x6ea: MISSING 0xaa
0x6eb: V668 = MOD S0 S1
0x6ee: MISSING 0xe7
0x6ef: MISSING 0x5d
0x6f0: MISSING 0xd8
0x6f1: MISSING 0x1f
0x6f2: V669 = XOR S0 S1
0x6f3: V670 = SHA3 V669 S2
0x6f4: MISSING 0xb4
0x6f5: MISSING 0xb0
0x6f6: INVALID 
0x6f7: MISSING 0xc5
0x6f8: V671 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x6f9: MISSING 0xe4
0x6fa: V672 = SLT S0 S1
0x6fb: REVERT V672 S2
0x6fc: MISSING 0xa6
0x6fd: V673 = ADD S0 S1
0x6fe: MISSING 0xd6
0x6ff: MISSING 0xf9
0x701: V674 = CODESIZE
0x702: V675 = 0x8862a3060029
---
Entry stack: []
Stack pops: 0
Stack additions: [V659, V660, V661, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V664, V667, S8, V668, S2, S3, S4, S5, S6, S7, S13, S9, S10, S11, S12, S13, V670, V671, V673, 0x8862a3060029, V674, S3, S0, S1, S2, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x190
Exit block: 0x1a3
Body: 0x190, 0x197, 0x19b, 0x1a3, 0x310, 0x31a, 0x325, 0x385, 0x395, 0x396, 0x397

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1a5
Exit block: 0x1b8
Body: 0x1a5, 0x1ac, 0x1b0, 0x1b8, 0x399

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x1ca
Exit block: 0x1dd
Body: 0x1ca, 0x1d1, 0x1d5, 0x1dd, 0x39f

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x1f9
Exit block: 0x1dd
Body: 0x1dd, 0x1f9, 0x200, 0x204, 0x3ae

Function 4:
Public function signature: 0x70a08231
Entry block: 0x228
Exit block: 0x1b8
Body: 0x1b8, 0x228, 0x22f, 0x233, 0x3bd

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x259
Exit block: 0x1b8
Body: 0x1b8, 0x259, 0x260, 0x264, 0x3cf

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x27e
Exit block: 0x1b8
Body: 0x1b8, 0x27e, 0x285, 0x289, 0x3d5

Function 7:
Public function signature: 0x9fc71b31
Entry block: 0x2a3
Exit block: 0x1a3
Body: 0x1a3, 0x2a3, 0x2aa, 0x2ae, 0x3db, 0x3e5, 0x3fc, 0x44d, 0x451, 0x45e, 0x462, 0x4a8, 0x4a9, 0x4aa, 0x4ab

Function 8:
Public function signature: 0xa035b1fe
Entry block: 0x2bb
Exit block: 0x1b8
Body: 0x1b8, 0x2bb, 0x2c2, 0x2c6, 0x4ae

Function 9:
Public function signature: 0xe933e6eb
Entry block: 0x2e0
Exit block: 0x1a3
Body: 0x1a3, 0x2e0, 0x2e7, 0x2eb, 0x4b4, 0x4cc, 0x528, 0x529

Function 10:
Public function signature: 0xfd6b7ef8
Entry block: 0x2fb
Exit block: 0x1a3
Body: 0x1a3, 0x2fb, 0x302, 0x306, 0x4a8, 0x4a9, 0x4aa, 0x4ab, 0x52d, 0x53a, 0x546, 0x56d, 0x598, 0x5de, 0x5fa, 0x5fb, 0x5fc, 0x609, 0x61c, 0x622, 0x655, 0x6ab, 0x6b6, 0x6b7, 0x6b8, 0x6b9, 0x6ba

Function 11:
Public fallback function
Entry block: 0x93
Exit block: 0x18d
Body: 0x93, 0x94, 0xa8, 0xac, 0xf1, 0xf2, 0x132, 0x136, 0x143, 0x147, 0x18d

