Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xfb]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xfb
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xfb
0xc: JUMPI 0xfb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x105]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2d05d3f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x105
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2d05d3f
0x3b: V13 = EQ V11 0x2d05d3f
0x3c: V14 = 0x105
0x3f: JUMPI 0x105 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x136]
---
0x40 DUP1
0x41 PUSH4 0x244b34c5
0x46 EQ
0x47 PUSH2 0x136
0x4a JUMPI
---
0x41: V15 = 0x244b34c5
0x46: V16 = EQ 0x244b34c5 V11
0x47: V17 = 0x136
0x4a: JUMPI 0x136 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x15d]
---
0x4b DUP1
0x4c PUSH4 0x38771242
0x51 EQ
0x52 PUSH2 0x15d
0x55 JUMPI
---
0x4c: V18 = 0x38771242
0x51: V19 = EQ 0x38771242 V11
0x52: V20 = 0x15d
0x55: JUMPI 0x15d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x172]
---
0x56 DUP1
0x57 PUSH4 0x38af3eed
0x5c EQ
0x5d PUSH2 0x172
0x60 JUMPI
---
0x57: V21 = 0x38af3eed
0x5c: V22 = EQ 0x38af3eed V11
0x5d: V23 = 0x172
0x60: JUMPI 0x172 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x187]
---
0x61 DUP1
0x62 PUSH4 0x4c801cee
0x67 EQ
0x68 PUSH2 0x187
0x6b JUMPI
---
0x62: V24 = 0x4c801cee
0x67: V25 = EQ 0x4c801cee V11
0x68: V26 = 0x187
0x6b: JUMPI 0x187 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1a8]
---
0x6c DUP1
0x6d PUSH4 0x54fd4d50
0x72 EQ
0x73 PUSH2 0x1a8
0x76 JUMPI
---
0x6d: V27 = 0x54fd4d50
0x72: V28 = EQ 0x54fd4d50 V11
0x73: V29 = 0x1a8
0x76: JUMPI 0x1a8 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x232]
---
0x77 DUP1
0x78 PUSH4 0x6e66f6e9
0x7d EQ
0x7e PUSH2 0x232
0x81 JUMPI
---
0x78: V30 = 0x6e66f6e9
0x7d: V31 = EQ 0x6e66f6e9 V11
0x7e: V32 = 0x232
0x81: JUMPI 0x232 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x247]
---
0x82 DUP1
0x83 PUSH4 0x78e97925
0x88 EQ
0x89 PUSH2 0x247
0x8c JUMPI
---
0x83: V33 = 0x78e97925
0x88: V34 = EQ 0x78e97925 V11
0x89: V35 = 0x247
0x8c: JUMPI 0x247 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x25c]
---
0x8d DUP1
0x8e PUSH4 0x8007604b
0x93 EQ
0x94 PUSH2 0x25c
0x97 JUMPI
---
0x8e: V36 = 0x8007604b
0x93: V37 = EQ 0x8007604b V11
0x94: V38 = 0x25c
0x97: JUMPI 0x25c V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x271]
---
0x98 DUP1
0x99 PUSH4 0x86f32586
0x9e EQ
0x9f PUSH2 0x271
0xa2 JUMPI
---
0x99: V39 = 0x86f32586
0x9e: V40 = EQ 0x86f32586 V11
0x9f: V41 = 0x271
0xa2: JUMPI 0x271 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x286]
---
0xa3 DUP1
0xa4 PUSH4 0x9a9e3fd8
0xa9 EQ
0xaa PUSH2 0x286
0xad JUMPI
---
0xa4: V42 = 0x9a9e3fd8
0xa9: V43 = EQ 0x9a9e3fd8 V11
0xaa: V44 = 0x286
0xad: JUMPI 0x286 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x29b]
---
0xae DUP1
0xaf PUSH4 0xc19d93fb
0xb4 EQ
0xb5 PUSH2 0x29b
0xb8 JUMPI
---
0xaf: V45 = 0xc19d93fb
0xb4: V46 = EQ 0xc19d93fb V11
0xb5: V47 = 0x29b
0xb8: JUMPI 0x29b V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x2d4]
---
0xb9 DUP1
0xba PUSH4 0xc5c4744c
0xbf EQ
0xc0 PUSH2 0x2d4
0xc3 JUMPI
---
0xba: V48 = 0xc5c4744c
0xbf: V49 = EQ 0xc5c4744c V11
0xc0: V50 = 0x2d4
0xc3: JUMPI 0x2d4 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x2e9]
---
0xc4 DUP1
0xc5 PUSH4 0xc9c80a56
0xca EQ
0xcb PUSH2 0x2e9
0xce JUMPI
---
0xc5: V51 = 0xc9c80a56
0xca: V52 = EQ 0xc9c80a56 V11
0xcb: V53 = 0x2e9
0xce: JUMPI 0x2e9 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x310]
---
0xcf DUP1
0xd0 PUSH4 0xd41b6db6
0xd5 EQ
0xd6 PUSH2 0x310
0xd9 JUMPI
---
0xd0: V54 = 0xd41b6db6
0xd5: V55 = EQ 0xd41b6db6 V11
0xd6: V56 = 0x310
0xd9: JUMPI 0x310 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0xfb]
---
0xda DUP1
0xdb PUSH4 0xd7bb99ba
0xe0 EQ
0xe1 PUSH2 0xfb
0xe4 JUMPI
---
0xdb: V57 = 0xd7bb99ba
0xe0: V58 = EQ 0xd7bb99ba V11
0xe1: V59 = 0xfb
0xe4: JUMPI 0xfb V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x347]
---
0xe5 DUP1
0xe6 PUSH4 0xe93e7b26
0xeb EQ
0xec PUSH2 0x347
0xef JUMPI
---
0xe6: V60 = 0xe93e7b26
0xeb: V61 = EQ 0xe93e7b26 V11
0xec: V62 = 0x347
0xef: JUMPI 0x347 V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x35c]
---
0xf0 DUP1
0xf1 PUSH4 0xefca2eed
0xf6 EQ
0xf7 PUSH2 0x35c
0xfa JUMPI
---
0xf1: V63 = 0xefca2eed
0xf6: V64 = EQ 0xefca2eed V11
0xf7: V65 = 0x35c
0xfa: JUMPI 0x35c V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x102]
---
Predecessors: [0x0, 0xda, 0xf0]
Successors: [0x371]
---
0xfb JUMPDEST
0xfc PUSH2 0x103
0xff PUSH2 0x371
0x102 JUMP
---
0xfb: JUMPDEST 
0xfc: V66 = 0x103
0xff: V67 = 0x371
0x102: JUMP 0x371
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x103]
Exit stack: [V11, 0x103]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: [0x67a, 0x7ec, 0x984, 0xb1c, 0xba5]
Successors: []
---
0x103 JUMPDEST
0x104 STOP
---
0x103: JUMPDEST 
0x104: STOP 
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, S0]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0xd]
Successors: [0x10d, 0x111]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x105: JUMPDEST 
0x106: V68 = CALLVALUE
0x108: V69 = ISZERO V68
0x109: V70 = 0x111
0x10c: JUMPI 0x111 V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V11, V68]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x105]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V71 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0x105]
Successors: [0x67d]
---
0x111 JUMPDEST
0x112 POP
0x113 PUSH2 0x11a
0x116 PUSH2 0x67d
0x119 JUMP
---
0x111: JUMPDEST 
0x113: V72 = 0x11a
0x116: V73 = 0x67d
0x119: JUMP 0x67d
---
Entry stack: [V11, V68]
Stack pops: 1
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x11a
[0x11a:0x135]
---
Predecessors: [0x67d, 0x698, 0x881]
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d DUP1
0x11e MLOAD
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 SWAP1
0x128 SWAP3
0x129 AND
0x12a DUP3
0x12b MSTORE
0x12c MLOAD
0x12d SWAP1
0x12e DUP2
0x12f SWAP1
0x130 SUB
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP1
0x135 RETURN
---
0x11a: JUMPDEST 
0x11b: V74 = 0x40
0x11e: V75 = M[0x40]
0x11f: V76 = 0x1
0x121: V77 = 0xa0
0x123: V78 = 0x2
0x125: V79 = EXP 0x2 0xa0
0x126: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V81 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x12b: M[V75] = V81
0x12c: V82 = M[0x40]
0x130: V83 = SUB V75 V82
0x131: V84 = 0x20
0x133: V85 = ADD 0x20 V83
0x135: RETURN V82 V85
---
Entry stack: [V11, 0x11a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x11a]

================================

Block 0x136
[0x136:0x13d]
---
Predecessors: [0x40]
Successors: [0x13e, 0x142]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 DUP1
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x136: JUMPDEST 
0x137: V86 = CALLVALUE
0x139: V87 = ISZERO V86
0x13a: V88 = 0x142
0x13d: JUMPI 0x142 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V11, V86]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x136]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V89 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V11, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V86]

================================

Block 0x142
[0x142:0x14a]
---
Predecessors: [0x136]
Successors: [0x68c]
---
0x142 JUMPDEST
0x143 POP
0x144 PUSH2 0x14b
0x147 PUSH2 0x68c
0x14a JUMP
---
0x142: JUMPDEST 
0x144: V90 = 0x14b
0x147: V91 = 0x68c
0x14a: JUMP 0x68c
---
Entry stack: [V11, V86]
Stack pops: 1
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x14b
[0x14b:0x15c]
---
Predecessors: [0x68c, 0x692, 0x890, 0x896, 0xb68, 0xc1e, 0xc24]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x40
0x14e DUP1
0x14f MLOAD
0x150 SWAP2
0x151 DUP3
0x152 MSTORE
0x153 MLOAD
0x154 SWAP1
0x155 DUP2
0x156 SWAP1
0x157 SUB
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP1
0x15c RETURN
---
0x14b: JUMPDEST 
0x14c: V92 = 0x40
0x14f: V93 = M[0x40]
0x152: M[V93] = S0
0x153: V94 = M[0x40]
0x157: V95 = SUB V93 V94
0x158: V96 = 0x20
0x15a: V97 = ADD 0x20 V95
0x15c: RETURN V94 V97
---
Entry stack: [V11, 0x14b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14b]

================================

Block 0x15d
[0x15d:0x164]
---
Predecessors: [0x4b]
Successors: [0x165, 0x169]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f DUP1
0x160 ISZERO
0x161 PUSH2 0x169
0x164 JUMPI
---
0x15d: JUMPDEST 
0x15e: V98 = CALLVALUE
0x160: V99 = ISZERO V98
0x161: V100 = 0x169
0x164: JUMPI 0x169 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V11, V98]

================================

Block 0x165
[0x165:0x168]
---
Predecessors: [0x15d]
Successors: []
---
0x165 PUSH1 0x0
0x167 DUP1
0x168 REVERT
---
0x165: V101 = 0x0
0x168: REVERT 0x0 0x0
---
Entry stack: [V11, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V98]

================================

Block 0x169
[0x169:0x171]
---
Predecessors: [0x15d]
Successors: [0x692]
---
0x169 JUMPDEST
0x16a POP
0x16b PUSH2 0x14b
0x16e PUSH2 0x692
0x171 JUMP
---
0x169: JUMPDEST 
0x16b: V102 = 0x14b
0x16e: V103 = 0x692
0x171: JUMP 0x692
---
Entry stack: [V11, V98]
Stack pops: 1
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x172
[0x172:0x179]
---
Predecessors: [0x56]
Successors: [0x17a, 0x17e]
---
0x172 JUMPDEST
0x173 CALLVALUE
0x174 DUP1
0x175 ISZERO
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x172: JUMPDEST 
0x173: V104 = CALLVALUE
0x175: V105 = ISZERO V104
0x176: V106 = 0x17e
0x179: JUMPI 0x17e V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x172]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V107 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x17e
[0x17e:0x186]
---
Predecessors: [0x172]
Successors: [0x698]
---
0x17e JUMPDEST
0x17f POP
0x180 PUSH2 0x11a
0x183 PUSH2 0x698
0x186 JUMP
---
0x17e: JUMPDEST 
0x180: V108 = 0x11a
0x183: V109 = 0x698
0x186: JUMP 0x698
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x187
[0x187:0x18e]
---
Predecessors: [0x61]
Successors: [0x18f, 0x193]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 DUP1
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x187: JUMPDEST 
0x188: V110 = CALLVALUE
0x18a: V111 = ISZERO V110
0x18b: V112 = 0x193
0x18e: JUMPI 0x193 V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V11, V110]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x187]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V113 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V110]

================================

Block 0x193
[0x193:0x1a7]
---
Predecessors: [0x187]
Successors: [0x6a7]
---
0x193 JUMPDEST
0x194 POP
0x195 PUSH2 0x103
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 PUSH1 0x4
0x1a2 CALLDATALOAD
0x1a3 AND
0x1a4 PUSH2 0x6a7
0x1a7 JUMP
---
0x193: JUMPDEST 
0x195: V114 = 0x103
0x198: V115 = 0x1
0x19a: V116 = 0xa0
0x19c: V117 = 0x2
0x19e: V118 = EXP 0x2 0xa0
0x19f: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V120 = 0x4
0x1a2: V121 = CALLDATALOAD 0x4
0x1a3: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V123 = 0x6a7
0x1a7: JUMP 0x6a7
---
Entry stack: [V11, V110]
Stack pops: 1
Stack additions: [0x103, V122]
Exit stack: [V11, 0x103, V122]

================================

Block 0x1a8
[0x1a8:0x1af]
---
Predecessors: [0x6c]
Successors: [0x1b0, 0x1b4]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa DUP1
0x1ab ISZERO
0x1ac PUSH2 0x1b4
0x1af JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V124 = CALLVALUE
0x1ab: V125 = ISZERO V124
0x1ac: V126 = 0x1b4
0x1af: JUMPI 0x1b4 V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V11, V124]

================================

Block 0x1b0
[0x1b0:0x1b3]
---
Predecessors: [0x1a8]
Successors: []
---
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 REVERT
---
0x1b0: V127 = 0x0
0x1b3: REVERT 0x0 0x0
---
Entry stack: [V11, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V124]

================================

Block 0x1b4
[0x1b4:0x1bc]
---
Predecessors: [0x1a8]
Successors: [0x7f3]
---
0x1b4 JUMPDEST
0x1b5 POP
0x1b6 PUSH2 0x1bd
0x1b9 PUSH2 0x7f3
0x1bc JUMP
---
0x1b4: JUMPDEST 
0x1b6: V128 = 0x1bd
0x1b9: V129 = 0x7f3
0x1bc: JUMP 0x7f3
---
Entry stack: [V11, V124]
Stack pops: 1
Stack additions: [0x1bd]
Exit stack: [V11, 0x1bd]

================================

Block 0x1bd
[0x1bd:0x1de]
---
Predecessors: [0x879]
Successors: [0x1df]
---
0x1bd JUMPDEST
0x1be PUSH1 0x40
0x1c0 DUP1
0x1c1 MLOAD
0x1c2 PUSH1 0x20
0x1c4 DUP1
0x1c5 DUP3
0x1c6 MSTORE
0x1c7 DUP4
0x1c8 MLOAD
0x1c9 DUP2
0x1ca DUP4
0x1cb ADD
0x1cc MSTORE
0x1cd DUP4
0x1ce MLOAD
0x1cf SWAP2
0x1d0 SWAP3
0x1d1 DUP4
0x1d2 SWAP3
0x1d3 SWAP1
0x1d4 DUP4
0x1d5 ADD
0x1d6 SWAP2
0x1d7 DUP6
0x1d8 ADD
0x1d9 SWAP1
0x1da DUP1
0x1db DUP4
0x1dc DUP4
0x1dd PUSH1 0x0
---
0x1bd: JUMPDEST 
0x1be: V130 = 0x40
0x1c1: V131 = M[0x40]
0x1c2: V132 = 0x20
0x1c6: M[V131] = 0x20
0x1c8: V133 = M[V627]
0x1cb: V134 = ADD V131 0x20
0x1cc: M[V134] = V133
0x1ce: V135 = M[V627]
0x1d5: V136 = ADD V131 0x40
0x1d8: V137 = ADD V627 0x20
0x1dd: V138 = 0x0
---
Entry stack: [V11, 0x1bd, V627]
Stack pops: 1
Stack additions: [S0, V131, V131, V136, V137, V135, V135, V136, V137, 0x0]
Exit stack: [V11, 0x1bd, V627, V131, V131, V136, V137, V135, V135, V136, V137, 0x0]

================================

Block 0x1df
[0x1df:0x1e7]
---
Predecessors: [0x1bd, 0x1e8]
Successors: [0x1e8, 0x1f7]
---
0x1df JUMPDEST
0x1e0 DUP4
0x1e1 DUP2
0x1e2 LT
0x1e3 ISZERO
0x1e4 PUSH2 0x1f7
0x1e7 JUMPI
---
0x1df: JUMPDEST 
0x1e2: V139 = LT S0 V135
0x1e3: V140 = ISZERO V139
0x1e4: V141 = 0x1f7
0x1e7: JUMPI 0x1f7 V140
---
Entry stack: [V11, 0x1bd, V627, V131, V131, V136, V137, V135, V135, V136, V137, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1bd, V627, V131, V131, V136, V137, V135, V135, V136, V137, S0]

================================

Block 0x1e8
[0x1e8:0x1f6]
---
Predecessors: [0x1df]
Successors: [0x1df]
---
0x1e8 DUP2
0x1e9 DUP2
0x1ea ADD
0x1eb MLOAD
0x1ec DUP4
0x1ed DUP3
0x1ee ADD
0x1ef MSTORE
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 PUSH2 0x1df
0x1f6 JUMP
---
0x1ea: V142 = ADD S0 V137
0x1eb: V143 = M[V142]
0x1ee: V144 = ADD S0 V136
0x1ef: M[V144] = V143
0x1f0: V145 = 0x20
0x1f2: V146 = ADD 0x20 S0
0x1f3: V147 = 0x1df
0x1f6: JUMP 0x1df
---
Entry stack: [V11, 0x1bd, V627, V131, V131, V136, V137, V135, V135, V136, V137, S0]
Stack pops: 3
Stack additions: [S2, S1, V146]
Exit stack: [V11, 0x1bd, V627, V131, V131, V136, V137, V135, V135, V136, V137, V146]

================================

Block 0x1f7
[0x1f7:0x20a]
---
Predecessors: [0x1df]
Successors: [0x20b, 0x224]
---
0x1f7 JUMPDEST
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc SWAP1
0x1fd POP
0x1fe SWAP1
0x1ff DUP2
0x200 ADD
0x201 SWAP1
0x202 PUSH1 0x1f
0x204 AND
0x205 DUP1
0x206 ISZERO
0x207 PUSH2 0x224
0x20a JUMPI
---
0x1f7: JUMPDEST 
0x200: V148 = ADD V135 V136
0x202: V149 = 0x1f
0x204: V150 = AND 0x1f V135
0x206: V151 = ISZERO V150
0x207: V152 = 0x224
0x20a: JUMPI 0x224 V151
---
Entry stack: [V11, 0x1bd, V627, V131, V131, V136, V137, V135, V135, V136, V137, S0]
Stack pops: 7
Stack additions: [V148, V150]
Exit stack: [V11, 0x1bd, V627, V131, V131, V148, V150]

================================

Block 0x20b
[0x20b:0x223]
---
Predecessors: [0x1f7]
Successors: [0x224]
---
0x20b DUP1
0x20c DUP3
0x20d SUB
0x20e DUP1
0x20f MLOAD
0x210 PUSH1 0x1
0x212 DUP4
0x213 PUSH1 0x20
0x215 SUB
0x216 PUSH2 0x100
0x219 EXP
0x21a SUB
0x21b NOT
0x21c AND
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP2
0x223 POP
---
0x20d: V153 = SUB V148 V150
0x20f: V154 = M[V153]
0x210: V155 = 0x1
0x213: V156 = 0x20
0x215: V157 = SUB 0x20 V150
0x216: V158 = 0x100
0x219: V159 = EXP 0x100 V157
0x21a: V160 = SUB V159 0x1
0x21b: V161 = NOT V160
0x21c: V162 = AND V161 V154
0x21e: M[V153] = V162
0x21f: V163 = 0x20
0x221: V164 = ADD 0x20 V153
---
Entry stack: [V11, 0x1bd, V627, V131, V131, V148, V150]
Stack pops: 2
Stack additions: [V164, S0]
Exit stack: [V11, 0x1bd, V627, V131, V131, V164, V150]

================================

Block 0x224
[0x224:0x231]
---
Predecessors: [0x1f7, 0x20b]
Successors: []
---
0x224 JUMPDEST
0x225 POP
0x226 SWAP3
0x227 POP
0x228 POP
0x229 POP
0x22a PUSH1 0x40
0x22c MLOAD
0x22d DUP1
0x22e SWAP2
0x22f SUB
0x230 SWAP1
0x231 RETURN
---
0x224: JUMPDEST 
0x22a: V165 = 0x40
0x22c: V166 = M[0x40]
0x22f: V167 = SUB S1 V166
0x231: RETURN V166 V167
---
Entry stack: [V11, 0x1bd, V627, V131, V131, S1, V150]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x1bd]

================================

Block 0x232
[0x232:0x239]
---
Predecessors: [0x77]
Successors: [0x23a, 0x23e]
---
0x232 JUMPDEST
0x233 CALLVALUE
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x232: JUMPDEST 
0x233: V168 = CALLVALUE
0x235: V169 = ISZERO V168
0x236: V170 = 0x23e
0x239: JUMPI 0x23e V169
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V168]
Exit stack: [V11, V168]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x232]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V171 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V11, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V168]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x232]
Successors: [0x881]
---
0x23e JUMPDEST
0x23f POP
0x240 PUSH2 0x11a
0x243 PUSH2 0x881
0x246 JUMP
---
0x23e: JUMPDEST 
0x240: V172 = 0x11a
0x243: V173 = 0x881
0x246: JUMP 0x881
---
Entry stack: [V11, V168]
Stack pops: 1
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x82]
Successors: [0x24f, 0x253]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x247: JUMPDEST 
0x248: V174 = CALLVALUE
0x24a: V175 = ISZERO V174
0x24b: V176 = 0x253
0x24e: JUMPI 0x253 V175
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V174]
Exit stack: [V11, V174]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x247]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V177 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V11, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V174]

================================

Block 0x253
[0x253:0x25b]
---
Predecessors: [0x247]
Successors: [0x890]
---
0x253 JUMPDEST
0x254 POP
0x255 PUSH2 0x14b
0x258 PUSH2 0x890
0x25b JUMP
---
0x253: JUMPDEST 
0x255: V178 = 0x14b
0x258: V179 = 0x890
0x25b: JUMP 0x890
---
Entry stack: [V11, V174]
Stack pops: 1
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x25c
[0x25c:0x263]
---
Predecessors: [0x8d]
Successors: [0x264, 0x268]
---
0x25c JUMPDEST
0x25d CALLVALUE
0x25e DUP1
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x25c: JUMPDEST 
0x25d: V180 = CALLVALUE
0x25f: V181 = ISZERO V180
0x260: V182 = 0x268
0x263: JUMPI 0x268 V181
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V180]
Exit stack: [V11, V180]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x25c]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V183 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V11, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V180]

================================

Block 0x268
[0x268:0x270]
---
Predecessors: [0x25c]
Successors: [0x896]
---
0x268 JUMPDEST
0x269 POP
0x26a PUSH2 0x14b
0x26d PUSH2 0x896
0x270 JUMP
---
0x268: JUMPDEST 
0x26a: V184 = 0x14b
0x26d: V185 = 0x896
0x270: JUMP 0x896
---
Entry stack: [V11, V180]
Stack pops: 1
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x271
[0x271:0x278]
---
Predecessors: [0x98]
Successors: [0x279, 0x27d]
---
0x271 JUMPDEST
0x272 CALLVALUE
0x273 DUP1
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x271: JUMPDEST 
0x272: V186 = CALLVALUE
0x274: V187 = ISZERO V186
0x275: V188 = 0x27d
0x278: JUMPI 0x27d V187
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V186]
Exit stack: [V11, V186]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x271]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V189 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V11, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V186]

================================

Block 0x27d
[0x27d:0x285]
---
Predecessors: [0x271]
Successors: [0x89c]
---
0x27d JUMPDEST
0x27e POP
0x27f PUSH2 0x103
0x282 PUSH2 0x89c
0x285 JUMP
---
0x27d: JUMPDEST 
0x27f: V190 = 0x103
0x282: V191 = 0x89c
0x285: JUMP 0x89c
---
Entry stack: [V11, V186]
Stack pops: 1
Stack additions: [0x103]
Exit stack: [V11, 0x103]

================================

Block 0x286
[0x286:0x28d]
---
Predecessors: [0xa3]
Successors: [0x28e, 0x292]
---
0x286 JUMPDEST
0x287 CALLVALUE
0x288 DUP1
0x289 ISZERO
0x28a PUSH2 0x292
0x28d JUMPI
---
0x286: JUMPDEST 
0x287: V192 = CALLVALUE
0x289: V193 = ISZERO V192
0x28a: V194 = 0x292
0x28d: JUMPI 0x292 V193
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V11, V192]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x286]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V195 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V11, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V192]

================================

Block 0x292
[0x292:0x29a]
---
Predecessors: [0x286]
Successors: [0x986]
---
0x292 JUMPDEST
0x293 POP
0x294 PUSH2 0x103
0x297 PUSH2 0x986
0x29a JUMP
---
0x292: JUMPDEST 
0x294: V196 = 0x103
0x297: V197 = 0x986
0x29a: JUMP 0x986
---
Entry stack: [V11, V192]
Stack pops: 1
Stack additions: [0x103]
Exit stack: [V11, 0x103]

================================

Block 0x29b
[0x29b:0x2a2]
---
Predecessors: [0xae]
Successors: [0x2a3, 0x2a7]
---
0x29b JUMPDEST
0x29c CALLVALUE
0x29d DUP1
0x29e ISZERO
0x29f PUSH2 0x2a7
0x2a2 JUMPI
---
0x29b: JUMPDEST 
0x29c: V198 = CALLVALUE
0x29e: V199 = ISZERO V198
0x29f: V200 = 0x2a7
0x2a2: JUMPI 0x2a7 V199
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V198]
Exit stack: [V11, V198]

================================

Block 0x2a3
[0x2a3:0x2a6]
---
Predecessors: [0x29b]
Successors: []
---
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 REVERT
---
0x2a3: V201 = 0x0
0x2a6: REVERT 0x0 0x0
---
Entry stack: [V11, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V198]

================================

Block 0x2a7
[0x2a7:0x2af]
---
Predecessors: [0x29b]
Successors: [0xb5f]
---
0x2a7 JUMPDEST
0x2a8 POP
0x2a9 PUSH2 0x2b0
0x2ac PUSH2 0xb5f
0x2af JUMP
---
0x2a7: JUMPDEST 
0x2a9: V202 = 0x2b0
0x2ac: V203 = 0xb5f
0x2af: JUMP 0xb5f
---
Entry stack: [V11, V198]
Stack pops: 1
Stack additions: [0x2b0]
Exit stack: [V11, 0x2b0]

================================

Block 0x2b0
[0x2b0:0x2be]
---
Predecessors: [0xb5f]
Successors: [0x2bf, 0x2c0]
---
0x2b0 JUMPDEST
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 DUP1
0x2b5 DUP3
0x2b6 PUSH1 0x3
0x2b8 DUP2
0x2b9 GT
0x2ba ISZERO
0x2bb PUSH2 0x2c0
0x2be JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V204 = 0x40
0x2b3: V205 = M[0x40]
0x2b6: V206 = 0x3
0x2b9: V207 = GT V932 0x3
0x2ba: V208 = ISZERO V207
0x2bb: V209 = 0x2c0
0x2be: JUMPI 0x2c0 V208
---
Entry stack: [V11, 0x2b0, V932]
Stack pops: 1
Stack additions: [S0, V205, V205, S0]
Exit stack: [V11, 0x2b0, V932, V205, V205, V932]

================================

Block 0x2bf
[0x2bf:0x2bf]
---
Predecessors: [0x2b0]
Successors: []
---
0x2bf INVALID
---
0x2bf: INVALID 
---
Entry stack: [V11, 0x2b0, V932, V205, V205, V932]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b0, V932, V205, V205, V932]

================================

Block 0x2c0
[0x2c0:0x2d3]
---
Predecessors: [0x2b0]
Successors: []
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0xff
0x2c3 AND
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP2
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 SWAP2
0x2d1 SUB
0x2d2 SWAP1
0x2d3 RETURN
---
0x2c0: JUMPDEST 
0x2c1: V210 = 0xff
0x2c3: V211 = AND 0xff V932
0x2c5: M[V205] = V211
0x2c6: V212 = 0x20
0x2c8: V213 = ADD 0x20 V205
0x2cc: V214 = 0x40
0x2ce: V215 = M[0x40]
0x2d1: V216 = SUB V213 V215
0x2d3: RETURN V215 V216
---
Entry stack: [V11, 0x2b0, V932, V205, V205, V932]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x2b0]

================================

Block 0x2d4
[0x2d4:0x2db]
---
Predecessors: [0xb9]
Successors: [0x2dc, 0x2e0]
---
0x2d4 JUMPDEST
0x2d5 CALLVALUE
0x2d6 DUP1
0x2d7 ISZERO
0x2d8 PUSH2 0x2e0
0x2db JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V217 = CALLVALUE
0x2d7: V218 = ISZERO V217
0x2d8: V219 = 0x2e0
0x2db: JUMPI 0x2e0 V218
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V217]
Exit stack: [V11, V217]

================================

Block 0x2dc
[0x2dc:0x2df]
---
Predecessors: [0x2d4]
Successors: []
---
0x2dc PUSH1 0x0
0x2de DUP1
0x2df REVERT
---
0x2dc: V220 = 0x0
0x2df: REVERT 0x0 0x0
---
Entry stack: [V11, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V217]

================================

Block 0x2e0
[0x2e0:0x2e8]
---
Predecessors: [0x2d4]
Successors: [0xb68]
---
0x2e0 JUMPDEST
0x2e1 POP
0x2e2 PUSH2 0x14b
0x2e5 PUSH2 0xb68
0x2e8 JUMP
---
0x2e0: JUMPDEST 
0x2e2: V221 = 0x14b
0x2e5: V222 = 0xb68
0x2e8: JUMP 0xb68
---
Entry stack: [V11, V217]
Stack pops: 1
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x2e9
[0x2e9:0x2f0]
---
Predecessors: [0xc4]
Successors: [0x2f1, 0x2f5]
---
0x2e9 JUMPDEST
0x2ea CALLVALUE
0x2eb DUP1
0x2ec ISZERO
0x2ed PUSH2 0x2f5
0x2f0 JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V223 = CALLVALUE
0x2ec: V224 = ISZERO V223
0x2ed: V225 = 0x2f5
0x2f0: JUMPI 0x2f5 V224
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V223]
Exit stack: [V11, V223]

================================

Block 0x2f1
[0x2f1:0x2f4]
---
Predecessors: [0x2e9]
Successors: []
---
0x2f1 PUSH1 0x0
0x2f3 DUP1
0x2f4 REVERT
---
0x2f1: V226 = 0x0
0x2f4: REVERT 0x0 0x0
---
Entry stack: [V11, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V223]

================================

Block 0x2f5
[0x2f5:0x30f]
---
Predecessors: [0x2e9]
Successors: [0xb6e]
---
0x2f5 JUMPDEST
0x2f6 POP
0x2f7 PUSH2 0x103
0x2fa PUSH1 0x1
0x2fc PUSH1 0xa0
0x2fe PUSH1 0x2
0x300 EXP
0x301 SUB
0x302 PUSH1 0x4
0x304 CALLDATALOAD
0x305 AND
0x306 PUSH1 0xff
0x308 PUSH1 0x24
0x30a CALLDATALOAD
0x30b AND
0x30c PUSH2 0xb6e
0x30f JUMP
---
0x2f5: JUMPDEST 
0x2f7: V227 = 0x103
0x2fa: V228 = 0x1
0x2fc: V229 = 0xa0
0x2fe: V230 = 0x2
0x300: V231 = EXP 0x2 0xa0
0x301: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x302: V233 = 0x4
0x304: V234 = CALLDATALOAD 0x4
0x305: V235 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x306: V236 = 0xff
0x308: V237 = 0x24
0x30a: V238 = CALLDATALOAD 0x24
0x30b: V239 = AND V238 0xff
0x30c: V240 = 0xb6e
0x30f: JUMP 0xb6e
---
Entry stack: [V11, V223]
Stack pops: 1
Stack additions: [0x103, V235, V239]
Exit stack: [V11, 0x103, V235, V239]

================================

Block 0x310
[0x310:0x317]
---
Predecessors: [0xcf]
Successors: [0x318, 0x31c]
---
0x310 JUMPDEST
0x311 CALLVALUE
0x312 DUP1
0x313 ISZERO
0x314 PUSH2 0x31c
0x317 JUMPI
---
0x310: JUMPDEST 
0x311: V241 = CALLVALUE
0x313: V242 = ISZERO V241
0x314: V243 = 0x31c
0x317: JUMPI 0x31c V242
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V241]
Exit stack: [V11, V241]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0x310]
Successors: []
---
0x318 PUSH1 0x0
0x31a DUP1
0x31b REVERT
---
0x318: V244 = 0x0
0x31b: REVERT 0x0 0x0
---
Entry stack: [V11, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V241]

================================

Block 0x31c
[0x31c:0x330]
---
Predecessors: [0x310]
Successors: [0xc09]
---
0x31c JUMPDEST
0x31d POP
0x31e PUSH2 0x331
0x321 PUSH1 0x1
0x323 PUSH1 0xa0
0x325 PUSH1 0x2
0x327 EXP
0x328 SUB
0x329 PUSH1 0x4
0x32b CALLDATALOAD
0x32c AND
0x32d PUSH2 0xc09
0x330 JUMP
---
0x31c: JUMPDEST 
0x31e: V245 = 0x331
0x321: V246 = 0x1
0x323: V247 = 0xa0
0x325: V248 = 0x2
0x327: V249 = EXP 0x2 0xa0
0x328: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x329: V251 = 0x4
0x32b: V252 = CALLDATALOAD 0x4
0x32c: V253 = AND V252 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V254 = 0xc09
0x330: JUMP 0xc09
---
Entry stack: [V11, V241]
Stack pops: 1
Stack additions: [0x331, V253]
Exit stack: [V11, 0x331, V253]

================================

Block 0x331
[0x331:0x346]
---
Predecessors: [0xc09]
Successors: []
---
0x331 JUMPDEST
0x332 PUSH1 0x40
0x334 DUP1
0x335 MLOAD
0x336 PUSH1 0xff
0x338 SWAP1
0x339 SWAP3
0x33a AND
0x33b DUP3
0x33c MSTORE
0x33d MLOAD
0x33e SWAP1
0x33f DUP2
0x340 SWAP1
0x341 SUB
0x342 PUSH1 0x20
0x344 ADD
0x345 SWAP1
0x346 RETURN
---
0x331: JUMPDEST 
0x332: V255 = 0x40
0x335: V256 = M[0x40]
0x336: V257 = 0xff
0x33a: V258 = AND V987 0xff
0x33c: M[V256] = V258
0x33d: V259 = M[0x40]
0x341: V260 = SUB V256 V259
0x342: V261 = 0x20
0x344: V262 = ADD 0x20 V260
0x346: RETURN V259 V262
---
Entry stack: [V11, 0x331, V987]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x331]

================================

Block 0x347
[0x347:0x34e]
---
Predecessors: [0xe5]
Successors: [0x34f, 0x353]
---
0x347 JUMPDEST
0x348 CALLVALUE
0x349 DUP1
0x34a ISZERO
0x34b PUSH2 0x353
0x34e JUMPI
---
0x347: JUMPDEST 
0x348: V263 = CALLVALUE
0x34a: V264 = ISZERO V263
0x34b: V265 = 0x353
0x34e: JUMPI 0x353 V264
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V263]
Exit stack: [V11, V263]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x347]
Successors: []
---
0x34f PUSH1 0x0
0x351 DUP1
0x352 REVERT
---
0x34f: V266 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V11, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V263]

================================

Block 0x353
[0x353:0x35b]
---
Predecessors: [0x347]
Successors: [0xc1e]
---
0x353 JUMPDEST
0x354 POP
0x355 PUSH2 0x14b
0x358 PUSH2 0xc1e
0x35b JUMP
---
0x353: JUMPDEST 
0x355: V267 = 0x14b
0x358: V268 = 0xc1e
0x35b: JUMP 0xc1e
---
Entry stack: [V11, V263]
Stack pops: 1
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x35c
[0x35c:0x363]
---
Predecessors: [0xf0]
Successors: [0x364, 0x368]
---
0x35c JUMPDEST
0x35d CALLVALUE
0x35e DUP1
0x35f ISZERO
0x360 PUSH2 0x368
0x363 JUMPI
---
0x35c: JUMPDEST 
0x35d: V269 = CALLVALUE
0x35f: V270 = ISZERO V269
0x360: V271 = 0x368
0x363: JUMPI 0x368 V270
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V269]
Exit stack: [V11, V269]

================================

Block 0x364
[0x364:0x367]
---
Predecessors: [0x35c]
Successors: []
---
0x364 PUSH1 0x0
0x366 DUP1
0x367 REVERT
---
0x364: V272 = 0x0
0x367: REVERT 0x0 0x0
---
Entry stack: [V11, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V269]

================================

Block 0x368
[0x368:0x370]
---
Predecessors: [0x35c]
Successors: [0xc24]
---
0x368 JUMPDEST
0x369 POP
0x36a PUSH2 0x14b
0x36d PUSH2 0xc24
0x370 JUMP
---
0x368: JUMPDEST 
0x36a: V273 = 0x14b
0x36d: V274 = 0xc24
0x370: JUMP 0xc24
---
Entry stack: [V11, V269]
Stack pops: 1
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x371
[0x371:0x384]
---
Predecessors: [0xfb]
Successors: [0x385, 0x386]
---
0x371 JUMPDEST
0x372 PUSH1 0x0
0x374 PUSH1 0x3
0x376 PUSH1 0x1
0x378 SLOAD
0x379 PUSH1 0xff
0x37b AND
0x37c PUSH1 0x3
0x37e DUP2
0x37f GT
0x380 ISZERO
0x381 PUSH2 0x386
0x384 JUMPI
---
0x371: JUMPDEST 
0x372: V275 = 0x0
0x374: V276 = 0x3
0x376: V277 = 0x1
0x378: V278 = S[0x1]
0x379: V279 = 0xff
0x37b: V280 = AND 0xff V278
0x37c: V281 = 0x3
0x37f: V282 = GT V280 0x3
0x380: V283 = ISZERO V282
0x381: V284 = 0x386
0x384: JUMPI 0x386 V283
---
Entry stack: [V11, 0x103]
Stack pops: 0
Stack additions: [0x0, 0x3, V280]
Exit stack: [V11, 0x103, 0x0, 0x3, V280]

================================

Block 0x385
[0x385:0x385]
---
Predecessors: [0x371]
Successors: []
---
0x385 INVALID
---
0x385: INVALID 
---
Entry stack: [V11, 0x103, 0x0, 0x3, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, 0x0, 0x3, V280]

================================

Block 0x386
[0x386:0x38c]
---
Predecessors: [0x371]
Successors: [0x38d, 0x391]
---
0x386 JUMPDEST
0x387 EQ
0x388 ISZERO
0x389 PUSH2 0x391
0x38c JUMPI
---
0x386: JUMPDEST 
0x387: V285 = EQ V280 0x3
0x388: V286 = ISZERO V285
0x389: V287 = 0x391
0x38c: JUMPI 0x391 V286
---
Entry stack: [V11, 0x103, 0x0, 0x3, V280]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x103, 0x0]

================================

Block 0x38d
[0x38d:0x390]
---
Predecessors: [0x386]
Successors: []
---
0x38d PUSH1 0x0
0x38f DUP1
0x390 REVERT
---
0x38d: V288 = 0x0
0x390: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, 0x0]

================================

Block 0x391
[0x391:0x3a0]
---
Predecessors: [0x386]
Successors: [0x3a1, 0x3a5]
---
0x391 JUMPDEST
0x392 PUSH7 0x38d7ea4c68000
0x39a CALLVALUE
0x39b LT
0x39c ISZERO
0x39d PUSH2 0x3a5
0x3a0 JUMPI
---
0x391: JUMPDEST 
0x392: V289 = 0x38d7ea4c68000
0x39a: V290 = CALLVALUE
0x39b: V291 = LT V290 0x38d7ea4c68000
0x39c: V292 = ISZERO V291
0x39d: V293 = 0x3a5
0x3a0: JUMPI 0x3a5 V292
---
Entry stack: [V11, 0x103, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, 0x0]

================================

Block 0x3a1
[0x3a1:0x3a4]
---
Predecessors: [0x391]
Successors: []
---
0x3a1 PUSH1 0x0
0x3a3 DUP1
0x3a4 REVERT
---
0x3a1: V294 = 0x0
0x3a4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, 0x0]

================================

Block 0x3a5
[0x3a5:0x3bb]
---
Predecessors: [0x391]
Successors: [0xc2a]
---
0x3a5 JUMPDEST
0x3a6 POP
0x3a7 PUSH1 0x7
0x3a9 SLOAD
0x3aa PUSH1 0x0
0x3ac SWAP1
0x3ad PUSH2 0x3bc
0x3b0 SWAP1
0x3b1 CALLVALUE
0x3b2 PUSH4 0xffffffff
0x3b7 PUSH2 0xc2a
0x3ba AND
0x3bb JUMP
---
0x3a5: JUMPDEST 
0x3a7: V295 = 0x7
0x3a9: V296 = S[0x7]
0x3aa: V297 = 0x0
0x3ad: V298 = 0x3bc
0x3b1: V299 = CALLVALUE
0x3b2: V300 = 0xffffffff
0x3b7: V301 = 0xc2a
0x3ba: V302 = AND 0xc2a 0xffffffff
0x3bb: JUMP 0xc2a
---
Entry stack: [V11, 0x103, 0x0]
Stack pops: 1
Stack additions: [0x0, 0x3bc, V296, V299]
Exit stack: [V11, 0x103, 0x0, 0x3bc, V296, V299]

================================

Block 0x3bc
[0x3bc:0x411]
---
Predecessors: [0xc3d]
Successors: [0x412, 0x413]
---
0x3bc JUMPDEST
0x3bd PUSH1 0x7
0x3bf DUP2
0x3c0 SWAP1
0x3c1 SSTORE
0x3c2 PUSH1 0x40
0x3c4 DUP1
0x3c5 MLOAD
0x3c6 CALLER
0x3c7 DUP2
0x3c8 MSTORE
0x3c9 CALLVALUE
0x3ca PUSH1 0x20
0x3cc DUP3
0x3cd ADD
0x3ce MSTORE
0x3cf DUP1
0x3d0 DUP3
0x3d1 ADD
0x3d2 SWAP3
0x3d3 SWAP1
0x3d4 SWAP3
0x3d5 MSTORE
0x3d6 MLOAD
0x3d7 PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x3f8 SWAP2
0x3f9 DUP2
0x3fa SWAP1
0x3fb SUB
0x3fc PUSH1 0x60
0x3fe ADD
0x3ff SWAP1
0x400 LOG1
0x401 PUSH1 0x0
0x403 PUSH1 0x1
0x405 SLOAD
0x406 PUSH1 0xff
0x408 AND
0x409 PUSH1 0x3
0x40b DUP2
0x40c GT
0x40d ISZERO
0x40e PUSH2 0x413
0x411 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V303 = 0x7
0x3c1: S[0x7] = S0
0x3c2: V304 = 0x40
0x3c5: V305 = M[0x40]
0x3c6: V306 = CALLER
0x3c8: M[V305] = V306
0x3c9: V307 = CALLVALUE
0x3ca: V308 = 0x20
0x3cd: V309 = ADD V305 0x20
0x3ce: M[V309] = V307
0x3d1: V310 = ADD 0x40 V305
0x3d5: M[V310] = S0
0x3d6: V311 = M[0x40]
0x3d7: V312 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x3fb: V313 = SUB V305 V311
0x3fc: V314 = 0x60
0x3fe: V315 = ADD 0x60 V313
0x400: LOG V311 V315 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x401: V316 = 0x0
0x403: V317 = 0x1
0x405: V318 = S[0x1]
0x406: V319 = 0xff
0x408: V320 = AND 0xff V318
0x409: V321 = 0x3
0x40c: V322 = GT V320 0x3
0x40d: V323 = ISZERO V322
0x40e: V324 = 0x413
0x411: JUMPI 0x413 V323
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 1
Stack additions: [0x0, V320]
Exit stack: [V11, 0x103, S1, 0x0, V320]

================================

Block 0x412
[0x412:0x412]
---
Predecessors: [0x3bc]
Successors: []
---
0x412 INVALID
---
0x412: INVALID 
---
Entry stack: [V11, 0x103, S2, 0x0, V320]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S2, 0x0, V320]

================================

Block 0x413
[0x413:0x419]
---
Predecessors: [0x3bc]
Successors: [0x41a, 0x45d]
---
0x413 JUMPDEST
0x414 EQ
0x415 ISZERO
0x416 PUSH2 0x45d
0x419 JUMPI
---
0x413: JUMPDEST 
0x414: V325 = EQ V320 0x0
0x415: V326 = ISZERO V325
0x416: V327 = 0x45d
0x419: JUMPI 0x45d V326
---
Entry stack: [V11, 0x103, S2, 0x0, V320]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x103, S2]

================================

Block 0x41a
[0x41a:0x420]
---
Predecessors: [0x413]
Successors: [0x421]
---
0x41a PUSH2 0x430
0x41d PUSH1 0xd
0x41f PUSH1 0x0
---
0x41a: V328 = 0x430
0x41d: V329 = 0xd
0x41f: V330 = 0x0
---
Entry stack: [V11, 0x103, S0]
Stack pops: 0
Stack additions: [0x430, 0xd, 0x0]
Exit stack: [V11, 0x103, S0, 0x430, 0xd, 0x0]

================================

Block 0x421
[0x421:0x42f]
---
Predecessors: [0x41a, 0x476, 0x494]
Successors: [0xc44]
---
0x421 JUMPDEST
0x422 ADD
0x423 SLOAD
0x424 CALLVALUE
0x425 SWAP1
0x426 PUSH4 0xffffffff
0x42b PUSH2 0xc44
0x42e AND
0x42f JUMP
---
0x421: JUMPDEST 
0x422: V331 = ADD {0x0, 0x1, 0x2} 0xd
0x423: V332 = S[V331]
0x424: V333 = CALLVALUE
0x426: V334 = 0xffffffff
0x42b: V335 = 0xc44
0x42e: V336 = AND 0xc44 0xffffffff
0x42f: JUMP 0xc44
---
Entry stack: [V11, 0x103, S3, {0x430, 0x481, 0x4a0}, 0xd, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: [V333, V332]
Exit stack: [V11, 0x103, S3, {0x430, 0x481, 0x4a0}, V333, V332]

================================

Block 0x430
[0x430:0x442]
---
Predecessors: [0xc3d]
Successors: [0xc44]
---
0x430 JUMPDEST
0x431 SWAP1
0x432 POP
0x433 PUSH2 0x443
0x436 DUP2
0x437 PUSH1 0x7d
0x439 PUSH4 0xffffffff
0x43e PUSH2 0xc44
0x441 AND
0x442 JUMP
---
0x430: JUMPDEST 
0x433: V337 = 0x443
0x437: V338 = 0x7d
0x439: V339 = 0xffffffff
0x43e: V340 = 0xc44
0x441: V341 = AND 0xc44 0xffffffff
0x442: JUMP 0xc44
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x443, S0, 0x7d]
Exit stack: [V11, 0x103, S0, 0x443, S0, 0x7d]

================================

Block 0x443
[0x443:0x455]
---
Predecessors: [0xc3d]
Successors: [0xc6f]
---
0x443 JUMPDEST
0x444 SWAP1
0x445 POP
0x446 PUSH2 0x456
0x449 DUP2
0x44a PUSH1 0x64
0x44c PUSH4 0xffffffff
0x451 PUSH2 0xc6f
0x454 AND
0x455 JUMP
---
0x443: JUMPDEST 
0x446: V342 = 0x456
0x44a: V343 = 0x64
0x44c: V344 = 0xffffffff
0x451: V345 = 0xc6f
0x454: V346 = AND 0xc6f 0xffffffff
0x455: JUMP 0xc6f
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x456, S0, 0x64]
Exit stack: [V11, 0x103, S0, 0x456, S0, 0x64]

================================

Block 0x456
[0x456:0x45c]
---
Predecessors: [0xc7d]
Successors: [0x4c9]
---
0x456 JUMPDEST
0x457 SWAP1
0x458 POP
0x459 PUSH2 0x4c9
0x45c JUMP
---
0x456: JUMPDEST 
0x459: V347 = 0x4c9
0x45c: JUMP 0x4c9
---
Entry stack: [V11, 0x103, S1, V1014]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x103, V1014]

================================

Block 0x45d
[0x45d:0x46d]
---
Predecessors: [0x413]
Successors: [0x46e, 0x46f]
---
0x45d JUMPDEST
0x45e PUSH1 0x1
0x460 DUP1
0x461 SLOAD
0x462 PUSH1 0xff
0x464 AND
0x465 PUSH1 0x3
0x467 DUP2
0x468 GT
0x469 ISZERO
0x46a PUSH2 0x46f
0x46d JUMPI
---
0x45d: JUMPDEST 
0x45e: V348 = 0x1
0x461: V349 = S[0x1]
0x462: V350 = 0xff
0x464: V351 = AND 0xff V349
0x465: V352 = 0x3
0x468: V353 = GT V351 0x3
0x469: V354 = ISZERO V353
0x46a: V355 = 0x46f
0x46d: JUMPI 0x46f V354
---
Entry stack: [V11, 0x103, S0]
Stack pops: 0
Stack additions: [0x1, V351]
Exit stack: [V11, 0x103, S0, 0x1, V351]

================================

Block 0x46e
[0x46e:0x46e]
---
Predecessors: [0x45d]
Successors: []
---
0x46e INVALID
---
0x46e: INVALID 
---
Entry stack: [V11, 0x103, S2, 0x1, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S2, 0x1, V351]

================================

Block 0x46f
[0x46f:0x475]
---
Predecessors: [0x45d]
Successors: [0x476, 0x494]
---
0x46f JUMPDEST
0x470 EQ
0x471 ISZERO
0x472 PUSH2 0x494
0x475 JUMPI
---
0x46f: JUMPDEST 
0x470: V356 = EQ V351 0x1
0x471: V357 = ISZERO V356
0x472: V358 = 0x494
0x475: JUMPI 0x494 V357
---
Entry stack: [V11, 0x103, S2, 0x1, V351]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x103, S2]

================================

Block 0x476
[0x476:0x480]
---
Predecessors: [0x46f]
Successors: [0x421]
---
0x476 PUSH2 0x481
0x479 PUSH1 0xd
0x47b PUSH1 0x1
0x47d PUSH2 0x421
0x480 JUMP
---
0x476: V359 = 0x481
0x479: V360 = 0xd
0x47b: V361 = 0x1
0x47d: V362 = 0x421
0x480: JUMP 0x421
---
Entry stack: [V11, 0x103, S0]
Stack pops: 0
Stack additions: [0x481, 0xd, 0x1]
Exit stack: [V11, 0x103, S0, 0x481, 0xd, 0x1]

================================

Block 0x481
[0x481:0x493]
---
Predecessors: [0xc3d]
Successors: [0xc44]
---
0x481 JUMPDEST
0x482 SWAP1
0x483 POP
0x484 PUSH2 0x443
0x487 DUP2
0x488 PUSH1 0x73
0x48a PUSH4 0xffffffff
0x48f PUSH2 0xc44
0x492 AND
0x493 JUMP
---
0x481: JUMPDEST 
0x484: V363 = 0x443
0x488: V364 = 0x73
0x48a: V365 = 0xffffffff
0x48f: V366 = 0xc44
0x492: V367 = AND 0xc44 0xffffffff
0x493: JUMP 0xc44
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x443, S0, 0x73]
Exit stack: [V11, 0x103, S0, 0x443, S0, 0x73]

================================

Block 0x494
[0x494:0x49f]
---
Predecessors: [0x46f]
Successors: [0x421]
---
0x494 JUMPDEST
0x495 PUSH2 0x4a0
0x498 PUSH1 0xd
0x49a PUSH1 0x2
0x49c PUSH2 0x421
0x49f JUMP
---
0x494: JUMPDEST 
0x495: V368 = 0x4a0
0x498: V369 = 0xd
0x49a: V370 = 0x2
0x49c: V371 = 0x421
0x49f: JUMP 0x421
---
Entry stack: [V11, 0x103, S0]
Stack pops: 0
Stack additions: [0x4a0, 0xd, 0x2]
Exit stack: [V11, 0x103, S0, 0x4a0, 0xd, 0x2]

================================

Block 0x4a0
[0x4a0:0x4b2]
---
Predecessors: [0xc3d]
Successors: [0xc44]
---
0x4a0 JUMPDEST
0x4a1 SWAP1
0x4a2 POP
0x4a3 PUSH2 0x4b3
0x4a6 DUP2
0x4a7 PUSH1 0x69
0x4a9 PUSH4 0xffffffff
0x4ae PUSH2 0xc44
0x4b1 AND
0x4b2 JUMP
---
0x4a0: JUMPDEST 
0x4a3: V372 = 0x4b3
0x4a7: V373 = 0x69
0x4a9: V374 = 0xffffffff
0x4ae: V375 = 0xc44
0x4b1: V376 = AND 0xc44 0xffffffff
0x4b2: JUMP 0xc44
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x4b3, S0, 0x69]
Exit stack: [V11, 0x103, S0, 0x4b3, S0, 0x69]

================================

Block 0x4b3
[0x4b3:0x4c5]
---
Predecessors: [0xc3d]
Successors: [0xc6f]
---
0x4b3 JUMPDEST
0x4b4 SWAP1
0x4b5 POP
0x4b6 PUSH2 0x4c6
0x4b9 DUP2
0x4ba PUSH1 0x64
0x4bc PUSH4 0xffffffff
0x4c1 PUSH2 0xc6f
0x4c4 AND
0x4c5 JUMP
---
0x4b3: JUMPDEST 
0x4b6: V377 = 0x4c6
0x4ba: V378 = 0x64
0x4bc: V379 = 0xffffffff
0x4c1: V380 = 0xc6f
0x4c4: V381 = AND 0xc6f 0xffffffff
0x4c5: JUMP 0xc6f
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x4c6, S0, 0x64]
Exit stack: [V11, 0x103, S0, 0x4c6, S0, 0x64]

================================

Block 0x4c6
[0x4c6:0x4c8]
---
Predecessors: [0xc7d]
Successors: [0x4c9]
---
0x4c6 JUMPDEST
0x4c7 SWAP1
0x4c8 POP
---
0x4c6: JUMPDEST 
---
Entry stack: [V11, 0x103, S1, V1014]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x103, V1014]

================================

Block 0x4c9
[0x4c9:0x4dd]
---
Predecessors: [0x456, 0x4c6]
Successors: [0xc6f]
---
0x4c9 JUMPDEST
0x4ca PUSH2 0x4de
0x4cd DUP2
0x4ce PUSH5 0x2540be400
0x4d4 PUSH4 0xffffffff
0x4d9 PUSH2 0xc6f
0x4dc AND
0x4dd JUMP
---
0x4c9: JUMPDEST 
0x4ca: V382 = 0x4de
0x4ce: V383 = 0x2540be400
0x4d4: V384 = 0xffffffff
0x4d9: V385 = 0xc6f
0x4dc: V386 = AND 0xc6f 0xffffffff
0x4dd: JUMP 0xc6f
---
Entry stack: [V11, 0x103, V1014]
Stack pops: 1
Stack additions: [S0, 0x4de, S0, 0x2540be400]
Exit stack: [V11, 0x103, V1014, 0x4de, V1014, 0x2540be400]

================================

Block 0x4de
[0x4de:0x4ef]
---
Predecessors: [0xc7d]
Successors: [0x4f0, 0x503]
---
0x4de JUMPDEST
0x4df SWAP1
0x4e0 POP
0x4e1 PUSH8 0x4563918244f40000
0x4ea CALLVALUE
0x4eb LT
0x4ec PUSH2 0x503
0x4ef JUMPI
---
0x4de: JUMPDEST 
0x4e1: V387 = 0x4563918244f40000
0x4ea: V388 = CALLVALUE
0x4eb: V389 = LT V388 0x4563918244f40000
0x4ec: V390 = 0x503
0x4ef: JUMPI 0x503 V389
---
Entry stack: [V11, 0x103, S1, V1014]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x103, V1014]

================================

Block 0x4f0
[0x4f0:0x4ff]
---
Predecessors: [0x4de]
Successors: [0xc44]
---
0x4f0 PUSH2 0x500
0x4f3 DUP2
0x4f4 PUSH1 0x2
0x4f6 PUSH4 0xffffffff
0x4fb PUSH2 0xc44
0x4fe AND
0x4ff JUMP
---
0x4f0: V391 = 0x500
0x4f4: V392 = 0x2
0x4f6: V393 = 0xffffffff
0x4fb: V394 = 0xc44
0x4fe: V395 = AND 0xc44 0xffffffff
0x4ff: JUMP 0xc44
---
Entry stack: [V11, 0x103, V1014]
Stack pops: 1
Stack additions: [S0, 0x500, S0, 0x2]
Exit stack: [V11, 0x103, V1014, 0x500, V1014, 0x2]

================================

Block 0x500
[0x500:0x502]
---
Predecessors: [0xc3d]
Successors: [0x503]
---
0x500 JUMPDEST
0x501 SWAP1
0x502 POP
---
0x500: JUMPDEST 
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x103, S0]

================================

Block 0x503
[0x503:0x515]
---
Predecessors: [0x4de, 0x500]
Successors: [0xc2a]
---
0x503 JUMPDEST
0x504 PUSH1 0x8
0x506 SLOAD
0x507 PUSH2 0x516
0x50a SWAP1
0x50b DUP3
0x50c PUSH4 0xffffffff
0x511 PUSH2 0xc2a
0x514 AND
0x515 JUMP
---
0x503: JUMPDEST 
0x504: V396 = 0x8
0x506: V397 = S[0x8]
0x507: V398 = 0x516
0x50c: V399 = 0xffffffff
0x511: V400 = 0xc2a
0x514: V401 = AND 0xc2a 0xffffffff
0x515: JUMP 0xc2a
---
Entry stack: [V11, 0x103, S0]
Stack pops: 1
Stack additions: [S0, 0x516, V397, S0]
Exit stack: [V11, 0x103, S0, 0x516, V397, S0]

================================

Block 0x516
[0x516:0x549]
---
Predecessors: [0xc3d]
Successors: [0x54a, 0x553]
---
0x516 JUMPDEST
0x517 PUSH1 0x8
0x519 SSTORE
0x51a PUSH1 0xb
0x51c SLOAD
0x51d PUSH1 0x40
0x51f MLOAD
0x520 PUSH1 0x1
0x522 PUSH1 0xa0
0x524 PUSH1 0x2
0x526 EXP
0x527 SUB
0x528 SWAP1
0x529 SWAP2
0x52a AND
0x52b SWAP1
0x52c ADDRESS
0x52d BALANCE
0x52e DUP1
0x52f ISZERO
0x530 PUSH2 0x8fc
0x533 MUL
0x534 SWAP2
0x535 PUSH1 0x0
0x537 DUP2
0x538 DUP2
0x539 DUP2
0x53a DUP6
0x53b DUP9
0x53c DUP9
0x53d CALL
0x53e SWAP4
0x53f POP
0x540 POP
0x541 POP
0x542 POP
0x543 ISZERO
0x544 DUP1
0x545 ISZERO
0x546 PUSH2 0x553
0x549 JUMPI
---
0x516: JUMPDEST 
0x517: V402 = 0x8
0x519: S[0x8] = S0
0x51a: V403 = 0xb
0x51c: V404 = S[0xb]
0x51d: V405 = 0x40
0x51f: V406 = M[0x40]
0x520: V407 = 0x1
0x522: V408 = 0xa0
0x524: V409 = 0x2
0x526: V410 = EXP 0x2 0xa0
0x527: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52a: V412 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0x52c: V413 = ADDRESS
0x52d: V414 = BALANCE V413
0x52f: V415 = ISZERO V414
0x530: V416 = 0x8fc
0x533: V417 = MUL 0x8fc V415
0x535: V418 = 0x0
0x53d: V419 = CALL V417 V412 V414 V406 0x0 V406 0x0
0x543: V420 = ISZERO V419
0x545: V421 = ISZERO V420
0x546: V422 = 0x553
0x549: JUMPI 0x553 V421
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 1
Stack additions: [V420]
Exit stack: [V11, 0x103, S1, V420]

================================

Block 0x54a
[0x54a:0x552]
---
Predecessors: [0x516]
Successors: []
---
0x54a RETURNDATASIZE
0x54b PUSH1 0x0
0x54d DUP1
0x54e RETURNDATACOPY
0x54f RETURNDATASIZE
0x550 PUSH1 0x0
0x552 REVERT
---
0x54a: V423 = RETURNDATASIZE
0x54b: V424 = 0x0
0x54e: RETURNDATACOPY 0x0 0x0 V423
0x54f: V425 = RETURNDATASIZE
0x550: V426 = 0x0
0x552: REVERT 0x0 V425
---
Entry stack: [V11, 0x103, S1, V420]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S1, V420]

================================

Block 0x553
[0x553:0x5fb]
---
Predecessors: [0x516]
Successors: [0x5fc, 0x600]
---
0x553 JUMPDEST
0x554 POP
0x555 PUSH1 0xa
0x557 SLOAD
0x558 PUSH1 0x40
0x55a DUP1
0x55b MLOAD
0x55c PUSH1 0x1
0x55e PUSH1 0xa0
0x560 PUSH1 0x2
0x562 EXP
0x563 SUB
0x564 SWAP1
0x565 SWAP3
0x566 AND
0x567 DUP3
0x568 MSTORE
0x569 MLOAD
0x56a PUSH32 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0x58b SWAP2
0x58c DUP2
0x58d SWAP1
0x58e SUB
0x58f PUSH1 0x20
0x591 ADD
0x592 SWAP1
0x593 LOG1
0x594 PUSH1 0x9
0x596 SLOAD
0x597 PUSH1 0x40
0x599 DUP1
0x59a MLOAD
0x59b PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5bc DUP2
0x5bd MSTORE
0x5be CALLER
0x5bf PUSH1 0x4
0x5c1 DUP3
0x5c2 ADD
0x5c3 MSTORE
0x5c4 PUSH1 0x24
0x5c6 DUP2
0x5c7 ADD
0x5c8 DUP5
0x5c9 SWAP1
0x5ca MSTORE
0x5cb SWAP1
0x5cc MLOAD
0x5cd PUSH1 0x1
0x5cf PUSH1 0xa0
0x5d1 PUSH1 0x2
0x5d3 EXP
0x5d4 SUB
0x5d5 SWAP1
0x5d6 SWAP3
0x5d7 AND
0x5d8 SWAP2
0x5d9 PUSH4 0xa9059cbb
0x5de SWAP2
0x5df PUSH1 0x44
0x5e1 DUP1
0x5e2 DUP3
0x5e3 ADD
0x5e4 SWAP3
0x5e5 PUSH1 0x20
0x5e7 SWAP3
0x5e8 SWAP1
0x5e9 SWAP2
0x5ea SWAP1
0x5eb DUP3
0x5ec SWAP1
0x5ed SUB
0x5ee ADD
0x5ef DUP2
0x5f0 PUSH1 0x0
0x5f2 DUP8
0x5f3 DUP1
0x5f4 EXTCODESIZE
0x5f5 ISZERO
0x5f6 DUP1
0x5f7 ISZERO
0x5f8 PUSH2 0x600
0x5fb JUMPI
---
0x553: JUMPDEST 
0x555: V427 = 0xa
0x557: V428 = S[0xa]
0x558: V429 = 0x40
0x55b: V430 = M[0x40]
0x55c: V431 = 0x1
0x55e: V432 = 0xa0
0x560: V433 = 0x2
0x562: V434 = EXP 0x2 0xa0
0x563: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x566: V436 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x568: M[V430] = V436
0x569: V437 = M[0x40]
0x56a: V438 = 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0x58e: V439 = SUB V430 V437
0x58f: V440 = 0x20
0x591: V441 = ADD 0x20 V439
0x593: LOG V437 V441 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0x594: V442 = 0x9
0x596: V443 = S[0x9]
0x597: V444 = 0x40
0x59a: V445 = M[0x40]
0x59b: V446 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5bd: M[V445] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5be: V447 = CALLER
0x5bf: V448 = 0x4
0x5c2: V449 = ADD V445 0x4
0x5c3: M[V449] = V447
0x5c4: V450 = 0x24
0x5c7: V451 = ADD V445 0x24
0x5ca: M[V451] = S1
0x5cc: V452 = M[0x40]
0x5cd: V453 = 0x1
0x5cf: V454 = 0xa0
0x5d1: V455 = 0x2
0x5d3: V456 = EXP 0x2 0xa0
0x5d4: V457 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d7: V458 = AND V443 0xffffffffffffffffffffffffffffffffffffffff
0x5d9: V459 = 0xa9059cbb
0x5df: V460 = 0x44
0x5e3: V461 = ADD V445 0x44
0x5e5: V462 = 0x20
0x5ed: V463 = SUB V445 V452
0x5ee: V464 = ADD V463 0x44
0x5f0: V465 = 0x0
0x5f4: V466 = EXTCODESIZE V458
0x5f5: V467 = ISZERO V466
0x5f7: V468 = ISZERO V467
0x5f8: V469 = 0x600
0x5fb: JUMPI 0x600 V468
---
Entry stack: [V11, 0x103, S1, V420]
Stack pops: 2
Stack additions: [S1, V458, 0xa9059cbb, V461, 0x20, V452, V464, V452, 0x0, V458, V467]
Exit stack: [V11, 0x103, S1, V458, 0xa9059cbb, V461, 0x20, V452, V464, V452, 0x0, V458, V467]

================================

Block 0x5fc
[0x5fc:0x5ff]
---
Predecessors: [0x553]
Successors: []
---
0x5fc PUSH1 0x0
0x5fe DUP1
0x5ff REVERT
---
0x5fc: V470 = 0x0
0x5ff: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S10, V458, 0xa9059cbb, V461, 0x20, V452, V464, V452, 0x0, V458, V467]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S10, V458, 0xa9059cbb, V461, 0x20, V452, V464, V452, 0x0, V458, V467]

================================

Block 0x600
[0x600:0x60a]
---
Predecessors: [0x553]
Successors: [0x60b, 0x614]
---
0x600 JUMPDEST
0x601 POP
0x602 GAS
0x603 CALL
0x604 ISZERO
0x605 DUP1
0x606 ISZERO
0x607 PUSH2 0x614
0x60a JUMPI
---
0x600: JUMPDEST 
0x602: V471 = GAS
0x603: V472 = CALL V471 V458 0x0 V452 V464 V452 0x20
0x604: V473 = ISZERO V472
0x606: V474 = ISZERO V473
0x607: V475 = 0x614
0x60a: JUMPI 0x614 V474
---
Entry stack: [V11, 0x103, S10, V458, 0xa9059cbb, V461, 0x20, V452, V464, V452, 0x0, V458, V467]
Stack pops: 7
Stack additions: [V473]
Exit stack: [V11, 0x103, S10, V458, 0xa9059cbb, V461, V473]

================================

Block 0x60b
[0x60b:0x613]
---
Predecessors: [0x600]
Successors: []
---
0x60b RETURNDATASIZE
0x60c PUSH1 0x0
0x60e DUP1
0x60f RETURNDATACOPY
0x610 RETURNDATASIZE
0x611 PUSH1 0x0
0x613 REVERT
---
0x60b: V476 = RETURNDATASIZE
0x60c: V477 = 0x0
0x60f: RETURNDATACOPY 0x0 0x0 V476
0x610: V478 = RETURNDATASIZE
0x611: V479 = 0x0
0x613: REVERT 0x0 V478
---
Entry stack: [V11, 0x103, S4, V458, 0xa9059cbb, V461, V473]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S4, V458, 0xa9059cbb, V461, V473]

================================

Block 0x614
[0x614:0x625]
---
Predecessors: [0x600]
Successors: [0x626, 0x62a]
---
0x614 JUMPDEST
0x615 POP
0x616 POP
0x617 POP
0x618 POP
0x619 PUSH1 0x40
0x61b MLOAD
0x61c RETURNDATASIZE
0x61d PUSH1 0x20
0x61f DUP2
0x620 LT
0x621 ISZERO
0x622 PUSH2 0x62a
0x625 JUMPI
---
0x614: JUMPDEST 
0x619: V480 = 0x40
0x61b: V481 = M[0x40]
0x61c: V482 = RETURNDATASIZE
0x61d: V483 = 0x20
0x620: V484 = LT V482 0x20
0x621: V485 = ISZERO V484
0x622: V486 = 0x62a
0x625: JUMPI 0x62a V485
---
Entry stack: [V11, 0x103, S4, V458, 0xa9059cbb, V461, V473]
Stack pops: 4
Stack additions: [V481, V482]
Exit stack: [V11, 0x103, S4, V481, V482]

================================

Block 0x626
[0x626:0x629]
---
Predecessors: [0x614]
Successors: []
---
0x626 PUSH1 0x0
0x628 DUP1
0x629 REVERT
---
0x626: V487 = 0x0
0x629: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S2, V481, V482]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S2, V481, V482]

================================

Block 0x62a
[0x62a:0x632]
---
Predecessors: [0x614]
Successors: [0x633, 0x637]
---
0x62a JUMPDEST
0x62b POP
0x62c MLOAD
0x62d ISZERO
0x62e ISZERO
0x62f PUSH2 0x637
0x632 JUMPI
---
0x62a: JUMPDEST 
0x62c: V488 = M[V481]
0x62d: V489 = ISZERO V488
0x62e: V490 = ISZERO V489
0x62f: V491 = 0x637
0x632: JUMPI 0x637 V490
---
Entry stack: [V11, 0x103, S2, V481, V482]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x103, S2]

================================

Block 0x633
[0x633:0x636]
---
Predecessors: [0x62a]
Successors: []
---
0x633 PUSH1 0x0
0x635 DUP1
0x636 REVERT
---
0x633: V492 = 0x0
0x636: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S0]

================================

Block 0x637
[0x637:0x679]
---
Predecessors: [0x62a]
Successors: [0x89c]
---
0x637 JUMPDEST
0x638 PUSH1 0x40
0x63a DUP1
0x63b MLOAD
0x63c CALLER
0x63d DUP2
0x63e MSTORE
0x63f PUSH1 0x20
0x641 DUP2
0x642 ADD
0x643 DUP4
0x644 SWAP1
0x645 MSTORE
0x646 DUP2
0x647 MLOAD
0x648 PUSH32 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0x669 SWAP3
0x66a SWAP2
0x66b DUP2
0x66c SWAP1
0x66d SUB
0x66e SWAP1
0x66f SWAP2
0x670 ADD
0x671 SWAP1
0x672 LOG1
0x673 PUSH2 0x67a
0x676 PUSH2 0x89c
0x679 JUMP
---
0x637: JUMPDEST 
0x638: V493 = 0x40
0x63b: V494 = M[0x40]
0x63c: V495 = CALLER
0x63e: M[V494] = V495
0x63f: V496 = 0x20
0x642: V497 = ADD V494 0x20
0x645: M[V497] = S0
0x647: V498 = M[0x40]
0x648: V499 = 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0x66d: V500 = SUB V494 V498
0x670: V501 = ADD 0x40 V500
0x672: LOG V498 V501 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0x673: V502 = 0x67a
0x676: V503 = 0x89c
0x679: JUMP 0x89c
---
Entry stack: [V11, 0x103, S0]
Stack pops: 1
Stack additions: [S0, 0x67a]
Exit stack: [V11, 0x103, S0, 0x67a]

================================

Block 0x67a
[0x67a:0x67c]
---
Predecessors: [0x984]
Successors: [0x103]
---
0x67a JUMPDEST
0x67b POP
0x67c JUMP
---
0x67a: JUMPDEST 
0x67c: JUMP 0x103
---
Entry stack: [V11, 0x103, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x67d
[0x67d:0x68b]
---
Predecessors: [0x111]
Successors: [0x11a]
---
0x67d JUMPDEST
0x67e PUSH1 0xa
0x680 SLOAD
0x681 PUSH1 0x1
0x683 PUSH1 0xa0
0x685 PUSH1 0x2
0x687 EXP
0x688 SUB
0x689 AND
0x68a DUP2
0x68b JUMP
---
0x67d: JUMPDEST 
0x67e: V504 = 0xa
0x680: V505 = S[0xa]
0x681: V506 = 0x1
0x683: V507 = 0xa0
0x685: V508 = 0x2
0x687: V509 = EXP 0x2 0xa0
0x688: V510 = SUB 0x10000000000000000000000000000000000000000 0x1
0x689: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x68b: JUMP 0x11a
---
Entry stack: [V11, 0x11a]
Stack pops: 1
Stack additions: [S0, V511]
Exit stack: [V11, 0x11a, V511]

================================

Block 0x68c
[0x68c:0x691]
---
Predecessors: [0x142]
Successors: [0x14b]
---
0x68c JUMPDEST
0x68d PUSH1 0x4
0x68f SLOAD
0x690 DUP2
0x691 JUMP
---
0x68c: JUMPDEST 
0x68d: V512 = 0x4
0x68f: V513 = S[0x4]
0x691: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: [S0, V513]
Exit stack: [V11, 0x14b, V513]

================================

Block 0x692
[0x692:0x697]
---
Predecessors: [0x169]
Successors: [0x14b]
---
0x692 JUMPDEST
0x693 PUSH1 0x6
0x695 SLOAD
0x696 DUP2
0x697 JUMP
---
0x692: JUMPDEST 
0x693: V514 = 0x6
0x695: V515 = S[0x6]
0x697: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: [S0, V515]
Exit stack: [V11, 0x14b, V515]

================================

Block 0x698
[0x698:0x6a6]
---
Predecessors: [0x17e]
Successors: [0x11a]
---
0x698 JUMPDEST
0x699 PUSH1 0xb
0x69b SLOAD
0x69c PUSH1 0x1
0x69e PUSH1 0xa0
0x6a0 PUSH1 0x2
0x6a2 EXP
0x6a3 SUB
0x6a4 AND
0x6a5 DUP2
0x6a6 JUMP
---
0x698: JUMPDEST 
0x699: V516 = 0xb
0x69b: V517 = S[0xb]
0x69c: V518 = 0x1
0x69e: V519 = 0xa0
0x6a0: V520 = 0x2
0x6a2: V521 = EXP 0x2 0xa0
0x6a3: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a4: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x6a6: JUMP 0x11a
---
Entry stack: [V11, 0x11a]
Stack pops: 1
Stack additions: [S0, V523]
Exit stack: [V11, 0x11a, V523]

================================

Block 0x6a7
[0x6a7:0x6c4]
---
Predecessors: [0x193]
Successors: [0x6c5, 0x6c9]
---
0x6a7 JUMPDEST
0x6a8 CALLER
0x6a9 PUSH1 0x0
0x6ab SWAP1
0x6ac DUP2
0x6ad MSTORE
0x6ae PUSH1 0x20
0x6b0 DUP2
0x6b1 SWAP1
0x6b2 MSTORE
0x6b3 PUSH1 0x40
0x6b5 DUP2
0x6b6 SHA3
0x6b7 SLOAD
0x6b8 PUSH1 0x2
0x6ba SWAP1
0x6bb PUSH1 0xff
0x6bd AND
0x6be DUP2
0x6bf GT
0x6c0 ISZERO
0x6c1 PUSH2 0x6c9
0x6c4 JUMPI
---
0x6a7: JUMPDEST 
0x6a8: V524 = CALLER
0x6a9: V525 = 0x0
0x6ad: M[0x0] = V524
0x6ae: V526 = 0x20
0x6b2: M[0x20] = 0x0
0x6b3: V527 = 0x40
0x6b6: V528 = SHA3 0x0 0x40
0x6b7: V529 = S[V528]
0x6b8: V530 = 0x2
0x6bb: V531 = 0xff
0x6bd: V532 = AND 0xff V529
0x6bf: V533 = GT 0x2 V532
0x6c0: V534 = ISZERO V533
0x6c1: V535 = 0x6c9
0x6c4: JUMPI 0x6c9 V534
---
Entry stack: [V11, 0x103, V122]
Stack pops: 0
Stack additions: [0x0, 0x2]
Exit stack: [V11, 0x103, V122, 0x0, 0x2]

================================

Block 0x6c5
[0x6c5:0x6c8]
---
Predecessors: [0x6a7]
Successors: []
---
0x6c5 PUSH1 0x0
0x6c7 DUP1
0x6c8 REVERT
---
0x6c5: V536 = 0x0
0x6c8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V122, 0x0, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V122, 0x0, 0x2]

================================

Block 0x6c9
[0x6c9:0x725]
---
Predecessors: [0x6a7]
Successors: [0x726, 0x72a]
---
0x6c9 JUMPDEST
0x6ca PUSH1 0x40
0x6cc DUP1
0x6cd MLOAD
0x6ce PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6ef DUP2
0x6f0 MSTORE
0x6f1 ADDRESS
0x6f2 PUSH1 0x4
0x6f4 DUP3
0x6f5 ADD
0x6f6 MSTORE
0x6f7 SWAP1
0x6f8 MLOAD
0x6f9 PUSH1 0x1
0x6fb PUSH1 0xa0
0x6fd PUSH1 0x2
0x6ff EXP
0x700 SUB
0x701 DUP6
0x702 AND
0x703 SWAP2
0x704 PUSH4 0x70a08231
0x709 SWAP2
0x70a PUSH1 0x24
0x70c DUP1
0x70d DUP4
0x70e ADD
0x70f SWAP3
0x710 PUSH1 0x20
0x712 SWAP3
0x713 SWAP2
0x714 SWAP1
0x715 DUP3
0x716 SWAP1
0x717 SUB
0x718 ADD
0x719 DUP2
0x71a PUSH1 0x0
0x71c DUP8
0x71d DUP1
0x71e EXTCODESIZE
0x71f ISZERO
0x720 DUP1
0x721 ISZERO
0x722 PUSH2 0x72a
0x725 JUMPI
---
0x6c9: JUMPDEST 
0x6ca: V537 = 0x40
0x6cd: V538 = M[0x40]
0x6ce: V539 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6f0: M[V538] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6f1: V540 = ADDRESS
0x6f2: V541 = 0x4
0x6f5: V542 = ADD V538 0x4
0x6f6: M[V542] = V540
0x6f8: V543 = M[0x40]
0x6f9: V544 = 0x1
0x6fb: V545 = 0xa0
0x6fd: V546 = 0x2
0x6ff: V547 = EXP 0x2 0xa0
0x700: V548 = SUB 0x10000000000000000000000000000000000000000 0x1
0x702: V549 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x704: V550 = 0x70a08231
0x70a: V551 = 0x24
0x70e: V552 = ADD V538 0x24
0x710: V553 = 0x20
0x717: V554 = SUB V538 V543
0x718: V555 = ADD V554 0x24
0x71a: V556 = 0x0
0x71e: V557 = EXTCODESIZE V549
0x71f: V558 = ISZERO V557
0x721: V559 = ISZERO V558
0x722: V560 = 0x72a
0x725: JUMPI 0x72a V559
---
Entry stack: [V11, 0x103, V122, 0x0, 0x2]
Stack pops: 3
Stack additions: [S2, S1, S0, V549, 0x70a08231, V552, 0x20, V543, V555, V543, 0x0, V549, V558]
Exit stack: [V11, 0x103, V122, 0x0, 0x2, V549, 0x70a08231, V552, 0x20, V543, V555, V543, 0x0, V549, V558]

================================

Block 0x726
[0x726:0x729]
---
Predecessors: [0x6c9]
Successors: []
---
0x726 PUSH1 0x0
0x728 DUP1
0x729 REVERT
---
0x726: V561 = 0x0
0x729: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V122, 0x0, 0x2, V549, 0x70a08231, V552, 0x20, V543, V555, V543, 0x0, V549, V558]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V122, 0x0, 0x2, V549, 0x70a08231, V552, 0x20, V543, V555, V543, 0x0, V549, V558]

================================

Block 0x72a
[0x72a:0x734]
---
Predecessors: [0x6c9]
Successors: [0x735, 0x73e]
---
0x72a JUMPDEST
0x72b POP
0x72c GAS
0x72d CALL
0x72e ISZERO
0x72f DUP1
0x730 ISZERO
0x731 PUSH2 0x73e
0x734 JUMPI
---
0x72a: JUMPDEST 
0x72c: V562 = GAS
0x72d: V563 = CALL V562 V549 0x0 V543 V555 V543 0x20
0x72e: V564 = ISZERO V563
0x730: V565 = ISZERO V564
0x731: V566 = 0x73e
0x734: JUMPI 0x73e V565
---
Entry stack: [V11, 0x103, V122, 0x0, 0x2, V549, 0x70a08231, V552, 0x20, V543, V555, V543, 0x0, V549, V558]
Stack pops: 7
Stack additions: [V564]
Exit stack: [V11, 0x103, V122, 0x0, 0x2, V549, 0x70a08231, V552, V564]

================================

Block 0x735
[0x735:0x73d]
---
Predecessors: [0x72a]
Successors: []
---
0x735 RETURNDATASIZE
0x736 PUSH1 0x0
0x738 DUP1
0x739 RETURNDATACOPY
0x73a RETURNDATASIZE
0x73b PUSH1 0x0
0x73d REVERT
---
0x735: V567 = RETURNDATASIZE
0x736: V568 = 0x0
0x739: RETURNDATACOPY 0x0 0x0 V567
0x73a: V569 = RETURNDATASIZE
0x73b: V570 = 0x0
0x73d: REVERT 0x0 V569
---
Entry stack: [V11, 0x103, V122, 0x0, 0x2, V549, 0x70a08231, V552, V564]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V122, 0x0, 0x2, V549, 0x70a08231, V552, V564]

================================

Block 0x73e
[0x73e:0x74f]
---
Predecessors: [0x72a]
Successors: [0x750, 0x754]
---
0x73e JUMPDEST
0x73f POP
0x740 POP
0x741 POP
0x742 POP
0x743 PUSH1 0x40
0x745 MLOAD
0x746 RETURNDATASIZE
0x747 PUSH1 0x20
0x749 DUP2
0x74a LT
0x74b ISZERO
0x74c PUSH2 0x754
0x74f JUMPI
---
0x73e: JUMPDEST 
0x743: V571 = 0x40
0x745: V572 = M[0x40]
0x746: V573 = RETURNDATASIZE
0x747: V574 = 0x20
0x74a: V575 = LT V573 0x20
0x74b: V576 = ISZERO V575
0x74c: V577 = 0x754
0x74f: JUMPI 0x754 V576
---
Entry stack: [V11, 0x103, V122, 0x0, 0x2, V549, 0x70a08231, V552, V564]
Stack pops: 4
Stack additions: [V572, V573]
Exit stack: [V11, 0x103, V122, 0x0, 0x2, V572, V573]

================================

Block 0x750
[0x750:0x753]
---
Predecessors: [0x73e]
Successors: []
---
0x750 PUSH1 0x0
0x752 DUP1
0x753 REVERT
---
0x750: V578 = 0x0
0x753: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V122, 0x0, 0x2, V572, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V122, 0x0, 0x2, V572, V573]

================================

Block 0x754
[0x754:0x7bd]
---
Predecessors: [0x73e]
Successors: [0x7be, 0x7c2]
---
0x754 JUMPDEST
0x755 POP
0x756 MLOAD
0x757 PUSH1 0x40
0x759 DUP1
0x75a MLOAD
0x75b PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x77c DUP2
0x77d MSTORE
0x77e CALLER
0x77f PUSH1 0x4
0x781 DUP3
0x782 ADD
0x783 MSTORE
0x784 PUSH1 0x24
0x786 DUP2
0x787 ADD
0x788 DUP4
0x789 SWAP1
0x78a MSTORE
0x78b SWAP1
0x78c MLOAD
0x78d SWAP2
0x78e SWAP4
0x78f POP
0x790 PUSH1 0x1
0x792 PUSH1 0xa0
0x794 PUSH1 0x2
0x796 EXP
0x797 SUB
0x798 DUP6
0x799 AND
0x79a SWAP2
0x79b PUSH4 0xa9059cbb
0x7a0 SWAP2
0x7a1 PUSH1 0x44
0x7a3 DUP1
0x7a4 DUP3
0x7a5 ADD
0x7a6 SWAP3
0x7a7 PUSH1 0x20
0x7a9 SWAP3
0x7aa SWAP1
0x7ab SWAP2
0x7ac SWAP1
0x7ad DUP3
0x7ae SWAP1
0x7af SUB
0x7b0 ADD
0x7b1 DUP2
0x7b2 PUSH1 0x0
0x7b4 DUP8
0x7b5 DUP1
0x7b6 EXTCODESIZE
0x7b7 ISZERO
0x7b8 DUP1
0x7b9 ISZERO
0x7ba PUSH2 0x7c2
0x7bd JUMPI
---
0x754: JUMPDEST 
0x756: V579 = M[V572]
0x757: V580 = 0x40
0x75a: V581 = M[0x40]
0x75b: V582 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x77d: M[V581] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x77e: V583 = CALLER
0x77f: V584 = 0x4
0x782: V585 = ADD V581 0x4
0x783: M[V585] = V583
0x784: V586 = 0x24
0x787: V587 = ADD V581 0x24
0x78a: M[V587] = V579
0x78c: V588 = M[0x40]
0x790: V589 = 0x1
0x792: V590 = 0xa0
0x794: V591 = 0x2
0x796: V592 = EXP 0x2 0xa0
0x797: V593 = SUB 0x10000000000000000000000000000000000000000 0x1
0x799: V594 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V595 = 0xa9059cbb
0x7a1: V596 = 0x44
0x7a5: V597 = ADD V581 0x44
0x7a7: V598 = 0x20
0x7af: V599 = SUB V581 V588
0x7b0: V600 = ADD V599 0x44
0x7b2: V601 = 0x0
0x7b6: V602 = EXTCODESIZE V594
0x7b7: V603 = ISZERO V602
0x7b9: V604 = ISZERO V603
0x7ba: V605 = 0x7c2
0x7bd: JUMPI 0x7c2 V604
---
Entry stack: [V11, 0x103, V122, 0x0, 0x2, V572, V573]
Stack pops: 5
Stack additions: [S4, V579, S2, V594, 0xa9059cbb, V597, 0x20, V588, V600, V588, 0x0, V594, V603]
Exit stack: [V11, 0x103, V122, V579, 0x2, V594, 0xa9059cbb, V597, 0x20, V588, V600, V588, 0x0, V594, V603]

================================

Block 0x7be
[0x7be:0x7c1]
---
Predecessors: [0x754]
Successors: []
---
0x7be PUSH1 0x0
0x7c0 DUP1
0x7c1 REVERT
---
0x7be: V606 = 0x0
0x7c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V122, V579, 0x2, V594, 0xa9059cbb, V597, 0x20, V588, V600, V588, 0x0, V594, V603]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V122, V579, 0x2, V594, 0xa9059cbb, V597, 0x20, V588, V600, V588, 0x0, V594, V603]

================================

Block 0x7c2
[0x7c2:0x7cc]
---
Predecessors: [0x754]
Successors: [0x7cd, 0x7d6]
---
0x7c2 JUMPDEST
0x7c3 POP
0x7c4 GAS
0x7c5 CALL
0x7c6 ISZERO
0x7c7 DUP1
0x7c8 ISZERO
0x7c9 PUSH2 0x7d6
0x7cc JUMPI
---
0x7c2: JUMPDEST 
0x7c4: V607 = GAS
0x7c5: V608 = CALL V607 V594 0x0 V588 V600 V588 0x20
0x7c6: V609 = ISZERO V608
0x7c8: V610 = ISZERO V609
0x7c9: V611 = 0x7d6
0x7cc: JUMPI 0x7d6 V610
---
Entry stack: [V11, 0x103, V122, V579, 0x2, V594, 0xa9059cbb, V597, 0x20, V588, V600, V588, 0x0, V594, V603]
Stack pops: 7
Stack additions: [V609]
Exit stack: [V11, 0x103, V122, V579, 0x2, V594, 0xa9059cbb, V597, V609]

================================

Block 0x7cd
[0x7cd:0x7d5]
---
Predecessors: [0x7c2]
Successors: []
---
0x7cd RETURNDATASIZE
0x7ce PUSH1 0x0
0x7d0 DUP1
0x7d1 RETURNDATACOPY
0x7d2 RETURNDATASIZE
0x7d3 PUSH1 0x0
0x7d5 REVERT
---
0x7cd: V612 = RETURNDATASIZE
0x7ce: V613 = 0x0
0x7d1: RETURNDATACOPY 0x0 0x0 V612
0x7d2: V614 = RETURNDATASIZE
0x7d3: V615 = 0x0
0x7d5: REVERT 0x0 V614
---
Entry stack: [V11, 0x103, V122, V579, 0x2, V594, 0xa9059cbb, V597, V609]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V122, V579, 0x2, V594, 0xa9059cbb, V597, V609]

================================

Block 0x7d6
[0x7d6:0x7e7]
---
Predecessors: [0x7c2]
Successors: [0x7e8, 0x7ec]
---
0x7d6 JUMPDEST
0x7d7 POP
0x7d8 POP
0x7d9 POP
0x7da POP
0x7db PUSH1 0x40
0x7dd MLOAD
0x7de RETURNDATASIZE
0x7df PUSH1 0x20
0x7e1 DUP2
0x7e2 LT
0x7e3 ISZERO
0x7e4 PUSH2 0x7ec
0x7e7 JUMPI
---
0x7d6: JUMPDEST 
0x7db: V616 = 0x40
0x7dd: V617 = M[0x40]
0x7de: V618 = RETURNDATASIZE
0x7df: V619 = 0x20
0x7e2: V620 = LT V618 0x20
0x7e3: V621 = ISZERO V620
0x7e4: V622 = 0x7ec
0x7e7: JUMPI 0x7ec V621
---
Entry stack: [V11, 0x103, V122, V579, 0x2, V594, 0xa9059cbb, V597, V609]
Stack pops: 4
Stack additions: [V617, V618]
Exit stack: [V11, 0x103, V122, V579, 0x2, V617, V618]

================================

Block 0x7e8
[0x7e8:0x7eb]
---
Predecessors: [0x7d6]
Successors: []
---
0x7e8 PUSH1 0x0
0x7ea DUP1
0x7eb REVERT
---
0x7e8: V623 = 0x0
0x7eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V122, V579, 0x2, V617, V618]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V122, V579, 0x2, V617, V618]

================================

Block 0x7ec
[0x7ec:0x7f2]
---
Predecessors: [0x7d6]
Successors: [0x103]
---
0x7ec JUMPDEST
0x7ed POP
0x7ee POP
0x7ef POP
0x7f0 POP
0x7f1 POP
0x7f2 JUMP
---
0x7ec: JUMPDEST 
0x7f2: JUMP 0x103
---
Entry stack: [V11, 0x103, V122, V579, 0x2, V617, V618]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f3
[0x7f3:0x832]
---
Predecessors: [0x1b4]
Successors: [0x833, 0x879]
---
0x7f3 JUMPDEST
0x7f4 PUSH1 0xc
0x7f6 DUP1
0x7f7 SLOAD
0x7f8 PUSH1 0x40
0x7fa DUP1
0x7fb MLOAD
0x7fc PUSH1 0x20
0x7fe PUSH1 0x2
0x800 PUSH1 0x1
0x802 DUP6
0x803 AND
0x804 ISZERO
0x805 PUSH2 0x100
0x808 MUL
0x809 PUSH1 0x0
0x80b NOT
0x80c ADD
0x80d SWAP1
0x80e SWAP5
0x80f AND
0x810 SWAP4
0x811 SWAP1
0x812 SWAP4
0x813 DIV
0x814 PUSH1 0x1f
0x816 DUP2
0x817 ADD
0x818 DUP5
0x819 SWAP1
0x81a DIV
0x81b DUP5
0x81c MUL
0x81d DUP3
0x81e ADD
0x81f DUP5
0x820 ADD
0x821 SWAP1
0x822 SWAP3
0x823 MSTORE
0x824 DUP2
0x825 DUP2
0x826 MSTORE
0x827 SWAP3
0x828 SWAP2
0x829 DUP4
0x82a ADD
0x82b DUP3
0x82c DUP3
0x82d DUP1
0x82e ISZERO
0x82f PUSH2 0x879
0x832 JUMPI
---
0x7f3: JUMPDEST 
0x7f4: V624 = 0xc
0x7f7: V625 = S[0xc]
0x7f8: V626 = 0x40
0x7fb: V627 = M[0x40]
0x7fc: V628 = 0x20
0x7fe: V629 = 0x2
0x800: V630 = 0x1
0x803: V631 = AND V625 0x1
0x804: V632 = ISZERO V631
0x805: V633 = 0x100
0x808: V634 = MUL 0x100 V632
0x809: V635 = 0x0
0x80b: V636 = NOT 0x0
0x80c: V637 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V634
0x80f: V638 = AND V625 V637
0x813: V639 = DIV V638 0x2
0x814: V640 = 0x1f
0x817: V641 = ADD V639 0x1f
0x81a: V642 = DIV V641 0x20
0x81c: V643 = MUL 0x20 V642
0x81e: V644 = ADD V627 V643
0x820: V645 = ADD 0x20 V644
0x823: M[0x40] = V645
0x826: M[V627] = V639
0x82a: V646 = ADD V627 0x20
0x82e: V647 = ISZERO V639
0x82f: V648 = 0x879
0x832: JUMPI 0x879 V647
---
Entry stack: [V11, 0x1bd]
Stack pops: 0
Stack additions: [V627, 0xc, V639, V646, 0xc, V639]
Exit stack: [V11, 0x1bd, V627, 0xc, V639, V646, 0xc, V639]

================================

Block 0x833
[0x833:0x83a]
---
Predecessors: [0x7f3]
Successors: [0x83b, 0x84e]
---
0x833 DUP1
0x834 PUSH1 0x1f
0x836 LT
0x837 PUSH2 0x84e
0x83a JUMPI
---
0x834: V649 = 0x1f
0x836: V650 = LT 0x1f V639
0x837: V651 = 0x84e
0x83a: JUMPI 0x84e V650
---
Entry stack: [V11, 0x1bd, V627, 0xc, V639, V646, 0xc, V639]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1bd, V627, 0xc, V639, V646, 0xc, V639]

================================

Block 0x83b
[0x83b:0x84d]
---
Predecessors: [0x833]
Successors: [0x879]
---
0x83b PUSH2 0x100
0x83e DUP1
0x83f DUP4
0x840 SLOAD
0x841 DIV
0x842 MUL
0x843 DUP4
0x844 MSTORE
0x845 SWAP2
0x846 PUSH1 0x20
0x848 ADD
0x849 SWAP2
0x84a PUSH2 0x879
0x84d JUMP
---
0x83b: V652 = 0x100
0x840: V653 = S[0xc]
0x841: V654 = DIV V653 0x100
0x842: V655 = MUL V654 0x100
0x844: M[V646] = V655
0x846: V656 = 0x20
0x848: V657 = ADD 0x20 V646
0x84a: V658 = 0x879
0x84d: JUMP 0x879
---
Entry stack: [V11, 0x1bd, V627, 0xc, V639, V646, 0xc, V639]
Stack pops: 3
Stack additions: [V657, S1, S0]
Exit stack: [V11, 0x1bd, V627, 0xc, V639, V657, 0xc, V639]

================================

Block 0x84e
[0x84e:0x85b]
---
Predecessors: [0x833]
Successors: [0x85c]
---
0x84e JUMPDEST
0x84f DUP3
0x850 ADD
0x851 SWAP2
0x852 SWAP1
0x853 PUSH1 0x0
0x855 MSTORE
0x856 PUSH1 0x20
0x858 PUSH1 0x0
0x85a SHA3
0x85b SWAP1
---
0x84e: JUMPDEST 
0x850: V659 = ADD V646 V639
0x853: V660 = 0x0
0x855: M[0x0] = 0xc
0x856: V661 = 0x20
0x858: V662 = 0x0
0x85a: V663 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x1bd, V627, 0xc, V639, V646, 0xc, V639]
Stack pops: 3
Stack additions: [V659, V663, S2]
Exit stack: [V11, 0x1bd, V627, 0xc, V639, V659, V663, V646]

================================

Block 0x85c
[0x85c:0x86f]
---
Predecessors: [0x84e, 0x85c]
Successors: [0x85c, 0x870]
---
0x85c JUMPDEST
0x85d DUP2
0x85e SLOAD
0x85f DUP2
0x860 MSTORE
0x861 SWAP1
0x862 PUSH1 0x1
0x864 ADD
0x865 SWAP1
0x866 PUSH1 0x20
0x868 ADD
0x869 DUP1
0x86a DUP4
0x86b GT
0x86c PUSH2 0x85c
0x86f JUMPI
---
0x85c: JUMPDEST 
0x85e: V664 = S[S1]
0x860: M[S0] = V664
0x862: V665 = 0x1
0x864: V666 = ADD 0x1 S1
0x866: V667 = 0x20
0x868: V668 = ADD 0x20 S0
0x86b: V669 = GT V659 V668
0x86c: V670 = 0x85c
0x86f: JUMPI 0x85c V669
---
Entry stack: [V11, 0x1bd, V627, 0xc, V639, V659, S1, S0]
Stack pops: 3
Stack additions: [S2, V666, V668]
Exit stack: [V11, 0x1bd, V627, 0xc, V639, V659, V666, V668]

================================

Block 0x870
[0x870:0x878]
---
Predecessors: [0x85c]
Successors: [0x879]
---
0x870 DUP3
0x871 SWAP1
0x872 SUB
0x873 PUSH1 0x1f
0x875 AND
0x876 DUP3
0x877 ADD
0x878 SWAP2
---
0x872: V671 = SUB V668 V659
0x873: V672 = 0x1f
0x875: V673 = AND 0x1f V671
0x877: V674 = ADD V659 V673
---
Entry stack: [V11, 0x1bd, V627, 0xc, V639, V659, V666, V668]
Stack pops: 3
Stack additions: [V674, S1, S2]
Exit stack: [V11, 0x1bd, V627, 0xc, V639, V674, V666, V659]

================================

Block 0x879
[0x879:0x880]
---
Predecessors: [0x7f3, 0x83b, 0x870]
Successors: [0x1bd]
---
0x879 JUMPDEST
0x87a POP
0x87b POP
0x87c POP
0x87d POP
0x87e POP
0x87f DUP2
0x880 JUMP
---
0x879: JUMPDEST 
0x880: JUMP 0x1bd
---
Entry stack: [V11, 0x1bd, V627, 0xc, V639, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x1bd, V627]

================================

Block 0x881
[0x881:0x88f]
---
Predecessors: [0x23e]
Successors: [0x11a]
---
0x881 JUMPDEST
0x882 PUSH1 0x9
0x884 SLOAD
0x885 PUSH1 0x1
0x887 PUSH1 0xa0
0x889 PUSH1 0x2
0x88b EXP
0x88c SUB
0x88d AND
0x88e DUP2
0x88f JUMP
---
0x881: JUMPDEST 
0x882: V675 = 0x9
0x884: V676 = S[0x9]
0x885: V677 = 0x1
0x887: V678 = 0xa0
0x889: V679 = 0x2
0x88b: V680 = EXP 0x2 0xa0
0x88c: V681 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88d: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V676
0x88f: JUMP 0x11a
---
Entry stack: [V11, 0x11a]
Stack pops: 1
Stack additions: [S0, V682]
Exit stack: [V11, 0x11a, V682]

================================

Block 0x890
[0x890:0x895]
---
Predecessors: [0x253]
Successors: [0x14b]
---
0x890 JUMPDEST
0x891 PUSH1 0x2
0x893 SLOAD
0x894 DUP2
0x895 JUMP
---
0x890: JUMPDEST 
0x891: V683 = 0x2
0x893: V684 = S[0x2]
0x895: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: [S0, V684]
Exit stack: [V11, 0x14b, V684]

================================

Block 0x896
[0x896:0x89b]
---
Predecessors: [0x268]
Successors: [0x14b]
---
0x896 JUMPDEST
0x897 PUSH1 0x3
0x899 SLOAD
0x89a DUP2
0x89b JUMP
---
0x896: JUMPDEST 
0x897: V685 = 0x3
0x899: V686 = S[0x3]
0x89b: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: [S0, V686]
Exit stack: [V11, 0x14b, V686]

================================

Block 0x89c
[0x89c:0x8a8]
---
Predecessors: [0x27d, 0x637]
Successors: [0x8a9, 0x8bf]
---
0x89c JUMPDEST
0x89d PUSH1 0x5
0x89f SLOAD
0x8a0 TIMESTAMP
0x8a1 LT
0x8a2 ISZERO
0x8a3 DUP1
0x8a4 ISZERO
0x8a5 PUSH2 0x8bf
0x8a8 JUMPI
---
0x89c: JUMPDEST 
0x89d: V687 = 0x5
0x89f: V688 = S[0x5]
0x8a0: V689 = TIMESTAMP
0x8a1: V690 = LT V689 V688
0x8a2: V691 = ISZERO V690
0x8a4: V692 = ISZERO V691
0x8a5: V693 = 0x8bf
0x8a8: JUMPI 0x8bf V692
---
Entry stack: [V11, 0x103, S1, {0x103, 0x67a}]
Stack pops: 0
Stack additions: [V691]
Exit stack: [V11, 0x103, S1, {0x103, 0x67a}, V691]

================================

Block 0x8a9
[0x8a9:0x8ba]
---
Predecessors: [0x89c]
Successors: [0x8bb, 0x8bc]
---
0x8a9 POP
0x8aa PUSH1 0x3
0x8ac PUSH1 0x1
0x8ae SLOAD
0x8af PUSH1 0xff
0x8b1 AND
0x8b2 PUSH1 0x3
0x8b4 DUP2
0x8b5 GT
0x8b6 ISZERO
0x8b7 PUSH2 0x8bc
0x8ba JUMPI
---
0x8aa: V694 = 0x3
0x8ac: V695 = 0x1
0x8ae: V696 = S[0x1]
0x8af: V697 = 0xff
0x8b1: V698 = AND 0xff V696
0x8b2: V699 = 0x3
0x8b5: V700 = GT V698 0x3
0x8b6: V701 = ISZERO V700
0x8b7: V702 = 0x8bc
0x8ba: JUMPI 0x8bc V701
---
Entry stack: [V11, 0x103, S2, {0x103, 0x67a}, V691]
Stack pops: 1
Stack additions: [0x3, V698]
Exit stack: [V11, 0x103, S2, {0x103, 0x67a}, 0x3, V698]

================================

Block 0x8bb
[0x8bb:0x8bb]
---
Predecessors: [0x8a9]
Successors: []
---
0x8bb INVALID
---
0x8bb: INVALID 
---
Entry stack: [V11, 0x103, S3, {0x103, 0x67a}, 0x3, V698]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S3, {0x103, 0x67a}, 0x3, V698]

================================

Block 0x8bc
[0x8bc:0x8be]
---
Predecessors: [0x8a9]
Successors: [0x8bf]
---
0x8bc JUMPDEST
0x8bd EQ
0x8be ISZERO
---
0x8bc: JUMPDEST 
0x8bd: V703 = EQ V698 0x3
0x8be: V704 = ISZERO V703
---
Entry stack: [V11, 0x103, S3, {0x103, 0x67a}, 0x3, V698]
Stack pops: 2
Stack additions: [V704]
Exit stack: [V11, 0x103, S3, {0x103, 0x67a}, V704]

================================

Block 0x8bf
[0x8bf:0x8c4]
---
Predecessors: [0x89c, 0x8bc]
Successors: [0x8c5, 0x918]
---
0x8bf JUMPDEST
0x8c0 ISZERO
0x8c1 PUSH2 0x918
0x8c4 JUMPI
---
0x8bf: JUMPDEST 
0x8c0: V705 = ISZERO S0
0x8c1: V706 = 0x918
0x8c4: JUMPI 0x918 V705
---
Entry stack: [V11, 0x103, S2, {0x103, 0x67a}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x103, S2, {0x103, 0x67a}]

================================

Block 0x8c5
[0x8c5:0x912]
---
Predecessors: [0x8bf]
Successors: [0x986]
---
0x8c5 PUSH1 0x1
0x8c7 DUP1
0x8c8 SLOAD
0x8c9 PUSH1 0xff
0x8cb NOT
0x8cc AND
0x8cd PUSH1 0x3
0x8cf OR
0x8d0 SWAP1
0x8d1 SSTORE
0x8d2 TIMESTAMP
0x8d3 PUSH1 0x6
0x8d5 SSTORE
0x8d6 PUSH1 0x7
0x8d8 SLOAD
0x8d9 PUSH1 0x40
0x8db DUP1
0x8dc MLOAD
0x8dd SWAP2
0x8de DUP3
0x8df MSTORE
0x8e0 MLOAD
0x8e1 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x902 SWAP2
0x903 PUSH1 0x20
0x905 SWAP1
0x906 DUP3
0x907 SWAP1
0x908 SUB
0x909 ADD
0x90a SWAP1
0x90b LOG1
0x90c PUSH2 0x913
0x90f PUSH2 0x986
0x912 JUMP
---
0x8c5: V707 = 0x1
0x8c8: V708 = S[0x1]
0x8c9: V709 = 0xff
0x8cb: V710 = NOT 0xff
0x8cc: V711 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V708
0x8cd: V712 = 0x3
0x8cf: V713 = OR 0x3 V711
0x8d1: S[0x1] = V713
0x8d2: V714 = TIMESTAMP
0x8d3: V715 = 0x6
0x8d5: S[0x6] = V714
0x8d6: V716 = 0x7
0x8d8: V717 = S[0x7]
0x8d9: V718 = 0x40
0x8dc: V719 = M[0x40]
0x8df: M[V719] = V717
0x8e0: V720 = M[0x40]
0x8e1: V721 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x903: V722 = 0x20
0x908: V723 = SUB V719 V720
0x909: V724 = ADD V723 0x20
0x90b: LOG V720 V724 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x90c: V725 = 0x913
0x90f: V726 = 0x986
0x912: JUMP 0x986
---
Entry stack: [V11, 0x103, S1, {0x103, 0x67a}]
Stack pops: 0
Stack additions: [0x913]
Exit stack: [V11, 0x103, S1, {0x103, 0x67a}, 0x913]

================================

Block 0x913
[0x913:0x917]
---
Predecessors: [0xb1c]
Successors: [0x984]
---
0x913 JUMPDEST
0x914 PUSH2 0x984
0x917 JUMP
---
0x913: JUMPDEST 
0x914: V727 = 0x984
0x917: JUMP 0x984
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S1, S0]

================================

Block 0x918
[0x918:0x929]
---
Predecessors: [0x8bf]
Successors: [0x92a, 0x92b]
---
0x918 JUMPDEST
0x919 PUSH1 0x0
0x91b PUSH1 0x1
0x91d SLOAD
0x91e PUSH1 0xff
0x920 AND
0x921 PUSH1 0x3
0x923 DUP2
0x924 GT
0x925 ISZERO
0x926 PUSH2 0x92b
0x929 JUMPI
---
0x918: JUMPDEST 
0x919: V728 = 0x0
0x91b: V729 = 0x1
0x91d: V730 = S[0x1]
0x91e: V731 = 0xff
0x920: V732 = AND 0xff V730
0x921: V733 = 0x3
0x924: V734 = GT V732 0x3
0x925: V735 = ISZERO V734
0x926: V736 = 0x92b
0x929: JUMPI 0x92b V735
---
Entry stack: [V11, 0x103, S1, {0x103, 0x67a}]
Stack pops: 0
Stack additions: [0x0, V732]
Exit stack: [V11, 0x103, S1, {0x103, 0x67a}, 0x0, V732]

================================

Block 0x92a
[0x92a:0x92a]
---
Predecessors: [0x918]
Successors: []
---
0x92a INVALID
---
0x92a: INVALID 
---
Entry stack: [V11, 0x103, S3, {0x103, 0x67a}, 0x0, V732]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S3, {0x103, 0x67a}, 0x0, V732]

================================

Block 0x92b
[0x92b:0x932]
---
Predecessors: [0x918]
Successors: [0x933, 0x93a]
---
0x92b JUMPDEST
0x92c EQ
0x92d DUP1
0x92e ISZERO
0x92f PUSH2 0x93a
0x932 JUMPI
---
0x92b: JUMPDEST 
0x92c: V737 = EQ V732 0x0
0x92e: V738 = ISZERO V737
0x92f: V739 = 0x93a
0x932: JUMPI 0x93a V738
---
Entry stack: [V11, 0x103, S3, {0x103, 0x67a}, 0x0, V732]
Stack pops: 2
Stack additions: [V737]
Exit stack: [V11, 0x103, S3, {0x103, 0x67a}, V737]

================================

Block 0x933
[0x933:0x939]
---
Predecessors: [0x92b]
Successors: [0x93a]
---
0x933 POP
0x934 PUSH1 0x3
0x936 SLOAD
0x937 TIMESTAMP
0x938 LT
0x939 ISZERO
---
0x934: V740 = 0x3
0x936: V741 = S[0x3]
0x937: V742 = TIMESTAMP
0x938: V743 = LT V742 V741
0x939: V744 = ISZERO V743
---
Entry stack: [V11, 0x103, S2, {0x103, 0x67a}, V737]
Stack pops: 1
Stack additions: [V744]
Exit stack: [V11, 0x103, S2, {0x103, 0x67a}, V744]

================================

Block 0x93a
[0x93a:0x93f]
---
Predecessors: [0x92b, 0x933]
Successors: [0x940, 0x950]
---
0x93a JUMPDEST
0x93b ISZERO
0x93c PUSH2 0x950
0x93f JUMPI
---
0x93a: JUMPDEST 
0x93b: V745 = ISZERO S0
0x93c: V746 = 0x950
0x93f: JUMPI 0x950 V745
---
Entry stack: [V11, 0x103, S2, {0x103, 0x67a}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x103, S2, {0x103, 0x67a}]

================================

Block 0x940
[0x940:0x94f]
---
Predecessors: [0x93a]
Successors: [0x984]
---
0x940 PUSH1 0x1
0x942 DUP1
0x943 SLOAD
0x944 PUSH1 0xff
0x946 NOT
0x947 AND
0x948 DUP2
0x949 OR
0x94a SWAP1
0x94b SSTORE
0x94c PUSH2 0x984
0x94f JUMP
---
0x940: V747 = 0x1
0x943: V748 = S[0x1]
0x944: V749 = 0xff
0x946: V750 = NOT 0xff
0x947: V751 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V748
0x949: V752 = OR 0x1 V751
0x94b: S[0x1] = V752
0x94c: V753 = 0x984
0x94f: JUMP 0x984
---
Entry stack: [V11, 0x103, S1, {0x103, 0x67a}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S1, {0x103, 0x67a}]

================================

Block 0x950
[0x950:0x960]
---
Predecessors: [0x93a]
Successors: [0x961, 0x962]
---
0x950 JUMPDEST
0x951 PUSH1 0x1
0x953 DUP1
0x954 SLOAD
0x955 PUSH1 0xff
0x957 AND
0x958 PUSH1 0x3
0x95a DUP2
0x95b GT
0x95c ISZERO
0x95d PUSH2 0x962
0x960 JUMPI
---
0x950: JUMPDEST 
0x951: V754 = 0x1
0x954: V755 = S[0x1]
0x955: V756 = 0xff
0x957: V757 = AND 0xff V755
0x958: V758 = 0x3
0x95b: V759 = GT V757 0x3
0x95c: V760 = ISZERO V759
0x95d: V761 = 0x962
0x960: JUMPI 0x962 V760
---
Entry stack: [V11, 0x103, S1, {0x103, 0x67a}]
Stack pops: 0
Stack additions: [0x1, V757]
Exit stack: [V11, 0x103, S1, {0x103, 0x67a}, 0x1, V757]

================================

Block 0x961
[0x961:0x961]
---
Predecessors: [0x950]
Successors: []
---
0x961 INVALID
---
0x961: INVALID 
---
Entry stack: [V11, 0x103, S3, {0x103, 0x67a}, 0x1, V757]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S3, {0x103, 0x67a}, 0x1, V757]

================================

Block 0x962
[0x962:0x969]
---
Predecessors: [0x950]
Successors: [0x96a, 0x971]
---
0x962 JUMPDEST
0x963 EQ
0x964 DUP1
0x965 ISZERO
0x966 PUSH2 0x971
0x969 JUMPI
---
0x962: JUMPDEST 
0x963: V762 = EQ V757 0x1
0x965: V763 = ISZERO V762
0x966: V764 = 0x971
0x969: JUMPI 0x971 V763
---
Entry stack: [V11, 0x103, S3, {0x103, 0x67a}, 0x1, V757]
Stack pops: 2
Stack additions: [V762]
Exit stack: [V11, 0x103, S3, {0x103, 0x67a}, V762]

================================

Block 0x96a
[0x96a:0x970]
---
Predecessors: [0x962]
Successors: [0x971]
---
0x96a POP
0x96b PUSH1 0x4
0x96d SLOAD
0x96e TIMESTAMP
0x96f LT
0x970 ISZERO
---
0x96b: V765 = 0x4
0x96d: V766 = S[0x4]
0x96e: V767 = TIMESTAMP
0x96f: V768 = LT V767 V766
0x970: V769 = ISZERO V768
---
Entry stack: [V11, 0x103, S2, {0x103, 0x67a}, V762]
Stack pops: 1
Stack additions: [V769]
Exit stack: [V11, 0x103, S2, {0x103, 0x67a}, V769]

================================

Block 0x971
[0x971:0x976]
---
Predecessors: [0x962, 0x96a]
Successors: [0x977, 0x984]
---
0x971 JUMPDEST
0x972 ISZERO
0x973 PUSH2 0x984
0x976 JUMPI
---
0x971: JUMPDEST 
0x972: V770 = ISZERO S0
0x973: V771 = 0x984
0x976: JUMPI 0x984 V770
---
Entry stack: [V11, 0x103, S2, {0x103, 0x67a}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x103, S2, {0x103, 0x67a}]

================================

Block 0x977
[0x977:0x983]
---
Predecessors: [0x971]
Successors: [0x984]
---
0x977 PUSH1 0x1
0x979 DUP1
0x97a SLOAD
0x97b PUSH1 0xff
0x97d NOT
0x97e AND
0x97f PUSH1 0x2
0x981 OR
0x982 SWAP1
0x983 SSTORE
---
0x977: V772 = 0x1
0x97a: V773 = S[0x1]
0x97b: V774 = 0xff
0x97d: V775 = NOT 0xff
0x97e: V776 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V773
0x97f: V777 = 0x2
0x981: V778 = OR 0x2 V776
0x983: S[0x1] = V778
---
Entry stack: [V11, 0x103, S1, {0x103, 0x67a}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S1, {0x103, 0x67a}]

================================

Block 0x984
[0x984:0x985]
---
Predecessors: [0x913, 0x940, 0x971, 0x977]
Successors: [0x103, 0x67a]
---
0x984 JUMPDEST
0x985 JUMP
---
0x984: JUMPDEST 
0x985: JUMP S0
---
Entry stack: [V11, 0x103, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x103, S1]

================================

Block 0x986
[0x986:0x999]
---
Predecessors: [0x292, 0x8c5]
Successors: [0x99a, 0x99b]
---
0x986 JUMPDEST
0x987 PUSH1 0x0
0x989 PUSH1 0x3
0x98b PUSH1 0x1
0x98d SLOAD
0x98e PUSH1 0xff
0x990 AND
0x991 PUSH1 0x3
0x993 DUP2
0x994 GT
0x995 ISZERO
0x996 PUSH2 0x99b
0x999 JUMPI
---
0x986: JUMPDEST 
0x987: V779 = 0x0
0x989: V780 = 0x3
0x98b: V781 = 0x1
0x98d: V782 = S[0x1]
0x98e: V783 = 0xff
0x990: V784 = AND 0xff V782
0x991: V785 = 0x3
0x994: V786 = GT V784 0x3
0x995: V787 = ISZERO V786
0x996: V788 = 0x99b
0x999: JUMPI 0x99b V787
---
Entry stack: [V11, 0x103, S2, S1, {0x103, 0x913}]
Stack pops: 0
Stack additions: [0x0, 0x3, V784]
Exit stack: [V11, 0x103, S2, S1, {0x103, 0x913}, 0x0, 0x3, V784]

================================

Block 0x99a
[0x99a:0x99a]
---
Predecessors: [0x986]
Successors: []
---
0x99a INVALID
---
0x99a: INVALID 
---
Entry stack: [V11, 0x103, S5, S4, {0x103, 0x913}, 0x0, 0x3, V784]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S5, S4, {0x103, 0x913}, 0x0, 0x3, V784]

================================

Block 0x99b
[0x99b:0x9a0]
---
Predecessors: [0x986]
Successors: [0x9a1, 0x9a5]
---
0x99b JUMPDEST
0x99c EQ
0x99d PUSH2 0x9a5
0x9a0 JUMPI
---
0x99b: JUMPDEST 
0x99c: V789 = EQ V784 0x3
0x99d: V790 = 0x9a5
0x9a0: JUMPI 0x9a5 V789
---
Entry stack: [V11, 0x103, S5, S4, {0x103, 0x913}, 0x0, 0x3, V784]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x103, S5, S4, {0x103, 0x913}, 0x0]

================================

Block 0x9a1
[0x9a1:0x9a4]
---
Predecessors: [0x99b]
Successors: []
---
0x9a1 PUSH1 0x0
0x9a3 DUP1
0x9a4 REVERT
---
0x9a1: V791 = 0x0
0x9a4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S3, S2, {0x103, 0x913}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S3, S2, {0x103, 0x913}, 0x0]

================================

Block 0x9a5
[0x9a5:0xa06]
---
Predecessors: [0x99b]
Successors: [0xa07, 0xa0b]
---
0x9a5 JUMPDEST
0x9a6 PUSH1 0x9
0x9a8 SLOAD
0x9a9 PUSH1 0x40
0x9ab DUP1
0x9ac MLOAD
0x9ad PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9ce DUP2
0x9cf MSTORE
0x9d0 ADDRESS
0x9d1 PUSH1 0x4
0x9d3 DUP3
0x9d4 ADD
0x9d5 MSTORE
0x9d6 SWAP1
0x9d7 MLOAD
0x9d8 PUSH1 0x1
0x9da PUSH1 0xa0
0x9dc PUSH1 0x2
0x9de EXP
0x9df SUB
0x9e0 SWAP1
0x9e1 SWAP3
0x9e2 AND
0x9e3 SWAP2
0x9e4 PUSH4 0x70a08231
0x9e9 SWAP2
0x9ea PUSH1 0x24
0x9ec DUP1
0x9ed DUP3
0x9ee ADD
0x9ef SWAP3
0x9f0 PUSH1 0x20
0x9f2 SWAP3
0x9f3 SWAP1
0x9f4 SWAP2
0x9f5 SWAP1
0x9f6 DUP3
0x9f7 SWAP1
0x9f8 SUB
0x9f9 ADD
0x9fa DUP2
0x9fb PUSH1 0x0
0x9fd DUP8
0x9fe DUP1
0x9ff EXTCODESIZE
0xa00 ISZERO
0xa01 DUP1
0xa02 ISZERO
0xa03 PUSH2 0xa0b
0xa06 JUMPI
---
0x9a5: JUMPDEST 
0x9a6: V792 = 0x9
0x9a8: V793 = S[0x9]
0x9a9: V794 = 0x40
0x9ac: V795 = M[0x40]
0x9ad: V796 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9cf: M[V795] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9d0: V797 = ADDRESS
0x9d1: V798 = 0x4
0x9d4: V799 = ADD V795 0x4
0x9d5: M[V799] = V797
0x9d7: V800 = M[0x40]
0x9d8: V801 = 0x1
0x9da: V802 = 0xa0
0x9dc: V803 = 0x2
0x9de: V804 = EXP 0x2 0xa0
0x9df: V805 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e2: V806 = AND V793 0xffffffffffffffffffffffffffffffffffffffff
0x9e4: V807 = 0x70a08231
0x9ea: V808 = 0x24
0x9ee: V809 = ADD V795 0x24
0x9f0: V810 = 0x20
0x9f8: V811 = SUB V795 V800
0x9f9: V812 = ADD V811 0x24
0x9fb: V813 = 0x0
0x9ff: V814 = EXTCODESIZE V806
0xa00: V815 = ISZERO V814
0xa02: V816 = ISZERO V815
0xa03: V817 = 0xa0b
0xa06: JUMPI 0xa0b V816
---
Entry stack: [V11, 0x103, S3, S2, {0x103, 0x913}, 0x0]
Stack pops: 0
Stack additions: [V806, 0x70a08231, V809, 0x20, V800, V812, V800, 0x0, V806, V815]
Exit stack: [V11, 0x103, S3, S2, {0x103, 0x913}, 0x0, V806, 0x70a08231, V809, 0x20, V800, V812, V800, 0x0, V806, V815]

================================

Block 0xa07
[0xa07:0xa0a]
---
Predecessors: [0x9a5]
Successors: []
---
0xa07 PUSH1 0x0
0xa09 DUP1
0xa0a REVERT
---
0xa07: V818 = 0x0
0xa0a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S13, S12, {0x103, 0x913}, 0x0, V806, 0x70a08231, V809, 0x20, V800, V812, V800, 0x0, V806, V815]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S13, S12, {0x103, 0x913}, 0x0, V806, 0x70a08231, V809, 0x20, V800, V812, V800, 0x0, V806, V815]

================================

Block 0xa0b
[0xa0b:0xa15]
---
Predecessors: [0x9a5]
Successors: [0xa16, 0xa1f]
---
0xa0b JUMPDEST
0xa0c POP
0xa0d GAS
0xa0e CALL
0xa0f ISZERO
0xa10 DUP1
0xa11 ISZERO
0xa12 PUSH2 0xa1f
0xa15 JUMPI
---
0xa0b: JUMPDEST 
0xa0d: V819 = GAS
0xa0e: V820 = CALL V819 V806 0x0 V800 V812 V800 0x20
0xa0f: V821 = ISZERO V820
0xa11: V822 = ISZERO V821
0xa12: V823 = 0xa1f
0xa15: JUMPI 0xa1f V822
---
Entry stack: [V11, 0x103, S13, S12, {0x103, 0x913}, 0x0, V806, 0x70a08231, V809, 0x20, V800, V812, V800, 0x0, V806, V815]
Stack pops: 7
Stack additions: [V821]
Exit stack: [V11, 0x103, S13, S12, {0x103, 0x913}, 0x0, V806, 0x70a08231, V809, V821]

================================

Block 0xa16
[0xa16:0xa1e]
---
Predecessors: [0xa0b]
Successors: []
---
0xa16 RETURNDATASIZE
0xa17 PUSH1 0x0
0xa19 DUP1
0xa1a RETURNDATACOPY
0xa1b RETURNDATASIZE
0xa1c PUSH1 0x0
0xa1e REVERT
---
0xa16: V824 = RETURNDATASIZE
0xa17: V825 = 0x0
0xa1a: RETURNDATACOPY 0x0 0x0 V824
0xa1b: V826 = RETURNDATASIZE
0xa1c: V827 = 0x0
0xa1e: REVERT 0x0 V826
---
Entry stack: [V11, 0x103, S7, S6, {0x103, 0x913}, 0x0, S3, 0x70a08231, S1, V821]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S7, S6, {0x103, 0x913}, 0x0, S3, 0x70a08231, S1, V821]

================================

Block 0xa1f
[0xa1f:0xa30]
---
Predecessors: [0xa0b]
Successors: [0xa31, 0xa35]
---
0xa1f JUMPDEST
0xa20 POP
0xa21 POP
0xa22 POP
0xa23 POP
0xa24 PUSH1 0x40
0xa26 MLOAD
0xa27 RETURNDATASIZE
0xa28 PUSH1 0x20
0xa2a DUP2
0xa2b LT
0xa2c ISZERO
0xa2d PUSH2 0xa35
0xa30 JUMPI
---
0xa1f: JUMPDEST 
0xa24: V828 = 0x40
0xa26: V829 = M[0x40]
0xa27: V830 = RETURNDATASIZE
0xa28: V831 = 0x20
0xa2b: V832 = LT V830 0x20
0xa2c: V833 = ISZERO V832
0xa2d: V834 = 0xa35
0xa30: JUMPI 0xa35 V833
---
Entry stack: [V11, 0x103, S7, S6, {0x103, 0x913}, 0x0, S3, 0x70a08231, S1, V821]
Stack pops: 4
Stack additions: [V829, V830]
Exit stack: [V11, 0x103, S7, S6, {0x103, 0x913}, 0x0, V829, V830]

================================

Block 0xa31
[0xa31:0xa34]
---
Predecessors: [0xa1f]
Successors: []
---
0xa31 PUSH1 0x0
0xa33 DUP1
0xa34 REVERT
---
0xa31: V835 = 0x0
0xa34: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S5, S4, {0x103, 0x913}, 0x0, V829, V830]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S5, S4, {0x103, 0x913}, 0x0, V829, V830]

================================

Block 0xa35
[0xa35:0xaa6]
---
Predecessors: [0xa1f]
Successors: [0xaa7, 0xaab]
---
0xa35 JUMPDEST
0xa36 POP
0xa37 MLOAD
0xa38 PUSH1 0x9
0xa3a SLOAD
0xa3b PUSH1 0xb
0xa3d SLOAD
0xa3e PUSH1 0x40
0xa40 DUP1
0xa41 MLOAD
0xa42 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa63 DUP2
0xa64 MSTORE
0xa65 PUSH1 0x1
0xa67 PUSH1 0xa0
0xa69 PUSH1 0x2
0xa6b EXP
0xa6c SUB
0xa6d SWAP3
0xa6e DUP4
0xa6f AND
0xa70 PUSH1 0x4
0xa72 DUP3
0xa73 ADD
0xa74 MSTORE
0xa75 PUSH1 0x24
0xa77 DUP2
0xa78 ADD
0xa79 DUP6
0xa7a SWAP1
0xa7b MSTORE
0xa7c SWAP1
0xa7d MLOAD
0xa7e SWAP4
0xa7f SWAP5
0xa80 POP
0xa81 SWAP2
0xa82 AND
0xa83 SWAP2
0xa84 PUSH4 0xa9059cbb
0xa89 SWAP2
0xa8a PUSH1 0x44
0xa8c DUP1
0xa8d DUP3
0xa8e ADD
0xa8f SWAP3
0xa90 PUSH1 0x20
0xa92 SWAP3
0xa93 SWAP1
0xa94 SWAP2
0xa95 SWAP1
0xa96 DUP3
0xa97 SWAP1
0xa98 SUB
0xa99 ADD
0xa9a DUP2
0xa9b PUSH1 0x0
0xa9d DUP8
0xa9e DUP1
0xa9f EXTCODESIZE
0xaa0 ISZERO
0xaa1 DUP1
0xaa2 ISZERO
0xaa3 PUSH2 0xaab
0xaa6 JUMPI
---
0xa35: JUMPDEST 
0xa37: V836 = M[V829]
0xa38: V837 = 0x9
0xa3a: V838 = S[0x9]
0xa3b: V839 = 0xb
0xa3d: V840 = S[0xb]
0xa3e: V841 = 0x40
0xa41: V842 = M[0x40]
0xa42: V843 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa64: M[V842] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa65: V844 = 0x1
0xa67: V845 = 0xa0
0xa69: V846 = 0x2
0xa6b: V847 = EXP 0x2 0xa0
0xa6c: V848 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6f: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0xa70: V850 = 0x4
0xa73: V851 = ADD V842 0x4
0xa74: M[V851] = V849
0xa75: V852 = 0x24
0xa78: V853 = ADD V842 0x24
0xa7b: M[V853] = V836
0xa7d: V854 = M[0x40]
0xa82: V855 = AND V838 0xffffffffffffffffffffffffffffffffffffffff
0xa84: V856 = 0xa9059cbb
0xa8a: V857 = 0x44
0xa8e: V858 = ADD V842 0x44
0xa90: V859 = 0x20
0xa98: V860 = SUB V842 V854
0xa99: V861 = ADD V860 0x44
0xa9b: V862 = 0x0
0xa9f: V863 = EXTCODESIZE V855
0xaa0: V864 = ISZERO V863
0xaa2: V865 = ISZERO V864
0xaa3: V866 = 0xaab
0xaa6: JUMPI 0xaab V865
---
Entry stack: [V11, 0x103, S5, S4, {0x103, 0x913}, 0x0, V829, V830]
Stack pops: 3
Stack additions: [V836, V855, 0xa9059cbb, V858, 0x20, V854, V861, V854, 0x0, V855, V864]
Exit stack: [V11, 0x103, S5, S4, {0x103, 0x913}, V836, V855, 0xa9059cbb, V858, 0x20, V854, V861, V854, 0x0, V855, V864]

================================

Block 0xaa7
[0xaa7:0xaaa]
---
Predecessors: [0xa35]
Successors: []
---
0xaa7 PUSH1 0x0
0xaa9 DUP1
0xaaa REVERT
---
0xaa7: V867 = 0x0
0xaaa: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S13, S12, {0x103, 0x913}, V836, V855, 0xa9059cbb, V858, 0x20, V854, V861, V854, 0x0, V855, V864]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S13, S12, {0x103, 0x913}, V836, V855, 0xa9059cbb, V858, 0x20, V854, V861, V854, 0x0, V855, V864]

================================

Block 0xaab
[0xaab:0xab5]
---
Predecessors: [0xa35]
Successors: [0xab6, 0xabf]
---
0xaab JUMPDEST
0xaac POP
0xaad GAS
0xaae CALL
0xaaf ISZERO
0xab0 DUP1
0xab1 ISZERO
0xab2 PUSH2 0xabf
0xab5 JUMPI
---
0xaab: JUMPDEST 
0xaad: V868 = GAS
0xaae: V869 = CALL V868 V855 0x0 V854 V861 V854 0x20
0xaaf: V870 = ISZERO V869
0xab1: V871 = ISZERO V870
0xab2: V872 = 0xabf
0xab5: JUMPI 0xabf V871
---
Entry stack: [V11, 0x103, S13, S12, {0x103, 0x913}, V836, V855, 0xa9059cbb, V858, 0x20, V854, V861, V854, 0x0, V855, V864]
Stack pops: 7
Stack additions: [V870]
Exit stack: [V11, 0x103, S13, S12, {0x103, 0x913}, V836, V855, 0xa9059cbb, V858, V870]

================================

Block 0xab6
[0xab6:0xabe]
---
Predecessors: [0xaab]
Successors: []
---
0xab6 RETURNDATASIZE
0xab7 PUSH1 0x0
0xab9 DUP1
0xaba RETURNDATACOPY
0xabb RETURNDATASIZE
0xabc PUSH1 0x0
0xabe REVERT
---
0xab6: V873 = RETURNDATASIZE
0xab7: V874 = 0x0
0xaba: RETURNDATACOPY 0x0 0x0 V873
0xabb: V875 = RETURNDATASIZE
0xabc: V876 = 0x0
0xabe: REVERT 0x0 V875
---
Entry stack: [V11, 0x103, S7, S6, {0x103, 0x913}, S4, S3, 0xa9059cbb, S1, V870]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S7, S6, {0x103, 0x913}, S4, S3, 0xa9059cbb, S1, V870]

================================

Block 0xabf
[0xabf:0xad0]
---
Predecessors: [0xaab]
Successors: [0xad1, 0xad5]
---
0xabf JUMPDEST
0xac0 POP
0xac1 POP
0xac2 POP
0xac3 POP
0xac4 PUSH1 0x40
0xac6 MLOAD
0xac7 RETURNDATASIZE
0xac8 PUSH1 0x20
0xaca DUP2
0xacb LT
0xacc ISZERO
0xacd PUSH2 0xad5
0xad0 JUMPI
---
0xabf: JUMPDEST 
0xac4: V877 = 0x40
0xac6: V878 = M[0x40]
0xac7: V879 = RETURNDATASIZE
0xac8: V880 = 0x20
0xacb: V881 = LT V879 0x20
0xacc: V882 = ISZERO V881
0xacd: V883 = 0xad5
0xad0: JUMPI 0xad5 V882
---
Entry stack: [V11, 0x103, S7, S6, {0x103, 0x913}, S4, S3, 0xa9059cbb, S1, V870]
Stack pops: 4
Stack additions: [V878, V879]
Exit stack: [V11, 0x103, S7, S6, {0x103, 0x913}, S4, V878, V879]

================================

Block 0xad1
[0xad1:0xad4]
---
Predecessors: [0xabf]
Successors: []
---
0xad1 PUSH1 0x0
0xad3 DUP1
0xad4 REVERT
---
0xad1: V884 = 0x0
0xad4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S5, S4, {0x103, 0x913}, S2, V878, V879]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S5, S4, {0x103, 0x913}, S2, V878, V879]

================================

Block 0xad5
[0xad5:0xadd]
---
Predecessors: [0xabf]
Successors: [0xade, 0xae2]
---
0xad5 JUMPDEST
0xad6 POP
0xad7 MLOAD
0xad8 ISZERO
0xad9 ISZERO
0xada PUSH2 0xae2
0xadd JUMPI
---
0xad5: JUMPDEST 
0xad7: V885 = M[V878]
0xad8: V886 = ISZERO V885
0xad9: V887 = ISZERO V886
0xada: V888 = 0xae2
0xadd: JUMPI 0xae2 V887
---
Entry stack: [V11, 0x103, S5, S4, {0x103, 0x913}, S2, V878, V879]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x103, S5, S4, {0x103, 0x913}, S2]

================================

Block 0xade
[0xade:0xae1]
---
Predecessors: [0xad5]
Successors: []
---
0xade PUSH1 0x0
0xae0 DUP1
0xae1 REVERT
---
0xade: V889 = 0x0
0xae1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S3, S2, {0x103, 0x913}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S3, S2, {0x103, 0x913}, S0]

================================

Block 0xae2
[0xae2:0xb12]
---
Predecessors: [0xad5]
Successors: [0xb13, 0xb1c]
---
0xae2 JUMPDEST
0xae3 PUSH1 0xb
0xae5 SLOAD
0xae6 PUSH1 0x40
0xae8 MLOAD
0xae9 PUSH1 0x1
0xaeb PUSH1 0xa0
0xaed PUSH1 0x2
0xaef EXP
0xaf0 SUB
0xaf1 SWAP1
0xaf2 SWAP2
0xaf3 AND
0xaf4 SWAP1
0xaf5 ADDRESS
0xaf6 BALANCE
0xaf7 DUP1
0xaf8 ISZERO
0xaf9 PUSH2 0x8fc
0xafc MUL
0xafd SWAP2
0xafe PUSH1 0x0
0xb00 DUP2
0xb01 DUP2
0xb02 DUP2
0xb03 DUP6
0xb04 DUP9
0xb05 DUP9
0xb06 CALL
0xb07 SWAP4
0xb08 POP
0xb09 POP
0xb0a POP
0xb0b POP
0xb0c ISZERO
0xb0d DUP1
0xb0e ISZERO
0xb0f PUSH2 0xb1c
0xb12 JUMPI
---
0xae2: JUMPDEST 
0xae3: V890 = 0xb
0xae5: V891 = S[0xb]
0xae6: V892 = 0x40
0xae8: V893 = M[0x40]
0xae9: V894 = 0x1
0xaeb: V895 = 0xa0
0xaed: V896 = 0x2
0xaef: V897 = EXP 0x2 0xa0
0xaf0: V898 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf3: V899 = AND V891 0xffffffffffffffffffffffffffffffffffffffff
0xaf5: V900 = ADDRESS
0xaf6: V901 = BALANCE V900
0xaf8: V902 = ISZERO V901
0xaf9: V903 = 0x8fc
0xafc: V904 = MUL 0x8fc V902
0xafe: V905 = 0x0
0xb06: V906 = CALL V904 V899 V901 V893 0x0 V893 0x0
0xb0c: V907 = ISZERO V906
0xb0e: V908 = ISZERO V907
0xb0f: V909 = 0xb1c
0xb12: JUMPI 0xb1c V908
---
Entry stack: [V11, 0x103, S3, S2, {0x103, 0x913}, S0]
Stack pops: 0
Stack additions: [V907]
Exit stack: [V11, 0x103, S3, S2, {0x103, 0x913}, S0, V907]

================================

Block 0xb13
[0xb13:0xb1b]
---
Predecessors: [0xae2]
Successors: []
---
0xb13 RETURNDATASIZE
0xb14 PUSH1 0x0
0xb16 DUP1
0xb17 RETURNDATACOPY
0xb18 RETURNDATASIZE
0xb19 PUSH1 0x0
0xb1b REVERT
---
0xb13: V910 = RETURNDATASIZE
0xb14: V911 = 0x0
0xb17: RETURNDATACOPY 0x0 0x0 V910
0xb18: V912 = RETURNDATASIZE
0xb19: V913 = 0x0
0xb1b: REVERT 0x0 V912
---
Entry stack: [V11, 0x103, S4, S3, {0x103, 0x913}, S1, V907]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S4, S3, {0x103, 0x913}, S1, V907]

================================

Block 0xb1c
[0xb1c:0xb5e]
---
Predecessors: [0xae2]
Successors: [0x103, 0x913]
---
0xb1c JUMPDEST
0xb1d POP
0xb1e PUSH1 0xa
0xb20 SLOAD
0xb21 PUSH1 0x40
0xb23 DUP1
0xb24 MLOAD
0xb25 PUSH1 0x1
0xb27 PUSH1 0xa0
0xb29 PUSH1 0x2
0xb2b EXP
0xb2c SUB
0xb2d SWAP1
0xb2e SWAP3
0xb2f AND
0xb30 DUP3
0xb31 MSTORE
0xb32 MLOAD
0xb33 PUSH32 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0xb54 SWAP2
0xb55 DUP2
0xb56 SWAP1
0xb57 SUB
0xb58 PUSH1 0x20
0xb5a ADD
0xb5b SWAP1
0xb5c LOG1
0xb5d POP
0xb5e JUMP
---
0xb1c: JUMPDEST 
0xb1e: V914 = 0xa
0xb20: V915 = S[0xa]
0xb21: V916 = 0x40
0xb24: V917 = M[0x40]
0xb25: V918 = 0x1
0xb27: V919 = 0xa0
0xb29: V920 = 0x2
0xb2b: V921 = EXP 0x2 0xa0
0xb2c: V922 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2f: V923 = AND V915 0xffffffffffffffffffffffffffffffffffffffff
0xb31: M[V917] = V923
0xb32: V924 = M[0x40]
0xb33: V925 = 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0xb57: V926 = SUB V917 V924
0xb58: V927 = 0x20
0xb5a: V928 = ADD 0x20 V926
0xb5c: LOG V924 V928 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0xb5e: JUMP {0x103, 0x913}
---
Entry stack: [V11, 0x103, S4, S3, {0x103, 0x913}, S1, V907]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x103, S4, S3]

================================

Block 0xb5f
[0xb5f:0xb67]
---
Predecessors: [0x2a7]
Successors: [0x2b0]
---
0xb5f JUMPDEST
0xb60 PUSH1 0x1
0xb62 SLOAD
0xb63 PUSH1 0xff
0xb65 AND
0xb66 DUP2
0xb67 JUMP
---
0xb5f: JUMPDEST 
0xb60: V929 = 0x1
0xb62: V930 = S[0x1]
0xb63: V931 = 0xff
0xb65: V932 = AND 0xff V930
0xb67: JUMP 0x2b0
---
Entry stack: [V11, 0x2b0]
Stack pops: 1
Stack additions: [S0, V932]
Exit stack: [V11, 0x2b0, V932]

================================

Block 0xb68
[0xb68:0xb6d]
---
Predecessors: [0x2e0]
Successors: [0x14b]
---
0xb68 JUMPDEST
0xb69 PUSH1 0x7
0xb6b SLOAD
0xb6c DUP2
0xb6d JUMP
---
0xb68: JUMPDEST 
0xb69: V933 = 0x7
0xb6b: V934 = S[0x7]
0xb6d: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: [S0, V934]
Exit stack: [V11, 0x14b, V934]

================================

Block 0xb6e
[0xb6e:0xb8b]
---
Predecessors: [0x2f5]
Successors: [0xb8c, 0xb90]
---
0xb6e JUMPDEST
0xb6f CALLER
0xb70 PUSH1 0x0
0xb72 SWAP1
0xb73 DUP2
0xb74 MSTORE
0xb75 PUSH1 0x20
0xb77 DUP2
0xb78 SWAP1
0xb79 MSTORE
0xb7a PUSH1 0x40
0xb7c SWAP1
0xb7d SHA3
0xb7e SLOAD
0xb7f PUSH1 0x2
0xb81 SWAP1
0xb82 PUSH1 0xff
0xb84 AND
0xb85 DUP2
0xb86 GT
0xb87 ISZERO
0xb88 PUSH2 0xb90
0xb8b JUMPI
---
0xb6e: JUMPDEST 
0xb6f: V935 = CALLER
0xb70: V936 = 0x0
0xb74: M[0x0] = V935
0xb75: V937 = 0x20
0xb79: M[0x20] = 0x0
0xb7a: V938 = 0x40
0xb7d: V939 = SHA3 0x0 0x40
0xb7e: V940 = S[V939]
0xb7f: V941 = 0x2
0xb82: V942 = 0xff
0xb84: V943 = AND 0xff V940
0xb86: V944 = GT 0x2 V943
0xb87: V945 = ISZERO V944
0xb88: V946 = 0xb90
0xb8b: JUMPI 0xb90 V945
---
Entry stack: [V11, 0x103, V235, V239]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V11, 0x103, V235, V239, 0x2]

================================

Block 0xb8c
[0xb8c:0xb8f]
---
Predecessors: [0xb6e]
Successors: []
---
0xb8c PUSH1 0x0
0xb8e DUP1
0xb8f REVERT
---
0xb8c: V947 = 0x0
0xb8f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V235, V239, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V235, V239, 0x2]

================================

Block 0xb90
[0xb90:0xba0]
---
Predecessors: [0xb6e]
Successors: [0xba1, 0xba5]
---
0xb90 JUMPDEST
0xb91 PUSH1 0x1
0xb93 PUSH1 0xa0
0xb95 PUSH1 0x2
0xb97 EXP
0xb98 SUB
0xb99 DUP4
0xb9a AND
0xb9b ISZERO
0xb9c ISZERO
0xb9d PUSH2 0xba5
0xba0 JUMPI
---
0xb90: JUMPDEST 
0xb91: V948 = 0x1
0xb93: V949 = 0xa0
0xb95: V950 = 0x2
0xb97: V951 = EXP 0x2 0xa0
0xb98: V952 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9a: V953 = AND V235 0xffffffffffffffffffffffffffffffffffffffff
0xb9b: V954 = ISZERO V953
0xb9c: V955 = ISZERO V954
0xb9d: V956 = 0xba5
0xba0: JUMPI 0xba5 V955
---
Entry stack: [V11, 0x103, V235, V239, 0x2]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x103, V235, V239, 0x2]

================================

Block 0xba1
[0xba1:0xba4]
---
Predecessors: [0xb90]
Successors: []
---
0xba1 PUSH1 0x0
0xba3 DUP1
0xba4 REVERT
---
0xba1: V957 = 0x0
0xba4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V235, V239, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V235, V239, 0x2]

================================

Block 0xba5
[0xba5:0xc08]
---
Predecessors: [0xb90]
Successors: [0x103]
---
0xba5 JUMPDEST
0xba6 PUSH1 0x1
0xba8 PUSH1 0xa0
0xbaa PUSH1 0x2
0xbac EXP
0xbad SUB
0xbae DUP4
0xbaf AND
0xbb0 PUSH1 0x0
0xbb2 DUP2
0xbb3 DUP2
0xbb4 MSTORE
0xbb5 PUSH1 0x20
0xbb7 DUP2
0xbb8 DUP2
0xbb9 MSTORE
0xbba PUSH1 0x40
0xbbc SWAP2
0xbbd DUP3
0xbbe SWAP1
0xbbf SHA3
0xbc0 DUP1
0xbc1 SLOAD
0xbc2 PUSH1 0xff
0xbc4 NOT
0xbc5 AND
0xbc6 PUSH1 0xff
0xbc8 DUP8
0xbc9 AND
0xbca SWAP1
0xbcb DUP2
0xbcc OR
0xbcd SWAP1
0xbce SWAP2
0xbcf SSTORE
0xbd0 DUP3
0xbd1 MLOAD
0xbd2 SWAP4
0xbd3 DUP5
0xbd4 MSTORE
0xbd5 SWAP1
0xbd6 DUP4
0xbd7 ADD
0xbd8 MSTORE
0xbd9 DUP1
0xbda MLOAD
0xbdb PUSH32 0x9b810ace296ded7f98c91fe8d22aa69c4ef152d64f1fbf1cfa9d6bb10627b300
0xbfc SWAP3
0xbfd DUP2
0xbfe SWAP1
0xbff SUB
0xc00 SWAP1
0xc01 SWAP2
0xc02 ADD
0xc03 SWAP1
0xc04 LOG1
0xc05 POP
0xc06 POP
0xc07 POP
0xc08 JUMP
---
0xba5: JUMPDEST 
0xba6: V958 = 0x1
0xba8: V959 = 0xa0
0xbaa: V960 = 0x2
0xbac: V961 = EXP 0x2 0xa0
0xbad: V962 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbaf: V963 = AND V235 0xffffffffffffffffffffffffffffffffffffffff
0xbb0: V964 = 0x0
0xbb4: M[0x0] = V963
0xbb5: V965 = 0x20
0xbb9: M[0x20] = 0x0
0xbba: V966 = 0x40
0xbbf: V967 = SHA3 0x0 0x40
0xbc1: V968 = S[V967]
0xbc2: V969 = 0xff
0xbc4: V970 = NOT 0xff
0xbc5: V971 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V968
0xbc6: V972 = 0xff
0xbc9: V973 = AND V239 0xff
0xbcc: V974 = OR V973 V971
0xbcf: S[V967] = V974
0xbd1: V975 = M[0x40]
0xbd4: M[V975] = V963
0xbd7: V976 = ADD V975 0x20
0xbd8: M[V976] = V973
0xbda: V977 = M[0x40]
0xbdb: V978 = 0x9b810ace296ded7f98c91fe8d22aa69c4ef152d64f1fbf1cfa9d6bb10627b300
0xbff: V979 = SUB V975 V977
0xc02: V980 = ADD 0x40 V979
0xc04: LOG V977 V980 0x9b810ace296ded7f98c91fe8d22aa69c4ef152d64f1fbf1cfa9d6bb10627b300
0xc08: JUMP 0x103
---
Entry stack: [V11, 0x103, V235, V239, 0x2]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0xc09
[0xc09:0xc1d]
---
Predecessors: [0x31c]
Successors: [0x331]
---
0xc09 JUMPDEST
0xc0a PUSH1 0x0
0xc0c PUSH1 0x20
0xc0e DUP2
0xc0f SWAP1
0xc10 MSTORE
0xc11 SWAP1
0xc12 DUP2
0xc13 MSTORE
0xc14 PUSH1 0x40
0xc16 SWAP1
0xc17 SHA3
0xc18 SLOAD
0xc19 PUSH1 0xff
0xc1b AND
0xc1c DUP2
0xc1d JUMP
---
0xc09: JUMPDEST 
0xc0a: V981 = 0x0
0xc0c: V982 = 0x20
0xc10: M[0x20] = 0x0
0xc13: M[0x0] = V253
0xc14: V983 = 0x40
0xc17: V984 = SHA3 0x0 0x40
0xc18: V985 = S[V984]
0xc19: V986 = 0xff
0xc1b: V987 = AND 0xff V985
0xc1d: JUMP 0x331
---
Entry stack: [V11, 0x331, V253]
Stack pops: 2
Stack additions: [S1, V987]
Exit stack: [V11, 0x331, V987]

================================

Block 0xc1e
[0xc1e:0xc23]
---
Predecessors: [0x353]
Successors: [0x14b]
---
0xc1e JUMPDEST
0xc1f PUSH1 0x5
0xc21 SLOAD
0xc22 DUP2
0xc23 JUMP
---
0xc1e: JUMPDEST 
0xc1f: V988 = 0x5
0xc21: V989 = S[0x5]
0xc23: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: [S0, V989]
Exit stack: [V11, 0x14b, V989]

================================

Block 0xc24
[0xc24:0xc29]
---
Predecessors: [0x368]
Successors: [0x14b]
---
0xc24 JUMPDEST
0xc25 PUSH1 0x8
0xc27 SLOAD
0xc28 DUP2
0xc29 JUMP
---
0xc24: JUMPDEST 
0xc25: V990 = 0x8
0xc27: V991 = S[0x8]
0xc29: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: [S0, V991]
Exit stack: [V11, 0x14b, V991]

================================

Block 0xc2a
[0xc2a:0xc37]
---
Predecessors: [0x3a5, 0x503]
Successors: [0xc38, 0xc39]
---
0xc2a JUMPDEST
0xc2b PUSH1 0x0
0xc2d DUP3
0xc2e DUP3
0xc2f ADD
0xc30 DUP4
0xc31 DUP2
0xc32 LT
0xc33 ISZERO
0xc34 PUSH2 0xc39
0xc37 JUMPI
---
0xc2a: JUMPDEST 
0xc2b: V992 = 0x0
0xc2f: V993 = ADD S0 S1
0xc32: V994 = LT V993 S1
0xc33: V995 = ISZERO V994
0xc34: V996 = 0xc39
0xc37: JUMPI 0xc39 V995
---
Entry stack: [V11, 0x103, S3, {0x3bc, 0x516}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V993]
Exit stack: [V11, 0x103, S3, {0x3bc, 0x516}, S1, S0, 0x0, V993]

================================

Block 0xc38
[0xc38:0xc38]
---
Predecessors: [0xc2a]
Successors: []
---
0xc38 INVALID
---
0xc38: INVALID 
---
Entry stack: [V11, 0x103, S5, {0x3bc, 0x516}, S3, S2, 0x0, V993]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S5, {0x3bc, 0x516}, S3, S2, 0x0, V993]

================================

Block 0xc39
[0xc39:0xc3c]
---
Predecessors: [0xc2a, 0xc67]
Successors: [0xc3d]
---
0xc39 JUMPDEST
0xc3a DUP1
0xc3b SWAP2
0xc3c POP
---
0xc39: JUMPDEST 
---
Entry stack: [V11, 0x103, S5, {0x3bc, 0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500, 0x516}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, 0x103, S5, {0x3bc, 0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500, 0x516}, S3, S2, S0, S0]

================================

Block 0xc3d
[0xc3d:0xc43]
---
Predecessors: [0xc39, 0xc4f]
Successors: [0x3bc, 0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500, 0x516]
---
0xc3d JUMPDEST
0xc3e POP
0xc3f SWAP3
0xc40 SWAP2
0xc41 POP
0xc42 POP
0xc43 JUMP
---
0xc3d: JUMPDEST 
0xc43: JUMP {0x3bc, 0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500, 0x516}
---
Entry stack: [V11, 0x103, S5, {0x3bc, 0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500, 0x516}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0x103, S5, S1]

================================

Block 0xc44
[0xc44:0xc4e]
---
Predecessors: [0x421, 0x430, 0x481, 0x4a0, 0x4f0]
Successors: [0xc4f, 0xc57]
---
0xc44 JUMPDEST
0xc45 PUSH1 0x0
0xc47 DUP1
0xc48 DUP4
0xc49 ISZERO
0xc4a ISZERO
0xc4b PUSH2 0xc57
0xc4e JUMPI
---
0xc44: JUMPDEST 
0xc45: V997 = 0x0
0xc49: V998 = ISZERO S1
0xc4a: V999 = ISZERO V998
0xc4b: V1000 = 0xc57
0xc4e: JUMPI 0xc57 V999
---
Entry stack: [V11, 0x103, S3, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x103, S3, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S1, S0, 0x0, 0x0]

================================

Block 0xc4f
[0xc4f:0xc56]
---
Predecessors: [0xc44]
Successors: [0xc3d]
---
0xc4f PUSH1 0x0
0xc51 SWAP2
0xc52 POP
0xc53 PUSH2 0xc3d
0xc56 JUMP
---
0xc4f: V1001 = 0x0
0xc53: V1002 = 0xc3d
0xc56: JUMP 0xc3d
---
Entry stack: [V11, 0x103, S5, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x103, S5, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S3, S2, 0x0, 0x0]

================================

Block 0xc57
[0xc57:0xc65]
---
Predecessors: [0xc44]
Successors: [0xc66, 0xc67]
---
0xc57 JUMPDEST
0xc58 POP
0xc59 DUP3
0xc5a DUP3
0xc5b MUL
0xc5c DUP3
0xc5d DUP5
0xc5e DUP3
0xc5f DUP2
0xc60 ISZERO
0xc61 ISZERO
0xc62 PUSH2 0xc67
0xc65 JUMPI
---
0xc57: JUMPDEST 
0xc5b: V1003 = MUL S2 S3
0xc60: V1004 = ISZERO S3
0xc61: V1005 = ISZERO V1004
0xc62: V1006 = 0xc67
0xc65: JUMPI 0xc67 V1005
---
Entry stack: [V11, 0x103, S5, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V1003, S2, S3, V1003]
Exit stack: [V11, 0x103, S5, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S3, S2, 0x0, V1003, S2, S3, V1003]

================================

Block 0xc66
[0xc66:0xc66]
---
Predecessors: [0xc57]
Successors: []
---
0xc66 INVALID
---
0xc66: INVALID 
---
Entry stack: [V11, 0x103, S8, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S6, S5, 0x0, V1003, S2, S1, V1003]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S8, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S6, S5, 0x0, V1003, S2, S1, V1003]

================================

Block 0xc67
[0xc67:0xc6d]
---
Predecessors: [0xc57]
Successors: [0xc39, 0xc6e]
---
0xc67 JUMPDEST
0xc68 DIV
0xc69 EQ
0xc6a PUSH2 0xc39
0xc6d JUMPI
---
0xc67: JUMPDEST 
0xc68: V1007 = DIV V1003 S1
0xc69: V1008 = EQ V1007 S2
0xc6a: V1009 = 0xc39
0xc6d: JUMPI 0xc39 V1008
---
Entry stack: [V11, 0x103, S8, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S6, S5, 0x0, V1003, S2, S1, V1003]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x103, S8, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S6, S5, 0x0, V1003]

================================

Block 0xc6e
[0xc6e:0xc6e]
---
Predecessors: [0xc67]
Successors: []
---
0xc6e INVALID
---
0xc6e: INVALID 
---
Entry stack: [V11, 0x103, S5, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S5, {0x430, 0x443, 0x481, 0x4a0, 0x4b3, 0x500}, S3, S2, 0x0, S0]

================================

Block 0xc6f
[0xc6f:0xc7b]
---
Predecessors: [0x443, 0x4b3, 0x4c9]
Successors: [0xc7c, 0xc7d]
---
0xc6f JUMPDEST
0xc70 PUSH1 0x0
0xc72 DUP1
0xc73 DUP3
0xc74 DUP5
0xc75 DUP2
0xc76 ISZERO
0xc77 ISZERO
0xc78 PUSH2 0xc7d
0xc7b JUMPI
---
0xc6f: JUMPDEST 
0xc70: V1010 = 0x0
0xc76: V1011 = ISZERO {0x64, 0x2540be400}
0xc77: V1012 = ISZERO V1011
0xc78: V1013 = 0xc7d
0xc7b: JUMPI 0xc7d V1012
---
Entry stack: [V11, 0x103, S3, {0x456, 0x4c6, 0x4de}, S1, {0x64, 0x2540be400}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, 0x103, S3, {0x456, 0x4c6, 0x4de}, S1, {0x64, 0x2540be400}, 0x0, 0x0, {0x64, 0x2540be400}, S1]

================================

Block 0xc7c
[0xc7c:0xc7c]
---
Predecessors: [0xc6f]
Successors: []
---
0xc7c INVALID
---
0xc7c: INVALID 
---
Entry stack: [V11, 0x103, S7, {0x456, 0x4c6, 0x4de}, S5, {0x64, 0x2540be400}, 0x0, 0x0, {0x64, 0x2540be400}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S7, {0x456, 0x4c6, 0x4de}, S5, {0x64, 0x2540be400}, 0x0, 0x0, {0x64, 0x2540be400}, S0]

================================

Block 0xc7d
[0xc7d:0xc85]
---
Predecessors: [0xc6f]
Successors: [0x456, 0x4c6, 0x4de]
---
0xc7d JUMPDEST
0xc7e DIV
0xc7f SWAP5
0xc80 SWAP4
0xc81 POP
0xc82 POP
0xc83 POP
0xc84 POP
0xc85 JUMP
---
0xc7d: JUMPDEST 
0xc7e: V1014 = DIV S0 {0x64, 0x2540be400}
0xc85: JUMP {0x456, 0x4c6, 0x4de}
---
Entry stack: [V11, 0x103, S7, {0x456, 0x4c6, 0x4de}, S5, {0x64, 0x2540be400}, 0x0, 0x0, {0x64, 0x2540be400}, S0]
Stack pops: 7
Stack additions: [V1014]
Exit stack: [V11, 0x103, S7, V1014]

================================

Block 0xc86
[0xc86:0xcb1]
---
Predecessors: []
Successors: []
---
0xc86 STOP
0xc87 LOG1
0xc88 PUSH6 0x627a7a723058
0xc8f SHA3
0xc90 ISZERO
0xc91 MISSING 0xd7
0xc92 DUP12
0xc93 MISSING 0x2e
0xc94 SIGNEXTEND
0xc95 MISSING 0xc5
0xc96 LOG1
0xc97 MISSING 0xd3
0xc98 MISSING 0xd0
0xc99 PUSH21 0xc6a13eda51f6cb8f3f5af7f5eb2d66a0719d38a87c
0xcaf SUB
0xcb0 STOP
0xcb1 MISSING 0x29
---
0xc86: STOP 
0xc87: LOG S0 S1 S2
0xc88: V1015 = 0x627a7a723058
0xc8f: V1016 = SHA3 0x627a7a723058 S3
0xc90: V1017 = ISZERO V1016
0xc91: MISSING 0xd7
0xc93: MISSING 0x2e
0xc94: V1018 = SIGNEXTEND S0 S1
0xc95: MISSING 0xc5
0xc96: LOG S0 S1 S2
0xc97: MISSING 0xd3
0xc98: MISSING 0xd0
0xc99: V1019 = 0xc6a13eda51f6cb8f3f5af7f5eb2d66a0719d38a87c
0xcaf: V1020 = SUB 0xc6a13eda51f6cb8f3f5af7f5eb2d66a0719d38a87c S0
0xcb0: STOP 
0xcb1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1017, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V1018, V1020]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x105
Exit block: 0x11a
Body: 0x105, 0x10d, 0x111, 0x11a, 0x67d

Function 1:
Public function signature: 0x244b34c5
Entry block: 0x136
Exit block: 0x14b
Body: 0x136, 0x13e, 0x142, 0x14b, 0x68c

Function 2:
Public function signature: 0x38771242
Entry block: 0x15d
Exit block: 0x14b
Body: 0x14b, 0x15d, 0x165, 0x169, 0x692

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x172
Exit block: 0x11a
Body: 0x11a, 0x172, 0x17a, 0x17e, 0x698

Function 4:
Public function signature: 0x4c801cee
Entry block: 0x187
Exit block: 0x103
Body: 0x103, 0x187, 0x18f, 0x193, 0x6a7, 0x6c5, 0x6c9, 0x726, 0x72a, 0x735, 0x73e, 0x750, 0x754, 0x7be, 0x7c2, 0x7cd, 0x7d6, 0x7e8, 0x7ec

Function 5:
Public function signature: 0x54fd4d50
Entry block: 0x1a8
Exit block: 0x224
Body: 0x1a8, 0x1b0, 0x1b4, 0x1bd, 0x1df, 0x1e8, 0x1f7, 0x20b, 0x224, 0x7f3, 0x833, 0x83b, 0x84e, 0x85c, 0x870, 0x879

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x232
Exit block: 0x11a
Body: 0x11a, 0x232, 0x23a, 0x23e, 0x881

Function 7:
Public function signature: 0x78e97925
Entry block: 0x247
Exit block: 0x14b
Body: 0x14b, 0x247, 0x24f, 0x253, 0x890

Function 8:
Public function signature: 0x8007604b
Entry block: 0x25c
Exit block: 0x14b
Body: 0x14b, 0x25c, 0x264, 0x268, 0x896

Function 9:
Public function signature: 0x86f32586
Entry block: 0x271
Exit block: 0x103
Body: 0x103, 0x271, 0x279, 0x27d

Function 10:
Public function signature: 0x9a9e3fd8
Entry block: 0x286
Exit block: 0x28e
Body: 0x103, 0x286, 0x28e, 0x292

Function 11:
Public function signature: 0xc19d93fb
Entry block: 0x29b
Exit block: 0x2c0
Body: 0x29b, 0x2a3, 0x2a7, 0x2b0, 0x2bf, 0x2c0, 0xb5f

Function 12:
Public function signature: 0xc5c4744c
Entry block: 0x2d4
Exit block: 0x14b
Body: 0x14b, 0x2d4, 0x2dc, 0x2e0, 0xb68

Function 13:
Public function signature: 0xc9c80a56
Entry block: 0x2e9
Exit block: 0x103
Body: 0x103, 0x2e9, 0x2f1, 0x2f5, 0xb6e, 0xb8c, 0xb90, 0xba1, 0xba5

Function 14:
Public function signature: 0xd41b6db6
Entry block: 0x310
Exit block: 0x331
Body: 0x310, 0x318, 0x31c, 0x331, 0xc09

Function 15:
Public function signature: 0xd7bb99ba
Entry block: 0xfb
Exit block: 0xc6e
Body: 0xfb, 0x371, 0x385, 0x386, 0x38d, 0x391, 0x3a1, 0x3a5, 0x3bc, 0x412, 0xc6e

Function 16:
Public function signature: 0xe93e7b26
Entry block: 0x347
Exit block: 0x14b
Body: 0x14b, 0x347, 0x34f, 0x353, 0xc1e

Function 17:
Public function signature: 0xefca2eed
Entry block: 0x35c
Exit block: 0x14b
Body: 0x14b, 0x35c, 0x364, 0x368, 0xc24

Function 18:
Public fallback function
Entry block: 0xfb
Exit block: 0xc6e
Body: 0xfb, 0x371, 0x385, 0x386, 0x38d, 0x391, 0x3a1, 0x3a5, 0x3bc, 0x412, 0xc6e

Function 19:
Private function
Entry block: 0x421
Exit block: 0xc3d
Body: 0x3bc, 0x413, 0x41a, 0x421, 0x430, 0x443, 0x443, 0x443, 0x456, 0x45d, 0x46f, 0x476, 0x481, 0x494, 0x4a0, 0x4b3, 0x4b3, 0x4c6, 0x4c9, 0x4c9, 0x4de, 0x4f0, 0x500, 0x503, 0x503, 0xc39, 0xc3d, 0xc44, 0xc4f, 0xc57, 0xc67

Function 20:
Private function
Entry block: 0xc2a
Exit block: 0xc3d
Body: 0x430, 0x443, 0x443, 0x443, 0x456, 0x481, 0x4a0, 0x4b3, 0x4b3, 0x4c6, 0x4c9, 0x4c9, 0x4de, 0x4f0, 0x500, 0x503, 0x503, 0x516, 0xc2a, 0xc39, 0xc3d

Function 21:
Private function
Entry block: 0x89c
Exit block: 0x984
Body: 0x89c, 0x8a9, 0x8bc, 0x8bf, 0x8c5, 0x913, 0x918, 0x92b, 0x933, 0x93a, 0x940, 0x950, 0x962, 0x96a, 0x971, 0x977, 0x984

Function 22:
Private function
Entry block: 0xc44
Exit block: 0xc3d
Body: 0x3bc, 0x413, 0x41a, 0x430, 0x430, 0x443, 0x443, 0x443, 0x443, 0x456, 0x45d, 0x46f, 0x476, 0x481, 0x481, 0x494, 0x4a0, 0x4a0, 0x4b3, 0x4b3, 0x4c6, 0x4c9, 0x4c9, 0x4de, 0x4f0, 0x500, 0x503, 0x503, 0xc39, 0xc3d, 0xc44, 0xc4f, 0xc57, 0xc67

Function 23:
Private function
Entry block: 0xc6f
Exit block: 0xc7d
Body: 0xc6f, 0xc7d

Function 24:
Private function
Entry block: 0x986
Exit block: 0xb1c
Body: 0x986, 0x99b, 0x9a5, 0xa0b, 0xa1f, 0xa35, 0xaab, 0xabf, 0xad5, 0xae2, 0xb1c

