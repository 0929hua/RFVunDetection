Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xbe]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2d05d3f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xbe
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2d05d3f
0x3b: V13 = EQ V11 0x2d05d3f
0x3c: V14 = 0xbe
0x3f: JUMPI 0xbe V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xef]
---
0x40 DUP1
0x41 PUSH4 0x370158ea
0x46 EQ
0x47 PUSH2 0xef
0x4a JUMPI
---
0x41: V15 = 0x370158ea
0x46: V16 = EQ 0x370158ea V11
0x47: V17 = 0xef
0x4a: JUMPI 0xef V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x13b]
---
0x4b DUP1
0x4c PUSH4 0x3ccfd60b
0x51 EQ
0x52 PUSH2 0x13b
0x55 JUMPI
---
0x4c: V18 = 0x3ccfd60b
0x51: V19 = EQ 0x3ccfd60b V11
0x52: V20 = 0x13b
0x55: JUMPI 0x13b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x152]
---
0x56 DUP1
0x57 PUSH4 0x49df728c
0x5c EQ
0x5d PUSH2 0x152
0x60 JUMPI
---
0x57: V21 = 0x49df728c
0x5c: V22 = EQ 0x49df728c V11
0x5d: V23 = 0x152
0x60: JUMPI 0x152 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x173]
---
0x61 DUP1
0x62 PUSH4 0x69ac5721
0x67 EQ
0x68 PUSH2 0x173
0x6b JUMPI
---
0x62: V24 = 0x69ac5721
0x67: V25 = EQ 0x69ac5721 V11
0x68: V26 = 0x173
0x6b: JUMPI 0x173 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x19a]
---
0x6c DUP1
0x6d PUSH4 0x8da5cb5b
0x72 EQ
0x73 PUSH2 0x19a
0x76 JUMPI
---
0x6d: V27 = 0x8da5cb5b
0x72: V28 = EQ 0x8da5cb5b V11
0x73: V29 = 0x19a
0x76: JUMPI 0x19a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1af]
---
0x77 DUP1
0x78 PUSH4 0xcf09e0d0
0x7d EQ
0x7e PUSH2 0x1af
0x81 JUMPI
---
0x78: V30 = 0xcf09e0d0
0x7d: V31 = EQ 0xcf09e0d0 V11
0x7e: V32 = 0x1af
0x81: JUMPI 0x1af V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0xbd]
---
Predecessors: [0x0, 0x77]
Successors: []
---
0x82 JUMPDEST
0x83 PUSH1 0x40
0x85 DUP1
0x86 MLOAD
0x87 CALLER
0x88 DUP2
0x89 MSTORE
0x8a CALLVALUE
0x8b PUSH1 0x20
0x8d DUP3
0x8e ADD
0x8f MSTORE
0x90 DUP2
0x91 MLOAD
0x92 PUSH32 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0xb3 SWAP3
0xb4 SWAP2
0xb5 DUP2
0xb6 SWAP1
0xb7 SUB
0xb8 SWAP1
0xb9 SWAP2
0xba ADD
0xbb SWAP1
0xbc LOG1
0xbd STOP
---
0x82: JUMPDEST 
0x83: V33 = 0x40
0x86: V34 = M[0x40]
0x87: V35 = CALLER
0x89: M[V34] = V35
0x8a: V36 = CALLVALUE
0x8b: V37 = 0x20
0x8e: V38 = ADD V34 0x20
0x8f: M[V38] = V36
0x91: V39 = M[0x40]
0x92: V40 = 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0xb7: V41 = SUB V34 V39
0xba: V42 = ADD 0x40 V41
0xbc: LOG V39 V42 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0xbd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0xd]
Successors: [0xc6, 0xca]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 DUP1
0xc1 ISZERO
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xbe: JUMPDEST 
0xbf: V43 = CALLVALUE
0xc1: V44 = ISZERO V43
0xc2: V45 = 0xca
0xc5: JUMPI 0xca V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xbe]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V46 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xca
[0xca:0xd2]
---
Predecessors: [0xbe]
Successors: [0x1c4]
---
0xca JUMPDEST
0xcb POP
0xcc PUSH2 0xd3
0xcf PUSH2 0x1c4
0xd2 JUMP
---
0xca: JUMPDEST 
0xcc: V47 = 0xd3
0xcf: V48 = 0x1c4
0xd2: JUMP 0x1c4
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xd3]
Exit stack: [V11, 0xd3]

================================

Block 0xd3
[0xd3:0xee]
---
Predecessors: [0x1c4, 0x435]
Successors: []
---
0xd3 JUMPDEST
0xd4 PUSH1 0x40
0xd6 DUP1
0xd7 MLOAD
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 SWAP1
0xe1 SWAP3
0xe2 AND
0xe3 DUP3
0xe4 MSTORE
0xe5 MLOAD
0xe6 SWAP1
0xe7 DUP2
0xe8 SWAP1
0xe9 SUB
0xea PUSH1 0x20
0xec ADD
0xed SWAP1
0xee RETURN
---
0xd3: JUMPDEST 
0xd4: V49 = 0x40
0xd7: V50 = M[0x40]
0xd8: V51 = 0x1
0xda: V52 = 0xa0
0xdc: V53 = 0x2
0xde: V54 = EXP 0x2 0xa0
0xdf: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V56 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe4: M[V50] = V56
0xe5: V57 = M[0x40]
0xe9: V58 = SUB V50 V57
0xea: V59 = 0x20
0xec: V60 = ADD 0x20 V58
0xee: RETURN V57 V60
---
Entry stack: [V11, 0xd3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd3]

================================

Block 0xef
[0xef:0xf6]
---
Predecessors: [0x40]
Successors: [0xf7, 0xfb]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 DUP1
0xf2 ISZERO
0xf3 PUSH2 0xfb
0xf6 JUMPI
---
0xef: JUMPDEST 
0xf0: V61 = CALLVALUE
0xf2: V62 = ISZERO V61
0xf3: V63 = 0xfb
0xf6: JUMPI 0xfb V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xf7
[0xf7:0xfa]
---
Predecessors: [0xef]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf7: V64 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0xfb
[0xfb:0x103]
---
Predecessors: [0xef]
Successors: [0x1d3]
---
0xfb JUMPDEST
0xfc POP
0xfd PUSH2 0x104
0x100 PUSH2 0x1d3
0x103 JUMP
---
0xfb: JUMPDEST 
0xfd: V65 = 0x104
0x100: V66 = 0x1d3
0x103: JUMP 0x1d3
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0x104]
Exit stack: [V11, 0x104]

================================

Block 0x104
[0x104:0x13a]
---
Predecessors: [0x1d3]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 DUP1
0x108 MLOAD
0x109 PUSH1 0x1
0x10b PUSH1 0xa0
0x10d PUSH1 0x2
0x10f EXP
0x110 SUB
0x111 SWAP7
0x112 DUP8
0x113 AND
0x114 DUP2
0x115 MSTORE
0x116 SWAP5
0x117 SWAP1
0x118 SWAP6
0x119 AND
0x11a PUSH1 0x20
0x11c DUP6
0x11d ADD
0x11e MSTORE
0x11f DUP4
0x120 DUP6
0x121 ADD
0x122 SWAP3
0x123 SWAP1
0x124 SWAP3
0x125 MSTORE
0x126 PUSH1 0x60
0x128 DUP4
0x129 ADD
0x12a MSTORE
0x12b PUSH1 0x80
0x12d DUP3
0x12e ADD
0x12f MSTORE
0x130 SWAP1
0x131 MLOAD
0x132 SWAP1
0x133 DUP2
0x134 SWAP1
0x135 SUB
0x136 PUSH1 0xa0
0x138 ADD
0x139 SWAP1
0x13a RETURN
---
0x104: JUMPDEST 
0x105: V67 = 0x40
0x108: V68 = M[0x40]
0x109: V69 = 0x1
0x10b: V70 = 0xa0
0x10d: V71 = 0x2
0x10f: V72 = EXP 0x2 0xa0
0x110: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0x113: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x115: M[V68] = V74
0x119: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x11a: V76 = 0x20
0x11d: V77 = ADD V68 0x20
0x11e: M[V77] = V75
0x121: V78 = ADD 0x40 V68
0x125: M[V78] = V144
0x126: V79 = 0x60
0x129: V80 = ADD V68 0x60
0x12a: M[V80] = V146
0x12b: V81 = 0x80
0x12e: V82 = ADD V68 0x80
0x12f: M[V82] = V155
0x131: V83 = M[0x40]
0x135: V84 = SUB V68 V83
0x136: V85 = 0xa0
0x138: V86 = ADD 0xa0 V84
0x13a: RETURN V83 V86
---
Entry stack: [V11, V152, V153, V144, V146, V155]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x13b
[0x13b:0x142]
---
Predecessors: [0x4b]
Successors: [0x143, 0x147]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d DUP1
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x13b: JUMPDEST 
0x13c: V87 = CALLVALUE
0x13e: V88 = ISZERO V87
0x13f: V89 = 0x147
0x142: JUMPI 0x147 V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x13b]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V90 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V11, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V87]

================================

Block 0x147
[0x147:0x14f]
---
Predecessors: [0x13b]
Successors: [0x1f8]
---
0x147 JUMPDEST
0x148 POP
0x149 PUSH2 0x150
0x14c PUSH2 0x1f8
0x14f JUMP
---
0x147: JUMPDEST 
0x149: V91 = 0x150
0x14c: V92 = 0x1f8
0x14f: JUMP 0x1f8
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: [0x150]
Exit stack: [V11, 0x150]

================================

Block 0x150
[0x150:0x151]
---
Predecessors: [0x24b, 0x3e0]
Successors: []
---
0x150 JUMPDEST
0x151 STOP
---
0x150: JUMPDEST 
0x151: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x152
[0x152:0x159]
---
Predecessors: [0x56]
Successors: [0x15a, 0x15e]
---
0x152 JUMPDEST
0x153 CALLVALUE
0x154 DUP1
0x155 ISZERO
0x156 PUSH2 0x15e
0x159 JUMPI
---
0x152: JUMPDEST 
0x153: V93 = CALLVALUE
0x155: V94 = ISZERO V93
0x156: V95 = 0x15e
0x159: JUMPI 0x15e V94
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V11, V93]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0x152]
Successors: []
---
0x15a PUSH1 0x0
0x15c DUP1
0x15d REVERT
---
0x15a: V96 = 0x0
0x15d: REVERT 0x0 0x0
---
Entry stack: [V11, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V93]

================================

Block 0x15e
[0x15e:0x172]
---
Predecessors: [0x152]
Successors: [0x289]
---
0x15e JUMPDEST
0x15f POP
0x160 PUSH2 0x150
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b PUSH1 0x4
0x16d CALLDATALOAD
0x16e AND
0x16f PUSH2 0x289
0x172 JUMP
---
0x15e: JUMPDEST 
0x160: V97 = 0x150
0x163: V98 = 0x1
0x165: V99 = 0xa0
0x167: V100 = 0x2
0x169: V101 = EXP 0x2 0xa0
0x16a: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V103 = 0x4
0x16d: V104 = CALLDATALOAD 0x4
0x16e: V105 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V106 = 0x289
0x172: JUMP 0x289
---
Entry stack: [V11, V93]
Stack pops: 1
Stack additions: [0x150, V105]
Exit stack: [V11, 0x150, V105]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x61]
Successors: [0x17b, 0x17f]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 DUP1
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x173: JUMPDEST 
0x174: V107 = CALLVALUE
0x176: V108 = ISZERO V107
0x177: V109 = 0x17f
0x17a: JUMPI 0x17f V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V11, V107]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x173]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V110 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V11, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V107]

================================

Block 0x17f
[0x17f:0x187]
---
Predecessors: [0x173]
Successors: [0x42f]
---
0x17f JUMPDEST
0x180 POP
0x181 PUSH2 0x188
0x184 PUSH2 0x42f
0x187 JUMP
---
0x17f: JUMPDEST 
0x181: V111 = 0x188
0x184: V112 = 0x42f
0x187: JUMP 0x42f
---
Entry stack: [V11, V107]
Stack pops: 1
Stack additions: [0x188]
Exit stack: [V11, 0x188]

================================

Block 0x188
[0x188:0x199]
---
Predecessors: [0x42f, 0x444]
Successors: []
---
0x188 JUMPDEST
0x189 PUSH1 0x40
0x18b DUP1
0x18c MLOAD
0x18d SWAP2
0x18e DUP3
0x18f MSTORE
0x190 MLOAD
0x191 SWAP1
0x192 DUP2
0x193 SWAP1
0x194 SUB
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP1
0x199 RETURN
---
0x188: JUMPDEST 
0x189: V113 = 0x40
0x18c: V114 = M[0x40]
0x18f: M[V114] = S0
0x190: V115 = M[0x40]
0x194: V116 = SUB V114 V115
0x195: V117 = 0x20
0x197: V118 = ADD 0x20 V116
0x199: RETURN V115 V118
---
Entry stack: [V11, 0x188, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x188]

================================

Block 0x19a
[0x19a:0x1a1]
---
Predecessors: [0x6c]
Successors: [0x1a2, 0x1a6]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c DUP1
0x19d ISZERO
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x19a: JUMPDEST 
0x19b: V119 = CALLVALUE
0x19d: V120 = ISZERO V119
0x19e: V121 = 0x1a6
0x1a1: JUMPI 0x1a6 V120
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V11, V119]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x19a]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V122 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V11, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119]

================================

Block 0x1a6
[0x1a6:0x1ae]
---
Predecessors: [0x19a]
Successors: [0x435]
---
0x1a6 JUMPDEST
0x1a7 POP
0x1a8 PUSH2 0xd3
0x1ab PUSH2 0x435
0x1ae JUMP
---
0x1a6: JUMPDEST 
0x1a8: V123 = 0xd3
0x1ab: V124 = 0x435
0x1ae: JUMP 0x435
---
Entry stack: [V11, V119]
Stack pops: 1
Stack additions: [0xd3]
Exit stack: [V11, 0xd3]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x77]
Successors: [0x1b7, 0x1bb]
---
0x1af JUMPDEST
0x1b0 CALLVALUE
0x1b1 DUP1
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V125 = CALLVALUE
0x1b2: V126 = ISZERO V125
0x1b3: V127 = 0x1bb
0x1b6: JUMPI 0x1bb V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V11, V125]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0x1af]
Successors: []
---
0x1b7 PUSH1 0x0
0x1b9 DUP1
0x1ba REVERT
---
0x1b7: V128 = 0x0
0x1ba: REVERT 0x0 0x0
---
Entry stack: [V11, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125]

================================

Block 0x1bb
[0x1bb:0x1c3]
---
Predecessors: [0x1af]
Successors: [0x444]
---
0x1bb JUMPDEST
0x1bc POP
0x1bd PUSH2 0x188
0x1c0 PUSH2 0x444
0x1c3 JUMP
---
0x1bb: JUMPDEST 
0x1bd: V129 = 0x188
0x1c0: V130 = 0x444
0x1c3: JUMP 0x444
---
Entry stack: [V11, V125]
Stack pops: 1
Stack additions: [0x188]
Exit stack: [V11, 0x188]

================================

Block 0x1c4
[0x1c4:0x1d2]
---
Predecessors: [0xca]
Successors: [0xd3]
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x0
0x1c7 SLOAD
0x1c8 PUSH1 0x1
0x1ca PUSH1 0xa0
0x1cc PUSH1 0x2
0x1ce EXP
0x1cf SUB
0x1d0 AND
0x1d1 DUP2
0x1d2 JUMP
---
0x1c4: JUMPDEST 
0x1c5: V131 = 0x0
0x1c7: V132 = S[0x0]
0x1c8: V133 = 0x1
0x1ca: V134 = 0xa0
0x1cc: V135 = 0x2
0x1ce: V136 = EXP 0x2 0xa0
0x1cf: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x1d2: JUMP 0xd3
---
Entry stack: [V11, 0xd3]
Stack pops: 1
Stack additions: [S0, V138]
Exit stack: [V11, 0xd3, V138]

================================

Block 0x1d3
[0x1d3:0x1f7]
---
Predecessors: [0xfb]
Successors: [0x104]
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x0
0x1d6 SLOAD
0x1d7 PUSH1 0x1
0x1d9 SLOAD
0x1da PUSH1 0x2
0x1dc SLOAD
0x1dd PUSH1 0x3
0x1df SLOAD
0x1e0 PUSH1 0x1
0x1e2 PUSH1 0xa0
0x1e4 PUSH1 0x2
0x1e6 EXP
0x1e7 SUB
0x1e8 SWAP4
0x1e9 DUP5
0x1ea AND
0x1eb SWAP5
0x1ec SWAP4
0x1ed SWAP1
0x1ee SWAP3
0x1ef AND
0x1f0 SWAP3
0x1f1 SWAP1
0x1f2 SWAP2
0x1f3 SWAP1
0x1f4 ADDRESS
0x1f5 BALANCE
0x1f6 SWAP1
0x1f7 JUMP
---
0x1d3: JUMPDEST 
0x1d4: V139 = 0x0
0x1d6: V140 = S[0x0]
0x1d7: V141 = 0x1
0x1d9: V142 = S[0x1]
0x1da: V143 = 0x2
0x1dc: V144 = S[0x2]
0x1dd: V145 = 0x3
0x1df: V146 = S[0x3]
0x1e0: V147 = 0x1
0x1e2: V148 = 0xa0
0x1e4: V149 = 0x2
0x1e6: V150 = EXP 0x2 0xa0
0x1e7: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1ef: V153 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V154 = ADDRESS
0x1f5: V155 = BALANCE V154
0x1f7: JUMP 0x104
---
Entry stack: [V11, 0x104]
Stack pops: 1
Stack additions: [V152, V153, V144, V146, V155]
Exit stack: [V11, V152, V153, V144, V146, V155]

================================

Block 0x1f8
[0x1f8:0x20a]
---
Predecessors: [0x147]
Successors: [0x20b, 0x20f]
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x1
0x1fb SLOAD
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 AND
0x205 CALLER
0x206 EQ
0x207 PUSH2 0x20f
0x20a JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V156 = 0x1
0x1fb: V157 = S[0x1]
0x1fc: V158 = 0x1
0x1fe: V159 = 0xa0
0x200: V160 = 0x2
0x202: V161 = EXP 0x2 0xa0
0x203: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x204: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x205: V164 = CALLER
0x206: V165 = EQ V164 V163
0x207: V166 = 0x20f
0x20a: JUMPI 0x20f V165
---
Entry stack: [V11, 0x150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150]

================================

Block 0x20b
[0x20b:0x20e]
---
Predecessors: [0x1f8]
Successors: []
---
0x20b PUSH1 0x0
0x20d DUP1
0x20e REVERT
---
0x20b: V167 = 0x0
0x20e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150]

================================

Block 0x20f
[0x20f:0x219]
---
Predecessors: [0x1f8]
Successors: [0x21a, 0x21e]
---
0x20f JUMPDEST
0x210 PUSH1 0x2
0x212 SLOAD
0x213 TIMESTAMP
0x214 LT
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x20f: JUMPDEST 
0x210: V168 = 0x2
0x212: V169 = S[0x2]
0x213: V170 = TIMESTAMP
0x214: V171 = LT V170 V169
0x215: V172 = ISZERO V171
0x216: V173 = 0x21e
0x219: JUMPI 0x21e V172
---
Entry stack: [V11, 0x150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x20f]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V174 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150]

================================

Block 0x21e
[0x21e:0x241]
---
Predecessors: [0x20f]
Successors: [0x242, 0x24b]
---
0x21e JUMPDEST
0x21f PUSH1 0x40
0x221 MLOAD
0x222 CALLER
0x223 SWAP1
0x224 ADDRESS
0x225 BALANCE
0x226 DUP1
0x227 ISZERO
0x228 PUSH2 0x8fc
0x22b MUL
0x22c SWAP2
0x22d PUSH1 0x0
0x22f DUP2
0x230 DUP2
0x231 DUP2
0x232 DUP6
0x233 DUP9
0x234 DUP9
0x235 CALL
0x236 SWAP4
0x237 POP
0x238 POP
0x239 POP
0x23a POP
0x23b ISZERO
0x23c DUP1
0x23d ISZERO
0x23e PUSH2 0x24b
0x241 JUMPI
---
0x21e: JUMPDEST 
0x21f: V175 = 0x40
0x221: V176 = M[0x40]
0x222: V177 = CALLER
0x224: V178 = ADDRESS
0x225: V179 = BALANCE V178
0x227: V180 = ISZERO V179
0x228: V181 = 0x8fc
0x22b: V182 = MUL 0x8fc V180
0x22d: V183 = 0x0
0x235: V184 = CALL V182 V177 V179 V176 0x0 V176 0x0
0x23b: V185 = ISZERO V184
0x23d: V186 = ISZERO V185
0x23e: V187 = 0x24b
0x241: JUMPI 0x24b V186
---
Entry stack: [V11, 0x150]
Stack pops: 0
Stack additions: [V185]
Exit stack: [V11, 0x150, V185]

================================

Block 0x242
[0x242:0x24a]
---
Predecessors: [0x21e]
Successors: []
---
0x242 RETURNDATASIZE
0x243 PUSH1 0x0
0x245 DUP1
0x246 RETURNDATACOPY
0x247 RETURNDATASIZE
0x248 PUSH1 0x0
0x24a REVERT
---
0x242: V188 = RETURNDATASIZE
0x243: V189 = 0x0
0x246: RETURNDATACOPY 0x0 0x0 V188
0x247: V190 = RETURNDATASIZE
0x248: V191 = 0x0
0x24a: REVERT 0x0 V190
---
Entry stack: [V11, 0x150, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V185]

================================

Block 0x24b
[0x24b:0x288]
---
Predecessors: [0x21e]
Successors: [0x150]
---
0x24b JUMPDEST
0x24c POP
0x24d PUSH1 0x40
0x24f DUP1
0x250 MLOAD
0x251 CALLER
0x252 DUP2
0x253 MSTORE
0x254 ADDRESS
0x255 BALANCE
0x256 PUSH1 0x20
0x258 DUP3
0x259 ADD
0x25a MSTORE
0x25b DUP2
0x25c MLOAD
0x25d PUSH32 0xb244b9a17ad633c6e83b7983ee04320484956a68ddbe96a0b70dfca1cf19d723
0x27e SWAP3
0x27f SWAP2
0x280 DUP2
0x281 SWAP1
0x282 SUB
0x283 SWAP1
0x284 SWAP2
0x285 ADD
0x286 SWAP1
0x287 LOG1
0x288 JUMP
---
0x24b: JUMPDEST 
0x24d: V192 = 0x40
0x250: V193 = M[0x40]
0x251: V194 = CALLER
0x253: M[V193] = V194
0x254: V195 = ADDRESS
0x255: V196 = BALANCE V195
0x256: V197 = 0x20
0x259: V198 = ADD V193 0x20
0x25a: M[V198] = V196
0x25c: V199 = M[0x40]
0x25d: V200 = 0xb244b9a17ad633c6e83b7983ee04320484956a68ddbe96a0b70dfca1cf19d723
0x282: V201 = SUB V193 V199
0x285: V202 = ADD 0x40 V201
0x287: LOG V199 V202 0xb244b9a17ad633c6e83b7983ee04320484956a68ddbe96a0b70dfca1cf19d723
0x288: JUMP 0x150
---
Entry stack: [V11, 0x150, V185]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x289
[0x289:0x2a0]
---
Predecessors: [0x15e]
Successors: [0x2a1, 0x2a5]
---
0x289 JUMPDEST
0x28a PUSH1 0x1
0x28c SLOAD
0x28d PUSH1 0x0
0x28f SWAP1
0x290 DUP2
0x291 SWAP1
0x292 PUSH1 0x1
0x294 PUSH1 0xa0
0x296 PUSH1 0x2
0x298 EXP
0x299 SUB
0x29a AND
0x29b CALLER
0x29c EQ
0x29d PUSH2 0x2a5
0x2a0 JUMPI
---
0x289: JUMPDEST 
0x28a: V203 = 0x1
0x28c: V204 = S[0x1]
0x28d: V205 = 0x0
0x292: V206 = 0x1
0x294: V207 = 0xa0
0x296: V208 = 0x2
0x298: V209 = EXP 0x2 0xa0
0x299: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29a: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x29b: V212 = CALLER
0x29c: V213 = EQ V212 V211
0x29d: V214 = 0x2a5
0x2a0: JUMPI 0x2a5 V213
---
Entry stack: [V11, 0x150, V105]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x150, V105, 0x0, 0x0]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x289]
Successors: []
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
---
0x2a1: V215 = 0x0
0x2a4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x150, V105, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V105, 0x0, 0x0]

================================

Block 0x2a5
[0x2a5:0x2af]
---
Predecessors: [0x289]
Successors: [0x2b0, 0x2b4]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x2
0x2a8 SLOAD
0x2a9 TIMESTAMP
0x2aa LT
0x2ab ISZERO
0x2ac PUSH2 0x2b4
0x2af JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V216 = 0x2
0x2a8: V217 = S[0x2]
0x2a9: V218 = TIMESTAMP
0x2aa: V219 = LT V218 V217
0x2ab: V220 = ISZERO V219
0x2ac: V221 = 0x2b4
0x2af: JUMPI 0x2b4 V220
---
Entry stack: [V11, 0x150, V105, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V105, 0x0, 0x0]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x2a5]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
---
0x2b0: V222 = 0x0
0x2b3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x150, V105, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V105, 0x0, 0x0]

================================

Block 0x2b4
[0x2b4:0x313]
---
Predecessors: [0x2a5]
Successors: [0x314, 0x318]
---
0x2b4 JUMPDEST
0x2b5 PUSH1 0x40
0x2b7 DUP1
0x2b8 MLOAD
0x2b9 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2da DUP2
0x2db MSTORE
0x2dc ADDRESS
0x2dd PUSH1 0x4
0x2df DUP3
0x2e0 ADD
0x2e1 MSTORE
0x2e2 SWAP1
0x2e3 MLOAD
0x2e4 DUP5
0x2e5 SWAP4
0x2e6 POP
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0xa0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee SUB
0x2ef DUP5
0x2f0 AND
0x2f1 SWAP2
0x2f2 PUSH4 0x70a08231
0x2f7 SWAP2
0x2f8 PUSH1 0x24
0x2fa DUP1
0x2fb DUP4
0x2fc ADD
0x2fd SWAP3
0x2fe PUSH1 0x20
0x300 SWAP3
0x301 SWAP2
0x302 SWAP1
0x303 DUP3
0x304 SWAP1
0x305 SUB
0x306 ADD
0x307 DUP2
0x308 PUSH1 0x0
0x30a DUP8
0x30b DUP1
0x30c EXTCODESIZE
0x30d ISZERO
0x30e DUP1
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V223 = 0x40
0x2b8: V224 = M[0x40]
0x2b9: V225 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2db: M[V224] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2dc: V226 = ADDRESS
0x2dd: V227 = 0x4
0x2e0: V228 = ADD V224 0x4
0x2e1: M[V228] = V226
0x2e3: V229 = M[0x40]
0x2e7: V230 = 0x1
0x2e9: V231 = 0xa0
0x2eb: V232 = 0x2
0x2ed: V233 = EXP 0x2 0xa0
0x2ee: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f0: V235 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x2f2: V236 = 0x70a08231
0x2f8: V237 = 0x24
0x2fc: V238 = ADD V224 0x24
0x2fe: V239 = 0x20
0x305: V240 = SUB V224 V229
0x306: V241 = ADD V240 0x24
0x308: V242 = 0x0
0x30c: V243 = EXTCODESIZE V235
0x30d: V244 = ISZERO V243
0x30f: V245 = ISZERO V244
0x310: V246 = 0x318
0x313: JUMPI 0x318 V245
---
Entry stack: [V11, 0x150, V105, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V235, 0x70a08231, V238, 0x20, V229, V241, V229, 0x0, V235, V244]
Exit stack: [V11, 0x150, V105, V105, 0x0, V235, 0x70a08231, V238, 0x20, V229, V241, V229, 0x0, V235, V244]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x2b4]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V247 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V11, 0x150, V105, V105, 0x0, V235, 0x70a08231, V238, 0x20, V229, V241, V229, 0x0, V235, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V105, V105, 0x0, V235, 0x70a08231, V238, 0x20, V229, V241, V229, 0x0, V235, V244]

================================

Block 0x318
[0x318:0x322]
---
Predecessors: [0x2b4]
Successors: [0x323, 0x32c]
---
0x318 JUMPDEST
0x319 POP
0x31a GAS
0x31b CALL
0x31c ISZERO
0x31d DUP1
0x31e ISZERO
0x31f PUSH2 0x32c
0x322 JUMPI
---
0x318: JUMPDEST 
0x31a: V248 = GAS
0x31b: V249 = CALL V248 V235 0x0 V229 V241 V229 0x20
0x31c: V250 = ISZERO V249
0x31e: V251 = ISZERO V250
0x31f: V252 = 0x32c
0x322: JUMPI 0x32c V251
---
Entry stack: [V11, 0x150, V105, V105, 0x0, V235, 0x70a08231, V238, 0x20, V229, V241, V229, 0x0, V235, V244]
Stack pops: 7
Stack additions: [V250]
Exit stack: [V11, 0x150, V105, V105, 0x0, V235, 0x70a08231, V238, V250]

================================

Block 0x323
[0x323:0x32b]
---
Predecessors: [0x318]
Successors: []
---
0x323 RETURNDATASIZE
0x324 PUSH1 0x0
0x326 DUP1
0x327 RETURNDATACOPY
0x328 RETURNDATASIZE
0x329 PUSH1 0x0
0x32b REVERT
---
0x323: V253 = RETURNDATASIZE
0x324: V254 = 0x0
0x327: RETURNDATACOPY 0x0 0x0 V253
0x328: V255 = RETURNDATASIZE
0x329: V256 = 0x0
0x32b: REVERT 0x0 V255
---
Entry stack: [V11, 0x150, V105, V105, 0x0, V235, 0x70a08231, V238, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V105, V105, 0x0, V235, 0x70a08231, V238, V250]

================================

Block 0x32c
[0x32c:0x33d]
---
Predecessors: [0x318]
Successors: [0x33e, 0x342]
---
0x32c JUMPDEST
0x32d POP
0x32e POP
0x32f POP
0x330 POP
0x331 PUSH1 0x40
0x333 MLOAD
0x334 RETURNDATASIZE
0x335 PUSH1 0x20
0x337 DUP2
0x338 LT
0x339 ISZERO
0x33a PUSH2 0x342
0x33d JUMPI
---
0x32c: JUMPDEST 
0x331: V257 = 0x40
0x333: V258 = M[0x40]
0x334: V259 = RETURNDATASIZE
0x335: V260 = 0x20
0x338: V261 = LT V259 0x20
0x339: V262 = ISZERO V261
0x33a: V263 = 0x342
0x33d: JUMPI 0x342 V262
---
Entry stack: [V11, 0x150, V105, V105, 0x0, V235, 0x70a08231, V238, V250]
Stack pops: 4
Stack additions: [V258, V259]
Exit stack: [V11, 0x150, V105, V105, 0x0, V258, V259]

================================

Block 0x33e
[0x33e:0x341]
---
Predecessors: [0x32c]
Successors: []
---
0x33e PUSH1 0x0
0x340 DUP1
0x341 REVERT
---
0x33e: V264 = 0x0
0x341: REVERT 0x0 0x0
---
Entry stack: [V11, 0x150, V105, V105, 0x0, V258, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V105, V105, 0x0, V258, V259]

================================

Block 0x342
[0x342:0x3b1]
---
Predecessors: [0x32c]
Successors: [0x3b2, 0x3b6]
---
0x342 JUMPDEST
0x343 POP
0x344 MLOAD
0x345 PUSH1 0x1
0x347 SLOAD
0x348 PUSH1 0x40
0x34a DUP1
0x34b MLOAD
0x34c PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x36d DUP2
0x36e MSTORE
0x36f PUSH1 0x1
0x371 PUSH1 0xa0
0x373 PUSH1 0x2
0x375 EXP
0x376 SUB
0x377 SWAP3
0x378 DUP4
0x379 AND
0x37a PUSH1 0x4
0x37c DUP3
0x37d ADD
0x37e MSTORE
0x37f PUSH1 0x24
0x381 DUP2
0x382 ADD
0x383 DUP5
0x384 SWAP1
0x385 MSTORE
0x386 SWAP1
0x387 MLOAD
0x388 SWAP3
0x389 SWAP4
0x38a POP
0x38b SWAP1
0x38c DUP5
0x38d AND
0x38e SWAP2
0x38f PUSH4 0xa9059cbb
0x394 SWAP2
0x395 PUSH1 0x44
0x397 DUP1
0x398 DUP3
0x399 ADD
0x39a SWAP3
0x39b PUSH1 0x20
0x39d SWAP3
0x39e SWAP1
0x39f SWAP2
0x3a0 SWAP1
0x3a1 DUP3
0x3a2 SWAP1
0x3a3 SUB
0x3a4 ADD
0x3a5 DUP2
0x3a6 PUSH1 0x0
0x3a8 DUP8
0x3a9 DUP1
0x3aa EXTCODESIZE
0x3ab ISZERO
0x3ac DUP1
0x3ad ISZERO
0x3ae PUSH2 0x3b6
0x3b1 JUMPI
---
0x342: JUMPDEST 
0x344: V265 = M[V258]
0x345: V266 = 0x1
0x347: V267 = S[0x1]
0x348: V268 = 0x40
0x34b: V269 = M[0x40]
0x34c: V270 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x36e: M[V269] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x36f: V271 = 0x1
0x371: V272 = 0xa0
0x373: V273 = 0x2
0x375: V274 = EXP 0x2 0xa0
0x376: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x379: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x37a: V277 = 0x4
0x37d: V278 = ADD V269 0x4
0x37e: M[V278] = V276
0x37f: V279 = 0x24
0x382: V280 = ADD V269 0x24
0x385: M[V280] = V265
0x387: V281 = M[0x40]
0x38d: V282 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x38f: V283 = 0xa9059cbb
0x395: V284 = 0x44
0x399: V285 = ADD V269 0x44
0x39b: V286 = 0x20
0x3a3: V287 = SUB V269 V281
0x3a4: V288 = ADD V287 0x44
0x3a6: V289 = 0x0
0x3aa: V290 = EXTCODESIZE V282
0x3ab: V291 = ISZERO V290
0x3ad: V292 = ISZERO V291
0x3ae: V293 = 0x3b6
0x3b1: JUMPI 0x3b6 V292
---
Entry stack: [V11, 0x150, V105, V105, 0x0, V258, V259]
Stack pops: 4
Stack additions: [S3, V265, V282, 0xa9059cbb, V285, 0x20, V281, V288, V281, 0x0, V282, V291]
Exit stack: [V11, 0x150, V105, V105, V265, V282, 0xa9059cbb, V285, 0x20, V281, V288, V281, 0x0, V282, V291]

================================

Block 0x3b2
[0x3b2:0x3b5]
---
Predecessors: [0x342]
Successors: []
---
0x3b2 PUSH1 0x0
0x3b4 DUP1
0x3b5 REVERT
---
0x3b2: V294 = 0x0
0x3b5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x150, V105, V105, V265, V282, 0xa9059cbb, V285, 0x20, V281, V288, V281, 0x0, V282, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V105, V105, V265, V282, 0xa9059cbb, V285, 0x20, V281, V288, V281, 0x0, V282, V291]

================================

Block 0x3b6
[0x3b6:0x3c0]
---
Predecessors: [0x342]
Successors: [0x3c1, 0x3ca]
---
0x3b6 JUMPDEST
0x3b7 POP
0x3b8 GAS
0x3b9 CALL
0x3ba ISZERO
0x3bb DUP1
0x3bc ISZERO
0x3bd PUSH2 0x3ca
0x3c0 JUMPI
---
0x3b6: JUMPDEST 
0x3b8: V295 = GAS
0x3b9: V296 = CALL V295 V282 0x0 V281 V288 V281 0x20
0x3ba: V297 = ISZERO V296
0x3bc: V298 = ISZERO V297
0x3bd: V299 = 0x3ca
0x3c0: JUMPI 0x3ca V298
---
Entry stack: [V11, 0x150, V105, V105, V265, V282, 0xa9059cbb, V285, 0x20, V281, V288, V281, 0x0, V282, V291]
Stack pops: 7
Stack additions: [V297]
Exit stack: [V11, 0x150, V105, V105, V265, V282, 0xa9059cbb, V285, V297]

================================

Block 0x3c1
[0x3c1:0x3c9]
---
Predecessors: [0x3b6]
Successors: []
---
0x3c1 RETURNDATASIZE
0x3c2 PUSH1 0x0
0x3c4 DUP1
0x3c5 RETURNDATACOPY
0x3c6 RETURNDATASIZE
0x3c7 PUSH1 0x0
0x3c9 REVERT
---
0x3c1: V300 = RETURNDATASIZE
0x3c2: V301 = 0x0
0x3c5: RETURNDATACOPY 0x0 0x0 V300
0x3c6: V302 = RETURNDATASIZE
0x3c7: V303 = 0x0
0x3c9: REVERT 0x0 V302
---
Entry stack: [V11, 0x150, V105, V105, V265, V282, 0xa9059cbb, V285, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V105, V105, V265, V282, 0xa9059cbb, V285, V297]

================================

Block 0x3ca
[0x3ca:0x3db]
---
Predecessors: [0x3b6]
Successors: [0x3dc, 0x3e0]
---
0x3ca JUMPDEST
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf PUSH1 0x40
0x3d1 MLOAD
0x3d2 RETURNDATASIZE
0x3d3 PUSH1 0x20
0x3d5 DUP2
0x3d6 LT
0x3d7 ISZERO
0x3d8 PUSH2 0x3e0
0x3db JUMPI
---
0x3ca: JUMPDEST 
0x3cf: V304 = 0x40
0x3d1: V305 = M[0x40]
0x3d2: V306 = RETURNDATASIZE
0x3d3: V307 = 0x20
0x3d6: V308 = LT V306 0x20
0x3d7: V309 = ISZERO V308
0x3d8: V310 = 0x3e0
0x3db: JUMPI 0x3e0 V309
---
Entry stack: [V11, 0x150, V105, V105, V265, V282, 0xa9059cbb, V285, V297]
Stack pops: 4
Stack additions: [V305, V306]
Exit stack: [V11, 0x150, V105, V105, V265, V305, V306]

================================

Block 0x3dc
[0x3dc:0x3df]
---
Predecessors: [0x3ca]
Successors: []
---
0x3dc PUSH1 0x0
0x3de DUP1
0x3df REVERT
---
0x3dc: V311 = 0x0
0x3df: REVERT 0x0 0x0
---
Entry stack: [V11, 0x150, V105, V105, V265, V305, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x150, V105, V105, V265, V305, V306]

================================

Block 0x3e0
[0x3e0:0x42e]
---
Predecessors: [0x3ca]
Successors: [0x150]
---
0x3e0 JUMPDEST
0x3e1 POP
0x3e2 POP
0x3e3 PUSH1 0x40
0x3e5 DUP1
0x3e6 MLOAD
0x3e7 PUSH1 0x1
0x3e9 PUSH1 0xa0
0x3eb PUSH1 0x2
0x3ed EXP
0x3ee SUB
0x3ef DUP6
0x3f0 AND
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 CALLER
0x3f4 PUSH1 0x20
0x3f6 DUP3
0x3f7 ADD
0x3f8 MSTORE
0x3f9 DUP1
0x3fa DUP3
0x3fb ADD
0x3fc DUP4
0x3fd SWAP1
0x3fe MSTORE
0x3ff SWAP1
0x400 MLOAD
0x401 PUSH32 0xa04c965e7d289704527a948915777d68bb4530fb4b08aa935fb958c0b7901ab9
0x422 SWAP2
0x423 DUP2
0x424 SWAP1
0x425 SUB
0x426 PUSH1 0x60
0x428 ADD
0x429 SWAP1
0x42a LOG1
0x42b POP
0x42c POP
0x42d POP
0x42e JUMP
---
0x3e0: JUMPDEST 
0x3e3: V312 = 0x40
0x3e6: V313 = M[0x40]
0x3e7: V314 = 0x1
0x3e9: V315 = 0xa0
0x3eb: V316 = 0x2
0x3ed: V317 = EXP 0x2 0xa0
0x3ee: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f0: V319 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x3f2: M[V313] = V319
0x3f3: V320 = CALLER
0x3f4: V321 = 0x20
0x3f7: V322 = ADD V313 0x20
0x3f8: M[V322] = V320
0x3fb: V323 = ADD 0x40 V313
0x3fe: M[V323] = V265
0x400: V324 = M[0x40]
0x401: V325 = 0xa04c965e7d289704527a948915777d68bb4530fb4b08aa935fb958c0b7901ab9
0x425: V326 = SUB V313 V324
0x426: V327 = 0x60
0x428: V328 = ADD 0x60 V326
0x42a: LOG V324 V328 0xa04c965e7d289704527a948915777d68bb4530fb4b08aa935fb958c0b7901ab9
0x42e: JUMP 0x150
---
Entry stack: [V11, 0x150, V105, V105, V265, V305, V306]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x42f
[0x42f:0x434]
---
Predecessors: [0x17f]
Successors: [0x188]
---
0x42f JUMPDEST
0x430 PUSH1 0x2
0x432 SLOAD
0x433 DUP2
0x434 JUMP
---
0x42f: JUMPDEST 
0x430: V329 = 0x2
0x432: V330 = S[0x2]
0x434: JUMP 0x188
---
Entry stack: [V11, 0x188]
Stack pops: 1
Stack additions: [S0, V330]
Exit stack: [V11, 0x188, V330]

================================

Block 0x435
[0x435:0x443]
---
Predecessors: [0x1a6]
Successors: [0xd3]
---
0x435 JUMPDEST
0x436 PUSH1 0x1
0x438 SLOAD
0x439 PUSH1 0x1
0x43b PUSH1 0xa0
0x43d PUSH1 0x2
0x43f EXP
0x440 SUB
0x441 AND
0x442 DUP2
0x443 JUMP
---
0x435: JUMPDEST 
0x436: V331 = 0x1
0x438: V332 = S[0x1]
0x439: V333 = 0x1
0x43b: V334 = 0xa0
0x43d: V335 = 0x2
0x43f: V336 = EXP 0x2 0xa0
0x440: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x443: JUMP 0xd3
---
Entry stack: [V11, 0xd3]
Stack pops: 1
Stack additions: [S0, V338]
Exit stack: [V11, 0xd3, V338]

================================

Block 0x444
[0x444:0x449]
---
Predecessors: [0x1bb]
Successors: [0x188]
---
0x444 JUMPDEST
0x445 PUSH1 0x3
0x447 SLOAD
0x448 DUP2
0x449 JUMP
---
0x444: JUMPDEST 
0x445: V339 = 0x3
0x447: V340 = S[0x3]
0x449: JUMP 0x188
---
Entry stack: [V11, 0x188]
Stack pops: 1
Stack additions: [S0, V340]
Exit stack: [V11, 0x188, V340]

================================

Block 0x44a
[0x44a:0x476]
---
Predecessors: []
Successors: []
---
0x44a STOP
0x44b LOG1
0x44c PUSH6 0x627a7a723058
0x453 SHA3
0x454 MISSING 0x21
0x455 DUP9
0x456 DUP11
0x457 SWAP2
0x458 MISSING 0xd8
0x459 MISSING 0xc0
0x45a MISSING 0xd2
0x45b SIGNEXTEND
0x45c MISSING 0x29
0x45d SWAP2
0x45e DUP15
0x45f DUP2
0x460 MISSING 0xa9
0x461 MISSING 0xc
0x462 MISSING 0xad
0x463 MISSING 0x1e
0x464 OR
0x465 SAR
0x466 PUSH16 0xfd205a21f350111ba8c5ae79ef0029
---
0x44a: STOP 
0x44b: LOG S0 S1 S2
0x44c: V341 = 0x627a7a723058
0x453: V342 = SHA3 0x627a7a723058 S3
0x454: MISSING 0x21
0x458: MISSING 0xd8
0x459: MISSING 0xc0
0x45a: MISSING 0xd2
0x45b: V343 = SIGNEXTEND S0 S1
0x45c: MISSING 0x29
0x460: MISSING 0xa9
0x461: MISSING 0xc
0x462: MISSING 0xad
0x463: MISSING 0x1e
0x464: V344 = OR S0 S1
0x465: V345 = SAR V344 S2
0x466: V346 = 0xfd205a21f350111ba8c5ae79ef0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V342, S0, S8, S9, S1, S2, S3, S4, S5, S6, S7, S8, S9, V343, S2, S14, S2, S1, S0, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0xfd205a21f350111ba8c5ae79ef0029, V345]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xbe
Exit block: 0xd3
Body: 0xbe, 0xc6, 0xca, 0xd3, 0x1c4

Function 1:
Public function signature: 0x370158ea
Entry block: 0xef
Exit block: 0x104
Body: 0xef, 0xf7, 0xfb, 0x104, 0x1d3

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x13b
Exit block: 0x150
Body: 0x13b, 0x143, 0x147, 0x150, 0x1f8, 0x20b, 0x20f, 0x21a, 0x21e, 0x242, 0x24b

Function 3:
Public function signature: 0x49df728c
Entry block: 0x152
Exit block: 0x150
Body: 0x150, 0x152, 0x15a, 0x15e, 0x289, 0x2a1, 0x2a5, 0x2b0, 0x2b4, 0x314, 0x318, 0x323, 0x32c, 0x33e, 0x342, 0x3b2, 0x3b6, 0x3c1, 0x3ca, 0x3dc, 0x3e0

Function 4:
Public function signature: 0x69ac5721
Entry block: 0x173
Exit block: 0x188
Body: 0x173, 0x17b, 0x17f, 0x188, 0x42f

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x19a
Exit block: 0xd3
Body: 0xd3, 0x19a, 0x1a2, 0x1a6, 0x435

Function 6:
Public function signature: 0xcf09e0d0
Entry block: 0x1af
Exit block: 0x188
Body: 0x188, 0x1af, 0x1b7, 0x1bb, 0x444

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

