Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x20f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x20f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x20f
0x24: JUMPI 0x20f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x224]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x224
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x224
0x2f: JUMPI 0x224 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x249]
---
0x30 DUP1
0x31 PUSH4 0x38af3eed
0x36 EQ
0x37 PUSH2 0x249
0x3a JUMPI
---
0x31: V19 = 0x38af3eed
0x36: V20 = EQ 0x38af3eed V12
0x37: V21 = 0x249
0x3a: JUMPI 0x249 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x278]
---
0x3b DUP1
0x3c PUSH4 0x6e66f6e9
0x41 EQ
0x42 PUSH2 0x278
0x45 JUMPI
---
0x3c: V22 = 0x6e66f6e9
0x41: V23 = EQ 0x6e66f6e9 V12
0x42: V24 = 0x278
0x45: JUMPI 0x278 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2a7]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x2a7
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x2a7
0x50: JUMPI 0x2a7 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2d8]
---
0x51 DUP1
0x52 PUSH4 0x7a3a0e84
0x57 EQ
0x58 PUSH2 0x2d8
0x5b JUMPI
---
0x52: V28 = 0x7a3a0e84
0x57: V29 = EQ 0x7a3a0e84 V12
0x58: V30 = 0x2d8
0x5b: JUMPI 0x2d8 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2fd]
---
0x5c DUP1
0x5d PUSH4 0x7b3e5e7b
0x62 EQ
0x63 PUSH2 0x2fd
0x66 JUMPI
---
0x5d: V31 = 0x7b3e5e7b
0x62: V32 = EQ 0x7b3e5e7b V12
0x63: V33 = 0x2fd
0x66: JUMPI 0x2fd V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x322]
---
0x67 DUP1
0x68 PUSH4 0xa035b1fe
0x6d EQ
0x6e PUSH2 0x322
0x71 JUMPI
---
0x68: V34 = 0xa035b1fe
0x6d: V35 = EQ 0xa035b1fe V12
0x6e: V36 = 0x322
0x71: JUMPI 0x322 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x347]
---
0x72 DUP1
0x73 PUSH4 0xfd6b7ef8
0x78 EQ
0x79 PUSH2 0x347
0x7c JUMPI
---
0x73: V37 = 0xfd6b7ef8
0x78: V38 = EQ 0xfd6b7ef8 V12
0x79: V39 = 0x347
0x7c: JUMPI 0x347 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x0, 0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x20d
---
0x7d: JUMPDEST 
0x7e: V40 = 0x20d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20d]
Exit stack: [V12, 0x20d]

================================

Block 0x81
[0x81:0x95]
---
Predecessors: [0x7d]
Successors: [0x96, 0x9a]
---
0x81 JUMPDEST
0x82 PUSH1 0x7
0x84 SLOAD
0x85 PUSH1 0x0
0x87 SWAP1
0x88 PUSH2 0x100
0x8b SWAP1
0x8c DIV
0x8d PUSH1 0xff
0x8f AND
0x90 ISZERO
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x81: JUMPDEST 
0x82: V41 = 0x7
0x84: V42 = S[0x7]
0x85: V43 = 0x0
0x88: V44 = 0x100
0x8c: V45 = DIV V42 0x100
0x8d: V46 = 0xff
0x8f: V47 = AND 0xff V45
0x90: V48 = ISZERO V47
0x91: V49 = ISZERO V48
0x92: V50 = 0x9a
0x95: JUMPI 0x9a V49
---
Entry stack: [V12, 0x20d]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x20d, 0x0]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x81]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V51 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V12, 0x20d, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, 0x0]

================================

Block 0x9a
[0x9a:0xda]
---
Predecessors: [0x81]
Successors: [0xdb, 0xdc]
---
0x9a JUMPDEST
0x9b POP
0x9c PUSH1 0x1
0x9e PUSH1 0xa0
0xa0 PUSH1 0x2
0xa2 EXP
0xa3 SUB
0xa4 CALLER
0xa5 DUP2
0xa6 DUP2
0xa7 AND
0xa8 PUSH1 0x0
0xaa SWAP1
0xab DUP2
0xac MSTORE
0xad PUSH1 0x6
0xaf PUSH1 0x20
0xb1 MSTORE
0xb2 PUSH1 0x40
0xb4 SWAP1
0xb5 SHA3
0xb6 CALLVALUE
0xb7 SWAP1
0xb8 DUP2
0xb9 SWAP1
0xba SSTORE
0xbb PUSH1 0x2
0xbd DUP1
0xbe SLOAD
0xbf DUP3
0xc0 ADD
0xc1 SWAP1
0xc2 SSTORE
0xc3 PUSH1 0x5
0xc5 SLOAD
0xc6 PUSH1 0x4
0xc8 SLOAD
0xc9 SWAP2
0xca SWAP4
0xcb AND
0xcc SWAP2
0xcd PUSH4 0x79c65068
0xd2 SWAP2
0xd3 DUP5
0xd4 DUP2
0xd5 ISZERO
0xd6 ISZERO
0xd7 PUSH2 0xdc
0xda JUMPI
---
0x9a: JUMPDEST 
0x9c: V52 = 0x1
0x9e: V53 = 0xa0
0xa0: V54 = 0x2
0xa2: V55 = EXP 0x2 0xa0
0xa3: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4: V57 = CALLER
0xa7: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V59 = 0x0
0xac: M[0x0] = V58
0xad: V60 = 0x6
0xaf: V61 = 0x20
0xb1: M[0x20] = 0x6
0xb2: V62 = 0x40
0xb5: V63 = SHA3 0x0 0x40
0xb6: V64 = CALLVALUE
0xba: S[V63] = V64
0xbb: V65 = 0x2
0xbe: V66 = S[0x2]
0xc0: V67 = ADD V64 V66
0xc2: S[0x2] = V67
0xc3: V68 = 0x5
0xc5: V69 = S[0x5]
0xc6: V70 = 0x4
0xc8: V71 = S[0x4]
0xcb: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0xcd: V73 = 0x79c65068
0xd5: V74 = ISZERO V71
0xd6: V75 = ISZERO V74
0xd7: V76 = 0xdc
0xda: JUMPI 0xdc V75
---
Entry stack: [V12, 0x20d, 0x0]
Stack pops: 1
Stack additions: [V64, V72, 0x79c65068, V57, V71, V64]
Exit stack: [V12, 0x20d, V64, V72, 0x79c65068, V57, V71, V64]

================================

Block 0xdb
[0xdb:0xdb]
---
Predecessors: [0x9a]
Successors: []
---
0xdb INVALID
---
0xdb: INVALID 
---
Entry stack: [V12, 0x20d, V64, V72, 0x79c65068, V57, V71, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, V64, V72, 0x79c65068, V57, V71, V64]

================================

Block 0xdc
[0xdc:0x11b]
---
Predecessors: [0x9a]
Successors: [0x11c, 0x120]
---
0xdc JUMPDEST
0xdd DIV
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 PUSH1 0xe0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 PUSH4 0xffffffff
0xeb DUP6
0xec AND
0xed MUL
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x1
0xf2 PUSH1 0xa0
0xf4 PUSH1 0x2
0xf6 EXP
0xf7 SUB
0xf8 SWAP1
0xf9 SWAP3
0xfa AND
0xfb PUSH1 0x4
0xfd DUP4
0xfe ADD
0xff MSTORE
0x100 PUSH1 0x24
0x102 DUP3
0x103 ADD
0x104 MSTORE
0x105 PUSH1 0x44
0x107 ADD
0x108 PUSH1 0x0
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e DUP4
0x10f SUB
0x110 DUP2
0x111 PUSH1 0x0
0x113 DUP8
0x114 DUP1
0x115 EXTCODESIZE
0x116 ISZERO
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0xdc: JUMPDEST 
0xdd: V77 = DIV V64 V71
0xde: V78 = 0x40
0xe0: V79 = M[0x40]
0xe1: V80 = 0xe0
0xe3: V81 = 0x2
0xe5: V82 = EXP 0x2 0xe0
0xe6: V83 = 0xffffffff
0xec: V84 = AND 0x79c65068 0xffffffff
0xed: V85 = MUL 0x79c65068 0x100000000000000000000000000000000000000000000000000000000
0xef: M[V79] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0xf0: V86 = 0x1
0xf2: V87 = 0xa0
0xf4: V88 = 0x2
0xf6: V89 = EXP 0x2 0xa0
0xf7: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa: V91 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V92 = 0x4
0xfe: V93 = ADD V79 0x4
0xff: M[V93] = V91
0x100: V94 = 0x24
0x103: V95 = ADD V79 0x24
0x104: M[V95] = V77
0x105: V96 = 0x44
0x107: V97 = ADD 0x44 V79
0x108: V98 = 0x0
0x10a: V99 = 0x40
0x10c: V100 = M[0x40]
0x10f: V101 = SUB V97 V100
0x111: V102 = 0x0
0x115: V103 = EXTCODESIZE V72
0x116: V104 = ISZERO V103
0x117: V105 = ISZERO V104
0x118: V106 = 0x120
0x11b: JUMPI 0x120 V105
---
Entry stack: [V12, 0x20d, V64, V72, 0x79c65068, V57, V71, V64]
Stack pops: 5
Stack additions: [S4, S3, V97, 0x0, V100, V101, V100, 0x0, S4]
Exit stack: [V12, 0x20d, V64, V72, 0x79c65068, V97, 0x0, V100, V101, V100, 0x0, V72]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0xdc]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V107 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x20d, V64, V72, 0x79c65068, V97, 0x0, V100, V101, V100, 0x0, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, V64, V72, 0x79c65068, V97, 0x0, V100, V101, V100, 0x0, V72]

================================

Block 0x120
[0x120:0x12c]
---
Predecessors: [0xdc]
Successors: [0x12d, 0x131]
---
0x120 JUMPDEST
0x121 PUSH2 0x2c6
0x124 GAS
0x125 SUB
0x126 CALL
0x127 ISZERO
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x120: JUMPDEST 
0x121: V108 = 0x2c6
0x124: V109 = GAS
0x125: V110 = SUB V109 0x2c6
0x126: V111 = CALL V110 V72 0x0 V100 V101 V100 0x0
0x127: V112 = ISZERO V111
0x128: V113 = ISZERO V112
0x129: V114 = 0x131
0x12c: JUMPI 0x131 V113
---
Entry stack: [V12, 0x20d, V64, V72, 0x79c65068, V97, 0x0, V100, V101, V100, 0x0, V72]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x20d, V64, V72, 0x79c65068, V97]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x120]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V115 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V12, 0x20d, V64, V72, 0x79c65068, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, V64, V72, 0x79c65068, V97]

================================

Block 0x131
[0x131:0x15b]
---
Predecessors: [0x120]
Successors: [0x15c, 0x15d]
---
0x131 JUMPDEST
0x132 POP
0x133 POP
0x134 PUSH1 0x5
0x136 SLOAD
0x137 PUSH1 0x0
0x139 SLOAD
0x13a PUSH1 0x4
0x13c SLOAD
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 SWAP3
0x146 DUP4
0x147 AND
0x148 SWAP4
0x149 POP
0x14a PUSH4 0x79c65068
0x14f SWAP3
0x150 SWAP1
0x151 SWAP2
0x152 AND
0x153 SWAP1
0x154 DUP5
0x155 DUP2
0x156 ISZERO
0x157 ISZERO
0x158 PUSH2 0x15d
0x15b JUMPI
---
0x131: JUMPDEST 
0x134: V116 = 0x5
0x136: V117 = S[0x5]
0x137: V118 = 0x0
0x139: V119 = S[0x0]
0x13a: V120 = 0x4
0x13c: V121 = S[0x4]
0x13d: V122 = 0x1
0x13f: V123 = 0xa0
0x141: V124 = 0x2
0x143: V125 = EXP 0x2 0xa0
0x144: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x14a: V128 = 0x79c65068
0x152: V129 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x156: V130 = ISZERO V121
0x157: V131 = ISZERO V130
0x158: V132 = 0x15d
0x15b: JUMPI 0x15d V131
---
Entry stack: [V12, 0x20d, V64, V72, 0x79c65068, V97]
Stack pops: 4
Stack additions: [S3, V127, 0x79c65068, V129, V121, S3]
Exit stack: [V12, 0x20d, V64, V127, 0x79c65068, V129, V121, V64]

================================

Block 0x15c
[0x15c:0x15c]
---
Predecessors: [0x131]
Successors: []
---
0x15c INVALID
---
0x15c: INVALID 
---
Entry stack: [V12, 0x20d, V64, V127, 0x79c65068, V129, V121, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, V64, V127, 0x79c65068, V129, V121, V64]

================================

Block 0x15d
[0x15d:0x19c]
---
Predecessors: [0x131]
Successors: [0x19d, 0x1a1]
---
0x15d JUMPDEST
0x15e DIV
0x15f PUSH1 0x40
0x161 MLOAD
0x162 PUSH1 0xe0
0x164 PUSH1 0x2
0x166 EXP
0x167 PUSH4 0xffffffff
0x16c DUP6
0x16d AND
0x16e MUL
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0x1
0x173 PUSH1 0xa0
0x175 PUSH1 0x2
0x177 EXP
0x178 SUB
0x179 SWAP1
0x17a SWAP3
0x17b AND
0x17c PUSH1 0x4
0x17e DUP4
0x17f ADD
0x180 MSTORE
0x181 PUSH1 0x24
0x183 DUP3
0x184 ADD
0x185 MSTORE
0x186 PUSH1 0x44
0x188 ADD
0x189 PUSH1 0x0
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f DUP4
0x190 SUB
0x191 DUP2
0x192 PUSH1 0x0
0x194 DUP8
0x195 DUP1
0x196 EXTCODESIZE
0x197 ISZERO
0x198 ISZERO
0x199 PUSH2 0x1a1
0x19c JUMPI
---
0x15d: JUMPDEST 
0x15e: V133 = DIV V64 V121
0x15f: V134 = 0x40
0x161: V135 = M[0x40]
0x162: V136 = 0xe0
0x164: V137 = 0x2
0x166: V138 = EXP 0x2 0xe0
0x167: V139 = 0xffffffff
0x16d: V140 = AND 0x79c65068 0xffffffff
0x16e: V141 = MUL 0x79c65068 0x100000000000000000000000000000000000000000000000000000000
0x170: M[V135] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x171: V142 = 0x1
0x173: V143 = 0xa0
0x175: V144 = 0x2
0x177: V145 = EXP 0x2 0xa0
0x178: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V147 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V148 = 0x4
0x17f: V149 = ADD V135 0x4
0x180: M[V149] = V147
0x181: V150 = 0x24
0x184: V151 = ADD V135 0x24
0x185: M[V151] = V133
0x186: V152 = 0x44
0x188: V153 = ADD 0x44 V135
0x189: V154 = 0x0
0x18b: V155 = 0x40
0x18d: V156 = M[0x40]
0x190: V157 = SUB V153 V156
0x192: V158 = 0x0
0x196: V159 = EXTCODESIZE V127
0x197: V160 = ISZERO V159
0x198: V161 = ISZERO V160
0x199: V162 = 0x1a1
0x19c: JUMPI 0x1a1 V161
---
Entry stack: [V12, 0x20d, V64, V127, 0x79c65068, V129, V121, V64]
Stack pops: 5
Stack additions: [S4, S3, V153, 0x0, V156, V157, V156, 0x0, S4]
Exit stack: [V12, 0x20d, V64, V127, 0x79c65068, V153, 0x0, V156, V157, V156, 0x0, V127]

================================

Block 0x19d
[0x19d:0x1a0]
---
Predecessors: [0x15d]
Successors: []
---
0x19d PUSH1 0x0
0x19f DUP1
0x1a0 REVERT
---
0x19d: V163 = 0x0
0x1a0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x20d, V64, V127, 0x79c65068, V153, 0x0, V156, V157, V156, 0x0, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, V64, V127, 0x79c65068, V153, 0x0, V156, V157, V156, 0x0, V127]

================================

Block 0x1a1
[0x1a1:0x1ad]
---
Predecessors: [0x15d]
Successors: [0x1ae, 0x1b2]
---
0x1a1 JUMPDEST
0x1a2 PUSH2 0x2c6
0x1a5 GAS
0x1a6 SUB
0x1a7 CALL
0x1a8 ISZERO
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V164 = 0x2c6
0x1a5: V165 = GAS
0x1a6: V166 = SUB V165 0x2c6
0x1a7: V167 = CALL V166 V127 0x0 V156 V157 V156 0x0
0x1a8: V168 = ISZERO V167
0x1a9: V169 = ISZERO V168
0x1aa: V170 = 0x1b2
0x1ad: JUMPI 0x1b2 V169
---
Entry stack: [V12, 0x20d, V64, V127, 0x79c65068, V153, 0x0, V156, V157, V156, 0x0, V127]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x20d, V64, V127, 0x79c65068, V153]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x1a1]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V171 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x20d, V64, V127, 0x79c65068, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, V64, V127, 0x79c65068, V153]

================================

Block 0x1b2
[0x1b2:0x209]
---
Predecessors: [0x1a1]
Successors: [0x20a]
---
0x1b2 JUMPDEST
0x1b3 POP
0x1b4 POP
0x1b5 POP
0x1b6 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d7 CALLER
0x1d8 DUP3
0x1d9 PUSH1 0x1
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de PUSH1 0x1
0x1e0 PUSH1 0xa0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SUB
0x1e6 SWAP1
0x1e7 SWAP4
0x1e8 AND
0x1e9 DUP4
0x1ea MSTORE
0x1eb PUSH1 0x20
0x1ed DUP4
0x1ee ADD
0x1ef SWAP2
0x1f0 SWAP1
0x1f1 SWAP2
0x1f2 MSTORE
0x1f3 ISZERO
0x1f4 ISZERO
0x1f5 PUSH1 0x40
0x1f7 DUP1
0x1f8 DUP4
0x1f9 ADD
0x1fa SWAP2
0x1fb SWAP1
0x1fc SWAP2
0x1fd MSTORE
0x1fe PUSH1 0x60
0x200 SWAP1
0x201 SWAP2
0x202 ADD
0x203 SWAP1
0x204 MLOAD
0x205 DUP1
0x206 SWAP2
0x207 SUB
0x208 SWAP1
0x209 LOG1
---
0x1b2: JUMPDEST 
0x1b6: V172 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d7: V173 = CALLER
0x1d9: V174 = 0x1
0x1db: V175 = 0x40
0x1dd: V176 = M[0x40]
0x1de: V177 = 0x1
0x1e0: V178 = 0xa0
0x1e2: V179 = 0x2
0x1e4: V180 = EXP 0x2 0xa0
0x1e5: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e8: V182 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: M[V176] = V182
0x1eb: V183 = 0x20
0x1ee: V184 = ADD V176 0x20
0x1f2: M[V184] = V64
0x1f3: V185 = ISZERO 0x1
0x1f4: V186 = ISZERO 0x0
0x1f5: V187 = 0x40
0x1f9: V188 = ADD V176 0x40
0x1fd: M[V188] = 0x1
0x1fe: V189 = 0x60
0x202: V190 = ADD V176 0x60
0x204: V191 = M[0x40]
0x207: V192 = SUB V190 V191
0x209: LOG V191 V192 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V12, 0x20d, V64, V127, 0x79c65068, V153]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x20d, V64]

================================

Block 0x20a
[0x20a:0x20c]
---
Predecessors: [0x1b2, 0x421, 0x522, 0x55b]
Successors: [0x20d]
---
0x20a JUMPDEST
0x20b POP
0x20c JUMP
---
0x20a: JUMPDEST 
0x20c: JUMP 0x20d
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x20d
[0x20d:0x20e]
---
Predecessors: [0x20a, 0x3d7, 0x5d2]
Successors: []
---
0x20d JUMPDEST
0x20e STOP
---
0x20d: JUMPDEST 
0x20e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20f
[0x20f:0x215]
---
Predecessors: [0xb]
Successors: [0x216, 0x21a]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 ISZERO
0x212 PUSH2 0x21a
0x215 JUMPI
---
0x20f: JUMPDEST 
0x210: V193 = CALLVALUE
0x211: V194 = ISZERO V193
0x212: V195 = 0x21a
0x215: JUMPI 0x21a V194
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x216
[0x216:0x219]
---
Predecessors: [0x20f]
Successors: []
---
0x216 PUSH1 0x0
0x218 DUP1
0x219 REVERT
---
0x216: V196 = 0x0
0x219: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21a
[0x21a:0x221]
---
Predecessors: [0x20f]
Successors: [0x35c]
---
0x21a JUMPDEST
0x21b PUSH2 0x20d
0x21e PUSH2 0x35c
0x221 JUMP
---
0x21a: JUMPDEST 
0x21b: V197 = 0x20d
0x21e: V198 = 0x35c
0x221: JUMP 0x35c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20d]
Exit stack: [V12, 0x20d]

================================

Block 0x222
[0x222:0x223]
---
Predecessors: []
Successors: []
---
0x222 JUMPDEST
0x223 STOP
---
0x222: JUMPDEST 
0x223: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x224
[0x224:0x22a]
---
Predecessors: [0x25]
Successors: [0x22b, 0x22f]
---
0x224 JUMPDEST
0x225 CALLVALUE
0x226 ISZERO
0x227 PUSH2 0x22f
0x22a JUMPI
---
0x224: JUMPDEST 
0x225: V199 = CALLVALUE
0x226: V200 = ISZERO V199
0x227: V201 = 0x22f
0x22a: JUMPI 0x22f V200
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22b
[0x22b:0x22e]
---
Predecessors: [0x224]
Successors: []
---
0x22b PUSH1 0x0
0x22d DUP1
0x22e REVERT
---
0x22b: V202 = 0x0
0x22e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22f
[0x22f:0x236]
---
Predecessors: [0x224]
Successors: [0x3d9]
---
0x22f JUMPDEST
0x230 PUSH2 0x237
0x233 PUSH2 0x3d9
0x236 JUMP
---
0x22f: JUMPDEST 
0x230: V203 = 0x237
0x233: V204 = 0x3d9
0x236: JUMP 0x3d9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237]
Exit stack: [V12, 0x237]

================================

Block 0x237
[0x237:0x248]
---
Predecessors: [0x3d9, 0x3fd, 0x40f, 0x415, 0x41b]
Successors: []
---
0x237 JUMPDEST
0x238 PUSH1 0x40
0x23a MLOAD
0x23b SWAP1
0x23c DUP2
0x23d MSTORE
0x23e PUSH1 0x20
0x240 ADD
0x241 PUSH1 0x40
0x243 MLOAD
0x244 DUP1
0x245 SWAP2
0x246 SUB
0x247 SWAP1
0x248 RETURN
---
0x237: JUMPDEST 
0x238: V205 = 0x40
0x23a: V206 = M[0x40]
0x23d: M[V206] = S0
0x23e: V207 = 0x20
0x240: V208 = ADD 0x20 V206
0x241: V209 = 0x40
0x243: V210 = M[0x40]
0x246: V211 = SUB V208 V210
0x248: RETURN V210 V211
---
Entry stack: [V12, 0x237, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x237]

================================

Block 0x249
[0x249:0x24f]
---
Predecessors: [0x30]
Successors: [0x250, 0x254]
---
0x249 JUMPDEST
0x24a CALLVALUE
0x24b ISZERO
0x24c PUSH2 0x254
0x24f JUMPI
---
0x249: JUMPDEST 
0x24a: V212 = CALLVALUE
0x24b: V213 = ISZERO V212
0x24c: V214 = 0x254
0x24f: JUMPI 0x254 V213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x250
[0x250:0x253]
---
Predecessors: [0x249]
Successors: []
---
0x250 PUSH1 0x0
0x252 DUP1
0x253 REVERT
---
0x250: V215 = 0x0
0x253: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x254
[0x254:0x25b]
---
Predecessors: [0x249]
Successors: [0x3df]
---
0x254 JUMPDEST
0x255 PUSH2 0x25c
0x258 PUSH2 0x3df
0x25b JUMP
---
0x254: JUMPDEST 
0x255: V216 = 0x25c
0x258: V217 = 0x3df
0x25b: JUMP 0x3df
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x25c]
Exit stack: [V12, 0x25c]

================================

Block 0x25c
[0x25c:0x277]
---
Predecessors: [0x3df, 0x3ee]
Successors: []
---
0x25c JUMPDEST
0x25d PUSH1 0x40
0x25f MLOAD
0x260 PUSH1 0x1
0x262 PUSH1 0xa0
0x264 PUSH1 0x2
0x266 EXP
0x267 SUB
0x268 SWAP1
0x269 SWAP2
0x26a AND
0x26b DUP2
0x26c MSTORE
0x26d PUSH1 0x20
0x26f ADD
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 SWAP2
0x275 SUB
0x276 SWAP1
0x277 RETURN
---
0x25c: JUMPDEST 
0x25d: V218 = 0x40
0x25f: V219 = M[0x40]
0x260: V220 = 0x1
0x262: V221 = 0xa0
0x264: V222 = 0x2
0x266: V223 = EXP 0x2 0xa0
0x267: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26a: V225 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x26c: M[V219] = V225
0x26d: V226 = 0x20
0x26f: V227 = ADD 0x20 V219
0x270: V228 = 0x40
0x272: V229 = M[0x40]
0x275: V230 = SUB V227 V229
0x277: RETURN V229 V230
---
Entry stack: [V12, 0x25c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x25c]

================================

Block 0x278
[0x278:0x27e]
---
Predecessors: [0x3b]
Successors: [0x27f, 0x283]
---
0x278 JUMPDEST
0x279 CALLVALUE
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x278: JUMPDEST 
0x279: V231 = CALLVALUE
0x27a: V232 = ISZERO V231
0x27b: V233 = 0x283
0x27e: JUMPI 0x283 V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x278]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V234 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x283
[0x283:0x28a]
---
Predecessors: [0x278]
Successors: [0x3ee]
---
0x283 JUMPDEST
0x284 PUSH2 0x25c
0x287 PUSH2 0x3ee
0x28a JUMP
---
0x283: JUMPDEST 
0x284: V235 = 0x25c
0x287: V236 = 0x3ee
0x28a: JUMP 0x3ee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x25c]
Exit stack: [V12, 0x25c]

================================

Block 0x28b
[0x28b:0x2a6]
---
Predecessors: []
Successors: []
---
0x28b JUMPDEST
0x28c PUSH1 0x40
0x28e MLOAD
0x28f PUSH1 0x1
0x291 PUSH1 0xa0
0x293 PUSH1 0x2
0x295 EXP
0x296 SUB
0x297 SWAP1
0x298 SWAP2
0x299 AND
0x29a DUP2
0x29b MSTORE
0x29c PUSH1 0x20
0x29e ADD
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 SWAP2
0x2a4 SUB
0x2a5 SWAP1
0x2a6 RETURN
---
0x28b: JUMPDEST 
0x28c: V237 = 0x40
0x28e: V238 = M[0x40]
0x28f: V239 = 0x1
0x291: V240 = 0xa0
0x293: V241 = 0x2
0x295: V242 = EXP 0x2 0xa0
0x296: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x299: V244 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x29b: M[V238] = V244
0x29c: V245 = 0x20
0x29e: V246 = ADD 0x20 V238
0x29f: V247 = 0x40
0x2a1: V248 = M[0x40]
0x2a4: V249 = SUB V246 V248
0x2a6: RETURN V248 V249
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a7
[0x2a7:0x2ad]
---
Predecessors: [0x46]
Successors: [0x2ae, 0x2b2]
---
0x2a7 JUMPDEST
0x2a8 CALLVALUE
0x2a9 ISZERO
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V250 = CALLVALUE
0x2a9: V251 = ISZERO V250
0x2aa: V252 = 0x2b2
0x2ad: JUMPI 0x2b2 V251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x2a7]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V253 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b2
[0x2b2:0x2c5]
---
Predecessors: [0x2a7]
Successors: [0x3fd]
---
0x2b2 JUMPDEST
0x2b3 PUSH2 0x237
0x2b6 PUSH1 0x1
0x2b8 PUSH1 0xa0
0x2ba PUSH1 0x2
0x2bc EXP
0x2bd SUB
0x2be PUSH1 0x4
0x2c0 CALLDATALOAD
0x2c1 AND
0x2c2 PUSH2 0x3fd
0x2c5 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V254 = 0x237
0x2b6: V255 = 0x1
0x2b8: V256 = 0xa0
0x2ba: V257 = 0x2
0x2bc: V258 = EXP 0x2 0xa0
0x2bd: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2be: V260 = 0x4
0x2c0: V261 = CALLDATALOAD 0x4
0x2c1: V262 = AND V261 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V263 = 0x3fd
0x2c5: JUMP 0x3fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237, V262]
Exit stack: [V12, 0x237, V262]

================================

Block 0x2c6
[0x2c6:0x2d7]
---
Predecessors: []
Successors: []
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca SWAP1
0x2cb DUP2
0x2cc MSTORE
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 DUP1
0x2d4 SWAP2
0x2d5 SUB
0x2d6 SWAP1
0x2d7 RETURN
---
0x2c6: JUMPDEST 
0x2c7: V264 = 0x40
0x2c9: V265 = M[0x40]
0x2cc: M[V265] = S0
0x2cd: V266 = 0x20
0x2cf: V267 = ADD 0x20 V265
0x2d0: V268 = 0x40
0x2d2: V269 = M[0x40]
0x2d5: V270 = SUB V267 V269
0x2d7: RETURN V269 V270
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d8
[0x2d8:0x2de]
---
Predecessors: [0x51]
Successors: [0x2df, 0x2e3]
---
0x2d8 JUMPDEST
0x2d9 CALLVALUE
0x2da ISZERO
0x2db PUSH2 0x2e3
0x2de JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V271 = CALLVALUE
0x2da: V272 = ISZERO V271
0x2db: V273 = 0x2e3
0x2de: JUMPI 0x2e3 V272
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2df
[0x2df:0x2e2]
---
Predecessors: [0x2d8]
Successors: []
---
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 REVERT
---
0x2df: V274 = 0x0
0x2e2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e3
[0x2e3:0x2ea]
---
Predecessors: [0x2d8]
Successors: [0x40f]
---
0x2e3 JUMPDEST
0x2e4 PUSH2 0x237
0x2e7 PUSH2 0x40f
0x2ea JUMP
---
0x2e3: JUMPDEST 
0x2e4: V275 = 0x237
0x2e7: V276 = 0x40f
0x2ea: JUMP 0x40f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237]
Exit stack: [V12, 0x237]

================================

Block 0x2eb
[0x2eb:0x2fc]
---
Predecessors: []
Successors: []
---
0x2eb JUMPDEST
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef SWAP1
0x2f0 DUP2
0x2f1 MSTORE
0x2f2 PUSH1 0x20
0x2f4 ADD
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 DUP1
0x2f9 SWAP2
0x2fa SUB
0x2fb SWAP1
0x2fc RETURN
---
0x2eb: JUMPDEST 
0x2ec: V277 = 0x40
0x2ee: V278 = M[0x40]
0x2f1: M[V278] = S0
0x2f2: V279 = 0x20
0x2f4: V280 = ADD 0x20 V278
0x2f5: V281 = 0x40
0x2f7: V282 = M[0x40]
0x2fa: V283 = SUB V280 V282
0x2fc: RETURN V282 V283
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fd
[0x2fd:0x303]
---
Predecessors: [0x5c]
Successors: [0x304, 0x308]
---
0x2fd JUMPDEST
0x2fe CALLVALUE
0x2ff ISZERO
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V284 = CALLVALUE
0x2ff: V285 = ISZERO V284
0x300: V286 = 0x308
0x303: JUMPI 0x308 V285
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2fd]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V287 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x308
[0x308:0x30f]
---
Predecessors: [0x2fd]
Successors: [0x415]
---
0x308 JUMPDEST
0x309 PUSH2 0x237
0x30c PUSH2 0x415
0x30f JUMP
---
0x308: JUMPDEST 
0x309: V288 = 0x237
0x30c: V289 = 0x415
0x30f: JUMP 0x415
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237]
Exit stack: [V12, 0x237]

================================

Block 0x310
[0x310:0x321]
---
Predecessors: []
Successors: []
---
0x310 JUMPDEST
0x311 PUSH1 0x40
0x313 MLOAD
0x314 SWAP1
0x315 DUP2
0x316 MSTORE
0x317 PUSH1 0x20
0x319 ADD
0x31a PUSH1 0x40
0x31c MLOAD
0x31d DUP1
0x31e SWAP2
0x31f SUB
0x320 SWAP1
0x321 RETURN
---
0x310: JUMPDEST 
0x311: V290 = 0x40
0x313: V291 = M[0x40]
0x316: M[V291] = S0
0x317: V292 = 0x20
0x319: V293 = ADD 0x20 V291
0x31a: V294 = 0x40
0x31c: V295 = M[0x40]
0x31f: V296 = SUB V293 V295
0x321: RETURN V295 V296
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x322
[0x322:0x328]
---
Predecessors: [0x67]
Successors: [0x329, 0x32d]
---
0x322 JUMPDEST
0x323 CALLVALUE
0x324 ISZERO
0x325 PUSH2 0x32d
0x328 JUMPI
---
0x322: JUMPDEST 
0x323: V297 = CALLVALUE
0x324: V298 = ISZERO V297
0x325: V299 = 0x32d
0x328: JUMPI 0x32d V298
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x329
[0x329:0x32c]
---
Predecessors: [0x322]
Successors: []
---
0x329 PUSH1 0x0
0x32b DUP1
0x32c REVERT
---
0x329: V300 = 0x0
0x32c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32d
[0x32d:0x334]
---
Predecessors: [0x322]
Successors: [0x41b]
---
0x32d JUMPDEST
0x32e PUSH2 0x237
0x331 PUSH2 0x41b
0x334 JUMP
---
0x32d: JUMPDEST 
0x32e: V301 = 0x237
0x331: V302 = 0x41b
0x334: JUMP 0x41b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237]
Exit stack: [V12, 0x237]

================================

Block 0x335
[0x335:0x346]
---
Predecessors: []
Successors: []
---
0x335 JUMPDEST
0x336 PUSH1 0x40
0x338 MLOAD
0x339 SWAP1
0x33a DUP2
0x33b MSTORE
0x33c PUSH1 0x20
0x33e ADD
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP1
0x343 SWAP2
0x344 SUB
0x345 SWAP1
0x346 RETURN
---
0x335: JUMPDEST 
0x336: V303 = 0x40
0x338: V304 = M[0x40]
0x33b: M[V304] = S0
0x33c: V305 = 0x20
0x33e: V306 = ADD 0x20 V304
0x33f: V307 = 0x40
0x341: V308 = M[0x40]
0x344: V309 = SUB V306 V308
0x346: RETURN V308 V309
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x347
[0x347:0x34d]
---
Predecessors: [0x72]
Successors: [0x34e, 0x352]
---
0x347 JUMPDEST
0x348 CALLVALUE
0x349 ISZERO
0x34a PUSH2 0x352
0x34d JUMPI
---
0x347: JUMPDEST 
0x348: V310 = CALLVALUE
0x349: V311 = ISZERO V310
0x34a: V312 = 0x352
0x34d: JUMPI 0x352 V311
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34e
[0x34e:0x351]
---
Predecessors: [0x347]
Successors: []
---
0x34e PUSH1 0x0
0x350 DUP1
0x351 REVERT
---
0x34e: V313 = 0x0
0x351: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x352
[0x352:0x359]
---
Predecessors: [0x347]
Successors: [0x421]
---
0x352 JUMPDEST
0x353 PUSH2 0x20d
0x356 PUSH2 0x421
0x359 JUMP
---
0x352: JUMPDEST 
0x353: V314 = 0x20d
0x356: V315 = 0x421
0x359: JUMP 0x421
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20d]
Exit stack: [V12, 0x20d]

================================

Block 0x35a
[0x35a:0x35b]
---
Predecessors: []
Successors: []
---
0x35a JUMPDEST
0x35b STOP
---
0x35a: JUMPDEST 
0x35b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x35c
[0x35c:0x365]
---
Predecessors: [0x21a]
Successors: [0x366, 0x3d5]
---
0x35c JUMPDEST
0x35d PUSH1 0x3
0x35f SLOAD
0x360 TIMESTAMP
0x361 LT
0x362 PUSH2 0x3d5
0x365 JUMPI
---
0x35c: JUMPDEST 
0x35d: V316 = 0x3
0x35f: V317 = S[0x3]
0x360: V318 = TIMESTAMP
0x361: V319 = LT V318 V317
0x362: V320 = 0x3d5
0x365: JUMPI 0x3d5 V319
---
Entry stack: [V12, 0x20d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d]

================================

Block 0x366
[0x366:0x3d4]
---
Predecessors: [0x35c]
Successors: [0x3d5]
---
0x366 PUSH1 0x7
0x368 DUP1
0x369 SLOAD
0x36a PUSH1 0xff
0x36c NOT
0x36d AND
0x36e PUSH1 0x1
0x370 OR
0x371 SWAP1
0x372 SSTORE
0x373 PUSH1 0x0
0x375 SLOAD
0x376 PUSH1 0x2
0x378 SLOAD
0x379 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x39a SWAP2
0x39b PUSH1 0x1
0x39d PUSH1 0xa0
0x39f PUSH1 0x2
0x3a1 EXP
0x3a2 SUB
0x3a3 AND
0x3a4 SWAP1
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 PUSH1 0x1
0x3aa PUSH1 0xa0
0x3ac PUSH1 0x2
0x3ae EXP
0x3af SUB
0x3b0 SWAP1
0x3b1 SWAP3
0x3b2 AND
0x3b3 DUP3
0x3b4 MSTORE
0x3b5 PUSH1 0x20
0x3b7 DUP3
0x3b8 ADD
0x3b9 MSTORE
0x3ba PUSH1 0x40
0x3bc SWAP1
0x3bd DUP2
0x3be ADD
0x3bf SWAP1
0x3c0 MLOAD
0x3c1 DUP1
0x3c2 SWAP2
0x3c3 SUB
0x3c4 SWAP1
0x3c5 LOG1
0x3c6 PUSH1 0x7
0x3c8 DUP1
0x3c9 SLOAD
0x3ca PUSH2 0xff00
0x3cd NOT
0x3ce AND
0x3cf PUSH2 0x100
0x3d2 OR
0x3d3 SWAP1
0x3d4 SSTORE
---
0x366: V321 = 0x7
0x369: V322 = S[0x7]
0x36a: V323 = 0xff
0x36c: V324 = NOT 0xff
0x36d: V325 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V322
0x36e: V326 = 0x1
0x370: V327 = OR 0x1 V325
0x372: S[0x7] = V327
0x373: V328 = 0x0
0x375: V329 = S[0x0]
0x376: V330 = 0x2
0x378: V331 = S[0x2]
0x379: V332 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x39b: V333 = 0x1
0x39d: V334 = 0xa0
0x39f: V335 = 0x2
0x3a1: V336 = EXP 0x2 0xa0
0x3a2: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a3: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x3a5: V339 = 0x40
0x3a7: V340 = M[0x40]
0x3a8: V341 = 0x1
0x3aa: V342 = 0xa0
0x3ac: V343 = 0x2
0x3ae: V344 = EXP 0x2 0xa0
0x3af: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b2: V346 = AND V338 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: M[V340] = V346
0x3b5: V347 = 0x20
0x3b8: V348 = ADD V340 0x20
0x3b9: M[V348] = V331
0x3ba: V349 = 0x40
0x3be: V350 = ADD 0x40 V340
0x3c0: V351 = M[0x40]
0x3c3: V352 = SUB V350 V351
0x3c5: LOG V351 V352 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3c6: V353 = 0x7
0x3c9: V354 = S[0x7]
0x3ca: V355 = 0xff00
0x3cd: V356 = NOT 0xff00
0x3ce: V357 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V354
0x3cf: V358 = 0x100
0x3d2: V359 = OR 0x100 V357
0x3d4: S[0x7] = V359
---
Entry stack: [V12, 0x20d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d]

================================

Block 0x3d5
[0x3d5:0x3d5]
---
Predecessors: [0x35c, 0x366]
Successors: [0x3d6]
---
0x3d5 JUMPDEST
---
0x3d5: JUMPDEST 
---
Entry stack: [V12, 0x20d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d]

================================

Block 0x3d6
[0x3d6:0x3d6]
---
Predecessors: [0x3d5]
Successors: [0x3d7]
---
0x3d6 JUMPDEST
---
0x3d6: JUMPDEST 
---
Entry stack: [V12, 0x20d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d]

================================

Block 0x3d7
[0x3d7:0x3d8]
---
Predecessors: [0x3d6]
Successors: [0x20d]
---
0x3d7 JUMPDEST
0x3d8 JUMP
---
0x3d7: JUMPDEST 
0x3d8: JUMP 0x20d
---
Entry stack: [V12, 0x20d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d9
[0x3d9:0x3de]
---
Predecessors: [0x22f]
Successors: [0x237]
---
0x3d9 JUMPDEST
0x3da PUSH1 0x3
0x3dc SLOAD
0x3dd DUP2
0x3de JUMP
---
0x3d9: JUMPDEST 
0x3da: V360 = 0x3
0x3dc: V361 = S[0x3]
0x3de: JUMP 0x237
---
Entry stack: [V12, 0x237]
Stack pops: 1
Stack additions: [S0, V361]
Exit stack: [V12, 0x237, V361]

================================

Block 0x3df
[0x3df:0x3ed]
---
Predecessors: [0x254]
Successors: [0x25c]
---
0x3df JUMPDEST
0x3e0 PUSH1 0x0
0x3e2 SLOAD
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb AND
0x3ec DUP2
0x3ed JUMP
---
0x3df: JUMPDEST 
0x3e0: V362 = 0x0
0x3e2: V363 = S[0x0]
0x3e3: V364 = 0x1
0x3e5: V365 = 0xa0
0x3e7: V366 = 0x2
0x3e9: V367 = EXP 0x2 0xa0
0x3ea: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3eb: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x3ed: JUMP 0x25c
---
Entry stack: [V12, 0x25c]
Stack pops: 1
Stack additions: [S0, V369]
Exit stack: [V12, 0x25c, V369]

================================

Block 0x3ee
[0x3ee:0x3fc]
---
Predecessors: [0x283]
Successors: [0x25c]
---
0x3ee JUMPDEST
0x3ef PUSH1 0x5
0x3f1 SLOAD
0x3f2 PUSH1 0x1
0x3f4 PUSH1 0xa0
0x3f6 PUSH1 0x2
0x3f8 EXP
0x3f9 SUB
0x3fa AND
0x3fb DUP2
0x3fc JUMP
---
0x3ee: JUMPDEST 
0x3ef: V370 = 0x5
0x3f1: V371 = S[0x5]
0x3f2: V372 = 0x1
0x3f4: V373 = 0xa0
0x3f6: V374 = 0x2
0x3f8: V375 = EXP 0x2 0xa0
0x3f9: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fa: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x3fc: JUMP 0x25c
---
Entry stack: [V12, 0x25c]
Stack pops: 1
Stack additions: [S0, V377]
Exit stack: [V12, 0x25c, V377]

================================

Block 0x3fd
[0x3fd:0x40e]
---
Predecessors: [0x2b2]
Successors: [0x237]
---
0x3fd JUMPDEST
0x3fe PUSH1 0x6
0x400 PUSH1 0x20
0x402 MSTORE
0x403 PUSH1 0x0
0x405 SWAP1
0x406 DUP2
0x407 MSTORE
0x408 PUSH1 0x40
0x40a SWAP1
0x40b SHA3
0x40c SLOAD
0x40d DUP2
0x40e JUMP
---
0x3fd: JUMPDEST 
0x3fe: V378 = 0x6
0x400: V379 = 0x20
0x402: M[0x20] = 0x6
0x403: V380 = 0x0
0x407: M[0x0] = V262
0x408: V381 = 0x40
0x40b: V382 = SHA3 0x0 0x40
0x40c: V383 = S[V382]
0x40e: JUMP 0x237
---
Entry stack: [V12, 0x237, V262]
Stack pops: 2
Stack additions: [S1, V383]
Exit stack: [V12, 0x237, V383]

================================

Block 0x40f
[0x40f:0x414]
---
Predecessors: [0x2e3]
Successors: [0x237]
---
0x40f JUMPDEST
0x410 PUSH1 0x1
0x412 SLOAD
0x413 DUP2
0x414 JUMP
---
0x40f: JUMPDEST 
0x410: V384 = 0x1
0x412: V385 = S[0x1]
0x414: JUMP 0x237
---
Entry stack: [V12, 0x237]
Stack pops: 1
Stack additions: [S0, V385]
Exit stack: [V12, 0x237, V385]

================================

Block 0x415
[0x415:0x41a]
---
Predecessors: [0x308]
Successors: [0x237]
---
0x415 JUMPDEST
0x416 PUSH1 0x2
0x418 SLOAD
0x419 DUP2
0x41a JUMP
---
0x415: JUMPDEST 
0x416: V386 = 0x2
0x418: V387 = S[0x2]
0x41a: JUMP 0x237
---
Entry stack: [V12, 0x237]
Stack pops: 1
Stack additions: [S0, V387]
Exit stack: [V12, 0x237, V387]

================================

Block 0x41b
[0x41b:0x420]
---
Predecessors: [0x32d]
Successors: [0x237]
---
0x41b JUMPDEST
0x41c PUSH1 0x4
0x41e SLOAD
0x41f DUP2
0x420 JUMP
---
0x41b: JUMPDEST 
0x41c: V388 = 0x4
0x41e: V389 = S[0x4]
0x420: JUMP 0x237
---
Entry stack: [V12, 0x237]
Stack pops: 1
Stack additions: [S0, V389]
Exit stack: [V12, 0x237, V389]

================================

Block 0x421
[0x421:0x42d]
---
Predecessors: [0x352]
Successors: [0x20a, 0x42e]
---
0x421 JUMPDEST
0x422 PUSH1 0x3
0x424 SLOAD
0x425 PUSH1 0x0
0x427 SWAP1
0x428 TIMESTAMP
0x429 LT
0x42a PUSH2 0x20a
0x42d JUMPI
---
0x421: JUMPDEST 
0x422: V390 = 0x3
0x424: V391 = S[0x3]
0x425: V392 = 0x0
0x428: V393 = TIMESTAMP
0x429: V394 = LT V393 V391
0x42a: V395 = 0x20a
0x42d: JUMPI 0x20a V394
---
Entry stack: [V12, 0x20d]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x20d, 0x0]

================================

Block 0x42e
[0x42e:0x439]
---
Predecessors: [0x421]
Successors: [0x43a, 0x500]
---
0x42e PUSH1 0x7
0x430 SLOAD
0x431 PUSH1 0xff
0x433 AND
0x434 ISZERO
0x435 ISZERO
0x436 PUSH2 0x500
0x439 JUMPI
---
0x42e: V396 = 0x7
0x430: V397 = S[0x7]
0x431: V398 = 0xff
0x433: V399 = AND 0xff V397
0x434: V400 = ISZERO V399
0x435: V401 = ISZERO V400
0x436: V402 = 0x500
0x439: JUMPI 0x500 V401
---
Entry stack: [V12, 0x20d, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, 0x0]

================================

Block 0x43a
[0x43a:0x460]
---
Predecessors: [0x42e]
Successors: [0x461, 0x500]
---
0x43a POP
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 CALLER
0x444 AND
0x445 PUSH1 0x0
0x447 SWAP1
0x448 DUP2
0x449 MSTORE
0x44a PUSH1 0x6
0x44c PUSH1 0x20
0x44e MSTORE
0x44f PUSH1 0x40
0x451 DUP2
0x452 SHA3
0x453 DUP1
0x454 SLOAD
0x455 SWAP1
0x456 DUP3
0x457 SWAP1
0x458 SSTORE
0x459 SWAP1
0x45a DUP2
0x45b GT
0x45c ISZERO
0x45d PUSH2 0x500
0x460 JUMPI
---
0x43b: V403 = 0x1
0x43d: V404 = 0xa0
0x43f: V405 = 0x2
0x441: V406 = EXP 0x2 0xa0
0x442: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x443: V408 = CALLER
0x444: V409 = AND V408 0xffffffffffffffffffffffffffffffffffffffff
0x445: V410 = 0x0
0x449: M[0x0] = V409
0x44a: V411 = 0x6
0x44c: V412 = 0x20
0x44e: M[0x20] = 0x6
0x44f: V413 = 0x40
0x452: V414 = SHA3 0x0 0x40
0x454: V415 = S[V414]
0x458: S[V414] = 0x0
0x45b: V416 = GT V415 0x0
0x45c: V417 = ISZERO V416
0x45d: V418 = 0x500
0x460: JUMPI 0x500 V417
---
Entry stack: [V12, 0x20d, 0x0]
Stack pops: 1
Stack additions: [V415]
Exit stack: [V12, 0x20d, V415]

================================

Block 0x461
[0x461:0x48b]
---
Predecessors: [0x43a]
Successors: [0x48c, 0x4e4]
---
0x461 PUSH1 0x1
0x463 PUSH1 0xa0
0x465 PUSH1 0x2
0x467 EXP
0x468 SUB
0x469 CALLER
0x46a AND
0x46b DUP2
0x46c ISZERO
0x46d PUSH2 0x8fc
0x470 MUL
0x471 DUP3
0x472 PUSH1 0x40
0x474 MLOAD
0x475 PUSH1 0x0
0x477 PUSH1 0x40
0x479 MLOAD
0x47a DUP1
0x47b DUP4
0x47c SUB
0x47d DUP2
0x47e DUP6
0x47f DUP9
0x480 DUP9
0x481 CALL
0x482 SWAP4
0x483 POP
0x484 POP
0x485 POP
0x486 POP
0x487 ISZERO
0x488 PUSH2 0x4e4
0x48b JUMPI
---
0x461: V419 = 0x1
0x463: V420 = 0xa0
0x465: V421 = 0x2
0x467: V422 = EXP 0x2 0xa0
0x468: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x469: V424 = CALLER
0x46a: V425 = AND V424 0xffffffffffffffffffffffffffffffffffffffff
0x46c: V426 = ISZERO V415
0x46d: V427 = 0x8fc
0x470: V428 = MUL 0x8fc V426
0x472: V429 = 0x40
0x474: V430 = M[0x40]
0x475: V431 = 0x0
0x477: V432 = 0x40
0x479: V433 = M[0x40]
0x47c: V434 = SUB V430 V433
0x481: V435 = CALL V428 V425 V415 V433 V434 V433 0x0
0x487: V436 = ISZERO V435
0x488: V437 = 0x4e4
0x48b: JUMPI 0x4e4 V436
---
Entry stack: [V12, 0x20d, V415]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x20d, V415]

================================

Block 0x48c
[0x48c:0x4e3]
---
Predecessors: [0x461]
Successors: [0x500]
---
0x48c PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4ad CALLER
0x4ae DUP3
0x4af PUSH1 0x0
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 PUSH1 0x2
0x4ba EXP
0x4bb SUB
0x4bc SWAP1
0x4bd SWAP4
0x4be AND
0x4bf DUP4
0x4c0 MSTORE
0x4c1 PUSH1 0x20
0x4c3 DUP4
0x4c4 ADD
0x4c5 SWAP2
0x4c6 SWAP1
0x4c7 SWAP2
0x4c8 MSTORE
0x4c9 ISZERO
0x4ca ISZERO
0x4cb PUSH1 0x40
0x4cd DUP1
0x4ce DUP4
0x4cf ADD
0x4d0 SWAP2
0x4d1 SWAP1
0x4d2 SWAP2
0x4d3 MSTORE
0x4d4 PUSH1 0x60
0x4d6 SWAP1
0x4d7 SWAP2
0x4d8 ADD
0x4d9 SWAP1
0x4da MLOAD
0x4db DUP1
0x4dc SWAP2
0x4dd SUB
0x4de SWAP1
0x4df LOG1
0x4e0 PUSH2 0x500
0x4e3 JUMP
---
0x48c: V438 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4ad: V439 = CALLER
0x4af: V440 = 0x0
0x4b1: V441 = 0x40
0x4b3: V442 = M[0x40]
0x4b4: V443 = 0x1
0x4b6: V444 = 0xa0
0x4b8: V445 = 0x2
0x4ba: V446 = EXP 0x2 0xa0
0x4bb: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4be: V448 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0x4c0: M[V442] = V448
0x4c1: V449 = 0x20
0x4c4: V450 = ADD V442 0x20
0x4c8: M[V450] = V415
0x4c9: V451 = ISZERO 0x0
0x4ca: V452 = ISZERO 0x1
0x4cb: V453 = 0x40
0x4cf: V454 = ADD V442 0x40
0x4d3: M[V454] = 0x0
0x4d4: V455 = 0x60
0x4d8: V456 = ADD V442 0x60
0x4da: V457 = M[0x40]
0x4dd: V458 = SUB V456 V457
0x4df: LOG V457 V458 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4e0: V459 = 0x500
0x4e3: JUMP 0x500
---
Entry stack: [V12, 0x20d, V415]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x20d, V415]

================================

Block 0x4e4
[0x4e4:0x4ff]
---
Predecessors: [0x461]
Successors: [0x500]
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0xa0
0x4e9 PUSH1 0x2
0x4eb EXP
0x4ec SUB
0x4ed CALLER
0x4ee AND
0x4ef PUSH1 0x0
0x4f1 SWAP1
0x4f2 DUP2
0x4f3 MSTORE
0x4f4 PUSH1 0x6
0x4f6 PUSH1 0x20
0x4f8 MSTORE
0x4f9 PUSH1 0x40
0x4fb SWAP1
0x4fc SHA3
0x4fd DUP2
0x4fe SWAP1
0x4ff SSTORE
---
0x4e4: JUMPDEST 
0x4e5: V460 = 0x1
0x4e7: V461 = 0xa0
0x4e9: V462 = 0x2
0x4eb: V463 = EXP 0x2 0xa0
0x4ec: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ed: V465 = CALLER
0x4ee: V466 = AND V465 0xffffffffffffffffffffffffffffffffffffffff
0x4ef: V467 = 0x0
0x4f3: M[0x0] = V466
0x4f4: V468 = 0x6
0x4f6: V469 = 0x20
0x4f8: M[0x20] = 0x6
0x4f9: V470 = 0x40
0x4fc: V471 = SHA3 0x0 0x40
0x4ff: S[V471] = V415
---
Entry stack: [V12, 0x20d, V415]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x20d, V415]

================================

Block 0x500
[0x500:0x500]
---
Predecessors: [0x42e, 0x43a, 0x48c, 0x4e4]
Successors: [0x501]
---
0x500 JUMPDEST
---
0x500: JUMPDEST 
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, S0]

================================

Block 0x501
[0x501:0x501]
---
Predecessors: [0x500]
Successors: [0x502]
---
0x501 JUMPDEST
---
0x501: JUMPDEST 
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, S0]

================================

Block 0x502
[0x502:0x50e]
---
Predecessors: [0x501]
Successors: [0x50f, 0x522]
---
0x502 JUMPDEST
0x503 PUSH1 0x7
0x505 SLOAD
0x506 PUSH1 0xff
0x508 AND
0x509 DUP1
0x50a ISZERO
0x50b PUSH2 0x522
0x50e JUMPI
---
0x502: JUMPDEST 
0x503: V472 = 0x7
0x505: V473 = S[0x7]
0x506: V474 = 0xff
0x508: V475 = AND 0xff V473
0x50a: V476 = ISZERO V475
0x50b: V477 = 0x522
0x50e: JUMPI 0x522 V476
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: [V475]
Exit stack: [V12, 0x20d, S0, V475]

================================

Block 0x50f
[0x50f:0x521]
---
Predecessors: [0x502]
Successors: [0x522]
---
0x50f POP
0x510 PUSH1 0x0
0x512 SLOAD
0x513 CALLER
0x514 PUSH1 0x1
0x516 PUSH1 0xa0
0x518 PUSH1 0x2
0x51a EXP
0x51b SUB
0x51c SWAP1
0x51d DUP2
0x51e AND
0x51f SWAP2
0x520 AND
0x521 EQ
---
0x510: V478 = 0x0
0x512: V479 = S[0x0]
0x513: V480 = CALLER
0x514: V481 = 0x1
0x516: V482 = 0xa0
0x518: V483 = 0x2
0x51a: V484 = EXP 0x2 0xa0
0x51b: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51e: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x520: V487 = AND V479 0xffffffffffffffffffffffffffffffffffffffff
0x521: V488 = EQ V487 V486
---
Entry stack: [V12, 0x20d, S1, V475]
Stack pops: 1
Stack additions: [V488]
Exit stack: [V12, 0x20d, S1, V488]

================================

Block 0x522
[0x522:0x527]
---
Predecessors: [0x502, 0x50f]
Successors: [0x20a, 0x528]
---
0x522 JUMPDEST
0x523 ISZERO
0x524 PUSH2 0x20a
0x527 JUMPI
---
0x522: JUMPDEST 
0x523: V489 = ISZERO S0
0x524: V490 = 0x20a
0x527: JUMPI 0x20a V489
---
Entry stack: [V12, 0x20d, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x20d, S1]

================================

Block 0x528
[0x528:0x55a]
---
Predecessors: [0x522]
Successors: [0x55b, 0x5c3]
---
0x528 PUSH1 0x0
0x52a SLOAD
0x52b PUSH1 0x2
0x52d SLOAD
0x52e PUSH1 0x1
0x530 PUSH1 0xa0
0x532 PUSH1 0x2
0x534 EXP
0x535 SUB
0x536 SWAP1
0x537 SWAP2
0x538 AND
0x539 SWAP1
0x53a DUP1
0x53b ISZERO
0x53c PUSH2 0x8fc
0x53f MUL
0x540 SWAP1
0x541 PUSH1 0x40
0x543 MLOAD
0x544 PUSH1 0x0
0x546 PUSH1 0x40
0x548 MLOAD
0x549 DUP1
0x54a DUP4
0x54b SUB
0x54c DUP2
0x54d DUP6
0x54e DUP9
0x54f DUP9
0x550 CALL
0x551 SWAP4
0x552 POP
0x553 POP
0x554 POP
0x555 POP
0x556 ISZERO
0x557 PUSH2 0x5c3
0x55a JUMPI
---
0x528: V491 = 0x0
0x52a: V492 = S[0x0]
0x52b: V493 = 0x2
0x52d: V494 = S[0x2]
0x52e: V495 = 0x1
0x530: V496 = 0xa0
0x532: V497 = 0x2
0x534: V498 = EXP 0x2 0xa0
0x535: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x538: V500 = AND V492 0xffffffffffffffffffffffffffffffffffffffff
0x53b: V501 = ISZERO V494
0x53c: V502 = 0x8fc
0x53f: V503 = MUL 0x8fc V501
0x541: V504 = 0x40
0x543: V505 = M[0x40]
0x544: V506 = 0x0
0x546: V507 = 0x40
0x548: V508 = M[0x40]
0x54b: V509 = SUB V505 V508
0x550: V510 = CALL V503 V500 V494 V508 V509 V508 0x0
0x556: V511 = ISZERO V510
0x557: V512 = 0x5c3
0x55a: JUMPI 0x5c3 V511
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, S0]

================================

Block 0x55b
[0x55b:0x5c2]
---
Predecessors: [0x528]
Successors: [0x20a]
---
0x55b PUSH1 0x0
0x55d DUP1
0x55e SLOAD
0x55f PUSH1 0x2
0x561 SLOAD
0x562 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x583 SWAP3
0x584 PUSH1 0x1
0x586 PUSH1 0xa0
0x588 PUSH1 0x2
0x58a EXP
0x58b SUB
0x58c SWAP1
0x58d SWAP3
0x58e AND
0x58f SWAP2
0x590 PUSH1 0x40
0x592 MLOAD
0x593 PUSH1 0x1
0x595 PUSH1 0xa0
0x597 PUSH1 0x2
0x599 EXP
0x59a SUB
0x59b SWAP1
0x59c SWAP4
0x59d AND
0x59e DUP4
0x59f MSTORE
0x5a0 PUSH1 0x20
0x5a2 DUP4
0x5a3 ADD
0x5a4 SWAP2
0x5a5 SWAP1
0x5a6 SWAP2
0x5a7 MSTORE
0x5a8 ISZERO
0x5a9 ISZERO
0x5aa PUSH1 0x40
0x5ac DUP1
0x5ad DUP4
0x5ae ADD
0x5af SWAP2
0x5b0 SWAP1
0x5b1 SWAP2
0x5b2 MSTORE
0x5b3 PUSH1 0x60
0x5b5 SWAP1
0x5b6 SWAP2
0x5b7 ADD
0x5b8 SWAP1
0x5b9 MLOAD
0x5ba DUP1
0x5bb SWAP2
0x5bc SUB
0x5bd SWAP1
0x5be LOG1
0x5bf PUSH2 0x20a
0x5c2 JUMP
---
0x55b: V513 = 0x0
0x55e: V514 = S[0x0]
0x55f: V515 = 0x2
0x561: V516 = S[0x2]
0x562: V517 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x584: V518 = 0x1
0x586: V519 = 0xa0
0x588: V520 = 0x2
0x58a: V521 = EXP 0x2 0xa0
0x58b: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58e: V523 = AND V514 0xffffffffffffffffffffffffffffffffffffffff
0x590: V524 = 0x40
0x592: V525 = M[0x40]
0x593: V526 = 0x1
0x595: V527 = 0xa0
0x597: V528 = 0x2
0x599: V529 = EXP 0x2 0xa0
0x59a: V530 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59d: V531 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x59f: M[V525] = V531
0x5a0: V532 = 0x20
0x5a3: V533 = ADD V525 0x20
0x5a7: M[V533] = V516
0x5a8: V534 = ISZERO 0x0
0x5a9: V535 = ISZERO 0x1
0x5aa: V536 = 0x40
0x5ae: V537 = ADD V525 0x40
0x5b2: M[V537] = 0x0
0x5b3: V538 = 0x60
0x5b7: V539 = ADD V525 0x60
0x5b9: V540 = M[0x40]
0x5bc: V541 = SUB V539 V540
0x5be: LOG V540 V541 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5bf: V542 = 0x20a
0x5c2: JUMP 0x20a
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, S0]

================================

Block 0x5c3
[0x5c3:0x5cd]
---
Predecessors: [0x528]
Successors: [0x5ce]
---
0x5c3 JUMPDEST
0x5c4 PUSH1 0x7
0x5c6 DUP1
0x5c7 SLOAD
0x5c8 PUSH1 0xff
0x5ca NOT
0x5cb AND
0x5cc SWAP1
0x5cd SSTORE
---
0x5c3: JUMPDEST 
0x5c4: V543 = 0x7
0x5c7: V544 = S[0x7]
0x5c8: V545 = 0xff
0x5ca: V546 = NOT 0xff
0x5cb: V547 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V544
0x5cd: S[0x7] = V547
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, S0]

================================

Block 0x5ce
[0x5ce:0x5ce]
---
Predecessors: [0x5c3]
Successors: [0x5cf]
---
0x5ce JUMPDEST
---
0x5ce: JUMPDEST 
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, S0]

================================

Block 0x5cf
[0x5cf:0x5cf]
---
Predecessors: [0x5ce]
Successors: [0x5d0]
---
0x5cf JUMPDEST
---
0x5cf: JUMPDEST 
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, S0]

================================

Block 0x5d0
[0x5d0:0x5d0]
---
Predecessors: [0x5cf]
Successors: [0x5d1]
---
0x5d0 JUMPDEST
---
0x5d0: JUMPDEST 
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, S0]

================================

Block 0x5d1
[0x5d1:0x5d1]
---
Predecessors: [0x5d0]
Successors: [0x5d2]
---
0x5d1 JUMPDEST
---
0x5d1: JUMPDEST 
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x20d, S0]

================================

Block 0x5d2
[0x5d2:0x5d4]
---
Predecessors: [0x5d1]
Successors: [0x20d]
---
0x5d2 JUMPDEST
0x5d3 POP
0x5d4 JUMP
---
0x5d2: JUMPDEST 
0x5d4: JUMP 0x20d
---
Entry stack: [V12, 0x20d, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5d5
[0x5d5:0x600]
---
Predecessors: []
Successors: []
---
0x5d5 STOP
0x5d6 LOG1
0x5d7 PUSH6 0x627a7a723058
0x5de SHA3
0x5df SWAP4
0x5e0 LT
0x5e1 SWAP1
0x5e2 INVALID
0x5e3 SWAP11
0x5e4 SWAP6
0x5e5 PUSH2 0xce89
0x5e8 PUSH13 0x1fe286fd8fec976e5a50bcdd30
0x5f6 MISSING 0xe7
0x5f7 MISSING 0xcd
0x5f8 MISSING 0xbb
0x5f9 MISSING 0xed
0x5fa CALLDATALOAD
0x5fb MISSING 0x24
0x5fc LOG1
0x5fd RETURN
0x5fe JUMP
0x5ff STOP
0x600 MISSING 0x29
---
0x5d5: STOP 
0x5d6: LOG S0 S1 S2
0x5d7: V548 = 0x627a7a723058
0x5de: V549 = SHA3 0x627a7a723058 S3
0x5e0: V550 = LT S7 S4
0x5e2: INVALID 
0x5e5: V551 = 0xce89
0x5e8: V552 = 0x1fe286fd8fec976e5a50bcdd30
0x5f6: MISSING 0xe7
0x5f7: MISSING 0xcd
0x5f8: MISSING 0xbb
0x5f9: MISSING 0xed
0x5fa: V553 = CALLDATALOAD S0
0x5fb: MISSING 0x24
0x5fc: LOG S0 S1 S2
0x5fd: RETURN S3 S4
0x5fe: JUMP S0
0x5ff: STOP 
0x600: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, V550, S6, V549, 0x1fe286fd8fec976e5a50bcdd30, 0xce89, S6, S1, S2, S3, S4, S5, S11, S7, S8, S9, S10, S0, V553]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x20f
Exit block: 0x20d
Body: 0x20d, 0x20f, 0x216, 0x21a, 0x35c, 0x366, 0x3d5, 0x3d6, 0x3d7

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x224
Exit block: 0x237
Body: 0x224, 0x22b, 0x22f, 0x237, 0x3d9

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x249
Exit block: 0x25c
Body: 0x249, 0x250, 0x254, 0x25c, 0x3df

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x278
Exit block: 0x25c
Body: 0x25c, 0x278, 0x27f, 0x283, 0x3ee

Function 4:
Public function signature: 0x70a08231
Entry block: 0x2a7
Exit block: 0x237
Body: 0x237, 0x2a7, 0x2ae, 0x2b2, 0x3fd

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x2d8
Exit block: 0x237
Body: 0x237, 0x2d8, 0x2df, 0x2e3, 0x40f

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2fd
Exit block: 0x237
Body: 0x237, 0x2fd, 0x304, 0x308, 0x415

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x322
Exit block: 0x237
Body: 0x237, 0x322, 0x329, 0x32d, 0x41b

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x347
Exit block: 0x20d
Body: 0x20a, 0x20d, 0x347, 0x34e, 0x352, 0x421, 0x42e, 0x43a, 0x461, 0x48c, 0x4e4, 0x500, 0x501, 0x502, 0x50f, 0x522, 0x528, 0x55b, 0x5c3, 0x5ce, 0x5cf, 0x5d0, 0x5d1, 0x5d2

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x20d
Body: 0x7d, 0x81, 0x96, 0x9a, 0xdb, 0xdc, 0x11c, 0x120, 0x12d, 0x131, 0x15c, 0x15d, 0x19d, 0x1a1, 0x1ae, 0x1b2, 0x20a, 0x20d

