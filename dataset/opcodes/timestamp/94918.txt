Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x122]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x122
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x122
0xa: JUMPI 0x122 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x486]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x4c98b2b
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x486
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x4c98b2b
0x20: V14 = EQ V12 0x4c98b2b
0x21: V15 = 0x486
0x24: JUMPI 0x486 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x49b]
---
0x25 DUP1
0x26 PUSH4 0x22a92c45
0x2b EQ
0x2c PUSH2 0x49b
0x2f JUMPI
---
0x26: V16 = 0x22a92c45
0x2b: V17 = EQ 0x22a92c45 V12
0x2c: V18 = 0x49b
0x2f: JUMPI 0x49b V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x4b0]
---
0x30 DUP1
0x31 PUSH4 0x26a21575
0x36 EQ
0x37 PUSH2 0x4b0
0x3a JUMPI
---
0x31: V19 = 0x26a21575
0x36: V20 = EQ 0x26a21575 V12
0x37: V21 = 0x4b0
0x3a: JUMPI 0x4b0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x4d5]
---
0x3b DUP1
0x3c PUSH4 0x29dacb60
0x41 EQ
0x42 PUSH2 0x4d5
0x45 JUMPI
---
0x3c: V22 = 0x29dacb60
0x41: V23 = EQ 0x29dacb60 V12
0x42: V24 = 0x4d5
0x45: JUMPI 0x4d5 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x4fa]
---
0x46 DUP1
0x47 PUSH4 0x372c12b1
0x4c EQ
0x4d PUSH2 0x4fa
0x50 JUMPI
---
0x47: V25 = 0x372c12b1
0x4c: V26 = EQ 0x372c12b1 V12
0x4d: V27 = 0x4fa
0x50: JUMPI 0x4fa V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x55c]
---
0x51 DUP1
0x52 PUSH4 0x3784f000
0x57 EQ
0x58 PUSH2 0x55c
0x5b JUMPI
---
0x52: V28 = 0x3784f000
0x57: V29 = EQ 0x3784f000 V12
0x58: V30 = 0x55c
0x5b: JUMPI 0x55c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x574]
---
0x5c DUP1
0x5d PUSH4 0x3f4ba83a
0x62 EQ
0x63 PUSH2 0x574
0x66 JUMPI
---
0x5d: V31 = 0x3f4ba83a
0x62: V32 = EQ 0x3f4ba83a V12
0x63: V33 = 0x574
0x66: JUMPI 0x574 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x589]
---
0x67 DUP1
0x68 PUSH4 0x55d4956f
0x6d EQ
0x6e PUSH2 0x589
0x71 JUMPI
---
0x68: V34 = 0x55d4956f
0x6d: V35 = EQ 0x55d4956f V12
0x6e: V36 = 0x589
0x71: JUMPI 0x589 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x5a1]
---
0x72 DUP1
0x73 PUSH4 0x5c975abb
0x78 EQ
0x79 PUSH2 0x5a1
0x7c JUMPI
---
0x73: V37 = 0x5c975abb
0x78: V38 = EQ 0x5c975abb V12
0x79: V39 = 0x5a1
0x7c: JUMPI 0x5a1 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x5c8]
---
0x7d DUP1
0x7e PUSH4 0x6a4967d6
0x83 EQ
0x84 PUSH2 0x5c8
0x87 JUMPI
---
0x7e: V40 = 0x6a4967d6
0x83: V41 = EQ 0x6a4967d6 V12
0x84: V42 = 0x5c8
0x87: JUMPI 0x5c8 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x5f8]
---
0x88 DUP1
0x89 PUSH4 0x76f187ab
0x8e EQ
0x8f PUSH2 0x5f8
0x92 JUMPI
---
0x89: V43 = 0x76f187ab
0x8e: V44 = EQ 0x76f187ab V12
0x8f: V45 = 0x5f8
0x92: JUMPI 0x5f8 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x61f]
---
0x93 DUP1
0x94 PUSH4 0x7d851c70
0x99 EQ
0x9a PUSH2 0x61f
0x9d JUMPI
---
0x94: V46 = 0x7d851c70
0x99: V47 = EQ 0x7d851c70 V12
0x9a: V48 = 0x61f
0x9d: JUMPI 0x61f V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x634]
---
0x9e DUP1
0x9f PUSH4 0x82b2e257
0xa4 EQ
0xa5 PUSH2 0x634
0xa8 JUMPI
---
0x9f: V49 = 0x82b2e257
0xa4: V50 = EQ 0x82b2e257 V12
0xa5: V51 = 0x634
0xa8: JUMPI 0x634 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x659]
---
0xa9 DUP1
0xaa PUSH4 0x8456cb59
0xaf EQ
0xb0 PUSH2 0x659
0xb3 JUMPI
---
0xaa: V52 = 0x8456cb59
0xaf: V53 = EQ 0x8456cb59 V12
0xb0: V54 = 0x659
0xb3: JUMPI 0x659 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x66e]
---
0xb4 DUP1
0xb5 PUSH4 0x8da5cb5b
0xba EQ
0xbb PUSH2 0x66e
0xbe JUMPI
---
0xb5: V55 = 0x8da5cb5b
0xba: V56 = EQ 0x8da5cb5b V12
0xbb: V57 = 0x66e
0xbe: JUMPI 0x66e V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x69d]
---
0xbf DUP1
0xc0 PUSH4 0x8f36039c
0xc5 EQ
0xc6 PUSH2 0x69d
0xc9 JUMPI
---
0xc0: V58 = 0x8f36039c
0xc5: V59 = EQ 0x8f36039c V12
0xc6: V60 = 0x69d
0xc9: JUMPI 0x69d V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x6cc]
---
0xca DUP1
0xcb PUSH4 0xa0ef91df
0xd0 EQ
0xd1 PUSH2 0x6cc
0xd4 JUMPI
---
0xcb: V61 = 0xa0ef91df
0xd0: V62 = EQ 0xa0ef91df V12
0xd1: V63 = 0x6cc
0xd4: JUMPI 0x6cc V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x6e1]
---
0xd5 DUP1
0xd6 PUSH4 0xa43be57b
0xdb EQ
0xdc PUSH2 0x6e1
0xdf JUMPI
---
0xd6: V64 = 0xa43be57b
0xdb: V65 = EQ 0xa43be57b V12
0xdc: V66 = 0x6e1
0xdf: JUMPI 0x6e1 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x6f6]
---
0xe0 DUP1
0xe1 PUSH4 0xc19d93fb
0xe6 EQ
0xe7 PUSH2 0x6f6
0xea JUMPI
---
0xe1: V67 = 0xc19d93fb
0xe6: V68 = EQ 0xc19d93fb V12
0xe7: V69 = 0x6f6
0xea: JUMPI 0x6f6 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x72d]
---
0xeb DUP1
0xec PUSH4 0xc24a0f8b
0xf1 EQ
0xf2 PUSH2 0x72d
0xf5 JUMPI
---
0xec: V70 = 0xc24a0f8b
0xf1: V71 = EQ 0xc24a0f8b V12
0xf2: V72 = 0x72d
0xf5: JUMPI 0x72d V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x752]
---
0xf6 DUP1
0xf7 PUSH4 0xd7d88043
0xfc EQ
0xfd PUSH2 0x752
0x100 JUMPI
---
0xf7: V73 = 0xd7d88043
0xfc: V74 = EQ 0xd7d88043 V12
0xfd: V75 = 0x752
0x100: JUMPI 0x752 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x777]
---
0x101 DUP1
0x102 PUSH4 0xf2fde38b
0x107 EQ
0x108 PUSH2 0x777
0x10b JUMPI
---
0x102: V76 = 0xf2fde38b
0x107: V77 = EQ 0xf2fde38b V12
0x108: V78 = 0x777
0x10b: JUMPI 0x777 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x798]
---
0x10c DUP1
0x10d PUSH4 0xfc0c546a
0x112 EQ
0x113 PUSH2 0x798
0x116 JUMPI
---
0x10d: V79 = 0xfc0c546a
0x112: V80 = EQ 0xfc0c546a V12
0x113: V81 = 0x798
0x116: JUMPI 0x798 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0x7c7]
---
0x117 DUP1
0x118 PUSH4 0xfddf0fc0
0x11d EQ
0x11e PUSH2 0x7c7
0x121 JUMPI
---
0x118: V82 = 0xfddf0fc0
0x11d: V83 = EQ 0xfddf0fc0 V12
0x11e: V84 = 0x7c7
0x121: JUMPI 0x7c7 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x122]
---
Predecessors: [0x0, 0x117]
Successors: [0x123]
---
0x122 JUMPDEST
---
0x122: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x122]
Successors: [0x14a0]
---
0x123 JUMPDEST
0x124 PUSH2 0x12b
0x127 PUSH2 0x14a0
0x12a JUMP
---
0x123: JUMPDEST 
0x124: V85 = 0x12b
0x127: V86 = 0x14a0
0x12a: JUMP 0x14a0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V12, 0x12b]

================================

Block 0x12b
[0x12b:0x13e]
---
Predecessors: [0x14a0]
Successors: [0x13f, 0x143]
---
0x12b JUMPDEST
0x12c PUSH1 0x0
0x12e DUP1
0x12f SLOAD
0x130 PUSH1 0xa0
0x132 PUSH1 0x2
0x134 EXP
0x135 SWAP1
0x136 DIV
0x137 PUSH1 0xff
0x139 AND
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0x12b: JUMPDEST 
0x12c: V87 = 0x0
0x12f: V88 = S[0x0]
0x130: V89 = 0xa0
0x132: V90 = 0x2
0x134: V91 = EXP 0x2 0xa0
0x136: V92 = DIV V88 0x10000000000000000000000000000000000000000
0x137: V93 = 0xff
0x139: V94 = AND 0xff V92
0x13a: V95 = ISZERO V94
0x13b: V96 = 0x143
0x13e: JUMPI 0x143 V95
---
Entry stack: [V12, V1913]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, V1913, 0x0]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0x12b]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V97 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x143
[0x143:0x145]
---
Predecessors: [0x12b]
Successors: [0x146]
---
0x143 JUMPDEST
0x144 PUSH1 0x1
---
0x143: JUMPDEST 
0x144: V98 = 0x1
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, V1913, 0x0, 0x1]

================================

Block 0x146
[0x146:0x15c]
---
Predecessors: [0x143]
Successors: [0x15d, 0x15e]
---
0x146 JUMPDEST
0x147 PUSH1 0x2
0x149 DUP1
0x14a SLOAD
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SWAP1
0x151 DIV
0x152 PUSH1 0xff
0x154 AND
0x155 SWAP1
0x156 DUP2
0x157 GT
0x158 ISZERO
0x159 PUSH2 0x15e
0x15c JUMPI
---
0x146: JUMPDEST 
0x147: V99 = 0x2
0x14a: V100 = S[0x2]
0x14b: V101 = 0xa0
0x14d: V102 = 0x2
0x14f: V103 = EXP 0x2 0xa0
0x151: V104 = DIV V100 0x10000000000000000000000000000000000000000
0x152: V105 = 0xff
0x154: V106 = AND 0xff V104
0x157: V107 = GT V106 0x2
0x158: V108 = ISZERO V107
0x159: V109 = 0x15e
0x15c: JUMPI 0x15e V108
---
Entry stack: [V12, V1913, 0x0, 0x1]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V12, V1913, 0x0, 0x1, V106]

================================

Block 0x15d
[0x15d:0x15d]
---
Predecessors: [0x146]
Successors: []
---
0x15d INVALID
---
0x15d: INVALID 
---
Entry stack: [V12, V1913, 0x0, 0x1, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0, 0x1, V106]

================================

Block 0x15e
[0x15e:0x163]
---
Predecessors: [0x146]
Successors: [0x164, 0x168]
---
0x15e JUMPDEST
0x15f EQ
0x160 PUSH2 0x168
0x163 JUMPI
---
0x15e: JUMPDEST 
0x15f: V110 = EQ V106 0x1
0x160: V111 = 0x168
0x163: JUMPI 0x168 V110
---
Entry stack: [V12, V1913, 0x0, 0x1, V106]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x15e]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V112 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x168
[0x168:0x178]
---
Predecessors: [0x15e]
Successors: [0x179, 0x17d]
---
0x168 JUMPDEST
0x169 PUSH8 0x429d069189e0000
0x172 CALLVALUE
0x173 LT
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x168: JUMPDEST 
0x169: V113 = 0x429d069189e0000
0x172: V114 = CALLVALUE
0x173: V115 = LT V114 0x429d069189e0000
0x174: V116 = ISZERO V115
0x175: V117 = 0x17d
0x178: JUMPI 0x17d V116
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x168]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V118 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x17d
[0x17d:0x19f]
---
Predecessors: [0x168]
Successors: [0x1a0, 0x1a4]
---
0x17d JUMPDEST
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 CALLER
0x187 AND
0x188 PUSH1 0x0
0x18a SWAP1
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0xa
0x18f PUSH1 0x20
0x191 MSTORE
0x192 PUSH1 0x40
0x194 SWAP1
0x195 SHA3
0x196 SLOAD
0x197 PUSH1 0xff
0x199 AND
0x19a ISZERO
0x19b ISZERO
0x19c PUSH2 0x1a4
0x19f JUMPI
---
0x17d: JUMPDEST 
0x17e: V119 = 0x1
0x180: V120 = 0xa0
0x182: V121 = 0x2
0x184: V122 = EXP 0x2 0xa0
0x185: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V124 = CALLER
0x187: V125 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x188: V126 = 0x0
0x18c: M[0x0] = V125
0x18d: V127 = 0xa
0x18f: V128 = 0x20
0x191: M[0x20] = 0xa
0x192: V129 = 0x40
0x195: V130 = SHA3 0x0 0x40
0x196: V131 = S[V130]
0x197: V132 = 0xff
0x199: V133 = AND 0xff V131
0x19a: V134 = ISZERO V133
0x19b: V135 = ISZERO V134
0x19c: V136 = 0x1a4
0x19f: JUMPI 0x1a4 V135
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x1a0
[0x1a0:0x1a3]
---
Predecessors: [0x17d]
Successors: []
---
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 REVERT
---
0x1a0: V137 = 0x0
0x1a3: REVERT 0x0 0x0
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x1a4
[0x1a4:0x1ae]
---
Predecessors: [0x17d]
Successors: [0x1af, 0x20f]
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x3
0x1a7 SLOAD
0x1a8 TIMESTAMP
0x1a9 GT
0x1aa ISZERO
0x1ab PUSH2 0x20f
0x1ae JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V138 = 0x3
0x1a7: V139 = S[0x3]
0x1a8: V140 = TIMESTAMP
0x1a9: V141 = GT V140 V139
0x1aa: V142 = ISZERO V141
0x1ab: V143 = 0x20f
0x1ae: JUMPI 0x20f V142
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x1af
[0x1af:0x1d2]
---
Predecessors: [0x1a4]
Successors: [0x1d3]
---
0x1af PUSH1 0x2
0x1b1 DUP1
0x1b2 SLOAD
0x1b3 DUP2
0x1b4 SWAP1
0x1b5 PUSH21 0xff0000000000000000000000000000000000000000
0x1cb NOT
0x1cc AND
0x1cd PUSH1 0xa0
0x1cf PUSH1 0x2
0x1d1 EXP
0x1d2 DUP3
---
0x1af: V144 = 0x2
0x1b2: V145 = S[0x2]
0x1b5: V146 = 0xff0000000000000000000000000000000000000000
0x1cb: V147 = NOT 0xff0000000000000000000000000000000000000000
0x1cc: V148 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V145
0x1cd: V149 = 0xa0
0x1cf: V150 = 0x2
0x1d1: V151 = EXP 0x2 0xa0
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: [0x2, 0x2, V148, 0x10000000000000000000000000000000000000000, 0x2]
Exit stack: [V12, V1913, 0x0, 0x2, 0x2, V148, 0x10000000000000000000000000000000000000000, 0x2]

================================

Block 0x1d3
[0x1d3:0x205]
---
Predecessors: [0x1af]
Successors: [0x206, 0x20a]
---
0x1d3 JUMPDEST
0x1d4 MUL
0x1d5 OR
0x1d6 SWAP1
0x1d7 SSTORE
0x1d8 POP
0x1d9 PUSH1 0x1
0x1db PUSH1 0xa0
0x1dd PUSH1 0x2
0x1df EXP
0x1e0 SUB
0x1e1 CALLER
0x1e2 AND
0x1e3 CALLVALUE
0x1e4 DUP1
0x1e5 ISZERO
0x1e6 PUSH2 0x8fc
0x1e9 MUL
0x1ea SWAP1
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee PUSH1 0x0
0x1f0 PUSH1 0x40
0x1f2 MLOAD
0x1f3 DUP1
0x1f4 DUP4
0x1f5 SUB
0x1f6 DUP2
0x1f7 DUP6
0x1f8 DUP9
0x1f9 DUP9
0x1fa CALL
0x1fb SWAP4
0x1fc POP
0x1fd POP
0x1fe POP
0x1ff POP
0x200 ISZERO
0x201 ISZERO
0x202 PUSH2 0x20a
0x205 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V152 = MUL 0x2 0x10000000000000000000000000000000000000000
0x1d5: V153 = OR 0x20000000000000000000000000000000000000000 V148
0x1d7: S[0x2] = V153
0x1d9: V154 = 0x1
0x1db: V155 = 0xa0
0x1dd: V156 = 0x2
0x1df: V157 = EXP 0x2 0xa0
0x1e0: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e1: V159 = CALLER
0x1e2: V160 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V161 = CALLVALUE
0x1e5: V162 = ISZERO V161
0x1e6: V163 = 0x8fc
0x1e9: V164 = MUL 0x8fc V162
0x1eb: V165 = 0x40
0x1ed: V166 = M[0x40]
0x1ee: V167 = 0x0
0x1f0: V168 = 0x40
0x1f2: V169 = M[0x40]
0x1f5: V170 = SUB V166 V169
0x1fa: V171 = CALL V164 V160 V161 V169 V170 V169 0x0
0x200: V172 = ISZERO V171
0x201: V173 = ISZERO V172
0x202: V174 = 0x20a
0x205: JUMPI 0x20a V173
---
Entry stack: [V12, V1913, 0x0, 0x2, 0x2, V148, 0x10000000000000000000000000000000000000000, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x206
[0x206:0x209]
---
Predecessors: [0x1d3]
Successors: []
---
0x206 PUSH1 0x0
0x208 DUP1
0x209 REVERT
---
0x206: V175 = 0x0
0x209: REVERT 0x0 0x0
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x20a
[0x20a:0x20e]
---
Predecessors: [0x1d3]
Successors: [0x481]
---
0x20a JUMPDEST
0x20b PUSH2 0x481
0x20e JUMP
---
0x20a: JUMPDEST 
0x20b: V176 = 0x481
0x20e: JUMP 0x481
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V1913, 0x0]

================================

Block 0x20f
[0x20f:0x28e]
---
Predecessors: [0x1a4]
Successors: [0x28f, 0x295]
---
0x20f JUMPDEST
0x210 PUSH1 0x1
0x212 PUSH1 0xa0
0x214 PUSH1 0x2
0x216 EXP
0x217 SUB
0x218 CALLER
0x219 AND
0x21a PUSH1 0x0
0x21c SWAP1
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0xa
0x221 PUSH1 0x20
0x223 MSTORE
0x224 PUSH1 0x40
0x226 SWAP1
0x227 DUP2
0x228 SWAP1
0x229 SHA3
0x22a SWAP1
0x22b PUSH1 0xc0
0x22d SWAP1
0x22e MLOAD
0x22f SWAP1
0x230 DUP2
0x231 ADD
0x232 PUSH1 0x40
0x234 SWAP1
0x235 DUP2
0x236 MSTORE
0x237 DUP3
0x238 SLOAD
0x239 PUSH1 0xff
0x23b SWAP1
0x23c DUP2
0x23d AND
0x23e ISZERO
0x23f ISZERO
0x240 DUP4
0x241 MSTORE
0x242 PUSH1 0x1
0x244 DUP5
0x245 ADD
0x246 SLOAD
0x247 PUSH1 0x20
0x249 DUP5
0x24a ADD
0x24b SWAP1
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x2
0x250 DUP6
0x251 ADD
0x252 SLOAD
0x253 DUP3
0x254 AND
0x255 SWAP3
0x256 DUP5
0x257 ADD
0x258 SWAP3
0x259 SWAP1
0x25a SWAP3
0x25b MSTORE
0x25c PUSH1 0x3
0x25e DUP5
0x25f ADD
0x260 SLOAD
0x261 PUSH1 0x60
0x263 DUP5
0x264 ADD
0x265 MSTORE
0x266 PUSH1 0x4
0x268 SWAP1
0x269 SWAP4
0x26a ADD
0x26b SLOAD
0x26c DUP1
0x26d DUP5
0x26e AND
0x26f PUSH1 0x80
0x271 DUP5
0x272 ADD
0x273 MSTORE
0x274 PUSH2 0x100
0x277 SWAP1
0x278 DIV
0x279 SWAP1
0x27a SWAP3
0x27b AND
0x27c ISZERO
0x27d ISZERO
0x27e PUSH1 0xa0
0x280 DUP3
0x281 ADD
0x282 MSTORE
0x283 SWAP3
0x284 POP
0x285 CALLVALUE
0x286 SWAP1
0x287 MLOAD
0x288 GT
0x289 ISZERO
0x28a DUP1
0x28b PUSH2 0x295
0x28e JUMPI
---
0x20f: JUMPDEST 
0x210: V177 = 0x1
0x212: V178 = 0xa0
0x214: V179 = 0x2
0x216: V180 = EXP 0x2 0xa0
0x217: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x218: V182 = CALLER
0x219: V183 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V184 = 0x0
0x21e: M[0x0] = V183
0x21f: V185 = 0xa
0x221: V186 = 0x20
0x223: M[0x20] = 0xa
0x224: V187 = 0x40
0x229: V188 = SHA3 0x0 0x40
0x22b: V189 = 0xc0
0x22e: V190 = M[0x40]
0x231: V191 = ADD V190 0xc0
0x232: V192 = 0x40
0x236: M[0x40] = V191
0x238: V193 = S[V188]
0x239: V194 = 0xff
0x23d: V195 = AND 0xff V193
0x23e: V196 = ISZERO V195
0x23f: V197 = ISZERO V196
0x241: M[V190] = V197
0x242: V198 = 0x1
0x245: V199 = ADD V188 0x1
0x246: V200 = S[V199]
0x247: V201 = 0x20
0x24a: V202 = ADD V190 0x20
0x24d: M[V202] = V200
0x24e: V203 = 0x2
0x251: V204 = ADD V188 0x2
0x252: V205 = S[V204]
0x254: V206 = AND 0xff V205
0x257: V207 = ADD V190 0x40
0x25b: M[V207] = V206
0x25c: V208 = 0x3
0x25f: V209 = ADD V188 0x3
0x260: V210 = S[V209]
0x261: V211 = 0x60
0x264: V212 = ADD V190 0x60
0x265: M[V212] = V210
0x266: V213 = 0x4
0x26a: V214 = ADD V188 0x4
0x26b: V215 = S[V214]
0x26e: V216 = AND 0xff V215
0x26f: V217 = 0x80
0x272: V218 = ADD V190 0x80
0x273: M[V218] = V216
0x274: V219 = 0x100
0x278: V220 = DIV V215 0x100
0x27b: V221 = AND 0xff V220
0x27c: V222 = ISZERO V221
0x27d: V223 = ISZERO V222
0x27e: V224 = 0xa0
0x281: V225 = ADD V190 0xa0
0x282: M[V225] = V223
0x285: V226 = CALLVALUE
0x287: V227 = M[V202]
0x288: V228 = GT V227 V226
0x289: V229 = ISZERO V228
0x28b: V230 = 0x295
0x28e: JUMPI 0x295 V229
---
Entry stack: [V12, V1913, 0x0]
Stack pops: 2
Stack additions: [V190, S0, V229]
Exit stack: [V12, V190, 0x0, V229]

================================

Block 0x28f
[0x28f:0x294]
---
Predecessors: [0x20f]
Successors: [0x295]
---
0x28f POP
0x290 DUP2
0x291 PUSH1 0xa0
0x293 ADD
0x294 MLOAD
---
0x291: V231 = 0xa0
0x293: V232 = ADD 0xa0 V190
0x294: V233 = M[V232]
---
Entry stack: [V12, V190, 0x0, V229]
Stack pops: 3
Stack additions: [S2, S1, V233]
Exit stack: [V12, V190, 0x0, V233]

================================

Block 0x295
[0x295:0x29b]
---
Predecessors: [0x20f, 0x28f]
Successors: [0x29c, 0x2a0]
---
0x295 JUMPDEST
0x296 ISZERO
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x295: JUMPDEST 
0x296: V234 = ISZERO S0
0x297: V235 = ISZERO V234
0x298: V236 = 0x2a0
0x29b: JUMPI 0x2a0 V235
---
Entry stack: [V12, V190, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, V190, 0x0]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x295]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V237 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V12, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V190, 0x0]

================================

Block 0x2a0
[0x2a0:0x2ca]
---
Predecessors: [0x295]
Successors: [0x2cb, 0x2f3]
---
0x2a0 JUMPDEST
0x2a1 CALLER
0x2a2 PUSH1 0x1
0x2a4 PUSH1 0xa0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 SUB
0x2aa AND
0x2ab PUSH1 0x0
0x2ad SWAP1
0x2ae DUP2
0x2af MSTORE
0x2b0 PUSH1 0xa
0x2b2 PUSH1 0x20
0x2b4 MSTORE
0x2b5 PUSH1 0x40
0x2b7 SWAP1
0x2b8 SHA3
0x2b9 PUSH1 0x4
0x2bb ADD
0x2bc SLOAD
0x2bd PUSH2 0x100
0x2c0 SWAP1
0x2c1 DIV
0x2c2 PUSH1 0xff
0x2c4 AND
0x2c5 ISZERO
0x2c6 ISZERO
0x2c7 PUSH2 0x2f3
0x2ca JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V238 = CALLER
0x2a2: V239 = 0x1
0x2a4: V240 = 0xa0
0x2a6: V241 = 0x2
0x2a8: V242 = EXP 0x2 0xa0
0x2a9: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x2ab: V245 = 0x0
0x2af: M[0x0] = V244
0x2b0: V246 = 0xa
0x2b2: V247 = 0x20
0x2b4: M[0x20] = 0xa
0x2b5: V248 = 0x40
0x2b8: V249 = SHA3 0x0 0x40
0x2b9: V250 = 0x4
0x2bb: V251 = ADD 0x4 V249
0x2bc: V252 = S[V251]
0x2bd: V253 = 0x100
0x2c1: V254 = DIV V252 0x100
0x2c2: V255 = 0xff
0x2c4: V256 = AND 0xff V254
0x2c5: V257 = ISZERO V256
0x2c6: V258 = ISZERO V257
0x2c7: V259 = 0x2f3
0x2ca: JUMPI 0x2f3 V258
---
Entry stack: [V12, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V190, 0x0]

================================

Block 0x2cb
[0x2cb:0x2f2]
---
Predecessors: [0x2a0]
Successors: [0x2f3]
---
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 CALLER
0x2d4 AND
0x2d5 PUSH1 0x0
0x2d7 SWAP1
0x2d8 DUP2
0x2d9 MSTORE
0x2da PUSH1 0xa
0x2dc PUSH1 0x20
0x2de MSTORE
0x2df PUSH1 0x40
0x2e1 SWAP1
0x2e2 SHA3
0x2e3 PUSH1 0x4
0x2e5 ADD
0x2e6 DUP1
0x2e7 SLOAD
0x2e8 PUSH2 0xff00
0x2eb NOT
0x2ec AND
0x2ed PUSH2 0x100
0x2f0 OR
0x2f1 SWAP1
0x2f2 SSTORE
---
0x2cb: V260 = 0x1
0x2cd: V261 = 0xa0
0x2cf: V262 = 0x2
0x2d1: V263 = EXP 0x2 0xa0
0x2d2: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d3: V265 = CALLER
0x2d4: V266 = AND V265 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V267 = 0x0
0x2d9: M[0x0] = V266
0x2da: V268 = 0xa
0x2dc: V269 = 0x20
0x2de: M[0x20] = 0xa
0x2df: V270 = 0x40
0x2e2: V271 = SHA3 0x0 0x40
0x2e3: V272 = 0x4
0x2e5: V273 = ADD 0x4 V271
0x2e7: V274 = S[V273]
0x2e8: V275 = 0xff00
0x2eb: V276 = NOT 0xff00
0x2ec: V277 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V274
0x2ed: V278 = 0x100
0x2f0: V279 = OR 0x100 V277
0x2f2: S[V273] = V279
---
Entry stack: [V12, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V190, 0x0]

================================

Block 0x2f3
[0x2f3:0x310]
---
Predecessors: [0x2a0, 0x2cb]
Successors: [0x7ec]
---
0x2f3 JUMPDEST
0x2f4 PUSH1 0x6
0x2f6 DUP1
0x2f7 SLOAD
0x2f8 CALLVALUE
0x2f9 SWAP1
0x2fa DUP2
0x2fb ADD
0x2fc SWAP1
0x2fd SWAP2
0x2fe SSTORE
0x2ff PUSH1 0x7
0x301 SLOAD
0x302 PUSH2 0x311
0x305 SWAP2
0x306 SWAP1
0x307 PUSH4 0xffffffff
0x30c PUSH2 0x7ec
0x30f AND
0x310 JUMP
---
0x2f3: JUMPDEST 
0x2f4: V280 = 0x6
0x2f7: V281 = S[0x6]
0x2f8: V282 = CALLVALUE
0x2fb: V283 = ADD V282 V281
0x2fe: S[0x6] = V283
0x2ff: V284 = 0x7
0x301: V285 = S[0x7]
0x302: V286 = 0x311
0x307: V287 = 0xffffffff
0x30c: V288 = 0x7ec
0x30f: V289 = AND 0x7ec 0xffffffff
0x310: JUMP 0x7ec
---
Entry stack: [V12, V190, 0x0]
Stack pops: 0
Stack additions: [0x311, V282, V285]
Exit stack: [V12, V190, 0x0, 0x311, V282, V285]

================================

Block 0x311
[0x311:0x32f]
---
Predecessors: [0x801]
Successors: [0x808]
---
0x311 JUMPDEST
0x312 SWAP1
0x313 POP
0x314 PUSH2 0x33c
0x317 PUSH1 0x64
0x319 PUSH2 0x330
0x31c DUP5
0x31d PUSH1 0x80
0x31f ADD
0x320 MLOAD
0x321 DUP5
0x322 SWAP1
0x323 PUSH1 0xff
0x325 AND
0x326 PUSH4 0xffffffff
0x32b PUSH2 0x808
0x32e AND
0x32f JUMP
---
0x311: JUMPDEST 
0x314: V290 = 0x33c
0x317: V291 = 0x64
0x319: V292 = 0x330
0x31d: V293 = 0x80
0x31f: V294 = ADD 0x80 V190
0x320: V295 = M[V294]
0x323: V296 = 0xff
0x325: V297 = AND 0xff V295
0x326: V298 = 0xffffffff
0x32b: V299 = 0x808
0x32e: V300 = AND 0x808 0xffffffff
0x32f: JUMP 0x808
---
Entry stack: [V12, V190, S1, S0]
Stack pops: 3
Stack additions: [S2, S0, 0x33c, 0x64, 0x330, S0, V297]
Exit stack: [V12, V190, S0, 0x33c, 0x64, 0x330, S0, V297]

================================

Block 0x330
[0x330:0x33b]
---
Predecessors: [0x830]
Successors: [0x7ec]
---
0x330 JUMPDEST
0x331 SWAP1
0x332 PUSH4 0xffffffff
0x337 PUSH2 0x7ec
0x33a AND
0x33b JUMP
---
0x330: JUMPDEST 
0x332: V301 = 0xffffffff
0x337: V302 = 0x7ec
0x33a: V303 = AND 0x7ec 0xffffffff
0x33b: JUMP 0x7ec
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, S5, S4, S3, S2, S0, S1]

================================

Block 0x33c
[0x33c:0x3be]
---
Predecessors: [0x801]
Successors: [0x3bf, 0x3c3]
---
0x33c JUMPDEST
0x33d PUSH1 0x8
0x33f DUP1
0x340 SLOAD
0x341 SWAP3
0x342 SWAP1
0x343 SWAP2
0x344 ADD
0x345 PUSH8 0xde0b6b3a7640000
0x34e MUL
0x34f SWAP2
0x350 DUP3
0x351 ADD
0x352 SWAP1
0x353 SSTORE
0x354 PUSH1 0x2
0x356 SLOAD
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f AND
0x360 PUSH4 0xd29d503c
0x365 CALLER
0x366 DUP4
0x367 PUSH1 0x40
0x369 DUP7
0x36a ADD
0x36b MLOAD
0x36c DUP7
0x36d PUSH1 0x60
0x36f ADD
0x370 MLOAD
0x371 PUSH1 0x40
0x373 MLOAD
0x374 PUSH1 0xe0
0x376 PUSH1 0x2
0x378 EXP
0x379 PUSH4 0xffffffff
0x37e DUP8
0x37f AND
0x380 MUL
0x381 DUP2
0x382 MSTORE
0x383 PUSH1 0x1
0x385 PUSH1 0xa0
0x387 PUSH1 0x2
0x389 EXP
0x38a SUB
0x38b SWAP1
0x38c SWAP5
0x38d AND
0x38e PUSH1 0x4
0x390 DUP6
0x391 ADD
0x392 MSTORE
0x393 PUSH1 0x24
0x395 DUP5
0x396 ADD
0x397 SWAP3
0x398 SWAP1
0x399 SWAP3
0x39a MSTORE
0x39b PUSH1 0xff
0x39d AND
0x39e PUSH1 0x44
0x3a0 DUP4
0x3a1 ADD
0x3a2 MSTORE
0x3a3 PUSH1 0x64
0x3a5 DUP3
0x3a6 ADD
0x3a7 MSTORE
0x3a8 PUSH1 0x84
0x3aa ADD
0x3ab PUSH1 0x0
0x3ad PUSH1 0x40
0x3af MLOAD
0x3b0 DUP1
0x3b1 DUP4
0x3b2 SUB
0x3b3 DUP2
0x3b4 PUSH1 0x0
0x3b6 DUP8
0x3b7 DUP1
0x3b8 EXTCODESIZE
0x3b9 ISZERO
0x3ba ISZERO
0x3bb PUSH2 0x3c3
0x3be JUMPI
---
0x33c: JUMPDEST 
0x33d: V304 = 0x8
0x340: V305 = S[0x8]
0x344: V306 = ADD S0 S1
0x345: V307 = 0xde0b6b3a7640000
0x34e: V308 = MUL 0xde0b6b3a7640000 V306
0x351: V309 = ADD V308 V305
0x353: S[0x8] = V309
0x354: V310 = 0x2
0x356: V311 = S[0x2]
0x357: V312 = 0x1
0x359: V313 = 0xa0
0x35b: V314 = 0x2
0x35d: V315 = EXP 0x2 0xa0
0x35e: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x360: V318 = 0xd29d503c
0x365: V319 = CALLER
0x367: V320 = 0x40
0x36a: V321 = ADD V190 0x40
0x36b: V322 = M[V321]
0x36d: V323 = 0x60
0x36f: V324 = ADD 0x60 V190
0x370: V325 = M[V324]
0x371: V326 = 0x40
0x373: V327 = M[0x40]
0x374: V328 = 0xe0
0x376: V329 = 0x2
0x378: V330 = EXP 0x2 0xe0
0x379: V331 = 0xffffffff
0x37f: V332 = AND 0xd29d503c 0xffffffff
0x380: V333 = MUL 0xd29d503c 0x100000000000000000000000000000000000000000000000000000000
0x382: M[V327] = 0xd29d503c00000000000000000000000000000000000000000000000000000000
0x383: V334 = 0x1
0x385: V335 = 0xa0
0x387: V336 = 0x2
0x389: V337 = EXP 0x2 0xa0
0x38a: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38d: V339 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x38e: V340 = 0x4
0x391: V341 = ADD V327 0x4
0x392: M[V341] = V339
0x393: V342 = 0x24
0x396: V343 = ADD V327 0x24
0x39a: M[V343] = V308
0x39b: V344 = 0xff
0x39d: V345 = AND 0xff V322
0x39e: V346 = 0x44
0x3a1: V347 = ADD V327 0x44
0x3a2: M[V347] = V345
0x3a3: V348 = 0x64
0x3a6: V349 = ADD V327 0x64
0x3a7: M[V349] = V325
0x3a8: V350 = 0x84
0x3aa: V351 = ADD 0x84 V327
0x3ab: V352 = 0x0
0x3ad: V353 = 0x40
0x3af: V354 = M[0x40]
0x3b2: V355 = SUB V351 V354
0x3b4: V356 = 0x0
0x3b8: V357 = EXTCODESIZE V317
0x3b9: V358 = ISZERO V357
0x3ba: V359 = ISZERO V358
0x3bb: V360 = 0x3c3
0x3be: JUMPI 0x3c3 V359
---
Entry stack: [V12, V190, S1, S0]
Stack pops: 3
Stack additions: [S2, V308, V317, 0xd29d503c, V351, 0x0, V354, V355, V354, 0x0, V317]
Exit stack: [V12, V190, V308, V317, 0xd29d503c, V351, 0x0, V354, V355, V354, 0x0, V317]

================================

Block 0x3bf
[0x3bf:0x3c2]
---
Predecessors: [0x33c]
Successors: []
---
0x3bf PUSH1 0x0
0x3c1 DUP1
0x3c2 REVERT
---
0x3bf: V361 = 0x0
0x3c2: REVERT 0x0 0x0
---
Entry stack: [V12, V190, V308, V317, 0xd29d503c, V351, 0x0, V354, V355, V354, 0x0, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V190, V308, V317, 0xd29d503c, V351, 0x0, V354, V355, V354, 0x0, V317]

================================

Block 0x3c3
[0x3c3:0x3cf]
---
Predecessors: [0x33c]
Successors: [0x3d0, 0x3d4]
---
0x3c3 JUMPDEST
0x3c4 PUSH2 0x2c6
0x3c7 GAS
0x3c8 SUB
0x3c9 CALL
0x3ca ISZERO
0x3cb ISZERO
0x3cc PUSH2 0x3d4
0x3cf JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V362 = 0x2c6
0x3c7: V363 = GAS
0x3c8: V364 = SUB V363 0x2c6
0x3c9: V365 = CALL V364 V317 0x0 V354 V355 V354 0x0
0x3ca: V366 = ISZERO V365
0x3cb: V367 = ISZERO V366
0x3cc: V368 = 0x3d4
0x3cf: JUMPI 0x3d4 V367
---
Entry stack: [V12, V190, V308, V317, 0xd29d503c, V351, 0x0, V354, V355, V354, 0x0, V317]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V190, V308, V317, 0xd29d503c, V351]

================================

Block 0x3d0
[0x3d0:0x3d3]
---
Predecessors: [0x3c3]
Successors: []
---
0x3d0 PUSH1 0x0
0x3d2 DUP1
0x3d3 REVERT
---
0x3d0: V369 = 0x0
0x3d3: REVERT 0x0 0x0
---
Entry stack: [V12, V190, V308, V317, 0xd29d503c, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V190, V308, V317, 0xd29d503c, V351]

================================

Block 0x3d4
[0x3d4:0x480]
---
Predecessors: [0x3c3]
Successors: [0x481]
---
0x3d4 JUMPDEST
0x3d5 POP
0x3d6 POP
0x3d7 POP
0x3d8 PUSH32 0x578bcfca27b6dc6dd46e98945d20a844f0002aed3e3e76f105d98c32de92c83d
0x3f9 CALLER
0x3fa DUP3
0x3fb DUP5
0x3fc PUSH1 0x40
0x3fe ADD
0x3ff MLOAD
0x400 DUP6
0x401 PUSH1 0x60
0x403 ADD
0x404 MLOAD
0x405 PUSH1 0x40
0x407 MLOAD
0x408 PUSH1 0x1
0x40a PUSH1 0xa0
0x40c PUSH1 0x2
0x40e EXP
0x40f SUB
0x410 SWAP1
0x411 SWAP5
0x412 AND
0x413 DUP5
0x414 MSTORE
0x415 PUSH1 0x20
0x417 DUP5
0x418 ADD
0x419 SWAP3
0x41a SWAP1
0x41b SWAP3
0x41c MSTORE
0x41d PUSH1 0xff
0x41f AND
0x420 PUSH1 0x40
0x422 DUP1
0x423 DUP5
0x424 ADD
0x425 SWAP2
0x426 SWAP1
0x427 SWAP2
0x428 MSTORE
0x429 PUSH1 0x60
0x42b DUP4
0x42c ADD
0x42d SWAP2
0x42e SWAP1
0x42f SWAP2
0x430 MSTORE
0x431 PUSH1 0x80
0x433 SWAP1
0x434 SWAP2
0x435 ADD
0x436 SWAP1
0x437 MLOAD
0x438 DUP1
0x439 SWAP2
0x43a SUB
0x43b SWAP1
0x43c LOG1
0x43d PUSH32 0x4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a2
0x45e CALLER
0x45f CALLVALUE
0x460 PUSH1 0x40
0x462 MLOAD
0x463 PUSH1 0x1
0x465 PUSH1 0xa0
0x467 PUSH1 0x2
0x469 EXP
0x46a SUB
0x46b SWAP1
0x46c SWAP3
0x46d AND
0x46e DUP3
0x46f MSTORE
0x470 PUSH1 0x20
0x472 DUP3
0x473 ADD
0x474 MSTORE
0x475 PUSH1 0x40
0x477 SWAP1
0x478 DUP2
0x479 ADD
0x47a SWAP1
0x47b MLOAD
0x47c DUP1
0x47d SWAP2
0x47e SUB
0x47f SWAP1
0x480 LOG1
---
0x3d4: JUMPDEST 
0x3d8: V370 = 0x578bcfca27b6dc6dd46e98945d20a844f0002aed3e3e76f105d98c32de92c83d
0x3f9: V371 = CALLER
0x3fc: V372 = 0x40
0x3fe: V373 = ADD 0x40 V190
0x3ff: V374 = M[V373]
0x401: V375 = 0x60
0x403: V376 = ADD 0x60 V190
0x404: V377 = M[V376]
0x405: V378 = 0x40
0x407: V379 = M[0x40]
0x408: V380 = 0x1
0x40a: V381 = 0xa0
0x40c: V382 = 0x2
0x40e: V383 = EXP 0x2 0xa0
0x40f: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x412: V385 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0x414: M[V379] = V385
0x415: V386 = 0x20
0x418: V387 = ADD V379 0x20
0x41c: M[V387] = V308
0x41d: V388 = 0xff
0x41f: V389 = AND 0xff V374
0x420: V390 = 0x40
0x424: V391 = ADD V379 0x40
0x428: M[V391] = V389
0x429: V392 = 0x60
0x42c: V393 = ADD V379 0x60
0x430: M[V393] = V377
0x431: V394 = 0x80
0x435: V395 = ADD V379 0x80
0x437: V396 = M[0x40]
0x43a: V397 = SUB V395 V396
0x43c: LOG V396 V397 0x578bcfca27b6dc6dd46e98945d20a844f0002aed3e3e76f105d98c32de92c83d
0x43d: V398 = 0x4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a2
0x45e: V399 = CALLER
0x45f: V400 = CALLVALUE
0x460: V401 = 0x40
0x462: V402 = M[0x40]
0x463: V403 = 0x1
0x465: V404 = 0xa0
0x467: V405 = 0x2
0x469: V406 = EXP 0x2 0xa0
0x46a: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46d: V408 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x46f: M[V402] = V408
0x470: V409 = 0x20
0x473: V410 = ADD V402 0x20
0x474: M[V410] = V400
0x475: V411 = 0x40
0x479: V412 = ADD 0x40 V402
0x47b: V413 = M[0x40]
0x47e: V414 = SUB V412 V413
0x480: LOG V413 V414 0x4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a2
---
Entry stack: [V12, V190, V308, V317, 0xd29d503c, V351]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, V190, V308]

================================

Block 0x481
[0x481:0x481]
---
Predecessors: [0x20a, 0x3d4]
Successors: [0x482]
---
0x481 JUMPDEST
---
0x481: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x481]
Successors: []
---
0x482 JUMPDEST
0x483 POP
0x484 POP
0x485 STOP
---
0x482: JUMPDEST 
0x485: STOP 
---
Entry stack: [V12, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x486
[0x486:0x48c]
---
Predecessors: [0xb]
Successors: [0x48d, 0x491]
---
0x486 JUMPDEST
0x487 CALLVALUE
0x488 ISZERO
0x489 PUSH2 0x491
0x48c JUMPI
---
0x486: JUMPDEST 
0x487: V415 = CALLVALUE
0x488: V416 = ISZERO V415
0x489: V417 = 0x491
0x48c: JUMPI 0x491 V416
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x48d
[0x48d:0x490]
---
Predecessors: [0x486]
Successors: []
---
0x48d PUSH1 0x0
0x48f DUP1
0x490 REVERT
---
0x48d: V418 = 0x0
0x490: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x491
[0x491:0x498]
---
Predecessors: [0x486]
Successors: [0x837]
---
0x491 JUMPDEST
0x492 PUSH2 0x499
0x495 PUSH2 0x837
0x498 JUMP
---
0x491: JUMPDEST 
0x492: V419 = 0x499
0x495: V420 = 0x837
0x498: JUMP 0x837
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499]
Exit stack: [V12, 0x499]

================================

Block 0x499
[0x499:0x49a]
---
Predecessors: [0x8d8, 0xa1c, 0xb21, 0xba5, 0xc39, 0xfb6, 0x10a1, 0x11a4, 0x129d, 0x133f, 0x13f3]
Successors: []
---
0x499 JUMPDEST
0x49a STOP
---
0x499: JUMPDEST 
0x49a: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x49b
[0x49b:0x4a1]
---
Predecessors: [0x25]
Successors: [0x4a2, 0x4a6]
---
0x49b JUMPDEST
0x49c CALLVALUE
0x49d ISZERO
0x49e PUSH2 0x4a6
0x4a1 JUMPI
---
0x49b: JUMPDEST 
0x49c: V421 = CALLVALUE
0x49d: V422 = ISZERO V421
0x49e: V423 = 0x4a6
0x4a1: JUMPI 0x4a6 V422
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x49b]
Successors: []
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
---
0x4a2: V424 = 0x0
0x4a5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a6
[0x4a6:0x4ad]
---
Predecessors: [0x49b]
Successors: [0x8da]
---
0x4a6 JUMPDEST
0x4a7 PUSH2 0x499
0x4aa PUSH2 0x8da
0x4ad JUMP
---
0x4a6: JUMPDEST 
0x4a7: V425 = 0x499
0x4aa: V426 = 0x8da
0x4ad: JUMP 0x8da
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499]
Exit stack: [V12, 0x499]

================================

Block 0x4ae
[0x4ae:0x4af]
---
Predecessors: []
Successors: []
---
0x4ae JUMPDEST
0x4af STOP
---
0x4ae: JUMPDEST 
0x4af: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4b0
[0x4b0:0x4b6]
---
Predecessors: [0x30]
Successors: [0x4b7, 0x4bb]
---
0x4b0 JUMPDEST
0x4b1 CALLVALUE
0x4b2 ISZERO
0x4b3 PUSH2 0x4bb
0x4b6 JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V427 = CALLVALUE
0x4b2: V428 = ISZERO V427
0x4b3: V429 = 0x4bb
0x4b6: JUMPI 0x4bb V428
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b7
[0x4b7:0x4ba]
---
Predecessors: [0x4b0]
Successors: []
---
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba REVERT
---
0x4b7: V430 = 0x0
0x4ba: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4bb
[0x4bb:0x4c2]
---
Predecessors: [0x4b0]
Successors: [0xa1e]
---
0x4bb JUMPDEST
0x4bc PUSH2 0x4c3
0x4bf PUSH2 0xa1e
0x4c2 JUMP
---
0x4bb: JUMPDEST 
0x4bc: V431 = 0x4c3
0x4bf: V432 = 0xa1e
0x4c2: JUMP 0xa1e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4c3]
Exit stack: [V12, 0x4c3]

================================

Block 0x4c3
[0x4c3:0x4d4]
---
Predecessors: [0xa1e, 0xa28, 0x111c, 0x1351, 0x1357, 0x1405]
Successors: []
---
0x4c3 JUMPDEST
0x4c4 PUSH1 0x40
0x4c6 MLOAD
0x4c7 SWAP1
0x4c8 DUP2
0x4c9 MSTORE
0x4ca PUSH1 0x20
0x4cc ADD
0x4cd PUSH1 0x40
0x4cf MLOAD
0x4d0 DUP1
0x4d1 SWAP2
0x4d2 SUB
0x4d3 SWAP1
0x4d4 RETURN
---
0x4c3: JUMPDEST 
0x4c4: V433 = 0x40
0x4c6: V434 = M[0x40]
0x4c9: M[V434] = S0
0x4ca: V435 = 0x20
0x4cc: V436 = ADD 0x20 V434
0x4cd: V437 = 0x40
0x4cf: V438 = M[0x40]
0x4d2: V439 = SUB V436 V438
0x4d4: RETURN V438 V439
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0x4d5
[0x4d5:0x4db]
---
Predecessors: [0x3b]
Successors: [0x4dc, 0x4e0]
---
0x4d5 JUMPDEST
0x4d6 CALLVALUE
0x4d7 ISZERO
0x4d8 PUSH2 0x4e0
0x4db JUMPI
---
0x4d5: JUMPDEST 
0x4d6: V440 = CALLVALUE
0x4d7: V441 = ISZERO V440
0x4d8: V442 = 0x4e0
0x4db: JUMPI 0x4e0 V441
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4dc
[0x4dc:0x4df]
---
Predecessors: [0x4d5]
Successors: []
---
0x4dc PUSH1 0x0
0x4de DUP1
0x4df REVERT
---
0x4dc: V443 = 0x0
0x4df: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e0
[0x4e0:0x4e7]
---
Predecessors: [0x4d5]
Successors: [0xa24]
---
0x4e0 JUMPDEST
0x4e1 PUSH2 0x4c3
0x4e4 PUSH2 0xa24
0x4e7 JUMP
---
0x4e0: JUMPDEST 
0x4e1: V444 = 0x4c3
0x4e4: V445 = 0xa24
0x4e7: JUMP 0xa24
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4c3]
Exit stack: [V12, 0x4c3]

================================

Block 0x4e8
[0x4e8:0x4f9]
---
Predecessors: []
Successors: []
---
0x4e8 JUMPDEST
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec SWAP1
0x4ed DUP2
0x4ee MSTORE
0x4ef PUSH1 0x20
0x4f1 ADD
0x4f2 PUSH1 0x40
0x4f4 MLOAD
0x4f5 DUP1
0x4f6 SWAP2
0x4f7 SUB
0x4f8 SWAP1
0x4f9 RETURN
---
0x4e8: JUMPDEST 
0x4e9: V446 = 0x40
0x4eb: V447 = M[0x40]
0x4ee: M[V447] = S0
0x4ef: V448 = 0x20
0x4f1: V449 = ADD 0x20 V447
0x4f2: V450 = 0x40
0x4f4: V451 = M[0x40]
0x4f7: V452 = SUB V449 V451
0x4f9: RETURN V451 V452
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4fa
[0x4fa:0x500]
---
Predecessors: [0x46]
Successors: [0x501, 0x505]
---
0x4fa JUMPDEST
0x4fb CALLVALUE
0x4fc ISZERO
0x4fd PUSH2 0x505
0x500 JUMPI
---
0x4fa: JUMPDEST 
0x4fb: V453 = CALLVALUE
0x4fc: V454 = ISZERO V453
0x4fd: V455 = 0x505
0x500: JUMPI 0x505 V454
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x501
[0x501:0x504]
---
Predecessors: [0x4fa]
Successors: []
---
0x501 PUSH1 0x0
0x503 DUP1
0x504 REVERT
---
0x501: V456 = 0x0
0x504: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x505
[0x505:0x518]
---
Predecessors: [0x4fa]
Successors: [0xa2b]
---
0x505 JUMPDEST
0x506 PUSH2 0x519
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 PUSH1 0x4
0x513 CALLDATALOAD
0x514 AND
0x515 PUSH2 0xa2b
0x518 JUMP
---
0x505: JUMPDEST 
0x506: V457 = 0x519
0x509: V458 = 0x1
0x50b: V459 = 0xa0
0x50d: V460 = 0x2
0x50f: V461 = EXP 0x2 0xa0
0x510: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x511: V463 = 0x4
0x513: V464 = CALLDATALOAD 0x4
0x514: V465 = AND V464 0xffffffffffffffffffffffffffffffffffffffff
0x515: V466 = 0xa2b
0x518: JUMP 0xa2b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x519, V465]
Exit stack: [V12, 0x519, V465]

================================

Block 0x519
[0x519:0x55b]
---
Predecessors: [0xa2b]
Successors: []
---
0x519 JUMPDEST
0x51a PUSH1 0x40
0x51c MLOAD
0x51d SWAP6
0x51e ISZERO
0x51f ISZERO
0x520 DUP7
0x521 MSTORE
0x522 PUSH1 0x20
0x524 DUP7
0x525 ADD
0x526 SWAP5
0x527 SWAP1
0x528 SWAP5
0x529 MSTORE
0x52a PUSH1 0xff
0x52c SWAP3
0x52d DUP4
0x52e AND
0x52f PUSH1 0x40
0x531 DUP1
0x532 DUP8
0x533 ADD
0x534 SWAP2
0x535 SWAP1
0x536 SWAP2
0x537 MSTORE
0x538 PUSH1 0x60
0x53a DUP7
0x53b ADD
0x53c SWAP3
0x53d SWAP1
0x53e SWAP3
0x53f MSTORE
0x540 SWAP1
0x541 SWAP2
0x542 AND
0x543 PUSH1 0x80
0x545 DUP5
0x546 ADD
0x547 MSTORE
0x548 SWAP1
0x549 ISZERO
0x54a ISZERO
0x54b PUSH1 0xa0
0x54d DUP4
0x54e ADD
0x54f MSTORE
0x550 PUSH1 0xc0
0x552 SWAP1
0x553 SWAP2
0x554 ADD
0x555 SWAP1
0x556 MLOAD
0x557 DUP1
0x558 SWAP2
0x559 SUB
0x55a SWAP1
0x55b RETURN
---
0x519: JUMPDEST 
0x51a: V467 = 0x40
0x51c: V468 = M[0x40]
0x51e: V469 = ISZERO V949
0x51f: V470 = ISZERO V469
0x521: M[V468] = V470
0x522: V471 = 0x20
0x525: V472 = ADD V468 0x20
0x529: M[V472] = V938
0x52a: V473 = 0xff
0x52e: V474 = AND 0xff V950
0x52f: V475 = 0x40
0x533: V476 = ADD V468 0x40
0x537: M[V476] = V474
0x538: V477 = 0x60
0x53b: V478 = ADD V468 0x60
0x53f: M[V478] = V944
0x542: V479 = AND 0xff V951
0x543: V480 = 0x80
0x546: V481 = ADD V468 0x80
0x547: M[V481] = V479
0x549: V482 = ISZERO V954
0x54a: V483 = ISZERO V482
0x54b: V484 = 0xa0
0x54e: V485 = ADD V468 0xa0
0x54f: M[V485] = V483
0x550: V486 = 0xc0
0x554: V487 = ADD V468 0xc0
0x556: V488 = M[0x40]
0x559: V489 = SUB V487 V488
0x55b: RETURN V488 V489
---
Entry stack: [V12, 0x519, V949, V938, V950, V944, V951, V954]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x519]

================================

Block 0x55c
[0x55c:0x562]
---
Predecessors: [0x51]
Successors: [0x563, 0x567]
---
0x55c JUMPDEST
0x55d CALLVALUE
0x55e ISZERO
0x55f PUSH2 0x567
0x562 JUMPI
---
0x55c: JUMPDEST 
0x55d: V490 = CALLVALUE
0x55e: V491 = ISZERO V490
0x55f: V492 = 0x567
0x562: JUMPI 0x567 V491
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x563
[0x563:0x566]
---
Predecessors: [0x55c]
Successors: []
---
0x563 PUSH1 0x0
0x565 DUP1
0x566 REVERT
---
0x563: V493 = 0x0
0x566: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x567
[0x567:0x571]
---
Predecessors: [0x55c]
Successors: [0xa6a]
---
0x567 JUMPDEST
0x568 PUSH2 0x499
0x56b PUSH1 0x4
0x56d CALLDATALOAD
0x56e PUSH2 0xa6a
0x571 JUMP
---
0x567: JUMPDEST 
0x568: V494 = 0x499
0x56b: V495 = 0x4
0x56d: V496 = CALLDATALOAD 0x4
0x56e: V497 = 0xa6a
0x571: JUMP 0xa6a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499, V496]
Exit stack: [V12, 0x499, V496]

================================

Block 0x572
[0x572:0x573]
---
Predecessors: []
Successors: []
---
0x572 JUMPDEST
0x573 STOP
---
0x572: JUMPDEST 
0x573: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x574
[0x574:0x57a]
---
Predecessors: [0x5c]
Successors: [0x57b, 0x57f]
---
0x574 JUMPDEST
0x575 CALLVALUE
0x576 ISZERO
0x577 PUSH2 0x57f
0x57a JUMPI
---
0x574: JUMPDEST 
0x575: V498 = CALLVALUE
0x576: V499 = ISZERO V498
0x577: V500 = 0x57f
0x57a: JUMPI 0x57f V499
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x57b
[0x57b:0x57e]
---
Predecessors: [0x574]
Successors: []
---
0x57b PUSH1 0x0
0x57d DUP1
0x57e REVERT
---
0x57b: V501 = 0x0
0x57e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x57f
[0x57f:0x586]
---
Predecessors: [0x574]
Successors: [0xb25]
---
0x57f JUMPDEST
0x580 PUSH2 0x499
0x583 PUSH2 0xb25
0x586 JUMP
---
0x57f: JUMPDEST 
0x580: V502 = 0x499
0x583: V503 = 0xb25
0x586: JUMP 0xb25
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499]
Exit stack: [V12, 0x499]

================================

Block 0x587
[0x587:0x588]
---
Predecessors: []
Successors: []
---
0x587 JUMPDEST
0x588 STOP
---
0x587: JUMPDEST 
0x588: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x589
[0x589:0x58f]
---
Predecessors: [0x67]
Successors: [0x590, 0x594]
---
0x589 JUMPDEST
0x58a CALLVALUE
0x58b ISZERO
0x58c PUSH2 0x594
0x58f JUMPI
---
0x589: JUMPDEST 
0x58a: V504 = CALLVALUE
0x58b: V505 = ISZERO V504
0x58c: V506 = 0x594
0x58f: JUMPI 0x594 V505
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x590
[0x590:0x593]
---
Predecessors: [0x589]
Successors: []
---
0x590 PUSH1 0x0
0x592 DUP1
0x593 REVERT
---
0x590: V507 = 0x0
0x593: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x594
[0x594:0x59e]
---
Predecessors: [0x589]
Successors: [0xba7]
---
0x594 JUMPDEST
0x595 PUSH2 0x499
0x598 PUSH1 0x4
0x59a CALLDATALOAD
0x59b PUSH2 0xba7
0x59e JUMP
---
0x594: JUMPDEST 
0x595: V508 = 0x499
0x598: V509 = 0x4
0x59a: V510 = CALLDATALOAD 0x4
0x59b: V511 = 0xba7
0x59e: JUMP 0xba7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499, V510]
Exit stack: [V12, 0x499, V510]

================================

Block 0x59f
[0x59f:0x5a0]
---
Predecessors: []
Successors: []
---
0x59f JUMPDEST
0x5a0 STOP
---
0x59f: JUMPDEST 
0x5a0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5a1
[0x5a1:0x5a7]
---
Predecessors: [0x72]
Successors: [0x5a8, 0x5ac]
---
0x5a1 JUMPDEST
0x5a2 CALLVALUE
0x5a3 ISZERO
0x5a4 PUSH2 0x5ac
0x5a7 JUMPI
---
0x5a1: JUMPDEST 
0x5a2: V512 = CALLVALUE
0x5a3: V513 = ISZERO V512
0x5a4: V514 = 0x5ac
0x5a7: JUMPI 0x5ac V513
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5a8
[0x5a8:0x5ab]
---
Predecessors: [0x5a1]
Successors: []
---
0x5a8 PUSH1 0x0
0x5aa DUP1
0x5ab REVERT
---
0x5a8: V515 = 0x0
0x5ab: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ac
[0x5ac:0x5b3]
---
Predecessors: [0x5a1]
Successors: [0xc3d]
---
0x5ac JUMPDEST
0x5ad PUSH2 0x5b4
0x5b0 PUSH2 0xc3d
0x5b3 JUMP
---
0x5ac: JUMPDEST 
0x5ad: V516 = 0x5b4
0x5b0: V517 = 0xc3d
0x5b3: JUMP 0xc3d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5b4]
Exit stack: [V12, 0x5b4]

================================

Block 0x5b4
[0x5b4:0x5c7]
---
Predecessors: [0xc3d, 0xfbc]
Successors: []
---
0x5b4 JUMPDEST
0x5b5 PUSH1 0x40
0x5b7 MLOAD
0x5b8 SWAP1
0x5b9 ISZERO
0x5ba ISZERO
0x5bb DUP2
0x5bc MSTORE
0x5bd PUSH1 0x20
0x5bf ADD
0x5c0 PUSH1 0x40
0x5c2 MLOAD
0x5c3 DUP1
0x5c4 SWAP2
0x5c5 SUB
0x5c6 SWAP1
0x5c7 RETURN
---
0x5b4: JUMPDEST 
0x5b5: V518 = 0x40
0x5b7: V519 = M[0x40]
0x5b9: V520 = ISZERO S0
0x5ba: V521 = ISZERO V520
0x5bc: M[V519] = V521
0x5bd: V522 = 0x20
0x5bf: V523 = ADD 0x20 V519
0x5c0: V524 = 0x40
0x5c2: V525 = M[0x40]
0x5c5: V526 = SUB V523 V525
0x5c7: RETURN V525 V526
---
Entry stack: [V12, 0x5b4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x5b4]

================================

Block 0x5c8
[0x5c8:0x5ce]
---
Predecessors: [0x7d]
Successors: [0x5cf, 0x5d3]
---
0x5c8 JUMPDEST
0x5c9 CALLVALUE
0x5ca ISZERO
0x5cb PUSH2 0x5d3
0x5ce JUMPI
---
0x5c8: JUMPDEST 
0x5c9: V527 = CALLVALUE
0x5ca: V528 = ISZERO V527
0x5cb: V529 = 0x5d3
0x5ce: JUMPI 0x5d3 V528
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5cf
[0x5cf:0x5d2]
---
Predecessors: [0x5c8]
Successors: []
---
0x5cf PUSH1 0x0
0x5d1 DUP1
0x5d2 REVERT
---
0x5cf: V530 = 0x0
0x5d2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5d3
[0x5d3:0x5f5]
---
Predecessors: [0x5c8]
Successors: [0xc4d]
---
0x5d3 JUMPDEST
0x5d4 PUSH2 0x499
0x5d7 PUSH1 0x1
0x5d9 PUSH1 0xa0
0x5db PUSH1 0x2
0x5dd EXP
0x5de SUB
0x5df PUSH1 0x4
0x5e1 CALLDATALOAD
0x5e2 AND
0x5e3 PUSH1 0x24
0x5e5 CALLDATALOAD
0x5e6 PUSH1 0xff
0x5e8 PUSH1 0x44
0x5ea CALLDATALOAD
0x5eb DUP2
0x5ec AND
0x5ed SWAP1
0x5ee PUSH1 0x64
0x5f0 CALLDATALOAD
0x5f1 AND
0x5f2 PUSH2 0xc4d
0x5f5 JUMP
---
0x5d3: JUMPDEST 
0x5d4: V531 = 0x499
0x5d7: V532 = 0x1
0x5d9: V533 = 0xa0
0x5db: V534 = 0x2
0x5dd: V535 = EXP 0x2 0xa0
0x5de: V536 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5df: V537 = 0x4
0x5e1: V538 = CALLDATALOAD 0x4
0x5e2: V539 = AND V538 0xffffffffffffffffffffffffffffffffffffffff
0x5e3: V540 = 0x24
0x5e5: V541 = CALLDATALOAD 0x24
0x5e6: V542 = 0xff
0x5e8: V543 = 0x44
0x5ea: V544 = CALLDATALOAD 0x44
0x5ec: V545 = AND 0xff V544
0x5ee: V546 = 0x64
0x5f0: V547 = CALLDATALOAD 0x64
0x5f1: V548 = AND V547 0xff
0x5f2: V549 = 0xc4d
0x5f5: JUMP 0xc4d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499, V539, V541, V545, V548]
Exit stack: [V12, 0x499, V539, V541, V545, V548]

================================

Block 0x5f6
[0x5f6:0x5f7]
---
Predecessors: []
Successors: []
---
0x5f6 JUMPDEST
0x5f7 STOP
---
0x5f6: JUMPDEST 
0x5f7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5f8
[0x5f8:0x5fe]
---
Predecessors: [0x88]
Successors: [0x5ff, 0x603]
---
0x5f8 JUMPDEST
0x5f9 CALLVALUE
0x5fa ISZERO
0x5fb PUSH2 0x603
0x5fe JUMPI
---
0x5f8: JUMPDEST 
0x5f9: V550 = CALLVALUE
0x5fa: V551 = ISZERO V550
0x5fb: V552 = 0x603
0x5fe: JUMPI 0x603 V551
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ff
[0x5ff:0x602]
---
Predecessors: [0x5f8]
Successors: []
---
0x5ff PUSH1 0x0
0x601 DUP1
0x602 REVERT
---
0x5ff: V553 = 0x0
0x602: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x603
[0x603:0x60a]
---
Predecessors: [0x5f8]
Successors: [0xfbc]
---
0x603 JUMPDEST
0x604 PUSH2 0x5b4
0x607 PUSH2 0xfbc
0x60a JUMP
---
0x603: JUMPDEST 
0x604: V554 = 0x5b4
0x607: V555 = 0xfbc
0x60a: JUMP 0xfbc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5b4]
Exit stack: [V12, 0x5b4]

================================

Block 0x60b
[0x60b:0x61e]
---
Predecessors: []
Successors: []
---
0x60b JUMPDEST
0x60c PUSH1 0x40
0x60e MLOAD
0x60f SWAP1
0x610 ISZERO
0x611 ISZERO
0x612 DUP2
0x613 MSTORE
0x614 PUSH1 0x20
0x616 ADD
0x617 PUSH1 0x40
0x619 MLOAD
0x61a DUP1
0x61b SWAP2
0x61c SUB
0x61d SWAP1
0x61e RETURN
---
0x60b: JUMPDEST 
0x60c: V556 = 0x40
0x60e: V557 = M[0x40]
0x610: V558 = ISZERO S0
0x611: V559 = ISZERO V558
0x613: M[V557] = V559
0x614: V560 = 0x20
0x616: V561 = ADD 0x20 V557
0x617: V562 = 0x40
0x619: V563 = M[0x40]
0x61c: V564 = SUB V561 V563
0x61e: RETURN V563 V564
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x61f
[0x61f:0x625]
---
Predecessors: [0x93]
Successors: [0x626, 0x62a]
---
0x61f JUMPDEST
0x620 CALLVALUE
0x621 ISZERO
0x622 PUSH2 0x62a
0x625 JUMPI
---
0x61f: JUMPDEST 
0x620: V565 = CALLVALUE
0x621: V566 = ISZERO V565
0x622: V567 = 0x62a
0x625: JUMPI 0x62a V566
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x626
[0x626:0x629]
---
Predecessors: [0x61f]
Successors: []
---
0x626 PUSH1 0x0
0x628 DUP1
0x629 REVERT
---
0x626: V568 = 0x0
0x629: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x62a
[0x62a:0x631]
---
Predecessors: [0x61f]
Successors: [0xfc5]
---
0x62a JUMPDEST
0x62b PUSH2 0x499
0x62e PUSH2 0xfc5
0x631 JUMP
---
0x62a: JUMPDEST 
0x62b: V569 = 0x499
0x62e: V570 = 0xfc5
0x631: JUMP 0xfc5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499]
Exit stack: [V12, 0x499]

================================

Block 0x632
[0x632:0x633]
---
Predecessors: []
Successors: []
---
0x632 JUMPDEST
0x633 STOP
---
0x632: JUMPDEST 
0x633: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x634
[0x634:0x63a]
---
Predecessors: [0x9e]
Successors: [0x63b, 0x63f]
---
0x634 JUMPDEST
0x635 CALLVALUE
0x636 ISZERO
0x637 PUSH2 0x63f
0x63a JUMPI
---
0x634: JUMPDEST 
0x635: V571 = CALLVALUE
0x636: V572 = ISZERO V571
0x637: V573 = 0x63f
0x63a: JUMPI 0x63f V572
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x63b
[0x63b:0x63e]
---
Predecessors: [0x634]
Successors: []
---
0x63b PUSH1 0x0
0x63d DUP1
0x63e REVERT
---
0x63b: V574 = 0x0
0x63e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x63f
[0x63f:0x646]
---
Predecessors: [0x634]
Successors: [0x10a4]
---
0x63f JUMPDEST
0x640 PUSH2 0x4c3
0x643 PUSH2 0x10a4
0x646 JUMP
---
0x63f: JUMPDEST 
0x640: V575 = 0x4c3
0x643: V576 = 0x10a4
0x646: JUMP 0x10a4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4c3]
Exit stack: [V12, 0x4c3]

================================

Block 0x647
[0x647:0x658]
---
Predecessors: []
Successors: []
---
0x647 JUMPDEST
0x648 PUSH1 0x40
0x64a MLOAD
0x64b SWAP1
0x64c DUP2
0x64d MSTORE
0x64e PUSH1 0x20
0x650 ADD
0x651 PUSH1 0x40
0x653 MLOAD
0x654 DUP1
0x655 SWAP2
0x656 SUB
0x657 SWAP1
0x658 RETURN
---
0x647: JUMPDEST 
0x648: V577 = 0x40
0x64a: V578 = M[0x40]
0x64d: M[V578] = S0
0x64e: V579 = 0x20
0x650: V580 = ADD 0x20 V578
0x651: V581 = 0x40
0x653: V582 = M[0x40]
0x656: V583 = SUB V580 V582
0x658: RETURN V582 V583
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x659
[0x659:0x65f]
---
Predecessors: [0xa9]
Successors: [0x660, 0x664]
---
0x659 JUMPDEST
0x65a CALLVALUE
0x65b ISZERO
0x65c PUSH2 0x664
0x65f JUMPI
---
0x659: JUMPDEST 
0x65a: V584 = CALLVALUE
0x65b: V585 = ISZERO V584
0x65c: V586 = 0x664
0x65f: JUMPI 0x664 V585
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x660
[0x660:0x663]
---
Predecessors: [0x659]
Successors: []
---
0x660 PUSH1 0x0
0x662 DUP1
0x663 REVERT
---
0x660: V587 = 0x0
0x663: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x664
[0x664:0x66b]
---
Predecessors: [0x659]
Successors: [0x111f]
---
0x664 JUMPDEST
0x665 PUSH2 0x499
0x668 PUSH2 0x111f
0x66b JUMP
---
0x664: JUMPDEST 
0x665: V588 = 0x499
0x668: V589 = 0x111f
0x66b: JUMP 0x111f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499]
Exit stack: [V12, 0x499]

================================

Block 0x66c
[0x66c:0x66d]
---
Predecessors: []
Successors: []
---
0x66c JUMPDEST
0x66d STOP
---
0x66c: JUMPDEST 
0x66d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x66e
[0x66e:0x674]
---
Predecessors: [0xb4]
Successors: [0x675, 0x679]
---
0x66e JUMPDEST
0x66f CALLVALUE
0x670 ISZERO
0x671 PUSH2 0x679
0x674 JUMPI
---
0x66e: JUMPDEST 
0x66f: V590 = CALLVALUE
0x670: V591 = ISZERO V590
0x671: V592 = 0x679
0x674: JUMPI 0x679 V591
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x675
[0x675:0x678]
---
Predecessors: [0x66e]
Successors: []
---
0x675 PUSH1 0x0
0x677 DUP1
0x678 REVERT
---
0x675: V593 = 0x0
0x678: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x679
[0x679:0x680]
---
Predecessors: [0x66e]
Successors: [0x11a6]
---
0x679 JUMPDEST
0x67a PUSH2 0x681
0x67d PUSH2 0x11a6
0x680 JUMP
---
0x679: JUMPDEST 
0x67a: V594 = 0x681
0x67d: V595 = 0x11a6
0x680: JUMP 0x11a6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x681]
Exit stack: [V12, 0x681]

================================

Block 0x681
[0x681:0x69c]
---
Predecessors: [0x11a6, 0x11b5, 0x13f6]
Successors: []
---
0x681 JUMPDEST
0x682 PUSH1 0x40
0x684 MLOAD
0x685 PUSH1 0x1
0x687 PUSH1 0xa0
0x689 PUSH1 0x2
0x68b EXP
0x68c SUB
0x68d SWAP1
0x68e SWAP2
0x68f AND
0x690 DUP2
0x691 MSTORE
0x692 PUSH1 0x20
0x694 ADD
0x695 PUSH1 0x40
0x697 MLOAD
0x698 DUP1
0x699 SWAP2
0x69a SUB
0x69b SWAP1
0x69c RETURN
---
0x681: JUMPDEST 
0x682: V596 = 0x40
0x684: V597 = M[0x40]
0x685: V598 = 0x1
0x687: V599 = 0xa0
0x689: V600 = 0x2
0x68b: V601 = EXP 0x2 0xa0
0x68c: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68f: V603 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x691: M[V597] = V603
0x692: V604 = 0x20
0x694: V605 = ADD 0x20 V597
0x695: V606 = 0x40
0x697: V607 = M[0x40]
0x69a: V608 = SUB V605 V607
0x69c: RETURN V607 V608
---
Entry stack: [V12, 0x681, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x681]

================================

Block 0x69d
[0x69d:0x6a3]
---
Predecessors: [0xbf]
Successors: [0x6a4, 0x6a8]
---
0x69d JUMPDEST
0x69e CALLVALUE
0x69f ISZERO
0x6a0 PUSH2 0x6a8
0x6a3 JUMPI
---
0x69d: JUMPDEST 
0x69e: V609 = CALLVALUE
0x69f: V610 = ISZERO V609
0x6a0: V611 = 0x6a8
0x6a3: JUMPI 0x6a8 V610
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6a4
[0x6a4:0x6a7]
---
Predecessors: [0x69d]
Successors: []
---
0x6a4 PUSH1 0x0
0x6a6 DUP1
0x6a7 REVERT
---
0x6a4: V612 = 0x0
0x6a7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6a8
[0x6a8:0x6af]
---
Predecessors: [0x69d]
Successors: [0x11b5]
---
0x6a8 JUMPDEST
0x6a9 PUSH2 0x681
0x6ac PUSH2 0x11b5
0x6af JUMP
---
0x6a8: JUMPDEST 
0x6a9: V613 = 0x681
0x6ac: V614 = 0x11b5
0x6af: JUMP 0x11b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x681]
Exit stack: [V12, 0x681]

================================

Block 0x6b0
[0x6b0:0x6cb]
---
Predecessors: []
Successors: []
---
0x6b0 JUMPDEST
0x6b1 PUSH1 0x40
0x6b3 MLOAD
0x6b4 PUSH1 0x1
0x6b6 PUSH1 0xa0
0x6b8 PUSH1 0x2
0x6ba EXP
0x6bb SUB
0x6bc SWAP1
0x6bd SWAP2
0x6be AND
0x6bf DUP2
0x6c0 MSTORE
0x6c1 PUSH1 0x20
0x6c3 ADD
0x6c4 PUSH1 0x40
0x6c6 MLOAD
0x6c7 DUP1
0x6c8 SWAP2
0x6c9 SUB
0x6ca SWAP1
0x6cb RETURN
---
0x6b0: JUMPDEST 
0x6b1: V615 = 0x40
0x6b3: V616 = M[0x40]
0x6b4: V617 = 0x1
0x6b6: V618 = 0xa0
0x6b8: V619 = 0x2
0x6ba: V620 = EXP 0x2 0xa0
0x6bb: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6be: V622 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x6c0: M[V616] = V622
0x6c1: V623 = 0x20
0x6c3: V624 = ADD 0x20 V616
0x6c4: V625 = 0x40
0x6c6: V626 = M[0x40]
0x6c9: V627 = SUB V624 V626
0x6cb: RETURN V626 V627
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6cc
[0x6cc:0x6d2]
---
Predecessors: [0xca]
Successors: [0x6d3, 0x6d7]
---
0x6cc JUMPDEST
0x6cd CALLVALUE
0x6ce ISZERO
0x6cf PUSH2 0x6d7
0x6d2 JUMPI
---
0x6cc: JUMPDEST 
0x6cd: V628 = CALLVALUE
0x6ce: V629 = ISZERO V628
0x6cf: V630 = 0x6d7
0x6d2: JUMPI 0x6d7 V629
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6d3
[0x6d3:0x6d6]
---
Predecessors: [0x6cc]
Successors: []
---
0x6d3 PUSH1 0x0
0x6d5 DUP1
0x6d6 REVERT
---
0x6d3: V631 = 0x0
0x6d6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6d7
[0x6d7:0x6de]
---
Predecessors: [0x6cc]
Successors: [0x11c4]
---
0x6d7 JUMPDEST
0x6d8 PUSH2 0x499
0x6db PUSH2 0x11c4
0x6de JUMP
---
0x6d7: JUMPDEST 
0x6d8: V632 = 0x499
0x6db: V633 = 0x11c4
0x6de: JUMP 0x11c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499]
Exit stack: [V12, 0x499]

================================

Block 0x6df
[0x6df:0x6e0]
---
Predecessors: []
Successors: []
---
0x6df JUMPDEST
0x6e0 STOP
---
0x6df: JUMPDEST 
0x6e0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6e1
[0x6e1:0x6e7]
---
Predecessors: [0xd5]
Successors: [0x6e8, 0x6ec]
---
0x6e1 JUMPDEST
0x6e2 CALLVALUE
0x6e3 ISZERO
0x6e4 PUSH2 0x6ec
0x6e7 JUMPI
---
0x6e1: JUMPDEST 
0x6e2: V634 = CALLVALUE
0x6e3: V635 = ISZERO V634
0x6e4: V636 = 0x6ec
0x6e7: JUMPI 0x6ec V635
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e8
[0x6e8:0x6eb]
---
Predecessors: [0x6e1]
Successors: []
---
0x6e8 PUSH1 0x0
0x6ea DUP1
0x6eb REVERT
---
0x6e8: V637 = 0x0
0x6eb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ec
[0x6ec:0x6f3]
---
Predecessors: [0x6e1]
Successors: [0x12a0]
---
0x6ec JUMPDEST
0x6ed PUSH2 0x499
0x6f0 PUSH2 0x12a0
0x6f3 JUMP
---
0x6ec: JUMPDEST 
0x6ed: V638 = 0x499
0x6f0: V639 = 0x12a0
0x6f3: JUMP 0x12a0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499]
Exit stack: [V12, 0x499]

================================

Block 0x6f4
[0x6f4:0x6f5]
---
Predecessors: []
Successors: []
---
0x6f4 JUMPDEST
0x6f5 STOP
---
0x6f4: JUMPDEST 
0x6f5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6f6
[0x6f6:0x6fc]
---
Predecessors: [0xe0]
Successors: [0x6fd, 0x701]
---
0x6f6 JUMPDEST
0x6f7 CALLVALUE
0x6f8 ISZERO
0x6f9 PUSH2 0x701
0x6fc JUMPI
---
0x6f6: JUMPDEST 
0x6f7: V640 = CALLVALUE
0x6f8: V641 = ISZERO V640
0x6f9: V642 = 0x701
0x6fc: JUMPI 0x701 V641
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6fd
[0x6fd:0x700]
---
Predecessors: [0x6f6]
Successors: []
---
0x6fd PUSH1 0x0
0x6ff DUP1
0x700 REVERT
---
0x6fd: V643 = 0x0
0x700: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x701
[0x701:0x708]
---
Predecessors: [0x6f6]
Successors: [0x1341]
---
0x701 JUMPDEST
0x702 PUSH2 0x709
0x705 PUSH2 0x1341
0x708 JUMP
---
0x701: JUMPDEST 
0x702: V644 = 0x709
0x705: V645 = 0x1341
0x708: JUMP 0x1341
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x709]
Exit stack: [V12, 0x709]

================================

Block 0x709
[0x709:0x717]
---
Predecessors: [0x1341]
Successors: [0x718, 0x719]
---
0x709 JUMPDEST
0x70a PUSH1 0x40
0x70c MLOAD
0x70d DUP1
0x70e DUP3
0x70f PUSH1 0x2
0x711 DUP2
0x712 GT
0x713 ISZERO
0x714 PUSH2 0x719
0x717 JUMPI
---
0x709: JUMPDEST 
0x70a: V646 = 0x40
0x70c: V647 = M[0x40]
0x70f: V648 = 0x2
0x712: V649 = GT V1787 0x2
0x713: V650 = ISZERO V649
0x714: V651 = 0x719
0x717: JUMPI 0x719 V650
---
Entry stack: [V12, 0x709, V1787]
Stack pops: 1
Stack additions: [S0, V647, V647, S0]
Exit stack: [V12, 0x709, V1787, V647, V647, V1787]

================================

Block 0x718
[0x718:0x718]
---
Predecessors: [0x709]
Successors: []
---
0x718 INVALID
---
0x718: INVALID 
---
Entry stack: [V12, 0x709, V1787, V647, V647, V1787]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x709, V1787, V647, V647, V1787]

================================

Block 0x719
[0x719:0x72c]
---
Predecessors: [0x709]
Successors: []
---
0x719 JUMPDEST
0x71a PUSH1 0xff
0x71c AND
0x71d DUP2
0x71e MSTORE
0x71f PUSH1 0x20
0x721 ADD
0x722 SWAP2
0x723 POP
0x724 POP
0x725 PUSH1 0x40
0x727 MLOAD
0x728 DUP1
0x729 SWAP2
0x72a SUB
0x72b SWAP1
0x72c RETURN
---
0x719: JUMPDEST 
0x71a: V652 = 0xff
0x71c: V653 = AND 0xff V1787
0x71e: M[V647] = V653
0x71f: V654 = 0x20
0x721: V655 = ADD 0x20 V647
0x725: V656 = 0x40
0x727: V657 = M[0x40]
0x72a: V658 = SUB V655 V657
0x72c: RETURN V657 V658
---
Entry stack: [V12, 0x709, V1787, V647, V647, V1787]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x709]

================================

Block 0x72d
[0x72d:0x733]
---
Predecessors: [0xeb]
Successors: [0x734, 0x738]
---
0x72d JUMPDEST
0x72e CALLVALUE
0x72f ISZERO
0x730 PUSH2 0x738
0x733 JUMPI
---
0x72d: JUMPDEST 
0x72e: V659 = CALLVALUE
0x72f: V660 = ISZERO V659
0x730: V661 = 0x738
0x733: JUMPI 0x738 V660
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x734
[0x734:0x737]
---
Predecessors: [0x72d]
Successors: []
---
0x734 PUSH1 0x0
0x736 DUP1
0x737 REVERT
---
0x734: V662 = 0x0
0x737: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x738
[0x738:0x73f]
---
Predecessors: [0x72d]
Successors: [0x1351]
---
0x738 JUMPDEST
0x739 PUSH2 0x4c3
0x73c PUSH2 0x1351
0x73f JUMP
---
0x738: JUMPDEST 
0x739: V663 = 0x4c3
0x73c: V664 = 0x1351
0x73f: JUMP 0x1351
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4c3]
Exit stack: [V12, 0x4c3]

================================

Block 0x740
[0x740:0x751]
---
Predecessors: []
Successors: []
---
0x740 JUMPDEST
0x741 PUSH1 0x40
0x743 MLOAD
0x744 SWAP1
0x745 DUP2
0x746 MSTORE
0x747 PUSH1 0x20
0x749 ADD
0x74a PUSH1 0x40
0x74c MLOAD
0x74d DUP1
0x74e SWAP2
0x74f SUB
0x750 SWAP1
0x751 RETURN
---
0x740: JUMPDEST 
0x741: V665 = 0x40
0x743: V666 = M[0x40]
0x746: M[V666] = S0
0x747: V667 = 0x20
0x749: V668 = ADD 0x20 V666
0x74a: V669 = 0x40
0x74c: V670 = M[0x40]
0x74f: V671 = SUB V668 V670
0x751: RETURN V670 V671
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x752
[0x752:0x758]
---
Predecessors: [0xf6]
Successors: [0x759, 0x75d]
---
0x752 JUMPDEST
0x753 CALLVALUE
0x754 ISZERO
0x755 PUSH2 0x75d
0x758 JUMPI
---
0x752: JUMPDEST 
0x753: V672 = CALLVALUE
0x754: V673 = ISZERO V672
0x755: V674 = 0x75d
0x758: JUMPI 0x75d V673
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x759
[0x759:0x75c]
---
Predecessors: [0x752]
Successors: []
---
0x759 PUSH1 0x0
0x75b DUP1
0x75c REVERT
---
0x759: V675 = 0x0
0x75c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75d
[0x75d:0x764]
---
Predecessors: [0x752]
Successors: [0x1357]
---
0x75d JUMPDEST
0x75e PUSH2 0x4c3
0x761 PUSH2 0x1357
0x764 JUMP
---
0x75d: JUMPDEST 
0x75e: V676 = 0x4c3
0x761: V677 = 0x1357
0x764: JUMP 0x1357
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4c3]
Exit stack: [V12, 0x4c3]

================================

Block 0x765
[0x765:0x776]
---
Predecessors: []
Successors: []
---
0x765 JUMPDEST
0x766 PUSH1 0x40
0x768 MLOAD
0x769 SWAP1
0x76a DUP2
0x76b MSTORE
0x76c PUSH1 0x20
0x76e ADD
0x76f PUSH1 0x40
0x771 MLOAD
0x772 DUP1
0x773 SWAP2
0x774 SUB
0x775 SWAP1
0x776 RETURN
---
0x765: JUMPDEST 
0x766: V678 = 0x40
0x768: V679 = M[0x40]
0x76b: M[V679] = S0
0x76c: V680 = 0x20
0x76e: V681 = ADD 0x20 V679
0x76f: V682 = 0x40
0x771: V683 = M[0x40]
0x774: V684 = SUB V681 V683
0x776: RETURN V683 V684
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x777
[0x777:0x77d]
---
Predecessors: [0x101]
Successors: [0x77e, 0x782]
---
0x777 JUMPDEST
0x778 CALLVALUE
0x779 ISZERO
0x77a PUSH2 0x782
0x77d JUMPI
---
0x777: JUMPDEST 
0x778: V685 = CALLVALUE
0x779: V686 = ISZERO V685
0x77a: V687 = 0x782
0x77d: JUMPI 0x782 V686
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x77e
[0x77e:0x781]
---
Predecessors: [0x777]
Successors: []
---
0x77e PUSH1 0x0
0x780 DUP1
0x781 REVERT
---
0x77e: V688 = 0x0
0x781: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x782
[0x782:0x795]
---
Predecessors: [0x777]
Successors: [0x135d]
---
0x782 JUMPDEST
0x783 PUSH2 0x499
0x786 PUSH1 0x1
0x788 PUSH1 0xa0
0x78a PUSH1 0x2
0x78c EXP
0x78d SUB
0x78e PUSH1 0x4
0x790 CALLDATALOAD
0x791 AND
0x792 PUSH2 0x135d
0x795 JUMP
---
0x782: JUMPDEST 
0x783: V689 = 0x499
0x786: V690 = 0x1
0x788: V691 = 0xa0
0x78a: V692 = 0x2
0x78c: V693 = EXP 0x2 0xa0
0x78d: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78e: V695 = 0x4
0x790: V696 = CALLDATALOAD 0x4
0x791: V697 = AND V696 0xffffffffffffffffffffffffffffffffffffffff
0x792: V698 = 0x135d
0x795: JUMP 0x135d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x499, V697]
Exit stack: [V12, 0x499, V697]

================================

Block 0x796
[0x796:0x797]
---
Predecessors: []
Successors: []
---
0x796 JUMPDEST
0x797 STOP
---
0x796: JUMPDEST 
0x797: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x798
[0x798:0x79e]
---
Predecessors: [0x10c]
Successors: [0x79f, 0x7a3]
---
0x798 JUMPDEST
0x799 CALLVALUE
0x79a ISZERO
0x79b PUSH2 0x7a3
0x79e JUMPI
---
0x798: JUMPDEST 
0x799: V699 = CALLVALUE
0x79a: V700 = ISZERO V699
0x79b: V701 = 0x7a3
0x79e: JUMPI 0x7a3 V700
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x79f
[0x79f:0x7a2]
---
Predecessors: [0x798]
Successors: []
---
0x79f PUSH1 0x0
0x7a1 DUP1
0x7a2 REVERT
---
0x79f: V702 = 0x0
0x7a2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a3
[0x7a3:0x7aa]
---
Predecessors: [0x798]
Successors: [0x13f6]
---
0x7a3 JUMPDEST
0x7a4 PUSH2 0x681
0x7a7 PUSH2 0x13f6
0x7aa JUMP
---
0x7a3: JUMPDEST 
0x7a4: V703 = 0x681
0x7a7: V704 = 0x13f6
0x7aa: JUMP 0x13f6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x681]
Exit stack: [V12, 0x681]

================================

Block 0x7ab
[0x7ab:0x7c6]
---
Predecessors: []
Successors: []
---
0x7ab JUMPDEST
0x7ac PUSH1 0x40
0x7ae MLOAD
0x7af PUSH1 0x1
0x7b1 PUSH1 0xa0
0x7b3 PUSH1 0x2
0x7b5 EXP
0x7b6 SUB
0x7b7 SWAP1
0x7b8 SWAP2
0x7b9 AND
0x7ba DUP2
0x7bb MSTORE
0x7bc PUSH1 0x20
0x7be ADD
0x7bf PUSH1 0x40
0x7c1 MLOAD
0x7c2 DUP1
0x7c3 SWAP2
0x7c4 SUB
0x7c5 SWAP1
0x7c6 RETURN
---
0x7ab: JUMPDEST 
0x7ac: V705 = 0x40
0x7ae: V706 = M[0x40]
0x7af: V707 = 0x1
0x7b1: V708 = 0xa0
0x7b3: V709 = 0x2
0x7b5: V710 = EXP 0x2 0xa0
0x7b6: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b9: V712 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7bb: M[V706] = V712
0x7bc: V713 = 0x20
0x7be: V714 = ADD 0x20 V706
0x7bf: V715 = 0x40
0x7c1: V716 = M[0x40]
0x7c4: V717 = SUB V714 V716
0x7c6: RETURN V716 V717
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7c7
[0x7c7:0x7cd]
---
Predecessors: [0x117]
Successors: [0x7ce, 0x7d2]
---
0x7c7 JUMPDEST
0x7c8 CALLVALUE
0x7c9 ISZERO
0x7ca PUSH2 0x7d2
0x7cd JUMPI
---
0x7c7: JUMPDEST 
0x7c8: V718 = CALLVALUE
0x7c9: V719 = ISZERO V718
0x7ca: V720 = 0x7d2
0x7cd: JUMPI 0x7d2 V719
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ce
[0x7ce:0x7d1]
---
Predecessors: [0x7c7]
Successors: []
---
0x7ce PUSH1 0x0
0x7d0 DUP1
0x7d1 REVERT
---
0x7ce: V721 = 0x0
0x7d1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d2
[0x7d2:0x7d9]
---
Predecessors: [0x7c7]
Successors: [0x1405]
---
0x7d2 JUMPDEST
0x7d3 PUSH2 0x4c3
0x7d6 PUSH2 0x1405
0x7d9 JUMP
---
0x7d2: JUMPDEST 
0x7d3: V722 = 0x4c3
0x7d6: V723 = 0x1405
0x7d9: JUMP 0x1405
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4c3]
Exit stack: [V12, 0x4c3]

================================

Block 0x7da
[0x7da:0x7eb]
---
Predecessors: []
Successors: []
---
0x7da JUMPDEST
0x7db PUSH1 0x40
0x7dd MLOAD
0x7de SWAP1
0x7df DUP2
0x7e0 MSTORE
0x7e1 PUSH1 0x20
0x7e3 ADD
0x7e4 PUSH1 0x40
0x7e6 MLOAD
0x7e7 DUP1
0x7e8 SWAP2
0x7e9 SUB
0x7ea SWAP1
0x7eb RETURN
---
0x7da: JUMPDEST 
0x7db: V724 = 0x40
0x7dd: V725 = M[0x40]
0x7e0: M[V725] = S0
0x7e1: V726 = 0x20
0x7e3: V727 = ADD 0x20 V725
0x7e4: V728 = 0x40
0x7e6: V729 = M[0x40]
0x7e9: V730 = SUB V727 V729
0x7eb: RETURN V729 V730
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ec
[0x7ec:0x7f8]
---
Predecessors: [0x2f3, 0x330]
Successors: [0x7f9, 0x7fa]
---
0x7ec JUMPDEST
0x7ed PUSH1 0x0
0x7ef DUP1
0x7f0 DUP3
0x7f1 DUP5
0x7f2 DUP2
0x7f3 ISZERO
0x7f4 ISZERO
0x7f5 PUSH2 0x7fa
0x7f8 JUMPI
---
0x7ec: JUMPDEST 
0x7ed: V731 = 0x0
0x7f3: V732 = ISZERO S0
0x7f4: V733 = ISZERO V732
0x7f5: V734 = 0x7fa
0x7f8: JUMPI 0x7fa V733
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x7f9
[0x7f9:0x7f9]
---
Predecessors: [0x7ec]
Successors: []
---
0x7f9 INVALID
---
0x7f9: INVALID 
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x7fa
[0x7fa:0x800]
---
Predecessors: [0x7ec]
Successors: [0x801]
---
0x7fa JUMPDEST
0x7fb DIV
0x7fc SWAP1
0x7fd POP
0x7fe DUP1
0x7ff SWAP2
0x800 POP
---
0x7fa: JUMPDEST 
0x7fb: V735 = DIV S0 S1
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V735, V735]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, V735, V735]

================================

Block 0x801
[0x801:0x807]
---
Predecessors: [0x7fa]
Successors: [0x311, 0x33c]
---
0x801 JUMPDEST
0x802 POP
0x803 SWAP3
0x804 SWAP2
0x805 POP
0x806 POP
0x807 JUMP
---
0x801: JUMPDEST 
0x807: JUMP {0x311, 0x33c}
---
Entry stack: [V12, V190, S5, {0x311, 0x33c}, S3, S2, V735, V735]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, V190, S5, V735]

================================

Block 0x808
[0x808:0x814]
---
Predecessors: [0x311]
Successors: [0x815, 0x824]
---
0x808 JUMPDEST
0x809 PUSH1 0x0
0x80b DUP3
0x80c DUP3
0x80d MUL
0x80e DUP4
0x80f ISZERO
0x810 DUP1
0x811 PUSH2 0x824
0x814 JUMPI
---
0x808: JUMPDEST 
0x809: V736 = 0x0
0x80d: V737 = MUL V297 S1
0x80f: V738 = ISZERO S1
0x811: V739 = 0x824
0x814: JUMPI 0x824 V738
---
Entry stack: [V12, V190, S5, 0x33c, 0x64, 0x330, S1, V297]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V737, V738]
Exit stack: [V12, V190, S5, 0x33c, 0x64, 0x330, S1, V297, 0x0, V737, V738]

================================

Block 0x815
[0x815:0x81f]
---
Predecessors: [0x808]
Successors: [0x820, 0x821]
---
0x815 POP
0x816 DUP3
0x817 DUP5
0x818 DUP3
0x819 DUP2
0x81a ISZERO
0x81b ISZERO
0x81c PUSH2 0x821
0x81f JUMPI
---
0x81a: V740 = ISZERO S4
0x81b: V741 = ISZERO V740
0x81c: V742 = 0x821
0x81f: JUMPI 0x821 V741
---
Entry stack: [V12, V190, S8, 0x33c, 0x64, 0x330, S4, V297, 0x0, V737, V738]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, V190, S8, 0x33c, 0x64, 0x330, S4, V297, 0x0, V737, V297, S4, V737]

================================

Block 0x820
[0x820:0x820]
---
Predecessors: [0x815]
Successors: []
---
0x820 INVALID
---
0x820: INVALID 
---
Entry stack: [V12, V190, S10, 0x33c, 0x64, 0x330, S6, V297, 0x0, V737, V297, S1, V737]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V190, S10, 0x33c, 0x64, 0x330, S6, V297, 0x0, V737, V297, S1, V737]

================================

Block 0x821
[0x821:0x823]
---
Predecessors: [0x815]
Successors: [0x824]
---
0x821 JUMPDEST
0x822 DIV
0x823 EQ
---
0x821: JUMPDEST 
0x822: V743 = DIV V737 S1
0x823: V744 = EQ V743 V297
---
Entry stack: [V12, V190, S10, 0x33c, 0x64, 0x330, S6, V297, 0x0, V737, V297, S1, V737]
Stack pops: 3
Stack additions: [V744]
Exit stack: [V12, V190, S10, 0x33c, 0x64, 0x330, S6, V297, 0x0, V737, V744]

================================

Block 0x824
[0x824:0x82a]
---
Predecessors: [0x808, 0x821]
Successors: [0x82b, 0x82c]
---
0x824 JUMPDEST
0x825 ISZERO
0x826 ISZERO
0x827 PUSH2 0x82c
0x82a JUMPI
---
0x824: JUMPDEST 
0x825: V745 = ISZERO S0
0x826: V746 = ISZERO V745
0x827: V747 = 0x82c
0x82a: JUMPI 0x82c V746
---
Entry stack: [V12, V190, S8, 0x33c, 0x64, 0x330, S4, V297, 0x0, V737, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, V190, S8, 0x33c, 0x64, 0x330, S4, V297, 0x0, V737]

================================

Block 0x82b
[0x82b:0x82b]
---
Predecessors: [0x824]
Successors: []
---
0x82b INVALID
---
0x82b: INVALID 
---
Entry stack: [V12, V190, S7, 0x33c, 0x64, 0x330, S3, V297, 0x0, V737]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V190, S7, 0x33c, 0x64, 0x330, S3, V297, 0x0, V737]

================================

Block 0x82c
[0x82c:0x82f]
---
Predecessors: [0x824, 0x1486]
Successors: [0x830]
---
0x82c JUMPDEST
0x82d DUP1
0x82e SWAP2
0x82f POP
---
0x82c: JUMPDEST 
---
Entry stack: [V12, S9, S8, S7, S6, S5, {0x330, 0xdec, 0xf07}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, {0x330, 0xdec, 0xf07}, S3, S2, S0, S0]

================================

Block 0x830
[0x830:0x836]
---
Predecessors: [0x82c]
Successors: [0x330, 0xdec, 0xf07]
---
0x830 JUMPDEST
0x831 POP
0x832 SWAP3
0x833 SWAP2
0x834 POP
0x835 POP
0x836 JUMP
---
0x830: JUMPDEST 
0x836: JUMP {0x330, 0xdec, 0xf07}
---
Entry stack: [V12, S9, S8, S7, S6, S5, {0x330, 0xdec, 0xf07}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S9, S8, S7, S6, S5, S1]

================================

Block 0x837
[0x837:0x84d]
---
Predecessors: [0x491]
Successors: [0x84e, 0x852]
---
0x837 JUMPDEST
0x838 PUSH1 0x0
0x83a SLOAD
0x83b CALLER
0x83c PUSH1 0x1
0x83e PUSH1 0xa0
0x840 PUSH1 0x2
0x842 EXP
0x843 SUB
0x844 SWAP1
0x845 DUP2
0x846 AND
0x847 SWAP2
0x848 AND
0x849 EQ
0x84a PUSH2 0x852
0x84d JUMPI
---
0x837: JUMPDEST 
0x838: V748 = 0x0
0x83a: V749 = S[0x0]
0x83b: V750 = CALLER
0x83c: V751 = 0x1
0x83e: V752 = 0xa0
0x840: V753 = 0x2
0x842: V754 = EXP 0x2 0xa0
0x843: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x846: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0x848: V757 = AND V749 0xffffffffffffffffffffffffffffffffffffffff
0x849: V758 = EQ V757 V756
0x84a: V759 = 0x852
0x84d: JUMPI 0x852 V758
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x84e
[0x84e:0x851]
---
Predecessors: [0x837]
Successors: []
---
0x84e PUSH1 0x0
0x850 DUP1
0x851 REVERT
---
0x84e: V760 = 0x0
0x851: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x852
[0x852:0x854]
---
Predecessors: [0x837]
Successors: [0x855]
---
0x852 JUMPDEST
0x853 PUSH1 0x0
---
0x852: JUMPDEST 
0x853: V761 = 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x855
[0x855:0x86b]
---
Predecessors: [0x852]
Successors: [0x86c, 0x86d]
---
0x855 JUMPDEST
0x856 PUSH1 0x2
0x858 DUP1
0x859 SLOAD
0x85a PUSH1 0xa0
0x85c PUSH1 0x2
0x85e EXP
0x85f SWAP1
0x860 DIV
0x861 PUSH1 0xff
0x863 AND
0x864 SWAP1
0x865 DUP2
0x866 GT
0x867 ISZERO
0x868 PUSH2 0x86d
0x86b JUMPI
---
0x855: JUMPDEST 
0x856: V762 = 0x2
0x859: V763 = S[0x2]
0x85a: V764 = 0xa0
0x85c: V765 = 0x2
0x85e: V766 = EXP 0x2 0xa0
0x860: V767 = DIV V763 0x10000000000000000000000000000000000000000
0x861: V768 = 0xff
0x863: V769 = AND 0xff V767
0x866: V770 = GT V769 0x2
0x867: V771 = ISZERO V770
0x868: V772 = 0x86d
0x86b: JUMPI 0x86d V771
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: [V769]
Exit stack: [V12, 0x499, 0x0, V769]

================================

Block 0x86c
[0x86c:0x86c]
---
Predecessors: [0x855]
Successors: []
---
0x86c INVALID
---
0x86c: INVALID 
---
Entry stack: [V12, 0x499, 0x0, V769]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0, V769]

================================

Block 0x86d
[0x86d:0x872]
---
Predecessors: [0x855]
Successors: [0x873, 0x877]
---
0x86d JUMPDEST
0x86e EQ
0x86f PUSH2 0x877
0x872 JUMPI
---
0x86d: JUMPDEST 
0x86e: V773 = EQ V769 0x0
0x86f: V774 = 0x877
0x872: JUMPI 0x877 V773
---
Entry stack: [V12, 0x499, 0x0, V769]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x873
[0x873:0x876]
---
Predecessors: [0x86d]
Successors: []
---
0x873 PUSH1 0x0
0x875 DUP1
0x876 REVERT
---
0x873: V775 = 0x0
0x876: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x877
[0x877:0x89d]
---
Predecessors: [0x86d]
Successors: [0x89e]
---
0x877 JUMPDEST
0x878 PUSH1 0x2
0x87a DUP1
0x87b SLOAD
0x87c PUSH1 0x1
0x87e SWAP2
0x87f SWAP1
0x880 PUSH21 0xff0000000000000000000000000000000000000000
0x896 NOT
0x897 AND
0x898 PUSH1 0xa0
0x89a PUSH1 0x2
0x89c EXP
0x89d DUP4
---
0x877: JUMPDEST 
0x878: V776 = 0x2
0x87b: V777 = S[0x2]
0x87c: V778 = 0x1
0x880: V779 = 0xff0000000000000000000000000000000000000000
0x896: V780 = NOT 0xff0000000000000000000000000000000000000000
0x897: V781 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V777
0x898: V782 = 0xa0
0x89a: V783 = 0x2
0x89c: V784 = EXP 0x2 0xa0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: [0x1, 0x2, V781, 0x10000000000000000000000000000000000000000, 0x1]
Exit stack: [V12, 0x499, 0x1, 0x2, V781, 0x10000000000000000000000000000000000000000, 0x1]

================================

Block 0x89e
[0x89e:0x8d6]
---
Predecessors: [0x877]
Successors: [0x8d7]
---
0x89e JUMPDEST
0x89f MUL
0x8a0 OR
0x8a1 SWAP1
0x8a2 SSTORE
0x8a3 POP
0x8a4 PUSH32 0xa78c547613f6306e7a70d1bd161c18a496cae1eeb8d4f9e58b60d69ad72ddf58
0x8c5 NUMBER
0x8c6 PUSH1 0x40
0x8c8 MLOAD
0x8c9 SWAP1
0x8ca DUP2
0x8cb MSTORE
0x8cc PUSH1 0x20
0x8ce ADD
0x8cf PUSH1 0x40
0x8d1 MLOAD
0x8d2 DUP1
0x8d3 SWAP2
0x8d4 SUB
0x8d5 SWAP1
0x8d6 LOG1
---
0x89e: JUMPDEST 
0x89f: V785 = MUL 0x1 0x10000000000000000000000000000000000000000
0x8a0: V786 = OR 0x10000000000000000000000000000000000000000 V781
0x8a2: S[0x2] = V786
0x8a4: V787 = 0xa78c547613f6306e7a70d1bd161c18a496cae1eeb8d4f9e58b60d69ad72ddf58
0x8c5: V788 = NUMBER
0x8c6: V789 = 0x40
0x8c8: V790 = M[0x40]
0x8cb: M[V790] = V788
0x8cc: V791 = 0x20
0x8ce: V792 = ADD 0x20 V790
0x8cf: V793 = 0x40
0x8d1: V794 = M[0x40]
0x8d4: V795 = SUB V792 V794
0x8d6: LOG V794 V795 0xa78c547613f6306e7a70d1bd161c18a496cae1eeb8d4f9e58b60d69ad72ddf58
---
Entry stack: [V12, 0x499, 0x1, 0x2, V781, 0x10000000000000000000000000000000000000000, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x8d7
[0x8d7:0x8d7]
---
Predecessors: [0x89e, 0x9aa]
Successors: [0x8d8]
---
0x8d7 JUMPDEST
---
0x8d7: JUMPDEST 
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x8d8
[0x8d8:0x8d9]
---
Predecessors: [0x8d7]
Successors: [0x499]
---
0x8d8 JUMPDEST
0x8d9 JUMP
---
0x8d8: JUMPDEST 
0x8d9: JUMP 0x499
---
Entry stack: [V12, 0x499]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x8da
[0x8da:0x8f0]
---
Predecessors: [0x4a6]
Successors: [0x8f1, 0x8f5]
---
0x8da JUMPDEST
0x8db PUSH1 0x0
0x8dd SLOAD
0x8de CALLER
0x8df PUSH1 0x1
0x8e1 PUSH1 0xa0
0x8e3 PUSH1 0x2
0x8e5 EXP
0x8e6 SUB
0x8e7 SWAP1
0x8e8 DUP2
0x8e9 AND
0x8ea SWAP2
0x8eb AND
0x8ec EQ
0x8ed PUSH2 0x8f5
0x8f0 JUMPI
---
0x8da: JUMPDEST 
0x8db: V796 = 0x0
0x8dd: V797 = S[0x0]
0x8de: V798 = CALLER
0x8df: V799 = 0x1
0x8e1: V800 = 0xa0
0x8e3: V801 = 0x2
0x8e5: V802 = EXP 0x2 0xa0
0x8e6: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e9: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0x8eb: V805 = AND V797 0xffffffffffffffffffffffffffffffffffffffff
0x8ec: V806 = EQ V805 V804
0x8ed: V807 = 0x8f5
0x8f0: JUMPI 0x8f5 V806
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x8f1
[0x8f1:0x8f4]
---
Predecessors: [0x8da]
Successors: []
---
0x8f1 PUSH1 0x0
0x8f3 DUP1
0x8f4 REVERT
---
0x8f1: V808 = 0x0
0x8f4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x8f5
[0x8f5:0x8f7]
---
Predecessors: [0x8da]
Successors: [0x8f8]
---
0x8f5 JUMPDEST
0x8f6 PUSH1 0x2
---
0x8f5: JUMPDEST 
0x8f6: V809 = 0x2
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, 0x499, 0x2]

================================

Block 0x8f8
[0x8f8:0x90e]
---
Predecessors: [0x8f5]
Successors: [0x90f, 0x910]
---
0x8f8 JUMPDEST
0x8f9 PUSH1 0x2
0x8fb DUP1
0x8fc SLOAD
0x8fd PUSH1 0xa0
0x8ff PUSH1 0x2
0x901 EXP
0x902 SWAP1
0x903 DIV
0x904 PUSH1 0xff
0x906 AND
0x907 SWAP1
0x908 DUP2
0x909 GT
0x90a ISZERO
0x90b PUSH2 0x910
0x90e JUMPI
---
0x8f8: JUMPDEST 
0x8f9: V810 = 0x2
0x8fc: V811 = S[0x2]
0x8fd: V812 = 0xa0
0x8ff: V813 = 0x2
0x901: V814 = EXP 0x2 0xa0
0x903: V815 = DIV V811 0x10000000000000000000000000000000000000000
0x904: V816 = 0xff
0x906: V817 = AND 0xff V815
0x909: V818 = GT V817 0x2
0x90a: V819 = ISZERO V818
0x90b: V820 = 0x910
0x90e: JUMPI 0x910 V819
---
Entry stack: [V12, 0x499, 0x2]
Stack pops: 0
Stack additions: [V817]
Exit stack: [V12, 0x499, 0x2, V817]

================================

Block 0x90f
[0x90f:0x90f]
---
Predecessors: [0x8f8]
Successors: []
---
0x90f INVALID
---
0x90f: INVALID 
---
Entry stack: [V12, 0x499, 0x2, V817]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x2, V817]

================================

Block 0x910
[0x910:0x915]
---
Predecessors: [0x8f8]
Successors: [0x916, 0x91a]
---
0x910 JUMPDEST
0x911 EQ
0x912 PUSH2 0x91a
0x915 JUMPI
---
0x910: JUMPDEST 
0x911: V821 = EQ V817 0x2
0x912: V822 = 0x91a
0x915: JUMPI 0x91a V821
---
Entry stack: [V12, 0x499, 0x2, V817]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x916
[0x916:0x919]
---
Predecessors: [0x910]
Successors: []
---
0x916 PUSH1 0x0
0x918 DUP1
0x919 REVERT
---
0x916: V823 = 0x0
0x919: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x91a
[0x91a:0x924]
---
Predecessors: [0x910]
Successors: [0x10a4]
---
0x91a JUMPDEST
0x91b PUSH1 0x8
0x91d SLOAD
0x91e PUSH2 0x925
0x921 PUSH2 0x10a4
0x924 JUMP
---
0x91a: JUMPDEST 
0x91b: V824 = 0x8
0x91d: V825 = S[0x8]
0x91e: V826 = 0x925
0x921: V827 = 0x10a4
0x924: JUMP 0x10a4
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: [V825, 0x925]
Exit stack: [V12, 0x499, V825, 0x925]

================================

Block 0x925
[0x925:0x92b]
---
Predecessors: [0x111c]
Successors: [0x92c, 0x930]
---
0x925 JUMPDEST
0x926 LT
0x927 ISZERO
0x928 PUSH2 0x930
0x92b JUMPI
---
0x925: JUMPDEST 
0x926: V828 = LT S0 S1
0x927: V829 = ISZERO V828
0x928: V830 = 0x930
0x92b: JUMPI 0x930 V829
---
Entry stack: [V12, 0x499, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x92c
[0x92c:0x92f]
---
Predecessors: [0x925]
Successors: []
---
0x92c PUSH1 0x0
0x92e DUP1
0x92f REVERT
---
0x92c: V831 = 0x0
0x92f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x930
[0x930:0x994]
---
Predecessors: [0x925]
Successors: [0x995, 0x999]
---
0x930 JUMPDEST
0x931 PUSH1 0x1
0x933 SLOAD
0x934 PUSH1 0x2
0x936 SLOAD
0x937 PUSH1 0x8
0x939 SLOAD
0x93a PUSH1 0x1
0x93c PUSH1 0xa0
0x93e PUSH1 0x2
0x940 EXP
0x941 SUB
0x942 SWAP3
0x943 DUP4
0x944 AND
0x945 SWAP3
0x946 PUSH4 0xa9059cbb
0x94b SWAP3
0x94c AND
0x94d SWAP1
0x94e PUSH1 0x0
0x950 PUSH1 0x40
0x952 MLOAD
0x953 PUSH1 0x20
0x955 ADD
0x956 MSTORE
0x957 PUSH1 0x40
0x959 MLOAD
0x95a PUSH1 0xe0
0x95c PUSH1 0x2
0x95e EXP
0x95f PUSH4 0xffffffff
0x964 DUP6
0x965 AND
0x966 MUL
0x967 DUP2
0x968 MSTORE
0x969 PUSH1 0x1
0x96b PUSH1 0xa0
0x96d PUSH1 0x2
0x96f EXP
0x970 SUB
0x971 SWAP1
0x972 SWAP3
0x973 AND
0x974 PUSH1 0x4
0x976 DUP4
0x977 ADD
0x978 MSTORE
0x979 PUSH1 0x24
0x97b DUP3
0x97c ADD
0x97d MSTORE
0x97e PUSH1 0x44
0x980 ADD
0x981 PUSH1 0x20
0x983 PUSH1 0x40
0x985 MLOAD
0x986 DUP1
0x987 DUP4
0x988 SUB
0x989 DUP2
0x98a PUSH1 0x0
0x98c DUP8
0x98d DUP1
0x98e EXTCODESIZE
0x98f ISZERO
0x990 ISZERO
0x991 PUSH2 0x999
0x994 JUMPI
---
0x930: JUMPDEST 
0x931: V832 = 0x1
0x933: V833 = S[0x1]
0x934: V834 = 0x2
0x936: V835 = S[0x2]
0x937: V836 = 0x8
0x939: V837 = S[0x8]
0x93a: V838 = 0x1
0x93c: V839 = 0xa0
0x93e: V840 = 0x2
0x940: V841 = EXP 0x2 0xa0
0x941: V842 = SUB 0x10000000000000000000000000000000000000000 0x1
0x944: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff V833
0x946: V844 = 0xa9059cbb
0x94c: V845 = AND V835 0xffffffffffffffffffffffffffffffffffffffff
0x94e: V846 = 0x0
0x950: V847 = 0x40
0x952: V848 = M[0x40]
0x953: V849 = 0x20
0x955: V850 = ADD 0x20 V848
0x956: M[V850] = 0x0
0x957: V851 = 0x40
0x959: V852 = M[0x40]
0x95a: V853 = 0xe0
0x95c: V854 = 0x2
0x95e: V855 = EXP 0x2 0xe0
0x95f: V856 = 0xffffffff
0x965: V857 = AND 0xa9059cbb 0xffffffff
0x966: V858 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x968: M[V852] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x969: V859 = 0x1
0x96b: V860 = 0xa0
0x96d: V861 = 0x2
0x96f: V862 = EXP 0x2 0xa0
0x970: V863 = SUB 0x10000000000000000000000000000000000000000 0x1
0x973: V864 = AND V845 0xffffffffffffffffffffffffffffffffffffffff
0x974: V865 = 0x4
0x977: V866 = ADD V852 0x4
0x978: M[V866] = V864
0x979: V867 = 0x24
0x97c: V868 = ADD V852 0x24
0x97d: M[V868] = V837
0x97e: V869 = 0x44
0x980: V870 = ADD 0x44 V852
0x981: V871 = 0x20
0x983: V872 = 0x40
0x985: V873 = M[0x40]
0x988: V874 = SUB V870 V873
0x98a: V875 = 0x0
0x98e: V876 = EXTCODESIZE V843
0x98f: V877 = ISZERO V876
0x990: V878 = ISZERO V877
0x991: V879 = 0x999
0x994: JUMPI 0x999 V878
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: [V843, 0xa9059cbb, V870, 0x20, V873, V874, V873, 0x0, V843]
Exit stack: [V12, 0x499, V843, 0xa9059cbb, V870, 0x20, V873, V874, V873, 0x0, V843]

================================

Block 0x995
[0x995:0x998]
---
Predecessors: [0x930]
Successors: []
---
0x995 PUSH1 0x0
0x997 DUP1
0x998 REVERT
---
0x995: V880 = 0x0
0x998: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V843, 0xa9059cbb, V870, 0x20, V873, V874, V873, 0x0, V843]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V843, 0xa9059cbb, V870, 0x20, V873, V874, V873, 0x0, V843]

================================

Block 0x999
[0x999:0x9a5]
---
Predecessors: [0x930]
Successors: [0x9a6, 0x9aa]
---
0x999 JUMPDEST
0x99a PUSH2 0x2c6
0x99d GAS
0x99e SUB
0x99f CALL
0x9a0 ISZERO
0x9a1 ISZERO
0x9a2 PUSH2 0x9aa
0x9a5 JUMPI
---
0x999: JUMPDEST 
0x99a: V881 = 0x2c6
0x99d: V882 = GAS
0x99e: V883 = SUB V882 0x2c6
0x99f: V884 = CALL V883 V843 0x0 V873 V874 V873 0x20
0x9a0: V885 = ISZERO V884
0x9a1: V886 = ISZERO V885
0x9a2: V887 = 0x9aa
0x9a5: JUMPI 0x9aa V886
---
Entry stack: [V12, 0x499, V843, 0xa9059cbb, V870, 0x20, V873, V874, V873, 0x0, V843]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x499, V843, 0xa9059cbb, V870]

================================

Block 0x9a6
[0x9a6:0x9a9]
---
Predecessors: [0x999]
Successors: []
---
0x9a6 PUSH1 0x0
0x9a8 DUP1
0x9a9 REVERT
---
0x9a6: V888 = 0x0
0x9a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V843, 0xa9059cbb, V870]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V843, 0xa9059cbb, V870]

================================

Block 0x9aa
[0x9aa:0x9b9]
---
Predecessors: [0x999]
Successors: [0x8d7, 0x9ba]
---
0x9aa JUMPDEST
0x9ab POP
0x9ac POP
0x9ad POP
0x9ae PUSH1 0x40
0x9b0 MLOAD
0x9b1 DUP1
0x9b2 MLOAD
0x9b3 SWAP1
0x9b4 POP
0x9b5 ISZERO
0x9b6 PUSH2 0x8d7
0x9b9 JUMPI
---
0x9aa: JUMPDEST 
0x9ae: V889 = 0x40
0x9b0: V890 = M[0x40]
0x9b2: V891 = M[V890]
0x9b5: V892 = ISZERO V891
0x9b6: V893 = 0x8d7
0x9b9: JUMPI 0x8d7 V892
---
Entry stack: [V12, 0x499, V843, 0xa9059cbb, V870]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x9ba
[0x9ba:0xa19]
---
Predecessors: [0x9aa]
Successors: [0xa1a]
---
0x9ba PUSH1 0x9
0x9bc DUP1
0x9bd SLOAD
0x9be PUSH1 0xff
0x9c0 NOT
0x9c1 AND
0x9c2 PUSH1 0x1
0x9c4 OR
0x9c5 SWAP1
0x9c6 SSTORE
0x9c7 PUSH1 0x2
0x9c9 SLOAD
0x9ca PUSH1 0x8
0x9cc SLOAD
0x9cd PUSH32 0x71e030d36a8f7ccefd9771ea7a313a183526841eb6d7815124536a0065d6189d
0x9ee SWAP2
0x9ef PUSH1 0x1
0x9f1 PUSH1 0xa0
0x9f3 PUSH1 0x2
0x9f5 EXP
0x9f6 SUB
0x9f7 AND
0x9f8 SWAP1
0x9f9 PUSH1 0x40
0x9fb MLOAD
0x9fc PUSH1 0x1
0x9fe PUSH1 0xa0
0xa00 PUSH1 0x2
0xa02 EXP
0xa03 SUB
0xa04 SWAP1
0xa05 SWAP3
0xa06 AND
0xa07 DUP3
0xa08 MSTORE
0xa09 PUSH1 0x20
0xa0b DUP3
0xa0c ADD
0xa0d MSTORE
0xa0e PUSH1 0x40
0xa10 SWAP1
0xa11 DUP2
0xa12 ADD
0xa13 SWAP1
0xa14 MLOAD
0xa15 DUP1
0xa16 SWAP2
0xa17 SUB
0xa18 SWAP1
0xa19 LOG1
---
0x9ba: V894 = 0x9
0x9bd: V895 = S[0x9]
0x9be: V896 = 0xff
0x9c0: V897 = NOT 0xff
0x9c1: V898 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V895
0x9c2: V899 = 0x1
0x9c4: V900 = OR 0x1 V898
0x9c6: S[0x9] = V900
0x9c7: V901 = 0x2
0x9c9: V902 = S[0x2]
0x9ca: V903 = 0x8
0x9cc: V904 = S[0x8]
0x9cd: V905 = 0x71e030d36a8f7ccefd9771ea7a313a183526841eb6d7815124536a0065d6189d
0x9ef: V906 = 0x1
0x9f1: V907 = 0xa0
0x9f3: V908 = 0x2
0x9f5: V909 = EXP 0x2 0xa0
0x9f6: V910 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f7: V911 = AND 0xffffffffffffffffffffffffffffffffffffffff V902
0x9f9: V912 = 0x40
0x9fb: V913 = M[0x40]
0x9fc: V914 = 0x1
0x9fe: V915 = 0xa0
0xa00: V916 = 0x2
0xa02: V917 = EXP 0x2 0xa0
0xa03: V918 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa06: V919 = AND V911 0xffffffffffffffffffffffffffffffffffffffff
0xa08: M[V913] = V919
0xa09: V920 = 0x20
0xa0c: V921 = ADD V913 0x20
0xa0d: M[V921] = V904
0xa0e: V922 = 0x40
0xa12: V923 = ADD 0x40 V913
0xa14: V924 = M[0x40]
0xa17: V925 = SUB V923 V924
0xa19: LOG V924 V925 0x71e030d36a8f7ccefd9771ea7a313a183526841eb6d7815124536a0065d6189d
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xa1a
[0xa1a:0xa1a]
---
Predecessors: [0x9ba]
Successors: [0xa1b]
---
0xa1a JUMPDEST
---
0xa1a: JUMPDEST 
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xa1b
[0xa1b:0xa1b]
---
Predecessors: [0xa1a]
Successors: [0xa1c]
---
0xa1b JUMPDEST
---
0xa1b: JUMPDEST 
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xa1c
[0xa1c:0xa1d]
---
Predecessors: [0xa1b]
Successors: [0x499]
---
0xa1c JUMPDEST
0xa1d JUMP
---
0xa1c: JUMPDEST 
0xa1d: JUMP 0x499
---
Entry stack: [V12, 0x499]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa1e
[0xa1e:0xa23]
---
Predecessors: [0x4bb]
Successors: [0x4c3]
---
0xa1e JUMPDEST
0xa1f PUSH1 0x8
0xa21 SLOAD
0xa22 DUP2
0xa23 JUMP
---
0xa1e: JUMPDEST 
0xa1f: V926 = 0x8
0xa21: V927 = S[0x8]
0xa23: JUMP 0x4c3
---
Entry stack: [V12, 0x4c3]
Stack pops: 1
Stack additions: [S0, V927]
Exit stack: [V12, 0x4c3, V927]

================================

Block 0xa24
[0xa24:0xa27]
---
Predecessors: [0x4e0]
Successors: [0xa28]
---
0xa24 JUMPDEST
0xa25 PUSH1 0x6
0xa27 SLOAD
---
0xa24: JUMPDEST 
0xa25: V928 = 0x6
0xa27: V929 = S[0x6]
---
Entry stack: [V12, 0x4c3]
Stack pops: 0
Stack additions: [V929]
Exit stack: [V12, 0x4c3, V929]

================================

Block 0xa28
[0xa28:0xa2a]
---
Predecessors: [0xa24]
Successors: [0x4c3]
---
0xa28 JUMPDEST
0xa29 SWAP1
0xa2a JUMP
---
0xa28: JUMPDEST 
0xa2a: JUMP 0x4c3
---
Entry stack: [V12, 0x4c3, V929]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V929]

================================

Block 0xa2b
[0xa2b:0xa69]
---
Predecessors: [0x505]
Successors: [0x519]
---
0xa2b JUMPDEST
0xa2c PUSH1 0xa
0xa2e PUSH1 0x20
0xa30 MSTORE
0xa31 PUSH1 0x0
0xa33 SWAP1
0xa34 DUP2
0xa35 MSTORE
0xa36 PUSH1 0x40
0xa38 SWAP1
0xa39 SHA3
0xa3a DUP1
0xa3b SLOAD
0xa3c PUSH1 0x1
0xa3e DUP3
0xa3f ADD
0xa40 SLOAD
0xa41 PUSH1 0x2
0xa43 DUP4
0xa44 ADD
0xa45 SLOAD
0xa46 PUSH1 0x3
0xa48 DUP5
0xa49 ADD
0xa4a SLOAD
0xa4b PUSH1 0x4
0xa4d SWAP1
0xa4e SWAP5
0xa4f ADD
0xa50 SLOAD
0xa51 PUSH1 0xff
0xa53 SWAP4
0xa54 DUP5
0xa55 AND
0xa56 SWAP5
0xa57 SWAP3
0xa58 SWAP4
0xa59 SWAP2
0xa5a DUP3
0xa5b AND
0xa5c SWAP3
0xa5d SWAP2
0xa5e DUP2
0xa5f DUP2
0xa60 AND
0xa61 SWAP2
0xa62 PUSH2 0x100
0xa65 SWAP1
0xa66 DIV
0xa67 AND
0xa68 DUP7
0xa69 JUMP
---
0xa2b: JUMPDEST 
0xa2c: V930 = 0xa
0xa2e: V931 = 0x20
0xa30: M[0x20] = 0xa
0xa31: V932 = 0x0
0xa35: M[0x0] = V465
0xa36: V933 = 0x40
0xa39: V934 = SHA3 0x0 0x40
0xa3b: V935 = S[V934]
0xa3c: V936 = 0x1
0xa3f: V937 = ADD V934 0x1
0xa40: V938 = S[V937]
0xa41: V939 = 0x2
0xa44: V940 = ADD V934 0x2
0xa45: V941 = S[V940]
0xa46: V942 = 0x3
0xa49: V943 = ADD V934 0x3
0xa4a: V944 = S[V943]
0xa4b: V945 = 0x4
0xa4f: V946 = ADD V934 0x4
0xa50: V947 = S[V946]
0xa51: V948 = 0xff
0xa55: V949 = AND 0xff V935
0xa5b: V950 = AND 0xff V941
0xa60: V951 = AND 0xff V947
0xa62: V952 = 0x100
0xa66: V953 = DIV V947 0x100
0xa67: V954 = AND V953 0xff
0xa69: JUMP 0x519
---
Entry stack: [V12, 0x519, V465]
Stack pops: 2
Stack additions: [S1, V949, V938, V950, V944, V951, V954]
Exit stack: [V12, 0x519, V949, V938, V950, V944, V951, V954]

================================

Block 0xa6a
[0xa6a:0xa81]
---
Predecessors: [0x567]
Successors: [0xa82, 0xa86]
---
0xa6a JUMPDEST
0xa6b PUSH1 0x0
0xa6d DUP1
0xa6e SLOAD
0xa6f CALLER
0xa70 PUSH1 0x1
0xa72 PUSH1 0xa0
0xa74 PUSH1 0x2
0xa76 EXP
0xa77 SUB
0xa78 SWAP1
0xa79 DUP2
0xa7a AND
0xa7b SWAP2
0xa7c AND
0xa7d EQ
0xa7e PUSH2 0xa86
0xa81 JUMPI
---
0xa6a: JUMPDEST 
0xa6b: V955 = 0x0
0xa6e: V956 = S[0x0]
0xa6f: V957 = CALLER
0xa70: V958 = 0x1
0xa72: V959 = 0xa0
0xa74: V960 = 0x2
0xa76: V961 = EXP 0x2 0xa0
0xa77: V962 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7a: V963 = AND 0xffffffffffffffffffffffffffffffffffffffff V957
0xa7c: V964 = AND V956 0xffffffffffffffffffffffffffffffffffffffff
0xa7d: V965 = EQ V964 V963
0xa7e: V966 = 0xa86
0xa81: JUMPI 0xa86 V965
---
Entry stack: [V12, 0x499, V496]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x499, V496, 0x0]

================================

Block 0xa82
[0xa82:0xa85]
---
Predecessors: [0xa6a]
Successors: []
---
0xa82 PUSH1 0x0
0xa84 DUP1
0xa85 REVERT
---
0xa82: V967 = 0x0
0xa85: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V496, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V496, 0x0]

================================

Block 0xa86
[0xa86:0xa88]
---
Predecessors: [0xa6a]
Successors: [0xa89]
---
0xa86 JUMPDEST
0xa87 PUSH1 0x0
---
0xa86: JUMPDEST 
0xa87: V968 = 0x0
---
Entry stack: [V12, 0x499, V496, 0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x499, V496, 0x0, 0x0]

================================

Block 0xa89
[0xa89:0xa9f]
---
Predecessors: [0xa86]
Successors: [0xaa0, 0xaa1]
---
0xa89 JUMPDEST
0xa8a PUSH1 0x2
0xa8c DUP1
0xa8d SLOAD
0xa8e PUSH1 0xa0
0xa90 PUSH1 0x2
0xa92 EXP
0xa93 SWAP1
0xa94 DIV
0xa95 PUSH1 0xff
0xa97 AND
0xa98 SWAP1
0xa99 DUP2
0xa9a GT
0xa9b ISZERO
0xa9c PUSH2 0xaa1
0xa9f JUMPI
---
0xa89: JUMPDEST 
0xa8a: V969 = 0x2
0xa8d: V970 = S[0x2]
0xa8e: V971 = 0xa0
0xa90: V972 = 0x2
0xa92: V973 = EXP 0x2 0xa0
0xa94: V974 = DIV V970 0x10000000000000000000000000000000000000000
0xa95: V975 = 0xff
0xa97: V976 = AND 0xff V974
0xa9a: V977 = GT V976 0x2
0xa9b: V978 = ISZERO V977
0xa9c: V979 = 0xaa1
0xa9f: JUMPI 0xaa1 V978
---
Entry stack: [V12, 0x499, V496, 0x0, 0x0]
Stack pops: 0
Stack additions: [V976]
Exit stack: [V12, 0x499, V496, 0x0, 0x0, V976]

================================

Block 0xaa0
[0xaa0:0xaa0]
---
Predecessors: [0xa89]
Successors: []
---
0xaa0 INVALID
---
0xaa0: INVALID 
---
Entry stack: [V12, 0x499, V496, 0x0, 0x0, V976]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V496, 0x0, 0x0, V976]

================================

Block 0xaa1
[0xaa1:0xaa7]
---
Predecessors: [0xa89]
Successors: [0xaa8, 0xac5]
---
0xaa1 JUMPDEST
0xaa2 EQ
0xaa3 DUP1
0xaa4 PUSH2 0xac5
0xaa7 JUMPI
---
0xaa1: JUMPDEST 
0xaa2: V980 = EQ V976 0x0
0xaa4: V981 = 0xac5
0xaa7: JUMPI 0xac5 V980
---
Entry stack: [V12, 0x499, V496, 0x0, 0x0, V976]
Stack pops: 2
Stack additions: [V980]
Exit stack: [V12, 0x499, V496, 0x0, V980]

================================

Block 0xaa8
[0xaa8:0xaaa]
---
Predecessors: [0xaa1]
Successors: [0xaab]
---
0xaa8 POP
0xaa9 PUSH1 0x1
---
0xaa9: V982 = 0x1
---
Entry stack: [V12, 0x499, V496, 0x0, V980]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x499, V496, 0x0, 0x1]

================================

Block 0xaab
[0xaab:0xac1]
---
Predecessors: [0xaa8]
Successors: [0xac2, 0xac3]
---
0xaab JUMPDEST
0xaac PUSH1 0x2
0xaae DUP1
0xaaf SLOAD
0xab0 PUSH1 0xa0
0xab2 PUSH1 0x2
0xab4 EXP
0xab5 SWAP1
0xab6 DIV
0xab7 PUSH1 0xff
0xab9 AND
0xaba SWAP1
0xabb DUP2
0xabc GT
0xabd ISZERO
0xabe PUSH2 0xac3
0xac1 JUMPI
---
0xaab: JUMPDEST 
0xaac: V983 = 0x2
0xaaf: V984 = S[0x2]
0xab0: V985 = 0xa0
0xab2: V986 = 0x2
0xab4: V987 = EXP 0x2 0xa0
0xab6: V988 = DIV V984 0x10000000000000000000000000000000000000000
0xab7: V989 = 0xff
0xab9: V990 = AND 0xff V988
0xabc: V991 = GT V990 0x2
0xabd: V992 = ISZERO V991
0xabe: V993 = 0xac3
0xac1: JUMPI 0xac3 V992
---
Entry stack: [V12, 0x499, V496, 0x0, 0x1]
Stack pops: 0
Stack additions: [V990]
Exit stack: [V12, 0x499, V496, 0x0, 0x1, V990]

================================

Block 0xac2
[0xac2:0xac2]
---
Predecessors: [0xaab]
Successors: []
---
0xac2 INVALID
---
0xac2: INVALID 
---
Entry stack: [V12, 0x499, V496, 0x0, 0x1, V990]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V496, 0x0, 0x1, V990]

================================

Block 0xac3
[0xac3:0xac4]
---
Predecessors: [0xaab]
Successors: [0xac5]
---
0xac3 JUMPDEST
0xac4 EQ
---
0xac3: JUMPDEST 
0xac4: V994 = EQ V990 0x1
---
Entry stack: [V12, 0x499, V496, 0x0, 0x1, V990]
Stack pops: 2
Stack additions: [V994]
Exit stack: [V12, 0x499, V496, 0x0, V994]

================================

Block 0xac5
[0xac5:0xacb]
---
Predecessors: [0xaa1, 0xac3]
Successors: [0xacc, 0xad0]
---
0xac5 JUMPDEST
0xac6 ISZERO
0xac7 ISZERO
0xac8 PUSH2 0xad0
0xacb JUMPI
---
0xac5: JUMPDEST 
0xac6: V995 = ISZERO S0
0xac7: V996 = ISZERO V995
0xac8: V997 = 0xad0
0xacb: JUMPI 0xad0 V996
---
Entry stack: [V12, 0x499, V496, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x499, V496, 0x0]

================================

Block 0xacc
[0xacc:0xacf]
---
Predecessors: [0xac5]
Successors: []
---
0xacc PUSH1 0x0
0xace DUP1
0xacf REVERT
---
0xacc: V998 = 0x0
0xacf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V496, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V496, 0x0]

================================

Block 0xad0
[0xad0:0xad7]
---
Predecessors: [0xac5]
Successors: [0xad8, 0xadc]
---
0xad0 JUMPDEST
0xad1 TIMESTAMP
0xad2 DUP3
0xad3 GT
0xad4 PUSH2 0xadc
0xad7 JUMPI
---
0xad0: JUMPDEST 
0xad1: V999 = TIMESTAMP
0xad3: V1000 = GT V496 V999
0xad4: V1001 = 0xadc
0xad7: JUMPI 0xadc V1000
---
Entry stack: [V12, 0x499, V496, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x499, V496, 0x0]

================================

Block 0xad8
[0xad8:0xadb]
---
Predecessors: [0xad0]
Successors: []
---
0xad8 PUSH1 0x0
0xada DUP1
0xadb REVERT
---
0xad8: V1002 = 0x0
0xadb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V496, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V496, 0x0]

================================

Block 0xadc
[0xadc:0xb1f]
---
Predecessors: [0xad0]
Successors: [0xb20]
---
0xadc JUMPDEST
0xadd POP
0xade PUSH1 0x3
0xae0 DUP1
0xae1 SLOAD
0xae2 SWAP1
0xae3 DUP3
0xae4 SWAP1
0xae5 SSTORE
0xae6 PUSH32 0x1359015318dd1f94786883fdb90e4e98c3dbf6757afa0d874b690a768cbb1393
0xb07 DUP2
0xb08 DUP4
0xb09 PUSH1 0x40
0xb0b MLOAD
0xb0c SWAP2
0xb0d DUP3
0xb0e MSTORE
0xb0f PUSH1 0x20
0xb11 DUP3
0xb12 ADD
0xb13 MSTORE
0xb14 PUSH1 0x40
0xb16 SWAP1
0xb17 DUP2
0xb18 ADD
0xb19 SWAP1
0xb1a MLOAD
0xb1b DUP1
0xb1c SWAP2
0xb1d SUB
0xb1e SWAP1
0xb1f LOG1
---
0xadc: JUMPDEST 
0xade: V1003 = 0x3
0xae1: V1004 = S[0x3]
0xae5: S[0x3] = V496
0xae6: V1005 = 0x1359015318dd1f94786883fdb90e4e98c3dbf6757afa0d874b690a768cbb1393
0xb09: V1006 = 0x40
0xb0b: V1007 = M[0x40]
0xb0e: M[V1007] = V1004
0xb0f: V1008 = 0x20
0xb12: V1009 = ADD V1007 0x20
0xb13: M[V1009] = V496
0xb14: V1010 = 0x40
0xb18: V1011 = ADD 0x40 V1007
0xb1a: V1012 = M[0x40]
0xb1d: V1013 = SUB V1011 V1012
0xb1f: LOG V1012 V1013 0x1359015318dd1f94786883fdb90e4e98c3dbf6757afa0d874b690a768cbb1393
---
Entry stack: [V12, 0x499, V496, 0x0]
Stack pops: 2
Stack additions: [S1, V1004]
Exit stack: [V12, 0x499, V496, V1004]

================================

Block 0xb20
[0xb20:0xb20]
---
Predecessors: [0xadc]
Successors: [0xb21]
---
0xb20 JUMPDEST
---
0xb20: JUMPDEST 
---
Entry stack: [V12, 0x499, V496, V1004]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V496, V1004]

================================

Block 0xb21
[0xb21:0xb24]
---
Predecessors: [0xb20]
Successors: [0x499]
---
0xb21 JUMPDEST
0xb22 POP
0xb23 POP
0xb24 JUMP
---
0xb21: JUMPDEST 
0xb24: JUMP 0x499
---
Entry stack: [V12, 0x499, V496, V1004]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xb25
[0xb25:0xb3b]
---
Predecessors: [0x57f]
Successors: [0xb3c, 0xb40]
---
0xb25 JUMPDEST
0xb26 PUSH1 0x0
0xb28 SLOAD
0xb29 CALLER
0xb2a PUSH1 0x1
0xb2c PUSH1 0xa0
0xb2e PUSH1 0x2
0xb30 EXP
0xb31 SUB
0xb32 SWAP1
0xb33 DUP2
0xb34 AND
0xb35 SWAP2
0xb36 AND
0xb37 EQ
0xb38 PUSH2 0xb40
0xb3b JUMPI
---
0xb25: JUMPDEST 
0xb26: V1014 = 0x0
0xb28: V1015 = S[0x0]
0xb29: V1016 = CALLER
0xb2a: V1017 = 0x1
0xb2c: V1018 = 0xa0
0xb2e: V1019 = 0x2
0xb30: V1020 = EXP 0x2 0xa0
0xb31: V1021 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb34: V1022 = AND 0xffffffffffffffffffffffffffffffffffffffff V1016
0xb36: V1023 = AND V1015 0xffffffffffffffffffffffffffffffffffffffff
0xb37: V1024 = EQ V1023 V1022
0xb38: V1025 = 0xb40
0xb3b: JUMPI 0xb40 V1024
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xb3c
[0xb3c:0xb3f]
---
Predecessors: [0xb25]
Successors: []
---
0xb3c PUSH1 0x0
0xb3e DUP1
0xb3f REVERT
---
0xb3c: V1026 = 0x0
0xb3f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xb40
[0xb40:0xb53]
---
Predecessors: [0xb25]
Successors: [0xb54, 0xb58]
---
0xb40 JUMPDEST
0xb41 PUSH1 0x0
0xb43 SLOAD
0xb44 PUSH1 0xa0
0xb46 PUSH1 0x2
0xb48 EXP
0xb49 SWAP1
0xb4a DIV
0xb4b PUSH1 0xff
0xb4d AND
0xb4e ISZERO
0xb4f ISZERO
0xb50 PUSH2 0xb58
0xb53 JUMPI
---
0xb40: JUMPDEST 
0xb41: V1027 = 0x0
0xb43: V1028 = S[0x0]
0xb44: V1029 = 0xa0
0xb46: V1030 = 0x2
0xb48: V1031 = EXP 0x2 0xa0
0xb4a: V1032 = DIV V1028 0x10000000000000000000000000000000000000000
0xb4b: V1033 = 0xff
0xb4d: V1034 = AND 0xff V1032
0xb4e: V1035 = ISZERO V1034
0xb4f: V1036 = ISZERO V1035
0xb50: V1037 = 0xb58
0xb53: JUMPI 0xb58 V1036
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xb54
[0xb54:0xb57]
---
Predecessors: [0xb40]
Successors: []
---
0xb54 PUSH1 0x0
0xb56 DUP1
0xb57 REVERT
---
0xb54: V1038 = 0x0
0xb57: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xb58
[0xb58:0xba2]
---
Predecessors: [0xb40]
Successors: [0xba3]
---
0xb58 JUMPDEST
0xb59 PUSH1 0x0
0xb5b DUP1
0xb5c SLOAD
0xb5d PUSH21 0xff0000000000000000000000000000000000000000
0xb73 NOT
0xb74 AND
0xb75 SWAP1
0xb76 SSTORE
0xb77 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0xb98 PUSH1 0x40
0xb9a MLOAD
0xb9b PUSH1 0x40
0xb9d MLOAD
0xb9e DUP1
0xb9f SWAP2
0xba0 SUB
0xba1 SWAP1
0xba2 LOG1
---
0xb58: JUMPDEST 
0xb59: V1039 = 0x0
0xb5c: V1040 = S[0x0]
0xb5d: V1041 = 0xff0000000000000000000000000000000000000000
0xb73: V1042 = NOT 0xff0000000000000000000000000000000000000000
0xb74: V1043 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1040
0xb76: S[0x0] = V1043
0xb77: V1044 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0xb98: V1045 = 0x40
0xb9a: V1046 = M[0x40]
0xb9b: V1047 = 0x40
0xb9d: V1048 = M[0x40]
0xba0: V1049 = SUB V1046 V1048
0xba2: LOG V1048 V1049 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xba3
[0xba3:0xba3]
---
Predecessors: [0xb58]
Successors: [0xba4]
---
0xba3 JUMPDEST
---
0xba3: JUMPDEST 
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xba4
[0xba4:0xba4]
---
Predecessors: [0xba3]
Successors: [0xba5]
---
0xba4 JUMPDEST
---
0xba4: JUMPDEST 
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0xba5
[0xba5:0xba6]
---
Predecessors: [0xba4]
Successors: [0x499]
---
0xba5 JUMPDEST
0xba6 JUMP
---
0xba5: JUMPDEST 
0xba6: JUMP 0x499
---
Entry stack: [V12, 0x499]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xba7
[0xba7:0xbbe]
---
Predecessors: [0x594]
Successors: [0xbbf, 0xbc3]
---
0xba7 JUMPDEST
0xba8 PUSH1 0x0
0xbaa DUP1
0xbab SLOAD
0xbac CALLER
0xbad PUSH1 0x1
0xbaf PUSH1 0xa0
0xbb1 PUSH1 0x2
0xbb3 EXP
0xbb4 SUB
0xbb5 SWAP1
0xbb6 DUP2
0xbb7 AND
0xbb8 SWAP2
0xbb9 AND
0xbba EQ
0xbbb PUSH2 0xbc3
0xbbe JUMPI
---
0xba7: JUMPDEST 
0xba8: V1050 = 0x0
0xbab: V1051 = S[0x0]
0xbac: V1052 = CALLER
0xbad: V1053 = 0x1
0xbaf: V1054 = 0xa0
0xbb1: V1055 = 0x2
0xbb3: V1056 = EXP 0x2 0xa0
0xbb4: V1057 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb7: V1058 = AND 0xffffffffffffffffffffffffffffffffffffffff V1052
0xbb9: V1059 = AND V1051 0xffffffffffffffffffffffffffffffffffffffff
0xbba: V1060 = EQ V1059 V1058
0xbbb: V1061 = 0xbc3
0xbbe: JUMPI 0xbc3 V1060
---
Entry stack: [V12, 0x499, V510]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x499, V510, 0x0]

================================

Block 0xbbf
[0xbbf:0xbc2]
---
Predecessors: [0xba7]
Successors: []
---
0xbbf PUSH1 0x0
0xbc1 DUP1
0xbc2 REVERT
---
0xbbf: V1062 = 0x0
0xbc2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V510, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V510, 0x0]

================================

Block 0xbc3
[0xbc3:0xbc5]
---
Predecessors: [0xba7]
Successors: [0xbc6]
---
0xbc3 JUMPDEST
0xbc4 PUSH1 0x0
---
0xbc3: JUMPDEST 
0xbc4: V1063 = 0x0
---
Entry stack: [V12, 0x499, V510, 0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x499, V510, 0x0, 0x0]

================================

Block 0xbc6
[0xbc6:0xbdc]
---
Predecessors: [0xbc3]
Successors: [0xbdd, 0xbde]
---
0xbc6 JUMPDEST
0xbc7 PUSH1 0x2
0xbc9 DUP1
0xbca SLOAD
0xbcb PUSH1 0xa0
0xbcd PUSH1 0x2
0xbcf EXP
0xbd0 SWAP1
0xbd1 DIV
0xbd2 PUSH1 0xff
0xbd4 AND
0xbd5 SWAP1
0xbd6 DUP2
0xbd7 GT
0xbd8 ISZERO
0xbd9 PUSH2 0xbde
0xbdc JUMPI
---
0xbc6: JUMPDEST 
0xbc7: V1064 = 0x2
0xbca: V1065 = S[0x2]
0xbcb: V1066 = 0xa0
0xbcd: V1067 = 0x2
0xbcf: V1068 = EXP 0x2 0xa0
0xbd1: V1069 = DIV V1065 0x10000000000000000000000000000000000000000
0xbd2: V1070 = 0xff
0xbd4: V1071 = AND 0xff V1069
0xbd7: V1072 = GT V1071 0x2
0xbd8: V1073 = ISZERO V1072
0xbd9: V1074 = 0xbde
0xbdc: JUMPI 0xbde V1073
---
Entry stack: [V12, 0x499, V510, 0x0, 0x0]
Stack pops: 0
Stack additions: [V1071]
Exit stack: [V12, 0x499, V510, 0x0, 0x0, V1071]

================================

Block 0xbdd
[0xbdd:0xbdd]
---
Predecessors: [0xbc6]
Successors: []
---
0xbdd INVALID
---
0xbdd: INVALID 
---
Entry stack: [V12, 0x499, V510, 0x0, 0x0, V1071]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V510, 0x0, 0x0, V1071]

================================

Block 0xbde
[0xbde:0xbe3]
---
Predecessors: [0xbc6]
Successors: [0xbe4, 0xbe8]
---
0xbde JUMPDEST
0xbdf EQ
0xbe0 PUSH2 0xbe8
0xbe3 JUMPI
---
0xbde: JUMPDEST 
0xbdf: V1075 = EQ V1071 0x0
0xbe0: V1076 = 0xbe8
0xbe3: JUMPI 0xbe8 V1075
---
Entry stack: [V12, 0x499, V510, 0x0, 0x0, V1071]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x499, V510, 0x0]

================================

Block 0xbe4
[0xbe4:0xbe7]
---
Predecessors: [0xbde]
Successors: []
---
0xbe4 PUSH1 0x0
0xbe6 DUP1
0xbe7 REVERT
---
0xbe4: V1077 = 0x0
0xbe7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V510, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V510, 0x0]

================================

Block 0xbe8
[0xbe8:0xbef]
---
Predecessors: [0xbde]
Successors: [0xbf0, 0xbf4]
---
0xbe8 JUMPDEST
0xbe9 TIMESTAMP
0xbea DUP3
0xbeb GT
0xbec PUSH2 0xbf4
0xbef JUMPI
---
0xbe8: JUMPDEST 
0xbe9: V1078 = TIMESTAMP
0xbeb: V1079 = GT V510 V1078
0xbec: V1080 = 0xbf4
0xbef: JUMPI 0xbf4 V1079
---
Entry stack: [V12, 0x499, V510, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x499, V510, 0x0]

================================

Block 0xbf0
[0xbf0:0xbf3]
---
Predecessors: [0xbe8]
Successors: []
---
0xbf0 PUSH1 0x0
0xbf2 DUP1
0xbf3 REVERT
---
0xbf0: V1081 = 0x0
0xbf3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V510, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V510, 0x0]

================================

Block 0xbf4
[0xbf4:0xc37]
---
Predecessors: [0xbe8]
Successors: [0xc38]
---
0xbf4 JUMPDEST
0xbf5 POP
0xbf6 PUSH1 0x4
0xbf8 DUP1
0xbf9 SLOAD
0xbfa SWAP1
0xbfb DUP3
0xbfc SWAP1
0xbfd SSTORE
0xbfe PUSH32 0x1359015318dd1f94786883fdb90e4e98c3dbf6757afa0d874b690a768cbb1393
0xc1f DUP2
0xc20 DUP4
0xc21 PUSH1 0x40
0xc23 MLOAD
0xc24 SWAP2
0xc25 DUP3
0xc26 MSTORE
0xc27 PUSH1 0x20
0xc29 DUP3
0xc2a ADD
0xc2b MSTORE
0xc2c PUSH1 0x40
0xc2e SWAP1
0xc2f DUP2
0xc30 ADD
0xc31 SWAP1
0xc32 MLOAD
0xc33 DUP1
0xc34 SWAP2
0xc35 SUB
0xc36 SWAP1
0xc37 LOG1
---
0xbf4: JUMPDEST 
0xbf6: V1082 = 0x4
0xbf9: V1083 = S[0x4]
0xbfd: S[0x4] = V510
0xbfe: V1084 = 0x1359015318dd1f94786883fdb90e4e98c3dbf6757afa0d874b690a768cbb1393
0xc21: V1085 = 0x40
0xc23: V1086 = M[0x40]
0xc26: M[V1086] = V1083
0xc27: V1087 = 0x20
0xc2a: V1088 = ADD V1086 0x20
0xc2b: M[V1088] = V510
0xc2c: V1089 = 0x40
0xc30: V1090 = ADD 0x40 V1086
0xc32: V1091 = M[0x40]
0xc35: V1092 = SUB V1090 V1091
0xc37: LOG V1091 V1092 0x1359015318dd1f94786883fdb90e4e98c3dbf6757afa0d874b690a768cbb1393
---
Entry stack: [V12, 0x499, V510, 0x0]
Stack pops: 2
Stack additions: [S1, V1083]
Exit stack: [V12, 0x499, V510, V1083]

================================

Block 0xc38
[0xc38:0xc38]
---
Predecessors: [0xbf4]
Successors: [0xc39]
---
0xc38 JUMPDEST
---
0xc38: JUMPDEST 
---
Entry stack: [V12, 0x499, V510, V1083]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V510, V1083]

================================

Block 0xc39
[0xc39:0xc3c]
---
Predecessors: [0xc38]
Successors: [0x499]
---
0xc39 JUMPDEST
0xc3a POP
0xc3b POP
0xc3c JUMP
---
0xc39: JUMPDEST 
0xc3c: JUMP 0x499
---
Entry stack: [V12, 0x499, V510, V1083]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3d
[0xc3d:0xc4c]
---
Predecessors: [0x5ac]
Successors: [0x5b4]
---
0xc3d JUMPDEST
0xc3e PUSH1 0x0
0xc40 SLOAD
0xc41 PUSH1 0xa0
0xc43 PUSH1 0x2
0xc45 EXP
0xc46 SWAP1
0xc47 DIV
0xc48 PUSH1 0xff
0xc4a AND
0xc4b DUP2
0xc4c JUMP
---
0xc3d: JUMPDEST 
0xc3e: V1093 = 0x0
0xc40: V1094 = S[0x0]
0xc41: V1095 = 0xa0
0xc43: V1096 = 0x2
0xc45: V1097 = EXP 0x2 0xa0
0xc47: V1098 = DIV V1094 0x10000000000000000000000000000000000000000
0xc48: V1099 = 0xff
0xc4a: V1100 = AND 0xff V1098
0xc4c: JUMP 0x5b4
---
Entry stack: [V12, 0x5b4]
Stack pops: 1
Stack additions: [S0, V1100]
Exit stack: [V12, 0x5b4, V1100]

================================

Block 0xc4d
[0xc4d:0xc63]
---
Predecessors: [0x5d3]
Successors: [0xc64, 0xc68]
---
0xc4d JUMPDEST
0xc4e PUSH1 0x0
0xc50 SLOAD
0xc51 CALLER
0xc52 PUSH1 0x1
0xc54 PUSH1 0xa0
0xc56 PUSH1 0x2
0xc58 EXP
0xc59 SUB
0xc5a SWAP1
0xc5b DUP2
0xc5c AND
0xc5d SWAP2
0xc5e AND
0xc5f EQ
0xc60 PUSH2 0xc68
0xc63 JUMPI
---
0xc4d: JUMPDEST 
0xc4e: V1101 = 0x0
0xc50: V1102 = S[0x0]
0xc51: V1103 = CALLER
0xc52: V1104 = 0x1
0xc54: V1105 = 0xa0
0xc56: V1106 = 0x2
0xc58: V1107 = EXP 0x2 0xa0
0xc59: V1108 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5c: V1109 = AND 0xffffffffffffffffffffffffffffffffffffffff V1103
0xc5e: V1110 = AND V1102 0xffffffffffffffffffffffffffffffffffffffff
0xc5f: V1111 = EQ V1110 V1109
0xc60: V1112 = 0xc68
0xc63: JUMPI 0xc68 V1111
---
Entry stack: [V12, 0x499, V539, V541, V545, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V539, V541, V545, V548]

================================

Block 0xc64
[0xc64:0xc67]
---
Predecessors: [0xc4d]
Successors: []
---
0xc64 PUSH1 0x0
0xc66 DUP1
0xc67 REVERT
---
0xc64: V1113 = 0x0
0xc67: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V539, V541, V545, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V539, V541, V545, V548]

================================

Block 0xc68
[0xc68:0xc6a]
---
Predecessors: [0xc4d]
Successors: [0xc6b]
---
0xc68 JUMPDEST
0xc69 PUSH1 0x0
---
0xc68: JUMPDEST 
0xc69: V1114 = 0x0
---
Entry stack: [V12, 0x499, V539, V541, V545, V548]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x499, V539, V541, V545, V548, 0x0]

================================

Block 0xc6b
[0xc6b:0xc81]
---
Predecessors: [0xc68]
Successors: [0xc82, 0xc83]
---
0xc6b JUMPDEST
0xc6c PUSH1 0x2
0xc6e DUP1
0xc6f SLOAD
0xc70 PUSH1 0xa0
0xc72 PUSH1 0x2
0xc74 EXP
0xc75 SWAP1
0xc76 DIV
0xc77 PUSH1 0xff
0xc79 AND
0xc7a SWAP1
0xc7b DUP2
0xc7c GT
0xc7d ISZERO
0xc7e PUSH2 0xc83
0xc81 JUMPI
---
0xc6b: JUMPDEST 
0xc6c: V1115 = 0x2
0xc6f: V1116 = S[0x2]
0xc70: V1117 = 0xa0
0xc72: V1118 = 0x2
0xc74: V1119 = EXP 0x2 0xa0
0xc76: V1120 = DIV V1116 0x10000000000000000000000000000000000000000
0xc77: V1121 = 0xff
0xc79: V1122 = AND 0xff V1120
0xc7c: V1123 = GT V1122 0x2
0xc7d: V1124 = ISZERO V1123
0xc7e: V1125 = 0xc83
0xc81: JUMPI 0xc83 V1124
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, 0x0]
Stack pops: 0
Stack additions: [V1122]
Exit stack: [V12, 0x499, V539, V541, V545, V548, 0x0, V1122]

================================

Block 0xc82
[0xc82:0xc82]
---
Predecessors: [0xc6b]
Successors: []
---
0xc82 INVALID
---
0xc82: INVALID 
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, 0x0, V1122]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V539, V541, V545, V548, 0x0, V1122]

================================

Block 0xc83
[0xc83:0xc89]
---
Predecessors: [0xc6b]
Successors: [0xc8a, 0xca7]
---
0xc83 JUMPDEST
0xc84 EQ
0xc85 DUP1
0xc86 PUSH2 0xca7
0xc89 JUMPI
---
0xc83: JUMPDEST 
0xc84: V1126 = EQ V1122 0x0
0xc86: V1127 = 0xca7
0xc89: JUMPI 0xca7 V1126
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, 0x0, V1122]
Stack pops: 2
Stack additions: [V1126]
Exit stack: [V12, 0x499, V539, V541, V545, V548, V1126]

================================

Block 0xc8a
[0xc8a:0xc8c]
---
Predecessors: [0xc83]
Successors: [0xc8d]
---
0xc8a POP
0xc8b PUSH1 0x1
---
0xc8b: V1128 = 0x1
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, V1126]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x499, V539, V541, V545, V548, 0x1]

================================

Block 0xc8d
[0xc8d:0xca3]
---
Predecessors: [0xc8a]
Successors: [0xca4, 0xca5]
---
0xc8d JUMPDEST
0xc8e PUSH1 0x2
0xc90 DUP1
0xc91 SLOAD
0xc92 PUSH1 0xa0
0xc94 PUSH1 0x2
0xc96 EXP
0xc97 SWAP1
0xc98 DIV
0xc99 PUSH1 0xff
0xc9b AND
0xc9c SWAP1
0xc9d DUP2
0xc9e GT
0xc9f ISZERO
0xca0 PUSH2 0xca5
0xca3 JUMPI
---
0xc8d: JUMPDEST 
0xc8e: V1129 = 0x2
0xc91: V1130 = S[0x2]
0xc92: V1131 = 0xa0
0xc94: V1132 = 0x2
0xc96: V1133 = EXP 0x2 0xa0
0xc98: V1134 = DIV V1130 0x10000000000000000000000000000000000000000
0xc99: V1135 = 0xff
0xc9b: V1136 = AND 0xff V1134
0xc9e: V1137 = GT V1136 0x2
0xc9f: V1138 = ISZERO V1137
0xca0: V1139 = 0xca5
0xca3: JUMPI 0xca5 V1138
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, 0x1]
Stack pops: 0
Stack additions: [V1136]
Exit stack: [V12, 0x499, V539, V541, V545, V548, 0x1, V1136]

================================

Block 0xca4
[0xca4:0xca4]
---
Predecessors: [0xc8d]
Successors: []
---
0xca4 INVALID
---
0xca4: INVALID 
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, 0x1, V1136]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V539, V541, V545, V548, 0x1, V1136]

================================

Block 0xca5
[0xca5:0xca6]
---
Predecessors: [0xc8d]
Successors: [0xca7]
---
0xca5 JUMPDEST
0xca6 EQ
---
0xca5: JUMPDEST 
0xca6: V1140 = EQ V1136 0x1
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, 0x1, V1136]
Stack pops: 2
Stack additions: [V1140]
Exit stack: [V12, 0x499, V539, V541, V545, V548, V1140]

================================

Block 0xca7
[0xca7:0xcad]
---
Predecessors: [0xc83, 0xca5]
Successors: [0xcae, 0xcb2]
---
0xca7 JUMPDEST
0xca8 ISZERO
0xca9 ISZERO
0xcaa PUSH2 0xcb2
0xcad JUMPI
---
0xca7: JUMPDEST 
0xca8: V1141 = ISZERO S0
0xca9: V1142 = ISZERO V1141
0xcaa: V1143 = 0xcb2
0xcad: JUMPI 0xcb2 V1142
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x499, V539, V541, V545, V548]

================================

Block 0xcae
[0xcae:0xcb1]
---
Predecessors: [0xca7]
Successors: []
---
0xcae PUSH1 0x0
0xcb0 DUP1
0xcb1 REVERT
---
0xcae: V1144 = 0x0
0xcb1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V539, V541, V545, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V539, V541, V545, V548]

================================

Block 0xcb2
[0xcb2:0xcbe]
---
Predecessors: [0xca7]
Successors: [0xcbf, 0xcc7]
---
0xcb2 JUMPDEST
0xcb3 DUP2
0xcb4 PUSH1 0xff
0xcb6 AND
0xcb7 PUSH1 0x1
0xcb9 EQ
0xcba DUP1
0xcbb PUSH2 0xcc7
0xcbe JUMPI
---
0xcb2: JUMPDEST 
0xcb4: V1145 = 0xff
0xcb6: V1146 = AND 0xff V545
0xcb7: V1147 = 0x1
0xcb9: V1148 = EQ 0x1 V1146
0xcbb: V1149 = 0xcc7
0xcbe: JUMPI 0xcc7 V1148
---
Entry stack: [V12, 0x499, V539, V541, V545, V548]
Stack pops: 2
Stack additions: [S1, S0, V1148]
Exit stack: [V12, 0x499, V539, V541, V545, V548, V1148]

================================

Block 0xcbf
[0xcbf:0xcc6]
---
Predecessors: [0xcb2]
Successors: [0xcc7]
---
0xcbf POP
0xcc0 DUP2
0xcc1 PUSH1 0xff
0xcc3 AND
0xcc4 PUSH1 0x3
0xcc6 EQ
---
0xcc1: V1150 = 0xff
0xcc3: V1151 = AND 0xff V545
0xcc4: V1152 = 0x3
0xcc6: V1153 = EQ 0x3 V1151
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, V1148]
Stack pops: 3
Stack additions: [S2, S1, V1153]
Exit stack: [V12, 0x499, V539, V541, V545, V548, V1153]

================================

Block 0xcc7
[0xcc7:0xccc]
---
Predecessors: [0xcb2, 0xcbf]
Successors: [0xccd, 0xcd5]
---
0xcc7 JUMPDEST
0xcc8 DUP1
0xcc9 PUSH2 0xcd5
0xccc JUMPI
---
0xcc7: JUMPDEST 
0xcc9: V1154 = 0xcd5
0xccc: JUMPI 0xcd5 S0
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x499, V539, V541, V545, V548, S0]

================================

Block 0xccd
[0xccd:0xcd4]
---
Predecessors: [0xcc7]
Successors: [0xcd5]
---
0xccd POP
0xcce DUP2
0xccf PUSH1 0xff
0xcd1 AND
0xcd2 PUSH1 0x6
0xcd4 EQ
---
0xccf: V1155 = 0xff
0xcd1: V1156 = AND 0xff V545
0xcd2: V1157 = 0x6
0xcd4: V1158 = EQ 0x6 V1156
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, S0]
Stack pops: 3
Stack additions: [S2, S1, V1158]
Exit stack: [V12, 0x499, V539, V541, V545, V548, V1158]

================================

Block 0xcd5
[0xcd5:0xcda]
---
Predecessors: [0xcc7, 0xccd]
Successors: [0xcdb, 0xce3]
---
0xcd5 JUMPDEST
0xcd6 DUP1
0xcd7 PUSH2 0xce3
0xcda JUMPI
---
0xcd5: JUMPDEST 
0xcd7: V1159 = 0xce3
0xcda: JUMPI 0xce3 S0
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x499, V539, V541, V545, V548, S0]

================================

Block 0xcdb
[0xcdb:0xce2]
---
Predecessors: [0xcd5]
Successors: [0xce3]
---
0xcdb POP
0xcdc DUP2
0xcdd PUSH1 0xff
0xcdf AND
0xce0 PUSH1 0xc
0xce2 EQ
---
0xcdd: V1160 = 0xff
0xcdf: V1161 = AND 0xff V545
0xce0: V1162 = 0xc
0xce2: V1163 = EQ 0xc V1161
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, S0]
Stack pops: 3
Stack additions: [S2, S1, V1163]
Exit stack: [V12, 0x499, V539, V541, V545, V548, V1163]

================================

Block 0xce3
[0xce3:0xce9]
---
Predecessors: [0xcd5, 0xcdb]
Successors: [0xcea, 0xcee]
---
0xce3 JUMPDEST
0xce4 ISZERO
0xce5 ISZERO
0xce6 PUSH2 0xcee
0xce9 JUMPI
---
0xce3: JUMPDEST 
0xce4: V1164 = ISZERO S0
0xce5: V1165 = ISZERO V1164
0xce6: V1166 = 0xcee
0xce9: JUMPI 0xcee V1165
---
Entry stack: [V12, 0x499, V539, V541, V545, V548, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x499, V539, V541, V545, V548]

================================

Block 0xcea
[0xcea:0xced]
---
Predecessors: [0xce3]
Successors: []
---
0xcea PUSH1 0x0
0xcec DUP1
0xced REVERT
---
0xcea: V1167 = 0x0
0xced: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V539, V541, V545, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V539, V541, V545, V548]

================================

Block 0xcee
[0xcee:0xd1d]
---
Predecessors: [0xce3]
Successors: [0xd1e, 0xd85]
---
0xcee JUMPDEST
0xcef PUSH1 0x1
0xcf1 PUSH1 0xa0
0xcf3 PUSH1 0x2
0xcf5 EXP
0xcf6 SUB
0xcf7 DUP5
0xcf8 AND
0xcf9 PUSH1 0x0
0xcfb SWAP1
0xcfc DUP2
0xcfd MSTORE
0xcfe PUSH1 0xa
0xd00 PUSH1 0x20
0xd02 MSTORE
0xd03 PUSH1 0x40
0xd05 SWAP1
0xd06 SHA3
0xd07 SLOAD
0xd08 PUSH8 0xde0b6b3a7640000
0xd11 SWAP1
0xd12 SWAP4
0xd13 MUL
0xd14 SWAP3
0xd15 PUSH1 0xff
0xd17 AND
0xd18 ISZERO
0xd19 ISZERO
0xd1a PUSH2 0xd85
0xd1d JUMPI
---
0xcee: JUMPDEST 
0xcef: V1168 = 0x1
0xcf1: V1169 = 0xa0
0xcf3: V1170 = 0x2
0xcf5: V1171 = EXP 0x2 0xa0
0xcf6: V1172 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf8: V1173 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0xcf9: V1174 = 0x0
0xcfd: M[0x0] = V1173
0xcfe: V1175 = 0xa
0xd00: V1176 = 0x20
0xd02: M[0x20] = 0xa
0xd03: V1177 = 0x40
0xd06: V1178 = SHA3 0x0 0x40
0xd07: V1179 = S[V1178]
0xd08: V1180 = 0xde0b6b3a7640000
0xd13: V1181 = MUL V541 0xde0b6b3a7640000
0xd15: V1182 = 0xff
0xd17: V1183 = AND 0xff V1179
0xd18: V1184 = ISZERO V1183
0xd19: V1185 = ISZERO V1184
0xd1a: V1186 = 0xd85
0xd1d: JUMPI 0xd85 V1185
---
Entry stack: [V12, 0x499, V539, V541, V545, V548]
Stack pops: 4
Stack additions: [S3, V1181, S1, S0]
Exit stack: [V12, 0x499, V539, V1181, V545, V548]

================================

Block 0xd1e
[0xd1e:0xd84]
---
Predecessors: [0xcee]
Successors: [0xd85]
---
0xd1e PUSH1 0x1
0xd20 PUSH1 0xa0
0xd22 PUSH1 0x2
0xd24 EXP
0xd25 SUB
0xd26 DUP5
0xd27 AND
0xd28 PUSH1 0x0
0xd2a DUP2
0xd2b DUP2
0xd2c MSTORE
0xd2d PUSH1 0xa
0xd2f PUSH1 0x20
0xd31 SWAP1
0xd32 DUP2
0xd33 MSTORE
0xd34 PUSH1 0x40
0xd36 DUP1
0xd37 DUP4
0xd38 SHA3
0xd39 DUP1
0xd3a SLOAD
0xd3b PUSH1 0xff
0xd3d NOT
0xd3e AND
0xd3f PUSH1 0x1
0xd41 SWAP1
0xd42 DUP2
0xd43 OR
0xd44 DUP3
0xd45 SSTORE
0xd46 PUSH1 0x4
0xd48 SWAP1
0xd49 SWAP2
0xd4a ADD
0xd4b DUP1
0xd4c SLOAD
0xd4d PUSH2 0xff00
0xd50 NOT
0xd51 AND
0xd52 SWAP1
0xd53 SSTORE
0xd54 PUSH1 0xc
0xd56 DUP1
0xd57 SLOAD
0xd58 DUP6
0xd59 MSTORE
0xd5a PUSH1 0xb
0xd5c SWAP1
0xd5d SWAP4
0xd5e MSTORE
0xd5f SWAP3
0xd60 SHA3
0xd61 DUP1
0xd62 SLOAD
0xd63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd78 NOT
0xd79 AND
0xd7a SWAP1
0xd7b SWAP4
0xd7c OR
0xd7d SWAP1
0xd7e SWAP3
0xd7f SSTORE
0xd80 DUP2
0xd81 SLOAD
0xd82 ADD
0xd83 SWAP1
0xd84 SSTORE
---
0xd1e: V1187 = 0x1
0xd20: V1188 = 0xa0
0xd22: V1189 = 0x2
0xd24: V1190 = EXP 0x2 0xa0
0xd25: V1191 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd27: V1192 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0xd28: V1193 = 0x0
0xd2c: M[0x0] = V1192
0xd2d: V1194 = 0xa
0xd2f: V1195 = 0x20
0xd33: M[0x20] = 0xa
0xd34: V1196 = 0x40
0xd38: V1197 = SHA3 0x0 0x40
0xd3a: V1198 = S[V1197]
0xd3b: V1199 = 0xff
0xd3d: V1200 = NOT 0xff
0xd3e: V1201 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1198
0xd3f: V1202 = 0x1
0xd43: V1203 = OR 0x1 V1201
0xd45: S[V1197] = V1203
0xd46: V1204 = 0x4
0xd4a: V1205 = ADD V1197 0x4
0xd4c: V1206 = S[V1205]
0xd4d: V1207 = 0xff00
0xd50: V1208 = NOT 0xff00
0xd51: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1206
0xd53: S[V1205] = V1209
0xd54: V1210 = 0xc
0xd57: V1211 = S[0xc]
0xd59: M[0x0] = V1211
0xd5a: V1212 = 0xb
0xd5e: M[0x20] = 0xb
0xd60: V1213 = SHA3 0x0 0x40
0xd62: V1214 = S[V1213]
0xd63: V1215 = 0xffffffffffffffffffffffffffffffffffffffff
0xd78: V1216 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd79: V1217 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1214
0xd7c: V1218 = OR V1192 V1217
0xd7f: S[V1213] = V1218
0xd81: V1219 = S[0xc]
0xd82: V1220 = ADD V1219 0x1
0xd84: S[0xc] = V1220
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x499, V539, V1181, V545, V548]

================================

Block 0xd85
[0xd85:0xdd6]
---
Predecessors: [0xcee, 0xd1e]
Successors: [0xdd7, 0xe0d]
---
0xd85 JUMPDEST
0xd86 PUSH1 0x1
0xd88 PUSH1 0xa0
0xd8a PUSH1 0x2
0xd8c EXP
0xd8d SUB
0xd8e DUP5
0xd8f AND
0xd90 PUSH1 0x0
0xd92 SWAP1
0xd93 DUP2
0xd94 MSTORE
0xd95 PUSH1 0xa
0xd97 PUSH1 0x20
0xd99 MSTORE
0xd9a PUSH1 0x40
0xd9c SWAP1
0xd9d SHA3
0xd9e PUSH1 0x1
0xda0 DUP1
0xda1 DUP3
0xda2 ADD
0xda3 DUP6
0xda4 SWAP1
0xda5 SSTORE
0xda6 PUSH1 0x2
0xda8 DUP3
0xda9 ADD
0xdaa DUP1
0xdab SLOAD
0xdac PUSH1 0xff
0xdae DUP1
0xdaf DUP8
0xdb0 AND
0xdb1 PUSH1 0xff
0xdb3 NOT
0xdb4 SWAP3
0xdb5 DUP4
0xdb6 AND
0xdb7 OR
0xdb8 SWAP3
0xdb9 DUP4
0xdba SWAP1
0xdbb SSTORE
0xdbc PUSH1 0x4
0xdbe SWAP1
0xdbf SWAP5
0xdc0 ADD
0xdc1 DUP1
0xdc2 SLOAD
0xdc3 DUP7
0xdc4 DUP7
0xdc5 AND
0xdc6 SWAP3
0xdc7 AND
0xdc8 SWAP2
0xdc9 SWAP1
0xdca SWAP2
0xdcb OR
0xdcc SWAP1
0xdcd SSTORE
0xdce SWAP1
0xdcf SWAP2
0xdd0 AND
0xdd1 EQ
0xdd2 ISZERO
0xdd3 PUSH2 0xe0d
0xdd6 JUMPI
---
0xd85: JUMPDEST 
0xd86: V1221 = 0x1
0xd88: V1222 = 0xa0
0xd8a: V1223 = 0x2
0xd8c: V1224 = EXP 0x2 0xa0
0xd8d: V1225 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8f: V1226 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0xd90: V1227 = 0x0
0xd94: M[0x0] = V1226
0xd95: V1228 = 0xa
0xd97: V1229 = 0x20
0xd99: M[0x20] = 0xa
0xd9a: V1230 = 0x40
0xd9d: V1231 = SHA3 0x0 0x40
0xd9e: V1232 = 0x1
0xda2: V1233 = ADD V1231 0x1
0xda5: S[V1233] = V1181
0xda6: V1234 = 0x2
0xda9: V1235 = ADD V1231 0x2
0xdab: V1236 = S[V1235]
0xdac: V1237 = 0xff
0xdb0: V1238 = AND V545 0xff
0xdb1: V1239 = 0xff
0xdb3: V1240 = NOT 0xff
0xdb6: V1241 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1236
0xdb7: V1242 = OR V1241 V1238
0xdbb: S[V1235] = V1242
0xdbc: V1243 = 0x4
0xdc0: V1244 = ADD V1231 0x4
0xdc2: V1245 = S[V1244]
0xdc5: V1246 = AND 0xff V548
0xdc7: V1247 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1245
0xdcb: V1248 = OR V1247 V1246
0xdcd: S[V1244] = V1248
0xdd0: V1249 = AND 0xff V1242
0xdd1: V1250 = EQ V1249 0x1
0xdd2: V1251 = ISZERO V1250
0xdd3: V1252 = 0xe0d
0xdd6: JUMPI 0xe0d V1251
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x499, V539, V1181, V545, V548]

================================

Block 0xdd7
[0xdd7:0xdeb]
---
Predecessors: [0xd85]
Successors: [0x1486]
---
0xdd7 PUSH1 0x4
0xdd9 SLOAD
0xdda PUSH2 0xdec
0xddd SWAP1
0xdde PUSH3 0x278d00
0xde2 PUSH4 0xffffffff
0xde7 PUSH2 0x1486
0xdea AND
0xdeb JUMP
---
0xdd7: V1253 = 0x4
0xdd9: V1254 = S[0x4]
0xdda: V1255 = 0xdec
0xdde: V1256 = 0x278d00
0xde2: V1257 = 0xffffffff
0xde7: V1258 = 0x1486
0xdea: V1259 = AND 0x1486 0xffffffff
0xdeb: JUMP 0x1486
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 0
Stack additions: [0xdec, V1254, 0x278d00]
Exit stack: [V12, 0x499, V539, V1181, V545, V548, 0xdec, V1254, 0x278d00]

================================

Block 0xdec
[0xdec:0xe0c]
---
Predecessors: [0x830]
Successors: [0xf24]
---
0xdec JUMPDEST
0xded PUSH1 0x1
0xdef PUSH1 0xa0
0xdf1 PUSH1 0x2
0xdf3 EXP
0xdf4 SUB
0xdf5 DUP6
0xdf6 AND
0xdf7 PUSH1 0x0
0xdf9 SWAP1
0xdfa DUP2
0xdfb MSTORE
0xdfc PUSH1 0xa
0xdfe PUSH1 0x20
0xe00 MSTORE
0xe01 PUSH1 0x40
0xe03 SWAP1
0xe04 SHA3
0xe05 PUSH1 0x3
0xe07 ADD
0xe08 SSTORE
0xe09 PUSH2 0xf24
0xe0c JUMP
---
0xdec: JUMPDEST 
0xded: V1260 = 0x1
0xdef: V1261 = 0xa0
0xdf1: V1262 = 0x2
0xdf3: V1263 = EXP 0x2 0xa0
0xdf4: V1264 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf6: V1265 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xdf7: V1266 = 0x0
0xdfb: M[0x0] = V1265
0xdfc: V1267 = 0xa
0xdfe: V1268 = 0x20
0xe00: M[0x20] = 0xa
0xe01: V1269 = 0x40
0xe04: V1270 = SHA3 0x0 0x40
0xe05: V1271 = 0x3
0xe07: V1272 = ADD 0x3 V1270
0xe08: S[V1272] = S0
0xe09: V1273 = 0xf24
0xe0c: JUMP 0xf24
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [V12, S5, S4, S3, S2, S1]

================================

Block 0xe0d
[0xe0d:0xe34]
---
Predecessors: [0xd85]
Successors: [0xe35, 0xe6b]
---
0xe0d JUMPDEST
0xe0e PUSH1 0x1
0xe10 PUSH1 0xa0
0xe12 PUSH1 0x2
0xe14 EXP
0xe15 SUB
0xe16 DUP5
0xe17 AND
0xe18 PUSH1 0x0
0xe1a SWAP1
0xe1b DUP2
0xe1c MSTORE
0xe1d PUSH1 0xa
0xe1f PUSH1 0x20
0xe21 MSTORE
0xe22 PUSH1 0x40
0xe24 SWAP1
0xe25 SHA3
0xe26 PUSH1 0x2
0xe28 ADD
0xe29 SLOAD
0xe2a PUSH1 0xff
0xe2c AND
0xe2d PUSH1 0x3
0xe2f EQ
0xe30 ISZERO
0xe31 PUSH2 0xe6b
0xe34 JUMPI
---
0xe0d: JUMPDEST 
0xe0e: V1274 = 0x1
0xe10: V1275 = 0xa0
0xe12: V1276 = 0x2
0xe14: V1277 = EXP 0x2 0xa0
0xe15: V1278 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe17: V1279 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0xe18: V1280 = 0x0
0xe1c: M[0x0] = V1279
0xe1d: V1281 = 0xa
0xe1f: V1282 = 0x20
0xe21: M[0x20] = 0xa
0xe22: V1283 = 0x40
0xe25: V1284 = SHA3 0x0 0x40
0xe26: V1285 = 0x2
0xe28: V1286 = ADD 0x2 V1284
0xe29: V1287 = S[V1286]
0xe2a: V1288 = 0xff
0xe2c: V1289 = AND 0xff V1287
0xe2d: V1290 = 0x3
0xe2f: V1291 = EQ 0x3 V1289
0xe30: V1292 = ISZERO V1291
0xe31: V1293 = 0xe6b
0xe34: JUMPI 0xe6b V1292
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x499, V539, V1181, V545, V548]

================================

Block 0xe35
[0xe35:0xe49]
---
Predecessors: [0xe0d]
Successors: [0x1486]
---
0xe35 PUSH1 0x4
0xe37 SLOAD
0xe38 PUSH2 0xdec
0xe3b SWAP1
0xe3c PUSH3 0x794a00
0xe40 PUSH4 0xffffffff
0xe45 PUSH2 0x1486
0xe48 AND
0xe49 JUMP
---
0xe35: V1294 = 0x4
0xe37: V1295 = S[0x4]
0xe38: V1296 = 0xdec
0xe3c: V1297 = 0x794a00
0xe40: V1298 = 0xffffffff
0xe45: V1299 = 0x1486
0xe48: V1300 = AND 0x1486 0xffffffff
0xe49: JUMP 0x1486
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 0
Stack additions: [0xdec, V1295, 0x794a00]
Exit stack: [V12, 0x499, V539, V1181, V545, V548, 0xdec, V1295, 0x794a00]

================================

Block 0xe4a
[0xe4a:0xe6a]
---
Predecessors: []
Successors: [0xf24]
---
0xe4a JUMPDEST
0xe4b PUSH1 0x1
0xe4d PUSH1 0xa0
0xe4f PUSH1 0x2
0xe51 EXP
0xe52 SUB
0xe53 DUP6
0xe54 AND
0xe55 PUSH1 0x0
0xe57 SWAP1
0xe58 DUP2
0xe59 MSTORE
0xe5a PUSH1 0xa
0xe5c PUSH1 0x20
0xe5e MSTORE
0xe5f PUSH1 0x40
0xe61 SWAP1
0xe62 SHA3
0xe63 PUSH1 0x3
0xe65 ADD
0xe66 SSTORE
0xe67 PUSH2 0xf24
0xe6a JUMP
---
0xe4a: JUMPDEST 
0xe4b: V1301 = 0x1
0xe4d: V1302 = 0xa0
0xe4f: V1303 = 0x2
0xe51: V1304 = EXP 0x2 0xa0
0xe52: V1305 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe54: V1306 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xe55: V1307 = 0x0
0xe59: M[0x0] = V1306
0xe5a: V1308 = 0xa
0xe5c: V1309 = 0x20
0xe5e: M[0x20] = 0xa
0xe5f: V1310 = 0x40
0xe62: V1311 = SHA3 0x0 0x40
0xe63: V1312 = 0x3
0xe65: V1313 = ADD 0x3 V1311
0xe66: S[V1313] = S0
0xe67: V1314 = 0xf24
0xe6a: JUMP 0xf24
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [S4, S3, S2, S1]

================================

Block 0xe6b
[0xe6b:0xe92]
---
Predecessors: [0xe0d]
Successors: [0xe93, 0xec9]
---
0xe6b JUMPDEST
0xe6c PUSH1 0x1
0xe6e PUSH1 0xa0
0xe70 PUSH1 0x2
0xe72 EXP
0xe73 SUB
0xe74 DUP5
0xe75 AND
0xe76 PUSH1 0x0
0xe78 SWAP1
0xe79 DUP2
0xe7a MSTORE
0xe7b PUSH1 0xa
0xe7d PUSH1 0x20
0xe7f MSTORE
0xe80 PUSH1 0x40
0xe82 SWAP1
0xe83 SHA3
0xe84 PUSH1 0x2
0xe86 ADD
0xe87 SLOAD
0xe88 PUSH1 0xff
0xe8a AND
0xe8b PUSH1 0x6
0xe8d EQ
0xe8e ISZERO
0xe8f PUSH2 0xec9
0xe92 JUMPI
---
0xe6b: JUMPDEST 
0xe6c: V1315 = 0x1
0xe6e: V1316 = 0xa0
0xe70: V1317 = 0x2
0xe72: V1318 = EXP 0x2 0xa0
0xe73: V1319 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe75: V1320 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0xe76: V1321 = 0x0
0xe7a: M[0x0] = V1320
0xe7b: V1322 = 0xa
0xe7d: V1323 = 0x20
0xe7f: M[0x20] = 0xa
0xe80: V1324 = 0x40
0xe83: V1325 = SHA3 0x0 0x40
0xe84: V1326 = 0x2
0xe86: V1327 = ADD 0x2 V1325
0xe87: V1328 = S[V1327]
0xe88: V1329 = 0xff
0xe8a: V1330 = AND 0xff V1328
0xe8b: V1331 = 0x6
0xe8d: V1332 = EQ 0x6 V1330
0xe8e: V1333 = ISZERO V1332
0xe8f: V1334 = 0xec9
0xe92: JUMPI 0xec9 V1333
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x499, V539, V1181, V545, V548]

================================

Block 0xe93
[0xe93:0xea7]
---
Predecessors: [0xe6b]
Successors: [0x1486]
---
0xe93 PUSH1 0x4
0xe95 SLOAD
0xe96 PUSH2 0xdec
0xe99 SWAP1
0xe9a PUSH3 0xeff100
0xe9e PUSH4 0xffffffff
0xea3 PUSH2 0x1486
0xea6 AND
0xea7 JUMP
---
0xe93: V1335 = 0x4
0xe95: V1336 = S[0x4]
0xe96: V1337 = 0xdec
0xe9a: V1338 = 0xeff100
0xe9e: V1339 = 0xffffffff
0xea3: V1340 = 0x1486
0xea6: V1341 = AND 0x1486 0xffffffff
0xea7: JUMP 0x1486
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 0
Stack additions: [0xdec, V1336, 0xeff100]
Exit stack: [V12, 0x499, V539, V1181, V545, V548, 0xdec, V1336, 0xeff100]

================================

Block 0xea8
[0xea8:0xec8]
---
Predecessors: []
Successors: [0xf24]
---
0xea8 JUMPDEST
0xea9 PUSH1 0x1
0xeab PUSH1 0xa0
0xead PUSH1 0x2
0xeaf EXP
0xeb0 SUB
0xeb1 DUP6
0xeb2 AND
0xeb3 PUSH1 0x0
0xeb5 SWAP1
0xeb6 DUP2
0xeb7 MSTORE
0xeb8 PUSH1 0xa
0xeba PUSH1 0x20
0xebc MSTORE
0xebd PUSH1 0x40
0xebf SWAP1
0xec0 SHA3
0xec1 PUSH1 0x3
0xec3 ADD
0xec4 SSTORE
0xec5 PUSH2 0xf24
0xec8 JUMP
---
0xea8: JUMPDEST 
0xea9: V1342 = 0x1
0xeab: V1343 = 0xa0
0xead: V1344 = 0x2
0xeaf: V1345 = EXP 0x2 0xa0
0xeb0: V1346 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb2: V1347 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xeb3: V1348 = 0x0
0xeb7: M[0x0] = V1347
0xeb8: V1349 = 0xa
0xeba: V1350 = 0x20
0xebc: M[0x20] = 0xa
0xebd: V1351 = 0x40
0xec0: V1352 = SHA3 0x0 0x40
0xec1: V1353 = 0x3
0xec3: V1354 = ADD 0x3 V1352
0xec4: S[V1354] = S0
0xec5: V1355 = 0xf24
0xec8: JUMP 0xf24
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [S4, S3, S2, S1]

================================

Block 0xec9
[0xec9:0xef0]
---
Predecessors: [0xe6b]
Successors: [0xef1, 0xf24]
---
0xec9 JUMPDEST
0xeca PUSH1 0x1
0xecc PUSH1 0xa0
0xece PUSH1 0x2
0xed0 EXP
0xed1 SUB
0xed2 DUP5
0xed3 AND
0xed4 PUSH1 0x0
0xed6 SWAP1
0xed7 DUP2
0xed8 MSTORE
0xed9 PUSH1 0xa
0xedb PUSH1 0x20
0xedd MSTORE
0xede PUSH1 0x40
0xee0 SWAP1
0xee1 SHA3
0xee2 PUSH1 0x2
0xee4 ADD
0xee5 SLOAD
0xee6 PUSH1 0xff
0xee8 AND
0xee9 PUSH1 0xc
0xeeb EQ
0xeec ISZERO
0xeed PUSH2 0xf24
0xef0 JUMPI
---
0xec9: JUMPDEST 
0xeca: V1356 = 0x1
0xecc: V1357 = 0xa0
0xece: V1358 = 0x2
0xed0: V1359 = EXP 0x2 0xa0
0xed1: V1360 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed3: V1361 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0xed4: V1362 = 0x0
0xed8: M[0x0] = V1361
0xed9: V1363 = 0xa
0xedb: V1364 = 0x20
0xedd: M[0x20] = 0xa
0xede: V1365 = 0x40
0xee1: V1366 = SHA3 0x0 0x40
0xee2: V1367 = 0x2
0xee4: V1368 = ADD 0x2 V1366
0xee5: V1369 = S[V1368]
0xee6: V1370 = 0xff
0xee8: V1371 = AND 0xff V1369
0xee9: V1372 = 0xc
0xeeb: V1373 = EQ 0xc V1371
0xeec: V1374 = ISZERO V1373
0xeed: V1375 = 0xf24
0xef0: JUMPI 0xf24 V1374
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x499, V539, V1181, V545, V548]

================================

Block 0xef1
[0xef1:0xf06]
---
Predecessors: [0xec9]
Successors: [0x1486]
---
0xef1 PUSH1 0x4
0xef3 SLOAD
0xef4 PUSH2 0xf07
0xef7 SWAP1
0xef8 PUSH4 0x1e13380
0xefd PUSH4 0xffffffff
0xf02 PUSH2 0x1486
0xf05 AND
0xf06 JUMP
---
0xef1: V1376 = 0x4
0xef3: V1377 = S[0x4]
0xef4: V1378 = 0xf07
0xef8: V1379 = 0x1e13380
0xefd: V1380 = 0xffffffff
0xf02: V1381 = 0x1486
0xf05: V1382 = AND 0x1486 0xffffffff
0xf06: JUMP 0x1486
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 0
Stack additions: [0xf07, V1377, 0x1e13380]
Exit stack: [V12, 0x499, V539, V1181, V545, V548, 0xf07, V1377, 0x1e13380]

================================

Block 0xf07
[0xf07:0xf23]
---
Predecessors: [0x830]
Successors: [0xf24]
---
0xf07 JUMPDEST
0xf08 PUSH1 0x1
0xf0a PUSH1 0xa0
0xf0c PUSH1 0x2
0xf0e EXP
0xf0f SUB
0xf10 DUP6
0xf11 AND
0xf12 PUSH1 0x0
0xf14 SWAP1
0xf15 DUP2
0xf16 MSTORE
0xf17 PUSH1 0xa
0xf19 PUSH1 0x20
0xf1b MSTORE
0xf1c PUSH1 0x40
0xf1e SWAP1
0xf1f SHA3
0xf20 PUSH1 0x3
0xf22 ADD
0xf23 SSTORE
---
0xf07: JUMPDEST 
0xf08: V1383 = 0x1
0xf0a: V1384 = 0xa0
0xf0c: V1385 = 0x2
0xf0e: V1386 = EXP 0x2 0xa0
0xf0f: V1387 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf11: V1388 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xf12: V1389 = 0x0
0xf16: M[0x0] = V1388
0xf17: V1390 = 0xa
0xf19: V1391 = 0x20
0xf1b: M[0x20] = 0xa
0xf1c: V1392 = 0x40
0xf1f: V1393 = SHA3 0x0 0x40
0xf20: V1394 = 0x3
0xf22: V1395 = ADD 0x3 V1393
0xf23: S[V1395] = S0
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [V12, S5, S4, S3, S2, S1]

================================

Block 0xf24
[0xf24:0xf24]
---
Predecessors: [0xdec, 0xe4a, 0xea8, 0xec9, 0xf07]
Successors: [0xf25]
---
0xf24 JUMPDEST
---
0xf24: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xf25
[0xf25:0xf25]
---
Predecessors: [0xf24]
Successors: [0xf26]
---
0xf25 JUMPDEST
---
0xf25: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xf26
[0xf26:0xf26]
---
Predecessors: [0xf25]
Successors: [0xf27]
---
0xf26 JUMPDEST
---
0xf26: JUMPDEST 
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V539, V1181, V545, V548]

================================

Block 0xf27
[0xf27:0xfb4]
---
Predecessors: [0xf26]
Successors: [0xfb5]
---
0xf27 JUMPDEST
0xf28 PUSH1 0x1
0xf2a PUSH1 0xa0
0xf2c PUSH1 0x2
0xf2e EXP
0xf2f SUB
0xf30 DUP5
0xf31 AND
0xf32 PUSH1 0x0
0xf34 SWAP1
0xf35 DUP2
0xf36 MSTORE
0xf37 PUSH1 0xa
0xf39 PUSH1 0x20
0xf3b MSTORE
0xf3c PUSH1 0x40
0xf3e SWAP1
0xf3f DUP2
0xf40 SWAP1
0xf41 SHA3
0xf42 PUSH1 0x1
0xf44 DUP2
0xf45 ADD
0xf46 SLOAD
0xf47 PUSH1 0x2
0xf49 DUP3
0xf4a ADD
0xf4b SLOAD
0xf4c PUSH1 0x4
0xf4e SWAP1
0xf4f SWAP3
0xf50 ADD
0xf51 SLOAD
0xf52 PUSH32 0x182930ce00a43f461b7abe8f3101035c0992f1d66c73808b8602666ef0e3844e
0xf73 SWAP4
0xf74 DUP9
0xf75 SWAP4
0xf76 PUSH1 0xff
0xf78 SWAP1
0xf79 DUP2
0xf7a AND
0xf7b SWAP3
0xf7c AND
0xf7d SWAP1
0xf7e MLOAD
0xf7f PUSH1 0x1
0xf81 PUSH1 0xa0
0xf83 PUSH1 0x2
0xf85 EXP
0xf86 SUB
0xf87 SWAP1
0xf88 SWAP5
0xf89 AND
0xf8a DUP5
0xf8b MSTORE
0xf8c PUSH1 0x20
0xf8e DUP5
0xf8f ADD
0xf90 SWAP3
0xf91 SWAP1
0xf92 SWAP3
0xf93 MSTORE
0xf94 PUSH1 0xff
0xf96 SWAP1
0xf97 DUP2
0xf98 AND
0xf99 PUSH1 0x40
0xf9b DUP1
0xf9c DUP6
0xf9d ADD
0xf9e SWAP2
0xf9f SWAP1
0xfa0 SWAP2
0xfa1 MSTORE
0xfa2 SWAP2
0xfa3 AND
0xfa4 PUSH1 0x60
0xfa6 DUP4
0xfa7 ADD
0xfa8 MSTORE
0xfa9 PUSH1 0x80
0xfab SWAP1
0xfac SWAP2
0xfad ADD
0xfae SWAP1
0xfaf MLOAD
0xfb0 DUP1
0xfb1 SWAP2
0xfb2 SUB
0xfb3 SWAP1
0xfb4 LOG1
---
0xf27: JUMPDEST 
0xf28: V1396 = 0x1
0xf2a: V1397 = 0xa0
0xf2c: V1398 = 0x2
0xf2e: V1399 = EXP 0x2 0xa0
0xf2f: V1400 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf31: V1401 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0xf32: V1402 = 0x0
0xf36: M[0x0] = V1401
0xf37: V1403 = 0xa
0xf39: V1404 = 0x20
0xf3b: M[0x20] = 0xa
0xf3c: V1405 = 0x40
0xf41: V1406 = SHA3 0x0 0x40
0xf42: V1407 = 0x1
0xf45: V1408 = ADD V1406 0x1
0xf46: V1409 = S[V1408]
0xf47: V1410 = 0x2
0xf4a: V1411 = ADD V1406 0x2
0xf4b: V1412 = S[V1411]
0xf4c: V1413 = 0x4
0xf50: V1414 = ADD V1406 0x4
0xf51: V1415 = S[V1414]
0xf52: V1416 = 0x182930ce00a43f461b7abe8f3101035c0992f1d66c73808b8602666ef0e3844e
0xf76: V1417 = 0xff
0xf7a: V1418 = AND 0xff V1412
0xf7c: V1419 = AND V1415 0xff
0xf7e: V1420 = M[0x40]
0xf7f: V1421 = 0x1
0xf81: V1422 = 0xa0
0xf83: V1423 = 0x2
0xf85: V1424 = EXP 0x2 0xa0
0xf86: V1425 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf89: V1426 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0xf8b: M[V1420] = V1426
0xf8c: V1427 = 0x20
0xf8f: V1428 = ADD V1420 0x20
0xf93: M[V1428] = V1409
0xf94: V1429 = 0xff
0xf98: V1430 = AND 0xff V1418
0xf99: V1431 = 0x40
0xf9d: V1432 = ADD V1420 0x40
0xfa1: M[V1432] = V1430
0xfa3: V1433 = AND V1419 0xff
0xfa4: V1434 = 0x60
0xfa7: V1435 = ADD V1420 0x60
0xfa8: M[V1435] = V1433
0xfa9: V1436 = 0x80
0xfad: V1437 = ADD V1420 0x80
0xfaf: V1438 = M[0x40]
0xfb2: V1439 = SUB V1437 V1438
0xfb4: LOG V1438 V1439 0x182930ce00a43f461b7abe8f3101035c0992f1d66c73808b8602666ef0e3844e
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x499, V539, V1181, V545, V548]

================================

Block 0xfb5
[0xfb5:0xfb5]
---
Predecessors: [0xf27]
Successors: [0xfb6]
---
0xfb5 JUMPDEST
---
0xfb5: JUMPDEST 
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V539, V1181, V545, V548]

================================

Block 0xfb6
[0xfb6:0xfbb]
---
Predecessors: [0xfb5]
Successors: [0x499]
---
0xfb6 JUMPDEST
0xfb7 POP
0xfb8 POP
0xfb9 POP
0xfba POP
0xfbb JUMP
---
0xfb6: JUMPDEST 
0xfbb: JUMP 0x499
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0xfbc
[0xfbc:0xfc4]
---
Predecessors: [0x603]
Successors: [0x5b4]
---
0xfbc JUMPDEST
0xfbd PUSH1 0x9
0xfbf SLOAD
0xfc0 PUSH1 0xff
0xfc2 AND
0xfc3 DUP2
0xfc4 JUMP
---
0xfbc: JUMPDEST 
0xfbd: V1440 = 0x9
0xfbf: V1441 = S[0x9]
0xfc0: V1442 = 0xff
0xfc2: V1443 = AND 0xff V1441
0xfc4: JUMP 0x5b4
---
Entry stack: [V12, 0x5b4]
Stack pops: 1
Stack additions: [S0, V1443]
Exit stack: [V12, 0x5b4, V1443]

================================

Block 0xfc5
[0xfc5:0xfdc]
---
Predecessors: [0x62a]
Successors: [0xfdd, 0xfe1]
---
0xfc5 JUMPDEST
0xfc6 PUSH1 0x0
0xfc8 DUP1
0xfc9 SLOAD
0xfca CALLER
0xfcb PUSH1 0x1
0xfcd PUSH1 0xa0
0xfcf PUSH1 0x2
0xfd1 EXP
0xfd2 SUB
0xfd3 SWAP1
0xfd4 DUP2
0xfd5 AND
0xfd6 SWAP2
0xfd7 AND
0xfd8 EQ
0xfd9 PUSH2 0xfe1
0xfdc JUMPI
---
0xfc5: JUMPDEST 
0xfc6: V1444 = 0x0
0xfc9: V1445 = S[0x0]
0xfca: V1446 = CALLER
0xfcb: V1447 = 0x1
0xfcd: V1448 = 0xa0
0xfcf: V1449 = 0x2
0xfd1: V1450 = EXP 0x2 0xa0
0xfd2: V1451 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd5: V1452 = AND 0xffffffffffffffffffffffffffffffffffffffff V1446
0xfd7: V1453 = AND V1445 0xffffffffffffffffffffffffffffffffffffffff
0xfd8: V1454 = EQ V1453 V1452
0xfd9: V1455 = 0xfe1
0xfdc: JUMPI 0xfe1 V1454
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x499, 0x0]

================================

Block 0xfdd
[0xfdd:0xfe0]
---
Predecessors: [0xfc5]
Successors: []
---
0xfdd PUSH1 0x0
0xfdf DUP1
0xfe0 REVERT
---
0xfdd: V1456 = 0x0
0xfe0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0xfe1
[0xfe1:0xfe3]
---
Predecessors: [0xfc5]
Successors: [0xfe4]
---
0xfe1 JUMPDEST
0xfe2 PUSH1 0x2
---
0xfe1: JUMPDEST 
0xfe2: V1457 = 0x2
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, 0x499, 0x0, 0x2]

================================

Block 0xfe4
[0xfe4:0xffa]
---
Predecessors: [0xfe1]
Successors: [0xffb, 0xffc]
---
0xfe4 JUMPDEST
0xfe5 PUSH1 0x2
0xfe7 DUP1
0xfe8 SLOAD
0xfe9 PUSH1 0xa0
0xfeb PUSH1 0x2
0xfed EXP
0xfee SWAP1
0xfef DIV
0xff0 PUSH1 0xff
0xff2 AND
0xff3 SWAP1
0xff4 DUP2
0xff5 GT
0xff6 ISZERO
0xff7 PUSH2 0xffc
0xffa JUMPI
---
0xfe4: JUMPDEST 
0xfe5: V1458 = 0x2
0xfe8: V1459 = S[0x2]
0xfe9: V1460 = 0xa0
0xfeb: V1461 = 0x2
0xfed: V1462 = EXP 0x2 0xa0
0xfef: V1463 = DIV V1459 0x10000000000000000000000000000000000000000
0xff0: V1464 = 0xff
0xff2: V1465 = AND 0xff V1463
0xff5: V1466 = GT V1465 0x2
0xff6: V1467 = ISZERO V1466
0xff7: V1468 = 0xffc
0xffa: JUMPI 0xffc V1467
---
Entry stack: [V12, 0x499, 0x0, 0x2]
Stack pops: 0
Stack additions: [V1465]
Exit stack: [V12, 0x499, 0x0, 0x2, V1465]

================================

Block 0xffb
[0xffb:0xffb]
---
Predecessors: [0xfe4]
Successors: []
---
0xffb INVALID
---
0xffb: INVALID 
---
Entry stack: [V12, 0x499, 0x0, 0x2, V1465]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0, 0x2, V1465]

================================

Block 0xffc
[0xffc:0x1001]
---
Predecessors: [0xfe4]
Successors: [0x1002, 0x1006]
---
0xffc JUMPDEST
0xffd EQ
0xffe PUSH2 0x1006
0x1001 JUMPI
---
0xffc: JUMPDEST 
0xffd: V1469 = EQ V1465 0x2
0xffe: V1470 = 0x1006
0x1001: JUMPI 0x1006 V1469
---
Entry stack: [V12, 0x499, 0x0, 0x2, V1465]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x1002
[0x1002:0x1005]
---
Predecessors: [0xffc]
Successors: []
---
0x1002 PUSH1 0x0
0x1004 DUP1
0x1005 REVERT
---
0x1002: V1471 = 0x0
0x1005: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x1006
[0x1006:0x1015]
---
Predecessors: [0xffc]
Successors: [0x1016, 0x101a]
---
0x1006 JUMPDEST
0x1007 PUSH1 0x9
0x1009 SLOAD
0x100a PUSH1 0xff
0x100c AND
0x100d ISZERO
0x100e ISZERO
0x100f PUSH1 0x1
0x1011 EQ
0x1012 PUSH2 0x101a
0x1015 JUMPI
---
0x1006: JUMPDEST 
0x1007: V1472 = 0x9
0x1009: V1473 = S[0x9]
0x100a: V1474 = 0xff
0x100c: V1475 = AND 0xff V1473
0x100d: V1476 = ISZERO V1475
0x100e: V1477 = ISZERO V1476
0x100f: V1478 = 0x1
0x1011: V1479 = EQ 0x1 V1477
0x1012: V1480 = 0x101a
0x1015: JUMPI 0x101a V1479
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x1016
[0x1016:0x1019]
---
Predecessors: [0x1006]
Successors: []
---
0x1016 PUSH1 0x0
0x1018 DUP1
0x1019 REVERT
---
0x1016: V1481 = 0x0
0x1019: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x101a
[0x101a:0x1021]
---
Predecessors: [0x1006]
Successors: [0x10a4]
---
0x101a JUMPDEST
0x101b PUSH2 0x1022
0x101e PUSH2 0x10a4
0x1021 JUMP
---
0x101a: JUMPDEST 
0x101b: V1482 = 0x1022
0x101e: V1483 = 0x10a4
0x1021: JUMP 0x10a4
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: [0x1022]
Exit stack: [V12, 0x499, 0x0, 0x1022]

================================

Block 0x1022
[0x1022:0x107f]
---
Predecessors: [0x111c]
Successors: [0x1080, 0x1084]
---
0x1022 JUMPDEST
0x1023 PUSH1 0x1
0x1025 SLOAD
0x1026 SWAP1
0x1027 SWAP2
0x1028 POP
0x1029 PUSH1 0x1
0x102b PUSH1 0xa0
0x102d PUSH1 0x2
0x102f EXP
0x1030 SUB
0x1031 AND
0x1032 PUSH4 0xa9059cbb
0x1037 CALLER
0x1038 DUP4
0x1039 PUSH1 0x0
0x103b PUSH1 0x40
0x103d MLOAD
0x103e PUSH1 0x20
0x1040 ADD
0x1041 MSTORE
0x1042 PUSH1 0x40
0x1044 MLOAD
0x1045 PUSH1 0xe0
0x1047 PUSH1 0x2
0x1049 EXP
0x104a PUSH4 0xffffffff
0x104f DUP6
0x1050 AND
0x1051 MUL
0x1052 DUP2
0x1053 MSTORE
0x1054 PUSH1 0x1
0x1056 PUSH1 0xa0
0x1058 PUSH1 0x2
0x105a EXP
0x105b SUB
0x105c SWAP1
0x105d SWAP3
0x105e AND
0x105f PUSH1 0x4
0x1061 DUP4
0x1062 ADD
0x1063 MSTORE
0x1064 PUSH1 0x24
0x1066 DUP3
0x1067 ADD
0x1068 MSTORE
0x1069 PUSH1 0x44
0x106b ADD
0x106c PUSH1 0x20
0x106e PUSH1 0x40
0x1070 MLOAD
0x1071 DUP1
0x1072 DUP4
0x1073 SUB
0x1074 DUP2
0x1075 PUSH1 0x0
0x1077 DUP8
0x1078 DUP1
0x1079 EXTCODESIZE
0x107a ISZERO
0x107b ISZERO
0x107c PUSH2 0x1084
0x107f JUMPI
---
0x1022: JUMPDEST 
0x1023: V1484 = 0x1
0x1025: V1485 = S[0x1]
0x1029: V1486 = 0x1
0x102b: V1487 = 0xa0
0x102d: V1488 = 0x2
0x102f: V1489 = EXP 0x2 0xa0
0x1030: V1490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1031: V1491 = AND 0xffffffffffffffffffffffffffffffffffffffff V1485
0x1032: V1492 = 0xa9059cbb
0x1037: V1493 = CALLER
0x1039: V1494 = 0x0
0x103b: V1495 = 0x40
0x103d: V1496 = M[0x40]
0x103e: V1497 = 0x20
0x1040: V1498 = ADD 0x20 V1496
0x1041: M[V1498] = 0x0
0x1042: V1499 = 0x40
0x1044: V1500 = M[0x40]
0x1045: V1501 = 0xe0
0x1047: V1502 = 0x2
0x1049: V1503 = EXP 0x2 0xe0
0x104a: V1504 = 0xffffffff
0x1050: V1505 = AND 0xa9059cbb 0xffffffff
0x1051: V1506 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1053: M[V1500] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1054: V1507 = 0x1
0x1056: V1508 = 0xa0
0x1058: V1509 = 0x2
0x105a: V1510 = EXP 0x2 0xa0
0x105b: V1511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x105e: V1512 = AND V1493 0xffffffffffffffffffffffffffffffffffffffff
0x105f: V1513 = 0x4
0x1062: V1514 = ADD V1500 0x4
0x1063: M[V1514] = V1512
0x1064: V1515 = 0x24
0x1067: V1516 = ADD V1500 0x24
0x1068: M[V1516] = S0
0x1069: V1517 = 0x44
0x106b: V1518 = ADD 0x44 V1500
0x106c: V1519 = 0x20
0x106e: V1520 = 0x40
0x1070: V1521 = M[0x40]
0x1073: V1522 = SUB V1518 V1521
0x1075: V1523 = 0x0
0x1079: V1524 = EXTCODESIZE V1491
0x107a: V1525 = ISZERO V1524
0x107b: V1526 = ISZERO V1525
0x107c: V1527 = 0x1084
0x107f: JUMPI 0x1084 V1526
---
Entry stack: [V12, 0x499, S1, S0]
Stack pops: 2
Stack additions: [S0, V1491, 0xa9059cbb, V1518, 0x20, V1521, V1522, V1521, 0x0, V1491]
Exit stack: [V12, 0x499, S0, V1491, 0xa9059cbb, V1518, 0x20, V1521, V1522, V1521, 0x0, V1491]

================================

Block 0x1080
[0x1080:0x1083]
---
Predecessors: [0x1022]
Successors: []
---
0x1080 PUSH1 0x0
0x1082 DUP1
0x1083 REVERT
---
0x1080: V1528 = 0x0
0x1083: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, S9, V1491, 0xa9059cbb, V1518, 0x20, V1521, V1522, V1521, 0x0, V1491]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, S9, V1491, 0xa9059cbb, V1518, 0x20, V1521, V1522, V1521, 0x0, V1491]

================================

Block 0x1084
[0x1084:0x1090]
---
Predecessors: [0x1022]
Successors: [0x1091, 0x1095]
---
0x1084 JUMPDEST
0x1085 PUSH2 0x2c6
0x1088 GAS
0x1089 SUB
0x108a CALL
0x108b ISZERO
0x108c ISZERO
0x108d PUSH2 0x1095
0x1090 JUMPI
---
0x1084: JUMPDEST 
0x1085: V1529 = 0x2c6
0x1088: V1530 = GAS
0x1089: V1531 = SUB V1530 0x2c6
0x108a: V1532 = CALL V1531 V1491 0x0 V1521 V1522 V1521 0x20
0x108b: V1533 = ISZERO V1532
0x108c: V1534 = ISZERO V1533
0x108d: V1535 = 0x1095
0x1090: JUMPI 0x1095 V1534
---
Entry stack: [V12, 0x499, S9, V1491, 0xa9059cbb, V1518, 0x20, V1521, V1522, V1521, 0x0, V1491]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x499, S9, V1491, 0xa9059cbb, V1518]

================================

Block 0x1091
[0x1091:0x1094]
---
Predecessors: [0x1084]
Successors: []
---
0x1091 PUSH1 0x0
0x1093 DUP1
0x1094 REVERT
---
0x1091: V1536 = 0x0
0x1094: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, S3, V1491, 0xa9059cbb, V1518]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, S3, V1491, 0xa9059cbb, V1518]

================================

Block 0x1095
[0x1095:0x109f]
---
Predecessors: [0x1084]
Successors: [0x10a0]
---
0x1095 JUMPDEST
0x1096 POP
0x1097 POP
0x1098 POP
0x1099 PUSH1 0x40
0x109b MLOAD
0x109c DUP1
0x109d MLOAD
0x109e POP
0x109f POP
---
0x1095: JUMPDEST 
0x1099: V1537 = 0x40
0x109b: V1538 = M[0x40]
0x109d: V1539 = M[V1538]
---
Entry stack: [V12, 0x499, S3, V1491, 0xa9059cbb, V1518]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x499, S3]

================================

Block 0x10a0
[0x10a0:0x10a0]
---
Predecessors: [0x1095]
Successors: [0x10a1]
---
0x10a0 JUMPDEST
---
0x10a0: JUMPDEST 
---
Entry stack: [V12, 0x499, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, S0]

================================

Block 0x10a1
[0x10a1:0x10a3]
---
Predecessors: [0x10a0]
Successors: [0x499]
---
0x10a1 JUMPDEST
0x10a2 POP
0x10a3 JUMP
---
0x10a1: JUMPDEST 
0x10a3: JUMP 0x499
---
Entry stack: [V12, 0x499, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x10a4
[0x10a4:0x10fa]
---
Predecessors: [0x63f, 0x91a, 0x101a]
Successors: [0x10fb, 0x10ff]
---
0x10a4 JUMPDEST
0x10a5 PUSH1 0x1
0x10a7 SLOAD
0x10a8 PUSH1 0x0
0x10aa SWAP1
0x10ab PUSH1 0x1
0x10ad PUSH1 0xa0
0x10af PUSH1 0x2
0x10b1 EXP
0x10b2 SUB
0x10b3 AND
0x10b4 PUSH4 0x70a08231
0x10b9 ADDRESS
0x10ba DUP4
0x10bb PUSH1 0x40
0x10bd MLOAD
0x10be PUSH1 0x20
0x10c0 ADD
0x10c1 MSTORE
0x10c2 PUSH1 0x40
0x10c4 MLOAD
0x10c5 PUSH1 0xe0
0x10c7 PUSH1 0x2
0x10c9 EXP
0x10ca PUSH4 0xffffffff
0x10cf DUP5
0x10d0 AND
0x10d1 MUL
0x10d2 DUP2
0x10d3 MSTORE
0x10d4 PUSH1 0x1
0x10d6 PUSH1 0xa0
0x10d8 PUSH1 0x2
0x10da EXP
0x10db SUB
0x10dc SWAP1
0x10dd SWAP2
0x10de AND
0x10df PUSH1 0x4
0x10e1 DUP3
0x10e2 ADD
0x10e3 MSTORE
0x10e4 PUSH1 0x24
0x10e6 ADD
0x10e7 PUSH1 0x20
0x10e9 PUSH1 0x40
0x10eb MLOAD
0x10ec DUP1
0x10ed DUP4
0x10ee SUB
0x10ef DUP2
0x10f0 PUSH1 0x0
0x10f2 DUP8
0x10f3 DUP1
0x10f4 EXTCODESIZE
0x10f5 ISZERO
0x10f6 ISZERO
0x10f7 PUSH2 0x10ff
0x10fa JUMPI
---
0x10a4: JUMPDEST 
0x10a5: V1540 = 0x1
0x10a7: V1541 = S[0x1]
0x10a8: V1542 = 0x0
0x10ab: V1543 = 0x1
0x10ad: V1544 = 0xa0
0x10af: V1545 = 0x2
0x10b1: V1546 = EXP 0x2 0xa0
0x10b2: V1547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b3: V1548 = AND 0xffffffffffffffffffffffffffffffffffffffff V1541
0x10b4: V1549 = 0x70a08231
0x10b9: V1550 = ADDRESS
0x10bb: V1551 = 0x40
0x10bd: V1552 = M[0x40]
0x10be: V1553 = 0x20
0x10c0: V1554 = ADD 0x20 V1552
0x10c1: M[V1554] = 0x0
0x10c2: V1555 = 0x40
0x10c4: V1556 = M[0x40]
0x10c5: V1557 = 0xe0
0x10c7: V1558 = 0x2
0x10c9: V1559 = EXP 0x2 0xe0
0x10ca: V1560 = 0xffffffff
0x10d0: V1561 = AND 0x70a08231 0xffffffff
0x10d1: V1562 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x10d3: M[V1556] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x10d4: V1563 = 0x1
0x10d6: V1564 = 0xa0
0x10d8: V1565 = 0x2
0x10da: V1566 = EXP 0x2 0xa0
0x10db: V1567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10de: V1568 = AND V1550 0xffffffffffffffffffffffffffffffffffffffff
0x10df: V1569 = 0x4
0x10e2: V1570 = ADD V1556 0x4
0x10e3: M[V1570] = V1568
0x10e4: V1571 = 0x24
0x10e6: V1572 = ADD 0x24 V1556
0x10e7: V1573 = 0x20
0x10e9: V1574 = 0x40
0x10eb: V1575 = M[0x40]
0x10ee: V1576 = SUB V1572 V1575
0x10f0: V1577 = 0x0
0x10f4: V1578 = EXTCODESIZE V1548
0x10f5: V1579 = ISZERO V1578
0x10f6: V1580 = ISZERO V1579
0x10f7: V1581 = 0x10ff
0x10fa: JUMPI 0x10ff V1580
---
Entry stack: [V12, 0x499, S1, {0x4c3, 0x925, 0x1022}]
Stack pops: 0
Stack additions: [0x0, V1548, 0x70a08231, V1572, 0x20, V1575, V1576, V1575, 0x0, V1548]
Exit stack: [V12, 0x499, S1, {0x4c3, 0x925, 0x1022}, 0x0, V1548, 0x70a08231, V1572, 0x20, V1575, V1576, V1575, 0x0, V1548]

================================

Block 0x10fb
[0x10fb:0x10fe]
---
Predecessors: [0x10a4]
Successors: []
---
0x10fb PUSH1 0x0
0x10fd DUP1
0x10fe REVERT
---
0x10fb: V1582 = 0x0
0x10fe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, S11, {0x4c3, 0x925, 0x1022}, 0x0, V1548, 0x70a08231, V1572, 0x20, V1575, V1576, V1575, 0x0, V1548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, S11, {0x4c3, 0x925, 0x1022}, 0x0, V1548, 0x70a08231, V1572, 0x20, V1575, V1576, V1575, 0x0, V1548]

================================

Block 0x10ff
[0x10ff:0x110b]
---
Predecessors: [0x10a4, 0x140b]
Successors: [0x110c, 0x1110]
---
0x10ff JUMPDEST
0x1100 PUSH2 0x2c6
0x1103 GAS
0x1104 SUB
0x1105 CALL
0x1106 ISZERO
0x1107 ISZERO
0x1108 PUSH2 0x1110
0x110b JUMPI
---
0x10ff: JUMPDEST 
0x1100: V1583 = 0x2c6
0x1103: V1584 = GAS
0x1104: V1585 = SUB V1584 0x2c6
0x1105: V1586 = CALL V1585 S0 0x0 S2 S3 S4 0x20
0x1106: V1587 = ISZERO V1586
0x1107: V1588 = ISZERO V1587
0x1108: V1589 = 0x1110
0x110b: JUMPI 0x1110 V1588
---
Entry stack: [V12, 0x499, S11, {0x4c3, 0x925, 0x1022}, 0x0, S8, 0x70a08231, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x499, S11, {0x4c3, 0x925, 0x1022}, 0x0, S8, 0x70a08231, S6]

================================

Block 0x110c
[0x110c:0x110f]
---
Predecessors: [0x10ff]
Successors: []
---
0x110c PUSH1 0x0
0x110e DUP1
0x110f REVERT
---
0x110c: V1590 = 0x0
0x110f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, S5, {0x4c3, 0x925, 0x1022}, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, S5, {0x4c3, 0x925, 0x1022}, 0x0, S2, 0x70a08231, S0]

================================

Block 0x1110
[0x1110:0x111b]
---
Predecessors: [0x10ff, 0x1462]
Successors: [0x111c]
---
0x1110 JUMPDEST
0x1111 POP
0x1112 POP
0x1113 POP
0x1114 PUSH1 0x40
0x1116 MLOAD
0x1117 DUP1
0x1118 MLOAD
0x1119 SWAP2
0x111a POP
0x111b POP
---
0x1110: JUMPDEST 
0x1114: V1591 = 0x40
0x1116: V1592 = M[0x40]
0x1118: V1593 = M[V1592]
---
Entry stack: [V12, 0x499, S5, {0x4c3, 0x925, 0x1022}, 0x0, S2, 0x70a08231, S0]
Stack pops: 4
Stack additions: [V1593]
Exit stack: [V12, 0x499, S5, {0x4c3, 0x925, 0x1022}, V1593]

================================

Block 0x111c
[0x111c:0x111e]
---
Predecessors: [0x1110]
Successors: [0x4c3, 0x925, 0x1022]
---
0x111c JUMPDEST
0x111d SWAP1
0x111e JUMP
---
0x111c: JUMPDEST 
0x111e: JUMP {0x4c3, 0x925, 0x1022}
---
Entry stack: [V12, 0x499, S2, {0x4c3, 0x925, 0x1022}, V1593]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x499, S2, V1593]

================================

Block 0x111f
[0x111f:0x1135]
---
Predecessors: [0x664]
Successors: [0x1136, 0x113a]
---
0x111f JUMPDEST
0x1120 PUSH1 0x0
0x1122 SLOAD
0x1123 CALLER
0x1124 PUSH1 0x1
0x1126 PUSH1 0xa0
0x1128 PUSH1 0x2
0x112a EXP
0x112b SUB
0x112c SWAP1
0x112d DUP2
0x112e AND
0x112f SWAP2
0x1130 AND
0x1131 EQ
0x1132 PUSH2 0x113a
0x1135 JUMPI
---
0x111f: JUMPDEST 
0x1120: V1594 = 0x0
0x1122: V1595 = S[0x0]
0x1123: V1596 = CALLER
0x1124: V1597 = 0x1
0x1126: V1598 = 0xa0
0x1128: V1599 = 0x2
0x112a: V1600 = EXP 0x2 0xa0
0x112b: V1601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112e: V1602 = AND 0xffffffffffffffffffffffffffffffffffffffff V1596
0x1130: V1603 = AND V1595 0xffffffffffffffffffffffffffffffffffffffff
0x1131: V1604 = EQ V1603 V1602
0x1132: V1605 = 0x113a
0x1135: JUMPI 0x113a V1604
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x1136
[0x1136:0x1139]
---
Predecessors: [0x111f]
Successors: []
---
0x1136 PUSH1 0x0
0x1138 DUP1
0x1139 REVERT
---
0x1136: V1606 = 0x0
0x1139: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x113a
[0x113a:0x114c]
---
Predecessors: [0x111f]
Successors: [0x114d, 0x1151]
---
0x113a JUMPDEST
0x113b PUSH1 0x0
0x113d SLOAD
0x113e PUSH1 0xa0
0x1140 PUSH1 0x2
0x1142 EXP
0x1143 SWAP1
0x1144 DIV
0x1145 PUSH1 0xff
0x1147 AND
0x1148 ISZERO
0x1149 PUSH2 0x1151
0x114c JUMPI
---
0x113a: JUMPDEST 
0x113b: V1607 = 0x0
0x113d: V1608 = S[0x0]
0x113e: V1609 = 0xa0
0x1140: V1610 = 0x2
0x1142: V1611 = EXP 0x2 0xa0
0x1144: V1612 = DIV V1608 0x10000000000000000000000000000000000000000
0x1145: V1613 = 0xff
0x1147: V1614 = AND 0xff V1612
0x1148: V1615 = ISZERO V1614
0x1149: V1616 = 0x1151
0x114c: JUMPI 0x1151 V1615
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x114d
[0x114d:0x1150]
---
Predecessors: [0x113a]
Successors: []
---
0x114d PUSH1 0x0
0x114f DUP1
0x1150 REVERT
---
0x114d: V1617 = 0x0
0x1150: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x1151
[0x1151:0x11a1]
---
Predecessors: [0x113a]
Successors: [0x11a2]
---
0x1151 JUMPDEST
0x1152 PUSH1 0x0
0x1154 DUP1
0x1155 SLOAD
0x1156 PUSH21 0xff0000000000000000000000000000000000000000
0x116c NOT
0x116d AND
0x116e PUSH1 0xa0
0x1170 PUSH1 0x2
0x1172 EXP
0x1173 OR
0x1174 SWAP1
0x1175 SSTORE
0x1176 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x1197 PUSH1 0x40
0x1199 MLOAD
0x119a PUSH1 0x40
0x119c MLOAD
0x119d DUP1
0x119e SWAP2
0x119f SUB
0x11a0 SWAP1
0x11a1 LOG1
---
0x1151: JUMPDEST 
0x1152: V1618 = 0x0
0x1155: V1619 = S[0x0]
0x1156: V1620 = 0xff0000000000000000000000000000000000000000
0x116c: V1621 = NOT 0xff0000000000000000000000000000000000000000
0x116d: V1622 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1619
0x116e: V1623 = 0xa0
0x1170: V1624 = 0x2
0x1172: V1625 = EXP 0x2 0xa0
0x1173: V1626 = OR 0x10000000000000000000000000000000000000000 V1622
0x1175: S[0x0] = V1626
0x1176: V1627 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x1197: V1628 = 0x40
0x1199: V1629 = M[0x40]
0x119a: V1630 = 0x40
0x119c: V1631 = M[0x40]
0x119f: V1632 = SUB V1629 V1631
0x11a1: LOG V1631 V1632 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x11a2
[0x11a2:0x11a2]
---
Predecessors: [0x1151]
Successors: [0x11a3]
---
0x11a2 JUMPDEST
---
0x11a2: JUMPDEST 
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x11a3
[0x11a3:0x11a3]
---
Predecessors: [0x11a2]
Successors: [0x11a4]
---
0x11a3 JUMPDEST
---
0x11a3: JUMPDEST 
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x11a4
[0x11a4:0x11a5]
---
Predecessors: [0x11a3]
Successors: [0x499]
---
0x11a4 JUMPDEST
0x11a5 JUMP
---
0x11a4: JUMPDEST 
0x11a5: JUMP 0x499
---
Entry stack: [V12, 0x499]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x11a6
[0x11a6:0x11b4]
---
Predecessors: [0x679]
Successors: [0x681]
---
0x11a6 JUMPDEST
0x11a7 PUSH1 0x0
0x11a9 SLOAD
0x11aa PUSH1 0x1
0x11ac PUSH1 0xa0
0x11ae PUSH1 0x2
0x11b0 EXP
0x11b1 SUB
0x11b2 AND
0x11b3 DUP2
0x11b4 JUMP
---
0x11a6: JUMPDEST 
0x11a7: V1633 = 0x0
0x11a9: V1634 = S[0x0]
0x11aa: V1635 = 0x1
0x11ac: V1636 = 0xa0
0x11ae: V1637 = 0x2
0x11b0: V1638 = EXP 0x2 0xa0
0x11b1: V1639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11b2: V1640 = AND 0xffffffffffffffffffffffffffffffffffffffff V1634
0x11b4: JUMP 0x681
---
Entry stack: [V12, 0x681]
Stack pops: 1
Stack additions: [S0, V1640]
Exit stack: [V12, 0x681, V1640]

================================

Block 0x11b5
[0x11b5:0x11c3]
---
Predecessors: [0x6a8]
Successors: [0x681]
---
0x11b5 JUMPDEST
0x11b6 PUSH1 0x2
0x11b8 SLOAD
0x11b9 PUSH1 0x1
0x11bb PUSH1 0xa0
0x11bd PUSH1 0x2
0x11bf EXP
0x11c0 SUB
0x11c1 AND
0x11c2 DUP2
0x11c3 JUMP
---
0x11b5: JUMPDEST 
0x11b6: V1641 = 0x2
0x11b8: V1642 = S[0x2]
0x11b9: V1643 = 0x1
0x11bb: V1644 = 0xa0
0x11bd: V1645 = 0x2
0x11bf: V1646 = EXP 0x2 0xa0
0x11c0: V1647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c1: V1648 = AND 0xffffffffffffffffffffffffffffffffffffffff V1642
0x11c3: JUMP 0x681
---
Entry stack: [V12, 0x681]
Stack pops: 1
Stack additions: [S0, V1648]
Exit stack: [V12, 0x681, V1648]

================================

Block 0x11c4
[0x11c4:0x11d7]
---
Predecessors: [0x6d7]
Successors: [0x11d8, 0x11dc]
---
0x11c4 JUMPDEST
0x11c5 PUSH1 0x0
0x11c7 PUSH1 0x1
0x11c9 PUSH1 0xa0
0x11cb PUSH1 0x2
0x11cd EXP
0x11ce SUB
0x11cf ADDRESS
0x11d0 AND
0x11d1 BALANCE
0x11d2 ISZERO
0x11d3 ISZERO
0x11d4 PUSH2 0x11dc
0x11d7 JUMPI
---
0x11c4: JUMPDEST 
0x11c5: V1649 = 0x0
0x11c7: V1650 = 0x1
0x11c9: V1651 = 0xa0
0x11cb: V1652 = 0x2
0x11cd: V1653 = EXP 0x2 0xa0
0x11ce: V1654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11cf: V1655 = ADDRESS
0x11d0: V1656 = AND V1655 0xffffffffffffffffffffffffffffffffffffffff
0x11d1: V1657 = BALANCE V1656
0x11d2: V1658 = ISZERO V1657
0x11d3: V1659 = ISZERO V1658
0x11d4: V1660 = 0x11dc
0x11d7: JUMPI 0x11dc V1659
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x11d8
[0x11d8:0x11db]
---
Predecessors: [0x11c4]
Successors: []
---
0x11d8 PUSH1 0x0
0x11da DUP1
0x11db REVERT
---
0x11d8: V1661 = 0x0
0x11db: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x11dc
[0x11dc:0x11de]
---
Predecessors: [0x11c4]
Successors: [0x11df]
---
0x11dc JUMPDEST
0x11dd PUSH1 0x2
---
0x11dc: JUMPDEST 
0x11dd: V1662 = 0x2
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, 0x499, 0x0, 0x2]

================================

Block 0x11df
[0x11df:0x11f5]
---
Predecessors: [0x11dc]
Successors: [0x11f6, 0x11f7]
---
0x11df JUMPDEST
0x11e0 PUSH1 0x2
0x11e2 DUP1
0x11e3 SLOAD
0x11e4 PUSH1 0xa0
0x11e6 PUSH1 0x2
0x11e8 EXP
0x11e9 SWAP1
0x11ea DIV
0x11eb PUSH1 0xff
0x11ed AND
0x11ee SWAP1
0x11ef DUP2
0x11f0 GT
0x11f1 ISZERO
0x11f2 PUSH2 0x11f7
0x11f5 JUMPI
---
0x11df: JUMPDEST 
0x11e0: V1663 = 0x2
0x11e3: V1664 = S[0x2]
0x11e4: V1665 = 0xa0
0x11e6: V1666 = 0x2
0x11e8: V1667 = EXP 0x2 0xa0
0x11ea: V1668 = DIV V1664 0x10000000000000000000000000000000000000000
0x11eb: V1669 = 0xff
0x11ed: V1670 = AND 0xff V1668
0x11f0: V1671 = GT V1670 0x2
0x11f1: V1672 = ISZERO V1671
0x11f2: V1673 = 0x11f7
0x11f5: JUMPI 0x11f7 V1672
---
Entry stack: [V12, 0x499, 0x0, 0x2]
Stack pops: 0
Stack additions: [V1670]
Exit stack: [V12, 0x499, 0x0, 0x2, V1670]

================================

Block 0x11f6
[0x11f6:0x11f6]
---
Predecessors: [0x11df]
Successors: []
---
0x11f6 INVALID
---
0x11f6: INVALID 
---
Entry stack: [V12, 0x499, 0x0, 0x2, V1670]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0, 0x2, V1670]

================================

Block 0x11f7
[0x11f7:0x11fc]
---
Predecessors: [0x11df]
Successors: [0x11fd, 0x1201]
---
0x11f7 JUMPDEST
0x11f8 EQ
0x11f9 PUSH2 0x1201
0x11fc JUMPI
---
0x11f7: JUMPDEST 
0x11f8: V1674 = EQ V1670 0x2
0x11f9: V1675 = 0x1201
0x11fc: JUMPI 0x1201 V1674
---
Entry stack: [V12, 0x499, 0x0, 0x2, V1670]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x11fd
[0x11fd:0x1200]
---
Predecessors: [0x11f7]
Successors: []
---
0x11fd PUSH1 0x0
0x11ff DUP1
0x1200 REVERT
---
0x11fd: V1676 = 0x0
0x1200: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x1201
[0x1201:0x1217]
---
Predecessors: [0x11f7]
Successors: [0x1218, 0x121c]
---
0x1201 JUMPDEST
0x1202 PUSH1 0x5
0x1204 SLOAD
0x1205 CALLER
0x1206 PUSH1 0x1
0x1208 PUSH1 0xa0
0x120a PUSH1 0x2
0x120c EXP
0x120d SUB
0x120e SWAP1
0x120f DUP2
0x1210 AND
0x1211 SWAP2
0x1212 AND
0x1213 EQ
0x1214 PUSH2 0x121c
0x1217 JUMPI
---
0x1201: JUMPDEST 
0x1202: V1677 = 0x5
0x1204: V1678 = S[0x5]
0x1205: V1679 = CALLER
0x1206: V1680 = 0x1
0x1208: V1681 = 0xa0
0x120a: V1682 = 0x2
0x120c: V1683 = EXP 0x2 0xa0
0x120d: V1684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1210: V1685 = AND 0xffffffffffffffffffffffffffffffffffffffff V1679
0x1212: V1686 = AND V1678 0xffffffffffffffffffffffffffffffffffffffff
0x1213: V1687 = EQ V1686 V1685
0x1214: V1688 = 0x121c
0x1217: JUMPI 0x121c V1687
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x1218
[0x1218:0x121b]
---
Predecessors: [0x1201]
Successors: []
---
0x1218 PUSH1 0x0
0x121a DUP1
0x121b REVERT
---
0x1218: V1689 = 0x0
0x121b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x121c
[0x121c:0x122b]
---
Predecessors: [0x1201]
Successors: [0x122c, 0x1230]
---
0x121c JUMPDEST
0x121d PUSH1 0x9
0x121f SLOAD
0x1220 PUSH1 0xff
0x1222 AND
0x1223 ISZERO
0x1224 ISZERO
0x1225 PUSH1 0x1
0x1227 EQ
0x1228 PUSH2 0x1230
0x122b JUMPI
---
0x121c: JUMPDEST 
0x121d: V1690 = 0x9
0x121f: V1691 = S[0x9]
0x1220: V1692 = 0xff
0x1222: V1693 = AND 0xff V1691
0x1223: V1694 = ISZERO V1693
0x1224: V1695 = ISZERO V1694
0x1225: V1696 = 0x1
0x1227: V1697 = EQ 0x1 V1695
0x1228: V1698 = 0x1230
0x122b: JUMPI 0x1230 V1697
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x122c
[0x122c:0x122f]
---
Predecessors: [0x121c]
Successors: []
---
0x122c PUSH1 0x0
0x122e DUP1
0x122f REVERT
---
0x122c: V1699 = 0x0
0x122f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x0]

================================

Block 0x1230
[0x1230:0x1264]
---
Predecessors: [0x121c]
Successors: [0x1265, 0x1269]
---
0x1230 JUMPDEST
0x1231 POP
0x1232 PUSH1 0x5
0x1234 SLOAD
0x1235 PUSH1 0x1
0x1237 PUSH1 0xa0
0x1239 PUSH1 0x2
0x123b EXP
0x123c SUB
0x123d ADDRESS
0x123e DUP2
0x123f AND
0x1240 BALANCE
0x1241 SWAP2
0x1242 AND
0x1243 DUP2
0x1244 ISZERO
0x1245 PUSH2 0x8fc
0x1248 MUL
0x1249 DUP3
0x124a PUSH1 0x40
0x124c MLOAD
0x124d PUSH1 0x0
0x124f PUSH1 0x40
0x1251 MLOAD
0x1252 DUP1
0x1253 DUP4
0x1254 SUB
0x1255 DUP2
0x1256 DUP6
0x1257 DUP9
0x1258 DUP9
0x1259 CALL
0x125a SWAP4
0x125b POP
0x125c POP
0x125d POP
0x125e POP
0x125f ISZERO
0x1260 ISZERO
0x1261 PUSH2 0x1269
0x1264 JUMPI
---
0x1230: JUMPDEST 
0x1232: V1700 = 0x5
0x1234: V1701 = S[0x5]
0x1235: V1702 = 0x1
0x1237: V1703 = 0xa0
0x1239: V1704 = 0x2
0x123b: V1705 = EXP 0x2 0xa0
0x123c: V1706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x123d: V1707 = ADDRESS
0x123f: V1708 = AND 0xffffffffffffffffffffffffffffffffffffffff V1707
0x1240: V1709 = BALANCE V1708
0x1242: V1710 = AND V1701 0xffffffffffffffffffffffffffffffffffffffff
0x1244: V1711 = ISZERO V1709
0x1245: V1712 = 0x8fc
0x1248: V1713 = MUL 0x8fc V1711
0x124a: V1714 = 0x40
0x124c: V1715 = M[0x40]
0x124d: V1716 = 0x0
0x124f: V1717 = 0x40
0x1251: V1718 = M[0x40]
0x1254: V1719 = SUB V1715 V1718
0x1259: V1720 = CALL V1713 V1710 V1709 V1718 V1719 V1718 0x0
0x125f: V1721 = ISZERO V1720
0x1260: V1722 = ISZERO V1721
0x1261: V1723 = 0x1269
0x1264: JUMPI 0x1269 V1722
---
Entry stack: [V12, 0x499, 0x0]
Stack pops: 1
Stack additions: [V1709]
Exit stack: [V12, 0x499, V1709]

================================

Block 0x1265
[0x1265:0x1268]
---
Predecessors: [0x1230]
Successors: []
---
0x1265 PUSH1 0x0
0x1267 DUP1
0x1268 REVERT
---
0x1265: V1724 = 0x0
0x1268: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V1709]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V1709]

================================

Block 0x1269
[0x1269:0x129c]
---
Predecessors: [0x1230]
Successors: [0x129d]
---
0x1269 JUMPDEST
0x126a PUSH32 0x9d80ac4d5ed0f9b93e60c8648c7f784e39ea79ce723a1364344a8a285e07493c
0x128b DUP2
0x128c PUSH1 0x40
0x128e MLOAD
0x128f SWAP1
0x1290 DUP2
0x1291 MSTORE
0x1292 PUSH1 0x20
0x1294 ADD
0x1295 PUSH1 0x40
0x1297 MLOAD
0x1298 DUP1
0x1299 SWAP2
0x129a SUB
0x129b SWAP1
0x129c LOG1
---
0x1269: JUMPDEST 
0x126a: V1725 = 0x9d80ac4d5ed0f9b93e60c8648c7f784e39ea79ce723a1364344a8a285e07493c
0x128c: V1726 = 0x40
0x128e: V1727 = M[0x40]
0x1291: M[V1727] = V1709
0x1292: V1728 = 0x20
0x1294: V1729 = ADD 0x20 V1727
0x1295: V1730 = 0x40
0x1297: V1731 = M[0x40]
0x129a: V1732 = SUB V1729 V1731
0x129c: LOG V1731 V1732 0x9d80ac4d5ed0f9b93e60c8648c7f784e39ea79ce723a1364344a8a285e07493c
---
Entry stack: [V12, 0x499, V1709]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x499, V1709]

================================

Block 0x129d
[0x129d:0x129f]
---
Predecessors: [0x1269]
Successors: [0x499]
---
0x129d JUMPDEST
0x129e POP
0x129f JUMP
---
0x129d: JUMPDEST 
0x129f: JUMP 0x499
---
Entry stack: [V12, 0x499, V1709]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x12a0
[0x12a0:0x12b6]
---
Predecessors: [0x6ec]
Successors: [0x12b7, 0x12bb]
---
0x12a0 JUMPDEST
0x12a1 PUSH1 0x0
0x12a3 SLOAD
0x12a4 CALLER
0x12a5 PUSH1 0x1
0x12a7 PUSH1 0xa0
0x12a9 PUSH1 0x2
0x12ab EXP
0x12ac SUB
0x12ad SWAP1
0x12ae DUP2
0x12af AND
0x12b0 SWAP2
0x12b1 AND
0x12b2 EQ
0x12b3 PUSH2 0x12bb
0x12b6 JUMPI
---
0x12a0: JUMPDEST 
0x12a1: V1733 = 0x0
0x12a3: V1734 = S[0x0]
0x12a4: V1735 = CALLER
0x12a5: V1736 = 0x1
0x12a7: V1737 = 0xa0
0x12a9: V1738 = 0x2
0x12ab: V1739 = EXP 0x2 0xa0
0x12ac: V1740 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12af: V1741 = AND 0xffffffffffffffffffffffffffffffffffffffff V1735
0x12b1: V1742 = AND V1734 0xffffffffffffffffffffffffffffffffffffffff
0x12b2: V1743 = EQ V1742 V1741
0x12b3: V1744 = 0x12bb
0x12b6: JUMPI 0x12bb V1743
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x12b7
[0x12b7:0x12ba]
---
Predecessors: [0x12a0]
Successors: []
---
0x12b7 PUSH1 0x0
0x12b9 DUP1
0x12ba REVERT
---
0x12b7: V1745 = 0x0
0x12ba: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x12bb
[0x12bb:0x12bd]
---
Predecessors: [0x12a0]
Successors: [0x12be]
---
0x12bb JUMPDEST
0x12bc PUSH1 0x1
---
0x12bb: JUMPDEST 
0x12bc: V1746 = 0x1
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x499, 0x1]

================================

Block 0x12be
[0x12be:0x12d4]
---
Predecessors: [0x12bb]
Successors: [0x12d5, 0x12d6]
---
0x12be JUMPDEST
0x12bf PUSH1 0x2
0x12c1 DUP1
0x12c2 SLOAD
0x12c3 PUSH1 0xa0
0x12c5 PUSH1 0x2
0x12c7 EXP
0x12c8 SWAP1
0x12c9 DIV
0x12ca PUSH1 0xff
0x12cc AND
0x12cd SWAP1
0x12ce DUP2
0x12cf GT
0x12d0 ISZERO
0x12d1 PUSH2 0x12d6
0x12d4 JUMPI
---
0x12be: JUMPDEST 
0x12bf: V1747 = 0x2
0x12c2: V1748 = S[0x2]
0x12c3: V1749 = 0xa0
0x12c5: V1750 = 0x2
0x12c7: V1751 = EXP 0x2 0xa0
0x12c9: V1752 = DIV V1748 0x10000000000000000000000000000000000000000
0x12ca: V1753 = 0xff
0x12cc: V1754 = AND 0xff V1752
0x12cf: V1755 = GT V1754 0x2
0x12d0: V1756 = ISZERO V1755
0x12d1: V1757 = 0x12d6
0x12d4: JUMPI 0x12d6 V1756
---
Entry stack: [V12, 0x499, 0x1]
Stack pops: 0
Stack additions: [V1754]
Exit stack: [V12, 0x499, 0x1, V1754]

================================

Block 0x12d5
[0x12d5:0x12d5]
---
Predecessors: [0x12be]
Successors: []
---
0x12d5 INVALID
---
0x12d5: INVALID 
---
Entry stack: [V12, 0x499, 0x1, V1754]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, 0x1, V1754]

================================

Block 0x12d6
[0x12d6:0x12db]
---
Predecessors: [0x12be]
Successors: [0x12dc, 0x12e0]
---
0x12d6 JUMPDEST
0x12d7 EQ
0x12d8 PUSH2 0x12e0
0x12db JUMPI
---
0x12d6: JUMPDEST 
0x12d7: V1758 = EQ V1754 0x1
0x12d8: V1759 = 0x12e0
0x12db: JUMPI 0x12e0 V1758
---
Entry stack: [V12, 0x499, 0x1, V1754]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x12dc
[0x12dc:0x12df]
---
Predecessors: [0x12d6]
Successors: []
---
0x12dc PUSH1 0x0
0x12de DUP1
0x12df REVERT
---
0x12dc: V1760 = 0x0
0x12df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x12e0
[0x12e0:0x1304]
---
Predecessors: [0x12d6]
Successors: [0x1305]
---
0x12e0 JUMPDEST
0x12e1 PUSH1 0x2
0x12e3 DUP1
0x12e4 SLOAD
0x12e5 DUP2
0x12e6 SWAP1
0x12e7 PUSH21 0xff0000000000000000000000000000000000000000
0x12fd NOT
0x12fe AND
0x12ff PUSH1 0xa0
0x1301 PUSH1 0x2
0x1303 EXP
0x1304 DUP3
---
0x12e0: JUMPDEST 
0x12e1: V1761 = 0x2
0x12e4: V1762 = S[0x2]
0x12e7: V1763 = 0xff0000000000000000000000000000000000000000
0x12fd: V1764 = NOT 0xff0000000000000000000000000000000000000000
0x12fe: V1765 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1762
0x12ff: V1766 = 0xa0
0x1301: V1767 = 0x2
0x1303: V1768 = EXP 0x2 0xa0
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: [0x2, 0x2, V1765, 0x10000000000000000000000000000000000000000, 0x2]
Exit stack: [V12, 0x499, 0x2, 0x2, V1765, 0x10000000000000000000000000000000000000000, 0x2]

================================

Block 0x1305
[0x1305:0x133d]
---
Predecessors: [0x12e0]
Successors: [0x133e]
---
0x1305 JUMPDEST
0x1306 MUL
0x1307 OR
0x1308 SWAP1
0x1309 SSTORE
0x130a POP
0x130b PUSH32 0x94bb74a9473ae4063ec1e73dc3e35fd4b5abe9cc1e43ad0db84e5358559ccd5a
0x132c NUMBER
0x132d PUSH1 0x40
0x132f MLOAD
0x1330 SWAP1
0x1331 DUP2
0x1332 MSTORE
0x1333 PUSH1 0x20
0x1335 ADD
0x1336 PUSH1 0x40
0x1338 MLOAD
0x1339 DUP1
0x133a SWAP2
0x133b SUB
0x133c SWAP1
0x133d LOG1
---
0x1305: JUMPDEST 
0x1306: V1769 = MUL 0x2 0x10000000000000000000000000000000000000000
0x1307: V1770 = OR 0x20000000000000000000000000000000000000000 V1765
0x1309: S[0x2] = V1770
0x130b: V1771 = 0x94bb74a9473ae4063ec1e73dc3e35fd4b5abe9cc1e43ad0db84e5358559ccd5a
0x132c: V1772 = NUMBER
0x132d: V1773 = 0x40
0x132f: V1774 = M[0x40]
0x1332: M[V1774] = V1772
0x1333: V1775 = 0x20
0x1335: V1776 = ADD 0x20 V1774
0x1336: V1777 = 0x40
0x1338: V1778 = M[0x40]
0x133b: V1779 = SUB V1776 V1778
0x133d: LOG V1778 V1779 0x94bb74a9473ae4063ec1e73dc3e35fd4b5abe9cc1e43ad0db84e5358559ccd5a
---
Entry stack: [V12, 0x499, 0x2, 0x2, V1765, 0x10000000000000000000000000000000000000000, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x133e
[0x133e:0x133e]
---
Predecessors: [0x1305]
Successors: [0x133f]
---
0x133e JUMPDEST
---
0x133e: JUMPDEST 
---
Entry stack: [V12, 0x499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499]

================================

Block 0x133f
[0x133f:0x1340]
---
Predecessors: [0x133e]
Successors: [0x499]
---
0x133f JUMPDEST
0x1340 JUMP
---
0x133f: JUMPDEST 
0x1340: JUMP 0x499
---
Entry stack: [V12, 0x499]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1341
[0x1341:0x1350]
---
Predecessors: [0x701]
Successors: [0x709]
---
0x1341 JUMPDEST
0x1342 PUSH1 0x2
0x1344 SLOAD
0x1345 PUSH1 0xa0
0x1347 PUSH1 0x2
0x1349 EXP
0x134a SWAP1
0x134b DIV
0x134c PUSH1 0xff
0x134e AND
0x134f DUP2
0x1350 JUMP
---
0x1341: JUMPDEST 
0x1342: V1780 = 0x2
0x1344: V1781 = S[0x2]
0x1345: V1782 = 0xa0
0x1347: V1783 = 0x2
0x1349: V1784 = EXP 0x2 0xa0
0x134b: V1785 = DIV V1781 0x10000000000000000000000000000000000000000
0x134c: V1786 = 0xff
0x134e: V1787 = AND 0xff V1785
0x1350: JUMP 0x709
---
Entry stack: [V12, 0x709]
Stack pops: 1
Stack additions: [S0, V1787]
Exit stack: [V12, 0x709, V1787]

================================

Block 0x1351
[0x1351:0x1356]
---
Predecessors: [0x738]
Successors: [0x4c3]
---
0x1351 JUMPDEST
0x1352 PUSH1 0x3
0x1354 SLOAD
0x1355 DUP2
0x1356 JUMP
---
0x1351: JUMPDEST 
0x1352: V1788 = 0x3
0x1354: V1789 = S[0x3]
0x1356: JUMP 0x4c3
---
Entry stack: [V12, 0x4c3]
Stack pops: 1
Stack additions: [S0, V1789]
Exit stack: [V12, 0x4c3, V1789]

================================

Block 0x1357
[0x1357:0x135c]
---
Predecessors: [0x75d]
Successors: [0x4c3]
---
0x1357 JUMPDEST
0x1358 PUSH1 0x4
0x135a SLOAD
0x135b DUP2
0x135c JUMP
---
0x1357: JUMPDEST 
0x1358: V1790 = 0x4
0x135a: V1791 = S[0x4]
0x135c: JUMP 0x4c3
---
Entry stack: [V12, 0x4c3]
Stack pops: 1
Stack additions: [S0, V1791]
Exit stack: [V12, 0x4c3, V1791]

================================

Block 0x135d
[0x135d:0x1373]
---
Predecessors: [0x782]
Successors: [0x1374, 0x1378]
---
0x135d JUMPDEST
0x135e PUSH1 0x0
0x1360 SLOAD
0x1361 CALLER
0x1362 PUSH1 0x1
0x1364 PUSH1 0xa0
0x1366 PUSH1 0x2
0x1368 EXP
0x1369 SUB
0x136a SWAP1
0x136b DUP2
0x136c AND
0x136d SWAP2
0x136e AND
0x136f EQ
0x1370 PUSH2 0x1378
0x1373 JUMPI
---
0x135d: JUMPDEST 
0x135e: V1792 = 0x0
0x1360: V1793 = S[0x0]
0x1361: V1794 = CALLER
0x1362: V1795 = 0x1
0x1364: V1796 = 0xa0
0x1366: V1797 = 0x2
0x1368: V1798 = EXP 0x2 0xa0
0x1369: V1799 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136c: V1800 = AND 0xffffffffffffffffffffffffffffffffffffffff V1794
0x136e: V1801 = AND V1793 0xffffffffffffffffffffffffffffffffffffffff
0x136f: V1802 = EQ V1801 V1800
0x1370: V1803 = 0x1378
0x1373: JUMPI 0x1378 V1802
---
Entry stack: [V12, 0x499, V697]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V697]

================================

Block 0x1374
[0x1374:0x1377]
---
Predecessors: [0x135d]
Successors: []
---
0x1374 PUSH1 0x0
0x1376 DUP1
0x1377 REVERT
---
0x1374: V1804 = 0x0
0x1377: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V697]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V697]

================================

Block 0x1378
[0x1378:0x1388]
---
Predecessors: [0x135d]
Successors: [0x1389, 0x138d]
---
0x1378 JUMPDEST
0x1379 PUSH1 0x1
0x137b PUSH1 0xa0
0x137d PUSH1 0x2
0x137f EXP
0x1380 SUB
0x1381 DUP2
0x1382 AND
0x1383 ISZERO
0x1384 ISZERO
0x1385 PUSH2 0x138d
0x1388 JUMPI
---
0x1378: JUMPDEST 
0x1379: V1805 = 0x1
0x137b: V1806 = 0xa0
0x137d: V1807 = 0x2
0x137f: V1808 = EXP 0x2 0xa0
0x1380: V1809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1382: V1810 = AND V697 0xffffffffffffffffffffffffffffffffffffffff
0x1383: V1811 = ISZERO V1810
0x1384: V1812 = ISZERO V1811
0x1385: V1813 = 0x138d
0x1388: JUMPI 0x138d V1812
---
Entry stack: [V12, 0x499, V697]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x499, V697]

================================

Block 0x1389
[0x1389:0x138c]
---
Predecessors: [0x1378]
Successors: []
---
0x1389 PUSH1 0x0
0x138b DUP1
0x138c REVERT
---
0x1389: V1814 = 0x0
0x138c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x499, V697]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V697]

================================

Block 0x138d
[0x138d:0x13f1]
---
Predecessors: [0x1378]
Successors: [0x13f2]
---
0x138d JUMPDEST
0x138e PUSH1 0x0
0x1390 SLOAD
0x1391 PUSH1 0x1
0x1393 PUSH1 0xa0
0x1395 PUSH1 0x2
0x1397 EXP
0x1398 SUB
0x1399 DUP1
0x139a DUP4
0x139b AND
0x139c SWAP2
0x139d AND
0x139e PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x13bf PUSH1 0x40
0x13c1 MLOAD
0x13c2 PUSH1 0x40
0x13c4 MLOAD
0x13c5 DUP1
0x13c6 SWAP2
0x13c7 SUB
0x13c8 SWAP1
0x13c9 LOG3
0x13ca PUSH1 0x0
0x13cc DUP1
0x13cd SLOAD
0x13ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13e3 NOT
0x13e4 AND
0x13e5 PUSH1 0x1
0x13e7 PUSH1 0xa0
0x13e9 PUSH1 0x2
0x13eb EXP
0x13ec SUB
0x13ed DUP4
0x13ee AND
0x13ef OR
0x13f0 SWAP1
0x13f1 SSTORE
---
0x138d: JUMPDEST 
0x138e: V1815 = 0x0
0x1390: V1816 = S[0x0]
0x1391: V1817 = 0x1
0x1393: V1818 = 0xa0
0x1395: V1819 = 0x2
0x1397: V1820 = EXP 0x2 0xa0
0x1398: V1821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139b: V1822 = AND V697 0xffffffffffffffffffffffffffffffffffffffff
0x139d: V1823 = AND V1816 0xffffffffffffffffffffffffffffffffffffffff
0x139e: V1824 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x13bf: V1825 = 0x40
0x13c1: V1826 = M[0x40]
0x13c2: V1827 = 0x40
0x13c4: V1828 = M[0x40]
0x13c7: V1829 = SUB V1826 V1828
0x13c9: LOG V1828 V1829 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1823 V1822
0x13ca: V1830 = 0x0
0x13cd: V1831 = S[0x0]
0x13ce: V1832 = 0xffffffffffffffffffffffffffffffffffffffff
0x13e3: V1833 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x13e4: V1834 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1831
0x13e5: V1835 = 0x1
0x13e7: V1836 = 0xa0
0x13e9: V1837 = 0x2
0x13eb: V1838 = EXP 0x2 0xa0
0x13ec: V1839 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13ee: V1840 = AND V697 0xffffffffffffffffffffffffffffffffffffffff
0x13ef: V1841 = OR V1840 V1834
0x13f1: S[0x0] = V1841
---
Entry stack: [V12, 0x499, V697]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x499, V697]

================================

Block 0x13f2
[0x13f2:0x13f2]
---
Predecessors: [0x138d]
Successors: [0x13f3]
---
0x13f2 JUMPDEST
---
0x13f2: JUMPDEST 
---
Entry stack: [V12, 0x499, V697]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V697]

================================

Block 0x13f3
[0x13f3:0x13f5]
---
Predecessors: [0x13f2]
Successors: [0x499]
---
0x13f3 JUMPDEST
0x13f4 POP
0x13f5 JUMP
---
0x13f3: JUMPDEST 
0x13f5: JUMP 0x499
---
Entry stack: [V12, 0x499, V697]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x13f6
[0x13f6:0x1404]
---
Predecessors: [0x7a3]
Successors: [0x681]
---
0x13f6 JUMPDEST
0x13f7 PUSH1 0x1
0x13f9 SLOAD
0x13fa PUSH1 0x1
0x13fc PUSH1 0xa0
0x13fe PUSH1 0x2
0x1400 EXP
0x1401 SUB
0x1402 AND
0x1403 DUP2
0x1404 JUMP
---
0x13f6: JUMPDEST 
0x13f7: V1842 = 0x1
0x13f9: V1843 = S[0x1]
0x13fa: V1844 = 0x1
0x13fc: V1845 = 0xa0
0x13fe: V1846 = 0x2
0x1400: V1847 = EXP 0x2 0xa0
0x1401: V1848 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1402: V1849 = AND 0xffffffffffffffffffffffffffffffffffffffff V1843
0x1404: JUMP 0x681
---
Entry stack: [V12, 0x681]
Stack pops: 1
Stack additions: [S0, V1849]
Exit stack: [V12, 0x681, V1849]

================================

Block 0x1405
[0x1405:0x140a]
---
Predecessors: [0x7d2]
Successors: [0x4c3]
---
0x1405 JUMPDEST
0x1406 PUSH1 0x6
0x1408 SLOAD
0x1409 DUP2
0x140a JUMP
---
0x1405: JUMPDEST 
0x1406: V1850 = 0x6
0x1408: V1851 = S[0x6]
0x140a: JUMP 0x4c3
---
Entry stack: [V12, 0x4c3]
Stack pops: 1
Stack additions: [S0, V1851]
Exit stack: [V12, 0x4c3, V1851]

================================

Block 0x140b
[0x140b:0x1461]
---
Predecessors: []
Successors: [0x10ff, 0x1462]
---
0x140b JUMPDEST
0x140c PUSH1 0x1
0x140e SLOAD
0x140f PUSH1 0x0
0x1411 SWAP1
0x1412 PUSH1 0x1
0x1414 PUSH1 0xa0
0x1416 PUSH1 0x2
0x1418 EXP
0x1419 SUB
0x141a AND
0x141b PUSH4 0x70a08231
0x1420 ADDRESS
0x1421 DUP4
0x1422 PUSH1 0x40
0x1424 MLOAD
0x1425 PUSH1 0x20
0x1427 ADD
0x1428 MSTORE
0x1429 PUSH1 0x40
0x142b MLOAD
0x142c PUSH1 0xe0
0x142e PUSH1 0x2
0x1430 EXP
0x1431 PUSH4 0xffffffff
0x1436 DUP5
0x1437 AND
0x1438 MUL
0x1439 DUP2
0x143a MSTORE
0x143b PUSH1 0x1
0x143d PUSH1 0xa0
0x143f PUSH1 0x2
0x1441 EXP
0x1442 SUB
0x1443 SWAP1
0x1444 SWAP2
0x1445 AND
0x1446 PUSH1 0x4
0x1448 DUP3
0x1449 ADD
0x144a MSTORE
0x144b PUSH1 0x24
0x144d ADD
0x144e PUSH1 0x20
0x1450 PUSH1 0x40
0x1452 MLOAD
0x1453 DUP1
0x1454 DUP4
0x1455 SUB
0x1456 DUP2
0x1457 PUSH1 0x0
0x1459 DUP8
0x145a DUP1
0x145b EXTCODESIZE
0x145c ISZERO
0x145d ISZERO
0x145e PUSH2 0x10ff
0x1461 JUMPI
---
0x140b: JUMPDEST 
0x140c: V1852 = 0x1
0x140e: V1853 = S[0x1]
0x140f: V1854 = 0x0
0x1412: V1855 = 0x1
0x1414: V1856 = 0xa0
0x1416: V1857 = 0x2
0x1418: V1858 = EXP 0x2 0xa0
0x1419: V1859 = SUB 0x10000000000000000000000000000000000000000 0x1
0x141a: V1860 = AND 0xffffffffffffffffffffffffffffffffffffffff V1853
0x141b: V1861 = 0x70a08231
0x1420: V1862 = ADDRESS
0x1422: V1863 = 0x40
0x1424: V1864 = M[0x40]
0x1425: V1865 = 0x20
0x1427: V1866 = ADD 0x20 V1864
0x1428: M[V1866] = 0x0
0x1429: V1867 = 0x40
0x142b: V1868 = M[0x40]
0x142c: V1869 = 0xe0
0x142e: V1870 = 0x2
0x1430: V1871 = EXP 0x2 0xe0
0x1431: V1872 = 0xffffffff
0x1437: V1873 = AND 0x70a08231 0xffffffff
0x1438: V1874 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x143a: M[V1868] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x143b: V1875 = 0x1
0x143d: V1876 = 0xa0
0x143f: V1877 = 0x2
0x1441: V1878 = EXP 0x2 0xa0
0x1442: V1879 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1445: V1880 = AND V1862 0xffffffffffffffffffffffffffffffffffffffff
0x1446: V1881 = 0x4
0x1449: V1882 = ADD V1868 0x4
0x144a: M[V1882] = V1880
0x144b: V1883 = 0x24
0x144d: V1884 = ADD 0x24 V1868
0x144e: V1885 = 0x20
0x1450: V1886 = 0x40
0x1452: V1887 = M[0x40]
0x1455: V1888 = SUB V1884 V1887
0x1457: V1889 = 0x0
0x145b: V1890 = EXTCODESIZE V1860
0x145c: V1891 = ISZERO V1890
0x145d: V1892 = ISZERO V1891
0x145e: V1893 = 0x10ff
0x1461: JUMPI 0x10ff V1892
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, V1860, 0x70a08231, V1884, 0x20, V1887, V1888, V1887, 0x0, V1860]
Exit stack: [0x0, V1860, 0x70a08231, V1884, 0x20, V1887, V1888, V1887, 0x0, V1860]

================================

Block 0x1462
[0x1462:0x1472]
---
Predecessors: [0x140b]
Successors: [0x1110, 0x1473]
---
0x1462 PUSH1 0x0
0x1464 DUP1
0x1465 REVERT
0x1466 JUMPDEST
0x1467 PUSH2 0x2c6
0x146a GAS
0x146b SUB
0x146c CALL
0x146d ISZERO
0x146e ISZERO
0x146f PUSH2 0x1110
0x1472 JUMPI
---
0x1462: V1894 = 0x0
0x1465: REVERT 0x0 0x0
0x1466: JUMPDEST 
0x1467: V1895 = 0x2c6
0x146a: V1896 = GAS
0x146b: V1897 = SUB V1896 0x2c6
0x146c: V1898 = CALL V1897 S0 S1 S2 S3 S4 S5
0x146d: V1899 = ISZERO V1898
0x146e: V1900 = ISZERO V1899
0x146f: V1901 = 0x1110
0x1472: JUMPI 0x1110 V1900
---
Entry stack: [0x0, V1860, 0x70a08231, V1884, 0x20, V1887, V1888, V1887, 0x0, V1860]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1473
[0x1473:0x1482]
---
Predecessors: [0x1462]
Successors: [0x1483]
---
0x1473 PUSH1 0x0
0x1475 DUP1
0x1476 REVERT
0x1477 JUMPDEST
0x1478 POP
0x1479 POP
0x147a POP
0x147b PUSH1 0x40
0x147d MLOAD
0x147e DUP1
0x147f MLOAD
0x1480 SWAP2
0x1481 POP
0x1482 POP
---
0x1473: V1902 = 0x0
0x1476: REVERT 0x0 0x0
0x1477: JUMPDEST 
0x147b: V1903 = 0x40
0x147d: V1904 = M[0x40]
0x147f: V1905 = M[V1904]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1905]
Exit stack: []

================================

Block 0x1483
[0x1483:0x1485]
---
Predecessors: [0x1473]
Successors: []
Has unresolved jump.
---
0x1483 JUMPDEST
0x1484 SWAP1
0x1485 JUMP
---
0x1483: JUMPDEST 
0x1485: JUMP S1
---
Entry stack: [V1905]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V1905]

================================

Block 0x1486
[0x1486:0x1493]
---
Predecessors: [0xdd7, 0xe35, 0xe93, 0xef1]
Successors: [0x82c, 0x1494]
---
0x1486 JUMPDEST
0x1487 PUSH1 0x0
0x1489 DUP3
0x148a DUP3
0x148b ADD
0x148c DUP4
0x148d DUP2
0x148e LT
0x148f ISZERO
0x1490 PUSH2 0x82c
0x1493 JUMPI
---
0x1486: JUMPDEST 
0x1487: V1906 = 0x0
0x148b: V1907 = ADD {0x278d00, 0x794a00, 0xeff100, 0x1e13380} S1
0x148e: V1908 = LT V1907 S1
0x148f: V1909 = ISZERO V1908
0x1490: V1910 = 0x82c
0x1493: JUMPI 0x82c V1909
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548, {0xdec, 0xf07}, S1, {0x278d00, 0x794a00, 0xeff100, 0x1e13380}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1907]
Exit stack: [V12, 0x499, V539, V1181, V545, V548, {0xdec, 0xf07}, S1, {0x278d00, 0x794a00, 0xeff100, 0x1e13380}, 0x0, V1907]

================================

Block 0x1494
[0x1494:0x1494]
---
Predecessors: [0x1486]
Successors: []
---
0x1494 INVALID
---
0x1494: INVALID 
---
Entry stack: [V12, 0x499, V539, V1181, V545, V548, {0xdec, 0xf07}, S3, {0x278d00, 0x794a00, 0xeff100, 0x1e13380}, 0x0, V1907]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x499, V539, V1181, V545, V548, {0xdec, 0xf07}, S3, {0x278d00, 0x794a00, 0xeff100, 0x1e13380}, 0x0, V1907]

================================

Block 0x1495
[0x1495:0x1498]
---
Predecessors: []
Successors: [0x1499]
---
0x1495 JUMPDEST
0x1496 DUP1
0x1497 SWAP2
0x1498 POP
---
0x1495: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x1499
[0x1499:0x149f]
---
Predecessors: [0x1495]
Successors: []
Has unresolved jump.
---
0x1499 JUMPDEST
0x149a POP
0x149b SWAP3
0x149c SWAP2
0x149d POP
0x149e POP
0x149f JUMP
---
0x1499: JUMPDEST 
0x149f: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x14a0
[0x14a0:0x14d4]
---
Predecessors: [0x123]
Successors: [0x12b]
---
0x14a0 JUMPDEST
0x14a1 PUSH1 0xc0
0x14a3 PUSH1 0x40
0x14a5 MLOAD
0x14a6 SWAP1
0x14a7 DUP2
0x14a8 ADD
0x14a9 PUSH1 0x40
0x14ab SWAP1
0x14ac DUP2
0x14ad MSTORE
0x14ae PUSH1 0x0
0x14b0 DUP1
0x14b1 DUP4
0x14b2 MSTORE
0x14b3 PUSH1 0x20
0x14b5 DUP4
0x14b6 ADD
0x14b7 DUP2
0x14b8 SWAP1
0x14b9 MSTORE
0x14ba SWAP1
0x14bb DUP3
0x14bc ADD
0x14bd DUP2
0x14be SWAP1
0x14bf MSTORE
0x14c0 PUSH1 0x60
0x14c2 DUP3
0x14c3 ADD
0x14c4 DUP2
0x14c5 SWAP1
0x14c6 MSTORE
0x14c7 PUSH1 0x80
0x14c9 DUP3
0x14ca ADD
0x14cb DUP2
0x14cc SWAP1
0x14cd MSTORE
0x14ce PUSH1 0xa0
0x14d0 DUP3
0x14d1 ADD
0x14d2 MSTORE
0x14d3 SWAP1
0x14d4 JUMP
---
0x14a0: JUMPDEST 
0x14a1: V1911 = 0xc0
0x14a3: V1912 = 0x40
0x14a5: V1913 = M[0x40]
0x14a8: V1914 = ADD V1913 0xc0
0x14a9: V1915 = 0x40
0x14ad: M[0x40] = V1914
0x14ae: V1916 = 0x0
0x14b2: M[V1913] = 0x0
0x14b3: V1917 = 0x20
0x14b6: V1918 = ADD V1913 0x20
0x14b9: M[V1918] = 0x0
0x14bc: V1919 = ADD V1913 0x40
0x14bf: M[V1919] = 0x0
0x14c0: V1920 = 0x60
0x14c3: V1921 = ADD V1913 0x60
0x14c6: M[V1921] = 0x0
0x14c7: V1922 = 0x80
0x14ca: V1923 = ADD V1913 0x80
0x14cd: M[V1923] = 0x0
0x14ce: V1924 = 0xa0
0x14d1: V1925 = ADD V1913 0xa0
0x14d2: M[V1925] = 0x0
0x14d4: JUMP 0x12b
---
Entry stack: [V12, 0x12b]
Stack pops: 1
Stack additions: [V1913]
Exit stack: [V12, V1913]

================================

Block 0x14d5
[0x14d5:0x1500]
---
Predecessors: []
Successors: []
---
0x14d5 STOP
0x14d6 LOG1
0x14d7 PUSH6 0x627a7a723058
0x14de SHA3
0x14df COINBASE
0x14e0 MISSING 0xea
0x14e1 MISSING 0x47
0x14e2 MISSING 0xc1
0x14e3 PUSH25 0x8c1da941cf3b57f4914ca772367b1f66dae72ae32bcf9dc6e9
0x14fd MISSING 0xe1
0x14fe MISSING 0x47
0x14ff STOP
0x1500 MISSING 0x29
---
0x14d5: STOP 
0x14d6: LOG S0 S1 S2
0x14d7: V1926 = 0x627a7a723058
0x14de: V1927 = SHA3 0x627a7a723058 S3
0x14df: V1928 = COINBASE
0x14e0: MISSING 0xea
0x14e1: MISSING 0x47
0x14e2: MISSING 0xc1
0x14e3: V1929 = 0x8c1da941cf3b57f4914ca772367b1f66dae72ae32bcf9dc6e9
0x14fd: MISSING 0xe1
0x14fe: MISSING 0x47
0x14ff: STOP 
0x1500: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1928, V1927, 0x8c1da941cf3b57f4914ca772367b1f66dae72ae32bcf9dc6e9]
Exit stack: []

================================

Function 0:
Public function signature: 0x4c98b2b
Entry block: 0x486
Exit block: 0x499
Body: 0x486, 0x48d, 0x491, 0x499, 0x837, 0x84e, 0x852, 0x855, 0x86c, 0x86d, 0x873, 0x877, 0x89e, 0x8d7, 0x8d8

Function 1:
Public function signature: 0x22a92c45
Entry block: 0x49b
Exit block: 0x499
Body: 0x499, 0x49b, 0x4a2, 0x4a6, 0x8d7, 0x8d8, 0x8da, 0x8f1, 0x8f5, 0x8f8, 0x90f, 0x910, 0x916, 0x91a, 0x925, 0x92c, 0x930, 0x995, 0x999, 0x9a6, 0x9aa, 0x9ba, 0xa1a, 0xa1b, 0xa1c

Function 2:
Public function signature: 0x26a21575
Entry block: 0x4b0
Exit block: 0x4c3
Body: 0x4b0, 0x4b7, 0x4bb, 0x4c3, 0xa1e

Function 3:
Public function signature: 0x29dacb60
Entry block: 0x4d5
Exit block: 0x4c3
Body: 0x4c3, 0x4d5, 0x4dc, 0x4e0, 0xa24, 0xa28

Function 4:
Public function signature: 0x372c12b1
Entry block: 0x4fa
Exit block: 0x519
Body: 0x4fa, 0x501, 0x505, 0x519, 0xa2b

Function 5:
Public function signature: 0x3784f000
Entry block: 0x55c
Exit block: 0x499
Body: 0x499, 0x55c, 0x563, 0x567, 0xa6a, 0xa82, 0xa86, 0xa89, 0xaa0, 0xaa1, 0xaa8, 0xaab, 0xac2, 0xac3, 0xac5, 0xacc, 0xad0, 0xad8, 0xadc, 0xb20, 0xb21

Function 6:
Public function signature: 0x3f4ba83a
Entry block: 0x574
Exit block: 0x499
Body: 0x499, 0x574, 0x57b, 0x57f, 0xb25, 0xb3c, 0xb40, 0xb54, 0xb58, 0xba3, 0xba4, 0xba5

Function 7:
Public function signature: 0x55d4956f
Entry block: 0x589
Exit block: 0x499
Body: 0x499, 0x589, 0x590, 0x594, 0xba7, 0xbbf, 0xbc3, 0xbc6, 0xbdd, 0xbde, 0xbe4, 0xbe8, 0xbf0, 0xbf4, 0xc38, 0xc39

Function 8:
Public function signature: 0x5c975abb
Entry block: 0x5a1
Exit block: 0x5b4
Body: 0x5a1, 0x5a8, 0x5ac, 0x5b4, 0xc3d

Function 9:
Public function signature: 0x6a4967d6
Entry block: 0x5c8
Exit block: 0x499
Body: 0x499, 0x5c8, 0x5cf, 0x5d3, 0xc4d, 0xc64, 0xc68, 0xc6b, 0xc82, 0xc83, 0xc8a, 0xc8d, 0xca4, 0xca5, 0xca7, 0xcae, 0xcb2, 0xcbf, 0xcc7, 0xccd, 0xcd5, 0xcdb, 0xce3, 0xcea, 0xcee, 0xd1e, 0xd85, 0xdd7, 0xdec, 0xe0d, 0xe35, 0xe6b, 0xe93, 0xec9, 0xef1, 0xf07, 0xf24, 0xf25, 0xf26, 0xf27, 0xfb5, 0xfb6

Function 10:
Public function signature: 0x76f187ab
Entry block: 0x5f8
Exit block: 0x5b4
Body: 0x5b4, 0x5f8, 0x5ff, 0x603, 0xfbc

Function 11:
Public function signature: 0x7d851c70
Entry block: 0x61f
Exit block: 0x499
Body: 0x499, 0x61f, 0x626, 0x62a, 0xfc5, 0xfdd, 0xfe1, 0xfe4, 0xffb, 0xffc, 0x1002, 0x1006, 0x1016, 0x101a, 0x1022, 0x1080, 0x1084, 0x1091, 0x1095, 0x10a0, 0x10a1

Function 12:
Public function signature: 0x82b2e257
Entry block: 0x634
Exit block: 0x4c3
Body: 0x4c3, 0x634, 0x63b, 0x63f

Function 13:
Public function signature: 0x8456cb59
Entry block: 0x659
Exit block: 0x499
Body: 0x499, 0x659, 0x660, 0x664, 0x111f, 0x1136, 0x113a, 0x114d, 0x1151, 0x11a2, 0x11a3, 0x11a4

Function 14:
Public function signature: 0x8da5cb5b
Entry block: 0x66e
Exit block: 0x681
Body: 0x66e, 0x675, 0x679, 0x681, 0x11a6

Function 15:
Public function signature: 0x8f36039c
Entry block: 0x69d
Exit block: 0x681
Body: 0x681, 0x69d, 0x6a4, 0x6a8, 0x11b5

Function 16:
Public function signature: 0xa0ef91df
Entry block: 0x6cc
Exit block: 0x499
Body: 0x499, 0x6cc, 0x6d3, 0x6d7, 0x11c4, 0x11d8, 0x11dc, 0x11df, 0x11f6, 0x11f7, 0x11fd, 0x1201, 0x1218, 0x121c, 0x122c, 0x1230, 0x1265, 0x1269, 0x129d

Function 17:
Public function signature: 0xa43be57b
Entry block: 0x6e1
Exit block: 0x499
Body: 0x499, 0x6e1, 0x6e8, 0x6ec, 0x12a0, 0x12b7, 0x12bb, 0x12be, 0x12d5, 0x12d6, 0x12dc, 0x12e0, 0x1305, 0x133e, 0x133f

Function 18:
Public function signature: 0xc19d93fb
Entry block: 0x6f6
Exit block: 0x718
Body: 0x6f6, 0x6fd, 0x701, 0x709, 0x718, 0x719, 0x1341

Function 19:
Public function signature: 0xc24a0f8b
Entry block: 0x72d
Exit block: 0x4c3
Body: 0x4c3, 0x72d, 0x734, 0x738, 0x1351

Function 20:
Public function signature: 0xd7d88043
Entry block: 0x752
Exit block: 0x4c3
Body: 0x4c3, 0x752, 0x759, 0x75d, 0x1357

Function 21:
Public function signature: 0xf2fde38b
Entry block: 0x777
Exit block: 0x499
Body: 0x499, 0x777, 0x77e, 0x782, 0x135d, 0x1374, 0x1378, 0x1389, 0x138d, 0x13f2, 0x13f3

Function 22:
Public function signature: 0xfc0c546a
Entry block: 0x798
Exit block: 0x681
Body: 0x681, 0x798, 0x79f, 0x7a3, 0x13f6

Function 23:
Public function signature: 0xfddf0fc0
Entry block: 0x7c7
Exit block: 0x4c3
Body: 0x4c3, 0x7c7, 0x7ce, 0x7d2, 0x1405

Function 24:
Public fallback function
Entry block: 0x122
Exit block: 0x3d0
Body: 0x122, 0x123, 0x12b, 0x13f, 0x143, 0x146, 0x15d, 0x15e, 0x164, 0x168, 0x179, 0x17d, 0x1a0, 0x1a4, 0x1af, 0x1d3, 0x206, 0x20a, 0x20f, 0x28f, 0x295, 0x29c, 0x2a0, 0x2cb, 0x2f3, 0x3d0, 0x481, 0x482, 0x14a0

Function 25:
Private function
Entry block: 0x10a4
Exit block: 0x111c
Body: 0x10a4, 0x10ff, 0x1110, 0x111c

Function 26:
Private function
Entry block: 0x1486
Exit block: 0x830
Body: 0x311, 0x330, 0x7ec, 0x7fa, 0x801, 0x808, 0x815, 0x821, 0x824, 0x82c, 0x830, 0x1486

