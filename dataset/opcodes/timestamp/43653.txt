Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x10c]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x34289460
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x10c
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x34289460
0x3b: V13 = EQ V11 0x34289460
0x3c: V14 = 0x10c
0x3f: JUMPI 0x10c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x12b]
---
0x40 DUP1
0x41 PUSH4 0x3cecd719
0x46 EQ
0x47 PUSH2 0x12b
0x4a JUMPI
---
0x41: V15 = 0x3cecd719
0x46: V16 = EQ 0x3cecd719 V11
0x47: V17 = 0x12b
0x4a: JUMPI 0x12b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x13e]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0x13e
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0x13e
0x55: JUMPI 0x13e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x16d]
---
0x56 DUP1
0x57 PUSH4 0xb793233b
0x5c EQ
0x5d PUSH2 0x16d
0x60 JUMPI
---
0x57: V21 = 0xb793233b
0x5c: V22 = EQ 0xb793233b V11
0x5d: V23 = 0x16d
0x60: JUMPI 0x16d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x192]
---
0x61 DUP1
0x62 PUSH4 0xf2fde38b
0x67 EQ
0x68 PUSH2 0x192
0x6b JUMPI
---
0x62: V24 = 0xf2fde38b
0x67: V25 = EQ 0xf2fde38b V11
0x68: V26 = 0x192
0x6b: JUMPI 0x192 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x75]
---
Predecessors: [0x0, 0x61]
Successors: [0x76, 0x7a]
---
0x6c JUMPDEST
0x6d PUSH1 0x1
0x6f SLOAD
0x70 TIMESTAMP
0x71 LT
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6c: JUMPDEST 
0x6d: V27 = 0x1
0x6f: V28 = S[0x1]
0x70: V29 = TIMESTAMP
0x71: V30 = LT V29 V28
0x72: V31 = 0x7a
0x75: JUMPI 0x7a V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6c]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V32 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x8a]
---
Predecessors: [0x6c]
Successors: [0x8b, 0x8f]
---
0x7a JUMPDEST
0x7b PUSH8 0x16345785d8a0000
0x84 CALLVALUE
0x85 LT
0x86 ISZERO
0x87 PUSH2 0x8f
0x8a JUMPI
---
0x7a: JUMPDEST 
0x7b: V33 = 0x16345785d8a0000
0x84: V34 = CALLVALUE
0x85: V35 = LT V34 0x16345785d8a0000
0x86: V36 = ISZERO V35
0x87: V37 = 0x8f
0x8a: JUMPI 0x8f V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x7a]
Successors: []
---
0x8b PUSH1 0x0
0x8d DUP1
0x8e REVERT
---
0x8b: V38 = 0x0
0x8e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f
[0x8f:0x105]
---
Predecessors: [0x7a]
Successors: [0x106, 0x10a]
---
0x8f JUMPDEST
0x90 ADDRESS
0x91 PUSH1 0x1
0x93 PUSH1 0xa0
0x95 PUSH1 0x2
0x97 EXP
0x98 SUB
0x99 AND
0x9a CALLER
0x9b PUSH1 0x1
0x9d PUSH1 0xa0
0x9f PUSH1 0x2
0xa1 EXP
0xa2 SUB
0xa3 AND
0xa4 PUSH32 0x22e3ae3a20c49dce14046235895c7a3ffc0a6a5f3577c370177ad45fa619485d
0xc5 CALLVALUE
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 SWAP1
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 SWAP2
0xd4 SUB
0xd5 SWAP1
0xd6 LOG3
0xd7 PUSH1 0x0
0xd9 SLOAD
0xda PUSH1 0x1
0xdc PUSH1 0xa0
0xde PUSH1 0x2
0xe0 EXP
0xe1 SUB
0xe2 AND
0xe3 CALLVALUE
0xe4 DUP1
0xe5 ISZERO
0xe6 PUSH2 0x8fc
0xe9 MUL
0xea SWAP1
0xeb PUSH1 0x40
0xed MLOAD
0xee PUSH1 0x0
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 DUP1
0xf4 DUP4
0xf5 SUB
0xf6 DUP2
0xf7 DUP6
0xf8 DUP9
0xf9 DUP9
0xfa CALL
0xfb SWAP4
0xfc POP
0xfd POP
0xfe POP
0xff POP
0x100 ISZERO
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0x8f: JUMPDEST 
0x90: V39 = ADDRESS
0x91: V40 = 0x1
0x93: V41 = 0xa0
0x95: V42 = 0x2
0x97: V43 = EXP 0x2 0xa0
0x98: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x9a: V46 = CALLER
0x9b: V47 = 0x1
0x9d: V48 = 0xa0
0x9f: V49 = 0x2
0xa1: V50 = EXP 0x2 0xa0
0xa2: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xa4: V53 = 0x22e3ae3a20c49dce14046235895c7a3ffc0a6a5f3577c370177ad45fa619485d
0xc5: V54 = CALLVALUE
0xc6: V55 = 0x40
0xc8: V56 = M[0x40]
0xcb: M[V56] = V54
0xcc: V57 = 0x20
0xce: V58 = ADD 0x20 V56
0xcf: V59 = 0x40
0xd1: V60 = M[0x40]
0xd4: V61 = SUB V58 V60
0xd6: LOG V60 V61 0x22e3ae3a20c49dce14046235895c7a3ffc0a6a5f3577c370177ad45fa619485d V52 V45
0xd7: V62 = 0x0
0xd9: V63 = S[0x0]
0xda: V64 = 0x1
0xdc: V65 = 0xa0
0xde: V66 = 0x2
0xe0: V67 = EXP 0x2 0xa0
0xe1: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xe3: V70 = CALLVALUE
0xe5: V71 = ISZERO V70
0xe6: V72 = 0x8fc
0xe9: V73 = MUL 0x8fc V71
0xeb: V74 = 0x40
0xed: V75 = M[0x40]
0xee: V76 = 0x0
0xf0: V77 = 0x40
0xf2: V78 = M[0x40]
0xf5: V79 = SUB V75 V78
0xfa: V80 = CALL V73 V69 V70 V78 V79 V78 0x0
0x100: V81 = ISZERO V80
0x101: V82 = ISZERO V81
0x102: V83 = 0x10a
0x105: JUMPI 0x10a V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0x8f]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V84 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10a
[0x10a:0x10b]
---
Predecessors: [0x8f, 0x262]
Successors: []
---
0x10a JUMPDEST
0x10b STOP
---
0x10a: JUMPDEST 
0x10b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10c
[0x10c:0x112]
---
Predecessors: [0xd]
Successors: [0x113, 0x117]
---
0x10c JUMPDEST
0x10d CALLVALUE
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x10c: JUMPDEST 
0x10d: V85 = CALLVALUE
0x10e: V86 = ISZERO V85
0x10f: V87 = 0x117
0x112: JUMPI 0x117 V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x10c]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V88 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x117
[0x117:0x12a]
---
Predecessors: [0x10c]
Successors: [0x1b1]
---
0x117 JUMPDEST
0x118 PUSH2 0x10a
0x11b PUSH1 0x1
0x11d PUSH1 0xa0
0x11f PUSH1 0x2
0x121 EXP
0x122 SUB
0x123 PUSH1 0x4
0x125 CALLDATALOAD
0x126 AND
0x127 PUSH2 0x1b1
0x12a JUMP
---
0x117: JUMPDEST 
0x118: V89 = 0x10a
0x11b: V90 = 0x1
0x11d: V91 = 0xa0
0x11f: V92 = 0x2
0x121: V93 = EXP 0x2 0xa0
0x122: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x123: V95 = 0x4
0x125: V96 = CALLDATALOAD 0x4
0x126: V97 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x127: V98 = 0x1b1
0x12a: JUMP 0x1b1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10a, V97]
Exit stack: [V11, 0x10a, V97]

================================

Block 0x12b
[0x12b:0x131]
---
Predecessors: [0x40]
Successors: [0x132, 0x136]
---
0x12b JUMPDEST
0x12c CALLVALUE
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x12b: JUMPDEST 
0x12c: V99 = CALLVALUE
0x12d: V100 = ISZERO V99
0x12e: V101 = 0x136
0x131: JUMPI 0x136 V100
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x12b]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V102 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x136
[0x136:0x13d]
---
Predecessors: [0x12b]
Successors: [0x1e6]
---
0x136 JUMPDEST
0x137 PUSH2 0x10a
0x13a PUSH2 0x1e6
0x13d JUMP
---
0x136: JUMPDEST 
0x137: V103 = 0x10a
0x13a: V104 = 0x1e6
0x13d: JUMP 0x1e6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V11, 0x10a]

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x4b]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V105 = CALLVALUE
0x140: V106 = ISZERO V105
0x141: V107 = 0x149
0x144: JUMPI 0x149 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V108 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x149
[0x149:0x150]
---
Predecessors: [0x13e]
Successors: [0x21d]
---
0x149 JUMPDEST
0x14a PUSH2 0x151
0x14d PUSH2 0x21d
0x150 JUMP
---
0x149: JUMPDEST 
0x14a: V109 = 0x151
0x14d: V110 = 0x21d
0x150: JUMP 0x21d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V11, 0x151]

================================

Block 0x151
[0x151:0x16c]
---
Predecessors: [0x21d]
Successors: []
---
0x151 JUMPDEST
0x152 PUSH1 0x40
0x154 MLOAD
0x155 PUSH1 0x1
0x157 PUSH1 0xa0
0x159 PUSH1 0x2
0x15b EXP
0x15c SUB
0x15d SWAP1
0x15e SWAP2
0x15f AND
0x160 DUP2
0x161 MSTORE
0x162 PUSH1 0x20
0x164 ADD
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 SWAP2
0x16a SUB
0x16b SWAP1
0x16c RETURN
---
0x151: JUMPDEST 
0x152: V111 = 0x40
0x154: V112 = M[0x40]
0x155: V113 = 0x1
0x157: V114 = 0xa0
0x159: V115 = 0x2
0x15b: V116 = EXP 0x2 0xa0
0x15c: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V118 = AND V210 0xffffffffffffffffffffffffffffffffffffffff
0x161: M[V112] = V118
0x162: V119 = 0x20
0x164: V120 = ADD 0x20 V112
0x165: V121 = 0x40
0x167: V122 = M[0x40]
0x16a: V123 = SUB V120 V122
0x16c: RETURN V122 V123
---
Entry stack: [V11, 0x151, V210]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x151]

================================

Block 0x16d
[0x16d:0x173]
---
Predecessors: [0x56]
Successors: [0x174, 0x178]
---
0x16d JUMPDEST
0x16e CALLVALUE
0x16f ISZERO
0x170 PUSH2 0x178
0x173 JUMPI
---
0x16d: JUMPDEST 
0x16e: V124 = CALLVALUE
0x16f: V125 = ISZERO V124
0x170: V126 = 0x178
0x173: JUMPI 0x178 V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x174
[0x174:0x177]
---
Predecessors: [0x16d]
Successors: []
---
0x174 PUSH1 0x0
0x176 DUP1
0x177 REVERT
---
0x174: V127 = 0x0
0x177: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x16d]
Successors: [0x22c]
---
0x178 JUMPDEST
0x179 PUSH2 0x180
0x17c PUSH2 0x22c
0x17f JUMP
---
0x178: JUMPDEST 
0x179: V128 = 0x180
0x17c: V129 = 0x22c
0x17f: JUMP 0x22c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x180]
Exit stack: [V11, 0x180]

================================

Block 0x180
[0x180:0x191]
---
Predecessors: [0x22c]
Successors: []
---
0x180 JUMPDEST
0x181 PUSH1 0x40
0x183 MLOAD
0x184 SWAP1
0x185 DUP2
0x186 MSTORE
0x187 PUSH1 0x20
0x189 ADD
0x18a PUSH1 0x40
0x18c MLOAD
0x18d DUP1
0x18e SWAP2
0x18f SUB
0x190 SWAP1
0x191 RETURN
---
0x180: JUMPDEST 
0x181: V130 = 0x40
0x183: V131 = M[0x40]
0x186: M[V131] = V212
0x187: V132 = 0x20
0x189: V133 = ADD 0x20 V131
0x18a: V134 = 0x40
0x18c: V135 = M[0x40]
0x18f: V136 = SUB V133 V135
0x191: RETURN V135 V136
---
Entry stack: [V11, 0x180, V212]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x180]

================================

Block 0x192
[0x192:0x198]
---
Predecessors: [0x61]
Successors: [0x199, 0x19d]
---
0x192 JUMPDEST
0x193 CALLVALUE
0x194 ISZERO
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x192: JUMPDEST 
0x193: V137 = CALLVALUE
0x194: V138 = ISZERO V137
0x195: V139 = 0x19d
0x198: JUMPI 0x19d V138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x192]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V140 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19d
[0x19d:0x1b0]
---
Predecessors: [0x192]
Successors: [0x232]
---
0x19d JUMPDEST
0x19e PUSH2 0x10a
0x1a1 PUSH1 0x1
0x1a3 PUSH1 0xa0
0x1a5 PUSH1 0x2
0x1a7 EXP
0x1a8 SUB
0x1a9 PUSH1 0x4
0x1ab CALLDATALOAD
0x1ac AND
0x1ad PUSH2 0x232
0x1b0 JUMP
---
0x19d: JUMPDEST 
0x19e: V141 = 0x10a
0x1a1: V142 = 0x1
0x1a3: V143 = 0xa0
0x1a5: V144 = 0x2
0x1a7: V145 = EXP 0x2 0xa0
0x1a8: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a9: V147 = 0x4
0x1ab: V148 = CALLDATALOAD 0x4
0x1ac: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V150 = 0x232
0x1b0: JUMP 0x232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10a, V149]
Exit stack: [V11, 0x10a, V149]

================================

Block 0x1b1
[0x1b1:0x1c7]
---
Predecessors: [0x117]
Successors: [0x1c8, 0x1cc]
---
0x1b1 JUMPDEST
0x1b2 PUSH1 0x0
0x1b4 SLOAD
0x1b5 CALLER
0x1b6 PUSH1 0x1
0x1b8 PUSH1 0xa0
0x1ba PUSH1 0x2
0x1bc EXP
0x1bd SUB
0x1be SWAP1
0x1bf DUP2
0x1c0 AND
0x1c1 SWAP2
0x1c2 AND
0x1c3 EQ
0x1c4 PUSH2 0x1cc
0x1c7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V151 = 0x0
0x1b4: V152 = S[0x0]
0x1b5: V153 = CALLER
0x1b6: V154 = 0x1
0x1b8: V155 = 0xa0
0x1ba: V156 = 0x2
0x1bc: V157 = EXP 0x2 0xa0
0x1bd: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c0: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x1c2: V160 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V161 = EQ V160 V159
0x1c4: V162 = 0x1cc
0x1c7: JUMPI 0x1cc V161
---
Entry stack: [V11, 0x10a, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, V97]

================================

Block 0x1c8
[0x1c8:0x1cb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1c8 PUSH1 0x0
0x1ca DUP1
0x1cb REVERT
---
0x1c8: V163 = 0x0
0x1cb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10a, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, V97]

================================

Block 0x1cc
[0x1cc:0x1d5]
---
Predecessors: [0x1b1]
Successors: [0x1d6, 0x1da]
---
0x1cc JUMPDEST
0x1cd PUSH1 0x1
0x1cf SLOAD
0x1d0 TIMESTAMP
0x1d1 GT
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V164 = 0x1
0x1cf: V165 = S[0x1]
0x1d0: V166 = TIMESTAMP
0x1d1: V167 = GT V166 V165
0x1d2: V168 = 0x1da
0x1d5: JUMPI 0x1da V167
---
Entry stack: [V11, 0x10a, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, V97]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1cc]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V169 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10a, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, V97]

================================

Block 0x1da
[0x1da:0x1e5]
---
Predecessors: [0x1cc]
Successors: []
---
0x1da JUMPDEST
0x1db DUP1
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 AND
0x1e5 SELFDESTRUCT
---
0x1da: JUMPDEST 
0x1dc: V170 = 0x1
0x1de: V171 = 0xa0
0x1e0: V172 = 0x2
0x1e2: V173 = EXP 0x2 0xa0
0x1e3: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1e5: SELFDESTRUCT V175
---
Entry stack: [V11, 0x10a, V97]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10a, V97]

================================

Block 0x1e6
[0x1e6:0x1fc]
---
Predecessors: [0x136]
Successors: [0x1fd, 0x201]
---
0x1e6 JUMPDEST
0x1e7 PUSH1 0x0
0x1e9 SLOAD
0x1ea CALLER
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 SWAP1
0x1f4 DUP2
0x1f5 AND
0x1f6 SWAP2
0x1f7 AND
0x1f8 EQ
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V176 = 0x0
0x1e9: V177 = S[0x0]
0x1ea: V178 = CALLER
0x1eb: V179 = 0x1
0x1ed: V180 = 0xa0
0x1ef: V181 = 0x2
0x1f1: V182 = EXP 0x2 0xa0
0x1f2: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x1f7: V185 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V186 = EQ V185 V184
0x1f9: V187 = 0x201
0x1fc: JUMPI 0x201 V186
---
Entry stack: [V11, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x1e6]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V188 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a]

================================

Block 0x201
[0x201:0x20a]
---
Predecessors: [0x1e6]
Successors: [0x20b, 0x20f]
---
0x201 JUMPDEST
0x202 PUSH1 0x1
0x204 SLOAD
0x205 TIMESTAMP
0x206 GT
0x207 PUSH2 0x20f
0x20a JUMPI
---
0x201: JUMPDEST 
0x202: V189 = 0x1
0x204: V190 = S[0x1]
0x205: V191 = TIMESTAMP
0x206: V192 = GT V191 V190
0x207: V193 = 0x20f
0x20a: JUMPI 0x20f V192
---
Entry stack: [V11, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a]

================================

Block 0x20b
[0x20b:0x20e]
---
Predecessors: [0x201]
Successors: []
---
0x20b PUSH1 0x0
0x20d DUP1
0x20e REVERT
---
0x20b: V194 = 0x0
0x20e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a]

================================

Block 0x20f
[0x20f:0x21c]
---
Predecessors: [0x201]
Successors: []
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 SLOAD
0x213 PUSH1 0x1
0x215 PUSH1 0xa0
0x217 PUSH1 0x2
0x219 EXP
0x21a SUB
0x21b AND
0x21c SELFDESTRUCT
---
0x20f: JUMPDEST 
0x210: V195 = 0x0
0x212: V196 = S[0x0]
0x213: V197 = 0x1
0x215: V198 = 0xa0
0x217: V199 = 0x2
0x219: V200 = EXP 0x2 0xa0
0x21a: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21b: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x21c: SELFDESTRUCT V202
---
Entry stack: [V11, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a]

================================

Block 0x21d
[0x21d:0x22b]
---
Predecessors: [0x149]
Successors: [0x151]
---
0x21d JUMPDEST
0x21e PUSH1 0x0
0x220 SLOAD
0x221 PUSH1 0x1
0x223 PUSH1 0xa0
0x225 PUSH1 0x2
0x227 EXP
0x228 SUB
0x229 AND
0x22a DUP2
0x22b JUMP
---
0x21d: JUMPDEST 
0x21e: V203 = 0x0
0x220: V204 = S[0x0]
0x221: V205 = 0x1
0x223: V206 = 0xa0
0x225: V207 = 0x2
0x227: V208 = EXP 0x2 0xa0
0x228: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x22b: JUMP 0x151
---
Entry stack: [V11, 0x151]
Stack pops: 1
Stack additions: [S0, V210]
Exit stack: [V11, 0x151, V210]

================================

Block 0x22c
[0x22c:0x231]
---
Predecessors: [0x178]
Successors: [0x180]
---
0x22c JUMPDEST
0x22d PUSH1 0x1
0x22f SLOAD
0x230 DUP2
0x231 JUMP
---
0x22c: JUMPDEST 
0x22d: V211 = 0x1
0x22f: V212 = S[0x1]
0x231: JUMP 0x180
---
Entry stack: [V11, 0x180]
Stack pops: 1
Stack additions: [S0, V212]
Exit stack: [V11, 0x180, V212]

================================

Block 0x232
[0x232:0x248]
---
Predecessors: [0x19d]
Successors: [0x249, 0x24d]
---
0x232 JUMPDEST
0x233 PUSH1 0x0
0x235 SLOAD
0x236 CALLER
0x237 PUSH1 0x1
0x239 PUSH1 0xa0
0x23b PUSH1 0x2
0x23d EXP
0x23e SUB
0x23f SWAP1
0x240 DUP2
0x241 AND
0x242 SWAP2
0x243 AND
0x244 EQ
0x245 PUSH2 0x24d
0x248 JUMPI
---
0x232: JUMPDEST 
0x233: V213 = 0x0
0x235: V214 = S[0x0]
0x236: V215 = CALLER
0x237: V216 = 0x1
0x239: V217 = 0xa0
0x23b: V218 = 0x2
0x23d: V219 = EXP 0x2 0xa0
0x23e: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x241: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x243: V222 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x244: V223 = EQ V222 V221
0x245: V224 = 0x24d
0x248: JUMPI 0x24d V223
---
Entry stack: [V11, 0x10a, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, V149]

================================

Block 0x249
[0x249:0x24c]
---
Predecessors: [0x232]
Successors: []
---
0x249 PUSH1 0x0
0x24b DUP1
0x24c REVERT
---
0x249: V225 = 0x0
0x24c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10a, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, V149]

================================

Block 0x24d
[0x24d:0x25d]
---
Predecessors: [0x232]
Successors: [0x25e, 0x262]
---
0x24d JUMPDEST
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 DUP2
0x257 AND
0x258 ISZERO
0x259 ISZERO
0x25a PUSH2 0x262
0x25d JUMPI
---
0x24d: JUMPDEST 
0x24e: V226 = 0x1
0x250: V227 = 0xa0
0x252: V228 = 0x2
0x254: V229 = EXP 0x2 0xa0
0x255: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V231 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x258: V232 = ISZERO V231
0x259: V233 = ISZERO V232
0x25a: V234 = 0x262
0x25d: JUMPI 0x262 V233
---
Entry stack: [V11, 0x10a, V149]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10a, V149]

================================

Block 0x25e
[0x25e:0x261]
---
Predecessors: [0x24d]
Successors: []
---
0x25e PUSH1 0x0
0x260 DUP1
0x261 REVERT
---
0x25e: V235 = 0x0
0x261: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10a, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, V149]

================================

Block 0x262
[0x262:0x2cc]
---
Predecessors: [0x24d]
Successors: [0x10a]
---
0x262 JUMPDEST
0x263 PUSH1 0x0
0x265 SLOAD
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e DUP1
0x26f DUP4
0x270 AND
0x271 SWAP2
0x272 AND
0x273 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x294 PUSH1 0x40
0x296 MLOAD
0x297 PUSH1 0x40
0x299 MLOAD
0x29a DUP1
0x29b SWAP2
0x29c SUB
0x29d SWAP1
0x29e LOG3
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 SLOAD
0x2a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b8 NOT
0x2b9 AND
0x2ba PUSH1 0x1
0x2bc PUSH1 0xa0
0x2be PUSH1 0x2
0x2c0 EXP
0x2c1 SUB
0x2c2 SWAP3
0x2c3 SWAP1
0x2c4 SWAP3
0x2c5 AND
0x2c6 SWAP2
0x2c7 SWAP1
0x2c8 SWAP2
0x2c9 OR
0x2ca SWAP1
0x2cb SSTORE
0x2cc JUMP
---
0x262: JUMPDEST 
0x263: V236 = 0x0
0x265: V237 = S[0x0]
0x266: V238 = 0x1
0x268: V239 = 0xa0
0x26a: V240 = 0x2
0x26c: V241 = EXP 0x2 0xa0
0x26d: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V243 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x272: V244 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x273: V245 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x294: V246 = 0x40
0x296: V247 = M[0x40]
0x297: V248 = 0x40
0x299: V249 = M[0x40]
0x29c: V250 = SUB V247 V249
0x29e: LOG V249 V250 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V244 V243
0x29f: V251 = 0x0
0x2a2: V252 = S[0x0]
0x2a3: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: V254 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V255 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V252
0x2ba: V256 = 0x1
0x2bc: V257 = 0xa0
0x2be: V258 = 0x2
0x2c0: V259 = EXP 0x2 0xa0
0x2c1: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c5: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2c9: V262 = OR V261 V255
0x2cb: S[0x0] = V262
0x2cc: JUMP 0x10a
---
Entry stack: [V11, 0x10a, V149]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cd
[0x2cd:0x2f8]
---
Predecessors: []
Successors: []
---
0x2cd STOP
0x2ce LOG1
0x2cf PUSH6 0x627a7a723058
0x2d6 SHA3
0x2d7 MISSING 0xcf
0x2d8 MISSING 0xdc
0x2d9 CALL
0x2da MISSING 0xad
0x2db MISSING 0xbe
0x2dc MISSING 0xd
0x2dd MISSING 0xcc
0x2de DUP14
0x2df DIV
0x2e0 MISSING 0x23
0x2e1 DUP2
0x2e2 BLOCKHASH
0x2e3 COINBASE
0x2e4 CREATE2
0x2e5 MISSING 0xed
0x2e6 DELEGATECALL
0x2e7 MISSING 0xc6
0x2e8 MISSING 0xb5
0x2e9 MISSING 0xde
0x2ea MISSING 0xaf
0x2eb GT
0x2ec BYTE
0x2ed DUP8
0x2ee PUSH6 0x19e087f1dfd5
0x2f5 CALLDATALOAD
0x2f6 COINBASE
0x2f7 STOP
0x2f8 MISSING 0x29
---
0x2cd: STOP 
0x2ce: LOG S0 S1 S2
0x2cf: V263 = 0x627a7a723058
0x2d6: V264 = SHA3 0x627a7a723058 S3
0x2d7: MISSING 0xcf
0x2d8: MISSING 0xdc
0x2d9: V265 = CALL S0 S1 S2 S3 S4 S5 S6
0x2da: MISSING 0xad
0x2db: MISSING 0xbe
0x2dc: MISSING 0xd
0x2dd: MISSING 0xcc
0x2df: V266 = DIV S13 S0
0x2e0: MISSING 0x23
0x2e2: V267 = BLOCKHASH S1
0x2e3: V268 = COINBASE
0x2e4: V269 = CREATE2 V268 V267 S0 S1
0x2e5: MISSING 0xed
0x2e6: V270 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x2e7: MISSING 0xc6
0x2e8: MISSING 0xb5
0x2e9: MISSING 0xde
0x2ea: MISSING 0xaf
0x2eb: V271 = GT S0 S1
0x2ec: V272 = BYTE V271 S2
0x2ee: V273 = 0x19e087f1dfd5
0x2f5: V274 = CALLDATALOAD 0x19e087f1dfd5
0x2f6: V275 = COINBASE
0x2f7: STOP 
0x2f8: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V264, V265, V266, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V269, V270, V275, V274, S9, V272, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0x34289460
Entry block: 0x10c
Exit block: 0x1da
Body: 0x10c, 0x113, 0x117, 0x1b1, 0x1c8, 0x1cc, 0x1d6, 0x1da

Function 1:
Public function signature: 0x3cecd719
Entry block: 0x12b
Exit block: 0x20b
Body: 0x12b, 0x132, 0x136, 0x1e6, 0x1fd, 0x201, 0x20b, 0x20f

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x13e
Exit block: 0x151
Body: 0x13e, 0x145, 0x149, 0x151, 0x21d

Function 3:
Public function signature: 0xb793233b
Entry block: 0x16d
Exit block: 0x180
Body: 0x16d, 0x174, 0x178, 0x180, 0x22c

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x192
Exit block: 0x10a
Body: 0x10a, 0x192, 0x199, 0x19d, 0x232, 0x249, 0x24d, 0x25e, 0x262

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x106
Body: 0x6c, 0x76, 0x7a, 0x8b, 0x8f, 0x106, 0x10a

