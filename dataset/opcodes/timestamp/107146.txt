args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/8/107146.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x97]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x97
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x97
0xa: JUMPI 0x97 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x277]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1cb3b20
0x3a EQ
0x3b PUSH2 0x277
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1cb3b20
0x3a: V12 = EQ 0x1cb3b20 V10
0x3b: V13 = 0x277
0x3e: JUMPI 0x277 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x289]
---
0x3f DUP1
0x40 PUSH4 0x29dcb0cf
0x45 EQ
0x46 PUSH2 0x289
0x49 JUMPI
---
0x40: V14 = 0x29dcb0cf
0x45: V15 = EQ 0x29dcb0cf V10
0x46: V16 = 0x289
0x49: JUMPI 0x289 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x2af]
---
0x4a DUP1
0x4b PUSH4 0x38af3eed
0x50 EQ
0x51 PUSH2 0x2af
0x54 JUMPI
---
0x4b: V17 = 0x38af3eed
0x50: V18 = EQ 0x38af3eed V10
0x51: V19 = 0x2af
0x54: JUMPI 0x2af V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x301]
---
0x55 DUP1
0x56 PUSH4 0x6e66f6e9
0x5b EQ
0x5c PUSH2 0x301
0x5f JUMPI
---
0x56: V20 = 0x6e66f6e9
0x5b: V21 = EQ 0x6e66f6e9 V10
0x5c: V22 = 0x301
0x5f: JUMPI 0x301 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x353]
---
0x60 DUP1
0x61 PUSH4 0x70a08231
0x66 EQ
0x67 PUSH2 0x353
0x6a JUMPI
---
0x61: V23 = 0x70a08231
0x66: V24 = EQ 0x70a08231 V10
0x67: V25 = 0x353
0x6a: JUMPI 0x353 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x39d]
---
0x6b DUP1
0x6c PUSH4 0x7a3a0e84
0x71 EQ
0x72 PUSH2 0x39d
0x75 JUMPI
---
0x6c: V26 = 0x7a3a0e84
0x71: V27 = EQ 0x7a3a0e84 V10
0x72: V28 = 0x39d
0x75: JUMPI 0x39d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x3c3]
---
0x76 DUP1
0x77 PUSH4 0x7b3e5e7b
0x7c EQ
0x7d PUSH2 0x3c3
0x80 JUMPI
---
0x77: V29 = 0x7b3e5e7b
0x7c: V30 = EQ 0x7b3e5e7b V10
0x7d: V31 = 0x3c3
0x80: JUMPI 0x3c3 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x3e9]
---
0x81 DUP1
0x82 PUSH4 0xa035b1fe
0x87 EQ
0x88 PUSH2 0x3e9
0x8b JUMPI
---
0x82: V32 = 0xa035b1fe
0x87: V33 = EQ 0xa035b1fe V10
0x88: V34 = 0x3e9
0x8b: JUMPI 0x3e9 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x40f]
---
0x8c DUP1
0x8d PUSH4 0xfd6b7ef8
0x92 EQ
0x93 PUSH2 0x40f
0x96 JUMPI
---
0x8d: V35 = 0xfd6b7ef8
0x92: V36 = EQ 0xfd6b7ef8 V10
0x93: V37 = 0x40f
0x96: JUMPI 0x40f V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x0, 0x8c]
Successors: [0x9b]
---
0x97 JUMPDEST
0x98 PUSH2 0x275
---
0x97: JUMPDEST 
0x98: V38 = 0x275
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x275]
Exit stack: [V10, 0x275]

================================

Block 0x9b
[0x9b:0xb4]
---
Predecessors: [0x97]
Successors: [0xb5, 0xba]
---
0x9b JUMPDEST
0x9c PUSH1 0x0
0x9e PUSH1 0x7
0xa0 PUSH1 0x1
0xa2 SWAP1
0xa3 SLOAD
0xa4 SWAP1
0xa5 PUSH2 0x100
0xa8 EXP
0xa9 SWAP1
0xaa DIV
0xab PUSH1 0xff
0xad AND
0xae ISZERO
0xaf ISZERO
0xb0 ISZERO
0xb1 PUSH2 0xba
0xb4 JUMPI
---
0x9b: JUMPDEST 
0x9c: V39 = 0x0
0x9e: V40 = 0x7
0xa0: V41 = 0x1
0xa3: V42 = S[0x7]
0xa5: V43 = 0x100
0xa8: V44 = EXP 0x100 0x1
0xaa: V45 = DIV V42 0x100
0xab: V46 = 0xff
0xad: V47 = AND 0xff V45
0xae: V48 = ISZERO V47
0xaf: V49 = ISZERO V48
0xb0: V50 = ISZERO V49
0xb1: V51 = 0xba
0xb4: JUMPI 0xba V50
---
Entry stack: [V10, 0x275]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x275, 0x0]

================================

Block 0xb5
[0xb5:0xb9]
---
Predecessors: [0x9b]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 PUSH1 0x0
0xb9 REVERT
---
0xb5: V52 = 0x0
0xb7: V53 = 0x0
0xb9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x275, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x275, 0x0]

================================

Block 0xba
[0xba:0x164]
---
Predecessors: [0x9b]
Successors: [0x165, 0x166]
---
0xba JUMPDEST
0xbb CALLVALUE
0xbc SWAP1
0xbd POP
0xbe DUP1
0xbf PUSH1 0x6
0xc1 PUSH1 0x0
0xc3 CALLER
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 DUP2
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 SWAP1
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa ADD
0xfb PUSH1 0x0
0xfd SHA3
0xfe PUSH1 0x0
0x100 DUP3
0x101 DUP3
0x102 SLOAD
0x103 ADD
0x104 SWAP3
0x105 POP
0x106 POP
0x107 DUP2
0x108 SWAP1
0x109 SSTORE
0x10a POP
0x10b DUP1
0x10c PUSH1 0x2
0x10e PUSH1 0x0
0x110 DUP3
0x111 DUP3
0x112 SLOAD
0x113 ADD
0x114 SWAP3
0x115 POP
0x116 POP
0x117 DUP2
0x118 SWAP1
0x119 SSTORE
0x11a POP
0x11b PUSH1 0x5
0x11d PUSH1 0x0
0x11f SWAP1
0x120 SLOAD
0x121 SWAP1
0x122 PUSH2 0x100
0x125 EXP
0x126 SWAP1
0x127 DIV
0x128 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13d AND
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 PUSH4 0xa9059cbb
0x159 CALLER
0x15a PUSH1 0x4
0x15c SLOAD
0x15d DUP5
0x15e DUP2
0x15f ISZERO
0x160 ISZERO
0x161 PUSH2 0x166
0x164 JUMPI
---
0xba: JUMPDEST 
0xbb: V54 = CALLVALUE
0xbf: V55 = 0x6
0xc1: V56 = 0x0
0xc3: V57 = CALLER
0xc4: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xda: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xf1: M[0x0] = V61
0xf2: V62 = 0x20
0xf4: V63 = ADD 0x20 0x0
0xf7: M[0x20] = 0x6
0xf8: V64 = 0x20
0xfa: V65 = ADD 0x20 0x20
0xfb: V66 = 0x0
0xfd: V67 = SHA3 0x0 0x40
0xfe: V68 = 0x0
0x102: V69 = S[V67]
0x103: V70 = ADD V69 V54
0x109: S[V67] = V70
0x10c: V71 = 0x2
0x10e: V72 = 0x0
0x112: V73 = S[0x2]
0x113: V74 = ADD V73 V54
0x119: S[0x2] = V74
0x11b: V75 = 0x5
0x11d: V76 = 0x0
0x120: V77 = S[0x5]
0x122: V78 = 0x100
0x125: V79 = EXP 0x100 0x0
0x127: V80 = DIV V77 0x1
0x128: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x13d: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x13e: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x154: V85 = 0xa9059cbb
0x159: V86 = CALLER
0x15a: V87 = 0x4
0x15c: V88 = S[0x4]
0x15f: V89 = ISZERO V88
0x160: V90 = ISZERO V89
0x161: V91 = 0x166
0x164: JUMPI 0x166 V90
---
Entry stack: [V10, 0x275, 0x0]
Stack pops: 1
Stack additions: [V54, V84, 0xa9059cbb, V86, V88, V54]
Exit stack: [V10, 0x275, V54, V84, 0xa9059cbb, V86, V88, V54]

================================

Block 0x165
[0x165:0x165]
---
Predecessors: [0xba]
Successors: []
---
0x165 INVALID
---
0x165: INVALID 
---
Entry stack: [V10, 0x275, V54, V84, 0xa9059cbb, V86, V88, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x275, V54, V84, 0xa9059cbb, V86, V88, V54]

================================

Block 0x166
[0x166:0x1e6]
---
Predecessors: [0xba]
Successors: [0x1e7, 0x1e8]
---
0x166 JUMPDEST
0x167 DIV
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP4
0x16c PUSH4 0xffffffff
0x171 AND
0x172 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x190 MUL
0x191 DUP2
0x192 MSTORE
0x193 PUSH1 0x4
0x195 ADD
0x196 DUP1
0x197 DUP4
0x198 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ad AND
0x1ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c3 AND
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 DUP3
0x1ca DUP2
0x1cb MSTORE
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf SWAP3
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 PUSH1 0x0
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 DUP1
0x1d9 DUP4
0x1da SUB
0x1db DUP2
0x1dc PUSH1 0x0
0x1de DUP8
0x1df DUP1
0x1e0 EXTCODESIZE
0x1e1 ISZERO
0x1e2 ISZERO
0x1e3 PUSH2 0x1e8
0x1e6 JUMPI
---
0x166: JUMPDEST 
0x167: V92 = DIV V54 V88
0x168: V93 = 0x40
0x16a: V94 = M[0x40]
0x16c: V95 = 0xffffffff
0x171: V96 = AND 0xffffffff 0xa9059cbb
0x172: V97 = 0x100000000000000000000000000000000000000000000000000000000
0x190: V98 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x192: M[V94] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x193: V99 = 0x4
0x195: V100 = ADD 0x4 V94
0x198: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x1ae: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1c5: M[V100] = V104
0x1c6: V105 = 0x20
0x1c8: V106 = ADD 0x20 V100
0x1cb: M[V106] = V92
0x1cc: V107 = 0x20
0x1ce: V108 = ADD 0x20 V106
0x1d3: V109 = 0x0
0x1d5: V110 = 0x40
0x1d7: V111 = M[0x40]
0x1da: V112 = SUB V108 V111
0x1dc: V113 = 0x0
0x1e0: V114 = EXTCODESIZE V84
0x1e1: V115 = ISZERO V114
0x1e2: V116 = ISZERO V115
0x1e3: V117 = 0x1e8
0x1e6: JUMPI 0x1e8 V116
---
Entry stack: [V10, 0x275, V54, V84, 0xa9059cbb, V86, V88, V54]
Stack pops: 5
Stack additions: [S4, S3, V108, 0x0, V111, V112, V111, 0x0, S4]
Exit stack: [V10, 0x275, V54, V84, 0xa9059cbb, V108, 0x0, V111, V112, V111, 0x0, V84]

================================

Block 0x1e7
[0x1e7:0x1e7]
---
Predecessors: [0x166]
Successors: []
---
0x1e7 INVALID
---
0x1e7: INVALID 
---
Entry stack: [V10, 0x275, V54, V84, 0xa9059cbb, V108, 0x0, V111, V112, V111, 0x0, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x275, V54, V84, 0xa9059cbb, V108, 0x0, V111, V112, V111, 0x0, V84]

================================

Block 0x1e8
[0x1e8:0x1f4]
---
Predecessors: [0x166]
Successors: [0x1f5, 0x1f6]
---
0x1e8 JUMPDEST
0x1e9 PUSH2 0x2c6
0x1ec GAS
0x1ed SUB
0x1ee CALL
0x1ef ISZERO
0x1f0 ISZERO
0x1f1 PUSH2 0x1f6
0x1f4 JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V118 = 0x2c6
0x1ec: V119 = GAS
0x1ed: V120 = SUB V119 0x2c6
0x1ee: V121 = CALL V120 V84 0x0 V111 V112 V111 0x0
0x1ef: V122 = ISZERO V121
0x1f0: V123 = ISZERO V122
0x1f1: V124 = 0x1f6
0x1f4: JUMPI 0x1f6 V123
---
Entry stack: [V10, 0x275, V54, V84, 0xa9059cbb, V108, 0x0, V111, V112, V111, 0x0, V84]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x275, V54, V84, 0xa9059cbb, V108]

================================

Block 0x1f5
[0x1f5:0x1f5]
---
Predecessors: [0x1e8]
Successors: []
---
0x1f5 INVALID
---
0x1f5: INVALID 
---
Entry stack: [V10, 0x275, V54, V84, 0xa9059cbb, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x275, V54, V84, 0xa9059cbb, V108]

================================

Block 0x1f6
[0x1f6:0x271]
---
Predecessors: [0x1e8]
Successors: [0x272]
---
0x1f6 JUMPDEST
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x21b CALLER
0x21c DUP3
0x21d PUSH1 0x1
0x21f PUSH1 0x40
0x221 MLOAD
0x222 DUP1
0x223 DUP5
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 DUP2
0x251 MSTORE
0x252 PUSH1 0x20
0x254 ADD
0x255 DUP4
0x256 DUP2
0x257 MSTORE
0x258 PUSH1 0x20
0x25a ADD
0x25b DUP3
0x25c ISZERO
0x25d ISZERO
0x25e ISZERO
0x25f ISZERO
0x260 DUP2
0x261 MSTORE
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP4
0x266 POP
0x267 POP
0x268 POP
0x269 POP
0x26a PUSH1 0x40
0x26c MLOAD
0x26d DUP1
0x26e SWAP2
0x26f SUB
0x270 SWAP1
0x271 LOG1
---
0x1f6: JUMPDEST 
0x1fa: V125 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x21b: V126 = CALLER
0x21d: V127 = 0x1
0x21f: V128 = 0x40
0x221: V129 = M[0x40]
0x224: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x23a: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x251: M[V129] = V133
0x252: V134 = 0x20
0x254: V135 = ADD 0x20 V129
0x257: M[V135] = V54
0x258: V136 = 0x20
0x25a: V137 = ADD 0x20 V135
0x25c: V138 = ISZERO 0x1
0x25d: V139 = ISZERO 0x0
0x25e: V140 = ISZERO 0x1
0x25f: V141 = ISZERO 0x0
0x261: M[V137] = 0x1
0x262: V142 = 0x20
0x264: V143 = ADD 0x20 V137
0x26a: V144 = 0x40
0x26c: V145 = M[0x40]
0x26f: V146 = SUB V143 V145
0x271: LOG V145 V146 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x275, V54, V84, 0xa9059cbb, V108]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x275, V54]

================================

Block 0x272
[0x272:0x274]
---
Predecessors: [0x1f6]
Successors: [0x275]
---
0x272 JUMPDEST
0x273 POP
0x274 JUMP
---
0x272: JUMPDEST 
0x274: JUMP 0x275
---
Entry stack: [V10, 0x275, V54]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x275
[0x275:0x276]
---
Predecessors: [0x272]
Successors: []
---
0x275 JUMPDEST
0x276 STOP
---
0x275: JUMPDEST 
0x276: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0xb]
Successors: [0x27e, 0x27f]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x27f
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V147 = CALLVALUE
0x279: V148 = ISZERO V147
0x27a: V149 = 0x27f
0x27d: JUMPI 0x27f V148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27e
[0x27e:0x27e]
---
Predecessors: [0x277]
Successors: []
---
0x27e INVALID
---
0x27e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27f
[0x27f:0x286]
---
Predecessors: [0x277]
Successors: [0x421]
---
0x27f JUMPDEST
0x280 PUSH2 0x287
0x283 PUSH2 0x421
0x286 JUMP
---
0x27f: JUMPDEST 
0x280: V150 = 0x287
0x283: V151 = 0x421
0x286: JUMP 0x421
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x287]
Exit stack: [V10, 0x287]

================================

Block 0x287
[0x287:0x288]
---
Predecessors: [0x502]
Successors: []
---
0x287 JUMPDEST
0x288 STOP
---
0x287: JUMPDEST 
0x288: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x289
[0x289:0x28f]
---
Predecessors: [0x3f]
Successors: [0x290, 0x291]
---
0x289 JUMPDEST
0x28a CALLVALUE
0x28b ISZERO
0x28c PUSH2 0x291
0x28f JUMPI
---
0x289: JUMPDEST 
0x28a: V152 = CALLVALUE
0x28b: V153 = ISZERO V152
0x28c: V154 = 0x291
0x28f: JUMPI 0x291 V153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x290
[0x290:0x290]
---
Predecessors: [0x289]
Successors: []
---
0x290 INVALID
---
0x290: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x291
[0x291:0x298]
---
Predecessors: [0x289]
Successors: [0x504]
---
0x291 JUMPDEST
0x292 PUSH2 0x299
0x295 PUSH2 0x504
0x298 JUMP
---
0x291: JUMPDEST 
0x292: V155 = 0x299
0x295: V156 = 0x504
0x298: JUMP 0x504
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x299]
Exit stack: [V10, 0x299]

================================

Block 0x299
[0x299:0x2ae]
---
Predecessors: [0x504]
Successors: []
---
0x299 JUMPDEST
0x29a PUSH1 0x40
0x29c MLOAD
0x29d DUP1
0x29e DUP3
0x29f DUP2
0x2a0 MSTORE
0x2a1 PUSH1 0x20
0x2a3 ADD
0x2a4 SWAP2
0x2a5 POP
0x2a6 POP
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa DUP1
0x2ab SWAP2
0x2ac SUB
0x2ad SWAP1
0x2ae RETURN
---
0x299: JUMPDEST 
0x29a: V157 = 0x40
0x29c: V158 = M[0x40]
0x2a0: M[V158] = V323
0x2a1: V159 = 0x20
0x2a3: V160 = ADD 0x20 V158
0x2a7: V161 = 0x40
0x2a9: V162 = M[0x40]
0x2ac: V163 = SUB V160 V162
0x2ae: RETURN V162 V163
---
Entry stack: [V10, 0x299, V323]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x299]

================================

Block 0x2af
[0x2af:0x2b5]
---
Predecessors: [0x4a]
Successors: [0x2b6, 0x2b7]
---
0x2af JUMPDEST
0x2b0 CALLVALUE
0x2b1 ISZERO
0x2b2 PUSH2 0x2b7
0x2b5 JUMPI
---
0x2af: JUMPDEST 
0x2b0: V164 = CALLVALUE
0x2b1: V165 = ISZERO V164
0x2b2: V166 = 0x2b7
0x2b5: JUMPI 0x2b7 V165
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b6
[0x2b6:0x2b6]
---
Predecessors: [0x2af]
Successors: []
---
0x2b6 INVALID
---
0x2b6: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b7
[0x2b7:0x2be]
---
Predecessors: [0x2af]
Successors: [0x50a]
---
0x2b7 JUMPDEST
0x2b8 PUSH2 0x2bf
0x2bb PUSH2 0x50a
0x2be JUMP
---
0x2b7: JUMPDEST 
0x2b8: V167 = 0x2bf
0x2bb: V168 = 0x50a
0x2be: JUMP 0x50a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2bf]
Exit stack: [V10, 0x2bf]

================================

Block 0x2bf
[0x2bf:0x300]
---
Predecessors: [0x50a]
Successors: []
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 DUP1
0x2c4 DUP3
0x2c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2da AND
0x2db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f0 AND
0x2f1 DUP2
0x2f2 MSTORE
0x2f3 PUSH1 0x20
0x2f5 ADD
0x2f6 SWAP2
0x2f7 POP
0x2f8 POP
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd SWAP2
0x2fe SUB
0x2ff SWAP1
0x300 RETURN
---
0x2bf: JUMPDEST 
0x2c0: V169 = 0x40
0x2c2: V170 = M[0x40]
0x2c5: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x2db: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f0: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2f2: M[V170] = V174
0x2f3: V175 = 0x20
0x2f5: V176 = ADD 0x20 V170
0x2f9: V177 = 0x40
0x2fb: V178 = M[0x40]
0x2fe: V179 = SUB V176 V178
0x300: RETURN V178 V179
---
Entry stack: [V10, 0x2bf, V331]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2bf]

================================

Block 0x301
[0x301:0x307]
---
Predecessors: [0x55]
Successors: [0x308, 0x309]
---
0x301 JUMPDEST
0x302 CALLVALUE
0x303 ISZERO
0x304 PUSH2 0x309
0x307 JUMPI
---
0x301: JUMPDEST 
0x302: V180 = CALLVALUE
0x303: V181 = ISZERO V180
0x304: V182 = 0x309
0x307: JUMPI 0x309 V181
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x308
[0x308:0x308]
---
Predecessors: [0x301]
Successors: []
---
0x308 INVALID
---
0x308: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x309
[0x309:0x310]
---
Predecessors: [0x301]
Successors: [0x530]
---
0x309 JUMPDEST
0x30a PUSH2 0x311
0x30d PUSH2 0x530
0x310 JUMP
---
0x309: JUMPDEST 
0x30a: V183 = 0x311
0x30d: V184 = 0x530
0x310: JUMP 0x530
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x311]
Exit stack: [V10, 0x311]

================================

Block 0x311
[0x311:0x352]
---
Predecessors: [0x530]
Successors: []
---
0x311 JUMPDEST
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 DUP3
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x20
0x347 ADD
0x348 SWAP2
0x349 POP
0x34a POP
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f SWAP2
0x350 SUB
0x351 SWAP1
0x352 RETURN
---
0x311: JUMPDEST 
0x312: V185 = 0x40
0x314: V186 = M[0x40]
0x317: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x32d: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x344: M[V186] = V190
0x345: V191 = 0x20
0x347: V192 = ADD 0x20 V186
0x34b: V193 = 0x40
0x34d: V194 = M[0x40]
0x350: V195 = SUB V192 V194
0x352: RETURN V194 V195
---
Entry stack: [V10, 0x311, V339]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x311]

================================

Block 0x353
[0x353:0x359]
---
Predecessors: [0x60]
Successors: [0x35a, 0x35b]
---
0x353 JUMPDEST
0x354 CALLVALUE
0x355 ISZERO
0x356 PUSH2 0x35b
0x359 JUMPI
---
0x353: JUMPDEST 
0x354: V196 = CALLVALUE
0x355: V197 = ISZERO V196
0x356: V198 = 0x35b
0x359: JUMPI 0x35b V197
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35a
[0x35a:0x35a]
---
Predecessors: [0x353]
Successors: []
---
0x35a INVALID
---
0x35a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35b
[0x35b:0x386]
---
Predecessors: [0x353]
Successors: [0x556]
---
0x35b JUMPDEST
0x35c PUSH2 0x387
0x35f PUSH1 0x4
0x361 DUP1
0x362 DUP1
0x363 CALLDATALOAD
0x364 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x379 AND
0x37a SWAP1
0x37b PUSH1 0x20
0x37d ADD
0x37e SWAP1
0x37f SWAP2
0x380 SWAP1
0x381 POP
0x382 POP
0x383 PUSH2 0x556
0x386 JUMP
---
0x35b: JUMPDEST 
0x35c: V199 = 0x387
0x35f: V200 = 0x4
0x363: V201 = CALLDATALOAD 0x4
0x364: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x379: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x37b: V204 = 0x20
0x37d: V205 = ADD 0x20 0x4
0x383: V206 = 0x556
0x386: JUMP 0x556
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x387, V203]
Exit stack: [V10, 0x387, V203]

================================

Block 0x387
[0x387:0x39c]
---
Predecessors: [0x556]
Successors: []
---
0x387 JUMPDEST
0x388 PUSH1 0x40
0x38a MLOAD
0x38b DUP1
0x38c DUP3
0x38d DUP2
0x38e MSTORE
0x38f PUSH1 0x20
0x391 ADD
0x392 SWAP2
0x393 POP
0x394 POP
0x395 PUSH1 0x40
0x397 MLOAD
0x398 DUP1
0x399 SWAP2
0x39a SUB
0x39b SWAP1
0x39c RETURN
---
0x387: JUMPDEST 
0x388: V207 = 0x40
0x38a: V208 = M[0x40]
0x38e: M[V208] = V347
0x38f: V209 = 0x20
0x391: V210 = ADD 0x20 V208
0x395: V211 = 0x40
0x397: V212 = M[0x40]
0x39a: V213 = SUB V210 V212
0x39c: RETURN V212 V213
---
Entry stack: [V10, 0x387, V347]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x387]

================================

Block 0x39d
[0x39d:0x3a3]
---
Predecessors: [0x6b]
Successors: [0x3a4, 0x3a5]
---
0x39d JUMPDEST
0x39e CALLVALUE
0x39f ISZERO
0x3a0 PUSH2 0x3a5
0x3a3 JUMPI
---
0x39d: JUMPDEST 
0x39e: V214 = CALLVALUE
0x39f: V215 = ISZERO V214
0x3a0: V216 = 0x3a5
0x3a3: JUMPI 0x3a5 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a4
[0x3a4:0x3a4]
---
Predecessors: [0x39d]
Successors: []
---
0x3a4 INVALID
---
0x3a4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a5
[0x3a5:0x3ac]
---
Predecessors: [0x39d]
Successors: [0x56e]
---
0x3a5 JUMPDEST
0x3a6 PUSH2 0x3ad
0x3a9 PUSH2 0x56e
0x3ac JUMP
---
0x3a5: JUMPDEST 
0x3a6: V217 = 0x3ad
0x3a9: V218 = 0x56e
0x3ac: JUMP 0x56e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ad]
Exit stack: [V10, 0x3ad]

================================

Block 0x3ad
[0x3ad:0x3c2]
---
Predecessors: [0x56e]
Successors: []
---
0x3ad JUMPDEST
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 DUP3
0x3b3 DUP2
0x3b4 MSTORE
0x3b5 PUSH1 0x20
0x3b7 ADD
0x3b8 SWAP2
0x3b9 POP
0x3ba POP
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be DUP1
0x3bf SWAP2
0x3c0 SUB
0x3c1 SWAP1
0x3c2 RETURN
---
0x3ad: JUMPDEST 
0x3ae: V219 = 0x40
0x3b0: V220 = M[0x40]
0x3b4: M[V220] = V349
0x3b5: V221 = 0x20
0x3b7: V222 = ADD 0x20 V220
0x3bb: V223 = 0x40
0x3bd: V224 = M[0x40]
0x3c0: V225 = SUB V222 V224
0x3c2: RETURN V224 V225
---
Entry stack: [V10, 0x3ad, V349]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3ad]

================================

Block 0x3c3
[0x3c3:0x3c9]
---
Predecessors: [0x76]
Successors: [0x3ca, 0x3cb]
---
0x3c3 JUMPDEST
0x3c4 CALLVALUE
0x3c5 ISZERO
0x3c6 PUSH2 0x3cb
0x3c9 JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V226 = CALLVALUE
0x3c5: V227 = ISZERO V226
0x3c6: V228 = 0x3cb
0x3c9: JUMPI 0x3cb V227
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ca
[0x3ca:0x3ca]
---
Predecessors: [0x3c3]
Successors: []
---
0x3ca INVALID
---
0x3ca: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3cb
[0x3cb:0x3d2]
---
Predecessors: [0x3c3]
Successors: [0x574]
---
0x3cb JUMPDEST
0x3cc PUSH2 0x3d3
0x3cf PUSH2 0x574
0x3d2 JUMP
---
0x3cb: JUMPDEST 
0x3cc: V229 = 0x3d3
0x3cf: V230 = 0x574
0x3d2: JUMP 0x574
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3d3]
Exit stack: [V10, 0x3d3]

================================

Block 0x3d3
[0x3d3:0x3e8]
---
Predecessors: [0x574]
Successors: []
---
0x3d3 JUMPDEST
0x3d4 PUSH1 0x40
0x3d6 MLOAD
0x3d7 DUP1
0x3d8 DUP3
0x3d9 DUP2
0x3da MSTORE
0x3db PUSH1 0x20
0x3dd ADD
0x3de SWAP2
0x3df POP
0x3e0 POP
0x3e1 PUSH1 0x40
0x3e3 MLOAD
0x3e4 DUP1
0x3e5 SWAP2
0x3e6 SUB
0x3e7 SWAP1
0x3e8 RETURN
---
0x3d3: JUMPDEST 
0x3d4: V231 = 0x40
0x3d6: V232 = M[0x40]
0x3da: M[V232] = V351
0x3db: V233 = 0x20
0x3dd: V234 = ADD 0x20 V232
0x3e1: V235 = 0x40
0x3e3: V236 = M[0x40]
0x3e6: V237 = SUB V234 V236
0x3e8: RETURN V236 V237
---
Entry stack: [V10, 0x3d3, V351]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3d3]

================================

Block 0x3e9
[0x3e9:0x3ef]
---
Predecessors: [0x81]
Successors: [0x3f0, 0x3f1]
---
0x3e9 JUMPDEST
0x3ea CALLVALUE
0x3eb ISZERO
0x3ec PUSH2 0x3f1
0x3ef JUMPI
---
0x3e9: JUMPDEST 
0x3ea: V238 = CALLVALUE
0x3eb: V239 = ISZERO V238
0x3ec: V240 = 0x3f1
0x3ef: JUMPI 0x3f1 V239
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f0
[0x3f0:0x3f0]
---
Predecessors: [0x3e9]
Successors: []
---
0x3f0 INVALID
---
0x3f0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f1
[0x3f1:0x3f8]
---
Predecessors: [0x3e9]
Successors: [0x57a]
---
0x3f1 JUMPDEST
0x3f2 PUSH2 0x3f9
0x3f5 PUSH2 0x57a
0x3f8 JUMP
---
0x3f1: JUMPDEST 
0x3f2: V241 = 0x3f9
0x3f5: V242 = 0x57a
0x3f8: JUMP 0x57a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3f9]
Exit stack: [V10, 0x3f9]

================================

Block 0x3f9
[0x3f9:0x40e]
---
Predecessors: [0x57a]
Successors: []
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd DUP1
0x3fe DUP3
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP2
0x405 POP
0x406 POP
0x407 PUSH1 0x40
0x409 MLOAD
0x40a DUP1
0x40b SWAP2
0x40c SUB
0x40d SWAP1
0x40e RETURN
---
0x3f9: JUMPDEST 
0x3fa: V243 = 0x40
0x3fc: V244 = M[0x40]
0x400: M[V244] = V353
0x401: V245 = 0x20
0x403: V246 = ADD 0x20 V244
0x407: V247 = 0x40
0x409: V248 = M[0x40]
0x40c: V249 = SUB V246 V248
0x40e: RETURN V248 V249
---
Entry stack: [V10, 0x3f9, V353]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3f9]

================================

Block 0x40f
[0x40f:0x415]
---
Predecessors: [0x8c]
Successors: [0x416, 0x417]
---
0x40f JUMPDEST
0x410 CALLVALUE
0x411 ISZERO
0x412 PUSH2 0x417
0x415 JUMPI
---
0x40f: JUMPDEST 
0x410: V250 = CALLVALUE
0x411: V251 = ISZERO V250
0x412: V252 = 0x417
0x415: JUMPI 0x417 V251
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x416
[0x416:0x416]
---
Predecessors: [0x40f]
Successors: []
---
0x416 INVALID
---
0x416: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x417
[0x417:0x41e]
---
Predecessors: [0x40f]
Successors: [0x580]
---
0x417 JUMPDEST
0x418 PUSH2 0x41f
0x41b PUSH2 0x580
0x41e JUMP
---
0x417: JUMPDEST 
0x418: V253 = 0x41f
0x41b: V254 = 0x580
0x41e: JUMP 0x580
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x41f]
Exit stack: [V10, 0x41f]

================================

Block 0x41f
[0x41f:0x420]
---
Predecessors: [0x8c4]
Successors: []
---
0x41f JUMPDEST
0x420 STOP
---
0x41f: JUMPDEST 
0x420: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x421
[0x421:0x42c]
---
Predecessors: [0x27f]
Successors: [0x42d, 0x501]
---
0x421 JUMPDEST
0x422 PUSH1 0x3
0x424 SLOAD
0x425 TIMESTAMP
0x426 LT
0x427 ISZERO
0x428 ISZERO
0x429 PUSH2 0x501
0x42c JUMPI
---
0x421: JUMPDEST 
0x422: V255 = 0x3
0x424: V256 = S[0x3]
0x425: V257 = TIMESTAMP
0x426: V258 = LT V257 V256
0x427: V259 = ISZERO V258
0x428: V260 = ISZERO V259
0x429: V261 = 0x501
0x42c: JUMPI 0x501 V260
---
Entry stack: [V10, 0x287]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x287]

================================

Block 0x42d
[0x42d:0x439]
---
Predecessors: [0x421]
Successors: [0x43a, 0x4e4]
---
0x42d PUSH1 0x1
0x42f SLOAD
0x430 PUSH1 0x2
0x432 SLOAD
0x433 LT
0x434 ISZERO
0x435 ISZERO
0x436 PUSH2 0x4e4
0x439 JUMPI
---
0x42d: V262 = 0x1
0x42f: V263 = S[0x1]
0x430: V264 = 0x2
0x432: V265 = S[0x2]
0x433: V266 = LT V265 V263
0x434: V267 = ISZERO V266
0x435: V268 = ISZERO V267
0x436: V269 = 0x4e4
0x439: JUMPI 0x4e4 V268
---
Entry stack: [V10, 0x287]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x287]

================================

Block 0x43a
[0x43a:0x4e3]
---
Predecessors: [0x42d]
Successors: [0x4e4]
---
0x43a PUSH1 0x1
0x43c PUSH1 0x7
0x43e PUSH1 0x0
0x440 PUSH2 0x100
0x443 EXP
0x444 DUP2
0x445 SLOAD
0x446 DUP2
0x447 PUSH1 0xff
0x449 MUL
0x44a NOT
0x44b AND
0x44c SWAP1
0x44d DUP4
0x44e ISZERO
0x44f ISZERO
0x450 MUL
0x451 OR
0x452 SWAP1
0x453 SSTORE
0x454 POP
0x455 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x476 PUSH1 0x0
0x478 PUSH1 0x0
0x47a SWAP1
0x47b SLOAD
0x47c SWAP1
0x47d PUSH2 0x100
0x480 EXP
0x481 SWAP1
0x482 DIV
0x483 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x498 AND
0x499 PUSH1 0x2
0x49b SLOAD
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 DUP4
0x4a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b6 AND
0x4b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cc AND
0x4cd DUP2
0x4ce MSTORE
0x4cf PUSH1 0x20
0x4d1 ADD
0x4d2 DUP3
0x4d3 DUP2
0x4d4 MSTORE
0x4d5 PUSH1 0x20
0x4d7 ADD
0x4d8 SWAP3
0x4d9 POP
0x4da POP
0x4db POP
0x4dc PUSH1 0x40
0x4de MLOAD
0x4df DUP1
0x4e0 SWAP2
0x4e1 SUB
0x4e2 SWAP1
0x4e3 LOG1
---
0x43a: V270 = 0x1
0x43c: V271 = 0x7
0x43e: V272 = 0x0
0x440: V273 = 0x100
0x443: V274 = EXP 0x100 0x0
0x445: V275 = S[0x7]
0x447: V276 = 0xff
0x449: V277 = MUL 0xff 0x1
0x44a: V278 = NOT 0xff
0x44b: V279 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V275
0x44e: V280 = ISZERO 0x1
0x44f: V281 = ISZERO 0x0
0x450: V282 = MUL 0x1 0x1
0x451: V283 = OR 0x1 V279
0x453: S[0x7] = V283
0x455: V284 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x476: V285 = 0x0
0x478: V286 = 0x0
0x47b: V287 = S[0x0]
0x47d: V288 = 0x100
0x480: V289 = EXP 0x100 0x0
0x482: V290 = DIV V287 0x1
0x483: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x498: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x499: V293 = 0x2
0x49b: V294 = S[0x2]
0x49c: V295 = 0x40
0x49e: V296 = M[0x40]
0x4a1: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b6: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x4b7: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x4ce: M[V296] = V300
0x4cf: V301 = 0x20
0x4d1: V302 = ADD 0x20 V296
0x4d4: M[V302] = V294
0x4d5: V303 = 0x20
0x4d7: V304 = ADD 0x20 V302
0x4dc: V305 = 0x40
0x4de: V306 = M[0x40]
0x4e1: V307 = SUB V304 V306
0x4e3: LOG V306 V307 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x287]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x287]

================================

Block 0x4e4
[0x4e4:0x4ff]
---
Predecessors: [0x42d, 0x43a]
Successors: [0x500]
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0x7
0x4e9 PUSH1 0x1
0x4eb PUSH2 0x100
0x4ee EXP
0x4ef DUP2
0x4f0 SLOAD
0x4f1 DUP2
0x4f2 PUSH1 0xff
0x4f4 MUL
0x4f5 NOT
0x4f6 AND
0x4f7 SWAP1
0x4f8 DUP4
0x4f9 ISZERO
0x4fa ISZERO
0x4fb MUL
0x4fc OR
0x4fd SWAP1
0x4fe SSTORE
0x4ff POP
---
0x4e4: JUMPDEST 
0x4e5: V308 = 0x1
0x4e7: V309 = 0x7
0x4e9: V310 = 0x1
0x4eb: V311 = 0x100
0x4ee: V312 = EXP 0x100 0x1
0x4f0: V313 = S[0x7]
0x4f2: V314 = 0xff
0x4f4: V315 = MUL 0xff 0x100
0x4f5: V316 = NOT 0xff00
0x4f6: V317 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V313
0x4f9: V318 = ISZERO 0x1
0x4fa: V319 = ISZERO 0x0
0x4fb: V320 = MUL 0x1 0x100
0x4fc: V321 = OR 0x100 V317
0x4fe: S[0x7] = V321
---
Entry stack: [V10, 0x287]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x287]

================================

Block 0x500
[0x500:0x500]
---
Predecessors: [0x4e4]
Successors: [0x501]
---
0x500 JUMPDEST
---
0x500: JUMPDEST 
---
Entry stack: [V10, 0x287]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x287]

================================

Block 0x501
[0x501:0x501]
---
Predecessors: [0x421, 0x500]
Successors: [0x502]
---
0x501 JUMPDEST
---
0x501: JUMPDEST 
---
Entry stack: [V10, 0x287]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x287]

================================

Block 0x502
[0x502:0x503]
---
Predecessors: [0x501]
Successors: [0x287]
---
0x502 JUMPDEST
0x503 JUMP
---
0x502: JUMPDEST 
0x503: JUMP 0x287
---
Entry stack: [V10, 0x287]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x504
[0x504:0x509]
---
Predecessors: [0x291]
Successors: [0x299]
---
0x504 JUMPDEST
0x505 PUSH1 0x3
0x507 SLOAD
0x508 DUP2
0x509 JUMP
---
0x504: JUMPDEST 
0x505: V322 = 0x3
0x507: V323 = S[0x3]
0x509: JUMP 0x299
---
Entry stack: [V10, 0x299]
Stack pops: 1
Stack additions: [S0, V323]
Exit stack: [V10, 0x299, V323]

================================

Block 0x50a
[0x50a:0x52f]
---
Predecessors: [0x2b7]
Successors: [0x2bf]
---
0x50a JUMPDEST
0x50b PUSH1 0x0
0x50d PUSH1 0x0
0x50f SWAP1
0x510 SLOAD
0x511 SWAP1
0x512 PUSH2 0x100
0x515 EXP
0x516 SWAP1
0x517 DIV
0x518 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52d AND
0x52e DUP2
0x52f JUMP
---
0x50a: JUMPDEST 
0x50b: V324 = 0x0
0x50d: V325 = 0x0
0x510: V326 = S[0x0]
0x512: V327 = 0x100
0x515: V328 = EXP 0x100 0x0
0x517: V329 = DIV V326 0x1
0x518: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x52d: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x52f: JUMP 0x2bf
---
Entry stack: [V10, 0x2bf]
Stack pops: 1
Stack additions: [S0, V331]
Exit stack: [V10, 0x2bf, V331]

================================

Block 0x530
[0x530:0x555]
---
Predecessors: [0x309]
Successors: [0x311]
---
0x530 JUMPDEST
0x531 PUSH1 0x5
0x533 PUSH1 0x0
0x535 SWAP1
0x536 SLOAD
0x537 SWAP1
0x538 PUSH2 0x100
0x53b EXP
0x53c SWAP1
0x53d DIV
0x53e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x553 AND
0x554 DUP2
0x555 JUMP
---
0x530: JUMPDEST 
0x531: V332 = 0x5
0x533: V333 = 0x0
0x536: V334 = S[0x5]
0x538: V335 = 0x100
0x53b: V336 = EXP 0x100 0x0
0x53d: V337 = DIV V334 0x1
0x53e: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x553: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x555: JUMP 0x311
---
Entry stack: [V10, 0x311]
Stack pops: 1
Stack additions: [S0, V339]
Exit stack: [V10, 0x311, V339]

================================

Block 0x556
[0x556:0x56d]
---
Predecessors: [0x35b]
Successors: [0x387]
---
0x556 JUMPDEST
0x557 PUSH1 0x6
0x559 PUSH1 0x20
0x55b MSTORE
0x55c DUP1
0x55d PUSH1 0x0
0x55f MSTORE
0x560 PUSH1 0x40
0x562 PUSH1 0x0
0x564 SHA3
0x565 PUSH1 0x0
0x567 SWAP2
0x568 POP
0x569 SWAP1
0x56a POP
0x56b SLOAD
0x56c DUP2
0x56d JUMP
---
0x556: JUMPDEST 
0x557: V340 = 0x6
0x559: V341 = 0x20
0x55b: M[0x20] = 0x6
0x55d: V342 = 0x0
0x55f: M[0x0] = V203
0x560: V343 = 0x40
0x562: V344 = 0x0
0x564: V345 = SHA3 0x0 0x40
0x565: V346 = 0x0
0x56b: V347 = S[V345]
0x56d: JUMP 0x387
---
Entry stack: [V10, 0x387, V203]
Stack pops: 2
Stack additions: [S1, V347]
Exit stack: [V10, 0x387, V347]

================================

Block 0x56e
[0x56e:0x573]
---
Predecessors: [0x3a5]
Successors: [0x3ad]
---
0x56e JUMPDEST
0x56f PUSH1 0x1
0x571 SLOAD
0x572 DUP2
0x573 JUMP
---
0x56e: JUMPDEST 
0x56f: V348 = 0x1
0x571: V349 = S[0x1]
0x573: JUMP 0x3ad
---
Entry stack: [V10, 0x3ad]
Stack pops: 1
Stack additions: [S0, V349]
Exit stack: [V10, 0x3ad, V349]

================================

Block 0x574
[0x574:0x579]
---
Predecessors: [0x3cb]
Successors: [0x3d3]
---
0x574 JUMPDEST
0x575 PUSH1 0x2
0x577 SLOAD
0x578 DUP2
0x579 JUMP
---
0x574: JUMPDEST 
0x575: V350 = 0x2
0x577: V351 = S[0x2]
0x579: JUMP 0x3d3
---
Entry stack: [V10, 0x3d3]
Stack pops: 1
Stack additions: [S0, V351]
Exit stack: [V10, 0x3d3, V351]

================================

Block 0x57a
[0x57a:0x57f]
---
Predecessors: [0x3f1]
Successors: [0x3f9]
---
0x57a JUMPDEST
0x57b PUSH1 0x4
0x57d SLOAD
0x57e DUP2
0x57f JUMP
---
0x57a: JUMPDEST 
0x57b: V352 = 0x4
0x57d: V353 = S[0x4]
0x57f: JUMP 0x3f9
---
Entry stack: [V10, 0x3f9]
Stack pops: 1
Stack additions: [S0, V353]
Exit stack: [V10, 0x3f9, V353]

================================

Block 0x580
[0x580:0x58d]
---
Predecessors: [0x417]
Successors: [0x58e, 0x8c3]
---
0x580 JUMPDEST
0x581 PUSH1 0x0
0x583 PUSH1 0x3
0x585 SLOAD
0x586 TIMESTAMP
0x587 LT
0x588 ISZERO
0x589 ISZERO
0x58a PUSH2 0x8c3
0x58d JUMPI
---
0x580: JUMPDEST 
0x581: V354 = 0x0
0x583: V355 = 0x3
0x585: V356 = S[0x3]
0x586: V357 = TIMESTAMP
0x587: V358 = LT V357 V356
0x588: V359 = ISZERO V358
0x589: V360 = ISZERO V359
0x58a: V361 = 0x8c3
0x58d: JUMPI 0x8c3 V360
---
Entry stack: [V10, 0x41f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x41f, 0x0]

================================

Block 0x58e
[0x58e:0x5a3]
---
Predecessors: [0x580]
Successors: [0x5a4, 0x734]
---
0x58e PUSH1 0x7
0x590 PUSH1 0x0
0x592 SWAP1
0x593 SLOAD
0x594 SWAP1
0x595 PUSH2 0x100
0x598 EXP
0x599 SWAP1
0x59a DIV
0x59b PUSH1 0xff
0x59d AND
0x59e ISZERO
0x59f ISZERO
0x5a0 PUSH2 0x734
0x5a3 JUMPI
---
0x58e: V362 = 0x7
0x590: V363 = 0x0
0x593: V364 = S[0x7]
0x595: V365 = 0x100
0x598: V366 = EXP 0x100 0x0
0x59a: V367 = DIV V364 0x1
0x59b: V368 = 0xff
0x59d: V369 = AND 0xff V367
0x59e: V370 = ISZERO V369
0x59f: V371 = ISZERO V370
0x5a0: V372 = 0x734
0x5a3: JUMPI 0x734 V371
---
Entry stack: [V10, 0x41f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, 0x0]

================================

Block 0x5a4
[0x5a4:0x633]
---
Predecessors: [0x58e]
Successors: [0x634, 0x733]
---
0x5a4 PUSH1 0x6
0x5a6 PUSH1 0x0
0x5a8 CALLER
0x5a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5be AND
0x5bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d4 AND
0x5d5 DUP2
0x5d6 MSTORE
0x5d7 PUSH1 0x20
0x5d9 ADD
0x5da SWAP1
0x5db DUP2
0x5dc MSTORE
0x5dd PUSH1 0x20
0x5df ADD
0x5e0 PUSH1 0x0
0x5e2 SHA3
0x5e3 SLOAD
0x5e4 SWAP1
0x5e5 POP
0x5e6 PUSH1 0x0
0x5e8 PUSH1 0x6
0x5ea PUSH1 0x0
0x5ec CALLER
0x5ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x602 AND
0x603 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x618 AND
0x619 DUP2
0x61a MSTORE
0x61b PUSH1 0x20
0x61d ADD
0x61e SWAP1
0x61f DUP2
0x620 MSTORE
0x621 PUSH1 0x20
0x623 ADD
0x624 PUSH1 0x0
0x626 SHA3
0x627 DUP2
0x628 SWAP1
0x629 SSTORE
0x62a POP
0x62b PUSH1 0x0
0x62d DUP2
0x62e GT
0x62f ISZERO
0x630 PUSH2 0x733
0x633 JUMPI
---
0x5a4: V373 = 0x6
0x5a6: V374 = 0x0
0x5a8: V375 = CALLER
0x5a9: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x5bf: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d4: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x5d6: M[0x0] = V379
0x5d7: V380 = 0x20
0x5d9: V381 = ADD 0x20 0x0
0x5dc: M[0x20] = 0x6
0x5dd: V382 = 0x20
0x5df: V383 = ADD 0x20 0x20
0x5e0: V384 = 0x0
0x5e2: V385 = SHA3 0x0 0x40
0x5e3: V386 = S[V385]
0x5e6: V387 = 0x0
0x5e8: V388 = 0x6
0x5ea: V389 = 0x0
0x5ec: V390 = CALLER
0x5ed: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x602: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x603: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x618: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x61a: M[0x0] = V394
0x61b: V395 = 0x20
0x61d: V396 = ADD 0x20 0x0
0x620: M[0x20] = 0x6
0x621: V397 = 0x20
0x623: V398 = ADD 0x20 0x20
0x624: V399 = 0x0
0x626: V400 = SHA3 0x0 0x40
0x629: S[V400] = 0x0
0x62b: V401 = 0x0
0x62e: V402 = GT V386 0x0
0x62f: V403 = ISZERO V402
0x630: V404 = 0x733
0x633: JUMPI 0x733 V403
---
Entry stack: [V10, 0x41f, 0x0]
Stack pops: 1
Stack additions: [V386]
Exit stack: [V10, 0x41f, V386]

================================

Block 0x634
[0x634:0x670]
---
Predecessors: [0x5a4]
Successors: [0x671, 0x6ed]
---
0x634 CALLER
0x635 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64a AND
0x64b PUSH2 0x8fc
0x64e DUP3
0x64f SWAP1
0x650 DUP2
0x651 ISZERO
0x652 MUL
0x653 SWAP1
0x654 PUSH1 0x40
0x656 MLOAD
0x657 DUP1
0x658 SWAP1
0x659 POP
0x65a PUSH1 0x0
0x65c PUSH1 0x40
0x65e MLOAD
0x65f DUP1
0x660 DUP4
0x661 SUB
0x662 DUP2
0x663 DUP6
0x664 DUP9
0x665 DUP9
0x666 CALL
0x667 SWAP4
0x668 POP
0x669 POP
0x66a POP
0x66b POP
0x66c ISZERO
0x66d PUSH2 0x6ed
0x670 JUMPI
---
0x634: V405 = CALLER
0x635: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x64a: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x64b: V408 = 0x8fc
0x651: V409 = ISZERO V386
0x652: V410 = MUL V409 0x8fc
0x654: V411 = 0x40
0x656: V412 = M[0x40]
0x65a: V413 = 0x0
0x65c: V414 = 0x40
0x65e: V415 = M[0x40]
0x661: V416 = SUB V412 V415
0x666: V417 = CALL V410 V407 V386 V415 V416 V415 0x0
0x66c: V418 = ISZERO V417
0x66d: V419 = 0x6ed
0x670: JUMPI 0x6ed V418
---
Entry stack: [V10, 0x41f, V386]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x41f, V386]

================================

Block 0x671
[0x671:0x6ec]
---
Predecessors: [0x634]
Successors: [0x732]
---
0x671 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x692 CALLER
0x693 DUP3
0x694 PUSH1 0x0
0x696 PUSH1 0x40
0x698 MLOAD
0x699 DUP1
0x69a DUP5
0x69b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b0 AND
0x6b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c6 AND
0x6c7 DUP2
0x6c8 MSTORE
0x6c9 PUSH1 0x20
0x6cb ADD
0x6cc DUP4
0x6cd DUP2
0x6ce MSTORE
0x6cf PUSH1 0x20
0x6d1 ADD
0x6d2 DUP3
0x6d3 ISZERO
0x6d4 ISZERO
0x6d5 ISZERO
0x6d6 ISZERO
0x6d7 DUP2
0x6d8 MSTORE
0x6d9 PUSH1 0x20
0x6db ADD
0x6dc SWAP4
0x6dd POP
0x6de POP
0x6df POP
0x6e0 POP
0x6e1 PUSH1 0x40
0x6e3 MLOAD
0x6e4 DUP1
0x6e5 SWAP2
0x6e6 SUB
0x6e7 SWAP1
0x6e8 LOG1
0x6e9 PUSH2 0x732
0x6ec JUMP
---
0x671: V420 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x692: V421 = CALLER
0x694: V422 = 0x0
0x696: V423 = 0x40
0x698: V424 = M[0x40]
0x69b: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b0: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x6b1: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c6: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x6c8: M[V424] = V428
0x6c9: V429 = 0x20
0x6cb: V430 = ADD 0x20 V424
0x6ce: M[V430] = V386
0x6cf: V431 = 0x20
0x6d1: V432 = ADD 0x20 V430
0x6d3: V433 = ISZERO 0x0
0x6d4: V434 = ISZERO 0x1
0x6d5: V435 = ISZERO 0x0
0x6d6: V436 = ISZERO 0x1
0x6d8: M[V432] = 0x0
0x6d9: V437 = 0x20
0x6db: V438 = ADD 0x20 V432
0x6e1: V439 = 0x40
0x6e3: V440 = M[0x40]
0x6e6: V441 = SUB V438 V440
0x6e8: LOG V440 V441 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6e9: V442 = 0x732
0x6ec: JUMP 0x732
---
Entry stack: [V10, 0x41f, V386]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x41f, V386]

================================

Block 0x6ed
[0x6ed:0x731]
---
Predecessors: [0x634]
Successors: [0x732]
---
0x6ed JUMPDEST
0x6ee DUP1
0x6ef PUSH1 0x6
0x6f1 PUSH1 0x0
0x6f3 CALLER
0x6f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x709 AND
0x70a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71f AND
0x720 DUP2
0x721 MSTORE
0x722 PUSH1 0x20
0x724 ADD
0x725 SWAP1
0x726 DUP2
0x727 MSTORE
0x728 PUSH1 0x20
0x72a ADD
0x72b PUSH1 0x0
0x72d SHA3
0x72e DUP2
0x72f SWAP1
0x730 SSTORE
0x731 POP
---
0x6ed: JUMPDEST 
0x6ef: V443 = 0x6
0x6f1: V444 = 0x0
0x6f3: V445 = CALLER
0x6f4: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x709: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x70a: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x71f: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x721: M[0x0] = V449
0x722: V450 = 0x20
0x724: V451 = ADD 0x20 0x0
0x727: M[0x20] = 0x6
0x728: V452 = 0x20
0x72a: V453 = ADD 0x20 0x20
0x72b: V454 = 0x0
0x72d: V455 = SHA3 0x0 0x40
0x730: S[V455] = V386
---
Entry stack: [V10, 0x41f, V386]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x41f, V386]

================================

Block 0x732
[0x732:0x732]
---
Predecessors: [0x671, 0x6ed]
Successors: [0x733]
---
0x732 JUMPDEST
---
0x732: JUMPDEST 
---
Entry stack: [V10, 0x41f, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, V386]

================================

Block 0x733
[0x733:0x733]
---
Predecessors: [0x5a4, 0x732]
Successors: [0x734]
---
0x733 JUMPDEST
---
0x733: JUMPDEST 
---
Entry stack: [V10, 0x41f, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, V386]

================================

Block 0x734
[0x734:0x74a]
---
Predecessors: [0x58e, 0x733]
Successors: [0x74b, 0x79d]
---
0x734 JUMPDEST
0x735 PUSH1 0x7
0x737 PUSH1 0x0
0x739 SWAP1
0x73a SLOAD
0x73b SWAP1
0x73c PUSH2 0x100
0x73f EXP
0x740 SWAP1
0x741 DIV
0x742 PUSH1 0xff
0x744 AND
0x745 DUP1
0x746 ISZERO
0x747 PUSH2 0x79d
0x74a JUMPI
---
0x734: JUMPDEST 
0x735: V456 = 0x7
0x737: V457 = 0x0
0x73a: V458 = S[0x7]
0x73c: V459 = 0x100
0x73f: V460 = EXP 0x100 0x0
0x741: V461 = DIV V458 0x1
0x742: V462 = 0xff
0x744: V463 = AND 0xff V461
0x746: V464 = ISZERO V463
0x747: V465 = 0x79d
0x74a: JUMPI 0x79d V464
---
Entry stack: [V10, 0x41f, S0]
Stack pops: 0
Stack additions: [V463]
Exit stack: [V10, 0x41f, S0, V463]

================================

Block 0x74b
[0x74b:0x79c]
---
Predecessors: [0x734]
Successors: [0x79d]
---
0x74b POP
0x74c CALLER
0x74d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x762 AND
0x763 PUSH1 0x0
0x765 PUSH1 0x0
0x767 SWAP1
0x768 SLOAD
0x769 SWAP1
0x76a PUSH2 0x100
0x76d EXP
0x76e SWAP1
0x76f DIV
0x770 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x785 AND
0x786 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79b AND
0x79c EQ
---
0x74c: V466 = CALLER
0x74d: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x762: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x763: V469 = 0x0
0x765: V470 = 0x0
0x768: V471 = S[0x0]
0x76a: V472 = 0x100
0x76d: V473 = EXP 0x100 0x0
0x76f: V474 = DIV V471 0x1
0x770: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x785: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x786: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x79c: V479 = EQ V478 V468
---
Entry stack: [V10, 0x41f, S1, V463]
Stack pops: 1
Stack additions: [V479]
Exit stack: [V10, 0x41f, S1, V479]

================================

Block 0x79d
[0x79d:0x7a2]
---
Predecessors: [0x734, 0x74b]
Successors: [0x7a3, 0x8c1]
---
0x79d JUMPDEST
0x79e ISZERO
0x79f PUSH2 0x8c1
0x7a2 JUMPI
---
0x79d: JUMPDEST 
0x79e: V480 = ISZERO S0
0x79f: V481 = 0x8c1
0x7a2: JUMPI 0x8c1 V480
---
Entry stack: [V10, 0x41f, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x41f, S1]

================================

Block 0x7a3
[0x7a3:0x803]
---
Predecessors: [0x79d]
Successors: [0x804, 0x8a4]
---
0x7a3 PUSH1 0x0
0x7a5 PUSH1 0x0
0x7a7 SWAP1
0x7a8 SLOAD
0x7a9 SWAP1
0x7aa PUSH2 0x100
0x7ad EXP
0x7ae SWAP1
0x7af DIV
0x7b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c5 AND
0x7c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7db AND
0x7dc PUSH2 0x8fc
0x7df PUSH1 0x2
0x7e1 SLOAD
0x7e2 SWAP1
0x7e3 DUP2
0x7e4 ISZERO
0x7e5 MUL
0x7e6 SWAP1
0x7e7 PUSH1 0x40
0x7e9 MLOAD
0x7ea DUP1
0x7eb SWAP1
0x7ec POP
0x7ed PUSH1 0x0
0x7ef PUSH1 0x40
0x7f1 MLOAD
0x7f2 DUP1
0x7f3 DUP4
0x7f4 SUB
0x7f5 DUP2
0x7f6 DUP6
0x7f7 DUP9
0x7f8 DUP9
0x7f9 CALL
0x7fa SWAP4
0x7fb POP
0x7fc POP
0x7fd POP
0x7fe POP
0x7ff ISZERO
0x800 PUSH2 0x8a4
0x803 JUMPI
---
0x7a3: V482 = 0x0
0x7a5: V483 = 0x0
0x7a8: V484 = S[0x0]
0x7aa: V485 = 0x100
0x7ad: V486 = EXP 0x100 0x0
0x7af: V487 = DIV V484 0x1
0x7b0: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c5: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x7c6: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x7db: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x7dc: V492 = 0x8fc
0x7df: V493 = 0x2
0x7e1: V494 = S[0x2]
0x7e4: V495 = ISZERO V494
0x7e5: V496 = MUL V495 0x8fc
0x7e7: V497 = 0x40
0x7e9: V498 = M[0x40]
0x7ed: V499 = 0x0
0x7ef: V500 = 0x40
0x7f1: V501 = M[0x40]
0x7f4: V502 = SUB V498 V501
0x7f9: V503 = CALL V496 V491 V494 V501 V502 V501 0x0
0x7ff: V504 = ISZERO V503
0x800: V505 = 0x8a4
0x803: JUMPI 0x8a4 V504
---
Entry stack: [V10, 0x41f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, S0]

================================

Block 0x804
[0x804:0x8a3]
---
Predecessors: [0x7a3]
Successors: [0x8c0]
---
0x804 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x825 PUSH1 0x0
0x827 PUSH1 0x0
0x829 SWAP1
0x82a SLOAD
0x82b SWAP1
0x82c PUSH2 0x100
0x82f EXP
0x830 SWAP1
0x831 DIV
0x832 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x847 AND
0x848 PUSH1 0x2
0x84a SLOAD
0x84b PUSH1 0x0
0x84d PUSH1 0x40
0x84f MLOAD
0x850 DUP1
0x851 DUP5
0x852 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x867 AND
0x868 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87d AND
0x87e DUP2
0x87f MSTORE
0x880 PUSH1 0x20
0x882 ADD
0x883 DUP4
0x884 DUP2
0x885 MSTORE
0x886 PUSH1 0x20
0x888 ADD
0x889 DUP3
0x88a ISZERO
0x88b ISZERO
0x88c ISZERO
0x88d ISZERO
0x88e DUP2
0x88f MSTORE
0x890 PUSH1 0x20
0x892 ADD
0x893 SWAP4
0x894 POP
0x895 POP
0x896 POP
0x897 POP
0x898 PUSH1 0x40
0x89a MLOAD
0x89b DUP1
0x89c SWAP2
0x89d SUB
0x89e SWAP1
0x89f LOG1
0x8a0 PUSH2 0x8c0
0x8a3 JUMP
---
0x804: V506 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x825: V507 = 0x0
0x827: V508 = 0x0
0x82a: V509 = S[0x0]
0x82c: V510 = 0x100
0x82f: V511 = EXP 0x100 0x0
0x831: V512 = DIV V509 0x1
0x832: V513 = 0xffffffffffffffffffffffffffffffffffffffff
0x847: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V512
0x848: V515 = 0x2
0x84a: V516 = S[0x2]
0x84b: V517 = 0x0
0x84d: V518 = 0x40
0x84f: V519 = M[0x40]
0x852: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x867: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x868: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x87d: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x87f: M[V519] = V523
0x880: V524 = 0x20
0x882: V525 = ADD 0x20 V519
0x885: M[V525] = V516
0x886: V526 = 0x20
0x888: V527 = ADD 0x20 V525
0x88a: V528 = ISZERO 0x0
0x88b: V529 = ISZERO 0x1
0x88c: V530 = ISZERO 0x0
0x88d: V531 = ISZERO 0x1
0x88f: M[V527] = 0x0
0x890: V532 = 0x20
0x892: V533 = ADD 0x20 V527
0x898: V534 = 0x40
0x89a: V535 = M[0x40]
0x89d: V536 = SUB V533 V535
0x89f: LOG V535 V536 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x8a0: V537 = 0x8c0
0x8a3: JUMP 0x8c0
---
Entry stack: [V10, 0x41f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, S0]

================================

Block 0x8a4
[0x8a4:0x8bf]
---
Predecessors: [0x7a3]
Successors: [0x8c0]
---
0x8a4 JUMPDEST
0x8a5 PUSH1 0x0
0x8a7 PUSH1 0x7
0x8a9 PUSH1 0x0
0x8ab PUSH2 0x100
0x8ae EXP
0x8af DUP2
0x8b0 SLOAD
0x8b1 DUP2
0x8b2 PUSH1 0xff
0x8b4 MUL
0x8b5 NOT
0x8b6 AND
0x8b7 SWAP1
0x8b8 DUP4
0x8b9 ISZERO
0x8ba ISZERO
0x8bb MUL
0x8bc OR
0x8bd SWAP1
0x8be SSTORE
0x8bf POP
---
0x8a4: JUMPDEST 
0x8a5: V538 = 0x0
0x8a7: V539 = 0x7
0x8a9: V540 = 0x0
0x8ab: V541 = 0x100
0x8ae: V542 = EXP 0x100 0x0
0x8b0: V543 = S[0x7]
0x8b2: V544 = 0xff
0x8b4: V545 = MUL 0xff 0x1
0x8b5: V546 = NOT 0xff
0x8b6: V547 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V543
0x8b9: V548 = ISZERO 0x0
0x8ba: V549 = ISZERO 0x1
0x8bb: V550 = MUL 0x0 0x1
0x8bc: V551 = OR 0x0 V547
0x8be: S[0x7] = V551
---
Entry stack: [V10, 0x41f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, S0]

================================

Block 0x8c0
[0x8c0:0x8c0]
---
Predecessors: [0x804, 0x8a4]
Successors: [0x8c1]
---
0x8c0 JUMPDEST
---
0x8c0: JUMPDEST 
---
Entry stack: [V10, 0x41f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, S0]

================================

Block 0x8c1
[0x8c1:0x8c1]
---
Predecessors: [0x79d, 0x8c0]
Successors: [0x8c2]
---
0x8c1 JUMPDEST
---
0x8c1: JUMPDEST 
---
Entry stack: [V10, 0x41f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, S0]

================================

Block 0x8c2
[0x8c2:0x8c2]
---
Predecessors: [0x8c1]
Successors: [0x8c3]
---
0x8c2 JUMPDEST
---
0x8c2: JUMPDEST 
---
Entry stack: [V10, 0x41f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, S0]

================================

Block 0x8c3
[0x8c3:0x8c3]
---
Predecessors: [0x580, 0x8c2]
Successors: [0x8c4]
---
0x8c3 JUMPDEST
---
0x8c3: JUMPDEST 
---
Entry stack: [V10, 0x41f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x41f, S0]

================================

Block 0x8c4
[0x8c4:0x8c6]
---
Predecessors: [0x8c3]
Successors: [0x41f]
---
0x8c4 JUMPDEST
0x8c5 POP
0x8c6 JUMP
---
0x8c4: JUMPDEST 
0x8c6: JUMP 0x41f
---
Entry stack: [V10, 0x41f, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c7
[0x8c7:0x8ff]
---
Predecessors: []
Successors: []
---
0x8c7 STOP
0x8c8 LOG1
0x8c9 PUSH6 0x627a7a723058
0x8d0 SHA3
0x8d1 PUSH7 0x8de6578105748e
0x8d9 MISSING 0xf
0x8da SWAP7
0x8db MISSING 0xd2
0x8dc CALLVALUE
0x8dd ADD
0x8de MISSING 0xbd
0x8df SWAP9
0x8e0 DUP7
0x8e1 SWAP2
0x8e2 PUSH29 0x6a9f3121c9fdf19a562b4ee8d8280029
---
0x8c7: STOP 
0x8c8: LOG S0 S1 S2
0x8c9: V552 = 0x627a7a723058
0x8d0: V553 = SHA3 0x627a7a723058 S3
0x8d1: V554 = 0x8de6578105748e
0x8d9: MISSING 0xf
0x8db: MISSING 0xd2
0x8dc: V555 = CALLVALUE
0x8dd: V556 = ADD V555 S0
0x8de: MISSING 0xbd
0x8e2: V557 = 0x6a9f3121c9fdf19a562b4ee8d8280029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x8de6578105748e, V553, S7, S1, S2, S3, S4, S5, S6, S0, V556, 0x6a9f3121c9fdf19a562b4ee8d8280029, S1, S9, S6, S2, S3, S4, S5, S6, S7, S8, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x277
Exit block: 0x287
Body: 0x277, 0x27e, 0x27f, 0x287, 0x421, 0x42d, 0x43a, 0x4e4, 0x500, 0x501, 0x502

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x289
Exit block: 0x299
Body: 0x289, 0x290, 0x291, 0x299, 0x504

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x2af
Exit block: 0x2bf
Body: 0x2af, 0x2b6, 0x2b7, 0x2bf, 0x50a

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x301
Exit block: 0x311
Body: 0x301, 0x308, 0x309, 0x311, 0x530

Function 4:
Public function signature: 0x70a08231
Entry block: 0x353
Exit block: 0x387
Body: 0x353, 0x35a, 0x35b, 0x387, 0x556

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x39d
Exit block: 0x3ad
Body: 0x39d, 0x3a4, 0x3a5, 0x3ad, 0x56e

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x3c3
Exit block: 0x3d3
Body: 0x3c3, 0x3ca, 0x3cb, 0x3d3, 0x574

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x3e9
Exit block: 0x3f9
Body: 0x3e9, 0x3f0, 0x3f1, 0x3f9, 0x57a

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x40f
Exit block: 0x41f
Body: 0x40f, 0x416, 0x417, 0x41f, 0x580, 0x58e, 0x5a4, 0x634, 0x671, 0x6ed, 0x732, 0x733, 0x734, 0x74b, 0x79d, 0x7a3, 0x804, 0x8a4, 0x8c0, 0x8c1, 0x8c2, 0x8c3, 0x8c4

Function 9:
Public fallback function
Entry block: 0x97
Exit block: 0x275
Body: 0x97, 0x9b, 0xb5, 0xba, 0x165, 0x166, 0x1e7, 0x1e8, 0x1f5, 0x1f6, 0x272, 0x275

