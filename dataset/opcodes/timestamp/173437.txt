Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb4
0xa: JUMPI 0xb4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc0]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2d05d3f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc0
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2d05d3f
0x20: V14 = EQ V12 0x2d05d3f
0x21: V15 = 0xc0
0x24: JUMPI 0xc0 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xef]
---
0x25 DUP1
0x26 PUSH4 0x38af3eed
0x2b EQ
0x2c PUSH2 0xef
0x2f JUMPI
---
0x26: V16 = 0x38af3eed
0x2b: V17 = EQ 0x38af3eed V12
0x2c: V18 = 0xef
0x2f: JUMPI 0xef V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x11e]
---
0x30 DUP1
0x31 PUSH4 0x6e66f6e9
0x36 EQ
0x37 PUSH2 0x11e
0x3a JUMPI
---
0x31: V19 = 0x6e66f6e9
0x36: V20 = EQ 0x6e66f6e9 V12
0x37: V21 = 0x11e
0x3a: JUMPI 0x11e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x14d]
---
0x3b DUP1
0x3c PUSH4 0x78e97925
0x41 EQ
0x42 PUSH2 0x14d
0x45 JUMPI
---
0x3c: V22 = 0x78e97925
0x41: V23 = EQ 0x78e97925 V12
0x42: V24 = 0x14d
0x45: JUMPI 0x14d V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x172]
---
0x46 DUP1
0x47 PUSH4 0x86f32586
0x4c EQ
0x4d PUSH2 0x172
0x50 JUMPI
---
0x47: V25 = 0x86f32586
0x4c: V26 = EQ 0x86f32586 V12
0x4d: V27 = 0x172
0x50: JUMPI 0x172 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x187]
---
0x51 DUP1
0x52 PUSH4 0x936c9bc9
0x57 EQ
0x58 PUSH2 0x187
0x5b JUMPI
---
0x52: V28 = 0x936c9bc9
0x57: V29 = EQ 0x936c9bc9 V12
0x58: V30 = 0x187
0x5b: JUMPI 0x187 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1ac]
---
0x5c DUP1
0x5d PUSH4 0x9ef27b00
0x62 EQ
0x63 PUSH2 0x1ac
0x66 JUMPI
---
0x5d: V31 = 0x9ef27b00
0x62: V32 = EQ 0x9ef27b00 V12
0x63: V33 = 0x1ac
0x66: JUMPI 0x1ac V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d1]
---
0x67 DUP1
0x68 PUSH4 0xa035b1fe
0x6d EQ
0x6e PUSH2 0x1d1
0x71 JUMPI
---
0x68: V34 = 0xa035b1fe
0x6d: V35 = EQ 0xa035b1fe V12
0x6e: V36 = 0x1d1
0x71: JUMPI 0x1d1 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1f6]
---
0x72 DUP1
0x73 PUSH4 0xbef4876b
0x78 EQ
0x79 PUSH2 0x1f6
0x7c JUMPI
---
0x73: V37 = 0xbef4876b
0x78: V38 = EQ 0xbef4876b V12
0x79: V39 = 0x1f6
0x7c: JUMPI 0x1f6 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x20b]
---
0x7d DUP1
0x7e PUSH4 0xc19d93fb
0x83 EQ
0x84 PUSH2 0x20b
0x87 JUMPI
---
0x7e: V40 = 0xc19d93fb
0x83: V41 = EQ 0xc19d93fb V12
0x84: V42 = 0x20b
0x87: JUMPI 0x20b V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x242]
---
0x88 DUP1
0x89 PUSH4 0xc5c4744c
0x8e EQ
0x8f PUSH2 0x242
0x92 JUMPI
---
0x89: V43 = 0xc5c4744c
0x8e: V44 = EQ 0xc5c4744c V12
0x8f: V45 = 0x242
0x92: JUMPI 0x242 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0xb4]
---
0x93 DUP1
0x94 PUSH4 0xd7bb99ba
0x99 EQ
0x9a PUSH2 0xb4
0x9d JUMPI
---
0x94: V46 = 0xd7bb99ba
0x99: V47 = EQ 0xd7bb99ba V12
0x9a: V48 = 0xb4
0x9d: JUMPI 0xb4 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x271]
---
0x9e DUP1
0x9f PUSH4 0xefca2eed
0xa4 EQ
0xa5 PUSH2 0x271
0xa8 JUMPI
---
0x9f: V49 = 0xefca2eed
0xa4: V50 = EQ 0xefca2eed V12
0xa5: V51 = 0x271
0xa8: JUMPI 0x271 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x296]
---
0xa9 DUP1
0xaa PUSH4 0xfa4f5511
0xaf EQ
0xb0 PUSH2 0x296
0xb3 JUMPI
---
0xaa: V52 = 0xfa4f5511
0xaf: V53 = EQ 0xfa4f5511 V12
0xb0: V54 = 0x296
0xb3: JUMPI 0x296 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0x0, 0x93, 0xa9]
Successors: [0xb5]
---
0xb4 JUMPDEST
---
0xb4: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5
[0xb5:0xbc]
---
Predecessors: [0xb4]
Successors: [0x321]
---
0xb5 JUMPDEST
0xb6 PUSH2 0xbd
0xb9 PUSH2 0x321
0xbc JUMP
---
0xb5: JUMPDEST 
0xb6: V55 = 0xbd
0xb9: V56 = 0x321
0xbc: JUMP 0x321
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbd]
Exit stack: [V12, 0xbd]

================================

Block 0xbd
[0xbd:0xbd]
---
Predecessors: [0x4cc, 0x582, 0x720]
Successors: [0xbe]
---
0xbd JUMPDEST
---
0xbd: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0xbe
[0xbe:0xbf]
---
Predecessors: [0xbd]
Successors: []
---
0xbe JUMPDEST
0xbf STOP
---
0xbe: JUMPDEST 
0xbf: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0xc0
[0xc0:0xc6]
---
Predecessors: [0xb]
Successors: [0xc7, 0xcb]
---
0xc0 JUMPDEST
0xc1 CALLVALUE
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xc0: JUMPDEST 
0xc1: V57 = CALLVALUE
0xc2: V58 = ISZERO V57
0xc3: V59 = 0xcb
0xc6: JUMPI 0xcb V58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xc0]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V60 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0xc0]
Successors: [0x4cf]
---
0xcb JUMPDEST
0xcc PUSH2 0xd3
0xcf PUSH2 0x4cf
0xd2 JUMP
---
0xcb: JUMPDEST 
0xcc: V61 = 0xd3
0xcf: V62 = 0x4cf
0xd2: JUMP 0x4cf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [V12, 0xd3]

================================

Block 0xd3
[0xd3:0xee]
---
Predecessors: [0x4cf, 0x4de, 0x4ed]
Successors: []
---
0xd3 JUMPDEST
0xd4 PUSH1 0x40
0xd6 MLOAD
0xd7 PUSH1 0x1
0xd9 PUSH1 0xa0
0xdb PUSH1 0x2
0xdd EXP
0xde SUB
0xdf SWAP1
0xe0 SWAP2
0xe1 AND
0xe2 DUP2
0xe3 MSTORE
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb SWAP2
0xec SUB
0xed SWAP1
0xee RETURN
---
0xd3: JUMPDEST 
0xd4: V63 = 0x40
0xd6: V64 = M[0x40]
0xd7: V65 = 0x1
0xd9: V66 = 0xa0
0xdb: V67 = 0x2
0xdd: V68 = EXP 0x2 0xa0
0xde: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1: V70 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe3: M[V64] = V70
0xe4: V71 = 0x20
0xe6: V72 = ADD 0x20 V64
0xe7: V73 = 0x40
0xe9: V74 = M[0x40]
0xec: V75 = SUB V72 V74
0xee: RETURN V74 V75
---
Entry stack: [V12, 0xd3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd3]

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0x25]
Successors: [0xf6, 0xfa]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V76 = CALLVALUE
0xf1: V77 = ISZERO V76
0xf2: V78 = 0xfa
0xf5: JUMPI 0xfa V77
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xef]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V79 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0xef]
Successors: [0x4de]
---
0xfa JUMPDEST
0xfb PUSH2 0xd3
0xfe PUSH2 0x4de
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V80 = 0xd3
0xfe: V81 = 0x4de
0x101: JUMP 0x4de
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [V12, 0xd3]

================================

Block 0x102
[0x102:0x11d]
---
Predecessors: []
Successors: []
---
0x102 JUMPDEST
0x103 PUSH1 0x40
0x105 MLOAD
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e SWAP1
0x10f SWAP2
0x110 AND
0x111 DUP2
0x112 MSTORE
0x113 PUSH1 0x20
0x115 ADD
0x116 PUSH1 0x40
0x118 MLOAD
0x119 DUP1
0x11a SWAP2
0x11b SUB
0x11c SWAP1
0x11d RETURN
---
0x102: JUMPDEST 
0x103: V82 = 0x40
0x105: V83 = M[0x40]
0x106: V84 = 0x1
0x108: V85 = 0xa0
0x10a: V86 = 0x2
0x10c: V87 = EXP 0x2 0xa0
0x10d: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x110: V89 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x112: M[V83] = V89
0x113: V90 = 0x20
0x115: V91 = ADD 0x20 V83
0x116: V92 = 0x40
0x118: V93 = M[0x40]
0x11b: V94 = SUB V91 V93
0x11d: RETURN V93 V94
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x11e
[0x11e:0x124]
---
Predecessors: [0x30]
Successors: [0x125, 0x129]
---
0x11e JUMPDEST
0x11f CALLVALUE
0x120 ISZERO
0x121 PUSH2 0x129
0x124 JUMPI
---
0x11e: JUMPDEST 
0x11f: V95 = CALLVALUE
0x120: V96 = ISZERO V95
0x121: V97 = 0x129
0x124: JUMPI 0x129 V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x11e]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V98 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x129
[0x129:0x130]
---
Predecessors: [0x11e]
Successors: [0x4ed]
---
0x129 JUMPDEST
0x12a PUSH2 0xd3
0x12d PUSH2 0x4ed
0x130 JUMP
---
0x129: JUMPDEST 
0x12a: V99 = 0xd3
0x12d: V100 = 0x4ed
0x130: JUMP 0x4ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [V12, 0xd3]

================================

Block 0x131
[0x131:0x14c]
---
Predecessors: []
Successors: []
---
0x131 JUMPDEST
0x132 PUSH1 0x40
0x134 MLOAD
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d SWAP1
0x13e SWAP2
0x13f AND
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 SWAP2
0x14a SUB
0x14b SWAP1
0x14c RETURN
---
0x131: JUMPDEST 
0x132: V101 = 0x40
0x134: V102 = M[0x40]
0x135: V103 = 0x1
0x137: V104 = 0xa0
0x139: V105 = 0x2
0x13b: V106 = EXP 0x2 0xa0
0x13c: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V108 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x141: M[V102] = V108
0x142: V109 = 0x20
0x144: V110 = ADD 0x20 V102
0x145: V111 = 0x40
0x147: V112 = M[0x40]
0x14a: V113 = SUB V110 V112
0x14c: RETURN V112 V113
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x14d
[0x14d:0x153]
---
Predecessors: [0x3b]
Successors: [0x154, 0x158]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14d: JUMPDEST 
0x14e: V114 = CALLVALUE
0x14f: V115 = ISZERO V114
0x150: V116 = 0x158
0x153: JUMPI 0x158 V115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14d]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V117 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x158
[0x158:0x15f]
---
Predecessors: [0x14d]
Successors: [0x4fc]
---
0x158 JUMPDEST
0x159 PUSH2 0x160
0x15c PUSH2 0x4fc
0x15f JUMP
---
0x158: JUMPDEST 
0x159: V118 = 0x160
0x15c: V119 = 0x4fc
0x15f: JUMP 0x4fc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V12, 0x160]

================================

Block 0x160
[0x160:0x171]
---
Predecessors: [0x4fc, 0x584, 0x58a, 0x590, 0x72c, 0x732]
Successors: []
---
0x160 JUMPDEST
0x161 PUSH1 0x40
0x163 MLOAD
0x164 SWAP1
0x165 DUP2
0x166 MSTORE
0x167 PUSH1 0x20
0x169 ADD
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e SWAP2
0x16f SUB
0x170 SWAP1
0x171 RETURN
---
0x160: JUMPDEST 
0x161: V120 = 0x40
0x163: V121 = M[0x40]
0x166: M[V121] = S0
0x167: V122 = 0x20
0x169: V123 = ADD 0x20 V121
0x16a: V124 = 0x40
0x16c: V125 = M[0x40]
0x16f: V126 = SUB V123 V125
0x171: RETURN V125 V126
---
Entry stack: [V12, 0x160, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x160]

================================

Block 0x172
[0x172:0x178]
---
Predecessors: [0x46]
Successors: [0x179, 0x17d]
---
0x172 JUMPDEST
0x173 CALLVALUE
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x172: JUMPDEST 
0x173: V127 = CALLVALUE
0x174: V128 = ISZERO V127
0x175: V129 = 0x17d
0x178: JUMPI 0x17d V128
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x172]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V130 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17d
[0x17d:0x184]
---
Predecessors: [0x172]
Successors: [0x502]
---
0x17d JUMPDEST
0x17e PUSH2 0xbd
0x181 PUSH2 0x502
0x184 JUMP
---
0x17d: JUMPDEST 
0x17e: V131 = 0xbd
0x181: V132 = 0x502
0x184: JUMP 0x502
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbd]
Exit stack: [V12, 0xbd]

================================

Block 0x185
[0x185:0x186]
---
Predecessors: []
Successors: []
---
0x185 JUMPDEST
0x186 STOP
---
0x185: JUMPDEST 
0x186: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x187
[0x187:0x18d]
---
Predecessors: [0x51]
Successors: [0x18e, 0x192]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x187: JUMPDEST 
0x188: V133 = CALLVALUE
0x189: V134 = ISZERO V133
0x18a: V135 = 0x192
0x18d: JUMPI 0x192 V134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x187]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V136 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x192
[0x192:0x199]
---
Predecessors: [0x187]
Successors: [0x584]
---
0x192 JUMPDEST
0x193 PUSH2 0x160
0x196 PUSH2 0x584
0x199 JUMP
---
0x192: JUMPDEST 
0x193: V137 = 0x160
0x196: V138 = 0x584
0x199: JUMP 0x584
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V12, 0x160]

================================

Block 0x19a
[0x19a:0x1ab]
---
Predecessors: []
Successors: []
---
0x19a JUMPDEST
0x19b PUSH1 0x40
0x19d MLOAD
0x19e SWAP1
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 SWAP2
0x1a9 SUB
0x1aa SWAP1
0x1ab RETURN
---
0x19a: JUMPDEST 
0x19b: V139 = 0x40
0x19d: V140 = M[0x40]
0x1a0: M[V140] = S0
0x1a1: V141 = 0x20
0x1a3: V142 = ADD 0x20 V140
0x1a4: V143 = 0x40
0x1a6: V144 = M[0x40]
0x1a9: V145 = SUB V142 V144
0x1ab: RETURN V144 V145
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ac
[0x1ac:0x1b2]
---
Predecessors: [0x5c]
Successors: [0x1b3, 0x1b7]
---
0x1ac JUMPDEST
0x1ad CALLVALUE
0x1ae ISZERO
0x1af PUSH2 0x1b7
0x1b2 JUMPI
---
0x1ac: JUMPDEST 
0x1ad: V146 = CALLVALUE
0x1ae: V147 = ISZERO V146
0x1af: V148 = 0x1b7
0x1b2: JUMPI 0x1b7 V147
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b3
[0x1b3:0x1b6]
---
Predecessors: [0x1ac]
Successors: []
---
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 REVERT
---
0x1b3: V149 = 0x0
0x1b6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b7
[0x1b7:0x1be]
---
Predecessors: [0x1ac]
Successors: [0x58a]
---
0x1b7 JUMPDEST
0x1b8 PUSH2 0x160
0x1bb PUSH2 0x58a
0x1be JUMP
---
0x1b7: JUMPDEST 
0x1b8: V150 = 0x160
0x1bb: V151 = 0x58a
0x1be: JUMP 0x58a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V12, 0x160]

================================

Block 0x1bf
[0x1bf:0x1d0]
---
Predecessors: []
Successors: []
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc DUP1
0x1cd SWAP2
0x1ce SUB
0x1cf SWAP1
0x1d0 RETURN
---
0x1bf: JUMPDEST 
0x1c0: V152 = 0x40
0x1c2: V153 = M[0x40]
0x1c5: M[V153] = S0
0x1c6: V154 = 0x20
0x1c8: V155 = ADD 0x20 V153
0x1c9: V156 = 0x40
0x1cb: V157 = M[0x40]
0x1ce: V158 = SUB V155 V157
0x1d0: RETURN V157 V158
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d1
[0x1d1:0x1d7]
---
Predecessors: [0x67]
Successors: [0x1d8, 0x1dc]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V159 = CALLVALUE
0x1d3: V160 = ISZERO V159
0x1d4: V161 = 0x1dc
0x1d7: JUMPI 0x1dc V160
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V162 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x1d1]
Successors: [0x590]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x160
0x1e0 PUSH2 0x590
0x1e3 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V163 = 0x160
0x1e0: V164 = 0x590
0x1e3: JUMP 0x590
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V12, 0x160]

================================

Block 0x1e4
[0x1e4:0x1f5]
---
Predecessors: []
Successors: []
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 SWAP1
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee PUSH1 0x40
0x1f0 MLOAD
0x1f1 DUP1
0x1f2 SWAP2
0x1f3 SUB
0x1f4 SWAP1
0x1f5 RETURN
---
0x1e4: JUMPDEST 
0x1e5: V165 = 0x40
0x1e7: V166 = M[0x40]
0x1ea: M[V166] = S0
0x1eb: V167 = 0x20
0x1ed: V168 = ADD 0x20 V166
0x1ee: V169 = 0x40
0x1f0: V170 = M[0x40]
0x1f3: V171 = SUB V168 V170
0x1f5: RETURN V170 V171
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f6
[0x1f6:0x1fc]
---
Predecessors: [0x72]
Successors: [0x1fd, 0x201]
---
0x1f6 JUMPDEST
0x1f7 CALLVALUE
0x1f8 ISZERO
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V172 = CALLVALUE
0x1f8: V173 = ISZERO V172
0x1f9: V174 = 0x201
0x1fc: JUMPI 0x201 V173
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x1f6]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V175 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x201
[0x201:0x208]
---
Predecessors: [0x1f6]
Successors: [0x596]
---
0x201 JUMPDEST
0x202 PUSH2 0xbd
0x205 PUSH2 0x596
0x208 JUMP
---
0x201: JUMPDEST 
0x202: V176 = 0xbd
0x205: V177 = 0x596
0x208: JUMP 0x596
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xbd]
Exit stack: [V12, 0xbd]

================================

Block 0x209
[0x209:0x20a]
---
Predecessors: []
Successors: []
---
0x209 JUMPDEST
0x20a STOP
---
0x209: JUMPDEST 
0x20a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20b
[0x20b:0x211]
---
Predecessors: [0x7d]
Successors: [0x212, 0x216]
---
0x20b JUMPDEST
0x20c CALLVALUE
0x20d ISZERO
0x20e PUSH2 0x216
0x211 JUMPI
---
0x20b: JUMPDEST 
0x20c: V178 = CALLVALUE
0x20d: V179 = ISZERO V178
0x20e: V180 = 0x216
0x211: JUMPI 0x216 V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x20b]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V181 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x216
[0x216:0x21d]
---
Predecessors: [0x20b]
Successors: [0x723]
---
0x216 JUMPDEST
0x217 PUSH2 0x21e
0x21a PUSH2 0x723
0x21d JUMP
---
0x216: JUMPDEST 
0x217: V182 = 0x21e
0x21a: V183 = 0x723
0x21d: JUMP 0x723
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21e]
Exit stack: [V12, 0x21e]

================================

Block 0x21e
[0x21e:0x22c]
---
Predecessors: [0x723]
Successors: [0x22d, 0x22e]
---
0x21e JUMPDEST
0x21f PUSH1 0x40
0x221 MLOAD
0x222 DUP1
0x223 DUP3
0x224 PUSH1 0x1
0x226 DUP2
0x227 GT
0x228 ISZERO
0x229 PUSH2 0x22e
0x22c JUMPI
---
0x21e: JUMPDEST 
0x21f: V184 = 0x40
0x221: V185 = M[0x40]
0x224: V186 = 0x1
0x227: V187 = GT V664 0x1
0x228: V188 = ISZERO V187
0x229: V189 = 0x22e
0x22c: JUMPI 0x22e V188
---
Entry stack: [V12, 0x21e, V664]
Stack pops: 1
Stack additions: [S0, V185, V185, S0]
Exit stack: [V12, 0x21e, V664, V185, V185, V664]

================================

Block 0x22d
[0x22d:0x22d]
---
Predecessors: [0x21e]
Successors: []
---
0x22d INVALID
---
0x22d: INVALID 
---
Entry stack: [V12, 0x21e, V664, V185, V185, V664]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x21e, V664, V185, V185, V664]

================================

Block 0x22e
[0x22e:0x241]
---
Predecessors: [0x21e]
Successors: []
---
0x22e JUMPDEST
0x22f PUSH1 0xff
0x231 AND
0x232 DUP2
0x233 MSTORE
0x234 PUSH1 0x20
0x236 ADD
0x237 SWAP2
0x238 POP
0x239 POP
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e SWAP2
0x23f SUB
0x240 SWAP1
0x241 RETURN
---
0x22e: JUMPDEST 
0x22f: V190 = 0xff
0x231: V191 = AND 0xff V664
0x233: M[V185] = V191
0x234: V192 = 0x20
0x236: V193 = ADD 0x20 V185
0x23a: V194 = 0x40
0x23c: V195 = M[0x40]
0x23f: V196 = SUB V193 V195
0x241: RETURN V195 V196
---
Entry stack: [V12, 0x21e, V664, V185, V185, V664]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x21e]

================================

Block 0x242
[0x242:0x248]
---
Predecessors: [0x88]
Successors: [0x249, 0x24d]
---
0x242 JUMPDEST
0x243 CALLVALUE
0x244 ISZERO
0x245 PUSH2 0x24d
0x248 JUMPI
---
0x242: JUMPDEST 
0x243: V197 = CALLVALUE
0x244: V198 = ISZERO V197
0x245: V199 = 0x24d
0x248: JUMPI 0x24d V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x249
[0x249:0x24c]
---
Predecessors: [0x242]
Successors: []
---
0x249 PUSH1 0x0
0x24b DUP1
0x24c REVERT
---
0x249: V200 = 0x0
0x24c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24d
[0x24d:0x254]
---
Predecessors: [0x242]
Successors: [0x72c]
---
0x24d JUMPDEST
0x24e PUSH2 0x160
0x251 PUSH2 0x72c
0x254 JUMP
---
0x24d: JUMPDEST 
0x24e: V201 = 0x160
0x251: V202 = 0x72c
0x254: JUMP 0x72c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V12, 0x160]

================================

Block 0x255
[0x255:0x26e]
---
Predecessors: []
Successors: [0x321]
---
0x255 JUMPDEST
0x256 PUSH1 0x40
0x258 MLOAD
0x259 SWAP1
0x25a DUP2
0x25b MSTORE
0x25c PUSH1 0x20
0x25e ADD
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 SWAP2
0x264 SUB
0x265 SWAP1
0x266 RETURN
0x267 JUMPDEST
0x268 PUSH2 0xbd
0x26b PUSH2 0x321
0x26e JUMP
---
0x255: JUMPDEST 
0x256: V203 = 0x40
0x258: V204 = M[0x40]
0x25b: M[V204] = S0
0x25c: V205 = 0x20
0x25e: V206 = ADD 0x20 V204
0x25f: V207 = 0x40
0x261: V208 = M[0x40]
0x264: V209 = SUB V206 V208
0x266: RETURN V208 V209
0x267: JUMPDEST 
0x268: V210 = 0xbd
0x26b: V211 = 0x321
0x26e: JUMP 0x321
---
Entry stack: []
Stack pops: 2
Stack additions: [0xbd]
Exit stack: []

================================

Block 0x26f
[0x26f:0x270]
---
Predecessors: []
Successors: []
---
0x26f JUMPDEST
0x270 STOP
---
0x26f: JUMPDEST 
0x270: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x271
[0x271:0x277]
---
Predecessors: [0x9e]
Successors: [0x278, 0x27c]
---
0x271 JUMPDEST
0x272 CALLVALUE
0x273 ISZERO
0x274 PUSH2 0x27c
0x277 JUMPI
---
0x271: JUMPDEST 
0x272: V212 = CALLVALUE
0x273: V213 = ISZERO V212
0x274: V214 = 0x27c
0x277: JUMPI 0x27c V213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x278
[0x278:0x27b]
---
Predecessors: [0x271]
Successors: []
---
0x278 PUSH1 0x0
0x27a DUP1
0x27b REVERT
---
0x278: V215 = 0x0
0x27b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27c
[0x27c:0x283]
---
Predecessors: [0x271]
Successors: [0x732]
---
0x27c JUMPDEST
0x27d PUSH2 0x160
0x280 PUSH2 0x732
0x283 JUMP
---
0x27c: JUMPDEST 
0x27d: V216 = 0x160
0x280: V217 = 0x732
0x283: JUMP 0x732
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V12, 0x160]

================================

Block 0x284
[0x284:0x295]
---
Predecessors: []
Successors: []
---
0x284 JUMPDEST
0x285 PUSH1 0x40
0x287 MLOAD
0x288 SWAP1
0x289 DUP2
0x28a MSTORE
0x28b PUSH1 0x20
0x28d ADD
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 SWAP2
0x293 SUB
0x294 SWAP1
0x295 RETURN
---
0x284: JUMPDEST 
0x285: V218 = 0x40
0x287: V219 = M[0x40]
0x28a: M[V219] = S0
0x28b: V220 = 0x20
0x28d: V221 = ADD 0x20 V219
0x28e: V222 = 0x40
0x290: V223 = M[0x40]
0x293: V224 = SUB V221 V223
0x295: RETURN V223 V224
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x296
[0x296:0x29c]
---
Predecessors: [0xa9]
Successors: [0x29d, 0x2a1]
---
0x296 JUMPDEST
0x297 CALLVALUE
0x298 ISZERO
0x299 PUSH2 0x2a1
0x29c JUMPI
---
0x296: JUMPDEST 
0x297: V225 = CALLVALUE
0x298: V226 = ISZERO V225
0x299: V227 = 0x2a1
0x29c: JUMPI 0x2a1 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x296]
Successors: []
---
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 REVERT
---
0x29d: V228 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2a8]
---
Predecessors: [0x296]
Successors: [0x738]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x2a9
0x2a5 PUSH2 0x738
0x2a8 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V229 = 0x2a9
0x2a5: V230 = 0x738
0x2a8: JUMP 0x738
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a9]
Exit stack: [V12, 0x2a9]

================================

Block 0x2a9
[0x2a9:0x2cc]
---
Predecessors: [0x7ce]
Successors: [0x2cd]
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad PUSH1 0x20
0x2af DUP1
0x2b0 DUP3
0x2b1 MSTORE
0x2b2 DUP2
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 ADD
0x2b6 DUP4
0x2b7 DUP2
0x2b8 DUP2
0x2b9 MLOAD
0x2ba DUP2
0x2bb MSTORE
0x2bc PUSH1 0x20
0x2be ADD
0x2bf SWAP2
0x2c0 POP
0x2c1 DUP1
0x2c2 MLOAD
0x2c3 SWAP1
0x2c4 PUSH1 0x20
0x2c6 ADD
0x2c7 SWAP1
0x2c8 DUP1
0x2c9 DUP4
0x2ca DUP4
0x2cb PUSH1 0x0
---
0x2a9: JUMPDEST 
0x2aa: V231 = 0x40
0x2ac: V232 = M[0x40]
0x2ad: V233 = 0x20
0x2b1: M[V232] = 0x20
0x2b5: V234 = ADD V232 0x20
0x2b9: V235 = M[V689]
0x2bb: M[V234] = V235
0x2bc: V236 = 0x20
0x2be: V237 = ADD 0x20 V234
0x2c2: V238 = M[V689]
0x2c4: V239 = 0x20
0x2c6: V240 = ADD 0x20 V689
0x2cb: V241 = 0x0
---
Entry stack: [V12, 0x2a9, V689]
Stack pops: 1
Stack additions: [S0, V232, V232, V237, V240, V238, V238, V237, V240, 0x0]
Exit stack: [V12, 0x2a9, V689, V232, V232, V237, V240, V238, V238, V237, V240, 0x0]

================================

Block 0x2cd
[0x2cd:0x2d5]
---
Predecessors: [0x2a9, 0x2de]
Successors: [0x2d6, 0x2e6]
---
0x2cd JUMPDEST
0x2ce DUP4
0x2cf DUP2
0x2d0 LT
0x2d1 ISZERO
0x2d2 PUSH2 0x2e6
0x2d5 JUMPI
---
0x2cd: JUMPDEST 
0x2d0: V242 = LT S0 V238
0x2d1: V243 = ISZERO V242
0x2d2: V244 = 0x2e6
0x2d5: JUMPI 0x2e6 V243
---
Entry stack: [V12, 0x2a9, V689, V232, V232, V237, V240, V238, V238, V237, V240, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x2a9, V689, V232, V232, V237, V240, V238, V238, V237, V240, S0]

================================

Block 0x2d6
[0x2d6:0x2dd]
---
Predecessors: [0x2cd]
Successors: [0x2de]
---
0x2d6 DUP1
0x2d7 DUP3
0x2d8 ADD
0x2d9 MLOAD
0x2da DUP2
0x2db DUP5
0x2dc ADD
0x2dd MSTORE
---
0x2d8: V245 = ADD V240 S0
0x2d9: V246 = M[V245]
0x2dc: V247 = ADD V237 S0
0x2dd: M[V247] = V246
---
Entry stack: [V12, 0x2a9, V689, V232, V232, V237, V240, V238, V238, V237, V240, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x2a9, V689, V232, V232, V237, V240, V238, V238, V237, V240, S0]

================================

Block 0x2de
[0x2de:0x2e5]
---
Predecessors: [0x2d6]
Successors: [0x2cd]
---
0x2de JUMPDEST
0x2df PUSH1 0x20
0x2e1 ADD
0x2e2 PUSH2 0x2cd
0x2e5 JUMP
---
0x2de: JUMPDEST 
0x2df: V248 = 0x20
0x2e1: V249 = ADD 0x20 S0
0x2e2: V250 = 0x2cd
0x2e5: JUMP 0x2cd
---
Entry stack: [V12, 0x2a9, V689, V232, V232, V237, V240, V238, V238, V237, V240, S0]
Stack pops: 1
Stack additions: [V249]
Exit stack: [V12, 0x2a9, V689, V232, V232, V237, V240, V238, V238, V237, V240, V249]

================================

Block 0x2e6
[0x2e6:0x2f9]
---
Predecessors: [0x2cd]
Successors: [0x2fa, 0x313]
---
0x2e6 JUMPDEST
0x2e7 POP
0x2e8 POP
0x2e9 POP
0x2ea POP
0x2eb SWAP1
0x2ec POP
0x2ed SWAP1
0x2ee DUP2
0x2ef ADD
0x2f0 SWAP1
0x2f1 PUSH1 0x1f
0x2f3 AND
0x2f4 DUP1
0x2f5 ISZERO
0x2f6 PUSH2 0x313
0x2f9 JUMPI
---
0x2e6: JUMPDEST 
0x2ef: V251 = ADD V238 V237
0x2f1: V252 = 0x1f
0x2f3: V253 = AND 0x1f V238
0x2f5: V254 = ISZERO V253
0x2f6: V255 = 0x313
0x2f9: JUMPI 0x313 V254
---
Entry stack: [V12, 0x2a9, V689, V232, V232, V237, V240, V238, V238, V237, V240, S0]
Stack pops: 7
Stack additions: [V251, V253]
Exit stack: [V12, 0x2a9, V689, V232, V232, V251, V253]

================================

Block 0x2fa
[0x2fa:0x312]
---
Predecessors: [0x2e6]
Successors: [0x313]
---
0x2fa DUP1
0x2fb DUP3
0x2fc SUB
0x2fd DUP1
0x2fe MLOAD
0x2ff PUSH1 0x1
0x301 DUP4
0x302 PUSH1 0x20
0x304 SUB
0x305 PUSH2 0x100
0x308 EXP
0x309 SUB
0x30a NOT
0x30b AND
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP2
0x312 POP
---
0x2fc: V256 = SUB V251 V253
0x2fe: V257 = M[V256]
0x2ff: V258 = 0x1
0x302: V259 = 0x20
0x304: V260 = SUB 0x20 V253
0x305: V261 = 0x100
0x308: V262 = EXP 0x100 V260
0x309: V263 = SUB V262 0x1
0x30a: V264 = NOT V263
0x30b: V265 = AND V264 V257
0x30d: M[V256] = V265
0x30e: V266 = 0x20
0x310: V267 = ADD 0x20 V256
---
Entry stack: [V12, 0x2a9, V689, V232, V232, V251, V253]
Stack pops: 2
Stack additions: [V267, S0]
Exit stack: [V12, 0x2a9, V689, V232, V232, V267, V253]

================================

Block 0x313
[0x313:0x320]
---
Predecessors: [0x2e6, 0x2fa]
Successors: []
---
0x313 JUMPDEST
0x314 POP
0x315 SWAP3
0x316 POP
0x317 POP
0x318 POP
0x319 PUSH1 0x40
0x31b MLOAD
0x31c DUP1
0x31d SWAP2
0x31e SUB
0x31f SWAP1
0x320 RETURN
---
0x313: JUMPDEST 
0x319: V268 = 0x40
0x31b: V269 = M[0x40]
0x31e: V270 = SUB S1 V269
0x320: RETURN V269 V270
---
Entry stack: [V12, 0x2a9, V689, V232, V232, S1, V253]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x2a9]

================================

Block 0x321
[0x321:0x325]
---
Predecessors: [0xb5, 0x255]
Successors: [0x326]
---
0x321 JUMPDEST
0x322 PUSH1 0x0
0x324 PUSH1 0x1
---
0x321: JUMPDEST 
0x322: V271 = 0x0
0x324: V272 = 0x1
---
Entry stack: [V12, 0xbd]
Stack pops: 0
Stack additions: [0x0, 0x1]
Exit stack: [V12, 0xbd, 0x0, 0x1]

================================

Block 0x326
[0x326:0x335]
---
Predecessors: [0x321]
Successors: [0x336, 0x337]
---
0x326 JUMPDEST
0x327 PUSH1 0x0
0x329 SLOAD
0x32a PUSH1 0xff
0x32c AND
0x32d PUSH1 0x1
0x32f DUP2
0x330 GT
0x331 ISZERO
0x332 PUSH2 0x337
0x335 JUMPI
---
0x326: JUMPDEST 
0x327: V273 = 0x0
0x329: V274 = S[0x0]
0x32a: V275 = 0xff
0x32c: V276 = AND 0xff V274
0x32d: V277 = 0x1
0x330: V278 = GT V276 0x1
0x331: V279 = ISZERO V278
0x332: V280 = 0x337
0x335: JUMPI 0x337 V279
---
Entry stack: [V12, 0xbd, 0x0, 0x1]
Stack pops: 0
Stack additions: [V276]
Exit stack: [V12, 0xbd, 0x0, 0x1, V276]

================================

Block 0x336
[0x336:0x336]
---
Predecessors: [0x326]
Successors: []
---
0x336 INVALID
---
0x336: INVALID 
---
Entry stack: [V12, 0xbd, 0x0, 0x1, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, 0x0, 0x1, V276]

================================

Block 0x337
[0x337:0x33d]
---
Predecessors: [0x326]
Successors: [0x33e, 0x342]
---
0x337 JUMPDEST
0x338 EQ
0x339 ISZERO
0x33a PUSH2 0x342
0x33d JUMPI
---
0x337: JUMPDEST 
0x338: V281 = EQ V276 0x1
0x339: V282 = ISZERO V281
0x33a: V283 = 0x342
0x33d: JUMPI 0x342 V282
---
Entry stack: [V12, 0xbd, 0x0, 0x1, V276]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xbd, 0x0]

================================

Block 0x33e
[0x33e:0x341]
---
Predecessors: [0x337]
Successors: []
---
0x33e PUSH1 0x0
0x340 DUP1
0x341 REVERT
---
0x33e: V284 = 0x0
0x341: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, 0x0]

================================

Block 0x342
[0x342:0x354]
---
Predecessors: [0x337]
Successors: [0x7d6]
---
0x342 JUMPDEST
0x343 PUSH1 0x3
0x345 SLOAD
0x346 PUSH2 0x355
0x349 SWAP1
0x34a CALLVALUE
0x34b PUSH4 0xffffffff
0x350 PUSH2 0x7d6
0x353 AND
0x354 JUMP
---
0x342: JUMPDEST 
0x343: V285 = 0x3
0x345: V286 = S[0x3]
0x346: V287 = 0x355
0x34a: V288 = CALLVALUE
0x34b: V289 = 0xffffffff
0x350: V290 = 0x7d6
0x353: V291 = AND 0x7d6 0xffffffff
0x354: JUMP 0x7d6
---
Entry stack: [V12, 0xbd, 0x0]
Stack pops: 0
Stack additions: [0x355, V286, V288]
Exit stack: [V12, 0xbd, 0x0, 0x355, V286, V288]

================================

Block 0x355
[0x355:0x36b]
---
Predecessors: [0x7e9]
Successors: [0x7f0]
---
0x355 JUMPDEST
0x356 PUSH1 0x3
0x358 SSTORE
0x359 PUSH1 0x2
0x35b SLOAD
0x35c PUSH2 0x36c
0x35f SWAP1
0x360 CALLVALUE
0x361 SWAP1
0x362 PUSH4 0xffffffff
0x367 PUSH2 0x7f0
0x36a AND
0x36b JUMP
---
0x355: JUMPDEST 
0x356: V292 = 0x3
0x358: S[0x3] = S0
0x359: V293 = 0x2
0x35b: V294 = S[0x2]
0x35c: V295 = 0x36c
0x360: V296 = CALLVALUE
0x362: V297 = 0xffffffff
0x367: V298 = 0x7f0
0x36a: V299 = AND 0x7f0 0xffffffff
0x36b: JUMP 0x7f0
---
Entry stack: [V12, 0xbd, S1, S0]
Stack pops: 1
Stack additions: [0x36c, V296, V294]
Exit stack: [V12, 0xbd, S1, 0x36c, V296, V294]

================================

Block 0x36c
[0x36c:0x381]
---
Predecessors: [0x7e9]
Successors: [0x7d6]
---
0x36c JUMPDEST
0x36d PUSH1 0x4
0x36f SLOAD
0x370 SWAP1
0x371 SWAP2
0x372 POP
0x373 PUSH2 0x382
0x376 SWAP1
0x377 DUP3
0x378 PUSH4 0xffffffff
0x37d PUSH2 0x7d6
0x380 AND
0x381 JUMP
---
0x36c: JUMPDEST 
0x36d: V300 = 0x4
0x36f: V301 = S[0x4]
0x373: V302 = 0x382
0x378: V303 = 0xffffffff
0x37d: V304 = 0x7d6
0x380: V305 = AND 0x7d6 0xffffffff
0x381: JUMP 0x7d6
---
Entry stack: [V12, 0xbd, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x382, V301, S0]
Exit stack: [V12, 0xbd, S0, 0x382, V301, S0]

================================

Block 0x382
[0x382:0x3b4]
---
Predecessors: [0x7e9]
Successors: [0x3b5, 0x3b9]
---
0x382 JUMPDEST
0x383 PUSH1 0x4
0x385 SSTORE
0x386 PUSH1 0x9
0x388 SLOAD
0x389 PUSH1 0x1
0x38b PUSH1 0xa0
0x38d PUSH1 0x2
0x38f EXP
0x390 SUB
0x391 AND
0x392 CALLVALUE
0x393 DUP1
0x394 ISZERO
0x395 PUSH2 0x8fc
0x398 MUL
0x399 SWAP1
0x39a PUSH1 0x40
0x39c MLOAD
0x39d PUSH1 0x0
0x39f PUSH1 0x40
0x3a1 MLOAD
0x3a2 DUP1
0x3a3 DUP4
0x3a4 SUB
0x3a5 DUP2
0x3a6 DUP6
0x3a7 DUP9
0x3a8 DUP9
0x3a9 CALL
0x3aa SWAP4
0x3ab POP
0x3ac POP
0x3ad POP
0x3ae POP
0x3af ISZERO
0x3b0 ISZERO
0x3b1 PUSH2 0x3b9
0x3b4 JUMPI
---
0x382: JUMPDEST 
0x383: V306 = 0x4
0x385: S[0x4] = S0
0x386: V307 = 0x9
0x388: V308 = S[0x9]
0x389: V309 = 0x1
0x38b: V310 = 0xa0
0x38d: V311 = 0x2
0x38f: V312 = EXP 0x2 0xa0
0x390: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x391: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x392: V315 = CALLVALUE
0x394: V316 = ISZERO V315
0x395: V317 = 0x8fc
0x398: V318 = MUL 0x8fc V316
0x39a: V319 = 0x40
0x39c: V320 = M[0x40]
0x39d: V321 = 0x0
0x39f: V322 = 0x40
0x3a1: V323 = M[0x40]
0x3a4: V324 = SUB V320 V323
0x3a9: V325 = CALL V318 V314 V315 V323 V324 V323 0x0
0x3af: V326 = ISZERO V325
0x3b0: V327 = ISZERO V326
0x3b1: V328 = 0x3b9
0x3b4: JUMPI 0x3b9 V327
---
Entry stack: [V12, 0xbd, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xbd, S1]

================================

Block 0x3b5
[0x3b5:0x3b8]
---
Predecessors: [0x382]
Successors: []
---
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 REVERT
---
0x3b5: V329 = 0x0
0x3b8: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S0]

================================

Block 0x3b9
[0x3b9:0x40a]
---
Predecessors: [0x382]
Successors: [0x40b, 0x40f]
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x7
0x3bc SLOAD
0x3bd PUSH1 0x1
0x3bf PUSH1 0xa0
0x3c1 PUSH1 0x2
0x3c3 EXP
0x3c4 SUB
0x3c5 AND
0x3c6 PUSH4 0xa9059cbb
0x3cb CALLER
0x3cc DUP4
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 PUSH1 0xe0
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 PUSH4 0xffffffff
0x3da DUP6
0x3db AND
0x3dc MUL
0x3dd DUP2
0x3de MSTORE
0x3df PUSH1 0x1
0x3e1 PUSH1 0xa0
0x3e3 PUSH1 0x2
0x3e5 EXP
0x3e6 SUB
0x3e7 SWAP1
0x3e8 SWAP3
0x3e9 AND
0x3ea PUSH1 0x4
0x3ec DUP4
0x3ed ADD
0x3ee MSTORE
0x3ef PUSH1 0x24
0x3f1 DUP3
0x3f2 ADD
0x3f3 MSTORE
0x3f4 PUSH1 0x44
0x3f6 ADD
0x3f7 PUSH1 0x0
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP1
0x3fd DUP4
0x3fe SUB
0x3ff DUP2
0x400 PUSH1 0x0
0x402 DUP8
0x403 DUP1
0x404 EXTCODESIZE
0x405 ISZERO
0x406 ISZERO
0x407 PUSH2 0x40f
0x40a JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V330 = 0x7
0x3bc: V331 = S[0x7]
0x3bd: V332 = 0x1
0x3bf: V333 = 0xa0
0x3c1: V334 = 0x2
0x3c3: V335 = EXP 0x2 0xa0
0x3c4: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c5: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x3c6: V338 = 0xa9059cbb
0x3cb: V339 = CALLER
0x3cd: V340 = 0x40
0x3cf: V341 = M[0x40]
0x3d0: V342 = 0xe0
0x3d2: V343 = 0x2
0x3d4: V344 = EXP 0x2 0xe0
0x3d5: V345 = 0xffffffff
0x3db: V346 = AND 0xa9059cbb 0xffffffff
0x3dc: V347 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3de: M[V341] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3df: V348 = 0x1
0x3e1: V349 = 0xa0
0x3e3: V350 = 0x2
0x3e5: V351 = EXP 0x2 0xa0
0x3e6: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e9: V353 = AND V339 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V354 = 0x4
0x3ed: V355 = ADD V341 0x4
0x3ee: M[V355] = V353
0x3ef: V356 = 0x24
0x3f2: V357 = ADD V341 0x24
0x3f3: M[V357] = S0
0x3f4: V358 = 0x44
0x3f6: V359 = ADD 0x44 V341
0x3f7: V360 = 0x0
0x3f9: V361 = 0x40
0x3fb: V362 = M[0x40]
0x3fe: V363 = SUB V359 V362
0x400: V364 = 0x0
0x404: V365 = EXTCODESIZE V337
0x405: V366 = ISZERO V365
0x406: V367 = ISZERO V366
0x407: V368 = 0x40f
0x40a: JUMPI 0x40f V367
---
Entry stack: [V12, 0xbd, S0]
Stack pops: 1
Stack additions: [S0, V337, 0xa9059cbb, V359, 0x0, V362, V363, V362, 0x0, V337]
Exit stack: [V12, 0xbd, S0, V337, 0xa9059cbb, V359, 0x0, V362, V363, V362, 0x0, V337]

================================

Block 0x40b
[0x40b:0x40e]
---
Predecessors: [0x3b9]
Successors: []
---
0x40b PUSH1 0x0
0x40d DUP1
0x40e REVERT
---
0x40b: V369 = 0x0
0x40e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, S9, V337, 0xa9059cbb, V359, 0x0, V362, V363, V362, 0x0, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S9, V337, 0xa9059cbb, V359, 0x0, V362, V363, V362, 0x0, V337]

================================

Block 0x40f
[0x40f:0x41b]
---
Predecessors: [0x3b9]
Successors: [0x41c, 0x420]
---
0x40f JUMPDEST
0x410 PUSH2 0x2c6
0x413 GAS
0x414 SUB
0x415 CALL
0x416 ISZERO
0x417 ISZERO
0x418 PUSH2 0x420
0x41b JUMPI
---
0x40f: JUMPDEST 
0x410: V370 = 0x2c6
0x413: V371 = GAS
0x414: V372 = SUB V371 0x2c6
0x415: V373 = CALL V372 V337 0x0 V362 V363 V362 0x0
0x416: V374 = ISZERO V373
0x417: V375 = ISZERO V374
0x418: V376 = 0x420
0x41b: JUMPI 0x420 V375
---
Entry stack: [V12, 0xbd, S9, V337, 0xa9059cbb, V359, 0x0, V362, V363, V362, 0x0, V337]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbd, S9, V337, 0xa9059cbb, V359]

================================

Block 0x41c
[0x41c:0x41f]
---
Predecessors: [0x40f]
Successors: []
---
0x41c PUSH1 0x0
0x41e DUP1
0x41f REVERT
---
0x41c: V377 = 0x0
0x41f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, S3, V337, 0xa9059cbb, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S3, V337, 0xa9059cbb, V359]

================================

Block 0x420
[0x420:0x4c9]
---
Predecessors: [0x40f]
Successors: [0x502]
---
0x420 JUMPDEST
0x421 POP
0x422 POP
0x423 POP
0x424 PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x445 CALLER
0x446 CALLVALUE
0x447 PUSH1 0x3
0x449 SLOAD
0x44a PUSH1 0x40
0x44c MLOAD
0x44d DUP1
0x44e DUP5
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 AND
0x458 PUSH1 0x1
0x45a PUSH1 0xa0
0x45c PUSH1 0x2
0x45e EXP
0x45f SUB
0x460 AND
0x461 DUP2
0x462 MSTORE
0x463 PUSH1 0x20
0x465 ADD
0x466 DUP4
0x467 DUP2
0x468 MSTORE
0x469 PUSH1 0x20
0x46b ADD
0x46c DUP3
0x46d DUP2
0x46e MSTORE
0x46f PUSH1 0x20
0x471 ADD
0x472 SWAP4
0x473 POP
0x474 POP
0x475 POP
0x476 POP
0x477 PUSH1 0x40
0x479 MLOAD
0x47a DUP1
0x47b SWAP2
0x47c SUB
0x47d SWAP1
0x47e LOG1
0x47f PUSH32 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0x4a0 CALLER
0x4a1 DUP3
0x4a2 PUSH1 0x40
0x4a4 MLOAD
0x4a5 PUSH1 0x1
0x4a7 PUSH1 0xa0
0x4a9 PUSH1 0x2
0x4ab EXP
0x4ac SUB
0x4ad SWAP1
0x4ae SWAP3
0x4af AND
0x4b0 DUP3
0x4b1 MSTORE
0x4b2 PUSH1 0x20
0x4b4 DUP3
0x4b5 ADD
0x4b6 MSTORE
0x4b7 PUSH1 0x40
0x4b9 SWAP1
0x4ba DUP2
0x4bb ADD
0x4bc SWAP1
0x4bd MLOAD
0x4be DUP1
0x4bf SWAP2
0x4c0 SUB
0x4c1 SWAP1
0x4c2 LOG1
0x4c3 PUSH2 0x4ca
0x4c6 PUSH2 0x502
0x4c9 JUMP
---
0x420: JUMPDEST 
0x424: V378 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x445: V379 = CALLER
0x446: V380 = CALLVALUE
0x447: V381 = 0x3
0x449: V382 = S[0x3]
0x44a: V383 = 0x40
0x44c: V384 = M[0x40]
0x44f: V385 = 0x1
0x451: V386 = 0xa0
0x453: V387 = 0x2
0x455: V388 = EXP 0x2 0xa0
0x456: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x458: V391 = 0x1
0x45a: V392 = 0xa0
0x45c: V393 = 0x2
0x45e: V394 = EXP 0x2 0xa0
0x45f: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x460: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x462: M[V384] = V396
0x463: V397 = 0x20
0x465: V398 = ADD 0x20 V384
0x468: M[V398] = V380
0x469: V399 = 0x20
0x46b: V400 = ADD 0x20 V398
0x46e: M[V400] = V382
0x46f: V401 = 0x20
0x471: V402 = ADD 0x20 V400
0x477: V403 = 0x40
0x479: V404 = M[0x40]
0x47c: V405 = SUB V402 V404
0x47e: LOG V404 V405 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x47f: V406 = 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0x4a0: V407 = CALLER
0x4a2: V408 = 0x40
0x4a4: V409 = M[0x40]
0x4a5: V410 = 0x1
0x4a7: V411 = 0xa0
0x4a9: V412 = 0x2
0x4ab: V413 = EXP 0x2 0xa0
0x4ac: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4af: V415 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x4b1: M[V409] = V415
0x4b2: V416 = 0x20
0x4b5: V417 = ADD V409 0x20
0x4b6: M[V417] = S3
0x4b7: V418 = 0x40
0x4bb: V419 = ADD 0x40 V409
0x4bd: V420 = M[0x40]
0x4c0: V421 = SUB V419 V420
0x4c2: LOG V420 V421 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0x4c3: V422 = 0x4ca
0x4c6: V423 = 0x502
0x4c9: JUMP 0x502
---
Entry stack: [V12, 0xbd, S3, V337, 0xa9059cbb, V359]
Stack pops: 4
Stack additions: [S3, 0x4ca]
Exit stack: [V12, 0xbd, S3, 0x4ca]

================================

Block 0x4ca
[0x4ca:0x4ca]
---
Predecessors: [0x582]
Successors: [0x4cb]
---
0x4ca JUMPDEST
---
0x4ca: JUMPDEST 
---
Entry stack: [V12, 0xbd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S0]

================================

Block 0x4cb
[0x4cb:0x4cb]
---
Predecessors: [0x4ca]
Successors: [0x4cc]
---
0x4cb JUMPDEST
---
0x4cb: JUMPDEST 
---
Entry stack: [V12, 0xbd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S0]

================================

Block 0x4cc
[0x4cc:0x4ce]
---
Predecessors: [0x4cb]
Successors: [0xbd]
---
0x4cc JUMPDEST
0x4cd POP
0x4ce JUMP
---
0x4cc: JUMPDEST 
0x4ce: JUMP 0xbd
---
Entry stack: [V12, 0xbd, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4cf
[0x4cf:0x4dd]
---
Predecessors: [0xcb]
Successors: [0xd3]
---
0x4cf JUMPDEST
0x4d0 PUSH1 0x8
0x4d2 SLOAD
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db AND
0x4dc DUP2
0x4dd JUMP
---
0x4cf: JUMPDEST 
0x4d0: V424 = 0x8
0x4d2: V425 = S[0x8]
0x4d3: V426 = 0x1
0x4d5: V427 = 0xa0
0x4d7: V428 = 0x2
0x4d9: V429 = EXP 0x2 0xa0
0x4da: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4db: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4dd: JUMP 0xd3
---
Entry stack: [V12, 0xd3]
Stack pops: 1
Stack additions: [S0, V431]
Exit stack: [V12, 0xd3, V431]

================================

Block 0x4de
[0x4de:0x4ec]
---
Predecessors: [0xfa]
Successors: [0xd3]
---
0x4de JUMPDEST
0x4df PUSH1 0x9
0x4e1 SLOAD
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0xa0
0x4e6 PUSH1 0x2
0x4e8 EXP
0x4e9 SUB
0x4ea AND
0x4eb DUP2
0x4ec JUMP
---
0x4de: JUMPDEST 
0x4df: V432 = 0x9
0x4e1: V433 = S[0x9]
0x4e2: V434 = 0x1
0x4e4: V435 = 0xa0
0x4e6: V436 = 0x2
0x4e8: V437 = EXP 0x2 0xa0
0x4e9: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x4ec: JUMP 0xd3
---
Entry stack: [V12, 0xd3]
Stack pops: 1
Stack additions: [S0, V439]
Exit stack: [V12, 0xd3, V439]

================================

Block 0x4ed
[0x4ed:0x4fb]
---
Predecessors: [0x129]
Successors: [0xd3]
---
0x4ed JUMPDEST
0x4ee PUSH1 0x7
0x4f0 SLOAD
0x4f1 PUSH1 0x1
0x4f3 PUSH1 0xa0
0x4f5 PUSH1 0x2
0x4f7 EXP
0x4f8 SUB
0x4f9 AND
0x4fa DUP2
0x4fb JUMP
---
0x4ed: JUMPDEST 
0x4ee: V440 = 0x7
0x4f0: V441 = S[0x7]
0x4f1: V442 = 0x1
0x4f3: V443 = 0xa0
0x4f5: V444 = 0x2
0x4f7: V445 = EXP 0x2 0xa0
0x4f8: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f9: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x4fb: JUMP 0xd3
---
Entry stack: [V12, 0xd3]
Stack pops: 1
Stack additions: [S0, V447]
Exit stack: [V12, 0xd3, V447]

================================

Block 0x4fc
[0x4fc:0x501]
---
Predecessors: [0x158]
Successors: [0x160]
---
0x4fc JUMPDEST
0x4fd PUSH1 0x1
0x4ff SLOAD
0x500 DUP2
0x501 JUMP
---
0x4fc: JUMPDEST 
0x4fd: V448 = 0x1
0x4ff: V449 = S[0x1]
0x501: JUMP 0x160
---
Entry stack: [V12, 0x160]
Stack pops: 1
Stack additions: [S0, V449]
Exit stack: [V12, 0x160, V449]

================================

Block 0x502
[0x502:0x50d]
---
Predecessors: [0x17d, 0x420]
Successors: [0x50e, 0x525]
---
0x502 JUMPDEST
0x503 PUSH1 0x5
0x505 SLOAD
0x506 TIMESTAMP
0x507 GT
0x508 DUP1
0x509 ISZERO
0x50a PUSH2 0x525
0x50d JUMPI
---
0x502: JUMPDEST 
0x503: V450 = 0x5
0x505: V451 = S[0x5]
0x506: V452 = TIMESTAMP
0x507: V453 = GT V452 V451
0x509: V454 = ISZERO V453
0x50a: V455 = 0x525
0x50d: JUMPI 0x525 V454
---
Entry stack: [V12, 0xbd, S1, {0xbd, 0x4ca}]
Stack pops: 0
Stack additions: [V453]
Exit stack: [V12, 0xbd, S1, {0xbd, 0x4ca}, V453]

================================

Block 0x50e
[0x50e:0x510]
---
Predecessors: [0x502]
Successors: [0x511]
---
0x50e POP
0x50f PUSH1 0x1
---
0x50f: V456 = 0x1
---
Entry stack: [V12, 0xbd, S2, {0xbd, 0x4ca}, V453]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xbd, S2, {0xbd, 0x4ca}, 0x1]

================================

Block 0x511
[0x511:0x520]
---
Predecessors: [0x50e]
Successors: [0x521, 0x522]
---
0x511 JUMPDEST
0x512 PUSH1 0x0
0x514 SLOAD
0x515 PUSH1 0xff
0x517 AND
0x518 PUSH1 0x1
0x51a DUP2
0x51b GT
0x51c ISZERO
0x51d PUSH2 0x522
0x520 JUMPI
---
0x511: JUMPDEST 
0x512: V457 = 0x0
0x514: V458 = S[0x0]
0x515: V459 = 0xff
0x517: V460 = AND 0xff V458
0x518: V461 = 0x1
0x51b: V462 = GT V460 0x1
0x51c: V463 = ISZERO V462
0x51d: V464 = 0x522
0x520: JUMPI 0x522 V463
---
Entry stack: [V12, 0xbd, S2, {0xbd, 0x4ca}, 0x1]
Stack pops: 0
Stack additions: [V460]
Exit stack: [V12, 0xbd, S2, {0xbd, 0x4ca}, 0x1, V460]

================================

Block 0x521
[0x521:0x521]
---
Predecessors: [0x511]
Successors: []
---
0x521 INVALID
---
0x521: INVALID 
---
Entry stack: [V12, 0xbd, S3, {0xbd, 0x4ca}, 0x1, V460]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S3, {0xbd, 0x4ca}, 0x1, V460]

================================

Block 0x522
[0x522:0x524]
---
Predecessors: [0x511]
Successors: [0x525]
---
0x522 JUMPDEST
0x523 EQ
0x524 ISZERO
---
0x522: JUMPDEST 
0x523: V465 = EQ V460 0x1
0x524: V466 = ISZERO V465
---
Entry stack: [V12, 0xbd, S3, {0xbd, 0x4ca}, 0x1, V460]
Stack pops: 2
Stack additions: [V466]
Exit stack: [V12, 0xbd, S3, {0xbd, 0x4ca}, V466]

================================

Block 0x525
[0x525:0x52a]
---
Predecessors: [0x502, 0x522]
Successors: [0x52b, 0x580]
---
0x525 JUMPDEST
0x526 ISZERO
0x527 PUSH2 0x580
0x52a JUMPI
---
0x525: JUMPDEST 
0x526: V467 = ISZERO S0
0x527: V468 = 0x580
0x52a: JUMPI 0x580 V467
---
Entry stack: [V12, 0xbd, S2, {0xbd, 0x4ca}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xbd, S2, {0xbd, 0x4ca}]

================================

Block 0x52b
[0x52b:0x538]
---
Predecessors: [0x525]
Successors: [0x539]
---
0x52b PUSH1 0x0
0x52d DUP1
0x52e SLOAD
0x52f PUSH1 0x1
0x531 SWAP2
0x532 SWAP1
0x533 PUSH1 0xff
0x535 NOT
0x536 AND
0x537 DUP3
0x538 DUP1
---
0x52b: V469 = 0x0
0x52e: V470 = S[0x0]
0x52f: V471 = 0x1
0x533: V472 = 0xff
0x535: V473 = NOT 0xff
0x536: V474 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V470
---
Entry stack: [V12, 0xbd, S1, {0xbd, 0x4ca}]
Stack pops: 0
Stack additions: [0x1, 0x0, V474, 0x1, 0x1]
Exit stack: [V12, 0xbd, S1, {0xbd, 0x4ca}, 0x1, 0x0, V474, 0x1, 0x1]

================================

Block 0x539
[0x539:0x57f]
---
Predecessors: [0x52b]
Successors: [0x596]
---
0x539 JUMPDEST
0x53a MUL
0x53b OR
0x53c SWAP1
0x53d SSTORE
0x53e POP
0x53f TIMESTAMP
0x540 PUSH1 0x6
0x542 SSTORE
0x543 PUSH1 0x3
0x545 SLOAD
0x546 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x567 SWAP1
0x568 PUSH1 0x40
0x56a MLOAD
0x56b SWAP1
0x56c DUP2
0x56d MSTORE
0x56e PUSH1 0x20
0x570 ADD
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 SWAP2
0x576 SUB
0x577 SWAP1
0x578 LOG1
0x579 PUSH2 0x580
0x57c PUSH2 0x596
0x57f JUMP
---
0x539: JUMPDEST 
0x53a: V475 = MUL 0x1 0x1
0x53b: V476 = OR 0x1 V474
0x53d: S[0x0] = V476
0x53f: V477 = TIMESTAMP
0x540: V478 = 0x6
0x542: S[0x6] = V477
0x543: V479 = 0x3
0x545: V480 = S[0x3]
0x546: V481 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x568: V482 = 0x40
0x56a: V483 = M[0x40]
0x56d: M[V483] = V480
0x56e: V484 = 0x20
0x570: V485 = ADD 0x20 V483
0x571: V486 = 0x40
0x573: V487 = M[0x40]
0x576: V488 = SUB V485 V487
0x578: LOG V487 V488 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x579: V489 = 0x580
0x57c: V490 = 0x596
0x57f: JUMP 0x596
---
Entry stack: [V12, 0xbd, S6, {0xbd, 0x4ca}, 0x1, 0x0, V474, 0x1, 0x1]
Stack pops: 5
Stack additions: [0x580]
Exit stack: [V12, 0xbd, S6, {0xbd, 0x4ca}, 0x580]

================================

Block 0x580
[0x580:0x580]
---
Predecessors: [0x525, 0x720]
Successors: [0x581]
---
0x580 JUMPDEST
---
0x580: JUMPDEST 
---
Entry stack: [V12, 0xbd, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S1, S0]

================================

Block 0x581
[0x581:0x581]
---
Predecessors: [0x580]
Successors: [0x582]
---
0x581 JUMPDEST
---
0x581: JUMPDEST 
---
Entry stack: [V12, 0xbd, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S1, S0]

================================

Block 0x582
[0x582:0x583]
---
Predecessors: [0x581]
Successors: [0xbd, 0x4ca]
---
0x582 JUMPDEST
0x583 JUMP
---
0x582: JUMPDEST 
0x583: JUMP S0
---
Entry stack: [V12, 0xbd, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xbd, S1]

================================

Block 0x584
[0x584:0x589]
---
Predecessors: [0x192]
Successors: [0x160]
---
0x584 JUMPDEST
0x585 PUSH1 0x5
0x587 SLOAD
0x588 DUP2
0x589 JUMP
---
0x584: JUMPDEST 
0x585: V491 = 0x5
0x587: V492 = S[0x5]
0x589: JUMP 0x160
---
Entry stack: [V12, 0x160]
Stack pops: 1
Stack additions: [S0, V492]
Exit stack: [V12, 0x160, V492]

================================

Block 0x58a
[0x58a:0x58f]
---
Predecessors: [0x1b7]
Successors: [0x160]
---
0x58a JUMPDEST
0x58b PUSH1 0x6
0x58d SLOAD
0x58e DUP2
0x58f JUMP
---
0x58a: JUMPDEST 
0x58b: V493 = 0x6
0x58d: V494 = S[0x6]
0x58f: JUMP 0x160
---
Entry stack: [V12, 0x160]
Stack pops: 1
Stack additions: [S0, V494]
Exit stack: [V12, 0x160, V494]

================================

Block 0x590
[0x590:0x595]
---
Predecessors: [0x1dc]
Successors: [0x160]
---
0x590 JUMPDEST
0x591 PUSH1 0x2
0x593 SLOAD
0x594 DUP2
0x595 JUMP
---
0x590: JUMPDEST 
0x591: V495 = 0x2
0x593: V496 = S[0x2]
0x595: JUMP 0x160
---
Entry stack: [V12, 0x160]
Stack pops: 1
Stack additions: [S0, V496]
Exit stack: [V12, 0x160, V496]

================================

Block 0x596
[0x596:0x59a]
---
Predecessors: [0x201, 0x539]
Successors: [0x59b]
---
0x596 JUMPDEST
0x597 PUSH1 0x0
0x599 PUSH1 0x1
---
0x596: JUMPDEST 
0x597: V497 = 0x0
0x599: V498 = 0x1
---
Entry stack: [V12, 0xbd, S2, S1, {0xbd, 0x580}]
Stack pops: 0
Stack additions: [0x0, 0x1]
Exit stack: [V12, 0xbd, S2, S1, {0xbd, 0x580}, 0x0, 0x1]

================================

Block 0x59b
[0x59b:0x5aa]
---
Predecessors: [0x596]
Successors: [0x5ab, 0x5ac]
---
0x59b JUMPDEST
0x59c PUSH1 0x0
0x59e SLOAD
0x59f PUSH1 0xff
0x5a1 AND
0x5a2 PUSH1 0x1
0x5a4 DUP2
0x5a5 GT
0x5a6 ISZERO
0x5a7 PUSH2 0x5ac
0x5aa JUMPI
---
0x59b: JUMPDEST 
0x59c: V499 = 0x0
0x59e: V500 = S[0x0]
0x59f: V501 = 0xff
0x5a1: V502 = AND 0xff V500
0x5a2: V503 = 0x1
0x5a5: V504 = GT V502 0x1
0x5a6: V505 = ISZERO V504
0x5a7: V506 = 0x5ac
0x5aa: JUMPI 0x5ac V505
---
Entry stack: [V12, 0xbd, S4, S3, {0xbd, 0x580}, 0x0, 0x1]
Stack pops: 0
Stack additions: [V502]
Exit stack: [V12, 0xbd, S4, S3, {0xbd, 0x580}, 0x0, 0x1, V502]

================================

Block 0x5ab
[0x5ab:0x5ab]
---
Predecessors: [0x59b]
Successors: []
---
0x5ab INVALID
---
0x5ab: INVALID 
---
Entry stack: [V12, 0xbd, S5, S4, {0xbd, 0x580}, 0x0, 0x1, V502]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S5, S4, {0xbd, 0x580}, 0x0, 0x1, V502]

================================

Block 0x5ac
[0x5ac:0x5b1]
---
Predecessors: [0x59b]
Successors: [0x5b2, 0x5b6]
---
0x5ac JUMPDEST
0x5ad EQ
0x5ae PUSH2 0x5b6
0x5b1 JUMPI
---
0x5ac: JUMPDEST 
0x5ad: V507 = EQ V502 0x1
0x5ae: V508 = 0x5b6
0x5b1: JUMPI 0x5b6 V507
---
Entry stack: [V12, 0xbd, S5, S4, {0xbd, 0x580}, 0x0, 0x1, V502]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xbd, S5, S4, {0xbd, 0x580}, 0x0]

================================

Block 0x5b2
[0x5b2:0x5b5]
---
Predecessors: [0x5ac]
Successors: []
---
0x5b2 PUSH1 0x0
0x5b4 DUP1
0x5b5 REVERT
---
0x5b2: V509 = 0x0
0x5b5: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, S3, S2, {0xbd, 0x580}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S3, S2, {0xbd, 0x580}, 0x0]

================================

Block 0x5b6
[0x5b6:0x5ea]
---
Predecessors: [0x5ac]
Successors: [0x5eb, 0x5ef]
---
0x5b6 JUMPDEST
0x5b7 PUSH1 0x9
0x5b9 SLOAD
0x5ba PUSH1 0x1
0x5bc PUSH1 0xa0
0x5be PUSH1 0x2
0x5c0 EXP
0x5c1 SUB
0x5c2 SWAP1
0x5c3 DUP2
0x5c4 AND
0x5c5 SWAP1
0x5c6 ADDRESS
0x5c7 AND
0x5c8 BALANCE
0x5c9 DUP1
0x5ca ISZERO
0x5cb PUSH2 0x8fc
0x5ce MUL
0x5cf SWAP1
0x5d0 PUSH1 0x40
0x5d2 MLOAD
0x5d3 PUSH1 0x0
0x5d5 PUSH1 0x40
0x5d7 MLOAD
0x5d8 DUP1
0x5d9 DUP4
0x5da SUB
0x5db DUP2
0x5dc DUP6
0x5dd DUP9
0x5de DUP9
0x5df CALL
0x5e0 SWAP4
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 POP
0x5e5 ISZERO
0x5e6 ISZERO
0x5e7 PUSH2 0x5ef
0x5ea JUMPI
---
0x5b6: JUMPDEST 
0x5b7: V510 = 0x9
0x5b9: V511 = S[0x9]
0x5ba: V512 = 0x1
0x5bc: V513 = 0xa0
0x5be: V514 = 0x2
0x5c0: V515 = EXP 0x2 0xa0
0x5c1: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c4: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x5c6: V518 = ADDRESS
0x5c7: V519 = AND V518 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V520 = BALANCE V519
0x5ca: V521 = ISZERO V520
0x5cb: V522 = 0x8fc
0x5ce: V523 = MUL 0x8fc V521
0x5d0: V524 = 0x40
0x5d2: V525 = M[0x40]
0x5d3: V526 = 0x0
0x5d5: V527 = 0x40
0x5d7: V528 = M[0x40]
0x5da: V529 = SUB V525 V528
0x5df: V530 = CALL V523 V517 V520 V528 V529 V528 0x0
0x5e5: V531 = ISZERO V530
0x5e6: V532 = ISZERO V531
0x5e7: V533 = 0x5ef
0x5ea: JUMPI 0x5ef V532
---
Entry stack: [V12, 0xbd, S3, S2, {0xbd, 0x580}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S3, S2, {0xbd, 0x580}, 0x0]

================================

Block 0x5eb
[0x5eb:0x5ee]
---
Predecessors: [0x5b6]
Successors: []
---
0x5eb PUSH1 0x0
0x5ed DUP1
0x5ee REVERT
---
0x5eb: V534 = 0x0
0x5ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, S3, S2, {0xbd, 0x580}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S3, S2, {0xbd, 0x580}, 0x0]

================================

Block 0x5ef
[0x5ef:0x643]
---
Predecessors: [0x5b6]
Successors: [0x644, 0x648]
---
0x5ef JUMPDEST
0x5f0 PUSH1 0x7
0x5f2 SLOAD
0x5f3 PUSH1 0x1
0x5f5 PUSH1 0xa0
0x5f7 PUSH1 0x2
0x5f9 EXP
0x5fa SUB
0x5fb AND
0x5fc PUSH4 0x70a08231
0x601 ADDRESS
0x602 PUSH1 0x0
0x604 PUSH1 0x40
0x606 MLOAD
0x607 PUSH1 0x20
0x609 ADD
0x60a MSTORE
0x60b PUSH1 0x40
0x60d MLOAD
0x60e PUSH1 0xe0
0x610 PUSH1 0x2
0x612 EXP
0x613 PUSH4 0xffffffff
0x618 DUP5
0x619 AND
0x61a MUL
0x61b DUP2
0x61c MSTORE
0x61d PUSH1 0x1
0x61f PUSH1 0xa0
0x621 PUSH1 0x2
0x623 EXP
0x624 SUB
0x625 SWAP1
0x626 SWAP2
0x627 AND
0x628 PUSH1 0x4
0x62a DUP3
0x62b ADD
0x62c MSTORE
0x62d PUSH1 0x24
0x62f ADD
0x630 PUSH1 0x20
0x632 PUSH1 0x40
0x634 MLOAD
0x635 DUP1
0x636 DUP4
0x637 SUB
0x638 DUP2
0x639 PUSH1 0x0
0x63b DUP8
0x63c DUP1
0x63d EXTCODESIZE
0x63e ISZERO
0x63f ISZERO
0x640 PUSH2 0x648
0x643 JUMPI
---
0x5ef: JUMPDEST 
0x5f0: V535 = 0x7
0x5f2: V536 = S[0x7]
0x5f3: V537 = 0x1
0x5f5: V538 = 0xa0
0x5f7: V539 = 0x2
0x5f9: V540 = EXP 0x2 0xa0
0x5fa: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fb: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x5fc: V543 = 0x70a08231
0x601: V544 = ADDRESS
0x602: V545 = 0x0
0x604: V546 = 0x40
0x606: V547 = M[0x40]
0x607: V548 = 0x20
0x609: V549 = ADD 0x20 V547
0x60a: M[V549] = 0x0
0x60b: V550 = 0x40
0x60d: V551 = M[0x40]
0x60e: V552 = 0xe0
0x610: V553 = 0x2
0x612: V554 = EXP 0x2 0xe0
0x613: V555 = 0xffffffff
0x619: V556 = AND 0x70a08231 0xffffffff
0x61a: V557 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x61c: M[V551] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x61d: V558 = 0x1
0x61f: V559 = 0xa0
0x621: V560 = 0x2
0x623: V561 = EXP 0x2 0xa0
0x624: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x627: V563 = AND V544 0xffffffffffffffffffffffffffffffffffffffff
0x628: V564 = 0x4
0x62b: V565 = ADD V551 0x4
0x62c: M[V565] = V563
0x62d: V566 = 0x24
0x62f: V567 = ADD 0x24 V551
0x630: V568 = 0x20
0x632: V569 = 0x40
0x634: V570 = M[0x40]
0x637: V571 = SUB V567 V570
0x639: V572 = 0x0
0x63d: V573 = EXTCODESIZE V542
0x63e: V574 = ISZERO V573
0x63f: V575 = ISZERO V574
0x640: V576 = 0x648
0x643: JUMPI 0x648 V575
---
Entry stack: [V12, 0xbd, S3, S2, {0xbd, 0x580}, 0x0]
Stack pops: 0
Stack additions: [V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]
Exit stack: [V12, 0xbd, S3, S2, {0xbd, 0x580}, 0x0, V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]

================================

Block 0x644
[0x644:0x647]
---
Predecessors: [0x5ef]
Successors: []
---
0x644 PUSH1 0x0
0x646 DUP1
0x647 REVERT
---
0x644: V577 = 0x0
0x647: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, S12, S11, {0xbd, 0x580}, 0x0, V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S12, S11, {0xbd, 0x580}, 0x0, V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]

================================

Block 0x648
[0x648:0x654]
---
Predecessors: [0x5ef]
Successors: [0x655, 0x659]
---
0x648 JUMPDEST
0x649 PUSH2 0x2c6
0x64c GAS
0x64d SUB
0x64e CALL
0x64f ISZERO
0x650 ISZERO
0x651 PUSH2 0x659
0x654 JUMPI
---
0x648: JUMPDEST 
0x649: V578 = 0x2c6
0x64c: V579 = GAS
0x64d: V580 = SUB V579 0x2c6
0x64e: V581 = CALL V580 V542 0x0 V570 V571 V570 0x20
0x64f: V582 = ISZERO V581
0x650: V583 = ISZERO V582
0x651: V584 = 0x659
0x654: JUMPI 0x659 V583
---
Entry stack: [V12, 0xbd, S12, S11, {0xbd, 0x580}, 0x0, V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbd, S12, S11, {0xbd, 0x580}, 0x0, V542, 0x70a08231, V567]

================================

Block 0x655
[0x655:0x658]
---
Predecessors: [0x648]
Successors: []
---
0x655 PUSH1 0x0
0x657 DUP1
0x658 REVERT
---
0x655: V585 = 0x0
0x658: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, S6, S5, {0xbd, 0x580}, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S6, S5, {0xbd, 0x580}, 0x0, S2, 0x70a08231, S0]

================================

Block 0x659
[0x659:0x6bd]
---
Predecessors: [0x648]
Successors: [0x6be, 0x6c2]
---
0x659 JUMPDEST
0x65a POP
0x65b POP
0x65c POP
0x65d PUSH1 0x40
0x65f MLOAD
0x660 DUP1
0x661 MLOAD
0x662 PUSH1 0x7
0x664 SLOAD
0x665 PUSH1 0x9
0x667 SLOAD
0x668 SWAP2
0x669 SWAP4
0x66a POP
0x66b PUSH1 0x1
0x66d PUSH1 0xa0
0x66f PUSH1 0x2
0x671 EXP
0x672 SUB
0x673 SWAP1
0x674 DUP2
0x675 AND
0x676 SWAP3
0x677 POP
0x678 PUSH4 0xa9059cbb
0x67d SWAP2
0x67e AND
0x67f DUP4
0x680 PUSH1 0x40
0x682 MLOAD
0x683 PUSH1 0xe0
0x685 PUSH1 0x2
0x687 EXP
0x688 PUSH4 0xffffffff
0x68d DUP6
0x68e AND
0x68f MUL
0x690 DUP2
0x691 MSTORE
0x692 PUSH1 0x1
0x694 PUSH1 0xa0
0x696 PUSH1 0x2
0x698 EXP
0x699 SUB
0x69a SWAP1
0x69b SWAP3
0x69c AND
0x69d PUSH1 0x4
0x69f DUP4
0x6a0 ADD
0x6a1 MSTORE
0x6a2 PUSH1 0x24
0x6a4 DUP3
0x6a5 ADD
0x6a6 MSTORE
0x6a7 PUSH1 0x44
0x6a9 ADD
0x6aa PUSH1 0x0
0x6ac PUSH1 0x40
0x6ae MLOAD
0x6af DUP1
0x6b0 DUP4
0x6b1 SUB
0x6b2 DUP2
0x6b3 PUSH1 0x0
0x6b5 DUP8
0x6b6 DUP1
0x6b7 EXTCODESIZE
0x6b8 ISZERO
0x6b9 ISZERO
0x6ba PUSH2 0x6c2
0x6bd JUMPI
---
0x659: JUMPDEST 
0x65d: V586 = 0x40
0x65f: V587 = M[0x40]
0x661: V588 = M[V587]
0x662: V589 = 0x7
0x664: V590 = S[0x7]
0x665: V591 = 0x9
0x667: V592 = S[0x9]
0x66b: V593 = 0x1
0x66d: V594 = 0xa0
0x66f: V595 = 0x2
0x671: V596 = EXP 0x2 0xa0
0x672: V597 = SUB 0x10000000000000000000000000000000000000000 0x1
0x675: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x678: V599 = 0xa9059cbb
0x67e: V600 = AND V592 0xffffffffffffffffffffffffffffffffffffffff
0x680: V601 = 0x40
0x682: V602 = M[0x40]
0x683: V603 = 0xe0
0x685: V604 = 0x2
0x687: V605 = EXP 0x2 0xe0
0x688: V606 = 0xffffffff
0x68e: V607 = AND 0xa9059cbb 0xffffffff
0x68f: V608 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x691: M[V602] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x692: V609 = 0x1
0x694: V610 = 0xa0
0x696: V611 = 0x2
0x698: V612 = EXP 0x2 0xa0
0x699: V613 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69c: V614 = AND V600 0xffffffffffffffffffffffffffffffffffffffff
0x69d: V615 = 0x4
0x6a0: V616 = ADD V602 0x4
0x6a1: M[V616] = V614
0x6a2: V617 = 0x24
0x6a5: V618 = ADD V602 0x24
0x6a6: M[V618] = V588
0x6a7: V619 = 0x44
0x6a9: V620 = ADD 0x44 V602
0x6aa: V621 = 0x0
0x6ac: V622 = 0x40
0x6ae: V623 = M[0x40]
0x6b1: V624 = SUB V620 V623
0x6b3: V625 = 0x0
0x6b7: V626 = EXTCODESIZE V598
0x6b8: V627 = ISZERO V626
0x6b9: V628 = ISZERO V627
0x6ba: V629 = 0x6c2
0x6bd: JUMPI 0x6c2 V628
---
Entry stack: [V12, 0xbd, S6, S5, {0xbd, 0x580}, 0x0, S2, 0x70a08231, S0]
Stack pops: 4
Stack additions: [V588, V598, 0xa9059cbb, V620, 0x0, V623, V624, V623, 0x0, V598]
Exit stack: [V12, 0xbd, S6, S5, {0xbd, 0x580}, V588, V598, 0xa9059cbb, V620, 0x0, V623, V624, V623, 0x0, V598]

================================

Block 0x6be
[0x6be:0x6c1]
---
Predecessors: [0x659]
Successors: []
---
0x6be PUSH1 0x0
0x6c0 DUP1
0x6c1 REVERT
---
0x6be: V630 = 0x0
0x6c1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, S12, S11, {0xbd, 0x580}, V588, V598, 0xa9059cbb, V620, 0x0, V623, V624, V623, 0x0, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S12, S11, {0xbd, 0x580}, V588, V598, 0xa9059cbb, V620, 0x0, V623, V624, V623, 0x0, V598]

================================

Block 0x6c2
[0x6c2:0x6ce]
---
Predecessors: [0x659]
Successors: [0x6cf, 0x6d3]
---
0x6c2 JUMPDEST
0x6c3 PUSH2 0x2c6
0x6c6 GAS
0x6c7 SUB
0x6c8 CALL
0x6c9 ISZERO
0x6ca ISZERO
0x6cb PUSH2 0x6d3
0x6ce JUMPI
---
0x6c2: JUMPDEST 
0x6c3: V631 = 0x2c6
0x6c6: V632 = GAS
0x6c7: V633 = SUB V632 0x2c6
0x6c8: V634 = CALL V633 V598 0x0 V623 V624 V623 0x0
0x6c9: V635 = ISZERO V634
0x6ca: V636 = ISZERO V635
0x6cb: V637 = 0x6d3
0x6ce: JUMPI 0x6d3 V636
---
Entry stack: [V12, 0xbd, S12, S11, {0xbd, 0x580}, V588, V598, 0xa9059cbb, V620, 0x0, V623, V624, V623, 0x0, V598]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xbd, S12, S11, {0xbd, 0x580}, V588, V598, 0xa9059cbb, V620]

================================

Block 0x6cf
[0x6cf:0x6d2]
---
Predecessors: [0x6c2]
Successors: []
---
0x6cf PUSH1 0x0
0x6d1 DUP1
0x6d2 REVERT
---
0x6cf: V638 = 0x0
0x6d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xbd, S6, S5, {0xbd, 0x580}, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S6, S5, {0xbd, 0x580}, S3, S2, 0xa9059cbb, S0]

================================

Block 0x6d3
[0x6d3:0x71f]
---
Predecessors: [0x6c2]
Successors: [0x720]
---
0x6d3 JUMPDEST
0x6d4 POP
0x6d5 POP
0x6d6 PUSH1 0x9
0x6d8 SLOAD
0x6d9 PUSH32 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0x6fa SWAP2
0x6fb POP
0x6fc PUSH1 0x1
0x6fe PUSH1 0xa0
0x700 PUSH1 0x2
0x702 EXP
0x703 SUB
0x704 AND
0x705 PUSH1 0x40
0x707 MLOAD
0x708 PUSH1 0x1
0x70a PUSH1 0xa0
0x70c PUSH1 0x2
0x70e EXP
0x70f SUB
0x710 SWAP1
0x711 SWAP2
0x712 AND
0x713 DUP2
0x714 MSTORE
0x715 PUSH1 0x20
0x717 ADD
0x718 PUSH1 0x40
0x71a MLOAD
0x71b DUP1
0x71c SWAP2
0x71d SUB
0x71e SWAP1
0x71f LOG1
---
0x6d3: JUMPDEST 
0x6d6: V639 = 0x9
0x6d8: V640 = S[0x9]
0x6d9: V641 = 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0x6fc: V642 = 0x1
0x6fe: V643 = 0xa0
0x700: V644 = 0x2
0x702: V645 = EXP 0x2 0xa0
0x703: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x704: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0x705: V648 = 0x40
0x707: V649 = M[0x40]
0x708: V650 = 0x1
0x70a: V651 = 0xa0
0x70c: V652 = 0x2
0x70e: V653 = EXP 0x2 0xa0
0x70f: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x712: V655 = AND V647 0xffffffffffffffffffffffffffffffffffffffff
0x714: M[V649] = V655
0x715: V656 = 0x20
0x717: V657 = ADD 0x20 V649
0x718: V658 = 0x40
0x71a: V659 = M[0x40]
0x71d: V660 = SUB V657 V659
0x71f: LOG V659 V660 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
---
Entry stack: [V12, 0xbd, S6, S5, {0xbd, 0x580}, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xbd, S6, S5, {0xbd, 0x580}, S3]

================================

Block 0x720
[0x720:0x722]
---
Predecessors: [0x6d3]
Successors: [0xbd, 0x580]
---
0x720 JUMPDEST
0x721 POP
0x722 JUMP
---
0x720: JUMPDEST 
0x722: JUMP {0xbd, 0x580}
---
Entry stack: [V12, 0xbd, S3, S2, {0xbd, 0x580}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xbd, S3, S2]

================================

Block 0x723
[0x723:0x72b]
---
Predecessors: [0x216]
Successors: [0x21e]
---
0x723 JUMPDEST
0x724 PUSH1 0x0
0x726 SLOAD
0x727 PUSH1 0xff
0x729 AND
0x72a DUP2
0x72b JUMP
---
0x723: JUMPDEST 
0x724: V661 = 0x0
0x726: V662 = S[0x0]
0x727: V663 = 0xff
0x729: V664 = AND 0xff V662
0x72b: JUMP 0x21e
---
Entry stack: [V12, 0x21e]
Stack pops: 1
Stack additions: [S0, V664]
Exit stack: [V12, 0x21e, V664]

================================

Block 0x72c
[0x72c:0x731]
---
Predecessors: [0x24d]
Successors: [0x160]
---
0x72c JUMPDEST
0x72d PUSH1 0x3
0x72f SLOAD
0x730 DUP2
0x731 JUMP
---
0x72c: JUMPDEST 
0x72d: V665 = 0x3
0x72f: V666 = S[0x3]
0x731: JUMP 0x160
---
Entry stack: [V12, 0x160]
Stack pops: 1
Stack additions: [S0, V666]
Exit stack: [V12, 0x160, V666]

================================

Block 0x732
[0x732:0x737]
---
Predecessors: [0x27c]
Successors: [0x160]
---
0x732 JUMPDEST
0x733 PUSH1 0x4
0x735 SLOAD
0x736 DUP2
0x737 JUMP
---
0x732: JUMPDEST 
0x733: V667 = 0x4
0x735: V668 = S[0x4]
0x737: JUMP 0x160
---
Entry stack: [V12, 0x160]
Stack pops: 1
Stack additions: [S0, V668]
Exit stack: [V12, 0x160, V668]

================================

Block 0x738
[0x738:0x787]
---
Predecessors: [0x2a1]
Successors: [0x788, 0x7ce]
---
0x738 JUMPDEST
0x739 PUSH1 0xa
0x73b DUP1
0x73c SLOAD
0x73d PUSH1 0x1
0x73f DUP2
0x740 PUSH1 0x1
0x742 AND
0x743 ISZERO
0x744 PUSH2 0x100
0x747 MUL
0x748 SUB
0x749 AND
0x74a PUSH1 0x2
0x74c SWAP1
0x74d DIV
0x74e DUP1
0x74f PUSH1 0x1f
0x751 ADD
0x752 PUSH1 0x20
0x754 DUP1
0x755 SWAP2
0x756 DIV
0x757 MUL
0x758 PUSH1 0x20
0x75a ADD
0x75b PUSH1 0x40
0x75d MLOAD
0x75e SWAP1
0x75f DUP2
0x760 ADD
0x761 PUSH1 0x40
0x763 MSTORE
0x764 DUP1
0x765 SWAP3
0x766 SWAP2
0x767 SWAP1
0x768 DUP2
0x769 DUP2
0x76a MSTORE
0x76b PUSH1 0x20
0x76d ADD
0x76e DUP3
0x76f DUP1
0x770 SLOAD
0x771 PUSH1 0x1
0x773 DUP2
0x774 PUSH1 0x1
0x776 AND
0x777 ISZERO
0x778 PUSH2 0x100
0x77b MUL
0x77c SUB
0x77d AND
0x77e PUSH1 0x2
0x780 SWAP1
0x781 DIV
0x782 DUP1
0x783 ISZERO
0x784 PUSH2 0x7ce
0x787 JUMPI
---
0x738: JUMPDEST 
0x739: V669 = 0xa
0x73c: V670 = S[0xa]
0x73d: V671 = 0x1
0x740: V672 = 0x1
0x742: V673 = AND 0x1 V670
0x743: V674 = ISZERO V673
0x744: V675 = 0x100
0x747: V676 = MUL 0x100 V674
0x748: V677 = SUB V676 0x1
0x749: V678 = AND V677 V670
0x74a: V679 = 0x2
0x74d: V680 = DIV V678 0x2
0x74f: V681 = 0x1f
0x751: V682 = ADD 0x1f V680
0x752: V683 = 0x20
0x756: V684 = DIV V682 0x20
0x757: V685 = MUL V684 0x20
0x758: V686 = 0x20
0x75a: V687 = ADD 0x20 V685
0x75b: V688 = 0x40
0x75d: V689 = M[0x40]
0x760: V690 = ADD V689 V687
0x761: V691 = 0x40
0x763: M[0x40] = V690
0x76a: M[V689] = V680
0x76b: V692 = 0x20
0x76d: V693 = ADD 0x20 V689
0x770: V694 = S[0xa]
0x771: V695 = 0x1
0x774: V696 = 0x1
0x776: V697 = AND 0x1 V694
0x777: V698 = ISZERO V697
0x778: V699 = 0x100
0x77b: V700 = MUL 0x100 V698
0x77c: V701 = SUB V700 0x1
0x77d: V702 = AND V701 V694
0x77e: V703 = 0x2
0x781: V704 = DIV V702 0x2
0x783: V705 = ISZERO V704
0x784: V706 = 0x7ce
0x787: JUMPI 0x7ce V705
---
Entry stack: [V12, 0x2a9]
Stack pops: 0
Stack additions: [V689, 0xa, V680, V693, 0xa, V704]
Exit stack: [V12, 0x2a9, V689, 0xa, V680, V693, 0xa, V704]

================================

Block 0x788
[0x788:0x78f]
---
Predecessors: [0x738]
Successors: [0x790, 0x7a3]
---
0x788 DUP1
0x789 PUSH1 0x1f
0x78b LT
0x78c PUSH2 0x7a3
0x78f JUMPI
---
0x789: V707 = 0x1f
0x78b: V708 = LT 0x1f V704
0x78c: V709 = 0x7a3
0x78f: JUMPI 0x7a3 V708
---
Entry stack: [V12, 0x2a9, V689, 0xa, V680, V693, 0xa, V704]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a9, V689, 0xa, V680, V693, 0xa, V704]

================================

Block 0x790
[0x790:0x7a2]
---
Predecessors: [0x788]
Successors: [0x7ce]
---
0x790 PUSH2 0x100
0x793 DUP1
0x794 DUP4
0x795 SLOAD
0x796 DIV
0x797 MUL
0x798 DUP4
0x799 MSTORE
0x79a SWAP2
0x79b PUSH1 0x20
0x79d ADD
0x79e SWAP2
0x79f PUSH2 0x7ce
0x7a2 JUMP
---
0x790: V710 = 0x100
0x795: V711 = S[0xa]
0x796: V712 = DIV V711 0x100
0x797: V713 = MUL V712 0x100
0x799: M[V693] = V713
0x79b: V714 = 0x20
0x79d: V715 = ADD 0x20 V693
0x79f: V716 = 0x7ce
0x7a2: JUMP 0x7ce
---
Entry stack: [V12, 0x2a9, V689, 0xa, V680, V693, 0xa, V704]
Stack pops: 3
Stack additions: [V715, S1, S0]
Exit stack: [V12, 0x2a9, V689, 0xa, V680, V715, 0xa, V704]

================================

Block 0x7a3
[0x7a3:0x7b0]
---
Predecessors: [0x788]
Successors: [0x7b1]
---
0x7a3 JUMPDEST
0x7a4 DUP3
0x7a5 ADD
0x7a6 SWAP2
0x7a7 SWAP1
0x7a8 PUSH1 0x0
0x7aa MSTORE
0x7ab PUSH1 0x20
0x7ad PUSH1 0x0
0x7af SHA3
0x7b0 SWAP1
---
0x7a3: JUMPDEST 
0x7a5: V717 = ADD V693 V704
0x7a8: V718 = 0x0
0x7aa: M[0x0] = 0xa
0x7ab: V719 = 0x20
0x7ad: V720 = 0x0
0x7af: V721 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x2a9, V689, 0xa, V680, V693, 0xa, V704]
Stack pops: 3
Stack additions: [V717, V721, S2]
Exit stack: [V12, 0x2a9, V689, 0xa, V680, V717, V721, V693]

================================

Block 0x7b1
[0x7b1:0x7c4]
---
Predecessors: [0x7a3, 0x7b1]
Successors: [0x7b1, 0x7c5]
---
0x7b1 JUMPDEST
0x7b2 DUP2
0x7b3 SLOAD
0x7b4 DUP2
0x7b5 MSTORE
0x7b6 SWAP1
0x7b7 PUSH1 0x1
0x7b9 ADD
0x7ba SWAP1
0x7bb PUSH1 0x20
0x7bd ADD
0x7be DUP1
0x7bf DUP4
0x7c0 GT
0x7c1 PUSH2 0x7b1
0x7c4 JUMPI
---
0x7b1: JUMPDEST 
0x7b3: V722 = S[S1]
0x7b5: M[S0] = V722
0x7b7: V723 = 0x1
0x7b9: V724 = ADD 0x1 S1
0x7bb: V725 = 0x20
0x7bd: V726 = ADD 0x20 S0
0x7c0: V727 = GT V717 V726
0x7c1: V728 = 0x7b1
0x7c4: JUMPI 0x7b1 V727
---
Entry stack: [V12, 0x2a9, V689, 0xa, V680, V717, S1, S0]
Stack pops: 3
Stack additions: [S2, V724, V726]
Exit stack: [V12, 0x2a9, V689, 0xa, V680, V717, V724, V726]

================================

Block 0x7c5
[0x7c5:0x7cd]
---
Predecessors: [0x7b1]
Successors: [0x7ce]
---
0x7c5 DUP3
0x7c6 SWAP1
0x7c7 SUB
0x7c8 PUSH1 0x1f
0x7ca AND
0x7cb DUP3
0x7cc ADD
0x7cd SWAP2
---
0x7c7: V729 = SUB V726 V717
0x7c8: V730 = 0x1f
0x7ca: V731 = AND 0x1f V729
0x7cc: V732 = ADD V717 V731
---
Entry stack: [V12, 0x2a9, V689, 0xa, V680, V717, V724, V726]
Stack pops: 3
Stack additions: [V732, S1, S2]
Exit stack: [V12, 0x2a9, V689, 0xa, V680, V732, V724, V717]

================================

Block 0x7ce
[0x7ce:0x7d5]
---
Predecessors: [0x738, 0x790, 0x7c5]
Successors: [0x2a9]
---
0x7ce JUMPDEST
0x7cf POP
0x7d0 POP
0x7d1 POP
0x7d2 POP
0x7d3 POP
0x7d4 DUP2
0x7d5 JUMP
---
0x7ce: JUMPDEST 
0x7d5: JUMP 0x2a9
---
Entry stack: [V12, 0x2a9, V689, 0xa, V680, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x2a9, V689]

================================

Block 0x7d6
[0x7d6:0x7e3]
---
Predecessors: [0x342, 0x36c]
Successors: [0x7e4, 0x7e5]
---
0x7d6 JUMPDEST
0x7d7 PUSH1 0x0
0x7d9 DUP3
0x7da DUP3
0x7db ADD
0x7dc DUP4
0x7dd DUP2
0x7de LT
0x7df ISZERO
0x7e0 PUSH2 0x7e5
0x7e3 JUMPI
---
0x7d6: JUMPDEST 
0x7d7: V733 = 0x0
0x7db: V734 = ADD S0 S1
0x7de: V735 = LT V734 S1
0x7df: V736 = ISZERO V735
0x7e0: V737 = 0x7e5
0x7e3: JUMPI 0x7e5 V736
---
Entry stack: [V12, 0xbd, S3, {0x355, 0x382}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V734]
Exit stack: [V12, 0xbd, S3, {0x355, 0x382}, S1, S0, 0x0, V734]

================================

Block 0x7e4
[0x7e4:0x7e4]
---
Predecessors: [0x7d6]
Successors: []
---
0x7e4 INVALID
---
0x7e4: INVALID 
---
Entry stack: [V12, 0xbd, S5, {0x355, 0x382}, S3, S2, 0x0, V734]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S5, {0x355, 0x382}, S3, S2, 0x0, V734]

================================

Block 0x7e5
[0x7e5:0x7e8]
---
Predecessors: [0x7d6, 0x80c]
Successors: [0x7e9]
---
0x7e5 JUMPDEST
0x7e6 DUP1
0x7e7 SWAP2
0x7e8 POP
---
0x7e5: JUMPDEST 
---
Entry stack: [V12, 0xbd, S5, {0x355, 0x36c, 0x382}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0xbd, S5, {0x355, 0x36c, 0x382}, S3, S2, S0, S0]

================================

Block 0x7e9
[0x7e9:0x7ef]
---
Predecessors: [0x7e5]
Successors: [0x355, 0x36c, 0x382]
---
0x7e9 JUMPDEST
0x7ea POP
0x7eb SWAP3
0x7ec SWAP2
0x7ed POP
0x7ee POP
0x7ef JUMP
---
0x7e9: JUMPDEST 
0x7ef: JUMP {0x355, 0x36c, 0x382}
---
Entry stack: [V12, 0xbd, S5, {0x355, 0x36c, 0x382}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0xbd, S5, S1]

================================

Block 0x7f0
[0x7f0:0x7fc]
---
Predecessors: [0x355]
Successors: [0x7fd, 0x80c]
---
0x7f0 JUMPDEST
0x7f1 PUSH1 0x0
0x7f3 DUP3
0x7f4 DUP3
0x7f5 MUL
0x7f6 DUP4
0x7f7 ISZERO
0x7f8 DUP1
0x7f9 PUSH2 0x80c
0x7fc JUMPI
---
0x7f0: JUMPDEST 
0x7f1: V738 = 0x0
0x7f5: V739 = MUL V294 V296
0x7f7: V740 = ISZERO V296
0x7f9: V741 = 0x80c
0x7fc: JUMPI 0x80c V740
---
Entry stack: [V12, 0xbd, S3, 0x36c, V296, V294]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V739, V740]
Exit stack: [V12, 0xbd, S3, 0x36c, V296, V294, 0x0, V739, V740]

================================

Block 0x7fd
[0x7fd:0x807]
---
Predecessors: [0x7f0]
Successors: [0x808, 0x809]
---
0x7fd POP
0x7fe DUP3
0x7ff DUP5
0x800 DUP3
0x801 DUP2
0x802 ISZERO
0x803 ISZERO
0x804 PUSH2 0x809
0x807 JUMPI
---
0x802: V742 = ISZERO V296
0x803: V743 = ISZERO V742
0x804: V744 = 0x809
0x807: JUMPI 0x809 V743
---
Entry stack: [V12, 0xbd, S6, 0x36c, V296, V294, 0x0, V739, V740]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0xbd, S6, 0x36c, V296, V294, 0x0, V739, V294, V296, V739]

================================

Block 0x808
[0x808:0x808]
---
Predecessors: [0x7fd]
Successors: []
---
0x808 INVALID
---
0x808: INVALID 
---
Entry stack: [V12, 0xbd, S8, 0x36c, V296, V294, 0x0, V739, V294, V296, V739]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S8, 0x36c, V296, V294, 0x0, V739, V294, V296, V739]

================================

Block 0x809
[0x809:0x80b]
---
Predecessors: [0x7fd]
Successors: [0x80c]
---
0x809 JUMPDEST
0x80a DIV
0x80b EQ
---
0x809: JUMPDEST 
0x80a: V745 = DIV V739 V296
0x80b: V746 = EQ V745 V294
---
Entry stack: [V12, 0xbd, S8, 0x36c, V296, V294, 0x0, V739, V294, V296, V739]
Stack pops: 3
Stack additions: [V746]
Exit stack: [V12, 0xbd, S8, 0x36c, V296, V294, 0x0, V739, V746]

================================

Block 0x80c
[0x80c:0x812]
---
Predecessors: [0x7f0, 0x809]
Successors: [0x7e5, 0x813]
---
0x80c JUMPDEST
0x80d ISZERO
0x80e ISZERO
0x80f PUSH2 0x7e5
0x812 JUMPI
---
0x80c: JUMPDEST 
0x80d: V747 = ISZERO S0
0x80e: V748 = ISZERO V747
0x80f: V749 = 0x7e5
0x812: JUMPI 0x7e5 V748
---
Entry stack: [V12, 0xbd, S6, 0x36c, V296, V294, 0x0, V739, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xbd, S6, 0x36c, V296, V294, 0x0, V739]

================================

Block 0x813
[0x813:0x813]
---
Predecessors: [0x80c]
Successors: []
---
0x813 INVALID
---
0x813: INVALID 
---
Entry stack: [V12, 0xbd, S5, 0x36c, V296, V294, 0x0, V739]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xbd, S5, 0x36c, V296, V294, 0x0, V739]

================================

Block 0x814
[0x814:0x817]
---
Predecessors: []
Successors: [0x818]
---
0x814 JUMPDEST
0x815 DUP1
0x816 SWAP2
0x817 POP
---
0x814: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x818
[0x818:0x851]
---
Predecessors: [0x814]
Successors: []
---
0x818 JUMPDEST
0x819 POP
0x81a SWAP3
0x81b SWAP2
0x81c POP
0x81d POP
0x81e JUMP
0x81f STOP
0x820 LOG1
0x821 PUSH6 0x627a7a723058
0x828 SHA3
0x829 MISSING 0x5c
0x82a MISSING 0x2e
0x82b MISSING 0x2a
0x82c MISSING 0xbc
0x82d PUSH19 0x4c4818c31865f1058224873df0a8df567c1525
0x841 EXP
0x842 MISSING 0xa5
0x843 MISSING 0x49
0x844 PUSH13 0xeecb27a30029
---
0x818: JUMPDEST 
0x81e: JUMP S4
0x81f: STOP 
0x820: LOG S0 S1 S2
0x821: V750 = 0x627a7a723058
0x828: V751 = SHA3 0x627a7a723058 S3
0x829: MISSING 0x5c
0x82a: MISSING 0x2e
0x82b: MISSING 0x2a
0x82c: MISSING 0xbc
0x82d: V752 = 0x4c4818c31865f1058224873df0a8df567c1525
0x841: V753 = EXP 0x4c4818c31865f1058224873df0a8df567c1525 S0
0x842: MISSING 0xa5
0x843: MISSING 0x49
0x844: V754 = 0xeecb27a30029
---
Entry stack: [S1, S0]
Stack pops: 1118
Stack additions: [0xeecb27a30029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xc0
Exit block: 0xd3
Body: 0xc0, 0xc7, 0xcb, 0xd3, 0x4cf

Function 1:
Public function signature: 0x38af3eed
Entry block: 0xef
Exit block: 0xd3
Body: 0xd3, 0xef, 0xf6, 0xfa, 0x4de

Function 2:
Public function signature: 0x6e66f6e9
Entry block: 0x11e
Exit block: 0xd3
Body: 0xd3, 0x11e, 0x125, 0x129, 0x4ed

Function 3:
Public function signature: 0x78e97925
Entry block: 0x14d
Exit block: 0x160
Body: 0x14d, 0x154, 0x158, 0x160, 0x4fc

Function 4:
Public function signature: 0x86f32586
Entry block: 0x172
Exit block: 0xbe
Body: 0xbd, 0xbe, 0x172, 0x179, 0x17d

Function 5:
Public function signature: 0x936c9bc9
Entry block: 0x187
Exit block: 0x160
Body: 0x160, 0x187, 0x18e, 0x192, 0x584

Function 6:
Public function signature: 0x9ef27b00
Entry block: 0x1ac
Exit block: 0x160
Body: 0x160, 0x1ac, 0x1b3, 0x1b7, 0x58a

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x1d1
Exit block: 0x160
Body: 0x160, 0x1d1, 0x1d8, 0x1dc, 0x590

Function 8:
Public function signature: 0xbef4876b
Entry block: 0x1f6
Exit block: 0xbe
Body: 0xbd, 0xbe, 0x1f6, 0x1fd, 0x201

Function 9:
Public function signature: 0xc19d93fb
Entry block: 0x20b
Exit block: 0x22d
Body: 0x20b, 0x212, 0x216, 0x21e, 0x22d, 0x22e, 0x723

Function 10:
Public function signature: 0xc5c4744c
Entry block: 0x242
Exit block: 0x160
Body: 0x160, 0x242, 0x249, 0x24d, 0x72c

Function 11:
Public function signature: 0xd7bb99ba
Entry block: 0xb4
Exit block: 0xbe
Body: 0xb4, 0xb5, 0xbd, 0xbe

Function 12:
Public function signature: 0xefca2eed
Entry block: 0x271
Exit block: 0x160
Body: 0x160, 0x271, 0x278, 0x27c, 0x732

Function 13:
Public function signature: 0xfa4f5511
Entry block: 0x296
Exit block: 0x313
Body: 0x296, 0x29d, 0x2a1, 0x2a9, 0x2cd, 0x2d6, 0x2de, 0x2e6, 0x2fa, 0x313, 0x738, 0x788, 0x790, 0x7a3, 0x7b1, 0x7c5, 0x7ce

Function 14:
Public fallback function
Entry block: 0xb4
Exit block: 0xbe
Body: 0xb4, 0xb5, 0xbd, 0xbe

Function 15:
Private function
Entry block: 0x7d6
Exit block: 0x7e9
Body: 0x36c, 0x382, 0x7d6, 0x7e5, 0x7e9

Function 16:
Private function
Entry block: 0x596
Exit block: 0x720
Body: 0x596, 0x59b, 0x5ac, 0x5b6, 0x5ef, 0x648, 0x659, 0x6c2, 0x6d3, 0x720

Function 17:
Private function
Entry block: 0x502
Exit block: 0x582
Body: 0x502, 0x50e, 0x511, 0x522, 0x525, 0x52b, 0x539, 0x580, 0x581, 0x582

Function 18:
Private function
Entry block: 0x321
Exit block: 0x720
Body: 0x321, 0x326, 0x337, 0x342, 0x355, 0x36c, 0x382, 0x3b9, 0x40f, 0x420, 0x4ca, 0x4cb, 0x4cc, 0x7e5, 0x7e9, 0x7f0, 0x7fd, 0x809, 0x80c

