Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1af]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1af
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x1af
0x24: JUMPI 0x1af V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1c4]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x1c4
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x1c4
0x2f: JUMPI 0x1c4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1e9]
---
0x30 DUP1
0x31 PUSH4 0x38af3eed
0x36 EQ
0x37 PUSH2 0x1e9
0x3a JUMPI
---
0x31: V19 = 0x38af3eed
0x36: V20 = EQ 0x38af3eed V12
0x37: V21 = 0x1e9
0x3a: JUMPI 0x1e9 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x218]
---
0x3b DUP1
0x3c PUSH4 0x6e66f6e9
0x41 EQ
0x42 PUSH2 0x218
0x45 JUMPI
---
0x3c: V22 = 0x6e66f6e9
0x41: V23 = EQ 0x6e66f6e9 V12
0x42: V24 = 0x218
0x45: JUMPI 0x218 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x247]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x247
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x247
0x50: JUMPI 0x247 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x278]
---
0x51 DUP1
0x52 PUSH4 0x7a3a0e84
0x57 EQ
0x58 PUSH2 0x278
0x5b JUMPI
---
0x52: V28 = 0x7a3a0e84
0x57: V29 = EQ 0x7a3a0e84 V12
0x58: V30 = 0x278
0x5b: JUMPI 0x278 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x29d]
---
0x5c DUP1
0x5d PUSH4 0x7b3e5e7b
0x62 EQ
0x63 PUSH2 0x29d
0x66 JUMPI
---
0x5d: V31 = 0x7b3e5e7b
0x62: V32 = EQ 0x7b3e5e7b V12
0x63: V33 = 0x29d
0x66: JUMPI 0x29d V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x2c2]
---
0x67 DUP1
0x68 PUSH4 0xa035b1fe
0x6d EQ
0x6e PUSH2 0x2c2
0x71 JUMPI
---
0x68: V34 = 0xa035b1fe
0x6d: V35 = EQ 0xa035b1fe V12
0x6e: V36 = 0x2c2
0x71: JUMPI 0x2c2 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2e7]
---
0x72 DUP1
0x73 PUSH4 0xcde9f2ea
0x78 EQ
0x79 PUSH2 0x2e7
0x7c JUMPI
---
0x73: V37 = 0xcde9f2ea
0x78: V38 = EQ 0xcde9f2ea V12
0x79: V39 = 0x2e7
0x7c: JUMPI 0x2e7 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x30c]
---
0x7d DUP1
0x7e PUSH4 0xfd6b7ef8
0x83 EQ
0x84 PUSH2 0x30c
0x87 JUMPI
---
0x7e: V40 = 0xfd6b7ef8
0x83: V41 = EQ 0xfd6b7ef8 V12
0x84: V42 = 0x30c
0x87: JUMPI 0x30c V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x0, 0x7d]
Successors: [0x89]
---
0x88 JUMPDEST
---
0x88: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x9a]
---
Predecessors: [0x88]
Successors: [0x9b, 0x9f]
---
0x89 JUMPDEST
0x8a PUSH1 0x0
0x8c PUSH7 0x2ee5547f090000
0x94 CALLVALUE
0x95 LT
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = 0x0
0x8c: V44 = 0x2ee5547f090000
0x94: V45 = CALLVALUE
0x95: V46 = LT V45 0x2ee5547f090000
0x96: V47 = ISZERO V46
0x97: V48 = 0x9f
0x9a: JUMPI 0x9f V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x89]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V49 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x9f
[0x9f:0xaf]
---
Predecessors: [0x89]
Successors: [0xb0, 0xb4]
---
0x9f JUMPDEST
0xa0 PUSH1 0xb
0xa2 SLOAD
0xa3 PUSH2 0x100
0xa6 SWAP1
0xa7 DIV
0xa8 PUSH1 0xff
0xaa AND
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0x9f: JUMPDEST 
0xa0: V50 = 0xb
0xa2: V51 = S[0xb]
0xa3: V52 = 0x100
0xa7: V53 = DIV V51 0x100
0xa8: V54 = 0xff
0xaa: V55 = AND 0xff V53
0xab: V56 = ISZERO V55
0xac: V57 = 0xb4
0xaf: JUMPI 0xb4 V56
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0x9f]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V58 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xb4
[0xb4:0xf5]
---
Predecessors: [0x9f]
Successors: [0x321]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 PUSH1 0x1
0xb8 PUSH1 0xa0
0xba PUSH1 0x2
0xbc EXP
0xbd SUB
0xbe CALLER
0xbf DUP2
0xc0 DUP2
0xc1 AND
0xc2 PUSH1 0x0
0xc4 SWAP1
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0xa
0xc9 PUSH1 0x20
0xcb MSTORE
0xcc PUSH1 0x40
0xce SWAP1
0xcf SHA3
0xd0 DUP1
0xd1 SLOAD
0xd2 CALLVALUE
0xd3 SWAP1
0xd4 DUP2
0xd5 ADD
0xd6 SWAP1
0xd7 SWAP2
0xd8 SSTORE
0xd9 PUSH1 0x2
0xdb DUP1
0xdc SLOAD
0xdd DUP3
0xde ADD
0xdf SWAP1
0xe0 SSTORE
0xe1 PUSH1 0x9
0xe3 SLOAD
0xe4 SWAP1
0xe5 SWAP3
0xe6 AND
0xe7 SWAP1
0xe8 PUSH4 0xa9059cbb
0xed SWAP1
0xee PUSH2 0xf6
0xf1 DUP5
0xf2 PUSH2 0x321
0xf5 JUMP
---
0xb4: JUMPDEST 
0xb6: V59 = 0x1
0xb8: V60 = 0xa0
0xba: V61 = 0x2
0xbc: V62 = EXP 0x2 0xa0
0xbd: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe: V64 = CALLER
0xc1: V65 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0xc2: V66 = 0x0
0xc6: M[0x0] = V65
0xc7: V67 = 0xa
0xc9: V68 = 0x20
0xcb: M[0x20] = 0xa
0xcc: V69 = 0x40
0xcf: V70 = SHA3 0x0 0x40
0xd1: V71 = S[V70]
0xd2: V72 = CALLVALUE
0xd5: V73 = ADD V72 V71
0xd8: S[V70] = V73
0xd9: V74 = 0x2
0xdc: V75 = S[0x2]
0xde: V76 = ADD V72 V75
0xe0: S[0x2] = V76
0xe1: V77 = 0x9
0xe3: V78 = S[0x9]
0xe6: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0xe8: V80 = 0xa9059cbb
0xee: V81 = 0xf6
0xf2: V82 = 0x321
0xf5: JUMP 0x321
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V72, V79, 0xa9059cbb, V64, 0xf6, V72]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72]

================================

Block 0xf6
[0xf6:0x13e]
---
Predecessors: [0x487]
Successors: [0x13f, 0x143]
---
0xf6 JUMPDEST
0xf7 PUSH8 0xde0b6b3a7640000
0x100 MUL
0x101 PUSH1 0x40
0x103 MLOAD
0x104 PUSH1 0xe0
0x106 PUSH1 0x2
0x108 EXP
0x109 PUSH4 0xffffffff
0x10e DUP6
0x10f AND
0x110 MUL
0x111 DUP2
0x112 MSTORE
0x113 PUSH1 0x1
0x115 PUSH1 0xa0
0x117 PUSH1 0x2
0x119 EXP
0x11a SUB
0x11b SWAP1
0x11c SWAP3
0x11d AND
0x11e PUSH1 0x4
0x120 DUP4
0x121 ADD
0x122 MSTORE
0x123 PUSH1 0x24
0x125 DUP3
0x126 ADD
0x127 MSTORE
0x128 PUSH1 0x44
0x12a ADD
0x12b PUSH1 0x0
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 DUP4
0x132 SUB
0x133 DUP2
0x134 PUSH1 0x0
0x136 DUP8
0x137 DUP1
0x138 EXTCODESIZE
0x139 ISZERO
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0xf6: JUMPDEST 
0xf7: V83 = 0xde0b6b3a7640000
0x100: V84 = MUL 0xde0b6b3a7640000 S0
0x101: V85 = 0x40
0x103: V86 = M[0x40]
0x104: V87 = 0xe0
0x106: V88 = 0x2
0x108: V89 = EXP 0x2 0xe0
0x109: V90 = 0xffffffff
0x10f: V91 = AND 0xa9059cbb 0xffffffff
0x110: V92 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x112: M[V86] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x113: V93 = 0x1
0x115: V94 = 0xa0
0x117: V95 = 0x2
0x119: V96 = EXP 0x2 0xa0
0x11a: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V98 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V99 = 0x4
0x121: V100 = ADD V86 0x4
0x122: M[V100] = V98
0x123: V101 = 0x24
0x126: V102 = ADD V86 0x24
0x127: M[V102] = V84
0x128: V103 = 0x44
0x12a: V104 = ADD 0x44 V86
0x12b: V105 = 0x0
0x12d: V106 = 0x40
0x12f: V107 = M[0x40]
0x132: V108 = SUB V104 V107
0x134: V109 = 0x0
0x138: V110 = EXTCODESIZE V79
0x139: V111 = ISZERO V110
0x13a: V112 = ISZERO V111
0x13b: V113 = 0x143
0x13e: JUMPI 0x143 V112
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, S0]
Stack pops: 4
Stack additions: [S3, S2, V104, 0x0, V107, V108, V107, 0x0, S3]
Exit stack: [V12, V72, V79, 0xa9059cbb, V104, 0x0, V107, V108, V107, 0x0, V79]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0xf6]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V114 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V104, 0x0, V107, V108, V107, 0x0, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V104, 0x0, V107, V108, V107, 0x0, V79]

================================

Block 0x143
[0x143:0x14f]
---
Predecessors: [0xf6]
Successors: [0x150, 0x154]
---
0x143 JUMPDEST
0x144 PUSH2 0x2c6
0x147 GAS
0x148 SUB
0x149 CALL
0x14a ISZERO
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x143: JUMPDEST 
0x144: V115 = 0x2c6
0x147: V116 = GAS
0x148: V117 = SUB V116 0x2c6
0x149: V118 = CALL V117 V79 0x0 V107 V108 V107 0x0
0x14a: V119 = ISZERO V118
0x14b: V120 = ISZERO V119
0x14c: V121 = 0x154
0x14f: JUMPI 0x154 V120
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V104, 0x0, V107, V108, V107, 0x0, V79]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V104]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x143]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V122 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V104]

================================

Block 0x154
[0x154:0x1ab]
---
Predecessors: [0x143]
Successors: [0x1ac]
---
0x154 JUMPDEST
0x155 POP
0x156 POP
0x157 POP
0x158 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x179 CALLER
0x17a DUP3
0x17b PUSH1 0x1
0x17d PUSH1 0x40
0x17f MLOAD
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 SWAP1
0x189 SWAP4
0x18a AND
0x18b DUP4
0x18c MSTORE
0x18d PUSH1 0x20
0x18f DUP4
0x190 ADD
0x191 SWAP2
0x192 SWAP1
0x193 SWAP2
0x194 MSTORE
0x195 ISZERO
0x196 ISZERO
0x197 PUSH1 0x40
0x199 DUP1
0x19a DUP4
0x19b ADD
0x19c SWAP2
0x19d SWAP1
0x19e SWAP2
0x19f MSTORE
0x1a0 PUSH1 0x60
0x1a2 SWAP1
0x1a3 SWAP2
0x1a4 ADD
0x1a5 SWAP1
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 SWAP2
0x1a9 SUB
0x1aa SWAP1
0x1ab LOG1
---
0x154: JUMPDEST 
0x158: V123 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x179: V124 = CALLER
0x17b: V125 = 0x1
0x17d: V126 = 0x40
0x17f: V127 = M[0x40]
0x180: V128 = 0x1
0x182: V129 = 0xa0
0x184: V130 = 0x2
0x186: V131 = EXP 0x2 0xa0
0x187: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V133 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x18c: M[V127] = V133
0x18d: V134 = 0x20
0x190: V135 = ADD V127 0x20
0x194: M[V135] = V72
0x195: V136 = ISZERO 0x1
0x196: V137 = ISZERO 0x0
0x197: V138 = 0x40
0x19b: V139 = ADD V127 0x40
0x19f: M[V139] = 0x1
0x1a0: V140 = 0x60
0x1a4: V141 = ADD V127 0x60
0x1a6: V142 = M[0x40]
0x1a9: V143 = SUB V141 V142
0x1ab: LOG V142 V143 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V104]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V72]

================================

Block 0x1ac
[0x1ac:0x1ae]
---
Predecessors: [0x154]
Successors: []
---
0x1ac JUMPDEST
0x1ad POP
0x1ae STOP
---
0x1ac: JUMPDEST 
0x1ae: STOP 
---
Entry stack: [V12, V72]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1b5]
---
Predecessors: [0xb]
Successors: [0x1b6, 0x1ba]
---
0x1af JUMPDEST
0x1b0 CALLVALUE
0x1b1 ISZERO
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V144 = CALLVALUE
0x1b1: V145 = ISZERO V144
0x1b2: V146 = 0x1ba
0x1b5: JUMPI 0x1ba V145
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x1af]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V147 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ba
[0x1ba:0x1c1]
---
Predecessors: [0x1af]
Successors: [0x48e]
---
0x1ba JUMPDEST
0x1bb PUSH2 0x1c2
0x1be PUSH2 0x48e
0x1c1 JUMP
---
0x1ba: JUMPDEST 
0x1bb: V148 = 0x1c2
0x1be: V149 = 0x48e
0x1c1: JUMP 0x48e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c2]
Exit stack: [V12, 0x1c2]

================================

Block 0x1c2
[0x1c2:0x1c3]
---
Predecessors: [0x515, 0x7e4]
Successors: []
---
0x1c2 JUMPDEST
0x1c3 STOP
---
0x1c2: JUMPDEST 
0x1c3: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c4
[0x1c4:0x1ca]
---
Predecessors: [0x25]
Successors: [0x1cb, 0x1cf]
---
0x1c4 JUMPDEST
0x1c5 CALLVALUE
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V150 = CALLVALUE
0x1c6: V151 = ISZERO V150
0x1c7: V152 = 0x1cf
0x1ca: JUMPI 0x1cf V151
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V153 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x1c4]
Successors: [0x517]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x1d7
0x1d3 PUSH2 0x517
0x1d6 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V154 = 0x1d7
0x1d3: V155 = 0x517
0x1d6: JUMP 0x517
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V12, 0x1d7]

================================

Block 0x1d7
[0x1d7:0x1e8]
---
Predecessors: [0x517, 0x53b, 0x54d, 0x553, 0x559, 0x55f]
Successors: []
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db SWAP1
0x1dc DUP2
0x1dd MSTORE
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 DUP1
0x1e5 SWAP2
0x1e6 SUB
0x1e7 SWAP1
0x1e8 RETURN
---
0x1d7: JUMPDEST 
0x1d8: V156 = 0x40
0x1da: V157 = M[0x40]
0x1dd: M[V157] = S0
0x1de: V158 = 0x20
0x1e0: V159 = ADD 0x20 V157
0x1e1: V160 = 0x40
0x1e3: V161 = M[0x40]
0x1e6: V162 = SUB V159 V161
0x1e8: RETURN V161 V162
---
Entry stack: [V12, 0x1d7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1d7]

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0x30]
Successors: [0x1f0, 0x1f4]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f4
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V163 = CALLVALUE
0x1eb: V164 = ISZERO V163
0x1ec: V165 = 0x1f4
0x1ef: JUMPI 0x1f4 V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f0
[0x1f0:0x1f3]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 REVERT
---
0x1f0: V166 = 0x0
0x1f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f4
[0x1f4:0x1fb]
---
Predecessors: [0x1e9]
Successors: [0x51d]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0x1fc
0x1f8 PUSH2 0x51d
0x1fb JUMP
---
0x1f4: JUMPDEST 
0x1f5: V167 = 0x1fc
0x1f8: V168 = 0x51d
0x1fb: JUMP 0x51d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V12, 0x1fc]

================================

Block 0x1fc
[0x1fc:0x217]
---
Predecessors: [0x51d, 0x52c]
Successors: []
---
0x1fc JUMPDEST
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 SWAP1
0x209 SWAP2
0x20a AND
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x20
0x20f ADD
0x210 PUSH1 0x40
0x212 MLOAD
0x213 DUP1
0x214 SWAP2
0x215 SUB
0x216 SWAP1
0x217 RETURN
---
0x1fc: JUMPDEST 
0x1fd: V169 = 0x40
0x1ff: V170 = M[0x40]
0x200: V171 = 0x1
0x202: V172 = 0xa0
0x204: V173 = 0x2
0x206: V174 = EXP 0x2 0xa0
0x207: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V176 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x20c: M[V170] = V176
0x20d: V177 = 0x20
0x20f: V178 = ADD 0x20 V170
0x210: V179 = 0x40
0x212: V180 = M[0x40]
0x215: V181 = SUB V178 V180
0x217: RETURN V180 V181
---
Entry stack: [V12, 0x1fc, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1fc]

================================

Block 0x218
[0x218:0x21e]
---
Predecessors: [0x3b]
Successors: [0x21f, 0x223]
---
0x218 JUMPDEST
0x219 CALLVALUE
0x21a ISZERO
0x21b PUSH2 0x223
0x21e JUMPI
---
0x218: JUMPDEST 
0x219: V182 = CALLVALUE
0x21a: V183 = ISZERO V182
0x21b: V184 = 0x223
0x21e: JUMPI 0x223 V183
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21f
[0x21f:0x222]
---
Predecessors: [0x218]
Successors: []
---
0x21f PUSH1 0x0
0x221 DUP1
0x222 REVERT
---
0x21f: V185 = 0x0
0x222: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x223
[0x223:0x22a]
---
Predecessors: [0x218]
Successors: [0x52c]
---
0x223 JUMPDEST
0x224 PUSH2 0x1fc
0x227 PUSH2 0x52c
0x22a JUMP
---
0x223: JUMPDEST 
0x224: V186 = 0x1fc
0x227: V187 = 0x52c
0x22a: JUMP 0x52c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V12, 0x1fc]

================================

Block 0x22b
[0x22b:0x246]
---
Predecessors: []
Successors: []
---
0x22b JUMPDEST
0x22c PUSH1 0x40
0x22e MLOAD
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 SWAP1
0x238 SWAP2
0x239 AND
0x23a DUP2
0x23b MSTORE
0x23c PUSH1 0x20
0x23e ADD
0x23f PUSH1 0x40
0x241 MLOAD
0x242 DUP1
0x243 SWAP2
0x244 SUB
0x245 SWAP1
0x246 RETURN
---
0x22b: JUMPDEST 
0x22c: V188 = 0x40
0x22e: V189 = M[0x40]
0x22f: V190 = 0x1
0x231: V191 = 0xa0
0x233: V192 = 0x2
0x235: V193 = EXP 0x2 0xa0
0x236: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V195 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x23b: M[V189] = V195
0x23c: V196 = 0x20
0x23e: V197 = ADD 0x20 V189
0x23f: V198 = 0x40
0x241: V199 = M[0x40]
0x244: V200 = SUB V197 V199
0x246: RETURN V199 V200
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x247
[0x247:0x24d]
---
Predecessors: [0x46]
Successors: [0x24e, 0x252]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 ISZERO
0x24a PUSH2 0x252
0x24d JUMPI
---
0x247: JUMPDEST 
0x248: V201 = CALLVALUE
0x249: V202 = ISZERO V201
0x24a: V203 = 0x252
0x24d: JUMPI 0x252 V202
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24e
[0x24e:0x251]
---
Predecessors: [0x247]
Successors: []
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
---
0x24e: V204 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x252
[0x252:0x265]
---
Predecessors: [0x247]
Successors: [0x53b]
---
0x252 JUMPDEST
0x253 PUSH2 0x1d7
0x256 PUSH1 0x1
0x258 PUSH1 0xa0
0x25a PUSH1 0x2
0x25c EXP
0x25d SUB
0x25e PUSH1 0x4
0x260 CALLDATALOAD
0x261 AND
0x262 PUSH2 0x53b
0x265 JUMP
---
0x252: JUMPDEST 
0x253: V205 = 0x1d7
0x256: V206 = 0x1
0x258: V207 = 0xa0
0x25a: V208 = 0x2
0x25c: V209 = EXP 0x2 0xa0
0x25d: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V211 = 0x4
0x260: V212 = CALLDATALOAD 0x4
0x261: V213 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x262: V214 = 0x53b
0x265: JUMP 0x53b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d7, V213]
Exit stack: [V12, 0x1d7, V213]

================================

Block 0x266
[0x266:0x277]
---
Predecessors: []
Successors: []
---
0x266 JUMPDEST
0x267 PUSH1 0x40
0x269 MLOAD
0x26a SWAP1
0x26b DUP2
0x26c MSTORE
0x26d PUSH1 0x20
0x26f ADD
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 SWAP2
0x275 SUB
0x276 SWAP1
0x277 RETURN
---
0x266: JUMPDEST 
0x267: V215 = 0x40
0x269: V216 = M[0x40]
0x26c: M[V216] = S0
0x26d: V217 = 0x20
0x26f: V218 = ADD 0x20 V216
0x270: V219 = 0x40
0x272: V220 = M[0x40]
0x275: V221 = SUB V218 V220
0x277: RETURN V220 V221
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x278
[0x278:0x27e]
---
Predecessors: [0x51]
Successors: [0x27f, 0x283]
---
0x278 JUMPDEST
0x279 CALLVALUE
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x278: JUMPDEST 
0x279: V222 = CALLVALUE
0x27a: V223 = ISZERO V222
0x27b: V224 = 0x283
0x27e: JUMPI 0x283 V223
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x278]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V225 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x283
[0x283:0x28a]
---
Predecessors: [0x278]
Successors: [0x54d]
---
0x283 JUMPDEST
0x284 PUSH2 0x1d7
0x287 PUSH2 0x54d
0x28a JUMP
---
0x283: JUMPDEST 
0x284: V226 = 0x1d7
0x287: V227 = 0x54d
0x28a: JUMP 0x54d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V12, 0x1d7]

================================

Block 0x28b
[0x28b:0x29c]
---
Predecessors: []
Successors: []
---
0x28b JUMPDEST
0x28c PUSH1 0x40
0x28e MLOAD
0x28f SWAP1
0x290 DUP2
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 PUSH1 0x40
0x297 MLOAD
0x298 DUP1
0x299 SWAP2
0x29a SUB
0x29b SWAP1
0x29c RETURN
---
0x28b: JUMPDEST 
0x28c: V228 = 0x40
0x28e: V229 = M[0x40]
0x291: M[V229] = S0
0x292: V230 = 0x20
0x294: V231 = ADD 0x20 V229
0x295: V232 = 0x40
0x297: V233 = M[0x40]
0x29a: V234 = SUB V231 V233
0x29c: RETURN V233 V234
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29d
[0x29d:0x2a3]
---
Predecessors: [0x5c]
Successors: [0x2a4, 0x2a8]
---
0x29d JUMPDEST
0x29e CALLVALUE
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x29d: JUMPDEST 
0x29e: V235 = CALLVALUE
0x29f: V236 = ISZERO V235
0x2a0: V237 = 0x2a8
0x2a3: JUMPI 0x2a8 V236
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x29d]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V238 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a8
[0x2a8:0x2af]
---
Predecessors: [0x29d]
Successors: [0x553]
---
0x2a8 JUMPDEST
0x2a9 PUSH2 0x1d7
0x2ac PUSH2 0x553
0x2af JUMP
---
0x2a8: JUMPDEST 
0x2a9: V239 = 0x1d7
0x2ac: V240 = 0x553
0x2af: JUMP 0x553
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V12, 0x1d7]

================================

Block 0x2b0
[0x2b0:0x2c1]
---
Predecessors: []
Successors: []
---
0x2b0 JUMPDEST
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be SWAP2
0x2bf SUB
0x2c0 SWAP1
0x2c1 RETURN
---
0x2b0: JUMPDEST 
0x2b1: V241 = 0x40
0x2b3: V242 = M[0x40]
0x2b6: M[V242] = S0
0x2b7: V243 = 0x20
0x2b9: V244 = ADD 0x20 V242
0x2ba: V245 = 0x40
0x2bc: V246 = M[0x40]
0x2bf: V247 = SUB V244 V246
0x2c1: RETURN V246 V247
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c2
[0x2c2:0x2c8]
---
Predecessors: [0x67]
Successors: [0x2c9, 0x2cd]
---
0x2c2 JUMPDEST
0x2c3 CALLVALUE
0x2c4 ISZERO
0x2c5 PUSH2 0x2cd
0x2c8 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V248 = CALLVALUE
0x2c4: V249 = ISZERO V248
0x2c5: V250 = 0x2cd
0x2c8: JUMPI 0x2cd V249
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c9
[0x2c9:0x2cc]
---
Predecessors: [0x2c2]
Successors: []
---
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc REVERT
---
0x2c9: V251 = 0x0
0x2cc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cd
[0x2cd:0x2d4]
---
Predecessors: [0x2c2]
Successors: [0x559]
---
0x2cd JUMPDEST
0x2ce PUSH2 0x1d7
0x2d1 PUSH2 0x559
0x2d4 JUMP
---
0x2cd: JUMPDEST 
0x2ce: V252 = 0x1d7
0x2d1: V253 = 0x559
0x2d4: JUMP 0x559
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V12, 0x1d7]

================================

Block 0x2d5
[0x2d5:0x2e6]
---
Predecessors: []
Successors: []
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 SWAP1
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x20
0x2de ADD
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 SWAP2
0x2e4 SUB
0x2e5 SWAP1
0x2e6 RETURN
---
0x2d5: JUMPDEST 
0x2d6: V254 = 0x40
0x2d8: V255 = M[0x40]
0x2db: M[V255] = S0
0x2dc: V256 = 0x20
0x2de: V257 = ADD 0x20 V255
0x2df: V258 = 0x40
0x2e1: V259 = M[0x40]
0x2e4: V260 = SUB V257 V259
0x2e6: RETURN V259 V260
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e7
[0x2e7:0x2ed]
---
Predecessors: [0x72]
Successors: [0x2ee, 0x2f2]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V261 = CALLVALUE
0x2e9: V262 = ISZERO V261
0x2ea: V263 = 0x2f2
0x2ed: JUMPI 0x2f2 V262
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V264 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f2
[0x2f2:0x2f9]
---
Predecessors: [0x2e7]
Successors: [0x55f]
---
0x2f2 JUMPDEST
0x2f3 PUSH2 0x1d7
0x2f6 PUSH2 0x55f
0x2f9 JUMP
---
0x2f2: JUMPDEST 
0x2f3: V265 = 0x1d7
0x2f6: V266 = 0x55f
0x2f9: JUMP 0x55f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V12, 0x1d7]

================================

Block 0x2fa
[0x2fa:0x30b]
---
Predecessors: []
Successors: []
---
0x2fa JUMPDEST
0x2fb PUSH1 0x40
0x2fd MLOAD
0x2fe SWAP1
0x2ff DUP2
0x300 MSTORE
0x301 PUSH1 0x20
0x303 ADD
0x304 PUSH1 0x40
0x306 MLOAD
0x307 DUP1
0x308 SWAP2
0x309 SUB
0x30a SWAP1
0x30b RETURN
---
0x2fa: JUMPDEST 
0x2fb: V267 = 0x40
0x2fd: V268 = M[0x40]
0x300: M[V268] = S0
0x301: V269 = 0x20
0x303: V270 = ADD 0x20 V268
0x304: V271 = 0x40
0x306: V272 = M[0x40]
0x309: V273 = SUB V270 V272
0x30b: RETURN V272 V273
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30c
[0x30c:0x312]
---
Predecessors: [0x7d]
Successors: [0x313, 0x317]
---
0x30c JUMPDEST
0x30d CALLVALUE
0x30e ISZERO
0x30f PUSH2 0x317
0x312 JUMPI
---
0x30c: JUMPDEST 
0x30d: V274 = CALLVALUE
0x30e: V275 = ISZERO V274
0x30f: V276 = 0x317
0x312: JUMPI 0x317 V275
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x313
[0x313:0x316]
---
Predecessors: [0x30c]
Successors: []
---
0x313 PUSH1 0x0
0x315 DUP1
0x316 REVERT
---
0x313: V277 = 0x0
0x316: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x317
[0x317:0x31e]
---
Predecessors: [0x30c]
Successors: [0x565]
---
0x317 JUMPDEST
0x318 PUSH2 0x1c2
0x31b PUSH2 0x565
0x31e JUMP
---
0x317: JUMPDEST 
0x318: V278 = 0x1c2
0x31b: V279 = 0x565
0x31e: JUMP 0x565
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c2]
Exit stack: [V12, 0x1c2]

================================

Block 0x31f
[0x31f:0x320]
---
Predecessors: []
Successors: []
---
0x31f JUMPDEST
0x320 STOP
---
0x31f: JUMPDEST 
0x320: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x321
[0x321:0x32e]
---
Predecessors: [0xb4]
Successors: [0x7e7]
---
0x321 JUMPDEST
0x322 PUSH1 0x0
0x324 DUP1
0x325 PUSH1 0x0
0x327 PUSH2 0x32f
0x32a DUP5
0x32b PUSH2 0x7e7
0x32e JUMP
---
0x321: JUMPDEST 
0x322: V280 = 0x0
0x325: V281 = 0x0
0x327: V282 = 0x32f
0x32b: V283 = 0x7e7
0x32e: JUMP 0x7e7
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x32f, S0]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72]

================================

Block 0x32f
[0x32f:0x344]
---
Predecessors: [0x824]
Successors: [0x345, 0x367]
---
0x32f JUMPDEST
0x330 SWAP2
0x331 POP
0x332 PUSH1 0x0
0x334 SWAP1
0x335 POP
0x336 PUSH1 0x7
0x338 SLOAD
0x339 PUSH3 0x15180
0x33d ADD
0x33e TIMESTAMP
0x33f LT
0x340 ISZERO
0x341 PUSH2 0x367
0x344 JUMPI
---
0x32f: JUMPDEST 
0x332: V284 = 0x0
0x336: V285 = 0x7
0x338: V286 = S[0x7]
0x339: V287 = 0x15180
0x33d: V288 = ADD 0x15180 V286
0x33e: V289 = TIMESTAMP
0x33f: V290 = LT V289 V288
0x340: V291 = ISZERO V290
0x341: V292 = 0x367
0x344: JUMPI 0x367 V291
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, {0x64, 0x6e, 0x73, 0x78}]
Stack pops: 3
Stack additions: [S0, 0x0]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]

================================

Block 0x345
[0x345:0x352]
---
Predecessors: [0x32f]
Successors: [0x353, 0x354]
---
0x345 PUSH1 0x64
0x347 DUP3
0x348 PUSH1 0x8
0x34a SLOAD
0x34b DUP7
0x34c DUP2
0x34d ISZERO
0x34e ISZERO
0x34f PUSH2 0x354
0x352 JUMPI
---
0x345: V293 = 0x64
0x348: V294 = 0x8
0x34a: V295 = S[0x8]
0x34d: V296 = ISZERO V295
0x34e: V297 = ISZERO V296
0x34f: V298 = 0x354
0x352: JUMPI 0x354 V297
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x64, S1, V295, S3]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V295, V72]

================================

Block 0x353
[0x353:0x353]
---
Predecessors: [0x345]
Successors: []
---
0x353 INVALID
---
0x353: INVALID 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V295, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V295, V72]

================================

Block 0x354
[0x354:0x35d]
---
Predecessors: [0x345, 0x394, 0x3df, 0x42a]
Successors: [0x35e, 0x35f]
---
0x354 JUMPDEST
0x355 DIV
0x356 MUL
0x357 DUP2
0x358 ISZERO
0x359 ISZERO
0x35a PUSH2 0x35f
0x35d JUMPI
---
0x354: JUMPDEST 
0x355: V299 = DIV V72 S1
0x356: V300 = MUL V299 S2
0x358: V301 = ISZERO S3
0x359: V302 = ISZERO V301
0x35a: V303 = 0x35f
0x35d: JUMPI 0x35f V302
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S5, 0x0, S3, S2, S1, V72]
Stack pops: 4
Stack additions: [S3, V300]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S5, 0x0, S3, V300]

================================

Block 0x35e
[0x35e:0x35e]
---
Predecessors: [0x354]
Successors: []
---
0x35e INVALID
---
0x35e: INVALID 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S3, 0x0, S1, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S3, 0x0, S1, V300]

================================

Block 0x35f
[0x35f:0x366]
---
Predecessors: [0x354, 0x39f, 0x3e9, 0x434]
Successors: [0x480]
---
0x35f JUMPDEST
0x360 DIV
0x361 SWAP1
0x362 POP
0x363 PUSH2 0x480
0x366 JUMP
---
0x35f: JUMPDEST 
0x360: V304 = DIV S0 S1
0x363: V305 = 0x480
0x366: JUMP 0x480
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S3, 0x0, S1, S0]
Stack pops: 3
Stack additions: [V304]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S3, V304]

================================

Block 0x367
[0x367:0x376]
---
Predecessors: [0x32f]
Successors: [0x377, 0x3b2]
---
0x367 JUMPDEST
0x368 PUSH1 0x7
0x36a SLOAD
0x36b PUSH3 0x69780
0x36f ADD
0x370 TIMESTAMP
0x371 LT
0x372 ISZERO
0x373 PUSH2 0x3b2
0x376 JUMPI
---
0x367: JUMPDEST 
0x368: V306 = 0x7
0x36a: V307 = S[0x7]
0x36b: V308 = 0x69780
0x36f: V309 = ADD 0x69780 V307
0x370: V310 = TIMESTAMP
0x371: V311 = LT V310 V309
0x372: V312 = ISZERO V311
0x373: V313 = 0x3b2
0x376: JUMPI 0x3b2 V312
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]

================================

Block 0x377
[0x377:0x392]
---
Predecessors: [0x367]
Successors: [0x393, 0x394]
---
0x377 PUSH1 0x64
0x379 DUP3
0x37a PUSH6 0x5af3107a4000
0x381 PUSH1 0x8
0x383 SLOAD
0x384 PUSH6 0x5db49c9cfc1f
0x38b MUL
0x38c DUP2
0x38d ISZERO
0x38e ISZERO
0x38f PUSH2 0x394
0x392 JUMPI
---
0x377: V314 = 0x64
0x37a: V315 = 0x5af3107a4000
0x381: V316 = 0x8
0x383: V317 = S[0x8]
0x384: V318 = 0x5db49c9cfc1f
0x38b: V319 = MUL 0x5db49c9cfc1f V317
0x38d: V320 = ISZERO 0x5af3107a4000
0x38e: V321 = ISZERO 0x0
0x38f: V322 = 0x394
0x392: JUMPI 0x394 0x1
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1, 0x5af3107a4000, V319]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V319]

================================

Block 0x393
[0x393:0x393]
---
Predecessors: [0x377]
Successors: []
---
0x393 INVALID
---
0x393: INVALID 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V319]

================================

Block 0x394
[0x394:0x39d]
---
Predecessors: [0x377, 0x3c2, 0x40d]
Successors: [0x354, 0x39e]
---
0x394 JUMPDEST
0x395 DIV
0x396 DUP7
0x397 DUP2
0x398 ISZERO
0x399 ISZERO
0x39a PUSH2 0x354
0x39d JUMPI
---
0x394: JUMPDEST 
0x395: V323 = DIV S0 0x5af3107a4000
0x398: V324 = ISZERO V323
0x399: V325 = ISZERO V324
0x39a: V326 = 0x354
0x39d: JUMPI 0x354 V325
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V323, S7]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V323, V72]

================================

Block 0x39e
[0x39e:0x39e]
---
Predecessors: [0x394]
Successors: []
---
0x39e INVALID
---
0x39e: INVALID 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V323, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V323, V72]

================================

Block 0x39f
[0x39f:0x3a8]
---
Predecessors: []
Successors: [0x35f, 0x3a9]
---
0x39f JUMPDEST
0x3a0 DIV
0x3a1 MUL
0x3a2 DUP2
0x3a3 ISZERO
0x3a4 ISZERO
0x3a5 PUSH2 0x35f
0x3a8 JUMPI
---
0x39f: JUMPDEST 
0x3a0: V327 = DIV S0 S1
0x3a1: V328 = MUL V327 S2
0x3a3: V329 = ISZERO S3
0x3a4: V330 = ISZERO V329
0x3a5: V331 = 0x35f
0x3a8: JUMPI 0x35f V330
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, V328]
Exit stack: [S3, V328]

================================

Block 0x3a9
[0x3a9:0x3b1]
---
Predecessors: [0x39f]
Successors: [0x480]
---
0x3a9 INVALID
0x3aa JUMPDEST
0x3ab DIV
0x3ac SWAP1
0x3ad POP
0x3ae PUSH2 0x480
0x3b1 JUMP
---
0x3a9: INVALID 
0x3aa: JUMPDEST 
0x3ab: V332 = DIV S0 S1
0x3ae: V333 = 0x480
0x3b1: JUMP 0x480
---
Entry stack: [S1, V328]
Stack pops: 0
Stack additions: [V332]
Exit stack: []

================================

Block 0x3b2
[0x3b2:0x3c1]
---
Predecessors: [0x367]
Successors: [0x3c2, 0x3fd]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x7
0x3b5 SLOAD
0x3b6 PUSH3 0x112380
0x3ba ADD
0x3bb TIMESTAMP
0x3bc LT
0x3bd ISZERO
0x3be PUSH2 0x3fd
0x3c1 JUMPI
---
0x3b2: JUMPDEST 
0x3b3: V334 = 0x7
0x3b5: V335 = S[0x7]
0x3b6: V336 = 0x112380
0x3ba: V337 = ADD 0x112380 V335
0x3bb: V338 = TIMESTAMP
0x3bc: V339 = LT V338 V337
0x3bd: V340 = ISZERO V339
0x3be: V341 = 0x3fd
0x3c1: JUMPI 0x3fd V340
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]

================================

Block 0x3c2
[0x3c2:0x3dd]
---
Predecessors: [0x3b2]
Successors: [0x394, 0x3de]
---
0x3c2 PUSH1 0x64
0x3c4 DUP3
0x3c5 PUSH6 0x5af3107a4000
0x3cc PUSH1 0x8
0x3ce SLOAD
0x3cf PUSH6 0x6337b4e2745d
0x3d6 MUL
0x3d7 DUP2
0x3d8 ISZERO
0x3d9 ISZERO
0x3da PUSH2 0x394
0x3dd JUMPI
---
0x3c2: V342 = 0x64
0x3c5: V343 = 0x5af3107a4000
0x3cc: V344 = 0x8
0x3ce: V345 = S[0x8]
0x3cf: V346 = 0x6337b4e2745d
0x3d6: V347 = MUL 0x6337b4e2745d V345
0x3d8: V348 = ISZERO 0x5af3107a4000
0x3d9: V349 = ISZERO 0x0
0x3da: V350 = 0x394
0x3dd: JUMPI 0x394 0x1
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1, 0x5af3107a4000, V347]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V347]

================================

Block 0x3de
[0x3de:0x3de]
---
Predecessors: [0x3c2]
Successors: []
---
0x3de INVALID
---
0x3de: INVALID 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V347]

================================

Block 0x3df
[0x3df:0x3e8]
---
Predecessors: []
Successors: [0x354, 0x3e9]
---
0x3df JUMPDEST
0x3e0 DIV
0x3e1 DUP7
0x3e2 DUP2
0x3e3 ISZERO
0x3e4 ISZERO
0x3e5 PUSH2 0x354
0x3e8 JUMPI
---
0x3df: JUMPDEST 
0x3e0: V351 = DIV S0 S1
0x3e3: V352 = ISZERO V351
0x3e4: V353 = ISZERO V352
0x3e5: V354 = 0x354
0x3e8: JUMPI 0x354 V353
---
Entry stack: []
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V351, S7]
Exit stack: [S7, S6, S5, S4, S3, S2, V351, S7]

================================

Block 0x3e9
[0x3e9:0x3f3]
---
Predecessors: [0x3df]
Successors: [0x35f, 0x3f4]
---
0x3e9 INVALID
0x3ea JUMPDEST
0x3eb DIV
0x3ec MUL
0x3ed DUP2
0x3ee ISZERO
0x3ef ISZERO
0x3f0 PUSH2 0x35f
0x3f3 JUMPI
---
0x3e9: INVALID 
0x3ea: JUMPDEST 
0x3eb: V355 = DIV S0 S1
0x3ec: V356 = MUL V355 S2
0x3ee: V357 = ISZERO S3
0x3ef: V358 = ISZERO V357
0x3f0: V359 = 0x35f
0x3f3: JUMPI 0x35f V358
---
Entry stack: [S7, S6, S5, S4, S3, S2, V351, S0]
Stack pops: 0
Stack additions: [V356, S3]
Exit stack: []

================================

Block 0x3f4
[0x3f4:0x3fc]
---
Predecessors: [0x3e9]
Successors: [0x480]
---
0x3f4 INVALID
0x3f5 JUMPDEST
0x3f6 DIV
0x3f7 SWAP1
0x3f8 POP
0x3f9 PUSH2 0x480
0x3fc JUMP
---
0x3f4: INVALID 
0x3f5: JUMPDEST 
0x3f6: V360 = DIV S0 S1
0x3f9: V361 = 0x480
0x3fc: JUMP 0x480
---
Entry stack: [S1, V356]
Stack pops: 0
Stack additions: [V360]
Exit stack: []

================================

Block 0x3fd
[0x3fd:0x40c]
---
Predecessors: [0x3b2]
Successors: [0x40d, 0x448]
---
0x3fd JUMPDEST
0x3fe PUSH1 0x7
0x400 SLOAD
0x401 PUSH3 0x224700
0x405 ADD
0x406 TIMESTAMP
0x407 LT
0x408 ISZERO
0x409 PUSH2 0x448
0x40c JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V362 = 0x7
0x400: V363 = S[0x7]
0x401: V364 = 0x224700
0x405: V365 = ADD 0x224700 V363
0x406: V366 = TIMESTAMP
0x407: V367 = LT V366 V365
0x408: V368 = ISZERO V367
0x409: V369 = 0x448
0x40c: JUMPI 0x448 V368
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]

================================

Block 0x40d
[0x40d:0x428]
---
Predecessors: [0x3fd]
Successors: [0x394, 0x429]
---
0x40d PUSH1 0x64
0x40f DUP3
0x410 PUSH6 0x5af3107a4000
0x417 PUSH1 0x8
0x419 SLOAD
0x41a PUSH6 0x6a1b93394aaa
0x421 MUL
0x422 DUP2
0x423 ISZERO
0x424 ISZERO
0x425 PUSH2 0x394
0x428 JUMPI
---
0x40d: V370 = 0x64
0x410: V371 = 0x5af3107a4000
0x417: V372 = 0x8
0x419: V373 = S[0x8]
0x41a: V374 = 0x6a1b93394aaa
0x421: V375 = MUL 0x6a1b93394aaa V373
0x423: V376 = ISZERO 0x5af3107a4000
0x424: V377 = ISZERO 0x0
0x425: V378 = 0x394
0x428: JUMPI 0x394 0x1
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1, 0x5af3107a4000, V375]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V375]

================================

Block 0x429
[0x429:0x429]
---
Predecessors: [0x40d]
Successors: []
---
0x429 INVALID
---
0x429: INVALID 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V375]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V375]

================================

Block 0x42a
[0x42a:0x433]
---
Predecessors: []
Successors: [0x354, 0x434]
---
0x42a JUMPDEST
0x42b DIV
0x42c DUP7
0x42d DUP2
0x42e ISZERO
0x42f ISZERO
0x430 PUSH2 0x354
0x433 JUMPI
---
0x42a: JUMPDEST 
0x42b: V379 = DIV S0 S1
0x42e: V380 = ISZERO V379
0x42f: V381 = ISZERO V380
0x430: V382 = 0x354
0x433: JUMPI 0x354 V381
---
Entry stack: []
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V379, S7]
Exit stack: [S7, S6, S5, S4, S3, S2, V379, S7]

================================

Block 0x434
[0x434:0x43e]
---
Predecessors: [0x42a]
Successors: [0x35f, 0x43f]
---
0x434 INVALID
0x435 JUMPDEST
0x436 DIV
0x437 MUL
0x438 DUP2
0x439 ISZERO
0x43a ISZERO
0x43b PUSH2 0x35f
0x43e JUMPI
---
0x434: INVALID 
0x435: JUMPDEST 
0x436: V383 = DIV S0 S1
0x437: V384 = MUL V383 S2
0x439: V385 = ISZERO S3
0x43a: V386 = ISZERO V385
0x43b: V387 = 0x35f
0x43e: JUMPI 0x35f V386
---
Entry stack: [S7, S6, S5, S4, S3, S2, V379, S0]
Stack pops: 0
Stack additions: [V384, S3]
Exit stack: []

================================

Block 0x43f
[0x43f:0x447]
---
Predecessors: [0x434]
Successors: [0x480]
---
0x43f INVALID
0x440 JUMPDEST
0x441 DIV
0x442 SWAP1
0x443 POP
0x444 PUSH2 0x480
0x447 JUMP
---
0x43f: INVALID 
0x440: JUMPDEST 
0x441: V388 = DIV S0 S1
0x444: V389 = 0x480
0x447: JUMP 0x480
---
Entry stack: [S1, V384]
Stack pops: 0
Stack additions: [V388]
Exit stack: []

================================

Block 0x448
[0x448:0x464]
---
Predecessors: [0x3fd]
Successors: [0x465, 0x466]
---
0x448 JUMPDEST
0x449 PUSH1 0x64
0x44b DUP3
0x44c PUSH6 0x5af3107a4000
0x453 PUSH1 0x8
0x455 SLOAD
0x456 PUSH6 0x6b7c594aa8ba
0x45d MUL
0x45e DUP2
0x45f ISZERO
0x460 ISZERO
0x461 PUSH2 0x466
0x464 JUMPI
---
0x448: JUMPDEST 
0x449: V390 = 0x64
0x44c: V391 = 0x5af3107a4000
0x453: V392 = 0x8
0x455: V393 = S[0x8]
0x456: V394 = 0x6b7c594aa8ba
0x45d: V395 = MUL 0x6b7c594aa8ba V393
0x45f: V396 = ISZERO 0x5af3107a4000
0x460: V397 = ISZERO 0x0
0x461: V398 = 0x466
0x464: JUMPI 0x466 0x1
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1, 0x5af3107a4000, V395]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V395]

================================

Block 0x465
[0x465:0x465]
---
Predecessors: [0x448]
Successors: []
---
0x465 INVALID
---
0x465: INVALID 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V395]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V395]

================================

Block 0x466
[0x466:0x46f]
---
Predecessors: [0x448]
Successors: [0x470, 0x471]
---
0x466 JUMPDEST
0x467 DIV
0x468 DUP7
0x469 DUP2
0x46a ISZERO
0x46b ISZERO
0x46c PUSH2 0x471
0x46f JUMPI
---
0x466: JUMPDEST 
0x467: V399 = DIV V395 0x5af3107a4000
0x46a: V400 = ISZERO V399
0x46b: V401 = ISZERO V400
0x46c: V402 = 0x471
0x46f: JUMPI 0x471 V401
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, 0x5af3107a4000, V395]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V399, S7]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V399, V72]

================================

Block 0x470
[0x470:0x470]
---
Predecessors: [0x466]
Successors: []
---
0x470 INVALID
---
0x470: INVALID 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V399, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V399, V72]

================================

Block 0x471
[0x471:0x47a]
---
Predecessors: [0x466]
Successors: [0x47b, 0x47c]
---
0x471 JUMPDEST
0x472 DIV
0x473 MUL
0x474 DUP2
0x475 ISZERO
0x476 ISZERO
0x477 PUSH2 0x47c
0x47a JUMPI
---
0x471: JUMPDEST 
0x472: V403 = DIV V72 V399
0x473: V404 = MUL V403 {0x64, 0x6e, 0x73, 0x78}
0x475: V405 = ISZERO 0x64
0x476: V406 = ISZERO 0x0
0x477: V407 = 0x47c
0x47a: JUMPI 0x47c 0x1
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, {0x64, 0x6e, 0x73, 0x78}, V399, V72]
Stack pops: 4
Stack additions: [S3, V404]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, V404]

================================

Block 0x47b
[0x47b:0x47b]
---
Predecessors: [0x471]
Successors: []
---
0x47b INVALID
---
0x47b: INVALID 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, V404]

================================

Block 0x47c
[0x47c:0x47f]
---
Predecessors: [0x471]
Successors: [0x480]
---
0x47c JUMPDEST
0x47d DIV
0x47e SWAP1
0x47f POP
---
0x47c: JUMPDEST 
0x47d: V408 = DIV V404 0x64
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, 0x0, 0x64, V404]
Stack pops: 3
Stack additions: [V408]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, {0x64, 0x6e, 0x73, 0x78}, V408]

================================

Block 0x480
[0x480:0x480]
---
Predecessors: [0x35f, 0x3a9, 0x3f4, 0x43f, 0x47c]
Successors: [0x481]
---
0x480 JUMPDEST
---
0x480: JUMPDEST 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S1, S0]

================================

Block 0x481
[0x481:0x481]
---
Predecessors: [0x480]
Successors: [0x482]
---
0x481 JUMPDEST
---
0x481: JUMPDEST 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S1, S0]

================================

Block 0x482
[0x482:0x482]
---
Predecessors: [0x481]
Successors: [0x483]
---
0x482 JUMPDEST
---
0x482: JUMPDEST 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S1, S0]

================================

Block 0x483
[0x483:0x486]
---
Predecessors: [0x482]
Successors: [0x487]
---
0x483 JUMPDEST
0x484 DUP1
0x485 SWAP3
0x486 POP
---
0x483: JUMPDEST 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, S0, S1, S0]

================================

Block 0x487
[0x487:0x48d]
---
Predecessors: [0x483]
Successors: [0xf6]
---
0x487 JUMPDEST
0x488 POP
0x489 POP
0x48a SWAP2
0x48b SWAP1
0x48c POP
0x48d JUMP
---
0x487: JUMPDEST 
0x48d: JUMP 0xf6
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, S2, S1, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, S2]

================================

Block 0x48e
[0x48e:0x497]
---
Predecessors: [0x1ba]
Successors: [0x498, 0x513]
---
0x48e JUMPDEST
0x48f PUSH1 0x6
0x491 SLOAD
0x492 TIMESTAMP
0x493 LT
0x494 PUSH2 0x513
0x497 JUMPI
---
0x48e: JUMPDEST 
0x48f: V409 = 0x6
0x491: V410 = S[0x6]
0x492: V411 = TIMESTAMP
0x493: V412 = LT V411 V410
0x494: V413 = 0x513
0x497: JUMPI 0x513 V412
---
Entry stack: [V12, 0x1c2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2]

================================

Block 0x498
[0x498:0x4a2]
---
Predecessors: [0x48e]
Successors: [0x4a3, 0x503]
---
0x498 PUSH1 0x1
0x49a SLOAD
0x49b PUSH1 0x2
0x49d SLOAD
0x49e LT
0x49f PUSH2 0x503
0x4a2 JUMPI
---
0x498: V414 = 0x1
0x49a: V415 = S[0x1]
0x49b: V416 = 0x2
0x49d: V417 = S[0x2]
0x49e: V418 = LT V417 V415
0x49f: V419 = 0x503
0x4a2: JUMPI 0x503 V418
---
Entry stack: [V12, 0x1c2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2]

================================

Block 0x4a3
[0x4a3:0x502]
---
Predecessors: [0x498]
Successors: [0x503]
---
0x4a3 PUSH1 0xb
0x4a5 DUP1
0x4a6 SLOAD
0x4a7 PUSH1 0xff
0x4a9 NOT
0x4aa AND
0x4ab PUSH1 0x1
0x4ad OR
0x4ae SWAP1
0x4af SSTORE
0x4b0 PUSH1 0x0
0x4b2 SLOAD
0x4b3 PUSH1 0x2
0x4b5 SLOAD
0x4b6 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x4d7 SWAP2
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 AND
0x4e1 SWAP1
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0xa0
0x4e9 PUSH1 0x2
0x4eb EXP
0x4ec SUB
0x4ed SWAP1
0x4ee SWAP3
0x4ef AND
0x4f0 DUP3
0x4f1 MSTORE
0x4f2 PUSH1 0x20
0x4f4 DUP3
0x4f5 ADD
0x4f6 MSTORE
0x4f7 PUSH1 0x40
0x4f9 SWAP1
0x4fa DUP2
0x4fb ADD
0x4fc SWAP1
0x4fd MLOAD
0x4fe DUP1
0x4ff SWAP2
0x500 SUB
0x501 SWAP1
0x502 LOG1
---
0x4a3: V420 = 0xb
0x4a6: V421 = S[0xb]
0x4a7: V422 = 0xff
0x4a9: V423 = NOT 0xff
0x4aa: V424 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V421
0x4ab: V425 = 0x1
0x4ad: V426 = OR 0x1 V424
0x4af: S[0xb] = V426
0x4b0: V427 = 0x0
0x4b2: V428 = S[0x0]
0x4b3: V429 = 0x2
0x4b5: V430 = S[0x2]
0x4b6: V431 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x4d8: V432 = 0x1
0x4da: V433 = 0xa0
0x4dc: V434 = 0x2
0x4de: V435 = EXP 0x2 0xa0
0x4df: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e0: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x4e2: V438 = 0x40
0x4e4: V439 = M[0x40]
0x4e5: V440 = 0x1
0x4e7: V441 = 0xa0
0x4e9: V442 = 0x2
0x4eb: V443 = EXP 0x2 0xa0
0x4ec: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ef: V445 = AND V437 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: M[V439] = V445
0x4f2: V446 = 0x20
0x4f5: V447 = ADD V439 0x20
0x4f6: M[V447] = V430
0x4f7: V448 = 0x40
0x4fb: V449 = ADD 0x40 V439
0x4fd: V450 = M[0x40]
0x500: V451 = SUB V449 V450
0x502: LOG V450 V451 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V12, 0x1c2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2]

================================

Block 0x503
[0x503:0x512]
---
Predecessors: [0x498, 0x4a3]
Successors: [0x513]
---
0x503 JUMPDEST
0x504 PUSH1 0xb
0x506 DUP1
0x507 SLOAD
0x508 PUSH2 0xff00
0x50b NOT
0x50c AND
0x50d PUSH2 0x100
0x510 OR
0x511 SWAP1
0x512 SSTORE
---
0x503: JUMPDEST 
0x504: V452 = 0xb
0x507: V453 = S[0xb]
0x508: V454 = 0xff00
0x50b: V455 = NOT 0xff00
0x50c: V456 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V453
0x50d: V457 = 0x100
0x510: V458 = OR 0x100 V456
0x512: S[0xb] = V458
---
Entry stack: [V12, 0x1c2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2]

================================

Block 0x513
[0x513:0x513]
---
Predecessors: [0x48e, 0x503]
Successors: [0x514]
---
0x513 JUMPDEST
---
0x513: JUMPDEST 
---
Entry stack: [V12, 0x1c2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2]

================================

Block 0x514
[0x514:0x514]
---
Predecessors: [0x513]
Successors: [0x515]
---
0x514 JUMPDEST
---
0x514: JUMPDEST 
---
Entry stack: [V12, 0x1c2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2]

================================

Block 0x515
[0x515:0x516]
---
Predecessors: [0x514]
Successors: [0x1c2]
---
0x515 JUMPDEST
0x516 JUMP
---
0x515: JUMPDEST 
0x516: JUMP 0x1c2
---
Entry stack: [V12, 0x1c2]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x517
[0x517:0x51c]
---
Predecessors: [0x1cf]
Successors: [0x1d7]
---
0x517 JUMPDEST
0x518 PUSH1 0x6
0x51a SLOAD
0x51b DUP2
0x51c JUMP
---
0x517: JUMPDEST 
0x518: V459 = 0x6
0x51a: V460 = S[0x6]
0x51c: JUMP 0x1d7
---
Entry stack: [V12, 0x1d7]
Stack pops: 1
Stack additions: [S0, V460]
Exit stack: [V12, 0x1d7, V460]

================================

Block 0x51d
[0x51d:0x52b]
---
Predecessors: [0x1f4]
Successors: [0x1fc]
---
0x51d JUMPDEST
0x51e PUSH1 0x0
0x520 SLOAD
0x521 PUSH1 0x1
0x523 PUSH1 0xa0
0x525 PUSH1 0x2
0x527 EXP
0x528 SUB
0x529 AND
0x52a DUP2
0x52b JUMP
---
0x51d: JUMPDEST 
0x51e: V461 = 0x0
0x520: V462 = S[0x0]
0x521: V463 = 0x1
0x523: V464 = 0xa0
0x525: V465 = 0x2
0x527: V466 = EXP 0x2 0xa0
0x528: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x529: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x52b: JUMP 0x1fc
---
Entry stack: [V12, 0x1fc]
Stack pops: 1
Stack additions: [S0, V468]
Exit stack: [V12, 0x1fc, V468]

================================

Block 0x52c
[0x52c:0x53a]
---
Predecessors: [0x223]
Successors: [0x1fc]
---
0x52c JUMPDEST
0x52d PUSH1 0x9
0x52f SLOAD
0x530 PUSH1 0x1
0x532 PUSH1 0xa0
0x534 PUSH1 0x2
0x536 EXP
0x537 SUB
0x538 AND
0x539 DUP2
0x53a JUMP
---
0x52c: JUMPDEST 
0x52d: V469 = 0x9
0x52f: V470 = S[0x9]
0x530: V471 = 0x1
0x532: V472 = 0xa0
0x534: V473 = 0x2
0x536: V474 = EXP 0x2 0xa0
0x537: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x538: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x53a: JUMP 0x1fc
---
Entry stack: [V12, 0x1fc]
Stack pops: 1
Stack additions: [S0, V476]
Exit stack: [V12, 0x1fc, V476]

================================

Block 0x53b
[0x53b:0x54c]
---
Predecessors: [0x252]
Successors: [0x1d7]
---
0x53b JUMPDEST
0x53c PUSH1 0xa
0x53e PUSH1 0x20
0x540 MSTORE
0x541 PUSH1 0x0
0x543 SWAP1
0x544 DUP2
0x545 MSTORE
0x546 PUSH1 0x40
0x548 SWAP1
0x549 SHA3
0x54a SLOAD
0x54b DUP2
0x54c JUMP
---
0x53b: JUMPDEST 
0x53c: V477 = 0xa
0x53e: V478 = 0x20
0x540: M[0x20] = 0xa
0x541: V479 = 0x0
0x545: M[0x0] = V213
0x546: V480 = 0x40
0x549: V481 = SHA3 0x0 0x40
0x54a: V482 = S[V481]
0x54c: JUMP 0x1d7
---
Entry stack: [V12, 0x1d7, V213]
Stack pops: 2
Stack additions: [S1, V482]
Exit stack: [V12, 0x1d7, V482]

================================

Block 0x54d
[0x54d:0x552]
---
Predecessors: [0x283]
Successors: [0x1d7]
---
0x54d JUMPDEST
0x54e PUSH1 0x1
0x550 SLOAD
0x551 DUP2
0x552 JUMP
---
0x54d: JUMPDEST 
0x54e: V483 = 0x1
0x550: V484 = S[0x1]
0x552: JUMP 0x1d7
---
Entry stack: [V12, 0x1d7]
Stack pops: 1
Stack additions: [S0, V484]
Exit stack: [V12, 0x1d7, V484]

================================

Block 0x553
[0x553:0x558]
---
Predecessors: [0x2a8]
Successors: [0x1d7]
---
0x553 JUMPDEST
0x554 PUSH1 0x2
0x556 SLOAD
0x557 DUP2
0x558 JUMP
---
0x553: JUMPDEST 
0x554: V485 = 0x2
0x556: V486 = S[0x2]
0x558: JUMP 0x1d7
---
Entry stack: [V12, 0x1d7]
Stack pops: 1
Stack additions: [S0, V486]
Exit stack: [V12, 0x1d7, V486]

================================

Block 0x559
[0x559:0x55e]
---
Predecessors: [0x2cd]
Successors: [0x1d7]
---
0x559 JUMPDEST
0x55a PUSH1 0x8
0x55c SLOAD
0x55d DUP2
0x55e JUMP
---
0x559: JUMPDEST 
0x55a: V487 = 0x8
0x55c: V488 = S[0x8]
0x55e: JUMP 0x1d7
---
Entry stack: [V12, 0x1d7]
Stack pops: 1
Stack additions: [S0, V488]
Exit stack: [V12, 0x1d7, V488]

================================

Block 0x55f
[0x55f:0x564]
---
Predecessors: [0x2f2]
Successors: [0x1d7]
---
0x55f JUMPDEST
0x560 PUSH1 0x7
0x562 SLOAD
0x563 DUP2
0x564 JUMP
---
0x55f: JUMPDEST 
0x560: V489 = 0x7
0x562: V490 = S[0x7]
0x564: JUMP 0x1d7
---
Entry stack: [V12, 0x1d7]
Stack pops: 1
Stack additions: [S0, V490]
Exit stack: [V12, 0x1d7, V490]

================================

Block 0x565
[0x565:0x571]
---
Predecessors: [0x317]
Successors: [0x572, 0x7e0]
---
0x565 JUMPDEST
0x566 PUSH1 0x6
0x568 SLOAD
0x569 PUSH1 0x0
0x56b SWAP1
0x56c TIMESTAMP
0x56d LT
0x56e PUSH2 0x7e0
0x571 JUMPI
---
0x565: JUMPDEST 
0x566: V491 = 0x6
0x568: V492 = S[0x6]
0x569: V493 = 0x0
0x56c: V494 = TIMESTAMP
0x56d: V495 = LT V494 V492
0x56e: V496 = 0x7e0
0x571: JUMPI 0x7e0 V495
---
Entry stack: [V12, 0x1c2]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1c2, 0x0]

================================

Block 0x572
[0x572:0x57d]
---
Predecessors: [0x565]
Successors: [0x57e, 0x644]
---
0x572 PUSH1 0xb
0x574 SLOAD
0x575 PUSH1 0xff
0x577 AND
0x578 ISZERO
0x579 ISZERO
0x57a PUSH2 0x644
0x57d JUMPI
---
0x572: V497 = 0xb
0x574: V498 = S[0xb]
0x575: V499 = 0xff
0x577: V500 = AND 0xff V498
0x578: V501 = ISZERO V500
0x579: V502 = ISZERO V501
0x57a: V503 = 0x644
0x57d: JUMPI 0x644 V502
---
Entry stack: [V12, 0x1c2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, 0x0]

================================

Block 0x57e
[0x57e:0x5a4]
---
Predecessors: [0x572]
Successors: [0x5a5, 0x644]
---
0x57e POP
0x57f PUSH1 0x1
0x581 PUSH1 0xa0
0x583 PUSH1 0x2
0x585 EXP
0x586 SUB
0x587 CALLER
0x588 AND
0x589 PUSH1 0x0
0x58b SWAP1
0x58c DUP2
0x58d MSTORE
0x58e PUSH1 0xa
0x590 PUSH1 0x20
0x592 MSTORE
0x593 PUSH1 0x40
0x595 DUP2
0x596 SHA3
0x597 DUP1
0x598 SLOAD
0x599 SWAP1
0x59a DUP3
0x59b SWAP1
0x59c SSTORE
0x59d SWAP1
0x59e DUP2
0x59f GT
0x5a0 ISZERO
0x5a1 PUSH2 0x644
0x5a4 JUMPI
---
0x57f: V504 = 0x1
0x581: V505 = 0xa0
0x583: V506 = 0x2
0x585: V507 = EXP 0x2 0xa0
0x586: V508 = SUB 0x10000000000000000000000000000000000000000 0x1
0x587: V509 = CALLER
0x588: V510 = AND V509 0xffffffffffffffffffffffffffffffffffffffff
0x589: V511 = 0x0
0x58d: M[0x0] = V510
0x58e: V512 = 0xa
0x590: V513 = 0x20
0x592: M[0x20] = 0xa
0x593: V514 = 0x40
0x596: V515 = SHA3 0x0 0x40
0x598: V516 = S[V515]
0x59c: S[V515] = 0x0
0x59f: V517 = GT V516 0x0
0x5a0: V518 = ISZERO V517
0x5a1: V519 = 0x644
0x5a4: JUMPI 0x644 V518
---
Entry stack: [V12, 0x1c2, 0x0]
Stack pops: 1
Stack additions: [V516]
Exit stack: [V12, 0x1c2, V516]

================================

Block 0x5a5
[0x5a5:0x5cf]
---
Predecessors: [0x57e]
Successors: [0x5d0, 0x628]
---
0x5a5 PUSH1 0x1
0x5a7 PUSH1 0xa0
0x5a9 PUSH1 0x2
0x5ab EXP
0x5ac SUB
0x5ad CALLER
0x5ae AND
0x5af DUP2
0x5b0 ISZERO
0x5b1 PUSH2 0x8fc
0x5b4 MUL
0x5b5 DUP3
0x5b6 PUSH1 0x40
0x5b8 MLOAD
0x5b9 PUSH1 0x0
0x5bb PUSH1 0x40
0x5bd MLOAD
0x5be DUP1
0x5bf DUP4
0x5c0 SUB
0x5c1 DUP2
0x5c2 DUP6
0x5c3 DUP9
0x5c4 DUP9
0x5c5 CALL
0x5c6 SWAP4
0x5c7 POP
0x5c8 POP
0x5c9 POP
0x5ca POP
0x5cb ISZERO
0x5cc PUSH2 0x628
0x5cf JUMPI
---
0x5a5: V520 = 0x1
0x5a7: V521 = 0xa0
0x5a9: V522 = 0x2
0x5ab: V523 = EXP 0x2 0xa0
0x5ac: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ad: V525 = CALLER
0x5ae: V526 = AND V525 0xffffffffffffffffffffffffffffffffffffffff
0x5b0: V527 = ISZERO V516
0x5b1: V528 = 0x8fc
0x5b4: V529 = MUL 0x8fc V527
0x5b6: V530 = 0x40
0x5b8: V531 = M[0x40]
0x5b9: V532 = 0x0
0x5bb: V533 = 0x40
0x5bd: V534 = M[0x40]
0x5c0: V535 = SUB V531 V534
0x5c5: V536 = CALL V529 V526 V516 V534 V535 V534 0x0
0x5cb: V537 = ISZERO V536
0x5cc: V538 = 0x628
0x5cf: JUMPI 0x628 V537
---
Entry stack: [V12, 0x1c2, V516]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1c2, V516]

================================

Block 0x5d0
[0x5d0:0x627]
---
Predecessors: [0x5a5]
Successors: [0x644]
---
0x5d0 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5f1 CALLER
0x5f2 DUP3
0x5f3 PUSH1 0x0
0x5f5 PUSH1 0x40
0x5f7 MLOAD
0x5f8 PUSH1 0x1
0x5fa PUSH1 0xa0
0x5fc PUSH1 0x2
0x5fe EXP
0x5ff SUB
0x600 SWAP1
0x601 SWAP4
0x602 AND
0x603 DUP4
0x604 MSTORE
0x605 PUSH1 0x20
0x607 DUP4
0x608 ADD
0x609 SWAP2
0x60a SWAP1
0x60b SWAP2
0x60c MSTORE
0x60d ISZERO
0x60e ISZERO
0x60f PUSH1 0x40
0x611 DUP1
0x612 DUP4
0x613 ADD
0x614 SWAP2
0x615 SWAP1
0x616 SWAP2
0x617 MSTORE
0x618 PUSH1 0x60
0x61a SWAP1
0x61b SWAP2
0x61c ADD
0x61d SWAP1
0x61e MLOAD
0x61f DUP1
0x620 SWAP2
0x621 SUB
0x622 SWAP1
0x623 LOG1
0x624 PUSH2 0x644
0x627 JUMP
---
0x5d0: V539 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5f1: V540 = CALLER
0x5f3: V541 = 0x0
0x5f5: V542 = 0x40
0x5f7: V543 = M[0x40]
0x5f8: V544 = 0x1
0x5fa: V545 = 0xa0
0x5fc: V546 = 0x2
0x5fe: V547 = EXP 0x2 0xa0
0x5ff: V548 = SUB 0x10000000000000000000000000000000000000000 0x1
0x602: V549 = AND V540 0xffffffffffffffffffffffffffffffffffffffff
0x604: M[V543] = V549
0x605: V550 = 0x20
0x608: V551 = ADD V543 0x20
0x60c: M[V551] = V516
0x60d: V552 = ISZERO 0x0
0x60e: V553 = ISZERO 0x1
0x60f: V554 = 0x40
0x613: V555 = ADD V543 0x40
0x617: M[V555] = 0x0
0x618: V556 = 0x60
0x61c: V557 = ADD V543 0x60
0x61e: V558 = M[0x40]
0x621: V559 = SUB V557 V558
0x623: LOG V558 V559 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x624: V560 = 0x644
0x627: JUMP 0x644
---
Entry stack: [V12, 0x1c2, V516]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1c2, V516]

================================

Block 0x628
[0x628:0x643]
---
Predecessors: [0x5a5]
Successors: [0x644]
---
0x628 JUMPDEST
0x629 PUSH1 0x1
0x62b PUSH1 0xa0
0x62d PUSH1 0x2
0x62f EXP
0x630 SUB
0x631 CALLER
0x632 AND
0x633 PUSH1 0x0
0x635 SWAP1
0x636 DUP2
0x637 MSTORE
0x638 PUSH1 0xa
0x63a PUSH1 0x20
0x63c MSTORE
0x63d PUSH1 0x40
0x63f SWAP1
0x640 SHA3
0x641 DUP2
0x642 SWAP1
0x643 SSTORE
---
0x628: JUMPDEST 
0x629: V561 = 0x1
0x62b: V562 = 0xa0
0x62d: V563 = 0x2
0x62f: V564 = EXP 0x2 0xa0
0x630: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x631: V566 = CALLER
0x632: V567 = AND V566 0xffffffffffffffffffffffffffffffffffffffff
0x633: V568 = 0x0
0x637: M[0x0] = V567
0x638: V569 = 0xa
0x63a: V570 = 0x20
0x63c: M[0x20] = 0xa
0x63d: V571 = 0x40
0x640: V572 = SHA3 0x0 0x40
0x643: S[V572] = V516
---
Entry stack: [V12, 0x1c2, V516]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1c2, V516]

================================

Block 0x644
[0x644:0x644]
---
Predecessors: [0x572, 0x57e, 0x5d0, 0x628]
Successors: [0x645]
---
0x644 JUMPDEST
---
0x644: JUMPDEST 
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S0]

================================

Block 0x645
[0x645:0x645]
---
Predecessors: [0x644]
Successors: [0x646]
---
0x645 JUMPDEST
---
0x645: JUMPDEST 
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S0]

================================

Block 0x646
[0x646:0x652]
---
Predecessors: [0x645]
Successors: [0x653, 0x666]
---
0x646 JUMPDEST
0x647 PUSH1 0xb
0x649 SLOAD
0x64a PUSH1 0xff
0x64c AND
0x64d DUP1
0x64e ISZERO
0x64f PUSH2 0x666
0x652 JUMPI
---
0x646: JUMPDEST 
0x647: V573 = 0xb
0x649: V574 = S[0xb]
0x64a: V575 = 0xff
0x64c: V576 = AND 0xff V574
0x64e: V577 = ISZERO V576
0x64f: V578 = 0x666
0x652: JUMPI 0x666 V577
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 0
Stack additions: [V576]
Exit stack: [V12, 0x1c2, S0, V576]

================================

Block 0x653
[0x653:0x665]
---
Predecessors: [0x646]
Successors: [0x666]
---
0x653 POP
0x654 PUSH1 0x0
0x656 SLOAD
0x657 CALLER
0x658 PUSH1 0x1
0x65a PUSH1 0xa0
0x65c PUSH1 0x2
0x65e EXP
0x65f SUB
0x660 SWAP1
0x661 DUP2
0x662 AND
0x663 SWAP2
0x664 AND
0x665 EQ
---
0x654: V579 = 0x0
0x656: V580 = S[0x0]
0x657: V581 = CALLER
0x658: V582 = 0x1
0x65a: V583 = 0xa0
0x65c: V584 = 0x2
0x65e: V585 = EXP 0x2 0xa0
0x65f: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x662: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x664: V588 = AND V580 0xffffffffffffffffffffffffffffffffffffffff
0x665: V589 = EQ V588 V587
---
Entry stack: [V12, 0x1c2, S1, V576]
Stack pops: 1
Stack additions: [V589]
Exit stack: [V12, 0x1c2, S1, V589]

================================

Block 0x666
[0x666:0x66b]
---
Predecessors: [0x646, 0x653]
Successors: [0x66c, 0x7e0]
---
0x666 JUMPDEST
0x667 ISZERO
0x668 PUSH2 0x7e0
0x66b JUMPI
---
0x666: JUMPDEST 
0x667: V590 = ISZERO S0
0x668: V591 = 0x7e0
0x66b: JUMPI 0x7e0 V590
---
Entry stack: [V12, 0x1c2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1c2, S1]

================================

Block 0x66c
[0x66c:0x69e]
---
Predecessors: [0x666]
Successors: [0x69f, 0x7e0]
---
0x66c PUSH1 0x0
0x66e SLOAD
0x66f PUSH1 0x2
0x671 SLOAD
0x672 PUSH1 0x1
0x674 PUSH1 0xa0
0x676 PUSH1 0x2
0x678 EXP
0x679 SUB
0x67a SWAP1
0x67b SWAP2
0x67c AND
0x67d SWAP1
0x67e DUP1
0x67f ISZERO
0x680 PUSH2 0x8fc
0x683 MUL
0x684 SWAP1
0x685 PUSH1 0x40
0x687 MLOAD
0x688 PUSH1 0x0
0x68a PUSH1 0x40
0x68c MLOAD
0x68d DUP1
0x68e DUP4
0x68f SUB
0x690 DUP2
0x691 DUP6
0x692 DUP9
0x693 DUP9
0x694 CALL
0x695 SWAP4
0x696 POP
0x697 POP
0x698 POP
0x699 POP
0x69a ISZERO
0x69b PUSH2 0x7e0
0x69e JUMPI
---
0x66c: V592 = 0x0
0x66e: V593 = S[0x0]
0x66f: V594 = 0x2
0x671: V595 = S[0x2]
0x672: V596 = 0x1
0x674: V597 = 0xa0
0x676: V598 = 0x2
0x678: V599 = EXP 0x2 0xa0
0x679: V600 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67c: V601 = AND V593 0xffffffffffffffffffffffffffffffffffffffff
0x67f: V602 = ISZERO V595
0x680: V603 = 0x8fc
0x683: V604 = MUL 0x8fc V602
0x685: V605 = 0x40
0x687: V606 = M[0x40]
0x688: V607 = 0x0
0x68a: V608 = 0x40
0x68c: V609 = M[0x40]
0x68f: V610 = SUB V606 V609
0x694: V611 = CALL V604 V601 V595 V609 V610 V609 0x0
0x69a: V612 = ISZERO V611
0x69b: V613 = 0x7e0
0x69e: JUMPI 0x7e0 V612
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S0]

================================

Block 0x69f
[0x69f:0x768]
---
Predecessors: [0x66c]
Successors: [0x769, 0x76d]
---
0x69f PUSH1 0x0
0x6a1 DUP1
0x6a2 SLOAD
0x6a3 PUSH1 0x2
0x6a5 SLOAD
0x6a6 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6c7 SWAP3
0x6c8 PUSH1 0x1
0x6ca PUSH1 0xa0
0x6cc PUSH1 0x2
0x6ce EXP
0x6cf SUB
0x6d0 SWAP1
0x6d1 SWAP3
0x6d2 AND
0x6d3 SWAP2
0x6d4 PUSH1 0x40
0x6d6 MLOAD
0x6d7 PUSH1 0x1
0x6d9 PUSH1 0xa0
0x6db PUSH1 0x2
0x6dd EXP
0x6de SUB
0x6df SWAP1
0x6e0 SWAP4
0x6e1 AND
0x6e2 DUP4
0x6e3 MSTORE
0x6e4 PUSH1 0x20
0x6e6 DUP4
0x6e7 ADD
0x6e8 SWAP2
0x6e9 SWAP1
0x6ea SWAP2
0x6eb MSTORE
0x6ec ISZERO
0x6ed ISZERO
0x6ee PUSH1 0x40
0x6f0 DUP1
0x6f1 DUP4
0x6f2 ADD
0x6f3 SWAP2
0x6f4 SWAP1
0x6f5 SWAP2
0x6f6 MSTORE
0x6f7 PUSH1 0x60
0x6f9 SWAP1
0x6fa SWAP2
0x6fb ADD
0x6fc SWAP1
0x6fd MLOAD
0x6fe DUP1
0x6ff SWAP2
0x700 SUB
0x701 SWAP1
0x702 LOG1
0x703 PUSH1 0x9
0x705 SLOAD
0x706 PUSH1 0x0
0x708 DUP1
0x709 SLOAD
0x70a PUSH1 0x1
0x70c PUSH1 0xa0
0x70e PUSH1 0x2
0x710 EXP
0x711 SUB
0x712 SWAP3
0x713 DUP4
0x714 AND
0x715 SWAP3
0x716 PUSH4 0xa9059cbb
0x71b SWAP3
0x71c SWAP2
0x71d AND
0x71e SWAP1
0x71f DUP4
0x720 SWAP1
0x721 PUSH4 0x70a08231
0x726 SWAP1
0x727 ADDRESS
0x728 SWAP1
0x729 PUSH1 0x40
0x72b MLOAD
0x72c PUSH1 0x20
0x72e ADD
0x72f MSTORE
0x730 PUSH1 0x40
0x732 MLOAD
0x733 PUSH1 0xe0
0x735 PUSH1 0x2
0x737 EXP
0x738 PUSH4 0xffffffff
0x73d DUP5
0x73e AND
0x73f MUL
0x740 DUP2
0x741 MSTORE
0x742 PUSH1 0x1
0x744 PUSH1 0xa0
0x746 PUSH1 0x2
0x748 EXP
0x749 SUB
0x74a SWAP1
0x74b SWAP2
0x74c AND
0x74d PUSH1 0x4
0x74f DUP3
0x750 ADD
0x751 MSTORE
0x752 PUSH1 0x24
0x754 ADD
0x755 PUSH1 0x20
0x757 PUSH1 0x40
0x759 MLOAD
0x75a DUP1
0x75b DUP4
0x75c SUB
0x75d DUP2
0x75e PUSH1 0x0
0x760 DUP8
0x761 DUP1
0x762 EXTCODESIZE
0x763 ISZERO
0x764 ISZERO
0x765 PUSH2 0x76d
0x768 JUMPI
---
0x69f: V614 = 0x0
0x6a2: V615 = S[0x0]
0x6a3: V616 = 0x2
0x6a5: V617 = S[0x2]
0x6a6: V618 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6c8: V619 = 0x1
0x6ca: V620 = 0xa0
0x6cc: V621 = 0x2
0x6ce: V622 = EXP 0x2 0xa0
0x6cf: V623 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d2: V624 = AND V615 0xffffffffffffffffffffffffffffffffffffffff
0x6d4: V625 = 0x40
0x6d6: V626 = M[0x40]
0x6d7: V627 = 0x1
0x6d9: V628 = 0xa0
0x6db: V629 = 0x2
0x6dd: V630 = EXP 0x2 0xa0
0x6de: V631 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e1: V632 = AND V624 0xffffffffffffffffffffffffffffffffffffffff
0x6e3: M[V626] = V632
0x6e4: V633 = 0x20
0x6e7: V634 = ADD V626 0x20
0x6eb: M[V634] = V617
0x6ec: V635 = ISZERO 0x0
0x6ed: V636 = ISZERO 0x1
0x6ee: V637 = 0x40
0x6f2: V638 = ADD V626 0x40
0x6f6: M[V638] = 0x0
0x6f7: V639 = 0x60
0x6fb: V640 = ADD V626 0x60
0x6fd: V641 = M[0x40]
0x700: V642 = SUB V640 V641
0x702: LOG V641 V642 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x703: V643 = 0x9
0x705: V644 = S[0x9]
0x706: V645 = 0x0
0x709: V646 = S[0x0]
0x70a: V647 = 0x1
0x70c: V648 = 0xa0
0x70e: V649 = 0x2
0x710: V650 = EXP 0x2 0xa0
0x711: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x714: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x716: V653 = 0xa9059cbb
0x71d: V654 = AND V646 0xffffffffffffffffffffffffffffffffffffffff
0x721: V655 = 0x70a08231
0x727: V656 = ADDRESS
0x729: V657 = 0x40
0x72b: V658 = M[0x40]
0x72c: V659 = 0x20
0x72e: V660 = ADD 0x20 V658
0x72f: M[V660] = 0x0
0x730: V661 = 0x40
0x732: V662 = M[0x40]
0x733: V663 = 0xe0
0x735: V664 = 0x2
0x737: V665 = EXP 0x2 0xe0
0x738: V666 = 0xffffffff
0x73e: V667 = AND 0x70a08231 0xffffffff
0x73f: V668 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x741: M[V662] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x742: V669 = 0x1
0x744: V670 = 0xa0
0x746: V671 = 0x2
0x748: V672 = EXP 0x2 0xa0
0x749: V673 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74c: V674 = AND V656 0xffffffffffffffffffffffffffffffffffffffff
0x74d: V675 = 0x4
0x750: V676 = ADD V662 0x4
0x751: M[V676] = V674
0x752: V677 = 0x24
0x754: V678 = ADD 0x24 V662
0x755: V679 = 0x20
0x757: V680 = 0x40
0x759: V681 = M[0x40]
0x75c: V682 = SUB V678 V681
0x75e: V683 = 0x0
0x762: V684 = EXTCODESIZE V652
0x763: V685 = ISZERO V684
0x764: V686 = ISZERO V685
0x765: V687 = 0x76d
0x768: JUMPI 0x76d V686
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 0
Stack additions: [V652, 0xa9059cbb, V654, V652, 0x70a08231, V678, 0x20, V681, V682, V681, 0x0, V652]
Exit stack: [V12, 0x1c2, S0, V652, 0xa9059cbb, V654, V652, 0x70a08231, V678, 0x20, V681, V682, V681, 0x0, V652]

================================

Block 0x769
[0x769:0x76c]
---
Predecessors: [0x69f]
Successors: []
---
0x769 PUSH1 0x0
0x76b DUP1
0x76c REVERT
---
0x769: V688 = 0x0
0x76c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c2, S12, V652, 0xa9059cbb, V654, V652, 0x70a08231, V678, 0x20, V681, V682, V681, 0x0, V652]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S12, V652, 0xa9059cbb, V654, V652, 0x70a08231, V678, 0x20, V681, V682, V681, 0x0, V652]

================================

Block 0x76d
[0x76d:0x779]
---
Predecessors: [0x69f]
Successors: [0x77a, 0x77e]
---
0x76d JUMPDEST
0x76e PUSH2 0x2c6
0x771 GAS
0x772 SUB
0x773 CALL
0x774 ISZERO
0x775 ISZERO
0x776 PUSH2 0x77e
0x779 JUMPI
---
0x76d: JUMPDEST 
0x76e: V689 = 0x2c6
0x771: V690 = GAS
0x772: V691 = SUB V690 0x2c6
0x773: V692 = CALL V691 V652 0x0 V681 V682 V681 0x20
0x774: V693 = ISZERO V692
0x775: V694 = ISZERO V693
0x776: V695 = 0x77e
0x779: JUMPI 0x77e V694
---
Entry stack: [V12, 0x1c2, S12, V652, 0xa9059cbb, V654, V652, 0x70a08231, V678, 0x20, V681, V682, V681, 0x0, V652]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1c2, S12, V652, 0xa9059cbb, V654, V652, 0x70a08231, V678]

================================

Block 0x77a
[0x77a:0x77d]
---
Predecessors: [0x76d]
Successors: []
---
0x77a PUSH1 0x0
0x77c DUP1
0x77d REVERT
---
0x77a: V696 = 0x0
0x77d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c2, S6, V652, 0xa9059cbb, V654, V652, 0x70a08231, V678]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S6, V652, 0xa9059cbb, V654, V652, 0x70a08231, V678]

================================

Block 0x77e
[0x77e:0x7c6]
---
Predecessors: [0x76d]
Successors: [0x7c7, 0x7cb]
---
0x77e JUMPDEST
0x77f POP
0x780 POP
0x781 POP
0x782 PUSH1 0x40
0x784 MLOAD
0x785 DUP1
0x786 MLOAD
0x787 SWAP1
0x788 POP
0x789 PUSH1 0x40
0x78b MLOAD
0x78c PUSH1 0xe0
0x78e PUSH1 0x2
0x790 EXP
0x791 PUSH4 0xffffffff
0x796 DUP6
0x797 AND
0x798 MUL
0x799 DUP2
0x79a MSTORE
0x79b PUSH1 0x1
0x79d PUSH1 0xa0
0x79f PUSH1 0x2
0x7a1 EXP
0x7a2 SUB
0x7a3 SWAP1
0x7a4 SWAP3
0x7a5 AND
0x7a6 PUSH1 0x4
0x7a8 DUP4
0x7a9 ADD
0x7aa MSTORE
0x7ab PUSH1 0x24
0x7ad DUP3
0x7ae ADD
0x7af MSTORE
0x7b0 PUSH1 0x44
0x7b2 ADD
0x7b3 PUSH1 0x0
0x7b5 PUSH1 0x40
0x7b7 MLOAD
0x7b8 DUP1
0x7b9 DUP4
0x7ba SUB
0x7bb DUP2
0x7bc PUSH1 0x0
0x7be DUP8
0x7bf DUP1
0x7c0 EXTCODESIZE
0x7c1 ISZERO
0x7c2 ISZERO
0x7c3 PUSH2 0x7cb
0x7c6 JUMPI
---
0x77e: JUMPDEST 
0x782: V697 = 0x40
0x784: V698 = M[0x40]
0x786: V699 = M[V698]
0x789: V700 = 0x40
0x78b: V701 = M[0x40]
0x78c: V702 = 0xe0
0x78e: V703 = 0x2
0x790: V704 = EXP 0x2 0xe0
0x791: V705 = 0xffffffff
0x797: V706 = AND 0xa9059cbb 0xffffffff
0x798: V707 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x79a: M[V701] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x79b: V708 = 0x1
0x79d: V709 = 0xa0
0x79f: V710 = 0x2
0x7a1: V711 = EXP 0x2 0xa0
0x7a2: V712 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a5: V713 = AND V654 0xffffffffffffffffffffffffffffffffffffffff
0x7a6: V714 = 0x4
0x7a9: V715 = ADD V701 0x4
0x7aa: M[V715] = V713
0x7ab: V716 = 0x24
0x7ae: V717 = ADD V701 0x24
0x7af: M[V717] = V699
0x7b0: V718 = 0x44
0x7b2: V719 = ADD 0x44 V701
0x7b3: V720 = 0x0
0x7b5: V721 = 0x40
0x7b7: V722 = M[0x40]
0x7ba: V723 = SUB V719 V722
0x7bc: V724 = 0x0
0x7c0: V725 = EXTCODESIZE V652
0x7c1: V726 = ISZERO V725
0x7c2: V727 = ISZERO V726
0x7c3: V728 = 0x7cb
0x7c6: JUMPI 0x7cb V727
---
Entry stack: [V12, 0x1c2, S6, V652, 0xa9059cbb, V654, V652, 0x70a08231, V678]
Stack pops: 6
Stack additions: [S5, S4, V719, 0x0, V722, V723, V722, 0x0, S5]
Exit stack: [V12, 0x1c2, S6, V652, 0xa9059cbb, V719, 0x0, V722, V723, V722, 0x0, V652]

================================

Block 0x7c7
[0x7c7:0x7ca]
---
Predecessors: [0x77e]
Successors: []
---
0x7c7 PUSH1 0x0
0x7c9 DUP1
0x7ca REVERT
---
0x7c7: V729 = 0x0
0x7ca: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c2, S9, V652, 0xa9059cbb, V719, 0x0, V722, V723, V722, 0x0, V652]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S9, V652, 0xa9059cbb, V719, 0x0, V722, V723, V722, 0x0, V652]

================================

Block 0x7cb
[0x7cb:0x7d7]
---
Predecessors: [0x77e]
Successors: [0x7d8, 0x7dc]
---
0x7cb JUMPDEST
0x7cc PUSH2 0x2c6
0x7cf GAS
0x7d0 SUB
0x7d1 CALL
0x7d2 ISZERO
0x7d3 ISZERO
0x7d4 PUSH2 0x7dc
0x7d7 JUMPI
---
0x7cb: JUMPDEST 
0x7cc: V730 = 0x2c6
0x7cf: V731 = GAS
0x7d0: V732 = SUB V731 0x2c6
0x7d1: V733 = CALL V732 V652 0x0 V722 V723 V722 0x0
0x7d2: V734 = ISZERO V733
0x7d3: V735 = ISZERO V734
0x7d4: V736 = 0x7dc
0x7d7: JUMPI 0x7dc V735
---
Entry stack: [V12, 0x1c2, S9, V652, 0xa9059cbb, V719, 0x0, V722, V723, V722, 0x0, V652]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1c2, S9, V652, 0xa9059cbb, V719]

================================

Block 0x7d8
[0x7d8:0x7db]
---
Predecessors: [0x7cb]
Successors: []
---
0x7d8 PUSH1 0x0
0x7da DUP1
0x7db REVERT
---
0x7d8: V737 = 0x0
0x7db: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c2, S3, V652, 0xa9059cbb, V719]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S3, V652, 0xa9059cbb, V719]

================================

Block 0x7dc
[0x7dc:0x7df]
---
Predecessors: [0x7cb]
Successors: [0x7e0]
---
0x7dc JUMPDEST
0x7dd POP
0x7de POP
0x7df POP
---
0x7dc: JUMPDEST 
---
Entry stack: [V12, 0x1c2, S3, V652, 0xa9059cbb, V719]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1c2, S3]

================================

Block 0x7e0
[0x7e0:0x7e0]
---
Predecessors: [0x565, 0x666, 0x66c, 0x7dc]
Successors: [0x7e1]
---
0x7e0 JUMPDEST
---
0x7e0: JUMPDEST 
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S0]

================================

Block 0x7e1
[0x7e1:0x7e1]
---
Predecessors: [0x7e0]
Successors: [0x7e2]
---
0x7e1 JUMPDEST
---
0x7e1: JUMPDEST 
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S0]

================================

Block 0x7e2
[0x7e2:0x7e2]
---
Predecessors: [0x7e1]
Successors: [0x7e3]
---
0x7e2 JUMPDEST
---
0x7e2: JUMPDEST 
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S0]

================================

Block 0x7e3
[0x7e3:0x7e3]
---
Predecessors: [0x7e2]
Successors: [0x7e4]
---
0x7e3 JUMPDEST
---
0x7e3: JUMPDEST 
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c2, S0]

================================

Block 0x7e4
[0x7e4:0x7e6]
---
Predecessors: [0x7e3]
Successors: [0x1c2]
---
0x7e4 JUMPDEST
0x7e5 POP
0x7e6 JUMP
---
0x7e4: JUMPDEST 
0x7e6: JUMP 0x1c2
---
Entry stack: [V12, 0x1c2, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e7
[0x7e7:0x7f3]
---
Predecessors: [0x321]
Successors: [0x7f4, 0x7fb]
---
0x7e7 JUMPDEST
0x7e8 PUSH1 0x3
0x7ea SLOAD
0x7eb PUSH1 0x0
0x7ed SWAP1
0x7ee DUP3
0x7ef LT
0x7f0 PUSH2 0x7fb
0x7f3 JUMPI
---
0x7e7: JUMPDEST 
0x7e8: V738 = 0x3
0x7ea: V739 = S[0x3]
0x7eb: V740 = 0x0
0x7ef: V741 = LT V72 V739
0x7f0: V742 = 0x7fb
0x7f3: JUMPI 0x7fb V741
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x0]

================================

Block 0x7f4
[0x7f4:0x7fa]
---
Predecessors: [0x7e7]
Successors: [0x821]
---
0x7f4 POP
0x7f5 PUSH1 0x78
0x7f7 PUSH2 0x821
0x7fa JUMP
---
0x7f5: V743 = 0x78
0x7f7: V744 = 0x821
0x7fa: JUMP 0x821
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x0]
Stack pops: 1
Stack additions: [0x78]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x78]

================================

Block 0x7fb
[0x7fb:0x804]
---
Predecessors: [0x7e7]
Successors: [0x805, 0x80c]
---
0x7fb JUMPDEST
0x7fc PUSH1 0x4
0x7fe SLOAD
0x7ff DUP3
0x800 LT
0x801 PUSH2 0x80c
0x804 JUMPI
---
0x7fb: JUMPDEST 
0x7fc: V745 = 0x4
0x7fe: V746 = S[0x4]
0x800: V747 = LT V72 V746
0x801: V748 = 0x80c
0x804: JUMPI 0x80c V747
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x0]

================================

Block 0x805
[0x805:0x80b]
---
Predecessors: [0x7fb]
Successors: [0x821]
---
0x805 POP
0x806 PUSH1 0x73
0x808 PUSH2 0x821
0x80b JUMP
---
0x806: V749 = 0x73
0x808: V750 = 0x821
0x80b: JUMP 0x821
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x0]
Stack pops: 1
Stack additions: [0x73]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x73]

================================

Block 0x80c
[0x80c:0x815]
---
Predecessors: [0x7fb]
Successors: [0x816, 0x81d]
---
0x80c JUMPDEST
0x80d PUSH1 0x5
0x80f SLOAD
0x810 DUP3
0x811 LT
0x812 PUSH2 0x81d
0x815 JUMPI
---
0x80c: JUMPDEST 
0x80d: V751 = 0x5
0x80f: V752 = S[0x5]
0x811: V753 = LT V72 V752
0x812: V754 = 0x81d
0x815: JUMPI 0x81d V753
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x0]

================================

Block 0x816
[0x816:0x81c]
---
Predecessors: [0x80c]
Successors: [0x821]
---
0x816 POP
0x817 PUSH1 0x6e
0x819 PUSH2 0x821
0x81c JUMP
---
0x817: V755 = 0x6e
0x819: V756 = 0x821
0x81c: JUMP 0x821
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x0]
Stack pops: 1
Stack additions: [0x6e]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x6e]

================================

Block 0x81d
[0x81d:0x820]
---
Predecessors: [0x80c]
Successors: [0x821]
---
0x81d JUMPDEST
0x81e POP
0x81f PUSH1 0x64
---
0x81d: JUMPDEST 
0x81f: V757 = 0x64
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x0]
Stack pops: 1
Stack additions: [0x64]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, 0x64]

================================

Block 0x821
[0x821:0x821]
---
Predecessors: [0x7f4, 0x805, 0x816, 0x81d]
Successors: [0x822]
---
0x821 JUMPDEST
---
0x821: JUMPDEST 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, {0x64, 0x6e, 0x73, 0x78}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, {0x64, 0x6e, 0x73, 0x78}]

================================

Block 0x822
[0x822:0x822]
---
Predecessors: [0x821]
Successors: [0x823]
---
0x822 JUMPDEST
---
0x822: JUMPDEST 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, {0x64, 0x6e, 0x73, 0x78}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, {0x64, 0x6e, 0x73, 0x78}]

================================

Block 0x823
[0x823:0x823]
---
Predecessors: [0x822]
Successors: [0x824]
---
0x823 JUMPDEST
---
0x823: JUMPDEST 
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, {0x64, 0x6e, 0x73, 0x78}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, {0x64, 0x6e, 0x73, 0x78}]

================================

Block 0x824
[0x824:0x828]
---
Predecessors: [0x823]
Successors: [0x32f]
---
0x824 JUMPDEST
0x825 SWAP2
0x826 SWAP1
0x827 POP
0x828 JUMP
---
0x824: JUMPDEST 
0x828: JUMP 0x32f
---
Entry stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, 0x32f, V72, {0x64, 0x6e, 0x73, 0x78}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V72, V79, 0xa9059cbb, V64, 0xf6, V72, 0x0, 0x0, 0x0, {0x64, 0x6e, 0x73, 0x78}]

================================

Block 0x829
[0x829:0x84e]
---
Predecessors: []
Successors: [0x84f]
Has unresolved jump.
---
0x829 STOP
0x82a LOG1
0x82b PUSH6 0x627a7a723058
0x832 SHA3
0x833 MISSING 0xc0
0x834 ORIGIN
0x835 PUSH7 0xf0a9e485517852
0x83d DUP11
0x83e MISSING 0x5d
0x83f RETURNDATACOPY
0x840 MISSING 0xae
0x841 MISSING 0xc5
0x842 MISSING 0xd2
0x843 MISSING 0xb8
0x844 SUB
0x845 DUP8
0x846 DUP6
0x847 MISSING 0xc0
0x848 SGT
0x849 MISSING 0x23
0x84a MISSING 0xb4
0x84b PC
0x84c DUP2
0x84d MISSING 0xa6
0x84e JUMPI
---
0x829: STOP 
0x82a: LOG S0 S1 S2
0x82b: V758 = 0x627a7a723058
0x832: V759 = SHA3 0x627a7a723058 S3
0x833: MISSING 0xc0
0x834: V760 = ORIGIN
0x835: V761 = 0xf0a9e485517852
0x83e: MISSING 0x5d
0x83f: RETURNDATACOPY S0 S1 S2
0x840: MISSING 0xae
0x841: MISSING 0xc5
0x842: MISSING 0xd2
0x843: MISSING 0xb8
0x844: V762 = SUB S0 S1
0x847: MISSING 0xc0
0x848: V763 = SGT S0 S1
0x849: MISSING 0x23
0x84a: MISSING 0xb4
0x84b: V764 = PC
0x84d: MISSING 0xa6
0x84e: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V759, S8, 0xf0a9e485517852, V760, S0, S1, S2, S3, S4, S5, S6, S7, S8, S5, S8, V762, S2, S3, S4, S5, S6, S7, S8, V763, S0, V764, S0]
Exit stack: []

================================

Block 0x84f
[0x84f:0x854]
---
Predecessors: [0x829]
Successors: []
---
0x84f PUSH4 0xa84a5400
0x854 MISSING 0x29
---
0x84f: V765 = 0xa84a5400
0x854: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa84a5400]
Exit stack: [0xa84a5400]

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1af
Exit block: 0x1c2
Body: 0x1af, 0x1b6, 0x1ba, 0x1c2, 0x48e, 0x498, 0x4a3, 0x503, 0x513, 0x514, 0x515

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1c4
Exit block: 0x1d7
Body: 0x1c4, 0x1cb, 0x1cf, 0x1d7, 0x517

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x1e9
Exit block: 0x1fc
Body: 0x1e9, 0x1f0, 0x1f4, 0x1fc, 0x51d

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x218
Exit block: 0x1fc
Body: 0x1fc, 0x218, 0x21f, 0x223, 0x52c

Function 4:
Public function signature: 0x70a08231
Entry block: 0x247
Exit block: 0x1d7
Body: 0x1d7, 0x247, 0x24e, 0x252, 0x53b

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x278
Exit block: 0x1d7
Body: 0x1d7, 0x278, 0x27f, 0x283, 0x54d

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x29d
Exit block: 0x1d7
Body: 0x1d7, 0x29d, 0x2a4, 0x2a8, 0x553

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x2c2
Exit block: 0x1d7
Body: 0x1d7, 0x2c2, 0x2c9, 0x2cd, 0x559

Function 8:
Public function signature: 0xcde9f2ea
Entry block: 0x2e7
Exit block: 0x1d7
Body: 0x1d7, 0x2e7, 0x2ee, 0x2f2, 0x55f

Function 9:
Public function signature: 0xfd6b7ef8
Entry block: 0x30c
Exit block: 0x7d8
Body: 0x1c2, 0x30c, 0x313, 0x317, 0x565, 0x572, 0x57e, 0x5a5, 0x5d0, 0x628, 0x644, 0x645, 0x646, 0x653, 0x666, 0x66c, 0x69f, 0x769, 0x76d, 0x77a, 0x77e, 0x7c7, 0x7cb, 0x7d8, 0x7dc, 0x7e0, 0x7e1, 0x7e2, 0x7e3, 0x7e4

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x1ac
Body: 0x88, 0x89, 0x9b, 0x9f, 0xb0, 0xb4, 0xf6, 0x13f, 0x143, 0x150, 0x154, 0x1ac, 0x321, 0x32f, 0x345, 0x353, 0x354, 0x35e, 0x35f, 0x367, 0x377, 0x393, 0x394, 0x39e, 0x3b2, 0x3c2, 0x3de, 0x3fd, 0x40d, 0x429, 0x448, 0x465, 0x466, 0x470, 0x471, 0x47b, 0x47c, 0x480, 0x481, 0x482, 0x483, 0x487, 0x7e7, 0x7f4, 0x7fb, 0x805, 0x80c, 0x816, 0x81d, 0x821, 0x822, 0x823, 0x824

