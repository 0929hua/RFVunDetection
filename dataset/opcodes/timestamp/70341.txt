Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa3]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa3
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa3
0xc: JUMPI 0xa3 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3a]
---
Predecessors: [0x0]
Successors: [0x3b, 0x76]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 DUP1
0x31 PUSH4 0x70a08231
0x36 GT
0x37 PUSH2 0x76
0x3a JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x31: V10 = 0x70a08231
0x36: V11 = GT 0x70a08231 V9
0x37: V12 = 0x76
0x3a: JUMPI 0x76 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0xd]
Successors: [0x46, 0x376]
---
0x3b DUP1
0x3c PUSH4 0x70a08231
0x41 EQ
0x42 PUSH2 0x376
0x45 JUMPI
---
0x3c: V13 = 0x70a08231
0x41: V14 = EQ 0x70a08231 V9
0x42: V15 = 0x376
0x45: JUMPI 0x376 V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x3db]
---
0x46 DUP1
0x47 PUSH4 0x7a3a0e84
0x4c EQ
0x4d PUSH2 0x3db
0x50 JUMPI
---
0x47: V16 = 0x7a3a0e84
0x4c: V17 = EQ 0x7a3a0e84 V9
0x4d: V18 = 0x3db
0x50: JUMPI 0x3db V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x406]
---
0x51 DUP1
0x52 PUSH4 0x7b3e5e7b
0x57 EQ
0x58 PUSH2 0x406
0x5b JUMPI
---
0x52: V19 = 0x7b3e5e7b
0x57: V20 = EQ 0x7b3e5e7b V9
0x58: V21 = 0x406
0x5b: JUMPI 0x406 V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x431]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x431
0x66 JUMPI
---
0x5d: V22 = 0xa035b1fe
0x62: V23 = EQ 0xa035b1fe V9
0x63: V24 = 0x431
0x66: JUMPI 0x431 V23
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x45c]
---
0x67 DUP1
0x68 PUSH4 0xfd6b7ef8
0x6d EQ
0x6e PUSH2 0x45c
0x71 JUMPI
---
0x68: V25 = 0xfd6b7ef8
0x6d: V26 = EQ 0xfd6b7ef8 V9
0x6e: V27 = 0x45c
0x71: JUMPI 0x45c V26
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x67]
Successors: [0xa3]
---
0x72 PUSH2 0xa3
0x75 JUMP
---
0x72: V28 = 0xa3
0x75: JUMP 0xa3
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x76
[0x76:0x81]
---
Predecessors: [0xd]
Successors: [0x82, 0x286]
---
0x76 JUMPDEST
0x77 DUP1
0x78 PUSH4 0x1cb3b20
0x7d EQ
0x7e PUSH2 0x286
0x81 JUMPI
---
0x76: JUMPDEST 
0x78: V29 = 0x1cb3b20
0x7d: V30 = EQ 0x1cb3b20 V9
0x7e: V31 = 0x286
0x81: JUMPI 0x286 V30
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x76]
Successors: [0x8d, 0x29d]
---
0x82 DUP1
0x83 PUSH4 0x29dcb0cf
0x88 EQ
0x89 PUSH2 0x29d
0x8c JUMPI
---
0x83: V32 = 0x29dcb0cf
0x88: V33 = EQ 0x29dcb0cf V9
0x89: V34 = 0x29d
0x8c: JUMPI 0x29d V33
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x2c8]
---
0x8d DUP1
0x8e PUSH4 0x38af3eed
0x93 EQ
0x94 PUSH2 0x2c8
0x97 JUMPI
---
0x8e: V35 = 0x38af3eed
0x93: V36 = EQ 0x38af3eed V9
0x94: V37 = 0x2c8
0x97: JUMPI 0x2c8 V36
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x31f]
---
0x98 DUP1
0x99 PUSH4 0x6e66f6e9
0x9e EQ
0x9f PUSH2 0x31f
0xa2 JUMPI
---
0x99: V38 = 0x6e66f6e9
0x9e: V39 = EQ 0x6e66f6e9 V9
0x9f: V40 = 0x31f
0xa2: JUMPI 0x31f V39
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xa3
[0xa3:0xba]
---
Predecessors: [0x0, 0x72, 0x98]
Successors: [0xbb, 0xbf]
---
0xa3 JUMPDEST
0xa4 PUSH1 0x7
0xa6 PUSH1 0x1
0xa8 SWAP1
0xa9 SLOAD
0xaa SWAP1
0xab PUSH2 0x100
0xae EXP
0xaf SWAP1
0xb0 DIV
0xb1 PUSH1 0xff
0xb3 AND
0xb4 ISZERO
0xb5 ISZERO
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xa3: JUMPDEST 
0xa4: V41 = 0x7
0xa6: V42 = 0x1
0xa9: V43 = S[0x7]
0xab: V44 = 0x100
0xae: V45 = EXP 0x100 0x1
0xb0: V46 = DIV V43 0x100
0xb1: V47 = 0xff
0xb3: V48 = AND 0xff V46
0xb4: V49 = ISZERO V48
0xb5: V50 = ISZERO V49
0xb6: V51 = ISZERO V50
0xb7: V52 = 0xbf
0xba: JUMPI 0xbf V51
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xa3]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V53 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xbf
[0xbf:0x16b]
---
Predecessors: [0xa3]
Successors: [0x16c, 0x16d]
---
0xbf JUMPDEST
0xc0 PUSH1 0x0
0xc2 CALLVALUE
0xc3 SWAP1
0xc4 POP
0xc5 DUP1
0xc6 PUSH1 0x6
0xc8 PUSH1 0x0
0xca CALLER
0xcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0 AND
0xe1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf6 AND
0xf7 DUP2
0xf8 MSTORE
0xf9 PUSH1 0x20
0xfb ADD
0xfc SWAP1
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x20
0x101 ADD
0x102 PUSH1 0x0
0x104 SHA3
0x105 PUSH1 0x0
0x107 DUP3
0x108 DUP3
0x109 SLOAD
0x10a ADD
0x10b SWAP3
0x10c POP
0x10d POP
0x10e DUP2
0x10f SWAP1
0x110 SSTORE
0x111 POP
0x112 DUP1
0x113 PUSH1 0x2
0x115 PUSH1 0x0
0x117 DUP3
0x118 DUP3
0x119 SLOAD
0x11a ADD
0x11b SWAP3
0x11c POP
0x11d POP
0x11e DUP2
0x11f SWAP1
0x120 SSTORE
0x121 POP
0x122 PUSH1 0x5
0x124 PUSH1 0x0
0x126 SWAP1
0x127 SLOAD
0x128 SWAP1
0x129 PUSH2 0x100
0x12c EXP
0x12d SWAP1
0x12e DIV
0x12f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144 AND
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b PUSH4 0xa9059cbb
0x160 CALLER
0x161 PUSH1 0x4
0x163 SLOAD
0x164 DUP5
0x165 DUP2
0x166 ISZERO
0x167 ISZERO
0x168 PUSH2 0x16d
0x16b JUMPI
---
0xbf: JUMPDEST 
0xc0: V54 = 0x0
0xc2: V55 = CALLVALUE
0xc6: V56 = 0x6
0xc8: V57 = 0x0
0xca: V58 = CALLER
0xcb: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xe1: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0xf6: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0xf8: M[0x0] = V62
0xf9: V63 = 0x20
0xfb: V64 = ADD 0x20 0x0
0xfe: M[0x20] = 0x6
0xff: V65 = 0x20
0x101: V66 = ADD 0x20 0x20
0x102: V67 = 0x0
0x104: V68 = SHA3 0x0 0x40
0x105: V69 = 0x0
0x109: V70 = S[V68]
0x10a: V71 = ADD V70 V55
0x110: S[V68] = V71
0x113: V72 = 0x2
0x115: V73 = 0x0
0x119: V74 = S[0x2]
0x11a: V75 = ADD V74 V55
0x120: S[0x2] = V75
0x122: V76 = 0x5
0x124: V77 = 0x0
0x127: V78 = S[0x5]
0x129: V79 = 0x100
0x12c: V80 = EXP 0x100 0x0
0x12e: V81 = DIV V78 0x1
0x12f: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x144: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x145: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x15b: V86 = 0xa9059cbb
0x160: V87 = CALLER
0x161: V88 = 0x4
0x163: V89 = S[0x4]
0x166: V90 = ISZERO V89
0x167: V91 = ISZERO V90
0x168: V92 = 0x16d
0x16b: JUMPI 0x16d V91
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V55, V85, 0xa9059cbb, V87, V89, V55]
Exit stack: [V9, V55, V85, 0xa9059cbb, V87, V89, V55]

================================

Block 0x16c
[0x16c:0x16c]
---
Predecessors: [0xbf]
Successors: []
---
0x16c INVALID
---
0x16c: INVALID 
---
Entry stack: [V9, V55, V85, 0xa9059cbb, V87, V89, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V55, V85, 0xa9059cbb, V87, V89, V55]

================================

Block 0x16d
[0x16d:0x1ee]
---
Predecessors: [0xbf]
Successors: [0x1ef, 0x1f3]
---
0x16d JUMPDEST
0x16e DIV
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP4
0x173 PUSH4 0xffffffff
0x178 AND
0x179 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x197 MUL
0x198 DUP2
0x199 MSTORE
0x19a PUSH1 0x4
0x19c ADD
0x19d DUP1
0x19e DUP4
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb DUP2
0x1cc MSTORE
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 DUP3
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 SWAP3
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da PUSH1 0x0
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 DUP4
0x1e1 SUB
0x1e2 DUP2
0x1e3 PUSH1 0x0
0x1e5 DUP8
0x1e6 DUP1
0x1e7 EXTCODESIZE
0x1e8 ISZERO
0x1e9 DUP1
0x1ea ISZERO
0x1eb PUSH2 0x1f3
0x1ee JUMPI
---
0x16d: JUMPDEST 
0x16e: V93 = DIV V55 V89
0x16f: V94 = 0x40
0x171: V95 = M[0x40]
0x173: V96 = 0xffffffff
0x178: V97 = AND 0xffffffff 0xa9059cbb
0x179: V98 = 0x100000000000000000000000000000000000000000000000000000000
0x197: V99 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x199: M[V95] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x19a: V100 = 0x4
0x19c: V101 = ADD 0x4 V95
0x19f: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1b5: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1cc: M[V101] = V105
0x1cd: V106 = 0x20
0x1cf: V107 = ADD 0x20 V101
0x1d2: M[V107] = V93
0x1d3: V108 = 0x20
0x1d5: V109 = ADD 0x20 V107
0x1da: V110 = 0x0
0x1dc: V111 = 0x40
0x1de: V112 = M[0x40]
0x1e1: V113 = SUB V109 V112
0x1e3: V114 = 0x0
0x1e7: V115 = EXTCODESIZE V85
0x1e8: V116 = ISZERO V115
0x1ea: V117 = ISZERO V116
0x1eb: V118 = 0x1f3
0x1ee: JUMPI 0x1f3 V117
---
Entry stack: [V9, V55, V85, 0xa9059cbb, V87, V89, V55]
Stack pops: 5
Stack additions: [S4, S3, V109, 0x0, V112, V113, V112, 0x0, S4, V116]
Exit stack: [V9, V55, V85, 0xa9059cbb, V109, 0x0, V112, V113, V112, 0x0, V85, V116]

================================

Block 0x1ef
[0x1ef:0x1f2]
---
Predecessors: [0x16d]
Successors: []
---
0x1ef PUSH1 0x0
0x1f1 DUP1
0x1f2 REVERT
---
0x1ef: V119 = 0x0
0x1f2: REVERT 0x0 0x0
---
Entry stack: [V9, V55, V85, 0xa9059cbb, V109, 0x0, V112, V113, V112, 0x0, V85, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V55, V85, 0xa9059cbb, V109, 0x0, V112, V113, V112, 0x0, V85, V116]

================================

Block 0x1f3
[0x1f3:0x1fd]
---
Predecessors: [0x16d]
Successors: [0x1fe, 0x207]
---
0x1f3 JUMPDEST
0x1f4 POP
0x1f5 GAS
0x1f6 CALL
0x1f7 ISZERO
0x1f8 DUP1
0x1f9 ISZERO
0x1fa PUSH2 0x207
0x1fd JUMPI
---
0x1f3: JUMPDEST 
0x1f5: V120 = GAS
0x1f6: V121 = CALL V120 V85 0x0 V112 V113 V112 0x0
0x1f7: V122 = ISZERO V121
0x1f9: V123 = ISZERO V122
0x1fa: V124 = 0x207
0x1fd: JUMPI 0x207 V123
---
Entry stack: [V9, V55, V85, 0xa9059cbb, V109, 0x0, V112, V113, V112, 0x0, V85, V116]
Stack pops: 7
Stack additions: [V122]
Exit stack: [V9, V55, V85, 0xa9059cbb, V109, V122]

================================

Block 0x1fe
[0x1fe:0x206]
---
Predecessors: [0x1f3]
Successors: []
---
0x1fe RETURNDATASIZE
0x1ff PUSH1 0x0
0x201 DUP1
0x202 RETURNDATACOPY
0x203 RETURNDATASIZE
0x204 PUSH1 0x0
0x206 REVERT
---
0x1fe: V125 = RETURNDATASIZE
0x1ff: V126 = 0x0
0x202: RETURNDATACOPY 0x0 0x0 V125
0x203: V127 = RETURNDATASIZE
0x204: V128 = 0x0
0x206: REVERT 0x0 V127
---
Entry stack: [V9, V55, V85, 0xa9059cbb, V109, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V55, V85, 0xa9059cbb, V109, V122]

================================

Block 0x207
[0x207:0x285]
---
Predecessors: [0x1f3]
Successors: []
---
0x207 JUMPDEST
0x208 POP
0x209 POP
0x20a POP
0x20b POP
0x20c PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x22d CALLER
0x22e DUP3
0x22f PUSH1 0x1
0x231 PUSH1 0x40
0x233 MLOAD
0x234 DUP1
0x235 DUP5
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x261 AND
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 DUP4
0x268 DUP2
0x269 MSTORE
0x26a PUSH1 0x20
0x26c ADD
0x26d DUP3
0x26e ISZERO
0x26f ISZERO
0x270 ISZERO
0x271 ISZERO
0x272 DUP2
0x273 MSTORE
0x274 PUSH1 0x20
0x276 ADD
0x277 SWAP4
0x278 POP
0x279 POP
0x27a POP
0x27b POP
0x27c PUSH1 0x40
0x27e MLOAD
0x27f DUP1
0x280 SWAP2
0x281 SUB
0x282 SWAP1
0x283 LOG1
0x284 POP
0x285 STOP
---
0x207: JUMPDEST 
0x20c: V129 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x22d: V130 = CALLER
0x22f: V131 = 0x1
0x231: V132 = 0x40
0x233: V133 = M[0x40]
0x236: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x24c: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x261: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x263: M[V133] = V137
0x264: V138 = 0x20
0x266: V139 = ADD 0x20 V133
0x269: M[V139] = V55
0x26a: V140 = 0x20
0x26c: V141 = ADD 0x20 V139
0x26e: V142 = ISZERO 0x1
0x26f: V143 = ISZERO 0x0
0x270: V144 = ISZERO 0x1
0x271: V145 = ISZERO 0x0
0x273: M[V141] = 0x1
0x274: V146 = 0x20
0x276: V147 = ADD 0x20 V141
0x27c: V148 = 0x40
0x27e: V149 = M[0x40]
0x281: V150 = SUB V147 V149
0x283: LOG V149 V150 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x285: STOP 
---
Entry stack: [V9, V55, V85, 0xa9059cbb, V109, V122]
Stack pops: 5
Stack additions: []
Exit stack: [V9]

================================

Block 0x286
[0x286:0x28d]
---
Predecessors: [0x76]
Successors: [0x28e, 0x292]
---
0x286 JUMPDEST
0x287 CALLVALUE
0x288 DUP1
0x289 ISZERO
0x28a PUSH2 0x292
0x28d JUMPI
---
0x286: JUMPDEST 
0x287: V151 = CALLVALUE
0x289: V152 = ISZERO V151
0x28a: V153 = 0x292
0x28d: JUMPI 0x292 V152
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V151]
Exit stack: [V9, V151]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x286]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V154 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V9, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V151]

================================

Block 0x292
[0x292:0x29a]
---
Predecessors: [0x286]
Successors: [0x473]
---
0x292 JUMPDEST
0x293 POP
0x294 PUSH2 0x29b
0x297 PUSH2 0x473
0x29a JUMP
---
0x292: JUMPDEST 
0x294: V155 = 0x29b
0x297: V156 = 0x473
0x29a: JUMP 0x473
---
Entry stack: [V9, V151]
Stack pops: 1
Stack additions: [0x29b]
Exit stack: [V9, 0x29b]

================================

Block 0x29b
[0x29b:0x29c]
---
Predecessors: [0x551]
Successors: []
---
0x29b JUMPDEST
0x29c STOP
---
0x29b: JUMPDEST 
0x29c: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x29d
[0x29d:0x2a4]
---
Predecessors: [0x82]
Successors: [0x2a5, 0x2a9]
---
0x29d JUMPDEST
0x29e CALLVALUE
0x29f DUP1
0x2a0 ISZERO
0x2a1 PUSH2 0x2a9
0x2a4 JUMPI
---
0x29d: JUMPDEST 
0x29e: V157 = CALLVALUE
0x2a0: V158 = ISZERO V157
0x2a1: V159 = 0x2a9
0x2a4: JUMPI 0x2a9 V158
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V157]
Exit stack: [V9, V157]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x29d]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a5: V160 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V9, V157]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V157]

================================

Block 0x2a9
[0x2a9:0x2b1]
---
Predecessors: [0x29d]
Successors: [0x553]
---
0x2a9 JUMPDEST
0x2aa POP
0x2ab PUSH2 0x2b2
0x2ae PUSH2 0x553
0x2b1 JUMP
---
0x2a9: JUMPDEST 
0x2ab: V161 = 0x2b2
0x2ae: V162 = 0x553
0x2b1: JUMP 0x553
---
Entry stack: [V9, V157]
Stack pops: 1
Stack additions: [0x2b2]
Exit stack: [V9, 0x2b2]

================================

Block 0x2b2
[0x2b2:0x2c7]
---
Predecessors: [0x553]
Successors: []
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 DUP3
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd SWAP2
0x2be POP
0x2bf POP
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 DUP1
0x2c4 SWAP2
0x2c5 SUB
0x2c6 SWAP1
0x2c7 RETURN
---
0x2b2: JUMPDEST 
0x2b3: V163 = 0x40
0x2b5: V164 = M[0x40]
0x2b9: M[V164] = V343
0x2ba: V165 = 0x20
0x2bc: V166 = ADD 0x20 V164
0x2c0: V167 = 0x40
0x2c2: V168 = M[0x40]
0x2c5: V169 = SUB V166 V168
0x2c7: RETURN V168 V169
---
Entry stack: [V9, 0x2b2, V343]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x2b2]

================================

Block 0x2c8
[0x2c8:0x2cf]
---
Predecessors: [0x8d]
Successors: [0x2d0, 0x2d4]
---
0x2c8 JUMPDEST
0x2c9 CALLVALUE
0x2ca DUP1
0x2cb ISZERO
0x2cc PUSH2 0x2d4
0x2cf JUMPI
---
0x2c8: JUMPDEST 
0x2c9: V170 = CALLVALUE
0x2cb: V171 = ISZERO V170
0x2cc: V172 = 0x2d4
0x2cf: JUMPI 0x2d4 V171
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V170]
Exit stack: [V9, V170]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x2c8]
Successors: []
---
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 REVERT
---
0x2d0: V173 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V9, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V170]

================================

Block 0x2d4
[0x2d4:0x2dc]
---
Predecessors: [0x2c8]
Successors: [0x559]
---
0x2d4 JUMPDEST
0x2d5 POP
0x2d6 PUSH2 0x2dd
0x2d9 PUSH2 0x559
0x2dc JUMP
---
0x2d4: JUMPDEST 
0x2d6: V174 = 0x2dd
0x2d9: V175 = 0x559
0x2dc: JUMP 0x559
---
Entry stack: [V9, V170]
Stack pops: 1
Stack additions: [0x2dd]
Exit stack: [V9, 0x2dd]

================================

Block 0x2dd
[0x2dd:0x31e]
---
Predecessors: [0x559]
Successors: []
---
0x2dd JUMPDEST
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 DUP1
0x2e2 DUP3
0x2e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f8 AND
0x2f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30e AND
0x30f DUP2
0x310 MSTORE
0x311 PUSH1 0x20
0x313 ADD
0x314 SWAP2
0x315 POP
0x316 POP
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b SWAP2
0x31c SUB
0x31d SWAP1
0x31e RETURN
---
0x2dd: JUMPDEST 
0x2de: V176 = 0x40
0x2e0: V177 = M[0x40]
0x2e3: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x2f9: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x30e: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x310: M[V177] = V181
0x311: V182 = 0x20
0x313: V183 = ADD 0x20 V177
0x317: V184 = 0x40
0x319: V185 = M[0x40]
0x31c: V186 = SUB V183 V185
0x31e: RETURN V185 V186
---
Entry stack: [V9, 0x2dd, V350]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x2dd]

================================

Block 0x31f
[0x31f:0x326]
---
Predecessors: [0x98]
Successors: [0x327, 0x32b]
---
0x31f JUMPDEST
0x320 CALLVALUE
0x321 DUP1
0x322 ISZERO
0x323 PUSH2 0x32b
0x326 JUMPI
---
0x31f: JUMPDEST 
0x320: V187 = CALLVALUE
0x322: V188 = ISZERO V187
0x323: V189 = 0x32b
0x326: JUMPI 0x32b V188
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V187]
Exit stack: [V9, V187]

================================

Block 0x327
[0x327:0x32a]
---
Predecessors: [0x31f]
Successors: []
---
0x327 PUSH1 0x0
0x329 DUP1
0x32a REVERT
---
0x327: V190 = 0x0
0x32a: REVERT 0x0 0x0
---
Entry stack: [V9, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V187]

================================

Block 0x32b
[0x32b:0x333]
---
Predecessors: [0x31f]
Successors: [0x57e]
---
0x32b JUMPDEST
0x32c POP
0x32d PUSH2 0x334
0x330 PUSH2 0x57e
0x333 JUMP
---
0x32b: JUMPDEST 
0x32d: V191 = 0x334
0x330: V192 = 0x57e
0x333: JUMP 0x57e
---
Entry stack: [V9, V187]
Stack pops: 1
Stack additions: [0x334]
Exit stack: [V9, 0x334]

================================

Block 0x334
[0x334:0x375]
---
Predecessors: [0x57e]
Successors: []
---
0x334 JUMPDEST
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 DUP3
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f AND
0x350 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x365 AND
0x366 DUP2
0x367 MSTORE
0x368 PUSH1 0x20
0x36a ADD
0x36b SWAP2
0x36c POP
0x36d POP
0x36e PUSH1 0x40
0x370 MLOAD
0x371 DUP1
0x372 SWAP2
0x373 SUB
0x374 SWAP1
0x375 RETURN
---
0x334: JUMPDEST 
0x335: V193 = 0x40
0x337: V194 = M[0x40]
0x33a: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x350: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x365: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x367: M[V194] = V198
0x368: V199 = 0x20
0x36a: V200 = ADD 0x20 V194
0x36e: V201 = 0x40
0x370: V202 = M[0x40]
0x373: V203 = SUB V200 V202
0x375: RETURN V202 V203
---
Entry stack: [V9, 0x334, V358]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x334]

================================

Block 0x376
[0x376:0x37d]
---
Predecessors: [0x3b]
Successors: [0x37e, 0x382]
---
0x376 JUMPDEST
0x377 CALLVALUE
0x378 DUP1
0x379 ISZERO
0x37a PUSH2 0x382
0x37d JUMPI
---
0x376: JUMPDEST 
0x377: V204 = CALLVALUE
0x379: V205 = ISZERO V204
0x37a: V206 = 0x382
0x37d: JUMPI 0x382 V205
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V204]
Exit stack: [V9, V204]

================================

Block 0x37e
[0x37e:0x381]
---
Predecessors: [0x376]
Successors: []
---
0x37e PUSH1 0x0
0x380 DUP1
0x381 REVERT
---
0x37e: V207 = 0x0
0x381: REVERT 0x0 0x0
---
Entry stack: [V9, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V204]

================================

Block 0x382
[0x382:0x394]
---
Predecessors: [0x376]
Successors: [0x395, 0x399]
---
0x382 JUMPDEST
0x383 POP
0x384 PUSH2 0x3c5
0x387 PUSH1 0x4
0x389 DUP1
0x38a CALLDATASIZE
0x38b SUB
0x38c PUSH1 0x20
0x38e DUP2
0x38f LT
0x390 ISZERO
0x391 PUSH2 0x399
0x394 JUMPI
---
0x382: JUMPDEST 
0x384: V208 = 0x3c5
0x387: V209 = 0x4
0x38a: V210 = CALLDATASIZE
0x38b: V211 = SUB V210 0x4
0x38c: V212 = 0x20
0x38f: V213 = LT V211 0x20
0x390: V214 = ISZERO V213
0x391: V215 = 0x399
0x394: JUMPI 0x399 V214
---
Entry stack: [V9, V204]
Stack pops: 1
Stack additions: [0x3c5, 0x4, V211]
Exit stack: [V9, 0x3c5, 0x4, V211]

================================

Block 0x395
[0x395:0x398]
---
Predecessors: [0x382]
Successors: []
---
0x395 PUSH1 0x0
0x397 DUP1
0x398 REVERT
---
0x395: V216 = 0x0
0x398: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3c5, 0x4, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3c5, 0x4, V211]

================================

Block 0x399
[0x399:0x3c4]
---
Predecessors: [0x382]
Successors: [0x5a4]
---
0x399 JUMPDEST
0x39a DUP2
0x39b ADD
0x39c SWAP1
0x39d DUP1
0x39e DUP1
0x39f CALLDATALOAD
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 AND
0x3b6 SWAP1
0x3b7 PUSH1 0x20
0x3b9 ADD
0x3ba SWAP1
0x3bb SWAP3
0x3bc SWAP2
0x3bd SWAP1
0x3be POP
0x3bf POP
0x3c0 POP
0x3c1 PUSH2 0x5a4
0x3c4 JUMP
---
0x399: JUMPDEST 
0x39b: V217 = ADD 0x4 V211
0x39f: V218 = CALLDATALOAD 0x4
0x3a0: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3b7: V221 = 0x20
0x3b9: V222 = ADD 0x20 0x4
0x3c1: V223 = 0x5a4
0x3c4: JUMP 0x5a4
---
Entry stack: [V9, 0x3c5, 0x4, V211]
Stack pops: 2
Stack additions: [V220]
Exit stack: [V9, 0x3c5, V220]

================================

Block 0x3c5
[0x3c5:0x3da]
---
Predecessors: [0x5a4]
Successors: []
---
0x3c5 JUMPDEST
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 DUP1
0x3ca DUP3
0x3cb DUP2
0x3cc MSTORE
0x3cd PUSH1 0x20
0x3cf ADD
0x3d0 SWAP2
0x3d1 POP
0x3d2 POP
0x3d3 PUSH1 0x40
0x3d5 MLOAD
0x3d6 DUP1
0x3d7 SWAP2
0x3d8 SUB
0x3d9 SWAP1
0x3da RETURN
---
0x3c5: JUMPDEST 
0x3c6: V224 = 0x40
0x3c8: V225 = M[0x40]
0x3cc: M[V225] = V366
0x3cd: V226 = 0x20
0x3cf: V227 = ADD 0x20 V225
0x3d3: V228 = 0x40
0x3d5: V229 = M[0x40]
0x3d8: V230 = SUB V227 V229
0x3da: RETURN V229 V230
---
Entry stack: [V9, 0x3c5, V366]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x3c5]

================================

Block 0x3db
[0x3db:0x3e2]
---
Predecessors: [0x46]
Successors: [0x3e3, 0x3e7]
---
0x3db JUMPDEST
0x3dc CALLVALUE
0x3dd DUP1
0x3de ISZERO
0x3df PUSH2 0x3e7
0x3e2 JUMPI
---
0x3db: JUMPDEST 
0x3dc: V231 = CALLVALUE
0x3de: V232 = ISZERO V231
0x3df: V233 = 0x3e7
0x3e2: JUMPI 0x3e7 V232
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V231]
Exit stack: [V9, V231]

================================

Block 0x3e3
[0x3e3:0x3e6]
---
Predecessors: [0x3db]
Successors: []
---
0x3e3 PUSH1 0x0
0x3e5 DUP1
0x3e6 REVERT
---
0x3e3: V234 = 0x0
0x3e6: REVERT 0x0 0x0
---
Entry stack: [V9, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V231]

================================

Block 0x3e7
[0x3e7:0x3ef]
---
Predecessors: [0x3db]
Successors: [0x5bc]
---
0x3e7 JUMPDEST
0x3e8 POP
0x3e9 PUSH2 0x3f0
0x3ec PUSH2 0x5bc
0x3ef JUMP
---
0x3e7: JUMPDEST 
0x3e9: V235 = 0x3f0
0x3ec: V236 = 0x5bc
0x3ef: JUMP 0x5bc
---
Entry stack: [V9, V231]
Stack pops: 1
Stack additions: [0x3f0]
Exit stack: [V9, 0x3f0]

================================

Block 0x3f0
[0x3f0:0x405]
---
Predecessors: [0x5bc]
Successors: []
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x40
0x3f3 MLOAD
0x3f4 DUP1
0x3f5 DUP3
0x3f6 DUP2
0x3f7 MSTORE
0x3f8 PUSH1 0x20
0x3fa ADD
0x3fb SWAP2
0x3fc POP
0x3fd POP
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 DUP1
0x402 SWAP2
0x403 SUB
0x404 SWAP1
0x405 RETURN
---
0x3f0: JUMPDEST 
0x3f1: V237 = 0x40
0x3f3: V238 = M[0x40]
0x3f7: M[V238] = V368
0x3f8: V239 = 0x20
0x3fa: V240 = ADD 0x20 V238
0x3fe: V241 = 0x40
0x400: V242 = M[0x40]
0x403: V243 = SUB V240 V242
0x405: RETURN V242 V243
---
Entry stack: [V9, 0x3f0, V368]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x3f0]

================================

Block 0x406
[0x406:0x40d]
---
Predecessors: [0x51]
Successors: [0x40e, 0x412]
---
0x406 JUMPDEST
0x407 CALLVALUE
0x408 DUP1
0x409 ISZERO
0x40a PUSH2 0x412
0x40d JUMPI
---
0x406: JUMPDEST 
0x407: V244 = CALLVALUE
0x409: V245 = ISZERO V244
0x40a: V246 = 0x412
0x40d: JUMPI 0x412 V245
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V244]
Exit stack: [V9, V244]

================================

Block 0x40e
[0x40e:0x411]
---
Predecessors: [0x406]
Successors: []
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
---
0x40e: V247 = 0x0
0x411: REVERT 0x0 0x0
---
Entry stack: [V9, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V244]

================================

Block 0x412
[0x412:0x41a]
---
Predecessors: [0x406]
Successors: [0x5c2]
---
0x412 JUMPDEST
0x413 POP
0x414 PUSH2 0x41b
0x417 PUSH2 0x5c2
0x41a JUMP
---
0x412: JUMPDEST 
0x414: V248 = 0x41b
0x417: V249 = 0x5c2
0x41a: JUMP 0x5c2
---
Entry stack: [V9, V244]
Stack pops: 1
Stack additions: [0x41b]
Exit stack: [V9, 0x41b]

================================

Block 0x41b
[0x41b:0x430]
---
Predecessors: [0x5c2]
Successors: []
---
0x41b JUMPDEST
0x41c PUSH1 0x40
0x41e MLOAD
0x41f DUP1
0x420 DUP3
0x421 DUP2
0x422 MSTORE
0x423 PUSH1 0x20
0x425 ADD
0x426 SWAP2
0x427 POP
0x428 POP
0x429 PUSH1 0x40
0x42b MLOAD
0x42c DUP1
0x42d SWAP2
0x42e SUB
0x42f SWAP1
0x430 RETURN
---
0x41b: JUMPDEST 
0x41c: V250 = 0x40
0x41e: V251 = M[0x40]
0x422: M[V251] = V370
0x423: V252 = 0x20
0x425: V253 = ADD 0x20 V251
0x429: V254 = 0x40
0x42b: V255 = M[0x40]
0x42e: V256 = SUB V253 V255
0x430: RETURN V255 V256
---
Entry stack: [V9, 0x41b, V370]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x41b]

================================

Block 0x431
[0x431:0x438]
---
Predecessors: [0x5c]
Successors: [0x439, 0x43d]
---
0x431 JUMPDEST
0x432 CALLVALUE
0x433 DUP1
0x434 ISZERO
0x435 PUSH2 0x43d
0x438 JUMPI
---
0x431: JUMPDEST 
0x432: V257 = CALLVALUE
0x434: V258 = ISZERO V257
0x435: V259 = 0x43d
0x438: JUMPI 0x43d V258
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V257]
Exit stack: [V9, V257]

================================

Block 0x439
[0x439:0x43c]
---
Predecessors: [0x431]
Successors: []
---
0x439 PUSH1 0x0
0x43b DUP1
0x43c REVERT
---
0x439: V260 = 0x0
0x43c: REVERT 0x0 0x0
---
Entry stack: [V9, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V257]

================================

Block 0x43d
[0x43d:0x445]
---
Predecessors: [0x431]
Successors: [0x5c8]
---
0x43d JUMPDEST
0x43e POP
0x43f PUSH2 0x446
0x442 PUSH2 0x5c8
0x445 JUMP
---
0x43d: JUMPDEST 
0x43f: V261 = 0x446
0x442: V262 = 0x5c8
0x445: JUMP 0x5c8
---
Entry stack: [V9, V257]
Stack pops: 1
Stack additions: [0x446]
Exit stack: [V9, 0x446]

================================

Block 0x446
[0x446:0x45b]
---
Predecessors: [0x5c8]
Successors: []
---
0x446 JUMPDEST
0x447 PUSH1 0x40
0x449 MLOAD
0x44a DUP1
0x44b DUP3
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x20
0x450 ADD
0x451 SWAP2
0x452 POP
0x453 POP
0x454 PUSH1 0x40
0x456 MLOAD
0x457 DUP1
0x458 SWAP2
0x459 SUB
0x45a SWAP1
0x45b RETURN
---
0x446: JUMPDEST 
0x447: V263 = 0x40
0x449: V264 = M[0x40]
0x44d: M[V264] = V372
0x44e: V265 = 0x20
0x450: V266 = ADD 0x20 V264
0x454: V267 = 0x40
0x456: V268 = M[0x40]
0x459: V269 = SUB V266 V268
0x45b: RETURN V268 V269
---
Entry stack: [V9, 0x446, V372]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x446]

================================

Block 0x45c
[0x45c:0x463]
---
Predecessors: [0x67]
Successors: [0x464, 0x468]
---
0x45c JUMPDEST
0x45d CALLVALUE
0x45e DUP1
0x45f ISZERO
0x460 PUSH2 0x468
0x463 JUMPI
---
0x45c: JUMPDEST 
0x45d: V270 = CALLVALUE
0x45f: V271 = ISZERO V270
0x460: V272 = 0x468
0x463: JUMPI 0x468 V271
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V270]
Exit stack: [V9, V270]

================================

Block 0x464
[0x464:0x467]
---
Predecessors: [0x45c]
Successors: []
---
0x464 PUSH1 0x0
0x466 DUP1
0x467 REVERT
---
0x464: V273 = 0x0
0x467: REVERT 0x0 0x0
---
Entry stack: [V9, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V270]

================================

Block 0x468
[0x468:0x470]
---
Predecessors: [0x45c]
Successors: [0x5ce]
---
0x468 JUMPDEST
0x469 POP
0x46a PUSH2 0x471
0x46d PUSH2 0x5ce
0x470 JUMP
---
0x468: JUMPDEST 
0x46a: V274 = 0x471
0x46d: V275 = 0x5ce
0x470: JUMP 0x5ce
---
Entry stack: [V9, V270]
Stack pops: 1
Stack additions: [0x471]
Exit stack: [V9, 0x471]

================================

Block 0x471
[0x471:0x472]
---
Predecessors: [0x8e7]
Successors: []
---
0x471 JUMPDEST
0x472 STOP
---
0x471: JUMPDEST 
0x472: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x473
[0x473:0x47e]
---
Predecessors: [0x292]
Successors: [0x47f, 0x551]
---
0x473 JUMPDEST
0x474 PUSH1 0x3
0x476 SLOAD
0x477 TIMESTAMP
0x478 LT
0x479 ISZERO
0x47a ISZERO
0x47b PUSH2 0x551
0x47e JUMPI
---
0x473: JUMPDEST 
0x474: V276 = 0x3
0x476: V277 = S[0x3]
0x477: V278 = TIMESTAMP
0x478: V279 = LT V278 V277
0x479: V280 = ISZERO V279
0x47a: V281 = ISZERO V280
0x47b: V282 = 0x551
0x47e: JUMPI 0x551 V281
---
Entry stack: [V9, 0x29b]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x29b]

================================

Block 0x47f
[0x47f:0x48b]
---
Predecessors: [0x473]
Successors: [0x48c, 0x535]
---
0x47f PUSH1 0x1
0x481 SLOAD
0x482 PUSH1 0x2
0x484 SLOAD
0x485 LT
0x486 ISZERO
0x487 ISZERO
0x488 PUSH2 0x535
0x48b JUMPI
---
0x47f: V283 = 0x1
0x481: V284 = S[0x1]
0x482: V285 = 0x2
0x484: V286 = S[0x2]
0x485: V287 = LT V286 V284
0x486: V288 = ISZERO V287
0x487: V289 = ISZERO V288
0x488: V290 = 0x535
0x48b: JUMPI 0x535 V289
---
Entry stack: [V9, 0x29b]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x29b]

================================

Block 0x48c
[0x48c:0x534]
---
Predecessors: [0x47f]
Successors: [0x535]
---
0x48c PUSH1 0x1
0x48e PUSH1 0x7
0x490 PUSH1 0x0
0x492 PUSH2 0x100
0x495 EXP
0x496 DUP2
0x497 SLOAD
0x498 DUP2
0x499 PUSH1 0xff
0x49b MUL
0x49c NOT
0x49d AND
0x49e SWAP1
0x49f DUP4
0x4a0 ISZERO
0x4a1 ISZERO
0x4a2 MUL
0x4a3 OR
0x4a4 SWAP1
0x4a5 SSTORE
0x4a6 POP
0x4a7 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x4c8 PUSH1 0x0
0x4ca DUP1
0x4cb SWAP1
0x4cc SLOAD
0x4cd SWAP1
0x4ce PUSH2 0x100
0x4d1 EXP
0x4d2 SWAP1
0x4d3 DIV
0x4d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e9 AND
0x4ea PUSH1 0x2
0x4ec SLOAD
0x4ed PUSH1 0x40
0x4ef MLOAD
0x4f0 DUP1
0x4f1 DUP4
0x4f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x507 AND
0x508 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51d AND
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x20
0x522 ADD
0x523 DUP3
0x524 DUP2
0x525 MSTORE
0x526 PUSH1 0x20
0x528 ADD
0x529 SWAP3
0x52a POP
0x52b POP
0x52c POP
0x52d PUSH1 0x40
0x52f MLOAD
0x530 DUP1
0x531 SWAP2
0x532 SUB
0x533 SWAP1
0x534 LOG1
---
0x48c: V291 = 0x1
0x48e: V292 = 0x7
0x490: V293 = 0x0
0x492: V294 = 0x100
0x495: V295 = EXP 0x100 0x0
0x497: V296 = S[0x7]
0x499: V297 = 0xff
0x49b: V298 = MUL 0xff 0x1
0x49c: V299 = NOT 0xff
0x49d: V300 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V296
0x4a0: V301 = ISZERO 0x1
0x4a1: V302 = ISZERO 0x0
0x4a2: V303 = MUL 0x1 0x1
0x4a3: V304 = OR 0x1 V300
0x4a5: S[0x7] = V304
0x4a7: V305 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x4c8: V306 = 0x0
0x4cc: V307 = S[0x0]
0x4ce: V308 = 0x100
0x4d1: V309 = EXP 0x100 0x0
0x4d3: V310 = DIV V307 0x1
0x4d4: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e9: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x4ea: V313 = 0x2
0x4ec: V314 = S[0x2]
0x4ed: V315 = 0x40
0x4ef: V316 = M[0x40]
0x4f2: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x507: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x508: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x51d: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x51f: M[V316] = V320
0x520: V321 = 0x20
0x522: V322 = ADD 0x20 V316
0x525: M[V322] = V314
0x526: V323 = 0x20
0x528: V324 = ADD 0x20 V322
0x52d: V325 = 0x40
0x52f: V326 = M[0x40]
0x532: V327 = SUB V324 V326
0x534: LOG V326 V327 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V9, 0x29b]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x29b]

================================

Block 0x535
[0x535:0x550]
---
Predecessors: [0x47f, 0x48c]
Successors: [0x551]
---
0x535 JUMPDEST
0x536 PUSH1 0x1
0x538 PUSH1 0x7
0x53a PUSH1 0x1
0x53c PUSH2 0x100
0x53f EXP
0x540 DUP2
0x541 SLOAD
0x542 DUP2
0x543 PUSH1 0xff
0x545 MUL
0x546 NOT
0x547 AND
0x548 SWAP1
0x549 DUP4
0x54a ISZERO
0x54b ISZERO
0x54c MUL
0x54d OR
0x54e SWAP1
0x54f SSTORE
0x550 POP
---
0x535: JUMPDEST 
0x536: V328 = 0x1
0x538: V329 = 0x7
0x53a: V330 = 0x1
0x53c: V331 = 0x100
0x53f: V332 = EXP 0x100 0x1
0x541: V333 = S[0x7]
0x543: V334 = 0xff
0x545: V335 = MUL 0xff 0x100
0x546: V336 = NOT 0xff00
0x547: V337 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V333
0x54a: V338 = ISZERO 0x1
0x54b: V339 = ISZERO 0x0
0x54c: V340 = MUL 0x1 0x100
0x54d: V341 = OR 0x100 V337
0x54f: S[0x7] = V341
---
Entry stack: [V9, 0x29b]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x29b]

================================

Block 0x551
[0x551:0x552]
---
Predecessors: [0x473, 0x535]
Successors: [0x29b]
---
0x551 JUMPDEST
0x552 JUMP
---
0x551: JUMPDEST 
0x552: JUMP 0x29b
---
Entry stack: [V9, 0x29b]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x553
[0x553:0x558]
---
Predecessors: [0x2a9]
Successors: [0x2b2]
---
0x553 JUMPDEST
0x554 PUSH1 0x3
0x556 SLOAD
0x557 DUP2
0x558 JUMP
---
0x553: JUMPDEST 
0x554: V342 = 0x3
0x556: V343 = S[0x3]
0x558: JUMP 0x2b2
---
Entry stack: [V9, 0x2b2]
Stack pops: 1
Stack additions: [S0, V343]
Exit stack: [V9, 0x2b2, V343]

================================

Block 0x559
[0x559:0x57d]
---
Predecessors: [0x2d4]
Successors: [0x2dd]
---
0x559 JUMPDEST
0x55a PUSH1 0x0
0x55c DUP1
0x55d SWAP1
0x55e SLOAD
0x55f SWAP1
0x560 PUSH2 0x100
0x563 EXP
0x564 SWAP1
0x565 DIV
0x566 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57b AND
0x57c DUP2
0x57d JUMP
---
0x559: JUMPDEST 
0x55a: V344 = 0x0
0x55e: V345 = S[0x0]
0x560: V346 = 0x100
0x563: V347 = EXP 0x100 0x0
0x565: V348 = DIV V345 0x1
0x566: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x57b: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x57d: JUMP 0x2dd
---
Entry stack: [V9, 0x2dd]
Stack pops: 1
Stack additions: [S0, V350]
Exit stack: [V9, 0x2dd, V350]

================================

Block 0x57e
[0x57e:0x5a3]
---
Predecessors: [0x32b]
Successors: [0x334]
---
0x57e JUMPDEST
0x57f PUSH1 0x5
0x581 PUSH1 0x0
0x583 SWAP1
0x584 SLOAD
0x585 SWAP1
0x586 PUSH2 0x100
0x589 EXP
0x58a SWAP1
0x58b DIV
0x58c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a1 AND
0x5a2 DUP2
0x5a3 JUMP
---
0x57e: JUMPDEST 
0x57f: V351 = 0x5
0x581: V352 = 0x0
0x584: V353 = S[0x5]
0x586: V354 = 0x100
0x589: V355 = EXP 0x100 0x0
0x58b: V356 = DIV V353 0x1
0x58c: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x5a3: JUMP 0x334
---
Entry stack: [V9, 0x334]
Stack pops: 1
Stack additions: [S0, V358]
Exit stack: [V9, 0x334, V358]

================================

Block 0x5a4
[0x5a4:0x5bb]
---
Predecessors: [0x399]
Successors: [0x3c5]
---
0x5a4 JUMPDEST
0x5a5 PUSH1 0x6
0x5a7 PUSH1 0x20
0x5a9 MSTORE
0x5aa DUP1
0x5ab PUSH1 0x0
0x5ad MSTORE
0x5ae PUSH1 0x40
0x5b0 PUSH1 0x0
0x5b2 SHA3
0x5b3 PUSH1 0x0
0x5b5 SWAP2
0x5b6 POP
0x5b7 SWAP1
0x5b8 POP
0x5b9 SLOAD
0x5ba DUP2
0x5bb JUMP
---
0x5a4: JUMPDEST 
0x5a5: V359 = 0x6
0x5a7: V360 = 0x20
0x5a9: M[0x20] = 0x6
0x5ab: V361 = 0x0
0x5ad: M[0x0] = V220
0x5ae: V362 = 0x40
0x5b0: V363 = 0x0
0x5b2: V364 = SHA3 0x0 0x40
0x5b3: V365 = 0x0
0x5b9: V366 = S[V364]
0x5bb: JUMP 0x3c5
---
Entry stack: [V9, 0x3c5, V220]
Stack pops: 2
Stack additions: [S1, V366]
Exit stack: [V9, 0x3c5, V366]

================================

Block 0x5bc
[0x5bc:0x5c1]
---
Predecessors: [0x3e7]
Successors: [0x3f0]
---
0x5bc JUMPDEST
0x5bd PUSH1 0x1
0x5bf SLOAD
0x5c0 DUP2
0x5c1 JUMP
---
0x5bc: JUMPDEST 
0x5bd: V367 = 0x1
0x5bf: V368 = S[0x1]
0x5c1: JUMP 0x3f0
---
Entry stack: [V9, 0x3f0]
Stack pops: 1
Stack additions: [S0, V368]
Exit stack: [V9, 0x3f0, V368]

================================

Block 0x5c2
[0x5c2:0x5c7]
---
Predecessors: [0x412]
Successors: [0x41b]
---
0x5c2 JUMPDEST
0x5c3 PUSH1 0x2
0x5c5 SLOAD
0x5c6 DUP2
0x5c7 JUMP
---
0x5c2: JUMPDEST 
0x5c3: V369 = 0x2
0x5c5: V370 = S[0x2]
0x5c7: JUMP 0x41b
---
Entry stack: [V9, 0x41b]
Stack pops: 1
Stack additions: [S0, V370]
Exit stack: [V9, 0x41b, V370]

================================

Block 0x5c8
[0x5c8:0x5cd]
---
Predecessors: [0x43d]
Successors: [0x446]
---
0x5c8 JUMPDEST
0x5c9 PUSH1 0x4
0x5cb SLOAD
0x5cc DUP2
0x5cd JUMP
---
0x5c8: JUMPDEST 
0x5c9: V371 = 0x4
0x5cb: V372 = S[0x4]
0x5cd: JUMP 0x446
---
Entry stack: [V9, 0x446]
Stack pops: 1
Stack additions: [S0, V372]
Exit stack: [V9, 0x446, V372]

================================

Block 0x5ce
[0x5ce:0x5d9]
---
Predecessors: [0x468]
Successors: [0x5da, 0x8e7]
---
0x5ce JUMPDEST
0x5cf PUSH1 0x3
0x5d1 SLOAD
0x5d2 TIMESTAMP
0x5d3 LT
0x5d4 ISZERO
0x5d5 ISZERO
0x5d6 PUSH2 0x8e7
0x5d9 JUMPI
---
0x5ce: JUMPDEST 
0x5cf: V373 = 0x3
0x5d1: V374 = S[0x3]
0x5d2: V375 = TIMESTAMP
0x5d3: V376 = LT V375 V374
0x5d4: V377 = ISZERO V376
0x5d5: V378 = ISZERO V377
0x5d6: V379 = 0x8e7
0x5d9: JUMPI 0x8e7 V378
---
Entry stack: [V9, 0x471]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x471]

================================

Block 0x5da
[0x5da:0x5ef]
---
Predecessors: [0x5ce]
Successors: [0x5f0, 0x780]
---
0x5da PUSH1 0x7
0x5dc PUSH1 0x0
0x5de SWAP1
0x5df SLOAD
0x5e0 SWAP1
0x5e1 PUSH2 0x100
0x5e4 EXP
0x5e5 SWAP1
0x5e6 DIV
0x5e7 PUSH1 0xff
0x5e9 AND
0x5ea ISZERO
0x5eb ISZERO
0x5ec PUSH2 0x780
0x5ef JUMPI
---
0x5da: V380 = 0x7
0x5dc: V381 = 0x0
0x5df: V382 = S[0x7]
0x5e1: V383 = 0x100
0x5e4: V384 = EXP 0x100 0x0
0x5e6: V385 = DIV V382 0x1
0x5e7: V386 = 0xff
0x5e9: V387 = AND 0xff V385
0x5ea: V388 = ISZERO V387
0x5eb: V389 = ISZERO V388
0x5ec: V390 = 0x780
0x5ef: JUMPI 0x780 V389
---
Entry stack: [V9, 0x471]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x471]

================================

Block 0x5f0
[0x5f0:0x681]
---
Predecessors: [0x5da]
Successors: [0x682, 0x77e]
---
0x5f0 PUSH1 0x0
0x5f2 PUSH1 0x6
0x5f4 PUSH1 0x0
0x5f6 CALLER
0x5f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60c AND
0x60d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x622 AND
0x623 DUP2
0x624 MSTORE
0x625 PUSH1 0x20
0x627 ADD
0x628 SWAP1
0x629 DUP2
0x62a MSTORE
0x62b PUSH1 0x20
0x62d ADD
0x62e PUSH1 0x0
0x630 SHA3
0x631 SLOAD
0x632 SWAP1
0x633 POP
0x634 PUSH1 0x0
0x636 PUSH1 0x6
0x638 PUSH1 0x0
0x63a CALLER
0x63b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x650 AND
0x651 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x666 AND
0x667 DUP2
0x668 MSTORE
0x669 PUSH1 0x20
0x66b ADD
0x66c SWAP1
0x66d DUP2
0x66e MSTORE
0x66f PUSH1 0x20
0x671 ADD
0x672 PUSH1 0x0
0x674 SHA3
0x675 DUP2
0x676 SWAP1
0x677 SSTORE
0x678 POP
0x679 PUSH1 0x0
0x67b DUP2
0x67c GT
0x67d ISZERO
0x67e PUSH2 0x77e
0x681 JUMPI
---
0x5f0: V391 = 0x0
0x5f2: V392 = 0x6
0x5f4: V393 = 0x0
0x5f6: V394 = CALLER
0x5f7: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x60c: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x60d: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x622: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x624: M[0x0] = V398
0x625: V399 = 0x20
0x627: V400 = ADD 0x20 0x0
0x62a: M[0x20] = 0x6
0x62b: V401 = 0x20
0x62d: V402 = ADD 0x20 0x20
0x62e: V403 = 0x0
0x630: V404 = SHA3 0x0 0x40
0x631: V405 = S[V404]
0x634: V406 = 0x0
0x636: V407 = 0x6
0x638: V408 = 0x0
0x63a: V409 = CALLER
0x63b: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x650: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x651: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x666: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x668: M[0x0] = V413
0x669: V414 = 0x20
0x66b: V415 = ADD 0x20 0x0
0x66e: M[0x20] = 0x6
0x66f: V416 = 0x20
0x671: V417 = ADD 0x20 0x20
0x672: V418 = 0x0
0x674: V419 = SHA3 0x0 0x40
0x677: S[V419] = 0x0
0x679: V420 = 0x0
0x67c: V421 = GT V405 0x0
0x67d: V422 = ISZERO V421
0x67e: V423 = 0x77e
0x681: JUMPI 0x77e V422
---
Entry stack: [V9, 0x471]
Stack pops: 0
Stack additions: [V405]
Exit stack: [V9, 0x471, V405]

================================

Block 0x682
[0x682:0x6bb]
---
Predecessors: [0x5f0]
Successors: [0x6bc, 0x738]
---
0x682 CALLER
0x683 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x698 AND
0x699 PUSH2 0x8fc
0x69c DUP3
0x69d SWAP1
0x69e DUP2
0x69f ISZERO
0x6a0 MUL
0x6a1 SWAP1
0x6a2 PUSH1 0x40
0x6a4 MLOAD
0x6a5 PUSH1 0x0
0x6a7 PUSH1 0x40
0x6a9 MLOAD
0x6aa DUP1
0x6ab DUP4
0x6ac SUB
0x6ad DUP2
0x6ae DUP6
0x6af DUP9
0x6b0 DUP9
0x6b1 CALL
0x6b2 SWAP4
0x6b3 POP
0x6b4 POP
0x6b5 POP
0x6b6 POP
0x6b7 ISZERO
0x6b8 PUSH2 0x738
0x6bb JUMPI
---
0x682: V424 = CALLER
0x683: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x698: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x699: V427 = 0x8fc
0x69f: V428 = ISZERO V405
0x6a0: V429 = MUL V428 0x8fc
0x6a2: V430 = 0x40
0x6a4: V431 = M[0x40]
0x6a5: V432 = 0x0
0x6a7: V433 = 0x40
0x6a9: V434 = M[0x40]
0x6ac: V435 = SUB V431 V434
0x6b1: V436 = CALL V429 V426 V405 V434 V435 V434 0x0
0x6b7: V437 = ISZERO V436
0x6b8: V438 = 0x738
0x6bb: JUMPI 0x738 V437
---
Entry stack: [V9, 0x471, V405]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x471, V405]

================================

Block 0x6bc
[0x6bc:0x737]
---
Predecessors: [0x682]
Successors: [0x77d]
---
0x6bc PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6dd CALLER
0x6de DUP3
0x6df PUSH1 0x0
0x6e1 PUSH1 0x40
0x6e3 MLOAD
0x6e4 DUP1
0x6e5 DUP5
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x711 AND
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x20
0x716 ADD
0x717 DUP4
0x718 DUP2
0x719 MSTORE
0x71a PUSH1 0x20
0x71c ADD
0x71d DUP3
0x71e ISZERO
0x71f ISZERO
0x720 ISZERO
0x721 ISZERO
0x722 DUP2
0x723 MSTORE
0x724 PUSH1 0x20
0x726 ADD
0x727 SWAP4
0x728 POP
0x729 POP
0x72a POP
0x72b POP
0x72c PUSH1 0x40
0x72e MLOAD
0x72f DUP1
0x730 SWAP2
0x731 SUB
0x732 SWAP1
0x733 LOG1
0x734 PUSH2 0x77d
0x737 JUMP
---
0x6bc: V439 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6dd: V440 = CALLER
0x6df: V441 = 0x0
0x6e1: V442 = 0x40
0x6e3: V443 = M[0x40]
0x6e6: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x6fc: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x711: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x713: M[V443] = V447
0x714: V448 = 0x20
0x716: V449 = ADD 0x20 V443
0x719: M[V449] = V405
0x71a: V450 = 0x20
0x71c: V451 = ADD 0x20 V449
0x71e: V452 = ISZERO 0x0
0x71f: V453 = ISZERO 0x1
0x720: V454 = ISZERO 0x0
0x721: V455 = ISZERO 0x1
0x723: M[V451] = 0x0
0x724: V456 = 0x20
0x726: V457 = ADD 0x20 V451
0x72c: V458 = 0x40
0x72e: V459 = M[0x40]
0x731: V460 = SUB V457 V459
0x733: LOG V459 V460 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x734: V461 = 0x77d
0x737: JUMP 0x77d
---
Entry stack: [V9, 0x471, V405]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x471, V405]

================================

Block 0x738
[0x738:0x77c]
---
Predecessors: [0x682]
Successors: [0x77d]
---
0x738 JUMPDEST
0x739 DUP1
0x73a PUSH1 0x6
0x73c PUSH1 0x0
0x73e CALLER
0x73f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x754 AND
0x755 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76a AND
0x76b DUP2
0x76c MSTORE
0x76d PUSH1 0x20
0x76f ADD
0x770 SWAP1
0x771 DUP2
0x772 MSTORE
0x773 PUSH1 0x20
0x775 ADD
0x776 PUSH1 0x0
0x778 SHA3
0x779 DUP2
0x77a SWAP1
0x77b SSTORE
0x77c POP
---
0x738: JUMPDEST 
0x73a: V462 = 0x6
0x73c: V463 = 0x0
0x73e: V464 = CALLER
0x73f: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x754: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x755: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x76a: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x76c: M[0x0] = V468
0x76d: V469 = 0x20
0x76f: V470 = ADD 0x20 0x0
0x772: M[0x20] = 0x6
0x773: V471 = 0x20
0x775: V472 = ADD 0x20 0x20
0x776: V473 = 0x0
0x778: V474 = SHA3 0x0 0x40
0x77b: S[V474] = V405
---
Entry stack: [V9, 0x471, V405]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x471, V405]

================================

Block 0x77d
[0x77d:0x77d]
---
Predecessors: [0x6bc, 0x738]
Successors: [0x77e]
---
0x77d JUMPDEST
---
0x77d: JUMPDEST 
---
Entry stack: [V9, 0x471, V405]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x471, V405]

================================

Block 0x77e
[0x77e:0x77f]
---
Predecessors: [0x5f0, 0x77d]
Successors: [0x780]
---
0x77e JUMPDEST
0x77f POP
---
0x77e: JUMPDEST 
---
Entry stack: [V9, 0x471, V405]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x471]

================================

Block 0x780
[0x780:0x796]
---
Predecessors: [0x5da, 0x77e]
Successors: [0x797, 0x7e8]
---
0x780 JUMPDEST
0x781 PUSH1 0x7
0x783 PUSH1 0x0
0x785 SWAP1
0x786 SLOAD
0x787 SWAP1
0x788 PUSH2 0x100
0x78b EXP
0x78c SWAP1
0x78d DIV
0x78e PUSH1 0xff
0x790 AND
0x791 DUP1
0x792 ISZERO
0x793 PUSH2 0x7e8
0x796 JUMPI
---
0x780: JUMPDEST 
0x781: V475 = 0x7
0x783: V476 = 0x0
0x786: V477 = S[0x7]
0x788: V478 = 0x100
0x78b: V479 = EXP 0x100 0x0
0x78d: V480 = DIV V477 0x1
0x78e: V481 = 0xff
0x790: V482 = AND 0xff V480
0x792: V483 = ISZERO V482
0x793: V484 = 0x7e8
0x796: JUMPI 0x7e8 V483
---
Entry stack: [V9, 0x471]
Stack pops: 0
Stack additions: [V482]
Exit stack: [V9, 0x471, V482]

================================

Block 0x797
[0x797:0x7e7]
---
Predecessors: [0x780]
Successors: [0x7e8]
---
0x797 POP
0x798 CALLER
0x799 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ae AND
0x7af PUSH1 0x0
0x7b1 DUP1
0x7b2 SWAP1
0x7b3 SLOAD
0x7b4 SWAP1
0x7b5 PUSH2 0x100
0x7b8 EXP
0x7b9 SWAP1
0x7ba DIV
0x7bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d0 AND
0x7d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e6 AND
0x7e7 EQ
---
0x798: V485 = CALLER
0x799: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ae: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x7af: V488 = 0x0
0x7b3: V489 = S[0x0]
0x7b5: V490 = 0x100
0x7b8: V491 = EXP 0x100 0x0
0x7ba: V492 = DIV V489 0x1
0x7bb: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d0: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x7d1: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e6: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x7e7: V497 = EQ V496 V487
---
Entry stack: [V9, 0x471, V482]
Stack pops: 1
Stack additions: [V497]
Exit stack: [V9, 0x471, V497]

================================

Block 0x7e8
[0x7e8:0x7ed]
---
Predecessors: [0x780, 0x797]
Successors: [0x7ee, 0x8e6]
---
0x7e8 JUMPDEST
0x7e9 ISZERO
0x7ea PUSH2 0x8e6
0x7ed JUMPI
---
0x7e8: JUMPDEST 
0x7e9: V498 = ISZERO S0
0x7ea: V499 = 0x8e6
0x7ed: JUMPI 0x8e6 V498
---
Entry stack: [V9, 0x471, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x471]

================================

Block 0x7ee
[0x7ee:0x829]
---
Predecessors: [0x7e8]
Successors: [0x82a, 0x8c9]
---
0x7ee CALLER
0x7ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x804 AND
0x805 PUSH2 0x8fc
0x808 PUSH1 0x2
0x80a SLOAD
0x80b SWAP1
0x80c DUP2
0x80d ISZERO
0x80e MUL
0x80f SWAP1
0x810 PUSH1 0x40
0x812 MLOAD
0x813 PUSH1 0x0
0x815 PUSH1 0x40
0x817 MLOAD
0x818 DUP1
0x819 DUP4
0x81a SUB
0x81b DUP2
0x81c DUP6
0x81d DUP9
0x81e DUP9
0x81f CALL
0x820 SWAP4
0x821 POP
0x822 POP
0x823 POP
0x824 POP
0x825 ISZERO
0x826 PUSH2 0x8c9
0x829 JUMPI
---
0x7ee: V500 = CALLER
0x7ef: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x804: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x805: V503 = 0x8fc
0x808: V504 = 0x2
0x80a: V505 = S[0x2]
0x80d: V506 = ISZERO V505
0x80e: V507 = MUL V506 0x8fc
0x810: V508 = 0x40
0x812: V509 = M[0x40]
0x813: V510 = 0x0
0x815: V511 = 0x40
0x817: V512 = M[0x40]
0x81a: V513 = SUB V509 V512
0x81f: V514 = CALL V507 V502 V505 V512 V513 V512 0x0
0x825: V515 = ISZERO V514
0x826: V516 = 0x8c9
0x829: JUMPI 0x8c9 V515
---
Entry stack: [V9, 0x471]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x471]

================================

Block 0x82a
[0x82a:0x8c8]
---
Predecessors: [0x7ee]
Successors: [0x8e5]
---
0x82a PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x84b PUSH1 0x0
0x84d DUP1
0x84e SWAP1
0x84f SLOAD
0x850 SWAP1
0x851 PUSH2 0x100
0x854 EXP
0x855 SWAP1
0x856 DIV
0x857 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86c AND
0x86d PUSH1 0x2
0x86f SLOAD
0x870 PUSH1 0x0
0x872 PUSH1 0x40
0x874 MLOAD
0x875 DUP1
0x876 DUP5
0x877 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88c AND
0x88d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a2 AND
0x8a3 DUP2
0x8a4 MSTORE
0x8a5 PUSH1 0x20
0x8a7 ADD
0x8a8 DUP4
0x8a9 DUP2
0x8aa MSTORE
0x8ab PUSH1 0x20
0x8ad ADD
0x8ae DUP3
0x8af ISZERO
0x8b0 ISZERO
0x8b1 ISZERO
0x8b2 ISZERO
0x8b3 DUP2
0x8b4 MSTORE
0x8b5 PUSH1 0x20
0x8b7 ADD
0x8b8 SWAP4
0x8b9 POP
0x8ba POP
0x8bb POP
0x8bc POP
0x8bd PUSH1 0x40
0x8bf MLOAD
0x8c0 DUP1
0x8c1 SWAP2
0x8c2 SUB
0x8c3 SWAP1
0x8c4 LOG1
0x8c5 PUSH2 0x8e5
0x8c8 JUMP
---
0x82a: V517 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x84b: V518 = 0x0
0x84f: V519 = S[0x0]
0x851: V520 = 0x100
0x854: V521 = EXP 0x100 0x0
0x856: V522 = DIV V519 0x1
0x857: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x86c: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x86d: V525 = 0x2
0x86f: V526 = S[0x2]
0x870: V527 = 0x0
0x872: V528 = 0x40
0x874: V529 = M[0x40]
0x877: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x88c: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x88d: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a2: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x8a4: M[V529] = V533
0x8a5: V534 = 0x20
0x8a7: V535 = ADD 0x20 V529
0x8aa: M[V535] = V526
0x8ab: V536 = 0x20
0x8ad: V537 = ADD 0x20 V535
0x8af: V538 = ISZERO 0x0
0x8b0: V539 = ISZERO 0x1
0x8b1: V540 = ISZERO 0x0
0x8b2: V541 = ISZERO 0x1
0x8b4: M[V537] = 0x0
0x8b5: V542 = 0x20
0x8b7: V543 = ADD 0x20 V537
0x8bd: V544 = 0x40
0x8bf: V545 = M[0x40]
0x8c2: V546 = SUB V543 V545
0x8c4: LOG V545 V546 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x8c5: V547 = 0x8e5
0x8c8: JUMP 0x8e5
---
Entry stack: [V9, 0x471]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x471]

================================

Block 0x8c9
[0x8c9:0x8e4]
---
Predecessors: [0x7ee]
Successors: [0x8e5]
---
0x8c9 JUMPDEST
0x8ca PUSH1 0x0
0x8cc PUSH1 0x7
0x8ce PUSH1 0x0
0x8d0 PUSH2 0x100
0x8d3 EXP
0x8d4 DUP2
0x8d5 SLOAD
0x8d6 DUP2
0x8d7 PUSH1 0xff
0x8d9 MUL
0x8da NOT
0x8db AND
0x8dc SWAP1
0x8dd DUP4
0x8de ISZERO
0x8df ISZERO
0x8e0 MUL
0x8e1 OR
0x8e2 SWAP1
0x8e3 SSTORE
0x8e4 POP
---
0x8c9: JUMPDEST 
0x8ca: V548 = 0x0
0x8cc: V549 = 0x7
0x8ce: V550 = 0x0
0x8d0: V551 = 0x100
0x8d3: V552 = EXP 0x100 0x0
0x8d5: V553 = S[0x7]
0x8d7: V554 = 0xff
0x8d9: V555 = MUL 0xff 0x1
0x8da: V556 = NOT 0xff
0x8db: V557 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V553
0x8de: V558 = ISZERO 0x0
0x8df: V559 = ISZERO 0x1
0x8e0: V560 = MUL 0x0 0x1
0x8e1: V561 = OR 0x0 V557
0x8e3: S[0x7] = V561
---
Entry stack: [V9, 0x471]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x471]

================================

Block 0x8e5
[0x8e5:0x8e5]
---
Predecessors: [0x82a, 0x8c9]
Successors: [0x8e6]
---
0x8e5 JUMPDEST
---
0x8e5: JUMPDEST 
---
Entry stack: [V9, 0x471]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x471]

================================

Block 0x8e6
[0x8e6:0x8e6]
---
Predecessors: [0x7e8, 0x8e5]
Successors: [0x8e7]
---
0x8e6 JUMPDEST
---
0x8e6: JUMPDEST 
---
Entry stack: [V9, 0x471]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x471]

================================

Block 0x8e7
[0x8e7:0x8e8]
---
Predecessors: [0x5ce, 0x8e6]
Successors: [0x471]
---
0x8e7 JUMPDEST
0x8e8 JUMP
---
0x8e7: JUMPDEST 
0x8e8: JUMP 0x471
---
Entry stack: [V9, 0x471]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x8e9
[0x8e9:0x914]
---
Predecessors: []
Successors: []
---
0x8e9 INVALID
0x8ea LOG1
0x8eb PUSH6 0x627a7a723058
0x8f2 SHA3
0x8f3 MISSING 0xb1
0x8f4 STOP
0x8f5 TIMESTAMP
0x8f6 MISSING 0x4c
0x8f7 MISSING 0xee
0x8f8 LOG3
0x8f9 PUSH11 0x1eb3b1b01ac0248523c51
0x905 PUSH11 0x94a1c6568b9e4c113770be
0x911 CODESIZE
0x912 MISSING 0xce
0x913 STOP
0x914 MISSING 0x29
---
0x8e9: INVALID 
0x8ea: LOG S0 S1 S2
0x8eb: V562 = 0x627a7a723058
0x8f2: V563 = SHA3 0x627a7a723058 S3
0x8f3: MISSING 0xb1
0x8f4: STOP 
0x8f5: V564 = TIMESTAMP
0x8f6: MISSING 0x4c
0x8f7: MISSING 0xee
0x8f8: LOG S0 S1 S2 S3 S4
0x8f9: V565 = 0x1eb3b1b01ac0248523c51
0x905: V566 = 0x94a1c6568b9e4c113770be
0x911: V567 = CODESIZE
0x912: MISSING 0xce
0x913: STOP 
0x914: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V563, V564, V567, 0x94a1c6568b9e4c113770be, 0x1eb3b1b01ac0248523c51]
Exit stack: []

================================


