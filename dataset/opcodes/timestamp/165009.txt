Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x70b]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x27ebcf0e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x70b
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x27ebcf0e
0x20: V14 = EQ V12 0x27ebcf0e
0x21: V15 = 0x70b
0x24: JUMPI 0x70b V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x73a]
---
0x25 DUP1
0x26 PUSH4 0x30c74e04
0x2b EQ
0x2c PUSH2 0x73a
0x2f JUMPI
---
0x26: V16 = 0x30c74e04
0x2b: V17 = EQ 0x30c74e04 V12
0x2c: V18 = 0x73a
0x2f: JUMPI 0x73a V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x761]
---
0x30 DUP1
0x31 PUSH4 0x519ee19e
0x36 EQ
0x37 PUSH2 0x761
0x3a JUMPI
---
0x31: V19 = 0x519ee19e
0x36: V20 = EQ 0x519ee19e V12
0x37: V21 = 0x761
0x3a: JUMPI 0x761 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x786]
---
0x3b DUP1
0x3c PUSH4 0x7fa8c158
0x41 EQ
0x42 PUSH2 0x786
0x45 JUMPI
---
0x3c: V22 = 0x7fa8c158
0x41: V23 = EQ 0x7fa8c158 V12
0x42: V24 = 0x786
0x45: JUMPI 0x786 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x7ab]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x7ab
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x7ab
0x50: JUMPI 0x7ab V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x7da]
---
0x51 DUP1
0x52 PUSH4 0x96c5406d
0x57 EQ
0x58 PUSH2 0x7da
0x5b JUMPI
---
0x52: V28 = 0x96c5406d
0x57: V29 = EQ 0x96c5406d V12
0x58: V30 = 0x7da
0x5b: JUMPI 0x7da V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x7ff]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x7ff
0x66 JUMPI
---
0x5d: V31 = 0xa035b1fe
0x62: V32 = EQ 0xa035b1fe V12
0x63: V33 = 0x7ff
0x66: JUMPI 0x7ff V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x824]
---
0x67 DUP1
0x68 PUSH4 0xc8e569a8
0x6d EQ
0x6e PUSH2 0x824
0x71 JUMPI
---
0x68: V34 = 0xc8e569a8
0x6d: V35 = EQ 0xc8e569a8 V12
0x6e: V36 = 0x824
0x71: JUMPI 0x824 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x849]
---
0x72 DUP1
0x73 PUSH4 0xccb07cef
0x78 EQ
0x79 PUSH2 0x849
0x7c JUMPI
---
0x73: V37 = 0xccb07cef
0x78: V38 = EQ 0xccb07cef V12
0x79: V39 = 0x849
0x7c: JUMPI 0x849 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x0, 0x72]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e
[0x7e:0x8f]
---
Predecessors: [0x7d]
Successors: [0x90, 0x9f]
---
0x7e JUMPDEST
0x7f PUSH1 0x0
0x81 DUP1
0x82 PUSH1 0x0
0x84 PUSH4 0x5a8b6500
0x89 TIMESTAMP
0x8a GT
0x8b ISZERO
0x8c PUSH2 0x9f
0x8f JUMPI
---
0x7e: JUMPDEST 
0x7f: V40 = 0x0
0x82: V41 = 0x0
0x84: V42 = 0x5a8b6500
0x89: V43 = TIMESTAMP
0x8a: V44 = GT V43 0x5a8b6500
0x8b: V45 = ISZERO V44
0x8c: V46 = 0x9f
0x8f: JUMPI 0x9f V45
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x90
[0x90:0x9e]
---
Predecessors: [0x7e]
Successors: [0xb7]
---
0x90 PUSH7 0x254db1c2244000
0x98 PUSH1 0x3
0x9a SSTORE
0x9b PUSH2 0xb7
0x9e JUMP
---
0x90: V47 = 0x254db1c2244000
0x98: V48 = 0x3
0x9a: S[0x3] = 0x254db1c2244000
0x9b: V49 = 0xb7
0x9e: JUMP 0xb7
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x9f
[0x9f:0xab]
---
Predecessors: [0x7e]
Successors: [0xac, 0xb7]
---
0x9f JUMPDEST
0xa0 PUSH4 0x5a628680
0xa5 TIMESTAMP
0xa6 GT
0xa7 ISZERO
0xa8 PUSH2 0xb7
0xab JUMPI
---
0x9f: JUMPDEST 
0xa0: V50 = 0x5a628680
0xa5: V51 = TIMESTAMP
0xa6: V52 = GT V51 0x5a628680
0xa7: V53 = ISZERO V52
0xa8: V54 = 0xb7
0xab: JUMPI 0xb7 V53
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0x9f]
Successors: [0xb7]
---
0xac PUSH7 0x18de76816d8000
0xb4 PUSH1 0x3
0xb6 SSTORE
---
0xac: V55 = 0x18de76816d8000
0xb4: V56 = 0x3
0xb6: S[0x3] = 0x18de76816d8000
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xb7
[0xb7:0xb7]
---
Predecessors: [0x90, 0x9f, 0xac]
Successors: [0xb8]
---
0xb7 JUMPDEST
---
0xb7: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xb8
[0xb8:0x10e]
---
Predecessors: [0xb7]
Successors: [0x10f, 0x113]
---
0xb8 JUMPDEST
0xb9 PUSH1 0x0
0xbb DUP1
0xbc SLOAD
0xbd PUSH1 0x1
0xbf PUSH1 0xa0
0xc1 PUSH1 0x2
0xc3 EXP
0xc4 SUB
0xc5 AND
0xc6 SWAP1
0xc7 PUSH4 0x70a08231
0xcc SWAP1
0xcd ADDRESS
0xce SWAP1
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 MSTORE
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 PUSH1 0xe0
0xdb PUSH1 0x2
0xdd EXP
0xde PUSH4 0xffffffff
0xe3 DUP5
0xe4 AND
0xe5 MUL
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 SWAP1
0xf1 SWAP2
0xf2 AND
0xf3 PUSH1 0x4
0xf5 DUP3
0xf6 ADD
0xf7 MSTORE
0xf8 PUSH1 0x24
0xfa ADD
0xfb PUSH1 0x20
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP1
0x101 DUP4
0x102 SUB
0x103 DUP2
0x104 PUSH1 0x0
0x106 DUP8
0x107 DUP1
0x108 EXTCODESIZE
0x109 ISZERO
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0xb8: JUMPDEST 
0xb9: V57 = 0x0
0xbc: V58 = S[0x0]
0xbd: V59 = 0x1
0xbf: V60 = 0xa0
0xc1: V61 = 0x2
0xc3: V62 = EXP 0x2 0xa0
0xc4: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xc7: V65 = 0x70a08231
0xcd: V66 = ADDRESS
0xcf: V67 = 0x40
0xd1: V68 = M[0x40]
0xd2: V69 = 0x20
0xd4: V70 = ADD 0x20 V68
0xd5: M[V70] = 0x0
0xd6: V71 = 0x40
0xd8: V72 = M[0x40]
0xd9: V73 = 0xe0
0xdb: V74 = 0x2
0xdd: V75 = EXP 0x2 0xe0
0xde: V76 = 0xffffffff
0xe4: V77 = AND 0x70a08231 0xffffffff
0xe5: V78 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xe7: M[V72] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xe8: V79 = 0x1
0xea: V80 = 0xa0
0xec: V81 = 0x2
0xee: V82 = EXP 0x2 0xa0
0xef: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2: V84 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V85 = 0x4
0xf6: V86 = ADD V72 0x4
0xf7: M[V86] = V84
0xf8: V87 = 0x24
0xfa: V88 = ADD 0x24 V72
0xfb: V89 = 0x20
0xfd: V90 = 0x40
0xff: V91 = M[0x40]
0x102: V92 = SUB V88 V91
0x104: V93 = 0x0
0x108: V94 = EXTCODESIZE V64
0x109: V95 = ISZERO V94
0x10a: V96 = ISZERO V95
0x10b: V97 = 0x113
0x10e: JUMPI 0x113 V96
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]
Exit stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0xb8]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V98 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]

================================

Block 0x113
[0x113:0x11f]
---
Predecessors: [0xb8]
Successors: [0x120, 0x124]
---
0x113 JUMPDEST
0x114 PUSH2 0x2c6
0x117 GAS
0x118 SUB
0x119 CALL
0x11a ISZERO
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x113: JUMPDEST 
0x114: V99 = 0x2c6
0x117: V100 = GAS
0x118: V101 = SUB V100 0x2c6
0x119: V102 = CALL V101 V64 0x0 V91 V92 V91 0x20
0x11a: V103 = ISZERO V102
0x11b: V104 = ISZERO V103
0x11c: V105 = 0x124
0x11f: JUMPI 0x124 V104
---
Entry stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x113]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V106 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88]

================================

Block 0x124
[0x124:0x13a]
---
Predecessors: [0x113]
Successors: [0x13b, 0x171]
---
0x124 JUMPDEST
0x125 POP
0x126 POP
0x127 POP
0x128 PUSH1 0x40
0x12a MLOAD
0x12b DUP1
0x12c MLOAD
0x12d PUSH1 0x6
0x12f SSTORE
0x130 POP
0x131 PUSH1 0x1
0x133 SLOAD
0x134 TIMESTAMP
0x135 LT
0x136 ISZERO
0x137 PUSH2 0x171
0x13a JUMPI
---
0x124: JUMPDEST 
0x128: V107 = 0x40
0x12a: V108 = M[0x40]
0x12c: V109 = M[V108]
0x12d: V110 = 0x6
0x12f: S[0x6] = V109
0x131: V111 = 0x1
0x133: V112 = S[0x1]
0x134: V113 = TIMESTAMP
0x135: V114 = LT V113 V112
0x136: V115 = ISZERO V114
0x137: V116 = 0x171
0x13a: JUMPI 0x171 V115
---
Entry stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x13b
[0x13b:0x167]
---
Predecessors: [0x124]
Successors: [0x168, 0x16c]
---
0x13b PUSH1 0x1
0x13d PUSH1 0xa0
0x13f PUSH1 0x2
0x141 EXP
0x142 SUB
0x143 CALLER
0x144 AND
0x145 CALLVALUE
0x146 DUP1
0x147 ISZERO
0x148 PUSH2 0x8fc
0x14b MUL
0x14c SWAP1
0x14d PUSH1 0x40
0x14f MLOAD
0x150 PUSH1 0x0
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 DUP4
0x157 SUB
0x158 DUP2
0x159 DUP6
0x15a DUP9
0x15b DUP9
0x15c CALL
0x15d SWAP4
0x15e POP
0x15f POP
0x160 POP
0x161 POP
0x162 ISZERO
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x13b: V117 = 0x1
0x13d: V118 = 0xa0
0x13f: V119 = 0x2
0x141: V120 = EXP 0x2 0xa0
0x142: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V122 = CALLER
0x144: V123 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x145: V124 = CALLVALUE
0x147: V125 = ISZERO V124
0x148: V126 = 0x8fc
0x14b: V127 = MUL 0x8fc V125
0x14d: V128 = 0x40
0x14f: V129 = M[0x40]
0x150: V130 = 0x0
0x152: V131 = 0x40
0x154: V132 = M[0x40]
0x157: V133 = SUB V129 V132
0x15c: V134 = CALL V127 V123 V124 V132 V133 V132 0x0
0x162: V135 = ISZERO V134
0x163: V136 = ISZERO V135
0x164: V137 = 0x16c
0x167: JUMPI 0x16c V136
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x13b]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V138 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x16c
[0x16c:0x170]
---
Predecessors: [0x13b, 0x1ad, 0x34b, 0x4da]
Successors: [0x692]
---
0x16c JUMPDEST
0x16d PUSH2 0x692
0x170 JUMP
---
0x16c: JUMPDEST 
0x16d: V139 = 0x692
0x170: JUMP 0x692
---
Entry stack: [V12, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, 0x0]

================================

Block 0x171
[0x171:0x17b]
---
Predecessors: [0x124]
Successors: [0x17c, 0x33f]
---
0x171 JUMPDEST
0x172 PUSH1 0x2
0x174 SLOAD
0x175 TIMESTAMP
0x176 GT
0x177 ISZERO
0x178 PUSH2 0x33f
0x17b JUMPI
---
0x171: JUMPDEST 
0x172: V140 = 0x2
0x174: V141 = S[0x2]
0x175: V142 = TIMESTAMP
0x176: V143 = GT V142 V141
0x177: V144 = ISZERO V143
0x178: V145 = 0x33f
0x17b: JUMPI 0x33f V144
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x17c
[0x17c:0x1a8]
---
Predecessors: [0x171]
Successors: [0x1a9, 0x1ad]
---
0x17c PUSH1 0x1
0x17e PUSH1 0xa0
0x180 PUSH1 0x2
0x182 EXP
0x183 SUB
0x184 CALLER
0x185 AND
0x186 CALLVALUE
0x187 DUP1
0x188 ISZERO
0x189 PUSH2 0x8fc
0x18c MUL
0x18d SWAP1
0x18e PUSH1 0x40
0x190 MLOAD
0x191 PUSH1 0x0
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 DUP4
0x198 SUB
0x199 DUP2
0x19a DUP6
0x19b DUP9
0x19c DUP9
0x19d CALL
0x19e SWAP4
0x19f POP
0x1a0 POP
0x1a1 POP
0x1a2 POP
0x1a3 ISZERO
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x17c: V146 = 0x1
0x17e: V147 = 0xa0
0x180: V148 = 0x2
0x182: V149 = EXP 0x2 0xa0
0x183: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x184: V151 = CALLER
0x185: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x186: V153 = CALLVALUE
0x188: V154 = ISZERO V153
0x189: V155 = 0x8fc
0x18c: V156 = MUL 0x8fc V154
0x18e: V157 = 0x40
0x190: V158 = M[0x40]
0x191: V159 = 0x0
0x193: V160 = 0x40
0x195: V161 = M[0x40]
0x198: V162 = SUB V158 V161
0x19d: V163 = CALL V156 V152 V153 V161 V162 V161 0x0
0x1a3: V164 = ISZERO V163
0x1a4: V165 = ISZERO V164
0x1a5: V166 = 0x1ad
0x1a8: JUMPI 0x1ad V165
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x17c]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V167 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1ad
[0x1ad:0x1be]
---
Predecessors: [0x17c]
Successors: [0x16c, 0x1bf]
---
0x1ad JUMPDEST
0x1ae PUSH1 0x7
0x1b0 SLOAD
0x1b1 PUSH2 0x100
0x1b4 SWAP1
0x1b5 DIV
0x1b6 PUSH1 0xff
0x1b8 AND
0x1b9 ISZERO
0x1ba ISZERO
0x1bb PUSH2 0x16c
0x1be JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V168 = 0x7
0x1b0: V169 = S[0x7]
0x1b1: V170 = 0x100
0x1b5: V171 = DIV V169 0x100
0x1b6: V172 = 0xff
0x1b8: V173 = AND 0xff V171
0x1b9: V174 = ISZERO V173
0x1ba: V175 = ISZERO V174
0x1bb: V176 = 0x16c
0x1be: JUMPI 0x16c V175
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1bf
[0x1bf:0x232]
---
Predecessors: [0x1ad]
Successors: [0x233, 0x237]
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 SLOAD
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb AND
0x1cc SWAP1
0x1cd PUSH4 0xa9059cbb
0x1d2 SWAP1
0x1d3 PUSH20 0xe010d0a52791340db3323b77700817546a062109
0x1e8 SWAP1
0x1e9 DUP4
0x1ea SWAP1
0x1eb PUSH4 0x70a08231
0x1f0 SWAP1
0x1f1 ADDRESS
0x1f2 SWAP1
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 MSTORE
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd PUSH1 0xe0
0x1ff PUSH1 0x2
0x201 EXP
0x202 PUSH4 0xffffffff
0x207 DUP5
0x208 AND
0x209 MUL
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 SWAP1
0x215 SWAP2
0x216 AND
0x217 PUSH1 0x4
0x219 DUP3
0x21a ADD
0x21b MSTORE
0x21c PUSH1 0x24
0x21e ADD
0x21f PUSH1 0x20
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 DUP4
0x226 SUB
0x227 DUP2
0x228 PUSH1 0x0
0x22a DUP8
0x22b DUP1
0x22c EXTCODESIZE
0x22d ISZERO
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x1bf: V177 = 0x0
0x1c2: V178 = S[0x0]
0x1c3: V179 = 0x1
0x1c5: V180 = 0xa0
0x1c7: V181 = 0x2
0x1c9: V182 = EXP 0x2 0xa0
0x1ca: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x1cd: V185 = 0xa9059cbb
0x1d3: V186 = 0xe010d0a52791340db3323b77700817546a062109
0x1eb: V187 = 0x70a08231
0x1f1: V188 = ADDRESS
0x1f3: V189 = 0x40
0x1f5: V190 = M[0x40]
0x1f6: V191 = 0x20
0x1f8: V192 = ADD 0x20 V190
0x1f9: M[V192] = 0x0
0x1fa: V193 = 0x40
0x1fc: V194 = M[0x40]
0x1fd: V195 = 0xe0
0x1ff: V196 = 0x2
0x201: V197 = EXP 0x2 0xe0
0x202: V198 = 0xffffffff
0x208: V199 = AND 0x70a08231 0xffffffff
0x209: V200 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x20b: M[V194] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x20c: V201 = 0x1
0x20e: V202 = 0xa0
0x210: V203 = 0x2
0x212: V204 = EXP 0x2 0xa0
0x213: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V206 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x217: V207 = 0x4
0x21a: V208 = ADD V194 0x4
0x21b: M[V208] = V206
0x21c: V209 = 0x24
0x21e: V210 = ADD 0x24 V194
0x21f: V211 = 0x20
0x221: V212 = 0x40
0x223: V213 = M[0x40]
0x226: V214 = SUB V210 V213
0x228: V215 = 0x0
0x22c: V216 = EXTCODESIZE V184
0x22d: V217 = ISZERO V216
0x22e: V218 = ISZERO V217
0x22f: V219 = 0x237
0x232: JUMPI 0x237 V218
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x1bf]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V220 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]

================================

Block 0x237
[0x237:0x243]
---
Predecessors: [0x1bf]
Successors: [0x244, 0x248]
---
0x237 JUMPDEST
0x238 PUSH2 0x2c6
0x23b GAS
0x23c SUB
0x23d CALL
0x23e ISZERO
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x237: JUMPDEST 
0x238: V221 = 0x2c6
0x23b: V222 = GAS
0x23c: V223 = SUB V222 0x2c6
0x23d: V224 = CALL V223 V184 0x0 V213 V214 V213 0x20
0x23e: V225 = ISZERO V224
0x23f: V226 = ISZERO V225
0x240: V227 = 0x248
0x243: JUMPI 0x248 V226
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x237]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V228 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210]

================================

Block 0x248
[0x248:0x290]
---
Predecessors: [0x237]
Successors: [0x291, 0x295]
---
0x248 JUMPDEST
0x249 POP
0x24a POP
0x24b POP
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP1
0x250 MLOAD
0x251 SWAP1
0x252 POP
0x253 PUSH1 0x40
0x255 MLOAD
0x256 PUSH1 0xe0
0x258 PUSH1 0x2
0x25a EXP
0x25b PUSH4 0xffffffff
0x260 DUP6
0x261 AND
0x262 MUL
0x263 DUP2
0x264 MSTORE
0x265 PUSH1 0x1
0x267 PUSH1 0xa0
0x269 PUSH1 0x2
0x26b EXP
0x26c SUB
0x26d SWAP1
0x26e SWAP3
0x26f AND
0x270 PUSH1 0x4
0x272 DUP4
0x273 ADD
0x274 MSTORE
0x275 PUSH1 0x24
0x277 DUP3
0x278 ADD
0x279 MSTORE
0x27a PUSH1 0x44
0x27c ADD
0x27d PUSH1 0x0
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 DUP4
0x284 SUB
0x285 DUP2
0x286 PUSH1 0x0
0x288 DUP8
0x289 DUP1
0x28a EXTCODESIZE
0x28b ISZERO
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x248: JUMPDEST 
0x24c: V229 = 0x40
0x24e: V230 = M[0x40]
0x250: V231 = M[V230]
0x253: V232 = 0x40
0x255: V233 = M[0x40]
0x256: V234 = 0xe0
0x258: V235 = 0x2
0x25a: V236 = EXP 0x2 0xe0
0x25b: V237 = 0xffffffff
0x261: V238 = AND 0xa9059cbb 0xffffffff
0x262: V239 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x264: M[V233] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x265: V240 = 0x1
0x267: V241 = 0xa0
0x269: V242 = 0x2
0x26b: V243 = EXP 0x2 0xa0
0x26c: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V245 = AND 0xe010d0a52791340db3323b77700817546a062109 0xffffffffffffffffffffffffffffffffffffffff
0x270: V246 = 0x4
0x273: V247 = ADD V233 0x4
0x274: M[V247] = 0xe010d0a52791340db3323b77700817546a062109
0x275: V248 = 0x24
0x278: V249 = ADD V233 0x24
0x279: M[V249] = V231
0x27a: V250 = 0x44
0x27c: V251 = ADD 0x44 V233
0x27d: V252 = 0x0
0x27f: V253 = 0x40
0x281: V254 = M[0x40]
0x284: V255 = SUB V251 V254
0x286: V256 = 0x0
0x28a: V257 = EXTCODESIZE V184
0x28b: V258 = ISZERO V257
0x28c: V259 = ISZERO V258
0x28d: V260 = 0x295
0x290: JUMPI 0x295 V259
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210]
Stack pops: 6
Stack additions: [S5, S4, V251, 0x0, V254, V255, V254, 0x0, S5]
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251, 0x0, V254, V255, V254, 0x0, V184]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x248]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V261 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251, 0x0, V254, V255, V254, 0x0, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251, 0x0, V254, V255, V254, 0x0, V184]

================================

Block 0x295
[0x295:0x2a1]
---
Predecessors: [0x248]
Successors: [0x2a2, 0x2a6]
---
0x295 JUMPDEST
0x296 PUSH2 0x2c6
0x299 GAS
0x29a SUB
0x29b CALL
0x29c ISZERO
0x29d ISZERO
0x29e PUSH2 0x2a6
0x2a1 JUMPI
---
0x295: JUMPDEST 
0x296: V262 = 0x2c6
0x299: V263 = GAS
0x29a: V264 = SUB V263 0x2c6
0x29b: V265 = CALL V264 V184 0x0 V254 V255 V254 0x0
0x29c: V266 = ISZERO V265
0x29d: V267 = ISZERO V266
0x29e: V268 = 0x2a6
0x2a1: JUMPI 0x2a6 V267
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251, 0x0, V254, V255, V254, 0x0, V184]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x295]
Successors: []
---
0x2a2 PUSH1 0x0
0x2a4 DUP1
0x2a5 REVERT
---
0x2a2: V269 = 0x0
0x2a5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251]

================================

Block 0x2a6
[0x2a6:0x2ff]
---
Predecessors: [0x295]
Successors: [0x300, 0x304]
---
0x2a6 JUMPDEST
0x2a7 POP
0x2a8 POP
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac SLOAD
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 AND
0x2b6 SWAP2
0x2b7 POP
0x2b8 PUSH4 0x70a08231
0x2bd SWAP1
0x2be ADDRESS
0x2bf SWAP1
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 MSTORE
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca PUSH1 0xe0
0x2cc PUSH1 0x2
0x2ce EXP
0x2cf PUSH4 0xffffffff
0x2d4 DUP5
0x2d5 AND
0x2d6 MUL
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x1
0x2db PUSH1 0xa0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 SUB
0x2e1 SWAP1
0x2e2 SWAP2
0x2e3 AND
0x2e4 PUSH1 0x4
0x2e6 DUP3
0x2e7 ADD
0x2e8 MSTORE
0x2e9 PUSH1 0x24
0x2eb ADD
0x2ec PUSH1 0x20
0x2ee PUSH1 0x40
0x2f0 MLOAD
0x2f1 DUP1
0x2f2 DUP4
0x2f3 SUB
0x2f4 DUP2
0x2f5 PUSH1 0x0
0x2f7 DUP8
0x2f8 DUP1
0x2f9 EXTCODESIZE
0x2fa ISZERO
0x2fb ISZERO
0x2fc PUSH2 0x304
0x2ff JUMPI
---
0x2a6: JUMPDEST 
0x2a9: V270 = 0x0
0x2ac: V271 = S[0x0]
0x2ad: V272 = 0x1
0x2af: V273 = 0xa0
0x2b1: V274 = 0x2
0x2b3: V275 = EXP 0x2 0xa0
0x2b4: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x2b8: V278 = 0x70a08231
0x2be: V279 = ADDRESS
0x2c0: V280 = 0x40
0x2c2: V281 = M[0x40]
0x2c3: V282 = 0x20
0x2c5: V283 = ADD 0x20 V281
0x2c6: M[V283] = 0x0
0x2c7: V284 = 0x40
0x2c9: V285 = M[0x40]
0x2ca: V286 = 0xe0
0x2cc: V287 = 0x2
0x2ce: V288 = EXP 0x2 0xe0
0x2cf: V289 = 0xffffffff
0x2d5: V290 = AND 0x70a08231 0xffffffff
0x2d6: V291 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2d8: M[V285] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2d9: V292 = 0x1
0x2db: V293 = 0xa0
0x2dd: V294 = 0x2
0x2df: V295 = EXP 0x2 0xa0
0x2e0: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e3: V297 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V298 = 0x4
0x2e7: V299 = ADD V285 0x4
0x2e8: M[V299] = V297
0x2e9: V300 = 0x24
0x2eb: V301 = ADD 0x24 V285
0x2ec: V302 = 0x20
0x2ee: V303 = 0x40
0x2f0: V304 = M[0x40]
0x2f3: V305 = SUB V301 V304
0x2f5: V306 = 0x0
0x2f9: V307 = EXTCODESIZE V277
0x2fa: V308 = ISZERO V307
0x2fb: V309 = ISZERO V308
0x2fc: V310 = 0x304
0x2ff: JUMPI 0x304 V309
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251]
Stack pops: 3
Stack additions: [V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]
Exit stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]

================================

Block 0x300
[0x300:0x303]
---
Predecessors: [0x2a6]
Successors: []
---
0x300 PUSH1 0x0
0x302 DUP1
0x303 REVERT
---
0x300: V311 = 0x0
0x303: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]

================================

Block 0x304
[0x304:0x310]
---
Predecessors: [0x2a6]
Successors: [0x311, 0x315]
---
0x304 JUMPDEST
0x305 PUSH2 0x2c6
0x308 GAS
0x309 SUB
0x30a CALL
0x30b ISZERO
0x30c ISZERO
0x30d PUSH2 0x315
0x310 JUMPI
---
0x304: JUMPDEST 
0x305: V312 = 0x2c6
0x308: V313 = GAS
0x309: V314 = SUB V313 0x2c6
0x30a: V315 = CALL V314 V277 0x0 V304 V305 V304 0x20
0x30b: V316 = ISZERO V315
0x30c: V317 = ISZERO V316
0x30d: V318 = 0x315
0x310: JUMPI 0x315 V317
---
Entry stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x304]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 REVERT
---
0x311: V319 = 0x0
0x314: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301]

================================

Block 0x315
[0x315:0x339]
---
Predecessors: [0x304]
Successors: [0x33a]
---
0x315 JUMPDEST
0x316 POP
0x317 POP
0x318 POP
0x319 PUSH1 0x40
0x31b MLOAD
0x31c DUP1
0x31d MLOAD
0x31e PUSH1 0x6
0x320 SSTORE
0x321 POP
0x322 PUSH1 0x7
0x324 DUP1
0x325 SLOAD
0x326 PUSH1 0xff
0x328 NOT
0x329 PUSH2 0xff00
0x32c NOT
0x32d SWAP1
0x32e SWAP2
0x32f AND
0x330 PUSH2 0x100
0x333 OR
0x334 AND
0x335 PUSH1 0x1
0x337 OR
0x338 SWAP1
0x339 SSTORE
---
0x315: JUMPDEST 
0x319: V320 = 0x40
0x31b: V321 = M[0x40]
0x31d: V322 = M[V321]
0x31e: V323 = 0x6
0x320: S[0x6] = V322
0x322: V324 = 0x7
0x325: V325 = S[0x7]
0x326: V326 = 0xff
0x328: V327 = NOT 0xff
0x329: V328 = 0xff00
0x32c: V329 = NOT 0xff00
0x32f: V330 = AND V325 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x330: V331 = 0x100
0x333: V332 = OR 0x100 V330
0x334: V333 = AND V332 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x335: V334 = 0x1
0x337: V335 = OR 0x1 V333
0x339: S[0x7] = V335
---
Entry stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x33a
[0x33a:0x33e]
---
Predecessors: [0x315]
Successors: [0x692]
---
0x33a JUMPDEST
0x33b PUSH2 0x692
0x33e JUMP
---
0x33a: JUMPDEST 
0x33b: V336 = 0x692
0x33e: JUMP 0x692
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x33f
[0x33f:0x34a]
---
Predecessors: [0x171]
Successors: [0x34b, 0x381]
---
0x33f JUMPDEST
0x340 PUSH1 0x7
0x342 SLOAD
0x343 PUSH1 0xff
0x345 AND
0x346 ISZERO
0x347 PUSH2 0x381
0x34a JUMPI
---
0x33f: JUMPDEST 
0x340: V337 = 0x7
0x342: V338 = S[0x7]
0x343: V339 = 0xff
0x345: V340 = AND 0xff V338
0x346: V341 = ISZERO V340
0x347: V342 = 0x381
0x34a: JUMPI 0x381 V341
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x34b
[0x34b:0x377]
---
Predecessors: [0x33f]
Successors: [0x16c, 0x378]
---
0x34b PUSH1 0x1
0x34d PUSH1 0xa0
0x34f PUSH1 0x2
0x351 EXP
0x352 SUB
0x353 CALLER
0x354 AND
0x355 CALLVALUE
0x356 DUP1
0x357 ISZERO
0x358 PUSH2 0x8fc
0x35b MUL
0x35c SWAP1
0x35d PUSH1 0x40
0x35f MLOAD
0x360 PUSH1 0x0
0x362 PUSH1 0x40
0x364 MLOAD
0x365 DUP1
0x366 DUP4
0x367 SUB
0x368 DUP2
0x369 DUP6
0x36a DUP9
0x36b DUP9
0x36c CALL
0x36d SWAP4
0x36e POP
0x36f POP
0x370 POP
0x371 POP
0x372 ISZERO
0x373 ISZERO
0x374 PUSH2 0x16c
0x377 JUMPI
---
0x34b: V343 = 0x1
0x34d: V344 = 0xa0
0x34f: V345 = 0x2
0x351: V346 = EXP 0x2 0xa0
0x352: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V348 = CALLER
0x354: V349 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x355: V350 = CALLVALUE
0x357: V351 = ISZERO V350
0x358: V352 = 0x8fc
0x35b: V353 = MUL 0x8fc V351
0x35d: V354 = 0x40
0x35f: V355 = M[0x40]
0x360: V356 = 0x0
0x362: V357 = 0x40
0x364: V358 = M[0x40]
0x367: V359 = SUB V355 V358
0x36c: V360 = CALL V353 V349 V350 V358 V359 V358 0x0
0x372: V361 = ISZERO V360
0x373: V362 = ISZERO V361
0x374: V363 = 0x16c
0x377: JUMPI 0x16c V362
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x378
[0x378:0x37b]
---
Predecessors: [0x34b]
Successors: []
---
0x378 PUSH1 0x0
0x37a DUP1
0x37b REVERT
---
0x378: V364 = 0x0
0x37b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x37c
[0x37c:0x380]
---
Predecessors: []
Successors: [0x692]
---
0x37c JUMPDEST
0x37d PUSH2 0x692
0x380 JUMP
---
0x37c: JUMPDEST 
0x37d: V365 = 0x692
0x380: JUMP 0x692
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x381
[0x381:0x38f]
---
Predecessors: [0x33f]
Successors: [0x390, 0x391]
---
0x381 JUMPDEST
0x382 PUSH1 0x4
0x384 SLOAD
0x385 PUSH1 0x3
0x387 SLOAD
0x388 CALLVALUE
0x389 DUP2
0x38a ISZERO
0x38b ISZERO
0x38c PUSH2 0x391
0x38f JUMPI
---
0x381: JUMPDEST 
0x382: V366 = 0x4
0x384: V367 = S[0x4]
0x385: V368 = 0x3
0x387: V369 = S[0x3]
0x388: V370 = CALLVALUE
0x38a: V371 = ISZERO V369
0x38b: V372 = ISZERO V371
0x38c: V373 = 0x391
0x38f: JUMPI 0x391 V372
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V367, V369, V370]
Exit stack: [V12, 0x0, 0x0, 0x0, V367, V369, V370]

================================

Block 0x390
[0x390:0x390]
---
Predecessors: [0x381]
Successors: []
---
0x390 INVALID
---
0x390: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V367, V369, V370]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V367, V369, V370]

================================

Block 0x391
[0x391:0x39d]
---
Predecessors: [0x381]
Successors: [0x39e, 0x3cf]
---
0x391 JUMPDEST
0x392 DIV
0x393 MUL
0x394 SWAP3
0x395 POP
0x396 PUSH1 0x0
0x398 DUP4
0x399 GT
0x39a PUSH2 0x3cf
0x39d JUMPI
---
0x391: JUMPDEST 
0x392: V374 = DIV V370 V369
0x393: V375 = MUL V374 V367
0x396: V376 = 0x0
0x399: V377 = GT V375 0x0
0x39a: V378 = 0x3cf
0x39d: JUMPI 0x3cf V377
---
Entry stack: [V12, 0x0, 0x0, 0x0, V367, V369, V370]
Stack pops: 6
Stack additions: [V375, S4, S3]
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x39e
[0x39e:0x3ca]
---
Predecessors: [0x391]
Successors: [0x3cb, 0x3cf]
---
0x39e PUSH1 0x1
0x3a0 PUSH1 0xa0
0x3a2 PUSH1 0x2
0x3a4 EXP
0x3a5 SUB
0x3a6 CALLER
0x3a7 AND
0x3a8 CALLVALUE
0x3a9 DUP1
0x3aa ISZERO
0x3ab PUSH2 0x8fc
0x3ae MUL
0x3af SWAP1
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 PUSH1 0x0
0x3b5 PUSH1 0x40
0x3b7 MLOAD
0x3b8 DUP1
0x3b9 DUP4
0x3ba SUB
0x3bb DUP2
0x3bc DUP6
0x3bd DUP9
0x3be DUP9
0x3bf CALL
0x3c0 SWAP4
0x3c1 POP
0x3c2 POP
0x3c3 POP
0x3c4 POP
0x3c5 ISZERO
0x3c6 ISZERO
0x3c7 PUSH2 0x3cf
0x3ca JUMPI
---
0x39e: V379 = 0x1
0x3a0: V380 = 0xa0
0x3a2: V381 = 0x2
0x3a4: V382 = EXP 0x2 0xa0
0x3a5: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a6: V384 = CALLER
0x3a7: V385 = AND V384 0xffffffffffffffffffffffffffffffffffffffff
0x3a8: V386 = CALLVALUE
0x3aa: V387 = ISZERO V386
0x3ab: V388 = 0x8fc
0x3ae: V389 = MUL 0x8fc V387
0x3b0: V390 = 0x40
0x3b2: V391 = M[0x40]
0x3b3: V392 = 0x0
0x3b5: V393 = 0x40
0x3b7: V394 = M[0x40]
0x3ba: V395 = SUB V391 V394
0x3bf: V396 = CALL V389 V385 V386 V394 V395 V394 0x0
0x3c5: V397 = ISZERO V396
0x3c6: V398 = ISZERO V397
0x3c7: V399 = 0x3cf
0x3ca: JUMPI 0x3cf V398
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3cb
[0x3cb:0x3ce]
---
Predecessors: [0x39e]
Successors: []
---
0x3cb PUSH1 0x0
0x3cd DUP1
0x3ce REVERT
---
0x3cb: V400 = 0x0
0x3ce: REVERT 0x0 0x0
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3cf
[0x3cf:0x3cf]
---
Predecessors: [0x391, 0x39e]
Successors: [0x3d0]
---
0x3cf JUMPDEST
---
0x3cf: JUMPDEST 
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3d0
[0x3d0:0x3d8]
---
Predecessors: [0x3cf]
Successors: [0x3d9, 0x3dd]
---
0x3d0 JUMPDEST
0x3d1 PUSH1 0x0
0x3d3 DUP4
0x3d4 GT
0x3d5 PUSH2 0x3dd
0x3d8 JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V401 = 0x0
0x3d4: V402 = GT V375 0x0
0x3d5: V403 = 0x3dd
0x3d8: JUMPI 0x3dd V402
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3d9
[0x3d9:0x3dc]
---
Predecessors: [0x3d0]
Successors: []
---
0x3d9 PUSH1 0x0
0x3db DUP1
0x3dc REVERT
---
0x3d9: V404 = 0x0
0x3dc: REVERT 0x0 0x0
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3dd
[0x3dd:0x3ec]
---
Predecessors: [0x3d0]
Successors: [0x3ed, 0x3ee]
---
0x3dd JUMPDEST
0x3de PUSH1 0x4
0x3e0 SLOAD
0x3e1 PUSH1 0x3
0x3e3 SLOAD
0x3e4 DUP5
0x3e5 MUL
0x3e6 DUP2
0x3e7 ISZERO
0x3e8 ISZERO
0x3e9 PUSH2 0x3ee
0x3ec JUMPI
---
0x3dd: JUMPDEST 
0x3de: V405 = 0x4
0x3e0: V406 = S[0x4]
0x3e1: V407 = 0x3
0x3e3: V408 = S[0x3]
0x3e5: V409 = MUL V375 V408
0x3e7: V410 = ISZERO V406
0x3e8: V411 = ISZERO V410
0x3e9: V412 = 0x3ee
0x3ec: JUMPI 0x3ee V411
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V406, V409]
Exit stack: [V12, V375, 0x0, 0x0, V406, V409]

================================

Block 0x3ed
[0x3ed:0x3ed]
---
Predecessors: [0x3dd]
Successors: []
---
0x3ed INVALID
---
0x3ed: INVALID 
---
Entry stack: [V12, V375, 0x0, 0x0, V406, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0, V406, V409]

================================

Block 0x3ee
[0x3ee:0x3fc]
---
Predecessors: [0x3dd]
Successors: [0x3fd, 0x509]
---
0x3ee JUMPDEST
0x3ef DIV
0x3f0 SWAP2
0x3f1 POP
0x3f2 DUP3
0x3f3 PUSH1 0x6
0x3f5 SLOAD
0x3f6 LT
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 PUSH2 0x509
0x3fc JUMPI
---
0x3ee: JUMPDEST 
0x3ef: V413 = DIV V409 V406
0x3f3: V414 = 0x6
0x3f5: V415 = S[0x6]
0x3f6: V416 = LT V415 V375
0x3f7: V417 = ISZERO V416
0x3f8: V418 = ISZERO V417
0x3f9: V419 = 0x509
0x3fc: JUMPI 0x509 V418
---
Entry stack: [V12, V375, 0x0, 0x0, V406, V409]
Stack pops: 5
Stack additions: [S4, V413, S2]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x3fd
[0x3fd:0x430]
---
Predecessors: [0x3ee]
Successors: [0x431, 0x435]
---
0x3fd PUSH1 0x7
0x3ff SLOAD
0x400 PUSH3 0x10000
0x404 SWAP1
0x405 DIV
0x406 PUSH1 0x1
0x408 PUSH1 0xa0
0x40a PUSH1 0x2
0x40c EXP
0x40d SUB
0x40e AND
0x40f PUSH2 0x8fc
0x412 DUP4
0x413 ISZERO
0x414 MUL
0x415 DUP4
0x416 PUSH1 0x40
0x418 MLOAD
0x419 PUSH1 0x0
0x41b PUSH1 0x40
0x41d MLOAD
0x41e DUP1
0x41f DUP4
0x420 SUB
0x421 DUP2
0x422 DUP6
0x423 DUP9
0x424 DUP9
0x425 CALL
0x426 SWAP4
0x427 POP
0x428 POP
0x429 POP
0x42a POP
0x42b ISZERO
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x3fd: V420 = 0x7
0x3ff: V421 = S[0x7]
0x400: V422 = 0x10000
0x405: V423 = DIV V421 0x10000
0x406: V424 = 0x1
0x408: V425 = 0xa0
0x40a: V426 = 0x2
0x40c: V427 = EXP 0x2 0xa0
0x40d: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40e: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x40f: V430 = 0x8fc
0x413: V431 = ISZERO V413
0x414: V432 = MUL V431 0x8fc
0x416: V433 = 0x40
0x418: V434 = M[0x40]
0x419: V435 = 0x0
0x41b: V436 = 0x40
0x41d: V437 = M[0x40]
0x420: V438 = SUB V434 V437
0x425: V439 = CALL V432 V429 V413 V437 V438 V437 0x0
0x42b: V440 = ISZERO V439
0x42c: V441 = ISZERO V440
0x42d: V442 = 0x435
0x430: JUMPI 0x435 V441
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x3fd]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V443 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x435
[0x435:0x43d]
---
Predecessors: [0x3fd]
Successors: [0x43e, 0x472]
---
0x435 JUMPDEST
0x436 DUP2
0x437 CALLVALUE
0x438 GT
0x439 ISZERO
0x43a PUSH2 0x472
0x43d JUMPI
---
0x435: JUMPDEST 
0x437: V444 = CALLVALUE
0x438: V445 = GT V444 V413
0x439: V446 = ISZERO V445
0x43a: V447 = 0x472
0x43d: JUMPI 0x472 V446
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x43e
[0x43e:0x46d]
---
Predecessors: [0x435]
Successors: [0x46e, 0x472]
---
0x43e CALLER
0x43f PUSH1 0x1
0x441 PUSH1 0xa0
0x443 PUSH1 0x2
0x445 EXP
0x446 SUB
0x447 AND
0x448 PUSH2 0x8fc
0x44b DUP4
0x44c CALLVALUE
0x44d SUB
0x44e SWAP1
0x44f DUP2
0x450 ISZERO
0x451 MUL
0x452 SWAP1
0x453 PUSH1 0x40
0x455 MLOAD
0x456 PUSH1 0x0
0x458 PUSH1 0x40
0x45a MLOAD
0x45b DUP1
0x45c DUP4
0x45d SUB
0x45e DUP2
0x45f DUP6
0x460 DUP9
0x461 DUP9
0x462 CALL
0x463 SWAP4
0x464 POP
0x465 POP
0x466 POP
0x467 POP
0x468 ISZERO
0x469 ISZERO
0x46a PUSH2 0x472
0x46d JUMPI
---
0x43e: V448 = CALLER
0x43f: V449 = 0x1
0x441: V450 = 0xa0
0x443: V451 = 0x2
0x445: V452 = EXP 0x2 0xa0
0x446: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x447: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x448: V455 = 0x8fc
0x44c: V456 = CALLVALUE
0x44d: V457 = SUB V456 V413
0x450: V458 = ISZERO V457
0x451: V459 = MUL V458 0x8fc
0x453: V460 = 0x40
0x455: V461 = M[0x40]
0x456: V462 = 0x0
0x458: V463 = 0x40
0x45a: V464 = M[0x40]
0x45d: V465 = SUB V461 V464
0x462: V466 = CALL V459 V454 V457 V464 V465 V464 0x0
0x468: V467 = ISZERO V466
0x469: V468 = ISZERO V467
0x46a: V469 = 0x472
0x46d: JUMPI 0x472 V468
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x46e
[0x46e:0x471]
---
Predecessors: [0x43e]
Successors: []
---
0x46e PUSH1 0x0
0x470 DUP1
0x471 REVERT
---
0x46e: V470 = 0x0
0x471: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x472
[0x472:0x472]
---
Predecessors: [0x435, 0x43e]
Successors: [0x473]
---
0x472 JUMPDEST
---
0x472: JUMPDEST 
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x473
[0x473:0x4c4]
---
Predecessors: [0x472]
Successors: [0x4c5, 0x4c9]
---
0x473 JUMPDEST
0x474 PUSH1 0x0
0x476 SLOAD
0x477 PUSH1 0x1
0x479 PUSH1 0xa0
0x47b PUSH1 0x2
0x47d EXP
0x47e SUB
0x47f AND
0x480 PUSH4 0xa9059cbb
0x485 CALLER
0x486 DUP6
0x487 PUSH1 0x40
0x489 MLOAD
0x48a PUSH1 0xe0
0x48c PUSH1 0x2
0x48e EXP
0x48f PUSH4 0xffffffff
0x494 DUP6
0x495 AND
0x496 MUL
0x497 DUP2
0x498 MSTORE
0x499 PUSH1 0x1
0x49b PUSH1 0xa0
0x49d PUSH1 0x2
0x49f EXP
0x4a0 SUB
0x4a1 SWAP1
0x4a2 SWAP3
0x4a3 AND
0x4a4 PUSH1 0x4
0x4a6 DUP4
0x4a7 ADD
0x4a8 MSTORE
0x4a9 PUSH1 0x24
0x4ab DUP3
0x4ac ADD
0x4ad MSTORE
0x4ae PUSH1 0x44
0x4b0 ADD
0x4b1 PUSH1 0x0
0x4b3 PUSH1 0x40
0x4b5 MLOAD
0x4b6 DUP1
0x4b7 DUP4
0x4b8 SUB
0x4b9 DUP2
0x4ba PUSH1 0x0
0x4bc DUP8
0x4bd DUP1
0x4be EXTCODESIZE
0x4bf ISZERO
0x4c0 ISZERO
0x4c1 PUSH2 0x4c9
0x4c4 JUMPI
---
0x473: JUMPDEST 
0x474: V471 = 0x0
0x476: V472 = S[0x0]
0x477: V473 = 0x1
0x479: V474 = 0xa0
0x47b: V475 = 0x2
0x47d: V476 = EXP 0x2 0xa0
0x47e: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47f: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x480: V479 = 0xa9059cbb
0x485: V480 = CALLER
0x487: V481 = 0x40
0x489: V482 = M[0x40]
0x48a: V483 = 0xe0
0x48c: V484 = 0x2
0x48e: V485 = EXP 0x2 0xe0
0x48f: V486 = 0xffffffff
0x495: V487 = AND 0xa9059cbb 0xffffffff
0x496: V488 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x498: M[V482] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x499: V489 = 0x1
0x49b: V490 = 0xa0
0x49d: V491 = 0x2
0x49f: V492 = EXP 0x2 0xa0
0x4a0: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a3: V494 = AND V480 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: V495 = 0x4
0x4a7: V496 = ADD V482 0x4
0x4a8: M[V496] = V494
0x4a9: V497 = 0x24
0x4ac: V498 = ADD V482 0x24
0x4ad: M[V498] = V375
0x4ae: V499 = 0x44
0x4b0: V500 = ADD 0x44 V482
0x4b1: V501 = 0x0
0x4b3: V502 = 0x40
0x4b5: V503 = M[0x40]
0x4b8: V504 = SUB V500 V503
0x4ba: V505 = 0x0
0x4be: V506 = EXTCODESIZE V478
0x4bf: V507 = ISZERO V506
0x4c0: V508 = ISZERO V507
0x4c1: V509 = 0x4c9
0x4c4: JUMPI 0x4c9 V508
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V478, 0xa9059cbb, V500, 0x0, V503, V504, V503, 0x0, V478]
Exit stack: [V12, V375, V413, 0x0, V478, 0xa9059cbb, V500, 0x0, V503, V504, V503, 0x0, V478]

================================

Block 0x4c5
[0x4c5:0x4c8]
---
Predecessors: [0x473]
Successors: []
---
0x4c5 PUSH1 0x0
0x4c7 DUP1
0x4c8 REVERT
---
0x4c5: V510 = 0x0
0x4c8: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, 0x0, V478, 0xa9059cbb, V500, 0x0, V503, V504, V503, 0x0, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0, V478, 0xa9059cbb, V500, 0x0, V503, V504, V503, 0x0, V478]

================================

Block 0x4c9
[0x4c9:0x4d5]
---
Predecessors: [0x473]
Successors: [0x4d6, 0x4da]
---
0x4c9 JUMPDEST
0x4ca PUSH2 0x2c6
0x4cd GAS
0x4ce SUB
0x4cf CALL
0x4d0 ISZERO
0x4d1 ISZERO
0x4d2 PUSH2 0x4da
0x4d5 JUMPI
---
0x4c9: JUMPDEST 
0x4ca: V511 = 0x2c6
0x4cd: V512 = GAS
0x4ce: V513 = SUB V512 0x2c6
0x4cf: V514 = CALL V513 V478 0x0 V503 V504 V503 0x0
0x4d0: V515 = ISZERO V514
0x4d1: V516 = ISZERO V515
0x4d2: V517 = 0x4da
0x4d5: JUMPI 0x4da V516
---
Entry stack: [V12, V375, V413, 0x0, V478, 0xa9059cbb, V500, 0x0, V503, V504, V503, 0x0, V478]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V375, V413, 0x0, V478, 0xa9059cbb, V500]

================================

Block 0x4d6
[0x4d6:0x4d9]
---
Predecessors: [0x4c9]
Successors: []
---
0x4d6 PUSH1 0x0
0x4d8 DUP1
0x4d9 REVERT
---
0x4d6: V518 = 0x0
0x4d9: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, 0x0, V478, 0xa9059cbb, V500]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0, V478, 0xa9059cbb, V500]

================================

Block 0x4da
[0x4da:0x4f6]
---
Predecessors: [0x4c9]
Successors: [0x16c, 0x4f7]
---
0x4da JUMPDEST
0x4db POP
0x4dc POP
0x4dd PUSH1 0x5
0x4df DUP1
0x4e0 SLOAD
0x4e1 DUP6
0x4e2 ADD
0x4e3 SWAP1
0x4e4 SSTORE
0x4e5 POP
0x4e6 PUSH1 0x6
0x4e8 DUP1
0x4e9 SLOAD
0x4ea DUP5
0x4eb SWAP1
0x4ec SUB
0x4ed SWAP1
0x4ee DUP2
0x4ef SWAP1
0x4f0 SSTORE
0x4f1 ISZERO
0x4f2 ISZERO
0x4f3 PUSH2 0x16c
0x4f6 JUMPI
---
0x4da: JUMPDEST 
0x4dd: V519 = 0x5
0x4e0: V520 = S[0x5]
0x4e2: V521 = ADD V375 V520
0x4e4: S[0x5] = V521
0x4e6: V522 = 0x6
0x4e9: V523 = S[0x6]
0x4ec: V524 = SUB V523 V375
0x4f0: S[0x6] = V524
0x4f1: V525 = ISZERO V524
0x4f2: V526 = ISZERO V525
0x4f3: V527 = 0x16c
0x4f6: JUMPI 0x16c V526
---
Entry stack: [V12, V375, V413, 0x0, V478, 0xa9059cbb, V500]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x4f7
[0x4f7:0x503]
---
Predecessors: [0x4da]
Successors: [0x504]
---
0x4f7 PUSH1 0x7
0x4f9 DUP1
0x4fa SLOAD
0x4fb PUSH1 0xff
0x4fd NOT
0x4fe AND
0x4ff PUSH1 0x1
0x501 OR
0x502 SWAP1
0x503 SSTORE
---
0x4f7: V528 = 0x7
0x4fa: V529 = S[0x7]
0x4fb: V530 = 0xff
0x4fd: V531 = NOT 0xff
0x4fe: V532 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V529
0x4ff: V533 = 0x1
0x501: V534 = OR 0x1 V532
0x503: S[0x7] = V534
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x504
[0x504:0x508]
---
Predecessors: [0x4f7]
Successors: [0x692]
---
0x504 JUMPDEST
0x505 PUSH2 0x692
0x508 JUMP
---
0x504: JUMPDEST 
0x505: V535 = 0x692
0x508: JUMP 0x692
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x509
[0x509:0x51a]
---
Predecessors: [0x3ee]
Successors: [0x51b, 0x51c]
---
0x509 JUMPDEST
0x50a PUSH1 0x4
0x50c SLOAD
0x50d PUSH1 0x3
0x50f SLOAD
0x510 PUSH1 0x6
0x512 SLOAD
0x513 MUL
0x514 DUP2
0x515 ISZERO
0x516 ISZERO
0x517 PUSH2 0x51c
0x51a JUMPI
---
0x509: JUMPDEST 
0x50a: V536 = 0x4
0x50c: V537 = S[0x4]
0x50d: V538 = 0x3
0x50f: V539 = S[0x3]
0x510: V540 = 0x6
0x512: V541 = S[0x6]
0x513: V542 = MUL V541 V539
0x515: V543 = ISZERO V537
0x516: V544 = ISZERO V543
0x517: V545 = 0x51c
0x51a: JUMPI 0x51c V544
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: [V537, V542]
Exit stack: [V12, V375, V413, 0x0, V537, V542]

================================

Block 0x51b
[0x51b:0x51b]
---
Predecessors: [0x509]
Successors: []
---
0x51b INVALID
---
0x51b: INVALID 
---
Entry stack: [V12, V375, V413, 0x0, V537, V542]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0, V537, V542]

================================

Block 0x51c
[0x51c:0x555]
---
Predecessors: [0x509]
Successors: [0x556, 0x55a]
---
0x51c JUMPDEST
0x51d PUSH1 0x7
0x51f SLOAD
0x520 SWAP2
0x521 SWAP1
0x522 DIV
0x523 SWAP2
0x524 POP
0x525 PUSH3 0x10000
0x529 SWAP1
0x52a DIV
0x52b PUSH1 0x1
0x52d PUSH1 0xa0
0x52f PUSH1 0x2
0x531 EXP
0x532 SUB
0x533 AND
0x534 PUSH2 0x8fc
0x537 DUP3
0x538 ISZERO
0x539 MUL
0x53a DUP3
0x53b PUSH1 0x40
0x53d MLOAD
0x53e PUSH1 0x0
0x540 PUSH1 0x40
0x542 MLOAD
0x543 DUP1
0x544 DUP4
0x545 SUB
0x546 DUP2
0x547 DUP6
0x548 DUP9
0x549 DUP9
0x54a CALL
0x54b SWAP4
0x54c POP
0x54d POP
0x54e POP
0x54f POP
0x550 ISZERO
0x551 ISZERO
0x552 PUSH2 0x55a
0x555 JUMPI
---
0x51c: JUMPDEST 
0x51d: V546 = 0x7
0x51f: V547 = S[0x7]
0x522: V548 = DIV V542 V537
0x525: V549 = 0x10000
0x52a: V550 = DIV V547 0x10000
0x52b: V551 = 0x1
0x52d: V552 = 0xa0
0x52f: V553 = 0x2
0x531: V554 = EXP 0x2 0xa0
0x532: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x533: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x534: V557 = 0x8fc
0x538: V558 = ISZERO V548
0x539: V559 = MUL V558 0x8fc
0x53b: V560 = 0x40
0x53d: V561 = M[0x40]
0x53e: V562 = 0x0
0x540: V563 = 0x40
0x542: V564 = M[0x40]
0x545: V565 = SUB V561 V564
0x54a: V566 = CALL V559 V556 V548 V564 V565 V564 0x0
0x550: V567 = ISZERO V566
0x551: V568 = ISZERO V567
0x552: V569 = 0x55a
0x555: JUMPI 0x55a V568
---
Entry stack: [V12, V375, V413, 0x0, V537, V542]
Stack pops: 3
Stack additions: [V548]
Exit stack: [V12, V375, V413, V548]

================================

Block 0x556
[0x556:0x559]
---
Predecessors: [0x51c]
Successors: []
---
0x556 PUSH1 0x0
0x558 DUP1
0x559 REVERT
---
0x556: V570 = 0x0
0x559: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V548]

================================

Block 0x55a
[0x55a:0x5b2]
---
Predecessors: [0x51c]
Successors: [0x5b3, 0x5b7]
---
0x55a JUMPDEST
0x55b PUSH1 0x0
0x55d SLOAD
0x55e PUSH1 0x6
0x560 SLOAD
0x561 PUSH1 0x1
0x563 PUSH1 0xa0
0x565 PUSH1 0x2
0x567 EXP
0x568 SUB
0x569 SWAP1
0x56a SWAP2
0x56b AND
0x56c SWAP1
0x56d PUSH4 0xa9059cbb
0x572 SWAP1
0x573 CALLER
0x574 SWAP1
0x575 PUSH1 0x40
0x577 MLOAD
0x578 PUSH1 0xe0
0x57a PUSH1 0x2
0x57c EXP
0x57d PUSH4 0xffffffff
0x582 DUP6
0x583 AND
0x584 MUL
0x585 DUP2
0x586 MSTORE
0x587 PUSH1 0x1
0x589 PUSH1 0xa0
0x58b PUSH1 0x2
0x58d EXP
0x58e SUB
0x58f SWAP1
0x590 SWAP3
0x591 AND
0x592 PUSH1 0x4
0x594 DUP4
0x595 ADD
0x596 MSTORE
0x597 PUSH1 0x24
0x599 DUP3
0x59a ADD
0x59b MSTORE
0x59c PUSH1 0x44
0x59e ADD
0x59f PUSH1 0x0
0x5a1 PUSH1 0x40
0x5a3 MLOAD
0x5a4 DUP1
0x5a5 DUP4
0x5a6 SUB
0x5a7 DUP2
0x5a8 PUSH1 0x0
0x5aa DUP8
0x5ab DUP1
0x5ac EXTCODESIZE
0x5ad ISZERO
0x5ae ISZERO
0x5af PUSH2 0x5b7
0x5b2 JUMPI
---
0x55a: JUMPDEST 
0x55b: V571 = 0x0
0x55d: V572 = S[0x0]
0x55e: V573 = 0x6
0x560: V574 = S[0x6]
0x561: V575 = 0x1
0x563: V576 = 0xa0
0x565: V577 = 0x2
0x567: V578 = EXP 0x2 0xa0
0x568: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56b: V580 = AND V572 0xffffffffffffffffffffffffffffffffffffffff
0x56d: V581 = 0xa9059cbb
0x573: V582 = CALLER
0x575: V583 = 0x40
0x577: V584 = M[0x40]
0x578: V585 = 0xe0
0x57a: V586 = 0x2
0x57c: V587 = EXP 0x2 0xe0
0x57d: V588 = 0xffffffff
0x583: V589 = AND 0xa9059cbb 0xffffffff
0x584: V590 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x586: M[V584] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x587: V591 = 0x1
0x589: V592 = 0xa0
0x58b: V593 = 0x2
0x58d: V594 = EXP 0x2 0xa0
0x58e: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x591: V596 = AND V582 0xffffffffffffffffffffffffffffffffffffffff
0x592: V597 = 0x4
0x595: V598 = ADD V584 0x4
0x596: M[V598] = V596
0x597: V599 = 0x24
0x59a: V600 = ADD V584 0x24
0x59b: M[V600] = V574
0x59c: V601 = 0x44
0x59e: V602 = ADD 0x44 V584
0x59f: V603 = 0x0
0x5a1: V604 = 0x40
0x5a3: V605 = M[0x40]
0x5a6: V606 = SUB V602 V605
0x5a8: V607 = 0x0
0x5ac: V608 = EXTCODESIZE V580
0x5ad: V609 = ISZERO V608
0x5ae: V610 = ISZERO V609
0x5af: V611 = 0x5b7
0x5b2: JUMPI 0x5b7 V610
---
Entry stack: [V12, V375, V413, V548]
Stack pops: 0
Stack additions: [V580, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V580]
Exit stack: [V12, V375, V413, V548, V580, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V580]

================================

Block 0x5b3
[0x5b3:0x5b6]
---
Predecessors: [0x55a]
Successors: []
---
0x5b3 PUSH1 0x0
0x5b5 DUP1
0x5b6 REVERT
---
0x5b3: V612 = 0x0
0x5b6: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V548, V580, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V580]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V548, V580, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V580]

================================

Block 0x5b7
[0x5b7:0x5c3]
---
Predecessors: [0x55a]
Successors: [0x5c4, 0x5c8]
---
0x5b7 JUMPDEST
0x5b8 PUSH2 0x2c6
0x5bb GAS
0x5bc SUB
0x5bd CALL
0x5be ISZERO
0x5bf ISZERO
0x5c0 PUSH2 0x5c8
0x5c3 JUMPI
---
0x5b7: JUMPDEST 
0x5b8: V613 = 0x2c6
0x5bb: V614 = GAS
0x5bc: V615 = SUB V614 0x2c6
0x5bd: V616 = CALL V615 V580 0x0 V605 V606 V605 0x0
0x5be: V617 = ISZERO V616
0x5bf: V618 = ISZERO V617
0x5c0: V619 = 0x5c8
0x5c3: JUMPI 0x5c8 V618
---
Entry stack: [V12, V375, V413, V548, V580, 0xa9059cbb, V602, 0x0, V605, V606, V605, 0x0, V580]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V375, V413, V548, V580, 0xa9059cbb, V602]

================================

Block 0x5c4
[0x5c4:0x5c7]
---
Predecessors: [0x5b7]
Successors: []
---
0x5c4 PUSH1 0x0
0x5c6 DUP1
0x5c7 REVERT
---
0x5c4: V620 = 0x0
0x5c7: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V548, V580, 0xa9059cbb, V602]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V548, V580, 0xa9059cbb, V602]

================================

Block 0x5c8
[0x5c8:0x5fb]
---
Predecessors: [0x5b7]
Successors: [0x5fc, 0x600]
---
0x5c8 JUMPDEST
0x5c9 POP
0x5ca POP
0x5cb POP
0x5cc CALLER
0x5cd PUSH1 0x1
0x5cf PUSH1 0xa0
0x5d1 PUSH1 0x2
0x5d3 EXP
0x5d4 SUB
0x5d5 AND
0x5d6 PUSH2 0x8fc
0x5d9 DUP3
0x5da CALLVALUE
0x5db SUB
0x5dc SWAP1
0x5dd DUP2
0x5de ISZERO
0x5df MUL
0x5e0 SWAP1
0x5e1 PUSH1 0x40
0x5e3 MLOAD
0x5e4 PUSH1 0x0
0x5e6 PUSH1 0x40
0x5e8 MLOAD
0x5e9 DUP1
0x5ea DUP4
0x5eb SUB
0x5ec DUP2
0x5ed DUP6
0x5ee DUP9
0x5ef DUP9
0x5f0 CALL
0x5f1 SWAP4
0x5f2 POP
0x5f3 POP
0x5f4 POP
0x5f5 POP
0x5f6 ISZERO
0x5f7 ISZERO
0x5f8 PUSH2 0x600
0x5fb JUMPI
---
0x5c8: JUMPDEST 
0x5cc: V621 = CALLER
0x5cd: V622 = 0x1
0x5cf: V623 = 0xa0
0x5d1: V624 = 0x2
0x5d3: V625 = EXP 0x2 0xa0
0x5d4: V626 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d5: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V621
0x5d6: V628 = 0x8fc
0x5da: V629 = CALLVALUE
0x5db: V630 = SUB V629 V548
0x5de: V631 = ISZERO V630
0x5df: V632 = MUL V631 0x8fc
0x5e1: V633 = 0x40
0x5e3: V634 = M[0x40]
0x5e4: V635 = 0x0
0x5e6: V636 = 0x40
0x5e8: V637 = M[0x40]
0x5eb: V638 = SUB V634 V637
0x5f0: V639 = CALL V632 V627 V630 V637 V638 V637 0x0
0x5f6: V640 = ISZERO V639
0x5f7: V641 = ISZERO V640
0x5f8: V642 = 0x600
0x5fb: JUMPI 0x600 V641
---
Entry stack: [V12, V375, V413, V548, V580, 0xa9059cbb, V602]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V375, V413, V548]

================================

Block 0x5fc
[0x5fc:0x5ff]
---
Predecessors: [0x5c8]
Successors: []
---
0x5fc PUSH1 0x0
0x5fe DUP1
0x5ff REVERT
---
0x5fc: V643 = 0x0
0x5ff: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V548]

================================

Block 0x600
[0x600:0x662]
---
Predecessors: [0x5c8]
Successors: [0x663, 0x667]
---
0x600 JUMPDEST
0x601 PUSH1 0x6
0x603 SLOAD
0x604 PUSH1 0x5
0x606 DUP1
0x607 SLOAD
0x608 SWAP1
0x609 SWAP2
0x60a ADD
0x60b SWAP1
0x60c SSTORE
0x60d PUSH1 0x0
0x60f DUP1
0x610 SLOAD
0x611 PUSH1 0x1
0x613 PUSH1 0xa0
0x615 PUSH1 0x2
0x617 EXP
0x618 SUB
0x619 AND
0x61a SWAP1
0x61b PUSH4 0x70a08231
0x620 SWAP1
0x621 ADDRESS
0x622 SWAP1
0x623 PUSH1 0x40
0x625 MLOAD
0x626 PUSH1 0x20
0x628 ADD
0x629 MSTORE
0x62a PUSH1 0x40
0x62c MLOAD
0x62d PUSH1 0xe0
0x62f PUSH1 0x2
0x631 EXP
0x632 PUSH4 0xffffffff
0x637 DUP5
0x638 AND
0x639 MUL
0x63a DUP2
0x63b MSTORE
0x63c PUSH1 0x1
0x63e PUSH1 0xa0
0x640 PUSH1 0x2
0x642 EXP
0x643 SUB
0x644 SWAP1
0x645 SWAP2
0x646 AND
0x647 PUSH1 0x4
0x649 DUP3
0x64a ADD
0x64b MSTORE
0x64c PUSH1 0x24
0x64e ADD
0x64f PUSH1 0x20
0x651 PUSH1 0x40
0x653 MLOAD
0x654 DUP1
0x655 DUP4
0x656 SUB
0x657 DUP2
0x658 PUSH1 0x0
0x65a DUP8
0x65b DUP1
0x65c EXTCODESIZE
0x65d ISZERO
0x65e ISZERO
0x65f PUSH2 0x667
0x662 JUMPI
---
0x600: JUMPDEST 
0x601: V644 = 0x6
0x603: V645 = S[0x6]
0x604: V646 = 0x5
0x607: V647 = S[0x5]
0x60a: V648 = ADD V645 V647
0x60c: S[0x5] = V648
0x60d: V649 = 0x0
0x610: V650 = S[0x0]
0x611: V651 = 0x1
0x613: V652 = 0xa0
0x615: V653 = 0x2
0x617: V654 = EXP 0x2 0xa0
0x618: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x619: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x61b: V657 = 0x70a08231
0x621: V658 = ADDRESS
0x623: V659 = 0x40
0x625: V660 = M[0x40]
0x626: V661 = 0x20
0x628: V662 = ADD 0x20 V660
0x629: M[V662] = 0x0
0x62a: V663 = 0x40
0x62c: V664 = M[0x40]
0x62d: V665 = 0xe0
0x62f: V666 = 0x2
0x631: V667 = EXP 0x2 0xe0
0x632: V668 = 0xffffffff
0x638: V669 = AND 0x70a08231 0xffffffff
0x639: V670 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x63b: M[V664] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x63c: V671 = 0x1
0x63e: V672 = 0xa0
0x640: V673 = 0x2
0x642: V674 = EXP 0x2 0xa0
0x643: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x646: V676 = AND V658 0xffffffffffffffffffffffffffffffffffffffff
0x647: V677 = 0x4
0x64a: V678 = ADD V664 0x4
0x64b: M[V678] = V676
0x64c: V679 = 0x24
0x64e: V680 = ADD 0x24 V664
0x64f: V681 = 0x20
0x651: V682 = 0x40
0x653: V683 = M[0x40]
0x656: V684 = SUB V680 V683
0x658: V685 = 0x0
0x65c: V686 = EXTCODESIZE V656
0x65d: V687 = ISZERO V686
0x65e: V688 = ISZERO V687
0x65f: V689 = 0x667
0x662: JUMPI 0x667 V688
---
Entry stack: [V12, V375, V413, V548]
Stack pops: 0
Stack additions: [V656, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V656]
Exit stack: [V12, V375, V413, V548, V656, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V656]

================================

Block 0x663
[0x663:0x666]
---
Predecessors: [0x600]
Successors: []
---
0x663 PUSH1 0x0
0x665 DUP1
0x666 REVERT
---
0x663: V690 = 0x0
0x666: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V548, V656, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V656]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V548, V656, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V656]

================================

Block 0x667
[0x667:0x673]
---
Predecessors: [0x600]
Successors: [0x674, 0x678]
---
0x667 JUMPDEST
0x668 PUSH2 0x2c6
0x66b GAS
0x66c SUB
0x66d CALL
0x66e ISZERO
0x66f ISZERO
0x670 PUSH2 0x678
0x673 JUMPI
---
0x667: JUMPDEST 
0x668: V691 = 0x2c6
0x66b: V692 = GAS
0x66c: V693 = SUB V692 0x2c6
0x66d: V694 = CALL V693 V656 0x0 V683 V684 V683 0x20
0x66e: V695 = ISZERO V694
0x66f: V696 = ISZERO V695
0x670: V697 = 0x678
0x673: JUMPI 0x678 V696
---
Entry stack: [V12, V375, V413, V548, V656, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V656]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V375, V413, V548, V656, 0x70a08231, V680]

================================

Block 0x674
[0x674:0x677]
---
Predecessors: [0x667]
Successors: []
---
0x674 PUSH1 0x0
0x676 DUP1
0x677 REVERT
---
0x674: V698 = 0x0
0x677: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V548, V656, 0x70a08231, V680]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V548, V656, 0x70a08231, V680]

================================

Block 0x678
[0x678:0x691]
---
Predecessors: [0x667]
Successors: [0x692]
---
0x678 JUMPDEST
0x679 POP
0x67a POP
0x67b POP
0x67c PUSH1 0x40
0x67e MLOAD
0x67f DUP1
0x680 MLOAD
0x681 PUSH1 0x6
0x683 SSTORE
0x684 POP
0x685 PUSH1 0x7
0x687 DUP1
0x688 SLOAD
0x689 PUSH1 0xff
0x68b NOT
0x68c AND
0x68d PUSH1 0x1
0x68f OR
0x690 SWAP1
0x691 SSTORE
---
0x678: JUMPDEST 
0x67c: V699 = 0x40
0x67e: V700 = M[0x40]
0x680: V701 = M[V700]
0x681: V702 = 0x6
0x683: S[0x6] = V701
0x685: V703 = 0x7
0x688: V704 = S[0x7]
0x689: V705 = 0xff
0x68b: V706 = NOT 0xff
0x68c: V707 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V704
0x68d: V708 = 0x1
0x68f: V709 = OR 0x1 V707
0x691: S[0x7] = V709
---
Entry stack: [V12, V375, V413, V548, V656, 0x70a08231, V680]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V375, V413, V548]

================================

Block 0x692
[0x692:0x692]
---
Predecessors: [0x16c, 0x33a, 0x37c, 0x504, 0x678]
Successors: [0x693]
---
0x692 JUMPDEST
---
0x692: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x693
[0x693:0x693]
---
Predecessors: [0x692]
Successors: [0x694]
---
0x693 JUMPDEST
---
0x693: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x694
[0x694:0x694]
---
Predecessors: [0x693]
Successors: [0x695]
---
0x694 JUMPDEST
---
0x694: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x695
[0x695:0x705]
---
Predecessors: [0x694]
Successors: [0x706]
---
0x695 JUMPDEST
0x696 PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6b7 PUSH1 0x6
0x6b9 SLOAD
0x6ba PUSH1 0x40
0x6bc MLOAD
0x6bd SWAP1
0x6be DUP2
0x6bf MSTORE
0x6c0 PUSH1 0x20
0x6c2 ADD
0x6c3 PUSH1 0x40
0x6c5 MLOAD
0x6c6 DUP1
0x6c7 SWAP2
0x6c8 SUB
0x6c9 SWAP1
0x6ca LOG1
0x6cb PUSH1 0x7
0x6cd SLOAD
0x6ce PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6ef SWAP1
0x6f0 PUSH1 0xff
0x6f2 AND
0x6f3 PUSH1 0x40
0x6f5 MLOAD
0x6f6 SWAP1
0x6f7 ISZERO
0x6f8 ISZERO
0x6f9 DUP2
0x6fa MSTORE
0x6fb PUSH1 0x20
0x6fd ADD
0x6fe PUSH1 0x40
0x700 MLOAD
0x701 DUP1
0x702 SWAP2
0x703 SUB
0x704 SWAP1
0x705 LOG1
---
0x695: JUMPDEST 
0x696: V710 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6b7: V711 = 0x6
0x6b9: V712 = S[0x6]
0x6ba: V713 = 0x40
0x6bc: V714 = M[0x40]
0x6bf: M[V714] = V712
0x6c0: V715 = 0x20
0x6c2: V716 = ADD 0x20 V714
0x6c3: V717 = 0x40
0x6c5: V718 = M[0x40]
0x6c8: V719 = SUB V716 V718
0x6ca: LOG V718 V719 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6cb: V720 = 0x7
0x6cd: V721 = S[0x7]
0x6ce: V722 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6f0: V723 = 0xff
0x6f2: V724 = AND 0xff V721
0x6f3: V725 = 0x40
0x6f5: V726 = M[0x40]
0x6f7: V727 = ISZERO V724
0x6f8: V728 = ISZERO V727
0x6fa: M[V726] = V728
0x6fb: V729 = 0x20
0x6fd: V730 = ADD 0x20 V726
0x6fe: V731 = 0x40
0x700: V732 = M[0x40]
0x703: V733 = SUB V730 V732
0x705: LOG V732 V733 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x706
[0x706:0x70a]
---
Predecessors: [0x695]
Successors: []
---
0x706 JUMPDEST
0x707 POP
0x708 POP
0x709 POP
0x70a STOP
---
0x706: JUMPDEST 
0x70a: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x70b
[0x70b:0x711]
---
Predecessors: [0xb]
Successors: [0x712, 0x716]
---
0x70b JUMPDEST
0x70c CALLVALUE
0x70d ISZERO
0x70e PUSH2 0x716
0x711 JUMPI
---
0x70b: JUMPDEST 
0x70c: V734 = CALLVALUE
0x70d: V735 = ISZERO V734
0x70e: V736 = 0x716
0x711: JUMPI 0x716 V735
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x712
[0x712:0x715]
---
Predecessors: [0x70b]
Successors: []
---
0x712 PUSH1 0x0
0x714 DUP1
0x715 REVERT
---
0x712: V737 = 0x0
0x715: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x716
[0x716:0x71d]
---
Predecessors: [0x70b]
Successors: [0x870]
---
0x716 JUMPDEST
0x717 PUSH2 0x71e
0x71a PUSH2 0x870
0x71d JUMP
---
0x716: JUMPDEST 
0x717: V738 = 0x71e
0x71a: V739 = 0x870
0x71d: JUMP 0x870
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x71e]
Exit stack: [V12, 0x71e]

================================

Block 0x71e
[0x71e:0x739]
---
Predecessors: [0x870, 0x899]
Successors: []
---
0x71e JUMPDEST
0x71f PUSH1 0x40
0x721 MLOAD
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a SWAP1
0x72b SWAP2
0x72c AND
0x72d DUP2
0x72e MSTORE
0x72f PUSH1 0x20
0x731 ADD
0x732 PUSH1 0x40
0x734 MLOAD
0x735 DUP1
0x736 SWAP2
0x737 SUB
0x738 SWAP1
0x739 RETURN
---
0x71e: JUMPDEST 
0x71f: V740 = 0x40
0x721: V741 = M[0x40]
0x722: V742 = 0x1
0x724: V743 = 0xa0
0x726: V744 = 0x2
0x728: V745 = EXP 0x2 0xa0
0x729: V746 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72c: V747 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x72e: M[V741] = V747
0x72f: V748 = 0x20
0x731: V749 = ADD 0x20 V741
0x732: V750 = 0x40
0x734: V751 = M[0x40]
0x737: V752 = SUB V749 V751
0x739: RETURN V751 V752
---
Entry stack: [V12, 0x71e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x71e]

================================

Block 0x73a
[0x73a:0x740]
---
Predecessors: [0x25]
Successors: [0x741, 0x745]
---
0x73a JUMPDEST
0x73b CALLVALUE
0x73c ISZERO
0x73d PUSH2 0x745
0x740 JUMPI
---
0x73a: JUMPDEST 
0x73b: V753 = CALLVALUE
0x73c: V754 = ISZERO V753
0x73d: V755 = 0x745
0x740: JUMPI 0x745 V754
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x741
[0x741:0x744]
---
Predecessors: [0x73a]
Successors: []
---
0x741 PUSH1 0x0
0x743 DUP1
0x744 REVERT
---
0x741: V756 = 0x0
0x744: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x745
[0x745:0x74c]
---
Predecessors: [0x73a]
Successors: [0x87f]
---
0x745 JUMPDEST
0x746 PUSH2 0x74d
0x749 PUSH2 0x87f
0x74c JUMP
---
0x745: JUMPDEST 
0x746: V757 = 0x74d
0x749: V758 = 0x87f
0x74c: JUMP 0x87f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x74d]
Exit stack: [V12, 0x74d]

================================

Block 0x74d
[0x74d:0x760]
---
Predecessors: [0x87f, 0x8c0]
Successors: []
---
0x74d JUMPDEST
0x74e PUSH1 0x40
0x750 MLOAD
0x751 SWAP1
0x752 ISZERO
0x753 ISZERO
0x754 DUP2
0x755 MSTORE
0x756 PUSH1 0x20
0x758 ADD
0x759 PUSH1 0x40
0x75b MLOAD
0x75c DUP1
0x75d SWAP2
0x75e SUB
0x75f SWAP1
0x760 RETURN
---
0x74d: JUMPDEST 
0x74e: V759 = 0x40
0x750: V760 = M[0x40]
0x752: V761 = ISZERO S0
0x753: V762 = ISZERO V761
0x755: M[V760] = V762
0x756: V763 = 0x20
0x758: V764 = ADD 0x20 V760
0x759: V765 = 0x40
0x75b: V766 = M[0x40]
0x75e: V767 = SUB V764 V766
0x760: RETURN V766 V767
---
Entry stack: [V12, 0x74d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x74d]

================================

Block 0x761
[0x761:0x767]
---
Predecessors: [0x30]
Successors: [0x768, 0x76c]
---
0x761 JUMPDEST
0x762 CALLVALUE
0x763 ISZERO
0x764 PUSH2 0x76c
0x767 JUMPI
---
0x761: JUMPDEST 
0x762: V768 = CALLVALUE
0x763: V769 = ISZERO V768
0x764: V770 = 0x76c
0x767: JUMPI 0x76c V769
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x768
[0x768:0x76b]
---
Predecessors: [0x761]
Successors: []
---
0x768 PUSH1 0x0
0x76a DUP1
0x76b REVERT
---
0x768: V771 = 0x0
0x76b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76c
[0x76c:0x773]
---
Predecessors: [0x761]
Successors: [0x88d]
---
0x76c JUMPDEST
0x76d PUSH2 0x774
0x770 PUSH2 0x88d
0x773 JUMP
---
0x76c: JUMPDEST 
0x76d: V772 = 0x774
0x770: V773 = 0x88d
0x773: JUMP 0x88d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x774]
Exit stack: [V12, 0x774]

================================

Block 0x774
[0x774:0x785]
---
Predecessors: [0x88d, 0x893, 0x8ae, 0x8b4, 0x8ba]
Successors: []
---
0x774 JUMPDEST
0x775 PUSH1 0x40
0x777 MLOAD
0x778 SWAP1
0x779 DUP2
0x77a MSTORE
0x77b PUSH1 0x20
0x77d ADD
0x77e PUSH1 0x40
0x780 MLOAD
0x781 DUP1
0x782 SWAP2
0x783 SUB
0x784 SWAP1
0x785 RETURN
---
0x774: JUMPDEST 
0x775: V774 = 0x40
0x777: V775 = M[0x40]
0x77a: M[V775] = S0
0x77b: V776 = 0x20
0x77d: V777 = ADD 0x20 V775
0x77e: V778 = 0x40
0x780: V779 = M[0x40]
0x783: V780 = SUB V777 V779
0x785: RETURN V779 V780
---
Entry stack: [V12, 0x774, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x774]

================================

Block 0x786
[0x786:0x78c]
---
Predecessors: [0x3b]
Successors: [0x78d, 0x791]
---
0x786 JUMPDEST
0x787 CALLVALUE
0x788 ISZERO
0x789 PUSH2 0x791
0x78c JUMPI
---
0x786: JUMPDEST 
0x787: V781 = CALLVALUE
0x788: V782 = ISZERO V781
0x789: V783 = 0x791
0x78c: JUMPI 0x791 V782
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x78d
[0x78d:0x790]
---
Predecessors: [0x786]
Successors: []
---
0x78d PUSH1 0x0
0x78f DUP1
0x790 REVERT
---
0x78d: V784 = 0x0
0x790: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x791
[0x791:0x798]
---
Predecessors: [0x786]
Successors: [0x893]
---
0x791 JUMPDEST
0x792 PUSH2 0x774
0x795 PUSH2 0x893
0x798 JUMP
---
0x791: JUMPDEST 
0x792: V785 = 0x774
0x795: V786 = 0x893
0x798: JUMP 0x893
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x774]
Exit stack: [V12, 0x774]

================================

Block 0x799
[0x799:0x7aa]
---
Predecessors: []
Successors: []
---
0x799 JUMPDEST
0x79a PUSH1 0x40
0x79c MLOAD
0x79d SWAP1
0x79e DUP2
0x79f MSTORE
0x7a0 PUSH1 0x20
0x7a2 ADD
0x7a3 PUSH1 0x40
0x7a5 MLOAD
0x7a6 DUP1
0x7a7 SWAP2
0x7a8 SUB
0x7a9 SWAP1
0x7aa RETURN
---
0x799: JUMPDEST 
0x79a: V787 = 0x40
0x79c: V788 = M[0x40]
0x79f: M[V788] = S0
0x7a0: V789 = 0x20
0x7a2: V790 = ADD 0x20 V788
0x7a3: V791 = 0x40
0x7a5: V792 = M[0x40]
0x7a8: V793 = SUB V790 V792
0x7aa: RETURN V792 V793
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ab
[0x7ab:0x7b1]
---
Predecessors: [0x46]
Successors: [0x7b2, 0x7b6]
---
0x7ab JUMPDEST
0x7ac CALLVALUE
0x7ad ISZERO
0x7ae PUSH2 0x7b6
0x7b1 JUMPI
---
0x7ab: JUMPDEST 
0x7ac: V794 = CALLVALUE
0x7ad: V795 = ISZERO V794
0x7ae: V796 = 0x7b6
0x7b1: JUMPI 0x7b6 V795
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b2
[0x7b2:0x7b5]
---
Predecessors: [0x7ab]
Successors: []
---
0x7b2 PUSH1 0x0
0x7b4 DUP1
0x7b5 REVERT
---
0x7b2: V797 = 0x0
0x7b5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b6
[0x7b6:0x7bd]
---
Predecessors: [0x7ab]
Successors: [0x899]
---
0x7b6 JUMPDEST
0x7b7 PUSH2 0x71e
0x7ba PUSH2 0x899
0x7bd JUMP
---
0x7b6: JUMPDEST 
0x7b7: V798 = 0x71e
0x7ba: V799 = 0x899
0x7bd: JUMP 0x899
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x71e]
Exit stack: [V12, 0x71e]

================================

Block 0x7be
[0x7be:0x7d9]
---
Predecessors: []
Successors: []
---
0x7be JUMPDEST
0x7bf PUSH1 0x40
0x7c1 MLOAD
0x7c2 PUSH1 0x1
0x7c4 PUSH1 0xa0
0x7c6 PUSH1 0x2
0x7c8 EXP
0x7c9 SUB
0x7ca SWAP1
0x7cb SWAP2
0x7cc AND
0x7cd DUP2
0x7ce MSTORE
0x7cf PUSH1 0x20
0x7d1 ADD
0x7d2 PUSH1 0x40
0x7d4 MLOAD
0x7d5 DUP1
0x7d6 SWAP2
0x7d7 SUB
0x7d8 SWAP1
0x7d9 RETURN
---
0x7be: JUMPDEST 
0x7bf: V800 = 0x40
0x7c1: V801 = M[0x40]
0x7c2: V802 = 0x1
0x7c4: V803 = 0xa0
0x7c6: V804 = 0x2
0x7c8: V805 = EXP 0x2 0xa0
0x7c9: V806 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cc: V807 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7ce: M[V801] = V807
0x7cf: V808 = 0x20
0x7d1: V809 = ADD 0x20 V801
0x7d2: V810 = 0x40
0x7d4: V811 = M[0x40]
0x7d7: V812 = SUB V809 V811
0x7d9: RETURN V811 V812
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7da
[0x7da:0x7e0]
---
Predecessors: [0x51]
Successors: [0x7e1, 0x7e5]
---
0x7da JUMPDEST
0x7db CALLVALUE
0x7dc ISZERO
0x7dd PUSH2 0x7e5
0x7e0 JUMPI
---
0x7da: JUMPDEST 
0x7db: V813 = CALLVALUE
0x7dc: V814 = ISZERO V813
0x7dd: V815 = 0x7e5
0x7e0: JUMPI 0x7e5 V814
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e1
[0x7e1:0x7e4]
---
Predecessors: [0x7da]
Successors: []
---
0x7e1 PUSH1 0x0
0x7e3 DUP1
0x7e4 REVERT
---
0x7e1: V816 = 0x0
0x7e4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e5
[0x7e5:0x7ec]
---
Predecessors: [0x7da]
Successors: [0x8ae]
---
0x7e5 JUMPDEST
0x7e6 PUSH2 0x774
0x7e9 PUSH2 0x8ae
0x7ec JUMP
---
0x7e5: JUMPDEST 
0x7e6: V817 = 0x774
0x7e9: V818 = 0x8ae
0x7ec: JUMP 0x8ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x774]
Exit stack: [V12, 0x774]

================================

Block 0x7ed
[0x7ed:0x7fe]
---
Predecessors: []
Successors: []
---
0x7ed JUMPDEST
0x7ee PUSH1 0x40
0x7f0 MLOAD
0x7f1 SWAP1
0x7f2 DUP2
0x7f3 MSTORE
0x7f4 PUSH1 0x20
0x7f6 ADD
0x7f7 PUSH1 0x40
0x7f9 MLOAD
0x7fa DUP1
0x7fb SWAP2
0x7fc SUB
0x7fd SWAP1
0x7fe RETURN
---
0x7ed: JUMPDEST 
0x7ee: V819 = 0x40
0x7f0: V820 = M[0x40]
0x7f3: M[V820] = S0
0x7f4: V821 = 0x20
0x7f6: V822 = ADD 0x20 V820
0x7f7: V823 = 0x40
0x7f9: V824 = M[0x40]
0x7fc: V825 = SUB V822 V824
0x7fe: RETURN V824 V825
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ff
[0x7ff:0x805]
---
Predecessors: [0x5c]
Successors: [0x806, 0x80a]
---
0x7ff JUMPDEST
0x800 CALLVALUE
0x801 ISZERO
0x802 PUSH2 0x80a
0x805 JUMPI
---
0x7ff: JUMPDEST 
0x800: V826 = CALLVALUE
0x801: V827 = ISZERO V826
0x802: V828 = 0x80a
0x805: JUMPI 0x80a V827
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x806
[0x806:0x809]
---
Predecessors: [0x7ff]
Successors: []
---
0x806 PUSH1 0x0
0x808 DUP1
0x809 REVERT
---
0x806: V829 = 0x0
0x809: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x80a
[0x80a:0x811]
---
Predecessors: [0x7ff]
Successors: [0x8b4]
---
0x80a JUMPDEST
0x80b PUSH2 0x774
0x80e PUSH2 0x8b4
0x811 JUMP
---
0x80a: JUMPDEST 
0x80b: V830 = 0x774
0x80e: V831 = 0x8b4
0x811: JUMP 0x8b4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x774]
Exit stack: [V12, 0x774]

================================

Block 0x812
[0x812:0x823]
---
Predecessors: []
Successors: []
---
0x812 JUMPDEST
0x813 PUSH1 0x40
0x815 MLOAD
0x816 SWAP1
0x817 DUP2
0x818 MSTORE
0x819 PUSH1 0x20
0x81b ADD
0x81c PUSH1 0x40
0x81e MLOAD
0x81f DUP1
0x820 SWAP2
0x821 SUB
0x822 SWAP1
0x823 RETURN
---
0x812: JUMPDEST 
0x813: V832 = 0x40
0x815: V833 = M[0x40]
0x818: M[V833] = S0
0x819: V834 = 0x20
0x81b: V835 = ADD 0x20 V833
0x81c: V836 = 0x40
0x81e: V837 = M[0x40]
0x821: V838 = SUB V835 V837
0x823: RETURN V837 V838
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x824
[0x824:0x82a]
---
Predecessors: [0x67]
Successors: [0x82b, 0x82f]
---
0x824 JUMPDEST
0x825 CALLVALUE
0x826 ISZERO
0x827 PUSH2 0x82f
0x82a JUMPI
---
0x824: JUMPDEST 
0x825: V839 = CALLVALUE
0x826: V840 = ISZERO V839
0x827: V841 = 0x82f
0x82a: JUMPI 0x82f V840
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x82b
[0x82b:0x82e]
---
Predecessors: [0x824]
Successors: []
---
0x82b PUSH1 0x0
0x82d DUP1
0x82e REVERT
---
0x82b: V842 = 0x0
0x82e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x82f
[0x82f:0x836]
---
Predecessors: [0x824]
Successors: [0x8ba]
---
0x82f JUMPDEST
0x830 PUSH2 0x774
0x833 PUSH2 0x8ba
0x836 JUMP
---
0x82f: JUMPDEST 
0x830: V843 = 0x774
0x833: V844 = 0x8ba
0x836: JUMP 0x8ba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x774]
Exit stack: [V12, 0x774]

================================

Block 0x837
[0x837:0x848]
---
Predecessors: []
Successors: []
---
0x837 JUMPDEST
0x838 PUSH1 0x40
0x83a MLOAD
0x83b SWAP1
0x83c DUP2
0x83d MSTORE
0x83e PUSH1 0x20
0x840 ADD
0x841 PUSH1 0x40
0x843 MLOAD
0x844 DUP1
0x845 SWAP2
0x846 SUB
0x847 SWAP1
0x848 RETURN
---
0x837: JUMPDEST 
0x838: V845 = 0x40
0x83a: V846 = M[0x40]
0x83d: M[V846] = S0
0x83e: V847 = 0x20
0x840: V848 = ADD 0x20 V846
0x841: V849 = 0x40
0x843: V850 = M[0x40]
0x846: V851 = SUB V848 V850
0x848: RETURN V850 V851
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x849
[0x849:0x84f]
---
Predecessors: [0x72]
Successors: [0x850, 0x854]
---
0x849 JUMPDEST
0x84a CALLVALUE
0x84b ISZERO
0x84c PUSH2 0x854
0x84f JUMPI
---
0x849: JUMPDEST 
0x84a: V852 = CALLVALUE
0x84b: V853 = ISZERO V852
0x84c: V854 = 0x854
0x84f: JUMPI 0x854 V853
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x850
[0x850:0x853]
---
Predecessors: [0x849]
Successors: []
---
0x850 PUSH1 0x0
0x852 DUP1
0x853 REVERT
---
0x850: V855 = 0x0
0x853: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x854
[0x854:0x85b]
---
Predecessors: [0x849]
Successors: [0x8c0]
---
0x854 JUMPDEST
0x855 PUSH2 0x74d
0x858 PUSH2 0x8c0
0x85b JUMP
---
0x854: JUMPDEST 
0x855: V856 = 0x74d
0x858: V857 = 0x8c0
0x85b: JUMP 0x8c0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x74d]
Exit stack: [V12, 0x74d]

================================

Block 0x85c
[0x85c:0x86f]
---
Predecessors: []
Successors: []
---
0x85c JUMPDEST
0x85d PUSH1 0x40
0x85f MLOAD
0x860 SWAP1
0x861 ISZERO
0x862 ISZERO
0x863 DUP2
0x864 MSTORE
0x865 PUSH1 0x20
0x867 ADD
0x868 PUSH1 0x40
0x86a MLOAD
0x86b DUP1
0x86c SWAP2
0x86d SUB
0x86e SWAP1
0x86f RETURN
---
0x85c: JUMPDEST 
0x85d: V858 = 0x40
0x85f: V859 = M[0x40]
0x861: V860 = ISZERO S0
0x862: V861 = ISZERO V860
0x864: M[V859] = V861
0x865: V862 = 0x20
0x867: V863 = ADD 0x20 V859
0x868: V864 = 0x40
0x86a: V865 = M[0x40]
0x86d: V866 = SUB V863 V865
0x86f: RETURN V865 V866
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x870
[0x870:0x87e]
---
Predecessors: [0x716]
Successors: [0x71e]
---
0x870 JUMPDEST
0x871 PUSH1 0x0
0x873 SLOAD
0x874 PUSH1 0x1
0x876 PUSH1 0xa0
0x878 PUSH1 0x2
0x87a EXP
0x87b SUB
0x87c AND
0x87d DUP2
0x87e JUMP
---
0x870: JUMPDEST 
0x871: V867 = 0x0
0x873: V868 = S[0x0]
0x874: V869 = 0x1
0x876: V870 = 0xa0
0x878: V871 = 0x2
0x87a: V872 = EXP 0x2 0xa0
0x87b: V873 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87c: V874 = AND 0xffffffffffffffffffffffffffffffffffffffff V868
0x87e: JUMP 0x71e
---
Entry stack: [V12, 0x71e]
Stack pops: 1
Stack additions: [S0, V874]
Exit stack: [V12, 0x71e, V874]

================================

Block 0x87f
[0x87f:0x88c]
---
Predecessors: [0x745]
Successors: [0x74d]
---
0x87f JUMPDEST
0x880 PUSH1 0x7
0x882 SLOAD
0x883 PUSH2 0x100
0x886 SWAP1
0x887 DIV
0x888 PUSH1 0xff
0x88a AND
0x88b DUP2
0x88c JUMP
---
0x87f: JUMPDEST 
0x880: V875 = 0x7
0x882: V876 = S[0x7]
0x883: V877 = 0x100
0x887: V878 = DIV V876 0x100
0x888: V879 = 0xff
0x88a: V880 = AND 0xff V878
0x88c: JUMP 0x74d
---
Entry stack: [V12, 0x74d]
Stack pops: 1
Stack additions: [S0, V880]
Exit stack: [V12, 0x74d, V880]

================================

Block 0x88d
[0x88d:0x892]
---
Predecessors: [0x76c]
Successors: [0x774]
---
0x88d JUMPDEST
0x88e PUSH1 0x5
0x890 SLOAD
0x891 DUP2
0x892 JUMP
---
0x88d: JUMPDEST 
0x88e: V881 = 0x5
0x890: V882 = S[0x5]
0x892: JUMP 0x774
---
Entry stack: [V12, 0x774]
Stack pops: 1
Stack additions: [S0, V882]
Exit stack: [V12, 0x774, V882]

================================

Block 0x893
[0x893:0x898]
---
Predecessors: [0x791]
Successors: [0x774]
---
0x893 JUMPDEST
0x894 PUSH1 0x1
0x896 SLOAD
0x897 DUP2
0x898 JUMP
---
0x893: JUMPDEST 
0x894: V883 = 0x1
0x896: V884 = S[0x1]
0x898: JUMP 0x774
---
Entry stack: [V12, 0x774]
Stack pops: 1
Stack additions: [S0, V884]
Exit stack: [V12, 0x774, V884]

================================

Block 0x899
[0x899:0x8ad]
---
Predecessors: [0x7b6]
Successors: [0x71e]
---
0x899 JUMPDEST
0x89a PUSH1 0x7
0x89c SLOAD
0x89d PUSH3 0x10000
0x8a1 SWAP1
0x8a2 DIV
0x8a3 PUSH1 0x1
0x8a5 PUSH1 0xa0
0x8a7 PUSH1 0x2
0x8a9 EXP
0x8aa SUB
0x8ab AND
0x8ac DUP2
0x8ad JUMP
---
0x899: JUMPDEST 
0x89a: V885 = 0x7
0x89c: V886 = S[0x7]
0x89d: V887 = 0x10000
0x8a2: V888 = DIV V886 0x10000
0x8a3: V889 = 0x1
0x8a5: V890 = 0xa0
0x8a7: V891 = 0x2
0x8a9: V892 = EXP 0x2 0xa0
0x8aa: V893 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ab: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff V888
0x8ad: JUMP 0x71e
---
Entry stack: [V12, 0x71e]
Stack pops: 1
Stack additions: [S0, V894]
Exit stack: [V12, 0x71e, V894]

================================

Block 0x8ae
[0x8ae:0x8b3]
---
Predecessors: [0x7e5]
Successors: [0x774]
---
0x8ae JUMPDEST
0x8af PUSH1 0x6
0x8b1 SLOAD
0x8b2 DUP2
0x8b3 JUMP
---
0x8ae: JUMPDEST 
0x8af: V895 = 0x6
0x8b1: V896 = S[0x6]
0x8b3: JUMP 0x774
---
Entry stack: [V12, 0x774]
Stack pops: 1
Stack additions: [S0, V896]
Exit stack: [V12, 0x774, V896]

================================

Block 0x8b4
[0x8b4:0x8b9]
---
Predecessors: [0x80a]
Successors: [0x774]
---
0x8b4 JUMPDEST
0x8b5 PUSH1 0x3
0x8b7 SLOAD
0x8b8 DUP2
0x8b9 JUMP
---
0x8b4: JUMPDEST 
0x8b5: V897 = 0x3
0x8b7: V898 = S[0x3]
0x8b9: JUMP 0x774
---
Entry stack: [V12, 0x774]
Stack pops: 1
Stack additions: [S0, V898]
Exit stack: [V12, 0x774, V898]

================================

Block 0x8ba
[0x8ba:0x8bf]
---
Predecessors: [0x82f]
Successors: [0x774]
---
0x8ba JUMPDEST
0x8bb PUSH1 0x2
0x8bd SLOAD
0x8be DUP2
0x8bf JUMP
---
0x8ba: JUMPDEST 
0x8bb: V899 = 0x2
0x8bd: V900 = S[0x2]
0x8bf: JUMP 0x774
---
Entry stack: [V12, 0x774]
Stack pops: 1
Stack additions: [S0, V900]
Exit stack: [V12, 0x774, V900]

================================

Block 0x8c0
[0x8c0:0x8c8]
---
Predecessors: [0x854]
Successors: [0x74d]
---
0x8c0 JUMPDEST
0x8c1 PUSH1 0x7
0x8c3 SLOAD
0x8c4 PUSH1 0xff
0x8c6 AND
0x8c7 DUP2
0x8c8 JUMP
---
0x8c0: JUMPDEST 
0x8c1: V901 = 0x7
0x8c3: V902 = S[0x7]
0x8c4: V903 = 0xff
0x8c6: V904 = AND 0xff V902
0x8c8: JUMP 0x74d
---
Entry stack: [V12, 0x74d]
Stack pops: 1
Stack additions: [S0, V904]
Exit stack: [V12, 0x74d, V904]

================================

Block 0x8c9
[0x8c9:0x8f4]
---
Predecessors: []
Successors: []
---
0x8c9 STOP
0x8ca LOG1
0x8cb PUSH6 0x627a7a723058
0x8d2 SHA3
0x8d3 MISSING 0xf7
0x8d4 PUSH5 0xf83bcd6791
0x8da MISSING 0xa6
0x8db DUP9
0x8dc SWAP16
0x8dd DUP12
0x8de PUSH22 0x1254736e251c6b412c7c0fd571340e4a7ac9fc5b0029
---
0x8c9: STOP 
0x8ca: LOG S0 S1 S2
0x8cb: V905 = 0x627a7a723058
0x8d2: V906 = SHA3 0x627a7a723058 S3
0x8d3: MISSING 0xf7
0x8d4: V907 = 0xf83bcd6791
0x8da: MISSING 0xa6
0x8de: V908 = 0x1254736e251c6b412c7c0fd571340e4a7ac9fc5b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V906, 0xf83bcd6791, 0x1254736e251c6b412c7c0fd571340e4a7ac9fc5b0029, S10, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebcf0e
Entry block: 0x70b
Exit block: 0x71e
Body: 0x70b, 0x712, 0x716, 0x71e, 0x870

Function 1:
Public function signature: 0x30c74e04
Entry block: 0x73a
Exit block: 0x74d
Body: 0x73a, 0x741, 0x745, 0x74d, 0x87f

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x761
Exit block: 0x774
Body: 0x761, 0x768, 0x76c, 0x774, 0x88d

Function 3:
Public function signature: 0x7fa8c158
Entry block: 0x786
Exit block: 0x774
Body: 0x774, 0x786, 0x78d, 0x791, 0x893

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x7ab
Exit block: 0x71e
Body: 0x71e, 0x7ab, 0x7b2, 0x7b6, 0x899

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x7da
Exit block: 0x774
Body: 0x774, 0x7da, 0x7e1, 0x7e5, 0x8ae

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x7ff
Exit block: 0x774
Body: 0x774, 0x7ff, 0x806, 0x80a, 0x8b4

Function 7:
Public function signature: 0xc8e569a8
Entry block: 0x824
Exit block: 0x774
Body: 0x774, 0x824, 0x82b, 0x82f, 0x8ba

Function 8:
Public function signature: 0xccb07cef
Entry block: 0x849
Exit block: 0x74d
Body: 0x74d, 0x849, 0x850, 0x854, 0x8c0

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x674
Body: 0x7d, 0x7e, 0x90, 0x9f, 0xac, 0xb7, 0xb8, 0x10f, 0x113, 0x120, 0x124, 0x13b, 0x168, 0x16c, 0x171, 0x17c, 0x1a9, 0x1ad, 0x1bf, 0x233, 0x237, 0x244, 0x248, 0x291, 0x295, 0x2a2, 0x2a6, 0x300, 0x304, 0x311, 0x315, 0x33a, 0x33f, 0x34b, 0x378, 0x381, 0x390, 0x391, 0x39e, 0x3cb, 0x3cf, 0x3d0, 0x3d9, 0x3dd, 0x3ed, 0x3ee, 0x3fd, 0x431, 0x435, 0x43e, 0x46e, 0x472, 0x473, 0x4c5, 0x4c9, 0x4d6, 0x4da, 0x4f7, 0x504, 0x509, 0x51b, 0x51c, 0x556, 0x55a, 0x5b3, 0x5b7, 0x5c4, 0x5c8, 0x5fc, 0x600, 0x663, 0x667, 0x674, 0x678, 0x692, 0x693, 0x694, 0x695, 0x706

