Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x164]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x164
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x164
0xa: JUMPI 0x164 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7da]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7da
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x7da
0x24: JUMPI 0x7da V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x7ef]
---
0x25 DUP1
0x26 PUSH4 0x10309781
0x2b EQ
0x2c PUSH2 0x7ef
0x2f JUMPI
---
0x26: V16 = 0x10309781
0x2b: V17 = EQ 0x10309781 V12
0x2c: V18 = 0x7ef
0x2f: JUMPI 0x7ef V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x814]
---
0x30 DUP1
0x31 PUSH4 0x1fd8ffb0
0x36 EQ
0x37 PUSH2 0x814
0x3a JUMPI
---
0x31: V19 = 0x1fd8ffb0
0x36: V20 = EQ 0x1fd8ffb0 V12
0x37: V21 = 0x814
0x3a: JUMPI 0x814 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x82c]
---
0x3b DUP1
0x3c PUSH4 0x29dcb0cf
0x41 EQ
0x42 PUSH2 0x82c
0x45 JUMPI
---
0x3c: V22 = 0x29dcb0cf
0x41: V23 = EQ 0x29dcb0cf V12
0x42: V24 = 0x82c
0x45: JUMPI 0x82c V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x851]
---
0x46 DUP1
0x47 PUSH4 0x2ec914b5
0x4c EQ
0x4d PUSH2 0x851
0x50 JUMPI
---
0x47: V25 = 0x2ec914b5
0x4c: V26 = EQ 0x2ec914b5 V12
0x4d: V27 = 0x851
0x50: JUMPI 0x851 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x876]
---
0x51 DUP1
0x52 PUSH4 0x31252103
0x57 EQ
0x58 PUSH2 0x876
0x5b JUMPI
---
0x52: V28 = 0x31252103
0x57: V29 = EQ 0x31252103 V12
0x58: V30 = 0x876
0x5b: JUMPI 0x876 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x89b]
---
0x5c DUP1
0x5d PUSH4 0x38af3eed
0x62 EQ
0x63 PUSH2 0x89b
0x66 JUMPI
---
0x5d: V31 = 0x38af3eed
0x62: V32 = EQ 0x38af3eed V12
0x63: V33 = 0x89b
0x66: JUMPI 0x89b V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x8ca]
---
0x67 DUP1
0x68 PUSH4 0x3b41ddba
0x6d EQ
0x6e PUSH2 0x8ca
0x71 JUMPI
---
0x68: V34 = 0x3b41ddba
0x6d: V35 = EQ 0x3b41ddba V12
0x6e: V36 = 0x8ca
0x71: JUMPI 0x8ca V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x8ef]
---
0x72 DUP1
0x73 PUSH4 0x4c95f5d0
0x78 EQ
0x79 PUSH2 0x8ef
0x7c JUMPI
---
0x73: V37 = 0x4c95f5d0
0x78: V38 = EQ 0x4c95f5d0 V12
0x79: V39 = 0x8ef
0x7c: JUMPI 0x8ef V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x914]
---
0x7d DUP1
0x7e PUSH4 0x4fa34075
0x83 EQ
0x84 PUSH2 0x914
0x87 JUMPI
---
0x7e: V40 = 0x4fa34075
0x83: V41 = EQ 0x4fa34075 V12
0x84: V42 = 0x914
0x87: JUMPI 0x914 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x929]
---
0x88 DUP1
0x89 PUSH4 0x5a0254e2
0x8e EQ
0x8f PUSH2 0x929
0x92 JUMPI
---
0x89: V43 = 0x5a0254e2
0x8e: V44 = EQ 0x5a0254e2 V12
0x8f: V45 = 0x929
0x92: JUMPI 0x929 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x958]
---
0x93 DUP1
0x94 PUSH4 0x5b54d2d6
0x99 EQ
0x9a PUSH2 0x958
0x9d JUMPI
---
0x94: V46 = 0x5b54d2d6
0x99: V47 = EQ 0x5b54d2d6 V12
0x9a: V48 = 0x958
0x9d: JUMPI 0x958 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x97f]
---
0x9e DUP1
0x9f PUSH4 0x6e66f6e9
0xa4 EQ
0xa5 PUSH2 0x97f
0xa8 JUMPI
---
0x9f: V49 = 0x6e66f6e9
0xa4: V50 = EQ 0x6e66f6e9 V12
0xa5: V51 = 0x97f
0xa8: JUMPI 0x97f V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x9ae]
---
0xa9 DUP1
0xaa PUSH4 0x70a08231
0xaf EQ
0xb0 PUSH2 0x9ae
0xb3 JUMPI
---
0xaa: V52 = 0x70a08231
0xaf: V53 = EQ 0x70a08231 V12
0xb0: V54 = 0x9ae
0xb3: JUMPI 0x9ae V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x9df]
---
0xb4 DUP1
0xb5 PUSH4 0x7a3a0e84
0xba EQ
0xbb PUSH2 0x9df
0xbe JUMPI
---
0xb5: V55 = 0x7a3a0e84
0xba: V56 = EQ 0x7a3a0e84 V12
0xbb: V57 = 0x9df
0xbe: JUMPI 0x9df V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0xa04]
---
0xbf DUP1
0xc0 PUSH4 0x7b3e5e7b
0xc5 EQ
0xc6 PUSH2 0xa04
0xc9 JUMPI
---
0xc0: V58 = 0x7b3e5e7b
0xc5: V59 = EQ 0x7b3e5e7b V12
0xc6: V60 = 0xa04
0xc9: JUMPI 0xa04 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0xa29]
---
0xca DUP1
0xcb PUSH4 0x7c24ce7d
0xd0 EQ
0xd1 PUSH2 0xa29
0xd4 JUMPI
---
0xcb: V61 = 0x7c24ce7d
0xd0: V62 = EQ 0x7c24ce7d V12
0xd1: V63 = 0xa29
0xd4: JUMPI 0xa29 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0xa4e]
---
0xd5 DUP1
0xd6 PUSH4 0x827037db
0xdb EQ
0xdc PUSH2 0xa4e
0xdf JUMPI
---
0xd6: V64 = 0x827037db
0xdb: V65 = EQ 0x827037db V12
0xdc: V66 = 0xa4e
0xdf: JUMPI 0xa4e V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0xa73]
---
0xe0 DUP1
0xe1 PUSH4 0x89e66aea
0xe6 EQ
0xe7 PUSH2 0xa73
0xea JUMPI
---
0xe1: V67 = 0x89e66aea
0xe6: V68 = EQ 0x89e66aea V12
0xe7: V69 = 0xa73
0xea: JUMPI 0xa73 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0xa98]
---
0xeb DUP1
0xec PUSH4 0x8f48399a
0xf1 EQ
0xf2 PUSH2 0xa98
0xf5 JUMPI
---
0xec: V70 = 0x8f48399a
0xf1: V71 = EQ 0x8f48399a V12
0xf2: V72 = 0xa98
0xf5: JUMPI 0xa98 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0xabd]
---
0xf6 DUP1
0xf7 PUSH4 0x92dcc41c
0xfc EQ
0xfd PUSH2 0xabd
0x100 JUMPI
---
0xf7: V73 = 0x92dcc41c
0xfc: V74 = EQ 0x92dcc41c V12
0xfd: V75 = 0xabd
0x100: JUMPI 0xabd V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0xae2]
---
0x101 DUP1
0x102 PUSH4 0x998936b0
0x107 EQ
0x108 PUSH2 0xae2
0x10b JUMPI
---
0x102: V76 = 0x998936b0
0x107: V77 = EQ 0x998936b0 V12
0x108: V78 = 0xae2
0x10b: JUMPI 0xae2 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0xaf7]
---
0x10c DUP1
0x10d PUSH4 0xa02d55a3
0x112 EQ
0x113 PUSH2 0xaf7
0x116 JUMPI
---
0x10d: V79 = 0xa02d55a3
0x112: V80 = EQ 0xa02d55a3 V12
0x113: V81 = 0xaf7
0x116: JUMPI 0xaf7 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0xb0c]
---
0x117 DUP1
0x118 PUSH4 0xa8a75b78
0x11d EQ
0x11e PUSH2 0xb0c
0x121 JUMPI
---
0x118: V82 = 0xa8a75b78
0x11d: V83 = EQ 0xa8a75b78 V12
0x11e: V84 = 0xb0c
0x121: JUMPI 0xb0c V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x12c]
---
Predecessors: [0x117]
Successors: [0x12d, 0xb31]
---
0x122 DUP1
0x123 PUSH4 0xace38f8c
0x128 EQ
0x129 PUSH2 0xb31
0x12c JUMPI
---
0x123: V85 = 0xace38f8c
0x128: V86 = EQ 0xace38f8c V12
0x129: V87 = 0xb31
0x12c: JUMPI 0xb31 V86
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x122]
Successors: [0x138, 0xb56]
---
0x12d DUP1
0x12e PUSH4 0xaff29802
0x133 EQ
0x134 PUSH2 0xb56
0x137 JUMPI
---
0x12e: V88 = 0xaff29802
0x133: V89 = EQ 0xaff29802 V12
0x134: V90 = 0xb56
0x137: JUMPI 0xb56 V89
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x138
[0x138:0x142]
---
Predecessors: [0x12d]
Successors: [0x143, 0xb7b]
---
0x138 DUP1
0x139 PUSH4 0xccb07cef
0x13e EQ
0x13f PUSH2 0xb7b
0x142 JUMPI
---
0x139: V91 = 0xccb07cef
0x13e: V92 = EQ 0xccb07cef V12
0x13f: V93 = 0xb7b
0x142: JUMPI 0xb7b V92
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x143
[0x143:0x14d]
---
Predecessors: [0x138]
Successors: [0x14e, 0xba2]
---
0x143 DUP1
0x144 PUSH4 0xd424f628
0x149 EQ
0x14a PUSH2 0xba2
0x14d JUMPI
---
0x144: V94 = 0xd424f628
0x149: V95 = EQ 0xd424f628 V12
0x14a: V96 = 0xba2
0x14d: JUMPI 0xba2 V95
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x158]
---
Predecessors: [0x143]
Successors: [0x159, 0xbc9]
---
0x14e DUP1
0x14f PUSH4 0xdcd22c9b
0x154 EQ
0x155 PUSH2 0xbc9
0x158 JUMPI
---
0x14f: V97 = 0xdcd22c9b
0x154: V98 = EQ 0xdcd22c9b V12
0x155: V99 = 0xbc9
0x158: JUMPI 0xbc9 V98
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x159
[0x159:0x163]
---
Predecessors: [0x14e]
Successors: [0x164, 0xbde]
---
0x159 DUP1
0x15a PUSH4 0xfd6b7ef8
0x15f EQ
0x160 PUSH2 0xbde
0x163 JUMPI
---
0x15a: V100 = 0xfd6b7ef8
0x15f: V101 = EQ 0xfd6b7ef8 V12
0x160: V102 = 0xbde
0x163: JUMPI 0xbde V101
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x0, 0x159]
Successors: [0x165]
---
0x164 JUMPDEST
---
0x164: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0x164]
Successors: [0x179, 0x17d]
---
0x165 JUMPDEST
0x166 PUSH1 0x14
0x168 SLOAD
0x169 PUSH1 0x0
0x16b SWAP1
0x16c PUSH2 0x100
0x16f SWAP1
0x170 DIV
0x171 PUSH1 0xff
0x173 AND
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x165: JUMPDEST 
0x166: V103 = 0x14
0x168: V104 = S[0x14]
0x169: V105 = 0x0
0x16c: V106 = 0x100
0x170: V107 = DIV V104 0x100
0x171: V108 = 0xff
0x173: V109 = AND 0xff V107
0x174: V110 = ISZERO V109
0x175: V111 = 0x17d
0x178: JUMPI 0x17d V110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x165]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V112 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x17d
[0x17d:0x1b1]
---
Predecessors: [0x165]
Successors: [0x1b2, 0x616]
---
0x17d JUMPDEST
0x17e POP
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 CALLER
0x188 AND
0x189 PUSH1 0x0
0x18b SWAP1
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x13
0x190 PUSH1 0x20
0x192 MSTORE
0x193 PUSH1 0x40
0x195 SWAP1
0x196 SHA3
0x197 DUP1
0x198 SLOAD
0x199 CALLVALUE
0x19a SWAP1
0x19b DUP2
0x19c ADD
0x19d SWAP1
0x19e SWAP2
0x19f SSTORE
0x1a0 PUSH1 0x8
0x1a2 DUP1
0x1a3 SLOAD
0x1a4 DUP3
0x1a5 ADD
0x1a6 SWAP1
0x1a7 SSTORE
0x1a8 PUSH1 0x1
0x1aa SLOAD
0x1ab TIMESTAMP
0x1ac LT
0x1ad ISZERO
0x1ae PUSH2 0x616
0x1b1 JUMPI
---
0x17d: JUMPDEST 
0x17f: V113 = 0x1
0x181: V114 = 0xa0
0x183: V115 = 0x2
0x185: V116 = EXP 0x2 0xa0
0x186: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V118 = CALLER
0x188: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x189: V120 = 0x0
0x18d: M[0x0] = V119
0x18e: V121 = 0x13
0x190: V122 = 0x20
0x192: M[0x20] = 0x13
0x193: V123 = 0x40
0x196: V124 = SHA3 0x0 0x40
0x198: V125 = S[V124]
0x199: V126 = CALLVALUE
0x19c: V127 = ADD V126 V125
0x19f: S[V124] = V127
0x1a0: V128 = 0x8
0x1a3: V129 = S[0x8]
0x1a5: V130 = ADD V126 V129
0x1a7: S[0x8] = V130
0x1a8: V131 = 0x1
0x1aa: V132 = S[0x1]
0x1ab: V133 = TIMESTAMP
0x1ac: V134 = LT V133 V132
0x1ad: V135 = ISZERO V134
0x1ae: V136 = 0x616
0x1b1: JUMPI 0x616 V135
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V126]
Exit stack: [V12, V126]

================================

Block 0x1b2
[0x1b2:0x1c1]
---
Predecessors: [0x17d]
Successors: [0x1c2, 0x27b]
---
0x1b2 PUSH8 0x8ac7230489e80000
0x1bb DUP2
0x1bc LT
0x1bd ISZERO
0x1be PUSH2 0x27b
0x1c1 JUMPI
---
0x1b2: V137 = 0x8ac7230489e80000
0x1bc: V138 = LT V126 0x8ac7230489e80000
0x1bd: V139 = ISZERO V138
0x1be: V140 = 0x27b
0x1c1: JUMPI 0x27b V139
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x1c2
[0x1c2:0x21b]
---
Predecessors: [0x1b2]
Successors: [0x21c, 0x220]
---
0x1c2 PUSH1 0x12
0x1c4 SLOAD
0x1c5 PUSH1 0x9
0x1c7 SLOAD
0x1c8 PUSH1 0x1
0x1ca PUSH1 0xa0
0x1cc PUSH1 0x2
0x1ce EXP
0x1cf SUB
0x1d0 SWAP1
0x1d1 SWAP2
0x1d2 AND
0x1d3 SWAP1
0x1d4 PUSH4 0xa9059cbb
0x1d9 SWAP1
0x1da CALLER
0x1db SWAP1
0x1dc DUP5
0x1dd MUL
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 PUSH1 0xe0
0x1e3 PUSH1 0x2
0x1e5 EXP
0x1e6 PUSH4 0xffffffff
0x1eb DUP6
0x1ec AND
0x1ed MUL
0x1ee DUP2
0x1ef MSTORE
0x1f0 PUSH1 0x1
0x1f2 PUSH1 0xa0
0x1f4 PUSH1 0x2
0x1f6 EXP
0x1f7 SUB
0x1f8 SWAP1
0x1f9 SWAP3
0x1fa AND
0x1fb PUSH1 0x4
0x1fd DUP4
0x1fe ADD
0x1ff MSTORE
0x200 PUSH1 0x24
0x202 DUP3
0x203 ADD
0x204 MSTORE
0x205 PUSH1 0x44
0x207 ADD
0x208 PUSH1 0x0
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e DUP4
0x20f SUB
0x210 DUP2
0x211 PUSH1 0x0
0x213 DUP8
0x214 DUP1
0x215 EXTCODESIZE
0x216 ISZERO
0x217 ISZERO
0x218 PUSH2 0x220
0x21b JUMPI
---
0x1c2: V141 = 0x12
0x1c4: V142 = S[0x12]
0x1c5: V143 = 0x9
0x1c7: V144 = S[0x9]
0x1c8: V145 = 0x1
0x1ca: V146 = 0xa0
0x1cc: V147 = 0x2
0x1ce: V148 = EXP 0x2 0xa0
0x1cf: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d2: V150 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V151 = 0xa9059cbb
0x1da: V152 = CALLER
0x1dd: V153 = MUL V126 V144
0x1de: V154 = 0x40
0x1e0: V155 = M[0x40]
0x1e1: V156 = 0xe0
0x1e3: V157 = 0x2
0x1e5: V158 = EXP 0x2 0xe0
0x1e6: V159 = 0xffffffff
0x1ec: V160 = AND 0xa9059cbb 0xffffffff
0x1ed: V161 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1ef: M[V155] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1f0: V162 = 0x1
0x1f2: V163 = 0xa0
0x1f4: V164 = 0x2
0x1f6: V165 = EXP 0x2 0xa0
0x1f7: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fa: V167 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V168 = 0x4
0x1fe: V169 = ADD V155 0x4
0x1ff: M[V169] = V167
0x200: V170 = 0x24
0x203: V171 = ADD V155 0x24
0x204: M[V171] = V153
0x205: V172 = 0x44
0x207: V173 = ADD 0x44 V155
0x208: V174 = 0x0
0x20a: V175 = 0x40
0x20c: V176 = M[0x40]
0x20f: V177 = SUB V173 V176
0x211: V178 = 0x0
0x215: V179 = EXTCODESIZE V150
0x216: V180 = ISZERO V179
0x217: V181 = ISZERO V180
0x218: V182 = 0x220
0x21b: JUMPI 0x220 V181
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]
Exit stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]

================================

Block 0x21c
[0x21c:0x21f]
---
Predecessors: [0x1c2]
Successors: []
---
0x21c PUSH1 0x0
0x21e DUP1
0x21f REVERT
---
0x21c: V183 = 0x0
0x21f: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]

================================

Block 0x220
[0x220:0x22c]
---
Predecessors: [0x1c2]
Successors: [0x22d, 0x231]
---
0x220 JUMPDEST
0x221 PUSH2 0x2c6
0x224 GAS
0x225 SUB
0x226 CALL
0x227 ISZERO
0x228 ISZERO
0x229 PUSH2 0x231
0x22c JUMPI
---
0x220: JUMPDEST 
0x221: V184 = 0x2c6
0x224: V185 = GAS
0x225: V186 = SUB V185 0x2c6
0x226: V187 = CALL V186 V150 0x0 V176 V177 V176 0x0
0x227: V188 = ISZERO V187
0x228: V189 = ISZERO V188
0x229: V190 = 0x231
0x22c: JUMPI 0x231 V189
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, V150, 0xa9059cbb, V173]

================================

Block 0x22d
[0x22d:0x230]
---
Predecessors: [0x220]
Successors: []
---
0x22d PUSH1 0x0
0x22f DUP1
0x230 REVERT
---
0x22d: V191 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V150, 0xa9059cbb, V173]

================================

Block 0x231
[0x231:0x27a]
---
Predecessors: [0x220]
Successors: [0x611]
---
0x231 JUMPDEST
0x232 POP
0x233 POP
0x234 POP
0x235 PUSH1 0x0
0x237 DUP1
0x238 MLOAD
0x239 PUSH1 0x20
0x23b PUSH2 0xfc7
0x23e DUP4
0x23f CODECOPY
0x240 DUP2
0x241 MLOAD
0x242 SWAP2
0x243 MSTORE
0x244 CALLER
0x245 DUP3
0x246 PUSH1 0x1
0x248 PUSH1 0x40
0x24a MLOAD
0x24b PUSH1 0x1
0x24d PUSH1 0xa0
0x24f PUSH1 0x2
0x251 EXP
0x252 SUB
0x253 SWAP1
0x254 SWAP4
0x255 AND
0x256 DUP4
0x257 MSTORE
0x258 PUSH1 0x20
0x25a DUP4
0x25b ADD
0x25c SWAP2
0x25d SWAP1
0x25e SWAP2
0x25f MSTORE
0x260 ISZERO
0x261 ISZERO
0x262 PUSH1 0x40
0x264 DUP1
0x265 DUP4
0x266 ADD
0x267 SWAP2
0x268 SWAP1
0x269 SWAP2
0x26a MSTORE
0x26b PUSH1 0x60
0x26d SWAP1
0x26e SWAP2
0x26f ADD
0x270 SWAP1
0x271 MLOAD
0x272 DUP1
0x273 SWAP2
0x274 SUB
0x275 SWAP1
0x276 LOG1
0x277 PUSH2 0x611
0x27a JUMP
---
0x231: JUMPDEST 
0x235: V192 = 0x0
0x238: V193 = M[0x0]
0x239: V194 = 0x20
0x23b: V195 = 0xfc7
0x23f: CODECOPY 0x0 0xfc7 0x20
0x241: V196 = M[0x0]
0x243: M[0x0] = V193
0x244: V197 = CALLER
0x246: V198 = 0x1
0x248: V199 = 0x40
0x24a: V200 = M[0x40]
0x24b: V201 = 0x1
0x24d: V202 = 0xa0
0x24f: V203 = 0x2
0x251: V204 = EXP 0x2 0xa0
0x252: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V206 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x257: M[V200] = V206
0x258: V207 = 0x20
0x25b: V208 = ADD V200 0x20
0x25f: M[V208] = V126
0x260: V209 = ISZERO 0x1
0x261: V210 = ISZERO 0x0
0x262: V211 = 0x40
0x266: V212 = ADD V200 0x40
0x26a: M[V212] = 0x1
0x26b: V213 = 0x60
0x26f: V214 = ADD V200 0x60
0x271: V215 = M[0x40]
0x274: V216 = SUB V214 V215
0x276: LOG V215 V216 V196
0x277: V217 = 0x611
0x27a: JUMP 0x611
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V126]

================================

Block 0x27b
[0x27b:0x28c]
---
Predecessors: [0x1b2]
Successors: [0x28d, 0x309]
---
0x27b JUMPDEST
0x27c PUSH9 0x1158e460913d00000
0x286 DUP2
0x287 LT
0x288 ISZERO
0x289 PUSH2 0x309
0x28c JUMPI
---
0x27b: JUMPDEST 
0x27c: V218 = 0x1158e460913d00000
0x287: V219 = LT V126 0x1158e460913d00000
0x288: V220 = ISZERO V219
0x289: V221 = 0x309
0x28c: JUMPI 0x309 V220
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x28d
[0x28d:0x2ab]
---
Predecessors: [0x27b]
Successors: [0x2ac]
---
0x28d PUSH1 0x12
0x28f SLOAD
0x290 PUSH1 0xc
0x292 SLOAD
0x293 PUSH1 0x1
0x295 PUSH1 0xa0
0x297 PUSH1 0x2
0x299 EXP
0x29a SUB
0x29b SWAP1
0x29c SWAP2
0x29d AND
0x29e SWAP1
0x29f PUSH4 0xa9059cbb
0x2a4 SWAP1
0x2a5 CALLER
0x2a6 SWAP1
0x2a7 PUSH1 0xa
0x2a9 SWAP1
0x2aa DUP6
0x2ab MUL
---
0x28d: V222 = 0x12
0x28f: V223 = S[0x12]
0x290: V224 = 0xc
0x292: V225 = S[0xc]
0x293: V226 = 0x1
0x295: V227 = 0xa0
0x297: V228 = 0x2
0x299: V229 = EXP 0x2 0xa0
0x29a: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29d: V231 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V232 = 0xa9059cbb
0x2a5: V233 = CALLER
0x2a7: V234 = 0xa
0x2ab: V235 = MUL V126 V225
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V231, 0xa9059cbb, V233, 0xa, V235]
Exit stack: [V12, V126, V231, 0xa9059cbb, V233, 0xa, V235]

================================

Block 0x2ac
[0x2ac:0x2eb]
---
Predecessors: [0x28d, 0x31b, 0x3ad, 0x43f, 0x4d1]
Successors: [0x2ec, 0x2f0]
---
0x2ac JUMPDEST
0x2ad DIV
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 PUSH1 0xe0
0x2b3 PUSH1 0x2
0x2b5 EXP
0x2b6 PUSH4 0xffffffff
0x2bb DUP6
0x2bc AND
0x2bd MUL
0x2be DUP2
0x2bf MSTORE
0x2c0 PUSH1 0x1
0x2c2 PUSH1 0xa0
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 SUB
0x2c8 SWAP1
0x2c9 SWAP3
0x2ca AND
0x2cb PUSH1 0x4
0x2cd DUP4
0x2ce ADD
0x2cf MSTORE
0x2d0 PUSH1 0x24
0x2d2 DUP3
0x2d3 ADD
0x2d4 MSTORE
0x2d5 PUSH1 0x44
0x2d7 ADD
0x2d8 PUSH1 0x0
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd DUP1
0x2de DUP4
0x2df SUB
0x2e0 DUP2
0x2e1 PUSH1 0x0
0x2e3 DUP8
0x2e4 DUP1
0x2e5 EXTCODESIZE
0x2e6 ISZERO
0x2e7 ISZERO
0x2e8 PUSH2 0x2f0
0x2eb JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V236 = DIV S0 0xa
0x2ae: V237 = 0x40
0x2b0: V238 = M[0x40]
0x2b1: V239 = 0xe0
0x2b3: V240 = 0x2
0x2b5: V241 = EXP 0x2 0xe0
0x2b6: V242 = 0xffffffff
0x2bc: V243 = AND 0xa9059cbb 0xffffffff
0x2bd: V244 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2bf: M[V238] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2c0: V245 = 0x1
0x2c2: V246 = 0xa0
0x2c4: V247 = 0x2
0x2c6: V248 = EXP 0x2 0xa0
0x2c7: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ca: V250 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x2cb: V251 = 0x4
0x2ce: V252 = ADD V238 0x4
0x2cf: M[V252] = V250
0x2d0: V253 = 0x24
0x2d3: V254 = ADD V238 0x24
0x2d4: M[V254] = V236
0x2d5: V255 = 0x44
0x2d7: V256 = ADD 0x44 V238
0x2d8: V257 = 0x0
0x2da: V258 = 0x40
0x2dc: V259 = M[0x40]
0x2df: V260 = SUB V256 V259
0x2e1: V261 = 0x0
0x2e5: V262 = EXTCODESIZE S4
0x2e6: V263 = ISZERO V262
0x2e7: V264 = ISZERO V263
0x2e8: V265 = 0x2f0
0x2eb: JUMPI 0x2f0 V264
---
Entry stack: [V12, V126, S4, 0xa9059cbb, S2, 0xa, S0]
Stack pops: 5
Stack additions: [S4, S3, V256, 0x0, V259, V260, V259, 0x0, S4]
Exit stack: [V12, V126, S4, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, S4]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x2ac]
Successors: []
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
---
0x2ec: V266 = 0x0
0x2ef: REVERT 0x0 0x0
---
Entry stack: [V12, V126, S8, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, S8, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, S0]

================================

Block 0x2f0
[0x2f0:0x2fc]
---
Predecessors: [0x2ac, 0x33e, 0x3d0, 0x462, 0x4f4]
Successors: [0x2fd, 0x301]
---
0x2f0 JUMPDEST
0x2f1 PUSH2 0x2c6
0x2f4 GAS
0x2f5 SUB
0x2f6 CALL
0x2f7 ISZERO
0x2f8 ISZERO
0x2f9 PUSH2 0x301
0x2fc JUMPI
---
0x2f0: JUMPDEST 
0x2f1: V267 = 0x2c6
0x2f4: V268 = GAS
0x2f5: V269 = SUB V268 0x2c6
0x2f6: V270 = CALL V269 S0 0x0 S2 S3 S4 0x0
0x2f7: V271 = ISZERO V270
0x2f8: V272 = ISZERO V271
0x2f9: V273 = 0x301
0x2fc: JUMPI 0x301 V272
---
Entry stack: [V12, V126, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, S8, S7, S6]

================================

Block 0x2fd
[0x2fd:0x300]
---
Predecessors: [0x2f0]
Successors: []
---
0x2fd PUSH1 0x0
0x2ff DUP1
0x300 REVERT
---
0x2fd: V274 = 0x0
0x300: REVERT 0x0 0x0
---
Entry stack: [V12, V126, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, S2, S1, S0]

================================

Block 0x301
[0x301:0x308]
---
Predecessors: [0x2f0, 0x37e, 0x410, 0x4a2, 0x534]
Successors: [0x5ca]
---
0x301 JUMPDEST
0x302 POP
0x303 POP
0x304 POP
0x305 PUSH2 0x5ca
0x308 JUMP
---
0x301: JUMPDEST 
0x305: V275 = 0x5ca
0x308: JUMP 0x5ca
---
Entry stack: [V12, V126, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x309
[0x309:0x31a]
---
Predecessors: [0x27b]
Successors: [0x31b, 0x39b]
---
0x309 JUMPDEST
0x30a PUSH9 0x1a055690d9db80000
0x314 DUP2
0x315 LT
0x316 ISZERO
0x317 PUSH2 0x39b
0x31a JUMPI
---
0x309: JUMPDEST 
0x30a: V276 = 0x1a055690d9db80000
0x315: V277 = LT V126 0x1a055690d9db80000
0x316: V278 = ISZERO V277
0x317: V279 = 0x39b
0x31a: JUMPI 0x39b V278
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x31b
[0x31b:0x33d]
---
Predecessors: [0x309]
Successors: [0x2ac]
---
0x31b PUSH1 0x12
0x31d SLOAD
0x31e PUSH1 0xd
0x320 SLOAD
0x321 PUSH1 0x1
0x323 PUSH1 0xa0
0x325 PUSH1 0x2
0x327 EXP
0x328 SUB
0x329 SWAP1
0x32a SWAP2
0x32b AND
0x32c SWAP1
0x32d PUSH4 0xa9059cbb
0x332 SWAP1
0x333 CALLER
0x334 SWAP1
0x335 PUSH1 0xa
0x337 SWAP1
0x338 DUP6
0x339 MUL
0x33a PUSH2 0x2ac
0x33d JUMP
---
0x31b: V280 = 0x12
0x31d: V281 = S[0x12]
0x31e: V282 = 0xd
0x320: V283 = S[0xd]
0x321: V284 = 0x1
0x323: V285 = 0xa0
0x325: V286 = 0x2
0x327: V287 = EXP 0x2 0xa0
0x328: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32b: V289 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V290 = 0xa9059cbb
0x333: V291 = CALLER
0x335: V292 = 0xa
0x339: V293 = MUL V126 V283
0x33a: V294 = 0x2ac
0x33d: JUMP 0x2ac
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V289, 0xa9059cbb, V291, 0xa, V293]
Exit stack: [V12, V126, V289, 0xa9059cbb, V291, 0xa, V293]

================================

Block 0x33e
[0x33e:0x37d]
---
Predecessors: []
Successors: [0x2f0, 0x37e]
---
0x33e JUMPDEST
0x33f DIV
0x340 PUSH1 0x40
0x342 MLOAD
0x343 PUSH1 0xe0
0x345 PUSH1 0x2
0x347 EXP
0x348 PUSH4 0xffffffff
0x34d DUP6
0x34e AND
0x34f MUL
0x350 DUP2
0x351 MSTORE
0x352 PUSH1 0x1
0x354 PUSH1 0xa0
0x356 PUSH1 0x2
0x358 EXP
0x359 SUB
0x35a SWAP1
0x35b SWAP3
0x35c AND
0x35d PUSH1 0x4
0x35f DUP4
0x360 ADD
0x361 MSTORE
0x362 PUSH1 0x24
0x364 DUP3
0x365 ADD
0x366 MSTORE
0x367 PUSH1 0x44
0x369 ADD
0x36a PUSH1 0x0
0x36c PUSH1 0x40
0x36e MLOAD
0x36f DUP1
0x370 DUP4
0x371 SUB
0x372 DUP2
0x373 PUSH1 0x0
0x375 DUP8
0x376 DUP1
0x377 EXTCODESIZE
0x378 ISZERO
0x379 ISZERO
0x37a PUSH2 0x2f0
0x37d JUMPI
---
0x33e: JUMPDEST 
0x33f: V295 = DIV S0 S1
0x340: V296 = 0x40
0x342: V297 = M[0x40]
0x343: V298 = 0xe0
0x345: V299 = 0x2
0x347: V300 = EXP 0x2 0xe0
0x348: V301 = 0xffffffff
0x34e: V302 = AND S3 0xffffffff
0x34f: V303 = MUL V302 0x100000000000000000000000000000000000000000000000000000000
0x351: M[V297] = V303
0x352: V304 = 0x1
0x354: V305 = 0xa0
0x356: V306 = 0x2
0x358: V307 = EXP 0x2 0xa0
0x359: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35c: V309 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x35d: V310 = 0x4
0x360: V311 = ADD V297 0x4
0x361: M[V311] = V309
0x362: V312 = 0x24
0x365: V313 = ADD V297 0x24
0x366: M[V313] = V295
0x367: V314 = 0x44
0x369: V315 = ADD 0x44 V297
0x36a: V316 = 0x0
0x36c: V317 = 0x40
0x36e: V318 = M[0x40]
0x371: V319 = SUB V315 V318
0x373: V320 = 0x0
0x377: V321 = EXTCODESIZE S4
0x378: V322 = ISZERO V321
0x379: V323 = ISZERO V322
0x37a: V324 = 0x2f0
0x37d: JUMPI 0x2f0 V323
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V315, 0x0, V318, V319, V318, 0x0, S4]
Exit stack: [S4, S3, V315, 0x0, V318, V319, V318, 0x0, S4]

================================

Block 0x37e
[0x37e:0x38e]
---
Predecessors: [0x33e]
Successors: [0x301, 0x38f]
---
0x37e PUSH1 0x0
0x380 DUP1
0x381 REVERT
0x382 JUMPDEST
0x383 PUSH2 0x2c6
0x386 GAS
0x387 SUB
0x388 CALL
0x389 ISZERO
0x38a ISZERO
0x38b PUSH2 0x301
0x38e JUMPI
---
0x37e: V325 = 0x0
0x381: REVERT 0x0 0x0
0x382: JUMPDEST 
0x383: V326 = 0x2c6
0x386: V327 = GAS
0x387: V328 = SUB V327 0x2c6
0x388: V329 = CALL V328 S0 S1 S2 S3 S4 S5
0x389: V330 = ISZERO V329
0x38a: V331 = ISZERO V330
0x38b: V332 = 0x301
0x38e: JUMPI 0x301 V331
---
Entry stack: [S8, S7, V315, 0x0, V318, V319, V318, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x38f
[0x38f:0x39a]
---
Predecessors: [0x37e]
Successors: [0x5ca]
---
0x38f PUSH1 0x0
0x391 DUP1
0x392 REVERT
0x393 JUMPDEST
0x394 POP
0x395 POP
0x396 POP
0x397 PUSH2 0x5ca
0x39a JUMP
---
0x38f: V333 = 0x0
0x392: REVERT 0x0 0x0
0x393: JUMPDEST 
0x397: V334 = 0x5ca
0x39a: JUMP 0x5ca
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x39b
[0x39b:0x3ac]
---
Predecessors: [0x309]
Successors: [0x3ad, 0x42d]
---
0x39b JUMPDEST
0x39c PUSH9 0x2b5e3af16b1880000
0x3a6 DUP2
0x3a7 LT
0x3a8 ISZERO
0x3a9 PUSH2 0x42d
0x3ac JUMPI
---
0x39b: JUMPDEST 
0x39c: V335 = 0x2b5e3af16b1880000
0x3a7: V336 = LT V126 0x2b5e3af16b1880000
0x3a8: V337 = ISZERO V336
0x3a9: V338 = 0x42d
0x3ac: JUMPI 0x42d V337
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x3ad
[0x3ad:0x3cf]
---
Predecessors: [0x39b]
Successors: [0x2ac]
---
0x3ad PUSH1 0x12
0x3af SLOAD
0x3b0 PUSH1 0xe
0x3b2 SLOAD
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb SWAP1
0x3bc SWAP2
0x3bd AND
0x3be SWAP1
0x3bf PUSH4 0xa9059cbb
0x3c4 SWAP1
0x3c5 CALLER
0x3c6 SWAP1
0x3c7 PUSH1 0xa
0x3c9 SWAP1
0x3ca DUP6
0x3cb MUL
0x3cc PUSH2 0x2ac
0x3cf JUMP
---
0x3ad: V339 = 0x12
0x3af: V340 = S[0x12]
0x3b0: V341 = 0xe
0x3b2: V342 = S[0xe]
0x3b3: V343 = 0x1
0x3b5: V344 = 0xa0
0x3b7: V345 = 0x2
0x3b9: V346 = EXP 0x2 0xa0
0x3ba: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V348 = AND V340 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V349 = 0xa9059cbb
0x3c5: V350 = CALLER
0x3c7: V351 = 0xa
0x3cb: V352 = MUL V126 V342
0x3cc: V353 = 0x2ac
0x3cf: JUMP 0x2ac
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V348, 0xa9059cbb, V350, 0xa, V352]
Exit stack: [V12, V126, V348, 0xa9059cbb, V350, 0xa, V352]

================================

Block 0x3d0
[0x3d0:0x40f]
---
Predecessors: []
Successors: [0x2f0, 0x410]
---
0x3d0 JUMPDEST
0x3d1 DIV
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 PUSH1 0xe0
0x3d7 PUSH1 0x2
0x3d9 EXP
0x3da PUSH4 0xffffffff
0x3df DUP6
0x3e0 AND
0x3e1 MUL
0x3e2 DUP2
0x3e3 MSTORE
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xa0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb SUB
0x3ec SWAP1
0x3ed SWAP3
0x3ee AND
0x3ef PUSH1 0x4
0x3f1 DUP4
0x3f2 ADD
0x3f3 MSTORE
0x3f4 PUSH1 0x24
0x3f6 DUP3
0x3f7 ADD
0x3f8 MSTORE
0x3f9 PUSH1 0x44
0x3fb ADD
0x3fc PUSH1 0x0
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 DUP1
0x402 DUP4
0x403 SUB
0x404 DUP2
0x405 PUSH1 0x0
0x407 DUP8
0x408 DUP1
0x409 EXTCODESIZE
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x2f0
0x40f JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V354 = DIV S0 S1
0x3d2: V355 = 0x40
0x3d4: V356 = M[0x40]
0x3d5: V357 = 0xe0
0x3d7: V358 = 0x2
0x3d9: V359 = EXP 0x2 0xe0
0x3da: V360 = 0xffffffff
0x3e0: V361 = AND S3 0xffffffff
0x3e1: V362 = MUL V361 0x100000000000000000000000000000000000000000000000000000000
0x3e3: M[V356] = V362
0x3e4: V363 = 0x1
0x3e6: V364 = 0xa0
0x3e8: V365 = 0x2
0x3ea: V366 = EXP 0x2 0xa0
0x3eb: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ee: V368 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x3ef: V369 = 0x4
0x3f2: V370 = ADD V356 0x4
0x3f3: M[V370] = V368
0x3f4: V371 = 0x24
0x3f7: V372 = ADD V356 0x24
0x3f8: M[V372] = V354
0x3f9: V373 = 0x44
0x3fb: V374 = ADD 0x44 V356
0x3fc: V375 = 0x0
0x3fe: V376 = 0x40
0x400: V377 = M[0x40]
0x403: V378 = SUB V374 V377
0x405: V379 = 0x0
0x409: V380 = EXTCODESIZE S4
0x40a: V381 = ISZERO V380
0x40b: V382 = ISZERO V381
0x40c: V383 = 0x2f0
0x40f: JUMPI 0x2f0 V382
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V374, 0x0, V377, V378, V377, 0x0, S4]
Exit stack: [S4, S3, V374, 0x0, V377, V378, V377, 0x0, S4]

================================

Block 0x410
[0x410:0x420]
---
Predecessors: [0x3d0]
Successors: [0x301, 0x421]
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
0x414 JUMPDEST
0x415 PUSH2 0x2c6
0x418 GAS
0x419 SUB
0x41a CALL
0x41b ISZERO
0x41c ISZERO
0x41d PUSH2 0x301
0x420 JUMPI
---
0x410: V384 = 0x0
0x413: REVERT 0x0 0x0
0x414: JUMPDEST 
0x415: V385 = 0x2c6
0x418: V386 = GAS
0x419: V387 = SUB V386 0x2c6
0x41a: V388 = CALL V387 S0 S1 S2 S3 S4 S5
0x41b: V389 = ISZERO V388
0x41c: V390 = ISZERO V389
0x41d: V391 = 0x301
0x420: JUMPI 0x301 V390
---
Entry stack: [S8, S7, V374, 0x0, V377, V378, V377, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x421
[0x421:0x42c]
---
Predecessors: [0x410]
Successors: [0x5ca]
---
0x421 PUSH1 0x0
0x423 DUP1
0x424 REVERT
0x425 JUMPDEST
0x426 POP
0x427 POP
0x428 POP
0x429 PUSH2 0x5ca
0x42c JUMP
---
0x421: V392 = 0x0
0x424: REVERT 0x0 0x0
0x425: JUMPDEST 
0x429: V393 = 0x5ca
0x42c: JUMP 0x5ca
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42d
[0x42d:0x43e]
---
Predecessors: [0x39b]
Successors: [0x43f, 0x4bf]
---
0x42d JUMPDEST
0x42e PUSH9 0x56bc75e2d63100000
0x438 DUP2
0x439 LT
0x43a ISZERO
0x43b PUSH2 0x4bf
0x43e JUMPI
---
0x42d: JUMPDEST 
0x42e: V394 = 0x56bc75e2d63100000
0x439: V395 = LT V126 0x56bc75e2d63100000
0x43a: V396 = ISZERO V395
0x43b: V397 = 0x4bf
0x43e: JUMPI 0x4bf V396
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x43f
[0x43f:0x461]
---
Predecessors: [0x42d]
Successors: [0x2ac]
---
0x43f PUSH1 0x12
0x441 SLOAD
0x442 PUSH1 0xf
0x444 SLOAD
0x445 PUSH1 0x1
0x447 PUSH1 0xa0
0x449 PUSH1 0x2
0x44b EXP
0x44c SUB
0x44d SWAP1
0x44e SWAP2
0x44f AND
0x450 SWAP1
0x451 PUSH4 0xa9059cbb
0x456 SWAP1
0x457 CALLER
0x458 SWAP1
0x459 PUSH1 0xa
0x45b SWAP1
0x45c DUP6
0x45d MUL
0x45e PUSH2 0x2ac
0x461 JUMP
---
0x43f: V398 = 0x12
0x441: V399 = S[0x12]
0x442: V400 = 0xf
0x444: V401 = S[0xf]
0x445: V402 = 0x1
0x447: V403 = 0xa0
0x449: V404 = 0x2
0x44b: V405 = EXP 0x2 0xa0
0x44c: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44f: V407 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x451: V408 = 0xa9059cbb
0x457: V409 = CALLER
0x459: V410 = 0xa
0x45d: V411 = MUL V126 V401
0x45e: V412 = 0x2ac
0x461: JUMP 0x2ac
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V407, 0xa9059cbb, V409, 0xa, V411]
Exit stack: [V12, V126, V407, 0xa9059cbb, V409, 0xa, V411]

================================

Block 0x462
[0x462:0x4a1]
---
Predecessors: []
Successors: [0x2f0, 0x4a2]
---
0x462 JUMPDEST
0x463 DIV
0x464 PUSH1 0x40
0x466 MLOAD
0x467 PUSH1 0xe0
0x469 PUSH1 0x2
0x46b EXP
0x46c PUSH4 0xffffffff
0x471 DUP6
0x472 AND
0x473 MUL
0x474 DUP2
0x475 MSTORE
0x476 PUSH1 0x1
0x478 PUSH1 0xa0
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e SWAP1
0x47f SWAP3
0x480 AND
0x481 PUSH1 0x4
0x483 DUP4
0x484 ADD
0x485 MSTORE
0x486 PUSH1 0x24
0x488 DUP3
0x489 ADD
0x48a MSTORE
0x48b PUSH1 0x44
0x48d ADD
0x48e PUSH1 0x0
0x490 PUSH1 0x40
0x492 MLOAD
0x493 DUP1
0x494 DUP4
0x495 SUB
0x496 DUP2
0x497 PUSH1 0x0
0x499 DUP8
0x49a DUP1
0x49b EXTCODESIZE
0x49c ISZERO
0x49d ISZERO
0x49e PUSH2 0x2f0
0x4a1 JUMPI
---
0x462: JUMPDEST 
0x463: V413 = DIV S0 S1
0x464: V414 = 0x40
0x466: V415 = M[0x40]
0x467: V416 = 0xe0
0x469: V417 = 0x2
0x46b: V418 = EXP 0x2 0xe0
0x46c: V419 = 0xffffffff
0x472: V420 = AND S3 0xffffffff
0x473: V421 = MUL V420 0x100000000000000000000000000000000000000000000000000000000
0x475: M[V415] = V421
0x476: V422 = 0x1
0x478: V423 = 0xa0
0x47a: V424 = 0x2
0x47c: V425 = EXP 0x2 0xa0
0x47d: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x480: V427 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x481: V428 = 0x4
0x484: V429 = ADD V415 0x4
0x485: M[V429] = V427
0x486: V430 = 0x24
0x489: V431 = ADD V415 0x24
0x48a: M[V431] = V413
0x48b: V432 = 0x44
0x48d: V433 = ADD 0x44 V415
0x48e: V434 = 0x0
0x490: V435 = 0x40
0x492: V436 = M[0x40]
0x495: V437 = SUB V433 V436
0x497: V438 = 0x0
0x49b: V439 = EXTCODESIZE S4
0x49c: V440 = ISZERO V439
0x49d: V441 = ISZERO V440
0x49e: V442 = 0x2f0
0x4a1: JUMPI 0x2f0 V441
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V433, 0x0, V436, V437, V436, 0x0, S4]
Exit stack: [S4, S3, V433, 0x0, V436, V437, V436, 0x0, S4]

================================

Block 0x4a2
[0x4a2:0x4b2]
---
Predecessors: [0x462]
Successors: [0x301, 0x4b3]
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
0x4a6 JUMPDEST
0x4a7 PUSH2 0x2c6
0x4aa GAS
0x4ab SUB
0x4ac CALL
0x4ad ISZERO
0x4ae ISZERO
0x4af PUSH2 0x301
0x4b2 JUMPI
---
0x4a2: V443 = 0x0
0x4a5: REVERT 0x0 0x0
0x4a6: JUMPDEST 
0x4a7: V444 = 0x2c6
0x4aa: V445 = GAS
0x4ab: V446 = SUB V445 0x2c6
0x4ac: V447 = CALL V446 S0 S1 S2 S3 S4 S5
0x4ad: V448 = ISZERO V447
0x4ae: V449 = ISZERO V448
0x4af: V450 = 0x301
0x4b2: JUMPI 0x301 V449
---
Entry stack: [S8, S7, V433, 0x0, V436, V437, V436, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4b3
[0x4b3:0x4be]
---
Predecessors: [0x4a2]
Successors: [0x5ca]
---
0x4b3 PUSH1 0x0
0x4b5 DUP1
0x4b6 REVERT
0x4b7 JUMPDEST
0x4b8 POP
0x4b9 POP
0x4ba POP
0x4bb PUSH2 0x5ca
0x4be JUMP
---
0x4b3: V451 = 0x0
0x4b6: REVERT 0x0 0x0
0x4b7: JUMPDEST 
0x4bb: V452 = 0x5ca
0x4be: JUMP 0x5ca
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4bf
[0x4bf:0x4d0]
---
Predecessors: [0x42d]
Successors: [0x4d1, 0x551]
---
0x4bf JUMPDEST
0x4c0 PUSH9 0x821ab0d4414980000
0x4ca DUP2
0x4cb LT
0x4cc ISZERO
0x4cd PUSH2 0x551
0x4d0 JUMPI
---
0x4bf: JUMPDEST 
0x4c0: V453 = 0x821ab0d4414980000
0x4cb: V454 = LT V126 0x821ab0d4414980000
0x4cc: V455 = ISZERO V454
0x4cd: V456 = 0x551
0x4d0: JUMPI 0x551 V455
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x4d1
[0x4d1:0x4f3]
---
Predecessors: [0x4bf]
Successors: [0x2ac]
---
0x4d1 PUSH1 0x12
0x4d3 SLOAD
0x4d4 PUSH1 0x10
0x4d6 SLOAD
0x4d7 PUSH1 0x1
0x4d9 PUSH1 0xa0
0x4db PUSH1 0x2
0x4dd EXP
0x4de SUB
0x4df SWAP1
0x4e0 SWAP2
0x4e1 AND
0x4e2 SWAP1
0x4e3 PUSH4 0xa9059cbb
0x4e8 SWAP1
0x4e9 CALLER
0x4ea SWAP1
0x4eb PUSH1 0xa
0x4ed SWAP1
0x4ee DUP6
0x4ef MUL
0x4f0 PUSH2 0x2ac
0x4f3 JUMP
---
0x4d1: V457 = 0x12
0x4d3: V458 = S[0x12]
0x4d4: V459 = 0x10
0x4d6: V460 = S[0x10]
0x4d7: V461 = 0x1
0x4d9: V462 = 0xa0
0x4db: V463 = 0x2
0x4dd: V464 = EXP 0x2 0xa0
0x4de: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V466 = AND V458 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V467 = 0xa9059cbb
0x4e9: V468 = CALLER
0x4eb: V469 = 0xa
0x4ef: V470 = MUL V126 V460
0x4f0: V471 = 0x2ac
0x4f3: JUMP 0x2ac
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V466, 0xa9059cbb, V468, 0xa, V470]
Exit stack: [V12, V126, V466, 0xa9059cbb, V468, 0xa, V470]

================================

Block 0x4f4
[0x4f4:0x533]
---
Predecessors: []
Successors: [0x2f0, 0x534]
---
0x4f4 JUMPDEST
0x4f5 DIV
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 PUSH1 0xe0
0x4fb PUSH1 0x2
0x4fd EXP
0x4fe PUSH4 0xffffffff
0x503 DUP6
0x504 AND
0x505 MUL
0x506 DUP2
0x507 MSTORE
0x508 PUSH1 0x1
0x50a PUSH1 0xa0
0x50c PUSH1 0x2
0x50e EXP
0x50f SUB
0x510 SWAP1
0x511 SWAP3
0x512 AND
0x513 PUSH1 0x4
0x515 DUP4
0x516 ADD
0x517 MSTORE
0x518 PUSH1 0x24
0x51a DUP3
0x51b ADD
0x51c MSTORE
0x51d PUSH1 0x44
0x51f ADD
0x520 PUSH1 0x0
0x522 PUSH1 0x40
0x524 MLOAD
0x525 DUP1
0x526 DUP4
0x527 SUB
0x528 DUP2
0x529 PUSH1 0x0
0x52b DUP8
0x52c DUP1
0x52d EXTCODESIZE
0x52e ISZERO
0x52f ISZERO
0x530 PUSH2 0x2f0
0x533 JUMPI
---
0x4f4: JUMPDEST 
0x4f5: V472 = DIV S0 S1
0x4f6: V473 = 0x40
0x4f8: V474 = M[0x40]
0x4f9: V475 = 0xe0
0x4fb: V476 = 0x2
0x4fd: V477 = EXP 0x2 0xe0
0x4fe: V478 = 0xffffffff
0x504: V479 = AND S3 0xffffffff
0x505: V480 = MUL V479 0x100000000000000000000000000000000000000000000000000000000
0x507: M[V474] = V480
0x508: V481 = 0x1
0x50a: V482 = 0xa0
0x50c: V483 = 0x2
0x50e: V484 = EXP 0x2 0xa0
0x50f: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x512: V486 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x513: V487 = 0x4
0x516: V488 = ADD V474 0x4
0x517: M[V488] = V486
0x518: V489 = 0x24
0x51b: V490 = ADD V474 0x24
0x51c: M[V490] = V472
0x51d: V491 = 0x44
0x51f: V492 = ADD 0x44 V474
0x520: V493 = 0x0
0x522: V494 = 0x40
0x524: V495 = M[0x40]
0x527: V496 = SUB V492 V495
0x529: V497 = 0x0
0x52d: V498 = EXTCODESIZE S4
0x52e: V499 = ISZERO V498
0x52f: V500 = ISZERO V499
0x530: V501 = 0x2f0
0x533: JUMPI 0x2f0 V500
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V492, 0x0, V495, V496, V495, 0x0, S4]
Exit stack: [S4, S3, V492, 0x0, V495, V496, V495, 0x0, S4]

================================

Block 0x534
[0x534:0x544]
---
Predecessors: [0x4f4]
Successors: [0x301, 0x545]
---
0x534 PUSH1 0x0
0x536 DUP1
0x537 REVERT
0x538 JUMPDEST
0x539 PUSH2 0x2c6
0x53c GAS
0x53d SUB
0x53e CALL
0x53f ISZERO
0x540 ISZERO
0x541 PUSH2 0x301
0x544 JUMPI
---
0x534: V502 = 0x0
0x537: REVERT 0x0 0x0
0x538: JUMPDEST 
0x539: V503 = 0x2c6
0x53c: V504 = GAS
0x53d: V505 = SUB V504 0x2c6
0x53e: V506 = CALL V505 S0 S1 S2 S3 S4 S5
0x53f: V507 = ISZERO V506
0x540: V508 = ISZERO V507
0x541: V509 = 0x301
0x544: JUMPI 0x301 V508
---
Entry stack: [S8, S7, V492, 0x0, V495, V496, V495, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x545
[0x545:0x550]
---
Predecessors: [0x534]
Successors: [0x5ca]
---
0x545 PUSH1 0x0
0x547 DUP1
0x548 REVERT
0x549 JUMPDEST
0x54a POP
0x54b POP
0x54c POP
0x54d PUSH2 0x5ca
0x550 JUMP
---
0x545: V510 = 0x0
0x548: REVERT 0x0 0x0
0x549: JUMPDEST 
0x54d: V511 = 0x5ca
0x550: JUMP 0x5ca
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x551
[0x551:0x570]
---
Predecessors: [0x4bf]
Successors: [0x571]
---
0x551 JUMPDEST
0x552 PUSH1 0x12
0x554 SLOAD
0x555 PUSH1 0x11
0x557 SLOAD
0x558 PUSH1 0x1
0x55a PUSH1 0xa0
0x55c PUSH1 0x2
0x55e EXP
0x55f SUB
0x560 SWAP1
0x561 SWAP2
0x562 AND
0x563 SWAP1
0x564 PUSH4 0xa9059cbb
0x569 SWAP1
0x56a CALLER
0x56b SWAP1
0x56c PUSH1 0xa
0x56e SWAP1
0x56f DUP6
0x570 MUL
---
0x551: JUMPDEST 
0x552: V512 = 0x12
0x554: V513 = S[0x12]
0x555: V514 = 0x11
0x557: V515 = S[0x11]
0x558: V516 = 0x1
0x55a: V517 = 0xa0
0x55c: V518 = 0x2
0x55e: V519 = EXP 0x2 0xa0
0x55f: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x562: V521 = AND V513 0xffffffffffffffffffffffffffffffffffffffff
0x564: V522 = 0xa9059cbb
0x56a: V523 = CALLER
0x56c: V524 = 0xa
0x570: V525 = MUL V126 V515
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V521, 0xa9059cbb, V523, 0xa, V525]
Exit stack: [V12, V126, V521, 0xa9059cbb, V523, 0xa, V525]

================================

Block 0x571
[0x571:0x5b0]
---
Predecessors: [0x551]
Successors: [0x5b1, 0x5b5]
---
0x571 JUMPDEST
0x572 DIV
0x573 PUSH1 0x40
0x575 MLOAD
0x576 PUSH1 0xe0
0x578 PUSH1 0x2
0x57a EXP
0x57b PUSH4 0xffffffff
0x580 DUP6
0x581 AND
0x582 MUL
0x583 DUP2
0x584 MSTORE
0x585 PUSH1 0x1
0x587 PUSH1 0xa0
0x589 PUSH1 0x2
0x58b EXP
0x58c SUB
0x58d SWAP1
0x58e SWAP3
0x58f AND
0x590 PUSH1 0x4
0x592 DUP4
0x593 ADD
0x594 MSTORE
0x595 PUSH1 0x24
0x597 DUP3
0x598 ADD
0x599 MSTORE
0x59a PUSH1 0x44
0x59c ADD
0x59d PUSH1 0x0
0x59f PUSH1 0x40
0x5a1 MLOAD
0x5a2 DUP1
0x5a3 DUP4
0x5a4 SUB
0x5a5 DUP2
0x5a6 PUSH1 0x0
0x5a8 DUP8
0x5a9 DUP1
0x5aa EXTCODESIZE
0x5ab ISZERO
0x5ac ISZERO
0x5ad PUSH2 0x5b5
0x5b0 JUMPI
---
0x571: JUMPDEST 
0x572: V526 = DIV V525 0xa
0x573: V527 = 0x40
0x575: V528 = M[0x40]
0x576: V529 = 0xe0
0x578: V530 = 0x2
0x57a: V531 = EXP 0x2 0xe0
0x57b: V532 = 0xffffffff
0x581: V533 = AND 0xa9059cbb 0xffffffff
0x582: V534 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x584: M[V528] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x585: V535 = 0x1
0x587: V536 = 0xa0
0x589: V537 = 0x2
0x58b: V538 = EXP 0x2 0xa0
0x58c: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58f: V540 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x590: V541 = 0x4
0x593: V542 = ADD V528 0x4
0x594: M[V542] = V540
0x595: V543 = 0x24
0x598: V544 = ADD V528 0x24
0x599: M[V544] = V526
0x59a: V545 = 0x44
0x59c: V546 = ADD 0x44 V528
0x59d: V547 = 0x0
0x59f: V548 = 0x40
0x5a1: V549 = M[0x40]
0x5a4: V550 = SUB V546 V549
0x5a6: V551 = 0x0
0x5aa: V552 = EXTCODESIZE V521
0x5ab: V553 = ISZERO V552
0x5ac: V554 = ISZERO V553
0x5ad: V555 = 0x5b5
0x5b0: JUMPI 0x5b5 V554
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V523, 0xa, V525]
Stack pops: 5
Stack additions: [S4, S3, V546, 0x0, V549, V550, V549, 0x0, S4]
Exit stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]

================================

Block 0x5b1
[0x5b1:0x5b4]
---
Predecessors: [0x571]
Successors: []
---
0x5b1 PUSH1 0x0
0x5b3 DUP1
0x5b4 REVERT
---
0x5b1: V556 = 0x0
0x5b4: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]

================================

Block 0x5b5
[0x5b5:0x5c1]
---
Predecessors: [0x571]
Successors: [0x5c2, 0x5c6]
---
0x5b5 JUMPDEST
0x5b6 PUSH2 0x2c6
0x5b9 GAS
0x5ba SUB
0x5bb CALL
0x5bc ISZERO
0x5bd ISZERO
0x5be PUSH2 0x5c6
0x5c1 JUMPI
---
0x5b5: JUMPDEST 
0x5b6: V557 = 0x2c6
0x5b9: V558 = GAS
0x5ba: V559 = SUB V558 0x2c6
0x5bb: V560 = CALL V559 V521 0x0 V549 V550 V549 0x0
0x5bc: V561 = ISZERO V560
0x5bd: V562 = ISZERO V561
0x5be: V563 = 0x5c6
0x5c1: JUMPI 0x5c6 V562
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, V521, 0xa9059cbb, V546]

================================

Block 0x5c2
[0x5c2:0x5c5]
---
Predecessors: [0x5b5]
Successors: []
---
0x5c2 PUSH1 0x0
0x5c4 DUP1
0x5c5 REVERT
---
0x5c2: V564 = 0x0
0x5c5: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V521, 0xa9059cbb, V546]

================================

Block 0x5c6
[0x5c6:0x5c9]
---
Predecessors: [0x5b5]
Successors: [0x5ca]
---
0x5c6 JUMPDEST
0x5c7 POP
0x5c8 POP
0x5c9 POP
---
0x5c6: JUMPDEST 
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5ca
[0x5ca:0x5ca]
---
Predecessors: [0x301, 0x38f, 0x421, 0x4b3, 0x545, 0x5c6]
Successors: [0x5cb]
---
0x5ca JUMPDEST
---
0x5ca: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5cb
[0x5cb:0x5cb]
---
Predecessors: [0x5ca]
Successors: [0x5cc]
---
0x5cb JUMPDEST
---
0x5cb: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5cc
[0x5cc:0x5cc]
---
Predecessors: [0x5cb]
Successors: [0x5cd]
---
0x5cc JUMPDEST
---
0x5cc: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5cd
[0x5cd:0x5cd]
---
Predecessors: [0x5cc]
Successors: [0x5ce]
---
0x5cd JUMPDEST
---
0x5cd: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5ce
[0x5ce:0x610]
---
Predecessors: [0x5cd]
Successors: [0x611]
---
0x5ce JUMPDEST
0x5cf PUSH1 0x0
0x5d1 DUP1
0x5d2 MLOAD
0x5d3 PUSH1 0x20
0x5d5 PUSH2 0xfc7
0x5d8 DUP4
0x5d9 CODECOPY
0x5da DUP2
0x5db MLOAD
0x5dc SWAP2
0x5dd MSTORE
0x5de CALLER
0x5df DUP3
0x5e0 PUSH1 0x1
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 PUSH1 0x1
0x5e7 PUSH1 0xa0
0x5e9 PUSH1 0x2
0x5eb EXP
0x5ec SUB
0x5ed SWAP1
0x5ee SWAP4
0x5ef AND
0x5f0 DUP4
0x5f1 MSTORE
0x5f2 PUSH1 0x20
0x5f4 DUP4
0x5f5 ADD
0x5f6 SWAP2
0x5f7 SWAP1
0x5f8 SWAP2
0x5f9 MSTORE
0x5fa ISZERO
0x5fb ISZERO
0x5fc PUSH1 0x40
0x5fe DUP1
0x5ff DUP4
0x600 ADD
0x601 SWAP2
0x602 SWAP1
0x603 SWAP2
0x604 MSTORE
0x605 PUSH1 0x60
0x607 SWAP1
0x608 SWAP2
0x609 ADD
0x60a SWAP1
0x60b MLOAD
0x60c DUP1
0x60d SWAP2
0x60e SUB
0x60f SWAP1
0x610 LOG1
---
0x5ce: JUMPDEST 
0x5cf: V565 = 0x0
0x5d2: V566 = M[0x0]
0x5d3: V567 = 0x20
0x5d5: V568 = 0xfc7
0x5d9: CODECOPY 0x0 0xfc7 0x20
0x5db: V569 = M[0x0]
0x5dd: M[0x0] = V566
0x5de: V570 = CALLER
0x5e0: V571 = 0x1
0x5e2: V572 = 0x40
0x5e4: V573 = M[0x40]
0x5e5: V574 = 0x1
0x5e7: V575 = 0xa0
0x5e9: V576 = 0x2
0x5eb: V577 = EXP 0x2 0xa0
0x5ec: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ef: V579 = AND V570 0xffffffffffffffffffffffffffffffffffffffff
0x5f1: M[V573] = V579
0x5f2: V580 = 0x20
0x5f5: V581 = ADD V573 0x20
0x5f9: M[V581] = V126
0x5fa: V582 = ISZERO 0x1
0x5fb: V583 = ISZERO 0x0
0x5fc: V584 = 0x40
0x600: V585 = ADD V573 0x40
0x604: M[V585] = 0x1
0x605: V586 = 0x60
0x609: V587 = ADD V573 0x60
0x60b: V588 = M[0x40]
0x60e: V589 = SUB V587 V588
0x610: LOG V588 V589 V569
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x611
[0x611:0x615]
---
Predecessors: [0x231, 0x5ce]
Successors: [0x7d6]
---
0x611 JUMPDEST
0x612 PUSH2 0x7d6
0x615 JUMP
---
0x611: JUMPDEST 
0x612: V590 = 0x7d6
0x615: JUMP 0x7d6
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x616
[0x616:0x622]
---
Predecessors: [0x17d]
Successors: [0x623, 0x69a]
---
0x616 JUMPDEST
0x617 PUSH1 0x5
0x619 SLOAD
0x61a PUSH1 0x8
0x61c SLOAD
0x61d LT
0x61e ISZERO
0x61f PUSH2 0x69a
0x622 JUMPI
---
0x616: JUMPDEST 
0x617: V591 = 0x5
0x619: V592 = S[0x5]
0x61a: V593 = 0x8
0x61c: V594 = S[0x8]
0x61d: V595 = LT V594 V592
0x61e: V596 = ISZERO V595
0x61f: V597 = 0x69a
0x622: JUMPI 0x69a V596
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x623
[0x623:0x67c]
---
Predecessors: [0x616]
Successors: [0x67d, 0x681]
---
0x623 PUSH1 0x12
0x625 SLOAD
0x626 PUSH1 0x9
0x628 SLOAD
0x629 PUSH1 0x1
0x62b PUSH1 0xa0
0x62d PUSH1 0x2
0x62f EXP
0x630 SUB
0x631 SWAP1
0x632 SWAP2
0x633 AND
0x634 SWAP1
0x635 PUSH4 0xa9059cbb
0x63a SWAP1
0x63b CALLER
0x63c SWAP1
0x63d DUP5
0x63e MUL
0x63f PUSH1 0x40
0x641 MLOAD
0x642 PUSH1 0xe0
0x644 PUSH1 0x2
0x646 EXP
0x647 PUSH4 0xffffffff
0x64c DUP6
0x64d AND
0x64e MUL
0x64f DUP2
0x650 MSTORE
0x651 PUSH1 0x1
0x653 PUSH1 0xa0
0x655 PUSH1 0x2
0x657 EXP
0x658 SUB
0x659 SWAP1
0x65a SWAP3
0x65b AND
0x65c PUSH1 0x4
0x65e DUP4
0x65f ADD
0x660 MSTORE
0x661 PUSH1 0x24
0x663 DUP3
0x664 ADD
0x665 MSTORE
0x666 PUSH1 0x44
0x668 ADD
0x669 PUSH1 0x0
0x66b PUSH1 0x40
0x66d MLOAD
0x66e DUP1
0x66f DUP4
0x670 SUB
0x671 DUP2
0x672 PUSH1 0x0
0x674 DUP8
0x675 DUP1
0x676 EXTCODESIZE
0x677 ISZERO
0x678 ISZERO
0x679 PUSH2 0x681
0x67c JUMPI
---
0x623: V598 = 0x12
0x625: V599 = S[0x12]
0x626: V600 = 0x9
0x628: V601 = S[0x9]
0x629: V602 = 0x1
0x62b: V603 = 0xa0
0x62d: V604 = 0x2
0x62f: V605 = EXP 0x2 0xa0
0x630: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x633: V607 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x635: V608 = 0xa9059cbb
0x63b: V609 = CALLER
0x63e: V610 = MUL V126 V601
0x63f: V611 = 0x40
0x641: V612 = M[0x40]
0x642: V613 = 0xe0
0x644: V614 = 0x2
0x646: V615 = EXP 0x2 0xe0
0x647: V616 = 0xffffffff
0x64d: V617 = AND 0xa9059cbb 0xffffffff
0x64e: V618 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x650: M[V612] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x651: V619 = 0x1
0x653: V620 = 0xa0
0x655: V621 = 0x2
0x657: V622 = EXP 0x2 0xa0
0x658: V623 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65b: V624 = AND V609 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V625 = 0x4
0x65f: V626 = ADD V612 0x4
0x660: M[V626] = V624
0x661: V627 = 0x24
0x664: V628 = ADD V612 0x24
0x665: M[V628] = V610
0x666: V629 = 0x44
0x668: V630 = ADD 0x44 V612
0x669: V631 = 0x0
0x66b: V632 = 0x40
0x66d: V633 = M[0x40]
0x670: V634 = SUB V630 V633
0x672: V635 = 0x0
0x676: V636 = EXTCODESIZE V607
0x677: V637 = ISZERO V636
0x678: V638 = ISZERO V637
0x679: V639 = 0x681
0x67c: JUMPI 0x681 V638
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]
Exit stack: [V12, V126, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]

================================

Block 0x67d
[0x67d:0x680]
---
Predecessors: [0x623]
Successors: []
---
0x67d PUSH1 0x0
0x67f DUP1
0x680 REVERT
---
0x67d: V640 = 0x0
0x680: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]

================================

Block 0x681
[0x681:0x68d]
---
Predecessors: [0x623, 0x6a7]
Successors: [0x68e, 0x692]
---
0x681 JUMPDEST
0x682 PUSH2 0x2c6
0x685 GAS
0x686 SUB
0x687 CALL
0x688 ISZERO
0x689 ISZERO
0x68a PUSH2 0x692
0x68d JUMPI
---
0x681: JUMPDEST 
0x682: V641 = 0x2c6
0x685: V642 = GAS
0x686: V643 = SUB V642 0x2c6
0x687: V644 = CALL V643 S0 0x0 S2 S3 S4 0x0
0x688: V645 = ISZERO V644
0x689: V646 = ISZERO V645
0x68a: V647 = 0x692
0x68d: JUMPI 0x692 V646
---
Entry stack: [V12, V126, S8, 0xa9059cbb, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, S8, 0xa9059cbb, S6]

================================

Block 0x68e
[0x68e:0x691]
---
Predecessors: [0x681]
Successors: []
---
0x68e PUSH1 0x0
0x690 DUP1
0x691 REVERT
---
0x68e: V648 = 0x0
0x691: REVERT 0x0 0x0
---
Entry stack: [V12, V126, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, S2, 0xa9059cbb, S0]

================================

Block 0x692
[0x692:0x699]
---
Predecessors: [0x681, 0x705]
Successors: [0x792]
---
0x692 JUMPDEST
0x693 POP
0x694 POP
0x695 POP
0x696 PUSH2 0x792
0x699 JUMP
---
0x692: JUMPDEST 
0x696: V649 = 0x792
0x699: JUMP 0x792
---
Entry stack: [V12, V126, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x69a
[0x69a:0x6a6]
---
Predecessors: [0x616]
Successors: [0x6a7, 0x71e]
---
0x69a JUMPDEST
0x69b PUSH1 0x6
0x69d SLOAD
0x69e PUSH1 0x8
0x6a0 SLOAD
0x6a1 LT
0x6a2 ISZERO
0x6a3 PUSH2 0x71e
0x6a6 JUMPI
---
0x69a: JUMPDEST 
0x69b: V650 = 0x6
0x69d: V651 = S[0x6]
0x69e: V652 = 0x8
0x6a0: V653 = S[0x8]
0x6a1: V654 = LT V653 V651
0x6a2: V655 = ISZERO V654
0x6a3: V656 = 0x71e
0x6a6: JUMPI 0x71e V655
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x6a7
[0x6a7:0x700]
---
Predecessors: [0x69a]
Successors: [0x681, 0x701]
---
0x6a7 PUSH1 0x12
0x6a9 SLOAD
0x6aa PUSH1 0xa
0x6ac SLOAD
0x6ad PUSH1 0x1
0x6af PUSH1 0xa0
0x6b1 PUSH1 0x2
0x6b3 EXP
0x6b4 SUB
0x6b5 SWAP1
0x6b6 SWAP2
0x6b7 AND
0x6b8 SWAP1
0x6b9 PUSH4 0xa9059cbb
0x6be SWAP1
0x6bf CALLER
0x6c0 SWAP1
0x6c1 DUP5
0x6c2 MUL
0x6c3 PUSH1 0x40
0x6c5 MLOAD
0x6c6 PUSH1 0xe0
0x6c8 PUSH1 0x2
0x6ca EXP
0x6cb PUSH4 0xffffffff
0x6d0 DUP6
0x6d1 AND
0x6d2 MUL
0x6d3 DUP2
0x6d4 MSTORE
0x6d5 PUSH1 0x1
0x6d7 PUSH1 0xa0
0x6d9 PUSH1 0x2
0x6db EXP
0x6dc SUB
0x6dd SWAP1
0x6de SWAP3
0x6df AND
0x6e0 PUSH1 0x4
0x6e2 DUP4
0x6e3 ADD
0x6e4 MSTORE
0x6e5 PUSH1 0x24
0x6e7 DUP3
0x6e8 ADD
0x6e9 MSTORE
0x6ea PUSH1 0x44
0x6ec ADD
0x6ed PUSH1 0x0
0x6ef PUSH1 0x40
0x6f1 MLOAD
0x6f2 DUP1
0x6f3 DUP4
0x6f4 SUB
0x6f5 DUP2
0x6f6 PUSH1 0x0
0x6f8 DUP8
0x6f9 DUP1
0x6fa EXTCODESIZE
0x6fb ISZERO
0x6fc ISZERO
0x6fd PUSH2 0x681
0x700 JUMPI
---
0x6a7: V657 = 0x12
0x6a9: V658 = S[0x12]
0x6aa: V659 = 0xa
0x6ac: V660 = S[0xa]
0x6ad: V661 = 0x1
0x6af: V662 = 0xa0
0x6b1: V663 = 0x2
0x6b3: V664 = EXP 0x2 0xa0
0x6b4: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b7: V666 = AND V658 0xffffffffffffffffffffffffffffffffffffffff
0x6b9: V667 = 0xa9059cbb
0x6bf: V668 = CALLER
0x6c2: V669 = MUL V126 V660
0x6c3: V670 = 0x40
0x6c5: V671 = M[0x40]
0x6c6: V672 = 0xe0
0x6c8: V673 = 0x2
0x6ca: V674 = EXP 0x2 0xe0
0x6cb: V675 = 0xffffffff
0x6d1: V676 = AND 0xa9059cbb 0xffffffff
0x6d2: V677 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6d4: M[V671] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6d5: V678 = 0x1
0x6d7: V679 = 0xa0
0x6d9: V680 = 0x2
0x6db: V681 = EXP 0x2 0xa0
0x6dc: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6df: V683 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x6e0: V684 = 0x4
0x6e3: V685 = ADD V671 0x4
0x6e4: M[V685] = V683
0x6e5: V686 = 0x24
0x6e8: V687 = ADD V671 0x24
0x6e9: M[V687] = V669
0x6ea: V688 = 0x44
0x6ec: V689 = ADD 0x44 V671
0x6ed: V690 = 0x0
0x6ef: V691 = 0x40
0x6f1: V692 = M[0x40]
0x6f4: V693 = SUB V689 V692
0x6f6: V694 = 0x0
0x6fa: V695 = EXTCODESIZE V666
0x6fb: V696 = ISZERO V695
0x6fc: V697 = ISZERO V696
0x6fd: V698 = 0x681
0x700: JUMPI 0x681 V697
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]
Exit stack: [V12, V126, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]

================================

Block 0x701
[0x701:0x704]
---
Predecessors: [0x6a7]
Successors: []
---
0x701 PUSH1 0x0
0x703 DUP1
0x704 REVERT
---
0x701: V699 = 0x0
0x704: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]

================================

Block 0x705
[0x705:0x711]
---
Predecessors: []
Successors: [0x692, 0x712]
---
0x705 JUMPDEST
0x706 PUSH2 0x2c6
0x709 GAS
0x70a SUB
0x70b CALL
0x70c ISZERO
0x70d ISZERO
0x70e PUSH2 0x692
0x711 JUMPI
---
0x705: JUMPDEST 
0x706: V700 = 0x2c6
0x709: V701 = GAS
0x70a: V702 = SUB V701 0x2c6
0x70b: V703 = CALL V702 S0 S1 S2 S3 S4 S5
0x70c: V704 = ISZERO V703
0x70d: V705 = ISZERO V704
0x70e: V706 = 0x692
0x711: JUMPI 0x692 V705
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x712
[0x712:0x71d]
---
Predecessors: [0x705]
Successors: [0x792]
---
0x712 PUSH1 0x0
0x714 DUP1
0x715 REVERT
0x716 JUMPDEST
0x717 POP
0x718 POP
0x719 POP
0x71a PUSH2 0x792
0x71d JUMP
---
0x712: V707 = 0x0
0x715: REVERT 0x0 0x0
0x716: JUMPDEST 
0x71a: V708 = 0x792
0x71d: JUMP 0x792
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x71e
[0x71e:0x778]
---
Predecessors: [0x69a]
Successors: [0x779, 0x77d]
---
0x71e JUMPDEST
0x71f PUSH1 0x12
0x721 SLOAD
0x722 PUSH1 0xb
0x724 SLOAD
0x725 PUSH1 0x1
0x727 PUSH1 0xa0
0x729 PUSH1 0x2
0x72b EXP
0x72c SUB
0x72d SWAP1
0x72e SWAP2
0x72f AND
0x730 SWAP1
0x731 PUSH4 0xa9059cbb
0x736 SWAP1
0x737 CALLER
0x738 SWAP1
0x739 DUP5
0x73a MUL
0x73b PUSH1 0x40
0x73d MLOAD
0x73e PUSH1 0xe0
0x740 PUSH1 0x2
0x742 EXP
0x743 PUSH4 0xffffffff
0x748 DUP6
0x749 AND
0x74a MUL
0x74b DUP2
0x74c MSTORE
0x74d PUSH1 0x1
0x74f PUSH1 0xa0
0x751 PUSH1 0x2
0x753 EXP
0x754 SUB
0x755 SWAP1
0x756 SWAP3
0x757 AND
0x758 PUSH1 0x4
0x75a DUP4
0x75b ADD
0x75c MSTORE
0x75d PUSH1 0x24
0x75f DUP3
0x760 ADD
0x761 MSTORE
0x762 PUSH1 0x44
0x764 ADD
0x765 PUSH1 0x0
0x767 PUSH1 0x40
0x769 MLOAD
0x76a DUP1
0x76b DUP4
0x76c SUB
0x76d DUP2
0x76e PUSH1 0x0
0x770 DUP8
0x771 DUP1
0x772 EXTCODESIZE
0x773 ISZERO
0x774 ISZERO
0x775 PUSH2 0x77d
0x778 JUMPI
---
0x71e: JUMPDEST 
0x71f: V709 = 0x12
0x721: V710 = S[0x12]
0x722: V711 = 0xb
0x724: V712 = S[0xb]
0x725: V713 = 0x1
0x727: V714 = 0xa0
0x729: V715 = 0x2
0x72b: V716 = EXP 0x2 0xa0
0x72c: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72f: V718 = AND V710 0xffffffffffffffffffffffffffffffffffffffff
0x731: V719 = 0xa9059cbb
0x737: V720 = CALLER
0x73a: V721 = MUL V126 V712
0x73b: V722 = 0x40
0x73d: V723 = M[0x40]
0x73e: V724 = 0xe0
0x740: V725 = 0x2
0x742: V726 = EXP 0x2 0xe0
0x743: V727 = 0xffffffff
0x749: V728 = AND 0xa9059cbb 0xffffffff
0x74a: V729 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x74c: M[V723] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x74d: V730 = 0x1
0x74f: V731 = 0xa0
0x751: V732 = 0x2
0x753: V733 = EXP 0x2 0xa0
0x754: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x757: V735 = AND V720 0xffffffffffffffffffffffffffffffffffffffff
0x758: V736 = 0x4
0x75b: V737 = ADD V723 0x4
0x75c: M[V737] = V735
0x75d: V738 = 0x24
0x760: V739 = ADD V723 0x24
0x761: M[V739] = V721
0x762: V740 = 0x44
0x764: V741 = ADD 0x44 V723
0x765: V742 = 0x0
0x767: V743 = 0x40
0x769: V744 = M[0x40]
0x76c: V745 = SUB V741 V744
0x76e: V746 = 0x0
0x772: V747 = EXTCODESIZE V718
0x773: V748 = ISZERO V747
0x774: V749 = ISZERO V748
0x775: V750 = 0x77d
0x778: JUMPI 0x77d V749
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]
Exit stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]

================================

Block 0x779
[0x779:0x77c]
---
Predecessors: [0x71e]
Successors: []
---
0x779 PUSH1 0x0
0x77b DUP1
0x77c REVERT
---
0x779: V751 = 0x0
0x77c: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]

================================

Block 0x77d
[0x77d:0x789]
---
Predecessors: [0x71e]
Successors: [0x78a, 0x78e]
---
0x77d JUMPDEST
0x77e PUSH2 0x2c6
0x781 GAS
0x782 SUB
0x783 CALL
0x784 ISZERO
0x785 ISZERO
0x786 PUSH2 0x78e
0x789 JUMPI
---
0x77d: JUMPDEST 
0x77e: V752 = 0x2c6
0x781: V753 = GAS
0x782: V754 = SUB V753 0x2c6
0x783: V755 = CALL V754 V718 0x0 V744 V745 V744 0x0
0x784: V756 = ISZERO V755
0x785: V757 = ISZERO V756
0x786: V758 = 0x78e
0x789: JUMPI 0x78e V757
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, V718, 0xa9059cbb, V741]

================================

Block 0x78a
[0x78a:0x78d]
---
Predecessors: [0x77d]
Successors: []
---
0x78a PUSH1 0x0
0x78c DUP1
0x78d REVERT
---
0x78a: V759 = 0x0
0x78d: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V718, 0xa9059cbb, V741]

================================

Block 0x78e
[0x78e:0x791]
---
Predecessors: [0x77d]
Successors: [0x792]
---
0x78e JUMPDEST
0x78f POP
0x790 POP
0x791 POP
---
0x78e: JUMPDEST 
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x792
[0x792:0x792]
---
Predecessors: [0x692, 0x712, 0x78e]
Successors: [0x793]
---
0x792 JUMPDEST
---
0x792: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x793
[0x793:0x7d5]
---
Predecessors: [0x792]
Successors: [0x7d6]
---
0x793 JUMPDEST
0x794 PUSH1 0x0
0x796 DUP1
0x797 MLOAD
0x798 PUSH1 0x20
0x79a PUSH2 0xfc7
0x79d DUP4
0x79e CODECOPY
0x79f DUP2
0x7a0 MLOAD
0x7a1 SWAP2
0x7a2 MSTORE
0x7a3 CALLER
0x7a4 DUP3
0x7a5 PUSH1 0x1
0x7a7 PUSH1 0x40
0x7a9 MLOAD
0x7aa PUSH1 0x1
0x7ac PUSH1 0xa0
0x7ae PUSH1 0x2
0x7b0 EXP
0x7b1 SUB
0x7b2 SWAP1
0x7b3 SWAP4
0x7b4 AND
0x7b5 DUP4
0x7b6 MSTORE
0x7b7 PUSH1 0x20
0x7b9 DUP4
0x7ba ADD
0x7bb SWAP2
0x7bc SWAP1
0x7bd SWAP2
0x7be MSTORE
0x7bf ISZERO
0x7c0 ISZERO
0x7c1 PUSH1 0x40
0x7c3 DUP1
0x7c4 DUP4
0x7c5 ADD
0x7c6 SWAP2
0x7c7 SWAP1
0x7c8 SWAP2
0x7c9 MSTORE
0x7ca PUSH1 0x60
0x7cc SWAP1
0x7cd SWAP2
0x7ce ADD
0x7cf SWAP1
0x7d0 MLOAD
0x7d1 DUP1
0x7d2 SWAP2
0x7d3 SUB
0x7d4 SWAP1
0x7d5 LOG1
---
0x793: JUMPDEST 
0x794: V760 = 0x0
0x797: V761 = M[0x0]
0x798: V762 = 0x20
0x79a: V763 = 0xfc7
0x79e: CODECOPY 0x0 0xfc7 0x20
0x7a0: V764 = M[0x0]
0x7a2: M[0x0] = V761
0x7a3: V765 = CALLER
0x7a5: V766 = 0x1
0x7a7: V767 = 0x40
0x7a9: V768 = M[0x40]
0x7aa: V769 = 0x1
0x7ac: V770 = 0xa0
0x7ae: V771 = 0x2
0x7b0: V772 = EXP 0x2 0xa0
0x7b1: V773 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b4: V774 = AND V765 0xffffffffffffffffffffffffffffffffffffffff
0x7b6: M[V768] = V774
0x7b7: V775 = 0x20
0x7ba: V776 = ADD V768 0x20
0x7be: M[V776] = V126
0x7bf: V777 = ISZERO 0x1
0x7c0: V778 = ISZERO 0x0
0x7c1: V779 = 0x40
0x7c5: V780 = ADD V768 0x40
0x7c9: M[V780] = 0x1
0x7ca: V781 = 0x60
0x7ce: V782 = ADD V768 0x60
0x7d0: V783 = M[0x40]
0x7d3: V784 = SUB V782 V783
0x7d5: LOG V783 V784 V764
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x7d6
[0x7d6:0x7d6]
---
Predecessors: [0x611, 0x793]
Successors: [0x7d7]
---
0x7d6 JUMPDEST
---
0x7d6: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x7d7
[0x7d7:0x7d9]
---
Predecessors: [0x7d6]
Successors: []
---
0x7d7 JUMPDEST
0x7d8 POP
0x7d9 STOP
---
0x7d7: JUMPDEST 
0x7d9: STOP 
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7da
[0x7da:0x7e0]
---
Predecessors: [0xb]
Successors: [0x7e1, 0x7e5]
---
0x7da JUMPDEST
0x7db CALLVALUE
0x7dc ISZERO
0x7dd PUSH2 0x7e5
0x7e0 JUMPI
---
0x7da: JUMPDEST 
0x7db: V785 = CALLVALUE
0x7dc: V786 = ISZERO V785
0x7dd: V787 = 0x7e5
0x7e0: JUMPI 0x7e5 V786
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e1
[0x7e1:0x7e4]
---
Predecessors: [0x7da]
Successors: []
---
0x7e1 PUSH1 0x0
0x7e3 DUP1
0x7e4 REVERT
---
0x7e1: V788 = 0x0
0x7e4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e5
[0x7e5:0x7ec]
---
Predecessors: [0x7da]
Successors: [0xbf3]
---
0x7e5 JUMPDEST
0x7e6 PUSH2 0x7ed
0x7e9 PUSH2 0xbf3
0x7ec JUMP
---
0x7e5: JUMPDEST 
0x7e6: V789 = 0x7ed
0x7e9: V790 = 0xbf3
0x7ec: JUMP 0xbf3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ed]
Exit stack: [V12, 0x7ed]

================================

Block 0x7ed
[0x7ed:0x7ee]
---
Predecessors: [0xc3c, 0xcd2, 0xd26, 0xdb6, 0xde0, 0xe35, 0xfc3]
Successors: []
---
0x7ed JUMPDEST
0x7ee STOP
---
0x7ed: JUMPDEST 
0x7ee: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ef
[0x7ef:0x7f5]
---
Predecessors: [0x25]
Successors: [0x7f6, 0x7fa]
---
0x7ef JUMPDEST
0x7f0 CALLVALUE
0x7f1 ISZERO
0x7f2 PUSH2 0x7fa
0x7f5 JUMPI
---
0x7ef: JUMPDEST 
0x7f0: V791 = CALLVALUE
0x7f1: V792 = ISZERO V791
0x7f2: V793 = 0x7fa
0x7f5: JUMPI 0x7fa V792
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f6
[0x7f6:0x7f9]
---
Predecessors: [0x7ef]
Successors: []
---
0x7f6 PUSH1 0x0
0x7f8 DUP1
0x7f9 REVERT
---
0x7f6: V794 = 0x0
0x7f9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7fa
[0x7fa:0x801]
---
Predecessors: [0x7ef]
Successors: [0xc3e]
---
0x7fa JUMPDEST
0x7fb PUSH2 0x802
0x7fe PUSH2 0xc3e
0x801 JUMP
---
0x7fa: JUMPDEST 
0x7fb: V795 = 0x802
0x7fe: V796 = 0xc3e
0x801: JUMP 0xc3e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0x802
[0x802:0x813]
---
Predecessors: [0xc3e, 0xcd5, 0xcdb, 0xce1, 0xcf6, 0xcfc, 0xd55, 0xd67, 0xd6d, 0xd73, 0xd79, 0xd7f, 0xd85, 0xd8b, 0xde2, 0xde8, 0xdee]
Successors: []
---
0x802 JUMPDEST
0x803 PUSH1 0x40
0x805 MLOAD
0x806 SWAP1
0x807 DUP2
0x808 MSTORE
0x809 PUSH1 0x20
0x80b ADD
0x80c PUSH1 0x40
0x80e MLOAD
0x80f DUP1
0x810 SWAP2
0x811 SUB
0x812 SWAP1
0x813 RETURN
---
0x802: JUMPDEST 
0x803: V797 = 0x40
0x805: V798 = M[0x40]
0x808: M[V798] = S0
0x809: V799 = 0x20
0x80b: V800 = ADD 0x20 V798
0x80c: V801 = 0x40
0x80e: V802 = M[0x40]
0x811: V803 = SUB V800 V802
0x813: RETURN V802 V803
---
Entry stack: [V12, 0x802, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x802]

================================

Block 0x814
[0x814:0x81a]
---
Predecessors: [0x30]
Successors: [0x81b, 0x81f]
---
0x814 JUMPDEST
0x815 CALLVALUE
0x816 ISZERO
0x817 PUSH2 0x81f
0x81a JUMPI
---
0x814: JUMPDEST 
0x815: V804 = CALLVALUE
0x816: V805 = ISZERO V804
0x817: V806 = 0x81f
0x81a: JUMPI 0x81f V805
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81b
[0x81b:0x81e]
---
Predecessors: [0x814]
Successors: []
---
0x81b PUSH1 0x0
0x81d DUP1
0x81e REVERT
---
0x81b: V807 = 0x0
0x81e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81f
[0x81f:0x829]
---
Predecessors: [0x814]
Successors: [0xc44]
---
0x81f JUMPDEST
0x820 PUSH2 0x7ed
0x823 PUSH1 0x4
0x825 CALLDATALOAD
0x826 PUSH2 0xc44
0x829 JUMP
---
0x81f: JUMPDEST 
0x820: V808 = 0x7ed
0x823: V809 = 0x4
0x825: V810 = CALLDATALOAD 0x4
0x826: V811 = 0xc44
0x829: JUMP 0xc44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ed, V810]
Exit stack: [V12, 0x7ed, V810]

================================

Block 0x82a
[0x82a:0x82b]
---
Predecessors: []
Successors: []
---
0x82a JUMPDEST
0x82b STOP
---
0x82a: JUMPDEST 
0x82b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x82c
[0x82c:0x832]
---
Predecessors: [0x3b]
Successors: [0x833, 0x837]
---
0x82c JUMPDEST
0x82d CALLVALUE
0x82e ISZERO
0x82f PUSH2 0x837
0x832 JUMPI
---
0x82c: JUMPDEST 
0x82d: V812 = CALLVALUE
0x82e: V813 = ISZERO V812
0x82f: V814 = 0x837
0x832: JUMPI 0x837 V813
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x833
[0x833:0x836]
---
Predecessors: [0x82c]
Successors: []
---
0x833 PUSH1 0x0
0x835 DUP1
0x836 REVERT
---
0x833: V815 = 0x0
0x836: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x837
[0x837:0x83e]
---
Predecessors: [0x82c]
Successors: [0xcd5]
---
0x837 JUMPDEST
0x838 PUSH2 0x802
0x83b PUSH2 0xcd5
0x83e JUMP
---
0x837: JUMPDEST 
0x838: V816 = 0x802
0x83b: V817 = 0xcd5
0x83e: JUMP 0xcd5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0x83f
[0x83f:0x850]
---
Predecessors: []
Successors: []
---
0x83f JUMPDEST
0x840 PUSH1 0x40
0x842 MLOAD
0x843 SWAP1
0x844 DUP2
0x845 MSTORE
0x846 PUSH1 0x20
0x848 ADD
0x849 PUSH1 0x40
0x84b MLOAD
0x84c DUP1
0x84d SWAP2
0x84e SUB
0x84f SWAP1
0x850 RETURN
---
0x83f: JUMPDEST 
0x840: V818 = 0x40
0x842: V819 = M[0x40]
0x845: M[V819] = S0
0x846: V820 = 0x20
0x848: V821 = ADD 0x20 V819
0x849: V822 = 0x40
0x84b: V823 = M[0x40]
0x84e: V824 = SUB V821 V823
0x850: RETURN V823 V824
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x851
[0x851:0x857]
---
Predecessors: [0x46]
Successors: [0x858, 0x85c]
---
0x851 JUMPDEST
0x852 CALLVALUE
0x853 ISZERO
0x854 PUSH2 0x85c
0x857 JUMPI
---
0x851: JUMPDEST 
0x852: V825 = CALLVALUE
0x853: V826 = ISZERO V825
0x854: V827 = 0x85c
0x857: JUMPI 0x85c V826
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x858
[0x858:0x85b]
---
Predecessors: [0x851]
Successors: []
---
0x858 PUSH1 0x0
0x85a DUP1
0x85b REVERT
---
0x858: V828 = 0x0
0x85b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x85c
[0x85c:0x863]
---
Predecessors: [0x851]
Successors: [0xcdb]
---
0x85c JUMPDEST
0x85d PUSH2 0x802
0x860 PUSH2 0xcdb
0x863 JUMP
---
0x85c: JUMPDEST 
0x85d: V829 = 0x802
0x860: V830 = 0xcdb
0x863: JUMP 0xcdb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0x864
[0x864:0x875]
---
Predecessors: []
Successors: []
---
0x864 JUMPDEST
0x865 PUSH1 0x40
0x867 MLOAD
0x868 SWAP1
0x869 DUP2
0x86a MSTORE
0x86b PUSH1 0x20
0x86d ADD
0x86e PUSH1 0x40
0x870 MLOAD
0x871 DUP1
0x872 SWAP2
0x873 SUB
0x874 SWAP1
0x875 RETURN
---
0x864: JUMPDEST 
0x865: V831 = 0x40
0x867: V832 = M[0x40]
0x86a: M[V832] = S0
0x86b: V833 = 0x20
0x86d: V834 = ADD 0x20 V832
0x86e: V835 = 0x40
0x870: V836 = M[0x40]
0x873: V837 = SUB V834 V836
0x875: RETURN V836 V837
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x876
[0x876:0x87c]
---
Predecessors: [0x51]
Successors: [0x87d, 0x881]
---
0x876 JUMPDEST
0x877 CALLVALUE
0x878 ISZERO
0x879 PUSH2 0x881
0x87c JUMPI
---
0x876: JUMPDEST 
0x877: V838 = CALLVALUE
0x878: V839 = ISZERO V838
0x879: V840 = 0x881
0x87c: JUMPI 0x881 V839
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x87d
[0x87d:0x880]
---
Predecessors: [0x876]
Successors: []
---
0x87d PUSH1 0x0
0x87f DUP1
0x880 REVERT
---
0x87d: V841 = 0x0
0x880: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x881
[0x881:0x888]
---
Predecessors: [0x876]
Successors: [0xce1]
---
0x881 JUMPDEST
0x882 PUSH2 0x802
0x885 PUSH2 0xce1
0x888 JUMP
---
0x881: JUMPDEST 
0x882: V842 = 0x802
0x885: V843 = 0xce1
0x888: JUMP 0xce1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0x889
[0x889:0x89a]
---
Predecessors: []
Successors: []
---
0x889 JUMPDEST
0x88a PUSH1 0x40
0x88c MLOAD
0x88d SWAP1
0x88e DUP2
0x88f MSTORE
0x890 PUSH1 0x20
0x892 ADD
0x893 PUSH1 0x40
0x895 MLOAD
0x896 DUP1
0x897 SWAP2
0x898 SUB
0x899 SWAP1
0x89a RETURN
---
0x889: JUMPDEST 
0x88a: V844 = 0x40
0x88c: V845 = M[0x40]
0x88f: M[V845] = S0
0x890: V846 = 0x20
0x892: V847 = ADD 0x20 V845
0x893: V848 = 0x40
0x895: V849 = M[0x40]
0x898: V850 = SUB V847 V849
0x89a: RETURN V849 V850
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x89b
[0x89b:0x8a1]
---
Predecessors: [0x5c]
Successors: [0x8a2, 0x8a6]
---
0x89b JUMPDEST
0x89c CALLVALUE
0x89d ISZERO
0x89e PUSH2 0x8a6
0x8a1 JUMPI
---
0x89b: JUMPDEST 
0x89c: V851 = CALLVALUE
0x89d: V852 = ISZERO V851
0x89e: V853 = 0x8a6
0x8a1: JUMPI 0x8a6 V852
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a2
[0x8a2:0x8a5]
---
Predecessors: [0x89b]
Successors: []
---
0x8a2 PUSH1 0x0
0x8a4 DUP1
0x8a5 REVERT
---
0x8a2: V854 = 0x0
0x8a5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a6
[0x8a6:0x8ad]
---
Predecessors: [0x89b]
Successors: [0xce7]
---
0x8a6 JUMPDEST
0x8a7 PUSH2 0x8ae
0x8aa PUSH2 0xce7
0x8ad JUMP
---
0x8a6: JUMPDEST 
0x8a7: V855 = 0x8ae
0x8aa: V856 = 0xce7
0x8ad: JUMP 0xce7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8ae]
Exit stack: [V12, 0x8ae]

================================

Block 0x8ae
[0x8ae:0x8c9]
---
Predecessors: [0xce7, 0xd28, 0xd46]
Successors: []
---
0x8ae JUMPDEST
0x8af PUSH1 0x40
0x8b1 MLOAD
0x8b2 PUSH1 0x1
0x8b4 PUSH1 0xa0
0x8b6 PUSH1 0x2
0x8b8 EXP
0x8b9 SUB
0x8ba SWAP1
0x8bb SWAP2
0x8bc AND
0x8bd DUP2
0x8be MSTORE
0x8bf PUSH1 0x20
0x8c1 ADD
0x8c2 PUSH1 0x40
0x8c4 MLOAD
0x8c5 DUP1
0x8c6 SWAP2
0x8c7 SUB
0x8c8 SWAP1
0x8c9 RETURN
---
0x8ae: JUMPDEST 
0x8af: V857 = 0x40
0x8b1: V858 = M[0x40]
0x8b2: V859 = 0x1
0x8b4: V860 = 0xa0
0x8b6: V861 = 0x2
0x8b8: V862 = EXP 0x2 0xa0
0x8b9: V863 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8bc: V864 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8be: M[V858] = V864
0x8bf: V865 = 0x20
0x8c1: V866 = ADD 0x20 V858
0x8c2: V867 = 0x40
0x8c4: V868 = M[0x40]
0x8c7: V869 = SUB V866 V868
0x8c9: RETURN V868 V869
---
Entry stack: [V12, 0x8ae, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x8ae]

================================

Block 0x8ca
[0x8ca:0x8d0]
---
Predecessors: [0x67]
Successors: [0x8d1, 0x8d5]
---
0x8ca JUMPDEST
0x8cb CALLVALUE
0x8cc ISZERO
0x8cd PUSH2 0x8d5
0x8d0 JUMPI
---
0x8ca: JUMPDEST 
0x8cb: V870 = CALLVALUE
0x8cc: V871 = ISZERO V870
0x8cd: V872 = 0x8d5
0x8d0: JUMPI 0x8d5 V871
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d1
[0x8d1:0x8d4]
---
Predecessors: [0x8ca]
Successors: []
---
0x8d1 PUSH1 0x0
0x8d3 DUP1
0x8d4 REVERT
---
0x8d1: V873 = 0x0
0x8d4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d5
[0x8d5:0x8dc]
---
Predecessors: [0x8ca]
Successors: [0xcf6]
---
0x8d5 JUMPDEST
0x8d6 PUSH2 0x802
0x8d9 PUSH2 0xcf6
0x8dc JUMP
---
0x8d5: JUMPDEST 
0x8d6: V874 = 0x802
0x8d9: V875 = 0xcf6
0x8dc: JUMP 0xcf6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0x8dd
[0x8dd:0x8ee]
---
Predecessors: []
Successors: []
---
0x8dd JUMPDEST
0x8de PUSH1 0x40
0x8e0 MLOAD
0x8e1 SWAP1
0x8e2 DUP2
0x8e3 MSTORE
0x8e4 PUSH1 0x20
0x8e6 ADD
0x8e7 PUSH1 0x40
0x8e9 MLOAD
0x8ea DUP1
0x8eb SWAP2
0x8ec SUB
0x8ed SWAP1
0x8ee RETURN
---
0x8dd: JUMPDEST 
0x8de: V876 = 0x40
0x8e0: V877 = M[0x40]
0x8e3: M[V877] = S0
0x8e4: V878 = 0x20
0x8e6: V879 = ADD 0x20 V877
0x8e7: V880 = 0x40
0x8e9: V881 = M[0x40]
0x8ec: V882 = SUB V879 V881
0x8ee: RETURN V881 V882
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8ef
[0x8ef:0x8f5]
---
Predecessors: [0x72]
Successors: [0x8f6, 0x8fa]
---
0x8ef JUMPDEST
0x8f0 CALLVALUE
0x8f1 ISZERO
0x8f2 PUSH2 0x8fa
0x8f5 JUMPI
---
0x8ef: JUMPDEST 
0x8f0: V883 = CALLVALUE
0x8f1: V884 = ISZERO V883
0x8f2: V885 = 0x8fa
0x8f5: JUMPI 0x8fa V884
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f6
[0x8f6:0x8f9]
---
Predecessors: [0x8ef]
Successors: []
---
0x8f6 PUSH1 0x0
0x8f8 DUP1
0x8f9 REVERT
---
0x8f6: V886 = 0x0
0x8f9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8fa
[0x8fa:0x901]
---
Predecessors: [0x8ef]
Successors: [0xcfc]
---
0x8fa JUMPDEST
0x8fb PUSH2 0x802
0x8fe PUSH2 0xcfc
0x901 JUMP
---
0x8fa: JUMPDEST 
0x8fb: V887 = 0x802
0x8fe: V888 = 0xcfc
0x901: JUMP 0xcfc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0x902
[0x902:0x913]
---
Predecessors: []
Successors: []
---
0x902 JUMPDEST
0x903 PUSH1 0x40
0x905 MLOAD
0x906 SWAP1
0x907 DUP2
0x908 MSTORE
0x909 PUSH1 0x20
0x90b ADD
0x90c PUSH1 0x40
0x90e MLOAD
0x90f DUP1
0x910 SWAP2
0x911 SUB
0x912 SWAP1
0x913 RETURN
---
0x902: JUMPDEST 
0x903: V889 = 0x40
0x905: V890 = M[0x40]
0x908: M[V890] = S0
0x909: V891 = 0x20
0x90b: V892 = ADD 0x20 V890
0x90c: V893 = 0x40
0x90e: V894 = M[0x40]
0x911: V895 = SUB V892 V894
0x913: RETURN V894 V895
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x914
[0x914:0x91a]
---
Predecessors: [0x7d]
Successors: [0x91b, 0x91f]
---
0x914 JUMPDEST
0x915 CALLVALUE
0x916 ISZERO
0x917 PUSH2 0x91f
0x91a JUMPI
---
0x914: JUMPDEST 
0x915: V896 = CALLVALUE
0x916: V897 = ISZERO V896
0x917: V898 = 0x91f
0x91a: JUMPI 0x91f V897
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91b
[0x91b:0x91e]
---
Predecessors: [0x914]
Successors: []
---
0x91b PUSH1 0x0
0x91d DUP1
0x91e REVERT
---
0x91b: V899 = 0x0
0x91e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91f
[0x91f:0x926]
---
Predecessors: [0x914]
Successors: [0xd02]
---
0x91f JUMPDEST
0x920 PUSH2 0x7ed
0x923 PUSH2 0xd02
0x926 JUMP
---
0x91f: JUMPDEST 
0x920: V900 = 0x7ed
0x923: V901 = 0xd02
0x926: JUMP 0xd02
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ed]
Exit stack: [V12, 0x7ed]

================================

Block 0x927
[0x927:0x928]
---
Predecessors: []
Successors: []
---
0x927 JUMPDEST
0x928 STOP
---
0x927: JUMPDEST 
0x928: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x929
[0x929:0x92f]
---
Predecessors: [0x88]
Successors: [0x930, 0x934]
---
0x929 JUMPDEST
0x92a CALLVALUE
0x92b ISZERO
0x92c PUSH2 0x934
0x92f JUMPI
---
0x929: JUMPDEST 
0x92a: V902 = CALLVALUE
0x92b: V903 = ISZERO V902
0x92c: V904 = 0x934
0x92f: JUMPI 0x934 V903
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x930
[0x930:0x933]
---
Predecessors: [0x929]
Successors: []
---
0x930 PUSH1 0x0
0x932 DUP1
0x933 REVERT
---
0x930: V905 = 0x0
0x933: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x934
[0x934:0x93b]
---
Predecessors: [0x929]
Successors: [0xd28]
---
0x934 JUMPDEST
0x935 PUSH2 0x8ae
0x938 PUSH2 0xd28
0x93b JUMP
---
0x934: JUMPDEST 
0x935: V906 = 0x8ae
0x938: V907 = 0xd28
0x93b: JUMP 0xd28
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8ae]
Exit stack: [V12, 0x8ae]

================================

Block 0x93c
[0x93c:0x957]
---
Predecessors: []
Successors: []
---
0x93c JUMPDEST
0x93d PUSH1 0x40
0x93f MLOAD
0x940 PUSH1 0x1
0x942 PUSH1 0xa0
0x944 PUSH1 0x2
0x946 EXP
0x947 SUB
0x948 SWAP1
0x949 SWAP2
0x94a AND
0x94b DUP2
0x94c MSTORE
0x94d PUSH1 0x20
0x94f ADD
0x950 PUSH1 0x40
0x952 MLOAD
0x953 DUP1
0x954 SWAP2
0x955 SUB
0x956 SWAP1
0x957 RETURN
---
0x93c: JUMPDEST 
0x93d: V908 = 0x40
0x93f: V909 = M[0x40]
0x940: V910 = 0x1
0x942: V911 = 0xa0
0x944: V912 = 0x2
0x946: V913 = EXP 0x2 0xa0
0x947: V914 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94a: V915 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x94c: M[V909] = V915
0x94d: V916 = 0x20
0x94f: V917 = ADD 0x20 V909
0x950: V918 = 0x40
0x952: V919 = M[0x40]
0x955: V920 = SUB V917 V919
0x957: RETURN V919 V920
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x958
[0x958:0x95e]
---
Predecessors: [0x93]
Successors: [0x95f, 0x963]
---
0x958 JUMPDEST
0x959 CALLVALUE
0x95a ISZERO
0x95b PUSH2 0x963
0x95e JUMPI
---
0x958: JUMPDEST 
0x959: V921 = CALLVALUE
0x95a: V922 = ISZERO V921
0x95b: V923 = 0x963
0x95e: JUMPI 0x963 V922
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95f
[0x95f:0x962]
---
Predecessors: [0x958]
Successors: []
---
0x95f PUSH1 0x0
0x961 DUP1
0x962 REVERT
---
0x95f: V924 = 0x0
0x962: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x963
[0x963:0x96a]
---
Predecessors: [0x958]
Successors: [0xd37]
---
0x963 JUMPDEST
0x964 PUSH2 0x96b
0x967 PUSH2 0xd37
0x96a JUMP
---
0x963: JUMPDEST 
0x964: V925 = 0x96b
0x967: V926 = 0xd37
0x96a: JUMP 0xd37
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x96b]
Exit stack: [V12, 0x96b]

================================

Block 0x96b
[0x96b:0x97e]
---
Predecessors: [0xd37, 0xdf4, 0xe02]
Successors: []
---
0x96b JUMPDEST
0x96c PUSH1 0x40
0x96e MLOAD
0x96f SWAP1
0x970 ISZERO
0x971 ISZERO
0x972 DUP2
0x973 MSTORE
0x974 PUSH1 0x20
0x976 ADD
0x977 PUSH1 0x40
0x979 MLOAD
0x97a DUP1
0x97b SWAP2
0x97c SUB
0x97d SWAP1
0x97e RETURN
---
0x96b: JUMPDEST 
0x96c: V927 = 0x40
0x96e: V928 = M[0x40]
0x970: V929 = ISZERO S0
0x971: V930 = ISZERO V929
0x973: M[V928] = V930
0x974: V931 = 0x20
0x976: V932 = ADD 0x20 V928
0x977: V933 = 0x40
0x979: V934 = M[0x40]
0x97c: V935 = SUB V932 V934
0x97e: RETURN V934 V935
---
Entry stack: [V12, 0x96b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x96b]

================================

Block 0x97f
[0x97f:0x985]
---
Predecessors: [0x9e]
Successors: [0x986, 0x98a]
---
0x97f JUMPDEST
0x980 CALLVALUE
0x981 ISZERO
0x982 PUSH2 0x98a
0x985 JUMPI
---
0x97f: JUMPDEST 
0x980: V936 = CALLVALUE
0x981: V937 = ISZERO V936
0x982: V938 = 0x98a
0x985: JUMPI 0x98a V937
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x986
[0x986:0x989]
---
Predecessors: [0x97f]
Successors: []
---
0x986 PUSH1 0x0
0x988 DUP1
0x989 REVERT
---
0x986: V939 = 0x0
0x989: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x98a
[0x98a:0x991]
---
Predecessors: [0x97f]
Successors: [0xd46]
---
0x98a JUMPDEST
0x98b PUSH2 0x8ae
0x98e PUSH2 0xd46
0x991 JUMP
---
0x98a: JUMPDEST 
0x98b: V940 = 0x8ae
0x98e: V941 = 0xd46
0x991: JUMP 0xd46
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8ae]
Exit stack: [V12, 0x8ae]

================================

Block 0x992
[0x992:0x9ad]
---
Predecessors: []
Successors: []
---
0x992 JUMPDEST
0x993 PUSH1 0x40
0x995 MLOAD
0x996 PUSH1 0x1
0x998 PUSH1 0xa0
0x99a PUSH1 0x2
0x99c EXP
0x99d SUB
0x99e SWAP1
0x99f SWAP2
0x9a0 AND
0x9a1 DUP2
0x9a2 MSTORE
0x9a3 PUSH1 0x20
0x9a5 ADD
0x9a6 PUSH1 0x40
0x9a8 MLOAD
0x9a9 DUP1
0x9aa SWAP2
0x9ab SUB
0x9ac SWAP1
0x9ad RETURN
---
0x992: JUMPDEST 
0x993: V942 = 0x40
0x995: V943 = M[0x40]
0x996: V944 = 0x1
0x998: V945 = 0xa0
0x99a: V946 = 0x2
0x99c: V947 = EXP 0x2 0xa0
0x99d: V948 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a0: V949 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x9a2: M[V943] = V949
0x9a3: V950 = 0x20
0x9a5: V951 = ADD 0x20 V943
0x9a6: V952 = 0x40
0x9a8: V953 = M[0x40]
0x9ab: V954 = SUB V951 V953
0x9ad: RETURN V953 V954
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9ae
[0x9ae:0x9b4]
---
Predecessors: [0xa9]
Successors: [0x9b5, 0x9b9]
---
0x9ae JUMPDEST
0x9af CALLVALUE
0x9b0 ISZERO
0x9b1 PUSH2 0x9b9
0x9b4 JUMPI
---
0x9ae: JUMPDEST 
0x9af: V955 = CALLVALUE
0x9b0: V956 = ISZERO V955
0x9b1: V957 = 0x9b9
0x9b4: JUMPI 0x9b9 V956
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b5
[0x9b5:0x9b8]
---
Predecessors: [0x9ae]
Successors: []
---
0x9b5 PUSH1 0x0
0x9b7 DUP1
0x9b8 REVERT
---
0x9b5: V958 = 0x0
0x9b8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b9
[0x9b9:0x9cc]
---
Predecessors: [0x9ae]
Successors: [0xd55]
---
0x9b9 JUMPDEST
0x9ba PUSH2 0x802
0x9bd PUSH1 0x1
0x9bf PUSH1 0xa0
0x9c1 PUSH1 0x2
0x9c3 EXP
0x9c4 SUB
0x9c5 PUSH1 0x4
0x9c7 CALLDATALOAD
0x9c8 AND
0x9c9 PUSH2 0xd55
0x9cc JUMP
---
0x9b9: JUMPDEST 
0x9ba: V959 = 0x802
0x9bd: V960 = 0x1
0x9bf: V961 = 0xa0
0x9c1: V962 = 0x2
0x9c3: V963 = EXP 0x2 0xa0
0x9c4: V964 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c5: V965 = 0x4
0x9c7: V966 = CALLDATALOAD 0x4
0x9c8: V967 = AND V966 0xffffffffffffffffffffffffffffffffffffffff
0x9c9: V968 = 0xd55
0x9cc: JUMP 0xd55
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802, V967]
Exit stack: [V12, 0x802, V967]

================================

Block 0x9cd
[0x9cd:0x9de]
---
Predecessors: []
Successors: []
---
0x9cd JUMPDEST
0x9ce PUSH1 0x40
0x9d0 MLOAD
0x9d1 SWAP1
0x9d2 DUP2
0x9d3 MSTORE
0x9d4 PUSH1 0x20
0x9d6 ADD
0x9d7 PUSH1 0x40
0x9d9 MLOAD
0x9da DUP1
0x9db SWAP2
0x9dc SUB
0x9dd SWAP1
0x9de RETURN
---
0x9cd: JUMPDEST 
0x9ce: V969 = 0x40
0x9d0: V970 = M[0x40]
0x9d3: M[V970] = S0
0x9d4: V971 = 0x20
0x9d6: V972 = ADD 0x20 V970
0x9d7: V973 = 0x40
0x9d9: V974 = M[0x40]
0x9dc: V975 = SUB V972 V974
0x9de: RETURN V974 V975
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9df
[0x9df:0x9e5]
---
Predecessors: [0xb4]
Successors: [0x9e6, 0x9ea]
---
0x9df JUMPDEST
0x9e0 CALLVALUE
0x9e1 ISZERO
0x9e2 PUSH2 0x9ea
0x9e5 JUMPI
---
0x9df: JUMPDEST 
0x9e0: V976 = CALLVALUE
0x9e1: V977 = ISZERO V976
0x9e2: V978 = 0x9ea
0x9e5: JUMPI 0x9ea V977
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e6
[0x9e6:0x9e9]
---
Predecessors: [0x9df]
Successors: []
---
0x9e6 PUSH1 0x0
0x9e8 DUP1
0x9e9 REVERT
---
0x9e6: V979 = 0x0
0x9e9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9ea
[0x9ea:0x9f1]
---
Predecessors: [0x9df]
Successors: [0xd67]
---
0x9ea JUMPDEST
0x9eb PUSH2 0x802
0x9ee PUSH2 0xd67
0x9f1 JUMP
---
0x9ea: JUMPDEST 
0x9eb: V980 = 0x802
0x9ee: V981 = 0xd67
0x9f1: JUMP 0xd67
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0x9f2
[0x9f2:0xa03]
---
Predecessors: []
Successors: []
---
0x9f2 JUMPDEST
0x9f3 PUSH1 0x40
0x9f5 MLOAD
0x9f6 SWAP1
0x9f7 DUP2
0x9f8 MSTORE
0x9f9 PUSH1 0x20
0x9fb ADD
0x9fc PUSH1 0x40
0x9fe MLOAD
0x9ff DUP1
0xa00 SWAP2
0xa01 SUB
0xa02 SWAP1
0xa03 RETURN
---
0x9f2: JUMPDEST 
0x9f3: V982 = 0x40
0x9f5: V983 = M[0x40]
0x9f8: M[V983] = S0
0x9f9: V984 = 0x20
0x9fb: V985 = ADD 0x20 V983
0x9fc: V986 = 0x40
0x9fe: V987 = M[0x40]
0xa01: V988 = SUB V985 V987
0xa03: RETURN V987 V988
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa04
[0xa04:0xa0a]
---
Predecessors: [0xbf]
Successors: [0xa0b, 0xa0f]
---
0xa04 JUMPDEST
0xa05 CALLVALUE
0xa06 ISZERO
0xa07 PUSH2 0xa0f
0xa0a JUMPI
---
0xa04: JUMPDEST 
0xa05: V989 = CALLVALUE
0xa06: V990 = ISZERO V989
0xa07: V991 = 0xa0f
0xa0a: JUMPI 0xa0f V990
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0b
[0xa0b:0xa0e]
---
Predecessors: [0xa04]
Successors: []
---
0xa0b PUSH1 0x0
0xa0d DUP1
0xa0e REVERT
---
0xa0b: V992 = 0x0
0xa0e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0f
[0xa0f:0xa16]
---
Predecessors: [0xa04]
Successors: [0xd6d]
---
0xa0f JUMPDEST
0xa10 PUSH2 0x802
0xa13 PUSH2 0xd6d
0xa16 JUMP
---
0xa0f: JUMPDEST 
0xa10: V993 = 0x802
0xa13: V994 = 0xd6d
0xa16: JUMP 0xd6d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xa17
[0xa17:0xa28]
---
Predecessors: []
Successors: []
---
0xa17 JUMPDEST
0xa18 PUSH1 0x40
0xa1a MLOAD
0xa1b SWAP1
0xa1c DUP2
0xa1d MSTORE
0xa1e PUSH1 0x20
0xa20 ADD
0xa21 PUSH1 0x40
0xa23 MLOAD
0xa24 DUP1
0xa25 SWAP2
0xa26 SUB
0xa27 SWAP1
0xa28 RETURN
---
0xa17: JUMPDEST 
0xa18: V995 = 0x40
0xa1a: V996 = M[0x40]
0xa1d: M[V996] = S0
0xa1e: V997 = 0x20
0xa20: V998 = ADD 0x20 V996
0xa21: V999 = 0x40
0xa23: V1000 = M[0x40]
0xa26: V1001 = SUB V998 V1000
0xa28: RETURN V1000 V1001
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa29
[0xa29:0xa2f]
---
Predecessors: [0xca]
Successors: [0xa30, 0xa34]
---
0xa29 JUMPDEST
0xa2a CALLVALUE
0xa2b ISZERO
0xa2c PUSH2 0xa34
0xa2f JUMPI
---
0xa29: JUMPDEST 
0xa2a: V1002 = CALLVALUE
0xa2b: V1003 = ISZERO V1002
0xa2c: V1004 = 0xa34
0xa2f: JUMPI 0xa34 V1003
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa30
[0xa30:0xa33]
---
Predecessors: [0xa29]
Successors: []
---
0xa30 PUSH1 0x0
0xa32 DUP1
0xa33 REVERT
---
0xa30: V1005 = 0x0
0xa33: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa34
[0xa34:0xa3b]
---
Predecessors: [0xa29]
Successors: [0xd73]
---
0xa34 JUMPDEST
0xa35 PUSH2 0x802
0xa38 PUSH2 0xd73
0xa3b JUMP
---
0xa34: JUMPDEST 
0xa35: V1006 = 0x802
0xa38: V1007 = 0xd73
0xa3b: JUMP 0xd73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xa3c
[0xa3c:0xa4d]
---
Predecessors: []
Successors: []
---
0xa3c JUMPDEST
0xa3d PUSH1 0x40
0xa3f MLOAD
0xa40 SWAP1
0xa41 DUP2
0xa42 MSTORE
0xa43 PUSH1 0x20
0xa45 ADD
0xa46 PUSH1 0x40
0xa48 MLOAD
0xa49 DUP1
0xa4a SWAP2
0xa4b SUB
0xa4c SWAP1
0xa4d RETURN
---
0xa3c: JUMPDEST 
0xa3d: V1008 = 0x40
0xa3f: V1009 = M[0x40]
0xa42: M[V1009] = S0
0xa43: V1010 = 0x20
0xa45: V1011 = ADD 0x20 V1009
0xa46: V1012 = 0x40
0xa48: V1013 = M[0x40]
0xa4b: V1014 = SUB V1011 V1013
0xa4d: RETURN V1013 V1014
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa4e
[0xa4e:0xa54]
---
Predecessors: [0xd5]
Successors: [0xa55, 0xa59]
---
0xa4e JUMPDEST
0xa4f CALLVALUE
0xa50 ISZERO
0xa51 PUSH2 0xa59
0xa54 JUMPI
---
0xa4e: JUMPDEST 
0xa4f: V1015 = CALLVALUE
0xa50: V1016 = ISZERO V1015
0xa51: V1017 = 0xa59
0xa54: JUMPI 0xa59 V1016
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa55
[0xa55:0xa58]
---
Predecessors: [0xa4e]
Successors: []
---
0xa55 PUSH1 0x0
0xa57 DUP1
0xa58 REVERT
---
0xa55: V1018 = 0x0
0xa58: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa59
[0xa59:0xa60]
---
Predecessors: [0xa4e]
Successors: [0xd79]
---
0xa59 JUMPDEST
0xa5a PUSH2 0x802
0xa5d PUSH2 0xd79
0xa60 JUMP
---
0xa59: JUMPDEST 
0xa5a: V1019 = 0x802
0xa5d: V1020 = 0xd79
0xa60: JUMP 0xd79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xa61
[0xa61:0xa72]
---
Predecessors: []
Successors: []
---
0xa61 JUMPDEST
0xa62 PUSH1 0x40
0xa64 MLOAD
0xa65 SWAP1
0xa66 DUP2
0xa67 MSTORE
0xa68 PUSH1 0x20
0xa6a ADD
0xa6b PUSH1 0x40
0xa6d MLOAD
0xa6e DUP1
0xa6f SWAP2
0xa70 SUB
0xa71 SWAP1
0xa72 RETURN
---
0xa61: JUMPDEST 
0xa62: V1021 = 0x40
0xa64: V1022 = M[0x40]
0xa67: M[V1022] = S0
0xa68: V1023 = 0x20
0xa6a: V1024 = ADD 0x20 V1022
0xa6b: V1025 = 0x40
0xa6d: V1026 = M[0x40]
0xa70: V1027 = SUB V1024 V1026
0xa72: RETURN V1026 V1027
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa73
[0xa73:0xa79]
---
Predecessors: [0xe0]
Successors: [0xa7a, 0xa7e]
---
0xa73 JUMPDEST
0xa74 CALLVALUE
0xa75 ISZERO
0xa76 PUSH2 0xa7e
0xa79 JUMPI
---
0xa73: JUMPDEST 
0xa74: V1028 = CALLVALUE
0xa75: V1029 = ISZERO V1028
0xa76: V1030 = 0xa7e
0xa79: JUMPI 0xa7e V1029
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa7a
[0xa7a:0xa7d]
---
Predecessors: [0xa73]
Successors: []
---
0xa7a PUSH1 0x0
0xa7c DUP1
0xa7d REVERT
---
0xa7a: V1031 = 0x0
0xa7d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa7e
[0xa7e:0xa85]
---
Predecessors: [0xa73]
Successors: [0xd7f]
---
0xa7e JUMPDEST
0xa7f PUSH2 0x802
0xa82 PUSH2 0xd7f
0xa85 JUMP
---
0xa7e: JUMPDEST 
0xa7f: V1032 = 0x802
0xa82: V1033 = 0xd7f
0xa85: JUMP 0xd7f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xa86
[0xa86:0xa97]
---
Predecessors: []
Successors: []
---
0xa86 JUMPDEST
0xa87 PUSH1 0x40
0xa89 MLOAD
0xa8a SWAP1
0xa8b DUP2
0xa8c MSTORE
0xa8d PUSH1 0x20
0xa8f ADD
0xa90 PUSH1 0x40
0xa92 MLOAD
0xa93 DUP1
0xa94 SWAP2
0xa95 SUB
0xa96 SWAP1
0xa97 RETURN
---
0xa86: JUMPDEST 
0xa87: V1034 = 0x40
0xa89: V1035 = M[0x40]
0xa8c: M[V1035] = S0
0xa8d: V1036 = 0x20
0xa8f: V1037 = ADD 0x20 V1035
0xa90: V1038 = 0x40
0xa92: V1039 = M[0x40]
0xa95: V1040 = SUB V1037 V1039
0xa97: RETURN V1039 V1040
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa98
[0xa98:0xa9e]
---
Predecessors: [0xeb]
Successors: [0xa9f, 0xaa3]
---
0xa98 JUMPDEST
0xa99 CALLVALUE
0xa9a ISZERO
0xa9b PUSH2 0xaa3
0xa9e JUMPI
---
0xa98: JUMPDEST 
0xa99: V1041 = CALLVALUE
0xa9a: V1042 = ISZERO V1041
0xa9b: V1043 = 0xaa3
0xa9e: JUMPI 0xaa3 V1042
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa9f
[0xa9f:0xaa2]
---
Predecessors: [0xa98]
Successors: []
---
0xa9f PUSH1 0x0
0xaa1 DUP1
0xaa2 REVERT
---
0xa9f: V1044 = 0x0
0xaa2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaa3
[0xaa3:0xaaa]
---
Predecessors: [0xa98]
Successors: [0xd85]
---
0xaa3 JUMPDEST
0xaa4 PUSH2 0x802
0xaa7 PUSH2 0xd85
0xaaa JUMP
---
0xaa3: JUMPDEST 
0xaa4: V1045 = 0x802
0xaa7: V1046 = 0xd85
0xaaa: JUMP 0xd85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xaab
[0xaab:0xabc]
---
Predecessors: []
Successors: []
---
0xaab JUMPDEST
0xaac PUSH1 0x40
0xaae MLOAD
0xaaf SWAP1
0xab0 DUP2
0xab1 MSTORE
0xab2 PUSH1 0x20
0xab4 ADD
0xab5 PUSH1 0x40
0xab7 MLOAD
0xab8 DUP1
0xab9 SWAP2
0xaba SUB
0xabb SWAP1
0xabc RETURN
---
0xaab: JUMPDEST 
0xaac: V1047 = 0x40
0xaae: V1048 = M[0x40]
0xab1: M[V1048] = S0
0xab2: V1049 = 0x20
0xab4: V1050 = ADD 0x20 V1048
0xab5: V1051 = 0x40
0xab7: V1052 = M[0x40]
0xaba: V1053 = SUB V1050 V1052
0xabc: RETURN V1052 V1053
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xabd
[0xabd:0xac3]
---
Predecessors: [0xf6]
Successors: [0xac4, 0xac8]
---
0xabd JUMPDEST
0xabe CALLVALUE
0xabf ISZERO
0xac0 PUSH2 0xac8
0xac3 JUMPI
---
0xabd: JUMPDEST 
0xabe: V1054 = CALLVALUE
0xabf: V1055 = ISZERO V1054
0xac0: V1056 = 0xac8
0xac3: JUMPI 0xac8 V1055
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac4
[0xac4:0xac7]
---
Predecessors: [0xabd]
Successors: []
---
0xac4 PUSH1 0x0
0xac6 DUP1
0xac7 REVERT
---
0xac4: V1057 = 0x0
0xac7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac8
[0xac8:0xacf]
---
Predecessors: [0xabd]
Successors: [0xd8b]
---
0xac8 JUMPDEST
0xac9 PUSH2 0x802
0xacc PUSH2 0xd8b
0xacf JUMP
---
0xac8: JUMPDEST 
0xac9: V1058 = 0x802
0xacc: V1059 = 0xd8b
0xacf: JUMP 0xd8b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xad0
[0xad0:0xae1]
---
Predecessors: []
Successors: []
---
0xad0 JUMPDEST
0xad1 PUSH1 0x40
0xad3 MLOAD
0xad4 SWAP1
0xad5 DUP2
0xad6 MSTORE
0xad7 PUSH1 0x20
0xad9 ADD
0xada PUSH1 0x40
0xadc MLOAD
0xadd DUP1
0xade SWAP2
0xadf SUB
0xae0 SWAP1
0xae1 RETURN
---
0xad0: JUMPDEST 
0xad1: V1060 = 0x40
0xad3: V1061 = M[0x40]
0xad6: M[V1061] = S0
0xad7: V1062 = 0x20
0xad9: V1063 = ADD 0x20 V1061
0xada: V1064 = 0x40
0xadc: V1065 = M[0x40]
0xadf: V1066 = SUB V1063 V1065
0xae1: RETURN V1065 V1066
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xae2
[0xae2:0xae8]
---
Predecessors: [0x101]
Successors: [0xae9, 0xaed]
---
0xae2 JUMPDEST
0xae3 CALLVALUE
0xae4 ISZERO
0xae5 PUSH2 0xaed
0xae8 JUMPI
---
0xae2: JUMPDEST 
0xae3: V1067 = CALLVALUE
0xae4: V1068 = ISZERO V1067
0xae5: V1069 = 0xaed
0xae8: JUMPI 0xaed V1068
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xae9
[0xae9:0xaec]
---
Predecessors: [0xae2]
Successors: []
---
0xae9 PUSH1 0x0
0xaeb DUP1
0xaec REVERT
---
0xae9: V1070 = 0x0
0xaec: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaed
[0xaed:0xaf4]
---
Predecessors: [0xae2]
Successors: [0xd91]
---
0xaed JUMPDEST
0xaee PUSH2 0x7ed
0xaf1 PUSH2 0xd91
0xaf4 JUMP
---
0xaed: JUMPDEST 
0xaee: V1071 = 0x7ed
0xaf1: V1072 = 0xd91
0xaf4: JUMP 0xd91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ed]
Exit stack: [V12, 0x7ed]

================================

Block 0xaf5
[0xaf5:0xaf6]
---
Predecessors: []
Successors: []
---
0xaf5 JUMPDEST
0xaf6 STOP
---
0xaf5: JUMPDEST 
0xaf6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaf7
[0xaf7:0xafd]
---
Predecessors: [0x10c]
Successors: [0xafe, 0xb02]
---
0xaf7 JUMPDEST
0xaf8 CALLVALUE
0xaf9 ISZERO
0xafa PUSH2 0xb02
0xafd JUMPI
---
0xaf7: JUMPDEST 
0xaf8: V1073 = CALLVALUE
0xaf9: V1074 = ISZERO V1073
0xafa: V1075 = 0xb02
0xafd: JUMPI 0xb02 V1074
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xafe
[0xafe:0xb01]
---
Predecessors: [0xaf7]
Successors: []
---
0xafe PUSH1 0x0
0xb00 DUP1
0xb01 REVERT
---
0xafe: V1076 = 0x0
0xb01: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb02
[0xb02:0xb09]
---
Predecessors: [0xaf7]
Successors: [0xdb8]
---
0xb02 JUMPDEST
0xb03 PUSH2 0x7ed
0xb06 PUSH2 0xdb8
0xb09 JUMP
---
0xb02: JUMPDEST 
0xb03: V1077 = 0x7ed
0xb06: V1078 = 0xdb8
0xb09: JUMP 0xdb8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ed]
Exit stack: [V12, 0x7ed]

================================

Block 0xb0a
[0xb0a:0xb0b]
---
Predecessors: []
Successors: []
---
0xb0a JUMPDEST
0xb0b STOP
---
0xb0a: JUMPDEST 
0xb0b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb0c
[0xb0c:0xb12]
---
Predecessors: [0x117]
Successors: [0xb13, 0xb17]
---
0xb0c JUMPDEST
0xb0d CALLVALUE
0xb0e ISZERO
0xb0f PUSH2 0xb17
0xb12 JUMPI
---
0xb0c: JUMPDEST 
0xb0d: V1079 = CALLVALUE
0xb0e: V1080 = ISZERO V1079
0xb0f: V1081 = 0xb17
0xb12: JUMPI 0xb17 V1080
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb13
[0xb13:0xb16]
---
Predecessors: [0xb0c]
Successors: []
---
0xb13 PUSH1 0x0
0xb15 DUP1
0xb16 REVERT
---
0xb13: V1082 = 0x0
0xb16: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb17
[0xb17:0xb1e]
---
Predecessors: [0xb0c]
Successors: [0xde2]
---
0xb17 JUMPDEST
0xb18 PUSH2 0x802
0xb1b PUSH2 0xde2
0xb1e JUMP
---
0xb17: JUMPDEST 
0xb18: V1083 = 0x802
0xb1b: V1084 = 0xde2
0xb1e: JUMP 0xde2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xb1f
[0xb1f:0xb30]
---
Predecessors: []
Successors: []
---
0xb1f JUMPDEST
0xb20 PUSH1 0x40
0xb22 MLOAD
0xb23 SWAP1
0xb24 DUP2
0xb25 MSTORE
0xb26 PUSH1 0x20
0xb28 ADD
0xb29 PUSH1 0x40
0xb2b MLOAD
0xb2c DUP1
0xb2d SWAP2
0xb2e SUB
0xb2f SWAP1
0xb30 RETURN
---
0xb1f: JUMPDEST 
0xb20: V1085 = 0x40
0xb22: V1086 = M[0x40]
0xb25: M[V1086] = S0
0xb26: V1087 = 0x20
0xb28: V1088 = ADD 0x20 V1086
0xb29: V1089 = 0x40
0xb2b: V1090 = M[0x40]
0xb2e: V1091 = SUB V1088 V1090
0xb30: RETURN V1090 V1091
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb31
[0xb31:0xb37]
---
Predecessors: [0x122]
Successors: [0xb38, 0xb3c]
---
0xb31 JUMPDEST
0xb32 CALLVALUE
0xb33 ISZERO
0xb34 PUSH2 0xb3c
0xb37 JUMPI
---
0xb31: JUMPDEST 
0xb32: V1092 = CALLVALUE
0xb33: V1093 = ISZERO V1092
0xb34: V1094 = 0xb3c
0xb37: JUMPI 0xb3c V1093
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb38
[0xb38:0xb3b]
---
Predecessors: [0xb31]
Successors: []
---
0xb38 PUSH1 0x0
0xb3a DUP1
0xb3b REVERT
---
0xb38: V1095 = 0x0
0xb3b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb3c
[0xb3c:0xb43]
---
Predecessors: [0xb31]
Successors: [0xde8]
---
0xb3c JUMPDEST
0xb3d PUSH2 0x802
0xb40 PUSH2 0xde8
0xb43 JUMP
---
0xb3c: JUMPDEST 
0xb3d: V1096 = 0x802
0xb40: V1097 = 0xde8
0xb43: JUMP 0xde8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xb44
[0xb44:0xb55]
---
Predecessors: []
Successors: []
---
0xb44 JUMPDEST
0xb45 PUSH1 0x40
0xb47 MLOAD
0xb48 SWAP1
0xb49 DUP2
0xb4a MSTORE
0xb4b PUSH1 0x20
0xb4d ADD
0xb4e PUSH1 0x40
0xb50 MLOAD
0xb51 DUP1
0xb52 SWAP2
0xb53 SUB
0xb54 SWAP1
0xb55 RETURN
---
0xb44: JUMPDEST 
0xb45: V1098 = 0x40
0xb47: V1099 = M[0x40]
0xb4a: M[V1099] = S0
0xb4b: V1100 = 0x20
0xb4d: V1101 = ADD 0x20 V1099
0xb4e: V1102 = 0x40
0xb50: V1103 = M[0x40]
0xb53: V1104 = SUB V1101 V1103
0xb55: RETURN V1103 V1104
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb56
[0xb56:0xb5c]
---
Predecessors: [0x12d]
Successors: [0xb5d, 0xb61]
---
0xb56 JUMPDEST
0xb57 CALLVALUE
0xb58 ISZERO
0xb59 PUSH2 0xb61
0xb5c JUMPI
---
0xb56: JUMPDEST 
0xb57: V1105 = CALLVALUE
0xb58: V1106 = ISZERO V1105
0xb59: V1107 = 0xb61
0xb5c: JUMPI 0xb61 V1106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5d
[0xb5d:0xb60]
---
Predecessors: [0xb56]
Successors: []
---
0xb5d PUSH1 0x0
0xb5f DUP1
0xb60 REVERT
---
0xb5d: V1108 = 0x0
0xb60: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb61
[0xb61:0xb68]
---
Predecessors: [0xb56]
Successors: [0xdee]
---
0xb61 JUMPDEST
0xb62 PUSH2 0x802
0xb65 PUSH2 0xdee
0xb68 JUMP
---
0xb61: JUMPDEST 
0xb62: V1109 = 0x802
0xb65: V1110 = 0xdee
0xb68: JUMP 0xdee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xb69
[0xb69:0xb7a]
---
Predecessors: []
Successors: []
---
0xb69 JUMPDEST
0xb6a PUSH1 0x40
0xb6c MLOAD
0xb6d SWAP1
0xb6e DUP2
0xb6f MSTORE
0xb70 PUSH1 0x20
0xb72 ADD
0xb73 PUSH1 0x40
0xb75 MLOAD
0xb76 DUP1
0xb77 SWAP2
0xb78 SUB
0xb79 SWAP1
0xb7a RETURN
---
0xb69: JUMPDEST 
0xb6a: V1111 = 0x40
0xb6c: V1112 = M[0x40]
0xb6f: M[V1112] = S0
0xb70: V1113 = 0x20
0xb72: V1114 = ADD 0x20 V1112
0xb73: V1115 = 0x40
0xb75: V1116 = M[0x40]
0xb78: V1117 = SUB V1114 V1116
0xb7a: RETURN V1116 V1117
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb7b
[0xb7b:0xb81]
---
Predecessors: [0x138]
Successors: [0xb82, 0xb86]
---
0xb7b JUMPDEST
0xb7c CALLVALUE
0xb7d ISZERO
0xb7e PUSH2 0xb86
0xb81 JUMPI
---
0xb7b: JUMPDEST 
0xb7c: V1118 = CALLVALUE
0xb7d: V1119 = ISZERO V1118
0xb7e: V1120 = 0xb86
0xb81: JUMPI 0xb86 V1119
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb82
[0xb82:0xb85]
---
Predecessors: [0xb7b]
Successors: []
---
0xb82 PUSH1 0x0
0xb84 DUP1
0xb85 REVERT
---
0xb82: V1121 = 0x0
0xb85: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb86
[0xb86:0xb8d]
---
Predecessors: [0xb7b]
Successors: [0xdf4]
---
0xb86 JUMPDEST
0xb87 PUSH2 0x96b
0xb8a PUSH2 0xdf4
0xb8d JUMP
---
0xb86: JUMPDEST 
0xb87: V1122 = 0x96b
0xb8a: V1123 = 0xdf4
0xb8d: JUMP 0xdf4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x96b]
Exit stack: [V12, 0x96b]

================================

Block 0xb8e
[0xb8e:0xba1]
---
Predecessors: []
Successors: []
---
0xb8e JUMPDEST
0xb8f PUSH1 0x40
0xb91 MLOAD
0xb92 SWAP1
0xb93 ISZERO
0xb94 ISZERO
0xb95 DUP2
0xb96 MSTORE
0xb97 PUSH1 0x20
0xb99 ADD
0xb9a PUSH1 0x40
0xb9c MLOAD
0xb9d DUP1
0xb9e SWAP2
0xb9f SUB
0xba0 SWAP1
0xba1 RETURN
---
0xb8e: JUMPDEST 
0xb8f: V1124 = 0x40
0xb91: V1125 = M[0x40]
0xb93: V1126 = ISZERO S0
0xb94: V1127 = ISZERO V1126
0xb96: M[V1125] = V1127
0xb97: V1128 = 0x20
0xb99: V1129 = ADD 0x20 V1125
0xb9a: V1130 = 0x40
0xb9c: V1131 = M[0x40]
0xb9f: V1132 = SUB V1129 V1131
0xba1: RETURN V1131 V1132
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xba2
[0xba2:0xba8]
---
Predecessors: [0x143]
Successors: [0xba9, 0xbad]
---
0xba2 JUMPDEST
0xba3 CALLVALUE
0xba4 ISZERO
0xba5 PUSH2 0xbad
0xba8 JUMPI
---
0xba2: JUMPDEST 
0xba3: V1133 = CALLVALUE
0xba4: V1134 = ISZERO V1133
0xba5: V1135 = 0xbad
0xba8: JUMPI 0xbad V1134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xba9
[0xba9:0xbac]
---
Predecessors: [0xba2]
Successors: []
---
0xba9 PUSH1 0x0
0xbab DUP1
0xbac REVERT
---
0xba9: V1136 = 0x0
0xbac: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbad
[0xbad:0xbb4]
---
Predecessors: [0xba2]
Successors: [0xe02]
---
0xbad JUMPDEST
0xbae PUSH2 0x96b
0xbb1 PUSH2 0xe02
0xbb4 JUMP
---
0xbad: JUMPDEST 
0xbae: V1137 = 0x96b
0xbb1: V1138 = 0xe02
0xbb4: JUMP 0xe02
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x96b]
Exit stack: [V12, 0x96b]

================================

Block 0xbb5
[0xbb5:0xbc8]
---
Predecessors: []
Successors: []
---
0xbb5 JUMPDEST
0xbb6 PUSH1 0x40
0xbb8 MLOAD
0xbb9 SWAP1
0xbba ISZERO
0xbbb ISZERO
0xbbc DUP2
0xbbd MSTORE
0xbbe PUSH1 0x20
0xbc0 ADD
0xbc1 PUSH1 0x40
0xbc3 MLOAD
0xbc4 DUP1
0xbc5 SWAP2
0xbc6 SUB
0xbc7 SWAP1
0xbc8 RETURN
---
0xbb5: JUMPDEST 
0xbb6: V1139 = 0x40
0xbb8: V1140 = M[0x40]
0xbba: V1141 = ISZERO S0
0xbbb: V1142 = ISZERO V1141
0xbbd: M[V1140] = V1142
0xbbe: V1143 = 0x20
0xbc0: V1144 = ADD 0x20 V1140
0xbc1: V1145 = 0x40
0xbc3: V1146 = M[0x40]
0xbc6: V1147 = SUB V1144 V1146
0xbc8: RETURN V1146 V1147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xbc9
[0xbc9:0xbcf]
---
Predecessors: [0x14e]
Successors: [0xbd0, 0xbd4]
---
0xbc9 JUMPDEST
0xbca CALLVALUE
0xbcb ISZERO
0xbcc PUSH2 0xbd4
0xbcf JUMPI
---
0xbc9: JUMPDEST 
0xbca: V1148 = CALLVALUE
0xbcb: V1149 = ISZERO V1148
0xbcc: V1150 = 0xbd4
0xbcf: JUMPI 0xbd4 V1149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd0
[0xbd0:0xbd3]
---
Predecessors: [0xbc9]
Successors: []
---
0xbd0 PUSH1 0x0
0xbd2 DUP1
0xbd3 REVERT
---
0xbd0: V1151 = 0x0
0xbd3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd4
[0xbd4:0xbdb]
---
Predecessors: [0xbc9]
Successors: [0xe0b]
---
0xbd4 JUMPDEST
0xbd5 PUSH2 0x7ed
0xbd8 PUSH2 0xe0b
0xbdb JUMP
---
0xbd4: JUMPDEST 
0xbd5: V1152 = 0x7ed
0xbd8: V1153 = 0xe0b
0xbdb: JUMP 0xe0b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ed]
Exit stack: [V12, 0x7ed]

================================

Block 0xbdc
[0xbdc:0xbdd]
---
Predecessors: []
Successors: []
---
0xbdc JUMPDEST
0xbdd STOP
---
0xbdc: JUMPDEST 
0xbdd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbde
[0xbde:0xbe4]
---
Predecessors: [0x159]
Successors: [0xbe5, 0xbe9]
---
0xbde JUMPDEST
0xbdf CALLVALUE
0xbe0 ISZERO
0xbe1 PUSH2 0xbe9
0xbe4 JUMPI
---
0xbde: JUMPDEST 
0xbdf: V1154 = CALLVALUE
0xbe0: V1155 = ISZERO V1154
0xbe1: V1156 = 0xbe9
0xbe4: JUMPI 0xbe9 V1155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe5
[0xbe5:0xbe8]
---
Predecessors: [0xbde]
Successors: []
---
0xbe5 PUSH1 0x0
0xbe7 DUP1
0xbe8 REVERT
---
0xbe5: V1157 = 0x0
0xbe8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe9
[0xbe9:0xbf0]
---
Predecessors: [0xbde]
Successors: [0xe37]
---
0xbe9 JUMPDEST
0xbea PUSH2 0x7ed
0xbed PUSH2 0xe37
0xbf0 JUMP
---
0xbe9: JUMPDEST 
0xbea: V1158 = 0x7ed
0xbed: V1159 = 0xe37
0xbf0: JUMP 0xe37
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ed]
Exit stack: [V12, 0x7ed]

================================

Block 0xbf1
[0xbf1:0xbf2]
---
Predecessors: []
Successors: []
---
0xbf1 JUMPDEST
0xbf2 STOP
---
0xbf1: JUMPDEST 
0xbf2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbf3
[0xbf3:0xbfc]
---
Predecessors: [0x7e5]
Successors: [0xbfd, 0xc3a]
---
0xbf3 JUMPDEST
0xbf4 PUSH1 0x2
0xbf6 SLOAD
0xbf7 TIMESTAMP
0xbf8 LT
0xbf9 PUSH2 0xc3a
0xbfc JUMPI
---
0xbf3: JUMPDEST 
0xbf4: V1160 = 0x2
0xbf6: V1161 = S[0x2]
0xbf7: V1162 = TIMESTAMP
0xbf8: V1163 = LT V1162 V1161
0xbf9: V1164 = 0xc3a
0xbfc: JUMPI 0xc3a V1163
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xbfd
[0xbfd:0xc09]
---
Predecessors: [0xbf3]
Successors: [0xc0a, 0xc17]
---
0xbfd PUSH1 0x5
0xbff SLOAD
0xc00 PUSH1 0x8
0xc02 SLOAD
0xc03 LT
0xc04 ISZERO
0xc05 DUP1
0xc06 PUSH2 0xc17
0xc09 JUMPI
---
0xbfd: V1165 = 0x5
0xbff: V1166 = S[0x5]
0xc00: V1167 = 0x8
0xc02: V1168 = S[0x8]
0xc03: V1169 = LT V1168 V1166
0xc04: V1170 = ISZERO V1169
0xc06: V1171 = 0xc17
0xc09: JUMPI 0xc17 V1170
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: [V1170]
Exit stack: [V12, 0x7ed, V1170]

================================

Block 0xc0a
[0xc0a:0xc16]
---
Predecessors: [0xbfd]
Successors: [0xc17]
---
0xc0a POP
0xc0b PUSH1 0x14
0xc0d SLOAD
0xc0e PUSH3 0x10000
0xc12 SWAP1
0xc13 DIV
0xc14 PUSH1 0xff
0xc16 AND
---
0xc0b: V1172 = 0x14
0xc0d: V1173 = S[0x14]
0xc0e: V1174 = 0x10000
0xc13: V1175 = DIV V1173 0x10000
0xc14: V1176 = 0xff
0xc16: V1177 = AND 0xff V1175
---
Entry stack: [V12, 0x7ed, V1170]
Stack pops: 1
Stack additions: [V1177]
Exit stack: [V12, 0x7ed, V1177]

================================

Block 0xc17
[0xc17:0xc1c]
---
Predecessors: [0xbfd, 0xc0a]
Successors: [0xc1d, 0xc2a]
---
0xc17 JUMPDEST
0xc18 ISZERO
0xc19 PUSH2 0xc2a
0xc1c JUMPI
---
0xc17: JUMPDEST 
0xc18: V1178 = ISZERO S0
0xc19: V1179 = 0xc2a
0xc1c: JUMPI 0xc2a V1178
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xc1d
[0xc1d:0xc29]
---
Predecessors: [0xc17]
Successors: [0xc2a]
---
0xc1d PUSH1 0x14
0xc1f DUP1
0xc20 SLOAD
0xc21 PUSH1 0xff
0xc23 NOT
0xc24 AND
0xc25 PUSH1 0x1
0xc27 OR
0xc28 SWAP1
0xc29 SSTORE
---
0xc1d: V1180 = 0x14
0xc20: V1181 = S[0x14]
0xc21: V1182 = 0xff
0xc23: V1183 = NOT 0xff
0xc24: V1184 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1181
0xc25: V1185 = 0x1
0xc27: V1186 = OR 0x1 V1184
0xc29: S[0x14] = V1186
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xc2a
[0xc2a:0xc39]
---
Predecessors: [0xc17, 0xc1d]
Successors: [0xc3a]
---
0xc2a JUMPDEST
0xc2b PUSH1 0x14
0xc2d DUP1
0xc2e SLOAD
0xc2f PUSH2 0xff00
0xc32 NOT
0xc33 AND
0xc34 PUSH2 0x100
0xc37 OR
0xc38 SWAP1
0xc39 SSTORE
---
0xc2a: JUMPDEST 
0xc2b: V1187 = 0x14
0xc2e: V1188 = S[0x14]
0xc2f: V1189 = 0xff00
0xc32: V1190 = NOT 0xff00
0xc33: V1191 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1188
0xc34: V1192 = 0x100
0xc37: V1193 = OR 0x100 V1191
0xc39: S[0x14] = V1193
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xc3a
[0xc3a:0xc3a]
---
Predecessors: [0xbf3, 0xc2a, 0xd02, 0xd91, 0xdb8, 0xe0b]
Successors: [0xc3b]
---
0xc3a JUMPDEST
---
0xc3a: JUMPDEST 
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xc3b
[0xc3b:0xc3b]
---
Predecessors: [0xc3a]
Successors: [0xc3c]
---
0xc3b JUMPDEST
---
0xc3b: JUMPDEST 
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xc3c
[0xc3c:0xc3d]
---
Predecessors: [0xc3b]
Successors: [0x7ed]
---
0xc3c JUMPDEST
0xc3d JUMP
---
0xc3c: JUMPDEST 
0xc3d: JUMP 0x7ed
---
Entry stack: [V12, 0x7ed]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3e
[0xc3e:0xc43]
---
Predecessors: [0x7fa]
Successors: [0x802]
---
0xc3e JUMPDEST
0xc3f PUSH1 0x0
0xc41 SLOAD
0xc42 DUP2
0xc43 JUMP
---
0xc3e: JUMPDEST 
0xc3f: V1194 = 0x0
0xc41: V1195 = S[0x0]
0xc43: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1195]
Exit stack: [V12, 0x802, V1195]

================================

Block 0xc44
[0xc44:0xc4d]
---
Predecessors: [0x81f]
Successors: [0xc4e, 0xccf]
---
0xc44 JUMPDEST
0xc45 PUSH1 0x2
0xc47 SLOAD
0xc48 TIMESTAMP
0xc49 LT
0xc4a PUSH2 0xccf
0xc4d JUMPI
---
0xc44: JUMPDEST 
0xc45: V1196 = 0x2
0xc47: V1197 = S[0x2]
0xc48: V1198 = TIMESTAMP
0xc49: V1199 = LT V1198 V1197
0xc4a: V1200 = 0xccf
0xc4d: JUMPI 0xccf V1199
---
Entry stack: [V12, 0x7ed, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, V810]

================================

Block 0xc4e
[0xc4e:0xc64]
---
Predecessors: [0xc44]
Successors: [0xc65, 0xccf]
---
0xc4e PUSH1 0x4
0xc50 SLOAD
0xc51 CALLER
0xc52 PUSH1 0x1
0xc54 PUSH1 0xa0
0xc56 PUSH1 0x2
0xc58 EXP
0xc59 SUB
0xc5a SWAP1
0xc5b DUP2
0xc5c AND
0xc5d SWAP2
0xc5e AND
0xc5f EQ
0xc60 ISZERO
0xc61 PUSH2 0xccf
0xc64 JUMPI
---
0xc4e: V1201 = 0x4
0xc50: V1202 = S[0x4]
0xc51: V1203 = CALLER
0xc52: V1204 = 0x1
0xc54: V1205 = 0xa0
0xc56: V1206 = 0x2
0xc58: V1207 = EXP 0x2 0xa0
0xc59: V1208 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5c: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffff V1203
0xc5e: V1210 = AND V1202 0xffffffffffffffffffffffffffffffffffffffff
0xc5f: V1211 = EQ V1210 V1209
0xc60: V1212 = ISZERO V1211
0xc61: V1213 = 0xccf
0xc64: JUMPI 0xccf V1212
---
Entry stack: [V12, 0x7ed, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, V810]

================================

Block 0xc65
[0xc65:0xcb5]
---
Predecessors: [0xc4e]
Successors: [0xcb6, 0xcba]
---
0xc65 PUSH1 0x12
0xc67 SLOAD
0xc68 PUSH1 0x1
0xc6a PUSH1 0xa0
0xc6c PUSH1 0x2
0xc6e EXP
0xc6f SUB
0xc70 AND
0xc71 PUSH4 0xa9059cbb
0xc76 CALLER
0xc77 DUP4
0xc78 PUSH1 0x40
0xc7a MLOAD
0xc7b PUSH1 0xe0
0xc7d PUSH1 0x2
0xc7f EXP
0xc80 PUSH4 0xffffffff
0xc85 DUP6
0xc86 AND
0xc87 MUL
0xc88 DUP2
0xc89 MSTORE
0xc8a PUSH1 0x1
0xc8c PUSH1 0xa0
0xc8e PUSH1 0x2
0xc90 EXP
0xc91 SUB
0xc92 SWAP1
0xc93 SWAP3
0xc94 AND
0xc95 PUSH1 0x4
0xc97 DUP4
0xc98 ADD
0xc99 MSTORE
0xc9a PUSH1 0x24
0xc9c DUP3
0xc9d ADD
0xc9e MSTORE
0xc9f PUSH1 0x44
0xca1 ADD
0xca2 PUSH1 0x0
0xca4 PUSH1 0x40
0xca6 MLOAD
0xca7 DUP1
0xca8 DUP4
0xca9 SUB
0xcaa DUP2
0xcab PUSH1 0x0
0xcad DUP8
0xcae DUP1
0xcaf EXTCODESIZE
0xcb0 ISZERO
0xcb1 ISZERO
0xcb2 PUSH2 0xcba
0xcb5 JUMPI
---
0xc65: V1214 = 0x12
0xc67: V1215 = S[0x12]
0xc68: V1216 = 0x1
0xc6a: V1217 = 0xa0
0xc6c: V1218 = 0x2
0xc6e: V1219 = EXP 0x2 0xa0
0xc6f: V1220 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc70: V1221 = AND 0xffffffffffffffffffffffffffffffffffffffff V1215
0xc71: V1222 = 0xa9059cbb
0xc76: V1223 = CALLER
0xc78: V1224 = 0x40
0xc7a: V1225 = M[0x40]
0xc7b: V1226 = 0xe0
0xc7d: V1227 = 0x2
0xc7f: V1228 = EXP 0x2 0xe0
0xc80: V1229 = 0xffffffff
0xc86: V1230 = AND 0xa9059cbb 0xffffffff
0xc87: V1231 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc89: M[V1225] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc8a: V1232 = 0x1
0xc8c: V1233 = 0xa0
0xc8e: V1234 = 0x2
0xc90: V1235 = EXP 0x2 0xa0
0xc91: V1236 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc94: V1237 = AND V1223 0xffffffffffffffffffffffffffffffffffffffff
0xc95: V1238 = 0x4
0xc98: V1239 = ADD V1225 0x4
0xc99: M[V1239] = V1237
0xc9a: V1240 = 0x24
0xc9d: V1241 = ADD V1225 0x24
0xc9e: M[V1241] = V810
0xc9f: V1242 = 0x44
0xca1: V1243 = ADD 0x44 V1225
0xca2: V1244 = 0x0
0xca4: V1245 = 0x40
0xca6: V1246 = M[0x40]
0xca9: V1247 = SUB V1243 V1246
0xcab: V1248 = 0x0
0xcaf: V1249 = EXTCODESIZE V1221
0xcb0: V1250 = ISZERO V1249
0xcb1: V1251 = ISZERO V1250
0xcb2: V1252 = 0xcba
0xcb5: JUMPI 0xcba V1251
---
Entry stack: [V12, 0x7ed, V810]
Stack pops: 1
Stack additions: [S0, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]
Exit stack: [V12, 0x7ed, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]

================================

Block 0xcb6
[0xcb6:0xcb9]
---
Predecessors: [0xc65]
Successors: []
---
0xcb6 PUSH1 0x0
0xcb8 DUP1
0xcb9 REVERT
---
0xcb6: V1253 = 0x0
0xcb9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7ed, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]

================================

Block 0xcba
[0xcba:0xcc6]
---
Predecessors: [0xc65]
Successors: [0xcc7, 0xccb]
---
0xcba JUMPDEST
0xcbb PUSH2 0x2c6
0xcbe GAS
0xcbf SUB
0xcc0 CALL
0xcc1 ISZERO
0xcc2 ISZERO
0xcc3 PUSH2 0xccb
0xcc6 JUMPI
---
0xcba: JUMPDEST 
0xcbb: V1254 = 0x2c6
0xcbe: V1255 = GAS
0xcbf: V1256 = SUB V1255 0x2c6
0xcc0: V1257 = CALL V1256 V1221 0x0 V1246 V1247 V1246 0x0
0xcc1: V1258 = ISZERO V1257
0xcc2: V1259 = ISZERO V1258
0xcc3: V1260 = 0xccb
0xcc6: JUMPI 0xccb V1259
---
Entry stack: [V12, 0x7ed, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7ed, V810, V1221, 0xa9059cbb, V1243]

================================

Block 0xcc7
[0xcc7:0xcca]
---
Predecessors: [0xcba]
Successors: []
---
0xcc7 PUSH1 0x0
0xcc9 DUP1
0xcca REVERT
---
0xcc7: V1261 = 0x0
0xcca: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7ed, V810, V1221, 0xa9059cbb, V1243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, V810, V1221, 0xa9059cbb, V1243]

================================

Block 0xccb
[0xccb:0xcce]
---
Predecessors: [0xcba]
Successors: [0xccf]
---
0xccb JUMPDEST
0xccc POP
0xccd POP
0xcce POP
---
0xccb: JUMPDEST 
---
Entry stack: [V12, 0x7ed, V810, V1221, 0xa9059cbb, V1243]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7ed, V810]

================================

Block 0xccf
[0xccf:0xccf]
---
Predecessors: [0xc44, 0xc4e, 0xccb, 0xe37, 0xf26, 0xf5f]
Successors: [0xcd0]
---
0xccf JUMPDEST
---
0xccf: JUMPDEST 
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xcd0
[0xcd0:0xcd0]
---
Predecessors: [0xccf]
Successors: [0xcd1]
---
0xcd0 JUMPDEST
---
0xcd0: JUMPDEST 
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xcd1
[0xcd1:0xcd1]
---
Predecessors: [0xcd0]
Successors: [0xcd2]
---
0xcd1 JUMPDEST
---
0xcd1: JUMPDEST 
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xcd2
[0xcd2:0xcd4]
---
Predecessors: [0xcd1]
Successors: [0x7ed]
---
0xcd2 JUMPDEST
0xcd3 POP
0xcd4 JUMP
---
0xcd2: JUMPDEST 
0xcd4: JUMP 0x7ed
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd5
[0xcd5:0xcda]
---
Predecessors: [0x837]
Successors: [0x802]
---
0xcd5 JUMPDEST
0xcd6 PUSH1 0x2
0xcd8 SLOAD
0xcd9 DUP2
0xcda JUMP
---
0xcd5: JUMPDEST 
0xcd6: V1262 = 0x2
0xcd8: V1263 = S[0x2]
0xcda: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1263]
Exit stack: [V12, 0x802, V1263]

================================

Block 0xcdb
[0xcdb:0xce0]
---
Predecessors: [0x85c]
Successors: [0x802]
---
0xcdb JUMPDEST
0xcdc PUSH1 0x5
0xcde SLOAD
0xcdf DUP2
0xce0 JUMP
---
0xcdb: JUMPDEST 
0xcdc: V1264 = 0x5
0xcde: V1265 = S[0x5]
0xce0: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1265]
Exit stack: [V12, 0x802, V1265]

================================

Block 0xce1
[0xce1:0xce6]
---
Predecessors: [0x881]
Successors: [0x802]
---
0xce1 JUMPDEST
0xce2 PUSH1 0xf
0xce4 SLOAD
0xce5 DUP2
0xce6 JUMP
---
0xce1: JUMPDEST 
0xce2: V1266 = 0xf
0xce4: V1267 = S[0xf]
0xce6: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1267]
Exit stack: [V12, 0x802, V1267]

================================

Block 0xce7
[0xce7:0xcf5]
---
Predecessors: [0x8a6]
Successors: [0x8ae]
---
0xce7 JUMPDEST
0xce8 PUSH1 0x3
0xcea SLOAD
0xceb PUSH1 0x1
0xced PUSH1 0xa0
0xcef PUSH1 0x2
0xcf1 EXP
0xcf2 SUB
0xcf3 AND
0xcf4 DUP2
0xcf5 JUMP
---
0xce7: JUMPDEST 
0xce8: V1268 = 0x3
0xcea: V1269 = S[0x3]
0xceb: V1270 = 0x1
0xced: V1271 = 0xa0
0xcef: V1272 = 0x2
0xcf1: V1273 = EXP 0x2 0xa0
0xcf2: V1274 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf3: V1275 = AND 0xffffffffffffffffffffffffffffffffffffffff V1269
0xcf5: JUMP 0x8ae
---
Entry stack: [V12, 0x8ae]
Stack pops: 1
Stack additions: [S0, V1275]
Exit stack: [V12, 0x8ae, V1275]

================================

Block 0xcf6
[0xcf6:0xcfb]
---
Predecessors: [0x8d5]
Successors: [0x802]
---
0xcf6 JUMPDEST
0xcf7 PUSH1 0xd
0xcf9 SLOAD
0xcfa DUP2
0xcfb JUMP
---
0xcf6: JUMPDEST 
0xcf7: V1276 = 0xd
0xcf9: V1277 = S[0xd]
0xcfb: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1277]
Exit stack: [V12, 0x802, V1277]

================================

Block 0xcfc
[0xcfc:0xd01]
---
Predecessors: [0x8fa]
Successors: [0x802]
---
0xcfc JUMPDEST
0xcfd PUSH1 0x10
0xcff SLOAD
0xd00 DUP2
0xd01 JUMP
---
0xcfc: JUMPDEST 
0xcfd: V1278 = 0x10
0xcff: V1279 = S[0x10]
0xd01: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1279]
Exit stack: [V12, 0x802, V1279]

================================

Block 0xd02
[0xd02:0xd19]
---
Predecessors: [0x91f]
Successors: [0xc3a, 0xd1a]
---
0xd02 JUMPDEST
0xd03 PUSH1 0x4
0xd05 SLOAD
0xd06 CALLER
0xd07 PUSH1 0x1
0xd09 PUSH1 0xa0
0xd0b PUSH1 0x2
0xd0d EXP
0xd0e SUB
0xd0f SWAP1
0xd10 DUP2
0xd11 AND
0xd12 SWAP2
0xd13 AND
0xd14 EQ
0xd15 ISZERO
0xd16 PUSH2 0xc3a
0xd19 JUMPI
---
0xd02: JUMPDEST 
0xd03: V1280 = 0x4
0xd05: V1281 = S[0x4]
0xd06: V1282 = CALLER
0xd07: V1283 = 0x1
0xd09: V1284 = 0xa0
0xd0b: V1285 = 0x2
0xd0d: V1286 = EXP 0x2 0xa0
0xd0e: V1287 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd11: V1288 = AND 0xffffffffffffffffffffffffffffffffffffffff V1282
0xd13: V1289 = AND V1281 0xffffffffffffffffffffffffffffffffffffffff
0xd14: V1290 = EQ V1289 V1288
0xd15: V1291 = ISZERO V1290
0xd16: V1292 = 0xc3a
0xd19: JUMPI 0xc3a V1291
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xd1a
[0xd1a:0xd24]
---
Predecessors: [0xd02]
Successors: [0xd25]
---
0xd1a PUSH1 0x14
0xd1c DUP1
0xd1d SLOAD
0xd1e PUSH2 0xff00
0xd21 NOT
0xd22 AND
0xd23 SWAP1
0xd24 SSTORE
---
0xd1a: V1293 = 0x14
0xd1d: V1294 = S[0x14]
0xd1e: V1295 = 0xff00
0xd21: V1296 = NOT 0xff00
0xd22: V1297 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1294
0xd24: S[0x14] = V1297
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xd25
[0xd25:0xd25]
---
Predecessors: [0xd1a]
Successors: [0xd26]
---
0xd25 JUMPDEST
---
0xd25: JUMPDEST 
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xd26
[0xd26:0xd27]
---
Predecessors: [0xd25]
Successors: [0x7ed]
---
0xd26 JUMPDEST
0xd27 JUMP
---
0xd26: JUMPDEST 
0xd27: JUMP 0x7ed
---
Entry stack: [V12, 0x7ed]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd28
[0xd28:0xd36]
---
Predecessors: [0x934]
Successors: [0x8ae]
---
0xd28 JUMPDEST
0xd29 PUSH1 0x4
0xd2b SLOAD
0xd2c PUSH1 0x1
0xd2e PUSH1 0xa0
0xd30 PUSH1 0x2
0xd32 EXP
0xd33 SUB
0xd34 AND
0xd35 DUP2
0xd36 JUMP
---
0xd28: JUMPDEST 
0xd29: V1298 = 0x4
0xd2b: V1299 = S[0x4]
0xd2c: V1300 = 0x1
0xd2e: V1301 = 0xa0
0xd30: V1302 = 0x2
0xd32: V1303 = EXP 0x2 0xa0
0xd33: V1304 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd34: V1305 = AND 0xffffffffffffffffffffffffffffffffffffffff V1299
0xd36: JUMP 0x8ae
---
Entry stack: [V12, 0x8ae]
Stack pops: 1
Stack additions: [S0, V1305]
Exit stack: [V12, 0x8ae, V1305]

================================

Block 0xd37
[0xd37:0xd45]
---
Predecessors: [0x963]
Successors: [0x96b]
---
0xd37 JUMPDEST
0xd38 PUSH1 0x14
0xd3a SLOAD
0xd3b PUSH3 0x10000
0xd3f SWAP1
0xd40 DIV
0xd41 PUSH1 0xff
0xd43 AND
0xd44 DUP2
0xd45 JUMP
---
0xd37: JUMPDEST 
0xd38: V1306 = 0x14
0xd3a: V1307 = S[0x14]
0xd3b: V1308 = 0x10000
0xd40: V1309 = DIV V1307 0x10000
0xd41: V1310 = 0xff
0xd43: V1311 = AND 0xff V1309
0xd45: JUMP 0x96b
---
Entry stack: [V12, 0x96b]
Stack pops: 1
Stack additions: [S0, V1311]
Exit stack: [V12, 0x96b, V1311]

================================

Block 0xd46
[0xd46:0xd54]
---
Predecessors: [0x98a]
Successors: [0x8ae]
---
0xd46 JUMPDEST
0xd47 PUSH1 0x12
0xd49 SLOAD
0xd4a PUSH1 0x1
0xd4c PUSH1 0xa0
0xd4e PUSH1 0x2
0xd50 EXP
0xd51 SUB
0xd52 AND
0xd53 DUP2
0xd54 JUMP
---
0xd46: JUMPDEST 
0xd47: V1312 = 0x12
0xd49: V1313 = S[0x12]
0xd4a: V1314 = 0x1
0xd4c: V1315 = 0xa0
0xd4e: V1316 = 0x2
0xd50: V1317 = EXP 0x2 0xa0
0xd51: V1318 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd52: V1319 = AND 0xffffffffffffffffffffffffffffffffffffffff V1313
0xd54: JUMP 0x8ae
---
Entry stack: [V12, 0x8ae]
Stack pops: 1
Stack additions: [S0, V1319]
Exit stack: [V12, 0x8ae, V1319]

================================

Block 0xd55
[0xd55:0xd66]
---
Predecessors: [0x9b9]
Successors: [0x802]
---
0xd55 JUMPDEST
0xd56 PUSH1 0x13
0xd58 PUSH1 0x20
0xd5a MSTORE
0xd5b PUSH1 0x0
0xd5d SWAP1
0xd5e DUP2
0xd5f MSTORE
0xd60 PUSH1 0x40
0xd62 SWAP1
0xd63 SHA3
0xd64 SLOAD
0xd65 DUP2
0xd66 JUMP
---
0xd55: JUMPDEST 
0xd56: V1320 = 0x13
0xd58: V1321 = 0x20
0xd5a: M[0x20] = 0x13
0xd5b: V1322 = 0x0
0xd5f: M[0x0] = V967
0xd60: V1323 = 0x40
0xd63: V1324 = SHA3 0x0 0x40
0xd64: V1325 = S[V1324]
0xd66: JUMP 0x802
---
Entry stack: [V12, 0x802, V967]
Stack pops: 2
Stack additions: [S1, V1325]
Exit stack: [V12, 0x802, V1325]

================================

Block 0xd67
[0xd67:0xd6c]
---
Predecessors: [0x9ea]
Successors: [0x802]
---
0xd67 JUMPDEST
0xd68 PUSH1 0x7
0xd6a SLOAD
0xd6b DUP2
0xd6c JUMP
---
0xd67: JUMPDEST 
0xd68: V1326 = 0x7
0xd6a: V1327 = S[0x7]
0xd6c: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1327]
Exit stack: [V12, 0x802, V1327]

================================

Block 0xd6d
[0xd6d:0xd72]
---
Predecessors: [0xa0f]
Successors: [0x802]
---
0xd6d JUMPDEST
0xd6e PUSH1 0x8
0xd70 SLOAD
0xd71 DUP2
0xd72 JUMP
---
0xd6d: JUMPDEST 
0xd6e: V1328 = 0x8
0xd70: V1329 = S[0x8]
0xd72: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1329]
Exit stack: [V12, 0x802, V1329]

================================

Block 0xd73
[0xd73:0xd78]
---
Predecessors: [0xa34]
Successors: [0x802]
---
0xd73 JUMPDEST
0xd74 PUSH1 0x11
0xd76 SLOAD
0xd77 DUP2
0xd78 JUMP
---
0xd73: JUMPDEST 
0xd74: V1330 = 0x11
0xd76: V1331 = S[0x11]
0xd78: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1331]
Exit stack: [V12, 0x802, V1331]

================================

Block 0xd79
[0xd79:0xd7e]
---
Predecessors: [0xa59]
Successors: [0x802]
---
0xd79 JUMPDEST
0xd7a PUSH1 0x1
0xd7c SLOAD
0xd7d DUP2
0xd7e JUMP
---
0xd79: JUMPDEST 
0xd7a: V1332 = 0x1
0xd7c: V1333 = S[0x1]
0xd7e: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1333]
Exit stack: [V12, 0x802, V1333]

================================

Block 0xd7f
[0xd7f:0xd84]
---
Predecessors: [0xa7e]
Successors: [0x802]
---
0xd7f JUMPDEST
0xd80 PUSH1 0xe
0xd82 SLOAD
0xd83 DUP2
0xd84 JUMP
---
0xd7f: JUMPDEST 
0xd80: V1334 = 0xe
0xd82: V1335 = S[0xe]
0xd84: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1335]
Exit stack: [V12, 0x802, V1335]

================================

Block 0xd85
[0xd85:0xd8a]
---
Predecessors: [0xaa3]
Successors: [0x802]
---
0xd85 JUMPDEST
0xd86 PUSH1 0x9
0xd88 SLOAD
0xd89 DUP2
0xd8a JUMP
---
0xd85: JUMPDEST 
0xd86: V1336 = 0x9
0xd88: V1337 = S[0x9]
0xd8a: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1337]
Exit stack: [V12, 0x802, V1337]

================================

Block 0xd8b
[0xd8b:0xd90]
---
Predecessors: [0xac8]
Successors: [0x802]
---
0xd8b JUMPDEST
0xd8c PUSH1 0xa
0xd8e SLOAD
0xd8f DUP2
0xd90 JUMP
---
0xd8b: JUMPDEST 
0xd8c: V1338 = 0xa
0xd8e: V1339 = S[0xa]
0xd90: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1339]
Exit stack: [V12, 0x802, V1339]

================================

Block 0xd91
[0xd91:0xda8]
---
Predecessors: [0xaed]
Successors: [0xc3a, 0xda9]
---
0xd91 JUMPDEST
0xd92 PUSH1 0x4
0xd94 SLOAD
0xd95 CALLER
0xd96 PUSH1 0x1
0xd98 PUSH1 0xa0
0xd9a PUSH1 0x2
0xd9c EXP
0xd9d SUB
0xd9e SWAP1
0xd9f DUP2
0xda0 AND
0xda1 SWAP2
0xda2 AND
0xda3 EQ
0xda4 ISZERO
0xda5 PUSH2 0xc3a
0xda8 JUMPI
---
0xd91: JUMPDEST 
0xd92: V1340 = 0x4
0xd94: V1341 = S[0x4]
0xd95: V1342 = CALLER
0xd96: V1343 = 0x1
0xd98: V1344 = 0xa0
0xd9a: V1345 = 0x2
0xd9c: V1346 = EXP 0x2 0xa0
0xd9d: V1347 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda0: V1348 = AND 0xffffffffffffffffffffffffffffffffffffffff V1342
0xda2: V1349 = AND V1341 0xffffffffffffffffffffffffffffffffffffffff
0xda3: V1350 = EQ V1349 V1348
0xda4: V1351 = ISZERO V1350
0xda5: V1352 = 0xc3a
0xda8: JUMPI 0xc3a V1351
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xda9
[0xda9:0xdb4]
---
Predecessors: [0xd91]
Successors: [0xdb5]
---
0xda9 PUSH1 0x14
0xdab DUP1
0xdac SLOAD
0xdad PUSH3 0xff0000
0xdb1 NOT
0xdb2 AND
0xdb3 SWAP1
0xdb4 SSTORE
---
0xda9: V1353 = 0x14
0xdac: V1354 = S[0x14]
0xdad: V1355 = 0xff0000
0xdb1: V1356 = NOT 0xff0000
0xdb2: V1357 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1354
0xdb4: S[0x14] = V1357
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xdb5
[0xdb5:0xdb5]
---
Predecessors: [0xda9]
Successors: [0xdb6]
---
0xdb5 JUMPDEST
---
0xdb5: JUMPDEST 
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xdb6
[0xdb6:0xdb7]
---
Predecessors: [0xdb5]
Successors: [0x7ed]
---
0xdb6 JUMPDEST
0xdb7 JUMP
---
0xdb6: JUMPDEST 
0xdb7: JUMP 0x7ed
---
Entry stack: [V12, 0x7ed]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xdb8
[0xdb8:0xdcf]
---
Predecessors: [0xb02]
Successors: [0xc3a, 0xdd0]
---
0xdb8 JUMPDEST
0xdb9 PUSH1 0x4
0xdbb SLOAD
0xdbc CALLER
0xdbd PUSH1 0x1
0xdbf PUSH1 0xa0
0xdc1 PUSH1 0x2
0xdc3 EXP
0xdc4 SUB
0xdc5 SWAP1
0xdc6 DUP2
0xdc7 AND
0xdc8 SWAP2
0xdc9 AND
0xdca EQ
0xdcb ISZERO
0xdcc PUSH2 0xc3a
0xdcf JUMPI
---
0xdb8: JUMPDEST 
0xdb9: V1358 = 0x4
0xdbb: V1359 = S[0x4]
0xdbc: V1360 = CALLER
0xdbd: V1361 = 0x1
0xdbf: V1362 = 0xa0
0xdc1: V1363 = 0x2
0xdc3: V1364 = EXP 0x2 0xa0
0xdc4: V1365 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc7: V1366 = AND 0xffffffffffffffffffffffffffffffffffffffff V1360
0xdc9: V1367 = AND V1359 0xffffffffffffffffffffffffffffffffffffffff
0xdca: V1368 = EQ V1367 V1366
0xdcb: V1369 = ISZERO V1368
0xdcc: V1370 = 0xc3a
0xdcf: JUMPI 0xc3a V1369
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xdd0
[0xdd0:0xdde]
---
Predecessors: [0xdb8]
Successors: [0xddf]
---
0xdd0 PUSH1 0x14
0xdd2 DUP1
0xdd3 SLOAD
0xdd4 PUSH2 0xff00
0xdd7 NOT
0xdd8 AND
0xdd9 PUSH2 0x100
0xddc OR
0xddd SWAP1
0xdde SSTORE
---
0xdd0: V1371 = 0x14
0xdd3: V1372 = S[0x14]
0xdd4: V1373 = 0xff00
0xdd7: V1374 = NOT 0xff00
0xdd8: V1375 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1372
0xdd9: V1376 = 0x100
0xddc: V1377 = OR 0x100 V1375
0xdde: S[0x14] = V1377
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xddf
[0xddf:0xddf]
---
Predecessors: [0xdd0]
Successors: [0xde0]
---
0xddf JUMPDEST
---
0xddf: JUMPDEST 
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xde0
[0xde0:0xde1]
---
Predecessors: [0xddf]
Successors: [0x7ed]
---
0xde0 JUMPDEST
0xde1 JUMP
---
0xde0: JUMPDEST 
0xde1: JUMP 0x7ed
---
Entry stack: [V12, 0x7ed]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xde2
[0xde2:0xde7]
---
Predecessors: [0xb17]
Successors: [0x802]
---
0xde2 JUMPDEST
0xde3 PUSH1 0xc
0xde5 SLOAD
0xde6 DUP2
0xde7 JUMP
---
0xde2: JUMPDEST 
0xde3: V1378 = 0xc
0xde5: V1379 = S[0xc]
0xde7: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1379]
Exit stack: [V12, 0x802, V1379]

================================

Block 0xde8
[0xde8:0xded]
---
Predecessors: [0xb3c]
Successors: [0x802]
---
0xde8 JUMPDEST
0xde9 PUSH1 0xb
0xdeb SLOAD
0xdec DUP2
0xded JUMP
---
0xde8: JUMPDEST 
0xde9: V1380 = 0xb
0xdeb: V1381 = S[0xb]
0xded: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1381]
Exit stack: [V12, 0x802, V1381]

================================

Block 0xdee
[0xdee:0xdf3]
---
Predecessors: [0xb61]
Successors: [0x802]
---
0xdee JUMPDEST
0xdef PUSH1 0x6
0xdf1 SLOAD
0xdf2 DUP2
0xdf3 JUMP
---
0xdee: JUMPDEST 
0xdef: V1382 = 0x6
0xdf1: V1383 = S[0x6]
0xdf3: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1383]
Exit stack: [V12, 0x802, V1383]

================================

Block 0xdf4
[0xdf4:0xe01]
---
Predecessors: [0xb86]
Successors: [0x96b]
---
0xdf4 JUMPDEST
0xdf5 PUSH1 0x14
0xdf7 SLOAD
0xdf8 PUSH2 0x100
0xdfb SWAP1
0xdfc DIV
0xdfd PUSH1 0xff
0xdff AND
0xe00 DUP2
0xe01 JUMP
---
0xdf4: JUMPDEST 
0xdf5: V1384 = 0x14
0xdf7: V1385 = S[0x14]
0xdf8: V1386 = 0x100
0xdfc: V1387 = DIV V1385 0x100
0xdfd: V1388 = 0xff
0xdff: V1389 = AND 0xff V1387
0xe01: JUMP 0x96b
---
Entry stack: [V12, 0x96b]
Stack pops: 1
Stack additions: [S0, V1389]
Exit stack: [V12, 0x96b, V1389]

================================

Block 0xe02
[0xe02:0xe0a]
---
Predecessors: [0xbad]
Successors: [0x96b]
---
0xe02 JUMPDEST
0xe03 PUSH1 0x14
0xe05 SLOAD
0xe06 PUSH1 0xff
0xe08 AND
0xe09 DUP2
0xe0a JUMP
---
0xe02: JUMPDEST 
0xe03: V1390 = 0x14
0xe05: V1391 = S[0x14]
0xe06: V1392 = 0xff
0xe08: V1393 = AND 0xff V1391
0xe0a: JUMP 0x96b
---
Entry stack: [V12, 0x96b]
Stack pops: 1
Stack additions: [S0, V1393]
Exit stack: [V12, 0x96b, V1393]

================================

Block 0xe0b
[0xe0b:0xe22]
---
Predecessors: [0xbd4]
Successors: [0xc3a, 0xe23]
---
0xe0b JUMPDEST
0xe0c PUSH1 0x4
0xe0e SLOAD
0xe0f CALLER
0xe10 PUSH1 0x1
0xe12 PUSH1 0xa0
0xe14 PUSH1 0x2
0xe16 EXP
0xe17 SUB
0xe18 SWAP1
0xe19 DUP2
0xe1a AND
0xe1b SWAP2
0xe1c AND
0xe1d EQ
0xe1e ISZERO
0xe1f PUSH2 0xc3a
0xe22 JUMPI
---
0xe0b: JUMPDEST 
0xe0c: V1394 = 0x4
0xe0e: V1395 = S[0x4]
0xe0f: V1396 = CALLER
0xe10: V1397 = 0x1
0xe12: V1398 = 0xa0
0xe14: V1399 = 0x2
0xe16: V1400 = EXP 0x2 0xa0
0xe17: V1401 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1a: V1402 = AND 0xffffffffffffffffffffffffffffffffffffffff V1396
0xe1c: V1403 = AND V1395 0xffffffffffffffffffffffffffffffffffffffff
0xe1d: V1404 = EQ V1403 V1402
0xe1e: V1405 = ISZERO V1404
0xe1f: V1406 = 0xc3a
0xe22: JUMPI 0xc3a V1405
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xe23
[0xe23:0xe33]
---
Predecessors: [0xe0b]
Successors: [0xe34]
---
0xe23 PUSH1 0x14
0xe25 DUP1
0xe26 SLOAD
0xe27 PUSH3 0xff0000
0xe2b NOT
0xe2c AND
0xe2d PUSH3 0x10000
0xe31 OR
0xe32 SWAP1
0xe33 SSTORE
---
0xe23: V1407 = 0x14
0xe26: V1408 = S[0x14]
0xe27: V1409 = 0xff0000
0xe2b: V1410 = NOT 0xff0000
0xe2c: V1411 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1408
0xe2d: V1412 = 0x10000
0xe31: V1413 = OR 0x10000 V1411
0xe33: S[0x14] = V1413
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xe34
[0xe34:0xe34]
---
Predecessors: [0xe23]
Successors: [0xe35]
---
0xe34 JUMPDEST
---
0xe34: JUMPDEST 
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed]

================================

Block 0xe35
[0xe35:0xe36]
---
Predecessors: [0xe34]
Successors: [0x7ed]
---
0xe35 JUMPDEST
0xe36 JUMP
---
0xe35: JUMPDEST 
0xe36: JUMP 0x7ed
---
Entry stack: [V12, 0x7ed]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xe37
[0xe37:0xe43]
---
Predecessors: [0xbe9]
Successors: [0xccf, 0xe44]
---
0xe37 JUMPDEST
0xe38 PUSH1 0x2
0xe3a SLOAD
0xe3b PUSH1 0x0
0xe3d SWAP1
0xe3e TIMESTAMP
0xe3f LT
0xe40 PUSH2 0xccf
0xe43 JUMPI
---
0xe37: JUMPDEST 
0xe38: V1414 = 0x2
0xe3a: V1415 = S[0x2]
0xe3b: V1416 = 0x0
0xe3e: V1417 = TIMESTAMP
0xe3f: V1418 = LT V1417 V1415
0xe40: V1419 = 0xccf
0xe43: JUMPI 0xccf V1418
---
Entry stack: [V12, 0x7ed]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7ed, 0x0]

================================

Block 0xe44
[0xe44:0xe4f]
---
Predecessors: [0xe37]
Successors: [0xe50, 0xf04]
---
0xe44 PUSH1 0x14
0xe46 SLOAD
0xe47 PUSH1 0xff
0xe49 AND
0xe4a ISZERO
0xe4b ISZERO
0xe4c PUSH2 0xf04
0xe4f JUMPI
---
0xe44: V1420 = 0x14
0xe46: V1421 = S[0x14]
0xe47: V1422 = 0xff
0xe49: V1423 = AND 0xff V1421
0xe4a: V1424 = ISZERO V1423
0xe4b: V1425 = ISZERO V1424
0xe4c: V1426 = 0xf04
0xe4f: JUMPI 0xf04 V1425
---
Entry stack: [V12, 0x7ed, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, 0x0]

================================

Block 0xe50
[0xe50:0xe76]
---
Predecessors: [0xe44]
Successors: [0xe77, 0xf04]
---
0xe50 POP
0xe51 PUSH1 0x1
0xe53 PUSH1 0xa0
0xe55 PUSH1 0x2
0xe57 EXP
0xe58 SUB
0xe59 CALLER
0xe5a AND
0xe5b PUSH1 0x0
0xe5d SWAP1
0xe5e DUP2
0xe5f MSTORE
0xe60 PUSH1 0x13
0xe62 PUSH1 0x20
0xe64 MSTORE
0xe65 PUSH1 0x40
0xe67 DUP2
0xe68 SHA3
0xe69 DUP1
0xe6a SLOAD
0xe6b SWAP1
0xe6c DUP3
0xe6d SWAP1
0xe6e SSTORE
0xe6f SWAP1
0xe70 DUP2
0xe71 GT
0xe72 ISZERO
0xe73 PUSH2 0xf04
0xe76 JUMPI
---
0xe51: V1427 = 0x1
0xe53: V1428 = 0xa0
0xe55: V1429 = 0x2
0xe57: V1430 = EXP 0x2 0xa0
0xe58: V1431 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe59: V1432 = CALLER
0xe5a: V1433 = AND V1432 0xffffffffffffffffffffffffffffffffffffffff
0xe5b: V1434 = 0x0
0xe5f: M[0x0] = V1433
0xe60: V1435 = 0x13
0xe62: V1436 = 0x20
0xe64: M[0x20] = 0x13
0xe65: V1437 = 0x40
0xe68: V1438 = SHA3 0x0 0x40
0xe6a: V1439 = S[V1438]
0xe6e: S[V1438] = 0x0
0xe71: V1440 = GT V1439 0x0
0xe72: V1441 = ISZERO V1440
0xe73: V1442 = 0xf04
0xe76: JUMPI 0xf04 V1441
---
Entry stack: [V12, 0x7ed, 0x0]
Stack pops: 1
Stack additions: [V1439]
Exit stack: [V12, 0x7ed, V1439]

================================

Block 0xe77
[0xe77:0xea1]
---
Predecessors: [0xe50]
Successors: [0xea2, 0xee8]
---
0xe77 PUSH1 0x1
0xe79 PUSH1 0xa0
0xe7b PUSH1 0x2
0xe7d EXP
0xe7e SUB
0xe7f CALLER
0xe80 AND
0xe81 DUP2
0xe82 ISZERO
0xe83 PUSH2 0x8fc
0xe86 MUL
0xe87 DUP3
0xe88 PUSH1 0x40
0xe8a MLOAD
0xe8b PUSH1 0x0
0xe8d PUSH1 0x40
0xe8f MLOAD
0xe90 DUP1
0xe91 DUP4
0xe92 SUB
0xe93 DUP2
0xe94 DUP6
0xe95 DUP9
0xe96 DUP9
0xe97 CALL
0xe98 SWAP4
0xe99 POP
0xe9a POP
0xe9b POP
0xe9c POP
0xe9d ISZERO
0xe9e PUSH2 0xee8
0xea1 JUMPI
---
0xe77: V1443 = 0x1
0xe79: V1444 = 0xa0
0xe7b: V1445 = 0x2
0xe7d: V1446 = EXP 0x2 0xa0
0xe7e: V1447 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7f: V1448 = CALLER
0xe80: V1449 = AND V1448 0xffffffffffffffffffffffffffffffffffffffff
0xe82: V1450 = ISZERO V1439
0xe83: V1451 = 0x8fc
0xe86: V1452 = MUL 0x8fc V1450
0xe88: V1453 = 0x40
0xe8a: V1454 = M[0x40]
0xe8b: V1455 = 0x0
0xe8d: V1456 = 0x40
0xe8f: V1457 = M[0x40]
0xe92: V1458 = SUB V1454 V1457
0xe97: V1459 = CALL V1452 V1449 V1439 V1457 V1458 V1457 0x0
0xe9d: V1460 = ISZERO V1459
0xe9e: V1461 = 0xee8
0xea1: JUMPI 0xee8 V1460
---
Entry stack: [V12, 0x7ed, V1439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7ed, V1439]

================================

Block 0xea2
[0xea2:0xee7]
---
Predecessors: [0xe77]
Successors: [0xf04]
---
0xea2 PUSH1 0x0
0xea4 DUP1
0xea5 MLOAD
0xea6 PUSH1 0x20
0xea8 PUSH2 0xfc7
0xeab DUP4
0xeac CODECOPY
0xead DUP2
0xeae MLOAD
0xeaf SWAP2
0xeb0 MSTORE
0xeb1 CALLER
0xeb2 DUP3
0xeb3 PUSH1 0x0
0xeb5 PUSH1 0x40
0xeb7 MLOAD
0xeb8 PUSH1 0x1
0xeba PUSH1 0xa0
0xebc PUSH1 0x2
0xebe EXP
0xebf SUB
0xec0 SWAP1
0xec1 SWAP4
0xec2 AND
0xec3 DUP4
0xec4 MSTORE
0xec5 PUSH1 0x20
0xec7 DUP4
0xec8 ADD
0xec9 SWAP2
0xeca SWAP1
0xecb SWAP2
0xecc MSTORE
0xecd ISZERO
0xece ISZERO
0xecf PUSH1 0x40
0xed1 DUP1
0xed2 DUP4
0xed3 ADD
0xed4 SWAP2
0xed5 SWAP1
0xed6 SWAP2
0xed7 MSTORE
0xed8 PUSH1 0x60
0xeda SWAP1
0xedb SWAP2
0xedc ADD
0xedd SWAP1
0xede MLOAD
0xedf DUP1
0xee0 SWAP2
0xee1 SUB
0xee2 SWAP1
0xee3 LOG1
0xee4 PUSH2 0xf04
0xee7 JUMP
---
0xea2: V1462 = 0x0
0xea5: V1463 = M[0x0]
0xea6: V1464 = 0x20
0xea8: V1465 = 0xfc7
0xeac: CODECOPY 0x0 0xfc7 0x20
0xeae: V1466 = M[0x0]
0xeb0: M[0x0] = V1463
0xeb1: V1467 = CALLER
0xeb3: V1468 = 0x0
0xeb5: V1469 = 0x40
0xeb7: V1470 = M[0x40]
0xeb8: V1471 = 0x1
0xeba: V1472 = 0xa0
0xebc: V1473 = 0x2
0xebe: V1474 = EXP 0x2 0xa0
0xebf: V1475 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec2: V1476 = AND V1467 0xffffffffffffffffffffffffffffffffffffffff
0xec4: M[V1470] = V1476
0xec5: V1477 = 0x20
0xec8: V1478 = ADD V1470 0x20
0xecc: M[V1478] = V1439
0xecd: V1479 = ISZERO 0x0
0xece: V1480 = ISZERO 0x1
0xecf: V1481 = 0x40
0xed3: V1482 = ADD V1470 0x40
0xed7: M[V1482] = 0x0
0xed8: V1483 = 0x60
0xedc: V1484 = ADD V1470 0x60
0xede: V1485 = M[0x40]
0xee1: V1486 = SUB V1484 V1485
0xee3: LOG V1485 V1486 V1466
0xee4: V1487 = 0xf04
0xee7: JUMP 0xf04
---
Entry stack: [V12, 0x7ed, V1439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7ed, V1439]

================================

Block 0xee8
[0xee8:0xf03]
---
Predecessors: [0xe77]
Successors: [0xf04]
---
0xee8 JUMPDEST
0xee9 PUSH1 0x1
0xeeb PUSH1 0xa0
0xeed PUSH1 0x2
0xeef EXP
0xef0 SUB
0xef1 CALLER
0xef2 AND
0xef3 PUSH1 0x0
0xef5 SWAP1
0xef6 DUP2
0xef7 MSTORE
0xef8 PUSH1 0x13
0xefa PUSH1 0x20
0xefc MSTORE
0xefd PUSH1 0x40
0xeff SWAP1
0xf00 SHA3
0xf01 DUP2
0xf02 SWAP1
0xf03 SSTORE
---
0xee8: JUMPDEST 
0xee9: V1488 = 0x1
0xeeb: V1489 = 0xa0
0xeed: V1490 = 0x2
0xeef: V1491 = EXP 0x2 0xa0
0xef0: V1492 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef1: V1493 = CALLER
0xef2: V1494 = AND V1493 0xffffffffffffffffffffffffffffffffffffffff
0xef3: V1495 = 0x0
0xef7: M[0x0] = V1494
0xef8: V1496 = 0x13
0xefa: V1497 = 0x20
0xefc: M[0x20] = 0x13
0xefd: V1498 = 0x40
0xf00: V1499 = SHA3 0x0 0x40
0xf03: S[V1499] = V1439
---
Entry stack: [V12, 0x7ed, V1439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7ed, V1439]

================================

Block 0xf04
[0xf04:0xf04]
---
Predecessors: [0xe44, 0xe50, 0xea2, 0xee8]
Successors: [0xf05]
---
0xf04 JUMPDEST
---
0xf04: JUMPDEST 
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xf05
[0xf05:0xf05]
---
Predecessors: [0xf04]
Successors: [0xf06]
---
0xf05 JUMPDEST
---
0xf05: JUMPDEST 
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xf06
[0xf06:0xf12]
---
Predecessors: [0xf05]
Successors: [0xf13, 0xf26]
---
0xf06 JUMPDEST
0xf07 PUSH1 0x14
0xf09 SLOAD
0xf0a PUSH1 0xff
0xf0c AND
0xf0d DUP1
0xf0e ISZERO
0xf0f PUSH2 0xf26
0xf12 JUMPI
---
0xf06: JUMPDEST 
0xf07: V1500 = 0x14
0xf09: V1501 = S[0x14]
0xf0a: V1502 = 0xff
0xf0c: V1503 = AND 0xff V1501
0xf0e: V1504 = ISZERO V1503
0xf0f: V1505 = 0xf26
0xf12: JUMPI 0xf26 V1504
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: [V1503]
Exit stack: [V12, 0x7ed, S0, V1503]

================================

Block 0xf13
[0xf13:0xf25]
---
Predecessors: [0xf06]
Successors: [0xf26]
---
0xf13 POP
0xf14 PUSH1 0x3
0xf16 SLOAD
0xf17 CALLER
0xf18 PUSH1 0x1
0xf1a PUSH1 0xa0
0xf1c PUSH1 0x2
0xf1e EXP
0xf1f SUB
0xf20 SWAP1
0xf21 DUP2
0xf22 AND
0xf23 SWAP2
0xf24 AND
0xf25 EQ
---
0xf14: V1506 = 0x3
0xf16: V1507 = S[0x3]
0xf17: V1508 = CALLER
0xf18: V1509 = 0x1
0xf1a: V1510 = 0xa0
0xf1c: V1511 = 0x2
0xf1e: V1512 = EXP 0x2 0xa0
0xf1f: V1513 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf22: V1514 = AND 0xffffffffffffffffffffffffffffffffffffffff V1508
0xf24: V1515 = AND V1507 0xffffffffffffffffffffffffffffffffffffffff
0xf25: V1516 = EQ V1515 V1514
---
Entry stack: [V12, 0x7ed, S1, V1503]
Stack pops: 1
Stack additions: [V1516]
Exit stack: [V12, 0x7ed, S1, V1516]

================================

Block 0xf26
[0xf26:0xf2b]
---
Predecessors: [0xf06, 0xf13]
Successors: [0xccf, 0xf2c]
---
0xf26 JUMPDEST
0xf27 ISZERO
0xf28 PUSH2 0xccf
0xf2b JUMPI
---
0xf26: JUMPDEST 
0xf27: V1517 = ISZERO S0
0xf28: V1518 = 0xccf
0xf2b: JUMPI 0xccf V1517
---
Entry stack: [V12, 0x7ed, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7ed, S1]

================================

Block 0xf2c
[0xf2c:0xf5e]
---
Predecessors: [0xf26]
Successors: [0xf5f, 0xfb4]
---
0xf2c PUSH1 0x3
0xf2e SLOAD
0xf2f PUSH1 0x8
0xf31 SLOAD
0xf32 PUSH1 0x1
0xf34 PUSH1 0xa0
0xf36 PUSH1 0x2
0xf38 EXP
0xf39 SUB
0xf3a SWAP1
0xf3b SWAP2
0xf3c AND
0xf3d SWAP1
0xf3e DUP1
0xf3f ISZERO
0xf40 PUSH2 0x8fc
0xf43 MUL
0xf44 SWAP1
0xf45 PUSH1 0x40
0xf47 MLOAD
0xf48 PUSH1 0x0
0xf4a PUSH1 0x40
0xf4c MLOAD
0xf4d DUP1
0xf4e DUP4
0xf4f SUB
0xf50 DUP2
0xf51 DUP6
0xf52 DUP9
0xf53 DUP9
0xf54 CALL
0xf55 SWAP4
0xf56 POP
0xf57 POP
0xf58 POP
0xf59 POP
0xf5a ISZERO
0xf5b PUSH2 0xfb4
0xf5e JUMPI
---
0xf2c: V1519 = 0x3
0xf2e: V1520 = S[0x3]
0xf2f: V1521 = 0x8
0xf31: V1522 = S[0x8]
0xf32: V1523 = 0x1
0xf34: V1524 = 0xa0
0xf36: V1525 = 0x2
0xf38: V1526 = EXP 0x2 0xa0
0xf39: V1527 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf3c: V1528 = AND V1520 0xffffffffffffffffffffffffffffffffffffffff
0xf3f: V1529 = ISZERO V1522
0xf40: V1530 = 0x8fc
0xf43: V1531 = MUL 0x8fc V1529
0xf45: V1532 = 0x40
0xf47: V1533 = M[0x40]
0xf48: V1534 = 0x0
0xf4a: V1535 = 0x40
0xf4c: V1536 = M[0x40]
0xf4f: V1537 = SUB V1533 V1536
0xf54: V1538 = CALL V1531 V1528 V1522 V1536 V1537 V1536 0x0
0xf5a: V1539 = ISZERO V1538
0xf5b: V1540 = 0xfb4
0xf5e: JUMPI 0xfb4 V1539
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xf5f
[0xf5f:0xfb3]
---
Predecessors: [0xf2c]
Successors: [0xccf]
---
0xf5f PUSH1 0x3
0xf61 SLOAD
0xf62 PUSH1 0x8
0xf64 SLOAD
0xf65 PUSH1 0x0
0xf67 DUP1
0xf68 MLOAD
0xf69 PUSH1 0x20
0xf6b PUSH2 0xfc7
0xf6e DUP4
0xf6f CODECOPY
0xf70 DUP2
0xf71 MLOAD
0xf72 SWAP2
0xf73 MSTORE
0xf74 SWAP2
0xf75 PUSH1 0x1
0xf77 PUSH1 0xa0
0xf79 PUSH1 0x2
0xf7b EXP
0xf7c SUB
0xf7d AND
0xf7e SWAP1
0xf7f PUSH1 0x0
0xf81 PUSH1 0x40
0xf83 MLOAD
0xf84 PUSH1 0x1
0xf86 PUSH1 0xa0
0xf88 PUSH1 0x2
0xf8a EXP
0xf8b SUB
0xf8c SWAP1
0xf8d SWAP4
0xf8e AND
0xf8f DUP4
0xf90 MSTORE
0xf91 PUSH1 0x20
0xf93 DUP4
0xf94 ADD
0xf95 SWAP2
0xf96 SWAP1
0xf97 SWAP2
0xf98 MSTORE
0xf99 ISZERO
0xf9a ISZERO
0xf9b PUSH1 0x40
0xf9d DUP1
0xf9e DUP4
0xf9f ADD
0xfa0 SWAP2
0xfa1 SWAP1
0xfa2 SWAP2
0xfa3 MSTORE
0xfa4 PUSH1 0x60
0xfa6 SWAP1
0xfa7 SWAP2
0xfa8 ADD
0xfa9 SWAP1
0xfaa MLOAD
0xfab DUP1
0xfac SWAP2
0xfad SUB
0xfae SWAP1
0xfaf LOG1
0xfb0 PUSH2 0xccf
0xfb3 JUMP
---
0xf5f: V1541 = 0x3
0xf61: V1542 = S[0x3]
0xf62: V1543 = 0x8
0xf64: V1544 = S[0x8]
0xf65: V1545 = 0x0
0xf68: V1546 = M[0x0]
0xf69: V1547 = 0x20
0xf6b: V1548 = 0xfc7
0xf6f: CODECOPY 0x0 0xfc7 0x20
0xf71: V1549 = M[0x0]
0xf73: M[0x0] = V1546
0xf75: V1550 = 0x1
0xf77: V1551 = 0xa0
0xf79: V1552 = 0x2
0xf7b: V1553 = EXP 0x2 0xa0
0xf7c: V1554 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7d: V1555 = AND 0xffffffffffffffffffffffffffffffffffffffff V1542
0xf7f: V1556 = 0x0
0xf81: V1557 = 0x40
0xf83: V1558 = M[0x40]
0xf84: V1559 = 0x1
0xf86: V1560 = 0xa0
0xf88: V1561 = 0x2
0xf8a: V1562 = EXP 0x2 0xa0
0xf8b: V1563 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8e: V1564 = AND V1555 0xffffffffffffffffffffffffffffffffffffffff
0xf90: M[V1558] = V1564
0xf91: V1565 = 0x20
0xf94: V1566 = ADD V1558 0x20
0xf98: M[V1566] = V1544
0xf99: V1567 = ISZERO 0x0
0xf9a: V1568 = ISZERO 0x1
0xf9b: V1569 = 0x40
0xf9f: V1570 = ADD V1558 0x40
0xfa3: M[V1570] = 0x0
0xfa4: V1571 = 0x60
0xfa8: V1572 = ADD V1558 0x60
0xfaa: V1573 = M[0x40]
0xfad: V1574 = SUB V1572 V1573
0xfaf: LOG V1573 V1574 V1549
0xfb0: V1575 = 0xccf
0xfb3: JUMP 0xccf
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xfb4
[0xfb4:0xfbe]
---
Predecessors: [0xf2c]
Successors: [0xfbf]
---
0xfb4 JUMPDEST
0xfb5 PUSH1 0x14
0xfb7 DUP1
0xfb8 SLOAD
0xfb9 PUSH1 0xff
0xfbb NOT
0xfbc AND
0xfbd SWAP1
0xfbe SSTORE
---
0xfb4: JUMPDEST 
0xfb5: V1576 = 0x14
0xfb8: V1577 = S[0x14]
0xfb9: V1578 = 0xff
0xfbb: V1579 = NOT 0xff
0xfbc: V1580 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1577
0xfbe: S[0x14] = V1580
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xfbf
[0xfbf:0xfbf]
---
Predecessors: [0xfb4]
Successors: [0xfc0]
---
0xfbf JUMPDEST
---
0xfbf: JUMPDEST 
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xfc0
[0xfc0:0xfc0]
---
Predecessors: [0xfbf]
Successors: [0xfc1]
---
0xfc0 JUMPDEST
---
0xfc0: JUMPDEST 
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xfc1
[0xfc1:0xfc1]
---
Predecessors: [0xfc0]
Successors: [0xfc2]
---
0xfc1 JUMPDEST
---
0xfc1: JUMPDEST 
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xfc2
[0xfc2:0xfc2]
---
Predecessors: [0xfc1]
Successors: [0xfc3]
---
0xfc2 JUMPDEST
---
0xfc2: JUMPDEST 
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ed, S0]

================================

Block 0xfc3
[0xfc3:0xfc5]
---
Predecessors: [0xfc2]
Successors: [0x7ed]
---
0xfc3 JUMPDEST
0xfc4 POP
0xfc5 JUMP
---
0xfc3: JUMPDEST 
0xfc5: JUMP 0x7ed
---
Entry stack: [V12, 0x7ed, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc6
[0xfc6:0x1011]
---
Predecessors: []
Successors: []
---
0xfc6 STOP
0xfc7 MISSING 0xe8
0xfc8 TIMESTAMP
0xfc9 MISSING 0xae
0xfca MISSING 0xa7
0xfcb MISSING 0xa5
0xfcc CALL
0xfcd MISSING 0xb0
0xfce LT
0xfcf MISSING 0x49
0xfd0 MISSING 0xd7
0xfd1 MSTORE
0xfd2 STOP
0xfd3 DUP13
0xfd4 MSTORE8
0xfd5 MISSING 0xc5
0xfd6 MISSING 0x28
0xfd7 SWAP1
0xfd8 MISSING 0xb1
0xfd9 MISSING 0xa6
0xfda MISSING 0xda
0xfdb MISSING 0xf6
0xfdc PUSH1 0xcf
0xfde CODECOPY
0xfdf MISSING 0xe8
0xfe0 MISSING 0xee
0xfe1 MISSING 0xc5
0xfe2 MOD
0xfe3 GT
0xfe4 MISSING 0x2b
0xfe5 MISSING 0xbd
0xfe6 MISSING 0xf6
0xfe7 LOG1
0xfe8 PUSH6 0x627a7a723058
0xfef SHA3
0xff0 MISSING 0x23
0xff1 MISSING 0x4a
0xff2 MISSING 0xaa
0xff3 MISSING 0xd3
0xff4 MISSING 0xcd
0xff5 PUSH9 0x8af35dafddb0fff48b
0xfff PUSH17 0x23dcbe79e16f8dd3463d0aa69a594b0d00
0x1011 MISSING 0x29
---
0xfc6: STOP 
0xfc7: MISSING 0xe8
0xfc8: V1581 = TIMESTAMP
0xfc9: MISSING 0xae
0xfca: MISSING 0xa7
0xfcb: MISSING 0xa5
0xfcc: V1582 = CALL S0 S1 S2 S3 S4 S5 S6
0xfcd: MISSING 0xb0
0xfce: V1583 = LT S0 S1
0xfcf: MISSING 0x49
0xfd0: MISSING 0xd7
0xfd1: M[S0] = S1
0xfd2: STOP 
0xfd4: M8[S12] = S0
0xfd5: MISSING 0xc5
0xfd6: MISSING 0x28
0xfd8: MISSING 0xb1
0xfd9: MISSING 0xa6
0xfda: MISSING 0xda
0xfdb: MISSING 0xf6
0xfdc: V1584 = 0xcf
0xfde: CODECOPY 0xcf S0 S1
0xfdf: MISSING 0xe8
0xfe0: MISSING 0xee
0xfe1: MISSING 0xc5
0xfe2: V1585 = MOD S0 S1
0xfe3: V1586 = GT V1585 S2
0xfe4: MISSING 0x2b
0xfe5: MISSING 0xbd
0xfe6: MISSING 0xf6
0xfe7: LOG S0 S1 S2
0xfe8: V1587 = 0x627a7a723058
0xfef: V1588 = SHA3 0x627a7a723058 S3
0xff0: MISSING 0x23
0xff1: MISSING 0x4a
0xff2: MISSING 0xaa
0xff3: MISSING 0xd3
0xff4: MISSING 0xcd
0xff5: V1589 = 0x8af35dafddb0fff48b
0xfff: V1590 = 0x23dcbe79e16f8dd3463d0aa69a594b0d00
0x1011: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1581, V1582, V1583, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V1586, V1588, 0x23dcbe79e16f8dd3463d0aa69a594b0d00, 0x8af35dafddb0fff48b]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x7da
Exit block: 0x7ed
Body: 0x7da, 0x7e1, 0x7e5, 0x7ed, 0xbf3, 0xbfd, 0xc0a, 0xc17, 0xc1d, 0xc2a, 0xc3a, 0xc3b, 0xc3c

Function 1:
Public function signature: 0x10309781
Entry block: 0x7ef
Exit block: 0x802
Body: 0x7ef, 0x7f6, 0x7fa, 0x802, 0xc3e

Function 2:
Public function signature: 0x1fd8ffb0
Entry block: 0x814
Exit block: 0x7ed
Body: 0x7ed, 0x814, 0x81b, 0x81f, 0xc44, 0xc4e, 0xc65, 0xcb6, 0xcba, 0xcc7, 0xccb, 0xccf, 0xcd0, 0xcd1, 0xcd2

Function 3:
Public function signature: 0x29dcb0cf
Entry block: 0x82c
Exit block: 0x802
Body: 0x802, 0x82c, 0x833, 0x837, 0xcd5

Function 4:
Public function signature: 0x2ec914b5
Entry block: 0x851
Exit block: 0x802
Body: 0x802, 0x851, 0x858, 0x85c, 0xcdb

Function 5:
Public function signature: 0x31252103
Entry block: 0x876
Exit block: 0x802
Body: 0x802, 0x876, 0x87d, 0x881, 0xce1

Function 6:
Public function signature: 0x38af3eed
Entry block: 0x89b
Exit block: 0x8ae
Body: 0x89b, 0x8a2, 0x8a6, 0x8ae, 0xce7

Function 7:
Public function signature: 0x3b41ddba
Entry block: 0x8ca
Exit block: 0x802
Body: 0x802, 0x8ca, 0x8d1, 0x8d5, 0xcf6

Function 8:
Public function signature: 0x4c95f5d0
Entry block: 0x8ef
Exit block: 0x802
Body: 0x802, 0x8ef, 0x8f6, 0x8fa, 0xcfc

Function 9:
Public function signature: 0x4fa34075
Entry block: 0x914
Exit block: 0x7ed
Body: 0x7ed, 0x914, 0x91b, 0x91f, 0xc3a, 0xc3b, 0xc3c, 0xd02, 0xd1a, 0xd25, 0xd26

Function 10:
Public function signature: 0x5a0254e2
Entry block: 0x929
Exit block: 0x8ae
Body: 0x8ae, 0x929, 0x930, 0x934, 0xd28

Function 11:
Public function signature: 0x5b54d2d6
Entry block: 0x958
Exit block: 0x96b
Body: 0x958, 0x95f, 0x963, 0x96b, 0xd37

Function 12:
Public function signature: 0x6e66f6e9
Entry block: 0x97f
Exit block: 0x8ae
Body: 0x8ae, 0x97f, 0x986, 0x98a, 0xd46

Function 13:
Public function signature: 0x70a08231
Entry block: 0x9ae
Exit block: 0x802
Body: 0x802, 0x9ae, 0x9b5, 0x9b9, 0xd55

Function 14:
Public function signature: 0x7a3a0e84
Entry block: 0x9df
Exit block: 0x802
Body: 0x802, 0x9df, 0x9e6, 0x9ea, 0xd67

Function 15:
Public function signature: 0x7b3e5e7b
Entry block: 0xa04
Exit block: 0x802
Body: 0x802, 0xa04, 0xa0b, 0xa0f, 0xd6d

Function 16:
Public function signature: 0x7c24ce7d
Entry block: 0xa29
Exit block: 0x802
Body: 0x802, 0xa29, 0xa30, 0xa34, 0xd73

Function 17:
Public function signature: 0x827037db
Entry block: 0xa4e
Exit block: 0x802
Body: 0x802, 0xa4e, 0xa55, 0xa59, 0xd79

Function 18:
Public function signature: 0x89e66aea
Entry block: 0xa73
Exit block: 0x802
Body: 0x802, 0xa73, 0xa7a, 0xa7e, 0xd7f

Function 19:
Public function signature: 0x8f48399a
Entry block: 0xa98
Exit block: 0x802
Body: 0x802, 0xa98, 0xa9f, 0xaa3, 0xd85

Function 20:
Public function signature: 0x92dcc41c
Entry block: 0xabd
Exit block: 0x802
Body: 0x802, 0xabd, 0xac4, 0xac8, 0xd8b

Function 21:
Public function signature: 0x998936b0
Entry block: 0xae2
Exit block: 0x7ed
Body: 0x7ed, 0xae2, 0xae9, 0xaed, 0xc3a, 0xc3b, 0xc3c, 0xd91, 0xda9, 0xdb5, 0xdb6

Function 22:
Public function signature: 0xa02d55a3
Entry block: 0xaf7
Exit block: 0x7ed
Body: 0x7ed, 0xaf7, 0xafe, 0xb02, 0xc3a, 0xc3b, 0xc3c, 0xdb8, 0xdd0, 0xddf, 0xde0

Function 23:
Public function signature: 0xa8a75b78
Entry block: 0xb0c
Exit block: 0x802
Body: 0x802, 0xb0c, 0xb13, 0xb17, 0xde2

Function 24:
Public function signature: 0xace38f8c
Entry block: 0xb31
Exit block: 0x802
Body: 0x802, 0xb31, 0xb38, 0xb3c, 0xde8

Function 25:
Public function signature: 0xaff29802
Entry block: 0xb56
Exit block: 0x802
Body: 0x802, 0xb56, 0xb5d, 0xb61, 0xdee

Function 26:
Public function signature: 0xccb07cef
Entry block: 0xb7b
Exit block: 0x96b
Body: 0x96b, 0xb7b, 0xb82, 0xb86, 0xdf4

Function 27:
Public function signature: 0xd424f628
Entry block: 0xba2
Exit block: 0x96b
Body: 0x96b, 0xba2, 0xba9, 0xbad, 0xe02

Function 28:
Public function signature: 0xdcd22c9b
Entry block: 0xbc9
Exit block: 0x7ed
Body: 0x7ed, 0xbc9, 0xbd0, 0xbd4, 0xc3a, 0xc3b, 0xc3c, 0xe0b, 0xe23, 0xe34, 0xe35

Function 29:
Public function signature: 0xfd6b7ef8
Entry block: 0xbde
Exit block: 0x7ed
Body: 0x7ed, 0xbde, 0xbe5, 0xbe9, 0xccf, 0xcd0, 0xcd1, 0xcd2, 0xe37, 0xe44, 0xe50, 0xe77, 0xea2, 0xee8, 0xf04, 0xf05, 0xf06, 0xf13, 0xf26, 0xf2c, 0xf5f, 0xfb4, 0xfbf, 0xfc0, 0xfc1, 0xfc2, 0xfc3

Function 30:
Public fallback function
Entry block: 0x164
Exit block: 0x5c2
Body: 0x164, 0x165, 0x179, 0x17d, 0x1b2, 0x1c2, 0x21c, 0x220, 0x22d, 0x231, 0x27b, 0x28d, 0x2ac, 0x2ec, 0x2f0, 0x2fd, 0x301, 0x309, 0x31b, 0x39b, 0x3ad, 0x42d, 0x43f, 0x4bf, 0x4d1, 0x551, 0x571, 0x5b1, 0x5b5, 0x5c2, 0x5c6, 0x5ca, 0x5cb, 0x5cc, 0x5cd, 0x5ce, 0x611, 0x616, 0x623, 0x67d, 0x681, 0x68e, 0x692, 0x69a, 0x6a7, 0x701, 0x71e, 0x779, 0x77d, 0x78a, 0x78e, 0x792, 0x793, 0x7d6, 0x7d7

