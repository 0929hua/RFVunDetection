Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa3]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3197cbb6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa3
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3197cbb6
0x3b: V13 = EQ V11 0x3197cbb6
0x3c: V14 = 0xa3
0x3f: JUMPI 0xa3 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc8]
---
0x40 DUP1
0x41 PUSH4 0x4042b66f
0x46 EQ
0x47 PUSH2 0xc8
0x4a JUMPI
---
0x41: V15 = 0x4042b66f
0x46: V16 = EQ 0x4042b66f V11
0x47: V17 = 0xc8
0x4a: JUMPI 0xc8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xdb]
---
0x4b DUP1
0x4c PUSH4 0x4bb278f3
0x51 EQ
0x52 PUSH2 0xdb
0x55 JUMPI
---
0x4c: V18 = 0x4bb278f3
0x51: V19 = EQ 0x4bb278f3 V11
0x52: V20 = 0xdb
0x55: JUMPI 0xdb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xee]
---
0x56 DUP1
0x57 PUSH4 0x521eb273
0x5c EQ
0x5d PUSH2 0xee
0x60 JUMPI
---
0x57: V21 = 0x521eb273
0x5c: V22 = EQ 0x521eb273 V11
0x5d: V23 = 0xee
0x60: JUMPI 0xee V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x11d]
---
0x61 DUP1
0x62 PUSH4 0x842a77d3
0x67 EQ
0x68 PUSH2 0x11d
0x6b JUMPI
---
0x62: V24 = 0x842a77d3
0x67: V25 = EQ 0x842a77d3 V11
0x68: V26 = 0x11d
0x6b: JUMPI 0x11d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x13c]
---
0x6c DUP1
0x6d PUSH4 0x8da5cb5b
0x72 EQ
0x73 PUSH2 0x13c
0x76 JUMPI
---
0x6d: V27 = 0x8da5cb5b
0x72: V28 = EQ 0x8da5cb5b V11
0x73: V29 = 0x13c
0x76: JUMPI 0x13c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x14f]
---
0x77 DUP1
0x78 PUSH4 0xb3f05b97
0x7d EQ
0x7e PUSH2 0x14f
0x81 JUMPI
---
0x78: V30 = 0xb3f05b97
0x7d: V31 = EQ 0xb3f05b97 V11
0x7e: V32 = 0x14f
0x81: JUMPI 0x14f V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x176]
---
0x82 DUP1
0x83 PUSH4 0xec8ac4d8
0x88 EQ
0x89 PUSH2 0x176
0x8c JUMPI
---
0x83: V33 = 0xec8ac4d8
0x88: V34 = EQ 0xec8ac4d8 V11
0x89: V35 = 0x176
0x8c: JUMPI 0x176 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x18a]
---
0x8d DUP1
0x8e PUSH4 0xf2fde38b
0x93 EQ
0x94 PUSH2 0x18a
0x97 JUMPI
---
0x8e: V36 = 0xf2fde38b
0x93: V37 = EQ 0xf2fde38b V11
0x94: V38 = 0x18a
0x97: JUMPI 0x18a V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa0]
---
Predecessors: [0x0, 0x8d]
Successors: [0x1a9]
---
0x98 JUMPDEST
0x99 PUSH2 0xa1
0x9c CALLER
0x9d PUSH2 0x1a9
0xa0 JUMP
---
0x98: JUMPDEST 
0x99: V39 = 0xa1
0x9c: V40 = CALLER
0x9d: V41 = 0x1a9
0xa0: JUMP 0x1a9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa1, V40]
Exit stack: [V11, 0xa1, V40]

================================

Block 0xa1
[0xa1:0xa2]
---
Predecessors: [0x276, 0x2a1, 0x31d]
Successors: []
---
0xa1 JUMPDEST
0xa2 STOP
---
0xa1: JUMPDEST 
0xa2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xa9]
---
Predecessors: [0xd]
Successors: [0xaa, 0xae]
---
0xa3 JUMPDEST
0xa4 CALLVALUE
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa3: JUMPDEST 
0xa4: V42 = CALLVALUE
0xa5: V43 = ISZERO V42
0xa6: V44 = 0xae
0xa9: JUMPI 0xae V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa3]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V45 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb5]
---
Predecessors: [0xa3]
Successors: [0x27a]
---
0xae JUMPDEST
0xaf PUSH2 0xb6
0xb2 PUSH2 0x27a
0xb5 JUMP
---
0xae: JUMPDEST 
0xaf: V46 = 0xb6
0xb2: V47 = 0x27a
0xb5: JUMP 0x27a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb6]
Exit stack: [V11, 0xb6]

================================

Block 0xb6
[0xb6:0xc7]
---
Predecessors: [0x27a, 0x280, 0x2c3]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba SWAP1
0xbb DUP2
0xbc MSTORE
0xbd PUSH1 0x20
0xbf ADD
0xc0 PUSH1 0x40
0xc2 MLOAD
0xc3 DUP1
0xc4 SWAP2
0xc5 SUB
0xc6 SWAP1
0xc7 RETURN
---
0xb6: JUMPDEST 
0xb7: V48 = 0x40
0xb9: V49 = M[0x40]
0xbc: M[V49] = S0
0xbd: V50 = 0x20
0xbf: V51 = ADD 0x20 V49
0xc0: V52 = 0x40
0xc2: V53 = M[0x40]
0xc5: V54 = SUB V51 V53
0xc7: RETURN V53 V54
---
Entry stack: [V11, 0xb6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb6]

================================

Block 0xc8
[0xc8:0xce]
---
Predecessors: [0x40]
Successors: [0xcf, 0xd3]
---
0xc8 JUMPDEST
0xc9 CALLVALUE
0xca ISZERO
0xcb PUSH2 0xd3
0xce JUMPI
---
0xc8: JUMPDEST 
0xc9: V55 = CALLVALUE
0xca: V56 = ISZERO V55
0xcb: V57 = 0xd3
0xce: JUMPI 0xd3 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0xc8]
Successors: []
---
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 REVERT
---
0xcf: V58 = 0x0
0xd2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd3
[0xd3:0xda]
---
Predecessors: [0xc8]
Successors: [0x280]
---
0xd3 JUMPDEST
0xd4 PUSH2 0xb6
0xd7 PUSH2 0x280
0xda JUMP
---
0xd3: JUMPDEST 
0xd4: V59 = 0xb6
0xd7: V60 = 0x280
0xda: JUMP 0x280
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb6]
Exit stack: [V11, 0xb6]

================================

Block 0xdb
[0xdb:0xe1]
---
Predecessors: [0x4b]
Successors: [0xe2, 0xe6]
---
0xdb JUMPDEST
0xdc CALLVALUE
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0xdb: JUMPDEST 
0xdc: V61 = CALLVALUE
0xdd: V62 = ISZERO V61
0xde: V63 = 0xe6
0xe1: JUMPI 0xe6 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0xdb]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V64 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe6
[0xe6:0xed]
---
Predecessors: [0xdb]
Successors: [0x286]
---
0xe6 JUMPDEST
0xe7 PUSH2 0xa1
0xea PUSH2 0x286
0xed JUMP
---
0xe6: JUMPDEST 
0xe7: V65 = 0xa1
0xea: V66 = 0x286
0xed: JUMP 0x286
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa1]
Exit stack: [V11, 0xa1]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0x56]
Successors: [0xf5, 0xf9]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xee: JUMPDEST 
0xef: V67 = CALLVALUE
0xf0: V68 = ISZERO V67
0xf1: V69 = 0xf9
0xf4: JUMPI 0xf9 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xee]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V70 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xee]
Successors: [0x2b4]
---
0xf9 JUMPDEST
0xfa PUSH2 0x101
0xfd PUSH2 0x2b4
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V71 = 0x101
0xfd: V72 = 0x2b4
0x100: JUMP 0x2b4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V11, 0x101]

================================

Block 0x101
[0x101:0x11c]
---
Predecessors: [0x2b4, 0x2d5]
Successors: []
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 MLOAD
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e SWAP2
0x10f AND
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 SWAP2
0x11a SUB
0x11b SWAP1
0x11c RETURN
---
0x101: JUMPDEST 
0x102: V73 = 0x40
0x104: V74 = M[0x40]
0x105: V75 = 0x1
0x107: V76 = 0xa0
0x109: V77 = 0x2
0x10b: V78 = EXP 0x2 0xa0
0x10c: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V80 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x111: M[V74] = V80
0x112: V81 = 0x20
0x114: V82 = ADD 0x20 V74
0x115: V83 = 0x40
0x117: V84 = M[0x40]
0x11a: V85 = SUB V82 V84
0x11c: RETURN V84 V85
---
Entry stack: [V11, 0x101, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x101]

================================

Block 0x11d
[0x11d:0x123]
---
Predecessors: [0x61]
Successors: [0x124, 0x128]
---
0x11d JUMPDEST
0x11e CALLVALUE
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x11d: JUMPDEST 
0x11e: V86 = CALLVALUE
0x11f: V87 = ISZERO V86
0x120: V88 = 0x128
0x123: JUMPI 0x128 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x11d]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V89 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x128
[0x128:0x13b]
---
Predecessors: [0x11d]
Successors: [0x2c3]
---
0x128 JUMPDEST
0x129 PUSH2 0xb6
0x12c PUSH1 0x1
0x12e PUSH1 0xa0
0x130 PUSH1 0x2
0x132 EXP
0x133 SUB
0x134 PUSH1 0x4
0x136 CALLDATALOAD
0x137 AND
0x138 PUSH2 0x2c3
0x13b JUMP
---
0x128: JUMPDEST 
0x129: V90 = 0xb6
0x12c: V91 = 0x1
0x12e: V92 = 0xa0
0x130: V93 = 0x2
0x132: V94 = EXP 0x2 0xa0
0x133: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x134: V96 = 0x4
0x136: V97 = CALLDATALOAD 0x4
0x137: V98 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x138: V99 = 0x2c3
0x13b: JUMP 0x2c3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb6, V98]
Exit stack: [V11, 0xb6, V98]

================================

Block 0x13c
[0x13c:0x142]
---
Predecessors: [0x6c]
Successors: [0x143, 0x147]
---
0x13c JUMPDEST
0x13d CALLVALUE
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x13c: JUMPDEST 
0x13d: V100 = CALLVALUE
0x13e: V101 = ISZERO V100
0x13f: V102 = 0x147
0x142: JUMPI 0x147 V101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x13c]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V103 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x13c]
Successors: [0x2d5]
---
0x147 JUMPDEST
0x148 PUSH2 0x101
0x14b PUSH2 0x2d5
0x14e JUMP
---
0x147: JUMPDEST 
0x148: V104 = 0x101
0x14b: V105 = 0x2d5
0x14e: JUMP 0x2d5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V11, 0x101]

================================

Block 0x14f
[0x14f:0x155]
---
Predecessors: [0x77]
Successors: [0x156, 0x15a]
---
0x14f JUMPDEST
0x150 CALLVALUE
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14f: JUMPDEST 
0x150: V106 = CALLVALUE
0x151: V107 = ISZERO V106
0x152: V108 = 0x15a
0x155: JUMPI 0x15a V107
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14f]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V109 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15a
[0x15a:0x161]
---
Predecessors: [0x14f]
Successors: [0x2e4]
---
0x15a JUMPDEST
0x15b PUSH2 0x162
0x15e PUSH2 0x2e4
0x161 JUMP
---
0x15a: JUMPDEST 
0x15b: V110 = 0x162
0x15e: V111 = 0x2e4
0x161: JUMP 0x2e4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x162]
Exit stack: [V11, 0x162]

================================

Block 0x162
[0x162:0x175]
---
Predecessors: [0x2e4]
Successors: []
---
0x162 JUMPDEST
0x163 PUSH1 0x40
0x165 MLOAD
0x166 SWAP1
0x167 ISZERO
0x168 ISZERO
0x169 DUP2
0x16a MSTORE
0x16b PUSH1 0x20
0x16d ADD
0x16e PUSH1 0x40
0x170 MLOAD
0x171 DUP1
0x172 SWAP2
0x173 SUB
0x174 SWAP1
0x175 RETURN
---
0x162: JUMPDEST 
0x163: V112 = 0x40
0x165: V113 = M[0x40]
0x167: V114 = ISZERO V266
0x168: V115 = ISZERO V114
0x16a: M[V113] = V115
0x16b: V116 = 0x20
0x16d: V117 = ADD 0x20 V113
0x16e: V118 = 0x40
0x170: V119 = M[0x40]
0x173: V120 = SUB V117 V119
0x175: RETURN V119 V120
---
Entry stack: [V11, 0x162, V266]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x162]

================================

Block 0x176
[0x176:0x189]
---
Predecessors: [0x82]
Successors: [0x1a9]
---
0x176 JUMPDEST
0x177 PUSH2 0xa1
0x17a PUSH1 0x1
0x17c PUSH1 0xa0
0x17e PUSH1 0x2
0x180 EXP
0x181 SUB
0x182 PUSH1 0x4
0x184 CALLDATALOAD
0x185 AND
0x186 PUSH2 0x1a9
0x189 JUMP
---
0x176: JUMPDEST 
0x177: V121 = 0xa1
0x17a: V122 = 0x1
0x17c: V123 = 0xa0
0x17e: V124 = 0x2
0x180: V125 = EXP 0x2 0xa0
0x181: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x182: V127 = 0x4
0x184: V128 = CALLDATALOAD 0x4
0x185: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x186: V130 = 0x1a9
0x189: JUMP 0x1a9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa1, V129]
Exit stack: [V11, 0xa1, V129]

================================

Block 0x18a
[0x18a:0x190]
---
Predecessors: [0x8d]
Successors: [0x191, 0x195]
---
0x18a JUMPDEST
0x18b CALLVALUE
0x18c ISZERO
0x18d PUSH2 0x195
0x190 JUMPI
---
0x18a: JUMPDEST 
0x18b: V131 = CALLVALUE
0x18c: V132 = ISZERO V131
0x18d: V133 = 0x195
0x190: JUMPI 0x195 V132
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x191
[0x191:0x194]
---
Predecessors: [0x18a]
Successors: []
---
0x191 PUSH1 0x0
0x193 DUP1
0x194 REVERT
---
0x191: V134 = 0x0
0x194: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x195
[0x195:0x1a8]
---
Predecessors: [0x18a]
Successors: [0x2ed]
---
0x195 JUMPDEST
0x196 PUSH2 0xa1
0x199 PUSH1 0x1
0x19b PUSH1 0xa0
0x19d PUSH1 0x2
0x19f EXP
0x1a0 SUB
0x1a1 PUSH1 0x4
0x1a3 CALLDATALOAD
0x1a4 AND
0x1a5 PUSH2 0x2ed
0x1a8 JUMP
---
0x195: JUMPDEST 
0x196: V135 = 0xa1
0x199: V136 = 0x1
0x19b: V137 = 0xa0
0x19d: V138 = 0x2
0x19f: V139 = EXP 0x2 0xa0
0x1a0: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a1: V141 = 0x4
0x1a3: V142 = CALLDATALOAD 0x4
0x1a4: V143 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V144 = 0x2ed
0x1a8: JUMP 0x2ed
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa1, V143]
Exit stack: [V11, 0xa1, V143]

================================

Block 0x1a9
[0x1a9:0x1bb]
---
Predecessors: [0x98, 0x176]
Successors: [0x1bc, 0x1c0]
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x0
0x1ac PUSH1 0x1
0x1ae PUSH1 0xa0
0x1b0 PUSH1 0x2
0x1b2 EXP
0x1b3 SUB
0x1b4 DUP3
0x1b5 AND
0x1b6 ISZERO
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V145 = 0x0
0x1ac: V146 = 0x1
0x1ae: V147 = 0xa0
0x1b0: V148 = 0x2
0x1b2: V149 = EXP 0x2 0xa0
0x1b3: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V151 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V152 = ISZERO V151
0x1b7: V153 = ISZERO V152
0x1b8: V154 = 0x1c0
0x1bb: JUMPI 0x1c0 V153
---
Entry stack: [V11, 0xa1, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0xa1, S0, 0x0]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x1a9]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V155 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa1, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1, S1, 0x0]

================================

Block 0x1c0
[0x1c0:0x1c7]
---
Predecessors: [0x1a9]
Successors: [0x1c8, 0x1cc]
---
0x1c0 JUMPDEST
0x1c1 CALLVALUE
0x1c2 ISZERO
0x1c3 ISZERO
0x1c4 PUSH2 0x1cc
0x1c7 JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V156 = CALLVALUE
0x1c2: V157 = ISZERO V156
0x1c3: V158 = ISZERO V157
0x1c4: V159 = 0x1cc
0x1c7: JUMPI 0x1cc V158
---
Entry stack: [V11, 0xa1, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1, S1, 0x0]

================================

Block 0x1c8
[0x1c8:0x1cb]
---
Predecessors: [0x1c0]
Successors: []
---
0x1c8 PUSH1 0x0
0x1ca DUP1
0x1cb REVERT
---
0x1c8: V160 = 0x0
0x1cb: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa1, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1, S1, 0x0]

================================

Block 0x1cc
[0x1cc:0x1d3]
---
Predecessors: [0x1c0]
Successors: [0x388]
---
0x1cc JUMPDEST
0x1cd PUSH2 0x1d4
0x1d0 PUSH2 0x388
0x1d3 JUMP
---
0x1cc: JUMPDEST 
0x1cd: V161 = 0x1d4
0x1d0: V162 = 0x388
0x1d3: JUMP 0x388
---
Entry stack: [V11, 0xa1, S1, 0x0]
Stack pops: 0
Stack additions: [0x1d4]
Exit stack: [V11, 0xa1, S1, 0x0, 0x1d4]

================================

Block 0x1d4
[0x1d4:0x1da]
---
Predecessors: [0x39f]
Successors: [0x1db, 0x1df]
---
0x1d4 JUMPDEST
0x1d5 ISZERO
0x1d6 ISZERO
0x1d7 PUSH2 0x1df
0x1da JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V163 = ISZERO S0
0x1d6: V164 = ISZERO V163
0x1d7: V165 = 0x1df
0x1da: JUMPI 0x1df V164
---
Entry stack: [V11, 0xa1, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa1, S2, 0x0]

================================

Block 0x1db
[0x1db:0x1de]
---
Predecessors: [0x1d4]
Successors: []
---
0x1db PUSH1 0x0
0x1dd DUP1
0x1de REVERT
---
0x1db: V166 = 0x0
0x1de: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa1, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1, S1, 0x0]

================================

Block 0x1df
[0x1df:0x271]
---
Predecessors: [0x1d4]
Successors: [0x272, 0x276]
---
0x1df JUMPDEST
0x1e0 POP
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0xa0
0x1e5 PUSH1 0x2
0x1e7 EXP
0x1e8 SUB
0x1e9 DUP1
0x1ea DUP3
0x1eb AND
0x1ec PUSH1 0x0
0x1ee DUP2
0x1ef DUP2
0x1f0 MSTORE
0x1f1 PUSH1 0x5
0x1f3 PUSH1 0x20
0x1f5 MSTORE
0x1f6 PUSH1 0x40
0x1f8 SWAP1
0x1f9 DUP2
0x1fa SWAP1
0x1fb SHA3
0x1fc DUP1
0x1fd SLOAD
0x1fe CALLVALUE
0x1ff SWAP1
0x200 DUP2
0x201 ADD
0x202 SWAP1
0x203 SWAP2
0x204 SSTORE
0x205 PUSH1 0x4
0x207 DUP1
0x208 SLOAD
0x209 DUP3
0x20a ADD
0x20b SWAP1
0x20c SSTORE
0x20d SWAP3
0x20e CALLER
0x20f AND
0x210 SWAP1
0x211 PUSH32 0x22e3ae3a20c49dce14046235895c7a3ffc0a6a5f3577c370177ad45fa619485d
0x232 SWAP1
0x233 DUP5
0x234 SWAP1
0x235 MLOAD
0x236 SWAP1
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x20
0x23b ADD
0x23c PUSH1 0x40
0x23e MLOAD
0x23f DUP1
0x240 SWAP2
0x241 SUB
0x242 SWAP1
0x243 LOG3
0x244 PUSH1 0x1
0x246 SLOAD
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f AND
0x250 DUP2
0x251 ISZERO
0x252 PUSH2 0x8fc
0x255 MUL
0x256 DUP3
0x257 PUSH1 0x40
0x259 MLOAD
0x25a PUSH1 0x0
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 DUP4
0x261 SUB
0x262 DUP2
0x263 DUP6
0x264 DUP9
0x265 DUP9
0x266 CALL
0x267 SWAP4
0x268 POP
0x269 POP
0x26a POP
0x26b POP
0x26c ISZERO
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x1df: JUMPDEST 
0x1e1: V167 = 0x1
0x1e3: V168 = 0xa0
0x1e5: V169 = 0x2
0x1e7: V170 = EXP 0x2 0xa0
0x1e8: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1eb: V172 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V173 = 0x0
0x1f0: M[0x0] = V172
0x1f1: V174 = 0x5
0x1f3: V175 = 0x20
0x1f5: M[0x20] = 0x5
0x1f6: V176 = 0x40
0x1fb: V177 = SHA3 0x0 0x40
0x1fd: V178 = S[V177]
0x1fe: V179 = CALLVALUE
0x201: V180 = ADD V179 V178
0x204: S[V177] = V180
0x205: V181 = 0x4
0x208: V182 = S[0x4]
0x20a: V183 = ADD V179 V182
0x20c: S[0x4] = V183
0x20e: V184 = CALLER
0x20f: V185 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x211: V186 = 0x22e3ae3a20c49dce14046235895c7a3ffc0a6a5f3577c370177ad45fa619485d
0x235: V187 = M[0x40]
0x238: M[V187] = V179
0x239: V188 = 0x20
0x23b: V189 = ADD 0x20 V187
0x23c: V190 = 0x40
0x23e: V191 = M[0x40]
0x241: V192 = SUB V189 V191
0x243: LOG V191 V192 0x22e3ae3a20c49dce14046235895c7a3ffc0a6a5f3577c370177ad45fa619485d V185 V172
0x244: V193 = 0x1
0x246: V194 = S[0x1]
0x247: V195 = 0x1
0x249: V196 = 0xa0
0x24b: V197 = 0x2
0x24d: V198 = EXP 0x2 0xa0
0x24e: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x251: V201 = ISZERO V179
0x252: V202 = 0x8fc
0x255: V203 = MUL 0x8fc V201
0x257: V204 = 0x40
0x259: V205 = M[0x40]
0x25a: V206 = 0x0
0x25c: V207 = 0x40
0x25e: V208 = M[0x40]
0x261: V209 = SUB V205 V208
0x266: V210 = CALL V203 V200 V179 V208 V209 V208 0x0
0x26c: V211 = ISZERO V210
0x26d: V212 = ISZERO V211
0x26e: V213 = 0x276
0x271: JUMPI 0x276 V212
---
Entry stack: [V11, 0xa1, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V179]
Exit stack: [V11, 0xa1, S1, V179]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x1df]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V214 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa1, S1, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1, S1, V179]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x1df]
Successors: [0xa1]
---
0x276 JUMPDEST
0x277 POP
0x278 POP
0x279 JUMP
---
0x276: JUMPDEST 
0x279: JUMP 0xa1
---
Entry stack: [V11, 0xa1, S1, V179]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x27a
[0x27a:0x27f]
---
Predecessors: [0xae]
Successors: [0xb6]
---
0x27a JUMPDEST
0x27b PUSH1 0x2
0x27d SLOAD
0x27e DUP2
0x27f JUMP
---
0x27a: JUMPDEST 
0x27b: V215 = 0x2
0x27d: V216 = S[0x2]
0x27f: JUMP 0xb6
---
Entry stack: [V11, 0xb6]
Stack pops: 1
Stack additions: [S0, V216]
Exit stack: [V11, 0xb6, V216]

================================

Block 0x280
[0x280:0x285]
---
Predecessors: [0xd3]
Successors: [0xb6]
---
0x280 JUMPDEST
0x281 PUSH1 0x4
0x283 SLOAD
0x284 DUP2
0x285 JUMP
---
0x280: JUMPDEST 
0x281: V217 = 0x4
0x283: V218 = S[0x4]
0x285: JUMP 0xb6
---
Entry stack: [V11, 0xb6]
Stack pops: 1
Stack additions: [S0, V218]
Exit stack: [V11, 0xb6, V218]

================================

Block 0x286
[0x286:0x29c]
---
Predecessors: [0xe6]
Successors: [0x29d, 0x2a1]
---
0x286 JUMPDEST
0x287 PUSH1 0x0
0x289 SLOAD
0x28a CALLER
0x28b PUSH1 0x1
0x28d PUSH1 0xa0
0x28f PUSH1 0x2
0x291 EXP
0x292 SUB
0x293 SWAP1
0x294 DUP2
0x295 AND
0x296 SWAP2
0x297 AND
0x298 EQ
0x299 PUSH2 0x2a1
0x29c JUMPI
---
0x286: JUMPDEST 
0x287: V219 = 0x0
0x289: V220 = S[0x0]
0x28a: V221 = CALLER
0x28b: V222 = 0x1
0x28d: V223 = 0xa0
0x28f: V224 = 0x2
0x291: V225 = EXP 0x2 0xa0
0x292: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x295: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x297: V228 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x298: V229 = EQ V228 V227
0x299: V230 = 0x2a1
0x29c: JUMPI 0x2a1 V229
---
Entry stack: [V11, 0xa1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x286]
Successors: []
---
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 REVERT
---
0x29d: V231 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1]

================================

Block 0x2a1
[0x2a1:0x2b3]
---
Predecessors: [0x286]
Successors: [0xa1]
---
0x2a1 JUMPDEST
0x2a2 TIMESTAMP
0x2a3 PUSH1 0x2
0x2a5 SSTORE
0x2a6 PUSH1 0x3
0x2a8 DUP1
0x2a9 SLOAD
0x2aa PUSH1 0xff
0x2ac NOT
0x2ad AND
0x2ae PUSH1 0x1
0x2b0 OR
0x2b1 SWAP1
0x2b2 SSTORE
0x2b3 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V232 = TIMESTAMP
0x2a3: V233 = 0x2
0x2a5: S[0x2] = V232
0x2a6: V234 = 0x3
0x2a9: V235 = S[0x3]
0x2aa: V236 = 0xff
0x2ac: V237 = NOT 0xff
0x2ad: V238 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V235
0x2ae: V239 = 0x1
0x2b0: V240 = OR 0x1 V238
0x2b2: S[0x3] = V240
0x2b3: JUMP 0xa1
---
Entry stack: [V11, 0xa1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b4
[0x2b4:0x2c2]
---
Predecessors: [0xf9]
Successors: [0x101]
---
0x2b4 JUMPDEST
0x2b5 PUSH1 0x1
0x2b7 SLOAD
0x2b8 PUSH1 0x1
0x2ba PUSH1 0xa0
0x2bc PUSH1 0x2
0x2be EXP
0x2bf SUB
0x2c0 AND
0x2c1 DUP2
0x2c2 JUMP
---
0x2b4: JUMPDEST 
0x2b5: V241 = 0x1
0x2b7: V242 = S[0x1]
0x2b8: V243 = 0x1
0x2ba: V244 = 0xa0
0x2bc: V245 = 0x2
0x2be: V246 = EXP 0x2 0xa0
0x2bf: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c0: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x2c2: JUMP 0x101
---
Entry stack: [V11, 0x101]
Stack pops: 1
Stack additions: [S0, V248]
Exit stack: [V11, 0x101, V248]

================================

Block 0x2c3
[0x2c3:0x2d4]
---
Predecessors: [0x128]
Successors: [0xb6]
---
0x2c3 JUMPDEST
0x2c4 PUSH1 0x5
0x2c6 PUSH1 0x20
0x2c8 MSTORE
0x2c9 PUSH1 0x0
0x2cb SWAP1
0x2cc DUP2
0x2cd MSTORE
0x2ce PUSH1 0x40
0x2d0 SWAP1
0x2d1 SHA3
0x2d2 SLOAD
0x2d3 DUP2
0x2d4 JUMP
---
0x2c3: JUMPDEST 
0x2c4: V249 = 0x5
0x2c6: V250 = 0x20
0x2c8: M[0x20] = 0x5
0x2c9: V251 = 0x0
0x2cd: M[0x0] = V98
0x2ce: V252 = 0x40
0x2d1: V253 = SHA3 0x0 0x40
0x2d2: V254 = S[V253]
0x2d4: JUMP 0xb6
---
Entry stack: [V11, 0xb6, V98]
Stack pops: 2
Stack additions: [S1, V254]
Exit stack: [V11, 0xb6, V254]

================================

Block 0x2d5
[0x2d5:0x2e3]
---
Predecessors: [0x147]
Successors: [0x101]
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x0
0x2d8 SLOAD
0x2d9 PUSH1 0x1
0x2db PUSH1 0xa0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 SUB
0x2e1 AND
0x2e2 DUP2
0x2e3 JUMP
---
0x2d5: JUMPDEST 
0x2d6: V255 = 0x0
0x2d8: V256 = S[0x0]
0x2d9: V257 = 0x1
0x2db: V258 = 0xa0
0x2dd: V259 = 0x2
0x2df: V260 = EXP 0x2 0xa0
0x2e0: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e1: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x2e3: JUMP 0x101
---
Entry stack: [V11, 0x101]
Stack pops: 1
Stack additions: [S0, V262]
Exit stack: [V11, 0x101, V262]

================================

Block 0x2e4
[0x2e4:0x2ec]
---
Predecessors: [0x15a]
Successors: [0x162]
---
0x2e4 JUMPDEST
0x2e5 PUSH1 0x3
0x2e7 SLOAD
0x2e8 PUSH1 0xff
0x2ea AND
0x2eb DUP2
0x2ec JUMP
---
0x2e4: JUMPDEST 
0x2e5: V263 = 0x3
0x2e7: V264 = S[0x3]
0x2e8: V265 = 0xff
0x2ea: V266 = AND 0xff V264
0x2ec: JUMP 0x162
---
Entry stack: [V11, 0x162]
Stack pops: 1
Stack additions: [S0, V266]
Exit stack: [V11, 0x162, V266]

================================

Block 0x2ed
[0x2ed:0x303]
---
Predecessors: [0x195]
Successors: [0x304, 0x308]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x0
0x2f0 SLOAD
0x2f1 CALLER
0x2f2 PUSH1 0x1
0x2f4 PUSH1 0xa0
0x2f6 PUSH1 0x2
0x2f8 EXP
0x2f9 SUB
0x2fa SWAP1
0x2fb DUP2
0x2fc AND
0x2fd SWAP2
0x2fe AND
0x2ff EQ
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V267 = 0x0
0x2f0: V268 = S[0x0]
0x2f1: V269 = CALLER
0x2f2: V270 = 0x1
0x2f4: V271 = 0xa0
0x2f6: V272 = 0x2
0x2f8: V273 = EXP 0x2 0xa0
0x2f9: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fc: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x2fe: V276 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V277 = EQ V276 V275
0x300: V278 = 0x308
0x303: JUMPI 0x308 V277
---
Entry stack: [V11, 0xa1, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1, V143]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2ed]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V279 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa1, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1, V143]

================================

Block 0x308
[0x308:0x318]
---
Predecessors: [0x2ed]
Successors: [0x319, 0x31d]
---
0x308 JUMPDEST
0x309 PUSH1 0x1
0x30b PUSH1 0xa0
0x30d PUSH1 0x2
0x30f EXP
0x310 SUB
0x311 DUP2
0x312 AND
0x313 ISZERO
0x314 ISZERO
0x315 PUSH2 0x31d
0x318 JUMPI
---
0x308: JUMPDEST 
0x309: V280 = 0x1
0x30b: V281 = 0xa0
0x30d: V282 = 0x2
0x30f: V283 = EXP 0x2 0xa0
0x310: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x312: V285 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x313: V286 = ISZERO V285
0x314: V287 = ISZERO V286
0x315: V288 = 0x31d
0x318: JUMPI 0x31d V287
---
Entry stack: [V11, 0xa1, V143]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa1, V143]

================================

Block 0x319
[0x319:0x31c]
---
Predecessors: [0x308]
Successors: []
---
0x319 PUSH1 0x0
0x31b DUP1
0x31c REVERT
---
0x319: V289 = 0x0
0x31c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa1, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa1, V143]

================================

Block 0x31d
[0x31d:0x387]
---
Predecessors: [0x308]
Successors: [0xa1]
---
0x31d JUMPDEST
0x31e PUSH1 0x0
0x320 SLOAD
0x321 PUSH1 0x1
0x323 PUSH1 0xa0
0x325 PUSH1 0x2
0x327 EXP
0x328 SUB
0x329 DUP1
0x32a DUP4
0x32b AND
0x32c SWAP2
0x32d AND
0x32e PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x34f PUSH1 0x40
0x351 MLOAD
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 SWAP2
0x357 SUB
0x358 SWAP1
0x359 LOG3
0x35a PUSH1 0x0
0x35c DUP1
0x35d SLOAD
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 NOT
0x374 AND
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d SWAP3
0x37e SWAP1
0x37f SWAP3
0x380 AND
0x381 SWAP2
0x382 SWAP1
0x383 SWAP2
0x384 OR
0x385 SWAP1
0x386 SSTORE
0x387 JUMP
---
0x31d: JUMPDEST 
0x31e: V290 = 0x0
0x320: V291 = S[0x0]
0x321: V292 = 0x1
0x323: V293 = 0xa0
0x325: V294 = 0x2
0x327: V295 = EXP 0x2 0xa0
0x328: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32b: V297 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V298 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V299 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x34f: V300 = 0x40
0x351: V301 = M[0x40]
0x352: V302 = 0x40
0x354: V303 = M[0x40]
0x357: V304 = SUB V301 V303
0x359: LOG V303 V304 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V298 V297
0x35a: V305 = 0x0
0x35d: V306 = S[0x0]
0x35e: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V308 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x374: V309 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V306
0x375: V310 = 0x1
0x377: V311 = 0xa0
0x379: V312 = 0x2
0x37b: V313 = EXP 0x2 0xa0
0x37c: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x384: V316 = OR V315 V309
0x386: S[0x0] = V316
0x387: JUMP 0xa1
---
Entry stack: [V11, 0xa1, V143]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x388
[0x388:0x396]
---
Predecessors: [0x1cc]
Successors: [0x397, 0x39f]
---
0x388 JUMPDEST
0x389 PUSH1 0x0
0x38b PUSH1 0x2
0x38d SLOAD
0x38e TIMESTAMP
0x38f GT
0x390 ISZERO
0x391 DUP1
0x392 ISZERO
0x393 PUSH2 0x39f
0x396 JUMPI
---
0x388: JUMPDEST 
0x389: V317 = 0x0
0x38b: V318 = 0x2
0x38d: V319 = S[0x2]
0x38e: V320 = TIMESTAMP
0x38f: V321 = GT V320 V319
0x390: V322 = ISZERO V321
0x392: V323 = ISZERO V322
0x393: V324 = 0x39f
0x396: JUMPI 0x39f V323
---
Entry stack: [V11, 0xa1, S2, 0x0, 0x1d4]
Stack pops: 0
Stack additions: [0x0, V322]
Exit stack: [V11, 0xa1, S2, 0x0, 0x1d4, 0x0, V322]

================================

Block 0x397
[0x397:0x39e]
---
Predecessors: [0x388]
Successors: [0x39f]
---
0x397 POP
0x398 PUSH1 0x3
0x39a SLOAD
0x39b PUSH1 0xff
0x39d AND
0x39e ISZERO
---
0x398: V325 = 0x3
0x39a: V326 = S[0x3]
0x39b: V327 = 0xff
0x39d: V328 = AND 0xff V326
0x39e: V329 = ISZERO V328
---
Entry stack: [V11, 0xa1, S4, 0x0, 0x1d4, 0x0, V322]
Stack pops: 1
Stack additions: [V329]
Exit stack: [V11, 0xa1, S4, 0x0, 0x1d4, 0x0, V329]

================================

Block 0x39f
[0x39f:0x3a3]
---
Predecessors: [0x388, 0x397]
Successors: [0x1d4]
---
0x39f JUMPDEST
0x3a0 SWAP1
0x3a1 POP
0x3a2 SWAP1
0x3a3 JUMP
---
0x39f: JUMPDEST 
0x3a3: JUMP 0x1d4
---
Entry stack: [V11, 0xa1, S4, 0x0, 0x1d4, 0x0, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, 0xa1, S4, 0x0, S0]

================================

Block 0x3a4
[0x3a4:0x3cf]
---
Predecessors: []
Successors: []
---
0x3a4 STOP
0x3a5 LOG1
0x3a6 PUSH6 0x627a7a723058
0x3ad SHA3
0x3ae MISSING 0xf9
0x3af MISSING 0xe7
0x3b0 MISSING 0x4a
0x3b1 PUSH1 0x31
0x3b3 CALLCODE
0x3b4 MISSING 0x46
0x3b5 CODESIZE
0x3b6 MISSING 0xae
0x3b7 MISSING 0x47
0x3b8 MISSING 0x2b
0x3b9 CALLER
0x3ba MISSING 0xde
0x3bb OR
0x3bc SWAP3
0x3bd CALLDATACOPY
0x3be MISSING 0xdd
0x3bf EQ
0x3c0 SDIV
0x3c1 SWAP14
0x3c2 SSTORE
0x3c3 SWAP16
0x3c4 POP
0x3c5 MISSING 0xf8
0x3c6 MISSING 0xc1
0x3c7 SLOAD
0x3c8 MISSING 0xed
0x3c9 GAS
0x3ca MISSING 0x1e
0x3cb AND
0x3cc SUB
0x3cd MISSING 0xd6
0x3ce STOP
0x3cf MISSING 0x29
---
0x3a4: STOP 
0x3a5: LOG S0 S1 S2
0x3a6: V330 = 0x627a7a723058
0x3ad: V331 = SHA3 0x627a7a723058 S3
0x3ae: MISSING 0xf9
0x3af: MISSING 0xe7
0x3b0: MISSING 0x4a
0x3b1: V332 = 0x31
0x3b3: V333 = CALLCODE 0x31 S0 S1 S2 S3 S4 S5
0x3b4: MISSING 0x46
0x3b5: V334 = CODESIZE
0x3b6: MISSING 0xae
0x3b7: MISSING 0x47
0x3b8: MISSING 0x2b
0x3b9: V335 = CALLER
0x3ba: MISSING 0xde
0x3bb: V336 = OR S0 S1
0x3bd: CALLDATACOPY S4 S2 S3
0x3be: MISSING 0xdd
0x3bf: V337 = EQ S0 S1
0x3c0: V338 = SDIV V337 S2
0x3c2: S[S16] = S3
0x3c5: MISSING 0xf8
0x3c6: MISSING 0xc1
0x3c7: V339 = S[S0]
0x3c8: MISSING 0xed
0x3c9: V340 = GAS
0x3ca: MISSING 0x1e
0x3cb: V341 = AND S0 S1
0x3cc: V342 = SUB V341 S2
0x3cd: MISSING 0xd6
0x3ce: STOP 
0x3cf: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V331, V333, V334, V335, V336, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V338, S17, S18, S19, S4, V339, V340, V342]
Exit stack: []

================================

Function 0:
Public function signature: 0x3197cbb6
Entry block: 0xa3
Exit block: 0xb6
Body: 0xa3, 0xaa, 0xae, 0xb6, 0x27a

Function 1:
Public function signature: 0x4042b66f
Entry block: 0xc8
Exit block: 0xb6
Body: 0xb6, 0xc8, 0xcf, 0xd3, 0x280

Function 2:
Public function signature: 0x4bb278f3
Entry block: 0xdb
Exit block: 0xa1
Body: 0xa1, 0xdb, 0xe2, 0xe6, 0x286, 0x29d, 0x2a1

Function 3:
Public function signature: 0x521eb273
Entry block: 0xee
Exit block: 0x101
Body: 0xee, 0xf5, 0xf9, 0x101, 0x2b4

Function 4:
Public function signature: 0x842a77d3
Entry block: 0x11d
Exit block: 0xb6
Body: 0xb6, 0x11d, 0x124, 0x128, 0x2c3

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x13c
Exit block: 0x101
Body: 0x101, 0x13c, 0x143, 0x147, 0x2d5

Function 6:
Public function signature: 0xb3f05b97
Entry block: 0x14f
Exit block: 0x162
Body: 0x14f, 0x156, 0x15a, 0x162, 0x2e4

Function 7:
Public function signature: 0xec8ac4d8
Entry block: 0x176
Exit block: 0xa1
Body: 0xa1, 0x176

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x18a
Exit block: 0xa1
Body: 0xa1, 0x18a, 0x191, 0x195, 0x2ed, 0x304, 0x308, 0x319, 0x31d

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0xa1
Body: 0x98, 0xa1

Function 10:
Private function
Entry block: 0x1a9
Exit block: 0x31d
Body: 0x1a9, 0x1c0, 0x1cc, 0x1d4, 0x1df, 0x276, 0x388, 0x397, 0x39f

