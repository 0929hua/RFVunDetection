Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1df]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1df
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x1df
0x24: JUMPI 0x1df V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1f4]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x1f4
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x1f4
0x2f: JUMPI 0x1f4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x219]
---
0x30 DUP1
0x31 PUSH4 0x38af3eed
0x36 EQ
0x37 PUSH2 0x219
0x3a JUMPI
---
0x31: V19 = 0x38af3eed
0x36: V20 = EQ 0x38af3eed V12
0x37: V21 = 0x219
0x3a: JUMPI 0x219 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x248]
---
0x3b DUP1
0x3c PUSH4 0x6e66f6e9
0x41 EQ
0x42 PUSH2 0x248
0x45 JUMPI
---
0x3c: V22 = 0x6e66f6e9
0x41: V23 = EQ 0x6e66f6e9 V12
0x42: V24 = 0x248
0x45: JUMPI 0x248 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x277]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x277
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x277
0x50: JUMPI 0x277 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2a8]
---
0x51 DUP1
0x52 PUSH4 0x789d6a25
0x57 EQ
0x58 PUSH2 0x2a8
0x5b JUMPI
---
0x52: V28 = 0x789d6a25
0x57: V29 = EQ 0x789d6a25 V12
0x58: V30 = 0x2a8
0x5b: JUMPI 0x2a8 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2cd]
---
0x5c DUP1
0x5d PUSH4 0x7a3a0e84
0x62 EQ
0x63 PUSH2 0x2cd
0x66 JUMPI
---
0x5d: V31 = 0x7a3a0e84
0x62: V32 = EQ 0x7a3a0e84 V12
0x63: V33 = 0x2cd
0x66: JUMPI 0x2cd V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x2f2]
---
0x67 DUP1
0x68 PUSH4 0x7b3e5e7b
0x6d EQ
0x6e PUSH2 0x2f2
0x71 JUMPI
---
0x68: V34 = 0x7b3e5e7b
0x6d: V35 = EQ 0x7b3e5e7b V12
0x6e: V36 = 0x2f2
0x71: JUMPI 0x2f2 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x317]
---
0x72 DUP1
0x73 PUSH4 0xb0cacbcd
0x78 EQ
0x79 PUSH2 0x317
0x7c JUMPI
---
0x73: V37 = 0xb0cacbcd
0x78: V38 = EQ 0xb0cacbcd V12
0x79: V39 = 0x317
0x7c: JUMPI 0x317 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x32c]
---
0x7d DUP1
0x7e PUSH4 0xb3bf5ad4
0x83 EQ
0x84 PUSH2 0x32c
0x87 JUMPI
---
0x7e: V40 = 0xb3bf5ad4
0x83: V41 = EQ 0xb3bf5ad4 V12
0x84: V42 = 0x32c
0x87: JUMPI 0x32c V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x341]
---
0x88 DUP1
0x89 PUSH4 0xe011ac87
0x8e EQ
0x8f PUSH2 0x341
0x92 JUMPI
---
0x89: V43 = 0xe011ac87
0x8e: V44 = EQ 0xe011ac87 V12
0x8f: V45 = 0x341
0x92: JUMPI 0x341 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x366]
---
0x93 DUP1
0x94 PUSH4 0xee98aee6
0x99 EQ
0x9a PUSH2 0x366
0x9d JUMPI
---
0x94: V46 = 0xee98aee6
0x99: V47 = EQ 0xee98aee6 V12
0x9a: V48 = 0x366
0x9d: JUMPI 0x366 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x37b]
---
0x9e DUP1
0x9f PUSH4 0xf2fde38b
0xa4 EQ
0xa5 PUSH2 0x37b
0xa8 JUMPI
---
0x9f: V49 = 0xf2fde38b
0xa4: V50 = EQ 0xf2fde38b V12
0xa5: V51 = 0x37b
0xa8: JUMPI 0x37b V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x39c]
---
0xa9 DUP1
0xaa PUSH4 0xf856d605
0xaf EQ
0xb0 PUSH2 0x39c
0xb3 JUMPI
---
0xaa: V52 = 0xf856d605
0xaf: V53 = EQ 0xf856d605 V12
0xb0: V54 = 0x39c
0xb3: JUMPI 0x39c V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x3c1]
---
0xb4 DUP1
0xb5 PUSH4 0xfd6b7ef8
0xba EQ
0xbb PUSH2 0x3c1
0xbe JUMPI
---
0xb5: V55 = 0xfd6b7ef8
0xba: V56 = EQ 0xfd6b7ef8 V12
0xbb: V57 = 0x3c1
0xbe: JUMPI 0x3c1 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xbf]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc0]
---
0xbf JUMPDEST
---
0xbf: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc0
[0xc0:0xd3]
---
Predecessors: [0xbf]
Successors: [0xd4, 0xd8]
---
0xc0 JUMPDEST
0xc1 PUSH1 0xa
0xc3 SLOAD
0xc4 PUSH1 0x0
0xc6 SWAP1
0xc7 PUSH2 0x100
0xca SWAP1
0xcb DIV
0xcc PUSH1 0xff
0xce AND
0xcf ISZERO
0xd0 PUSH2 0xd8
0xd3 JUMPI
---
0xc0: JUMPDEST 
0xc1: V58 = 0xa
0xc3: V59 = S[0xa]
0xc4: V60 = 0x0
0xc7: V61 = 0x100
0xcb: V62 = DIV V59 0x100
0xcc: V63 = 0xff
0xce: V64 = AND 0xff V62
0xcf: V65 = ISZERO V64
0xd0: V66 = 0xd8
0xd3: JUMPI 0xd8 V65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0xd4
[0xd4:0xd7]
---
Predecessors: [0xc0]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
---
0xd4: V67 = 0x0
0xd7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xd8
[0xd8:0x15f]
---
Predecessors: [0xc0]
Successors: [0x160, 0x164]
---
0xd8 JUMPDEST
0xd9 POP
0xda PUSH1 0x1
0xdc PUSH1 0xa0
0xde PUSH1 0x2
0xe0 EXP
0xe1 SUB
0xe2 CALLER
0xe3 DUP2
0xe4 DUP2
0xe5 AND
0xe6 PUSH1 0x0
0xe8 SWAP1
0xe9 DUP2
0xea MSTORE
0xeb PUSH1 0x9
0xed PUSH1 0x20
0xef MSTORE
0xf0 PUSH1 0x40
0xf2 SWAP1
0xf3 DUP2
0xf4 SWAP1
0xf5 SHA3
0xf6 DUP1
0xf7 SLOAD
0xf8 CALLVALUE
0xf9 SWAP1
0xfa DUP2
0xfb ADD
0xfc SWAP1
0xfd SWAP2
0xfe SSTORE
0xff PUSH1 0x3
0x101 DUP1
0x102 SLOAD
0x103 DUP3
0x104 ADD
0x105 SWAP1
0x106 SSTORE
0x107 PUSH1 0x4
0x109 DUP1
0x10a SLOAD
0x10b DUP3
0x10c ADD
0x10d SWAP1
0x10e SSTORE
0x10f PUSH1 0x7
0x111 SLOAD
0x112 PUSH1 0x6
0x114 SLOAD
0x115 SWAP2
0x116 SWAP5
0x117 AND
0x118 SWAP3
0x119 PUSH4 0xa9059cbb
0x11e SWAP3
0x11f SWAP1
0x120 SWAP2
0x121 DUP6
0x122 MUL
0x123 SWAP1
0x124 MLOAD
0x125 PUSH1 0xe0
0x127 PUSH1 0x2
0x129 EXP
0x12a PUSH4 0xffffffff
0x12f DUP6
0x130 AND
0x131 MUL
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x1
0x136 PUSH1 0xa0
0x138 PUSH1 0x2
0x13a EXP
0x13b SUB
0x13c SWAP1
0x13d SWAP3
0x13e AND
0x13f PUSH1 0x4
0x141 DUP4
0x142 ADD
0x143 MSTORE
0x144 PUSH1 0x24
0x146 DUP3
0x147 ADD
0x148 MSTORE
0x149 PUSH1 0x44
0x14b ADD
0x14c PUSH1 0x0
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 DUP4
0x153 SUB
0x154 DUP2
0x155 PUSH1 0x0
0x157 DUP8
0x158 DUP1
0x159 EXTCODESIZE
0x15a ISZERO
0x15b ISZERO
0x15c PUSH2 0x164
0x15f JUMPI
---
0xd8: JUMPDEST 
0xda: V68 = 0x1
0xdc: V69 = 0xa0
0xde: V70 = 0x2
0xe0: V71 = EXP 0x2 0xa0
0xe1: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V73 = CALLER
0xe5: V74 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V75 = 0x0
0xea: M[0x0] = V74
0xeb: V76 = 0x9
0xed: V77 = 0x20
0xef: M[0x20] = 0x9
0xf0: V78 = 0x40
0xf5: V79 = SHA3 0x0 0x40
0xf7: V80 = S[V79]
0xf8: V81 = CALLVALUE
0xfb: V82 = ADD V81 V80
0xfe: S[V79] = V82
0xff: V83 = 0x3
0x102: V84 = S[0x3]
0x104: V85 = ADD V81 V84
0x106: S[0x3] = V85
0x107: V86 = 0x4
0x10a: V87 = S[0x4]
0x10c: V88 = ADD V81 V87
0x10e: S[0x4] = V88
0x10f: V89 = 0x7
0x111: V90 = S[0x7]
0x112: V91 = 0x6
0x114: V92 = S[0x6]
0x117: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x119: V94 = 0xa9059cbb
0x122: V95 = MUL V81 V92
0x124: V96 = M[0x40]
0x125: V97 = 0xe0
0x127: V98 = 0x2
0x129: V99 = EXP 0x2 0xe0
0x12a: V100 = 0xffffffff
0x130: V101 = AND 0xa9059cbb 0xffffffff
0x131: V102 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x133: M[V96] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x134: V103 = 0x1
0x136: V104 = 0xa0
0x138: V105 = 0x2
0x13a: V106 = EXP 0x2 0xa0
0x13b: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V108 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V109 = 0x4
0x142: V110 = ADD V96 0x4
0x143: M[V110] = V108
0x144: V111 = 0x24
0x147: V112 = ADD V96 0x24
0x148: M[V112] = V95
0x149: V113 = 0x44
0x14b: V114 = ADD 0x44 V96
0x14c: V115 = 0x0
0x14e: V116 = 0x40
0x150: V117 = M[0x40]
0x153: V118 = SUB V114 V117
0x155: V119 = 0x0
0x159: V120 = EXTCODESIZE V93
0x15a: V121 = ISZERO V120
0x15b: V122 = ISZERO V121
0x15c: V123 = 0x164
0x15f: JUMPI 0x164 V122
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V81, V93, 0xa9059cbb, V114, 0x0, V117, V118, V117, 0x0, V93]
Exit stack: [V12, V81, V93, 0xa9059cbb, V114, 0x0, V117, V118, V117, 0x0, V93]

================================

Block 0x160
[0x160:0x163]
---
Predecessors: [0xd8]
Successors: []
---
0x160 PUSH1 0x0
0x162 DUP1
0x163 REVERT
---
0x160: V124 = 0x0
0x163: REVERT 0x0 0x0
---
Entry stack: [V12, V81, V93, 0xa9059cbb, V114, 0x0, V117, V118, V117, 0x0, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V81, V93, 0xa9059cbb, V114, 0x0, V117, V118, V117, 0x0, V93]

================================

Block 0x164
[0x164:0x170]
---
Predecessors: [0xd8]
Successors: [0x171, 0x175]
---
0x164 JUMPDEST
0x165 PUSH2 0x2c6
0x168 GAS
0x169 SUB
0x16a CALL
0x16b ISZERO
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x164: JUMPDEST 
0x165: V125 = 0x2c6
0x168: V126 = GAS
0x169: V127 = SUB V126 0x2c6
0x16a: V128 = CALL V127 V93 0x0 V117 V118 V117 0x0
0x16b: V129 = ISZERO V128
0x16c: V130 = ISZERO V129
0x16d: V131 = 0x175
0x170: JUMPI 0x175 V130
---
Entry stack: [V12, V81, V93, 0xa9059cbb, V114, 0x0, V117, V118, V117, 0x0, V93]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V81, V93, 0xa9059cbb, V114]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x164]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V132 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V12, V81, V93, 0xa9059cbb, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V81, V93, 0xa9059cbb, V114]

================================

Block 0x175
[0x175:0x1db]
---
Predecessors: [0x164]
Successors: [0x1dc]
---
0x175 JUMPDEST
0x176 POP
0x177 POP
0x178 PUSH1 0x6
0x17a SLOAD
0x17b PUSH1 0x8
0x17d DUP1
0x17e SLOAD
0x17f SWAP2
0x180 DUP5
0x181 MUL
0x182 SWAP1
0x183 SWAP2
0x184 SUB
0x185 SWAP1
0x186 SSTORE
0x187 POP
0x188 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1a9 CALLER
0x1aa DUP3
0x1ab PUSH1 0x1
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 PUSH1 0x1
0x1b2 PUSH1 0xa0
0x1b4 PUSH1 0x2
0x1b6 EXP
0x1b7 SUB
0x1b8 SWAP1
0x1b9 SWAP4
0x1ba AND
0x1bb DUP4
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf DUP4
0x1c0 ADD
0x1c1 SWAP2
0x1c2 SWAP1
0x1c3 SWAP2
0x1c4 MSTORE
0x1c5 ISZERO
0x1c6 ISZERO
0x1c7 PUSH1 0x40
0x1c9 DUP1
0x1ca DUP4
0x1cb ADD
0x1cc SWAP2
0x1cd SWAP1
0x1ce SWAP2
0x1cf MSTORE
0x1d0 PUSH1 0x60
0x1d2 SWAP1
0x1d3 SWAP2
0x1d4 ADD
0x1d5 SWAP1
0x1d6 MLOAD
0x1d7 DUP1
0x1d8 SWAP2
0x1d9 SUB
0x1da SWAP1
0x1db LOG1
---
0x175: JUMPDEST 
0x178: V133 = 0x6
0x17a: V134 = S[0x6]
0x17b: V135 = 0x8
0x17e: V136 = S[0x8]
0x181: V137 = MUL V81 V134
0x184: V138 = SUB V136 V137
0x186: S[0x8] = V138
0x188: V139 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1a9: V140 = CALLER
0x1ab: V141 = 0x1
0x1ad: V142 = 0x40
0x1af: V143 = M[0x40]
0x1b0: V144 = 0x1
0x1b2: V145 = 0xa0
0x1b4: V146 = 0x2
0x1b6: V147 = EXP 0x2 0xa0
0x1b7: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ba: V149 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: M[V143] = V149
0x1bd: V150 = 0x20
0x1c0: V151 = ADD V143 0x20
0x1c4: M[V151] = V81
0x1c5: V152 = ISZERO 0x1
0x1c6: V153 = ISZERO 0x0
0x1c7: V154 = 0x40
0x1cb: V155 = ADD V143 0x40
0x1cf: M[V155] = 0x1
0x1d0: V156 = 0x60
0x1d4: V157 = ADD V143 0x60
0x1d6: V158 = M[0x40]
0x1d9: V159 = SUB V157 V158
0x1db: LOG V158 V159 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V12, V81, V93, 0xa9059cbb, V114]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V81]

================================

Block 0x1dc
[0x1dc:0x1de]
---
Predecessors: [0x175]
Successors: []
---
0x1dc JUMPDEST
0x1dd POP
0x1de STOP
---
0x1dc: JUMPDEST 
0x1de: STOP 
---
Entry stack: [V12, V81]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0xb]
Successors: [0x1e6, 0x1ea]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V160 = CALLVALUE
0x1e1: V161 = ISZERO V160
0x1e2: V162 = 0x1ea
0x1e5: JUMPI 0x1ea V161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V163 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ea
[0x1ea:0x1f1]
---
Predecessors: [0x1df]
Successors: [0x3d6]
---
0x1ea JUMPDEST
0x1eb PUSH2 0x1f2
0x1ee PUSH2 0x3d6
0x1f1 JUMP
---
0x1ea: JUMPDEST 
0x1eb: V164 = 0x1f2
0x1ee: V165 = 0x3d6
0x1f1: JUMP 0x3d6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2]
Exit stack: [V12, 0x1f2]

================================

Block 0x1f2
[0x1f2:0x1f3]
---
Predecessors: [0x45e, 0x503, 0x5aa, 0x695, 0x6dc, 0x895]
Successors: []
---
0x1f2 JUMPDEST
0x1f3 STOP
---
0x1f2: JUMPDEST 
0x1f3: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f4
[0x1f4:0x1fa]
---
Predecessors: [0x25]
Successors: [0x1fb, 0x1ff]
---
0x1f4 JUMPDEST
0x1f5 CALLVALUE
0x1f6 ISZERO
0x1f7 PUSH2 0x1ff
0x1fa JUMPI
---
0x1f4: JUMPDEST 
0x1f5: V166 = CALLVALUE
0x1f6: V167 = ISZERO V166
0x1f7: V168 = 0x1ff
0x1fa: JUMPI 0x1ff V167
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fb
[0x1fb:0x1fe]
---
Predecessors: [0x1f4]
Successors: []
---
0x1fb PUSH1 0x0
0x1fd DUP1
0x1fe REVERT
---
0x1fb: V169 = 0x0
0x1fe: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ff
[0x1ff:0x206]
---
Predecessors: [0x1f4]
Successors: [0x460]
---
0x1ff JUMPDEST
0x200 PUSH2 0x207
0x203 PUSH2 0x460
0x206 JUMP
---
0x1ff: JUMPDEST 
0x200: V170 = 0x207
0x203: V171 = 0x460
0x206: JUMP 0x460
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x207]
Exit stack: [V12, 0x207]

================================

Block 0x207
[0x207:0x218]
---
Predecessors: [0x460, 0x484, 0x496, 0x49c, 0x4a2, 0x5ac, 0x6df]
Successors: []
---
0x207 JUMPDEST
0x208 PUSH1 0x40
0x20a MLOAD
0x20b SWAP1
0x20c DUP2
0x20d MSTORE
0x20e PUSH1 0x20
0x210 ADD
0x211 PUSH1 0x40
0x213 MLOAD
0x214 DUP1
0x215 SWAP2
0x216 SUB
0x217 SWAP1
0x218 RETURN
---
0x207: JUMPDEST 
0x208: V172 = 0x40
0x20a: V173 = M[0x40]
0x20d: M[V173] = S0
0x20e: V174 = 0x20
0x210: V175 = ADD 0x20 V173
0x211: V176 = 0x40
0x213: V177 = M[0x40]
0x216: V178 = SUB V175 V177
0x218: RETURN V177 V178
---
Entry stack: [V12, 0x207, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x207]

================================

Block 0x219
[0x219:0x21f]
---
Predecessors: [0x30]
Successors: [0x220, 0x224]
---
0x219 JUMPDEST
0x21a CALLVALUE
0x21b ISZERO
0x21c PUSH2 0x224
0x21f JUMPI
---
0x219: JUMPDEST 
0x21a: V179 = CALLVALUE
0x21b: V180 = ISZERO V179
0x21c: V181 = 0x224
0x21f: JUMPI 0x224 V180
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x220
[0x220:0x223]
---
Predecessors: [0x219]
Successors: []
---
0x220 PUSH1 0x0
0x222 DUP1
0x223 REVERT
---
0x220: V182 = 0x0
0x223: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x224
[0x224:0x22b]
---
Predecessors: [0x219]
Successors: [0x466]
---
0x224 JUMPDEST
0x225 PUSH2 0x22c
0x228 PUSH2 0x466
0x22b JUMP
---
0x224: JUMPDEST 
0x225: V183 = 0x22c
0x228: V184 = 0x466
0x22b: JUMP 0x466
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22c]
Exit stack: [V12, 0x22c]

================================

Block 0x22c
[0x22c:0x247]
---
Predecessors: [0x466, 0x475]
Successors: []
---
0x22c JUMPDEST
0x22d PUSH1 0x40
0x22f MLOAD
0x230 PUSH1 0x1
0x232 PUSH1 0xa0
0x234 PUSH1 0x2
0x236 EXP
0x237 SUB
0x238 SWAP1
0x239 SWAP2
0x23a AND
0x23b DUP2
0x23c MSTORE
0x23d PUSH1 0x20
0x23f ADD
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 SWAP2
0x245 SUB
0x246 SWAP1
0x247 RETURN
---
0x22c: JUMPDEST 
0x22d: V185 = 0x40
0x22f: V186 = M[0x40]
0x230: V187 = 0x1
0x232: V188 = 0xa0
0x234: V189 = 0x2
0x236: V190 = EXP 0x2 0xa0
0x237: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V192 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x23c: M[V186] = V192
0x23d: V193 = 0x20
0x23f: V194 = ADD 0x20 V186
0x240: V195 = 0x40
0x242: V196 = M[0x40]
0x245: V197 = SUB V194 V196
0x247: RETURN V196 V197
---
Entry stack: [V12, 0x22c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x22c]

================================

Block 0x248
[0x248:0x24e]
---
Predecessors: [0x3b]
Successors: [0x24f, 0x253]
---
0x248 JUMPDEST
0x249 CALLVALUE
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x248: JUMPDEST 
0x249: V198 = CALLVALUE
0x24a: V199 = ISZERO V198
0x24b: V200 = 0x253
0x24e: JUMPI 0x253 V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x248]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V201 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x253
[0x253:0x25a]
---
Predecessors: [0x248]
Successors: [0x475]
---
0x253 JUMPDEST
0x254 PUSH2 0x22c
0x257 PUSH2 0x475
0x25a JUMP
---
0x253: JUMPDEST 
0x254: V202 = 0x22c
0x257: V203 = 0x475
0x25a: JUMP 0x475
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22c]
Exit stack: [V12, 0x22c]

================================

Block 0x25b
[0x25b:0x276]
---
Predecessors: []
Successors: []
---
0x25b JUMPDEST
0x25c PUSH1 0x40
0x25e MLOAD
0x25f PUSH1 0x1
0x261 PUSH1 0xa0
0x263 PUSH1 0x2
0x265 EXP
0x266 SUB
0x267 SWAP1
0x268 SWAP2
0x269 AND
0x26a DUP2
0x26b MSTORE
0x26c PUSH1 0x20
0x26e ADD
0x26f PUSH1 0x40
0x271 MLOAD
0x272 DUP1
0x273 SWAP2
0x274 SUB
0x275 SWAP1
0x276 RETURN
---
0x25b: JUMPDEST 
0x25c: V204 = 0x40
0x25e: V205 = M[0x40]
0x25f: V206 = 0x1
0x261: V207 = 0xa0
0x263: V208 = 0x2
0x265: V209 = EXP 0x2 0xa0
0x266: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x269: V211 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x26b: M[V205] = V211
0x26c: V212 = 0x20
0x26e: V213 = ADD 0x20 V205
0x26f: V214 = 0x40
0x271: V215 = M[0x40]
0x274: V216 = SUB V213 V215
0x276: RETURN V215 V216
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0x46]
Successors: [0x27e, 0x282]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V217 = CALLVALUE
0x279: V218 = ISZERO V217
0x27a: V219 = 0x282
0x27d: JUMPI 0x282 V218
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x277]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V220 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x282
[0x282:0x295]
---
Predecessors: [0x277]
Successors: [0x484]
---
0x282 JUMPDEST
0x283 PUSH2 0x207
0x286 PUSH1 0x1
0x288 PUSH1 0xa0
0x28a PUSH1 0x2
0x28c EXP
0x28d SUB
0x28e PUSH1 0x4
0x290 CALLDATALOAD
0x291 AND
0x292 PUSH2 0x484
0x295 JUMP
---
0x282: JUMPDEST 
0x283: V221 = 0x207
0x286: V222 = 0x1
0x288: V223 = 0xa0
0x28a: V224 = 0x2
0x28c: V225 = EXP 0x2 0xa0
0x28d: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28e: V227 = 0x4
0x290: V228 = CALLDATALOAD 0x4
0x291: V229 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x292: V230 = 0x484
0x295: JUMP 0x484
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x207, V229]
Exit stack: [V12, 0x207, V229]

================================

Block 0x296
[0x296:0x2a7]
---
Predecessors: []
Successors: []
---
0x296 JUMPDEST
0x297 PUSH1 0x40
0x299 MLOAD
0x29a SWAP1
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x20
0x29f ADD
0x2a0 PUSH1 0x40
0x2a2 MLOAD
0x2a3 DUP1
0x2a4 SWAP2
0x2a5 SUB
0x2a6 SWAP1
0x2a7 RETURN
---
0x296: JUMPDEST 
0x297: V231 = 0x40
0x299: V232 = M[0x40]
0x29c: M[V232] = S0
0x29d: V233 = 0x20
0x29f: V234 = ADD 0x20 V232
0x2a0: V235 = 0x40
0x2a2: V236 = M[0x40]
0x2a5: V237 = SUB V234 V236
0x2a7: RETURN V236 V237
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a8
[0x2a8:0x2ae]
---
Predecessors: [0x51]
Successors: [0x2af, 0x2b3]
---
0x2a8 JUMPDEST
0x2a9 CALLVALUE
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V238 = CALLVALUE
0x2aa: V239 = ISZERO V238
0x2ab: V240 = 0x2b3
0x2ae: JUMPI 0x2b3 V239
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x2a8]
Successors: []
---
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 REVERT
---
0x2af: V241 = 0x0
0x2b2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0x2a8]
Successors: [0x496]
---
0x2b3 JUMPDEST
0x2b4 PUSH2 0x207
0x2b7 PUSH2 0x496
0x2ba JUMP
---
0x2b3: JUMPDEST 
0x2b4: V242 = 0x207
0x2b7: V243 = 0x496
0x2ba: JUMP 0x496
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x207]
Exit stack: [V12, 0x207]

================================

Block 0x2bb
[0x2bb:0x2cc]
---
Predecessors: []
Successors: []
---
0x2bb JUMPDEST
0x2bc PUSH1 0x40
0x2be MLOAD
0x2bf SWAP1
0x2c0 DUP2
0x2c1 MSTORE
0x2c2 PUSH1 0x20
0x2c4 ADD
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP1
0x2c9 SWAP2
0x2ca SUB
0x2cb SWAP1
0x2cc RETURN
---
0x2bb: JUMPDEST 
0x2bc: V244 = 0x40
0x2be: V245 = M[0x40]
0x2c1: M[V245] = S0
0x2c2: V246 = 0x20
0x2c4: V247 = ADD 0x20 V245
0x2c5: V248 = 0x40
0x2c7: V249 = M[0x40]
0x2ca: V250 = SUB V247 V249
0x2cc: RETURN V249 V250
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2cd
[0x2cd:0x2d3]
---
Predecessors: [0x5c]
Successors: [0x2d4, 0x2d8]
---
0x2cd JUMPDEST
0x2ce CALLVALUE
0x2cf ISZERO
0x2d0 PUSH2 0x2d8
0x2d3 JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V251 = CALLVALUE
0x2cf: V252 = ISZERO V251
0x2d0: V253 = 0x2d8
0x2d3: JUMPI 0x2d8 V252
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d4
[0x2d4:0x2d7]
---
Predecessors: [0x2cd]
Successors: []
---
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 REVERT
---
0x2d4: V254 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d8
[0x2d8:0x2df]
---
Predecessors: [0x2cd]
Successors: [0x49c]
---
0x2d8 JUMPDEST
0x2d9 PUSH2 0x207
0x2dc PUSH2 0x49c
0x2df JUMP
---
0x2d8: JUMPDEST 
0x2d9: V255 = 0x207
0x2dc: V256 = 0x49c
0x2df: JUMP 0x49c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x207]
Exit stack: [V12, 0x207]

================================

Block 0x2e0
[0x2e0:0x2f1]
---
Predecessors: []
Successors: []
---
0x2e0 JUMPDEST
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 SWAP1
0x2e5 DUP2
0x2e6 MSTORE
0x2e7 PUSH1 0x20
0x2e9 ADD
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed DUP1
0x2ee SWAP2
0x2ef SUB
0x2f0 SWAP1
0x2f1 RETURN
---
0x2e0: JUMPDEST 
0x2e1: V257 = 0x40
0x2e3: V258 = M[0x40]
0x2e6: M[V258] = S0
0x2e7: V259 = 0x20
0x2e9: V260 = ADD 0x20 V258
0x2ea: V261 = 0x40
0x2ec: V262 = M[0x40]
0x2ef: V263 = SUB V260 V262
0x2f1: RETURN V262 V263
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f2
[0x2f2:0x2f8]
---
Predecessors: [0x67]
Successors: [0x2f9, 0x2fd]
---
0x2f2 JUMPDEST
0x2f3 CALLVALUE
0x2f4 ISZERO
0x2f5 PUSH2 0x2fd
0x2f8 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V264 = CALLVALUE
0x2f4: V265 = ISZERO V264
0x2f5: V266 = 0x2fd
0x2f8: JUMPI 0x2fd V265
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f9
[0x2f9:0x2fc]
---
Predecessors: [0x2f2]
Successors: []
---
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc REVERT
---
0x2f9: V267 = 0x0
0x2fc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fd
[0x2fd:0x304]
---
Predecessors: [0x2f2]
Successors: [0x4a2]
---
0x2fd JUMPDEST
0x2fe PUSH2 0x207
0x301 PUSH2 0x4a2
0x304 JUMP
---
0x2fd: JUMPDEST 
0x2fe: V268 = 0x207
0x301: V269 = 0x4a2
0x304: JUMP 0x4a2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x207]
Exit stack: [V12, 0x207]

================================

Block 0x305
[0x305:0x316]
---
Predecessors: []
Successors: []
---
0x305 JUMPDEST
0x306 PUSH1 0x40
0x308 MLOAD
0x309 SWAP1
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x20
0x30e ADD
0x30f PUSH1 0x40
0x311 MLOAD
0x312 DUP1
0x313 SWAP2
0x314 SUB
0x315 SWAP1
0x316 RETURN
---
0x305: JUMPDEST 
0x306: V270 = 0x40
0x308: V271 = M[0x40]
0x30b: M[V271] = S0
0x30c: V272 = 0x20
0x30e: V273 = ADD 0x20 V271
0x30f: V274 = 0x40
0x311: V275 = M[0x40]
0x314: V276 = SUB V273 V275
0x316: RETURN V275 V276
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x317
[0x317:0x31d]
---
Predecessors: [0x72]
Successors: [0x31e, 0x322]
---
0x317 JUMPDEST
0x318 CALLVALUE
0x319 ISZERO
0x31a PUSH2 0x322
0x31d JUMPI
---
0x317: JUMPDEST 
0x318: V277 = CALLVALUE
0x319: V278 = ISZERO V277
0x31a: V279 = 0x322
0x31d: JUMPI 0x322 V278
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31e
[0x31e:0x321]
---
Predecessors: [0x317]
Successors: []
---
0x31e PUSH1 0x0
0x320 DUP1
0x321 REVERT
---
0x31e: V280 = 0x0
0x321: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x322
[0x322:0x329]
---
Predecessors: [0x317]
Successors: [0x4a8]
---
0x322 JUMPDEST
0x323 PUSH2 0x1f2
0x326 PUSH2 0x4a8
0x329 JUMP
---
0x322: JUMPDEST 
0x323: V281 = 0x1f2
0x326: V282 = 0x4a8
0x329: JUMP 0x4a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2]
Exit stack: [V12, 0x1f2]

================================

Block 0x32a
[0x32a:0x32b]
---
Predecessors: []
Successors: []
---
0x32a JUMPDEST
0x32b STOP
---
0x32a: JUMPDEST 
0x32b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x32c
[0x32c:0x332]
---
Predecessors: [0x7d]
Successors: [0x333, 0x337]
---
0x32c JUMPDEST
0x32d CALLVALUE
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x32c: JUMPDEST 
0x32d: V283 = CALLVALUE
0x32e: V284 = ISZERO V283
0x32f: V285 = 0x337
0x332: JUMPI 0x337 V284
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x32c]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V286 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x337
[0x337:0x33e]
---
Predecessors: [0x32c]
Successors: [0x505]
---
0x337 JUMPDEST
0x338 PUSH2 0x1f2
0x33b PUSH2 0x505
0x33e JUMP
---
0x337: JUMPDEST 
0x338: V287 = 0x1f2
0x33b: V288 = 0x505
0x33e: JUMP 0x505
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2]
Exit stack: [V12, 0x1f2]

================================

Block 0x33f
[0x33f:0x340]
---
Predecessors: []
Successors: []
---
0x33f JUMPDEST
0x340 STOP
---
0x33f: JUMPDEST 
0x340: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x341
[0x341:0x347]
---
Predecessors: [0x88]
Successors: [0x348, 0x34c]
---
0x341 JUMPDEST
0x342 CALLVALUE
0x343 ISZERO
0x344 PUSH2 0x34c
0x347 JUMPI
---
0x341: JUMPDEST 
0x342: V289 = CALLVALUE
0x343: V290 = ISZERO V289
0x344: V291 = 0x34c
0x347: JUMPI 0x34c V290
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x348
[0x348:0x34b]
---
Predecessors: [0x341]
Successors: []
---
0x348 PUSH1 0x0
0x34a DUP1
0x34b REVERT
---
0x348: V292 = 0x0
0x34b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34c
[0x34c:0x353]
---
Predecessors: [0x341]
Successors: [0x5ac]
---
0x34c JUMPDEST
0x34d PUSH2 0x207
0x350 PUSH2 0x5ac
0x353 JUMP
---
0x34c: JUMPDEST 
0x34d: V293 = 0x207
0x350: V294 = 0x5ac
0x353: JUMP 0x5ac
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x207]
Exit stack: [V12, 0x207]

================================

Block 0x354
[0x354:0x365]
---
Predecessors: []
Successors: []
---
0x354 JUMPDEST
0x355 PUSH1 0x40
0x357 MLOAD
0x358 SWAP1
0x359 DUP2
0x35a MSTORE
0x35b PUSH1 0x20
0x35d ADD
0x35e PUSH1 0x40
0x360 MLOAD
0x361 DUP1
0x362 SWAP2
0x363 SUB
0x364 SWAP1
0x365 RETURN
---
0x354: JUMPDEST 
0x355: V295 = 0x40
0x357: V296 = M[0x40]
0x35a: M[V296] = S0
0x35b: V297 = 0x20
0x35d: V298 = ADD 0x20 V296
0x35e: V299 = 0x40
0x360: V300 = M[0x40]
0x363: V301 = SUB V298 V300
0x365: RETURN V300 V301
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x366
[0x366:0x36c]
---
Predecessors: [0x93]
Successors: [0x36d, 0x371]
---
0x366 JUMPDEST
0x367 CALLVALUE
0x368 ISZERO
0x369 PUSH2 0x371
0x36c JUMPI
---
0x366: JUMPDEST 
0x367: V302 = CALLVALUE
0x368: V303 = ISZERO V302
0x369: V304 = 0x371
0x36c: JUMPI 0x371 V303
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36d
[0x36d:0x370]
---
Predecessors: [0x366]
Successors: []
---
0x36d PUSH1 0x0
0x36f DUP1
0x370 REVERT
---
0x36d: V305 = 0x0
0x370: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x371
[0x371:0x378]
---
Predecessors: [0x366]
Successors: [0x5b2]
---
0x371 JUMPDEST
0x372 PUSH2 0x1f2
0x375 PUSH2 0x5b2
0x378 JUMP
---
0x371: JUMPDEST 
0x372: V306 = 0x1f2
0x375: V307 = 0x5b2
0x378: JUMP 0x5b2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2]
Exit stack: [V12, 0x1f2]

================================

Block 0x379
[0x379:0x37a]
---
Predecessors: []
Successors: []
---
0x379 JUMPDEST
0x37a STOP
---
0x379: JUMPDEST 
0x37a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x37b
[0x37b:0x381]
---
Predecessors: [0x9e]
Successors: [0x382, 0x386]
---
0x37b JUMPDEST
0x37c CALLVALUE
0x37d ISZERO
0x37e PUSH2 0x386
0x381 JUMPI
---
0x37b: JUMPDEST 
0x37c: V308 = CALLVALUE
0x37d: V309 = ISZERO V308
0x37e: V310 = 0x386
0x381: JUMPI 0x386 V309
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x382
[0x382:0x385]
---
Predecessors: [0x37b]
Successors: []
---
0x382 PUSH1 0x0
0x384 DUP1
0x385 REVERT
---
0x382: V311 = 0x0
0x385: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x386
[0x386:0x399]
---
Predecessors: [0x37b]
Successors: [0x697]
---
0x386 JUMPDEST
0x387 PUSH2 0x1f2
0x38a PUSH1 0x1
0x38c PUSH1 0xa0
0x38e PUSH1 0x2
0x390 EXP
0x391 SUB
0x392 PUSH1 0x4
0x394 CALLDATALOAD
0x395 AND
0x396 PUSH2 0x697
0x399 JUMP
---
0x386: JUMPDEST 
0x387: V312 = 0x1f2
0x38a: V313 = 0x1
0x38c: V314 = 0xa0
0x38e: V315 = 0x2
0x390: V316 = EXP 0x2 0xa0
0x391: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x392: V318 = 0x4
0x394: V319 = CALLDATALOAD 0x4
0x395: V320 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x396: V321 = 0x697
0x399: JUMP 0x697
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2, V320]
Exit stack: [V12, 0x1f2, V320]

================================

Block 0x39a
[0x39a:0x39b]
---
Predecessors: []
Successors: []
---
0x39a JUMPDEST
0x39b STOP
---
0x39a: JUMPDEST 
0x39b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x39c
[0x39c:0x3a2]
---
Predecessors: [0xa9]
Successors: [0x3a3, 0x3a7]
---
0x39c JUMPDEST
0x39d CALLVALUE
0x39e ISZERO
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x39c: JUMPDEST 
0x39d: V322 = CALLVALUE
0x39e: V323 = ISZERO V322
0x39f: V324 = 0x3a7
0x3a2: JUMPI 0x3a7 V323
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x39c]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V325 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a7
[0x3a7:0x3ae]
---
Predecessors: [0x39c]
Successors: [0x6df]
---
0x3a7 JUMPDEST
0x3a8 PUSH2 0x207
0x3ab PUSH2 0x6df
0x3ae JUMP
---
0x3a7: JUMPDEST 
0x3a8: V326 = 0x207
0x3ab: V327 = 0x6df
0x3ae: JUMP 0x6df
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x207]
Exit stack: [V12, 0x207]

================================

Block 0x3af
[0x3af:0x3c0]
---
Predecessors: []
Successors: []
---
0x3af JUMPDEST
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 SWAP1
0x3b4 DUP2
0x3b5 MSTORE
0x3b6 PUSH1 0x20
0x3b8 ADD
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc DUP1
0x3bd SWAP2
0x3be SUB
0x3bf SWAP1
0x3c0 RETURN
---
0x3af: JUMPDEST 
0x3b0: V328 = 0x40
0x3b2: V329 = M[0x40]
0x3b5: M[V329] = S0
0x3b6: V330 = 0x20
0x3b8: V331 = ADD 0x20 V329
0x3b9: V332 = 0x40
0x3bb: V333 = M[0x40]
0x3be: V334 = SUB V331 V333
0x3c0: RETURN V333 V334
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c1
[0x3c1:0x3c7]
---
Predecessors: [0xb4]
Successors: [0x3c8, 0x3cc]
---
0x3c1 JUMPDEST
0x3c2 CALLVALUE
0x3c3 ISZERO
0x3c4 PUSH2 0x3cc
0x3c7 JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V335 = CALLVALUE
0x3c3: V336 = ISZERO V335
0x3c4: V337 = 0x3cc
0x3c7: JUMPI 0x3cc V336
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c8
[0x3c8:0x3cb]
---
Predecessors: [0x3c1]
Successors: []
---
0x3c8 PUSH1 0x0
0x3ca DUP1
0x3cb REVERT
---
0x3c8: V338 = 0x0
0x3cb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cc
[0x3cc:0x3d3]
---
Predecessors: [0x3c1]
Successors: [0x6e5]
---
0x3cc JUMPDEST
0x3cd PUSH2 0x1f2
0x3d0 PUSH2 0x6e5
0x3d3 JUMP
---
0x3cc: JUMPDEST 
0x3cd: V339 = 0x1f2
0x3d0: V340 = 0x6e5
0x3d3: JUMP 0x6e5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2]
Exit stack: [V12, 0x1f2]

================================

Block 0x3d4
[0x3d4:0x3d5]
---
Predecessors: []
Successors: []
---
0x3d4 JUMPDEST
0x3d5 STOP
---
0x3d4: JUMPDEST 
0x3d5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3d6
[0x3d6:0x3df]
---
Predecessors: [0x1ea]
Successors: [0x3e0, 0x45c]
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0x5
0x3d9 SLOAD
0x3da TIMESTAMP
0x3db LT
0x3dc PUSH2 0x45c
0x3df JUMPI
---
0x3d6: JUMPDEST 
0x3d7: V341 = 0x5
0x3d9: V342 = S[0x5]
0x3da: V343 = TIMESTAMP
0x3db: V344 = LT V343 V342
0x3dc: V345 = 0x45c
0x3df: JUMPI 0x45c V344
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x3e0
[0x3e0:0x3ea]
---
Predecessors: [0x3d6]
Successors: [0x3eb, 0x44c]
---
0x3e0 PUSH1 0x2
0x3e2 SLOAD
0x3e3 PUSH1 0x3
0x3e5 SLOAD
0x3e6 LT
0x3e7 PUSH2 0x44c
0x3ea JUMPI
---
0x3e0: V346 = 0x2
0x3e2: V347 = S[0x2]
0x3e3: V348 = 0x3
0x3e5: V349 = S[0x3]
0x3e6: V350 = LT V349 V347
0x3e7: V351 = 0x44c
0x3ea: JUMPI 0x44c V350
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x3eb
[0x3eb:0x44b]
---
Predecessors: [0x3e0]
Successors: [0x44c]
---
0x3eb PUSH1 0xa
0x3ed DUP1
0x3ee SLOAD
0x3ef PUSH1 0xff
0x3f1 NOT
0x3f2 AND
0x3f3 PUSH1 0x1
0x3f5 SWAP1
0x3f6 DUP2
0x3f7 OR
0x3f8 SWAP1
0x3f9 SWAP2
0x3fa SSTORE
0x3fb SLOAD
0x3fc PUSH1 0x3
0x3fe SLOAD
0x3ff PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x420 SWAP2
0x421 PUSH1 0x1
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SUB
0x429 AND
0x42a SWAP1
0x42b PUSH1 0x40
0x42d MLOAD
0x42e PUSH1 0x1
0x430 PUSH1 0xa0
0x432 PUSH1 0x2
0x434 EXP
0x435 SUB
0x436 SWAP1
0x437 SWAP3
0x438 AND
0x439 DUP3
0x43a MSTORE
0x43b PUSH1 0x20
0x43d DUP3
0x43e ADD
0x43f MSTORE
0x440 PUSH1 0x40
0x442 SWAP1
0x443 DUP2
0x444 ADD
0x445 SWAP1
0x446 MLOAD
0x447 DUP1
0x448 SWAP2
0x449 SUB
0x44a SWAP1
0x44b LOG1
---
0x3eb: V352 = 0xa
0x3ee: V353 = S[0xa]
0x3ef: V354 = 0xff
0x3f1: V355 = NOT 0xff
0x3f2: V356 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V353
0x3f3: V357 = 0x1
0x3f7: V358 = OR 0x1 V356
0x3fa: S[0xa] = V358
0x3fb: V359 = S[0x1]
0x3fc: V360 = 0x3
0x3fe: V361 = S[0x3]
0x3ff: V362 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x421: V363 = 0x1
0x423: V364 = 0xa0
0x425: V365 = 0x2
0x427: V366 = EXP 0x2 0xa0
0x428: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x42b: V369 = 0x40
0x42d: V370 = M[0x40]
0x42e: V371 = 0x1
0x430: V372 = 0xa0
0x432: V373 = 0x2
0x434: V374 = EXP 0x2 0xa0
0x435: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x438: V376 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x43a: M[V370] = V376
0x43b: V377 = 0x20
0x43e: V378 = ADD V370 0x20
0x43f: M[V378] = V361
0x440: V379 = 0x40
0x444: V380 = ADD 0x40 V370
0x446: V381 = M[0x40]
0x449: V382 = SUB V380 V381
0x44b: LOG V381 V382 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x44c
[0x44c:0x45b]
---
Predecessors: [0x3e0, 0x3eb]
Successors: [0x45c]
---
0x44c JUMPDEST
0x44d PUSH1 0xa
0x44f DUP1
0x450 SLOAD
0x451 PUSH2 0xff00
0x454 NOT
0x455 AND
0x456 PUSH2 0x100
0x459 OR
0x45a SWAP1
0x45b SSTORE
---
0x44c: JUMPDEST 
0x44d: V383 = 0xa
0x450: V384 = S[0xa]
0x451: V385 = 0xff00
0x454: V386 = NOT 0xff00
0x455: V387 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V384
0x456: V388 = 0x100
0x459: V389 = OR 0x100 V387
0x45b: S[0xa] = V389
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x45c
[0x45c:0x45c]
---
Predecessors: [0x3d6, 0x44c]
Successors: [0x45d]
---
0x45c JUMPDEST
---
0x45c: JUMPDEST 
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x45d
[0x45d:0x45d]
---
Predecessors: [0x45c]
Successors: [0x45e]
---
0x45d JUMPDEST
---
0x45d: JUMPDEST 
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x45e
[0x45e:0x45f]
---
Predecessors: [0x45d]
Successors: [0x1f2]
---
0x45e JUMPDEST
0x45f JUMP
---
0x45e: JUMPDEST 
0x45f: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x460
[0x460:0x465]
---
Predecessors: [0x1ff]
Successors: [0x207]
---
0x460 JUMPDEST
0x461 PUSH1 0x5
0x463 SLOAD
0x464 DUP2
0x465 JUMP
---
0x460: JUMPDEST 
0x461: V390 = 0x5
0x463: V391 = S[0x5]
0x465: JUMP 0x207
---
Entry stack: [V12, 0x207]
Stack pops: 1
Stack additions: [S0, V391]
Exit stack: [V12, 0x207, V391]

================================

Block 0x466
[0x466:0x474]
---
Predecessors: [0x224]
Successors: [0x22c]
---
0x466 JUMPDEST
0x467 PUSH1 0x1
0x469 SLOAD
0x46a PUSH1 0x1
0x46c PUSH1 0xa0
0x46e PUSH1 0x2
0x470 EXP
0x471 SUB
0x472 AND
0x473 DUP2
0x474 JUMP
---
0x466: JUMPDEST 
0x467: V392 = 0x1
0x469: V393 = S[0x1]
0x46a: V394 = 0x1
0x46c: V395 = 0xa0
0x46e: V396 = 0x2
0x470: V397 = EXP 0x2 0xa0
0x471: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x472: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x474: JUMP 0x22c
---
Entry stack: [V12, 0x22c]
Stack pops: 1
Stack additions: [S0, V399]
Exit stack: [V12, 0x22c, V399]

================================

Block 0x475
[0x475:0x483]
---
Predecessors: [0x253]
Successors: [0x22c]
---
0x475 JUMPDEST
0x476 PUSH1 0x7
0x478 SLOAD
0x479 PUSH1 0x1
0x47b PUSH1 0xa0
0x47d PUSH1 0x2
0x47f EXP
0x480 SUB
0x481 AND
0x482 DUP2
0x483 JUMP
---
0x475: JUMPDEST 
0x476: V400 = 0x7
0x478: V401 = S[0x7]
0x479: V402 = 0x1
0x47b: V403 = 0xa0
0x47d: V404 = 0x2
0x47f: V405 = EXP 0x2 0xa0
0x480: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x481: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x483: JUMP 0x22c
---
Entry stack: [V12, 0x22c]
Stack pops: 1
Stack additions: [S0, V407]
Exit stack: [V12, 0x22c, V407]

================================

Block 0x484
[0x484:0x495]
---
Predecessors: [0x282]
Successors: [0x207]
---
0x484 JUMPDEST
0x485 PUSH1 0x9
0x487 PUSH1 0x20
0x489 MSTORE
0x48a PUSH1 0x0
0x48c SWAP1
0x48d DUP2
0x48e MSTORE
0x48f PUSH1 0x40
0x491 SWAP1
0x492 SHA3
0x493 SLOAD
0x494 DUP2
0x495 JUMP
---
0x484: JUMPDEST 
0x485: V408 = 0x9
0x487: V409 = 0x20
0x489: M[0x20] = 0x9
0x48a: V410 = 0x0
0x48e: M[0x0] = V229
0x48f: V411 = 0x40
0x492: V412 = SHA3 0x0 0x40
0x493: V413 = S[V412]
0x495: JUMP 0x207
---
Entry stack: [V12, 0x207, V229]
Stack pops: 2
Stack additions: [S1, V413]
Exit stack: [V12, 0x207, V413]

================================

Block 0x496
[0x496:0x49b]
---
Predecessors: [0x2b3]
Successors: [0x207]
---
0x496 JUMPDEST
0x497 PUSH1 0x8
0x499 SLOAD
0x49a DUP2
0x49b JUMP
---
0x496: JUMPDEST 
0x497: V414 = 0x8
0x499: V415 = S[0x8]
0x49b: JUMP 0x207
---
Entry stack: [V12, 0x207]
Stack pops: 1
Stack additions: [S0, V415]
Exit stack: [V12, 0x207, V415]

================================

Block 0x49c
[0x49c:0x4a1]
---
Predecessors: [0x2d8]
Successors: [0x207]
---
0x49c JUMPDEST
0x49d PUSH1 0x2
0x49f SLOAD
0x4a0 DUP2
0x4a1 JUMP
---
0x49c: JUMPDEST 
0x49d: V416 = 0x2
0x49f: V417 = S[0x2]
0x4a1: JUMP 0x207
---
Entry stack: [V12, 0x207]
Stack pops: 1
Stack additions: [S0, V417]
Exit stack: [V12, 0x207, V417]

================================

Block 0x4a2
[0x4a2:0x4a7]
---
Predecessors: [0x2fd]
Successors: [0x207]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x3
0x4a5 SLOAD
0x4a6 DUP2
0x4a7 JUMP
---
0x4a2: JUMPDEST 
0x4a3: V418 = 0x3
0x4a5: V419 = S[0x3]
0x4a7: JUMP 0x207
---
Entry stack: [V12, 0x207]
Stack pops: 1
Stack additions: [S0, V419]
Exit stack: [V12, 0x207, V419]

================================

Block 0x4a8
[0x4a8:0x4be]
---
Predecessors: [0x322]
Successors: [0x4bf, 0x4c3]
---
0x4a8 JUMPDEST
0x4a9 PUSH1 0x0
0x4ab SLOAD
0x4ac CALLER
0x4ad PUSH1 0x1
0x4af PUSH1 0xa0
0x4b1 PUSH1 0x2
0x4b3 EXP
0x4b4 SUB
0x4b5 SWAP1
0x4b6 DUP2
0x4b7 AND
0x4b8 SWAP2
0x4b9 AND
0x4ba EQ
0x4bb PUSH2 0x4c3
0x4be JUMPI
---
0x4a8: JUMPDEST 
0x4a9: V420 = 0x0
0x4ab: V421 = S[0x0]
0x4ac: V422 = CALLER
0x4ad: V423 = 0x1
0x4af: V424 = 0xa0
0x4b1: V425 = 0x2
0x4b3: V426 = EXP 0x2 0xa0
0x4b4: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b7: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x4b9: V429 = AND V421 0xffffffffffffffffffffffffffffffffffffffff
0x4ba: V430 = EQ V429 V428
0x4bb: V431 = 0x4c3
0x4be: JUMPI 0x4c3 V430
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x4bf
[0x4bf:0x4c2]
---
Predecessors: [0x4a8]
Successors: []
---
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 REVERT
---
0x4bf: V432 = 0x0
0x4c2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x4c3
[0x4c3:0x4f7]
---
Predecessors: [0x4a8]
Successors: [0x4f8, 0x4fc]
---
0x4c3 JUMPDEST
0x4c4 PUSH1 0x1
0x4c6 SLOAD
0x4c7 PUSH1 0x4
0x4c9 SLOAD
0x4ca PUSH1 0x1
0x4cc PUSH1 0xa0
0x4ce PUSH1 0x2
0x4d0 EXP
0x4d1 SUB
0x4d2 SWAP1
0x4d3 SWAP2
0x4d4 AND
0x4d5 SWAP1
0x4d6 DUP1
0x4d7 ISZERO
0x4d8 PUSH2 0x8fc
0x4db MUL
0x4dc SWAP1
0x4dd PUSH1 0x40
0x4df MLOAD
0x4e0 PUSH1 0x0
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 DUP1
0x4e6 DUP4
0x4e7 SUB
0x4e8 DUP2
0x4e9 DUP6
0x4ea DUP9
0x4eb DUP9
0x4ec CALL
0x4ed SWAP4
0x4ee POP
0x4ef POP
0x4f0 POP
0x4f1 POP
0x4f2 ISZERO
0x4f3 ISZERO
0x4f4 PUSH2 0x4fc
0x4f7 JUMPI
---
0x4c3: JUMPDEST 
0x4c4: V433 = 0x1
0x4c6: V434 = S[0x1]
0x4c7: V435 = 0x4
0x4c9: V436 = S[0x4]
0x4ca: V437 = 0x1
0x4cc: V438 = 0xa0
0x4ce: V439 = 0x2
0x4d0: V440 = EXP 0x2 0xa0
0x4d1: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d4: V442 = AND V434 0xffffffffffffffffffffffffffffffffffffffff
0x4d7: V443 = ISZERO V436
0x4d8: V444 = 0x8fc
0x4db: V445 = MUL 0x8fc V443
0x4dd: V446 = 0x40
0x4df: V447 = M[0x40]
0x4e0: V448 = 0x0
0x4e2: V449 = 0x40
0x4e4: V450 = M[0x40]
0x4e7: V451 = SUB V447 V450
0x4ec: V452 = CALL V445 V442 V436 V450 V451 V450 0x0
0x4f2: V453 = ISZERO V452
0x4f3: V454 = ISZERO V453
0x4f4: V455 = 0x4fc
0x4f7: JUMPI 0x4fc V454
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x4f8
[0x4f8:0x4fb]
---
Predecessors: [0x4c3]
Successors: []
---
0x4f8 PUSH1 0x0
0x4fa DUP1
0x4fb REVERT
---
0x4f8: V456 = 0x0
0x4fb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x4fc
[0x4fc:0x501]
---
Predecessors: [0x4c3]
Successors: [0x502]
---
0x4fc JUMPDEST
0x4fd PUSH1 0x0
0x4ff PUSH1 0x4
0x501 SSTORE
---
0x4fc: JUMPDEST 
0x4fd: V457 = 0x0
0x4ff: V458 = 0x4
0x501: S[0x4] = 0x0
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x502
[0x502:0x502]
---
Predecessors: [0x4fc]
Successors: [0x503]
---
0x502 JUMPDEST
---
0x502: JUMPDEST 
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x503
[0x503:0x504]
---
Predecessors: [0x502]
Successors: [0x1f2]
---
0x503 JUMPDEST
0x504 JUMP
---
0x503: JUMPDEST 
0x504: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x505
[0x505:0x51b]
---
Predecessors: [0x337]
Successors: [0x51c, 0x520]
---
0x505 JUMPDEST
0x506 PUSH1 0x0
0x508 SLOAD
0x509 CALLER
0x50a PUSH1 0x1
0x50c PUSH1 0xa0
0x50e PUSH1 0x2
0x510 EXP
0x511 SUB
0x512 SWAP1
0x513 DUP2
0x514 AND
0x515 SWAP2
0x516 AND
0x517 EQ
0x518 PUSH2 0x520
0x51b JUMPI
---
0x505: JUMPDEST 
0x506: V459 = 0x0
0x508: V460 = S[0x0]
0x509: V461 = CALLER
0x50a: V462 = 0x1
0x50c: V463 = 0xa0
0x50e: V464 = 0x2
0x510: V465 = EXP 0x2 0xa0
0x511: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x514: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x516: V468 = AND V460 0xffffffffffffffffffffffffffffffffffffffff
0x517: V469 = EQ V468 V467
0x518: V470 = 0x520
0x51b: JUMPI 0x520 V469
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x51c
[0x51c:0x51f]
---
Predecessors: [0x505]
Successors: []
---
0x51c PUSH1 0x0
0x51e DUP1
0x51f REVERT
---
0x51c: V471 = 0x0
0x51f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x520
[0x520:0x57b]
---
Predecessors: [0x505]
Successors: [0x57c, 0x580]
---
0x520 JUMPDEST
0x521 PUSH1 0x7
0x523 SLOAD
0x524 PUSH1 0x1
0x526 SLOAD
0x527 PUSH1 0x8
0x529 SLOAD
0x52a PUSH1 0x1
0x52c PUSH1 0xa0
0x52e PUSH1 0x2
0x530 EXP
0x531 SUB
0x532 SWAP3
0x533 DUP4
0x534 AND
0x535 SWAP3
0x536 PUSH4 0xa9059cbb
0x53b SWAP3
0x53c AND
0x53d SWAP1
0x53e PUSH1 0x40
0x540 MLOAD
0x541 PUSH1 0xe0
0x543 PUSH1 0x2
0x545 EXP
0x546 PUSH4 0xffffffff
0x54b DUP6
0x54c AND
0x54d MUL
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 SWAP1
0x559 SWAP3
0x55a AND
0x55b PUSH1 0x4
0x55d DUP4
0x55e ADD
0x55f MSTORE
0x560 PUSH1 0x24
0x562 DUP3
0x563 ADD
0x564 MSTORE
0x565 PUSH1 0x44
0x567 ADD
0x568 PUSH1 0x0
0x56a PUSH1 0x40
0x56c MLOAD
0x56d DUP1
0x56e DUP4
0x56f SUB
0x570 DUP2
0x571 PUSH1 0x0
0x573 DUP8
0x574 DUP1
0x575 EXTCODESIZE
0x576 ISZERO
0x577 ISZERO
0x578 PUSH2 0x580
0x57b JUMPI
---
0x520: JUMPDEST 
0x521: V472 = 0x7
0x523: V473 = S[0x7]
0x524: V474 = 0x1
0x526: V475 = S[0x1]
0x527: V476 = 0x8
0x529: V477 = S[0x8]
0x52a: V478 = 0x1
0x52c: V479 = 0xa0
0x52e: V480 = 0x2
0x530: V481 = EXP 0x2 0xa0
0x531: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x534: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x536: V484 = 0xa9059cbb
0x53c: V485 = AND V475 0xffffffffffffffffffffffffffffffffffffffff
0x53e: V486 = 0x40
0x540: V487 = M[0x40]
0x541: V488 = 0xe0
0x543: V489 = 0x2
0x545: V490 = EXP 0x2 0xe0
0x546: V491 = 0xffffffff
0x54c: V492 = AND 0xa9059cbb 0xffffffff
0x54d: V493 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x54f: M[V487] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x550: V494 = 0x1
0x552: V495 = 0xa0
0x554: V496 = 0x2
0x556: V497 = EXP 0x2 0xa0
0x557: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55a: V499 = AND V485 0xffffffffffffffffffffffffffffffffffffffff
0x55b: V500 = 0x4
0x55e: V501 = ADD V487 0x4
0x55f: M[V501] = V499
0x560: V502 = 0x24
0x563: V503 = ADD V487 0x24
0x564: M[V503] = V477
0x565: V504 = 0x44
0x567: V505 = ADD 0x44 V487
0x568: V506 = 0x0
0x56a: V507 = 0x40
0x56c: V508 = M[0x40]
0x56f: V509 = SUB V505 V508
0x571: V510 = 0x0
0x575: V511 = EXTCODESIZE V483
0x576: V512 = ISZERO V511
0x577: V513 = ISZERO V512
0x578: V514 = 0x580
0x57b: JUMPI 0x580 V513
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: [V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]
Exit stack: [V12, 0x1f2, V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]

================================

Block 0x57c
[0x57c:0x57f]
---
Predecessors: [0x520]
Successors: []
---
0x57c PUSH1 0x0
0x57e DUP1
0x57f REVERT
---
0x57c: V515 = 0x0
0x57f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2, V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]

================================

Block 0x580
[0x580:0x58c]
---
Predecessors: [0x520]
Successors: [0x58d, 0x591]
---
0x580 JUMPDEST
0x581 PUSH2 0x2c6
0x584 GAS
0x585 SUB
0x586 CALL
0x587 ISZERO
0x588 ISZERO
0x589 PUSH2 0x591
0x58c JUMPI
---
0x580: JUMPDEST 
0x581: V516 = 0x2c6
0x584: V517 = GAS
0x585: V518 = SUB V517 0x2c6
0x586: V519 = CALL V518 V483 0x0 V508 V509 V508 0x0
0x587: V520 = ISZERO V519
0x588: V521 = ISZERO V520
0x589: V522 = 0x591
0x58c: JUMPI 0x591 V521
---
Entry stack: [V12, 0x1f2, V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1f2, V483, 0xa9059cbb, V505]

================================

Block 0x58d
[0x58d:0x590]
---
Predecessors: [0x580]
Successors: []
---
0x58d PUSH1 0x0
0x58f DUP1
0x590 REVERT
---
0x58d: V523 = 0x0
0x590: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2, V483, 0xa9059cbb, V505]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V483, 0xa9059cbb, V505]

================================

Block 0x591
[0x591:0x5a8]
---
Predecessors: [0x580]
Successors: [0x5a9]
---
0x591 JUMPDEST
0x592 POP
0x593 POP
0x594 PUSH1 0x0
0x596 PUSH1 0x8
0x598 SSTORE
0x599 POP
0x59a PUSH1 0xa
0x59c DUP1
0x59d SLOAD
0x59e PUSH2 0xff00
0x5a1 NOT
0x5a2 AND
0x5a3 PUSH2 0x100
0x5a6 OR
0x5a7 SWAP1
0x5a8 SSTORE
---
0x591: JUMPDEST 
0x594: V524 = 0x0
0x596: V525 = 0x8
0x598: S[0x8] = 0x0
0x59a: V526 = 0xa
0x59d: V527 = S[0xa]
0x59e: V528 = 0xff00
0x5a1: V529 = NOT 0xff00
0x5a2: V530 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V527
0x5a3: V531 = 0x100
0x5a6: V532 = OR 0x100 V530
0x5a8: S[0xa] = V532
---
Entry stack: [V12, 0x1f2, V483, 0xa9059cbb, V505]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x5a9
[0x5a9:0x5a9]
---
Predecessors: [0x591]
Successors: [0x5aa]
---
0x5a9 JUMPDEST
---
0x5a9: JUMPDEST 
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x5aa
[0x5aa:0x5ab]
---
Predecessors: [0x5a9]
Successors: [0x1f2]
---
0x5aa JUMPDEST
0x5ab JUMP
---
0x5aa: JUMPDEST 
0x5ab: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ac
[0x5ac:0x5b1]
---
Predecessors: [0x34c]
Successors: [0x207]
---
0x5ac JUMPDEST
0x5ad PUSH1 0x4
0x5af SLOAD
0x5b0 DUP2
0x5b1 JUMP
---
0x5ac: JUMPDEST 
0x5ad: V533 = 0x4
0x5af: V534 = S[0x4]
0x5b1: JUMP 0x207
---
Entry stack: [V12, 0x207]
Stack pops: 1
Stack additions: [S0, V534]
Exit stack: [V12, 0x207, V534]

================================

Block 0x5b2
[0x5b2:0x5c8]
---
Predecessors: [0x371]
Successors: [0x5c9, 0x5cd]
---
0x5b2 JUMPDEST
0x5b3 PUSH1 0x0
0x5b5 SLOAD
0x5b6 CALLER
0x5b7 PUSH1 0x1
0x5b9 PUSH1 0xa0
0x5bb PUSH1 0x2
0x5bd EXP
0x5be SUB
0x5bf SWAP1
0x5c0 DUP2
0x5c1 AND
0x5c2 SWAP2
0x5c3 AND
0x5c4 EQ
0x5c5 PUSH2 0x5cd
0x5c8 JUMPI
---
0x5b2: JUMPDEST 
0x5b3: V535 = 0x0
0x5b5: V536 = S[0x0]
0x5b6: V537 = CALLER
0x5b7: V538 = 0x1
0x5b9: V539 = 0xa0
0x5bb: V540 = 0x2
0x5bd: V541 = EXP 0x2 0xa0
0x5be: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c1: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x5c3: V544 = AND V536 0xffffffffffffffffffffffffffffffffffffffff
0x5c4: V545 = EQ V544 V543
0x5c5: V546 = 0x5cd
0x5c8: JUMPI 0x5cd V545
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x5c9
[0x5c9:0x5cc]
---
Predecessors: [0x5b2]
Successors: []
---
0x5c9 PUSH1 0x0
0x5cb DUP1
0x5cc REVERT
---
0x5c9: V547 = 0x0
0x5cc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x5cd
[0x5cd:0x601]
---
Predecessors: [0x5b2]
Successors: [0x602, 0x606]
---
0x5cd JUMPDEST
0x5ce PUSH1 0x1
0x5d0 SLOAD
0x5d1 PUSH1 0x4
0x5d3 SLOAD
0x5d4 PUSH1 0x1
0x5d6 PUSH1 0xa0
0x5d8 PUSH1 0x2
0x5da EXP
0x5db SUB
0x5dc SWAP1
0x5dd SWAP2
0x5de AND
0x5df SWAP1
0x5e0 DUP1
0x5e1 ISZERO
0x5e2 PUSH2 0x8fc
0x5e5 MUL
0x5e6 SWAP1
0x5e7 PUSH1 0x40
0x5e9 MLOAD
0x5ea PUSH1 0x0
0x5ec PUSH1 0x40
0x5ee MLOAD
0x5ef DUP1
0x5f0 DUP4
0x5f1 SUB
0x5f2 DUP2
0x5f3 DUP6
0x5f4 DUP9
0x5f5 DUP9
0x5f6 CALL
0x5f7 SWAP4
0x5f8 POP
0x5f9 POP
0x5fa POP
0x5fb POP
0x5fc ISZERO
0x5fd ISZERO
0x5fe PUSH2 0x606
0x601 JUMPI
---
0x5cd: JUMPDEST 
0x5ce: V548 = 0x1
0x5d0: V549 = S[0x1]
0x5d1: V550 = 0x4
0x5d3: V551 = S[0x4]
0x5d4: V552 = 0x1
0x5d6: V553 = 0xa0
0x5d8: V554 = 0x2
0x5da: V555 = EXP 0x2 0xa0
0x5db: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5de: V557 = AND V549 0xffffffffffffffffffffffffffffffffffffffff
0x5e1: V558 = ISZERO V551
0x5e2: V559 = 0x8fc
0x5e5: V560 = MUL 0x8fc V558
0x5e7: V561 = 0x40
0x5e9: V562 = M[0x40]
0x5ea: V563 = 0x0
0x5ec: V564 = 0x40
0x5ee: V565 = M[0x40]
0x5f1: V566 = SUB V562 V565
0x5f6: V567 = CALL V560 V557 V551 V565 V566 V565 0x0
0x5fc: V568 = ISZERO V567
0x5fd: V569 = ISZERO V568
0x5fe: V570 = 0x606
0x601: JUMPI 0x606 V569
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x602
[0x602:0x605]
---
Predecessors: [0x5cd]
Successors: []
---
0x602 PUSH1 0x0
0x604 DUP1
0x605 REVERT
---
0x602: V571 = 0x0
0x605: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x606
[0x606:0x661]
---
Predecessors: [0x5cd]
Successors: [0x662, 0x666]
---
0x606 JUMPDEST
0x607 PUSH1 0x7
0x609 SLOAD
0x60a PUSH1 0x1
0x60c SLOAD
0x60d PUSH1 0x8
0x60f SLOAD
0x610 PUSH1 0x1
0x612 PUSH1 0xa0
0x614 PUSH1 0x2
0x616 EXP
0x617 SUB
0x618 SWAP3
0x619 DUP4
0x61a AND
0x61b SWAP3
0x61c PUSH4 0xa9059cbb
0x621 SWAP3
0x622 AND
0x623 SWAP1
0x624 PUSH1 0x40
0x626 MLOAD
0x627 PUSH1 0xe0
0x629 PUSH1 0x2
0x62b EXP
0x62c PUSH4 0xffffffff
0x631 DUP6
0x632 AND
0x633 MUL
0x634 DUP2
0x635 MSTORE
0x636 PUSH1 0x1
0x638 PUSH1 0xa0
0x63a PUSH1 0x2
0x63c EXP
0x63d SUB
0x63e SWAP1
0x63f SWAP3
0x640 AND
0x641 PUSH1 0x4
0x643 DUP4
0x644 ADD
0x645 MSTORE
0x646 PUSH1 0x24
0x648 DUP3
0x649 ADD
0x64a MSTORE
0x64b PUSH1 0x44
0x64d ADD
0x64e PUSH1 0x0
0x650 PUSH1 0x40
0x652 MLOAD
0x653 DUP1
0x654 DUP4
0x655 SUB
0x656 DUP2
0x657 PUSH1 0x0
0x659 DUP8
0x65a DUP1
0x65b EXTCODESIZE
0x65c ISZERO
0x65d ISZERO
0x65e PUSH2 0x666
0x661 JUMPI
---
0x606: JUMPDEST 
0x607: V572 = 0x7
0x609: V573 = S[0x7]
0x60a: V574 = 0x1
0x60c: V575 = S[0x1]
0x60d: V576 = 0x8
0x60f: V577 = S[0x8]
0x610: V578 = 0x1
0x612: V579 = 0xa0
0x614: V580 = 0x2
0x616: V581 = EXP 0x2 0xa0
0x617: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61a: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x61c: V584 = 0xa9059cbb
0x622: V585 = AND V575 0xffffffffffffffffffffffffffffffffffffffff
0x624: V586 = 0x40
0x626: V587 = M[0x40]
0x627: V588 = 0xe0
0x629: V589 = 0x2
0x62b: V590 = EXP 0x2 0xe0
0x62c: V591 = 0xffffffff
0x632: V592 = AND 0xa9059cbb 0xffffffff
0x633: V593 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x635: M[V587] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x636: V594 = 0x1
0x638: V595 = 0xa0
0x63a: V596 = 0x2
0x63c: V597 = EXP 0x2 0xa0
0x63d: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x640: V599 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x641: V600 = 0x4
0x644: V601 = ADD V587 0x4
0x645: M[V601] = V599
0x646: V602 = 0x24
0x649: V603 = ADD V587 0x24
0x64a: M[V603] = V577
0x64b: V604 = 0x44
0x64d: V605 = ADD 0x44 V587
0x64e: V606 = 0x0
0x650: V607 = 0x40
0x652: V608 = M[0x40]
0x655: V609 = SUB V605 V608
0x657: V610 = 0x0
0x65b: V611 = EXTCODESIZE V583
0x65c: V612 = ISZERO V611
0x65d: V613 = ISZERO V612
0x65e: V614 = 0x666
0x661: JUMPI 0x666 V613
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: [V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]
Exit stack: [V12, 0x1f2, V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]

================================

Block 0x662
[0x662:0x665]
---
Predecessors: [0x606]
Successors: []
---
0x662 PUSH1 0x0
0x664 DUP1
0x665 REVERT
---
0x662: V615 = 0x0
0x665: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2, V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]

================================

Block 0x666
[0x666:0x672]
---
Predecessors: [0x606]
Successors: [0x673, 0x677]
---
0x666 JUMPDEST
0x667 PUSH2 0x2c6
0x66a GAS
0x66b SUB
0x66c CALL
0x66d ISZERO
0x66e ISZERO
0x66f PUSH2 0x677
0x672 JUMPI
---
0x666: JUMPDEST 
0x667: V616 = 0x2c6
0x66a: V617 = GAS
0x66b: V618 = SUB V617 0x2c6
0x66c: V619 = CALL V618 V583 0x0 V608 V609 V608 0x0
0x66d: V620 = ISZERO V619
0x66e: V621 = ISZERO V620
0x66f: V622 = 0x677
0x672: JUMPI 0x677 V621
---
Entry stack: [V12, 0x1f2, V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1f2, V583, 0xa9059cbb, V605]

================================

Block 0x673
[0x673:0x676]
---
Predecessors: [0x666]
Successors: []
---
0x673 PUSH1 0x0
0x675 DUP1
0x676 REVERT
---
0x673: V623 = 0x0
0x676: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2, V583, 0xa9059cbb, V605]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V583, 0xa9059cbb, V605]

================================

Block 0x677
[0x677:0x693]
---
Predecessors: [0x666]
Successors: [0x694]
---
0x677 JUMPDEST
0x678 POP
0x679 POP
0x67a PUSH1 0x0
0x67c PUSH1 0x4
0x67e DUP2
0x67f SWAP1
0x680 SSTORE
0x681 PUSH1 0x8
0x683 SSTORE
0x684 POP
0x685 PUSH1 0xa
0x687 DUP1
0x688 SLOAD
0x689 PUSH2 0xff00
0x68c NOT
0x68d AND
0x68e PUSH2 0x100
0x691 OR
0x692 SWAP1
0x693 SSTORE
---
0x677: JUMPDEST 
0x67a: V624 = 0x0
0x67c: V625 = 0x4
0x680: S[0x4] = 0x0
0x681: V626 = 0x8
0x683: S[0x8] = 0x0
0x685: V627 = 0xa
0x688: V628 = S[0xa]
0x689: V629 = 0xff00
0x68c: V630 = NOT 0xff00
0x68d: V631 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V628
0x68e: V632 = 0x100
0x691: V633 = OR 0x100 V631
0x693: S[0xa] = V633
---
Entry stack: [V12, 0x1f2, V583, 0xa9059cbb, V605]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x694
[0x694:0x694]
---
Predecessors: [0x677]
Successors: [0x695]
---
0x694 JUMPDEST
---
0x694: JUMPDEST 
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x695
[0x695:0x696]
---
Predecessors: [0x694]
Successors: [0x1f2]
---
0x695 JUMPDEST
0x696 JUMP
---
0x695: JUMPDEST 
0x696: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x697
[0x697:0x6ad]
---
Predecessors: [0x386]
Successors: [0x6ae, 0x6b2]
---
0x697 JUMPDEST
0x698 PUSH1 0x0
0x69a SLOAD
0x69b CALLER
0x69c PUSH1 0x1
0x69e PUSH1 0xa0
0x6a0 PUSH1 0x2
0x6a2 EXP
0x6a3 SUB
0x6a4 SWAP1
0x6a5 DUP2
0x6a6 AND
0x6a7 SWAP2
0x6a8 AND
0x6a9 EQ
0x6aa PUSH2 0x6b2
0x6ad JUMPI
---
0x697: JUMPDEST 
0x698: V634 = 0x0
0x69a: V635 = S[0x0]
0x69b: V636 = CALLER
0x69c: V637 = 0x1
0x69e: V638 = 0xa0
0x6a0: V639 = 0x2
0x6a2: V640 = EXP 0x2 0xa0
0x6a3: V641 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a6: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0x6a8: V643 = AND V635 0xffffffffffffffffffffffffffffffffffffffff
0x6a9: V644 = EQ V643 V642
0x6aa: V645 = 0x6b2
0x6ad: JUMPI 0x6b2 V644
---
Entry stack: [V12, 0x1f2, V320]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V320]

================================

Block 0x6ae
[0x6ae:0x6b1]
---
Predecessors: [0x697]
Successors: []
---
0x6ae PUSH1 0x0
0x6b0 DUP1
0x6b1 REVERT
---
0x6ae: V646 = 0x0
0x6b1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2, V320]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V320]

================================

Block 0x6b2
[0x6b2:0x6da]
---
Predecessors: [0x697]
Successors: [0x6db]
---
0x6b2 JUMPDEST
0x6b3 PUSH1 0x0
0x6b5 DUP1
0x6b6 SLOAD
0x6b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cc NOT
0x6cd AND
0x6ce PUSH1 0x1
0x6d0 PUSH1 0xa0
0x6d2 PUSH1 0x2
0x6d4 EXP
0x6d5 SUB
0x6d6 DUP4
0x6d7 AND
0x6d8 OR
0x6d9 SWAP1
0x6da SSTORE
---
0x6b2: JUMPDEST 
0x6b3: V647 = 0x0
0x6b6: V648 = S[0x0]
0x6b7: V649 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cc: V650 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6cd: V651 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V648
0x6ce: V652 = 0x1
0x6d0: V653 = 0xa0
0x6d2: V654 = 0x2
0x6d4: V655 = EXP 0x2 0xa0
0x6d5: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d7: V657 = AND V320 0xffffffffffffffffffffffffffffffffffffffff
0x6d8: V658 = OR V657 V651
0x6da: S[0x0] = V658
---
Entry stack: [V12, 0x1f2, V320]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1f2, V320]

================================

Block 0x6db
[0x6db:0x6db]
---
Predecessors: [0x6b2, 0x6e5, 0x7e6, 0x81f]
Successors: [0x6dc]
---
0x6db JUMPDEST
---
0x6db: JUMPDEST 
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x6dc
[0x6dc:0x6de]
---
Predecessors: [0x6db]
Successors: [0x1f2]
---
0x6dc JUMPDEST
0x6dd POP
0x6de JUMP
---
0x6dc: JUMPDEST 
0x6de: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x6df
[0x6df:0x6e4]
---
Predecessors: [0x3a7]
Successors: [0x207]
---
0x6df JUMPDEST
0x6e0 PUSH1 0x6
0x6e2 SLOAD
0x6e3 DUP2
0x6e4 JUMP
---
0x6df: JUMPDEST 
0x6e0: V659 = 0x6
0x6e2: V660 = S[0x6]
0x6e4: JUMP 0x207
---
Entry stack: [V12, 0x207]
Stack pops: 1
Stack additions: [S0, V660]
Exit stack: [V12, 0x207, V660]

================================

Block 0x6e5
[0x6e5:0x6f1]
---
Predecessors: [0x3cc]
Successors: [0x6db, 0x6f2]
---
0x6e5 JUMPDEST
0x6e6 PUSH1 0x5
0x6e8 SLOAD
0x6e9 PUSH1 0x0
0x6eb SWAP1
0x6ec TIMESTAMP
0x6ed LT
0x6ee PUSH2 0x6db
0x6f1 JUMPI
---
0x6e5: JUMPDEST 
0x6e6: V661 = 0x5
0x6e8: V662 = S[0x5]
0x6e9: V663 = 0x0
0x6ec: V664 = TIMESTAMP
0x6ed: V665 = LT V664 V662
0x6ee: V666 = 0x6db
0x6f1: JUMPI 0x6db V665
---
Entry stack: [V12, 0x1f2]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1f2, 0x0]

================================

Block 0x6f2
[0x6f2:0x6fd]
---
Predecessors: [0x6e5]
Successors: [0x6fe, 0x7c4]
---
0x6f2 PUSH1 0xa
0x6f4 SLOAD
0x6f5 PUSH1 0xff
0x6f7 AND
0x6f8 ISZERO
0x6f9 ISZERO
0x6fa PUSH2 0x7c4
0x6fd JUMPI
---
0x6f2: V667 = 0xa
0x6f4: V668 = S[0xa]
0x6f5: V669 = 0xff
0x6f7: V670 = AND 0xff V668
0x6f8: V671 = ISZERO V670
0x6f9: V672 = ISZERO V671
0x6fa: V673 = 0x7c4
0x6fd: JUMPI 0x7c4 V672
---
Entry stack: [V12, 0x1f2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, 0x0]

================================

Block 0x6fe
[0x6fe:0x724]
---
Predecessors: [0x6f2]
Successors: [0x725, 0x7c4]
---
0x6fe POP
0x6ff PUSH1 0x1
0x701 PUSH1 0xa0
0x703 PUSH1 0x2
0x705 EXP
0x706 SUB
0x707 CALLER
0x708 AND
0x709 PUSH1 0x0
0x70b SWAP1
0x70c DUP2
0x70d MSTORE
0x70e PUSH1 0x9
0x710 PUSH1 0x20
0x712 MSTORE
0x713 PUSH1 0x40
0x715 DUP2
0x716 SHA3
0x717 DUP1
0x718 SLOAD
0x719 SWAP1
0x71a DUP3
0x71b SWAP1
0x71c SSTORE
0x71d SWAP1
0x71e DUP2
0x71f GT
0x720 ISZERO
0x721 PUSH2 0x7c4
0x724 JUMPI
---
0x6ff: V674 = 0x1
0x701: V675 = 0xa0
0x703: V676 = 0x2
0x705: V677 = EXP 0x2 0xa0
0x706: V678 = SUB 0x10000000000000000000000000000000000000000 0x1
0x707: V679 = CALLER
0x708: V680 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x709: V681 = 0x0
0x70d: M[0x0] = V680
0x70e: V682 = 0x9
0x710: V683 = 0x20
0x712: M[0x20] = 0x9
0x713: V684 = 0x40
0x716: V685 = SHA3 0x0 0x40
0x718: V686 = S[V685]
0x71c: S[V685] = 0x0
0x71f: V687 = GT V686 0x0
0x720: V688 = ISZERO V687
0x721: V689 = 0x7c4
0x724: JUMPI 0x7c4 V688
---
Entry stack: [V12, 0x1f2, 0x0]
Stack pops: 1
Stack additions: [V686]
Exit stack: [V12, 0x1f2, V686]

================================

Block 0x725
[0x725:0x74f]
---
Predecessors: [0x6fe]
Successors: [0x750, 0x7a8]
---
0x725 PUSH1 0x1
0x727 PUSH1 0xa0
0x729 PUSH1 0x2
0x72b EXP
0x72c SUB
0x72d CALLER
0x72e AND
0x72f DUP2
0x730 ISZERO
0x731 PUSH2 0x8fc
0x734 MUL
0x735 DUP3
0x736 PUSH1 0x40
0x738 MLOAD
0x739 PUSH1 0x0
0x73b PUSH1 0x40
0x73d MLOAD
0x73e DUP1
0x73f DUP4
0x740 SUB
0x741 DUP2
0x742 DUP6
0x743 DUP9
0x744 DUP9
0x745 CALL
0x746 SWAP4
0x747 POP
0x748 POP
0x749 POP
0x74a POP
0x74b ISZERO
0x74c PUSH2 0x7a8
0x74f JUMPI
---
0x725: V690 = 0x1
0x727: V691 = 0xa0
0x729: V692 = 0x2
0x72b: V693 = EXP 0x2 0xa0
0x72c: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72d: V695 = CALLER
0x72e: V696 = AND V695 0xffffffffffffffffffffffffffffffffffffffff
0x730: V697 = ISZERO V686
0x731: V698 = 0x8fc
0x734: V699 = MUL 0x8fc V697
0x736: V700 = 0x40
0x738: V701 = M[0x40]
0x739: V702 = 0x0
0x73b: V703 = 0x40
0x73d: V704 = M[0x40]
0x740: V705 = SUB V701 V704
0x745: V706 = CALL V699 V696 V686 V704 V705 V704 0x0
0x74b: V707 = ISZERO V706
0x74c: V708 = 0x7a8
0x74f: JUMPI 0x7a8 V707
---
Entry stack: [V12, 0x1f2, V686]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1f2, V686]

================================

Block 0x750
[0x750:0x7a7]
---
Predecessors: [0x725]
Successors: [0x7c4]
---
0x750 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x771 CALLER
0x772 DUP3
0x773 PUSH1 0x0
0x775 PUSH1 0x40
0x777 MLOAD
0x778 PUSH1 0x1
0x77a PUSH1 0xa0
0x77c PUSH1 0x2
0x77e EXP
0x77f SUB
0x780 SWAP1
0x781 SWAP4
0x782 AND
0x783 DUP4
0x784 MSTORE
0x785 PUSH1 0x20
0x787 DUP4
0x788 ADD
0x789 SWAP2
0x78a SWAP1
0x78b SWAP2
0x78c MSTORE
0x78d ISZERO
0x78e ISZERO
0x78f PUSH1 0x40
0x791 DUP1
0x792 DUP4
0x793 ADD
0x794 SWAP2
0x795 SWAP1
0x796 SWAP2
0x797 MSTORE
0x798 PUSH1 0x60
0x79a SWAP1
0x79b SWAP2
0x79c ADD
0x79d SWAP1
0x79e MLOAD
0x79f DUP1
0x7a0 SWAP2
0x7a1 SUB
0x7a2 SWAP1
0x7a3 LOG1
0x7a4 PUSH2 0x7c4
0x7a7 JUMP
---
0x750: V709 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x771: V710 = CALLER
0x773: V711 = 0x0
0x775: V712 = 0x40
0x777: V713 = M[0x40]
0x778: V714 = 0x1
0x77a: V715 = 0xa0
0x77c: V716 = 0x2
0x77e: V717 = EXP 0x2 0xa0
0x77f: V718 = SUB 0x10000000000000000000000000000000000000000 0x1
0x782: V719 = AND V710 0xffffffffffffffffffffffffffffffffffffffff
0x784: M[V713] = V719
0x785: V720 = 0x20
0x788: V721 = ADD V713 0x20
0x78c: M[V721] = V686
0x78d: V722 = ISZERO 0x0
0x78e: V723 = ISZERO 0x1
0x78f: V724 = 0x40
0x793: V725 = ADD V713 0x40
0x797: M[V725] = 0x0
0x798: V726 = 0x60
0x79c: V727 = ADD V713 0x60
0x79e: V728 = M[0x40]
0x7a1: V729 = SUB V727 V728
0x7a3: LOG V728 V729 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x7a4: V730 = 0x7c4
0x7a7: JUMP 0x7c4
---
Entry stack: [V12, 0x1f2, V686]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1f2, V686]

================================

Block 0x7a8
[0x7a8:0x7c3]
---
Predecessors: [0x725]
Successors: [0x7c4]
---
0x7a8 JUMPDEST
0x7a9 PUSH1 0x1
0x7ab PUSH1 0xa0
0x7ad PUSH1 0x2
0x7af EXP
0x7b0 SUB
0x7b1 CALLER
0x7b2 AND
0x7b3 PUSH1 0x0
0x7b5 SWAP1
0x7b6 DUP2
0x7b7 MSTORE
0x7b8 PUSH1 0x9
0x7ba PUSH1 0x20
0x7bc MSTORE
0x7bd PUSH1 0x40
0x7bf SWAP1
0x7c0 SHA3
0x7c1 DUP2
0x7c2 SWAP1
0x7c3 SSTORE
---
0x7a8: JUMPDEST 
0x7a9: V731 = 0x1
0x7ab: V732 = 0xa0
0x7ad: V733 = 0x2
0x7af: V734 = EXP 0x2 0xa0
0x7b0: V735 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b1: V736 = CALLER
0x7b2: V737 = AND V736 0xffffffffffffffffffffffffffffffffffffffff
0x7b3: V738 = 0x0
0x7b7: M[0x0] = V737
0x7b8: V739 = 0x9
0x7ba: V740 = 0x20
0x7bc: M[0x20] = 0x9
0x7bd: V741 = 0x40
0x7c0: V742 = SHA3 0x0 0x40
0x7c3: S[V742] = V686
---
Entry stack: [V12, 0x1f2, V686]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1f2, V686]

================================

Block 0x7c4
[0x7c4:0x7c4]
---
Predecessors: [0x6f2, 0x6fe, 0x750, 0x7a8]
Successors: [0x7c5]
---
0x7c4 JUMPDEST
---
0x7c4: JUMPDEST 
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x7c5
[0x7c5:0x7c5]
---
Predecessors: [0x7c4]
Successors: [0x7c6]
---
0x7c5 JUMPDEST
---
0x7c5: JUMPDEST 
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x7c6
[0x7c6:0x7d2]
---
Predecessors: [0x7c5]
Successors: [0x7d3, 0x7e6]
---
0x7c6 JUMPDEST
0x7c7 PUSH1 0xa
0x7c9 SLOAD
0x7ca PUSH1 0xff
0x7cc AND
0x7cd DUP1
0x7ce ISZERO
0x7cf PUSH2 0x7e6
0x7d2 JUMPI
---
0x7c6: JUMPDEST 
0x7c7: V743 = 0xa
0x7c9: V744 = S[0xa]
0x7ca: V745 = 0xff
0x7cc: V746 = AND 0xff V744
0x7ce: V747 = ISZERO V746
0x7cf: V748 = 0x7e6
0x7d2: JUMPI 0x7e6 V747
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: [V746]
Exit stack: [V12, 0x1f2, S0, V746]

================================

Block 0x7d3
[0x7d3:0x7e5]
---
Predecessors: [0x7c6]
Successors: [0x7e6]
---
0x7d3 POP
0x7d4 PUSH1 0x1
0x7d6 SLOAD
0x7d7 CALLER
0x7d8 PUSH1 0x1
0x7da PUSH1 0xa0
0x7dc PUSH1 0x2
0x7de EXP
0x7df SUB
0x7e0 SWAP1
0x7e1 DUP2
0x7e2 AND
0x7e3 SWAP2
0x7e4 AND
0x7e5 EQ
---
0x7d4: V749 = 0x1
0x7d6: V750 = S[0x1]
0x7d7: V751 = CALLER
0x7d8: V752 = 0x1
0x7da: V753 = 0xa0
0x7dc: V754 = 0x2
0x7de: V755 = EXP 0x2 0xa0
0x7df: V756 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e2: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0x7e4: V758 = AND V750 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V759 = EQ V758 V757
---
Entry stack: [V12, 0x1f2, S1, V746]
Stack pops: 1
Stack additions: [V759]
Exit stack: [V12, 0x1f2, S1, V759]

================================

Block 0x7e6
[0x7e6:0x7eb]
---
Predecessors: [0x7c6, 0x7d3]
Successors: [0x6db, 0x7ec]
---
0x7e6 JUMPDEST
0x7e7 ISZERO
0x7e8 PUSH2 0x6db
0x7eb JUMPI
---
0x7e6: JUMPDEST 
0x7e7: V760 = ISZERO S0
0x7e8: V761 = 0x6db
0x7eb: JUMPI 0x6db V760
---
Entry stack: [V12, 0x1f2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1f2, S1]

================================

Block 0x7ec
[0x7ec:0x81e]
---
Predecessors: [0x7e6]
Successors: [0x81f, 0x886]
---
0x7ec PUSH1 0x1
0x7ee SLOAD
0x7ef PUSH1 0x4
0x7f1 SLOAD
0x7f2 PUSH1 0x1
0x7f4 PUSH1 0xa0
0x7f6 PUSH1 0x2
0x7f8 EXP
0x7f9 SUB
0x7fa SWAP1
0x7fb SWAP2
0x7fc AND
0x7fd SWAP1
0x7fe DUP1
0x7ff ISZERO
0x800 PUSH2 0x8fc
0x803 MUL
0x804 SWAP1
0x805 PUSH1 0x40
0x807 MLOAD
0x808 PUSH1 0x0
0x80a PUSH1 0x40
0x80c MLOAD
0x80d DUP1
0x80e DUP4
0x80f SUB
0x810 DUP2
0x811 DUP6
0x812 DUP9
0x813 DUP9
0x814 CALL
0x815 SWAP4
0x816 POP
0x817 POP
0x818 POP
0x819 POP
0x81a ISZERO
0x81b PUSH2 0x886
0x81e JUMPI
---
0x7ec: V762 = 0x1
0x7ee: V763 = S[0x1]
0x7ef: V764 = 0x4
0x7f1: V765 = S[0x4]
0x7f2: V766 = 0x1
0x7f4: V767 = 0xa0
0x7f6: V768 = 0x2
0x7f8: V769 = EXP 0x2 0xa0
0x7f9: V770 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fc: V771 = AND V763 0xffffffffffffffffffffffffffffffffffffffff
0x7ff: V772 = ISZERO V765
0x800: V773 = 0x8fc
0x803: V774 = MUL 0x8fc V772
0x805: V775 = 0x40
0x807: V776 = M[0x40]
0x808: V777 = 0x0
0x80a: V778 = 0x40
0x80c: V779 = M[0x40]
0x80f: V780 = SUB V776 V779
0x814: V781 = CALL V774 V771 V765 V779 V780 V779 0x0
0x81a: V782 = ISZERO V781
0x81b: V783 = 0x886
0x81e: JUMPI 0x886 V782
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x81f
[0x81f:0x885]
---
Predecessors: [0x7ec]
Successors: [0x6db]
---
0x81f PUSH1 0x1
0x821 SLOAD
0x822 PUSH1 0x4
0x824 SLOAD
0x825 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x846 SWAP2
0x847 PUSH1 0x1
0x849 PUSH1 0xa0
0x84b PUSH1 0x2
0x84d EXP
0x84e SUB
0x84f AND
0x850 SWAP1
0x851 PUSH1 0x0
0x853 PUSH1 0x40
0x855 MLOAD
0x856 PUSH1 0x1
0x858 PUSH1 0xa0
0x85a PUSH1 0x2
0x85c EXP
0x85d SUB
0x85e SWAP1
0x85f SWAP4
0x860 AND
0x861 DUP4
0x862 MSTORE
0x863 PUSH1 0x20
0x865 DUP4
0x866 ADD
0x867 SWAP2
0x868 SWAP1
0x869 SWAP2
0x86a MSTORE
0x86b ISZERO
0x86c ISZERO
0x86d PUSH1 0x40
0x86f DUP1
0x870 DUP4
0x871 ADD
0x872 SWAP2
0x873 SWAP1
0x874 SWAP2
0x875 MSTORE
0x876 PUSH1 0x60
0x878 SWAP1
0x879 SWAP2
0x87a ADD
0x87b SWAP1
0x87c MLOAD
0x87d DUP1
0x87e SWAP2
0x87f SUB
0x880 SWAP1
0x881 LOG1
0x882 PUSH2 0x6db
0x885 JUMP
---
0x81f: V784 = 0x1
0x821: V785 = S[0x1]
0x822: V786 = 0x4
0x824: V787 = S[0x4]
0x825: V788 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x847: V789 = 0x1
0x849: V790 = 0xa0
0x84b: V791 = 0x2
0x84d: V792 = EXP 0x2 0xa0
0x84e: V793 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84f: V794 = AND 0xffffffffffffffffffffffffffffffffffffffff V785
0x851: V795 = 0x0
0x853: V796 = 0x40
0x855: V797 = M[0x40]
0x856: V798 = 0x1
0x858: V799 = 0xa0
0x85a: V800 = 0x2
0x85c: V801 = EXP 0x2 0xa0
0x85d: V802 = SUB 0x10000000000000000000000000000000000000000 0x1
0x860: V803 = AND V794 0xffffffffffffffffffffffffffffffffffffffff
0x862: M[V797] = V803
0x863: V804 = 0x20
0x866: V805 = ADD V797 0x20
0x86a: M[V805] = V787
0x86b: V806 = ISZERO 0x0
0x86c: V807 = ISZERO 0x1
0x86d: V808 = 0x40
0x871: V809 = ADD V797 0x40
0x875: M[V809] = 0x0
0x876: V810 = 0x60
0x87a: V811 = ADD V797 0x60
0x87c: V812 = M[0x40]
0x87f: V813 = SUB V811 V812
0x881: LOG V812 V813 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x882: V814 = 0x6db
0x885: JUMP 0x6db
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x886
[0x886:0x890]
---
Predecessors: [0x7ec]
Successors: [0x891]
---
0x886 JUMPDEST
0x887 PUSH1 0xa
0x889 DUP1
0x88a SLOAD
0x88b PUSH1 0xff
0x88d NOT
0x88e AND
0x88f SWAP1
0x890 SSTORE
---
0x886: JUMPDEST 
0x887: V815 = 0xa
0x88a: V816 = S[0xa]
0x88b: V817 = 0xff
0x88d: V818 = NOT 0xff
0x88e: V819 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V816
0x890: S[0xa] = V819
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x891
[0x891:0x891]
---
Predecessors: [0x886]
Successors: [0x892]
---
0x891 JUMPDEST
---
0x891: JUMPDEST 
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x892
[0x892:0x892]
---
Predecessors: [0x891]
Successors: [0x893]
---
0x892 JUMPDEST
---
0x892: JUMPDEST 
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x893
[0x893:0x893]
---
Predecessors: [0x892]
Successors: [0x894]
---
0x893 JUMPDEST
---
0x893: JUMPDEST 
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x894
[0x894:0x894]
---
Predecessors: [0x893]
Successors: [0x895]
---
0x894 JUMPDEST
---
0x894: JUMPDEST 
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, S0]

================================

Block 0x895
[0x895:0x897]
---
Predecessors: [0x894]
Successors: [0x1f2]
---
0x895 JUMPDEST
0x896 POP
0x897 JUMP
---
0x895: JUMPDEST 
0x897: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x898
[0x898:0x8c5]
---
Predecessors: []
Successors: []
---
0x898 STOP
0x899 LOG1
0x89a PUSH6 0x627a7a723058
0x8a1 SHA3
0x8a2 MISSING 0xb4
0x8a3 EQ
0x8a4 MISSING 0xdd
0x8a5 MISSING 0x25
0x8a6 MISSING 0x4b
0x8a7 SWAP14
0x8a8 MISSING 0xc9
0x8a9 SWAP9
0x8aa ADDMOD
0x8ab MISSING 0xe4
0x8ac MISSING 0xa7
0x8ad MISSING 0x4d
0x8ae LOG1
0x8af LOG4
0x8b0 DUP4
0x8b1 MISSING 0xcf
0x8b2 MISSING 0x24
0x8b3 PUSH18 0x28c0879f5b3acd4c52c2ebd28dbf0029
---
0x898: STOP 
0x899: LOG S0 S1 S2
0x89a: V820 = 0x627a7a723058
0x8a1: V821 = SHA3 0x627a7a723058 S3
0x8a2: MISSING 0xb4
0x8a3: V822 = EQ S0 S1
0x8a4: MISSING 0xdd
0x8a5: MISSING 0x25
0x8a6: MISSING 0x4b
0x8a8: MISSING 0xc9
0x8aa: V823 = ADDMOD S9 S1 S2
0x8ab: MISSING 0xe4
0x8ac: MISSING 0xa7
0x8ad: MISSING 0x4d
0x8ae: LOG S0 S1 S2
0x8af: LOG S3 S4 S5 S6 S7 S8
0x8b1: MISSING 0xcf
0x8b2: MISSING 0x24
0x8b3: V824 = 0x28c0879f5b3acd4c52c2ebd28dbf0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V821, V822, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, V823, S3, S4, S5, S6, S7, S8, S0, S12, S9, S10, S11, S12, 0x28c0879f5b3acd4c52c2ebd28dbf0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1df
Exit block: 0x1f2
Body: 0x1df, 0x1e6, 0x1ea, 0x1f2, 0x3d6, 0x3e0, 0x3eb, 0x44c, 0x45c, 0x45d, 0x45e

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1f4
Exit block: 0x207
Body: 0x1f4, 0x1fb, 0x1ff, 0x207, 0x460

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x219
Exit block: 0x22c
Body: 0x219, 0x220, 0x224, 0x22c, 0x466

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x248
Exit block: 0x22c
Body: 0x22c, 0x248, 0x24f, 0x253, 0x475

Function 4:
Public function signature: 0x70a08231
Entry block: 0x277
Exit block: 0x207
Body: 0x207, 0x277, 0x27e, 0x282, 0x484

Function 5:
Public function signature: 0x789d6a25
Entry block: 0x2a8
Exit block: 0x207
Body: 0x207, 0x2a8, 0x2af, 0x2b3, 0x496

Function 6:
Public function signature: 0x7a3a0e84
Entry block: 0x2cd
Exit block: 0x207
Body: 0x207, 0x2cd, 0x2d4, 0x2d8, 0x49c

Function 7:
Public function signature: 0x7b3e5e7b
Entry block: 0x2f2
Exit block: 0x207
Body: 0x207, 0x2f2, 0x2f9, 0x2fd, 0x4a2

Function 8:
Public function signature: 0xb0cacbcd
Entry block: 0x317
Exit block: 0x1f2
Body: 0x1f2, 0x317, 0x31e, 0x322, 0x4a8, 0x4bf, 0x4c3, 0x4f8, 0x4fc, 0x502, 0x503

Function 9:
Public function signature: 0xb3bf5ad4
Entry block: 0x32c
Exit block: 0x1f2
Body: 0x1f2, 0x32c, 0x333, 0x337, 0x505, 0x51c, 0x520, 0x57c, 0x580, 0x58d, 0x591, 0x5a9, 0x5aa

Function 10:
Public function signature: 0xe011ac87
Entry block: 0x341
Exit block: 0x207
Body: 0x207, 0x341, 0x348, 0x34c, 0x5ac

Function 11:
Public function signature: 0xee98aee6
Entry block: 0x366
Exit block: 0x1f2
Body: 0x1f2, 0x366, 0x36d, 0x371, 0x5b2, 0x5c9, 0x5cd, 0x602, 0x606, 0x662, 0x666, 0x673, 0x677, 0x694, 0x695

Function 12:
Public function signature: 0xf2fde38b
Entry block: 0x37b
Exit block: 0x1f2
Body: 0x1f2, 0x37b, 0x382, 0x386, 0x697, 0x6ae, 0x6b2, 0x6db, 0x6dc

Function 13:
Public function signature: 0xf856d605
Entry block: 0x39c
Exit block: 0x207
Body: 0x207, 0x39c, 0x3a3, 0x3a7, 0x6df

Function 14:
Public function signature: 0xfd6b7ef8
Entry block: 0x3c1
Exit block: 0x1f2
Body: 0x1f2, 0x3c1, 0x3c8, 0x3cc, 0x6db, 0x6dc, 0x6e5, 0x6f2, 0x6fe, 0x725, 0x750, 0x7a8, 0x7c4, 0x7c5, 0x7c6, 0x7d3, 0x7e6, 0x7ec, 0x81f, 0x886, 0x891, 0x892, 0x893, 0x894, 0x895

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x1dc
Body: 0xbf, 0xc0, 0xd4, 0xd8, 0x160, 0x164, 0x171, 0x175, 0x1dc

