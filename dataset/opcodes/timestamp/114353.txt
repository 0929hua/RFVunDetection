Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x74]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x74
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x74
0xa: JUMPI 0x74 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x230]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x41c0e1b5
0x34 EQ
0x35 PUSH2 0x230
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x41c0e1b5
0x34: V10 = EQ 0x41c0e1b5 V8
0x35: V11 = 0x230
0x38: JUMPI 0x230 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x23f]
---
0x39 DUP1
0x3a PUSH4 0x67e404ce
0x3f EQ
0x40 PUSH2 0x23f
0x43 JUMPI
---
0x3a: V12 = 0x67e404ce
0x3f: V13 = EQ 0x67e404ce V8
0x40: V14 = 0x23f
0x43: JUMPI 0x23f V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x278]
---
0x44 DUP1
0x45 PUSH4 0x70dea79a
0x4a EQ
0x4b PUSH2 0x278
0x4e JUMPI
---
0x45: V15 = 0x70dea79a
0x4a: V16 = EQ 0x70dea79a V8
0x4b: V17 = 0x278
0x4e: JUMPI 0x278 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x29b]
---
0x4f DUP1
0x50 PUSH4 0x8da5cb5b
0x55 EQ
0x56 PUSH2 0x29b
0x59 JUMPI
---
0x50: V18 = 0x8da5cb5b
0x55: V19 = EQ 0x8da5cb5b V8
0x56: V20 = 0x29b
0x59: JUMPI 0x29b V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x2d4]
---
0x5a DUP1
0x5b PUSH4 0xaa8c217c
0x60 EQ
0x61 PUSH2 0x2d4
0x64 JUMPI
---
0x5b: V21 = 0xaa8c217c
0x60: V22 = EQ 0xaa8c217c V8
0x61: V23 = 0x2d4
0x64: JUMPI 0x2d4 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x2f7]
---
0x65 DUP1
0x66 PUSH4 0xcf309012
0x6b EQ
0x6c PUSH2 0x2f7
0x6f JUMPI
---
0x66: V24 = 0xcf309012
0x6b: V25 = EQ 0xcf309012 V8
0x6c: V26 = 0x2f7
0x6f: JUMPI 0x2f7 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x73]
---
Predecessors: [0x65]
Successors: [0x74]
---
0x70 PUSH2 0x74
0x73 JUMP
---
0x70: V27 = 0x74
0x73: JUMP 0x74
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x74
[0x74:0x77]
---
Predecessors: [0x0, 0x70]
Successors: [0x78]
---
0x74 JUMPDEST
0x75 PUSH2 0x22e
---
0x74: JUMPDEST 
0x75: V28 = 0x22e
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x22e]
Exit stack: [V8, 0x22e]

================================

Block 0x78
[0x78:0x90]
---
Predecessors: [0x74]
Successors: [0x91, 0x13a]
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b PUSH1 0x1
0x7d PUSH1 0x14
0x7f SWAP1
0x80 SLOAD
0x81 SWAP1
0x82 PUSH2 0x100
0x85 EXP
0x86 SWAP1
0x87 DIV
0x88 PUSH1 0xff
0x8a AND
0x8b EQ
0x8c ISZERO
0x8d PUSH2 0x13a
0x90 JUMPI
---
0x78: JUMPDEST 
0x79: V29 = 0x0
0x7b: V30 = 0x1
0x7d: V31 = 0x14
0x80: V32 = S[0x1]
0x82: V33 = 0x100
0x85: V34 = EXP 0x100 0x14
0x87: V35 = DIV V32 0x10000000000000000000000000000000000000000
0x88: V36 = 0xff
0x8a: V37 = AND 0xff V35
0x8b: V38 = EQ V37 0x0
0x8c: V39 = ISZERO V38
0x8d: V40 = 0x13a
0x90: JUMPI 0x13a V39
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0x91
[0x91:0xa0]
---
Predecessors: [0x78]
Successors: [0xa1, 0xd8]
---
0x91 PUSH8 0xde0b6b3a7640000
0x9a CALLVALUE
0x9b LT
0x9c ISZERO
0x9d PUSH2 0xd8
0xa0 JUMPI
---
0x91: V41 = 0xde0b6b3a7640000
0x9a: V42 = CALLVALUE
0x9b: V43 = LT V42 0xde0b6b3a7640000
0x9c: V44 = ISZERO V43
0x9d: V45 = 0xd8
0xa0: JUMPI 0xd8 V44
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0xa1
[0xa1:0xd7]
---
Predecessors: [0x91]
Successors: [0x22c]
---
0xa1 CALLER
0xa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7 AND
0xb8 PUSH1 0x0
0xba CALLVALUE
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf SWAP1
0xc0 POP
0xc1 PUSH1 0x0
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 DUP1
0xc7 DUP4
0xc8 SUB
0xc9 DUP2
0xca DUP6
0xcb DUP9
0xcc DUP9
0xcd CALL
0xce SWAP4
0xcf POP
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 PUSH2 0x22c
0xd7 JUMP
---
0xa1: V46 = CALLER
0xa2: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xb8: V49 = 0x0
0xba: V50 = CALLVALUE
0xbb: V51 = 0x40
0xbd: V52 = M[0x40]
0xc1: V53 = 0x0
0xc3: V54 = 0x40
0xc5: V55 = M[0x40]
0xc8: V56 = SUB V52 V55
0xcd: V57 = CALL 0x0 V48 V50 V55 V56 V55 0x0
0xd4: V58 = 0x22c
0xd7: JUMP 0x22c
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0xd8
[0xd8:0x139]
---
Predecessors: [0x91]
Successors: [0x22b]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda PUSH1 0x2
0xdc PUSH1 0x0
0xde POP
0xdf DUP2
0xe0 SWAP1
0xe1 SSTORE
0xe2 POP
0xe3 CALLER
0xe4 PUSH1 0x0
0xe6 PUSH1 0x0
0xe8 PUSH2 0x100
0xeb EXP
0xec DUP2
0xed SLOAD
0xee DUP2
0xef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x104 MUL
0x105 NOT
0x106 AND
0x107 SWAP1
0x108 DUP4
0x109 MUL
0x10a OR
0x10b SWAP1
0x10c SSTORE
0x10d POP
0x10e PUSH1 0x1
0x110 PUSH1 0x1
0x112 PUSH1 0x14
0x114 PUSH2 0x100
0x117 EXP
0x118 DUP2
0x119 SLOAD
0x11a DUP2
0x11b PUSH1 0xff
0x11d MUL
0x11e NOT
0x11f AND
0x120 SWAP1
0x121 DUP4
0x122 MUL
0x123 OR
0x124 SWAP1
0x125 SSTORE
0x126 POP
0x127 PUSH3 0x127500
0x12b TIMESTAMP
0x12c ADD
0x12d PUSH1 0x3
0x12f PUSH1 0x0
0x131 POP
0x132 DUP2
0x133 SWAP1
0x134 SSTORE
0x135 POP
0x136 PUSH2 0x22b
0x139 JUMP
---
0xd8: JUMPDEST 
0xd9: V59 = CALLVALUE
0xda: V60 = 0x2
0xdc: V61 = 0x0
0xe1: S[0x2] = V59
0xe3: V62 = CALLER
0xe4: V63 = 0x0
0xe6: V64 = 0x0
0xe8: V65 = 0x100
0xeb: V66 = EXP 0x100 0x0
0xed: V67 = S[0x0]
0xef: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x104: V69 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x105: V70 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x106: V71 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V67
0x109: V72 = MUL V62 0x1
0x10a: V73 = OR V72 V71
0x10c: S[0x0] = V73
0x10e: V74 = 0x1
0x110: V75 = 0x1
0x112: V76 = 0x14
0x114: V77 = 0x100
0x117: V78 = EXP 0x100 0x14
0x119: V79 = S[0x1]
0x11b: V80 = 0xff
0x11d: V81 = MUL 0xff 0x10000000000000000000000000000000000000000
0x11e: V82 = NOT 0xff0000000000000000000000000000000000000000
0x11f: V83 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V79
0x122: V84 = MUL 0x1 0x10000000000000000000000000000000000000000
0x123: V85 = OR 0x10000000000000000000000000000000000000000 V83
0x125: S[0x1] = V85
0x127: V86 = 0x127500
0x12b: V87 = TIMESTAMP
0x12c: V88 = ADD V87 0x127500
0x12d: V89 = 0x3
0x12f: V90 = 0x0
0x134: S[0x3] = V88
0x136: V91 = 0x22b
0x139: JUMP 0x22b
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0x13a
[0x13a:0x191]
---
Predecessors: [0x78]
Successors: [0x192, 0x1a3]
---
0x13a JUMPDEST
0x13b PUSH1 0x0
0x13d PUSH1 0x0
0x13f SWAP1
0x140 SLOAD
0x141 SWAP1
0x142 PUSH2 0x100
0x145 EXP
0x146 SWAP1
0x147 DIV
0x148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d AND
0x15e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x173 AND
0x174 CALLER
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b EQ
0x18c DUP1
0x18d ISZERO
0x18e PUSH2 0x1a3
0x191 JUMPI
---
0x13a: JUMPDEST 
0x13b: V92 = 0x0
0x13d: V93 = 0x0
0x140: V94 = S[0x0]
0x142: V95 = 0x100
0x145: V96 = EXP 0x100 0x0
0x147: V97 = DIV V94 0x1
0x148: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x15e: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x173: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x174: V102 = CALLER
0x175: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x18b: V105 = EQ V104 V101
0x18d: V106 = ISZERO V105
0x18e: V107 = 0x1a3
0x191: JUMPI 0x1a3 V106
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V8, 0x22e, V105]

================================

Block 0x192
[0x192:0x1a2]
---
Predecessors: [0x13a]
Successors: [0x1a3]
---
0x192 POP
0x193 PUSH1 0x1
0x195 PUSH1 0x14
0x197 SWAP1
0x198 SLOAD
0x199 SWAP1
0x19a PUSH2 0x100
0x19d EXP
0x19e SWAP1
0x19f DIV
0x1a0 PUSH1 0xff
0x1a2 AND
---
0x193: V108 = 0x1
0x195: V109 = 0x14
0x198: V110 = S[0x1]
0x19a: V111 = 0x100
0x19d: V112 = EXP 0x100 0x14
0x19f: V113 = DIV V110 0x10000000000000000000000000000000000000000
0x1a0: V114 = 0xff
0x1a2: V115 = AND 0xff V113
---
Entry stack: [V8, 0x22e, V105]
Stack pops: 1
Stack additions: [V115]
Exit stack: [V8, 0x22e, V115]

================================

Block 0x1a3
[0x1a3:0x1a8]
---
Predecessors: [0x13a, 0x192]
Successors: [0x1a9, 0x22a]
---
0x1a3 JUMPDEST
0x1a4 ISZERO
0x1a5 PUSH2 0x22a
0x1a8 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V116 = ISZERO S0
0x1a5: V117 = 0x22a
0x1a8: JUMPI 0x22a V116
---
Entry stack: [V8, 0x22e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0x1a9
[0x1a9:0x1b5]
---
Predecessors: [0x1a3]
Successors: [0x1b6, 0x229]
---
0x1a9 PUSH1 0x3
0x1ab PUSH1 0x0
0x1ad POP
0x1ae SLOAD
0x1af TIMESTAMP
0x1b0 LT
0x1b1 ISZERO
0x1b2 PUSH2 0x229
0x1b5 JUMPI
---
0x1a9: V118 = 0x3
0x1ab: V119 = 0x0
0x1ae: V120 = S[0x3]
0x1af: V121 = TIMESTAMP
0x1b0: V122 = LT V121 V120
0x1b1: V123 = ISZERO V122
0x1b2: V124 = 0x229
0x1b5: JUMPI 0x229 V123
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0x1b6
[0x1b6:0x228]
---
Predecessors: [0x1a9]
Successors: [0x229]
---
0x1b6 PUSH1 0x0
0x1b8 PUSH1 0x0
0x1ba SWAP1
0x1bb SLOAD
0x1bc SWAP1
0x1bd PUSH2 0x100
0x1c0 EXP
0x1c1 SWAP1
0x1c2 DIV
0x1c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d8 AND
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef PUSH1 0x0
0x1f1 PUSH1 0x2
0x1f3 PUSH1 0x0
0x1f5 POP
0x1f6 SLOAD
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb SWAP1
0x1fc POP
0x1fd PUSH1 0x0
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 DUP1
0x203 DUP4
0x204 SUB
0x205 DUP2
0x206 DUP6
0x207 DUP9
0x208 DUP9
0x209 CALL
0x20a SWAP4
0x20b POP
0x20c POP
0x20d POP
0x20e POP
0x20f POP
0x210 PUSH1 0x0
0x212 PUSH1 0x1
0x214 PUSH1 0x14
0x216 PUSH2 0x100
0x219 EXP
0x21a DUP2
0x21b SLOAD
0x21c DUP2
0x21d PUSH1 0xff
0x21f MUL
0x220 NOT
0x221 AND
0x222 SWAP1
0x223 DUP4
0x224 MUL
0x225 OR
0x226 SWAP1
0x227 SSTORE
0x228 POP
---
0x1b6: V125 = 0x0
0x1b8: V126 = 0x0
0x1bb: V127 = S[0x0]
0x1bd: V128 = 0x100
0x1c0: V129 = EXP 0x100 0x0
0x1c2: V130 = DIV V127 0x1
0x1c3: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x1d9: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x1ef: V135 = 0x0
0x1f1: V136 = 0x2
0x1f3: V137 = 0x0
0x1f6: V138 = S[0x2]
0x1f7: V139 = 0x40
0x1f9: V140 = M[0x40]
0x1fd: V141 = 0x0
0x1ff: V142 = 0x40
0x201: V143 = M[0x40]
0x204: V144 = SUB V140 V143
0x209: V145 = CALL 0x0 V134 V138 V143 V144 V143 0x0
0x210: V146 = 0x0
0x212: V147 = 0x1
0x214: V148 = 0x14
0x216: V149 = 0x100
0x219: V150 = EXP 0x100 0x14
0x21b: V151 = S[0x1]
0x21d: V152 = 0xff
0x21f: V153 = MUL 0xff 0x10000000000000000000000000000000000000000
0x220: V154 = NOT 0xff0000000000000000000000000000000000000000
0x221: V155 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V151
0x224: V156 = MUL 0x0 0x10000000000000000000000000000000000000000
0x225: V157 = OR 0x0 V155
0x227: S[0x1] = V157
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0x229
[0x229:0x229]
---
Predecessors: [0x1a9, 0x1b6]
Successors: [0x22a]
---
0x229 JUMPDEST
---
0x229: JUMPDEST 
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0x22a
[0x22a:0x22a]
---
Predecessors: [0x1a3, 0x229]
Successors: [0x22b]
---
0x22a JUMPDEST
---
0x22a: JUMPDEST 
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0x22b
[0x22b:0x22b]
---
Predecessors: [0xd8, 0x22a]
Successors: [0x22c]
---
0x22b JUMPDEST
---
0x22b: JUMPDEST 
---
Entry stack: [V8, 0x22e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22e]

================================

Block 0x22c
[0x22c:0x22d]
---
Predecessors: [0xa1, 0x22b]
Successors: [0x22e]
---
0x22c JUMPDEST
0x22d JUMP
---
0x22c: JUMPDEST 
0x22d: JUMP 0x22e
---
Entry stack: [V8, 0x22e]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x22e
[0x22e:0x22f]
---
Predecessors: [0x22c]
Successors: []
---
0x22e JUMPDEST
0x22f STOP
---
0x22e: JUMPDEST 
0x22f: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x230
[0x230:0x23c]
---
Predecessors: [0xb]
Successors: [0x38b]
---
0x230 JUMPDEST
0x231 PUSH2 0x23d
0x234 PUSH1 0x4
0x236 DUP1
0x237 POP
0x238 POP
0x239 PUSH2 0x38b
0x23c JUMP
---
0x230: JUMPDEST 
0x231: V158 = 0x23d
0x234: V159 = 0x4
0x239: V160 = 0x38b
0x23c: JUMP 0x38b
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V8, 0x23d]

================================

Block 0x23d
[0x23d:0x23e]
---
Predecessors: [0x41d]
Successors: []
---
0x23d JUMPDEST
0x23e STOP
---
0x23d: JUMPDEST 
0x23e: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x23f
[0x23f:0x24b]
---
Predecessors: [0x39]
Successors: [0x31a]
---
0x23f JUMPDEST
0x240 PUSH2 0x24c
0x243 PUSH1 0x4
0x245 DUP1
0x246 POP
0x247 POP
0x248 PUSH2 0x31a
0x24b JUMP
---
0x23f: JUMPDEST 
0x240: V161 = 0x24c
0x243: V162 = 0x4
0x248: V163 = 0x31a
0x24b: JUMP 0x31a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x24c]
Exit stack: [V8, 0x24c]

================================

Block 0x24c
[0x24c:0x277]
---
Predecessors: [0x31a]
Successors: []
---
0x24c JUMPDEST
0x24d PUSH1 0x40
0x24f MLOAD
0x250 DUP1
0x251 DUP3
0x252 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x267 AND
0x268 DUP2
0x269 MSTORE
0x26a PUSH1 0x20
0x26c ADD
0x26d SWAP2
0x26e POP
0x26f POP
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 SWAP2
0x275 SUB
0x276 SWAP1
0x277 RETURN
---
0x24c: JUMPDEST 
0x24d: V164 = 0x40
0x24f: V165 = M[0x40]
0x252: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x267: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x269: M[V165] = V167
0x26a: V168 = 0x20
0x26c: V169 = ADD 0x20 V165
0x270: V170 = 0x40
0x272: V171 = M[0x40]
0x275: V172 = SUB V169 V171
0x277: RETURN V171 V172
---
Entry stack: [V8, 0x24c, V222]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x24c]

================================

Block 0x278
[0x278:0x284]
---
Predecessors: [0x44]
Successors: [0x382]
---
0x278 JUMPDEST
0x279 PUSH2 0x285
0x27c PUSH1 0x4
0x27e DUP1
0x27f POP
0x280 POP
0x281 PUSH2 0x382
0x284 JUMP
---
0x278: JUMPDEST 
0x279: V173 = 0x285
0x27c: V174 = 0x4
0x281: V175 = 0x382
0x284: JUMP 0x382
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x285]
Exit stack: [V8, 0x285]

================================

Block 0x285
[0x285:0x29a]
---
Predecessors: [0x382]
Successors: []
---
0x285 JUMPDEST
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a DUP3
0x28b DUP2
0x28c MSTORE
0x28d PUSH1 0x20
0x28f ADD
0x290 SWAP2
0x291 POP
0x292 POP
0x293 PUSH1 0x40
0x295 MLOAD
0x296 DUP1
0x297 SWAP2
0x298 SUB
0x299 SWAP1
0x29a RETURN
---
0x285: JUMPDEST 
0x286: V176 = 0x40
0x288: V177 = M[0x40]
0x28c: M[V177] = V244
0x28d: V178 = 0x20
0x28f: V179 = ADD 0x20 V177
0x293: V180 = 0x40
0x295: V181 = M[0x40]
0x298: V182 = SUB V179 V181
0x29a: RETURN V181 V182
---
Entry stack: [V8, 0x285, V244]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x285]

================================

Block 0x29b
[0x29b:0x2a7]
---
Predecessors: [0x4f]
Successors: [0x340]
---
0x29b JUMPDEST
0x29c PUSH2 0x2a8
0x29f PUSH1 0x4
0x2a1 DUP1
0x2a2 POP
0x2a3 POP
0x2a4 PUSH2 0x340
0x2a7 JUMP
---
0x29b: JUMPDEST 
0x29c: V183 = 0x2a8
0x29f: V184 = 0x4
0x2a4: V185 = 0x340
0x2a7: JUMP 0x340
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2a8]
Exit stack: [V8, 0x2a8]

================================

Block 0x2a8
[0x2a8:0x2d3]
---
Predecessors: [0x340]
Successors: []
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP1
0x2ad DUP3
0x2ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c3 AND
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP2
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 SWAP2
0x2d1 SUB
0x2d2 SWAP1
0x2d3 RETURN
---
0x2a8: JUMPDEST 
0x2a9: V186 = 0x40
0x2ab: V187 = M[0x40]
0x2ae: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x2c5: M[V187] = V189
0x2c6: V190 = 0x20
0x2c8: V191 = ADD 0x20 V187
0x2cc: V192 = 0x40
0x2ce: V193 = M[0x40]
0x2d1: V194 = SUB V191 V193
0x2d3: RETURN V193 V194
---
Entry stack: [V8, 0x2a8, V230]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x2a8]

================================

Block 0x2d4
[0x2d4:0x2e0]
---
Predecessors: [0x5a]
Successors: [0x379]
---
0x2d4 JUMPDEST
0x2d5 PUSH2 0x2e1
0x2d8 PUSH1 0x4
0x2da DUP1
0x2db POP
0x2dc POP
0x2dd PUSH2 0x379
0x2e0 JUMP
---
0x2d4: JUMPDEST 
0x2d5: V195 = 0x2e1
0x2d8: V196 = 0x4
0x2dd: V197 = 0x379
0x2e0: JUMP 0x379
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2e1]
Exit stack: [V8, 0x2e1]

================================

Block 0x2e1
[0x2e1:0x2f6]
---
Predecessors: [0x379]
Successors: []
---
0x2e1 JUMPDEST
0x2e2 PUSH1 0x40
0x2e4 MLOAD
0x2e5 DUP1
0x2e6 DUP3
0x2e7 DUP2
0x2e8 MSTORE
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP2
0x2ed POP
0x2ee POP
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 DUP1
0x2f3 SWAP2
0x2f4 SUB
0x2f5 SWAP1
0x2f6 RETURN
---
0x2e1: JUMPDEST 
0x2e2: V198 = 0x40
0x2e4: V199 = M[0x40]
0x2e8: M[V199] = V241
0x2e9: V200 = 0x20
0x2eb: V201 = ADD 0x20 V199
0x2ef: V202 = 0x40
0x2f1: V203 = M[0x40]
0x2f4: V204 = SUB V201 V203
0x2f6: RETURN V203 V204
---
Entry stack: [V8, 0x2e1, V241]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x2e1]

================================

Block 0x2f7
[0x2f7:0x303]
---
Predecessors: [0x65]
Successors: [0x366]
---
0x2f7 JUMPDEST
0x2f8 PUSH2 0x304
0x2fb PUSH1 0x4
0x2fd DUP1
0x2fe POP
0x2ff POP
0x300 PUSH2 0x366
0x303 JUMP
---
0x2f7: JUMPDEST 
0x2f8: V205 = 0x304
0x2fb: V206 = 0x4
0x300: V207 = 0x366
0x303: JUMP 0x366
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x304]
Exit stack: [V8, 0x304]

================================

Block 0x304
[0x304:0x319]
---
Predecessors: [0x366]
Successors: []
---
0x304 JUMPDEST
0x305 PUSH1 0x40
0x307 MLOAD
0x308 DUP1
0x309 DUP3
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x20
0x30e ADD
0x30f SWAP2
0x310 POP
0x311 POP
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 SWAP2
0x317 SUB
0x318 SWAP1
0x319 RETURN
---
0x304: JUMPDEST 
0x305: V208 = 0x40
0x307: V209 = M[0x40]
0x30b: M[V209] = V238
0x30c: V210 = 0x20
0x30e: V211 = ADD 0x20 V209
0x312: V212 = 0x40
0x314: V213 = M[0x40]
0x317: V214 = SUB V211 V213
0x319: RETURN V213 V214
---
Entry stack: [V8, 0x304, V238]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x304]

================================

Block 0x31a
[0x31a:0x33f]
---
Predecessors: [0x23f]
Successors: [0x24c]
---
0x31a JUMPDEST
0x31b PUSH1 0x0
0x31d PUSH1 0x0
0x31f SWAP1
0x320 SLOAD
0x321 SWAP1
0x322 PUSH2 0x100
0x325 EXP
0x326 SWAP1
0x327 DIV
0x328 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33d AND
0x33e DUP2
0x33f JUMP
---
0x31a: JUMPDEST 
0x31b: V215 = 0x0
0x31d: V216 = 0x0
0x320: V217 = S[0x0]
0x322: V218 = 0x100
0x325: V219 = EXP 0x100 0x0
0x327: V220 = DIV V217 0x1
0x328: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x33d: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x33f: JUMP 0x24c
---
Entry stack: [V8, 0x24c]
Stack pops: 1
Stack additions: [S0, V222]
Exit stack: [V8, 0x24c, V222]

================================

Block 0x340
[0x340:0x365]
---
Predecessors: [0x29b]
Successors: [0x2a8]
---
0x340 JUMPDEST
0x341 PUSH1 0x1
0x343 PUSH1 0x0
0x345 SWAP1
0x346 SLOAD
0x347 SWAP1
0x348 PUSH2 0x100
0x34b EXP
0x34c SWAP1
0x34d DIV
0x34e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x363 AND
0x364 DUP2
0x365 JUMP
---
0x340: JUMPDEST 
0x341: V223 = 0x1
0x343: V224 = 0x0
0x346: V225 = S[0x1]
0x348: V226 = 0x100
0x34b: V227 = EXP 0x100 0x0
0x34d: V228 = DIV V225 0x1
0x34e: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x363: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x365: JUMP 0x2a8
---
Entry stack: [V8, 0x2a8]
Stack pops: 1
Stack additions: [S0, V230]
Exit stack: [V8, 0x2a8, V230]

================================

Block 0x366
[0x366:0x378]
---
Predecessors: [0x2f7]
Successors: [0x304]
---
0x366 JUMPDEST
0x367 PUSH1 0x1
0x369 PUSH1 0x14
0x36b SWAP1
0x36c SLOAD
0x36d SWAP1
0x36e PUSH2 0x100
0x371 EXP
0x372 SWAP1
0x373 DIV
0x374 PUSH1 0xff
0x376 AND
0x377 DUP2
0x378 JUMP
---
0x366: JUMPDEST 
0x367: V231 = 0x1
0x369: V232 = 0x14
0x36c: V233 = S[0x1]
0x36e: V234 = 0x100
0x371: V235 = EXP 0x100 0x14
0x373: V236 = DIV V233 0x10000000000000000000000000000000000000000
0x374: V237 = 0xff
0x376: V238 = AND 0xff V236
0x378: JUMP 0x304
---
Entry stack: [V8, 0x304]
Stack pops: 1
Stack additions: [S0, V238]
Exit stack: [V8, 0x304, V238]

================================

Block 0x379
[0x379:0x381]
---
Predecessors: [0x2d4]
Successors: [0x2e1]
---
0x379 JUMPDEST
0x37a PUSH1 0x2
0x37c PUSH1 0x0
0x37e POP
0x37f SLOAD
0x380 DUP2
0x381 JUMP
---
0x379: JUMPDEST 
0x37a: V239 = 0x2
0x37c: V240 = 0x0
0x37f: V241 = S[0x2]
0x381: JUMP 0x2e1
---
Entry stack: [V8, 0x2e1]
Stack pops: 1
Stack additions: [S0, V241]
Exit stack: [V8, 0x2e1, V241]

================================

Block 0x382
[0x382:0x38a]
---
Predecessors: [0x278]
Successors: [0x285]
---
0x382 JUMPDEST
0x383 PUSH1 0x3
0x385 PUSH1 0x0
0x387 POP
0x388 SLOAD
0x389 DUP2
0x38a JUMP
---
0x382: JUMPDEST 
0x383: V242 = 0x3
0x385: V243 = 0x0
0x388: V244 = S[0x3]
0x38a: JUMP 0x285
---
Entry stack: [V8, 0x285]
Stack pops: 1
Stack additions: [S0, V244]
Exit stack: [V8, 0x285, V244]

================================

Block 0x38b
[0x38b:0x3e1]
---
Predecessors: [0x230]
Successors: [0x3e2, 0x41c]
---
0x38b JUMPDEST
0x38c PUSH1 0x1
0x38e PUSH1 0x0
0x390 SWAP1
0x391 SLOAD
0x392 SWAP1
0x393 PUSH2 0x100
0x396 EXP
0x397 SWAP1
0x398 DIV
0x399 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ae AND
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 CALLER
0x3c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3db AND
0x3dc EQ
0x3dd ISZERO
0x3de PUSH2 0x41c
0x3e1 JUMPI
---
0x38b: JUMPDEST 
0x38c: V245 = 0x1
0x38e: V246 = 0x0
0x391: V247 = S[0x1]
0x393: V248 = 0x100
0x396: V249 = EXP 0x100 0x0
0x398: V250 = DIV V247 0x1
0x399: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ae: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x3af: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x3c5: V255 = CALLER
0x3c6: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x3dc: V258 = EQ V257 V254
0x3dd: V259 = ISZERO V258
0x3de: V260 = 0x41c
0x3e1: JUMPI 0x41c V259
---
Entry stack: [V8, 0x23d]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x23d]

================================

Block 0x3e2
[0x3e2:0x41b]
---
Predecessors: [0x38b]
Successors: []
---
0x3e2 PUSH1 0x1
0x3e4 PUSH1 0x0
0x3e6 SWAP1
0x3e7 SLOAD
0x3e8 SWAP1
0x3e9 PUSH2 0x100
0x3ec EXP
0x3ed SWAP1
0x3ee DIV
0x3ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x404 AND
0x405 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41a AND
0x41b SELFDESTRUCT
---
0x3e2: V261 = 0x1
0x3e4: V262 = 0x0
0x3e7: V263 = S[0x1]
0x3e9: V264 = 0x100
0x3ec: V265 = EXP 0x100 0x0
0x3ee: V266 = DIV V263 0x1
0x3ef: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x404: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x405: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x41a: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x41b: SELFDESTRUCT V270
---
Entry stack: [V8, 0x23d]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x23d]

================================

Block 0x41c
[0x41c:0x41c]
---
Predecessors: [0x38b]
Successors: [0x41d]
---
0x41c JUMPDEST
---
0x41c: JUMPDEST 
---
Entry stack: [V8, 0x23d]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x23d]

================================

Block 0x41d
[0x41d:0x41e]
---
Predecessors: [0x41c]
Successors: [0x23d]
---
0x41d JUMPDEST
0x41e JUMP
---
0x41d: JUMPDEST 
0x41e: JUMP 0x23d
---
Entry stack: [V8, 0x23d]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x230
Exit block: 0x23d
Body: 0x230, 0x23d, 0x38b, 0x3e2, 0x41c, 0x41d

Function 1:
Public function signature: 0x67e404ce
Entry block: 0x23f
Exit block: 0x24c
Body: 0x23f, 0x24c, 0x31a

Function 2:
Public function signature: 0x70dea79a
Entry block: 0x278
Exit block: 0x285
Body: 0x278, 0x285, 0x382

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x29b
Exit block: 0x2a8
Body: 0x29b, 0x2a8, 0x340

Function 4:
Public function signature: 0xaa8c217c
Entry block: 0x2d4
Exit block: 0x2e1
Body: 0x2d4, 0x2e1, 0x379

Function 5:
Public function signature: 0xcf309012
Entry block: 0x2f7
Exit block: 0x304
Body: 0x2f7, 0x304, 0x366

Function 6:
Public fallback function
Entry block: 0x70
Exit block: 0x22e
Body: 0x70, 0x74, 0x78, 0x91, 0xa1, 0xd8, 0x13a, 0x192, 0x1a3, 0x1a9, 0x1b6, 0x229, 0x22a, 0x22b, 0x22c, 0x22e

