Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x240]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x2d05d3f
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x240
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x2d05d3f
0x22: V15 = EQ V13 0x2d05d3f
0x23: V16 = 0x240
0x26: JUMPI 0x240 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x26f]
---
0x27 DUP1
0x28 PUSH4 0x13af4035
0x2d EQ
0x2e PUSH2 0x26f
0x31 JUMPI
---
0x28: V17 = 0x13af4035
0x2d: V18 = EQ 0x13af4035 V13
0x2e: V19 = 0x26f
0x31: JUMPI 0x26f V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x290]
---
0x32 DUP1
0x33 PUSH4 0x144fa6d7
0x38 EQ
0x39 PUSH2 0x290
0x3c JUMPI
---
0x33: V20 = 0x144fa6d7
0x38: V21 = EQ 0x144fa6d7 V13
0x39: V22 = 0x290
0x3c: JUMPI 0x290 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x2af]
---
0x3d DUP1
0x3e PUSH4 0x3f516018
0x43 EQ
0x44 PUSH2 0x2af
0x47 JUMPI
---
0x3e: V23 = 0x3f516018
0x43: V24 = EQ 0x3f516018 V13
0x44: V25 = 0x2af
0x47: JUMPI 0x2af V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x2ce]
---
0x48 DUP1
0x49 PUSH4 0x412664ae
0x4e EQ
0x4f PUSH2 0x2ce
0x52 JUMPI
---
0x49: V26 = 0x412664ae
0x4e: V27 = EQ 0x412664ae V13
0x4f: V28 = 0x2ce
0x52: JUMPI 0x2ce V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x2f0]
---
0x53 DUP1
0x54 PUSH4 0x41c0e1b5
0x59 EQ
0x5a PUSH2 0x2f0
0x5d JUMPI
---
0x54: V29 = 0x41c0e1b5
0x59: V30 = EQ 0x41c0e1b5 V13
0x5a: V31 = 0x2f0
0x5d: JUMPI 0x2f0 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x303]
---
0x5e DUP1
0x5f PUSH4 0x6e66f6e9
0x64 EQ
0x65 PUSH2 0x303
0x68 JUMPI
---
0x5f: V32 = 0x6e66f6e9
0x64: V33 = EQ 0x6e66f6e9 V13
0x65: V34 = 0x303
0x68: JUMPI 0x303 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x316]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x316
0x73 JUMPI
---
0x6a: V35 = 0x8da5cb5b
0x6f: V36 = EQ 0x8da5cb5b V13
0x70: V37 = 0x316
0x73: JUMPI 0x316 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x329]
---
0x74 DUP1
0x75 PUSH4 0x91b7f5ed
0x7a EQ
0x7b PUSH2 0x329
0x7e JUMPI
---
0x75: V38 = 0x91b7f5ed
0x7a: V39 = EQ 0x91b7f5ed V13
0x7b: V40 = 0x329
0x7e: JUMPI 0x329 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x8a]
---
Predecessors: [0x0, 0x74]
Successors: [0x8b, 0x8f]
---
0x7f JUMPDEST
0x80 PUSH1 0x0
0x82 DUP1
0x83 CALLVALUE
0x84 DUP2
0x85 SWAP1
0x86 GT
0x87 PUSH2 0x8f
0x8a JUMPI
---
0x7f: JUMPDEST 
0x80: V41 = 0x0
0x83: V42 = CALLVALUE
0x86: V43 = GT V42 0x0
0x87: V44 = 0x8f
0x8a: JUMPI 0x8f V43
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x0, 0x0]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x7f]
Successors: []
---
0x8b PUSH1 0x0
0x8d DUP1
0x8e REVERT
---
0x8b: V45 = 0x0
0x8e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0]

================================

Block 0x8f
[0x8f:0x9a]
---
Predecessors: [0x7f]
Successors: [0x9b, 0x9f]
---
0x8f JUMPDEST
0x90 PUSH4 0x5b07d090
0x95 TIMESTAMP
0x96 GT
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x8f: JUMPDEST 
0x90: V46 = 0x5b07d090
0x95: V47 = TIMESTAMP
0x96: V48 = GT V47 0x5b07d090
0x97: V49 = 0x9f
0x9a: JUMPI 0x9f V48
---
Entry stack: [V13, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x8f]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V50 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0]

================================

Block 0x9f
[0x9f:0xb7]
---
Predecessors: [0x8f]
Successors: [0xb8, 0xc0]
---
0x9f JUMPDEST
0xa0 POP
0xa1 POP
0xa2 PUSH1 0x3
0xa4 SLOAD
0xa5 CALLVALUE
0xa6 MUL
0xa7 PUSH1 0x64
0xa9 DUP2
0xaa DIV
0xab PUSH4 0x5b07d090
0xb0 TIMESTAMP
0xb1 GT
0xb2 DUP1
0xb3 ISZERO
0xb4 PUSH2 0xc0
0xb7 JUMPI
---
0x9f: JUMPDEST 
0xa2: V51 = 0x3
0xa4: V52 = S[0x3]
0xa5: V53 = CALLVALUE
0xa6: V54 = MUL V53 V52
0xa7: V55 = 0x64
0xaa: V56 = DIV V54 0x64
0xab: V57 = 0x5b07d090
0xb0: V58 = TIMESTAMP
0xb1: V59 = GT V58 0x5b07d090
0xb3: V60 = ISZERO V59
0xb4: V61 = 0xc0
0xb7: JUMPI 0xc0 V60
---
Entry stack: [V13, 0x0, 0x0]
Stack pops: 2
Stack additions: [V54, V56, V59]
Exit stack: [V13, V54, V56, V59]

================================

Block 0xb8
[0xb8:0xbf]
---
Predecessors: [0x9f]
Successors: [0xc0]
---
0xb8 POP
0xb9 PUSH4 0x5b0e6810
0xbe TIMESTAMP
0xbf LT
---
0xb9: V62 = 0x5b0e6810
0xbe: V63 = TIMESTAMP
0xbf: V64 = LT V63 0x5b0e6810
---
Entry stack: [V13, V54, V56, V59]
Stack pops: 1
Stack additions: [V64]
Exit stack: [V13, V54, V56, V64]

================================

Block 0xc0
[0xc0:0xc5]
---
Predecessors: [0x9f, 0xb8]
Successors: [0xc6, 0xce]
---
0xc0 JUMPDEST
0xc1 ISZERO
0xc2 PUSH2 0xce
0xc5 JUMPI
---
0xc0: JUMPDEST 
0xc1: V65 = ISZERO S0
0xc2: V66 = 0xce
0xc5: JUMPI 0xce V65
---
Entry stack: [V13, V54, V56, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, V54, V56]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xc0]
Successors: [0xce]
---
0xc6 DUP1
0xc7 PUSH1 0xf
0xc9 MUL
0xca DUP3
0xcb ADD
0xcc SWAP2
0xcd POP
---
0xc7: V67 = 0xf
0xc9: V68 = MUL 0xf V56
0xcb: V69 = ADD V54 V68
---
Entry stack: [V13, V54, V56]
Stack pops: 2
Stack additions: [V69, S0]
Exit stack: [V13, V69, V56]

================================

Block 0xce
[0xce:0xdb]
---
Predecessors: [0xc0, 0xc6]
Successors: [0xdc, 0xe4]
---
0xce JUMPDEST
0xcf PUSH4 0x5b110b10
0xd4 TIMESTAMP
0xd5 GT
0xd6 DUP1
0xd7 ISZERO
0xd8 PUSH2 0xe4
0xdb JUMPI
---
0xce: JUMPDEST 
0xcf: V70 = 0x5b110b10
0xd4: V71 = TIMESTAMP
0xd5: V72 = GT V71 0x5b110b10
0xd7: V73 = ISZERO V72
0xd8: V74 = 0xe4
0xdb: JUMPI 0xe4 V73
---
Entry stack: [V13, S1, V56]
Stack pops: 0
Stack additions: [V72]
Exit stack: [V13, S1, V56, V72]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0xce]
Successors: [0xe4]
---
0xdc POP
0xdd PUSH4 0x5b165110
0xe2 TIMESTAMP
0xe3 LT
---
0xdd: V75 = 0x5b165110
0xe2: V76 = TIMESTAMP
0xe3: V77 = LT V76 0x5b165110
---
Entry stack: [V13, S2, V56, V72]
Stack pops: 1
Stack additions: [V77]
Exit stack: [V13, S2, V56, V77]

================================

Block 0xe4
[0xe4:0xe9]
---
Predecessors: [0xce, 0xdc]
Successors: [0xea, 0xf2]
---
0xe4 JUMPDEST
0xe5 ISZERO
0xe6 PUSH2 0xf2
0xe9 JUMPI
---
0xe4: JUMPDEST 
0xe5: V78 = ISZERO S0
0xe6: V79 = 0xf2
0xe9: JUMPI 0xf2 V78
---
Entry stack: [V13, S2, V56, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S2, V56]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0xe4]
Successors: [0xf2]
---
0xea DUP1
0xeb PUSH1 0xa
0xed MUL
0xee DUP3
0xef ADD
0xf0 SWAP2
0xf1 POP
---
0xeb: V80 = 0xa
0xed: V81 = MUL 0xa V56
0xef: V82 = ADD S1 V81
---
Entry stack: [V13, S1, V56]
Stack pops: 2
Stack additions: [V82, S0]
Exit stack: [V13, V82, V56]

================================

Block 0xf2
[0xf2:0xff]
---
Predecessors: [0xe4, 0xea]
Successors: [0x100, 0x108]
---
0xf2 JUMPDEST
0xf3 PUSH4 0x5b17a290
0xf8 TIMESTAMP
0xf9 GT
0xfa DUP1
0xfb ISZERO
0xfc PUSH2 0x108
0xff JUMPI
---
0xf2: JUMPDEST 
0xf3: V83 = 0x5b17a290
0xf8: V84 = TIMESTAMP
0xf9: V85 = GT V84 0x5b17a290
0xfb: V86 = ISZERO V85
0xfc: V87 = 0x108
0xff: JUMPI 0x108 V86
---
Entry stack: [V13, S1, V56]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V13, S1, V56, V85]

================================

Block 0x100
[0x100:0x107]
---
Predecessors: [0xf2]
Successors: [0x108]
---
0x100 POP
0x101 PUSH4 0x5b1ce890
0x106 TIMESTAMP
0x107 LT
---
0x101: V88 = 0x5b1ce890
0x106: V89 = TIMESTAMP
0x107: V90 = LT V89 0x5b1ce890
---
Entry stack: [V13, S2, V56, V85]
Stack pops: 1
Stack additions: [V90]
Exit stack: [V13, S2, V56, V90]

================================

Block 0x108
[0x108:0x10d]
---
Predecessors: [0xf2, 0x100]
Successors: [0x10e, 0x116]
---
0x108 JUMPDEST
0x109 ISZERO
0x10a PUSH2 0x116
0x10d JUMPI
---
0x108: JUMPDEST 
0x109: V91 = ISZERO S0
0x10a: V92 = 0x116
0x10d: JUMPI 0x116 V91
---
Entry stack: [V13, S2, V56, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S2, V56]

================================

Block 0x10e
[0x10e:0x115]
---
Predecessors: [0x108]
Successors: [0x116]
---
0x10e DUP1
0x10f PUSH1 0x5
0x111 MUL
0x112 DUP3
0x113 ADD
0x114 SWAP2
0x115 POP
---
0x10f: V93 = 0x5
0x111: V94 = MUL 0x5 V56
0x113: V95 = ADD S1 V94
---
Entry stack: [V13, S1, V56]
Stack pops: 2
Stack additions: [V95, S0]
Exit stack: [V13, V95, V56]

================================

Block 0x116
[0x116:0x123]
---
Predecessors: [0x108, 0x10e]
Successors: [0x124, 0x12c]
---
0x116 JUMPDEST
0x117 PUSH4 0x5b1e3a10
0x11c TIMESTAMP
0x11d GT
0x11e DUP1
0x11f ISZERO
0x120 PUSH2 0x12c
0x123 JUMPI
---
0x116: JUMPDEST 
0x117: V96 = 0x5b1e3a10
0x11c: V97 = TIMESTAMP
0x11d: V98 = GT V97 0x5b1e3a10
0x11f: V99 = ISZERO V98
0x120: V100 = 0x12c
0x123: JUMPI 0x12c V99
---
Entry stack: [V13, S1, V56]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V13, S1, V56, V98]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x116]
Successors: [0x12c]
---
0x124 POP
0x125 PUSH4 0x5b238010
0x12a TIMESTAMP
0x12b LT
---
0x125: V101 = 0x5b238010
0x12a: V102 = TIMESTAMP
0x12b: V103 = LT V102 0x5b238010
---
Entry stack: [V13, S2, V56, V98]
Stack pops: 1
Stack additions: [V103]
Exit stack: [V13, S2, V56, V103]

================================

Block 0x12c
[0x12c:0x131]
---
Predecessors: [0x116, 0x124]
Successors: [0x132, 0x13a]
---
0x12c JUMPDEST
0x12d ISZERO
0x12e PUSH2 0x13a
0x131 JUMPI
---
0x12c: JUMPDEST 
0x12d: V104 = ISZERO S0
0x12e: V105 = 0x13a
0x131: JUMPI 0x13a V104
---
Entry stack: [V13, S2, V56, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S2, V56]

================================

Block 0x132
[0x132:0x139]
---
Predecessors: [0x12c]
Successors: [0x13a]
---
0x132 DUP1
0x133 PUSH1 0x2
0x135 MUL
0x136 DUP3
0x137 ADD
0x138 SWAP2
0x139 POP
---
0x133: V106 = 0x2
0x135: V107 = MUL 0x2 V56
0x137: V108 = ADD S1 V107
---
Entry stack: [V13, S1, V56]
Stack pops: 2
Stack additions: [V108, S0]
Exit stack: [V13, V108, V56]

================================

Block 0x13a
[0x13a:0x145]
---
Predecessors: [0x12c, 0x132]
Successors: [0x146, 0x14a]
---
0x13a JUMPDEST
0x13b PUSH4 0x5b431600
0x140 TIMESTAMP
0x141 LT
0x142 PUSH2 0x14a
0x145 JUMPI
---
0x13a: JUMPDEST 
0x13b: V109 = 0x5b431600
0x140: V110 = TIMESTAMP
0x141: V111 = LT V110 0x5b431600
0x142: V112 = 0x14a
0x145: JUMPI 0x14a V111
---
Entry stack: [V13, S1, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, V56]

================================

Block 0x146
[0x146:0x149]
---
Predecessors: [0x13a]
Successors: []
---
0x146 PUSH1 0x0
0x148 DUP1
0x149 REVERT
---
0x146: V113 = 0x0
0x149: REVERT 0x0 0x0
---
Entry stack: [V13, S1, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, V56]

================================

Block 0x14a
[0x14a:0x19b]
---
Predecessors: [0x13a]
Successors: [0x19c, 0x1a0]
---
0x14a JUMPDEST
0x14b PUSH1 0x0
0x14d SLOAD
0x14e PUSH1 0x1
0x150 PUSH1 0xa0
0x152 PUSH1 0x2
0x154 EXP
0x155 SUB
0x156 AND
0x157 PUSH4 0xa9059cbb
0x15c CALLER
0x15d DUP5
0x15e PUSH1 0x40
0x160 MLOAD
0x161 PUSH1 0xe0
0x163 PUSH1 0x2
0x165 EXP
0x166 PUSH4 0xffffffff
0x16b DUP6
0x16c AND
0x16d MUL
0x16e DUP2
0x16f MSTORE
0x170 PUSH1 0x1
0x172 PUSH1 0xa0
0x174 PUSH1 0x2
0x176 EXP
0x177 SUB
0x178 SWAP1
0x179 SWAP3
0x17a AND
0x17b PUSH1 0x4
0x17d DUP4
0x17e ADD
0x17f MSTORE
0x180 PUSH1 0x24
0x182 DUP3
0x183 ADD
0x184 MSTORE
0x185 PUSH1 0x44
0x187 ADD
0x188 PUSH1 0x0
0x18a PUSH1 0x40
0x18c MLOAD
0x18d DUP1
0x18e DUP4
0x18f SUB
0x190 DUP2
0x191 PUSH1 0x0
0x193 DUP8
0x194 DUP1
0x195 EXTCODESIZE
0x196 ISZERO
0x197 ISZERO
0x198 PUSH2 0x1a0
0x19b JUMPI
---
0x14a: JUMPDEST 
0x14b: V114 = 0x0
0x14d: V115 = S[0x0]
0x14e: V116 = 0x1
0x150: V117 = 0xa0
0x152: V118 = 0x2
0x154: V119 = EXP 0x2 0xa0
0x155: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x156: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x157: V122 = 0xa9059cbb
0x15c: V123 = CALLER
0x15e: V124 = 0x40
0x160: V125 = M[0x40]
0x161: V126 = 0xe0
0x163: V127 = 0x2
0x165: V128 = EXP 0x2 0xe0
0x166: V129 = 0xffffffff
0x16c: V130 = AND 0xa9059cbb 0xffffffff
0x16d: V131 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x16f: M[V125] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x170: V132 = 0x1
0x172: V133 = 0xa0
0x174: V134 = 0x2
0x176: V135 = EXP 0x2 0xa0
0x177: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17a: V137 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V138 = 0x4
0x17e: V139 = ADD V125 0x4
0x17f: M[V139] = V137
0x180: V140 = 0x24
0x183: V141 = ADD V125 0x24
0x184: M[V141] = S1
0x185: V142 = 0x44
0x187: V143 = ADD 0x44 V125
0x188: V144 = 0x0
0x18a: V145 = 0x40
0x18c: V146 = M[0x40]
0x18f: V147 = SUB V143 V146
0x191: V148 = 0x0
0x195: V149 = EXTCODESIZE V121
0x196: V150 = ISZERO V149
0x197: V151 = ISZERO V150
0x198: V152 = 0x1a0
0x19b: JUMPI 0x1a0 V151
---
Entry stack: [V13, S1, V56]
Stack pops: 2
Stack additions: [S1, S0, V121, 0xa9059cbb, V143, 0x0, V146, V147, V146, 0x0, V121]
Exit stack: [V13, S1, V56, V121, 0xa9059cbb, V143, 0x0, V146, V147, V146, 0x0, V121]

================================

Block 0x19c
[0x19c:0x19f]
---
Predecessors: [0x14a]
Successors: []
---
0x19c PUSH1 0x0
0x19e DUP1
0x19f REVERT
---
0x19c: V153 = 0x0
0x19f: REVERT 0x0 0x0
---
Entry stack: [V13, S10, V56, V121, 0xa9059cbb, V143, 0x0, V146, V147, V146, 0x0, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, V56, V121, 0xa9059cbb, V143, 0x0, V146, V147, V146, 0x0, V121]

================================

Block 0x1a0
[0x1a0:0x1ac]
---
Predecessors: [0x14a]
Successors: [0x1ad, 0x1b1]
---
0x1a0 JUMPDEST
0x1a1 PUSH2 0x2c6
0x1a4 GAS
0x1a5 SUB
0x1a6 CALL
0x1a7 ISZERO
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V154 = 0x2c6
0x1a4: V155 = GAS
0x1a5: V156 = SUB V155 0x2c6
0x1a6: V157 = CALL V156 V121 0x0 V146 V147 V146 0x0
0x1a7: V158 = ISZERO V157
0x1a8: V159 = ISZERO V158
0x1a9: V160 = 0x1b1
0x1ac: JUMPI 0x1b1 V159
---
Entry stack: [V13, S10, V56, V121, 0xa9059cbb, V143, 0x0, V146, V147, V146, 0x0, V121]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S10, V56, V121, 0xa9059cbb, V143]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a0]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V161 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V13, S4, V56, V121, 0xa9059cbb, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S4, V56, V121, 0xa9059cbb, V143]

================================

Block 0x1b1
[0x1b1:0x237]
---
Predecessors: [0x1a0]
Successors: [0x238, 0x23c]
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 POP
0x1b4 POP
0x1b5 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d6 CALLER
0x1d7 DUP4
0x1d8 PUSH1 0x1
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 SWAP1
0x1e6 SWAP4
0x1e7 AND
0x1e8 DUP4
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec DUP4
0x1ed ADD
0x1ee SWAP2
0x1ef SWAP1
0x1f0 SWAP2
0x1f1 MSTORE
0x1f2 ISZERO
0x1f3 ISZERO
0x1f4 PUSH1 0x40
0x1f6 DUP1
0x1f7 DUP4
0x1f8 ADD
0x1f9 SWAP2
0x1fa SWAP1
0x1fb SWAP2
0x1fc MSTORE
0x1fd PUSH1 0x60
0x1ff SWAP1
0x200 SWAP2
0x201 ADD
0x202 SWAP1
0x203 MLOAD
0x204 DUP1
0x205 SWAP2
0x206 SUB
0x207 SWAP1
0x208 LOG1
0x209 PUSH1 0x2
0x20b SLOAD
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 AND
0x215 CALLVALUE
0x216 DUP1
0x217 ISZERO
0x218 PUSH2 0x8fc
0x21b MUL
0x21c SWAP1
0x21d PUSH1 0x40
0x21f MLOAD
0x220 PUSH1 0x0
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 DUP4
0x227 SUB
0x228 DUP2
0x229 DUP6
0x22a DUP9
0x22b DUP9
0x22c CALL
0x22d SWAP4
0x22e POP
0x22f POP
0x230 POP
0x231 POP
0x232 ISZERO
0x233 ISZERO
0x234 PUSH2 0x23c
0x237 JUMPI
---
0x1b1: JUMPDEST 
0x1b5: V162 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d6: V163 = CALLER
0x1d8: V164 = 0x1
0x1da: V165 = 0x40
0x1dc: V166 = M[0x40]
0x1dd: V167 = 0x1
0x1df: V168 = 0xa0
0x1e1: V169 = 0x2
0x1e3: V170 = EXP 0x2 0xa0
0x1e4: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e7: V172 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: M[V166] = V172
0x1ea: V173 = 0x20
0x1ed: V174 = ADD V166 0x20
0x1f1: M[V174] = S4
0x1f2: V175 = ISZERO 0x1
0x1f3: V176 = ISZERO 0x0
0x1f4: V177 = 0x40
0x1f8: V178 = ADD V166 0x40
0x1fc: M[V178] = 0x1
0x1fd: V179 = 0x60
0x201: V180 = ADD V166 0x60
0x203: V181 = M[0x40]
0x206: V182 = SUB V180 V181
0x208: LOG V181 V182 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x209: V183 = 0x2
0x20b: V184 = S[0x2]
0x20c: V185 = 0x1
0x20e: V186 = 0xa0
0x210: V187 = 0x2
0x212: V188 = EXP 0x2 0xa0
0x213: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x214: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x215: V191 = CALLVALUE
0x217: V192 = ISZERO V191
0x218: V193 = 0x8fc
0x21b: V194 = MUL 0x8fc V192
0x21d: V195 = 0x40
0x21f: V196 = M[0x40]
0x220: V197 = 0x0
0x222: V198 = 0x40
0x224: V199 = M[0x40]
0x227: V200 = SUB V196 V199
0x22c: V201 = CALL V194 V190 V191 V199 V200 V199 0x0
0x232: V202 = ISZERO V201
0x233: V203 = ISZERO V202
0x234: V204 = 0x23c
0x237: JUMPI 0x23c V203
---
Entry stack: [V13, S4, V56, V121, 0xa9059cbb, V143]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V13, S4, V56]

================================

Block 0x238
[0x238:0x23b]
---
Predecessors: [0x1b1]
Successors: []
---
0x238 PUSH1 0x0
0x23a DUP1
0x23b REVERT
---
0x238: V205 = 0x0
0x23b: REVERT 0x0 0x0
---
Entry stack: [V13, S1, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, V56]

================================

Block 0x23c
[0x23c:0x23f]
---
Predecessors: [0x1b1]
Successors: []
---
0x23c JUMPDEST
0x23d POP
0x23e POP
0x23f STOP
---
0x23c: JUMPDEST 
0x23f: STOP 
---
Entry stack: [V13, S1, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x240
[0x240:0x246]
---
Predecessors: [0xd]
Successors: [0x247, 0x24b]
---
0x240 JUMPDEST
0x241 CALLVALUE
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x240: JUMPDEST 
0x241: V206 = CALLVALUE
0x242: V207 = ISZERO V206
0x243: V208 = 0x24b
0x246: JUMPI 0x24b V207
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x240]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V209 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24b
[0x24b:0x252]
---
Predecessors: [0x240]
Successors: [0x33f]
---
0x24b JUMPDEST
0x24c PUSH2 0x253
0x24f PUSH2 0x33f
0x252 JUMP
---
0x24b: JUMPDEST 
0x24c: V210 = 0x253
0x24f: V211 = 0x33f
0x252: JUMP 0x33f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x253]
Exit stack: [V13, 0x253]

================================

Block 0x253
[0x253:0x26e]
---
Predecessors: [0x33f, 0x4de, 0x4ed]
Successors: []
---
0x253 JUMPDEST
0x254 PUSH1 0x40
0x256 MLOAD
0x257 PUSH1 0x1
0x259 PUSH1 0xa0
0x25b PUSH1 0x2
0x25d EXP
0x25e SUB
0x25f SWAP1
0x260 SWAP2
0x261 AND
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 PUSH1 0x40
0x269 MLOAD
0x26a DUP1
0x26b SWAP2
0x26c SUB
0x26d SWAP1
0x26e RETURN
---
0x253: JUMPDEST 
0x254: V212 = 0x40
0x256: V213 = M[0x40]
0x257: V214 = 0x1
0x259: V215 = 0xa0
0x25b: V216 = 0x2
0x25d: V217 = EXP 0x2 0xa0
0x25e: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V219 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x263: M[V213] = V219
0x264: V220 = 0x20
0x266: V221 = ADD 0x20 V213
0x267: V222 = 0x40
0x269: V223 = M[0x40]
0x26c: V224 = SUB V221 V223
0x26e: RETURN V223 V224
---
Entry stack: [V13, 0x253, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x253]

================================

Block 0x26f
[0x26f:0x275]
---
Predecessors: [0x27]
Successors: [0x276, 0x27a]
---
0x26f JUMPDEST
0x270 CALLVALUE
0x271 ISZERO
0x272 PUSH2 0x27a
0x275 JUMPI
---
0x26f: JUMPDEST 
0x270: V225 = CALLVALUE
0x271: V226 = ISZERO V225
0x272: V227 = 0x27a
0x275: JUMPI 0x27a V226
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x26f]
Successors: []
---
0x276 PUSH1 0x0
0x278 DUP1
0x279 REVERT
---
0x276: V228 = 0x0
0x279: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27a
[0x27a:0x28d]
---
Predecessors: [0x26f]
Successors: [0x34e]
---
0x27a JUMPDEST
0x27b PUSH2 0x28e
0x27e PUSH1 0x1
0x280 PUSH1 0xa0
0x282 PUSH1 0x2
0x284 EXP
0x285 SUB
0x286 PUSH1 0x4
0x288 CALLDATALOAD
0x289 AND
0x28a PUSH2 0x34e
0x28d JUMP
---
0x27a: JUMPDEST 
0x27b: V229 = 0x28e
0x27e: V230 = 0x1
0x280: V231 = 0xa0
0x282: V232 = 0x2
0x284: V233 = EXP 0x2 0xa0
0x285: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x286: V235 = 0x4
0x288: V236 = CALLDATALOAD 0x4
0x289: V237 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V238 = 0x34e
0x28d: JUMP 0x34e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28e, V237]
Exit stack: [V13, 0x28e, V237]

================================

Block 0x28e
[0x28e:0x28f]
---
Predecessors: [0x369, 0x3b3, 0x3fd, 0x4ae, 0x517]
Successors: []
---
0x28e JUMPDEST
0x28f STOP
---
0x28e: JUMPDEST 
0x28f: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x290
[0x290:0x296]
---
Predecessors: [0x32]
Successors: [0x297, 0x29b]
---
0x290 JUMPDEST
0x291 CALLVALUE
0x292 ISZERO
0x293 PUSH2 0x29b
0x296 JUMPI
---
0x290: JUMPDEST 
0x291: V239 = CALLVALUE
0x292: V240 = ISZERO V239
0x293: V241 = 0x29b
0x296: JUMPI 0x29b V240
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x297
[0x297:0x29a]
---
Predecessors: [0x290]
Successors: []
---
0x297 PUSH1 0x0
0x299 DUP1
0x29a REVERT
---
0x297: V242 = 0x0
0x29a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x29b
[0x29b:0x2ae]
---
Predecessors: [0x290]
Successors: [0x398]
---
0x29b JUMPDEST
0x29c PUSH2 0x28e
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 PUSH1 0x4
0x2a9 CALLDATALOAD
0x2aa AND
0x2ab PUSH2 0x398
0x2ae JUMP
---
0x29b: JUMPDEST 
0x29c: V243 = 0x28e
0x29f: V244 = 0x1
0x2a1: V245 = 0xa0
0x2a3: V246 = 0x2
0x2a5: V247 = EXP 0x2 0xa0
0x2a6: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a7: V249 = 0x4
0x2a9: V250 = CALLDATALOAD 0x4
0x2aa: V251 = AND V250 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V252 = 0x398
0x2ae: JUMP 0x398
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28e, V251]
Exit stack: [V13, 0x28e, V251]

================================

Block 0x2af
[0x2af:0x2b5]
---
Predecessors: [0x3d]
Successors: [0x2b6, 0x2ba]
---
0x2af JUMPDEST
0x2b0 CALLVALUE
0x2b1 ISZERO
0x2b2 PUSH2 0x2ba
0x2b5 JUMPI
---
0x2af: JUMPDEST 
0x2b0: V253 = CALLVALUE
0x2b1: V254 = ISZERO V253
0x2b2: V255 = 0x2ba
0x2b5: JUMPI 0x2ba V254
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b6
[0x2b6:0x2b9]
---
Predecessors: [0x2af]
Successors: []
---
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 REVERT
---
0x2b6: V256 = 0x0
0x2b9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ba
[0x2ba:0x2cd]
---
Predecessors: [0x2af]
Successors: [0x3e2]
---
0x2ba JUMPDEST
0x2bb PUSH2 0x28e
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 PUSH1 0x4
0x2c8 CALLDATALOAD
0x2c9 AND
0x2ca PUSH2 0x3e2
0x2cd JUMP
---
0x2ba: JUMPDEST 
0x2bb: V257 = 0x28e
0x2be: V258 = 0x1
0x2c0: V259 = 0xa0
0x2c2: V260 = 0x2
0x2c4: V261 = EXP 0x2 0xa0
0x2c5: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c6: V263 = 0x4
0x2c8: V264 = CALLDATALOAD 0x4
0x2c9: V265 = AND V264 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V266 = 0x3e2
0x2cd: JUMP 0x3e2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28e, V265]
Exit stack: [V13, 0x28e, V265]

================================

Block 0x2ce
[0x2ce:0x2d4]
---
Predecessors: [0x48]
Successors: [0x2d5, 0x2d9]
---
0x2ce JUMPDEST
0x2cf CALLVALUE
0x2d0 ISZERO
0x2d1 PUSH2 0x2d9
0x2d4 JUMPI
---
0x2ce: JUMPDEST 
0x2cf: V267 = CALLVALUE
0x2d0: V268 = ISZERO V267
0x2d1: V269 = 0x2d9
0x2d4: JUMPI 0x2d9 V268
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2d5
[0x2d5:0x2d8]
---
Predecessors: [0x2ce]
Successors: []
---
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 REVERT
---
0x2d5: V270 = 0x0
0x2d8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2d9
[0x2d9:0x2ef]
---
Predecessors: [0x2ce]
Successors: [0x42c]
---
0x2d9 JUMPDEST
0x2da PUSH2 0x28e
0x2dd PUSH1 0x1
0x2df PUSH1 0xa0
0x2e1 PUSH1 0x2
0x2e3 EXP
0x2e4 SUB
0x2e5 PUSH1 0x4
0x2e7 CALLDATALOAD
0x2e8 AND
0x2e9 PUSH1 0x24
0x2eb CALLDATALOAD
0x2ec PUSH2 0x42c
0x2ef JUMP
---
0x2d9: JUMPDEST 
0x2da: V271 = 0x28e
0x2dd: V272 = 0x1
0x2df: V273 = 0xa0
0x2e1: V274 = 0x2
0x2e3: V275 = EXP 0x2 0xa0
0x2e4: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e5: V277 = 0x4
0x2e7: V278 = CALLDATALOAD 0x4
0x2e8: V279 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V280 = 0x24
0x2eb: V281 = CALLDATALOAD 0x24
0x2ec: V282 = 0x42c
0x2ef: JUMP 0x42c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28e, V279, V281]
Exit stack: [V13, 0x28e, V279, V281]

================================

Block 0x2f0
[0x2f0:0x2f6]
---
Predecessors: [0x53]
Successors: [0x2f7, 0x2fb]
---
0x2f0 JUMPDEST
0x2f1 CALLVALUE
0x2f2 ISZERO
0x2f3 PUSH2 0x2fb
0x2f6 JUMPI
---
0x2f0: JUMPDEST 
0x2f1: V283 = CALLVALUE
0x2f2: V284 = ISZERO V283
0x2f3: V285 = 0x2fb
0x2f6: JUMPI 0x2fb V284
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2f7
[0x2f7:0x2fa]
---
Predecessors: [0x2f0]
Successors: []
---
0x2f7 PUSH1 0x0
0x2f9 DUP1
0x2fa REVERT
---
0x2f7: V286 = 0x0
0x2fa: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2fb
[0x2fb:0x302]
---
Predecessors: [0x2f0]
Successors: [0x4b5]
---
0x2fb JUMPDEST
0x2fc PUSH2 0x28e
0x2ff PUSH2 0x4b5
0x302 JUMP
---
0x2fb: JUMPDEST 
0x2fc: V287 = 0x28e
0x2ff: V288 = 0x4b5
0x302: JUMP 0x4b5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28e]
Exit stack: [V13, 0x28e]

================================

Block 0x303
[0x303:0x309]
---
Predecessors: [0x5e]
Successors: [0x30a, 0x30e]
---
0x303 JUMPDEST
0x304 CALLVALUE
0x305 ISZERO
0x306 PUSH2 0x30e
0x309 JUMPI
---
0x303: JUMPDEST 
0x304: V289 = CALLVALUE
0x305: V290 = ISZERO V289
0x306: V291 = 0x30e
0x309: JUMPI 0x30e V290
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x30a
[0x30a:0x30d]
---
Predecessors: [0x303]
Successors: []
---
0x30a PUSH1 0x0
0x30c DUP1
0x30d REVERT
---
0x30a: V292 = 0x0
0x30d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x30e
[0x30e:0x315]
---
Predecessors: [0x303]
Successors: [0x4de]
---
0x30e JUMPDEST
0x30f PUSH2 0x253
0x312 PUSH2 0x4de
0x315 JUMP
---
0x30e: JUMPDEST 
0x30f: V293 = 0x253
0x312: V294 = 0x4de
0x315: JUMP 0x4de
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x253]
Exit stack: [V13, 0x253]

================================

Block 0x316
[0x316:0x31c]
---
Predecessors: [0x69]
Successors: [0x31d, 0x321]
---
0x316 JUMPDEST
0x317 CALLVALUE
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x316: JUMPDEST 
0x317: V295 = CALLVALUE
0x318: V296 = ISZERO V295
0x319: V297 = 0x321
0x31c: JUMPI 0x321 V296
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x316]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V298 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x321
[0x321:0x328]
---
Predecessors: [0x316]
Successors: [0x4ed]
---
0x321 JUMPDEST
0x322 PUSH2 0x253
0x325 PUSH2 0x4ed
0x328 JUMP
---
0x321: JUMPDEST 
0x322: V299 = 0x253
0x325: V300 = 0x4ed
0x328: JUMP 0x4ed
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x253]
Exit stack: [V13, 0x253]

================================

Block 0x329
[0x329:0x32f]
---
Predecessors: [0x74]
Successors: [0x330, 0x334]
---
0x329 JUMPDEST
0x32a CALLVALUE
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x329: JUMPDEST 
0x32a: V301 = CALLVALUE
0x32b: V302 = ISZERO V301
0x32c: V303 = 0x334
0x32f: JUMPI 0x334 V302
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x329]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V304 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x334
[0x334:0x33e]
---
Predecessors: [0x329]
Successors: [0x4fc]
---
0x334 JUMPDEST
0x335 PUSH2 0x28e
0x338 PUSH1 0x4
0x33a CALLDATALOAD
0x33b PUSH2 0x4fc
0x33e JUMP
---
0x334: JUMPDEST 
0x335: V305 = 0x28e
0x338: V306 = 0x4
0x33a: V307 = CALLDATALOAD 0x4
0x33b: V308 = 0x4fc
0x33e: JUMP 0x4fc
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28e, V307]
Exit stack: [V13, 0x28e, V307]

================================

Block 0x33f
[0x33f:0x34d]
---
Predecessors: [0x24b]
Successors: [0x253]
---
0x33f JUMPDEST
0x340 PUSH1 0x1
0x342 SLOAD
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b AND
0x34c DUP2
0x34d JUMP
---
0x33f: JUMPDEST 
0x340: V309 = 0x1
0x342: V310 = S[0x1]
0x343: V311 = 0x1
0x345: V312 = 0xa0
0x347: V313 = 0x2
0x349: V314 = EXP 0x2 0xa0
0x34a: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34b: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x34d: JUMP 0x253
---
Entry stack: [V13, 0x253]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V13, 0x253, V316]

================================

Block 0x34e
[0x34e:0x364]
---
Predecessors: [0x27a]
Successors: [0x365, 0x369]
---
0x34e JUMPDEST
0x34f PUSH1 0x1
0x351 SLOAD
0x352 CALLER
0x353 PUSH1 0x1
0x355 PUSH1 0xa0
0x357 PUSH1 0x2
0x359 EXP
0x35a SUB
0x35b SWAP1
0x35c DUP2
0x35d AND
0x35e SWAP2
0x35f AND
0x360 EQ
0x361 PUSH2 0x369
0x364 JUMPI
---
0x34e: JUMPDEST 
0x34f: V317 = 0x1
0x351: V318 = S[0x1]
0x352: V319 = CALLER
0x353: V320 = 0x1
0x355: V321 = 0xa0
0x357: V322 = 0x2
0x359: V323 = EXP 0x2 0xa0
0x35a: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35d: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x35f: V326 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x360: V327 = EQ V326 V325
0x361: V328 = 0x369
0x364: JUMPI 0x369 V327
---
Entry stack: [V13, 0x28e, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V237]

================================

Block 0x365
[0x365:0x368]
---
Predecessors: [0x34e]
Successors: []
---
0x365 PUSH1 0x0
0x367 DUP1
0x368 REVERT
---
0x365: V329 = 0x0
0x368: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28e, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V237]

================================

Block 0x369
[0x369:0x397]
---
Predecessors: [0x34e]
Successors: [0x28e]
---
0x369 JUMPDEST
0x36a PUSH1 0x2
0x36c DUP1
0x36d SLOAD
0x36e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x383 NOT
0x384 AND
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d SWAP3
0x38e SWAP1
0x38f SWAP3
0x390 AND
0x391 SWAP2
0x392 SWAP1
0x393 SWAP2
0x394 OR
0x395 SWAP1
0x396 SSTORE
0x397 JUMP
---
0x369: JUMPDEST 
0x36a: V330 = 0x2
0x36d: V331 = S[0x2]
0x36e: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x383: V333 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x384: V334 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V331
0x385: V335 = 0x1
0x387: V336 = 0xa0
0x389: V337 = 0x2
0x38b: V338 = EXP 0x2 0xa0
0x38c: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x390: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x394: V341 = OR V340 V334
0x396: S[0x2] = V341
0x397: JUMP 0x28e
---
Entry stack: [V13, 0x28e, V237]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x398
[0x398:0x3ae]
---
Predecessors: [0x29b]
Successors: [0x3af, 0x3b3]
---
0x398 JUMPDEST
0x399 PUSH1 0x1
0x39b SLOAD
0x39c CALLER
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 SWAP1
0x3a6 DUP2
0x3a7 AND
0x3a8 SWAP2
0x3a9 AND
0x3aa EQ
0x3ab PUSH2 0x3b3
0x3ae JUMPI
---
0x398: JUMPDEST 
0x399: V342 = 0x1
0x39b: V343 = S[0x1]
0x39c: V344 = CALLER
0x39d: V345 = 0x1
0x39f: V346 = 0xa0
0x3a1: V347 = 0x2
0x3a3: V348 = EXP 0x2 0xa0
0x3a4: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x3a9: V351 = AND V343 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: V352 = EQ V351 V350
0x3ab: V353 = 0x3b3
0x3ae: JUMPI 0x3b3 V352
---
Entry stack: [V13, 0x28e, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V251]

================================

Block 0x3af
[0x3af:0x3b2]
---
Predecessors: [0x398]
Successors: []
---
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 REVERT
---
0x3af: V354 = 0x0
0x3b2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28e, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V251]

================================

Block 0x3b3
[0x3b3:0x3e1]
---
Predecessors: [0x398]
Successors: [0x28e]
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 SLOAD
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd NOT
0x3ce AND
0x3cf PUSH1 0x1
0x3d1 PUSH1 0xa0
0x3d3 PUSH1 0x2
0x3d5 EXP
0x3d6 SUB
0x3d7 SWAP3
0x3d8 SWAP1
0x3d9 SWAP3
0x3da AND
0x3db SWAP2
0x3dc SWAP1
0x3dd SWAP2
0x3de OR
0x3df SWAP1
0x3e0 SSTORE
0x3e1 JUMP
---
0x3b3: JUMPDEST 
0x3b4: V355 = 0x0
0x3b7: V356 = S[0x0]
0x3b8: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V358 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3ce: V359 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V356
0x3cf: V360 = 0x1
0x3d1: V361 = 0xa0
0x3d3: V362 = 0x2
0x3d5: V363 = EXP 0x2 0xa0
0x3d6: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3da: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x3de: V366 = OR V365 V359
0x3e0: S[0x0] = V366
0x3e1: JUMP 0x28e
---
Entry stack: [V13, 0x28e, V251]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x3e2
[0x3e2:0x3f8]
---
Predecessors: [0x2ba]
Successors: [0x3f9, 0x3fd]
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x1
0x3e5 SLOAD
0x3e6 CALLER
0x3e7 PUSH1 0x1
0x3e9 PUSH1 0xa0
0x3eb PUSH1 0x2
0x3ed EXP
0x3ee SUB
0x3ef SWAP1
0x3f0 DUP2
0x3f1 AND
0x3f2 SWAP2
0x3f3 AND
0x3f4 EQ
0x3f5 PUSH2 0x3fd
0x3f8 JUMPI
---
0x3e2: JUMPDEST 
0x3e3: V367 = 0x1
0x3e5: V368 = S[0x1]
0x3e6: V369 = CALLER
0x3e7: V370 = 0x1
0x3e9: V371 = 0xa0
0x3eb: V372 = 0x2
0x3ed: V373 = EXP 0x2 0xa0
0x3ee: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f1: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x3f3: V376 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x3f4: V377 = EQ V376 V375
0x3f5: V378 = 0x3fd
0x3f8: JUMPI 0x3fd V377
---
Entry stack: [V13, 0x28e, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V265]

================================

Block 0x3f9
[0x3f9:0x3fc]
---
Predecessors: [0x3e2]
Successors: []
---
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc REVERT
---
0x3f9: V379 = 0x0
0x3fc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28e, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V265]

================================

Block 0x3fd
[0x3fd:0x42b]
---
Predecessors: [0x3e2]
Successors: [0x28e]
---
0x3fd JUMPDEST
0x3fe PUSH1 0x1
0x400 DUP1
0x401 SLOAD
0x402 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x417 NOT
0x418 AND
0x419 PUSH1 0x1
0x41b PUSH1 0xa0
0x41d PUSH1 0x2
0x41f EXP
0x420 SUB
0x421 SWAP3
0x422 SWAP1
0x423 SWAP3
0x424 AND
0x425 SWAP2
0x426 SWAP1
0x427 SWAP2
0x428 OR
0x429 SWAP1
0x42a SSTORE
0x42b JUMP
---
0x3fd: JUMPDEST 
0x3fe: V380 = 0x1
0x401: V381 = S[0x1]
0x402: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x417: V383 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x418: V384 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V381
0x419: V385 = 0x1
0x41b: V386 = 0xa0
0x41d: V387 = 0x2
0x41f: V388 = EXP 0x2 0xa0
0x420: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x428: V391 = OR V390 V384
0x42a: S[0x1] = V391
0x42b: JUMP 0x28e
---
Entry stack: [V13, 0x28e, V265]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x42c
[0x42c:0x442]
---
Predecessors: [0x2d9]
Successors: [0x443, 0x447]
---
0x42c JUMPDEST
0x42d PUSH1 0x1
0x42f SLOAD
0x430 CALLER
0x431 PUSH1 0x1
0x433 PUSH1 0xa0
0x435 PUSH1 0x2
0x437 EXP
0x438 SUB
0x439 SWAP1
0x43a DUP2
0x43b AND
0x43c SWAP2
0x43d AND
0x43e EQ
0x43f PUSH2 0x447
0x442 JUMPI
---
0x42c: JUMPDEST 
0x42d: V392 = 0x1
0x42f: V393 = S[0x1]
0x430: V394 = CALLER
0x431: V395 = 0x1
0x433: V396 = 0xa0
0x435: V397 = 0x2
0x437: V398 = EXP 0x2 0xa0
0x438: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43b: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x43d: V401 = AND V393 0xffffffffffffffffffffffffffffffffffffffff
0x43e: V402 = EQ V401 V400
0x43f: V403 = 0x447
0x442: JUMPI 0x447 V402
---
Entry stack: [V13, 0x28e, V279, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V279, V281]

================================

Block 0x443
[0x443:0x446]
---
Predecessors: [0x42c]
Successors: []
---
0x443 PUSH1 0x0
0x445 DUP1
0x446 REVERT
---
0x443: V404 = 0x0
0x446: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28e, V279, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V279, V281]

================================

Block 0x447
[0x447:0x498]
---
Predecessors: [0x42c]
Successors: [0x499, 0x49d]
---
0x447 JUMPDEST
0x448 PUSH1 0x0
0x44a SLOAD
0x44b PUSH1 0x1
0x44d PUSH1 0xa0
0x44f PUSH1 0x2
0x451 EXP
0x452 SUB
0x453 AND
0x454 PUSH4 0xa9059cbb
0x459 DUP4
0x45a DUP4
0x45b PUSH1 0x40
0x45d MLOAD
0x45e PUSH1 0xe0
0x460 PUSH1 0x2
0x462 EXP
0x463 PUSH4 0xffffffff
0x468 DUP6
0x469 AND
0x46a MUL
0x46b DUP2
0x46c MSTORE
0x46d PUSH1 0x1
0x46f PUSH1 0xa0
0x471 PUSH1 0x2
0x473 EXP
0x474 SUB
0x475 SWAP1
0x476 SWAP3
0x477 AND
0x478 PUSH1 0x4
0x47a DUP4
0x47b ADD
0x47c MSTORE
0x47d PUSH1 0x24
0x47f DUP3
0x480 ADD
0x481 MSTORE
0x482 PUSH1 0x44
0x484 ADD
0x485 PUSH1 0x0
0x487 PUSH1 0x40
0x489 MLOAD
0x48a DUP1
0x48b DUP4
0x48c SUB
0x48d DUP2
0x48e PUSH1 0x0
0x490 DUP8
0x491 DUP1
0x492 EXTCODESIZE
0x493 ISZERO
0x494 ISZERO
0x495 PUSH2 0x49d
0x498 JUMPI
---
0x447: JUMPDEST 
0x448: V405 = 0x0
0x44a: V406 = S[0x0]
0x44b: V407 = 0x1
0x44d: V408 = 0xa0
0x44f: V409 = 0x2
0x451: V410 = EXP 0x2 0xa0
0x452: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x453: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x454: V413 = 0xa9059cbb
0x45b: V414 = 0x40
0x45d: V415 = M[0x40]
0x45e: V416 = 0xe0
0x460: V417 = 0x2
0x462: V418 = EXP 0x2 0xe0
0x463: V419 = 0xffffffff
0x469: V420 = AND 0xa9059cbb 0xffffffff
0x46a: V421 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x46c: M[V415] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x46d: V422 = 0x1
0x46f: V423 = 0xa0
0x471: V424 = 0x2
0x473: V425 = EXP 0x2 0xa0
0x474: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x477: V427 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x478: V428 = 0x4
0x47b: V429 = ADD V415 0x4
0x47c: M[V429] = V427
0x47d: V430 = 0x24
0x480: V431 = ADD V415 0x24
0x481: M[V431] = V281
0x482: V432 = 0x44
0x484: V433 = ADD 0x44 V415
0x485: V434 = 0x0
0x487: V435 = 0x40
0x489: V436 = M[0x40]
0x48c: V437 = SUB V433 V436
0x48e: V438 = 0x0
0x492: V439 = EXTCODESIZE V412
0x493: V440 = ISZERO V439
0x494: V441 = ISZERO V440
0x495: V442 = 0x49d
0x498: JUMPI 0x49d V441
---
Entry stack: [V13, 0x28e, V279, V281]
Stack pops: 2
Stack additions: [S1, S0, V412, 0xa9059cbb, V433, 0x0, V436, V437, V436, 0x0, V412]
Exit stack: [V13, 0x28e, V279, V281, V412, 0xa9059cbb, V433, 0x0, V436, V437, V436, 0x0, V412]

================================

Block 0x499
[0x499:0x49c]
---
Predecessors: [0x447]
Successors: []
---
0x499 PUSH1 0x0
0x49b DUP1
0x49c REVERT
---
0x499: V443 = 0x0
0x49c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28e, V279, V281, V412, 0xa9059cbb, V433, 0x0, V436, V437, V436, 0x0, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V279, V281, V412, 0xa9059cbb, V433, 0x0, V436, V437, V436, 0x0, V412]

================================

Block 0x49d
[0x49d:0x4a9]
---
Predecessors: [0x447]
Successors: [0x4aa, 0x4ae]
---
0x49d JUMPDEST
0x49e PUSH2 0x2c6
0x4a1 GAS
0x4a2 SUB
0x4a3 CALL
0x4a4 ISZERO
0x4a5 ISZERO
0x4a6 PUSH2 0x4ae
0x4a9 JUMPI
---
0x49d: JUMPDEST 
0x49e: V444 = 0x2c6
0x4a1: V445 = GAS
0x4a2: V446 = SUB V445 0x2c6
0x4a3: V447 = CALL V446 V412 0x0 V436 V437 V436 0x0
0x4a4: V448 = ISZERO V447
0x4a5: V449 = ISZERO V448
0x4a6: V450 = 0x4ae
0x4a9: JUMPI 0x4ae V449
---
Entry stack: [V13, 0x28e, V279, V281, V412, 0xa9059cbb, V433, 0x0, V436, V437, V436, 0x0, V412]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x28e, V279, V281, V412, 0xa9059cbb, V433]

================================

Block 0x4aa
[0x4aa:0x4ad]
---
Predecessors: [0x49d]
Successors: []
---
0x4aa PUSH1 0x0
0x4ac DUP1
0x4ad REVERT
---
0x4aa: V451 = 0x0
0x4ad: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28e, V279, V281, V412, 0xa9059cbb, V433]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V279, V281, V412, 0xa9059cbb, V433]

================================

Block 0x4ae
[0x4ae:0x4b4]
---
Predecessors: [0x49d]
Successors: [0x28e]
---
0x4ae JUMPDEST
0x4af POP
0x4b0 POP
0x4b1 POP
0x4b2 POP
0x4b3 POP
0x4b4 JUMP
---
0x4ae: JUMPDEST 
0x4b4: JUMP 0x28e
---
Entry stack: [V13, 0x28e, V279, V281, V412, 0xa9059cbb, V433]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x4b5
[0x4b5:0x4cb]
---
Predecessors: [0x2fb]
Successors: [0x4cc, 0x4d0]
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x1
0x4b8 SLOAD
0x4b9 CALLER
0x4ba PUSH1 0x1
0x4bc PUSH1 0xa0
0x4be PUSH1 0x2
0x4c0 EXP
0x4c1 SUB
0x4c2 SWAP1
0x4c3 DUP2
0x4c4 AND
0x4c5 SWAP2
0x4c6 AND
0x4c7 EQ
0x4c8 PUSH2 0x4d0
0x4cb JUMPI
---
0x4b5: JUMPDEST 
0x4b6: V452 = 0x1
0x4b8: V453 = S[0x1]
0x4b9: V454 = CALLER
0x4ba: V455 = 0x1
0x4bc: V456 = 0xa0
0x4be: V457 = 0x2
0x4c0: V458 = EXP 0x2 0xa0
0x4c1: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c4: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x4c6: V461 = AND V453 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V462 = EQ V461 V460
0x4c8: V463 = 0x4d0
0x4cb: JUMPI 0x4d0 V462
---
Entry stack: [V13, 0x28e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e]

================================

Block 0x4cc
[0x4cc:0x4cf]
---
Predecessors: [0x4b5]
Successors: []
---
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf REVERT
---
0x4cc: V464 = 0x0
0x4cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e]

================================

Block 0x4d0
[0x4d0:0x4dd]
---
Predecessors: [0x4b5]
Successors: []
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x2
0x4d3 SLOAD
0x4d4 PUSH1 0x1
0x4d6 PUSH1 0xa0
0x4d8 PUSH1 0x2
0x4da EXP
0x4db SUB
0x4dc AND
0x4dd SELFDESTRUCT
---
0x4d0: JUMPDEST 
0x4d1: V465 = 0x2
0x4d3: V466 = S[0x2]
0x4d4: V467 = 0x1
0x4d6: V468 = 0xa0
0x4d8: V469 = 0x2
0x4da: V470 = EXP 0x2 0xa0
0x4db: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4dc: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x4dd: SELFDESTRUCT V472
---
Entry stack: [V13, 0x28e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e]

================================

Block 0x4de
[0x4de:0x4ec]
---
Predecessors: [0x30e]
Successors: [0x253]
---
0x4de JUMPDEST
0x4df PUSH1 0x0
0x4e1 SLOAD
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0xa0
0x4e6 PUSH1 0x2
0x4e8 EXP
0x4e9 SUB
0x4ea AND
0x4eb DUP2
0x4ec JUMP
---
0x4de: JUMPDEST 
0x4df: V473 = 0x0
0x4e1: V474 = S[0x0]
0x4e2: V475 = 0x1
0x4e4: V476 = 0xa0
0x4e6: V477 = 0x2
0x4e8: V478 = EXP 0x2 0xa0
0x4e9: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x4ec: JUMP 0x253
---
Entry stack: [V13, 0x253]
Stack pops: 1
Stack additions: [S0, V480]
Exit stack: [V13, 0x253, V480]

================================

Block 0x4ed
[0x4ed:0x4fb]
---
Predecessors: [0x321]
Successors: [0x253]
---
0x4ed JUMPDEST
0x4ee PUSH1 0x2
0x4f0 SLOAD
0x4f1 PUSH1 0x1
0x4f3 PUSH1 0xa0
0x4f5 PUSH1 0x2
0x4f7 EXP
0x4f8 SUB
0x4f9 AND
0x4fa DUP2
0x4fb JUMP
---
0x4ed: JUMPDEST 
0x4ee: V481 = 0x2
0x4f0: V482 = S[0x2]
0x4f1: V483 = 0x1
0x4f3: V484 = 0xa0
0x4f5: V485 = 0x2
0x4f7: V486 = EXP 0x2 0xa0
0x4f8: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f9: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x4fb: JUMP 0x253
---
Entry stack: [V13, 0x253]
Stack pops: 1
Stack additions: [S0, V488]
Exit stack: [V13, 0x253, V488]

================================

Block 0x4fc
[0x4fc:0x512]
---
Predecessors: [0x334]
Successors: [0x513, 0x517]
---
0x4fc JUMPDEST
0x4fd PUSH1 0x1
0x4ff SLOAD
0x500 CALLER
0x501 PUSH1 0x1
0x503 PUSH1 0xa0
0x505 PUSH1 0x2
0x507 EXP
0x508 SUB
0x509 SWAP1
0x50a DUP2
0x50b AND
0x50c SWAP2
0x50d AND
0x50e EQ
0x50f PUSH2 0x517
0x512 JUMPI
---
0x4fc: JUMPDEST 
0x4fd: V489 = 0x1
0x4ff: V490 = S[0x1]
0x500: V491 = CALLER
0x501: V492 = 0x1
0x503: V493 = 0xa0
0x505: V494 = 0x2
0x507: V495 = EXP 0x2 0xa0
0x508: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50b: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x50d: V498 = AND V490 0xffffffffffffffffffffffffffffffffffffffff
0x50e: V499 = EQ V498 V497
0x50f: V500 = 0x517
0x512: JUMPI 0x517 V499
---
Entry stack: [V13, 0x28e, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V307]

================================

Block 0x513
[0x513:0x516]
---
Predecessors: [0x4fc]
Successors: []
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 REVERT
---
0x513: V501 = 0x0
0x516: REVERT 0x0 0x0
---
Entry stack: [V13, 0x28e, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x28e, V307]

================================

Block 0x517
[0x517:0x51b]
---
Predecessors: [0x4fc]
Successors: [0x28e]
---
0x517 JUMPDEST
0x518 PUSH1 0x3
0x51a SSTORE
0x51b JUMP
---
0x517: JUMPDEST 
0x518: V502 = 0x3
0x51a: S[0x3] = V307
0x51b: JUMP 0x28e
---
Entry stack: [V13, 0x28e, V307]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x51c
[0x51c:0x54c]
---
Predecessors: []
Successors: []
---
0x51c STOP
0x51d LOG1
0x51e PUSH6 0x627a7a723058
0x525 SHA3
0x526 PUSH13 0x6158a897affd7a5d773fd81d5a
0x534 MISSING 0xf7
0x535 DUP9
0x536 MISSING 0xe3
0x537 MISSING 0xdb
0x538 MSIZE
0x539 NOT
0x53a MISSING 0xcd
0x53b MISSING 0xfb
0x53c MISSING 0x1e
0x53d PUSH6 0xff82d1f79434
0x544 MISSING 0xac
0x545 PUSH7 0x29
---
0x51c: STOP 
0x51d: LOG S0 S1 S2
0x51e: V503 = 0x627a7a723058
0x525: V504 = SHA3 0x627a7a723058 S3
0x526: V505 = 0x6158a897affd7a5d773fd81d5a
0x534: MISSING 0xf7
0x536: MISSING 0xe3
0x537: MISSING 0xdb
0x538: V506 = MSIZE
0x539: V507 = NOT V506
0x53a: MISSING 0xcd
0x53b: MISSING 0xfb
0x53c: MISSING 0x1e
0x53d: V508 = 0xff82d1f79434
0x544: MISSING 0xac
0x545: V509 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6158a897affd7a5d773fd81d5a, V504, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, V507, 0xff82d1f79434, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x240
Exit block: 0x253
Body: 0x240, 0x247, 0x24b, 0x253, 0x33f

Function 1:
Public function signature: 0x13af4035
Entry block: 0x26f
Exit block: 0x28e
Body: 0x26f, 0x276, 0x27a, 0x28e, 0x34e, 0x365, 0x369

Function 2:
Public function signature: 0x144fa6d7
Entry block: 0x290
Exit block: 0x28e
Body: 0x28e, 0x290, 0x297, 0x29b, 0x398, 0x3af, 0x3b3

Function 3:
Public function signature: 0x3f516018
Entry block: 0x2af
Exit block: 0x28e
Body: 0x28e, 0x2af, 0x2b6, 0x2ba, 0x3e2, 0x3f9, 0x3fd

Function 4:
Public function signature: 0x412664ae
Entry block: 0x2ce
Exit block: 0x28e
Body: 0x28e, 0x2ce, 0x2d5, 0x2d9, 0x42c, 0x443, 0x447, 0x499, 0x49d, 0x4aa, 0x4ae

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x2f0
Exit block: 0x4cc
Body: 0x2f0, 0x2f7, 0x2fb, 0x4b5, 0x4cc, 0x4d0

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x303
Exit block: 0x253
Body: 0x253, 0x303, 0x30a, 0x30e, 0x4de

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x316
Exit block: 0x253
Body: 0x253, 0x316, 0x31d, 0x321, 0x4ed

Function 8:
Public function signature: 0x91b7f5ed
Entry block: 0x329
Exit block: 0x28e
Body: 0x28e, 0x329, 0x330, 0x334, 0x4fc, 0x513, 0x517

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x23c
Body: 0x7f, 0x8b, 0x8f, 0x9b, 0x9f, 0xb8, 0xc0, 0xc6, 0xce, 0xdc, 0xe4, 0xea, 0xf2, 0x100, 0x108, 0x10e, 0x116, 0x124, 0x12c, 0x132, 0x13a, 0x146, 0x14a, 0x19c, 0x1a0, 0x1ad, 0x1b1, 0x238, 0x23c

