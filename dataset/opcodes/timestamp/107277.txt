args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/8/107277.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x280]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x280
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x280
0x24: JUMPI 0x280 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x295]
---
0x25 DUP1
0x26 PUSH4 0x263379b
0x2b EQ
0x2c PUSH2 0x295
0x2f JUMPI
---
0x26: V16 = 0x263379b
0x2b: V17 = EQ 0x263379b V12
0x2c: V18 = 0x295
0x2f: JUMPI 0x295 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x2aa]
---
0x30 DUP1
0x31 PUSH4 0x6fdde03
0x36 EQ
0x37 PUSH2 0x2aa
0x3a JUMPI
---
0x31: V19 = 0x6fdde03
0x36: V20 = EQ 0x6fdde03 V12
0x37: V21 = 0x2aa
0x3a: JUMPI 0x2aa V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x335]
---
0x3b DUP1
0x3c PUSH4 0x29dcb0cf
0x41 EQ
0x42 PUSH2 0x335
0x45 JUMPI
---
0x3c: V22 = 0x29dcb0cf
0x41: V23 = EQ 0x29dcb0cf V12
0x42: V24 = 0x335
0x45: JUMPI 0x335 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x35a]
---
0x46 DUP1
0x47 PUSH4 0x38af3eed
0x4c EQ
0x4d PUSH2 0x35a
0x50 JUMPI
---
0x47: V25 = 0x38af3eed
0x4c: V26 = EQ 0x38af3eed V12
0x4d: V27 = 0x35a
0x50: JUMPI 0x35a V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x389]
---
0x51 DUP1
0x52 PUSH4 0x6e66f6e9
0x57 EQ
0x58 PUSH2 0x389
0x5b JUMPI
---
0x52: V28 = 0x6e66f6e9
0x57: V29 = EQ 0x6e66f6e9 V12
0x58: V30 = 0x389
0x5b: JUMPI 0x389 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x3b8]
---
0x5c DUP1
0x5d PUSH4 0x70a08231
0x62 EQ
0x63 PUSH2 0x3b8
0x66 JUMPI
---
0x5d: V31 = 0x70a08231
0x62: V32 = EQ 0x70a08231 V12
0x63: V33 = 0x3b8
0x66: JUMPI 0x3b8 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x3e9]
---
0x67 DUP1
0x68 PUSH4 0x7a3a0e84
0x6d EQ
0x6e PUSH2 0x3e9
0x71 JUMPI
---
0x68: V34 = 0x7a3a0e84
0x6d: V35 = EQ 0x7a3a0e84 V12
0x6e: V36 = 0x3e9
0x71: JUMPI 0x3e9 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x40e]
---
0x72 DUP1
0x73 PUSH4 0x7b3e5e7b
0x78 EQ
0x79 PUSH2 0x40e
0x7c JUMPI
---
0x73: V37 = 0x7b3e5e7b
0x78: V38 = EQ 0x7b3e5e7b V12
0x79: V39 = 0x40e
0x7c: JUMPI 0x40e V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x433]
---
0x7d DUP1
0x7e PUSH4 0xa035b1fe
0x83 EQ
0x84 PUSH2 0x433
0x87 JUMPI
---
0x7e: V40 = 0xa035b1fe
0x83: V41 = EQ 0xa035b1fe V12
0x84: V42 = 0x433
0x87: JUMPI 0x433 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x458]
---
0x88 DUP1
0x89 PUSH4 0xb31f8f93
0x8e EQ
0x8f PUSH2 0x458
0x92 JUMPI
---
0x89: V43 = 0xb31f8f93
0x8e: V44 = EQ 0xb31f8f93 V12
0x8f: V45 = 0x458
0x92: JUMPI 0x458 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x47d]
---
0x93 DUP1
0x94 PUSH4 0xccb07cef
0x99 EQ
0x9a PUSH2 0x47d
0x9d JUMPI
---
0x94: V46 = 0xccb07cef
0x99: V47 = EQ 0xccb07cef V12
0x9a: V48 = 0x47d
0x9d: JUMPI 0x47d V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x4a4]
---
0x9e DUP1
0x9f PUSH4 0xd424f628
0xa4 EQ
0xa5 PUSH2 0x4a4
0xa8 JUMPI
---
0x9f: V49 = 0xd424f628
0xa4: V50 = EQ 0xd424f628 V12
0xa5: V51 = 0x4a4
0xa8: JUMPI 0x4a4 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x4cb]
---
0xa9 DUP1
0xaa PUSH4 0xfd6133a6
0xaf EQ
0xb0 PUSH2 0x4cb
0xb3 JUMPI
---
0xaa: V52 = 0xfd6133a6
0xaf: V53 = EQ 0xfd6133a6 V12
0xb0: V54 = 0x4cb
0xb3: JUMPI 0x4cb V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x4e0]
---
0xb4 DUP1
0xb5 PUSH4 0xfd6b7ef8
0xba EQ
0xbb PUSH2 0x4e0
0xbe JUMPI
---
0xb5: V55 = 0xfd6b7ef8
0xba: V56 = EQ 0xfd6b7ef8 V12
0xbb: V57 = 0x4e0
0xbe: JUMPI 0x4e0 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc3]
---
0xbf JUMPDEST
0xc0 PUSH2 0x27e
---
0xbf: JUMPDEST 
0xc0: V58 = 0x27e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27e]
Exit stack: [V12, 0x27e]

================================

Block 0xc3
[0xc3:0xd6]
---
Predecessors: [0xbf]
Successors: [0xd7, 0xdb]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x9
0xc6 SLOAD
0xc7 PUSH1 0x0
0xc9 SWAP1
0xca PUSH2 0x100
0xcd SWAP1
0xce DIV
0xcf PUSH1 0xff
0xd1 AND
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xc3: JUMPDEST 
0xc4: V59 = 0x9
0xc6: V60 = S[0x9]
0xc7: V61 = 0x0
0xca: V62 = 0x100
0xce: V63 = DIV V60 0x100
0xcf: V64 = 0xff
0xd1: V65 = AND 0xff V63
0xd2: V66 = ISZERO V65
0xd3: V67 = 0xdb
0xd6: JUMPI 0xdb V66
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x27e, 0x0]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xc3]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V68 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, 0x0]

================================

Block 0xdb
[0xdb:0xe6]
---
Predecessors: [0xc3]
Successors: [0xe7, 0xe8]
---
0xdb JUMPDEST
0xdc PUSH1 0x5
0xde SLOAD
0xdf DUP2
0xe0 DUP2
0xe1 ISZERO
0xe2 ISZERO
0xe3 PUSH2 0xe8
0xe6 JUMPI
---
0xdb: JUMPDEST 
0xdc: V69 = 0x5
0xde: V70 = S[0x5]
0xe1: V71 = ISZERO V70
0xe2: V72 = ISZERO V71
0xe3: V73 = 0xe8
0xe6: JUMPI 0xe8 V72
---
Entry stack: [V12, 0x27e, 0x0]
Stack pops: 1
Stack additions: [S0, V70, S0]
Exit stack: [V12, 0x27e, 0x0, V70, 0x0]

================================

Block 0xe7
[0xe7:0xe7]
---
Predecessors: [0xdb]
Successors: []
---
0xe7 INVALID
---
0xe7: INVALID 
---
Entry stack: [V12, 0x27e, 0x0, V70, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, 0x0, V70, 0x0]

================================

Block 0xe8
[0xe8:0xf4]
---
Predecessors: [0xdb]
Successors: [0xf5, 0xf9]
---
0xe8 JUMPDEST
0xe9 DIV
0xea PUSH1 0x7
0xec SLOAD
0xed LT
0xee ISZERO
0xef ISZERO
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xe8: JUMPDEST 
0xe9: V74 = DIV 0x0 V70
0xea: V75 = 0x7
0xec: V76 = S[0x7]
0xed: V77 = LT V76 V74
0xee: V78 = ISZERO V77
0xef: V79 = ISZERO V78
0xf0: V80 = ISZERO V79
0xf1: V81 = 0xf9
0xf4: JUMPI 0xf9 V80
---
Entry stack: [V12, 0x27e, 0x0, V70, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x27e, 0x0]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xe8]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V82 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, 0x0]

================================

Block 0xf9
[0xf9:0x13d]
---
Predecessors: [0xe8]
Successors: [0x13e, 0x13f]
---
0xf9 JUMPDEST
0xfa POP
0xfb PUSH1 0x1
0xfd PUSH1 0xa0
0xff PUSH1 0x2
0x101 EXP
0x102 SUB
0x103 CALLER
0x104 DUP2
0x105 DUP2
0x106 AND
0x107 PUSH1 0x0
0x109 SWAP1
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x8
0x10e PUSH1 0x20
0x110 MSTORE
0x111 PUSH1 0x40
0x113 SWAP1
0x114 SHA3
0x115 DUP1
0x116 SLOAD
0x117 CALLVALUE
0x118 SWAP1
0x119 DUP2
0x11a ADD
0x11b SWAP1
0x11c SWAP2
0x11d SSTORE
0x11e PUSH1 0x3
0x120 DUP1
0x121 SLOAD
0x122 DUP3
0x123 ADD
0x124 SWAP1
0x125 SSTORE
0x126 PUSH1 0x6
0x128 SLOAD
0x129 PUSH1 0x5
0x12b SLOAD
0x12c SWAP2
0x12d SWAP4
0x12e AND
0x12f SWAP2
0x130 PUSH4 0xa9059cbb
0x135 SWAP2
0x136 DUP5
0x137 DUP2
0x138 ISZERO
0x139 ISZERO
0x13a PUSH2 0x13f
0x13d JUMPI
---
0xf9: JUMPDEST 
0xfb: V83 = 0x1
0xfd: V84 = 0xa0
0xff: V85 = 0x2
0x101: V86 = EXP 0x2 0xa0
0x102: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x103: V88 = CALLER
0x106: V89 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x107: V90 = 0x0
0x10b: M[0x0] = V89
0x10c: V91 = 0x8
0x10e: V92 = 0x20
0x110: M[0x20] = 0x8
0x111: V93 = 0x40
0x114: V94 = SHA3 0x0 0x40
0x116: V95 = S[V94]
0x117: V96 = CALLVALUE
0x11a: V97 = ADD V96 V95
0x11d: S[V94] = V97
0x11e: V98 = 0x3
0x121: V99 = S[0x3]
0x123: V100 = ADD V96 V99
0x125: S[0x3] = V100
0x126: V101 = 0x6
0x128: V102 = S[0x6]
0x129: V103 = 0x5
0x12b: V104 = S[0x5]
0x12e: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x130: V106 = 0xa9059cbb
0x138: V107 = ISZERO V104
0x139: V108 = ISZERO V107
0x13a: V109 = 0x13f
0x13d: JUMPI 0x13f V108
---
Entry stack: [V12, 0x27e, 0x0]
Stack pops: 1
Stack additions: [V96, V105, 0xa9059cbb, V88, V104, V96]
Exit stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V88, V104, V96]

================================

Block 0x13e
[0x13e:0x13e]
---
Predecessors: [0xf9]
Successors: []
---
0x13e INVALID
---
0x13e: INVALID 
---
Entry stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V88, V104, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V88, V104, V96]

================================

Block 0x13f
[0x13f:0x17e]
---
Predecessors: [0xf9]
Successors: [0x17f, 0x183]
---
0x13f JUMPDEST
0x140 DIV
0x141 PUSH1 0x40
0x143 MLOAD
0x144 PUSH1 0xe0
0x146 PUSH1 0x2
0x148 EXP
0x149 PUSH4 0xffffffff
0x14e DUP6
0x14f AND
0x150 MUL
0x151 DUP2
0x152 MSTORE
0x153 PUSH1 0x1
0x155 PUSH1 0xa0
0x157 PUSH1 0x2
0x159 EXP
0x15a SUB
0x15b SWAP1
0x15c SWAP3
0x15d AND
0x15e PUSH1 0x4
0x160 DUP4
0x161 ADD
0x162 MSTORE
0x163 PUSH1 0x24
0x165 DUP3
0x166 ADD
0x167 MSTORE
0x168 PUSH1 0x44
0x16a ADD
0x16b PUSH1 0x0
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 DUP4
0x172 SUB
0x173 DUP2
0x174 PUSH1 0x0
0x176 DUP8
0x177 DUP1
0x178 EXTCODESIZE
0x179 ISZERO
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x13f: JUMPDEST 
0x140: V110 = DIV V96 V104
0x141: V111 = 0x40
0x143: V112 = M[0x40]
0x144: V113 = 0xe0
0x146: V114 = 0x2
0x148: V115 = EXP 0x2 0xe0
0x149: V116 = 0xffffffff
0x14f: V117 = AND 0xa9059cbb 0xffffffff
0x150: V118 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x152: M[V112] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x153: V119 = 0x1
0x155: V120 = 0xa0
0x157: V121 = 0x2
0x159: V122 = EXP 0x2 0xa0
0x15a: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V124 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V125 = 0x4
0x161: V126 = ADD V112 0x4
0x162: M[V126] = V124
0x163: V127 = 0x24
0x166: V128 = ADD V112 0x24
0x167: M[V128] = V110
0x168: V129 = 0x44
0x16a: V130 = ADD 0x44 V112
0x16b: V131 = 0x0
0x16d: V132 = 0x40
0x16f: V133 = M[0x40]
0x172: V134 = SUB V130 V133
0x174: V135 = 0x0
0x178: V136 = EXTCODESIZE V105
0x179: V137 = ISZERO V136
0x17a: V138 = ISZERO V137
0x17b: V139 = 0x183
0x17e: JUMPI 0x183 V138
---
Entry stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V88, V104, V96]
Stack pops: 5
Stack additions: [S4, S3, V130, 0x0, V133, V134, V133, 0x0, S4]
Exit stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V130, 0x0, V133, V134, V133, 0x0, V105]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x13f]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V140 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V130, 0x0, V133, V134, V133, 0x0, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V130, 0x0, V133, V134, V133, 0x0, V105]

================================

Block 0x183
[0x183:0x18f]
---
Predecessors: [0x13f]
Successors: [0x190, 0x194]
---
0x183 JUMPDEST
0x184 PUSH2 0x2c6
0x187 GAS
0x188 SUB
0x189 CALL
0x18a ISZERO
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x183: JUMPDEST 
0x184: V141 = 0x2c6
0x187: V142 = GAS
0x188: V143 = SUB V142 0x2c6
0x189: V144 = CALL V143 V105 0x0 V133 V134 V133 0x0
0x18a: V145 = ISZERO V144
0x18b: V146 = ISZERO V145
0x18c: V147 = 0x194
0x18f: JUMPI 0x194 V146
---
Entry stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V130, 0x0, V133, V134, V133, 0x0, V105]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V130]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x183]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V148 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V130]

================================

Block 0x194
[0x194:0x23f]
---
Predecessors: [0x183]
Successors: [0x240, 0x244]
---
0x194 JUMPDEST
0x195 POP
0x196 POP
0x197 POP
0x198 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1b9 CALLER
0x1ba DUP3
0x1bb PUSH1 0x1
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 SWAP1
0x1c9 SWAP4
0x1ca AND
0x1cb DUP4
0x1cc MSTORE
0x1cd PUSH1 0x20
0x1cf DUP4
0x1d0 ADD
0x1d1 SWAP2
0x1d2 SWAP1
0x1d3 SWAP2
0x1d4 MSTORE
0x1d5 ISZERO
0x1d6 ISZERO
0x1d7 PUSH1 0x40
0x1d9 DUP1
0x1da DUP4
0x1db ADD
0x1dc SWAP2
0x1dd SWAP1
0x1de SWAP2
0x1df MSTORE
0x1e0 PUSH1 0x60
0x1e2 SWAP1
0x1e3 SWAP2
0x1e4 ADD
0x1e5 SWAP1
0x1e6 MLOAD
0x1e7 DUP1
0x1e8 SWAP2
0x1e9 SUB
0x1ea SWAP1
0x1eb LOG1
0x1ec PUSH1 0x6
0x1ee SLOAD
0x1ef PUSH1 0x1
0x1f1 PUSH1 0xa0
0x1f3 PUSH1 0x2
0x1f5 EXP
0x1f6 SUB
0x1f7 AND
0x1f8 PUSH4 0x9b96eece
0x1fd ADDRESS
0x1fe PUSH1 0x0
0x200 PUSH1 0x40
0x202 MLOAD
0x203 PUSH1 0x20
0x205 ADD
0x206 MSTORE
0x207 PUSH1 0x40
0x209 MLOAD
0x20a PUSH1 0xe0
0x20c PUSH1 0x2
0x20e EXP
0x20f PUSH4 0xffffffff
0x214 DUP5
0x215 AND
0x216 MUL
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 SWAP1
0x222 SWAP2
0x223 AND
0x224 PUSH1 0x4
0x226 DUP3
0x227 ADD
0x228 MSTORE
0x229 PUSH1 0x24
0x22b ADD
0x22c PUSH1 0x20
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP1
0x232 DUP4
0x233 SUB
0x234 DUP2
0x235 PUSH1 0x0
0x237 DUP8
0x238 DUP1
0x239 EXTCODESIZE
0x23a ISZERO
0x23b ISZERO
0x23c PUSH2 0x244
0x23f JUMPI
---
0x194: JUMPDEST 
0x198: V149 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1b9: V150 = CALLER
0x1bb: V151 = 0x1
0x1bd: V152 = 0x40
0x1bf: V153 = M[0x40]
0x1c0: V154 = 0x1
0x1c2: V155 = 0xa0
0x1c4: V156 = 0x2
0x1c6: V157 = EXP 0x2 0xa0
0x1c7: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ca: V159 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: M[V153] = V159
0x1cd: V160 = 0x20
0x1d0: V161 = ADD V153 0x20
0x1d4: M[V161] = V96
0x1d5: V162 = ISZERO 0x1
0x1d6: V163 = ISZERO 0x0
0x1d7: V164 = 0x40
0x1db: V165 = ADD V153 0x40
0x1df: M[V165] = 0x1
0x1e0: V166 = 0x60
0x1e4: V167 = ADD V153 0x60
0x1e6: V168 = M[0x40]
0x1e9: V169 = SUB V167 V168
0x1eb: LOG V168 V169 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1ec: V170 = 0x6
0x1ee: V171 = S[0x6]
0x1ef: V172 = 0x1
0x1f1: V173 = 0xa0
0x1f3: V174 = 0x2
0x1f5: V175 = EXP 0x2 0xa0
0x1f6: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f7: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x1f8: V178 = 0x9b96eece
0x1fd: V179 = ADDRESS
0x1fe: V180 = 0x0
0x200: V181 = 0x40
0x202: V182 = M[0x40]
0x203: V183 = 0x20
0x205: V184 = ADD 0x20 V182
0x206: M[V184] = 0x0
0x207: V185 = 0x40
0x209: V186 = M[0x40]
0x20a: V187 = 0xe0
0x20c: V188 = 0x2
0x20e: V189 = EXP 0x2 0xe0
0x20f: V190 = 0xffffffff
0x215: V191 = AND 0x9b96eece 0xffffffff
0x216: V192 = MUL 0x9b96eece 0x100000000000000000000000000000000000000000000000000000000
0x218: M[V186] = 0x9b96eece00000000000000000000000000000000000000000000000000000000
0x219: V193 = 0x1
0x21b: V194 = 0xa0
0x21d: V195 = 0x2
0x21f: V196 = EXP 0x2 0xa0
0x220: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V198 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x224: V199 = 0x4
0x227: V200 = ADD V186 0x4
0x228: M[V200] = V198
0x229: V201 = 0x24
0x22b: V202 = ADD 0x24 V186
0x22c: V203 = 0x20
0x22e: V204 = 0x40
0x230: V205 = M[0x40]
0x233: V206 = SUB V202 V205
0x235: V207 = 0x0
0x239: V208 = EXTCODESIZE V177
0x23a: V209 = ISZERO V208
0x23b: V210 = ISZERO V209
0x23c: V211 = 0x244
0x23f: JUMPI 0x244 V210
---
Entry stack: [V12, 0x27e, V96, V105, 0xa9059cbb, V130]
Stack pops: 4
Stack additions: [S3, V177, 0x9b96eece, V202, 0x20, V205, V206, V205, 0x0, V177]
Exit stack: [V12, 0x27e, V96, V177, 0x9b96eece, V202, 0x20, V205, V206, V205, 0x0, V177]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x194]
Successors: []
---
0x240 PUSH1 0x0
0x242 DUP1
0x243 REVERT
---
0x240: V212 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, V96, V177, 0x9b96eece, V202, 0x20, V205, V206, V205, 0x0, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V96, V177, 0x9b96eece, V202, 0x20, V205, V206, V205, 0x0, V177]

================================

Block 0x244
[0x244:0x250]
---
Predecessors: [0x194]
Successors: [0x251, 0x255]
---
0x244 JUMPDEST
0x245 PUSH2 0x2c6
0x248 GAS
0x249 SUB
0x24a CALL
0x24b ISZERO
0x24c ISZERO
0x24d PUSH2 0x255
0x250 JUMPI
---
0x244: JUMPDEST 
0x245: V213 = 0x2c6
0x248: V214 = GAS
0x249: V215 = SUB V214 0x2c6
0x24a: V216 = CALL V215 V177 0x0 V205 V206 V205 0x20
0x24b: V217 = ISZERO V216
0x24c: V218 = ISZERO V217
0x24d: V219 = 0x255
0x250: JUMPI 0x255 V218
---
Entry stack: [V12, 0x27e, V96, V177, 0x9b96eece, V202, 0x20, V205, V206, V205, 0x0, V177]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x27e, V96, V177, 0x9b96eece, V202]

================================

Block 0x251
[0x251:0x254]
---
Predecessors: [0x244]
Successors: []
---
0x251 PUSH1 0x0
0x253 DUP1
0x254 REVERT
---
0x251: V220 = 0x0
0x254: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, V96, V177, 0x9b96eece, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V96, V177, 0x9b96eece, V202]

================================

Block 0x255
[0x255:0x26a]
---
Predecessors: [0x244]
Successors: [0x26b, 0x27a]
---
0x255 JUMPDEST
0x256 POP
0x257 POP
0x258 POP
0x259 PUSH1 0x40
0x25b MLOAD
0x25c DUP1
0x25d MLOAD
0x25e PUSH1 0x7
0x260 DUP2
0x261 SWAP1
0x262 SSTORE
0x263 ISZERO
0x264 ISZERO
0x265 SWAP1
0x266 POP
0x267 PUSH2 0x27a
0x26a JUMPI
---
0x255: JUMPDEST 
0x259: V221 = 0x40
0x25b: V222 = M[0x40]
0x25d: V223 = M[V222]
0x25e: V224 = 0x7
0x262: S[0x7] = V223
0x263: V225 = ISZERO V223
0x264: V226 = ISZERO V225
0x267: V227 = 0x27a
0x26a: JUMPI 0x27a V226
---
Entry stack: [V12, 0x27e, V96, V177, 0x9b96eece, V202]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x27e, V96]

================================

Block 0x26b
[0x26b:0x279]
---
Predecessors: [0x255]
Successors: [0x27a]
---
0x26b PUSH1 0x9
0x26d DUP1
0x26e SLOAD
0x26f PUSH2 0xff00
0x272 NOT
0x273 AND
0x274 PUSH2 0x100
0x277 OR
0x278 SWAP1
0x279 SSTORE
---
0x26b: V228 = 0x9
0x26e: V229 = S[0x9]
0x26f: V230 = 0xff00
0x272: V231 = NOT 0xff00
0x273: V232 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V229
0x274: V233 = 0x100
0x277: V234 = OR 0x100 V232
0x279: S[0x9] = V234
---
Entry stack: [V12, 0x27e, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V96]

================================

Block 0x27a
[0x27a:0x27a]
---
Predecessors: [0x255, 0x26b, 0x817, 0x918, 0x951]
Successors: [0x27b]
---
0x27a JUMPDEST
---
0x27a: JUMPDEST 
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x27b
[0x27b:0x27d]
---
Predecessors: [0x27a]
Successors: [0x27e]
---
0x27b JUMPDEST
0x27c POP
0x27d JUMP
---
0x27b: JUMPDEST 
0x27d: JUMP 0x27e
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x27e
[0x27e:0x27f]
---
Predecessors: [0x27b, 0x578, 0x699, 0x9c7]
Successors: []
---
0x27e JUMPDEST
0x27f STOP
---
0x27e: JUMPDEST 
0x27f: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x280
[0x280:0x286]
---
Predecessors: [0xb]
Successors: [0x287, 0x28b]
---
0x280 JUMPDEST
0x281 CALLVALUE
0x282 ISZERO
0x283 PUSH2 0x28b
0x286 JUMPI
---
0x280: JUMPDEST 
0x281: V235 = CALLVALUE
0x282: V236 = ISZERO V235
0x283: V237 = 0x28b
0x286: JUMPI 0x28b V236
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x287
[0x287:0x28a]
---
Predecessors: [0x280]
Successors: []
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
---
0x287: V238 = 0x0
0x28a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28b
[0x28b:0x292]
---
Predecessors: [0x280]
Successors: [0x4f5]
---
0x28b JUMPDEST
0x28c PUSH2 0x27e
0x28f PUSH2 0x4f5
0x292 JUMP
---
0x28b: JUMPDEST 
0x28c: V239 = 0x27e
0x28f: V240 = 0x4f5
0x292: JUMP 0x4f5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27e]
Exit stack: [V12, 0x27e]

================================

Block 0x293
[0x293:0x294]
---
Predecessors: []
Successors: []
---
0x293 JUMPDEST
0x294 STOP
---
0x293: JUMPDEST 
0x294: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x295
[0x295:0x29b]
---
Predecessors: [0x25]
Successors: [0x29c, 0x2a0]
---
0x295 JUMPDEST
0x296 CALLVALUE
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x295: JUMPDEST 
0x296: V241 = CALLVALUE
0x297: V242 = ISZERO V241
0x298: V243 = 0x2a0
0x29b: JUMPI 0x2a0 V242
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x295]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V244 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x295]
Successors: [0x57a]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x27e
0x2a4 PUSH2 0x57a
0x2a7 JUMP
---
0x2a0: JUMPDEST 
0x2a1: V245 = 0x27e
0x2a4: V246 = 0x57a
0x2a7: JUMP 0x57a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27e]
Exit stack: [V12, 0x27e]

================================

Block 0x2a8
[0x2a8:0x2a9]
---
Predecessors: []
Successors: []
---
0x2a8 JUMPDEST
0x2a9 STOP
---
0x2a8: JUMPDEST 
0x2a9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2aa
[0x2aa:0x2b0]
---
Predecessors: [0x30]
Successors: [0x2b1, 0x2b5]
---
0x2aa JUMPDEST
0x2ab CALLVALUE
0x2ac ISZERO
0x2ad PUSH2 0x2b5
0x2b0 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V247 = CALLVALUE
0x2ac: V248 = ISZERO V247
0x2ad: V249 = 0x2b5
0x2b0: JUMPI 0x2b5 V248
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x2aa]
Successors: []
---
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 REVERT
---
0x2b1: V250 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b5
[0x2b5:0x2bc]
---
Predecessors: [0x2aa]
Successors: [0x69b]
---
0x2b5 JUMPDEST
0x2b6 PUSH2 0x2bd
0x2b9 PUSH2 0x69b
0x2bc JUMP
---
0x2b5: JUMPDEST 
0x2b6: V251 = 0x2bd
0x2b9: V252 = 0x69b
0x2bc: JUMP 0x69b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2bd]
Exit stack: [V12, 0x2bd]

================================

Block 0x2bd
[0x2bd:0x2e0]
---
Predecessors: [0x731]
Successors: [0x2e1]
---
0x2bd JUMPDEST
0x2be PUSH1 0x40
0x2c0 MLOAD
0x2c1 PUSH1 0x20
0x2c3 DUP1
0x2c4 DUP3
0x2c5 MSTORE
0x2c6 DUP2
0x2c7 SWAP1
0x2c8 DUP2
0x2c9 ADD
0x2ca DUP4
0x2cb DUP2
0x2cc DUP2
0x2cd MLOAD
0x2ce DUP2
0x2cf MSTORE
0x2d0 PUSH1 0x20
0x2d2 ADD
0x2d3 SWAP2
0x2d4 POP
0x2d5 DUP1
0x2d6 MLOAD
0x2d7 SWAP1
0x2d8 PUSH1 0x20
0x2da ADD
0x2db SWAP1
0x2dc DUP1
0x2dd DUP4
0x2de DUP4
0x2df PUSH1 0x0
---
0x2bd: JUMPDEST 
0x2be: V253 = 0x40
0x2c0: V254 = M[0x40]
0x2c1: V255 = 0x20
0x2c5: M[V254] = 0x20
0x2c9: V256 = ADD V254 0x20
0x2cd: V257 = M[V657]
0x2cf: M[V256] = V257
0x2d0: V258 = 0x20
0x2d2: V259 = ADD 0x20 V256
0x2d6: V260 = M[V657]
0x2d8: V261 = 0x20
0x2da: V262 = ADD 0x20 V657
0x2df: V263 = 0x0
---
Entry stack: [V12, 0x2bd, V657]
Stack pops: 1
Stack additions: [S0, V254, V254, V259, V262, V260, V260, V259, V262, 0x0]
Exit stack: [V12, 0x2bd, V657, V254, V254, V259, V262, V260, V260, V259, V262, 0x0]

================================

Block 0x2e1
[0x2e1:0x2e9]
---
Predecessors: [0x2bd, 0x2f2]
Successors: [0x2ea, 0x2fa]
---
0x2e1 JUMPDEST
0x2e2 DUP4
0x2e3 DUP2
0x2e4 LT
0x2e5 ISZERO
0x2e6 PUSH2 0x2fa
0x2e9 JUMPI
---
0x2e1: JUMPDEST 
0x2e4: V264 = LT S0 V260
0x2e5: V265 = ISZERO V264
0x2e6: V266 = 0x2fa
0x2e9: JUMPI 0x2fa V265
---
Entry stack: [V12, 0x2bd, V657, V254, V254, V259, V262, V260, V260, V259, V262, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x2bd, V657, V254, V254, V259, V262, V260, V260, V259, V262, S0]

================================

Block 0x2ea
[0x2ea:0x2f1]
---
Predecessors: [0x2e1]
Successors: [0x2f2]
---
0x2ea DUP1
0x2eb DUP3
0x2ec ADD
0x2ed MLOAD
0x2ee DUP2
0x2ef DUP5
0x2f0 ADD
0x2f1 MSTORE
---
0x2ec: V267 = ADD V262 S0
0x2ed: V268 = M[V267]
0x2f0: V269 = ADD V259 S0
0x2f1: M[V269] = V268
---
Entry stack: [V12, 0x2bd, V657, V254, V254, V259, V262, V260, V260, V259, V262, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x2bd, V657, V254, V254, V259, V262, V260, V260, V259, V262, S0]

================================

Block 0x2f2
[0x2f2:0x2f9]
---
Predecessors: [0x2ea]
Successors: [0x2e1]
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x20
0x2f5 ADD
0x2f6 PUSH2 0x2e1
0x2f9 JUMP
---
0x2f2: JUMPDEST 
0x2f3: V270 = 0x20
0x2f5: V271 = ADD 0x20 S0
0x2f6: V272 = 0x2e1
0x2f9: JUMP 0x2e1
---
Entry stack: [V12, 0x2bd, V657, V254, V254, V259, V262, V260, V260, V259, V262, S0]
Stack pops: 1
Stack additions: [V271]
Exit stack: [V12, 0x2bd, V657, V254, V254, V259, V262, V260, V260, V259, V262, V271]

================================

Block 0x2fa
[0x2fa:0x30d]
---
Predecessors: [0x2e1]
Successors: [0x30e, 0x327]
---
0x2fa JUMPDEST
0x2fb POP
0x2fc POP
0x2fd POP
0x2fe POP
0x2ff SWAP1
0x300 POP
0x301 SWAP1
0x302 DUP2
0x303 ADD
0x304 SWAP1
0x305 PUSH1 0x1f
0x307 AND
0x308 DUP1
0x309 ISZERO
0x30a PUSH2 0x327
0x30d JUMPI
---
0x2fa: JUMPDEST 
0x303: V273 = ADD V260 V259
0x305: V274 = 0x1f
0x307: V275 = AND 0x1f V260
0x309: V276 = ISZERO V275
0x30a: V277 = 0x327
0x30d: JUMPI 0x327 V276
---
Entry stack: [V12, 0x2bd, V657, V254, V254, V259, V262, V260, V260, V259, V262, S0]
Stack pops: 7
Stack additions: [V273, V275]
Exit stack: [V12, 0x2bd, V657, V254, V254, V273, V275]

================================

Block 0x30e
[0x30e:0x326]
---
Predecessors: [0x2fa]
Successors: [0x327]
---
0x30e DUP1
0x30f DUP3
0x310 SUB
0x311 DUP1
0x312 MLOAD
0x313 PUSH1 0x1
0x315 DUP4
0x316 PUSH1 0x20
0x318 SUB
0x319 PUSH2 0x100
0x31c EXP
0x31d SUB
0x31e NOT
0x31f AND
0x320 DUP2
0x321 MSTORE
0x322 PUSH1 0x20
0x324 ADD
0x325 SWAP2
0x326 POP
---
0x310: V278 = SUB V273 V275
0x312: V279 = M[V278]
0x313: V280 = 0x1
0x316: V281 = 0x20
0x318: V282 = SUB 0x20 V275
0x319: V283 = 0x100
0x31c: V284 = EXP 0x100 V282
0x31d: V285 = SUB V284 0x1
0x31e: V286 = NOT V285
0x31f: V287 = AND V286 V279
0x321: M[V278] = V287
0x322: V288 = 0x20
0x324: V289 = ADD 0x20 V278
---
Entry stack: [V12, 0x2bd, V657, V254, V254, V273, V275]
Stack pops: 2
Stack additions: [V289, S0]
Exit stack: [V12, 0x2bd, V657, V254, V254, V289, V275]

================================

Block 0x327
[0x327:0x334]
---
Predecessors: [0x2fa, 0x30e]
Successors: []
---
0x327 JUMPDEST
0x328 POP
0x329 SWAP3
0x32a POP
0x32b POP
0x32c POP
0x32d PUSH1 0x40
0x32f MLOAD
0x330 DUP1
0x331 SWAP2
0x332 SUB
0x333 SWAP1
0x334 RETURN
---
0x327: JUMPDEST 
0x32d: V290 = 0x40
0x32f: V291 = M[0x40]
0x332: V292 = SUB S1 V291
0x334: RETURN V291 V292
---
Entry stack: [V12, 0x2bd, V657, V254, V254, S1, V275]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x2bd]

================================

Block 0x335
[0x335:0x33b]
---
Predecessors: [0x3b]
Successors: [0x33c, 0x340]
---
0x335 JUMPDEST
0x336 CALLVALUE
0x337 ISZERO
0x338 PUSH2 0x340
0x33b JUMPI
---
0x335: JUMPDEST 
0x336: V293 = CALLVALUE
0x337: V294 = ISZERO V293
0x338: V295 = 0x340
0x33b: JUMPI 0x340 V294
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33c
[0x33c:0x33f]
---
Predecessors: [0x335]
Successors: []
---
0x33c PUSH1 0x0
0x33e DUP1
0x33f REVERT
---
0x33c: V296 = 0x0
0x33f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x340
[0x340:0x347]
---
Predecessors: [0x335]
Successors: [0x739]
---
0x340 JUMPDEST
0x341 PUSH2 0x348
0x344 PUSH2 0x739
0x347 JUMP
---
0x340: JUMPDEST 
0x341: V297 = 0x348
0x344: V298 = 0x739
0x347: JUMP 0x739
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x348]
Exit stack: [V12, 0x348]

================================

Block 0x348
[0x348:0x359]
---
Predecessors: [0x739, 0x75d, 0x76f, 0x775, 0x77b, 0x781]
Successors: []
---
0x348 JUMPDEST
0x349 PUSH1 0x40
0x34b MLOAD
0x34c SWAP1
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x20
0x351 ADD
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 SWAP2
0x357 SUB
0x358 SWAP1
0x359 RETURN
---
0x348: JUMPDEST 
0x349: V299 = 0x40
0x34b: V300 = M[0x40]
0x34e: M[V300] = S0
0x34f: V301 = 0x20
0x351: V302 = ADD 0x20 V300
0x352: V303 = 0x40
0x354: V304 = M[0x40]
0x357: V305 = SUB V302 V304
0x359: RETURN V304 V305
---
Entry stack: [V12, 0x348, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x348]

================================

Block 0x35a
[0x35a:0x360]
---
Predecessors: [0x46]
Successors: [0x361, 0x365]
---
0x35a JUMPDEST
0x35b CALLVALUE
0x35c ISZERO
0x35d PUSH2 0x365
0x360 JUMPI
---
0x35a: JUMPDEST 
0x35b: V306 = CALLVALUE
0x35c: V307 = ISZERO V306
0x35d: V308 = 0x365
0x360: JUMPI 0x365 V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x361
[0x361:0x364]
---
Predecessors: [0x35a]
Successors: []
---
0x361 PUSH1 0x0
0x363 DUP1
0x364 REVERT
---
0x361: V309 = 0x0
0x364: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x365
[0x365:0x36c]
---
Predecessors: [0x35a]
Successors: [0x73f]
---
0x365 JUMPDEST
0x366 PUSH2 0x36d
0x369 PUSH2 0x73f
0x36c JUMP
---
0x365: JUMPDEST 
0x366: V310 = 0x36d
0x369: V311 = 0x73f
0x36c: JUMP 0x73f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x36d]
Exit stack: [V12, 0x36d]

================================

Block 0x36d
[0x36d:0x388]
---
Predecessors: [0x73f, 0x74e]
Successors: []
---
0x36d JUMPDEST
0x36e PUSH1 0x40
0x370 MLOAD
0x371 PUSH1 0x1
0x373 PUSH1 0xa0
0x375 PUSH1 0x2
0x377 EXP
0x378 SUB
0x379 SWAP1
0x37a SWAP2
0x37b AND
0x37c DUP2
0x37d MSTORE
0x37e PUSH1 0x20
0x380 ADD
0x381 PUSH1 0x40
0x383 MLOAD
0x384 DUP1
0x385 SWAP2
0x386 SUB
0x387 SWAP1
0x388 RETURN
---
0x36d: JUMPDEST 
0x36e: V312 = 0x40
0x370: V313 = M[0x40]
0x371: V314 = 0x1
0x373: V315 = 0xa0
0x375: V316 = 0x2
0x377: V317 = EXP 0x2 0xa0
0x378: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37b: V319 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x37d: M[V313] = V319
0x37e: V320 = 0x20
0x380: V321 = ADD 0x20 V313
0x381: V322 = 0x40
0x383: V323 = M[0x40]
0x386: V324 = SUB V321 V323
0x388: RETURN V323 V324
---
Entry stack: [V12, 0x36d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x36d]

================================

Block 0x389
[0x389:0x38f]
---
Predecessors: [0x51]
Successors: [0x390, 0x394]
---
0x389 JUMPDEST
0x38a CALLVALUE
0x38b ISZERO
0x38c PUSH2 0x394
0x38f JUMPI
---
0x389: JUMPDEST 
0x38a: V325 = CALLVALUE
0x38b: V326 = ISZERO V325
0x38c: V327 = 0x394
0x38f: JUMPI 0x394 V326
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x390
[0x390:0x393]
---
Predecessors: [0x389]
Successors: []
---
0x390 PUSH1 0x0
0x392 DUP1
0x393 REVERT
---
0x390: V328 = 0x0
0x393: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x394
[0x394:0x39b]
---
Predecessors: [0x389]
Successors: [0x74e]
---
0x394 JUMPDEST
0x395 PUSH2 0x36d
0x398 PUSH2 0x74e
0x39b JUMP
---
0x394: JUMPDEST 
0x395: V329 = 0x36d
0x398: V330 = 0x74e
0x39b: JUMP 0x74e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x36d]
Exit stack: [V12, 0x36d]

================================

Block 0x39c
[0x39c:0x3b7]
---
Predecessors: []
Successors: []
---
0x39c JUMPDEST
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 PUSH1 0x1
0x3a2 PUSH1 0xa0
0x3a4 PUSH1 0x2
0x3a6 EXP
0x3a7 SUB
0x3a8 SWAP1
0x3a9 SWAP2
0x3aa AND
0x3ab DUP2
0x3ac MSTORE
0x3ad PUSH1 0x20
0x3af ADD
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 DUP1
0x3b4 SWAP2
0x3b5 SUB
0x3b6 SWAP1
0x3b7 RETURN
---
0x39c: JUMPDEST 
0x39d: V331 = 0x40
0x39f: V332 = M[0x40]
0x3a0: V333 = 0x1
0x3a2: V334 = 0xa0
0x3a4: V335 = 0x2
0x3a6: V336 = EXP 0x2 0xa0
0x3a7: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3aa: V338 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: M[V332] = V338
0x3ad: V339 = 0x20
0x3af: V340 = ADD 0x20 V332
0x3b0: V341 = 0x40
0x3b2: V342 = M[0x40]
0x3b5: V343 = SUB V340 V342
0x3b7: RETURN V342 V343
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b8
[0x3b8:0x3be]
---
Predecessors: [0x5c]
Successors: [0x3bf, 0x3c3]
---
0x3b8 JUMPDEST
0x3b9 CALLVALUE
0x3ba ISZERO
0x3bb PUSH2 0x3c3
0x3be JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V344 = CALLVALUE
0x3ba: V345 = ISZERO V344
0x3bb: V346 = 0x3c3
0x3be: JUMPI 0x3c3 V345
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3bf
[0x3bf:0x3c2]
---
Predecessors: [0x3b8]
Successors: []
---
0x3bf PUSH1 0x0
0x3c1 DUP1
0x3c2 REVERT
---
0x3bf: V347 = 0x0
0x3c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c3
[0x3c3:0x3d6]
---
Predecessors: [0x3b8]
Successors: [0x75d]
---
0x3c3 JUMPDEST
0x3c4 PUSH2 0x348
0x3c7 PUSH1 0x1
0x3c9 PUSH1 0xa0
0x3cb PUSH1 0x2
0x3cd EXP
0x3ce SUB
0x3cf PUSH1 0x4
0x3d1 CALLDATALOAD
0x3d2 AND
0x3d3 PUSH2 0x75d
0x3d6 JUMP
---
0x3c3: JUMPDEST 
0x3c4: V348 = 0x348
0x3c7: V349 = 0x1
0x3c9: V350 = 0xa0
0x3cb: V351 = 0x2
0x3cd: V352 = EXP 0x2 0xa0
0x3ce: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cf: V354 = 0x4
0x3d1: V355 = CALLDATALOAD 0x4
0x3d2: V356 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V357 = 0x75d
0x3d6: JUMP 0x75d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x348, V356]
Exit stack: [V12, 0x348, V356]

================================

Block 0x3d7
[0x3d7:0x3e8]
---
Predecessors: []
Successors: []
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x40
0x3da MLOAD
0x3db SWAP1
0x3dc DUP2
0x3dd MSTORE
0x3de PUSH1 0x20
0x3e0 ADD
0x3e1 PUSH1 0x40
0x3e3 MLOAD
0x3e4 DUP1
0x3e5 SWAP2
0x3e6 SUB
0x3e7 SWAP1
0x3e8 RETURN
---
0x3d7: JUMPDEST 
0x3d8: V358 = 0x40
0x3da: V359 = M[0x40]
0x3dd: M[V359] = S0
0x3de: V360 = 0x20
0x3e0: V361 = ADD 0x20 V359
0x3e1: V362 = 0x40
0x3e3: V363 = M[0x40]
0x3e6: V364 = SUB V361 V363
0x3e8: RETURN V363 V364
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e9
[0x3e9:0x3ef]
---
Predecessors: [0x67]
Successors: [0x3f0, 0x3f4]
---
0x3e9 JUMPDEST
0x3ea CALLVALUE
0x3eb ISZERO
0x3ec PUSH2 0x3f4
0x3ef JUMPI
---
0x3e9: JUMPDEST 
0x3ea: V365 = CALLVALUE
0x3eb: V366 = ISZERO V365
0x3ec: V367 = 0x3f4
0x3ef: JUMPI 0x3f4 V366
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f0
[0x3f0:0x3f3]
---
Predecessors: [0x3e9]
Successors: []
---
0x3f0 PUSH1 0x0
0x3f2 DUP1
0x3f3 REVERT
---
0x3f0: V368 = 0x0
0x3f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f4
[0x3f4:0x3fb]
---
Predecessors: [0x3e9]
Successors: [0x76f]
---
0x3f4 JUMPDEST
0x3f5 PUSH2 0x348
0x3f8 PUSH2 0x76f
0x3fb JUMP
---
0x3f4: JUMPDEST 
0x3f5: V369 = 0x348
0x3f8: V370 = 0x76f
0x3fb: JUMP 0x76f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x348]
Exit stack: [V12, 0x348]

================================

Block 0x3fc
[0x3fc:0x40d]
---
Predecessors: []
Successors: []
---
0x3fc JUMPDEST
0x3fd PUSH1 0x40
0x3ff MLOAD
0x400 SWAP1
0x401 DUP2
0x402 MSTORE
0x403 PUSH1 0x20
0x405 ADD
0x406 PUSH1 0x40
0x408 MLOAD
0x409 DUP1
0x40a SWAP2
0x40b SUB
0x40c SWAP1
0x40d RETURN
---
0x3fc: JUMPDEST 
0x3fd: V371 = 0x40
0x3ff: V372 = M[0x40]
0x402: M[V372] = S0
0x403: V373 = 0x20
0x405: V374 = ADD 0x20 V372
0x406: V375 = 0x40
0x408: V376 = M[0x40]
0x40b: V377 = SUB V374 V376
0x40d: RETURN V376 V377
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x40e
[0x40e:0x414]
---
Predecessors: [0x72]
Successors: [0x415, 0x419]
---
0x40e JUMPDEST
0x40f CALLVALUE
0x410 ISZERO
0x411 PUSH2 0x419
0x414 JUMPI
---
0x40e: JUMPDEST 
0x40f: V378 = CALLVALUE
0x410: V379 = ISZERO V378
0x411: V380 = 0x419
0x414: JUMPI 0x419 V379
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x415
[0x415:0x418]
---
Predecessors: [0x40e]
Successors: []
---
0x415 PUSH1 0x0
0x417 DUP1
0x418 REVERT
---
0x415: V381 = 0x0
0x418: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x419
[0x419:0x420]
---
Predecessors: [0x40e]
Successors: [0x775]
---
0x419 JUMPDEST
0x41a PUSH2 0x348
0x41d PUSH2 0x775
0x420 JUMP
---
0x419: JUMPDEST 
0x41a: V382 = 0x348
0x41d: V383 = 0x775
0x420: JUMP 0x775
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x348]
Exit stack: [V12, 0x348]

================================

Block 0x421
[0x421:0x432]
---
Predecessors: []
Successors: []
---
0x421 JUMPDEST
0x422 PUSH1 0x40
0x424 MLOAD
0x425 SWAP1
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x20
0x42a ADD
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f SWAP2
0x430 SUB
0x431 SWAP1
0x432 RETURN
---
0x421: JUMPDEST 
0x422: V384 = 0x40
0x424: V385 = M[0x40]
0x427: M[V385] = S0
0x428: V386 = 0x20
0x42a: V387 = ADD 0x20 V385
0x42b: V388 = 0x40
0x42d: V389 = M[0x40]
0x430: V390 = SUB V387 V389
0x432: RETURN V389 V390
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x433
[0x433:0x439]
---
Predecessors: [0x7d]
Successors: [0x43a, 0x43e]
---
0x433 JUMPDEST
0x434 CALLVALUE
0x435 ISZERO
0x436 PUSH2 0x43e
0x439 JUMPI
---
0x433: JUMPDEST 
0x434: V391 = CALLVALUE
0x435: V392 = ISZERO V391
0x436: V393 = 0x43e
0x439: JUMPI 0x43e V392
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43a
[0x43a:0x43d]
---
Predecessors: [0x433]
Successors: []
---
0x43a PUSH1 0x0
0x43c DUP1
0x43d REVERT
---
0x43a: V394 = 0x0
0x43d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43e
[0x43e:0x445]
---
Predecessors: [0x433]
Successors: [0x77b]
---
0x43e JUMPDEST
0x43f PUSH2 0x348
0x442 PUSH2 0x77b
0x445 JUMP
---
0x43e: JUMPDEST 
0x43f: V395 = 0x348
0x442: V396 = 0x77b
0x445: JUMP 0x77b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x348]
Exit stack: [V12, 0x348]

================================

Block 0x446
[0x446:0x457]
---
Predecessors: []
Successors: []
---
0x446 JUMPDEST
0x447 PUSH1 0x40
0x449 MLOAD
0x44a SWAP1
0x44b DUP2
0x44c MSTORE
0x44d PUSH1 0x20
0x44f ADD
0x450 PUSH1 0x40
0x452 MLOAD
0x453 DUP1
0x454 SWAP2
0x455 SUB
0x456 SWAP1
0x457 RETURN
---
0x446: JUMPDEST 
0x447: V397 = 0x40
0x449: V398 = M[0x40]
0x44c: M[V398] = S0
0x44d: V399 = 0x20
0x44f: V400 = ADD 0x20 V398
0x450: V401 = 0x40
0x452: V402 = M[0x40]
0x455: V403 = SUB V400 V402
0x457: RETURN V402 V403
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x458
[0x458:0x45e]
---
Predecessors: [0x88]
Successors: [0x45f, 0x463]
---
0x458 JUMPDEST
0x459 CALLVALUE
0x45a ISZERO
0x45b PUSH2 0x463
0x45e JUMPI
---
0x458: JUMPDEST 
0x459: V404 = CALLVALUE
0x45a: V405 = ISZERO V404
0x45b: V406 = 0x463
0x45e: JUMPI 0x463 V405
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x45f
[0x45f:0x462]
---
Predecessors: [0x458]
Successors: []
---
0x45f PUSH1 0x0
0x461 DUP1
0x462 REVERT
---
0x45f: V407 = 0x0
0x462: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x463
[0x463:0x46a]
---
Predecessors: [0x458]
Successors: [0x781]
---
0x463 JUMPDEST
0x464 PUSH2 0x348
0x467 PUSH2 0x781
0x46a JUMP
---
0x463: JUMPDEST 
0x464: V408 = 0x348
0x467: V409 = 0x781
0x46a: JUMP 0x781
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x348]
Exit stack: [V12, 0x348]

================================

Block 0x46b
[0x46b:0x47c]
---
Predecessors: []
Successors: []
---
0x46b JUMPDEST
0x46c PUSH1 0x40
0x46e MLOAD
0x46f SWAP1
0x470 DUP2
0x471 MSTORE
0x472 PUSH1 0x20
0x474 ADD
0x475 PUSH1 0x40
0x477 MLOAD
0x478 DUP1
0x479 SWAP2
0x47a SUB
0x47b SWAP1
0x47c RETURN
---
0x46b: JUMPDEST 
0x46c: V410 = 0x40
0x46e: V411 = M[0x40]
0x471: M[V411] = S0
0x472: V412 = 0x20
0x474: V413 = ADD 0x20 V411
0x475: V414 = 0x40
0x477: V415 = M[0x40]
0x47a: V416 = SUB V413 V415
0x47c: RETURN V415 V416
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x47d
[0x47d:0x483]
---
Predecessors: [0x93]
Successors: [0x484, 0x488]
---
0x47d JUMPDEST
0x47e CALLVALUE
0x47f ISZERO
0x480 PUSH2 0x488
0x483 JUMPI
---
0x47d: JUMPDEST 
0x47e: V417 = CALLVALUE
0x47f: V418 = ISZERO V417
0x480: V419 = 0x488
0x483: JUMPI 0x488 V418
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x484
[0x484:0x487]
---
Predecessors: [0x47d]
Successors: []
---
0x484 PUSH1 0x0
0x486 DUP1
0x487 REVERT
---
0x484: V420 = 0x0
0x487: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x488
[0x488:0x48f]
---
Predecessors: [0x47d]
Successors: [0x787]
---
0x488 JUMPDEST
0x489 PUSH2 0x490
0x48c PUSH2 0x787
0x48f JUMP
---
0x488: JUMPDEST 
0x489: V421 = 0x490
0x48c: V422 = 0x787
0x48f: JUMP 0x787
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x490]
Exit stack: [V12, 0x490]

================================

Block 0x490
[0x490:0x4a3]
---
Predecessors: [0x787, 0x795]
Successors: []
---
0x490 JUMPDEST
0x491 PUSH1 0x40
0x493 MLOAD
0x494 SWAP1
0x495 ISZERO
0x496 ISZERO
0x497 DUP2
0x498 MSTORE
0x499 PUSH1 0x20
0x49b ADD
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 SWAP2
0x4a1 SUB
0x4a2 SWAP1
0x4a3 RETURN
---
0x490: JUMPDEST 
0x491: V423 = 0x40
0x493: V424 = M[0x40]
0x495: V425 = ISZERO S0
0x496: V426 = ISZERO V425
0x498: M[V424] = V426
0x499: V427 = 0x20
0x49b: V428 = ADD 0x20 V424
0x49c: V429 = 0x40
0x49e: V430 = M[0x40]
0x4a1: V431 = SUB V428 V430
0x4a3: RETURN V430 V431
---
Entry stack: [V12, 0x490, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x490]

================================

Block 0x4a4
[0x4a4:0x4aa]
---
Predecessors: [0x9e]
Successors: [0x4ab, 0x4af]
---
0x4a4 JUMPDEST
0x4a5 CALLVALUE
0x4a6 ISZERO
0x4a7 PUSH2 0x4af
0x4aa JUMPI
---
0x4a4: JUMPDEST 
0x4a5: V432 = CALLVALUE
0x4a6: V433 = ISZERO V432
0x4a7: V434 = 0x4af
0x4aa: JUMPI 0x4af V433
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ab
[0x4ab:0x4ae]
---
Predecessors: [0x4a4]
Successors: []
---
0x4ab PUSH1 0x0
0x4ad DUP1
0x4ae REVERT
---
0x4ab: V435 = 0x0
0x4ae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4af
[0x4af:0x4b6]
---
Predecessors: [0x4a4]
Successors: [0x795]
---
0x4af JUMPDEST
0x4b0 PUSH2 0x490
0x4b3 PUSH2 0x795
0x4b6 JUMP
---
0x4af: JUMPDEST 
0x4b0: V436 = 0x490
0x4b3: V437 = 0x795
0x4b6: JUMP 0x795
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x490]
Exit stack: [V12, 0x490]

================================

Block 0x4b7
[0x4b7:0x4ca]
---
Predecessors: []
Successors: []
---
0x4b7 JUMPDEST
0x4b8 PUSH1 0x40
0x4ba MLOAD
0x4bb SWAP1
0x4bc ISZERO
0x4bd ISZERO
0x4be DUP2
0x4bf MSTORE
0x4c0 PUSH1 0x20
0x4c2 ADD
0x4c3 PUSH1 0x40
0x4c5 MLOAD
0x4c6 DUP1
0x4c7 SWAP2
0x4c8 SUB
0x4c9 SWAP1
0x4ca RETURN
---
0x4b7: JUMPDEST 
0x4b8: V438 = 0x40
0x4ba: V439 = M[0x40]
0x4bc: V440 = ISZERO S0
0x4bd: V441 = ISZERO V440
0x4bf: M[V439] = V441
0x4c0: V442 = 0x20
0x4c2: V443 = ADD 0x20 V439
0x4c3: V444 = 0x40
0x4c5: V445 = M[0x40]
0x4c8: V446 = SUB V443 V445
0x4ca: RETURN V445 V446
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4cb
[0x4cb:0x4d1]
---
Predecessors: [0xa9]
Successors: [0x4d2, 0x4d6]
---
0x4cb JUMPDEST
0x4cc CALLVALUE
0x4cd ISZERO
0x4ce PUSH2 0x4d6
0x4d1 JUMPI
---
0x4cb: JUMPDEST 
0x4cc: V447 = CALLVALUE
0x4cd: V448 = ISZERO V447
0x4ce: V449 = 0x4d6
0x4d1: JUMPI 0x4d6 V448
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d2
[0x4d2:0x4d5]
---
Predecessors: [0x4cb]
Successors: []
---
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 REVERT
---
0x4d2: V450 = 0x0
0x4d5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d6
[0x4d6:0x4dd]
---
Predecessors: [0x4cb]
Successors: [0x79e]
---
0x4d6 JUMPDEST
0x4d7 PUSH2 0x27e
0x4da PUSH2 0x79e
0x4dd JUMP
---
0x4d6: JUMPDEST 
0x4d7: V451 = 0x27e
0x4da: V452 = 0x79e
0x4dd: JUMP 0x79e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27e]
Exit stack: [V12, 0x27e]

================================

Block 0x4de
[0x4de:0x4df]
---
Predecessors: []
Successors: []
---
0x4de JUMPDEST
0x4df STOP
---
0x4de: JUMPDEST 
0x4df: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4e0
[0x4e0:0x4e6]
---
Predecessors: [0xb4]
Successors: [0x4e7, 0x4eb]
---
0x4e0 JUMPDEST
0x4e1 CALLVALUE
0x4e2 ISZERO
0x4e3 PUSH2 0x4eb
0x4e6 JUMPI
---
0x4e0: JUMPDEST 
0x4e1: V453 = CALLVALUE
0x4e2: V454 = ISZERO V453
0x4e3: V455 = 0x4eb
0x4e6: JUMPI 0x4eb V454
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e7
[0x4e7:0x4ea]
---
Predecessors: [0x4e0]
Successors: []
---
0x4e7 PUSH1 0x0
0x4e9 DUP1
0x4ea REVERT
---
0x4e7: V456 = 0x0
0x4ea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4eb
[0x4eb:0x4f2]
---
Predecessors: [0x4e0]
Successors: [0x817]
---
0x4eb JUMPDEST
0x4ec PUSH2 0x27e
0x4ef PUSH2 0x817
0x4f2 JUMP
---
0x4eb: JUMPDEST 
0x4ec: V457 = 0x27e
0x4ef: V458 = 0x817
0x4f2: JUMP 0x817
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27e]
Exit stack: [V12, 0x27e]

================================

Block 0x4f3
[0x4f3:0x4f4]
---
Predecessors: []
Successors: []
---
0x4f3 JUMPDEST
0x4f4 STOP
---
0x4f3: JUMPDEST 
0x4f4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4f5
[0x4f5:0x4fe]
---
Predecessors: [0x28b]
Successors: [0x4ff, 0x575]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x4
0x4f8 SLOAD
0x4f9 TIMESTAMP
0x4fa LT
0x4fb PUSH2 0x575
0x4fe JUMPI
---
0x4f5: JUMPDEST 
0x4f6: V459 = 0x4
0x4f8: V460 = S[0x4]
0x4f9: V461 = TIMESTAMP
0x4fa: V462 = LT V461 V460
0x4fb: V463 = 0x575
0x4fe: JUMPI 0x575 V462
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x4ff
[0x4ff:0x509]
---
Predecessors: [0x4f5]
Successors: [0x50a, 0x575]
---
0x4ff PUSH1 0x2
0x501 SLOAD
0x502 PUSH1 0x3
0x504 SLOAD
0x505 LT
0x506 PUSH2 0x575
0x509 JUMPI
---
0x4ff: V464 = 0x2
0x501: V465 = S[0x2]
0x502: V466 = 0x3
0x504: V467 = S[0x3]
0x505: V468 = LT V467 V465
0x506: V469 = 0x575
0x509: JUMPI 0x575 V468
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x50a
[0x50a:0x574]
---
Predecessors: [0x4ff]
Successors: [0x575]
---
0x50a PUSH1 0x9
0x50c DUP1
0x50d SLOAD
0x50e PUSH2 0x100
0x511 PUSH1 0x1
0x513 PUSH1 0xff
0x515 NOT
0x516 SWAP1
0x517 SWAP3
0x518 AND
0x519 DUP3
0x51a OR
0x51b PUSH2 0xff00
0x51e NOT
0x51f AND
0x520 OR
0x521 SWAP1
0x522 SWAP2
0x523 SSTORE
0x524 SLOAD
0x525 PUSH1 0x3
0x527 SLOAD
0x528 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x549 SWAP2
0x54a PUSH1 0x1
0x54c PUSH1 0xa0
0x54e PUSH1 0x2
0x550 EXP
0x551 SUB
0x552 AND
0x553 SWAP1
0x554 PUSH1 0x40
0x556 MLOAD
0x557 PUSH1 0x1
0x559 PUSH1 0xa0
0x55b PUSH1 0x2
0x55d EXP
0x55e SUB
0x55f SWAP1
0x560 SWAP3
0x561 AND
0x562 DUP3
0x563 MSTORE
0x564 PUSH1 0x20
0x566 DUP3
0x567 ADD
0x568 MSTORE
0x569 PUSH1 0x40
0x56b SWAP1
0x56c DUP2
0x56d ADD
0x56e SWAP1
0x56f MLOAD
0x570 DUP1
0x571 SWAP2
0x572 SUB
0x573 SWAP1
0x574 LOG1
---
0x50a: V470 = 0x9
0x50d: V471 = S[0x9]
0x50e: V472 = 0x100
0x511: V473 = 0x1
0x513: V474 = 0xff
0x515: V475 = NOT 0xff
0x518: V476 = AND V471 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x51a: V477 = OR 0x1 V476
0x51b: V478 = 0xff00
0x51e: V479 = NOT 0xff00
0x51f: V480 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V477
0x520: V481 = OR V480 0x100
0x523: S[0x9] = V481
0x524: V482 = S[0x1]
0x525: V483 = 0x3
0x527: V484 = S[0x3]
0x528: V485 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x54a: V486 = 0x1
0x54c: V487 = 0xa0
0x54e: V488 = 0x2
0x550: V489 = EXP 0x2 0xa0
0x551: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x552: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x554: V492 = 0x40
0x556: V493 = M[0x40]
0x557: V494 = 0x1
0x559: V495 = 0xa0
0x55b: V496 = 0x2
0x55d: V497 = EXP 0x2 0xa0
0x55e: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x561: V499 = AND V491 0xffffffffffffffffffffffffffffffffffffffff
0x563: M[V493] = V499
0x564: V500 = 0x20
0x567: V501 = ADD V493 0x20
0x568: M[V501] = V484
0x569: V502 = 0x40
0x56d: V503 = ADD 0x40 V493
0x56f: V504 = M[0x40]
0x572: V505 = SUB V503 V504
0x574: LOG V504 V505 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x575
[0x575:0x575]
---
Predecessors: [0x4f5, 0x4ff, 0x50a, 0x57a, 0x593]
Successors: [0x576]
---
0x575 JUMPDEST
---
0x575: JUMPDEST 
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x576
[0x576:0x576]
---
Predecessors: [0x575]
Successors: [0x577]
---
0x576 JUMPDEST
---
0x576: JUMPDEST 
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x577
[0x577:0x577]
---
Predecessors: [0x576]
Successors: [0x578]
---
0x577 JUMPDEST
---
0x577: JUMPDEST 
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x578
[0x578:0x579]
---
Predecessors: [0x577]
Successors: [0x27e]
---
0x578 JUMPDEST
0x579 JUMP
---
0x578: JUMPDEST 
0x579: JUMP 0x27e
---
Entry stack: [V12, 0x27e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x57a
[0x57a:0x583]
---
Predecessors: [0x2a0]
Successors: [0x575, 0x584]
---
0x57a JUMPDEST
0x57b PUSH1 0x4
0x57d SLOAD
0x57e TIMESTAMP
0x57f LT
0x580 PUSH2 0x575
0x583 JUMPI
---
0x57a: JUMPDEST 
0x57b: V506 = 0x4
0x57d: V507 = S[0x4]
0x57e: V508 = TIMESTAMP
0x57f: V509 = LT V508 V507
0x580: V510 = 0x575
0x583: JUMPI 0x575 V509
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x584
[0x584:0x58e]
---
Predecessors: [0x57a]
Successors: [0x58f, 0x593]
---
0x584 PUSH1 0x7
0x586 SLOAD
0x587 PUSH1 0x0
0x589 SWAP1
0x58a GT
0x58b PUSH2 0x593
0x58e JUMPI
---
0x584: V511 = 0x7
0x586: V512 = S[0x7]
0x587: V513 = 0x0
0x58a: V514 = GT V512 0x0
0x58b: V515 = 0x593
0x58e: JUMPI 0x593 V514
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x58f
[0x58f:0x592]
---
Predecessors: [0x584]
Successors: []
---
0x58f PUSH1 0x0
0x591 DUP1
0x592 REVERT
---
0x58f: V516 = 0x0
0x592: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x593
[0x593:0x5aa]
---
Predecessors: [0x584]
Successors: [0x575, 0x5ab]
---
0x593 JUMPDEST
0x594 PUSH1 0x1
0x596 SLOAD
0x597 CALLER
0x598 PUSH1 0x1
0x59a PUSH1 0xa0
0x59c PUSH1 0x2
0x59e EXP
0x59f SUB
0x5a0 SWAP1
0x5a1 DUP2
0x5a2 AND
0x5a3 SWAP2
0x5a4 AND
0x5a5 EQ
0x5a6 ISZERO
0x5a7 PUSH2 0x575
0x5aa JUMPI
---
0x593: JUMPDEST 
0x594: V517 = 0x1
0x596: V518 = S[0x1]
0x597: V519 = CALLER
0x598: V520 = 0x1
0x59a: V521 = 0xa0
0x59c: V522 = 0x2
0x59e: V523 = EXP 0x2 0xa0
0x59f: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a2: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x5a4: V526 = AND V518 0xffffffffffffffffffffffffffffffffffffffff
0x5a5: V527 = EQ V526 V525
0x5a6: V528 = ISZERO V527
0x5a7: V529 = 0x575
0x5aa: JUMPI 0x575 V528
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x5ab
[0x5ab:0x605]
---
Predecessors: [0x593]
Successors: [0x606, 0x60a]
---
0x5ab PUSH1 0x6
0x5ad SLOAD
0x5ae PUSH1 0x1
0x5b0 SLOAD
0x5b1 PUSH1 0x7
0x5b3 SLOAD
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc SWAP3
0x5bd DUP4
0x5be AND
0x5bf SWAP3
0x5c0 PUSH4 0xa9059cbb
0x5c5 SWAP3
0x5c6 AND
0x5c7 SWAP1
0x5c8 PUSH1 0x40
0x5ca MLOAD
0x5cb PUSH1 0xe0
0x5cd PUSH1 0x2
0x5cf EXP
0x5d0 PUSH4 0xffffffff
0x5d5 DUP6
0x5d6 AND
0x5d7 MUL
0x5d8 DUP2
0x5d9 MSTORE
0x5da PUSH1 0x1
0x5dc PUSH1 0xa0
0x5de PUSH1 0x2
0x5e0 EXP
0x5e1 SUB
0x5e2 SWAP1
0x5e3 SWAP3
0x5e4 AND
0x5e5 PUSH1 0x4
0x5e7 DUP4
0x5e8 ADD
0x5e9 MSTORE
0x5ea PUSH1 0x24
0x5ec DUP3
0x5ed ADD
0x5ee MSTORE
0x5ef PUSH1 0x44
0x5f1 ADD
0x5f2 PUSH1 0x0
0x5f4 PUSH1 0x40
0x5f6 MLOAD
0x5f7 DUP1
0x5f8 DUP4
0x5f9 SUB
0x5fa DUP2
0x5fb PUSH1 0x0
0x5fd DUP8
0x5fe DUP1
0x5ff EXTCODESIZE
0x600 ISZERO
0x601 ISZERO
0x602 PUSH2 0x60a
0x605 JUMPI
---
0x5ab: V530 = 0x6
0x5ad: V531 = S[0x6]
0x5ae: V532 = 0x1
0x5b0: V533 = S[0x1]
0x5b1: V534 = 0x7
0x5b3: V535 = S[0x7]
0x5b4: V536 = 0x1
0x5b6: V537 = 0xa0
0x5b8: V538 = 0x2
0x5ba: V539 = EXP 0x2 0xa0
0x5bb: V540 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5be: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x5c0: V542 = 0xa9059cbb
0x5c6: V543 = AND V533 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V544 = 0x40
0x5ca: V545 = M[0x40]
0x5cb: V546 = 0xe0
0x5cd: V547 = 0x2
0x5cf: V548 = EXP 0x2 0xe0
0x5d0: V549 = 0xffffffff
0x5d6: V550 = AND 0xa9059cbb 0xffffffff
0x5d7: V551 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5d9: M[V545] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5da: V552 = 0x1
0x5dc: V553 = 0xa0
0x5de: V554 = 0x2
0x5e0: V555 = EXP 0x2 0xa0
0x5e1: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e4: V557 = AND V543 0xffffffffffffffffffffffffffffffffffffffff
0x5e5: V558 = 0x4
0x5e8: V559 = ADD V545 0x4
0x5e9: M[V559] = V557
0x5ea: V560 = 0x24
0x5ed: V561 = ADD V545 0x24
0x5ee: M[V561] = V535
0x5ef: V562 = 0x44
0x5f1: V563 = ADD 0x44 V545
0x5f2: V564 = 0x0
0x5f4: V565 = 0x40
0x5f6: V566 = M[0x40]
0x5f9: V567 = SUB V563 V566
0x5fb: V568 = 0x0
0x5ff: V569 = EXTCODESIZE V541
0x600: V570 = ISZERO V569
0x601: V571 = ISZERO V570
0x602: V572 = 0x60a
0x605: JUMPI 0x60a V571
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: [V541, 0xa9059cbb, V563, 0x0, V566, V567, V566, 0x0, V541]
Exit stack: [V12, 0x27e, V541, 0xa9059cbb, V563, 0x0, V566, V567, V566, 0x0, V541]

================================

Block 0x606
[0x606:0x609]
---
Predecessors: [0x5ab]
Successors: []
---
0x606 PUSH1 0x0
0x608 DUP1
0x609 REVERT
---
0x606: V573 = 0x0
0x609: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, V541, 0xa9059cbb, V563, 0x0, V566, V567, V566, 0x0, V541]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V541, 0xa9059cbb, V563, 0x0, V566, V567, V566, 0x0, V541]

================================

Block 0x60a
[0x60a:0x616]
---
Predecessors: [0x5ab]
Successors: [0x617, 0x61b]
---
0x60a JUMPDEST
0x60b PUSH2 0x2c6
0x60e GAS
0x60f SUB
0x610 CALL
0x611 ISZERO
0x612 ISZERO
0x613 PUSH2 0x61b
0x616 JUMPI
---
0x60a: JUMPDEST 
0x60b: V574 = 0x2c6
0x60e: V575 = GAS
0x60f: V576 = SUB V575 0x2c6
0x610: V577 = CALL V576 V541 0x0 V566 V567 V566 0x0
0x611: V578 = ISZERO V577
0x612: V579 = ISZERO V578
0x613: V580 = 0x61b
0x616: JUMPI 0x61b V579
---
Entry stack: [V12, 0x27e, V541, 0xa9059cbb, V563, 0x0, V566, V567, V566, 0x0, V541]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x27e, V541, 0xa9059cbb, V563]

================================

Block 0x617
[0x617:0x61a]
---
Predecessors: [0x60a]
Successors: []
---
0x617 PUSH1 0x0
0x619 DUP1
0x61a REVERT
---
0x617: V581 = 0x0
0x61a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, V541, 0xa9059cbb, V563]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V541, 0xa9059cbb, V563]

================================

Block 0x61b
[0x61b:0x673]
---
Predecessors: [0x60a]
Successors: [0x674, 0x678]
---
0x61b JUMPDEST
0x61c POP
0x61d POP
0x61e PUSH1 0x6
0x620 SLOAD
0x621 PUSH1 0x1
0x623 PUSH1 0xa0
0x625 PUSH1 0x2
0x627 EXP
0x628 SUB
0x629 AND
0x62a SWAP1
0x62b POP
0x62c PUSH4 0x9b96eece
0x631 ADDRESS
0x632 PUSH1 0x0
0x634 PUSH1 0x40
0x636 MLOAD
0x637 PUSH1 0x20
0x639 ADD
0x63a MSTORE
0x63b PUSH1 0x40
0x63d MLOAD
0x63e PUSH1 0xe0
0x640 PUSH1 0x2
0x642 EXP
0x643 PUSH4 0xffffffff
0x648 DUP5
0x649 AND
0x64a MUL
0x64b DUP2
0x64c MSTORE
0x64d PUSH1 0x1
0x64f PUSH1 0xa0
0x651 PUSH1 0x2
0x653 EXP
0x654 SUB
0x655 SWAP1
0x656 SWAP2
0x657 AND
0x658 PUSH1 0x4
0x65a DUP3
0x65b ADD
0x65c MSTORE
0x65d PUSH1 0x24
0x65f ADD
0x660 PUSH1 0x20
0x662 PUSH1 0x40
0x664 MLOAD
0x665 DUP1
0x666 DUP4
0x667 SUB
0x668 DUP2
0x669 PUSH1 0x0
0x66b DUP8
0x66c DUP1
0x66d EXTCODESIZE
0x66e ISZERO
0x66f ISZERO
0x670 PUSH2 0x678
0x673 JUMPI
---
0x61b: JUMPDEST 
0x61e: V582 = 0x6
0x620: V583 = S[0x6]
0x621: V584 = 0x1
0x623: V585 = 0xa0
0x625: V586 = 0x2
0x627: V587 = EXP 0x2 0xa0
0x628: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x629: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x62c: V590 = 0x9b96eece
0x631: V591 = ADDRESS
0x632: V592 = 0x0
0x634: V593 = 0x40
0x636: V594 = M[0x40]
0x637: V595 = 0x20
0x639: V596 = ADD 0x20 V594
0x63a: M[V596] = 0x0
0x63b: V597 = 0x40
0x63d: V598 = M[0x40]
0x63e: V599 = 0xe0
0x640: V600 = 0x2
0x642: V601 = EXP 0x2 0xe0
0x643: V602 = 0xffffffff
0x649: V603 = AND 0x9b96eece 0xffffffff
0x64a: V604 = MUL 0x9b96eece 0x100000000000000000000000000000000000000000000000000000000
0x64c: M[V598] = 0x9b96eece00000000000000000000000000000000000000000000000000000000
0x64d: V605 = 0x1
0x64f: V606 = 0xa0
0x651: V607 = 0x2
0x653: V608 = EXP 0x2 0xa0
0x654: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x657: V610 = AND V591 0xffffffffffffffffffffffffffffffffffffffff
0x658: V611 = 0x4
0x65b: V612 = ADD V598 0x4
0x65c: M[V612] = V610
0x65d: V613 = 0x24
0x65f: V614 = ADD 0x24 V598
0x660: V615 = 0x20
0x662: V616 = 0x40
0x664: V617 = M[0x40]
0x667: V618 = SUB V614 V617
0x669: V619 = 0x0
0x66d: V620 = EXTCODESIZE V589
0x66e: V621 = ISZERO V620
0x66f: V622 = ISZERO V621
0x670: V623 = 0x678
0x673: JUMPI 0x678 V622
---
Entry stack: [V12, 0x27e, V541, 0xa9059cbb, V563]
Stack pops: 3
Stack additions: [V589, 0x9b96eece, V614, 0x20, V617, V618, V617, 0x0, V589]
Exit stack: [V12, 0x27e, V589, 0x9b96eece, V614, 0x20, V617, V618, V617, 0x0, V589]

================================

Block 0x674
[0x674:0x677]
---
Predecessors: [0x61b]
Successors: []
---
0x674 PUSH1 0x0
0x676 DUP1
0x677 REVERT
---
0x674: V624 = 0x0
0x677: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, V589, 0x9b96eece, V614, 0x20, V617, V618, V617, 0x0, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V589, 0x9b96eece, V614, 0x20, V617, V618, V617, 0x0, V589]

================================

Block 0x678
[0x678:0x684]
---
Predecessors: [0x61b, 0x79e]
Successors: [0x685, 0x689]
---
0x678 JUMPDEST
0x679 PUSH2 0x2c6
0x67c GAS
0x67d SUB
0x67e CALL
0x67f ISZERO
0x680 ISZERO
0x681 PUSH2 0x689
0x684 JUMPI
---
0x678: JUMPDEST 
0x679: V625 = 0x2c6
0x67c: V626 = GAS
0x67d: V627 = SUB V626 0x2c6
0x67e: V628 = CALL V627 S0 0x0 S2 S3 S4 0x20
0x67f: V629 = ISZERO V628
0x680: V630 = ISZERO V629
0x681: V631 = 0x689
0x684: JUMPI 0x689 V630
---
Entry stack: [V12, 0x27e, S8, 0x9b96eece, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x27e, S8, 0x9b96eece, S6]

================================

Block 0x685
[0x685:0x688]
---
Predecessors: [0x678]
Successors: []
---
0x685 PUSH1 0x0
0x687 DUP1
0x688 REVERT
---
0x685: V632 = 0x0
0x688: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, S2, 0x9b96eece, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S2, 0x9b96eece, S0]

================================

Block 0x689
[0x689:0x695]
---
Predecessors: [0x678, 0x7f7]
Successors: [0x696]
---
0x689 JUMPDEST
0x68a POP
0x68b POP
0x68c POP
0x68d PUSH1 0x40
0x68f MLOAD
0x690 DUP1
0x691 MLOAD
0x692 PUSH1 0x7
0x694 SSTORE
0x695 POP
---
0x689: JUMPDEST 
0x68d: V633 = 0x40
0x68f: V634 = M[0x40]
0x691: V635 = M[V634]
0x692: V636 = 0x7
0x694: S[0x7] = V635
---
Entry stack: [V12, 0x27e, S2, 0x9b96eece, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x696
[0x696:0x696]
---
Predecessors: [0x689]
Successors: [0x697]
---
0x696 JUMPDEST
---
0x696: JUMPDEST 
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x697
[0x697:0x697]
---
Predecessors: [0x696]
Successors: [0x698]
---
0x697 JUMPDEST
---
0x697: JUMPDEST 
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x698
[0x698:0x698]
---
Predecessors: [0x697]
Successors: [0x699]
---
0x698 JUMPDEST
---
0x698: JUMPDEST 
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e]

================================

Block 0x699
[0x699:0x69a]
---
Predecessors: [0x698]
Successors: [0x27e]
---
0x699 JUMPDEST
0x69a JUMP
---
0x699: JUMPDEST 
0x69a: JUMP 0x27e
---
Entry stack: [V12, 0x27e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x69b
[0x69b:0x6ea]
---
Predecessors: [0x2b5]
Successors: [0x6eb, 0x731]
---
0x69b JUMPDEST
0x69c PUSH1 0x0
0x69e DUP1
0x69f SLOAD
0x6a0 PUSH1 0x1
0x6a2 DUP2
0x6a3 PUSH1 0x1
0x6a5 AND
0x6a6 ISZERO
0x6a7 PUSH2 0x100
0x6aa MUL
0x6ab SUB
0x6ac AND
0x6ad PUSH1 0x2
0x6af SWAP1
0x6b0 DIV
0x6b1 DUP1
0x6b2 PUSH1 0x1f
0x6b4 ADD
0x6b5 PUSH1 0x20
0x6b7 DUP1
0x6b8 SWAP2
0x6b9 DIV
0x6ba MUL
0x6bb PUSH1 0x20
0x6bd ADD
0x6be PUSH1 0x40
0x6c0 MLOAD
0x6c1 SWAP1
0x6c2 DUP2
0x6c3 ADD
0x6c4 PUSH1 0x40
0x6c6 MSTORE
0x6c7 DUP1
0x6c8 SWAP3
0x6c9 SWAP2
0x6ca SWAP1
0x6cb DUP2
0x6cc DUP2
0x6cd MSTORE
0x6ce PUSH1 0x20
0x6d0 ADD
0x6d1 DUP3
0x6d2 DUP1
0x6d3 SLOAD
0x6d4 PUSH1 0x1
0x6d6 DUP2
0x6d7 PUSH1 0x1
0x6d9 AND
0x6da ISZERO
0x6db PUSH2 0x100
0x6de MUL
0x6df SUB
0x6e0 AND
0x6e1 PUSH1 0x2
0x6e3 SWAP1
0x6e4 DIV
0x6e5 DUP1
0x6e6 ISZERO
0x6e7 PUSH2 0x731
0x6ea JUMPI
---
0x69b: JUMPDEST 
0x69c: V637 = 0x0
0x69f: V638 = S[0x0]
0x6a0: V639 = 0x1
0x6a3: V640 = 0x1
0x6a5: V641 = AND 0x1 V638
0x6a6: V642 = ISZERO V641
0x6a7: V643 = 0x100
0x6aa: V644 = MUL 0x100 V642
0x6ab: V645 = SUB V644 0x1
0x6ac: V646 = AND V645 V638
0x6ad: V647 = 0x2
0x6b0: V648 = DIV V646 0x2
0x6b2: V649 = 0x1f
0x6b4: V650 = ADD 0x1f V648
0x6b5: V651 = 0x20
0x6b9: V652 = DIV V650 0x20
0x6ba: V653 = MUL V652 0x20
0x6bb: V654 = 0x20
0x6bd: V655 = ADD 0x20 V653
0x6be: V656 = 0x40
0x6c0: V657 = M[0x40]
0x6c3: V658 = ADD V657 V655
0x6c4: V659 = 0x40
0x6c6: M[0x40] = V658
0x6cd: M[V657] = V648
0x6ce: V660 = 0x20
0x6d0: V661 = ADD 0x20 V657
0x6d3: V662 = S[0x0]
0x6d4: V663 = 0x1
0x6d7: V664 = 0x1
0x6d9: V665 = AND 0x1 V662
0x6da: V666 = ISZERO V665
0x6db: V667 = 0x100
0x6de: V668 = MUL 0x100 V666
0x6df: V669 = SUB V668 0x1
0x6e0: V670 = AND V669 V662
0x6e1: V671 = 0x2
0x6e4: V672 = DIV V670 0x2
0x6e6: V673 = ISZERO V672
0x6e7: V674 = 0x731
0x6ea: JUMPI 0x731 V673
---
Entry stack: [V12, 0x2bd]
Stack pops: 0
Stack additions: [V657, 0x0, V648, V661, 0x0, V672]
Exit stack: [V12, 0x2bd, V657, 0x0, V648, V661, 0x0, V672]

================================

Block 0x6eb
[0x6eb:0x6f2]
---
Predecessors: [0x69b]
Successors: [0x6f3, 0x706]
---
0x6eb DUP1
0x6ec PUSH1 0x1f
0x6ee LT
0x6ef PUSH2 0x706
0x6f2 JUMPI
---
0x6ec: V675 = 0x1f
0x6ee: V676 = LT 0x1f V672
0x6ef: V677 = 0x706
0x6f2: JUMPI 0x706 V676
---
Entry stack: [V12, 0x2bd, V657, 0x0, V648, V661, 0x0, V672]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2bd, V657, 0x0, V648, V661, 0x0, V672]

================================

Block 0x6f3
[0x6f3:0x705]
---
Predecessors: [0x6eb]
Successors: [0x731]
---
0x6f3 PUSH2 0x100
0x6f6 DUP1
0x6f7 DUP4
0x6f8 SLOAD
0x6f9 DIV
0x6fa MUL
0x6fb DUP4
0x6fc MSTORE
0x6fd SWAP2
0x6fe PUSH1 0x20
0x700 ADD
0x701 SWAP2
0x702 PUSH2 0x731
0x705 JUMP
---
0x6f3: V678 = 0x100
0x6f8: V679 = S[0x0]
0x6f9: V680 = DIV V679 0x100
0x6fa: V681 = MUL V680 0x100
0x6fc: M[V661] = V681
0x6fe: V682 = 0x20
0x700: V683 = ADD 0x20 V661
0x702: V684 = 0x731
0x705: JUMP 0x731
---
Entry stack: [V12, 0x2bd, V657, 0x0, V648, V661, 0x0, V672]
Stack pops: 3
Stack additions: [V683, S1, S0]
Exit stack: [V12, 0x2bd, V657, 0x0, V648, V683, 0x0, V672]

================================

Block 0x706
[0x706:0x713]
---
Predecessors: [0x6eb]
Successors: [0x714]
---
0x706 JUMPDEST
0x707 DUP3
0x708 ADD
0x709 SWAP2
0x70a SWAP1
0x70b PUSH1 0x0
0x70d MSTORE
0x70e PUSH1 0x20
0x710 PUSH1 0x0
0x712 SHA3
0x713 SWAP1
---
0x706: JUMPDEST 
0x708: V685 = ADD V661 V672
0x70b: V686 = 0x0
0x70d: M[0x0] = 0x0
0x70e: V687 = 0x20
0x710: V688 = 0x0
0x712: V689 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x2bd, V657, 0x0, V648, V661, 0x0, V672]
Stack pops: 3
Stack additions: [V685, V689, S2]
Exit stack: [V12, 0x2bd, V657, 0x0, V648, V685, V689, V661]

================================

Block 0x714
[0x714:0x727]
---
Predecessors: [0x706, 0x714]
Successors: [0x714, 0x728]
---
0x714 JUMPDEST
0x715 DUP2
0x716 SLOAD
0x717 DUP2
0x718 MSTORE
0x719 SWAP1
0x71a PUSH1 0x1
0x71c ADD
0x71d SWAP1
0x71e PUSH1 0x20
0x720 ADD
0x721 DUP1
0x722 DUP4
0x723 GT
0x724 PUSH2 0x714
0x727 JUMPI
---
0x714: JUMPDEST 
0x716: V690 = S[S1]
0x718: M[S0] = V690
0x71a: V691 = 0x1
0x71c: V692 = ADD 0x1 S1
0x71e: V693 = 0x20
0x720: V694 = ADD 0x20 S0
0x723: V695 = GT V685 V694
0x724: V696 = 0x714
0x727: JUMPI 0x714 V695
---
Entry stack: [V12, 0x2bd, V657, 0x0, V648, V685, S1, S0]
Stack pops: 3
Stack additions: [S2, V692, V694]
Exit stack: [V12, 0x2bd, V657, 0x0, V648, V685, V692, V694]

================================

Block 0x728
[0x728:0x730]
---
Predecessors: [0x714]
Successors: [0x731]
---
0x728 DUP3
0x729 SWAP1
0x72a SUB
0x72b PUSH1 0x1f
0x72d AND
0x72e DUP3
0x72f ADD
0x730 SWAP2
---
0x72a: V697 = SUB V694 V685
0x72b: V698 = 0x1f
0x72d: V699 = AND 0x1f V697
0x72f: V700 = ADD V685 V699
---
Entry stack: [V12, 0x2bd, V657, 0x0, V648, V685, V692, V694]
Stack pops: 3
Stack additions: [V700, S1, S2]
Exit stack: [V12, 0x2bd, V657, 0x0, V648, V700, V692, V685]

================================

Block 0x731
[0x731:0x738]
---
Predecessors: [0x69b, 0x6f3, 0x728]
Successors: [0x2bd]
---
0x731 JUMPDEST
0x732 POP
0x733 POP
0x734 POP
0x735 POP
0x736 POP
0x737 DUP2
0x738 JUMP
---
0x731: JUMPDEST 
0x738: JUMP 0x2bd
---
Entry stack: [V12, 0x2bd, V657, 0x0, V648, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x2bd, V657]

================================

Block 0x739
[0x739:0x73e]
---
Predecessors: [0x340]
Successors: [0x348]
---
0x739 JUMPDEST
0x73a PUSH1 0x4
0x73c SLOAD
0x73d DUP2
0x73e JUMP
---
0x739: JUMPDEST 
0x73a: V701 = 0x4
0x73c: V702 = S[0x4]
0x73e: JUMP 0x348
---
Entry stack: [V12, 0x348]
Stack pops: 1
Stack additions: [S0, V702]
Exit stack: [V12, 0x348, V702]

================================

Block 0x73f
[0x73f:0x74d]
---
Predecessors: [0x365]
Successors: [0x36d]
---
0x73f JUMPDEST
0x740 PUSH1 0x1
0x742 SLOAD
0x743 PUSH1 0x1
0x745 PUSH1 0xa0
0x747 PUSH1 0x2
0x749 EXP
0x74a SUB
0x74b AND
0x74c DUP2
0x74d JUMP
---
0x73f: JUMPDEST 
0x740: V703 = 0x1
0x742: V704 = S[0x1]
0x743: V705 = 0x1
0x745: V706 = 0xa0
0x747: V707 = 0x2
0x749: V708 = EXP 0x2 0xa0
0x74a: V709 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74b: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0x74d: JUMP 0x36d
---
Entry stack: [V12, 0x36d]
Stack pops: 1
Stack additions: [S0, V710]
Exit stack: [V12, 0x36d, V710]

================================

Block 0x74e
[0x74e:0x75c]
---
Predecessors: [0x394]
Successors: [0x36d]
---
0x74e JUMPDEST
0x74f PUSH1 0x6
0x751 SLOAD
0x752 PUSH1 0x1
0x754 PUSH1 0xa0
0x756 PUSH1 0x2
0x758 EXP
0x759 SUB
0x75a AND
0x75b DUP2
0x75c JUMP
---
0x74e: JUMPDEST 
0x74f: V711 = 0x6
0x751: V712 = S[0x6]
0x752: V713 = 0x1
0x754: V714 = 0xa0
0x756: V715 = 0x2
0x758: V716 = EXP 0x2 0xa0
0x759: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75a: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V712
0x75c: JUMP 0x36d
---
Entry stack: [V12, 0x36d]
Stack pops: 1
Stack additions: [S0, V718]
Exit stack: [V12, 0x36d, V718]

================================

Block 0x75d
[0x75d:0x76e]
---
Predecessors: [0x3c3]
Successors: [0x348]
---
0x75d JUMPDEST
0x75e PUSH1 0x8
0x760 PUSH1 0x20
0x762 MSTORE
0x763 PUSH1 0x0
0x765 SWAP1
0x766 DUP2
0x767 MSTORE
0x768 PUSH1 0x40
0x76a SWAP1
0x76b SHA3
0x76c SLOAD
0x76d DUP2
0x76e JUMP
---
0x75d: JUMPDEST 
0x75e: V719 = 0x8
0x760: V720 = 0x20
0x762: M[0x20] = 0x8
0x763: V721 = 0x0
0x767: M[0x0] = V356
0x768: V722 = 0x40
0x76b: V723 = SHA3 0x0 0x40
0x76c: V724 = S[V723]
0x76e: JUMP 0x348
---
Entry stack: [V12, 0x348, V356]
Stack pops: 2
Stack additions: [S1, V724]
Exit stack: [V12, 0x348, V724]

================================

Block 0x76f
[0x76f:0x774]
---
Predecessors: [0x3f4]
Successors: [0x348]
---
0x76f JUMPDEST
0x770 PUSH1 0x2
0x772 SLOAD
0x773 DUP2
0x774 JUMP
---
0x76f: JUMPDEST 
0x770: V725 = 0x2
0x772: V726 = S[0x2]
0x774: JUMP 0x348
---
Entry stack: [V12, 0x348]
Stack pops: 1
Stack additions: [S0, V726]
Exit stack: [V12, 0x348, V726]

================================

Block 0x775
[0x775:0x77a]
---
Predecessors: [0x419]
Successors: [0x348]
---
0x775 JUMPDEST
0x776 PUSH1 0x3
0x778 SLOAD
0x779 DUP2
0x77a JUMP
---
0x775: JUMPDEST 
0x776: V727 = 0x3
0x778: V728 = S[0x3]
0x77a: JUMP 0x348
---
Entry stack: [V12, 0x348]
Stack pops: 1
Stack additions: [S0, V728]
Exit stack: [V12, 0x348, V728]

================================

Block 0x77b
[0x77b:0x780]
---
Predecessors: [0x43e]
Successors: [0x348]
---
0x77b JUMPDEST
0x77c PUSH1 0x5
0x77e SLOAD
0x77f DUP2
0x780 JUMP
---
0x77b: JUMPDEST 
0x77c: V729 = 0x5
0x77e: V730 = S[0x5]
0x780: JUMP 0x348
---
Entry stack: [V12, 0x348]
Stack pops: 1
Stack additions: [S0, V730]
Exit stack: [V12, 0x348, V730]

================================

Block 0x781
[0x781:0x786]
---
Predecessors: [0x463]
Successors: [0x348]
---
0x781 JUMPDEST
0x782 PUSH1 0x7
0x784 SLOAD
0x785 DUP2
0x786 JUMP
---
0x781: JUMPDEST 
0x782: V731 = 0x7
0x784: V732 = S[0x7]
0x786: JUMP 0x348
---
Entry stack: [V12, 0x348]
Stack pops: 1
Stack additions: [S0, V732]
Exit stack: [V12, 0x348, V732]

================================

Block 0x787
[0x787:0x794]
---
Predecessors: [0x488]
Successors: [0x490]
---
0x787 JUMPDEST
0x788 PUSH1 0x9
0x78a SLOAD
0x78b PUSH2 0x100
0x78e SWAP1
0x78f DIV
0x790 PUSH1 0xff
0x792 AND
0x793 DUP2
0x794 JUMP
---
0x787: JUMPDEST 
0x788: V733 = 0x9
0x78a: V734 = S[0x9]
0x78b: V735 = 0x100
0x78f: V736 = DIV V734 0x100
0x790: V737 = 0xff
0x792: V738 = AND 0xff V736
0x794: JUMP 0x490
---
Entry stack: [V12, 0x490]
Stack pops: 1
Stack additions: [S0, V738]
Exit stack: [V12, 0x490, V738]

================================

Block 0x795
[0x795:0x79d]
---
Predecessors: [0x4af]
Successors: [0x490]
---
0x795 JUMPDEST
0x796 PUSH1 0x9
0x798 SLOAD
0x799 PUSH1 0xff
0x79b AND
0x79c DUP2
0x79d JUMP
---
0x795: JUMPDEST 
0x796: V739 = 0x9
0x798: V740 = S[0x9]
0x799: V741 = 0xff
0x79b: V742 = AND 0xff V740
0x79d: JUMP 0x490
---
Entry stack: [V12, 0x490]
Stack pops: 1
Stack additions: [S0, V742]
Exit stack: [V12, 0x490, V742]

================================

Block 0x79e
[0x79e:0x7f2]
---
Predecessors: [0x4d6]
Successors: [0x678, 0x7f3]
---
0x79e JUMPDEST
0x79f PUSH1 0x6
0x7a1 SLOAD
0x7a2 PUSH1 0x1
0x7a4 PUSH1 0xa0
0x7a6 PUSH1 0x2
0x7a8 EXP
0x7a9 SUB
0x7aa AND
0x7ab PUSH4 0x9b96eece
0x7b0 ADDRESS
0x7b1 PUSH1 0x0
0x7b3 PUSH1 0x40
0x7b5 MLOAD
0x7b6 PUSH1 0x20
0x7b8 ADD
0x7b9 MSTORE
0x7ba PUSH1 0x40
0x7bc MLOAD
0x7bd PUSH1 0xe0
0x7bf PUSH1 0x2
0x7c1 EXP
0x7c2 PUSH4 0xffffffff
0x7c7 DUP5
0x7c8 AND
0x7c9 MUL
0x7ca DUP2
0x7cb MSTORE
0x7cc PUSH1 0x1
0x7ce PUSH1 0xa0
0x7d0 PUSH1 0x2
0x7d2 EXP
0x7d3 SUB
0x7d4 SWAP1
0x7d5 SWAP2
0x7d6 AND
0x7d7 PUSH1 0x4
0x7d9 DUP3
0x7da ADD
0x7db MSTORE
0x7dc PUSH1 0x24
0x7de ADD
0x7df PUSH1 0x20
0x7e1 PUSH1 0x40
0x7e3 MLOAD
0x7e4 DUP1
0x7e5 DUP4
0x7e6 SUB
0x7e7 DUP2
0x7e8 PUSH1 0x0
0x7ea DUP8
0x7eb DUP1
0x7ec EXTCODESIZE
0x7ed ISZERO
0x7ee ISZERO
0x7ef PUSH2 0x678
0x7f2 JUMPI
---
0x79e: JUMPDEST 
0x79f: V743 = 0x6
0x7a1: V744 = S[0x6]
0x7a2: V745 = 0x1
0x7a4: V746 = 0xa0
0x7a6: V747 = 0x2
0x7a8: V748 = EXP 0x2 0xa0
0x7a9: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7aa: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V744
0x7ab: V751 = 0x9b96eece
0x7b0: V752 = ADDRESS
0x7b1: V753 = 0x0
0x7b3: V754 = 0x40
0x7b5: V755 = M[0x40]
0x7b6: V756 = 0x20
0x7b8: V757 = ADD 0x20 V755
0x7b9: M[V757] = 0x0
0x7ba: V758 = 0x40
0x7bc: V759 = M[0x40]
0x7bd: V760 = 0xe0
0x7bf: V761 = 0x2
0x7c1: V762 = EXP 0x2 0xe0
0x7c2: V763 = 0xffffffff
0x7c8: V764 = AND 0x9b96eece 0xffffffff
0x7c9: V765 = MUL 0x9b96eece 0x100000000000000000000000000000000000000000000000000000000
0x7cb: M[V759] = 0x9b96eece00000000000000000000000000000000000000000000000000000000
0x7cc: V766 = 0x1
0x7ce: V767 = 0xa0
0x7d0: V768 = 0x2
0x7d2: V769 = EXP 0x2 0xa0
0x7d3: V770 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d6: V771 = AND V752 0xffffffffffffffffffffffffffffffffffffffff
0x7d7: V772 = 0x4
0x7da: V773 = ADD V759 0x4
0x7db: M[V773] = V771
0x7dc: V774 = 0x24
0x7de: V775 = ADD 0x24 V759
0x7df: V776 = 0x20
0x7e1: V777 = 0x40
0x7e3: V778 = M[0x40]
0x7e6: V779 = SUB V775 V778
0x7e8: V780 = 0x0
0x7ec: V781 = EXTCODESIZE V750
0x7ed: V782 = ISZERO V781
0x7ee: V783 = ISZERO V782
0x7ef: V784 = 0x678
0x7f2: JUMPI 0x678 V783
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: [V750, 0x9b96eece, V775, 0x20, V778, V779, V778, 0x0, V750]
Exit stack: [V12, 0x27e, V750, 0x9b96eece, V775, 0x20, V778, V779, V778, 0x0, V750]

================================

Block 0x7f3
[0x7f3:0x7f6]
---
Predecessors: [0x79e]
Successors: []
---
0x7f3 PUSH1 0x0
0x7f5 DUP1
0x7f6 REVERT
---
0x7f3: V785 = 0x0
0x7f6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x27e, V750, 0x9b96eece, V775, 0x20, V778, V779, V778, 0x0, V750]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, V750, 0x9b96eece, V775, 0x20, V778, V779, V778, 0x0, V750]

================================

Block 0x7f7
[0x7f7:0x803]
---
Predecessors: []
Successors: [0x689, 0x804]
---
0x7f7 JUMPDEST
0x7f8 PUSH2 0x2c6
0x7fb GAS
0x7fc SUB
0x7fd CALL
0x7fe ISZERO
0x7ff ISZERO
0x800 PUSH2 0x689
0x803 JUMPI
---
0x7f7: JUMPDEST 
0x7f8: V786 = 0x2c6
0x7fb: V787 = GAS
0x7fc: V788 = SUB V787 0x2c6
0x7fd: V789 = CALL V788 S0 S1 S2 S3 S4 S5
0x7fe: V790 = ISZERO V789
0x7ff: V791 = ISZERO V790
0x800: V792 = 0x689
0x803: JUMPI 0x689 V791
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x804
[0x804:0x814]
---
Predecessors: [0x7f7]
Successors: [0x815]
---
0x804 PUSH1 0x0
0x806 DUP1
0x807 REVERT
0x808 JUMPDEST
0x809 POP
0x80a POP
0x80b POP
0x80c PUSH1 0x40
0x80e MLOAD
0x80f DUP1
0x810 MLOAD
0x811 PUSH1 0x7
0x813 SSTORE
0x814 POP
---
0x804: V793 = 0x0
0x807: REVERT 0x0 0x0
0x808: JUMPDEST 
0x80c: V794 = 0x40
0x80e: V795 = M[0x40]
0x810: V796 = M[V795]
0x811: V797 = 0x7
0x813: S[0x7] = V796
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x815
[0x815:0x816]
---
Predecessors: [0x804]
Successors: []
Has unresolved jump.
---
0x815 JUMPDEST
0x816 JUMP
---
0x815: JUMPDEST 
0x816: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x817
[0x817:0x823]
---
Predecessors: [0x4eb]
Successors: [0x27a, 0x824]
---
0x817 JUMPDEST
0x818 PUSH1 0x4
0x81a SLOAD
0x81b PUSH1 0x0
0x81d SWAP1
0x81e TIMESTAMP
0x81f LT
0x820 PUSH2 0x27a
0x823 JUMPI
---
0x817: JUMPDEST 
0x818: V798 = 0x4
0x81a: V799 = S[0x4]
0x81b: V800 = 0x0
0x81e: V801 = TIMESTAMP
0x81f: V802 = LT V801 V799
0x820: V803 = 0x27a
0x823: JUMPI 0x27a V802
---
Entry stack: [V12, 0x27e]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x27e, 0x0]

================================

Block 0x824
[0x824:0x82f]
---
Predecessors: [0x817]
Successors: [0x830, 0x8f6]
---
0x824 PUSH1 0x9
0x826 SLOAD
0x827 PUSH1 0xff
0x829 AND
0x82a ISZERO
0x82b ISZERO
0x82c PUSH2 0x8f6
0x82f JUMPI
---
0x824: V804 = 0x9
0x826: V805 = S[0x9]
0x827: V806 = 0xff
0x829: V807 = AND 0xff V805
0x82a: V808 = ISZERO V807
0x82b: V809 = ISZERO V808
0x82c: V810 = 0x8f6
0x82f: JUMPI 0x8f6 V809
---
Entry stack: [V12, 0x27e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, 0x0]

================================

Block 0x830
[0x830:0x856]
---
Predecessors: [0x824]
Successors: [0x857, 0x8f6]
---
0x830 POP
0x831 PUSH1 0x1
0x833 PUSH1 0xa0
0x835 PUSH1 0x2
0x837 EXP
0x838 SUB
0x839 CALLER
0x83a AND
0x83b PUSH1 0x0
0x83d SWAP1
0x83e DUP2
0x83f MSTORE
0x840 PUSH1 0x8
0x842 PUSH1 0x20
0x844 MSTORE
0x845 PUSH1 0x40
0x847 DUP2
0x848 SHA3
0x849 DUP1
0x84a SLOAD
0x84b SWAP1
0x84c DUP3
0x84d SWAP1
0x84e SSTORE
0x84f SWAP1
0x850 DUP2
0x851 GT
0x852 ISZERO
0x853 PUSH2 0x8f6
0x856 JUMPI
---
0x831: V811 = 0x1
0x833: V812 = 0xa0
0x835: V813 = 0x2
0x837: V814 = EXP 0x2 0xa0
0x838: V815 = SUB 0x10000000000000000000000000000000000000000 0x1
0x839: V816 = CALLER
0x83a: V817 = AND V816 0xffffffffffffffffffffffffffffffffffffffff
0x83b: V818 = 0x0
0x83f: M[0x0] = V817
0x840: V819 = 0x8
0x842: V820 = 0x20
0x844: M[0x20] = 0x8
0x845: V821 = 0x40
0x848: V822 = SHA3 0x0 0x40
0x84a: V823 = S[V822]
0x84e: S[V822] = 0x0
0x851: V824 = GT V823 0x0
0x852: V825 = ISZERO V824
0x853: V826 = 0x8f6
0x856: JUMPI 0x8f6 V825
---
Entry stack: [V12, 0x27e, 0x0]
Stack pops: 1
Stack additions: [V823]
Exit stack: [V12, 0x27e, V823]

================================

Block 0x857
[0x857:0x881]
---
Predecessors: [0x830]
Successors: [0x882, 0x8da]
---
0x857 PUSH1 0x1
0x859 PUSH1 0xa0
0x85b PUSH1 0x2
0x85d EXP
0x85e SUB
0x85f CALLER
0x860 AND
0x861 DUP2
0x862 ISZERO
0x863 PUSH2 0x8fc
0x866 MUL
0x867 DUP3
0x868 PUSH1 0x40
0x86a MLOAD
0x86b PUSH1 0x0
0x86d PUSH1 0x40
0x86f MLOAD
0x870 DUP1
0x871 DUP4
0x872 SUB
0x873 DUP2
0x874 DUP6
0x875 DUP9
0x876 DUP9
0x877 CALL
0x878 SWAP4
0x879 POP
0x87a POP
0x87b POP
0x87c POP
0x87d ISZERO
0x87e PUSH2 0x8da
0x881 JUMPI
---
0x857: V827 = 0x1
0x859: V828 = 0xa0
0x85b: V829 = 0x2
0x85d: V830 = EXP 0x2 0xa0
0x85e: V831 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85f: V832 = CALLER
0x860: V833 = AND V832 0xffffffffffffffffffffffffffffffffffffffff
0x862: V834 = ISZERO V823
0x863: V835 = 0x8fc
0x866: V836 = MUL 0x8fc V834
0x868: V837 = 0x40
0x86a: V838 = M[0x40]
0x86b: V839 = 0x0
0x86d: V840 = 0x40
0x86f: V841 = M[0x40]
0x872: V842 = SUB V838 V841
0x877: V843 = CALL V836 V833 V823 V841 V842 V841 0x0
0x87d: V844 = ISZERO V843
0x87e: V845 = 0x8da
0x881: JUMPI 0x8da V844
---
Entry stack: [V12, 0x27e, V823]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x27e, V823]

================================

Block 0x882
[0x882:0x8d9]
---
Predecessors: [0x857]
Successors: [0x8f6]
---
0x882 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x8a3 CALLER
0x8a4 DUP3
0x8a5 PUSH1 0x0
0x8a7 PUSH1 0x40
0x8a9 MLOAD
0x8aa PUSH1 0x1
0x8ac PUSH1 0xa0
0x8ae PUSH1 0x2
0x8b0 EXP
0x8b1 SUB
0x8b2 SWAP1
0x8b3 SWAP4
0x8b4 AND
0x8b5 DUP4
0x8b6 MSTORE
0x8b7 PUSH1 0x20
0x8b9 DUP4
0x8ba ADD
0x8bb SWAP2
0x8bc SWAP1
0x8bd SWAP2
0x8be MSTORE
0x8bf ISZERO
0x8c0 ISZERO
0x8c1 PUSH1 0x40
0x8c3 DUP1
0x8c4 DUP4
0x8c5 ADD
0x8c6 SWAP2
0x8c7 SWAP1
0x8c8 SWAP2
0x8c9 MSTORE
0x8ca PUSH1 0x60
0x8cc SWAP1
0x8cd SWAP2
0x8ce ADD
0x8cf SWAP1
0x8d0 MLOAD
0x8d1 DUP1
0x8d2 SWAP2
0x8d3 SUB
0x8d4 SWAP1
0x8d5 LOG1
0x8d6 PUSH2 0x8f6
0x8d9 JUMP
---
0x882: V846 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x8a3: V847 = CALLER
0x8a5: V848 = 0x0
0x8a7: V849 = 0x40
0x8a9: V850 = M[0x40]
0x8aa: V851 = 0x1
0x8ac: V852 = 0xa0
0x8ae: V853 = 0x2
0x8b0: V854 = EXP 0x2 0xa0
0x8b1: V855 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b4: V856 = AND V847 0xffffffffffffffffffffffffffffffffffffffff
0x8b6: M[V850] = V856
0x8b7: V857 = 0x20
0x8ba: V858 = ADD V850 0x20
0x8be: M[V858] = V823
0x8bf: V859 = ISZERO 0x0
0x8c0: V860 = ISZERO 0x1
0x8c1: V861 = 0x40
0x8c5: V862 = ADD V850 0x40
0x8c9: M[V862] = 0x0
0x8ca: V863 = 0x60
0x8ce: V864 = ADD V850 0x60
0x8d0: V865 = M[0x40]
0x8d3: V866 = SUB V864 V865
0x8d5: LOG V865 V866 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x8d6: V867 = 0x8f6
0x8d9: JUMP 0x8f6
---
Entry stack: [V12, 0x27e, V823]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x27e, V823]

================================

Block 0x8da
[0x8da:0x8f5]
---
Predecessors: [0x857]
Successors: [0x8f6]
---
0x8da JUMPDEST
0x8db PUSH1 0x1
0x8dd PUSH1 0xa0
0x8df PUSH1 0x2
0x8e1 EXP
0x8e2 SUB
0x8e3 CALLER
0x8e4 AND
0x8e5 PUSH1 0x0
0x8e7 SWAP1
0x8e8 DUP2
0x8e9 MSTORE
0x8ea PUSH1 0x8
0x8ec PUSH1 0x20
0x8ee MSTORE
0x8ef PUSH1 0x40
0x8f1 SWAP1
0x8f2 SHA3
0x8f3 DUP2
0x8f4 SWAP1
0x8f5 SSTORE
---
0x8da: JUMPDEST 
0x8db: V868 = 0x1
0x8dd: V869 = 0xa0
0x8df: V870 = 0x2
0x8e1: V871 = EXP 0x2 0xa0
0x8e2: V872 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e3: V873 = CALLER
0x8e4: V874 = AND V873 0xffffffffffffffffffffffffffffffffffffffff
0x8e5: V875 = 0x0
0x8e9: M[0x0] = V874
0x8ea: V876 = 0x8
0x8ec: V877 = 0x20
0x8ee: M[0x20] = 0x8
0x8ef: V878 = 0x40
0x8f2: V879 = SHA3 0x0 0x40
0x8f5: S[V879] = V823
---
Entry stack: [V12, 0x27e, V823]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x27e, V823]

================================

Block 0x8f6
[0x8f6:0x8f6]
---
Predecessors: [0x824, 0x830, 0x882, 0x8da]
Successors: [0x8f7]
---
0x8f6 JUMPDEST
---
0x8f6: JUMPDEST 
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x8f7
[0x8f7:0x8f7]
---
Predecessors: [0x8f6]
Successors: [0x8f8]
---
0x8f7 JUMPDEST
---
0x8f7: JUMPDEST 
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x8f8
[0x8f8:0x904]
---
Predecessors: [0x8f7]
Successors: [0x905, 0x918]
---
0x8f8 JUMPDEST
0x8f9 PUSH1 0x9
0x8fb SLOAD
0x8fc PUSH1 0xff
0x8fe AND
0x8ff DUP1
0x900 ISZERO
0x901 PUSH2 0x918
0x904 JUMPI
---
0x8f8: JUMPDEST 
0x8f9: V880 = 0x9
0x8fb: V881 = S[0x9]
0x8fc: V882 = 0xff
0x8fe: V883 = AND 0xff V881
0x900: V884 = ISZERO V883
0x901: V885 = 0x918
0x904: JUMPI 0x918 V884
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: [V883]
Exit stack: [V12, 0x27e, S0, V883]

================================

Block 0x905
[0x905:0x917]
---
Predecessors: [0x8f8]
Successors: [0x918]
---
0x905 POP
0x906 PUSH1 0x1
0x908 SLOAD
0x909 CALLER
0x90a PUSH1 0x1
0x90c PUSH1 0xa0
0x90e PUSH1 0x2
0x910 EXP
0x911 SUB
0x912 SWAP1
0x913 DUP2
0x914 AND
0x915 SWAP2
0x916 AND
0x917 EQ
---
0x906: V886 = 0x1
0x908: V887 = S[0x1]
0x909: V888 = CALLER
0x90a: V889 = 0x1
0x90c: V890 = 0xa0
0x90e: V891 = 0x2
0x910: V892 = EXP 0x2 0xa0
0x911: V893 = SUB 0x10000000000000000000000000000000000000000 0x1
0x914: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff V888
0x916: V895 = AND V887 0xffffffffffffffffffffffffffffffffffffffff
0x917: V896 = EQ V895 V894
---
Entry stack: [V12, 0x27e, S1, V883]
Stack pops: 1
Stack additions: [V896]
Exit stack: [V12, 0x27e, S1, V896]

================================

Block 0x918
[0x918:0x91d]
---
Predecessors: [0x8f8, 0x905]
Successors: [0x27a, 0x91e]
---
0x918 JUMPDEST
0x919 ISZERO
0x91a PUSH2 0x27a
0x91d JUMPI
---
0x918: JUMPDEST 
0x919: V897 = ISZERO S0
0x91a: V898 = 0x27a
0x91d: JUMPI 0x27a V897
---
Entry stack: [V12, 0x27e, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x27e, S1]

================================

Block 0x91e
[0x91e:0x950]
---
Predecessors: [0x918]
Successors: [0x951, 0x9b8]
---
0x91e PUSH1 0x1
0x920 SLOAD
0x921 PUSH1 0x3
0x923 SLOAD
0x924 PUSH1 0x1
0x926 PUSH1 0xa0
0x928 PUSH1 0x2
0x92a EXP
0x92b SUB
0x92c SWAP1
0x92d SWAP2
0x92e AND
0x92f SWAP1
0x930 DUP1
0x931 ISZERO
0x932 PUSH2 0x8fc
0x935 MUL
0x936 SWAP1
0x937 PUSH1 0x40
0x939 MLOAD
0x93a PUSH1 0x0
0x93c PUSH1 0x40
0x93e MLOAD
0x93f DUP1
0x940 DUP4
0x941 SUB
0x942 DUP2
0x943 DUP6
0x944 DUP9
0x945 DUP9
0x946 CALL
0x947 SWAP4
0x948 POP
0x949 POP
0x94a POP
0x94b POP
0x94c ISZERO
0x94d PUSH2 0x9b8
0x950 JUMPI
---
0x91e: V899 = 0x1
0x920: V900 = S[0x1]
0x921: V901 = 0x3
0x923: V902 = S[0x3]
0x924: V903 = 0x1
0x926: V904 = 0xa0
0x928: V905 = 0x2
0x92a: V906 = EXP 0x2 0xa0
0x92b: V907 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92e: V908 = AND V900 0xffffffffffffffffffffffffffffffffffffffff
0x931: V909 = ISZERO V902
0x932: V910 = 0x8fc
0x935: V911 = MUL 0x8fc V909
0x937: V912 = 0x40
0x939: V913 = M[0x40]
0x93a: V914 = 0x0
0x93c: V915 = 0x40
0x93e: V916 = M[0x40]
0x941: V917 = SUB V913 V916
0x946: V918 = CALL V911 V908 V902 V916 V917 V916 0x0
0x94c: V919 = ISZERO V918
0x94d: V920 = 0x9b8
0x950: JUMPI 0x9b8 V919
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x951
[0x951:0x9b7]
---
Predecessors: [0x91e]
Successors: [0x27a]
---
0x951 PUSH1 0x1
0x953 SLOAD
0x954 PUSH1 0x3
0x956 SLOAD
0x957 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x978 SWAP2
0x979 PUSH1 0x1
0x97b PUSH1 0xa0
0x97d PUSH1 0x2
0x97f EXP
0x980 SUB
0x981 AND
0x982 SWAP1
0x983 PUSH1 0x0
0x985 PUSH1 0x40
0x987 MLOAD
0x988 PUSH1 0x1
0x98a PUSH1 0xa0
0x98c PUSH1 0x2
0x98e EXP
0x98f SUB
0x990 SWAP1
0x991 SWAP4
0x992 AND
0x993 DUP4
0x994 MSTORE
0x995 PUSH1 0x20
0x997 DUP4
0x998 ADD
0x999 SWAP2
0x99a SWAP1
0x99b SWAP2
0x99c MSTORE
0x99d ISZERO
0x99e ISZERO
0x99f PUSH1 0x40
0x9a1 DUP1
0x9a2 DUP4
0x9a3 ADD
0x9a4 SWAP2
0x9a5 SWAP1
0x9a6 SWAP2
0x9a7 MSTORE
0x9a8 PUSH1 0x60
0x9aa SWAP1
0x9ab SWAP2
0x9ac ADD
0x9ad SWAP1
0x9ae MLOAD
0x9af DUP1
0x9b0 SWAP2
0x9b1 SUB
0x9b2 SWAP1
0x9b3 LOG1
0x9b4 PUSH2 0x27a
0x9b7 JUMP
---
0x951: V921 = 0x1
0x953: V922 = S[0x1]
0x954: V923 = 0x3
0x956: V924 = S[0x3]
0x957: V925 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x979: V926 = 0x1
0x97b: V927 = 0xa0
0x97d: V928 = 0x2
0x97f: V929 = EXP 0x2 0xa0
0x980: V930 = SUB 0x10000000000000000000000000000000000000000 0x1
0x981: V931 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0x983: V932 = 0x0
0x985: V933 = 0x40
0x987: V934 = M[0x40]
0x988: V935 = 0x1
0x98a: V936 = 0xa0
0x98c: V937 = 0x2
0x98e: V938 = EXP 0x2 0xa0
0x98f: V939 = SUB 0x10000000000000000000000000000000000000000 0x1
0x992: V940 = AND V931 0xffffffffffffffffffffffffffffffffffffffff
0x994: M[V934] = V940
0x995: V941 = 0x20
0x998: V942 = ADD V934 0x20
0x99c: M[V942] = V924
0x99d: V943 = ISZERO 0x0
0x99e: V944 = ISZERO 0x1
0x99f: V945 = 0x40
0x9a3: V946 = ADD V934 0x40
0x9a7: M[V946] = 0x0
0x9a8: V947 = 0x60
0x9ac: V948 = ADD V934 0x60
0x9ae: V949 = M[0x40]
0x9b1: V950 = SUB V948 V949
0x9b3: LOG V949 V950 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x9b4: V951 = 0x27a
0x9b7: JUMP 0x27a
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x9b8
[0x9b8:0x9c2]
---
Predecessors: [0x91e]
Successors: [0x9c3]
---
0x9b8 JUMPDEST
0x9b9 PUSH1 0x9
0x9bb DUP1
0x9bc SLOAD
0x9bd PUSH1 0xff
0x9bf NOT
0x9c0 AND
0x9c1 SWAP1
0x9c2 SSTORE
---
0x9b8: JUMPDEST 
0x9b9: V952 = 0x9
0x9bc: V953 = S[0x9]
0x9bd: V954 = 0xff
0x9bf: V955 = NOT 0xff
0x9c0: V956 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V953
0x9c2: S[0x9] = V956
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x9c3
[0x9c3:0x9c3]
---
Predecessors: [0x9b8]
Successors: [0x9c4]
---
0x9c3 JUMPDEST
---
0x9c3: JUMPDEST 
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x9c4
[0x9c4:0x9c4]
---
Predecessors: [0x9c3]
Successors: [0x9c5]
---
0x9c4 JUMPDEST
---
0x9c4: JUMPDEST 
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x9c5
[0x9c5:0x9c5]
---
Predecessors: [0x9c4]
Successors: [0x9c6]
---
0x9c5 JUMPDEST
---
0x9c5: JUMPDEST 
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x9c6
[0x9c6:0x9c6]
---
Predecessors: [0x9c5]
Successors: [0x9c7]
---
0x9c6 JUMPDEST
---
0x9c6: JUMPDEST 
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27e, S0]

================================

Block 0x9c7
[0x9c7:0x9c9]
---
Predecessors: [0x9c6]
Successors: [0x27e]
---
0x9c7 JUMPDEST
0x9c8 POP
0x9c9 JUMP
---
0x9c7: JUMPDEST 
0x9c9: JUMP 0x27e
---
Entry stack: [V12, 0x27e, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x9ca
[0x9ca:0xa0d]
---
Predecessors: []
Successors: []
---
0x9ca STOP
0x9cb LOG1
0x9cc PUSH6 0x627a7a723058
0x9d3 SHA3
0x9d4 MISSING 0x5c
0x9d5 MISSING 0xd4
0x9d6 SHR
0x9d7 SWAP13
0x9d8 MISSING 0xf8
0x9d9 STOP
0x9da MISSING 0xcd
0x9db DUP10
0x9dc PUSH12 0xb10a20c4289066489ef248ef
0x9e9 INVALID
0x9ea MISSING 0xc
0x9eb BYTE
0x9ec MISSING 0x2c
0x9ed PUSH32 0x9de5b9eed94b0029
---
0x9ca: STOP 
0x9cb: LOG S0 S1 S2
0x9cc: V957 = 0x627a7a723058
0x9d3: V958 = SHA3 0x627a7a723058 S3
0x9d4: MISSING 0x5c
0x9d5: MISSING 0xd4
0x9d6: V959 = SHR S0 S1
0x9d8: MISSING 0xf8
0x9d9: STOP 
0x9da: MISSING 0xcd
0x9dc: V960 = 0xb10a20c4289066489ef248ef
0x9e9: INVALID 
0x9ea: MISSING 0xc
0x9eb: V961 = BYTE S0 S1
0x9ec: MISSING 0x2c
0x9ed: V962 = 0x9de5b9eed94b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V958, S14, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V959, 0xb10a20c4289066489ef248ef, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V961, 0x9de5b9eed94b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x280
Exit block: 0x27e
Body: 0x27e, 0x280, 0x287, 0x28b, 0x4f5, 0x4ff, 0x50a, 0x575, 0x576, 0x577, 0x578

Function 1:
Public function signature: 0x263379b
Entry block: 0x295
Exit block: 0x27e
Body: 0x27e, 0x295, 0x29c, 0x2a0, 0x575, 0x576, 0x577, 0x578, 0x57a, 0x584, 0x58f, 0x593, 0x5ab, 0x606, 0x60a, 0x617, 0x61b, 0x674, 0x678, 0x685, 0x689, 0x696, 0x697, 0x698, 0x699

Function 2:
Public function signature: 0x6fdde03
Entry block: 0x2aa
Exit block: 0x327
Body: 0x2aa, 0x2b1, 0x2b5, 0x2bd, 0x2e1, 0x2ea, 0x2f2, 0x2fa, 0x30e, 0x327, 0x69b, 0x6eb, 0x6f3, 0x706, 0x714, 0x728, 0x731

Function 3:
Public function signature: 0x29dcb0cf
Entry block: 0x335
Exit block: 0x348
Body: 0x335, 0x33c, 0x340, 0x348, 0x739

Function 4:
Public function signature: 0x38af3eed
Entry block: 0x35a
Exit block: 0x36d
Body: 0x35a, 0x361, 0x365, 0x36d, 0x73f

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x389
Exit block: 0x36d
Body: 0x36d, 0x389, 0x390, 0x394, 0x74e

Function 6:
Public function signature: 0x70a08231
Entry block: 0x3b8
Exit block: 0x348
Body: 0x348, 0x3b8, 0x3bf, 0x3c3, 0x75d

Function 7:
Public function signature: 0x7a3a0e84
Entry block: 0x3e9
Exit block: 0x348
Body: 0x348, 0x3e9, 0x3f0, 0x3f4, 0x76f

Function 8:
Public function signature: 0x7b3e5e7b
Entry block: 0x40e
Exit block: 0x348
Body: 0x348, 0x40e, 0x415, 0x419, 0x775

Function 9:
Public function signature: 0xa035b1fe
Entry block: 0x433
Exit block: 0x348
Body: 0x348, 0x433, 0x43a, 0x43e, 0x77b

Function 10:
Public function signature: 0xb31f8f93
Entry block: 0x458
Exit block: 0x348
Body: 0x348, 0x458, 0x45f, 0x463, 0x781

Function 11:
Public function signature: 0xccb07cef
Entry block: 0x47d
Exit block: 0x490
Body: 0x47d, 0x484, 0x488, 0x490, 0x787

Function 12:
Public function signature: 0xd424f628
Entry block: 0x4a4
Exit block: 0x490
Body: 0x490, 0x4a4, 0x4ab, 0x4af, 0x795

Function 13:
Public function signature: 0xfd6133a6
Entry block: 0x4cb
Exit block: 0x27e
Body: 0x27e, 0x4cb, 0x4d2, 0x4d6, 0x678, 0x685, 0x689, 0x696, 0x697, 0x698, 0x699, 0x79e, 0x7f3

Function 14:
Public function signature: 0xfd6b7ef8
Entry block: 0x4e0
Exit block: 0x27e
Body: 0x27a, 0x27b, 0x27e, 0x4e0, 0x4e7, 0x4eb, 0x817, 0x824, 0x830, 0x857, 0x882, 0x8da, 0x8f6, 0x8f7, 0x8f8, 0x905, 0x918, 0x91e, 0x951, 0x9b8, 0x9c3, 0x9c4, 0x9c5, 0x9c6, 0x9c7

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x27e
Body: 0xbf, 0xc3, 0xd7, 0xdb, 0xe7, 0xe8, 0xf5, 0xf9, 0x13e, 0x13f, 0x17f, 0x183, 0x190, 0x194, 0x240, 0x244, 0x251, 0x255, 0x26b, 0x27a, 0x27b, 0x27e

