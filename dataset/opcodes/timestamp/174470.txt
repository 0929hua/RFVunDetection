Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x18b]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x18b
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x18b
0x24: JUMPI 0x18b V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1a0]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x1a0
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x1a0
0x2f: JUMPI 0x1a0 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1c5]
---
0x30 DUP1
0x31 PUSH4 0x38af3eed
0x36 EQ
0x37 PUSH2 0x1c5
0x3a JUMPI
---
0x31: V19 = 0x38af3eed
0x36: V20 = EQ 0x38af3eed V12
0x37: V21 = 0x1c5
0x3a: JUMPI 0x1c5 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1f4]
---
0x3b DUP1
0x3c PUSH4 0x6e66f6e9
0x41 EQ
0x42 PUSH2 0x1f4
0x45 JUMPI
---
0x3c: V22 = 0x6e66f6e9
0x41: V23 = EQ 0x6e66f6e9 V12
0x42: V24 = 0x1f4
0x45: JUMPI 0x1f4 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x223]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x223
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x223
0x50: JUMPI 0x223 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x254]
---
0x51 DUP1
0x52 PUSH4 0x7a3a0e84
0x57 EQ
0x58 PUSH2 0x254
0x5b JUMPI
---
0x52: V28 = 0x7a3a0e84
0x57: V29 = EQ 0x7a3a0e84 V12
0x58: V30 = 0x254
0x5b: JUMPI 0x254 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x279]
---
0x5c DUP1
0x5d PUSH4 0x7b3e5e7b
0x62 EQ
0x63 PUSH2 0x279
0x66 JUMPI
---
0x5d: V31 = 0x7b3e5e7b
0x62: V32 = EQ 0x7b3e5e7b V12
0x63: V33 = 0x279
0x66: JUMPI 0x279 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x29e]
---
0x67 DUP1
0x68 PUSH4 0xa035b1fe
0x6d EQ
0x6e PUSH2 0x29e
0x71 JUMPI
---
0x68: V34 = 0xa035b1fe
0x6d: V35 = EQ 0xa035b1fe V12
0x6e: V36 = 0x29e
0x71: JUMPI 0x29e V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2c3]
---
0x72 DUP1
0x73 PUSH4 0xa4821719
0x78 EQ
0x79 PUSH2 0x2c3
0x7c JUMPI
---
0x73: V37 = 0xa4821719
0x78: V38 = EQ 0xa4821719 V12
0x79: V39 = 0x2c3
0x7c: JUMPI 0x2c3 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2cd]
---
0x7d DUP1
0x7e PUSH4 0xfd6b7ef8
0x83 EQ
0x84 PUSH2 0x2cd
0x87 JUMPI
---
0x7e: V40 = 0xfd6b7ef8
0x83: V41 = EQ 0xfd6b7ef8 V12
0x84: V42 = 0x2cd
0x87: JUMPI 0x2cd V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x0, 0x7d]
Successors: [0x8c]
---
0x88 JUMPDEST
0x89 PUSH2 0x189
---
0x88: JUMPDEST 
0x89: V43 = 0x189
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x8c
[0x8c:0x9f]
---
Predecessors: [0x88, 0x2c3]
Successors: [0xa0, 0xa4]
---
0x8c JUMPDEST
0x8d PUSH1 0x7
0x8f SLOAD
0x90 PUSH1 0x0
0x92 SWAP1
0x93 PUSH2 0x100
0x96 SWAP1
0x97 DIV
0x98 PUSH1 0xff
0x9a AND
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x8c: JUMPDEST 
0x8d: V44 = 0x7
0x8f: V45 = S[0x7]
0x90: V46 = 0x0
0x93: V47 = 0x100
0x97: V48 = DIV V45 0x100
0x98: V49 = 0xff
0x9a: V50 = AND 0xff V48
0x9b: V51 = ISZERO V50
0x9c: V52 = 0xa4
0x9f: JUMPI 0xa4 V51
---
Entry stack: [V12, 0x189]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x189, 0x0]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x8c]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V53 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x189, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, 0x0]

================================

Block 0xa4
[0xa4:0xe9]
---
Predecessors: [0x8c, 0x3b3]
Successors: [0xea, 0xeb]
---
0xa4 JUMPDEST
0xa5 CALLER
0xa6 PUSH1 0x1
0xa8 PUSH1 0xa0
0xaa PUSH1 0x2
0xac EXP
0xad SUB
0xae DUP2
0xaf DUP2
0xb0 AND
0xb1 PUSH1 0x0
0xb3 SWAP1
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x6
0xb8 PUSH1 0x20
0xba MSTORE
0xbb PUSH1 0x40
0xbd SWAP1
0xbe SHA3
0xbf DUP1
0xc0 SLOAD
0xc1 CALLVALUE
0xc2 SWAP5
0xc3 SWAP1
0xc4 SWAP5
0xc5 ADD
0xc6 SWAP4
0xc7 DUP5
0xc8 ADD
0xc9 SWAP1
0xca SSTORE
0xcb PUSH1 0x2
0xcd DUP1
0xce SLOAD
0xcf DUP5
0xd0 ADD
0xd1 SWAP1
0xd2 SSTORE
0xd3 PUSH1 0x5
0xd5 SLOAD
0xd6 PUSH1 0x4
0xd8 SLOAD
0xd9 SWAP2
0xda AND
0xdb SWAP2
0xdc PUSH4 0xa9059cbb
0xe1 SWAP2
0xe2 DUP5
0xe3 DUP2
0xe4 ISZERO
0xe5 ISZERO
0xe6 PUSH2 0xeb
0xe9 JUMPI
---
0xa4: JUMPDEST 
0xa5: V54 = CALLER
0xa6: V55 = 0x1
0xa8: V56 = 0xa0
0xaa: V57 = 0x2
0xac: V58 = EXP 0x2 0xa0
0xad: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xb1: V61 = 0x0
0xb5: M[0x0] = V60
0xb6: V62 = 0x6
0xb8: V63 = 0x20
0xba: M[0x20] = 0x6
0xbb: V64 = 0x40
0xbe: V65 = SHA3 0x0 0x40
0xc0: V66 = S[V65]
0xc1: V67 = CALLVALUE
0xc5: V68 = ADD V67 0x0
0xc8: V69 = ADD V68 V66
0xca: S[V65] = V69
0xcb: V70 = 0x2
0xce: V71 = S[0x2]
0xd0: V72 = ADD V68 V71
0xd2: S[0x2] = V72
0xd3: V73 = 0x5
0xd5: V74 = S[0x5]
0xd6: V75 = 0x4
0xd8: V76 = S[0x4]
0xda: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xdc: V78 = 0xa9059cbb
0xe4: V79 = ISZERO V76
0xe5: V80 = ISZERO V79
0xe6: V81 = 0xeb
0xe9: JUMPI 0xeb V80
---
Entry stack: [V12, 0x189, 0x0]
Stack pops: 1
Stack additions: [V68, V77, 0xa9059cbb, V54, V76, V68]
Exit stack: [V12, 0x189, V68, V77, 0xa9059cbb, V54, V76, V68]

================================

Block 0xea
[0xea:0xea]
---
Predecessors: [0xa4]
Successors: []
---
0xea INVALID
---
0xea: INVALID 
---
Entry stack: [V12, 0x189, V68, V77, 0xa9059cbb, V54, V76, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, V68, V77, 0xa9059cbb, V54, V76, V68]

================================

Block 0xeb
[0xeb:0x12a]
---
Predecessors: [0xa4, 0x3c7]
Successors: [0x12b, 0x12f]
---
0xeb JUMPDEST
0xec DIV
0xed PUSH1 0x40
0xef MLOAD
0xf0 PUSH1 0xe0
0xf2 PUSH1 0x2
0xf4 EXP
0xf5 PUSH4 0xffffffff
0xfa DUP6
0xfb AND
0xfc MUL
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x1
0x101 PUSH1 0xa0
0x103 PUSH1 0x2
0x105 EXP
0x106 SUB
0x107 SWAP1
0x108 SWAP3
0x109 AND
0x10a PUSH1 0x4
0x10c DUP4
0x10d ADD
0x10e MSTORE
0x10f PUSH1 0x24
0x111 DUP3
0x112 ADD
0x113 MSTORE
0x114 PUSH1 0x44
0x116 ADD
0x117 PUSH1 0x0
0x119 PUSH1 0x40
0x11b MLOAD
0x11c DUP1
0x11d DUP4
0x11e SUB
0x11f DUP2
0x120 PUSH1 0x0
0x122 DUP8
0x123 DUP1
0x124 EXTCODESIZE
0x125 ISZERO
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0xeb: JUMPDEST 
0xec: V82 = DIV S0 S1
0xed: V83 = 0x40
0xef: V84 = M[0x40]
0xf0: V85 = 0xe0
0xf2: V86 = 0x2
0xf4: V87 = EXP 0x2 0xe0
0xf5: V88 = 0xffffffff
0xfb: V89 = AND 0xa9059cbb 0xffffffff
0xfc: V90 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xfe: M[V84] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xff: V91 = 0x1
0x101: V92 = 0xa0
0x103: V93 = 0x2
0x105: V94 = EXP 0x2 0xa0
0x106: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x109: V96 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V97 = 0x4
0x10d: V98 = ADD V84 0x4
0x10e: M[V98] = V96
0x10f: V99 = 0x24
0x112: V100 = ADD V84 0x24
0x113: M[V100] = V82
0x114: V101 = 0x44
0x116: V102 = ADD 0x44 V84
0x117: V103 = 0x0
0x119: V104 = 0x40
0x11b: V105 = M[0x40]
0x11e: V106 = SUB V102 V105
0x120: V107 = 0x0
0x124: V108 = EXTCODESIZE S4
0x125: V109 = ISZERO V108
0x126: V110 = ISZERO V109
0x127: V111 = 0x12f
0x12a: JUMPI 0x12f V110
---
Entry stack: [V12, 0x189, S5, S4, 0xa9059cbb, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V102, 0x0, V105, V106, V105, 0x0, S4]
Exit stack: [V12, 0x189, S5, S4, 0xa9059cbb, V102, 0x0, V105, V106, V105, 0x0, S4]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0xeb]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V112 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x189, S9, S8, 0xa9059cbb, V102, 0x0, V105, V106, V105, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S9, S8, 0xa9059cbb, V102, 0x0, V105, V106, V105, 0x0, S0]

================================

Block 0x12f
[0x12f:0x13b]
---
Predecessors: [0xeb, 0x411]
Successors: [0x13c, 0x140]
---
0x12f JUMPDEST
0x130 PUSH2 0x2c6
0x133 GAS
0x134 SUB
0x135 CALL
0x136 ISZERO
0x137 ISZERO
0x138 PUSH2 0x140
0x13b JUMPI
---
0x12f: JUMPDEST 
0x130: V113 = 0x2c6
0x133: V114 = GAS
0x134: V115 = SUB V114 0x2c6
0x135: V116 = CALL V115 S0 0x0 S2 S3 S4 0x0
0x136: V117 = ISZERO V116
0x137: V118 = ISZERO V117
0x138: V119 = 0x140
0x13b: JUMPI 0x140 V118
---
Entry stack: [V12, 0x189, S9, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x189, S9, S8, S7, S6]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x12f]
Successors: []
---
0x13c PUSH1 0x0
0x13e DUP1
0x13f REVERT
---
0x13c: V120 = 0x0
0x13f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x189, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S3, S2, S1, S0]

================================

Block 0x140
[0x140:0x185]
---
Predecessors: [0x12f, 0x452]
Successors: [0x186]
---
0x140 JUMPDEST
0x141 POP
0x142 POP
0x143 POP
0x144 PUSH1 0x0
0x146 DUP1
0x147 MLOAD
0x148 PUSH1 0x20
0x14a PUSH2 0x641
0x14d DUP4
0x14e CODECOPY
0x14f DUP2
0x150 MLOAD
0x151 SWAP2
0x152 MSTORE
0x153 CALLER
0x154 DUP3
0x155 PUSH1 0x1
0x157 PUSH1 0x40
0x159 MLOAD
0x15a PUSH1 0x1
0x15c PUSH1 0xa0
0x15e PUSH1 0x2
0x160 EXP
0x161 SUB
0x162 SWAP1
0x163 SWAP4
0x164 AND
0x165 DUP4
0x166 MSTORE
0x167 PUSH1 0x20
0x169 DUP4
0x16a ADD
0x16b SWAP2
0x16c SWAP1
0x16d SWAP2
0x16e MSTORE
0x16f ISZERO
0x170 ISZERO
0x171 PUSH1 0x40
0x173 DUP1
0x174 DUP4
0x175 ADD
0x176 SWAP2
0x177 SWAP1
0x178 SWAP2
0x179 MSTORE
0x17a PUSH1 0x60
0x17c SWAP1
0x17d SWAP2
0x17e ADD
0x17f SWAP1
0x180 MLOAD
0x181 DUP1
0x182 SWAP2
0x183 SUB
0x184 SWAP1
0x185 LOG1
---
0x140: JUMPDEST 
0x144: V121 = 0x0
0x147: V122 = M[0x0]
0x148: V123 = 0x20
0x14a: V124 = 0x641
0x14e: CODECOPY 0x0 0x641 0x20
0x150: V125 = M[0x0]
0x152: M[0x0] = V122
0x153: V126 = CALLER
0x155: V127 = 0x1
0x157: V128 = 0x40
0x159: V129 = M[0x40]
0x15a: V130 = 0x1
0x15c: V131 = 0xa0
0x15e: V132 = 0x2
0x160: V133 = EXP 0x2 0xa0
0x161: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x164: V135 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x166: M[V129] = V135
0x167: V136 = 0x20
0x16a: V137 = ADD V129 0x20
0x16e: M[V137] = S3
0x16f: V138 = ISZERO 0x1
0x170: V139 = ISZERO 0x0
0x171: V140 = 0x40
0x175: V141 = ADD V129 0x40
0x179: M[V141] = 0x1
0x17a: V142 = 0x60
0x17e: V143 = ADD V129 0x60
0x180: V144 = M[0x40]
0x183: V145 = SUB V143 V144
0x185: LOG V144 V145 V125
---
Entry stack: [V12, 0x189, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x189, S3]

================================

Block 0x186
[0x186:0x188]
---
Predecessors: [0x140, 0x4b0, 0x59f, 0x5d8]
Successors: [0x189]
---
0x186 JUMPDEST
0x187 POP
0x188 JUMP
---
0x186: JUMPDEST 
0x188: JUMP 0x189
---
Entry stack: [V12, 0x189, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x189
[0x189:0x18a]
---
Predecessors: [0x186, 0x369, 0x63d]
Successors: []
---
0x189 JUMPDEST
0x18a STOP
---
0x189: JUMPDEST 
0x18a: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18b
[0x18b:0x191]
---
Predecessors: [0xb]
Successors: [0x192, 0x196]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d ISZERO
0x18e PUSH2 0x196
0x191 JUMPI
---
0x18b: JUMPDEST 
0x18c: V146 = CALLVALUE
0x18d: V147 = ISZERO V146
0x18e: V148 = 0x196
0x191: JUMPI 0x196 V147
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x18b]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V149 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x196
[0x196:0x19d]
---
Predecessors: [0x18b]
Successors: [0x2e2]
---
0x196 JUMPDEST
0x197 PUSH2 0x189
0x19a PUSH2 0x2e2
0x19d JUMP
---
0x196: JUMPDEST 
0x197: V150 = 0x189
0x19a: V151 = 0x2e2
0x19d: JUMP 0x2e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x19e
[0x19e:0x19f]
---
Predecessors: []
Successors: []
---
0x19e JUMPDEST
0x19f STOP
---
0x19e: JUMPDEST 
0x19f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a0
[0x1a0:0x1a6]
---
Predecessors: [0x25]
Successors: [0x1a7, 0x1ab]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 ISZERO
0x1a3 PUSH2 0x1ab
0x1a6 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V152 = CALLVALUE
0x1a2: V153 = ISZERO V152
0x1a3: V154 = 0x1ab
0x1a6: JUMPI 0x1ab V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a7
[0x1a7:0x1aa]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a7: V155 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ab
[0x1ab:0x1b2]
---
Predecessors: [0x1a0]
Successors: [0x36b]
---
0x1ab JUMPDEST
0x1ac PUSH2 0x1b3
0x1af PUSH2 0x36b
0x1b2 JUMP
---
0x1ab: JUMPDEST 
0x1ac: V156 = 0x1b3
0x1af: V157 = 0x36b
0x1b2: JUMP 0x36b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b3]
Exit stack: [V12, 0x1b3]

================================

Block 0x1b3
[0x1b3:0x1c4]
---
Predecessors: [0x36b, 0x38f, 0x3a1, 0x3a7, 0x3ad]
Successors: []
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x40
0x1b6 MLOAD
0x1b7 SWAP1
0x1b8 DUP2
0x1b9 MSTORE
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 DUP1
0x1c1 SWAP2
0x1c2 SUB
0x1c3 SWAP1
0x1c4 RETURN
---
0x1b3: JUMPDEST 
0x1b4: V158 = 0x40
0x1b6: V159 = M[0x40]
0x1b9: M[V159] = S0
0x1ba: V160 = 0x20
0x1bc: V161 = ADD 0x20 V159
0x1bd: V162 = 0x40
0x1bf: V163 = M[0x40]
0x1c2: V164 = SUB V161 V163
0x1c4: RETURN V163 V164
---
Entry stack: [V12, 0x1b3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b3]

================================

Block 0x1c5
[0x1c5:0x1cb]
---
Predecessors: [0x30]
Successors: [0x1cc, 0x1d0]
---
0x1c5 JUMPDEST
0x1c6 CALLVALUE
0x1c7 ISZERO
0x1c8 PUSH2 0x1d0
0x1cb JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V165 = CALLVALUE
0x1c7: V166 = ISZERO V165
0x1c8: V167 = 0x1d0
0x1cb: JUMPI 0x1d0 V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cc
[0x1cc:0x1cf]
---
Predecessors: [0x1c5]
Successors: []
---
0x1cc PUSH1 0x0
0x1ce DUP1
0x1cf REVERT
---
0x1cc: V168 = 0x0
0x1cf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d0
[0x1d0:0x1d7]
---
Predecessors: [0x1c5]
Successors: [0x371]
---
0x1d0 JUMPDEST
0x1d1 PUSH2 0x1d8
0x1d4 PUSH2 0x371
0x1d7 JUMP
---
0x1d0: JUMPDEST 
0x1d1: V169 = 0x1d8
0x1d4: V170 = 0x371
0x1d7: JUMP 0x371
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d8]
Exit stack: [V12, 0x1d8]

================================

Block 0x1d8
[0x1d8:0x1f3]
---
Predecessors: [0x371, 0x380]
Successors: []
---
0x1d8 JUMPDEST
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 SWAP1
0x1e5 SWAP2
0x1e6 AND
0x1e7 DUP2
0x1e8 MSTORE
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef DUP1
0x1f0 SWAP2
0x1f1 SUB
0x1f2 SWAP1
0x1f3 RETURN
---
0x1d8: JUMPDEST 
0x1d9: V171 = 0x40
0x1db: V172 = M[0x40]
0x1dc: V173 = 0x1
0x1de: V174 = 0xa0
0x1e0: V175 = 0x2
0x1e2: V176 = EXP 0x2 0xa0
0x1e3: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V178 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: M[V172] = V178
0x1e9: V179 = 0x20
0x1eb: V180 = ADD 0x20 V172
0x1ec: V181 = 0x40
0x1ee: V182 = M[0x40]
0x1f1: V183 = SUB V180 V182
0x1f3: RETURN V182 V183
---
Entry stack: [V12, 0x1d8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1d8]

================================

Block 0x1f4
[0x1f4:0x1fa]
---
Predecessors: [0x3b]
Successors: [0x1fb, 0x1ff]
---
0x1f4 JUMPDEST
0x1f5 CALLVALUE
0x1f6 ISZERO
0x1f7 PUSH2 0x1ff
0x1fa JUMPI
---
0x1f4: JUMPDEST 
0x1f5: V184 = CALLVALUE
0x1f6: V185 = ISZERO V184
0x1f7: V186 = 0x1ff
0x1fa: JUMPI 0x1ff V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fb
[0x1fb:0x1fe]
---
Predecessors: [0x1f4]
Successors: []
---
0x1fb PUSH1 0x0
0x1fd DUP1
0x1fe REVERT
---
0x1fb: V187 = 0x0
0x1fe: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ff
[0x1ff:0x206]
---
Predecessors: [0x1f4]
Successors: [0x380]
---
0x1ff JUMPDEST
0x200 PUSH2 0x1d8
0x203 PUSH2 0x380
0x206 JUMP
---
0x1ff: JUMPDEST 
0x200: V188 = 0x1d8
0x203: V189 = 0x380
0x206: JUMP 0x380
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d8]
Exit stack: [V12, 0x1d8]

================================

Block 0x207
[0x207:0x222]
---
Predecessors: []
Successors: []
---
0x207 JUMPDEST
0x208 PUSH1 0x40
0x20a MLOAD
0x20b PUSH1 0x1
0x20d PUSH1 0xa0
0x20f PUSH1 0x2
0x211 EXP
0x212 SUB
0x213 SWAP1
0x214 SWAP2
0x215 AND
0x216 DUP2
0x217 MSTORE
0x218 PUSH1 0x20
0x21a ADD
0x21b PUSH1 0x40
0x21d MLOAD
0x21e DUP1
0x21f SWAP2
0x220 SUB
0x221 SWAP1
0x222 RETURN
---
0x207: JUMPDEST 
0x208: V190 = 0x40
0x20a: V191 = M[0x40]
0x20b: V192 = 0x1
0x20d: V193 = 0xa0
0x20f: V194 = 0x2
0x211: V195 = EXP 0x2 0xa0
0x212: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x215: V197 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x217: M[V191] = V197
0x218: V198 = 0x20
0x21a: V199 = ADD 0x20 V191
0x21b: V200 = 0x40
0x21d: V201 = M[0x40]
0x220: V202 = SUB V199 V201
0x222: RETURN V201 V202
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x223
[0x223:0x229]
---
Predecessors: [0x46]
Successors: [0x22a, 0x22e]
---
0x223 JUMPDEST
0x224 CALLVALUE
0x225 ISZERO
0x226 PUSH2 0x22e
0x229 JUMPI
---
0x223: JUMPDEST 
0x224: V203 = CALLVALUE
0x225: V204 = ISZERO V203
0x226: V205 = 0x22e
0x229: JUMPI 0x22e V204
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22a
[0x22a:0x22d]
---
Predecessors: [0x223]
Successors: []
---
0x22a PUSH1 0x0
0x22c DUP1
0x22d REVERT
---
0x22a: V206 = 0x0
0x22d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22e
[0x22e:0x241]
---
Predecessors: [0x223]
Successors: [0x38f]
---
0x22e JUMPDEST
0x22f PUSH2 0x1b3
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a PUSH1 0x4
0x23c CALLDATALOAD
0x23d AND
0x23e PUSH2 0x38f
0x241 JUMP
---
0x22e: JUMPDEST 
0x22f: V207 = 0x1b3
0x232: V208 = 0x1
0x234: V209 = 0xa0
0x236: V210 = 0x2
0x238: V211 = EXP 0x2 0xa0
0x239: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V213 = 0x4
0x23c: V214 = CALLDATALOAD 0x4
0x23d: V215 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V216 = 0x38f
0x241: JUMP 0x38f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b3, V215]
Exit stack: [V12, 0x1b3, V215]

================================

Block 0x242
[0x242:0x253]
---
Predecessors: []
Successors: []
---
0x242 JUMPDEST
0x243 PUSH1 0x40
0x245 MLOAD
0x246 SWAP1
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x20
0x24b ADD
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP1
0x250 SWAP2
0x251 SUB
0x252 SWAP1
0x253 RETURN
---
0x242: JUMPDEST 
0x243: V217 = 0x40
0x245: V218 = M[0x40]
0x248: M[V218] = S0
0x249: V219 = 0x20
0x24b: V220 = ADD 0x20 V218
0x24c: V221 = 0x40
0x24e: V222 = M[0x40]
0x251: V223 = SUB V220 V222
0x253: RETURN V222 V223
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x254
[0x254:0x25a]
---
Predecessors: [0x51]
Successors: [0x25b, 0x25f]
---
0x254 JUMPDEST
0x255 CALLVALUE
0x256 ISZERO
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x254: JUMPDEST 
0x255: V224 = CALLVALUE
0x256: V225 = ISZERO V224
0x257: V226 = 0x25f
0x25a: JUMPI 0x25f V225
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x254]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V227 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25f
[0x25f:0x266]
---
Predecessors: [0x254]
Successors: [0x3a1]
---
0x25f JUMPDEST
0x260 PUSH2 0x1b3
0x263 PUSH2 0x3a1
0x266 JUMP
---
0x25f: JUMPDEST 
0x260: V228 = 0x1b3
0x263: V229 = 0x3a1
0x266: JUMP 0x3a1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b3]
Exit stack: [V12, 0x1b3]

================================

Block 0x267
[0x267:0x278]
---
Predecessors: []
Successors: []
---
0x267 JUMPDEST
0x268 PUSH1 0x40
0x26a MLOAD
0x26b SWAP1
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 PUSH1 0x40
0x273 MLOAD
0x274 DUP1
0x275 SWAP2
0x276 SUB
0x277 SWAP1
0x278 RETURN
---
0x267: JUMPDEST 
0x268: V230 = 0x40
0x26a: V231 = M[0x40]
0x26d: M[V231] = S0
0x26e: V232 = 0x20
0x270: V233 = ADD 0x20 V231
0x271: V234 = 0x40
0x273: V235 = M[0x40]
0x276: V236 = SUB V233 V235
0x278: RETURN V235 V236
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x279
[0x279:0x27f]
---
Predecessors: [0x5c]
Successors: [0x280, 0x284]
---
0x279 JUMPDEST
0x27a CALLVALUE
0x27b ISZERO
0x27c PUSH2 0x284
0x27f JUMPI
---
0x279: JUMPDEST 
0x27a: V237 = CALLVALUE
0x27b: V238 = ISZERO V237
0x27c: V239 = 0x284
0x27f: JUMPI 0x284 V238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x280
[0x280:0x283]
---
Predecessors: [0x279]
Successors: []
---
0x280 PUSH1 0x0
0x282 DUP1
0x283 REVERT
---
0x280: V240 = 0x0
0x283: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x284
[0x284:0x28b]
---
Predecessors: [0x279]
Successors: [0x3a7]
---
0x284 JUMPDEST
0x285 PUSH2 0x1b3
0x288 PUSH2 0x3a7
0x28b JUMP
---
0x284: JUMPDEST 
0x285: V241 = 0x1b3
0x288: V242 = 0x3a7
0x28b: JUMP 0x3a7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b3]
Exit stack: [V12, 0x1b3]

================================

Block 0x28c
[0x28c:0x29d]
---
Predecessors: []
Successors: []
---
0x28c JUMPDEST
0x28d PUSH1 0x40
0x28f MLOAD
0x290 SWAP1
0x291 DUP2
0x292 MSTORE
0x293 PUSH1 0x20
0x295 ADD
0x296 PUSH1 0x40
0x298 MLOAD
0x299 DUP1
0x29a SWAP2
0x29b SUB
0x29c SWAP1
0x29d RETURN
---
0x28c: JUMPDEST 
0x28d: V243 = 0x40
0x28f: V244 = M[0x40]
0x292: M[V244] = S0
0x293: V245 = 0x20
0x295: V246 = ADD 0x20 V244
0x296: V247 = 0x40
0x298: V248 = M[0x40]
0x29b: V249 = SUB V246 V248
0x29d: RETURN V248 V249
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29e
[0x29e:0x2a4]
---
Predecessors: [0x67]
Successors: [0x2a5, 0x2a9]
---
0x29e JUMPDEST
0x29f CALLVALUE
0x2a0 ISZERO
0x2a1 PUSH2 0x2a9
0x2a4 JUMPI
---
0x29e: JUMPDEST 
0x29f: V250 = CALLVALUE
0x2a0: V251 = ISZERO V250
0x2a1: V252 = 0x2a9
0x2a4: JUMPI 0x2a9 V251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x29e]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a5: V253 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a9
[0x2a9:0x2b0]
---
Predecessors: [0x29e]
Successors: [0x3ad]
---
0x2a9 JUMPDEST
0x2aa PUSH2 0x1b3
0x2ad PUSH2 0x3ad
0x2b0 JUMP
---
0x2a9: JUMPDEST 
0x2aa: V254 = 0x1b3
0x2ad: V255 = 0x3ad
0x2b0: JUMP 0x3ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b3]
Exit stack: [V12, 0x1b3]

================================

Block 0x2b1
[0x2b1:0x2c2]
---
Predecessors: []
Successors: []
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 SWAP1
0x2b6 DUP2
0x2b7 MSTORE
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb PUSH1 0x40
0x2bd MLOAD
0x2be DUP1
0x2bf SWAP2
0x2c0 SUB
0x2c1 SWAP1
0x2c2 RETURN
---
0x2b1: JUMPDEST 
0x2b2: V256 = 0x40
0x2b4: V257 = M[0x40]
0x2b7: M[V257] = S0
0x2b8: V258 = 0x20
0x2ba: V259 = ADD 0x20 V257
0x2bb: V260 = 0x40
0x2bd: V261 = M[0x40]
0x2c0: V262 = SUB V259 V261
0x2c2: RETURN V261 V262
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c3
[0x2c3:0x2ca]
---
Predecessors: [0x72]
Successors: [0x8c]
---
0x2c3 JUMPDEST
0x2c4 PUSH2 0x189
0x2c7 PUSH2 0x8c
0x2ca JUMP
---
0x2c3: JUMPDEST 
0x2c4: V263 = 0x189
0x2c7: V264 = 0x8c
0x2ca: JUMP 0x8c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x2cb
[0x2cb:0x2cc]
---
Predecessors: []
Successors: []
---
0x2cb JUMPDEST
0x2cc STOP
---
0x2cb: JUMPDEST 
0x2cc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2cd
[0x2cd:0x2d3]
---
Predecessors: [0x7d]
Successors: [0x2d4, 0x2d8]
---
0x2cd JUMPDEST
0x2ce CALLVALUE
0x2cf ISZERO
0x2d0 PUSH2 0x2d8
0x2d3 JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V265 = CALLVALUE
0x2cf: V266 = ISZERO V265
0x2d0: V267 = 0x2d8
0x2d3: JUMPI 0x2d8 V266
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d4
[0x2d4:0x2d7]
---
Predecessors: [0x2cd]
Successors: []
---
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 REVERT
---
0x2d4: V268 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d8
[0x2d8:0x2df]
---
Predecessors: [0x2cd]
Successors: [0x4b0]
---
0x2d8 JUMPDEST
0x2d9 PUSH2 0x189
0x2dc PUSH2 0x4b0
0x2df JUMP
---
0x2d8: JUMPDEST 
0x2d9: V269 = 0x189
0x2dc: V270 = 0x4b0
0x2df: JUMP 0x4b0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x189]

================================

Block 0x2e0
[0x2e0:0x2e1]
---
Predecessors: []
Successors: []
---
0x2e0 JUMPDEST
0x2e1 STOP
---
0x2e0: JUMPDEST 
0x2e1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e2
[0x2e2:0x2eb]
---
Predecessors: [0x196]
Successors: [0x2ec, 0x367]
---
0x2e2 JUMPDEST
0x2e3 PUSH1 0x3
0x2e5 SLOAD
0x2e6 TIMESTAMP
0x2e7 LT
0x2e8 PUSH2 0x367
0x2eb JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V271 = 0x3
0x2e5: V272 = S[0x3]
0x2e6: V273 = TIMESTAMP
0x2e7: V274 = LT V273 V272
0x2e8: V275 = 0x367
0x2eb: JUMPI 0x367 V274
---
Entry stack: [V12, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189]

================================

Block 0x2ec
[0x2ec:0x2f6]
---
Predecessors: [0x2e2]
Successors: [0x2f7, 0x357]
---
0x2ec PUSH1 0x1
0x2ee SLOAD
0x2ef PUSH1 0x2
0x2f1 SLOAD
0x2f2 LT
0x2f3 PUSH2 0x357
0x2f6 JUMPI
---
0x2ec: V276 = 0x1
0x2ee: V277 = S[0x1]
0x2ef: V278 = 0x2
0x2f1: V279 = S[0x2]
0x2f2: V280 = LT V279 V277
0x2f3: V281 = 0x357
0x2f6: JUMPI 0x357 V280
---
Entry stack: [V12, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189]

================================

Block 0x2f7
[0x2f7:0x356]
---
Predecessors: [0x2ec]
Successors: [0x357]
---
0x2f7 PUSH1 0x7
0x2f9 DUP1
0x2fa SLOAD
0x2fb PUSH1 0xff
0x2fd NOT
0x2fe AND
0x2ff PUSH1 0x1
0x301 OR
0x302 SWAP1
0x303 SSTORE
0x304 PUSH1 0x0
0x306 SLOAD
0x307 PUSH1 0x2
0x309 SLOAD
0x30a PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x32b SWAP2
0x32c PUSH1 0x1
0x32e PUSH1 0xa0
0x330 PUSH1 0x2
0x332 EXP
0x333 SUB
0x334 AND
0x335 SWAP1
0x336 PUSH1 0x40
0x338 MLOAD
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 SWAP1
0x342 SWAP3
0x343 AND
0x344 DUP3
0x345 MSTORE
0x346 PUSH1 0x20
0x348 DUP3
0x349 ADD
0x34a MSTORE
0x34b PUSH1 0x40
0x34d SWAP1
0x34e DUP2
0x34f ADD
0x350 SWAP1
0x351 MLOAD
0x352 DUP1
0x353 SWAP2
0x354 SUB
0x355 SWAP1
0x356 LOG1
---
0x2f7: V282 = 0x7
0x2fa: V283 = S[0x7]
0x2fb: V284 = 0xff
0x2fd: V285 = NOT 0xff
0x2fe: V286 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V283
0x2ff: V287 = 0x1
0x301: V288 = OR 0x1 V286
0x303: S[0x7] = V288
0x304: V289 = 0x0
0x306: V290 = S[0x0]
0x307: V291 = 0x2
0x309: V292 = S[0x2]
0x30a: V293 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x32c: V294 = 0x1
0x32e: V295 = 0xa0
0x330: V296 = 0x2
0x332: V297 = EXP 0x2 0xa0
0x333: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x334: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x336: V300 = 0x40
0x338: V301 = M[0x40]
0x339: V302 = 0x1
0x33b: V303 = 0xa0
0x33d: V304 = 0x2
0x33f: V305 = EXP 0x2 0xa0
0x340: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x343: V307 = AND V299 0xffffffffffffffffffffffffffffffffffffffff
0x345: M[V301] = V307
0x346: V308 = 0x20
0x349: V309 = ADD V301 0x20
0x34a: M[V309] = V292
0x34b: V310 = 0x40
0x34f: V311 = ADD 0x40 V301
0x351: V312 = M[0x40]
0x354: V313 = SUB V311 V312
0x356: LOG V312 V313 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V12, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189]

================================

Block 0x357
[0x357:0x366]
---
Predecessors: [0x2ec, 0x2f7]
Successors: [0x367]
---
0x357 JUMPDEST
0x358 PUSH1 0x7
0x35a DUP1
0x35b SLOAD
0x35c PUSH2 0xff00
0x35f NOT
0x360 AND
0x361 PUSH2 0x100
0x364 OR
0x365 SWAP1
0x366 SSTORE
---
0x357: JUMPDEST 
0x358: V314 = 0x7
0x35b: V315 = S[0x7]
0x35c: V316 = 0xff00
0x35f: V317 = NOT 0xff00
0x360: V318 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V315
0x361: V319 = 0x100
0x364: V320 = OR 0x100 V318
0x366: S[0x7] = V320
---
Entry stack: [V12, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189]

================================

Block 0x367
[0x367:0x367]
---
Predecessors: [0x2e2, 0x357]
Successors: [0x368]
---
0x367 JUMPDEST
---
0x367: JUMPDEST 
---
Entry stack: [V12, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189]

================================

Block 0x368
[0x368:0x368]
---
Predecessors: [0x367]
Successors: [0x369]
---
0x368 JUMPDEST
---
0x368: JUMPDEST 
---
Entry stack: [V12, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189]

================================

Block 0x369
[0x369:0x36a]
---
Predecessors: [0x368]
Successors: [0x189]
---
0x369 JUMPDEST
0x36a JUMP
---
0x369: JUMPDEST 
0x36a: JUMP 0x189
---
Entry stack: [V12, 0x189]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x36b
[0x36b:0x370]
---
Predecessors: [0x1ab]
Successors: [0x1b3]
---
0x36b JUMPDEST
0x36c PUSH1 0x3
0x36e SLOAD
0x36f DUP2
0x370 JUMP
---
0x36b: JUMPDEST 
0x36c: V321 = 0x3
0x36e: V322 = S[0x3]
0x370: JUMP 0x1b3
---
Entry stack: [V12, 0x1b3]
Stack pops: 1
Stack additions: [S0, V322]
Exit stack: [V12, 0x1b3, V322]

================================

Block 0x371
[0x371:0x37f]
---
Predecessors: [0x1d0]
Successors: [0x1d8]
---
0x371 JUMPDEST
0x372 PUSH1 0x0
0x374 SLOAD
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d AND
0x37e DUP2
0x37f JUMP
---
0x371: JUMPDEST 
0x372: V323 = 0x0
0x374: V324 = S[0x0]
0x375: V325 = 0x1
0x377: V326 = 0xa0
0x379: V327 = 0x2
0x37b: V328 = EXP 0x2 0xa0
0x37c: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37d: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x37f: JUMP 0x1d8
---
Entry stack: [V12, 0x1d8]
Stack pops: 1
Stack additions: [S0, V330]
Exit stack: [V12, 0x1d8, V330]

================================

Block 0x380
[0x380:0x38e]
---
Predecessors: [0x1ff]
Successors: [0x1d8]
---
0x380 JUMPDEST
0x381 PUSH1 0x5
0x383 SLOAD
0x384 PUSH1 0x1
0x386 PUSH1 0xa0
0x388 PUSH1 0x2
0x38a EXP
0x38b SUB
0x38c AND
0x38d DUP2
0x38e JUMP
---
0x380: JUMPDEST 
0x381: V331 = 0x5
0x383: V332 = S[0x5]
0x384: V333 = 0x1
0x386: V334 = 0xa0
0x388: V335 = 0x2
0x38a: V336 = EXP 0x2 0xa0
0x38b: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38c: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x38e: JUMP 0x1d8
---
Entry stack: [V12, 0x1d8]
Stack pops: 1
Stack additions: [S0, V338]
Exit stack: [V12, 0x1d8, V338]

================================

Block 0x38f
[0x38f:0x3a0]
---
Predecessors: [0x22e]
Successors: [0x1b3]
---
0x38f JUMPDEST
0x390 PUSH1 0x6
0x392 PUSH1 0x20
0x394 MSTORE
0x395 PUSH1 0x0
0x397 SWAP1
0x398 DUP2
0x399 MSTORE
0x39a PUSH1 0x40
0x39c SWAP1
0x39d SHA3
0x39e SLOAD
0x39f DUP2
0x3a0 JUMP
---
0x38f: JUMPDEST 
0x390: V339 = 0x6
0x392: V340 = 0x20
0x394: M[0x20] = 0x6
0x395: V341 = 0x0
0x399: M[0x0] = V215
0x39a: V342 = 0x40
0x39d: V343 = SHA3 0x0 0x40
0x39e: V344 = S[V343]
0x3a0: JUMP 0x1b3
---
Entry stack: [V12, 0x1b3, V215]
Stack pops: 2
Stack additions: [S1, V344]
Exit stack: [V12, 0x1b3, V344]

================================

Block 0x3a1
[0x3a1:0x3a6]
---
Predecessors: [0x25f]
Successors: [0x1b3]
---
0x3a1 JUMPDEST
0x3a2 PUSH1 0x1
0x3a4 SLOAD
0x3a5 DUP2
0x3a6 JUMP
---
0x3a1: JUMPDEST 
0x3a2: V345 = 0x1
0x3a4: V346 = S[0x1]
0x3a6: JUMP 0x1b3
---
Entry stack: [V12, 0x1b3]
Stack pops: 1
Stack additions: [S0, V346]
Exit stack: [V12, 0x1b3, V346]

================================

Block 0x3a7
[0x3a7:0x3ac]
---
Predecessors: [0x284]
Successors: [0x1b3]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x2
0x3aa SLOAD
0x3ab DUP2
0x3ac JUMP
---
0x3a7: JUMPDEST 
0x3a8: V347 = 0x2
0x3aa: V348 = S[0x2]
0x3ac: JUMP 0x1b3
---
Entry stack: [V12, 0x1b3]
Stack pops: 1
Stack additions: [S0, V348]
Exit stack: [V12, 0x1b3, V348]

================================

Block 0x3ad
[0x3ad:0x3b2]
---
Predecessors: [0x2a9]
Successors: [0x1b3]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x4
0x3b0 SLOAD
0x3b1 DUP2
0x3b2 JUMP
---
0x3ad: JUMPDEST 
0x3ae: V349 = 0x4
0x3b0: V350 = S[0x4]
0x3b2: JUMP 0x1b3
---
Entry stack: [V12, 0x1b3]
Stack pops: 1
Stack additions: [S0, V350]
Exit stack: [V12, 0x1b3, V350]

================================

Block 0x3b3
[0x3b3:0x3c6]
---
Predecessors: []
Successors: [0xa4, 0x3c7]
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x7
0x3b6 SLOAD
0x3b7 PUSH1 0x0
0x3b9 SWAP1
0x3ba PUSH2 0x100
0x3bd SWAP1
0x3be DIV
0x3bf PUSH1 0xff
0x3c1 AND
0x3c2 ISZERO
0x3c3 PUSH2 0xa4
0x3c6 JUMPI
---
0x3b3: JUMPDEST 
0x3b4: V351 = 0x7
0x3b6: V352 = S[0x7]
0x3b7: V353 = 0x0
0x3ba: V354 = 0x100
0x3be: V355 = DIV V352 0x100
0x3bf: V356 = 0xff
0x3c1: V357 = AND 0xff V355
0x3c2: V358 = ISZERO V357
0x3c3: V359 = 0xa4
0x3c6: JUMPI 0xa4 V358
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0]
Exit stack: [0x0]

================================

Block 0x3c7
[0x3c7:0x410]
---
Predecessors: [0x3b3]
Successors: [0xeb, 0x411]
---
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca REVERT
0x3cb JUMPDEST
0x3cc CALLER
0x3cd PUSH1 0x1
0x3cf PUSH1 0xa0
0x3d1 PUSH1 0x2
0x3d3 EXP
0x3d4 SUB
0x3d5 DUP2
0x3d6 DUP2
0x3d7 AND
0x3d8 PUSH1 0x0
0x3da SWAP1
0x3db DUP2
0x3dc MSTORE
0x3dd PUSH1 0x6
0x3df PUSH1 0x20
0x3e1 MSTORE
0x3e2 PUSH1 0x40
0x3e4 SWAP1
0x3e5 SHA3
0x3e6 DUP1
0x3e7 SLOAD
0x3e8 CALLVALUE
0x3e9 SWAP5
0x3ea SWAP1
0x3eb SWAP5
0x3ec ADD
0x3ed SWAP4
0x3ee DUP5
0x3ef ADD
0x3f0 SWAP1
0x3f1 SSTORE
0x3f2 PUSH1 0x2
0x3f4 DUP1
0x3f5 SLOAD
0x3f6 DUP5
0x3f7 ADD
0x3f8 SWAP1
0x3f9 SSTORE
0x3fa PUSH1 0x5
0x3fc SLOAD
0x3fd PUSH1 0x4
0x3ff SLOAD
0x400 SWAP2
0x401 AND
0x402 SWAP2
0x403 PUSH4 0xa9059cbb
0x408 SWAP2
0x409 DUP5
0x40a DUP2
0x40b ISZERO
0x40c ISZERO
0x40d PUSH2 0xeb
0x410 JUMPI
---
0x3c7: V360 = 0x0
0x3ca: REVERT 0x0 0x0
0x3cb: JUMPDEST 
0x3cc: V361 = CALLER
0x3cd: V362 = 0x1
0x3cf: V363 = 0xa0
0x3d1: V364 = 0x2
0x3d3: V365 = EXP 0x2 0xa0
0x3d4: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d7: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x3d8: V368 = 0x0
0x3dc: M[0x0] = V367
0x3dd: V369 = 0x6
0x3df: V370 = 0x20
0x3e1: M[0x20] = 0x6
0x3e2: V371 = 0x40
0x3e5: V372 = SHA3 0x0 0x40
0x3e7: V373 = S[V372]
0x3e8: V374 = CALLVALUE
0x3ec: V375 = ADD V374 S0
0x3ef: V376 = ADD V375 V373
0x3f1: S[V372] = V376
0x3f2: V377 = 0x2
0x3f5: V378 = S[0x2]
0x3f7: V379 = ADD V375 V378
0x3f9: S[0x2] = V379
0x3fa: V380 = 0x5
0x3fc: V381 = S[0x5]
0x3fd: V382 = 0x4
0x3ff: V383 = S[0x4]
0x401: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x403: V385 = 0xa9059cbb
0x40b: V386 = ISZERO V383
0x40c: V387 = ISZERO V386
0x40d: V388 = 0xeb
0x410: JUMPI 0xeb V387
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V375, V383, V361, 0xa9059cbb, V384, V375]
Exit stack: []

================================

Block 0x411
[0x411:0x451]
---
Predecessors: [0x3c7]
Successors: [0x12f, 0x452]
---
0x411 INVALID
0x412 JUMPDEST
0x413 DIV
0x414 PUSH1 0x40
0x416 MLOAD
0x417 PUSH1 0xe0
0x419 PUSH1 0x2
0x41b EXP
0x41c PUSH4 0xffffffff
0x421 DUP6
0x422 AND
0x423 MUL
0x424 DUP2
0x425 MSTORE
0x426 PUSH1 0x1
0x428 PUSH1 0xa0
0x42a PUSH1 0x2
0x42c EXP
0x42d SUB
0x42e SWAP1
0x42f SWAP3
0x430 AND
0x431 PUSH1 0x4
0x433 DUP4
0x434 ADD
0x435 MSTORE
0x436 PUSH1 0x24
0x438 DUP3
0x439 ADD
0x43a MSTORE
0x43b PUSH1 0x44
0x43d ADD
0x43e PUSH1 0x0
0x440 PUSH1 0x40
0x442 MLOAD
0x443 DUP1
0x444 DUP4
0x445 SUB
0x446 DUP2
0x447 PUSH1 0x0
0x449 DUP8
0x44a DUP1
0x44b EXTCODESIZE
0x44c ISZERO
0x44d ISZERO
0x44e PUSH2 0x12f
0x451 JUMPI
---
0x411: INVALID 
0x412: JUMPDEST 
0x413: V389 = DIV S0 S1
0x414: V390 = 0x40
0x416: V391 = M[0x40]
0x417: V392 = 0xe0
0x419: V393 = 0x2
0x41b: V394 = EXP 0x2 0xe0
0x41c: V395 = 0xffffffff
0x422: V396 = AND S3 0xffffffff
0x423: V397 = MUL V396 0x100000000000000000000000000000000000000000000000000000000
0x425: M[V391] = V397
0x426: V398 = 0x1
0x428: V399 = 0xa0
0x42a: V400 = 0x2
0x42c: V401 = EXP 0x2 0xa0
0x42d: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x430: V403 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x431: V404 = 0x4
0x434: V405 = ADD V391 0x4
0x435: M[V405] = V403
0x436: V406 = 0x24
0x439: V407 = ADD V391 0x24
0x43a: M[V407] = V389
0x43b: V408 = 0x44
0x43d: V409 = ADD 0x44 V391
0x43e: V410 = 0x0
0x440: V411 = 0x40
0x442: V412 = M[0x40]
0x445: V413 = SUB V409 V412
0x447: V414 = 0x0
0x44b: V415 = EXTCODESIZE S4
0x44c: V416 = ISZERO V415
0x44d: V417 = ISZERO V416
0x44e: V418 = 0x12f
0x451: JUMPI 0x12f V417
---
Entry stack: [V375, V384, 0xa9059cbb, V361, V383, V375]
Stack pops: 0
Stack additions: [S4, 0x0, V412, V413, V412, 0x0, V409, S3, S4]
Exit stack: []

================================

Block 0x452
[0x452:0x462]
---
Predecessors: [0x411]
Successors: [0x140, 0x463]
---
0x452 PUSH1 0x0
0x454 DUP1
0x455 REVERT
0x456 JUMPDEST
0x457 PUSH2 0x2c6
0x45a GAS
0x45b SUB
0x45c CALL
0x45d ISZERO
0x45e ISZERO
0x45f PUSH2 0x140
0x462 JUMPI
---
0x452: V419 = 0x0
0x455: REVERT 0x0 0x0
0x456: JUMPDEST 
0x457: V420 = 0x2c6
0x45a: V421 = GAS
0x45b: V422 = SUB V421 0x2c6
0x45c: V423 = CALL V422 S0 S1 S2 S3 S4 S5
0x45d: V424 = ISZERO V423
0x45e: V425 = ISZERO V424
0x45f: V426 = 0x140
0x462: JUMPI 0x140 V425
---
Entry stack: [S8, S7, V409, 0x0, V412, V413, V412, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x463
[0x463:0x4ac]
---
Predecessors: [0x452]
Successors: [0x4ad]
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
0x467 JUMPDEST
0x468 POP
0x469 POP
0x46a POP
0x46b PUSH1 0x0
0x46d DUP1
0x46e MLOAD
0x46f PUSH1 0x20
0x471 PUSH2 0x641
0x474 DUP4
0x475 CODECOPY
0x476 DUP2
0x477 MLOAD
0x478 SWAP2
0x479 MSTORE
0x47a CALLER
0x47b DUP3
0x47c PUSH1 0x1
0x47e PUSH1 0x40
0x480 MLOAD
0x481 PUSH1 0x1
0x483 PUSH1 0xa0
0x485 PUSH1 0x2
0x487 EXP
0x488 SUB
0x489 SWAP1
0x48a SWAP4
0x48b AND
0x48c DUP4
0x48d MSTORE
0x48e PUSH1 0x20
0x490 DUP4
0x491 ADD
0x492 SWAP2
0x493 SWAP1
0x494 SWAP2
0x495 MSTORE
0x496 ISZERO
0x497 ISZERO
0x498 PUSH1 0x40
0x49a DUP1
0x49b DUP4
0x49c ADD
0x49d SWAP2
0x49e SWAP1
0x49f SWAP2
0x4a0 MSTORE
0x4a1 PUSH1 0x60
0x4a3 SWAP1
0x4a4 SWAP2
0x4a5 ADD
0x4a6 SWAP1
0x4a7 MLOAD
0x4a8 DUP1
0x4a9 SWAP2
0x4aa SUB
0x4ab SWAP1
0x4ac LOG1
---
0x463: V427 = 0x0
0x466: REVERT 0x0 0x0
0x467: JUMPDEST 
0x46b: V428 = 0x0
0x46e: V429 = M[0x0]
0x46f: V430 = 0x20
0x471: V431 = 0x641
0x475: CODECOPY 0x0 0x641 0x20
0x477: V432 = M[0x0]
0x479: M[0x0] = V429
0x47a: V433 = CALLER
0x47c: V434 = 0x1
0x47e: V435 = 0x40
0x480: V436 = M[0x40]
0x481: V437 = 0x1
0x483: V438 = 0xa0
0x485: V439 = 0x2
0x487: V440 = EXP 0x2 0xa0
0x488: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48b: V442 = AND V433 0xffffffffffffffffffffffffffffffffffffffff
0x48d: M[V436] = V442
0x48e: V443 = 0x20
0x491: V444 = ADD V436 0x20
0x495: M[V444] = S3
0x496: V445 = ISZERO 0x1
0x497: V446 = ISZERO 0x0
0x498: V447 = 0x40
0x49c: V448 = ADD V436 0x40
0x4a0: M[V448] = 0x1
0x4a1: V449 = 0x60
0x4a5: V450 = ADD V436 0x60
0x4a7: V451 = M[0x40]
0x4aa: V452 = SUB V450 V451
0x4ac: LOG V451 V452 V432
---
Entry stack: []
Stack pops: 0
Stack additions: [S3]
Exit stack: []

================================

Block 0x4ad
[0x4ad:0x4af]
---
Predecessors: [0x463]
Successors: []
Has unresolved jump.
---
0x4ad JUMPDEST
0x4ae POP
0x4af JUMP
---
0x4ad: JUMPDEST 
0x4af: JUMP S1
---
Entry stack: [S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x4b0
[0x4b0:0x4bc]
---
Predecessors: [0x2d8]
Successors: [0x186, 0x4bd]
---
0x4b0 JUMPDEST
0x4b1 PUSH1 0x3
0x4b3 SLOAD
0x4b4 PUSH1 0x0
0x4b6 SWAP1
0x4b7 TIMESTAMP
0x4b8 LT
0x4b9 PUSH2 0x186
0x4bc JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V453 = 0x3
0x4b3: V454 = S[0x3]
0x4b4: V455 = 0x0
0x4b7: V456 = TIMESTAMP
0x4b8: V457 = LT V456 V454
0x4b9: V458 = 0x186
0x4bc: JUMPI 0x186 V457
---
Entry stack: [V12, 0x189]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x189, 0x0]

================================

Block 0x4bd
[0x4bd:0x4c8]
---
Predecessors: [0x4b0]
Successors: [0x4c9, 0x57d]
---
0x4bd PUSH1 0x7
0x4bf SLOAD
0x4c0 PUSH1 0xff
0x4c2 AND
0x4c3 ISZERO
0x4c4 ISZERO
0x4c5 PUSH2 0x57d
0x4c8 JUMPI
---
0x4bd: V459 = 0x7
0x4bf: V460 = S[0x7]
0x4c0: V461 = 0xff
0x4c2: V462 = AND 0xff V460
0x4c3: V463 = ISZERO V462
0x4c4: V464 = ISZERO V463
0x4c5: V465 = 0x57d
0x4c8: JUMPI 0x57d V464
---
Entry stack: [V12, 0x189, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, 0x0]

================================

Block 0x4c9
[0x4c9:0x4ef]
---
Predecessors: [0x4bd]
Successors: [0x4f0, 0x57d]
---
0x4c9 POP
0x4ca PUSH1 0x1
0x4cc PUSH1 0xa0
0x4ce PUSH1 0x2
0x4d0 EXP
0x4d1 SUB
0x4d2 CALLER
0x4d3 AND
0x4d4 PUSH1 0x0
0x4d6 SWAP1
0x4d7 DUP2
0x4d8 MSTORE
0x4d9 PUSH1 0x6
0x4db PUSH1 0x20
0x4dd MSTORE
0x4de PUSH1 0x40
0x4e0 DUP2
0x4e1 SHA3
0x4e2 DUP1
0x4e3 SLOAD
0x4e4 SWAP1
0x4e5 DUP3
0x4e6 SWAP1
0x4e7 SSTORE
0x4e8 SWAP1
0x4e9 DUP2
0x4ea GT
0x4eb ISZERO
0x4ec PUSH2 0x57d
0x4ef JUMPI
---
0x4ca: V466 = 0x1
0x4cc: V467 = 0xa0
0x4ce: V468 = 0x2
0x4d0: V469 = EXP 0x2 0xa0
0x4d1: V470 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d2: V471 = CALLER
0x4d3: V472 = AND V471 0xffffffffffffffffffffffffffffffffffffffff
0x4d4: V473 = 0x0
0x4d8: M[0x0] = V472
0x4d9: V474 = 0x6
0x4db: V475 = 0x20
0x4dd: M[0x20] = 0x6
0x4de: V476 = 0x40
0x4e1: V477 = SHA3 0x0 0x40
0x4e3: V478 = S[V477]
0x4e7: S[V477] = 0x0
0x4ea: V479 = GT V478 0x0
0x4eb: V480 = ISZERO V479
0x4ec: V481 = 0x57d
0x4ef: JUMPI 0x57d V480
---
Entry stack: [V12, 0x189, 0x0]
Stack pops: 1
Stack additions: [V478]
Exit stack: [V12, 0x189, V478]

================================

Block 0x4f0
[0x4f0:0x51a]
---
Predecessors: [0x4c9]
Successors: [0x51b, 0x561]
---
0x4f0 PUSH1 0x1
0x4f2 PUSH1 0xa0
0x4f4 PUSH1 0x2
0x4f6 EXP
0x4f7 SUB
0x4f8 CALLER
0x4f9 AND
0x4fa DUP2
0x4fb ISZERO
0x4fc PUSH2 0x8fc
0x4ff MUL
0x500 DUP3
0x501 PUSH1 0x40
0x503 MLOAD
0x504 PUSH1 0x0
0x506 PUSH1 0x40
0x508 MLOAD
0x509 DUP1
0x50a DUP4
0x50b SUB
0x50c DUP2
0x50d DUP6
0x50e DUP9
0x50f DUP9
0x510 CALL
0x511 SWAP4
0x512 POP
0x513 POP
0x514 POP
0x515 POP
0x516 ISZERO
0x517 PUSH2 0x561
0x51a JUMPI
---
0x4f0: V482 = 0x1
0x4f2: V483 = 0xa0
0x4f4: V484 = 0x2
0x4f6: V485 = EXP 0x2 0xa0
0x4f7: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f8: V487 = CALLER
0x4f9: V488 = AND V487 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V489 = ISZERO V478
0x4fc: V490 = 0x8fc
0x4ff: V491 = MUL 0x8fc V489
0x501: V492 = 0x40
0x503: V493 = M[0x40]
0x504: V494 = 0x0
0x506: V495 = 0x40
0x508: V496 = M[0x40]
0x50b: V497 = SUB V493 V496
0x510: V498 = CALL V491 V488 V478 V496 V497 V496 0x0
0x516: V499 = ISZERO V498
0x517: V500 = 0x561
0x51a: JUMPI 0x561 V499
---
Entry stack: [V12, 0x189, V478]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x189, V478]

================================

Block 0x51b
[0x51b:0x560]
---
Predecessors: [0x4f0]
Successors: [0x57d]
---
0x51b PUSH1 0x0
0x51d DUP1
0x51e MLOAD
0x51f PUSH1 0x20
0x521 PUSH2 0x641
0x524 DUP4
0x525 CODECOPY
0x526 DUP2
0x527 MLOAD
0x528 SWAP2
0x529 MSTORE
0x52a CALLER
0x52b DUP3
0x52c PUSH1 0x0
0x52e PUSH1 0x40
0x530 MLOAD
0x531 PUSH1 0x1
0x533 PUSH1 0xa0
0x535 PUSH1 0x2
0x537 EXP
0x538 SUB
0x539 SWAP1
0x53a SWAP4
0x53b AND
0x53c DUP4
0x53d MSTORE
0x53e PUSH1 0x20
0x540 DUP4
0x541 ADD
0x542 SWAP2
0x543 SWAP1
0x544 SWAP2
0x545 MSTORE
0x546 ISZERO
0x547 ISZERO
0x548 PUSH1 0x40
0x54a DUP1
0x54b DUP4
0x54c ADD
0x54d SWAP2
0x54e SWAP1
0x54f SWAP2
0x550 MSTORE
0x551 PUSH1 0x60
0x553 SWAP1
0x554 SWAP2
0x555 ADD
0x556 SWAP1
0x557 MLOAD
0x558 DUP1
0x559 SWAP2
0x55a SUB
0x55b SWAP1
0x55c LOG1
0x55d PUSH2 0x57d
0x560 JUMP
---
0x51b: V501 = 0x0
0x51e: V502 = M[0x0]
0x51f: V503 = 0x20
0x521: V504 = 0x641
0x525: CODECOPY 0x0 0x641 0x20
0x527: V505 = M[0x0]
0x529: M[0x0] = V502
0x52a: V506 = CALLER
0x52c: V507 = 0x0
0x52e: V508 = 0x40
0x530: V509 = M[0x40]
0x531: V510 = 0x1
0x533: V511 = 0xa0
0x535: V512 = 0x2
0x537: V513 = EXP 0x2 0xa0
0x538: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53b: V515 = AND V506 0xffffffffffffffffffffffffffffffffffffffff
0x53d: M[V509] = V515
0x53e: V516 = 0x20
0x541: V517 = ADD V509 0x20
0x545: M[V517] = V478
0x546: V518 = ISZERO 0x0
0x547: V519 = ISZERO 0x1
0x548: V520 = 0x40
0x54c: V521 = ADD V509 0x40
0x550: M[V521] = 0x0
0x551: V522 = 0x60
0x555: V523 = ADD V509 0x60
0x557: V524 = M[0x40]
0x55a: V525 = SUB V523 V524
0x55c: LOG V524 V525 V505
0x55d: V526 = 0x57d
0x560: JUMP 0x57d
---
Entry stack: [V12, 0x189, V478]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x189, V478]

================================

Block 0x561
[0x561:0x57c]
---
Predecessors: [0x4f0]
Successors: [0x57d]
---
0x561 JUMPDEST
0x562 PUSH1 0x1
0x564 PUSH1 0xa0
0x566 PUSH1 0x2
0x568 EXP
0x569 SUB
0x56a CALLER
0x56b AND
0x56c PUSH1 0x0
0x56e SWAP1
0x56f DUP2
0x570 MSTORE
0x571 PUSH1 0x6
0x573 PUSH1 0x20
0x575 MSTORE
0x576 PUSH1 0x40
0x578 SWAP1
0x579 SHA3
0x57a DUP2
0x57b SWAP1
0x57c SSTORE
---
0x561: JUMPDEST 
0x562: V527 = 0x1
0x564: V528 = 0xa0
0x566: V529 = 0x2
0x568: V530 = EXP 0x2 0xa0
0x569: V531 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V532 = CALLER
0x56b: V533 = AND V532 0xffffffffffffffffffffffffffffffffffffffff
0x56c: V534 = 0x0
0x570: M[0x0] = V533
0x571: V535 = 0x6
0x573: V536 = 0x20
0x575: M[0x20] = 0x6
0x576: V537 = 0x40
0x579: V538 = SHA3 0x0 0x40
0x57c: S[V538] = V478
---
Entry stack: [V12, 0x189, V478]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x189, V478]

================================

Block 0x57d
[0x57d:0x57d]
---
Predecessors: [0x4bd, 0x4c9, 0x51b, 0x561]
Successors: [0x57e]
---
0x57d JUMPDEST
---
0x57d: JUMPDEST 
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S0]

================================

Block 0x57e
[0x57e:0x57e]
---
Predecessors: [0x57d]
Successors: [0x57f]
---
0x57e JUMPDEST
---
0x57e: JUMPDEST 
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S0]

================================

Block 0x57f
[0x57f:0x58b]
---
Predecessors: [0x57e]
Successors: [0x58c, 0x59f]
---
0x57f JUMPDEST
0x580 PUSH1 0x7
0x582 SLOAD
0x583 PUSH1 0xff
0x585 AND
0x586 DUP1
0x587 ISZERO
0x588 PUSH2 0x59f
0x58b JUMPI
---
0x57f: JUMPDEST 
0x580: V539 = 0x7
0x582: V540 = S[0x7]
0x583: V541 = 0xff
0x585: V542 = AND 0xff V540
0x587: V543 = ISZERO V542
0x588: V544 = 0x59f
0x58b: JUMPI 0x59f V543
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: [V542]
Exit stack: [V12, 0x189, S0, V542]

================================

Block 0x58c
[0x58c:0x59e]
---
Predecessors: [0x57f]
Successors: [0x59f]
---
0x58c POP
0x58d PUSH1 0x0
0x58f SLOAD
0x590 CALLER
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 SWAP1
0x59a DUP2
0x59b AND
0x59c SWAP2
0x59d AND
0x59e EQ
---
0x58d: V545 = 0x0
0x58f: V546 = S[0x0]
0x590: V547 = CALLER
0x591: V548 = 0x1
0x593: V549 = 0xa0
0x595: V550 = 0x2
0x597: V551 = EXP 0x2 0xa0
0x598: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x59d: V554 = AND V546 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V555 = EQ V554 V553
---
Entry stack: [V12, 0x189, S1, V542]
Stack pops: 1
Stack additions: [V555]
Exit stack: [V12, 0x189, S1, V555]

================================

Block 0x59f
[0x59f:0x5a4]
---
Predecessors: [0x57f, 0x58c]
Successors: [0x186, 0x5a5]
---
0x59f JUMPDEST
0x5a0 ISZERO
0x5a1 PUSH2 0x186
0x5a4 JUMPI
---
0x59f: JUMPDEST 
0x5a0: V556 = ISZERO S0
0x5a1: V557 = 0x186
0x5a4: JUMPI 0x186 V556
---
Entry stack: [V12, 0x189, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x189, S1]

================================

Block 0x5a5
[0x5a5:0x5d7]
---
Predecessors: [0x59f]
Successors: [0x5d8, 0x62e]
---
0x5a5 PUSH1 0x0
0x5a7 SLOAD
0x5a8 PUSH1 0x2
0x5aa SLOAD
0x5ab PUSH1 0x1
0x5ad PUSH1 0xa0
0x5af PUSH1 0x2
0x5b1 EXP
0x5b2 SUB
0x5b3 SWAP1
0x5b4 SWAP2
0x5b5 AND
0x5b6 SWAP1
0x5b7 DUP1
0x5b8 ISZERO
0x5b9 PUSH2 0x8fc
0x5bc MUL
0x5bd SWAP1
0x5be PUSH1 0x40
0x5c0 MLOAD
0x5c1 PUSH1 0x0
0x5c3 PUSH1 0x40
0x5c5 MLOAD
0x5c6 DUP1
0x5c7 DUP4
0x5c8 SUB
0x5c9 DUP2
0x5ca DUP6
0x5cb DUP9
0x5cc DUP9
0x5cd CALL
0x5ce SWAP4
0x5cf POP
0x5d0 POP
0x5d1 POP
0x5d2 POP
0x5d3 ISZERO
0x5d4 PUSH2 0x62e
0x5d7 JUMPI
---
0x5a5: V558 = 0x0
0x5a7: V559 = S[0x0]
0x5a8: V560 = 0x2
0x5aa: V561 = S[0x2]
0x5ab: V562 = 0x1
0x5ad: V563 = 0xa0
0x5af: V564 = 0x2
0x5b1: V565 = EXP 0x2 0xa0
0x5b2: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b5: V567 = AND V559 0xffffffffffffffffffffffffffffffffffffffff
0x5b8: V568 = ISZERO V561
0x5b9: V569 = 0x8fc
0x5bc: V570 = MUL 0x8fc V568
0x5be: V571 = 0x40
0x5c0: V572 = M[0x40]
0x5c1: V573 = 0x0
0x5c3: V574 = 0x40
0x5c5: V575 = M[0x40]
0x5c8: V576 = SUB V572 V575
0x5cd: V577 = CALL V570 V567 V561 V575 V576 V575 0x0
0x5d3: V578 = ISZERO V577
0x5d4: V579 = 0x62e
0x5d7: JUMPI 0x62e V578
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S0]

================================

Block 0x5d8
[0x5d8:0x62d]
---
Predecessors: [0x5a5]
Successors: [0x186]
---
0x5d8 PUSH1 0x0
0x5da DUP1
0x5db SLOAD
0x5dc PUSH1 0x2
0x5de SLOAD
0x5df PUSH1 0x0
0x5e1 DUP1
0x5e2 MLOAD
0x5e3 PUSH1 0x20
0x5e5 PUSH2 0x641
0x5e8 DUP4
0x5e9 CODECOPY
0x5ea DUP2
0x5eb MLOAD
0x5ec SWAP2
0x5ed MSTORE
0x5ee SWAP3
0x5ef PUSH1 0x1
0x5f1 PUSH1 0xa0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 SUB
0x5f7 SWAP1
0x5f8 SWAP3
0x5f9 AND
0x5fa SWAP2
0x5fb PUSH1 0x40
0x5fd MLOAD
0x5fe PUSH1 0x1
0x600 PUSH1 0xa0
0x602 PUSH1 0x2
0x604 EXP
0x605 SUB
0x606 SWAP1
0x607 SWAP4
0x608 AND
0x609 DUP4
0x60a MSTORE
0x60b PUSH1 0x20
0x60d DUP4
0x60e ADD
0x60f SWAP2
0x610 SWAP1
0x611 SWAP2
0x612 MSTORE
0x613 ISZERO
0x614 ISZERO
0x615 PUSH1 0x40
0x617 DUP1
0x618 DUP4
0x619 ADD
0x61a SWAP2
0x61b SWAP1
0x61c SWAP2
0x61d MSTORE
0x61e PUSH1 0x60
0x620 SWAP1
0x621 SWAP2
0x622 ADD
0x623 SWAP1
0x624 MLOAD
0x625 DUP1
0x626 SWAP2
0x627 SUB
0x628 SWAP1
0x629 LOG1
0x62a PUSH2 0x186
0x62d JUMP
---
0x5d8: V580 = 0x0
0x5db: V581 = S[0x0]
0x5dc: V582 = 0x2
0x5de: V583 = S[0x2]
0x5df: V584 = 0x0
0x5e2: V585 = M[0x0]
0x5e3: V586 = 0x20
0x5e5: V587 = 0x641
0x5e9: CODECOPY 0x0 0x641 0x20
0x5eb: V588 = M[0x0]
0x5ed: M[0x0] = V585
0x5ef: V589 = 0x1
0x5f1: V590 = 0xa0
0x5f3: V591 = 0x2
0x5f5: V592 = EXP 0x2 0xa0
0x5f6: V593 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f9: V594 = AND V581 0xffffffffffffffffffffffffffffffffffffffff
0x5fb: V595 = 0x40
0x5fd: V596 = M[0x40]
0x5fe: V597 = 0x1
0x600: V598 = 0xa0
0x602: V599 = 0x2
0x604: V600 = EXP 0x2 0xa0
0x605: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x608: V602 = AND V594 0xffffffffffffffffffffffffffffffffffffffff
0x60a: M[V596] = V602
0x60b: V603 = 0x20
0x60e: V604 = ADD V596 0x20
0x612: M[V604] = V583
0x613: V605 = ISZERO 0x0
0x614: V606 = ISZERO 0x1
0x615: V607 = 0x40
0x619: V608 = ADD V596 0x40
0x61d: M[V608] = 0x0
0x61e: V609 = 0x60
0x622: V610 = ADD V596 0x60
0x624: V611 = M[0x40]
0x627: V612 = SUB V610 V611
0x629: LOG V611 V612 V588
0x62a: V613 = 0x186
0x62d: JUMP 0x186
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S0]

================================

Block 0x62e
[0x62e:0x638]
---
Predecessors: [0x5a5]
Successors: [0x639]
---
0x62e JUMPDEST
0x62f PUSH1 0x7
0x631 DUP1
0x632 SLOAD
0x633 PUSH1 0xff
0x635 NOT
0x636 AND
0x637 SWAP1
0x638 SSTORE
---
0x62e: JUMPDEST 
0x62f: V614 = 0x7
0x632: V615 = S[0x7]
0x633: V616 = 0xff
0x635: V617 = NOT 0xff
0x636: V618 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V615
0x638: S[0x7] = V618
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S0]

================================

Block 0x639
[0x639:0x639]
---
Predecessors: [0x62e]
Successors: [0x63a]
---
0x639 JUMPDEST
---
0x639: JUMPDEST 
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S0]

================================

Block 0x63a
[0x63a:0x63a]
---
Predecessors: [0x639]
Successors: [0x63b]
---
0x63a JUMPDEST
---
0x63a: JUMPDEST 
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S0]

================================

Block 0x63b
[0x63b:0x63b]
---
Predecessors: [0x63a]
Successors: [0x63c]
---
0x63b JUMPDEST
---
0x63b: JUMPDEST 
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S0]

================================

Block 0x63c
[0x63c:0x63c]
---
Predecessors: [0x63b]
Successors: [0x63d]
---
0x63c JUMPDEST
---
0x63c: JUMPDEST 
---
Entry stack: [V12, 0x189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x189, S0]

================================

Block 0x63d
[0x63d:0x63f]
---
Predecessors: [0x63c]
Successors: [0x189]
---
0x63d JUMPDEST
0x63e POP
0x63f JUMP
---
0x63d: JUMPDEST 
0x63f: JUMP 0x189
---
Entry stack: [V12, 0x189, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x640
[0x640:0x68c]
---
Predecessors: []
Successors: []
---
0x640 STOP
0x641 MISSING 0xe8
0x642 TIMESTAMP
0x643 MISSING 0xae
0x644 MISSING 0xa7
0x645 MISSING 0xa5
0x646 CALL
0x647 MISSING 0xb0
0x648 LT
0x649 MISSING 0x49
0x64a MISSING 0xd7
0x64b MSTORE
0x64c STOP
0x64d DUP13
0x64e MSTORE8
0x64f MISSING 0xc5
0x650 MISSING 0x28
0x651 SWAP1
0x652 MISSING 0xb1
0x653 MISSING 0xa6
0x654 MISSING 0xda
0x655 MISSING 0xf6
0x656 PUSH1 0xcf
0x658 CODECOPY
0x659 MISSING 0xe8
0x65a MISSING 0xee
0x65b MISSING 0xc5
0x65c MOD
0x65d GT
0x65e MISSING 0x2b
0x65f MISSING 0xbd
0x660 MISSING 0xf6
0x661 LOG1
0x662 PUSH6 0x627a7a723058
0x669 SHA3
0x66a MISSING 0xc9
0x66b MISSING 0x29
0x66c MISSING 0x4f
0x66d AND
0x66e MISSING 0xd5
0x66f MISSING 0xdb
0x670 MISSING 0xe4
0x671 PUSH27 0x9bfd3b27466799c7fbf35e2e5e656f9abd5e0314cb0aca0a0029
---
0x640: STOP 
0x641: MISSING 0xe8
0x642: V619 = TIMESTAMP
0x643: MISSING 0xae
0x644: MISSING 0xa7
0x645: MISSING 0xa5
0x646: V620 = CALL S0 S1 S2 S3 S4 S5 S6
0x647: MISSING 0xb0
0x648: V621 = LT S0 S1
0x649: MISSING 0x49
0x64a: MISSING 0xd7
0x64b: M[S0] = S1
0x64c: STOP 
0x64e: M8[S12] = S0
0x64f: MISSING 0xc5
0x650: MISSING 0x28
0x652: MISSING 0xb1
0x653: MISSING 0xa6
0x654: MISSING 0xda
0x655: MISSING 0xf6
0x656: V622 = 0xcf
0x658: CODECOPY 0xcf S0 S1
0x659: MISSING 0xe8
0x65a: MISSING 0xee
0x65b: MISSING 0xc5
0x65c: V623 = MOD S0 S1
0x65d: V624 = GT V623 S2
0x65e: MISSING 0x2b
0x65f: MISSING 0xbd
0x660: MISSING 0xf6
0x661: LOG S0 S1 S2
0x662: V625 = 0x627a7a723058
0x669: V626 = SHA3 0x627a7a723058 S3
0x66a: MISSING 0xc9
0x66b: MISSING 0x29
0x66c: MISSING 0x4f
0x66d: V627 = AND S0 S1
0x66e: MISSING 0xd5
0x66f: MISSING 0xdb
0x670: MISSING 0xe4
0x671: V628 = 0x9bfd3b27466799c7fbf35e2e5e656f9abd5e0314cb0aca0a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V619, V620, V621, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V624, V626, V627, 0x9bfd3b27466799c7fbf35e2e5e656f9abd5e0314cb0aca0a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x18b
Exit block: 0x189
Body: 0x189, 0x18b, 0x192, 0x196, 0x2e2, 0x2ec, 0x2f7, 0x357, 0x367, 0x368, 0x369

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1a0
Exit block: 0x1b3
Body: 0x1a0, 0x1a7, 0x1ab, 0x1b3, 0x36b

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x1c5
Exit block: 0x1d8
Body: 0x1c5, 0x1cc, 0x1d0, 0x1d8, 0x371

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x1f4
Exit block: 0x1d8
Body: 0x1d8, 0x1f4, 0x1fb, 0x1ff, 0x380

Function 4:
Public function signature: 0x70a08231
Entry block: 0x223
Exit block: 0x1b3
Body: 0x1b3, 0x223, 0x22a, 0x22e, 0x38f

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x254
Exit block: 0x1b3
Body: 0x1b3, 0x254, 0x25b, 0x25f, 0x3a1

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x279
Exit block: 0x1b3
Body: 0x1b3, 0x279, 0x280, 0x284, 0x3a7

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x29e
Exit block: 0x1b3
Body: 0x1b3, 0x29e, 0x2a5, 0x2a9, 0x3ad

Function 8:
Public function signature: 0xa4821719
Entry block: 0x2c3
Exit block: 0x189
Body: 0x8c, 0xa0, 0xa4, 0xea, 0xeb, 0x12b, 0x12f, 0x13c, 0x140, 0x186, 0x189, 0x2c3

Function 9:
Public function signature: 0xfd6b7ef8
Entry block: 0x2cd
Exit block: 0x189
Body: 0x186, 0x189, 0x2cd, 0x2d4, 0x2d8, 0x4b0, 0x4bd, 0x4c9, 0x4f0, 0x51b, 0x561, 0x57d, 0x57e, 0x57f, 0x58c, 0x59f, 0x5a5, 0x5d8, 0x62e, 0x639, 0x63a, 0x63b, 0x63c, 0x63d

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x189
Body: 0x88, 0x8c, 0xa0, 0xa4, 0xea, 0xeb, 0x12b, 0x12f, 0x13c, 0x140, 0x186, 0x189

