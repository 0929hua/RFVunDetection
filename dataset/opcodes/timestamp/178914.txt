Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa1]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa1
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa1
0xa: JUMPI 0xa1 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x28a]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x28a
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x28a
0x3d: JUMPI 0x28a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x29f]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x29f
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x29f
0x48: JUMPI 0x29f V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x2c4]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x2c4
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x2c4
0x53: JUMPI 0x2c4 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x2f3]
---
0x54 DUP1
0x55 PUSH4 0x3c799547
0x5a EQ
0x5b PUSH2 0x2f3
0x5e JUMPI
---
0x55: V20 = 0x3c799547
0x5a: V21 = EQ 0x3c799547 V10
0x5b: V22 = 0x2f3
0x5e: JUMPI 0x2f3 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x318]
---
0x5f DUP1
0x60 PUSH4 0x6e66f6e9
0x65 EQ
0x66 PUSH2 0x318
0x69 JUMPI
---
0x60: V23 = 0x6e66f6e9
0x65: V24 = EQ 0x6e66f6e9 V10
0x66: V25 = 0x318
0x69: JUMPI 0x318 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x347]
---
0x6a DUP1
0x6b PUSH4 0x7a3a0e84
0x70 EQ
0x71 PUSH2 0x347
0x74 JUMPI
---
0x6b: V26 = 0x7a3a0e84
0x70: V27 = EQ 0x7a3a0e84 V10
0x71: V28 = 0x347
0x74: JUMPI 0x347 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x36c]
---
0x75 DUP1
0x76 PUSH4 0x7b3e5e7b
0x7b EQ
0x7c PUSH2 0x36c
0x7f JUMPI
---
0x76: V29 = 0x7b3e5e7b
0x7b: V30 = EQ 0x7b3e5e7b V10
0x7c: V31 = 0x36c
0x7f: JUMPI 0x36c V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x391]
---
0x80 DUP1
0x81 PUSH4 0xa035b1fe
0x86 EQ
0x87 PUSH2 0x391
0x8a JUMPI
---
0x81: V32 = 0xa035b1fe
0x86: V33 = EQ 0xa035b1fe V10
0x87: V34 = 0x391
0x8a: JUMPI 0x391 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x3b6]
---
0x8b DUP1
0x8c PUSH4 0xc8f5f526
0x91 EQ
0x92 PUSH2 0x3b6
0x95 JUMPI
---
0x8c: V35 = 0xc8f5f526
0x91: V36 = EQ 0xc8f5f526 V10
0x92: V37 = 0x3b6
0x95: JUMPI 0x3b6 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x3cb]
---
0x96 DUP1
0x97 PUSH4 0xdc0d3dff
0x9c EQ
0x9d PUSH2 0x3cb
0xa0 JUMPI
---
0x97: V38 = 0xdc0d3dff
0x9c: V39 = EQ 0xdc0d3dff V10
0x9d: V40 = 0x3cb
0xa0: JUMPI 0x3cb V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x0, 0x96]
Successors: [0xa5]
---
0xa1 JUMPDEST
0xa2 PUSH2 0x288
---
0xa1: JUMPDEST 
0xa2: V41 = 0x288
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x288]
Exit stack: [V10, 0x288]

================================

Block 0xa5
[0xa5:0xb4]
---
Predecessors: [0xa1]
Successors: [0xb5, 0x231]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 PUSH7 0x2386f26fc10000
0xaf DUP2
0xb0 LT
0xb1 PUSH2 0x231
0xb4 JUMPI
---
0xa5: JUMPDEST 
0xa6: V42 = CALLVALUE
0xa7: V43 = 0x2386f26fc10000
0xb0: V44 = LT V42 0x2386f26fc10000
0xb1: V45 = 0x231
0xb4: JUMPI 0x231 V44
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V10, 0x288, V42]

================================

Block 0xb5
[0xb5:0xe1]
---
Predecessors: [0xa5]
Successors: [0x5b6]
---
0xb5 PUSH1 0x40
0xb7 DUP1
0xb8 MLOAD
0xb9 SWAP1
0xba DUP2
0xbb ADD
0xbc PUSH1 0x40
0xbe MSTORE
0xbf PUSH1 0x1
0xc1 PUSH1 0xa0
0xc3 PUSH1 0x2
0xc5 EXP
0xc6 SUB
0xc7 CALLER
0xc8 AND
0xc9 DUP2
0xca MSTORE
0xcb PUSH1 0x20
0xcd DUP2
0xce ADD
0xcf DUP3
0xd0 SWAP1
0xd1 MSTORE
0xd2 PUSH1 0x7
0xd4 DUP1
0xd5 SLOAD
0xd6 PUSH2 0xe2
0xd9 DUP3
0xda PUSH1 0x1
0xdc DUP4
0xdd ADD
0xde PUSH2 0x5b6
0xe1 JUMP
---
0xb5: V46 = 0x40
0xb8: V47 = M[0x40]
0xbb: V48 = ADD V47 0x40
0xbc: V49 = 0x40
0xbe: M[0x40] = V48
0xbf: V50 = 0x1
0xc1: V51 = 0xa0
0xc3: V52 = 0x2
0xc5: V53 = EXP 0x2 0xa0
0xc6: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7: V55 = CALLER
0xc8: V56 = AND V55 0xffffffffffffffffffffffffffffffffffffffff
0xca: M[V47] = V56
0xcb: V57 = 0x20
0xce: V58 = ADD V47 0x20
0xd1: M[V58] = V42
0xd2: V59 = 0x7
0xd5: V60 = S[0x7]
0xd6: V61 = 0xe2
0xda: V62 = 0x1
0xdd: V63 = ADD V60 0x1
0xde: V64 = 0x5b6
0xe1: JUMP 0x5b6
---
Entry stack: [V10, 0x288, V42]
Stack pops: 1
Stack additions: [S0, V47, 0x7, V60, 0xe2, 0x7, V63]
Exit stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63]

================================

Block 0xe2
[0xe2:0xea]
---
Predecessors: [0x5e3]
Successors: [0xeb, 0xec]
---
0xe2 JUMPDEST
0xe3 DUP2
0xe4 SLOAD
0xe5 DUP2
0xe6 LT
0xe7 PUSH2 0xec
0xea JUMPI
---
0xe2: JUMPDEST 
0xe4: V65 = S[0x7]
0xe6: V66 = LT V60 V65
0xe7: V67 = 0xec
0xea: JUMPI 0xec V66
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x288, V42, V47, 0x7, V60]

================================

Block 0xeb
[0xeb:0xeb]
---
Predecessors: [0xe2]
Successors: []
---
0xeb INVALID
---
0xeb: INVALID 
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288, V42, V47, 0x7, V60]

================================

Block 0xec
[0xec:0xfc]
---
Predecessors: [0xe2]
Successors: [0xfd]
---
0xec JUMPDEST
0xed SWAP1
0xee PUSH1 0x0
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 PUSH1 0x0
0xf5 SHA3
0xf6 SWAP1
0xf7 PUSH1 0x2
0xf9 MUL
0xfa ADD
0xfb PUSH1 0x0
---
0xec: JUMPDEST 
0xee: V68 = 0x0
0xf0: M[0x0] = 0x7
0xf1: V69 = 0x20
0xf3: V70 = 0x0
0xf5: V71 = SHA3 0x0 0x20
0xf7: V72 = 0x2
0xf9: V73 = MUL 0x2 V60
0xfa: V74 = ADD V73 V71
0xfb: V75 = 0x0
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60]
Stack pops: 2
Stack additions: [V74, 0x0]
Exit stack: [V10, 0x288, V42, V47, V74, 0x0]

================================

Block 0xfd
[0xfd:0x166]
---
Predecessors: [0xec]
Successors: [0x167, 0x168]
---
0xfd JUMPDEST
0xfe POP
0xff DUP2
0x100 MLOAD
0x101 DUP2
0x102 SLOAD
0x103 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x118 NOT
0x119 AND
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 SWAP2
0x123 SWAP1
0x124 SWAP2
0x125 AND
0x126 OR
0x127 DUP2
0x128 SSTORE
0x129 PUSH1 0x20
0x12b DUP3
0x12c ADD
0x12d MLOAD
0x12e PUSH1 0x1
0x130 SWAP1
0x131 SWAP2
0x132 ADD
0x133 SSTORE
0x134 POP
0x135 PUSH1 0x2
0x137 DUP1
0x138 SLOAD
0x139 DUP3
0x13a ADD
0x13b SWAP1
0x13c SSTORE
0x13d PUSH1 0x3
0x13f DUP1
0x140 SLOAD
0x141 DUP3
0x142 ADD
0x143 SWAP1
0x144 SSTORE
0x145 PUSH1 0x6
0x147 SLOAD
0x148 PUSH1 0x5
0x14a SLOAD
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 SWAP1
0x154 SWAP2
0x155 AND
0x156 SWAP1
0x157 PUSH4 0xbd9578ea
0x15c SWAP1
0x15d CALLER
0x15e SWAP1
0x15f DUP5
0x160 DUP2
0x161 ISZERO
0x162 ISZERO
0x163 PUSH2 0x168
0x166 JUMPI
---
0xfd: JUMPDEST 
0x100: V76 = M[V47]
0x102: V77 = S[V74]
0x103: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x118: V79 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x119: V80 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V77
0x11a: V81 = 0x1
0x11c: V82 = 0xa0
0x11e: V83 = 0x2
0x120: V84 = EXP 0x2 0xa0
0x121: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0x125: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x126: V87 = OR V86 V80
0x128: S[V74] = V87
0x129: V88 = 0x20
0x12c: V89 = ADD V47 0x20
0x12d: V90 = M[V89]
0x12e: V91 = 0x1
0x132: V92 = ADD V74 0x1
0x133: S[V92] = V90
0x135: V93 = 0x2
0x138: V94 = S[0x2]
0x13a: V95 = ADD V42 V94
0x13c: S[0x2] = V95
0x13d: V96 = 0x3
0x140: V97 = S[0x3]
0x142: V98 = ADD V42 V97
0x144: S[0x3] = V98
0x145: V99 = 0x6
0x147: V100 = S[0x6]
0x148: V101 = 0x5
0x14a: V102 = S[0x5]
0x14b: V103 = 0x1
0x14d: V104 = 0xa0
0x14f: V105 = 0x2
0x151: V106 = EXP 0x2 0xa0
0x152: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V108 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x157: V109 = 0xbd9578ea
0x15d: V110 = CALLER
0x161: V111 = ISZERO V102
0x162: V112 = ISZERO V111
0x163: V113 = 0x168
0x166: JUMPI 0x168 V112
---
Entry stack: [V10, 0x288, V42, V47, V74, 0x0]
Stack pops: 4
Stack additions: [S3, V108, 0xbd9578ea, V110, V102, S3]
Exit stack: [V10, 0x288, V42, V108, 0xbd9578ea, V110, V102, V42]

================================

Block 0x167
[0x167:0x167]
---
Predecessors: [0xfd]
Successors: []
---
0x167 INVALID
---
0x167: INVALID 
---
Entry stack: [V10, 0x288, V42, V108, 0xbd9578ea, V110, V102, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288, V42, V108, 0xbd9578ea, V110, V102, V42]

================================

Block 0x168
[0x168:0x1c9]
---
Predecessors: [0xfd]
Successors: [0x1ca, 0x1ce]
---
0x168 JUMPDEST
0x169 DIV
0x16a PUSH1 0x0
0x16c PUSH1 0x40
0x16e MLOAD
0x16f PUSH1 0x20
0x171 ADD
0x172 MSTORE
0x173 PUSH1 0x40
0x175 MLOAD
0x176 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x194 PUSH4 0xffffffff
0x199 DUP6
0x19a AND
0x19b MUL
0x19c DUP2
0x19d MSTORE
0x19e PUSH1 0x1
0x1a0 PUSH1 0xa0
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 SUB
0x1a6 SWAP1
0x1a7 SWAP3
0x1a8 AND
0x1a9 PUSH1 0x4
0x1ab DUP4
0x1ac ADD
0x1ad MSTORE
0x1ae PUSH1 0x24
0x1b0 DUP3
0x1b1 ADD
0x1b2 MSTORE
0x1b3 PUSH1 0x44
0x1b5 ADD
0x1b6 PUSH1 0x20
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb DUP1
0x1bc DUP4
0x1bd SUB
0x1be DUP2
0x1bf PUSH1 0x0
0x1c1 DUP8
0x1c2 DUP1
0x1c3 EXTCODESIZE
0x1c4 ISZERO
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x168: JUMPDEST 
0x169: V114 = DIV V42 V102
0x16a: V115 = 0x0
0x16c: V116 = 0x40
0x16e: V117 = M[0x40]
0x16f: V118 = 0x20
0x171: V119 = ADD 0x20 V117
0x172: M[V119] = 0x0
0x173: V120 = 0x40
0x175: V121 = M[0x40]
0x176: V122 = 0x100000000000000000000000000000000000000000000000000000000
0x194: V123 = 0xffffffff
0x19a: V124 = AND 0xbd9578ea 0xffffffff
0x19b: V125 = MUL 0xbd9578ea 0x100000000000000000000000000000000000000000000000000000000
0x19d: M[V121] = 0xbd9578ea00000000000000000000000000000000000000000000000000000000
0x19e: V126 = 0x1
0x1a0: V127 = 0xa0
0x1a2: V128 = 0x2
0x1a4: V129 = EXP 0x2 0xa0
0x1a5: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V131 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V132 = 0x4
0x1ac: V133 = ADD V121 0x4
0x1ad: M[V133] = V131
0x1ae: V134 = 0x24
0x1b1: V135 = ADD V121 0x24
0x1b2: M[V135] = V114
0x1b3: V136 = 0x44
0x1b5: V137 = ADD 0x44 V121
0x1b6: V138 = 0x20
0x1b8: V139 = 0x40
0x1ba: V140 = M[0x40]
0x1bd: V141 = SUB V137 V140
0x1bf: V142 = 0x0
0x1c3: V143 = EXTCODESIZE V108
0x1c4: V144 = ISZERO V143
0x1c5: V145 = ISZERO V144
0x1c6: V146 = 0x1ce
0x1c9: JUMPI 0x1ce V145
---
Entry stack: [V10, 0x288, V42, V108, 0xbd9578ea, V110, V102, V42]
Stack pops: 5
Stack additions: [S4, S3, V137, 0x20, V140, V141, V140, 0x0, S4]
Exit stack: [V10, 0x288, V42, V108, 0xbd9578ea, V137, 0x20, V140, V141, V140, 0x0, V108]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x168]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V147 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x288, V42, V108, 0xbd9578ea, V137, 0x20, V140, V141, V140, 0x0, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288, V42, V108, 0xbd9578ea, V137, 0x20, V140, V141, V140, 0x0, V108]

================================

Block 0x1ce
[0x1ce:0x1da]
---
Predecessors: [0x168]
Successors: [0x1db, 0x1df]
---
0x1ce JUMPDEST
0x1cf PUSH2 0x2c6
0x1d2 GAS
0x1d3 SUB
0x1d4 CALL
0x1d5 ISZERO
0x1d6 ISZERO
0x1d7 PUSH2 0x1df
0x1da JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V148 = 0x2c6
0x1d2: V149 = GAS
0x1d3: V150 = SUB V149 0x2c6
0x1d4: V151 = CALL V150 V108 0x0 V140 V141 V140 0x20
0x1d5: V152 = ISZERO V151
0x1d6: V153 = ISZERO V152
0x1d7: V154 = 0x1df
0x1da: JUMPI 0x1df V153
---
Entry stack: [V10, 0x288, V42, V108, 0xbd9578ea, V137, 0x20, V140, V141, V140, 0x0, V108]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x288, V42, V108, 0xbd9578ea, V137]

================================

Block 0x1db
[0x1db:0x1de]
---
Predecessors: [0x1ce]
Successors: []
---
0x1db PUSH1 0x0
0x1dd DUP1
0x1de REVERT
---
0x1db: V155 = 0x0
0x1de: REVERT 0x0 0x0
---
Entry stack: [V10, 0x288, V42, V108, 0xbd9578ea, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288, V42, V108, 0xbd9578ea, V137]

================================

Block 0x1df
[0x1df:0x230]
---
Predecessors: [0x1ce]
Successors: [0x284]
---
0x1df JUMPDEST
0x1e0 POP
0x1e1 POP
0x1e2 POP
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 DUP1
0x1e7 MLOAD
0x1e8 SWAP1
0x1e9 POP
0x1ea POP
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee MLOAD
0x1ef PUSH1 0x20
0x1f1 PUSH2 0x628
0x1f4 DUP4
0x1f5 CODECOPY
0x1f6 DUP2
0x1f7 MLOAD
0x1f8 SWAP2
0x1f9 MSTORE
0x1fa CALLER
0x1fb DUP3
0x1fc PUSH1 0x1
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 PUSH1 0x1
0x203 PUSH1 0xa0
0x205 PUSH1 0x2
0x207 EXP
0x208 SUB
0x209 SWAP1
0x20a SWAP4
0x20b AND
0x20c DUP4
0x20d MSTORE
0x20e PUSH1 0x20
0x210 DUP4
0x211 ADD
0x212 SWAP2
0x213 SWAP1
0x214 SWAP2
0x215 MSTORE
0x216 ISZERO
0x217 ISZERO
0x218 PUSH1 0x40
0x21a DUP1
0x21b DUP4
0x21c ADD
0x21d SWAP2
0x21e SWAP1
0x21f SWAP2
0x220 MSTORE
0x221 PUSH1 0x60
0x223 SWAP1
0x224 SWAP2
0x225 ADD
0x226 SWAP1
0x227 MLOAD
0x228 DUP1
0x229 SWAP2
0x22a SUB
0x22b SWAP1
0x22c LOG1
0x22d PUSH2 0x284
0x230 JUMP
---
0x1df: JUMPDEST 
0x1e3: V156 = 0x40
0x1e5: V157 = M[0x40]
0x1e7: V158 = M[V157]
0x1eb: V159 = 0x0
0x1ee: V160 = M[0x0]
0x1ef: V161 = 0x20
0x1f1: V162 = 0x628
0x1f5: CODECOPY 0x0 0x628 0x20
0x1f7: V163 = M[0x0]
0x1f9: M[0x0] = V160
0x1fa: V164 = CALLER
0x1fc: V165 = 0x1
0x1fe: V166 = 0x40
0x200: V167 = M[0x40]
0x201: V168 = 0x1
0x203: V169 = 0xa0
0x205: V170 = 0x2
0x207: V171 = EXP 0x2 0xa0
0x208: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V173 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x20d: M[V167] = V173
0x20e: V174 = 0x20
0x211: V175 = ADD V167 0x20
0x215: M[V175] = V42
0x216: V176 = ISZERO 0x1
0x217: V177 = ISZERO 0x0
0x218: V178 = 0x40
0x21c: V179 = ADD V167 0x40
0x220: M[V179] = 0x1
0x221: V180 = 0x60
0x225: V181 = ADD V167 0x60
0x227: V182 = M[0x40]
0x22a: V183 = SUB V181 V182
0x22c: LOG V182 V183 V163
0x22d: V184 = 0x284
0x230: JUMP 0x284
---
Entry stack: [V10, 0x288, V42, V108, 0xbd9578ea, V137]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x288, V42]

================================

Block 0x231
[0x231:0x283]
---
Predecessors: [0xa5]
Successors: [0x284]
---
0x231 JUMPDEST
0x232 PUSH1 0x2
0x234 DUP1
0x235 SLOAD
0x236 DUP3
0x237 ADD
0x238 SWAP1
0x239 SSTORE
0x23a PUSH1 0x3
0x23c DUP1
0x23d SLOAD
0x23e DUP3
0x23f ADD
0x240 SWAP1
0x241 SSTORE
0x242 PUSH1 0x0
0x244 DUP1
0x245 MLOAD
0x246 PUSH1 0x20
0x248 PUSH2 0x628
0x24b DUP4
0x24c CODECOPY
0x24d DUP2
0x24e MLOAD
0x24f SWAP2
0x250 MSTORE
0x251 CALLER
0x252 DUP3
0x253 PUSH1 0x0
0x255 PUSH1 0x40
0x257 MLOAD
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 SWAP1
0x261 SWAP4
0x262 AND
0x263 DUP4
0x264 MSTORE
0x265 PUSH1 0x20
0x267 DUP4
0x268 ADD
0x269 SWAP2
0x26a SWAP1
0x26b SWAP2
0x26c MSTORE
0x26d ISZERO
0x26e ISZERO
0x26f PUSH1 0x40
0x271 DUP1
0x272 DUP4
0x273 ADD
0x274 SWAP2
0x275 SWAP1
0x276 SWAP2
0x277 MSTORE
0x278 PUSH1 0x60
0x27a SWAP1
0x27b SWAP2
0x27c ADD
0x27d SWAP1
0x27e MLOAD
0x27f DUP1
0x280 SWAP2
0x281 SUB
0x282 SWAP1
0x283 LOG1
---
0x231: JUMPDEST 
0x232: V185 = 0x2
0x235: V186 = S[0x2]
0x237: V187 = ADD V42 V186
0x239: S[0x2] = V187
0x23a: V188 = 0x3
0x23d: V189 = S[0x3]
0x23f: V190 = ADD V42 V189
0x241: S[0x3] = V190
0x242: V191 = 0x0
0x245: V192 = M[0x0]
0x246: V193 = 0x20
0x248: V194 = 0x628
0x24c: CODECOPY 0x0 0x628 0x20
0x24e: V195 = M[0x0]
0x250: M[0x0] = V192
0x251: V196 = CALLER
0x253: V197 = 0x0
0x255: V198 = 0x40
0x257: V199 = M[0x40]
0x258: V200 = 0x1
0x25a: V201 = 0xa0
0x25c: V202 = 0x2
0x25e: V203 = EXP 0x2 0xa0
0x25f: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x262: V205 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x264: M[V199] = V205
0x265: V206 = 0x20
0x268: V207 = ADD V199 0x20
0x26c: M[V207] = V42
0x26d: V208 = ISZERO 0x0
0x26e: V209 = ISZERO 0x1
0x26f: V210 = 0x40
0x273: V211 = ADD V199 0x40
0x277: M[V211] = 0x0
0x278: V212 = 0x60
0x27c: V213 = ADD V199 0x60
0x27e: V214 = M[0x40]
0x281: V215 = SUB V213 V214
0x283: LOG V214 V215 V195
---
Entry stack: [V10, 0x288, V42]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x288, V42]

================================

Block 0x284
[0x284:0x284]
---
Predecessors: [0x1df, 0x231]
Successors: [0x285]
---
0x284 JUMPDEST
---
0x284: JUMPDEST 
---
Entry stack: [V10, 0x288, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288, V42]

================================

Block 0x285
[0x285:0x287]
---
Predecessors: [0x284]
Successors: [0x288]
---
0x285 JUMPDEST
0x286 POP
0x287 JUMP
---
0x285: JUMPDEST 
0x287: JUMP 0x288
---
Entry stack: [V10, 0x288, V42]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x288
[0x288:0x289]
---
Predecessors: [0x285, 0x49a, 0x57c]
Successors: []
---
0x288 JUMPDEST
0x289 STOP
---
0x288: JUMPDEST 
0x289: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28a
[0x28a:0x290]
---
Predecessors: [0xb]
Successors: [0x291, 0x295]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x28a: JUMPDEST 
0x28b: V216 = CALLVALUE
0x28c: V217 = ISZERO V216
0x28d: V218 = 0x295
0x290: JUMPI 0x295 V217
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x28a]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V219 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x29c]
---
Predecessors: [0x28a]
Successors: [0x403]
---
0x295 JUMPDEST
0x296 PUSH2 0x288
0x299 PUSH2 0x403
0x29c JUMP
---
0x295: JUMPDEST 
0x296: V220 = 0x288
0x299: V221 = 0x403
0x29c: JUMP 0x403
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x288]
Exit stack: [V10, 0x288]

================================

Block 0x29d
[0x29d:0x29e]
---
Predecessors: []
Successors: []
---
0x29d JUMPDEST
0x29e STOP
---
0x29d: JUMPDEST 
0x29e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0x3e]
Successors: [0x2a6, 0x2aa]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V222 = CALLVALUE
0x2a1: V223 = ISZERO V222
0x2a2: V224 = 0x2aa
0x2a5: JUMPI 0x2aa V223
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V225 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2aa
[0x2aa:0x2b1]
---
Predecessors: [0x29f]
Successors: [0x49c]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x2b2
0x2ae PUSH2 0x49c
0x2b1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V226 = 0x2b2
0x2ae: V227 = 0x49c
0x2b1: JUMP 0x49c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b2]
Exit stack: [V10, 0x2b2]

================================

Block 0x2b2
[0x2b2:0x2c3]
---
Predecessors: [0x49c, 0x4b1, 0x4c6, 0x4cc, 0x4d2]
Successors: []
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 SWAP1
0x2b7 DUP2
0x2b8 MSTORE
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc PUSH1 0x40
0x2be MLOAD
0x2bf DUP1
0x2c0 SWAP2
0x2c1 SUB
0x2c2 SWAP1
0x2c3 RETURN
---
0x2b2: JUMPDEST 
0x2b3: V228 = 0x40
0x2b5: V229 = M[0x40]
0x2b8: M[V229] = S0
0x2b9: V230 = 0x20
0x2bb: V231 = ADD 0x20 V229
0x2bc: V232 = 0x40
0x2be: V233 = M[0x40]
0x2c1: V234 = SUB V231 V233
0x2c3: RETURN V233 V234
---
Entry stack: [V10, 0x2b2, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2b2]

================================

Block 0x2c4
[0x2c4:0x2ca]
---
Predecessors: [0x49]
Successors: [0x2cb, 0x2cf]
---
0x2c4 JUMPDEST
0x2c5 CALLVALUE
0x2c6 ISZERO
0x2c7 PUSH2 0x2cf
0x2ca JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V235 = CALLVALUE
0x2c6: V236 = ISZERO V235
0x2c7: V237 = 0x2cf
0x2ca: JUMPI 0x2cf V236
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x2c4]
Successors: []
---
0x2cb PUSH1 0x0
0x2cd DUP1
0x2ce REVERT
---
0x2cb: V238 = 0x0
0x2ce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cf
[0x2cf:0x2d6]
---
Predecessors: [0x2c4]
Successors: [0x4a2]
---
0x2cf JUMPDEST
0x2d0 PUSH2 0x2d7
0x2d3 PUSH2 0x4a2
0x2d6 JUMP
---
0x2cf: JUMPDEST 
0x2d0: V239 = 0x2d7
0x2d3: V240 = 0x4a2
0x2d6: JUMP 0x4a2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d7]
Exit stack: [V10, 0x2d7]

================================

Block 0x2d7
[0x2d7:0x2f2]
---
Predecessors: [0x4a2, 0x4b7]
Successors: []
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db PUSH1 0x1
0x2dd PUSH1 0xa0
0x2df PUSH1 0x2
0x2e1 EXP
0x2e2 SUB
0x2e3 SWAP1
0x2e4 SWAP2
0x2e5 AND
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x20
0x2ea ADD
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee DUP1
0x2ef SWAP2
0x2f0 SUB
0x2f1 SWAP1
0x2f2 RETURN
---
0x2d7: JUMPDEST 
0x2d8: V241 = 0x40
0x2da: V242 = M[0x40]
0x2db: V243 = 0x1
0x2dd: V244 = 0xa0
0x2df: V245 = 0x2
0x2e1: V246 = EXP 0x2 0xa0
0x2e2: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e5: V248 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: M[V242] = V248
0x2e8: V249 = 0x20
0x2ea: V250 = ADD 0x20 V242
0x2eb: V251 = 0x40
0x2ed: V252 = M[0x40]
0x2f0: V253 = SUB V250 V252
0x2f2: RETURN V252 V253
---
Entry stack: [V10, 0x2d7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2d7]

================================

Block 0x2f3
[0x2f3:0x2f9]
---
Predecessors: [0x54]
Successors: [0x2fa, 0x2fe]
---
0x2f3 JUMPDEST
0x2f4 CALLVALUE
0x2f5 ISZERO
0x2f6 PUSH2 0x2fe
0x2f9 JUMPI
---
0x2f3: JUMPDEST 
0x2f4: V254 = CALLVALUE
0x2f5: V255 = ISZERO V254
0x2f6: V256 = 0x2fe
0x2f9: JUMPI 0x2fe V255
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fa
[0x2fa:0x2fd]
---
Predecessors: [0x2f3]
Successors: []
---
0x2fa PUSH1 0x0
0x2fc DUP1
0x2fd REVERT
---
0x2fa: V257 = 0x0
0x2fd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fe
[0x2fe:0x305]
---
Predecessors: [0x2f3]
Successors: [0x4b1]
---
0x2fe JUMPDEST
0x2ff PUSH2 0x2b2
0x302 PUSH2 0x4b1
0x305 JUMP
---
0x2fe: JUMPDEST 
0x2ff: V258 = 0x2b2
0x302: V259 = 0x4b1
0x305: JUMP 0x4b1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b2]
Exit stack: [V10, 0x2b2]

================================

Block 0x306
[0x306:0x317]
---
Predecessors: []
Successors: []
---
0x306 JUMPDEST
0x307 PUSH1 0x40
0x309 MLOAD
0x30a SWAP1
0x30b DUP2
0x30c MSTORE
0x30d PUSH1 0x20
0x30f ADD
0x310 PUSH1 0x40
0x312 MLOAD
0x313 DUP1
0x314 SWAP2
0x315 SUB
0x316 SWAP1
0x317 RETURN
---
0x306: JUMPDEST 
0x307: V260 = 0x40
0x309: V261 = M[0x40]
0x30c: M[V261] = S0
0x30d: V262 = 0x20
0x30f: V263 = ADD 0x20 V261
0x310: V264 = 0x40
0x312: V265 = M[0x40]
0x315: V266 = SUB V263 V265
0x317: RETURN V265 V266
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x318
[0x318:0x31e]
---
Predecessors: [0x5f]
Successors: [0x31f, 0x323]
---
0x318 JUMPDEST
0x319 CALLVALUE
0x31a ISZERO
0x31b PUSH2 0x323
0x31e JUMPI
---
0x318: JUMPDEST 
0x319: V267 = CALLVALUE
0x31a: V268 = ISZERO V267
0x31b: V269 = 0x323
0x31e: JUMPI 0x323 V268
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x318]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V270 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x323
[0x323:0x32a]
---
Predecessors: [0x318]
Successors: [0x4b7]
---
0x323 JUMPDEST
0x324 PUSH2 0x2d7
0x327 PUSH2 0x4b7
0x32a JUMP
---
0x323: JUMPDEST 
0x324: V271 = 0x2d7
0x327: V272 = 0x4b7
0x32a: JUMP 0x4b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d7]
Exit stack: [V10, 0x2d7]

================================

Block 0x32b
[0x32b:0x346]
---
Predecessors: []
Successors: []
---
0x32b JUMPDEST
0x32c PUSH1 0x40
0x32e MLOAD
0x32f PUSH1 0x1
0x331 PUSH1 0xa0
0x333 PUSH1 0x2
0x335 EXP
0x336 SUB
0x337 SWAP1
0x338 SWAP2
0x339 AND
0x33a DUP2
0x33b MSTORE
0x33c PUSH1 0x20
0x33e ADD
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP1
0x343 SWAP2
0x344 SUB
0x345 SWAP1
0x346 RETURN
---
0x32b: JUMPDEST 
0x32c: V273 = 0x40
0x32e: V274 = M[0x40]
0x32f: V275 = 0x1
0x331: V276 = 0xa0
0x333: V277 = 0x2
0x335: V278 = EXP 0x2 0xa0
0x336: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x339: V280 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x33b: M[V274] = V280
0x33c: V281 = 0x20
0x33e: V282 = ADD 0x20 V274
0x33f: V283 = 0x40
0x341: V284 = M[0x40]
0x344: V285 = SUB V282 V284
0x346: RETURN V284 V285
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x347
[0x347:0x34d]
---
Predecessors: [0x6a]
Successors: [0x34e, 0x352]
---
0x347 JUMPDEST
0x348 CALLVALUE
0x349 ISZERO
0x34a PUSH2 0x352
0x34d JUMPI
---
0x347: JUMPDEST 
0x348: V286 = CALLVALUE
0x349: V287 = ISZERO V286
0x34a: V288 = 0x352
0x34d: JUMPI 0x352 V287
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x34e
[0x34e:0x351]
---
Predecessors: [0x347]
Successors: []
---
0x34e PUSH1 0x0
0x350 DUP1
0x351 REVERT
---
0x34e: V289 = 0x0
0x351: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x352
[0x352:0x359]
---
Predecessors: [0x347]
Successors: [0x4c6]
---
0x352 JUMPDEST
0x353 PUSH2 0x2b2
0x356 PUSH2 0x4c6
0x359 JUMP
---
0x352: JUMPDEST 
0x353: V290 = 0x2b2
0x356: V291 = 0x4c6
0x359: JUMP 0x4c6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b2]
Exit stack: [V10, 0x2b2]

================================

Block 0x35a
[0x35a:0x36b]
---
Predecessors: []
Successors: []
---
0x35a JUMPDEST
0x35b PUSH1 0x40
0x35d MLOAD
0x35e SWAP1
0x35f DUP2
0x360 MSTORE
0x361 PUSH1 0x20
0x363 ADD
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 SWAP2
0x369 SUB
0x36a SWAP1
0x36b RETURN
---
0x35a: JUMPDEST 
0x35b: V292 = 0x40
0x35d: V293 = M[0x40]
0x360: M[V293] = S0
0x361: V294 = 0x20
0x363: V295 = ADD 0x20 V293
0x364: V296 = 0x40
0x366: V297 = M[0x40]
0x369: V298 = SUB V295 V297
0x36b: RETURN V297 V298
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x36c
[0x36c:0x372]
---
Predecessors: [0x75]
Successors: [0x373, 0x377]
---
0x36c JUMPDEST
0x36d CALLVALUE
0x36e ISZERO
0x36f PUSH2 0x377
0x372 JUMPI
---
0x36c: JUMPDEST 
0x36d: V299 = CALLVALUE
0x36e: V300 = ISZERO V299
0x36f: V301 = 0x377
0x372: JUMPI 0x377 V300
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x373
[0x373:0x376]
---
Predecessors: [0x36c]
Successors: []
---
0x373 PUSH1 0x0
0x375 DUP1
0x376 REVERT
---
0x373: V302 = 0x0
0x376: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x377
[0x377:0x37e]
---
Predecessors: [0x36c]
Successors: [0x4cc]
---
0x377 JUMPDEST
0x378 PUSH2 0x2b2
0x37b PUSH2 0x4cc
0x37e JUMP
---
0x377: JUMPDEST 
0x378: V303 = 0x2b2
0x37b: V304 = 0x4cc
0x37e: JUMP 0x4cc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b2]
Exit stack: [V10, 0x2b2]

================================

Block 0x37f
[0x37f:0x390]
---
Predecessors: []
Successors: []
---
0x37f JUMPDEST
0x380 PUSH1 0x40
0x382 MLOAD
0x383 SWAP1
0x384 DUP2
0x385 MSTORE
0x386 PUSH1 0x20
0x388 ADD
0x389 PUSH1 0x40
0x38b MLOAD
0x38c DUP1
0x38d SWAP2
0x38e SUB
0x38f SWAP1
0x390 RETURN
---
0x37f: JUMPDEST 
0x380: V305 = 0x40
0x382: V306 = M[0x40]
0x385: M[V306] = S0
0x386: V307 = 0x20
0x388: V308 = ADD 0x20 V306
0x389: V309 = 0x40
0x38b: V310 = M[0x40]
0x38e: V311 = SUB V308 V310
0x390: RETURN V310 V311
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x391
[0x391:0x397]
---
Predecessors: [0x80]
Successors: [0x398, 0x39c]
---
0x391 JUMPDEST
0x392 CALLVALUE
0x393 ISZERO
0x394 PUSH2 0x39c
0x397 JUMPI
---
0x391: JUMPDEST 
0x392: V312 = CALLVALUE
0x393: V313 = ISZERO V312
0x394: V314 = 0x39c
0x397: JUMPI 0x39c V313
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x398
[0x398:0x39b]
---
Predecessors: [0x391]
Successors: []
---
0x398 PUSH1 0x0
0x39a DUP1
0x39b REVERT
---
0x398: V315 = 0x0
0x39b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x39c
[0x39c:0x3a3]
---
Predecessors: [0x391]
Successors: [0x4d2]
---
0x39c JUMPDEST
0x39d PUSH2 0x2b2
0x3a0 PUSH2 0x4d2
0x3a3 JUMP
---
0x39c: JUMPDEST 
0x39d: V316 = 0x2b2
0x3a0: V317 = 0x4d2
0x3a3: JUMP 0x4d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b2]
Exit stack: [V10, 0x2b2]

================================

Block 0x3a4
[0x3a4:0x3b5]
---
Predecessors: []
Successors: []
---
0x3a4 JUMPDEST
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 SWAP1
0x3a9 DUP2
0x3aa MSTORE
0x3ab PUSH1 0x20
0x3ad ADD
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 SWAP2
0x3b3 SUB
0x3b4 SWAP1
0x3b5 RETURN
---
0x3a4: JUMPDEST 
0x3a5: V318 = 0x40
0x3a7: V319 = M[0x40]
0x3aa: M[V319] = S0
0x3ab: V320 = 0x20
0x3ad: V321 = ADD 0x20 V319
0x3ae: V322 = 0x40
0x3b0: V323 = M[0x40]
0x3b3: V324 = SUB V321 V323
0x3b5: RETURN V323 V324
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b6
[0x3b6:0x3bc]
---
Predecessors: [0x8b]
Successors: [0x3bd, 0x3c1]
---
0x3b6 JUMPDEST
0x3b7 CALLVALUE
0x3b8 ISZERO
0x3b9 PUSH2 0x3c1
0x3bc JUMPI
---
0x3b6: JUMPDEST 
0x3b7: V325 = CALLVALUE
0x3b8: V326 = ISZERO V325
0x3b9: V327 = 0x3c1
0x3bc: JUMPI 0x3c1 V326
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bd
[0x3bd:0x3c0]
---
Predecessors: [0x3b6]
Successors: []
---
0x3bd PUSH1 0x0
0x3bf DUP1
0x3c0 REVERT
---
0x3bd: V328 = 0x0
0x3c0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c1
[0x3c1:0x3c8]
---
Predecessors: [0x3b6]
Successors: [0x4d8]
---
0x3c1 JUMPDEST
0x3c2 PUSH2 0x288
0x3c5 PUSH2 0x4d8
0x3c8 JUMP
---
0x3c1: JUMPDEST 
0x3c2: V329 = 0x288
0x3c5: V330 = 0x4d8
0x3c8: JUMP 0x4d8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x288]
Exit stack: [V10, 0x288]

================================

Block 0x3c9
[0x3c9:0x3ca]
---
Predecessors: []
Successors: []
---
0x3c9 JUMPDEST
0x3ca STOP
---
0x3c9: JUMPDEST 
0x3ca: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3cb
[0x3cb:0x3d1]
---
Predecessors: [0x96]
Successors: [0x3d2, 0x3d6]
---
0x3cb JUMPDEST
0x3cc CALLVALUE
0x3cd ISZERO
0x3ce PUSH2 0x3d6
0x3d1 JUMPI
---
0x3cb: JUMPDEST 
0x3cc: V331 = CALLVALUE
0x3cd: V332 = ISZERO V331
0x3ce: V333 = 0x3d6
0x3d1: JUMPI 0x3d6 V332
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d2
[0x3d2:0x3d5]
---
Predecessors: [0x3cb]
Successors: []
---
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 REVERT
---
0x3d2: V334 = 0x0
0x3d5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d6
[0x3d6:0x3e0]
---
Predecessors: [0x3cb]
Successors: [0x57e]
---
0x3d6 JUMPDEST
0x3d7 PUSH2 0x3e1
0x3da PUSH1 0x4
0x3dc CALLDATALOAD
0x3dd PUSH2 0x57e
0x3e0 JUMP
---
0x3d6: JUMPDEST 
0x3d7: V335 = 0x3e1
0x3da: V336 = 0x4
0x3dc: V337 = CALLDATALOAD 0x4
0x3dd: V338 = 0x57e
0x3e0: JUMP 0x57e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3e1, V337]
Exit stack: [V10, 0x3e1, V337]

================================

Block 0x3e1
[0x3e1:0x402]
---
Predecessors: [0x59d]
Successors: []
---
0x3e1 JUMPDEST
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 PUSH1 0x1
0x3e7 PUSH1 0xa0
0x3e9 PUSH1 0x2
0x3eb EXP
0x3ec SUB
0x3ed SWAP1
0x3ee SWAP3
0x3ef AND
0x3f0 DUP3
0x3f1 MSTORE
0x3f2 PUSH1 0x20
0x3f4 DUP3
0x3f5 ADD
0x3f6 MSTORE
0x3f7 PUSH1 0x40
0x3f9 SWAP1
0x3fa DUP2
0x3fb ADD
0x3fc SWAP1
0x3fd MLOAD
0x3fe DUP1
0x3ff SWAP2
0x400 SUB
0x401 SWAP1
0x402 RETURN
---
0x3e1: JUMPDEST 
0x3e2: V339 = 0x40
0x3e4: V340 = M[0x40]
0x3e5: V341 = 0x1
0x3e7: V342 = 0xa0
0x3e9: V343 = 0x2
0x3eb: V344 = EXP 0x2 0xa0
0x3ec: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ef: V346 = AND V532 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: M[V340] = V346
0x3f2: V347 = 0x20
0x3f5: V348 = ADD V340 0x20
0x3f6: M[V348] = V526
0x3f7: V349 = 0x40
0x3fb: V350 = ADD 0x40 V340
0x3fd: V351 = M[0x40]
0x400: V352 = SUB V350 V351
0x402: RETURN V351 V352
---
Entry stack: [V10, 0x3e1, V532, V526]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3e1]

================================

Block 0x403
[0x403:0x40c]
---
Predecessors: [0x295]
Successors: [0x40d, 0x497]
---
0x403 JUMPDEST
0x404 PUSH1 0x4
0x406 SLOAD
0x407 TIMESTAMP
0x408 LT
0x409 PUSH2 0x497
0x40c JUMPI
---
0x403: JUMPDEST 
0x404: V353 = 0x4
0x406: V354 = S[0x4]
0x407: V355 = TIMESTAMP
0x408: V356 = LT V355 V354
0x409: V357 = 0x497
0x40c: JUMPI 0x497 V356
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x40d
[0x40d:0x43f]
---
Predecessors: [0x403]
Successors: [0x440, 0x497]
---
0x40d PUSH1 0x0
0x40f SLOAD
0x410 PUSH1 0x3
0x412 SLOAD
0x413 PUSH1 0x1
0x415 PUSH1 0xa0
0x417 PUSH1 0x2
0x419 EXP
0x41a SUB
0x41b SWAP1
0x41c SWAP2
0x41d AND
0x41e SWAP1
0x41f DUP1
0x420 ISZERO
0x421 PUSH2 0x8fc
0x424 MUL
0x425 SWAP1
0x426 PUSH1 0x40
0x428 MLOAD
0x429 PUSH1 0x0
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f DUP4
0x430 SUB
0x431 DUP2
0x432 DUP6
0x433 DUP9
0x434 DUP9
0x435 CALL
0x436 SWAP4
0x437 POP
0x438 POP
0x439 POP
0x43a POP
0x43b ISZERO
0x43c PUSH2 0x497
0x43f JUMPI
---
0x40d: V358 = 0x0
0x40f: V359 = S[0x0]
0x410: V360 = 0x3
0x412: V361 = S[0x3]
0x413: V362 = 0x1
0x415: V363 = 0xa0
0x417: V364 = 0x2
0x419: V365 = EXP 0x2 0xa0
0x41a: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41d: V367 = AND V359 0xffffffffffffffffffffffffffffffffffffffff
0x420: V368 = ISZERO V361
0x421: V369 = 0x8fc
0x424: V370 = MUL 0x8fc V368
0x426: V371 = 0x40
0x428: V372 = M[0x40]
0x429: V373 = 0x0
0x42b: V374 = 0x40
0x42d: V375 = M[0x40]
0x430: V376 = SUB V372 V375
0x435: V377 = CALL V370 V367 V361 V375 V376 V375 0x0
0x43b: V378 = ISZERO V377
0x43c: V379 = 0x497
0x43f: JUMPI 0x497 V378
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x440
[0x440:0x496]
---
Predecessors: [0x40d]
Successors: [0x497]
---
0x440 PUSH1 0x0
0x442 DUP1
0x443 SLOAD
0x444 PUSH1 0x3
0x446 SLOAD
0x447 PUSH1 0x0
0x449 DUP1
0x44a MLOAD
0x44b PUSH1 0x20
0x44d PUSH2 0x628
0x450 DUP4
0x451 CODECOPY
0x452 DUP2
0x453 MLOAD
0x454 SWAP2
0x455 MSTORE
0x456 SWAP3
0x457 PUSH1 0x1
0x459 PUSH1 0xa0
0x45b PUSH1 0x2
0x45d EXP
0x45e SUB
0x45f SWAP1
0x460 SWAP3
0x461 AND
0x462 SWAP2
0x463 PUSH1 0x40
0x465 MLOAD
0x466 PUSH1 0x1
0x468 PUSH1 0xa0
0x46a PUSH1 0x2
0x46c EXP
0x46d SUB
0x46e SWAP1
0x46f SWAP4
0x470 AND
0x471 DUP4
0x472 MSTORE
0x473 PUSH1 0x20
0x475 DUP4
0x476 ADD
0x477 SWAP2
0x478 SWAP1
0x479 SWAP2
0x47a MSTORE
0x47b ISZERO
0x47c ISZERO
0x47d PUSH1 0x40
0x47f DUP1
0x480 DUP4
0x481 ADD
0x482 SWAP2
0x483 SWAP1
0x484 SWAP2
0x485 MSTORE
0x486 PUSH1 0x60
0x488 SWAP1
0x489 SWAP2
0x48a ADD
0x48b SWAP1
0x48c MLOAD
0x48d DUP1
0x48e SWAP2
0x48f SUB
0x490 SWAP1
0x491 LOG1
0x492 PUSH1 0x0
0x494 PUSH1 0x3
0x496 SSTORE
---
0x440: V380 = 0x0
0x443: V381 = S[0x0]
0x444: V382 = 0x3
0x446: V383 = S[0x3]
0x447: V384 = 0x0
0x44a: V385 = M[0x0]
0x44b: V386 = 0x20
0x44d: V387 = 0x628
0x451: CODECOPY 0x0 0x628 0x20
0x453: V388 = M[0x0]
0x455: M[0x0] = V385
0x457: V389 = 0x1
0x459: V390 = 0xa0
0x45b: V391 = 0x2
0x45d: V392 = EXP 0x2 0xa0
0x45e: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V394 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x463: V395 = 0x40
0x465: V396 = M[0x40]
0x466: V397 = 0x1
0x468: V398 = 0xa0
0x46a: V399 = 0x2
0x46c: V400 = EXP 0x2 0xa0
0x46d: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x470: V402 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x472: M[V396] = V402
0x473: V403 = 0x20
0x476: V404 = ADD V396 0x20
0x47a: M[V404] = V383
0x47b: V405 = ISZERO 0x0
0x47c: V406 = ISZERO 0x1
0x47d: V407 = 0x40
0x481: V408 = ADD V396 0x40
0x485: M[V408] = 0x0
0x486: V409 = 0x60
0x48a: V410 = ADD V396 0x60
0x48c: V411 = M[0x40]
0x48f: V412 = SUB V410 V411
0x491: LOG V411 V412 V388
0x492: V413 = 0x0
0x494: V414 = 0x3
0x496: S[0x3] = 0x0
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x497
[0x497:0x497]
---
Predecessors: [0x403, 0x40d, 0x440, 0x4d8, 0x4f0]
Successors: [0x498]
---
0x497 JUMPDEST
---
0x497: JUMPDEST 
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x498
[0x498:0x498]
---
Predecessors: [0x497]
Successors: [0x499]
---
0x498 JUMPDEST
---
0x498: JUMPDEST 
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x499
[0x499:0x499]
---
Predecessors: [0x498]
Successors: [0x49a]
---
0x499 JUMPDEST
---
0x499: JUMPDEST 
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x49a
[0x49a:0x49b]
---
Predecessors: [0x499]
Successors: [0x288]
---
0x49a JUMPDEST
0x49b JUMP
---
0x49a: JUMPDEST 
0x49b: JUMP 0x288
---
Entry stack: [V10, 0x288]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x49c
[0x49c:0x4a1]
---
Predecessors: [0x2aa]
Successors: [0x2b2]
---
0x49c JUMPDEST
0x49d PUSH1 0x4
0x49f SLOAD
0x4a0 DUP2
0x4a1 JUMP
---
0x49c: JUMPDEST 
0x49d: V415 = 0x4
0x49f: V416 = S[0x4]
0x4a1: JUMP 0x2b2
---
Entry stack: [V10, 0x2b2]
Stack pops: 1
Stack additions: [S0, V416]
Exit stack: [V10, 0x2b2, V416]

================================

Block 0x4a2
[0x4a2:0x4b0]
---
Predecessors: [0x2cf]
Successors: [0x2d7]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x0
0x4a5 SLOAD
0x4a6 PUSH1 0x1
0x4a8 PUSH1 0xa0
0x4aa PUSH1 0x2
0x4ac EXP
0x4ad SUB
0x4ae AND
0x4af DUP2
0x4b0 JUMP
---
0x4a2: JUMPDEST 
0x4a3: V417 = 0x0
0x4a5: V418 = S[0x0]
0x4a6: V419 = 0x1
0x4a8: V420 = 0xa0
0x4aa: V421 = 0x2
0x4ac: V422 = EXP 0x2 0xa0
0x4ad: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ae: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x4b0: JUMP 0x2d7
---
Entry stack: [V10, 0x2d7]
Stack pops: 1
Stack additions: [S0, V424]
Exit stack: [V10, 0x2d7, V424]

================================

Block 0x4b1
[0x4b1:0x4b6]
---
Predecessors: [0x2fe]
Successors: [0x2b2]
---
0x4b1 JUMPDEST
0x4b2 PUSH1 0x3
0x4b4 SLOAD
0x4b5 DUP2
0x4b6 JUMP
---
0x4b1: JUMPDEST 
0x4b2: V425 = 0x3
0x4b4: V426 = S[0x3]
0x4b6: JUMP 0x2b2
---
Entry stack: [V10, 0x2b2]
Stack pops: 1
Stack additions: [S0, V426]
Exit stack: [V10, 0x2b2, V426]

================================

Block 0x4b7
[0x4b7:0x4c5]
---
Predecessors: [0x323]
Successors: [0x2d7]
---
0x4b7 JUMPDEST
0x4b8 PUSH1 0x6
0x4ba SLOAD
0x4bb PUSH1 0x1
0x4bd PUSH1 0xa0
0x4bf PUSH1 0x2
0x4c1 EXP
0x4c2 SUB
0x4c3 AND
0x4c4 DUP2
0x4c5 JUMP
---
0x4b7: JUMPDEST 
0x4b8: V427 = 0x6
0x4ba: V428 = S[0x6]
0x4bb: V429 = 0x1
0x4bd: V430 = 0xa0
0x4bf: V431 = 0x2
0x4c1: V432 = EXP 0x2 0xa0
0x4c2: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c3: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x4c5: JUMP 0x2d7
---
Entry stack: [V10, 0x2d7]
Stack pops: 1
Stack additions: [S0, V434]
Exit stack: [V10, 0x2d7, V434]

================================

Block 0x4c6
[0x4c6:0x4cb]
---
Predecessors: [0x352]
Successors: [0x2b2]
---
0x4c6 JUMPDEST
0x4c7 PUSH1 0x1
0x4c9 SLOAD
0x4ca DUP2
0x4cb JUMP
---
0x4c6: JUMPDEST 
0x4c7: V435 = 0x1
0x4c9: V436 = S[0x1]
0x4cb: JUMP 0x2b2
---
Entry stack: [V10, 0x2b2]
Stack pops: 1
Stack additions: [S0, V436]
Exit stack: [V10, 0x2b2, V436]

================================

Block 0x4cc
[0x4cc:0x4d1]
---
Predecessors: [0x377]
Successors: [0x2b2]
---
0x4cc JUMPDEST
0x4cd PUSH1 0x2
0x4cf SLOAD
0x4d0 DUP2
0x4d1 JUMP
---
0x4cc: JUMPDEST 
0x4cd: V437 = 0x2
0x4cf: V438 = S[0x2]
0x4d1: JUMP 0x2b2
---
Entry stack: [V10, 0x2b2]
Stack pops: 1
Stack additions: [S0, V438]
Exit stack: [V10, 0x2b2, V438]

================================

Block 0x4d2
[0x4d2:0x4d7]
---
Predecessors: [0x39c]
Successors: [0x2b2]
---
0x4d2 JUMPDEST
0x4d3 PUSH1 0x5
0x4d5 SLOAD
0x4d6 DUP2
0x4d7 JUMP
---
0x4d2: JUMPDEST 
0x4d3: V439 = 0x5
0x4d5: V440 = S[0x5]
0x4d7: JUMP 0x2b2
---
Entry stack: [V10, 0x2b2]
Stack pops: 1
Stack additions: [S0, V440]
Exit stack: [V10, 0x2b2, V440]

================================

Block 0x4d8
[0x4d8:0x4ef]
---
Predecessors: [0x3c1]
Successors: [0x497, 0x4f0]
---
0x4d8 JUMPDEST
0x4d9 PUSH1 0x0
0x4db SLOAD
0x4dc CALLER
0x4dd PUSH1 0x1
0x4df PUSH1 0xa0
0x4e1 PUSH1 0x2
0x4e3 EXP
0x4e4 SUB
0x4e5 SWAP1
0x4e6 DUP2
0x4e7 AND
0x4e8 SWAP2
0x4e9 AND
0x4ea EQ
0x4eb ISZERO
0x4ec PUSH2 0x497
0x4ef JUMPI
---
0x4d8: JUMPDEST 
0x4d9: V441 = 0x0
0x4db: V442 = S[0x0]
0x4dc: V443 = CALLER
0x4dd: V444 = 0x1
0x4df: V445 = 0xa0
0x4e1: V446 = 0x2
0x4e3: V447 = EXP 0x2 0xa0
0x4e4: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e7: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x4e9: V450 = AND V442 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V451 = EQ V450 V449
0x4eb: V452 = ISZERO V451
0x4ec: V453 = 0x497
0x4ef: JUMPI 0x497 V452
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x4f0
[0x4f0:0x522]
---
Predecessors: [0x4d8]
Successors: [0x497, 0x523]
---
0x4f0 PUSH1 0x0
0x4f2 SLOAD
0x4f3 PUSH1 0x3
0x4f5 SLOAD
0x4f6 PUSH1 0x1
0x4f8 PUSH1 0xa0
0x4fa PUSH1 0x2
0x4fc EXP
0x4fd SUB
0x4fe SWAP1
0x4ff SWAP2
0x500 AND
0x501 SWAP1
0x502 DUP1
0x503 ISZERO
0x504 PUSH2 0x8fc
0x507 MUL
0x508 SWAP1
0x509 PUSH1 0x40
0x50b MLOAD
0x50c PUSH1 0x0
0x50e PUSH1 0x40
0x510 MLOAD
0x511 DUP1
0x512 DUP4
0x513 SUB
0x514 DUP2
0x515 DUP6
0x516 DUP9
0x517 DUP9
0x518 CALL
0x519 SWAP4
0x51a POP
0x51b POP
0x51c POP
0x51d POP
0x51e ISZERO
0x51f PUSH2 0x497
0x522 JUMPI
---
0x4f0: V454 = 0x0
0x4f2: V455 = S[0x0]
0x4f3: V456 = 0x3
0x4f5: V457 = S[0x3]
0x4f6: V458 = 0x1
0x4f8: V459 = 0xa0
0x4fa: V460 = 0x2
0x4fc: V461 = EXP 0x2 0xa0
0x4fd: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V463 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0x503: V464 = ISZERO V457
0x504: V465 = 0x8fc
0x507: V466 = MUL 0x8fc V464
0x509: V467 = 0x40
0x50b: V468 = M[0x40]
0x50c: V469 = 0x0
0x50e: V470 = 0x40
0x510: V471 = M[0x40]
0x513: V472 = SUB V468 V471
0x518: V473 = CALL V466 V463 V457 V471 V472 V471 0x0
0x51e: V474 = ISZERO V473
0x51f: V475 = 0x497
0x522: JUMPI 0x497 V474
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x523
[0x523:0x579]
---
Predecessors: [0x4f0]
Successors: [0x57a]
---
0x523 PUSH1 0x0
0x525 DUP1
0x526 SLOAD
0x527 PUSH1 0x3
0x529 SLOAD
0x52a PUSH1 0x0
0x52c DUP1
0x52d MLOAD
0x52e PUSH1 0x20
0x530 PUSH2 0x628
0x533 DUP4
0x534 CODECOPY
0x535 DUP2
0x536 MLOAD
0x537 SWAP2
0x538 MSTORE
0x539 SWAP3
0x53a PUSH1 0x1
0x53c PUSH1 0xa0
0x53e PUSH1 0x2
0x540 EXP
0x541 SUB
0x542 SWAP1
0x543 SWAP3
0x544 AND
0x545 SWAP2
0x546 PUSH1 0x40
0x548 MLOAD
0x549 PUSH1 0x1
0x54b PUSH1 0xa0
0x54d PUSH1 0x2
0x54f EXP
0x550 SUB
0x551 SWAP1
0x552 SWAP4
0x553 AND
0x554 DUP4
0x555 MSTORE
0x556 PUSH1 0x20
0x558 DUP4
0x559 ADD
0x55a SWAP2
0x55b SWAP1
0x55c SWAP2
0x55d MSTORE
0x55e ISZERO
0x55f ISZERO
0x560 PUSH1 0x40
0x562 DUP1
0x563 DUP4
0x564 ADD
0x565 SWAP2
0x566 SWAP1
0x567 SWAP2
0x568 MSTORE
0x569 PUSH1 0x60
0x56b SWAP1
0x56c SWAP2
0x56d ADD
0x56e SWAP1
0x56f MLOAD
0x570 DUP1
0x571 SWAP2
0x572 SUB
0x573 SWAP1
0x574 LOG1
0x575 PUSH1 0x0
0x577 PUSH1 0x3
0x579 SSTORE
---
0x523: V476 = 0x0
0x526: V477 = S[0x0]
0x527: V478 = 0x3
0x529: V479 = S[0x3]
0x52a: V480 = 0x0
0x52d: V481 = M[0x0]
0x52e: V482 = 0x20
0x530: V483 = 0x628
0x534: CODECOPY 0x0 0x628 0x20
0x536: V484 = M[0x0]
0x538: M[0x0] = V481
0x53a: V485 = 0x1
0x53c: V486 = 0xa0
0x53e: V487 = 0x2
0x540: V488 = EXP 0x2 0xa0
0x541: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x544: V490 = AND V477 0xffffffffffffffffffffffffffffffffffffffff
0x546: V491 = 0x40
0x548: V492 = M[0x40]
0x549: V493 = 0x1
0x54b: V494 = 0xa0
0x54d: V495 = 0x2
0x54f: V496 = EXP 0x2 0xa0
0x550: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x553: V498 = AND V490 0xffffffffffffffffffffffffffffffffffffffff
0x555: M[V492] = V498
0x556: V499 = 0x20
0x559: V500 = ADD V492 0x20
0x55d: M[V500] = V479
0x55e: V501 = ISZERO 0x0
0x55f: V502 = ISZERO 0x1
0x560: V503 = 0x40
0x564: V504 = ADD V492 0x40
0x568: M[V504] = 0x0
0x569: V505 = 0x60
0x56d: V506 = ADD V492 0x60
0x56f: V507 = M[0x40]
0x572: V508 = SUB V506 V507
0x574: LOG V507 V508 V484
0x575: V509 = 0x0
0x577: V510 = 0x3
0x579: S[0x3] = 0x0
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x57a
[0x57a:0x57a]
---
Predecessors: [0x523]
Successors: [0x57b]
---
0x57a JUMPDEST
---
0x57a: JUMPDEST 
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x57b
[0x57b:0x57b]
---
Predecessors: [0x57a]
Successors: [0x57c]
---
0x57b JUMPDEST
---
0x57b: JUMPDEST 
---
Entry stack: [V10, 0x288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288]

================================

Block 0x57c
[0x57c:0x57d]
---
Predecessors: [0x57b]
Successors: [0x288]
---
0x57c JUMPDEST
0x57d JUMP
---
0x57c: JUMPDEST 
0x57d: JUMP 0x288
---
Entry stack: [V10, 0x288]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x57e
[0x57e:0x58a]
---
Predecessors: [0x3d6]
Successors: [0x58b, 0x58c]
---
0x57e JUMPDEST
0x57f PUSH1 0x7
0x581 DUP1
0x582 SLOAD
0x583 DUP3
0x584 SWAP1
0x585 DUP2
0x586 LT
0x587 PUSH2 0x58c
0x58a JUMPI
---
0x57e: JUMPDEST 
0x57f: V511 = 0x7
0x582: V512 = S[0x7]
0x586: V513 = LT V337 V512
0x587: V514 = 0x58c
0x58a: JUMPI 0x58c V513
---
Entry stack: [V10, 0x3e1, V337]
Stack pops: 1
Stack additions: [S0, 0x7, S0]
Exit stack: [V10, 0x3e1, V337, 0x7, V337]

================================

Block 0x58b
[0x58b:0x58b]
---
Predecessors: [0x57e]
Successors: []
---
0x58b INVALID
---
0x58b: INVALID 
---
Entry stack: [V10, 0x3e1, V337, 0x7, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3e1, V337, 0x7, V337]

================================

Block 0x58c
[0x58c:0x59c]
---
Predecessors: [0x57e]
Successors: [0x59d]
---
0x58c JUMPDEST
0x58d SWAP1
0x58e PUSH1 0x0
0x590 MSTORE
0x591 PUSH1 0x20
0x593 PUSH1 0x0
0x595 SHA3
0x596 SWAP1
0x597 PUSH1 0x2
0x599 MUL
0x59a ADD
0x59b PUSH1 0x0
---
0x58c: JUMPDEST 
0x58e: V515 = 0x0
0x590: M[0x0] = 0x7
0x591: V516 = 0x20
0x593: V517 = 0x0
0x595: V518 = SHA3 0x0 0x20
0x597: V519 = 0x2
0x599: V520 = MUL 0x2 V337
0x59a: V521 = ADD V520 V518
0x59b: V522 = 0x0
---
Entry stack: [V10, 0x3e1, V337, 0x7, V337]
Stack pops: 2
Stack additions: [V521, 0x0]
Exit stack: [V10, 0x3e1, V337, V521, 0x0]

================================

Block 0x59d
[0x59d:0x5b5]
---
Predecessors: [0x58c]
Successors: [0x3e1]
---
0x59d JUMPDEST
0x59e POP
0x59f DUP1
0x5a0 SLOAD
0x5a1 PUSH1 0x1
0x5a3 SWAP1
0x5a4 SWAP2
0x5a5 ADD
0x5a6 SLOAD
0x5a7 PUSH1 0x1
0x5a9 PUSH1 0xa0
0x5ab PUSH1 0x2
0x5ad EXP
0x5ae SUB
0x5af SWAP1
0x5b0 SWAP2
0x5b1 AND
0x5b2 SWAP2
0x5b3 POP
0x5b4 DUP3
0x5b5 JUMP
---
0x59d: JUMPDEST 
0x5a0: V523 = S[V521]
0x5a1: V524 = 0x1
0x5a5: V525 = ADD V521 0x1
0x5a6: V526 = S[V525]
0x5a7: V527 = 0x1
0x5a9: V528 = 0xa0
0x5ab: V529 = 0x2
0x5ad: V530 = EXP 0x2 0xa0
0x5ae: V531 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b1: V532 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x5b5: JUMP 0x3e1
---
Entry stack: [V10, 0x3e1, V337, V521, 0x0]
Stack pops: 4
Stack additions: [S3, V532, V526]
Exit stack: [V10, 0x3e1, V532, V526]

================================

Block 0x5b6
[0x5b6:0x5c3]
---
Predecessors: [0xb5]
Successors: [0x5c4, 0x5e2]
---
0x5b6 JUMPDEST
0x5b7 DUP2
0x5b8 SLOAD
0x5b9 DUP2
0x5ba DUP4
0x5bb SSTORE
0x5bc DUP2
0x5bd DUP2
0x5be ISZERO
0x5bf GT
0x5c0 PUSH2 0x5e2
0x5c3 JUMPI
---
0x5b6: JUMPDEST 
0x5b8: V533 = S[0x7]
0x5bb: S[0x7] = V63
0x5be: V534 = ISZERO V533
0x5bf: V535 = GT V534 V63
0x5c0: V536 = 0x5e2
0x5c3: JUMPI 0x5e2 V535
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63]
Stack pops: 2
Stack additions: [S1, S0, V533]
Exit stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, V533]

================================

Block 0x5c4
[0x5c4:0x5e1]
---
Predecessors: [0x5b6]
Successors: [0x5e8]
---
0x5c4 PUSH1 0x2
0x5c6 MUL
0x5c7 DUP2
0x5c8 PUSH1 0x2
0x5ca MUL
0x5cb DUP4
0x5cc PUSH1 0x0
0x5ce MSTORE
0x5cf PUSH1 0x20
0x5d1 PUSH1 0x0
0x5d3 SHA3
0x5d4 SWAP2
0x5d5 DUP3
0x5d6 ADD
0x5d7 SWAP2
0x5d8 ADD
0x5d9 PUSH2 0x5e2
0x5dc SWAP2
0x5dd SWAP1
0x5de PUSH2 0x5e8
0x5e1 JUMP
---
0x5c4: V537 = 0x2
0x5c6: V538 = MUL 0x2 V533
0x5c8: V539 = 0x2
0x5ca: V540 = MUL 0x2 V63
0x5cc: V541 = 0x0
0x5ce: M[0x0] = 0x7
0x5cf: V542 = 0x20
0x5d1: V543 = 0x0
0x5d3: V544 = SHA3 0x0 0x20
0x5d6: V545 = ADD V544 V538
0x5d8: V546 = ADD V544 V540
0x5d9: V547 = 0x5e2
0x5de: V548 = 0x5e8
0x5e1: JUMP 0x5e8
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, V533]
Stack pops: 3
Stack additions: [S2, S1, 0x5e2, V545, V546]
Exit stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, V545, V546]

================================

Block 0x5e2
[0x5e2:0x5e2]
---
Predecessors: [0x5b6, 0x624]
Successors: [0x5e3]
---
0x5e2 JUMPDEST
---
0x5e2: JUMPDEST 
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, S0]

================================

Block 0x5e3
[0x5e3:0x5e7]
---
Predecessors: [0x5e2]
Successors: [0xe2]
---
0x5e3 JUMPDEST
0x5e4 POP
0x5e5 POP
0x5e6 POP
0x5e7 JUMP
---
0x5e3: JUMPDEST 
0x5e7: JUMP 0xe2
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x288, V42, V47, 0x7, V60]

================================

Block 0x5e8
[0x5e8:0x5ed]
---
Predecessors: [0x5c4]
Successors: [0x5ee]
---
0x5e8 JUMPDEST
0x5e9 PUSH2 0x624
0x5ec SWAP2
0x5ed SWAP1
---
0x5e8: JUMPDEST 
0x5e9: V549 = 0x624
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, V545, V546]
Stack pops: 2
Stack additions: [0x624, S1, S0]
Exit stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, 0x624, V545, V546]

================================

Block 0x5ee
[0x5ee:0x5f6]
---
Predecessors: [0x5e8, 0x5f7]
Successors: [0x5f7, 0x620]
---
0x5ee JUMPDEST
0x5ef DUP1
0x5f0 DUP3
0x5f1 GT
0x5f2 ISZERO
0x5f3 PUSH2 0x620
0x5f6 JUMPI
---
0x5ee: JUMPDEST 
0x5f1: V550 = GT V545 S0
0x5f2: V551 = ISZERO V550
0x5f3: V552 = 0x620
0x5f6: JUMPI 0x620 V551
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, 0x624, V545, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, 0x624, V545, S0]

================================

Block 0x5f7
[0x5f7:0x61f]
---
Predecessors: [0x5ee]
Successors: [0x5ee]
---
0x5f7 DUP1
0x5f8 SLOAD
0x5f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60e NOT
0x60f AND
0x610 DUP2
0x611 SSTORE
0x612 PUSH1 0x0
0x614 PUSH1 0x1
0x616 DUP3
0x617 ADD
0x618 SSTORE
0x619 PUSH1 0x2
0x61b ADD
0x61c PUSH2 0x5ee
0x61f JUMP
---
0x5f8: V553 = S[S0]
0x5f9: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x60e: V555 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x60f: V556 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V553
0x611: S[S0] = V556
0x612: V557 = 0x0
0x614: V558 = 0x1
0x617: V559 = ADD S0 0x1
0x618: S[V559] = 0x0
0x619: V560 = 0x2
0x61b: V561 = ADD 0x2 S0
0x61c: V562 = 0x5ee
0x61f: JUMP 0x5ee
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, 0x624, V545, S0]
Stack pops: 1
Stack additions: [V561]
Exit stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, 0x624, V545, V561]

================================

Block 0x620
[0x620:0x623]
---
Predecessors: [0x5ee]
Successors: [0x624]
---
0x620 JUMPDEST
0x621 POP
0x622 SWAP1
0x623 JUMP
---
0x620: JUMPDEST 
0x623: JUMP 0x624
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, 0x624, V545, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, V545]

================================

Block 0x624
[0x624:0x626]
---
Predecessors: [0x620]
Successors: [0x5e2]
---
0x624 JUMPDEST
0x625 SWAP1
0x626 JUMP
---
0x624: JUMPDEST 
0x626: JUMP 0x5e2
---
Entry stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, 0x5e2, V545]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x288, V42, V47, 0x7, V60, 0xe2, 0x7, V63, V545]

================================

Block 0x627
[0x627:0x680]
---
Predecessors: []
Successors: []
---
0x627 STOP
0x628 MISSING 0xe8
0x629 TIMESTAMP
0x62a MISSING 0xae
0x62b MISSING 0xa7
0x62c MISSING 0xa5
0x62d CALL
0x62e MISSING 0xb0
0x62f LT
0x630 MISSING 0x49
0x631 MISSING 0xd7
0x632 MSTORE
0x633 STOP
0x634 DUP13
0x635 MSTORE8
0x636 MISSING 0xc5
0x637 MISSING 0x28
0x638 SWAP1
0x639 MISSING 0xb1
0x63a MISSING 0xa6
0x63b MISSING 0xda
0x63c MISSING 0xf6
0x63d PUSH1 0xcf
0x63f CODECOPY
0x640 MISSING 0xe8
0x641 MISSING 0xee
0x642 MISSING 0xc5
0x643 MOD
0x644 GT
0x645 MISSING 0x2b
0x646 MISSING 0xbd
0x647 MISSING 0xf6
0x648 LOG1
0x649 PUSH6 0x627a7a723058
0x650 SHA3
0x651 EXTCODECOPY
0x652 CALLVALUE
0x653 PUSH25 0x171257870139c8cff20f947b7eaabb39242b5317fa29c9caaa
0x66d CODECOPY
0x66e PUSH18 0xb3700029
---
0x627: STOP 
0x628: MISSING 0xe8
0x629: V563 = TIMESTAMP
0x62a: MISSING 0xae
0x62b: MISSING 0xa7
0x62c: MISSING 0xa5
0x62d: V564 = CALL S0 S1 S2 S3 S4 S5 S6
0x62e: MISSING 0xb0
0x62f: V565 = LT S0 S1
0x630: MISSING 0x49
0x631: MISSING 0xd7
0x632: M[S0] = S1
0x633: STOP 
0x635: M8[S12] = S0
0x636: MISSING 0xc5
0x637: MISSING 0x28
0x639: MISSING 0xb1
0x63a: MISSING 0xa6
0x63b: MISSING 0xda
0x63c: MISSING 0xf6
0x63d: V566 = 0xcf
0x63f: CODECOPY 0xcf S0 S1
0x640: MISSING 0xe8
0x641: MISSING 0xee
0x642: MISSING 0xc5
0x643: V567 = MOD S0 S1
0x644: V568 = GT V567 S2
0x645: MISSING 0x2b
0x646: MISSING 0xbd
0x647: MISSING 0xf6
0x648: LOG S0 S1 S2
0x649: V569 = 0x627a7a723058
0x650: V570 = SHA3 0x627a7a723058 S3
0x651: EXTCODECOPY V570 S4 S5 S6
0x652: V571 = CALLVALUE
0x653: V572 = 0x171257870139c8cff20f947b7eaabb39242b5317fa29c9caaa
0x66d: CODECOPY 0x171257870139c8cff20f947b7eaabb39242b5317fa29c9caaa V571 S7
0x66e: V573 = 0xb3700029
---
Entry stack: []
Stack pops: 0
Stack additions: [V563, V564, V565, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V568, 0xb3700029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x28a
Exit block: 0x288
Body: 0x288, 0x28a, 0x291, 0x295, 0x403, 0x40d, 0x440, 0x497, 0x498, 0x499, 0x49a

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x29f
Exit block: 0x2b2
Body: 0x29f, 0x2a6, 0x2aa, 0x2b2, 0x49c

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x2c4
Exit block: 0x2d7
Body: 0x2c4, 0x2cb, 0x2cf, 0x2d7, 0x4a2

Function 3:
Public function signature: 0x3c799547
Entry block: 0x2f3
Exit block: 0x2b2
Body: 0x2b2, 0x2f3, 0x2fa, 0x2fe, 0x4b1

Function 4:
Public function signature: 0x6e66f6e9
Entry block: 0x318
Exit block: 0x2d7
Body: 0x2d7, 0x318, 0x31f, 0x323, 0x4b7

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x347
Exit block: 0x2b2
Body: 0x2b2, 0x347, 0x34e, 0x352, 0x4c6

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x36c
Exit block: 0x2b2
Body: 0x2b2, 0x36c, 0x373, 0x377, 0x4cc

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x391
Exit block: 0x2b2
Body: 0x2b2, 0x391, 0x398, 0x39c, 0x4d2

Function 8:
Public function signature: 0xc8f5f526
Entry block: 0x3b6
Exit block: 0x288
Body: 0x288, 0x3b6, 0x3bd, 0x3c1, 0x497, 0x498, 0x499, 0x49a, 0x4d8, 0x4f0, 0x523, 0x57a, 0x57b, 0x57c

Function 9:
Public function signature: 0xdc0d3dff
Entry block: 0x3cb
Exit block: 0x3e1
Body: 0x3cb, 0x3d2, 0x3d6, 0x3e1, 0x57e, 0x58b, 0x58c, 0x59d

Function 10:
Public fallback function
Entry block: 0xa1
Exit block: 0x1db
Body: 0xa1, 0xa5, 0xb5, 0xe2, 0xeb, 0xec, 0xfd, 0x167, 0x168, 0x1ca, 0x1ce, 0x1db, 0x1df, 0x231, 0x284, 0x285, 0x288, 0x5b6, 0x5c4, 0x5e2, 0x5e3, 0x5e8, 0x5ee, 0x5f7, 0x620, 0x624

