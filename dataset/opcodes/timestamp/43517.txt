Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x71]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2d2295ad
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x71
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2d2295ad
0x3b: V13 = EQ V11 0x2d2295ad
0x3c: V14 = 0x71
0x3f: JUMPI 0x71 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x88]
---
0x40 DUP1
0x41 PUSH4 0x733fd8c7
0x46 EQ
0x47 PUSH2 0x88
0x4a JUMPI
---
0x41: V15 = 0x733fd8c7
0x46: V16 = EQ 0x733fd8c7 V11
0x47: V17 = 0x88
0x4a: JUMPI 0x88 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xb9]
---
0x4b DUP1
0x4c PUSH4 0x7803af8c
0x51 EQ
0x52 PUSH2 0xb9
0x55 JUMPI
---
0x4c: V18 = 0x7803af8c
0x51: V19 = EQ 0x7803af8c V11
0x52: V20 = 0xb9
0x55: JUMPI 0xb9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xce]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0xce
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0xce
0x60: JUMPI 0xce V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xe3]
---
0x61 DUP1
0x62 PUSH4 0xf6954379
0x67 EQ
0x68 PUSH2 0xe3
0x6b JUMPI
---
0x62: V24 = 0xf6954379
0x67: V25 = EQ 0xf6954379 V11
0x68: V26 = 0xe3
0x6b: JUMPI 0xe3 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x70]
---
Predecessors: [0x0, 0x61]
Successors: []
---
0x6c JUMPDEST
0x6d PUSH1 0x0
0x6f DUP1
0x70 REVERT
---
0x6c: JUMPDEST 
0x6d: V27 = 0x0
0x70: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x78]
---
Predecessors: [0xd]
Successors: [0x79, 0x7d]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 DUP1
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x71: JUMPDEST 
0x72: V28 = CALLVALUE
0x74: V29 = ISZERO V28
0x75: V30 = 0x7d
0x78: JUMPI 0x7d V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x71]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V31 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7d
[0x7d:0x85]
---
Predecessors: [0x71]
Successors: [0xf8]
---
0x7d JUMPDEST
0x7e POP
0x7f PUSH2 0x86
0x82 PUSH2 0xf8
0x85 JUMP
---
0x7d: JUMPDEST 
0x7f: V32 = 0x86
0x82: V33 = 0xf8
0x85: JUMP 0xf8
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0x86
[0x86:0x87]
---
Predecessors: [0x157]
Successors: []
---
0x86 JUMPDEST
0x87 STOP
---
0x86: JUMPDEST 
0x87: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0x40]
Successors: [0x90, 0x94]
---
0x88 JUMPDEST
0x89 CALLVALUE
0x8a DUP1
0x8b ISZERO
0x8c PUSH2 0x94
0x8f JUMPI
---
0x88: JUMPDEST 
0x89: V34 = CALLVALUE
0x8b: V35 = ISZERO V34
0x8c: V36 = 0x94
0x8f: JUMPI 0x94 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0x90
[0x90:0x93]
---
Predecessors: [0x88]
Successors: []
---
0x90 PUSH1 0x0
0x92 DUP1
0x93 REVERT
---
0x90: V37 = 0x0
0x93: REVERT 0x0 0x0
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0x94
[0x94:0x9c]
---
Predecessors: [0x88]
Successors: [0x15a]
---
0x94 JUMPDEST
0x95 POP
0x96 PUSH2 0x9d
0x99 PUSH2 0x15a
0x9c JUMP
---
0x94: JUMPDEST 
0x96: V38 = 0x9d
0x99: V39 = 0x15a
0x9c: JUMP 0x15a
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: [0x9d]
Exit stack: [V11, 0x9d]

================================

Block 0x9d
[0x9d:0xb8]
---
Predecessors: [0x15a, 0x1d6, 0x1e5]
Successors: []
---
0x9d JUMPDEST
0x9e PUSH1 0x40
0xa0 DUP1
0xa1 MLOAD
0xa2 PUSH1 0x1
0xa4 PUSH1 0xa0
0xa6 PUSH1 0x2
0xa8 EXP
0xa9 SUB
0xaa SWAP1
0xab SWAP3
0xac AND
0xad DUP3
0xae MSTORE
0xaf MLOAD
0xb0 SWAP1
0xb1 DUP2
0xb2 SWAP1
0xb3 SUB
0xb4 PUSH1 0x20
0xb6 ADD
0xb7 SWAP1
0xb8 RETURN
---
0x9d: JUMPDEST 
0x9e: V40 = 0x40
0xa1: V41 = M[0x40]
0xa2: V42 = 0x1
0xa4: V43 = 0xa0
0xa6: V44 = 0x2
0xa8: V45 = EXP 0x2 0xa0
0xa9: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac: V47 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xae: M[V41] = V47
0xaf: V48 = M[0x40]
0xb3: V49 = SUB V41 V48
0xb4: V50 = 0x20
0xb6: V51 = ADD 0x20 V49
0xb8: RETURN V48 V51
---
Entry stack: [V11, 0x9d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x9d]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0x4b]
Successors: [0xc1, 0xc5]
---
0xb9 JUMPDEST
0xba CALLVALUE
0xbb DUP1
0xbc ISZERO
0xbd PUSH2 0xc5
0xc0 JUMPI
---
0xb9: JUMPDEST 
0xba: V52 = CALLVALUE
0xbc: V53 = ISZERO V52
0xbd: V54 = 0xc5
0xc0: JUMPI 0xc5 V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V52]
Exit stack: [V11, V52]

================================

Block 0xc1
[0xc1:0xc4]
---
Predecessors: [0xb9]
Successors: []
---
0xc1 PUSH1 0x0
0xc3 DUP1
0xc4 REVERT
---
0xc1: V55 = 0x0
0xc4: REVERT 0x0 0x0
---
Entry stack: [V11, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V52]

================================

Block 0xc5
[0xc5:0xcd]
---
Predecessors: [0xb9]
Successors: [0x169]
---
0xc5 JUMPDEST
0xc6 POP
0xc7 PUSH2 0x86
0xca PUSH2 0x169
0xcd JUMP
---
0xc5: JUMPDEST 
0xc7: V56 = 0x86
0xca: V57 = 0x169
0xcd: JUMP 0x169
---
Entry stack: [V11, V52]
Stack pops: 1
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0xce
[0xce:0xd5]
---
Predecessors: [0x56]
Successors: [0xd6, 0xda]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 DUP1
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xce: JUMPDEST 
0xcf: V58 = CALLVALUE
0xd1: V59 = ISZERO V58
0xd2: V60 = 0xda
0xd5: JUMPI 0xda V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xce]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V61 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xda
[0xda:0xe2]
---
Predecessors: [0xce]
Successors: [0x1d6]
---
0xda JUMPDEST
0xdb POP
0xdc PUSH2 0x9d
0xdf PUSH2 0x1d6
0xe2 JUMP
---
0xda: JUMPDEST 
0xdc: V62 = 0x9d
0xdf: V63 = 0x1d6
0xe2: JUMP 0x1d6
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0x9d]
Exit stack: [V11, 0x9d]

================================

Block 0xe3
[0xe3:0xea]
---
Predecessors: [0x61]
Successors: [0xeb, 0xef]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 DUP1
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xe3: JUMPDEST 
0xe4: V64 = CALLVALUE
0xe6: V65 = ISZERO V64
0xe7: V66 = 0xef
0xea: JUMPI 0xef V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xe3]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V67 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0xef
[0xef:0xf7]
---
Predecessors: [0xe3]
Successors: [0x1e5]
---
0xef JUMPDEST
0xf0 POP
0xf1 PUSH2 0x9d
0xf4 PUSH2 0x1e5
0xf7 JUMP
---
0xef: JUMPDEST 
0xf1: V68 = 0x9d
0xf4: V69 = 0x1e5
0xf7: JUMP 0x1e5
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x9d]
Exit stack: [V11, 0x9d]

================================

Block 0xf8
[0xf8:0x101]
---
Predecessors: [0x7d]
Successors: [0x102, 0x106]
---
0xf8 JUMPDEST
0xf9 PUSH1 0x0
0xfb ADDRESS
0xfc BALANCE
0xfd GT
0xfe PUSH2 0x106
0x101 JUMPI
---
0xf8: JUMPDEST 
0xf9: V70 = 0x0
0xfb: V71 = ADDRESS
0xfc: V72 = BALANCE V71
0xfd: V73 = GT V72 0x0
0xfe: V74 = 0x106
0x101: JUMPI 0x106 V73
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xf8]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V75 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x106
[0x106:0x118]
---
Predecessors: [0xf8]
Successors: [0x119, 0x11d]
---
0x106 JUMPDEST
0x107 PUSH1 0x0
0x109 SLOAD
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 AND
0x113 CALLER
0x114 EQ
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x106: JUMPDEST 
0x107: V76 = 0x0
0x109: V77 = S[0x0]
0x10a: V78 = 0x1
0x10c: V79 = 0xa0
0x10e: V80 = 0x2
0x110: V81 = EXP 0x2 0xa0
0x111: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x113: V84 = CALLER
0x114: V85 = EQ V84 V83
0x115: V86 = 0x11d
0x118: JUMPI 0x11d V85
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x106]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V87 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x11d
[0x11d:0x14d]
---
Predecessors: [0x106]
Successors: [0x14e, 0x157]
---
0x11d JUMPDEST
0x11e PUSH1 0x2
0x120 SLOAD
0x121 PUSH1 0x40
0x123 MLOAD
0x124 PUSH1 0x1
0x126 PUSH1 0xa0
0x128 PUSH1 0x2
0x12a EXP
0x12b SUB
0x12c SWAP1
0x12d SWAP2
0x12e AND
0x12f SWAP1
0x130 ADDRESS
0x131 BALANCE
0x132 DUP1
0x133 ISZERO
0x134 PUSH2 0x8fc
0x137 MUL
0x138 SWAP2
0x139 PUSH1 0x0
0x13b DUP2
0x13c DUP2
0x13d DUP2
0x13e DUP6
0x13f DUP9
0x140 DUP9
0x141 CALL
0x142 SWAP4
0x143 POP
0x144 POP
0x145 POP
0x146 POP
0x147 ISZERO
0x148 DUP1
0x149 ISZERO
0x14a PUSH2 0x157
0x14d JUMPI
---
0x11d: JUMPDEST 
0x11e: V88 = 0x2
0x120: V89 = S[0x2]
0x121: V90 = 0x40
0x123: V91 = M[0x40]
0x124: V92 = 0x1
0x126: V93 = 0xa0
0x128: V94 = 0x2
0x12a: V95 = EXP 0x2 0xa0
0x12b: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12e: V97 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x130: V98 = ADDRESS
0x131: V99 = BALANCE V98
0x133: V100 = ISZERO V99
0x134: V101 = 0x8fc
0x137: V102 = MUL 0x8fc V100
0x139: V103 = 0x0
0x141: V104 = CALL V102 V97 V99 V91 0x0 V91 0x0
0x147: V105 = ISZERO V104
0x149: V106 = ISZERO V105
0x14a: V107 = 0x157
0x14d: JUMPI 0x157 V106
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V11, 0x86, V105]

================================

Block 0x14e
[0x14e:0x156]
---
Predecessors: [0x11d]
Successors: []
---
0x14e RETURNDATASIZE
0x14f PUSH1 0x0
0x151 DUP1
0x152 RETURNDATACOPY
0x153 RETURNDATASIZE
0x154 PUSH1 0x0
0x156 REVERT
---
0x14e: V108 = RETURNDATASIZE
0x14f: V109 = 0x0
0x152: RETURNDATACOPY 0x0 0x0 V108
0x153: V110 = RETURNDATASIZE
0x154: V111 = 0x0
0x156: REVERT 0x0 V110
---
Entry stack: [V11, 0x86, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86, V105]

================================

Block 0x157
[0x157:0x159]
---
Predecessors: [0x11d, 0x19c]
Successors: [0x86]
---
0x157 JUMPDEST
0x158 POP
0x159 JUMP
---
0x157: JUMPDEST 
0x159: JUMP 0x86
---
Entry stack: [V11, 0x86, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x15a
[0x15a:0x168]
---
Predecessors: [0x94]
Successors: [0x9d]
---
0x15a JUMPDEST
0x15b PUSH1 0x2
0x15d SLOAD
0x15e PUSH1 0x1
0x160 PUSH1 0xa0
0x162 PUSH1 0x2
0x164 EXP
0x165 SUB
0x166 AND
0x167 DUP2
0x168 JUMP
---
0x15a: JUMPDEST 
0x15b: V112 = 0x2
0x15d: V113 = S[0x2]
0x15e: V114 = 0x1
0x160: V115 = 0xa0
0x162: V116 = 0x2
0x164: V117 = EXP 0x2 0xa0
0x165: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x166: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x168: JUMP 0x9d
---
Entry stack: [V11, 0x9d]
Stack pops: 1
Stack additions: [S0, V119]
Exit stack: [V11, 0x9d, V119]

================================

Block 0x169
[0x169:0x172]
---
Predecessors: [0xc5]
Successors: [0x173, 0x177]
---
0x169 JUMPDEST
0x16a PUSH1 0x0
0x16c ADDRESS
0x16d BALANCE
0x16e GT
0x16f PUSH2 0x177
0x172 JUMPI
---
0x169: JUMPDEST 
0x16a: V120 = 0x0
0x16c: V121 = ADDRESS
0x16d: V122 = BALANCE V121
0x16e: V123 = GT V122 0x0
0x16f: V124 = 0x177
0x172: JUMPI 0x177 V123
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x169]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V125 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x177
[0x177:0x189]
---
Predecessors: [0x169]
Successors: [0x18a, 0x18e]
---
0x177 JUMPDEST
0x178 PUSH1 0x0
0x17a SLOAD
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 AND
0x184 CALLER
0x185 EQ
0x186 PUSH2 0x18e
0x189 JUMPI
---
0x177: JUMPDEST 
0x178: V126 = 0x0
0x17a: V127 = S[0x0]
0x17b: V128 = 0x1
0x17d: V129 = 0xa0
0x17f: V130 = 0x2
0x181: V131 = EXP 0x2 0xa0
0x182: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x184: V134 = CALLER
0x185: V135 = EQ V134 V133
0x186: V136 = 0x18e
0x189: JUMPI 0x18e V135
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x18a
[0x18a:0x18d]
---
Predecessors: [0x177]
Successors: []
---
0x18a PUSH1 0x0
0x18c DUP1
0x18d REVERT
---
0x18a: V137 = 0x0
0x18d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x18e
[0x18e:0x197]
---
Predecessors: [0x177]
Successors: [0x198, 0x19c]
---
0x18e JUMPDEST
0x18f PUSH1 0x3
0x191 SLOAD
0x192 TIMESTAMP
0x193 LT
0x194 PUSH2 0x19c
0x197 JUMPI
---
0x18e: JUMPDEST 
0x18f: V138 = 0x3
0x191: V139 = S[0x3]
0x192: V140 = TIMESTAMP
0x193: V141 = LT V140 V139
0x194: V142 = 0x19c
0x197: JUMPI 0x19c V141
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x198
[0x198:0x19b]
---
Predecessors: [0x18e]
Successors: []
---
0x198 PUSH1 0x0
0x19a DUP1
0x19b REVERT
---
0x198: V143 = 0x0
0x19b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x19c
[0x19c:0x1cc]
---
Predecessors: [0x18e]
Successors: [0x157, 0x1cd]
---
0x19c JUMPDEST
0x19d PUSH1 0x1
0x19f SLOAD
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab SWAP1
0x1ac SWAP2
0x1ad AND
0x1ae SWAP1
0x1af ADDRESS
0x1b0 BALANCE
0x1b1 DUP1
0x1b2 ISZERO
0x1b3 PUSH2 0x8fc
0x1b6 MUL
0x1b7 SWAP2
0x1b8 PUSH1 0x0
0x1ba DUP2
0x1bb DUP2
0x1bc DUP2
0x1bd DUP6
0x1be DUP9
0x1bf DUP9
0x1c0 CALL
0x1c1 SWAP4
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 ISZERO
0x1c7 DUP1
0x1c8 ISZERO
0x1c9 PUSH2 0x157
0x1cc JUMPI
---
0x19c: JUMPDEST 
0x19d: V144 = 0x1
0x19f: V145 = S[0x1]
0x1a0: V146 = 0x40
0x1a2: V147 = M[0x40]
0x1a3: V148 = 0x1
0x1a5: V149 = 0xa0
0x1a7: V150 = 0x2
0x1a9: V151 = EXP 0x2 0xa0
0x1aa: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V153 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V154 = ADDRESS
0x1b0: V155 = BALANCE V154
0x1b2: V156 = ISZERO V155
0x1b3: V157 = 0x8fc
0x1b6: V158 = MUL 0x8fc V156
0x1b8: V159 = 0x0
0x1c0: V160 = CALL V158 V153 V155 V147 0x0 V147 0x0
0x1c6: V161 = ISZERO V160
0x1c8: V162 = ISZERO V161
0x1c9: V163 = 0x157
0x1cc: JUMPI 0x157 V162
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: [V161]
Exit stack: [V11, 0x86, V161]

================================

Block 0x1cd
[0x1cd:0x1d5]
---
Predecessors: [0x19c]
Successors: []
---
0x1cd RETURNDATASIZE
0x1ce PUSH1 0x0
0x1d0 DUP1
0x1d1 RETURNDATACOPY
0x1d2 RETURNDATASIZE
0x1d3 PUSH1 0x0
0x1d5 REVERT
---
0x1cd: V164 = RETURNDATASIZE
0x1ce: V165 = 0x0
0x1d1: RETURNDATACOPY 0x0 0x0 V164
0x1d2: V166 = RETURNDATASIZE
0x1d3: V167 = 0x0
0x1d5: REVERT 0x0 V166
---
Entry stack: [V11, 0x86, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86, V161]

================================

Block 0x1d6
[0x1d6:0x1e4]
---
Predecessors: [0xda]
Successors: [0x9d]
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x0
0x1d9 SLOAD
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 AND
0x1e3 DUP2
0x1e4 JUMP
---
0x1d6: JUMPDEST 
0x1d7: V168 = 0x0
0x1d9: V169 = S[0x0]
0x1da: V170 = 0x1
0x1dc: V171 = 0xa0
0x1de: V172 = 0x2
0x1e0: V173 = EXP 0x2 0xa0
0x1e1: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1e4: JUMP 0x9d
---
Entry stack: [V11, 0x9d]
Stack pops: 1
Stack additions: [S0, V175]
Exit stack: [V11, 0x9d, V175]

================================

Block 0x1e5
[0x1e5:0x1f3]
---
Predecessors: [0xef]
Successors: [0x9d]
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x1
0x1e8 SLOAD
0x1e9 PUSH1 0x1
0x1eb PUSH1 0xa0
0x1ed PUSH1 0x2
0x1ef EXP
0x1f0 SUB
0x1f1 AND
0x1f2 DUP2
0x1f3 JUMP
---
0x1e5: JUMPDEST 
0x1e6: V176 = 0x1
0x1e8: V177 = S[0x1]
0x1e9: V178 = 0x1
0x1eb: V179 = 0xa0
0x1ed: V180 = 0x2
0x1ef: V181 = EXP 0x2 0xa0
0x1f0: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f1: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x1f3: JUMP 0x9d
---
Entry stack: [V11, 0x9d]
Stack pops: 1
Stack additions: [S0, V183]
Exit stack: [V11, 0x9d, V183]

================================

Block 0x1f4
[0x1f4:0x21f]
---
Predecessors: []
Successors: []
---
0x1f4 STOP
0x1f5 LOG1
0x1f6 PUSH6 0x627a7a723058
0x1fd SHA3
0x1fe DUP13
0x1ff MISSING 0xba
0x200 MISSING 0xb2
0x201 SHL
0x202 DUP5
0x203 MISSING 0xfb
0x204 EXTCODECOPY
0x205 MISSING 0x5f
0x206 SWAP14
0x207 PUSH12 0x3173fdff58f77b28789a943f
0x214 NUMBER
0x215 MISSING 0x2e
0x216 MISSING 0xd0
0x217 MISSING 0x5e
0x218 DUP9
0x219 MISSING 0x22
0x21a SWAP3
0x21b MISSING 0xf7
0x21c CALL
0x21d MISSING 0x5c
0x21e STOP
0x21f MISSING 0x29
---
0x1f4: STOP 
0x1f5: LOG S0 S1 S2
0x1f6: V184 = 0x627a7a723058
0x1fd: V185 = SHA3 0x627a7a723058 S3
0x1ff: MISSING 0xba
0x200: MISSING 0xb2
0x201: V186 = SHL S0 S1
0x203: MISSING 0xfb
0x204: EXTCODECOPY S0 S1 S2 S3
0x205: MISSING 0x5f
0x207: V187 = 0x3173fdff58f77b28789a943f
0x214: V188 = NUMBER
0x215: MISSING 0x2e
0x216: MISSING 0xd0
0x217: MISSING 0x5e
0x219: MISSING 0x22
0x21b: MISSING 0xf7
0x21c: V189 = CALL S0 S1 S2 S3 S4 S5 S6
0x21d: MISSING 0x5c
0x21e: STOP 
0x21f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, V185, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S5, V186, S2, S3, S4, S5, V188, 0x3173fdff58f77b28789a943f, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, S3, S1, S2, S0, V189]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d2295ad
Entry block: 0x71
Exit block: 0x86
Body: 0x71, 0x79, 0x7d, 0x86, 0xf8, 0x102, 0x106, 0x119, 0x11d, 0x14e, 0x157

Function 1:
Public function signature: 0x733fd8c7
Entry block: 0x88
Exit block: 0x9d
Body: 0x88, 0x90, 0x94, 0x9d, 0x15a

Function 2:
Public function signature: 0x7803af8c
Entry block: 0xb9
Exit block: 0x86
Body: 0x86, 0xb9, 0xc1, 0xc5, 0x157, 0x169, 0x173, 0x177, 0x18a, 0x18e, 0x198, 0x19c, 0x1cd

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xce
Exit block: 0x9d
Body: 0x9d, 0xce, 0xd6, 0xda, 0x1d6

Function 4:
Public function signature: 0xf6954379
Entry block: 0xe3
Exit block: 0x9d
Body: 0x9d, 0xe3, 0xeb, 0xef, 0x1e5

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

