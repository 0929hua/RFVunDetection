args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/8/107803.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x1cf]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x1cf
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x1cf
0x40: JUMPI 0x1cf V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x1e4]
---
0x41 DUP1
0x42 PUSH4 0x3dc1579a
0x47 EQ
0x48 PUSH2 0x1e4
0x4b JUMPI
---
0x42: V15 = 0x3dc1579a
0x47: V16 = EQ 0x3dc1579a V11
0x48: V17 = 0x1e4
0x4b: JUMPI 0x1e4 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x20d]
---
0x4c DUP1
0x4d PUSH4 0xe1254fba
0x52 EQ
0x53 PUSH2 0x20d
0x56 JUMPI
---
0x4d: V18 = 0xe1254fba
0x52: V19 = EQ 0xe1254fba V11
0x53: V20 = 0x20d
0x56: JUMPI 0x20d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x62]
---
Predecessors: [0x0, 0x4c]
Successors: [0x63, 0x67]
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b CALLVALUE
0x5c GT
0x5d ISZERO
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: V22 = CALLVALUE
0x5c: V23 = GT V22 0x0
0x5d: V24 = ISZERO V23
0x5e: V25 = ISZERO V24
0x5f: V26 = 0x67
0x62: JUMPI 0x67 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x57]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V27 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x67
[0x67:0xb2]
---
Predecessors: [0x57]
Successors: [0xb3, 0x129]
---
0x67 JUMPDEST
0x68 PUSH1 0x0
0x6a PUSH1 0x1
0x6c PUSH1 0x0
0x6e CALLER
0x6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84 AND
0x85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a AND
0x9b DUP2
0x9c MSTORE
0x9d PUSH1 0x20
0x9f ADD
0xa0 SWAP1
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 PUSH1 0x0
0xa8 SHA3
0xa9 PUSH1 0x1
0xab ADD
0xac SLOAD
0xad EQ
0xae ISZERO
0xaf PUSH2 0x129
0xb2 JUMPI
---
0x67: JUMPDEST 
0x68: V28 = 0x0
0x6a: V29 = 0x1
0x6c: V30 = 0x0
0x6e: V31 = CALLER
0x6f: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x84: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x85: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x9c: M[0x0] = V35
0x9d: V36 = 0x20
0x9f: V37 = ADD 0x20 0x0
0xa2: M[0x20] = 0x1
0xa3: V38 = 0x20
0xa5: V39 = ADD 0x20 0x20
0xa6: V40 = 0x0
0xa8: V41 = SHA3 0x0 0x40
0xa9: V42 = 0x1
0xab: V43 = ADD 0x1 V41
0xac: V44 = S[V43]
0xad: V45 = EQ V44 0x0
0xae: V46 = ISZERO V45
0xaf: V47 = 0x129
0xb2: JUMPI 0x129 V46
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xb3
[0xb3:0x128]
---
Predecessors: [0x67]
Successors: [0x1cc]
---
0xb3 PUSH1 0x0
0xb5 SLOAD
0xb6 TIMESTAMP
0xb7 ADD
0xb8 SWAP1
0xb9 POP
0xba PUSH1 0x40
0xbc DUP1
0xbd MLOAD
0xbe SWAP1
0xbf DUP2
0xc0 ADD
0xc1 PUSH1 0x40
0xc3 MSTORE
0xc4 DUP1
0xc5 CALLVALUE
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca ADD
0xcb DUP3
0xcc DUP2
0xcd MSTORE
0xce POP
0xcf PUSH1 0x1
0xd1 PUSH1 0x0
0xd3 CALLER
0xd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9 AND
0xea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff AND
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 ADD
0x105 SWAP1
0x106 DUP2
0x107 MSTORE
0x108 PUSH1 0x20
0x10a ADD
0x10b PUSH1 0x0
0x10d SHA3
0x10e PUSH1 0x0
0x110 DUP3
0x111 ADD
0x112 MLOAD
0x113 DUP2
0x114 PUSH1 0x0
0x116 ADD
0x117 SSTORE
0x118 PUSH1 0x20
0x11a DUP3
0x11b ADD
0x11c MLOAD
0x11d DUP2
0x11e PUSH1 0x1
0x120 ADD
0x121 SSTORE
0x122 SWAP1
0x123 POP
0x124 POP
0x125 PUSH2 0x1cc
0x128 JUMP
---
0xb3: V48 = 0x0
0xb5: V49 = S[0x0]
0xb6: V50 = TIMESTAMP
0xb7: V51 = ADD V50 V49
0xba: V52 = 0x40
0xbd: V53 = M[0x40]
0xc0: V54 = ADD V53 0x40
0xc1: V55 = 0x40
0xc3: M[0x40] = V54
0xc5: V56 = CALLVALUE
0xc7: M[V53] = V56
0xc8: V57 = 0x20
0xca: V58 = ADD 0x20 V53
0xcd: M[V58] = V51
0xcf: V59 = 0x1
0xd1: V60 = 0x0
0xd3: V61 = CALLER
0xd4: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xea: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xff: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x101: M[0x0] = V65
0x102: V66 = 0x20
0x104: V67 = ADD 0x20 0x0
0x107: M[0x20] = 0x1
0x108: V68 = 0x20
0x10a: V69 = ADD 0x20 0x20
0x10b: V70 = 0x0
0x10d: V71 = SHA3 0x0 0x40
0x10e: V72 = 0x0
0x111: V73 = ADD V53 0x0
0x112: V74 = M[V73]
0x114: V75 = 0x0
0x116: V76 = ADD 0x0 V71
0x117: S[V76] = V74
0x118: V77 = 0x20
0x11b: V78 = ADD V53 0x20
0x11c: V79 = M[V78]
0x11e: V80 = 0x1
0x120: V81 = ADD 0x1 V71
0x121: S[V81] = V79
0x125: V82 = 0x1cc
0x128: JUMP 0x1cc
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V51]
Exit stack: [V11, V51]

================================

Block 0x129
[0x129:0x1cb]
---
Predecessors: [0x67]
Successors: [0x1cc]
---
0x129 JUMPDEST
0x12a CALLVALUE
0x12b PUSH1 0x1
0x12d PUSH1 0x0
0x12f CALLER
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP1
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 PUSH1 0x0
0x169 SHA3
0x16a PUSH1 0x0
0x16c ADD
0x16d PUSH1 0x0
0x16f DUP3
0x170 DUP3
0x171 SLOAD
0x172 ADD
0x173 SWAP3
0x174 POP
0x175 POP
0x176 DUP2
0x177 SWAP1
0x178 SSTORE
0x179 POP
0x17a PUSH1 0x0
0x17c SLOAD
0x17d PUSH1 0x1
0x17f PUSH1 0x0
0x181 CALLER
0x182 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x197 AND
0x198 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ad AND
0x1ae DUP2
0x1af MSTORE
0x1b0 PUSH1 0x20
0x1b2 ADD
0x1b3 SWAP1
0x1b4 DUP2
0x1b5 MSTORE
0x1b6 PUSH1 0x20
0x1b8 ADD
0x1b9 PUSH1 0x0
0x1bb SHA3
0x1bc PUSH1 0x1
0x1be ADD
0x1bf PUSH1 0x0
0x1c1 DUP3
0x1c2 DUP3
0x1c3 SLOAD
0x1c4 ADD
0x1c5 SWAP3
0x1c6 POP
0x1c7 POP
0x1c8 DUP2
0x1c9 SWAP1
0x1ca SSTORE
0x1cb POP
---
0x129: JUMPDEST 
0x12a: V83 = CALLVALUE
0x12b: V84 = 0x1
0x12d: V85 = 0x0
0x12f: V86 = CALLER
0x130: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x146: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x15d: M[0x0] = V90
0x15e: V91 = 0x20
0x160: V92 = ADD 0x20 0x0
0x163: M[0x20] = 0x1
0x164: V93 = 0x20
0x166: V94 = ADD 0x20 0x20
0x167: V95 = 0x0
0x169: V96 = SHA3 0x0 0x40
0x16a: V97 = 0x0
0x16c: V98 = ADD 0x0 V96
0x16d: V99 = 0x0
0x171: V100 = S[V98]
0x172: V101 = ADD V100 V83
0x178: S[V98] = V101
0x17a: V102 = 0x0
0x17c: V103 = S[0x0]
0x17d: V104 = 0x1
0x17f: V105 = 0x0
0x181: V106 = CALLER
0x182: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x197: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x198: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1af: M[0x0] = V110
0x1b0: V111 = 0x20
0x1b2: V112 = ADD 0x20 0x0
0x1b5: M[0x20] = 0x1
0x1b6: V113 = 0x20
0x1b8: V114 = ADD 0x20 0x20
0x1b9: V115 = 0x0
0x1bb: V116 = SHA3 0x0 0x40
0x1bc: V117 = 0x1
0x1be: V118 = ADD 0x1 V116
0x1bf: V119 = 0x0
0x1c3: V120 = S[V118]
0x1c4: V121 = ADD V120 V103
0x1ca: S[V118] = V121
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x1cc
[0x1cc:0x1ce]
---
Predecessors: [0xb3, 0x129]
Successors: []
---
0x1cc JUMPDEST
0x1cd POP
0x1ce STOP
---
0x1cc: JUMPDEST 
0x1ce: STOP 
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0xd]
Successors: [0x1d6, 0x1da]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V122 = CALLVALUE
0x1d1: V123 = ISZERO V122
0x1d2: V124 = 0x1da
0x1d5: JUMPI 0x1da V123
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V125 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1da
[0x1da:0x1e1]
---
Predecessors: [0x1cf]
Successors: [0x261]
---
0x1da JUMPDEST
0x1db PUSH2 0x1e2
0x1de PUSH2 0x261
0x1e1 JUMP
---
0x1da: JUMPDEST 
0x1db: V126 = 0x1e2
0x1de: V127 = 0x261
0x1e1: JUMP 0x261
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1e2]
Exit stack: [V11, 0x1e2]

================================

Block 0x1e2
[0x1e2:0x1e3]
---
Predecessors: [0x384]
Successors: []
---
0x1e2 JUMPDEST
0x1e3 STOP
---
0x1e2: JUMPDEST 
0x1e3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x41]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V128 = CALLVALUE
0x1e6: V129 = ISZERO V128
0x1e7: V130 = 0x1ef
0x1ea: JUMPI 0x1ef V129
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V131 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x1e4]
Successors: [0x416]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0x1f7
0x1f3 PUSH2 0x416
0x1f6 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V132 = 0x1f7
0x1f3: V133 = 0x416
0x1f6: JUMP 0x416
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1f7]
Exit stack: [V11, 0x1f7]

================================

Block 0x1f7
[0x1f7:0x20c]
---
Predecessors: [0x416]
Successors: []
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc DUP3
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP2
0x203 POP
0x204 POP
0x205 PUSH1 0x40
0x207 MLOAD
0x208 DUP1
0x209 SWAP2
0x20a SUB
0x20b SWAP1
0x20c RETURN
---
0x1f7: JUMPDEST 
0x1f8: V134 = 0x40
0x1fa: V135 = M[0x40]
0x1fe: M[V135] = V272
0x1ff: V136 = 0x20
0x201: V137 = ADD 0x20 V135
0x205: V138 = 0x40
0x207: V139 = M[0x40]
0x20a: V140 = SUB V137 V139
0x20c: RETURN V139 V140
---
Entry stack: [V11, 0x1f7, V272]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1f7]

================================

Block 0x20d
[0x20d:0x213]
---
Predecessors: [0x4c]
Successors: [0x214, 0x218]
---
0x20d JUMPDEST
0x20e CALLVALUE
0x20f ISZERO
0x210 PUSH2 0x218
0x213 JUMPI
---
0x20d: JUMPDEST 
0x20e: V141 = CALLVALUE
0x20f: V142 = ISZERO V141
0x210: V143 = 0x218
0x213: JUMPI 0x218 V142
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x214
[0x214:0x217]
---
Predecessors: [0x20d]
Successors: []
---
0x214 PUSH1 0x0
0x216 DUP1
0x217 REVERT
---
0x214: V144 = 0x0
0x217: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x218
[0x218:0x243]
---
Predecessors: [0x20d]
Successors: [0x41c]
---
0x218 JUMPDEST
0x219 PUSH2 0x244
0x21c PUSH1 0x4
0x21e DUP1
0x21f DUP1
0x220 CALLDATALOAD
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 SWAP1
0x238 PUSH1 0x20
0x23a ADD
0x23b SWAP1
0x23c SWAP2
0x23d SWAP1
0x23e POP
0x23f POP
0x240 PUSH2 0x41c
0x243 JUMP
---
0x218: JUMPDEST 
0x219: V145 = 0x244
0x21c: V146 = 0x4
0x220: V147 = CALLDATALOAD 0x4
0x221: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x238: V150 = 0x20
0x23a: V151 = ADD 0x20 0x4
0x240: V152 = 0x41c
0x243: JUMP 0x41c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x244, V149]
Exit stack: [V11, 0x244, V149]

================================

Block 0x244
[0x244:0x260]
---
Predecessors: [0x41c]
Successors: []
---
0x244 JUMPDEST
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 DUP4
0x24a DUP2
0x24b MSTORE
0x24c PUSH1 0x20
0x24e ADD
0x24f DUP3
0x250 DUP2
0x251 MSTORE
0x252 PUSH1 0x20
0x254 ADD
0x255 SWAP3
0x256 POP
0x257 POP
0x258 POP
0x259 PUSH1 0x40
0x25b MLOAD
0x25c DUP1
0x25d SWAP2
0x25e SUB
0x25f SWAP1
0x260 RETURN
---
0x244: JUMPDEST 
0x245: V153 = 0x40
0x247: V154 = M[0x40]
0x24b: M[V154] = V288
0x24c: V155 = 0x20
0x24e: V156 = ADD 0x20 V154
0x251: M[V156] = V303
0x252: V157 = 0x20
0x254: V158 = ADD 0x20 V156
0x259: V159 = 0x40
0x25b: V160 = M[0x40]
0x25e: V161 = SUB V158 V160
0x260: RETURN V160 V161
---
Entry stack: [V11, V288, V303]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x261
[0x261:0x2ad]
---
Predecessors: [0x1da]
Successors: [0x2ae, 0x2b2]
---
0x261 JUMPDEST
0x262 PUSH1 0x0
0x264 PUSH1 0x1
0x266 PUSH1 0x0
0x268 CALLER
0x269 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27e AND
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 DUP2
0x296 MSTORE
0x297 PUSH1 0x20
0x299 ADD
0x29a SWAP1
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x20
0x29f ADD
0x2a0 PUSH1 0x0
0x2a2 SHA3
0x2a3 PUSH1 0x0
0x2a5 ADD
0x2a6 SLOAD
0x2a7 GT
0x2a8 ISZERO
0x2a9 ISZERO
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x261: JUMPDEST 
0x262: V162 = 0x0
0x264: V163 = 0x1
0x266: V164 = 0x0
0x268: V165 = CALLER
0x269: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x27e: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x27f: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x296: M[0x0] = V169
0x297: V170 = 0x20
0x299: V171 = ADD 0x20 0x0
0x29c: M[0x20] = 0x1
0x29d: V172 = 0x20
0x29f: V173 = ADD 0x20 0x20
0x2a0: V174 = 0x0
0x2a2: V175 = SHA3 0x0 0x40
0x2a3: V176 = 0x0
0x2a5: V177 = ADD 0x0 V175
0x2a6: V178 = S[V177]
0x2a7: V179 = GT V178 0x0
0x2a8: V180 = ISZERO V179
0x2a9: V181 = ISZERO V180
0x2aa: V182 = 0x2b2
0x2ad: JUMPI 0x2b2 V181
---
Entry stack: [V11, 0x1e2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x261]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V183 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2]

================================

Block 0x2b2
[0x2b2:0x2fd]
---
Predecessors: [0x261]
Successors: [0x2fe, 0x302]
---
0x2b2 JUMPDEST
0x2b3 TIMESTAMP
0x2b4 PUSH1 0x1
0x2b6 PUSH1 0x0
0x2b8 CALLER
0x2b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ce AND
0x2cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e4 AND
0x2e5 DUP2
0x2e6 MSTORE
0x2e7 PUSH1 0x20
0x2e9 ADD
0x2ea SWAP1
0x2eb DUP2
0x2ec MSTORE
0x2ed PUSH1 0x20
0x2ef ADD
0x2f0 PUSH1 0x0
0x2f2 SHA3
0x2f3 PUSH1 0x1
0x2f5 ADD
0x2f6 SLOAD
0x2f7 LT
0x2f8 ISZERO
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V184 = TIMESTAMP
0x2b4: V185 = 0x1
0x2b6: V186 = 0x0
0x2b8: V187 = CALLER
0x2b9: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x2cf: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x2e6: M[0x0] = V191
0x2e7: V192 = 0x20
0x2e9: V193 = ADD 0x20 0x0
0x2ec: M[0x20] = 0x1
0x2ed: V194 = 0x20
0x2ef: V195 = ADD 0x20 0x20
0x2f0: V196 = 0x0
0x2f2: V197 = SHA3 0x0 0x40
0x2f3: V198 = 0x1
0x2f5: V199 = ADD 0x1 V197
0x2f6: V200 = S[V199]
0x2f7: V201 = LT V200 V184
0x2f8: V202 = ISZERO V201
0x2f9: V203 = ISZERO V202
0x2fa: V204 = 0x302
0x2fd: JUMPI 0x302 V203
---
Entry stack: [V11, 0x1e2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2b2]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V205 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2]

================================

Block 0x302
[0x302:0x37f]
---
Predecessors: [0x2b2]
Successors: [0x380, 0x384]
---
0x302 JUMPDEST
0x303 CALLER
0x304 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x319 AND
0x31a PUSH2 0x8fc
0x31d PUSH1 0x1
0x31f PUSH1 0x0
0x321 CALLER
0x322 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x337 AND
0x338 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34d AND
0x34e DUP2
0x34f MSTORE
0x350 PUSH1 0x20
0x352 ADD
0x353 SWAP1
0x354 DUP2
0x355 MSTORE
0x356 PUSH1 0x20
0x358 ADD
0x359 PUSH1 0x0
0x35b SHA3
0x35c PUSH1 0x0
0x35e ADD
0x35f SLOAD
0x360 SWAP1
0x361 DUP2
0x362 ISZERO
0x363 MUL
0x364 SWAP1
0x365 PUSH1 0x40
0x367 MLOAD
0x368 PUSH1 0x0
0x36a PUSH1 0x40
0x36c MLOAD
0x36d DUP1
0x36e DUP4
0x36f SUB
0x370 DUP2
0x371 DUP6
0x372 DUP9
0x373 DUP9
0x374 CALL
0x375 SWAP4
0x376 POP
0x377 POP
0x378 POP
0x379 POP
0x37a ISZERO
0x37b ISZERO
0x37c PUSH2 0x384
0x37f JUMPI
---
0x302: JUMPDEST 
0x303: V206 = CALLER
0x304: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x319: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x31a: V209 = 0x8fc
0x31d: V210 = 0x1
0x31f: V211 = 0x0
0x321: V212 = CALLER
0x322: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x337: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x338: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x34d: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x34f: M[0x0] = V216
0x350: V217 = 0x20
0x352: V218 = ADD 0x20 0x0
0x355: M[0x20] = 0x1
0x356: V219 = 0x20
0x358: V220 = ADD 0x20 0x20
0x359: V221 = 0x0
0x35b: V222 = SHA3 0x0 0x40
0x35c: V223 = 0x0
0x35e: V224 = ADD 0x0 V222
0x35f: V225 = S[V224]
0x362: V226 = ISZERO V225
0x363: V227 = MUL V226 0x8fc
0x365: V228 = 0x40
0x367: V229 = M[0x40]
0x368: V230 = 0x0
0x36a: V231 = 0x40
0x36c: V232 = M[0x40]
0x36f: V233 = SUB V229 V232
0x374: V234 = CALL V227 V208 V225 V232 V233 V232 0x0
0x37a: V235 = ISZERO V234
0x37b: V236 = ISZERO V235
0x37c: V237 = 0x384
0x37f: JUMPI 0x384 V236
---
Entry stack: [V11, 0x1e2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x302]
Successors: []
---
0x380 PUSH1 0x0
0x382 DUP1
0x383 REVERT
---
0x380: V238 = 0x0
0x383: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2]

================================

Block 0x384
[0x384:0x415]
---
Predecessors: [0x302]
Successors: [0x1e2]
---
0x384 JUMPDEST
0x385 PUSH1 0x0
0x387 PUSH1 0x1
0x389 PUSH1 0x0
0x38b CALLER
0x38c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a1 AND
0x3a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b7 AND
0x3b8 DUP2
0x3b9 MSTORE
0x3ba PUSH1 0x20
0x3bc ADD
0x3bd SWAP1
0x3be DUP2
0x3bf MSTORE
0x3c0 PUSH1 0x20
0x3c2 ADD
0x3c3 PUSH1 0x0
0x3c5 SHA3
0x3c6 PUSH1 0x0
0x3c8 ADD
0x3c9 DUP2
0x3ca SWAP1
0x3cb SSTORE
0x3cc POP
0x3cd PUSH1 0x0
0x3cf PUSH1 0x1
0x3d1 PUSH1 0x0
0x3d3 CALLER
0x3d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e9 AND
0x3ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ff AND
0x400 DUP2
0x401 MSTORE
0x402 PUSH1 0x20
0x404 ADD
0x405 SWAP1
0x406 DUP2
0x407 MSTORE
0x408 PUSH1 0x20
0x40a ADD
0x40b PUSH1 0x0
0x40d SHA3
0x40e PUSH1 0x1
0x410 ADD
0x411 DUP2
0x412 SWAP1
0x413 SSTORE
0x414 POP
0x415 JUMP
---
0x384: JUMPDEST 
0x385: V239 = 0x0
0x387: V240 = 0x1
0x389: V241 = 0x0
0x38b: V242 = CALLER
0x38c: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x3a2: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x3b9: M[0x0] = V246
0x3ba: V247 = 0x20
0x3bc: V248 = ADD 0x20 0x0
0x3bf: M[0x20] = 0x1
0x3c0: V249 = 0x20
0x3c2: V250 = ADD 0x20 0x20
0x3c3: V251 = 0x0
0x3c5: V252 = SHA3 0x0 0x40
0x3c6: V253 = 0x0
0x3c8: V254 = ADD 0x0 V252
0x3cb: S[V254] = 0x0
0x3cd: V255 = 0x0
0x3cf: V256 = 0x1
0x3d1: V257 = 0x0
0x3d3: V258 = CALLER
0x3d4: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x3ea: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x401: M[0x0] = V262
0x402: V263 = 0x20
0x404: V264 = ADD 0x20 0x0
0x407: M[0x20] = 0x1
0x408: V265 = 0x20
0x40a: V266 = ADD 0x20 0x20
0x40b: V267 = 0x0
0x40d: V268 = SHA3 0x0 0x40
0x40e: V269 = 0x1
0x410: V270 = ADD 0x1 V268
0x413: S[V270] = 0x0
0x415: JUMP 0x1e2
---
Entry stack: [V11, 0x1e2]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x416
[0x416:0x41b]
---
Predecessors: [0x1ef]
Successors: [0x1f7]
---
0x416 JUMPDEST
0x417 PUSH1 0x0
0x419 SLOAD
0x41a DUP2
0x41b JUMP
---
0x416: JUMPDEST 
0x417: V271 = 0x0
0x419: V272 = S[0x0]
0x41b: JUMP 0x1f7
---
Entry stack: [V11, 0x1f7]
Stack pops: 1
Stack additions: [S0, V272]
Exit stack: [V11, 0x1f7, V272]

================================

Block 0x41c
[0x41c:0x4ad]
---
Predecessors: [0x218]
Successors: [0x244]
---
0x41c JUMPDEST
0x41d PUSH1 0x0
0x41f DUP1
0x420 PUSH1 0x1
0x422 PUSH1 0x0
0x424 DUP5
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 DUP2
0x452 MSTORE
0x453 PUSH1 0x20
0x455 ADD
0x456 SWAP1
0x457 DUP2
0x458 MSTORE
0x459 PUSH1 0x20
0x45b ADD
0x45c PUSH1 0x0
0x45e SHA3
0x45f PUSH1 0x0
0x461 ADD
0x462 SLOAD
0x463 PUSH1 0x1
0x465 PUSH1 0x0
0x467 DUP6
0x468 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47d AND
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 AND
0x494 DUP2
0x495 MSTORE
0x496 PUSH1 0x20
0x498 ADD
0x499 SWAP1
0x49a DUP2
0x49b MSTORE
0x49c PUSH1 0x20
0x49e ADD
0x49f PUSH1 0x0
0x4a1 SHA3
0x4a2 PUSH1 0x1
0x4a4 ADD
0x4a5 SLOAD
0x4a6 SWAP2
0x4a7 POP
0x4a8 SWAP2
0x4a9 POP
0x4aa SWAP2
0x4ab POP
0x4ac SWAP2
0x4ad JUMP
---
0x41c: JUMPDEST 
0x41d: V273 = 0x0
0x420: V274 = 0x1
0x422: V275 = 0x0
0x425: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x43b: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x452: M[0x0] = V279
0x453: V280 = 0x20
0x455: V281 = ADD 0x20 0x0
0x458: M[0x20] = 0x1
0x459: V282 = 0x20
0x45b: V283 = ADD 0x20 0x20
0x45c: V284 = 0x0
0x45e: V285 = SHA3 0x0 0x40
0x45f: V286 = 0x0
0x461: V287 = ADD 0x0 V285
0x462: V288 = S[V287]
0x463: V289 = 0x1
0x465: V290 = 0x0
0x468: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x47d: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x47e: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x495: M[0x0] = V294
0x496: V295 = 0x20
0x498: V296 = ADD 0x20 0x0
0x49b: M[0x20] = 0x1
0x49c: V297 = 0x20
0x49e: V298 = ADD 0x20 0x20
0x49f: V299 = 0x0
0x4a1: V300 = SHA3 0x0 0x40
0x4a2: V301 = 0x1
0x4a4: V302 = ADD 0x1 V300
0x4a5: V303 = S[V302]
0x4ad: JUMP 0x244
---
Entry stack: [V11, 0x244, V149]
Stack pops: 2
Stack additions: [V288, V303]
Exit stack: [V11, V288, V303]

================================

Block 0x4ae
[0x4ae:0x4d9]
---
Predecessors: []
Successors: []
---
0x4ae STOP
0x4af LOG1
0x4b0 PUSH6 0x627a7a723058
0x4b7 SHA3
0x4b8 PUSH18 0xc10598b7c389295093a60b30b2d8d9a6b508
0x4cb MISSING 0xb7
0x4cc SWAP10
0x4cd MISSING 0xdd
0x4ce PUSH6 0x51de81550a72
0x4d5 SWAP1
0x4d6 MISSING 0xfc
0x4d7 OR
0x4d8 STOP
0x4d9 MISSING 0x29
---
0x4ae: STOP 
0x4af: LOG S0 S1 S2
0x4b0: V304 = 0x627a7a723058
0x4b7: V305 = SHA3 0x627a7a723058 S3
0x4b8: V306 = 0xc10598b7c389295093a60b30b2d8d9a6b508
0x4cb: MISSING 0xb7
0x4cd: MISSING 0xdd
0x4ce: V307 = 0x51de81550a72
0x4d6: MISSING 0xfc
0x4d7: V308 = OR S0 S1
0x4d8: STOP 
0x4d9: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc10598b7c389295093a60b30b2d8d9a6b508, V305, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, S0, 0x51de81550a72, V308]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x1cf
Exit block: 0x1e2
Body: 0x1cf, 0x1d6, 0x1da, 0x1e2, 0x261, 0x2ae, 0x2b2, 0x2fe, 0x302, 0x380, 0x384

Function 1:
Public function signature: 0x3dc1579a
Entry block: 0x1e4
Exit block: 0x1f7
Body: 0x1e4, 0x1eb, 0x1ef, 0x1f7, 0x416

Function 2:
Public function signature: 0xe1254fba
Entry block: 0x20d
Exit block: 0x244
Body: 0x20d, 0x214, 0x218, 0x244, 0x41c

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x1cc
Body: 0x57, 0x63, 0x67, 0xb3, 0x129, 0x1cc

