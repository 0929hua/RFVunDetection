Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xbd]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3b9c67e1
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xbd
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3b9c67e1
0x3b: V13 = EQ V11 0x3b9c67e1
0x3c: V14 = 0xbd
0x3f: JUMPI 0xbd V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xcd]
---
0x40 DUP1
0x41 PUSH4 0x5d200f84
0x46 EQ
0x47 PUSH2 0xcd
0x4a JUMPI
---
0x41: V15 = 0x5d200f84
0x46: V16 = EQ 0x5d200f84 V11
0x47: V17 = 0xcd
0x4a: JUMPI 0xcd V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x108]
---
0x4b DUP1
0x4c PUSH4 0x6ce768dd
0x51 EQ
0x52 PUSH2 0x108
0x55 JUMPI
---
0x4c: V18 = 0x6ce768dd
0x51: V19 = EQ 0x6ce768dd V11
0x52: V20 = 0x108
0x55: JUMPI 0x108 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x16d]
---
0x56 DUP1
0x57 PUSH4 0x884ca7b1
0x5c EQ
0x5d PUSH2 0x16d
0x60 JUMPI
---
0x57: V21 = 0x884ca7b1
0x5c: V22 = EQ 0x884ca7b1 V11
0x5d: V23 = 0x16d
0x60: JUMPI 0x16d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x194]
---
0x61 DUP1
0x62 PUSH4 0x8ed8067e
0x67 EQ
0x68 PUSH2 0x194
0x6b JUMPI
---
0x62: V24 = 0x8ed8067e
0x67: V25 = EQ 0x8ed8067e V11
0x68: V26 = 0x194
0x6b: JUMPI 0x194 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x19c]
---
0x6c DUP1
0x6d PUSH4 0xb3c49c77
0x72 EQ
0x73 PUSH2 0x19c
0x76 JUMPI
---
0x6d: V27 = 0xb3c49c77
0x72: V28 = EQ 0xb3c49c77 V11
0x73: V29 = 0x19c
0x76: JUMPI 0x19c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1d6]
---
0x77 DUP1
0x78 PUSH4 0xbb4d7363
0x7d EQ
0x7e PUSH2 0x1d6
0x81 JUMPI
---
0x78: V30 = 0xbb4d7363
0x7d: V31 = EQ 0xbb4d7363 V11
0x7e: V32 = 0x1d6
0x81: JUMPI 0x1d6 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1f7]
---
0x82 DUP1
0x83 PUSH4 0xc885bc58
0x88 EQ
0x89 PUSH2 0x1f7
0x8c JUMPI
---
0x83: V33 = 0xc885bc58
0x88: V34 = EQ 0xc885bc58 V11
0x89: V35 = 0x1f7
0x8c: JUMPI 0x1f7 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x20c]
---
0x8d DUP1
0x8e PUSH4 0xda2a97d8
0x93 EQ
0x94 PUSH2 0x20c
0x97 JUMPI
---
0x8e: V36 = 0xda2a97d8
0x93: V37 = EQ 0xda2a97d8 V11
0x94: V38 = 0x20c
0x97: JUMPI 0x20c V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa1]
---
Predecessors: [0x0, 0x8d]
Successors: [0x261]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b PUSH2 0xa2
0x9e PUSH2 0x261
0xa1 JUMP
---
0x98: JUMPDEST 
0x99: V39 = 0x0
0x9b: V40 = 0xa2
0x9e: V41 = 0x261
0xa1: JUMP 0x261
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0xa2]
Exit stack: [V11, 0x0, 0xa2]

================================

Block 0xa2
[0xa2:0xaa]
---
Predecessors: [0x282]
Successors: [0xab, 0xac]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP2
0xa5 ISZERO
0xa6 ISZERO
0xa7 PUSH2 0xac
0xaa JUMPI
---
0xa2: JUMPDEST 
0xa3: V42 = CALLVALUE
0xa5: V43 = ISZERO V207
0xa6: V44 = ISZERO V43
0xa7: V45 = 0xac
0xaa: JUMPI 0xac V44
---
Entry stack: [V11, S25, {0x0, 0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, 0x0, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, V207]
Stack pops: 1
Stack additions: [S0, V42]
Exit stack: [S25, {0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, 0x0, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0, V42]

================================

Block 0xab
[0xab:0xab]
---
Predecessors: [0xa2]
Successors: []
---
0xab INVALID
---
0xab: INVALID 
---
Entry stack: [S26, {0xba, 0xcb}, S24, S23, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S15, S14, {0x0, 0xba, 0xcb}, S12, S11, 0x0, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, V42]
Stack pops: 0
Stack additions: []
Exit stack: [S26, {0xba, 0xcb}, S24, S23, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S15, S14, {0x0, 0xba, 0xcb}, S12, S11, 0x0, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, V42]

================================

Block 0xac
[0xac:0xb9]
---
Predecessors: [0xa2]
Successors: [0x28c]
---
0xac JUMPDEST
0xad DIV
0xae SWAP1
0xaf POP
0xb0 PUSH2 0xba
0xb3 DUP2
0xb4 PUSH1 0x0
0xb6 PUSH2 0x28c
0xb9 JUMP
---
0xac: JUMPDEST 
0xad: V46 = DIV V42 S1
0xb0: V47 = 0xba
0xb4: V48 = 0x0
0xb6: V49 = 0x28c
0xb9: JUMP 0x28c
---
Entry stack: [S26, {0xba, 0xcb}, S24, S23, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S15, S14, {0x0, 0xba, 0xcb}, S12, S11, 0x0, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, V42]
Stack pops: 3
Stack additions: [V46, 0xba, V46, 0x0]
Exit stack: [S26, {0xba, 0xcb}, S24, S23, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S15, S14, {0x0, 0xba, 0xcb}, S12, S11, 0x0, 0x0, 0x0, 0x0, S6, S5, S4, S3, V46, 0xba, V46, 0x0]

================================

Block 0xba
[0xba:0xbc]
---
Predecessors: [0x673]
Successors: []
---
0xba JUMPDEST
0xbb POP
0xbc STOP
---
0xba: JUMPDEST 
0xbc: STOP 
---
Entry stack: [S0]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xbd
[0xbd:0xca]
---
Predecessors: [0xd]
Successors: [0x28c]
---
0xbd JUMPDEST
0xbe PUSH2 0xcb
0xc1 PUSH1 0x4
0xc3 CALLDATALOAD
0xc4 PUSH1 0x24
0xc6 CALLDATALOAD
0xc7 PUSH2 0x28c
0xca JUMP
---
0xbd: JUMPDEST 
0xbe: V50 = 0xcb
0xc1: V51 = 0x4
0xc3: V52 = CALLDATALOAD 0x4
0xc4: V53 = 0x24
0xc6: V54 = CALLDATALOAD 0x24
0xc7: V55 = 0x28c
0xca: JUMP 0x28c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcb, V52, V54]
Exit stack: [V11, 0xcb, V52, V54]

================================

Block 0xcb
[0xcb:0xcc]
---
Predecessors: [0x673, 0x922, 0xa08]
Successors: []
---
0xcb JUMPDEST
0xcc STOP
---
0xcb: JUMPDEST 
0xcc: STOP 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xcd
[0xcd:0xd4]
---
Predecessors: [0x40]
Successors: [0xd5, 0xd9]
---
0xcd JUMPDEST
0xce CALLVALUE
0xcf DUP1
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xcd: JUMPDEST 
0xce: V56 = CALLVALUE
0xd0: V57 = ISZERO V56
0xd1: V58 = 0xd9
0xd4: JUMPI 0xd9 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V11, V56]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xcd]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V59 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56]

================================

Block 0xd9
[0xd9:0xe4]
---
Predecessors: [0xcd]
Successors: [0x6df]
---
0xd9 JUMPDEST
0xda POP
0xdb PUSH2 0xe5
0xde PUSH1 0x4
0xe0 CALLDATALOAD
0xe1 PUSH2 0x6df
0xe4 JUMP
---
0xd9: JUMPDEST 
0xdb: V60 = 0xe5
0xde: V61 = 0x4
0xe0: V62 = CALLDATALOAD 0x4
0xe1: V63 = 0x6df
0xe4: JUMP 0x6df
---
Entry stack: [V11, V56]
Stack pops: 1
Stack additions: [0xe5, V62]
Exit stack: [V11, 0xe5, V62]

================================

Block 0xe5
[0xe5:0x107]
---
Predecessors: [0x71c]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 DUP1
0xe9 MLOAD
0xea PUSH1 0x1
0xec PUSH1 0xa0
0xee PUSH1 0x2
0xf0 EXP
0xf1 SUB
0xf2 SWAP1
0xf3 SWAP4
0xf4 AND
0xf5 DUP4
0xf6 MSTORE
0xf7 PUSH1 0x20
0xf9 DUP4
0xfa ADD
0xfb SWAP2
0xfc SWAP1
0xfd SWAP2
0xfe MSTORE
0xff DUP1
0x100 MLOAD
0x101 SWAP2
0x102 DUP3
0x103 SWAP1
0x104 SUB
0x105 ADD
0x106 SWAP1
0x107 RETURN
---
0xe5: JUMPDEST 
0xe6: V64 = 0x40
0xe9: V65 = M[0x40]
0xea: V66 = 0x1
0xec: V67 = 0xa0
0xee: V68 = 0x2
0xf0: V69 = EXP 0x2 0xa0
0xf1: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4: V71 = AND V595 0xffffffffffffffffffffffffffffffffffffffff
0xf6: M[V65] = V71
0xf7: V72 = 0x20
0xfa: V73 = ADD V65 0x20
0xfe: M[V73] = V607
0x100: V74 = M[0x40]
0x104: V75 = SUB V65 V74
0x105: V76 = ADD V75 0x40
0x107: RETURN V74 V76
---
Entry stack: [V11, V595, V607]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x108
[0x108:0x10f]
---
Predecessors: [0x4b]
Successors: [0x110, 0x114]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a DUP1
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x108: JUMPDEST 
0x109: V77 = CALLVALUE
0x10b: V78 = ISZERO V77
0x10c: V79 = 0x114
0x10f: JUMPI 0x114 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x108]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V80 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x114
[0x114:0x11c]
---
Predecessors: [0x108]
Successors: [0x737]
---
0x114 JUMPDEST
0x115 POP
0x116 PUSH2 0x11d
0x119 PUSH2 0x737
0x11c JUMP
---
0x114: JUMPDEST 
0x116: V81 = 0x11d
0x119: V82 = 0x737
0x11c: JUMP 0x737
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x11d]
Exit stack: [V11, 0x11d]

================================

Block 0x11d
[0x11d:0x140]
---
Predecessors: [0x917]
Successors: [0x141]
---
0x11d JUMPDEST
0x11e PUSH1 0x40
0x120 DUP1
0x121 MLOAD
0x122 PUSH1 0x20
0x124 DUP1
0x125 DUP3
0x126 MSTORE
0x127 DUP4
0x128 MLOAD
0x129 DUP2
0x12a DUP4
0x12b ADD
0x12c MSTORE
0x12d DUP4
0x12e MLOAD
0x12f SWAP2
0x130 SWAP3
0x131 DUP4
0x132 SWAP3
0x133 SWAP1
0x134 DUP4
0x135 ADD
0x136 SWAP2
0x137 DUP6
0x138 DUP2
0x139 ADD
0x13a SWAP2
0x13b MUL
0x13c DUP1
0x13d DUP4
0x13e DUP4
0x13f PUSH1 0x0
---
0x11d: JUMPDEST 
0x11e: V83 = 0x40
0x121: V84 = M[0x40]
0x122: V85 = 0x20
0x126: M[V84] = 0x20
0x128: V86 = M[S0]
0x12b: V87 = ADD V84 0x20
0x12c: M[V87] = V86
0x12e: V88 = M[S0]
0x135: V89 = ADD V84 0x40
0x139: V90 = ADD 0x20 S0
0x13b: V91 = MUL V88 0x20
0x13f: V92 = 0x0
---
Entry stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V84, V84, V89, V90, V91, V91, V89, V90, 0x0]
Exit stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, S0, V84, V84, V89, V90, V91, V91, V89, V90, 0x0]

================================

Block 0x141
[0x141:0x149]
---
Predecessors: [0x11d, 0x14a]
Successors: [0x14a, 0x159]
---
0x141 JUMPDEST
0x142 DUP4
0x143 DUP2
0x144 LT
0x145 ISZERO
0x146 PUSH2 0x159
0x149 JUMPI
---
0x141: JUMPDEST 
0x144: V93 = LT S0 V91
0x145: V94 = ISZERO V93
0x146: V95 = 0x159
0x149: JUMPI 0x159 V94
---
Entry stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, S9, V84, V84, V89, V90, V91, V91, V89, V90, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, S9, V84, V84, V89, V90, V91, V91, V89, V90, S0]

================================

Block 0x14a
[0x14a:0x158]
---
Predecessors: [0x141]
Successors: [0x141]
---
0x14a DUP2
0x14b DUP2
0x14c ADD
0x14d MLOAD
0x14e DUP4
0x14f DUP3
0x150 ADD
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 PUSH2 0x141
0x158 JUMP
---
0x14c: V96 = ADD S0 V90
0x14d: V97 = M[V96]
0x150: V98 = ADD S0 V89
0x151: M[V98] = V97
0x152: V99 = 0x20
0x154: V100 = ADD 0x20 S0
0x155: V101 = 0x141
0x158: JUMP 0x141
---
Entry stack: [S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, S9, V84, V84, V89, V90, V91, V91, V89, V90, S0]
Stack pops: 3
Stack additions: [S2, S1, V100]
Exit stack: [S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, S9, V84, V84, V89, V90, V91, V91, V89, V90, V100]

================================

Block 0x159
[0x159:0x16c]
---
Predecessors: [0x141]
Successors: []
---
0x159 JUMPDEST
0x15a POP
0x15b POP
0x15c POP
0x15d POP
0x15e SWAP1
0x15f POP
0x160 ADD
0x161 SWAP3
0x162 POP
0x163 POP
0x164 POP
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 SWAP2
0x16a SUB
0x16b SWAP1
0x16c RETURN
---
0x159: JUMPDEST 
0x160: V102 = ADD V91 V89
0x165: V103 = 0x40
0x167: V104 = M[0x40]
0x16a: V105 = SUB V102 V104
0x16c: RETURN V104 V105
---
Entry stack: [S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, S9, V84, V84, V89, V90, V91, V91, V89, V90, S0]
Stack pops: 10
Stack additions: []
Exit stack: [S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10]

================================

Block 0x16d
[0x16d:0x174]
---
Predecessors: [0x56]
Successors: [0x175, 0x179]
---
0x16d JUMPDEST
0x16e CALLVALUE
0x16f DUP1
0x170 ISZERO
0x171 PUSH2 0x179
0x174 JUMPI
---
0x16d: JUMPDEST 
0x16e: V106 = CALLVALUE
0x170: V107 = ISZERO V106
0x171: V108 = 0x179
0x174: JUMPI 0x179 V107
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V11, V106]

================================

Block 0x175
[0x175:0x178]
---
Predecessors: [0x16d]
Successors: []
---
0x175 PUSH1 0x0
0x177 DUP1
0x178 REVERT
---
0x175: V109 = 0x0
0x178: REVERT 0x0 0x0
---
Entry stack: [V11, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V106]

================================

Block 0x179
[0x179:0x181]
---
Predecessors: [0x16d]
Successors: [0x261]
---
0x179 JUMPDEST
0x17a POP
0x17b PUSH2 0x182
0x17e PUSH2 0x261
0x181 JUMP
---
0x179: JUMPDEST 
0x17b: V110 = 0x182
0x17e: V111 = 0x261
0x181: JUMP 0x261
---
Entry stack: [V11, V106]
Stack pops: 1
Stack additions: [0x182]
Exit stack: [V11, 0x182]

================================

Block 0x182
[0x182:0x193]
---
Predecessors: [0x282, 0x975]
Successors: []
---
0x182 JUMPDEST
0x183 PUSH1 0x40
0x185 DUP1
0x186 MLOAD
0x187 SWAP2
0x188 DUP3
0x189 MSTORE
0x18a MLOAD
0x18b SWAP1
0x18c DUP2
0x18d SWAP1
0x18e SUB
0x18f PUSH1 0x20
0x191 ADD
0x192 SWAP1
0x193 RETURN
---
0x182: JUMPDEST 
0x183: V112 = 0x40
0x186: V113 = M[0x40]
0x189: M[V113] = S0
0x18a: V114 = M[0x40]
0x18e: V115 = SUB V113 V114
0x18f: V116 = 0x20
0x191: V117 = ADD 0x20 V115
0x193: RETURN V114 V117
---
Entry stack: [S25, {0x0, 0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, 0x0, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S25, {0x0, 0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, 0x0, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1]

================================

Block 0x194
[0x194:0x19b]
---
Predecessors: [0x61]
Successors: [0x922]
---
0x194 JUMPDEST
0x195 PUSH2 0xcb
0x198 PUSH2 0x922
0x19b JUMP
---
0x194: JUMPDEST 
0x195: V118 = 0xcb
0x198: V119 = 0x922
0x19b: JUMP 0x922
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V11, 0xcb]

================================

Block 0x19c
[0x19c:0x1a3]
---
Predecessors: [0x6c]
Successors: [0x1a4, 0x1a8]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e DUP1
0x19f ISZERO
0x1a0 PUSH2 0x1a8
0x1a3 JUMPI
---
0x19c: JUMPDEST 
0x19d: V120 = CALLVALUE
0x19f: V121 = ISZERO V120
0x1a0: V122 = 0x1a8
0x1a3: JUMPI 0x1a8 V121
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V120]
Exit stack: [V11, V120]

================================

Block 0x1a4
[0x1a4:0x1a7]
---
Predecessors: [0x19c]
Successors: []
---
0x1a4 PUSH1 0x0
0x1a6 DUP1
0x1a7 REVERT
---
0x1a4: V123 = 0x0
0x1a7: REVERT 0x0 0x0
---
Entry stack: [V11, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V120]

================================

Block 0x1a8
[0x1a8:0x1bc]
---
Predecessors: [0x19c]
Successors: [0x924]
---
0x1a8 JUMPDEST
0x1a9 POP
0x1aa PUSH2 0x1bd
0x1ad PUSH1 0x1
0x1af PUSH1 0xa0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 SUB
0x1b5 PUSH1 0x4
0x1b7 CALLDATALOAD
0x1b8 AND
0x1b9 PUSH2 0x924
0x1bc JUMP
---
0x1a8: JUMPDEST 
0x1aa: V124 = 0x1bd
0x1ad: V125 = 0x1
0x1af: V126 = 0xa0
0x1b1: V127 = 0x2
0x1b3: V128 = EXP 0x2 0xa0
0x1b4: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V130 = 0x4
0x1b7: V131 = CALLDATALOAD 0x4
0x1b8: V132 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V133 = 0x924
0x1bc: JUMP 0x924
---
Entry stack: [V11, V120]
Stack pops: 1
Stack additions: [0x1bd, V132]
Exit stack: [V11, 0x1bd, V132]

================================

Block 0x1bd
[0x1bd:0x1d5]
---
Predecessors: [0x96b]
Successors: []
---
0x1bd JUMPDEST
0x1be PUSH1 0x40
0x1c0 DUP1
0x1c1 MLOAD
0x1c2 SWAP3
0x1c3 DUP4
0x1c4 MSTORE
0x1c5 PUSH1 0x20
0x1c7 DUP4
0x1c8 ADD
0x1c9 SWAP2
0x1ca SWAP1
0x1cb SWAP2
0x1cc MSTORE
0x1cd DUP1
0x1ce MLOAD
0x1cf SWAP2
0x1d0 DUP3
0x1d1 SWAP1
0x1d2 SUB
0x1d3 ADD
0x1d4 SWAP1
0x1d5 RETURN
---
0x1bd: JUMPDEST 
0x1be: V134 = 0x40
0x1c1: V135 = M[0x40]
0x1c4: M[V135] = V813
0x1c5: V136 = 0x20
0x1c8: V137 = ADD V135 0x20
0x1cc: M[V137] = S0
0x1ce: V138 = M[0x40]
0x1d2: V139 = SUB V135 V138
0x1d3: V140 = ADD V139 0x40
0x1d5: RETURN V138 V140
---
Entry stack: [V11, V813, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x77]
Successors: [0x1de, 0x1e2]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 DUP1
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V141 = CALLVALUE
0x1d9: V142 = ISZERO V141
0x1da: V143 = 0x1e2
0x1dd: JUMPI 0x1e2 V142
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V141]
Exit stack: [V11, V141]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x1d6]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V144 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V11, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V141]

================================

Block 0x1e2
[0x1e2:0x1f6]
---
Predecessors: [0x1d6]
Successors: [0x975]
---
0x1e2 JUMPDEST
0x1e3 POP
0x1e4 PUSH2 0x182
0x1e7 PUSH1 0x1
0x1e9 PUSH1 0xa0
0x1eb PUSH1 0x2
0x1ed EXP
0x1ee SUB
0x1ef PUSH1 0x4
0x1f1 CALLDATALOAD
0x1f2 AND
0x1f3 PUSH2 0x975
0x1f6 JUMP
---
0x1e2: JUMPDEST 
0x1e4: V145 = 0x182
0x1e7: V146 = 0x1
0x1e9: V147 = 0xa0
0x1eb: V148 = 0x2
0x1ed: V149 = EXP 0x2 0xa0
0x1ee: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V151 = 0x4
0x1f1: V152 = CALLDATALOAD 0x4
0x1f2: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V154 = 0x975
0x1f6: JUMP 0x975
---
Entry stack: [V11, V141]
Stack pops: 1
Stack additions: [0x182, V153]
Exit stack: [V11, 0x182, V153]

================================

Block 0x1f7
[0x1f7:0x1fe]
---
Predecessors: [0x82]
Successors: [0x1ff, 0x203]
---
0x1f7 JUMPDEST
0x1f8 CALLVALUE
0x1f9 DUP1
0x1fa ISZERO
0x1fb PUSH2 0x203
0x1fe JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V155 = CALLVALUE
0x1fa: V156 = ISZERO V155
0x1fb: V157 = 0x203
0x1fe: JUMPI 0x203 V156
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V155]
Exit stack: [V11, V155]

================================

Block 0x1ff
[0x1ff:0x202]
---
Predecessors: [0x1f7]
Successors: []
---
0x1ff PUSH1 0x0
0x201 DUP1
0x202 REVERT
---
0x1ff: V158 = 0x0
0x202: REVERT 0x0 0x0
---
Entry stack: [V11, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V155]

================================

Block 0x203
[0x203:0x20b]
---
Predecessors: [0x1f7]
Successors: [0x987]
---
0x203 JUMPDEST
0x204 POP
0x205 PUSH2 0xcb
0x208 PUSH2 0x987
0x20b JUMP
---
0x203: JUMPDEST 
0x205: V159 = 0xcb
0x208: V160 = 0x987
0x20b: JUMP 0x987
---
Entry stack: [V11, V155]
Stack pops: 1
Stack additions: [0xcb]
Exit stack: [V11, 0xcb]

================================

Block 0x20c
[0x20c:0x213]
---
Predecessors: [0x8d]
Successors: [0x214, 0x218]
---
0x20c JUMPDEST
0x20d CALLVALUE
0x20e DUP1
0x20f ISZERO
0x210 PUSH2 0x218
0x213 JUMPI
---
0x20c: JUMPDEST 
0x20d: V161 = CALLVALUE
0x20f: V162 = ISZERO V161
0x210: V163 = 0x218
0x213: JUMPI 0x218 V162
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V161]
Exit stack: [V11, V161]

================================

Block 0x214
[0x214:0x217]
---
Predecessors: [0x20c]
Successors: []
---
0x214 PUSH1 0x0
0x216 DUP1
0x217 REVERT
---
0x214: V164 = 0x0
0x217: REVERT 0x0 0x0
---
Entry stack: [V11, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V161]

================================

Block 0x218
[0x218:0x220]
---
Predecessors: [0x20c]
Successors: [0xa0b]
---
0x218 JUMPDEST
0x219 POP
0x21a PUSH2 0x221
0x21d PUSH2 0xa0b
0x220 JUMP
---
0x218: JUMPDEST 
0x21a: V165 = 0x221
0x21d: V166 = 0xa0b
0x220: JUMP 0xa0b
---
Entry stack: [V11, V161]
Stack pops: 1
Stack additions: [0x221]
Exit stack: [V11, 0x221]

================================

Block 0x221
[0x221:0x260]
---
Predecessors: [0xa4d]
Successors: []
---
0x221 JUMPDEST
0x222 PUSH1 0x40
0x224 DUP1
0x225 MLOAD
0x226 SWAP8
0x227 DUP9
0x228 MSTORE
0x229 PUSH1 0x20
0x22b DUP9
0x22c ADD
0x22d SWAP7
0x22e SWAP1
0x22f SWAP7
0x230 MSTORE
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 SWAP1
0x23a SWAP5
0x23b AND
0x23c DUP7
0x23d DUP7
0x23e ADD
0x23f MSTORE
0x240 PUSH1 0x60
0x242 DUP7
0x243 ADD
0x244 SWAP3
0x245 SWAP1
0x246 SWAP3
0x247 MSTORE
0x248 PUSH1 0x80
0x24a DUP6
0x24b ADD
0x24c MSTORE
0x24d PUSH1 0xa0
0x24f DUP5
0x250 ADD
0x251 MSTORE
0x252 PUSH1 0xc0
0x254 DUP4
0x255 ADD
0x256 MSTORE
0x257 MLOAD
0x258 SWAP1
0x259 DUP2
0x25a SWAP1
0x25b SUB
0x25c PUSH1 0xe0
0x25e ADD
0x25f SWAP1
0x260 RETURN
---
0x221: JUMPDEST 
0x222: V167 = 0x40
0x225: V168 = M[0x40]
0x228: M[V168] = V909
0x229: V169 = 0x20
0x22c: V170 = ADD V168 0x20
0x230: M[V170] = S5
0x231: V171 = 0x1
0x233: V172 = 0xa0
0x235: V173 = 0x2
0x237: V174 = EXP 0x2 0xa0
0x238: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23b: V176 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V177 = ADD 0x40 V168
0x23f: M[V177] = V176
0x240: V178 = 0x60
0x243: V179 = ADD V168 0x60
0x247: M[V179] = S3
0x248: V180 = 0x80
0x24b: V181 = ADD V168 0x80
0x24c: M[V181] = S2
0x24d: V182 = 0xa0
0x250: V183 = ADD V168 0xa0
0x251: M[V183] = S1
0x252: V184 = 0xc0
0x255: V185 = ADD V168 0xc0
0x256: M[V185] = V907
0x257: V186 = M[0x40]
0x25b: V187 = SUB V168 V186
0x25c: V188 = 0xe0
0x25e: V189 = ADD 0xe0 V187
0x260: RETURN V186 V189
---
Entry stack: [V11, S18, {0x0, 0xba, 0xcb}, S16, S15, 0x0, 0x0, 0x0, 0x0, S10, S9, S8, S7, V909, S5, S4, S3, S2, S1, V907]
Stack pops: 7
Stack additions: []
Exit stack: [V11, S18, {0x0, 0xba, 0xcb}, S16, S15, 0x0, 0x0, 0x0, 0x0, S10, S9, S8, S7]

================================

Block 0x261
[0x261:0x274]
---
Predecessors: [0x98, 0x179, 0x2ca, 0xa0b]
Successors: [0x275, 0x282]
---
0x261 JUMPDEST
0x262 PUSH1 0x0
0x264 DUP1
0x265 PUSH1 0x0
0x267 DUP1
0x268 SWAP2
0x269 POP
0x26a PUSH1 0x64
0x26c PUSH1 0x2
0x26e SLOAD
0x26f GT
0x270 ISZERO
0x271 PUSH2 0x282
0x274 JUMPI
---
0x261: JUMPDEST 
0x262: V190 = 0x0
0x265: V191 = 0x0
0x26a: V192 = 0x64
0x26c: V193 = 0x2
0x26e: V194 = S[0x2]
0x26f: V195 = GT V194 0x64
0x270: V196 = ISZERO V195
0x271: V197 = 0x282
0x274: JUMPI 0x282 V196
---
Entry stack: [S37, {0xba, 0xcb}, S35, S34, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S26, S25, {0x0, 0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, 0x0, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, {0xa2, 0x182, 0x2d2, 0xa4d}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [S37, {0xba, 0xcb}, S35, S34, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S26, S25, {0x0, 0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, 0x0, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, {0xa2, 0x182, 0x2d2, 0xa4d}, 0x0, 0x0, 0x0]

================================

Block 0x275
[0x275:0x281]
---
Predecessors: [0x261]
Successors: [0x282]
---
0x275 PUSH1 0x2
0x277 SLOAD
0x278 PUSH1 0x64
0x27a SWAP1
0x27b DIV
0x27c PUSH1 0x7
0x27e SLOAD
0x27f MUL
0x280 SWAP2
0x281 POP
---
0x275: V198 = 0x2
0x277: V199 = S[0x2]
0x278: V200 = 0x64
0x27b: V201 = DIV V199 0x64
0x27c: V202 = 0x7
0x27e: V203 = S[0x7]
0x27f: V204 = MUL V203 V201
---
Entry stack: [S40, {0xba, 0xcb}, S38, S37, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S29, S28, {0x0, 0xba, 0xcb}, S26, S25, 0x0, 0x0, 0x0, 0x0, S20, S19, S18, S17, S16, {0x0, 0xba, 0xcb}, S14, S13, 0x0, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, {0xa2, 0x182, 0x2d2, 0xa4d}, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V204, S0]
Exit stack: [S40, {0xba, 0xcb}, S38, S37, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S29, S28, {0x0, 0xba, 0xcb}, S26, S25, 0x0, 0x0, 0x0, 0x0, S20, S19, S18, S17, S16, {0x0, 0xba, 0xcb}, S14, S13, 0x0, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, {0xa2, 0x182, 0x2d2, 0xa4d}, 0x0, V204, 0x0]

================================

Block 0x282
[0x282:0x28b]
---
Predecessors: [0x261, 0x275]
Successors: [0xa2, 0x182, 0x2d2, 0xa4d]
---
0x282 JUMPDEST
0x283 POP
0x284 PUSH1 0x6
0x286 SLOAD
0x287 ADD
0x288 SWAP2
0x289 SWAP1
0x28a POP
0x28b JUMP
---
0x282: JUMPDEST 
0x284: V205 = 0x6
0x286: V206 = S[0x6]
0x287: V207 = ADD V206 S1
0x28b: JUMP {0xa2, 0x182, 0x2d2, 0xa4d}
---
Entry stack: [S40, {0xba, 0xcb}, S38, S37, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S29, S28, {0x0, 0xba, 0xcb}, S26, S25, 0x0, 0x0, 0x0, 0x0, S20, S19, S18, S17, S16, {0x0, 0xba, 0xcb}, S14, S13, 0x0, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, {0xa2, 0x182, 0x2d2, 0xa4d}, 0x0, S1, 0x0]
Stack pops: 4
Stack additions: [V207]
Exit stack: [S40, {0xba, 0xcb}, S38, S37, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S29, S28, {0x0, 0xba, 0xcb}, S26, S25, 0x0, 0x0, 0x0, 0x0, S20, S19, S18, S17, S16, {0x0, 0xba, 0xcb}, S14, S13, 0x0, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, V207]

================================

Block 0x28c
[0x28c:0x2a0]
---
Predecessors: [0xac, 0xbd]
Successors: [0x2a1, 0x2a5]
---
0x28c JUMPDEST
0x28d PUSH1 0x0
0x28f DUP1
0x290 DUP1
0x291 DUP1
0x292 PUSH1 0x60
0x294 DUP2
0x295 DUP1
0x296 DUP1
0x297 DUP1
0x298 PUSH1 0x1
0x29a DUP12
0x29b LT
0x29c ISZERO
0x29d PUSH2 0x2a5
0x2a0 JUMPI
---
0x28c: JUMPDEST 
0x28d: V208 = 0x0
0x292: V209 = 0x60
0x298: V210 = 0x1
0x29b: V211 = LT S1 0x1
0x29c: V212 = ISZERO V211
0x29d: V213 = 0x2a5
0x2a0: JUMPI 0x2a5 V212
---
Entry stack: [S27, {0xba, 0xcb}, S25, S24, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S16, S15, {0x0, 0xba, 0xcb}, S13, S12, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, {0xba, 0xcb}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]
Exit stack: [S27, {0xba, 0xcb}, S25, S24, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S16, S15, {0x0, 0xba, 0xcb}, S13, S12, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, {0xba, 0xcb}, S1, S0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x28c]
Successors: []
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
---
0x2a1: V214 = 0x0
0x2a4: REVERT 0x0 0x0
---
Entry stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2a5
[0x2a5:0x2af]
---
Predecessors: [0x28c]
Successors: [0x2b0, 0x2b4]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x6
0x2a8 SLOAD
0x2a9 CALLVALUE
0x2aa LT
0x2ab ISZERO
0x2ac PUSH2 0x2b4
0x2af JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V215 = 0x6
0x2a8: V216 = S[0x6]
0x2a9: V217 = CALLVALUE
0x2aa: V218 = LT V217 V216
0x2ab: V219 = ISZERO V218
0x2ac: V220 = 0x2b4
0x2af: JUMPI 0x2b4 V219
---
Entry stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x2a5]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
---
0x2b0: V221 = 0x0
0x2b3: REVERT 0x0 0x0
---
Entry stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2b4
[0x2b4:0x2c5]
---
Predecessors: [0x2a5]
Successors: [0x2c6, 0x2ca]
---
0x2b4 JUMPDEST
0x2b5 PUSH1 0x5
0x2b7 SLOAD
0x2b8 TIMESTAMP
0x2b9 PUSH4 0xffffffff
0x2be SWAP1
0x2bf SWAP2
0x2c0 AND
0x2c1 GT
0x2c2 PUSH2 0x2ca
0x2c5 JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V222 = 0x5
0x2b7: V223 = S[0x5]
0x2b8: V224 = TIMESTAMP
0x2b9: V225 = 0xffffffff
0x2c0: V226 = AND V223 0xffffffff
0x2c1: V227 = GT V226 V224
0x2c2: V228 = 0x2ca
0x2c5: JUMPI 0x2ca V227
---
Entry stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2c6
[0x2c6:0x2c9]
---
Predecessors: [0x2b4]
Successors: []
---
0x2c6 PUSH1 0x0
0x2c8 DUP1
0x2c9 REVERT
---
0x2c6: V229 = 0x0
0x2c9: REVERT 0x0 0x0
---
Entry stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2ca
[0x2ca:0x2d1]
---
Predecessors: [0x2b4]
Successors: [0x261]
---
0x2ca JUMPDEST
0x2cb PUSH2 0x2d2
0x2ce PUSH2 0x261
0x2d1 JUMP
---
0x2ca: JUMPDEST 
0x2cb: V230 = 0x2d2
0x2ce: V231 = 0x261
0x2d1: JUMP 0x261
---
Entry stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x2d2]
Exit stack: [S36, {0xba, 0xcb}, S34, S33, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S25, S24, {0x0, 0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, {0xba, 0xcb}, S10, S9, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0, 0x2d2]

================================

Block 0x2d2
[0x2d2:0x2dd]
---
Predecessors: [0x282]
Successors: [0xa6d]
---
0x2d2 JUMPDEST
0x2d3 SWAP9
0x2d4 POP
0x2d5 PUSH2 0x2de
0x2d8 DUP10
0x2d9 DUP13
0x2da PUSH2 0xa6d
0x2dd JUMP
---
0x2d2: JUMPDEST 
0x2d5: V232 = 0x2de
0x2da: V233 = 0xa6d
0x2dd: JUMP 0xa6d
---
Entry stack: [V11, S25, {0x0, 0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, 0x0, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, V207]
Stack pops: 12
Stack additions: [S11, S10, S0, S8, S7, S6, S5, S4, S3, S2, S1, 0x2de, S0, S11]
Exit stack: [V11, S25, {0x0, 0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, V207, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, 0x2de, V207, S11]

================================

Block 0x2de
[0x2de:0x2e5]
---
Predecessors: [0xa9c]
Successors: [0x2e6, 0x2ea]
---
0x2de JUMPDEST
0x2df CALLVALUE
0x2e0 LT
0x2e1 ISZERO
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x2de: JUMPDEST 
0x2df: V234 = CALLVALUE
0x2e0: V235 = LT V234 S0
0x2e1: V236 = ISZERO V235
0x2e2: V237 = 0x2ea
0x2e5: JUMPI 0x2ea V236
---
Entry stack: [S25, {0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S25, {0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2de]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V238 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [S24, {0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S13, S12, {0x0, 0xba, 0xcb}, S10, S9, S8, 0x0, 0x0, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S24, {0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S13, S12, {0x0, 0xba, 0xcb}, S10, S9, S8, 0x0, 0x0, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x2ea
[0x2ea:0x35e]
---
Predecessors: [0x2de]
Successors: [0x35f, 0x365]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x5
0x2ed DUP1
0x2ee SLOAD
0x2ef PUSH4 0xffffffff
0x2f4 NOT
0x2f5 DUP2
0x2f6 AND
0x2f7 PUSH5 0x100000000
0x2fd SWAP1
0x2fe SWAP2
0x2ff DIV
0x300 PUSH4 0xffffffff
0x305 SWAP1
0x306 DUP2
0x307 AND
0x308 TIMESTAMP
0x309 ADD
0x30a AND
0x30b OR
0x30c PUSH32 0xffffffff0000000000000000000000000000000000000000ffffffffffffffff
0x32d AND
0x32e CALLER
0x32f PUSH9 0x10000000000000000
0x339 MUL
0x33a OR
0x33b SWAP1
0x33c SSTORE
0x33d PUSH1 0x64
0x33f CALLVALUE
0x340 DIV
0x341 PUSH1 0x2
0x343 MUL
0x344 SWAP8
0x345 POP
0x346 PUSH1 0xa
0x348 CALLVALUE
0x349 DIV
0x34a SWAP7
0x34b POP
0x34c PUSH1 0x64
0x34e CALLVALUE
0x34f DIV
0x350 PUSH1 0xf
0x352 MUL
0x353 SWAP6
0x354 POP
0x355 PUSH1 0x0
0x357 DUP11
0x358 GT
0x359 DUP1
0x35a ISZERO
0x35b PUSH2 0x365
0x35e JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V239 = 0x5
0x2ee: V240 = S[0x5]
0x2ef: V241 = 0xffffffff
0x2f4: V242 = NOT 0xffffffff
0x2f6: V243 = AND V240 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000
0x2f7: V244 = 0x100000000
0x2ff: V245 = DIV V240 0x100000000
0x300: V246 = 0xffffffff
0x307: V247 = AND 0xffffffff V245
0x308: V248 = TIMESTAMP
0x309: V249 = ADD V248 V247
0x30a: V250 = AND V249 0xffffffff
0x30b: V251 = OR V250 V243
0x30c: V252 = 0xffffffff0000000000000000000000000000000000000000ffffffffffffffff
0x32d: V253 = AND 0xffffffff0000000000000000000000000000000000000000ffffffffffffffff V251
0x32e: V254 = CALLER
0x32f: V255 = 0x10000000000000000
0x339: V256 = MUL 0x10000000000000000 V254
0x33a: V257 = OR V256 V253
0x33c: S[0x5] = V257
0x33d: V258 = 0x64
0x33f: V259 = CALLVALUE
0x340: V260 = DIV V259 0x64
0x341: V261 = 0x2
0x343: V262 = MUL 0x2 V260
0x346: V263 = 0xa
0x348: V264 = CALLVALUE
0x349: V265 = DIV V264 0xa
0x34c: V266 = 0x64
0x34e: V267 = CALLVALUE
0x34f: V268 = DIV V267 0x64
0x350: V269 = 0xf
0x352: V270 = MUL 0xf V268
0x355: V271 = 0x0
0x358: V272 = GT S9 0x0
0x35a: V273 = ISZERO V272
0x35b: V274 = 0x365
0x35e: JUMPI 0x365 V273
---
Entry stack: [S24, {0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S13, S12, {0x0, 0xba, 0xcb}, S10, S9, S8, 0x0, 0x0, 0x0, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, V262, V265, V270, S4, S3, S2, S1, S0, V272]
Exit stack: [S24, {0xba, 0xcb}, S22, S21, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S13, S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0, V272]

================================

Block 0x35f
[0x35f:0x364]
---
Predecessors: [0x2ea]
Successors: [0x365]
---
0x35f POP
0x360 PUSH1 0x8
0x362 SLOAD
0x363 DUP11
0x364 LT
---
0x360: V275 = 0x8
0x362: V276 = S[0x8]
0x364: V277 = LT S10 V276
---
Entry stack: [S25, {0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V272]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V277]
Exit stack: [S25, {0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V277]

================================

Block 0x365
[0x365:0x36a]
---
Predecessors: [0x2ea, 0x35f]
Successors: [0x36b, 0x3bf]
---
0x365 JUMPDEST
0x366 ISZERO
0x367 PUSH2 0x3bf
0x36a JUMPI
---
0x365: JUMPDEST 
0x366: V278 = ISZERO S0
0x367: V279 = 0x3bf
0x36a: JUMPI 0x3bf V278
---
Entry stack: [S25, {0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S25, {0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1]

================================

Block 0x36b
[0x36b:0x376]
---
Predecessors: [0x365]
Successors: [0x377, 0x378]
---
0x36b PUSH1 0x8
0x36d DUP1
0x36e SLOAD
0x36f DUP12
0x370 SWAP1
0x371 DUP2
0x372 LT
0x373 PUSH2 0x378
0x376 JUMPI
---
0x36b: V280 = 0x8
0x36e: V281 = S[0x8]
0x372: V282 = LT S9 V281
0x373: V283 = 0x378
0x376: JUMPI 0x378 V282
---
Entry stack: [0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S13, S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x8, S9]
Exit stack: [S13, S12, {0x0, 0xba, 0xcb}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x8, S9]

================================

Block 0x377
[0x377:0x377]
---
Predecessors: [0x36b]
Successors: []
---
0x377 INVALID
---
0x377: INVALID 
---
Entry stack: [V11, S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, 0x8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, 0x8, S0]

================================

Block 0x378
[0x378:0x3b3]
---
Predecessors: [0x36b]
Successors: [0x3b4, 0x3bd]
---
0x378 JUMPDEST
0x379 PUSH1 0x0
0x37b SWAP2
0x37c DUP3
0x37d MSTORE
0x37e PUSH1 0x20
0x380 DUP3
0x381 SHA3
0x382 PUSH1 0x2
0x384 SWAP1
0x385 SWAP2
0x386 MUL
0x387 ADD
0x388 SLOAD
0x389 PUSH1 0x40
0x38b MLOAD
0x38c PUSH1 0x1
0x38e PUSH1 0xa0
0x390 PUSH1 0x2
0x392 EXP
0x393 SUB
0x394 SWAP1
0x395 SWAP2
0x396 AND
0x397 SWAP2
0x398 DUP10
0x399 ISZERO
0x39a PUSH2 0x8fc
0x39d MUL
0x39e SWAP2
0x39f DUP11
0x3a0 SWAP2
0x3a1 DUP2
0x3a2 DUP2
0x3a3 DUP2
0x3a4 DUP6
0x3a5 DUP9
0x3a6 DUP9
0x3a7 CALL
0x3a8 SWAP4
0x3a9 POP
0x3aa POP
0x3ab POP
0x3ac POP
0x3ad ISZERO
0x3ae DUP1
0x3af ISZERO
0x3b0 PUSH2 0x3bd
0x3b3 JUMPI
---
0x378: JUMPDEST 
0x379: V284 = 0x0
0x37d: M[0x0] = 0x8
0x37e: V285 = 0x20
0x381: V286 = SHA3 0x0 0x20
0x382: V287 = 0x2
0x386: V288 = MUL S0 0x2
0x387: V289 = ADD V288 V286
0x388: V290 = S[V289]
0x389: V291 = 0x40
0x38b: V292 = M[0x40]
0x38c: V293 = 0x1
0x38e: V294 = 0xa0
0x390: V295 = 0x2
0x392: V296 = EXP 0x2 0xa0
0x393: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x396: V298 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x399: V299 = ISZERO V265
0x39a: V300 = 0x8fc
0x39d: V301 = MUL 0x8fc V299
0x3a7: V302 = CALL V301 V298 V265 V292 0x0 V292 0x0
0x3ad: V303 = ISZERO V302
0x3af: V304 = ISZERO V303
0x3b0: V305 = 0x3bd
0x3b3: JUMPI 0x3bd V304
---
Entry stack: [V11, S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, 0x8, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V303]
Exit stack: [V11, S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, V303]

================================

Block 0x3b4
[0x3b4:0x3bc]
---
Predecessors: [0x378]
Successors: []
---
0x3b4 RETURNDATASIZE
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 RETURNDATACOPY
0x3b9 RETURNDATASIZE
0x3ba PUSH1 0x0
0x3bc REVERT
---
0x3b4: V306 = RETURNDATASIZE
0x3b5: V307 = 0x0
0x3b8: RETURNDATACOPY 0x0 0x0 V306
0x3b9: V308 = RETURNDATASIZE
0x3ba: V309 = 0x0
0x3bc: REVERT 0x0 V308
---
Entry stack: [V11, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V303]

================================

Block 0x3bd
[0x3bd:0x3be]
---
Predecessors: [0x378]
Successors: [0x3bf]
---
0x3bd JUMPDEST
0x3be POP
---
0x3bd: JUMPDEST 
---
Entry stack: [V11, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V303]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1]

================================

Block 0x3bf
[0x3bf:0x3c6]
---
Predecessors: [0x365, 0x3bd]
Successors: [0x737]
---
0x3bf JUMPDEST
0x3c0 PUSH2 0x3c7
0x3c3 PUSH2 0x737
0x3c6 JUMP
---
0x3bf: JUMPDEST 
0x3c0: V310 = 0x3c7
0x3c3: V311 = 0x737
0x3c6: JUMP 0x737
---
Entry stack: [0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S13, S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3c7]
Exit stack: [S13, S12, {0x0, 0xba, 0xcb}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3c7]

================================

Block 0x3c7
[0x3c7:0x3d6]
---
Predecessors: [0x917]
Successors: [0x3d7, 0x3d8]
---
0x3c7 JUMPDEST
0x3c8 SWAP5
0x3c9 POP
0x3ca DUP5
0x3cb PUSH1 0x0
0x3cd DUP2
0x3ce MLOAD
0x3cf DUP2
0x3d0 LT
0x3d1 ISZERO
0x3d2 ISZERO
0x3d3 PUSH2 0x3d8
0x3d6 JUMPI
---
0x3c7: JUMPDEST 
0x3cb: V312 = 0x0
0x3ce: V313 = M[S0]
0x3d0: V314 = LT 0x0 V313
0x3d1: V315 = ISZERO V314
0x3d2: V316 = ISZERO V315
0x3d3: V317 = 0x3d8
0x3d6: JUMPI 0x3d8 V316
---
Entry stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0, S4, S3, S2, S1, S0, 0x0]
Exit stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S0, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x3d7
[0x3d7:0x3d7]
---
Predecessors: [0x3c7]
Successors: []
---
0x3d7 INVALID
---
0x3d7: INVALID 
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x3d8
[0x3d8:0x3f1]
---
Predecessors: [0x3c7]
Successors: [0x3f2, 0x3f3]
---
0x3d8 JUMPDEST
0x3d9 SWAP1
0x3da PUSH1 0x20
0x3dc ADD
0x3dd SWAP1
0x3de PUSH1 0x20
0x3e0 MUL
0x3e1 ADD
0x3e2 MLOAD
0x3e3 SWAP4
0x3e4 POP
0x3e5 PUSH1 0x8
0x3e7 DUP5
0x3e8 DUP2
0x3e9 SLOAD
0x3ea DUP2
0x3eb LT
0x3ec ISZERO
0x3ed ISZERO
0x3ee PUSH2 0x3f3
0x3f1 JUMPI
---
0x3d8: JUMPDEST 
0x3da: V318 = 0x20
0x3dc: V319 = ADD 0x20 S1
0x3de: V320 = 0x20
0x3e0: V321 = MUL 0x20 0x0
0x3e1: V322 = ADD 0x0 V319
0x3e2: V323 = M[V322]
0x3e5: V324 = 0x8
0x3e9: V325 = S[0x8]
0x3eb: V326 = LT V323 V325
0x3ec: V327 = ISZERO V326
0x3ed: V328 = ISZERO V327
0x3ee: V329 = 0x3f3
0x3f1: JUMPI 0x3f3 V328
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 6
Stack additions: [V323, S4, S3, S2, 0x8, V323]
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, V323, S4, S3, S2, 0x8, V323]

================================

Block 0x3f2
[0x3f2:0x3f2]
---
Predecessors: [0x3d8]
Successors: []
---
0x3f2 INVALID
---
0x3f2: INVALID 
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, V323, S4, S3, S2, 0x8, V323]
Stack pops: 0
Stack additions: []
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, V323, S4, S3, S2, 0x8, V323]

================================

Block 0x3f3
[0x3f3:0x42e]
---
Predecessors: [0x3d8]
Successors: [0x42f, 0x438]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x0
0x3f6 SWAP2
0x3f7 DUP3
0x3f8 MSTORE
0x3f9 PUSH1 0x20
0x3fb DUP3
0x3fc SHA3
0x3fd PUSH1 0x2
0x3ff SWAP1
0x400 SWAP2
0x401 MUL
0x402 ADD
0x403 SLOAD
0x404 PUSH1 0x40
0x406 MLOAD
0x407 PUSH1 0x1
0x409 PUSH1 0xa0
0x40b PUSH1 0x2
0x40d EXP
0x40e SUB
0x40f SWAP1
0x410 SWAP2
0x411 AND
0x412 SWAP2
0x413 DUP9
0x414 ISZERO
0x415 PUSH2 0x8fc
0x418 MUL
0x419 SWAP2
0x41a DUP10
0x41b SWAP2
0x41c DUP2
0x41d DUP2
0x41e DUP2
0x41f DUP6
0x420 DUP9
0x421 DUP9
0x422 CALL
0x423 SWAP4
0x424 POP
0x425 POP
0x426 POP
0x427 POP
0x428 ISZERO
0x429 DUP1
0x42a ISZERO
0x42b PUSH2 0x438
0x42e JUMPI
---
0x3f3: JUMPDEST 
0x3f4: V330 = 0x0
0x3f8: M[0x0] = 0x8
0x3f9: V331 = 0x20
0x3fc: V332 = SHA3 0x0 0x20
0x3fd: V333 = 0x2
0x401: V334 = MUL V323 0x2
0x402: V335 = ADD V334 V332
0x403: V336 = S[V335]
0x404: V337 = 0x40
0x406: V338 = M[0x40]
0x407: V339 = 0x1
0x409: V340 = 0xa0
0x40b: V341 = 0x2
0x40d: V342 = EXP 0x2 0xa0
0x40e: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V344 = AND V336 0xffffffffffffffffffffffffffffffffffffffff
0x414: V345 = ISZERO V270
0x415: V346 = 0x8fc
0x418: V347 = MUL 0x8fc V345
0x422: V348 = CALL V347 V344 V270 V338 0x0 V338 0x0
0x428: V349 = ISZERO V348
0x42a: V350 = ISZERO V349
0x42b: V351 = 0x438
0x42e: JUMPI 0x438 V350
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, V323, S4, S3, S2, 0x8, V323]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V349]
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, V323, S4, S3, S2, V349]

================================

Block 0x42f
[0x42f:0x437]
---
Predecessors: [0x3f3]
Successors: []
---
0x42f RETURNDATASIZE
0x430 PUSH1 0x0
0x432 DUP1
0x433 RETURNDATACOPY
0x434 RETURNDATASIZE
0x435 PUSH1 0x0
0x437 REVERT
---
0x42f: V352 = RETURNDATASIZE
0x430: V353 = 0x0
0x433: RETURNDATACOPY 0x0 0x0 V352
0x434: V354 = RETURNDATASIZE
0x435: V355 = 0x0
0x437: REVERT 0x0 V354
---
Entry stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V349]
Stack pops: 0
Stack additions: []
Exit stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V349]

================================

Block 0x438
[0x438:0x445]
---
Predecessors: [0x3f3]
Successors: [0x446]
---
0x438 JUMPDEST
0x439 POP
0x43a PUSH1 0x3
0x43c DUP1
0x43d SLOAD
0x43e DUP8
0x43f ADD
0x440 SWAP1
0x441 SSTORE
0x442 PUSH1 0x1
0x444 SWAP3
0x445 POP
---
0x438: JUMPDEST 
0x43a: V356 = 0x3
0x43d: V357 = S[0x3]
0x43f: V358 = ADD V270 V357
0x441: S[0x3] = V358
0x442: V359 = 0x1
---
Entry stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V349]
Stack pops: 7
Stack additions: [S6, S5, S4, 0x1, S2, S1]
Exit stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, 0x1, S2, S1]

================================

Block 0x446
[0x446:0x44f]
---
Predecessors: [0x438, 0x4e4]
Successors: [0x450, 0x4ef]
---
0x446 JUMPDEST
0x447 DUP5
0x448 MLOAD
0x449 DUP4
0x44a LT
0x44b ISZERO
0x44c PUSH2 0x4ef
0x44f JUMPI
---
0x446: JUMPDEST 
0x448: V360 = M[S4]
0x44a: V361 = LT S2 V360
0x44b: V362 = ISZERO V361
0x44c: V363 = 0x4ef
0x44f: JUMPI 0x4ef V362
---
Entry stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]

================================

Block 0x450
[0x450:0x45b]
---
Predecessors: [0x446]
Successors: [0x45c, 0x45d]
---
0x450 DUP5
0x451 DUP4
0x452 DUP2
0x453 MLOAD
0x454 DUP2
0x455 LT
0x456 ISZERO
0x457 ISZERO
0x458 PUSH2 0x45d
0x45b JUMPI
---
0x453: V364 = M[S4]
0x455: V365 = LT S2 V364
0x456: V366 = ISZERO V365
0x457: V367 = ISZERO V366
0x458: V368 = 0x45d
0x45b: JUMPI 0x45d V367
---
Entry stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S2]
Exit stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0, S4, S2]

================================

Block 0x45c
[0x45c:0x45c]
---
Predecessors: [0x450]
Successors: []
---
0x45c INVALID
---
0x45c: INVALID 
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x45d
[0x45d:0x46c]
---
Predecessors: [0x450]
Successors: [0x46d, 0x4e4]
---
0x45d JUMPDEST
0x45e PUSH1 0x20
0x460 SWAP1
0x461 DUP2
0x462 MUL
0x463 SWAP1
0x464 SWAP2
0x465 ADD
0x466 ADD
0x467 MLOAD
0x468 ISZERO
0x469 PUSH2 0x4e4
0x46c JUMPI
---
0x45d: JUMPDEST 
0x45e: V369 = 0x20
0x462: V370 = MUL 0x20 S0
0x465: V371 = ADD S1 V370
0x466: V372 = ADD V371 0x20
0x467: V373 = M[V372]
0x468: V374 = ISZERO V373
0x469: V375 = 0x4e4
0x46c: JUMPI 0x4e4 V374
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2]

================================

Block 0x46d
[0x46d:0x478]
---
Predecessors: [0x45d]
Successors: [0x479, 0x47a]
---
0x46d DUP5
0x46e DUP4
0x46f DUP2
0x470 MLOAD
0x471 DUP2
0x472 LT
0x473 ISZERO
0x474 ISZERO
0x475 PUSH2 0x47a
0x478 JUMPI
---
0x470: V376 = M[S4]
0x472: V377 = LT S2 V376
0x473: V378 = ISZERO V377
0x474: V379 = ISZERO V378
0x475: V380 = 0x47a
0x478: JUMPI 0x47a V379
---
Entry stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S2]
Exit stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0, S4, S2]

================================

Block 0x479
[0x479:0x479]
---
Predecessors: [0x46d]
Successors: []
---
0x479 INVALID
---
0x479: INVALID 
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x47a
[0x47a:0x493]
---
Predecessors: [0x46d]
Successors: [0x494, 0x495]
---
0x47a JUMPDEST
0x47b SWAP1
0x47c PUSH1 0x20
0x47e ADD
0x47f SWAP1
0x480 PUSH1 0x20
0x482 MUL
0x483 ADD
0x484 MLOAD
0x485 SWAP2
0x486 POP
0x487 PUSH1 0x8
0x489 DUP3
0x48a DUP2
0x48b SLOAD
0x48c DUP2
0x48d LT
0x48e ISZERO
0x48f ISZERO
0x490 PUSH2 0x495
0x493 JUMPI
---
0x47a: JUMPDEST 
0x47c: V381 = 0x20
0x47e: V382 = ADD 0x20 S1
0x480: V383 = 0x20
0x482: V384 = MUL 0x20 S0
0x483: V385 = ADD V384 V382
0x484: V386 = M[V385]
0x487: V387 = 0x8
0x48b: V388 = S[0x8]
0x48d: V389 = LT V386 V388
0x48e: V390 = ISZERO V389
0x48f: V391 = ISZERO V390
0x490: V392 = 0x495
0x493: JUMPI 0x495 V391
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V386, S2, 0x8, V386]
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, V386, S2, 0x8, V386]

================================

Block 0x494
[0x494:0x494]
---
Predecessors: [0x47a]
Successors: []
---
0x494 INVALID
---
0x494: INVALID 
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, V386, S2, 0x8, V386]
Stack pops: 0
Stack additions: []
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, V386, S2, 0x8, V386]

================================

Block 0x495
[0x495:0x4d0]
---
Predecessors: [0x47a]
Successors: [0x4d1, 0x4da]
---
0x495 JUMPDEST
0x496 PUSH1 0x0
0x498 SWAP2
0x499 DUP3
0x49a MSTORE
0x49b PUSH1 0x20
0x49d DUP3
0x49e SHA3
0x49f PUSH1 0x2
0x4a1 SWAP1
0x4a2 SWAP2
0x4a3 MUL
0x4a4 ADD
0x4a5 SLOAD
0x4a6 PUSH1 0x40
0x4a8 MLOAD
0x4a9 PUSH1 0x1
0x4ab PUSH1 0xa0
0x4ad PUSH1 0x2
0x4af EXP
0x4b0 SUB
0x4b1 SWAP1
0x4b2 SWAP2
0x4b3 AND
0x4b4 SWAP2
0x4b5 DUP11
0x4b6 ISZERO
0x4b7 PUSH2 0x8fc
0x4ba MUL
0x4bb SWAP2
0x4bc DUP12
0x4bd SWAP2
0x4be DUP2
0x4bf DUP2
0x4c0 DUP2
0x4c1 DUP6
0x4c2 DUP9
0x4c3 DUP9
0x4c4 CALL
0x4c5 SWAP4
0x4c6 POP
0x4c7 POP
0x4c8 POP
0x4c9 POP
0x4ca ISZERO
0x4cb DUP1
0x4cc ISZERO
0x4cd PUSH2 0x4da
0x4d0 JUMPI
---
0x495: JUMPDEST 
0x496: V393 = 0x0
0x49a: M[0x0] = 0x8
0x49b: V394 = 0x20
0x49e: V395 = SHA3 0x0 0x20
0x49f: V396 = 0x2
0x4a3: V397 = MUL V386 0x2
0x4a4: V398 = ADD V397 V395
0x4a5: V399 = S[V398]
0x4a6: V400 = 0x40
0x4a8: V401 = M[0x40]
0x4a9: V402 = 0x1
0x4ab: V403 = 0xa0
0x4ad: V404 = 0x2
0x4af: V405 = EXP 0x2 0xa0
0x4b0: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b3: V407 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x4b6: V408 = ISZERO V262
0x4b7: V409 = 0x8fc
0x4ba: V410 = MUL 0x8fc V408
0x4c4: V411 = CALL V410 V407 V262 V401 0x0 V401 0x0
0x4ca: V412 = ISZERO V411
0x4cc: V413 = ISZERO V412
0x4cd: V414 = 0x4da
0x4d0: JUMPI 0x4da V413
---
Entry stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, V386, S2, 0x8, V386]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V412]
Exit stack: [S14, {0x0, 0xba, 0xcb}, S12, S11, S10, V262, V265, V270, S6, S5, S4, V386, S2, V412]

================================

Block 0x4d1
[0x4d1:0x4d9]
---
Predecessors: [0x495]
Successors: []
---
0x4d1 RETURNDATASIZE
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 RETURNDATACOPY
0x4d6 RETURNDATASIZE
0x4d7 PUSH1 0x0
0x4d9 REVERT
---
0x4d1: V415 = RETURNDATASIZE
0x4d2: V416 = 0x0
0x4d5: RETURNDATACOPY 0x0 0x0 V415
0x4d6: V417 = RETURNDATASIZE
0x4d7: V418 = 0x0
0x4d9: REVERT 0x0 V417
---
Entry stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, V386, S1, V412]
Stack pops: 0
Stack additions: []
Exit stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, V386, S1, V412]

================================

Block 0x4da
[0x4da:0x4e3]
---
Predecessors: [0x495]
Successors: [0x4e4]
---
0x4da JUMPDEST
0x4db POP
0x4dc PUSH1 0x3
0x4de DUP1
0x4df SLOAD
0x4e0 DUP10
0x4e1 ADD
0x4e2 SWAP1
0x4e3 SSTORE
---
0x4da: JUMPDEST 
0x4dc: V419 = 0x3
0x4df: V420 = S[0x3]
0x4e1: V421 = ADD V262 V420
0x4e3: S[0x3] = V421
---
Entry stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, V386, S1, V412]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1]
Exit stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, V386, S1]

================================

Block 0x4e4
[0x4e4:0x4ee]
---
Predecessors: [0x45d, 0x4da]
Successors: [0x446]
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x1
0x4e7 SWAP1
0x4e8 SWAP3
0x4e9 ADD
0x4ea SWAP2
0x4eb PUSH2 0x446
0x4ee JUMP
---
0x4e4: JUMPDEST 
0x4e5: V422 = 0x1
0x4e9: V423 = ADD S2 0x1
0x4eb: V424 = 0x446
0x4ee: JUMP 0x446
---
Entry stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V423, S1, S0]
Exit stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, V423, S1, S0]

================================

Block 0x4ef
[0x4ef:0x51f]
---
Predecessors: [0x446]
Successors: [0x520, 0x529]
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x1
0x4f2 SLOAD
0x4f3 PUSH1 0x40
0x4f5 MLOAD
0x4f6 PUSH1 0x1
0x4f8 PUSH1 0xa0
0x4fa PUSH1 0x2
0x4fc EXP
0x4fd SUB
0x4fe SWAP1
0x4ff SWAP2
0x500 AND
0x501 SWAP1
0x502 DUP8
0x503 ISZERO
0x504 PUSH2 0x8fc
0x507 MUL
0x508 SWAP1
0x509 DUP9
0x50a SWAP1
0x50b PUSH1 0x0
0x50d DUP2
0x50e DUP2
0x50f DUP2
0x510 DUP6
0x511 DUP9
0x512 DUP9
0x513 CALL
0x514 SWAP4
0x515 POP
0x516 POP
0x517 POP
0x518 POP
0x519 ISZERO
0x51a DUP1
0x51b ISZERO
0x51c PUSH2 0x529
0x51f JUMPI
---
0x4ef: JUMPDEST 
0x4f0: V425 = 0x1
0x4f2: V426 = S[0x1]
0x4f3: V427 = 0x40
0x4f5: V428 = M[0x40]
0x4f6: V429 = 0x1
0x4f8: V430 = 0xa0
0x4fa: V431 = 0x2
0x4fc: V432 = EXP 0x2 0xa0
0x4fd: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V434 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x503: V435 = ISZERO V270
0x504: V436 = 0x8fc
0x507: V437 = MUL 0x8fc V435
0x50b: V438 = 0x0
0x513: V439 = CALL V437 V434 V270 V428 0x0 V428 0x0
0x519: V440 = ISZERO V439
0x51b: V441 = ISZERO V440
0x51c: V442 = 0x529
0x51f: JUMPI 0x529 V441
---
Entry stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V440]
Exit stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0, V440]

================================

Block 0x520
[0x520:0x528]
---
Predecessors: [0x4ef]
Successors: []
---
0x520 RETURNDATASIZE
0x521 PUSH1 0x0
0x523 DUP1
0x524 RETURNDATACOPY
0x525 RETURNDATASIZE
0x526 PUSH1 0x0
0x528 REVERT
---
0x520: V443 = RETURNDATASIZE
0x521: V444 = 0x0
0x524: RETURNDATACOPY 0x0 0x0 V443
0x525: V445 = RETURNDATASIZE
0x526: V446 = 0x0
0x528: REVERT 0x0 V445
---
Entry stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V440]
Stack pops: 0
Stack additions: []
Exit stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V440]

================================

Block 0x529
[0x529:0x540]
---
Predecessors: [0x4ef]
Successors: [0x541, 0x5c0]
---
0x529 JUMPDEST
0x52a POP
0x52b CALLER
0x52c PUSH1 0x0
0x52e SWAP1
0x52f DUP2
0x530 MSTORE
0x531 PUSH1 0x9
0x533 PUSH1 0x20
0x535 MSTORE
0x536 PUSH1 0x40
0x538 DUP2
0x539 SHA3
0x53a SLOAD
0x53b GT
0x53c ISZERO
0x53d PUSH2 0x5c0
0x540 JUMPI
---
0x529: JUMPDEST 
0x52b: V447 = CALLER
0x52c: V448 = 0x0
0x530: M[0x0] = V447
0x531: V449 = 0x9
0x533: V450 = 0x20
0x535: M[0x20] = 0x9
0x536: V451 = 0x40
0x539: V452 = SHA3 0x0 0x40
0x53a: V453 = S[V452]
0x53b: V454 = GT V453 0x0
0x53c: V455 = ISZERO V454
0x53d: V456 = 0x5c0
0x540: JUMPI 0x5c0 V455
---
Entry stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, V440]
Stack pops: 1
Stack additions: []
Exit stack: [S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1]

================================

Block 0x541
[0x541:0x55d]
---
Predecessors: [0x529]
Successors: [0x55e, 0x55f]
---
0x541 CALLER
0x542 PUSH1 0x0
0x544 SWAP1
0x545 DUP2
0x546 MSTORE
0x547 PUSH1 0x9
0x549 PUSH1 0x20
0x54b MSTORE
0x54c PUSH1 0x40
0x54e SWAP1
0x54f SHA3
0x550 SLOAD
0x551 PUSH1 0x8
0x553 DUP1
0x554 SLOAD
0x555 DUP14
0x556 SWAP3
0x557 SWAP1
0x558 DUP2
0x559 LT
0x55a PUSH2 0x55f
0x55d JUMPI
---
0x541: V457 = CALLER
0x542: V458 = 0x0
0x546: M[0x0] = V457
0x547: V459 = 0x9
0x549: V460 = 0x20
0x54b: M[0x20] = 0x9
0x54c: V461 = 0x40
0x54f: V462 = SHA3 0x0 0x40
0x550: V463 = S[V462]
0x551: V464 = 0x8
0x554: V465 = S[0x8]
0x559: V466 = LT V463 V465
0x55a: V467 = 0x55f
0x55d: JUMPI 0x55f V466
---
Entry stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S10, 0x8, V463]
Exit stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0, S10, 0x8, V463]

================================

Block 0x55e
[0x55e:0x55e]
---
Predecessors: [0x541]
Successors: []
---
0x55e INVALID
---
0x55e: INVALID 
---
Entry stack: [S15, {0x0, 0xba, 0xcb}, S13, S12, S11, V262, V265, V270, S7, S6, S5, S4, S3, S2, 0x8, V463]
Stack pops: 0
Stack additions: []
Exit stack: [S15, {0x0, 0xba, 0xcb}, S13, S12, S11, V262, V265, V270, S7, S6, S5, S4, S3, S2, 0x8, V463]

================================

Block 0x55f
[0x55f:0x5a4]
---
Predecessors: [0x541]
Successors: [0x5a5, 0x5a6]
---
0x55f JUMPDEST
0x560 SWAP1
0x561 PUSH1 0x0
0x563 MSTORE
0x564 PUSH1 0x20
0x566 PUSH1 0x0
0x568 SHA3
0x569 SWAP1
0x56a PUSH1 0x2
0x56c MUL
0x56d ADD
0x56e PUSH1 0x1
0x570 ADD
0x571 SLOAD
0x572 ADD
0x573 PUSH1 0x8
0x575 PUSH1 0x9
0x577 PUSH1 0x0
0x579 CALLER
0x57a PUSH1 0x1
0x57c PUSH1 0xa0
0x57e PUSH1 0x2
0x580 EXP
0x581 SUB
0x582 AND
0x583 PUSH1 0x1
0x585 PUSH1 0xa0
0x587 PUSH1 0x2
0x589 EXP
0x58a SUB
0x58b AND
0x58c DUP2
0x58d MSTORE
0x58e PUSH1 0x20
0x590 ADD
0x591 SWAP1
0x592 DUP2
0x593 MSTORE
0x594 PUSH1 0x20
0x596 ADD
0x597 PUSH1 0x0
0x599 SHA3
0x59a SLOAD
0x59b DUP2
0x59c SLOAD
0x59d DUP2
0x59e LT
0x59f ISZERO
0x5a0 ISZERO
0x5a1 PUSH2 0x5a6
0x5a4 JUMPI
---
0x55f: JUMPDEST 
0x561: V468 = 0x0
0x563: M[0x0] = 0x8
0x564: V469 = 0x20
0x566: V470 = 0x0
0x568: V471 = SHA3 0x0 0x20
0x56a: V472 = 0x2
0x56c: V473 = MUL 0x2 V463
0x56d: V474 = ADD V473 V471
0x56e: V475 = 0x1
0x570: V476 = ADD 0x1 V474
0x571: V477 = S[V476]
0x572: V478 = ADD V477 S2
0x573: V479 = 0x8
0x575: V480 = 0x9
0x577: V481 = 0x0
0x579: V482 = CALLER
0x57a: V483 = 0x1
0x57c: V484 = 0xa0
0x57e: V485 = 0x2
0x580: V486 = EXP 0x2 0xa0
0x581: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x582: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x583: V489 = 0x1
0x585: V490 = 0xa0
0x587: V491 = 0x2
0x589: V492 = EXP 0x2 0xa0
0x58a: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58b: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x58d: M[0x0] = V494
0x58e: V495 = 0x20
0x590: V496 = ADD 0x20 0x0
0x593: M[0x20] = 0x9
0x594: V497 = 0x20
0x596: V498 = ADD 0x20 0x20
0x597: V499 = 0x0
0x599: V500 = SHA3 0x0 0x40
0x59a: V501 = S[V500]
0x59c: V502 = S[0x8]
0x59e: V503 = LT V501 V502
0x59f: V504 = ISZERO V503
0x5a0: V505 = ISZERO V504
0x5a1: V506 = 0x5a6
0x5a4: JUMPI 0x5a6 V505
---
Entry stack: [S15, {0x0, 0xba, 0xcb}, S13, S12, S11, V262, V265, V270, S7, S6, S5, S4, S3, S2, 0x8, V463]
Stack pops: 3
Stack additions: [V478, 0x8, V501]
Exit stack: [S15, {0x0, 0xba, 0xcb}, S13, S12, S11, V262, V265, V270, S7, S6, S5, S4, S3, V478, 0x8, V501]

================================

Block 0x5a5
[0x5a5:0x5a5]
---
Predecessors: [0x55f]
Successors: []
---
0x5a5 INVALID
---
0x5a5: INVALID 
---
Entry stack: [S15, {0x0, 0xba, 0xcb}, S13, S12, S11, V262, V265, V270, S7, S6, S5, S4, S3, V478, 0x8, V501]
Stack pops: 0
Stack additions: []
Exit stack: [S15, {0x0, 0xba, 0xcb}, S13, S12, S11, V262, V265, V270, S7, S6, S5, S4, S3, V478, 0x8, V501]

================================

Block 0x5a6
[0x5a6:0x5bf]
---
Predecessors: [0x55f]
Successors: [0x673]
---
0x5a6 JUMPDEST
0x5a7 SWAP1
0x5a8 PUSH1 0x0
0x5aa MSTORE
0x5ab PUSH1 0x20
0x5ad PUSH1 0x0
0x5af SHA3
0x5b0 SWAP1
0x5b1 PUSH1 0x2
0x5b3 MUL
0x5b4 ADD
0x5b5 PUSH1 0x1
0x5b7 ADD
0x5b8 DUP2
0x5b9 SWAP1
0x5ba SSTORE
0x5bb POP
0x5bc PUSH2 0x673
0x5bf JUMP
---
0x5a6: JUMPDEST 
0x5a8: V507 = 0x0
0x5aa: M[0x0] = 0x8
0x5ab: V508 = 0x20
0x5ad: V509 = 0x0
0x5af: V510 = SHA3 0x0 0x20
0x5b1: V511 = 0x2
0x5b3: V512 = MUL 0x2 V501
0x5b4: V513 = ADD V512 V510
0x5b5: V514 = 0x1
0x5b7: V515 = ADD 0x1 V513
0x5ba: S[V515] = V478
0x5bc: V516 = 0x673
0x5bf: JUMP 0x673
---
Entry stack: [S15, {0x0, 0xba, 0xcb}, S13, S12, S11, V262, V265, V270, S7, S6, S5, S4, S3, V478, 0x8, V501]
Stack pops: 3
Stack additions: []
Exit stack: [S15, {0x0, 0xba, 0xcb}, S13, S12, S11, V262, V265, V270, S7, S6, S5, S4, S3]

================================

Block 0x5c0
[0x5c0:0x672]
---
Predecessors: [0x529]
Successors: [0x673]
---
0x5c0 JUMPDEST
0x5c1 POP
0x5c2 PUSH1 0x40
0x5c4 DUP1
0x5c5 MLOAD
0x5c6 DUP1
0x5c7 DUP3
0x5c8 ADD
0x5c9 DUP3
0x5ca MSTORE
0x5cb CALLER
0x5cc DUP1
0x5cd DUP3
0x5ce MSTORE
0x5cf PUSH1 0x20
0x5d1 DUP1
0x5d2 DUP4
0x5d3 ADD
0x5d4 DUP15
0x5d5 DUP2
0x5d6 MSTORE
0x5d7 PUSH1 0x8
0x5d9 DUP1
0x5da SLOAD
0x5db PUSH1 0x1
0x5dd DUP2
0x5de ADD
0x5df DUP3
0x5e0 SSTORE
0x5e1 PUSH1 0x0
0x5e3 SWAP2
0x5e4 DUP3
0x5e5 MSTORE
0x5e6 SWAP5
0x5e7 MLOAD
0x5e8 PUSH32 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3
0x609 PUSH1 0x2
0x60b DUP8
0x60c MUL
0x60d SWAP1
0x60e DUP2
0x60f ADD
0x610 DUP1
0x611 SLOAD
0x612 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x627 NOT
0x628 AND
0x629 PUSH1 0x1
0x62b PUSH1 0xa0
0x62d PUSH1 0x2
0x62f EXP
0x630 SUB
0x631 SWAP1
0x632 SWAP4
0x633 AND
0x634 SWAP3
0x635 SWAP1
0x636 SWAP3
0x637 OR
0x638 SWAP1
0x639 SWAP2
0x63a SSTORE
0x63b SWAP2
0x63c MLOAD
0x63d PUSH32 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0x65e SWAP1
0x65f SWAP3
0x660 ADD
0x661 SWAP2
0x662 SWAP1
0x663 SWAP2
0x664 SSTORE
0x665 SWAP2
0x666 DUP3
0x667 MSTORE
0x668 PUSH1 0x9
0x66a SWAP1
0x66b MSTORE
0x66c SWAP2
0x66d SWAP1
0x66e SWAP2
0x66f SHA3
0x670 DUP2
0x671 SWAP1
0x672 SSTORE
---
0x5c0: JUMPDEST 
0x5c2: V517 = 0x40
0x5c5: V518 = M[0x40]
0x5c8: V519 = ADD 0x40 V518
0x5ca: M[0x40] = V519
0x5cb: V520 = CALLER
0x5ce: M[V518] = V520
0x5cf: V521 = 0x20
0x5d3: V522 = ADD V518 0x20
0x5d6: M[V522] = S10
0x5d7: V523 = 0x8
0x5da: V524 = S[0x8]
0x5db: V525 = 0x1
0x5de: V526 = ADD V524 0x1
0x5e0: S[0x8] = V526
0x5e1: V527 = 0x0
0x5e5: M[0x0] = 0x8
0x5e7: V528 = M[V518]
0x5e8: V529 = 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3
0x609: V530 = 0x2
0x60c: V531 = MUL V524 0x2
0x60f: V532 = ADD V531 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3
0x611: V533 = S[V532]
0x612: V534 = 0xffffffffffffffffffffffffffffffffffffffff
0x627: V535 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x628: V536 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V533
0x629: V537 = 0x1
0x62b: V538 = 0xa0
0x62d: V539 = 0x2
0x62f: V540 = EXP 0x2 0xa0
0x630: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x633: V542 = AND V528 0xffffffffffffffffffffffffffffffffffffffff
0x637: V543 = OR V542 V536
0x63a: S[V532] = V543
0x63c: V544 = M[V522]
0x63d: V545 = 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0x660: V546 = ADD V531 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0x664: S[V546] = V544
0x667: M[0x0] = V520
0x668: V547 = 0x9
0x66b: M[0x20] = 0x9
0x66f: V548 = SHA3 0x0 0x40
0x672: S[V548] = V524
---
Entry stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V524]
Exit stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, V524]

================================

Block 0x673
[0x673:0x6de]
---
Predecessors: [0x5a6, 0x5c0]
Successors: [0xba, 0xcb]
---
0x673 JUMPDEST
0x674 PUSH1 0x5
0x676 SLOAD
0x677 PUSH1 0x40
0x679 DUP1
0x67a MLOAD
0x67b CALLER
0x67c DUP2
0x67d MSTORE
0x67e PUSH1 0x20
0x680 DUP2
0x681 ADD
0x682 DUP15
0x683 SWAP1
0x684 MSTORE
0x685 CALLVALUE
0x686 DUP2
0x687 DUP4
0x688 ADD
0x689 MSTORE
0x68a PUSH4 0xffffffff
0x68f SWAP1
0x690 SWAP3
0x691 AND
0x692 PUSH1 0x60
0x694 DUP4
0x695 ADD
0x696 MSTORE
0x697 MLOAD
0x698 PUSH32 0x6342f1045b6a14b975e6a6f0d2ab8009735bac57f262c6653db2814477656e56
0x6b9 SWAP2
0x6ba DUP2
0x6bb SWAP1
0x6bc SUB
0x6bd PUSH1 0x80
0x6bf ADD
0x6c0 SWAP1
0x6c1 LOG1
0x6c2 POP
0x6c3 POP
0x6c4 PUSH1 0x2
0x6c6 DUP1
0x6c7 SLOAD
0x6c8 SWAP1
0x6c9 SWAP10
0x6ca ADD
0x6cb SWAP1
0x6cc SWAP9
0x6cd SSTORE
0x6ce POP
0x6cf POP
0x6d0 PUSH1 0x4
0x6d2 DUP1
0x6d3 SLOAD
0x6d4 CALLVALUE
0x6d5 ADD
0x6d6 SWAP1
0x6d7 SSTORE
0x6d8 POP
0x6d9 POP
0x6da POP
0x6db POP
0x6dc POP
0x6dd POP
0x6de JUMP
---
0x673: JUMPDEST 
0x674: V549 = 0x5
0x676: V550 = S[0x5]
0x677: V551 = 0x40
0x67a: V552 = M[0x40]
0x67b: V553 = CALLER
0x67d: M[V552] = V553
0x67e: V554 = 0x20
0x681: V555 = ADD V552 0x20
0x684: M[V555] = S10
0x685: V556 = CALLVALUE
0x688: V557 = ADD 0x40 V552
0x689: M[V557] = V556
0x68a: V558 = 0xffffffff
0x691: V559 = AND V550 0xffffffff
0x692: V560 = 0x60
0x695: V561 = ADD V552 0x60
0x696: M[V561] = V559
0x697: V562 = M[0x40]
0x698: V563 = 0x6342f1045b6a14b975e6a6f0d2ab8009735bac57f262c6653db2814477656e56
0x6bc: V564 = SUB V552 V562
0x6bd: V565 = 0x80
0x6bf: V566 = ADD 0x80 V564
0x6c1: LOG V562 V566 0x6342f1045b6a14b975e6a6f0d2ab8009735bac57f262c6653db2814477656e56
0x6c4: V567 = 0x2
0x6c7: V568 = S[0x2]
0x6ca: V569 = ADD S10 V568
0x6cd: S[0x2] = V569
0x6d0: V570 = 0x4
0x6d3: V571 = S[0x4]
0x6d4: V572 = CALLVALUE
0x6d5: V573 = ADD V572 V571
0x6d7: S[0x4] = V573
0x6de: JUMP {0x0, 0xba, 0xcb}
---
Entry stack: [S12, {0x0, 0xba, 0xcb}, S10, S9, S8, V262, V265, V270, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: []
Exit stack: [S12]

================================

Block 0x6df
[0x6df:0x6ef]
---
Predecessors: [0xd9]
Successors: [0x6f0, 0x6f1]
---
0x6df JUMPDEST
0x6e0 PUSH1 0x0
0x6e2 DUP1
0x6e3 PUSH1 0x8
0x6e5 DUP4
0x6e6 DUP2
0x6e7 SLOAD
0x6e8 DUP2
0x6e9 LT
0x6ea ISZERO
0x6eb ISZERO
0x6ec PUSH2 0x6f1
0x6ef JUMPI
---
0x6df: JUMPDEST 
0x6e0: V574 = 0x0
0x6e3: V575 = 0x8
0x6e7: V576 = S[0x8]
0x6e9: V577 = LT V62 V576
0x6ea: V578 = ISZERO V577
0x6eb: V579 = ISZERO V578
0x6ec: V580 = 0x6f1
0x6ef: JUMPI 0x6f1 V579
---
Entry stack: [V11, 0xe5, V62]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x8, S0]
Exit stack: [V11, 0xe5, V62, 0x0, 0x0, 0x8, V62]

================================

Block 0x6f0
[0x6f0:0x6f0]
---
Predecessors: [0x6df]
Successors: []
---
0x6f0 INVALID
---
0x6f0: INVALID 
---
Entry stack: [V11, 0xe5, V62, 0x0, 0x0, 0x8, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe5, V62, 0x0, 0x0, 0x8, V62]

================================

Block 0x6f1
[0x6f1:0x71a]
---
Predecessors: [0x6df]
Successors: [0x71b, 0x71c]
---
0x6f1 JUMPDEST
0x6f2 PUSH1 0x0
0x6f4 SWAP2
0x6f5 DUP3
0x6f6 MSTORE
0x6f7 PUSH1 0x20
0x6f9 SWAP1
0x6fa SWAP2
0x6fb SHA3
0x6fc PUSH1 0x2
0x6fe SWAP1
0x6ff SWAP2
0x700 MUL
0x701 ADD
0x702 SLOAD
0x703 PUSH1 0x8
0x705 DUP1
0x706 SLOAD
0x707 PUSH1 0x1
0x709 PUSH1 0xa0
0x70b PUSH1 0x2
0x70d EXP
0x70e SUB
0x70f SWAP1
0x710 SWAP3
0x711 AND
0x712 SWAP2
0x713 DUP6
0x714 SWAP1
0x715 DUP2
0x716 LT
0x717 PUSH2 0x71c
0x71a JUMPI
---
0x6f1: JUMPDEST 
0x6f2: V581 = 0x0
0x6f6: M[0x0] = 0x8
0x6f7: V582 = 0x20
0x6fb: V583 = SHA3 0x0 0x20
0x6fc: V584 = 0x2
0x700: V585 = MUL V62 0x2
0x701: V586 = ADD V585 V583
0x702: V587 = S[V586]
0x703: V588 = 0x8
0x706: V589 = S[0x8]
0x707: V590 = 0x1
0x709: V591 = 0xa0
0x70b: V592 = 0x2
0x70d: V593 = EXP 0x2 0xa0
0x70e: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x711: V595 = AND V587 0xffffffffffffffffffffffffffffffffffffffff
0x716: V596 = LT V62 V589
0x717: V597 = 0x71c
0x71a: JUMPI 0x71c V596
---
Entry stack: [V11, 0xe5, V62, 0x0, 0x0, 0x8, V62]
Stack pops: 5
Stack additions: [S4, S3, S2, V595, 0x8, S4]
Exit stack: [V11, 0xe5, V62, 0x0, 0x0, V595, 0x8, V62]

================================

Block 0x71b
[0x71b:0x71b]
---
Predecessors: [0x6f1]
Successors: []
---
0x71b INVALID
---
0x71b: INVALID 
---
Entry stack: [V11, 0xe5, V62, 0x0, 0x0, V595, 0x8, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe5, V62, 0x0, 0x0, V595, 0x8, V62]

================================

Block 0x71c
[0x71c:0x736]
---
Predecessors: [0x6f1]
Successors: [0xe5]
---
0x71c JUMPDEST
0x71d SWAP1
0x71e PUSH1 0x0
0x720 MSTORE
0x721 PUSH1 0x20
0x723 PUSH1 0x0
0x725 SHA3
0x726 SWAP1
0x727 PUSH1 0x2
0x729 MUL
0x72a ADD
0x72b PUSH1 0x1
0x72d ADD
0x72e SLOAD
0x72f SWAP2
0x730 POP
0x731 SWAP2
0x732 POP
0x733 SWAP2
0x734 POP
0x735 SWAP2
0x736 JUMP
---
0x71c: JUMPDEST 
0x71e: V598 = 0x0
0x720: M[0x0] = 0x8
0x721: V599 = 0x20
0x723: V600 = 0x0
0x725: V601 = SHA3 0x0 0x20
0x727: V602 = 0x2
0x729: V603 = MUL 0x2 V62
0x72a: V604 = ADD V603 V601
0x72b: V605 = 0x1
0x72d: V606 = ADD 0x1 V604
0x72e: V607 = S[V606]
0x736: JUMP 0xe5
---
Entry stack: [V11, 0xe5, V62, 0x0, 0x0, V595, 0x8, V62]
Stack pops: 7
Stack additions: [S2, V607]
Exit stack: [V11, V595, V607]

================================

Block 0x737
[0x737:0x766]
---
Predecessors: [0x114, 0x3bf]
Successors: [0x767, 0x776]
---
0x737 JUMPDEST
0x738 PUSH1 0x60
0x73a PUSH1 0x0
0x73c PUSH1 0x60
0x73e DUP1
0x73f PUSH1 0x60
0x741 PUSH1 0x0
0x743 DUP1
0x744 PUSH1 0xa
0x746 SWAP6
0x747 POP
0x748 PUSH1 0x8
0x74a DUP1
0x74b SLOAD
0x74c SWAP1
0x74d POP
0x74e PUSH1 0x40
0x750 MLOAD
0x751 SWAP1
0x752 DUP1
0x753 DUP3
0x754 MSTORE
0x755 DUP1
0x756 PUSH1 0x20
0x758 MUL
0x759 PUSH1 0x20
0x75b ADD
0x75c DUP3
0x75d ADD
0x75e PUSH1 0x40
0x760 MSTORE
0x761 DUP1
0x762 ISZERO
0x763 PUSH2 0x776
0x766 JUMPI
---
0x737: JUMPDEST 
0x738: V608 = 0x60
0x73a: V609 = 0x0
0x73c: V610 = 0x60
0x73f: V611 = 0x60
0x741: V612 = 0x0
0x744: V613 = 0xa
0x748: V614 = 0x8
0x74b: V615 = S[0x8]
0x74e: V616 = 0x40
0x750: V617 = M[0x40]
0x754: M[V617] = V615
0x756: V618 = 0x20
0x758: V619 = MUL 0x20 V615
0x759: V620 = 0x20
0x75b: V621 = ADD 0x20 V619
0x75d: V622 = ADD V617 V621
0x75e: V623 = 0x40
0x760: M[0x40] = V622
0x762: V624 = ISZERO V615
0x763: V625 = 0x776
0x766: JUMPI 0x776 V624
---
Entry stack: [V11, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, {0x11d, 0x3c7}]
Stack pops: 0
Stack additions: [0x60, 0xa, 0x60, 0x60, 0x60, 0x0, 0x0, V617, V615]
Exit stack: [V11, S13, {0x0, 0xba, 0xcb}, S11, S10, S9, V262, V265, V270, S5, S4, S3, S2, S1, {0x11d, 0x3c7}, 0x60, 0xa, 0x60, 0x60, 0x60, 0x0, 0x0, V617, V615]

================================

Block 0x767
[0x767:0x775]
---
Predecessors: [0x737]
Successors: [0x776]
---
0x767 DUP2
0x768 PUSH1 0x20
0x76a ADD
0x76b PUSH1 0x20
0x76d DUP3
0x76e MUL
0x76f DUP1
0x770 CODESIZE
0x771 DUP4
0x772 CODECOPY
0x773 ADD
0x774 SWAP1
0x775 POP
---
0x768: V626 = 0x20
0x76a: V627 = ADD 0x20 V617
0x76b: V628 = 0x20
0x76e: V629 = MUL V615 0x20
0x770: V630 = CODESIZE
0x772: CODECOPY V627 V630 V629
0x773: V631 = ADD V629 V627
---
Entry stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, 0x60, 0x60, 0x60, 0x0, 0x0, V617, V615]
Stack pops: 2
Stack additions: [S1, V631]
Exit stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, 0x60, 0x60, 0x60, 0x0, 0x0, V617, V631]

================================

Block 0x776
[0x776:0x793]
---
Predecessors: [0x737, 0x767]
Successors: [0x794, 0x7a3]
---
0x776 JUMPDEST
0x777 POP
0x778 SWAP5
0x779 POP
0x77a DUP6
0x77b PUSH1 0x40
0x77d MLOAD
0x77e SWAP1
0x77f DUP1
0x780 DUP3
0x781 MSTORE
0x782 DUP1
0x783 PUSH1 0x20
0x785 MUL
0x786 PUSH1 0x20
0x788 ADD
0x789 DUP3
0x78a ADD
0x78b PUSH1 0x40
0x78d MSTORE
0x78e DUP1
0x78f ISZERO
0x790 PUSH2 0x7a3
0x793 JUMPI
---
0x776: JUMPDEST 
0x77b: V632 = 0x40
0x77d: V633 = M[0x40]
0x781: M[V633] = 0xa
0x783: V634 = 0x20
0x785: V635 = MUL 0x20 0xa
0x786: V636 = 0x20
0x788: V637 = ADD 0x20 0x140
0x78a: V638 = ADD V633 0x160
0x78b: V639 = 0x40
0x78d: M[0x40] = V638
0x78f: V640 = ISZERO 0xa
0x790: V641 = 0x7a3
0x793: JUMPI 0x7a3 0x0
---
Entry stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, 0x60, 0x60, 0x60, 0x0, 0x0, V617, S0]
Stack pops: 8
Stack additions: [S7, S1, S5, S4, S3, S2, V633, S7]
Exit stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, 0x60, 0x60, 0x0, 0x0, V633, 0xa]

================================

Block 0x794
[0x794:0x7a2]
---
Predecessors: [0x776]
Successors: [0x7a3]
---
0x794 DUP2
0x795 PUSH1 0x20
0x797 ADD
0x798 PUSH1 0x20
0x79a DUP3
0x79b MUL
0x79c DUP1
0x79d CODESIZE
0x79e DUP4
0x79f CODECOPY
0x7a0 ADD
0x7a1 SWAP1
0x7a2 POP
---
0x795: V642 = 0x20
0x797: V643 = ADD 0x20 V633
0x798: V644 = 0x20
0x79b: V645 = MUL 0xa 0x20
0x79d: V646 = CODESIZE
0x79f: CODECOPY V643 V646 0x140
0x7a0: V647 = ADD 0x140 V643
---
Entry stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, 0x60, 0x60, 0x0, 0x0, V633, 0xa]
Stack pops: 2
Stack additions: [S1, V647]
Exit stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, 0x60, 0x60, 0x0, 0x0, V633, V647]

================================

Block 0x7a3
[0x7a3:0x7c0]
---
Predecessors: [0x776, 0x794]
Successors: [0x7c1, 0x7d0]
---
0x7a3 JUMPDEST
0x7a4 POP
0x7a5 SWAP4
0x7a6 POP
0x7a7 DUP6
0x7a8 PUSH1 0x40
0x7aa MLOAD
0x7ab SWAP1
0x7ac DUP1
0x7ad DUP3
0x7ae MSTORE
0x7af DUP1
0x7b0 PUSH1 0x20
0x7b2 MUL
0x7b3 PUSH1 0x20
0x7b5 ADD
0x7b6 DUP3
0x7b7 ADD
0x7b8 PUSH1 0x40
0x7ba MSTORE
0x7bb DUP1
0x7bc ISZERO
0x7bd PUSH2 0x7d0
0x7c0 JUMPI
---
0x7a3: JUMPDEST 
0x7a8: V648 = 0x40
0x7aa: V649 = M[0x40]
0x7ae: M[V649] = 0xa
0x7b0: V650 = 0x20
0x7b2: V651 = MUL 0x20 0xa
0x7b3: V652 = 0x20
0x7b5: V653 = ADD 0x20 0x140
0x7b7: V654 = ADD V649 0x160
0x7b8: V655 = 0x40
0x7ba: M[0x40] = V654
0x7bc: V656 = ISZERO 0xa
0x7bd: V657 = 0x7d0
0x7c0: JUMPI 0x7d0 0x0
---
Entry stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, 0x60, 0x60, 0x0, 0x0, V633, S0]
Stack pops: 8
Stack additions: [S7, S6, S1, S4, S3, S2, V649, S7]
Exit stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, 0x60, 0x0, 0x0, V649, 0xa]

================================

Block 0x7c1
[0x7c1:0x7cf]
---
Predecessors: [0x7a3]
Successors: [0x7d0]
---
0x7c1 DUP2
0x7c2 PUSH1 0x20
0x7c4 ADD
0x7c5 PUSH1 0x20
0x7c7 DUP3
0x7c8 MUL
0x7c9 DUP1
0x7ca CODESIZE
0x7cb DUP4
0x7cc CODECOPY
0x7cd ADD
0x7ce SWAP1
0x7cf POP
---
0x7c2: V658 = 0x20
0x7c4: V659 = ADD 0x20 V649
0x7c5: V660 = 0x20
0x7c8: V661 = MUL 0xa 0x20
0x7ca: V662 = CODESIZE
0x7cc: CODECOPY V659 V662 0x140
0x7cd: V663 = ADD 0x140 V659
---
Entry stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, 0x60, 0x0, 0x0, V649, 0xa]
Stack pops: 2
Stack additions: [S1, V663]
Exit stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, 0x60, 0x0, 0x0, V649, V663]

================================

Block 0x7d0
[0x7d0:0x7d7]
---
Predecessors: [0x7a3, 0x7c1]
Successors: [0x7d8]
---
0x7d0 JUMPDEST
0x7d1 POP
0x7d2 SWAP3
0x7d3 POP
0x7d4 PUSH1 0x0
0x7d6 SWAP2
0x7d7 POP
---
0x7d0: JUMPDEST 
0x7d4: V664 = 0x0
---
Entry stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, 0x60, 0x0, 0x0, V649, S0]
Stack pops: 5
Stack additions: [S1, 0x0, S2]
Exit stack: [S22, {0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, V649, 0x0, 0x0]

================================

Block 0x7d8
[0x7d8:0x7e0]
---
Predecessors: [0x7d0, 0x8fd]
Successors: [0x7e1, 0x917]
---
0x7d8 JUMPDEST
0x7d9 DUP6
0x7da DUP3
0x7db LT
0x7dc ISZERO
0x7dd PUSH2 0x917
0x7e0 JUMPI
---
0x7d8: JUMPDEST 
0x7db: V665 = LT S1 0xa
0x7dc: V666 = ISZERO V665
0x7dd: V667 = 0x917
0x7e0: JUMPI 0x917 V666
---
Entry stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, S1, {0x0, 0x1, 0x2, 0x3}]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, S1, {0x0, 0x1, 0x2, 0x3}]

================================

Block 0x7e1
[0x7e1:0x7ee]
---
Predecessors: [0x7d8]
Successors: [0x7ef, 0x7f0]
---
0x7e1 PUSH1 0x0
0x7e3 DUP5
0x7e4 DUP4
0x7e5 DUP2
0x7e6 MLOAD
0x7e7 DUP2
0x7e8 LT
0x7e9 ISZERO
0x7ea ISZERO
0x7eb PUSH2 0x7f0
0x7ee JUMPI
---
0x7e1: V668 = 0x0
0x7e6: V669 = M[V633]
0x7e8: V670 = LT S1 V669
0x7e9: V671 = ISZERO V670
0x7ea: V672 = ISZERO V671
0x7eb: V673 = 0x7f0
0x7ee: JUMPI 0x7f0 V672
---
Entry stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, S1, {0x0, 0x1, 0x2, 0x3}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, S3, S1]
Exit stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, S1, {0x0, 0x1, 0x2, 0x3}, 0x0, V633, S1]

================================

Block 0x7ef
[0x7ef:0x7ef]
---
Predecessors: [0x7e1]
Successors: []
---
0x7ef INVALID
---
0x7ef: INVALID 
---
Entry stack: [S23, {0x0, 0xba, 0xcb}, S21, S20, S19, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, S4, {0x0, 0x1, 0x2, 0x3}, 0x0, V633, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S23, {0x0, 0xba, 0xcb}, S21, S20, S19, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, S4, {0x0, 0x1, 0x2, 0x3}, 0x0, V633, S0]

================================

Block 0x7f0
[0x7f0:0x7fd]
---
Predecessors: [0x7e1]
Successors: [0x7fe]
---
0x7f0 JUMPDEST
0x7f1 PUSH1 0x20
0x7f3 SWAP1
0x7f4 DUP2
0x7f5 MUL
0x7f6 SWAP1
0x7f7 SWAP2
0x7f8 ADD
0x7f9 ADD
0x7fa MSTORE
0x7fb POP
0x7fc PUSH1 0x0
---
0x7f0: JUMPDEST 
0x7f1: V674 = 0x20
0x7f5: V675 = MUL 0x20 S0
0x7f8: V676 = ADD V633 V675
0x7f9: V677 = ADD V676 0x20
0x7fa: M[V677] = 0x0
0x7fc: V678 = 0x0
---
Entry stack: [S23, {0x0, 0xba, 0xcb}, S21, S20, S19, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, S4, {0x0, 0x1, 0x2, 0x3}, 0x0, V633, S0]
Stack pops: 4
Stack additions: [0x0]
Exit stack: [S23, {0x0, 0xba, 0xcb}, S21, S20, S19, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, S4, 0x0]

================================

Block 0x7fe
[0x7fe:0x80b]
---
Predecessors: [0x7f0, 0x8d0]
Successors: [0x80c, 0x8d8]
---
0x7fe JUMPDEST
0x7ff PUSH1 0x8
0x801 SLOAD
0x802 PUSH1 0xff
0x804 DUP3
0x805 AND
0x806 LT
0x807 ISZERO
0x808 PUSH2 0x8d8
0x80b JUMPI
---
0x7fe: JUMPDEST 
0x7ff: V679 = 0x8
0x801: V680 = S[0x8]
0x802: V681 = 0xff
0x805: V682 = AND S0 0xff
0x806: V683 = LT V682 V680
0x807: V684 = ISZERO V683
0x808: V685 = 0x8d8
0x80b: JUMPI 0x8d8 V684
---
Entry stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, S1, S0]

================================

Block 0x80c
[0x80c:0x817]
---
Predecessors: [0x7fe]
Successors: [0x818, 0x819]
---
0x80c DUP4
0x80d DUP3
0x80e DUP2
0x80f MLOAD
0x810 DUP2
0x811 LT
0x812 ISZERO
0x813 ISZERO
0x814 PUSH2 0x819
0x817 JUMPI
---
0x80f: V686 = M[V633]
0x811: V687 = LT {0x0, 0x1, 0x2, 0x3} V686
0x812: V688 = ISZERO V687
0x813: V689 = ISZERO V688
0x814: V690 = 0x819
0x817: JUMPI 0x819 V689
---
Entry stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, {0x0, 0x1, 0x2, 0x3}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, S1]
Exit stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, {0x0, 0x1, 0x2, 0x3}, S0, V633, {0x0, 0x1, 0x2, 0x3}]

================================

Block 0x818
[0x818:0x818]
---
Predecessors: [0x80c]
Successors: []
---
0x818 INVALID
---
0x818: INVALID 
---
Entry stack: [S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S4, {0x0, 0x1, 0x2, 0x3}, S2, V633, {0x0, 0x1, 0x2, 0x3}]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S4, {0x0, 0x1, 0x2, 0x3}, S2, V633, {0x0, 0x1, 0x2, 0x3}]

================================

Block 0x819
[0x819:0x833]
---
Predecessors: [0x80c]
Successors: [0x834, 0x835]
---
0x819 JUMPDEST
0x81a SWAP1
0x81b PUSH1 0x20
0x81d ADD
0x81e SWAP1
0x81f PUSH1 0x20
0x821 MUL
0x822 ADD
0x823 MLOAD
0x824 PUSH1 0x8
0x826 DUP3
0x827 PUSH1 0xff
0x829 AND
0x82a DUP2
0x82b SLOAD
0x82c DUP2
0x82d LT
0x82e ISZERO
0x82f ISZERO
0x830 PUSH2 0x835
0x833 JUMPI
---
0x819: JUMPDEST 
0x81b: V691 = 0x20
0x81d: V692 = ADD 0x20 V633
0x81f: V693 = 0x20
0x821: V694 = MUL 0x20 {0x0, 0x1, 0x2, 0x3}
0x822: V695 = ADD V694 V692
0x823: V696 = M[V695]
0x824: V697 = 0x8
0x827: V698 = 0xff
0x829: V699 = AND 0xff S2
0x82b: V700 = S[0x8]
0x82d: V701 = LT V699 V700
0x82e: V702 = ISZERO V701
0x82f: V703 = ISZERO V702
0x830: V704 = 0x835
0x833: JUMPI 0x835 V703
---
Entry stack: [{0x0, 0xba, 0xcb}, S20, S19, S18, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S4, {0x0, 0x1, 0x2, 0x3}, S2, V633, {0x0, 0x1, 0x2, 0x3}]
Stack pops: 3
Stack additions: [S2, V696, 0x8, V699]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, S7, S6, S5, S4, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V696, 0x8, V699]

================================

Block 0x834
[0x834:0x834]
---
Predecessors: [0x819]
Successors: []
---
0x834 INVALID
---
0x834: INVALID 
---
Entry stack: [S21, S20, V207, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V696, 0x8, V699]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, V207, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V696, 0x8, V699]

================================

Block 0x835
[0x835:0x84e]
---
Predecessors: [0x819]
Successors: [0x84f, 0x873]
---
0x835 JUMPDEST
0x836 SWAP1
0x837 PUSH1 0x0
0x839 MSTORE
0x83a PUSH1 0x20
0x83c PUSH1 0x0
0x83e SHA3
0x83f SWAP1
0x840 PUSH1 0x2
0x842 MUL
0x843 ADD
0x844 PUSH1 0x1
0x846 ADD
0x847 SLOAD
0x848 GT
0x849 DUP1
0x84a ISZERO
0x84b PUSH2 0x873
0x84e JUMPI
---
0x835: JUMPDEST 
0x837: V705 = 0x0
0x839: M[0x0] = 0x8
0x83a: V706 = 0x20
0x83c: V707 = 0x0
0x83e: V708 = SHA3 0x0 0x20
0x840: V709 = 0x2
0x842: V710 = MUL 0x2 V699
0x843: V711 = ADD V710 V708
0x844: V712 = 0x1
0x846: V713 = ADD 0x1 V711
0x847: V714 = S[V713]
0x848: V715 = GT V714 V696
0x84a: V716 = ISZERO V715
0x84b: V717 = 0x873
0x84e: JUMPI 0x873 V716
---
Entry stack: [S21, S20, V207, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V696, 0x8, V699]
Stack pops: 3
Stack additions: [V715]
Exit stack: [S21, S20, V207, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V715]

================================

Block 0x84f
[0x84f:0x85e]
---
Predecessors: [0x835]
Successors: [0x85f, 0x860]
---
0x84f POP
0x850 DUP5
0x851 DUP2
0x852 PUSH1 0xff
0x854 AND
0x855 DUP2
0x856 MLOAD
0x857 DUP2
0x858 LT
0x859 ISZERO
0x85a ISZERO
0x85b PUSH2 0x860
0x85e JUMPI
---
0x852: V718 = 0xff
0x854: V719 = AND 0xff {0x0, 0x1, 0x2}
0x856: V720 = M[V617]
0x858: V721 = LT V719 V720
0x859: V722 = ISZERO V721
0x85a: V723 = ISZERO V722
0x85b: V724 = 0x860
0x85e: JUMPI 0x860 V723
---
Entry stack: [S19, S18, V207, V262, V265, V270, S13, S12, S11, S10, S9, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S3, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V715]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S5, V719]
Exit stack: [S19, S18, V207, V262, V265, V270, S13, S12, S11, S10, S9, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S3, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V617, V719]

================================

Block 0x85f
[0x85f:0x85f]
---
Predecessors: [0x84f]
Successors: []
---
0x85f INVALID
---
0x85f: INVALID 
---
Entry stack: [S19, V207, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S4, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V617, V719]
Stack pops: 0
Stack additions: []
Exit stack: [S19, V207, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S4, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V617, V719]

================================

Block 0x860
[0x860:0x872]
---
Predecessors: [0x84f]
Successors: [0x873]
---
0x860 JUMPDEST
0x861 SWAP1
0x862 PUSH1 0x20
0x864 ADD
0x865 SWAP1
0x866 PUSH1 0x20
0x868 MUL
0x869 ADD
0x86a MLOAD
0x86b ISZERO
0x86c ISZERO
0x86d PUSH1 0x1
0x86f ISZERO
0x870 ISZERO
0x871 EQ
0x872 ISZERO
---
0x860: JUMPDEST 
0x862: V725 = 0x20
0x864: V726 = ADD 0x20 V617
0x866: V727 = 0x20
0x868: V728 = MUL 0x20 V719
0x869: V729 = ADD V728 V726
0x86a: V730 = M[V729]
0x86b: V731 = ISZERO V730
0x86c: V732 = ISZERO V731
0x86d: V733 = 0x1
0x86f: V734 = ISZERO 0x1
0x870: V735 = ISZERO 0x0
0x871: V736 = EQ 0x1 V732
0x872: V737 = ISZERO V736
---
Entry stack: [S19, V207, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S4, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V617, V719]
Stack pops: 2
Stack additions: [V737]
Exit stack: [S19, V207, V262, V265, V270, S14, S13, S12, S11, S10, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S4, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, V737]

================================

Block 0x873
[0x873:0x878]
---
Predecessors: [0x835, 0x860]
Successors: [0x879, 0x8d0]
---
0x873 JUMPDEST
0x874 ISZERO
0x875 PUSH2 0x8d0
0x878 JUMPI
---
0x873: JUMPDEST 
0x874: V738 = ISZERO S0
0x875: V739 = 0x8d0
0x878: JUMPI 0x8d0 V738
---
Entry stack: [S19, S18, V207, V262, V265, V270, S13, S12, S11, S10, S9, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S3, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S19, S18, V207, V262, V265, V270, S13, S12, S11, S10, S9, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S3, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}]

================================

Block 0x879
[0x879:0x888]
---
Predecessors: [0x873]
Successors: [0x889, 0x88a]
---
0x879 DUP1
0x87a PUSH1 0xff
0x87c AND
0x87d DUP4
0x87e DUP4
0x87f DUP2
0x880 MLOAD
0x881 DUP2
0x882 LT
0x883 ISZERO
0x884 ISZERO
0x885 PUSH2 0x88a
0x888 JUMPI
---
0x87a: V740 = 0xff
0x87c: V741 = AND 0xff {0x0, 0x1, 0x2}
0x880: V742 = M[S2]
0x882: V743 = LT {0x0, 0x1, 0x2} V742
0x883: V744 = ISZERO V743
0x884: V745 = ISZERO V744
0x885: V746 = 0x88a
0x888: JUMPI 0x88a V745
---
Entry stack: [S18, S17, V207, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}]
Stack pops: 3
Stack additions: [S2, S1, S0, V741, S2, S1]
Exit stack: [S8, 0x11d, 0x60, S5, S4, S3, S2, {0x0, 0x1}, {0x0, 0x1, 0x2}, V741, S2, {0x0, 0x1}]

================================

Block 0x889
[0x889:0x889]
---
Predecessors: [0x879]
Successors: []
---
0x889 INVALID
---
0x889: INVALID 
---
Entry stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, V741, V649, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, V741, V649, {0x0, 0x1}]

================================

Block 0x88a
[0x88a:0x8a3]
---
Predecessors: [0x879]
Successors: [0x8a4, 0x8a5]
---
0x88a JUMPDEST
0x88b PUSH1 0x20
0x88d SWAP1
0x88e DUP2
0x88f MUL
0x890 SWAP1
0x891 SWAP2
0x892 ADD
0x893 ADD
0x894 MSTORE
0x895 PUSH1 0x8
0x897 DUP1
0x898 SLOAD
0x899 PUSH1 0xff
0x89b DUP4
0x89c AND
0x89d SWAP1
0x89e DUP2
0x89f LT
0x8a0 PUSH2 0x8a5
0x8a3 JUMPI
---
0x88a: JUMPDEST 
0x88b: V747 = 0x20
0x88f: V748 = MUL 0x20 {0x0, 0x1}
0x892: V749 = ADD V649 V748
0x893: V750 = ADD V749 0x20
0x894: M[V750] = V741
0x895: V751 = 0x8
0x898: V752 = S[0x8]
0x899: V753 = 0xff
0x89c: V754 = AND {0x0, 0x1, 0x2} 0xff
0x89f: V755 = LT V754 V752
0x8a0: V756 = 0x8a5
0x8a3: JUMPI 0x8a5 V755
---
Entry stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, V741, V649, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S3, 0x8, V754]
Exit stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, 0x8, V754]

================================

Block 0x8a4
[0x8a4:0x8a4]
---
Predecessors: [0x88a]
Successors: []
---
0x8a4 INVALID
---
0x8a4: INVALID 
---
Entry stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, 0x8, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, 0x8, V754]

================================

Block 0x8a5
[0x8a5:0x8c3]
---
Predecessors: [0x88a]
Successors: [0x8c4, 0x8c5]
---
0x8a5 JUMPDEST
0x8a6 SWAP1
0x8a7 PUSH1 0x0
0x8a9 MSTORE
0x8aa PUSH1 0x20
0x8ac PUSH1 0x0
0x8ae SHA3
0x8af SWAP1
0x8b0 PUSH1 0x2
0x8b2 MUL
0x8b3 ADD
0x8b4 PUSH1 0x1
0x8b6 ADD
0x8b7 SLOAD
0x8b8 DUP5
0x8b9 DUP4
0x8ba DUP2
0x8bb MLOAD
0x8bc DUP2
0x8bd LT
0x8be ISZERO
0x8bf ISZERO
0x8c0 PUSH2 0x8c5
0x8c3 JUMPI
---
0x8a5: JUMPDEST 
0x8a7: V757 = 0x0
0x8a9: M[0x0] = 0x8
0x8aa: V758 = 0x20
0x8ac: V759 = 0x0
0x8ae: V760 = SHA3 0x0 0x20
0x8b0: V761 = 0x2
0x8b2: V762 = MUL 0x2 V754
0x8b3: V763 = ADD V762 V760
0x8b4: V764 = 0x1
0x8b6: V765 = ADD 0x1 V763
0x8b7: V766 = S[V765]
0x8bb: V767 = M[V633]
0x8bd: V768 = LT {0x0, 0x1} V767
0x8be: V769 = ISZERO V768
0x8bf: V770 = ISZERO V769
0x8c0: V771 = 0x8c5
0x8c3: JUMPI 0x8c5 V770
---
Entry stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, 0x8, V754]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V766, S5, S3]
Exit stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, V766, V633, {0x0, 0x1}]

================================

Block 0x8c4
[0x8c4:0x8c4]
---
Predecessors: [0x8a5]
Successors: []
---
0x8c4 INVALID
---
0x8c4: INVALID 
---
Entry stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, V766, V633, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, V766, V633, {0x0, 0x1}]

================================

Block 0x8c5
[0x8c5:0x8cf]
---
Predecessors: [0x8a5]
Successors: [0x8d0]
---
0x8c5 JUMPDEST
0x8c6 PUSH1 0x20
0x8c8 SWAP1
0x8c9 DUP2
0x8ca MUL
0x8cb SWAP1
0x8cc SWAP2
0x8cd ADD
0x8ce ADD
0x8cf MSTORE
---
0x8c5: JUMPDEST 
0x8c6: V772 = 0x20
0x8ca: V773 = MUL 0x20 {0x0, 0x1}
0x8cd: V774 = ADD V633 V773
0x8ce: V775 = ADD V774 0x20
0x8cf: M[V775] = V766
---
Entry stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}, V766, V633, {0x0, 0x1}]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x11d, 0x60, 0xa, V617, V633, V649, {0x0, 0x1}, {0x0, 0x1, 0x2}]

================================

Block 0x8d0
[0x8d0:0x8d7]
---
Predecessors: [0x873, 0x8c5]
Successors: [0x7fe]
---
0x8d0 JUMPDEST
0x8d1 PUSH1 0x1
0x8d3 ADD
0x8d4 PUSH2 0x7fe
0x8d7 JUMP
---
0x8d0: JUMPDEST 
0x8d1: V776 = 0x1
0x8d3: V777 = ADD 0x1 {0x0, 0x1, 0x2}
0x8d4: V778 = 0x7fe
0x8d7: JUMP 0x7fe
---
Entry stack: [S18, S17, V207, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2}]
Stack pops: 1
Stack additions: [V777]
Exit stack: [S18, S17, V207, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, {0x0, 0x1, 0x2}, V777]

================================

Block 0x8d8
[0x8d8:0x8e7]
---
Predecessors: [0x7fe]
Successors: [0x8e8, 0x8e9]
---
0x8d8 JUMPDEST
0x8d9 PUSH1 0x1
0x8db DUP6
0x8dc DUP5
0x8dd DUP5
0x8de DUP2
0x8df MLOAD
0x8e0 DUP2
0x8e1 LT
0x8e2 ISZERO
0x8e3 ISZERO
0x8e4 PUSH2 0x8e9
0x8e7 JUMPI
---
0x8d8: JUMPDEST 
0x8d9: V779 = 0x1
0x8df: V780 = M[S2]
0x8e1: V781 = LT {0x0, 0x1, 0x2, 0x3} V780
0x8e2: V782 = ISZERO V781
0x8e3: V783 = ISZERO V782
0x8e4: V784 = 0x8e9
0x8e7: JUMPI 0x8e9 V783
---
Entry stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, {0x0, 0x1, 0x2, 0x3}, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x1, S4, S2, S1]
Exit stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, {0x0, 0x1, 0x2, 0x3}, S0, 0x1, V617, S2, {0x0, 0x1, 0x2, 0x3}]

================================

Block 0x8e8
[0x8e8:0x8e8]
---
Predecessors: [0x8d8]
Successors: []
---
0x8e8 INVALID
---
0x8e8: INVALID 
---
Entry stack: [S22, S21, S20, V262, V265, V270, S16, S15, S14, S13, S12, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S6, {0x0, 0x1, 0x2, 0x3}, {0x0, 0x1, 0x2, 0x3}, 0x1, V617, S1, {0x0, 0x1, 0x2, 0x3}]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, V262, V265, V270, S16, S15, S14, S13, S12, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S6, {0x0, 0x1, 0x2, 0x3}, {0x0, 0x1, 0x2, 0x3}, 0x1, V617, S1, {0x0, 0x1, 0x2, 0x3}]

================================

Block 0x8e9
[0x8e9:0x8fb]
---
Predecessors: [0x8d8]
Successors: [0x8fc, 0x8fd]
---
0x8e9 JUMPDEST
0x8ea PUSH1 0x20
0x8ec SWAP1
0x8ed DUP2
0x8ee MUL
0x8ef SWAP1
0x8f0 SWAP2
0x8f1 ADD
0x8f2 ADD
0x8f3 MLOAD
0x8f4 DUP2
0x8f5 MLOAD
0x8f6 DUP2
0x8f7 LT
0x8f8 PUSH2 0x8fd
0x8fb JUMPI
---
0x8e9: JUMPDEST 
0x8ea: V785 = 0x20
0x8ee: V786 = MUL 0x20 {0x0, 0x1, 0x2, 0x3}
0x8f1: V787 = ADD S1 V786
0x8f2: V788 = ADD V787 0x20
0x8f3: V789 = M[V788]
0x8f5: V790 = M[V617]
0x8f7: V791 = LT V789 V790
0x8f8: V792 = 0x8fd
0x8fb: JUMPI 0x8fd V791
---
Entry stack: [S24, {0x0, 0xba, 0xcb}, S22, S21, S20, V262, V265, V270, S16, S15, S14, S13, S12, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S6, {0x0, 0x1, 0x2, 0x3}, {0x0, 0x1, 0x2, 0x3}, 0x1, V617, S1, {0x0, 0x1, 0x2, 0x3}]
Stack pops: 3
Stack additions: [S2, V789]
Exit stack: [S24, {0x0, 0xba, 0xcb}, S22, S21, S20, V262, V265, V270, S16, S15, S14, S13, S12, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S6, {0x0, 0x1, 0x2, 0x3}, {0x0, 0x1, 0x2, 0x3}, 0x1, V617, V789]

================================

Block 0x8fc
[0x8fc:0x8fc]
---
Predecessors: [0x8e9]
Successors: []
---
0x8fc INVALID
---
0x8fc: INVALID 
---
Entry stack: [S21, S20, V207, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2, 0x3}, 0x1, V617, V789]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, V207, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2, 0x3}, 0x1, V617, V789]

================================

Block 0x8fd
[0x8fd:0x916]
---
Predecessors: [0x8e9]
Successors: [0x7d8]
---
0x8fd JUMPDEST
0x8fe SWAP2
0x8ff ISZERO
0x900 ISZERO
0x901 PUSH1 0x20
0x903 SWAP3
0x904 DUP4
0x905 MUL
0x906 SWAP1
0x907 SWAP2
0x908 ADD
0x909 SWAP1
0x90a SWAP2
0x90b ADD
0x90c MSTORE
0x90d PUSH1 0x1
0x90f SWAP1
0x910 SWAP2
0x911 ADD
0x912 SWAP1
0x913 PUSH2 0x7d8
0x916 JUMP
---
0x8fd: JUMPDEST 
0x8ff: V793 = ISZERO 0x1
0x900: V794 = ISZERO 0x0
0x901: V795 = 0x20
0x905: V796 = MUL 0x20 V789
0x908: V797 = ADD V617 V796
0x90b: V798 = ADD 0x20 V797
0x90c: M[V798] = 0x1
0x90d: V799 = 0x1
0x911: V800 = ADD {0x0, 0x1, 0x2} 0x1
0x913: V801 = 0x7d8
0x916: JUMP 0x7d8
---
Entry stack: [S21, S20, V207, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, {0x0, 0x1, 0x2}, {0x0, 0x1, 0x2, 0x3}, 0x1, V617, V789]
Stack pops: 5
Stack additions: [V800, S3]
Exit stack: [S21, S20, V207, V262, V265, V270, S15, S14, S13, S12, S11, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S5, V800, {0x0, 0x1, 0x2, 0x3}]

================================

Block 0x917
[0x917:0x921]
---
Predecessors: [0x7d8]
Successors: [0x11d, 0x3c7]
---
0x917 JUMPDEST
0x918 POP
0x919 SWAP1
0x91a SWAP6
0x91b SWAP5
0x91c POP
0x91d POP
0x91e POP
0x91f POP
0x920 POP
0x921 JUMP
---
0x917: JUMPDEST 
0x921: JUMP {0x11d, 0x3c7}
---
Entry stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, {0x11d, 0x3c7}, 0x60, 0xa, V617, V633, S2, S1, {0x0, 0x1, 0x2, 0x3}]
Stack pops: 8
Stack additions: [S2]
Exit stack: [S20, {0x0, 0xba, 0xcb}, S18, S17, S16, V262, V265, V270, S12, S11, S10, S9, S8, S2]

================================

Block 0x922
[0x922:0x923]
---
Predecessors: [0x194]
Successors: [0xcb]
---
0x922 JUMPDEST
0x923 JUMP
---
0x922: JUMPDEST 
0x923: JUMP 0xcb
---
Entry stack: [V11, 0xcb]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x924
[0x924:0x948]
---
Predecessors: [0x1a8]
Successors: [0x949, 0x96b]
---
0x924 JUMPDEST
0x925 PUSH1 0x1
0x927 PUSH1 0xa0
0x929 PUSH1 0x2
0x92b EXP
0x92c SUB
0x92d DUP2
0x92e AND
0x92f PUSH1 0x0
0x931 SWAP1
0x932 DUP2
0x933 MSTORE
0x934 PUSH1 0x9
0x936 PUSH1 0x20
0x938 MSTORE
0x939 PUSH1 0x40
0x93b DUP2
0x93c SHA3
0x93d SLOAD
0x93e DUP2
0x93f SWAP1
0x940 DUP2
0x941 DUP1
0x942 DUP3
0x943 GT
0x944 ISZERO
0x945 PUSH2 0x96b
0x948 JUMPI
---
0x924: JUMPDEST 
0x925: V802 = 0x1
0x927: V803 = 0xa0
0x929: V804 = 0x2
0x92b: V805 = EXP 0x2 0xa0
0x92c: V806 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92e: V807 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x92f: V808 = 0x0
0x933: M[0x0] = V807
0x934: V809 = 0x9
0x936: V810 = 0x20
0x938: M[0x20] = 0x9
0x939: V811 = 0x40
0x93c: V812 = SHA3 0x0 0x40
0x93d: V813 = S[V812]
0x943: V814 = GT V813 0x0
0x944: V815 = ISZERO V814
0x945: V816 = 0x96b
0x948: JUMPI 0x96b V815
---
Entry stack: [V11, 0x1bd, V132]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, V813, 0x0]
Exit stack: [V11, 0x1bd, V132, 0x0, 0x0, V813, 0x0]

================================

Block 0x949
[0x949:0x954]
---
Predecessors: [0x924]
Successors: [0x955, 0x956]
---
0x949 PUSH1 0x8
0x94b DUP1
0x94c SLOAD
0x94d DUP4
0x94e SWAP1
0x94f DUP2
0x950 LT
0x951 PUSH2 0x956
0x954 JUMPI
---
0x949: V817 = 0x8
0x94c: V818 = S[0x8]
0x950: V819 = LT V813 V818
0x951: V820 = 0x956
0x954: JUMPI 0x956 V819
---
Entry stack: [V11, 0x1bd, V132, 0x0, 0x0, V813, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x8, S1]
Exit stack: [V11, 0x1bd, V132, 0x0, 0x0, V813, 0x0, 0x8, V813]

================================

Block 0x955
[0x955:0x955]
---
Predecessors: [0x949]
Successors: []
---
0x955 INVALID
---
0x955: INVALID 
---
Entry stack: [V11, 0x1bd, V132, 0x0, 0x0, V813, 0x0, 0x8, V813]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bd, V132, 0x0, 0x0, V813, 0x0, 0x8, V813]

================================

Block 0x956
[0x956:0x96a]
---
Predecessors: [0x949]
Successors: [0x96b]
---
0x956 JUMPDEST
0x957 SWAP1
0x958 PUSH1 0x0
0x95a MSTORE
0x95b PUSH1 0x20
0x95d PUSH1 0x0
0x95f SHA3
0x960 SWAP1
0x961 PUSH1 0x2
0x963 MUL
0x964 ADD
0x965 PUSH1 0x1
0x967 ADD
0x968 SLOAD
0x969 SWAP1
0x96a POP
---
0x956: JUMPDEST 
0x958: V821 = 0x0
0x95a: M[0x0] = 0x8
0x95b: V822 = 0x20
0x95d: V823 = 0x0
0x95f: V824 = SHA3 0x0 0x20
0x961: V825 = 0x2
0x963: V826 = MUL 0x2 V813
0x964: V827 = ADD V826 V824
0x965: V828 = 0x1
0x967: V829 = ADD 0x1 V827
0x968: V830 = S[V829]
---
Entry stack: [V11, 0x1bd, V132, 0x0, 0x0, V813, 0x0, 0x8, V813]
Stack pops: 3
Stack additions: [V830]
Exit stack: [V11, 0x1bd, V132, 0x0, 0x0, V813, V830]

================================

Block 0x96b
[0x96b:0x974]
---
Predecessors: [0x924, 0x956]
Successors: [0x1bd]
---
0x96b JUMPDEST
0x96c SWAP1
0x96d SWAP5
0x96e SWAP1
0x96f SWAP4
0x970 POP
0x971 SWAP2
0x972 POP
0x973 POP
0x974 JUMP
---
0x96b: JUMPDEST 
0x974: JUMP 0x1bd
---
Entry stack: [V11, 0x1bd, V132, 0x0, 0x0, V813, S0]
Stack pops: 6
Stack additions: [S1, S0]
Exit stack: [V11, V813, S0]

================================

Block 0x975
[0x975:0x986]
---
Predecessors: [0x1e2]
Successors: [0x182]
---
0x975 JUMPDEST
0x976 PUSH1 0x9
0x978 PUSH1 0x20
0x97a MSTORE
0x97b PUSH1 0x0
0x97d SWAP1
0x97e DUP2
0x97f MSTORE
0x980 PUSH1 0x40
0x982 SWAP1
0x983 SHA3
0x984 SLOAD
0x985 DUP2
0x986 JUMP
---
0x975: JUMPDEST 
0x976: V831 = 0x9
0x978: V832 = 0x20
0x97a: M[0x20] = 0x9
0x97b: V833 = 0x0
0x97f: M[0x0] = V153
0x980: V834 = 0x40
0x983: V835 = SHA3 0x0 0x40
0x984: V836 = S[V835]
0x986: JUMP 0x182
---
Entry stack: [V11, 0x182, V153]
Stack pops: 2
Stack additions: [S1, V836]
Exit stack: [V11, 0x182, V836]

================================

Block 0x987
[0x987:0x998]
---
Predecessors: [0x203]
Successors: [0x999, 0x99d]
---
0x987 JUMPDEST
0x988 PUSH1 0x5
0x98a SLOAD
0x98b TIMESTAMP
0x98c PUSH4 0xffffffff
0x991 SWAP1
0x992 SWAP2
0x993 AND
0x994 LT
0x995 PUSH2 0x99d
0x998 JUMPI
---
0x987: JUMPDEST 
0x988: V837 = 0x5
0x98a: V838 = S[0x5]
0x98b: V839 = TIMESTAMP
0x98c: V840 = 0xffffffff
0x993: V841 = AND V838 0xffffffff
0x994: V842 = LT V841 V839
0x995: V843 = 0x99d
0x998: JUMPI 0x99d V842
---
Entry stack: [V11, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcb]

================================

Block 0x999
[0x999:0x99c]
---
Predecessors: [0x987]
Successors: []
---
0x999 PUSH1 0x0
0x99b DUP1
0x99c REVERT
---
0x999: V844 = 0x0
0x99c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcb]

================================

Block 0x99d
[0x99d:0x9bb]
---
Predecessors: [0x987]
Successors: [0x9bc, 0x9c0]
---
0x99d JUMPDEST
0x99e PUSH1 0x5
0x9a0 SLOAD
0x9a1 PUSH9 0x10000000000000000
0x9ab SWAP1
0x9ac DIV
0x9ad PUSH1 0x1
0x9af PUSH1 0xa0
0x9b1 PUSH1 0x2
0x9b3 EXP
0x9b4 SUB
0x9b5 AND
0x9b6 CALLER
0x9b7 EQ
0x9b8 PUSH2 0x9c0
0x9bb JUMPI
---
0x99d: JUMPDEST 
0x99e: V845 = 0x5
0x9a0: V846 = S[0x5]
0x9a1: V847 = 0x10000000000000000
0x9ac: V848 = DIV V846 0x10000000000000000
0x9ad: V849 = 0x1
0x9af: V850 = 0xa0
0x9b1: V851 = 0x2
0x9b3: V852 = EXP 0x2 0xa0
0x9b4: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b5: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V848
0x9b6: V855 = CALLER
0x9b7: V856 = EQ V855 V854
0x9b8: V857 = 0x9c0
0x9bb: JUMPI 0x9c0 V856
---
Entry stack: [V11, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcb]

================================

Block 0x9bc
[0x9bc:0x9bf]
---
Predecessors: [0x99d]
Successors: []
---
0x9bc PUSH1 0x0
0x9be DUP1
0x9bf REVERT
---
0x9bc: V858 = 0x0
0x9bf: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcb]

================================

Block 0x9c0
[0x9c0:0x9fe]
---
Predecessors: [0x99d]
Successors: [0x9ff, 0xa08]
---
0x9c0 JUMPDEST
0x9c1 PUSH1 0x5
0x9c3 SLOAD
0x9c4 PUSH1 0x40
0x9c6 MLOAD
0x9c7 PUSH1 0x1
0x9c9 PUSH1 0xa0
0x9cb PUSH1 0x2
0x9cd EXP
0x9ce SUB
0x9cf PUSH9 0x10000000000000000
0x9d9 SWAP1
0x9da SWAP3
0x9db DIV
0x9dc SWAP2
0x9dd SWAP1
0x9de SWAP2
0x9df AND
0x9e0 SWAP1
0x9e1 ADDRESS
0x9e2 BALANCE
0x9e3 DUP1
0x9e4 ISZERO
0x9e5 PUSH2 0x8fc
0x9e8 MUL
0x9e9 SWAP2
0x9ea PUSH1 0x0
0x9ec DUP2
0x9ed DUP2
0x9ee DUP2
0x9ef DUP6
0x9f0 DUP9
0x9f1 DUP9
0x9f2 CALL
0x9f3 SWAP4
0x9f4 POP
0x9f5 POP
0x9f6 POP
0x9f7 POP
0x9f8 ISZERO
0x9f9 DUP1
0x9fa ISZERO
0x9fb PUSH2 0xa08
0x9fe JUMPI
---
0x9c0: JUMPDEST 
0x9c1: V859 = 0x5
0x9c3: V860 = S[0x5]
0x9c4: V861 = 0x40
0x9c6: V862 = M[0x40]
0x9c7: V863 = 0x1
0x9c9: V864 = 0xa0
0x9cb: V865 = 0x2
0x9cd: V866 = EXP 0x2 0xa0
0x9ce: V867 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cf: V868 = 0x10000000000000000
0x9db: V869 = DIV V860 0x10000000000000000
0x9df: V870 = AND V869 0xffffffffffffffffffffffffffffffffffffffff
0x9e1: V871 = ADDRESS
0x9e2: V872 = BALANCE V871
0x9e4: V873 = ISZERO V872
0x9e5: V874 = 0x8fc
0x9e8: V875 = MUL 0x8fc V873
0x9ea: V876 = 0x0
0x9f2: V877 = CALL V875 V870 V872 V862 0x0 V862 0x0
0x9f8: V878 = ISZERO V877
0x9fa: V879 = ISZERO V878
0x9fb: V880 = 0xa08
0x9fe: JUMPI 0xa08 V879
---
Entry stack: [V11, 0xcb]
Stack pops: 0
Stack additions: [V878]
Exit stack: [V11, 0xcb, V878]

================================

Block 0x9ff
[0x9ff:0xa07]
---
Predecessors: [0x9c0]
Successors: []
---
0x9ff RETURNDATASIZE
0xa00 PUSH1 0x0
0xa02 DUP1
0xa03 RETURNDATACOPY
0xa04 RETURNDATASIZE
0xa05 PUSH1 0x0
0xa07 REVERT
---
0x9ff: V881 = RETURNDATASIZE
0xa00: V882 = 0x0
0xa03: RETURNDATACOPY 0x0 0x0 V881
0xa04: V883 = RETURNDATASIZE
0xa05: V884 = 0x0
0xa07: REVERT 0x0 V883
---
Entry stack: [V11, 0xcb, V878]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcb, V878]

================================

Block 0xa08
[0xa08:0xa0a]
---
Predecessors: [0x9c0]
Successors: [0xcb]
---
0xa08 JUMPDEST
0xa09 POP
0xa0a JUMP
---
0xa08: JUMPDEST 
0xa0a: JUMP 0xcb
---
Entry stack: [V11, 0xcb, V878]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa0b
[0xa0b:0xa4c]
---
Predecessors: [0x218]
Successors: [0x261]
---
0xa0b JUMPDEST
0xa0c PUSH1 0x5
0xa0e SLOAD
0xa0f PUSH1 0x2
0xa11 SLOAD
0xa12 PUSH1 0x4
0xa14 SLOAD
0xa15 PUSH1 0x0
0xa17 SWAP3
0xa18 DUP4
0xa19 SWAP3
0xa1a DUP4
0xa1b SWAP3
0xa1c DUP4
0xa1d SWAP3
0xa1e DUP4
0xa1f SWAP3
0xa20 DUP4
0xa21 SWAP3
0xa22 DUP4
0xa23 SWAP3
0xa24 PUSH4 0xffffffff
0xa29 DUP2
0xa2a AND
0xa2b SWAP3
0xa2c ADDRESS
0xa2d BALANCE
0xa2e SWAP3
0xa2f PUSH9 0x10000000000000000
0xa39 SWAP1
0xa3a SWAP3
0xa3b DIV
0xa3c PUSH1 0x1
0xa3e PUSH1 0xa0
0xa40 PUSH1 0x2
0xa42 EXP
0xa43 SUB
0xa44 AND
0xa45 SWAP2
0xa46 PUSH2 0xa4d
0xa49 PUSH2 0x261
0xa4c JUMP
---
0xa0b: JUMPDEST 
0xa0c: V885 = 0x5
0xa0e: V886 = S[0x5]
0xa0f: V887 = 0x2
0xa11: V888 = S[0x2]
0xa12: V889 = 0x4
0xa14: V890 = S[0x4]
0xa15: V891 = 0x0
0xa24: V892 = 0xffffffff
0xa2a: V893 = AND V886 0xffffffff
0xa2c: V894 = ADDRESS
0xa2d: V895 = BALANCE V894
0xa2f: V896 = 0x10000000000000000
0xa3b: V897 = DIV V886 0x10000000000000000
0xa3c: V898 = 0x1
0xa3e: V899 = 0xa0
0xa40: V900 = 0x2
0xa42: V901 = EXP 0x2 0xa0
0xa43: V902 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa44: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff V897
0xa46: V904 = 0xa4d
0xa49: V905 = 0x261
0xa4c: JUMP 0x261
---
Entry stack: [V11, 0x221]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V893, V895, V903, V888, V890, 0xa4d]
Exit stack: [V11, 0x221, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V893, V895, V903, V888, V890, 0xa4d]

================================

Block 0xa4d
[0xa4d:0xa6c]
---
Predecessors: [0x282]
Successors: [0x221]
---
0xa4d JUMPDEST
0xa4e PUSH1 0x3
0xa50 SLOAD
0xa51 PUSH4 0xffffffff
0xa56 SWAP1
0xa57 SWAP7
0xa58 AND
0xa59 SWAP14
0xa5a SWAP5
0xa5b SWAP13
0xa5c POP
0xa5d SWAP3
0xa5e SWAP11
0xa5f POP
0xa60 SWAP1
0xa61 SWAP9
0xa62 POP
0xa63 SWAP7
0xa64 POP
0xa65 SWAP5
0xa66 POP
0xa67 SWAP1
0xa68 SWAP3
0xa69 POP
0xa6a SWAP1
0xa6b POP
0xa6c JUMP
---
0xa4d: JUMPDEST 
0xa4e: V906 = 0x3
0xa50: V907 = S[0x3]
0xa51: V908 = 0xffffffff
0xa58: V909 = AND S5 0xffffffff
0xa6c: JUMP S13
---
Entry stack: [V11, S25, {0x0, 0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, {0x0, 0xba, 0xcb}, S11, S10, 0x0, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, V207]
Stack pops: 14
Stack additions: [V909, S4, S3, S2, S1, S0, V907]
Exit stack: [V11, S25, {0x0, 0xba, 0xcb}, S23, S22, 0x0, 0x0, 0x0, 0x0, S17, S16, S15, S14, V909, S4, S3, S2, S1, V207, V907]

================================

Block 0xa6d
[0xa6d:0xa77]
---
Predecessors: [0x2d2]
Successors: [0xa78, 0xa80]
---
0xa6d JUMPDEST
0xa6e PUSH1 0x0
0xa70 DUP1
0xa71 DUP4
0xa72 ISZERO
0xa73 ISZERO
0xa74 PUSH2 0xa80
0xa77 JUMPI
---
0xa6d: JUMPDEST 
0xa6e: V910 = 0x0
0xa72: V911 = ISZERO V207
0xa73: V912 = ISZERO V911
0xa74: V913 = 0xa80
0xa77: JUMPI 0xa80 V912
---
Entry stack: [V11, S27, {0x0, 0xba, 0xcb}, S25, S24, 0x0, 0x0, 0x0, 0x0, S19, S18, S17, S16, S15, {0x0, 0xba, 0xcb}, S13, S12, V207, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, 0x2de, V207, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [S27, {0xba, 0xcb}, S25, S24, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S16, S15, {0x0, 0xba, 0xcb}, S13, S12, S11, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, 0x2de, S1, S0, 0x0, 0x0]

================================

Block 0xa78
[0xa78:0xa7f]
---
Predecessors: [0xa6d]
Successors: [0xa9c]
---
0xa78 PUSH1 0x0
0xa7a SWAP2
0xa7b POP
0xa7c PUSH2 0xa9c
0xa7f JUMP
---
0xa78: V914 = 0x0
0xa7c: V915 = 0xa9c
0xa7f: JUMP 0xa9c
---
Entry stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, 0x2de, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, 0x2de, S3, S2, 0x0, 0x0]

================================

Block 0xa80
[0xa80:0xa8e]
---
Predecessors: [0xa6d]
Successors: [0xa8f, 0xa90]
---
0xa80 JUMPDEST
0xa81 POP
0xa82 DUP3
0xa83 DUP3
0xa84 MUL
0xa85 DUP3
0xa86 DUP5
0xa87 DUP3
0xa88 DUP2
0xa89 ISZERO
0xa8a ISZERO
0xa8b PUSH2 0xa90
0xa8e JUMPI
---
0xa80: JUMPDEST 
0xa84: V916 = MUL S2 S3
0xa89: V917 = ISZERO S3
0xa8a: V918 = ISZERO V917
0xa8b: V919 = 0xa90
0xa8e: JUMPI 0xa90 V918
---
Entry stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, 0x2de, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V916, S2, S3, V916]
Exit stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, 0x2de, S3, S2, 0x0, V916, S2, S3, V916]

================================

Block 0xa8f
[0xa8f:0xa8f]
---
Predecessors: [0xa80]
Successors: []
---
0xa8f INVALID
---
0xa8f: INVALID 
---
Entry stack: [S32, {0xba, 0xcb}, S30, S29, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S21, S20, {0x0, 0xba, 0xcb}, S18, S17, S16, 0x0, 0x0, 0x0, S12, S11, S10, S9, S8, 0x2de, S6, S5, 0x0, V916, S2, S1, V916]
Stack pops: 0
Stack additions: []
Exit stack: [S32, {0xba, 0xcb}, S30, S29, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S21, S20, {0x0, 0xba, 0xcb}, S18, S17, S16, 0x0, 0x0, 0x0, S12, S11, S10, S9, S8, 0x2de, S6, S5, 0x0, V916, S2, S1, V916]

================================

Block 0xa90
[0xa90:0xa96]
---
Predecessors: [0xa80]
Successors: [0xa97, 0xa98]
---
0xa90 JUMPDEST
0xa91 DIV
0xa92 EQ
0xa93 PUSH2 0xa98
0xa96 JUMPI
---
0xa90: JUMPDEST 
0xa91: V920 = DIV V916 S1
0xa92: V921 = EQ V920 S2
0xa93: V922 = 0xa98
0xa96: JUMPI 0xa98 V921
---
Entry stack: [S32, {0xba, 0xcb}, S30, S29, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S21, S20, {0x0, 0xba, 0xcb}, S18, S17, S16, 0x0, 0x0, 0x0, S12, S11, S10, S9, S8, 0x2de, S6, S5, 0x0, V916, S2, S1, V916]
Stack pops: 3
Stack additions: []
Exit stack: [S32, {0xba, 0xcb}, S30, S29, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S21, S20, {0x0, 0xba, 0xcb}, S18, S17, S16, 0x0, 0x0, 0x0, S12, S11, S10, S9, S8, 0x2de, S6, S5, 0x0, V916]

================================

Block 0xa97
[0xa97:0xa97]
---
Predecessors: [0xa90]
Successors: []
---
0xa97 INVALID
---
0xa97: INVALID 
---
Entry stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, 0x2de, S3, S2, 0x0, V916]
Stack pops: 0
Stack additions: []
Exit stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, 0x2de, S3, S2, 0x0, V916]

================================

Block 0xa98
[0xa98:0xa9b]
---
Predecessors: [0xa90]
Successors: [0xa9c]
---
0xa98 JUMPDEST
0xa99 DUP1
0xa9a SWAP2
0xa9b POP
---
0xa98: JUMPDEST 
---
Entry stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, 0x2de, S3, S2, 0x0, V916]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, 0x2de, S3, S2, V916, V916]

================================

Block 0xa9c
[0xa9c:0xaa2]
---
Predecessors: [0xa78, 0xa98]
Successors: [0x2de]
---
0xa9c JUMPDEST
0xa9d POP
0xa9e SWAP3
0xa9f SWAP2
0xaa0 POP
0xaa1 POP
0xaa2 JUMP
---
0xa9c: JUMPDEST 
0xaa2: JUMP 0x2de
---
Entry stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, 0x2de, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S29, {0xba, 0xcb}, S27, S26, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, S18, S17, {0x0, 0xba, 0xcb}, S15, S14, S13, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, S1]

================================

Block 0xaa3
[0xaa3:0xace]
---
Predecessors: []
Successors: []
---
0xaa3 STOP
0xaa4 LOG1
0xaa5 PUSH6 0x627a7a723058
0xaac SHA3
0xaad SWAP12
0xaae MISSING 0x4f
0xaaf MISSING 0xc3
0xab0 GASPRICE
0xab1 CODESIZE
0xab2 PUSH27 0xe594937f30e07e17a7f90401b215803dc10c69e353e112dc7a3c00
0xace MISSING 0x29
---
0xaa3: STOP 
0xaa4: LOG S0 S1 S2
0xaa5: V923 = 0x627a7a723058
0xaac: V924 = SHA3 0x627a7a723058 S3
0xaae: MISSING 0x4f
0xaaf: MISSING 0xc3
0xab0: V925 = GASPRICE
0xab1: V926 = CODESIZE
0xab2: V927 = 0xe594937f30e07e17a7f90401b215803dc10c69e353e112dc7a3c00
0xace: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V924, 0xe594937f30e07e17a7f90401b215803dc10c69e353e112dc7a3c00, V926, V925]
Exit stack: []

================================

Function 0:
Public function signature: 0x3b9c67e1
Entry block: 0xbd
Exit block: 0xcb
Body: 0xbd, 0xcb

Function 1:
Public function signature: 0x5d200f84
Entry block: 0xcd
Exit block: 0xe5
Body: 0xcd, 0xd5, 0xd9, 0xe5, 0x6df, 0x6f0, 0x6f1, 0x71b, 0x71c

Function 2:
Public function signature: 0x6ce768dd
Entry block: 0x108
Exit block: 0x159
Body: 0x108, 0x110, 0x114, 0x11d, 0x141, 0x14a, 0x159

Function 3:
Public function signature: 0x884ca7b1
Entry block: 0x16d
Exit block: 0x182
Body: 0x16d, 0x175, 0x179, 0x182

Function 4:
Public function signature: 0x8ed8067e
Entry block: 0x194
Exit block: 0xcb
Body: 0xcb, 0x194, 0x922

Function 5:
Public function signature: 0xb3c49c77
Entry block: 0x19c
Exit block: 0x1bd
Body: 0x19c, 0x1a4, 0x1a8, 0x1bd, 0x924, 0x949, 0x955, 0x956, 0x96b

Function 6:
Public function signature: 0xbb4d7363
Entry block: 0x1d6
Exit block: 0x182
Body: 0x182, 0x1d6, 0x1de, 0x1e2, 0x975

Function 7:
Public function signature: 0xc885bc58
Entry block: 0x1f7
Exit block: 0xcb
Body: 0xcb, 0x1f7, 0x1ff, 0x203, 0x987, 0x999, 0x99d, 0x9bc, 0x9c0, 0x9ff, 0xa08

Function 8:
Public function signature: 0xda2a97d8
Entry block: 0x20c
Exit block: 0x221
Body: 0x20c, 0x214, 0x218, 0x221, 0xa0b, 0xa4d

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0xba
Body: 0x98, 0xa2, 0xab, 0xac, 0xba

Function 10:
Private function
Entry block: 0x261
Exit block: 0x282
Body: 0x261, 0x275, 0x282

Function 11:
Private function
Entry block: 0x737
Exit block: 0x917
Body: 0x737, 0x767, 0x776, 0x794, 0x7a3, 0x7c1, 0x7d0, 0x7d8, 0x7e1, 0x7f0, 0x7fe, 0x80c, 0x819, 0x835, 0x84f, 0x860, 0x873, 0x879, 0x88a, 0x8a5, 0x8c5, 0x8d0, 0x8d8, 0x8e9, 0x8fd, 0x917

Function 12:
Private function
Entry block: 0x28c
Exit block: 0x673
Body: 0x28c, 0x2a5, 0x2b4, 0x2ca, 0x2d2, 0x2de, 0x2ea, 0x35f, 0x365, 0x36b, 0x378, 0x3bd, 0x3bf, 0x3bf, 0x3c7, 0x3d8, 0x3f3, 0x438, 0x446, 0x450, 0x45d, 0x46d, 0x47a, 0x495, 0x4da, 0x4e4, 0x4ef, 0x529, 0x541, 0x55f, 0x5a6, 0x5c0, 0x673, 0xa6d, 0xa78, 0xa80, 0xa90, 0xa98, 0xa9c

