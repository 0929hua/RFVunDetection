args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/8/107476.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0x17]
---
Predecessors: []
Successors: [0x18, 0x24]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x2d175f11
0x13 DUP2
0x14 EQ
0x15 PUSH1 0x24
0x17 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x2d175f11
0x14: V9 = EQ V7 0x2d175f11
0x15: V10 = 0x24
0x17: JUMPI 0x24 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x18
[0x18:0x21]
---
Predecessors: [0x0]
Successors: [0x22, 0x4b]
---
0x18 DUP1
0x19 PUSH4 0x86da69f0
0x1e EQ
0x1f PUSH1 0x4b
0x21 JUMPI
---
0x19: V11 = 0x86da69f0
0x1e: V12 = EQ 0x86da69f0 V7
0x1f: V13 = 0x4b
0x21: JUMPI 0x4b V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x22
[0x22:0x23]
---
Predecessors: [0x18, 0x8d]
Successors: []
---
0x22 JUMPDEST
0x23 STOP
---
0x22: JUMPDEST 
0x23: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x24
[0x24:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x8d]
---
0x24 JUMPDEST
0x25 PUSH1 0x22
0x27 PUSH1 0x0
0x29 SLOAD
0x2a PUSH1 0x1
0x2c PUSH1 0xa0
0x2e PUSH1 0x2
0x30 EXP
0x31 SUB
0x32 SWAP1
0x33 DUP2
0x34 AND
0x35 CALLER
0x36 SWAP1
0x37 SWAP2
0x38 AND
0x39 EQ
0x3a ISZERO
0x3b PUSH1 0x8d
0x3d JUMPI
---
0x24: JUMPDEST 
0x25: V14 = 0x22
0x27: V15 = 0x0
0x29: V16 = S[0x0]
0x2a: V17 = 0x1
0x2c: V18 = 0xa0
0x2e: V19 = 0x2
0x30: V20 = EXP 0x2 0xa0
0x31: V21 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34: V22 = AND 0xffffffffffffffffffffffffffffffffffffffff V16
0x35: V23 = CALLER
0x38: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x39: V25 = EQ V24 V22
0x3a: V26 = ISZERO V25
0x3b: V27 = 0x8d
0x3d: JUMPI 0x8d V26
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x22]
Exit stack: [V7, 0x22]

================================

Block 0x3e
[0x3e:0x4a]
---
Predecessors: [0x24]
Successors: []
---
0x3e PUSH1 0x0
0x40 SLOAD
0x41 PUSH1 0x1
0x43 PUSH1 0xa0
0x45 PUSH1 0x2
0x47 EXP
0x48 SUB
0x49 AND
0x4a SELFDESTRUCT
---
0x3e: V28 = 0x0
0x40: V29 = S[0x0]
0x41: V30 = 0x1
0x43: V31 = 0xa0
0x45: V32 = 0x2
0x47: V33 = EXP 0x2 0xa0
0x48: V34 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x4a: SELFDESTRUCT V35
---
Entry stack: [V7, 0x22]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x22]

================================

Block 0x4b
[0x4b:0x5e]
---
Predecessors: [0x18]
Successors: [0x5f, 0x62]
---
0x4b JUMPDEST
0x4c PUSH1 0x22
0x4e ADDRESS
0x4f PUSH1 0x1
0x51 PUSH1 0xa0
0x53 PUSH1 0x2
0x55 EXP
0x56 SUB
0x57 AND
0x58 BALANCE
0x59 CALLVALUE
0x5a GT
0x5b ISZERO
0x5c PUSH1 0x62
0x5e JUMPI
---
0x4b: JUMPDEST 
0x4c: V36 = 0x22
0x4e: V37 = ADDRESS
0x4f: V38 = 0x1
0x51: V39 = 0xa0
0x53: V40 = 0x2
0x55: V41 = EXP 0x2 0xa0
0x56: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x58: V44 = BALANCE V43
0x59: V45 = CALLVALUE
0x5a: V46 = GT V45 V44
0x5b: V47 = ISZERO V46
0x5c: V48 = 0x62
0x5e: JUMPI 0x62 V47
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x22]
Exit stack: [V7, 0x22]

================================

Block 0x5f
[0x5f:0x61]
---
Predecessors: [0x4b]
Successors: [0x8d]
---
0x5f PUSH1 0x8d
0x61 JUMP
---
0x5f: V49 = 0x8d
0x61: JUMP 0x8d
---
Entry stack: [V7, 0x22]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x22]

================================

Block 0x62
[0x62:0x6d]
---
Predecessors: [0x4b]
Successors: [0x6e, 0x8d]
---
0x62 JUMPDEST
0x63 PUSH1 0x2
0x65 TIMESTAMP
0x66 MOD
0x67 PUSH1 0x1
0x69 EQ
0x6a ISZERO
0x6b PUSH1 0x8d
0x6d JUMPI
---
0x62: JUMPDEST 
0x63: V50 = 0x2
0x65: V51 = TIMESTAMP
0x66: V52 = MOD V51 0x2
0x67: V53 = 0x1
0x69: V54 = EQ 0x1 V52
0x6a: V55 = ISZERO V54
0x6b: V56 = 0x8d
0x6d: JUMPI 0x8d V55
---
Entry stack: [V7, 0x22]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x22]

================================

Block 0x6e
[0x6e:0x8c]
---
Predecessors: [0x62]
Successors: [0x8d]
---
0x6e CALLER
0x6f PUSH1 0x1
0x71 PUSH1 0xa0
0x73 PUSH1 0x2
0x75 EXP
0x76 SUB
0x77 AND
0x78 PUSH1 0x0
0x7a PUSH1 0x2
0x7c CALLVALUE
0x7d MUL
0x7e PUSH1 0x60
0x80 DUP3
0x81 DUP2
0x82 DUP2
0x83 DUP2
0x84 DUP6
0x85 DUP9
0x86 DUP4
0x87 CALL
0x88 POP
0x89 POP
0x8a POP
0x8b POP
0x8c POP
---
0x6e: V57 = CALLER
0x6f: V58 = 0x1
0x71: V59 = 0xa0
0x73: V60 = 0x2
0x75: V61 = EXP 0x2 0xa0
0x76: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x78: V64 = 0x0
0x7a: V65 = 0x2
0x7c: V66 = CALLVALUE
0x7d: V67 = MUL V66 0x2
0x7e: V68 = 0x60
0x87: V69 = CALL 0x0 V63 V67 0x60 0x0 0x60 0x0
---
Entry stack: [V7, 0x22]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x22]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x24, 0x5f, 0x62, 0x6e]
Successors: [0x22]
---
0x8d JUMPDEST
0x8e JUMP
---
0x8d: JUMPDEST 
0x8e: JUMP 0x22
---
Entry stack: [V7, 0x22]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Function 0:
Public function signature: 0x2d175f11
Entry block: 0x24
Exit block: 0x22
Body: 0x22, 0x24, 0x3e, 0x8d

Function 1:
Public function signature: 0x86da69f0
Entry block: 0x4b
Exit block: 0x22
Body: 0x22, 0x4b, 0x5f, 0x62, 0x6e, 0x8d

Function 2:
Public fallback function
Entry block: 0x22
Exit block: 0x22
Body: 0x22

