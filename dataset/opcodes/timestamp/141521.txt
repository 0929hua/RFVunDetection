Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x213]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x213
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x213
0x24: JUMPI 0x213 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x228]
---
0x25 DUP1
0x26 PUSH4 0x92e1df6
0x2b EQ
0x2c PUSH2 0x228
0x2f JUMPI
---
0x26: V16 = 0x92e1df6
0x2b: V17 = EQ 0x92e1df6 V12
0x2c: V18 = 0x228
0x2f: JUMPI 0x228 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x23e]
---
0x30 DUP1
0x31 PUSH4 0x17ffc320
0x36 EQ
0x37 PUSH2 0x23e
0x3a JUMPI
---
0x31: V19 = 0x17ffc320
0x36: V20 = EQ 0x17ffc320 V12
0x37: V21 = 0x23e
0x3a: JUMPI 0x23e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x25d]
---
0x3b DUP1
0x3c PUSH4 0x8e911839
0x41 EQ
0x42 PUSH2 0x25d
0x45 JUMPI
---
0x3c: V22 = 0x8e911839
0x41: V23 = EQ 0x8e911839 V12
0x42: V24 = 0x25d
0x45: JUMPI 0x25d V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x282]
---
0x46 DUP1
0x47 PUSH4 0xa035b1fe
0x4c EQ
0x4d PUSH2 0x282
0x50 JUMPI
---
0x47: V25 = 0xa035b1fe
0x4c: V26 = EQ 0xa035b1fe V12
0x4d: V27 = 0x282
0x50: JUMPI 0x282 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x295]
---
0x51 DUP1
0x52 PUSH4 0xa48a1b41
0x57 EQ
0x58 PUSH2 0x295
0x5b JUMPI
---
0x52: V28 = 0xa48a1b41
0x57: V29 = EQ 0xa48a1b41 V12
0x58: V30 = 0x295
0x5b: JUMPI 0x295 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2b4]
---
0x5c DUP1
0x5d PUSH4 0xaad7c2ea
0x62 EQ
0x63 PUSH2 0x2b4
0x66 JUMPI
---
0x5d: V31 = 0xaad7c2ea
0x62: V32 = EQ 0xaad7c2ea V12
0x63: V33 = 0x2b4
0x66: JUMPI 0x2b4 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x2e3]
---
0x67 DUP1
0x68 PUSH4 0xad2f7ebb
0x6d EQ
0x6e PUSH2 0x2e3
0x71 JUMPI
---
0x68: V34 = 0xad2f7ebb
0x6d: V35 = EQ 0xad2f7ebb V12
0x6e: V36 = 0x2e3
0x71: JUMPI 0x2e3 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x30a]
---
0x72 DUP1
0x73 PUSH4 0xb308b512
0x78 EQ
0x79 PUSH2 0x30a
0x7c JUMPI
---
0x73: V37 = 0xb308b512
0x78: V38 = EQ 0xb308b512 V12
0x79: V39 = 0x30a
0x7c: JUMPI 0x30a V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x31d]
---
0x7d DUP1
0x7e PUSH4 0xb3f05b97
0x83 EQ
0x84 PUSH2 0x31d
0x87 JUMPI
---
0x7e: V40 = 0xb3f05b97
0x83: V41 = EQ 0xb3f05b97 V12
0x84: V42 = 0x31d
0x87: JUMPI 0x31d V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x330]
---
0x88 DUP1
0x89 PUSH4 0xc0ee0b8a
0x8e EQ
0x8f PUSH2 0x330
0x92 JUMPI
---
0x89: V43 = 0xc0ee0b8a
0x8e: V44 = EQ 0xc0ee0b8a V12
0x8f: V45 = 0x330
0x92: JUMPI 0x330 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x35f]
---
0x93 DUP1
0x94 PUSH4 0xc6f221aa
0x99 EQ
0x9a PUSH2 0x35f
0x9d JUMPI
---
0x94: V46 = 0xc6f221aa
0x99: V47 = EQ 0xc6f221aa V12
0x9a: V48 = 0x35f
0x9d: JUMPI 0x35f V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x372]
---
0x9e DUP1
0x9f PUSH4 0xd424f628
0xa4 EQ
0xa5 PUSH2 0x372
0xa8 JUMPI
---
0x9f: V49 = 0xd424f628
0xa4: V50 = EQ 0xd424f628 V12
0xa5: V51 = 0x372
0xa8: JUMPI 0x372 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x385]
---
0xa9 DUP1
0xaa PUSH4 0xee3b09ca
0xaf EQ
0xb0 PUSH2 0x385
0xb3 JUMPI
---
0xaa: V52 = 0xee3b09ca
0xaf: V53 = EQ 0xee3b09ca V12
0xb0: V54 = 0x385
0xb3: JUMPI 0x385 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x398]
---
0xb4 DUP1
0xb5 PUSH4 0xf2fde38b
0xba EQ
0xbb PUSH2 0x398
0xbe JUMPI
---
0xb5: V55 = 0xf2fde38b
0xba: V56 = EQ 0xf2fde38b V12
0xbb: V57 = 0x398
0xbe: JUMPI 0x398 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xd4]
---
Predecessors: [0x0, 0xb4]
Successors: [0xd5, 0xd9]
---
0xbf JUMPDEST
0xc0 PUSH1 0x8
0xc2 SLOAD
0xc3 PUSH1 0x0
0xc5 SWAP1
0xc6 DUP2
0xc7 SWAP1
0xc8 PUSH2 0x100
0xcb SWAP1
0xcc DIV
0xcd PUSH1 0xff
0xcf AND
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xbf: JUMPDEST 
0xc0: V58 = 0x8
0xc2: V59 = S[0x8]
0xc3: V60 = 0x0
0xc8: V61 = 0x100
0xcc: V62 = DIV V59 0x100
0xcd: V63 = 0xff
0xcf: V64 = AND 0xff V62
0xd0: V65 = ISZERO V64
0xd1: V66 = 0xd9
0xd4: JUMPI 0xd9 V65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x0, 0x0]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xbf]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V67 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0]

================================

Block 0xd9
[0xd9:0xe1]
---
Predecessors: [0xbf]
Successors: [0xe2, 0xe6]
---
0xd9 JUMPDEST
0xda PUSH1 0x0
0xdc CALLVALUE
0xdd GT
0xde PUSH2 0xe6
0xe1 JUMPI
---
0xd9: JUMPDEST 
0xda: V68 = 0x0
0xdc: V69 = CALLVALUE
0xdd: V70 = GT V69 0x0
0xde: V71 = 0xe6
0xe1: JUMPI 0xe6 V70
---
Entry stack: [V12, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0xd9]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V72 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0]

================================

Block 0xe6
[0xe6:0xf4]
---
Predecessors: [0xd9]
Successors: [0xf5, 0xf6]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 SWAP2
0xe9 POP
0xea PUSH1 0x4
0xec SLOAD
0xed DUP3
0xee DUP2
0xef ISZERO
0xf0 ISZERO
0xf1 PUSH2 0xf6
0xf4 JUMPI
---
0xe6: JUMPDEST 
0xe7: V73 = CALLVALUE
0xea: V74 = 0x4
0xec: V75 = S[0x4]
0xef: V76 = ISZERO V75
0xf0: V77 = ISZERO V76
0xf1: V78 = 0xf6
0xf4: JUMPI 0xf6 V77
---
Entry stack: [V12, 0x0, 0x0]
Stack pops: 2
Stack additions: [V73, S0, V75, V73]
Exit stack: [V12, V73, 0x0, V75, V73]

================================

Block 0xf5
[0xf5:0xf5]
---
Predecessors: [0xe6]
Successors: []
---
0xf5 INVALID
---
0xf5: INVALID 
---
Entry stack: [V12, V73, 0x0, V75, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V73, 0x0, V75, V73]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xe6]
Successors: [0xfa]
---
0xf6 JUMPDEST
0xf7 DIV
0xf8 SWAP1
0xf9 POP
---
0xf6: JUMPDEST 
0xf7: V79 = DIV V73 V75
---
Entry stack: [V12, V73, 0x0, V75, V73]
Stack pops: 3
Stack additions: [V79]
Exit stack: [V12, V73, V79]

================================

Block 0xfa
[0xfa:0x104]
---
Predecessors: [0xf6, 0x110]
Successors: [0x105, 0x115]
---
0xfa JUMPDEST
0xfb PUSH1 0x5
0xfd SLOAD
0xfe DUP2
0xff GT
0x100 ISZERO
0x101 PUSH2 0x115
0x104 JUMPI
---
0xfa: JUMPDEST 
0xfb: V80 = 0x5
0xfd: V81 = S[0x5]
0xff: V82 = GT V79 V81
0x100: V83 = ISZERO V82
0x101: V84 = 0x115
0x104: JUMPI 0x115 V83
---
Entry stack: [V12, V73, V79]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V73, V79]

================================

Block 0x105
[0x105:0x10f]
---
Predecessors: [0xfa]
Successors: [0x3b7]
---
0x105 PUSH2 0x110
0x108 PUSH3 0xbde31
0x10c PUSH2 0x3b7
0x10f JUMP
---
0x105: V85 = 0x110
0x108: V86 = 0xbde31
0x10c: V87 = 0x3b7
0x10f: JUMP 0x3b7
---
Entry stack: [V12, V73, V79]
Stack pops: 0
Stack additions: [0x110, 0xbde31]
Exit stack: [V12, V73, V79, 0x110, 0xbde31]

================================

Block 0x110
[0x110:0x114]
---
Predecessors: [0x419]
Successors: [0xfa]
---
0x110 JUMPDEST
0x111 PUSH2 0xfa
0x114 JUMP
---
0x110: JUMPDEST 
0x111: V88 = 0xfa
0x114: JUMP 0xfa
---
Entry stack: [V12, V73, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V73, V79]

================================

Block 0x115
[0x115:0x19a]
---
Predecessors: [0xfa]
Successors: [0x19b, 0x19f]
---
0x115 JUMPDEST
0x116 PUSH1 0x1
0x118 PUSH1 0xa0
0x11a PUSH1 0x2
0x11c EXP
0x11d SUB
0x11e CALLER
0x11f DUP2
0x120 DUP2
0x121 AND
0x122 PUSH1 0x0
0x124 SWAP1
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x7
0x129 PUSH1 0x20
0x12b MSTORE
0x12c PUSH1 0x40
0x12e DUP1
0x12f DUP3
0x130 SHA3
0x131 DUP1
0x132 SLOAD
0x133 DUP8
0x134 ADD
0x135 SWAP1
0x136 SSTORE
0x137 PUSH1 0x2
0x139 DUP1
0x13a SLOAD
0x13b DUP8
0x13c ADD
0x13d SWAP1
0x13e SSTORE
0x13f PUSH1 0x5
0x141 DUP1
0x142 SLOAD
0x143 DUP7
0x144 SWAP1
0x145 SUB
0x146 SWAP1
0x147 SSTORE
0x148 PUSH1 0x6
0x14a SLOAD
0x14b SWAP1
0x14c SWAP4
0x14d AND
0x14e SWAP3
0x14f PUSH4 0xa9059cbb
0x154 SWAP3
0x155 SWAP2
0x156 DUP6
0x157 SWAP2
0x158 MLOAD
0x159 PUSH1 0x20
0x15b ADD
0x15c MSTORE
0x15d PUSH1 0x40
0x15f MLOAD
0x160 PUSH1 0xe0
0x162 PUSH1 0x2
0x164 EXP
0x165 PUSH4 0xffffffff
0x16a DUP6
0x16b AND
0x16c MUL
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 SWAP1
0x178 SWAP3
0x179 AND
0x17a PUSH1 0x4
0x17c DUP4
0x17d ADD
0x17e MSTORE
0x17f PUSH1 0x24
0x181 DUP3
0x182 ADD
0x183 MSTORE
0x184 PUSH1 0x44
0x186 ADD
0x187 PUSH1 0x20
0x189 PUSH1 0x40
0x18b MLOAD
0x18c DUP1
0x18d DUP4
0x18e SUB
0x18f DUP2
0x190 PUSH1 0x0
0x192 DUP8
0x193 DUP1
0x194 EXTCODESIZE
0x195 ISZERO
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x115: JUMPDEST 
0x116: V89 = 0x1
0x118: V90 = 0xa0
0x11a: V91 = 0x2
0x11c: V92 = EXP 0x2 0xa0
0x11d: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V94 = CALLER
0x121: V95 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x122: V96 = 0x0
0x126: M[0x0] = V95
0x127: V97 = 0x7
0x129: V98 = 0x20
0x12b: M[0x20] = 0x7
0x12c: V99 = 0x40
0x130: V100 = SHA3 0x0 0x40
0x132: V101 = S[V100]
0x134: V102 = ADD V73 V101
0x136: S[V100] = V102
0x137: V103 = 0x2
0x13a: V104 = S[0x2]
0x13c: V105 = ADD V73 V104
0x13e: S[0x2] = V105
0x13f: V106 = 0x5
0x142: V107 = S[0x5]
0x145: V108 = SUB V107 V79
0x147: S[0x5] = V108
0x148: V109 = 0x6
0x14a: V110 = S[0x6]
0x14d: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x14f: V112 = 0xa9059cbb
0x158: V113 = M[0x40]
0x159: V114 = 0x20
0x15b: V115 = ADD 0x20 V113
0x15c: M[V115] = 0x0
0x15d: V116 = 0x40
0x15f: V117 = M[0x40]
0x160: V118 = 0xe0
0x162: V119 = 0x2
0x164: V120 = EXP 0x2 0xe0
0x165: V121 = 0xffffffff
0x16b: V122 = AND 0xa9059cbb 0xffffffff
0x16c: V123 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x16e: M[V117] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x16f: V124 = 0x1
0x171: V125 = 0xa0
0x173: V126 = 0x2
0x175: V127 = EXP 0x2 0xa0
0x176: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V129 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V130 = 0x4
0x17d: V131 = ADD V117 0x4
0x17e: M[V131] = V129
0x17f: V132 = 0x24
0x182: V133 = ADD V117 0x24
0x183: M[V133] = V79
0x184: V134 = 0x44
0x186: V135 = ADD 0x44 V117
0x187: V136 = 0x20
0x189: V137 = 0x40
0x18b: V138 = M[0x40]
0x18e: V139 = SUB V135 V138
0x190: V140 = 0x0
0x194: V141 = EXTCODESIZE V111
0x195: V142 = ISZERO V141
0x196: V143 = ISZERO V142
0x197: V144 = 0x19f
0x19a: JUMPI 0x19f V143
---
Entry stack: [V12, V73, V79]
Stack pops: 2
Stack additions: [S1, S0, V111, 0xa9059cbb, V135, 0x20, V138, V139, V138, 0x0, V111]
Exit stack: [V12, V73, V79, V111, 0xa9059cbb, V135, 0x20, V138, V139, V138, 0x0, V111]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x115]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V145 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V12, V73, V79, V111, 0xa9059cbb, V135, 0x20, V138, V139, V138, 0x0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V73, V79, V111, 0xa9059cbb, V135, 0x20, V138, V139, V138, 0x0, V111]

================================

Block 0x19f
[0x19f:0x1ab]
---
Predecessors: [0x115]
Successors: [0x1ac, 0x1b0]
---
0x19f JUMPDEST
0x1a0 PUSH2 0x2c6
0x1a3 GAS
0x1a4 SUB
0x1a5 CALL
0x1a6 ISZERO
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x19f: JUMPDEST 
0x1a0: V146 = 0x2c6
0x1a3: V147 = GAS
0x1a4: V148 = SUB V147 0x2c6
0x1a5: V149 = CALL V148 V111 0x0 V138 V139 V138 0x20
0x1a6: V150 = ISZERO V149
0x1a7: V151 = ISZERO V150
0x1a8: V152 = 0x1b0
0x1ab: JUMPI 0x1b0 V151
---
Entry stack: [V12, V73, V79, V111, 0xa9059cbb, V135, 0x20, V138, V139, V138, 0x0, V111]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V73, V79, V111, 0xa9059cbb, V135]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x19f]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V153 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V12, V73, V79, V111, 0xa9059cbb, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V73, V79, V111, 0xa9059cbb, V135]

================================

Block 0x1b0
[0x1b0:0x212]
---
Predecessors: [0x19f]
Successors: []
---
0x1b0 JUMPDEST
0x1b1 POP
0x1b2 POP
0x1b3 POP
0x1b4 PUSH1 0x40
0x1b6 MLOAD
0x1b7 DUP1
0x1b8 MLOAD
0x1b9 SWAP1
0x1ba POP
0x1bb POP
0x1bc PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1dd CALLER
0x1de DUP4
0x1df PUSH1 0x1
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0xa0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb SUB
0x1ec SWAP1
0x1ed SWAP4
0x1ee AND
0x1ef DUP4
0x1f0 MSTORE
0x1f1 PUSH1 0x20
0x1f3 DUP4
0x1f4 ADD
0x1f5 SWAP2
0x1f6 SWAP1
0x1f7 SWAP2
0x1f8 MSTORE
0x1f9 ISZERO
0x1fa ISZERO
0x1fb PUSH1 0x40
0x1fd DUP1
0x1fe DUP4
0x1ff ADD
0x200 SWAP2
0x201 SWAP1
0x202 SWAP2
0x203 MSTORE
0x204 PUSH1 0x60
0x206 SWAP1
0x207 SWAP2
0x208 ADD
0x209 SWAP1
0x20a MLOAD
0x20b DUP1
0x20c SWAP2
0x20d SUB
0x20e SWAP1
0x20f LOG1
0x210 POP
0x211 POP
0x212 STOP
---
0x1b0: JUMPDEST 
0x1b4: V154 = 0x40
0x1b6: V155 = M[0x40]
0x1b8: V156 = M[V155]
0x1bc: V157 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1dd: V158 = CALLER
0x1df: V159 = 0x1
0x1e1: V160 = 0x40
0x1e3: V161 = M[0x40]
0x1e4: V162 = 0x1
0x1e6: V163 = 0xa0
0x1e8: V164 = 0x2
0x1ea: V165 = EXP 0x2 0xa0
0x1eb: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ee: V167 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: M[V161] = V167
0x1f1: V168 = 0x20
0x1f4: V169 = ADD V161 0x20
0x1f8: M[V169] = V73
0x1f9: V170 = ISZERO 0x1
0x1fa: V171 = ISZERO 0x0
0x1fb: V172 = 0x40
0x1ff: V173 = ADD V161 0x40
0x203: M[V173] = 0x1
0x204: V174 = 0x60
0x208: V175 = ADD V161 0x60
0x20a: V176 = M[0x40]
0x20d: V177 = SUB V175 V176
0x20f: LOG V176 V177 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x212: STOP 
---
Entry stack: [V12, V73, V79, V111, 0xa9059cbb, V135]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0xb]
Successors: [0x21a, 0x21e]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V178 = CALLVALUE
0x215: V179 = ISZERO V178
0x216: V180 = 0x21e
0x219: JUMPI 0x21e V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x213]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V181 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x213]
Successors: [0x42e]
---
0x21e JUMPDEST
0x21f PUSH2 0x226
0x222 PUSH2 0x42e
0x225 JUMP
---
0x21e: JUMPDEST 
0x21f: V182 = 0x226
0x222: V183 = 0x42e
0x225: JUMP 0x42e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V12, 0x226]

================================

Block 0x226
[0x226:0x227]
---
Predecessors: [0x5b9, 0x5d6, 0x6e5, 0x788]
Successors: []
---
0x226 JUMPDEST
0x227 STOP
---
0x226: JUMPDEST 
0x227: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x228
[0x228:0x22e]
---
Predecessors: [0x25]
Successors: [0x22f, 0x233]
---
0x228 JUMPDEST
0x229 CALLVALUE
0x22a ISZERO
0x22b PUSH2 0x233
0x22e JUMPI
---
0x228: JUMPDEST 
0x229: V184 = CALLVALUE
0x22a: V185 = ISZERO V184
0x22b: V186 = 0x233
0x22e: JUMPI 0x233 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22f
[0x22f:0x232]
---
Predecessors: [0x228]
Successors: []
---
0x22f PUSH1 0x0
0x231 DUP1
0x232 REVERT
---
0x22f: V187 = 0x0
0x232: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x233
[0x233:0x23d]
---
Predecessors: [0x228]
Successors: [0x5bb]
---
0x233 JUMPDEST
0x234 PUSH2 0x226
0x237 PUSH1 0x4
0x239 CALLDATALOAD
0x23a PUSH2 0x5bb
0x23d JUMP
---
0x233: JUMPDEST 
0x234: V188 = 0x226
0x237: V189 = 0x4
0x239: V190 = CALLDATALOAD 0x4
0x23a: V191 = 0x5bb
0x23d: JUMP 0x5bb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x226, V190]
Exit stack: [V12, 0x226, V190]

================================

Block 0x23e
[0x23e:0x244]
---
Predecessors: [0x30]
Successors: [0x245, 0x249]
---
0x23e JUMPDEST
0x23f CALLVALUE
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x23e: JUMPDEST 
0x23f: V192 = CALLVALUE
0x240: V193 = ISZERO V192
0x241: V194 = 0x249
0x244: JUMPI 0x249 V193
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x23e]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V195 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x249
[0x249:0x25c]
---
Predecessors: [0x23e]
Successors: [0x5db]
---
0x249 JUMPDEST
0x24a PUSH2 0x226
0x24d PUSH1 0x1
0x24f PUSH1 0xa0
0x251 PUSH1 0x2
0x253 EXP
0x254 SUB
0x255 PUSH1 0x4
0x257 CALLDATALOAD
0x258 AND
0x259 PUSH2 0x5db
0x25c JUMP
---
0x249: JUMPDEST 
0x24a: V196 = 0x226
0x24d: V197 = 0x1
0x24f: V198 = 0xa0
0x251: V199 = 0x2
0x253: V200 = EXP 0x2 0xa0
0x254: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V202 = 0x4
0x257: V203 = CALLDATALOAD 0x4
0x258: V204 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x259: V205 = 0x5db
0x25c: JUMP 0x5db
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x226, V204]
Exit stack: [V12, 0x226, V204]

================================

Block 0x25d
[0x25d:0x263]
---
Predecessors: [0x3b]
Successors: [0x264, 0x268]
---
0x25d JUMPDEST
0x25e CALLVALUE
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x25d: JUMPDEST 
0x25e: V206 = CALLVALUE
0x25f: V207 = ISZERO V206
0x260: V208 = 0x268
0x263: JUMPI 0x268 V207
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x25d]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V209 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x25d]
Successors: [0x6f4]
---
0x268 JUMPDEST
0x269 PUSH2 0x270
0x26c PUSH2 0x6f4
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V210 = 0x270
0x26c: V211 = 0x6f4
0x26f: JUMP 0x6f4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V12, 0x270]

================================

Block 0x270
[0x270:0x281]
---
Predecessors: [0x6f4, 0x6fa, 0x700, 0x72f, 0x743, 0x752]
Successors: []
---
0x270 JUMPDEST
0x271 PUSH1 0x40
0x273 MLOAD
0x274 SWAP1
0x275 DUP2
0x276 MSTORE
0x277 PUSH1 0x20
0x279 ADD
0x27a PUSH1 0x40
0x27c MLOAD
0x27d DUP1
0x27e SWAP2
0x27f SUB
0x280 SWAP1
0x281 RETURN
---
0x270: JUMPDEST 
0x271: V212 = 0x40
0x273: V213 = M[0x40]
0x276: M[V213] = S0
0x277: V214 = 0x20
0x279: V215 = ADD 0x20 V213
0x27a: V216 = 0x40
0x27c: V217 = M[0x40]
0x27f: V218 = SUB V215 V217
0x281: RETURN V217 V218
---
Entry stack: [V12, 0x270, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x270]

================================

Block 0x282
[0x282:0x288]
---
Predecessors: [0x46]
Successors: [0x289, 0x28d]
---
0x282 JUMPDEST
0x283 CALLVALUE
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x282: JUMPDEST 
0x283: V219 = CALLVALUE
0x284: V220 = ISZERO V219
0x285: V221 = 0x28d
0x288: JUMPI 0x28d V220
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x282]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V222 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28d
[0x28d:0x294]
---
Predecessors: [0x282]
Successors: [0x6fa]
---
0x28d JUMPDEST
0x28e PUSH2 0x270
0x291 PUSH2 0x6fa
0x294 JUMP
---
0x28d: JUMPDEST 
0x28e: V223 = 0x270
0x291: V224 = 0x6fa
0x294: JUMP 0x6fa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V12, 0x270]

================================

Block 0x295
[0x295:0x29b]
---
Predecessors: [0x51]
Successors: [0x29c, 0x2a0]
---
0x295 JUMPDEST
0x296 CALLVALUE
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x295: JUMPDEST 
0x296: V225 = CALLVALUE
0x297: V226 = ISZERO V225
0x298: V227 = 0x2a0
0x29b: JUMPI 0x2a0 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x295]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V228 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2b3]
---
Predecessors: [0x295]
Successors: [0x700]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x270
0x2a4 PUSH1 0x1
0x2a6 PUSH1 0xa0
0x2a8 PUSH1 0x2
0x2aa EXP
0x2ab SUB
0x2ac PUSH1 0x4
0x2ae CALLDATALOAD
0x2af AND
0x2b0 PUSH2 0x700
0x2b3 JUMP
---
0x2a0: JUMPDEST 
0x2a1: V229 = 0x270
0x2a4: V230 = 0x1
0x2a6: V231 = 0xa0
0x2a8: V232 = 0x2
0x2aa: V233 = EXP 0x2 0xa0
0x2ab: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ac: V235 = 0x4
0x2ae: V236 = CALLDATALOAD 0x4
0x2af: V237 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V238 = 0x700
0x2b3: JUMP 0x700
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x270, V237]
Exit stack: [V12, 0x270, V237]

================================

Block 0x2b4
[0x2b4:0x2ba]
---
Predecessors: [0x5c]
Successors: [0x2bb, 0x2bf]
---
0x2b4 JUMPDEST
0x2b5 CALLVALUE
0x2b6 ISZERO
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V239 = CALLVALUE
0x2b6: V240 = ISZERO V239
0x2b7: V241 = 0x2bf
0x2ba: JUMPI 0x2bf V240
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2b4]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V242 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bf
[0x2bf:0x2c6]
---
Predecessors: [0x2b4]
Successors: [0x712]
---
0x2bf JUMPDEST
0x2c0 PUSH2 0x2c7
0x2c3 PUSH2 0x712
0x2c6 JUMP
---
0x2bf: JUMPDEST 
0x2c0: V243 = 0x2c7
0x2c3: V244 = 0x712
0x2c6: JUMP 0x712
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2c7]
Exit stack: [V12, 0x2c7]

================================

Block 0x2c7
[0x2c7:0x2e2]
---
Predecessors: [0x712]
Successors: []
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 SWAP1
0x2d4 SWAP2
0x2d5 AND
0x2d6 DUP2
0x2d7 MSTORE
0x2d8 PUSH1 0x20
0x2da ADD
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de DUP1
0x2df SWAP2
0x2e0 SUB
0x2e1 SWAP1
0x2e2 RETURN
---
0x2c7: JUMPDEST 
0x2c8: V245 = 0x40
0x2ca: V246 = M[0x40]
0x2cb: V247 = 0x1
0x2cd: V248 = 0xa0
0x2cf: V249 = 0x2
0x2d1: V250 = EXP 0x2 0xa0
0x2d2: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d5: V252 = AND V707 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: M[V246] = V252
0x2d8: V253 = 0x20
0x2da: V254 = ADD 0x20 V246
0x2db: V255 = 0x40
0x2dd: V256 = M[0x40]
0x2e0: V257 = SUB V254 V256
0x2e2: RETURN V256 V257
---
Entry stack: [V12, 0x2c7, V707]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2c7]

================================

Block 0x2e3
[0x2e3:0x2e9]
---
Predecessors: [0x67]
Successors: [0x2ea, 0x2ee]
---
0x2e3 JUMPDEST
0x2e4 CALLVALUE
0x2e5 ISZERO
0x2e6 PUSH2 0x2ee
0x2e9 JUMPI
---
0x2e3: JUMPDEST 
0x2e4: V258 = CALLVALUE
0x2e5: V259 = ISZERO V258
0x2e6: V260 = 0x2ee
0x2e9: JUMPI 0x2ee V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2e3]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed REVERT
---
0x2ea: V261 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ee
[0x2ee:0x2f5]
---
Predecessors: [0x2e3]
Successors: [0x721]
---
0x2ee JUMPDEST
0x2ef PUSH2 0x2f6
0x2f2 PUSH2 0x721
0x2f5 JUMP
---
0x2ee: JUMPDEST 
0x2ef: V262 = 0x2f6
0x2f2: V263 = 0x721
0x2f5: JUMP 0x721
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2f6]
Exit stack: [V12, 0x2f6]

================================

Block 0x2f6
[0x2f6:0x309]
---
Predecessors: [0x721, 0x735, 0x749]
Successors: []
---
0x2f6 JUMPDEST
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa SWAP1
0x2fb ISZERO
0x2fc ISZERO
0x2fd DUP2
0x2fe MSTORE
0x2ff PUSH1 0x20
0x301 ADD
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 SWAP2
0x307 SUB
0x308 SWAP1
0x309 RETURN
---
0x2f6: JUMPDEST 
0x2f7: V264 = 0x40
0x2f9: V265 = M[0x40]
0x2fb: V266 = ISZERO S0
0x2fc: V267 = ISZERO V266
0x2fe: M[V265] = V267
0x2ff: V268 = 0x20
0x301: V269 = ADD 0x20 V265
0x302: V270 = 0x40
0x304: V271 = M[0x40]
0x307: V272 = SUB V269 V271
0x309: RETURN V271 V272
---
Entry stack: [V12, 0x2f6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2f6]

================================

Block 0x30a
[0x30a:0x310]
---
Predecessors: [0x72]
Successors: [0x311, 0x315]
---
0x30a JUMPDEST
0x30b CALLVALUE
0x30c ISZERO
0x30d PUSH2 0x315
0x310 JUMPI
---
0x30a: JUMPDEST 
0x30b: V273 = CALLVALUE
0x30c: V274 = ISZERO V273
0x30d: V275 = 0x315
0x310: JUMPI 0x315 V274
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x30a]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 REVERT
---
0x311: V276 = 0x0
0x314: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x315
[0x315:0x31c]
---
Predecessors: [0x30a]
Successors: [0x72f]
---
0x315 JUMPDEST
0x316 PUSH2 0x270
0x319 PUSH2 0x72f
0x31c JUMP
---
0x315: JUMPDEST 
0x316: V277 = 0x270
0x319: V278 = 0x72f
0x31c: JUMP 0x72f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V12, 0x270]

================================

Block 0x31d
[0x31d:0x323]
---
Predecessors: [0x7d]
Successors: [0x324, 0x328]
---
0x31d JUMPDEST
0x31e CALLVALUE
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x31d: JUMPDEST 
0x31e: V279 = CALLVALUE
0x31f: V280 = ISZERO V279
0x320: V281 = 0x328
0x323: JUMPI 0x328 V280
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x31d]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V282 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x328
[0x328:0x32f]
---
Predecessors: [0x31d]
Successors: [0x735]
---
0x328 JUMPDEST
0x329 PUSH2 0x2f6
0x32c PUSH2 0x735
0x32f JUMP
---
0x328: JUMPDEST 
0x329: V283 = 0x2f6
0x32c: V284 = 0x735
0x32f: JUMP 0x735
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2f6]
Exit stack: [V12, 0x2f6]

================================

Block 0x330
[0x330:0x336]
---
Predecessors: [0x88]
Successors: [0x337, 0x33b]
---
0x330 JUMPDEST
0x331 CALLVALUE
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x330: JUMPDEST 
0x331: V285 = CALLVALUE
0x332: V286 = ISZERO V285
0x333: V287 = 0x33b
0x336: JUMPI 0x33b V286
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x330]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V288 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33b
[0x33b:0x35e]
---
Predecessors: [0x330]
Successors: [0x73e]
---
0x33b JUMPDEST
0x33c PUSH2 0x226
0x33f PUSH1 0x4
0x341 DUP1
0x342 CALLDATALOAD
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b AND
0x34c SWAP1
0x34d PUSH1 0x24
0x34f DUP1
0x350 CALLDATALOAD
0x351 SWAP2
0x352 PUSH1 0x44
0x354 CALLDATALOAD
0x355 SWAP2
0x356 DUP3
0x357 ADD
0x358 SWAP2
0x359 ADD
0x35a CALLDATALOAD
0x35b PUSH2 0x73e
0x35e JUMP
---
0x33b: JUMPDEST 
0x33c: V289 = 0x226
0x33f: V290 = 0x4
0x342: V291 = CALLDATALOAD 0x4
0x343: V292 = 0x1
0x345: V293 = 0xa0
0x347: V294 = 0x2
0x349: V295 = EXP 0x2 0xa0
0x34a: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34b: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x34d: V298 = 0x24
0x350: V299 = CALLDATALOAD 0x24
0x352: V300 = 0x44
0x354: V301 = CALLDATALOAD 0x44
0x357: V302 = ADD V301 0x24
0x359: V303 = ADD V301 0x4
0x35a: V304 = CALLDATALOAD V303
0x35b: V305 = 0x73e
0x35e: JUMP 0x73e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x226, V297, V299, V302, V304]
Exit stack: [V12, 0x226, V297, V299, V302, V304]

================================

Block 0x35f
[0x35f:0x365]
---
Predecessors: [0x93]
Successors: [0x366, 0x36a]
---
0x35f JUMPDEST
0x360 CALLVALUE
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x35f: JUMPDEST 
0x360: V306 = CALLVALUE
0x361: V307 = ISZERO V306
0x362: V308 = 0x36a
0x365: JUMPI 0x36a V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x35f]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V309 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36a
[0x36a:0x371]
---
Predecessors: [0x35f]
Successors: [0x743]
---
0x36a JUMPDEST
0x36b PUSH2 0x270
0x36e PUSH2 0x743
0x371 JUMP
---
0x36a: JUMPDEST 
0x36b: V310 = 0x270
0x36e: V311 = 0x743
0x371: JUMP 0x743
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V12, 0x270]

================================

Block 0x372
[0x372:0x378]
---
Predecessors: [0x9e]
Successors: [0x379, 0x37d]
---
0x372 JUMPDEST
0x373 CALLVALUE
0x374 ISZERO
0x375 PUSH2 0x37d
0x378 JUMPI
---
0x372: JUMPDEST 
0x373: V312 = CALLVALUE
0x374: V313 = ISZERO V312
0x375: V314 = 0x37d
0x378: JUMPI 0x37d V313
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x379
[0x379:0x37c]
---
Predecessors: [0x372]
Successors: []
---
0x379 PUSH1 0x0
0x37b DUP1
0x37c REVERT
---
0x379: V315 = 0x0
0x37c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37d
[0x37d:0x384]
---
Predecessors: [0x372]
Successors: [0x749]
---
0x37d JUMPDEST
0x37e PUSH2 0x2f6
0x381 PUSH2 0x749
0x384 JUMP
---
0x37d: JUMPDEST 
0x37e: V316 = 0x2f6
0x381: V317 = 0x749
0x384: JUMP 0x749
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2f6]
Exit stack: [V12, 0x2f6]

================================

Block 0x385
[0x385:0x38b]
---
Predecessors: [0xa9]
Successors: [0x38c, 0x390]
---
0x385 JUMPDEST
0x386 CALLVALUE
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x385: JUMPDEST 
0x386: V318 = CALLVALUE
0x387: V319 = ISZERO V318
0x388: V320 = 0x390
0x38b: JUMPI 0x390 V319
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x385]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V321 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x390
[0x390:0x397]
---
Predecessors: [0x385]
Successors: [0x752]
---
0x390 JUMPDEST
0x391 PUSH2 0x270
0x394 PUSH2 0x752
0x397 JUMP
---
0x390: JUMPDEST 
0x391: V322 = 0x270
0x394: V323 = 0x752
0x397: JUMP 0x752
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V12, 0x270]

================================

Block 0x398
[0x398:0x39e]
---
Predecessors: [0xb4]
Successors: [0x39f, 0x3a3]
---
0x398 JUMPDEST
0x399 CALLVALUE
0x39a ISZERO
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x398: JUMPDEST 
0x399: V324 = CALLVALUE
0x39a: V325 = ISZERO V324
0x39b: V326 = 0x3a3
0x39e: JUMPI 0x3a3 V325
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x398]
Successors: []
---
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 REVERT
---
0x39f: V327 = 0x0
0x3a2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a3
[0x3a3:0x3b6]
---
Predecessors: [0x398]
Successors: [0x758]
---
0x3a3 JUMPDEST
0x3a4 PUSH2 0x226
0x3a7 PUSH1 0x1
0x3a9 PUSH1 0xa0
0x3ab PUSH1 0x2
0x3ad EXP
0x3ae SUB
0x3af PUSH1 0x4
0x3b1 CALLDATALOAD
0x3b2 AND
0x3b3 PUSH2 0x758
0x3b6 JUMP
---
0x3a3: JUMPDEST 
0x3a4: V328 = 0x226
0x3a7: V329 = 0x1
0x3a9: V330 = 0xa0
0x3ab: V331 = 0x2
0x3ad: V332 = EXP 0x2 0xa0
0x3ae: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V334 = 0x4
0x3b1: V335 = CALLDATALOAD 0x4
0x3b2: V336 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x3b3: V337 = 0x758
0x3b6: JUMP 0x758
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x226, V336]
Exit stack: [V12, 0x226, V336]

================================

Block 0x3b7
[0x3b7:0x403]
---
Predecessors: [0x105]
Successors: [0x404, 0x408]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x6
0x3ba SLOAD
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 AND
0x3c4 PUSH4 0xa0712d68
0x3c9 DUP3
0x3ca PUSH1 0x0
0x3cc PUSH1 0x40
0x3ce MLOAD
0x3cf PUSH1 0x20
0x3d1 ADD
0x3d2 MSTORE
0x3d3 PUSH1 0x40
0x3d5 MLOAD
0x3d6 PUSH1 0xe0
0x3d8 PUSH1 0x2
0x3da EXP
0x3db PUSH4 0xffffffff
0x3e0 DUP5
0x3e1 AND
0x3e2 MUL
0x3e3 DUP2
0x3e4 MSTORE
0x3e5 PUSH1 0x4
0x3e7 DUP2
0x3e8 ADD
0x3e9 SWAP2
0x3ea SWAP1
0x3eb SWAP2
0x3ec MSTORE
0x3ed PUSH1 0x24
0x3ef ADD
0x3f0 PUSH1 0x20
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 DUP1
0x3f6 DUP4
0x3f7 SUB
0x3f8 DUP2
0x3f9 PUSH1 0x0
0x3fb DUP8
0x3fc DUP1
0x3fd EXTCODESIZE
0x3fe ISZERO
0x3ff ISZERO
0x400 PUSH2 0x408
0x403 JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V338 = 0x6
0x3ba: V339 = S[0x6]
0x3bb: V340 = 0x1
0x3bd: V341 = 0xa0
0x3bf: V342 = 0x2
0x3c1: V343 = EXP 0x2 0xa0
0x3c2: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c3: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x3c4: V346 = 0xa0712d68
0x3ca: V347 = 0x0
0x3cc: V348 = 0x40
0x3ce: V349 = M[0x40]
0x3cf: V350 = 0x20
0x3d1: V351 = ADD 0x20 V349
0x3d2: M[V351] = 0x0
0x3d3: V352 = 0x40
0x3d5: V353 = M[0x40]
0x3d6: V354 = 0xe0
0x3d8: V355 = 0x2
0x3da: V356 = EXP 0x2 0xe0
0x3db: V357 = 0xffffffff
0x3e1: V358 = AND 0xa0712d68 0xffffffff
0x3e2: V359 = MUL 0xa0712d68 0x100000000000000000000000000000000000000000000000000000000
0x3e4: M[V353] = 0xa0712d6800000000000000000000000000000000000000000000000000000000
0x3e5: V360 = 0x4
0x3e8: V361 = ADD V353 0x4
0x3ec: M[V361] = 0xbde31
0x3ed: V362 = 0x24
0x3ef: V363 = ADD 0x24 V353
0x3f0: V364 = 0x20
0x3f2: V365 = 0x40
0x3f4: V366 = M[0x40]
0x3f7: V367 = SUB V363 V366
0x3f9: V368 = 0x0
0x3fd: V369 = EXTCODESIZE V345
0x3fe: V370 = ISZERO V369
0x3ff: V371 = ISZERO V370
0x400: V372 = 0x408
0x403: JUMPI 0x408 V371
---
Entry stack: [V12, V73, V79, 0x110, 0xbde31]
Stack pops: 1
Stack additions: [S0, V345, 0xa0712d68, V363, 0x20, V366, V367, V366, 0x0, V345]
Exit stack: [V12, V73, V79, 0x110, 0xbde31, V345, 0xa0712d68, V363, 0x20, V366, V367, V366, 0x0, V345]

================================

Block 0x404
[0x404:0x407]
---
Predecessors: [0x3b7]
Successors: []
---
0x404 PUSH1 0x0
0x406 DUP1
0x407 REVERT
---
0x404: V373 = 0x0
0x407: REVERT 0x0 0x0
---
Entry stack: [V12, V73, V79, 0x110, 0xbde31, V345, 0xa0712d68, V363, 0x20, V366, V367, V366, 0x0, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V73, V79, 0x110, 0xbde31, V345, 0xa0712d68, V363, 0x20, V366, V367, V366, 0x0, V345]

================================

Block 0x408
[0x408:0x414]
---
Predecessors: [0x3b7]
Successors: [0x415, 0x419]
---
0x408 JUMPDEST
0x409 PUSH2 0x2c6
0x40c GAS
0x40d SUB
0x40e CALL
0x40f ISZERO
0x410 ISZERO
0x411 PUSH2 0x419
0x414 JUMPI
---
0x408: JUMPDEST 
0x409: V374 = 0x2c6
0x40c: V375 = GAS
0x40d: V376 = SUB V375 0x2c6
0x40e: V377 = CALL V376 V345 0x0 V366 V367 V366 0x20
0x40f: V378 = ISZERO V377
0x410: V379 = ISZERO V378
0x411: V380 = 0x419
0x414: JUMPI 0x419 V379
---
Entry stack: [V12, V73, V79, 0x110, 0xbde31, V345, 0xa0712d68, V363, 0x20, V366, V367, V366, 0x0, V345]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V73, V79, 0x110, 0xbde31, V345, 0xa0712d68, V363]

================================

Block 0x415
[0x415:0x418]
---
Predecessors: [0x408]
Successors: []
---
0x415 PUSH1 0x0
0x417 DUP1
0x418 REVERT
---
0x415: V381 = 0x0
0x418: REVERT 0x0 0x0
---
Entry stack: [V12, V73, V79, 0x110, 0xbde31, V345, 0xa0712d68, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V73, V79, 0x110, 0xbde31, V345, 0xa0712d68, V363]

================================

Block 0x419
[0x419:0x42d]
---
Predecessors: [0x408]
Successors: [0x110]
---
0x419 JUMPDEST
0x41a POP
0x41b POP
0x41c POP
0x41d PUSH1 0x40
0x41f MLOAD
0x420 DUP1
0x421 MLOAD
0x422 POP
0x423 POP
0x424 PUSH1 0x5
0x426 DUP1
0x427 SLOAD
0x428 SWAP1
0x429 SWAP2
0x42a ADD
0x42b SWAP1
0x42c SSTORE
0x42d JUMP
---
0x419: JUMPDEST 
0x41d: V382 = 0x40
0x41f: V383 = M[0x40]
0x421: V384 = M[V383]
0x424: V385 = 0x5
0x427: V386 = S[0x5]
0x42a: V387 = ADD 0xbde31 V386
0x42c: S[0x5] = V387
0x42d: JUMP 0x110
---
Entry stack: [V12, V73, V79, 0x110, 0xbde31, V345, 0xa0712d68, V363]
Stack pops: 5
Stack additions: []
Exit stack: [V12, V73, V79]

================================

Block 0x42e
[0x42e:0x444]
---
Predecessors: [0x21e]
Successors: [0x445, 0x449]
---
0x42e JUMPDEST
0x42f PUSH1 0x0
0x431 SLOAD
0x432 CALLER
0x433 PUSH1 0x1
0x435 PUSH1 0xa0
0x437 PUSH1 0x2
0x439 EXP
0x43a SUB
0x43b SWAP1
0x43c DUP2
0x43d AND
0x43e SWAP2
0x43f AND
0x440 EQ
0x441 PUSH2 0x449
0x444 JUMPI
---
0x42e: JUMPDEST 
0x42f: V388 = 0x0
0x431: V389 = S[0x0]
0x432: V390 = CALLER
0x433: V391 = 0x1
0x435: V392 = 0xa0
0x437: V393 = 0x2
0x439: V394 = EXP 0x2 0xa0
0x43a: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43d: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x43f: V397 = AND V389 0xffffffffffffffffffffffffffffffffffffffff
0x440: V398 = EQ V397 V396
0x441: V399 = 0x449
0x444: JUMPI 0x449 V398
---
Entry stack: [V12, 0x226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226]

================================

Block 0x445
[0x445:0x448]
---
Predecessors: [0x42e]
Successors: []
---
0x445 PUSH1 0x0
0x447 DUP1
0x448 REVERT
---
0x445: V400 = 0x0
0x448: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226]

================================

Block 0x449
[0x449:0x452]
---
Predecessors: [0x42e]
Successors: [0x453, 0x5b9]
---
0x449 JUMPDEST
0x44a PUSH1 0x3
0x44c SLOAD
0x44d TIMESTAMP
0x44e LT
0x44f PUSH2 0x5b9
0x452 JUMPI
---
0x449: JUMPDEST 
0x44a: V401 = 0x3
0x44c: V402 = S[0x3]
0x44d: V403 = TIMESTAMP
0x44e: V404 = LT V403 V402
0x44f: V405 = 0x5b9
0x452: JUMPI 0x5b9 V404
---
Entry stack: [V12, 0x226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226]

================================

Block 0x453
[0x453:0x45d]
---
Predecessors: [0x449]
Successors: [0x45e, 0x4be]
---
0x453 PUSH1 0x1
0x455 SLOAD
0x456 PUSH1 0x2
0x458 SLOAD
0x459 LT
0x45a PUSH2 0x4be
0x45d JUMPI
---
0x453: V406 = 0x1
0x455: V407 = S[0x1]
0x456: V408 = 0x2
0x458: V409 = S[0x2]
0x459: V410 = LT V409 V407
0x45a: V411 = 0x4be
0x45d: JUMPI 0x4be V410
---
Entry stack: [V12, 0x226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226]

================================

Block 0x45e
[0x45e:0x4bd]
---
Predecessors: [0x453]
Successors: [0x4be]
---
0x45e PUSH1 0x8
0x460 DUP1
0x461 SLOAD
0x462 PUSH1 0xff
0x464 NOT
0x465 AND
0x466 PUSH1 0x1
0x468 OR
0x469 SWAP1
0x46a SSTORE
0x46b PUSH1 0x0
0x46d SLOAD
0x46e PUSH1 0x2
0x470 SLOAD
0x471 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x492 SWAP2
0x493 PUSH1 0x1
0x495 PUSH1 0xa0
0x497 PUSH1 0x2
0x499 EXP
0x49a SUB
0x49b AND
0x49c SWAP1
0x49d PUSH1 0x40
0x49f MLOAD
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 SWAP1
0x4a9 SWAP3
0x4aa AND
0x4ab DUP3
0x4ac MSTORE
0x4ad PUSH1 0x20
0x4af DUP3
0x4b0 ADD
0x4b1 MSTORE
0x4b2 PUSH1 0x40
0x4b4 SWAP1
0x4b5 DUP2
0x4b6 ADD
0x4b7 SWAP1
0x4b8 MLOAD
0x4b9 DUP1
0x4ba SWAP2
0x4bb SUB
0x4bc SWAP1
0x4bd LOG1
---
0x45e: V412 = 0x8
0x461: V413 = S[0x8]
0x462: V414 = 0xff
0x464: V415 = NOT 0xff
0x465: V416 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V413
0x466: V417 = 0x1
0x468: V418 = OR 0x1 V416
0x46a: S[0x8] = V418
0x46b: V419 = 0x0
0x46d: V420 = S[0x0]
0x46e: V421 = 0x2
0x470: V422 = S[0x2]
0x471: V423 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x493: V424 = 0x1
0x495: V425 = 0xa0
0x497: V426 = 0x2
0x499: V427 = EXP 0x2 0xa0
0x49a: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49b: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x49d: V430 = 0x40
0x49f: V431 = M[0x40]
0x4a0: V432 = 0x1
0x4a2: V433 = 0xa0
0x4a4: V434 = 0x2
0x4a6: V435 = EXP 0x2 0xa0
0x4a7: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V437 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: M[V431] = V437
0x4ad: V438 = 0x20
0x4b0: V439 = ADD V431 0x20
0x4b1: M[V439] = V422
0x4b2: V440 = 0x40
0x4b6: V441 = ADD 0x40 V431
0x4b8: V442 = M[0x40]
0x4bb: V443 = SUB V441 V442
0x4bd: LOG V442 V443 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V12, 0x226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226]

================================

Block 0x4be
[0x4be:0x501]
---
Predecessors: [0x453, 0x45e]
Successors: [0x502, 0x506]
---
0x4be JUMPDEST
0x4bf PUSH1 0x6
0x4c1 SLOAD
0x4c2 PUSH1 0x1
0x4c4 PUSH1 0xa0
0x4c6 PUSH1 0x2
0x4c8 EXP
0x4c9 SUB
0x4ca AND
0x4cb PUSH4 0x7d64bcb4
0x4d0 PUSH1 0x0
0x4d2 PUSH1 0x40
0x4d4 MLOAD
0x4d5 PUSH1 0x20
0x4d7 ADD
0x4d8 MSTORE
0x4d9 PUSH1 0x40
0x4db MLOAD
0x4dc DUP2
0x4dd PUSH4 0xffffffff
0x4e2 AND
0x4e3 PUSH1 0xe0
0x4e5 PUSH1 0x2
0x4e7 EXP
0x4e8 MUL
0x4e9 DUP2
0x4ea MSTORE
0x4eb PUSH1 0x4
0x4ed ADD
0x4ee PUSH1 0x20
0x4f0 PUSH1 0x40
0x4f2 MLOAD
0x4f3 DUP1
0x4f4 DUP4
0x4f5 SUB
0x4f6 DUP2
0x4f7 PUSH1 0x0
0x4f9 DUP8
0x4fa DUP1
0x4fb EXTCODESIZE
0x4fc ISZERO
0x4fd ISZERO
0x4fe PUSH2 0x506
0x501 JUMPI
---
0x4be: JUMPDEST 
0x4bf: V444 = 0x6
0x4c1: V445 = S[0x6]
0x4c2: V446 = 0x1
0x4c4: V447 = 0xa0
0x4c6: V448 = 0x2
0x4c8: V449 = EXP 0x2 0xa0
0x4c9: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ca: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x4cb: V452 = 0x7d64bcb4
0x4d0: V453 = 0x0
0x4d2: V454 = 0x40
0x4d4: V455 = M[0x40]
0x4d5: V456 = 0x20
0x4d7: V457 = ADD 0x20 V455
0x4d8: M[V457] = 0x0
0x4d9: V458 = 0x40
0x4db: V459 = M[0x40]
0x4dd: V460 = 0xffffffff
0x4e2: V461 = AND 0xffffffff 0x7d64bcb4
0x4e3: V462 = 0xe0
0x4e5: V463 = 0x2
0x4e7: V464 = EXP 0x2 0xe0
0x4e8: V465 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0x4ea: M[V459] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0x4eb: V466 = 0x4
0x4ed: V467 = ADD 0x4 V459
0x4ee: V468 = 0x20
0x4f0: V469 = 0x40
0x4f2: V470 = M[0x40]
0x4f5: V471 = SUB V467 V470
0x4f7: V472 = 0x0
0x4fb: V473 = EXTCODESIZE V451
0x4fc: V474 = ISZERO V473
0x4fd: V475 = ISZERO V474
0x4fe: V476 = 0x506
0x501: JUMPI 0x506 V475
---
Entry stack: [V12, 0x226]
Stack pops: 0
Stack additions: [V451, 0x7d64bcb4, V467, 0x20, V470, V471, V470, 0x0, V451]
Exit stack: [V12, 0x226, V451, 0x7d64bcb4, V467, 0x20, V470, V471, V470, 0x0, V451]

================================

Block 0x502
[0x502:0x505]
---
Predecessors: [0x4be]
Successors: []
---
0x502 PUSH1 0x0
0x504 DUP1
0x505 REVERT
---
0x502: V477 = 0x0
0x505: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V451, 0x7d64bcb4, V467, 0x20, V470, V471, V470, 0x0, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V451, 0x7d64bcb4, V467, 0x20, V470, V471, V470, 0x0, V451]

================================

Block 0x506
[0x506:0x512]
---
Predecessors: [0x4be]
Successors: [0x513, 0x517]
---
0x506 JUMPDEST
0x507 PUSH2 0x2c6
0x50a GAS
0x50b SUB
0x50c CALL
0x50d ISZERO
0x50e ISZERO
0x50f PUSH2 0x517
0x512 JUMPI
---
0x506: JUMPDEST 
0x507: V478 = 0x2c6
0x50a: V479 = GAS
0x50b: V480 = SUB V479 0x2c6
0x50c: V481 = CALL V480 V451 0x0 V470 V471 V470 0x20
0x50d: V482 = ISZERO V481
0x50e: V483 = ISZERO V482
0x50f: V484 = 0x517
0x512: JUMPI 0x517 V483
---
Entry stack: [V12, 0x226, V451, 0x7d64bcb4, V467, 0x20, V470, V471, V470, 0x0, V451]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x226, V451, 0x7d64bcb4, V467]

================================

Block 0x513
[0x513:0x516]
---
Predecessors: [0x506]
Successors: []
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 REVERT
---
0x513: V485 = 0x0
0x516: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V451, 0x7d64bcb4, V467]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V451, 0x7d64bcb4, V467]

================================

Block 0x517
[0x517:0x583]
---
Predecessors: [0x506]
Successors: [0x584, 0x588]
---
0x517 JUMPDEST
0x518 POP
0x519 POP
0x51a POP
0x51b PUSH1 0x40
0x51d MLOAD
0x51e DUP1
0x51f MLOAD
0x520 PUSH1 0xa
0x522 DUP1
0x523 SLOAD
0x524 PUSH1 0xff
0x526 NOT
0x527 AND
0x528 SWAP2
0x529 ISZERO
0x52a ISZERO
0x52b SWAP2
0x52c SWAP1
0x52d SWAP2
0x52e OR
0x52f SWAP1
0x530 SSTORE
0x531 POP
0x532 PUSH1 0x6
0x534 SLOAD
0x535 PUSH1 0x0
0x537 SLOAD
0x538 PUSH1 0x1
0x53a PUSH1 0xa0
0x53c PUSH1 0x2
0x53e EXP
0x53f SUB
0x540 SWAP2
0x541 DUP3
0x542 AND
0x543 SWAP2
0x544 PUSH4 0xf2fde38b
0x549 SWAP2
0x54a AND
0x54b PUSH1 0x40
0x54d MLOAD
0x54e PUSH1 0xe0
0x550 PUSH1 0x2
0x552 EXP
0x553 PUSH4 0xffffffff
0x558 DUP5
0x559 AND
0x55a MUL
0x55b DUP2
0x55c MSTORE
0x55d PUSH1 0x1
0x55f PUSH1 0xa0
0x561 PUSH1 0x2
0x563 EXP
0x564 SUB
0x565 SWAP1
0x566 SWAP2
0x567 AND
0x568 PUSH1 0x4
0x56a DUP3
0x56b ADD
0x56c MSTORE
0x56d PUSH1 0x24
0x56f ADD
0x570 PUSH1 0x0
0x572 PUSH1 0x40
0x574 MLOAD
0x575 DUP1
0x576 DUP4
0x577 SUB
0x578 DUP2
0x579 PUSH1 0x0
0x57b DUP8
0x57c DUP1
0x57d EXTCODESIZE
0x57e ISZERO
0x57f ISZERO
0x580 PUSH2 0x588
0x583 JUMPI
---
0x517: JUMPDEST 
0x51b: V486 = 0x40
0x51d: V487 = M[0x40]
0x51f: V488 = M[V487]
0x520: V489 = 0xa
0x523: V490 = S[0xa]
0x524: V491 = 0xff
0x526: V492 = NOT 0xff
0x527: V493 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V490
0x529: V494 = ISZERO V488
0x52a: V495 = ISZERO V494
0x52e: V496 = OR V495 V493
0x530: S[0xa] = V496
0x532: V497 = 0x6
0x534: V498 = S[0x6]
0x535: V499 = 0x0
0x537: V500 = S[0x0]
0x538: V501 = 0x1
0x53a: V502 = 0xa0
0x53c: V503 = 0x2
0x53e: V504 = EXP 0x2 0xa0
0x53f: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x542: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x544: V507 = 0xf2fde38b
0x54a: V508 = AND V500 0xffffffffffffffffffffffffffffffffffffffff
0x54b: V509 = 0x40
0x54d: V510 = M[0x40]
0x54e: V511 = 0xe0
0x550: V512 = 0x2
0x552: V513 = EXP 0x2 0xe0
0x553: V514 = 0xffffffff
0x559: V515 = AND 0xf2fde38b 0xffffffff
0x55a: V516 = MUL 0xf2fde38b 0x100000000000000000000000000000000000000000000000000000000
0x55c: M[V510] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x55d: V517 = 0x1
0x55f: V518 = 0xa0
0x561: V519 = 0x2
0x563: V520 = EXP 0x2 0xa0
0x564: V521 = SUB 0x10000000000000000000000000000000000000000 0x1
0x567: V522 = AND V508 0xffffffffffffffffffffffffffffffffffffffff
0x568: V523 = 0x4
0x56b: V524 = ADD V510 0x4
0x56c: M[V524] = V522
0x56d: V525 = 0x24
0x56f: V526 = ADD 0x24 V510
0x570: V527 = 0x0
0x572: V528 = 0x40
0x574: V529 = M[0x40]
0x577: V530 = SUB V526 V529
0x579: V531 = 0x0
0x57d: V532 = EXTCODESIZE V506
0x57e: V533 = ISZERO V532
0x57f: V534 = ISZERO V533
0x580: V535 = 0x588
0x583: JUMPI 0x588 V534
---
Entry stack: [V12, 0x226, V451, 0x7d64bcb4, V467]
Stack pops: 3
Stack additions: [V506, 0xf2fde38b, V526, 0x0, V529, V530, V529, 0x0, V506]
Exit stack: [V12, 0x226, V506, 0xf2fde38b, V526, 0x0, V529, V530, V529, 0x0, V506]

================================

Block 0x584
[0x584:0x587]
---
Predecessors: [0x517]
Successors: []
---
0x584 PUSH1 0x0
0x586 DUP1
0x587 REVERT
---
0x584: V536 = 0x0
0x587: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V506, 0xf2fde38b, V526, 0x0, V529, V530, V529, 0x0, V506]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V506, 0xf2fde38b, V526, 0x0, V529, V530, V529, 0x0, V506]

================================

Block 0x588
[0x588:0x594]
---
Predecessors: [0x517]
Successors: [0x595, 0x599]
---
0x588 JUMPDEST
0x589 PUSH2 0x2c6
0x58c GAS
0x58d SUB
0x58e CALL
0x58f ISZERO
0x590 ISZERO
0x591 PUSH2 0x599
0x594 JUMPI
---
0x588: JUMPDEST 
0x589: V537 = 0x2c6
0x58c: V538 = GAS
0x58d: V539 = SUB V538 0x2c6
0x58e: V540 = CALL V539 V506 0x0 V529 V530 V529 0x0
0x58f: V541 = ISZERO V540
0x590: V542 = ISZERO V541
0x591: V543 = 0x599
0x594: JUMPI 0x599 V542
---
Entry stack: [V12, 0x226, V506, 0xf2fde38b, V526, 0x0, V529, V530, V529, 0x0, V506]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x226, V506, 0xf2fde38b, V526]

================================

Block 0x595
[0x595:0x598]
---
Predecessors: [0x588]
Successors: []
---
0x595 PUSH1 0x0
0x597 DUP1
0x598 REVERT
---
0x595: V544 = 0x0
0x598: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V506, 0xf2fde38b, V526]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V506, 0xf2fde38b, V526]

================================

Block 0x599
[0x599:0x5a8]
---
Predecessors: [0x588]
Successors: [0x7b7]
---
0x599 JUMPDEST
0x59a POP
0x59b POP
0x59c PUSH1 0x0
0x59e PUSH1 0x5
0x5a0 SSTORE
0x5a1 POP
0x5a2 PUSH2 0x5a9
0x5a5 PUSH2 0x7b7
0x5a8 JUMP
---
0x599: JUMPDEST 
0x59c: V545 = 0x0
0x59e: V546 = 0x5
0x5a0: S[0x5] = 0x0
0x5a2: V547 = 0x5a9
0x5a5: V548 = 0x7b7
0x5a8: JUMP 0x7b7
---
Entry stack: [V12, 0x226, V506, 0xf2fde38b, V526]
Stack pops: 3
Stack additions: [0x5a9]
Exit stack: [V12, 0x226, 0x5a9]

================================

Block 0x5a9
[0x5a9:0x5b8]
---
Predecessors: [0x962]
Successors: [0x5b9]
---
0x5a9 JUMPDEST
0x5aa PUSH1 0x8
0x5ac DUP1
0x5ad SLOAD
0x5ae PUSH2 0xff00
0x5b1 NOT
0x5b2 AND
0x5b3 PUSH2 0x100
0x5b6 OR
0x5b7 SWAP1
0x5b8 SSTORE
---
0x5a9: JUMPDEST 
0x5aa: V549 = 0x8
0x5ad: V550 = S[0x8]
0x5ae: V551 = 0xff00
0x5b1: V552 = NOT 0xff00
0x5b2: V553 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V550
0x5b3: V554 = 0x100
0x5b6: V555 = OR 0x100 V553
0x5b8: S[0x8] = V555
---
Entry stack: [V12, 0x226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226]

================================

Block 0x5b9
[0x5b9:0x5ba]
---
Predecessors: [0x449, 0x5a9]
Successors: [0x226]
---
0x5b9 JUMPDEST
0x5ba JUMP
---
0x5b9: JUMPDEST 
0x5ba: JUMP 0x226
---
Entry stack: [V12, 0x226]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x5bb
[0x5bb:0x5d1]
---
Predecessors: [0x233]
Successors: [0x5d2, 0x5d6]
---
0x5bb JUMPDEST
0x5bc PUSH1 0x0
0x5be SLOAD
0x5bf CALLER
0x5c0 PUSH1 0x1
0x5c2 PUSH1 0xa0
0x5c4 PUSH1 0x2
0x5c6 EXP
0x5c7 SUB
0x5c8 SWAP1
0x5c9 DUP2
0x5ca AND
0x5cb SWAP2
0x5cc AND
0x5cd EQ
0x5ce PUSH2 0x5d6
0x5d1 JUMPI
---
0x5bb: JUMPDEST 
0x5bc: V556 = 0x0
0x5be: V557 = S[0x0]
0x5bf: V558 = CALLER
0x5c0: V559 = 0x1
0x5c2: V560 = 0xa0
0x5c4: V561 = 0x2
0x5c6: V562 = EXP 0x2 0xa0
0x5c7: V563 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ca: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x5cc: V565 = AND V557 0xffffffffffffffffffffffffffffffffffffffff
0x5cd: V566 = EQ V565 V564
0x5ce: V567 = 0x5d6
0x5d1: JUMPI 0x5d6 V566
---
Entry stack: [V12, 0x226, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V190]

================================

Block 0x5d2
[0x5d2:0x5d5]
---
Predecessors: [0x5bb]
Successors: []
---
0x5d2 PUSH1 0x0
0x5d4 DUP1
0x5d5 REVERT
---
0x5d2: V568 = 0x0
0x5d5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V190]

================================

Block 0x5d6
[0x5d6:0x5da]
---
Predecessors: [0x5bb]
Successors: [0x226]
---
0x5d6 JUMPDEST
0x5d7 PUSH1 0x4
0x5d9 SSTORE
0x5da JUMP
---
0x5d6: JUMPDEST 
0x5d7: V569 = 0x4
0x5d9: S[0x4] = V190
0x5da: JUMP 0x226
---
Entry stack: [V12, 0x226, V190]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5db
[0x5db:0x5f4]
---
Predecessors: [0x249]
Successors: [0x5f5, 0x5f9]
---
0x5db JUMPDEST
0x5dc PUSH1 0x0
0x5de DUP1
0x5df SLOAD
0x5e0 DUP2
0x5e1 SWAP1
0x5e2 CALLER
0x5e3 PUSH1 0x1
0x5e5 PUSH1 0xa0
0x5e7 PUSH1 0x2
0x5e9 EXP
0x5ea SUB
0x5eb SWAP1
0x5ec DUP2
0x5ed AND
0x5ee SWAP2
0x5ef AND
0x5f0 EQ
0x5f1 PUSH2 0x5f9
0x5f4 JUMPI
---
0x5db: JUMPDEST 
0x5dc: V570 = 0x0
0x5df: V571 = S[0x0]
0x5e2: V572 = CALLER
0x5e3: V573 = 0x1
0x5e5: V574 = 0xa0
0x5e7: V575 = 0x2
0x5e9: V576 = EXP 0x2 0xa0
0x5ea: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ed: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x5ef: V579 = AND V571 0xffffffffffffffffffffffffffffffffffffffff
0x5f0: V580 = EQ V579 V578
0x5f1: V581 = 0x5f9
0x5f4: JUMPI 0x5f9 V580
---
Entry stack: [V12, 0x226, V204]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x226, V204, 0x0, 0x0]

================================

Block 0x5f5
[0x5f5:0x5f8]
---
Predecessors: [0x5db]
Successors: []
---
0x5f5 PUSH1 0x0
0x5f7 DUP1
0x5f8 REVERT
---
0x5f5: V582 = 0x0
0x5f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V204, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V204, 0x0, 0x0]

================================

Block 0x5f9
[0x5f9:0x64e]
---
Predecessors: [0x5db]
Successors: [0x64f, 0x653]
---
0x5f9 JUMPDEST
0x5fa DUP3
0x5fb SWAP2
0x5fc POP
0x5fd DUP2
0x5fe PUSH1 0x1
0x600 PUSH1 0xa0
0x602 PUSH1 0x2
0x604 EXP
0x605 SUB
0x606 AND
0x607 PUSH4 0x70a08231
0x60c ADDRESS
0x60d PUSH1 0x0
0x60f PUSH1 0x40
0x611 MLOAD
0x612 PUSH1 0x20
0x614 ADD
0x615 MSTORE
0x616 PUSH1 0x40
0x618 MLOAD
0x619 PUSH1 0xe0
0x61b PUSH1 0x2
0x61d EXP
0x61e PUSH4 0xffffffff
0x623 DUP5
0x624 AND
0x625 MUL
0x626 DUP2
0x627 MSTORE
0x628 PUSH1 0x1
0x62a PUSH1 0xa0
0x62c PUSH1 0x2
0x62e EXP
0x62f SUB
0x630 SWAP1
0x631 SWAP2
0x632 AND
0x633 PUSH1 0x4
0x635 DUP3
0x636 ADD
0x637 MSTORE
0x638 PUSH1 0x24
0x63a ADD
0x63b PUSH1 0x20
0x63d PUSH1 0x40
0x63f MLOAD
0x640 DUP1
0x641 DUP4
0x642 SUB
0x643 DUP2
0x644 PUSH1 0x0
0x646 DUP8
0x647 DUP1
0x648 EXTCODESIZE
0x649 ISZERO
0x64a ISZERO
0x64b PUSH2 0x653
0x64e JUMPI
---
0x5f9: JUMPDEST 
0x5fe: V583 = 0x1
0x600: V584 = 0xa0
0x602: V585 = 0x2
0x604: V586 = EXP 0x2 0xa0
0x605: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x606: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x607: V589 = 0x70a08231
0x60c: V590 = ADDRESS
0x60d: V591 = 0x0
0x60f: V592 = 0x40
0x611: V593 = M[0x40]
0x612: V594 = 0x20
0x614: V595 = ADD 0x20 V593
0x615: M[V595] = 0x0
0x616: V596 = 0x40
0x618: V597 = M[0x40]
0x619: V598 = 0xe0
0x61b: V599 = 0x2
0x61d: V600 = EXP 0x2 0xe0
0x61e: V601 = 0xffffffff
0x624: V602 = AND 0x70a08231 0xffffffff
0x625: V603 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x627: M[V597] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x628: V604 = 0x1
0x62a: V605 = 0xa0
0x62c: V606 = 0x2
0x62e: V607 = EXP 0x2 0xa0
0x62f: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x632: V609 = AND V590 0xffffffffffffffffffffffffffffffffffffffff
0x633: V610 = 0x4
0x636: V611 = ADD V597 0x4
0x637: M[V611] = V609
0x638: V612 = 0x24
0x63a: V613 = ADD 0x24 V597
0x63b: V614 = 0x20
0x63d: V615 = 0x40
0x63f: V616 = M[0x40]
0x642: V617 = SUB V613 V616
0x644: V618 = 0x0
0x648: V619 = EXTCODESIZE V588
0x649: V620 = ISZERO V619
0x64a: V621 = ISZERO V620
0x64b: V622 = 0x653
0x64e: JUMPI 0x653 V621
---
Entry stack: [V12, 0x226, V204, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V588, 0x70a08231, V613, 0x20, V616, V617, V616, 0x0, V588]
Exit stack: [V12, 0x226, V204, V204, 0x0, V588, 0x70a08231, V613, 0x20, V616, V617, V616, 0x0, V588]

================================

Block 0x64f
[0x64f:0x652]
---
Predecessors: [0x5f9]
Successors: []
---
0x64f PUSH1 0x0
0x651 DUP1
0x652 REVERT
---
0x64f: V623 = 0x0
0x652: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V204, V204, 0x0, V588, 0x70a08231, V613, 0x20, V616, V617, V616, 0x0, V588]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V204, V204, 0x0, V588, 0x70a08231, V613, 0x20, V616, V617, V616, 0x0, V588]

================================

Block 0x653
[0x653:0x65f]
---
Predecessors: [0x5f9]
Successors: [0x660, 0x664]
---
0x653 JUMPDEST
0x654 PUSH2 0x2c6
0x657 GAS
0x658 SUB
0x659 CALL
0x65a ISZERO
0x65b ISZERO
0x65c PUSH2 0x664
0x65f JUMPI
---
0x653: JUMPDEST 
0x654: V624 = 0x2c6
0x657: V625 = GAS
0x658: V626 = SUB V625 0x2c6
0x659: V627 = CALL V626 V588 0x0 V616 V617 V616 0x20
0x65a: V628 = ISZERO V627
0x65b: V629 = ISZERO V628
0x65c: V630 = 0x664
0x65f: JUMPI 0x664 V629
---
Entry stack: [V12, 0x226, V204, V204, 0x0, V588, 0x70a08231, V613, 0x20, V616, V617, V616, 0x0, V588]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x226, V204, V204, 0x0, V588, 0x70a08231, V613]

================================

Block 0x660
[0x660:0x663]
---
Predecessors: [0x653]
Successors: []
---
0x660 PUSH1 0x0
0x662 DUP1
0x663 REVERT
---
0x660: V631 = 0x0
0x663: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V204, V204, 0x0, V588, 0x70a08231, V613]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V204, V204, 0x0, V588, 0x70a08231, V613]

================================

Block 0x664
[0x664:0x6cf]
---
Predecessors: [0x653]
Successors: [0x6d0, 0x6d4]
---
0x664 JUMPDEST
0x665 POP
0x666 POP
0x667 POP
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c MLOAD
0x66d PUSH1 0x0
0x66f DUP1
0x670 SLOAD
0x671 SWAP2
0x672 SWAP4
0x673 POP
0x674 PUSH1 0x1
0x676 PUSH1 0xa0
0x678 PUSH1 0x2
0x67a EXP
0x67b SUB
0x67c DUP1
0x67d DUP7
0x67e AND
0x67f SWAP4
0x680 POP
0x681 PUSH4 0xa9059cbb
0x686 SWAP3
0x687 AND
0x688 SWAP1
0x689 DUP5
0x68a SWAP1
0x68b PUSH1 0x40
0x68d MLOAD
0x68e PUSH1 0x20
0x690 ADD
0x691 MSTORE
0x692 PUSH1 0x40
0x694 MLOAD
0x695 PUSH1 0xe0
0x697 PUSH1 0x2
0x699 EXP
0x69a PUSH4 0xffffffff
0x69f DUP6
0x6a0 AND
0x6a1 MUL
0x6a2 DUP2
0x6a3 MSTORE
0x6a4 PUSH1 0x1
0x6a6 PUSH1 0xa0
0x6a8 PUSH1 0x2
0x6aa EXP
0x6ab SUB
0x6ac SWAP1
0x6ad SWAP3
0x6ae AND
0x6af PUSH1 0x4
0x6b1 DUP4
0x6b2 ADD
0x6b3 MSTORE
0x6b4 PUSH1 0x24
0x6b6 DUP3
0x6b7 ADD
0x6b8 MSTORE
0x6b9 PUSH1 0x44
0x6bb ADD
0x6bc PUSH1 0x20
0x6be PUSH1 0x40
0x6c0 MLOAD
0x6c1 DUP1
0x6c2 DUP4
0x6c3 SUB
0x6c4 DUP2
0x6c5 PUSH1 0x0
0x6c7 DUP8
0x6c8 DUP1
0x6c9 EXTCODESIZE
0x6ca ISZERO
0x6cb ISZERO
0x6cc PUSH2 0x6d4
0x6cf JUMPI
---
0x664: JUMPDEST 
0x668: V632 = 0x40
0x66a: V633 = M[0x40]
0x66c: V634 = M[V633]
0x66d: V635 = 0x0
0x670: V636 = S[0x0]
0x674: V637 = 0x1
0x676: V638 = 0xa0
0x678: V639 = 0x2
0x67a: V640 = EXP 0x2 0xa0
0x67b: V641 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67e: V642 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x681: V643 = 0xa9059cbb
0x687: V644 = AND V636 0xffffffffffffffffffffffffffffffffffffffff
0x68b: V645 = 0x40
0x68d: V646 = M[0x40]
0x68e: V647 = 0x20
0x690: V648 = ADD 0x20 V646
0x691: M[V648] = 0x0
0x692: V649 = 0x40
0x694: V650 = M[0x40]
0x695: V651 = 0xe0
0x697: V652 = 0x2
0x699: V653 = EXP 0x2 0xe0
0x69a: V654 = 0xffffffff
0x6a0: V655 = AND 0xa9059cbb 0xffffffff
0x6a1: V656 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6a3: M[V650] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6a4: V657 = 0x1
0x6a6: V658 = 0xa0
0x6a8: V659 = 0x2
0x6aa: V660 = EXP 0x2 0xa0
0x6ab: V661 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ae: V662 = AND V644 0xffffffffffffffffffffffffffffffffffffffff
0x6af: V663 = 0x4
0x6b2: V664 = ADD V650 0x4
0x6b3: M[V664] = V662
0x6b4: V665 = 0x24
0x6b7: V666 = ADD V650 0x24
0x6b8: M[V666] = V634
0x6b9: V667 = 0x44
0x6bb: V668 = ADD 0x44 V650
0x6bc: V669 = 0x20
0x6be: V670 = 0x40
0x6c0: V671 = M[0x40]
0x6c3: V672 = SUB V668 V671
0x6c5: V673 = 0x0
0x6c9: V674 = EXTCODESIZE V642
0x6ca: V675 = ISZERO V674
0x6cb: V676 = ISZERO V675
0x6cc: V677 = 0x6d4
0x6cf: JUMPI 0x6d4 V676
---
Entry stack: [V12, 0x226, V204, V204, 0x0, V588, 0x70a08231, V613]
Stack pops: 5
Stack additions: [S4, V634, V642, 0xa9059cbb, V668, 0x20, V671, V672, V671, 0x0, V642]
Exit stack: [V12, 0x226, V204, V204, V634, V642, 0xa9059cbb, V668, 0x20, V671, V672, V671, 0x0, V642]

================================

Block 0x6d0
[0x6d0:0x6d3]
---
Predecessors: [0x664]
Successors: []
---
0x6d0 PUSH1 0x0
0x6d2 DUP1
0x6d3 REVERT
---
0x6d0: V678 = 0x0
0x6d3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V204, V204, V634, V642, 0xa9059cbb, V668, 0x20, V671, V672, V671, 0x0, V642]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V204, V204, V634, V642, 0xa9059cbb, V668, 0x20, V671, V672, V671, 0x0, V642]

================================

Block 0x6d4
[0x6d4:0x6e0]
---
Predecessors: [0x664]
Successors: [0x6e1, 0x6e5]
---
0x6d4 JUMPDEST
0x6d5 PUSH2 0x2c6
0x6d8 GAS
0x6d9 SUB
0x6da CALL
0x6db ISZERO
0x6dc ISZERO
0x6dd PUSH2 0x6e5
0x6e0 JUMPI
---
0x6d4: JUMPDEST 
0x6d5: V679 = 0x2c6
0x6d8: V680 = GAS
0x6d9: V681 = SUB V680 0x2c6
0x6da: V682 = CALL V681 V642 0x0 V671 V672 V671 0x20
0x6db: V683 = ISZERO V682
0x6dc: V684 = ISZERO V683
0x6dd: V685 = 0x6e5
0x6e0: JUMPI 0x6e5 V684
---
Entry stack: [V12, 0x226, V204, V204, V634, V642, 0xa9059cbb, V668, 0x20, V671, V672, V671, 0x0, V642]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x226, V204, V204, V634, V642, 0xa9059cbb, V668]

================================

Block 0x6e1
[0x6e1:0x6e4]
---
Predecessors: [0x6d4]
Successors: []
---
0x6e1 PUSH1 0x0
0x6e3 DUP1
0x6e4 REVERT
---
0x6e1: V686 = 0x0
0x6e4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V204, V204, V634, V642, 0xa9059cbb, V668]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V204, V204, V634, V642, 0xa9059cbb, V668]

================================

Block 0x6e5
[0x6e5:0x6f3]
---
Predecessors: [0x6d4]
Successors: [0x226]
---
0x6e5 JUMPDEST
0x6e6 POP
0x6e7 POP
0x6e8 POP
0x6e9 PUSH1 0x40
0x6eb MLOAD
0x6ec DUP1
0x6ed MLOAD
0x6ee POP
0x6ef POP
0x6f0 POP
0x6f1 POP
0x6f2 POP
0x6f3 JUMP
---
0x6e5: JUMPDEST 
0x6e9: V687 = 0x40
0x6eb: V688 = M[0x40]
0x6ed: V689 = M[V688]
0x6f3: JUMP 0x226
---
Entry stack: [V12, 0x226, V204, V204, V634, V642, 0xa9059cbb, V668]
Stack pops: 7
Stack additions: []
Exit stack: [V12]

================================

Block 0x6f4
[0x6f4:0x6f9]
---
Predecessors: [0x268]
Successors: [0x270]
---
0x6f4 JUMPDEST
0x6f5 PUSH1 0x2
0x6f7 SLOAD
0x6f8 DUP2
0x6f9 JUMP
---
0x6f4: JUMPDEST 
0x6f5: V690 = 0x2
0x6f7: V691 = S[0x2]
0x6f9: JUMP 0x270
---
Entry stack: [V12, 0x270]
Stack pops: 1
Stack additions: [S0, V691]
Exit stack: [V12, 0x270, V691]

================================

Block 0x6fa
[0x6fa:0x6ff]
---
Predecessors: [0x28d]
Successors: [0x270]
---
0x6fa JUMPDEST
0x6fb PUSH1 0x9
0x6fd SLOAD
0x6fe DUP2
0x6ff JUMP
---
0x6fa: JUMPDEST 
0x6fb: V692 = 0x9
0x6fd: V693 = S[0x9]
0x6ff: JUMP 0x270
---
Entry stack: [V12, 0x270]
Stack pops: 1
Stack additions: [S0, V693]
Exit stack: [V12, 0x270, V693]

================================

Block 0x700
[0x700:0x711]
---
Predecessors: [0x2a0]
Successors: [0x270]
---
0x700 JUMPDEST
0x701 PUSH1 0x7
0x703 PUSH1 0x20
0x705 MSTORE
0x706 PUSH1 0x0
0x708 SWAP1
0x709 DUP2
0x70a MSTORE
0x70b PUSH1 0x40
0x70d SWAP1
0x70e SHA3
0x70f SLOAD
0x710 DUP2
0x711 JUMP
---
0x700: JUMPDEST 
0x701: V694 = 0x7
0x703: V695 = 0x20
0x705: M[0x20] = 0x7
0x706: V696 = 0x0
0x70a: M[0x0] = V237
0x70b: V697 = 0x40
0x70e: V698 = SHA3 0x0 0x40
0x70f: V699 = S[V698]
0x711: JUMP 0x270
---
Entry stack: [V12, 0x270, V237]
Stack pops: 2
Stack additions: [S1, V699]
Exit stack: [V12, 0x270, V699]

================================

Block 0x712
[0x712:0x720]
---
Predecessors: [0x2bf]
Successors: [0x2c7]
---
0x712 JUMPDEST
0x713 PUSH1 0x6
0x715 SLOAD
0x716 PUSH1 0x1
0x718 PUSH1 0xa0
0x71a PUSH1 0x2
0x71c EXP
0x71d SUB
0x71e AND
0x71f DUP2
0x720 JUMP
---
0x712: JUMPDEST 
0x713: V700 = 0x6
0x715: V701 = S[0x6]
0x716: V702 = 0x1
0x718: V703 = 0xa0
0x71a: V704 = 0x2
0x71c: V705 = EXP 0x2 0xa0
0x71d: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71e: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0x720: JUMP 0x2c7
---
Entry stack: [V12, 0x2c7]
Stack pops: 1
Stack additions: [S0, V707]
Exit stack: [V12, 0x2c7, V707]

================================

Block 0x721
[0x721:0x72e]
---
Predecessors: [0x2ee]
Successors: [0x2f6]
---
0x721 JUMPDEST
0x722 PUSH1 0x8
0x724 SLOAD
0x725 PUSH2 0x100
0x728 SWAP1
0x729 DIV
0x72a PUSH1 0xff
0x72c AND
0x72d DUP2
0x72e JUMP
---
0x721: JUMPDEST 
0x722: V708 = 0x8
0x724: V709 = S[0x8]
0x725: V710 = 0x100
0x729: V711 = DIV V709 0x100
0x72a: V712 = 0xff
0x72c: V713 = AND 0xff V711
0x72e: JUMP 0x2f6
---
Entry stack: [V12, 0x2f6]
Stack pops: 1
Stack additions: [S0, V713]
Exit stack: [V12, 0x2f6, V713]

================================

Block 0x72f
[0x72f:0x734]
---
Predecessors: [0x315]
Successors: [0x270]
---
0x72f JUMPDEST
0x730 PUSH1 0x1
0x732 SLOAD
0x733 DUP2
0x734 JUMP
---
0x72f: JUMPDEST 
0x730: V714 = 0x1
0x732: V715 = S[0x1]
0x734: JUMP 0x270
---
Entry stack: [V12, 0x270]
Stack pops: 1
Stack additions: [S0, V715]
Exit stack: [V12, 0x270, V715]

================================

Block 0x735
[0x735:0x73d]
---
Predecessors: [0x328]
Successors: [0x2f6]
---
0x735 JUMPDEST
0x736 PUSH1 0xa
0x738 SLOAD
0x739 PUSH1 0xff
0x73b AND
0x73c DUP2
0x73d JUMP
---
0x735: JUMPDEST 
0x736: V716 = 0xa
0x738: V717 = S[0xa]
0x739: V718 = 0xff
0x73b: V719 = AND 0xff V717
0x73d: JUMP 0x2f6
---
Entry stack: [V12, 0x2f6]
Stack pops: 1
Stack additions: [S0, V719]
Exit stack: [V12, 0x2f6, V719]

================================

Block 0x73e
[0x73e:0x742]
---
Predecessors: [0x33b]
Successors: []
---
0x73e JUMPDEST
0x73f PUSH1 0x0
0x741 DUP1
0x742 REVERT
---
0x73e: JUMPDEST 
0x73f: V720 = 0x0
0x742: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V297, V299, V302, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V297, V299, V302, V304]

================================

Block 0x743
[0x743:0x748]
---
Predecessors: [0x36a]
Successors: [0x270]
---
0x743 JUMPDEST
0x744 PUSH1 0x3
0x746 SLOAD
0x747 DUP2
0x748 JUMP
---
0x743: JUMPDEST 
0x744: V721 = 0x3
0x746: V722 = S[0x3]
0x748: JUMP 0x270
---
Entry stack: [V12, 0x270]
Stack pops: 1
Stack additions: [S0, V722]
Exit stack: [V12, 0x270, V722]

================================

Block 0x749
[0x749:0x751]
---
Predecessors: [0x37d]
Successors: [0x2f6]
---
0x749 JUMPDEST
0x74a PUSH1 0x8
0x74c SLOAD
0x74d PUSH1 0xff
0x74f AND
0x750 DUP2
0x751 JUMP
---
0x749: JUMPDEST 
0x74a: V723 = 0x8
0x74c: V724 = S[0x8]
0x74d: V725 = 0xff
0x74f: V726 = AND 0xff V724
0x751: JUMP 0x2f6
---
Entry stack: [V12, 0x2f6]
Stack pops: 1
Stack additions: [S0, V726]
Exit stack: [V12, 0x2f6, V726]

================================

Block 0x752
[0x752:0x757]
---
Predecessors: [0x390]
Successors: [0x270]
---
0x752 JUMPDEST
0x753 PUSH1 0x4
0x755 SLOAD
0x756 DUP2
0x757 JUMP
---
0x752: JUMPDEST 
0x753: V727 = 0x4
0x755: V728 = S[0x4]
0x757: JUMP 0x270
---
Entry stack: [V12, 0x270]
Stack pops: 1
Stack additions: [S0, V728]
Exit stack: [V12, 0x270, V728]

================================

Block 0x758
[0x758:0x76e]
---
Predecessors: [0x3a3]
Successors: [0x76f, 0x773]
---
0x758 JUMPDEST
0x759 PUSH1 0x0
0x75b SLOAD
0x75c CALLER
0x75d PUSH1 0x1
0x75f PUSH1 0xa0
0x761 PUSH1 0x2
0x763 EXP
0x764 SUB
0x765 SWAP1
0x766 DUP2
0x767 AND
0x768 SWAP2
0x769 AND
0x76a EQ
0x76b PUSH2 0x773
0x76e JUMPI
---
0x758: JUMPDEST 
0x759: V729 = 0x0
0x75b: V730 = S[0x0]
0x75c: V731 = CALLER
0x75d: V732 = 0x1
0x75f: V733 = 0xa0
0x761: V734 = 0x2
0x763: V735 = EXP 0x2 0xa0
0x764: V736 = SUB 0x10000000000000000000000000000000000000000 0x1
0x767: V737 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0x769: V738 = AND V730 0xffffffffffffffffffffffffffffffffffffffff
0x76a: V739 = EQ V738 V737
0x76b: V740 = 0x773
0x76e: JUMPI 0x773 V739
---
Entry stack: [V12, 0x226, V336]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V336]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x758]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V741 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V336]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V336]

================================

Block 0x773
[0x773:0x783]
---
Predecessors: [0x758]
Successors: [0x784, 0x788]
---
0x773 JUMPDEST
0x774 PUSH1 0x1
0x776 PUSH1 0xa0
0x778 PUSH1 0x2
0x77a EXP
0x77b SUB
0x77c DUP2
0x77d AND
0x77e ISZERO
0x77f ISZERO
0x780 PUSH2 0x788
0x783 JUMPI
---
0x773: JUMPDEST 
0x774: V742 = 0x1
0x776: V743 = 0xa0
0x778: V744 = 0x2
0x77a: V745 = EXP 0x2 0xa0
0x77b: V746 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77d: V747 = AND V336 0xffffffffffffffffffffffffffffffffffffffff
0x77e: V748 = ISZERO V747
0x77f: V749 = ISZERO V748
0x780: V750 = 0x788
0x783: JUMPI 0x788 V749
---
Entry stack: [V12, 0x226, V336]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x226, V336]

================================

Block 0x784
[0x784:0x787]
---
Predecessors: [0x773]
Successors: []
---
0x784 PUSH1 0x0
0x786 DUP1
0x787 REVERT
---
0x784: V751 = 0x0
0x787: REVERT 0x0 0x0
---
Entry stack: [V12, 0x226, V336]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, V336]

================================

Block 0x788
[0x788:0x7b6]
---
Predecessors: [0x773]
Successors: [0x226]
---
0x788 JUMPDEST
0x789 PUSH1 0x0
0x78b DUP1
0x78c SLOAD
0x78d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a2 NOT
0x7a3 AND
0x7a4 PUSH1 0x1
0x7a6 PUSH1 0xa0
0x7a8 PUSH1 0x2
0x7aa EXP
0x7ab SUB
0x7ac SWAP3
0x7ad SWAP1
0x7ae SWAP3
0x7af AND
0x7b0 SWAP2
0x7b1 SWAP1
0x7b2 SWAP2
0x7b3 OR
0x7b4 SWAP1
0x7b5 SSTORE
0x7b6 JUMP
---
0x788: JUMPDEST 
0x789: V752 = 0x0
0x78c: V753 = S[0x0]
0x78d: V754 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a2: V755 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7a3: V756 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V753
0x7a4: V757 = 0x1
0x7a6: V758 = 0xa0
0x7a8: V759 = 0x2
0x7aa: V760 = EXP 0x2 0xa0
0x7ab: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7af: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x7b3: V763 = OR V762 V756
0x7b5: S[0x0] = V763
0x7b6: JUMP 0x226
---
Entry stack: [V12, 0x226, V336]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b7
[0x7b7:0x7c3]
---
Predecessors: [0x599]
Successors: [0x7c4, 0x962]
---
0x7b7 JUMPDEST
0x7b8 PUSH1 0x3
0x7ba SLOAD
0x7bb PUSH1 0x0
0x7bd SWAP1
0x7be TIMESTAMP
0x7bf LT
0x7c0 PUSH2 0x962
0x7c3 JUMPI
---
0x7b7: JUMPDEST 
0x7b8: V764 = 0x3
0x7ba: V765 = S[0x3]
0x7bb: V766 = 0x0
0x7be: V767 = TIMESTAMP
0x7bf: V768 = LT V767 V765
0x7c0: V769 = 0x962
0x7c3: JUMPI 0x962 V768
---
Entry stack: [V12, 0x226, 0x5a9]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x226, 0x5a9, 0x0]

================================

Block 0x7c4
[0x7c4:0x7cf]
---
Predecessors: [0x7b7]
Successors: [0x7d0, 0x896]
---
0x7c4 PUSH1 0x8
0x7c6 SLOAD
0x7c7 PUSH1 0xff
0x7c9 AND
0x7ca ISZERO
0x7cb ISZERO
0x7cc PUSH2 0x896
0x7cf JUMPI
---
0x7c4: V770 = 0x8
0x7c6: V771 = S[0x8]
0x7c7: V772 = 0xff
0x7c9: V773 = AND 0xff V771
0x7ca: V774 = ISZERO V773
0x7cb: V775 = ISZERO V774
0x7cc: V776 = 0x896
0x7cf: JUMPI 0x896 V775
---
Entry stack: [V12, 0x226, 0x5a9, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, 0x5a9, 0x0]

================================

Block 0x7d0
[0x7d0:0x7f6]
---
Predecessors: [0x7c4]
Successors: [0x7f7, 0x896]
---
0x7d0 POP
0x7d1 PUSH1 0x1
0x7d3 PUSH1 0xa0
0x7d5 PUSH1 0x2
0x7d7 EXP
0x7d8 SUB
0x7d9 CALLER
0x7da AND
0x7db PUSH1 0x0
0x7dd SWAP1
0x7de DUP2
0x7df MSTORE
0x7e0 PUSH1 0x7
0x7e2 PUSH1 0x20
0x7e4 MSTORE
0x7e5 PUSH1 0x40
0x7e7 DUP2
0x7e8 SHA3
0x7e9 DUP1
0x7ea SLOAD
0x7eb SWAP1
0x7ec DUP3
0x7ed SWAP1
0x7ee SSTORE
0x7ef SWAP1
0x7f0 DUP2
0x7f1 GT
0x7f2 ISZERO
0x7f3 PUSH2 0x896
0x7f6 JUMPI
---
0x7d1: V777 = 0x1
0x7d3: V778 = 0xa0
0x7d5: V779 = 0x2
0x7d7: V780 = EXP 0x2 0xa0
0x7d8: V781 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d9: V782 = CALLER
0x7da: V783 = AND V782 0xffffffffffffffffffffffffffffffffffffffff
0x7db: V784 = 0x0
0x7df: M[0x0] = V783
0x7e0: V785 = 0x7
0x7e2: V786 = 0x20
0x7e4: M[0x20] = 0x7
0x7e5: V787 = 0x40
0x7e8: V788 = SHA3 0x0 0x40
0x7ea: V789 = S[V788]
0x7ee: S[V788] = 0x0
0x7f1: V790 = GT V789 0x0
0x7f2: V791 = ISZERO V790
0x7f3: V792 = 0x896
0x7f6: JUMPI 0x896 V791
---
Entry stack: [V12, 0x226, 0x5a9, 0x0]
Stack pops: 1
Stack additions: [V789]
Exit stack: [V12, 0x226, 0x5a9, V789]

================================

Block 0x7f7
[0x7f7:0x821]
---
Predecessors: [0x7d0]
Successors: [0x822, 0x87a]
---
0x7f7 PUSH1 0x1
0x7f9 PUSH1 0xa0
0x7fb PUSH1 0x2
0x7fd EXP
0x7fe SUB
0x7ff CALLER
0x800 AND
0x801 DUP2
0x802 ISZERO
0x803 PUSH2 0x8fc
0x806 MUL
0x807 DUP3
0x808 PUSH1 0x40
0x80a MLOAD
0x80b PUSH1 0x0
0x80d PUSH1 0x40
0x80f MLOAD
0x810 DUP1
0x811 DUP4
0x812 SUB
0x813 DUP2
0x814 DUP6
0x815 DUP9
0x816 DUP9
0x817 CALL
0x818 SWAP4
0x819 POP
0x81a POP
0x81b POP
0x81c POP
0x81d ISZERO
0x81e PUSH2 0x87a
0x821 JUMPI
---
0x7f7: V793 = 0x1
0x7f9: V794 = 0xa0
0x7fb: V795 = 0x2
0x7fd: V796 = EXP 0x2 0xa0
0x7fe: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ff: V798 = CALLER
0x800: V799 = AND V798 0xffffffffffffffffffffffffffffffffffffffff
0x802: V800 = ISZERO V789
0x803: V801 = 0x8fc
0x806: V802 = MUL 0x8fc V800
0x808: V803 = 0x40
0x80a: V804 = M[0x40]
0x80b: V805 = 0x0
0x80d: V806 = 0x40
0x80f: V807 = M[0x40]
0x812: V808 = SUB V804 V807
0x817: V809 = CALL V802 V799 V789 V807 V808 V807 0x0
0x81d: V810 = ISZERO V809
0x81e: V811 = 0x87a
0x821: JUMPI 0x87a V810
---
Entry stack: [V12, 0x226, 0x5a9, V789]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x226, 0x5a9, V789]

================================

Block 0x822
[0x822:0x879]
---
Predecessors: [0x7f7]
Successors: [0x896]
---
0x822 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x843 CALLER
0x844 DUP3
0x845 PUSH1 0x0
0x847 PUSH1 0x40
0x849 MLOAD
0x84a PUSH1 0x1
0x84c PUSH1 0xa0
0x84e PUSH1 0x2
0x850 EXP
0x851 SUB
0x852 SWAP1
0x853 SWAP4
0x854 AND
0x855 DUP4
0x856 MSTORE
0x857 PUSH1 0x20
0x859 DUP4
0x85a ADD
0x85b SWAP2
0x85c SWAP1
0x85d SWAP2
0x85e MSTORE
0x85f ISZERO
0x860 ISZERO
0x861 PUSH1 0x40
0x863 DUP1
0x864 DUP4
0x865 ADD
0x866 SWAP2
0x867 SWAP1
0x868 SWAP2
0x869 MSTORE
0x86a PUSH1 0x60
0x86c SWAP1
0x86d SWAP2
0x86e ADD
0x86f SWAP1
0x870 MLOAD
0x871 DUP1
0x872 SWAP2
0x873 SUB
0x874 SWAP1
0x875 LOG1
0x876 PUSH2 0x896
0x879 JUMP
---
0x822: V812 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x843: V813 = CALLER
0x845: V814 = 0x0
0x847: V815 = 0x40
0x849: V816 = M[0x40]
0x84a: V817 = 0x1
0x84c: V818 = 0xa0
0x84e: V819 = 0x2
0x850: V820 = EXP 0x2 0xa0
0x851: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x854: V822 = AND V813 0xffffffffffffffffffffffffffffffffffffffff
0x856: M[V816] = V822
0x857: V823 = 0x20
0x85a: V824 = ADD V816 0x20
0x85e: M[V824] = V789
0x85f: V825 = ISZERO 0x0
0x860: V826 = ISZERO 0x1
0x861: V827 = 0x40
0x865: V828 = ADD V816 0x40
0x869: M[V828] = 0x0
0x86a: V829 = 0x60
0x86e: V830 = ADD V816 0x60
0x870: V831 = M[0x40]
0x873: V832 = SUB V830 V831
0x875: LOG V831 V832 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x876: V833 = 0x896
0x879: JUMP 0x896
---
Entry stack: [V12, 0x226, 0x5a9, V789]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x226, 0x5a9, V789]

================================

Block 0x87a
[0x87a:0x895]
---
Predecessors: [0x7f7]
Successors: [0x896]
---
0x87a JUMPDEST
0x87b PUSH1 0x1
0x87d PUSH1 0xa0
0x87f PUSH1 0x2
0x881 EXP
0x882 SUB
0x883 CALLER
0x884 AND
0x885 PUSH1 0x0
0x887 SWAP1
0x888 DUP2
0x889 MSTORE
0x88a PUSH1 0x7
0x88c PUSH1 0x20
0x88e MSTORE
0x88f PUSH1 0x40
0x891 SWAP1
0x892 SHA3
0x893 DUP2
0x894 SWAP1
0x895 SSTORE
---
0x87a: JUMPDEST 
0x87b: V834 = 0x1
0x87d: V835 = 0xa0
0x87f: V836 = 0x2
0x881: V837 = EXP 0x2 0xa0
0x882: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0x883: V839 = CALLER
0x884: V840 = AND V839 0xffffffffffffffffffffffffffffffffffffffff
0x885: V841 = 0x0
0x889: M[0x0] = V840
0x88a: V842 = 0x7
0x88c: V843 = 0x20
0x88e: M[0x20] = 0x7
0x88f: V844 = 0x40
0x892: V845 = SHA3 0x0 0x40
0x895: S[V845] = V789
---
Entry stack: [V12, 0x226, 0x5a9, V789]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x226, 0x5a9, V789]

================================

Block 0x896
[0x896:0x8a2]
---
Predecessors: [0x7c4, 0x7d0, 0x822, 0x87a]
Successors: [0x8a3, 0x8b6]
---
0x896 JUMPDEST
0x897 PUSH1 0x8
0x899 SLOAD
0x89a PUSH1 0xff
0x89c AND
0x89d DUP1
0x89e ISZERO
0x89f PUSH2 0x8b6
0x8a2 JUMPI
---
0x896: JUMPDEST 
0x897: V846 = 0x8
0x899: V847 = S[0x8]
0x89a: V848 = 0xff
0x89c: V849 = AND 0xff V847
0x89e: V850 = ISZERO V849
0x89f: V851 = 0x8b6
0x8a2: JUMPI 0x8b6 V850
---
Entry stack: [V12, 0x226, 0x5a9, S0]
Stack pops: 0
Stack additions: [V849]
Exit stack: [V12, 0x226, 0x5a9, S0, V849]

================================

Block 0x8a3
[0x8a3:0x8b5]
---
Predecessors: [0x896]
Successors: [0x8b6]
---
0x8a3 POP
0x8a4 PUSH1 0x0
0x8a6 SLOAD
0x8a7 CALLER
0x8a8 PUSH1 0x1
0x8aa PUSH1 0xa0
0x8ac PUSH1 0x2
0x8ae EXP
0x8af SUB
0x8b0 SWAP1
0x8b1 DUP2
0x8b2 AND
0x8b3 SWAP2
0x8b4 AND
0x8b5 EQ
---
0x8a4: V852 = 0x0
0x8a6: V853 = S[0x0]
0x8a7: V854 = CALLER
0x8a8: V855 = 0x1
0x8aa: V856 = 0xa0
0x8ac: V857 = 0x2
0x8ae: V858 = EXP 0x2 0xa0
0x8af: V859 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b2: V860 = AND 0xffffffffffffffffffffffffffffffffffffffff V854
0x8b4: V861 = AND V853 0xffffffffffffffffffffffffffffffffffffffff
0x8b5: V862 = EQ V861 V860
---
Entry stack: [V12, 0x226, 0x5a9, S1, V849]
Stack pops: 1
Stack additions: [V862]
Exit stack: [V12, 0x226, 0x5a9, S1, V862]

================================

Block 0x8b6
[0x8b6:0x8bb]
---
Predecessors: [0x896, 0x8a3]
Successors: [0x8bc, 0x962]
---
0x8b6 JUMPDEST
0x8b7 ISZERO
0x8b8 PUSH2 0x962
0x8bb JUMPI
---
0x8b6: JUMPDEST 
0x8b7: V863 = ISZERO S0
0x8b8: V864 = 0x962
0x8bb: JUMPI 0x962 V863
---
Entry stack: [V12, 0x226, 0x5a9, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x226, 0x5a9, S1]

================================

Block 0x8bc
[0x8bc:0x8ee]
---
Predecessors: [0x8b6]
Successors: [0x8ef, 0x957]
---
0x8bc PUSH1 0x0
0x8be SLOAD
0x8bf PUSH1 0x2
0x8c1 SLOAD
0x8c2 PUSH1 0x1
0x8c4 PUSH1 0xa0
0x8c6 PUSH1 0x2
0x8c8 EXP
0x8c9 SUB
0x8ca SWAP1
0x8cb SWAP2
0x8cc AND
0x8cd SWAP1
0x8ce DUP1
0x8cf ISZERO
0x8d0 PUSH2 0x8fc
0x8d3 MUL
0x8d4 SWAP1
0x8d5 PUSH1 0x40
0x8d7 MLOAD
0x8d8 PUSH1 0x0
0x8da PUSH1 0x40
0x8dc MLOAD
0x8dd DUP1
0x8de DUP4
0x8df SUB
0x8e0 DUP2
0x8e1 DUP6
0x8e2 DUP9
0x8e3 DUP9
0x8e4 CALL
0x8e5 SWAP4
0x8e6 POP
0x8e7 POP
0x8e8 POP
0x8e9 POP
0x8ea ISZERO
0x8eb PUSH2 0x957
0x8ee JUMPI
---
0x8bc: V865 = 0x0
0x8be: V866 = S[0x0]
0x8bf: V867 = 0x2
0x8c1: V868 = S[0x2]
0x8c2: V869 = 0x1
0x8c4: V870 = 0xa0
0x8c6: V871 = 0x2
0x8c8: V872 = EXP 0x2 0xa0
0x8c9: V873 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8cc: V874 = AND V866 0xffffffffffffffffffffffffffffffffffffffff
0x8cf: V875 = ISZERO V868
0x8d0: V876 = 0x8fc
0x8d3: V877 = MUL 0x8fc V875
0x8d5: V878 = 0x40
0x8d7: V879 = M[0x40]
0x8d8: V880 = 0x0
0x8da: V881 = 0x40
0x8dc: V882 = M[0x40]
0x8df: V883 = SUB V879 V882
0x8e4: V884 = CALL V877 V874 V868 V882 V883 V882 0x0
0x8ea: V885 = ISZERO V884
0x8eb: V886 = 0x957
0x8ee: JUMPI 0x957 V885
---
Entry stack: [V12, 0x226, 0x5a9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, 0x5a9, S0]

================================

Block 0x8ef
[0x8ef:0x956]
---
Predecessors: [0x8bc]
Successors: [0x962]
---
0x8ef PUSH1 0x0
0x8f1 DUP1
0x8f2 SLOAD
0x8f3 PUSH1 0x2
0x8f5 SLOAD
0x8f6 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x917 SWAP3
0x918 PUSH1 0x1
0x91a PUSH1 0xa0
0x91c PUSH1 0x2
0x91e EXP
0x91f SUB
0x920 SWAP1
0x921 SWAP3
0x922 AND
0x923 SWAP2
0x924 PUSH1 0x40
0x926 MLOAD
0x927 PUSH1 0x1
0x929 PUSH1 0xa0
0x92b PUSH1 0x2
0x92d EXP
0x92e SUB
0x92f SWAP1
0x930 SWAP4
0x931 AND
0x932 DUP4
0x933 MSTORE
0x934 PUSH1 0x20
0x936 DUP4
0x937 ADD
0x938 SWAP2
0x939 SWAP1
0x93a SWAP2
0x93b MSTORE
0x93c ISZERO
0x93d ISZERO
0x93e PUSH1 0x40
0x940 DUP1
0x941 DUP4
0x942 ADD
0x943 SWAP2
0x944 SWAP1
0x945 SWAP2
0x946 MSTORE
0x947 PUSH1 0x60
0x949 SWAP1
0x94a SWAP2
0x94b ADD
0x94c SWAP1
0x94d MLOAD
0x94e DUP1
0x94f SWAP2
0x950 SUB
0x951 SWAP1
0x952 LOG1
0x953 PUSH2 0x962
0x956 JUMP
---
0x8ef: V887 = 0x0
0x8f2: V888 = S[0x0]
0x8f3: V889 = 0x2
0x8f5: V890 = S[0x2]
0x8f6: V891 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x918: V892 = 0x1
0x91a: V893 = 0xa0
0x91c: V894 = 0x2
0x91e: V895 = EXP 0x2 0xa0
0x91f: V896 = SUB 0x10000000000000000000000000000000000000000 0x1
0x922: V897 = AND V888 0xffffffffffffffffffffffffffffffffffffffff
0x924: V898 = 0x40
0x926: V899 = M[0x40]
0x927: V900 = 0x1
0x929: V901 = 0xa0
0x92b: V902 = 0x2
0x92d: V903 = EXP 0x2 0xa0
0x92e: V904 = SUB 0x10000000000000000000000000000000000000000 0x1
0x931: V905 = AND V897 0xffffffffffffffffffffffffffffffffffffffff
0x933: M[V899] = V905
0x934: V906 = 0x20
0x937: V907 = ADD V899 0x20
0x93b: M[V907] = V890
0x93c: V908 = ISZERO 0x0
0x93d: V909 = ISZERO 0x1
0x93e: V910 = 0x40
0x942: V911 = ADD V899 0x40
0x946: M[V911] = 0x0
0x947: V912 = 0x60
0x94b: V913 = ADD V899 0x60
0x94d: V914 = M[0x40]
0x950: V915 = SUB V913 V914
0x952: LOG V914 V915 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x953: V916 = 0x962
0x956: JUMP 0x962
---
Entry stack: [V12, 0x226, 0x5a9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, 0x5a9, S0]

================================

Block 0x957
[0x957:0x961]
---
Predecessors: [0x8bc]
Successors: [0x962]
---
0x957 JUMPDEST
0x958 PUSH1 0x8
0x95a DUP1
0x95b SLOAD
0x95c PUSH1 0xff
0x95e NOT
0x95f AND
0x960 SWAP1
0x961 SSTORE
---
0x957: JUMPDEST 
0x958: V917 = 0x8
0x95b: V918 = S[0x8]
0x95c: V919 = 0xff
0x95e: V920 = NOT 0xff
0x95f: V921 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V918
0x961: S[0x8] = V921
---
Entry stack: [V12, 0x226, 0x5a9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x226, 0x5a9, S0]

================================

Block 0x962
[0x962:0x964]
---
Predecessors: [0x7b7, 0x8b6, 0x8ef, 0x957]
Successors: [0x5a9]
---
0x962 JUMPDEST
0x963 POP
0x964 JUMP
---
0x962: JUMPDEST 
0x964: JUMP 0x5a9
---
Entry stack: [V12, 0x226, 0x5a9, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x226]

================================

Block 0x965
[0x965:0x9a7]
---
Predecessors: []
Successors: []
---
0x965 STOP
0x966 LOG1
0x967 PUSH6 0x627a7a723058
0x96e SHA3
0x96f SGT
0x970 DUP14
0x971 MISSING 0x4a
0x972 SWAP6
0x973 MISSING 0xcc
0x974 MISSING 0xc5
0x975 MISSING 0xed
0x976 DIFFICULTY
0x977 MISSING 0xf9
0x978 DUP2
0x979 DUP9
0x97a DUP15
0x97b MISSING 0xb9
0x97c ADD
0x97d MSTORE
0x97e MISSING 0xe8
0x97f SAR
0x980 EXTCODESIZE
0x981 MISSING 0xee
0x982 SWAP7
0x983 SGT
0x984 MISSING 0xea
0x985 MISSING 0xda
0x986 CALLCODE
0x987 SELFDESTRUCT
0x988 MISSING 0x48
0x989 MISSING 0xb5
0x98a MISSING 0xb5
0x98b PUSH28 0x1e96420029
---
0x965: STOP 
0x966: LOG S0 S1 S2
0x967: V922 = 0x627a7a723058
0x96e: V923 = SHA3 0x627a7a723058 S3
0x96f: V924 = SGT V923 S4
0x971: MISSING 0x4a
0x973: MISSING 0xcc
0x974: MISSING 0xc5
0x975: MISSING 0xed
0x976: V925 = DIFFICULTY
0x977: MISSING 0xf9
0x97b: MISSING 0xb9
0x97c: V926 = ADD S0 S1
0x97d: M[V926] = S2
0x97e: MISSING 0xe8
0x97f: V927 = SAR S0 S1
0x980: V928 = EXTCODESIZE V927
0x981: MISSING 0xee
0x983: V929 = SGT S7 S1
0x984: MISSING 0xea
0x985: MISSING 0xda
0x986: V930 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x987: SELFDESTRUCT V930
0x988: MISSING 0x48
0x989: MISSING 0xb5
0x98a: MISSING 0xb5
0x98b: V931 = 0x1e96420029
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, V924, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S6, S1, S2, S3, S4, S5, S0, V925, S12, S7, S1, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V928, V929, S2, S3, S4, S5, S6, S0, 0x1e96420029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x213
Exit block: 0x595
Body: 0x213, 0x21a, 0x21e, 0x226, 0x42e, 0x445, 0x449, 0x453, 0x45e, 0x4be, 0x502, 0x506, 0x513, 0x517, 0x584, 0x588, 0x595, 0x599, 0x5a9, 0x5b9, 0x7b7, 0x7c4, 0x7d0, 0x7f7, 0x822, 0x87a, 0x896, 0x8a3, 0x8b6, 0x8bc, 0x8ef, 0x957, 0x962

Function 1:
Public function signature: 0x92e1df6
Entry block: 0x228
Exit block: 0x226
Body: 0x226, 0x228, 0x22f, 0x233, 0x5bb, 0x5d2, 0x5d6

Function 2:
Public function signature: 0x17ffc320
Entry block: 0x23e
Exit block: 0x226
Body: 0x226, 0x23e, 0x245, 0x249, 0x5db, 0x5f5, 0x5f9, 0x64f, 0x653, 0x660, 0x664, 0x6d0, 0x6d4, 0x6e1, 0x6e5

Function 3:
Public function signature: 0x8e911839
Entry block: 0x25d
Exit block: 0x270
Body: 0x25d, 0x264, 0x268, 0x270, 0x6f4

Function 4:
Public function signature: 0xa035b1fe
Entry block: 0x282
Exit block: 0x270
Body: 0x270, 0x282, 0x289, 0x28d, 0x6fa

Function 5:
Public function signature: 0xa48a1b41
Entry block: 0x295
Exit block: 0x270
Body: 0x270, 0x295, 0x29c, 0x2a0, 0x700

Function 6:
Public function signature: 0xaad7c2ea
Entry block: 0x2b4
Exit block: 0x2c7
Body: 0x2b4, 0x2bb, 0x2bf, 0x2c7, 0x712

Function 7:
Public function signature: 0xad2f7ebb
Entry block: 0x2e3
Exit block: 0x2f6
Body: 0x2e3, 0x2ea, 0x2ee, 0x2f6, 0x721

Function 8:
Public function signature: 0xb308b512
Entry block: 0x30a
Exit block: 0x270
Body: 0x270, 0x30a, 0x311, 0x315, 0x72f

Function 9:
Public function signature: 0xb3f05b97
Entry block: 0x31d
Exit block: 0x2f6
Body: 0x2f6, 0x31d, 0x324, 0x328, 0x735

Function 10:
Public function signature: 0xc0ee0b8a
Entry block: 0x330
Exit block: 0x73e
Body: 0x330, 0x337, 0x33b, 0x73e

Function 11:
Public function signature: 0xc6f221aa
Entry block: 0x35f
Exit block: 0x270
Body: 0x270, 0x35f, 0x366, 0x36a, 0x743

Function 12:
Public function signature: 0xd424f628
Entry block: 0x372
Exit block: 0x2f6
Body: 0x2f6, 0x372, 0x379, 0x37d, 0x749

Function 13:
Public function signature: 0xee3b09ca
Entry block: 0x385
Exit block: 0x270
Body: 0x270, 0x385, 0x38c, 0x390, 0x752

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x398
Exit block: 0x226
Body: 0x226, 0x398, 0x39f, 0x3a3, 0x758, 0x76f, 0x773, 0x784, 0x788

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x415
Body: 0xbf, 0xd5, 0xd9, 0xe2, 0xe6, 0xf5, 0xf6, 0xfa, 0x105, 0x110, 0x115, 0x19b, 0x19f, 0x1ac, 0x1b0, 0x3b7, 0x404, 0x408, 0x415, 0x419

