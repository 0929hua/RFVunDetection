Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x111]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xb401faf1
0x3c EQ
0x3d PUSH2 0x111
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xb401faf1
0x3c: V13 = EQ 0xb401faf1 V11
0x3d: V14 = 0x111
0x40: JUMPI 0x111 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x78]
---
Predecessors: [0x0, 0xd]
Successors: [0x79, 0x7d]
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 ORIGIN
0x45 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a AND
0x5b CALLER
0x5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71 AND
0x72 EQ
0x73 ISZERO
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x44: V16 = ORIGIN
0x45: V17 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a: V18 = AND 0xffffffffffffffffffffffffffffffffffffffff V16
0x5b: V19 = CALLER
0x5c: V20 = 0xffffffffffffffffffffffffffffffffffffffff
0x71: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff V19
0x72: V22 = EQ V21 V18
0x73: V23 = ISZERO V22
0x74: V24 = ISZERO V23
0x75: V25 = 0x7d
0x78: JUMPI 0x7d V24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x41]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V26 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x7d
[0x7d:0x8e]
---
Predecessors: [0x41]
Successors: [0x8f, 0x93]
---
0x7d JUMPDEST
0x7e PUSH7 0x38d7ea4c68000
0x86 CALLVALUE
0x87 LT
0x88 ISZERO
0x89 ISZERO
0x8a ISZERO
0x8b PUSH2 0x93
0x8e JUMPI
---
0x7d: JUMPDEST 
0x7e: V27 = 0x38d7ea4c68000
0x86: V28 = CALLVALUE
0x87: V29 = LT V28 0x38d7ea4c68000
0x88: V30 = ISZERO V29
0x89: V31 = ISZERO V30
0x8a: V32 = ISZERO V31
0x8b: V33 = 0x93
0x8e: JUMPI 0x93 V32
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x7d]
Successors: []
---
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8f: V34 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x93
[0x93:0xc5]
---
Predecessors: [0x7d]
Successors: [0xc6, 0x10e]
---
0x93 JUMPDEST
0x94 PUSH1 0x1
0x96 NUMBER
0x97 SUB
0x98 BLOCKHASH
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d DUP3
0x9e PUSH1 0x0
0xa0 NOT
0xa1 AND
0xa2 PUSH1 0x0
0xa4 NOT
0xa5 AND
0xa6 DUP2
0xa7 MSTORE
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP2
0xac POP
0xad POP
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 DUP1
0xb2 SWAP2
0xb3 SUB
0xb4 SWAP1
0xb5 SHA3
0xb6 PUSH1 0x1
0xb8 SWAP1
0xb9 DIV
0xba SWAP1
0xbb POP
0xbc PUSH1 0x1
0xbe SLOAD
0xbf DUP2
0xc0 GT
0xc1 ISZERO
0xc2 PUSH2 0x10e
0xc5 JUMPI
---
0x93: JUMPDEST 
0x94: V35 = 0x1
0x96: V36 = NUMBER
0x97: V37 = SUB V36 0x1
0x98: V38 = BLOCKHASH V37
0x99: V39 = 0x40
0x9b: V40 = M[0x40]
0x9e: V41 = 0x0
0xa0: V42 = NOT 0x0
0xa1: V43 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V38
0xa2: V44 = 0x0
0xa4: V45 = NOT 0x0
0xa5: V46 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V43
0xa7: M[V40] = V46
0xa8: V47 = 0x20
0xaa: V48 = ADD 0x20 V40
0xae: V49 = 0x40
0xb0: V50 = M[0x40]
0xb3: V51 = SUB V48 V50
0xb5: V52 = SHA3 V50 V51
0xb6: V53 = 0x1
0xb9: V54 = DIV V52 0x1
0xbc: V55 = 0x1
0xbe: V56 = S[0x1]
0xc0: V57 = GT V54 V56
0xc1: V58 = ISZERO V57
0xc2: V59 = 0x10e
0xc5: JUMPI 0x10e V58
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xc6
[0xc6:0x10d]
---
Predecessors: [0x93]
Successors: [0x10e]
---
0xc6 CALLER
0xc7 PUSH1 0x2
0xc9 PUSH1 0x0
0xcb PUSH2 0x100
0xce EXP
0xcf DUP2
0xd0 SLOAD
0xd1 DUP2
0xd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7 MUL
0xe8 NOT
0xe9 AND
0xea SWAP1
0xeb DUP4
0xec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101 AND
0x102 MUL
0x103 OR
0x104 SWAP1
0x105 SSTORE
0x106 POP
0x107 TIMESTAMP
0x108 PUSH1 0x3
0x10a DUP2
0x10b SWAP1
0x10c SSTORE
0x10d POP
---
0xc6: V60 = CALLER
0xc7: V61 = 0x2
0xc9: V62 = 0x0
0xcb: V63 = 0x100
0xce: V64 = EXP 0x100 0x0
0xd0: V65 = S[0x2]
0xd2: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V67 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xe8: V68 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V69 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V65
0xec: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x101: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x102: V72 = MUL V71 0x1
0x103: V73 = OR V72 V69
0x105: S[0x2] = V73
0x107: V74 = TIMESTAMP
0x108: V75 = 0x3
0x10c: S[0x3] = V74
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0x10e
[0x10e:0x110]
---
Predecessors: [0x93, 0xc6]
Successors: []
---
0x10e JUMPDEST
0x10f POP
0x110 STOP
---
0x10e: JUMPDEST 
0x110: STOP 
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0xd]
Successors: [0x119, 0x11d]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x111: JUMPDEST 
0x112: V76 = CALLVALUE
0x114: V77 = ISZERO V76
0x115: V78 = 0x11d
0x118: JUMPI 0x11d V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V76]
Exit stack: [V11, V76]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x111]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V79 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V11, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V76]

================================

Block 0x11d
[0x11d:0x125]
---
Predecessors: [0x111]
Successors: [0x128]
---
0x11d JUMPDEST
0x11e POP
0x11f PUSH2 0x126
0x122 PUSH2 0x128
0x125 JUMP
---
0x11d: JUMPDEST 
0x11f: V80 = 0x126
0x122: V81 = 0x128
0x125: JUMP 0x128
---
Entry stack: [V11, V76]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x126
[0x126:0x127]
---
Predecessors: [0x1f6]
Successors: []
---
0x126 JUMPDEST
0x127 STOP
---
0x126: JUMPDEST 
0x127: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x128
[0x128:0x138]
---
Predecessors: [0x11d]
Successors: [0x139, 0x13d]
---
0x128 JUMPDEST
0x129 PUSH3 0x15180
0x12d PUSH1 0x3
0x12f SLOAD
0x130 ADD
0x131 TIMESTAMP
0x132 GT
0x133 ISZERO
0x134 ISZERO
0x135 PUSH2 0x13d
0x138 JUMPI
---
0x128: JUMPDEST 
0x129: V82 = 0x15180
0x12d: V83 = 0x3
0x12f: V84 = S[0x3]
0x130: V85 = ADD V84 0x15180
0x131: V86 = TIMESTAMP
0x132: V87 = GT V86 V85
0x133: V88 = ISZERO V87
0x134: V89 = ISZERO V88
0x135: V90 = 0x13d
0x138: JUMPI 0x13d V89
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x139
[0x139:0x13c]
---
Predecessors: [0x128]
Successors: []
---
0x139 PUSH1 0x0
0x13b DUP1
0x13c REVERT
---
0x139: V91 = 0x0
0x13c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x13d
[0x13d:0x194]
---
Predecessors: [0x128]
Successors: [0x195, 0x199]
---
0x13d JUMPDEST
0x13e PUSH1 0x2
0x140 PUSH1 0x0
0x142 SWAP1
0x143 SLOAD
0x144 SWAP1
0x145 PUSH2 0x100
0x148 EXP
0x149 SWAP1
0x14a DIV
0x14b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x160 AND
0x161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x176 AND
0x177 CALLER
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d AND
0x18e EQ
0x18f ISZERO
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x13d: JUMPDEST 
0x13e: V92 = 0x2
0x140: V93 = 0x0
0x143: V94 = S[0x2]
0x145: V95 = 0x100
0x148: V96 = EXP 0x100 0x0
0x14a: V97 = DIV V94 0x1
0x14b: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x160: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x161: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x176: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x177: V102 = CALLER
0x178: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x18e: V105 = EQ V104 V101
0x18f: V106 = ISZERO V105
0x190: V107 = ISZERO V106
0x191: V108 = 0x199
0x194: JUMPI 0x199 V107
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x13d]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V109 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x199
[0x199:0x1ec]
---
Predecessors: [0x13d]
Successors: [0x1ed, 0x1f6]
---
0x199 JUMPDEST
0x19a CALLER
0x19b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b0 AND
0x1b1 PUSH2 0x8fc
0x1b4 ADDRESS
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb BALANCE
0x1cc SWAP1
0x1cd DUP2
0x1ce ISZERO
0x1cf MUL
0x1d0 SWAP1
0x1d1 PUSH1 0x40
0x1d3 MLOAD
0x1d4 PUSH1 0x0
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da DUP4
0x1db SUB
0x1dc DUP2
0x1dd DUP6
0x1de DUP9
0x1df DUP9
0x1e0 CALL
0x1e1 SWAP4
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 ISZERO
0x1e7 DUP1
0x1e8 ISZERO
0x1e9 PUSH2 0x1f6
0x1ec JUMPI
---
0x199: JUMPDEST 
0x19a: V110 = CALLER
0x19b: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1b1: V113 = 0x8fc
0x1b4: V114 = ADDRESS
0x1b5: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1cb: V117 = BALANCE V116
0x1ce: V118 = ISZERO V117
0x1cf: V119 = MUL V118 0x8fc
0x1d1: V120 = 0x40
0x1d3: V121 = M[0x40]
0x1d4: V122 = 0x0
0x1d6: V123 = 0x40
0x1d8: V124 = M[0x40]
0x1db: V125 = SUB V121 V124
0x1e0: V126 = CALL V119 V112 V117 V124 V125 V124 0x0
0x1e6: V127 = ISZERO V126
0x1e8: V128 = ISZERO V127
0x1e9: V129 = 0x1f6
0x1ec: JUMPI 0x1f6 V128
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: [V127]
Exit stack: [V11, 0x126, V127]

================================

Block 0x1ed
[0x1ed:0x1f5]
---
Predecessors: [0x199]
Successors: []
---
0x1ed RETURNDATASIZE
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 RETURNDATACOPY
0x1f2 RETURNDATASIZE
0x1f3 PUSH1 0x0
0x1f5 REVERT
---
0x1ed: V130 = RETURNDATASIZE
0x1ee: V131 = 0x0
0x1f1: RETURNDATACOPY 0x0 0x0 V130
0x1f2: V132 = RETURNDATASIZE
0x1f3: V133 = 0x0
0x1f5: REVERT 0x0 V132
---
Entry stack: [V11, 0x126, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126, V127]

================================

Block 0x1f6
[0x1f6:0x1f8]
---
Predecessors: [0x199]
Successors: [0x126]
---
0x1f6 JUMPDEST
0x1f7 POP
0x1f8 JUMP
---
0x1f6: JUMPDEST 
0x1f8: JUMP 0x126
---
Entry stack: [V11, 0x126, V127]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f9
[0x1f9:0x23a]
---
Predecessors: []
Successors: []
---
0x1f9 STOP
0x1fa LOG1
0x1fb PUSH6 0x627a7a723058
0x202 SHA3
0x203 MISSING 0x29
0x204 SWAP16
0x205 MISSING 0x25
0x206 MISSING 0xeb
0x207 MISSING 0x4b
0x208 CODESIZE
0x209 PUSH21 0xf8078ef86413ffcfa8ef80d2732cdc12389f2606dd
0x21f MISSING 0x4a
0x220 PUSH26 0xc6680029
---
0x1f9: STOP 
0x1fa: LOG S0 S1 S2
0x1fb: V134 = 0x627a7a723058
0x202: V135 = SHA3 0x627a7a723058 S3
0x203: MISSING 0x29
0x205: MISSING 0x25
0x206: MISSING 0xeb
0x207: MISSING 0x4b
0x208: V136 = CODESIZE
0x209: V137 = 0xf8078ef86413ffcfa8ef80d2732cdc12389f2606dd
0x21f: MISSING 0x4a
0x220: V138 = 0xc6680029
---
Entry stack: []
Stack pops: 0
Stack additions: [V135, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, 0xf8078ef86413ffcfa8ef80d2732cdc12389f2606dd, V136, 0xc6680029]
Exit stack: []

================================

Function 0:
Public function signature: 0xb401faf1
Entry block: 0x111
Exit block: 0x126
Body: 0x111, 0x119, 0x11d, 0x126, 0x128, 0x139, 0x13d, 0x195, 0x199, 0x1ed, 0x1f6

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x10e
Body: 0x41, 0x79, 0x7d, 0x8f, 0x93, 0xc6, 0x10e

