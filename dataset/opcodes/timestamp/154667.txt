Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x122]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x122
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x122
0xa: JUMPI 0x122 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x13f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2d05d3f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x13f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2d05d3f
0x20: V14 = EQ V12 0x2d05d3f
0x21: V15 = 0x13f
0x24: JUMPI 0x13f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x16e]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x16e
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x16e
0x2f: JUMPI 0x16e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x193]
---
0x30 DUP1
0x31 PUSH4 0x38771242
0x36 EQ
0x37 PUSH2 0x193
0x3a JUMPI
---
0x31: V19 = 0x38771242
0x36: V20 = EQ 0x38771242 V12
0x37: V21 = 0x193
0x3a: JUMPI 0x193 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1b8]
---
0x3b DUP1
0x3c PUSH4 0x38af3eed
0x41 EQ
0x42 PUSH2 0x1b8
0x45 JUMPI
---
0x3c: V22 = 0x38af3eed
0x41: V23 = EQ 0x38af3eed V12
0x42: V24 = 0x1b8
0x45: JUMPI 0x1b8 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1e7]
---
0x46 DUP1
0x47 PUSH4 0x3c8da588
0x4c EQ
0x4d PUSH2 0x1e7
0x50 JUMPI
---
0x47: V25 = 0x3c8da588
0x4c: V26 = EQ 0x3c8da588 V12
0x4d: V27 = 0x1e7
0x50: JUMPI 0x1e7 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x20c]
---
0x51 DUP1
0x52 PUSH4 0x400abd5f
0x57 EQ
0x58 PUSH2 0x20c
0x5b JUMPI
---
0x52: V28 = 0x400abd5f
0x57: V29 = EQ 0x400abd5f V12
0x58: V30 = 0x20c
0x5b: JUMPI 0x20c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x231]
---
0x5c DUP1
0x5d PUSH4 0x42e94c90
0x62 EQ
0x63 PUSH2 0x231
0x66 JUMPI
---
0x5d: V31 = 0x42e94c90
0x62: V32 = EQ 0x42e94c90 V12
0x63: V33 = 0x231
0x66: JUMPI 0x231 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x262]
---
0x67 DUP1
0x68 PUSH4 0x519ee19e
0x6d EQ
0x6e PUSH2 0x262
0x71 JUMPI
---
0x68: V34 = 0x519ee19e
0x6d: V35 = EQ 0x519ee19e V12
0x6e: V36 = 0x262
0x71: JUMPI 0x262 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x287]
---
0x72 DUP1
0x73 PUSH4 0x598b35fc
0x78 EQ
0x79 PUSH2 0x287
0x7c JUMPI
---
0x73: V37 = 0x598b35fc
0x78: V38 = EQ 0x598b35fc V12
0x79: V39 = 0x287
0x7c: JUMPI 0x287 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2ac]
---
0x7d DUP1
0x7e PUSH4 0x626be567
0x83 EQ
0x84 PUSH2 0x2ac
0x87 JUMPI
---
0x7e: V40 = 0x626be567
0x83: V41 = EQ 0x626be567 V12
0x84: V42 = 0x2ac
0x87: JUMPI 0x2ac V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2d1]
---
0x88 DUP1
0x89 PUSH4 0x630b4989
0x8e EQ
0x8f PUSH2 0x2d1
0x92 JUMPI
---
0x89: V43 = 0x630b4989
0x8e: V44 = EQ 0x630b4989 V12
0x8f: V45 = 0x2d1
0x92: JUMPI 0x2d1 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2f6]
---
0x93 DUP1
0x94 PUSH4 0x6e66f6e9
0x99 EQ
0x9a PUSH2 0x2f6
0x9d JUMPI
---
0x94: V46 = 0x6e66f6e9
0x99: V47 = EQ 0x6e66f6e9 V12
0x9a: V48 = 0x2f6
0x9d: JUMPI 0x2f6 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x325]
---
0x9e DUP1
0x9f PUSH4 0x71ae8f02
0xa4 EQ
0xa5 PUSH2 0x325
0xa8 JUMPI
---
0x9f: V49 = 0x71ae8f02
0xa4: V50 = EQ 0x71ae8f02 V12
0xa5: V51 = 0x325
0xa8: JUMPI 0x325 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x34a]
---
0xa9 DUP1
0xaa PUSH4 0x7926a7a3
0xaf EQ
0xb0 PUSH2 0x34a
0xb3 JUMPI
---
0xaa: V52 = 0x7926a7a3
0xaf: V53 = EQ 0x7926a7a3 V12
0xb0: V54 = 0x34a
0xb3: JUMPI 0x34a V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x36f]
---
0xb4 DUP1
0xb5 PUSH4 0x86f32586
0xba EQ
0xbb PUSH2 0x36f
0xbe JUMPI
---
0xb5: V55 = 0x86f32586
0xba: V56 = EQ 0x86f32586 V12
0xbb: V57 = 0x36f
0xbe: JUMPI 0x36f V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x384]
---
0xbf DUP1
0xc0 PUSH4 0x8bdff161
0xc5 EQ
0xc6 PUSH2 0x384
0xc9 JUMPI
---
0xc0: V58 = 0x8bdff161
0xc5: V59 = EQ 0x8bdff161 V12
0xc6: V60 = 0x384
0xc9: JUMPI 0x384 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3a9]
---
0xca DUP1
0xcb PUSH4 0xaa367664
0xd0 EQ
0xd1 PUSH2 0x3a9
0xd4 JUMPI
---
0xcb: V61 = 0xaa367664
0xd0: V62 = EQ 0xaa367664 V12
0xd1: V63 = 0x3a9
0xd4: JUMPI 0x3a9 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3ce]
---
0xd5 DUP1
0xd6 PUSH4 0xb2d5ae44
0xdb EQ
0xdc PUSH2 0x3ce
0xdf JUMPI
---
0xd6: V64 = 0xb2d5ae44
0xdb: V65 = EQ 0xb2d5ae44 V12
0xdc: V66 = 0x3ce
0xdf: JUMPI 0x3ce V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3f5]
---
0xe0 DUP1
0xe1 PUSH4 0xc19d93fb
0xe6 EQ
0xe7 PUSH2 0x3f5
0xea JUMPI
---
0xe1: V67 = 0xc19d93fb
0xe6: V68 = EQ 0xc19d93fb V12
0xe7: V69 = 0x3f5
0xea: JUMPI 0x3f5 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x42c]
---
0xeb DUP1
0xec PUSH4 0xc2052403
0xf1 EQ
0xf2 PUSH2 0x42c
0xf5 JUMPI
---
0xec: V70 = 0xc2052403
0xf1: V71 = EQ 0xc2052403 V12
0xf2: V72 = 0x42c
0xf5: JUMPI 0x42c V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x441]
---
0xf6 DUP1
0xf7 PUSH4 0xc5c4744c
0xfc EQ
0xfd PUSH2 0x441
0x100 JUMPI
---
0xf7: V73 = 0xc5c4744c
0xfc: V74 = EQ 0xc5c4744c V12
0xfd: V75 = 0x441
0x100: JUMPI 0x441 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x466]
---
0x101 DUP1
0x102 PUSH4 0xd7bb99ba
0x107 EQ
0x108 PUSH2 0x466
0x10b JUMPI
---
0x102: V76 = 0xd7bb99ba
0x107: V77 = EQ 0xd7bb99ba V12
0x108: V78 = 0x466
0x10b: JUMPI 0x466 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x480]
---
0x10c DUP1
0x10d PUSH4 0xe12dd14b
0x112 EQ
0x113 PUSH2 0x480
0x116 JUMPI
---
0x10d: V79 = 0xe12dd14b
0x112: V80 = EQ 0xe12dd14b V12
0x113: V81 = 0x480
0x116: JUMPI 0x480 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0x4a5]
---
0x117 DUP1
0x118 PUSH4 0xfe389e09
0x11d EQ
0x11e PUSH2 0x4a5
0x121 JUMPI
---
0x118: V82 = 0xfe389e09
0x11d: V83 = EQ 0xfe389e09 V12
0x11e: V84 = 0x4a5
0x121: JUMPI 0x4a5 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x0, 0x117]
Successors: [0x126]
---
0x122 JUMPDEST
0x123 PUSH2 0x13d
---
0x122: JUMPDEST 
0x123: V85 = 0x13d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13d]
Exit stack: [V12, 0x13d]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x122]
Successors: [0x12d, 0x131]
---
0x126 JUMPDEST
0x127 CALLDATASIZE
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x126: JUMPDEST 
0x127: V86 = CALLDATASIZE
0x128: V87 = ISZERO V86
0x129: V88 = 0x131
0x12c: JUMPI 0x131 V87
---
Entry stack: [V12, 0x13d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x126]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V89 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V12, 0x13d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d]

================================

Block 0x131
[0x131:0x138]
---
Predecessors: [0x126]
Successors: [0x4ba]
---
0x131 JUMPDEST
0x132 PUSH2 0x139
0x135 PUSH2 0x4ba
0x138 JUMP
---
0x131: JUMPDEST 
0x132: V90 = 0x139
0x135: V91 = 0x4ba
0x138: JUMP 0x4ba
---
Entry stack: [V12, 0x13d]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V12, 0x13d, 0x139]

================================

Block 0x139
[0x139:0x13a]
---
Predecessors: [0x6eb]
Successors: [0x13b]
---
0x139 JUMPDEST
0x13a POP
---
0x139: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x13b
[0x13b:0x13c]
---
Predecessors: [0x139, 0x7f1, 0x7fa, 0x87e]
Successors: [0x13d, 0x6df]
---
0x13b JUMPDEST
0x13c JUMP
---
0x13b: JUMPDEST 
0x13c: JUMP S0
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1]

================================

Block 0x13d
[0x13d:0x13e]
---
Predecessors: [0x13b, 0x8a3, 0xae8]
Successors: []
---
0x13d JUMPDEST
0x13e STOP
---
0x13d: JUMPDEST 
0x13e: STOP 
---
Entry stack: [S7, S6, {0x0, 0x139, 0x181}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S7, S6, {0x0, 0x139, 0x181}, S4, S3, S2, S1, S0]

================================

Block 0x13f
[0x13f:0x145]
---
Predecessors: [0xb]
Successors: [0x146, 0x14a]
---
0x13f JUMPDEST
0x140 CALLVALUE
0x141 ISZERO
0x142 PUSH2 0x14a
0x145 JUMPI
---
0x13f: JUMPDEST 
0x140: V92 = CALLVALUE
0x141: V93 = ISZERO V92
0x142: V94 = 0x14a
0x145: JUMPI 0x14a V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x149]
---
Predecessors: [0x13f]
Successors: []
---
0x146 PUSH1 0x0
0x148 DUP1
0x149 REVERT
---
0x146: V95 = 0x0
0x149: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14a
[0x14a:0x151]
---
Predecessors: [0x13f]
Successors: [0x6f2]
---
0x14a JUMPDEST
0x14b PUSH2 0x152
0x14e PUSH2 0x6f2
0x151 JUMP
---
0x14a: JUMPDEST 
0x14b: V96 = 0x152
0x14e: V97 = 0x6f2
0x151: JUMP 0x6f2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x152
[0x152:0x16d]
---
Predecessors: [0x6f2, 0x70d, 0x752]
Successors: []
---
0x152 JUMPDEST
0x153 PUSH1 0x40
0x155 MLOAD
0x156 PUSH1 0x1
0x158 PUSH1 0xa0
0x15a PUSH1 0x2
0x15c EXP
0x15d SUB
0x15e SWAP1
0x15f SWAP2
0x160 AND
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 PUSH1 0x40
0x168 MLOAD
0x169 DUP1
0x16a SWAP2
0x16b SUB
0x16c SWAP1
0x16d RETURN
---
0x152: JUMPDEST 
0x153: V98 = 0x40
0x155: V99 = M[0x40]
0x156: V100 = 0x1
0x158: V101 = 0xa0
0x15a: V102 = 0x2
0x15c: V103 = EXP 0x2 0xa0
0x15d: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V105 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x162: M[V99] = V105
0x163: V106 = 0x20
0x165: V107 = ADD 0x20 V99
0x166: V108 = 0x40
0x168: V109 = M[0x40]
0x16b: V110 = SUB V107 V109
0x16d: RETURN V109 V110
---
Entry stack: [V12, 0x152, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x152]

================================

Block 0x16e
[0x16e:0x174]
---
Predecessors: [0x25]
Successors: [0x175, 0x179]
---
0x16e JUMPDEST
0x16f CALLVALUE
0x170 ISZERO
0x171 PUSH2 0x179
0x174 JUMPI
---
0x16e: JUMPDEST 
0x16f: V111 = CALLVALUE
0x170: V112 = ISZERO V111
0x171: V113 = 0x179
0x174: JUMPI 0x179 V112
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x175
[0x175:0x178]
---
Predecessors: [0x16e]
Successors: []
---
0x175 PUSH1 0x0
0x177 DUP1
0x178 REVERT
---
0x175: V114 = 0x0
0x178: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x179
[0x179:0x180]
---
Predecessors: [0x16e]
Successors: [0x701]
---
0x179 JUMPDEST
0x17a PUSH2 0x181
0x17d PUSH2 0x701
0x180 JUMP
---
0x179: JUMPDEST 
0x17a: V115 = 0x181
0x17d: V116 = 0x701
0x180: JUMP 0x701
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x181
[0x181:0x192]
---
Predecessors: [0x6eb, 0x701, 0x707, 0x71c, 0x722, 0x728, 0x73a, 0x740, 0x746, 0x74c, 0x761, 0x767, 0x907, 0x90a, 0xaec, 0xaf2]
Successors: []
---
0x181 JUMPDEST
0x182 PUSH1 0x40
0x184 MLOAD
0x185 SWAP1
0x186 DUP2
0x187 MSTORE
0x188 PUSH1 0x20
0x18a ADD
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f SWAP2
0x190 SUB
0x191 SWAP1
0x192 RETURN
---
0x181: JUMPDEST 
0x182: V117 = 0x40
0x184: V118 = M[0x40]
0x187: M[V118] = S0
0x188: V119 = 0x20
0x18a: V120 = ADD 0x20 V118
0x18b: V121 = 0x40
0x18d: V122 = M[0x40]
0x190: V123 = SUB V120 V122
0x192: RETURN V122 V123
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1088, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1088, S2, S1]

================================

Block 0x193
[0x193:0x199]
---
Predecessors: [0x30]
Successors: [0x19a, 0x19e]
---
0x193 JUMPDEST
0x194 CALLVALUE
0x195 ISZERO
0x196 PUSH2 0x19e
0x199 JUMPI
---
0x193: JUMPDEST 
0x194: V124 = CALLVALUE
0x195: V125 = ISZERO V124
0x196: V126 = 0x19e
0x199: JUMPI 0x19e V125
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19a
[0x19a:0x19d]
---
Predecessors: [0x193]
Successors: []
---
0x19a PUSH1 0x0
0x19c DUP1
0x19d REVERT
---
0x19a: V127 = 0x0
0x19d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19e
[0x19e:0x1a5]
---
Predecessors: [0x193]
Successors: [0x707]
---
0x19e JUMPDEST
0x19f PUSH2 0x181
0x1a2 PUSH2 0x707
0x1a5 JUMP
---
0x19e: JUMPDEST 
0x19f: V128 = 0x181
0x1a2: V129 = 0x707
0x1a5: JUMP 0x707
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x1a6
[0x1a6:0x1b7]
---
Predecessors: []
Successors: []
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa SWAP1
0x1ab DUP2
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 RETURN
---
0x1a6: JUMPDEST 
0x1a7: V130 = 0x40
0x1a9: V131 = M[0x40]
0x1ac: M[V131] = S0
0x1ad: V132 = 0x20
0x1af: V133 = ADD 0x20 V131
0x1b0: V134 = 0x40
0x1b2: V135 = M[0x40]
0x1b5: V136 = SUB V133 V135
0x1b7: RETURN V135 V136
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x3b]
Successors: [0x1bf, 0x1c3]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V137 = CALLVALUE
0x1ba: V138 = ISZERO V137
0x1bb: V139 = 0x1c3
0x1be: JUMPI 0x1c3 V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V140 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c3
[0x1c3:0x1ca]
---
Predecessors: [0x1b8]
Successors: [0x70d]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x152
0x1c7 PUSH2 0x70d
0x1ca JUMP
---
0x1c3: JUMPDEST 
0x1c4: V141 = 0x152
0x1c7: V142 = 0x70d
0x1ca: JUMP 0x70d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x1cb
[0x1cb:0x1e6]
---
Predecessors: []
Successors: []
---
0x1cb JUMPDEST
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf PUSH1 0x1
0x1d1 PUSH1 0xa0
0x1d3 PUSH1 0x2
0x1d5 EXP
0x1d6 SUB
0x1d7 SWAP1
0x1d8 SWAP2
0x1d9 AND
0x1da DUP2
0x1db MSTORE
0x1dc PUSH1 0x20
0x1de ADD
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 DUP1
0x1e3 SWAP2
0x1e4 SUB
0x1e5 SWAP1
0x1e6 RETURN
---
0x1cb: JUMPDEST 
0x1cc: V143 = 0x40
0x1ce: V144 = M[0x40]
0x1cf: V145 = 0x1
0x1d1: V146 = 0xa0
0x1d3: V147 = 0x2
0x1d5: V148 = EXP 0x2 0xa0
0x1d6: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V150 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1db: M[V144] = V150
0x1dc: V151 = 0x20
0x1de: V152 = ADD 0x20 V144
0x1df: V153 = 0x40
0x1e1: V154 = M[0x40]
0x1e4: V155 = SUB V152 V154
0x1e6: RETURN V154 V155
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e7
[0x1e7:0x1ed]
---
Predecessors: [0x46]
Successors: [0x1ee, 0x1f2]
---
0x1e7 JUMPDEST
0x1e8 CALLVALUE
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V156 = CALLVALUE
0x1e9: V157 = ISZERO V156
0x1ea: V158 = 0x1f2
0x1ed: JUMPI 0x1f2 V157
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1e7]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V159 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f2
[0x1f2:0x1f9]
---
Predecessors: [0x1e7]
Successors: [0x71c]
---
0x1f2 JUMPDEST
0x1f3 PUSH2 0x181
0x1f6 PUSH2 0x71c
0x1f9 JUMP
---
0x1f2: JUMPDEST 
0x1f3: V160 = 0x181
0x1f6: V161 = 0x71c
0x1f9: JUMP 0x71c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x1fa
[0x1fa:0x20b]
---
Predecessors: []
Successors: []
---
0x1fa JUMPDEST
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe SWAP1
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 PUSH1 0x40
0x206 MLOAD
0x207 DUP1
0x208 SWAP2
0x209 SUB
0x20a SWAP1
0x20b RETURN
---
0x1fa: JUMPDEST 
0x1fb: V162 = 0x40
0x1fd: V163 = M[0x40]
0x200: M[V163] = S0
0x201: V164 = 0x20
0x203: V165 = ADD 0x20 V163
0x204: V166 = 0x40
0x206: V167 = M[0x40]
0x209: V168 = SUB V165 V167
0x20b: RETURN V167 V168
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x20c
[0x20c:0x212]
---
Predecessors: [0x51]
Successors: [0x213, 0x217]
---
0x20c JUMPDEST
0x20d CALLVALUE
0x20e ISZERO
0x20f PUSH2 0x217
0x212 JUMPI
---
0x20c: JUMPDEST 
0x20d: V169 = CALLVALUE
0x20e: V170 = ISZERO V169
0x20f: V171 = 0x217
0x212: JUMPI 0x217 V170
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x213
[0x213:0x216]
---
Predecessors: [0x20c]
Successors: []
---
0x213 PUSH1 0x0
0x215 DUP1
0x216 REVERT
---
0x213: V172 = 0x0
0x216: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x217
[0x217:0x21e]
---
Predecessors: [0x20c]
Successors: [0x722]
---
0x217 JUMPDEST
0x218 PUSH2 0x181
0x21b PUSH2 0x722
0x21e JUMP
---
0x217: JUMPDEST 
0x218: V173 = 0x181
0x21b: V174 = 0x722
0x21e: JUMP 0x722
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x21f
[0x21f:0x230]
---
Predecessors: []
Successors: []
---
0x21f JUMPDEST
0x220 PUSH1 0x40
0x222 MLOAD
0x223 SWAP1
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x20
0x228 ADD
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d SWAP2
0x22e SUB
0x22f SWAP1
0x230 RETURN
---
0x21f: JUMPDEST 
0x220: V175 = 0x40
0x222: V176 = M[0x40]
0x225: M[V176] = S0
0x226: V177 = 0x20
0x228: V178 = ADD 0x20 V176
0x229: V179 = 0x40
0x22b: V180 = M[0x40]
0x22e: V181 = SUB V178 V180
0x230: RETURN V180 V181
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x231
[0x231:0x237]
---
Predecessors: [0x5c]
Successors: [0x238, 0x23c]
---
0x231 JUMPDEST
0x232 CALLVALUE
0x233 ISZERO
0x234 PUSH2 0x23c
0x237 JUMPI
---
0x231: JUMPDEST 
0x232: V182 = CALLVALUE
0x233: V183 = ISZERO V182
0x234: V184 = 0x23c
0x237: JUMPI 0x23c V183
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x238
[0x238:0x23b]
---
Predecessors: [0x231]
Successors: []
---
0x238 PUSH1 0x0
0x23a DUP1
0x23b REVERT
---
0x238: V185 = 0x0
0x23b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23c
[0x23c:0x24f]
---
Predecessors: [0x231]
Successors: [0x728]
---
0x23c JUMPDEST
0x23d PUSH2 0x181
0x240 PUSH1 0x1
0x242 PUSH1 0xa0
0x244 PUSH1 0x2
0x246 EXP
0x247 SUB
0x248 PUSH1 0x4
0x24a CALLDATALOAD
0x24b AND
0x24c PUSH2 0x728
0x24f JUMP
---
0x23c: JUMPDEST 
0x23d: V186 = 0x181
0x240: V187 = 0x1
0x242: V188 = 0xa0
0x244: V189 = 0x2
0x246: V190 = EXP 0x2 0xa0
0x247: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x248: V192 = 0x4
0x24a: V193 = CALLDATALOAD 0x4
0x24b: V194 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V195 = 0x728
0x24f: JUMP 0x728
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181, V194]
Exit stack: [V12, 0x181, V194]

================================

Block 0x250
[0x250:0x261]
---
Predecessors: []
Successors: []
---
0x250 JUMPDEST
0x251 PUSH1 0x40
0x253 MLOAD
0x254 SWAP1
0x255 DUP2
0x256 MSTORE
0x257 PUSH1 0x20
0x259 ADD
0x25a PUSH1 0x40
0x25c MLOAD
0x25d DUP1
0x25e SWAP2
0x25f SUB
0x260 SWAP1
0x261 RETURN
---
0x250: JUMPDEST 
0x251: V196 = 0x40
0x253: V197 = M[0x40]
0x256: M[V197] = S0
0x257: V198 = 0x20
0x259: V199 = ADD 0x20 V197
0x25a: V200 = 0x40
0x25c: V201 = M[0x40]
0x25f: V202 = SUB V199 V201
0x261: RETURN V201 V202
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x262
[0x262:0x268]
---
Predecessors: [0x67]
Successors: [0x269, 0x26d]
---
0x262 JUMPDEST
0x263 CALLVALUE
0x264 ISZERO
0x265 PUSH2 0x26d
0x268 JUMPI
---
0x262: JUMPDEST 
0x263: V203 = CALLVALUE
0x264: V204 = ISZERO V203
0x265: V205 = 0x26d
0x268: JUMPI 0x26d V204
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x269
[0x269:0x26c]
---
Predecessors: [0x262]
Successors: []
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
---
0x269: V206 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26d
[0x26d:0x274]
---
Predecessors: [0x262]
Successors: [0x73a]
---
0x26d JUMPDEST
0x26e PUSH2 0x181
0x271 PUSH2 0x73a
0x274 JUMP
---
0x26d: JUMPDEST 
0x26e: V207 = 0x181
0x271: V208 = 0x73a
0x274: JUMP 0x73a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x275
[0x275:0x286]
---
Predecessors: []
Successors: []
---
0x275 JUMPDEST
0x276 PUSH1 0x40
0x278 MLOAD
0x279 SWAP1
0x27a DUP2
0x27b MSTORE
0x27c PUSH1 0x20
0x27e ADD
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 SWAP2
0x284 SUB
0x285 SWAP1
0x286 RETURN
---
0x275: JUMPDEST 
0x276: V209 = 0x40
0x278: V210 = M[0x40]
0x27b: M[V210] = S0
0x27c: V211 = 0x20
0x27e: V212 = ADD 0x20 V210
0x27f: V213 = 0x40
0x281: V214 = M[0x40]
0x284: V215 = SUB V212 V214
0x286: RETURN V214 V215
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x287
[0x287:0x28d]
---
Predecessors: [0x72]
Successors: [0x28e, 0x292]
---
0x287 JUMPDEST
0x288 CALLVALUE
0x289 ISZERO
0x28a PUSH2 0x292
0x28d JUMPI
---
0x287: JUMPDEST 
0x288: V216 = CALLVALUE
0x289: V217 = ISZERO V216
0x28a: V218 = 0x292
0x28d: JUMPI 0x292 V217
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x287]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V219 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x292
[0x292:0x299]
---
Predecessors: [0x287]
Successors: [0x740]
---
0x292 JUMPDEST
0x293 PUSH2 0x181
0x296 PUSH2 0x740
0x299 JUMP
---
0x292: JUMPDEST 
0x293: V220 = 0x181
0x296: V221 = 0x740
0x299: JUMP 0x740
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x29a
[0x29a:0x2ab]
---
Predecessors: []
Successors: []
---
0x29a JUMPDEST
0x29b PUSH1 0x40
0x29d MLOAD
0x29e SWAP1
0x29f DUP2
0x2a0 MSTORE
0x2a1 PUSH1 0x20
0x2a3 ADD
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 DUP1
0x2a8 SWAP2
0x2a9 SUB
0x2aa SWAP1
0x2ab RETURN
---
0x29a: JUMPDEST 
0x29b: V222 = 0x40
0x29d: V223 = M[0x40]
0x2a0: M[V223] = S0
0x2a1: V224 = 0x20
0x2a3: V225 = ADD 0x20 V223
0x2a4: V226 = 0x40
0x2a6: V227 = M[0x40]
0x2a9: V228 = SUB V225 V227
0x2ab: RETURN V227 V228
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ac
[0x2ac:0x2b2]
---
Predecessors: [0x7d]
Successors: [0x2b3, 0x2b7]
---
0x2ac JUMPDEST
0x2ad CALLVALUE
0x2ae ISZERO
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V229 = CALLVALUE
0x2ae: V230 = ISZERO V229
0x2af: V231 = 0x2b7
0x2b2: JUMPI 0x2b7 V230
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x2ac]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V232 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b7
[0x2b7:0x2be]
---
Predecessors: [0x2ac]
Successors: [0x746]
---
0x2b7 JUMPDEST
0x2b8 PUSH2 0x181
0x2bb PUSH2 0x746
0x2be JUMP
---
0x2b7: JUMPDEST 
0x2b8: V233 = 0x181
0x2bb: V234 = 0x746
0x2be: JUMP 0x746
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x2bf
[0x2bf:0x2d0]
---
Predecessors: []
Successors: []
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 SWAP1
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 PUSH1 0x40
0x2cb MLOAD
0x2cc DUP1
0x2cd SWAP2
0x2ce SUB
0x2cf SWAP1
0x2d0 RETURN
---
0x2bf: JUMPDEST 
0x2c0: V235 = 0x40
0x2c2: V236 = M[0x40]
0x2c5: M[V236] = S0
0x2c6: V237 = 0x20
0x2c8: V238 = ADD 0x20 V236
0x2c9: V239 = 0x40
0x2cb: V240 = M[0x40]
0x2ce: V241 = SUB V238 V240
0x2d0: RETURN V240 V241
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d1
[0x2d1:0x2d7]
---
Predecessors: [0x88]
Successors: [0x2d8, 0x2dc]
---
0x2d1 JUMPDEST
0x2d2 CALLVALUE
0x2d3 ISZERO
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V242 = CALLVALUE
0x2d3: V243 = ISZERO V242
0x2d4: V244 = 0x2dc
0x2d7: JUMPI 0x2dc V243
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2d1]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V245 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2dc
[0x2dc:0x2e3]
---
Predecessors: [0x2d1]
Successors: [0x74c]
---
0x2dc JUMPDEST
0x2dd PUSH2 0x181
0x2e0 PUSH2 0x74c
0x2e3 JUMP
---
0x2dc: JUMPDEST 
0x2dd: V246 = 0x181
0x2e0: V247 = 0x74c
0x2e3: JUMP 0x74c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x2e4
[0x2e4:0x2f5]
---
Predecessors: []
Successors: []
---
0x2e4 JUMPDEST
0x2e5 PUSH1 0x40
0x2e7 MLOAD
0x2e8 SWAP1
0x2e9 DUP2
0x2ea MSTORE
0x2eb PUSH1 0x20
0x2ed ADD
0x2ee PUSH1 0x40
0x2f0 MLOAD
0x2f1 DUP1
0x2f2 SWAP2
0x2f3 SUB
0x2f4 SWAP1
0x2f5 RETURN
---
0x2e4: JUMPDEST 
0x2e5: V248 = 0x40
0x2e7: V249 = M[0x40]
0x2ea: M[V249] = S0
0x2eb: V250 = 0x20
0x2ed: V251 = ADD 0x20 V249
0x2ee: V252 = 0x40
0x2f0: V253 = M[0x40]
0x2f3: V254 = SUB V251 V253
0x2f5: RETURN V253 V254
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f6
[0x2f6:0x2fc]
---
Predecessors: [0x93]
Successors: [0x2fd, 0x301]
---
0x2f6 JUMPDEST
0x2f7 CALLVALUE
0x2f8 ISZERO
0x2f9 PUSH2 0x301
0x2fc JUMPI
---
0x2f6: JUMPDEST 
0x2f7: V255 = CALLVALUE
0x2f8: V256 = ISZERO V255
0x2f9: V257 = 0x301
0x2fc: JUMPI 0x301 V256
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fd
[0x2fd:0x300]
---
Predecessors: [0x2f6]
Successors: []
---
0x2fd PUSH1 0x0
0x2ff DUP1
0x300 REVERT
---
0x2fd: V258 = 0x0
0x300: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x301
[0x301:0x308]
---
Predecessors: [0x2f6]
Successors: [0x752]
---
0x301 JUMPDEST
0x302 PUSH2 0x152
0x305 PUSH2 0x752
0x308 JUMP
---
0x301: JUMPDEST 
0x302: V259 = 0x152
0x305: V260 = 0x752
0x308: JUMP 0x752
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x309
[0x309:0x324]
---
Predecessors: []
Successors: []
---
0x309 JUMPDEST
0x30a PUSH1 0x40
0x30c MLOAD
0x30d PUSH1 0x1
0x30f PUSH1 0xa0
0x311 PUSH1 0x2
0x313 EXP
0x314 SUB
0x315 SWAP1
0x316 SWAP2
0x317 AND
0x318 DUP2
0x319 MSTORE
0x31a PUSH1 0x20
0x31c ADD
0x31d PUSH1 0x40
0x31f MLOAD
0x320 DUP1
0x321 SWAP2
0x322 SUB
0x323 SWAP1
0x324 RETURN
---
0x309: JUMPDEST 
0x30a: V261 = 0x40
0x30c: V262 = M[0x40]
0x30d: V263 = 0x1
0x30f: V264 = 0xa0
0x311: V265 = 0x2
0x313: V266 = EXP 0x2 0xa0
0x314: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x317: V268 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x319: M[V262] = V268
0x31a: V269 = 0x20
0x31c: V270 = ADD 0x20 V262
0x31d: V271 = 0x40
0x31f: V272 = M[0x40]
0x322: V273 = SUB V270 V272
0x324: RETURN V272 V273
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x325
[0x325:0x32b]
---
Predecessors: [0x9e]
Successors: [0x32c, 0x330]
---
0x325 JUMPDEST
0x326 CALLVALUE
0x327 ISZERO
0x328 PUSH2 0x330
0x32b JUMPI
---
0x325: JUMPDEST 
0x326: V274 = CALLVALUE
0x327: V275 = ISZERO V274
0x328: V276 = 0x330
0x32b: JUMPI 0x330 V275
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x325]
Successors: []
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
---
0x32c: V277 = 0x0
0x32f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x330
[0x330:0x337]
---
Predecessors: [0x325]
Successors: [0x761]
---
0x330 JUMPDEST
0x331 PUSH2 0x181
0x334 PUSH2 0x761
0x337 JUMP
---
0x330: JUMPDEST 
0x331: V278 = 0x181
0x334: V279 = 0x761
0x337: JUMP 0x761
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x338
[0x338:0x349]
---
Predecessors: []
Successors: []
---
0x338 JUMPDEST
0x339 PUSH1 0x40
0x33b MLOAD
0x33c SWAP1
0x33d DUP2
0x33e MSTORE
0x33f PUSH1 0x20
0x341 ADD
0x342 PUSH1 0x40
0x344 MLOAD
0x345 DUP1
0x346 SWAP2
0x347 SUB
0x348 SWAP1
0x349 RETURN
---
0x338: JUMPDEST 
0x339: V280 = 0x40
0x33b: V281 = M[0x40]
0x33e: M[V281] = S0
0x33f: V282 = 0x20
0x341: V283 = ADD 0x20 V281
0x342: V284 = 0x40
0x344: V285 = M[0x40]
0x347: V286 = SUB V283 V285
0x349: RETURN V285 V286
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x34a
[0x34a:0x350]
---
Predecessors: [0xa9]
Successors: [0x351, 0x355]
---
0x34a JUMPDEST
0x34b CALLVALUE
0x34c ISZERO
0x34d PUSH2 0x355
0x350 JUMPI
---
0x34a: JUMPDEST 
0x34b: V287 = CALLVALUE
0x34c: V288 = ISZERO V287
0x34d: V289 = 0x355
0x350: JUMPI 0x355 V288
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x351
[0x351:0x354]
---
Predecessors: [0x34a]
Successors: []
---
0x351 PUSH1 0x0
0x353 DUP1
0x354 REVERT
---
0x351: V290 = 0x0
0x354: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x355
[0x355:0x35c]
---
Predecessors: [0x34a]
Successors: [0x767]
---
0x355 JUMPDEST
0x356 PUSH2 0x181
0x359 PUSH2 0x767
0x35c JUMP
---
0x355: JUMPDEST 
0x356: V291 = 0x181
0x359: V292 = 0x767
0x35c: JUMP 0x767
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x35d
[0x35d:0x36e]
---
Predecessors: []
Successors: []
---
0x35d JUMPDEST
0x35e PUSH1 0x40
0x360 MLOAD
0x361 SWAP1
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x20
0x366 ADD
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b SWAP2
0x36c SUB
0x36d SWAP1
0x36e RETURN
---
0x35d: JUMPDEST 
0x35e: V293 = 0x40
0x360: V294 = M[0x40]
0x363: M[V294] = S0
0x364: V295 = 0x20
0x366: V296 = ADD 0x20 V294
0x367: V297 = 0x40
0x369: V298 = M[0x40]
0x36c: V299 = SUB V296 V298
0x36e: RETURN V298 V299
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x36f
[0x36f:0x375]
---
Predecessors: [0xb4]
Successors: [0x376, 0x37a]
---
0x36f JUMPDEST
0x370 CALLVALUE
0x371 ISZERO
0x372 PUSH2 0x37a
0x375 JUMPI
---
0x36f: JUMPDEST 
0x370: V300 = CALLVALUE
0x371: V301 = ISZERO V300
0x372: V302 = 0x37a
0x375: JUMPI 0x37a V301
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x376
[0x376:0x379]
---
Predecessors: [0x36f]
Successors: []
---
0x376 PUSH1 0x0
0x378 DUP1
0x379 REVERT
---
0x376: V303 = 0x0
0x379: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37a
[0x37a:0x381]
---
Predecessors: [0x36f]
Successors: [0x76d]
---
0x37a JUMPDEST
0x37b PUSH2 0x13d
0x37e PUSH2 0x76d
0x381 JUMP
---
0x37a: JUMPDEST 
0x37b: V304 = 0x13d
0x37e: V305 = 0x76d
0x381: JUMP 0x76d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13d]
Exit stack: [V12, 0x13d]

================================

Block 0x382
[0x382:0x383]
---
Predecessors: []
Successors: []
---
0x382 JUMPDEST
0x383 STOP
---
0x382: JUMPDEST 
0x383: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x384
[0x384:0x38a]
---
Predecessors: [0xbf]
Successors: [0x38b, 0x38f]
---
0x384 JUMPDEST
0x385 CALLVALUE
0x386 ISZERO
0x387 PUSH2 0x38f
0x38a JUMPI
---
0x384: JUMPDEST 
0x385: V306 = CALLVALUE
0x386: V307 = ISZERO V306
0x387: V308 = 0x38f
0x38a: JUMPI 0x38f V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38b
[0x38b:0x38e]
---
Predecessors: [0x384]
Successors: []
---
0x38b PUSH1 0x0
0x38d DUP1
0x38e REVERT
---
0x38b: V309 = 0x0
0x38e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38f
[0x38f:0x396]
---
Predecessors: [0x384]
Successors: [0x8a5]
---
0x38f JUMPDEST
0x390 PUSH2 0x181
0x393 PUSH2 0x8a5
0x396 JUMP
---
0x38f: JUMPDEST 
0x390: V310 = 0x181
0x393: V311 = 0x8a5
0x396: JUMP 0x8a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x397
[0x397:0x3a8]
---
Predecessors: []
Successors: []
---
0x397 JUMPDEST
0x398 PUSH1 0x40
0x39a MLOAD
0x39b SWAP1
0x39c DUP2
0x39d MSTORE
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 PUSH1 0x40
0x3a3 MLOAD
0x3a4 DUP1
0x3a5 SWAP2
0x3a6 SUB
0x3a7 SWAP1
0x3a8 RETURN
---
0x397: JUMPDEST 
0x398: V312 = 0x40
0x39a: V313 = M[0x40]
0x39d: M[V313] = S0
0x39e: V314 = 0x20
0x3a0: V315 = ADD 0x20 V313
0x3a1: V316 = 0x40
0x3a3: V317 = M[0x40]
0x3a6: V318 = SUB V315 V317
0x3a8: RETURN V317 V318
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3a9
[0x3a9:0x3af]
---
Predecessors: [0xca]
Successors: [0x3b0, 0x3b4]
---
0x3a9 JUMPDEST
0x3aa CALLVALUE
0x3ab ISZERO
0x3ac PUSH2 0x3b4
0x3af JUMPI
---
0x3a9: JUMPDEST 
0x3aa: V319 = CALLVALUE
0x3ab: V320 = ISZERO V319
0x3ac: V321 = 0x3b4
0x3af: JUMPI 0x3b4 V320
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b0
[0x3b0:0x3b3]
---
Predecessors: [0x3a9]
Successors: []
---
0x3b0 PUSH1 0x0
0x3b2 DUP1
0x3b3 REVERT
---
0x3b0: V322 = 0x0
0x3b3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b4
[0x3b4:0x3bb]
---
Predecessors: [0x3a9]
Successors: [0x90a]
---
0x3b4 JUMPDEST
0x3b5 PUSH2 0x181
0x3b8 PUSH2 0x90a
0x3bb JUMP
---
0x3b4: JUMPDEST 
0x3b5: V323 = 0x181
0x3b8: V324 = 0x90a
0x3bb: JUMP 0x90a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x3bc
[0x3bc:0x3cd]
---
Predecessors: []
Successors: []
---
0x3bc JUMPDEST
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 SWAP1
0x3c1 DUP2
0x3c2 MSTORE
0x3c3 PUSH1 0x20
0x3c5 ADD
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 DUP1
0x3ca SWAP2
0x3cb SUB
0x3cc SWAP1
0x3cd RETURN
---
0x3bc: JUMPDEST 
0x3bd: V325 = 0x40
0x3bf: V326 = M[0x40]
0x3c2: M[V326] = S0
0x3c3: V327 = 0x20
0x3c5: V328 = ADD 0x20 V326
0x3c6: V329 = 0x40
0x3c8: V330 = M[0x40]
0x3cb: V331 = SUB V328 V330
0x3cd: RETURN V330 V331
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ce
[0x3ce:0x3d4]
---
Predecessors: [0xd5]
Successors: [0x3d5, 0x3d9]
---
0x3ce JUMPDEST
0x3cf CALLVALUE
0x3d0 ISZERO
0x3d1 PUSH2 0x3d9
0x3d4 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V332 = CALLVALUE
0x3d0: V333 = ISZERO V332
0x3d1: V334 = 0x3d9
0x3d4: JUMPI 0x3d9 V333
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d5
[0x3d5:0x3d8]
---
Predecessors: [0x3ce]
Successors: []
---
0x3d5 PUSH1 0x0
0x3d7 DUP1
0x3d8 REVERT
---
0x3d5: V335 = 0x0
0x3d8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d9
[0x3d9:0x3e0]
---
Predecessors: [0x3ce]
Successors: [0x910]
---
0x3d9 JUMPDEST
0x3da PUSH2 0x3e1
0x3dd PUSH2 0x910
0x3e0 JUMP
---
0x3d9: JUMPDEST 
0x3da: V336 = 0x3e1
0x3dd: V337 = 0x910
0x3e0: JUMP 0x910
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3e1]
Exit stack: [V12, 0x3e1]

================================

Block 0x3e1
[0x3e1:0x3f4]
---
Predecessors: [0x99f]
Successors: []
---
0x3e1 JUMPDEST
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 SWAP1
0x3e6 ISZERO
0x3e7 ISZERO
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed PUSH1 0x40
0x3ef MLOAD
0x3f0 DUP1
0x3f1 SWAP2
0x3f2 SUB
0x3f3 SWAP1
0x3f4 RETURN
---
0x3e1: JUMPDEST 
0x3e2: V338 = 0x40
0x3e4: V339 = M[0x40]
0x3e6: V340 = ISZERO 0x0
0x3e7: V341 = ISZERO 0x1
0x3e9: M[V339] = 0x0
0x3ea: V342 = 0x20
0x3ec: V343 = ADD 0x20 V339
0x3ed: V344 = 0x40
0x3ef: V345 = M[0x40]
0x3f2: V346 = SUB V343 V345
0x3f4: RETURN V345 V346
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f5
[0x3f5:0x3fb]
---
Predecessors: [0xe0]
Successors: [0x3fc, 0x400]
---
0x3f5 JUMPDEST
0x3f6 CALLVALUE
0x3f7 ISZERO
0x3f8 PUSH2 0x400
0x3fb JUMPI
---
0x3f5: JUMPDEST 
0x3f6: V347 = CALLVALUE
0x3f7: V348 = ISZERO V347
0x3f8: V349 = 0x400
0x3fb: JUMPI 0x400 V348
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fc
[0x3fc:0x3ff]
---
Predecessors: [0x3f5]
Successors: []
---
0x3fc PUSH1 0x0
0x3fe DUP1
0x3ff REVERT
---
0x3fc: V350 = 0x0
0x3ff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x400
[0x400:0x407]
---
Predecessors: [0x3f5]
Successors: [0x9a4]
---
0x400 JUMPDEST
0x401 PUSH2 0x408
0x404 PUSH2 0x9a4
0x407 JUMP
---
0x400: JUMPDEST 
0x401: V351 = 0x408
0x404: V352 = 0x9a4
0x407: JUMP 0x9a4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x408]
Exit stack: [V12, 0x408]

================================

Block 0x408
[0x408:0x416]
---
Predecessors: [0x9a4]
Successors: [0x417, 0x418]
---
0x408 JUMPDEST
0x409 PUSH1 0x40
0x40b MLOAD
0x40c DUP1
0x40d DUP3
0x40e PUSH1 0x3
0x410 DUP2
0x411 GT
0x412 ISZERO
0x413 PUSH2 0x418
0x416 JUMPI
---
0x408: JUMPDEST 
0x409: V353 = 0x40
0x40b: V354 = M[0x40]
0x40e: V355 = 0x3
0x411: V356 = GT V901 0x3
0x412: V357 = ISZERO V356
0x413: V358 = 0x418
0x416: JUMPI 0x418 V357
---
Entry stack: [V12, 0x408, V901]
Stack pops: 1
Stack additions: [S0, V354, V354, S0]
Exit stack: [V12, 0x408, V901, V354, V354, V901]

================================

Block 0x417
[0x417:0x417]
---
Predecessors: [0x408]
Successors: []
---
0x417 INVALID
---
0x417: INVALID 
---
Entry stack: [V12, 0x408, V901, V354, V354, V901]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x408, V901, V354, V354, V901]

================================

Block 0x418
[0x418:0x42b]
---
Predecessors: [0x408]
Successors: []
---
0x418 JUMPDEST
0x419 PUSH1 0xff
0x41b AND
0x41c DUP2
0x41d MSTORE
0x41e PUSH1 0x20
0x420 ADD
0x421 SWAP2
0x422 POP
0x423 POP
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 SWAP2
0x429 SUB
0x42a SWAP1
0x42b RETURN
---
0x418: JUMPDEST 
0x419: V359 = 0xff
0x41b: V360 = AND 0xff V901
0x41d: M[V354] = V360
0x41e: V361 = 0x20
0x420: V362 = ADD 0x20 V354
0x424: V363 = 0x40
0x426: V364 = M[0x40]
0x429: V365 = SUB V362 V364
0x42b: RETURN V364 V365
---
Entry stack: [V12, 0x408, V901, V354, V354, V901]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x408]

================================

Block 0x42c
[0x42c:0x432]
---
Predecessors: [0xeb]
Successors: [0x433, 0x437]
---
0x42c JUMPDEST
0x42d CALLVALUE
0x42e ISZERO
0x42f PUSH2 0x437
0x432 JUMPI
---
0x42c: JUMPDEST 
0x42d: V366 = CALLVALUE
0x42e: V367 = ISZERO V366
0x42f: V368 = 0x437
0x432: JUMPI 0x437 V367
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x433
[0x433:0x436]
---
Predecessors: [0x42c]
Successors: []
---
0x433 PUSH1 0x0
0x435 DUP1
0x436 REVERT
---
0x433: V369 = 0x0
0x436: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x437
[0x437:0x43e]
---
Predecessors: [0x42c]
Successors: [0x9ad]
---
0x437 JUMPDEST
0x438 PUSH2 0x13d
0x43b PUSH2 0x9ad
0x43e JUMP
---
0x437: JUMPDEST 
0x438: V370 = 0x13d
0x43b: V371 = 0x9ad
0x43e: JUMP 0x9ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13d]
Exit stack: [V12, 0x13d]

================================

Block 0x43f
[0x43f:0x440]
---
Predecessors: []
Successors: []
---
0x43f JUMPDEST
0x440 STOP
---
0x43f: JUMPDEST 
0x440: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x441
[0x441:0x447]
---
Predecessors: [0xf6]
Successors: [0x448, 0x44c]
---
0x441 JUMPDEST
0x442 CALLVALUE
0x443 ISZERO
0x444 PUSH2 0x44c
0x447 JUMPI
---
0x441: JUMPDEST 
0x442: V372 = CALLVALUE
0x443: V373 = ISZERO V372
0x444: V374 = 0x44c
0x447: JUMPI 0x44c V373
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x448
[0x448:0x44b]
---
Predecessors: [0x441]
Successors: []
---
0x448 PUSH1 0x0
0x44a DUP1
0x44b REVERT
---
0x448: V375 = 0x0
0x44b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44c
[0x44c:0x453]
---
Predecessors: [0x441]
Successors: [0xaec]
---
0x44c JUMPDEST
0x44d PUSH2 0x181
0x450 PUSH2 0xaec
0x453 JUMP
---
0x44c: JUMPDEST 
0x44d: V376 = 0x181
0x450: V377 = 0xaec
0x453: JUMP 0xaec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x454
[0x454:0x465]
---
Predecessors: []
Successors: []
---
0x454 JUMPDEST
0x455 PUSH1 0x40
0x457 MLOAD
0x458 SWAP1
0x459 DUP2
0x45a MSTORE
0x45b PUSH1 0x20
0x45d ADD
0x45e PUSH1 0x40
0x460 MLOAD
0x461 DUP1
0x462 SWAP2
0x463 SUB
0x464 SWAP1
0x465 RETURN
---
0x454: JUMPDEST 
0x455: V378 = 0x40
0x457: V379 = M[0x40]
0x45a: M[V379] = S0
0x45b: V380 = 0x20
0x45d: V381 = ADD 0x20 V379
0x45e: V382 = 0x40
0x460: V383 = M[0x40]
0x463: V384 = SUB V381 V383
0x465: RETURN V383 V384
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x466
[0x466:0x46d]
---
Predecessors: [0x101]
Successors: [0x4ba]
---
0x466 JUMPDEST
0x467 PUSH2 0x181
0x46a PUSH2 0x4ba
0x46d JUMP
---
0x466: JUMPDEST 
0x467: V385 = 0x181
0x46a: V386 = 0x4ba
0x46d: JUMP 0x4ba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x46e
[0x46e:0x47f]
---
Predecessors: []
Successors: []
---
0x46e JUMPDEST
0x46f PUSH1 0x40
0x471 MLOAD
0x472 SWAP1
0x473 DUP2
0x474 MSTORE
0x475 PUSH1 0x20
0x477 ADD
0x478 PUSH1 0x40
0x47a MLOAD
0x47b DUP1
0x47c SWAP2
0x47d SUB
0x47e SWAP1
0x47f RETURN
---
0x46e: JUMPDEST 
0x46f: V387 = 0x40
0x471: V388 = M[0x40]
0x474: M[V388] = S0
0x475: V389 = 0x20
0x477: V390 = ADD 0x20 V388
0x478: V391 = 0x40
0x47a: V392 = M[0x40]
0x47d: V393 = SUB V390 V392
0x47f: RETURN V392 V393
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x480
[0x480:0x486]
---
Predecessors: [0x10c]
Successors: [0x487, 0x48b]
---
0x480 JUMPDEST
0x481 CALLVALUE
0x482 ISZERO
0x483 PUSH2 0x48b
0x486 JUMPI
---
0x480: JUMPDEST 
0x481: V394 = CALLVALUE
0x482: V395 = ISZERO V394
0x483: V396 = 0x48b
0x486: JUMPI 0x48b V395
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x487
[0x487:0x48a]
---
Predecessors: [0x480]
Successors: []
---
0x487 PUSH1 0x0
0x489 DUP1
0x48a REVERT
---
0x487: V397 = 0x0
0x48a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x48b
[0x48b:0x492]
---
Predecessors: [0x480]
Successors: [0xaf2]
---
0x48b JUMPDEST
0x48c PUSH2 0x181
0x48f PUSH2 0xaf2
0x492 JUMP
---
0x48b: JUMPDEST 
0x48c: V398 = 0x181
0x48f: V399 = 0xaf2
0x492: JUMP 0xaf2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x181]
Exit stack: [V12, 0x181]

================================

Block 0x493
[0x493:0x4a4]
---
Predecessors: []
Successors: []
---
0x493 JUMPDEST
0x494 PUSH1 0x40
0x496 MLOAD
0x497 SWAP1
0x498 DUP2
0x499 MSTORE
0x49a PUSH1 0x20
0x49c ADD
0x49d PUSH1 0x40
0x49f MLOAD
0x4a0 DUP1
0x4a1 SWAP2
0x4a2 SUB
0x4a3 SWAP1
0x4a4 RETURN
---
0x493: JUMPDEST 
0x494: V400 = 0x40
0x496: V401 = M[0x40]
0x499: M[V401] = S0
0x49a: V402 = 0x20
0x49c: V403 = ADD 0x20 V401
0x49d: V404 = 0x40
0x49f: V405 = M[0x40]
0x4a2: V406 = SUB V403 V405
0x4a4: RETURN V405 V406
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4a5
[0x4a5:0x4ab]
---
Predecessors: [0x117]
Successors: [0x4ac, 0x4b0]
---
0x4a5 JUMPDEST
0x4a6 CALLVALUE
0x4a7 ISZERO
0x4a8 PUSH2 0x4b0
0x4ab JUMPI
---
0x4a5: JUMPDEST 
0x4a6: V407 = CALLVALUE
0x4a7: V408 = ISZERO V407
0x4a8: V409 = 0x4b0
0x4ab: JUMPI 0x4b0 V408
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ac
[0x4ac:0x4af]
---
Predecessors: [0x4a5]
Successors: []
---
0x4ac PUSH1 0x0
0x4ae DUP1
0x4af REVERT
---
0x4ac: V410 = 0x0
0x4af: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b0
[0x4b0:0x4b7]
---
Predecessors: [0x4a5]
Successors: [0xaf8]
---
0x4b0 JUMPDEST
0x4b1 PUSH2 0x13d
0x4b4 PUSH2 0xaf8
0x4b7 JUMP
---
0x4b0: JUMPDEST 
0x4b1: V411 = 0x13d
0x4b4: V412 = 0xaf8
0x4b7: JUMP 0xaf8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13d]
Exit stack: [V12, 0x13d]

================================

Block 0x4b8
[0x4b8:0x4b9]
---
Predecessors: []
Successors: []
---
0x4b8 JUMPDEST
0x4b9 STOP
---
0x4b8: JUMPDEST 
0x4b9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4ba
[0x4ba:0x4c1]
---
Predecessors: [0x131, 0x466]
Successors: [0x4c2]
---
0x4ba JUMPDEST
0x4bb PUSH1 0x0
0x4bd DUP1
0x4be DUP1
0x4bf DUP1
0x4c0 DUP1
0x4c1 DUP1
---
0x4ba: JUMPDEST 
0x4bb: V413 = 0x0
---
Entry stack: [V12, S1, {0x139, 0x181}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, S1, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4c2
[0x4c2:0x4d1]
---
Predecessors: [0x4ba]
Successors: [0x4d2, 0x4d3]
---
0x4c2 JUMPDEST
0x4c3 PUSH1 0x0
0x4c5 SLOAD
0x4c6 PUSH1 0xff
0x4c8 AND
0x4c9 PUSH1 0x3
0x4cb DUP2
0x4cc GT
0x4cd ISZERO
0x4ce PUSH2 0x4d3
0x4d1 JUMPI
---
0x4c2: JUMPDEST 
0x4c3: V414 = 0x0
0x4c5: V415 = S[0x0]
0x4c6: V416 = 0xff
0x4c8: V417 = AND 0xff V415
0x4c9: V418 = 0x3
0x4cc: V419 = GT V417 0x3
0x4cd: V420 = ISZERO V419
0x4ce: V421 = 0x4d3
0x4d1: JUMPI 0x4d3 V420
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V417]
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V417]

================================

Block 0x4d2
[0x4d2:0x4d2]
---
Predecessors: [0x4c2]
Successors: []
---
0x4d2 INVALID
---
0x4d2: INVALID 
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V417]

================================

Block 0x4d3
[0x4d3:0x4d8]
---
Predecessors: [0x4c2]
Successors: [0x4d9, 0x4dd]
---
0x4d3 JUMPDEST
0x4d4 EQ
0x4d5 PUSH2 0x4dd
0x4d8 JUMPI
---
0x4d3: JUMPDEST 
0x4d4: V422 = EQ V417 0x0
0x4d5: V423 = 0x4dd
0x4d8: JUMPI 0x4dd V422
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V417]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4d9
[0x4d9:0x4dc]
---
Predecessors: [0x4d3]
Successors: []
---
0x4d9 PUSH1 0x0
0x4db DUP1
0x4dc REVERT
---
0x4d9: V424 = 0x0
0x4dc: REVERT 0x0 0x0
---
Entry stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4dd
[0x4dd:0x4e7]
---
Predecessors: [0x4d3]
Successors: [0x4e8, 0x4ec]
---
0x4dd JUMPDEST
0x4de PUSH1 0x7
0x4e0 SLOAD
0x4e1 CALLVALUE
0x4e2 LT
0x4e3 ISZERO
0x4e4 PUSH2 0x4ec
0x4e7 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V425 = 0x7
0x4e0: V426 = S[0x7]
0x4e1: V427 = CALLVALUE
0x4e2: V428 = LT V427 V426
0x4e3: V429 = ISZERO V428
0x4e4: V430 = 0x4ec
0x4e7: JUMPI 0x4ec V429
---
Entry stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4e8
[0x4e8:0x4eb]
---
Predecessors: [0x4dd]
Successors: []
---
0x4e8 PUSH1 0x0
0x4ea DUP1
0x4eb REVERT
---
0x4e8: V431 = 0x0
0x4eb: REVERT 0x0 0x0
---
Entry stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4ec
[0x4ec:0x4f7]
---
Predecessors: [0x4dd]
Successors: [0x4f8, 0x4f9]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x7
0x4ef SLOAD
0x4f0 CALLVALUE
0x4f1 DUP2
0x4f2 ISZERO
0x4f3 ISZERO
0x4f4 PUSH2 0x4f9
0x4f7 JUMPI
---
0x4ec: JUMPDEST 
0x4ed: V432 = 0x7
0x4ef: V433 = S[0x7]
0x4f0: V434 = CALLVALUE
0x4f2: V435 = ISZERO V433
0x4f3: V436 = ISZERO V435
0x4f4: V437 = 0x4f9
0x4f7: JUMPI 0x4f9 V436
---
Entry stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V433, V434]
Exit stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, V433, V434]

================================

Block 0x4f8
[0x4f8:0x4f8]
---
Predecessors: [0x4ec]
Successors: []
---
0x4f8 INVALID
---
0x4f8: INVALID 
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, V433, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, V433, V434]

================================

Block 0x4f9
[0x4f9:0x4ff]
---
Predecessors: [0x4ec]
Successors: [0x500, 0x504]
---
0x4f9 JUMPDEST
0x4fa MOD
0x4fb ISZERO
0x4fc PUSH2 0x504
0x4ff JUMPI
---
0x4f9: JUMPDEST 
0x4fa: V438 = MOD V434 V433
0x4fb: V439 = ISZERO V438
0x4fc: V440 = 0x504
0x4ff: JUMPI 0x504 V439
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0, V433, V434]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x500
[0x500:0x503]
---
Predecessors: [0x4f9]
Successors: []
---
0x500 PUSH1 0x0
0x502 DUP1
0x503 REVERT
---
0x500: V441 = 0x0
0x503: REVERT 0x0 0x0
---
Entry stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x504
[0x504:0x512]
---
Predecessors: [0x4f9]
Successors: [0xb70]
---
0x504 JUMPDEST
0x505 CALLVALUE
0x506 SWAP4
0x507 POP
0x508 PUSH2 0x513
0x50b DUP5
0x50c PUSH1 0x7
0x50e SLOAD
0x50f PUSH2 0xb70
0x512 JUMP
---
0x504: JUMPDEST 
0x505: V442 = CALLVALUE
0x508: V443 = 0x513
0x50c: V444 = 0x7
0x50e: V445 = S[0x7]
0x50f: V446 = 0xb70
0x512: JUMP 0xb70
---
Entry stack: [V12, S6, {0x139, 0x181}, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V442, S2, S1, S0, 0x513, V442, V445]
Exit stack: [V12, S6, {0x139, 0x181}, 0x0, V442, 0x0, 0x0, 0x0, 0x513, V442, V445]

================================

Block 0x513
[0x513:0x51c]
---
Predecessors: [0xb85]
Successors: [0x8a5]
---
0x513 JUMPDEST
0x514 SWAP3
0x515 POP
0x516 PUSH2 0x51d
0x519 PUSH2 0x8a5
0x51c JUMP
---
0x513: JUMPDEST 
0x516: V447 = 0x51d
0x519: V448 = 0x8a5
0x51c: JUMP 0x8a5
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1, 0x51d]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S0, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, 0x51d]

================================

Block 0x51d
[0x51d:0x52f]
---
Predecessors: [0x907]
Successors: [0xb8c]
---
0x51d JUMPDEST
0x51e SWAP2
0x51f POP
0x520 PUSH2 0x53c
0x523 DUP4
0x524 PUSH2 0x537
0x527 PUSH2 0x530
0x52a DUP7
0x52b DUP7
0x52c PUSH2 0xb8c
0x52f JUMP
---
0x51d: JUMPDEST 
0x520: V449 = 0x53c
0x524: V450 = 0x537
0x527: V451 = 0x530
0x52c: V452 = 0xb8c
0x52f: JUMP 0xb8c
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S1, {0x0, 0xa, 0x14, 0x1e}]
Stack pops: 4
Stack additions: [S3, S0, S1, 0x53c, S3, 0x537, 0x530, S3, S0]
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S1, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}]

================================

Block 0x530
[0x530:0x536]
---
Predecessors: [0xbb4]
Successors: [0xb70]
---
0x530 JUMPDEST
0x531 PUSH1 0x64
0x533 PUSH2 0xb70
0x536 JUMP
---
0x530: JUMPDEST 
0x531: V453 = 0x64
0x533: V454 = 0xb70
0x536: JUMP 0xb70
---
Entry stack: [V12, S10, {0x139, 0x181}, S8, S7, S6, {0x0, 0xa, 0x14, 0x1e}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V12, S10, {0x139, 0x181}, S8, S7, S6, {0x0, 0xa, 0x14, 0x1e}, S4, S3, S2, S1, S0, 0x64]

================================

Block 0x537
[0x537:0x53b]
---
Predecessors: [0xb85]
Successors: [0xbbb]
---
0x537 JUMPDEST
0x538 PUSH2 0xbbb
0x53b JUMP
---
0x537: JUMPDEST 
0x538: V455 = 0xbbb
0x53b: JUMP 0xbbb
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, S0]

================================

Block 0x53c
[0x53c:0x54b]
---
Predecessors: [0xbb4]
Successors: [0xb70]
---
0x53c JUMPDEST
0x53d SWAP3
0x53e POP
0x53f PUSH2 0x54c
0x542 PUSH1 0xa
0x544 SLOAD
0x545 PUSH1 0x7
0x547 SLOAD
0x548 PUSH2 0xb70
0x54b JUMP
---
0x53c: JUMPDEST 
0x53f: V456 = 0x54c
0x542: V457 = 0xa
0x544: V458 = S[0xa]
0x545: V459 = 0x7
0x547: V460 = S[0x7]
0x548: V461 = 0xb70
0x54b: JUMP 0xb70
---
Entry stack: [V12, S10, {0x139, 0x181}, S8, S7, S6, {0x0, 0xa, 0x14, 0x1e}, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1, 0x54c, V458, V460]
Exit stack: [V12, S10, {0x139, 0x181}, S8, S7, S6, {0x0, 0xa, 0x14, 0x1e}, S4, S0, S2, S1, 0x54c, V458, V460]

================================

Block 0x54c
[0x54c:0x557]
---
Predecessors: [0xb85]
Successors: [0x558, 0x55c]
---
0x54c JUMPDEST
0x54d PUSH1 0x4
0x54f SLOAD
0x550 DUP5
0x551 ADD
0x552 GT
0x553 ISZERO
0x554 PUSH2 0x55c
0x557 JUMPI
---
0x54c: JUMPDEST 
0x54d: V462 = 0x4
0x54f: V463 = S[0x4]
0x551: V464 = ADD S3 V463
0x552: V465 = GT V464 S0
0x553: V466 = ISZERO V465
0x554: V467 = 0x55c
0x557: JUMPI 0x55c V466
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1]

================================

Block 0x558
[0x558:0x55b]
---
Predecessors: [0x54c]
Successors: []
---
0x558 PUSH1 0x0
0x55a DUP1
0x55b REVERT
---
0x558: V468 = 0x0
0x55b: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0]

================================

Block 0x55c
[0x55c:0x59a]
---
Predecessors: [0x54c]
Successors: [0x59b, 0x609]
---
0x55c JUMPDEST
0x55d PUSH1 0x1
0x55f PUSH1 0xa0
0x561 PUSH1 0x2
0x563 EXP
0x564 SUB
0x565 CALLER
0x566 DUP2
0x567 AND
0x568 PUSH1 0x0
0x56a SWAP1
0x56b DUP2
0x56c MSTORE
0x56d PUSH1 0x1
0x56f PUSH1 0x20
0x571 DUP2
0x572 SWAP1
0x573 MSTORE
0x574 PUSH1 0x40
0x576 SWAP1
0x577 SWAP2
0x578 SHA3
0x579 CALLVALUE
0x57a SWAP1
0x57b SSTORE
0x57c PUSH1 0xe
0x57e DUP1
0x57f SLOAD
0x580 SWAP1
0x581 SWAP2
0x582 ADD
0x583 SWAP1
0x584 SSTORE
0x585 PUSH1 0x4
0x587 DUP1
0x588 SLOAD
0x589 DUP6
0x58a ADD
0x58b SWAP1
0x58c SSTORE
0x58d ADDRESS
0x58e AND
0x58f BALANCE
0x590 PUSH1 0x2
0x592 SSTORE
0x593 PUSH1 0xa
0x595 SLOAD
0x596 ISZERO
0x597 PUSH2 0x609
0x59a JUMPI
---
0x55c: JUMPDEST 
0x55d: V469 = 0x1
0x55f: V470 = 0xa0
0x561: V471 = 0x2
0x563: V472 = EXP 0x2 0xa0
0x564: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x565: V474 = CALLER
0x567: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x568: V476 = 0x0
0x56c: M[0x0] = V475
0x56d: V477 = 0x1
0x56f: V478 = 0x20
0x573: M[0x20] = 0x1
0x574: V479 = 0x40
0x578: V480 = SHA3 0x0 0x40
0x579: V481 = CALLVALUE
0x57b: S[V480] = V481
0x57c: V482 = 0xe
0x57f: V483 = S[0xe]
0x582: V484 = ADD 0x1 V483
0x584: S[0xe] = V484
0x585: V485 = 0x4
0x588: V486 = S[0x4]
0x58a: V487 = ADD S2 V486
0x58c: S[0x4] = V487
0x58d: V488 = ADDRESS
0x58e: V489 = AND V488 0xffffffffffffffffffffffffffffffffffffffff
0x58f: V490 = BALANCE V489
0x590: V491 = 0x2
0x592: S[0x2] = V490
0x593: V492 = 0xa
0x595: V493 = S[0xa]
0x596: V494 = ISZERO V493
0x597: V495 = 0x609
0x59a: JUMPI 0x609 V494
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0]

================================

Block 0x59b
[0x59b:0x5eb]
---
Predecessors: [0x55c]
Successors: [0x5ec, 0x5f0]
---
0x59b PUSH1 0xf
0x59d SLOAD
0x59e PUSH1 0x1
0x5a0 PUSH1 0xa0
0x5a2 PUSH1 0x2
0x5a4 EXP
0x5a5 SUB
0x5a6 AND
0x5a7 PUSH4 0xa9059cbb
0x5ac CALLER
0x5ad DUP6
0x5ae PUSH1 0x40
0x5b0 MLOAD
0x5b1 PUSH1 0xe0
0x5b3 PUSH1 0x2
0x5b5 EXP
0x5b6 PUSH4 0xffffffff
0x5bb DUP6
0x5bc AND
0x5bd MUL
0x5be DUP2
0x5bf MSTORE
0x5c0 PUSH1 0x1
0x5c2 PUSH1 0xa0
0x5c4 PUSH1 0x2
0x5c6 EXP
0x5c7 SUB
0x5c8 SWAP1
0x5c9 SWAP3
0x5ca AND
0x5cb PUSH1 0x4
0x5cd DUP4
0x5ce ADD
0x5cf MSTORE
0x5d0 PUSH1 0x24
0x5d2 DUP3
0x5d3 ADD
0x5d4 MSTORE
0x5d5 PUSH1 0x44
0x5d7 ADD
0x5d8 PUSH1 0x0
0x5da PUSH1 0x40
0x5dc MLOAD
0x5dd DUP1
0x5de DUP4
0x5df SUB
0x5e0 DUP2
0x5e1 PUSH1 0x0
0x5e3 DUP8
0x5e4 DUP1
0x5e5 EXTCODESIZE
0x5e6 ISZERO
0x5e7 ISZERO
0x5e8 PUSH2 0x5f0
0x5eb JUMPI
---
0x59b: V496 = 0xf
0x59d: V497 = S[0xf]
0x59e: V498 = 0x1
0x5a0: V499 = 0xa0
0x5a2: V500 = 0x2
0x5a4: V501 = EXP 0x2 0xa0
0x5a5: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a6: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x5a7: V504 = 0xa9059cbb
0x5ac: V505 = CALLER
0x5ae: V506 = 0x40
0x5b0: V507 = M[0x40]
0x5b1: V508 = 0xe0
0x5b3: V509 = 0x2
0x5b5: V510 = EXP 0x2 0xe0
0x5b6: V511 = 0xffffffff
0x5bc: V512 = AND 0xa9059cbb 0xffffffff
0x5bd: V513 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5bf: M[V507] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5c0: V514 = 0x1
0x5c2: V515 = 0xa0
0x5c4: V516 = 0x2
0x5c6: V517 = EXP 0x2 0xa0
0x5c7: V518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ca: V519 = AND V505 0xffffffffffffffffffffffffffffffffffffffff
0x5cb: V520 = 0x4
0x5ce: V521 = ADD V507 0x4
0x5cf: M[V521] = V519
0x5d0: V522 = 0x24
0x5d3: V523 = ADD V507 0x24
0x5d4: M[V523] = S2
0x5d5: V524 = 0x44
0x5d7: V525 = ADD 0x44 V507
0x5d8: V526 = 0x0
0x5da: V527 = 0x40
0x5dc: V528 = M[0x40]
0x5df: V529 = SUB V525 V528
0x5e1: V530 = 0x0
0x5e5: V531 = EXTCODESIZE V503
0x5e6: V532 = ISZERO V531
0x5e7: V533 = ISZERO V532
0x5e8: V534 = 0x5f0
0x5eb: JUMPI 0x5f0 V533
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V503, 0xa9059cbb, V525, 0x0, V528, V529, V528, 0x0, V503]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0, V503, 0xa9059cbb, V525, 0x0, V528, V529, V528, 0x0, V503]

================================

Block 0x5ec
[0x5ec:0x5ef]
---
Predecessors: [0x59b]
Successors: []
---
0x5ec PUSH1 0x0
0x5ee DUP1
0x5ef REVERT
---
0x5ec: V535 = 0x0
0x5ef: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S9, V503, 0xa9059cbb, V525, 0x0, V528, V529, V528, 0x0, V503]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S9, V503, 0xa9059cbb, V525, 0x0, V528, V529, V528, 0x0, V503]

================================

Block 0x5f0
[0x5f0:0x5fc]
---
Predecessors: [0x59b]
Successors: [0x5fd, 0x601]
---
0x5f0 JUMPDEST
0x5f1 PUSH2 0x2c6
0x5f4 GAS
0x5f5 SUB
0x5f6 CALL
0x5f7 ISZERO
0x5f8 ISZERO
0x5f9 PUSH2 0x601
0x5fc JUMPI
---
0x5f0: JUMPDEST 
0x5f1: V536 = 0x2c6
0x5f4: V537 = GAS
0x5f5: V538 = SUB V537 0x2c6
0x5f6: V539 = CALL V538 V503 0x0 V528 V529 V528 0x0
0x5f7: V540 = ISZERO V539
0x5f8: V541 = ISZERO V540
0x5f9: V542 = 0x601
0x5fc: JUMPI 0x601 V541
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S9, V503, 0xa9059cbb, V525, 0x0, V528, V529, V528, 0x0, V503]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S9, V503, 0xa9059cbb, V525]

================================

Block 0x5fd
[0x5fd:0x600]
---
Predecessors: [0x5f0]
Successors: []
---
0x5fd PUSH1 0x0
0x5ff DUP1
0x600 REVERT
---
0x5fd: V543 = 0x0
0x600: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, V503, 0xa9059cbb, V525]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, V503, 0xa9059cbb, V525]

================================

Block 0x601
[0x601:0x608]
---
Predecessors: [0x5f0]
Successors: [0x674]
---
0x601 JUMPDEST
0x602 POP
0x603 POP
0x604 POP
0x605 PUSH2 0x674
0x608 JUMP
---
0x601: JUMPDEST 
0x605: V544 = 0x674
0x608: JUMP 0x674
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, V503, 0xa9059cbb, V525]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3]

================================

Block 0x609
[0x609:0x65a]
---
Predecessors: [0x55c]
Successors: [0x65b, 0x65f]
---
0x609 JUMPDEST
0x60a PUSH1 0xf
0x60c SLOAD
0x60d PUSH1 0x1
0x60f PUSH1 0xa0
0x611 PUSH1 0x2
0x613 EXP
0x614 SUB
0x615 AND
0x616 PUSH4 0x79c65068
0x61b CALLER
0x61c DUP6
0x61d PUSH1 0x40
0x61f MLOAD
0x620 PUSH1 0xe0
0x622 PUSH1 0x2
0x624 EXP
0x625 PUSH4 0xffffffff
0x62a DUP6
0x62b AND
0x62c MUL
0x62d DUP2
0x62e MSTORE
0x62f PUSH1 0x1
0x631 PUSH1 0xa0
0x633 PUSH1 0x2
0x635 EXP
0x636 SUB
0x637 SWAP1
0x638 SWAP3
0x639 AND
0x63a PUSH1 0x4
0x63c DUP4
0x63d ADD
0x63e MSTORE
0x63f PUSH1 0x24
0x641 DUP3
0x642 ADD
0x643 MSTORE
0x644 PUSH1 0x44
0x646 ADD
0x647 PUSH1 0x0
0x649 PUSH1 0x40
0x64b MLOAD
0x64c DUP1
0x64d DUP4
0x64e SUB
0x64f DUP2
0x650 PUSH1 0x0
0x652 DUP8
0x653 DUP1
0x654 EXTCODESIZE
0x655 ISZERO
0x656 ISZERO
0x657 PUSH2 0x65f
0x65a JUMPI
---
0x609: JUMPDEST 
0x60a: V545 = 0xf
0x60c: V546 = S[0xf]
0x60d: V547 = 0x1
0x60f: V548 = 0xa0
0x611: V549 = 0x2
0x613: V550 = EXP 0x2 0xa0
0x614: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x615: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x616: V553 = 0x79c65068
0x61b: V554 = CALLER
0x61d: V555 = 0x40
0x61f: V556 = M[0x40]
0x620: V557 = 0xe0
0x622: V558 = 0x2
0x624: V559 = EXP 0x2 0xe0
0x625: V560 = 0xffffffff
0x62b: V561 = AND 0x79c65068 0xffffffff
0x62c: V562 = MUL 0x79c65068 0x100000000000000000000000000000000000000000000000000000000
0x62e: M[V556] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x62f: V563 = 0x1
0x631: V564 = 0xa0
0x633: V565 = 0x2
0x635: V566 = EXP 0x2 0xa0
0x636: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x639: V568 = AND V554 0xffffffffffffffffffffffffffffffffffffffff
0x63a: V569 = 0x4
0x63d: V570 = ADD V556 0x4
0x63e: M[V570] = V568
0x63f: V571 = 0x24
0x642: V572 = ADD V556 0x24
0x643: M[V572] = S2
0x644: V573 = 0x44
0x646: V574 = ADD 0x44 V556
0x647: V575 = 0x0
0x649: V576 = 0x40
0x64b: V577 = M[0x40]
0x64e: V578 = SUB V574 V577
0x650: V579 = 0x0
0x654: V580 = EXTCODESIZE V552
0x655: V581 = ISZERO V580
0x656: V582 = ISZERO V581
0x657: V583 = 0x65f
0x65a: JUMPI 0x65f V582
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V552, 0x79c65068, V574, 0x0, V577, V578, V577, 0x0, V552]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0, V552, 0x79c65068, V574, 0x0, V577, V578, V577, 0x0, V552]

================================

Block 0x65b
[0x65b:0x65e]
---
Predecessors: [0x609]
Successors: []
---
0x65b PUSH1 0x0
0x65d DUP1
0x65e REVERT
---
0x65b: V584 = 0x0
0x65e: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S9, V552, 0x79c65068, V574, 0x0, V577, V578, V577, 0x0, V552]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S9, V552, 0x79c65068, V574, 0x0, V577, V578, V577, 0x0, V552]

================================

Block 0x65f
[0x65f:0x66b]
---
Predecessors: [0x609]
Successors: [0x66c, 0x670]
---
0x65f JUMPDEST
0x660 PUSH2 0x2c6
0x663 GAS
0x664 SUB
0x665 CALL
0x666 ISZERO
0x667 ISZERO
0x668 PUSH2 0x670
0x66b JUMPI
---
0x65f: JUMPDEST 
0x660: V585 = 0x2c6
0x663: V586 = GAS
0x664: V587 = SUB V586 0x2c6
0x665: V588 = CALL V587 V552 0x0 V577 V578 V577 0x0
0x666: V589 = ISZERO V588
0x667: V590 = ISZERO V589
0x668: V591 = 0x670
0x66b: JUMPI 0x670 V590
---
Entry stack: [V12, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S9, V552, 0x79c65068, V574, 0x0, V577, V578, V577, 0x0, V552]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S9, V552, 0x79c65068, V574]

================================

Block 0x66c
[0x66c:0x66f]
---
Predecessors: [0x65f]
Successors: []
---
0x66c PUSH1 0x0
0x66e DUP1
0x66f REVERT
---
0x66c: V592 = 0x0
0x66f: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, V552, 0x79c65068, V574]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, V552, 0x79c65068, V574]

================================

Block 0x670
[0x670:0x673]
---
Predecessors: [0x65f]
Successors: [0x674]
---
0x670 JUMPDEST
0x671 POP
0x672 POP
0x673 POP
---
0x670: JUMPDEST 
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, V552, 0x79c65068, V574]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3]

================================

Block 0x674
[0x674:0x6de]
---
Predecessors: [0x601, 0x670]
Successors: [0x76d]
---
0x674 JUMPDEST
0x675 PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x696 CALLER
0x697 CALLVALUE
0x698 ADDRESS
0x699 PUSH1 0x1
0x69b PUSH1 0xa0
0x69d PUSH1 0x2
0x69f EXP
0x6a0 SUB
0x6a1 AND
0x6a2 BALANCE
0x6a3 PUSH1 0x40
0x6a5 MLOAD
0x6a6 DUP1
0x6a7 DUP5
0x6a8 PUSH1 0x1
0x6aa PUSH1 0xa0
0x6ac PUSH1 0x2
0x6ae EXP
0x6af SUB
0x6b0 AND
0x6b1 PUSH1 0x1
0x6b3 PUSH1 0xa0
0x6b5 PUSH1 0x2
0x6b7 EXP
0x6b8 SUB
0x6b9 AND
0x6ba DUP2
0x6bb MSTORE
0x6bc PUSH1 0x20
0x6be ADD
0x6bf DUP4
0x6c0 DUP2
0x6c1 MSTORE
0x6c2 PUSH1 0x20
0x6c4 ADD
0x6c5 DUP3
0x6c6 DUP2
0x6c7 MSTORE
0x6c8 PUSH1 0x20
0x6ca ADD
0x6cb SWAP4
0x6cc POP
0x6cd POP
0x6ce POP
0x6cf POP
0x6d0 PUSH1 0x40
0x6d2 MLOAD
0x6d3 DUP1
0x6d4 SWAP2
0x6d5 SUB
0x6d6 SWAP1
0x6d7 LOG1
0x6d8 PUSH2 0x6df
0x6db PUSH2 0x76d
0x6de JUMP
---
0x674: JUMPDEST 
0x675: V593 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x696: V594 = CALLER
0x697: V595 = CALLVALUE
0x698: V596 = ADDRESS
0x699: V597 = 0x1
0x69b: V598 = 0xa0
0x69d: V599 = 0x2
0x69f: V600 = EXP 0x2 0xa0
0x6a0: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a1: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x6a2: V603 = BALANCE V602
0x6a3: V604 = 0x40
0x6a5: V605 = M[0x40]
0x6a8: V606 = 0x1
0x6aa: V607 = 0xa0
0x6ac: V608 = 0x2
0x6ae: V609 = EXP 0x2 0xa0
0x6af: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b0: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x6b1: V612 = 0x1
0x6b3: V613 = 0xa0
0x6b5: V614 = 0x2
0x6b7: V615 = EXP 0x2 0xa0
0x6b8: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b9: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x6bb: M[V605] = V617
0x6bc: V618 = 0x20
0x6be: V619 = ADD 0x20 V605
0x6c1: M[V619] = V595
0x6c2: V620 = 0x20
0x6c4: V621 = ADD 0x20 V619
0x6c7: M[V621] = V603
0x6c8: V622 = 0x20
0x6ca: V623 = ADD 0x20 V621
0x6d0: V624 = 0x40
0x6d2: V625 = M[0x40]
0x6d5: V626 = SUB V623 V625
0x6d7: LOG V625 V626 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x6d8: V627 = 0x6df
0x6db: V628 = 0x76d
0x6de: JUMP 0x76d
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0]
Stack pops: 0
Stack additions: [0x6df]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S0, 0x6df]

================================

Block 0x6df
[0x6df:0x6e7]
---
Predecessors: [0x13b, 0x8a3]
Successors: [0x6e8]
---
0x6df JUMPDEST
0x6e0 PUSH1 0x1
0x6e2 PUSH1 0xe
0x6e4 SLOAD
0x6e5 SUB
0x6e6 SWAP5
0x6e7 POP
---
0x6df: JUMPDEST 
0x6e0: V629 = 0x1
0x6e2: V630 = 0xe
0x6e4: V631 = S[0xe]
0x6e5: V632 = SUB V631 0x1
---
Entry stack: [V12, S6, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S0]
Stack pops: 5
Stack additions: [V632, S3, S2, S1, S0]
Exit stack: [V12, S6, {0x139, 0x181}, V632, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S0]

================================

Block 0x6e8
[0x6e8:0x6e8]
---
Predecessors: [0x6df]
Successors: [0x6e9]
---
0x6e8 JUMPDEST
---
0x6e8: JUMPDEST 
---
Entry stack: [V12, S6, {0x139, 0x181}, V632, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x139, 0x181}, V632, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S0]

================================

Block 0x6e9
[0x6e9:0x6e9]
---
Predecessors: [0x6e8]
Successors: [0x6ea]
---
0x6e9 JUMPDEST
---
0x6e9: JUMPDEST 
---
Entry stack: [V12, S6, {0x139, 0x181}, S4, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x139, 0x181}, S4, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S0]

================================

Block 0x6ea
[0x6ea:0x6ea]
---
Predecessors: [0x6e9]
Successors: [0x6eb]
---
0x6ea JUMPDEST
---
0x6ea: JUMPDEST 
---
Entry stack: [V12, S6, {0x139, 0x181}, S4, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x139, 0x181}, S4, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S0]

================================

Block 0x6eb
[0x6eb:0x6f1]
---
Predecessors: [0x6ea]
Successors: [0x139, 0x181]
---
0x6eb JUMPDEST
0x6ec POP
0x6ed POP
0x6ee POP
0x6ef POP
0x6f0 SWAP1
0x6f1 JUMP
---
0x6eb: JUMPDEST 
0x6f1: JUMP {0x139, 0x181}
---
Entry stack: [V12, S6, {0x139, 0x181}, S4, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S0]
Stack pops: 6
Stack additions: [S4]
Exit stack: [V12, S6, S4]

================================

Block 0x6f2
[0x6f2:0x700]
---
Predecessors: [0x14a]
Successors: [0x152]
---
0x6f2 JUMPDEST
0x6f3 PUSH1 0x10
0x6f5 SLOAD
0x6f6 PUSH1 0x1
0x6f8 PUSH1 0xa0
0x6fa PUSH1 0x2
0x6fc EXP
0x6fd SUB
0x6fe AND
0x6ff DUP2
0x700 JUMP
---
0x6f2: JUMPDEST 
0x6f3: V633 = 0x10
0x6f5: V634 = S[0x10]
0x6f6: V635 = 0x1
0x6f8: V636 = 0xa0
0x6fa: V637 = 0x2
0x6fc: V638 = EXP 0x2 0xa0
0x6fd: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fe: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0x700: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, V640]
Exit stack: [V12, 0x152, V640]

================================

Block 0x701
[0x701:0x706]
---
Predecessors: [0x179]
Successors: [0x181]
---
0x701 JUMPDEST
0x702 PUSH1 0x5
0x704 SLOAD
0x705 DUP2
0x706 JUMP
---
0x701: JUMPDEST 
0x702: V641 = 0x5
0x704: V642 = S[0x5]
0x706: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V642]
Exit stack: [V12, 0x181, V642]

================================

Block 0x707
[0x707:0x70c]
---
Predecessors: [0x19e]
Successors: [0x181]
---
0x707 JUMPDEST
0x708 PUSH1 0x6
0x70a SLOAD
0x70b DUP2
0x70c JUMP
---
0x707: JUMPDEST 
0x708: V643 = 0x6
0x70a: V644 = S[0x6]
0x70c: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V644]
Exit stack: [V12, 0x181, V644]

================================

Block 0x70d
[0x70d:0x71b]
---
Predecessors: [0x1c3]
Successors: [0x152]
---
0x70d JUMPDEST
0x70e PUSH1 0x11
0x710 SLOAD
0x711 PUSH1 0x1
0x713 PUSH1 0xa0
0x715 PUSH1 0x2
0x717 EXP
0x718 SUB
0x719 AND
0x71a DUP2
0x71b JUMP
---
0x70d: JUMPDEST 
0x70e: V645 = 0x11
0x710: V646 = S[0x11]
0x711: V647 = 0x1
0x713: V648 = 0xa0
0x715: V649 = 0x2
0x717: V650 = EXP 0x2 0xa0
0x718: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x719: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x71b: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, V652]
Exit stack: [V12, 0x152, V652]

================================

Block 0x71c
[0x71c:0x721]
---
Predecessors: [0x1f2]
Successors: [0x181]
---
0x71c JUMPDEST
0x71d PUSH1 0x7
0x71f SLOAD
0x720 DUP2
0x721 JUMP
---
0x71c: JUMPDEST 
0x71d: V653 = 0x7
0x71f: V654 = S[0x7]
0x721: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V654]
Exit stack: [V12, 0x181, V654]

================================

Block 0x722
[0x722:0x727]
---
Predecessors: [0x217]
Successors: [0x181]
---
0x722 JUMPDEST
0x723 PUSH1 0xb
0x725 SLOAD
0x726 DUP2
0x727 JUMP
---
0x722: JUMPDEST 
0x723: V655 = 0xb
0x725: V656 = S[0xb]
0x727: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V656]
Exit stack: [V12, 0x181, V656]

================================

Block 0x728
[0x728:0x739]
---
Predecessors: [0x23c]
Successors: [0x181]
---
0x728 JUMPDEST
0x729 PUSH1 0x1
0x72b PUSH1 0x20
0x72d MSTORE
0x72e PUSH1 0x0
0x730 SWAP1
0x731 DUP2
0x732 MSTORE
0x733 PUSH1 0x40
0x735 SWAP1
0x736 SHA3
0x737 SLOAD
0x738 DUP2
0x739 JUMP
---
0x728: JUMPDEST 
0x729: V657 = 0x1
0x72b: V658 = 0x20
0x72d: M[0x20] = 0x1
0x72e: V659 = 0x0
0x732: M[0x0] = V194
0x733: V660 = 0x40
0x736: V661 = SHA3 0x0 0x40
0x737: V662 = S[V661]
0x739: JUMP 0x181
---
Entry stack: [V12, 0x181, V194]
Stack pops: 2
Stack additions: [S1, V662]
Exit stack: [V12, 0x181, V662]

================================

Block 0x73a
[0x73a:0x73f]
---
Predecessors: [0x26d]
Successors: [0x181]
---
0x73a JUMPDEST
0x73b PUSH1 0x4
0x73d SLOAD
0x73e DUP2
0x73f JUMP
---
0x73a: JUMPDEST 
0x73b: V663 = 0x4
0x73d: V664 = S[0x4]
0x73f: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V664]
Exit stack: [V12, 0x181, V664]

================================

Block 0x740
[0x740:0x745]
---
Predecessors: [0x292]
Successors: [0x181]
---
0x740 JUMPDEST
0x741 PUSH1 0x8
0x743 SLOAD
0x744 DUP2
0x745 JUMP
---
0x740: JUMPDEST 
0x741: V665 = 0x8
0x743: V666 = S[0x8]
0x745: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V666]
Exit stack: [V12, 0x181, V666]

================================

Block 0x746
[0x746:0x74b]
---
Predecessors: [0x2b7]
Successors: [0x181]
---
0x746 JUMPDEST
0x747 PUSH1 0x3
0x749 SLOAD
0x74a DUP2
0x74b JUMP
---
0x746: JUMPDEST 
0x747: V667 = 0x3
0x749: V668 = S[0x3]
0x74b: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V668]
Exit stack: [V12, 0x181, V668]

================================

Block 0x74c
[0x74c:0x751]
---
Predecessors: [0x2dc]
Successors: [0x181]
---
0x74c JUMPDEST
0x74d PUSH1 0xe
0x74f SLOAD
0x750 DUP2
0x751 JUMP
---
0x74c: JUMPDEST 
0x74d: V669 = 0xe
0x74f: V670 = S[0xe]
0x751: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V670]
Exit stack: [V12, 0x181, V670]

================================

Block 0x752
[0x752:0x760]
---
Predecessors: [0x301]
Successors: [0x152]
---
0x752 JUMPDEST
0x753 PUSH1 0xf
0x755 SLOAD
0x756 PUSH1 0x1
0x758 PUSH1 0xa0
0x75a PUSH1 0x2
0x75c EXP
0x75d SUB
0x75e AND
0x75f DUP2
0x760 JUMP
---
0x752: JUMPDEST 
0x753: V671 = 0xf
0x755: V672 = S[0xf]
0x756: V673 = 0x1
0x758: V674 = 0xa0
0x75a: V675 = 0x2
0x75c: V676 = EXP 0x2 0xa0
0x75d: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75e: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0x760: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, V678]
Exit stack: [V12, 0x152, V678]

================================

Block 0x761
[0x761:0x766]
---
Predecessors: [0x330]
Successors: [0x181]
---
0x761 JUMPDEST
0x762 PUSH1 0x9
0x764 SLOAD
0x765 DUP2
0x766 JUMP
---
0x761: JUMPDEST 
0x762: V679 = 0x9
0x764: V680 = S[0x9]
0x766: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V680]
Exit stack: [V12, 0x181, V680]

================================

Block 0x767
[0x767:0x76c]
---
Predecessors: [0x355]
Successors: [0x181]
---
0x767 JUMPDEST
0x768 PUSH1 0xc
0x76a SLOAD
0x76b DUP2
0x76c JUMP
---
0x767: JUMPDEST 
0x768: V681 = 0xc
0x76a: V682 = S[0xc]
0x76c: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V682]
Exit stack: [V12, 0x181, V682]

================================

Block 0x76d
[0x76d:0x778]
---
Predecessors: [0x37a, 0x674]
Successors: [0x779, 0x789]
---
0x76d JUMPDEST
0x76e PUSH1 0xa
0x770 SLOAD
0x771 ISZERO
0x772 DUP1
0x773 ISZERO
0x774 SWAP1
0x775 PUSH2 0x789
0x778 JUMPI
---
0x76d: JUMPDEST 
0x76e: V683 = 0xa
0x770: V684 = S[0xa]
0x771: V685 = ISZERO V684
0x773: V686 = ISZERO V685
0x775: V687 = 0x789
0x778: JUMPI 0x789 V685
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, {0x13d, 0x6df}]
Stack pops: 0
Stack additions: [V686]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, {0x13d, 0x6df}, V686]

================================

Block 0x779
[0x779:0x788]
---
Predecessors: [0x76d]
Successors: [0x789]
---
0x779 POP
0x77a PUSH1 0xa
0x77c SLOAD
0x77d ADDRESS
0x77e PUSH1 0x1
0x780 PUSH1 0xa0
0x782 PUSH1 0x2
0x784 EXP
0x785 SUB
0x786 AND
0x787 BALANCE
0x788 GT
---
0x77a: V688 = 0xa
0x77c: V689 = S[0xa]
0x77d: V690 = ADDRESS
0x77e: V691 = 0x1
0x780: V692 = 0xa0
0x782: V693 = 0x2
0x784: V694 = EXP 0x2 0xa0
0x785: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x786: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0x787: V697 = BALANCE V696
0x788: V698 = GT V697 V689
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S2, {0x13d, 0x6df}, V686]
Stack pops: 1
Stack additions: [V698]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S2, {0x13d, 0x6df}, V698]

================================

Block 0x789
[0x789:0x78e]
---
Predecessors: [0x76d, 0x779]
Successors: [0x78f, 0x7fa]
---
0x789 JUMPDEST
0x78a ISZERO
0x78b PUSH2 0x7fa
0x78e JUMPI
---
0x789: JUMPDEST 
0x78a: V699 = ISZERO S0
0x78b: V700 = 0x7fa
0x78e: JUMPI 0x7fa V699
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S2, {0x13d, 0x6df}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S2, {0x13d, 0x6df}]

================================

Block 0x78f
[0x78f:0x79d]
---
Predecessors: [0x789]
Successors: [0x79e]
---
0x78f PUSH1 0x0
0x791 DUP1
0x792 SLOAD
0x793 PUSH1 0x2
0x795 SWAP2
0x796 SWAP1
0x797 PUSH1 0xff
0x799 NOT
0x79a AND
0x79b PUSH1 0x1
0x79d DUP4
---
0x78f: V701 = 0x0
0x792: V702 = S[0x0]
0x793: V703 = 0x2
0x797: V704 = 0xff
0x799: V705 = NOT 0xff
0x79a: V706 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V702
0x79b: V707 = 0x1
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]
Stack pops: 0
Stack additions: [0x2, 0x0, V706, 0x1, 0x2]
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}, 0x2, 0x0, V706, 0x1, 0x2]

================================

Block 0x79e
[0x79e:0x7f0]
---
Predecessors: [0x78f, 0x818]
Successors: [0x9ad]
---
0x79e JUMPDEST
0x79f MUL
0x7a0 OR
0x7a1 SWAP1
0x7a2 SSTORE
0x7a3 POP
0x7a4 PUSH32 0xeeba781006f29eb8d1e8d9a2bf6b753e211c4a77dcd5957efc8663a20fdd5c4a
0x7c5 ADDRESS
0x7c6 PUSH1 0x1
0x7c8 PUSH1 0xa0
0x7ca PUSH1 0x2
0x7cc EXP
0x7cd SUB
0x7ce AND
0x7cf BALANCE
0x7d0 PUSH1 0x4
0x7d2 SLOAD
0x7d3 PUSH1 0x40
0x7d5 MLOAD
0x7d6 SWAP2
0x7d7 DUP3
0x7d8 MSTORE
0x7d9 PUSH1 0x20
0x7db DUP3
0x7dc ADD
0x7dd MSTORE
0x7de PUSH1 0x40
0x7e0 SWAP1
0x7e1 DUP2
0x7e2 ADD
0x7e3 SWAP1
0x7e4 MLOAD
0x7e5 DUP1
0x7e6 SWAP2
0x7e7 SUB
0x7e8 SWAP1
0x7e9 LOG1
0x7ea PUSH2 0x7f1
0x7ed PUSH2 0x9ad
0x7f0 JUMP
---
0x79e: JUMPDEST 
0x79f: V708 = MUL 0x2 0x1
0x7a0: V709 = OR 0x2 S2
0x7a2: S[0x0] = V709
0x7a4: V710 = 0xeeba781006f29eb8d1e8d9a2bf6b753e211c4a77dcd5957efc8663a20fdd5c4a
0x7c5: V711 = ADDRESS
0x7c6: V712 = 0x1
0x7c8: V713 = 0xa0
0x7ca: V714 = 0x2
0x7cc: V715 = EXP 0x2 0xa0
0x7cd: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ce: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V711
0x7cf: V718 = BALANCE V717
0x7d0: V719 = 0x4
0x7d2: V720 = S[0x4]
0x7d3: V721 = 0x40
0x7d5: V722 = M[0x40]
0x7d8: M[V722] = V718
0x7d9: V723 = 0x20
0x7dc: V724 = ADD V722 0x20
0x7dd: M[V724] = V720
0x7de: V725 = 0x40
0x7e2: V726 = ADD 0x40 V722
0x7e4: V727 = M[0x40]
0x7e7: V728 = SUB V726 V727
0x7e9: LOG V727 V728 0xeeba781006f29eb8d1e8d9a2bf6b753e211c4a77dcd5957efc8663a20fdd5c4a
0x7ea: V729 = 0x7f1
0x7ed: V730 = 0x9ad
0x7f0: JUMP 0x9ad
---
Entry stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S6, {0x13d, 0x6df}, 0x2, 0x0, S2, 0x1, 0x2]
Stack pops: 5
Stack additions: [0x7f1]
Exit stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S6, {0x13d, 0x6df}, 0x7f1]

================================

Block 0x7f1
[0x7f1:0x7f9]
---
Predecessors: [0xae8]
Successors: [0x13b]
---
0x7f1 JUMPDEST
0x7f2 TIMESTAMP
0x7f3 PUSH1 0x6
0x7f5 SSTORE
0x7f6 PUSH2 0x13b
0x7f9 JUMP
---
0x7f1: JUMPDEST 
0x7f2: V731 = TIMESTAMP
0x7f3: V732 = 0x6
0x7f5: S[0x6] = V731
0x7f6: V733 = 0x13b
0x7f9: JUMP 0x13b
---
Entry stack: [S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, S0]

================================

Block 0x7fa
[0x7fa:0x804]
---
Predecessors: [0x789]
Successors: [0x13b, 0x805]
---
0x7fa JUMPDEST
0x7fb PUSH1 0x5
0x7fd SLOAD
0x7fe TIMESTAMP
0x7ff GT
0x800 ISZERO
0x801 PUSH2 0x13b
0x804 JUMPI
---
0x7fa: JUMPDEST 
0x7fb: V734 = 0x5
0x7fd: V735 = S[0x5]
0x7fe: V736 = TIMESTAMP
0x7ff: V737 = GT V736 V735
0x800: V738 = ISZERO V737
0x801: V739 = 0x13b
0x804: JUMPI 0x13b V738
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]

================================

Block 0x805
[0x805:0x817]
---
Predecessors: [0x7fa]
Successors: [0x818, 0x887]
---
0x805 PUSH1 0x9
0x807 SLOAD
0x808 PUSH1 0x1
0x80a PUSH1 0xa0
0x80c PUSH1 0x2
0x80e EXP
0x80f SUB
0x810 ADDRESS
0x811 AND
0x812 BALANCE
0x813 LT
0x814 PUSH2 0x887
0x817 JUMPI
---
0x805: V740 = 0x9
0x807: V741 = S[0x9]
0x808: V742 = 0x1
0x80a: V743 = 0xa0
0x80c: V744 = 0x2
0x80e: V745 = EXP 0x2 0xa0
0x80f: V746 = SUB 0x10000000000000000000000000000000000000000 0x1
0x810: V747 = ADDRESS
0x811: V748 = AND V747 0xffffffffffffffffffffffffffffffffffffffff
0x812: V749 = BALANCE V748
0x813: V750 = LT V749 V741
0x814: V751 = 0x887
0x817: JUMPI 0x887 V750
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]

================================

Block 0x818
[0x818:0x82a]
---
Predecessors: [0x805]
Successors: [0x79e]
---
0x818 PUSH1 0x0
0x81a DUP1
0x81b SLOAD
0x81c PUSH1 0x2
0x81e SWAP2
0x81f SWAP1
0x820 PUSH1 0xff
0x822 NOT
0x823 AND
0x824 PUSH1 0x1
0x826 DUP4
0x827 PUSH2 0x79e
0x82a JUMP
---
0x818: V752 = 0x0
0x81b: V753 = S[0x0]
0x81c: V754 = 0x2
0x820: V755 = 0xff
0x822: V756 = NOT 0xff
0x823: V757 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V753
0x824: V758 = 0x1
0x827: V759 = 0x79e
0x82a: JUMP 0x79e
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]
Stack pops: 0
Stack additions: [0x2, 0x0, V757, 0x1, 0x2]
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}, 0x2, 0x0, V757, 0x1, 0x2]

================================

Block 0x82b
[0x82b:0x87d]
---
Predecessors: []
Successors: [0x9ad]
---
0x82b JUMPDEST
0x82c MUL
0x82d OR
0x82e SWAP1
0x82f SSTORE
0x830 POP
0x831 PUSH32 0xeeba781006f29eb8d1e8d9a2bf6b753e211c4a77dcd5957efc8663a20fdd5c4a
0x852 ADDRESS
0x853 PUSH1 0x1
0x855 PUSH1 0xa0
0x857 PUSH1 0x2
0x859 EXP
0x85a SUB
0x85b AND
0x85c BALANCE
0x85d PUSH1 0x4
0x85f SLOAD
0x860 PUSH1 0x40
0x862 MLOAD
0x863 SWAP2
0x864 DUP3
0x865 MSTORE
0x866 PUSH1 0x20
0x868 DUP3
0x869 ADD
0x86a MSTORE
0x86b PUSH1 0x40
0x86d SWAP1
0x86e DUP2
0x86f ADD
0x870 SWAP1
0x871 MLOAD
0x872 DUP1
0x873 SWAP2
0x874 SUB
0x875 SWAP1
0x876 LOG1
0x877 PUSH2 0x7f1
0x87a PUSH2 0x9ad
0x87d JUMP
---
0x82b: JUMPDEST 
0x82c: V760 = MUL S0 S1
0x82d: V761 = OR V760 S2
0x82f: S[S3] = V761
0x831: V762 = 0xeeba781006f29eb8d1e8d9a2bf6b753e211c4a77dcd5957efc8663a20fdd5c4a
0x852: V763 = ADDRESS
0x853: V764 = 0x1
0x855: V765 = 0xa0
0x857: V766 = 0x2
0x859: V767 = EXP 0x2 0xa0
0x85a: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85b: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V763
0x85c: V770 = BALANCE V769
0x85d: V771 = 0x4
0x85f: V772 = S[0x4]
0x860: V773 = 0x40
0x862: V774 = M[0x40]
0x865: M[V774] = V770
0x866: V775 = 0x20
0x869: V776 = ADD V774 0x20
0x86a: M[V776] = V772
0x86b: V777 = 0x40
0x86f: V778 = ADD 0x40 V774
0x871: V779 = M[0x40]
0x874: V780 = SUB V778 V779
0x876: LOG V779 V780 0xeeba781006f29eb8d1e8d9a2bf6b753e211c4a77dcd5957efc8663a20fdd5c4a
0x877: V781 = 0x7f1
0x87a: V782 = 0x9ad
0x87d: JUMP 0x9ad
---
Entry stack: []
Stack pops: 5
Stack additions: [0x7f1]
Exit stack: [0x7f1]

================================

Block 0x87e
[0x87e:0x886]
---
Predecessors: []
Successors: [0x13b]
---
0x87e JUMPDEST
0x87f TIMESTAMP
0x880 PUSH1 0x6
0x882 SSTORE
0x883 PUSH2 0x13b
0x886 JUMP
---
0x87e: JUMPDEST 
0x87f: V783 = TIMESTAMP
0x880: V784 = 0x6
0x882: S[0x6] = V783
0x883: V785 = 0x13b
0x886: JUMP 0x13b
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x887
[0x887:0x895]
---
Predecessors: [0x805]
Successors: [0x896]
---
0x887 JUMPDEST
0x888 PUSH1 0x0
0x88a DUP1
0x88b SLOAD
0x88c PUSH1 0x1
0x88e SWAP2
0x88f SWAP1
0x890 PUSH1 0xff
0x892 NOT
0x893 AND
0x894 DUP3
0x895 DUP1
---
0x887: JUMPDEST 
0x888: V786 = 0x0
0x88b: V787 = S[0x0]
0x88c: V788 = 0x1
0x890: V789 = 0xff
0x892: V790 = NOT 0xff
0x893: V791 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V787
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]
Stack pops: 0
Stack additions: [0x1, 0x0, V791, 0x1, 0x1]
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}, 0x1, 0x0, V791, 0x1, 0x1]

================================

Block 0x896
[0x896:0x89f]
---
Predecessors: [0x887]
Successors: [0x8a0]
---
0x896 JUMPDEST
0x897 MUL
0x898 OR
0x899 SWAP1
0x89a SSTORE
0x89b POP
0x89c TIMESTAMP
0x89d PUSH1 0x6
0x89f SSTORE
---
0x896: JUMPDEST 
0x897: V792 = MUL 0x1 0x1
0x898: V793 = OR 0x1 V791
0x89a: S[0x0] = V793
0x89c: V794 = TIMESTAMP
0x89d: V795 = 0x6
0x89f: S[0x6] = V794
---
Entry stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S6, {0x13d, 0x6df}, 0x1, 0x0, V791, 0x1, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S6, {0x13d, 0x6df}]

================================

Block 0x8a0
[0x8a0:0x8a0]
---
Predecessors: [0x896]
Successors: [0x8a1]
---
0x8a0 JUMPDEST
---
0x8a0: JUMPDEST 
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]

================================

Block 0x8a1
[0x8a1:0x8a1]
---
Predecessors: [0x8a0]
Successors: [0x8a2]
---
0x8a1 JUMPDEST
---
0x8a1: JUMPDEST 
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]

================================

Block 0x8a2
[0x8a2:0x8a2]
---
Predecessors: [0x8a1]
Successors: [0x8a3]
---
0x8a2 JUMPDEST
---
0x8a2: JUMPDEST 
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]

================================

Block 0x8a3
[0x8a3:0x8a4]
---
Predecessors: [0x8a2]
Successors: [0x13d, 0x6df]
---
0x8a3 JUMPDEST
0x8a4 JUMP
---
0x8a3: JUMPDEST 
0x8a4: JUMP {0x13d, 0x6df}
---
Entry stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1, {0x13d, 0x6df}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S7, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S1]

================================

Block 0x8a5
[0x8a5:0x8b3]
---
Predecessors: [0x38f, 0x513]
Successors: [0x8b4, 0x8bb]
---
0x8a5 JUMPDEST
0x8a6 PUSH1 0x0
0x8a8 PUSH1 0xb
0x8aa SLOAD
0x8ab PUSH1 0x2
0x8ad SLOAD
0x8ae LT
0x8af ISZERO
0x8b0 PUSH2 0x8bb
0x8b3 JUMPI
---
0x8a5: JUMPDEST 
0x8a6: V796 = 0x0
0x8a8: V797 = 0xb
0x8aa: V798 = S[0xb]
0x8ab: V799 = 0x2
0x8ad: V800 = S[0x2]
0x8ae: V801 = LT V800 V798
0x8af: V802 = ISZERO V801
0x8b0: V803 = 0x8bb
0x8b3: JUMPI 0x8bb V802
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, {0x181, 0x51d}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, {0x181, 0x51d}, 0x0]

================================

Block 0x8b4
[0x8b4:0x8ba]
---
Predecessors: [0x8a5]
Successors: [0x907]
---
0x8b4 POP
0x8b5 PUSH1 0x1e
0x8b7 PUSH2 0x907
0x8ba JUMP
---
0x8b5: V804 = 0x1e
0x8b7: V805 = 0x907
0x8ba: JUMP 0x907
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S2, {0x181, 0x51d}, 0x0]
Stack pops: 1
Stack additions: [0x1e]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S2, {0x181, 0x51d}, 0x1e]

================================

Block 0x8bb
[0x8bb:0x8c9]
---
Predecessors: [0x8a5]
Successors: [0x8ca, 0x8d2]
---
0x8bb JUMPDEST
0x8bc PUSH1 0xb
0x8be SLOAD
0x8bf PUSH1 0x2
0x8c1 SLOAD
0x8c2 LT
0x8c3 ISZERO
0x8c4 DUP1
0x8c5 ISZERO
0x8c6 PUSH2 0x8d2
0x8c9 JUMPI
---
0x8bb: JUMPDEST 
0x8bc: V806 = 0xb
0x8be: V807 = S[0xb]
0x8bf: V808 = 0x2
0x8c1: V809 = S[0x2]
0x8c2: V810 = LT V809 V807
0x8c3: V811 = ISZERO V810
0x8c5: V812 = ISZERO V811
0x8c6: V813 = 0x8d2
0x8c9: JUMPI 0x8d2 V812
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S2, {0x181, 0x51d}, 0x0]
Stack pops: 0
Stack additions: [V811]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S2, {0x181, 0x51d}, 0x0, V811]

================================

Block 0x8ca
[0x8ca:0x8d1]
---
Predecessors: [0x8bb]
Successors: [0x8d2]
---
0x8ca POP
0x8cb PUSH1 0xc
0x8cd SLOAD
0x8ce PUSH1 0x2
0x8d0 SLOAD
0x8d1 LT
---
0x8cb: V814 = 0xc
0x8cd: V815 = S[0xc]
0x8ce: V816 = 0x2
0x8d0: V817 = S[0x2]
0x8d1: V818 = LT V817 V815
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, {0x181, 0x51d}, 0x0, V811]
Stack pops: 1
Stack additions: [V818]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, {0x181, 0x51d}, 0x0, V818]

================================

Block 0x8d2
[0x8d2:0x8d7]
---
Predecessors: [0x8bb, 0x8ca]
Successors: [0x8d8, 0x8df]
---
0x8d2 JUMPDEST
0x8d3 ISZERO
0x8d4 PUSH2 0x8df
0x8d7 JUMPI
---
0x8d2: JUMPDEST 
0x8d3: V819 = ISZERO S0
0x8d4: V820 = 0x8df
0x8d7: JUMPI 0x8df V819
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, {0x181, 0x51d}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, {0x181, 0x51d}, 0x0]

================================

Block 0x8d8
[0x8d8:0x8de]
---
Predecessors: [0x8d2]
Successors: [0x907]
---
0x8d8 POP
0x8d9 PUSH1 0x14
0x8db PUSH2 0x907
0x8de JUMP
---
0x8d9: V821 = 0x14
0x8db: V822 = 0x907
0x8de: JUMP 0x907
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x181, 0x51d}, 0x0]
Stack pops: 1
Stack additions: [0x14]
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x181, 0x51d}, 0x14]

================================

Block 0x8df
[0x8df:0x8ed]
---
Predecessors: [0x8d2]
Successors: [0x8ee, 0x8f6]
---
0x8df JUMPDEST
0x8e0 PUSH1 0xc
0x8e2 SLOAD
0x8e3 PUSH1 0x2
0x8e5 SLOAD
0x8e6 LT
0x8e7 ISZERO
0x8e8 DUP1
0x8e9 ISZERO
0x8ea PUSH2 0x8f6
0x8ed JUMPI
---
0x8df: JUMPDEST 
0x8e0: V823 = 0xc
0x8e2: V824 = S[0xc]
0x8e3: V825 = 0x2
0x8e5: V826 = S[0x2]
0x8e6: V827 = LT V826 V824
0x8e7: V828 = ISZERO V827
0x8e9: V829 = ISZERO V828
0x8ea: V830 = 0x8f6
0x8ed: JUMPI 0x8f6 V829
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x181, 0x51d}, 0x0]
Stack pops: 0
Stack additions: [V828]
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x181, 0x51d}, 0x0, V828]

================================

Block 0x8ee
[0x8ee:0x8f5]
---
Predecessors: [0x8df]
Successors: [0x8f6]
---
0x8ee POP
0x8ef PUSH1 0xd
0x8f1 SLOAD
0x8f2 PUSH1 0x2
0x8f4 SLOAD
0x8f5 LT
---
0x8ef: V831 = 0xd
0x8f1: V832 = S[0xd]
0x8f2: V833 = 0x2
0x8f4: V834 = S[0x2]
0x8f5: V835 = LT V834 V832
---
Entry stack: [V12, S9, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S3, {0x181, 0x51d}, 0x0, V828]
Stack pops: 1
Stack additions: [V835]
Exit stack: [V12, S9, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S3, {0x181, 0x51d}, 0x0, V835]

================================

Block 0x8f6
[0x8f6:0x8fb]
---
Predecessors: [0x8df, 0x8ee]
Successors: [0x8fc, 0x903]
---
0x8f6 JUMPDEST
0x8f7 ISZERO
0x8f8 PUSH2 0x903
0x8fb JUMPI
---
0x8f6: JUMPDEST 
0x8f7: V836 = ISZERO S0
0x8f8: V837 = 0x903
0x8fb: JUMPI 0x903 V836
---
Entry stack: [V12, S9, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S3, {0x181, 0x51d}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S3, {0x181, 0x51d}, 0x0]

================================

Block 0x8fc
[0x8fc:0x902]
---
Predecessors: [0x8f6]
Successors: [0x907]
---
0x8fc POP
0x8fd PUSH1 0xa
0x8ff PUSH2 0x907
0x902 JUMP
---
0x8fd: V838 = 0xa
0x8ff: V839 = 0x907
0x902: JUMP 0x907
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x181, 0x51d}, 0x0]
Stack pops: 1
Stack additions: [0xa]
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x181, 0x51d}, 0xa]

================================

Block 0x903
[0x903:0x906]
---
Predecessors: [0x8f6]
Successors: [0x907]
---
0x903 JUMPDEST
0x904 POP
0x905 PUSH1 0x0
---
0x903: JUMPDEST 
0x905: V840 = 0x0
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x181, 0x51d}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x181, 0x51d}, 0x0]

================================

Block 0x907
[0x907:0x909]
---
Predecessors: [0x8b4, 0x8d8, 0x8fc, 0x903]
Successors: [0x181, 0x51d]
---
0x907 JUMPDEST
0x908 SWAP1
0x909 JUMP
---
0x907: JUMPDEST 
0x909: JUMP {0x181, 0x51d}
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x181, 0x51d}, {0x0, 0xa, 0x14, 0x1e}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1088, 0x0, S2, {0x0, 0xa, 0x14, 0x1e}]

================================

Block 0x90a
[0x90a:0x90f]
---
Predecessors: [0x3b4]
Successors: [0x181]
---
0x90a JUMPDEST
0x90b PUSH1 0xa
0x90d SLOAD
0x90e DUP2
0x90f JUMP
---
0x90a: JUMPDEST 
0x90b: V841 = 0xa
0x90d: V842 = S[0xa]
0x90f: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V842]
Exit stack: [V12, 0x181, V842]

================================

Block 0x910
[0x910:0x916]
---
Predecessors: [0x3d9]
Successors: [0x917]
---
0x910 JUMPDEST
0x911 PUSH1 0x0
0x913 DUP1
0x914 PUSH1 0x1
0x916 DUP1
---
0x910: JUMPDEST 
0x911: V843 = 0x0
0x914: V844 = 0x1
---
Entry stack: [V12, 0x3e1]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x1, 0x1]
Exit stack: [V12, 0x3e1, 0x0, 0x0, 0x1, 0x1]

================================

Block 0x917
[0x917:0x926]
---
Predecessors: [0x910]
Successors: [0x927, 0x928]
---
0x917 JUMPDEST
0x918 PUSH1 0x0
0x91a SLOAD
0x91b PUSH1 0xff
0x91d AND
0x91e PUSH1 0x3
0x920 DUP2
0x921 GT
0x922 ISZERO
0x923 PUSH2 0x928
0x926 JUMPI
---
0x917: JUMPDEST 
0x918: V845 = 0x0
0x91a: V846 = S[0x0]
0x91b: V847 = 0xff
0x91d: V848 = AND 0xff V846
0x91e: V849 = 0x3
0x921: V850 = GT V848 0x3
0x922: V851 = ISZERO V850
0x923: V852 = 0x928
0x926: JUMPI 0x928 V851
---
Entry stack: [V12, 0x3e1, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [V848]
Exit stack: [V12, 0x3e1, 0x0, 0x0, 0x1, 0x1, V848]

================================

Block 0x927
[0x927:0x927]
---
Predecessors: [0x917]
Successors: []
---
0x927 INVALID
---
0x927: INVALID 
---
Entry stack: [V12, 0x3e1, 0x0, 0x0, 0x1, 0x1, V848]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3e1, 0x0, 0x0, 0x1, 0x1, V848]

================================

Block 0x928
[0x928:0x92d]
---
Predecessors: [0x917]
Successors: [0x92e, 0x932]
---
0x928 JUMPDEST
0x929 EQ
0x92a PUSH2 0x932
0x92d JUMPI
---
0x928: JUMPDEST 
0x929: V853 = EQ V848 0x1
0x92a: V854 = 0x932
0x92d: JUMPI 0x932 V853
---
Entry stack: [V12, 0x3e1, 0x0, 0x0, 0x1, 0x1, V848]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x3e1, 0x0, 0x0, 0x1]

================================

Block 0x92e
[0x92e:0x931]
---
Predecessors: [0x928]
Successors: []
---
0x92e PUSH1 0x0
0x930 DUP1
0x931 REVERT
---
0x92e: V855 = 0x0
0x931: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3e1, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3e1, 0x0, 0x0, 0x1]

================================

Block 0x932
[0x932:0x950]
---
Predecessors: [0x928]
Successors: [0x951, 0x955]
---
0x932 JUMPDEST
0x933 PUSH1 0x1
0x935 PUSH1 0xa0
0x937 PUSH1 0x2
0x939 EXP
0x93a SUB
0x93b CALLER
0x93c AND
0x93d PUSH1 0x0
0x93f SWAP1
0x940 DUP2
0x941 MSTORE
0x942 PUSH1 0x1
0x944 PUSH1 0x20
0x946 MSTORE
0x947 PUSH1 0x40
0x949 DUP2
0x94a SHA3
0x94b SLOAD
0x94c GT
0x94d PUSH2 0x955
0x950 JUMPI
---
0x932: JUMPDEST 
0x933: V856 = 0x1
0x935: V857 = 0xa0
0x937: V858 = 0x2
0x939: V859 = EXP 0x2 0xa0
0x93a: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93b: V861 = CALLER
0x93c: V862 = AND V861 0xffffffffffffffffffffffffffffffffffffffff
0x93d: V863 = 0x0
0x941: M[0x0] = V862
0x942: V864 = 0x1
0x944: V865 = 0x20
0x946: M[0x20] = 0x1
0x947: V866 = 0x40
0x94a: V867 = SHA3 0x0 0x40
0x94b: V868 = S[V867]
0x94c: V869 = GT V868 0x0
0x94d: V870 = 0x955
0x950: JUMPI 0x955 V869
---
Entry stack: [V12, 0x3e1, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3e1, 0x0, 0x0, 0x1]

================================

Block 0x951
[0x951:0x954]
---
Predecessors: [0x932]
Successors: []
---
0x951 PUSH1 0x0
0x953 DUP1
0x954 REVERT
---
0x951: V871 = 0x0
0x954: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3e1, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3e1, 0x0, 0x0, 0x1]

================================

Block 0x955
[0x955:0x998]
---
Predecessors: [0x932]
Successors: [0x999, 0x99d]
---
0x955 JUMPDEST
0x956 PUSH1 0x1
0x958 PUSH1 0xa0
0x95a PUSH1 0x2
0x95c EXP
0x95d SUB
0x95e CALLER
0x95f AND
0x960 PUSH1 0x0
0x962 DUP2
0x963 DUP2
0x964 MSTORE
0x965 PUSH1 0x1
0x967 PUSH1 0x20
0x969 MSTORE
0x96a PUSH1 0x40
0x96c DUP1
0x96d DUP3
0x96e SHA3
0x96f DUP1
0x970 SLOAD
0x971 SWAP3
0x972 SWAP1
0x973 SSTORE
0x974 SWAP1
0x975 SWAP4
0x976 POP
0x977 DUP4
0x978 ISZERO
0x979 PUSH2 0x8fc
0x97c MUL
0x97d SWAP1
0x97e DUP5
0x97f SWAP1
0x980 MLOAD
0x981 PUSH1 0x0
0x983 PUSH1 0x40
0x985 MLOAD
0x986 DUP1
0x987 DUP4
0x988 SUB
0x989 DUP2
0x98a DUP6
0x98b DUP9
0x98c DUP9
0x98d CALL
0x98e SWAP4
0x98f POP
0x990 POP
0x991 POP
0x992 POP
0x993 ISZERO
0x994 ISZERO
0x995 PUSH2 0x99d
0x998 JUMPI
---
0x955: JUMPDEST 
0x956: V872 = 0x1
0x958: V873 = 0xa0
0x95a: V874 = 0x2
0x95c: V875 = EXP 0x2 0xa0
0x95d: V876 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95e: V877 = CALLER
0x95f: V878 = AND V877 0xffffffffffffffffffffffffffffffffffffffff
0x960: V879 = 0x0
0x964: M[0x0] = V878
0x965: V880 = 0x1
0x967: V881 = 0x20
0x969: M[0x20] = 0x1
0x96a: V882 = 0x40
0x96e: V883 = SHA3 0x0 0x40
0x970: V884 = S[V883]
0x973: S[V883] = 0x0
0x978: V885 = ISZERO V884
0x979: V886 = 0x8fc
0x97c: V887 = MUL 0x8fc V885
0x980: V888 = M[0x40]
0x981: V889 = 0x0
0x983: V890 = 0x40
0x985: V891 = M[0x40]
0x988: V892 = SUB V888 V891
0x98d: V893 = CALL V887 V878 V884 V891 V892 V891 0x0
0x993: V894 = ISZERO V893
0x994: V895 = ISZERO V894
0x995: V896 = 0x99d
0x998: JUMPI 0x99d V895
---
Entry stack: [V12, 0x3e1, 0x0, 0x0, 0x1]
Stack pops: 2
Stack additions: [V884, S0]
Exit stack: [V12, 0x3e1, 0x0, V884, 0x1]

================================

Block 0x999
[0x999:0x99c]
---
Predecessors: [0x955]
Successors: []
---
0x999 PUSH1 0x0
0x99b DUP1
0x99c REVERT
---
0x999: V897 = 0x0
0x99c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3e1, 0x0, V884, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3e1, 0x0, V884, 0x1]

================================

Block 0x99d
[0x99d:0x99d]
---
Predecessors: [0x955]
Successors: [0x99e]
---
0x99d JUMPDEST
---
0x99d: JUMPDEST 
---
Entry stack: [V12, 0x3e1, 0x0, V884, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3e1, 0x0, V884, 0x1]

================================

Block 0x99e
[0x99e:0x99e]
---
Predecessors: [0x99d]
Successors: [0x99f]
---
0x99e JUMPDEST
---
0x99e: JUMPDEST 
---
Entry stack: [V12, 0x3e1, 0x0, V884, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3e1, 0x0, V884, 0x1]

================================

Block 0x99f
[0x99f:0x9a3]
---
Predecessors: [0x99e]
Successors: [0x3e1]
---
0x99f JUMPDEST
0x9a0 POP
0x9a1 POP
0x9a2 SWAP1
0x9a3 JUMP
---
0x99f: JUMPDEST 
0x9a3: JUMP 0x3e1
---
Entry stack: [V12, 0x3e1, 0x0, V884, 0x1]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, 0x0]

================================

Block 0x9a4
[0x9a4:0x9ac]
---
Predecessors: [0x400]
Successors: [0x408]
---
0x9a4 JUMPDEST
0x9a5 PUSH1 0x0
0x9a7 SLOAD
0x9a8 PUSH1 0xff
0x9aa AND
0x9ab DUP2
0x9ac JUMP
---
0x9a4: JUMPDEST 
0x9a5: V898 = 0x0
0x9a7: V899 = S[0x0]
0x9a8: V900 = 0xff
0x9aa: V901 = AND 0xff V899
0x9ac: JUMP 0x408
---
Entry stack: [V12, 0x408]
Stack pops: 1
Stack additions: [S0, V901]
Exit stack: [V12, 0x408, V901]

================================

Block 0x9ad
[0x9ad:0x9b2]
---
Predecessors: [0x437, 0x79e, 0x82b]
Successors: [0x9b3]
---
0x9ad JUMPDEST
0x9ae PUSH1 0x0
0x9b0 PUSH1 0x2
0x9b2 DUP1
---
0x9ad: JUMPDEST 
0x9ae: V902 = 0x0
0x9b0: V903 = 0x2
---
Entry stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S2, S1, {0x13d, 0x7f1}]
Stack pops: 0
Stack additions: [0x0, 0x2, 0x2]
Exit stack: [V12, S8, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S2, S1, {0x13d, 0x7f1}, 0x0, 0x2, 0x2]

================================

Block 0x9b3
[0x9b3:0x9c2]
---
Predecessors: [0x9ad]
Successors: [0x9c3, 0x9c4]
---
0x9b3 JUMPDEST
0x9b4 PUSH1 0x0
0x9b6 SLOAD
0x9b7 PUSH1 0xff
0x9b9 AND
0x9ba PUSH1 0x3
0x9bc DUP2
0x9bd GT
0x9be ISZERO
0x9bf PUSH2 0x9c4
0x9c2 JUMPI
---
0x9b3: JUMPDEST 
0x9b4: V904 = 0x0
0x9b6: V905 = S[0x0]
0x9b7: V906 = 0xff
0x9b9: V907 = AND 0xff V905
0x9ba: V908 = 0x3
0x9bd: V909 = GT V907 0x3
0x9be: V910 = ISZERO V909
0x9bf: V911 = 0x9c4
0x9c2: JUMPI 0x9c4 V910
---
Entry stack: [V12, S11, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S5, S4, {0x13d, 0x7f1}, 0x0, 0x2, 0x2]
Stack pops: 0
Stack additions: [V907]
Exit stack: [V12, S11, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S5, S4, {0x13d, 0x7f1}, 0x0, 0x2, 0x2, V907]

================================

Block 0x9c3
[0x9c3:0x9c3]
---
Predecessors: [0x9b3]
Successors: []
---
0x9c3 INVALID
---
0x9c3: INVALID 
---
Entry stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S6, S5, {0x13d, 0x7f1}, 0x0, 0x2, 0x2, V907]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S6, S5, {0x13d, 0x7f1}, 0x0, 0x2, 0x2, V907]

================================

Block 0x9c4
[0x9c4:0x9c9]
---
Predecessors: [0x9b3]
Successors: [0x9ca, 0x9ce]
---
0x9c4 JUMPDEST
0x9c5 EQ
0x9c6 PUSH2 0x9ce
0x9c9 JUMPI
---
0x9c4: JUMPDEST 
0x9c5: V912 = EQ V907 0x2
0x9c6: V913 = 0x9ce
0x9c9: JUMPI 0x9ce V912
---
Entry stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S6, S5, {0x13d, 0x7f1}, 0x0, 0x2, 0x2, V907]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S6, S5, {0x13d, 0x7f1}, 0x0, 0x2]

================================

Block 0x9ca
[0x9ca:0x9cd]
---
Predecessors: [0x9c4]
Successors: []
---
0x9ca PUSH1 0x0
0x9cc DUP1
0x9cd REVERT
---
0x9ca: V914 = 0x0
0x9cd: REVERT 0x0 0x0
---
Entry stack: [V12, S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, 0x0, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, 0x0, 0x2]

================================

Block 0x9ce
[0x9ce:0xa02]
---
Predecessors: [0x9c4]
Successors: [0xa03, 0xa07]
---
0x9ce JUMPDEST
0x9cf PUSH1 0x11
0x9d1 SLOAD
0x9d2 PUSH1 0x1
0x9d4 PUSH1 0xa0
0x9d6 PUSH1 0x2
0x9d8 EXP
0x9d9 SUB
0x9da SWAP1
0x9db DUP2
0x9dc AND
0x9dd SWAP1
0x9de ADDRESS
0x9df AND
0x9e0 BALANCE
0x9e1 DUP1
0x9e2 ISZERO
0x9e3 PUSH2 0x8fc
0x9e6 MUL
0x9e7 SWAP1
0x9e8 PUSH1 0x40
0x9ea MLOAD
0x9eb PUSH1 0x0
0x9ed PUSH1 0x40
0x9ef MLOAD
0x9f0 DUP1
0x9f1 DUP4
0x9f2 SUB
0x9f3 DUP2
0x9f4 DUP6
0x9f5 DUP9
0x9f6 DUP9
0x9f7 CALL
0x9f8 SWAP4
0x9f9 POP
0x9fa POP
0x9fb POP
0x9fc POP
0x9fd ISZERO
0x9fe ISZERO
0x9ff PUSH2 0xa07
0xa02 JUMPI
---
0x9ce: JUMPDEST 
0x9cf: V915 = 0x11
0x9d1: V916 = S[0x11]
0x9d2: V917 = 0x1
0x9d4: V918 = 0xa0
0x9d6: V919 = 0x2
0x9d8: V920 = EXP 0x2 0xa0
0x9d9: V921 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9dc: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff V916
0x9de: V923 = ADDRESS
0x9df: V924 = AND V923 0xffffffffffffffffffffffffffffffffffffffff
0x9e0: V925 = BALANCE V924
0x9e2: V926 = ISZERO V925
0x9e3: V927 = 0x8fc
0x9e6: V928 = MUL 0x8fc V926
0x9e8: V929 = 0x40
0x9ea: V930 = M[0x40]
0x9eb: V931 = 0x0
0x9ed: V932 = 0x40
0x9ef: V933 = M[0x40]
0x9f2: V934 = SUB V930 V933
0x9f7: V935 = CALL V928 V922 V925 V933 V934 V933 0x0
0x9fd: V936 = ISZERO V935
0x9fe: V937 = ISZERO V936
0x9ff: V938 = 0xa07
0xa02: JUMPI 0xa07 V937
---
Entry stack: [V12, S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, 0x0, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, 0x0, 0x2]

================================

Block 0xa03
[0xa03:0xa06]
---
Predecessors: [0x9ce]
Successors: []
---
0xa03 PUSH1 0x0
0xa05 DUP1
0xa06 REVERT
---
0xa03: V939 = 0x0
0xa06: REVERT 0x0 0x0
---
Entry stack: [V12, S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, 0x0, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, 0x0, 0x2]

================================

Block 0xa07
[0xa07:0xa14]
---
Predecessors: [0x9ce]
Successors: [0xbd5]
---
0xa07 JUMPDEST
0xa08 PUSH2 0xa15
0xa0b PUSH1 0x3
0xa0d SLOAD
0xa0e PUSH1 0x4
0xa10 SLOAD
0xa11 PUSH2 0xbd5
0xa14 JUMP
---
0xa07: JUMPDEST 
0xa08: V940 = 0xa15
0xa0b: V941 = 0x3
0xa0d: V942 = S[0x3]
0xa0e: V943 = 0x4
0xa10: V944 = S[0x4]
0xa11: V945 = 0xbd5
0xa14: JUMP 0xbd5
---
Entry stack: [V12, S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, 0x0, 0x2]
Stack pops: 0
Stack additions: [0xa15, V942, V944]
Exit stack: [V12, S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, 0x0, 0x2, 0xa15, V942, V944]

================================

Block 0xa15
[0xa15:0xa70]
---
Predecessors: [0xbe6]
Successors: [0xa71, 0xa75]
---
0xa15 JUMPDEST
0xa16 PUSH1 0xf
0xa18 SLOAD
0xa19 PUSH1 0x10
0xa1b SLOAD
0xa1c SWAP2
0xa1d SWAP4
0xa1e POP
0xa1f PUSH1 0x1
0xa21 PUSH1 0xa0
0xa23 PUSH1 0x2
0xa25 EXP
0xa26 SUB
0xa27 SWAP1
0xa28 DUP2
0xa29 AND
0xa2a SWAP2
0xa2b PUSH4 0xa9059cbb
0xa30 SWAP2
0xa31 AND
0xa32 DUP5
0xa33 PUSH1 0x40
0xa35 MLOAD
0xa36 PUSH1 0xe0
0xa38 PUSH1 0x2
0xa3a EXP
0xa3b PUSH4 0xffffffff
0xa40 DUP6
0xa41 AND
0xa42 MUL
0xa43 DUP2
0xa44 MSTORE
0xa45 PUSH1 0x1
0xa47 PUSH1 0xa0
0xa49 PUSH1 0x2
0xa4b EXP
0xa4c SUB
0xa4d SWAP1
0xa4e SWAP3
0xa4f AND
0xa50 PUSH1 0x4
0xa52 DUP4
0xa53 ADD
0xa54 MSTORE
0xa55 PUSH1 0x24
0xa57 DUP3
0xa58 ADD
0xa59 MSTORE
0xa5a PUSH1 0x44
0xa5c ADD
0xa5d PUSH1 0x0
0xa5f PUSH1 0x40
0xa61 MLOAD
0xa62 DUP1
0xa63 DUP4
0xa64 SUB
0xa65 DUP2
0xa66 PUSH1 0x0
0xa68 DUP8
0xa69 DUP1
0xa6a EXTCODESIZE
0xa6b ISZERO
0xa6c ISZERO
0xa6d PUSH2 0xa75
0xa70 JUMPI
---
0xa15: JUMPDEST 
0xa16: V946 = 0xf
0xa18: V947 = S[0xf]
0xa19: V948 = 0x10
0xa1b: V949 = S[0x10]
0xa1f: V950 = 0x1
0xa21: V951 = 0xa0
0xa23: V952 = 0x2
0xa25: V953 = EXP 0x2 0xa0
0xa26: V954 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa29: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0xa2b: V956 = 0xa9059cbb
0xa31: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff V949
0xa33: V958 = 0x40
0xa35: V959 = M[0x40]
0xa36: V960 = 0xe0
0xa38: V961 = 0x2
0xa3a: V962 = EXP 0x2 0xe0
0xa3b: V963 = 0xffffffff
0xa41: V964 = AND 0xa9059cbb 0xffffffff
0xa42: V965 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa44: M[V959] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa45: V966 = 0x1
0xa47: V967 = 0xa0
0xa49: V968 = 0x2
0xa4b: V969 = EXP 0x2 0xa0
0xa4c: V970 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4f: V971 = AND V957 0xffffffffffffffffffffffffffffffffffffffff
0xa50: V972 = 0x4
0xa53: V973 = ADD V959 0x4
0xa54: M[V973] = V971
0xa55: V974 = 0x24
0xa58: V975 = ADD V959 0x24
0xa59: M[V975] = S0
0xa5a: V976 = 0x44
0xa5c: V977 = ADD 0x44 V959
0xa5d: V978 = 0x0
0xa5f: V979 = 0x40
0xa61: V980 = M[0x40]
0xa64: V981 = SUB V977 V980
0xa66: V982 = 0x0
0xa6a: V983 = EXTCODESIZE V955
0xa6b: V984 = ISZERO V983
0xa6c: V985 = ISZERO V984
0xa6d: V986 = 0xa75
0xa70: JUMPI 0xa75 V985
---
Entry stack: [V12, S11, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S5, S4, {0x13d, 0x7f1}, 0x0, 0x2, S0]
Stack pops: 3
Stack additions: [S0, S1, V955, 0xa9059cbb, V977, 0x0, V980, V981, V980, 0x0, V955]
Exit stack: [V12, S11, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S5, S4, {0x13d, 0x7f1}, S0, 0x2, V955, 0xa9059cbb, V977, 0x0, V980, V981, V980, 0x0, V955]

================================

Block 0xa71
[0xa71:0xa74]
---
Predecessors: [0xa15]
Successors: []
---
0xa71 PUSH1 0x0
0xa73 DUP1
0xa74 REVERT
---
0xa71: V987 = 0x0
0xa74: REVERT 0x0 0x0
---
Entry stack: [S19, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S13, S12, {0x13d, 0x7f1}, S10, 0x2, V955, 0xa9059cbb, V977, 0x0, V980, V981, V980, 0x0, V955]
Stack pops: 0
Stack additions: []
Exit stack: [S19, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S13, S12, {0x13d, 0x7f1}, S10, 0x2, V955, 0xa9059cbb, V977, 0x0, V980, V981, V980, 0x0, V955]

================================

Block 0xa75
[0xa75:0xa81]
---
Predecessors: [0xa15]
Successors: [0xa82, 0xa86]
---
0xa75 JUMPDEST
0xa76 PUSH2 0x2c6
0xa79 GAS
0xa7a SUB
0xa7b CALL
0xa7c ISZERO
0xa7d ISZERO
0xa7e PUSH2 0xa86
0xa81 JUMPI
---
0xa75: JUMPDEST 
0xa76: V988 = 0x2c6
0xa79: V989 = GAS
0xa7a: V990 = SUB V989 0x2c6
0xa7b: V991 = CALL V990 V955 0x0 V980 V981 V980 0x0
0xa7c: V992 = ISZERO V991
0xa7d: V993 = ISZERO V992
0xa7e: V994 = 0xa86
0xa81: JUMPI 0xa86 V993
---
Entry stack: [V12, S19, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S13, S12, {0x13d, 0x7f1}, S10, 0x2, V955, 0xa9059cbb, V977, 0x0, V980, V981, V980, 0x0, V955]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S19, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S13, S12, {0x13d, 0x7f1}, S10, 0x2, V955, 0xa9059cbb, V977]

================================

Block 0xa82
[0xa82:0xa85]
---
Predecessors: [0xa75]
Successors: []
---
0xa82 PUSH1 0x0
0xa84 DUP1
0xa85 REVERT
---
0xa82: V995 = 0x0
0xa85: REVERT 0x0 0x0
---
Entry stack: [S13, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S7, S6, {0x13d, 0x7f1}, S4, 0x2, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S13, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S7, S6, {0x13d, 0x7f1}, S4, 0x2, S2, 0xa9059cbb, S0]

================================

Block 0xa86
[0xa86:0xa97]
---
Predecessors: [0xa75]
Successors: [0xa98]
---
0xa86 JUMPDEST
0xa87 POP
0xa88 POP
0xa89 PUSH1 0x0
0xa8b DUP1
0xa8c SLOAD
0xa8d PUSH1 0x3
0xa8f SWAP3
0xa90 POP
0xa91 PUSH1 0xff
0xa93 NOT
0xa94 AND
0xa95 PUSH1 0x1
0xa97 DUP4
---
0xa86: JUMPDEST 
0xa89: V996 = 0x0
0xa8c: V997 = S[0x0]
0xa8d: V998 = 0x3
0xa91: V999 = 0xff
0xa93: V1000 = NOT 0xff
0xa94: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V997
0xa95: V1002 = 0x1
---
Entry stack: [S13, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S7, S6, {0x13d, 0x7f1}, S4, 0x2, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: [0x3, 0x0, V1001, 0x1, 0x3]
Exit stack: [S13, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S7, S6, {0x13d, 0x7f1}, S4, 0x2, 0x3, 0x0, V1001, 0x1, 0x3]

================================

Block 0xa98
[0xa98:0xae6]
---
Predecessors: [0xa86]
Successors: [0xae7]
---
0xa98 JUMPDEST
0xa99 MUL
0xa9a OR
0xa9b SWAP1
0xa9c SSTORE
0xa9d POP
0xa9e PUSH1 0x11
0xaa0 SLOAD
0xaa1 PUSH32 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0xac2 SWAP1
0xac3 PUSH1 0x1
0xac5 PUSH1 0xa0
0xac7 PUSH1 0x2
0xac9 EXP
0xaca SUB
0xacb AND
0xacc PUSH1 0x40
0xace MLOAD
0xacf PUSH1 0x1
0xad1 PUSH1 0xa0
0xad3 PUSH1 0x2
0xad5 EXP
0xad6 SUB
0xad7 SWAP1
0xad8 SWAP2
0xad9 AND
0xada DUP2
0xadb MSTORE
0xadc PUSH1 0x20
0xade ADD
0xadf PUSH1 0x40
0xae1 MLOAD
0xae2 DUP1
0xae3 SWAP2
0xae4 SUB
0xae5 SWAP1
0xae6 LOG1
---
0xa98: JUMPDEST 
0xa99: V1003 = MUL 0x3 0x1
0xa9a: V1004 = OR 0x3 V1001
0xa9c: S[0x0] = V1004
0xa9e: V1005 = 0x11
0xaa0: V1006 = S[0x11]
0xaa1: V1007 = 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0xac3: V1008 = 0x1
0xac5: V1009 = 0xa0
0xac7: V1010 = 0x2
0xac9: V1011 = EXP 0x2 0xa0
0xaca: V1012 = SUB 0x10000000000000000000000000000000000000000 0x1
0xacb: V1013 = AND 0xffffffffffffffffffffffffffffffffffffffff V1006
0xacc: V1014 = 0x40
0xace: V1015 = M[0x40]
0xacf: V1016 = 0x1
0xad1: V1017 = 0xa0
0xad3: V1018 = 0x2
0xad5: V1019 = EXP 0x2 0xa0
0xad6: V1020 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad9: V1021 = AND V1013 0xffffffffffffffffffffffffffffffffffffffff
0xadb: M[V1015] = V1021
0xadc: V1022 = 0x20
0xade: V1023 = ADD 0x20 V1015
0xadf: V1024 = 0x40
0xae1: V1025 = M[0x40]
0xae4: V1026 = SUB V1023 V1025
0xae6: LOG V1025 V1026 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
---
Entry stack: [S15, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S9, S8, {0x13d, 0x7f1}, S6, 0x2, 0x3, 0x0, V1001, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [S15, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S9, S8, {0x13d, 0x7f1}, S6, 0x2]

================================

Block 0xae7
[0xae7:0xae7]
---
Predecessors: [0xa98]
Successors: [0xae8]
---
0xae7 JUMPDEST
---
0xae7: JUMPDEST 
---
Entry stack: [S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, S1, 0x2]

================================

Block 0xae8
[0xae8:0xaeb]
---
Predecessors: [0xae7]
Successors: [0x13d, 0x7f1]
---
0xae8 JUMPDEST
0xae9 POP
0xaea POP
0xaeb JUMP
---
0xae8: JUMPDEST 
0xaeb: JUMP {0x13d, 0x7f1}
---
Entry stack: [S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3, {0x13d, 0x7f1}, S1, 0x2]
Stack pops: 3
Stack additions: []
Exit stack: [S10, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S4, S3]

================================

Block 0xaec
[0xaec:0xaf1]
---
Predecessors: [0x44c]
Successors: [0x181]
---
0xaec JUMPDEST
0xaed PUSH1 0x2
0xaef SLOAD
0xaf0 DUP2
0xaf1 JUMP
---
0xaec: JUMPDEST 
0xaed: V1027 = 0x2
0xaef: V1028 = S[0x2]
0xaf1: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V1028]
Exit stack: [V12, 0x181, V1028]

================================

Block 0xaf2
[0xaf2:0xaf7]
---
Predecessors: [0x48b]
Successors: [0x181]
---
0xaf2 JUMPDEST
0xaf3 PUSH1 0xd
0xaf5 SLOAD
0xaf6 DUP2
0xaf7 JUMP
---
0xaf2: JUMPDEST 
0xaf3: V1029 = 0xd
0xaf5: V1030 = S[0xd]
0xaf7: JUMP 0x181
---
Entry stack: [V12, 0x181]
Stack pops: 1
Stack additions: [S0, V1030]
Exit stack: [V12, 0x181, V1030]

================================

Block 0xaf8
[0xaf8:0xb0e]
---
Predecessors: [0x4b0]
Successors: [0xb0f, 0xb13]
---
0xaf8 JUMPDEST
0xaf9 PUSH1 0x10
0xafb SLOAD
0xafc CALLER
0xafd PUSH1 0x1
0xaff PUSH1 0xa0
0xb01 PUSH1 0x2
0xb03 EXP
0xb04 SUB
0xb05 SWAP1
0xb06 DUP2
0xb07 AND
0xb08 SWAP2
0xb09 AND
0xb0a EQ
0xb0b PUSH2 0xb13
0xb0e JUMPI
---
0xaf8: JUMPDEST 
0xaf9: V1031 = 0x10
0xafb: V1032 = S[0x10]
0xafc: V1033 = CALLER
0xafd: V1034 = 0x1
0xaff: V1035 = 0xa0
0xb01: V1036 = 0x2
0xb03: V1037 = EXP 0x2 0xa0
0xb04: V1038 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb07: V1039 = AND 0xffffffffffffffffffffffffffffffffffffffff V1033
0xb09: V1040 = AND V1032 0xffffffffffffffffffffffffffffffffffffffff
0xb0a: V1041 = EQ V1040 V1039
0xb0b: V1042 = 0xb13
0xb0e: JUMPI 0xb13 V1041
---
Entry stack: [V12, 0x13d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d]

================================

Block 0xb0f
[0xb0f:0xb12]
---
Predecessors: [0xaf8]
Successors: []
---
0xb0f PUSH1 0x0
0xb11 DUP1
0xb12 REVERT
---
0xb0f: V1043 = 0x0
0xb12: REVERT 0x0 0x0
---
Entry stack: [V12, 0x13d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d]

================================

Block 0xb13
[0xb13:0xb15]
---
Predecessors: [0xaf8]
Successors: [0xb16]
---
0xb13 JUMPDEST
0xb14 PUSH1 0x1
---
0xb13: JUMPDEST 
0xb14: V1044 = 0x1
---
Entry stack: [V12, 0x13d]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x13d, 0x1]

================================

Block 0xb16
[0xb16:0xb25]
---
Predecessors: [0xb13]
Successors: [0xb26, 0xb27]
---
0xb16 JUMPDEST
0xb17 PUSH1 0x0
0xb19 SLOAD
0xb1a PUSH1 0xff
0xb1c AND
0xb1d PUSH1 0x3
0xb1f DUP2
0xb20 GT
0xb21 ISZERO
0xb22 PUSH2 0xb27
0xb25 JUMPI
---
0xb16: JUMPDEST 
0xb17: V1045 = 0x0
0xb19: V1046 = S[0x0]
0xb1a: V1047 = 0xff
0xb1c: V1048 = AND 0xff V1046
0xb1d: V1049 = 0x3
0xb20: V1050 = GT V1048 0x3
0xb21: V1051 = ISZERO V1050
0xb22: V1052 = 0xb27
0xb25: JUMPI 0xb27 V1051
---
Entry stack: [V12, 0x13d, 0x1]
Stack pops: 0
Stack additions: [V1048]
Exit stack: [V12, 0x13d, 0x1, V1048]

================================

Block 0xb26
[0xb26:0xb26]
---
Predecessors: [0xb16]
Successors: []
---
0xb26 INVALID
---
0xb26: INVALID 
---
Entry stack: [V12, 0x13d, 0x1, V1048]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d, 0x1, V1048]

================================

Block 0xb27
[0xb27:0xb2d]
---
Predecessors: [0xb16]
Successors: [0xb2e, 0xb44]
---
0xb27 JUMPDEST
0xb28 EQ
0xb29 DUP1
0xb2a PUSH2 0xb44
0xb2d JUMPI
---
0xb27: JUMPDEST 
0xb28: V1053 = EQ V1048 0x1
0xb2a: V1054 = 0xb44
0xb2d: JUMPI 0xb44 V1053
---
Entry stack: [V12, 0x13d, 0x1, V1048]
Stack pops: 2
Stack additions: [V1053]
Exit stack: [V12, 0x13d, V1053]

================================

Block 0xb2e
[0xb2e:0xb30]
---
Predecessors: [0xb27]
Successors: [0xb31]
---
0xb2e POP
0xb2f PUSH1 0x2
---
0xb2f: V1055 = 0x2
---
Entry stack: [V12, 0x13d, V1053]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V12, 0x13d, 0x2]

================================

Block 0xb31
[0xb31:0xb40]
---
Predecessors: [0xb2e]
Successors: [0xb41, 0xb42]
---
0xb31 JUMPDEST
0xb32 PUSH1 0x0
0xb34 SLOAD
0xb35 PUSH1 0xff
0xb37 AND
0xb38 PUSH1 0x3
0xb3a DUP2
0xb3b GT
0xb3c ISZERO
0xb3d PUSH2 0xb42
0xb40 JUMPI
---
0xb31: JUMPDEST 
0xb32: V1056 = 0x0
0xb34: V1057 = S[0x0]
0xb35: V1058 = 0xff
0xb37: V1059 = AND 0xff V1057
0xb38: V1060 = 0x3
0xb3b: V1061 = GT V1059 0x3
0xb3c: V1062 = ISZERO V1061
0xb3d: V1063 = 0xb42
0xb40: JUMPI 0xb42 V1062
---
Entry stack: [V12, 0x13d, 0x2]
Stack pops: 0
Stack additions: [V1059]
Exit stack: [V12, 0x13d, 0x2, V1059]

================================

Block 0xb41
[0xb41:0xb41]
---
Predecessors: [0xb31]
Successors: []
---
0xb41 INVALID
---
0xb41: INVALID 
---
Entry stack: [V12, 0x13d, 0x2, V1059]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d, 0x2, V1059]

================================

Block 0xb42
[0xb42:0xb43]
---
Predecessors: [0xb31]
Successors: [0xb44]
---
0xb42 JUMPDEST
0xb43 EQ
---
0xb42: JUMPDEST 
0xb43: V1064 = EQ V1059 0x2
---
Entry stack: [V12, 0x13d, 0x2, V1059]
Stack pops: 2
Stack additions: [V1064]
Exit stack: [V12, 0x13d, V1064]

================================

Block 0xb44
[0xb44:0xb4a]
---
Predecessors: [0xb27, 0xb42]
Successors: [0xb4b, 0xb55]
---
0xb44 JUMPDEST
0xb45 DUP1
0xb46 ISZERO
0xb47 PUSH2 0xb55
0xb4a JUMPI
---
0xb44: JUMPDEST 
0xb46: V1065 = ISZERO S0
0xb47: V1066 = 0xb55
0xb4a: JUMPI 0xb55 V1065
---
Entry stack: [V12, 0x13d, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x13d, S0]

================================

Block 0xb4b
[0xb4b:0xb54]
---
Predecessors: [0xb44]
Successors: [0xb55]
---
0xb4b POP
0xb4c TIMESTAMP
0xb4d PUSH1 0x6
0xb4f SLOAD
0xb50 PUSH2 0xe10
0xb53 ADD
0xb54 LT
---
0xb4c: V1067 = TIMESTAMP
0xb4d: V1068 = 0x6
0xb4f: V1069 = S[0x6]
0xb50: V1070 = 0xe10
0xb53: V1071 = ADD 0xe10 V1069
0xb54: V1072 = LT V1071 V1067
---
Entry stack: [V12, 0x13d, S0]
Stack pops: 1
Stack additions: [V1072]
Exit stack: [V12, 0x13d, V1072]

================================

Block 0xb55
[0xb55:0xb5b]
---
Predecessors: [0xb44, 0xb4b]
Successors: [0xb5c, 0xb60]
---
0xb55 JUMPDEST
0xb56 ISZERO
0xb57 ISZERO
0xb58 PUSH2 0xb60
0xb5b JUMPI
---
0xb55: JUMPDEST 
0xb56: V1073 = ISZERO S0
0xb57: V1074 = ISZERO V1073
0xb58: V1075 = 0xb60
0xb5b: JUMPI 0xb60 V1074
---
Entry stack: [V12, 0x13d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x13d]

================================

Block 0xb5c
[0xb5c:0xb5f]
---
Predecessors: [0xb55]
Successors: []
---
0xb5c PUSH1 0x0
0xb5e DUP1
0xb5f REVERT
---
0xb5c: V1076 = 0x0
0xb5f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x13d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d]

================================

Block 0xb60
[0xb60:0xb6b]
---
Predecessors: [0xb55]
Successors: []
---
0xb60 JUMPDEST
0xb61 CALLER
0xb62 PUSH1 0x1
0xb64 PUSH1 0xa0
0xb66 PUSH1 0x2
0xb68 EXP
0xb69 SUB
0xb6a AND
0xb6b SELFDESTRUCT
---
0xb60: JUMPDEST 
0xb61: V1077 = CALLER
0xb62: V1078 = 0x1
0xb64: V1079 = 0xa0
0xb66: V1080 = 0x2
0xb68: V1081 = EXP 0x2 0xa0
0xb69: V1082 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6a: V1083 = AND 0xffffffffffffffffffffffffffffffffffffffff V1077
0xb6b: SELFDESTRUCT V1083
---
Entry stack: [V12, 0x13d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d]

================================

Block 0xb6c
[0xb6c:0xb6c]
---
Predecessors: []
Successors: [0xb6d]
---
0xb6c JUMPDEST
---
0xb6c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6d
[0xb6d:0xb6d]
---
Predecessors: [0xb6c]
Successors: [0xb6e]
---
0xb6d JUMPDEST
---
0xb6d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6e
[0xb6e:0xb6f]
---
Predecessors: [0xb6d]
Successors: []
Has unresolved jump.
---
0xb6e JUMPDEST
0xb6f JUMP
---
0xb6e: JUMPDEST 
0xb6f: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb70
[0xb70:0xb7c]
---
Predecessors: [0x504, 0x530, 0x53c]
Successors: [0xb7d, 0xb7e]
---
0xb70 JUMPDEST
0xb71 PUSH1 0x0
0xb73 DUP1
0xb74 DUP3
0xb75 DUP5
0xb76 DUP2
0xb77 ISZERO
0xb78 ISZERO
0xb79 PUSH2 0xb7e
0xb7c JUMPI
---
0xb70: JUMPDEST 
0xb71: V1084 = 0x0
0xb77: V1085 = ISZERO S0
0xb78: V1086 = ISZERO V1085
0xb79: V1087 = 0xb7e
0xb7c: JUMPI 0xb7e V1086
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0xb7d
[0xb7d:0xb7d]
---
Predecessors: [0xb70]
Successors: []
---
0xb7d INVALID
---
0xb7d: INVALID 
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0xb7e
[0xb7e:0xb84]
---
Predecessors: [0xb70]
Successors: [0xb85]
---
0xb7e JUMPDEST
0xb7f DIV
0xb80 SWAP1
0xb81 POP
0xb82 DUP1
0xb83 SWAP2
0xb84 POP
---
0xb7e: JUMPDEST 
0xb7f: V1088 = DIV S0 S1
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V1088, V1088]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1088, V1088]

================================

Block 0xb85
[0xb85:0xb8b]
---
Predecessors: [0xb7e]
Successors: [0x513, 0x537, 0x54c]
---
0xb85 JUMPDEST
0xb86 POP
0xb87 SWAP3
0xb88 SWAP2
0xb89 POP
0xb8a POP
0xb8b JUMP
---
0xb85: JUMPDEST 
0xb8b: JUMP {0x513, 0x537, 0x54c}
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S5, {0x513, 0x537, 0x54c}, S3, S2, V1088, V1088]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S5, V1088]

================================

Block 0xb8c
[0xb8c:0xb98]
---
Predecessors: [0x51d]
Successors: [0xb99, 0xba8]
---
0xb8c JUMPDEST
0xb8d PUSH1 0x0
0xb8f DUP3
0xb90 DUP3
0xb91 MUL
0xb92 DUP4
0xb93 ISZERO
0xb94 DUP1
0xb95 PUSH2 0xba8
0xb98 JUMPI
---
0xb8c: JUMPDEST 
0xb8d: V1089 = 0x0
0xb91: V1090 = MUL {0x0, 0xa, 0x14, 0x1e} V1088
0xb93: V1091 = ISZERO V1088
0xb95: V1092 = 0xba8
0xb98: JUMPI 0xba8 V1091
---
Entry stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S6, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1090, V1091]
Exit stack: [V12, S12, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S6, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090, V1091]

================================

Block 0xb99
[0xb99:0xba3]
---
Predecessors: [0xb8c]
Successors: [0xba4, 0xba5]
---
0xb99 POP
0xb9a DUP3
0xb9b DUP5
0xb9c DUP3
0xb9d DUP2
0xb9e ISZERO
0xb9f ISZERO
0xba0 PUSH2 0xba5
0xba3 JUMPI
---
0xb9e: V1093 = ISZERO V1088
0xb9f: V1094 = ISZERO V1093
0xba0: V1095 = 0xba5
0xba3: JUMPI 0xba5 V1094
---
Entry stack: [V12, S15, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S9, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090, V1091]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, S15, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S9, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090, {0x0, 0xa, 0x14, 0x1e}, V1088, V1090]

================================

Block 0xba4
[0xba4:0xba4]
---
Predecessors: [0xb99]
Successors: []
---
0xba4 INVALID
---
0xba4: INVALID 
---
Entry stack: [V12, S17, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S11, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090, {0x0, 0xa, 0x14, 0x1e}, V1088, V1090]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S11, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090, {0x0, 0xa, 0x14, 0x1e}, V1088, V1090]

================================

Block 0xba5
[0xba5:0xba7]
---
Predecessors: [0xb99]
Successors: [0xba8]
---
0xba5 JUMPDEST
0xba6 DIV
0xba7 EQ
---
0xba5: JUMPDEST 
0xba6: V1096 = DIV V1090 V1088
0xba7: V1097 = EQ V1096 {0x0, 0xa, 0x14, 0x1e}
---
Entry stack: [V12, S17, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S11, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090, {0x0, 0xa, 0x14, 0x1e}, V1088, V1090]
Stack pops: 3
Stack additions: [V1097]
Exit stack: [V12, S17, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S11, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090, V1097]

================================

Block 0xba8
[0xba8:0xbae]
---
Predecessors: [0xb8c, 0xba5]
Successors: [0xbaf, 0xbb0]
---
0xba8 JUMPDEST
0xba9 ISZERO
0xbaa ISZERO
0xbab PUSH2 0xbb0
0xbae JUMPI
---
0xba8: JUMPDEST 
0xba9: V1098 = ISZERO S0
0xbaa: V1099 = ISZERO V1098
0xbab: V1100 = 0xbb0
0xbae: JUMPI 0xbb0 V1099
---
Entry stack: [V12, S15, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S9, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S15, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S9, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090]

================================

Block 0xbaf
[0xbaf:0xbaf]
---
Predecessors: [0xba8]
Successors: []
---
0xbaf INVALID
---
0xbaf: INVALID 
---
Entry stack: [V12, S14, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S8, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, {0x139, 0x181}, 0x0, V442, V1088, {0x0, 0xa, 0x14, 0x1e}, S8, 0x53c, V1088, 0x537, 0x530, V1088, {0x0, 0xa, 0x14, 0x1e}, 0x0, V1090]

================================

Block 0xbb0
[0xbb0:0xbb3]
---
Predecessors: [0xba8, 0xbbb]
Successors: [0xbb4]
---
0xbb0 JUMPDEST
0xbb1 DUP1
0xbb2 SWAP2
0xbb3 POP
---
0xbb0: JUMPDEST 
---
Entry stack: [V12, S14, {0x139, 0x181}, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x530, 0x53c}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S14, {0x139, 0x181}, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x530, 0x53c}, S3, S2, S0, S0]

================================

Block 0xbb4
[0xbb4:0xbba]
---
Predecessors: [0xbb0]
Successors: [0x530, 0x53c]
---
0xbb4 JUMPDEST
0xbb5 POP
0xbb6 SWAP3
0xbb7 SWAP2
0xbb8 POP
0xbb9 POP
0xbba JUMP
---
0xbb4: JUMPDEST 
0xbba: JUMP {0x0, 0xa, 0x14, 0x1e, 0x530, 0x53c}
---
Entry stack: [V12, S14, {0x139, 0x181}, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x530, 0x53c}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S14, {0x139, 0x181}, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xbbb
[0xbbb:0xbc8]
---
Predecessors: [0x537]
Successors: [0xbb0, 0xbc9]
---
0xbbb JUMPDEST
0xbbc PUSH1 0x0
0xbbe DUP3
0xbbf DUP3
0xbc0 ADD
0xbc1 DUP4
0xbc2 DUP2
0xbc3 LT
0xbc4 ISZERO
0xbc5 PUSH2 0xbb0
0xbc8 JUMPI
---
0xbbb: JUMPDEST 
0xbbc: V1101 = 0x0
0xbc0: V1102 = ADD S0 S1
0xbc3: V1103 = LT V1102 S1
0xbc4: V1104 = ISZERO V1103
0xbc5: V1105 = 0xbb0
0xbc8: JUMPI 0xbb0 V1104
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1102]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S1, S0, 0x0, V1102]

================================

Block 0xbc9
[0xbc9:0xbc9]
---
Predecessors: [0xbbb]
Successors: []
---
0xbc9 INVALID
---
0xbc9: INVALID 
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, S2, 0x0, V1102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0xa, 0x14, 0x1e, 0x53c}, S3, S2, 0x0, V1102]

================================

Block 0xbca
[0xbca:0xbcd]
---
Predecessors: []
Successors: [0xbce]
---
0xbca JUMPDEST
0xbcb DUP1
0xbcc SWAP2
0xbcd POP
---
0xbca: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xbce
[0xbce:0xbd4]
---
Predecessors: [0xbca]
Successors: []
Has unresolved jump.
---
0xbce JUMPDEST
0xbcf POP
0xbd0 SWAP3
0xbd1 SWAP2
0xbd2 POP
0xbd3 POP
0xbd4 JUMP
---
0xbce: JUMPDEST 
0xbd4: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xbd5
[0xbd5:0xbdf]
---
Predecessors: [0xa07]
Successors: [0xbe0, 0xbe1]
---
0xbd5 JUMPDEST
0xbd6 PUSH1 0x0
0xbd8 DUP3
0xbd9 DUP3
0xbda GT
0xbdb ISZERO
0xbdc PUSH2 0xbe1
0xbdf JUMPI
---
0xbd5: JUMPDEST 
0xbd6: V1106 = 0x0
0xbda: V1107 = GT V944 V942
0xbdb: V1108 = ISZERO V1107
0xbdc: V1109 = 0xbe1
0xbdf: JUMPI 0xbe1 V1108
---
Entry stack: [V12, S13, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S7, S6, {0x13d, 0x7f1}, 0x0, 0x2, 0xa15, V942, V944]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, S13, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S7, S6, {0x13d, 0x7f1}, 0x0, 0x2, 0xa15, V942, V944, 0x0]

================================

Block 0xbe0
[0xbe0:0xbe0]
---
Predecessors: [0xbd5]
Successors: []
---
0xbe0 INVALID
---
0xbe0: INVALID 
---
Entry stack: [V12, S14, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S8, S7, {0x13d, 0x7f1}, 0x0, 0x2, 0xa15, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S8, S7, {0x13d, 0x7f1}, 0x0, 0x2, 0xa15, S2, S1, 0x0]

================================

Block 0xbe1
[0xbe1:0xbe5]
---
Predecessors: [0xbd5]
Successors: [0xbe6]
---
0xbe1 JUMPDEST
0xbe2 POP
0xbe3 DUP1
0xbe4 DUP3
0xbe5 SUB
---
0xbe1: JUMPDEST 
0xbe5: V1110 = SUB S2 S1
---
Entry stack: [V12, S14, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S8, S7, {0x13d, 0x7f1}, 0x0, 0x2, 0xa15, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1110]
Exit stack: [V12, S14, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S8, S7, {0x13d, 0x7f1}, 0x0, 0x2, 0xa15, S2, S1, V1110]

================================

Block 0xbe6
[0xbe6:0xbeb]
---
Predecessors: [0xbe1]
Successors: [0xa15]
---
0xbe6 JUMPDEST
0xbe7 SWAP3
0xbe8 SWAP2
0xbe9 POP
0xbea POP
0xbeb JUMP
---
0xbe6: JUMPDEST 
0xbeb: JUMP 0xa15
---
Entry stack: [V12, S14, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S8, S7, {0x13d, 0x7f1}, 0x0, 0x2, 0xa15, S2, S1, V1110]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, S14, {0x139, 0x181}, 0x0, V442, V1102, {0x0, 0xa, 0x14, 0x1e}, S8, S7, {0x13d, 0x7f1}, 0x0, 0x2, V1110]

================================

Block 0xbec
[0xbec:0xc17]
---
Predecessors: []
Successors: []
---
0xbec STOP
0xbed LOG1
0xbee PUSH6 0x627a7a723058
0xbf5 SHA3
0xbf6 STATICCALL
0xbf7 PUSH31 0xeb82e3855c427854594a29cc8b49cfb484ce54cec1a82d21a080b93753c300
0xc17 MISSING 0x29
---
0xbec: STOP 
0xbed: LOG S0 S1 S2
0xbee: V1111 = 0x627a7a723058
0xbf5: V1112 = SHA3 0x627a7a723058 S3
0xbf6: V1113 = STATICCALL V1112 S4 S5 S6 S7 S8
0xbf7: V1114 = 0xeb82e3855c427854594a29cc8b49cfb484ce54cec1a82d21a080b93753c300
0xc17: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xeb82e3855c427854594a29cc8b49cfb484ce54cec1a82d21a080b93753c300, V1113]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x13f
Exit block: 0x152
Body: 0x13f, 0x146, 0x14a, 0x152, 0x6f2

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x16e
Exit block: 0x181
Body: 0x16e, 0x175, 0x179, 0x181, 0x701

Function 2:
Public function signature: 0x38771242
Entry block: 0x193
Exit block: 0x181
Body: 0x181, 0x193, 0x19a, 0x19e, 0x707

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x1b8
Exit block: 0x152
Body: 0x152, 0x1b8, 0x1bf, 0x1c3, 0x70d

Function 4:
Public function signature: 0x3c8da588
Entry block: 0x1e7
Exit block: 0x181
Body: 0x181, 0x1e7, 0x1ee, 0x1f2, 0x71c

Function 5:
Public function signature: 0x400abd5f
Entry block: 0x20c
Exit block: 0x181
Body: 0x181, 0x20c, 0x213, 0x217, 0x722

Function 6:
Public function signature: 0x42e94c90
Entry block: 0x231
Exit block: 0x181
Body: 0x181, 0x231, 0x238, 0x23c, 0x728

Function 7:
Public function signature: 0x519ee19e
Entry block: 0x262
Exit block: 0x181
Body: 0x181, 0x262, 0x269, 0x26d, 0x73a

Function 8:
Public function signature: 0x598b35fc
Entry block: 0x287
Exit block: 0x181
Body: 0x181, 0x287, 0x28e, 0x292, 0x740

Function 9:
Public function signature: 0x626be567
Entry block: 0x2ac
Exit block: 0x181
Body: 0x181, 0x2ac, 0x2b3, 0x2b7, 0x746

Function 10:
Public function signature: 0x630b4989
Entry block: 0x2d1
Exit block: 0x181
Body: 0x181, 0x2d1, 0x2d8, 0x2dc, 0x74c

Function 11:
Public function signature: 0x6e66f6e9
Entry block: 0x2f6
Exit block: 0x152
Body: 0x152, 0x2f6, 0x2fd, 0x301, 0x752

Function 12:
Public function signature: 0x71ae8f02
Entry block: 0x325
Exit block: 0x181
Body: 0x181, 0x325, 0x32c, 0x330, 0x761

Function 13:
Public function signature: 0x7926a7a3
Entry block: 0x34a
Exit block: 0x181
Body: 0x181, 0x34a, 0x351, 0x355, 0x767

Function 14:
Public function signature: 0x86f32586
Entry block: 0x36f
Exit block: 0x13d
Body: 0x13d, 0x36f, 0x376, 0x37a

Function 15:
Public function signature: 0x8bdff161
Entry block: 0x384
Exit block: 0x38b
Body: 0x181, 0x384, 0x38b, 0x38f

Function 16:
Public function signature: 0xaa367664
Entry block: 0x3a9
Exit block: 0x181
Body: 0x181, 0x3a9, 0x3b0, 0x3b4, 0x90a

Function 17:
Public function signature: 0xb2d5ae44
Entry block: 0x3ce
Exit block: 0x3e1
Body: 0x3ce, 0x3d5, 0x3d9, 0x3e1, 0x910, 0x917, 0x927, 0x928, 0x92e, 0x932, 0x951, 0x955, 0x999, 0x99d, 0x99e, 0x99f

Function 18:
Public function signature: 0xc19d93fb
Entry block: 0x3f5
Exit block: 0x417
Body: 0x3f5, 0x3fc, 0x400, 0x408, 0x417, 0x418, 0x9a4

Function 19:
Public function signature: 0xc2052403
Entry block: 0x42c
Exit block: 0x433
Body: 0x13d, 0x42c, 0x433, 0x437

Function 20:
Public function signature: 0xc5c4744c
Entry block: 0x441
Exit block: 0x181
Body: 0x181, 0x441, 0x448, 0x44c, 0xaec

Function 21:
Public function signature: 0xd7bb99ba
Entry block: 0x466
Exit block: 0x181
Body: 0x181, 0x466

Function 22:
Public function signature: 0xe12dd14b
Entry block: 0x480
Exit block: 0x181
Body: 0x181, 0x480, 0x487, 0x48b, 0xaf2

Function 23:
Public function signature: 0xfe389e09
Entry block: 0x4a5
Exit block: 0xb60
Body: 0x4a5, 0x4ac, 0x4b0, 0xaf8, 0xb0f, 0xb13, 0xb16, 0xb26, 0xb27, 0xb2e, 0xb31, 0xb41, 0xb42, 0xb44, 0xb4b, 0xb55, 0xb5c, 0xb60

Function 24:
Public fallback function
Entry block: 0x122
Exit block: 0x181
Body: 0x122, 0x126, 0x12d, 0x131, 0x139, 0x181

Function 25:
Private function
Entry block: 0x76d
Exit block: 0x8a3
Body: 0x13b, 0x76d, 0x779, 0x789, 0x78f, 0x79e, 0x79e, 0x7f1, 0x7fa, 0x805, 0x818, 0x887, 0x896, 0x8a0, 0x8a1, 0x8a2, 0x8a3

Function 26:
Private function
Entry block: 0x8a5
Exit block: 0x907
Body: 0x8a5, 0x8b4, 0x8bb, 0x8ca, 0x8d2, 0x8d8, 0x8df, 0x8ee, 0x8f6, 0x8fc, 0x903, 0x907

Function 27:
Private function
Entry block: 0xb70
Exit block: 0xb85
Body: 0x530, 0x537, 0x53c, 0x54c, 0xb70, 0xb7e, 0xb85, 0xbb0, 0xbb4, 0xbbb

Function 28:
Private function
Entry block: 0x9ad
Exit block: 0xae8
Body: 0x9ad, 0x9b3, 0x9c4, 0x9ce, 0xa07, 0xa15, 0xa75, 0xa86, 0xa98, 0xae7, 0xae8, 0xbd5, 0xbe1, 0xbe6

Function 29:
Private function
Entry block: 0x4ba
Exit block: 0x6eb
Body: 0x4ba, 0x4c2, 0x4d3, 0x4dd, 0x4ec, 0x4f9, 0x504, 0x513, 0x513, 0x51d, 0x530, 0x537, 0x53c, 0x54c, 0x55c, 0x59b, 0x5f0, 0x601, 0x609, 0x65f, 0x670, 0x674, 0x674, 0x6df, 0x6e8, 0x6e9, 0x6ea, 0x6eb, 0x8a5, 0x8b4, 0x8bb, 0x8ca, 0x8d2, 0x8d8, 0x8df, 0x8ee, 0x8f6, 0x8fc, 0x903, 0x907, 0xb70, 0xb7e, 0xb85, 0xb8c, 0xb99, 0xba5, 0xba8, 0xbb0, 0xbb4, 0xbbb

