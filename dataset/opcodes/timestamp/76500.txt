Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x122]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x122
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x122
0xa: JUMPI 0x122 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x12f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x9ac3b00
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x12f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x9ac3b00
0x20: V14 = EQ V12 0x9ac3b00
0x21: V15 = 0x12f
0x24: JUMPI 0x12f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x15e]
---
0x25 DUP1
0x26 PUSH4 0x2194f3a2
0x2b EQ
0x2c PUSH2 0x15e
0x2f JUMPI
---
0x26: V16 = 0x2194f3a2
0x2b: V17 = EQ 0x2194f3a2 V12
0x2c: V18 = 0x15e
0x2f: JUMPI 0x15e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x18d]
---
0x30 DUP1
0x31 PUSH4 0x2c4e722e
0x36 EQ
0x37 PUSH2 0x18d
0x3a JUMPI
---
0x31: V19 = 0x2c4e722e
0x36: V20 = EQ 0x2c4e722e V12
0x37: V21 = 0x18d
0x3a: JUMPI 0x18d V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1b2]
---
0x3b DUP1
0x3c PUSH4 0x4042b66f
0x41 EQ
0x42 PUSH2 0x1b2
0x45 JUMPI
---
0x3c: V22 = 0x4042b66f
0x41: V23 = EQ 0x4042b66f V12
0x42: V24 = 0x1b2
0x45: JUMPI 0x1b2 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1d7]
---
0x46 DUP1
0x47 PUSH4 0x4bfe642d
0x4c EQ
0x4d PUSH2 0x1d7
0x50 JUMPI
---
0x47: V25 = 0x4bfe642d
0x4c: V26 = EQ 0x4bfe642d V12
0x4d: V27 = 0x1d7
0x50: JUMPI 0x1d7 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x206]
---
0x51 DUP1
0x52 PUSH4 0x6fb66278
0x57 EQ
0x58 PUSH2 0x206
0x5b JUMPI
---
0x52: V28 = 0x6fb66278
0x57: V29 = EQ 0x6fb66278 V12
0x58: V30 = 0x206
0x5b: JUMPI 0x206 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x22b]
---
0x5c DUP1
0x5d PUSH4 0x730369a7
0x62 EQ
0x63 PUSH2 0x22b
0x66 JUMPI
---
0x5d: V31 = 0x730369a7
0x62: V32 = EQ 0x730369a7 V12
0x63: V33 = 0x22b
0x66: JUMPI 0x22b V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x250]
---
0x67 DUP1
0x68 PUSH4 0x7d3c5961
0x6d EQ
0x6e PUSH2 0x250
0x71 JUMPI
---
0x68: V34 = 0x7d3c5961
0x6d: V35 = EQ 0x7d3c5961 V12
0x6e: V36 = 0x250
0x71: JUMPI 0x250 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x275]
---
0x72 DUP1
0x73 PUSH4 0x7d64bcb4
0x78 EQ
0x79 PUSH2 0x275
0x7c JUMPI
---
0x73: V37 = 0x7d64bcb4
0x78: V38 = EQ 0x7d64bcb4 V12
0x79: V39 = 0x275
0x7c: JUMPI 0x275 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x28a]
---
0x7d DUP1
0x7e PUSH4 0x8bd61f26
0x83 EQ
0x84 PUSH2 0x28a
0x87 JUMPI
---
0x7e: V40 = 0x8bd61f26
0x83: V41 = EQ 0x8bd61f26 V12
0x84: V42 = 0x28a
0x87: JUMPI 0x28a V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2af]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x2af
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x2af
0x92: JUMPI 0x2af V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2de]
---
0x93 DUP1
0x94 PUSH4 0x8ea5220f
0x99 EQ
0x9a PUSH2 0x2de
0x9d JUMPI
---
0x94: V46 = 0x8ea5220f
0x99: V47 = EQ 0x8ea5220f V12
0x9a: V48 = 0x2de
0x9d: JUMPI 0x2de V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x30d]
---
0x9e DUP1
0x9f PUSH4 0xa85adeab
0xa4 EQ
0xa5 PUSH2 0x30d
0xa8 JUMPI
---
0x9f: V49 = 0xa85adeab
0xa4: V50 = EQ 0xa85adeab V12
0xa5: V51 = 0x30d
0xa8: JUMPI 0x30d V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x332]
---
0xa9 DUP1
0xaa PUSH4 0xaaffadf3
0xaf EQ
0xb0 PUSH2 0x332
0xb3 JUMPI
---
0xaa: V52 = 0xaaffadf3
0xaf: V53 = EQ 0xaaffadf3 V12
0xb0: V54 = 0x332
0xb3: JUMPI 0x332 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x357]
---
0xb4 DUP1
0xb5 PUSH4 0xbb5d3bcb
0xba EQ
0xbb PUSH2 0x357
0xbe JUMPI
---
0xb5: V55 = 0xbb5d3bcb
0xba: V56 = EQ 0xbb5d3bcb V12
0xbb: V57 = 0x357
0xbe: JUMPI 0x357 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x37c]
---
0xbf DUP1
0xc0 PUSH4 0xbfc47aa0
0xc5 EQ
0xc6 PUSH2 0x37c
0xc9 JUMPI
---
0xc0: V58 = 0xbfc47aa0
0xc5: V59 = EQ 0xbfc47aa0 V12
0xc6: V60 = 0x37c
0xc9: JUMPI 0x37c V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3a1]
---
0xca DUP1
0xcb PUSH4 0xc53fc65f
0xd0 EQ
0xd1 PUSH2 0x3a1
0xd4 JUMPI
---
0xcb: V61 = 0xc53fc65f
0xd0: V62 = EQ 0xc53fc65f V12
0xd1: V63 = 0x3a1
0xd4: JUMPI 0x3a1 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3c6]
---
0xd5 DUP1
0xd6 PUSH4 0xc8765ff2
0xdb EQ
0xdc PUSH2 0x3c6
0xdf JUMPI
---
0xd6: V64 = 0xc8765ff2
0xdb: V65 = EQ 0xc8765ff2 V12
0xdc: V66 = 0x3c6
0xdf: JUMPI 0x3c6 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3eb]
---
0xe0 DUP1
0xe1 PUSH4 0xe5760520
0xe6 EQ
0xe7 PUSH2 0x3eb
0xea JUMPI
---
0xe1: V67 = 0xe5760520
0xe6: V68 = EQ 0xe5760520 V12
0xe7: V69 = 0x3eb
0xea: JUMPI 0x3eb V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x41a]
---
0xeb DUP1
0xec PUSH4 0xe6fd48bc
0xf1 EQ
0xf2 PUSH2 0x41a
0xf5 JUMPI
---
0xec: V70 = 0xe6fd48bc
0xf1: V71 = EQ 0xe6fd48bc V12
0xf2: V72 = 0x41a
0xf5: JUMPI 0x41a V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x43f]
---
0xf6 DUP1
0xf7 PUSH4 0xec8ac4d8
0xfc EQ
0xfd PUSH2 0x43f
0x100 JUMPI
---
0xf7: V73 = 0xec8ac4d8
0xfc: V74 = EQ 0xec8ac4d8 V12
0xfd: V75 = 0x43f
0x100: JUMPI 0x43f V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x455]
---
0x101 DUP1
0x102 PUSH4 0xecb70fb7
0x107 EQ
0x108 PUSH2 0x455
0x10b JUMPI
---
0x102: V76 = 0xecb70fb7
0x107: V77 = EQ 0xecb70fb7 V12
0x108: V78 = 0x455
0x10b: JUMPI 0x455 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x47c]
---
0x10c DUP1
0x10d PUSH4 0xf2fde38b
0x112 EQ
0x113 PUSH2 0x47c
0x116 JUMPI
---
0x10d: V79 = 0xf2fde38b
0x112: V80 = EQ 0xf2fde38b V12
0x113: V81 = 0x47c
0x116: JUMPI 0x47c V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0x49d]
---
0x117 DUP1
0x118 PUSH4 0xfc0c546a
0x11d EQ
0x11e PUSH2 0x49d
0x121 JUMPI
---
0x118: V82 = 0xfc0c546a
0x11d: V83 = EQ 0xfc0c546a V12
0x11e: V84 = 0x49d
0x121: JUMPI 0x49d V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x122]
---
Predecessors: [0x0, 0x117]
Successors: [0x123]
---
0x122 JUMPDEST
---
0x122: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x123
[0x123:0x12b]
---
Predecessors: [0x122]
Successors: [0x4cc]
---
0x123 JUMPDEST
0x124 PUSH2 0x12c
0x127 CALLER
0x128 PUSH2 0x4cc
0x12b JUMP
---
0x123: JUMPDEST 
0x124: V85 = 0x12c
0x127: V86 = CALLER
0x128: V87 = 0x4cc
0x12b: JUMP 0x4cc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12c, V86]
Exit stack: [V12, 0x12c, V86]

================================

Block 0x12c
[0x12c:0x12c]
---
Predecessors: [0x752, 0xb58, 0xc9d]
Successors: [0x12d]
---
0x12c JUMPDEST
---
0x12c: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x12e]
---
Predecessors: [0x12c]
Successors: []
---
0x12d JUMPDEST
0x12e STOP
---
0x12d: JUMPDEST 
0x12e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12f
[0x12f:0x135]
---
Predecessors: [0xb]
Successors: [0x136, 0x13a]
---
0x12f JUMPDEST
0x130 CALLVALUE
0x131 ISZERO
0x132 PUSH2 0x13a
0x135 JUMPI
---
0x12f: JUMPDEST 
0x130: V88 = CALLVALUE
0x131: V89 = ISZERO V88
0x132: V90 = 0x13a
0x135: JUMPI 0x13a V89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x136
[0x136:0x139]
---
Predecessors: [0x12f]
Successors: []
---
0x136 PUSH1 0x0
0x138 DUP1
0x139 REVERT
---
0x136: V91 = 0x0
0x139: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13a
[0x13a:0x141]
---
Predecessors: [0x12f]
Successors: [0x757]
---
0x13a JUMPDEST
0x13b PUSH2 0x142
0x13e PUSH2 0x757
0x141 JUMP
---
0x13a: JUMPDEST 
0x13b: V92 = 0x142
0x13e: V93 = 0x757
0x141: JUMP 0x757
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x142
[0x142:0x15d]
---
Predecessors: [0x757, 0x766, 0x781, 0xb61, 0xb70, 0xba3, 0xca0]
Successors: []
---
0x142 JUMPDEST
0x143 PUSH1 0x40
0x145 MLOAD
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e SWAP1
0x14f SWAP2
0x150 AND
0x151 DUP2
0x152 MSTORE
0x153 PUSH1 0x20
0x155 ADD
0x156 PUSH1 0x40
0x158 MLOAD
0x159 DUP1
0x15a SWAP2
0x15b SUB
0x15c SWAP1
0x15d RETURN
---
0x142: JUMPDEST 
0x143: V94 = 0x40
0x145: V95 = M[0x40]
0x146: V96 = 0x1
0x148: V97 = 0xa0
0x14a: V98 = 0x2
0x14c: V99 = EXP 0x2 0xa0
0x14d: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V101 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x152: M[V95] = V101
0x153: V102 = 0x20
0x155: V103 = ADD 0x20 V95
0x156: V104 = 0x40
0x158: V105 = M[0x40]
0x15b: V106 = SUB V103 V105
0x15d: RETURN V105 V106
---
Entry stack: [V12, 0x142, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x142]

================================

Block 0x15e
[0x15e:0x164]
---
Predecessors: [0x25]
Successors: [0x165, 0x169]
---
0x15e JUMPDEST
0x15f CALLVALUE
0x160 ISZERO
0x161 PUSH2 0x169
0x164 JUMPI
---
0x15e: JUMPDEST 
0x15f: V107 = CALLVALUE
0x160: V108 = ISZERO V107
0x161: V109 = 0x169
0x164: JUMPI 0x169 V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x168]
---
Predecessors: [0x15e]
Successors: []
---
0x165 PUSH1 0x0
0x167 DUP1
0x168 REVERT
---
0x165: V110 = 0x0
0x168: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x169
[0x169:0x170]
---
Predecessors: [0x15e]
Successors: [0x766]
---
0x169 JUMPDEST
0x16a PUSH2 0x142
0x16d PUSH2 0x766
0x170 JUMP
---
0x169: JUMPDEST 
0x16a: V111 = 0x142
0x16d: V112 = 0x766
0x170: JUMP 0x766
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x171
[0x171:0x18c]
---
Predecessors: []
Successors: []
---
0x171 JUMPDEST
0x172 PUSH1 0x40
0x174 MLOAD
0x175 PUSH1 0x1
0x177 PUSH1 0xa0
0x179 PUSH1 0x2
0x17b EXP
0x17c SUB
0x17d SWAP1
0x17e SWAP2
0x17f AND
0x180 DUP2
0x181 MSTORE
0x182 PUSH1 0x20
0x184 ADD
0x185 PUSH1 0x40
0x187 MLOAD
0x188 DUP1
0x189 SWAP2
0x18a SUB
0x18b SWAP1
0x18c RETURN
---
0x171: JUMPDEST 
0x172: V113 = 0x40
0x174: V114 = M[0x40]
0x175: V115 = 0x1
0x177: V116 = 0xa0
0x179: V117 = 0x2
0x17b: V118 = EXP 0x2 0xa0
0x17c: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17f: V120 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x181: M[V114] = V120
0x182: V121 = 0x20
0x184: V122 = ADD 0x20 V114
0x185: V123 = 0x40
0x187: V124 = M[0x40]
0x18a: V125 = SUB V122 V124
0x18c: RETURN V124 V125
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x18d
[0x18d:0x193]
---
Predecessors: [0x30]
Successors: [0x194, 0x198]
---
0x18d JUMPDEST
0x18e CALLVALUE
0x18f ISZERO
0x190 PUSH2 0x198
0x193 JUMPI
---
0x18d: JUMPDEST 
0x18e: V126 = CALLVALUE
0x18f: V127 = ISZERO V126
0x190: V128 = 0x198
0x193: JUMPI 0x198 V127
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x194
[0x194:0x197]
---
Predecessors: [0x18d]
Successors: []
---
0x194 PUSH1 0x0
0x196 DUP1
0x197 REVERT
---
0x194: V129 = 0x0
0x197: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x198
[0x198:0x19f]
---
Predecessors: [0x18d]
Successors: [0x775]
---
0x198 JUMPDEST
0x199 PUSH2 0x1a0
0x19c PUSH2 0x775
0x19f JUMP
---
0x198: JUMPDEST 
0x199: V130 = 0x1a0
0x19c: V131 = 0x775
0x19f: JUMP 0x775
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x1a0
[0x1a0:0x1b1]
---
Predecessors: [0x775, 0x77b, 0x790, 0x796, 0x79c, 0xb5b, 0xb7f, 0xb85, 0xb8b, 0xb91, 0xb97, 0xb9d, 0xbb2]
Successors: []
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 SWAP1
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa PUSH1 0x40
0x1ac MLOAD
0x1ad DUP1
0x1ae SWAP2
0x1af SUB
0x1b0 SWAP1
0x1b1 RETURN
---
0x1a0: JUMPDEST 
0x1a1: V132 = 0x40
0x1a3: V133 = M[0x40]
0x1a6: M[V133] = S0
0x1a7: V134 = 0x20
0x1a9: V135 = ADD 0x20 V133
0x1aa: V136 = 0x40
0x1ac: V137 = M[0x40]
0x1af: V138 = SUB V135 V137
0x1b1: RETURN V137 V138
---
Entry stack: [V12, 0x1a0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1a0]

================================

Block 0x1b2
[0x1b2:0x1b8]
---
Predecessors: [0x3b]
Successors: [0x1b9, 0x1bd]
---
0x1b2 JUMPDEST
0x1b3 CALLVALUE
0x1b4 ISZERO
0x1b5 PUSH2 0x1bd
0x1b8 JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V139 = CALLVALUE
0x1b4: V140 = ISZERO V139
0x1b5: V141 = 0x1bd
0x1b8: JUMPI 0x1bd V140
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b9
[0x1b9:0x1bc]
---
Predecessors: [0x1b2]
Successors: []
---
0x1b9 PUSH1 0x0
0x1bb DUP1
0x1bc REVERT
---
0x1b9: V142 = 0x0
0x1bc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bd
[0x1bd:0x1c4]
---
Predecessors: [0x1b2]
Successors: [0x77b]
---
0x1bd JUMPDEST
0x1be PUSH2 0x1a0
0x1c1 PUSH2 0x77b
0x1c4 JUMP
---
0x1bd: JUMPDEST 
0x1be: V143 = 0x1a0
0x1c1: V144 = 0x77b
0x1c4: JUMP 0x77b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x1c5
[0x1c5:0x1d6]
---
Predecessors: []
Successors: []
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 SWAP1
0x1ca DUP2
0x1cb MSTORE
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 SWAP2
0x1d4 SUB
0x1d5 SWAP1
0x1d6 RETURN
---
0x1c5: JUMPDEST 
0x1c6: V145 = 0x40
0x1c8: V146 = M[0x40]
0x1cb: M[V146] = S0
0x1cc: V147 = 0x20
0x1ce: V148 = ADD 0x20 V146
0x1cf: V149 = 0x40
0x1d1: V150 = M[0x40]
0x1d4: V151 = SUB V148 V150
0x1d6: RETURN V150 V151
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d7
[0x1d7:0x1dd]
---
Predecessors: [0x46]
Successors: [0x1de, 0x1e2]
---
0x1d7 JUMPDEST
0x1d8 CALLVALUE
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V152 = CALLVALUE
0x1d9: V153 = ISZERO V152
0x1da: V154 = 0x1e2
0x1dd: JUMPI 0x1e2 V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x1d7]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V155 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e2
[0x1e2:0x1e9]
---
Predecessors: [0x1d7]
Successors: [0x781]
---
0x1e2 JUMPDEST
0x1e3 PUSH2 0x142
0x1e6 PUSH2 0x781
0x1e9 JUMP
---
0x1e2: JUMPDEST 
0x1e3: V156 = 0x142
0x1e6: V157 = 0x781
0x1e9: JUMP 0x781
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x1ea
[0x1ea:0x205]
---
Predecessors: []
Successors: []
---
0x1ea JUMPDEST
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee PUSH1 0x1
0x1f0 PUSH1 0xa0
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 SUB
0x1f6 SWAP1
0x1f7 SWAP2
0x1f8 AND
0x1f9 DUP2
0x1fa MSTORE
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 DUP1
0x202 SWAP2
0x203 SUB
0x204 SWAP1
0x205 RETURN
---
0x1ea: JUMPDEST 
0x1eb: V158 = 0x40
0x1ed: V159 = M[0x40]
0x1ee: V160 = 0x1
0x1f0: V161 = 0xa0
0x1f2: V162 = 0x2
0x1f4: V163 = EXP 0x2 0xa0
0x1f5: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f8: V165 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: M[V159] = V165
0x1fb: V166 = 0x20
0x1fd: V167 = ADD 0x20 V159
0x1fe: V168 = 0x40
0x200: V169 = M[0x40]
0x203: V170 = SUB V167 V169
0x205: RETURN V169 V170
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x206
[0x206:0x20c]
---
Predecessors: [0x51]
Successors: [0x20d, 0x211]
---
0x206 JUMPDEST
0x207 CALLVALUE
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x206: JUMPDEST 
0x207: V171 = CALLVALUE
0x208: V172 = ISZERO V171
0x209: V173 = 0x211
0x20c: JUMPI 0x211 V172
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x206]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V174 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x211
[0x211:0x218]
---
Predecessors: [0x206]
Successors: [0x790]
---
0x211 JUMPDEST
0x212 PUSH2 0x1a0
0x215 PUSH2 0x790
0x218 JUMP
---
0x211: JUMPDEST 
0x212: V175 = 0x1a0
0x215: V176 = 0x790
0x218: JUMP 0x790
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x219
[0x219:0x22a]
---
Predecessors: []
Successors: []
---
0x219 JUMPDEST
0x21a PUSH1 0x40
0x21c MLOAD
0x21d SWAP1
0x21e DUP2
0x21f MSTORE
0x220 PUSH1 0x20
0x222 ADD
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 SWAP2
0x228 SUB
0x229 SWAP1
0x22a RETURN
---
0x219: JUMPDEST 
0x21a: V177 = 0x40
0x21c: V178 = M[0x40]
0x21f: M[V178] = S0
0x220: V179 = 0x20
0x222: V180 = ADD 0x20 V178
0x223: V181 = 0x40
0x225: V182 = M[0x40]
0x228: V183 = SUB V180 V182
0x22a: RETURN V182 V183
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22b
[0x22b:0x231]
---
Predecessors: [0x5c]
Successors: [0x232, 0x236]
---
0x22b JUMPDEST
0x22c CALLVALUE
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x22b: JUMPDEST 
0x22c: V184 = CALLVALUE
0x22d: V185 = ISZERO V184
0x22e: V186 = 0x236
0x231: JUMPI 0x236 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x22b]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V187 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x236
[0x236:0x23d]
---
Predecessors: [0x22b]
Successors: [0x796]
---
0x236 JUMPDEST
0x237 PUSH2 0x1a0
0x23a PUSH2 0x796
0x23d JUMP
---
0x236: JUMPDEST 
0x237: V188 = 0x1a0
0x23a: V189 = 0x796
0x23d: JUMP 0x796
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x23e
[0x23e:0x24f]
---
Predecessors: []
Successors: []
---
0x23e JUMPDEST
0x23f PUSH1 0x40
0x241 MLOAD
0x242 SWAP1
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x20
0x247 ADD
0x248 PUSH1 0x40
0x24a MLOAD
0x24b DUP1
0x24c SWAP2
0x24d SUB
0x24e SWAP1
0x24f RETURN
---
0x23e: JUMPDEST 
0x23f: V190 = 0x40
0x241: V191 = M[0x40]
0x244: M[V191] = S0
0x245: V192 = 0x20
0x247: V193 = ADD 0x20 V191
0x248: V194 = 0x40
0x24a: V195 = M[0x40]
0x24d: V196 = SUB V193 V195
0x24f: RETURN V195 V196
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x250
[0x250:0x256]
---
Predecessors: [0x67]
Successors: [0x257, 0x25b]
---
0x250 JUMPDEST
0x251 CALLVALUE
0x252 ISZERO
0x253 PUSH2 0x25b
0x256 JUMPI
---
0x250: JUMPDEST 
0x251: V197 = CALLVALUE
0x252: V198 = ISZERO V197
0x253: V199 = 0x25b
0x256: JUMPI 0x25b V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x257
[0x257:0x25a]
---
Predecessors: [0x250]
Successors: []
---
0x257 PUSH1 0x0
0x259 DUP1
0x25a REVERT
---
0x257: V200 = 0x0
0x25a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25b
[0x25b:0x262]
---
Predecessors: [0x250]
Successors: [0x79c]
---
0x25b JUMPDEST
0x25c PUSH2 0x1a0
0x25f PUSH2 0x79c
0x262 JUMP
---
0x25b: JUMPDEST 
0x25c: V201 = 0x1a0
0x25f: V202 = 0x79c
0x262: JUMP 0x79c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x263
[0x263:0x274]
---
Predecessors: []
Successors: []
---
0x263 JUMPDEST
0x264 PUSH1 0x40
0x266 MLOAD
0x267 SWAP1
0x268 DUP2
0x269 MSTORE
0x26a PUSH1 0x20
0x26c ADD
0x26d PUSH1 0x40
0x26f MLOAD
0x270 DUP1
0x271 SWAP2
0x272 SUB
0x273 SWAP1
0x274 RETURN
---
0x263: JUMPDEST 
0x264: V203 = 0x40
0x266: V204 = M[0x40]
0x269: M[V204] = S0
0x26a: V205 = 0x20
0x26c: V206 = ADD 0x20 V204
0x26d: V207 = 0x40
0x26f: V208 = M[0x40]
0x272: V209 = SUB V206 V208
0x274: RETURN V208 V209
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x275
[0x275:0x27b]
---
Predecessors: [0x72]
Successors: [0x27c, 0x280]
---
0x275 JUMPDEST
0x276 CALLVALUE
0x277 ISZERO
0x278 PUSH2 0x280
0x27b JUMPI
---
0x275: JUMPDEST 
0x276: V210 = CALLVALUE
0x277: V211 = ISZERO V210
0x278: V212 = 0x280
0x27b: JUMPI 0x280 V211
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27c
[0x27c:0x27f]
---
Predecessors: [0x275]
Successors: []
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
---
0x27c: V213 = 0x0
0x27f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x280
[0x280:0x287]
---
Predecessors: [0x275]
Successors: [0x7a2]
---
0x280 JUMPDEST
0x281 PUSH2 0x12c
0x284 PUSH2 0x7a2
0x287 JUMP
---
0x280: JUMPDEST 
0x281: V214 = 0x12c
0x284: V215 = 0x7a2
0x287: JUMP 0x7a2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V12, 0x12c]

================================

Block 0x288
[0x288:0x289]
---
Predecessors: []
Successors: []
---
0x288 JUMPDEST
0x289 STOP
---
0x288: JUMPDEST 
0x289: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x28a
[0x28a:0x290]
---
Predecessors: [0x7d]
Successors: [0x291, 0x295]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x28a: JUMPDEST 
0x28b: V216 = CALLVALUE
0x28c: V217 = ISZERO V216
0x28d: V218 = 0x295
0x290: JUMPI 0x295 V217
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x28a]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V219 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x295
[0x295:0x29c]
---
Predecessors: [0x28a]
Successors: [0xb5b]
---
0x295 JUMPDEST
0x296 PUSH2 0x1a0
0x299 PUSH2 0xb5b
0x29c JUMP
---
0x295: JUMPDEST 
0x296: V220 = 0x1a0
0x299: V221 = 0xb5b
0x29c: JUMP 0xb5b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x29d
[0x29d:0x2ae]
---
Predecessors: []
Successors: []
---
0x29d JUMPDEST
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 SWAP1
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa DUP1
0x2ab SWAP2
0x2ac SUB
0x2ad SWAP1
0x2ae RETURN
---
0x29d: JUMPDEST 
0x29e: V222 = 0x40
0x2a0: V223 = M[0x40]
0x2a3: M[V223] = S0
0x2a4: V224 = 0x20
0x2a6: V225 = ADD 0x20 V223
0x2a7: V226 = 0x40
0x2a9: V227 = M[0x40]
0x2ac: V228 = SUB V225 V227
0x2ae: RETURN V227 V228
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2af
[0x2af:0x2b5]
---
Predecessors: [0x88]
Successors: [0x2b6, 0x2ba]
---
0x2af JUMPDEST
0x2b0 CALLVALUE
0x2b1 ISZERO
0x2b2 PUSH2 0x2ba
0x2b5 JUMPI
---
0x2af: JUMPDEST 
0x2b0: V229 = CALLVALUE
0x2b1: V230 = ISZERO V229
0x2b2: V231 = 0x2ba
0x2b5: JUMPI 0x2ba V230
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b6
[0x2b6:0x2b9]
---
Predecessors: [0x2af]
Successors: []
---
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 REVERT
---
0x2b6: V232 = 0x0
0x2b9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ba
[0x2ba:0x2c1]
---
Predecessors: [0x2af]
Successors: [0xb61]
---
0x2ba JUMPDEST
0x2bb PUSH2 0x142
0x2be PUSH2 0xb61
0x2c1 JUMP
---
0x2ba: JUMPDEST 
0x2bb: V233 = 0x142
0x2be: V234 = 0xb61
0x2c1: JUMP 0xb61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x2c2
[0x2c2:0x2dd]
---
Predecessors: []
Successors: []
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce SWAP1
0x2cf SWAP2
0x2d0 AND
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 ADD
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 DUP1
0x2da SWAP2
0x2db SUB
0x2dc SWAP1
0x2dd RETURN
---
0x2c2: JUMPDEST 
0x2c3: V235 = 0x40
0x2c5: V236 = M[0x40]
0x2c6: V237 = 0x1
0x2c8: V238 = 0xa0
0x2ca: V239 = 0x2
0x2cc: V240 = EXP 0x2 0xa0
0x2cd: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V242 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: M[V236] = V242
0x2d3: V243 = 0x20
0x2d5: V244 = ADD 0x20 V236
0x2d6: V245 = 0x40
0x2d8: V246 = M[0x40]
0x2db: V247 = SUB V244 V246
0x2dd: RETURN V246 V247
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2de
[0x2de:0x2e4]
---
Predecessors: [0x93]
Successors: [0x2e5, 0x2e9]
---
0x2de JUMPDEST
0x2df CALLVALUE
0x2e0 ISZERO
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2de: JUMPDEST 
0x2df: V248 = CALLVALUE
0x2e0: V249 = ISZERO V248
0x2e1: V250 = 0x2e9
0x2e4: JUMPI 0x2e9 V249
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2de]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V251 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e9
[0x2e9:0x2f0]
---
Predecessors: [0x2de]
Successors: [0xb70]
---
0x2e9 JUMPDEST
0x2ea PUSH2 0x142
0x2ed PUSH2 0xb70
0x2f0 JUMP
---
0x2e9: JUMPDEST 
0x2ea: V252 = 0x142
0x2ed: V253 = 0xb70
0x2f0: JUMP 0xb70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x2f1
[0x2f1:0x30c]
---
Predecessors: []
Successors: []
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd SWAP1
0x2fe SWAP2
0x2ff AND
0x300 DUP2
0x301 MSTORE
0x302 PUSH1 0x20
0x304 ADD
0x305 PUSH1 0x40
0x307 MLOAD
0x308 DUP1
0x309 SWAP2
0x30a SUB
0x30b SWAP1
0x30c RETURN
---
0x2f1: JUMPDEST 
0x2f2: V254 = 0x40
0x2f4: V255 = M[0x40]
0x2f5: V256 = 0x1
0x2f7: V257 = 0xa0
0x2f9: V258 = 0x2
0x2fb: V259 = EXP 0x2 0xa0
0x2fc: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V261 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x301: M[V255] = V261
0x302: V262 = 0x20
0x304: V263 = ADD 0x20 V255
0x305: V264 = 0x40
0x307: V265 = M[0x40]
0x30a: V266 = SUB V263 V265
0x30c: RETURN V265 V266
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30d
[0x30d:0x313]
---
Predecessors: [0x9e]
Successors: [0x314, 0x318]
---
0x30d JUMPDEST
0x30e CALLVALUE
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x30d: JUMPDEST 
0x30e: V267 = CALLVALUE
0x30f: V268 = ISZERO V267
0x310: V269 = 0x318
0x313: JUMPI 0x318 V268
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x30d]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V270 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x318
[0x318:0x31f]
---
Predecessors: [0x30d]
Successors: [0xb7f]
---
0x318 JUMPDEST
0x319 PUSH2 0x1a0
0x31c PUSH2 0xb7f
0x31f JUMP
---
0x318: JUMPDEST 
0x319: V271 = 0x1a0
0x31c: V272 = 0xb7f
0x31f: JUMP 0xb7f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x320
[0x320:0x331]
---
Predecessors: []
Successors: []
---
0x320 JUMPDEST
0x321 PUSH1 0x40
0x323 MLOAD
0x324 SWAP1
0x325 DUP2
0x326 MSTORE
0x327 PUSH1 0x20
0x329 ADD
0x32a PUSH1 0x40
0x32c MLOAD
0x32d DUP1
0x32e SWAP2
0x32f SUB
0x330 SWAP1
0x331 RETURN
---
0x320: JUMPDEST 
0x321: V273 = 0x40
0x323: V274 = M[0x40]
0x326: M[V274] = S0
0x327: V275 = 0x20
0x329: V276 = ADD 0x20 V274
0x32a: V277 = 0x40
0x32c: V278 = M[0x40]
0x32f: V279 = SUB V276 V278
0x331: RETURN V278 V279
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x332
[0x332:0x338]
---
Predecessors: [0xa9]
Successors: [0x339, 0x33d]
---
0x332 JUMPDEST
0x333 CALLVALUE
0x334 ISZERO
0x335 PUSH2 0x33d
0x338 JUMPI
---
0x332: JUMPDEST 
0x333: V280 = CALLVALUE
0x334: V281 = ISZERO V280
0x335: V282 = 0x33d
0x338: JUMPI 0x33d V281
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x339
[0x339:0x33c]
---
Predecessors: [0x332]
Successors: []
---
0x339 PUSH1 0x0
0x33b DUP1
0x33c REVERT
---
0x339: V283 = 0x0
0x33c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33d
[0x33d:0x344]
---
Predecessors: [0x332]
Successors: [0xb85]
---
0x33d JUMPDEST
0x33e PUSH2 0x1a0
0x341 PUSH2 0xb85
0x344 JUMP
---
0x33d: JUMPDEST 
0x33e: V284 = 0x1a0
0x341: V285 = 0xb85
0x344: JUMP 0xb85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x345
[0x345:0x356]
---
Predecessors: []
Successors: []
---
0x345 JUMPDEST
0x346 PUSH1 0x40
0x348 MLOAD
0x349 SWAP1
0x34a DUP2
0x34b MSTORE
0x34c PUSH1 0x20
0x34e ADD
0x34f PUSH1 0x40
0x351 MLOAD
0x352 DUP1
0x353 SWAP2
0x354 SUB
0x355 SWAP1
0x356 RETURN
---
0x345: JUMPDEST 
0x346: V286 = 0x40
0x348: V287 = M[0x40]
0x34b: M[V287] = S0
0x34c: V288 = 0x20
0x34e: V289 = ADD 0x20 V287
0x34f: V290 = 0x40
0x351: V291 = M[0x40]
0x354: V292 = SUB V289 V291
0x356: RETURN V291 V292
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x357
[0x357:0x35d]
---
Predecessors: [0xb4]
Successors: [0x35e, 0x362]
---
0x357 JUMPDEST
0x358 CALLVALUE
0x359 ISZERO
0x35a PUSH2 0x362
0x35d JUMPI
---
0x357: JUMPDEST 
0x358: V293 = CALLVALUE
0x359: V294 = ISZERO V293
0x35a: V295 = 0x362
0x35d: JUMPI 0x362 V294
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35e
[0x35e:0x361]
---
Predecessors: [0x357]
Successors: []
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
---
0x35e: V296 = 0x0
0x361: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x362
[0x362:0x369]
---
Predecessors: [0x357]
Successors: [0xb8b]
---
0x362 JUMPDEST
0x363 PUSH2 0x1a0
0x366 PUSH2 0xb8b
0x369 JUMP
---
0x362: JUMPDEST 
0x363: V297 = 0x1a0
0x366: V298 = 0xb8b
0x369: JUMP 0xb8b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x36a
[0x36a:0x37b]
---
Predecessors: []
Successors: []
---
0x36a JUMPDEST
0x36b PUSH1 0x40
0x36d MLOAD
0x36e SWAP1
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x20
0x373 ADD
0x374 PUSH1 0x40
0x376 MLOAD
0x377 DUP1
0x378 SWAP2
0x379 SUB
0x37a SWAP1
0x37b RETURN
---
0x36a: JUMPDEST 
0x36b: V299 = 0x40
0x36d: V300 = M[0x40]
0x370: M[V300] = S0
0x371: V301 = 0x20
0x373: V302 = ADD 0x20 V300
0x374: V303 = 0x40
0x376: V304 = M[0x40]
0x379: V305 = SUB V302 V304
0x37b: RETURN V304 V305
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x37c
[0x37c:0x382]
---
Predecessors: [0xbf]
Successors: [0x383, 0x387]
---
0x37c JUMPDEST
0x37d CALLVALUE
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x37c: JUMPDEST 
0x37d: V306 = CALLVALUE
0x37e: V307 = ISZERO V306
0x37f: V308 = 0x387
0x382: JUMPI 0x387 V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x37c]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V309 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x387
[0x387:0x38e]
---
Predecessors: [0x37c]
Successors: [0xb91]
---
0x387 JUMPDEST
0x388 PUSH2 0x1a0
0x38b PUSH2 0xb91
0x38e JUMP
---
0x387: JUMPDEST 
0x388: V310 = 0x1a0
0x38b: V311 = 0xb91
0x38e: JUMP 0xb91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x38f
[0x38f:0x3a0]
---
Predecessors: []
Successors: []
---
0x38f JUMPDEST
0x390 PUSH1 0x40
0x392 MLOAD
0x393 SWAP1
0x394 DUP2
0x395 MSTORE
0x396 PUSH1 0x20
0x398 ADD
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d SWAP2
0x39e SUB
0x39f SWAP1
0x3a0 RETURN
---
0x38f: JUMPDEST 
0x390: V312 = 0x40
0x392: V313 = M[0x40]
0x395: M[V313] = S0
0x396: V314 = 0x20
0x398: V315 = ADD 0x20 V313
0x399: V316 = 0x40
0x39b: V317 = M[0x40]
0x39e: V318 = SUB V315 V317
0x3a0: RETURN V317 V318
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3a1
[0x3a1:0x3a7]
---
Predecessors: [0xca]
Successors: [0x3a8, 0x3ac]
---
0x3a1 JUMPDEST
0x3a2 CALLVALUE
0x3a3 ISZERO
0x3a4 PUSH2 0x3ac
0x3a7 JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V319 = CALLVALUE
0x3a3: V320 = ISZERO V319
0x3a4: V321 = 0x3ac
0x3a7: JUMPI 0x3ac V320
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a8
[0x3a8:0x3ab]
---
Predecessors: [0x3a1]
Successors: []
---
0x3a8 PUSH1 0x0
0x3aa DUP1
0x3ab REVERT
---
0x3a8: V322 = 0x0
0x3ab: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ac
[0x3ac:0x3b3]
---
Predecessors: [0x3a1]
Successors: [0xb97]
---
0x3ac JUMPDEST
0x3ad PUSH2 0x1a0
0x3b0 PUSH2 0xb97
0x3b3 JUMP
---
0x3ac: JUMPDEST 
0x3ad: V323 = 0x1a0
0x3b0: V324 = 0xb97
0x3b3: JUMP 0xb97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x3b4
[0x3b4:0x3c5]
---
Predecessors: []
Successors: []
---
0x3b4 JUMPDEST
0x3b5 PUSH1 0x40
0x3b7 MLOAD
0x3b8 SWAP1
0x3b9 DUP2
0x3ba MSTORE
0x3bb PUSH1 0x20
0x3bd ADD
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 DUP1
0x3c2 SWAP2
0x3c3 SUB
0x3c4 SWAP1
0x3c5 RETURN
---
0x3b4: JUMPDEST 
0x3b5: V325 = 0x40
0x3b7: V326 = M[0x40]
0x3ba: M[V326] = S0
0x3bb: V327 = 0x20
0x3bd: V328 = ADD 0x20 V326
0x3be: V329 = 0x40
0x3c0: V330 = M[0x40]
0x3c3: V331 = SUB V328 V330
0x3c5: RETURN V330 V331
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c6
[0x3c6:0x3cc]
---
Predecessors: [0xd5]
Successors: [0x3cd, 0x3d1]
---
0x3c6 JUMPDEST
0x3c7 CALLVALUE
0x3c8 ISZERO
0x3c9 PUSH2 0x3d1
0x3cc JUMPI
---
0x3c6: JUMPDEST 
0x3c7: V332 = CALLVALUE
0x3c8: V333 = ISZERO V332
0x3c9: V334 = 0x3d1
0x3cc: JUMPI 0x3d1 V333
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cd
[0x3cd:0x3d0]
---
Predecessors: [0x3c6]
Successors: []
---
0x3cd PUSH1 0x0
0x3cf DUP1
0x3d0 REVERT
---
0x3cd: V335 = 0x0
0x3d0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d1
[0x3d1:0x3d8]
---
Predecessors: [0x3c6]
Successors: [0xb9d]
---
0x3d1 JUMPDEST
0x3d2 PUSH2 0x1a0
0x3d5 PUSH2 0xb9d
0x3d8 JUMP
---
0x3d1: JUMPDEST 
0x3d2: V336 = 0x1a0
0x3d5: V337 = 0xb9d
0x3d8: JUMP 0xb9d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x3d9
[0x3d9:0x3ea]
---
Predecessors: []
Successors: []
---
0x3d9 JUMPDEST
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd SWAP1
0x3de DUP2
0x3df MSTORE
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP1
0x3e7 SWAP2
0x3e8 SUB
0x3e9 SWAP1
0x3ea RETURN
---
0x3d9: JUMPDEST 
0x3da: V338 = 0x40
0x3dc: V339 = M[0x40]
0x3df: M[V339] = S0
0x3e0: V340 = 0x20
0x3e2: V341 = ADD 0x20 V339
0x3e3: V342 = 0x40
0x3e5: V343 = M[0x40]
0x3e8: V344 = SUB V341 V343
0x3ea: RETURN V343 V344
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3eb
[0x3eb:0x3f1]
---
Predecessors: [0xe0]
Successors: [0x3f2, 0x3f6]
---
0x3eb JUMPDEST
0x3ec CALLVALUE
0x3ed ISZERO
0x3ee PUSH2 0x3f6
0x3f1 JUMPI
---
0x3eb: JUMPDEST 
0x3ec: V345 = CALLVALUE
0x3ed: V346 = ISZERO V345
0x3ee: V347 = 0x3f6
0x3f1: JUMPI 0x3f6 V346
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f2
[0x3f2:0x3f5]
---
Predecessors: [0x3eb]
Successors: []
---
0x3f2 PUSH1 0x0
0x3f4 DUP1
0x3f5 REVERT
---
0x3f2: V348 = 0x0
0x3f5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f6
[0x3f6:0x3fd]
---
Predecessors: [0x3eb]
Successors: [0xba3]
---
0x3f6 JUMPDEST
0x3f7 PUSH2 0x142
0x3fa PUSH2 0xba3
0x3fd JUMP
---
0x3f6: JUMPDEST 
0x3f7: V349 = 0x142
0x3fa: V350 = 0xba3
0x3fd: JUMP 0xba3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x3fe
[0x3fe:0x419]
---
Predecessors: []
Successors: []
---
0x3fe JUMPDEST
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 PUSH1 0x1
0x404 PUSH1 0xa0
0x406 PUSH1 0x2
0x408 EXP
0x409 SUB
0x40a SWAP1
0x40b SWAP2
0x40c AND
0x40d DUP2
0x40e MSTORE
0x40f PUSH1 0x20
0x411 ADD
0x412 PUSH1 0x40
0x414 MLOAD
0x415 DUP1
0x416 SWAP2
0x417 SUB
0x418 SWAP1
0x419 RETURN
---
0x3fe: JUMPDEST 
0x3ff: V351 = 0x40
0x401: V352 = M[0x40]
0x402: V353 = 0x1
0x404: V354 = 0xa0
0x406: V355 = 0x2
0x408: V356 = EXP 0x2 0xa0
0x409: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40c: V358 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x40e: M[V352] = V358
0x40f: V359 = 0x20
0x411: V360 = ADD 0x20 V352
0x412: V361 = 0x40
0x414: V362 = M[0x40]
0x417: V363 = SUB V360 V362
0x419: RETURN V362 V363
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x41a
[0x41a:0x420]
---
Predecessors: [0xeb]
Successors: [0x421, 0x425]
---
0x41a JUMPDEST
0x41b CALLVALUE
0x41c ISZERO
0x41d PUSH2 0x425
0x420 JUMPI
---
0x41a: JUMPDEST 
0x41b: V364 = CALLVALUE
0x41c: V365 = ISZERO V364
0x41d: V366 = 0x425
0x420: JUMPI 0x425 V365
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x421
[0x421:0x424]
---
Predecessors: [0x41a]
Successors: []
---
0x421 PUSH1 0x0
0x423 DUP1
0x424 REVERT
---
0x421: V367 = 0x0
0x424: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x425
[0x425:0x42c]
---
Predecessors: [0x41a]
Successors: [0xbb2]
---
0x425 JUMPDEST
0x426 PUSH2 0x1a0
0x429 PUSH2 0xbb2
0x42c JUMP
---
0x425: JUMPDEST 
0x426: V368 = 0x1a0
0x429: V369 = 0xbb2
0x42c: JUMP 0xbb2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a0]
Exit stack: [V12, 0x1a0]

================================

Block 0x42d
[0x42d:0x43e]
---
Predecessors: []
Successors: []
---
0x42d JUMPDEST
0x42e PUSH1 0x40
0x430 MLOAD
0x431 SWAP1
0x432 DUP2
0x433 MSTORE
0x434 PUSH1 0x20
0x436 ADD
0x437 PUSH1 0x40
0x439 MLOAD
0x43a DUP1
0x43b SWAP2
0x43c SUB
0x43d SWAP1
0x43e RETURN
---
0x42d: JUMPDEST 
0x42e: V370 = 0x40
0x430: V371 = M[0x40]
0x433: M[V371] = S0
0x434: V372 = 0x20
0x436: V373 = ADD 0x20 V371
0x437: V374 = 0x40
0x439: V375 = M[0x40]
0x43c: V376 = SUB V373 V375
0x43e: RETURN V375 V376
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x43f
[0x43f:0x452]
---
Predecessors: [0xf6]
Successors: [0x4cc]
---
0x43f JUMPDEST
0x440 PUSH2 0x12c
0x443 PUSH1 0x1
0x445 PUSH1 0xa0
0x447 PUSH1 0x2
0x449 EXP
0x44a SUB
0x44b PUSH1 0x4
0x44d CALLDATALOAD
0x44e AND
0x44f PUSH2 0x4cc
0x452 JUMP
---
0x43f: JUMPDEST 
0x440: V377 = 0x12c
0x443: V378 = 0x1
0x445: V379 = 0xa0
0x447: V380 = 0x2
0x449: V381 = EXP 0x2 0xa0
0x44a: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44b: V383 = 0x4
0x44d: V384 = CALLDATALOAD 0x4
0x44e: V385 = AND V384 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V386 = 0x4cc
0x452: JUMP 0x4cc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12c, V385]
Exit stack: [V12, 0x12c, V385]

================================

Block 0x453
[0x453:0x454]
---
Predecessors: []
Successors: []
---
0x453 JUMPDEST
0x454 STOP
---
0x453: JUMPDEST 
0x454: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x455
[0x455:0x45b]
---
Predecessors: [0x101]
Successors: [0x45c, 0x460]
---
0x455 JUMPDEST
0x456 CALLVALUE
0x457 ISZERO
0x458 PUSH2 0x460
0x45b JUMPI
---
0x455: JUMPDEST 
0x456: V387 = CALLVALUE
0x457: V388 = ISZERO V387
0x458: V389 = 0x460
0x45b: JUMPI 0x460 V388
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x45c
[0x45c:0x45f]
---
Predecessors: [0x455]
Successors: []
---
0x45c PUSH1 0x0
0x45e DUP1
0x45f REVERT
---
0x45c: V390 = 0x0
0x45f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x460
[0x460:0x467]
---
Predecessors: [0x455]
Successors: [0xbb8]
---
0x460 JUMPDEST
0x461 PUSH2 0x468
0x464 PUSH2 0xbb8
0x467 JUMP
---
0x460: JUMPDEST 
0x461: V391 = 0x468
0x464: V392 = 0xbb8
0x467: JUMP 0xbb8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x468]
Exit stack: [V12, 0x468]

================================

Block 0x468
[0x468:0x47b]
---
Predecessors: [0xc43]
Successors: []
---
0x468 JUMPDEST
0x469 PUSH1 0x40
0x46b MLOAD
0x46c SWAP1
0x46d ISZERO
0x46e ISZERO
0x46f DUP2
0x470 MSTORE
0x471 PUSH1 0x20
0x473 ADD
0x474 PUSH1 0x40
0x476 MLOAD
0x477 DUP1
0x478 SWAP2
0x479 SUB
0x47a SWAP1
0x47b RETURN
---
0x468: JUMPDEST 
0x469: V393 = 0x40
0x46b: V394 = M[0x40]
0x46d: V395 = ISZERO S0
0x46e: V396 = ISZERO V395
0x470: M[V394] = V396
0x471: V397 = 0x20
0x473: V398 = ADD 0x20 V394
0x474: V399 = 0x40
0x476: V400 = M[0x40]
0x479: V401 = SUB V398 V400
0x47b: RETURN V400 V401
---
Entry stack: [V12, 0x12c, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12c, S1]

================================

Block 0x47c
[0x47c:0x482]
---
Predecessors: [0x10c]
Successors: [0x483, 0x487]
---
0x47c JUMPDEST
0x47d CALLVALUE
0x47e ISZERO
0x47f PUSH2 0x487
0x482 JUMPI
---
0x47c: JUMPDEST 
0x47d: V402 = CALLVALUE
0x47e: V403 = ISZERO V402
0x47f: V404 = 0x487
0x482: JUMPI 0x487 V403
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x483
[0x483:0x486]
---
Predecessors: [0x47c]
Successors: []
---
0x483 PUSH1 0x0
0x485 DUP1
0x486 REVERT
---
0x483: V405 = 0x0
0x486: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x487
[0x487:0x49a]
---
Predecessors: [0x47c]
Successors: [0xc48]
---
0x487 JUMPDEST
0x488 PUSH2 0x12c
0x48b PUSH1 0x1
0x48d PUSH1 0xa0
0x48f PUSH1 0x2
0x491 EXP
0x492 SUB
0x493 PUSH1 0x4
0x495 CALLDATALOAD
0x496 AND
0x497 PUSH2 0xc48
0x49a JUMP
---
0x487: JUMPDEST 
0x488: V406 = 0x12c
0x48b: V407 = 0x1
0x48d: V408 = 0xa0
0x48f: V409 = 0x2
0x491: V410 = EXP 0x2 0xa0
0x492: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x493: V412 = 0x4
0x495: V413 = CALLDATALOAD 0x4
0x496: V414 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x497: V415 = 0xc48
0x49a: JUMP 0xc48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12c, V414]
Exit stack: [V12, 0x12c, V414]

================================

Block 0x49b
[0x49b:0x49c]
---
Predecessors: []
Successors: []
---
0x49b JUMPDEST
0x49c STOP
---
0x49b: JUMPDEST 
0x49c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x49d
[0x49d:0x4a3]
---
Predecessors: [0x117]
Successors: [0x4a4, 0x4a8]
---
0x49d JUMPDEST
0x49e CALLVALUE
0x49f ISZERO
0x4a0 PUSH2 0x4a8
0x4a3 JUMPI
---
0x49d: JUMPDEST 
0x49e: V416 = CALLVALUE
0x49f: V417 = ISZERO V416
0x4a0: V418 = 0x4a8
0x4a3: JUMPI 0x4a8 V417
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a4
[0x4a4:0x4a7]
---
Predecessors: [0x49d]
Successors: []
---
0x4a4 PUSH1 0x0
0x4a6 DUP1
0x4a7 REVERT
---
0x4a4: V419 = 0x0
0x4a7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a8
[0x4a8:0x4af]
---
Predecessors: [0x49d]
Successors: [0xca0]
---
0x4a8 JUMPDEST
0x4a9 PUSH2 0x142
0x4ac PUSH2 0xca0
0x4af JUMP
---
0x4a8: JUMPDEST 
0x4a9: V420 = 0x142
0x4ac: V421 = 0xca0
0x4af: JUMP 0xca0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x4b0
[0x4b0:0x4cb]
---
Predecessors: []
Successors: []
---
0x4b0 JUMPDEST
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 PUSH1 0x2
0x4ba EXP
0x4bb SUB
0x4bc SWAP1
0x4bd SWAP2
0x4be AND
0x4bf DUP2
0x4c0 MSTORE
0x4c1 PUSH1 0x20
0x4c3 ADD
0x4c4 PUSH1 0x40
0x4c6 MLOAD
0x4c7 DUP1
0x4c8 SWAP2
0x4c9 SUB
0x4ca SWAP1
0x4cb RETURN
---
0x4b0: JUMPDEST 
0x4b1: V422 = 0x40
0x4b3: V423 = M[0x40]
0x4b4: V424 = 0x1
0x4b6: V425 = 0xa0
0x4b8: V426 = 0x2
0x4ba: V427 = EXP 0x2 0xa0
0x4bb: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4be: V429 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4c0: M[V423] = V429
0x4c1: V430 = 0x20
0x4c3: V431 = ADD 0x20 V423
0x4c4: V432 = 0x40
0x4c6: V433 = M[0x40]
0x4c9: V434 = SUB V431 V433
0x4cb: RETURN V433 V434
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4cc
[0x4cc:0x4db]
---
Predecessors: [0x123, 0x43f]
Successors: [0x4dc, 0x4e0]
---
0x4cc JUMPDEST
0x4cd PUSH1 0x0
0x4cf DUP1
0x4d0 PUSH1 0x2
0x4d2 SLOAD
0x4d3 TIMESTAMP
0x4d4 LT
0x4d5 ISZERO
0x4d6 ISZERO
0x4d7 ISZERO
0x4d8 PUSH2 0x4e0
0x4db JUMPI
---
0x4cc: JUMPDEST 
0x4cd: V435 = 0x0
0x4d0: V436 = 0x2
0x4d2: V437 = S[0x2]
0x4d3: V438 = TIMESTAMP
0x4d4: V439 = LT V438 V437
0x4d5: V440 = ISZERO V439
0x4d6: V441 = ISZERO V440
0x4d7: V442 = ISZERO V441
0x4d8: V443 = 0x4e0
0x4db: JUMPI 0x4e0 V442
---
Entry stack: [V12, 0x12c, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x12c, S0, 0x0, 0x0]

================================

Block 0x4dc
[0x4dc:0x4df]
---
Predecessors: [0x4cc]
Successors: []
---
0x4dc PUSH1 0x0
0x4de DUP1
0x4df REVERT
---
0x4dc: V444 = 0x0
0x4df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, 0x0, 0x0]

================================

Block 0x4e0
[0x4e0:0x4ea]
---
Predecessors: [0x4cc]
Successors: [0x4eb, 0x4ef]
---
0x4e0 JUMPDEST
0x4e1 PUSH1 0x4
0x4e3 SLOAD
0x4e4 TIMESTAMP
0x4e5 GT
0x4e6 ISZERO
0x4e7 PUSH2 0x4ef
0x4ea JUMPI
---
0x4e0: JUMPDEST 
0x4e1: V445 = 0x4
0x4e3: V446 = S[0x4]
0x4e4: V447 = TIMESTAMP
0x4e5: V448 = GT V447 V446
0x4e6: V449 = ISZERO V448
0x4e7: V450 = 0x4ef
0x4ea: JUMPI 0x4ef V449
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, 0x0, 0x0]

================================

Block 0x4eb
[0x4eb:0x4ee]
---
Predecessors: [0x4e0]
Successors: []
---
0x4eb PUSH1 0x0
0x4ed DUP1
0x4ee REVERT
---
0x4eb: V451 = 0x0
0x4ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, 0x0, 0x0]

================================

Block 0x4ef
[0x4ef:0x4f9]
---
Predecessors: [0x4e0]
Successors: [0x4fa, 0x4fe]
---
0x4ef JUMPDEST
0x4f0 PUSH1 0xe
0x4f2 SLOAD
0x4f3 CALLVALUE
0x4f4 LT
0x4f5 ISZERO
0x4f6 PUSH2 0x4fe
0x4f9 JUMPI
---
0x4ef: JUMPDEST 
0x4f0: V452 = 0xe
0x4f2: V453 = S[0xe]
0x4f3: V454 = CALLVALUE
0x4f4: V455 = LT V454 V453
0x4f5: V456 = ISZERO V455
0x4f6: V457 = 0x4fe
0x4f9: JUMPI 0x4fe V456
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, 0x0, 0x0]

================================

Block 0x4fa
[0x4fa:0x4fd]
---
Predecessors: [0x4ef]
Successors: []
---
0x4fa PUSH1 0x0
0x4fc DUP1
0x4fd REVERT
---
0x4fa: V458 = 0x0
0x4fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, 0x0, 0x0]

================================

Block 0x4fe
[0x4fe:0x54b]
---
Predecessors: [0x4ef]
Successors: [0x54c, 0x550]
---
0x4fe JUMPDEST
0x4ff PUSH1 0x1
0x501 SLOAD
0x502 PUSH8 0xde0b6b3a7640000
0x50b SWAP1
0x50c PUSH1 0x1
0x50e PUSH1 0xa0
0x510 PUSH1 0x2
0x512 EXP
0x513 SUB
0x514 AND
0x515 PUSH4 0x18160ddd
0x51a PUSH1 0x0
0x51c PUSH1 0x40
0x51e MLOAD
0x51f PUSH1 0x20
0x521 ADD
0x522 MSTORE
0x523 PUSH1 0x40
0x525 MLOAD
0x526 DUP2
0x527 PUSH4 0xffffffff
0x52c AND
0x52d PUSH1 0xe0
0x52f PUSH1 0x2
0x531 EXP
0x532 MUL
0x533 DUP2
0x534 MSTORE
0x535 PUSH1 0x4
0x537 ADD
0x538 PUSH1 0x20
0x53a PUSH1 0x40
0x53c MLOAD
0x53d DUP1
0x53e DUP4
0x53f SUB
0x540 DUP2
0x541 PUSH1 0x0
0x543 DUP8
0x544 DUP1
0x545 EXTCODESIZE
0x546 ISZERO
0x547 ISZERO
0x548 PUSH2 0x550
0x54b JUMPI
---
0x4fe: JUMPDEST 
0x4ff: V459 = 0x1
0x501: V460 = S[0x1]
0x502: V461 = 0xde0b6b3a7640000
0x50c: V462 = 0x1
0x50e: V463 = 0xa0
0x510: V464 = 0x2
0x512: V465 = EXP 0x2 0xa0
0x513: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x514: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x515: V468 = 0x18160ddd
0x51a: V469 = 0x0
0x51c: V470 = 0x40
0x51e: V471 = M[0x40]
0x51f: V472 = 0x20
0x521: V473 = ADD 0x20 V471
0x522: M[V473] = 0x0
0x523: V474 = 0x40
0x525: V475 = M[0x40]
0x527: V476 = 0xffffffff
0x52c: V477 = AND 0xffffffff 0x18160ddd
0x52d: V478 = 0xe0
0x52f: V479 = 0x2
0x531: V480 = EXP 0x2 0xe0
0x532: V481 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x534: M[V475] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x535: V482 = 0x4
0x537: V483 = ADD 0x4 V475
0x538: V484 = 0x20
0x53a: V485 = 0x40
0x53c: V486 = M[0x40]
0x53f: V487 = SUB V483 V486
0x541: V488 = 0x0
0x545: V489 = EXTCODESIZE V467
0x546: V490 = ISZERO V489
0x547: V491 = ISZERO V490
0x548: V492 = 0x550
0x54b: JUMPI 0x550 V491
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xde0b6b3a7640000, V467, 0x18160ddd, V483, 0x20, V486, V487, V486, 0x0, V467]
Exit stack: [V12, 0x12c, S2, 0x0, 0x0, 0xde0b6b3a7640000, V467, 0x18160ddd, V483, 0x20, V486, V487, V486, 0x0, V467]

================================

Block 0x54c
[0x54c:0x54f]
---
Predecessors: [0x4fe]
Successors: []
---
0x54c PUSH1 0x0
0x54e DUP1
0x54f REVERT
---
0x54c: V493 = 0x0
0x54f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S12, 0x0, 0x0, 0xde0b6b3a7640000, V467, 0x18160ddd, V483, 0x20, V486, V487, V486, 0x0, V467]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S12, 0x0, 0x0, 0xde0b6b3a7640000, V467, 0x18160ddd, V483, 0x20, V486, V487, V486, 0x0, V467]

================================

Block 0x550
[0x550:0x55c]
---
Predecessors: [0x4fe]
Successors: [0x55d, 0x561]
---
0x550 JUMPDEST
0x551 PUSH2 0x2c6
0x554 GAS
0x555 SUB
0x556 CALL
0x557 ISZERO
0x558 ISZERO
0x559 PUSH2 0x561
0x55c JUMPI
---
0x550: JUMPDEST 
0x551: V494 = 0x2c6
0x554: V495 = GAS
0x555: V496 = SUB V495 0x2c6
0x556: V497 = CALL V496 V467 0x0 V486 V487 V486 0x20
0x557: V498 = ISZERO V497
0x558: V499 = ISZERO V498
0x559: V500 = 0x561
0x55c: JUMPI 0x561 V499
---
Entry stack: [V12, 0x12c, S12, 0x0, 0x0, 0xde0b6b3a7640000, V467, 0x18160ddd, V483, 0x20, V486, V487, V486, 0x0, V467]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, S12, 0x0, 0x0, 0xde0b6b3a7640000, V467, 0x18160ddd, V483]

================================

Block 0x55d
[0x55d:0x560]
---
Predecessors: [0x550]
Successors: []
---
0x55d PUSH1 0x0
0x55f DUP1
0x560 REVERT
---
0x55d: V501 = 0x0
0x560: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S6, 0x0, 0x0, 0xde0b6b3a7640000, V467, 0x18160ddd, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S6, 0x0, 0x0, 0xde0b6b3a7640000, V467, 0x18160ddd, V483]

================================

Block 0x561
[0x561:0x576]
---
Predecessors: [0x550]
Successors: [0x577, 0x57b]
---
0x561 JUMPDEST
0x562 POP
0x563 POP
0x564 POP
0x565 PUSH1 0x40
0x567 MLOAD
0x568 DUP1
0x569 MLOAD
0x56a SWAP1
0x56b POP
0x56c PUSH1 0xf
0x56e SLOAD
0x56f SUB
0x570 GT
0x571 ISZERO
0x572 ISZERO
0x573 PUSH2 0x57b
0x576 JUMPI
---
0x561: JUMPDEST 
0x565: V502 = 0x40
0x567: V503 = M[0x40]
0x569: V504 = M[V503]
0x56c: V505 = 0xf
0x56e: V506 = S[0xf]
0x56f: V507 = SUB V506 V504
0x570: V508 = GT V507 0xde0b6b3a7640000
0x571: V509 = ISZERO V508
0x572: V510 = ISZERO V509
0x573: V511 = 0x57b
0x576: JUMPI 0x57b V510
---
Entry stack: [V12, 0x12c, S6, 0x0, 0x0, 0xde0b6b3a7640000, V467, 0x18160ddd, V483]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x12c, S6, 0x0, 0x0]

================================

Block 0x577
[0x577:0x57a]
---
Predecessors: [0x561]
Successors: []
---
0x577 PUSH1 0x0
0x579 DUP1
0x57a REVERT
---
0x577: V512 = 0x0
0x57a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, 0x0, 0x0]

================================

Block 0x57b
[0x57b:0x58b]
---
Predecessors: [0x561]
Successors: [0x58c, 0x590]
---
0x57b JUMPDEST
0x57c PUSH1 0x1
0x57e PUSH1 0xa0
0x580 PUSH1 0x2
0x582 EXP
0x583 SUB
0x584 DUP4
0x585 AND
0x586 ISZERO
0x587 ISZERO
0x588 PUSH2 0x590
0x58b JUMPI
---
0x57b: JUMPDEST 
0x57c: V513 = 0x1
0x57e: V514 = 0xa0
0x580: V515 = 0x2
0x582: V516 = EXP 0x2 0xa0
0x583: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x585: V518 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x586: V519 = ISZERO V518
0x587: V520 = ISZERO V519
0x588: V521 = 0x590
0x58b: JUMPI 0x590 V520
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x12c, S2, 0x0, 0x0]

================================

Block 0x58c
[0x58c:0x58f]
---
Predecessors: [0x57b]
Successors: []
---
0x58c PUSH1 0x0
0x58e DUP1
0x58f REVERT
---
0x58c: V522 = 0x0
0x58f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, 0x0, 0x0]

================================

Block 0x590
[0x590:0x59d]
---
Predecessors: [0x57b]
Successors: [0x59e, 0x5a8]
---
0x590 JUMPDEST
0x591 CALLVALUE
0x592 SWAP2
0x593 POP
0x594 PUSH1 0x3
0x596 SLOAD
0x597 TIMESTAMP
0x598 LT
0x599 ISZERO
0x59a PUSH2 0x5a8
0x59d JUMPI
---
0x590: JUMPDEST 
0x591: V523 = CALLVALUE
0x594: V524 = 0x3
0x596: V525 = S[0x3]
0x597: V526 = TIMESTAMP
0x598: V527 = LT V526 V525
0x599: V528 = ISZERO V527
0x59a: V529 = 0x5a8
0x59d: JUMPI 0x5a8 V528
---
Entry stack: [V12, 0x12c, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V523, S0]
Exit stack: [V12, 0x12c, S2, V523, 0x0]

================================

Block 0x59e
[0x59e:0x5a7]
---
Predecessors: [0x590]
Successors: [0x5af]
---
0x59e PUSH1 0xb
0x5a0 SLOAD
0x5a1 PUSH1 0xa
0x5a3 SSTORE
0x5a4 PUSH2 0x5af
0x5a7 JUMP
---
0x59e: V530 = 0xb
0x5a0: V531 = S[0xb]
0x5a1: V532 = 0xa
0x5a3: S[0xa] = V531
0x5a4: V533 = 0x5af
0x5a7: JUMP 0x5af
---
Entry stack: [V12, 0x12c, S2, V523, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, V523, 0x0]

================================

Block 0x5a8
[0x5a8:0x5ae]
---
Predecessors: [0x590]
Successors: [0x5af]
---
0x5a8 JUMPDEST
0x5a9 PUSH1 0xc
0x5ab SLOAD
0x5ac PUSH1 0xa
0x5ae SSTORE
---
0x5a8: JUMPDEST 
0x5a9: V534 = 0xc
0x5ab: V535 = S[0xc]
0x5ac: V536 = 0xa
0x5ae: S[0xa] = V535
---
Entry stack: [V12, 0x12c, S2, V523, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, V523, 0x0]

================================

Block 0x5af
[0x5af:0x5c2]
---
Predecessors: [0x59e, 0x5a8]
Successors: [0xcaf]
---
0x5af JUMPDEST
0x5b0 PUSH1 0xa
0x5b2 SLOAD
0x5b3 PUSH2 0x5c3
0x5b6 SWAP1
0x5b7 DUP4
0x5b8 SWAP1
0x5b9 PUSH4 0xffffffff
0x5be PUSH2 0xcaf
0x5c1 AND
0x5c2 JUMP
---
0x5af: JUMPDEST 
0x5b0: V537 = 0xa
0x5b2: V538 = S[0xa]
0x5b3: V539 = 0x5c3
0x5b9: V540 = 0xffffffff
0x5be: V541 = 0xcaf
0x5c1: V542 = AND 0xcaf 0xffffffff
0x5c2: JUMP 0xcaf
---
Entry stack: [V12, 0x12c, S2, V523, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x5c3, S1, V538]
Exit stack: [V12, 0x12c, S2, V523, 0x0, 0x5c3, V523, V538]

================================

Block 0x5c3
[0x5c3:0x60f]
---
Predecessors: [0xcd7]
Successors: [0x610, 0x614]
---
0x5c3 JUMPDEST
0x5c4 PUSH1 0xf
0x5c6 SLOAD
0x5c7 PUSH1 0x1
0x5c9 SLOAD
0x5ca SWAP2
0x5cb SWAP3
0x5cc POP
0x5cd SWAP1
0x5ce DUP3
0x5cf SWAP1
0x5d0 PUSH1 0x1
0x5d2 PUSH1 0xa0
0x5d4 PUSH1 0x2
0x5d6 EXP
0x5d7 SUB
0x5d8 AND
0x5d9 PUSH4 0x18160ddd
0x5de PUSH1 0x0
0x5e0 PUSH1 0x40
0x5e2 MLOAD
0x5e3 PUSH1 0x20
0x5e5 ADD
0x5e6 MSTORE
0x5e7 PUSH1 0x40
0x5e9 MLOAD
0x5ea DUP2
0x5eb PUSH4 0xffffffff
0x5f0 AND
0x5f1 PUSH1 0xe0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 MUL
0x5f7 DUP2
0x5f8 MSTORE
0x5f9 PUSH1 0x4
0x5fb ADD
0x5fc PUSH1 0x20
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 DUP1
0x602 DUP4
0x603 SUB
0x604 DUP2
0x605 PUSH1 0x0
0x607 DUP8
0x608 DUP1
0x609 EXTCODESIZE
0x60a ISZERO
0x60b ISZERO
0x60c PUSH2 0x614
0x60f JUMPI
---
0x5c3: JUMPDEST 
0x5c4: V543 = 0xf
0x5c6: V544 = S[0xf]
0x5c7: V545 = 0x1
0x5c9: V546 = S[0x1]
0x5d0: V547 = 0x1
0x5d2: V548 = 0xa0
0x5d4: V549 = 0x2
0x5d6: V550 = EXP 0x2 0xa0
0x5d7: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d8: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x5d9: V553 = 0x18160ddd
0x5de: V554 = 0x0
0x5e0: V555 = 0x40
0x5e2: V556 = M[0x40]
0x5e3: V557 = 0x20
0x5e5: V558 = ADD 0x20 V556
0x5e6: M[V558] = 0x0
0x5e7: V559 = 0x40
0x5e9: V560 = M[0x40]
0x5eb: V561 = 0xffffffff
0x5f0: V562 = AND 0xffffffff 0x18160ddd
0x5f1: V563 = 0xe0
0x5f3: V564 = 0x2
0x5f5: V565 = EXP 0x2 0xe0
0x5f6: V566 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x5f8: M[V560] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x5f9: V567 = 0x4
0x5fb: V568 = ADD 0x4 V560
0x5fc: V569 = 0x20
0x5fe: V570 = 0x40
0x600: V571 = M[0x40]
0x603: V572 = SUB V568 V571
0x605: V573 = 0x0
0x609: V574 = EXTCODESIZE V552
0x60a: V575 = ISZERO V574
0x60b: V576 = ISZERO V575
0x60c: V577 = 0x614
0x60f: JUMPI 0x614 V576
---
Entry stack: [V12, 0x12c, S3, V523, S1, S0]
Stack pops: 2
Stack additions: [S0, V544, S0, V552, 0x18160ddd, V568, 0x20, V571, V572, V571, 0x0, V552]
Exit stack: [V12, 0x12c, S3, V523, S0, V544, S0, V552, 0x18160ddd, V568, 0x20, V571, V572, V571, 0x0, V552]

================================

Block 0x610
[0x610:0x613]
---
Predecessors: [0x5c3]
Successors: []
---
0x610 PUSH1 0x0
0x612 DUP1
0x613 REVERT
---
0x610: V578 = 0x0
0x613: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S13, V523, S11, V544, S9, V552, 0x18160ddd, V568, 0x20, V571, V572, V571, 0x0, V552]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S13, V523, S11, V544, S9, V552, 0x18160ddd, V568, 0x20, V571, V572, V571, 0x0, V552]

================================

Block 0x614
[0x614:0x620]
---
Predecessors: [0x5c3]
Successors: [0x621, 0x625]
---
0x614 JUMPDEST
0x615 PUSH2 0x2c6
0x618 GAS
0x619 SUB
0x61a CALL
0x61b ISZERO
0x61c ISZERO
0x61d PUSH2 0x625
0x620 JUMPI
---
0x614: JUMPDEST 
0x615: V579 = 0x2c6
0x618: V580 = GAS
0x619: V581 = SUB V580 0x2c6
0x61a: V582 = CALL V581 V552 0x0 V571 V572 V571 0x20
0x61b: V583 = ISZERO V582
0x61c: V584 = ISZERO V583
0x61d: V585 = 0x625
0x620: JUMPI 0x625 V584
---
Entry stack: [V12, 0x12c, S13, V523, S11, V544, S9, V552, 0x18160ddd, V568, 0x20, V571, V572, V571, 0x0, V552]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, S13, V523, S11, V544, S9, V552, 0x18160ddd, V568]

================================

Block 0x621
[0x621:0x624]
---
Predecessors: [0x614]
Successors: []
---
0x621 PUSH1 0x0
0x623 DUP1
0x624 REVERT
---
0x621: V586 = 0x0
0x624: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S7, V523, S5, V544, S3, V552, 0x18160ddd, V568]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S7, V523, S5, V544, S3, V552, 0x18160ddd, V568]

================================

Block 0x625
[0x625:0x638]
---
Predecessors: [0x614]
Successors: [0x639, 0x63d]
---
0x625 JUMPDEST
0x626 POP
0x627 POP
0x628 POP
0x629 PUSH1 0x40
0x62b MLOAD
0x62c DUP1
0x62d MLOAD
0x62e SWAP1
0x62f POP
0x630 ADD
0x631 GT
0x632 ISZERO
0x633 ISZERO
0x634 ISZERO
0x635 PUSH2 0x63d
0x638 JUMPI
---
0x625: JUMPDEST 
0x629: V587 = 0x40
0x62b: V588 = M[0x40]
0x62d: V589 = M[V588]
0x630: V590 = ADD V589 S3
0x631: V591 = GT V590 V544
0x632: V592 = ISZERO V591
0x633: V593 = ISZERO V592
0x634: V594 = ISZERO V593
0x635: V595 = 0x63d
0x638: JUMPI 0x63d V594
---
Entry stack: [V12, 0x12c, S7, V523, S5, V544, S3, V552, 0x18160ddd, V568]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x12c, S7, V523, S5]

================================

Block 0x639
[0x639:0x63c]
---
Predecessors: [0x625]
Successors: []
---
0x639 PUSH1 0x0
0x63b DUP1
0x63c REVERT
---
0x639: V596 = 0x0
0x63c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S2, V523, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, V523, S0]

================================

Block 0x63d
[0x63d:0x64f]
---
Predecessors: [0x625]
Successors: [0xcde]
---
0x63d JUMPDEST
0x63e PUSH1 0xd
0x640 SLOAD
0x641 PUSH2 0x650
0x644 SWAP1
0x645 DUP4
0x646 PUSH4 0xffffffff
0x64b PUSH2 0xcde
0x64e AND
0x64f JUMP
---
0x63d: JUMPDEST 
0x63e: V597 = 0xd
0x640: V598 = S[0xd]
0x641: V599 = 0x650
0x646: V600 = 0xffffffff
0x64b: V601 = 0xcde
0x64e: V602 = AND 0xcde 0xffffffff
0x64f: JUMP 0xcde
---
Entry stack: [V12, 0x12c, S2, V523, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x650, V598, S1]
Exit stack: [V12, 0x12c, S2, V523, S0, 0x650, V598, V523]

================================

Block 0x650
[0x650:0x6ad]
---
Predecessors: [0xcd7]
Successors: [0x6ae, 0x6b2]
---
0x650 JUMPDEST
0x651 PUSH1 0xd
0x653 SSTORE
0x654 PUSH1 0x1
0x656 SLOAD
0x657 PUSH1 0x1
0x659 PUSH1 0xa0
0x65b PUSH1 0x2
0x65d EXP
0x65e SUB
0x65f AND
0x660 PUSH4 0x40c10f19
0x665 DUP5
0x666 DUP4
0x667 PUSH1 0x0
0x669 PUSH1 0x40
0x66b MLOAD
0x66c PUSH1 0x20
0x66e ADD
0x66f MSTORE
0x670 PUSH1 0x40
0x672 MLOAD
0x673 PUSH1 0xe0
0x675 PUSH1 0x2
0x677 EXP
0x678 PUSH4 0xffffffff
0x67d DUP6
0x67e AND
0x67f MUL
0x680 DUP2
0x681 MSTORE
0x682 PUSH1 0x1
0x684 PUSH1 0xa0
0x686 PUSH1 0x2
0x688 EXP
0x689 SUB
0x68a SWAP1
0x68b SWAP3
0x68c AND
0x68d PUSH1 0x4
0x68f DUP4
0x690 ADD
0x691 MSTORE
0x692 PUSH1 0x24
0x694 DUP3
0x695 ADD
0x696 MSTORE
0x697 PUSH1 0x44
0x699 ADD
0x69a PUSH1 0x20
0x69c PUSH1 0x40
0x69e MLOAD
0x69f DUP1
0x6a0 DUP4
0x6a1 SUB
0x6a2 DUP2
0x6a3 PUSH1 0x0
0x6a5 DUP8
0x6a6 DUP1
0x6a7 EXTCODESIZE
0x6a8 ISZERO
0x6a9 ISZERO
0x6aa PUSH2 0x6b2
0x6ad JUMPI
---
0x650: JUMPDEST 
0x651: V603 = 0xd
0x653: S[0xd] = S0
0x654: V604 = 0x1
0x656: V605 = S[0x1]
0x657: V606 = 0x1
0x659: V607 = 0xa0
0x65b: V608 = 0x2
0x65d: V609 = EXP 0x2 0xa0
0x65e: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65f: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x660: V612 = 0x40c10f19
0x667: V613 = 0x0
0x669: V614 = 0x40
0x66b: V615 = M[0x40]
0x66c: V616 = 0x20
0x66e: V617 = ADD 0x20 V615
0x66f: M[V617] = 0x0
0x670: V618 = 0x40
0x672: V619 = M[0x40]
0x673: V620 = 0xe0
0x675: V621 = 0x2
0x677: V622 = EXP 0x2 0xe0
0x678: V623 = 0xffffffff
0x67e: V624 = AND 0x40c10f19 0xffffffff
0x67f: V625 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x681: M[V619] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x682: V626 = 0x1
0x684: V627 = 0xa0
0x686: V628 = 0x2
0x688: V629 = EXP 0x2 0xa0
0x689: V630 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68c: V631 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x68d: V632 = 0x4
0x690: V633 = ADD V619 0x4
0x691: M[V633] = V631
0x692: V634 = 0x24
0x695: V635 = ADD V619 0x24
0x696: M[V635] = S1
0x697: V636 = 0x44
0x699: V637 = ADD 0x44 V619
0x69a: V638 = 0x20
0x69c: V639 = 0x40
0x69e: V640 = M[0x40]
0x6a1: V641 = SUB V637 V640
0x6a3: V642 = 0x0
0x6a7: V643 = EXTCODESIZE V611
0x6a8: V644 = ISZERO V643
0x6a9: V645 = ISZERO V644
0x6aa: V646 = 0x6b2
0x6ad: JUMPI 0x6b2 V645
---
Entry stack: [V12, 0x12c, S3, V523, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V611, 0x40c10f19, V637, 0x20, V640, V641, V640, 0x0, V611]
Exit stack: [V12, 0x12c, S3, V523, S1, V611, 0x40c10f19, V637, 0x20, V640, V641, V640, 0x0, V611]

================================

Block 0x6ae
[0x6ae:0x6b1]
---
Predecessors: [0x650]
Successors: []
---
0x6ae PUSH1 0x0
0x6b0 DUP1
0x6b1 REVERT
---
0x6ae: V647 = 0x0
0x6b1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S11, V523, S9, V611, 0x40c10f19, V637, 0x20, V640, V641, V640, 0x0, V611]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S11, V523, S9, V611, 0x40c10f19, V637, 0x20, V640, V641, V640, 0x0, V611]

================================

Block 0x6b2
[0x6b2:0x6be]
---
Predecessors: [0x650]
Successors: [0x6bf, 0x6c3]
---
0x6b2 JUMPDEST
0x6b3 PUSH2 0x2c6
0x6b6 GAS
0x6b7 SUB
0x6b8 CALL
0x6b9 ISZERO
0x6ba ISZERO
0x6bb PUSH2 0x6c3
0x6be JUMPI
---
0x6b2: JUMPDEST 
0x6b3: V648 = 0x2c6
0x6b6: V649 = GAS
0x6b7: V650 = SUB V649 0x2c6
0x6b8: V651 = CALL V650 V611 0x0 V640 V641 V640 0x20
0x6b9: V652 = ISZERO V651
0x6ba: V653 = ISZERO V652
0x6bb: V654 = 0x6c3
0x6be: JUMPI 0x6c3 V653
---
Entry stack: [V12, 0x12c, S11, V523, S9, V611, 0x40c10f19, V637, 0x20, V640, V641, V640, 0x0, V611]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, S11, V523, S9, V611, 0x40c10f19, V637]

================================

Block 0x6bf
[0x6bf:0x6c2]
---
Predecessors: [0x6b2]
Successors: []
---
0x6bf PUSH1 0x0
0x6c1 DUP1
0x6c2 REVERT
---
0x6bf: V655 = 0x0
0x6c2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S5, V523, S3, V611, 0x40c10f19, V637]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S5, V523, S3, V611, 0x40c10f19, V637]

================================

Block 0x6c3
[0x6c3:0x74b]
---
Predecessors: [0x6b2]
Successors: [0x74c, 0x750]
---
0x6c3 JUMPDEST
0x6c4 POP
0x6c5 POP
0x6c6 POP
0x6c7 PUSH1 0x40
0x6c9 MLOAD
0x6ca DUP1
0x6cb MLOAD
0x6cc SWAP1
0x6cd POP
0x6ce POP
0x6cf DUP3
0x6d0 PUSH1 0x1
0x6d2 PUSH1 0xa0
0x6d4 PUSH1 0x2
0x6d6 EXP
0x6d7 SUB
0x6d8 AND
0x6d9 CALLER
0x6da PUSH1 0x1
0x6dc PUSH1 0xa0
0x6de PUSH1 0x2
0x6e0 EXP
0x6e1 SUB
0x6e2 AND
0x6e3 PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x704 DUP5
0x705 DUP5
0x706 PUSH1 0x40
0x708 MLOAD
0x709 SWAP2
0x70a DUP3
0x70b MSTORE
0x70c PUSH1 0x20
0x70e DUP3
0x70f ADD
0x710 MSTORE
0x711 PUSH1 0x40
0x713 SWAP1
0x714 DUP2
0x715 ADD
0x716 SWAP1
0x717 MLOAD
0x718 DUP1
0x719 SWAP2
0x71a SUB
0x71b SWAP1
0x71c LOG3
0x71d PUSH1 0x5
0x71f SLOAD
0x720 PUSH1 0x1
0x722 PUSH1 0xa0
0x724 PUSH1 0x2
0x726 EXP
0x727 SUB
0x728 AND
0x729 CALLVALUE
0x72a DUP1
0x72b ISZERO
0x72c PUSH2 0x8fc
0x72f MUL
0x730 SWAP1
0x731 PUSH1 0x40
0x733 MLOAD
0x734 PUSH1 0x0
0x736 PUSH1 0x40
0x738 MLOAD
0x739 DUP1
0x73a DUP4
0x73b SUB
0x73c DUP2
0x73d DUP6
0x73e DUP9
0x73f DUP9
0x740 CALL
0x741 SWAP4
0x742 POP
0x743 POP
0x744 POP
0x745 POP
0x746 ISZERO
0x747 ISZERO
0x748 PUSH2 0x750
0x74b JUMPI
---
0x6c3: JUMPDEST 
0x6c7: V656 = 0x40
0x6c9: V657 = M[0x40]
0x6cb: V658 = M[V657]
0x6d0: V659 = 0x1
0x6d2: V660 = 0xa0
0x6d4: V661 = 0x2
0x6d6: V662 = EXP 0x2 0xa0
0x6d7: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d8: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x6d9: V665 = CALLER
0x6da: V666 = 0x1
0x6dc: V667 = 0xa0
0x6de: V668 = 0x2
0x6e0: V669 = EXP 0x2 0xa0
0x6e1: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e2: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x6e3: V672 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x706: V673 = 0x40
0x708: V674 = M[0x40]
0x70b: M[V674] = V523
0x70c: V675 = 0x20
0x70f: V676 = ADD V674 0x20
0x710: M[V676] = S3
0x711: V677 = 0x40
0x715: V678 = ADD 0x40 V674
0x717: V679 = M[0x40]
0x71a: V680 = SUB V678 V679
0x71c: LOG V679 V680 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V671 V664
0x71d: V681 = 0x5
0x71f: V682 = S[0x5]
0x720: V683 = 0x1
0x722: V684 = 0xa0
0x724: V685 = 0x2
0x726: V686 = EXP 0x2 0xa0
0x727: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x728: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V682
0x729: V689 = CALLVALUE
0x72b: V690 = ISZERO V689
0x72c: V691 = 0x8fc
0x72f: V692 = MUL 0x8fc V690
0x731: V693 = 0x40
0x733: V694 = M[0x40]
0x734: V695 = 0x0
0x736: V696 = 0x40
0x738: V697 = M[0x40]
0x73b: V698 = SUB V694 V697
0x740: V699 = CALL V692 V688 V689 V697 V698 V697 0x0
0x746: V700 = ISZERO V699
0x747: V701 = ISZERO V700
0x748: V702 = 0x750
0x74b: JUMPI 0x750 V701
---
Entry stack: [V12, 0x12c, S5, V523, S3, V611, 0x40c10f19, V637]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, 0x12c, S5, V523, S3]

================================

Block 0x74c
[0x74c:0x74f]
---
Predecessors: [0x6c3]
Successors: []
---
0x74c PUSH1 0x0
0x74e DUP1
0x74f REVERT
---
0x74c: V703 = 0x0
0x74f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S2, V523, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, V523, S0]

================================

Block 0x750
[0x750:0x750]
---
Predecessors: [0x6c3]
Successors: [0x751]
---
0x750 JUMPDEST
---
0x750: JUMPDEST 
---
Entry stack: [V12, 0x12c, S2, V523, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, V523, S0]

================================

Block 0x751
[0x751:0x751]
---
Predecessors: [0x750]
Successors: [0x752]
---
0x751 JUMPDEST
---
0x751: JUMPDEST 
---
Entry stack: [V12, 0x12c, S2, V523, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S2, V523, S0]

================================

Block 0x752
[0x752:0x756]
---
Predecessors: [0x751]
Successors: [0x12c]
---
0x752 JUMPDEST
0x753 POP
0x754 POP
0x755 POP
0x756 JUMP
---
0x752: JUMPDEST 
0x756: JUMP 0x12c
---
Entry stack: [V12, 0x12c, S2, V523, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x757
[0x757:0x765]
---
Predecessors: [0x13a]
Successors: [0x142]
---
0x757 JUMPDEST
0x758 PUSH1 0x9
0x75a SLOAD
0x75b PUSH1 0x1
0x75d PUSH1 0xa0
0x75f PUSH1 0x2
0x761 EXP
0x762 SUB
0x763 AND
0x764 DUP2
0x765 JUMP
---
0x757: JUMPDEST 
0x758: V704 = 0x9
0x75a: V705 = S[0x9]
0x75b: V706 = 0x1
0x75d: V707 = 0xa0
0x75f: V708 = 0x2
0x761: V709 = EXP 0x2 0xa0
0x762: V710 = SUB 0x10000000000000000000000000000000000000000 0x1
0x763: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0x765: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V711]
Exit stack: [V12, 0x142, V711]

================================

Block 0x766
[0x766:0x774]
---
Predecessors: [0x169]
Successors: [0x142]
---
0x766 JUMPDEST
0x767 PUSH1 0x5
0x769 SLOAD
0x76a PUSH1 0x1
0x76c PUSH1 0xa0
0x76e PUSH1 0x2
0x770 EXP
0x771 SUB
0x772 AND
0x773 DUP2
0x774 JUMP
---
0x766: JUMPDEST 
0x767: V712 = 0x5
0x769: V713 = S[0x5]
0x76a: V714 = 0x1
0x76c: V715 = 0xa0
0x76e: V716 = 0x2
0x770: V717 = EXP 0x2 0xa0
0x771: V718 = SUB 0x10000000000000000000000000000000000000000 0x1
0x772: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V713
0x774: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V719]
Exit stack: [V12, 0x142, V719]

================================

Block 0x775
[0x775:0x77a]
---
Predecessors: [0x198]
Successors: [0x1a0]
---
0x775 JUMPDEST
0x776 PUSH1 0xa
0x778 SLOAD
0x779 DUP2
0x77a JUMP
---
0x775: JUMPDEST 
0x776: V720 = 0xa
0x778: V721 = S[0xa]
0x77a: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V721]
Exit stack: [V12, 0x1a0, V721]

================================

Block 0x77b
[0x77b:0x780]
---
Predecessors: [0x1bd]
Successors: [0x1a0]
---
0x77b JUMPDEST
0x77c PUSH1 0xd
0x77e SLOAD
0x77f DUP2
0x780 JUMP
---
0x77b: JUMPDEST 
0x77c: V722 = 0xd
0x77e: V723 = S[0xd]
0x780: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V723]
Exit stack: [V12, 0x1a0, V723]

================================

Block 0x781
[0x781:0x78f]
---
Predecessors: [0x1e2]
Successors: [0x142]
---
0x781 JUMPDEST
0x782 PUSH1 0x7
0x784 SLOAD
0x785 PUSH1 0x1
0x787 PUSH1 0xa0
0x789 PUSH1 0x2
0x78b EXP
0x78c SUB
0x78d AND
0x78e DUP2
0x78f JUMP
---
0x781: JUMPDEST 
0x782: V724 = 0x7
0x784: V725 = S[0x7]
0x785: V726 = 0x1
0x787: V727 = 0xa0
0x789: V728 = 0x2
0x78b: V729 = EXP 0x2 0xa0
0x78c: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78d: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0x78f: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V731]
Exit stack: [V12, 0x142, V731]

================================

Block 0x790
[0x790:0x795]
---
Predecessors: [0x211]
Successors: [0x1a0]
---
0x790 JUMPDEST
0x791 PUSH1 0xb
0x793 SLOAD
0x794 DUP2
0x795 JUMP
---
0x790: JUMPDEST 
0x791: V732 = 0xb
0x793: V733 = S[0xb]
0x795: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V733]
Exit stack: [V12, 0x1a0, V733]

================================

Block 0x796
[0x796:0x79b]
---
Predecessors: [0x236]
Successors: [0x1a0]
---
0x796 JUMPDEST
0x797 PUSH1 0x12
0x799 SLOAD
0x79a DUP2
0x79b JUMP
---
0x796: JUMPDEST 
0x797: V734 = 0x12
0x799: V735 = S[0x12]
0x79b: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V735]
Exit stack: [V12, 0x1a0, V735]

================================

Block 0x79c
[0x79c:0x7a1]
---
Predecessors: [0x25b]
Successors: [0x1a0]
---
0x79c JUMPDEST
0x79d PUSH1 0x3
0x79f SLOAD
0x7a0 DUP2
0x7a1 JUMP
---
0x79c: JUMPDEST 
0x79d: V736 = 0x3
0x79f: V737 = S[0x3]
0x7a1: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V737]
Exit stack: [V12, 0x1a0, V737]

================================

Block 0x7a2
[0x7a2:0x7b9]
---
Predecessors: [0x280]
Successors: [0x7ba, 0x7be]
---
0x7a2 JUMPDEST
0x7a3 PUSH1 0x0
0x7a5 DUP1
0x7a6 SLOAD
0x7a7 CALLER
0x7a8 PUSH1 0x1
0x7aa PUSH1 0xa0
0x7ac PUSH1 0x2
0x7ae EXP
0x7af SUB
0x7b0 SWAP1
0x7b1 DUP2
0x7b2 AND
0x7b3 SWAP2
0x7b4 AND
0x7b5 EQ
0x7b6 PUSH2 0x7be
0x7b9 JUMPI
---
0x7a2: JUMPDEST 
0x7a3: V738 = 0x0
0x7a6: V739 = S[0x0]
0x7a7: V740 = CALLER
0x7a8: V741 = 0x1
0x7aa: V742 = 0xa0
0x7ac: V743 = 0x2
0x7ae: V744 = EXP 0x2 0xa0
0x7af: V745 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b2: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V740
0x7b4: V747 = AND V739 0xffffffffffffffffffffffffffffffffffffffff
0x7b5: V748 = EQ V747 V746
0x7b6: V749 = 0x7be
0x7b9: JUMPI 0x7be V748
---
Entry stack: [V12, 0x12c]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x12c, 0x0]

================================

Block 0x7ba
[0x7ba:0x7bd]
---
Predecessors: [0x7a2]
Successors: []
---
0x7ba PUSH1 0x0
0x7bc DUP1
0x7bd REVERT
---
0x7ba: V750 = 0x0
0x7bd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, 0x0]

================================

Block 0x7be
[0x7be:0x7c5]
---
Predecessors: [0x7a2]
Successors: [0xbb8]
---
0x7be JUMPDEST
0x7bf PUSH2 0x7c6
0x7c2 PUSH2 0xbb8
0x7c5 JUMP
---
0x7be: JUMPDEST 
0x7bf: V751 = 0x7c6
0x7c2: V752 = 0xbb8
0x7c5: JUMP 0xbb8
---
Entry stack: [V12, 0x12c, 0x0]
Stack pops: 0
Stack additions: [0x7c6]
Exit stack: [V12, 0x12c, 0x0, 0x7c6]

================================

Block 0x7c6
[0x7c6:0x7cc]
---
Predecessors: [0xc43]
Successors: [0x7cd, 0x7d1]
---
0x7c6 JUMPDEST
0x7c7 ISZERO
0x7c8 ISZERO
0x7c9 PUSH2 0x7d1
0x7cc JUMPI
---
0x7c6: JUMPDEST 
0x7c7: V753 = ISZERO S0
0x7c8: V754 = ISZERO V753
0x7c9: V755 = 0x7d1
0x7cc: JUMPI 0x7d1 V754
---
Entry stack: [V12, 0x12c, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12c, S1]

================================

Block 0x7cd
[0x7cd:0x7d0]
---
Predecessors: [0x7c6]
Successors: []
---
0x7cd PUSH1 0x0
0x7cf DUP1
0x7d0 REVERT
---
0x7cd: V756 = 0x0
0x7d0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S0]

================================

Block 0x7d1
[0x7d1:0x814]
---
Predecessors: [0x7c6]
Successors: [0x815, 0x819]
---
0x7d1 JUMPDEST
0x7d2 PUSH1 0x1
0x7d4 SLOAD
0x7d5 PUSH1 0x1
0x7d7 PUSH1 0xa0
0x7d9 PUSH1 0x2
0x7db EXP
0x7dc SUB
0x7dd AND
0x7de PUSH4 0x18160ddd
0x7e3 PUSH1 0x0
0x7e5 PUSH1 0x40
0x7e7 MLOAD
0x7e8 PUSH1 0x20
0x7ea ADD
0x7eb MSTORE
0x7ec PUSH1 0x40
0x7ee MLOAD
0x7ef DUP2
0x7f0 PUSH4 0xffffffff
0x7f5 AND
0x7f6 PUSH1 0xe0
0x7f8 PUSH1 0x2
0x7fa EXP
0x7fb MUL
0x7fc DUP2
0x7fd MSTORE
0x7fe PUSH1 0x4
0x800 ADD
0x801 PUSH1 0x20
0x803 PUSH1 0x40
0x805 MLOAD
0x806 DUP1
0x807 DUP4
0x808 SUB
0x809 DUP2
0x80a PUSH1 0x0
0x80c DUP8
0x80d DUP1
0x80e EXTCODESIZE
0x80f ISZERO
0x810 ISZERO
0x811 PUSH2 0x819
0x814 JUMPI
---
0x7d1: JUMPDEST 
0x7d2: V757 = 0x1
0x7d4: V758 = S[0x1]
0x7d5: V759 = 0x1
0x7d7: V760 = 0xa0
0x7d9: V761 = 0x2
0x7db: V762 = EXP 0x2 0xa0
0x7dc: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dd: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0x7de: V765 = 0x18160ddd
0x7e3: V766 = 0x0
0x7e5: V767 = 0x40
0x7e7: V768 = M[0x40]
0x7e8: V769 = 0x20
0x7ea: V770 = ADD 0x20 V768
0x7eb: M[V770] = 0x0
0x7ec: V771 = 0x40
0x7ee: V772 = M[0x40]
0x7f0: V773 = 0xffffffff
0x7f5: V774 = AND 0xffffffff 0x18160ddd
0x7f6: V775 = 0xe0
0x7f8: V776 = 0x2
0x7fa: V777 = EXP 0x2 0xe0
0x7fb: V778 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x7fd: M[V772] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x7fe: V779 = 0x4
0x800: V780 = ADD 0x4 V772
0x801: V781 = 0x20
0x803: V782 = 0x40
0x805: V783 = M[0x40]
0x808: V784 = SUB V780 V783
0x80a: V785 = 0x0
0x80e: V786 = EXTCODESIZE V764
0x80f: V787 = ISZERO V786
0x810: V788 = ISZERO V787
0x811: V789 = 0x819
0x814: JUMPI 0x819 V788
---
Entry stack: [V12, 0x12c, S0]
Stack pops: 0
Stack additions: [V764, 0x18160ddd, V780, 0x20, V783, V784, V783, 0x0, V764]
Exit stack: [V12, 0x12c, S0, V764, 0x18160ddd, V780, 0x20, V783, V784, V783, 0x0, V764]

================================

Block 0x815
[0x815:0x818]
---
Predecessors: [0x7d1]
Successors: []
---
0x815 PUSH1 0x0
0x817 DUP1
0x818 REVERT
---
0x815: V790 = 0x0
0x818: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S9, V764, 0x18160ddd, V780, 0x20, V783, V784, V783, 0x0, V764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S9, V764, 0x18160ddd, V780, 0x20, V783, V784, V783, 0x0, V764]

================================

Block 0x819
[0x819:0x825]
---
Predecessors: [0x7d1]
Successors: [0x826, 0x82a]
---
0x819 JUMPDEST
0x81a PUSH2 0x2c6
0x81d GAS
0x81e SUB
0x81f CALL
0x820 ISZERO
0x821 ISZERO
0x822 PUSH2 0x82a
0x825 JUMPI
---
0x819: JUMPDEST 
0x81a: V791 = 0x2c6
0x81d: V792 = GAS
0x81e: V793 = SUB V792 0x2c6
0x81f: V794 = CALL V793 V764 0x0 V783 V784 V783 0x20
0x820: V795 = ISZERO V794
0x821: V796 = ISZERO V795
0x822: V797 = 0x82a
0x825: JUMPI 0x82a V796
---
Entry stack: [V12, 0x12c, S9, V764, 0x18160ddd, V780, 0x20, V783, V784, V783, 0x0, V764]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, S9, V764, 0x18160ddd, V780]

================================

Block 0x826
[0x826:0x829]
---
Predecessors: [0x819]
Successors: []
---
0x826 PUSH1 0x0
0x828 DUP1
0x829 REVERT
---
0x826: V798 = 0x0
0x829: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S3, V764, 0x18160ddd, V780]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S3, V764, 0x18160ddd, V780]

================================

Block 0x82a
[0x82a:0x89b]
---
Predecessors: [0x819]
Successors: [0x89c, 0x8a0]
---
0x82a JUMPDEST
0x82b POP
0x82c POP
0x82d POP
0x82e PUSH1 0x40
0x830 MLOAD
0x831 DUP1
0x832 MLOAD
0x833 PUSH1 0x1
0x835 SLOAD
0x836 PUSH1 0x6
0x838 SLOAD
0x839 PUSH1 0x10
0x83b SLOAD
0x83c SWAP3
0x83d SWAP5
0x83e POP
0x83f PUSH1 0x1
0x841 PUSH1 0xa0
0x843 PUSH1 0x2
0x845 EXP
0x846 SUB
0x847 SWAP2
0x848 DUP3
0x849 AND
0x84a SWAP4
0x84b POP
0x84c PUSH4 0x40c10f19
0x851 SWAP3
0x852 SWAP2
0x853 AND
0x854 SWAP1
0x855 PUSH1 0x0
0x857 PUSH1 0x40
0x859 MLOAD
0x85a PUSH1 0x20
0x85c ADD
0x85d MSTORE
0x85e PUSH1 0x40
0x860 MLOAD
0x861 PUSH1 0xe0
0x863 PUSH1 0x2
0x865 EXP
0x866 PUSH4 0xffffffff
0x86b DUP6
0x86c AND
0x86d MUL
0x86e DUP2
0x86f MSTORE
0x870 PUSH1 0x1
0x872 PUSH1 0xa0
0x874 PUSH1 0x2
0x876 EXP
0x877 SUB
0x878 SWAP1
0x879 SWAP3
0x87a AND
0x87b PUSH1 0x4
0x87d DUP4
0x87e ADD
0x87f MSTORE
0x880 PUSH1 0x24
0x882 DUP3
0x883 ADD
0x884 MSTORE
0x885 PUSH1 0x44
0x887 ADD
0x888 PUSH1 0x20
0x88a PUSH1 0x40
0x88c MLOAD
0x88d DUP1
0x88e DUP4
0x88f SUB
0x890 DUP2
0x891 PUSH1 0x0
0x893 DUP8
0x894 DUP1
0x895 EXTCODESIZE
0x896 ISZERO
0x897 ISZERO
0x898 PUSH2 0x8a0
0x89b JUMPI
---
0x82a: JUMPDEST 
0x82e: V799 = 0x40
0x830: V800 = M[0x40]
0x832: V801 = M[V800]
0x833: V802 = 0x1
0x835: V803 = S[0x1]
0x836: V804 = 0x6
0x838: V805 = S[0x6]
0x839: V806 = 0x10
0x83b: V807 = S[0x10]
0x83f: V808 = 0x1
0x841: V809 = 0xa0
0x843: V810 = 0x2
0x845: V811 = EXP 0x2 0xa0
0x846: V812 = SUB 0x10000000000000000000000000000000000000000 0x1
0x849: V813 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0x84c: V814 = 0x40c10f19
0x853: V815 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0x855: V816 = 0x0
0x857: V817 = 0x40
0x859: V818 = M[0x40]
0x85a: V819 = 0x20
0x85c: V820 = ADD 0x20 V818
0x85d: M[V820] = 0x0
0x85e: V821 = 0x40
0x860: V822 = M[0x40]
0x861: V823 = 0xe0
0x863: V824 = 0x2
0x865: V825 = EXP 0x2 0xe0
0x866: V826 = 0xffffffff
0x86c: V827 = AND 0x40c10f19 0xffffffff
0x86d: V828 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x86f: M[V822] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x870: V829 = 0x1
0x872: V830 = 0xa0
0x874: V831 = 0x2
0x876: V832 = EXP 0x2 0xa0
0x877: V833 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87a: V834 = AND V815 0xffffffffffffffffffffffffffffffffffffffff
0x87b: V835 = 0x4
0x87e: V836 = ADD V822 0x4
0x87f: M[V836] = V834
0x880: V837 = 0x24
0x883: V838 = ADD V822 0x24
0x884: M[V838] = V807
0x885: V839 = 0x44
0x887: V840 = ADD 0x44 V822
0x888: V841 = 0x20
0x88a: V842 = 0x40
0x88c: V843 = M[0x40]
0x88f: V844 = SUB V840 V843
0x891: V845 = 0x0
0x895: V846 = EXTCODESIZE V813
0x896: V847 = ISZERO V846
0x897: V848 = ISZERO V847
0x898: V849 = 0x8a0
0x89b: JUMPI 0x8a0 V848
---
Entry stack: [V12, 0x12c, S3, V764, 0x18160ddd, V780]
Stack pops: 4
Stack additions: [V801, V813, 0x40c10f19, V840, 0x20, V843, V844, V843, 0x0, V813]
Exit stack: [V12, 0x12c, V801, V813, 0x40c10f19, V840, 0x20, V843, V844, V843, 0x0, V813]

================================

Block 0x89c
[0x89c:0x89f]
---
Predecessors: [0x82a]
Successors: []
---
0x89c PUSH1 0x0
0x89e DUP1
0x89f REVERT
---
0x89c: V850 = 0x0
0x89f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V813, 0x40c10f19, V840, 0x20, V843, V844, V843, 0x0, V813]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V813, 0x40c10f19, V840, 0x20, V843, V844, V843, 0x0, V813]

================================

Block 0x8a0
[0x8a0:0x8ac]
---
Predecessors: [0x82a]
Successors: [0x8ad, 0x8b1]
---
0x8a0 JUMPDEST
0x8a1 PUSH2 0x2c6
0x8a4 GAS
0x8a5 SUB
0x8a6 CALL
0x8a7 ISZERO
0x8a8 ISZERO
0x8a9 PUSH2 0x8b1
0x8ac JUMPI
---
0x8a0: JUMPDEST 
0x8a1: V851 = 0x2c6
0x8a4: V852 = GAS
0x8a5: V853 = SUB V852 0x2c6
0x8a6: V854 = CALL V853 V813 0x0 V843 V844 V843 0x20
0x8a7: V855 = ISZERO V854
0x8a8: V856 = ISZERO V855
0x8a9: V857 = 0x8b1
0x8ac: JUMPI 0x8b1 V856
---
Entry stack: [V12, 0x12c, V801, V813, 0x40c10f19, V840, 0x20, V843, V844, V843, 0x0, V813]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, V801, V813, 0x40c10f19, V840]

================================

Block 0x8ad
[0x8ad:0x8b0]
---
Predecessors: [0x8a0]
Successors: []
---
0x8ad PUSH1 0x0
0x8af DUP1
0x8b0 REVERT
---
0x8ad: V858 = 0x0
0x8b0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V813, 0x40c10f19, V840]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V813, 0x40c10f19, V840]

================================

Block 0x8b1
[0x8b1:0x91f]
---
Predecessors: [0x8a0]
Successors: [0x920, 0x924]
---
0x8b1 JUMPDEST
0x8b2 POP
0x8b3 POP
0x8b4 POP
0x8b5 PUSH1 0x40
0x8b7 MLOAD
0x8b8 DUP1
0x8b9 MLOAD
0x8ba POP
0x8bb POP
0x8bc PUSH1 0x1
0x8be SLOAD
0x8bf PUSH1 0x7
0x8c1 SLOAD
0x8c2 PUSH1 0x11
0x8c4 SLOAD
0x8c5 PUSH1 0x1
0x8c7 PUSH1 0xa0
0x8c9 PUSH1 0x2
0x8cb EXP
0x8cc SUB
0x8cd SWAP3
0x8ce DUP4
0x8cf AND
0x8d0 SWAP3
0x8d1 PUSH4 0x40c10f19
0x8d6 SWAP3
0x8d7 AND
0x8d8 SWAP1
0x8d9 PUSH1 0x0
0x8db PUSH1 0x40
0x8dd MLOAD
0x8de PUSH1 0x20
0x8e0 ADD
0x8e1 MSTORE
0x8e2 PUSH1 0x40
0x8e4 MLOAD
0x8e5 PUSH1 0xe0
0x8e7 PUSH1 0x2
0x8e9 EXP
0x8ea PUSH4 0xffffffff
0x8ef DUP6
0x8f0 AND
0x8f1 MUL
0x8f2 DUP2
0x8f3 MSTORE
0x8f4 PUSH1 0x1
0x8f6 PUSH1 0xa0
0x8f8 PUSH1 0x2
0x8fa EXP
0x8fb SUB
0x8fc SWAP1
0x8fd SWAP3
0x8fe AND
0x8ff PUSH1 0x4
0x901 DUP4
0x902 ADD
0x903 MSTORE
0x904 PUSH1 0x24
0x906 DUP3
0x907 ADD
0x908 MSTORE
0x909 PUSH1 0x44
0x90b ADD
0x90c PUSH1 0x20
0x90e PUSH1 0x40
0x910 MLOAD
0x911 DUP1
0x912 DUP4
0x913 SUB
0x914 DUP2
0x915 PUSH1 0x0
0x917 DUP8
0x918 DUP1
0x919 EXTCODESIZE
0x91a ISZERO
0x91b ISZERO
0x91c PUSH2 0x924
0x91f JUMPI
---
0x8b1: JUMPDEST 
0x8b5: V859 = 0x40
0x8b7: V860 = M[0x40]
0x8b9: V861 = M[V860]
0x8bc: V862 = 0x1
0x8be: V863 = S[0x1]
0x8bf: V864 = 0x7
0x8c1: V865 = S[0x7]
0x8c2: V866 = 0x11
0x8c4: V867 = S[0x11]
0x8c5: V868 = 0x1
0x8c7: V869 = 0xa0
0x8c9: V870 = 0x2
0x8cb: V871 = EXP 0x2 0xa0
0x8cc: V872 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8cf: V873 = AND 0xffffffffffffffffffffffffffffffffffffffff V863
0x8d1: V874 = 0x40c10f19
0x8d7: V875 = AND V865 0xffffffffffffffffffffffffffffffffffffffff
0x8d9: V876 = 0x0
0x8db: V877 = 0x40
0x8dd: V878 = M[0x40]
0x8de: V879 = 0x20
0x8e0: V880 = ADD 0x20 V878
0x8e1: M[V880] = 0x0
0x8e2: V881 = 0x40
0x8e4: V882 = M[0x40]
0x8e5: V883 = 0xe0
0x8e7: V884 = 0x2
0x8e9: V885 = EXP 0x2 0xe0
0x8ea: V886 = 0xffffffff
0x8f0: V887 = AND 0x40c10f19 0xffffffff
0x8f1: V888 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x8f3: M[V882] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x8f4: V889 = 0x1
0x8f6: V890 = 0xa0
0x8f8: V891 = 0x2
0x8fa: V892 = EXP 0x2 0xa0
0x8fb: V893 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fe: V894 = AND V875 0xffffffffffffffffffffffffffffffffffffffff
0x8ff: V895 = 0x4
0x902: V896 = ADD V882 0x4
0x903: M[V896] = V894
0x904: V897 = 0x24
0x907: V898 = ADD V882 0x24
0x908: M[V898] = V867
0x909: V899 = 0x44
0x90b: V900 = ADD 0x44 V882
0x90c: V901 = 0x20
0x90e: V902 = 0x40
0x910: V903 = M[0x40]
0x913: V904 = SUB V900 V903
0x915: V905 = 0x0
0x919: V906 = EXTCODESIZE V873
0x91a: V907 = ISZERO V906
0x91b: V908 = ISZERO V907
0x91c: V909 = 0x924
0x91f: JUMPI 0x924 V908
---
Entry stack: [V12, 0x12c, V801, V813, 0x40c10f19, V840]
Stack pops: 3
Stack additions: [V873, 0x40c10f19, V900, 0x20, V903, V904, V903, 0x0, V873]
Exit stack: [V12, 0x12c, V801, V873, 0x40c10f19, V900, 0x20, V903, V904, V903, 0x0, V873]

================================

Block 0x920
[0x920:0x923]
---
Predecessors: [0x8b1]
Successors: []
---
0x920 PUSH1 0x0
0x922 DUP1
0x923 REVERT
---
0x920: V910 = 0x0
0x923: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V873, 0x40c10f19, V900, 0x20, V903, V904, V903, 0x0, V873]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V873, 0x40c10f19, V900, 0x20, V903, V904, V903, 0x0, V873]

================================

Block 0x924
[0x924:0x930]
---
Predecessors: [0x8b1]
Successors: [0x931, 0x935]
---
0x924 JUMPDEST
0x925 PUSH2 0x2c6
0x928 GAS
0x929 SUB
0x92a CALL
0x92b ISZERO
0x92c ISZERO
0x92d PUSH2 0x935
0x930 JUMPI
---
0x924: JUMPDEST 
0x925: V911 = 0x2c6
0x928: V912 = GAS
0x929: V913 = SUB V912 0x2c6
0x92a: V914 = CALL V913 V873 0x0 V903 V904 V903 0x20
0x92b: V915 = ISZERO V914
0x92c: V916 = ISZERO V915
0x92d: V917 = 0x935
0x930: JUMPI 0x935 V916
---
Entry stack: [V12, 0x12c, V801, V873, 0x40c10f19, V900, 0x20, V903, V904, V903, 0x0, V873]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, V801, V873, 0x40c10f19, V900]

================================

Block 0x931
[0x931:0x934]
---
Predecessors: [0x924]
Successors: []
---
0x931 PUSH1 0x0
0x933 DUP1
0x934 REVERT
---
0x931: V918 = 0x0
0x934: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V873, 0x40c10f19, V900]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V873, 0x40c10f19, V900]

================================

Block 0x935
[0x935:0x9a3]
---
Predecessors: [0x924]
Successors: [0x9a4, 0x9a8]
---
0x935 JUMPDEST
0x936 POP
0x937 POP
0x938 POP
0x939 PUSH1 0x40
0x93b MLOAD
0x93c DUP1
0x93d MLOAD
0x93e POP
0x93f POP
0x940 PUSH1 0x1
0x942 SLOAD
0x943 PUSH1 0x8
0x945 SLOAD
0x946 PUSH1 0x12
0x948 SLOAD
0x949 PUSH1 0x1
0x94b PUSH1 0xa0
0x94d PUSH1 0x2
0x94f EXP
0x950 SUB
0x951 SWAP3
0x952 DUP4
0x953 AND
0x954 SWAP3
0x955 PUSH4 0x40c10f19
0x95a SWAP3
0x95b AND
0x95c SWAP1
0x95d PUSH1 0x0
0x95f PUSH1 0x40
0x961 MLOAD
0x962 PUSH1 0x20
0x964 ADD
0x965 MSTORE
0x966 PUSH1 0x40
0x968 MLOAD
0x969 PUSH1 0xe0
0x96b PUSH1 0x2
0x96d EXP
0x96e PUSH4 0xffffffff
0x973 DUP6
0x974 AND
0x975 MUL
0x976 DUP2
0x977 MSTORE
0x978 PUSH1 0x1
0x97a PUSH1 0xa0
0x97c PUSH1 0x2
0x97e EXP
0x97f SUB
0x980 SWAP1
0x981 SWAP3
0x982 AND
0x983 PUSH1 0x4
0x985 DUP4
0x986 ADD
0x987 MSTORE
0x988 PUSH1 0x24
0x98a DUP3
0x98b ADD
0x98c MSTORE
0x98d PUSH1 0x44
0x98f ADD
0x990 PUSH1 0x20
0x992 PUSH1 0x40
0x994 MLOAD
0x995 DUP1
0x996 DUP4
0x997 SUB
0x998 DUP2
0x999 PUSH1 0x0
0x99b DUP8
0x99c DUP1
0x99d EXTCODESIZE
0x99e ISZERO
0x99f ISZERO
0x9a0 PUSH2 0x9a8
0x9a3 JUMPI
---
0x935: JUMPDEST 
0x939: V919 = 0x40
0x93b: V920 = M[0x40]
0x93d: V921 = M[V920]
0x940: V922 = 0x1
0x942: V923 = S[0x1]
0x943: V924 = 0x8
0x945: V925 = S[0x8]
0x946: V926 = 0x12
0x948: V927 = S[0x12]
0x949: V928 = 0x1
0x94b: V929 = 0xa0
0x94d: V930 = 0x2
0x94f: V931 = EXP 0x2 0xa0
0x950: V932 = SUB 0x10000000000000000000000000000000000000000 0x1
0x953: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff V923
0x955: V934 = 0x40c10f19
0x95b: V935 = AND V925 0xffffffffffffffffffffffffffffffffffffffff
0x95d: V936 = 0x0
0x95f: V937 = 0x40
0x961: V938 = M[0x40]
0x962: V939 = 0x20
0x964: V940 = ADD 0x20 V938
0x965: M[V940] = 0x0
0x966: V941 = 0x40
0x968: V942 = M[0x40]
0x969: V943 = 0xe0
0x96b: V944 = 0x2
0x96d: V945 = EXP 0x2 0xe0
0x96e: V946 = 0xffffffff
0x974: V947 = AND 0x40c10f19 0xffffffff
0x975: V948 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x977: M[V942] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x978: V949 = 0x1
0x97a: V950 = 0xa0
0x97c: V951 = 0x2
0x97e: V952 = EXP 0x2 0xa0
0x97f: V953 = SUB 0x10000000000000000000000000000000000000000 0x1
0x982: V954 = AND V935 0xffffffffffffffffffffffffffffffffffffffff
0x983: V955 = 0x4
0x986: V956 = ADD V942 0x4
0x987: M[V956] = V954
0x988: V957 = 0x24
0x98b: V958 = ADD V942 0x24
0x98c: M[V958] = V927
0x98d: V959 = 0x44
0x98f: V960 = ADD 0x44 V942
0x990: V961 = 0x20
0x992: V962 = 0x40
0x994: V963 = M[0x40]
0x997: V964 = SUB V960 V963
0x999: V965 = 0x0
0x99d: V966 = EXTCODESIZE V933
0x99e: V967 = ISZERO V966
0x99f: V968 = ISZERO V967
0x9a0: V969 = 0x9a8
0x9a3: JUMPI 0x9a8 V968
---
Entry stack: [V12, 0x12c, V801, V873, 0x40c10f19, V900]
Stack pops: 3
Stack additions: [V933, 0x40c10f19, V960, 0x20, V963, V964, V963, 0x0, V933]
Exit stack: [V12, 0x12c, V801, V933, 0x40c10f19, V960, 0x20, V963, V964, V963, 0x0, V933]

================================

Block 0x9a4
[0x9a4:0x9a7]
---
Predecessors: [0x935]
Successors: []
---
0x9a4 PUSH1 0x0
0x9a6 DUP1
0x9a7 REVERT
---
0x9a4: V970 = 0x0
0x9a7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V933, 0x40c10f19, V960, 0x20, V963, V964, V963, 0x0, V933]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V933, 0x40c10f19, V960, 0x20, V963, V964, V963, 0x0, V933]

================================

Block 0x9a8
[0x9a8:0x9b4]
---
Predecessors: [0x935]
Successors: [0x9b5, 0x9b9]
---
0x9a8 JUMPDEST
0x9a9 PUSH2 0x2c6
0x9ac GAS
0x9ad SUB
0x9ae CALL
0x9af ISZERO
0x9b0 ISZERO
0x9b1 PUSH2 0x9b9
0x9b4 JUMPI
---
0x9a8: JUMPDEST 
0x9a9: V971 = 0x2c6
0x9ac: V972 = GAS
0x9ad: V973 = SUB V972 0x2c6
0x9ae: V974 = CALL V973 V933 0x0 V963 V964 V963 0x20
0x9af: V975 = ISZERO V974
0x9b0: V976 = ISZERO V975
0x9b1: V977 = 0x9b9
0x9b4: JUMPI 0x9b9 V976
---
Entry stack: [V12, 0x12c, V801, V933, 0x40c10f19, V960, 0x20, V963, V964, V963, 0x0, V933]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, V801, V933, 0x40c10f19, V960]

================================

Block 0x9b5
[0x9b5:0x9b8]
---
Predecessors: [0x9a8]
Successors: []
---
0x9b5 PUSH1 0x0
0x9b7 DUP1
0x9b8 REVERT
---
0x9b5: V978 = 0x0
0x9b8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V933, 0x40c10f19, V960]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V933, 0x40c10f19, V960]

================================

Block 0x9b9
[0x9b9:0x9d7]
---
Predecessors: [0x9a8]
Successors: [0x9d8, 0xa5c]
---
0x9b9 JUMPDEST
0x9ba POP
0x9bb POP
0x9bc POP
0x9bd PUSH1 0x40
0x9bf MLOAD
0x9c0 DUP1
0x9c1 MLOAD
0x9c2 POP
0x9c3 POP
0x9c4 PUSH1 0xf
0x9c6 SLOAD
0x9c7 DUP2
0x9c8 SWAP1
0x9c9 SUB
0x9ca PUSH1 0x13
0x9cc DUP2
0x9cd SWAP1
0x9ce SSTORE
0x9cf PUSH1 0x0
0x9d1 SWAP1
0x9d2 GT
0x9d3 ISZERO
0x9d4 PUSH2 0xa5c
0x9d7 JUMPI
---
0x9b9: JUMPDEST 
0x9bd: V979 = 0x40
0x9bf: V980 = M[0x40]
0x9c1: V981 = M[V980]
0x9c4: V982 = 0xf
0x9c6: V983 = S[0xf]
0x9c9: V984 = SUB V983 V801
0x9ca: V985 = 0x13
0x9ce: S[0x13] = V984
0x9cf: V986 = 0x0
0x9d2: V987 = GT V984 0x0
0x9d3: V988 = ISZERO V987
0x9d4: V989 = 0xa5c
0x9d7: JUMPI 0xa5c V988
---
Entry stack: [V12, 0x12c, V801, V933, 0x40c10f19, V960]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x12c, V801]

================================

Block 0x9d8
[0x9d8:0xa3b]
---
Predecessors: [0x9b9]
Successors: [0xa3c, 0xa40]
---
0x9d8 PUSH1 0x1
0x9da SLOAD
0x9db PUSH1 0x9
0x9dd SLOAD
0x9de PUSH1 0x13
0x9e0 SLOAD
0x9e1 PUSH1 0x1
0x9e3 PUSH1 0xa0
0x9e5 PUSH1 0x2
0x9e7 EXP
0x9e8 SUB
0x9e9 SWAP3
0x9ea DUP4
0x9eb AND
0x9ec SWAP3
0x9ed PUSH4 0x40c10f19
0x9f2 SWAP3
0x9f3 AND
0x9f4 SWAP1
0x9f5 PUSH1 0x0
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa PUSH1 0x20
0x9fc ADD
0x9fd MSTORE
0x9fe PUSH1 0x40
0xa00 MLOAD
0xa01 PUSH1 0xe0
0xa03 PUSH1 0x2
0xa05 EXP
0xa06 PUSH4 0xffffffff
0xa0b DUP6
0xa0c AND
0xa0d MUL
0xa0e DUP2
0xa0f MSTORE
0xa10 PUSH1 0x1
0xa12 PUSH1 0xa0
0xa14 PUSH1 0x2
0xa16 EXP
0xa17 SUB
0xa18 SWAP1
0xa19 SWAP3
0xa1a AND
0xa1b PUSH1 0x4
0xa1d DUP4
0xa1e ADD
0xa1f MSTORE
0xa20 PUSH1 0x24
0xa22 DUP3
0xa23 ADD
0xa24 MSTORE
0xa25 PUSH1 0x44
0xa27 ADD
0xa28 PUSH1 0x20
0xa2a PUSH1 0x40
0xa2c MLOAD
0xa2d DUP1
0xa2e DUP4
0xa2f SUB
0xa30 DUP2
0xa31 PUSH1 0x0
0xa33 DUP8
0xa34 DUP1
0xa35 EXTCODESIZE
0xa36 ISZERO
0xa37 ISZERO
0xa38 PUSH2 0xa40
0xa3b JUMPI
---
0x9d8: V990 = 0x1
0x9da: V991 = S[0x1]
0x9db: V992 = 0x9
0x9dd: V993 = S[0x9]
0x9de: V994 = 0x13
0x9e0: V995 = S[0x13]
0x9e1: V996 = 0x1
0x9e3: V997 = 0xa0
0x9e5: V998 = 0x2
0x9e7: V999 = EXP 0x2 0xa0
0x9e8: V1000 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9eb: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0x9ed: V1002 = 0x40c10f19
0x9f3: V1003 = AND V993 0xffffffffffffffffffffffffffffffffffffffff
0x9f5: V1004 = 0x0
0x9f7: V1005 = 0x40
0x9f9: V1006 = M[0x40]
0x9fa: V1007 = 0x20
0x9fc: V1008 = ADD 0x20 V1006
0x9fd: M[V1008] = 0x0
0x9fe: V1009 = 0x40
0xa00: V1010 = M[0x40]
0xa01: V1011 = 0xe0
0xa03: V1012 = 0x2
0xa05: V1013 = EXP 0x2 0xe0
0xa06: V1014 = 0xffffffff
0xa0c: V1015 = AND 0x40c10f19 0xffffffff
0xa0d: V1016 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0xa0f: M[V1010] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0xa10: V1017 = 0x1
0xa12: V1018 = 0xa0
0xa14: V1019 = 0x2
0xa16: V1020 = EXP 0x2 0xa0
0xa17: V1021 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1a: V1022 = AND V1003 0xffffffffffffffffffffffffffffffffffffffff
0xa1b: V1023 = 0x4
0xa1e: V1024 = ADD V1010 0x4
0xa1f: M[V1024] = V1022
0xa20: V1025 = 0x24
0xa23: V1026 = ADD V1010 0x24
0xa24: M[V1026] = V995
0xa25: V1027 = 0x44
0xa27: V1028 = ADD 0x44 V1010
0xa28: V1029 = 0x20
0xa2a: V1030 = 0x40
0xa2c: V1031 = M[0x40]
0xa2f: V1032 = SUB V1028 V1031
0xa31: V1033 = 0x0
0xa35: V1034 = EXTCODESIZE V1001
0xa36: V1035 = ISZERO V1034
0xa37: V1036 = ISZERO V1035
0xa38: V1037 = 0xa40
0xa3b: JUMPI 0xa40 V1036
---
Entry stack: [V12, 0x12c, V801]
Stack pops: 0
Stack additions: [V1001, 0x40c10f19, V1028, 0x20, V1031, V1032, V1031, 0x0, V1001]
Exit stack: [V12, 0x12c, V801, V1001, 0x40c10f19, V1028, 0x20, V1031, V1032, V1031, 0x0, V1001]

================================

Block 0xa3c
[0xa3c:0xa3f]
---
Predecessors: [0x9d8]
Successors: []
---
0xa3c PUSH1 0x0
0xa3e DUP1
0xa3f REVERT
---
0xa3c: V1038 = 0x0
0xa3f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V1001, 0x40c10f19, V1028, 0x20, V1031, V1032, V1031, 0x0, V1001]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V1001, 0x40c10f19, V1028, 0x20, V1031, V1032, V1031, 0x0, V1001]

================================

Block 0xa40
[0xa40:0xa4c]
---
Predecessors: [0x9d8]
Successors: [0xa4d, 0xa51]
---
0xa40 JUMPDEST
0xa41 PUSH2 0x2c6
0xa44 GAS
0xa45 SUB
0xa46 CALL
0xa47 ISZERO
0xa48 ISZERO
0xa49 PUSH2 0xa51
0xa4c JUMPI
---
0xa40: JUMPDEST 
0xa41: V1039 = 0x2c6
0xa44: V1040 = GAS
0xa45: V1041 = SUB V1040 0x2c6
0xa46: V1042 = CALL V1041 V1001 0x0 V1031 V1032 V1031 0x20
0xa47: V1043 = ISZERO V1042
0xa48: V1044 = ISZERO V1043
0xa49: V1045 = 0xa51
0xa4c: JUMPI 0xa51 V1044
---
Entry stack: [V12, 0x12c, V801, V1001, 0x40c10f19, V1028, 0x20, V1031, V1032, V1031, 0x0, V1001]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, V801, V1001, 0x40c10f19, V1028]

================================

Block 0xa4d
[0xa4d:0xa50]
---
Predecessors: [0xa40]
Successors: []
---
0xa4d PUSH1 0x0
0xa4f DUP1
0xa50 REVERT
---
0xa4d: V1046 = 0x0
0xa50: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V1001, 0x40c10f19, V1028]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V1001, 0x40c10f19, V1028]

================================

Block 0xa51
[0xa51:0xa5b]
---
Predecessors: [0xa40]
Successors: [0xa5c]
---
0xa51 JUMPDEST
0xa52 POP
0xa53 POP
0xa54 POP
0xa55 PUSH1 0x40
0xa57 MLOAD
0xa58 DUP1
0xa59 MLOAD
0xa5a POP
0xa5b POP
---
0xa51: JUMPDEST 
0xa55: V1047 = 0x40
0xa57: V1048 = M[0x40]
0xa59: V1049 = M[V1048]
---
Entry stack: [V12, 0x12c, V801, V1001, 0x40c10f19, V1028]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12c, V801]

================================

Block 0xa5c
[0xa5c:0xa9f]
---
Predecessors: [0x9b9, 0xa51]
Successors: [0xaa0, 0xaa4]
---
0xa5c JUMPDEST
0xa5d PUSH1 0x1
0xa5f SLOAD
0xa60 PUSH1 0x1
0xa62 PUSH1 0xa0
0xa64 PUSH1 0x2
0xa66 EXP
0xa67 SUB
0xa68 AND
0xa69 PUSH4 0x7d64bcb4
0xa6e PUSH1 0x0
0xa70 PUSH1 0x40
0xa72 MLOAD
0xa73 PUSH1 0x20
0xa75 ADD
0xa76 MSTORE
0xa77 PUSH1 0x40
0xa79 MLOAD
0xa7a DUP2
0xa7b PUSH4 0xffffffff
0xa80 AND
0xa81 PUSH1 0xe0
0xa83 PUSH1 0x2
0xa85 EXP
0xa86 MUL
0xa87 DUP2
0xa88 MSTORE
0xa89 PUSH1 0x4
0xa8b ADD
0xa8c PUSH1 0x20
0xa8e PUSH1 0x40
0xa90 MLOAD
0xa91 DUP1
0xa92 DUP4
0xa93 SUB
0xa94 DUP2
0xa95 PUSH1 0x0
0xa97 DUP8
0xa98 DUP1
0xa99 EXTCODESIZE
0xa9a ISZERO
0xa9b ISZERO
0xa9c PUSH2 0xaa4
0xa9f JUMPI
---
0xa5c: JUMPDEST 
0xa5d: V1050 = 0x1
0xa5f: V1051 = S[0x1]
0xa60: V1052 = 0x1
0xa62: V1053 = 0xa0
0xa64: V1054 = 0x2
0xa66: V1055 = EXP 0x2 0xa0
0xa67: V1056 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa68: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff V1051
0xa69: V1058 = 0x7d64bcb4
0xa6e: V1059 = 0x0
0xa70: V1060 = 0x40
0xa72: V1061 = M[0x40]
0xa73: V1062 = 0x20
0xa75: V1063 = ADD 0x20 V1061
0xa76: M[V1063] = 0x0
0xa77: V1064 = 0x40
0xa79: V1065 = M[0x40]
0xa7b: V1066 = 0xffffffff
0xa80: V1067 = AND 0xffffffff 0x7d64bcb4
0xa81: V1068 = 0xe0
0xa83: V1069 = 0x2
0xa85: V1070 = EXP 0x2 0xe0
0xa86: V1071 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0xa88: M[V1065] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0xa89: V1072 = 0x4
0xa8b: V1073 = ADD 0x4 V1065
0xa8c: V1074 = 0x20
0xa8e: V1075 = 0x40
0xa90: V1076 = M[0x40]
0xa93: V1077 = SUB V1073 V1076
0xa95: V1078 = 0x0
0xa99: V1079 = EXTCODESIZE V1057
0xa9a: V1080 = ISZERO V1079
0xa9b: V1081 = ISZERO V1080
0xa9c: V1082 = 0xaa4
0xa9f: JUMPI 0xaa4 V1081
---
Entry stack: [V12, 0x12c, V801]
Stack pops: 0
Stack additions: [V1057, 0x7d64bcb4, V1073, 0x20, V1076, V1077, V1076, 0x0, V1057]
Exit stack: [V12, 0x12c, V801, V1057, 0x7d64bcb4, V1073, 0x20, V1076, V1077, V1076, 0x0, V1057]

================================

Block 0xaa0
[0xaa0:0xaa3]
---
Predecessors: [0xa5c]
Successors: []
---
0xaa0 PUSH1 0x0
0xaa2 DUP1
0xaa3 REVERT
---
0xaa0: V1083 = 0x0
0xaa3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V1057, 0x7d64bcb4, V1073, 0x20, V1076, V1077, V1076, 0x0, V1057]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V1057, 0x7d64bcb4, V1073, 0x20, V1076, V1077, V1076, 0x0, V1057]

================================

Block 0xaa4
[0xaa4:0xab0]
---
Predecessors: [0xa5c]
Successors: [0xab1, 0xab5]
---
0xaa4 JUMPDEST
0xaa5 PUSH2 0x2c6
0xaa8 GAS
0xaa9 SUB
0xaaa CALL
0xaab ISZERO
0xaac ISZERO
0xaad PUSH2 0xab5
0xab0 JUMPI
---
0xaa4: JUMPDEST 
0xaa5: V1084 = 0x2c6
0xaa8: V1085 = GAS
0xaa9: V1086 = SUB V1085 0x2c6
0xaaa: V1087 = CALL V1086 V1057 0x0 V1076 V1077 V1076 0x20
0xaab: V1088 = ISZERO V1087
0xaac: V1089 = ISZERO V1088
0xaad: V1090 = 0xab5
0xab0: JUMPI 0xab5 V1089
---
Entry stack: [V12, 0x12c, V801, V1057, 0x7d64bcb4, V1073, 0x20, V1076, V1077, V1076, 0x0, V1057]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, V801, V1057, 0x7d64bcb4, V1073]

================================

Block 0xab1
[0xab1:0xab4]
---
Predecessors: [0xaa4]
Successors: []
---
0xab1 PUSH1 0x0
0xab3 DUP1
0xab4 REVERT
---
0xab1: V1091 = 0x0
0xab4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V1057, 0x7d64bcb4, V1073]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V1057, 0x7d64bcb4, V1073]

================================

Block 0xab5
[0xab5:0xb11]
---
Predecessors: [0xaa4]
Successors: [0xb12, 0xb16]
---
0xab5 JUMPDEST
0xab6 POP
0xab7 POP
0xab8 POP
0xab9 PUSH1 0x40
0xabb MLOAD
0xabc DUP1
0xabd MLOAD
0xabe POP
0xabf POP
0xac0 PUSH1 0x1
0xac2 SLOAD
0xac3 PUSH1 0x0
0xac5 SLOAD
0xac6 PUSH1 0x1
0xac8 PUSH1 0xa0
0xaca PUSH1 0x2
0xacc EXP
0xacd SUB
0xace SWAP2
0xacf DUP3
0xad0 AND
0xad1 SWAP2
0xad2 PUSH4 0xf2fde38b
0xad7 SWAP2
0xad8 AND
0xad9 PUSH1 0x40
0xadb MLOAD
0xadc PUSH1 0xe0
0xade PUSH1 0x2
0xae0 EXP
0xae1 PUSH4 0xffffffff
0xae6 DUP5
0xae7 AND
0xae8 MUL
0xae9 DUP2
0xaea MSTORE
0xaeb PUSH1 0x1
0xaed PUSH1 0xa0
0xaef PUSH1 0x2
0xaf1 EXP
0xaf2 SUB
0xaf3 SWAP1
0xaf4 SWAP2
0xaf5 AND
0xaf6 PUSH1 0x4
0xaf8 DUP3
0xaf9 ADD
0xafa MSTORE
0xafb PUSH1 0x24
0xafd ADD
0xafe PUSH1 0x0
0xb00 PUSH1 0x40
0xb02 MLOAD
0xb03 DUP1
0xb04 DUP4
0xb05 SUB
0xb06 DUP2
0xb07 PUSH1 0x0
0xb09 DUP8
0xb0a DUP1
0xb0b EXTCODESIZE
0xb0c ISZERO
0xb0d ISZERO
0xb0e PUSH2 0xb16
0xb11 JUMPI
---
0xab5: JUMPDEST 
0xab9: V1092 = 0x40
0xabb: V1093 = M[0x40]
0xabd: V1094 = M[V1093]
0xac0: V1095 = 0x1
0xac2: V1096 = S[0x1]
0xac3: V1097 = 0x0
0xac5: V1098 = S[0x0]
0xac6: V1099 = 0x1
0xac8: V1100 = 0xa0
0xaca: V1101 = 0x2
0xacc: V1102 = EXP 0x2 0xa0
0xacd: V1103 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad0: V1104 = AND 0xffffffffffffffffffffffffffffffffffffffff V1096
0xad2: V1105 = 0xf2fde38b
0xad8: V1106 = AND V1098 0xffffffffffffffffffffffffffffffffffffffff
0xad9: V1107 = 0x40
0xadb: V1108 = M[0x40]
0xadc: V1109 = 0xe0
0xade: V1110 = 0x2
0xae0: V1111 = EXP 0x2 0xe0
0xae1: V1112 = 0xffffffff
0xae7: V1113 = AND 0xf2fde38b 0xffffffff
0xae8: V1114 = MUL 0xf2fde38b 0x100000000000000000000000000000000000000000000000000000000
0xaea: M[V1108] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0xaeb: V1115 = 0x1
0xaed: V1116 = 0xa0
0xaef: V1117 = 0x2
0xaf1: V1118 = EXP 0x2 0xa0
0xaf2: V1119 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf5: V1120 = AND V1106 0xffffffffffffffffffffffffffffffffffffffff
0xaf6: V1121 = 0x4
0xaf9: V1122 = ADD V1108 0x4
0xafa: M[V1122] = V1120
0xafb: V1123 = 0x24
0xafd: V1124 = ADD 0x24 V1108
0xafe: V1125 = 0x0
0xb00: V1126 = 0x40
0xb02: V1127 = M[0x40]
0xb05: V1128 = SUB V1124 V1127
0xb07: V1129 = 0x0
0xb0b: V1130 = EXTCODESIZE V1104
0xb0c: V1131 = ISZERO V1130
0xb0d: V1132 = ISZERO V1131
0xb0e: V1133 = 0xb16
0xb11: JUMPI 0xb16 V1132
---
Entry stack: [V12, 0x12c, V801, V1057, 0x7d64bcb4, V1073]
Stack pops: 3
Stack additions: [V1104, 0xf2fde38b, V1124, 0x0, V1127, V1128, V1127, 0x0, V1104]
Exit stack: [V12, 0x12c, V801, V1104, 0xf2fde38b, V1124, 0x0, V1127, V1128, V1127, 0x0, V1104]

================================

Block 0xb12
[0xb12:0xb15]
---
Predecessors: [0xab5]
Successors: []
---
0xb12 PUSH1 0x0
0xb14 DUP1
0xb15 REVERT
---
0xb12: V1134 = 0x0
0xb15: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V1104, 0xf2fde38b, V1124, 0x0, V1127, V1128, V1127, 0x0, V1104]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V1104, 0xf2fde38b, V1124, 0x0, V1127, V1128, V1127, 0x0, V1104]

================================

Block 0xb16
[0xb16:0xb22]
---
Predecessors: [0xab5]
Successors: [0xb23, 0xb27]
---
0xb16 JUMPDEST
0xb17 PUSH2 0x2c6
0xb1a GAS
0xb1b SUB
0xb1c CALL
0xb1d ISZERO
0xb1e ISZERO
0xb1f PUSH2 0xb27
0xb22 JUMPI
---
0xb16: JUMPDEST 
0xb17: V1135 = 0x2c6
0xb1a: V1136 = GAS
0xb1b: V1137 = SUB V1136 0x2c6
0xb1c: V1138 = CALL V1137 V1104 0x0 V1127 V1128 V1127 0x0
0xb1d: V1139 = ISZERO V1138
0xb1e: V1140 = ISZERO V1139
0xb1f: V1141 = 0xb27
0xb22: JUMPI 0xb27 V1140
---
Entry stack: [V12, 0x12c, V801, V1104, 0xf2fde38b, V1124, 0x0, V1127, V1128, V1127, 0x0, V1104]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, V801, V1104, 0xf2fde38b, V1124]

================================

Block 0xb23
[0xb23:0xb26]
---
Predecessors: [0xb16]
Successors: []
---
0xb23 PUSH1 0x0
0xb25 DUP1
0xb26 REVERT
---
0xb23: V1142 = 0x0
0xb26: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V801, V1104, 0xf2fde38b, V1124]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V801, V1104, 0xf2fde38b, V1124]

================================

Block 0xb27
[0xb27:0xb56]
---
Predecessors: [0xb16]
Successors: [0xb57]
---
0xb27 JUMPDEST
0xb28 POP
0xb29 POP
0xb2a POP
0xb2b PUSH32 0x4c013bd73202fde3c7cfe26ca486d0882f2c5b2fc9c761b15212f759bd2347dd
0xb4c PUSH1 0x40
0xb4e MLOAD
0xb4f PUSH1 0x40
0xb51 MLOAD
0xb52 DUP1
0xb53 SWAP2
0xb54 SUB
0xb55 SWAP1
0xb56 LOG1
---
0xb27: JUMPDEST 
0xb2b: V1143 = 0x4c013bd73202fde3c7cfe26ca486d0882f2c5b2fc9c761b15212f759bd2347dd
0xb4c: V1144 = 0x40
0xb4e: V1145 = M[0x40]
0xb4f: V1146 = 0x40
0xb51: V1147 = M[0x40]
0xb54: V1148 = SUB V1145 V1147
0xb56: LOG V1147 V1148 0x4c013bd73202fde3c7cfe26ca486d0882f2c5b2fc9c761b15212f759bd2347dd
---
Entry stack: [V12, 0x12c, V801, V1104, 0xf2fde38b, V1124]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12c, V801]

================================

Block 0xb57
[0xb57:0xb57]
---
Predecessors: [0xb27, 0xc63]
Successors: [0xb58]
---
0xb57 JUMPDEST
---
0xb57: JUMPDEST 
---
Entry stack: [V12, 0x12c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S0]

================================

Block 0xb58
[0xb58:0xb5a]
---
Predecessors: [0xb57]
Successors: [0x12c]
---
0xb58 JUMPDEST
0xb59 POP
0xb5a JUMP
---
0xb58: JUMPDEST 
0xb5a: JUMP 0x12c
---
Entry stack: [V12, 0x12c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5b
[0xb5b:0xb60]
---
Predecessors: [0x295]
Successors: [0x1a0]
---
0xb5b JUMPDEST
0xb5c PUSH1 0x13
0xb5e SLOAD
0xb5f DUP2
0xb60 JUMP
---
0xb5b: JUMPDEST 
0xb5c: V1149 = 0x13
0xb5e: V1150 = S[0x13]
0xb60: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V1150]
Exit stack: [V12, 0x1a0, V1150]

================================

Block 0xb61
[0xb61:0xb6f]
---
Predecessors: [0x2ba]
Successors: [0x142]
---
0xb61 JUMPDEST
0xb62 PUSH1 0x0
0xb64 SLOAD
0xb65 PUSH1 0x1
0xb67 PUSH1 0xa0
0xb69 PUSH1 0x2
0xb6b EXP
0xb6c SUB
0xb6d AND
0xb6e DUP2
0xb6f JUMP
---
0xb61: JUMPDEST 
0xb62: V1151 = 0x0
0xb64: V1152 = S[0x0]
0xb65: V1153 = 0x1
0xb67: V1154 = 0xa0
0xb69: V1155 = 0x2
0xb6b: V1156 = EXP 0x2 0xa0
0xb6c: V1157 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6d: V1158 = AND 0xffffffffffffffffffffffffffffffffffffffff V1152
0xb6f: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V1158]
Exit stack: [V12, 0x142, V1158]

================================

Block 0xb70
[0xb70:0xb7e]
---
Predecessors: [0x2e9]
Successors: [0x142]
---
0xb70 JUMPDEST
0xb71 PUSH1 0x6
0xb73 SLOAD
0xb74 PUSH1 0x1
0xb76 PUSH1 0xa0
0xb78 PUSH1 0x2
0xb7a EXP
0xb7b SUB
0xb7c AND
0xb7d DUP2
0xb7e JUMP
---
0xb70: JUMPDEST 
0xb71: V1159 = 0x6
0xb73: V1160 = S[0x6]
0xb74: V1161 = 0x1
0xb76: V1162 = 0xa0
0xb78: V1163 = 0x2
0xb7a: V1164 = EXP 0x2 0xa0
0xb7b: V1165 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7c: V1166 = AND 0xffffffffffffffffffffffffffffffffffffffff V1160
0xb7e: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V1166]
Exit stack: [V12, 0x142, V1166]

================================

Block 0xb7f
[0xb7f:0xb84]
---
Predecessors: [0x318]
Successors: [0x1a0]
---
0xb7f JUMPDEST
0xb80 PUSH1 0x4
0xb82 SLOAD
0xb83 DUP2
0xb84 JUMP
---
0xb7f: JUMPDEST 
0xb80: V1167 = 0x4
0xb82: V1168 = S[0x4]
0xb84: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V1168]
Exit stack: [V12, 0x1a0, V1168]

================================

Block 0xb85
[0xb85:0xb8a]
---
Predecessors: [0x33d]
Successors: [0x1a0]
---
0xb85 JUMPDEST
0xb86 PUSH1 0xe
0xb88 SLOAD
0xb89 DUP2
0xb8a JUMP
---
0xb85: JUMPDEST 
0xb86: V1169 = 0xe
0xb88: V1170 = S[0xe]
0xb8a: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V1170]
Exit stack: [V12, 0x1a0, V1170]

================================

Block 0xb8b
[0xb8b:0xb90]
---
Predecessors: [0x362]
Successors: [0x1a0]
---
0xb8b JUMPDEST
0xb8c PUSH1 0x11
0xb8e SLOAD
0xb8f DUP2
0xb90 JUMP
---
0xb8b: JUMPDEST 
0xb8c: V1171 = 0x11
0xb8e: V1172 = S[0x11]
0xb90: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V1172]
Exit stack: [V12, 0x1a0, V1172]

================================

Block 0xb91
[0xb91:0xb96]
---
Predecessors: [0x387]
Successors: [0x1a0]
---
0xb91 JUMPDEST
0xb92 PUSH1 0xf
0xb94 SLOAD
0xb95 DUP2
0xb96 JUMP
---
0xb91: JUMPDEST 
0xb92: V1173 = 0xf
0xb94: V1174 = S[0xf]
0xb96: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V1174]
Exit stack: [V12, 0x1a0, V1174]

================================

Block 0xb97
[0xb97:0xb9c]
---
Predecessors: [0x3ac]
Successors: [0x1a0]
---
0xb97 JUMPDEST
0xb98 PUSH1 0x10
0xb9a SLOAD
0xb9b DUP2
0xb9c JUMP
---
0xb97: JUMPDEST 
0xb98: V1175 = 0x10
0xb9a: V1176 = S[0x10]
0xb9c: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V1176]
Exit stack: [V12, 0x1a0, V1176]

================================

Block 0xb9d
[0xb9d:0xba2]
---
Predecessors: [0x3d1]
Successors: [0x1a0]
---
0xb9d JUMPDEST
0xb9e PUSH1 0xc
0xba0 SLOAD
0xba1 DUP2
0xba2 JUMP
---
0xb9d: JUMPDEST 
0xb9e: V1177 = 0xc
0xba0: V1178 = S[0xc]
0xba2: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V1178]
Exit stack: [V12, 0x1a0, V1178]

================================

Block 0xba3
[0xba3:0xbb1]
---
Predecessors: [0x3f6]
Successors: [0x142]
---
0xba3 JUMPDEST
0xba4 PUSH1 0x8
0xba6 SLOAD
0xba7 PUSH1 0x1
0xba9 PUSH1 0xa0
0xbab PUSH1 0x2
0xbad EXP
0xbae SUB
0xbaf AND
0xbb0 DUP2
0xbb1 JUMP
---
0xba3: JUMPDEST 
0xba4: V1179 = 0x8
0xba6: V1180 = S[0x8]
0xba7: V1181 = 0x1
0xba9: V1182 = 0xa0
0xbab: V1183 = 0x2
0xbad: V1184 = EXP 0x2 0xa0
0xbae: V1185 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbaf: V1186 = AND 0xffffffffffffffffffffffffffffffffffffffff V1180
0xbb1: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V1186]
Exit stack: [V12, 0x142, V1186]

================================

Block 0xbb2
[0xbb2:0xbb7]
---
Predecessors: [0x425]
Successors: [0x1a0]
---
0xbb2 JUMPDEST
0xbb3 PUSH1 0x2
0xbb5 SLOAD
0xbb6 DUP2
0xbb7 JUMP
---
0xbb2: JUMPDEST 
0xbb3: V1187 = 0x2
0xbb5: V1188 = S[0x2]
0xbb7: JUMP 0x1a0
---
Entry stack: [V12, 0x1a0]
Stack pops: 1
Stack additions: [S0, V1188]
Exit stack: [V12, 0x1a0, V1188]

================================

Block 0xbb8
[0xbb8:0xc0f]
---
Predecessors: [0x460, 0x7be]
Successors: [0xc10, 0xc14]
---
0xbb8 JUMPDEST
0xbb9 PUSH1 0x4
0xbbb SLOAD
0xbbc PUSH1 0x1
0xbbe SLOAD
0xbbf PUSH1 0x0
0xbc1 SWAP2
0xbc2 TIMESTAMP
0xbc3 GT
0xbc4 SWAP1
0xbc5 DUP3
0xbc6 SWAP1
0xbc7 PUSH8 0xde0b6b3a7640000
0xbd0 SWAP1
0xbd1 PUSH1 0x1
0xbd3 PUSH1 0xa0
0xbd5 PUSH1 0x2
0xbd7 EXP
0xbd8 SUB
0xbd9 AND
0xbda PUSH4 0x18160ddd
0xbdf DUP4
0xbe0 PUSH1 0x40
0xbe2 MLOAD
0xbe3 PUSH1 0x20
0xbe5 ADD
0xbe6 MSTORE
0xbe7 PUSH1 0x40
0xbe9 MLOAD
0xbea DUP2
0xbeb PUSH4 0xffffffff
0xbf0 AND
0xbf1 PUSH1 0xe0
0xbf3 PUSH1 0x2
0xbf5 EXP
0xbf6 MUL
0xbf7 DUP2
0xbf8 MSTORE
0xbf9 PUSH1 0x4
0xbfb ADD
0xbfc PUSH1 0x20
0xbfe PUSH1 0x40
0xc00 MLOAD
0xc01 DUP1
0xc02 DUP4
0xc03 SUB
0xc04 DUP2
0xc05 PUSH1 0x0
0xc07 DUP8
0xc08 DUP1
0xc09 EXTCODESIZE
0xc0a ISZERO
0xc0b ISZERO
0xc0c PUSH2 0xc14
0xc0f JUMPI
---
0xbb8: JUMPDEST 
0xbb9: V1189 = 0x4
0xbbb: V1190 = S[0x4]
0xbbc: V1191 = 0x1
0xbbe: V1192 = S[0x1]
0xbbf: V1193 = 0x0
0xbc2: V1194 = TIMESTAMP
0xbc3: V1195 = GT V1194 V1190
0xbc7: V1196 = 0xde0b6b3a7640000
0xbd1: V1197 = 0x1
0xbd3: V1198 = 0xa0
0xbd5: V1199 = 0x2
0xbd7: V1200 = EXP 0x2 0xa0
0xbd8: V1201 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd9: V1202 = AND 0xffffffffffffffffffffffffffffffffffffffff V1192
0xbda: V1203 = 0x18160ddd
0xbe0: V1204 = 0x40
0xbe2: V1205 = M[0x40]
0xbe3: V1206 = 0x20
0xbe5: V1207 = ADD 0x20 V1205
0xbe6: M[V1207] = 0x0
0xbe7: V1208 = 0x40
0xbe9: V1209 = M[0x40]
0xbeb: V1210 = 0xffffffff
0xbf0: V1211 = AND 0xffffffff 0x18160ddd
0xbf1: V1212 = 0xe0
0xbf3: V1213 = 0x2
0xbf5: V1214 = EXP 0x2 0xe0
0xbf6: V1215 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0xbf8: M[V1209] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0xbf9: V1216 = 0x4
0xbfb: V1217 = ADD 0x4 V1209
0xbfc: V1218 = 0x20
0xbfe: V1219 = 0x40
0xc00: V1220 = M[0x40]
0xc03: V1221 = SUB V1217 V1220
0xc05: V1222 = 0x0
0xc09: V1223 = EXTCODESIZE V1202
0xc0a: V1224 = ISZERO V1223
0xc0b: V1225 = ISZERO V1224
0xc0c: V1226 = 0xc14
0xc0f: JUMPI 0xc14 V1225
---
Entry stack: [V12, 0x12c, S1, {0x468, 0x7c6}]
Stack pops: 0
Stack additions: [0x0, V1195, 0x0, 0xde0b6b3a7640000, V1202, 0x18160ddd, V1217, 0x20, V1220, V1221, V1220, 0x0, V1202]
Exit stack: [V12, 0x12c, S1, {0x468, 0x7c6}, 0x0, V1195, 0x0, 0xde0b6b3a7640000, V1202, 0x18160ddd, V1217, 0x20, V1220, V1221, V1220, 0x0, V1202]

================================

Block 0xc10
[0xc10:0xc13]
---
Predecessors: [0xbb8]
Successors: []
---
0xc10 PUSH1 0x0
0xc12 DUP1
0xc13 REVERT
---
0xc10: V1227 = 0x0
0xc13: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S14, {0x468, 0x7c6}, 0x0, V1195, 0x0, 0xde0b6b3a7640000, V1202, 0x18160ddd, V1217, 0x20, V1220, V1221, V1220, 0x0, V1202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S14, {0x468, 0x7c6}, 0x0, V1195, 0x0, 0xde0b6b3a7640000, V1202, 0x18160ddd, V1217, 0x20, V1220, V1221, V1220, 0x0, V1202]

================================

Block 0xc14
[0xc14:0xc20]
---
Predecessors: [0xbb8]
Successors: [0xc21, 0xc25]
---
0xc14 JUMPDEST
0xc15 PUSH2 0x2c6
0xc18 GAS
0xc19 SUB
0xc1a CALL
0xc1b ISZERO
0xc1c ISZERO
0xc1d PUSH2 0xc25
0xc20 JUMPI
---
0xc14: JUMPDEST 
0xc15: V1228 = 0x2c6
0xc18: V1229 = GAS
0xc19: V1230 = SUB V1229 0x2c6
0xc1a: V1231 = CALL V1230 V1202 0x0 V1220 V1221 V1220 0x20
0xc1b: V1232 = ISZERO V1231
0xc1c: V1233 = ISZERO V1232
0xc1d: V1234 = 0xc25
0xc20: JUMPI 0xc25 V1233
---
Entry stack: [V12, 0x12c, S14, {0x468, 0x7c6}, 0x0, V1195, 0x0, 0xde0b6b3a7640000, V1202, 0x18160ddd, V1217, 0x20, V1220, V1221, V1220, 0x0, V1202]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12c, S14, {0x468, 0x7c6}, 0x0, V1195, 0x0, 0xde0b6b3a7640000, V1202, 0x18160ddd, V1217]

================================

Block 0xc21
[0xc21:0xc24]
---
Predecessors: [0xc14]
Successors: []
---
0xc21 PUSH1 0x0
0xc23 DUP1
0xc24 REVERT
---
0xc21: V1235 = 0x0
0xc24: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, S8, {0x468, 0x7c6}, 0x0, S5, 0x0, 0xde0b6b3a7640000, S2, 0x18160ddd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S8, {0x468, 0x7c6}, 0x0, S5, 0x0, 0xde0b6b3a7640000, S2, 0x18160ddd, S0]

================================

Block 0xc25
[0xc25:0xc3d]
---
Predecessors: [0xc14]
Successors: [0xc3e, 0xc40]
---
0xc25 JUMPDEST
0xc26 POP
0xc27 POP
0xc28 POP
0xc29 PUSH1 0x40
0xc2b MLOAD
0xc2c DUP1
0xc2d MLOAD
0xc2e SWAP1
0xc2f POP
0xc30 PUSH1 0xf
0xc32 SLOAD
0xc33 SUB
0xc34 GT
0xc35 ISZERO
0xc36 SWAP1
0xc37 POP
0xc38 DUP2
0xc39 DUP1
0xc3a PUSH2 0xc40
0xc3d JUMPI
---
0xc25: JUMPDEST 
0xc29: V1236 = 0x40
0xc2b: V1237 = M[0x40]
0xc2d: V1238 = M[V1237]
0xc30: V1239 = 0xf
0xc32: V1240 = S[0xf]
0xc33: V1241 = SUB V1240 V1238
0xc34: V1242 = GT V1241 0xde0b6b3a7640000
0xc35: V1243 = ISZERO V1242
0xc3a: V1244 = 0xc40
0xc3d: JUMPI 0xc40 S5
---
Entry stack: [V12, 0x12c, S8, {0x468, 0x7c6}, 0x0, S5, 0x0, 0xde0b6b3a7640000, S2, 0x18160ddd, S0]
Stack pops: 6
Stack additions: [S5, V1243, S5]
Exit stack: [V12, 0x12c, S8, {0x468, 0x7c6}, 0x0, S5, V1243, S5]

================================

Block 0xc3e
[0xc3e:0xc3f]
---
Predecessors: [0xc25]
Successors: [0xc40]
---
0xc3e POP
0xc3f DUP1
---
0xc3e: NOP 
---
Entry stack: [V12, 0x12c, S5, {0x468, 0x7c6}, 0x0, S2, V1243, S0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V12, 0x12c, S5, {0x468, 0x7c6}, 0x0, S2, V1243, V1243]

================================

Block 0xc40
[0xc40:0xc42]
---
Predecessors: [0xc25, 0xc3e]
Successors: [0xc43]
---
0xc40 JUMPDEST
0xc41 SWAP3
0xc42 POP
---
0xc40: JUMPDEST 
---
Entry stack: [V12, 0x12c, S5, {0x468, 0x7c6}, 0x0, S2, V1243, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V12, 0x12c, S5, {0x468, 0x7c6}, S0, S2, V1243]

================================

Block 0xc43
[0xc43:0xc47]
---
Predecessors: [0xc40]
Successors: [0x468, 0x7c6]
---
0xc43 JUMPDEST
0xc44 POP
0xc45 POP
0xc46 SWAP1
0xc47 JUMP
---
0xc43: JUMPDEST 
0xc47: JUMP {0x468, 0x7c6}
---
Entry stack: [V12, 0x12c, S4, {0x468, 0x7c6}, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, 0x12c, S4, S2]

================================

Block 0xc48
[0xc48:0xc5e]
---
Predecessors: [0x487]
Successors: [0xc5f, 0xc63]
---
0xc48 JUMPDEST
0xc49 PUSH1 0x0
0xc4b SLOAD
0xc4c CALLER
0xc4d PUSH1 0x1
0xc4f PUSH1 0xa0
0xc51 PUSH1 0x2
0xc53 EXP
0xc54 SUB
0xc55 SWAP1
0xc56 DUP2
0xc57 AND
0xc58 SWAP2
0xc59 AND
0xc5a EQ
0xc5b PUSH2 0xc63
0xc5e JUMPI
---
0xc48: JUMPDEST 
0xc49: V1245 = 0x0
0xc4b: V1246 = S[0x0]
0xc4c: V1247 = CALLER
0xc4d: V1248 = 0x1
0xc4f: V1249 = 0xa0
0xc51: V1250 = 0x2
0xc53: V1251 = EXP 0x2 0xa0
0xc54: V1252 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc57: V1253 = AND 0xffffffffffffffffffffffffffffffffffffffff V1247
0xc59: V1254 = AND V1246 0xffffffffffffffffffffffffffffffffffffffff
0xc5a: V1255 = EQ V1254 V1253
0xc5b: V1256 = 0xc63
0xc5e: JUMPI 0xc63 V1255
---
Entry stack: [V12, 0x12c, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V414]

================================

Block 0xc5f
[0xc5f:0xc62]
---
Predecessors: [0xc48]
Successors: []
---
0xc5f PUSH1 0x0
0xc61 DUP1
0xc62 REVERT
---
0xc5f: V1257 = 0x0
0xc62: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12c, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V414]

================================

Block 0xc63
[0xc63:0xc72]
---
Predecessors: [0xc48]
Successors: [0xb57, 0xc73]
---
0xc63 JUMPDEST
0xc64 PUSH1 0x1
0xc66 PUSH1 0xa0
0xc68 PUSH1 0x2
0xc6a EXP
0xc6b SUB
0xc6c DUP2
0xc6d AND
0xc6e ISZERO
0xc6f PUSH2 0xb57
0xc72 JUMPI
---
0xc63: JUMPDEST 
0xc64: V1258 = 0x1
0xc66: V1259 = 0xa0
0xc68: V1260 = 0x2
0xc6a: V1261 = EXP 0x2 0xa0
0xc6b: V1262 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6d: V1263 = AND V414 0xffffffffffffffffffffffffffffffffffffffff
0xc6e: V1264 = ISZERO V1263
0xc6f: V1265 = 0xb57
0xc72: JUMPI 0xb57 V1264
---
Entry stack: [V12, 0x12c, V414]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x12c, V414]

================================

Block 0xc73
[0xc73:0xc9a]
---
Predecessors: [0xc63]
Successors: [0xc9b]
---
0xc73 PUSH1 0x0
0xc75 DUP1
0xc76 SLOAD
0xc77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8c NOT
0xc8d AND
0xc8e PUSH1 0x1
0xc90 PUSH1 0xa0
0xc92 PUSH1 0x2
0xc94 EXP
0xc95 SUB
0xc96 DUP4
0xc97 AND
0xc98 OR
0xc99 SWAP1
0xc9a SSTORE
---
0xc73: V1266 = 0x0
0xc76: V1267 = S[0x0]
0xc77: V1268 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8c: V1269 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc8d: V1270 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1267
0xc8e: V1271 = 0x1
0xc90: V1272 = 0xa0
0xc92: V1273 = 0x2
0xc94: V1274 = EXP 0x2 0xa0
0xc95: V1275 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc97: V1276 = AND V414 0xffffffffffffffffffffffffffffffffffffffff
0xc98: V1277 = OR V1276 V1270
0xc9a: S[0x0] = V1277
---
Entry stack: [V12, 0x12c, V414]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x12c, V414]

================================

Block 0xc9b
[0xc9b:0xc9b]
---
Predecessors: [0xc73]
Successors: [0xc9c]
---
0xc9b JUMPDEST
---
0xc9b: JUMPDEST 
---
Entry stack: [V12, 0x12c, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V414]

================================

Block 0xc9c
[0xc9c:0xc9c]
---
Predecessors: [0xc9b]
Successors: [0xc9d]
---
0xc9c JUMPDEST
---
0xc9c: JUMPDEST 
---
Entry stack: [V12, 0x12c, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, V414]

================================

Block 0xc9d
[0xc9d:0xc9f]
---
Predecessors: [0xc9c]
Successors: [0x12c]
---
0xc9d JUMPDEST
0xc9e POP
0xc9f JUMP
---
0xc9d: JUMPDEST 
0xc9f: JUMP 0x12c
---
Entry stack: [V12, 0x12c, V414]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xca0
[0xca0:0xcae]
---
Predecessors: [0x4a8]
Successors: [0x142]
---
0xca0 JUMPDEST
0xca1 PUSH1 0x1
0xca3 SLOAD
0xca4 PUSH1 0x1
0xca6 PUSH1 0xa0
0xca8 PUSH1 0x2
0xcaa EXP
0xcab SUB
0xcac AND
0xcad DUP2
0xcae JUMP
---
0xca0: JUMPDEST 
0xca1: V1278 = 0x1
0xca3: V1279 = S[0x1]
0xca4: V1280 = 0x1
0xca6: V1281 = 0xa0
0xca8: V1282 = 0x2
0xcaa: V1283 = EXP 0x2 0xa0
0xcab: V1284 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcac: V1285 = AND 0xffffffffffffffffffffffffffffffffffffffff V1279
0xcae: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V1285]
Exit stack: [V12, 0x142, V1285]

================================

Block 0xcaf
[0xcaf:0xcbb]
---
Predecessors: [0x5af]
Successors: [0xcbc, 0xccb]
---
0xcaf JUMPDEST
0xcb0 PUSH1 0x0
0xcb2 DUP3
0xcb3 DUP3
0xcb4 MUL
0xcb5 DUP4
0xcb6 ISZERO
0xcb7 DUP1
0xcb8 PUSH2 0xccb
0xcbb JUMPI
---
0xcaf: JUMPDEST 
0xcb0: V1286 = 0x0
0xcb4: V1287 = MUL V538 V523
0xcb6: V1288 = ISZERO V523
0xcb8: V1289 = 0xccb
0xcbb: JUMPI 0xccb V1288
---
Entry stack: [V12, 0x12c, S5, V523, 0x0, 0x5c3, V523, V538]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1287, V1288]
Exit stack: [V12, 0x12c, S5, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287, V1288]

================================

Block 0xcbc
[0xcbc:0xcc6]
---
Predecessors: [0xcaf]
Successors: [0xcc7, 0xcc8]
---
0xcbc POP
0xcbd DUP3
0xcbe DUP5
0xcbf DUP3
0xcc0 DUP2
0xcc1 ISZERO
0xcc2 ISZERO
0xcc3 PUSH2 0xcc8
0xcc6 JUMPI
---
0xcc1: V1290 = ISZERO V523
0xcc2: V1291 = ISZERO V1290
0xcc3: V1292 = 0xcc8
0xcc6: JUMPI 0xcc8 V1291
---
Entry stack: [V12, 0x12c, S8, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287, V1288]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0x12c, S8, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287, V538, V523, V1287]

================================

Block 0xcc7
[0xcc7:0xcc7]
---
Predecessors: [0xcbc]
Successors: []
---
0xcc7 INVALID
---
0xcc7: INVALID 
---
Entry stack: [V12, 0x12c, S10, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287, V538, V523, V1287]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S10, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287, V538, V523, V1287]

================================

Block 0xcc8
[0xcc8:0xcca]
---
Predecessors: [0xcbc]
Successors: [0xccb]
---
0xcc8 JUMPDEST
0xcc9 DIV
0xcca EQ
---
0xcc8: JUMPDEST 
0xcc9: V1293 = DIV V1287 V523
0xcca: V1294 = EQ V1293 V538
---
Entry stack: [V12, 0x12c, S10, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287, V538, V523, V1287]
Stack pops: 3
Stack additions: [V1294]
Exit stack: [V12, 0x12c, S10, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287, V1294]

================================

Block 0xccb
[0xccb:0xcd1]
---
Predecessors: [0xcaf, 0xcc8]
Successors: [0xcd2, 0xcd3]
---
0xccb JUMPDEST
0xccc ISZERO
0xccd ISZERO
0xcce PUSH2 0xcd3
0xcd1 JUMPI
---
0xccb: JUMPDEST 
0xccc: V1295 = ISZERO S0
0xccd: V1296 = ISZERO V1295
0xcce: V1297 = 0xcd3
0xcd1: JUMPI 0xcd3 V1296
---
Entry stack: [V12, 0x12c, S8, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12c, S8, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287]

================================

Block 0xcd2
[0xcd2:0xcd2]
---
Predecessors: [0xccb]
Successors: []
---
0xcd2 INVALID
---
0xcd2: INVALID 
---
Entry stack: [V12, 0x12c, S7, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S7, V523, 0x0, 0x5c3, V523, V538, 0x0, V1287]

================================

Block 0xcd3
[0xcd3:0xcd6]
---
Predecessors: [0xccb, 0xcde]
Successors: [0xcd7]
---
0xcd3 JUMPDEST
0xcd4 DUP1
0xcd5 SWAP2
0xcd6 POP
---
0xcd3: JUMPDEST 
---
Entry stack: [V12, 0x12c, S7, V523, S5, {0x5c3, 0x650}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x12c, S7, V523, S5, {0x5c3, 0x650}, S3, S2, S0, S0]

================================

Block 0xcd7
[0xcd7:0xcdd]
---
Predecessors: [0xcd3]
Successors: [0x5c3, 0x650]
---
0xcd7 JUMPDEST
0xcd8 POP
0xcd9 SWAP3
0xcda SWAP2
0xcdb POP
0xcdc POP
0xcdd JUMP
---
0xcd7: JUMPDEST 
0xcdd: JUMP {0x5c3, 0x650}
---
Entry stack: [V12, 0x12c, S7, V523, S5, {0x5c3, 0x650}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x12c, S7, V523, S5, S1]

================================

Block 0xcde
[0xcde:0xceb]
---
Predecessors: [0x63d]
Successors: [0xcd3, 0xcec]
---
0xcde JUMPDEST
0xcdf PUSH1 0x0
0xce1 DUP3
0xce2 DUP3
0xce3 ADD
0xce4 DUP4
0xce5 DUP2
0xce6 LT
0xce7 ISZERO
0xce8 PUSH2 0xcd3
0xceb JUMPI
---
0xcde: JUMPDEST 
0xcdf: V1298 = 0x0
0xce3: V1299 = ADD V523 V598
0xce6: V1300 = LT V1299 V598
0xce7: V1301 = ISZERO V1300
0xce8: V1302 = 0xcd3
0xceb: JUMPI 0xcd3 V1301
---
Entry stack: [V12, 0x12c, S5, V523, S3, 0x650, V598, V523]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1299]
Exit stack: [V12, 0x12c, S5, V523, S3, 0x650, V598, V523, 0x0, V1299]

================================

Block 0xcec
[0xcec:0xcec]
---
Predecessors: [0xcde]
Successors: []
---
0xcec INVALID
---
0xcec: INVALID 
---
Entry stack: [V12, 0x12c, S7, V523, S5, 0x650, V598, V523, 0x0, V1299]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12c, S7, V523, S5, 0x650, V598, V523, 0x0, V1299]

================================

Block 0xced
[0xced:0xcf0]
---
Predecessors: []
Successors: [0xcf1]
---
0xced JUMPDEST
0xcee DUP1
0xcef SWAP2
0xcf0 POP
---
0xced: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xcf1
[0xcf1:0xd23]
---
Predecessors: [0xced]
Successors: []
---
0xcf1 JUMPDEST
0xcf2 POP
0xcf3 SWAP3
0xcf4 SWAP2
0xcf5 POP
0xcf6 POP
0xcf7 JUMP
0xcf8 STOP
0xcf9 LOG1
0xcfa PUSH6 0x627a7a723058
0xd01 SHA3
0xd02 MISSING 0xcb
0xd03 MISSING 0x2c
0xd04 OR
0xd05 ADDRESS
0xd06 CALLCODE
0xd07 MISSING 0xdb
0xd08 DUP8
0xd09 MISSING 0xce
0xd0a CALLDATACOPY
0xd0b PUSH24 0xbedef5e830599160edc189c5a8683f3247bee1a10f450029
---
0xcf1: JUMPDEST 
0xcf7: JUMP S4
0xcf8: STOP 
0xcf9: LOG S0 S1 S2
0xcfa: V1303 = 0x627a7a723058
0xd01: V1304 = SHA3 0x627a7a723058 S3
0xd02: MISSING 0xcb
0xd03: MISSING 0x2c
0xd04: V1305 = OR S0 S1
0xd05: V1306 = ADDRESS
0xd06: V1307 = CALLCODE V1306 V1305 S2 S3 S4 S5 S6
0xd07: MISSING 0xdb
0xd09: MISSING 0xce
0xd0a: CALLDATACOPY S0 S1 S2
0xd0b: V1308 = 0xbedef5e830599160edc189c5a8683f3247bee1a10f450029
---
Entry stack: [S1, S0]
Stack pops: 269
Stack additions: [0xbedef5e830599160edc189c5a8683f3247bee1a10f450029]
Exit stack: []

================================

Function 0:
Public function signature: 0x9ac3b00
Entry block: 0x12f
Exit block: 0x142
Body: 0x12f, 0x136, 0x13a, 0x142, 0x757

Function 1:
Public function signature: 0x2194f3a2
Entry block: 0x15e
Exit block: 0x142
Body: 0x142, 0x15e, 0x165, 0x169, 0x766

Function 2:
Public function signature: 0x2c4e722e
Entry block: 0x18d
Exit block: 0x1a0
Body: 0x18d, 0x194, 0x198, 0x1a0, 0x775

Function 3:
Public function signature: 0x4042b66f
Entry block: 0x1b2
Exit block: 0x1a0
Body: 0x1a0, 0x1b2, 0x1b9, 0x1bd, 0x77b

Function 4:
Public function signature: 0x4bfe642d
Entry block: 0x1d7
Exit block: 0x142
Body: 0x142, 0x1d7, 0x1de, 0x1e2, 0x781

Function 5:
Public function signature: 0x6fb66278
Entry block: 0x206
Exit block: 0x1a0
Body: 0x1a0, 0x206, 0x20d, 0x211, 0x790

Function 6:
Public function signature: 0x730369a7
Entry block: 0x22b
Exit block: 0x1a0
Body: 0x1a0, 0x22b, 0x232, 0x236, 0x796

Function 7:
Public function signature: 0x7d3c5961
Entry block: 0x250
Exit block: 0x1a0
Body: 0x1a0, 0x250, 0x257, 0x25b, 0x79c

Function 8:
Public function signature: 0x7d64bcb4
Entry block: 0x275
Exit block: 0x12d
Body: 0x12c, 0x12d, 0x275, 0x27c, 0x280, 0x7a2, 0x7ba, 0x7be, 0x7c6, 0x7cd, 0x7d1, 0x815, 0x819, 0x826, 0x82a, 0x89c, 0x8a0, 0x8ad, 0x8b1, 0x920, 0x924, 0x931, 0x935, 0x9a4, 0x9a8, 0x9b5, 0x9b9, 0x9d8, 0xa3c, 0xa40, 0xa4d, 0xa51, 0xa5c, 0xaa0, 0xaa4, 0xab1, 0xab5, 0xb12, 0xb16, 0xb23, 0xb27, 0xb57, 0xb58

Function 9:
Public function signature: 0x8bd61f26
Entry block: 0x28a
Exit block: 0x1a0
Body: 0x1a0, 0x28a, 0x291, 0x295, 0xb5b

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x2af
Exit block: 0x142
Body: 0x142, 0x2af, 0x2b6, 0x2ba, 0xb61

Function 11:
Public function signature: 0x8ea5220f
Entry block: 0x2de
Exit block: 0x142
Body: 0x142, 0x2de, 0x2e5, 0x2e9, 0xb70

Function 12:
Public function signature: 0xa85adeab
Entry block: 0x30d
Exit block: 0x1a0
Body: 0x1a0, 0x30d, 0x314, 0x318, 0xb7f

Function 13:
Public function signature: 0xaaffadf3
Entry block: 0x332
Exit block: 0x1a0
Body: 0x1a0, 0x332, 0x339, 0x33d, 0xb85

Function 14:
Public function signature: 0xbb5d3bcb
Entry block: 0x357
Exit block: 0x1a0
Body: 0x1a0, 0x357, 0x35e, 0x362, 0xb8b

Function 15:
Public function signature: 0xbfc47aa0
Entry block: 0x37c
Exit block: 0x1a0
Body: 0x1a0, 0x37c, 0x383, 0x387, 0xb91

Function 16:
Public function signature: 0xc53fc65f
Entry block: 0x3a1
Exit block: 0x1a0
Body: 0x1a0, 0x3a1, 0x3a8, 0x3ac, 0xb97

Function 17:
Public function signature: 0xc8765ff2
Entry block: 0x3c6
Exit block: 0x1a0
Body: 0x1a0, 0x3c6, 0x3cd, 0x3d1, 0xb9d

Function 18:
Public function signature: 0xe5760520
Entry block: 0x3eb
Exit block: 0x142
Body: 0x142, 0x3eb, 0x3f2, 0x3f6, 0xba3

Function 19:
Public function signature: 0xe6fd48bc
Entry block: 0x41a
Exit block: 0x1a0
Body: 0x1a0, 0x41a, 0x421, 0x425, 0xbb2

Function 20:
Public function signature: 0xec8ac4d8
Entry block: 0x43f
Exit block: 0x12d
Body: 0x12c, 0x12d, 0x43f

Function 21:
Public function signature: 0xecb70fb7
Entry block: 0x455
Exit block: 0x468
Body: 0x455, 0x45c, 0x460, 0x468

Function 22:
Public function signature: 0xf2fde38b
Entry block: 0x47c
Exit block: 0x12d
Body: 0x12c, 0x12d, 0x47c, 0x483, 0x487, 0xb57, 0xb58, 0xc48, 0xc5f, 0xc63, 0xc73, 0xc9b, 0xc9c, 0xc9d

Function 23:
Public function signature: 0xfc0c546a
Entry block: 0x49d
Exit block: 0x142
Body: 0x142, 0x49d, 0x4a4, 0x4a8, 0xca0

Function 24:
Public fallback function
Entry block: 0x122
Exit block: 0x12d
Body: 0x122, 0x123, 0x12c, 0x12d

Function 25:
Private function
Entry block: 0xbb8
Exit block: 0xc43
Body: 0xbb8, 0xc14, 0xc25, 0xc3e, 0xc40, 0xc43

Function 26:
Private function
Entry block: 0x4cc
Exit block: 0xc9d
Body: 0x4cc, 0x4e0, 0x4ef, 0x4fe, 0x550, 0x561, 0x57b, 0x590, 0x59e, 0x5a8, 0x5af, 0x5c3, 0x614, 0x625, 0x63d, 0x650, 0x6b2, 0x6c3, 0x750, 0x751, 0x752, 0xcaf, 0xcbc, 0xcc8, 0xccb, 0xcd3, 0xcd7, 0xcde

