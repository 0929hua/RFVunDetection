Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6fd]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x27ebcf0e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6fd
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x27ebcf0e
0x20: V14 = EQ V12 0x27ebcf0e
0x21: V15 = 0x6fd
0x24: JUMPI 0x6fd V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x72c]
---
0x25 DUP1
0x26 PUSH4 0x30c74e04
0x2b EQ
0x2c PUSH2 0x72c
0x2f JUMPI
---
0x26: V16 = 0x30c74e04
0x2b: V17 = EQ 0x30c74e04 V12
0x2c: V18 = 0x72c
0x2f: JUMPI 0x72c V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x753]
---
0x30 DUP1
0x31 PUSH4 0x519ee19e
0x36 EQ
0x37 PUSH2 0x753
0x3a JUMPI
---
0x31: V19 = 0x519ee19e
0x36: V20 = EQ 0x519ee19e V12
0x37: V21 = 0x753
0x3a: JUMPI 0x753 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x778]
---
0x3b DUP1
0x3c PUSH4 0x7fa8c158
0x41 EQ
0x42 PUSH2 0x778
0x45 JUMPI
---
0x3c: V22 = 0x7fa8c158
0x41: V23 = EQ 0x7fa8c158 V12
0x42: V24 = 0x778
0x45: JUMPI 0x778 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x79d]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x79d
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x79d
0x50: JUMPI 0x79d V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x7cc]
---
0x51 DUP1
0x52 PUSH4 0x96c5406d
0x57 EQ
0x58 PUSH2 0x7cc
0x5b JUMPI
---
0x52: V28 = 0x96c5406d
0x57: V29 = EQ 0x96c5406d V12
0x58: V30 = 0x7cc
0x5b: JUMPI 0x7cc V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x7f1]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x7f1
0x66 JUMPI
---
0x5d: V31 = 0xa035b1fe
0x62: V32 = EQ 0xa035b1fe V12
0x63: V33 = 0x7f1
0x66: JUMPI 0x7f1 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x816]
---
0x67 DUP1
0x68 PUSH4 0xc8e569a8
0x6d EQ
0x6e PUSH2 0x816
0x71 JUMPI
---
0x68: V34 = 0xc8e569a8
0x6d: V35 = EQ 0xc8e569a8 V12
0x6e: V36 = 0x816
0x71: JUMPI 0x816 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x83b]
---
0x72 DUP1
0x73 PUSH4 0xccb07cef
0x78 EQ
0x79 PUSH2 0x83b
0x7c JUMPI
---
0x73: V37 = 0xccb07cef
0x78: V38 = EQ 0xccb07cef V12
0x79: V39 = 0x83b
0x7c: JUMPI 0x83b V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x862]
---
0x7d DUP1
0x7e PUSH4 0xf9081ba2
0x83 EQ
0x84 PUSH2 0x862
0x87 JUMPI
---
0x7e: V40 = 0xf9081ba2
0x83: V41 = EQ 0xf9081ba2 V12
0x84: V42 = 0x862
0x87: JUMPI 0x862 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x0, 0x7d]
Successors: [0x89]
---
0x88 JUMPDEST
---
0x88: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x9a]
---
Predecessors: [0x88]
Successors: [0x9b, 0xaa]
---
0x89 JUMPDEST
0x8a PUSH1 0x0
0x8c DUP1
0x8d PUSH1 0x0
0x8f PUSH4 0x5a8b6500
0x94 TIMESTAMP
0x95 GT
0x96 ISZERO
0x97 PUSH2 0xaa
0x9a JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = 0x0
0x8d: V44 = 0x0
0x8f: V45 = 0x5a8b6500
0x94: V46 = TIMESTAMP
0x95: V47 = GT V46 0x5a8b6500
0x96: V48 = ISZERO V47
0x97: V49 = 0xaa
0x9a: JUMPI 0xaa V48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x9b
[0x9b:0xa9]
---
Predecessors: [0x89]
Successors: [0xc2]
---
0x9b PUSH7 0x254db1c2244000
0xa3 PUSH1 0x5
0xa5 SSTORE
0xa6 PUSH2 0xc2
0xa9 JUMP
---
0x9b: V50 = 0x254db1c2244000
0xa3: V51 = 0x5
0xa5: S[0x5] = 0x254db1c2244000
0xa6: V52 = 0xc2
0xa9: JUMP 0xc2
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xaa
[0xaa:0xb6]
---
Predecessors: [0x89]
Successors: [0xb7, 0xc2]
---
0xaa JUMPDEST
0xab PUSH4 0x5a628680
0xb0 TIMESTAMP
0xb1 GT
0xb2 ISZERO
0xb3 PUSH2 0xc2
0xb6 JUMPI
---
0xaa: JUMPDEST 
0xab: V53 = 0x5a628680
0xb0: V54 = TIMESTAMP
0xb1: V55 = GT V54 0x5a628680
0xb2: V56 = ISZERO V55
0xb3: V57 = 0xc2
0xb6: JUMPI 0xc2 V56
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xaa]
Successors: [0xc2]
---
0xb7 PUSH7 0x18de76816d8000
0xbf PUSH1 0x5
0xc1 SSTORE
---
0xb7: V58 = 0x18de76816d8000
0xbf: V59 = 0x5
0xc1: S[0x5] = 0x18de76816d8000
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xc2
[0xc2:0xc2]
---
Predecessors: [0x9b, 0xaa, 0xb7]
Successors: [0xc3]
---
0xc2 JUMPDEST
---
0xc2: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xc3
[0xc3:0x119]
---
Predecessors: [0xc2]
Successors: [0x11a, 0x11e]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 SLOAD
0xc8 PUSH1 0x1
0xca PUSH1 0xa0
0xcc PUSH1 0x2
0xce EXP
0xcf SUB
0xd0 AND
0xd1 SWAP1
0xd2 PUSH4 0x70a08231
0xd7 SWAP1
0xd8 ADDRESS
0xd9 SWAP1
0xda PUSH1 0x40
0xdc MLOAD
0xdd PUSH1 0x20
0xdf ADD
0xe0 MSTORE
0xe1 PUSH1 0x40
0xe3 MLOAD
0xe4 PUSH1 0xe0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 PUSH4 0xffffffff
0xee DUP5
0xef AND
0xf0 MUL
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x1
0xf5 PUSH1 0xa0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa SUB
0xfb SWAP1
0xfc SWAP2
0xfd AND
0xfe PUSH1 0x4
0x100 DUP3
0x101 ADD
0x102 MSTORE
0x103 PUSH1 0x24
0x105 ADD
0x106 PUSH1 0x20
0x108 PUSH1 0x40
0x10a MLOAD
0x10b DUP1
0x10c DUP4
0x10d SUB
0x10e DUP2
0x10f PUSH1 0x0
0x111 DUP8
0x112 DUP1
0x113 EXTCODESIZE
0x114 ISZERO
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0xc3: JUMPDEST 
0xc4: V60 = 0x0
0xc7: V61 = S[0x0]
0xc8: V62 = 0x1
0xca: V63 = 0xa0
0xcc: V64 = 0x2
0xce: V65 = EXP 0x2 0xa0
0xcf: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xd2: V68 = 0x70a08231
0xd8: V69 = ADDRESS
0xda: V70 = 0x40
0xdc: V71 = M[0x40]
0xdd: V72 = 0x20
0xdf: V73 = ADD 0x20 V71
0xe0: M[V73] = 0x0
0xe1: V74 = 0x40
0xe3: V75 = M[0x40]
0xe4: V76 = 0xe0
0xe6: V77 = 0x2
0xe8: V78 = EXP 0x2 0xe0
0xe9: V79 = 0xffffffff
0xef: V80 = AND 0x70a08231 0xffffffff
0xf0: V81 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xf2: M[V75] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xf3: V82 = 0x1
0xf5: V83 = 0xa0
0xf7: V84 = 0x2
0xf9: V85 = EXP 0x2 0xa0
0xfa: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd: V87 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0xfe: V88 = 0x4
0x101: V89 = ADD V75 0x4
0x102: M[V89] = V87
0x103: V90 = 0x24
0x105: V91 = ADD 0x24 V75
0x106: V92 = 0x20
0x108: V93 = 0x40
0x10a: V94 = M[0x40]
0x10d: V95 = SUB V91 V94
0x10f: V96 = 0x0
0x113: V97 = EXTCODESIZE V67
0x114: V98 = ISZERO V97
0x115: V99 = ISZERO V98
0x116: V100 = 0x11e
0x119: JUMPI 0x11e V99
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]
Exit stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0xc3]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V101 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]

================================

Block 0x11e
[0x11e:0x12a]
---
Predecessors: [0xc3]
Successors: [0x12b, 0x12f]
---
0x11e JUMPDEST
0x11f PUSH2 0x2c6
0x122 GAS
0x123 SUB
0x124 CALL
0x125 ISZERO
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x11e: JUMPDEST 
0x11f: V102 = 0x2c6
0x122: V103 = GAS
0x123: V104 = SUB V103 0x2c6
0x124: V105 = CALL V104 V67 0x0 V94 V95 V94 0x20
0x125: V106 = ISZERO V105
0x126: V107 = ISZERO V106
0x127: V108 = 0x12f
0x12a: JUMPI 0x12f V107
---
Entry stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91, 0x20, V94, V95, V94, 0x0, V67]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x11e]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V109 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91]

================================

Block 0x12f
[0x12f:0x145]
---
Predecessors: [0x11e]
Successors: [0x146, 0x17c]
---
0x12f JUMPDEST
0x130 POP
0x131 POP
0x132 POP
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 MLOAD
0x138 PUSH1 0x8
0x13a SSTORE
0x13b POP
0x13c PUSH1 0x3
0x13e SLOAD
0x13f TIMESTAMP
0x140 LT
0x141 ISZERO
0x142 PUSH2 0x17c
0x145 JUMPI
---
0x12f: JUMPDEST 
0x133: V110 = 0x40
0x135: V111 = M[0x40]
0x137: V112 = M[V111]
0x138: V113 = 0x8
0x13a: S[0x8] = V112
0x13c: V114 = 0x3
0x13e: V115 = S[0x3]
0x13f: V116 = TIMESTAMP
0x140: V117 = LT V116 V115
0x141: V118 = ISZERO V117
0x142: V119 = 0x17c
0x145: JUMPI 0x17c V118
---
Entry stack: [V12, 0x0, 0x0, 0x0, V67, 0x70a08231, V91]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x146
[0x146:0x172]
---
Predecessors: [0x12f]
Successors: [0x173, 0x177]
---
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e CALLER
0x14f AND
0x150 CALLVALUE
0x151 DUP1
0x152 ISZERO
0x153 PUSH2 0x8fc
0x156 MUL
0x157 SWAP1
0x158 PUSH1 0x40
0x15a MLOAD
0x15b PUSH1 0x0
0x15d PUSH1 0x40
0x15f MLOAD
0x160 DUP1
0x161 DUP4
0x162 SUB
0x163 DUP2
0x164 DUP6
0x165 DUP9
0x166 DUP9
0x167 CALL
0x168 SWAP4
0x169 POP
0x16a POP
0x16b POP
0x16c POP
0x16d ISZERO
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x146: V120 = 0x1
0x148: V121 = 0xa0
0x14a: V122 = 0x2
0x14c: V123 = EXP 0x2 0xa0
0x14d: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14e: V125 = CALLER
0x14f: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x150: V127 = CALLVALUE
0x152: V128 = ISZERO V127
0x153: V129 = 0x8fc
0x156: V130 = MUL 0x8fc V128
0x158: V131 = 0x40
0x15a: V132 = M[0x40]
0x15b: V133 = 0x0
0x15d: V134 = 0x40
0x15f: V135 = M[0x40]
0x162: V136 = SUB V132 V135
0x167: V137 = CALL V130 V126 V127 V135 V136 V135 0x0
0x16d: V138 = ISZERO V137
0x16e: V139 = ISZERO V138
0x16f: V140 = 0x177
0x172: JUMPI 0x177 V139
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x146]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V141 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x177
[0x177:0x17b]
---
Predecessors: [0x146, 0x1b8, 0x349, 0x4d2]
Successors: [0x684]
---
0x177 JUMPDEST
0x178 PUSH2 0x684
0x17b JUMP
---
0x177: JUMPDEST 
0x178: V142 = 0x684
0x17b: JUMP 0x684
---
Entry stack: [V12, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, 0x0]

================================

Block 0x17c
[0x17c:0x186]
---
Predecessors: [0x12f]
Successors: [0x187, 0x33d]
---
0x17c JUMPDEST
0x17d PUSH1 0x4
0x17f SLOAD
0x180 TIMESTAMP
0x181 GT
0x182 ISZERO
0x183 PUSH2 0x33d
0x186 JUMPI
---
0x17c: JUMPDEST 
0x17d: V143 = 0x4
0x17f: V144 = S[0x4]
0x180: V145 = TIMESTAMP
0x181: V146 = GT V145 V144
0x182: V147 = ISZERO V146
0x183: V148 = 0x33d
0x186: JUMPI 0x33d V147
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x187
[0x187:0x1b3]
---
Predecessors: [0x17c]
Successors: [0x1b4, 0x1b8]
---
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f CALLER
0x190 AND
0x191 CALLVALUE
0x192 DUP1
0x193 ISZERO
0x194 PUSH2 0x8fc
0x197 MUL
0x198 SWAP1
0x199 PUSH1 0x40
0x19b MLOAD
0x19c PUSH1 0x0
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 DUP4
0x1a3 SUB
0x1a4 DUP2
0x1a5 DUP6
0x1a6 DUP9
0x1a7 DUP9
0x1a8 CALL
0x1a9 SWAP4
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad POP
0x1ae ISZERO
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x187: V149 = 0x1
0x189: V150 = 0xa0
0x18b: V151 = 0x2
0x18d: V152 = EXP 0x2 0xa0
0x18e: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V154 = CALLER
0x190: V155 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x191: V156 = CALLVALUE
0x193: V157 = ISZERO V156
0x194: V158 = 0x8fc
0x197: V159 = MUL 0x8fc V157
0x199: V160 = 0x40
0x19b: V161 = M[0x40]
0x19c: V162 = 0x0
0x19e: V163 = 0x40
0x1a0: V164 = M[0x40]
0x1a3: V165 = SUB V161 V164
0x1a8: V166 = CALL V159 V155 V156 V164 V165 V164 0x0
0x1ae: V167 = ISZERO V166
0x1af: V168 = ISZERO V167
0x1b0: V169 = 0x1b8
0x1b3: JUMPI 0x1b8 V168
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x187]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V170 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1b8
[0x1b8:0x1c9]
---
Predecessors: [0x187]
Successors: [0x177, 0x1ca]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x9
0x1bb SLOAD
0x1bc PUSH2 0x100
0x1bf SWAP1
0x1c0 DIV
0x1c1 PUSH1 0xff
0x1c3 AND
0x1c4 ISZERO
0x1c5 ISZERO
0x1c6 PUSH2 0x177
0x1c9 JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V171 = 0x9
0x1bb: V172 = S[0x9]
0x1bc: V173 = 0x100
0x1c0: V174 = DIV V172 0x100
0x1c1: V175 = 0xff
0x1c3: V176 = AND 0xff V174
0x1c4: V177 = ISZERO V176
0x1c5: V178 = ISZERO V177
0x1c6: V179 = 0x177
0x1c9: JUMPI 0x177 V178
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1ca
[0x1ca:0x230]
---
Predecessors: [0x1b8]
Successors: [0x231, 0x235]
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd SLOAD
0x1ce PUSH1 0x2
0x1d0 SLOAD
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 SWAP2
0x1da DUP3
0x1db AND
0x1dc SWAP3
0x1dd PUSH4 0xa9059cbb
0x1e2 SWAP3
0x1e3 SWAP1
0x1e4 SWAP2
0x1e5 AND
0x1e6 SWAP1
0x1e7 DUP4
0x1e8 SWAP1
0x1e9 PUSH4 0x70a08231
0x1ee SWAP1
0x1ef ADDRESS
0x1f0 SWAP1
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 MSTORE
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb PUSH1 0xe0
0x1fd PUSH1 0x2
0x1ff EXP
0x200 PUSH4 0xffffffff
0x205 DUP5
0x206 AND
0x207 MUL
0x208 DUP2
0x209 MSTORE
0x20a PUSH1 0x1
0x20c PUSH1 0xa0
0x20e PUSH1 0x2
0x210 EXP
0x211 SUB
0x212 SWAP1
0x213 SWAP2
0x214 AND
0x215 PUSH1 0x4
0x217 DUP3
0x218 ADD
0x219 MSTORE
0x21a PUSH1 0x24
0x21c ADD
0x21d PUSH1 0x20
0x21f PUSH1 0x40
0x221 MLOAD
0x222 DUP1
0x223 DUP4
0x224 SUB
0x225 DUP2
0x226 PUSH1 0x0
0x228 DUP8
0x229 DUP1
0x22a EXTCODESIZE
0x22b ISZERO
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x1ca: V180 = 0x0
0x1cd: V181 = S[0x0]
0x1ce: V182 = 0x2
0x1d0: V183 = S[0x2]
0x1d1: V184 = 0x1
0x1d3: V185 = 0xa0
0x1d5: V186 = 0x2
0x1d7: V187 = EXP 0x2 0xa0
0x1d8: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1db: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x1dd: V190 = 0xa9059cbb
0x1e5: V191 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V192 = 0x70a08231
0x1ef: V193 = ADDRESS
0x1f1: V194 = 0x40
0x1f3: V195 = M[0x40]
0x1f4: V196 = 0x20
0x1f6: V197 = ADD 0x20 V195
0x1f7: M[V197] = 0x0
0x1f8: V198 = 0x40
0x1fa: V199 = M[0x40]
0x1fb: V200 = 0xe0
0x1fd: V201 = 0x2
0x1ff: V202 = EXP 0x2 0xe0
0x200: V203 = 0xffffffff
0x206: V204 = AND 0x70a08231 0xffffffff
0x207: V205 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x209: M[V199] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x20a: V206 = 0x1
0x20c: V207 = 0xa0
0x20e: V208 = 0x2
0x210: V209 = EXP 0x2 0xa0
0x211: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x214: V211 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x215: V212 = 0x4
0x218: V213 = ADD V199 0x4
0x219: M[V213] = V211
0x21a: V214 = 0x24
0x21c: V215 = ADD 0x24 V199
0x21d: V216 = 0x20
0x21f: V217 = 0x40
0x221: V218 = M[0x40]
0x224: V219 = SUB V215 V218
0x226: V220 = 0x0
0x22a: V221 = EXTCODESIZE V189
0x22b: V222 = ISZERO V221
0x22c: V223 = ISZERO V222
0x22d: V224 = 0x235
0x230: JUMPI 0x235 V223
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V189, 0xa9059cbb, V191, V189, 0x70a08231, V215, 0x20, V218, V219, V218, 0x0, V189]
Exit stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V191, V189, 0x70a08231, V215, 0x20, V218, V219, V218, 0x0, V189]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x1ca]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V225 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V191, V189, 0x70a08231, V215, 0x20, V218, V219, V218, 0x0, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V191, V189, 0x70a08231, V215, 0x20, V218, V219, V218, 0x0, V189]

================================

Block 0x235
[0x235:0x241]
---
Predecessors: [0x1ca]
Successors: [0x242, 0x246]
---
0x235 JUMPDEST
0x236 PUSH2 0x2c6
0x239 GAS
0x23a SUB
0x23b CALL
0x23c ISZERO
0x23d ISZERO
0x23e PUSH2 0x246
0x241 JUMPI
---
0x235: JUMPDEST 
0x236: V226 = 0x2c6
0x239: V227 = GAS
0x23a: V228 = SUB V227 0x2c6
0x23b: V229 = CALL V228 V189 0x0 V218 V219 V218 0x20
0x23c: V230 = ISZERO V229
0x23d: V231 = ISZERO V230
0x23e: V232 = 0x246
0x241: JUMPI 0x246 V231
---
Entry stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V191, V189, 0x70a08231, V215, 0x20, V218, V219, V218, 0x0, V189]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V191, V189, 0x70a08231, V215]

================================

Block 0x242
[0x242:0x245]
---
Predecessors: [0x235]
Successors: []
---
0x242 PUSH1 0x0
0x244 DUP1
0x245 REVERT
---
0x242: V233 = 0x0
0x245: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V191, V189, 0x70a08231, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V191, V189, 0x70a08231, V215]

================================

Block 0x246
[0x246:0x28e]
---
Predecessors: [0x235]
Successors: [0x28f, 0x293]
---
0x246 JUMPDEST
0x247 POP
0x248 POP
0x249 POP
0x24a PUSH1 0x40
0x24c MLOAD
0x24d DUP1
0x24e MLOAD
0x24f SWAP1
0x250 POP
0x251 PUSH1 0x40
0x253 MLOAD
0x254 PUSH1 0xe0
0x256 PUSH1 0x2
0x258 EXP
0x259 PUSH4 0xffffffff
0x25e DUP6
0x25f AND
0x260 MUL
0x261 DUP2
0x262 MSTORE
0x263 PUSH1 0x1
0x265 PUSH1 0xa0
0x267 PUSH1 0x2
0x269 EXP
0x26a SUB
0x26b SWAP1
0x26c SWAP3
0x26d AND
0x26e PUSH1 0x4
0x270 DUP4
0x271 ADD
0x272 MSTORE
0x273 PUSH1 0x24
0x275 DUP3
0x276 ADD
0x277 MSTORE
0x278 PUSH1 0x44
0x27a ADD
0x27b PUSH1 0x0
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 DUP4
0x282 SUB
0x283 DUP2
0x284 PUSH1 0x0
0x286 DUP8
0x287 DUP1
0x288 EXTCODESIZE
0x289 ISZERO
0x28a ISZERO
0x28b PUSH2 0x293
0x28e JUMPI
---
0x246: JUMPDEST 
0x24a: V234 = 0x40
0x24c: V235 = M[0x40]
0x24e: V236 = M[V235]
0x251: V237 = 0x40
0x253: V238 = M[0x40]
0x254: V239 = 0xe0
0x256: V240 = 0x2
0x258: V241 = EXP 0x2 0xe0
0x259: V242 = 0xffffffff
0x25f: V243 = AND 0xa9059cbb 0xffffffff
0x260: V244 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x262: M[V238] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x263: V245 = 0x1
0x265: V246 = 0xa0
0x267: V247 = 0x2
0x269: V248 = EXP 0x2 0xa0
0x26a: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26d: V250 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V251 = 0x4
0x271: V252 = ADD V238 0x4
0x272: M[V252] = V250
0x273: V253 = 0x24
0x276: V254 = ADD V238 0x24
0x277: M[V254] = V236
0x278: V255 = 0x44
0x27a: V256 = ADD 0x44 V238
0x27b: V257 = 0x0
0x27d: V258 = 0x40
0x27f: V259 = M[0x40]
0x282: V260 = SUB V256 V259
0x284: V261 = 0x0
0x288: V262 = EXTCODESIZE V189
0x289: V263 = ISZERO V262
0x28a: V264 = ISZERO V263
0x28b: V265 = 0x293
0x28e: JUMPI 0x293 V264
---
Entry stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V191, V189, 0x70a08231, V215]
Stack pops: 6
Stack additions: [S5, S4, V256, 0x0, V259, V260, V259, 0x0, S5]
Exit stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, V189]

================================

Block 0x28f
[0x28f:0x292]
---
Predecessors: [0x246]
Successors: []
---
0x28f PUSH1 0x0
0x291 DUP1
0x292 REVERT
---
0x28f: V266 = 0x0
0x292: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, V189]

================================

Block 0x293
[0x293:0x29f]
---
Predecessors: [0x246]
Successors: [0x2a0, 0x2a4]
---
0x293 JUMPDEST
0x294 PUSH2 0x2c6
0x297 GAS
0x298 SUB
0x299 CALL
0x29a ISZERO
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x293: JUMPDEST 
0x294: V267 = 0x2c6
0x297: V268 = GAS
0x298: V269 = SUB V268 0x2c6
0x299: V270 = CALL V269 V189 0x0 V259 V260 V259 0x0
0x29a: V271 = ISZERO V270
0x29b: V272 = ISZERO V271
0x29c: V273 = 0x2a4
0x29f: JUMPI 0x2a4 V272
---
Entry stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, V189]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V256]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x293]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V274 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V256]

================================

Block 0x2a4
[0x2a4:0x2fd]
---
Predecessors: [0x293]
Successors: [0x2fe, 0x302]
---
0x2a4 JUMPDEST
0x2a5 POP
0x2a6 POP
0x2a7 PUSH1 0x0
0x2a9 DUP1
0x2aa SLOAD
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 AND
0x2b4 SWAP2
0x2b5 POP
0x2b6 PUSH4 0x70a08231
0x2bb SWAP1
0x2bc ADDRESS
0x2bd SWAP1
0x2be PUSH1 0x40
0x2c0 MLOAD
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 MSTORE
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 PUSH1 0xe0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd PUSH4 0xffffffff
0x2d2 DUP5
0x2d3 AND
0x2d4 MUL
0x2d5 DUP2
0x2d6 MSTORE
0x2d7 PUSH1 0x1
0x2d9 PUSH1 0xa0
0x2db PUSH1 0x2
0x2dd EXP
0x2de SUB
0x2df SWAP1
0x2e0 SWAP2
0x2e1 AND
0x2e2 PUSH1 0x4
0x2e4 DUP3
0x2e5 ADD
0x2e6 MSTORE
0x2e7 PUSH1 0x24
0x2e9 ADD
0x2ea PUSH1 0x20
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef DUP1
0x2f0 DUP4
0x2f1 SUB
0x2f2 DUP2
0x2f3 PUSH1 0x0
0x2f5 DUP8
0x2f6 DUP1
0x2f7 EXTCODESIZE
0x2f8 ISZERO
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2a4: JUMPDEST 
0x2a7: V275 = 0x0
0x2aa: V276 = S[0x0]
0x2ab: V277 = 0x1
0x2ad: V278 = 0xa0
0x2af: V279 = 0x2
0x2b1: V280 = EXP 0x2 0xa0
0x2b2: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x2b6: V283 = 0x70a08231
0x2bc: V284 = ADDRESS
0x2be: V285 = 0x40
0x2c0: V286 = M[0x40]
0x2c1: V287 = 0x20
0x2c3: V288 = ADD 0x20 V286
0x2c4: M[V288] = 0x0
0x2c5: V289 = 0x40
0x2c7: V290 = M[0x40]
0x2c8: V291 = 0xe0
0x2ca: V292 = 0x2
0x2cc: V293 = EXP 0x2 0xe0
0x2cd: V294 = 0xffffffff
0x2d3: V295 = AND 0x70a08231 0xffffffff
0x2d4: V296 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2d6: M[V290] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2d7: V297 = 0x1
0x2d9: V298 = 0xa0
0x2db: V299 = 0x2
0x2dd: V300 = EXP 0x2 0xa0
0x2de: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e1: V302 = AND V284 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V303 = 0x4
0x2e5: V304 = ADD V290 0x4
0x2e6: M[V304] = V302
0x2e7: V305 = 0x24
0x2e9: V306 = ADD 0x24 V290
0x2ea: V307 = 0x20
0x2ec: V308 = 0x40
0x2ee: V309 = M[0x40]
0x2f1: V310 = SUB V306 V309
0x2f3: V311 = 0x0
0x2f7: V312 = EXTCODESIZE V282
0x2f8: V313 = ISZERO V312
0x2f9: V314 = ISZERO V313
0x2fa: V315 = 0x302
0x2fd: JUMPI 0x302 V314
---
Entry stack: [V12, 0x0, 0x0, 0x0, V189, 0xa9059cbb, V256]
Stack pops: 3
Stack additions: [V282, 0x70a08231, V306, 0x20, V309, V310, V309, 0x0, V282]
Exit stack: [V12, 0x0, 0x0, 0x0, V282, 0x70a08231, V306, 0x20, V309, V310, V309, 0x0, V282]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2a4]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V316 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V282, 0x70a08231, V306, 0x20, V309, V310, V309, 0x0, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V282, 0x70a08231, V306, 0x20, V309, V310, V309, 0x0, V282]

================================

Block 0x302
[0x302:0x30e]
---
Predecessors: [0x2a4]
Successors: [0x30f, 0x313]
---
0x302 JUMPDEST
0x303 PUSH2 0x2c6
0x306 GAS
0x307 SUB
0x308 CALL
0x309 ISZERO
0x30a ISZERO
0x30b PUSH2 0x313
0x30e JUMPI
---
0x302: JUMPDEST 
0x303: V317 = 0x2c6
0x306: V318 = GAS
0x307: V319 = SUB V318 0x2c6
0x308: V320 = CALL V319 V282 0x0 V309 V310 V309 0x20
0x309: V321 = ISZERO V320
0x30a: V322 = ISZERO V321
0x30b: V323 = 0x313
0x30e: JUMPI 0x313 V322
---
Entry stack: [V12, 0x0, 0x0, 0x0, V282, 0x70a08231, V306, 0x20, V309, V310, V309, 0x0, V282]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V282, 0x70a08231, V306]

================================

Block 0x30f
[0x30f:0x312]
---
Predecessors: [0x302]
Successors: []
---
0x30f PUSH1 0x0
0x311 DUP1
0x312 REVERT
---
0x30f: V324 = 0x0
0x312: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V282, 0x70a08231, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V282, 0x70a08231, V306]

================================

Block 0x313
[0x313:0x337]
---
Predecessors: [0x302]
Successors: [0x338]
---
0x313 JUMPDEST
0x314 POP
0x315 POP
0x316 POP
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b MLOAD
0x31c PUSH1 0x8
0x31e SSTORE
0x31f POP
0x320 PUSH1 0x9
0x322 DUP1
0x323 SLOAD
0x324 PUSH1 0xff
0x326 NOT
0x327 PUSH2 0xff00
0x32a NOT
0x32b SWAP1
0x32c SWAP2
0x32d AND
0x32e PUSH2 0x100
0x331 OR
0x332 AND
0x333 PUSH1 0x1
0x335 OR
0x336 SWAP1
0x337 SSTORE
---
0x313: JUMPDEST 
0x317: V325 = 0x40
0x319: V326 = M[0x40]
0x31b: V327 = M[V326]
0x31c: V328 = 0x8
0x31e: S[0x8] = V327
0x320: V329 = 0x9
0x323: V330 = S[0x9]
0x324: V331 = 0xff
0x326: V332 = NOT 0xff
0x327: V333 = 0xff00
0x32a: V334 = NOT 0xff00
0x32d: V335 = AND V330 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x32e: V336 = 0x100
0x331: V337 = OR 0x100 V335
0x332: V338 = AND V337 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x333: V339 = 0x1
0x335: V340 = OR 0x1 V338
0x337: S[0x9] = V340
---
Entry stack: [V12, 0x0, 0x0, 0x0, V282, 0x70a08231, V306]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x338
[0x338:0x33c]
---
Predecessors: [0x313]
Successors: [0x684]
---
0x338 JUMPDEST
0x339 PUSH2 0x684
0x33c JUMP
---
0x338: JUMPDEST 
0x339: V341 = 0x684
0x33c: JUMP 0x684
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x33d
[0x33d:0x348]
---
Predecessors: [0x17c]
Successors: [0x349, 0x37f]
---
0x33d JUMPDEST
0x33e PUSH1 0x9
0x340 SLOAD
0x341 PUSH1 0xff
0x343 AND
0x344 ISZERO
0x345 PUSH2 0x37f
0x348 JUMPI
---
0x33d: JUMPDEST 
0x33e: V342 = 0x9
0x340: V343 = S[0x9]
0x341: V344 = 0xff
0x343: V345 = AND 0xff V343
0x344: V346 = ISZERO V345
0x345: V347 = 0x37f
0x348: JUMPI 0x37f V346
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x349
[0x349:0x375]
---
Predecessors: [0x33d]
Successors: [0x177, 0x376]
---
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 CALLER
0x352 AND
0x353 CALLVALUE
0x354 DUP1
0x355 ISZERO
0x356 PUSH2 0x8fc
0x359 MUL
0x35a SWAP1
0x35b PUSH1 0x40
0x35d MLOAD
0x35e PUSH1 0x0
0x360 PUSH1 0x40
0x362 MLOAD
0x363 DUP1
0x364 DUP4
0x365 SUB
0x366 DUP2
0x367 DUP6
0x368 DUP9
0x369 DUP9
0x36a CALL
0x36b SWAP4
0x36c POP
0x36d POP
0x36e POP
0x36f POP
0x370 ISZERO
0x371 ISZERO
0x372 PUSH2 0x177
0x375 JUMPI
---
0x349: V348 = 0x1
0x34b: V349 = 0xa0
0x34d: V350 = 0x2
0x34f: V351 = EXP 0x2 0xa0
0x350: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V353 = CALLER
0x352: V354 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x353: V355 = CALLVALUE
0x355: V356 = ISZERO V355
0x356: V357 = 0x8fc
0x359: V358 = MUL 0x8fc V356
0x35b: V359 = 0x40
0x35d: V360 = M[0x40]
0x35e: V361 = 0x0
0x360: V362 = 0x40
0x362: V363 = M[0x40]
0x365: V364 = SUB V360 V363
0x36a: V365 = CALL V358 V354 V355 V363 V364 V363 0x0
0x370: V366 = ISZERO V365
0x371: V367 = ISZERO V366
0x372: V368 = 0x177
0x375: JUMPI 0x177 V367
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x376
[0x376:0x379]
---
Predecessors: [0x349]
Successors: []
---
0x376 PUSH1 0x0
0x378 DUP1
0x379 REVERT
---
0x376: V369 = 0x0
0x379: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x37a
[0x37a:0x37e]
---
Predecessors: []
Successors: [0x684]
---
0x37a JUMPDEST
0x37b PUSH2 0x684
0x37e JUMP
---
0x37a: JUMPDEST 
0x37b: V370 = 0x684
0x37e: JUMP 0x684
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x37f
[0x37f:0x38d]
---
Predecessors: [0x33d]
Successors: [0x38e, 0x38f]
---
0x37f JUMPDEST
0x380 PUSH1 0x6
0x382 SLOAD
0x383 PUSH1 0x5
0x385 SLOAD
0x386 CALLVALUE
0x387 DUP2
0x388 ISZERO
0x389 ISZERO
0x38a PUSH2 0x38f
0x38d JUMPI
---
0x37f: JUMPDEST 
0x380: V371 = 0x6
0x382: V372 = S[0x6]
0x383: V373 = 0x5
0x385: V374 = S[0x5]
0x386: V375 = CALLVALUE
0x388: V376 = ISZERO V374
0x389: V377 = ISZERO V376
0x38a: V378 = 0x38f
0x38d: JUMPI 0x38f V377
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V372, V374, V375]
Exit stack: [V12, 0x0, 0x0, 0x0, V372, V374, V375]

================================

Block 0x38e
[0x38e:0x38e]
---
Predecessors: [0x37f]
Successors: []
---
0x38e INVALID
---
0x38e: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V372, V374, V375]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V372, V374, V375]

================================

Block 0x38f
[0x38f:0x39b]
---
Predecessors: [0x37f]
Successors: [0x39c, 0x3cd]
---
0x38f JUMPDEST
0x390 DIV
0x391 MUL
0x392 SWAP3
0x393 POP
0x394 PUSH1 0x0
0x396 DUP4
0x397 GT
0x398 PUSH2 0x3cd
0x39b JUMPI
---
0x38f: JUMPDEST 
0x390: V379 = DIV V375 V374
0x391: V380 = MUL V379 V372
0x394: V381 = 0x0
0x397: V382 = GT V380 0x0
0x398: V383 = 0x3cd
0x39b: JUMPI 0x3cd V382
---
Entry stack: [V12, 0x0, 0x0, 0x0, V372, V374, V375]
Stack pops: 6
Stack additions: [V380, S4, S3]
Exit stack: [V12, V380, 0x0, 0x0]

================================

Block 0x39c
[0x39c:0x3c8]
---
Predecessors: [0x38f]
Successors: [0x3c9, 0x3cd]
---
0x39c PUSH1 0x1
0x39e PUSH1 0xa0
0x3a0 PUSH1 0x2
0x3a2 EXP
0x3a3 SUB
0x3a4 CALLER
0x3a5 AND
0x3a6 CALLVALUE
0x3a7 DUP1
0x3a8 ISZERO
0x3a9 PUSH2 0x8fc
0x3ac MUL
0x3ad SWAP1
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 PUSH1 0x0
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 DUP1
0x3b7 DUP4
0x3b8 SUB
0x3b9 DUP2
0x3ba DUP6
0x3bb DUP9
0x3bc DUP9
0x3bd CALL
0x3be SWAP4
0x3bf POP
0x3c0 POP
0x3c1 POP
0x3c2 POP
0x3c3 ISZERO
0x3c4 ISZERO
0x3c5 PUSH2 0x3cd
0x3c8 JUMPI
---
0x39c: V384 = 0x1
0x39e: V385 = 0xa0
0x3a0: V386 = 0x2
0x3a2: V387 = EXP 0x2 0xa0
0x3a3: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a4: V389 = CALLER
0x3a5: V390 = AND V389 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V391 = CALLVALUE
0x3a8: V392 = ISZERO V391
0x3a9: V393 = 0x8fc
0x3ac: V394 = MUL 0x8fc V392
0x3ae: V395 = 0x40
0x3b0: V396 = M[0x40]
0x3b1: V397 = 0x0
0x3b3: V398 = 0x40
0x3b5: V399 = M[0x40]
0x3b8: V400 = SUB V396 V399
0x3bd: V401 = CALL V394 V390 V391 V399 V400 V399 0x0
0x3c3: V402 = ISZERO V401
0x3c4: V403 = ISZERO V402
0x3c5: V404 = 0x3cd
0x3c8: JUMPI 0x3cd V403
---
Entry stack: [V12, V380, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, 0x0, 0x0]

================================

Block 0x3c9
[0x3c9:0x3cc]
---
Predecessors: [0x39c]
Successors: []
---
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc REVERT
---
0x3c9: V405 = 0x0
0x3cc: REVERT 0x0 0x0
---
Entry stack: [V12, V380, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, 0x0, 0x0]

================================

Block 0x3cd
[0x3cd:0x3cd]
---
Predecessors: [0x38f, 0x39c]
Successors: [0x3ce]
---
0x3cd JUMPDEST
---
0x3cd: JUMPDEST 
---
Entry stack: [V12, V380, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, 0x0, 0x0]

================================

Block 0x3ce
[0x3ce:0x3d6]
---
Predecessors: [0x3cd]
Successors: [0x3d7, 0x3db]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x0
0x3d1 DUP4
0x3d2 GT
0x3d3 PUSH2 0x3db
0x3d6 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V406 = 0x0
0x3d2: V407 = GT V380 0x0
0x3d3: V408 = 0x3db
0x3d6: JUMPI 0x3db V407
---
Entry stack: [V12, V380, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, V380, 0x0, 0x0]

================================

Block 0x3d7
[0x3d7:0x3da]
---
Predecessors: [0x3ce]
Successors: []
---
0x3d7 PUSH1 0x0
0x3d9 DUP1
0x3da REVERT
---
0x3d7: V409 = 0x0
0x3da: REVERT 0x0 0x0
---
Entry stack: [V12, V380, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, 0x0, 0x0]

================================

Block 0x3db
[0x3db:0x3ea]
---
Predecessors: [0x3ce]
Successors: [0x3eb, 0x3ec]
---
0x3db JUMPDEST
0x3dc PUSH1 0x6
0x3de SLOAD
0x3df PUSH1 0x5
0x3e1 SLOAD
0x3e2 DUP5
0x3e3 MUL
0x3e4 DUP2
0x3e5 ISZERO
0x3e6 ISZERO
0x3e7 PUSH2 0x3ec
0x3ea JUMPI
---
0x3db: JUMPDEST 
0x3dc: V410 = 0x6
0x3de: V411 = S[0x6]
0x3df: V412 = 0x5
0x3e1: V413 = S[0x5]
0x3e3: V414 = MUL V380 V413
0x3e5: V415 = ISZERO V411
0x3e6: V416 = ISZERO V415
0x3e7: V417 = 0x3ec
0x3ea: JUMPI 0x3ec V416
---
Entry stack: [V12, V380, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V411, V414]
Exit stack: [V12, V380, 0x0, 0x0, V411, V414]

================================

Block 0x3eb
[0x3eb:0x3eb]
---
Predecessors: [0x3db]
Successors: []
---
0x3eb INVALID
---
0x3eb: INVALID 
---
Entry stack: [V12, V380, 0x0, 0x0, V411, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, 0x0, 0x0, V411, V414]

================================

Block 0x3ec
[0x3ec:0x3fa]
---
Predecessors: [0x3db]
Successors: [0x3fb, 0x501]
---
0x3ec JUMPDEST
0x3ed DIV
0x3ee SWAP2
0x3ef POP
0x3f0 DUP3
0x3f1 PUSH1 0x8
0x3f3 SLOAD
0x3f4 LT
0x3f5 ISZERO
0x3f6 ISZERO
0x3f7 PUSH2 0x501
0x3fa JUMPI
---
0x3ec: JUMPDEST 
0x3ed: V418 = DIV V414 V411
0x3f1: V419 = 0x8
0x3f3: V420 = S[0x8]
0x3f4: V421 = LT V420 V380
0x3f5: V422 = ISZERO V421
0x3f6: V423 = ISZERO V422
0x3f7: V424 = 0x501
0x3fa: JUMPI 0x501 V423
---
Entry stack: [V12, V380, 0x0, 0x0, V411, V414]
Stack pops: 5
Stack additions: [S4, V418, S2]
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x3fb
[0x3fb:0x428]
---
Predecessors: [0x3ec]
Successors: [0x429, 0x42d]
---
0x3fb PUSH1 0x1
0x3fd SLOAD
0x3fe PUSH1 0x1
0x400 PUSH1 0xa0
0x402 PUSH1 0x2
0x404 EXP
0x405 SUB
0x406 AND
0x407 DUP3
0x408 ISZERO
0x409 PUSH2 0x8fc
0x40c MUL
0x40d DUP4
0x40e PUSH1 0x40
0x410 MLOAD
0x411 PUSH1 0x0
0x413 PUSH1 0x40
0x415 MLOAD
0x416 DUP1
0x417 DUP4
0x418 SUB
0x419 DUP2
0x41a DUP6
0x41b DUP9
0x41c DUP9
0x41d CALL
0x41e SWAP4
0x41f POP
0x420 POP
0x421 POP
0x422 POP
0x423 ISZERO
0x424 ISZERO
0x425 PUSH2 0x42d
0x428 JUMPI
---
0x3fb: V425 = 0x1
0x3fd: V426 = S[0x1]
0x3fe: V427 = 0x1
0x400: V428 = 0xa0
0x402: V429 = 0x2
0x404: V430 = EXP 0x2 0xa0
0x405: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x408: V433 = ISZERO V418
0x409: V434 = 0x8fc
0x40c: V435 = MUL 0x8fc V433
0x40e: V436 = 0x40
0x410: V437 = M[0x40]
0x411: V438 = 0x0
0x413: V439 = 0x40
0x415: V440 = M[0x40]
0x418: V441 = SUB V437 V440
0x41d: V442 = CALL V435 V432 V418 V440 V441 V440 0x0
0x423: V443 = ISZERO V442
0x424: V444 = ISZERO V443
0x425: V445 = 0x42d
0x428: JUMPI 0x42d V444
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x3fb]
Successors: []
---
0x429 PUSH1 0x0
0x42b DUP1
0x42c REVERT
---
0x429: V446 = 0x0
0x42c: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x42d
[0x42d:0x435]
---
Predecessors: [0x3fb]
Successors: [0x436, 0x46a]
---
0x42d JUMPDEST
0x42e DUP2
0x42f CALLVALUE
0x430 GT
0x431 ISZERO
0x432 PUSH2 0x46a
0x435 JUMPI
---
0x42d: JUMPDEST 
0x42f: V447 = CALLVALUE
0x430: V448 = GT V447 V418
0x431: V449 = ISZERO V448
0x432: V450 = 0x46a
0x435: JUMPI 0x46a V449
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x436
[0x436:0x465]
---
Predecessors: [0x42d]
Successors: [0x466, 0x46a]
---
0x436 CALLER
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f AND
0x440 PUSH2 0x8fc
0x443 DUP4
0x444 CALLVALUE
0x445 SUB
0x446 SWAP1
0x447 DUP2
0x448 ISZERO
0x449 MUL
0x44a SWAP1
0x44b PUSH1 0x40
0x44d MLOAD
0x44e PUSH1 0x0
0x450 PUSH1 0x40
0x452 MLOAD
0x453 DUP1
0x454 DUP4
0x455 SUB
0x456 DUP2
0x457 DUP6
0x458 DUP9
0x459 DUP9
0x45a CALL
0x45b SWAP4
0x45c POP
0x45d POP
0x45e POP
0x45f POP
0x460 ISZERO
0x461 ISZERO
0x462 PUSH2 0x46a
0x465 JUMPI
---
0x436: V451 = CALLER
0x437: V452 = 0x1
0x439: V453 = 0xa0
0x43b: V454 = 0x2
0x43d: V455 = EXP 0x2 0xa0
0x43e: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43f: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x440: V458 = 0x8fc
0x444: V459 = CALLVALUE
0x445: V460 = SUB V459 V418
0x448: V461 = ISZERO V460
0x449: V462 = MUL V461 0x8fc
0x44b: V463 = 0x40
0x44d: V464 = M[0x40]
0x44e: V465 = 0x0
0x450: V466 = 0x40
0x452: V467 = M[0x40]
0x455: V468 = SUB V464 V467
0x45a: V469 = CALL V462 V457 V460 V467 V468 V467 0x0
0x460: V470 = ISZERO V469
0x461: V471 = ISZERO V470
0x462: V472 = 0x46a
0x465: JUMPI 0x46a V471
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x466
[0x466:0x469]
---
Predecessors: [0x436]
Successors: []
---
0x466 PUSH1 0x0
0x468 DUP1
0x469 REVERT
---
0x466: V473 = 0x0
0x469: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x46a
[0x46a:0x46a]
---
Predecessors: [0x42d, 0x436]
Successors: [0x46b]
---
0x46a JUMPDEST
---
0x46a: JUMPDEST 
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x46b
[0x46b:0x4bc]
---
Predecessors: [0x46a]
Successors: [0x4bd, 0x4c1]
---
0x46b JUMPDEST
0x46c PUSH1 0x0
0x46e SLOAD
0x46f PUSH1 0x1
0x471 PUSH1 0xa0
0x473 PUSH1 0x2
0x475 EXP
0x476 SUB
0x477 AND
0x478 PUSH4 0xa9059cbb
0x47d CALLER
0x47e DUP6
0x47f PUSH1 0x40
0x481 MLOAD
0x482 PUSH1 0xe0
0x484 PUSH1 0x2
0x486 EXP
0x487 PUSH4 0xffffffff
0x48c DUP6
0x48d AND
0x48e MUL
0x48f DUP2
0x490 MSTORE
0x491 PUSH1 0x1
0x493 PUSH1 0xa0
0x495 PUSH1 0x2
0x497 EXP
0x498 SUB
0x499 SWAP1
0x49a SWAP3
0x49b AND
0x49c PUSH1 0x4
0x49e DUP4
0x49f ADD
0x4a0 MSTORE
0x4a1 PUSH1 0x24
0x4a3 DUP3
0x4a4 ADD
0x4a5 MSTORE
0x4a6 PUSH1 0x44
0x4a8 ADD
0x4a9 PUSH1 0x0
0x4ab PUSH1 0x40
0x4ad MLOAD
0x4ae DUP1
0x4af DUP4
0x4b0 SUB
0x4b1 DUP2
0x4b2 PUSH1 0x0
0x4b4 DUP8
0x4b5 DUP1
0x4b6 EXTCODESIZE
0x4b7 ISZERO
0x4b8 ISZERO
0x4b9 PUSH2 0x4c1
0x4bc JUMPI
---
0x46b: JUMPDEST 
0x46c: V474 = 0x0
0x46e: V475 = S[0x0]
0x46f: V476 = 0x1
0x471: V477 = 0xa0
0x473: V478 = 0x2
0x475: V479 = EXP 0x2 0xa0
0x476: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x477: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x478: V482 = 0xa9059cbb
0x47d: V483 = CALLER
0x47f: V484 = 0x40
0x481: V485 = M[0x40]
0x482: V486 = 0xe0
0x484: V487 = 0x2
0x486: V488 = EXP 0x2 0xe0
0x487: V489 = 0xffffffff
0x48d: V490 = AND 0xa9059cbb 0xffffffff
0x48e: V491 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x490: M[V485] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x491: V492 = 0x1
0x493: V493 = 0xa0
0x495: V494 = 0x2
0x497: V495 = EXP 0x2 0xa0
0x498: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49b: V497 = AND V483 0xffffffffffffffffffffffffffffffffffffffff
0x49c: V498 = 0x4
0x49f: V499 = ADD V485 0x4
0x4a0: M[V499] = V497
0x4a1: V500 = 0x24
0x4a4: V501 = ADD V485 0x24
0x4a5: M[V501] = V380
0x4a6: V502 = 0x44
0x4a8: V503 = ADD 0x44 V485
0x4a9: V504 = 0x0
0x4ab: V505 = 0x40
0x4ad: V506 = M[0x40]
0x4b0: V507 = SUB V503 V506
0x4b2: V508 = 0x0
0x4b6: V509 = EXTCODESIZE V481
0x4b7: V510 = ISZERO V509
0x4b8: V511 = ISZERO V510
0x4b9: V512 = 0x4c1
0x4bc: JUMPI 0x4c1 V511
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V481, 0xa9059cbb, V503, 0x0, V506, V507, V506, 0x0, V481]
Exit stack: [V12, V380, V418, 0x0, V481, 0xa9059cbb, V503, 0x0, V506, V507, V506, 0x0, V481]

================================

Block 0x4bd
[0x4bd:0x4c0]
---
Predecessors: [0x46b]
Successors: []
---
0x4bd PUSH1 0x0
0x4bf DUP1
0x4c0 REVERT
---
0x4bd: V513 = 0x0
0x4c0: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, 0x0, V481, 0xa9059cbb, V503, 0x0, V506, V507, V506, 0x0, V481]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, 0x0, V481, 0xa9059cbb, V503, 0x0, V506, V507, V506, 0x0, V481]

================================

Block 0x4c1
[0x4c1:0x4cd]
---
Predecessors: [0x46b]
Successors: [0x4ce, 0x4d2]
---
0x4c1 JUMPDEST
0x4c2 PUSH2 0x2c6
0x4c5 GAS
0x4c6 SUB
0x4c7 CALL
0x4c8 ISZERO
0x4c9 ISZERO
0x4ca PUSH2 0x4d2
0x4cd JUMPI
---
0x4c1: JUMPDEST 
0x4c2: V514 = 0x2c6
0x4c5: V515 = GAS
0x4c6: V516 = SUB V515 0x2c6
0x4c7: V517 = CALL V516 V481 0x0 V506 V507 V506 0x0
0x4c8: V518 = ISZERO V517
0x4c9: V519 = ISZERO V518
0x4ca: V520 = 0x4d2
0x4cd: JUMPI 0x4d2 V519
---
Entry stack: [V12, V380, V418, 0x0, V481, 0xa9059cbb, V503, 0x0, V506, V507, V506, 0x0, V481]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V380, V418, 0x0, V481, 0xa9059cbb, V503]

================================

Block 0x4ce
[0x4ce:0x4d1]
---
Predecessors: [0x4c1]
Successors: []
---
0x4ce PUSH1 0x0
0x4d0 DUP1
0x4d1 REVERT
---
0x4ce: V521 = 0x0
0x4d1: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, 0x0, V481, 0xa9059cbb, V503]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, 0x0, V481, 0xa9059cbb, V503]

================================

Block 0x4d2
[0x4d2:0x4ee]
---
Predecessors: [0x4c1]
Successors: [0x177, 0x4ef]
---
0x4d2 JUMPDEST
0x4d3 POP
0x4d4 POP
0x4d5 PUSH1 0x7
0x4d7 DUP1
0x4d8 SLOAD
0x4d9 DUP6
0x4da ADD
0x4db SWAP1
0x4dc SSTORE
0x4dd POP
0x4de PUSH1 0x8
0x4e0 DUP1
0x4e1 SLOAD
0x4e2 DUP5
0x4e3 SWAP1
0x4e4 SUB
0x4e5 SWAP1
0x4e6 DUP2
0x4e7 SWAP1
0x4e8 SSTORE
0x4e9 ISZERO
0x4ea ISZERO
0x4eb PUSH2 0x177
0x4ee JUMPI
---
0x4d2: JUMPDEST 
0x4d5: V522 = 0x7
0x4d8: V523 = S[0x7]
0x4da: V524 = ADD V380 V523
0x4dc: S[0x7] = V524
0x4de: V525 = 0x8
0x4e1: V526 = S[0x8]
0x4e4: V527 = SUB V526 V380
0x4e8: S[0x8] = V527
0x4e9: V528 = ISZERO V527
0x4ea: V529 = ISZERO V528
0x4eb: V530 = 0x177
0x4ee: JUMPI 0x177 V529
---
Entry stack: [V12, V380, V418, 0x0, V481, 0xa9059cbb, V503]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x4ef
[0x4ef:0x4fb]
---
Predecessors: [0x4d2]
Successors: [0x4fc]
---
0x4ef PUSH1 0x9
0x4f1 DUP1
0x4f2 SLOAD
0x4f3 PUSH1 0xff
0x4f5 NOT
0x4f6 AND
0x4f7 PUSH1 0x1
0x4f9 OR
0x4fa SWAP1
0x4fb SSTORE
---
0x4ef: V531 = 0x9
0x4f2: V532 = S[0x9]
0x4f3: V533 = 0xff
0x4f5: V534 = NOT 0xff
0x4f6: V535 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V532
0x4f7: V536 = 0x1
0x4f9: V537 = OR 0x1 V535
0x4fb: S[0x9] = V537
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x4fc
[0x4fc:0x500]
---
Predecessors: [0x4ef]
Successors: [0x684]
---
0x4fc JUMPDEST
0x4fd PUSH2 0x684
0x500 JUMP
---
0x4fc: JUMPDEST 
0x4fd: V538 = 0x684
0x500: JUMP 0x684
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, 0x0]

================================

Block 0x501
[0x501:0x512]
---
Predecessors: [0x3ec]
Successors: [0x513, 0x514]
---
0x501 JUMPDEST
0x502 PUSH1 0x6
0x504 SLOAD
0x505 PUSH1 0x5
0x507 SLOAD
0x508 PUSH1 0x8
0x50a SLOAD
0x50b MUL
0x50c DUP2
0x50d ISZERO
0x50e ISZERO
0x50f PUSH2 0x514
0x512 JUMPI
---
0x501: JUMPDEST 
0x502: V539 = 0x6
0x504: V540 = S[0x6]
0x505: V541 = 0x5
0x507: V542 = S[0x5]
0x508: V543 = 0x8
0x50a: V544 = S[0x8]
0x50b: V545 = MUL V544 V542
0x50d: V546 = ISZERO V540
0x50e: V547 = ISZERO V546
0x50f: V548 = 0x514
0x512: JUMPI 0x514 V547
---
Entry stack: [V12, V380, V418, 0x0]
Stack pops: 0
Stack additions: [V540, V545]
Exit stack: [V12, V380, V418, 0x0, V540, V545]

================================

Block 0x513
[0x513:0x513]
---
Predecessors: [0x501]
Successors: []
---
0x513 INVALID
---
0x513: INVALID 
---
Entry stack: [V12, V380, V418, 0x0, V540, V545]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, 0x0, V540, V545]

================================

Block 0x514
[0x514:0x547]
---
Predecessors: [0x501]
Successors: [0x548, 0x54c]
---
0x514 JUMPDEST
0x515 PUSH1 0x1
0x517 SLOAD
0x518 SWAP2
0x519 SWAP1
0x51a DIV
0x51b SWAP2
0x51c POP
0x51d PUSH1 0x1
0x51f PUSH1 0xa0
0x521 PUSH1 0x2
0x523 EXP
0x524 SUB
0x525 AND
0x526 DUP2
0x527 ISZERO
0x528 PUSH2 0x8fc
0x52b MUL
0x52c DUP3
0x52d PUSH1 0x40
0x52f MLOAD
0x530 PUSH1 0x0
0x532 PUSH1 0x40
0x534 MLOAD
0x535 DUP1
0x536 DUP4
0x537 SUB
0x538 DUP2
0x539 DUP6
0x53a DUP9
0x53b DUP9
0x53c CALL
0x53d SWAP4
0x53e POP
0x53f POP
0x540 POP
0x541 POP
0x542 ISZERO
0x543 ISZERO
0x544 PUSH2 0x54c
0x547 JUMPI
---
0x514: JUMPDEST 
0x515: V549 = 0x1
0x517: V550 = S[0x1]
0x51a: V551 = DIV V545 V540
0x51d: V552 = 0x1
0x51f: V553 = 0xa0
0x521: V554 = 0x2
0x523: V555 = EXP 0x2 0xa0
0x524: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x525: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x527: V558 = ISZERO V551
0x528: V559 = 0x8fc
0x52b: V560 = MUL 0x8fc V558
0x52d: V561 = 0x40
0x52f: V562 = M[0x40]
0x530: V563 = 0x0
0x532: V564 = 0x40
0x534: V565 = M[0x40]
0x537: V566 = SUB V562 V565
0x53c: V567 = CALL V560 V557 V551 V565 V566 V565 0x0
0x542: V568 = ISZERO V567
0x543: V569 = ISZERO V568
0x544: V570 = 0x54c
0x547: JUMPI 0x54c V569
---
Entry stack: [V12, V380, V418, 0x0, V540, V545]
Stack pops: 3
Stack additions: [V551]
Exit stack: [V12, V380, V418, V551]

================================

Block 0x548
[0x548:0x54b]
---
Predecessors: [0x514]
Successors: []
---
0x548 PUSH1 0x0
0x54a DUP1
0x54b REVERT
---
0x548: V571 = 0x0
0x54b: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, V551]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, V551]

================================

Block 0x54c
[0x54c:0x5a4]
---
Predecessors: [0x514]
Successors: [0x5a5, 0x5a9]
---
0x54c JUMPDEST
0x54d PUSH1 0x0
0x54f SLOAD
0x550 PUSH1 0x8
0x552 SLOAD
0x553 PUSH1 0x1
0x555 PUSH1 0xa0
0x557 PUSH1 0x2
0x559 EXP
0x55a SUB
0x55b SWAP1
0x55c SWAP2
0x55d AND
0x55e SWAP1
0x55f PUSH4 0xa9059cbb
0x564 SWAP1
0x565 CALLER
0x566 SWAP1
0x567 PUSH1 0x40
0x569 MLOAD
0x56a PUSH1 0xe0
0x56c PUSH1 0x2
0x56e EXP
0x56f PUSH4 0xffffffff
0x574 DUP6
0x575 AND
0x576 MUL
0x577 DUP2
0x578 MSTORE
0x579 PUSH1 0x1
0x57b PUSH1 0xa0
0x57d PUSH1 0x2
0x57f EXP
0x580 SUB
0x581 SWAP1
0x582 SWAP3
0x583 AND
0x584 PUSH1 0x4
0x586 DUP4
0x587 ADD
0x588 MSTORE
0x589 PUSH1 0x24
0x58b DUP3
0x58c ADD
0x58d MSTORE
0x58e PUSH1 0x44
0x590 ADD
0x591 PUSH1 0x0
0x593 PUSH1 0x40
0x595 MLOAD
0x596 DUP1
0x597 DUP4
0x598 SUB
0x599 DUP2
0x59a PUSH1 0x0
0x59c DUP8
0x59d DUP1
0x59e EXTCODESIZE
0x59f ISZERO
0x5a0 ISZERO
0x5a1 PUSH2 0x5a9
0x5a4 JUMPI
---
0x54c: JUMPDEST 
0x54d: V572 = 0x0
0x54f: V573 = S[0x0]
0x550: V574 = 0x8
0x552: V575 = S[0x8]
0x553: V576 = 0x1
0x555: V577 = 0xa0
0x557: V578 = 0x2
0x559: V579 = EXP 0x2 0xa0
0x55a: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55d: V581 = AND V573 0xffffffffffffffffffffffffffffffffffffffff
0x55f: V582 = 0xa9059cbb
0x565: V583 = CALLER
0x567: V584 = 0x40
0x569: V585 = M[0x40]
0x56a: V586 = 0xe0
0x56c: V587 = 0x2
0x56e: V588 = EXP 0x2 0xe0
0x56f: V589 = 0xffffffff
0x575: V590 = AND 0xa9059cbb 0xffffffff
0x576: V591 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x578: M[V585] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x579: V592 = 0x1
0x57b: V593 = 0xa0
0x57d: V594 = 0x2
0x57f: V595 = EXP 0x2 0xa0
0x580: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x583: V597 = AND V583 0xffffffffffffffffffffffffffffffffffffffff
0x584: V598 = 0x4
0x587: V599 = ADD V585 0x4
0x588: M[V599] = V597
0x589: V600 = 0x24
0x58c: V601 = ADD V585 0x24
0x58d: M[V601] = V575
0x58e: V602 = 0x44
0x590: V603 = ADD 0x44 V585
0x591: V604 = 0x0
0x593: V605 = 0x40
0x595: V606 = M[0x40]
0x598: V607 = SUB V603 V606
0x59a: V608 = 0x0
0x59e: V609 = EXTCODESIZE V581
0x59f: V610 = ISZERO V609
0x5a0: V611 = ISZERO V610
0x5a1: V612 = 0x5a9
0x5a4: JUMPI 0x5a9 V611
---
Entry stack: [V12, V380, V418, V551]
Stack pops: 0
Stack additions: [V581, 0xa9059cbb, V603, 0x0, V606, V607, V606, 0x0, V581]
Exit stack: [V12, V380, V418, V551, V581, 0xa9059cbb, V603, 0x0, V606, V607, V606, 0x0, V581]

================================

Block 0x5a5
[0x5a5:0x5a8]
---
Predecessors: [0x54c]
Successors: []
---
0x5a5 PUSH1 0x0
0x5a7 DUP1
0x5a8 REVERT
---
0x5a5: V613 = 0x0
0x5a8: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, V551, V581, 0xa9059cbb, V603, 0x0, V606, V607, V606, 0x0, V581]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, V551, V581, 0xa9059cbb, V603, 0x0, V606, V607, V606, 0x0, V581]

================================

Block 0x5a9
[0x5a9:0x5b5]
---
Predecessors: [0x54c]
Successors: [0x5b6, 0x5ba]
---
0x5a9 JUMPDEST
0x5aa PUSH2 0x2c6
0x5ad GAS
0x5ae SUB
0x5af CALL
0x5b0 ISZERO
0x5b1 ISZERO
0x5b2 PUSH2 0x5ba
0x5b5 JUMPI
---
0x5a9: JUMPDEST 
0x5aa: V614 = 0x2c6
0x5ad: V615 = GAS
0x5ae: V616 = SUB V615 0x2c6
0x5af: V617 = CALL V616 V581 0x0 V606 V607 V606 0x0
0x5b0: V618 = ISZERO V617
0x5b1: V619 = ISZERO V618
0x5b2: V620 = 0x5ba
0x5b5: JUMPI 0x5ba V619
---
Entry stack: [V12, V380, V418, V551, V581, 0xa9059cbb, V603, 0x0, V606, V607, V606, 0x0, V581]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V380, V418, V551, V581, 0xa9059cbb, V603]

================================

Block 0x5b6
[0x5b6:0x5b9]
---
Predecessors: [0x5a9]
Successors: []
---
0x5b6 PUSH1 0x0
0x5b8 DUP1
0x5b9 REVERT
---
0x5b6: V621 = 0x0
0x5b9: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, V551, V581, 0xa9059cbb, V603]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, V551, V581, 0xa9059cbb, V603]

================================

Block 0x5ba
[0x5ba:0x5ed]
---
Predecessors: [0x5a9]
Successors: [0x5ee, 0x5f2]
---
0x5ba JUMPDEST
0x5bb POP
0x5bc POP
0x5bd POP
0x5be CALLER
0x5bf PUSH1 0x1
0x5c1 PUSH1 0xa0
0x5c3 PUSH1 0x2
0x5c5 EXP
0x5c6 SUB
0x5c7 AND
0x5c8 PUSH2 0x8fc
0x5cb DUP3
0x5cc CALLVALUE
0x5cd SUB
0x5ce SWAP1
0x5cf DUP2
0x5d0 ISZERO
0x5d1 MUL
0x5d2 SWAP1
0x5d3 PUSH1 0x40
0x5d5 MLOAD
0x5d6 PUSH1 0x0
0x5d8 PUSH1 0x40
0x5da MLOAD
0x5db DUP1
0x5dc DUP4
0x5dd SUB
0x5de DUP2
0x5df DUP6
0x5e0 DUP9
0x5e1 DUP9
0x5e2 CALL
0x5e3 SWAP4
0x5e4 POP
0x5e5 POP
0x5e6 POP
0x5e7 POP
0x5e8 ISZERO
0x5e9 ISZERO
0x5ea PUSH2 0x5f2
0x5ed JUMPI
---
0x5ba: JUMPDEST 
0x5be: V622 = CALLER
0x5bf: V623 = 0x1
0x5c1: V624 = 0xa0
0x5c3: V625 = 0x2
0x5c5: V626 = EXP 0x2 0xa0
0x5c6: V627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c7: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0x5c8: V629 = 0x8fc
0x5cc: V630 = CALLVALUE
0x5cd: V631 = SUB V630 V551
0x5d0: V632 = ISZERO V631
0x5d1: V633 = MUL V632 0x8fc
0x5d3: V634 = 0x40
0x5d5: V635 = M[0x40]
0x5d6: V636 = 0x0
0x5d8: V637 = 0x40
0x5da: V638 = M[0x40]
0x5dd: V639 = SUB V635 V638
0x5e2: V640 = CALL V633 V628 V631 V638 V639 V638 0x0
0x5e8: V641 = ISZERO V640
0x5e9: V642 = ISZERO V641
0x5ea: V643 = 0x5f2
0x5ed: JUMPI 0x5f2 V642
---
Entry stack: [V12, V380, V418, V551, V581, 0xa9059cbb, V603]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V380, V418, V551]

================================

Block 0x5ee
[0x5ee:0x5f1]
---
Predecessors: [0x5ba]
Successors: []
---
0x5ee PUSH1 0x0
0x5f0 DUP1
0x5f1 REVERT
---
0x5ee: V644 = 0x0
0x5f1: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, V551]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, V551]

================================

Block 0x5f2
[0x5f2:0x654]
---
Predecessors: [0x5ba]
Successors: [0x655, 0x659]
---
0x5f2 JUMPDEST
0x5f3 PUSH1 0x8
0x5f5 SLOAD
0x5f6 PUSH1 0x7
0x5f8 DUP1
0x5f9 SLOAD
0x5fa SWAP1
0x5fb SWAP2
0x5fc ADD
0x5fd SWAP1
0x5fe SSTORE
0x5ff PUSH1 0x0
0x601 DUP1
0x602 SLOAD
0x603 PUSH1 0x1
0x605 PUSH1 0xa0
0x607 PUSH1 0x2
0x609 EXP
0x60a SUB
0x60b AND
0x60c SWAP1
0x60d PUSH4 0x70a08231
0x612 SWAP1
0x613 ADDRESS
0x614 SWAP1
0x615 PUSH1 0x40
0x617 MLOAD
0x618 PUSH1 0x20
0x61a ADD
0x61b MSTORE
0x61c PUSH1 0x40
0x61e MLOAD
0x61f PUSH1 0xe0
0x621 PUSH1 0x2
0x623 EXP
0x624 PUSH4 0xffffffff
0x629 DUP5
0x62a AND
0x62b MUL
0x62c DUP2
0x62d MSTORE
0x62e PUSH1 0x1
0x630 PUSH1 0xa0
0x632 PUSH1 0x2
0x634 EXP
0x635 SUB
0x636 SWAP1
0x637 SWAP2
0x638 AND
0x639 PUSH1 0x4
0x63b DUP3
0x63c ADD
0x63d MSTORE
0x63e PUSH1 0x24
0x640 ADD
0x641 PUSH1 0x20
0x643 PUSH1 0x40
0x645 MLOAD
0x646 DUP1
0x647 DUP4
0x648 SUB
0x649 DUP2
0x64a PUSH1 0x0
0x64c DUP8
0x64d DUP1
0x64e EXTCODESIZE
0x64f ISZERO
0x650 ISZERO
0x651 PUSH2 0x659
0x654 JUMPI
---
0x5f2: JUMPDEST 
0x5f3: V645 = 0x8
0x5f5: V646 = S[0x8]
0x5f6: V647 = 0x7
0x5f9: V648 = S[0x7]
0x5fc: V649 = ADD V646 V648
0x5fe: S[0x7] = V649
0x5ff: V650 = 0x0
0x602: V651 = S[0x0]
0x603: V652 = 0x1
0x605: V653 = 0xa0
0x607: V654 = 0x2
0x609: V655 = EXP 0x2 0xa0
0x60a: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60b: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x60d: V658 = 0x70a08231
0x613: V659 = ADDRESS
0x615: V660 = 0x40
0x617: V661 = M[0x40]
0x618: V662 = 0x20
0x61a: V663 = ADD 0x20 V661
0x61b: M[V663] = 0x0
0x61c: V664 = 0x40
0x61e: V665 = M[0x40]
0x61f: V666 = 0xe0
0x621: V667 = 0x2
0x623: V668 = EXP 0x2 0xe0
0x624: V669 = 0xffffffff
0x62a: V670 = AND 0x70a08231 0xffffffff
0x62b: V671 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x62d: M[V665] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x62e: V672 = 0x1
0x630: V673 = 0xa0
0x632: V674 = 0x2
0x634: V675 = EXP 0x2 0xa0
0x635: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x638: V677 = AND V659 0xffffffffffffffffffffffffffffffffffffffff
0x639: V678 = 0x4
0x63c: V679 = ADD V665 0x4
0x63d: M[V679] = V677
0x63e: V680 = 0x24
0x640: V681 = ADD 0x24 V665
0x641: V682 = 0x20
0x643: V683 = 0x40
0x645: V684 = M[0x40]
0x648: V685 = SUB V681 V684
0x64a: V686 = 0x0
0x64e: V687 = EXTCODESIZE V657
0x64f: V688 = ISZERO V687
0x650: V689 = ISZERO V688
0x651: V690 = 0x659
0x654: JUMPI 0x659 V689
---
Entry stack: [V12, V380, V418, V551]
Stack pops: 0
Stack additions: [V657, 0x70a08231, V681, 0x20, V684, V685, V684, 0x0, V657]
Exit stack: [V12, V380, V418, V551, V657, 0x70a08231, V681, 0x20, V684, V685, V684, 0x0, V657]

================================

Block 0x655
[0x655:0x658]
---
Predecessors: [0x5f2]
Successors: []
---
0x655 PUSH1 0x0
0x657 DUP1
0x658 REVERT
---
0x655: V691 = 0x0
0x658: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, V551, V657, 0x70a08231, V681, 0x20, V684, V685, V684, 0x0, V657]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, V551, V657, 0x70a08231, V681, 0x20, V684, V685, V684, 0x0, V657]

================================

Block 0x659
[0x659:0x665]
---
Predecessors: [0x5f2]
Successors: [0x666, 0x66a]
---
0x659 JUMPDEST
0x65a PUSH2 0x2c6
0x65d GAS
0x65e SUB
0x65f CALL
0x660 ISZERO
0x661 ISZERO
0x662 PUSH2 0x66a
0x665 JUMPI
---
0x659: JUMPDEST 
0x65a: V692 = 0x2c6
0x65d: V693 = GAS
0x65e: V694 = SUB V693 0x2c6
0x65f: V695 = CALL V694 V657 0x0 V684 V685 V684 0x20
0x660: V696 = ISZERO V695
0x661: V697 = ISZERO V696
0x662: V698 = 0x66a
0x665: JUMPI 0x66a V697
---
Entry stack: [V12, V380, V418, V551, V657, 0x70a08231, V681, 0x20, V684, V685, V684, 0x0, V657]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V380, V418, V551, V657, 0x70a08231, V681]

================================

Block 0x666
[0x666:0x669]
---
Predecessors: [0x659]
Successors: []
---
0x666 PUSH1 0x0
0x668 DUP1
0x669 REVERT
---
0x666: V699 = 0x0
0x669: REVERT 0x0 0x0
---
Entry stack: [V12, V380, V418, V551, V657, 0x70a08231, V681]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V380, V418, V551, V657, 0x70a08231, V681]

================================

Block 0x66a
[0x66a:0x683]
---
Predecessors: [0x659]
Successors: [0x684]
---
0x66a JUMPDEST
0x66b POP
0x66c POP
0x66d POP
0x66e PUSH1 0x40
0x670 MLOAD
0x671 DUP1
0x672 MLOAD
0x673 PUSH1 0x8
0x675 SSTORE
0x676 POP
0x677 PUSH1 0x9
0x679 DUP1
0x67a SLOAD
0x67b PUSH1 0xff
0x67d NOT
0x67e AND
0x67f PUSH1 0x1
0x681 OR
0x682 SWAP1
0x683 SSTORE
---
0x66a: JUMPDEST 
0x66e: V700 = 0x40
0x670: V701 = M[0x40]
0x672: V702 = M[V701]
0x673: V703 = 0x8
0x675: S[0x8] = V702
0x677: V704 = 0x9
0x67a: V705 = S[0x9]
0x67b: V706 = 0xff
0x67d: V707 = NOT 0xff
0x67e: V708 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V705
0x67f: V709 = 0x1
0x681: V710 = OR 0x1 V708
0x683: S[0x9] = V710
---
Entry stack: [V12, V380, V418, V551, V657, 0x70a08231, V681]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V380, V418, V551]

================================

Block 0x684
[0x684:0x684]
---
Predecessors: [0x177, 0x338, 0x37a, 0x4fc, 0x66a]
Successors: [0x685]
---
0x684 JUMPDEST
---
0x684: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x685
[0x685:0x685]
---
Predecessors: [0x684]
Successors: [0x686]
---
0x685 JUMPDEST
---
0x685: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x686
[0x686:0x686]
---
Predecessors: [0x685]
Successors: [0x687]
---
0x686 JUMPDEST
---
0x686: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x687
[0x687:0x6f7]
---
Predecessors: [0x686]
Successors: [0x6f8]
---
0x687 JUMPDEST
0x688 PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6a9 PUSH1 0x8
0x6ab SLOAD
0x6ac PUSH1 0x40
0x6ae MLOAD
0x6af SWAP1
0x6b0 DUP2
0x6b1 MSTORE
0x6b2 PUSH1 0x20
0x6b4 ADD
0x6b5 PUSH1 0x40
0x6b7 MLOAD
0x6b8 DUP1
0x6b9 SWAP2
0x6ba SUB
0x6bb SWAP1
0x6bc LOG1
0x6bd PUSH1 0x9
0x6bf SLOAD
0x6c0 PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6e1 SWAP1
0x6e2 PUSH1 0xff
0x6e4 AND
0x6e5 PUSH1 0x40
0x6e7 MLOAD
0x6e8 SWAP1
0x6e9 ISZERO
0x6ea ISZERO
0x6eb DUP2
0x6ec MSTORE
0x6ed PUSH1 0x20
0x6ef ADD
0x6f0 PUSH1 0x40
0x6f2 MLOAD
0x6f3 DUP1
0x6f4 SWAP2
0x6f5 SUB
0x6f6 SWAP1
0x6f7 LOG1
---
0x687: JUMPDEST 
0x688: V711 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6a9: V712 = 0x8
0x6ab: V713 = S[0x8]
0x6ac: V714 = 0x40
0x6ae: V715 = M[0x40]
0x6b1: M[V715] = V713
0x6b2: V716 = 0x20
0x6b4: V717 = ADD 0x20 V715
0x6b5: V718 = 0x40
0x6b7: V719 = M[0x40]
0x6ba: V720 = SUB V717 V719
0x6bc: LOG V719 V720 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6bd: V721 = 0x9
0x6bf: V722 = S[0x9]
0x6c0: V723 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6e2: V724 = 0xff
0x6e4: V725 = AND 0xff V722
0x6e5: V726 = 0x40
0x6e7: V727 = M[0x40]
0x6e9: V728 = ISZERO V725
0x6ea: V729 = ISZERO V728
0x6ec: M[V727] = V729
0x6ed: V730 = 0x20
0x6ef: V731 = ADD 0x20 V727
0x6f0: V732 = 0x40
0x6f2: V733 = M[0x40]
0x6f5: V734 = SUB V731 V733
0x6f7: LOG V733 V734 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x6f8
[0x6f8:0x6fc]
---
Predecessors: [0x687]
Successors: []
---
0x6f8 JUMPDEST
0x6f9 POP
0x6fa POP
0x6fb POP
0x6fc STOP
---
0x6f8: JUMPDEST 
0x6fc: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x6fd
[0x6fd:0x703]
---
Predecessors: [0xb]
Successors: [0x704, 0x708]
---
0x6fd JUMPDEST
0x6fe CALLVALUE
0x6ff ISZERO
0x700 PUSH2 0x708
0x703 JUMPI
---
0x6fd: JUMPDEST 
0x6fe: V735 = CALLVALUE
0x6ff: V736 = ISZERO V735
0x700: V737 = 0x708
0x703: JUMPI 0x708 V736
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x704
[0x704:0x707]
---
Predecessors: [0x6fd]
Successors: []
---
0x704 PUSH1 0x0
0x706 DUP1
0x707 REVERT
---
0x704: V738 = 0x0
0x707: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x708
[0x708:0x70f]
---
Predecessors: [0x6fd]
Successors: [0x891]
---
0x708 JUMPDEST
0x709 PUSH2 0x710
0x70c PUSH2 0x891
0x70f JUMP
---
0x708: JUMPDEST 
0x709: V739 = 0x710
0x70c: V740 = 0x891
0x70f: JUMP 0x891
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x710]
Exit stack: [V12, 0x710]

================================

Block 0x710
[0x710:0x72b]
---
Predecessors: [0x891, 0x8ba, 0x8e4]
Successors: []
---
0x710 JUMPDEST
0x711 PUSH1 0x40
0x713 MLOAD
0x714 PUSH1 0x1
0x716 PUSH1 0xa0
0x718 PUSH1 0x2
0x71a EXP
0x71b SUB
0x71c SWAP1
0x71d SWAP2
0x71e AND
0x71f DUP2
0x720 MSTORE
0x721 PUSH1 0x20
0x723 ADD
0x724 PUSH1 0x40
0x726 MLOAD
0x727 DUP1
0x728 SWAP2
0x729 SUB
0x72a SWAP1
0x72b RETURN
---
0x710: JUMPDEST 
0x711: V741 = 0x40
0x713: V742 = M[0x40]
0x714: V743 = 0x1
0x716: V744 = 0xa0
0x718: V745 = 0x2
0x71a: V746 = EXP 0x2 0xa0
0x71b: V747 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71e: V748 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x720: M[V742] = V748
0x721: V749 = 0x20
0x723: V750 = ADD 0x20 V742
0x724: V751 = 0x40
0x726: V752 = M[0x40]
0x729: V753 = SUB V750 V752
0x72b: RETURN V752 V753
---
Entry stack: [V12, 0x710, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x710]

================================

Block 0x72c
[0x72c:0x732]
---
Predecessors: [0x25]
Successors: [0x733, 0x737]
---
0x72c JUMPDEST
0x72d CALLVALUE
0x72e ISZERO
0x72f PUSH2 0x737
0x732 JUMPI
---
0x72c: JUMPDEST 
0x72d: V754 = CALLVALUE
0x72e: V755 = ISZERO V754
0x72f: V756 = 0x737
0x732: JUMPI 0x737 V755
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x733
[0x733:0x736]
---
Predecessors: [0x72c]
Successors: []
---
0x733 PUSH1 0x0
0x735 DUP1
0x736 REVERT
---
0x733: V757 = 0x0
0x736: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x737
[0x737:0x73e]
---
Predecessors: [0x72c]
Successors: [0x8a0]
---
0x737 JUMPDEST
0x738 PUSH2 0x73f
0x73b PUSH2 0x8a0
0x73e JUMP
---
0x737: JUMPDEST 
0x738: V758 = 0x73f
0x73b: V759 = 0x8a0
0x73e: JUMP 0x8a0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x73f]
Exit stack: [V12, 0x73f]

================================

Block 0x73f
[0x73f:0x752]
---
Predecessors: [0x8a0, 0x8db]
Successors: []
---
0x73f JUMPDEST
0x740 PUSH1 0x40
0x742 MLOAD
0x743 SWAP1
0x744 ISZERO
0x745 ISZERO
0x746 DUP2
0x747 MSTORE
0x748 PUSH1 0x20
0x74a ADD
0x74b PUSH1 0x40
0x74d MLOAD
0x74e DUP1
0x74f SWAP2
0x750 SUB
0x751 SWAP1
0x752 RETURN
---
0x73f: JUMPDEST 
0x740: V760 = 0x40
0x742: V761 = M[0x40]
0x744: V762 = ISZERO S0
0x745: V763 = ISZERO V762
0x747: M[V761] = V763
0x748: V764 = 0x20
0x74a: V765 = ADD 0x20 V761
0x74b: V766 = 0x40
0x74d: V767 = M[0x40]
0x750: V768 = SUB V765 V767
0x752: RETURN V767 V768
---
Entry stack: [V12, 0x73f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x73f]

================================

Block 0x753
[0x753:0x759]
---
Predecessors: [0x30]
Successors: [0x75a, 0x75e]
---
0x753 JUMPDEST
0x754 CALLVALUE
0x755 ISZERO
0x756 PUSH2 0x75e
0x759 JUMPI
---
0x753: JUMPDEST 
0x754: V769 = CALLVALUE
0x755: V770 = ISZERO V769
0x756: V771 = 0x75e
0x759: JUMPI 0x75e V770
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75a
[0x75a:0x75d]
---
Predecessors: [0x753]
Successors: []
---
0x75a PUSH1 0x0
0x75c DUP1
0x75d REVERT
---
0x75a: V772 = 0x0
0x75d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75e
[0x75e:0x765]
---
Predecessors: [0x753]
Successors: [0x8ae]
---
0x75e JUMPDEST
0x75f PUSH2 0x766
0x762 PUSH2 0x8ae
0x765 JUMP
---
0x75e: JUMPDEST 
0x75f: V773 = 0x766
0x762: V774 = 0x8ae
0x765: JUMP 0x8ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x766]
Exit stack: [V12, 0x766]

================================

Block 0x766
[0x766:0x777]
---
Predecessors: [0x8ae, 0x8b4, 0x8c9, 0x8cf, 0x8d5]
Successors: []
---
0x766 JUMPDEST
0x767 PUSH1 0x40
0x769 MLOAD
0x76a SWAP1
0x76b DUP2
0x76c MSTORE
0x76d PUSH1 0x20
0x76f ADD
0x770 PUSH1 0x40
0x772 MLOAD
0x773 DUP1
0x774 SWAP2
0x775 SUB
0x776 SWAP1
0x777 RETURN
---
0x766: JUMPDEST 
0x767: V775 = 0x40
0x769: V776 = M[0x40]
0x76c: M[V776] = S0
0x76d: V777 = 0x20
0x76f: V778 = ADD 0x20 V776
0x770: V779 = 0x40
0x772: V780 = M[0x40]
0x775: V781 = SUB V778 V780
0x777: RETURN V780 V781
---
Entry stack: [V12, 0x766, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x766]

================================

Block 0x778
[0x778:0x77e]
---
Predecessors: [0x3b]
Successors: [0x77f, 0x783]
---
0x778 JUMPDEST
0x779 CALLVALUE
0x77a ISZERO
0x77b PUSH2 0x783
0x77e JUMPI
---
0x778: JUMPDEST 
0x779: V782 = CALLVALUE
0x77a: V783 = ISZERO V782
0x77b: V784 = 0x783
0x77e: JUMPI 0x783 V783
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x77f
[0x77f:0x782]
---
Predecessors: [0x778]
Successors: []
---
0x77f PUSH1 0x0
0x781 DUP1
0x782 REVERT
---
0x77f: V785 = 0x0
0x782: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x783
[0x783:0x78a]
---
Predecessors: [0x778]
Successors: [0x8b4]
---
0x783 JUMPDEST
0x784 PUSH2 0x766
0x787 PUSH2 0x8b4
0x78a JUMP
---
0x783: JUMPDEST 
0x784: V786 = 0x766
0x787: V787 = 0x8b4
0x78a: JUMP 0x8b4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x766]
Exit stack: [V12, 0x766]

================================

Block 0x78b
[0x78b:0x79c]
---
Predecessors: []
Successors: []
---
0x78b JUMPDEST
0x78c PUSH1 0x40
0x78e MLOAD
0x78f SWAP1
0x790 DUP2
0x791 MSTORE
0x792 PUSH1 0x20
0x794 ADD
0x795 PUSH1 0x40
0x797 MLOAD
0x798 DUP1
0x799 SWAP2
0x79a SUB
0x79b SWAP1
0x79c RETURN
---
0x78b: JUMPDEST 
0x78c: V788 = 0x40
0x78e: V789 = M[0x40]
0x791: M[V789] = S0
0x792: V790 = 0x20
0x794: V791 = ADD 0x20 V789
0x795: V792 = 0x40
0x797: V793 = M[0x40]
0x79a: V794 = SUB V791 V793
0x79c: RETURN V793 V794
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x79d
[0x79d:0x7a3]
---
Predecessors: [0x46]
Successors: [0x7a4, 0x7a8]
---
0x79d JUMPDEST
0x79e CALLVALUE
0x79f ISZERO
0x7a0 PUSH2 0x7a8
0x7a3 JUMPI
---
0x79d: JUMPDEST 
0x79e: V795 = CALLVALUE
0x79f: V796 = ISZERO V795
0x7a0: V797 = 0x7a8
0x7a3: JUMPI 0x7a8 V796
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a4
[0x7a4:0x7a7]
---
Predecessors: [0x79d]
Successors: []
---
0x7a4 PUSH1 0x0
0x7a6 DUP1
0x7a7 REVERT
---
0x7a4: V798 = 0x0
0x7a7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a8
[0x7a8:0x7af]
---
Predecessors: [0x79d]
Successors: [0x8ba]
---
0x7a8 JUMPDEST
0x7a9 PUSH2 0x710
0x7ac PUSH2 0x8ba
0x7af JUMP
---
0x7a8: JUMPDEST 
0x7a9: V799 = 0x710
0x7ac: V800 = 0x8ba
0x7af: JUMP 0x8ba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x710]
Exit stack: [V12, 0x710]

================================

Block 0x7b0
[0x7b0:0x7cb]
---
Predecessors: []
Successors: []
---
0x7b0 JUMPDEST
0x7b1 PUSH1 0x40
0x7b3 MLOAD
0x7b4 PUSH1 0x1
0x7b6 PUSH1 0xa0
0x7b8 PUSH1 0x2
0x7ba EXP
0x7bb SUB
0x7bc SWAP1
0x7bd SWAP2
0x7be AND
0x7bf DUP2
0x7c0 MSTORE
0x7c1 PUSH1 0x20
0x7c3 ADD
0x7c4 PUSH1 0x40
0x7c6 MLOAD
0x7c7 DUP1
0x7c8 SWAP2
0x7c9 SUB
0x7ca SWAP1
0x7cb RETURN
---
0x7b0: JUMPDEST 
0x7b1: V801 = 0x40
0x7b3: V802 = M[0x40]
0x7b4: V803 = 0x1
0x7b6: V804 = 0xa0
0x7b8: V805 = 0x2
0x7ba: V806 = EXP 0x2 0xa0
0x7bb: V807 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7be: V808 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7c0: M[V802] = V808
0x7c1: V809 = 0x20
0x7c3: V810 = ADD 0x20 V802
0x7c4: V811 = 0x40
0x7c6: V812 = M[0x40]
0x7c9: V813 = SUB V810 V812
0x7cb: RETURN V812 V813
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7cc
[0x7cc:0x7d2]
---
Predecessors: [0x51]
Successors: [0x7d3, 0x7d7]
---
0x7cc JUMPDEST
0x7cd CALLVALUE
0x7ce ISZERO
0x7cf PUSH2 0x7d7
0x7d2 JUMPI
---
0x7cc: JUMPDEST 
0x7cd: V814 = CALLVALUE
0x7ce: V815 = ISZERO V814
0x7cf: V816 = 0x7d7
0x7d2: JUMPI 0x7d7 V815
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d3
[0x7d3:0x7d6]
---
Predecessors: [0x7cc]
Successors: []
---
0x7d3 PUSH1 0x0
0x7d5 DUP1
0x7d6 REVERT
---
0x7d3: V817 = 0x0
0x7d6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d7
[0x7d7:0x7de]
---
Predecessors: [0x7cc]
Successors: [0x8c9]
---
0x7d7 JUMPDEST
0x7d8 PUSH2 0x766
0x7db PUSH2 0x8c9
0x7de JUMP
---
0x7d7: JUMPDEST 
0x7d8: V818 = 0x766
0x7db: V819 = 0x8c9
0x7de: JUMP 0x8c9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x766]
Exit stack: [V12, 0x766]

================================

Block 0x7df
[0x7df:0x7f0]
---
Predecessors: []
Successors: []
---
0x7df JUMPDEST
0x7e0 PUSH1 0x40
0x7e2 MLOAD
0x7e3 SWAP1
0x7e4 DUP2
0x7e5 MSTORE
0x7e6 PUSH1 0x20
0x7e8 ADD
0x7e9 PUSH1 0x40
0x7eb MLOAD
0x7ec DUP1
0x7ed SWAP2
0x7ee SUB
0x7ef SWAP1
0x7f0 RETURN
---
0x7df: JUMPDEST 
0x7e0: V820 = 0x40
0x7e2: V821 = M[0x40]
0x7e5: M[V821] = S0
0x7e6: V822 = 0x20
0x7e8: V823 = ADD 0x20 V821
0x7e9: V824 = 0x40
0x7eb: V825 = M[0x40]
0x7ee: V826 = SUB V823 V825
0x7f0: RETURN V825 V826
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7f1
[0x7f1:0x7f7]
---
Predecessors: [0x5c]
Successors: [0x7f8, 0x7fc]
---
0x7f1 JUMPDEST
0x7f2 CALLVALUE
0x7f3 ISZERO
0x7f4 PUSH2 0x7fc
0x7f7 JUMPI
---
0x7f1: JUMPDEST 
0x7f2: V827 = CALLVALUE
0x7f3: V828 = ISZERO V827
0x7f4: V829 = 0x7fc
0x7f7: JUMPI 0x7fc V828
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f8
[0x7f8:0x7fb]
---
Predecessors: [0x7f1]
Successors: []
---
0x7f8 PUSH1 0x0
0x7fa DUP1
0x7fb REVERT
---
0x7f8: V830 = 0x0
0x7fb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7fc
[0x7fc:0x803]
---
Predecessors: [0x7f1]
Successors: [0x8cf]
---
0x7fc JUMPDEST
0x7fd PUSH2 0x766
0x800 PUSH2 0x8cf
0x803 JUMP
---
0x7fc: JUMPDEST 
0x7fd: V831 = 0x766
0x800: V832 = 0x8cf
0x803: JUMP 0x8cf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x766]
Exit stack: [V12, 0x766]

================================

Block 0x804
[0x804:0x815]
---
Predecessors: []
Successors: []
---
0x804 JUMPDEST
0x805 PUSH1 0x40
0x807 MLOAD
0x808 SWAP1
0x809 DUP2
0x80a MSTORE
0x80b PUSH1 0x20
0x80d ADD
0x80e PUSH1 0x40
0x810 MLOAD
0x811 DUP1
0x812 SWAP2
0x813 SUB
0x814 SWAP1
0x815 RETURN
---
0x804: JUMPDEST 
0x805: V833 = 0x40
0x807: V834 = M[0x40]
0x80a: M[V834] = S0
0x80b: V835 = 0x20
0x80d: V836 = ADD 0x20 V834
0x80e: V837 = 0x40
0x810: V838 = M[0x40]
0x813: V839 = SUB V836 V838
0x815: RETURN V838 V839
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x816
[0x816:0x81c]
---
Predecessors: [0x67]
Successors: [0x81d, 0x821]
---
0x816 JUMPDEST
0x817 CALLVALUE
0x818 ISZERO
0x819 PUSH2 0x821
0x81c JUMPI
---
0x816: JUMPDEST 
0x817: V840 = CALLVALUE
0x818: V841 = ISZERO V840
0x819: V842 = 0x821
0x81c: JUMPI 0x821 V841
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81d
[0x81d:0x820]
---
Predecessors: [0x816]
Successors: []
---
0x81d PUSH1 0x0
0x81f DUP1
0x820 REVERT
---
0x81d: V843 = 0x0
0x820: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x821
[0x821:0x828]
---
Predecessors: [0x816]
Successors: [0x8d5]
---
0x821 JUMPDEST
0x822 PUSH2 0x766
0x825 PUSH2 0x8d5
0x828 JUMP
---
0x821: JUMPDEST 
0x822: V844 = 0x766
0x825: V845 = 0x8d5
0x828: JUMP 0x8d5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x766]
Exit stack: [V12, 0x766]

================================

Block 0x829
[0x829:0x83a]
---
Predecessors: []
Successors: []
---
0x829 JUMPDEST
0x82a PUSH1 0x40
0x82c MLOAD
0x82d SWAP1
0x82e DUP2
0x82f MSTORE
0x830 PUSH1 0x20
0x832 ADD
0x833 PUSH1 0x40
0x835 MLOAD
0x836 DUP1
0x837 SWAP2
0x838 SUB
0x839 SWAP1
0x83a RETURN
---
0x829: JUMPDEST 
0x82a: V846 = 0x40
0x82c: V847 = M[0x40]
0x82f: M[V847] = S0
0x830: V848 = 0x20
0x832: V849 = ADD 0x20 V847
0x833: V850 = 0x40
0x835: V851 = M[0x40]
0x838: V852 = SUB V849 V851
0x83a: RETURN V851 V852
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x83b
[0x83b:0x841]
---
Predecessors: [0x72]
Successors: [0x842, 0x846]
---
0x83b JUMPDEST
0x83c CALLVALUE
0x83d ISZERO
0x83e PUSH2 0x846
0x841 JUMPI
---
0x83b: JUMPDEST 
0x83c: V853 = CALLVALUE
0x83d: V854 = ISZERO V853
0x83e: V855 = 0x846
0x841: JUMPI 0x846 V854
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x842
[0x842:0x845]
---
Predecessors: [0x83b]
Successors: []
---
0x842 PUSH1 0x0
0x844 DUP1
0x845 REVERT
---
0x842: V856 = 0x0
0x845: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x846
[0x846:0x84d]
---
Predecessors: [0x83b]
Successors: [0x8db]
---
0x846 JUMPDEST
0x847 PUSH2 0x73f
0x84a PUSH2 0x8db
0x84d JUMP
---
0x846: JUMPDEST 
0x847: V857 = 0x73f
0x84a: V858 = 0x8db
0x84d: JUMP 0x8db
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x73f]
Exit stack: [V12, 0x73f]

================================

Block 0x84e
[0x84e:0x861]
---
Predecessors: []
Successors: []
---
0x84e JUMPDEST
0x84f PUSH1 0x40
0x851 MLOAD
0x852 SWAP1
0x853 ISZERO
0x854 ISZERO
0x855 DUP2
0x856 MSTORE
0x857 PUSH1 0x20
0x859 ADD
0x85a PUSH1 0x40
0x85c MLOAD
0x85d DUP1
0x85e SWAP2
0x85f SUB
0x860 SWAP1
0x861 RETURN
---
0x84e: JUMPDEST 
0x84f: V859 = 0x40
0x851: V860 = M[0x40]
0x853: V861 = ISZERO S0
0x854: V862 = ISZERO V861
0x856: M[V860] = V862
0x857: V863 = 0x20
0x859: V864 = ADD 0x20 V860
0x85a: V865 = 0x40
0x85c: V866 = M[0x40]
0x85f: V867 = SUB V864 V866
0x861: RETURN V866 V867
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x862
[0x862:0x868]
---
Predecessors: [0x7d]
Successors: [0x869, 0x86d]
---
0x862 JUMPDEST
0x863 CALLVALUE
0x864 ISZERO
0x865 PUSH2 0x86d
0x868 JUMPI
---
0x862: JUMPDEST 
0x863: V868 = CALLVALUE
0x864: V869 = ISZERO V868
0x865: V870 = 0x86d
0x868: JUMPI 0x86d V869
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x869
[0x869:0x86c]
---
Predecessors: [0x862]
Successors: []
---
0x869 PUSH1 0x0
0x86b DUP1
0x86c REVERT
---
0x869: V871 = 0x0
0x86c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86d
[0x86d:0x874]
---
Predecessors: [0x862]
Successors: [0x8e4]
---
0x86d JUMPDEST
0x86e PUSH2 0x710
0x871 PUSH2 0x8e4
0x874 JUMP
---
0x86d: JUMPDEST 
0x86e: V872 = 0x710
0x871: V873 = 0x8e4
0x874: JUMP 0x8e4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x710]
Exit stack: [V12, 0x710]

================================

Block 0x875
[0x875:0x890]
---
Predecessors: []
Successors: []
---
0x875 JUMPDEST
0x876 PUSH1 0x40
0x878 MLOAD
0x879 PUSH1 0x1
0x87b PUSH1 0xa0
0x87d PUSH1 0x2
0x87f EXP
0x880 SUB
0x881 SWAP1
0x882 SWAP2
0x883 AND
0x884 DUP2
0x885 MSTORE
0x886 PUSH1 0x20
0x888 ADD
0x889 PUSH1 0x40
0x88b MLOAD
0x88c DUP1
0x88d SWAP2
0x88e SUB
0x88f SWAP1
0x890 RETURN
---
0x875: JUMPDEST 
0x876: V874 = 0x40
0x878: V875 = M[0x40]
0x879: V876 = 0x1
0x87b: V877 = 0xa0
0x87d: V878 = 0x2
0x87f: V879 = EXP 0x2 0xa0
0x880: V880 = SUB 0x10000000000000000000000000000000000000000 0x1
0x883: V881 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x885: M[V875] = V881
0x886: V882 = 0x20
0x888: V883 = ADD 0x20 V875
0x889: V884 = 0x40
0x88b: V885 = M[0x40]
0x88e: V886 = SUB V883 V885
0x890: RETURN V885 V886
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x891
[0x891:0x89f]
---
Predecessors: [0x708]
Successors: [0x710]
---
0x891 JUMPDEST
0x892 PUSH1 0x0
0x894 SLOAD
0x895 PUSH1 0x1
0x897 PUSH1 0xa0
0x899 PUSH1 0x2
0x89b EXP
0x89c SUB
0x89d AND
0x89e DUP2
0x89f JUMP
---
0x891: JUMPDEST 
0x892: V887 = 0x0
0x894: V888 = S[0x0]
0x895: V889 = 0x1
0x897: V890 = 0xa0
0x899: V891 = 0x2
0x89b: V892 = EXP 0x2 0xa0
0x89c: V893 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89d: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff V888
0x89f: JUMP 0x710
---
Entry stack: [V12, 0x710]
Stack pops: 1
Stack additions: [S0, V894]
Exit stack: [V12, 0x710, V894]

================================

Block 0x8a0
[0x8a0:0x8ad]
---
Predecessors: [0x737]
Successors: [0x73f]
---
0x8a0 JUMPDEST
0x8a1 PUSH1 0x9
0x8a3 SLOAD
0x8a4 PUSH2 0x100
0x8a7 SWAP1
0x8a8 DIV
0x8a9 PUSH1 0xff
0x8ab AND
0x8ac DUP2
0x8ad JUMP
---
0x8a0: JUMPDEST 
0x8a1: V895 = 0x9
0x8a3: V896 = S[0x9]
0x8a4: V897 = 0x100
0x8a8: V898 = DIV V896 0x100
0x8a9: V899 = 0xff
0x8ab: V900 = AND 0xff V898
0x8ad: JUMP 0x73f
---
Entry stack: [V12, 0x73f]
Stack pops: 1
Stack additions: [S0, V900]
Exit stack: [V12, 0x73f, V900]

================================

Block 0x8ae
[0x8ae:0x8b3]
---
Predecessors: [0x75e]
Successors: [0x766]
---
0x8ae JUMPDEST
0x8af PUSH1 0x7
0x8b1 SLOAD
0x8b2 DUP2
0x8b3 JUMP
---
0x8ae: JUMPDEST 
0x8af: V901 = 0x7
0x8b1: V902 = S[0x7]
0x8b3: JUMP 0x766
---
Entry stack: [V12, 0x766]
Stack pops: 1
Stack additions: [S0, V902]
Exit stack: [V12, 0x766, V902]

================================

Block 0x8b4
[0x8b4:0x8b9]
---
Predecessors: [0x783]
Successors: [0x766]
---
0x8b4 JUMPDEST
0x8b5 PUSH1 0x3
0x8b7 SLOAD
0x8b8 DUP2
0x8b9 JUMP
---
0x8b4: JUMPDEST 
0x8b5: V903 = 0x3
0x8b7: V904 = S[0x3]
0x8b9: JUMP 0x766
---
Entry stack: [V12, 0x766]
Stack pops: 1
Stack additions: [S0, V904]
Exit stack: [V12, 0x766, V904]

================================

Block 0x8ba
[0x8ba:0x8c8]
---
Predecessors: [0x7a8]
Successors: [0x710]
---
0x8ba JUMPDEST
0x8bb PUSH1 0x1
0x8bd SLOAD
0x8be PUSH1 0x1
0x8c0 PUSH1 0xa0
0x8c2 PUSH1 0x2
0x8c4 EXP
0x8c5 SUB
0x8c6 AND
0x8c7 DUP2
0x8c8 JUMP
---
0x8ba: JUMPDEST 
0x8bb: V905 = 0x1
0x8bd: V906 = S[0x1]
0x8be: V907 = 0x1
0x8c0: V908 = 0xa0
0x8c2: V909 = 0x2
0x8c4: V910 = EXP 0x2 0xa0
0x8c5: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c6: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0x8c8: JUMP 0x710
---
Entry stack: [V12, 0x710]
Stack pops: 1
Stack additions: [S0, V912]
Exit stack: [V12, 0x710, V912]

================================

Block 0x8c9
[0x8c9:0x8ce]
---
Predecessors: [0x7d7]
Successors: [0x766]
---
0x8c9 JUMPDEST
0x8ca PUSH1 0x8
0x8cc SLOAD
0x8cd DUP2
0x8ce JUMP
---
0x8c9: JUMPDEST 
0x8ca: V913 = 0x8
0x8cc: V914 = S[0x8]
0x8ce: JUMP 0x766
---
Entry stack: [V12, 0x766]
Stack pops: 1
Stack additions: [S0, V914]
Exit stack: [V12, 0x766, V914]

================================

Block 0x8cf
[0x8cf:0x8d4]
---
Predecessors: [0x7fc]
Successors: [0x766]
---
0x8cf JUMPDEST
0x8d0 PUSH1 0x5
0x8d2 SLOAD
0x8d3 DUP2
0x8d4 JUMP
---
0x8cf: JUMPDEST 
0x8d0: V915 = 0x5
0x8d2: V916 = S[0x5]
0x8d4: JUMP 0x766
---
Entry stack: [V12, 0x766]
Stack pops: 1
Stack additions: [S0, V916]
Exit stack: [V12, 0x766, V916]

================================

Block 0x8d5
[0x8d5:0x8da]
---
Predecessors: [0x821]
Successors: [0x766]
---
0x8d5 JUMPDEST
0x8d6 PUSH1 0x4
0x8d8 SLOAD
0x8d9 DUP2
0x8da JUMP
---
0x8d5: JUMPDEST 
0x8d6: V917 = 0x4
0x8d8: V918 = S[0x4]
0x8da: JUMP 0x766
---
Entry stack: [V12, 0x766]
Stack pops: 1
Stack additions: [S0, V918]
Exit stack: [V12, 0x766, V918]

================================

Block 0x8db
[0x8db:0x8e3]
---
Predecessors: [0x846]
Successors: [0x73f]
---
0x8db JUMPDEST
0x8dc PUSH1 0x9
0x8de SLOAD
0x8df PUSH1 0xff
0x8e1 AND
0x8e2 DUP2
0x8e3 JUMP
---
0x8db: JUMPDEST 
0x8dc: V919 = 0x9
0x8de: V920 = S[0x9]
0x8df: V921 = 0xff
0x8e1: V922 = AND 0xff V920
0x8e3: JUMP 0x73f
---
Entry stack: [V12, 0x73f]
Stack pops: 1
Stack additions: [S0, V922]
Exit stack: [V12, 0x73f, V922]

================================

Block 0x8e4
[0x8e4:0x8f2]
---
Predecessors: [0x86d]
Successors: [0x710]
---
0x8e4 JUMPDEST
0x8e5 PUSH1 0x2
0x8e7 SLOAD
0x8e8 PUSH1 0x1
0x8ea PUSH1 0xa0
0x8ec PUSH1 0x2
0x8ee EXP
0x8ef SUB
0x8f0 AND
0x8f1 DUP2
0x8f2 JUMP
---
0x8e4: JUMPDEST 
0x8e5: V923 = 0x2
0x8e7: V924 = S[0x2]
0x8e8: V925 = 0x1
0x8ea: V926 = 0xa0
0x8ec: V927 = 0x2
0x8ee: V928 = EXP 0x2 0xa0
0x8ef: V929 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f0: V930 = AND 0xffffffffffffffffffffffffffffffffffffffff V924
0x8f2: JUMP 0x710
---
Entry stack: [V12, 0x710]
Stack pops: 1
Stack additions: [S0, V930]
Exit stack: [V12, 0x710, V930]

================================

Block 0x8f3
[0x8f3:0x91e]
---
Predecessors: []
Successors: []
---
0x8f3 STOP
0x8f4 LOG1
0x8f5 PUSH6 0x627a7a723058
0x8fc SHA3
0x8fd MSTORE
0x8fe MISSING 0xf7
0x8ff MISSING 0xd4
0x900 MISSING 0xac
0x901 SUB
0x902 PUSH28 0x832faf3cd4442693a88cddcaf8c1020b4943a9ec40b8163be62f0029
---
0x8f3: STOP 
0x8f4: LOG S0 S1 S2
0x8f5: V931 = 0x627a7a723058
0x8fc: V932 = SHA3 0x627a7a723058 S3
0x8fd: M[V932] = S4
0x8fe: MISSING 0xf7
0x8ff: MISSING 0xd4
0x900: MISSING 0xac
0x901: V933 = SUB S0 S1
0x902: V934 = 0x832faf3cd4442693a88cddcaf8c1020b4943a9ec40b8163be62f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x832faf3cd4442693a88cddcaf8c1020b4943a9ec40b8163be62f0029, V933]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebcf0e
Entry block: 0x6fd
Exit block: 0x710
Body: 0x6fd, 0x704, 0x708, 0x710, 0x891

Function 1:
Public function signature: 0x30c74e04
Entry block: 0x72c
Exit block: 0x73f
Body: 0x72c, 0x733, 0x737, 0x73f, 0x8a0

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x753
Exit block: 0x766
Body: 0x753, 0x75a, 0x75e, 0x766, 0x8ae

Function 3:
Public function signature: 0x7fa8c158
Entry block: 0x778
Exit block: 0x766
Body: 0x766, 0x778, 0x77f, 0x783, 0x8b4

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x79d
Exit block: 0x710
Body: 0x710, 0x79d, 0x7a4, 0x7a8, 0x8ba

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x7cc
Exit block: 0x766
Body: 0x766, 0x7cc, 0x7d3, 0x7d7, 0x8c9

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x7f1
Exit block: 0x766
Body: 0x766, 0x7f1, 0x7f8, 0x7fc, 0x8cf

Function 7:
Public function signature: 0xc8e569a8
Entry block: 0x816
Exit block: 0x766
Body: 0x766, 0x816, 0x81d, 0x821, 0x8d5

Function 8:
Public function signature: 0xccb07cef
Entry block: 0x83b
Exit block: 0x73f
Body: 0x73f, 0x83b, 0x842, 0x846, 0x8db

Function 9:
Public function signature: 0xf9081ba2
Entry block: 0x862
Exit block: 0x710
Body: 0x710, 0x862, 0x869, 0x86d, 0x8e4

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x666
Body: 0x88, 0x89, 0x9b, 0xaa, 0xb7, 0xc2, 0xc3, 0x11a, 0x11e, 0x12b, 0x12f, 0x146, 0x173, 0x177, 0x17c, 0x187, 0x1b4, 0x1b8, 0x1ca, 0x231, 0x235, 0x242, 0x246, 0x28f, 0x293, 0x2a0, 0x2a4, 0x2fe, 0x302, 0x30f, 0x313, 0x338, 0x33d, 0x349, 0x376, 0x37f, 0x38e, 0x38f, 0x39c, 0x3c9, 0x3cd, 0x3ce, 0x3d7, 0x3db, 0x3eb, 0x3ec, 0x3fb, 0x429, 0x42d, 0x436, 0x466, 0x46a, 0x46b, 0x4bd, 0x4c1, 0x4ce, 0x4d2, 0x4ef, 0x4fc, 0x501, 0x513, 0x514, 0x548, 0x54c, 0x5a5, 0x5a9, 0x5b6, 0x5ba, 0x5ee, 0x5f2, 0x655, 0x659, 0x666, 0x66a, 0x684, 0x685, 0x686, 0x687, 0x6f8

