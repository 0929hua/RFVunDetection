Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x77
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x77
0xa: JUMPI 0x77 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x7f]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x12065fe0
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x7f
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x12065fe0
0x1a: V12 = EQ V10 0x12065fe0
0x1b: V13 = 0x7f
0x1e: JUMPI 0x7f V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x9f]
---
0x1f DUP1
0x20 PUSH4 0x2f13b60c
0x25 EQ
0x26 PUSH2 0x9f
0x29 JUMPI
---
0x20: V14 = 0x2f13b60c
0x25: V15 = EQ 0x2f13b60c V10
0x26: V16 = 0x9f
0x29: JUMPI 0x9f V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xac]
---
0x2a DUP1
0x2b PUSH4 0x3f4bd063
0x30 EQ
0x31 PUSH2 0xac
0x34 JUMPI
---
0x2b: V17 = 0x3f4bd063
0x30: V18 = EQ 0x3f4bd063 V10
0x31: V19 = 0xac
0x34: JUMPI 0xac V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x106]
---
0x35 DUP1
0x36 PUSH4 0x41c0e1b5
0x3b EQ
0x3c PUSH2 0x106
0x3f JUMPI
---
0x36: V20 = 0x41c0e1b5
0x3b: V21 = EQ 0x41c0e1b5 V10
0x3c: V22 = 0x106
0x3f: JUMPI 0x106 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x144]
---
0x40 DUP1
0x41 PUSH4 0x5f8d96de
0x46 EQ
0x47 PUSH2 0x144
0x4a JUMPI
---
0x41: V23 = 0x5f8d96de
0x46: V24 = EQ 0x5f8d96de V10
0x47: V25 = 0x144
0x4a: JUMPI 0x144 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x14f]
---
0x4b DUP1
0x4c PUSH4 0x740c0c44
0x51 EQ
0x52 PUSH2 0x14f
0x55 JUMPI
---
0x4c: V26 = 0x740c0c44
0x51: V27 = EQ 0x740c0c44 V10
0x52: V28 = 0x14f
0x55: JUMPI 0x14f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x15a]
---
0x56 DUP1
0x57 PUSH4 0x79ff433d
0x5c EQ
0x5d PUSH2 0x15a
0x60 JUMPI
---
0x57: V29 = 0x79ff433d
0x5c: V30 = EQ 0x79ff433d V10
0x5d: V31 = 0x15a
0x60: JUMPI 0x15a V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x18e]
---
0x61 DUP1
0x62 PUSH4 0xaeb7d9cc
0x67 EQ
0x68 PUSH2 0x18e
0x6b JUMPI
---
0x62: V32 = 0xaeb7d9cc
0x67: V33 = EQ 0xaeb7d9cc V10
0x68: V34 = 0x18e
0x6b: JUMPI 0x18e V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1bb]
---
0x6c DUP1
0x6d PUSH4 0xd2d6a872
0x72 EQ
0x73 PUSH2 0x1bb
0x76 JUMPI
---
0x6d: V35 = 0xd2d6a872
0x72: V36 = EQ 0xd2d6a872 V10
0x73: V37 = 0x1bb
0x76: JUMPI 0x1bb V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x7e]
---
Predecessors: [0x0, 0x6c]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH2 0x1d3
0x7b PUSH2 0x2
0x7e JUMP
---
0x77: JUMPDEST 
0x78: V38 = 0x1d3
0x7b: V39 = 0x2
0x7e: THROW 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3]
Exit stack: [V10, 0x1d3]

================================

Block 0x7f
[0x7f:0x8d]
---
Predecessors: [0xb]
Successors: [0x8e]
---
0x7f JUMPDEST
0x80 PUSH2 0x1d7
0x83 PUSH1 0x0
0x85 PUSH1 0x0
0x87 CALLVALUE
0x88 GT
0x89 ISZERO
0x8a PUSH2 0x8e
0x8d JUMPI
---
0x7f: JUMPDEST 
0x80: V40 = 0x1d7
0x83: V41 = 0x0
0x85: V42 = 0x0
0x87: V43 = CALLVALUE
0x88: V44 = GT V43 0x0
0x89: V45 = ISZERO V44
0x8a: V46 = 0x8e
0x8d: JUMPI 0x8e V45
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d7, 0x0]
Exit stack: [V10, 0x1d7, 0x0]

================================

Block 0x8e
[0x8e:0x9e]
---
Predecessors: [0x7f]
Successors: [0xa9]
---
0x8e JUMPDEST
0x8f POP
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 ADDRESS
0x99 AND
0x9a BALANCE
0x9b PUSH2 0xa9
0x9e JUMP
---
0x8e: JUMPDEST 
0x90: V47 = 0x1
0x92: V48 = 0xa0
0x94: V49 = 0x2
0x96: V50 = EXP 0x2 0xa0
0x97: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98: V52 = ADDRESS
0x99: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x9a: V54 = BALANCE V53
0x9b: V55 = 0xa9
0x9e: JUMP 0xa9
---
Entry stack: [V10, 0x1d7, 0x0]
Stack pops: 1
Stack additions: [V54]
Exit stack: [V10, 0x1d7, V54]

================================

Block 0x9f
[0x9f:0xa8]
---
Predecessors: [0x1f]
Successors: [0xa9]
---
0x9f JUMPDEST
0xa0 PUSH2 0x1d7
0xa3 PUSH1 0x5
0xa5 SLOAD
0xa6 PUSH1 0xff
0xa8 AND
---
0x9f: JUMPDEST 
0xa0: V56 = 0x1d7
0xa3: V57 = 0x5
0xa5: V58 = S[0x5]
0xa6: V59 = 0xff
0xa8: V60 = AND 0xff V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d7, V60]
Exit stack: [V10, 0x1d7, V60]

================================

Block 0xa9
[0xa9:0xab]
---
Predecessors: [0x8e, 0x9f, 0x144, 0x14f]
Successors: [0x1d7]
---
0xa9 JUMPDEST
0xaa SWAP1
0xab JUMP
---
0xa9: JUMPDEST 
0xab: JUMP 0x1d7
---
Entry stack: [V10, 0x1d7, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0x2a]
Successors: [0xb0]
---
0xac JUMPDEST
0xad PUSH2 0x1d3
---
0xac: JUMPDEST 
0xad: V61 = 0x1d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3]
Exit stack: [V10, 0x1d3]

================================

Block 0xb0
[0xb0:0xc3]
---
Predecessors: [0xac, 0x13d, 0x1cc]
Successors: [0xc4, 0x4ac]
---
0xb0 JUMPDEST
0xb1 PUSH1 0x0
0xb3 PUSH1 0x0
0xb5 PUSH1 0x0
0xb7 PUSH1 0x1
0xb9 PUSH1 0x0
0xbb POP
0xbc SLOAD
0xbd TIMESTAMP
0xbe GT
0xbf ISZERO
0xc0 PUSH2 0x4ac
0xc3 JUMPI
---
0xb0: JUMPDEST 
0xb1: V62 = 0x0
0xb3: V63 = 0x0
0xb5: V64 = 0x0
0xb7: V65 = 0x1
0xb9: V66 = 0x0
0xbc: V67 = S[0x1]
0xbd: V68 = TIMESTAMP
0xbe: V69 = GT V68 V67
0xbf: V70 = ISZERO V69
0xc0: V71 = 0x4ac
0xc3: JUMPI 0x4ac V70
---
Entry stack: [V10, S2, S1, {0x1d3, 0x1e9, 0x1f7}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S2, S1, {0x1d3, 0x1e9, 0x1f7}, 0x0, 0x0, 0x0]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb0, 0x3ba]
Successors: [0xcf, 0x2d3]
---
0xc4 JUMPDEST
0xc5 PUSH1 0x3
0xc7 SLOAD
0xc8 DUP3
0xc9 LT
0xca ISZERO
0xcb PUSH2 0x2d3
0xce JUMPI
---
0xc4: JUMPDEST 
0xc5: V72 = 0x3
0xc7: V73 = S[0x3]
0xc9: V74 = LT S1 V73
0xca: V75 = ISZERO V74
0xcb: V76 = 0x2d3
0xce: JUMPI 0x2d3 V75
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0]

================================

Block 0xcf
[0xcf:0xf2]
---
Predecessors: [0xc4]
Successors: [0xf3, 0x4b1]
---
0xcf PUSH1 0x0
0xd1 DUP3
0xd2 DUP2
0xd3 MSTORE
0xd4 PUSH1 0x6
0xd6 PUSH1 0x20
0xd8 MSTORE
0xd9 PUSH1 0x40
0xdb DUP2
0xdc SHA3
0xdd SLOAD
0xde PUSH2 0x34a
0xe1 SWAP2
0xe2 ADDRESS
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb AND
0xec BALANCE
0xed DUP3
0xee LT
0xef PUSH2 0x4b1
0xf2 JUMPI
---
0xcf: V77 = 0x0
0xd3: M[0x0] = S1
0xd4: V78 = 0x6
0xd6: V79 = 0x20
0xd8: M[0x20] = 0x6
0xd9: V80 = 0x40
0xdc: V81 = SHA3 0x0 0x40
0xdd: V82 = S[V81]
0xde: V83 = 0x34a
0xe2: V84 = ADDRESS
0xe3: V85 = 0x1
0xe5: V86 = 0xa0
0xe7: V87 = 0x2
0xe9: V88 = EXP 0x2 0xa0
0xea: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0xec: V91 = BALANCE V90
0xee: V92 = LT V82 V91
0xef: V93 = 0x4b1
0xf2: JUMPI 0x4b1 V92
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x34a, V82, 0x0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0, 0x34a, V82, 0x0]

================================

Block 0xf3
[0xf3:0x105]
---
Predecessors: [0xcf]
Successors: [0x4c0]
---
0xf3 DUP2
0xf4 ADDRESS
0xf5 PUSH1 0x1
0xf7 PUSH1 0xa0
0xf9 PUSH1 0x2
0xfb EXP
0xfc SUB
0xfd AND
0xfe BALANCE
0xff SUB
0x100 SWAP1
0x101 POP
0x102 PUSH2 0x4c0
0x105 JUMP
---
0xf4: V94 = ADDRESS
0xf5: V95 = 0x1
0xf7: V96 = 0xa0
0xf9: V97 = 0x2
0xfb: V98 = EXP 0x2 0xa0
0xfc: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0xfe: V101 = BALANCE V100
0xff: V102 = SUB V101 V82
0x102: V103 = 0x4c0
0x105: JUMP 0x4c0
---
Entry stack: [V10, S8, S7, {0x1d3, 0x1e9, 0x1f7}, S5, S4, 0x0, 0x34a, V82, 0x0]
Stack pops: 2
Stack additions: [S1, V102]
Exit stack: [V10, S8, S7, {0x1d3, 0x1e9, 0x1f7}, S5, S4, 0x0, 0x34a, V82, V102]

================================

Block 0x106
[0x106:0x115]
---
Predecessors: [0x35]
Successors: [0x116, 0x12a]
---
0x106 JUMPDEST
0x107 PUSH2 0x1d3
0x10a PUSH1 0x5
0x10c SLOAD
0x10d PUSH1 0xff
0x10f AND
0x110 DUP1
0x111 ISZERO
0x112 PUSH2 0x12a
0x115 JUMPI
---
0x106: JUMPDEST 
0x107: V104 = 0x1d3
0x10a: V105 = 0x5
0x10c: V106 = S[0x5]
0x10d: V107 = 0xff
0x10f: V108 = AND 0xff V106
0x111: V109 = ISZERO V108
0x112: V110 = 0x12a
0x115: JUMPI 0x12a V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3, V108]
Exit stack: [V10, 0x1d3, V108]

================================

Block 0x116
[0x116:0x129]
---
Predecessors: [0x106]
Successors: [0x12a]
---
0x116 POP
0x117 PUSH1 0x0
0x119 SLOAD
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 SWAP1
0x123 DUP2
0x124 AND
0x125 CALLER
0x126 SWAP1
0x127 SWAP2
0x128 AND
0x129 EQ
---
0x117: V111 = 0x0
0x119: V112 = S[0x0]
0x11a: V113 = 0x1
0x11c: V114 = 0xa0
0x11e: V115 = 0x2
0x120: V116 = EXP 0x2 0xa0
0x121: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x125: V119 = CALLER
0x128: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x129: V121 = EQ V120 V118
---
Entry stack: [V10, 0x1d3, V108]
Stack pops: 1
Stack additions: [V121]
Exit stack: [V10, 0x1d3, V121]

================================

Block 0x12a
[0x12a:0x130]
---
Predecessors: [0x106, 0x116]
Successors: [0x131, 0x137]
---
0x12a JUMPDEST
0x12b DUP1
0x12c ISZERO
0x12d PUSH2 0x137
0x130 JUMPI
---
0x12a: JUMPDEST 
0x12c: V122 = ISZERO S0
0x12d: V123 = 0x137
0x130: JUMPI 0x137 V122
---
Entry stack: [V10, 0x1d3, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1d3, S0]

================================

Block 0x131
[0x131:0x136]
---
Predecessors: [0x12a]
Successors: [0x137]
---
0x131 POP
0x132 PUSH1 0x1
0x134 SLOAD
0x135 TIMESTAMP
0x136 GT
---
0x132: V124 = 0x1
0x134: V125 = S[0x1]
0x135: V126 = TIMESTAMP
0x136: V127 = GT V126 V125
---
Entry stack: [V10, 0x1d3, S0]
Stack pops: 1
Stack additions: [V127]
Exit stack: [V10, 0x1d3, V127]

================================

Block 0x137
[0x137:0x13c]
---
Predecessors: [0x12a, 0x131]
Successors: [0x13d, 0x1d5]
---
0x137 JUMPDEST
0x138 ISZERO
0x139 PUSH2 0x1d5
0x13c JUMPI
---
0x137: JUMPDEST 
0x138: V128 = ISZERO S0
0x139: V129 = 0x1d5
0x13c: JUMPI 0x1d5 V128
---
Entry stack: [V10, 0x1d3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d3]

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x137]
Successors: [0xb0]
---
0x13d PUSH2 0x1e9
0x140 PUSH2 0xb0
0x143 JUMP
---
0x13d: V130 = 0x1e9
0x140: V131 = 0xb0
0x143: JUMP 0xb0
---
Entry stack: [V10, 0x1d3]
Stack pops: 0
Stack additions: [0x1e9]
Exit stack: [V10, 0x1d3, 0x1e9]

================================

Block 0x144
[0x144:0x14e]
---
Predecessors: [0x40]
Successors: [0xa9]
---
0x144 JUMPDEST
0x145 PUSH2 0x1d7
0x148 PUSH1 0x1
0x14a SLOAD
0x14b PUSH2 0xa9
0x14e JUMP
---
0x144: JUMPDEST 
0x145: V132 = 0x1d7
0x148: V133 = 0x1
0x14a: V134 = S[0x1]
0x14b: V135 = 0xa9
0x14e: JUMP 0xa9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d7, V134]
Exit stack: [V10, 0x1d7, V134]

================================

Block 0x14f
[0x14f:0x159]
---
Predecessors: [0x4b]
Successors: [0xa9]
---
0x14f JUMPDEST
0x150 PUSH2 0x1d7
0x153 PUSH1 0x3
0x155 SLOAD
0x156 PUSH2 0xa9
0x159 JUMP
---
0x14f: JUMPDEST 
0x150: V136 = 0x1d7
0x153: V137 = 0x3
0x155: V138 = S[0x3]
0x156: V139 = 0xa9
0x159: JUMP 0xa9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d7, V138]
Exit stack: [V10, 0x1d7, V138]

================================

Block 0x15a
[0x15a:0x178]
---
Predecessors: [0x56]
Successors: [0x179, 0x18b]
---
0x15a JUMPDEST
0x15b PUSH2 0x1d3
0x15e PUSH1 0x4
0x160 CALLDATALOAD
0x161 PUSH1 0x0
0x163 SLOAD
0x164 PUSH1 0x1
0x166 PUSH1 0xa0
0x168 PUSH1 0x2
0x16a EXP
0x16b SUB
0x16c SWAP1
0x16d DUP2
0x16e AND
0x16f CALLER
0x170 SWAP1
0x171 SWAP2
0x172 AND
0x173 EQ
0x174 ISZERO
0x175 PUSH2 0x18b
0x178 JUMPI
---
0x15a: JUMPDEST 
0x15b: V140 = 0x1d3
0x15e: V141 = 0x4
0x160: V142 = CALLDATALOAD 0x4
0x161: V143 = 0x0
0x163: V144 = S[0x0]
0x164: V145 = 0x1
0x166: V146 = 0xa0
0x168: V147 = 0x2
0x16a: V148 = EXP 0x2 0xa0
0x16b: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16e: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x16f: V151 = CALLER
0x172: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x173: V153 = EQ V152 V150
0x174: V154 = ISZERO V153
0x175: V155 = 0x18b
0x178: JUMPI 0x18b V154
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3, V142]
Exit stack: [V10, 0x1d3, V142]

================================

Block 0x179
[0x179:0x18a]
---
Predecessors: [0x15a]
Successors: [0x18b]
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c SLOAD
0x17d PUSH1 0x1
0x17f PUSH1 0xa0
0x181 PUSH1 0x2
0x183 EXP
0x184 SUB
0x185 NOT
0x186 AND
0x187 DUP3
0x188 OR
0x189 SWAP1
0x18a SSTORE
---
0x179: V156 = 0x0
0x17c: V157 = S[0x0]
0x17d: V158 = 0x1
0x17f: V159 = 0xa0
0x181: V160 = 0x2
0x183: V161 = EXP 0x2 0xa0
0x184: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x185: V163 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x186: V164 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V157
0x188: V165 = OR V142 V164
0x18a: S[0x0] = V165
---
Entry stack: [V10, 0x1d3, V142]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1d3, V142]

================================

Block 0x18b
[0x18b:0x18d]
---
Predecessors: [0x15a, 0x179, 0x18e]
Successors: [0x1d3]
---
0x18b JUMPDEST
0x18c POP
0x18d JUMP
---
0x18b: JUMPDEST 
0x18d: JUMP 0x1d3
---
Entry stack: [V10, 0x1d3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x18e
[0x18e:0x1ac]
---
Predecessors: [0x61]
Successors: [0x18b, 0x1ad]
---
0x18e JUMPDEST
0x18f PUSH2 0x1d3
0x192 PUSH1 0x4
0x194 CALLDATALOAD
0x195 PUSH1 0x0
0x197 SLOAD
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 AND
0x1a3 CALLER
0x1a4 SWAP1
0x1a5 SWAP2
0x1a6 AND
0x1a7 EQ
0x1a8 ISZERO
0x1a9 PUSH2 0x18b
0x1ac JUMPI
---
0x18e: JUMPDEST 
0x18f: V166 = 0x1d3
0x192: V167 = 0x4
0x194: V168 = CALLDATALOAD 0x4
0x195: V169 = 0x0
0x197: V170 = S[0x0]
0x198: V171 = 0x1
0x19a: V172 = 0xa0
0x19c: V173 = 0x2
0x19e: V174 = EXP 0x2 0xa0
0x19f: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a2: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x1a3: V177 = CALLER
0x1a6: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x1a7: V179 = EQ V178 V176
0x1a8: V180 = ISZERO V179
0x1a9: V181 = 0x18b
0x1ac: JUMPI 0x18b V180
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3, V168]
Exit stack: [V10, 0x1d3, V168]

================================

Block 0x1ad
[0x1ad:0x1ba]
---
Predecessors: [0x18e]
Successors: [0x1d3]
---
0x1ad PUSH1 0x5
0x1af DUP1
0x1b0 SLOAD
0x1b1 PUSH1 0xff
0x1b3 NOT
0x1b4 AND
0x1b5 DUP3
0x1b6 OR
0x1b7 SWAP1
0x1b8 SSTORE
0x1b9 POP
0x1ba JUMP
---
0x1ad: V182 = 0x5
0x1b0: V183 = S[0x5]
0x1b1: V184 = 0xff
0x1b3: V185 = NOT 0xff
0x1b4: V186 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V183
0x1b6: V187 = OR V168 V186
0x1b8: S[0x5] = V187
0x1ba: JUMP 0x1d3
---
Entry stack: [V10, 0x1d3, V168]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bb
[0x1bb:0x1cb]
---
Predecessors: [0x6c]
Successors: [0x1cc, 0x1f7]
---
0x1bb JUMPDEST
0x1bc PUSH2 0x1d3
0x1bf PUSH1 0x4
0x1c1 CALLDATALOAD
0x1c2 PUSH1 0x1
0x1c4 SLOAD
0x1c5 TIMESTAMP
0x1c6 GT
0x1c7 ISZERO
0x1c8 PUSH2 0x1f7
0x1cb JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V188 = 0x1d3
0x1bf: V189 = 0x4
0x1c1: V190 = CALLDATALOAD 0x4
0x1c2: V191 = 0x1
0x1c4: V192 = S[0x1]
0x1c5: V193 = TIMESTAMP
0x1c6: V194 = GT V193 V192
0x1c7: V195 = ISZERO V194
0x1c8: V196 = 0x1f7
0x1cb: JUMPI 0x1f7 V195
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d3, V190]
Exit stack: [V10, 0x1d3, V190]

================================

Block 0x1cc
[0x1cc:0x1d2]
---
Predecessors: [0x1bb]
Successors: [0xb0]
---
0x1cc PUSH2 0x1f7
0x1cf PUSH2 0xb0
0x1d2 JUMP
---
0x1cc: V197 = 0x1f7
0x1cf: V198 = 0xb0
0x1d2: JUMP 0xb0
---
Entry stack: [V10, 0x1d3, V190]
Stack pops: 0
Stack additions: [0x1f7]
Exit stack: [V10, 0x1d3, V190, 0x1f7]

================================

Block 0x1d3
[0x1d3:0x1d4]
---
Predecessors: [0x18b, 0x1ad, 0x1d5, 0x21d, 0x4ac]
Successors: []
---
0x1d3 JUMPDEST
0x1d4 STOP
---
0x1d3: JUMPDEST 
0x1d4: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x1d5
[0x1d5:0x1d6]
---
Predecessors: [0x137]
Successors: [0x1d3]
---
0x1d5 JUMPDEST
0x1d6 JUMP
---
0x1d5: JUMPDEST 
0x1d6: JUMP 0x1d3
---
Entry stack: [V10, 0x1d3]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d7
[0x1d7:0x1e8]
---
Predecessors: [0xa9]
Successors: []
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x40
0x1da DUP1
0x1db MLOAD
0x1dc SWAP2
0x1dd DUP3
0x1de MSTORE
0x1df MLOAD
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 SWAP1
0x1e3 SUB
0x1e4 PUSH1 0x20
0x1e6 ADD
0x1e7 SWAP1
0x1e8 RETURN
---
0x1d7: JUMPDEST 
0x1d8: V199 = 0x40
0x1db: V200 = M[0x40]
0x1de: M[V200] = S0
0x1df: V201 = M[0x40]
0x1e3: V202 = SUB V200 V201
0x1e4: V203 = 0x20
0x1e6: V204 = ADD 0x20 V202
0x1e8: RETURN V201 V204
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e9
[0x1e9:0x1f6]
---
Predecessors: [0x4ac]
Successors: []
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x0
0x1ec SLOAD
0x1ed PUSH1 0x1
0x1ef PUSH1 0xa0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 SUB
0x1f5 AND
0x1f6 SELFDESTRUCT
---
0x1e9: JUMPDEST 
0x1ea: V205 = 0x0
0x1ec: V206 = S[0x0]
0x1ed: V207 = 0x1
0x1ef: V208 = 0xa0
0x1f1: V209 = 0x2
0x1f3: V210 = EXP 0x2 0xa0
0x1f4: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x1f6: SELFDESTRUCT V212
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x1f7
[0x1f7:0x205]
---
Predecessors: [0x1bb, 0x4ac]
Successors: [0x206, 0x20a]
---
0x1f7 JUMPDEST
0x1f8 PUSH7 0xb1a2bc2ec50000
0x200 CALLVALUE
0x201 EQ
0x202 PUSH2 0x20a
0x205 JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V213 = 0xb1a2bc2ec50000
0x200: V214 = CALLVALUE
0x201: V215 = EQ V214 0xb1a2bc2ec50000
0x202: V216 = 0x20a
0x205: JUMPI 0x20a V215
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x206
[0x206:0x209]
---
Predecessors: [0x1f7]
Successors: []
---
0x206 PUSH2 0x2
0x209 JUMP
---
0x206: V217 = 0x2
0x209: THROW 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x20a
[0x20a:0x218]
---
Predecessors: [0x1f7]
Successors: [0x219, 0x21d]
---
0x20a JUMPDEST
0x20b PUSH1 0x5
0x20d SLOAD
0x20e PUSH1 0xff
0x210 AND
0x211 PUSH1 0x1
0x213 EQ
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x20a: JUMPDEST 
0x20b: V218 = 0x5
0x20d: V219 = S[0x5]
0x20e: V220 = 0xff
0x210: V221 = AND 0xff V219
0x211: V222 = 0x1
0x213: V223 = EQ 0x1 V221
0x214: V224 = ISZERO V223
0x215: V225 = 0x21d
0x218: JUMPI 0x21d V224
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x20a]
Successors: []
---
0x219 PUSH2 0x2
0x21c JUMP
---
0x219: V226 = 0x2
0x21c: THROW 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x21d
[0x21d:0x2d2]
---
Predecessors: [0x20a]
Successors: [0x1d3]
---
0x21d JUMPDEST
0x21e PUSH1 0x3
0x220 DUP1
0x221 SLOAD
0x222 PUSH1 0x0
0x224 SWAP1
0x225 DUP2
0x226 MSTORE
0x227 PUSH1 0x6
0x229 PUSH1 0x20
0x22b MSTORE
0x22c PUSH1 0x40
0x22e DUP1
0x22f DUP3
0x230 SHA3
0x231 DUP5
0x232 SWAP1
0x233 SSTORE
0x234 DUP3
0x235 SLOAD
0x236 DUP3
0x237 MSTORE
0x238 DUP1
0x239 DUP3
0x23a SHA3
0x23b PUSH1 0x1
0x23d SWAP1
0x23e DUP2
0x23f ADD
0x240 DUP1
0x241 SLOAD
0x242 PUSH1 0x1
0x244 PUSH1 0xa0
0x246 PUSH1 0x2
0x248 EXP
0x249 SUB
0x24a NOT
0x24b AND
0x24c CALLER
0x24d OR
0x24e SWAP1
0x24f SSTORE
0x250 DUP4
0x251 SLOAD
0x252 DUP2
0x253 ADD
0x254 SWAP1
0x255 SWAP4
0x256 SSTORE
0x257 PUSH2 0x708
0x25a TIMESTAMP
0x25b ADD
0x25c SWAP1
0x25d SWAP3
0x25e SSTORE
0x25f SWAP1
0x260 MLOAD
0x261 DUP2
0x262 SLOAD
0x263 PUSH1 0x1
0x265 PUSH1 0xa0
0x267 PUSH1 0x2
0x269 EXP
0x26a SUB
0x26b AND
0x26c SWAP2
0x26d SWAP1
0x26e PUSH1 0xa
0x270 PUSH1 0x64
0x272 CALLVALUE
0x273 DIV
0x274 MUL
0x275 SWAP1
0x276 DUP3
0x277 DUP2
0x278 DUP2
0x279 DUP2
0x27a DUP6
0x27b DUP9
0x27c DUP4
0x27d CALL
0x27e POP
0x27f POP
0x280 PUSH1 0x40
0x282 DUP1
0x283 MLOAD
0x284 DUP6
0x285 DUP2
0x286 MSTORE
0x287 PUSH1 0x1
0x289 PUSH1 0xa0
0x28b PUSH1 0x2
0x28d EXP
0x28e SUB
0x28f ADDRESS
0x290 DUP2
0x291 AND
0x292 BALANCE
0x293 PUSH1 0x20
0x295 DUP4
0x296 ADD
0x297 MSTORE
0x298 TIMESTAMP
0x299 DUP3
0x29a DUP5
0x29b ADD
0x29c MSTORE
0x29d SWAP2
0x29e MLOAD
0x29f CALLER
0x2a0 SWAP1
0x2a1 SWAP3
0x2a2 AND
0x2a3 SWAP5
0x2a4 POP
0x2a5 PUSH32 0x8d466116dd3f7b5e3a703c5bd5104cdde755801bee5a4e7d640edef8f7e6cf84
0x2c6 SWAP4
0x2c7 POP
0x2c8 DUP2
0x2c9 SWAP1
0x2ca SUB
0x2cb PUSH1 0x60
0x2cd ADD
0x2ce SWAP2
0x2cf POP
0x2d0 LOG2
0x2d1 POP
0x2d2 JUMP
---
0x21d: JUMPDEST 
0x21e: V227 = 0x3
0x221: V228 = S[0x3]
0x222: V229 = 0x0
0x226: M[0x0] = V228
0x227: V230 = 0x6
0x229: V231 = 0x20
0x22b: M[0x20] = 0x6
0x22c: V232 = 0x40
0x230: V233 = SHA3 0x0 0x40
0x233: S[V233] = S0
0x235: V234 = S[0x3]
0x237: M[0x0] = V234
0x23a: V235 = SHA3 0x0 0x40
0x23b: V236 = 0x1
0x23f: V237 = ADD 0x1 V235
0x241: V238 = S[V237]
0x242: V239 = 0x1
0x244: V240 = 0xa0
0x246: V241 = 0x2
0x248: V242 = EXP 0x2 0xa0
0x249: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24a: V244 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V245 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V238
0x24c: V246 = CALLER
0x24d: V247 = OR V246 V245
0x24f: S[V237] = V247
0x251: V248 = S[0x3]
0x253: V249 = ADD 0x1 V248
0x256: S[0x3] = V249
0x257: V250 = 0x708
0x25a: V251 = TIMESTAMP
0x25b: V252 = ADD V251 0x708
0x25e: S[0x1] = V252
0x260: V253 = M[0x40]
0x262: V254 = S[0x0]
0x263: V255 = 0x1
0x265: V256 = 0xa0
0x267: V257 = 0x2
0x269: V258 = EXP 0x2 0xa0
0x26a: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26b: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x26e: V261 = 0xa
0x270: V262 = 0x64
0x272: V263 = CALLVALUE
0x273: V264 = DIV V263 0x64
0x274: V265 = MUL V264 0xa
0x27d: V266 = CALL 0x0 V260 V265 V253 0x0 V253 0x0
0x280: V267 = 0x40
0x283: V268 = M[0x40]
0x286: M[V268] = S0
0x287: V269 = 0x1
0x289: V270 = 0xa0
0x28b: V271 = 0x2
0x28d: V272 = EXP 0x2 0xa0
0x28e: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28f: V274 = ADDRESS
0x291: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x292: V276 = BALANCE V275
0x293: V277 = 0x20
0x296: V278 = ADD V268 0x20
0x297: M[V278] = V276
0x298: V279 = TIMESTAMP
0x29b: V280 = ADD 0x40 V268
0x29c: M[V280] = V279
0x29e: V281 = M[0x40]
0x29f: V282 = CALLER
0x2a2: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x2a5: V284 = 0x8d466116dd3f7b5e3a703c5bd5104cdde755801bee5a4e7d640edef8f7e6cf84
0x2ca: V285 = SUB V268 V281
0x2cb: V286 = 0x60
0x2cd: V287 = ADD 0x60 V285
0x2d0: LOG V281 V287 0x8d466116dd3f7b5e3a703c5bd5104cdde755801bee5a4e7d640edef8f7e6cf84 V283
0x2d2: JUMP S1
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d3
[0x2d3:0x2d7]
---
Predecessors: [0xc4]
Successors: [0x2d8]
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x0
0x2d6 SWAP2
0x2d7 POP
---
0x2d3: JUMPDEST 
0x2d4: V288 = 0x0
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, 0x0, 0x0]

================================

Block 0x2d8
[0x2d8:0x2e2]
---
Predecessors: [0x2d3, 0x33e]
Successors: [0x2e3, 0x3c6]
---
0x2d8 JUMPDEST
0x2d9 PUSH1 0x3
0x2db SLOAD
0x2dc DUP3
0x2dd LT
0x2de ISZERO
0x2df PUSH2 0x3c6
0x2e2 JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V289 = 0x3
0x2db: V290 = S[0x3]
0x2dd: V291 = LT S1 V290
0x2de: V292 = ISZERO V291
0x2df: V293 = 0x3c6
0x2e2: JUMPI 0x3c6 V292
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]

================================

Block 0x2e3
[0x2e3:0x2fb]
---
Predecessors: [0x2d8]
Successors: [0x2fc, 0x33e]
---
0x2e3 PUSH1 0x0
0x2e5 DUP3
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x6
0x2ea PUSH1 0x20
0x2ec MSTORE
0x2ed PUSH1 0x40
0x2ef SWAP1
0x2f0 SHA3
0x2f1 PUSH1 0x2
0x2f3 ADD
0x2f4 SLOAD
0x2f5 DUP4
0x2f6 EQ
0x2f7 ISZERO
0x2f8 PUSH2 0x33e
0x2fb JUMPI
---
0x2e3: V294 = 0x0
0x2e7: M[0x0] = S1
0x2e8: V295 = 0x6
0x2ea: V296 = 0x20
0x2ec: M[0x20] = 0x6
0x2ed: V297 = 0x40
0x2f0: V298 = SHA3 0x0 0x40
0x2f1: V299 = 0x2
0x2f3: V300 = ADD 0x2 V298
0x2f4: V301 = S[V300]
0x2f6: V302 = EQ S2 V301
0x2f7: V303 = ISZERO V302
0x2f8: V304 = 0x33e
0x2fb: JUMPI 0x33e V303
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]

================================

Block 0x2fc
[0x2fc:0x33d]
---
Predecessors: [0x2e3]
Successors: [0x33e]
---
0x2fc PUSH1 0x40
0x2fe PUSH1 0x0
0x300 DUP2
0x301 DUP2
0x302 SHA3
0x303 PUSH1 0x1
0x305 SWAP1
0x306 DUP2
0x307 ADD
0x308 SLOAD
0x309 PUSH1 0x4
0x30b DUP1
0x30c SLOAD
0x30d DUP5
0x30e MSTORE
0x30f PUSH1 0x7
0x311 PUSH1 0x20
0x313 MSTORE
0x314 SWAP4
0x315 SWAP1
0x316 SWAP3
0x317 SHA3
0x318 DUP2
0x319 ADD
0x31a DUP1
0x31b SLOAD
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 NOT
0x325 AND
0x326 PUSH1 0x1
0x328 PUSH1 0xa0
0x32a PUSH1 0x2
0x32c EXP
0x32d SUB
0x32e SWAP4
0x32f SWAP1
0x330 SWAP4
0x331 AND
0x332 SWAP3
0x333 SWAP1
0x334 SWAP3
0x335 OR
0x336 SWAP1
0x337 SWAP2
0x338 SSTORE
0x339 DUP2
0x33a SLOAD
0x33b ADD
0x33c SWAP1
0x33d SSTORE
---
0x2fc: V305 = 0x40
0x2fe: V306 = 0x0
0x302: V307 = SHA3 0x0 0x40
0x303: V308 = 0x1
0x307: V309 = ADD 0x1 V307
0x308: V310 = S[V309]
0x309: V311 = 0x4
0x30c: V312 = S[0x4]
0x30e: M[0x0] = V312
0x30f: V313 = 0x7
0x311: V314 = 0x20
0x313: M[0x20] = 0x7
0x317: V315 = SHA3 0x0 0x40
0x319: V316 = ADD 0x1 V315
0x31b: V317 = S[V316]
0x31c: V318 = 0x1
0x31e: V319 = 0xa0
0x320: V320 = 0x2
0x322: V321 = EXP 0x2 0xa0
0x323: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x324: V323 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x325: V324 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V317
0x326: V325 = 0x1
0x328: V326 = 0xa0
0x32a: V327 = 0x2
0x32c: V328 = EXP 0x2 0xa0
0x32d: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x331: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x335: V331 = OR V330 V324
0x338: S[V316] = V331
0x33a: V332 = S[0x4]
0x33b: V333 = ADD V332 0x1
0x33d: S[0x4] = V333
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]

================================

Block 0x33e
[0x33e:0x349]
---
Predecessors: [0x2e3, 0x2fc]
Successors: [0x2d8]
---
0x33e JUMPDEST
0x33f PUSH1 0x1
0x341 SWAP2
0x342 SWAP1
0x343 SWAP2
0x344 ADD
0x345 SWAP1
0x346 PUSH2 0x2d8
0x349 JUMP
---
0x33e: JUMPDEST 
0x33f: V334 = 0x1
0x344: V335 = ADD 0x1 S1
0x346: V336 = 0x2d8
0x349: JUMP 0x2d8
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]
Stack pops: 2
Stack additions: [V335, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, V335, S0]

================================

Block 0x34a
[0x34a:0x366]
---
Predecessors: [0x4c0]
Successors: [0x367, 0x38f]
---
0x34a JUMPDEST
0x34b PUSH1 0x0
0x34d DUP4
0x34e DUP2
0x34f MSTORE
0x350 PUSH1 0x6
0x352 PUSH1 0x20
0x354 MSTORE
0x355 PUSH1 0x40
0x357 DUP2
0x358 SHA3
0x359 PUSH1 0x2
0x35b ADD
0x35c SWAP2
0x35d SWAP1
0x35e SWAP2
0x35f SSTORE
0x360 DUP3
0x361 EQ
0x362 ISZERO
0x363 PUSH2 0x38f
0x366 JUMPI
---
0x34a: JUMPDEST 
0x34b: V337 = 0x0
0x34f: M[0x0] = S2
0x350: V338 = 0x6
0x352: V339 = 0x20
0x354: M[0x20] = 0x6
0x355: V340 = 0x40
0x358: V341 = SHA3 0x0 0x40
0x359: V342 = 0x2
0x35b: V343 = ADD 0x2 V341
0x35f: S[V343] = S0
0x361: V344 = EQ S2 0x0
0x362: V345 = ISZERO V344
0x363: V346 = 0x38f
0x366: JUMPI 0x38f V345
---
Entry stack: [V10, S6, S5, {0x1d3, 0x1e9, 0x1f7}, S3, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V10, S6, S5, {0x1d3, 0x1e9, 0x1f7}, S3, S2, 0x0]

================================

Block 0x367
[0x367:0x38e]
---
Predecessors: [0x34a]
Successors: [0x3ba]
---
0x367 PUSH1 0x6
0x369 PUSH1 0x0
0x36b POP
0x36c PUSH1 0x0
0x36e DUP4
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x20
0x373 ADD
0x374 SWAP1
0x375 DUP2
0x376 MSTORE
0x377 PUSH1 0x20
0x379 ADD
0x37a PUSH1 0x0
0x37c SHA3
0x37d PUSH1 0x0
0x37f POP
0x380 PUSH1 0x2
0x382 ADD
0x383 PUSH1 0x0
0x385 POP
0x386 SLOAD
0x387 SWAP3
0x388 POP
0x389 DUP3
0x38a POP
0x38b PUSH2 0x3ba
0x38e JUMP
---
0x367: V347 = 0x6
0x369: V348 = 0x0
0x36c: V349 = 0x0
0x370: M[0x0] = S1
0x371: V350 = 0x20
0x373: V351 = ADD 0x20 0x0
0x376: M[0x20] = 0x6
0x377: V352 = 0x20
0x379: V353 = ADD 0x20 0x20
0x37a: V354 = 0x0
0x37c: V355 = SHA3 0x0 0x40
0x37d: V356 = 0x0
0x380: V357 = 0x2
0x382: V358 = ADD 0x2 V355
0x383: V359 = 0x0
0x386: V360 = S[V358]
0x38b: V361 = 0x3ba
0x38e: JUMP 0x3ba
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V360, S1, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, V360, S1, 0x0]

================================

Block 0x38f
[0x38f:0x3a8]
---
Predecessors: [0x34a]
Successors: [0x3a9, 0x3ba]
---
0x38f JUMPDEST
0x390 PUSH1 0x0
0x392 DUP3
0x393 DUP2
0x394 MSTORE
0x395 PUSH1 0x6
0x397 PUSH1 0x20
0x399 MSTORE
0x39a PUSH1 0x40
0x39c SWAP1
0x39d SHA3
0x39e PUSH1 0x2
0x3a0 ADD
0x3a1 SLOAD
0x3a2 DUP4
0x3a3 LT
0x3a4 ISZERO
0x3a5 PUSH2 0x3ba
0x3a8 JUMPI
---
0x38f: JUMPDEST 
0x390: V362 = 0x0
0x394: M[0x0] = S1
0x395: V363 = 0x6
0x397: V364 = 0x20
0x399: M[0x20] = 0x6
0x39a: V365 = 0x40
0x39d: V366 = SHA3 0x0 0x40
0x39e: V367 = 0x2
0x3a0: V368 = ADD 0x2 V366
0x3a1: V369 = S[V368]
0x3a3: V370 = LT S2 V369
0x3a4: V371 = ISZERO V370
0x3a5: V372 = 0x3ba
0x3a8: JUMPI 0x3ba V371
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0]

================================

Block 0x3a9
[0x3a9:0x3b9]
---
Predecessors: [0x38f]
Successors: [0x3ba]
---
0x3a9 PUSH1 0x40
0x3ab PUSH1 0x0
0x3ad SWAP1
0x3ae DUP2
0x3af SHA3
0x3b0 SWAP1
0x3b1 DUP4
0x3b2 SWAP1
0x3b3 MSTORE
0x3b4 PUSH1 0x2
0x3b6 ADD
0x3b7 SLOAD
0x3b8 SWAP3
0x3b9 POP
---
0x3a9: V373 = 0x40
0x3ab: V374 = 0x0
0x3af: V375 = SHA3 0x0 0x40
0x3b3: M[0x0] = S1
0x3b4: V376 = 0x2
0x3b6: V377 = ADD 0x2 V375
0x3b7: V378 = S[V377]
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V378, S1, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, V378, S1, 0x0]

================================

Block 0x3ba
[0x3ba:0x3c5]
---
Predecessors: [0x367, 0x38f, 0x3a9]
Successors: [0xc4]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x1
0x3bd SWAP2
0x3be SWAP1
0x3bf SWAP2
0x3c0 ADD
0x3c1 SWAP1
0x3c2 PUSH2 0xc4
0x3c5 JUMP
---
0x3ba: JUMPDEST 
0x3bb: V379 = 0x1
0x3c0: V380 = ADD 0x1 S1
0x3c2: V381 = 0xc4
0x3c5: JUMP 0xc4
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [V380, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, V380, 0x0]

================================

Block 0x3c6
[0x3c6:0x3da]
---
Predecessors: [0x2d8]
Successors: [0x3db]
---
0x3c6 JUMPDEST
0x3c7 POP
0x3c8 POP
0x3c9 PUSH1 0x4
0x3cb SLOAD
0x3cc PUSH1 0x0
0x3ce SWAP1
0x3cf PUSH1 0x1
0x3d1 PUSH1 0xa0
0x3d3 PUSH1 0x2
0x3d5 EXP
0x3d6 SUB
0x3d7 ADDRESS
0x3d8 AND
0x3d9 BALANCE
0x3da DIV
---
0x3c6: JUMPDEST 
0x3c9: V382 = 0x4
0x3cb: V383 = S[0x4]
0x3cc: V384 = 0x0
0x3cf: V385 = 0x1
0x3d1: V386 = 0xa0
0x3d3: V387 = 0x2
0x3d5: V388 = EXP 0x2 0xa0
0x3d6: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d7: V390 = ADDRESS
0x3d8: V391 = AND V390 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V392 = BALANCE V391
0x3da: V393 = DIV V392 V383
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]
Stack pops: 2
Stack additions: [0x0, V393]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, 0x0, V393]

================================

Block 0x3db
[0x3db:0x3e5]
---
Predecessors: [0x3c6, 0x3e6]
Successors: [0x3e6, 0x499]
---
0x3db JUMPDEST
0x3dc PUSH1 0x4
0x3de SLOAD
0x3df DUP3
0x3e0 LT
0x3e1 ISZERO
0x3e2 PUSH2 0x499
0x3e5 JUMPI
---
0x3db: JUMPDEST 
0x3dc: V394 = 0x4
0x3de: V395 = S[0x4]
0x3e0: V396 = LT S1 V395
0x3e1: V397 = ISZERO V396
0x3e2: V398 = 0x499
0x3e5: JUMPI 0x499 V397
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]

================================

Block 0x3e6
[0x3e6:0x498]
---
Predecessors: [0x3db]
Successors: [0x3db]
---
0x3e6 PUSH1 0x0
0x3e8 DUP3
0x3e9 DUP2
0x3ea MSTORE
0x3eb PUSH1 0x7
0x3ed PUSH1 0x20
0x3ef MSTORE
0x3f0 PUSH1 0x40
0x3f2 DUP1
0x3f3 MLOAD
0x3f4 SWAP1
0x3f5 DUP3
0x3f6 SHA3
0x3f7 PUSH1 0x1
0x3f9 ADD
0x3fa SLOAD
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 AND
0x404 SWAP2
0x405 SWAP1
0x406 DUP4
0x407 SWAP1
0x408 DUP3
0x409 DUP2
0x40a DUP2
0x40b DUP2
0x40c DUP6
0x40d DUP9
0x40e DUP4
0x40f CALL
0x410 SWAP4
0x411 POP
0x412 POP
0x413 POP
0x414 POP
0x415 POP
0x416 PUSH1 0x7
0x418 PUSH1 0x0
0x41a POP
0x41b PUSH1 0x0
0x41d DUP4
0x41e DUP2
0x41f MSTORE
0x420 PUSH1 0x20
0x422 ADD
0x423 SWAP1
0x424 DUP2
0x425 MSTORE
0x426 PUSH1 0x20
0x428 ADD
0x429 PUSH1 0x0
0x42b SHA3
0x42c PUSH1 0x0
0x42e POP
0x42f PUSH1 0x1
0x431 ADD
0x432 PUSH1 0x0
0x434 SWAP1
0x435 SLOAD
0x436 SWAP1
0x437 PUSH2 0x100
0x43a EXP
0x43b SWAP1
0x43c DIV
0x43d PUSH1 0x1
0x43f PUSH1 0xa0
0x441 PUSH1 0x2
0x443 EXP
0x444 SUB
0x445 AND
0x446 PUSH1 0x1
0x448 PUSH1 0xa0
0x44a PUSH1 0x2
0x44c EXP
0x44d SUB
0x44e AND
0x44f PUSH32 0x16a74b524ea11b2247b00b53def27cdfee7b817e40dd2810aa14e4ec915c6a4e
0x470 DUP3
0x471 TIMESTAMP
0x472 PUSH1 0x40
0x474 MLOAD
0x475 DUP1
0x476 DUP4
0x477 DUP2
0x478 MSTORE
0x479 PUSH1 0x20
0x47b ADD
0x47c DUP3
0x47d DUP2
0x47e MSTORE
0x47f PUSH1 0x20
0x481 ADD
0x482 SWAP3
0x483 POP
0x484 POP
0x485 POP
0x486 PUSH1 0x40
0x488 MLOAD
0x489 DUP1
0x48a SWAP2
0x48b SUB
0x48c SWAP1
0x48d LOG2
0x48e PUSH1 0x1
0x490 SWAP2
0x491 SWAP1
0x492 SWAP2
0x493 ADD
0x494 SWAP1
0x495 PUSH2 0x3db
0x498 JUMP
---
0x3e6: V399 = 0x0
0x3ea: M[0x0] = S1
0x3eb: V400 = 0x7
0x3ed: V401 = 0x20
0x3ef: M[0x20] = 0x7
0x3f0: V402 = 0x40
0x3f3: V403 = M[0x40]
0x3f6: V404 = SHA3 0x0 0x40
0x3f7: V405 = 0x1
0x3f9: V406 = ADD 0x1 V404
0x3fa: V407 = S[V406]
0x3fb: V408 = 0x1
0x3fd: V409 = 0xa0
0x3ff: V410 = 0x2
0x401: V411 = EXP 0x2 0xa0
0x402: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x403: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x40f: V414 = CALL 0x0 V413 S0 V403 0x0 V403 0x0
0x416: V415 = 0x7
0x418: V416 = 0x0
0x41b: V417 = 0x0
0x41f: M[0x0] = S1
0x420: V418 = 0x20
0x422: V419 = ADD 0x20 0x0
0x425: M[0x20] = 0x7
0x426: V420 = 0x20
0x428: V421 = ADD 0x20 0x20
0x429: V422 = 0x0
0x42b: V423 = SHA3 0x0 0x40
0x42c: V424 = 0x0
0x42f: V425 = 0x1
0x431: V426 = ADD 0x1 V423
0x432: V427 = 0x0
0x435: V428 = S[V426]
0x437: V429 = 0x100
0x43a: V430 = EXP 0x100 0x0
0x43c: V431 = DIV V428 0x1
0x43d: V432 = 0x1
0x43f: V433 = 0xa0
0x441: V434 = 0x2
0x443: V435 = EXP 0x2 0xa0
0x444: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x445: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x446: V438 = 0x1
0x448: V439 = 0xa0
0x44a: V440 = 0x2
0x44c: V441 = EXP 0x2 0xa0
0x44d: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44e: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x44f: V444 = 0x16a74b524ea11b2247b00b53def27cdfee7b817e40dd2810aa14e4ec915c6a4e
0x471: V445 = TIMESTAMP
0x472: V446 = 0x40
0x474: V447 = M[0x40]
0x478: M[V447] = S0
0x479: V448 = 0x20
0x47b: V449 = ADD 0x20 V447
0x47e: M[V449] = V445
0x47f: V450 = 0x20
0x481: V451 = ADD 0x20 V449
0x486: V452 = 0x40
0x488: V453 = M[0x40]
0x48b: V454 = SUB V451 V453
0x48d: LOG V453 V454 0x16a74b524ea11b2247b00b53def27cdfee7b817e40dd2810aa14e4ec915c6a4e V443
0x48e: V455 = 0x1
0x493: V456 = ADD 0x1 S1
0x495: V457 = 0x3db
0x498: JUMP 0x3db
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]
Stack pops: 2
Stack additions: [V456, S0]
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, V456, S0]

================================

Block 0x499
[0x499:0x4ab]
---
Predecessors: [0x3db]
Successors: [0x4ac]
---
0x499 JUMPDEST
0x49a PUSH2 0x4ac
0x49d PUSH1 0x0
0x49f PUSH1 0x3
0x4a1 DUP2
0x4a2 SWAP1
0x4a3 SSTORE
0x4a4 PUSH1 0x4
0x4a6 SSTORE
0x4a7 TIMESTAMP
0x4a8 PUSH1 0x2
0x4aa SSTORE
0x4ab JUMP
---
0x499: JUMPDEST 
0x49a: V458 = 0x4ac
0x49d: V459 = 0x0
0x49f: V460 = 0x3
0x4a3: S[0x3] = 0x0
0x4a4: V461 = 0x4
0x4a6: S[0x4] = 0x0
0x4a7: V462 = TIMESTAMP
0x4a8: V463 = 0x2
0x4aa: S[0x2] = V462
0x4ab: JUMP 0x4ac
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]

================================

Block 0x4ac
[0x4ac:0x4b0]
---
Predecessors: [0xb0, 0x499]
Successors: [0x1d3, 0x1e9, 0x1f7]
---
0x4ac JUMPDEST
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 JUMP
---
0x4ac: JUMPDEST 
0x4b0: JUMP {0x1d3, 0x1e9, 0x1f7}
---
Entry stack: [V10, S5, S4, {0x1d3, 0x1e9, 0x1f7}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S5, S4]

================================

Block 0x4b1
[0x4b1:0x4bf]
---
Predecessors: [0xcf]
Successors: [0x4c0]
---
0x4b1 JUMPDEST
0x4b2 POP
0x4b3 PUSH1 0x1
0x4b5 PUSH1 0xa0
0x4b7 PUSH1 0x2
0x4b9 EXP
0x4ba SUB
0x4bb ADDRESS
0x4bc AND
0x4bd BALANCE
0x4be DUP2
0x4bf SUB
---
0x4b1: JUMPDEST 
0x4b3: V464 = 0x1
0x4b5: V465 = 0xa0
0x4b7: V466 = 0x2
0x4b9: V467 = EXP 0x2 0xa0
0x4ba: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bb: V469 = ADDRESS
0x4bc: V470 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x4bd: V471 = BALANCE V470
0x4bf: V472 = SUB V82 V471
---
Entry stack: [V10, S8, S7, {0x1d3, 0x1e9, 0x1f7}, S5, S4, 0x0, 0x34a, V82, 0x0]
Stack pops: 2
Stack additions: [S1, V472]
Exit stack: [V10, S8, S7, {0x1d3, 0x1e9, 0x1f7}, S5, S4, 0x0, 0x34a, V82, V472]

================================

Block 0x4c0
[0x4c0:0x4c4]
---
Predecessors: [0xf3, 0x4b1]
Successors: [0x34a]
---
0x4c0 JUMPDEST
0x4c1 SWAP2
0x4c2 SWAP1
0x4c3 POP
0x4c4 JUMP
---
0x4c0: JUMPDEST 
0x4c4: JUMP 0x34a
---
Entry stack: [V10, S8, S7, {0x1d3, 0x1e9, 0x1f7}, S5, S4, 0x0, 0x34a, V82, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S8, S7, {0x1d3, 0x1e9, 0x1f7}, S5, S4, 0x0, S0]

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0x7f
Exit block: 0x1d7
Body: 0x7f, 0x8e, 0xa9, 0x1d7

Function 1:
Public function signature: 0x2f13b60c
Entry block: 0x9f
Exit block: 0x1d7
Body: 0x9f, 0x1d7

Function 2:
Public function signature: 0x3f4bd063
Entry block: 0xac
Exit block: 0x1d3
Body: 0xac, 0xb0, 0xc4, 0xcf, 0xf3, 0x1d3, 0x1e9, 0x1f7, 0x206, 0x20a, 0x219, 0x21d, 0x2d3, 0x2d8, 0x2e3, 0x2fc, 0x33e, 0x34a, 0x367, 0x38f, 0x3a9, 0x3ba, 0x3c6, 0x3db, 0x3e6, 0x499, 0x4ac, 0x4b1, 0x4c0

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0x106
Exit block: 0x1d3
Body: 0xb0, 0xc4, 0xcf, 0xf3, 0x106, 0x116, 0x12a, 0x131, 0x137, 0x13d, 0x1d3, 0x1d5, 0x1e9, 0x1f7, 0x206, 0x20a, 0x219, 0x21d, 0x2d3, 0x2d8, 0x2e3, 0x2fc, 0x33e, 0x34a, 0x367, 0x38f, 0x3a9, 0x3ba, 0x3c6, 0x3db, 0x3e6, 0x499, 0x4ac, 0x4b1, 0x4c0

Function 4:
Public function signature: 0x5f8d96de
Entry block: 0x144
Exit block: 0x1d7
Body: 0x144, 0x1d7

Function 5:
Public function signature: 0x740c0c44
Entry block: 0x14f
Exit block: 0x1d7
Body: 0x14f, 0x1d7

Function 6:
Public function signature: 0x79ff433d
Entry block: 0x15a
Exit block: 0x1d3
Body: 0x15a, 0x1d3

Function 7:
Public function signature: 0xaeb7d9cc
Entry block: 0x18e
Exit block: 0x1d3
Body: 0x18e, 0x1d3

Function 8:
Public function signature: 0xd2d6a872
Entry block: 0x1bb
Exit block: 0x1d3
Body: 0xb0, 0xc4, 0xcf, 0xf3, 0x1bb, 0x1cc, 0x1d3, 0x1e9, 0x1f7, 0x206, 0x20a, 0x219, 0x21d, 0x2d3, 0x2d8, 0x2e3, 0x2fc, 0x33e, 0x34a, 0x367, 0x38f, 0x3a9, 0x3ba, 0x3c6, 0x3db, 0x3e6, 0x499, 0x4ac, 0x4b1, 0x4c0

Function 9:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

