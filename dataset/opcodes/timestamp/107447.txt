args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/8/107447.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xde]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x354284f2
0x3c EQ
0x3d PUSH2 0xde
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x354284f2
0x3c: V13 = EQ 0x354284f2 V11
0x3d: V14 = 0xde
0x40: JUMPI 0xde V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xf5]
---
0x41 DUP1
0x42 PUSH4 0x4a3f17e7
0x47 EQ
0x48 PUSH2 0xf5
0x4b JUMPI
---
0x42: V15 = 0x4a3f17e7
0x47: V16 = EQ 0x4a3f17e7 V11
0x48: V17 = 0xf5
0x4b: JUMPI 0xf5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0xdd]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d CALLVALUE
0x4e PUSH1 0x0
0x50 DUP1
0x51 CALLER
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 AND
0x68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d AND
0x7e DUP2
0x7f MSTORE
0x80 PUSH1 0x20
0x82 ADD
0x83 SWAP1
0x84 DUP2
0x85 MSTORE
0x86 PUSH1 0x20
0x88 ADD
0x89 PUSH1 0x0
0x8b SHA3
0x8c PUSH1 0x0
0x8e DUP3
0x8f DUP3
0x90 SLOAD
0x91 ADD
0x92 SWAP3
0x93 POP
0x94 POP
0x95 DUP2
0x96 SWAP1
0x97 SSTORE
0x98 POP
0x99 CALLVALUE
0x9a CALLER
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 PUSH32 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 PUSH1 0x40
0xd7 MLOAD
0xd8 DUP1
0xd9 SWAP2
0xda SUB
0xdb SWAP1
0xdc LOG3
0xdd STOP
---
0x4c: JUMPDEST 
0x4d: V18 = CALLVALUE
0x4e: V19 = 0x0
0x51: V20 = CALLER
0x52: V21 = 0xffffffffffffffffffffffffffffffffffffffff
0x67: V22 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x68: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x7f: M[0x0] = V24
0x80: V25 = 0x20
0x82: V26 = ADD 0x20 0x0
0x85: M[0x20] = 0x0
0x86: V27 = 0x20
0x88: V28 = ADD 0x20 0x20
0x89: V29 = 0x0
0x8b: V30 = SHA3 0x0 0x40
0x8c: V31 = 0x0
0x90: V32 = S[V30]
0x91: V33 = ADD V32 V18
0x97: S[V30] = V33
0x99: V34 = CALLVALUE
0x9a: V35 = CALLER
0x9b: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0xb1: V38 = 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091
0xd2: V39 = 0x40
0xd4: V40 = M[0x40]
0xd5: V41 = 0x40
0xd7: V42 = M[0x40]
0xda: V43 = SUB V40 V42
0xdc: LOG V42 V43 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091 V37 V34
0xdd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0xd]
Successors: [0xe6, 0xea]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 DUP1
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xde: JUMPDEST 
0xdf: V44 = CALLVALUE
0xe1: V45 = ISZERO V44
0xe2: V46 = 0xea
0xe5: JUMPI 0xea V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xde]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V47 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xea
[0xea:0xf2]
---
Predecessors: [0xde]
Successors: [0x14c]
---
0xea JUMPDEST
0xeb POP
0xec PUSH2 0xf3
0xef PUSH2 0x14c
0xf2 JUMP
---
0xea: JUMPDEST 
0xec: V48 = 0xf3
0xef: V49 = 0x14c
0xf2: JUMP 0x14c
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: [0xf3]
Exit stack: [V11, 0xf3]

================================

Block 0xf3
[0xf3:0xf4]
---
Predecessors: [0x275]
Successors: []
---
0xf3 JUMPDEST
0xf4 STOP
---
0xf3: JUMPDEST 
0xf4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0x41]
Successors: [0xfd, 0x101]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 DUP1
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf5: JUMPDEST 
0xf6: V50 = CALLVALUE
0xf8: V51 = ISZERO V50
0xf9: V52 = 0x101
0xfc: JUMPI 0x101 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf5]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V53 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0x101
[0x101:0x135]
---
Predecessors: [0xf5]
Successors: [0x2bd]
---
0x101 JUMPDEST
0x102 POP
0x103 PUSH2 0x136
0x106 PUSH1 0x4
0x108 DUP1
0x109 CALLDATASIZE
0x10a SUB
0x10b DUP2
0x10c ADD
0x10d SWAP1
0x10e DUP1
0x10f DUP1
0x110 CALLDATALOAD
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 SWAP1
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP1
0x12c SWAP3
0x12d SWAP2
0x12e SWAP1
0x12f POP
0x130 POP
0x131 POP
0x132 PUSH2 0x2bd
0x135 JUMP
---
0x101: JUMPDEST 
0x103: V54 = 0x136
0x106: V55 = 0x4
0x109: V56 = CALLDATASIZE
0x10a: V57 = SUB V56 0x4
0x10c: V58 = ADD 0x4 V57
0x110: V59 = CALLDATALOAD 0x4
0x111: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x128: V62 = 0x20
0x12a: V63 = ADD 0x20 0x4
0x132: V64 = 0x2bd
0x135: JUMP 0x2bd
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0x136, V61]
Exit stack: [V11, 0x136, V61]

================================

Block 0x136
[0x136:0x14b]
---
Predecessors: [0x2bd]
Successors: []
---
0x136 JUMPDEST
0x137 PUSH1 0x40
0x139 MLOAD
0x13a DUP1
0x13b DUP3
0x13c DUP2
0x13d MSTORE
0x13e PUSH1 0x20
0x140 ADD
0x141 SWAP2
0x142 POP
0x143 POP
0x144 PUSH1 0x40
0x146 MLOAD
0x147 DUP1
0x148 SWAP2
0x149 SUB
0x14a SWAP1
0x14b RETURN
---
0x136: JUMPDEST 
0x137: V65 = 0x40
0x139: V66 = M[0x40]
0x13d: M[V66] = V159
0x13e: V67 = 0x20
0x140: V68 = ADD 0x20 V66
0x144: V69 = 0x40
0x146: V70 = M[0x40]
0x149: V71 = SUB V68 V70
0x14b: RETURN V70 V71
---
Entry stack: [V11, 0x136, V159]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x136]

================================

Block 0x14c
[0x14c:0x15b]
---
Predecessors: [0xea]
Successors: [0x15c, 0x19f]
---
0x14c JUMPDEST
0x14d PUSH1 0x0
0x14f PUSH4 0x5b1162b8
0x154 TIMESTAMP
0x155 GT
0x156 DUP1
0x157 ISZERO
0x158 PUSH2 0x19f
0x15b JUMPI
---
0x14c: JUMPDEST 
0x14d: V72 = 0x0
0x14f: V73 = 0x5b1162b8
0x154: V74 = TIMESTAMP
0x155: V75 = GT V74 0x5b1162b8
0x157: V76 = ISZERO V75
0x158: V77 = 0x19f
0x15b: JUMPI 0x19f V76
---
Entry stack: [V11, 0xf3]
Stack pops: 0
Stack additions: [0x0, V75]
Exit stack: [V11, 0xf3, 0x0, V75]

================================

Block 0x15c
[0x15c:0x19e]
---
Predecessors: [0x14c]
Successors: [0x19f]
---
0x15c POP
0x15d PUSH1 0x0
0x15f DUP1
0x160 PUSH1 0x0
0x162 CALLER
0x163 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x178 AND
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f DUP2
0x190 MSTORE
0x191 PUSH1 0x20
0x193 ADD
0x194 SWAP1
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a PUSH1 0x0
0x19c SHA3
0x19d SLOAD
0x19e GT
---
0x15d: V78 = 0x0
0x160: V79 = 0x0
0x162: V80 = CALLER
0x163: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x178: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x179: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x190: M[0x0] = V84
0x191: V85 = 0x20
0x193: V86 = ADD 0x20 0x0
0x196: M[0x20] = 0x0
0x197: V87 = 0x20
0x199: V88 = ADD 0x20 0x20
0x19a: V89 = 0x0
0x19c: V90 = SHA3 0x0 0x40
0x19d: V91 = S[V90]
0x19e: V92 = GT V91 0x0
---
Entry stack: [V11, 0xf3, 0x0, V75]
Stack pops: 1
Stack additions: [V92]
Exit stack: [V11, 0xf3, 0x0, V92]

================================

Block 0x19f
[0x19f:0x1a5]
---
Predecessors: [0x14c, 0x15c]
Successors: [0x1a6, 0x1aa]
---
0x19f JUMPDEST
0x1a0 ISZERO
0x1a1 ISZERO
0x1a2 PUSH2 0x1aa
0x1a5 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V93 = ISZERO S0
0x1a1: V94 = ISZERO V93
0x1a2: V95 = 0x1aa
0x1a5: JUMPI 0x1aa V94
---
Entry stack: [V11, 0xf3, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf3, 0x0]

================================

Block 0x1a6
[0x1a6:0x1a9]
---
Predecessors: [0x19f]
Successors: []
---
0x1a6 PUSH1 0x0
0x1a8 DUP1
0x1a9 REVERT
---
0x1a6: V96 = 0x0
0x1a9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, 0x0]

================================

Block 0x1aa
[0x1aa:0x26b]
---
Predecessors: [0x19f]
Successors: [0x26c, 0x275]
---
0x1aa JUMPDEST
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae CALLER
0x1af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c4 AND
0x1c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1da AND
0x1db DUP2
0x1dc MSTORE
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 PUSH1 0x0
0x1e8 SHA3
0x1e9 SLOAD
0x1ea SWAP1
0x1eb POP
0x1ec PUSH1 0x0
0x1ee DUP1
0x1ef PUSH1 0x0
0x1f1 CALLER
0x1f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x207 AND
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d AND
0x21e DUP2
0x21f MSTORE
0x220 PUSH1 0x20
0x222 ADD
0x223 SWAP1
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x20
0x228 ADD
0x229 PUSH1 0x0
0x22b SHA3
0x22c DUP2
0x22d SWAP1
0x22e SSTORE
0x22f POP
0x230 CALLER
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 PUSH2 0x8fc
0x24a DUP3
0x24b SWAP1
0x24c DUP2
0x24d ISZERO
0x24e MUL
0x24f SWAP1
0x250 PUSH1 0x40
0x252 MLOAD
0x253 PUSH1 0x0
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 DUP4
0x25a SUB
0x25b DUP2
0x25c DUP6
0x25d DUP9
0x25e DUP9
0x25f CALL
0x260 SWAP4
0x261 POP
0x262 POP
0x263 POP
0x264 POP
0x265 ISZERO
0x266 DUP1
0x267 ISZERO
0x268 PUSH2 0x275
0x26b JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V97 = 0x0
0x1ae: V98 = CALLER
0x1af: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c4: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1c5: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1dc: M[0x0] = V102
0x1dd: V103 = 0x20
0x1df: V104 = ADD 0x20 0x0
0x1e2: M[0x20] = 0x0
0x1e3: V105 = 0x20
0x1e5: V106 = ADD 0x20 0x20
0x1e6: V107 = 0x0
0x1e8: V108 = SHA3 0x0 0x40
0x1e9: V109 = S[V108]
0x1ec: V110 = 0x0
0x1ef: V111 = 0x0
0x1f1: V112 = CALLER
0x1f2: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x207: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x208: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x21f: M[0x0] = V116
0x220: V117 = 0x20
0x222: V118 = ADD 0x20 0x0
0x225: M[0x20] = 0x0
0x226: V119 = 0x20
0x228: V120 = ADD 0x20 0x20
0x229: V121 = 0x0
0x22b: V122 = SHA3 0x0 0x40
0x22e: S[V122] = 0x0
0x230: V123 = CALLER
0x231: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x247: V126 = 0x8fc
0x24d: V127 = ISZERO V109
0x24e: V128 = MUL V127 0x8fc
0x250: V129 = 0x40
0x252: V130 = M[0x40]
0x253: V131 = 0x0
0x255: V132 = 0x40
0x257: V133 = M[0x40]
0x25a: V134 = SUB V130 V133
0x25f: V135 = CALL V128 V125 V109 V133 V134 V133 0x0
0x265: V136 = ISZERO V135
0x267: V137 = ISZERO V136
0x268: V138 = 0x275
0x26b: JUMPI 0x275 V137
---
Entry stack: [V11, 0xf3, 0x0]
Stack pops: 1
Stack additions: [V109, V136]
Exit stack: [V11, 0xf3, V109, V136]

================================

Block 0x26c
[0x26c:0x274]
---
Predecessors: [0x1aa]
Successors: []
---
0x26c RETURNDATASIZE
0x26d PUSH1 0x0
0x26f DUP1
0x270 RETURNDATACOPY
0x271 RETURNDATASIZE
0x272 PUSH1 0x0
0x274 REVERT
---
0x26c: V139 = RETURNDATASIZE
0x26d: V140 = 0x0
0x270: RETURNDATACOPY 0x0 0x0 V139
0x271: V141 = RETURNDATASIZE
0x272: V142 = 0x0
0x274: REVERT 0x0 V141
---
Entry stack: [V11, 0xf3, V109, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V109, V136]

================================

Block 0x275
[0x275:0x2bc]
---
Predecessors: [0x1aa]
Successors: [0xf3]
---
0x275 JUMPDEST
0x276 POP
0x277 DUP1
0x278 CALLER
0x279 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28e AND
0x28f PUSH32 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 SWAP2
0x2b8 SUB
0x2b9 SWAP1
0x2ba LOG3
0x2bb POP
0x2bc JUMP
---
0x275: JUMPDEST 
0x278: V143 = CALLER
0x279: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x28f: V146 = 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7
0x2b0: V147 = 0x40
0x2b2: V148 = M[0x40]
0x2b3: V149 = 0x40
0x2b5: V150 = M[0x40]
0x2b8: V151 = SUB V148 V150
0x2ba: LOG V150 V151 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7 V145 V109
0x2bc: JUMP 0xf3
---
Entry stack: [V11, 0xf3, V109, V136]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bd
[0x2bd:0x2d4]
---
Predecessors: [0x101]
Successors: [0x136]
---
0x2bd JUMPDEST
0x2be PUSH1 0x0
0x2c0 PUSH1 0x20
0x2c2 MSTORE
0x2c3 DUP1
0x2c4 PUSH1 0x0
0x2c6 MSTORE
0x2c7 PUSH1 0x40
0x2c9 PUSH1 0x0
0x2cb SHA3
0x2cc PUSH1 0x0
0x2ce SWAP2
0x2cf POP
0x2d0 SWAP1
0x2d1 POP
0x2d2 SLOAD
0x2d3 DUP2
0x2d4 JUMP
---
0x2bd: JUMPDEST 
0x2be: V152 = 0x0
0x2c0: V153 = 0x20
0x2c2: M[0x20] = 0x0
0x2c4: V154 = 0x0
0x2c6: M[0x0] = V61
0x2c7: V155 = 0x40
0x2c9: V156 = 0x0
0x2cb: V157 = SHA3 0x0 0x40
0x2cc: V158 = 0x0
0x2d2: V159 = S[V157]
0x2d4: JUMP 0x136
---
Entry stack: [V11, 0x136, V61]
Stack pops: 2
Stack additions: [S1, V159]
Exit stack: [V11, 0x136, V159]

================================

Block 0x2d5
[0x2d5:0x300]
---
Predecessors: []
Successors: []
---
0x2d5 STOP
0x2d6 LOG1
0x2d7 PUSH6 0x627a7a723058
0x2de SHA3
0x2df ADD
0x2e0 SDIV
0x2e1 GASLIMIT
0x2e2 MISSING 0x4b
0x2e3 PUSH5 0xfb8aac20ce
0x2e9 MISSING 0xb1
0x2ea RETURN
0x2eb MISSING 0xf6
0x2ec PUSH3 0x433493
0x2f0 MISSING 0x2a
0x2f1 MISSING 0xc5
0x2f2 PUSH5 0x2e37cacc11
0x2f8 SWAP16
0x2f9 DUP1
0x2fa LOG0
0x2fb MISSING 0x5f
0x2fc GASLIMIT
0x2fd MISSING 0x4a
0x2fe DUP3
0x2ff STOP
0x300 MISSING 0x29
---
0x2d5: STOP 
0x2d6: LOG S0 S1 S2
0x2d7: V160 = 0x627a7a723058
0x2de: V161 = SHA3 0x627a7a723058 S3
0x2df: V162 = ADD V161 S4
0x2e0: V163 = SDIV V162 S5
0x2e1: V164 = GASLIMIT
0x2e2: MISSING 0x4b
0x2e3: V165 = 0xfb8aac20ce
0x2e9: MISSING 0xb1
0x2ea: RETURN S0 S1
0x2eb: MISSING 0xf6
0x2ec: V166 = 0x433493
0x2f0: MISSING 0x2a
0x2f1: MISSING 0xc5
0x2f2: V167 = 0x2e37cacc11
0x2fa: LOG S15 S15
0x2fb: MISSING 0x5f
0x2fc: V168 = GASLIMIT
0x2fd: MISSING 0x4a
0x2ff: STOP 
0x300: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V164, V163, 0xfb8aac20ce, 0x433493, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0x2e37cacc11, V168, S2, S0, S1, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0x354284f2
Entry block: 0xde
Exit block: 0xf3
Body: 0xde, 0xe6, 0xea, 0xf3, 0x14c, 0x15c, 0x19f, 0x1a6, 0x1aa, 0x26c, 0x275

Function 1:
Public function signature: 0x4a3f17e7
Entry block: 0xf5
Exit block: 0x136
Body: 0xf5, 0xfd, 0x101, 0x136, 0x2bd

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

