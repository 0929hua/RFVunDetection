args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/2/101227.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa0
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa0
0xa: JUMPI 0xa0 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3c]
---
Predecessors: [0x0]
Successors: [0x3d, 0x1ca]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH3 0xe5fc5f
0x37 DUP2
0x38 EQ
0x39 PUSH2 0x1ca
0x3c JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0xe5fc5f
0x38: V12 = EQ V10 0xe5fc5f
0x39: V13 = 0x1ca
0x3c: JUMPI 0x1ca V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0xb]
Successors: [0x48, 0x1f8]
---
0x3d DUP1
0x3e PUSH4 0x13af4035
0x43 EQ
0x44 PUSH2 0x1f8
0x47 JUMPI
---
0x3e: V14 = 0x13af4035
0x43: V15 = EQ 0x13af4035 V10
0x44: V16 = 0x1f8
0x47: JUMPI 0x1f8 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x216]
---
0x48 DUP1
0x49 PUSH4 0x8da5cb5b
0x4e EQ
0x4f PUSH2 0x216
0x52 JUMPI
---
0x49: V17 = 0x8da5cb5b
0x4e: V18 = EQ 0x8da5cb5b V10
0x4f: V19 = 0x216
0x52: JUMPI 0x216 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x242]
---
0x53 DUP1
0x54 PUSH4 0x8fe92aed
0x59 EQ
0x5a PUSH2 0x242
0x5d JUMPI
---
0x54: V20 = 0x8fe92aed
0x59: V21 = EQ 0x8fe92aed V10
0x5a: V22 = 0x242
0x5d: JUMPI 0x242 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x270]
---
0x5e DUP1
0x5f PUSH4 0x90fe5609
0x64 EQ
0x65 PUSH2 0x270
0x68 JUMPI
---
0x5f: V23 = 0x90fe5609
0x64: V24 = EQ 0x90fe5609 V10
0x65: V25 = 0x270
0x68: JUMPI 0x270 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x288]
---
0x69 DUP1
0x6a PUSH4 0xa201d102
0x6f EQ
0x70 PUSH2 0x288
0x73 JUMPI
---
0x6a: V26 = 0xa201d102
0x6f: V27 = EQ 0xa201d102 V10
0x70: V28 = 0x288
0x73: JUMPI 0x288 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x2aa]
---
0x74 DUP1
0x75 PUSH4 0xc19d93fb
0x7a EQ
0x7b PUSH2 0x2aa
0x7e JUMPI
---
0x75: V29 = 0xc19d93fb
0x7a: V30 = EQ 0xc19d93fb V10
0x7b: V31 = 0x2aa
0x7e: JUMPI 0x2aa V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x33a]
---
0x7f DUP1
0x80 PUSH4 0xc2a15e7e
0x85 EQ
0x86 PUSH2 0x33a
0x89 JUMPI
---
0x80: V32 = 0xc2a15e7e
0x85: V33 = EQ 0xc2a15e7e V10
0x86: V34 = 0x33a
0x89: JUMPI 0x33a V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x36a]
---
0x8a DUP1
0x8b PUSH4 0xc8dda301
0x90 EQ
0x91 PUSH2 0x36a
0x94 JUMPI
---
0x8b: V35 = 0xc8dda301
0x90: V36 = EQ 0xc8dda301 V10
0x91: V37 = 0x36a
0x94: JUMPI 0x36a V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x38c]
---
0x95 DUP1
0x96 PUSH4 0xffa1ad74
0x9b EQ
0x9c PUSH2 0x38c
0x9f JUMPI
---
0x96: V38 = 0xffa1ad74
0x9b: V39 = EQ 0xffa1ad74 V10
0x9c: V40 = 0x38c
0x9f: JUMPI 0x38c V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x0, 0x95]
Successors: [0xa4]
---
0xa0 JUMPDEST
0xa1 PUSH2 0x1c8
---
0xa0: JUMPDEST 
0xa1: V41 = 0x1c8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c8]
Exit stack: [V10, 0x1c8]

================================

Block 0xa4
[0xa4:0x110]
---
Predecessors: [0xa0]
Successors: [0x111, 0x112]
---
0xa4 JUMPDEST
0xa5 PUSH1 0x2
0xa7 SLOAD
0xa8 PUSH1 0x40
0xaa DUP1
0xab MLOAD
0xac PUSH1 0x0
0xae PUSH1 0x20
0xb0 SWAP2
0xb1 DUP3
0xb2 ADD
0xb3 DUP2
0xb4 SWAP1
0xb5 MSTORE
0xb6 DUP3
0xb7 MLOAD
0xb8 PUSH32 0x27e235e300000000000000000000000000000000000000000000000000000000
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x1
0xdd PUSH1 0xa0
0xdf PUSH1 0x2
0xe1 EXP
0xe2 SUB
0xe3 CALLER
0xe4 DUP2
0xe5 AND
0xe6 PUSH1 0x4
0xe8 DUP4
0xe9 ADD
0xea MSTORE
0xeb SWAP4
0xec MLOAD
0xed SWAP4
0xee SWAP1
0xef SWAP5
0xf0 AND
0xf1 SWAP4
0xf2 PUSH4 0x27e235e3
0xf7 SWAP4
0xf8 PUSH1 0x24
0xfa DUP1
0xfb DUP4
0xfc ADD
0xfd SWAP5
0xfe SWAP4
0xff SWAP2
0x100 SWAP3
0x101 DUP4
0x102 SWAP1
0x103 SUB
0x104 ADD
0x105 SWAP1
0x106 DUP3
0x107 SWAP1
0x108 DUP8
0x109 DUP1
0x10a EXTCODESIZE
0x10b ISZERO
0x10c ISZERO
0x10d PUSH2 0x112
0x110 JUMPI
---
0xa4: JUMPDEST 
0xa5: V42 = 0x2
0xa7: V43 = S[0x2]
0xa8: V44 = 0x40
0xab: V45 = M[0x40]
0xac: V46 = 0x0
0xae: V47 = 0x20
0xb2: V48 = ADD 0x20 V45
0xb5: M[V48] = 0x0
0xb7: V49 = M[0x40]
0xb8: V50 = 0x27e235e300000000000000000000000000000000000000000000000000000000
0xda: M[V49] = 0x27e235e300000000000000000000000000000000000000000000000000000000
0xdb: V51 = 0x1
0xdd: V52 = 0xa0
0xdf: V53 = 0x2
0xe1: V54 = EXP 0x2 0xa0
0xe2: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V56 = CALLER
0xe5: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xe6: V58 = 0x4
0xe9: V59 = ADD V49 0x4
0xea: M[V59] = V57
0xec: V60 = M[0x40]
0xf0: V61 = AND V43 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V62 = 0x27e235e3
0xf8: V63 = 0x24
0xfc: V64 = ADD V49 0x24
0x103: V65 = SUB V49 V60
0x104: V66 = ADD V65 0x24
0x10a: V67 = EXTCODESIZE V61
0x10b: V68 = ISZERO V67
0x10c: V69 = ISZERO V68
0x10d: V70 = 0x112
0x110: JUMPI 0x112 V69
---
Entry stack: [V10, 0x1c8]
Stack pops: 0
Stack additions: [V61, 0x27e235e3, V64, 0x20, V60, V66, V60, 0x0, V61]
Exit stack: [V10, 0x1c8, V61, 0x27e235e3, V64, 0x20, V60, V66, V60, 0x0, V61]

================================

Block 0x111
[0x111:0x111]
---
Predecessors: [0xa4]
Successors: []
---
0x111 INVALID
---
0x111: INVALID 
---
Entry stack: [V10, 0x1c8, V61, 0x27e235e3, V64, 0x20, V60, V66, V60, 0x0, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c8, V61, 0x27e235e3, V64, 0x20, V60, V66, V60, 0x0, V61]

================================

Block 0x112
[0x112:0x11e]
---
Predecessors: [0xa4]
Successors: [0x11f, 0x120]
---
0x112 JUMPDEST
0x113 PUSH2 0x2c6
0x116 GAS
0x117 SUB
0x118 CALL
0x119 ISZERO
0x11a ISZERO
0x11b PUSH2 0x120
0x11e JUMPI
---
0x112: JUMPDEST 
0x113: V71 = 0x2c6
0x116: V72 = GAS
0x117: V73 = SUB V72 0x2c6
0x118: V74 = CALL V73 V61 0x0 V60 V66 V60 0x20
0x119: V75 = ISZERO V74
0x11a: V76 = ISZERO V75
0x11b: V77 = 0x120
0x11e: JUMPI 0x120 V76
---
Entry stack: [V10, 0x1c8, V61, 0x27e235e3, V64, 0x20, V60, V66, V60, 0x0, V61]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1c8, V61, 0x27e235e3, V64]

================================

Block 0x11f
[0x11f:0x11f]
---
Predecessors: [0x112]
Successors: []
---
0x11f INVALID
---
0x11f: INVALID 
---
Entry stack: [V10, 0x1c8, V61, 0x27e235e3, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c8, V61, 0x27e235e3, V64]

================================

Block 0x120
[0x120:0x12e]
---
Predecessors: [0x112]
Successors: [0x12f, 0x134]
---
0x120 JUMPDEST
0x121 POP
0x122 POP
0x123 PUSH1 0x40
0x125 MLOAD
0x126 MLOAD
0x127 ISZERO
0x128 ISZERO
0x129 SWAP1
0x12a POP
0x12b PUSH2 0x134
0x12e JUMPI
---
0x120: JUMPDEST 
0x123: V78 = 0x40
0x125: V79 = M[0x40]
0x126: V80 = M[V79]
0x127: V81 = ISZERO V80
0x128: V82 = ISZERO V81
0x12b: V83 = 0x134
0x12e: JUMPI 0x134 V82
---
Entry stack: [V10, 0x1c8, V61, 0x27e235e3, V64]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x1c8]

================================

Block 0x12f
[0x12f:0x133]
---
Predecessors: [0x120]
Successors: []
---
0x12f PUSH1 0x0
0x131 PUSH1 0x0
0x133 REVERT
---
0x12f: V84 = 0x0
0x131: V85 = 0x0
0x133: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c8]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x120]
Successors: [0x138]
---
0x134 JUMPDEST
0x135 PUSH1 0x1
0x137 DUP1
---
0x134: JUMPDEST 
0x135: V86 = 0x1
---
Entry stack: [V10, 0x1c8]
Stack pops: 0
Stack additions: [0x1, 0x1]
Exit stack: [V10, 0x1c8, 0x1, 0x1]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x134]
Successors: [0x41c]
---
0x138 JUMPDEST
0x139 PUSH2 0x140
0x13c PUSH2 0x41c
0x13f JUMP
---
0x138: JUMPDEST 
0x139: V87 = 0x140
0x13c: V88 = 0x41c
0x13f: JUMP 0x41c
---
Entry stack: [V10, 0x1c8, 0x1, 0x1]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V10, 0x1c8, 0x1, 0x1, 0x140]

================================

Block 0x140
[0x140:0x149]
---
Predecessors: [0x451]
Successors: [0x14a, 0x14b]
---
0x140 JUMPDEST
0x141 PUSH1 0x2
0x143 DUP2
0x144 GT
0x145 ISZERO
0x146 PUSH2 0x14b
0x149 JUMPI
---
0x140: JUMPDEST 
0x141: V89 = 0x2
0x144: V90 = GT {0x0, 0x1, 0x2} 0x2
0x145: V91 = ISZERO V90
0x146: V92 = 0x14b
0x149: JUMPI 0x14b V91
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x14a
[0x14a:0x14a]
---
Predecessors: [0x140]
Successors: []
---
0x14a INVALID
---
0x14a: INVALID 
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x14b
[0x14b:0x150]
---
Predecessors: [0x140]
Successors: [0x151, 0x156]
---
0x14b JUMPDEST
0x14c EQ
0x14d PUSH2 0x156
0x150 JUMPI
---
0x14b: JUMPDEST 
0x14c: V93 = EQ {0x0, 0x1, 0x2} {0x1, 0x3}
0x14d: V94 = 0x156
0x150: JUMPI 0x156 V93
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S2]

================================

Block 0x151
[0x151:0x155]
---
Predecessors: [0x14b]
Successors: []
---
0x151 PUSH1 0x0
0x153 PUSH1 0x0
0x155 REVERT
---
0x151: V95 = 0x0
0x153: V96 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V10, {0x1c8, 0x2ba}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S0]

================================

Block 0x156
[0x156:0x166]
---
Predecessors: [0x14b]
Successors: [0x167, 0x18d]
---
0x156 JUMPDEST
0x157 PUSH8 0xde0b6b3a7640000
0x160 CALLVALUE
0x161 GT
0x162 DUP1
0x163 PUSH2 0x18d
0x166 JUMPI
---
0x156: JUMPDEST 
0x157: V97 = 0xde0b6b3a7640000
0x160: V98 = CALLVALUE
0x161: V99 = GT V98 0xde0b6b3a7640000
0x163: V100 = 0x18d
0x166: JUMPI 0x18d V99
---
Entry stack: [V10, {0x1c8, 0x2ba}, S0]
Stack pops: 0
Stack additions: [V99]
Exit stack: [V10, {0x1c8, 0x2ba}, S0, V99]

================================

Block 0x167
[0x167:0x18c]
---
Predecessors: [0x156]
Successors: [0x18d]
---
0x167 POP
0x168 PUSH1 0x40
0x16a MLOAD
0x16b PUSH1 0x1
0x16d PUSH1 0xa0
0x16f PUSH1 0x2
0x171 EXP
0x172 SUB
0x173 CALLER
0x174 AND
0x175 SWAP1
0x176 CALLVALUE
0x177 DUP1
0x178 ISZERO
0x179 PUSH2 0x8fc
0x17c MUL
0x17d SWAP2
0x17e PUSH1 0x0
0x180 DUP2
0x181 DUP2
0x182 DUP2
0x183 DUP6
0x184 DUP9
0x185 DUP9
0x186 CALL
0x187 SWAP4
0x188 POP
0x189 POP
0x18a POP
0x18b POP
0x18c ISZERO
---
0x168: V101 = 0x40
0x16a: V102 = M[0x40]
0x16b: V103 = 0x1
0x16d: V104 = 0xa0
0x16f: V105 = 0x2
0x171: V106 = EXP 0x2 0xa0
0x172: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V108 = CALLER
0x174: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x176: V110 = CALLVALUE
0x178: V111 = ISZERO V110
0x179: V112 = 0x8fc
0x17c: V113 = MUL 0x8fc V111
0x17e: V114 = 0x0
0x186: V115 = CALL V113 V109 V110 V102 0x0 V102 0x0
0x18c: V116 = ISZERO V115
---
Entry stack: [V10, {0x1c8, 0x2ba}, S1, V99]
Stack pops: 1
Stack additions: [V116]
Exit stack: [V10, {0x1c8, 0x2ba}, S1, V116]

================================

Block 0x18d
[0x18d:0x192]
---
Predecessors: [0x156, 0x167]
Successors: [0x193, 0x198]
---
0x18d JUMPDEST
0x18e ISZERO
0x18f PUSH2 0x198
0x192 JUMPI
---
0x18d: JUMPDEST 
0x18e: V117 = ISZERO S0
0x18f: V118 = 0x198
0x192: JUMPI 0x198 V117
---
Entry stack: [V10, {0x1c8, 0x2ba}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S1]

================================

Block 0x193
[0x193:0x197]
---
Predecessors: [0x18d]
Successors: []
---
0x193 PUSH1 0x0
0x195 PUSH1 0x0
0x197 REVERT
---
0x193: V119 = 0x0
0x195: V120 = 0x0
0x197: REVERT 0x0 0x0
---
Entry stack: [V10, {0x1c8, 0x2ba}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S0]

================================

Block 0x198
[0x198:0x1a0]
---
Predecessors: [0x18d]
Successors: [0x1a1, 0x1a7]
---
0x198 JUMPDEST
0x199 PUSH1 0x0
0x19b CALLVALUE
0x19c GT
0x19d PUSH2 0x1a7
0x1a0 JUMPI
---
0x198: JUMPDEST 
0x199: V121 = 0x0
0x19b: V122 = CALLVALUE
0x19c: V123 = GT V122 0x0
0x19d: V124 = 0x1a7
0x1a0: JUMPI 0x1a7 V123
---
Entry stack: [V10, {0x1c8, 0x2ba}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S0]

================================

Block 0x1a1
[0x1a1:0x1a6]
---
Predecessors: [0x198]
Successors: [0x1a9]
---
0x1a1 PUSH1 0x1
0x1a3 PUSH2 0x1a9
0x1a6 JUMP
---
0x1a1: V125 = 0x1
0x1a3: V126 = 0x1a9
0x1a6: JUMP 0x1a9
---
Entry stack: [V10, {0x1c8, 0x2ba}, S0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, {0x1c8, 0x2ba}, S0, 0x1]

================================

Block 0x1a7
[0x1a7:0x1a8]
---
Predecessors: [0x198]
Successors: [0x1a9]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
---
0x1a7: JUMPDEST 
0x1a8: V127 = CALLVALUE
---
Entry stack: [V10, {0x1c8, 0x2ba}, S0]
Stack pops: 0
Stack additions: [V127]
Exit stack: [V10, {0x1c8, 0x2ba}, S0, V127]

================================

Block 0x1a9
[0x1a9:0x1c2]
---
Predecessors: [0x1a1, 0x1a7]
Successors: [0x1c3]
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x1
0x1ac PUSH1 0xa0
0x1ae PUSH1 0x2
0x1b0 EXP
0x1b1 SUB
0x1b2 CALLER
0x1b3 AND
0x1b4 PUSH1 0x0
0x1b6 SWAP1
0x1b7 DUP2
0x1b8 MSTORE
0x1b9 PUSH1 0x6
0x1bb PUSH1 0x20
0x1bd MSTORE
0x1be PUSH1 0x40
0x1c0 SWAP1
0x1c1 SHA3
0x1c2 SSTORE
---
0x1a9: JUMPDEST 
0x1aa: V128 = 0x1
0x1ac: V129 = 0xa0
0x1ae: V130 = 0x2
0x1b0: V131 = EXP 0x2 0xa0
0x1b1: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b2: V133 = CALLER
0x1b3: V134 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V135 = 0x0
0x1b8: M[0x0] = V134
0x1b9: V136 = 0x6
0x1bb: V137 = 0x20
0x1bd: M[0x20] = 0x6
0x1be: V138 = 0x40
0x1c1: V139 = SHA3 0x0 0x40
0x1c2: S[V139] = S0
---
Entry stack: [V10, {0x1c8, 0x2ba}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S1]

================================

Block 0x1c3
[0x1c3:0x1c3]
---
Predecessors: [0x1a9]
Successors: [0x1c4]
---
0x1c3 JUMPDEST
---
0x1c3: JUMPDEST 
---
Entry stack: [V10, {0x1c8, 0x2ba}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S0]

================================

Block 0x1c4
[0x1c4:0x1c5]
---
Predecessors: [0x1c3]
Successors: [0x1c6]
---
0x1c4 JUMPDEST
0x1c5 POP
---
0x1c4: JUMPDEST 
---
Entry stack: [V10, {0x1c8, 0x2ba}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}]

================================

Block 0x1c6
[0x1c6:0x1c7]
---
Predecessors: [0x1c4]
Successors: [0x1c8, 0x2ba]
---
0x1c6 JUMPDEST
0x1c7 JUMP
---
0x1c6: JUMPDEST 
0x1c7: JUMP {0x1c8, 0x2ba}
---
Entry stack: [V10, {0x1c8, 0x2ba}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c8
[0x1c8:0x1c9]
---
Predecessors: [0x1c6, 0x4ac, 0x563, 0x625]
Successors: []
---
0x1c8 JUMPDEST
0x1c9 STOP
---
0x1c8: JUMPDEST 
0x1c9: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x1ca
[0x1ca:0x1d0]
---
Predecessors: [0xb]
Successors: [0x1d1, 0x1d2]
---
0x1ca JUMPDEST
0x1cb CALLVALUE
0x1cc ISZERO
0x1cd PUSH2 0x1d2
0x1d0 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V140 = CALLVALUE
0x1cc: V141 = ISZERO V140
0x1cd: V142 = 0x1d2
0x1d0: JUMPI 0x1d2 V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d1
[0x1d1:0x1d1]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d1 INVALID
---
0x1d1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d2
[0x1d2:0x1e5]
---
Predecessors: [0x1ca]
Successors: [0x454]
---
0x1d2 JUMPDEST
0x1d3 PUSH2 0x1e6
0x1d6 PUSH1 0x1
0x1d8 PUSH1 0xa0
0x1da PUSH1 0x2
0x1dc EXP
0x1dd SUB
0x1de PUSH1 0x4
0x1e0 CALLDATALOAD
0x1e1 AND
0x1e2 PUSH2 0x454
0x1e5 JUMP
---
0x1d2: JUMPDEST 
0x1d3: V143 = 0x1e6
0x1d6: V144 = 0x1
0x1d8: V145 = 0xa0
0x1da: V146 = 0x2
0x1dc: V147 = EXP 0x2 0xa0
0x1dd: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1de: V149 = 0x4
0x1e0: V150 = CALLDATALOAD 0x4
0x1e1: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V152 = 0x454
0x1e5: JUMP 0x454
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e6, V151]
Exit stack: [V10, 0x1e6, V151]

================================

Block 0x1e6
[0x1e6:0x1f7]
---
Predecessors: [0x454, 0x51b, 0x567, 0x664]
Successors: []
---
0x1e6 JUMPDEST
0x1e7 PUSH1 0x40
0x1e9 DUP1
0x1ea MLOAD
0x1eb SWAP2
0x1ec DUP3
0x1ed MSTORE
0x1ee MLOAD
0x1ef SWAP1
0x1f0 DUP2
0x1f1 SWAP1
0x1f2 SUB
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 SWAP1
0x1f7 RETURN
---
0x1e6: JUMPDEST 
0x1e7: V153 = 0x40
0x1ea: V154 = M[0x40]
0x1ed: M[V154] = S0
0x1ee: V155 = M[0x40]
0x1f2: V156 = SUB V154 V155
0x1f3: V157 = 0x20
0x1f5: V158 = ADD 0x20 V156
0x1f7: RETURN V155 V158
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x1f8
[0x1f8:0x1fe]
---
Predecessors: [0x3d]
Successors: [0x1ff, 0x200]
---
0x1f8 JUMPDEST
0x1f9 CALLVALUE
0x1fa ISZERO
0x1fb PUSH2 0x200
0x1fe JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V159 = CALLVALUE
0x1fa: V160 = ISZERO V159
0x1fb: V161 = 0x200
0x1fe: JUMPI 0x200 V160
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ff
[0x1ff:0x1ff]
---
Predecessors: [0x1f8]
Successors: []
---
0x1ff INVALID
---
0x1ff: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x200
[0x200:0x213]
---
Predecessors: [0x1f8]
Successors: [0x466]
---
0x200 JUMPDEST
0x201 PUSH2 0x1c8
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c PUSH1 0x4
0x20e CALLDATALOAD
0x20f AND
0x210 PUSH2 0x466
0x213 JUMP
---
0x200: JUMPDEST 
0x201: V162 = 0x1c8
0x204: V163 = 0x1
0x206: V164 = 0xa0
0x208: V165 = 0x2
0x20a: V166 = EXP 0x2 0xa0
0x20b: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20c: V168 = 0x4
0x20e: V169 = CALLDATALOAD 0x4
0x20f: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x210: V171 = 0x466
0x213: JUMP 0x466
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c8, V170]
Exit stack: [V10, 0x1c8, V170]

================================

Block 0x214
[0x214:0x215]
---
Predecessors: []
Successors: []
---
0x214 JUMPDEST
0x215 STOP
---
0x214: JUMPDEST 
0x215: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x216
[0x216:0x21c]
---
Predecessors: [0x48]
Successors: [0x21d, 0x21e]
---
0x216 JUMPDEST
0x217 CALLVALUE
0x218 ISZERO
0x219 PUSH2 0x21e
0x21c JUMPI
---
0x216: JUMPDEST 
0x217: V172 = CALLVALUE
0x218: V173 = ISZERO V172
0x219: V174 = 0x21e
0x21c: JUMPI 0x21e V173
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21d
[0x21d:0x21d]
---
Predecessors: [0x216]
Successors: []
---
0x21d INVALID
---
0x21d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x216]
Successors: [0x4af]
---
0x21e JUMPDEST
0x21f PUSH2 0x226
0x222 PUSH2 0x4af
0x225 JUMP
---
0x21e: JUMPDEST 
0x21f: V175 = 0x226
0x222: V176 = 0x4af
0x225: JUMP 0x4af
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V10, 0x226]

================================

Block 0x226
[0x226:0x241]
---
Predecessors: [0x4af]
Successors: []
---
0x226 JUMPDEST
0x227 PUSH1 0x40
0x229 DUP1
0x22a MLOAD
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 SWAP1
0x234 SWAP3
0x235 AND
0x236 DUP3
0x237 MSTORE
0x238 MLOAD
0x239 SWAP1
0x23a DUP2
0x23b SWAP1
0x23c SUB
0x23d PUSH1 0x20
0x23f ADD
0x240 SWAP1
0x241 RETURN
---
0x226: JUMPDEST 
0x227: V177 = 0x40
0x22a: V178 = M[0x40]
0x22b: V179 = 0x1
0x22d: V180 = 0xa0
0x22f: V181 = 0x2
0x231: V182 = EXP 0x2 0xa0
0x232: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V184 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x237: M[V178] = V184
0x238: V185 = M[0x40]
0x23c: V186 = SUB V178 V185
0x23d: V187 = 0x20
0x23f: V188 = ADD 0x20 V186
0x241: RETURN V185 V188
---
Entry stack: [V10, 0x226, V407]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x226]

================================

Block 0x242
[0x242:0x248]
---
Predecessors: [0x53]
Successors: [0x249, 0x24a]
---
0x242 JUMPDEST
0x243 CALLVALUE
0x244 ISZERO
0x245 PUSH2 0x24a
0x248 JUMPI
---
0x242: JUMPDEST 
0x243: V189 = CALLVALUE
0x244: V190 = ISZERO V189
0x245: V191 = 0x24a
0x248: JUMPI 0x24a V190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x249
[0x249:0x249]
---
Predecessors: [0x242]
Successors: []
---
0x249 INVALID
---
0x249: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24a
[0x24a:0x25d]
---
Predecessors: [0x242]
Successors: [0x4be]
---
0x24a JUMPDEST
0x24b PUSH2 0x1e6
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 PUSH1 0x4
0x258 CALLDATALOAD
0x259 AND
0x25a PUSH2 0x4be
0x25d JUMP
---
0x24a: JUMPDEST 
0x24b: V192 = 0x1e6
0x24e: V193 = 0x1
0x250: V194 = 0xa0
0x252: V195 = 0x2
0x254: V196 = EXP 0x2 0xa0
0x255: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V198 = 0x4
0x258: V199 = CALLDATALOAD 0x4
0x259: V200 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V201 = 0x4be
0x25d: JUMP 0x4be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e6, V200]
Exit stack: [V10, 0x1e6, V200]

================================

Block 0x25e
[0x25e:0x26f]
---
Predecessors: []
Successors: []
---
0x25e JUMPDEST
0x25f PUSH1 0x40
0x261 DUP1
0x262 MLOAD
0x263 SWAP2
0x264 DUP3
0x265 MSTORE
0x266 MLOAD
0x267 SWAP1
0x268 DUP2
0x269 SWAP1
0x26a SUB
0x26b PUSH1 0x20
0x26d ADD
0x26e SWAP1
0x26f RETURN
---
0x25e: JUMPDEST 
0x25f: V202 = 0x40
0x262: V203 = M[0x40]
0x265: M[V203] = S0
0x266: V204 = M[0x40]
0x26a: V205 = SUB V203 V204
0x26b: V206 = 0x20
0x26d: V207 = ADD 0x20 V205
0x26f: RETURN V204 V207
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x270
[0x270:0x276]
---
Predecessors: [0x5e]
Successors: [0x277, 0x278]
---
0x270 JUMPDEST
0x271 CALLVALUE
0x272 ISZERO
0x273 PUSH2 0x278
0x276 JUMPI
---
0x270: JUMPDEST 
0x271: V208 = CALLVALUE
0x272: V209 = ISZERO V208
0x273: V210 = 0x278
0x276: JUMPI 0x278 V209
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x277
[0x277:0x277]
---
Predecessors: [0x270]
Successors: []
---
0x277 INVALID
---
0x277: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x278
[0x278:0x285]
---
Predecessors: [0x270]
Successors: [0x521]
---
0x278 JUMPDEST
0x279 PUSH2 0x1c8
0x27c PUSH1 0x4
0x27e CALLDATALOAD
0x27f PUSH1 0x24
0x281 CALLDATALOAD
0x282 PUSH2 0x521
0x285 JUMP
---
0x278: JUMPDEST 
0x279: V211 = 0x1c8
0x27c: V212 = 0x4
0x27e: V213 = CALLDATALOAD 0x4
0x27f: V214 = 0x24
0x281: V215 = CALLDATALOAD 0x24
0x282: V216 = 0x521
0x285: JUMP 0x521
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c8, V213, V215]
Exit stack: [V10, 0x1c8, V213, V215]

================================

Block 0x286
[0x286:0x287]
---
Predecessors: []
Successors: []
---
0x286 JUMPDEST
0x287 STOP
---
0x286: JUMPDEST 
0x287: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x288
[0x288:0x28e]
---
Predecessors: [0x69]
Successors: [0x28f, 0x290]
---
0x288 JUMPDEST
0x289 CALLVALUE
0x28a ISZERO
0x28b PUSH2 0x290
0x28e JUMPI
---
0x288: JUMPDEST 
0x289: V217 = CALLVALUE
0x28a: V218 = ISZERO V217
0x28b: V219 = 0x290
0x28e: JUMPI 0x290 V218
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28f
[0x28f:0x28f]
---
Predecessors: [0x288]
Successors: []
---
0x28f INVALID
---
0x28f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x290
[0x290:0x297]
---
Predecessors: [0x288]
Successors: [0x567]
---
0x290 JUMPDEST
0x291 PUSH2 0x1e6
0x294 PUSH2 0x567
0x297 JUMP
---
0x290: JUMPDEST 
0x291: V220 = 0x1e6
0x294: V221 = 0x567
0x297: JUMP 0x567
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e6]
Exit stack: [V10, 0x1e6]

================================

Block 0x298
[0x298:0x2a9]
---
Predecessors: []
Successors: []
---
0x298 JUMPDEST
0x299 PUSH1 0x40
0x29b DUP1
0x29c MLOAD
0x29d SWAP2
0x29e DUP3
0x29f MSTORE
0x2a0 MLOAD
0x2a1 SWAP1
0x2a2 DUP2
0x2a3 SWAP1
0x2a4 SUB
0x2a5 PUSH1 0x20
0x2a7 ADD
0x2a8 SWAP1
0x2a9 RETURN
---
0x298: JUMPDEST 
0x299: V222 = 0x40
0x29c: V223 = M[0x40]
0x29f: M[V223] = S0
0x2a0: V224 = M[0x40]
0x2a4: V225 = SUB V223 V224
0x2a5: V226 = 0x20
0x2a7: V227 = ADD 0x20 V225
0x2a9: RETURN V224 V227
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2aa
[0x2aa:0x2b0]
---
Predecessors: [0x74]
Successors: [0x2b1, 0x2b2]
---
0x2aa JUMPDEST
0x2ab CALLVALUE
0x2ac ISZERO
0x2ad PUSH2 0x2b2
0x2b0 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V228 = CALLVALUE
0x2ac: V229 = ISZERO V228
0x2ad: V230 = 0x2b2
0x2b0: JUMPI 0x2b2 V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b1
[0x2b1:0x2b1]
---
Predecessors: [0x2aa]
Successors: []
---
0x2b1 INVALID
---
0x2b1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b2
[0x2b2:0x2b9]
---
Predecessors: [0x2aa]
Successors: [0x56d]
---
0x2b2 JUMPDEST
0x2b3 PUSH2 0x2ba
0x2b6 PUSH2 0x56d
0x2b9 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V231 = 0x2ba
0x2b6: V232 = 0x56d
0x2b9: JUMP 0x56d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2ba]
Exit stack: [V10, 0x2ba]

================================

Block 0x2ba
[0x2ba:0x2df]
---
Predecessors: [0x1c6, 0x625, 0x66a]
Successors: [0x2e0, 0x300]
---
0x2ba JUMPDEST
0x2bb PUSH1 0x40
0x2bd DUP1
0x2be MLOAD
0x2bf PUSH1 0x20
0x2c1 DUP1
0x2c2 DUP3
0x2c3 MSTORE
0x2c4 DUP4
0x2c5 MLOAD
0x2c6 DUP2
0x2c7 DUP4
0x2c8 ADD
0x2c9 MSTORE
0x2ca DUP4
0x2cb MLOAD
0x2cc SWAP2
0x2cd SWAP3
0x2ce DUP4
0x2cf SWAP3
0x2d0 SWAP1
0x2d1 DUP4
0x2d2 ADD
0x2d3 SWAP2
0x2d4 DUP6
0x2d5 ADD
0x2d6 SWAP1
0x2d7 DUP1
0x2d8 DUP4
0x2d9 DUP4
0x2da DUP3
0x2db ISZERO
0x2dc PUSH2 0x300
0x2df JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V233 = 0x40
0x2be: V234 = M[0x40]
0x2bf: V235 = 0x20
0x2c3: M[V234] = 0x20
0x2c5: V236 = M[S0]
0x2c8: V237 = ADD V234 0x20
0x2c9: M[V237] = V236
0x2cb: V238 = M[S0]
0x2d2: V239 = ADD V234 0x40
0x2d5: V240 = ADD S0 0x20
0x2db: V241 = ISZERO V238
0x2dc: V242 = 0x300
0x2df: JUMPI 0x300 V241
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: [S0, V234, V234, V239, V240, V238, V238, V239, V240]
Exit stack: [V10, S1, S0, V234, V234, V239, V240, V238, V238, V239, V240]

================================

Block 0x2e0
[0x2e0:0x2ed]
---
Predecessors: [0x2ba, 0x2ee, 0x3d0]
Successors: [0x2ee, 0x300]
---
0x2e0 JUMPDEST
0x2e1 DUP1
0x2e2 MLOAD
0x2e3 DUP3
0x2e4 MSTORE
0x2e5 PUSH1 0x20
0x2e7 DUP4
0x2e8 GT
0x2e9 ISZERO
0x2ea PUSH2 0x300
0x2ed JUMPI
---
0x2e0: JUMPDEST 
0x2e2: V243 = M[S0]
0x2e4: M[S1] = V243
0x2e5: V244 = 0x20
0x2e8: V245 = GT S2 0x20
0x2e9: V246 = ISZERO V245
0x2ea: V247 = 0x300
0x2ed: JUMPI 0x300 V246
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x2ee
[0x2ee:0x2ff]
---
Predecessors: [0x2e0]
Successors: [0x2e0]
---
0x2ee PUSH1 0x1f
0x2f0 NOT
0x2f1 SWAP1
0x2f2 SWAP3
0x2f3 ADD
0x2f4 SWAP2
0x2f5 PUSH1 0x20
0x2f7 SWAP2
0x2f8 DUP3
0x2f9 ADD
0x2fa SWAP2
0x2fb ADD
0x2fc PUSH2 0x2e0
0x2ff JUMP
---
0x2ee: V248 = 0x1f
0x2f0: V249 = NOT 0x1f
0x2f3: V250 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2f5: V251 = 0x20
0x2f9: V252 = ADD 0x20 S1
0x2fb: V253 = ADD 0x20 S0
0x2fc: V254 = 0x2e0
0x2ff: JUMP 0x2e0
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V250, V252, V253]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, V250, V252, V253]

================================

Block 0x300
[0x300:0x312]
---
Predecessors: [0x2ba, 0x2e0, 0x39c, 0x3c2]
Successors: [0x313, 0x32c]
---
0x300 JUMPDEST
0x301 POP
0x302 POP
0x303 POP
0x304 SWAP1
0x305 POP
0x306 SWAP1
0x307 DUP2
0x308 ADD
0x309 SWAP1
0x30a PUSH1 0x1f
0x30c AND
0x30d DUP1
0x30e ISZERO
0x30f PUSH2 0x32c
0x312 JUMPI
---
0x300: JUMPDEST 
0x308: V255 = ADD S3 S5
0x30a: V256 = 0x1f
0x30c: V257 = AND 0x1f S3
0x30e: V258 = ISZERO V257
0x30f: V259 = 0x32c
0x312: JUMPI 0x32c V258
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V255, V257]
Exit stack: [V10, S9, S8, S7, S6, V255, V257]

================================

Block 0x313
[0x313:0x32b]
---
Predecessors: [0x300]
Successors: [0x32c]
---
0x313 DUP1
0x314 DUP3
0x315 SUB
0x316 DUP1
0x317 MLOAD
0x318 PUSH1 0x1
0x31a DUP4
0x31b PUSH1 0x20
0x31d SUB
0x31e PUSH2 0x100
0x321 EXP
0x322 SUB
0x323 NOT
0x324 AND
0x325 DUP2
0x326 MSTORE
0x327 PUSH1 0x20
0x329 ADD
0x32a SWAP2
0x32b POP
---
0x315: V260 = SUB V255 V257
0x317: V261 = M[V260]
0x318: V262 = 0x1
0x31b: V263 = 0x20
0x31d: V264 = SUB 0x20 V257
0x31e: V265 = 0x100
0x321: V266 = EXP 0x100 V264
0x322: V267 = SUB V266 0x1
0x323: V268 = NOT V267
0x324: V269 = AND V268 V261
0x326: M[V260] = V269
0x327: V270 = 0x20
0x329: V271 = ADD 0x20 V260
---
Entry stack: [V10, S5, S4, S3, S2, V255, V257]
Stack pops: 2
Stack additions: [V271, S0]
Exit stack: [V10, S5, S4, S3, S2, V271, V257]

================================

Block 0x32c
[0x32c:0x339]
---
Predecessors: [0x300, 0x313, 0x3e2]
Successors: []
---
0x32c JUMPDEST
0x32d POP
0x32e SWAP3
0x32f POP
0x330 POP
0x331 POP
0x332 PUSH1 0x40
0x334 MLOAD
0x335 DUP1
0x336 SWAP2
0x337 SUB
0x338 SWAP1
0x339 RETURN
---
0x32c: JUMPDEST 
0x332: V272 = 0x40
0x334: V273 = M[0x40]
0x337: V274 = SUB S1 V273
0x339: RETURN V273 V274
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S5]

================================

Block 0x33a
[0x33a:0x340]
---
Predecessors: [0x7f]
Successors: [0x341, 0x342]
---
0x33a JUMPDEST
0x33b CALLVALUE
0x33c ISZERO
0x33d PUSH2 0x342
0x340 JUMPI
---
0x33a: JUMPDEST 
0x33b: V275 = CALLVALUE
0x33c: V276 = ISZERO V275
0x33d: V277 = 0x342
0x340: JUMPI 0x342 V276
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x341
[0x341:0x341]
---
Predecessors: [0x33a]
Successors: []
---
0x341 INVALID
---
0x341: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x342
[0x342:0x349]
---
Predecessors: [0x33a]
Successors: [0x628]
---
0x342 JUMPDEST
0x343 PUSH2 0x34a
0x346 PUSH2 0x628
0x349 JUMP
---
0x342: JUMPDEST 
0x343: V278 = 0x34a
0x346: V279 = 0x628
0x349: JUMP 0x628
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x34a]
Exit stack: [V10, 0x34a]

================================

Block 0x34a
[0x34a:0x369]
---
Predecessors: [0x65f]
Successors: []
---
0x34a JUMPDEST
0x34b PUSH1 0x40
0x34d DUP1
0x34e MLOAD
0x34f PUSH1 0xff
0x351 SWAP4
0x352 DUP5
0x353 AND
0x354 DUP2
0x355 MSTORE
0x356 SWAP2
0x357 SWAP1
0x358 SWAP3
0x359 AND
0x35a PUSH1 0x20
0x35c DUP3
0x35d ADD
0x35e MSTORE
0x35f DUP2
0x360 MLOAD
0x361 SWAP1
0x362 DUP2
0x363 SWAP1
0x364 SUB
0x365 SWAP1
0x366 SWAP2
0x367 ADD
0x368 SWAP1
0x369 RETURN
---
0x34a: JUMPDEST 
0x34b: V280 = 0x40
0x34e: V281 = M[0x40]
0x34f: V282 = 0xff
0x353: V283 = AND 0xff S1
0x355: M[V281] = V283
0x359: V284 = AND 0xff S0
0x35a: V285 = 0x20
0x35d: V286 = ADD V281 0x20
0x35e: M[V286] = V284
0x360: V287 = M[0x40]
0x364: V288 = SUB V281 V287
0x367: V289 = ADD 0x40 V288
0x369: RETURN V287 V289
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x36a
[0x36a:0x370]
---
Predecessors: [0x8a]
Successors: [0x371, 0x372]
---
0x36a JUMPDEST
0x36b CALLVALUE
0x36c ISZERO
0x36d PUSH2 0x372
0x370 JUMPI
---
0x36a: JUMPDEST 
0x36b: V290 = CALLVALUE
0x36c: V291 = ISZERO V290
0x36d: V292 = 0x372
0x370: JUMPI 0x372 V291
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x371
[0x371:0x371]
---
Predecessors: [0x36a]
Successors: []
---
0x371 INVALID
---
0x371: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x372
[0x372:0x379]
---
Predecessors: [0x36a]
Successors: [0x664]
---
0x372 JUMPDEST
0x373 PUSH2 0x1e6
0x376 PUSH2 0x664
0x379 JUMP
---
0x372: JUMPDEST 
0x373: V293 = 0x1e6
0x376: V294 = 0x664
0x379: JUMP 0x664
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e6]
Exit stack: [V10, 0x1e6]

================================

Block 0x37a
[0x37a:0x38b]
---
Predecessors: []
Successors: []
---
0x37a JUMPDEST
0x37b PUSH1 0x40
0x37d DUP1
0x37e MLOAD
0x37f SWAP2
0x380 DUP3
0x381 MSTORE
0x382 MLOAD
0x383 SWAP1
0x384 DUP2
0x385 SWAP1
0x386 SUB
0x387 PUSH1 0x20
0x389 ADD
0x38a SWAP1
0x38b RETURN
---
0x37a: JUMPDEST 
0x37b: V295 = 0x40
0x37e: V296 = M[0x40]
0x381: M[V296] = S0
0x382: V297 = M[0x40]
0x386: V298 = SUB V296 V297
0x387: V299 = 0x20
0x389: V300 = ADD 0x20 V298
0x38b: RETURN V297 V300
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x38c
[0x38c:0x392]
---
Predecessors: [0x95]
Successors: [0x393, 0x394]
---
0x38c JUMPDEST
0x38d CALLVALUE
0x38e ISZERO
0x38f PUSH2 0x394
0x392 JUMPI
---
0x38c: JUMPDEST 
0x38d: V301 = CALLVALUE
0x38e: V302 = ISZERO V301
0x38f: V303 = 0x394
0x392: JUMPI 0x394 V302
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x393
[0x393:0x393]
---
Predecessors: [0x38c]
Successors: []
---
0x393 INVALID
---
0x393: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x394
[0x394:0x39b]
---
Predecessors: [0x38c]
Successors: [0x66a]
---
0x394 JUMPDEST
0x395 PUSH2 0x2ba
0x398 PUSH2 0x66a
0x39b JUMP
---
0x394: JUMPDEST 
0x395: V304 = 0x2ba
0x398: V305 = 0x66a
0x39b: JUMP 0x66a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2ba]
Exit stack: [V10, 0x2ba]

================================

Block 0x39c
[0x39c:0x3c1]
---
Predecessors: []
Successors: [0x300, 0x3c2]
---
0x39c JUMPDEST
0x39d PUSH1 0x40
0x39f DUP1
0x3a0 MLOAD
0x3a1 PUSH1 0x20
0x3a3 DUP1
0x3a4 DUP3
0x3a5 MSTORE
0x3a6 DUP4
0x3a7 MLOAD
0x3a8 DUP2
0x3a9 DUP4
0x3aa ADD
0x3ab MSTORE
0x3ac DUP4
0x3ad MLOAD
0x3ae SWAP2
0x3af SWAP3
0x3b0 DUP4
0x3b1 SWAP3
0x3b2 SWAP1
0x3b3 DUP4
0x3b4 ADD
0x3b5 SWAP2
0x3b6 DUP6
0x3b7 ADD
0x3b8 SWAP1
0x3b9 DUP1
0x3ba DUP4
0x3bb DUP4
0x3bc DUP3
0x3bd ISZERO
0x3be PUSH2 0x300
0x3c1 JUMPI
---
0x39c: JUMPDEST 
0x39d: V306 = 0x40
0x3a0: V307 = M[0x40]
0x3a1: V308 = 0x20
0x3a5: M[V307] = 0x20
0x3a7: V309 = M[S0]
0x3aa: V310 = ADD V307 0x20
0x3ab: M[V310] = V309
0x3ad: V311 = M[S0]
0x3b4: V312 = ADD V307 0x40
0x3b7: V313 = ADD S0 0x20
0x3bd: V314 = ISZERO V311
0x3be: V315 = 0x300
0x3c1: JUMPI 0x300 V314
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V307, V307, V312, V313, V311, V311, V312, V313]
Exit stack: [S0, V307, V307, V312, V313, V311, V311, V312, V313]

================================

Block 0x3c2
[0x3c2:0x3cf]
---
Predecessors: [0x39c]
Successors: [0x300, 0x3d0]
---
0x3c2 JUMPDEST
0x3c3 DUP1
0x3c4 MLOAD
0x3c5 DUP3
0x3c6 MSTORE
0x3c7 PUSH1 0x20
0x3c9 DUP4
0x3ca GT
0x3cb ISZERO
0x3cc PUSH2 0x300
0x3cf JUMPI
---
0x3c2: JUMPDEST 
0x3c4: V316 = M[V313]
0x3c6: M[V312] = V316
0x3c7: V317 = 0x20
0x3ca: V318 = GT V311 0x20
0x3cb: V319 = ISZERO V318
0x3cc: V320 = 0x300
0x3cf: JUMPI 0x300 V319
---
Entry stack: [S8, V307, V307, V312, V313, V311, V311, V312, V313]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V307, V307, V312, V313, V311, V311, V312, V313]

================================

Block 0x3d0
[0x3d0:0x3e1]
---
Predecessors: [0x3c2]
Successors: [0x2e0]
---
0x3d0 PUSH1 0x1f
0x3d2 NOT
0x3d3 SWAP1
0x3d4 SWAP3
0x3d5 ADD
0x3d6 SWAP2
0x3d7 PUSH1 0x20
0x3d9 SWAP2
0x3da DUP3
0x3db ADD
0x3dc SWAP2
0x3dd ADD
0x3de PUSH2 0x2e0
0x3e1 JUMP
---
0x3d0: V321 = 0x1f
0x3d2: V322 = NOT 0x1f
0x3d5: V323 = ADD V311 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3d7: V324 = 0x20
0x3db: V325 = ADD 0x20 V312
0x3dd: V326 = ADD 0x20 V313
0x3de: V327 = 0x2e0
0x3e1: JUMP 0x2e0
---
Entry stack: [S8, V307, V307, V312, V313, V311, V311, V312, V313]
Stack pops: 3
Stack additions: [V323, V325, V326]
Exit stack: [S8, V307, V307, V312, V313, V311, V323, V325, V326]

================================

Block 0x3e2
[0x3e2:0x3f4]
---
Predecessors: []
Successors: [0x32c, 0x3f5]
---
0x3e2 JUMPDEST
0x3e3 POP
0x3e4 POP
0x3e5 POP
0x3e6 SWAP1
0x3e7 POP
0x3e8 SWAP1
0x3e9 DUP2
0x3ea ADD
0x3eb SWAP1
0x3ec PUSH1 0x1f
0x3ee AND
0x3ef DUP1
0x3f0 ISZERO
0x3f1 PUSH2 0x32c
0x3f4 JUMPI
---
0x3e2: JUMPDEST 
0x3ea: V328 = ADD S3 S5
0x3ec: V329 = 0x1f
0x3ee: V330 = AND 0x1f S3
0x3f0: V331 = ISZERO V330
0x3f1: V332 = 0x32c
0x3f4: JUMPI 0x32c V331
---
Entry stack: []
Stack pops: 6
Stack additions: [V328, V330]
Exit stack: [V328, V330]

================================

Block 0x3f5
[0x3f5:0x40d]
---
Predecessors: [0x3e2]
Successors: [0x40e]
---
0x3f5 DUP1
0x3f6 DUP3
0x3f7 SUB
0x3f8 DUP1
0x3f9 MLOAD
0x3fa PUSH1 0x1
0x3fc DUP4
0x3fd PUSH1 0x20
0x3ff SUB
0x400 PUSH2 0x100
0x403 EXP
0x404 SUB
0x405 NOT
0x406 AND
0x407 DUP2
0x408 MSTORE
0x409 PUSH1 0x20
0x40b ADD
0x40c SWAP2
0x40d POP
---
0x3f7: V333 = SUB V328 V330
0x3f9: V334 = M[V333]
0x3fa: V335 = 0x1
0x3fd: V336 = 0x20
0x3ff: V337 = SUB 0x20 V330
0x400: V338 = 0x100
0x403: V339 = EXP 0x100 V337
0x404: V340 = SUB V339 0x1
0x405: V341 = NOT V340
0x406: V342 = AND V341 V334
0x408: M[V333] = V342
0x409: V343 = 0x20
0x40b: V344 = ADD 0x20 V333
---
Entry stack: [V328, V330]
Stack pops: 2
Stack additions: [V344, S0]
Exit stack: [V344, V330]

================================

Block 0x40e
[0x40e:0x41b]
---
Predecessors: [0x3f5]
Successors: []
---
0x40e JUMPDEST
0x40f POP
0x410 SWAP3
0x411 POP
0x412 POP
0x413 POP
0x414 PUSH1 0x40
0x416 MLOAD
0x417 DUP1
0x418 SWAP2
0x419 SUB
0x41a SWAP1
0x41b RETURN
---
0x40e: JUMPDEST 
0x414: V345 = 0x40
0x416: V346 = M[0x40]
0x419: V347 = SUB V344 V346
0x41b: RETURN V346 V347
---
Entry stack: [V344, V330]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x41c
[0x41c:0x426]
---
Predecessors: [0x138, 0x575]
Successors: [0x427, 0x42d]
---
0x41c JUMPDEST
0x41d PUSH1 0x0
0x41f DUP1
0x420 SLOAD
0x421 ISZERO
0x422 DUP1
0x423 PUSH2 0x42d
0x426 JUMPI
---
0x41c: JUMPDEST 
0x41d: V348 = 0x0
0x420: V349 = S[0x0]
0x421: V350 = ISZERO V349
0x423: V351 = 0x42d
0x426: JUMPI 0x42d V350
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x140, 0x57f}]
Stack pops: 0
Stack additions: [0x0, V350]
Exit stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x140, 0x57f}, 0x0, V350]

================================

Block 0x427
[0x427:0x42c]
---
Predecessors: [0x41c]
Successors: [0x42d]
---
0x427 POP
0x428 PUSH1 0x0
0x42a SLOAD
0x42b NUMBER
0x42c LT
---
0x428: V352 = 0x0
0x42a: V353 = S[0x0]
0x42b: V354 = NUMBER
0x42c: V355 = LT V354 V353
---
Entry stack: [V10, {0x1c8, 0x2ba}, S4, {0x1, 0x3}, {0x140, 0x57f}, 0x0, V350]
Stack pops: 1
Stack additions: [V355]
Exit stack: [V10, {0x1c8, 0x2ba}, S4, {0x1, 0x3}, {0x140, 0x57f}, 0x0, V355]

================================

Block 0x42d
[0x42d:0x432]
---
Predecessors: [0x41c, 0x427]
Successors: [0x433, 0x43a]
---
0x42d JUMPDEST
0x42e ISZERO
0x42f PUSH2 0x43a
0x432 JUMPI
---
0x42d: JUMPDEST 
0x42e: V356 = ISZERO S0
0x42f: V357 = 0x43a
0x432: JUMPI 0x43a V356
---
Entry stack: [V10, {0x1c8, 0x2ba}, S4, {0x1, 0x3}, {0x140, 0x57f}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S4, {0x1, 0x3}, {0x140, 0x57f}, 0x0]

================================

Block 0x433
[0x433:0x439]
---
Predecessors: [0x42d]
Successors: [0x44f]
---
0x433 POP
0x434 PUSH1 0x0
0x436 PUSH2 0x44f
0x439 JUMP
---
0x434: V358 = 0x0
0x436: V359 = 0x44f
0x439: JUMP 0x44f
---
Entry stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, 0x0]

================================

Block 0x43a
[0x43a:0x443]
---
Predecessors: [0x42d]
Successors: [0x444, 0x44b]
---
0x43a JUMPDEST
0x43b PUSH1 0x1
0x43d SLOAD
0x43e TIMESTAMP
0x43f GT
0x440 PUSH2 0x44b
0x443 JUMPI
---
0x43a: JUMPDEST 
0x43b: V360 = 0x1
0x43d: V361 = S[0x1]
0x43e: V362 = TIMESTAMP
0x43f: V363 = GT V362 V361
0x440: V364 = 0x44b
0x443: JUMPI 0x44b V363
---
Entry stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, 0x0]

================================

Block 0x444
[0x444:0x44a]
---
Predecessors: [0x43a]
Successors: [0x44f]
---
0x444 POP
0x445 PUSH1 0x1
0x447 PUSH2 0x44f
0x44a JUMP
---
0x445: V365 = 0x1
0x447: V366 = 0x44f
0x44a: JUMP 0x44f
---
Entry stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, 0x1]

================================

Block 0x44b
[0x44b:0x44e]
---
Predecessors: [0x43a]
Successors: [0x44f]
---
0x44b JUMPDEST
0x44c POP
0x44d PUSH1 0x2
---
0x44b: JUMPDEST 
0x44d: V367 = 0x2
---
Entry stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, 0x0]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, 0x2]

================================

Block 0x44f
[0x44f:0x44f]
---
Predecessors: [0x433, 0x444, 0x44b]
Successors: [0x450]
---
0x44f JUMPDEST
---
0x44f: JUMPDEST 
---
Entry stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, {0x0, 0x1, 0x2}]

================================

Block 0x450
[0x450:0x450]
---
Predecessors: [0x44f]
Successors: [0x451]
---
0x450 JUMPDEST
---
0x450: JUMPDEST 
---
Entry stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, {0x0, 0x1, 0x2}]

================================

Block 0x451
[0x451:0x453]
---
Predecessors: [0x450]
Successors: [0x140, 0x57f]
---
0x451 JUMPDEST
0x452 SWAP1
0x453 JUMP
---
0x451: JUMPDEST 
0x453: JUMP {0x140, 0x57f}
---
Entry stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x140, 0x57f}, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, {0x1c8, 0x2ba}, S3, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x454
[0x454:0x465]
---
Predecessors: [0x1d2]
Successors: [0x1e6]
---
0x454 JUMPDEST
0x455 PUSH1 0x6
0x457 PUSH1 0x20
0x459 MSTORE
0x45a PUSH1 0x0
0x45c SWAP1
0x45d DUP2
0x45e MSTORE
0x45f PUSH1 0x40
0x461 SWAP1
0x462 SHA3
0x463 SLOAD
0x464 DUP2
0x465 JUMP
---
0x454: JUMPDEST 
0x455: V368 = 0x6
0x457: V369 = 0x20
0x459: M[0x20] = 0x6
0x45a: V370 = 0x0
0x45e: M[0x0] = V151
0x45f: V371 = 0x40
0x462: V372 = SHA3 0x0 0x40
0x463: V373 = S[V372]
0x465: JUMP 0x1e6
---
Entry stack: [V10, 0x1e6, V151]
Stack pops: 2
Stack additions: [S1, V373]
Exit stack: [V10, 0x1e6, V373]

================================

Block 0x466
[0x466:0x47c]
---
Predecessors: [0x200]
Successors: [0x47d, 0x482]
---
0x466 JUMPDEST
0x467 PUSH1 0x7
0x469 SLOAD
0x46a CALLER
0x46b PUSH1 0x1
0x46d PUSH1 0xa0
0x46f PUSH1 0x2
0x471 EXP
0x472 SUB
0x473 SWAP1
0x474 DUP2
0x475 AND
0x476 SWAP2
0x477 AND
0x478 EQ
0x479 PUSH2 0x482
0x47c JUMPI
---
0x466: JUMPDEST 
0x467: V374 = 0x7
0x469: V375 = S[0x7]
0x46a: V376 = CALLER
0x46b: V377 = 0x1
0x46d: V378 = 0xa0
0x46f: V379 = 0x2
0x471: V380 = EXP 0x2 0xa0
0x472: V381 = SUB 0x10000000000000000000000000000000000000000 0x1
0x475: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x477: V383 = AND V375 0xffffffffffffffffffffffffffffffffffffffff
0x478: V384 = EQ V383 V382
0x479: V385 = 0x482
0x47c: JUMPI 0x482 V384
---
Entry stack: [V10, 0x1c8, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c8, V170]

================================

Block 0x47d
[0x47d:0x481]
---
Predecessors: [0x466]
Successors: []
---
0x47d PUSH1 0x0
0x47f PUSH1 0x0
0x481 REVERT
---
0x47d: V386 = 0x0
0x47f: V387 = 0x0
0x481: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c8, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c8, V170]

================================

Block 0x482
[0x482:0x4aa]
---
Predecessors: [0x466]
Successors: [0x4ab]
---
0x482 JUMPDEST
0x483 PUSH1 0x7
0x485 DUP1
0x486 SLOAD
0x487 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49c NOT
0x49d AND
0x49e PUSH1 0x1
0x4a0 PUSH1 0xa0
0x4a2 PUSH1 0x2
0x4a4 EXP
0x4a5 SUB
0x4a6 DUP4
0x4a7 AND
0x4a8 OR
0x4a9 SWAP1
0x4aa SSTORE
---
0x482: JUMPDEST 
0x483: V388 = 0x7
0x486: V389 = S[0x7]
0x487: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x49c: V391 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x49d: V392 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V389
0x49e: V393 = 0x1
0x4a0: V394 = 0xa0
0x4a2: V395 = 0x2
0x4a4: V396 = EXP 0x2 0xa0
0x4a5: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a7: V398 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x4a8: V399 = OR V398 V392
0x4aa: S[0x7] = V399
---
Entry stack: [V10, 0x1c8, V170]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1c8, V170]

================================

Block 0x4ab
[0x4ab:0x4ab]
---
Predecessors: [0x482]
Successors: [0x4ac]
---
0x4ab JUMPDEST
---
0x4ab: JUMPDEST 
---
Entry stack: [V10, 0x1c8, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c8, V170]

================================

Block 0x4ac
[0x4ac:0x4ae]
---
Predecessors: [0x4ab]
Successors: [0x1c8]
---
0x4ac JUMPDEST
0x4ad POP
0x4ae JUMP
---
0x4ac: JUMPDEST 
0x4ae: JUMP 0x1c8
---
Entry stack: [V10, 0x1c8, V170]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x4af
[0x4af:0x4bd]
---
Predecessors: [0x21e]
Successors: [0x226]
---
0x4af JUMPDEST
0x4b0 PUSH1 0x7
0x4b2 SLOAD
0x4b3 PUSH1 0x1
0x4b5 PUSH1 0xa0
0x4b7 PUSH1 0x2
0x4b9 EXP
0x4ba SUB
0x4bb AND
0x4bc DUP2
0x4bd JUMP
---
0x4af: JUMPDEST 
0x4b0: V400 = 0x7
0x4b2: V401 = S[0x7]
0x4b3: V402 = 0x1
0x4b5: V403 = 0xa0
0x4b7: V404 = 0x2
0x4b9: V405 = EXP 0x2 0xa0
0x4ba: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bb: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x4bd: JUMP 0x226
---
Entry stack: [V10, 0x226]
Stack pops: 1
Stack additions: [S0, V407]
Exit stack: [V10, 0x226, V407]

================================

Block 0x4be
[0x4be:0x4e6]
---
Predecessors: [0x24a]
Successors: [0x4e7, 0x4ef]
---
0x4be JUMPDEST
0x4bf PUSH1 0x1
0x4c1 PUSH1 0xa0
0x4c3 PUSH1 0x2
0x4c5 EXP
0x4c6 SUB
0x4c7 DUP2
0x4c8 AND
0x4c9 PUSH1 0x0
0x4cb SWAP1
0x4cc DUP2
0x4cd MSTORE
0x4ce PUSH1 0x6
0x4d0 PUSH1 0x20
0x4d2 MSTORE
0x4d3 PUSH1 0x40
0x4d5 DUP2
0x4d6 SHA3
0x4d7 SLOAD
0x4d8 PUSH7 0x2386f26fc10000
0x4e0 DUP2
0x4e1 LT
0x4e2 ISZERO
0x4e3 PUSH2 0x4ef
0x4e6 JUMPI
---
0x4be: JUMPDEST 
0x4bf: V408 = 0x1
0x4c1: V409 = 0xa0
0x4c3: V410 = 0x2
0x4c5: V411 = EXP 0x2 0xa0
0x4c6: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c8: V413 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x4c9: V414 = 0x0
0x4cd: M[0x0] = V413
0x4ce: V415 = 0x6
0x4d0: V416 = 0x20
0x4d2: M[0x20] = 0x6
0x4d3: V417 = 0x40
0x4d6: V418 = SHA3 0x0 0x40
0x4d7: V419 = S[V418]
0x4d8: V420 = 0x2386f26fc10000
0x4e1: V421 = LT V419 0x2386f26fc10000
0x4e2: V422 = ISZERO V421
0x4e3: V423 = 0x4ef
0x4e6: JUMPI 0x4ef V422
---
Entry stack: [V10, 0x1e6, V200]
Stack pops: 1
Stack additions: [S0, 0x0, V419]
Exit stack: [V10, 0x1e6, V200, 0x0, V419]

================================

Block 0x4e7
[0x4e7:0x4ee]
---
Predecessors: [0x4be]
Successors: [0x519]
---
0x4e7 PUSH1 0x0
0x4e9 SWAP2
0x4ea POP
0x4eb PUSH2 0x519
0x4ee JUMP
---
0x4e7: V424 = 0x0
0x4eb: V425 = 0x519
0x4ee: JUMP 0x519
---
Entry stack: [V10, 0x1e6, V200, 0x0, V419]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x1e6, V200, 0x0, V419]

================================

Block 0x4ef
[0x4ef:0x4fe]
---
Predecessors: [0x4be]
Successors: [0x4ff, 0x507]
---
0x4ef JUMPDEST
0x4f0 PUSH8 0xde0b6b3a7640000
0x4f9 DUP2
0x4fa LT
0x4fb PUSH2 0x507
0x4fe JUMPI
---
0x4ef: JUMPDEST 
0x4f0: V426 = 0xde0b6b3a7640000
0x4fa: V427 = LT V419 0xde0b6b3a7640000
0x4fb: V428 = 0x507
0x4fe: JUMPI 0x507 V427
---
Entry stack: [V10, 0x1e6, V200, 0x0, V419]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e6, V200, 0x0, V419]

================================

Block 0x4ff
[0x4ff:0x506]
---
Predecessors: [0x4ef]
Successors: [0x519]
---
0x4ff PUSH1 0x64
0x501 SWAP2
0x502 POP
0x503 PUSH2 0x519
0x506 JUMP
---
0x4ff: V429 = 0x64
0x503: V430 = 0x519
0x506: JUMP 0x519
---
Entry stack: [V10, 0x1e6, V200, 0x0, V419]
Stack pops: 2
Stack additions: [0x64, S0]
Exit stack: [V10, 0x1e6, V200, 0x64, V419]

================================

Block 0x507
[0x507:0x514]
---
Predecessors: [0x4ef]
Successors: [0x515]
---
0x507 JUMPDEST
0x508 PUSH8 0xde0b6b3a7640000
0x511 PUSH1 0x64
0x513 DUP3
0x514 MUL
---
0x507: JUMPDEST 
0x508: V431 = 0xde0b6b3a7640000
0x511: V432 = 0x64
0x514: V433 = MUL V419 0x64
---
Entry stack: [V10, 0x1e6, V200, 0x0, V419]
Stack pops: 1
Stack additions: [S0, 0xde0b6b3a7640000, V433]
Exit stack: [V10, 0x1e6, V200, 0x0, V419, 0xde0b6b3a7640000, V433]

================================

Block 0x515
[0x515:0x518]
---
Predecessors: [0x507]
Successors: [0x519]
---
0x515 JUMPDEST
0x516 DIV
0x517 SWAP2
0x518 POP
---
0x515: JUMPDEST 
0x516: V434 = DIV V433 0xde0b6b3a7640000
---
Entry stack: [V10, 0x1e6, V200, 0x0, V419, 0xde0b6b3a7640000, V433]
Stack pops: 4
Stack additions: [V434, S2]
Exit stack: [V10, 0x1e6, V200, V434, V419]

================================

Block 0x519
[0x519:0x519]
---
Predecessors: [0x4e7, 0x4ff, 0x515]
Successors: [0x51a]
---
0x519 JUMPDEST
---
0x519: JUMPDEST 
---
Entry stack: [V10, 0x1e6, V200, S1, V419]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e6, V200, S1, V419]

================================

Block 0x51a
[0x51a:0x51a]
---
Predecessors: [0x519]
Successors: [0x51b]
---
0x51a JUMPDEST
---
0x51a: JUMPDEST 
---
Entry stack: [V10, 0x1e6, V200, S1, V419]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e6, V200, S1, V419]

================================

Block 0x51b
[0x51b:0x520]
---
Predecessors: [0x51a]
Successors: [0x1e6]
---
0x51b JUMPDEST
0x51c POP
0x51d SWAP2
0x51e SWAP1
0x51f POP
0x520 JUMP
---
0x51b: JUMPDEST 
0x520: JUMP 0x1e6
---
Entry stack: [V10, 0x1e6, V200, S1, V419]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, S1]

================================

Block 0x521
[0x521:0x537]
---
Predecessors: [0x278]
Successors: [0x538, 0x53d]
---
0x521 JUMPDEST
0x522 PUSH1 0x7
0x524 SLOAD
0x525 CALLER
0x526 PUSH1 0x1
0x528 PUSH1 0xa0
0x52a PUSH1 0x2
0x52c EXP
0x52d SUB
0x52e SWAP1
0x52f DUP2
0x530 AND
0x531 SWAP2
0x532 AND
0x533 EQ
0x534 PUSH2 0x53d
0x537 JUMPI
---
0x521: JUMPDEST 
0x522: V435 = 0x7
0x524: V436 = S[0x7]
0x525: V437 = CALLER
0x526: V438 = 0x1
0x528: V439 = 0xa0
0x52a: V440 = 0x2
0x52c: V441 = EXP 0x2 0xa0
0x52d: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x530: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x532: V444 = AND V436 0xffffffffffffffffffffffffffffffffffffffff
0x533: V445 = EQ V444 V443
0x534: V446 = 0x53d
0x537: JUMPI 0x53d V445
---
Entry stack: [V10, 0x1c8, V213, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c8, V213, V215]

================================

Block 0x538
[0x538:0x53c]
---
Predecessors: [0x521]
Successors: []
---
0x538 PUSH1 0x0
0x53a PUSH1 0x0
0x53c REVERT
---
0x538: V447 = 0x0
0x53a: V448 = 0x0
0x53c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c8, V213, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c8, V213, V215]

================================

Block 0x53d
[0x53d:0x546]
---
Predecessors: [0x521]
Successors: [0x6a1]
---
0x53d JUMPDEST
0x53e PUSH2 0x547
0x541 NUMBER
0x542 DUP4
0x543 PUSH2 0x6a1
0x546 JUMP
---
0x53d: JUMPDEST 
0x53e: V449 = 0x547
0x541: V450 = NUMBER
0x543: V451 = 0x6a1
0x546: JUMP 0x6a1
---
Entry stack: [V10, 0x1c8, V213, V215]
Stack pops: 2
Stack additions: [S1, S0, 0x547, V450, S1]
Exit stack: [V10, 0x1c8, V213, V215, 0x547, V450, V213]

================================

Block 0x547
[0x547:0x554]
---
Predecessors: [0x6b5]
Successors: [0x6a1]
---
0x547 JUMPDEST
0x548 PUSH1 0x0
0x54a SSTORE
0x54b PUSH2 0x555
0x54e DUP2
0x54f PUSH1 0x1
0x551 PUSH2 0x6a1
0x554 JUMP
---
0x547: JUMPDEST 
0x548: V452 = 0x0
0x54a: S[0x0] = S0
0x54b: V453 = 0x555
0x54f: V454 = 0x1
0x551: V455 = 0x6a1
0x554: JUMP 0x6a1
---
Entry stack: [V10, 0x1c8, V213, V215, S0]
Stack pops: 2
Stack additions: [S1, 0x555, S1, 0x1]
Exit stack: [V10, 0x1c8, V213, V215, 0x555, V215, 0x1]

================================

Block 0x555
[0x555:0x561]
---
Predecessors: [0x6b5]
Successors: [0x562]
---
0x555 JUMPDEST
0x556 PUSH2 0xe10
0x559 MUL
0x55a TIMESTAMP
0x55b ADD
0x55c PUSH1 0x1
0x55e DUP2
0x55f SWAP1
0x560 SSTORE
0x561 POP
---
0x555: JUMPDEST 
0x556: V456 = 0xe10
0x559: V457 = MUL 0xe10 S0
0x55a: V458 = TIMESTAMP
0x55b: V459 = ADD V458 V457
0x55c: V460 = 0x1
0x560: S[0x1] = V459
---
Entry stack: [V10, 0x1c8, V213, V215, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1c8, V213, V215]

================================

Block 0x562
[0x562:0x562]
---
Predecessors: [0x555]
Successors: [0x563]
---
0x562 JUMPDEST
---
0x562: JUMPDEST 
---
Entry stack: [V10, 0x1c8, V213, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c8, V213, V215]

================================

Block 0x563
[0x563:0x566]
---
Predecessors: [0x562]
Successors: [0x1c8]
---
0x563 JUMPDEST
0x564 POP
0x565 POP
0x566 JUMP
---
0x563: JUMPDEST 
0x566: JUMP 0x1c8
---
Entry stack: [V10, 0x1c8, V213, V215]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x567
[0x567:0x56c]
---
Predecessors: [0x290]
Successors: [0x1e6]
---
0x567 JUMPDEST
0x568 PUSH1 0x1
0x56a SLOAD
0x56b DUP2
0x56c JUMP
---
0x567: JUMPDEST 
0x568: V461 = 0x1
0x56a: V462 = S[0x1]
0x56c: JUMP 0x1e6
---
Entry stack: [V10, 0x1e6]
Stack pops: 1
Stack additions: [S0, V462]
Exit stack: [V10, 0x1e6, V462]

================================

Block 0x56d
[0x56d:0x574]
---
Predecessors: [0x2b2]
Successors: [0x6bb]
---
0x56d JUMPDEST
0x56e PUSH2 0x575
0x571 PUSH2 0x6bb
0x574 JUMP
---
0x56d: JUMPDEST 
0x56e: V463 = 0x575
0x571: V464 = 0x6bb
0x574: JUMP 0x6bb
---
Entry stack: [V10, 0x2ba]
Stack pops: 0
Stack additions: [0x575]
Exit stack: [V10, 0x2ba, 0x575]

================================

Block 0x575
[0x575:0x57e]
---
Predecessors: [0x6bb]
Successors: [0x41c]
---
0x575 JUMPDEST
0x576 PUSH1 0x3
0x578 PUSH2 0x57f
0x57b PUSH2 0x41c
0x57e JUMP
---
0x575: JUMPDEST 
0x576: V465 = 0x3
0x578: V466 = 0x57f
0x57b: V467 = 0x41c
0x57e: JUMP 0x41c
---
Entry stack: [V10, 0x2ba, V559]
Stack pops: 0
Stack additions: [0x3, 0x57f]
Exit stack: [V10, 0x2ba, V559, 0x3, 0x57f]

================================

Block 0x57f
[0x57f:0x588]
---
Predecessors: [0x451]
Successors: [0x589, 0x58a]
---
0x57f JUMPDEST
0x580 PUSH1 0x2
0x582 DUP2
0x583 GT
0x584 ISZERO
0x585 PUSH2 0x58a
0x588 JUMPI
---
0x57f: JUMPDEST 
0x580: V468 = 0x2
0x583: V469 = GT {0x0, 0x1, 0x2} 0x2
0x584: V470 = ISZERO V469
0x585: V471 = 0x58a
0x588: JUMPI 0x58a V470
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x589
[0x589:0x589]
---
Predecessors: [0x57f]
Successors: []
---
0x589 INVALID
---
0x589: INVALID 
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x58a
[0x58a:0x592]
---
Predecessors: [0x57f]
Successors: [0x593, 0x594]
---
0x58a JUMPDEST
0x58b PUSH1 0x3
0x58d DUP2
0x58e LT
0x58f PUSH2 0x594
0x592 JUMPI
---
0x58a: JUMPDEST 
0x58b: V472 = 0x3
0x58e: V473 = LT {0x0, 0x1, 0x2} 0x3
0x58f: V474 = 0x594
0x592: JUMPI 0x594 V473
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x593
[0x593:0x593]
---
Predecessors: [0x58a]
Successors: []
---
0x593 INVALID
---
0x593: INVALID 
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x594
[0x594:0x597]
---
Predecessors: [0x58a]
Successors: [0x598]
---
0x594 JUMPDEST
0x595 ADD
0x596 PUSH1 0x0
---
0x594: JUMPDEST 
0x595: V475 = ADD {0x0, 0x1, 0x2} {0x1, 0x3}
0x596: V476 = 0x0
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: [V475, 0x0]
Exit stack: [V10, {0x1c8, 0x2ba}, S2, V475, 0x0]

================================

Block 0x598
[0x598:0x5d6]
---
Predecessors: [0x594]
Successors: [0x5d7, 0x61d]
---
0x598 JUMPDEST
0x599 POP
0x59a DUP1
0x59b SLOAD
0x59c PUSH1 0x40
0x59e DUP1
0x59f MLOAD
0x5a0 PUSH1 0x20
0x5a2 PUSH1 0x2
0x5a4 PUSH1 0x1
0x5a6 DUP6
0x5a7 AND
0x5a8 ISZERO
0x5a9 PUSH2 0x100
0x5ac MUL
0x5ad PUSH1 0x0
0x5af NOT
0x5b0 ADD
0x5b1 SWAP1
0x5b2 SWAP5
0x5b3 AND
0x5b4 SWAP4
0x5b5 SWAP1
0x5b6 SWAP4
0x5b7 DIV
0x5b8 PUSH1 0x1f
0x5ba DUP2
0x5bb ADD
0x5bc DUP5
0x5bd SWAP1
0x5be DIV
0x5bf DUP5
0x5c0 MUL
0x5c1 DUP3
0x5c2 ADD
0x5c3 DUP5
0x5c4 ADD
0x5c5 SWAP1
0x5c6 SWAP3
0x5c7 MSTORE
0x5c8 DUP2
0x5c9 DUP2
0x5ca MSTORE
0x5cb SWAP3
0x5cc SWAP2
0x5cd DUP4
0x5ce ADD
0x5cf DUP3
0x5d0 DUP3
0x5d1 DUP1
0x5d2 ISZERO
0x5d3 PUSH2 0x61d
0x5d6 JUMPI
---
0x598: JUMPDEST 
0x59b: V477 = S[V475]
0x59c: V478 = 0x40
0x59f: V479 = M[0x40]
0x5a0: V480 = 0x20
0x5a2: V481 = 0x2
0x5a4: V482 = 0x1
0x5a7: V483 = AND V477 0x1
0x5a8: V484 = ISZERO V483
0x5a9: V485 = 0x100
0x5ac: V486 = MUL 0x100 V484
0x5ad: V487 = 0x0
0x5af: V488 = NOT 0x0
0x5b0: V489 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V486
0x5b3: V490 = AND V477 V489
0x5b7: V491 = DIV V490 0x2
0x5b8: V492 = 0x1f
0x5bb: V493 = ADD V491 0x1f
0x5be: V494 = DIV V493 0x20
0x5c0: V495 = MUL 0x20 V494
0x5c2: V496 = ADD V479 V495
0x5c4: V497 = ADD 0x20 V496
0x5c7: M[0x40] = V497
0x5ca: M[V479] = V491
0x5ce: V498 = ADD V479 0x20
0x5d2: V499 = ISZERO V491
0x5d3: V500 = 0x61d
0x5d6: JUMPI 0x61d V499
---
Entry stack: [V10, {0x1c8, 0x2ba}, S2, V475, 0x0]
Stack pops: 2
Stack additions: [V479, S1, V491, V498, S1, V491]
Exit stack: [V10, {0x1c8, 0x2ba}, S2, V479, V475, V491, V498, V475, V491]

================================

Block 0x5d7
[0x5d7:0x5de]
---
Predecessors: [0x598]
Successors: [0x5df, 0x5f2]
---
0x5d7 DUP1
0x5d8 PUSH1 0x1f
0x5da LT
0x5db PUSH2 0x5f2
0x5de JUMPI
---
0x5d8: V501 = 0x1f
0x5da: V502 = LT 0x1f V491
0x5db: V503 = 0x5f2
0x5de: JUMPI 0x5f2 V502
---
Entry stack: [V10, {0x1c8, 0x2ba}, S6, V479, V475, V491, V498, V475, V491]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, {0x1c8, 0x2ba}, S6, V479, V475, V491, V498, V475, V491]

================================

Block 0x5df
[0x5df:0x5f1]
---
Predecessors: [0x5d7]
Successors: [0x61d]
---
0x5df PUSH2 0x100
0x5e2 DUP1
0x5e3 DUP4
0x5e4 SLOAD
0x5e5 DIV
0x5e6 MUL
0x5e7 DUP4
0x5e8 MSTORE
0x5e9 SWAP2
0x5ea PUSH1 0x20
0x5ec ADD
0x5ed SWAP2
0x5ee PUSH2 0x61d
0x5f1 JUMP
---
0x5df: V504 = 0x100
0x5e4: V505 = S[S1]
0x5e5: V506 = DIV V505 0x100
0x5e6: V507 = MUL V506 0x100
0x5e8: M[V498] = V507
0x5ea: V508 = 0x20
0x5ec: V509 = ADD 0x20 V498
0x5ee: V510 = 0x61d
0x5f1: JUMP 0x61d
---
Entry stack: [V10, {0x1c8, 0x2ba}, S6, V479, S4, V491, V498, S1, V491]
Stack pops: 3
Stack additions: [V509, S1, S0]
Exit stack: [V10, {0x1c8, 0x2ba}, S6, V479, S4, V491, V509, S1, V491]

================================

Block 0x5f2
[0x5f2:0x5ff]
---
Predecessors: [0x5d7]
Successors: [0x600]
---
0x5f2 JUMPDEST
0x5f3 DUP3
0x5f4 ADD
0x5f5 SWAP2
0x5f6 SWAP1
0x5f7 PUSH1 0x0
0x5f9 MSTORE
0x5fa PUSH1 0x20
0x5fc PUSH1 0x0
0x5fe SHA3
0x5ff SWAP1
---
0x5f2: JUMPDEST 
0x5f4: V511 = ADD V498 V491
0x5f7: V512 = 0x0
0x5f9: M[0x0] = S1
0x5fa: V513 = 0x20
0x5fc: V514 = 0x0
0x5fe: V515 = SHA3 0x0 0x20
---
Entry stack: [V10, {0x1c8, 0x2ba}, S6, V479, S4, V491, V498, S1, V491]
Stack pops: 3
Stack additions: [V511, V515, S2]
Exit stack: [V10, {0x1c8, 0x2ba}, S6, V479, S4, V491, V511, V515, V498]

================================

Block 0x600
[0x600:0x613]
---
Predecessors: [0x5f2, 0x600]
Successors: [0x600, 0x614]
---
0x600 JUMPDEST
0x601 DUP2
0x602 SLOAD
0x603 DUP2
0x604 MSTORE
0x605 SWAP1
0x606 PUSH1 0x1
0x608 ADD
0x609 SWAP1
0x60a PUSH1 0x20
0x60c ADD
0x60d DUP1
0x60e DUP4
0x60f GT
0x610 PUSH2 0x600
0x613 JUMPI
---
0x600: JUMPDEST 
0x602: V516 = S[S1]
0x604: M[S0] = V516
0x606: V517 = 0x1
0x608: V518 = ADD 0x1 S1
0x60a: V519 = 0x20
0x60c: V520 = ADD 0x20 S0
0x60f: V521 = GT V511 V520
0x610: V522 = 0x600
0x613: JUMPI 0x600 V521
---
Entry stack: [V10, {0x1c8, 0x2ba}, S6, S5, S4, S3, V511, S1, S0]
Stack pops: 3
Stack additions: [S2, V518, V520]
Exit stack: [V10, {0x1c8, 0x2ba}, S6, S5, S4, S3, V511, V518, V520]

================================

Block 0x614
[0x614:0x61c]
---
Predecessors: [0x600]
Successors: [0x61d]
---
0x614 DUP3
0x615 SWAP1
0x616 SUB
0x617 PUSH1 0x1f
0x619 AND
0x61a DUP3
0x61b ADD
0x61c SWAP2
---
0x616: V523 = SUB V520 V511
0x617: V524 = 0x1f
0x619: V525 = AND 0x1f V523
0x61b: V526 = ADD V511 V525
---
Entry stack: [V10, {0x1c8, 0x2ba}, S6, S5, S4, S3, V511, V518, V520]
Stack pops: 3
Stack additions: [V526, S1, S2]
Exit stack: [V10, {0x1c8, 0x2ba}, S6, S5, S4, S3, V526, V518, V511]

================================

Block 0x61d
[0x61d:0x624]
---
Predecessors: [0x598, 0x5df, 0x614]
Successors: [0x625]
---
0x61d JUMPDEST
0x61e POP
0x61f POP
0x620 POP
0x621 POP
0x622 POP
0x623 SWAP1
0x624 POP
---
0x61d: JUMPDEST 
---
Entry stack: [V10, {0x1c8, 0x2ba}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V10, {0x1c8, 0x2ba}, S5]

================================

Block 0x625
[0x625:0x627]
---
Predecessors: [0x61d]
Successors: [0x1c8, 0x2ba]
---
0x625 JUMPDEST
0x626 SWAP1
0x627 JUMP
---
0x625: JUMPDEST 
0x627: JUMP {0x1c8, 0x2ba}
---
Entry stack: [V10, {0x1c8, 0x2ba}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x628
[0x628:0x639]
---
Predecessors: [0x342]
Successors: [0x63a, 0x656]
---
0x628 JUMPDEST
0x629 PUSH1 0x1
0x62b SLOAD
0x62c PUSH1 0x0
0x62e SWAP1
0x62f DUP2
0x630 SWAP1
0x631 TIMESTAMP
0x632 DUP2
0x633 SUB
0x634 SWAP1
0x635 ISZERO
0x636 PUSH2 0x656
0x639 JUMPI
---
0x628: JUMPDEST 
0x629: V527 = 0x1
0x62b: V528 = S[0x1]
0x62c: V529 = 0x0
0x631: V530 = TIMESTAMP
0x633: V531 = SUB V528 V530
0x635: V532 = ISZERO V528
0x636: V533 = 0x656
0x639: JUMPI 0x656 V532
---
Entry stack: [V10, 0x34a]
Stack pops: 0
Stack additions: [0x0, 0x0, V531]
Exit stack: [V10, 0x34a, 0x0, 0x0, V531]

================================

Block 0x63a
[0x63a:0x63d]
---
Predecessors: [0x628]
Successors: [0x63e]
---
0x63a PUSH2 0xe10
0x63d DUP2
---
0x63a: V534 = 0xe10
---
Entry stack: [V10, 0x34a, 0x0, 0x0, V531]
Stack pops: 1
Stack additions: [S0, 0xe10, S0]
Exit stack: [V10, 0x34a, 0x0, 0x0, V531, 0xe10, V531]

================================

Block 0x63e
[0x63e:0x645]
---
Predecessors: [0x63a]
Successors: [0x646]
---
0x63e JUMPDEST
0x63f DIV
0x640 PUSH1 0x3c
0x642 PUSH2 0xe10
0x645 DUP4
---
0x63e: JUMPDEST 
0x63f: V535 = DIV V531 0xe10
0x640: V536 = 0x3c
0x642: V537 = 0xe10
---
Entry stack: [V10, 0x34a, 0x0, 0x0, V531, 0xe10, V531]
Stack pops: 3
Stack additions: [S2, V535, 0x3c, 0xe10, S2]
Exit stack: [V10, 0x34a, 0x0, 0x0, V531, V535, 0x3c, 0xe10, V531]

================================

Block 0x646
[0x646:0x64e]
---
Predecessors: [0x63e]
Successors: [0x64f, 0x650]
---
0x646 JUMPDEST
0x647 MOD
0x648 DUP2
0x649 ISZERO
0x64a ISZERO
0x64b PUSH2 0x650
0x64e JUMPI
---
0x646: JUMPDEST 
0x647: V538 = MOD V531 0xe10
0x649: V539 = ISZERO 0x3c
0x64a: V540 = ISZERO 0x0
0x64b: V541 = 0x650
0x64e: JUMPI 0x650 0x1
---
Entry stack: [V10, 0x34a, 0x0, 0x0, V531, V535, 0x3c, 0xe10, V531]
Stack pops: 3
Stack additions: [S2, V538]
Exit stack: [V10, 0x34a, 0x0, 0x0, V531, V535, 0x3c, V538]

================================

Block 0x64f
[0x64f:0x64f]
---
Predecessors: [0x646]
Successors: []
---
0x64f INVALID
---
0x64f: INVALID 
---
Entry stack: [V10, 0x34a, 0x0, 0x0, V531, V535, 0x3c, V538]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x34a, 0x0, 0x0, V531, V535, 0x3c, V538]

================================

Block 0x650
[0x650:0x655]
---
Predecessors: [0x646]
Successors: [0x65a]
---
0x650 JUMPDEST
0x651 DIV
0x652 PUSH2 0x65a
0x655 JUMP
---
0x650: JUMPDEST 
0x651: V542 = DIV V538 0x3c
0x652: V543 = 0x65a
0x655: JUMP 0x65a
---
Entry stack: [V10, 0x34a, 0x0, 0x0, V531, V535, 0x3c, V538]
Stack pops: 2
Stack additions: [V542]
Exit stack: [V10, 0x34a, 0x0, 0x0, V531, V535, V542]

================================

Block 0x656
[0x656:0x659]
---
Predecessors: [0x628]
Successors: [0x65a]
---
0x656 JUMPDEST
0x657 PUSH1 0x0
0x659 DUP1
---
0x656: JUMPDEST 
0x657: V544 = 0x0
---
Entry stack: [V10, 0x34a, 0x0, 0x0, V531]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x34a, 0x0, 0x0, V531, 0x0, 0x0]

================================

Block 0x65a
[0x65a:0x65e]
---
Predecessors: [0x650, 0x656]
Successors: [0x65f]
---
0x65a JUMPDEST
0x65b SWAP3
0x65c POP
0x65d SWAP3
0x65e POP
---
0x65a: JUMPDEST 
---
Entry stack: [V10, 0x34a, 0x0, 0x0, V531, S1, S0]
Stack pops: 5
Stack additions: [S1, S0, S2]
Exit stack: [V10, 0x34a, S1, S0, V531]

================================

Block 0x65f
[0x65f:0x663]
---
Predecessors: [0x65a]
Successors: [0x34a]
---
0x65f JUMPDEST
0x660 POP
0x661 SWAP1
0x662 SWAP2
0x663 JUMP
---
0x65f: JUMPDEST 
0x663: JUMP 0x34a
---
Entry stack: [V10, 0x34a, S2, S1, V531]
Stack pops: 4
Stack additions: [S2, S1]
Exit stack: [V10, S2, S1]

================================

Block 0x664
[0x664:0x669]
---
Predecessors: [0x372]
Successors: [0x1e6]
---
0x664 JUMPDEST
0x665 PUSH1 0x0
0x667 SLOAD
0x668 DUP2
0x669 JUMP
---
0x664: JUMPDEST 
0x665: V545 = 0x0
0x667: V546 = S[0x0]
0x669: JUMP 0x1e6
---
Entry stack: [V10, 0x1e6]
Stack pops: 1
Stack additions: [S0, V546]
Exit stack: [V10, 0x1e6, V546]

================================

Block 0x66a
[0x66a:0x6a0]
---
Predecessors: [0x394]
Successors: [0x2ba]
---
0x66a JUMPDEST
0x66b PUSH1 0x40
0x66d DUP1
0x66e MLOAD
0x66f DUP1
0x670 DUP3
0x671 ADD
0x672 SWAP1
0x673 SWAP2
0x674 MSTORE
0x675 PUSH1 0x5
0x677 DUP2
0x678 MSTORE
0x679 PUSH32 0x302e302e35000000000000000000000000000000000000000000000000000000
0x69a PUSH1 0x20
0x69c DUP3
0x69d ADD
0x69e MSTORE
0x69f DUP2
0x6a0 JUMP
---
0x66a: JUMPDEST 
0x66b: V547 = 0x40
0x66e: V548 = M[0x40]
0x671: V549 = ADD 0x40 V548
0x674: M[0x40] = V549
0x675: V550 = 0x5
0x678: M[V548] = 0x5
0x679: V551 = 0x302e302e35000000000000000000000000000000000000000000000000000000
0x69a: V552 = 0x20
0x69d: V553 = ADD V548 0x20
0x69e: M[V553] = 0x302e302e35000000000000000000000000000000000000000000000000000000
0x6a0: JUMP 0x2ba
---
Entry stack: [V10, 0x2ba]
Stack pops: 1
Stack additions: [S0, V548]
Exit stack: [V10, 0x2ba, V548]

================================

Block 0x6a1
[0x6a1:0x6aa]
---
Predecessors: [0x53d, 0x547]
Successors: [0x6ab, 0x6b0]
---
0x6a1 JUMPDEST
0x6a2 PUSH1 0x0
0x6a4 DUP2
0x6a5 DUP4
0x6a6 GT
0x6a7 PUSH2 0x6b0
0x6aa JUMPI
---
0x6a1: JUMPDEST 
0x6a2: V554 = 0x0
0x6a6: V555 = GT S1 S0
0x6a7: V556 = 0x6b0
0x6aa: JUMPI 0x6b0 V555
---
Entry stack: [V10, 0x1c8, V213, V215, {0x547, 0x555}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x1c8, V213, V215, {0x547, 0x555}, S1, S0, 0x0]

================================

Block 0x6ab
[0x6ab:0x6af]
---
Predecessors: [0x6a1]
Successors: [0x6b2]
---
0x6ab DUP2
0x6ac PUSH2 0x6b2
0x6af JUMP
---
0x6ac: V557 = 0x6b2
0x6af: JUMP 0x6b2
---
Entry stack: [V10, 0x1c8, V213, V215, {0x547, 0x555}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V10, 0x1c8, V213, V215, {0x547, 0x555}, S2, S1, 0x0, S1]

================================

Block 0x6b0
[0x6b0:0x6b1]
---
Predecessors: [0x6a1]
Successors: [0x6b2]
---
0x6b0 JUMPDEST
0x6b1 DUP3
---
0x6b0: JUMPDEST 
---
Entry stack: [V10, 0x1c8, V213, V215, {0x547, 0x555}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V10, 0x1c8, V213, V215, {0x547, 0x555}, S2, S1, 0x0, S2]

================================

Block 0x6b2
[0x6b2:0x6b4]
---
Predecessors: [0x6ab, 0x6b0]
Successors: [0x6b5]
---
0x6b2 JUMPDEST
0x6b3 SWAP1
0x6b4 POP
---
0x6b2: JUMPDEST 
---
Entry stack: [V10, 0x1c8, V213, V215, {0x547, 0x555}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x1c8, V213, V215, {0x547, 0x555}, S3, S2, S0]

================================

Block 0x6b5
[0x6b5:0x6ba]
---
Predecessors: [0x6b2]
Successors: [0x547, 0x555]
---
0x6b5 JUMPDEST
0x6b6 SWAP3
0x6b7 SWAP2
0x6b8 POP
0x6b9 POP
0x6ba JUMP
---
0x6b5: JUMPDEST 
0x6ba: JUMP {0x547, 0x555}
---
Entry stack: [V10, 0x1c8, V213, V215, {0x547, 0x555}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1c8, V213, V215, S0]

================================

Block 0x6bb
[0x6bb:0x6cc]
---
Predecessors: [0x56d]
Successors: [0x575]
---
0x6bb JUMPDEST
0x6bc PUSH1 0x40
0x6be DUP1
0x6bf MLOAD
0x6c0 PUSH1 0x20
0x6c2 DUP2
0x6c3 ADD
0x6c4 SWAP1
0x6c5 SWAP2
0x6c6 MSTORE
0x6c7 PUSH1 0x0
0x6c9 DUP2
0x6ca MSTORE
0x6cb SWAP1
0x6cc JUMP
---
0x6bb: JUMPDEST 
0x6bc: V558 = 0x40
0x6bf: V559 = M[0x40]
0x6c0: V560 = 0x20
0x6c3: V561 = ADD V559 0x20
0x6c6: M[0x40] = V561
0x6c7: V562 = 0x0
0x6ca: M[V559] = 0x0
0x6cc: JUMP 0x575
---
Entry stack: [V10, 0x2ba, 0x575]
Stack pops: 1
Stack additions: [V559]
Exit stack: [V10, 0x2ba, V559]

================================

Block 0x6cd
[0x6cd:0x6f8]
---
Predecessors: []
Successors: []
---
0x6cd STOP
0x6ce LOG1
0x6cf PUSH6 0x627a7a723058
0x6d6 SHA3
0x6d7 PUSH28 0xd5e009d7bda515f48a4c413edfe46eaf1f4922d3f79c32d1f7de4ad7
0x6f4 MISSING 0xc
0x6f5 MSIZE
0x6f6 MISSING 0xb8
0x6f7 STOP
0x6f8 MISSING 0x29
---
0x6cd: STOP 
0x6ce: LOG S0 S1 S2
0x6cf: V563 = 0x627a7a723058
0x6d6: V564 = SHA3 0x627a7a723058 S3
0x6d7: V565 = 0xd5e009d7bda515f48a4c413edfe46eaf1f4922d3f79c32d1f7de4ad7
0x6f4: MISSING 0xc
0x6f5: V566 = MSIZE
0x6f6: MISSING 0xb8
0x6f7: STOP 
0x6f8: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd5e009d7bda515f48a4c413edfe46eaf1f4922d3f79c32d1f7de4ad7, V564, V566]
Exit stack: []

================================

Function 0:
Public function signature: 0xe5fc5f
Entry block: 0x1ca
Exit block: 0x1e6
Body: 0x1ca, 0x1d1, 0x1d2, 0x1e6, 0x454

Function 1:
Public function signature: 0x13af4035
Entry block: 0x1f8
Exit block: 0x1c8
Body: 0x1c8, 0x1f8, 0x1ff, 0x200, 0x466, 0x47d, 0x482, 0x4ab, 0x4ac

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x216
Exit block: 0x226
Body: 0x216, 0x21d, 0x21e, 0x226, 0x4af

Function 3:
Public function signature: 0x8fe92aed
Entry block: 0x242
Exit block: 0x1e6
Body: 0x1e6, 0x242, 0x249, 0x24a, 0x4be, 0x4e7, 0x4ef, 0x4ff, 0x507, 0x515, 0x519, 0x51a, 0x51b

Function 4:
Public function signature: 0x90fe5609
Entry block: 0x270
Exit block: 0x1c8
Body: 0x1c8, 0x270, 0x277, 0x278, 0x521, 0x538, 0x53d, 0x547

Function 5:
Public function signature: 0xa201d102
Entry block: 0x288
Exit block: 0x1e6
Body: 0x1e6, 0x288, 0x28f, 0x290, 0x567

Function 6:
Public function signature: 0xc19d93fb
Entry block: 0x2aa
Exit block: 0x32c
Body: 0x1c8, 0x2aa, 0x2b1, 0x2b2, 0x2ba, 0x2e0, 0x2ee, 0x300, 0x313, 0x32c, 0x56d, 0x575, 0x57f, 0x589, 0x58a, 0x593, 0x594, 0x598, 0x5d7, 0x5df, 0x5f2, 0x600, 0x614, 0x61d, 0x625, 0x6bb

Function 7:
Public function signature: 0xc2a15e7e
Entry block: 0x33a
Exit block: 0x64f
Body: 0x33a, 0x341, 0x342, 0x34a, 0x628, 0x63a, 0x63e, 0x646, 0x64f, 0x650, 0x656, 0x65a, 0x65f

Function 8:
Public function signature: 0xc8dda301
Entry block: 0x36a
Exit block: 0x1e6
Body: 0x1e6, 0x36a, 0x371, 0x372, 0x664

Function 9:
Public function signature: 0xffa1ad74
Entry block: 0x38c
Exit block: 0x32c
Body: 0x2ba, 0x2e0, 0x2ee, 0x300, 0x313, 0x32c, 0x38c, 0x393, 0x394, 0x66a

Function 10:
Public fallback function
Entry block: 0xa0
Exit block: 0x32c
Body: 0xa0, 0xa4, 0x111, 0x112, 0x11f, 0x120, 0x12f, 0x134, 0x138, 0x140, 0x14a, 0x14b, 0x151, 0x156, 0x167, 0x18d, 0x193, 0x198, 0x1a1, 0x1a7, 0x1a9, 0x1c3, 0x1c4, 0x1c6, 0x1c8, 0x2ba, 0x2e0, 0x2ee, 0x300, 0x313, 0x32c

Function 11:
Private function
Entry block: 0x41c
Exit block: 0x451
Body: 0x41c, 0x427, 0x42d, 0x433, 0x43a, 0x444, 0x44b, 0x44f, 0x450, 0x451

Function 12:
Private function
Entry block: 0x6a1
Exit block: 0x6b5
Body: 0x6a1, 0x6ab, 0x6b0, 0x6b2, 0x6b5

