Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x382cf0a6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x382cf0a6
0x3b: V13 = EQ V11 0x382cf0a6
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xb1]
---
0x40 DUP1
0x41 PUSH4 0x41c0e1b5
0x46 EQ
0x47 PUSH2 0xb1
0x4a JUMPI
---
0x41: V15 = 0x41c0e1b5
0x46: V16 = EQ 0x41c0e1b5 V11
0x47: V17 = 0xb1
0x4a: JUMPI 0xb1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xc4]
---
0x4b DUP1
0x4c PUSH4 0x6898f82b
0x51 EQ
0x52 PUSH2 0xc4
0x55 JUMPI
---
0x4c: V18 = 0x6898f82b
0x51: V19 = EQ 0x6898f82b V11
0x52: V20 = 0xc4
0x55: JUMPI 0xc4 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xcf]
---
0x56 DUP1
0x57 PUSH4 0x9c675eaa
0x5c EQ
0x5d PUSH2 0xcf
0x60 JUMPI
---
0x57: V21 = 0x9c675eaa
0x5c: V22 = EQ 0x9c675eaa V11
0x5d: V23 = 0xcf
0x60: JUMPI 0xcf V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xfe]
---
0x61 DUP1
0x62 PUSH4 0xc5339132
0x67 EQ
0x68 PUSH2 0xfe
0x6b JUMPI
---
0x62: V24 = 0xc5339132
0x67: V25 = EQ 0xc5339132 V11
0x68: V26 = 0xfe
0x6b: JUMPI 0xfe V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x123]
---
0x6c DUP1
0x6d PUSH4 0xcfd8a175
0x72 EQ
0x73 PUSH2 0x123
0x76 JUMPI
---
0x6d: V27 = 0xcfd8a175
0x72: V28 = EQ 0xcfd8a175 V11
0x73: V29 = 0x123
0x76: JUMPI 0x123 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x1a1, 0x294]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0xd]
Successors: [0x80, 0x84]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7b: V31 = ISZERO V30
0x7c: V32 = 0x84
0x7f: JUMPI 0x84 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x79]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V33 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x8e]
---
Predecessors: [0x79]
Successors: [0x136]
---
0x84 JUMPDEST
0x85 PUSH2 0x8f
0x88 PUSH1 0x4
0x8a CALLDATALOAD
0x8b PUSH2 0x136
0x8e JUMP
---
0x84: JUMPDEST 
0x85: V34 = 0x8f
0x88: V35 = 0x4
0x8a: V36 = CALLDATALOAD 0x4
0x8b: V37 = 0x136
0x8e: JUMP 0x136
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f, V36]
Exit stack: [V11, 0x8f, V36]

================================

Block 0x8f
[0x8f:0xb0]
---
Predecessors: [0x144]
Successors: []
---
0x8f JUMPDEST
0x90 PUSH1 0x40
0x92 MLOAD
0x93 PUSH1 0x1
0x95 PUSH1 0xa0
0x97 PUSH1 0x2
0x99 EXP
0x9a SUB
0x9b SWAP1
0x9c SWAP3
0x9d AND
0x9e DUP3
0x9f MSTORE
0xa0 PUSH1 0x20
0xa2 DUP3
0xa3 ADD
0xa4 MSTORE
0xa5 PUSH1 0x40
0xa7 SWAP1
0xa8 DUP2
0xa9 ADD
0xaa SWAP1
0xab MLOAD
0xac DUP1
0xad SWAP2
0xae SUB
0xaf SWAP1
0xb0 RETURN
---
0x8f: JUMPDEST 
0x90: V38 = 0x40
0x92: V39 = M[0x40]
0x93: V40 = 0x1
0x95: V41 = 0xa0
0x97: V42 = 0x2
0x99: V43 = EXP 0x2 0xa0
0x9a: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d: V45 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x9f: M[V39] = V45
0xa0: V46 = 0x20
0xa3: V47 = ADD V39 0x20
0xa4: M[V47] = V113
0xa5: V48 = 0x40
0xa9: V49 = ADD 0x40 V39
0xab: V50 = M[0x40]
0xae: V51 = SUB V49 V50
0xb0: RETURN V50 V51
---
Entry stack: [V11, 0x8f, V119, V113]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x40]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V52 = CALLVALUE
0xb3: V53 = ISZERO V52
0xb4: V54 = 0xbc
0xb7: JUMPI 0xbc V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V55 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb1]
Successors: [0x16c]
---
0xbc JUMPDEST
0xbd PUSH2 0x77
0xc0 PUSH2 0x16c
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V56 = 0x77
0xc0: V57 = 0x16c
0xc3: JUMP 0x16c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0x4b]
Successors: [0x1a3]
---
0xc4 JUMPDEST
0xc5 PUSH2 0x77
0xc8 PUSH1 0x4
0xca CALLDATALOAD
0xcb PUSH2 0x1a3
0xce JUMP
---
0xc4: JUMPDEST 
0xc5: V58 = 0x77
0xc8: V59 = 0x4
0xca: V60 = CALLDATALOAD 0x4
0xcb: V61 = 0x1a3
0xce: JUMP 0x1a3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V60]
Exit stack: [V11, 0x77, V60]

================================

Block 0xcf
[0xcf:0xd5]
---
Predecessors: [0x56]
Successors: [0xd6, 0xda]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xcf: JUMPDEST 
0xd0: V62 = CALLVALUE
0xd1: V63 = ISZERO V62
0xd2: V64 = 0xda
0xd5: JUMPI 0xda V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xcf]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V65 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0xcf]
Successors: [0x29c]
---
0xda JUMPDEST
0xdb PUSH2 0xe2
0xde PUSH2 0x29c
0xe1 JUMP
---
0xda: JUMPDEST 
0xdb: V66 = 0xe2
0xde: V67 = 0x29c
0xe1: JUMP 0x29c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0xfd]
---
Predecessors: [0x29c]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee SWAP1
0xef SWAP2
0xf0 AND
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa SWAP2
0xfb SUB
0xfc SWAP1
0xfd RETURN
---
0xe2: JUMPDEST 
0xe3: V68 = 0x40
0xe5: V69 = M[0x40]
0xe6: V70 = 0x1
0xe8: V71 = 0xa0
0xea: V72 = 0x2
0xec: V73 = EXP 0x2 0xa0
0xed: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V75 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0xf2: M[V69] = V75
0xf3: V76 = 0x20
0xf5: V77 = ADD 0x20 V69
0xf6: V78 = 0x40
0xf8: V79 = M[0x40]
0xfb: V80 = SUB V77 V79
0xfd: RETURN V79 V80
---
Entry stack: [V11, 0xe2, V247]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0xfe
[0xfe:0x104]
---
Predecessors: [0x61]
Successors: [0x105, 0x109]
---
0xfe JUMPDEST
0xff CALLVALUE
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xfe: JUMPDEST 
0xff: V81 = CALLVALUE
0x100: V82 = ISZERO V81
0x101: V83 = 0x109
0x104: JUMPI 0x109 V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xfe]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V84 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0xfe]
Successors: [0x2ab]
---
0x109 JUMPDEST
0x10a PUSH2 0x111
0x10d PUSH2 0x2ab
0x110 JUMP
---
0x109: JUMPDEST 
0x10a: V85 = 0x111
0x10d: V86 = 0x2ab
0x110: JUMP 0x2ab
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x111]
Exit stack: [V11, 0x111]

================================

Block 0x111
[0x111:0x122]
---
Predecessors: [0x2ab, 0x2b1]
Successors: []
---
0x111 JUMPDEST
0x112 PUSH1 0x40
0x114 MLOAD
0x115 SWAP1
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f SWAP2
0x120 SUB
0x121 SWAP1
0x122 RETURN
---
0x111: JUMPDEST 
0x112: V87 = 0x40
0x114: V88 = M[0x40]
0x117: M[V88] = S0
0x118: V89 = 0x20
0x11a: V90 = ADD 0x20 V88
0x11b: V91 = 0x40
0x11d: V92 = M[0x40]
0x120: V93 = SUB V90 V92
0x122: RETURN V92 V93
---
Entry stack: [V11, 0x111, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x111]

================================

Block 0x123
[0x123:0x129]
---
Predecessors: [0x6c]
Successors: [0x12a, 0x12e]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 ISZERO
0x126 PUSH2 0x12e
0x129 JUMPI
---
0x123: JUMPDEST 
0x124: V94 = CALLVALUE
0x125: V95 = ISZERO V94
0x126: V96 = 0x12e
0x129: JUMPI 0x12e V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0x123]
Successors: []
---
0x12a PUSH1 0x0
0x12c DUP1
0x12d REVERT
---
0x12a: V97 = 0x0
0x12d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12e
[0x12e:0x135]
---
Predecessors: [0x123]
Successors: [0x2b1]
---
0x12e JUMPDEST
0x12f PUSH2 0x111
0x132 PUSH2 0x2b1
0x135 JUMP
---
0x12e: JUMPDEST 
0x12f: V98 = 0x111
0x132: V99 = 0x2b1
0x135: JUMP 0x2b1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x111]
Exit stack: [V11, 0x111]

================================

Block 0x136
[0x136:0x142]
---
Predecessors: [0x84]
Successors: [0x143, 0x144]
---
0x136 JUMPDEST
0x137 PUSH1 0x4
0x139 DUP1
0x13a SLOAD
0x13b DUP3
0x13c SWAP1
0x13d DUP2
0x13e LT
0x13f PUSH2 0x144
0x142 JUMPI
---
0x136: JUMPDEST 
0x137: V100 = 0x4
0x13a: V101 = S[0x4]
0x13e: V102 = LT V36 V101
0x13f: V103 = 0x144
0x142: JUMPI 0x144 V102
---
Entry stack: [V11, 0x8f, V36]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V11, 0x8f, V36, 0x4, V36]

================================

Block 0x143
[0x143:0x143]
---
Predecessors: [0x136]
Successors: []
---
0x143 INVALID
---
0x143: INVALID 
---
Entry stack: [V11, 0x8f, V36, 0x4, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V36, 0x4, V36]

================================

Block 0x144
[0x144:0x16b]
---
Predecessors: [0x136]
Successors: [0x8f]
---
0x144 JUMPDEST
0x145 PUSH1 0x0
0x147 SWAP2
0x148 DUP3
0x149 MSTORE
0x14a PUSH1 0x20
0x14c SWAP1
0x14d SWAP2
0x14e SHA3
0x14f PUSH1 0x2
0x151 SWAP1
0x152 SWAP2
0x153 MUL
0x154 ADD
0x155 DUP1
0x156 SLOAD
0x157 PUSH1 0x1
0x159 SWAP1
0x15a SWAP2
0x15b ADD
0x15c SLOAD
0x15d PUSH1 0x1
0x15f PUSH1 0xa0
0x161 PUSH1 0x2
0x163 EXP
0x164 SUB
0x165 SWAP1
0x166 SWAP2
0x167 AND
0x168 SWAP2
0x169 POP
0x16a DUP3
0x16b JUMP
---
0x144: JUMPDEST 
0x145: V104 = 0x0
0x149: M[0x0] = 0x4
0x14a: V105 = 0x20
0x14e: V106 = SHA3 0x0 0x20
0x14f: V107 = 0x2
0x153: V108 = MUL V36 0x2
0x154: V109 = ADD V108 V106
0x156: V110 = S[V109]
0x157: V111 = 0x1
0x15b: V112 = ADD V109 0x1
0x15c: V113 = S[V112]
0x15d: V114 = 0x1
0x15f: V115 = 0xa0
0x161: V116 = 0x2
0x163: V117 = EXP 0x2 0xa0
0x164: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V119 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x16b: JUMP 0x8f
---
Entry stack: [V11, 0x8f, V36, 0x4, V36]
Stack pops: 4
Stack additions: [S3, V119, V113]
Exit stack: [V11, 0x8f, V119, V113]

================================

Block 0x16c
[0x16c:0x184]
---
Predecessors: [0xbc]
Successors: [0x185, 0x190]
---
0x16c JUMPDEST
0x16d PUSH1 0x3
0x16f SLOAD
0x170 CALLER
0x171 PUSH1 0x1
0x173 PUSH1 0xa0
0x175 PUSH1 0x2
0x177 EXP
0x178 SUB
0x179 SWAP1
0x17a DUP2
0x17b AND
0x17c SWAP2
0x17d AND
0x17e EQ
0x17f DUP1
0x180 ISZERO
0x181 PUSH2 0x190
0x184 JUMPI
---
0x16c: JUMPDEST 
0x16d: V120 = 0x3
0x16f: V121 = S[0x3]
0x170: V122 = CALLER
0x171: V123 = 0x1
0x173: V124 = 0xa0
0x175: V125 = 0x2
0x177: V126 = EXP 0x2 0xa0
0x178: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x17d: V129 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V130 = EQ V129 V128
0x180: V131 = ISZERO V130
0x181: V132 = 0x190
0x184: JUMPI 0x190 V131
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V11, 0x77, V130]

================================

Block 0x185
[0x185:0x18f]
---
Predecessors: [0x16c]
Successors: [0x190]
---
0x185 POP
0x186 PUSH1 0x1
0x188 SLOAD
0x189 PUSH3 0x93a80
0x18d ADD
0x18e TIMESTAMP
0x18f GT
---
0x186: V133 = 0x1
0x188: V134 = S[0x1]
0x189: V135 = 0x93a80
0x18d: V136 = ADD 0x93a80 V134
0x18e: V137 = TIMESTAMP
0x18f: V138 = GT V137 V136
---
Entry stack: [V11, 0x77, V130]
Stack pops: 1
Stack additions: [V138]
Exit stack: [V11, 0x77, V138]

================================

Block 0x190
[0x190:0x195]
---
Predecessors: [0x16c, 0x185]
Successors: [0x196, 0x1a1]
---
0x190 JUMPDEST
0x191 ISZERO
0x192 PUSH2 0x1a1
0x195 JUMPI
---
0x190: JUMPDEST 
0x191: V139 = ISZERO S0
0x192: V140 = 0x1a1
0x195: JUMPI 0x1a1 V139
---
Entry stack: [V11, 0x77, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x196
[0x196:0x1a0]
---
Predecessors: [0x190]
Successors: []
---
0x196 CALLER
0x197 PUSH1 0x1
0x199 PUSH1 0xa0
0x19b PUSH1 0x2
0x19d EXP
0x19e SUB
0x19f AND
0x1a0 SELFDESTRUCT
---
0x196: V141 = CALLER
0x197: V142 = 0x1
0x199: V143 = 0xa0
0x19b: V144 = 0x2
0x19d: V145 = EXP 0x2 0xa0
0x19e: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x1a0: SELFDESTRUCT V147
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1a1
[0x1a1:0x1a2]
---
Predecessors: [0x190]
Successors: [0x77]
---
0x1a1 JUMPDEST
0x1a2 JUMP
---
0x1a1: JUMPDEST 
0x1a2: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1b1]
---
Predecessors: [0xc4]
Successors: [0x1b2, 0x1b7]
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x0
0x1a6 PUSH1 0x2
0x1a8 SLOAD
0x1a9 CALLVALUE
0x1aa LT
0x1ab ISZERO
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x1b7
0x1b1 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V148 = 0x0
0x1a6: V149 = 0x2
0x1a8: V150 = S[0x2]
0x1a9: V151 = CALLVALUE
0x1aa: V152 = LT V151 V150
0x1ab: V153 = ISZERO V152
0x1ad: V154 = ISZERO V153
0x1ae: V155 = 0x1b7
0x1b1: JUMPI 0x1b7 V154
---
Entry stack: [V11, 0x77, V60]
Stack pops: 0
Stack additions: [0x0, V153]
Exit stack: [V11, 0x77, V60, 0x0, V153]

================================

Block 0x1b2
[0x1b2:0x1b6]
---
Predecessors: [0x1a3]
Successors: [0x1b7]
---
0x1b2 POP
0x1b3 PUSH1 0x10
0x1b5 DUP3
0x1b6 LT
---
0x1b3: V156 = 0x10
0x1b6: V157 = LT V60 0x10
---
Entry stack: [V11, 0x77, V60, 0x0, V153]
Stack pops: 3
Stack additions: [S2, S1, V157]
Exit stack: [V11, 0x77, V60, 0x0, V157]

================================

Block 0x1b7
[0x1b7:0x1bd]
---
Predecessors: [0x1a3, 0x1b2]
Successors: [0x1be, 0x1c2]
---
0x1b7 JUMPDEST
0x1b8 ISZERO
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V158 = ISZERO S0
0x1b9: V159 = ISZERO V158
0x1ba: V160 = 0x1c2
0x1bd: JUMPI 0x1c2 V159
---
Entry stack: [V11, 0x77, V60, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b7]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V161 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x1c2
[0x1c2:0x201]
---
Predecessors: [0x1b7]
Successors: [0x2ec]
---
0x1c2 JUMPDEST
0x1c3 DUP1
0x1c4 SLOAD
0x1c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1da NOT
0x1db AND
0x1dc CALLER
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 AND
0x1e6 OR
0x1e7 DUP2
0x1e8 SSTORE
0x1e9 PUSH1 0x1
0x1eb DUP1
0x1ec DUP3
0x1ed ADD
0x1ee DUP4
0x1ef SWAP1
0x1f0 SSTORE
0x1f1 PUSH1 0x4
0x1f3 DUP1
0x1f4 SLOAD
0x1f5 SWAP1
0x1f6 SWAP2
0x1f7 DUP2
0x1f8 ADD
0x1f9 PUSH2 0x202
0x1fc DUP4
0x1fd DUP3
0x1fe PUSH2 0x2ec
0x201 JUMP
---
0x1c2: JUMPDEST 
0x1c4: V162 = S[0x0]
0x1c5: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V164 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V165 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V162
0x1dc: V166 = CALLER
0x1dd: V167 = 0x1
0x1df: V168 = 0xa0
0x1e1: V169 = 0x2
0x1e3: V170 = EXP 0x2 0xa0
0x1e4: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1e6: V173 = OR V172 V165
0x1e8: S[0x0] = V173
0x1e9: V174 = 0x1
0x1ed: V175 = ADD 0x0 0x1
0x1f0: S[0x1] = V60
0x1f1: V176 = 0x4
0x1f4: V177 = S[0x4]
0x1f8: V178 = ADD V177 0x1
0x1f9: V179 = 0x202
0x1fe: V180 = 0x2ec
0x201: JUMP 0x2ec
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x4, V177, V178, 0x202, 0x4, V178]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178]

================================

Block 0x202
[0x202:0x24f]
---
Predecessors: [0x318]
Successors: [0x250, 0x28c]
---
0x202 JUMPDEST
0x203 POP
0x204 PUSH1 0x0
0x206 SWAP2
0x207 DUP3
0x208 MSTORE
0x209 PUSH1 0x20
0x20b DUP3
0x20c SHA3
0x20d DUP4
0x20e SLOAD
0x20f PUSH1 0x2
0x211 SWAP1
0x212 SWAP3
0x213 MUL
0x214 ADD
0x215 DUP1
0x216 SLOAD
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c NOT
0x22d AND
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 SWAP1
0x237 SWAP3
0x238 AND
0x239 SWAP2
0x23a SWAP1
0x23b SWAP2
0x23c OR
0x23d DUP2
0x23e SSTORE
0x23f PUSH1 0x1
0x241 DUP1
0x242 DUP5
0x243 ADD
0x244 SLOAD
0x245 SWAP2
0x246 ADD
0x247 SSTORE
0x248 SLOAD
0x249 DUP3
0x24a EQ
0x24b ISZERO
0x24c PUSH2 0x28c
0x24f JUMPI
---
0x202: JUMPDEST 
0x204: V181 = 0x0
0x208: M[0x0] = 0x4
0x209: V182 = 0x20
0x20c: V183 = SHA3 0x0 0x20
0x20e: V184 = S[0x0]
0x20f: V185 = 0x2
0x213: V186 = MUL V177 0x2
0x214: V187 = ADD V186 V183
0x216: V188 = S[V187]
0x217: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V190 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V191 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V188
0x22e: V192 = 0x1
0x230: V193 = 0xa0
0x232: V194 = 0x2
0x234: V195 = EXP 0x2 0xa0
0x235: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x238: V197 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x23c: V198 = OR V197 V191
0x23e: S[V187] = V198
0x23f: V199 = 0x1
0x243: V200 = ADD 0x0 0x1
0x244: V201 = S[0x1]
0x246: V202 = ADD V187 0x1
0x247: S[V202] = V201
0x248: V203 = S[0x0]
0x24a: V204 = EQ V60 V203
0x24b: V205 = ISZERO V204
0x24c: V206 = 0x28c
0x24f: JUMPI 0x28c V205
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x250
[0x250:0x287]
---
Predecessors: [0x202]
Successors: [0x288, 0x28c]
---
0x250 CALLER
0x251 PUSH1 0x1
0x253 PUSH1 0xa0
0x255 PUSH1 0x2
0x257 EXP
0x258 SUB
0x259 AND
0x25a PUSH2 0x8fc
0x25d ADDRESS
0x25e PUSH1 0x1
0x260 PUSH1 0xa0
0x262 PUSH1 0x2
0x264 EXP
0x265 SUB
0x266 AND
0x267 BALANCE
0x268 SWAP1
0x269 DUP2
0x26a ISZERO
0x26b MUL
0x26c SWAP1
0x26d PUSH1 0x40
0x26f MLOAD
0x270 PUSH1 0x0
0x272 PUSH1 0x40
0x274 MLOAD
0x275 DUP1
0x276 DUP4
0x277 SUB
0x278 DUP2
0x279 DUP6
0x27a DUP9
0x27b DUP9
0x27c CALL
0x27d SWAP4
0x27e POP
0x27f POP
0x280 POP
0x281 POP
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x250: V207 = CALLER
0x251: V208 = 0x1
0x253: V209 = 0xa0
0x255: V210 = 0x2
0x257: V211 = EXP 0x2 0xa0
0x258: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x259: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x25a: V214 = 0x8fc
0x25d: V215 = ADDRESS
0x25e: V216 = 0x1
0x260: V217 = 0xa0
0x262: V218 = 0x2
0x264: V219 = EXP 0x2 0xa0
0x265: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x266: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x267: V222 = BALANCE V221
0x26a: V223 = ISZERO V222
0x26b: V224 = MUL V223 0x8fc
0x26d: V225 = 0x40
0x26f: V226 = M[0x40]
0x270: V227 = 0x0
0x272: V228 = 0x40
0x274: V229 = M[0x40]
0x277: V230 = SUB V226 V229
0x27c: V231 = CALL V224 V213 V222 V229 V230 V229 0x0
0x282: V232 = ISZERO V231
0x283: V233 = ISZERO V232
0x284: V234 = 0x28c
0x287: JUMPI 0x28c V233
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x250]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V235 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x28c
[0x28c:0x293]
---
Predecessors: [0x202, 0x250]
Successors: [0x2b7]
---
0x28c JUMPDEST
0x28d PUSH2 0x294
0x290 PUSH2 0x2b7
0x293 JUMP
---
0x28c: JUMPDEST 
0x28d: V236 = 0x294
0x290: V237 = 0x2b7
0x293: JUMP 0x2b7
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 0
Stack additions: [0x294]
Exit stack: [V11, 0x77, V60, 0x0, 0x294]

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0x2e3]
Successors: [0x77]
---
0x294 JUMPDEST
0x295 POP
0x296 POP
0x297 TIMESTAMP
0x298 PUSH1 0x1
0x29a SSTORE
0x29b JUMP
---
0x294: JUMPDEST 
0x297: V238 = TIMESTAMP
0x298: V239 = 0x1
0x29a: S[0x1] = V238
0x29b: JUMP 0x77
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x29c
[0x29c:0x2aa]
---
Predecessors: [0xda]
Successors: [0xe2]
---
0x29c JUMPDEST
0x29d PUSH1 0x3
0x29f SLOAD
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0xa0
0x2a4 PUSH1 0x2
0x2a6 EXP
0x2a7 SUB
0x2a8 AND
0x2a9 DUP2
0x2aa JUMP
---
0x29c: JUMPDEST 
0x29d: V240 = 0x3
0x29f: V241 = S[0x3]
0x2a0: V242 = 0x1
0x2a2: V243 = 0xa0
0x2a4: V244 = 0x2
0x2a6: V245 = EXP 0x2 0xa0
0x2a7: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a8: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x2aa: JUMP 0xe2
---
Entry stack: [V11, 0xe2]
Stack pops: 1
Stack additions: [S0, V247]
Exit stack: [V11, 0xe2, V247]

================================

Block 0x2ab
[0x2ab:0x2b0]
---
Predecessors: [0x109]
Successors: [0x111]
---
0x2ab JUMPDEST
0x2ac PUSH1 0x1
0x2ae SLOAD
0x2af DUP2
0x2b0 JUMP
---
0x2ab: JUMPDEST 
0x2ac: V248 = 0x1
0x2ae: V249 = S[0x1]
0x2b0: JUMP 0x111
---
Entry stack: [V11, 0x111]
Stack pops: 1
Stack additions: [S0, V249]
Exit stack: [V11, 0x111, V249]

================================

Block 0x2b1
[0x2b1:0x2b6]
---
Predecessors: [0x12e]
Successors: [0x111]
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x2
0x2b4 SLOAD
0x2b5 DUP2
0x2b6 JUMP
---
0x2b1: JUMPDEST 
0x2b2: V250 = 0x2
0x2b4: V251 = S[0x2]
0x2b6: JUMP 0x111
---
Entry stack: [V11, 0x111]
Stack pops: 1
Stack additions: [S0, V251]
Exit stack: [V11, 0x111, V251]

================================

Block 0x2b7
[0x2b7:0x2e1]
---
Predecessors: [0x28c]
Successors: [0x2e2, 0x2e3]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x10
0x2ba TIMESTAMP
0x2bb PUSH1 0x1
0x2bd NUMBER
0x2be SUB
0x2bf BLOCKHASH
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 SWAP2
0x2c4 DUP3
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 DUP3
0x2c9 ADD
0x2ca MSTORE
0x2cb PUSH1 0x40
0x2cd SWAP1
0x2ce DUP2
0x2cf ADD
0x2d0 SWAP1
0x2d1 MLOAD
0x2d2 SWAP1
0x2d3 DUP2
0x2d4 SWAP1
0x2d5 SUB
0x2d6 SWAP1
0x2d7 SHA3
0x2d8 PUSH1 0xff
0x2da AND
0x2db DUP2
0x2dc ISZERO
0x2dd ISZERO
0x2de PUSH2 0x2e3
0x2e1 JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V252 = 0x10
0x2ba: V253 = TIMESTAMP
0x2bb: V254 = 0x1
0x2bd: V255 = NUMBER
0x2be: V256 = SUB V255 0x1
0x2bf: V257 = BLOCKHASH V256
0x2c0: V258 = 0x40
0x2c2: V259 = M[0x40]
0x2c5: M[V259] = V253
0x2c6: V260 = 0x20
0x2c9: V261 = ADD V259 0x20
0x2ca: M[V261] = V257
0x2cb: V262 = 0x40
0x2cf: V263 = ADD 0x40 V259
0x2d1: V264 = M[0x40]
0x2d5: V265 = SUB V263 V264
0x2d7: V266 = SHA3 V264 V265
0x2d8: V267 = 0xff
0x2da: V268 = AND 0xff V266
0x2dc: V269 = ISZERO 0x10
0x2dd: V270 = ISZERO 0x0
0x2de: V271 = 0x2e3
0x2e1: JUMPI 0x2e3 0x1
---
Entry stack: [V11, 0x77, V60, 0x0, 0x294]
Stack pops: 0
Stack additions: [0x10, V268]
Exit stack: [V11, 0x77, V60, 0x0, 0x294, 0x10, V268]

================================

Block 0x2e2
[0x2e2:0x2e2]
---
Predecessors: [0x2b7]
Successors: []
---
0x2e2 INVALID
---
0x2e2: INVALID 
---
Entry stack: [V11, 0x77, V60, 0x0, 0x294, 0x10, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0, 0x294, 0x10, V268]

================================

Block 0x2e3
[0x2e3:0x2eb]
---
Predecessors: [0x2b7]
Successors: [0x294]
---
0x2e3 JUMPDEST
0x2e4 MOD
0x2e5 PUSH1 0xff
0x2e7 AND
0x2e8 PUSH1 0x0
0x2ea SSTORE
0x2eb JUMP
---
0x2e3: JUMPDEST 
0x2e4: V272 = MOD V268 0x10
0x2e5: V273 = 0xff
0x2e7: V274 = AND 0xff V272
0x2e8: V275 = 0x0
0x2ea: S[0x0] = V274
0x2eb: JUMP 0x294
---
Entry stack: [V11, 0x77, V60, 0x0, 0x294, 0x10, V268]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x2ec
[0x2ec:0x2f9]
---
Predecessors: [0x1c2]
Successors: [0x2fa, 0x318]
---
0x2ec JUMPDEST
0x2ed DUP2
0x2ee SLOAD
0x2ef DUP2
0x2f0 DUP4
0x2f1 SSTORE
0x2f2 DUP2
0x2f3 DUP2
0x2f4 ISZERO
0x2f5 GT
0x2f6 PUSH2 0x318
0x2f9 JUMPI
---
0x2ec: JUMPDEST 
0x2ee: V276 = S[0x4]
0x2f1: S[0x4] = V178
0x2f4: V277 = ISZERO V276
0x2f5: V278 = GT V277 V178
0x2f6: V279 = 0x318
0x2f9: JUMPI 0x318 V278
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178]
Stack pops: 2
Stack additions: [S1, S0, V276]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, V276]

================================

Block 0x2fa
[0x2fa:0x317]
---
Predecessors: [0x2ec]
Successors: [0x31d]
---
0x2fa PUSH1 0x2
0x2fc MUL
0x2fd DUP2
0x2fe PUSH1 0x2
0x300 MUL
0x301 DUP4
0x302 PUSH1 0x0
0x304 MSTORE
0x305 PUSH1 0x20
0x307 PUSH1 0x0
0x309 SHA3
0x30a SWAP2
0x30b DUP3
0x30c ADD
0x30d SWAP2
0x30e ADD
0x30f PUSH2 0x318
0x312 SWAP2
0x313 SWAP1
0x314 PUSH2 0x31d
0x317 JUMP
---
0x2fa: V280 = 0x2
0x2fc: V281 = MUL 0x2 V276
0x2fe: V282 = 0x2
0x300: V283 = MUL 0x2 V178
0x302: V284 = 0x0
0x304: M[0x0] = 0x4
0x305: V285 = 0x20
0x307: V286 = 0x0
0x309: V287 = SHA3 0x0 0x20
0x30c: V288 = ADD V287 V281
0x30e: V289 = ADD V287 V283
0x30f: V290 = 0x318
0x314: V291 = 0x31d
0x317: JUMP 0x31d
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, V276]
Stack pops: 3
Stack additions: [S2, S1, 0x318, V288, V289]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, V288, V289]

================================

Block 0x318
[0x318:0x31c]
---
Predecessors: [0x2ec, 0x359]
Successors: [0x202]
---
0x318 JUMPDEST
0x319 POP
0x31a POP
0x31b POP
0x31c JUMP
---
0x318: JUMPDEST 
0x31c: JUMP 0x202
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178]

================================

Block 0x31d
[0x31d:0x322]
---
Predecessors: [0x2fa]
Successors: [0x323]
---
0x31d JUMPDEST
0x31e PUSH2 0x359
0x321 SWAP2
0x322 SWAP1
---
0x31d: JUMPDEST 
0x31e: V292 = 0x359
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, V288, V289]
Stack pops: 2
Stack additions: [0x359, S1, S0]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, 0x359, V288, V289]

================================

Block 0x323
[0x323:0x32b]
---
Predecessors: [0x31d, 0x32c]
Successors: [0x32c, 0x355]
---
0x323 JUMPDEST
0x324 DUP1
0x325 DUP3
0x326 GT
0x327 ISZERO
0x328 PUSH2 0x355
0x32b JUMPI
---
0x323: JUMPDEST 
0x326: V293 = GT V288 S0
0x327: V294 = ISZERO V293
0x328: V295 = 0x355
0x32b: JUMPI 0x355 V294
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, 0x359, V288, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, 0x359, V288, S0]

================================

Block 0x32c
[0x32c:0x354]
---
Predecessors: [0x323]
Successors: [0x323]
---
0x32c DUP1
0x32d SLOAD
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 NOT
0x344 AND
0x345 DUP2
0x346 SSTORE
0x347 PUSH1 0x0
0x349 PUSH1 0x1
0x34b DUP3
0x34c ADD
0x34d SSTORE
0x34e PUSH1 0x2
0x350 ADD
0x351 PUSH2 0x323
0x354 JUMP
---
0x32d: V296 = S[S0]
0x32e: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V298 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x344: V299 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V296
0x346: S[S0] = V299
0x347: V300 = 0x0
0x349: V301 = 0x1
0x34c: V302 = ADD S0 0x1
0x34d: S[V302] = 0x0
0x34e: V303 = 0x2
0x350: V304 = ADD 0x2 S0
0x351: V305 = 0x323
0x354: JUMP 0x323
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, 0x359, V288, S0]
Stack pops: 1
Stack additions: [V304]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, 0x359, V288, V304]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x323]
Successors: [0x359]
---
0x355 JUMPDEST
0x356 POP
0x357 SWAP1
0x358 JUMP
---
0x355: JUMPDEST 
0x358: JUMP 0x359
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, 0x359, V288, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, V288]

================================

Block 0x359
[0x359:0x35b]
---
Predecessors: [0x355]
Successors: [0x318]
---
0x359 JUMPDEST
0x35a SWAP1
0x35b JUMP
---
0x359: JUMPDEST 
0x35b: JUMP 0x318
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, 0x318, V288]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V177, V178, 0x202, 0x4, V178, V288]

================================

Block 0x35c
[0x35c:0x38e]
---
Predecessors: []
Successors: []
---
0x35c STOP
0x35d LOG1
0x35e PUSH6 0x627a7a723058
0x365 SHA3
0x366 MISSING 0xc1
0x367 DUP15
0x368 MISSING 0xce
0x369 RETURNDATASIZE
0x36a MSIZE
0x36b RETURNDATACOPY
0x36c MOD
0x36d DUP13
0x36e MISSING 0x46
0x36f SWAP12
0x370 MISSING 0xdd
0x371 MISSING 0xd3
0x372 MISSING 0xe7
0x373 MISSING 0xab
0x374 PUSH26 0x64a899aeee99854c30aff5fc397bc151c70029
---
0x35c: STOP 
0x35d: LOG S0 S1 S2
0x35e: V306 = 0x627a7a723058
0x365: V307 = SHA3 0x627a7a723058 S3
0x366: MISSING 0xc1
0x368: MISSING 0xce
0x369: V308 = RETURNDATASIZE
0x36a: V309 = MSIZE
0x36b: RETURNDATACOPY V309 V308 S0
0x36c: V310 = MOD S1 S2
0x36e: MISSING 0x46
0x370: MISSING 0xdd
0x371: MISSING 0xd3
0x372: MISSING 0xe7
0x373: MISSING 0xab
0x374: V311 = 0x64a899aeee99854c30aff5fc397bc151c70029
---
Entry stack: []
Stack pops: 0
Stack additions: [V307, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S14, V310, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, 0x64a899aeee99854c30aff5fc397bc151c70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x382cf0a6
Entry block: 0x79
Exit block: 0x8f
Body: 0x79, 0x80, 0x84, 0x8f, 0x136, 0x143, 0x144

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xb1
Exit block: 0x77
Body: 0x77, 0xb1, 0xb8, 0xbc, 0x16c, 0x185, 0x190, 0x196, 0x1a1

Function 2:
Public function signature: 0x6898f82b
Entry block: 0xc4
Exit block: 0x77
Body: 0x77, 0xc4, 0x1a3, 0x1b2, 0x1b7, 0x1be, 0x1c2, 0x202, 0x250, 0x288, 0x28c, 0x294, 0x2b7, 0x2e2, 0x2e3, 0x2ec, 0x2fa, 0x318, 0x31d, 0x323, 0x32c, 0x355, 0x359

Function 3:
Public function signature: 0x9c675eaa
Entry block: 0xcf
Exit block: 0xe2
Body: 0xcf, 0xd6, 0xda, 0xe2, 0x29c

Function 4:
Public function signature: 0xc5339132
Entry block: 0xfe
Exit block: 0x111
Body: 0xfe, 0x105, 0x109, 0x111, 0x2ab

Function 5:
Public function signature: 0xcfd8a175
Entry block: 0x123
Exit block: 0x111
Body: 0x111, 0x123, 0x12a, 0x12e, 0x2b1

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

