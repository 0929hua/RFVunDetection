Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x97]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x97
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x97
0xa: JUMPI 0x97 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x2cc]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1cb3b20
0x3a EQ
0x3b PUSH2 0x2cc
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1cb3b20
0x3a: V12 = EQ 0x1cb3b20 V10
0x3b: V13 = 0x2cc
0x3e: JUMPI 0x2cc V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x2e1]
---
0x3f DUP1
0x40 PUSH4 0x29dcb0cf
0x45 EQ
0x46 PUSH2 0x2e1
0x49 JUMPI
---
0x40: V14 = 0x29dcb0cf
0x45: V15 = EQ 0x29dcb0cf V10
0x46: V16 = 0x2e1
0x49: JUMPI 0x2e1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x30a]
---
0x4a DUP1
0x4b PUSH4 0x38af3eed
0x50 EQ
0x51 PUSH2 0x30a
0x54 JUMPI
---
0x4b: V17 = 0x38af3eed
0x50: V18 = EQ 0x38af3eed V10
0x51: V19 = 0x30a
0x54: JUMPI 0x30a V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x35f]
---
0x55 DUP1
0x56 PUSH4 0x6e66f6e9
0x5b EQ
0x5c PUSH2 0x35f
0x5f JUMPI
---
0x56: V20 = 0x6e66f6e9
0x5b: V21 = EQ 0x6e66f6e9 V10
0x5c: V22 = 0x35f
0x5f: JUMPI 0x35f V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x3b4]
---
0x60 DUP1
0x61 PUSH4 0x70a08231
0x66 EQ
0x67 PUSH2 0x3b4
0x6a JUMPI
---
0x61: V23 = 0x70a08231
0x66: V24 = EQ 0x70a08231 V10
0x67: V25 = 0x3b4
0x6a: JUMPI 0x3b4 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x401]
---
0x6b DUP1
0x6c PUSH4 0x7a3a0e84
0x71 EQ
0x72 PUSH2 0x401
0x75 JUMPI
---
0x6c: V26 = 0x7a3a0e84
0x71: V27 = EQ 0x7a3a0e84 V10
0x72: V28 = 0x401
0x75: JUMPI 0x401 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x42a]
---
0x76 DUP1
0x77 PUSH4 0x7b3e5e7b
0x7c EQ
0x7d PUSH2 0x42a
0x80 JUMPI
---
0x77: V29 = 0x7b3e5e7b
0x7c: V30 = EQ 0x7b3e5e7b V10
0x7d: V31 = 0x42a
0x80: JUMPI 0x42a V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x453]
---
0x81 DUP1
0x82 PUSH4 0xa035b1fe
0x87 EQ
0x88 PUSH2 0x453
0x8b JUMPI
---
0x82: V32 = 0xa035b1fe
0x87: V33 = EQ 0xa035b1fe V10
0x88: V34 = 0x453
0x8b: JUMPI 0x453 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x47c]
---
0x8c DUP1
0x8d PUSH4 0xfd6b7ef8
0x92 EQ
0x93 PUSH2 0x47c
0x96 JUMPI
---
0x8d: V35 = 0xfd6b7ef8
0x92: V36 = EQ 0xfd6b7ef8 V10
0x93: V37 = 0x47c
0x96: JUMPI 0x47c V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xb0]
---
Predecessors: [0x0, 0x8c]
Successors: [0xb1, 0xb5]
---
0x97 JUMPDEST
0x98 PUSH1 0x0
0x9a PUSH1 0x7
0x9c PUSH1 0x1
0x9e SWAP1
0x9f SLOAD
0xa0 SWAP1
0xa1 PUSH2 0x100
0xa4 EXP
0xa5 SWAP1
0xa6 DIV
0xa7 PUSH1 0xff
0xa9 AND
0xaa ISZERO
0xab ISZERO
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0x97: JUMPDEST 
0x98: V38 = 0x0
0x9a: V39 = 0x7
0x9c: V40 = 0x1
0x9f: V41 = S[0x7]
0xa1: V42 = 0x100
0xa4: V43 = EXP 0x100 0x1
0xa6: V44 = DIV V41 0x100
0xa7: V45 = 0xff
0xa9: V46 = AND 0xff V44
0xaa: V47 = ISZERO V46
0xab: V48 = ISZERO V47
0xac: V49 = ISZERO V48
0xad: V50 = 0xb5
0xb0: JUMPI 0xb5 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0x97]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V51 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xb5
[0xb5:0x15f]
---
Predecessors: [0x97]
Successors: [0x160, 0x161]
---
0xb5 JUMPDEST
0xb6 CALLVALUE
0xb7 SWAP1
0xb8 POP
0xb9 DUP1
0xba PUSH1 0x6
0xbc PUSH1 0x0
0xbe CALLER
0xbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4 AND
0xd5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea AND
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP1
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 PUSH1 0x0
0xf8 SHA3
0xf9 PUSH1 0x0
0xfb DUP3
0xfc DUP3
0xfd SLOAD
0xfe ADD
0xff SWAP3
0x100 POP
0x101 POP
0x102 DUP2
0x103 SWAP1
0x104 SSTORE
0x105 POP
0x106 DUP1
0x107 PUSH1 0x2
0x109 PUSH1 0x0
0x10b DUP3
0x10c DUP3
0x10d SLOAD
0x10e ADD
0x10f SWAP3
0x110 POP
0x111 POP
0x112 DUP2
0x113 SWAP1
0x114 SSTORE
0x115 POP
0x116 PUSH1 0x5
0x118 PUSH1 0x0
0x11a SWAP1
0x11b SLOAD
0x11c SWAP1
0x11d PUSH2 0x100
0x120 EXP
0x121 SWAP1
0x122 DIV
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f PUSH4 0xa9059cbb
0x154 CALLER
0x155 PUSH1 0x4
0x157 SLOAD
0x158 DUP5
0x159 DUP2
0x15a ISZERO
0x15b ISZERO
0x15c PUSH2 0x161
0x15f JUMPI
---
0xb5: JUMPDEST 
0xb6: V52 = CALLVALUE
0xba: V53 = 0x6
0xbc: V54 = 0x0
0xbe: V55 = CALLER
0xbf: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xd5: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xea: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xec: M[0x0] = V59
0xed: V60 = 0x20
0xef: V61 = ADD 0x20 0x0
0xf2: M[0x20] = 0x6
0xf3: V62 = 0x20
0xf5: V63 = ADD 0x20 0x20
0xf6: V64 = 0x0
0xf8: V65 = SHA3 0x0 0x40
0xf9: V66 = 0x0
0xfd: V67 = S[V65]
0xfe: V68 = ADD V67 V52
0x104: S[V65] = V68
0x107: V69 = 0x2
0x109: V70 = 0x0
0x10d: V71 = S[0x2]
0x10e: V72 = ADD V71 V52
0x114: S[0x2] = V72
0x116: V73 = 0x5
0x118: V74 = 0x0
0x11b: V75 = S[0x5]
0x11d: V76 = 0x100
0x120: V77 = EXP 0x100 0x0
0x122: V78 = DIV V75 0x1
0x123: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x139: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x14f: V83 = 0xa9059cbb
0x154: V84 = CALLER
0x155: V85 = 0x4
0x157: V86 = S[0x4]
0x15a: V87 = ISZERO V86
0x15b: V88 = ISZERO V87
0x15c: V89 = 0x161
0x15f: JUMPI 0x161 V88
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: [V52, V82, 0xa9059cbb, V84, V86, V52]
Exit stack: [V10, V52, V82, 0xa9059cbb, V84, V86, V52]

================================

Block 0x160
[0x160:0x160]
---
Predecessors: [0xb5]
Successors: []
---
0x160 INVALID
---
0x160: INVALID 
---
Entry stack: [V10, V52, V82, 0xa9059cbb, V84, V86, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, V82, 0xa9059cbb, V84, V86, V52]

================================

Block 0x161
[0x161:0x1e1]
---
Predecessors: [0xb5]
Successors: [0x1e2, 0x1e6]
---
0x161 JUMPDEST
0x162 DIV
0x163 PUSH1 0x40
0x165 MLOAD
0x166 DUP4
0x167 PUSH4 0xffffffff
0x16c AND
0x16d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x18b MUL
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x4
0x190 ADD
0x191 DUP1
0x192 DUP4
0x193 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a8 AND
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be AND
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 DUP3
0x1c5 DUP2
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP3
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce PUSH1 0x0
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 DUP4
0x1d5 SUB
0x1d6 DUP2
0x1d7 PUSH1 0x0
0x1d9 DUP8
0x1da DUP1
0x1db EXTCODESIZE
0x1dc ISZERO
0x1dd ISZERO
0x1de PUSH2 0x1e6
0x1e1 JUMPI
---
0x161: JUMPDEST 
0x162: V90 = DIV V52 V86
0x163: V91 = 0x40
0x165: V92 = M[0x40]
0x167: V93 = 0xffffffff
0x16c: V94 = AND 0xffffffff 0xa9059cbb
0x16d: V95 = 0x100000000000000000000000000000000000000000000000000000000
0x18b: V96 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x18d: M[V92] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x18e: V97 = 0x4
0x190: V98 = ADD 0x4 V92
0x193: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x1a9: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1c0: M[V98] = V102
0x1c1: V103 = 0x20
0x1c3: V104 = ADD 0x20 V98
0x1c6: M[V104] = V90
0x1c7: V105 = 0x20
0x1c9: V106 = ADD 0x20 V104
0x1ce: V107 = 0x0
0x1d0: V108 = 0x40
0x1d2: V109 = M[0x40]
0x1d5: V110 = SUB V106 V109
0x1d7: V111 = 0x0
0x1db: V112 = EXTCODESIZE V82
0x1dc: V113 = ISZERO V112
0x1dd: V114 = ISZERO V113
0x1de: V115 = 0x1e6
0x1e1: JUMPI 0x1e6 V114
---
Entry stack: [V10, V52, V82, 0xa9059cbb, V84, V86, V52]
Stack pops: 5
Stack additions: [S4, S3, V106, 0x0, V109, V110, V109, 0x0, S4]
Exit stack: [V10, V52, V82, 0xa9059cbb, V106, 0x0, V109, V110, V109, 0x0, V82]

================================

Block 0x1e2
[0x1e2:0x1e5]
---
Predecessors: [0x161]
Successors: []
---
0x1e2 PUSH1 0x0
0x1e4 DUP1
0x1e5 REVERT
---
0x1e2: V116 = 0x0
0x1e5: REVERT 0x0 0x0
---
Entry stack: [V10, V52, V82, 0xa9059cbb, V106, 0x0, V109, V110, V109, 0x0, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, V82, 0xa9059cbb, V106, 0x0, V109, V110, V109, 0x0, V82]

================================

Block 0x1e6
[0x1e6:0x1f2]
---
Predecessors: [0x161]
Successors: [0x1f3, 0x1f7]
---
0x1e6 JUMPDEST
0x1e7 PUSH2 0x2c6
0x1ea GAS
0x1eb SUB
0x1ec CALL
0x1ed ISZERO
0x1ee ISZERO
0x1ef PUSH2 0x1f7
0x1f2 JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V117 = 0x2c6
0x1ea: V118 = GAS
0x1eb: V119 = SUB V118 0x2c6
0x1ec: V120 = CALL V119 V82 0x0 V109 V110 V109 0x0
0x1ed: V121 = ISZERO V120
0x1ee: V122 = ISZERO V121
0x1ef: V123 = 0x1f7
0x1f2: JUMPI 0x1f7 V122
---
Entry stack: [V10, V52, V82, 0xa9059cbb, V106, 0x0, V109, V110, V109, 0x0, V82]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V52, V82, 0xa9059cbb, V106]

================================

Block 0x1f3
[0x1f3:0x1f6]
---
Predecessors: [0x1e6]
Successors: []
---
0x1f3 PUSH1 0x0
0x1f5 DUP1
0x1f6 REVERT
---
0x1f3: V124 = 0x0
0x1f6: REVERT 0x0 0x0
---
Entry stack: [V10, V52, V82, 0xa9059cbb, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, V82, 0xa9059cbb, V106]

================================

Block 0x1f7
[0x1f7:0x2cb]
---
Predecessors: [0x1e6]
Successors: []
---
0x1f7 JUMPDEST
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x21c CALLER
0x21d DUP3
0x21e PUSH1 0x1
0x220 PUSH1 0x40
0x222 MLOAD
0x223 DUP1
0x224 DUP5
0x225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23a AND
0x23b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x250 AND
0x251 DUP2
0x252 MSTORE
0x253 PUSH1 0x20
0x255 ADD
0x256 DUP4
0x257 DUP2
0x258 MSTORE
0x259 PUSH1 0x20
0x25b ADD
0x25c DUP3
0x25d ISZERO
0x25e ISZERO
0x25f ISZERO
0x260 ISZERO
0x261 DUP2
0x262 MSTORE
0x263 PUSH1 0x20
0x265 ADD
0x266 SWAP4
0x267 POP
0x268 POP
0x269 POP
0x26a POP
0x26b PUSH1 0x40
0x26d MLOAD
0x26e DUP1
0x26f SWAP2
0x270 SUB
0x271 SWAP1
0x272 LOG1
0x273 PUSH1 0x0
0x275 DUP1
0x276 SWAP1
0x277 SLOAD
0x278 SWAP1
0x279 PUSH2 0x100
0x27c EXP
0x27d SWAP1
0x27e DIV
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2aa AND
0x2ab PUSH2 0x8fc
0x2ae DUP3
0x2af SWAP1
0x2b0 DUP2
0x2b1 ISZERO
0x2b2 MUL
0x2b3 SWAP1
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 PUSH1 0x0
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd DUP4
0x2be SUB
0x2bf DUP2
0x2c0 DUP6
0x2c1 DUP9
0x2c2 DUP9
0x2c3 CALL
0x2c4 SWAP4
0x2c5 POP
0x2c6 POP
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca POP
0x2cb STOP
---
0x1f7: JUMPDEST 
0x1fb: V125 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x21c: V126 = CALLER
0x21e: V127 = 0x1
0x220: V128 = 0x40
0x222: V129 = M[0x40]
0x225: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x23b: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x250: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x252: M[V129] = V133
0x253: V134 = 0x20
0x255: V135 = ADD 0x20 V129
0x258: M[V135] = V52
0x259: V136 = 0x20
0x25b: V137 = ADD 0x20 V135
0x25d: V138 = ISZERO 0x1
0x25e: V139 = ISZERO 0x0
0x25f: V140 = ISZERO 0x1
0x260: V141 = ISZERO 0x0
0x262: M[V137] = 0x1
0x263: V142 = 0x20
0x265: V143 = ADD 0x20 V137
0x26b: V144 = 0x40
0x26d: V145 = M[0x40]
0x270: V146 = SUB V143 V145
0x272: LOG V145 V146 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x273: V147 = 0x0
0x277: V148 = S[0x0]
0x279: V149 = 0x100
0x27c: V150 = EXP 0x100 0x0
0x27e: V151 = DIV V148 0x1
0x27f: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x295: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2ab: V156 = 0x8fc
0x2b1: V157 = ISZERO V52
0x2b2: V158 = MUL V157 0x8fc
0x2b4: V159 = 0x40
0x2b6: V160 = M[0x40]
0x2b7: V161 = 0x0
0x2b9: V162 = 0x40
0x2bb: V163 = M[0x40]
0x2be: V164 = SUB V160 V163
0x2c3: V165 = CALL V158 V155 V52 V163 V164 V163 0x0
0x2cb: STOP 
---
Entry stack: [V10, V52, V82, 0xa9059cbb, V106]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cc
[0x2cc:0x2d2]
---
Predecessors: [0xb]
Successors: [0x2d3, 0x2d7]
---
0x2cc JUMPDEST
0x2cd CALLVALUE
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V166 = CALLVALUE
0x2ce: V167 = ISZERO V166
0x2cf: V168 = 0x2d7
0x2d2: JUMPI 0x2d7 V167
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2cc]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V169 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d7
[0x2d7:0x2de]
---
Predecessors: [0x2cc]
Successors: [0x491]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x2df
0x2db PUSH2 0x491
0x2de JUMP
---
0x2d7: JUMPDEST 
0x2d8: V170 = 0x2df
0x2db: V171 = 0x491
0x2de: JUMP 0x491
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2df]
Exit stack: [V10, 0x2df]

================================

Block 0x2df
[0x2df:0x2e0]
---
Predecessors: [0x56f]
Successors: []
---
0x2df JUMPDEST
0x2e0 STOP
---
0x2df: JUMPDEST 
0x2e0: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e1
[0x2e1:0x2e7]
---
Predecessors: [0x3f]
Successors: [0x2e8, 0x2ec]
---
0x2e1 JUMPDEST
0x2e2 CALLVALUE
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V172 = CALLVALUE
0x2e3: V173 = ISZERO V172
0x2e4: V174 = 0x2ec
0x2e7: JUMPI 0x2ec V173
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2e1]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V175 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ec
[0x2ec:0x2f3]
---
Predecessors: [0x2e1]
Successors: [0x571]
---
0x2ec JUMPDEST
0x2ed PUSH2 0x2f4
0x2f0 PUSH2 0x571
0x2f3 JUMP
---
0x2ec: JUMPDEST 
0x2ed: V176 = 0x2f4
0x2f0: V177 = 0x571
0x2f3: JUMP 0x571
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2f4]
Exit stack: [V10, 0x2f4]

================================

Block 0x2f4
[0x2f4:0x309]
---
Predecessors: [0x571]
Successors: []
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 DUP1
0x2f9 DUP3
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff SWAP2
0x300 POP
0x301 POP
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 SWAP2
0x307 SUB
0x308 SWAP1
0x309 RETURN
---
0x2f4: JUMPDEST 
0x2f5: V178 = 0x40
0x2f7: V179 = M[0x40]
0x2fb: M[V179] = V350
0x2fc: V180 = 0x20
0x2fe: V181 = ADD 0x20 V179
0x302: V182 = 0x40
0x304: V183 = M[0x40]
0x307: V184 = SUB V181 V183
0x309: RETURN V183 V184
---
Entry stack: [V10, 0x2f4, V350]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2f4]

================================

Block 0x30a
[0x30a:0x310]
---
Predecessors: [0x4a]
Successors: [0x311, 0x315]
---
0x30a JUMPDEST
0x30b CALLVALUE
0x30c ISZERO
0x30d PUSH2 0x315
0x310 JUMPI
---
0x30a: JUMPDEST 
0x30b: V185 = CALLVALUE
0x30c: V186 = ISZERO V185
0x30d: V187 = 0x315
0x310: JUMPI 0x315 V186
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x30a]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 REVERT
---
0x311: V188 = 0x0
0x314: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x315
[0x315:0x31c]
---
Predecessors: [0x30a]
Successors: [0x577]
---
0x315 JUMPDEST
0x316 PUSH2 0x31d
0x319 PUSH2 0x577
0x31c JUMP
---
0x315: JUMPDEST 
0x316: V189 = 0x31d
0x319: V190 = 0x577
0x31c: JUMP 0x577
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31d]
Exit stack: [V10, 0x31d]

================================

Block 0x31d
[0x31d:0x35e]
---
Predecessors: [0x577]
Successors: []
---
0x31d JUMPDEST
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 DUP3
0x323 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x338 AND
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f DUP2
0x350 MSTORE
0x351 PUSH1 0x20
0x353 ADD
0x354 SWAP2
0x355 POP
0x356 POP
0x357 PUSH1 0x40
0x359 MLOAD
0x35a DUP1
0x35b SWAP2
0x35c SUB
0x35d SWAP1
0x35e RETURN
---
0x31d: JUMPDEST 
0x31e: V191 = 0x40
0x320: V192 = M[0x40]
0x323: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x338: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x339: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x350: M[V192] = V196
0x351: V197 = 0x20
0x353: V198 = ADD 0x20 V192
0x357: V199 = 0x40
0x359: V200 = M[0x40]
0x35c: V201 = SUB V198 V200
0x35e: RETURN V200 V201
---
Entry stack: [V10, 0x31d, V357]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x31d]

================================

Block 0x35f
[0x35f:0x365]
---
Predecessors: [0x55]
Successors: [0x366, 0x36a]
---
0x35f JUMPDEST
0x360 CALLVALUE
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x35f: JUMPDEST 
0x360: V202 = CALLVALUE
0x361: V203 = ISZERO V202
0x362: V204 = 0x36a
0x365: JUMPI 0x36a V203
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x35f]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V205 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36a
[0x36a:0x371]
---
Predecessors: [0x35f]
Successors: [0x59c]
---
0x36a JUMPDEST
0x36b PUSH2 0x372
0x36e PUSH2 0x59c
0x371 JUMP
---
0x36a: JUMPDEST 
0x36b: V206 = 0x372
0x36e: V207 = 0x59c
0x371: JUMP 0x59c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x372]
Exit stack: [V10, 0x372]

================================

Block 0x372
[0x372:0x3b3]
---
Predecessors: [0x59c]
Successors: []
---
0x372 JUMPDEST
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 DUP3
0x378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38d AND
0x38e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a3 AND
0x3a4 DUP2
0x3a5 MSTORE
0x3a6 PUSH1 0x20
0x3a8 ADD
0x3a9 SWAP2
0x3aa POP
0x3ab POP
0x3ac PUSH1 0x40
0x3ae MLOAD
0x3af DUP1
0x3b0 SWAP2
0x3b1 SUB
0x3b2 SWAP1
0x3b3 RETURN
---
0x372: JUMPDEST 
0x373: V208 = 0x40
0x375: V209 = M[0x40]
0x378: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x38d: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x38e: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a3: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x3a5: M[V209] = V213
0x3a6: V214 = 0x20
0x3a8: V215 = ADD 0x20 V209
0x3ac: V216 = 0x40
0x3ae: V217 = M[0x40]
0x3b1: V218 = SUB V215 V217
0x3b3: RETURN V217 V218
---
Entry stack: [V10, 0x372, V365]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x372]

================================

Block 0x3b4
[0x3b4:0x3ba]
---
Predecessors: [0x60]
Successors: [0x3bb, 0x3bf]
---
0x3b4 JUMPDEST
0x3b5 CALLVALUE
0x3b6 ISZERO
0x3b7 PUSH2 0x3bf
0x3ba JUMPI
---
0x3b4: JUMPDEST 
0x3b5: V219 = CALLVALUE
0x3b6: V220 = ISZERO V219
0x3b7: V221 = 0x3bf
0x3ba: JUMPI 0x3bf V220
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bb
[0x3bb:0x3be]
---
Predecessors: [0x3b4]
Successors: []
---
0x3bb PUSH1 0x0
0x3bd DUP1
0x3be REVERT
---
0x3bb: V222 = 0x0
0x3be: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bf
[0x3bf:0x3ea]
---
Predecessors: [0x3b4]
Successors: [0x5c2]
---
0x3bf JUMPDEST
0x3c0 PUSH2 0x3eb
0x3c3 PUSH1 0x4
0x3c5 DUP1
0x3c6 DUP1
0x3c7 CALLDATALOAD
0x3c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3dd AND
0x3de SWAP1
0x3df PUSH1 0x20
0x3e1 ADD
0x3e2 SWAP1
0x3e3 SWAP2
0x3e4 SWAP1
0x3e5 POP
0x3e6 POP
0x3e7 PUSH2 0x5c2
0x3ea JUMP
---
0x3bf: JUMPDEST 
0x3c0: V223 = 0x3eb
0x3c3: V224 = 0x4
0x3c7: V225 = CALLDATALOAD 0x4
0x3c8: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x3df: V228 = 0x20
0x3e1: V229 = ADD 0x20 0x4
0x3e7: V230 = 0x5c2
0x3ea: JUMP 0x5c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3eb, V227]
Exit stack: [V10, 0x3eb, V227]

================================

Block 0x3eb
[0x3eb:0x400]
---
Predecessors: [0x5c2]
Successors: []
---
0x3eb JUMPDEST
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef DUP1
0x3f0 DUP3
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 SWAP2
0x3f7 POP
0x3f8 POP
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP1
0x3fd SWAP2
0x3fe SUB
0x3ff SWAP1
0x400 RETURN
---
0x3eb: JUMPDEST 
0x3ec: V231 = 0x40
0x3ee: V232 = M[0x40]
0x3f2: M[V232] = V373
0x3f3: V233 = 0x20
0x3f5: V234 = ADD 0x20 V232
0x3f9: V235 = 0x40
0x3fb: V236 = M[0x40]
0x3fe: V237 = SUB V234 V236
0x400: RETURN V236 V237
---
Entry stack: [V10, 0x3eb, V373]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3eb]

================================

Block 0x401
[0x401:0x407]
---
Predecessors: [0x6b]
Successors: [0x408, 0x40c]
---
0x401 JUMPDEST
0x402 CALLVALUE
0x403 ISZERO
0x404 PUSH2 0x40c
0x407 JUMPI
---
0x401: JUMPDEST 
0x402: V238 = CALLVALUE
0x403: V239 = ISZERO V238
0x404: V240 = 0x40c
0x407: JUMPI 0x40c V239
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x408
[0x408:0x40b]
---
Predecessors: [0x401]
Successors: []
---
0x408 PUSH1 0x0
0x40a DUP1
0x40b REVERT
---
0x408: V241 = 0x0
0x40b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x40c
[0x40c:0x413]
---
Predecessors: [0x401]
Successors: [0x5da]
---
0x40c JUMPDEST
0x40d PUSH2 0x414
0x410 PUSH2 0x5da
0x413 JUMP
---
0x40c: JUMPDEST 
0x40d: V242 = 0x414
0x410: V243 = 0x5da
0x413: JUMP 0x5da
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x414]
Exit stack: [V10, 0x414]

================================

Block 0x414
[0x414:0x429]
---
Predecessors: [0x5da]
Successors: []
---
0x414 JUMPDEST
0x415 PUSH1 0x40
0x417 MLOAD
0x418 DUP1
0x419 DUP3
0x41a DUP2
0x41b MSTORE
0x41c PUSH1 0x20
0x41e ADD
0x41f SWAP2
0x420 POP
0x421 POP
0x422 PUSH1 0x40
0x424 MLOAD
0x425 DUP1
0x426 SWAP2
0x427 SUB
0x428 SWAP1
0x429 RETURN
---
0x414: JUMPDEST 
0x415: V244 = 0x40
0x417: V245 = M[0x40]
0x41b: M[V245] = V375
0x41c: V246 = 0x20
0x41e: V247 = ADD 0x20 V245
0x422: V248 = 0x40
0x424: V249 = M[0x40]
0x427: V250 = SUB V247 V249
0x429: RETURN V249 V250
---
Entry stack: [V10, 0x414, V375]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x414]

================================

Block 0x42a
[0x42a:0x430]
---
Predecessors: [0x76]
Successors: [0x431, 0x435]
---
0x42a JUMPDEST
0x42b CALLVALUE
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x42a: JUMPDEST 
0x42b: V251 = CALLVALUE
0x42c: V252 = ISZERO V251
0x42d: V253 = 0x435
0x430: JUMPI 0x435 V252
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x42a]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V254 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x435
[0x435:0x43c]
---
Predecessors: [0x42a]
Successors: [0x5e0]
---
0x435 JUMPDEST
0x436 PUSH2 0x43d
0x439 PUSH2 0x5e0
0x43c JUMP
---
0x435: JUMPDEST 
0x436: V255 = 0x43d
0x439: V256 = 0x5e0
0x43c: JUMP 0x5e0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x43d]
Exit stack: [V10, 0x43d]

================================

Block 0x43d
[0x43d:0x452]
---
Predecessors: [0x5e0]
Successors: []
---
0x43d JUMPDEST
0x43e PUSH1 0x40
0x440 MLOAD
0x441 DUP1
0x442 DUP3
0x443 DUP2
0x444 MSTORE
0x445 PUSH1 0x20
0x447 ADD
0x448 SWAP2
0x449 POP
0x44a POP
0x44b PUSH1 0x40
0x44d MLOAD
0x44e DUP1
0x44f SWAP2
0x450 SUB
0x451 SWAP1
0x452 RETURN
---
0x43d: JUMPDEST 
0x43e: V257 = 0x40
0x440: V258 = M[0x40]
0x444: M[V258] = V377
0x445: V259 = 0x20
0x447: V260 = ADD 0x20 V258
0x44b: V261 = 0x40
0x44d: V262 = M[0x40]
0x450: V263 = SUB V260 V262
0x452: RETURN V262 V263
---
Entry stack: [V10, 0x43d, V377]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x43d]

================================

Block 0x453
[0x453:0x459]
---
Predecessors: [0x81]
Successors: [0x45a, 0x45e]
---
0x453 JUMPDEST
0x454 CALLVALUE
0x455 ISZERO
0x456 PUSH2 0x45e
0x459 JUMPI
---
0x453: JUMPDEST 
0x454: V264 = CALLVALUE
0x455: V265 = ISZERO V264
0x456: V266 = 0x45e
0x459: JUMPI 0x45e V265
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45a
[0x45a:0x45d]
---
Predecessors: [0x453]
Successors: []
---
0x45a PUSH1 0x0
0x45c DUP1
0x45d REVERT
---
0x45a: V267 = 0x0
0x45d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45e
[0x45e:0x465]
---
Predecessors: [0x453]
Successors: [0x5e6]
---
0x45e JUMPDEST
0x45f PUSH2 0x466
0x462 PUSH2 0x5e6
0x465 JUMP
---
0x45e: JUMPDEST 
0x45f: V268 = 0x466
0x462: V269 = 0x5e6
0x465: JUMP 0x5e6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x466]
Exit stack: [V10, 0x466]

================================

Block 0x466
[0x466:0x47b]
---
Predecessors: [0x5e6]
Successors: []
---
0x466 JUMPDEST
0x467 PUSH1 0x40
0x469 MLOAD
0x46a DUP1
0x46b DUP3
0x46c DUP2
0x46d MSTORE
0x46e PUSH1 0x20
0x470 ADD
0x471 SWAP2
0x472 POP
0x473 POP
0x474 PUSH1 0x40
0x476 MLOAD
0x477 DUP1
0x478 SWAP2
0x479 SUB
0x47a SWAP1
0x47b RETURN
---
0x466: JUMPDEST 
0x467: V270 = 0x40
0x469: V271 = M[0x40]
0x46d: M[V271] = V379
0x46e: V272 = 0x20
0x470: V273 = ADD 0x20 V271
0x474: V274 = 0x40
0x476: V275 = M[0x40]
0x479: V276 = SUB V273 V275
0x47b: RETURN V275 V276
---
Entry stack: [V10, 0x466, V379]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x466]

================================

Block 0x47c
[0x47c:0x482]
---
Predecessors: [0x8c]
Successors: [0x483, 0x487]
---
0x47c JUMPDEST
0x47d CALLVALUE
0x47e ISZERO
0x47f PUSH2 0x487
0x482 JUMPI
---
0x47c: JUMPDEST 
0x47d: V277 = CALLVALUE
0x47e: V278 = ISZERO V277
0x47f: V279 = 0x487
0x482: JUMPI 0x487 V278
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x483
[0x483:0x486]
---
Predecessors: [0x47c]
Successors: []
---
0x483 PUSH1 0x0
0x485 DUP1
0x486 REVERT
---
0x483: V280 = 0x0
0x486: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x487
[0x487:0x48e]
---
Predecessors: [0x47c]
Successors: [0x5ec]
---
0x487 JUMPDEST
0x488 PUSH2 0x48f
0x48b PUSH2 0x5ec
0x48e JUMP
---
0x487: JUMPDEST 
0x488: V281 = 0x48f
0x48b: V282 = 0x5ec
0x48e: JUMP 0x5ec
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x48f]
Exit stack: [V10, 0x48f]

================================

Block 0x48f
[0x48f:0x490]
---
Predecessors: [0x925]
Successors: []
---
0x48f JUMPDEST
0x490 STOP
---
0x48f: JUMPDEST 
0x490: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x491
[0x491:0x49c]
---
Predecessors: [0x2d7]
Successors: [0x49d, 0x56f]
---
0x491 JUMPDEST
0x492 PUSH1 0x3
0x494 SLOAD
0x495 TIMESTAMP
0x496 LT
0x497 ISZERO
0x498 ISZERO
0x499 PUSH2 0x56f
0x49c JUMPI
---
0x491: JUMPDEST 
0x492: V283 = 0x3
0x494: V284 = S[0x3]
0x495: V285 = TIMESTAMP
0x496: V286 = LT V285 V284
0x497: V287 = ISZERO V286
0x498: V288 = ISZERO V287
0x499: V289 = 0x56f
0x49c: JUMPI 0x56f V288
---
Entry stack: [V10, 0x2df]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2df]

================================

Block 0x49d
[0x49d:0x4a9]
---
Predecessors: [0x491]
Successors: [0x4aa, 0x553]
---
0x49d PUSH1 0x1
0x49f SLOAD
0x4a0 PUSH1 0x2
0x4a2 SLOAD
0x4a3 LT
0x4a4 ISZERO
0x4a5 ISZERO
0x4a6 PUSH2 0x553
0x4a9 JUMPI
---
0x49d: V290 = 0x1
0x49f: V291 = S[0x1]
0x4a0: V292 = 0x2
0x4a2: V293 = S[0x2]
0x4a3: V294 = LT V293 V291
0x4a4: V295 = ISZERO V294
0x4a5: V296 = ISZERO V295
0x4a6: V297 = 0x553
0x4a9: JUMPI 0x553 V296
---
Entry stack: [V10, 0x2df]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2df]

================================

Block 0x4aa
[0x4aa:0x552]
---
Predecessors: [0x49d]
Successors: [0x553]
---
0x4aa PUSH1 0x1
0x4ac PUSH1 0x7
0x4ae PUSH1 0x0
0x4b0 PUSH2 0x100
0x4b3 EXP
0x4b4 DUP2
0x4b5 SLOAD
0x4b6 DUP2
0x4b7 PUSH1 0xff
0x4b9 MUL
0x4ba NOT
0x4bb AND
0x4bc SWAP1
0x4bd DUP4
0x4be ISZERO
0x4bf ISZERO
0x4c0 MUL
0x4c1 OR
0x4c2 SWAP1
0x4c3 SSTORE
0x4c4 POP
0x4c5 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x4e6 PUSH1 0x0
0x4e8 DUP1
0x4e9 SWAP1
0x4ea SLOAD
0x4eb SWAP1
0x4ec PUSH2 0x100
0x4ef EXP
0x4f0 SWAP1
0x4f1 DIV
0x4f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x507 AND
0x508 PUSH1 0x2
0x50a SLOAD
0x50b PUSH1 0x40
0x50d MLOAD
0x50e DUP1
0x50f DUP4
0x510 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x525 AND
0x526 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53b AND
0x53c DUP2
0x53d MSTORE
0x53e PUSH1 0x20
0x540 ADD
0x541 DUP3
0x542 DUP2
0x543 MSTORE
0x544 PUSH1 0x20
0x546 ADD
0x547 SWAP3
0x548 POP
0x549 POP
0x54a POP
0x54b PUSH1 0x40
0x54d MLOAD
0x54e DUP1
0x54f SWAP2
0x550 SUB
0x551 SWAP1
0x552 LOG1
---
0x4aa: V298 = 0x1
0x4ac: V299 = 0x7
0x4ae: V300 = 0x0
0x4b0: V301 = 0x100
0x4b3: V302 = EXP 0x100 0x0
0x4b5: V303 = S[0x7]
0x4b7: V304 = 0xff
0x4b9: V305 = MUL 0xff 0x1
0x4ba: V306 = NOT 0xff
0x4bb: V307 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V303
0x4be: V308 = ISZERO 0x1
0x4bf: V309 = ISZERO 0x0
0x4c0: V310 = MUL 0x1 0x1
0x4c1: V311 = OR 0x1 V307
0x4c3: S[0x7] = V311
0x4c5: V312 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x4e6: V313 = 0x0
0x4ea: V314 = S[0x0]
0x4ec: V315 = 0x100
0x4ef: V316 = EXP 0x100 0x0
0x4f1: V317 = DIV V314 0x1
0x4f2: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x507: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x508: V320 = 0x2
0x50a: V321 = S[0x2]
0x50b: V322 = 0x40
0x50d: V323 = M[0x40]
0x510: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x525: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x526: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x53b: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x53d: M[V323] = V327
0x53e: V328 = 0x20
0x540: V329 = ADD 0x20 V323
0x543: M[V329] = V321
0x544: V330 = 0x20
0x546: V331 = ADD 0x20 V329
0x54b: V332 = 0x40
0x54d: V333 = M[0x40]
0x550: V334 = SUB V331 V333
0x552: LOG V333 V334 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x2df]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2df]

================================

Block 0x553
[0x553:0x56e]
---
Predecessors: [0x49d, 0x4aa]
Successors: [0x56f]
---
0x553 JUMPDEST
0x554 PUSH1 0x1
0x556 PUSH1 0x7
0x558 PUSH1 0x1
0x55a PUSH2 0x100
0x55d EXP
0x55e DUP2
0x55f SLOAD
0x560 DUP2
0x561 PUSH1 0xff
0x563 MUL
0x564 NOT
0x565 AND
0x566 SWAP1
0x567 DUP4
0x568 ISZERO
0x569 ISZERO
0x56a MUL
0x56b OR
0x56c SWAP1
0x56d SSTORE
0x56e POP
---
0x553: JUMPDEST 
0x554: V335 = 0x1
0x556: V336 = 0x7
0x558: V337 = 0x1
0x55a: V338 = 0x100
0x55d: V339 = EXP 0x100 0x1
0x55f: V340 = S[0x7]
0x561: V341 = 0xff
0x563: V342 = MUL 0xff 0x100
0x564: V343 = NOT 0xff00
0x565: V344 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V340
0x568: V345 = ISZERO 0x1
0x569: V346 = ISZERO 0x0
0x56a: V347 = MUL 0x1 0x100
0x56b: V348 = OR 0x100 V344
0x56d: S[0x7] = V348
---
Entry stack: [V10, 0x2df]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2df]

================================

Block 0x56f
[0x56f:0x570]
---
Predecessors: [0x491, 0x553]
Successors: [0x2df]
---
0x56f JUMPDEST
0x570 JUMP
---
0x56f: JUMPDEST 
0x570: JUMP 0x2df
---
Entry stack: [V10, 0x2df]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x571
[0x571:0x576]
---
Predecessors: [0x2ec]
Successors: [0x2f4]
---
0x571 JUMPDEST
0x572 PUSH1 0x3
0x574 SLOAD
0x575 DUP2
0x576 JUMP
---
0x571: JUMPDEST 
0x572: V349 = 0x3
0x574: V350 = S[0x3]
0x576: JUMP 0x2f4
---
Entry stack: [V10, 0x2f4]
Stack pops: 1
Stack additions: [S0, V350]
Exit stack: [V10, 0x2f4, V350]

================================

Block 0x577
[0x577:0x59b]
---
Predecessors: [0x315]
Successors: [0x31d]
---
0x577 JUMPDEST
0x578 PUSH1 0x0
0x57a DUP1
0x57b SWAP1
0x57c SLOAD
0x57d SWAP1
0x57e PUSH2 0x100
0x581 EXP
0x582 SWAP1
0x583 DIV
0x584 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x599 AND
0x59a DUP2
0x59b JUMP
---
0x577: JUMPDEST 
0x578: V351 = 0x0
0x57c: V352 = S[0x0]
0x57e: V353 = 0x100
0x581: V354 = EXP 0x100 0x0
0x583: V355 = DIV V352 0x1
0x584: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x599: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x59b: JUMP 0x31d
---
Entry stack: [V10, 0x31d]
Stack pops: 1
Stack additions: [S0, V357]
Exit stack: [V10, 0x31d, V357]

================================

Block 0x59c
[0x59c:0x5c1]
---
Predecessors: [0x36a]
Successors: [0x372]
---
0x59c JUMPDEST
0x59d PUSH1 0x5
0x59f PUSH1 0x0
0x5a1 SWAP1
0x5a2 SLOAD
0x5a3 SWAP1
0x5a4 PUSH2 0x100
0x5a7 EXP
0x5a8 SWAP1
0x5a9 DIV
0x5aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bf AND
0x5c0 DUP2
0x5c1 JUMP
---
0x59c: JUMPDEST 
0x59d: V358 = 0x5
0x59f: V359 = 0x0
0x5a2: V360 = S[0x5]
0x5a4: V361 = 0x100
0x5a7: V362 = EXP 0x100 0x0
0x5a9: V363 = DIV V360 0x1
0x5aa: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bf: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x5c1: JUMP 0x372
---
Entry stack: [V10, 0x372]
Stack pops: 1
Stack additions: [S0, V365]
Exit stack: [V10, 0x372, V365]

================================

Block 0x5c2
[0x5c2:0x5d9]
---
Predecessors: [0x3bf]
Successors: [0x3eb]
---
0x5c2 JUMPDEST
0x5c3 PUSH1 0x6
0x5c5 PUSH1 0x20
0x5c7 MSTORE
0x5c8 DUP1
0x5c9 PUSH1 0x0
0x5cb MSTORE
0x5cc PUSH1 0x40
0x5ce PUSH1 0x0
0x5d0 SHA3
0x5d1 PUSH1 0x0
0x5d3 SWAP2
0x5d4 POP
0x5d5 SWAP1
0x5d6 POP
0x5d7 SLOAD
0x5d8 DUP2
0x5d9 JUMP
---
0x5c2: JUMPDEST 
0x5c3: V366 = 0x6
0x5c5: V367 = 0x20
0x5c7: M[0x20] = 0x6
0x5c9: V368 = 0x0
0x5cb: M[0x0] = V227
0x5cc: V369 = 0x40
0x5ce: V370 = 0x0
0x5d0: V371 = SHA3 0x0 0x40
0x5d1: V372 = 0x0
0x5d7: V373 = S[V371]
0x5d9: JUMP 0x3eb
---
Entry stack: [V10, 0x3eb, V227]
Stack pops: 2
Stack additions: [S1, V373]
Exit stack: [V10, 0x3eb, V373]

================================

Block 0x5da
[0x5da:0x5df]
---
Predecessors: [0x40c]
Successors: [0x414]
---
0x5da JUMPDEST
0x5db PUSH1 0x1
0x5dd SLOAD
0x5de DUP2
0x5df JUMP
---
0x5da: JUMPDEST 
0x5db: V374 = 0x1
0x5dd: V375 = S[0x1]
0x5df: JUMP 0x414
---
Entry stack: [V10, 0x414]
Stack pops: 1
Stack additions: [S0, V375]
Exit stack: [V10, 0x414, V375]

================================

Block 0x5e0
[0x5e0:0x5e5]
---
Predecessors: [0x435]
Successors: [0x43d]
---
0x5e0 JUMPDEST
0x5e1 PUSH1 0x2
0x5e3 SLOAD
0x5e4 DUP2
0x5e5 JUMP
---
0x5e0: JUMPDEST 
0x5e1: V376 = 0x2
0x5e3: V377 = S[0x2]
0x5e5: JUMP 0x43d
---
Entry stack: [V10, 0x43d]
Stack pops: 1
Stack additions: [S0, V377]
Exit stack: [V10, 0x43d, V377]

================================

Block 0x5e6
[0x5e6:0x5eb]
---
Predecessors: [0x45e]
Successors: [0x466]
---
0x5e6 JUMPDEST
0x5e7 PUSH1 0x4
0x5e9 SLOAD
0x5ea DUP2
0x5eb JUMP
---
0x5e6: JUMPDEST 
0x5e7: V378 = 0x4
0x5e9: V379 = S[0x4]
0x5eb: JUMP 0x466
---
Entry stack: [V10, 0x466]
Stack pops: 1
Stack additions: [S0, V379]
Exit stack: [V10, 0x466, V379]

================================

Block 0x5ec
[0x5ec:0x5f9]
---
Predecessors: [0x487]
Successors: [0x5fa, 0x925]
---
0x5ec JUMPDEST
0x5ed PUSH1 0x0
0x5ef PUSH1 0x3
0x5f1 SLOAD
0x5f2 TIMESTAMP
0x5f3 LT
0x5f4 ISZERO
0x5f5 ISZERO
0x5f6 PUSH2 0x925
0x5f9 JUMPI
---
0x5ec: JUMPDEST 
0x5ed: V380 = 0x0
0x5ef: V381 = 0x3
0x5f1: V382 = S[0x3]
0x5f2: V383 = TIMESTAMP
0x5f3: V384 = LT V383 V382
0x5f4: V385 = ISZERO V384
0x5f5: V386 = ISZERO V385
0x5f6: V387 = 0x925
0x5f9: JUMPI 0x925 V386
---
Entry stack: [V10, 0x48f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x48f, 0x0]

================================

Block 0x5fa
[0x5fa:0x60f]
---
Predecessors: [0x5ec]
Successors: [0x610, 0x79d]
---
0x5fa PUSH1 0x7
0x5fc PUSH1 0x0
0x5fe SWAP1
0x5ff SLOAD
0x600 SWAP1
0x601 PUSH2 0x100
0x604 EXP
0x605 SWAP1
0x606 DIV
0x607 PUSH1 0xff
0x609 AND
0x60a ISZERO
0x60b ISZERO
0x60c PUSH2 0x79d
0x60f JUMPI
---
0x5fa: V388 = 0x7
0x5fc: V389 = 0x0
0x5ff: V390 = S[0x7]
0x601: V391 = 0x100
0x604: V392 = EXP 0x100 0x0
0x606: V393 = DIV V390 0x1
0x607: V394 = 0xff
0x609: V395 = AND 0xff V393
0x60a: V396 = ISZERO V395
0x60b: V397 = ISZERO V396
0x60c: V398 = 0x79d
0x60f: JUMPI 0x79d V397
---
Entry stack: [V10, 0x48f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48f, 0x0]

================================

Block 0x610
[0x610:0x69f]
---
Predecessors: [0x5fa]
Successors: [0x6a0, 0x79c]
---
0x610 PUSH1 0x6
0x612 PUSH1 0x0
0x614 CALLER
0x615 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62a AND
0x62b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x640 AND
0x641 DUP2
0x642 MSTORE
0x643 PUSH1 0x20
0x645 ADD
0x646 SWAP1
0x647 DUP2
0x648 MSTORE
0x649 PUSH1 0x20
0x64b ADD
0x64c PUSH1 0x0
0x64e SHA3
0x64f SLOAD
0x650 SWAP1
0x651 POP
0x652 PUSH1 0x0
0x654 PUSH1 0x6
0x656 PUSH1 0x0
0x658 CALLER
0x659 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66e AND
0x66f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x684 AND
0x685 DUP2
0x686 MSTORE
0x687 PUSH1 0x20
0x689 ADD
0x68a SWAP1
0x68b DUP2
0x68c MSTORE
0x68d PUSH1 0x20
0x68f ADD
0x690 PUSH1 0x0
0x692 SHA3
0x693 DUP2
0x694 SWAP1
0x695 SSTORE
0x696 POP
0x697 PUSH1 0x0
0x699 DUP2
0x69a GT
0x69b ISZERO
0x69c PUSH2 0x79c
0x69f JUMPI
---
0x610: V399 = 0x6
0x612: V400 = 0x0
0x614: V401 = CALLER
0x615: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x62a: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x62b: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x640: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x642: M[0x0] = V405
0x643: V406 = 0x20
0x645: V407 = ADD 0x20 0x0
0x648: M[0x20] = 0x6
0x649: V408 = 0x20
0x64b: V409 = ADD 0x20 0x20
0x64c: V410 = 0x0
0x64e: V411 = SHA3 0x0 0x40
0x64f: V412 = S[V411]
0x652: V413 = 0x0
0x654: V414 = 0x6
0x656: V415 = 0x0
0x658: V416 = CALLER
0x659: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x66f: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x684: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x686: M[0x0] = V420
0x687: V421 = 0x20
0x689: V422 = ADD 0x20 0x0
0x68c: M[0x20] = 0x6
0x68d: V423 = 0x20
0x68f: V424 = ADD 0x20 0x20
0x690: V425 = 0x0
0x692: V426 = SHA3 0x0 0x40
0x695: S[V426] = 0x0
0x697: V427 = 0x0
0x69a: V428 = GT V412 0x0
0x69b: V429 = ISZERO V428
0x69c: V430 = 0x79c
0x69f: JUMPI 0x79c V429
---
Entry stack: [V10, 0x48f, 0x0]
Stack pops: 1
Stack additions: [V412]
Exit stack: [V10, 0x48f, V412]

================================

Block 0x6a0
[0x6a0:0x6d9]
---
Predecessors: [0x610]
Successors: [0x6da, 0x756]
---
0x6a0 CALLER
0x6a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b6 AND
0x6b7 PUSH2 0x8fc
0x6ba DUP3
0x6bb SWAP1
0x6bc DUP2
0x6bd ISZERO
0x6be MUL
0x6bf SWAP1
0x6c0 PUSH1 0x40
0x6c2 MLOAD
0x6c3 PUSH1 0x0
0x6c5 PUSH1 0x40
0x6c7 MLOAD
0x6c8 DUP1
0x6c9 DUP4
0x6ca SUB
0x6cb DUP2
0x6cc DUP6
0x6cd DUP9
0x6ce DUP9
0x6cf CALL
0x6d0 SWAP4
0x6d1 POP
0x6d2 POP
0x6d3 POP
0x6d4 POP
0x6d5 ISZERO
0x6d6 PUSH2 0x756
0x6d9 JUMPI
---
0x6a0: V431 = CALLER
0x6a1: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x6b7: V434 = 0x8fc
0x6bd: V435 = ISZERO V412
0x6be: V436 = MUL V435 0x8fc
0x6c0: V437 = 0x40
0x6c2: V438 = M[0x40]
0x6c3: V439 = 0x0
0x6c5: V440 = 0x40
0x6c7: V441 = M[0x40]
0x6ca: V442 = SUB V438 V441
0x6cf: V443 = CALL V436 V433 V412 V441 V442 V441 0x0
0x6d5: V444 = ISZERO V443
0x6d6: V445 = 0x756
0x6d9: JUMPI 0x756 V444
---
Entry stack: [V10, 0x48f, V412]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x48f, V412]

================================

Block 0x6da
[0x6da:0x755]
---
Predecessors: [0x6a0]
Successors: [0x79b]
---
0x6da PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6fb CALLER
0x6fc DUP3
0x6fd PUSH1 0x0
0x6ff PUSH1 0x40
0x701 MLOAD
0x702 DUP1
0x703 DUP5
0x704 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x719 AND
0x71a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72f AND
0x730 DUP2
0x731 MSTORE
0x732 PUSH1 0x20
0x734 ADD
0x735 DUP4
0x736 DUP2
0x737 MSTORE
0x738 PUSH1 0x20
0x73a ADD
0x73b DUP3
0x73c ISZERO
0x73d ISZERO
0x73e ISZERO
0x73f ISZERO
0x740 DUP2
0x741 MSTORE
0x742 PUSH1 0x20
0x744 ADD
0x745 SWAP4
0x746 POP
0x747 POP
0x748 POP
0x749 POP
0x74a PUSH1 0x40
0x74c MLOAD
0x74d DUP1
0x74e SWAP2
0x74f SUB
0x750 SWAP1
0x751 LOG1
0x752 PUSH2 0x79b
0x755 JUMP
---
0x6da: V446 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x6fb: V447 = CALLER
0x6fd: V448 = 0x0
0x6ff: V449 = 0x40
0x701: V450 = M[0x40]
0x704: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x719: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x71a: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x72f: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x731: M[V450] = V454
0x732: V455 = 0x20
0x734: V456 = ADD 0x20 V450
0x737: M[V456] = V412
0x738: V457 = 0x20
0x73a: V458 = ADD 0x20 V456
0x73c: V459 = ISZERO 0x0
0x73d: V460 = ISZERO 0x1
0x73e: V461 = ISZERO 0x0
0x73f: V462 = ISZERO 0x1
0x741: M[V458] = 0x0
0x742: V463 = 0x20
0x744: V464 = ADD 0x20 V458
0x74a: V465 = 0x40
0x74c: V466 = M[0x40]
0x74f: V467 = SUB V464 V466
0x751: LOG V466 V467 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x752: V468 = 0x79b
0x755: JUMP 0x79b
---
Entry stack: [V10, 0x48f, V412]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x48f, V412]

================================

Block 0x756
[0x756:0x79a]
---
Predecessors: [0x6a0]
Successors: [0x79b]
---
0x756 JUMPDEST
0x757 DUP1
0x758 PUSH1 0x6
0x75a PUSH1 0x0
0x75c CALLER
0x75d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x772 AND
0x773 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x788 AND
0x789 DUP2
0x78a MSTORE
0x78b PUSH1 0x20
0x78d ADD
0x78e SWAP1
0x78f DUP2
0x790 MSTORE
0x791 PUSH1 0x20
0x793 ADD
0x794 PUSH1 0x0
0x796 SHA3
0x797 DUP2
0x798 SWAP1
0x799 SSTORE
0x79a POP
---
0x756: JUMPDEST 
0x758: V469 = 0x6
0x75a: V470 = 0x0
0x75c: V471 = CALLER
0x75d: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x772: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x773: V474 = 0xffffffffffffffffffffffffffffffffffffffff
0x788: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x78a: M[0x0] = V475
0x78b: V476 = 0x20
0x78d: V477 = ADD 0x20 0x0
0x790: M[0x20] = 0x6
0x791: V478 = 0x20
0x793: V479 = ADD 0x20 0x20
0x794: V480 = 0x0
0x796: V481 = SHA3 0x0 0x40
0x799: S[V481] = V412
---
Entry stack: [V10, 0x48f, V412]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x48f, V412]

================================

Block 0x79b
[0x79b:0x79b]
---
Predecessors: [0x6da, 0x756]
Successors: [0x79c]
---
0x79b JUMPDEST
---
0x79b: JUMPDEST 
---
Entry stack: [V10, 0x48f, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48f, V412]

================================

Block 0x79c
[0x79c:0x79c]
---
Predecessors: [0x610, 0x79b]
Successors: [0x79d]
---
0x79c JUMPDEST
---
0x79c: JUMPDEST 
---
Entry stack: [V10, 0x48f, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48f, V412]

================================

Block 0x79d
[0x79d:0x7b3]
---
Predecessors: [0x5fa, 0x79c]
Successors: [0x7b4, 0x805]
---
0x79d JUMPDEST
0x79e PUSH1 0x7
0x7a0 PUSH1 0x0
0x7a2 SWAP1
0x7a3 SLOAD
0x7a4 SWAP1
0x7a5 PUSH2 0x100
0x7a8 EXP
0x7a9 SWAP1
0x7aa DIV
0x7ab PUSH1 0xff
0x7ad AND
0x7ae DUP1
0x7af ISZERO
0x7b0 PUSH2 0x805
0x7b3 JUMPI
---
0x79d: JUMPDEST 
0x79e: V482 = 0x7
0x7a0: V483 = 0x0
0x7a3: V484 = S[0x7]
0x7a5: V485 = 0x100
0x7a8: V486 = EXP 0x100 0x0
0x7aa: V487 = DIV V484 0x1
0x7ab: V488 = 0xff
0x7ad: V489 = AND 0xff V487
0x7af: V490 = ISZERO V489
0x7b0: V491 = 0x805
0x7b3: JUMPI 0x805 V490
---
Entry stack: [V10, 0x48f, S0]
Stack pops: 0
Stack additions: [V489]
Exit stack: [V10, 0x48f, S0, V489]

================================

Block 0x7b4
[0x7b4:0x804]
---
Predecessors: [0x79d]
Successors: [0x805]
---
0x7b4 POP
0x7b5 CALLER
0x7b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cb AND
0x7cc PUSH1 0x0
0x7ce DUP1
0x7cf SWAP1
0x7d0 SLOAD
0x7d1 SWAP1
0x7d2 PUSH2 0x100
0x7d5 EXP
0x7d6 SWAP1
0x7d7 DIV
0x7d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ed AND
0x7ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x803 AND
0x804 EQ
---
0x7b5: V492 = CALLER
0x7b6: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cb: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x7cc: V495 = 0x0
0x7d0: V496 = S[0x0]
0x7d2: V497 = 0x100
0x7d5: V498 = EXP 0x100 0x0
0x7d7: V499 = DIV V496 0x1
0x7d8: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ed: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x7ee: V502 = 0xffffffffffffffffffffffffffffffffffffffff
0x803: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x804: V504 = EQ V503 V494
---
Entry stack: [V10, 0x48f, S1, V489]
Stack pops: 1
Stack additions: [V504]
Exit stack: [V10, 0x48f, S1, V504]

================================

Block 0x805
[0x805:0x80a]
---
Predecessors: [0x79d, 0x7b4]
Successors: [0x80b, 0x924]
---
0x805 JUMPDEST
0x806 ISZERO
0x807 PUSH2 0x924
0x80a JUMPI
---
0x805: JUMPDEST 
0x806: V505 = ISZERO S0
0x807: V506 = 0x924
0x80a: JUMPI 0x924 V505
---
Entry stack: [V10, 0x48f, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x48f, S1]

================================

Block 0x80b
[0x80b:0x867]
---
Predecessors: [0x805]
Successors: [0x868, 0x907]
---
0x80b PUSH1 0x0
0x80d DUP1
0x80e SWAP1
0x80f SLOAD
0x810 SWAP1
0x811 PUSH2 0x100
0x814 EXP
0x815 SWAP1
0x816 DIV
0x817 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82c AND
0x82d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x842 AND
0x843 PUSH2 0x8fc
0x846 PUSH1 0x2
0x848 SLOAD
0x849 SWAP1
0x84a DUP2
0x84b ISZERO
0x84c MUL
0x84d SWAP1
0x84e PUSH1 0x40
0x850 MLOAD
0x851 PUSH1 0x0
0x853 PUSH1 0x40
0x855 MLOAD
0x856 DUP1
0x857 DUP4
0x858 SUB
0x859 DUP2
0x85a DUP6
0x85b DUP9
0x85c DUP9
0x85d CALL
0x85e SWAP4
0x85f POP
0x860 POP
0x861 POP
0x862 POP
0x863 ISZERO
0x864 PUSH2 0x907
0x867 JUMPI
---
0x80b: V507 = 0x0
0x80f: V508 = S[0x0]
0x811: V509 = 0x100
0x814: V510 = EXP 0x100 0x0
0x816: V511 = DIV V508 0x1
0x817: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x82c: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x82d: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x842: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x843: V516 = 0x8fc
0x846: V517 = 0x2
0x848: V518 = S[0x2]
0x84b: V519 = ISZERO V518
0x84c: V520 = MUL V519 0x8fc
0x84e: V521 = 0x40
0x850: V522 = M[0x40]
0x851: V523 = 0x0
0x853: V524 = 0x40
0x855: V525 = M[0x40]
0x858: V526 = SUB V522 V525
0x85d: V527 = CALL V520 V515 V518 V525 V526 V525 0x0
0x863: V528 = ISZERO V527
0x864: V529 = 0x907
0x867: JUMPI 0x907 V528
---
Entry stack: [V10, 0x48f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48f, S0]

================================

Block 0x868
[0x868:0x906]
---
Predecessors: [0x80b]
Successors: [0x923]
---
0x868 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x889 PUSH1 0x0
0x88b DUP1
0x88c SWAP1
0x88d SLOAD
0x88e SWAP1
0x88f PUSH2 0x100
0x892 EXP
0x893 SWAP1
0x894 DIV
0x895 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8aa AND
0x8ab PUSH1 0x2
0x8ad SLOAD
0x8ae PUSH1 0x0
0x8b0 PUSH1 0x40
0x8b2 MLOAD
0x8b3 DUP1
0x8b4 DUP5
0x8b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ca AND
0x8cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e0 AND
0x8e1 DUP2
0x8e2 MSTORE
0x8e3 PUSH1 0x20
0x8e5 ADD
0x8e6 DUP4
0x8e7 DUP2
0x8e8 MSTORE
0x8e9 PUSH1 0x20
0x8eb ADD
0x8ec DUP3
0x8ed ISZERO
0x8ee ISZERO
0x8ef ISZERO
0x8f0 ISZERO
0x8f1 DUP2
0x8f2 MSTORE
0x8f3 PUSH1 0x20
0x8f5 ADD
0x8f6 SWAP4
0x8f7 POP
0x8f8 POP
0x8f9 POP
0x8fa POP
0x8fb PUSH1 0x40
0x8fd MLOAD
0x8fe DUP1
0x8ff SWAP2
0x900 SUB
0x901 SWAP1
0x902 LOG1
0x903 PUSH2 0x923
0x906 JUMP
---
0x868: V530 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x889: V531 = 0x0
0x88d: V532 = S[0x0]
0x88f: V533 = 0x100
0x892: V534 = EXP 0x100 0x0
0x894: V535 = DIV V532 0x1
0x895: V536 = 0xffffffffffffffffffffffffffffffffffffffff
0x8aa: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V535
0x8ab: V538 = 0x2
0x8ad: V539 = S[0x2]
0x8ae: V540 = 0x0
0x8b0: V541 = 0x40
0x8b2: V542 = M[0x40]
0x8b5: V543 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ca: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x8cb: V545 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e0: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x8e2: M[V542] = V546
0x8e3: V547 = 0x20
0x8e5: V548 = ADD 0x20 V542
0x8e8: M[V548] = V539
0x8e9: V549 = 0x20
0x8eb: V550 = ADD 0x20 V548
0x8ed: V551 = ISZERO 0x0
0x8ee: V552 = ISZERO 0x1
0x8ef: V553 = ISZERO 0x0
0x8f0: V554 = ISZERO 0x1
0x8f2: M[V550] = 0x0
0x8f3: V555 = 0x20
0x8f5: V556 = ADD 0x20 V550
0x8fb: V557 = 0x40
0x8fd: V558 = M[0x40]
0x900: V559 = SUB V556 V558
0x902: LOG V558 V559 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x903: V560 = 0x923
0x906: JUMP 0x923
---
Entry stack: [V10, 0x48f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48f, S0]

================================

Block 0x907
[0x907:0x922]
---
Predecessors: [0x80b]
Successors: [0x923]
---
0x907 JUMPDEST
0x908 PUSH1 0x0
0x90a PUSH1 0x7
0x90c PUSH1 0x0
0x90e PUSH2 0x100
0x911 EXP
0x912 DUP2
0x913 SLOAD
0x914 DUP2
0x915 PUSH1 0xff
0x917 MUL
0x918 NOT
0x919 AND
0x91a SWAP1
0x91b DUP4
0x91c ISZERO
0x91d ISZERO
0x91e MUL
0x91f OR
0x920 SWAP1
0x921 SSTORE
0x922 POP
---
0x907: JUMPDEST 
0x908: V561 = 0x0
0x90a: V562 = 0x7
0x90c: V563 = 0x0
0x90e: V564 = 0x100
0x911: V565 = EXP 0x100 0x0
0x913: V566 = S[0x7]
0x915: V567 = 0xff
0x917: V568 = MUL 0xff 0x1
0x918: V569 = NOT 0xff
0x919: V570 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V566
0x91c: V571 = ISZERO 0x0
0x91d: V572 = ISZERO 0x1
0x91e: V573 = MUL 0x0 0x1
0x91f: V574 = OR 0x0 V570
0x921: S[0x7] = V574
---
Entry stack: [V10, 0x48f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48f, S0]

================================

Block 0x923
[0x923:0x923]
---
Predecessors: [0x868, 0x907]
Successors: [0x924]
---
0x923 JUMPDEST
---
0x923: JUMPDEST 
---
Entry stack: [V10, 0x48f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48f, S0]

================================

Block 0x924
[0x924:0x924]
---
Predecessors: [0x805, 0x923]
Successors: [0x925]
---
0x924 JUMPDEST
---
0x924: JUMPDEST 
---
Entry stack: [V10, 0x48f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48f, S0]

================================

Block 0x925
[0x925:0x927]
---
Predecessors: [0x5ec, 0x924]
Successors: [0x48f]
---
0x925 JUMPDEST
0x926 POP
0x927 JUMP
---
0x925: JUMPDEST 
0x927: JUMP 0x48f
---
Entry stack: [V10, 0x48f, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x928
[0x928:0x953]
---
Predecessors: []
Successors: []
---
0x928 STOP
0x929 LOG1
0x92a PUSH6 0x627a7a723058
0x931 SHA3
0x932 MISSING 0xc7
0x933 SDIV
0x934 MISSING 0xcd
0x935 SWAP16
0x936 MISSING 0xdd
0x937 SLOAD
0x938 DUP1
0x939 MISSING 0xea
0x93a RETURNDATACOPY
0x93b PUSH24 0x753519a12c33c2769e4f2797e6756ba40793cd7778150029
---
0x928: STOP 
0x929: LOG S0 S1 S2
0x92a: V575 = 0x627a7a723058
0x931: V576 = SHA3 0x627a7a723058 S3
0x932: MISSING 0xc7
0x933: V577 = SDIV S0 S1
0x934: MISSING 0xcd
0x936: MISSING 0xdd
0x937: V578 = S[S0]
0x939: MISSING 0xea
0x93a: RETURNDATACOPY S0 S1 S2
0x93b: V579 = 0x753519a12c33c2769e4f2797e6756ba40793cd7778150029
---
Entry stack: []
Stack pops: 0
Stack additions: [V576, V577, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V578, V578, 0x753519a12c33c2769e4f2797e6756ba40793cd7778150029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x2cc
Exit block: 0x2df
Body: 0x2cc, 0x2d3, 0x2d7, 0x2df, 0x491, 0x49d, 0x4aa, 0x553, 0x56f

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x2e1
Exit block: 0x2f4
Body: 0x2e1, 0x2e8, 0x2ec, 0x2f4, 0x571

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x30a
Exit block: 0x31d
Body: 0x30a, 0x311, 0x315, 0x31d, 0x577

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x35f
Exit block: 0x372
Body: 0x35f, 0x366, 0x36a, 0x372, 0x59c

Function 4:
Public function signature: 0x70a08231
Entry block: 0x3b4
Exit block: 0x3eb
Body: 0x3b4, 0x3bb, 0x3bf, 0x3eb, 0x5c2

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x401
Exit block: 0x414
Body: 0x401, 0x408, 0x40c, 0x414, 0x5da

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x42a
Exit block: 0x43d
Body: 0x42a, 0x431, 0x435, 0x43d, 0x5e0

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x453
Exit block: 0x466
Body: 0x453, 0x45a, 0x45e, 0x466, 0x5e6

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x47c
Exit block: 0x48f
Body: 0x47c, 0x483, 0x487, 0x48f, 0x5ec, 0x5fa, 0x610, 0x6a0, 0x6da, 0x756, 0x79b, 0x79c, 0x79d, 0x7b4, 0x805, 0x80b, 0x868, 0x907, 0x923, 0x924, 0x925

Function 9:
Public fallback function
Entry block: 0x97
Exit block: 0x1f7
Body: 0x97, 0xb1, 0xb5, 0x160, 0x161, 0x1e2, 0x1e6, 0x1f3, 0x1f7

