Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6c5]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x27ebcf0e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6c5
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x27ebcf0e
0x20: V14 = EQ V12 0x27ebcf0e
0x21: V15 = 0x6c5
0x24: JUMPI 0x6c5 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x6f4]
---
0x25 DUP1
0x26 PUSH4 0x497fb5b9
0x2b EQ
0x2c PUSH2 0x6f4
0x2f JUMPI
---
0x26: V16 = 0x497fb5b9
0x2b: V17 = EQ 0x497fb5b9 V12
0x2c: V18 = 0x6f4
0x2f: JUMPI 0x6f4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x71b]
---
0x30 DUP1
0x31 PUSH4 0x519ee19e
0x36 EQ
0x37 PUSH2 0x71b
0x3a JUMPI
---
0x31: V19 = 0x519ee19e
0x36: V20 = EQ 0x519ee19e V12
0x37: V21 = 0x71b
0x3a: JUMPI 0x71b V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x740]
---
0x3b DUP1
0x3c PUSH4 0x78a90a59
0x41 EQ
0x42 PUSH2 0x740
0x45 JUMPI
---
0x3c: V22 = 0x78a90a59
0x41: V23 = EQ 0x78a90a59 V12
0x42: V24 = 0x740
0x45: JUMPI 0x740 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x765]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x765
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x765
0x50: JUMPI 0x765 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x794]
---
0x51 DUP1
0x52 PUSH4 0x96c5406d
0x57 EQ
0x58 PUSH2 0x794
0x5b JUMPI
---
0x52: V28 = 0x96c5406d
0x57: V29 = EQ 0x96c5406d V12
0x58: V30 = 0x794
0x5b: JUMPI 0x794 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x7b9]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x7b9
0x66 JUMPI
---
0x5d: V31 = 0xa035b1fe
0x62: V32 = EQ 0xa035b1fe V12
0x63: V33 = 0x7b9
0x66: JUMPI 0x7b9 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x844]
---
0x67 DUP1
0x68 PUSH4 0xabd2cc5f
0x6d EQ
0x6e PUSH2 0x844
0x71 JUMPI
---
0x68: V34 = 0xabd2cc5f
0x6d: V35 = EQ 0xabd2cc5f V12
0x6e: V36 = 0x844
0x71: JUMPI 0x844 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x86b]
---
0x72 DUP1
0x73 PUSH4 0xd39d8fce
0x78 EQ
0x79 PUSH2 0x86b
0x7c JUMPI
---
0x73: V37 = 0xd39d8fce
0x78: V38 = EQ 0xd39d8fce V12
0x79: V39 = 0x86b
0x7c: JUMPI 0x86b V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x890]
---
0x7d DUP1
0x7e PUSH4 0xf9081ba2
0x83 EQ
0x84 PUSH2 0x890
0x87 JUMPI
---
0x7e: V40 = 0xf9081ba2
0x83: V41 = EQ 0xf9081ba2 V12
0x84: V42 = 0x890
0x87: JUMPI 0x890 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x0, 0x7d]
Successors: [0x89]
---
0x88 JUMPDEST
---
0x88: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0xe1]
---
Predecessors: [0x88]
Successors: [0xe2, 0xe6]
---
0x89 JUMPDEST
0x8a PUSH1 0x0
0x8c DUP1
0x8d SLOAD
0x8e DUP2
0x8f SWAP1
0x90 DUP2
0x91 SWAP1
0x92 PUSH1 0x1
0x94 PUSH1 0xa0
0x96 PUSH1 0x2
0x98 EXP
0x99 SUB
0x9a AND
0x9b PUSH4 0x70a08231
0xa0 ADDRESS
0xa1 DUP4
0xa2 PUSH1 0x40
0xa4 MLOAD
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 MSTORE
0xa9 PUSH1 0x40
0xab MLOAD
0xac PUSH1 0xe0
0xae PUSH1 0x2
0xb0 EXP
0xb1 PUSH4 0xffffffff
0xb6 DUP5
0xb7 AND
0xb8 MUL
0xb9 DUP2
0xba MSTORE
0xbb PUSH1 0x1
0xbd PUSH1 0xa0
0xbf PUSH1 0x2
0xc1 EXP
0xc2 SUB
0xc3 SWAP1
0xc4 SWAP2
0xc5 AND
0xc6 PUSH1 0x4
0xc8 DUP3
0xc9 ADD
0xca MSTORE
0xcb PUSH1 0x24
0xcd ADD
0xce PUSH1 0x20
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 DUP4
0xd5 SUB
0xd6 DUP2
0xd7 PUSH1 0x0
0xd9 DUP8
0xda DUP1
0xdb EXTCODESIZE
0xdc ISZERO
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = 0x0
0x8d: V44 = S[0x0]
0x92: V45 = 0x1
0x94: V46 = 0xa0
0x96: V47 = 0x2
0x98: V48 = EXP 0x2 0xa0
0x99: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x9b: V51 = 0x70a08231
0xa0: V52 = ADDRESS
0xa2: V53 = 0x40
0xa4: V54 = M[0x40]
0xa5: V55 = 0x20
0xa7: V56 = ADD 0x20 V54
0xa8: M[V56] = 0x0
0xa9: V57 = 0x40
0xab: V58 = M[0x40]
0xac: V59 = 0xe0
0xae: V60 = 0x2
0xb0: V61 = EXP 0x2 0xe0
0xb1: V62 = 0xffffffff
0xb7: V63 = AND 0x70a08231 0xffffffff
0xb8: V64 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xba: M[V58] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbb: V65 = 0x1
0xbd: V66 = 0xa0
0xbf: V67 = 0x2
0xc1: V68 = EXP 0x2 0xa0
0xc2: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V70 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V71 = 0x4
0xc9: V72 = ADD V58 0x4
0xca: M[V72] = V70
0xcb: V73 = 0x24
0xcd: V74 = ADD 0x24 V58
0xce: V75 = 0x20
0xd0: V76 = 0x40
0xd2: V77 = M[0x40]
0xd5: V78 = SUB V74 V77
0xd7: V79 = 0x0
0xdb: V80 = EXTCODESIZE V50
0xdc: V81 = ISZERO V80
0xdd: V82 = ISZERO V81
0xde: V83 = 0xe6
0xe1: JUMPI 0xe6 V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]
Exit stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0x89]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V84 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]

================================

Block 0xe6
[0xe6:0xf2]
---
Predecessors: [0x89]
Successors: [0xf3, 0xf7]
---
0xe6 JUMPDEST
0xe7 PUSH2 0x2c6
0xea GAS
0xeb SUB
0xec CALL
0xed ISZERO
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xe6: JUMPDEST 
0xe7: V85 = 0x2c6
0xea: V86 = GAS
0xeb: V87 = SUB V86 0x2c6
0xec: V88 = CALL V87 V50 0x0 V77 V78 V77 0x20
0xed: V89 = ISZERO V88
0xee: V90 = ISZERO V89
0xef: V91 = 0xf7
0xf2: JUMPI 0xf7 V90
---
Entry stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xe6]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V92 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74]

================================

Block 0xf7
[0xf7:0x10d]
---
Predecessors: [0xe6]
Successors: [0x10e, 0x144]
---
0xf7 JUMPDEST
0xf8 POP
0xf9 POP
0xfa POP
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff MLOAD
0x100 PUSH1 0x9
0x102 SSTORE
0x103 POP
0x104 PUSH1 0x3
0x106 SLOAD
0x107 TIMESTAMP
0x108 LT
0x109 ISZERO
0x10a PUSH2 0x144
0x10d JUMPI
---
0xf7: JUMPDEST 
0xfb: V93 = 0x40
0xfd: V94 = M[0x40]
0xff: V95 = M[V94]
0x100: V96 = 0x9
0x102: S[0x9] = V95
0x104: V97 = 0x3
0x106: V98 = S[0x3]
0x107: V99 = TIMESTAMP
0x108: V100 = LT V99 V98
0x109: V101 = ISZERO V100
0x10a: V102 = 0x144
0x10d: JUMPI 0x144 V101
---
Entry stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x10e
[0x10e:0x13a]
---
Predecessors: [0xf7]
Successors: [0x13b, 0x13f]
---
0x10e PUSH1 0x1
0x110 PUSH1 0xa0
0x112 PUSH1 0x2
0x114 EXP
0x115 SUB
0x116 CALLER
0x117 AND
0x118 CALLVALUE
0x119 DUP1
0x11a ISZERO
0x11b PUSH2 0x8fc
0x11e MUL
0x11f SWAP1
0x120 PUSH1 0x40
0x122 MLOAD
0x123 PUSH1 0x0
0x125 PUSH1 0x40
0x127 MLOAD
0x128 DUP1
0x129 DUP4
0x12a SUB
0x12b DUP2
0x12c DUP6
0x12d DUP9
0x12e DUP9
0x12f CALL
0x130 SWAP4
0x131 POP
0x132 POP
0x133 POP
0x134 POP
0x135 ISZERO
0x136 ISZERO
0x137 PUSH2 0x13f
0x13a JUMPI
---
0x10e: V103 = 0x1
0x110: V104 = 0xa0
0x112: V105 = 0x2
0x114: V106 = EXP 0x2 0xa0
0x115: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x116: V108 = CALLER
0x117: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x118: V110 = CALLVALUE
0x11a: V111 = ISZERO V110
0x11b: V112 = 0x8fc
0x11e: V113 = MUL 0x8fc V111
0x120: V114 = 0x40
0x122: V115 = M[0x40]
0x123: V116 = 0x0
0x125: V117 = 0x40
0x127: V118 = M[0x40]
0x12a: V119 = SUB V115 V118
0x12f: V120 = CALL V113 V109 V110 V118 V119 V118 0x0
0x135: V121 = ISZERO V120
0x136: V122 = ISZERO V121
0x137: V123 = 0x13f
0x13a: JUMPI 0x13f V122
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x13b
[0x13b:0x13e]
---
Predecessors: [0x10e]
Successors: []
---
0x13b PUSH1 0x0
0x13d DUP1
0x13e REVERT
---
0x13b: V124 = 0x0
0x13e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x13f
[0x13f:0x143]
---
Predecessors: [0x10e, 0x180, 0x311, 0x49a]
Successors: [0x64c]
---
0x13f JUMPDEST
0x140 PUSH2 0x64c
0x143 JUMP
---
0x13f: JUMPDEST 
0x140: V125 = 0x64c
0x143: JUMP 0x64c
---
Entry stack: [V12, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, 0x0]

================================

Block 0x144
[0x144:0x14e]
---
Predecessors: [0xf7]
Successors: [0x14f, 0x305]
---
0x144 JUMPDEST
0x145 PUSH1 0x4
0x147 SLOAD
0x148 TIMESTAMP
0x149 GT
0x14a ISZERO
0x14b PUSH2 0x305
0x14e JUMPI
---
0x144: JUMPDEST 
0x145: V126 = 0x4
0x147: V127 = S[0x4]
0x148: V128 = TIMESTAMP
0x149: V129 = GT V128 V127
0x14a: V130 = ISZERO V129
0x14b: V131 = 0x305
0x14e: JUMPI 0x305 V130
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x14f
[0x14f:0x17b]
---
Predecessors: [0x144]
Successors: [0x17c, 0x180]
---
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 CALLER
0x158 AND
0x159 CALLVALUE
0x15a DUP1
0x15b ISZERO
0x15c PUSH2 0x8fc
0x15f MUL
0x160 SWAP1
0x161 PUSH1 0x40
0x163 MLOAD
0x164 PUSH1 0x0
0x166 PUSH1 0x40
0x168 MLOAD
0x169 DUP1
0x16a DUP4
0x16b SUB
0x16c DUP2
0x16d DUP6
0x16e DUP9
0x16f DUP9
0x170 CALL
0x171 SWAP4
0x172 POP
0x173 POP
0x174 POP
0x175 POP
0x176 ISZERO
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x14f: V132 = 0x1
0x151: V133 = 0xa0
0x153: V134 = 0x2
0x155: V135 = EXP 0x2 0xa0
0x156: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157: V137 = CALLER
0x158: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x159: V139 = CALLVALUE
0x15b: V140 = ISZERO V139
0x15c: V141 = 0x8fc
0x15f: V142 = MUL 0x8fc V140
0x161: V143 = 0x40
0x163: V144 = M[0x40]
0x164: V145 = 0x0
0x166: V146 = 0x40
0x168: V147 = M[0x40]
0x16b: V148 = SUB V144 V147
0x170: V149 = CALL V142 V138 V139 V147 V148 V147 0x0
0x176: V150 = ISZERO V149
0x177: V151 = ISZERO V150
0x178: V152 = 0x180
0x17b: JUMPI 0x180 V151
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x14f]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V153 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x180
[0x180:0x191]
---
Predecessors: [0x14f]
Successors: [0x13f, 0x192]
---
0x180 JUMPDEST
0x181 PUSH1 0xa
0x183 SLOAD
0x184 PUSH2 0x100
0x187 SWAP1
0x188 DIV
0x189 PUSH1 0xff
0x18b AND
0x18c ISZERO
0x18d ISZERO
0x18e PUSH2 0x13f
0x191 JUMPI
---
0x180: JUMPDEST 
0x181: V154 = 0xa
0x183: V155 = S[0xa]
0x184: V156 = 0x100
0x188: V157 = DIV V155 0x100
0x189: V158 = 0xff
0x18b: V159 = AND 0xff V157
0x18c: V160 = ISZERO V159
0x18d: V161 = ISZERO V160
0x18e: V162 = 0x13f
0x191: JUMPI 0x13f V161
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x192
[0x192:0x1f8]
---
Predecessors: [0x180]
Successors: [0x1f9, 0x1fd]
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 SLOAD
0x196 PUSH1 0x2
0x198 SLOAD
0x199 PUSH1 0x1
0x19b PUSH1 0xa0
0x19d PUSH1 0x2
0x19f EXP
0x1a0 SUB
0x1a1 SWAP2
0x1a2 DUP3
0x1a3 AND
0x1a4 SWAP3
0x1a5 PUSH4 0xa9059cbb
0x1aa SWAP3
0x1ab SWAP1
0x1ac SWAP2
0x1ad AND
0x1ae SWAP1
0x1af DUP4
0x1b0 SWAP1
0x1b1 PUSH4 0x70a08231
0x1b6 SWAP1
0x1b7 ADDRESS
0x1b8 SWAP1
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc PUSH1 0x20
0x1be ADD
0x1bf MSTORE
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 PUSH1 0xe0
0x1c5 PUSH1 0x2
0x1c7 EXP
0x1c8 PUSH4 0xffffffff
0x1cd DUP5
0x1ce AND
0x1cf MUL
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x1
0x1d4 PUSH1 0xa0
0x1d6 PUSH1 0x2
0x1d8 EXP
0x1d9 SUB
0x1da SWAP1
0x1db SWAP2
0x1dc AND
0x1dd PUSH1 0x4
0x1df DUP3
0x1e0 ADD
0x1e1 MSTORE
0x1e2 PUSH1 0x24
0x1e4 ADD
0x1e5 PUSH1 0x20
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea DUP1
0x1eb DUP4
0x1ec SUB
0x1ed DUP2
0x1ee PUSH1 0x0
0x1f0 DUP8
0x1f1 DUP1
0x1f2 EXTCODESIZE
0x1f3 ISZERO
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x192: V163 = 0x0
0x195: V164 = S[0x0]
0x196: V165 = 0x2
0x198: V166 = S[0x2]
0x199: V167 = 0x1
0x19b: V168 = 0xa0
0x19d: V169 = 0x2
0x19f: V170 = EXP 0x2 0xa0
0x1a0: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a3: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1a5: V173 = 0xa9059cbb
0x1ad: V174 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V175 = 0x70a08231
0x1b7: V176 = ADDRESS
0x1b9: V177 = 0x40
0x1bb: V178 = M[0x40]
0x1bc: V179 = 0x20
0x1be: V180 = ADD 0x20 V178
0x1bf: M[V180] = 0x0
0x1c0: V181 = 0x40
0x1c2: V182 = M[0x40]
0x1c3: V183 = 0xe0
0x1c5: V184 = 0x2
0x1c7: V185 = EXP 0x2 0xe0
0x1c8: V186 = 0xffffffff
0x1ce: V187 = AND 0x70a08231 0xffffffff
0x1cf: V188 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x1d1: M[V182] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1d2: V189 = 0x1
0x1d4: V190 = 0xa0
0x1d6: V191 = 0x2
0x1d8: V192 = EXP 0x2 0xa0
0x1d9: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dc: V194 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x1dd: V195 = 0x4
0x1e0: V196 = ADD V182 0x4
0x1e1: M[V196] = V194
0x1e2: V197 = 0x24
0x1e4: V198 = ADD 0x24 V182
0x1e5: V199 = 0x20
0x1e7: V200 = 0x40
0x1e9: V201 = M[0x40]
0x1ec: V202 = SUB V198 V201
0x1ee: V203 = 0x0
0x1f2: V204 = EXTCODESIZE V172
0x1f3: V205 = ISZERO V204
0x1f4: V206 = ISZERO V205
0x1f5: V207 = 0x1fd
0x1f8: JUMPI 0x1fd V206
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V172, 0xa9059cbb, V174, V172, 0x70a08231, V198, 0x20, V201, V202, V201, 0x0, V172]
Exit stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V174, V172, 0x70a08231, V198, 0x20, V201, V202, V201, 0x0, V172]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x192]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V208 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V174, V172, 0x70a08231, V198, 0x20, V201, V202, V201, 0x0, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V174, V172, 0x70a08231, V198, 0x20, V201, V202, V201, 0x0, V172]

================================

Block 0x1fd
[0x1fd:0x209]
---
Predecessors: [0x192]
Successors: [0x20a, 0x20e]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x2c6
0x201 GAS
0x202 SUB
0x203 CALL
0x204 ISZERO
0x205 ISZERO
0x206 PUSH2 0x20e
0x209 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V209 = 0x2c6
0x201: V210 = GAS
0x202: V211 = SUB V210 0x2c6
0x203: V212 = CALL V211 V172 0x0 V201 V202 V201 0x20
0x204: V213 = ISZERO V212
0x205: V214 = ISZERO V213
0x206: V215 = 0x20e
0x209: JUMPI 0x20e V214
---
Entry stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V174, V172, 0x70a08231, V198, 0x20, V201, V202, V201, 0x0, V172]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V174, V172, 0x70a08231, V198]

================================

Block 0x20a
[0x20a:0x20d]
---
Predecessors: [0x1fd]
Successors: []
---
0x20a PUSH1 0x0
0x20c DUP1
0x20d REVERT
---
0x20a: V216 = 0x0
0x20d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V174, V172, 0x70a08231, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V174, V172, 0x70a08231, V198]

================================

Block 0x20e
[0x20e:0x256]
---
Predecessors: [0x1fd]
Successors: [0x257, 0x25b]
---
0x20e JUMPDEST
0x20f POP
0x210 POP
0x211 POP
0x212 PUSH1 0x40
0x214 MLOAD
0x215 DUP1
0x216 MLOAD
0x217 SWAP1
0x218 POP
0x219 PUSH1 0x40
0x21b MLOAD
0x21c PUSH1 0xe0
0x21e PUSH1 0x2
0x220 EXP
0x221 PUSH4 0xffffffff
0x226 DUP6
0x227 AND
0x228 MUL
0x229 DUP2
0x22a MSTORE
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 SWAP1
0x234 SWAP3
0x235 AND
0x236 PUSH1 0x4
0x238 DUP4
0x239 ADD
0x23a MSTORE
0x23b PUSH1 0x24
0x23d DUP3
0x23e ADD
0x23f MSTORE
0x240 PUSH1 0x44
0x242 ADD
0x243 PUSH1 0x0
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 DUP4
0x24a SUB
0x24b DUP2
0x24c PUSH1 0x0
0x24e DUP8
0x24f DUP1
0x250 EXTCODESIZE
0x251 ISZERO
0x252 ISZERO
0x253 PUSH2 0x25b
0x256 JUMPI
---
0x20e: JUMPDEST 
0x212: V217 = 0x40
0x214: V218 = M[0x40]
0x216: V219 = M[V218]
0x219: V220 = 0x40
0x21b: V221 = M[0x40]
0x21c: V222 = 0xe0
0x21e: V223 = 0x2
0x220: V224 = EXP 0x2 0xe0
0x221: V225 = 0xffffffff
0x227: V226 = AND 0xa9059cbb 0xffffffff
0x228: V227 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x22a: M[V221] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x22b: V228 = 0x1
0x22d: V229 = 0xa0
0x22f: V230 = 0x2
0x231: V231 = EXP 0x2 0xa0
0x232: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V233 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x236: V234 = 0x4
0x239: V235 = ADD V221 0x4
0x23a: M[V235] = V233
0x23b: V236 = 0x24
0x23e: V237 = ADD V221 0x24
0x23f: M[V237] = V219
0x240: V238 = 0x44
0x242: V239 = ADD 0x44 V221
0x243: V240 = 0x0
0x245: V241 = 0x40
0x247: V242 = M[0x40]
0x24a: V243 = SUB V239 V242
0x24c: V244 = 0x0
0x250: V245 = EXTCODESIZE V172
0x251: V246 = ISZERO V245
0x252: V247 = ISZERO V246
0x253: V248 = 0x25b
0x256: JUMPI 0x25b V247
---
Entry stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V174, V172, 0x70a08231, V198]
Stack pops: 6
Stack additions: [S5, S4, V239, 0x0, V242, V243, V242, 0x0, S5]
Exit stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V239, 0x0, V242, V243, V242, 0x0, V172]

================================

Block 0x257
[0x257:0x25a]
---
Predecessors: [0x20e]
Successors: []
---
0x257 PUSH1 0x0
0x259 DUP1
0x25a REVERT
---
0x257: V249 = 0x0
0x25a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V239, 0x0, V242, V243, V242, 0x0, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V239, 0x0, V242, V243, V242, 0x0, V172]

================================

Block 0x25b
[0x25b:0x267]
---
Predecessors: [0x20e]
Successors: [0x268, 0x26c]
---
0x25b JUMPDEST
0x25c PUSH2 0x2c6
0x25f GAS
0x260 SUB
0x261 CALL
0x262 ISZERO
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x25b: JUMPDEST 
0x25c: V250 = 0x2c6
0x25f: V251 = GAS
0x260: V252 = SUB V251 0x2c6
0x261: V253 = CALL V252 V172 0x0 V242 V243 V242 0x0
0x262: V254 = ISZERO V253
0x263: V255 = ISZERO V254
0x264: V256 = 0x26c
0x267: JUMPI 0x26c V255
---
Entry stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V239, 0x0, V242, V243, V242, 0x0, V172]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V239]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x25b]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V257 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V239]

================================

Block 0x26c
[0x26c:0x2c5]
---
Predecessors: [0x25b]
Successors: [0x2c6, 0x2ca]
---
0x26c JUMPDEST
0x26d POP
0x26e POP
0x26f PUSH1 0x0
0x271 DUP1
0x272 SLOAD
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b AND
0x27c SWAP2
0x27d POP
0x27e PUSH4 0x70a08231
0x283 SWAP1
0x284 ADDRESS
0x285 SWAP1
0x286 PUSH1 0x40
0x288 MLOAD
0x289 PUSH1 0x20
0x28b ADD
0x28c MSTORE
0x28d PUSH1 0x40
0x28f MLOAD
0x290 PUSH1 0xe0
0x292 PUSH1 0x2
0x294 EXP
0x295 PUSH4 0xffffffff
0x29a DUP5
0x29b AND
0x29c MUL
0x29d DUP2
0x29e MSTORE
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 SWAP1
0x2a8 SWAP2
0x2a9 AND
0x2aa PUSH1 0x4
0x2ac DUP3
0x2ad ADD
0x2ae MSTORE
0x2af PUSH1 0x24
0x2b1 ADD
0x2b2 PUSH1 0x20
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 DUP1
0x2b8 DUP4
0x2b9 SUB
0x2ba DUP2
0x2bb PUSH1 0x0
0x2bd DUP8
0x2be DUP1
0x2bf EXTCODESIZE
0x2c0 ISZERO
0x2c1 ISZERO
0x2c2 PUSH2 0x2ca
0x2c5 JUMPI
---
0x26c: JUMPDEST 
0x26f: V258 = 0x0
0x272: V259 = S[0x0]
0x273: V260 = 0x1
0x275: V261 = 0xa0
0x277: V262 = 0x2
0x279: V263 = EXP 0x2 0xa0
0x27a: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27b: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x27e: V266 = 0x70a08231
0x284: V267 = ADDRESS
0x286: V268 = 0x40
0x288: V269 = M[0x40]
0x289: V270 = 0x20
0x28b: V271 = ADD 0x20 V269
0x28c: M[V271] = 0x0
0x28d: V272 = 0x40
0x28f: V273 = M[0x40]
0x290: V274 = 0xe0
0x292: V275 = 0x2
0x294: V276 = EXP 0x2 0xe0
0x295: V277 = 0xffffffff
0x29b: V278 = AND 0x70a08231 0xffffffff
0x29c: V279 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x29e: M[V273] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x29f: V280 = 0x1
0x2a1: V281 = 0xa0
0x2a3: V282 = 0x2
0x2a5: V283 = EXP 0x2 0xa0
0x2a6: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a9: V285 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V286 = 0x4
0x2ad: V287 = ADD V273 0x4
0x2ae: M[V287] = V285
0x2af: V288 = 0x24
0x2b1: V289 = ADD 0x24 V273
0x2b2: V290 = 0x20
0x2b4: V291 = 0x40
0x2b6: V292 = M[0x40]
0x2b9: V293 = SUB V289 V292
0x2bb: V294 = 0x0
0x2bf: V295 = EXTCODESIZE V265
0x2c0: V296 = ISZERO V295
0x2c1: V297 = ISZERO V296
0x2c2: V298 = 0x2ca
0x2c5: JUMPI 0x2ca V297
---
Entry stack: [V12, 0x0, 0x0, 0x0, V172, 0xa9059cbb, V239]
Stack pops: 3
Stack additions: [V265, 0x70a08231, V289, 0x20, V292, V293, V292, 0x0, V265]
Exit stack: [V12, 0x0, 0x0, 0x0, V265, 0x70a08231, V289, 0x20, V292, V293, V292, 0x0, V265]

================================

Block 0x2c6
[0x2c6:0x2c9]
---
Predecessors: [0x26c]
Successors: []
---
0x2c6 PUSH1 0x0
0x2c8 DUP1
0x2c9 REVERT
---
0x2c6: V299 = 0x0
0x2c9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V265, 0x70a08231, V289, 0x20, V292, V293, V292, 0x0, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V265, 0x70a08231, V289, 0x20, V292, V293, V292, 0x0, V265]

================================

Block 0x2ca
[0x2ca:0x2d6]
---
Predecessors: [0x26c]
Successors: [0x2d7, 0x2db]
---
0x2ca JUMPDEST
0x2cb PUSH2 0x2c6
0x2ce GAS
0x2cf SUB
0x2d0 CALL
0x2d1 ISZERO
0x2d2 ISZERO
0x2d3 PUSH2 0x2db
0x2d6 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V300 = 0x2c6
0x2ce: V301 = GAS
0x2cf: V302 = SUB V301 0x2c6
0x2d0: V303 = CALL V302 V265 0x0 V292 V293 V292 0x20
0x2d1: V304 = ISZERO V303
0x2d2: V305 = ISZERO V304
0x2d3: V306 = 0x2db
0x2d6: JUMPI 0x2db V305
---
Entry stack: [V12, 0x0, 0x0, 0x0, V265, 0x70a08231, V289, 0x20, V292, V293, V292, 0x0, V265]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V265, 0x70a08231, V289]

================================

Block 0x2d7
[0x2d7:0x2da]
---
Predecessors: [0x2ca]
Successors: []
---
0x2d7 PUSH1 0x0
0x2d9 DUP1
0x2da REVERT
---
0x2d7: V307 = 0x0
0x2da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V265, 0x70a08231, V289]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V265, 0x70a08231, V289]

================================

Block 0x2db
[0x2db:0x2ff]
---
Predecessors: [0x2ca]
Successors: [0x300]
---
0x2db JUMPDEST
0x2dc POP
0x2dd POP
0x2de POP
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 MLOAD
0x2e4 PUSH1 0x9
0x2e6 SSTORE
0x2e7 POP
0x2e8 PUSH1 0xa
0x2ea DUP1
0x2eb SLOAD
0x2ec PUSH1 0xff
0x2ee NOT
0x2ef PUSH2 0xff00
0x2f2 NOT
0x2f3 SWAP1
0x2f4 SWAP2
0x2f5 AND
0x2f6 PUSH2 0x100
0x2f9 OR
0x2fa AND
0x2fb PUSH1 0x1
0x2fd OR
0x2fe SWAP1
0x2ff SSTORE
---
0x2db: JUMPDEST 
0x2df: V308 = 0x40
0x2e1: V309 = M[0x40]
0x2e3: V310 = M[V309]
0x2e4: V311 = 0x9
0x2e6: S[0x9] = V310
0x2e8: V312 = 0xa
0x2eb: V313 = S[0xa]
0x2ec: V314 = 0xff
0x2ee: V315 = NOT 0xff
0x2ef: V316 = 0xff00
0x2f2: V317 = NOT 0xff00
0x2f5: V318 = AND V313 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x2f6: V319 = 0x100
0x2f9: V320 = OR 0x100 V318
0x2fa: V321 = AND V320 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x2fb: V322 = 0x1
0x2fd: V323 = OR 0x1 V321
0x2ff: S[0xa] = V323
---
Entry stack: [V12, 0x0, 0x0, 0x0, V265, 0x70a08231, V289]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x300
[0x300:0x304]
---
Predecessors: [0x2db]
Successors: [0x64c]
---
0x300 JUMPDEST
0x301 PUSH2 0x64c
0x304 JUMP
---
0x300: JUMPDEST 
0x301: V324 = 0x64c
0x304: JUMP 0x64c
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x305
[0x305:0x310]
---
Predecessors: [0x144]
Successors: [0x311, 0x347]
---
0x305 JUMPDEST
0x306 PUSH1 0xa
0x308 SLOAD
0x309 PUSH1 0xff
0x30b AND
0x30c ISZERO
0x30d PUSH2 0x347
0x310 JUMPI
---
0x305: JUMPDEST 
0x306: V325 = 0xa
0x308: V326 = S[0xa]
0x309: V327 = 0xff
0x30b: V328 = AND 0xff V326
0x30c: V329 = ISZERO V328
0x30d: V330 = 0x347
0x310: JUMPI 0x347 V329
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x311
[0x311:0x33d]
---
Predecessors: [0x305]
Successors: [0x13f, 0x33e]
---
0x311 PUSH1 0x1
0x313 PUSH1 0xa0
0x315 PUSH1 0x2
0x317 EXP
0x318 SUB
0x319 CALLER
0x31a AND
0x31b CALLVALUE
0x31c DUP1
0x31d ISZERO
0x31e PUSH2 0x8fc
0x321 MUL
0x322 SWAP1
0x323 PUSH1 0x40
0x325 MLOAD
0x326 PUSH1 0x0
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c DUP4
0x32d SUB
0x32e DUP2
0x32f DUP6
0x330 DUP9
0x331 DUP9
0x332 CALL
0x333 SWAP4
0x334 POP
0x335 POP
0x336 POP
0x337 POP
0x338 ISZERO
0x339 ISZERO
0x33a PUSH2 0x13f
0x33d JUMPI
---
0x311: V331 = 0x1
0x313: V332 = 0xa0
0x315: V333 = 0x2
0x317: V334 = EXP 0x2 0xa0
0x318: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x319: V336 = CALLER
0x31a: V337 = AND V336 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V338 = CALLVALUE
0x31d: V339 = ISZERO V338
0x31e: V340 = 0x8fc
0x321: V341 = MUL 0x8fc V339
0x323: V342 = 0x40
0x325: V343 = M[0x40]
0x326: V344 = 0x0
0x328: V345 = 0x40
0x32a: V346 = M[0x40]
0x32d: V347 = SUB V343 V346
0x332: V348 = CALL V341 V337 V338 V346 V347 V346 0x0
0x338: V349 = ISZERO V348
0x339: V350 = ISZERO V349
0x33a: V351 = 0x13f
0x33d: JUMPI 0x13f V350
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x33e
[0x33e:0x341]
---
Predecessors: [0x311]
Successors: []
---
0x33e PUSH1 0x0
0x340 DUP1
0x341 REVERT
---
0x33e: V352 = 0x0
0x341: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x342
[0x342:0x346]
---
Predecessors: []
Successors: [0x64c]
---
0x342 JUMPDEST
0x343 PUSH2 0x64c
0x346 JUMP
---
0x342: JUMPDEST 
0x343: V353 = 0x64c
0x346: JUMP 0x64c
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x347
[0x347:0x355]
---
Predecessors: [0x305]
Successors: [0x356, 0x357]
---
0x347 JUMPDEST
0x348 PUSH1 0x7
0x34a SLOAD
0x34b PUSH1 0x6
0x34d SLOAD
0x34e CALLVALUE
0x34f DUP2
0x350 ISZERO
0x351 ISZERO
0x352 PUSH2 0x357
0x355 JUMPI
---
0x347: JUMPDEST 
0x348: V354 = 0x7
0x34a: V355 = S[0x7]
0x34b: V356 = 0x6
0x34d: V357 = S[0x6]
0x34e: V358 = CALLVALUE
0x350: V359 = ISZERO V357
0x351: V360 = ISZERO V359
0x352: V361 = 0x357
0x355: JUMPI 0x357 V360
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V355, V357, V358]
Exit stack: [V12, 0x0, 0x0, 0x0, V355, V357, V358]

================================

Block 0x356
[0x356:0x356]
---
Predecessors: [0x347]
Successors: []
---
0x356 INVALID
---
0x356: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V355, V357, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V355, V357, V358]

================================

Block 0x357
[0x357:0x363]
---
Predecessors: [0x347]
Successors: [0x364, 0x395]
---
0x357 JUMPDEST
0x358 DIV
0x359 MUL
0x35a SWAP3
0x35b POP
0x35c PUSH1 0x0
0x35e DUP4
0x35f GT
0x360 PUSH2 0x395
0x363 JUMPI
---
0x357: JUMPDEST 
0x358: V362 = DIV V358 V357
0x359: V363 = MUL V362 V355
0x35c: V364 = 0x0
0x35f: V365 = GT V363 0x0
0x360: V366 = 0x395
0x363: JUMPI 0x395 V365
---
Entry stack: [V12, 0x0, 0x0, 0x0, V355, V357, V358]
Stack pops: 6
Stack additions: [V363, S4, S3]
Exit stack: [V12, V363, 0x0, 0x0]

================================

Block 0x364
[0x364:0x390]
---
Predecessors: [0x357]
Successors: [0x391, 0x395]
---
0x364 PUSH1 0x1
0x366 PUSH1 0xa0
0x368 PUSH1 0x2
0x36a EXP
0x36b SUB
0x36c CALLER
0x36d AND
0x36e CALLVALUE
0x36f DUP1
0x370 ISZERO
0x371 PUSH2 0x8fc
0x374 MUL
0x375 SWAP1
0x376 PUSH1 0x40
0x378 MLOAD
0x379 PUSH1 0x0
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP1
0x37f DUP4
0x380 SUB
0x381 DUP2
0x382 DUP6
0x383 DUP9
0x384 DUP9
0x385 CALL
0x386 SWAP4
0x387 POP
0x388 POP
0x389 POP
0x38a POP
0x38b ISZERO
0x38c ISZERO
0x38d PUSH2 0x395
0x390 JUMPI
---
0x364: V367 = 0x1
0x366: V368 = 0xa0
0x368: V369 = 0x2
0x36a: V370 = EXP 0x2 0xa0
0x36b: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36c: V372 = CALLER
0x36d: V373 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V374 = CALLVALUE
0x370: V375 = ISZERO V374
0x371: V376 = 0x8fc
0x374: V377 = MUL 0x8fc V375
0x376: V378 = 0x40
0x378: V379 = M[0x40]
0x379: V380 = 0x0
0x37b: V381 = 0x40
0x37d: V382 = M[0x40]
0x380: V383 = SUB V379 V382
0x385: V384 = CALL V377 V373 V374 V382 V383 V382 0x0
0x38b: V385 = ISZERO V384
0x38c: V386 = ISZERO V385
0x38d: V387 = 0x395
0x390: JUMPI 0x395 V386
---
Entry stack: [V12, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, 0x0, 0x0]

================================

Block 0x391
[0x391:0x394]
---
Predecessors: [0x364]
Successors: []
---
0x391 PUSH1 0x0
0x393 DUP1
0x394 REVERT
---
0x391: V388 = 0x0
0x394: REVERT 0x0 0x0
---
Entry stack: [V12, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, 0x0, 0x0]

================================

Block 0x395
[0x395:0x395]
---
Predecessors: [0x357, 0x364]
Successors: [0x396]
---
0x395 JUMPDEST
---
0x395: JUMPDEST 
---
Entry stack: [V12, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, 0x0, 0x0]

================================

Block 0x396
[0x396:0x39e]
---
Predecessors: [0x395]
Successors: [0x39f, 0x3a3]
---
0x396 JUMPDEST
0x397 PUSH1 0x0
0x399 DUP4
0x39a GT
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x396: JUMPDEST 
0x397: V389 = 0x0
0x39a: V390 = GT V363 0x0
0x39b: V391 = 0x3a3
0x39e: JUMPI 0x3a3 V390
---
Entry stack: [V12, V363, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, V363, 0x0, 0x0]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x396]
Successors: []
---
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 REVERT
---
0x39f: V392 = 0x0
0x3a2: REVERT 0x0 0x0
---
Entry stack: [V12, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, 0x0, 0x0]

================================

Block 0x3a3
[0x3a3:0x3b2]
---
Predecessors: [0x396]
Successors: [0x3b3, 0x3b4]
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0x7
0x3a6 SLOAD
0x3a7 PUSH1 0x6
0x3a9 SLOAD
0x3aa DUP5
0x3ab MUL
0x3ac DUP2
0x3ad ISZERO
0x3ae ISZERO
0x3af PUSH2 0x3b4
0x3b2 JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V393 = 0x7
0x3a6: V394 = S[0x7]
0x3a7: V395 = 0x6
0x3a9: V396 = S[0x6]
0x3ab: V397 = MUL V363 V396
0x3ad: V398 = ISZERO V394
0x3ae: V399 = ISZERO V398
0x3af: V400 = 0x3b4
0x3b2: JUMPI 0x3b4 V399
---
Entry stack: [V12, V363, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V394, V397]
Exit stack: [V12, V363, 0x0, 0x0, V394, V397]

================================

Block 0x3b3
[0x3b3:0x3b3]
---
Predecessors: [0x3a3]
Successors: []
---
0x3b3 INVALID
---
0x3b3: INVALID 
---
Entry stack: [V12, V363, 0x0, 0x0, V394, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, 0x0, 0x0, V394, V397]

================================

Block 0x3b4
[0x3b4:0x3c2]
---
Predecessors: [0x3a3]
Successors: [0x3c3, 0x4c9]
---
0x3b4 JUMPDEST
0x3b5 DIV
0x3b6 SWAP2
0x3b7 POP
0x3b8 DUP3
0x3b9 PUSH1 0x9
0x3bb SLOAD
0x3bc LT
0x3bd ISZERO
0x3be ISZERO
0x3bf PUSH2 0x4c9
0x3c2 JUMPI
---
0x3b4: JUMPDEST 
0x3b5: V401 = DIV V397 V394
0x3b9: V402 = 0x9
0x3bb: V403 = S[0x9]
0x3bc: V404 = LT V403 V363
0x3bd: V405 = ISZERO V404
0x3be: V406 = ISZERO V405
0x3bf: V407 = 0x4c9
0x3c2: JUMPI 0x4c9 V406
---
Entry stack: [V12, V363, 0x0, 0x0, V394, V397]
Stack pops: 5
Stack additions: [S4, V401, S2]
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x3c3
[0x3c3:0x3f0]
---
Predecessors: [0x3b4]
Successors: [0x3f1, 0x3f5]
---
0x3c3 PUSH1 0x1
0x3c5 SLOAD
0x3c6 PUSH1 0x1
0x3c8 PUSH1 0xa0
0x3ca PUSH1 0x2
0x3cc EXP
0x3cd SUB
0x3ce AND
0x3cf DUP3
0x3d0 ISZERO
0x3d1 PUSH2 0x8fc
0x3d4 MUL
0x3d5 DUP4
0x3d6 PUSH1 0x40
0x3d8 MLOAD
0x3d9 PUSH1 0x0
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de DUP1
0x3df DUP4
0x3e0 SUB
0x3e1 DUP2
0x3e2 DUP6
0x3e3 DUP9
0x3e4 DUP9
0x3e5 CALL
0x3e6 SWAP4
0x3e7 POP
0x3e8 POP
0x3e9 POP
0x3ea POP
0x3eb ISZERO
0x3ec ISZERO
0x3ed PUSH2 0x3f5
0x3f0 JUMPI
---
0x3c3: V408 = 0x1
0x3c5: V409 = S[0x1]
0x3c6: V410 = 0x1
0x3c8: V411 = 0xa0
0x3ca: V412 = 0x2
0x3cc: V413 = EXP 0x2 0xa0
0x3cd: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ce: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x3d0: V416 = ISZERO V401
0x3d1: V417 = 0x8fc
0x3d4: V418 = MUL 0x8fc V416
0x3d6: V419 = 0x40
0x3d8: V420 = M[0x40]
0x3d9: V421 = 0x0
0x3db: V422 = 0x40
0x3dd: V423 = M[0x40]
0x3e0: V424 = SUB V420 V423
0x3e5: V425 = CALL V418 V415 V401 V423 V424 V423 0x0
0x3eb: V426 = ISZERO V425
0x3ec: V427 = ISZERO V426
0x3ed: V428 = 0x3f5
0x3f0: JUMPI 0x3f5 V427
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x3f1
[0x3f1:0x3f4]
---
Predecessors: [0x3c3]
Successors: []
---
0x3f1 PUSH1 0x0
0x3f3 DUP1
0x3f4 REVERT
---
0x3f1: V429 = 0x0
0x3f4: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x3f5
[0x3f5:0x3fd]
---
Predecessors: [0x3c3]
Successors: [0x3fe, 0x432]
---
0x3f5 JUMPDEST
0x3f6 DUP2
0x3f7 CALLVALUE
0x3f8 GT
0x3f9 ISZERO
0x3fa PUSH2 0x432
0x3fd JUMPI
---
0x3f5: JUMPDEST 
0x3f7: V430 = CALLVALUE
0x3f8: V431 = GT V430 V401
0x3f9: V432 = ISZERO V431
0x3fa: V433 = 0x432
0x3fd: JUMPI 0x432 V432
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x3fe
[0x3fe:0x42d]
---
Predecessors: [0x3f5]
Successors: [0x42e, 0x432]
---
0x3fe CALLER
0x3ff PUSH1 0x1
0x401 PUSH1 0xa0
0x403 PUSH1 0x2
0x405 EXP
0x406 SUB
0x407 AND
0x408 PUSH2 0x8fc
0x40b DUP4
0x40c CALLVALUE
0x40d SUB
0x40e SWAP1
0x40f DUP2
0x410 ISZERO
0x411 MUL
0x412 SWAP1
0x413 PUSH1 0x40
0x415 MLOAD
0x416 PUSH1 0x0
0x418 PUSH1 0x40
0x41a MLOAD
0x41b DUP1
0x41c DUP4
0x41d SUB
0x41e DUP2
0x41f DUP6
0x420 DUP9
0x421 DUP9
0x422 CALL
0x423 SWAP4
0x424 POP
0x425 POP
0x426 POP
0x427 POP
0x428 ISZERO
0x429 ISZERO
0x42a PUSH2 0x432
0x42d JUMPI
---
0x3fe: V434 = CALLER
0x3ff: V435 = 0x1
0x401: V436 = 0xa0
0x403: V437 = 0x2
0x405: V438 = EXP 0x2 0xa0
0x406: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x407: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x408: V441 = 0x8fc
0x40c: V442 = CALLVALUE
0x40d: V443 = SUB V442 V401
0x410: V444 = ISZERO V443
0x411: V445 = MUL V444 0x8fc
0x413: V446 = 0x40
0x415: V447 = M[0x40]
0x416: V448 = 0x0
0x418: V449 = 0x40
0x41a: V450 = M[0x40]
0x41d: V451 = SUB V447 V450
0x422: V452 = CALL V445 V440 V443 V450 V451 V450 0x0
0x428: V453 = ISZERO V452
0x429: V454 = ISZERO V453
0x42a: V455 = 0x432
0x42d: JUMPI 0x432 V454
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x42e
[0x42e:0x431]
---
Predecessors: [0x3fe]
Successors: []
---
0x42e PUSH1 0x0
0x430 DUP1
0x431 REVERT
---
0x42e: V456 = 0x0
0x431: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x432
[0x432:0x432]
---
Predecessors: [0x3f5, 0x3fe]
Successors: [0x433]
---
0x432 JUMPDEST
---
0x432: JUMPDEST 
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x433
[0x433:0x484]
---
Predecessors: [0x432]
Successors: [0x485, 0x489]
---
0x433 JUMPDEST
0x434 PUSH1 0x0
0x436 SLOAD
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f AND
0x440 PUSH4 0xa9059cbb
0x445 CALLER
0x446 DUP6
0x447 PUSH1 0x40
0x449 MLOAD
0x44a PUSH1 0xe0
0x44c PUSH1 0x2
0x44e EXP
0x44f PUSH4 0xffffffff
0x454 DUP6
0x455 AND
0x456 MUL
0x457 DUP2
0x458 MSTORE
0x459 PUSH1 0x1
0x45b PUSH1 0xa0
0x45d PUSH1 0x2
0x45f EXP
0x460 SUB
0x461 SWAP1
0x462 SWAP3
0x463 AND
0x464 PUSH1 0x4
0x466 DUP4
0x467 ADD
0x468 MSTORE
0x469 PUSH1 0x24
0x46b DUP3
0x46c ADD
0x46d MSTORE
0x46e PUSH1 0x44
0x470 ADD
0x471 PUSH1 0x0
0x473 PUSH1 0x40
0x475 MLOAD
0x476 DUP1
0x477 DUP4
0x478 SUB
0x479 DUP2
0x47a PUSH1 0x0
0x47c DUP8
0x47d DUP1
0x47e EXTCODESIZE
0x47f ISZERO
0x480 ISZERO
0x481 PUSH2 0x489
0x484 JUMPI
---
0x433: JUMPDEST 
0x434: V457 = 0x0
0x436: V458 = S[0x0]
0x437: V459 = 0x1
0x439: V460 = 0xa0
0x43b: V461 = 0x2
0x43d: V462 = EXP 0x2 0xa0
0x43e: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43f: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x440: V465 = 0xa9059cbb
0x445: V466 = CALLER
0x447: V467 = 0x40
0x449: V468 = M[0x40]
0x44a: V469 = 0xe0
0x44c: V470 = 0x2
0x44e: V471 = EXP 0x2 0xe0
0x44f: V472 = 0xffffffff
0x455: V473 = AND 0xa9059cbb 0xffffffff
0x456: V474 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x458: M[V468] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x459: V475 = 0x1
0x45b: V476 = 0xa0
0x45d: V477 = 0x2
0x45f: V478 = EXP 0x2 0xa0
0x460: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x463: V480 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x464: V481 = 0x4
0x467: V482 = ADD V468 0x4
0x468: M[V482] = V480
0x469: V483 = 0x24
0x46c: V484 = ADD V468 0x24
0x46d: M[V484] = V363
0x46e: V485 = 0x44
0x470: V486 = ADD 0x44 V468
0x471: V487 = 0x0
0x473: V488 = 0x40
0x475: V489 = M[0x40]
0x478: V490 = SUB V486 V489
0x47a: V491 = 0x0
0x47e: V492 = EXTCODESIZE V464
0x47f: V493 = ISZERO V492
0x480: V494 = ISZERO V493
0x481: V495 = 0x489
0x484: JUMPI 0x489 V494
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]
Exit stack: [V12, V363, V401, 0x0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]

================================

Block 0x485
[0x485:0x488]
---
Predecessors: [0x433]
Successors: []
---
0x485 PUSH1 0x0
0x487 DUP1
0x488 REVERT
---
0x485: V496 = 0x0
0x488: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, 0x0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, 0x0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]

================================

Block 0x489
[0x489:0x495]
---
Predecessors: [0x433]
Successors: [0x496, 0x49a]
---
0x489 JUMPDEST
0x48a PUSH2 0x2c6
0x48d GAS
0x48e SUB
0x48f CALL
0x490 ISZERO
0x491 ISZERO
0x492 PUSH2 0x49a
0x495 JUMPI
---
0x489: JUMPDEST 
0x48a: V497 = 0x2c6
0x48d: V498 = GAS
0x48e: V499 = SUB V498 0x2c6
0x48f: V500 = CALL V499 V464 0x0 V489 V490 V489 0x0
0x490: V501 = ISZERO V500
0x491: V502 = ISZERO V501
0x492: V503 = 0x49a
0x495: JUMPI 0x49a V502
---
Entry stack: [V12, V363, V401, 0x0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V363, V401, 0x0, V464, 0xa9059cbb, V486]

================================

Block 0x496
[0x496:0x499]
---
Predecessors: [0x489]
Successors: []
---
0x496 PUSH1 0x0
0x498 DUP1
0x499 REVERT
---
0x496: V504 = 0x0
0x499: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, 0x0, V464, 0xa9059cbb, V486]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, 0x0, V464, 0xa9059cbb, V486]

================================

Block 0x49a
[0x49a:0x4b6]
---
Predecessors: [0x489]
Successors: [0x13f, 0x4b7]
---
0x49a JUMPDEST
0x49b POP
0x49c POP
0x49d PUSH1 0x8
0x49f DUP1
0x4a0 SLOAD
0x4a1 DUP6
0x4a2 ADD
0x4a3 SWAP1
0x4a4 SSTORE
0x4a5 POP
0x4a6 PUSH1 0x9
0x4a8 DUP1
0x4a9 SLOAD
0x4aa DUP5
0x4ab SWAP1
0x4ac SUB
0x4ad SWAP1
0x4ae DUP2
0x4af SWAP1
0x4b0 SSTORE
0x4b1 ISZERO
0x4b2 ISZERO
0x4b3 PUSH2 0x13f
0x4b6 JUMPI
---
0x49a: JUMPDEST 
0x49d: V505 = 0x8
0x4a0: V506 = S[0x8]
0x4a2: V507 = ADD V363 V506
0x4a4: S[0x8] = V507
0x4a6: V508 = 0x9
0x4a9: V509 = S[0x9]
0x4ac: V510 = SUB V509 V363
0x4b0: S[0x9] = V510
0x4b1: V511 = ISZERO V510
0x4b2: V512 = ISZERO V511
0x4b3: V513 = 0x13f
0x4b6: JUMPI 0x13f V512
---
Entry stack: [V12, V363, V401, 0x0, V464, 0xa9059cbb, V486]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x4b7
[0x4b7:0x4c3]
---
Predecessors: [0x49a]
Successors: [0x4c4]
---
0x4b7 PUSH1 0xa
0x4b9 DUP1
0x4ba SLOAD
0x4bb PUSH1 0xff
0x4bd NOT
0x4be AND
0x4bf PUSH1 0x1
0x4c1 OR
0x4c2 SWAP1
0x4c3 SSTORE
---
0x4b7: V514 = 0xa
0x4ba: V515 = S[0xa]
0x4bb: V516 = 0xff
0x4bd: V517 = NOT 0xff
0x4be: V518 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V515
0x4bf: V519 = 0x1
0x4c1: V520 = OR 0x1 V518
0x4c3: S[0xa] = V520
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x4c4
[0x4c4:0x4c8]
---
Predecessors: [0x4b7]
Successors: [0x64c]
---
0x4c4 JUMPDEST
0x4c5 PUSH2 0x64c
0x4c8 JUMP
---
0x4c4: JUMPDEST 
0x4c5: V521 = 0x64c
0x4c8: JUMP 0x64c
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, 0x0]

================================

Block 0x4c9
[0x4c9:0x4da]
---
Predecessors: [0x3b4]
Successors: [0x4db, 0x4dc]
---
0x4c9 JUMPDEST
0x4ca PUSH1 0x7
0x4cc SLOAD
0x4cd PUSH1 0x6
0x4cf SLOAD
0x4d0 PUSH1 0x9
0x4d2 SLOAD
0x4d3 MUL
0x4d4 DUP2
0x4d5 ISZERO
0x4d6 ISZERO
0x4d7 PUSH2 0x4dc
0x4da JUMPI
---
0x4c9: JUMPDEST 
0x4ca: V522 = 0x7
0x4cc: V523 = S[0x7]
0x4cd: V524 = 0x6
0x4cf: V525 = S[0x6]
0x4d0: V526 = 0x9
0x4d2: V527 = S[0x9]
0x4d3: V528 = MUL V527 V525
0x4d5: V529 = ISZERO V523
0x4d6: V530 = ISZERO V529
0x4d7: V531 = 0x4dc
0x4da: JUMPI 0x4dc V530
---
Entry stack: [V12, V363, V401, 0x0]
Stack pops: 0
Stack additions: [V523, V528]
Exit stack: [V12, V363, V401, 0x0, V523, V528]

================================

Block 0x4db
[0x4db:0x4db]
---
Predecessors: [0x4c9]
Successors: []
---
0x4db INVALID
---
0x4db: INVALID 
---
Entry stack: [V12, V363, V401, 0x0, V523, V528]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, 0x0, V523, V528]

================================

Block 0x4dc
[0x4dc:0x50f]
---
Predecessors: [0x4c9]
Successors: [0x510, 0x514]
---
0x4dc JUMPDEST
0x4dd PUSH1 0x1
0x4df SLOAD
0x4e0 SWAP2
0x4e1 SWAP1
0x4e2 DIV
0x4e3 SWAP2
0x4e4 POP
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0xa0
0x4e9 PUSH1 0x2
0x4eb EXP
0x4ec SUB
0x4ed AND
0x4ee DUP2
0x4ef ISZERO
0x4f0 PUSH2 0x8fc
0x4f3 MUL
0x4f4 DUP3
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 PUSH1 0x0
0x4fa PUSH1 0x40
0x4fc MLOAD
0x4fd DUP1
0x4fe DUP4
0x4ff SUB
0x500 DUP2
0x501 DUP6
0x502 DUP9
0x503 DUP9
0x504 CALL
0x505 SWAP4
0x506 POP
0x507 POP
0x508 POP
0x509 POP
0x50a ISZERO
0x50b ISZERO
0x50c PUSH2 0x514
0x50f JUMPI
---
0x4dc: JUMPDEST 
0x4dd: V532 = 0x1
0x4df: V533 = S[0x1]
0x4e2: V534 = DIV V528 V523
0x4e5: V535 = 0x1
0x4e7: V536 = 0xa0
0x4e9: V537 = 0x2
0x4eb: V538 = EXP 0x2 0xa0
0x4ec: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ed: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0x4ef: V541 = ISZERO V534
0x4f0: V542 = 0x8fc
0x4f3: V543 = MUL 0x8fc V541
0x4f5: V544 = 0x40
0x4f7: V545 = M[0x40]
0x4f8: V546 = 0x0
0x4fa: V547 = 0x40
0x4fc: V548 = M[0x40]
0x4ff: V549 = SUB V545 V548
0x504: V550 = CALL V543 V540 V534 V548 V549 V548 0x0
0x50a: V551 = ISZERO V550
0x50b: V552 = ISZERO V551
0x50c: V553 = 0x514
0x50f: JUMPI 0x514 V552
---
Entry stack: [V12, V363, V401, 0x0, V523, V528]
Stack pops: 3
Stack additions: [V534]
Exit stack: [V12, V363, V401, V534]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x4dc]
Successors: []
---
0x510 PUSH1 0x0
0x512 DUP1
0x513 REVERT
---
0x510: V554 = 0x0
0x513: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, V534]

================================

Block 0x514
[0x514:0x56c]
---
Predecessors: [0x4dc]
Successors: [0x56d, 0x571]
---
0x514 JUMPDEST
0x515 PUSH1 0x0
0x517 SLOAD
0x518 PUSH1 0x9
0x51a SLOAD
0x51b PUSH1 0x1
0x51d PUSH1 0xa0
0x51f PUSH1 0x2
0x521 EXP
0x522 SUB
0x523 SWAP1
0x524 SWAP2
0x525 AND
0x526 SWAP1
0x527 PUSH4 0xa9059cbb
0x52c SWAP1
0x52d CALLER
0x52e SWAP1
0x52f PUSH1 0x40
0x531 MLOAD
0x532 PUSH1 0xe0
0x534 PUSH1 0x2
0x536 EXP
0x537 PUSH4 0xffffffff
0x53c DUP6
0x53d AND
0x53e MUL
0x53f DUP2
0x540 MSTORE
0x541 PUSH1 0x1
0x543 PUSH1 0xa0
0x545 PUSH1 0x2
0x547 EXP
0x548 SUB
0x549 SWAP1
0x54a SWAP3
0x54b AND
0x54c PUSH1 0x4
0x54e DUP4
0x54f ADD
0x550 MSTORE
0x551 PUSH1 0x24
0x553 DUP3
0x554 ADD
0x555 MSTORE
0x556 PUSH1 0x44
0x558 ADD
0x559 PUSH1 0x0
0x55b PUSH1 0x40
0x55d MLOAD
0x55e DUP1
0x55f DUP4
0x560 SUB
0x561 DUP2
0x562 PUSH1 0x0
0x564 DUP8
0x565 DUP1
0x566 EXTCODESIZE
0x567 ISZERO
0x568 ISZERO
0x569 PUSH2 0x571
0x56c JUMPI
---
0x514: JUMPDEST 
0x515: V555 = 0x0
0x517: V556 = S[0x0]
0x518: V557 = 0x9
0x51a: V558 = S[0x9]
0x51b: V559 = 0x1
0x51d: V560 = 0xa0
0x51f: V561 = 0x2
0x521: V562 = EXP 0x2 0xa0
0x522: V563 = SUB 0x10000000000000000000000000000000000000000 0x1
0x525: V564 = AND V556 0xffffffffffffffffffffffffffffffffffffffff
0x527: V565 = 0xa9059cbb
0x52d: V566 = CALLER
0x52f: V567 = 0x40
0x531: V568 = M[0x40]
0x532: V569 = 0xe0
0x534: V570 = 0x2
0x536: V571 = EXP 0x2 0xe0
0x537: V572 = 0xffffffff
0x53d: V573 = AND 0xa9059cbb 0xffffffff
0x53e: V574 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x540: M[V568] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x541: V575 = 0x1
0x543: V576 = 0xa0
0x545: V577 = 0x2
0x547: V578 = EXP 0x2 0xa0
0x548: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54b: V580 = AND V566 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V581 = 0x4
0x54f: V582 = ADD V568 0x4
0x550: M[V582] = V580
0x551: V583 = 0x24
0x554: V584 = ADD V568 0x24
0x555: M[V584] = V558
0x556: V585 = 0x44
0x558: V586 = ADD 0x44 V568
0x559: V587 = 0x0
0x55b: V588 = 0x40
0x55d: V589 = M[0x40]
0x560: V590 = SUB V586 V589
0x562: V591 = 0x0
0x566: V592 = EXTCODESIZE V564
0x567: V593 = ISZERO V592
0x568: V594 = ISZERO V593
0x569: V595 = 0x571
0x56c: JUMPI 0x571 V594
---
Entry stack: [V12, V363, V401, V534]
Stack pops: 0
Stack additions: [V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]
Exit stack: [V12, V363, V401, V534, V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]

================================

Block 0x56d
[0x56d:0x570]
---
Predecessors: [0x514]
Successors: []
---
0x56d PUSH1 0x0
0x56f DUP1
0x570 REVERT
---
0x56d: V596 = 0x0
0x570: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, V534, V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, V534, V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]

================================

Block 0x571
[0x571:0x57d]
---
Predecessors: [0x514]
Successors: [0x57e, 0x582]
---
0x571 JUMPDEST
0x572 PUSH2 0x2c6
0x575 GAS
0x576 SUB
0x577 CALL
0x578 ISZERO
0x579 ISZERO
0x57a PUSH2 0x582
0x57d JUMPI
---
0x571: JUMPDEST 
0x572: V597 = 0x2c6
0x575: V598 = GAS
0x576: V599 = SUB V598 0x2c6
0x577: V600 = CALL V599 V564 0x0 V589 V590 V589 0x0
0x578: V601 = ISZERO V600
0x579: V602 = ISZERO V601
0x57a: V603 = 0x582
0x57d: JUMPI 0x582 V602
---
Entry stack: [V12, V363, V401, V534, V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V363, V401, V534, V564, 0xa9059cbb, V586]

================================

Block 0x57e
[0x57e:0x581]
---
Predecessors: [0x571]
Successors: []
---
0x57e PUSH1 0x0
0x580 DUP1
0x581 REVERT
---
0x57e: V604 = 0x0
0x581: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, V534, V564, 0xa9059cbb, V586]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, V534, V564, 0xa9059cbb, V586]

================================

Block 0x582
[0x582:0x5b5]
---
Predecessors: [0x571]
Successors: [0x5b6, 0x5ba]
---
0x582 JUMPDEST
0x583 POP
0x584 POP
0x585 POP
0x586 CALLER
0x587 PUSH1 0x1
0x589 PUSH1 0xa0
0x58b PUSH1 0x2
0x58d EXP
0x58e SUB
0x58f AND
0x590 PUSH2 0x8fc
0x593 DUP3
0x594 CALLVALUE
0x595 SUB
0x596 SWAP1
0x597 DUP2
0x598 ISZERO
0x599 MUL
0x59a SWAP1
0x59b PUSH1 0x40
0x59d MLOAD
0x59e PUSH1 0x0
0x5a0 PUSH1 0x40
0x5a2 MLOAD
0x5a3 DUP1
0x5a4 DUP4
0x5a5 SUB
0x5a6 DUP2
0x5a7 DUP6
0x5a8 DUP9
0x5a9 DUP9
0x5aa CALL
0x5ab SWAP4
0x5ac POP
0x5ad POP
0x5ae POP
0x5af POP
0x5b0 ISZERO
0x5b1 ISZERO
0x5b2 PUSH2 0x5ba
0x5b5 JUMPI
---
0x582: JUMPDEST 
0x586: V605 = CALLER
0x587: V606 = 0x1
0x589: V607 = 0xa0
0x58b: V608 = 0x2
0x58d: V609 = EXP 0x2 0xa0
0x58e: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58f: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x590: V612 = 0x8fc
0x594: V613 = CALLVALUE
0x595: V614 = SUB V613 V534
0x598: V615 = ISZERO V614
0x599: V616 = MUL V615 0x8fc
0x59b: V617 = 0x40
0x59d: V618 = M[0x40]
0x59e: V619 = 0x0
0x5a0: V620 = 0x40
0x5a2: V621 = M[0x40]
0x5a5: V622 = SUB V618 V621
0x5aa: V623 = CALL V616 V611 V614 V621 V622 V621 0x0
0x5b0: V624 = ISZERO V623
0x5b1: V625 = ISZERO V624
0x5b2: V626 = 0x5ba
0x5b5: JUMPI 0x5ba V625
---
Entry stack: [V12, V363, V401, V534, V564, 0xa9059cbb, V586]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V363, V401, V534]

================================

Block 0x5b6
[0x5b6:0x5b9]
---
Predecessors: [0x582]
Successors: []
---
0x5b6 PUSH1 0x0
0x5b8 DUP1
0x5b9 REVERT
---
0x5b6: V627 = 0x0
0x5b9: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, V534]

================================

Block 0x5ba
[0x5ba:0x61c]
---
Predecessors: [0x582]
Successors: [0x61d, 0x621]
---
0x5ba JUMPDEST
0x5bb PUSH1 0x9
0x5bd SLOAD
0x5be PUSH1 0x8
0x5c0 DUP1
0x5c1 SLOAD
0x5c2 SWAP1
0x5c3 SWAP2
0x5c4 ADD
0x5c5 SWAP1
0x5c6 SSTORE
0x5c7 PUSH1 0x0
0x5c9 DUP1
0x5ca SLOAD
0x5cb PUSH1 0x1
0x5cd PUSH1 0xa0
0x5cf PUSH1 0x2
0x5d1 EXP
0x5d2 SUB
0x5d3 AND
0x5d4 SWAP1
0x5d5 PUSH4 0x70a08231
0x5da SWAP1
0x5db ADDRESS
0x5dc SWAP1
0x5dd PUSH1 0x40
0x5df MLOAD
0x5e0 PUSH1 0x20
0x5e2 ADD
0x5e3 MSTORE
0x5e4 PUSH1 0x40
0x5e6 MLOAD
0x5e7 PUSH1 0xe0
0x5e9 PUSH1 0x2
0x5eb EXP
0x5ec PUSH4 0xffffffff
0x5f1 DUP5
0x5f2 AND
0x5f3 MUL
0x5f4 DUP2
0x5f5 MSTORE
0x5f6 PUSH1 0x1
0x5f8 PUSH1 0xa0
0x5fa PUSH1 0x2
0x5fc EXP
0x5fd SUB
0x5fe SWAP1
0x5ff SWAP2
0x600 AND
0x601 PUSH1 0x4
0x603 DUP3
0x604 ADD
0x605 MSTORE
0x606 PUSH1 0x24
0x608 ADD
0x609 PUSH1 0x20
0x60b PUSH1 0x40
0x60d MLOAD
0x60e DUP1
0x60f DUP4
0x610 SUB
0x611 DUP2
0x612 PUSH1 0x0
0x614 DUP8
0x615 DUP1
0x616 EXTCODESIZE
0x617 ISZERO
0x618 ISZERO
0x619 PUSH2 0x621
0x61c JUMPI
---
0x5ba: JUMPDEST 
0x5bb: V628 = 0x9
0x5bd: V629 = S[0x9]
0x5be: V630 = 0x8
0x5c1: V631 = S[0x8]
0x5c4: V632 = ADD V629 V631
0x5c6: S[0x8] = V632
0x5c7: V633 = 0x0
0x5ca: V634 = S[0x0]
0x5cb: V635 = 0x1
0x5cd: V636 = 0xa0
0x5cf: V637 = 0x2
0x5d1: V638 = EXP 0x2 0xa0
0x5d2: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d3: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0x5d5: V641 = 0x70a08231
0x5db: V642 = ADDRESS
0x5dd: V643 = 0x40
0x5df: V644 = M[0x40]
0x5e0: V645 = 0x20
0x5e2: V646 = ADD 0x20 V644
0x5e3: M[V646] = 0x0
0x5e4: V647 = 0x40
0x5e6: V648 = M[0x40]
0x5e7: V649 = 0xe0
0x5e9: V650 = 0x2
0x5eb: V651 = EXP 0x2 0xe0
0x5ec: V652 = 0xffffffff
0x5f2: V653 = AND 0x70a08231 0xffffffff
0x5f3: V654 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x5f5: M[V648] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5f6: V655 = 0x1
0x5f8: V656 = 0xa0
0x5fa: V657 = 0x2
0x5fc: V658 = EXP 0x2 0xa0
0x5fd: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x600: V660 = AND V642 0xffffffffffffffffffffffffffffffffffffffff
0x601: V661 = 0x4
0x604: V662 = ADD V648 0x4
0x605: M[V662] = V660
0x606: V663 = 0x24
0x608: V664 = ADD 0x24 V648
0x609: V665 = 0x20
0x60b: V666 = 0x40
0x60d: V667 = M[0x40]
0x610: V668 = SUB V664 V667
0x612: V669 = 0x0
0x616: V670 = EXTCODESIZE V640
0x617: V671 = ISZERO V670
0x618: V672 = ISZERO V671
0x619: V673 = 0x621
0x61c: JUMPI 0x621 V672
---
Entry stack: [V12, V363, V401, V534]
Stack pops: 0
Stack additions: [V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]
Exit stack: [V12, V363, V401, V534, V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]

================================

Block 0x61d
[0x61d:0x620]
---
Predecessors: [0x5ba]
Successors: []
---
0x61d PUSH1 0x0
0x61f DUP1
0x620 REVERT
---
0x61d: V674 = 0x0
0x620: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, V534, V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, V534, V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]

================================

Block 0x621
[0x621:0x62d]
---
Predecessors: [0x5ba]
Successors: [0x62e, 0x632]
---
0x621 JUMPDEST
0x622 PUSH2 0x2c6
0x625 GAS
0x626 SUB
0x627 CALL
0x628 ISZERO
0x629 ISZERO
0x62a PUSH2 0x632
0x62d JUMPI
---
0x621: JUMPDEST 
0x622: V675 = 0x2c6
0x625: V676 = GAS
0x626: V677 = SUB V676 0x2c6
0x627: V678 = CALL V677 V640 0x0 V667 V668 V667 0x20
0x628: V679 = ISZERO V678
0x629: V680 = ISZERO V679
0x62a: V681 = 0x632
0x62d: JUMPI 0x632 V680
---
Entry stack: [V12, V363, V401, V534, V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V363, V401, V534, V640, 0x70a08231, V664]

================================

Block 0x62e
[0x62e:0x631]
---
Predecessors: [0x621]
Successors: []
---
0x62e PUSH1 0x0
0x630 DUP1
0x631 REVERT
---
0x62e: V682 = 0x0
0x631: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V401, V534, V640, 0x70a08231, V664]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V401, V534, V640, 0x70a08231, V664]

================================

Block 0x632
[0x632:0x64b]
---
Predecessors: [0x621]
Successors: [0x64c]
---
0x632 JUMPDEST
0x633 POP
0x634 POP
0x635 POP
0x636 PUSH1 0x40
0x638 MLOAD
0x639 DUP1
0x63a MLOAD
0x63b PUSH1 0x9
0x63d SSTORE
0x63e POP
0x63f PUSH1 0xa
0x641 DUP1
0x642 SLOAD
0x643 PUSH1 0xff
0x645 NOT
0x646 AND
0x647 PUSH1 0x1
0x649 OR
0x64a SWAP1
0x64b SSTORE
---
0x632: JUMPDEST 
0x636: V683 = 0x40
0x638: V684 = M[0x40]
0x63a: V685 = M[V684]
0x63b: V686 = 0x9
0x63d: S[0x9] = V685
0x63f: V687 = 0xa
0x642: V688 = S[0xa]
0x643: V689 = 0xff
0x645: V690 = NOT 0xff
0x646: V691 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V688
0x647: V692 = 0x1
0x649: V693 = OR 0x1 V691
0x64b: S[0xa] = V693
---
Entry stack: [V12, V363, V401, V534, V640, 0x70a08231, V664]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V363, V401, V534]

================================

Block 0x64c
[0x64c:0x64c]
---
Predecessors: [0x13f, 0x300, 0x342, 0x4c4, 0x632]
Successors: [0x64d]
---
0x64c JUMPDEST
---
0x64c: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x64d
[0x64d:0x64d]
---
Predecessors: [0x64c]
Successors: [0x64e]
---
0x64d JUMPDEST
---
0x64d: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x64e
[0x64e:0x64e]
---
Predecessors: [0x64d]
Successors: [0x64f]
---
0x64e JUMPDEST
---
0x64e: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x64f
[0x64f:0x6bf]
---
Predecessors: [0x64e]
Successors: [0x6c0]
---
0x64f JUMPDEST
0x650 PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x671 PUSH1 0x9
0x673 SLOAD
0x674 PUSH1 0x40
0x676 MLOAD
0x677 SWAP1
0x678 DUP2
0x679 MSTORE
0x67a PUSH1 0x20
0x67c ADD
0x67d PUSH1 0x40
0x67f MLOAD
0x680 DUP1
0x681 SWAP2
0x682 SUB
0x683 SWAP1
0x684 LOG1
0x685 PUSH1 0xa
0x687 SLOAD
0x688 PUSH32 0x5a31ab2f920e21586c60958256e285378d9539e990dac5eb5b1f4f4b22a660d2
0x6a9 SWAP1
0x6aa PUSH1 0xff
0x6ac AND
0x6ad PUSH1 0x40
0x6af MLOAD
0x6b0 SWAP1
0x6b1 ISZERO
0x6b2 ISZERO
0x6b3 DUP2
0x6b4 MSTORE
0x6b5 PUSH1 0x20
0x6b7 ADD
0x6b8 PUSH1 0x40
0x6ba MLOAD
0x6bb DUP1
0x6bc SWAP2
0x6bd SUB
0x6be SWAP1
0x6bf LOG1
---
0x64f: JUMPDEST 
0x650: V694 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x671: V695 = 0x9
0x673: V696 = S[0x9]
0x674: V697 = 0x40
0x676: V698 = M[0x40]
0x679: M[V698] = V696
0x67a: V699 = 0x20
0x67c: V700 = ADD 0x20 V698
0x67d: V701 = 0x40
0x67f: V702 = M[0x40]
0x682: V703 = SUB V700 V702
0x684: LOG V702 V703 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x685: V704 = 0xa
0x687: V705 = S[0xa]
0x688: V706 = 0x5a31ab2f920e21586c60958256e285378d9539e990dac5eb5b1f4f4b22a660d2
0x6aa: V707 = 0xff
0x6ac: V708 = AND 0xff V705
0x6ad: V709 = 0x40
0x6af: V710 = M[0x40]
0x6b1: V711 = ISZERO V708
0x6b2: V712 = ISZERO V711
0x6b4: M[V710] = V712
0x6b5: V713 = 0x20
0x6b7: V714 = ADD 0x20 V710
0x6b8: V715 = 0x40
0x6ba: V716 = M[0x40]
0x6bd: V717 = SUB V714 V716
0x6bf: LOG V716 V717 0x5a31ab2f920e21586c60958256e285378d9539e990dac5eb5b1f4f4b22a660d2
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x6c0
[0x6c0:0x6c4]
---
Predecessors: [0x64f]
Successors: []
---
0x6c0 JUMPDEST
0x6c1 POP
0x6c2 POP
0x6c3 POP
0x6c4 STOP
---
0x6c0: JUMPDEST 
0x6c4: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x6c5
[0x6c5:0x6cb]
---
Predecessors: [0xb]
Successors: [0x6cc, 0x6d0]
---
0x6c5 JUMPDEST
0x6c6 CALLVALUE
0x6c7 ISZERO
0x6c8 PUSH2 0x6d0
0x6cb JUMPI
---
0x6c5: JUMPDEST 
0x6c6: V718 = CALLVALUE
0x6c7: V719 = ISZERO V718
0x6c8: V720 = 0x6d0
0x6cb: JUMPI 0x6d0 V719
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6cc
[0x6cc:0x6cf]
---
Predecessors: [0x6c5]
Successors: []
---
0x6cc PUSH1 0x0
0x6ce DUP1
0x6cf REVERT
---
0x6cc: V721 = 0x0
0x6cf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6d0
[0x6d0:0x6d7]
---
Predecessors: [0x6c5]
Successors: [0x8bf]
---
0x6d0 JUMPDEST
0x6d1 PUSH2 0x6d8
0x6d4 PUSH2 0x8bf
0x6d7 JUMP
---
0x6d0: JUMPDEST 
0x6d1: V722 = 0x6d8
0x6d4: V723 = 0x8bf
0x6d7: JUMP 0x8bf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6d8]
Exit stack: [V12, 0x6d8]

================================

Block 0x6d8
[0x6d8:0x6f3]
---
Predecessors: [0x8bf, 0x8e8, 0x9aa]
Successors: []
---
0x6d8 JUMPDEST
0x6d9 PUSH1 0x40
0x6db MLOAD
0x6dc PUSH1 0x1
0x6de PUSH1 0xa0
0x6e0 PUSH1 0x2
0x6e2 EXP
0x6e3 SUB
0x6e4 SWAP1
0x6e5 SWAP2
0x6e6 AND
0x6e7 DUP2
0x6e8 MSTORE
0x6e9 PUSH1 0x20
0x6eb ADD
0x6ec PUSH1 0x40
0x6ee MLOAD
0x6ef DUP1
0x6f0 SWAP2
0x6f1 SUB
0x6f2 SWAP1
0x6f3 RETURN
---
0x6d8: JUMPDEST 
0x6d9: V724 = 0x40
0x6db: V725 = M[0x40]
0x6dc: V726 = 0x1
0x6de: V727 = 0xa0
0x6e0: V728 = 0x2
0x6e2: V729 = EXP 0x2 0xa0
0x6e3: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e6: V731 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x6e8: M[V725] = V731
0x6e9: V732 = 0x20
0x6eb: V733 = ADD 0x20 V725
0x6ec: V734 = 0x40
0x6ee: V735 = M[0x40]
0x6f1: V736 = SUB V733 V735
0x6f3: RETURN V735 V736
---
Entry stack: [V12, 0x6d8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x6d8]

================================

Block 0x6f4
[0x6f4:0x6fa]
---
Predecessors: [0x25]
Successors: [0x6fb, 0x6ff]
---
0x6f4 JUMPDEST
0x6f5 CALLVALUE
0x6f6 ISZERO
0x6f7 PUSH2 0x6ff
0x6fa JUMPI
---
0x6f4: JUMPDEST 
0x6f5: V737 = CALLVALUE
0x6f6: V738 = ISZERO V737
0x6f7: V739 = 0x6ff
0x6fa: JUMPI 0x6ff V738
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6fb
[0x6fb:0x6fe]
---
Predecessors: [0x6f4]
Successors: []
---
0x6fb PUSH1 0x0
0x6fd DUP1
0x6fe REVERT
---
0x6fb: V740 = 0x0
0x6fe: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ff
[0x6ff:0x706]
---
Predecessors: [0x6f4]
Successors: [0x8ce]
---
0x6ff JUMPDEST
0x700 PUSH2 0x707
0x703 PUSH2 0x8ce
0x706 JUMP
---
0x6ff: JUMPDEST 
0x700: V741 = 0x707
0x703: V742 = 0x8ce
0x706: JUMP 0x8ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x707]
Exit stack: [V12, 0x707]

================================

Block 0x707
[0x707:0x71a]
---
Predecessors: [0x8ce, 0x99b]
Successors: []
---
0x707 JUMPDEST
0x708 PUSH1 0x40
0x70a MLOAD
0x70b SWAP1
0x70c ISZERO
0x70d ISZERO
0x70e DUP2
0x70f MSTORE
0x710 PUSH1 0x20
0x712 ADD
0x713 PUSH1 0x40
0x715 MLOAD
0x716 DUP1
0x717 SWAP2
0x718 SUB
0x719 SWAP1
0x71a RETURN
---
0x707: JUMPDEST 
0x708: V743 = 0x40
0x70a: V744 = M[0x40]
0x70c: V745 = ISZERO S0
0x70d: V746 = ISZERO V745
0x70f: M[V744] = V746
0x710: V747 = 0x20
0x712: V748 = ADD 0x20 V744
0x713: V749 = 0x40
0x715: V750 = M[0x40]
0x718: V751 = SUB V748 V750
0x71a: RETURN V750 V751
---
Entry stack: [V12, 0x707, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x707]

================================

Block 0x71b
[0x71b:0x721]
---
Predecessors: [0x30]
Successors: [0x722, 0x726]
---
0x71b JUMPDEST
0x71c CALLVALUE
0x71d ISZERO
0x71e PUSH2 0x726
0x721 JUMPI
---
0x71b: JUMPDEST 
0x71c: V752 = CALLVALUE
0x71d: V753 = ISZERO V752
0x71e: V754 = 0x726
0x721: JUMPI 0x726 V753
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x722
[0x722:0x725]
---
Predecessors: [0x71b]
Successors: []
---
0x722 PUSH1 0x0
0x724 DUP1
0x725 REVERT
---
0x722: V755 = 0x0
0x725: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x726
[0x726:0x72d]
---
Predecessors: [0x71b]
Successors: [0x8dc]
---
0x726 JUMPDEST
0x727 PUSH2 0x72e
0x72a PUSH2 0x8dc
0x72d JUMP
---
0x726: JUMPDEST 
0x727: V756 = 0x72e
0x72a: V757 = 0x8dc
0x72d: JUMP 0x8dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72e]
Exit stack: [V12, 0x72e]

================================

Block 0x72e
[0x72e:0x73f]
---
Predecessors: [0x8dc, 0x8e2, 0x8f7, 0x9a4]
Successors: []
---
0x72e JUMPDEST
0x72f PUSH1 0x40
0x731 MLOAD
0x732 SWAP1
0x733 DUP2
0x734 MSTORE
0x735 PUSH1 0x20
0x737 ADD
0x738 PUSH1 0x40
0x73a MLOAD
0x73b DUP1
0x73c SWAP2
0x73d SUB
0x73e SWAP1
0x73f RETURN
---
0x72e: JUMPDEST 
0x72f: V758 = 0x40
0x731: V759 = M[0x40]
0x734: M[V759] = S0
0x735: V760 = 0x20
0x737: V761 = ADD 0x20 V759
0x738: V762 = 0x40
0x73a: V763 = M[0x40]
0x73d: V764 = SUB V761 V763
0x73f: RETURN V763 V764
---
Entry stack: [V12, 0x72e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x72e]

================================

Block 0x740
[0x740:0x746]
---
Predecessors: [0x3b]
Successors: [0x747, 0x74b]
---
0x740 JUMPDEST
0x741 CALLVALUE
0x742 ISZERO
0x743 PUSH2 0x74b
0x746 JUMPI
---
0x740: JUMPDEST 
0x741: V765 = CALLVALUE
0x742: V766 = ISZERO V765
0x743: V767 = 0x74b
0x746: JUMPI 0x74b V766
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x747
[0x747:0x74a]
---
Predecessors: [0x740]
Successors: []
---
0x747 PUSH1 0x0
0x749 DUP1
0x74a REVERT
---
0x747: V768 = 0x0
0x74a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x74b
[0x74b:0x752]
---
Predecessors: [0x740]
Successors: [0x8e2]
---
0x74b JUMPDEST
0x74c PUSH2 0x72e
0x74f PUSH2 0x8e2
0x752 JUMP
---
0x74b: JUMPDEST 
0x74c: V769 = 0x72e
0x74f: V770 = 0x8e2
0x752: JUMP 0x8e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72e]
Exit stack: [V12, 0x72e]

================================

Block 0x753
[0x753:0x764]
---
Predecessors: []
Successors: []
---
0x753 JUMPDEST
0x754 PUSH1 0x40
0x756 MLOAD
0x757 SWAP1
0x758 DUP2
0x759 MSTORE
0x75a PUSH1 0x20
0x75c ADD
0x75d PUSH1 0x40
0x75f MLOAD
0x760 DUP1
0x761 SWAP2
0x762 SUB
0x763 SWAP1
0x764 RETURN
---
0x753: JUMPDEST 
0x754: V771 = 0x40
0x756: V772 = M[0x40]
0x759: M[V772] = S0
0x75a: V773 = 0x20
0x75c: V774 = ADD 0x20 V772
0x75d: V775 = 0x40
0x75f: V776 = M[0x40]
0x762: V777 = SUB V774 V776
0x764: RETURN V776 V777
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x765
[0x765:0x76b]
---
Predecessors: [0x46]
Successors: [0x76c, 0x770]
---
0x765 JUMPDEST
0x766 CALLVALUE
0x767 ISZERO
0x768 PUSH2 0x770
0x76b JUMPI
---
0x765: JUMPDEST 
0x766: V778 = CALLVALUE
0x767: V779 = ISZERO V778
0x768: V780 = 0x770
0x76b: JUMPI 0x770 V779
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76c
[0x76c:0x76f]
---
Predecessors: [0x765]
Successors: []
---
0x76c PUSH1 0x0
0x76e DUP1
0x76f REVERT
---
0x76c: V781 = 0x0
0x76f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x770
[0x770:0x777]
---
Predecessors: [0x765]
Successors: [0x8e8]
---
0x770 JUMPDEST
0x771 PUSH2 0x6d8
0x774 PUSH2 0x8e8
0x777 JUMP
---
0x770: JUMPDEST 
0x771: V782 = 0x6d8
0x774: V783 = 0x8e8
0x777: JUMP 0x8e8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6d8]
Exit stack: [V12, 0x6d8]

================================

Block 0x778
[0x778:0x793]
---
Predecessors: []
Successors: []
---
0x778 JUMPDEST
0x779 PUSH1 0x40
0x77b MLOAD
0x77c PUSH1 0x1
0x77e PUSH1 0xa0
0x780 PUSH1 0x2
0x782 EXP
0x783 SUB
0x784 SWAP1
0x785 SWAP2
0x786 AND
0x787 DUP2
0x788 MSTORE
0x789 PUSH1 0x20
0x78b ADD
0x78c PUSH1 0x40
0x78e MLOAD
0x78f DUP1
0x790 SWAP2
0x791 SUB
0x792 SWAP1
0x793 RETURN
---
0x778: JUMPDEST 
0x779: V784 = 0x40
0x77b: V785 = M[0x40]
0x77c: V786 = 0x1
0x77e: V787 = 0xa0
0x780: V788 = 0x2
0x782: V789 = EXP 0x2 0xa0
0x783: V790 = SUB 0x10000000000000000000000000000000000000000 0x1
0x786: V791 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x788: M[V785] = V791
0x789: V792 = 0x20
0x78b: V793 = ADD 0x20 V785
0x78c: V794 = 0x40
0x78e: V795 = M[0x40]
0x791: V796 = SUB V793 V795
0x793: RETURN V795 V796
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x794
[0x794:0x79a]
---
Predecessors: [0x51]
Successors: [0x79b, 0x79f]
---
0x794 JUMPDEST
0x795 CALLVALUE
0x796 ISZERO
0x797 PUSH2 0x79f
0x79a JUMPI
---
0x794: JUMPDEST 
0x795: V797 = CALLVALUE
0x796: V798 = ISZERO V797
0x797: V799 = 0x79f
0x79a: JUMPI 0x79f V798
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x79b
[0x79b:0x79e]
---
Predecessors: [0x794]
Successors: []
---
0x79b PUSH1 0x0
0x79d DUP1
0x79e REVERT
---
0x79b: V800 = 0x0
0x79e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x79f
[0x79f:0x7a6]
---
Predecessors: [0x794]
Successors: [0x8f7]
---
0x79f JUMPDEST
0x7a0 PUSH2 0x72e
0x7a3 PUSH2 0x8f7
0x7a6 JUMP
---
0x79f: JUMPDEST 
0x7a0: V801 = 0x72e
0x7a3: V802 = 0x8f7
0x7a6: JUMP 0x8f7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72e]
Exit stack: [V12, 0x72e]

================================

Block 0x7a7
[0x7a7:0x7b8]
---
Predecessors: []
Successors: []
---
0x7a7 JUMPDEST
0x7a8 PUSH1 0x40
0x7aa MLOAD
0x7ab SWAP1
0x7ac DUP2
0x7ad MSTORE
0x7ae PUSH1 0x20
0x7b0 ADD
0x7b1 PUSH1 0x40
0x7b3 MLOAD
0x7b4 DUP1
0x7b5 SWAP2
0x7b6 SUB
0x7b7 SWAP1
0x7b8 RETURN
---
0x7a7: JUMPDEST 
0x7a8: V803 = 0x40
0x7aa: V804 = M[0x40]
0x7ad: M[V804] = S0
0x7ae: V805 = 0x20
0x7b0: V806 = ADD 0x20 V804
0x7b1: V807 = 0x40
0x7b3: V808 = M[0x40]
0x7b6: V809 = SUB V806 V808
0x7b8: RETURN V808 V809
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7b9
[0x7b9:0x7bf]
---
Predecessors: [0x5c]
Successors: [0x7c0, 0x7c4]
---
0x7b9 JUMPDEST
0x7ba CALLVALUE
0x7bb ISZERO
0x7bc PUSH2 0x7c4
0x7bf JUMPI
---
0x7b9: JUMPDEST 
0x7ba: V810 = CALLVALUE
0x7bb: V811 = ISZERO V810
0x7bc: V812 = 0x7c4
0x7bf: JUMPI 0x7c4 V811
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7c0
[0x7c0:0x7c3]
---
Predecessors: [0x7b9]
Successors: []
---
0x7c0 PUSH1 0x0
0x7c2 DUP1
0x7c3 REVERT
---
0x7c0: V813 = 0x0
0x7c3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7c4
[0x7c4:0x7cb]
---
Predecessors: [0x7b9]
Successors: [0x8fd]
---
0x7c4 JUMPDEST
0x7c5 PUSH2 0x7cc
0x7c8 PUSH2 0x8fd
0x7cb JUMP
---
0x7c4: JUMPDEST 
0x7c5: V814 = 0x7cc
0x7c8: V815 = 0x8fd
0x7cb: JUMP 0x8fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7cc]
Exit stack: [V12, 0x7cc]

================================

Block 0x7cc
[0x7cc:0x7ef]
---
Predecessors: [0x993]
Successors: [0x7f0]
---
0x7cc JUMPDEST
0x7cd PUSH1 0x40
0x7cf MLOAD
0x7d0 PUSH1 0x20
0x7d2 DUP1
0x7d3 DUP3
0x7d4 MSTORE
0x7d5 DUP2
0x7d6 SWAP1
0x7d7 DUP2
0x7d8 ADD
0x7d9 DUP4
0x7da DUP2
0x7db DUP2
0x7dc MLOAD
0x7dd DUP2
0x7de MSTORE
0x7df PUSH1 0x20
0x7e1 ADD
0x7e2 SWAP2
0x7e3 POP
0x7e4 DUP1
0x7e5 MLOAD
0x7e6 SWAP1
0x7e7 PUSH1 0x20
0x7e9 ADD
0x7ea SWAP1
0x7eb DUP1
0x7ec DUP4
0x7ed DUP4
0x7ee PUSH1 0x0
---
0x7cc: JUMPDEST 
0x7cd: V816 = 0x40
0x7cf: V817 = M[0x40]
0x7d0: V818 = 0x20
0x7d4: M[V817] = 0x20
0x7d8: V819 = ADD V817 0x20
0x7dc: V820 = M[V951]
0x7de: M[V819] = V820
0x7df: V821 = 0x20
0x7e1: V822 = ADD 0x20 V819
0x7e5: V823 = M[V951]
0x7e7: V824 = 0x20
0x7e9: V825 = ADD 0x20 V951
0x7ee: V826 = 0x0
---
Entry stack: [V12, 0x7cc, V951]
Stack pops: 1
Stack additions: [S0, V817, V817, V822, V825, V823, V823, V822, V825, 0x0]
Exit stack: [V12, 0x7cc, V951, V817, V817, V822, V825, V823, V823, V822, V825, 0x0]

================================

Block 0x7f0
[0x7f0:0x7f8]
---
Predecessors: [0x7cc, 0x801]
Successors: [0x7f9, 0x809]
---
0x7f0 JUMPDEST
0x7f1 DUP4
0x7f2 DUP2
0x7f3 LT
0x7f4 ISZERO
0x7f5 PUSH2 0x809
0x7f8 JUMPI
---
0x7f0: JUMPDEST 
0x7f3: V827 = LT S0 V823
0x7f4: V828 = ISZERO V827
0x7f5: V829 = 0x809
0x7f8: JUMPI 0x809 V828
---
Entry stack: [V12, 0x7cc, V951, V817, V817, V822, V825, V823, V823, V822, V825, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x7cc, V951, V817, V817, V822, V825, V823, V823, V822, V825, S0]

================================

Block 0x7f9
[0x7f9:0x800]
---
Predecessors: [0x7f0]
Successors: [0x801]
---
0x7f9 DUP1
0x7fa DUP3
0x7fb ADD
0x7fc MLOAD
0x7fd DUP2
0x7fe DUP5
0x7ff ADD
0x800 MSTORE
---
0x7fb: V830 = ADD V825 S0
0x7fc: V831 = M[V830]
0x7ff: V832 = ADD V822 S0
0x800: M[V832] = V831
---
Entry stack: [V12, 0x7cc, V951, V817, V817, V822, V825, V823, V823, V822, V825, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x7cc, V951, V817, V817, V822, V825, V823, V823, V822, V825, S0]

================================

Block 0x801
[0x801:0x808]
---
Predecessors: [0x7f9]
Successors: [0x7f0]
---
0x801 JUMPDEST
0x802 PUSH1 0x20
0x804 ADD
0x805 PUSH2 0x7f0
0x808 JUMP
---
0x801: JUMPDEST 
0x802: V833 = 0x20
0x804: V834 = ADD 0x20 S0
0x805: V835 = 0x7f0
0x808: JUMP 0x7f0
---
Entry stack: [V12, 0x7cc, V951, V817, V817, V822, V825, V823, V823, V822, V825, S0]
Stack pops: 1
Stack additions: [V834]
Exit stack: [V12, 0x7cc, V951, V817, V817, V822, V825, V823, V823, V822, V825, V834]

================================

Block 0x809
[0x809:0x81c]
---
Predecessors: [0x7f0]
Successors: [0x81d, 0x836]
---
0x809 JUMPDEST
0x80a POP
0x80b POP
0x80c POP
0x80d POP
0x80e SWAP1
0x80f POP
0x810 SWAP1
0x811 DUP2
0x812 ADD
0x813 SWAP1
0x814 PUSH1 0x1f
0x816 AND
0x817 DUP1
0x818 ISZERO
0x819 PUSH2 0x836
0x81c JUMPI
---
0x809: JUMPDEST 
0x812: V836 = ADD V823 V822
0x814: V837 = 0x1f
0x816: V838 = AND 0x1f V823
0x818: V839 = ISZERO V838
0x819: V840 = 0x836
0x81c: JUMPI 0x836 V839
---
Entry stack: [V12, 0x7cc, V951, V817, V817, V822, V825, V823, V823, V822, V825, S0]
Stack pops: 7
Stack additions: [V836, V838]
Exit stack: [V12, 0x7cc, V951, V817, V817, V836, V838]

================================

Block 0x81d
[0x81d:0x835]
---
Predecessors: [0x809]
Successors: [0x836]
---
0x81d DUP1
0x81e DUP3
0x81f SUB
0x820 DUP1
0x821 MLOAD
0x822 PUSH1 0x1
0x824 DUP4
0x825 PUSH1 0x20
0x827 SUB
0x828 PUSH2 0x100
0x82b EXP
0x82c SUB
0x82d NOT
0x82e AND
0x82f DUP2
0x830 MSTORE
0x831 PUSH1 0x20
0x833 ADD
0x834 SWAP2
0x835 POP
---
0x81f: V841 = SUB V836 V838
0x821: V842 = M[V841]
0x822: V843 = 0x1
0x825: V844 = 0x20
0x827: V845 = SUB 0x20 V838
0x828: V846 = 0x100
0x82b: V847 = EXP 0x100 V845
0x82c: V848 = SUB V847 0x1
0x82d: V849 = NOT V848
0x82e: V850 = AND V849 V842
0x830: M[V841] = V850
0x831: V851 = 0x20
0x833: V852 = ADD 0x20 V841
---
Entry stack: [V12, 0x7cc, V951, V817, V817, V836, V838]
Stack pops: 2
Stack additions: [V852, S0]
Exit stack: [V12, 0x7cc, V951, V817, V817, V852, V838]

================================

Block 0x836
[0x836:0x843]
---
Predecessors: [0x809, 0x81d]
Successors: []
---
0x836 JUMPDEST
0x837 POP
0x838 SWAP3
0x839 POP
0x83a POP
0x83b POP
0x83c PUSH1 0x40
0x83e MLOAD
0x83f DUP1
0x840 SWAP2
0x841 SUB
0x842 SWAP1
0x843 RETURN
---
0x836: JUMPDEST 
0x83c: V853 = 0x40
0x83e: V854 = M[0x40]
0x841: V855 = SUB S1 V854
0x843: RETURN V854 V855
---
Entry stack: [V12, 0x7cc, V951, V817, V817, S1, V838]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x7cc]

================================

Block 0x844
[0x844:0x84a]
---
Predecessors: [0x67]
Successors: [0x84b, 0x84f]
---
0x844 JUMPDEST
0x845 CALLVALUE
0x846 ISZERO
0x847 PUSH2 0x84f
0x84a JUMPI
---
0x844: JUMPDEST 
0x845: V856 = CALLVALUE
0x846: V857 = ISZERO V856
0x847: V858 = 0x84f
0x84a: JUMPI 0x84f V857
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84b
[0x84b:0x84e]
---
Predecessors: [0x844]
Successors: []
---
0x84b PUSH1 0x0
0x84d DUP1
0x84e REVERT
---
0x84b: V859 = 0x0
0x84e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84f
[0x84f:0x856]
---
Predecessors: [0x844]
Successors: [0x99b]
---
0x84f JUMPDEST
0x850 PUSH2 0x707
0x853 PUSH2 0x99b
0x856 JUMP
---
0x84f: JUMPDEST 
0x850: V860 = 0x707
0x853: V861 = 0x99b
0x856: JUMP 0x99b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x707]
Exit stack: [V12, 0x707]

================================

Block 0x857
[0x857:0x86a]
---
Predecessors: []
Successors: []
---
0x857 JUMPDEST
0x858 PUSH1 0x40
0x85a MLOAD
0x85b SWAP1
0x85c ISZERO
0x85d ISZERO
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x20
0x862 ADD
0x863 PUSH1 0x40
0x865 MLOAD
0x866 DUP1
0x867 SWAP2
0x868 SUB
0x869 SWAP1
0x86a RETURN
---
0x857: JUMPDEST 
0x858: V862 = 0x40
0x85a: V863 = M[0x40]
0x85c: V864 = ISZERO S0
0x85d: V865 = ISZERO V864
0x85f: M[V863] = V865
0x860: V866 = 0x20
0x862: V867 = ADD 0x20 V863
0x863: V868 = 0x40
0x865: V869 = M[0x40]
0x868: V870 = SUB V867 V869
0x86a: RETURN V869 V870
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x86b
[0x86b:0x871]
---
Predecessors: [0x72]
Successors: [0x872, 0x876]
---
0x86b JUMPDEST
0x86c CALLVALUE
0x86d ISZERO
0x86e PUSH2 0x876
0x871 JUMPI
---
0x86b: JUMPDEST 
0x86c: V871 = CALLVALUE
0x86d: V872 = ISZERO V871
0x86e: V873 = 0x876
0x871: JUMPI 0x876 V872
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x872
[0x872:0x875]
---
Predecessors: [0x86b]
Successors: []
---
0x872 PUSH1 0x0
0x874 DUP1
0x875 REVERT
---
0x872: V874 = 0x0
0x875: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x876
[0x876:0x87d]
---
Predecessors: [0x86b]
Successors: [0x9a4]
---
0x876 JUMPDEST
0x877 PUSH2 0x72e
0x87a PUSH2 0x9a4
0x87d JUMP
---
0x876: JUMPDEST 
0x877: V875 = 0x72e
0x87a: V876 = 0x9a4
0x87d: JUMP 0x9a4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72e]
Exit stack: [V12, 0x72e]

================================

Block 0x87e
[0x87e:0x88f]
---
Predecessors: []
Successors: []
---
0x87e JUMPDEST
0x87f PUSH1 0x40
0x881 MLOAD
0x882 SWAP1
0x883 DUP2
0x884 MSTORE
0x885 PUSH1 0x20
0x887 ADD
0x888 PUSH1 0x40
0x88a MLOAD
0x88b DUP1
0x88c SWAP2
0x88d SUB
0x88e SWAP1
0x88f RETURN
---
0x87e: JUMPDEST 
0x87f: V877 = 0x40
0x881: V878 = M[0x40]
0x884: M[V878] = S0
0x885: V879 = 0x20
0x887: V880 = ADD 0x20 V878
0x888: V881 = 0x40
0x88a: V882 = M[0x40]
0x88d: V883 = SUB V880 V882
0x88f: RETURN V882 V883
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x890
[0x890:0x896]
---
Predecessors: [0x7d]
Successors: [0x897, 0x89b]
---
0x890 JUMPDEST
0x891 CALLVALUE
0x892 ISZERO
0x893 PUSH2 0x89b
0x896 JUMPI
---
0x890: JUMPDEST 
0x891: V884 = CALLVALUE
0x892: V885 = ISZERO V884
0x893: V886 = 0x89b
0x896: JUMPI 0x89b V885
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x897
[0x897:0x89a]
---
Predecessors: [0x890]
Successors: []
---
0x897 PUSH1 0x0
0x899 DUP1
0x89a REVERT
---
0x897: V887 = 0x0
0x89a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89b
[0x89b:0x8a2]
---
Predecessors: [0x890]
Successors: [0x9aa]
---
0x89b JUMPDEST
0x89c PUSH2 0x6d8
0x89f PUSH2 0x9aa
0x8a2 JUMP
---
0x89b: JUMPDEST 
0x89c: V888 = 0x6d8
0x89f: V889 = 0x9aa
0x8a2: JUMP 0x9aa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6d8]
Exit stack: [V12, 0x6d8]

================================

Block 0x8a3
[0x8a3:0x8be]
---
Predecessors: []
Successors: []
---
0x8a3 JUMPDEST
0x8a4 PUSH1 0x40
0x8a6 MLOAD
0x8a7 PUSH1 0x1
0x8a9 PUSH1 0xa0
0x8ab PUSH1 0x2
0x8ad EXP
0x8ae SUB
0x8af SWAP1
0x8b0 SWAP2
0x8b1 AND
0x8b2 DUP2
0x8b3 MSTORE
0x8b4 PUSH1 0x20
0x8b6 ADD
0x8b7 PUSH1 0x40
0x8b9 MLOAD
0x8ba DUP1
0x8bb SWAP2
0x8bc SUB
0x8bd SWAP1
0x8be RETURN
---
0x8a3: JUMPDEST 
0x8a4: V890 = 0x40
0x8a6: V891 = M[0x40]
0x8a7: V892 = 0x1
0x8a9: V893 = 0xa0
0x8ab: V894 = 0x2
0x8ad: V895 = EXP 0x2 0xa0
0x8ae: V896 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b1: V897 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8b3: M[V891] = V897
0x8b4: V898 = 0x20
0x8b6: V899 = ADD 0x20 V891
0x8b7: V900 = 0x40
0x8b9: V901 = M[0x40]
0x8bc: V902 = SUB V899 V901
0x8be: RETURN V901 V902
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8bf
[0x8bf:0x8cd]
---
Predecessors: [0x6d0]
Successors: [0x6d8]
---
0x8bf JUMPDEST
0x8c0 PUSH1 0x0
0x8c2 SLOAD
0x8c3 PUSH1 0x1
0x8c5 PUSH1 0xa0
0x8c7 PUSH1 0x2
0x8c9 EXP
0x8ca SUB
0x8cb AND
0x8cc DUP2
0x8cd JUMP
---
0x8bf: JUMPDEST 
0x8c0: V903 = 0x0
0x8c2: V904 = S[0x0]
0x8c3: V905 = 0x1
0x8c5: V906 = 0xa0
0x8c7: V907 = 0x2
0x8c9: V908 = EXP 0x2 0xa0
0x8ca: V909 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8cb: V910 = AND 0xffffffffffffffffffffffffffffffffffffffff V904
0x8cd: JUMP 0x6d8
---
Entry stack: [V12, 0x6d8]
Stack pops: 1
Stack additions: [S0, V910]
Exit stack: [V12, 0x6d8, V910]

================================

Block 0x8ce
[0x8ce:0x8db]
---
Predecessors: [0x6ff]
Successors: [0x707]
---
0x8ce JUMPDEST
0x8cf PUSH1 0xa
0x8d1 SLOAD
0x8d2 PUSH2 0x100
0x8d5 SWAP1
0x8d6 DIV
0x8d7 PUSH1 0xff
0x8d9 AND
0x8da DUP2
0x8db JUMP
---
0x8ce: JUMPDEST 
0x8cf: V911 = 0xa
0x8d1: V912 = S[0xa]
0x8d2: V913 = 0x100
0x8d6: V914 = DIV V912 0x100
0x8d7: V915 = 0xff
0x8d9: V916 = AND 0xff V914
0x8db: JUMP 0x707
---
Entry stack: [V12, 0x707]
Stack pops: 1
Stack additions: [S0, V916]
Exit stack: [V12, 0x707, V916]

================================

Block 0x8dc
[0x8dc:0x8e1]
---
Predecessors: [0x726]
Successors: [0x72e]
---
0x8dc JUMPDEST
0x8dd PUSH1 0x8
0x8df SLOAD
0x8e0 DUP2
0x8e1 JUMP
---
0x8dc: JUMPDEST 
0x8dd: V917 = 0x8
0x8df: V918 = S[0x8]
0x8e1: JUMP 0x72e
---
Entry stack: [V12, 0x72e]
Stack pops: 1
Stack additions: [S0, V918]
Exit stack: [V12, 0x72e, V918]

================================

Block 0x8e2
[0x8e2:0x8e7]
---
Predecessors: [0x74b]
Successors: [0x72e]
---
0x8e2 JUMPDEST
0x8e3 PUSH1 0x4
0x8e5 SLOAD
0x8e6 DUP2
0x8e7 JUMP
---
0x8e2: JUMPDEST 
0x8e3: V919 = 0x4
0x8e5: V920 = S[0x4]
0x8e7: JUMP 0x72e
---
Entry stack: [V12, 0x72e]
Stack pops: 1
Stack additions: [S0, V920]
Exit stack: [V12, 0x72e, V920]

================================

Block 0x8e8
[0x8e8:0x8f6]
---
Predecessors: [0x770]
Successors: [0x6d8]
---
0x8e8 JUMPDEST
0x8e9 PUSH1 0x1
0x8eb SLOAD
0x8ec PUSH1 0x1
0x8ee PUSH1 0xa0
0x8f0 PUSH1 0x2
0x8f2 EXP
0x8f3 SUB
0x8f4 AND
0x8f5 DUP2
0x8f6 JUMP
---
0x8e8: JUMPDEST 
0x8e9: V921 = 0x1
0x8eb: V922 = S[0x1]
0x8ec: V923 = 0x1
0x8ee: V924 = 0xa0
0x8f0: V925 = 0x2
0x8f2: V926 = EXP 0x2 0xa0
0x8f3: V927 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f4: V928 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0x8f6: JUMP 0x6d8
---
Entry stack: [V12, 0x6d8]
Stack pops: 1
Stack additions: [S0, V928]
Exit stack: [V12, 0x6d8, V928]

================================

Block 0x8f7
[0x8f7:0x8fc]
---
Predecessors: [0x79f]
Successors: [0x72e]
---
0x8f7 JUMPDEST
0x8f8 PUSH1 0x9
0x8fa SLOAD
0x8fb DUP2
0x8fc JUMP
---
0x8f7: JUMPDEST 
0x8f8: V929 = 0x9
0x8fa: V930 = S[0x9]
0x8fc: JUMP 0x72e
---
Entry stack: [V12, 0x72e]
Stack pops: 1
Stack additions: [S0, V930]
Exit stack: [V12, 0x72e, V930]

================================

Block 0x8fd
[0x8fd:0x94c]
---
Predecessors: [0x7c4]
Successors: [0x94d, 0x993]
---
0x8fd JUMPDEST
0x8fe PUSH1 0x5
0x900 DUP1
0x901 SLOAD
0x902 PUSH1 0x1
0x904 DUP2
0x905 PUSH1 0x1
0x907 AND
0x908 ISZERO
0x909 PUSH2 0x100
0x90c MUL
0x90d SUB
0x90e AND
0x90f PUSH1 0x2
0x911 SWAP1
0x912 DIV
0x913 DUP1
0x914 PUSH1 0x1f
0x916 ADD
0x917 PUSH1 0x20
0x919 DUP1
0x91a SWAP2
0x91b DIV
0x91c MUL
0x91d PUSH1 0x20
0x91f ADD
0x920 PUSH1 0x40
0x922 MLOAD
0x923 SWAP1
0x924 DUP2
0x925 ADD
0x926 PUSH1 0x40
0x928 MSTORE
0x929 DUP1
0x92a SWAP3
0x92b SWAP2
0x92c SWAP1
0x92d DUP2
0x92e DUP2
0x92f MSTORE
0x930 PUSH1 0x20
0x932 ADD
0x933 DUP3
0x934 DUP1
0x935 SLOAD
0x936 PUSH1 0x1
0x938 DUP2
0x939 PUSH1 0x1
0x93b AND
0x93c ISZERO
0x93d PUSH2 0x100
0x940 MUL
0x941 SUB
0x942 AND
0x943 PUSH1 0x2
0x945 SWAP1
0x946 DIV
0x947 DUP1
0x948 ISZERO
0x949 PUSH2 0x993
0x94c JUMPI
---
0x8fd: JUMPDEST 
0x8fe: V931 = 0x5
0x901: V932 = S[0x5]
0x902: V933 = 0x1
0x905: V934 = 0x1
0x907: V935 = AND 0x1 V932
0x908: V936 = ISZERO V935
0x909: V937 = 0x100
0x90c: V938 = MUL 0x100 V936
0x90d: V939 = SUB V938 0x1
0x90e: V940 = AND V939 V932
0x90f: V941 = 0x2
0x912: V942 = DIV V940 0x2
0x914: V943 = 0x1f
0x916: V944 = ADD 0x1f V942
0x917: V945 = 0x20
0x91b: V946 = DIV V944 0x20
0x91c: V947 = MUL V946 0x20
0x91d: V948 = 0x20
0x91f: V949 = ADD 0x20 V947
0x920: V950 = 0x40
0x922: V951 = M[0x40]
0x925: V952 = ADD V951 V949
0x926: V953 = 0x40
0x928: M[0x40] = V952
0x92f: M[V951] = V942
0x930: V954 = 0x20
0x932: V955 = ADD 0x20 V951
0x935: V956 = S[0x5]
0x936: V957 = 0x1
0x939: V958 = 0x1
0x93b: V959 = AND 0x1 V956
0x93c: V960 = ISZERO V959
0x93d: V961 = 0x100
0x940: V962 = MUL 0x100 V960
0x941: V963 = SUB V962 0x1
0x942: V964 = AND V963 V956
0x943: V965 = 0x2
0x946: V966 = DIV V964 0x2
0x948: V967 = ISZERO V966
0x949: V968 = 0x993
0x94c: JUMPI 0x993 V967
---
Entry stack: [V12, 0x7cc]
Stack pops: 0
Stack additions: [V951, 0x5, V942, V955, 0x5, V966]
Exit stack: [V12, 0x7cc, V951, 0x5, V942, V955, 0x5, V966]

================================

Block 0x94d
[0x94d:0x954]
---
Predecessors: [0x8fd]
Successors: [0x955, 0x968]
---
0x94d DUP1
0x94e PUSH1 0x1f
0x950 LT
0x951 PUSH2 0x968
0x954 JUMPI
---
0x94e: V969 = 0x1f
0x950: V970 = LT 0x1f V966
0x951: V971 = 0x968
0x954: JUMPI 0x968 V970
---
Entry stack: [V12, 0x7cc, V951, 0x5, V942, V955, 0x5, V966]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7cc, V951, 0x5, V942, V955, 0x5, V966]

================================

Block 0x955
[0x955:0x967]
---
Predecessors: [0x94d]
Successors: [0x993]
---
0x955 PUSH2 0x100
0x958 DUP1
0x959 DUP4
0x95a SLOAD
0x95b DIV
0x95c MUL
0x95d DUP4
0x95e MSTORE
0x95f SWAP2
0x960 PUSH1 0x20
0x962 ADD
0x963 SWAP2
0x964 PUSH2 0x993
0x967 JUMP
---
0x955: V972 = 0x100
0x95a: V973 = S[0x5]
0x95b: V974 = DIV V973 0x100
0x95c: V975 = MUL V974 0x100
0x95e: M[V955] = V975
0x960: V976 = 0x20
0x962: V977 = ADD 0x20 V955
0x964: V978 = 0x993
0x967: JUMP 0x993
---
Entry stack: [V12, 0x7cc, V951, 0x5, V942, V955, 0x5, V966]
Stack pops: 3
Stack additions: [V977, S1, S0]
Exit stack: [V12, 0x7cc, V951, 0x5, V942, V977, 0x5, V966]

================================

Block 0x968
[0x968:0x975]
---
Predecessors: [0x94d]
Successors: [0x976]
---
0x968 JUMPDEST
0x969 DUP3
0x96a ADD
0x96b SWAP2
0x96c SWAP1
0x96d PUSH1 0x0
0x96f MSTORE
0x970 PUSH1 0x20
0x972 PUSH1 0x0
0x974 SHA3
0x975 SWAP1
---
0x968: JUMPDEST 
0x96a: V979 = ADD V955 V966
0x96d: V980 = 0x0
0x96f: M[0x0] = 0x5
0x970: V981 = 0x20
0x972: V982 = 0x0
0x974: V983 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x7cc, V951, 0x5, V942, V955, 0x5, V966]
Stack pops: 3
Stack additions: [V979, V983, S2]
Exit stack: [V12, 0x7cc, V951, 0x5, V942, V979, V983, V955]

================================

Block 0x976
[0x976:0x989]
---
Predecessors: [0x968, 0x976]
Successors: [0x976, 0x98a]
---
0x976 JUMPDEST
0x977 DUP2
0x978 SLOAD
0x979 DUP2
0x97a MSTORE
0x97b SWAP1
0x97c PUSH1 0x1
0x97e ADD
0x97f SWAP1
0x980 PUSH1 0x20
0x982 ADD
0x983 DUP1
0x984 DUP4
0x985 GT
0x986 PUSH2 0x976
0x989 JUMPI
---
0x976: JUMPDEST 
0x978: V984 = S[S1]
0x97a: M[S0] = V984
0x97c: V985 = 0x1
0x97e: V986 = ADD 0x1 S1
0x980: V987 = 0x20
0x982: V988 = ADD 0x20 S0
0x985: V989 = GT V979 V988
0x986: V990 = 0x976
0x989: JUMPI 0x976 V989
---
Entry stack: [V12, 0x7cc, V951, 0x5, V942, V979, S1, S0]
Stack pops: 3
Stack additions: [S2, V986, V988]
Exit stack: [V12, 0x7cc, V951, 0x5, V942, V979, V986, V988]

================================

Block 0x98a
[0x98a:0x992]
---
Predecessors: [0x976]
Successors: [0x993]
---
0x98a DUP3
0x98b SWAP1
0x98c SUB
0x98d PUSH1 0x1f
0x98f AND
0x990 DUP3
0x991 ADD
0x992 SWAP2
---
0x98c: V991 = SUB V988 V979
0x98d: V992 = 0x1f
0x98f: V993 = AND 0x1f V991
0x991: V994 = ADD V979 V993
---
Entry stack: [V12, 0x7cc, V951, 0x5, V942, V979, V986, V988]
Stack pops: 3
Stack additions: [V994, S1, S2]
Exit stack: [V12, 0x7cc, V951, 0x5, V942, V994, V986, V979]

================================

Block 0x993
[0x993:0x99a]
---
Predecessors: [0x8fd, 0x955, 0x98a]
Successors: [0x7cc]
---
0x993 JUMPDEST
0x994 POP
0x995 POP
0x996 POP
0x997 POP
0x998 POP
0x999 DUP2
0x99a JUMP
---
0x993: JUMPDEST 
0x99a: JUMP 0x7cc
---
Entry stack: [V12, 0x7cc, V951, 0x5, V942, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x7cc, V951]

================================

Block 0x99b
[0x99b:0x9a3]
---
Predecessors: [0x84f]
Successors: [0x707]
---
0x99b JUMPDEST
0x99c PUSH1 0xa
0x99e SLOAD
0x99f PUSH1 0xff
0x9a1 AND
0x9a2 DUP2
0x9a3 JUMP
---
0x99b: JUMPDEST 
0x99c: V995 = 0xa
0x99e: V996 = S[0xa]
0x99f: V997 = 0xff
0x9a1: V998 = AND 0xff V996
0x9a3: JUMP 0x707
---
Entry stack: [V12, 0x707]
Stack pops: 1
Stack additions: [S0, V998]
Exit stack: [V12, 0x707, V998]

================================

Block 0x9a4
[0x9a4:0x9a9]
---
Predecessors: [0x876]
Successors: [0x72e]
---
0x9a4 JUMPDEST
0x9a5 PUSH1 0x3
0x9a7 SLOAD
0x9a8 DUP2
0x9a9 JUMP
---
0x9a4: JUMPDEST 
0x9a5: V999 = 0x3
0x9a7: V1000 = S[0x3]
0x9a9: JUMP 0x72e
---
Entry stack: [V12, 0x72e]
Stack pops: 1
Stack additions: [S0, V1000]
Exit stack: [V12, 0x72e, V1000]

================================

Block 0x9aa
[0x9aa:0x9b8]
---
Predecessors: [0x89b]
Successors: [0x6d8]
---
0x9aa JUMPDEST
0x9ab PUSH1 0x2
0x9ad SLOAD
0x9ae PUSH1 0x1
0x9b0 PUSH1 0xa0
0x9b2 PUSH1 0x2
0x9b4 EXP
0x9b5 SUB
0x9b6 AND
0x9b7 DUP2
0x9b8 JUMP
---
0x9aa: JUMPDEST 
0x9ab: V1001 = 0x2
0x9ad: V1002 = S[0x2]
0x9ae: V1003 = 0x1
0x9b0: V1004 = 0xa0
0x9b2: V1005 = 0x2
0x9b4: V1006 = EXP 0x2 0xa0
0x9b5: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b6: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffff V1002
0x9b8: JUMP 0x6d8
---
Entry stack: [V12, 0x6d8]
Stack pops: 1
Stack additions: [S0, V1008]
Exit stack: [V12, 0x6d8, V1008]

================================

Block 0x9b9
[0x9b9:0x9ee]
---
Predecessors: []
Successors: []
---
0x9b9 STOP
0x9ba LOG1
0x9bb PUSH6 0x627a7a723058
0x9c2 SHA3
0x9c3 MISSING 0xea
0x9c4 ORIGIN
0x9c5 MISSING 0xc6
0x9c6 MISSING 0xf6
0x9c7 DELEGATECALL
0x9c8 SSTORE
0x9c9 SWAP5
0x9ca CODECOPY
0x9cb LOG3
0x9cc TIMESTAMP
0x9cd DUP4
0x9ce PUSH32 0x7bc168eea1f12d9eab3fb3d5fd2d53fc629b77270029
---
0x9b9: STOP 
0x9ba: LOG S0 S1 S2
0x9bb: V1009 = 0x627a7a723058
0x9c2: V1010 = SHA3 0x627a7a723058 S3
0x9c3: MISSING 0xea
0x9c4: V1011 = ORIGIN
0x9c5: MISSING 0xc6
0x9c6: MISSING 0xf6
0x9c7: V1012 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x9c8: S[V1012] = S6
0x9ca: CODECOPY S12 S8 S9
0x9cb: LOG S10 S11 S7 S13 S14
0x9cc: V1013 = TIMESTAMP
0x9ce: V1014 = 0x7bc168eea1f12d9eab3fb3d5fd2d53fc629b77270029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1010, V1011, 0x7bc168eea1f12d9eab3fb3d5fd2d53fc629b77270029, S17, V1013, S15, S16, S17]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebcf0e
Entry block: 0x6c5
Exit block: 0x6d8
Body: 0x6c5, 0x6cc, 0x6d0, 0x6d8, 0x8bf

Function 1:
Public function signature: 0x497fb5b9
Entry block: 0x6f4
Exit block: 0x707
Body: 0x6f4, 0x6fb, 0x6ff, 0x707, 0x8ce

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x71b
Exit block: 0x72e
Body: 0x71b, 0x722, 0x726, 0x72e, 0x8dc

Function 3:
Public function signature: 0x78a90a59
Entry block: 0x740
Exit block: 0x72e
Body: 0x72e, 0x740, 0x747, 0x74b, 0x8e2

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x765
Exit block: 0x6d8
Body: 0x6d8, 0x765, 0x76c, 0x770, 0x8e8

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x794
Exit block: 0x72e
Body: 0x72e, 0x794, 0x79b, 0x79f, 0x8f7

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x7b9
Exit block: 0x836
Body: 0x7b9, 0x7c0, 0x7c4, 0x7cc, 0x7f0, 0x7f9, 0x801, 0x809, 0x81d, 0x836, 0x8fd, 0x94d, 0x955, 0x968, 0x976, 0x98a, 0x993

Function 7:
Public function signature: 0xabd2cc5f
Entry block: 0x844
Exit block: 0x707
Body: 0x707, 0x844, 0x84b, 0x84f, 0x99b

Function 8:
Public function signature: 0xd39d8fce
Entry block: 0x86b
Exit block: 0x72e
Body: 0x72e, 0x86b, 0x872, 0x876, 0x9a4

Function 9:
Public function signature: 0xf9081ba2
Entry block: 0x890
Exit block: 0x6d8
Body: 0x6d8, 0x890, 0x897, 0x89b, 0x9aa

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x62e
Body: 0x88, 0x89, 0xe2, 0xe6, 0xf3, 0xf7, 0x10e, 0x13b, 0x13f, 0x144, 0x14f, 0x17c, 0x180, 0x192, 0x1f9, 0x1fd, 0x20a, 0x20e, 0x257, 0x25b, 0x268, 0x26c, 0x2c6, 0x2ca, 0x2d7, 0x2db, 0x300, 0x305, 0x311, 0x33e, 0x347, 0x356, 0x357, 0x364, 0x391, 0x395, 0x396, 0x39f, 0x3a3, 0x3b3, 0x3b4, 0x3c3, 0x3f1, 0x3f5, 0x3fe, 0x42e, 0x432, 0x433, 0x485, 0x489, 0x496, 0x49a, 0x4b7, 0x4c4, 0x4c9, 0x4db, 0x4dc, 0x510, 0x514, 0x56d, 0x571, 0x57e, 0x582, 0x5b6, 0x5ba, 0x61d, 0x621, 0x62e, 0x632, 0x64c, 0x64d, 0x64e, 0x64f, 0x6c0

