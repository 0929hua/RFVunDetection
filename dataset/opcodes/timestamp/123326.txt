Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x44]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0xceea305
0x2e EQ
0x2f PUSH2 0x44
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0xceea305
0x2e: V7 = EQ 0xceea305 V5
0x2f: V8 = 0x44
0x32: JUMPI 0x44 V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x70]
---
0x33 DUP1
0x34 PUSH4 0xffc16d05
0x39 EQ
0x3a PUSH2 0x70
0x3d JUMPI
---
0x34: V9 = 0xffc16d05
0x39: V10 = EQ 0xffc16d05 V5
0x3a: V11 = 0x70
0x3d: JUMPI 0x70 V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x41]
---
Predecessors: [0x33]
Successors: [0x42]
---
0x3e PUSH2 0x42
0x41 JUMP
---
0x3e: V12 = 0x42
0x41: JUMP 0x42
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x42
[0x42:0x43]
---
Predecessors: [0x3e]
Successors: []
---
0x42 JUMPDEST
0x43 STOP
---
0x42: JUMPDEST 
0x43: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x44
[0x44:0x59]
---
Predecessors: [0x0]
Successors: [0x221]
---
0x44 JUMPDEST
0x45 PUSH2 0x5a
0x48 PUSH1 0x4
0x4a DUP1
0x4b DUP1
0x4c CALLDATALOAD
0x4d SWAP1
0x4e PUSH1 0x20
0x50 ADD
0x51 SWAP1
0x52 SWAP2
0x53 SWAP1
0x54 POP
0x55 POP
0x56 PUSH2 0x221
0x59 JUMP
---
0x44: JUMPDEST 
0x45: V13 = 0x5a
0x48: V14 = 0x4
0x4c: V15 = CALLDATALOAD 0x4
0x4e: V16 = 0x20
0x50: V17 = ADD 0x20 0x4
0x56: V18 = 0x221
0x59: JUMP 0x221
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x5a, V15]
Exit stack: [V5, 0x5a, V15]

================================

Block 0x5a
[0x5a:0x6f]
---
Predecessors: [0x31b]
Successors: []
---
0x5a JUMPDEST
0x5b PUSH1 0x40
0x5d MLOAD
0x5e DUP1
0x5f DUP3
0x60 DUP2
0x61 MSTORE
0x62 PUSH1 0x20
0x64 ADD
0x65 SWAP2
0x66 POP
0x67 POP
0x68 PUSH1 0x40
0x6a MLOAD
0x6b DUP1
0x6c SWAP2
0x6d SUB
0x6e SWAP1
0x6f RETURN
---
0x5a: JUMPDEST 
0x5b: V19 = 0x40
0x5d: V20 = M[0x40]
0x61: M[V20] = {0x0, 0x1}
0x62: V21 = 0x20
0x64: V22 = ADD 0x20 V20
0x68: V23 = 0x40
0x6a: V24 = M[0x40]
0x6d: V25 = SUB V22 V24
0x6f: RETURN V24 V25
---
Entry stack: [V5, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x70
[0x70:0x85]
---
Predecessors: [0x33]
Successors: [0x9c]
---
0x70 JUMPDEST
0x71 PUSH2 0x86
0x74 PUSH1 0x4
0x76 DUP1
0x77 DUP1
0x78 CALLDATALOAD
0x79 SWAP1
0x7a PUSH1 0x20
0x7c ADD
0x7d SWAP1
0x7e SWAP2
0x7f SWAP1
0x80 POP
0x81 POP
0x82 PUSH2 0x9c
0x85 JUMP
---
0x70: JUMPDEST 
0x71: V26 = 0x86
0x74: V27 = 0x4
0x78: V28 = CALLDATALOAD 0x4
0x7a: V29 = 0x20
0x7c: V30 = ADD 0x20 0x4
0x82: V31 = 0x9c
0x85: JUMP 0x9c
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x86, V28]
Exit stack: [V5, 0x86, V28]

================================

Block 0x86
[0x86:0x9b]
---
Predecessors: [0x21c]
Successors: []
---
0x86 JUMPDEST
0x87 PUSH1 0x40
0x89 MLOAD
0x8a DUP1
0x8b DUP3
0x8c DUP2
0x8d MSTORE
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP2
0x92 POP
0x93 POP
0x94 PUSH1 0x40
0x96 MLOAD
0x97 DUP1
0x98 SWAP2
0x99 SUB
0x9a SWAP1
0x9b RETURN
---
0x86: JUMPDEST 
0x87: V32 = 0x40
0x89: V33 = M[0x40]
0x8d: M[V33] = {0x0, 0x1}
0x8e: V34 = 0x20
0x90: V35 = ADD 0x20 V33
0x94: V36 = 0x40
0x96: V37 = M[0x40]
0x99: V38 = SUB V35 V37
0x9b: RETURN V37 V38
---
Entry stack: [V5, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x9c
[0x9c:0xa8]
---
Predecessors: [0x70]
Successors: [0xa9, 0xf1]
---
0x9c JUMPDEST
0x9d PUSH1 0x0
0x9f DUP2
0xa0 TIMESTAMP
0xa1 LT
0xa2 ISZERO
0xa3 DUP1
0xa4 ISZERO
0xa5 PUSH2 0xf1
0xa8 JUMPI
---
0x9c: JUMPDEST 
0x9d: V39 = 0x0
0xa0: V40 = TIMESTAMP
0xa1: V41 = LT V40 V28
0xa2: V42 = ISZERO V41
0xa4: V43 = ISZERO V42
0xa5: V44 = 0xf1
0xa8: JUMPI 0xf1 V43
---
Entry stack: [V5, 0x86, V28]
Stack pops: 1
Stack additions: [S0, 0x0, V42]
Exit stack: [V5, 0x86, V28, 0x0, V42]

================================

Block 0xa9
[0xa9:0xf0]
---
Predecessors: [0x9c]
Successors: [0xf1]
---
0xa9 POP
0xaa PUSH1 0x0
0xac PUSH1 0x0
0xae PUSH1 0x0
0xb0 POP
0xb1 PUSH1 0x0
0xb3 CALLER
0xb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9 AND
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf SWAP1
0xd0 DUP2
0xd1 MSTORE
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 PUSH1 0x0
0xd7 SHA3
0xd8 PUSH1 0x0
0xda POP
0xdb PUSH1 0x0
0xdd DUP5
0xde DUP2
0xdf MSTORE
0xe0 PUSH1 0x20
0xe2 ADD
0xe3 SWAP1
0xe4 DUP2
0xe5 MSTORE
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 PUSH1 0x0
0xeb SHA3
0xec PUSH1 0x0
0xee POP
0xef SLOAD
0xf0 GT
---
0xaa: V45 = 0x0
0xac: V46 = 0x0
0xae: V47 = 0x0
0xb1: V48 = 0x0
0xb3: V49 = CALLER
0xb4: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xcb: M[0x0] = V51
0xcc: V52 = 0x20
0xce: V53 = ADD 0x20 0x0
0xd1: M[0x20] = 0x0
0xd2: V54 = 0x20
0xd4: V55 = ADD 0x20 0x20
0xd5: V56 = 0x0
0xd7: V57 = SHA3 0x0 0x40
0xd8: V58 = 0x0
0xdb: V59 = 0x0
0xdf: M[0x0] = V28
0xe0: V60 = 0x20
0xe2: V61 = ADD 0x20 0x0
0xe5: M[0x20] = V57
0xe6: V62 = 0x20
0xe8: V63 = ADD 0x20 0x20
0xe9: V64 = 0x0
0xeb: V65 = SHA3 0x0 0x40
0xec: V66 = 0x0
0xef: V67 = S[V65]
0xf0: V68 = GT V67 0x0
---
Entry stack: [V5, 0x86, V28, 0x0, V42]
Stack pops: 3
Stack additions: [S2, S1, V68]
Exit stack: [V5, 0x86, V28, 0x0, V68]

================================

Block 0xf1
[0xf1:0xf6]
---
Predecessors: [0x9c, 0xa9]
Successors: [0xf7, 0x212]
---
0xf1 JUMPDEST
0xf2 ISZERO
0xf3 PUSH2 0x212
0xf6 JUMPI
---
0xf1: JUMPDEST 
0xf2: V69 = ISZERO S0
0xf3: V70 = 0x212
0xf6: JUMPI 0x212 V69
---
Entry stack: [V5, 0x86, V28, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x86, V28, 0x0]

================================

Block 0xf7
[0xf7:0x20d]
---
Predecessors: [0xf1]
Successors: [0x21c]
---
0xf7 CALLER
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e PUSH1 0x0
0x110 PUSH1 0x0
0x112 PUSH1 0x0
0x114 POP
0x115 PUSH1 0x0
0x117 CALLER
0x118 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12d AND
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP1
0x134 DUP2
0x135 MSTORE
0x136 PUSH1 0x20
0x138 ADD
0x139 PUSH1 0x0
0x13b SHA3
0x13c PUSH1 0x0
0x13e POP
0x13f PUSH1 0x0
0x141 DUP6
0x142 DUP2
0x143 MSTORE
0x144 PUSH1 0x20
0x146 ADD
0x147 SWAP1
0x148 DUP2
0x149 MSTORE
0x14a PUSH1 0x20
0x14c ADD
0x14d PUSH1 0x0
0x14f SHA3
0x150 PUSH1 0x0
0x152 POP
0x153 SLOAD
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 SWAP1
0x159 POP
0x15a PUSH1 0x0
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 DUP4
0x161 SUB
0x162 DUP2
0x163 DUP6
0x164 DUP9
0x165 DUP9
0x166 CALL
0x167 SWAP4
0x168 POP
0x169 POP
0x16a POP
0x16b POP
0x16c POP
0x16d CALLER
0x16e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x183 AND
0x184 PUSH32 0xadec52fcd1408589179b85e44b434374db078b4eaf793e7d1a1bb0ae4ecfeee5
0x1a5 DUP4
0x1a6 PUSH1 0x0
0x1a8 PUSH1 0x0
0x1aa POP
0x1ab PUSH1 0x0
0x1ad CALLER
0x1ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c3 AND
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 SWAP1
0x1ca DUP2
0x1cb MSTORE
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf PUSH1 0x0
0x1d1 SHA3
0x1d2 PUSH1 0x0
0x1d4 POP
0x1d5 PUSH1 0x0
0x1d7 DUP7
0x1d8 DUP2
0x1d9 MSTORE
0x1da PUSH1 0x20
0x1dc ADD
0x1dd SWAP1
0x1de DUP2
0x1df MSTORE
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 PUSH1 0x0
0x1e5 SHA3
0x1e6 PUSH1 0x0
0x1e8 POP
0x1e9 SLOAD
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee DUP4
0x1ef DUP2
0x1f0 MSTORE
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 DUP3
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa SWAP3
0x1fb POP
0x1fc POP
0x1fd POP
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 DUP1
0x202 SWAP2
0x203 SUB
0x204 SWAP1
0x205 LOG2
0x206 PUSH1 0x1
0x208 SWAP1
0x209 POP
0x20a PUSH2 0x21c
0x20d JUMP
---
0xf7: V71 = CALLER
0xf8: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x10e: V74 = 0x0
0x110: V75 = 0x0
0x112: V76 = 0x0
0x115: V77 = 0x0
0x117: V78 = CALLER
0x118: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x12d: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x12f: M[0x0] = V80
0x130: V81 = 0x20
0x132: V82 = ADD 0x20 0x0
0x135: M[0x20] = 0x0
0x136: V83 = 0x20
0x138: V84 = ADD 0x20 0x20
0x139: V85 = 0x0
0x13b: V86 = SHA3 0x0 0x40
0x13c: V87 = 0x0
0x13f: V88 = 0x0
0x143: M[0x0] = V28
0x144: V89 = 0x20
0x146: V90 = ADD 0x20 0x0
0x149: M[0x20] = V86
0x14a: V91 = 0x20
0x14c: V92 = ADD 0x20 0x20
0x14d: V93 = 0x0
0x14f: V94 = SHA3 0x0 0x40
0x150: V95 = 0x0
0x153: V96 = S[V94]
0x154: V97 = 0x40
0x156: V98 = M[0x40]
0x15a: V99 = 0x0
0x15c: V100 = 0x40
0x15e: V101 = M[0x40]
0x161: V102 = SUB V98 V101
0x166: V103 = CALL 0x0 V73 V96 V101 V102 V101 0x0
0x16d: V104 = CALLER
0x16e: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x183: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x184: V107 = 0xadec52fcd1408589179b85e44b434374db078b4eaf793e7d1a1bb0ae4ecfeee5
0x1a6: V108 = 0x0
0x1a8: V109 = 0x0
0x1ab: V110 = 0x0
0x1ad: V111 = CALLER
0x1ae: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1c5: M[0x0] = V113
0x1c6: V114 = 0x20
0x1c8: V115 = ADD 0x20 0x0
0x1cb: M[0x20] = 0x0
0x1cc: V116 = 0x20
0x1ce: V117 = ADD 0x20 0x20
0x1cf: V118 = 0x0
0x1d1: V119 = SHA3 0x0 0x40
0x1d2: V120 = 0x0
0x1d5: V121 = 0x0
0x1d9: M[0x0] = V28
0x1da: V122 = 0x20
0x1dc: V123 = ADD 0x20 0x0
0x1df: M[0x20] = V119
0x1e0: V124 = 0x20
0x1e2: V125 = ADD 0x20 0x20
0x1e3: V126 = 0x0
0x1e5: V127 = SHA3 0x0 0x40
0x1e6: V128 = 0x0
0x1e9: V129 = S[V127]
0x1ea: V130 = 0x40
0x1ec: V131 = M[0x40]
0x1f0: M[V131] = V28
0x1f1: V132 = 0x20
0x1f3: V133 = ADD 0x20 V131
0x1f6: M[V133] = V129
0x1f7: V134 = 0x20
0x1f9: V135 = ADD 0x20 V133
0x1fe: V136 = 0x40
0x200: V137 = M[0x40]
0x203: V138 = SUB V135 V137
0x205: LOG V137 V138 0xadec52fcd1408589179b85e44b434374db078b4eaf793e7d1a1bb0ae4ecfeee5 V106
0x206: V139 = 0x1
0x20a: V140 = 0x21c
0x20d: JUMP 0x21c
---
Entry stack: [V5, 0x86, V28, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V5, 0x86, V28, 0x1]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: []
Successors: [0x21b]
---
0x20e PUSH2 0x21b
0x211 JUMP
---
0x20e: V141 = 0x21b
0x211: JUMP 0x21b
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x212
[0x212:0x21a]
---
Predecessors: [0xf1]
Successors: [0x21c]
---
0x212 JUMPDEST
0x213 PUSH1 0x0
0x215 SWAP1
0x216 POP
0x217 PUSH2 0x21c
0x21a JUMP
---
0x212: JUMPDEST 
0x213: V142 = 0x0
0x217: V143 = 0x21c
0x21a: JUMP 0x21c
---
Entry stack: [V5, 0x86, V28, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V5, 0x86, V28, 0x0]

================================

Block 0x21b
[0x21b:0x21b]
---
Predecessors: [0x20e]
Successors: [0x21c]
---
0x21b JUMPDEST
---
0x21b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21c
[0x21c:0x220]
---
Predecessors: [0xf7, 0x212, 0x21b]
Successors: [0x86]
---
0x21c JUMPDEST
0x21d SWAP2
0x21e SWAP1
0x21f POP
0x220 JUMP
---
0x21c: JUMPDEST 
0x220: JUMP 0x86
---
Entry stack: [V5, 0x86, V28, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V5, {0x0, 0x1}]

================================

Block 0x221
[0x221:0x22b]
---
Predecessors: [0x44]
Successors: [0x22c, 0x2de]
---
0x221 JUMPDEST
0x222 PUSH1 0x0
0x224 TIMESTAMP
0x225 DUP3
0x226 GT
0x227 ISZERO
0x228 PUSH2 0x2de
0x22b JUMPI
---
0x221: JUMPDEST 
0x222: V144 = 0x0
0x224: V145 = TIMESTAMP
0x226: V146 = GT V15 V145
0x227: V147 = ISZERO V146
0x228: V148 = 0x2de
0x22b: JUMPI 0x2de V147
---
Entry stack: [V5, 0x5a, V15]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V5, 0x5a, V15, 0x0]

================================

Block 0x22c
[0x22c:0x2d9]
---
Predecessors: [0x221]
Successors: [0x31b]
---
0x22c CALLVALUE
0x22d PUSH1 0x0
0x22f PUSH1 0x0
0x231 POP
0x232 PUSH1 0x0
0x234 CALLER
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x20
0x24f ADD
0x250 SWAP1
0x251 DUP2
0x252 MSTORE
0x253 PUSH1 0x20
0x255 ADD
0x256 PUSH1 0x0
0x258 SHA3
0x259 PUSH1 0x0
0x25b POP
0x25c PUSH1 0x0
0x25e DUP5
0x25f DUP2
0x260 MSTORE
0x261 PUSH1 0x20
0x263 ADD
0x264 SWAP1
0x265 DUP2
0x266 MSTORE
0x267 PUSH1 0x20
0x269 ADD
0x26a PUSH1 0x0
0x26c SHA3
0x26d PUSH1 0x0
0x26f DUP3
0x270 DUP3
0x271 DUP3
0x272 POP
0x273 SLOAD
0x274 ADD
0x275 SWAP3
0x276 POP
0x277 POP
0x278 DUP2
0x279 SWAP1
0x27a SSTORE
0x27b POP
0x27c CALLER
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 PUSH32 0xd4665e3049283582ba6f9eba07a5b3e12dab49e02da99e8927a47af5d134bea5
0x2b4 DUP4
0x2b5 CALLVALUE
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 DUP1
0x2ba DUP4
0x2bb DUP2
0x2bc MSTORE
0x2bd PUSH1 0x20
0x2bf ADD
0x2c0 DUP3
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 SWAP3
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd DUP1
0x2ce SWAP2
0x2cf SUB
0x2d0 SWAP1
0x2d1 LOG2
0x2d2 PUSH1 0x1
0x2d4 SWAP1
0x2d5 POP
0x2d6 PUSH2 0x31b
0x2d9 JUMP
---
0x22c: V149 = CALLVALUE
0x22d: V150 = 0x0
0x22f: V151 = 0x0
0x232: V152 = 0x0
0x234: V153 = CALLER
0x235: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x24c: M[0x0] = V155
0x24d: V156 = 0x20
0x24f: V157 = ADD 0x20 0x0
0x252: M[0x20] = 0x0
0x253: V158 = 0x20
0x255: V159 = ADD 0x20 0x20
0x256: V160 = 0x0
0x258: V161 = SHA3 0x0 0x40
0x259: V162 = 0x0
0x25c: V163 = 0x0
0x260: M[0x0] = V15
0x261: V164 = 0x20
0x263: V165 = ADD 0x20 0x0
0x266: M[0x20] = V161
0x267: V166 = 0x20
0x269: V167 = ADD 0x20 0x20
0x26a: V168 = 0x0
0x26c: V169 = SHA3 0x0 0x40
0x26d: V170 = 0x0
0x273: V171 = S[V169]
0x274: V172 = ADD V171 V149
0x27a: S[V169] = V172
0x27c: V173 = CALLER
0x27d: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x293: V176 = 0xd4665e3049283582ba6f9eba07a5b3e12dab49e02da99e8927a47af5d134bea5
0x2b5: V177 = CALLVALUE
0x2b6: V178 = 0x40
0x2b8: V179 = M[0x40]
0x2bc: M[V179] = V15
0x2bd: V180 = 0x20
0x2bf: V181 = ADD 0x20 V179
0x2c2: M[V181] = V177
0x2c3: V182 = 0x20
0x2c5: V183 = ADD 0x20 V181
0x2ca: V184 = 0x40
0x2cc: V185 = M[0x40]
0x2cf: V186 = SUB V183 V185
0x2d1: LOG V185 V186 0xd4665e3049283582ba6f9eba07a5b3e12dab49e02da99e8927a47af5d134bea5 V175
0x2d2: V187 = 0x1
0x2d6: V188 = 0x31b
0x2d9: JUMP 0x31b
---
Entry stack: [V5, 0x5a, V15, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V5, 0x5a, V15, 0x1]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: []
Successors: [0x31a]
---
0x2da PUSH2 0x31a
0x2dd JUMP
---
0x2da: V189 = 0x31a
0x2dd: JUMP 0x31a
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2de
[0x2de:0x319]
---
Predecessors: [0x221]
Successors: [0x31b]
---
0x2de JUMPDEST
0x2df CALLER
0x2e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f5 AND
0x2f6 PUSH1 0x0
0x2f8 CALLVALUE
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd SWAP1
0x2fe POP
0x2ff PUSH1 0x0
0x301 PUSH1 0x40
0x303 MLOAD
0x304 DUP1
0x305 DUP4
0x306 SUB
0x307 DUP2
0x308 DUP6
0x309 DUP9
0x30a DUP9
0x30b CALL
0x30c SWAP4
0x30d POP
0x30e POP
0x30f POP
0x310 POP
0x311 POP
0x312 PUSH1 0x0
0x314 SWAP1
0x315 POP
0x316 PUSH2 0x31b
0x319 JUMP
---
0x2de: JUMPDEST 
0x2df: V190 = CALLER
0x2e0: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x2f6: V193 = 0x0
0x2f8: V194 = CALLVALUE
0x2f9: V195 = 0x40
0x2fb: V196 = M[0x40]
0x2ff: V197 = 0x0
0x301: V198 = 0x40
0x303: V199 = M[0x40]
0x306: V200 = SUB V196 V199
0x30b: V201 = CALL 0x0 V192 V194 V199 V200 V199 0x0
0x312: V202 = 0x0
0x316: V203 = 0x31b
0x319: JUMP 0x31b
---
Entry stack: [V5, 0x5a, V15, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V5, 0x5a, V15, 0x0]

================================

Block 0x31a
[0x31a:0x31a]
---
Predecessors: [0x2da]
Successors: [0x31b]
---
0x31a JUMPDEST
---
0x31a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x31b
[0x31b:0x31f]
---
Predecessors: [0x22c, 0x2de, 0x31a]
Successors: [0x5a]
---
0x31b JUMPDEST
0x31c SWAP2
0x31d SWAP1
0x31e POP
0x31f JUMP
---
0x31b: JUMPDEST 
0x31f: JUMP 0x5a
---
Entry stack: [V5, 0x5a, V15, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V5, {0x0, 0x1}]

================================

Function 0:
Public function signature: 0xceea305
Entry block: 0x44
Exit block: 0x5a
Body: 0x44, 0x5a, 0x221, 0x22c, 0x2de, 0x31b

Function 1:
Public function signature: 0xffc16d05
Entry block: 0x70
Exit block: 0x86
Body: 0x70, 0x86, 0x9c, 0xa9, 0xf1, 0xf7, 0x212, 0x21c

Function 2:
Public fallback function
Entry block: 0x3e
Exit block: 0x42
Body: 0x3e, 0x42

