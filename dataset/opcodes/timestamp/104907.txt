args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/5/104907.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xda]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xda
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xda
0xc: JUMPI 0xda V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x262]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2d05d3f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x262
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2d05d3f
0x3b: V13 = EQ V11 0x2d05d3f
0x3c: V14 = 0x262
0x3f: JUMPI 0x262 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x291]
---
0x40 DUP1
0x41 PUSH4 0xb97bc86
0x46 EQ
0x47 PUSH2 0x291
0x4a JUMPI
---
0x41: V15 = 0xb97bc86
0x46: V16 = EQ 0xb97bc86 V11
0x47: V17 = 0x291
0x4a: JUMPI 0x291 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x2b6]
---
0x4b DUP1
0x4c PUSH4 0x13af4035
0x51 EQ
0x52 PUSH2 0x2b6
0x55 JUMPI
---
0x4c: V18 = 0x13af4035
0x51: V19 = EQ 0x13af4035 V11
0x52: V20 = 0x2b6
0x55: JUMPI 0x2b6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x2d7]
---
0x56 DUP1
0x57 PUSH4 0x144fa6d7
0x5c EQ
0x5d PUSH2 0x2d7
0x60 JUMPI
---
0x57: V21 = 0x144fa6d7
0x5c: V22 = EQ 0x144fa6d7 V11
0x5d: V23 = 0x2d7
0x60: JUMPI 0x2d7 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x2f6]
---
0x61 DUP1
0x62 PUSH4 0x3f516018
0x67 EQ
0x68 PUSH2 0x2f6
0x6b JUMPI
---
0x62: V24 = 0x3f516018
0x67: V25 = EQ 0x3f516018 V11
0x68: V26 = 0x2f6
0x6b: JUMPI 0x2f6 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x315]
---
0x6c DUP1
0x6d PUSH4 0x41c0e1b5
0x72 EQ
0x73 PUSH2 0x315
0x76 JUMPI
---
0x6d: V27 = 0x41c0e1b5
0x72: V28 = EQ 0x41c0e1b5 V11
0x73: V29 = 0x315
0x76: JUMPI 0x315 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x328]
---
0x77 DUP1
0x78 PUSH4 0x6e66f6e9
0x7d EQ
0x7e PUSH2 0x328
0x81 JUMPI
---
0x78: V30 = 0x6e66f6e9
0x7d: V31 = EQ 0x6e66f6e9 V11
0x7e: V32 = 0x328
0x81: JUMPI 0x328 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x33b]
---
0x82 DUP1
0x83 PUSH4 0x70a08231
0x88 EQ
0x89 PUSH2 0x33b
0x8c JUMPI
---
0x83: V33 = 0x70a08231
0x88: V34 = EQ 0x70a08231 V11
0x89: V35 = 0x33b
0x8c: JUMPI 0x33b V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x35a]
---
0x8d DUP1
0x8e PUSH4 0x739cb57d
0x93 EQ
0x94 PUSH2 0x35a
0x97 JUMPI
---
0x8e: V36 = 0x739cb57d
0x93: V37 = EQ 0x739cb57d V11
0x94: V38 = 0x35a
0x97: JUMPI 0x35a V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x370]
---
0x98 DUP1
0x99 PUSH4 0x82d95df5
0x9e EQ
0x9f PUSH2 0x370
0xa2 JUMPI
---
0x99: V39 = 0x82d95df5
0x9e: V40 = EQ 0x82d95df5 V11
0x9f: V41 = 0x370
0xa2: JUMPI 0x370 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x386]
---
0xa3 DUP1
0xa4 PUSH4 0x8da5cb5b
0xa9 EQ
0xaa PUSH2 0x386
0xad JUMPI
---
0xa4: V42 = 0x8da5cb5b
0xa9: V43 = EQ 0x8da5cb5b V11
0xaa: V44 = 0x386
0xad: JUMPI 0x386 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x399]
---
0xae DUP1
0xaf PUSH4 0x91b7f5ed
0xb4 EQ
0xb5 PUSH2 0x399
0xb8 JUMPI
---
0xaf: V45 = 0x91b7f5ed
0xb4: V46 = EQ 0x91b7f5ed V11
0xb5: V47 = 0x399
0xb8: JUMPI 0x399 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x3af]
---
0xb9 DUP1
0xba PUSH4 0xa035b1fe
0xbf EQ
0xc0 PUSH2 0x3af
0xc3 JUMPI
---
0xba: V48 = 0xa035b1fe
0xbf: V49 = EQ 0xa035b1fe V11
0xc0: V50 = 0x3af
0xc3: JUMPI 0x3af V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x3c2]
---
0xc4 DUP1
0xc5 PUSH4 0xc24a0f8b
0xca EQ
0xcb PUSH2 0x3c2
0xce JUMPI
---
0xc5: V51 = 0xc24a0f8b
0xca: V52 = EQ 0xc24a0f8b V11
0xcb: V53 = 0x3c2
0xce: JUMPI 0x3c2 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x3d5]
---
0xcf DUP1
0xd0 PUSH4 0xc32863a7
0xd5 EQ
0xd6 PUSH2 0x3d5
0xd9 JUMPI
---
0xd0: V54 = 0xc32863a7
0xd5: V55 = EQ 0xc32863a7 V11
0xd6: V56 = 0x3d5
0xd9: JUMPI 0x3d5 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0x0, 0xcf]
Successors: [0xe5, 0xe9]
---
0xda JUMPDEST
0xdb PUSH1 0x0
0xdd CALLVALUE
0xde DUP2
0xdf SWAP1
0xe0 GT
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0xda: JUMPDEST 
0xdb: V57 = 0x0
0xdd: V58 = CALLVALUE
0xe0: V59 = GT V58 0x0
0xe1: V60 = 0xe9
0xe4: JUMPI 0xe9 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0xda]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V61 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xe9
[0xe9:0xf2]
---
Predecessors: [0xda]
Successors: [0xf3, 0xf7]
---
0xe9 JUMPDEST
0xea PUSH1 0x5
0xec SLOAD
0xed TIMESTAMP
0xee GT
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xe9: JUMPDEST 
0xea: V62 = 0x5
0xec: V63 = S[0x5]
0xed: V64 = TIMESTAMP
0xee: V65 = GT V64 V63
0xef: V66 = 0xf7
0xf2: JUMPI 0xf7 V65
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xe9]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V67 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xf7
[0xf7:0x100]
---
Predecessors: [0xe9]
Successors: [0x101, 0x105]
---
0xf7 JUMPDEST
0xf8 PUSH1 0x6
0xfa SLOAD
0xfb TIMESTAMP
0xfc LT
0xfd PUSH2 0x105
0x100 JUMPI
---
0xf7: JUMPDEST 
0xf8: V68 = 0x6
0xfa: V69 = S[0x6]
0xfb: V70 = TIMESTAMP
0xfc: V71 = LT V70 V69
0xfd: V72 = 0x105
0x100: JUMPI 0x105 V71
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x101
[0x101:0x104]
---
Predecessors: [0xf7]
Successors: []
---
0x101 PUSH1 0x0
0x103 DUP1
0x104 REVERT
---
0x101: V73 = 0x0
0x104: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x105
[0x105:0x10f]
---
Predecessors: [0xf7]
Successors: [0x110, 0x126]
---
0x105 JUMPDEST
0x106 PUSH1 0x7
0x108 SLOAD
0x109 TIMESTAMP
0x10a GT
0x10b ISZERO
0x10c PUSH2 0x126
0x10f JUMPI
---
0x105: JUMPDEST 
0x106: V74 = 0x7
0x108: V75 = S[0x7]
0x109: V76 = TIMESTAMP
0x10a: V77 = GT V76 V75
0x10b: V78 = ISZERO V77
0x10c: V79 = 0x126
0x10f: JUMPI 0x126 V78
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x110
[0x110:0x125]
---
Predecessors: [0x105]
Successors: [0x126]
---
0x110 PUSH1 0x4
0x112 DUP1
0x113 SLOAD
0x114 PUSH1 0x14
0x116 DUP2
0x117 DIV
0x118 ADD
0x119 SWAP1
0x11a SSTORE
0x11b PUSH1 0x7
0x11d DUP1
0x11e SLOAD
0x11f PUSH3 0x13c680
0x123 ADD
0x124 SWAP1
0x125 SSTORE
---
0x110: V80 = 0x4
0x113: V81 = S[0x4]
0x114: V82 = 0x14
0x117: V83 = DIV V81 0x14
0x118: V84 = ADD V83 V81
0x11a: S[0x4] = V84
0x11b: V85 = 0x7
0x11e: V86 = S[0x7]
0x11f: V87 = 0x13c680
0x123: V88 = ADD 0x13c680 V86
0x125: S[0x7] = V88
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x126
[0x126:0x1b6]
---
Predecessors: [0x105, 0x110]
Successors: [0x1b7, 0x1bb]
---
0x126 JUMPDEST
0x127 POP
0x128 PUSH1 0x4
0x12a SLOAD
0x12b PUSH1 0x1
0x12d SLOAD
0x12e PUSH1 0x3
0x130 SLOAD
0x131 CALLVALUE
0x132 SWAP1
0x133 SWAP3
0x134 MUL
0x135 SWAP2
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e SWAP2
0x13f DUP3
0x140 AND
0x141 SWAP2
0x142 PUSH4 0x23b872dd
0x147 SWAP2
0x148 AND
0x149 CALLER
0x14a DUP5
0x14b PUSH1 0x0
0x14d PUSH1 0x40
0x14f MLOAD
0x150 PUSH1 0x20
0x152 ADD
0x153 MSTORE
0x154 PUSH1 0x40
0x156 MLOAD
0x157 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x175 PUSH4 0xffffffff
0x17a DUP7
0x17b AND
0x17c MUL
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 SWAP4
0x188 DUP5
0x189 AND
0x18a PUSH1 0x4
0x18c DUP3
0x18d ADD
0x18e MSTORE
0x18f SWAP2
0x190 SWAP1
0x191 SWAP3
0x192 AND
0x193 PUSH1 0x24
0x195 DUP3
0x196 ADD
0x197 MSTORE
0x198 PUSH1 0x44
0x19a DUP2
0x19b ADD
0x19c SWAP2
0x19d SWAP1
0x19e SWAP2
0x19f MSTORE
0x1a0 PUSH1 0x64
0x1a2 ADD
0x1a3 PUSH1 0x20
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP1
0x1a9 DUP4
0x1aa SUB
0x1ab DUP2
0x1ac PUSH1 0x0
0x1ae DUP8
0x1af DUP1
0x1b0 EXTCODESIZE
0x1b1 ISZERO
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0x126: JUMPDEST 
0x128: V89 = 0x4
0x12a: V90 = S[0x4]
0x12b: V91 = 0x1
0x12d: V92 = S[0x1]
0x12e: V93 = 0x3
0x130: V94 = S[0x3]
0x131: V95 = CALLVALUE
0x134: V96 = MUL V90 V95
0x136: V97 = 0x1
0x138: V98 = 0xa0
0x13a: V99 = 0x2
0x13c: V100 = EXP 0x2 0xa0
0x13d: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x140: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x142: V103 = 0x23b872dd
0x148: V104 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x149: V105 = CALLER
0x14b: V106 = 0x0
0x14d: V107 = 0x40
0x14f: V108 = M[0x40]
0x150: V109 = 0x20
0x152: V110 = ADD 0x20 V108
0x153: M[V110] = 0x0
0x154: V111 = 0x40
0x156: V112 = M[0x40]
0x157: V113 = 0x100000000000000000000000000000000000000000000000000000000
0x175: V114 = 0xffffffff
0x17b: V115 = AND 0x23b872dd 0xffffffff
0x17c: V116 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x17e: M[V112] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x17f: V117 = 0x1
0x181: V118 = 0xa0
0x183: V119 = 0x2
0x185: V120 = EXP 0x2 0xa0
0x186: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x18a: V123 = 0x4
0x18d: V124 = ADD V112 0x4
0x18e: M[V124] = V122
0x192: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x193: V126 = 0x24
0x196: V127 = ADD V112 0x24
0x197: M[V127] = V125
0x198: V128 = 0x44
0x19b: V129 = ADD V112 0x44
0x19f: M[V129] = V96
0x1a0: V130 = 0x64
0x1a2: V131 = ADD 0x64 V112
0x1a3: V132 = 0x20
0x1a5: V133 = 0x40
0x1a7: V134 = M[0x40]
0x1aa: V135 = SUB V131 V134
0x1ac: V136 = 0x0
0x1b0: V137 = EXTCODESIZE V102
0x1b1: V138 = ISZERO V137
0x1b2: V139 = ISZERO V138
0x1b3: V140 = 0x1bb
0x1b6: JUMPI 0x1bb V139
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V96, V102, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V102]
Exit stack: [V11, V96, V102, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V102]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0x126]
Successors: []
---
0x1b7 PUSH1 0x0
0x1b9 DUP1
0x1ba REVERT
---
0x1b7: V141 = 0x0
0x1ba: REVERT 0x0 0x0
---
Entry stack: [V11, V96, V102, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96, V102, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V102]

================================

Block 0x1bb
[0x1bb:0x1c7]
---
Predecessors: [0x126]
Successors: [0x1c8, 0x1cc]
---
0x1bb JUMPDEST
0x1bc PUSH2 0x2c6
0x1bf GAS
0x1c0 SUB
0x1c1 CALL
0x1c2 ISZERO
0x1c3 ISZERO
0x1c4 PUSH2 0x1cc
0x1c7 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V142 = 0x2c6
0x1bf: V143 = GAS
0x1c0: V144 = SUB V143 0x2c6
0x1c1: V145 = CALL V144 V102 0x0 V134 V135 V134 0x20
0x1c2: V146 = ISZERO V145
0x1c3: V147 = ISZERO V146
0x1c4: V148 = 0x1cc
0x1c7: JUMPI 0x1cc V147
---
Entry stack: [V11, V96, V102, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V102]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V96, V102, 0x23b872dd, V131]

================================

Block 0x1c8
[0x1c8:0x1cb]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c8 PUSH1 0x0
0x1ca DUP1
0x1cb REVERT
---
0x1c8: V149 = 0x0
0x1cb: REVERT 0x0 0x0
---
Entry stack: [V11, V96, V102, 0x23b872dd, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96, V102, 0x23b872dd, V131]

================================

Block 0x1cc
[0x1cc:0x25a]
---
Predecessors: [0x1bb]
Successors: [0x25b, 0x25f]
---
0x1cc JUMPDEST
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 MLOAD
0x1d5 SWAP1
0x1d6 POP
0x1d7 POP
0x1d8 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1f9 CALLER
0x1fa DUP3
0x1fb PUSH1 0x1
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 SWAP1
0x209 SWAP4
0x20a AND
0x20b DUP4
0x20c MSTORE
0x20d PUSH1 0x20
0x20f DUP4
0x210 ADD
0x211 SWAP2
0x212 SWAP1
0x213 SWAP2
0x214 MSTORE
0x215 ISZERO
0x216 ISZERO
0x217 PUSH1 0x40
0x219 DUP1
0x21a DUP4
0x21b ADD
0x21c SWAP2
0x21d SWAP1
0x21e SWAP2
0x21f MSTORE
0x220 PUSH1 0x60
0x222 SWAP1
0x223 SWAP2
0x224 ADD
0x225 SWAP1
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b LOG1
0x22c PUSH1 0x3
0x22e SLOAD
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 AND
0x238 CALLVALUE
0x239 DUP1
0x23a ISZERO
0x23b PUSH2 0x8fc
0x23e MUL
0x23f SWAP1
0x240 PUSH1 0x40
0x242 MLOAD
0x243 PUSH1 0x0
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 DUP4
0x24a SUB
0x24b DUP2
0x24c DUP6
0x24d DUP9
0x24e DUP9
0x24f CALL
0x250 SWAP4
0x251 POP
0x252 POP
0x253 POP
0x254 POP
0x255 ISZERO
0x256 ISZERO
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x1cc: JUMPDEST 
0x1d0: V150 = 0x40
0x1d2: V151 = M[0x40]
0x1d4: V152 = M[V151]
0x1d8: V153 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1f9: V154 = CALLER
0x1fb: V155 = 0x1
0x1fd: V156 = 0x40
0x1ff: V157 = M[0x40]
0x200: V158 = 0x1
0x202: V159 = 0xa0
0x204: V160 = 0x2
0x206: V161 = EXP 0x2 0xa0
0x207: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V163 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x20c: M[V157] = V163
0x20d: V164 = 0x20
0x210: V165 = ADD V157 0x20
0x214: M[V165] = V96
0x215: V166 = ISZERO 0x1
0x216: V167 = ISZERO 0x0
0x217: V168 = 0x40
0x21b: V169 = ADD V157 0x40
0x21f: M[V169] = 0x1
0x220: V170 = 0x60
0x224: V171 = ADD V157 0x60
0x226: V172 = M[0x40]
0x229: V173 = SUB V171 V172
0x22b: LOG V172 V173 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x22c: V174 = 0x3
0x22e: V175 = S[0x3]
0x22f: V176 = 0x1
0x231: V177 = 0xa0
0x233: V178 = 0x2
0x235: V179 = EXP 0x2 0xa0
0x236: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x237: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x238: V182 = CALLVALUE
0x23a: V183 = ISZERO V182
0x23b: V184 = 0x8fc
0x23e: V185 = MUL 0x8fc V183
0x240: V186 = 0x40
0x242: V187 = M[0x40]
0x243: V188 = 0x0
0x245: V189 = 0x40
0x247: V190 = M[0x40]
0x24a: V191 = SUB V187 V190
0x24f: V192 = CALL V185 V181 V182 V190 V191 V190 0x0
0x255: V193 = ISZERO V192
0x256: V194 = ISZERO V193
0x257: V195 = 0x25f
0x25a: JUMPI 0x25f V194
---
Entry stack: [V11, V96, V102, 0x23b872dd, V131]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, V96]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x1cc]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V196 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x25f
[0x25f:0x261]
---
Predecessors: [0x1cc]
Successors: []
---
0x25f JUMPDEST
0x260 POP
0x261 STOP
---
0x25f: JUMPDEST 
0x261: STOP 
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x262
[0x262:0x268]
---
Predecessors: [0xd]
Successors: [0x269, 0x26d]
---
0x262 JUMPDEST
0x263 CALLVALUE
0x264 ISZERO
0x265 PUSH2 0x26d
0x268 JUMPI
---
0x262: JUMPDEST 
0x263: V197 = CALLVALUE
0x264: V198 = ISZERO V197
0x265: V199 = 0x26d
0x268: JUMPI 0x26d V198
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x269
[0x269:0x26c]
---
Predecessors: [0x262]
Successors: []
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
---
0x269: V200 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x26d
[0x26d:0x274]
---
Predecessors: [0x262]
Successors: [0x3e8]
---
0x26d JUMPDEST
0x26e PUSH2 0x275
0x271 PUSH2 0x3e8
0x274 JUMP
---
0x26d: JUMPDEST 
0x26e: V201 = 0x275
0x271: V202 = 0x3e8
0x274: JUMP 0x3e8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x275]
Exit stack: [V11, 0x275]

================================

Block 0x275
[0x275:0x290]
---
Predecessors: [0x3e8, 0x504, 0x565]
Successors: []
---
0x275 JUMPDEST
0x276 PUSH1 0x40
0x278 MLOAD
0x279 PUSH1 0x1
0x27b PUSH1 0xa0
0x27d PUSH1 0x2
0x27f EXP
0x280 SUB
0x281 SWAP1
0x282 SWAP2
0x283 AND
0x284 DUP2
0x285 MSTORE
0x286 PUSH1 0x20
0x288 ADD
0x289 PUSH1 0x40
0x28b MLOAD
0x28c DUP1
0x28d SWAP2
0x28e SUB
0x28f SWAP1
0x290 RETURN
---
0x275: JUMPDEST 
0x276: V203 = 0x40
0x278: V204 = M[0x40]
0x279: V205 = 0x1
0x27b: V206 = 0xa0
0x27d: V207 = 0x2
0x27f: V208 = EXP 0x2 0xa0
0x280: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x283: V210 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x285: M[V204] = V210
0x286: V211 = 0x20
0x288: V212 = ADD 0x20 V204
0x289: V213 = 0x40
0x28b: V214 = M[0x40]
0x28e: V215 = SUB V212 V214
0x290: RETURN V214 V215
---
Entry stack: [V11, 0x275, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x275]

================================

Block 0x291
[0x291:0x297]
---
Predecessors: [0x40]
Successors: [0x298, 0x29c]
---
0x291 JUMPDEST
0x292 CALLVALUE
0x293 ISZERO
0x294 PUSH2 0x29c
0x297 JUMPI
---
0x291: JUMPDEST 
0x292: V216 = CALLVALUE
0x293: V217 = ISZERO V216
0x294: V218 = 0x29c
0x297: JUMPI 0x29c V217
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x298
[0x298:0x29b]
---
Predecessors: [0x291]
Successors: []
---
0x298 PUSH1 0x0
0x29a DUP1
0x29b REVERT
---
0x298: V219 = 0x0
0x29b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x29c
[0x29c:0x2a3]
---
Predecessors: [0x291]
Successors: [0x3f7]
---
0x29c JUMPDEST
0x29d PUSH2 0x2a4
0x2a0 PUSH2 0x3f7
0x2a3 JUMP
---
0x29c: JUMPDEST 
0x29d: V220 = 0x2a4
0x2a0: V221 = 0x3f7
0x2a3: JUMP 0x3f7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2a4]
Exit stack: [V11, 0x2a4]

================================

Block 0x2a4
[0x2a4:0x2b5]
---
Predecessors: [0x3f7, 0x513, 0x594, 0x59a, 0x5a0]
Successors: []
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 SWAP1
0x2a9 DUP2
0x2aa MSTORE
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 DUP1
0x2b2 SWAP2
0x2b3 SUB
0x2b4 SWAP1
0x2b5 RETURN
---
0x2a4: JUMPDEST 
0x2a5: V222 = 0x40
0x2a7: V223 = M[0x40]
0x2aa: M[V223] = S0
0x2ab: V224 = 0x20
0x2ad: V225 = ADD 0x20 V223
0x2ae: V226 = 0x40
0x2b0: V227 = M[0x40]
0x2b3: V228 = SUB V225 V227
0x2b5: RETURN V227 V228
---
Entry stack: [V11, 0x2a4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2a4]

================================

Block 0x2b6
[0x2b6:0x2bc]
---
Predecessors: [0x4b]
Successors: [0x2bd, 0x2c1]
---
0x2b6 JUMPDEST
0x2b7 CALLVALUE
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V229 = CALLVALUE
0x2b8: V230 = ISZERO V229
0x2b9: V231 = 0x2c1
0x2bc: JUMPI 0x2c1 V230
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2b6]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V232 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c1
[0x2c1:0x2d4]
---
Predecessors: [0x2b6]
Successors: [0x3fd]
---
0x2c1 JUMPDEST
0x2c2 PUSH2 0x2d5
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SUB
0x2cd PUSH1 0x4
0x2cf CALLDATALOAD
0x2d0 AND
0x2d1 PUSH2 0x3fd
0x2d4 JUMP
---
0x2c1: JUMPDEST 
0x2c2: V233 = 0x2d5
0x2c5: V234 = 0x1
0x2c7: V235 = 0xa0
0x2c9: V236 = 0x2
0x2cb: V237 = EXP 0x2 0xa0
0x2cc: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cd: V239 = 0x4
0x2cf: V240 = CALLDATALOAD 0x4
0x2d0: V241 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V242 = 0x3fd
0x2d4: JUMP 0x3fd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d5, V241]
Exit stack: [V11, 0x2d5, V241]

================================

Block 0x2d5
[0x2d5:0x2d6]
---
Predecessors: [0x418, 0x462, 0x4ac, 0x540, 0x560, 0x58f]
Successors: []
---
0x2d5 JUMPDEST
0x2d6 STOP
---
0x2d5: JUMPDEST 
0x2d6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d7
[0x2d7:0x2dd]
---
Predecessors: [0x56]
Successors: [0x2de, 0x2e2]
---
0x2d7 JUMPDEST
0x2d8 CALLVALUE
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V243 = CALLVALUE
0x2d9: V244 = ISZERO V243
0x2da: V245 = 0x2e2
0x2dd: JUMPI 0x2e2 V244
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x2d7]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V246 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e2
[0x2e2:0x2f5]
---
Predecessors: [0x2d7]
Successors: [0x447]
---
0x2e2 JUMPDEST
0x2e3 PUSH2 0x2d5
0x2e6 PUSH1 0x1
0x2e8 PUSH1 0xa0
0x2ea PUSH1 0x2
0x2ec EXP
0x2ed SUB
0x2ee PUSH1 0x4
0x2f0 CALLDATALOAD
0x2f1 AND
0x2f2 PUSH2 0x447
0x2f5 JUMP
---
0x2e2: JUMPDEST 
0x2e3: V247 = 0x2d5
0x2e6: V248 = 0x1
0x2e8: V249 = 0xa0
0x2ea: V250 = 0x2
0x2ec: V251 = EXP 0x2 0xa0
0x2ed: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ee: V253 = 0x4
0x2f0: V254 = CALLDATALOAD 0x4
0x2f1: V255 = AND V254 0xffffffffffffffffffffffffffffffffffffffff
0x2f2: V256 = 0x447
0x2f5: JUMP 0x447
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d5, V255]
Exit stack: [V11, 0x2d5, V255]

================================

Block 0x2f6
[0x2f6:0x2fc]
---
Predecessors: [0x61]
Successors: [0x2fd, 0x301]
---
0x2f6 JUMPDEST
0x2f7 CALLVALUE
0x2f8 ISZERO
0x2f9 PUSH2 0x301
0x2fc JUMPI
---
0x2f6: JUMPDEST 
0x2f7: V257 = CALLVALUE
0x2f8: V258 = ISZERO V257
0x2f9: V259 = 0x301
0x2fc: JUMPI 0x301 V258
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fd
[0x2fd:0x300]
---
Predecessors: [0x2f6]
Successors: []
---
0x2fd PUSH1 0x0
0x2ff DUP1
0x300 REVERT
---
0x2fd: V260 = 0x0
0x300: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x301
[0x301:0x314]
---
Predecessors: [0x2f6]
Successors: [0x491]
---
0x301 JUMPDEST
0x302 PUSH2 0x2d5
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d PUSH1 0x4
0x30f CALLDATALOAD
0x310 AND
0x311 PUSH2 0x491
0x314 JUMP
---
0x301: JUMPDEST 
0x302: V261 = 0x2d5
0x305: V262 = 0x1
0x307: V263 = 0xa0
0x309: V264 = 0x2
0x30b: V265 = EXP 0x2 0xa0
0x30c: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V267 = 0x4
0x30f: V268 = CALLDATALOAD 0x4
0x310: V269 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x311: V270 = 0x491
0x314: JUMP 0x491
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d5, V269]
Exit stack: [V11, 0x2d5, V269]

================================

Block 0x315
[0x315:0x31b]
---
Predecessors: [0x6c]
Successors: [0x31c, 0x320]
---
0x315 JUMPDEST
0x316 CALLVALUE
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x315: JUMPDEST 
0x316: V271 = CALLVALUE
0x317: V272 = ISZERO V271
0x318: V273 = 0x320
0x31b: JUMPI 0x320 V272
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x315]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V274 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x320
[0x320:0x327]
---
Predecessors: [0x315]
Successors: [0x4db]
---
0x320 JUMPDEST
0x321 PUSH2 0x2d5
0x324 PUSH2 0x4db
0x327 JUMP
---
0x320: JUMPDEST 
0x321: V275 = 0x2d5
0x324: V276 = 0x4db
0x327: JUMP 0x4db
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d5]
Exit stack: [V11, 0x2d5]

================================

Block 0x328
[0x328:0x32e]
---
Predecessors: [0x77]
Successors: [0x32f, 0x333]
---
0x328 JUMPDEST
0x329 CALLVALUE
0x32a ISZERO
0x32b PUSH2 0x333
0x32e JUMPI
---
0x328: JUMPDEST 
0x329: V277 = CALLVALUE
0x32a: V278 = ISZERO V277
0x32b: V279 = 0x333
0x32e: JUMPI 0x333 V278
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x32f
[0x32f:0x332]
---
Predecessors: [0x328]
Successors: []
---
0x32f PUSH1 0x0
0x331 DUP1
0x332 REVERT
---
0x32f: V280 = 0x0
0x332: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x333
[0x333:0x33a]
---
Predecessors: [0x328]
Successors: [0x504]
---
0x333 JUMPDEST
0x334 PUSH2 0x275
0x337 PUSH2 0x504
0x33a JUMP
---
0x333: JUMPDEST 
0x334: V281 = 0x275
0x337: V282 = 0x504
0x33a: JUMP 0x504
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x275]
Exit stack: [V11, 0x275]

================================

Block 0x33b
[0x33b:0x341]
---
Predecessors: [0x82]
Successors: [0x342, 0x346]
---
0x33b JUMPDEST
0x33c CALLVALUE
0x33d ISZERO
0x33e PUSH2 0x346
0x341 JUMPI
---
0x33b: JUMPDEST 
0x33c: V283 = CALLVALUE
0x33d: V284 = ISZERO V283
0x33e: V285 = 0x346
0x341: JUMPI 0x346 V284
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x342
[0x342:0x345]
---
Predecessors: [0x33b]
Successors: []
---
0x342 PUSH1 0x0
0x344 DUP1
0x345 REVERT
---
0x342: V286 = 0x0
0x345: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x346
[0x346:0x359]
---
Predecessors: [0x33b]
Successors: [0x513]
---
0x346 JUMPDEST
0x347 PUSH2 0x2a4
0x34a PUSH1 0x1
0x34c PUSH1 0xa0
0x34e PUSH1 0x2
0x350 EXP
0x351 SUB
0x352 PUSH1 0x4
0x354 CALLDATALOAD
0x355 AND
0x356 PUSH2 0x513
0x359 JUMP
---
0x346: JUMPDEST 
0x347: V287 = 0x2a4
0x34a: V288 = 0x1
0x34c: V289 = 0xa0
0x34e: V290 = 0x2
0x350: V291 = EXP 0x2 0xa0
0x351: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x352: V293 = 0x4
0x354: V294 = CALLDATALOAD 0x4
0x355: V295 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x356: V296 = 0x513
0x359: JUMP 0x513
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2a4, V295]
Exit stack: [V11, 0x2a4, V295]

================================

Block 0x35a
[0x35a:0x360]
---
Predecessors: [0x8d]
Successors: [0x361, 0x365]
---
0x35a JUMPDEST
0x35b CALLVALUE
0x35c ISZERO
0x35d PUSH2 0x365
0x360 JUMPI
---
0x35a: JUMPDEST 
0x35b: V297 = CALLVALUE
0x35c: V298 = ISZERO V297
0x35d: V299 = 0x365
0x360: JUMPI 0x365 V298
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x361
[0x361:0x364]
---
Predecessors: [0x35a]
Successors: []
---
0x361 PUSH1 0x0
0x363 DUP1
0x364 REVERT
---
0x361: V300 = 0x0
0x364: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x365
[0x365:0x36f]
---
Predecessors: [0x35a]
Successors: [0x525]
---
0x365 JUMPDEST
0x366 PUSH2 0x2d5
0x369 PUSH1 0x4
0x36b CALLDATALOAD
0x36c PUSH2 0x525
0x36f JUMP
---
0x365: JUMPDEST 
0x366: V301 = 0x2d5
0x369: V302 = 0x4
0x36b: V303 = CALLDATALOAD 0x4
0x36c: V304 = 0x525
0x36f: JUMP 0x525
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d5, V303]
Exit stack: [V11, 0x2d5, V303]

================================

Block 0x370
[0x370:0x376]
---
Predecessors: [0x98]
Successors: [0x377, 0x37b]
---
0x370 JUMPDEST
0x371 CALLVALUE
0x372 ISZERO
0x373 PUSH2 0x37b
0x376 JUMPI
---
0x370: JUMPDEST 
0x371: V305 = CALLVALUE
0x372: V306 = ISZERO V305
0x373: V307 = 0x37b
0x376: JUMPI 0x37b V306
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x377
[0x377:0x37a]
---
Predecessors: [0x370]
Successors: []
---
0x377 PUSH1 0x0
0x379 DUP1
0x37a REVERT
---
0x377: V308 = 0x0
0x37a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x37b
[0x37b:0x385]
---
Predecessors: [0x370]
Successors: [0x545]
---
0x37b JUMPDEST
0x37c PUSH2 0x2d5
0x37f PUSH1 0x4
0x381 CALLDATALOAD
0x382 PUSH2 0x545
0x385 JUMP
---
0x37b: JUMPDEST 
0x37c: V309 = 0x2d5
0x37f: V310 = 0x4
0x381: V311 = CALLDATALOAD 0x4
0x382: V312 = 0x545
0x385: JUMP 0x545
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d5, V311]
Exit stack: [V11, 0x2d5, V311]

================================

Block 0x386
[0x386:0x38c]
---
Predecessors: [0xa3]
Successors: [0x38d, 0x391]
---
0x386 JUMPDEST
0x387 CALLVALUE
0x388 ISZERO
0x389 PUSH2 0x391
0x38c JUMPI
---
0x386: JUMPDEST 
0x387: V313 = CALLVALUE
0x388: V314 = ISZERO V313
0x389: V315 = 0x391
0x38c: JUMPI 0x391 V314
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x38d
[0x38d:0x390]
---
Predecessors: [0x386]
Successors: []
---
0x38d PUSH1 0x0
0x38f DUP1
0x390 REVERT
---
0x38d: V316 = 0x0
0x390: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x391
[0x391:0x398]
---
Predecessors: [0x386]
Successors: [0x565]
---
0x391 JUMPDEST
0x392 PUSH2 0x275
0x395 PUSH2 0x565
0x398 JUMP
---
0x391: JUMPDEST 
0x392: V317 = 0x275
0x395: V318 = 0x565
0x398: JUMP 0x565
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x275]
Exit stack: [V11, 0x275]

================================

Block 0x399
[0x399:0x39f]
---
Predecessors: [0xae]
Successors: [0x3a0, 0x3a4]
---
0x399 JUMPDEST
0x39a CALLVALUE
0x39b ISZERO
0x39c PUSH2 0x3a4
0x39f JUMPI
---
0x399: JUMPDEST 
0x39a: V319 = CALLVALUE
0x39b: V320 = ISZERO V319
0x39c: V321 = 0x3a4
0x39f: JUMPI 0x3a4 V320
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x399]
Successors: []
---
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 REVERT
---
0x3a0: V322 = 0x0
0x3a3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a4
[0x3a4:0x3ae]
---
Predecessors: [0x399]
Successors: [0x574]
---
0x3a4 JUMPDEST
0x3a5 PUSH2 0x2d5
0x3a8 PUSH1 0x4
0x3aa CALLDATALOAD
0x3ab PUSH2 0x574
0x3ae JUMP
---
0x3a4: JUMPDEST 
0x3a5: V323 = 0x2d5
0x3a8: V324 = 0x4
0x3aa: V325 = CALLDATALOAD 0x4
0x3ab: V326 = 0x574
0x3ae: JUMP 0x574
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d5, V325]
Exit stack: [V11, 0x2d5, V325]

================================

Block 0x3af
[0x3af:0x3b5]
---
Predecessors: [0xb9]
Successors: [0x3b6, 0x3ba]
---
0x3af JUMPDEST
0x3b0 CALLVALUE
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x3af: JUMPDEST 
0x3b0: V327 = CALLVALUE
0x3b1: V328 = ISZERO V327
0x3b2: V329 = 0x3ba
0x3b5: JUMPI 0x3ba V328
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3af]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V330 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ba
[0x3ba:0x3c1]
---
Predecessors: [0x3af]
Successors: [0x594]
---
0x3ba JUMPDEST
0x3bb PUSH2 0x2a4
0x3be PUSH2 0x594
0x3c1 JUMP
---
0x3ba: JUMPDEST 
0x3bb: V331 = 0x2a4
0x3be: V332 = 0x594
0x3c1: JUMP 0x594
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2a4]
Exit stack: [V11, 0x2a4]

================================

Block 0x3c2
[0x3c2:0x3c8]
---
Predecessors: [0xc4]
Successors: [0x3c9, 0x3cd]
---
0x3c2 JUMPDEST
0x3c3 CALLVALUE
0x3c4 ISZERO
0x3c5 PUSH2 0x3cd
0x3c8 JUMPI
---
0x3c2: JUMPDEST 
0x3c3: V333 = CALLVALUE
0x3c4: V334 = ISZERO V333
0x3c5: V335 = 0x3cd
0x3c8: JUMPI 0x3cd V334
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c9
[0x3c9:0x3cc]
---
Predecessors: [0x3c2]
Successors: []
---
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc REVERT
---
0x3c9: V336 = 0x0
0x3cc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cd
[0x3cd:0x3d4]
---
Predecessors: [0x3c2]
Successors: [0x59a]
---
0x3cd JUMPDEST
0x3ce PUSH2 0x2a4
0x3d1 PUSH2 0x59a
0x3d4 JUMP
---
0x3cd: JUMPDEST 
0x3ce: V337 = 0x2a4
0x3d1: V338 = 0x59a
0x3d4: JUMP 0x59a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2a4]
Exit stack: [V11, 0x2a4]

================================

Block 0x3d5
[0x3d5:0x3db]
---
Predecessors: [0xcf]
Successors: [0x3dc, 0x3e0]
---
0x3d5 JUMPDEST
0x3d6 CALLVALUE
0x3d7 ISZERO
0x3d8 PUSH2 0x3e0
0x3db JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V339 = CALLVALUE
0x3d7: V340 = ISZERO V339
0x3d8: V341 = 0x3e0
0x3db: JUMPI 0x3e0 V340
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3dc
[0x3dc:0x3df]
---
Predecessors: [0x3d5]
Successors: []
---
0x3dc PUSH1 0x0
0x3de DUP1
0x3df REVERT
---
0x3dc: V342 = 0x0
0x3df: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e0
[0x3e0:0x3e7]
---
Predecessors: [0x3d5]
Successors: [0x5a0]
---
0x3e0 JUMPDEST
0x3e1 PUSH2 0x2a4
0x3e4 PUSH2 0x5a0
0x3e7 JUMP
---
0x3e0: JUMPDEST 
0x3e1: V343 = 0x2a4
0x3e4: V344 = 0x5a0
0x3e7: JUMP 0x5a0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2a4]
Exit stack: [V11, 0x2a4]

================================

Block 0x3e8
[0x3e8:0x3f6]
---
Predecessors: [0x26d]
Successors: [0x275]
---
0x3e8 JUMPDEST
0x3e9 PUSH1 0x2
0x3eb SLOAD
0x3ec PUSH1 0x1
0x3ee PUSH1 0xa0
0x3f0 PUSH1 0x2
0x3f2 EXP
0x3f3 SUB
0x3f4 AND
0x3f5 DUP2
0x3f6 JUMP
---
0x3e8: JUMPDEST 
0x3e9: V345 = 0x2
0x3eb: V346 = S[0x2]
0x3ec: V347 = 0x1
0x3ee: V348 = 0xa0
0x3f0: V349 = 0x2
0x3f2: V350 = EXP 0x2 0xa0
0x3f3: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f4: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x3f6: JUMP 0x275
---
Entry stack: [V11, 0x275]
Stack pops: 1
Stack additions: [S0, V352]
Exit stack: [V11, 0x275, V352]

================================

Block 0x3f7
[0x3f7:0x3fc]
---
Predecessors: [0x29c]
Successors: [0x2a4]
---
0x3f7 JUMPDEST
0x3f8 PUSH1 0x5
0x3fa SLOAD
0x3fb DUP2
0x3fc JUMP
---
0x3f7: JUMPDEST 
0x3f8: V353 = 0x5
0x3fa: V354 = S[0x5]
0x3fc: JUMP 0x2a4
---
Entry stack: [V11, 0x2a4]
Stack pops: 1
Stack additions: [S0, V354]
Exit stack: [V11, 0x2a4, V354]

================================

Block 0x3fd
[0x3fd:0x413]
---
Predecessors: [0x2c1]
Successors: [0x414, 0x418]
---
0x3fd JUMPDEST
0x3fe PUSH1 0x2
0x400 SLOAD
0x401 CALLER
0x402 PUSH1 0x1
0x404 PUSH1 0xa0
0x406 PUSH1 0x2
0x408 EXP
0x409 SUB
0x40a SWAP1
0x40b DUP2
0x40c AND
0x40d SWAP2
0x40e AND
0x40f EQ
0x410 PUSH2 0x418
0x413 JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V355 = 0x2
0x400: V356 = S[0x2]
0x401: V357 = CALLER
0x402: V358 = 0x1
0x404: V359 = 0xa0
0x406: V360 = 0x2
0x408: V361 = EXP 0x2 0xa0
0x409: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40c: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x40e: V364 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V365 = EQ V364 V363
0x410: V366 = 0x418
0x413: JUMPI 0x418 V365
---
Entry stack: [V11, 0x2d5, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V241]

================================

Block 0x414
[0x414:0x417]
---
Predecessors: [0x3fd]
Successors: []
---
0x414 PUSH1 0x0
0x416 DUP1
0x417 REVERT
---
0x414: V367 = 0x0
0x417: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d5, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V241]

================================

Block 0x418
[0x418:0x446]
---
Predecessors: [0x3fd]
Successors: [0x2d5]
---
0x418 JUMPDEST
0x419 PUSH1 0x3
0x41b DUP1
0x41c SLOAD
0x41d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x432 NOT
0x433 AND
0x434 PUSH1 0x1
0x436 PUSH1 0xa0
0x438 PUSH1 0x2
0x43a EXP
0x43b SUB
0x43c SWAP3
0x43d SWAP1
0x43e SWAP3
0x43f AND
0x440 SWAP2
0x441 SWAP1
0x442 SWAP2
0x443 OR
0x444 SWAP1
0x445 SSTORE
0x446 JUMP
---
0x418: JUMPDEST 
0x419: V368 = 0x3
0x41c: V369 = S[0x3]
0x41d: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x432: V371 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x433: V372 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V369
0x434: V373 = 0x1
0x436: V374 = 0xa0
0x438: V375 = 0x2
0x43a: V376 = EXP 0x2 0xa0
0x43b: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43f: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x443: V379 = OR V378 V372
0x445: S[0x3] = V379
0x446: JUMP 0x2d5
---
Entry stack: [V11, 0x2d5, V241]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x447
[0x447:0x45d]
---
Predecessors: [0x2e2]
Successors: [0x45e, 0x462]
---
0x447 JUMPDEST
0x448 PUSH1 0x2
0x44a SLOAD
0x44b CALLER
0x44c PUSH1 0x1
0x44e PUSH1 0xa0
0x450 PUSH1 0x2
0x452 EXP
0x453 SUB
0x454 SWAP1
0x455 DUP2
0x456 AND
0x457 SWAP2
0x458 AND
0x459 EQ
0x45a PUSH2 0x462
0x45d JUMPI
---
0x447: JUMPDEST 
0x448: V380 = 0x2
0x44a: V381 = S[0x2]
0x44b: V382 = CALLER
0x44c: V383 = 0x1
0x44e: V384 = 0xa0
0x450: V385 = 0x2
0x452: V386 = EXP 0x2 0xa0
0x453: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x456: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x458: V389 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x459: V390 = EQ V389 V388
0x45a: V391 = 0x462
0x45d: JUMPI 0x462 V390
---
Entry stack: [V11, 0x2d5, V255]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V255]

================================

Block 0x45e
[0x45e:0x461]
---
Predecessors: [0x447]
Successors: []
---
0x45e PUSH1 0x0
0x460 DUP1
0x461 REVERT
---
0x45e: V392 = 0x0
0x461: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d5, V255]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V255]

================================

Block 0x462
[0x462:0x490]
---
Predecessors: [0x447]
Successors: [0x2d5]
---
0x462 JUMPDEST
0x463 PUSH1 0x1
0x465 DUP1
0x466 SLOAD
0x467 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47c NOT
0x47d AND
0x47e PUSH1 0x1
0x480 PUSH1 0xa0
0x482 PUSH1 0x2
0x484 EXP
0x485 SUB
0x486 SWAP3
0x487 SWAP1
0x488 SWAP3
0x489 AND
0x48a SWAP2
0x48b SWAP1
0x48c SWAP2
0x48d OR
0x48e SWAP1
0x48f SSTORE
0x490 JUMP
---
0x462: JUMPDEST 
0x463: V393 = 0x1
0x466: V394 = S[0x1]
0x467: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x47c: V396 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x47d: V397 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V394
0x47e: V398 = 0x1
0x480: V399 = 0xa0
0x482: V400 = 0x2
0x484: V401 = EXP 0x2 0xa0
0x485: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x489: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x48d: V404 = OR V403 V397
0x48f: S[0x1] = V404
0x490: JUMP 0x2d5
---
Entry stack: [V11, 0x2d5, V255]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x491
[0x491:0x4a7]
---
Predecessors: [0x301]
Successors: [0x4a8, 0x4ac]
---
0x491 JUMPDEST
0x492 PUSH1 0x2
0x494 SLOAD
0x495 CALLER
0x496 PUSH1 0x1
0x498 PUSH1 0xa0
0x49a PUSH1 0x2
0x49c EXP
0x49d SUB
0x49e SWAP1
0x49f DUP2
0x4a0 AND
0x4a1 SWAP2
0x4a2 AND
0x4a3 EQ
0x4a4 PUSH2 0x4ac
0x4a7 JUMPI
---
0x491: JUMPDEST 
0x492: V405 = 0x2
0x494: V406 = S[0x2]
0x495: V407 = CALLER
0x496: V408 = 0x1
0x498: V409 = 0xa0
0x49a: V410 = 0x2
0x49c: V411 = EXP 0x2 0xa0
0x49d: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a0: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x4a2: V414 = AND V406 0xffffffffffffffffffffffffffffffffffffffff
0x4a3: V415 = EQ V414 V413
0x4a4: V416 = 0x4ac
0x4a7: JUMPI 0x4ac V415
---
Entry stack: [V11, 0x2d5, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V269]

================================

Block 0x4a8
[0x4a8:0x4ab]
---
Predecessors: [0x491]
Successors: []
---
0x4a8 PUSH1 0x0
0x4aa DUP1
0x4ab REVERT
---
0x4a8: V417 = 0x0
0x4ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d5, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V269]

================================

Block 0x4ac
[0x4ac:0x4da]
---
Predecessors: [0x491]
Successors: [0x2d5]
---
0x4ac JUMPDEST
0x4ad PUSH1 0x2
0x4af DUP1
0x4b0 SLOAD
0x4b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c6 NOT
0x4c7 AND
0x4c8 PUSH1 0x1
0x4ca PUSH1 0xa0
0x4cc PUSH1 0x2
0x4ce EXP
0x4cf SUB
0x4d0 SWAP3
0x4d1 SWAP1
0x4d2 SWAP3
0x4d3 AND
0x4d4 SWAP2
0x4d5 SWAP1
0x4d6 SWAP2
0x4d7 OR
0x4d8 SWAP1
0x4d9 SSTORE
0x4da JUMP
---
0x4ac: JUMPDEST 
0x4ad: V418 = 0x2
0x4b0: V419 = S[0x2]
0x4b1: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c6: V421 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V422 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V419
0x4c8: V423 = 0x1
0x4ca: V424 = 0xa0
0x4cc: V425 = 0x2
0x4ce: V426 = EXP 0x2 0xa0
0x4cf: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d3: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x4d7: V429 = OR V428 V422
0x4d9: S[0x2] = V429
0x4da: JUMP 0x2d5
---
Entry stack: [V11, 0x2d5, V269]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4db
[0x4db:0x4f1]
---
Predecessors: [0x320]
Successors: [0x4f2, 0x4f6]
---
0x4db JUMPDEST
0x4dc PUSH1 0x2
0x4de SLOAD
0x4df CALLER
0x4e0 PUSH1 0x1
0x4e2 PUSH1 0xa0
0x4e4 PUSH1 0x2
0x4e6 EXP
0x4e7 SUB
0x4e8 SWAP1
0x4e9 DUP2
0x4ea AND
0x4eb SWAP2
0x4ec AND
0x4ed EQ
0x4ee PUSH2 0x4f6
0x4f1 JUMPI
---
0x4db: JUMPDEST 
0x4dc: V430 = 0x2
0x4de: V431 = S[0x2]
0x4df: V432 = CALLER
0x4e0: V433 = 0x1
0x4e2: V434 = 0xa0
0x4e4: V435 = 0x2
0x4e6: V436 = EXP 0x2 0xa0
0x4e7: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x4ec: V439 = AND V431 0xffffffffffffffffffffffffffffffffffffffff
0x4ed: V440 = EQ V439 V438
0x4ee: V441 = 0x4f6
0x4f1: JUMPI 0x4f6 V440
---
Entry stack: [V11, 0x2d5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5]

================================

Block 0x4f2
[0x4f2:0x4f5]
---
Predecessors: [0x4db]
Successors: []
---
0x4f2 PUSH1 0x0
0x4f4 DUP1
0x4f5 REVERT
---
0x4f2: V442 = 0x0
0x4f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5]

================================

Block 0x4f6
[0x4f6:0x503]
---
Predecessors: [0x4db]
Successors: []
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x3
0x4f9 SLOAD
0x4fa PUSH1 0x1
0x4fc PUSH1 0xa0
0x4fe PUSH1 0x2
0x500 EXP
0x501 SUB
0x502 AND
0x503 SELFDESTRUCT
---
0x4f6: JUMPDEST 
0x4f7: V443 = 0x3
0x4f9: V444 = S[0x3]
0x4fa: V445 = 0x1
0x4fc: V446 = 0xa0
0x4fe: V447 = 0x2
0x500: V448 = EXP 0x2 0xa0
0x501: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x502: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x503: SELFDESTRUCT V450
---
Entry stack: [V11, 0x2d5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5]

================================

Block 0x504
[0x504:0x512]
---
Predecessors: [0x333]
Successors: [0x275]
---
0x504 JUMPDEST
0x505 PUSH1 0x1
0x507 SLOAD
0x508 PUSH1 0x1
0x50a PUSH1 0xa0
0x50c PUSH1 0x2
0x50e EXP
0x50f SUB
0x510 AND
0x511 DUP2
0x512 JUMP
---
0x504: JUMPDEST 
0x505: V451 = 0x1
0x507: V452 = S[0x1]
0x508: V453 = 0x1
0x50a: V454 = 0xa0
0x50c: V455 = 0x2
0x50e: V456 = EXP 0x2 0xa0
0x50f: V457 = SUB 0x10000000000000000000000000000000000000000 0x1
0x510: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x512: JUMP 0x275
---
Entry stack: [V11, 0x275]
Stack pops: 1
Stack additions: [S0, V458]
Exit stack: [V11, 0x275, V458]

================================

Block 0x513
[0x513:0x524]
---
Predecessors: [0x346]
Successors: [0x2a4]
---
0x513 JUMPDEST
0x514 PUSH1 0x0
0x516 PUSH1 0x20
0x518 DUP2
0x519 SWAP1
0x51a MSTORE
0x51b SWAP1
0x51c DUP2
0x51d MSTORE
0x51e PUSH1 0x40
0x520 SWAP1
0x521 SHA3
0x522 SLOAD
0x523 DUP2
0x524 JUMP
---
0x513: JUMPDEST 
0x514: V459 = 0x0
0x516: V460 = 0x20
0x51a: M[0x20] = 0x0
0x51d: M[0x0] = V295
0x51e: V461 = 0x40
0x521: V462 = SHA3 0x0 0x40
0x522: V463 = S[V462]
0x524: JUMP 0x2a4
---
Entry stack: [V11, 0x2a4, V295]
Stack pops: 2
Stack additions: [S1, V463]
Exit stack: [V11, 0x2a4, V463]

================================

Block 0x525
[0x525:0x53b]
---
Predecessors: [0x365]
Successors: [0x53c, 0x540]
---
0x525 JUMPDEST
0x526 PUSH1 0x2
0x528 SLOAD
0x529 CALLER
0x52a PUSH1 0x1
0x52c PUSH1 0xa0
0x52e PUSH1 0x2
0x530 EXP
0x531 SUB
0x532 SWAP1
0x533 DUP2
0x534 AND
0x535 SWAP2
0x536 AND
0x537 EQ
0x538 PUSH2 0x540
0x53b JUMPI
---
0x525: JUMPDEST 
0x526: V464 = 0x2
0x528: V465 = S[0x2]
0x529: V466 = CALLER
0x52a: V467 = 0x1
0x52c: V468 = 0xa0
0x52e: V469 = 0x2
0x530: V470 = EXP 0x2 0xa0
0x531: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x534: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x536: V473 = AND V465 0xffffffffffffffffffffffffffffffffffffffff
0x537: V474 = EQ V473 V472
0x538: V475 = 0x540
0x53b: JUMPI 0x540 V474
---
Entry stack: [V11, 0x2d5, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V303]

================================

Block 0x53c
[0x53c:0x53f]
---
Predecessors: [0x525]
Successors: []
---
0x53c PUSH1 0x0
0x53e DUP1
0x53f REVERT
---
0x53c: V476 = 0x0
0x53f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d5, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V303]

================================

Block 0x540
[0x540:0x544]
---
Predecessors: [0x525]
Successors: [0x2d5]
---
0x540 JUMPDEST
0x541 PUSH1 0x6
0x543 SSTORE
0x544 JUMP
---
0x540: JUMPDEST 
0x541: V477 = 0x6
0x543: S[0x6] = V303
0x544: JUMP 0x2d5
---
Entry stack: [V11, 0x2d5, V303]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x545
[0x545:0x55b]
---
Predecessors: [0x37b]
Successors: [0x55c, 0x560]
---
0x545 JUMPDEST
0x546 PUSH1 0x2
0x548 SLOAD
0x549 CALLER
0x54a PUSH1 0x1
0x54c PUSH1 0xa0
0x54e PUSH1 0x2
0x550 EXP
0x551 SUB
0x552 SWAP1
0x553 DUP2
0x554 AND
0x555 SWAP2
0x556 AND
0x557 EQ
0x558 PUSH2 0x560
0x55b JUMPI
---
0x545: JUMPDEST 
0x546: V478 = 0x2
0x548: V479 = S[0x2]
0x549: V480 = CALLER
0x54a: V481 = 0x1
0x54c: V482 = 0xa0
0x54e: V483 = 0x2
0x550: V484 = EXP 0x2 0xa0
0x551: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x554: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x556: V487 = AND V479 0xffffffffffffffffffffffffffffffffffffffff
0x557: V488 = EQ V487 V486
0x558: V489 = 0x560
0x55b: JUMPI 0x560 V488
---
Entry stack: [V11, 0x2d5, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V311]

================================

Block 0x55c
[0x55c:0x55f]
---
Predecessors: [0x545]
Successors: []
---
0x55c PUSH1 0x0
0x55e DUP1
0x55f REVERT
---
0x55c: V490 = 0x0
0x55f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d5, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V311]

================================

Block 0x560
[0x560:0x564]
---
Predecessors: [0x545]
Successors: [0x2d5]
---
0x560 JUMPDEST
0x561 PUSH1 0x5
0x563 SSTORE
0x564 JUMP
---
0x560: JUMPDEST 
0x561: V491 = 0x5
0x563: S[0x5] = V311
0x564: JUMP 0x2d5
---
Entry stack: [V11, 0x2d5, V311]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x565
[0x565:0x573]
---
Predecessors: [0x391]
Successors: [0x275]
---
0x565 JUMPDEST
0x566 PUSH1 0x3
0x568 SLOAD
0x569 PUSH1 0x1
0x56b PUSH1 0xa0
0x56d PUSH1 0x2
0x56f EXP
0x570 SUB
0x571 AND
0x572 DUP2
0x573 JUMP
---
0x565: JUMPDEST 
0x566: V492 = 0x3
0x568: V493 = S[0x3]
0x569: V494 = 0x1
0x56b: V495 = 0xa0
0x56d: V496 = 0x2
0x56f: V497 = EXP 0x2 0xa0
0x570: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x571: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x573: JUMP 0x275
---
Entry stack: [V11, 0x275]
Stack pops: 1
Stack additions: [S0, V499]
Exit stack: [V11, 0x275, V499]

================================

Block 0x574
[0x574:0x58a]
---
Predecessors: [0x3a4]
Successors: [0x58b, 0x58f]
---
0x574 JUMPDEST
0x575 PUSH1 0x2
0x577 SLOAD
0x578 CALLER
0x579 PUSH1 0x1
0x57b PUSH1 0xa0
0x57d PUSH1 0x2
0x57f EXP
0x580 SUB
0x581 SWAP1
0x582 DUP2
0x583 AND
0x584 SWAP2
0x585 AND
0x586 EQ
0x587 PUSH2 0x58f
0x58a JUMPI
---
0x574: JUMPDEST 
0x575: V500 = 0x2
0x577: V501 = S[0x2]
0x578: V502 = CALLER
0x579: V503 = 0x1
0x57b: V504 = 0xa0
0x57d: V505 = 0x2
0x57f: V506 = EXP 0x2 0xa0
0x580: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x583: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x585: V509 = AND V501 0xffffffffffffffffffffffffffffffffffffffff
0x586: V510 = EQ V509 V508
0x587: V511 = 0x58f
0x58a: JUMPI 0x58f V510
---
Entry stack: [V11, 0x2d5, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V325]

================================

Block 0x58b
[0x58b:0x58e]
---
Predecessors: [0x574]
Successors: []
---
0x58b PUSH1 0x0
0x58d DUP1
0x58e REVERT
---
0x58b: V512 = 0x0
0x58e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d5, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d5, V325]

================================

Block 0x58f
[0x58f:0x593]
---
Predecessors: [0x574]
Successors: [0x2d5]
---
0x58f JUMPDEST
0x590 PUSH1 0x4
0x592 SSTORE
0x593 JUMP
---
0x58f: JUMPDEST 
0x590: V513 = 0x4
0x592: S[0x4] = V325
0x593: JUMP 0x2d5
---
Entry stack: [V11, 0x2d5, V325]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x594
[0x594:0x599]
---
Predecessors: [0x3ba]
Successors: [0x2a4]
---
0x594 JUMPDEST
0x595 PUSH1 0x4
0x597 SLOAD
0x598 DUP2
0x599 JUMP
---
0x594: JUMPDEST 
0x595: V514 = 0x4
0x597: V515 = S[0x4]
0x599: JUMP 0x2a4
---
Entry stack: [V11, 0x2a4]
Stack pops: 1
Stack additions: [S0, V515]
Exit stack: [V11, 0x2a4, V515]

================================

Block 0x59a
[0x59a:0x59f]
---
Predecessors: [0x3cd]
Successors: [0x2a4]
---
0x59a JUMPDEST
0x59b PUSH1 0x6
0x59d SLOAD
0x59e DUP2
0x59f JUMP
---
0x59a: JUMPDEST 
0x59b: V516 = 0x6
0x59d: V517 = S[0x6]
0x59f: JUMP 0x2a4
---
Entry stack: [V11, 0x2a4]
Stack pops: 1
Stack additions: [S0, V517]
Exit stack: [V11, 0x2a4, V517]

================================

Block 0x5a0
[0x5a0:0x5a5]
---
Predecessors: [0x3e0]
Successors: [0x2a4]
---
0x5a0 JUMPDEST
0x5a1 PUSH1 0x7
0x5a3 SLOAD
0x5a4 DUP2
0x5a5 JUMP
---
0x5a0: JUMPDEST 
0x5a1: V518 = 0x7
0x5a3: V519 = S[0x7]
0x5a5: JUMP 0x2a4
---
Entry stack: [V11, 0x2a4]
Stack pops: 1
Stack additions: [S0, V519]
Exit stack: [V11, 0x2a4, V519]

================================

Block 0x5a6
[0x5a6:0x5ec]
---
Predecessors: []
Successors: []
---
0x5a6 STOP
0x5a7 LOG1
0x5a8 PUSH6 0x627a7a723058
0x5af SHA3
0x5b0 DUP4
0x5b1 OR
0x5b2 DELEGATECALL
0x5b3 PUSH23 0xbd2a9df31483c3709a7d9bee22a567ab1d331b337de84
0x5cb MISSING 0x1f
0x5cc XOR
0x5cd PUSH31 0xa7750029
---
0x5a6: STOP 
0x5a7: LOG S0 S1 S2
0x5a8: V520 = 0x627a7a723058
0x5af: V521 = SHA3 0x627a7a723058 S3
0x5b1: V522 = OR S6 V521
0x5b2: V523 = DELEGATECALL V522 S4 S5 S6 S7 S8
0x5b3: V524 = 0xbd2a9df31483c3709a7d9bee22a567ab1d331b337de84
0x5cb: MISSING 0x1f
0x5cc: V525 = XOR S0 S1
0x5cd: V526 = 0xa7750029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbd2a9df31483c3709a7d9bee22a567ab1d331b337de84, V523, 0xa7750029, V525]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x262
Exit block: 0x275
Body: 0x262, 0x269, 0x26d, 0x275, 0x3e8

Function 1:
Public function signature: 0xb97bc86
Entry block: 0x291
Exit block: 0x2a4
Body: 0x291, 0x298, 0x29c, 0x2a4, 0x3f7

Function 2:
Public function signature: 0x13af4035
Entry block: 0x2b6
Exit block: 0x2d5
Body: 0x2b6, 0x2bd, 0x2c1, 0x2d5, 0x3fd, 0x414, 0x418

Function 3:
Public function signature: 0x144fa6d7
Entry block: 0x2d7
Exit block: 0x2d5
Body: 0x2d5, 0x2d7, 0x2de, 0x2e2, 0x447, 0x45e, 0x462

Function 4:
Public function signature: 0x3f516018
Entry block: 0x2f6
Exit block: 0x2d5
Body: 0x2d5, 0x2f6, 0x2fd, 0x301, 0x491, 0x4a8, 0x4ac

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x315
Exit block: 0x4f2
Body: 0x315, 0x31c, 0x320, 0x4db, 0x4f2, 0x4f6

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x328
Exit block: 0x275
Body: 0x275, 0x328, 0x32f, 0x333, 0x504

Function 7:
Public function signature: 0x70a08231
Entry block: 0x33b
Exit block: 0x2a4
Body: 0x2a4, 0x33b, 0x342, 0x346, 0x513

Function 8:
Public function signature: 0x739cb57d
Entry block: 0x35a
Exit block: 0x2d5
Body: 0x2d5, 0x35a, 0x361, 0x365, 0x525, 0x53c, 0x540

Function 9:
Public function signature: 0x82d95df5
Entry block: 0x370
Exit block: 0x2d5
Body: 0x2d5, 0x370, 0x377, 0x37b, 0x545, 0x55c, 0x560

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x386
Exit block: 0x275
Body: 0x275, 0x386, 0x38d, 0x391, 0x565

Function 11:
Public function signature: 0x91b7f5ed
Entry block: 0x399
Exit block: 0x2d5
Body: 0x2d5, 0x399, 0x3a0, 0x3a4, 0x574, 0x58b, 0x58f

Function 12:
Public function signature: 0xa035b1fe
Entry block: 0x3af
Exit block: 0x2a4
Body: 0x2a4, 0x3af, 0x3b6, 0x3ba, 0x594

Function 13:
Public function signature: 0xc24a0f8b
Entry block: 0x3c2
Exit block: 0x2a4
Body: 0x2a4, 0x3c2, 0x3c9, 0x3cd, 0x59a

Function 14:
Public function signature: 0xc32863a7
Entry block: 0x3d5
Exit block: 0x2a4
Body: 0x2a4, 0x3d5, 0x3dc, 0x3e0, 0x5a0

Function 15:
Public fallback function
Entry block: 0xda
Exit block: 0x25f
Body: 0xda, 0xe5, 0xe9, 0xf3, 0xf7, 0x101, 0x105, 0x110, 0x126, 0x1b7, 0x1bb, 0x1c8, 0x1cc, 0x25b, 0x25f

