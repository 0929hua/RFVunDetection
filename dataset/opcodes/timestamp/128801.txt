Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x81]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x81
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x81
0xa: JUMPI 0x81 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x2cf]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x29dcb0cf
0x3a EQ
0x3b PUSH2 0x2cf
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x29dcb0cf
0x3a: V12 = EQ 0x29dcb0cf V10
0x3b: V13 = 0x2cf
0x3e: JUMPI 0x2cf V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x2f8]
---
0x3f DUP1
0x40 PUSH4 0x38af3eed
0x45 EQ
0x46 PUSH2 0x2f8
0x49 JUMPI
---
0x40: V14 = 0x38af3eed
0x45: V15 = EQ 0x38af3eed V10
0x46: V16 = 0x2f8
0x49: JUMPI 0x2f8 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x34d]
---
0x4a DUP1
0x4b PUSH4 0x43d726d6
0x50 EQ
0x51 PUSH2 0x34d
0x54 JUMPI
---
0x4b: V17 = 0x43d726d6
0x50: V18 = EQ 0x43d726d6 V10
0x51: V19 = 0x34d
0x54: JUMPI 0x34d V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x362]
---
0x55 DUP1
0x56 PUSH4 0x6e66f6e9
0x5b EQ
0x5c PUSH2 0x362
0x5f JUMPI
---
0x56: V20 = 0x6e66f6e9
0x5b: V21 = EQ 0x6e66f6e9 V10
0x5c: V22 = 0x362
0x5f: JUMPI 0x362 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x3b7]
---
0x60 DUP1
0x61 PUSH4 0x7b3e5e7b
0x66 EQ
0x67 PUSH2 0x3b7
0x6a JUMPI
---
0x61: V23 = 0x7b3e5e7b
0x66: V24 = EQ 0x7b3e5e7b V10
0x67: V25 = 0x3b7
0x6a: JUMPI 0x3b7 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x3e0]
---
0x6b DUP1
0x6c PUSH4 0xa035b1fe
0x71 EQ
0x72 PUSH2 0x3e0
0x75 JUMPI
---
0x6c: V26 = 0xa035b1fe
0x71: V27 = EQ 0xa035b1fe V10
0x72: V28 = 0x3e0
0x75: JUMPI 0x3e0 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x409]
---
0x76 DUP1
0x77 PUSH4 0xccb07cef
0x7c EQ
0x7d PUSH2 0x409
0x80 JUMPI
---
0x77: V29 = 0xccb07cef
0x7c: V30 = EQ 0xccb07cef V10
0x7d: V31 = 0x409
0x80: JUMPI 0x409 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x81]
---
Predecessors: [0x0, 0x76]
Successors: [0x82]
---
0x81 JUMPDEST
---
0x81: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x82
[0x82:0x9c]
---
Predecessors: [0x81]
Successors: [0x9d, 0xa1]
---
0x82 JUMPDEST
0x83 PUSH1 0x0
0x85 DUP1
0x86 PUSH1 0x4
0x88 PUSH1 0x14
0x8a SWAP1
0x8b SLOAD
0x8c SWAP1
0x8d PUSH2 0x100
0x90 EXP
0x91 SWAP1
0x92 DIV
0x93 PUSH1 0xff
0x95 AND
0x96 ISZERO
0x97 ISZERO
0x98 ISZERO
0x99 PUSH2 0xa1
0x9c JUMPI
---
0x82: JUMPDEST 
0x83: V32 = 0x0
0x86: V33 = 0x4
0x88: V34 = 0x14
0x8b: V35 = S[0x4]
0x8d: V36 = 0x100
0x90: V37 = EXP 0x100 0x14
0x92: V38 = DIV V35 0x10000000000000000000000000000000000000000
0x93: V39 = 0xff
0x95: V40 = AND 0xff V38
0x96: V41 = ISZERO V40
0x97: V42 = ISZERO V41
0x98: V43 = ISZERO V42
0x99: V44 = 0xa1
0x9c: JUMPI 0xa1 V43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x9d
[0x9d:0xa0]
---
Predecessors: [0x82]
Successors: []
---
0x9d PUSH1 0x0
0x9f DUP1
0xa0 REVERT
---
0x9d: V45 = 0x0
0xa0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xa1
[0xa1:0xbf]
---
Predecessors: [0x82]
Successors: [0xc0, 0xc1]
---
0xa1 JUMPDEST
0xa2 CALLVALUE
0xa3 SWAP2
0xa4 POP
0xa5 DUP2
0xa6 PUSH1 0x1
0xa8 PUSH1 0x0
0xaa DUP3
0xab DUP3
0xac SLOAD
0xad ADD
0xae SWAP3
0xaf POP
0xb0 POP
0xb1 DUP2
0xb2 SWAP1
0xb3 SSTORE
0xb4 POP
0xb5 PUSH1 0x3
0xb7 SLOAD
0xb8 DUP3
0xb9 DUP2
0xba ISZERO
0xbb ISZERO
0xbc PUSH2 0xc1
0xbf JUMPI
---
0xa1: JUMPDEST 
0xa2: V46 = CALLVALUE
0xa6: V47 = 0x1
0xa8: V48 = 0x0
0xac: V49 = S[0x1]
0xad: V50 = ADD V49 V46
0xb3: S[0x1] = V50
0xb5: V51 = 0x3
0xb7: V52 = S[0x3]
0xba: V53 = ISZERO V52
0xbb: V54 = ISZERO V53
0xbc: V55 = 0xc1
0xbf: JUMPI 0xc1 V54
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 2
Stack additions: [V46, S0, V52, V46]
Exit stack: [V10, V46, 0x0, V52, V46]

================================

Block 0xc0
[0xc0:0xc0]
---
Predecessors: [0xa1]
Successors: []
---
0xc0 INVALID
---
0xc0: INVALID 
---
Entry stack: [V10, V46, 0x0, V52, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V46, 0x0, V52, V46]

================================

Block 0xc1
[0xc1:0x120]
---
Predecessors: [0xa1]
Successors: [0x121, 0x125]
---
0xc1 JUMPDEST
0xc2 DIV
0xc3 SWAP1
0xc4 POP
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 SWAP1
0xc9 SLOAD
0xca SWAP1
0xcb PUSH2 0x100
0xce EXP
0xcf SWAP1
0xd0 DIV
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 AND
0xe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc AND
0xfd PUSH2 0x8fc
0x100 DUP4
0x101 SWAP1
0x102 DUP2
0x103 ISZERO
0x104 MUL
0x105 SWAP1
0x106 PUSH1 0x40
0x108 MLOAD
0x109 PUSH1 0x0
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f DUP4
0x110 SUB
0x111 DUP2
0x112 DUP6
0x113 DUP9
0x114 DUP9
0x115 CALL
0x116 SWAP4
0x117 POP
0x118 POP
0x119 POP
0x11a POP
0x11b ISZERO
0x11c ISZERO
0x11d PUSH2 0x125
0x120 JUMPI
---
0xc1: JUMPDEST 
0xc2: V56 = DIV V46 V52
0xc5: V57 = 0x0
0xc9: V58 = S[0x0]
0xcb: V59 = 0x100
0xce: V60 = EXP 0x100 0x0
0xd0: V61 = DIV V58 0x1
0xd1: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xe7: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xfd: V66 = 0x8fc
0x103: V67 = ISZERO V46
0x104: V68 = MUL V67 0x8fc
0x106: V69 = 0x40
0x108: V70 = M[0x40]
0x109: V71 = 0x0
0x10b: V72 = 0x40
0x10d: V73 = M[0x40]
0x110: V74 = SUB V70 V73
0x115: V75 = CALL V68 V65 V46 V73 V74 V73 0x0
0x11b: V76 = ISZERO V75
0x11c: V77 = ISZERO V76
0x11d: V78 = 0x125
0x120: JUMPI 0x125 V77
---
Entry stack: [V10, V46, 0x0, V52, V46]
Stack pops: 4
Stack additions: [S3, V56]
Exit stack: [V10, V46, V56]

================================

Block 0x121
[0x121:0x124]
---
Predecessors: [0xc1]
Successors: []
---
0x121 PUSH1 0x0
0x123 DUP1
0x124 REVERT
---
0x121: V79 = 0x0
0x124: REVERT 0x0 0x0
---
Entry stack: [V10, V46, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V46, V56]

================================

Block 0x125
[0x125:0x239]
---
Predecessors: [0xc1]
Successors: [0x23a, 0x23e]
---
0x125 JUMPDEST
0x126 PUSH1 0x4
0x128 PUSH1 0x0
0x12a SWAP1
0x12b SLOAD
0x12c SWAP1
0x12d PUSH2 0x100
0x130 EXP
0x131 SWAP1
0x132 DIV
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f PUSH4 0x23b872dd
0x164 PUSH1 0x0
0x166 DUP1
0x167 SWAP1
0x168 SLOAD
0x169 SWAP1
0x16a PUSH2 0x100
0x16d EXP
0x16e SWAP1
0x16f DIV
0x170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x185 AND
0x186 CALLER
0x187 DUP5
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP5
0x18c PUSH4 0xffffffff
0x191 AND
0x192 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1b0 MUL
0x1b1 DUP2
0x1b2 MSTORE
0x1b3 PUSH1 0x4
0x1b5 ADD
0x1b6 DUP1
0x1b7 DUP5
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd AND
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 DUP4
0x1ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ff AND
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 DUP2
0x217 MSTORE
0x218 PUSH1 0x20
0x21a ADD
0x21b DUP3
0x21c DUP2
0x21d MSTORE
0x21e PUSH1 0x20
0x220 ADD
0x221 SWAP4
0x222 POP
0x223 POP
0x224 POP
0x225 POP
0x226 PUSH1 0x0
0x228 PUSH1 0x40
0x22a MLOAD
0x22b DUP1
0x22c DUP4
0x22d SUB
0x22e DUP2
0x22f PUSH1 0x0
0x231 DUP8
0x232 DUP1
0x233 EXTCODESIZE
0x234 ISZERO
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x125: JUMPDEST 
0x126: V80 = 0x4
0x128: V81 = 0x0
0x12b: V82 = S[0x4]
0x12d: V83 = 0x100
0x130: V84 = EXP 0x100 0x0
0x132: V85 = DIV V82 0x1
0x133: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x149: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x15f: V90 = 0x23b872dd
0x164: V91 = 0x0
0x168: V92 = S[0x0]
0x16a: V93 = 0x100
0x16d: V94 = EXP 0x100 0x0
0x16f: V95 = DIV V92 0x1
0x170: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x185: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x186: V98 = CALLER
0x188: V99 = 0x40
0x18a: V100 = M[0x40]
0x18c: V101 = 0xffffffff
0x191: V102 = AND 0xffffffff 0x23b872dd
0x192: V103 = 0x100000000000000000000000000000000000000000000000000000000
0x1b0: V104 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x1b2: M[V100] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1b3: V105 = 0x4
0x1b5: V106 = ADD 0x4 V100
0x1b8: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1ce: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1e5: M[V106] = V110
0x1e6: V111 = 0x20
0x1e8: V112 = ADD 0x20 V106
0x1ea: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x200: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x217: M[V112] = V116
0x218: V117 = 0x20
0x21a: V118 = ADD 0x20 V112
0x21d: M[V118] = V56
0x21e: V119 = 0x20
0x220: V120 = ADD 0x20 V118
0x226: V121 = 0x0
0x228: V122 = 0x40
0x22a: V123 = M[0x40]
0x22d: V124 = SUB V120 V123
0x22f: V125 = 0x0
0x233: V126 = EXTCODESIZE V89
0x234: V127 = ISZERO V126
0x235: V128 = ISZERO V127
0x236: V129 = 0x23e
0x239: JUMPI 0x23e V128
---
Entry stack: [V10, V46, V56]
Stack pops: 1
Stack additions: [S0, V89, 0x23b872dd, V120, 0x0, V123, V124, V123, 0x0, V89]
Exit stack: [V10, V46, V56, V89, 0x23b872dd, V120, 0x0, V123, V124, V123, 0x0, V89]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x125]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V130 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V10, V46, V56, V89, 0x23b872dd, V120, 0x0, V123, V124, V123, 0x0, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V46, V56, V89, 0x23b872dd, V120, 0x0, V123, V124, V123, 0x0, V89]

================================

Block 0x23e
[0x23e:0x24a]
---
Predecessors: [0x125]
Successors: [0x24b, 0x24f]
---
0x23e JUMPDEST
0x23f PUSH2 0x2c6
0x242 GAS
0x243 SUB
0x244 CALL
0x245 ISZERO
0x246 ISZERO
0x247 PUSH2 0x24f
0x24a JUMPI
---
0x23e: JUMPDEST 
0x23f: V131 = 0x2c6
0x242: V132 = GAS
0x243: V133 = SUB V132 0x2c6
0x244: V134 = CALL V133 V89 0x0 V123 V124 V123 0x0
0x245: V135 = ISZERO V134
0x246: V136 = ISZERO V135
0x247: V137 = 0x24f
0x24a: JUMPI 0x24f V136
---
Entry stack: [V10, V46, V56, V89, 0x23b872dd, V120, 0x0, V123, V124, V123, 0x0, V89]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V46, V56, V89, 0x23b872dd, V120]

================================

Block 0x24b
[0x24b:0x24e]
---
Predecessors: [0x23e]
Successors: []
---
0x24b PUSH1 0x0
0x24d DUP1
0x24e REVERT
---
0x24b: V138 = 0x0
0x24e: REVERT 0x0 0x0
---
Entry stack: [V10, V46, V56, V89, 0x23b872dd, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V46, V56, V89, 0x23b872dd, V120]

================================

Block 0x24f
[0x24f:0x2ca]
---
Predecessors: [0x23e]
Successors: [0x2cb]
---
0x24f JUMPDEST
0x250 POP
0x251 POP
0x252 POP
0x253 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x274 CALLER
0x275 DUP4
0x276 PUSH1 0x1
0x278 PUSH1 0x40
0x27a MLOAD
0x27b DUP1
0x27c DUP5
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a8 AND
0x2a9 DUP2
0x2aa MSTORE
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae DUP4
0x2af DUP2
0x2b0 MSTORE
0x2b1 PUSH1 0x20
0x2b3 ADD
0x2b4 DUP3
0x2b5 ISZERO
0x2b6 ISZERO
0x2b7 ISZERO
0x2b8 ISZERO
0x2b9 DUP2
0x2ba MSTORE
0x2bb PUSH1 0x20
0x2bd ADD
0x2be SWAP4
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 POP
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 DUP1
0x2c7 SWAP2
0x2c8 SUB
0x2c9 SWAP1
0x2ca LOG1
---
0x24f: JUMPDEST 
0x253: V139 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x274: V140 = CALLER
0x276: V141 = 0x1
0x278: V142 = 0x40
0x27a: V143 = M[0x40]
0x27d: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x293: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x2aa: M[V143] = V147
0x2ab: V148 = 0x20
0x2ad: V149 = ADD 0x20 V143
0x2b0: M[V149] = V46
0x2b1: V150 = 0x20
0x2b3: V151 = ADD 0x20 V149
0x2b5: V152 = ISZERO 0x1
0x2b6: V153 = ISZERO 0x0
0x2b7: V154 = ISZERO 0x1
0x2b8: V155 = ISZERO 0x0
0x2ba: M[V151] = 0x1
0x2bb: V156 = 0x20
0x2bd: V157 = ADD 0x20 V151
0x2c3: V158 = 0x40
0x2c5: V159 = M[0x40]
0x2c8: V160 = SUB V157 V159
0x2ca: LOG V159 V160 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, V46, V56, V89, 0x23b872dd, V120]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, V46, V56]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x24f]
Successors: []
---
0x2cb JUMPDEST
0x2cc POP
0x2cd POP
0x2ce STOP
---
0x2cb: JUMPDEST 
0x2ce: STOP 
---
Entry stack: [V10, V46, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cf
[0x2cf:0x2d5]
---
Predecessors: [0xb]
Successors: [0x2d6, 0x2da]
---
0x2cf JUMPDEST
0x2d0 CALLVALUE
0x2d1 ISZERO
0x2d2 PUSH2 0x2da
0x2d5 JUMPI
---
0x2cf: JUMPDEST 
0x2d0: V161 = CALLVALUE
0x2d1: V162 = ISZERO V161
0x2d2: V163 = 0x2da
0x2d5: JUMPI 0x2da V162
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d6
[0x2d6:0x2d9]
---
Predecessors: [0x2cf]
Successors: []
---
0x2d6 PUSH1 0x0
0x2d8 DUP1
0x2d9 REVERT
---
0x2d6: V164 = 0x0
0x2d9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2da
[0x2da:0x2e1]
---
Predecessors: [0x2cf]
Successors: [0x436]
---
0x2da JUMPDEST
0x2db PUSH2 0x2e2
0x2de PUSH2 0x436
0x2e1 JUMP
---
0x2da: JUMPDEST 
0x2db: V165 = 0x2e2
0x2de: V166 = 0x436
0x2e1: JUMP 0x436
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2e2]
Exit stack: [V10, 0x2e2]

================================

Block 0x2e2
[0x2e2:0x2f7]
---
Predecessors: [0x436]
Successors: []
---
0x2e2 JUMPDEST
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 DUP1
0x2e7 DUP3
0x2e8 DUP2
0x2e9 MSTORE
0x2ea PUSH1 0x20
0x2ec ADD
0x2ed SWAP2
0x2ee POP
0x2ef POP
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 SWAP2
0x2f5 SUB
0x2f6 SWAP1
0x2f7 RETURN
---
0x2e2: JUMPDEST 
0x2e3: V167 = 0x40
0x2e5: V168 = M[0x40]
0x2e9: M[V168] = V258
0x2ea: V169 = 0x20
0x2ec: V170 = ADD 0x20 V168
0x2f0: V171 = 0x40
0x2f2: V172 = M[0x40]
0x2f5: V173 = SUB V170 V172
0x2f7: RETURN V172 V173
---
Entry stack: [V10, 0x2e2, V258]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2e2]

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0x3f]
Successors: [0x2ff, 0x303]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V174 = CALLVALUE
0x2fa: V175 = ISZERO V174
0x2fb: V176 = 0x303
0x2fe: JUMPI 0x303 V175
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V177 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x303
[0x303:0x30a]
---
Predecessors: [0x2f8]
Successors: [0x43c]
---
0x303 JUMPDEST
0x304 PUSH2 0x30b
0x307 PUSH2 0x43c
0x30a JUMP
---
0x303: JUMPDEST 
0x304: V178 = 0x30b
0x307: V179 = 0x43c
0x30a: JUMP 0x43c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30b]
Exit stack: [V10, 0x30b]

================================

Block 0x30b
[0x30b:0x34c]
---
Predecessors: [0x43c]
Successors: []
---
0x30b JUMPDEST
0x30c PUSH1 0x40
0x30e MLOAD
0x30f DUP1
0x310 DUP3
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33c AND
0x33d DUP2
0x33e MSTORE
0x33f PUSH1 0x20
0x341 ADD
0x342 SWAP2
0x343 POP
0x344 POP
0x345 PUSH1 0x40
0x347 MLOAD
0x348 DUP1
0x349 SWAP2
0x34a SUB
0x34b SWAP1
0x34c RETURN
---
0x30b: JUMPDEST 
0x30c: V180 = 0x40
0x30e: V181 = M[0x40]
0x311: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x327: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x33e: M[V181] = V185
0x33f: V186 = 0x20
0x341: V187 = ADD 0x20 V181
0x345: V188 = 0x40
0x347: V189 = M[0x40]
0x34a: V190 = SUB V187 V189
0x34c: RETURN V189 V190
---
Entry stack: [V10, 0x30b, V265]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x30b]

================================

Block 0x34d
[0x34d:0x353]
---
Predecessors: [0x4a]
Successors: [0x354, 0x358]
---
0x34d JUMPDEST
0x34e CALLVALUE
0x34f ISZERO
0x350 PUSH2 0x358
0x353 JUMPI
---
0x34d: JUMPDEST 
0x34e: V191 = CALLVALUE
0x34f: V192 = ISZERO V191
0x350: V193 = 0x358
0x353: JUMPI 0x358 V192
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x354
[0x354:0x357]
---
Predecessors: [0x34d]
Successors: []
---
0x354 PUSH1 0x0
0x356 DUP1
0x357 REVERT
---
0x354: V194 = 0x0
0x357: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x358
[0x358:0x35f]
---
Predecessors: [0x34d]
Successors: [0x461]
---
0x358 JUMPDEST
0x359 PUSH2 0x360
0x35c PUSH2 0x461
0x35f JUMP
---
0x358: JUMPDEST 
0x359: V195 = 0x360
0x35c: V196 = 0x461
0x35f: JUMP 0x461
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360]
Exit stack: [V10, 0x360]

================================

Block 0x360
[0x360:0x361]
---
Predecessors: []
Successors: []
---
0x360 JUMPDEST
0x361 STOP
---
0x360: JUMPDEST 
0x361: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x362
[0x362:0x368]
---
Predecessors: [0x55]
Successors: [0x369, 0x36d]
---
0x362 JUMPDEST
0x363 CALLVALUE
0x364 ISZERO
0x365 PUSH2 0x36d
0x368 JUMPI
---
0x362: JUMPDEST 
0x363: V197 = CALLVALUE
0x364: V198 = ISZERO V197
0x365: V199 = 0x36d
0x368: JUMPI 0x36d V198
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x369
[0x369:0x36c]
---
Predecessors: [0x362]
Successors: []
---
0x369 PUSH1 0x0
0x36b DUP1
0x36c REVERT
---
0x369: V200 = 0x0
0x36c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36d
[0x36d:0x374]
---
Predecessors: [0x362]
Successors: [0x50a]
---
0x36d JUMPDEST
0x36e PUSH2 0x375
0x371 PUSH2 0x50a
0x374 JUMP
---
0x36d: JUMPDEST 
0x36e: V201 = 0x375
0x371: V202 = 0x50a
0x374: JUMP 0x50a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x375]
Exit stack: [V10, 0x375]

================================

Block 0x375
[0x375:0x3b6]
---
Predecessors: [0x50a]
Successors: []
---
0x375 JUMPDEST
0x376 PUSH1 0x40
0x378 MLOAD
0x379 DUP1
0x37a DUP3
0x37b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x390 AND
0x391 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a6 AND
0x3a7 DUP2
0x3a8 MSTORE
0x3a9 PUSH1 0x20
0x3ab ADD
0x3ac SWAP2
0x3ad POP
0x3ae POP
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 DUP1
0x3b3 SWAP2
0x3b4 SUB
0x3b5 SWAP1
0x3b6 RETURN
---
0x375: JUMPDEST 
0x376: V203 = 0x40
0x378: V204 = M[0x40]
0x37b: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x390: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x391: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x3a8: M[V204] = V208
0x3a9: V209 = 0x20
0x3ab: V210 = ADD 0x20 V204
0x3af: V211 = 0x40
0x3b1: V212 = M[0x40]
0x3b4: V213 = SUB V210 V212
0x3b6: RETURN V212 V213
---
Entry stack: [V10, 0x375, V308]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x375]

================================

Block 0x3b7
[0x3b7:0x3bd]
---
Predecessors: [0x60]
Successors: [0x3be, 0x3c2]
---
0x3b7 JUMPDEST
0x3b8 CALLVALUE
0x3b9 ISZERO
0x3ba PUSH2 0x3c2
0x3bd JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V214 = CALLVALUE
0x3b9: V215 = ISZERO V214
0x3ba: V216 = 0x3c2
0x3bd: JUMPI 0x3c2 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3be
[0x3be:0x3c1]
---
Predecessors: [0x3b7]
Successors: []
---
0x3be PUSH1 0x0
0x3c0 DUP1
0x3c1 REVERT
---
0x3be: V217 = 0x0
0x3c1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c2
[0x3c2:0x3c9]
---
Predecessors: [0x3b7]
Successors: [0x530]
---
0x3c2 JUMPDEST
0x3c3 PUSH2 0x3ca
0x3c6 PUSH2 0x530
0x3c9 JUMP
---
0x3c2: JUMPDEST 
0x3c3: V218 = 0x3ca
0x3c6: V219 = 0x530
0x3c9: JUMP 0x530
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ca]
Exit stack: [V10, 0x3ca]

================================

Block 0x3ca
[0x3ca:0x3df]
---
Predecessors: [0x530]
Successors: []
---
0x3ca JUMPDEST
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce DUP1
0x3cf DUP3
0x3d0 DUP2
0x3d1 MSTORE
0x3d2 PUSH1 0x20
0x3d4 ADD
0x3d5 SWAP2
0x3d6 POP
0x3d7 POP
0x3d8 PUSH1 0x40
0x3da MLOAD
0x3db DUP1
0x3dc SWAP2
0x3dd SUB
0x3de SWAP1
0x3df RETURN
---
0x3ca: JUMPDEST 
0x3cb: V220 = 0x40
0x3cd: V221 = M[0x40]
0x3d1: M[V221] = V310
0x3d2: V222 = 0x20
0x3d4: V223 = ADD 0x20 V221
0x3d8: V224 = 0x40
0x3da: V225 = M[0x40]
0x3dd: V226 = SUB V223 V225
0x3df: RETURN V225 V226
---
Entry stack: [V10, 0x3ca, V310]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3ca]

================================

Block 0x3e0
[0x3e0:0x3e6]
---
Predecessors: [0x6b]
Successors: [0x3e7, 0x3eb]
---
0x3e0 JUMPDEST
0x3e1 CALLVALUE
0x3e2 ISZERO
0x3e3 PUSH2 0x3eb
0x3e6 JUMPI
---
0x3e0: JUMPDEST 
0x3e1: V227 = CALLVALUE
0x3e2: V228 = ISZERO V227
0x3e3: V229 = 0x3eb
0x3e6: JUMPI 0x3eb V228
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e7
[0x3e7:0x3ea]
---
Predecessors: [0x3e0]
Successors: []
---
0x3e7 PUSH1 0x0
0x3e9 DUP1
0x3ea REVERT
---
0x3e7: V230 = 0x0
0x3ea: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3eb
[0x3eb:0x3f2]
---
Predecessors: [0x3e0]
Successors: [0x536]
---
0x3eb JUMPDEST
0x3ec PUSH2 0x3f3
0x3ef PUSH2 0x536
0x3f2 JUMP
---
0x3eb: JUMPDEST 
0x3ec: V231 = 0x3f3
0x3ef: V232 = 0x536
0x3f2: JUMP 0x536
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3f3]
Exit stack: [V10, 0x3f3]

================================

Block 0x3f3
[0x3f3:0x408]
---
Predecessors: [0x536]
Successors: []
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x40
0x3f6 MLOAD
0x3f7 DUP1
0x3f8 DUP3
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x20
0x3fd ADD
0x3fe SWAP2
0x3ff POP
0x400 POP
0x401 PUSH1 0x40
0x403 MLOAD
0x404 DUP1
0x405 SWAP2
0x406 SUB
0x407 SWAP1
0x408 RETURN
---
0x3f3: JUMPDEST 
0x3f4: V233 = 0x40
0x3f6: V234 = M[0x40]
0x3fa: M[V234] = V312
0x3fb: V235 = 0x20
0x3fd: V236 = ADD 0x20 V234
0x401: V237 = 0x40
0x403: V238 = M[0x40]
0x406: V239 = SUB V236 V238
0x408: RETURN V238 V239
---
Entry stack: [V10, 0x3f3, V312]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3f3]

================================

Block 0x409
[0x409:0x40f]
---
Predecessors: [0x76]
Successors: [0x410, 0x414]
---
0x409 JUMPDEST
0x40a CALLVALUE
0x40b ISZERO
0x40c PUSH2 0x414
0x40f JUMPI
---
0x409: JUMPDEST 
0x40a: V240 = CALLVALUE
0x40b: V241 = ISZERO V240
0x40c: V242 = 0x414
0x40f: JUMPI 0x414 V241
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x410
[0x410:0x413]
---
Predecessors: [0x409]
Successors: []
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
---
0x410: V243 = 0x0
0x413: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x414
[0x414:0x41b]
---
Predecessors: [0x409]
Successors: [0x53c]
---
0x414 JUMPDEST
0x415 PUSH2 0x41c
0x418 PUSH2 0x53c
0x41b JUMP
---
0x414: JUMPDEST 
0x415: V244 = 0x41c
0x418: V245 = 0x53c
0x41b: JUMP 0x53c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x41c]
Exit stack: [V10, 0x41c]

================================

Block 0x41c
[0x41c:0x435]
---
Predecessors: [0x53c]
Successors: []
---
0x41c JUMPDEST
0x41d PUSH1 0x40
0x41f MLOAD
0x420 DUP1
0x421 DUP3
0x422 ISZERO
0x423 ISZERO
0x424 ISZERO
0x425 ISZERO
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x20
0x42a ADD
0x42b SWAP2
0x42c POP
0x42d POP
0x42e PUSH1 0x40
0x430 MLOAD
0x431 DUP1
0x432 SWAP2
0x433 SUB
0x434 SWAP1
0x435 RETURN
---
0x41c: JUMPDEST 
0x41d: V246 = 0x40
0x41f: V247 = M[0x40]
0x422: V248 = ISZERO V320
0x423: V249 = ISZERO V248
0x424: V250 = ISZERO V249
0x425: V251 = ISZERO V250
0x427: M[V247] = V251
0x428: V252 = 0x20
0x42a: V253 = ADD 0x20 V247
0x42e: V254 = 0x40
0x430: V255 = M[0x40]
0x433: V256 = SUB V253 V255
0x435: RETURN V255 V256
---
Entry stack: [V10, 0x41c, V320]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x41c]

================================

Block 0x436
[0x436:0x43b]
---
Predecessors: [0x2da]
Successors: [0x2e2]
---
0x436 JUMPDEST
0x437 PUSH1 0x2
0x439 SLOAD
0x43a DUP2
0x43b JUMP
---
0x436: JUMPDEST 
0x437: V257 = 0x2
0x439: V258 = S[0x2]
0x43b: JUMP 0x2e2
---
Entry stack: [V10, 0x2e2]
Stack pops: 1
Stack additions: [S0, V258]
Exit stack: [V10, 0x2e2, V258]

================================

Block 0x43c
[0x43c:0x460]
---
Predecessors: [0x303]
Successors: [0x30b]
---
0x43c JUMPDEST
0x43d PUSH1 0x0
0x43f DUP1
0x440 SWAP1
0x441 SLOAD
0x442 SWAP1
0x443 PUSH2 0x100
0x446 EXP
0x447 SWAP1
0x448 DIV
0x449 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45e AND
0x45f DUP2
0x460 JUMP
---
0x43c: JUMPDEST 
0x43d: V259 = 0x0
0x441: V260 = S[0x0]
0x443: V261 = 0x100
0x446: V262 = EXP 0x100 0x0
0x448: V263 = DIV V260 0x1
0x449: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x460: JUMP 0x30b
---
Entry stack: [V10, 0x30b]
Stack pops: 1
Stack additions: [S0, V265]
Exit stack: [V10, 0x30b, V265]

================================

Block 0x461
[0x461:0x46d]
---
Predecessors: [0x358]
Successors: [0x46e, 0x472]
---
0x461 JUMPDEST
0x462 PUSH1 0x2
0x464 SLOAD
0x465 TIMESTAMP
0x466 LT
0x467 ISZERO
0x468 ISZERO
0x469 ISZERO
0x46a PUSH2 0x472
0x46d JUMPI
---
0x461: JUMPDEST 
0x462: V266 = 0x2
0x464: V267 = S[0x2]
0x465: V268 = TIMESTAMP
0x466: V269 = LT V268 V267
0x467: V270 = ISZERO V269
0x468: V271 = ISZERO V270
0x469: V272 = ISZERO V271
0x46a: V273 = 0x472
0x46d: JUMPI 0x472 V272
---
Entry stack: [V10, 0x360]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x360]

================================

Block 0x46e
[0x46e:0x471]
---
Predecessors: [0x461]
Successors: []
---
0x46e PUSH1 0x0
0x470 DUP1
0x471 REVERT
---
0x46e: V274 = 0x0
0x471: REVERT 0x0 0x0
---
Entry stack: [V10, 0x360]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x360]

================================

Block 0x472
[0x472:0x4c8]
---
Predecessors: [0x461]
Successors: [0x4c9, 0x4cd]
---
0x472 JUMPDEST
0x473 PUSH1 0x0
0x475 DUP1
0x476 SWAP1
0x477 SLOAD
0x478 SWAP1
0x479 PUSH2 0x100
0x47c EXP
0x47d SWAP1
0x47e DIV
0x47f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x494 AND
0x495 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4aa AND
0x4ab CALLER
0x4ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c1 AND
0x4c2 EQ
0x4c3 ISZERO
0x4c4 ISZERO
0x4c5 PUSH2 0x4cd
0x4c8 JUMPI
---
0x472: JUMPDEST 
0x473: V275 = 0x0
0x477: V276 = S[0x0]
0x479: V277 = 0x100
0x47c: V278 = EXP 0x100 0x0
0x47e: V279 = DIV V276 0x1
0x47f: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x494: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x495: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x4aa: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x4ab: V284 = CALLER
0x4ac: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x4c2: V287 = EQ V286 V283
0x4c3: V288 = ISZERO V287
0x4c4: V289 = ISZERO V288
0x4c5: V290 = 0x4cd
0x4c8: JUMPI 0x4cd V289
---
Entry stack: [V10, 0x360]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x360]

================================

Block 0x4c9
[0x4c9:0x4cc]
---
Predecessors: [0x472]
Successors: []
---
0x4c9 PUSH1 0x0
0x4cb DUP1
0x4cc REVERT
---
0x4c9: V291 = 0x0
0x4cc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x360]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x360]

================================

Block 0x4cd
[0x4cd:0x506]
---
Predecessors: [0x472]
Successors: []
---
0x4cd JUMPDEST
0x4ce PUSH1 0x0
0x4d0 DUP1
0x4d1 SWAP1
0x4d2 SLOAD
0x4d3 SWAP1
0x4d4 PUSH2 0x100
0x4d7 EXP
0x4d8 SWAP1
0x4d9 DIV
0x4da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ef AND
0x4f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x505 AND
0x506 SELFDESTRUCT
---
0x4cd: JUMPDEST 
0x4ce: V292 = 0x0
0x4d2: V293 = S[0x0]
0x4d4: V294 = 0x100
0x4d7: V295 = EXP 0x100 0x0
0x4d9: V296 = DIV V293 0x1
0x4da: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ef: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x4f0: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x505: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x506: SELFDESTRUCT V300
---
Entry stack: [V10, 0x360]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x360]

================================

Block 0x507
[0x507:0x507]
---
Predecessors: []
Successors: [0x508]
---
0x507 JUMPDEST
---
0x507: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x508
[0x508:0x509]
---
Predecessors: [0x507]
Successors: []
Has unresolved jump.
---
0x508 JUMPDEST
0x509 JUMP
---
0x508: JUMPDEST 
0x509: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x50a
[0x50a:0x52f]
---
Predecessors: [0x36d]
Successors: [0x375]
---
0x50a JUMPDEST
0x50b PUSH1 0x4
0x50d PUSH1 0x0
0x50f SWAP1
0x510 SLOAD
0x511 SWAP1
0x512 PUSH2 0x100
0x515 EXP
0x516 SWAP1
0x517 DIV
0x518 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52d AND
0x52e DUP2
0x52f JUMP
---
0x50a: JUMPDEST 
0x50b: V301 = 0x4
0x50d: V302 = 0x0
0x510: V303 = S[0x4]
0x512: V304 = 0x100
0x515: V305 = EXP 0x100 0x0
0x517: V306 = DIV V303 0x1
0x518: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x52d: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x52f: JUMP 0x375
---
Entry stack: [V10, 0x375]
Stack pops: 1
Stack additions: [S0, V308]
Exit stack: [V10, 0x375, V308]

================================

Block 0x530
[0x530:0x535]
---
Predecessors: [0x3c2]
Successors: [0x3ca]
---
0x530 JUMPDEST
0x531 PUSH1 0x1
0x533 SLOAD
0x534 DUP2
0x535 JUMP
---
0x530: JUMPDEST 
0x531: V309 = 0x1
0x533: V310 = S[0x1]
0x535: JUMP 0x3ca
---
Entry stack: [V10, 0x3ca]
Stack pops: 1
Stack additions: [S0, V310]
Exit stack: [V10, 0x3ca, V310]

================================

Block 0x536
[0x536:0x53b]
---
Predecessors: [0x3eb]
Successors: [0x3f3]
---
0x536 JUMPDEST
0x537 PUSH1 0x3
0x539 SLOAD
0x53a DUP2
0x53b JUMP
---
0x536: JUMPDEST 
0x537: V311 = 0x3
0x539: V312 = S[0x3]
0x53b: JUMP 0x3f3
---
Entry stack: [V10, 0x3f3]
Stack pops: 1
Stack additions: [S0, V312]
Exit stack: [V10, 0x3f3, V312]

================================

Block 0x53c
[0x53c:0x54e]
---
Predecessors: [0x414]
Successors: [0x41c]
---
0x53c JUMPDEST
0x53d PUSH1 0x4
0x53f PUSH1 0x14
0x541 SWAP1
0x542 SLOAD
0x543 SWAP1
0x544 PUSH2 0x100
0x547 EXP
0x548 SWAP1
0x549 DIV
0x54a PUSH1 0xff
0x54c AND
0x54d DUP2
0x54e JUMP
---
0x53c: JUMPDEST 
0x53d: V313 = 0x4
0x53f: V314 = 0x14
0x542: V315 = S[0x4]
0x544: V316 = 0x100
0x547: V317 = EXP 0x100 0x14
0x549: V318 = DIV V315 0x10000000000000000000000000000000000000000
0x54a: V319 = 0xff
0x54c: V320 = AND 0xff V318
0x54e: JUMP 0x41c
---
Entry stack: [V10, 0x41c]
Stack pops: 1
Stack additions: [S0, V320]
Exit stack: [V10, 0x41c, V320]

================================

Block 0x54f
[0x54f:0x57a]
---
Predecessors: []
Successors: []
---
0x54f STOP
0x550 LOG1
0x551 PUSH6 0x627a7a723058
0x558 SHA3
0x559 CALL
0x55a MISSING 0xe0
0x55b MISSING 0xeb
0x55c GASPRICE
0x55d MISSING 0xc
0x55e DUP5
0x55f MISSING 0x29
0x560 RETURNDATACOPY
0x561 MISSING 0xbd
0x562 MISSING 0xb2
0x563 DUP1
0x564 MISSING 0xae
0x565 JUMP
0x566 MISSING 0xa6
0x567 XOR
0x568 CODECOPY
0x569 MISSING 0xa8
0x56a MISSING 0x4e
0x56b MISSING 0xca
0x56c MISSING 0x29
0x56d LOG3
0x56e SLOAD
0x56f MISSING 0xe4
0x570 MISSING 0xd7
0x571 PUSH7 0xedc1d37687376
0x579 STOP
0x57a MISSING 0x29
---
0x54f: STOP 
0x550: LOG S0 S1 S2
0x551: V321 = 0x627a7a723058
0x558: V322 = SHA3 0x627a7a723058 S3
0x559: V323 = CALL V322 S4 S5 S6 S7 S8 S9
0x55a: MISSING 0xe0
0x55b: MISSING 0xeb
0x55c: V324 = GASPRICE
0x55d: MISSING 0xc
0x55f: MISSING 0x29
0x560: RETURNDATACOPY S0 S1 S2
0x561: MISSING 0xbd
0x562: MISSING 0xb2
0x564: MISSING 0xae
0x565: JUMP S0
0x566: MISSING 0xa6
0x567: V325 = XOR S0 S1
0x568: CODECOPY V325 S2 S3
0x569: MISSING 0xa8
0x56a: MISSING 0x4e
0x56b: MISSING 0xca
0x56c: MISSING 0x29
0x56d: LOG S0 S1 S2 S3 S4
0x56e: V326 = S[S5]
0x56f: MISSING 0xe4
0x570: MISSING 0xd7
0x571: V327 = 0xedc1d37687376
0x579: STOP 
0x57a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V323, V324, S4, S0, S1, S2, S3, S4, S0, S0, V326, 0xedc1d37687376]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x2cf
Exit block: 0x2e2
Body: 0x2cf, 0x2d6, 0x2da, 0x2e2, 0x436

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x2f8
Exit block: 0x30b
Body: 0x2f8, 0x2ff, 0x303, 0x30b, 0x43c

Function 2:
Public function signature: 0x43d726d6
Entry block: 0x34d
Exit block: 0x4cd
Body: 0x34d, 0x354, 0x358, 0x461, 0x46e, 0x472, 0x4c9, 0x4cd

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x362
Exit block: 0x375
Body: 0x362, 0x369, 0x36d, 0x375, 0x50a

Function 4:
Public function signature: 0x7b3e5e7b
Entry block: 0x3b7
Exit block: 0x3ca
Body: 0x3b7, 0x3be, 0x3c2, 0x3ca, 0x530

Function 5:
Public function signature: 0xa035b1fe
Entry block: 0x3e0
Exit block: 0x3f3
Body: 0x3e0, 0x3e7, 0x3eb, 0x3f3, 0x536

Function 6:
Public function signature: 0xccb07cef
Entry block: 0x409
Exit block: 0x41c
Body: 0x409, 0x410, 0x414, 0x41c, 0x53c

Function 7:
Public fallback function
Entry block: 0x81
Exit block: 0x2cb
Body: 0x81, 0x82, 0x9d, 0xa1, 0xc0, 0xc1, 0x121, 0x125, 0x23a, 0x23e, 0x24b, 0x24f, 0x2cb

