Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xed]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xed
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xed
0xa: JUMPI 0xed V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3c]
---
Predecessors: [0x0]
Successors: [0x3d, 0x3fd]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH3 0xe5fc5f
0x37 DUP2
0x38 EQ
0x39 PUSH2 0x3fd
0x3c JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0xe5fc5f
0x38: V12 = EQ V10 0xe5fc5f
0x39: V13 = 0x3fd
0x3c: JUMPI 0x3fd V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0xb]
Successors: [0x48, 0x42b]
---
0x3d DUP1
0x3e PUSH4 0x13af4035
0x43 EQ
0x44 PUSH2 0x42b
0x47 JUMPI
---
0x3e: V14 = 0x13af4035
0x43: V15 = EQ 0x13af4035 V10
0x44: V16 = 0x42b
0x47: JUMPI 0x42b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x449]
---
0x48 DUP1
0x49 PUSH4 0x2d2fe9d4
0x4e EQ
0x4f PUSH2 0x449
0x52 JUMPI
---
0x49: V17 = 0x2d2fe9d4
0x4e: V18 = EQ 0x2d2fe9d4 V10
0x4f: V19 = 0x449
0x52: JUMPI 0x449 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x470]
---
0x53 DUP1
0x54 PUSH4 0x6113611f
0x59 EQ
0x5a PUSH2 0x470
0x5d JUMPI
---
0x54: V20 = 0x6113611f
0x59: V21 = EQ 0x6113611f V10
0x5a: V22 = 0x470
0x5d: JUMPI 0x470 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x497]
---
0x5e DUP1
0x5f PUSH4 0x64e08644
0x64 EQ
0x65 PUSH2 0x497
0x68 JUMPI
---
0x5f: V23 = 0x64e08644
0x64: V24 = EQ 0x64e08644 V10
0x65: V25 = 0x497
0x68: JUMPI 0x497 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x4be]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x4be
0x73 JUMPI
---
0x6a: V26 = 0x8da5cb5b
0x6f: V27 = EQ 0x8da5cb5b V10
0x70: V28 = 0x4be
0x73: JUMPI 0x4be V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x4ea]
---
0x74 DUP1
0x75 PUSH4 0x8fe92aed
0x7a EQ
0x7b PUSH2 0x4ea
0x7e JUMPI
---
0x75: V29 = 0x8fe92aed
0x7a: V30 = EQ 0x8fe92aed V10
0x7b: V31 = 0x4ea
0x7e: JUMPI 0x4ea V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x518]
---
0x7f DUP1
0x80 PUSH4 0x90fe5609
0x85 EQ
0x86 PUSH2 0x518
0x89 JUMPI
---
0x80: V32 = 0x90fe5609
0x85: V33 = EQ 0x90fe5609 V10
0x86: V34 = 0x518
0x89: JUMPI 0x518 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x530]
---
0x8a DUP1
0x8b PUSH4 0xa201d102
0x90 EQ
0x91 PUSH2 0x530
0x94 JUMPI
---
0x8b: V35 = 0xa201d102
0x90: V36 = EQ 0xa201d102 V10
0x91: V37 = 0x530
0x94: JUMPI 0x530 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x552]
---
0x95 DUP1
0x96 PUSH4 0xa4659ba2
0x9b EQ
0x9c PUSH2 0x552
0x9f JUMPI
---
0x96: V38 = 0xa4659ba2
0x9b: V39 = EQ 0xa4659ba2 V10
0x9c: V40 = 0x552
0x9f: JUMPI 0x552 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x579]
---
0xa0 DUP1
0xa1 PUSH4 0xc19d93fb
0xa6 EQ
0xa7 PUSH2 0x579
0xaa JUMPI
---
0xa1: V41 = 0xc19d93fb
0xa6: V42 = EQ 0xc19d93fb V10
0xa7: V43 = 0x579
0xaa: JUMPI 0x579 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x609]
---
0xab DUP1
0xac PUSH4 0xc2a15e7e
0xb1 EQ
0xb2 PUSH2 0x609
0xb5 JUMPI
---
0xac: V44 = 0xc2a15e7e
0xb1: V45 = EQ 0xc2a15e7e V10
0xb2: V46 = 0x609
0xb5: JUMPI 0x609 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x639]
---
0xb6 DUP1
0xb7 PUSH4 0xc8dda301
0xbc EQ
0xbd PUSH2 0x639
0xc0 JUMPI
---
0xb7: V47 = 0xc8dda301
0xbc: V48 = EQ 0xc8dda301 V10
0xbd: V49 = 0x639
0xc0: JUMPI 0x639 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x65b]
---
0xc1 DUP1
0xc2 PUSH4 0xcfd94b01
0xc7 EQ
0xc8 PUSH2 0x65b
0xcb JUMPI
---
0xc2: V50 = 0xcfd94b01
0xc7: V51 = EQ 0xcfd94b01 V10
0xc8: V52 = 0x65b
0xcb: JUMPI 0x65b V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x67d]
---
0xcc DUP1
0xcd PUSH4 0xda58c7d9
0xd2 EQ
0xd3 PUSH2 0x67d
0xd6 JUMPI
---
0xcd: V53 = 0xda58c7d9
0xd2: V54 = EQ 0xda58c7d9 V10
0xd3: V55 = 0x67d
0xd6: JUMPI 0x67d V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x6ac]
---
0xd7 DUP1
0xd8 PUSH4 0xfc34b908
0xdd EQ
0xde PUSH2 0x6ac
0xe1 JUMPI
---
0xd8: V56 = 0xfc34b908
0xdd: V57 = EQ 0xfc34b908 V10
0xde: V58 = 0x6ac
0xe1: JUMPI 0x6ac V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed, 0x6ce]
---
0xe2 DUP1
0xe3 PUSH4 0xffa1ad74
0xe8 EQ
0xe9 PUSH2 0x6ce
0xec JUMPI
---
0xe3: V59 = 0xffa1ad74
0xe8: V60 = EQ 0xffa1ad74 V10
0xe9: V61 = 0x6ce
0xec: JUMPI 0x6ce V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0x0, 0xe2]
Successors: [0xf1]
---
0xed JUMPDEST
0xee PUSH2 0x3fb
---
0xed: JUMPDEST 
0xee: V62 = 0x3fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3fb]
Exit stack: [V10, 0x3fb]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0xed]
Successors: [0xf8]
---
0xf1 JUMPDEST
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 PUSH1 0x1
0xf7 DUP1
---
0xf1: JUMPDEST 
0xf2: V63 = 0x0
0xf5: V64 = 0x1
---
Entry stack: [V10, 0x3fb]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x1, 0x1]
Exit stack: [V10, 0x3fb, 0x0, 0x0, 0x1, 0x1]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xf1]
Successors: [0x75e]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x100
0xfc PUSH2 0x75e
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V65 = 0x100
0xfc: V66 = 0x75e
0xff: JUMP 0x75e
---
Entry stack: [V10, 0x3fb, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V10, 0x3fb, 0x0, 0x0, 0x1, 0x1, 0x100]

================================

Block 0x100
[0x100:0x109]
---
Predecessors: [0x793]
Successors: [0x10a, 0x10b]
---
0x100 JUMPDEST
0x101 PUSH1 0x2
0x103 DUP2
0x104 GT
0x105 ISZERO
0x106 PUSH2 0x10b
0x109 JUMPI
---
0x100: JUMPDEST 
0x101: V67 = 0x2
0x104: V68 = GT S0 0x2
0x105: V69 = ISZERO V68
0x106: V70 = 0x10b
0x109: JUMPI 0x10b V69
---
Entry stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]

================================

Block 0x10a
[0x10a:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x10a INVALID
---
0x10a: INVALID 
---
Entry stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]

================================

Block 0x10b
[0x10b:0x110]
---
Predecessors: [0x100]
Successors: [0x111, 0x116]
---
0x10b JUMPDEST
0x10c EQ
0x10d PUSH2 0x116
0x110 JUMPI
---
0x10b: JUMPDEST 
0x10c: V71 = EQ S0 S1
0x10d: V72 = 0x116
0x110: JUMPI 0x116 V71
---
Entry stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2]

================================

Block 0x111
[0x111:0x115]
---
Predecessors: [0x10b]
Successors: []
---
0x111 PUSH1 0x0
0x113 PUSH1 0x0
0x115 REVERT
---
0x111: V73 = 0x0
0x113: V74 = 0x0
0x115: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x589}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x589}, S0]

================================

Block 0x116
[0x116:0x182]
---
Predecessors: [0x10b]
Successors: [0x183, 0x184]
---
0x116 JUMPDEST
0x117 PUSH1 0x2
0x119 SLOAD
0x11a PUSH1 0x40
0x11c DUP1
0x11d MLOAD
0x11e PUSH1 0x0
0x120 PUSH1 0x20
0x122 SWAP2
0x123 DUP3
0x124 ADD
0x125 DUP2
0x126 SWAP1
0x127 MSTORE
0x128 DUP3
0x129 MLOAD
0x12a PUSH32 0x27e235e300000000000000000000000000000000000000000000000000000000
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x1
0x14f PUSH1 0xa0
0x151 PUSH1 0x2
0x153 EXP
0x154 SUB
0x155 CALLER
0x156 DUP2
0x157 AND
0x158 PUSH1 0x4
0x15a DUP4
0x15b ADD
0x15c MSTORE
0x15d SWAP4
0x15e MLOAD
0x15f SWAP4
0x160 SWAP1
0x161 SWAP5
0x162 AND
0x163 SWAP4
0x164 PUSH4 0x27e235e3
0x169 SWAP4
0x16a PUSH1 0x24
0x16c DUP1
0x16d DUP4
0x16e ADD
0x16f SWAP5
0x170 SWAP4
0x171 SWAP2
0x172 SWAP3
0x173 DUP4
0x174 SWAP1
0x175 SUB
0x176 ADD
0x177 SWAP1
0x178 DUP3
0x179 SWAP1
0x17a DUP8
0x17b DUP1
0x17c EXTCODESIZE
0x17d ISZERO
0x17e ISZERO
0x17f PUSH2 0x184
0x182 JUMPI
---
0x116: JUMPDEST 
0x117: V75 = 0x2
0x119: V76 = S[0x2]
0x11a: V77 = 0x40
0x11d: V78 = M[0x40]
0x11e: V79 = 0x0
0x120: V80 = 0x20
0x124: V81 = ADD 0x20 V78
0x127: M[V81] = 0x0
0x129: V82 = M[0x40]
0x12a: V83 = 0x27e235e300000000000000000000000000000000000000000000000000000000
0x14c: M[V82] = 0x27e235e300000000000000000000000000000000000000000000000000000000
0x14d: V84 = 0x1
0x14f: V85 = 0xa0
0x151: V86 = 0x2
0x153: V87 = EXP 0x2 0xa0
0x154: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V89 = CALLER
0x157: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x158: V91 = 0x4
0x15b: V92 = ADD V82 0x4
0x15c: M[V92] = V90
0x15e: V93 = M[0x40]
0x162: V94 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0x164: V95 = 0x27e235e3
0x16a: V96 = 0x24
0x16e: V97 = ADD V82 0x24
0x175: V98 = SUB V82 V93
0x176: V99 = ADD V98 0x24
0x17c: V100 = EXTCODESIZE V94
0x17d: V101 = ISZERO V100
0x17e: V102 = ISZERO V101
0x17f: V103 = 0x184
0x182: JUMPI 0x184 V102
---
Entry stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x589}, S0]
Stack pops: 0
Stack additions: [V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]
Exit stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x589}, S0, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]

================================

Block 0x183
[0x183:0x183]
---
Predecessors: [0x116]
Successors: []
---
0x183 INVALID
---
0x183: INVALID 
---
Entry stack: [V10, 0x3fb, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x589}, S9, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x589}, S9, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]

================================

Block 0x184
[0x184:0x190]
---
Predecessors: [0x116]
Successors: [0x191, 0x192]
---
0x184 JUMPDEST
0x185 PUSH2 0x2c6
0x188 GAS
0x189 SUB
0x18a CALL
0x18b ISZERO
0x18c ISZERO
0x18d PUSH2 0x192
0x190 JUMPI
---
0x184: JUMPDEST 
0x185: V104 = 0x2c6
0x188: V105 = GAS
0x189: V106 = SUB V105 0x2c6
0x18a: V107 = CALL V106 V94 0x0 V93 V99 V93 0x20
0x18b: V108 = ISZERO V107
0x18c: V109 = ISZERO V108
0x18d: V110 = 0x192
0x190: JUMPI 0x192 V109
---
Entry stack: [V10, 0x3fb, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x589}, S9, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x3fb, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x589}, S9, V94, 0x27e235e3, V97]

================================

Block 0x191
[0x191:0x191]
---
Predecessors: [0x184]
Successors: []
---
0x191 INVALID
---
0x191: INVALID 
---
Entry stack: [V10, 0x3fb, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x589}, S3, V94, 0x27e235e3, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x589}, S3, V94, 0x27e235e3, V97]

================================

Block 0x192
[0x192:0x1a3]
---
Predecessors: [0x184]
Successors: [0x1a4, 0x1a5]
---
0x192 JUMPDEST
0x193 POP
0x194 POP
0x195 PUSH1 0x40
0x197 MLOAD
0x198 MLOAD
0x199 SWAP3
0x19a POP
0x19b POP
0x19c PUSH1 0x0
0x19e DUP3
0x19f GT
0x1a0 PUSH2 0x1a5
0x1a3 JUMPI
---
0x192: JUMPDEST 
0x195: V111 = 0x40
0x197: V112 = M[0x40]
0x198: V113 = M[V112]
0x19c: V114 = 0x0
0x19f: V115 = GT V113 0x0
0x1a0: V116 = 0x1a5
0x1a3: JUMPI 0x1a5 V115
---
Entry stack: [V10, 0x3fb, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x589}, S3, V94, 0x27e235e3, V97]
Stack pops: 5
Stack additions: [V113, S3]
Exit stack: [V10, 0x3fb, S10, V113, S8, S7, S6, S5, V113, S3]

================================

Block 0x1a4
[0x1a4:0x1a4]
---
Predecessors: [0x192]
Successors: []
---
0x1a4 INVALID
---
0x1a4: INVALID 
---
Entry stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0]

================================

Block 0x1a5
[0x1a5:0x1b5]
---
Predecessors: [0x192]
Successors: [0x1b6, 0x1dc]
---
0x1a5 JUMPDEST
0x1a6 PUSH8 0xde0b6b3a7640000
0x1af CALLVALUE
0x1b0 GT
0x1b1 DUP1
0x1b2 PUSH2 0x1dc
0x1b5 JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V117 = 0xde0b6b3a7640000
0x1af: V118 = CALLVALUE
0x1b0: V119 = GT V118 0xde0b6b3a7640000
0x1b2: V120 = 0x1dc
0x1b5: JUMPI 0x1dc V119
---
Entry stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0, V119]

================================

Block 0x1b6
[0x1b6:0x1db]
---
Predecessors: [0x1a5]
Successors: [0x1dc]
---
0x1b6 POP
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba PUSH1 0x1
0x1bc PUSH1 0xa0
0x1be PUSH1 0x2
0x1c0 EXP
0x1c1 SUB
0x1c2 CALLER
0x1c3 AND
0x1c4 SWAP1
0x1c5 CALLVALUE
0x1c6 DUP1
0x1c7 ISZERO
0x1c8 PUSH2 0x8fc
0x1cb MUL
0x1cc SWAP2
0x1cd PUSH1 0x0
0x1cf DUP2
0x1d0 DUP2
0x1d1 DUP2
0x1d2 DUP6
0x1d3 DUP9
0x1d4 DUP9
0x1d5 CALL
0x1d6 SWAP4
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da POP
0x1db ISZERO
---
0x1b7: V121 = 0x40
0x1b9: V122 = M[0x40]
0x1ba: V123 = 0x1
0x1bc: V124 = 0xa0
0x1be: V125 = 0x2
0x1c0: V126 = EXP 0x2 0xa0
0x1c1: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c2: V128 = CALLER
0x1c3: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V130 = CALLVALUE
0x1c7: V131 = ISZERO V130
0x1c8: V132 = 0x8fc
0x1cb: V133 = MUL 0x8fc V131
0x1cd: V134 = 0x0
0x1d5: V135 = CALL V133 V129 V130 V122 0x0 V122 0x0
0x1db: V136 = ISZERO V135
---
Entry stack: [V10, 0x3fb, S8, V113, S6, S5, S4, S3, V113, S1, V119]
Stack pops: 1
Stack additions: [V136]
Exit stack: [V10, 0x3fb, S8, V113, S6, S5, S4, S3, V113, S1, V136]

================================

Block 0x1dc
[0x1dc:0x1e1]
---
Predecessors: [0x1a5, 0x1b6]
Successors: [0x1e2, 0x1e7]
---
0x1dc JUMPDEST
0x1dd ISZERO
0x1de PUSH2 0x1e7
0x1e1 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V137 = ISZERO S0
0x1de: V138 = 0x1e7
0x1e1: JUMPI 0x1e7 V137
---
Entry stack: [V10, 0x3fb, S8, V113, S6, S5, S4, S3, V113, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fb, S8, V113, S6, S5, S4, S3, V113, S1]

================================

Block 0x1e2
[0x1e2:0x1e6]
---
Predecessors: [0x1dc]
Successors: []
---
0x1e2 PUSH1 0x0
0x1e4 PUSH1 0x0
0x1e6 REVERT
---
0x1e2: V139 = 0x0
0x1e4: V140 = 0x0
0x1e6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0]

================================

Block 0x1e7
[0x1e7:0x206]
---
Predecessors: [0x1dc]
Successors: [0x207, 0x273]
---
0x1e7 JUMPDEST
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 CALLER
0x1f1 AND
0x1f2 PUSH1 0x0
0x1f4 SWAP1
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x6
0x1f9 PUSH1 0x20
0x1fb MSTORE
0x1fc PUSH1 0x40
0x1fe SWAP1
0x1ff SHA3
0x200 SLOAD
0x201 ISZERO
0x202 ISZERO
0x203 PUSH2 0x273
0x206 JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V141 = 0x1
0x1ea: V142 = 0xa0
0x1ec: V143 = 0x2
0x1ee: V144 = EXP 0x2 0xa0
0x1ef: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V146 = CALLER
0x1f1: V147 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V148 = 0x0
0x1f6: M[0x0] = V147
0x1f7: V149 = 0x6
0x1f9: V150 = 0x20
0x1fb: M[0x20] = 0x6
0x1fc: V151 = 0x40
0x1ff: V152 = SHA3 0x0 0x40
0x200: V153 = S[V152]
0x201: V154 = ISZERO V153
0x202: V155 = ISZERO V154
0x203: V156 = 0x273
0x206: JUMPI 0x273 V155
---
Entry stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0]

================================

Block 0x207
[0x207:0x217]
---
Predecessors: [0x1e7]
Successors: [0xa7c]
---
0x207 PUSH1 0x8
0x209 DUP1
0x20a SLOAD
0x20b PUSH1 0x1
0x20d DUP2
0x20e ADD
0x20f PUSH2 0x218
0x212 DUP4
0x213 DUP3
0x214 PUSH2 0xa7c
0x217 JUMP
---
0x207: V157 = 0x8
0x20a: V158 = S[0x8]
0x20b: V159 = 0x1
0x20e: V160 = ADD V158 0x1
0x20f: V161 = 0x218
0x214: V162 = 0xa7c
0x217: JUMP 0xa7c
---
Entry stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: [0x8, V158, V160, 0x218, 0x8, V160]
Exit stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0, 0x8, V158, V160, 0x218, 0x8, V160]

================================

Block 0x218
[0x218:0x225]
---
Predecessors: [0x3f6, 0x9a7]
Successors: [0x226]
---
0x218 JUMPDEST
0x219 SWAP2
0x21a PUSH1 0x0
0x21c MSTORE
0x21d PUSH1 0x20
0x21f PUSH1 0x0
0x221 SHA3
0x222 SWAP1
0x223 ADD
0x224 PUSH1 0x0
---
0x218: JUMPDEST 
0x21a: V163 = 0x0
0x21c: M[0x0] = {0x8, 0x3fb}
0x21d: V164 = 0x20
0x21f: V165 = 0x0
0x221: V166 = SHA3 0x0 0x20
0x223: V167 = ADD S1 V166
0x224: V168 = 0x0
---
Entry stack: [V10, 0x3fb, S5, V113, S3, {0x8, 0x3fb}, S1, S0]
Stack pops: 3
Stack additions: [S0, V167, 0x0]
Exit stack: [V10, 0x3fb, S5, V113, S3, S0, V167, 0x0]

================================

Block 0x226
[0x226:0x24f]
---
Predecessors: [0x218]
Successors: [0x250]
---
0x226 JUMPDEST
0x227 DUP2
0x228 SLOAD
0x229 PUSH1 0x1
0x22b PUSH1 0xa0
0x22d PUSH1 0x2
0x22f EXP
0x230 SUB
0x231 CALLER
0x232 DUP2
0x233 AND
0x234 PUSH2 0x100
0x237 SWAP4
0x238 SWAP1
0x239 SWAP4
0x23a EXP
0x23b SWAP3
0x23c DUP4
0x23d MUL
0x23e SWAP3
0x23f MUL
0x240 NOT
0x241 AND
0x242 OR
0x243 SWAP1
0x244 SSTORE
0x245 POP
0x246 PUSH8 0xde0b6b3a7640000
0x24f DUP3
---
0x226: JUMPDEST 
0x228: V169 = S[V167]
0x229: V170 = 0x1
0x22b: V171 = 0xa0
0x22d: V172 = 0x2
0x22f: V173 = EXP 0x2 0xa0
0x230: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V175 = CALLER
0x233: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x234: V177 = 0x100
0x23a: V178 = EXP 0x100 0x0
0x23d: V179 = MUL 0x1 V176
0x23f: V180 = MUL 0x1 0xffffffffffffffffffffffffffffffffffffffff
0x240: V181 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x241: V182 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V169
0x242: V183 = OR V182 V179
0x244: S[V167] = V183
0x246: V184 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3fb, S5, V113, S3, S2, V167, 0x0]
Stack pops: 5
Stack additions: [S4, S3, 0xde0b6b3a7640000, S4]
Exit stack: [V10, 0x3fb, S5, V113, S3, 0xde0b6b3a7640000, V113]

================================

Block 0x250
[0x250:0x272]
---
Predecessors: [0x226]
Successors: [0x303]
---
0x250 JUMPDEST
0x251 PUSH1 0x9
0x253 DUP1
0x254 SLOAD
0x255 PUSH2 0xffff
0x258 NOT
0x259 DUP2
0x25a AND
0x25b SWAP4
0x25c SWAP1
0x25d SWAP3
0x25e DIV
0x25f PUSH2 0xffff
0x262 SWAP3
0x263 DUP4
0x264 AND
0x265 ADD
0x266 SWAP1
0x267 SWAP2
0x268 AND
0x269 SWAP2
0x26a SWAP1
0x26b SWAP2
0x26c OR
0x26d SWAP1
0x26e SSTORE
0x26f PUSH2 0x303
0x272 JUMP
---
0x250: JUMPDEST 
0x251: V185 = 0x9
0x254: V186 = S[0x9]
0x255: V187 = 0xffff
0x258: V188 = NOT 0xffff
0x25a: V189 = AND V186 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x25e: V190 = DIV V113 0xde0b6b3a7640000
0x25f: V191 = 0xffff
0x264: V192 = AND 0xffff V186
0x265: V193 = ADD V192 V190
0x268: V194 = AND 0xffff V193
0x26c: V195 = OR V194 V189
0x26e: S[0x9] = V195
0x26f: V196 = 0x303
0x272: JUMP 0x303
---
Entry stack: [V10, 0x3fb, S4, V113, S2, 0xde0b6b3a7640000, V113]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3fb, S4, V113, S2]

================================

Block 0x273
[0x273:0x27e]
---
Predecessors: [0x1e7]
Successors: [0x796]
---
0x273 JUMPDEST
0x274 PUSH1 0x64
0x276 DUP3
0x277 PUSH2 0x27f
0x27a CALLER
0x27b PUSH2 0x796
0x27e JUMP
---
0x273: JUMPDEST 
0x274: V197 = 0x64
0x277: V198 = 0x27f
0x27a: V199 = CALLER
0x27b: V200 = 0x796
0x27e: JUMP 0x796
---
Entry stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1, 0x27f, V199]
Exit stack: [V10, 0x3fb, S7, V113, S5, S4, S3, S2, V113, S0, 0x64, V113, 0x27f, V199]

================================

Block 0x27f
[0x27f:0x287]
---
Predecessors: [0x7f3]
Successors: [0x288, 0x289]
---
0x27f JUMPDEST
0x280 MUL
0x281 DUP2
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x289
0x287 JUMPI
---
0x27f: JUMPDEST 
0x280: V201 = MUL S0 S1
0x282: V202 = ISZERO 0x64
0x283: V203 = ISZERO 0x0
0x284: V204 = 0x289
0x287: JUMPI 0x289 0x1
---
Entry stack: [V10, 0x3fb, S5, V113, S3, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V201]
Exit stack: [V10, 0x3fb, S5, V113, S3, 0x64, V201]

================================

Block 0x288
[0x288:0x288]
---
Predecessors: [0x27f]
Successors: []
---
0x288 INVALID
---
0x288: INVALID 
---
Entry stack: [V10, 0x3fb, S4, V113, S2, 0x64, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S4, V113, S2, 0x64, V201]

================================

Block 0x289
[0x289:0x298]
---
Predecessors: [0x27f]
Successors: [0x299]
---
0x289 JUMPDEST
0x28a DIV
0x28b SWAP3
0x28c POP
0x28d PUSH8 0xde0b6b3a7640000
0x296 DUP4
0x297 DUP4
0x298 SUB
---
0x289: JUMPDEST 
0x28a: V205 = DIV V201 0x64
0x28d: V206 = 0xde0b6b3a7640000
0x298: V207 = SUB V113 V205
---
Entry stack: [V10, 0x3fb, S4, V113, S2, 0x64, V201]
Stack pops: 5
Stack additions: [V205, S3, S2, 0xde0b6b3a7640000, V207]
Exit stack: [V10, 0x3fb, V205, V113, S2, 0xde0b6b3a7640000, V207]

================================

Block 0x299
[0x299:0x2d0]
---
Predecessors: [0x289]
Successors: [0x2d1]
---
0x299 JUMPDEST
0x29a PUSH1 0x9
0x29c DUP1
0x29d SLOAD
0x29e SWAP3
0x29f SWAP1
0x2a0 SWAP2
0x2a1 DIV
0x2a2 PUSH2 0xffff
0x2a5 PUSH5 0x100000000
0x2ab DUP1
0x2ac DUP6
0x2ad DIV
0x2ae DUP3
0x2af AND
0x2b0 SWAP3
0x2b1 SWAP1
0x2b2 SWAP3
0x2b3 SUB
0x2b4 AND
0x2b5 MUL
0x2b6 PUSH6 0xffff00000000
0x2bd NOT
0x2be SWAP1
0x2bf SWAP3
0x2c0 AND
0x2c1 SWAP2
0x2c2 SWAP1
0x2c3 SWAP2
0x2c4 OR
0x2c5 SWAP1
0x2c6 SSTORE
0x2c7 PUSH8 0xde0b6b3a7640000
0x2d0 DUP4
---
0x299: JUMPDEST 
0x29a: V208 = 0x9
0x29d: V209 = S[0x9]
0x2a1: V210 = DIV V207 0xde0b6b3a7640000
0x2a2: V211 = 0xffff
0x2a5: V212 = 0x100000000
0x2ad: V213 = DIV V209 0x100000000
0x2af: V214 = AND 0xffff V213
0x2b3: V215 = SUB V214 V210
0x2b4: V216 = AND V215 0xffff
0x2b5: V217 = MUL V216 0x100000000
0x2b6: V218 = 0xffff00000000
0x2bd: V219 = NOT 0xffff00000000
0x2c0: V220 = AND V209 0xffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff
0x2c4: V221 = OR V220 V217
0x2c6: S[0x9] = V221
0x2c7: V222 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3fb, V205, V113, S2, 0xde0b6b3a7640000, V207]
Stack pops: 5
Stack additions: [S4, S3, S2, 0xde0b6b3a7640000, S4]
Exit stack: [V10, 0x3fb, V205, V113, S2, 0xde0b6b3a7640000, V205]

================================

Block 0x2d1
[0x2d1:0x302]
---
Predecessors: [0x299]
Successors: [0x303]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x9
0x2d4 DUP1
0x2d5 SLOAD
0x2d6 SWAP3
0x2d7 SWAP1
0x2d8 SWAP2
0x2d9 DIV
0x2da PUSH2 0xffff
0x2dd PUSH7 0x1000000000000
0x2e5 DUP1
0x2e6 DUP6
0x2e7 DIV
0x2e8 DUP3
0x2e9 AND
0x2ea SWAP3
0x2eb SWAP1
0x2ec SWAP3
0x2ed SUB
0x2ee AND
0x2ef MUL
0x2f0 PUSH8 0xffff000000000000
0x2f9 NOT
0x2fa SWAP1
0x2fb SWAP3
0x2fc AND
0x2fd SWAP2
0x2fe SWAP1
0x2ff SWAP2
0x300 OR
0x301 SWAP1
0x302 SSTORE
---
0x2d1: JUMPDEST 
0x2d2: V223 = 0x9
0x2d5: V224 = S[0x9]
0x2d9: V225 = DIV V205 0xde0b6b3a7640000
0x2da: V226 = 0xffff
0x2dd: V227 = 0x1000000000000
0x2e7: V228 = DIV V224 0x1000000000000
0x2e9: V229 = AND 0xffff V228
0x2ed: V230 = SUB V229 V225
0x2ee: V231 = AND V230 0xffff
0x2ef: V232 = MUL V231 0x1000000000000
0x2f0: V233 = 0xffff000000000000
0x2f9: V234 = NOT 0xffff000000000000
0x2fc: V235 = AND V224 0xffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff
0x300: V236 = OR V235 V232
0x302: S[0x9] = V236
---
Entry stack: [V10, 0x3fb, V205, V113, S2, 0xde0b6b3a7640000, V205]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3fb, V205, V113, S2]

================================

Block 0x303
[0x303:0x30b]
---
Predecessors: [0x250, 0x2d1]
Successors: [0x30c, 0x312]
---
0x303 JUMPDEST
0x304 PUSH1 0x0
0x306 CALLVALUE
0x307 GT
0x308 PUSH2 0x312
0x30b JUMPI
---
0x303: JUMPDEST 
0x304: V237 = 0x0
0x306: V238 = CALLVALUE
0x307: V239 = GT V238 0x0
0x308: V240 = 0x312
0x30b: JUMPI 0x312 V239
---
Entry stack: [V10, 0x3fb, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S2, V113, S0]

================================

Block 0x30c
[0x30c:0x311]
---
Predecessors: [0x303]
Successors: [0x314]
---
0x30c PUSH1 0x1
0x30e PUSH2 0x314
0x311 JUMP
---
0x30c: V241 = 0x1
0x30e: V242 = 0x314
0x311: JUMP 0x314
---
Entry stack: [V10, 0x3fb, S2, V113, S0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x3fb, S2, V113, S0, 0x1]

================================

Block 0x312
[0x312:0x313]
---
Predecessors: [0x303]
Successors: [0x314]
---
0x312 JUMPDEST
0x313 CALLVALUE
---
0x312: JUMPDEST 
0x313: V243 = CALLVALUE
---
Entry stack: [V10, 0x3fb, S2, V113, S0]
Stack pops: 0
Stack additions: [V243]
Exit stack: [V10, 0x3fb, S2, V113, S0, V243]

================================

Block 0x314
[0x314:0x33e]
---
Predecessors: [0x30c, 0x312]
Successors: [0x796]
---
0x314 JUMPDEST
0x315 CALLER
0x316 PUSH1 0x1
0x318 PUSH1 0xa0
0x31a PUSH1 0x2
0x31c EXP
0x31d SUB
0x31e DUP2
0x31f AND
0x320 PUSH1 0x0
0x322 SWAP1
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x6
0x327 PUSH1 0x20
0x329 MSTORE
0x32a PUSH1 0x40
0x32c SWAP1
0x32d SHA3
0x32e SWAP2
0x32f SWAP1
0x330 SWAP2
0x331 SSTORE
0x332 PUSH1 0x64
0x334 SWAP1
0x335 DUP4
0x336 SWAP1
0x337 PUSH2 0x33f
0x33a SWAP1
0x33b PUSH2 0x796
0x33e JUMP
---
0x314: JUMPDEST 
0x315: V244 = CALLER
0x316: V245 = 0x1
0x318: V246 = 0xa0
0x31a: V247 = 0x2
0x31c: V248 = EXP 0x2 0xa0
0x31d: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31f: V250 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x320: V251 = 0x0
0x324: M[0x0] = V250
0x325: V252 = 0x6
0x327: V253 = 0x20
0x329: M[0x20] = 0x6
0x32a: V254 = 0x40
0x32d: V255 = SHA3 0x0 0x40
0x331: S[V255] = S0
0x332: V256 = 0x64
0x337: V257 = 0x33f
0x33b: V258 = 0x796
0x33e: JUMP 0x796
---
Entry stack: [V10, 0x3fb, S3, V113, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x64, S2, 0x33f, V244]
Exit stack: [V10, 0x3fb, S3, V113, S1, 0x64, V113, 0x33f, V244]

================================

Block 0x33f
[0x33f:0x347]
---
Predecessors: [0x7f3]
Successors: [0x348, 0x349]
---
0x33f JUMPDEST
0x340 MUL
0x341 DUP2
0x342 ISZERO
0x343 ISZERO
0x344 PUSH2 0x349
0x347 JUMPI
---
0x33f: JUMPDEST 
0x340: V259 = MUL S0 S1
0x342: V260 = ISZERO 0x64
0x343: V261 = ISZERO 0x0
0x344: V262 = 0x349
0x347: JUMPI 0x349 0x1
---
Entry stack: [V10, 0x3fb, S5, V113, S3, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V259]
Exit stack: [V10, 0x3fb, S5, V113, S3, 0x64, V259]

================================

Block 0x348
[0x348:0x348]
---
Predecessors: [0x33f]
Successors: []
---
0x348 INVALID
---
0x348: INVALID 
---
Entry stack: [V10, 0x3fb, S4, V113, S2, 0x64, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S4, V113, S2, 0x64, V259]

================================

Block 0x349
[0x349:0x358]
---
Predecessors: [0x33f]
Successors: [0x359]
---
0x349 JUMPDEST
0x34a DIV
0x34b SWAP3
0x34c POP
0x34d PUSH8 0xde0b6b3a7640000
0x356 DUP4
0x357 DUP4
0x358 SUB
---
0x349: JUMPDEST 
0x34a: V263 = DIV V259 0x64
0x34d: V264 = 0xde0b6b3a7640000
0x358: V265 = SUB V113 V263
---
Entry stack: [V10, 0x3fb, S4, V113, S2, 0x64, V259]
Stack pops: 5
Stack additions: [V263, S3, S2, 0xde0b6b3a7640000, V265]
Exit stack: [V10, 0x3fb, V263, V113, S2, 0xde0b6b3a7640000, V265]

================================

Block 0x359
[0x359:0x393]
---
Predecessors: [0x349]
Successors: [0x394]
---
0x359 JUMPDEST
0x35a PUSH1 0x9
0x35c DUP1
0x35d SLOAD
0x35e PUSH6 0xffff00000000
0x365 NOT
0x366 DUP2
0x367 AND
0x368 SWAP4
0x369 SWAP1
0x36a SWAP3
0x36b DIV
0x36c PUSH5 0x100000000
0x372 SWAP3
0x373 DUP4
0x374 SWAP1
0x375 DIV
0x376 PUSH2 0xffff
0x379 SWAP1
0x37a DUP2
0x37b AND
0x37c SWAP2
0x37d SWAP1
0x37e SWAP2
0x37f ADD
0x380 AND
0x381 SWAP1
0x382 SWAP2
0x383 MUL
0x384 SWAP2
0x385 SWAP1
0x386 SWAP2
0x387 OR
0x388 SWAP1
0x389 SSTORE
0x38a PUSH8 0xde0b6b3a7640000
0x393 DUP4
---
0x359: JUMPDEST 
0x35a: V266 = 0x9
0x35d: V267 = S[0x9]
0x35e: V268 = 0xffff00000000
0x365: V269 = NOT 0xffff00000000
0x367: V270 = AND V267 0xffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff
0x36b: V271 = DIV V265 0xde0b6b3a7640000
0x36c: V272 = 0x100000000
0x375: V273 = DIV V267 0x100000000
0x376: V274 = 0xffff
0x37b: V275 = AND 0xffff V273
0x37f: V276 = ADD V275 V271
0x380: V277 = AND V276 0xffff
0x383: V278 = MUL 0x100000000 V277
0x387: V279 = OR V278 V270
0x389: S[0x9] = V279
0x38a: V280 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3fb, V263, V113, S2, 0xde0b6b3a7640000, V265]
Stack pops: 5
Stack additions: [S4, S3, S2, 0xde0b6b3a7640000, S4]
Exit stack: [V10, 0x3fb, V263, V113, S2, 0xde0b6b3a7640000, V263]

================================

Block 0x394
[0x394:0x3d2]
---
Predecessors: [0x359]
Successors: [0x3d3]
---
0x394 JUMPDEST
0x395 PUSH1 0x9
0x397 DUP1
0x398 SLOAD
0x399 PUSH8 0xffff000000000000
0x3a2 NOT
0x3a3 DUP2
0x3a4 AND
0x3a5 SWAP4
0x3a6 SWAP1
0x3a7 SWAP3
0x3a8 DIV
0x3a9 PUSH7 0x1000000000000
0x3b1 SWAP3
0x3b2 DUP4
0x3b3 SWAP1
0x3b4 DIV
0x3b5 PUSH2 0xffff
0x3b8 SWAP1
0x3b9 DUP2
0x3ba AND
0x3bb SWAP2
0x3bc SWAP1
0x3bd SWAP2
0x3be ADD
0x3bf AND
0x3c0 SWAP1
0x3c1 SWAP2
0x3c2 MUL
0x3c3 SWAP2
0x3c4 SWAP1
0x3c5 SWAP2
0x3c6 OR
0x3c7 SWAP1
0x3c8 SSTORE
0x3c9 PUSH8 0xde0b6b3a7640000
0x3d2 DUP3
---
0x394: JUMPDEST 
0x395: V281 = 0x9
0x398: V282 = S[0x9]
0x399: V283 = 0xffff000000000000
0x3a2: V284 = NOT 0xffff000000000000
0x3a4: V285 = AND V282 0xffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff
0x3a8: V286 = DIV V263 0xde0b6b3a7640000
0x3a9: V287 = 0x1000000000000
0x3b4: V288 = DIV V282 0x1000000000000
0x3b5: V289 = 0xffff
0x3ba: V290 = AND 0xffff V288
0x3be: V291 = ADD V290 V286
0x3bf: V292 = AND V291 0xffff
0x3c2: V293 = MUL 0x1000000000000 V292
0x3c6: V294 = OR V293 V285
0x3c8: S[0x9] = V294
0x3c9: V295 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3fb, V263, V113, S2, 0xde0b6b3a7640000, V263]
Stack pops: 4
Stack additions: [S3, S2, 0xde0b6b3a7640000, S3]
Exit stack: [V10, 0x3fb, V263, V113, S2, 0xde0b6b3a7640000, V113]

================================

Block 0x3d3
[0x3d3:0x3f4]
---
Predecessors: [0x394]
Successors: [0x3f5]
---
0x3d3 JUMPDEST
0x3d4 DIV
0x3d5 PUSH2 0x2ee0
0x3d8 SUB
0x3d9 PUSH1 0x9
0x3db PUSH1 0x2
0x3dd PUSH2 0x100
0x3e0 EXP
0x3e1 DUP2
0x3e2 SLOAD
0x3e3 DUP2
0x3e4 PUSH2 0xffff
0x3e7 MUL
0x3e8 NOT
0x3e9 AND
0x3ea SWAP1
0x3eb DUP4
0x3ec PUSH2 0xffff
0x3ef AND
0x3f0 MUL
0x3f1 OR
0x3f2 SWAP1
0x3f3 SSTORE
0x3f4 POP
---
0x3d3: JUMPDEST 
0x3d4: V296 = DIV V113 0xde0b6b3a7640000
0x3d5: V297 = 0x2ee0
0x3d8: V298 = SUB 0x2ee0 V296
0x3d9: V299 = 0x9
0x3db: V300 = 0x2
0x3dd: V301 = 0x100
0x3e0: V302 = EXP 0x100 0x2
0x3e2: V303 = S[0x9]
0x3e4: V304 = 0xffff
0x3e7: V305 = MUL 0xffff 0x10000
0x3e8: V306 = NOT 0xffff0000
0x3e9: V307 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff V303
0x3ec: V308 = 0xffff
0x3ef: V309 = AND 0xffff V298
0x3f0: V310 = MUL V309 0x10000
0x3f1: V311 = OR V310 V307
0x3f3: S[0x9] = V311
---
Entry stack: [V10, 0x3fb, V263, V113, S2, 0xde0b6b3a7640000, V113]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3fb, V263, V113, S2]

================================

Block 0x3f5
[0x3f5:0x3f5]
---
Predecessors: [0x3d3, 0x793, 0xa7c]
Successors: [0x3f6]
---
0x3f5 JUMPDEST
---
0x3f5: JUMPDEST 
---
Entry stack: [V10, 0x3fb, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x3fb, 0x589}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x3fb, 0x589}, S2, S1, S0]

================================

Block 0x3f6
[0x3f6:0x3fa]
---
Predecessors: [0x3f5]
Successors: [0x218, 0x3fb, 0x589]
---
0x3f6 JUMPDEST
0x3f7 POP
0x3f8 POP
0x3f9 POP
0x3fa JUMP
---
0x3f6: JUMPDEST 
0x3fa: JUMP {0x0, 0x218, 0x3fb, 0x589}
---
Entry stack: [V10, 0x3fb, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x3fb, 0x589}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x3fb, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4]

================================

Block 0x3fb
[0x3fb:0x3fc]
---
Predecessors: [0x3f6, 0x851, 0x8d1]
Successors: []
---
0x3fb JUMPDEST
0x3fc STOP
---
0x3fb: JUMPDEST 
0x3fc: STOP 
---
Entry stack: [V10, 0x3fb, S5, V113, S3, 0x8, V158, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S5, V113, S3, 0x8, V158, S0]

================================

Block 0x3fd
[0x3fd:0x403]
---
Predecessors: [0xb]
Successors: [0x404, 0x405]
---
0x3fd JUMPDEST
0x3fe CALLVALUE
0x3ff ISZERO
0x400 PUSH2 0x405
0x403 JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V312 = CALLVALUE
0x3ff: V313 = ISZERO V312
0x400: V314 = 0x405
0x403: JUMPI 0x405 V313
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x404
[0x404:0x404]
---
Predecessors: [0x3fd]
Successors: []
---
0x404 INVALID
---
0x404: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x405
[0x405:0x418]
---
Predecessors: [0x3fd]
Successors: [0x7f9]
---
0x405 JUMPDEST
0x406 PUSH2 0x419
0x409 PUSH1 0x1
0x40b PUSH1 0xa0
0x40d PUSH1 0x2
0x40f EXP
0x410 SUB
0x411 PUSH1 0x4
0x413 CALLDATALOAD
0x414 AND
0x415 PUSH2 0x7f9
0x418 JUMP
---
0x405: JUMPDEST 
0x406: V315 = 0x419
0x409: V316 = 0x1
0x40b: V317 = 0xa0
0x40d: V318 = 0x2
0x40f: V319 = EXP 0x2 0xa0
0x410: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V321 = 0x4
0x413: V322 = CALLDATALOAD 0x4
0x414: V323 = AND V322 0xffffffffffffffffffffffffffffffffffffffff
0x415: V324 = 0x7f9
0x418: JUMP 0x7f9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x419, V323]
Exit stack: [V10, 0x419, V323]

================================

Block 0x419
[0x419:0x42a]
---
Predecessors: [0x7f3, 0x7f9, 0x8d5, 0x9e6, 0x9f0, 0xa25]
Successors: []
---
0x419 JUMPDEST
0x41a PUSH1 0x40
0x41c DUP1
0x41d MLOAD
0x41e SWAP2
0x41f DUP3
0x420 MSTORE
0x421 MLOAD
0x422 SWAP1
0x423 DUP2
0x424 SWAP1
0x425 SUB
0x426 PUSH1 0x20
0x428 ADD
0x429 SWAP1
0x42a RETURN
---
0x419: JUMPDEST 
0x41a: V325 = 0x40
0x41d: V326 = M[0x40]
0x420: M[V326] = S0
0x421: V327 = M[0x40]
0x425: V328 = SUB V326 V327
0x426: V329 = 0x20
0x428: V330 = ADD 0x20 V328
0x42a: RETURN V327 V330
---
Entry stack: [V10, 0x3fb, S5, V113, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fb, S5, V113, S3, S2, S1]

================================

Block 0x42b
[0x42b:0x431]
---
Predecessors: [0x3d]
Successors: [0x432, 0x433]
---
0x42b JUMPDEST
0x42c CALLVALUE
0x42d ISZERO
0x42e PUSH2 0x433
0x431 JUMPI
---
0x42b: JUMPDEST 
0x42c: V331 = CALLVALUE
0x42d: V332 = ISZERO V331
0x42e: V333 = 0x433
0x431: JUMPI 0x433 V332
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x432
[0x432:0x432]
---
Predecessors: [0x42b]
Successors: []
---
0x432 INVALID
---
0x432: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x433
[0x433:0x446]
---
Predecessors: [0x42b]
Successors: [0x80b]
---
0x433 JUMPDEST
0x434 PUSH2 0x3fb
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f PUSH1 0x4
0x441 CALLDATALOAD
0x442 AND
0x443 PUSH2 0x80b
0x446 JUMP
---
0x433: JUMPDEST 
0x434: V334 = 0x3fb
0x437: V335 = 0x1
0x439: V336 = 0xa0
0x43b: V337 = 0x2
0x43d: V338 = EXP 0x2 0xa0
0x43e: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43f: V340 = 0x4
0x441: V341 = CALLDATALOAD 0x4
0x442: V342 = AND V341 0xffffffffffffffffffffffffffffffffffffffff
0x443: V343 = 0x80b
0x446: JUMP 0x80b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3fb, V342]
Exit stack: [V10, 0x3fb, V342]

================================

Block 0x447
[0x447:0x448]
---
Predecessors: []
Successors: []
---
0x447 JUMPDEST
0x448 STOP
---
0x447: JUMPDEST 
0x448: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x449
[0x449:0x44f]
---
Predecessors: [0x48]
Successors: [0x450, 0x451]
---
0x449 JUMPDEST
0x44a CALLVALUE
0x44b ISZERO
0x44c PUSH2 0x451
0x44f JUMPI
---
0x449: JUMPDEST 
0x44a: V344 = CALLVALUE
0x44b: V345 = ISZERO V344
0x44c: V346 = 0x451
0x44f: JUMPI 0x451 V345
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x450
[0x450:0x450]
---
Predecessors: [0x449]
Successors: []
---
0x450 INVALID
---
0x450: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x451
[0x451:0x458]
---
Predecessors: [0x449]
Successors: [0x854]
---
0x451 JUMPDEST
0x452 PUSH2 0x459
0x455 PUSH2 0x854
0x458 JUMP
---
0x451: JUMPDEST 
0x452: V347 = 0x459
0x455: V348 = 0x854
0x458: JUMP 0x854
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x459]
Exit stack: [V10, 0x459]

================================

Block 0x459
[0x459:0x46f]
---
Predecessors: [0x854, 0x866, 0x870, 0x8db]
Successors: []
---
0x459 JUMPDEST
0x45a PUSH1 0x40
0x45c DUP1
0x45d MLOAD
0x45e PUSH2 0xffff
0x461 SWAP1
0x462 SWAP3
0x463 AND
0x464 DUP3
0x465 MSTORE
0x466 MLOAD
0x467 SWAP1
0x468 DUP2
0x469 SWAP1
0x46a SUB
0x46b PUSH1 0x20
0x46d ADD
0x46e SWAP1
0x46f RETURN
---
0x459: JUMPDEST 
0x45a: V349 = 0x40
0x45d: V350 = M[0x40]
0x45e: V351 = 0xffff
0x463: V352 = AND S0 0xffff
0x465: M[V350] = V352
0x466: V353 = M[0x40]
0x46a: V354 = SUB V350 V353
0x46b: V355 = 0x20
0x46d: V356 = ADD 0x20 V354
0x46f: RETURN V353 V356
---
Entry stack: [V10, 0x459, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x459]

================================

Block 0x470
[0x470:0x476]
---
Predecessors: [0x53]
Successors: [0x477, 0x478]
---
0x470 JUMPDEST
0x471 CALLVALUE
0x472 ISZERO
0x473 PUSH2 0x478
0x476 JUMPI
---
0x470: JUMPDEST 
0x471: V357 = CALLVALUE
0x472: V358 = ISZERO V357
0x473: V359 = 0x478
0x476: JUMPI 0x478 V358
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x477
[0x477:0x477]
---
Predecessors: [0x470]
Successors: []
---
0x477 INVALID
---
0x477: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x478
[0x478:0x47f]
---
Predecessors: [0x470]
Successors: [0x866]
---
0x478 JUMPDEST
0x479 PUSH2 0x459
0x47c PUSH2 0x866
0x47f JUMP
---
0x478: JUMPDEST 
0x479: V360 = 0x459
0x47c: V361 = 0x866
0x47f: JUMP 0x866
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x459]
Exit stack: [V10, 0x459]

================================

Block 0x480
[0x480:0x496]
---
Predecessors: []
Successors: []
---
0x480 JUMPDEST
0x481 PUSH1 0x40
0x483 DUP1
0x484 MLOAD
0x485 PUSH2 0xffff
0x488 SWAP1
0x489 SWAP3
0x48a AND
0x48b DUP3
0x48c MSTORE
0x48d MLOAD
0x48e SWAP1
0x48f DUP2
0x490 SWAP1
0x491 SUB
0x492 PUSH1 0x20
0x494 ADD
0x495 SWAP1
0x496 RETURN
---
0x480: JUMPDEST 
0x481: V362 = 0x40
0x484: V363 = M[0x40]
0x485: V364 = 0xffff
0x48a: V365 = AND S0 0xffff
0x48c: M[V363] = V365
0x48d: V366 = M[0x40]
0x491: V367 = SUB V363 V366
0x492: V368 = 0x20
0x494: V369 = ADD 0x20 V367
0x496: RETURN V366 V369
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x497
[0x497:0x49d]
---
Predecessors: [0x5e]
Successors: [0x49e, 0x49f]
---
0x497 JUMPDEST
0x498 CALLVALUE
0x499 ISZERO
0x49a PUSH2 0x49f
0x49d JUMPI
---
0x497: JUMPDEST 
0x498: V370 = CALLVALUE
0x499: V371 = ISZERO V370
0x49a: V372 = 0x49f
0x49d: JUMPI 0x49f V371
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x49e
[0x49e:0x49e]
---
Predecessors: [0x497]
Successors: []
---
0x49e INVALID
---
0x49e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x49f
[0x49f:0x4a6]
---
Predecessors: [0x497]
Successors: [0x870]
---
0x49f JUMPDEST
0x4a0 PUSH2 0x459
0x4a3 PUSH2 0x870
0x4a6 JUMP
---
0x49f: JUMPDEST 
0x4a0: V373 = 0x459
0x4a3: V374 = 0x870
0x4a6: JUMP 0x870
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x459]
Exit stack: [V10, 0x459]

================================

Block 0x4a7
[0x4a7:0x4bd]
---
Predecessors: []
Successors: []
---
0x4a7 JUMPDEST
0x4a8 PUSH1 0x40
0x4aa DUP1
0x4ab MLOAD
0x4ac PUSH2 0xffff
0x4af SWAP1
0x4b0 SWAP3
0x4b1 AND
0x4b2 DUP3
0x4b3 MSTORE
0x4b4 MLOAD
0x4b5 SWAP1
0x4b6 DUP2
0x4b7 SWAP1
0x4b8 SUB
0x4b9 PUSH1 0x20
0x4bb ADD
0x4bc SWAP1
0x4bd RETURN
---
0x4a7: JUMPDEST 
0x4a8: V375 = 0x40
0x4ab: V376 = M[0x40]
0x4ac: V377 = 0xffff
0x4b1: V378 = AND S0 0xffff
0x4b3: M[V376] = V378
0x4b4: V379 = M[0x40]
0x4b8: V380 = SUB V376 V379
0x4b9: V381 = 0x20
0x4bb: V382 = ADD 0x20 V380
0x4bd: RETURN V379 V382
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4be
[0x4be:0x4c4]
---
Predecessors: [0x69]
Successors: [0x4c5, 0x4c6]
---
0x4be JUMPDEST
0x4bf CALLVALUE
0x4c0 ISZERO
0x4c1 PUSH2 0x4c6
0x4c4 JUMPI
---
0x4be: JUMPDEST 
0x4bf: V383 = CALLVALUE
0x4c0: V384 = ISZERO V383
0x4c1: V385 = 0x4c6
0x4c4: JUMPI 0x4c6 V384
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c5
[0x4c5:0x4c5]
---
Predecessors: [0x4be]
Successors: []
---
0x4c5 INVALID
---
0x4c5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c6
[0x4c6:0x4cd]
---
Predecessors: [0x4be]
Successors: [0x880]
---
0x4c6 JUMPDEST
0x4c7 PUSH2 0x4ce
0x4ca PUSH2 0x880
0x4cd JUMP
---
0x4c6: JUMPDEST 
0x4c7: V386 = 0x4ce
0x4ca: V387 = 0x880
0x4cd: JUMP 0x880
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4ce]
Exit stack: [V10, 0x4ce]

================================

Block 0x4ce
[0x4ce:0x4e9]
---
Predecessors: [0x880, 0xa0f]
Successors: []
---
0x4ce JUMPDEST
0x4cf PUSH1 0x40
0x4d1 DUP1
0x4d2 MLOAD
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db SWAP1
0x4dc SWAP3
0x4dd AND
0x4de DUP3
0x4df MSTORE
0x4e0 MLOAD
0x4e1 SWAP1
0x4e2 DUP2
0x4e3 SWAP1
0x4e4 SUB
0x4e5 PUSH1 0x20
0x4e7 ADD
0x4e8 SWAP1
0x4e9 RETURN
---
0x4ce: JUMPDEST 
0x4cf: V388 = 0x40
0x4d2: V389 = M[0x40]
0x4d3: V390 = 0x1
0x4d5: V391 = 0xa0
0x4d7: V392 = 0x2
0x4d9: V393 = EXP 0x2 0xa0
0x4da: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4dd: V395 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4df: M[V389] = V395
0x4e0: V396 = M[0x40]
0x4e4: V397 = SUB V389 V396
0x4e5: V398 = 0x20
0x4e7: V399 = ADD 0x20 V397
0x4e9: RETURN V396 V399
---
Entry stack: [V10, 0x4ce, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x4ce]

================================

Block 0x4ea
[0x4ea:0x4f0]
---
Predecessors: [0x74]
Successors: [0x4f1, 0x4f2]
---
0x4ea JUMPDEST
0x4eb CALLVALUE
0x4ec ISZERO
0x4ed PUSH2 0x4f2
0x4f0 JUMPI
---
0x4ea: JUMPDEST 
0x4eb: V400 = CALLVALUE
0x4ec: V401 = ISZERO V400
0x4ed: V402 = 0x4f2
0x4f0: JUMPI 0x4f2 V401
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f1
[0x4f1:0x4f1]
---
Predecessors: [0x4ea]
Successors: []
---
0x4f1 INVALID
---
0x4f1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f2
[0x4f2:0x505]
---
Predecessors: [0x4ea]
Successors: [0x796]
---
0x4f2 JUMPDEST
0x4f3 PUSH2 0x419
0x4f6 PUSH1 0x1
0x4f8 PUSH1 0xa0
0x4fa PUSH1 0x2
0x4fc EXP
0x4fd SUB
0x4fe PUSH1 0x4
0x500 CALLDATALOAD
0x501 AND
0x502 PUSH2 0x796
0x505 JUMP
---
0x4f2: JUMPDEST 
0x4f3: V403 = 0x419
0x4f6: V404 = 0x1
0x4f8: V405 = 0xa0
0x4fa: V406 = 0x2
0x4fc: V407 = EXP 0x2 0xa0
0x4fd: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fe: V409 = 0x4
0x500: V410 = CALLDATALOAD 0x4
0x501: V411 = AND V410 0xffffffffffffffffffffffffffffffffffffffff
0x502: V412 = 0x796
0x505: JUMP 0x796
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x419, V411]
Exit stack: [V10, 0x419, V411]

================================

Block 0x506
[0x506:0x517]
---
Predecessors: []
Successors: []
---
0x506 JUMPDEST
0x507 PUSH1 0x40
0x509 DUP1
0x50a MLOAD
0x50b SWAP2
0x50c DUP3
0x50d MSTORE
0x50e MLOAD
0x50f SWAP1
0x510 DUP2
0x511 SWAP1
0x512 SUB
0x513 PUSH1 0x20
0x515 ADD
0x516 SWAP1
0x517 RETURN
---
0x506: JUMPDEST 
0x507: V413 = 0x40
0x50a: V414 = M[0x40]
0x50d: M[V414] = S0
0x50e: V415 = M[0x40]
0x512: V416 = SUB V414 V415
0x513: V417 = 0x20
0x515: V418 = ADD 0x20 V416
0x517: RETURN V415 V418
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x518
[0x518:0x51e]
---
Predecessors: [0x7f]
Successors: [0x51f, 0x520]
---
0x518 JUMPDEST
0x519 CALLVALUE
0x51a ISZERO
0x51b PUSH2 0x520
0x51e JUMPI
---
0x518: JUMPDEST 
0x519: V419 = CALLVALUE
0x51a: V420 = ISZERO V419
0x51b: V421 = 0x520
0x51e: JUMPI 0x520 V420
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51f
[0x51f:0x51f]
---
Predecessors: [0x518]
Successors: []
---
0x51f INVALID
---
0x51f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x520
[0x520:0x52d]
---
Predecessors: [0x518]
Successors: [0x88f]
---
0x520 JUMPDEST
0x521 PUSH2 0x3fb
0x524 PUSH1 0x4
0x526 CALLDATALOAD
0x527 PUSH1 0x24
0x529 CALLDATALOAD
0x52a PUSH2 0x88f
0x52d JUMP
---
0x520: JUMPDEST 
0x521: V422 = 0x3fb
0x524: V423 = 0x4
0x526: V424 = CALLDATALOAD 0x4
0x527: V425 = 0x24
0x529: V426 = CALLDATALOAD 0x24
0x52a: V427 = 0x88f
0x52d: JUMP 0x88f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3fb, V424, V426]
Exit stack: [V10, 0x3fb, V424, V426]

================================

Block 0x52e
[0x52e:0x52f]
---
Predecessors: []
Successors: []
---
0x52e JUMPDEST
0x52f STOP
---
0x52e: JUMPDEST 
0x52f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x530
[0x530:0x536]
---
Predecessors: [0x8a]
Successors: [0x537, 0x538]
---
0x530 JUMPDEST
0x531 CALLVALUE
0x532 ISZERO
0x533 PUSH2 0x538
0x536 JUMPI
---
0x530: JUMPDEST 
0x531: V428 = CALLVALUE
0x532: V429 = ISZERO V428
0x533: V430 = 0x538
0x536: JUMPI 0x538 V429
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x537
[0x537:0x537]
---
Predecessors: [0x530]
Successors: []
---
0x537 INVALID
---
0x537: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x538
[0x538:0x53f]
---
Predecessors: [0x530]
Successors: [0x8d5]
---
0x538 JUMPDEST
0x539 PUSH2 0x419
0x53c PUSH2 0x8d5
0x53f JUMP
---
0x538: JUMPDEST 
0x539: V431 = 0x419
0x53c: V432 = 0x8d5
0x53f: JUMP 0x8d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x419]
Exit stack: [V10, 0x419]

================================

Block 0x540
[0x540:0x551]
---
Predecessors: []
Successors: []
---
0x540 JUMPDEST
0x541 PUSH1 0x40
0x543 DUP1
0x544 MLOAD
0x545 SWAP2
0x546 DUP3
0x547 MSTORE
0x548 MLOAD
0x549 SWAP1
0x54a DUP2
0x54b SWAP1
0x54c SUB
0x54d PUSH1 0x20
0x54f ADD
0x550 SWAP1
0x551 RETURN
---
0x540: JUMPDEST 
0x541: V433 = 0x40
0x544: V434 = M[0x40]
0x547: M[V434] = S0
0x548: V435 = M[0x40]
0x54c: V436 = SUB V434 V435
0x54d: V437 = 0x20
0x54f: V438 = ADD 0x20 V436
0x551: RETURN V435 V438
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x552
[0x552:0x558]
---
Predecessors: [0x95]
Successors: [0x559, 0x55a]
---
0x552 JUMPDEST
0x553 CALLVALUE
0x554 ISZERO
0x555 PUSH2 0x55a
0x558 JUMPI
---
0x552: JUMPDEST 
0x553: V439 = CALLVALUE
0x554: V440 = ISZERO V439
0x555: V441 = 0x55a
0x558: JUMPI 0x55a V440
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x559
[0x559:0x559]
---
Predecessors: [0x552]
Successors: []
---
0x559 INVALID
---
0x559: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x55a
[0x55a:0x561]
---
Predecessors: [0x552]
Successors: [0x8db]
---
0x55a JUMPDEST
0x55b PUSH2 0x459
0x55e PUSH2 0x8db
0x561 JUMP
---
0x55a: JUMPDEST 
0x55b: V442 = 0x459
0x55e: V443 = 0x8db
0x561: JUMP 0x8db
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x459]
Exit stack: [V10, 0x459]

================================

Block 0x562
[0x562:0x578]
---
Predecessors: []
Successors: []
---
0x562 JUMPDEST
0x563 PUSH1 0x40
0x565 DUP1
0x566 MLOAD
0x567 PUSH2 0xffff
0x56a SWAP1
0x56b SWAP3
0x56c AND
0x56d DUP3
0x56e MSTORE
0x56f MLOAD
0x570 SWAP1
0x571 DUP2
0x572 SWAP1
0x573 SUB
0x574 PUSH1 0x20
0x576 ADD
0x577 SWAP1
0x578 RETURN
---
0x562: JUMPDEST 
0x563: V444 = 0x40
0x566: V445 = M[0x40]
0x567: V446 = 0xffff
0x56c: V447 = AND S0 0xffff
0x56e: M[V445] = V447
0x56f: V448 = M[0x40]
0x573: V449 = SUB V445 V448
0x574: V450 = 0x20
0x576: V451 = ADD 0x20 V449
0x578: RETURN V448 V451
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x579
[0x579:0x57f]
---
Predecessors: [0xa0]
Successors: [0x580, 0x581]
---
0x579 JUMPDEST
0x57a CALLVALUE
0x57b ISZERO
0x57c PUSH2 0x581
0x57f JUMPI
---
0x579: JUMPDEST 
0x57a: V452 = CALLVALUE
0x57b: V453 = ISZERO V452
0x57c: V454 = 0x581
0x57f: JUMPI 0x581 V453
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x580
[0x580:0x580]
---
Predecessors: [0x579]
Successors: []
---
0x580 INVALID
---
0x580: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x581
[0x581:0x588]
---
Predecessors: [0x579]
Successors: [0x8ef]
---
0x581 JUMPDEST
0x582 PUSH2 0x589
0x585 PUSH2 0x8ef
0x588 JUMP
---
0x581: JUMPDEST 
0x582: V455 = 0x589
0x585: V456 = 0x8ef
0x588: JUMP 0x8ef
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x589]
Exit stack: [V10, 0x589]

================================

Block 0x589
[0x589:0x5ae]
---
Predecessors: [0x3f6, 0x9a7, 0xa2b]
Successors: [0x5af, 0x5cf]
---
0x589 JUMPDEST
0x58a PUSH1 0x40
0x58c DUP1
0x58d MLOAD
0x58e PUSH1 0x20
0x590 DUP1
0x591 DUP3
0x592 MSTORE
0x593 DUP4
0x594 MLOAD
0x595 DUP2
0x596 DUP4
0x597 ADD
0x598 MSTORE
0x599 DUP4
0x59a MLOAD
0x59b SWAP2
0x59c SWAP3
0x59d DUP4
0x59e SWAP3
0x59f SWAP1
0x5a0 DUP4
0x5a1 ADD
0x5a2 SWAP2
0x5a3 DUP6
0x5a4 ADD
0x5a5 SWAP1
0x5a6 DUP1
0x5a7 DUP4
0x5a8 DUP4
0x5a9 DUP3
0x5aa ISZERO
0x5ab PUSH2 0x5cf
0x5ae JUMPI
---
0x589: JUMPDEST 
0x58a: V457 = 0x40
0x58d: V458 = M[0x40]
0x58e: V459 = 0x20
0x592: M[V458] = 0x20
0x594: V460 = M[S0]
0x597: V461 = ADD V458 0x20
0x598: M[V461] = V460
0x59a: V462 = M[S0]
0x5a1: V463 = ADD V458 0x40
0x5a4: V464 = ADD S0 0x20
0x5aa: V465 = ISZERO V462
0x5ab: V466 = 0x5cf
0x5ae: JUMPI 0x5cf V465
---
Entry stack: [V10, 0x3fb, S5, V113, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V458, V458, V463, V464, V462, V462, V463, V464]
Exit stack: [V10, 0x3fb, S5, V113, S3, S2, S1, S0, V458, V458, V463, V464, V462, V462, V463, V464]

================================

Block 0x5af
[0x5af:0x5bc]
---
Predecessors: [0x589, 0x5bd, 0x712]
Successors: [0x5bd, 0x5cf]
---
0x5af JUMPDEST
0x5b0 DUP1
0x5b1 MLOAD
0x5b2 DUP3
0x5b3 MSTORE
0x5b4 PUSH1 0x20
0x5b6 DUP4
0x5b7 GT
0x5b8 ISZERO
0x5b9 PUSH2 0x5cf
0x5bc JUMPI
---
0x5af: JUMPDEST 
0x5b1: V467 = M[S0]
0x5b3: M[S1] = V467
0x5b4: V468 = 0x20
0x5b7: V469 = GT S2 0x20
0x5b8: V470 = ISZERO V469
0x5b9: V471 = 0x5cf
0x5bc: JUMPI 0x5cf V470
---
Entry stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5bd
[0x5bd:0x5ce]
---
Predecessors: [0x5af]
Successors: [0x5af]
---
0x5bd PUSH1 0x1f
0x5bf NOT
0x5c0 SWAP1
0x5c1 SWAP3
0x5c2 ADD
0x5c3 SWAP2
0x5c4 PUSH1 0x20
0x5c6 SWAP2
0x5c7 DUP3
0x5c8 ADD
0x5c9 SWAP2
0x5ca ADD
0x5cb PUSH2 0x5af
0x5ce JUMP
---
0x5bd: V472 = 0x1f
0x5bf: V473 = NOT 0x1f
0x5c2: V474 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x5c4: V475 = 0x20
0x5c8: V476 = ADD 0x20 S1
0x5ca: V477 = ADD 0x20 S0
0x5cb: V478 = 0x5af
0x5ce: JUMP 0x5af
---
Entry stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V474, V476, V477]
Exit stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, V474, V476, V477]

================================

Block 0x5cf
[0x5cf:0x5e1]
---
Predecessors: [0x589, 0x5af, 0x6de, 0x704]
Successors: [0x5e2, 0x5fb]
---
0x5cf JUMPDEST
0x5d0 POP
0x5d1 POP
0x5d2 POP
0x5d3 SWAP1
0x5d4 POP
0x5d5 SWAP1
0x5d6 DUP2
0x5d7 ADD
0x5d8 SWAP1
0x5d9 PUSH1 0x1f
0x5db AND
0x5dc DUP1
0x5dd ISZERO
0x5de PUSH2 0x5fb
0x5e1 JUMPI
---
0x5cf: JUMPDEST 
0x5d7: V479 = ADD S3 S5
0x5d9: V480 = 0x1f
0x5db: V481 = AND 0x1f S3
0x5dd: V482 = ISZERO V481
0x5de: V483 = 0x5fb
0x5e1: JUMPI 0x5fb V482
---
Entry stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V479, V481]
Exit stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, S7, S6, V479, V481]

================================

Block 0x5e2
[0x5e2:0x5fa]
---
Predecessors: [0x5cf]
Successors: [0x5fb]
---
0x5e2 DUP1
0x5e3 DUP3
0x5e4 SUB
0x5e5 DUP1
0x5e6 MLOAD
0x5e7 PUSH1 0x1
0x5e9 DUP4
0x5ea PUSH1 0x20
0x5ec SUB
0x5ed PUSH2 0x100
0x5f0 EXP
0x5f1 SUB
0x5f2 NOT
0x5f3 AND
0x5f4 DUP2
0x5f5 MSTORE
0x5f6 PUSH1 0x20
0x5f8 ADD
0x5f9 SWAP2
0x5fa POP
---
0x5e4: V484 = SUB V479 V481
0x5e6: V485 = M[V484]
0x5e7: V486 = 0x1
0x5ea: V487 = 0x20
0x5ec: V488 = SUB 0x20 V481
0x5ed: V489 = 0x100
0x5f0: V490 = EXP 0x100 V488
0x5f1: V491 = SUB V490 0x1
0x5f2: V492 = NOT V491
0x5f3: V493 = AND V492 V485
0x5f5: M[V484] = V493
0x5f6: V494 = 0x20
0x5f8: V495 = ADD 0x20 V484
---
Entry stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, S3, S2, V479, V481]
Stack pops: 2
Stack additions: [V495, S0]
Exit stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, S3, S2, V495, V481]

================================

Block 0x5fb
[0x5fb:0x608]
---
Predecessors: [0x5cf, 0x5e2, 0x724]
Successors: []
---
0x5fb JUMPDEST
0x5fc POP
0x5fd SWAP3
0x5fe POP
0x5ff POP
0x600 POP
0x601 PUSH1 0x40
0x603 MLOAD
0x604 DUP1
0x605 SWAP2
0x606 SUB
0x607 SWAP1
0x608 RETURN
---
0x5fb: JUMPDEST 
0x601: V496 = 0x40
0x603: V497 = M[0x40]
0x606: V498 = SUB S1 V497
0x608: RETURN V497 V498
---
Entry stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x3fb, S9, V113, S7, S6, S5]

================================

Block 0x609
[0x609:0x60f]
---
Predecessors: [0xab]
Successors: [0x610, 0x611]
---
0x609 JUMPDEST
0x60a CALLVALUE
0x60b ISZERO
0x60c PUSH2 0x611
0x60f JUMPI
---
0x609: JUMPDEST 
0x60a: V499 = CALLVALUE
0x60b: V500 = ISZERO V499
0x60c: V501 = 0x611
0x60f: JUMPI 0x611 V500
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x610
[0x610:0x610]
---
Predecessors: [0x609]
Successors: []
---
0x610 INVALID
---
0x610: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x611
[0x611:0x618]
---
Predecessors: [0x609]
Successors: [0x9aa]
---
0x611 JUMPDEST
0x612 PUSH2 0x619
0x615 PUSH2 0x9aa
0x618 JUMP
---
0x611: JUMPDEST 
0x612: V502 = 0x619
0x615: V503 = 0x9aa
0x618: JUMP 0x9aa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x619]
Exit stack: [V10, 0x619]

================================

Block 0x619
[0x619:0x638]
---
Predecessors: [0x9e1]
Successors: []
---
0x619 JUMPDEST
0x61a PUSH1 0x40
0x61c DUP1
0x61d MLOAD
0x61e PUSH1 0xff
0x620 SWAP4
0x621 DUP5
0x622 AND
0x623 DUP2
0x624 MSTORE
0x625 SWAP2
0x626 SWAP1
0x627 SWAP3
0x628 AND
0x629 PUSH1 0x20
0x62b DUP3
0x62c ADD
0x62d MSTORE
0x62e DUP2
0x62f MLOAD
0x630 SWAP1
0x631 DUP2
0x632 SWAP1
0x633 SUB
0x634 SWAP1
0x635 SWAP2
0x636 ADD
0x637 SWAP1
0x638 RETURN
---
0x619: JUMPDEST 
0x61a: V504 = 0x40
0x61d: V505 = M[0x40]
0x61e: V506 = 0xff
0x622: V507 = AND 0xff S1
0x624: M[V505] = V507
0x628: V508 = AND 0xff S0
0x629: V509 = 0x20
0x62c: V510 = ADD V505 0x20
0x62d: M[V510] = V508
0x62f: V511 = M[0x40]
0x633: V512 = SUB V505 V511
0x636: V513 = ADD 0x40 V512
0x638: RETURN V511 V513
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x639
[0x639:0x63f]
---
Predecessors: [0xb6]
Successors: [0x640, 0x641]
---
0x639 JUMPDEST
0x63a CALLVALUE
0x63b ISZERO
0x63c PUSH2 0x641
0x63f JUMPI
---
0x639: JUMPDEST 
0x63a: V514 = CALLVALUE
0x63b: V515 = ISZERO V514
0x63c: V516 = 0x641
0x63f: JUMPI 0x641 V515
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x640
[0x640:0x640]
---
Predecessors: [0x639]
Successors: []
---
0x640 INVALID
---
0x640: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x641
[0x641:0x648]
---
Predecessors: [0x639]
Successors: [0x9e6]
---
0x641 JUMPDEST
0x642 PUSH2 0x419
0x645 PUSH2 0x9e6
0x648 JUMP
---
0x641: JUMPDEST 
0x642: V517 = 0x419
0x645: V518 = 0x9e6
0x648: JUMP 0x9e6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x419]
Exit stack: [V10, 0x419]

================================

Block 0x649
[0x649:0x65a]
---
Predecessors: []
Successors: []
---
0x649 JUMPDEST
0x64a PUSH1 0x40
0x64c DUP1
0x64d MLOAD
0x64e SWAP2
0x64f DUP3
0x650 MSTORE
0x651 MLOAD
0x652 SWAP1
0x653 DUP2
0x654 SWAP1
0x655 SUB
0x656 PUSH1 0x20
0x658 ADD
0x659 SWAP1
0x65a RETURN
---
0x649: JUMPDEST 
0x64a: V519 = 0x40
0x64d: V520 = M[0x40]
0x650: M[V520] = S0
0x651: V521 = M[0x40]
0x655: V522 = SUB V520 V521
0x656: V523 = 0x20
0x658: V524 = ADD 0x20 V522
0x65a: RETURN V521 V524
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x65b
[0x65b:0x661]
---
Predecessors: [0xc1]
Successors: [0x662, 0x663]
---
0x65b JUMPDEST
0x65c CALLVALUE
0x65d ISZERO
0x65e PUSH2 0x663
0x661 JUMPI
---
0x65b: JUMPDEST 
0x65c: V525 = CALLVALUE
0x65d: V526 = ISZERO V525
0x65e: V527 = 0x663
0x661: JUMPI 0x663 V526
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x662
[0x662:0x662]
---
Predecessors: [0x65b]
Successors: []
---
0x662 INVALID
---
0x662: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x663
[0x663:0x66a]
---
Predecessors: [0x65b]
Successors: [0x9ec]
---
0x663 JUMPDEST
0x664 PUSH2 0x419
0x667 PUSH2 0x9ec
0x66a JUMP
---
0x663: JUMPDEST 
0x664: V528 = 0x419
0x667: V529 = 0x9ec
0x66a: JUMP 0x9ec
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x419]
Exit stack: [V10, 0x419]

================================

Block 0x66b
[0x66b:0x67c]
---
Predecessors: []
Successors: []
---
0x66b JUMPDEST
0x66c PUSH1 0x40
0x66e DUP1
0x66f MLOAD
0x670 SWAP2
0x671 DUP3
0x672 MSTORE
0x673 MLOAD
0x674 SWAP1
0x675 DUP2
0x676 SWAP1
0x677 SUB
0x678 PUSH1 0x20
0x67a ADD
0x67b SWAP1
0x67c RETURN
---
0x66b: JUMPDEST 
0x66c: V530 = 0x40
0x66f: V531 = M[0x40]
0x672: M[V531] = S0
0x673: V532 = M[0x40]
0x677: V533 = SUB V531 V532
0x678: V534 = 0x20
0x67a: V535 = ADD 0x20 V533
0x67c: RETURN V532 V535
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x67d
[0x67d:0x683]
---
Predecessors: [0xcc]
Successors: [0x684, 0x685]
---
0x67d JUMPDEST
0x67e CALLVALUE
0x67f ISZERO
0x680 PUSH2 0x685
0x683 JUMPI
---
0x67d: JUMPDEST 
0x67e: V536 = CALLVALUE
0x67f: V537 = ISZERO V536
0x680: V538 = 0x685
0x683: JUMPI 0x685 V537
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x684
[0x684:0x684]
---
Predecessors: [0x67d]
Successors: []
---
0x684 INVALID
---
0x684: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x685
[0x685:0x68f]
---
Predecessors: [0x67d]
Successors: [0x9f3]
---
0x685 JUMPDEST
0x686 PUSH2 0x4ce
0x689 PUSH1 0x4
0x68b CALLDATALOAD
0x68c PUSH2 0x9f3
0x68f JUMP
---
0x685: JUMPDEST 
0x686: V539 = 0x4ce
0x689: V540 = 0x4
0x68b: V541 = CALLDATALOAD 0x4
0x68c: V542 = 0x9f3
0x68f: JUMP 0x9f3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4ce, V541]
Exit stack: [V10, 0x4ce, V541]

================================

Block 0x690
[0x690:0x6ab]
---
Predecessors: []
Successors: []
---
0x690 JUMPDEST
0x691 PUSH1 0x40
0x693 DUP1
0x694 MLOAD
0x695 PUSH1 0x1
0x697 PUSH1 0xa0
0x699 PUSH1 0x2
0x69b EXP
0x69c SUB
0x69d SWAP1
0x69e SWAP3
0x69f AND
0x6a0 DUP3
0x6a1 MSTORE
0x6a2 MLOAD
0x6a3 SWAP1
0x6a4 DUP2
0x6a5 SWAP1
0x6a6 SUB
0x6a7 PUSH1 0x20
0x6a9 ADD
0x6aa SWAP1
0x6ab RETURN
---
0x690: JUMPDEST 
0x691: V543 = 0x40
0x694: V544 = M[0x40]
0x695: V545 = 0x1
0x697: V546 = 0xa0
0x699: V547 = 0x2
0x69b: V548 = EXP 0x2 0xa0
0x69c: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69f: V550 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x6a1: M[V544] = V550
0x6a2: V551 = M[0x40]
0x6a6: V552 = SUB V544 V551
0x6a7: V553 = 0x20
0x6a9: V554 = ADD 0x20 V552
0x6ab: RETURN V551 V554
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6ac
[0x6ac:0x6b2]
---
Predecessors: [0xd7]
Successors: [0x6b3, 0x6b4]
---
0x6ac JUMPDEST
0x6ad CALLVALUE
0x6ae ISZERO
0x6af PUSH2 0x6b4
0x6b2 JUMPI
---
0x6ac: JUMPDEST 
0x6ad: V555 = CALLVALUE
0x6ae: V556 = ISZERO V555
0x6af: V557 = 0x6b4
0x6b2: JUMPI 0x6b4 V556
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b3
[0x6b3:0x6b3]
---
Predecessors: [0x6ac]
Successors: []
---
0x6b3 INVALID
---
0x6b3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b4
[0x6b4:0x6bb]
---
Predecessors: [0x6ac]
Successors: [0xa25]
---
0x6b4 JUMPDEST
0x6b5 PUSH2 0x419
0x6b8 PUSH2 0xa25
0x6bb JUMP
---
0x6b4: JUMPDEST 
0x6b5: V558 = 0x419
0x6b8: V559 = 0xa25
0x6bb: JUMP 0xa25
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x419]
Exit stack: [V10, 0x419]

================================

Block 0x6bc
[0x6bc:0x6cd]
---
Predecessors: []
Successors: []
---
0x6bc JUMPDEST
0x6bd PUSH1 0x40
0x6bf DUP1
0x6c0 MLOAD
0x6c1 SWAP2
0x6c2 DUP3
0x6c3 MSTORE
0x6c4 MLOAD
0x6c5 SWAP1
0x6c6 DUP2
0x6c7 SWAP1
0x6c8 SUB
0x6c9 PUSH1 0x20
0x6cb ADD
0x6cc SWAP1
0x6cd RETURN
---
0x6bc: JUMPDEST 
0x6bd: V560 = 0x40
0x6c0: V561 = M[0x40]
0x6c3: M[V561] = S0
0x6c4: V562 = M[0x40]
0x6c8: V563 = SUB V561 V562
0x6c9: V564 = 0x20
0x6cb: V565 = ADD 0x20 V563
0x6cd: RETURN V562 V565
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6ce
[0x6ce:0x6d4]
---
Predecessors: [0xe2]
Successors: [0x6d5, 0x6d6]
---
0x6ce JUMPDEST
0x6cf CALLVALUE
0x6d0 ISZERO
0x6d1 PUSH2 0x6d6
0x6d4 JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V566 = CALLVALUE
0x6d0: V567 = ISZERO V566
0x6d1: V568 = 0x6d6
0x6d4: JUMPI 0x6d6 V567
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d5
[0x6d5:0x6d5]
---
Predecessors: [0x6ce]
Successors: []
---
0x6d5 INVALID
---
0x6d5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d6
[0x6d6:0x6dd]
---
Predecessors: [0x6ce]
Successors: [0xa2b]
---
0x6d6 JUMPDEST
0x6d7 PUSH2 0x589
0x6da PUSH2 0xa2b
0x6dd JUMP
---
0x6d6: JUMPDEST 
0x6d7: V569 = 0x589
0x6da: V570 = 0xa2b
0x6dd: JUMP 0xa2b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x589]
Exit stack: [V10, 0x589]

================================

Block 0x6de
[0x6de:0x703]
---
Predecessors: []
Successors: [0x5cf, 0x704]
---
0x6de JUMPDEST
0x6df PUSH1 0x40
0x6e1 DUP1
0x6e2 MLOAD
0x6e3 PUSH1 0x20
0x6e5 DUP1
0x6e6 DUP3
0x6e7 MSTORE
0x6e8 DUP4
0x6e9 MLOAD
0x6ea DUP2
0x6eb DUP4
0x6ec ADD
0x6ed MSTORE
0x6ee DUP4
0x6ef MLOAD
0x6f0 SWAP2
0x6f1 SWAP3
0x6f2 DUP4
0x6f3 SWAP3
0x6f4 SWAP1
0x6f5 DUP4
0x6f6 ADD
0x6f7 SWAP2
0x6f8 DUP6
0x6f9 ADD
0x6fa SWAP1
0x6fb DUP1
0x6fc DUP4
0x6fd DUP4
0x6fe DUP3
0x6ff ISZERO
0x700 PUSH2 0x5cf
0x703 JUMPI
---
0x6de: JUMPDEST 
0x6df: V571 = 0x40
0x6e2: V572 = M[0x40]
0x6e3: V573 = 0x20
0x6e7: M[V572] = 0x20
0x6e9: V574 = M[S0]
0x6ec: V575 = ADD V572 0x20
0x6ed: M[V575] = V574
0x6ef: V576 = M[S0]
0x6f6: V577 = ADD V572 0x40
0x6f9: V578 = ADD S0 0x20
0x6ff: V579 = ISZERO V576
0x700: V580 = 0x5cf
0x703: JUMPI 0x5cf V579
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V572, V572, V577, V578, V576, V576, V577, V578]
Exit stack: [S0, V572, V572, V577, V578, V576, V576, V577, V578]

================================

Block 0x704
[0x704:0x711]
---
Predecessors: [0x6de]
Successors: [0x5cf, 0x712]
---
0x704 JUMPDEST
0x705 DUP1
0x706 MLOAD
0x707 DUP3
0x708 MSTORE
0x709 PUSH1 0x20
0x70b DUP4
0x70c GT
0x70d ISZERO
0x70e PUSH2 0x5cf
0x711 JUMPI
---
0x704: JUMPDEST 
0x706: V581 = M[V578]
0x708: M[V577] = V581
0x709: V582 = 0x20
0x70c: V583 = GT V576 0x20
0x70d: V584 = ISZERO V583
0x70e: V585 = 0x5cf
0x711: JUMPI 0x5cf V584
---
Entry stack: [S8, V572, V572, V577, V578, V576, V576, V577, V578]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V572, V572, V577, V578, V576, V576, V577, V578]

================================

Block 0x712
[0x712:0x723]
---
Predecessors: [0x704]
Successors: [0x5af]
---
0x712 PUSH1 0x1f
0x714 NOT
0x715 SWAP1
0x716 SWAP3
0x717 ADD
0x718 SWAP2
0x719 PUSH1 0x20
0x71b SWAP2
0x71c DUP3
0x71d ADD
0x71e SWAP2
0x71f ADD
0x720 PUSH2 0x5af
0x723 JUMP
---
0x712: V586 = 0x1f
0x714: V587 = NOT 0x1f
0x717: V588 = ADD V576 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x719: V589 = 0x20
0x71d: V590 = ADD 0x20 V577
0x71f: V591 = ADD 0x20 V578
0x720: V592 = 0x5af
0x723: JUMP 0x5af
---
Entry stack: [S8, V572, V572, V577, V578, V576, V576, V577, V578]
Stack pops: 3
Stack additions: [V588, V590, V591]
Exit stack: [S8, V572, V572, V577, V578, V576, V588, V590, V591]

================================

Block 0x724
[0x724:0x736]
---
Predecessors: []
Successors: [0x5fb, 0x737]
---
0x724 JUMPDEST
0x725 POP
0x726 POP
0x727 POP
0x728 SWAP1
0x729 POP
0x72a SWAP1
0x72b DUP2
0x72c ADD
0x72d SWAP1
0x72e PUSH1 0x1f
0x730 AND
0x731 DUP1
0x732 ISZERO
0x733 PUSH2 0x5fb
0x736 JUMPI
---
0x724: JUMPDEST 
0x72c: V593 = ADD S3 S5
0x72e: V594 = 0x1f
0x730: V595 = AND 0x1f S3
0x732: V596 = ISZERO V595
0x733: V597 = 0x5fb
0x736: JUMPI 0x5fb V596
---
Entry stack: []
Stack pops: 6
Stack additions: [V593, V595]
Exit stack: [V593, V595]

================================

Block 0x737
[0x737:0x74f]
---
Predecessors: [0x724]
Successors: [0x750]
---
0x737 DUP1
0x738 DUP3
0x739 SUB
0x73a DUP1
0x73b MLOAD
0x73c PUSH1 0x1
0x73e DUP4
0x73f PUSH1 0x20
0x741 SUB
0x742 PUSH2 0x100
0x745 EXP
0x746 SUB
0x747 NOT
0x748 AND
0x749 DUP2
0x74a MSTORE
0x74b PUSH1 0x20
0x74d ADD
0x74e SWAP2
0x74f POP
---
0x739: V598 = SUB V593 V595
0x73b: V599 = M[V598]
0x73c: V600 = 0x1
0x73f: V601 = 0x20
0x741: V602 = SUB 0x20 V595
0x742: V603 = 0x100
0x745: V604 = EXP 0x100 V602
0x746: V605 = SUB V604 0x1
0x747: V606 = NOT V605
0x748: V607 = AND V606 V599
0x74a: M[V598] = V607
0x74b: V608 = 0x20
0x74d: V609 = ADD 0x20 V598
---
Entry stack: [V593, V595]
Stack pops: 2
Stack additions: [V609, S0]
Exit stack: [V609, V595]

================================

Block 0x750
[0x750:0x75d]
---
Predecessors: [0x737]
Successors: []
---
0x750 JUMPDEST
0x751 POP
0x752 SWAP3
0x753 POP
0x754 POP
0x755 POP
0x756 PUSH1 0x40
0x758 MLOAD
0x759 DUP1
0x75a SWAP2
0x75b SUB
0x75c SWAP1
0x75d RETURN
---
0x750: JUMPDEST 
0x756: V610 = 0x40
0x758: V611 = M[0x40]
0x75b: V612 = SUB V609 V611
0x75d: RETURN V611 V612
---
Entry stack: [V609, V595]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x75e
[0x75e:0x768]
---
Predecessors: [0xf8, 0x8f7]
Successors: [0x769, 0x76f]
---
0x75e JUMPDEST
0x75f PUSH1 0x0
0x761 DUP1
0x762 SLOAD
0x763 ISZERO
0x764 DUP1
0x765 PUSH2 0x76f
0x768 JUMPI
---
0x75e: JUMPDEST 
0x75f: V613 = 0x0
0x762: V614 = S[0x0]
0x763: V615 = ISZERO V614
0x765: V616 = 0x76f
0x768: JUMPI 0x76f V615
---
Entry stack: [V10, 0x3fb, S4, {0x0, 0x589}, S2, {0x1, 0x3}, {0x100, 0x901}]
Stack pops: 0
Stack additions: [0x0, V615]
Exit stack: [V10, 0x3fb, S4, {0x0, 0x589}, S2, {0x1, 0x3}, {0x100, 0x901}, 0x0, V615]

================================

Block 0x769
[0x769:0x76e]
---
Predecessors: [0x75e]
Successors: [0x76f]
---
0x769 POP
0x76a PUSH1 0x0
0x76c SLOAD
0x76d NUMBER
0x76e LT
---
0x76a: V617 = 0x0
0x76c: V618 = S[0x0]
0x76d: V619 = NUMBER
0x76e: V620 = LT V619 V618
---
Entry stack: [V10, 0x3fb, S6, {0x0, 0x589}, S4, {0x1, 0x3}, {0x100, 0x901}, 0x0, V615]
Stack pops: 1
Stack additions: [V620]
Exit stack: [V10, 0x3fb, S6, {0x0, 0x589}, S4, {0x1, 0x3}, {0x100, 0x901}, 0x0, V620]

================================

Block 0x76f
[0x76f:0x774]
---
Predecessors: [0x75e, 0x769]
Successors: [0x775, 0x77c]
---
0x76f JUMPDEST
0x770 ISZERO
0x771 PUSH2 0x77c
0x774 JUMPI
---
0x76f: JUMPDEST 
0x770: V621 = ISZERO S0
0x771: V622 = 0x77c
0x774: JUMPI 0x77c V621
---
Entry stack: [V10, 0x3fb, S6, {0x0, 0x589}, S4, {0x1, 0x3}, {0x100, 0x901}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fb, S6, {0x0, 0x589}, S4, {0x1, 0x3}, {0x100, 0x901}, 0x0]

================================

Block 0x775
[0x775:0x77b]
---
Predecessors: [0x76f]
Successors: [0x791]
---
0x775 POP
0x776 PUSH1 0x0
0x778 PUSH2 0x791
0x77b JUMP
---
0x776: V623 = 0x0
0x778: V624 = 0x791
0x77b: JUMP 0x791
---
Entry stack: [V10, 0x3fb, S5, {0x0, 0x589}, S3, {0x1, 0x3}, {0x100, 0x901}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x3fb, S5, {0x0, 0x589}, S3, {0x1, 0x3}, {0x100, 0x901}, 0x0]

================================

Block 0x77c
[0x77c:0x785]
---
Predecessors: [0x76f]
Successors: [0x786, 0x78d]
---
0x77c JUMPDEST
0x77d PUSH1 0x1
0x77f SLOAD
0x780 TIMESTAMP
0x781 GT
0x782 PUSH2 0x78d
0x785 JUMPI
---
0x77c: JUMPDEST 
0x77d: V625 = 0x1
0x77f: V626 = S[0x1]
0x780: V627 = TIMESTAMP
0x781: V628 = GT V627 V626
0x782: V629 = 0x78d
0x785: JUMPI 0x78d V628
---
Entry stack: [V10, 0x3fb, S5, {0x0, 0x589}, S3, {0x1, 0x3}, {0x100, 0x901}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S5, {0x0, 0x589}, S3, {0x1, 0x3}, {0x100, 0x901}, 0x0]

================================

Block 0x786
[0x786:0x78c]
---
Predecessors: [0x77c]
Successors: [0x791]
---
0x786 POP
0x787 PUSH1 0x1
0x789 PUSH2 0x791
0x78c JUMP
---
0x787: V630 = 0x1
0x789: V631 = 0x791
0x78c: JUMP 0x791
---
Entry stack: [V10, 0x3fb, S5, {0x0, 0x589}, S3, {0x1, 0x3}, {0x100, 0x901}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x3fb, S5, {0x0, 0x589}, S3, {0x1, 0x3}, {0x100, 0x901}, 0x1]

================================

Block 0x78d
[0x78d:0x790]
---
Predecessors: [0x77c]
Successors: [0x791]
---
0x78d JUMPDEST
0x78e POP
0x78f PUSH1 0x2
---
0x78d: JUMPDEST 
0x78f: V632 = 0x2
---
Entry stack: [V10, 0x3fb, S5, {0x0, 0x589}, S3, {0x1, 0x3}, {0x100, 0x901}, 0x0]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V10, 0x3fb, S5, {0x0, 0x589}, S3, {0x1, 0x3}, {0x100, 0x901}, 0x2]

================================

Block 0x791
[0x791:0x791]
---
Predecessors: [0x775, 0x786, 0x78d, 0xad2]
Successors: [0x792]
---
0x791 JUMPDEST
---
0x791: JUMPDEST 
---
Entry stack: [V10, 0x3fb, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x589}, S3, S2, {0x100, 0x3f5, 0x901}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x589}, S3, S2, {0x100, 0x3f5, 0x901}, S0]

================================

Block 0x792
[0x792:0x792]
---
Predecessors: [0x791]
Successors: [0x793]
---
0x792 JUMPDEST
---
0x792: JUMPDEST 
---
Entry stack: [V10, 0x3fb, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x589}, S3, S2, {0x100, 0x3f5, 0x901}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x589}, S3, S2, {0x100, 0x3f5, 0x901}, S0]

================================

Block 0x793
[0x793:0x795]
---
Predecessors: [0x792]
Successors: [0x100, 0x3f5, 0x901]
---
0x793 JUMPDEST
0x794 SWAP1
0x795 JUMP
---
0x793: JUMPDEST 
0x795: JUMP {0x100, 0x3f5, 0x901}
---
Entry stack: [V10, 0x3fb, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x589}, S3, S2, {0x100, 0x3f5, 0x901}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x3fb, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x589}, S3, S2, S0]

================================

Block 0x796
[0x796:0x7be]
---
Predecessors: [0x273, 0x314, 0x4f2]
Successors: [0x7bf, 0x7c7]
---
0x796 JUMPDEST
0x797 PUSH1 0x1
0x799 PUSH1 0xa0
0x79b PUSH1 0x2
0x79d EXP
0x79e SUB
0x79f DUP2
0x7a0 AND
0x7a1 PUSH1 0x0
0x7a3 SWAP1
0x7a4 DUP2
0x7a5 MSTORE
0x7a6 PUSH1 0x6
0x7a8 PUSH1 0x20
0x7aa MSTORE
0x7ab PUSH1 0x40
0x7ad DUP2
0x7ae SHA3
0x7af SLOAD
0x7b0 PUSH7 0x2386f26fc10000
0x7b8 DUP2
0x7b9 LT
0x7ba ISZERO
0x7bb PUSH2 0x7c7
0x7be JUMPI
---
0x796: JUMPDEST 
0x797: V633 = 0x1
0x799: V634 = 0xa0
0x79b: V635 = 0x2
0x79d: V636 = EXP 0x2 0xa0
0x79e: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a0: V638 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7a1: V639 = 0x0
0x7a5: M[0x0] = V638
0x7a6: V640 = 0x6
0x7a8: V641 = 0x20
0x7aa: M[0x20] = 0x6
0x7ab: V642 = 0x40
0x7ae: V643 = SHA3 0x0 0x40
0x7af: V644 = S[V643]
0x7b0: V645 = 0x2386f26fc10000
0x7b9: V646 = LT V644 0x2386f26fc10000
0x7ba: V647 = ISZERO V646
0x7bb: V648 = 0x7c7
0x7be: JUMPI 0x7c7 V647
---
Entry stack: [V10, 0x3fb, S11, V113, S9, S8, S7, S6, V113, S4, 0x64, S2, {0x27f, 0x33f, 0x419}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V644]
Exit stack: [V10, 0x3fb, S11, V113, S9, S8, S7, S6, V113, S4, 0x64, S2, {0x27f, 0x33f, 0x419}, S0, 0x0, V644]

================================

Block 0x7bf
[0x7bf:0x7c6]
---
Predecessors: [0x796]
Successors: [0x7f1]
---
0x7bf PUSH1 0x0
0x7c1 SWAP2
0x7c2 POP
0x7c3 PUSH2 0x7f1
0x7c6 JUMP
---
0x7bf: V649 = 0x0
0x7c3: V650 = 0x7f1
0x7c6: JUMP 0x7f1
---
Entry stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, 0x0, V644]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, 0x0, V644]

================================

Block 0x7c7
[0x7c7:0x7d6]
---
Predecessors: [0x796]
Successors: [0x7d7, 0x7df]
---
0x7c7 JUMPDEST
0x7c8 PUSH8 0xde0b6b3a7640000
0x7d1 DUP2
0x7d2 LT
0x7d3 PUSH2 0x7df
0x7d6 JUMPI
---
0x7c7: JUMPDEST 
0x7c8: V651 = 0xde0b6b3a7640000
0x7d2: V652 = LT V644 0xde0b6b3a7640000
0x7d3: V653 = 0x7df
0x7d6: JUMPI 0x7df V652
---
Entry stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, 0x0, V644]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, 0x0, V644]

================================

Block 0x7d7
[0x7d7:0x7de]
---
Predecessors: [0x7c7]
Successors: [0x7f1]
---
0x7d7 PUSH1 0x64
0x7d9 SWAP2
0x7da POP
0x7db PUSH2 0x7f1
0x7de JUMP
---
0x7d7: V654 = 0x64
0x7db: V655 = 0x7f1
0x7de: JUMP 0x7f1
---
Entry stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, 0x0, V644]
Stack pops: 2
Stack additions: [0x64, S0]
Exit stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, 0x64, V644]

================================

Block 0x7df
[0x7df:0x7ec]
---
Predecessors: [0x7c7]
Successors: [0x7ed]
---
0x7df JUMPDEST
0x7e0 PUSH8 0xde0b6b3a7640000
0x7e9 PUSH1 0x64
0x7eb DUP3
0x7ec MUL
---
0x7df: JUMPDEST 
0x7e0: V656 = 0xde0b6b3a7640000
0x7e9: V657 = 0x64
0x7ec: V658 = MUL V644 0x64
---
Entry stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, 0x0, V644]
Stack pops: 1
Stack additions: [S0, 0xde0b6b3a7640000, V658]
Exit stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, 0x0, V644, 0xde0b6b3a7640000, V658]

================================

Block 0x7ed
[0x7ed:0x7f0]
---
Predecessors: [0x7df]
Successors: [0x7f1]
---
0x7ed JUMPDEST
0x7ee DIV
0x7ef SWAP2
0x7f0 POP
---
0x7ed: JUMPDEST 
0x7ee: V659 = DIV V658 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3fb, S15, V113, S13, S12, S11, S10, V113, S8, 0x64, S6, {0x27f, 0x33f, 0x419}, S4, 0x0, V644, 0xde0b6b3a7640000, V658]
Stack pops: 4
Stack additions: [V659, S2]
Exit stack: [V10, 0x3fb, S15, V113, S13, S12, S11, S10, V113, S8, 0x64, S6, {0x27f, 0x33f, 0x419}, S4, V659, V644]

================================

Block 0x7f1
[0x7f1:0x7f1]
---
Predecessors: [0x7bf, 0x7d7, 0x7ed]
Successors: [0x7f2]
---
0x7f1 JUMPDEST
---
0x7f1: JUMPDEST 
---
Entry stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, S1, S0]

================================

Block 0x7f2
[0x7f2:0x7f2]
---
Predecessors: [0x7f1]
Successors: [0x7f3]
---
0x7f2 JUMPDEST
---
0x7f2: JUMPDEST 
---
Entry stack: [V10, 0x3fb, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, S1, S0]

================================

Block 0x7f3
[0x7f3:0x7f8]
---
Predecessors: [0x7f2]
Successors: [0x27f, 0x33f, 0x419]
---
0x7f3 JUMPDEST
0x7f4 POP
0x7f5 SWAP2
0x7f6 SWAP1
0x7f7 POP
0x7f8 JUMP
---
0x7f3: JUMPDEST 
0x7f8: JUMP {0x27f, 0x33f, 0x419}
---
Entry stack: [V10, 0x3fb, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x419}, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, 0x3fb, S8, V113, S6, 0x64, S4, S1]

================================

Block 0x7f9
[0x7f9:0x80a]
---
Predecessors: [0x405]
Successors: [0x419]
---
0x7f9 JUMPDEST
0x7fa PUSH1 0x6
0x7fc PUSH1 0x20
0x7fe MSTORE
0x7ff PUSH1 0x0
0x801 SWAP1
0x802 DUP2
0x803 MSTORE
0x804 PUSH1 0x40
0x806 SWAP1
0x807 SHA3
0x808 SLOAD
0x809 DUP2
0x80a JUMP
---
0x7f9: JUMPDEST 
0x7fa: V660 = 0x6
0x7fc: V661 = 0x20
0x7fe: M[0x20] = 0x6
0x7ff: V662 = 0x0
0x803: M[0x0] = V323
0x804: V663 = 0x40
0x807: V664 = SHA3 0x0 0x40
0x808: V665 = S[V664]
0x80a: JUMP 0x419
---
Entry stack: [V10, 0x419, V323]
Stack pops: 2
Stack additions: [S1, V665]
Exit stack: [V10, 0x419, V665]

================================

Block 0x80b
[0x80b:0x821]
---
Predecessors: [0x433]
Successors: [0x822, 0x827]
---
0x80b JUMPDEST
0x80c PUSH1 0x7
0x80e SLOAD
0x80f CALLER
0x810 PUSH1 0x1
0x812 PUSH1 0xa0
0x814 PUSH1 0x2
0x816 EXP
0x817 SUB
0x818 SWAP1
0x819 DUP2
0x81a AND
0x81b SWAP2
0x81c AND
0x81d EQ
0x81e PUSH2 0x827
0x821 JUMPI
---
0x80b: JUMPDEST 
0x80c: V666 = 0x7
0x80e: V667 = S[0x7]
0x80f: V668 = CALLER
0x810: V669 = 0x1
0x812: V670 = 0xa0
0x814: V671 = 0x2
0x816: V672 = EXP 0x2 0xa0
0x817: V673 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81a: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V668
0x81c: V675 = AND V667 0xffffffffffffffffffffffffffffffffffffffff
0x81d: V676 = EQ V675 V674
0x81e: V677 = 0x827
0x821: JUMPI 0x827 V676
---
Entry stack: [V10, 0x3fb, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, V342]

================================

Block 0x822
[0x822:0x826]
---
Predecessors: [0x80b]
Successors: []
---
0x822 PUSH1 0x0
0x824 PUSH1 0x0
0x826 REVERT
---
0x822: V678 = 0x0
0x824: V679 = 0x0
0x826: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3fb, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, V342]

================================

Block 0x827
[0x827:0x84f]
---
Predecessors: [0x80b]
Successors: [0x850]
---
0x827 JUMPDEST
0x828 PUSH1 0x7
0x82a DUP1
0x82b SLOAD
0x82c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x841 NOT
0x842 AND
0x843 PUSH1 0x1
0x845 PUSH1 0xa0
0x847 PUSH1 0x2
0x849 EXP
0x84a SUB
0x84b DUP4
0x84c AND
0x84d OR
0x84e SWAP1
0x84f SSTORE
---
0x827: JUMPDEST 
0x828: V680 = 0x7
0x82b: V681 = S[0x7]
0x82c: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0x841: V683 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x842: V684 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V681
0x843: V685 = 0x1
0x845: V686 = 0xa0
0x847: V687 = 0x2
0x849: V688 = EXP 0x2 0xa0
0x84a: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84c: V690 = AND V342 0xffffffffffffffffffffffffffffffffffffffff
0x84d: V691 = OR V690 V684
0x84f: S[0x7] = V691
---
Entry stack: [V10, 0x3fb, V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fb, V342]

================================

Block 0x850
[0x850:0x850]
---
Predecessors: [0x827]
Successors: [0x851]
---
0x850 JUMPDEST
---
0x850: JUMPDEST 
---
Entry stack: [V10, 0x3fb, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, V342]

================================

Block 0x851
[0x851:0x853]
---
Predecessors: [0x850]
Successors: [0x3fb]
---
0x851 JUMPDEST
0x852 POP
0x853 JUMP
---
0x851: JUMPDEST 
0x853: JUMP 0x3fb
---
Entry stack: [V10, 0x3fb, V342]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x854
[0x854:0x865]
---
Predecessors: [0x451]
Successors: [0x459]
---
0x854 JUMPDEST
0x855 PUSH1 0x9
0x857 SLOAD
0x858 PUSH5 0x100000000
0x85e SWAP1
0x85f DIV
0x860 PUSH2 0xffff
0x863 AND
0x864 DUP2
0x865 JUMP
---
0x854: JUMPDEST 
0x855: V692 = 0x9
0x857: V693 = S[0x9]
0x858: V694 = 0x100000000
0x85f: V695 = DIV V693 0x100000000
0x860: V696 = 0xffff
0x863: V697 = AND 0xffff V695
0x865: JUMP 0x459
---
Entry stack: [V10, 0x459]
Stack pops: 1
Stack additions: [S0, V697]
Exit stack: [V10, 0x459, V697]

================================

Block 0x866
[0x866:0x86f]
---
Predecessors: [0x478]
Successors: [0x459]
---
0x866 JUMPDEST
0x867 PUSH1 0x9
0x869 SLOAD
0x86a PUSH2 0xffff
0x86d AND
0x86e DUP2
0x86f JUMP
---
0x866: JUMPDEST 
0x867: V698 = 0x9
0x869: V699 = S[0x9]
0x86a: V700 = 0xffff
0x86d: V701 = AND 0xffff V699
0x86f: JUMP 0x459
---
Entry stack: [V10, 0x459]
Stack pops: 1
Stack additions: [S0, V701]
Exit stack: [V10, 0x459, V701]

================================

Block 0x870
[0x870:0x87f]
---
Predecessors: [0x49f]
Successors: [0x459]
---
0x870 JUMPDEST
0x871 PUSH1 0x9
0x873 SLOAD
0x874 PUSH3 0x10000
0x878 SWAP1
0x879 DIV
0x87a PUSH2 0xffff
0x87d AND
0x87e DUP2
0x87f JUMP
---
0x870: JUMPDEST 
0x871: V702 = 0x9
0x873: V703 = S[0x9]
0x874: V704 = 0x10000
0x879: V705 = DIV V703 0x10000
0x87a: V706 = 0xffff
0x87d: V707 = AND 0xffff V705
0x87f: JUMP 0x459
---
Entry stack: [V10, 0x459]
Stack pops: 1
Stack additions: [S0, V707]
Exit stack: [V10, 0x459, V707]

================================

Block 0x880
[0x880:0x88e]
---
Predecessors: [0x4c6]
Successors: [0x4ce]
---
0x880 JUMPDEST
0x881 PUSH1 0x7
0x883 SLOAD
0x884 PUSH1 0x1
0x886 PUSH1 0xa0
0x888 PUSH1 0x2
0x88a EXP
0x88b SUB
0x88c AND
0x88d DUP2
0x88e JUMP
---
0x880: JUMPDEST 
0x881: V708 = 0x7
0x883: V709 = S[0x7]
0x884: V710 = 0x1
0x886: V711 = 0xa0
0x888: V712 = 0x2
0x88a: V713 = EXP 0x2 0xa0
0x88b: V714 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88c: V715 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0x88e: JUMP 0x4ce
---
Entry stack: [V10, 0x4ce]
Stack pops: 1
Stack additions: [S0, V715]
Exit stack: [V10, 0x4ce, V715]

================================

Block 0x88f
[0x88f:0x8a5]
---
Predecessors: [0x520]
Successors: [0x8a6, 0x8ab]
---
0x88f JUMPDEST
0x890 PUSH1 0x7
0x892 SLOAD
0x893 CALLER
0x894 PUSH1 0x1
0x896 PUSH1 0xa0
0x898 PUSH1 0x2
0x89a EXP
0x89b SUB
0x89c SWAP1
0x89d DUP2
0x89e AND
0x89f SWAP2
0x8a0 AND
0x8a1 EQ
0x8a2 PUSH2 0x8ab
0x8a5 JUMPI
---
0x88f: JUMPDEST 
0x890: V716 = 0x7
0x892: V717 = S[0x7]
0x893: V718 = CALLER
0x894: V719 = 0x1
0x896: V720 = 0xa0
0x898: V721 = 0x2
0x89a: V722 = EXP 0x2 0xa0
0x89b: V723 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89e: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0x8a0: V725 = AND V717 0xffffffffffffffffffffffffffffffffffffffff
0x8a1: V726 = EQ V725 V724
0x8a2: V727 = 0x8ab
0x8a5: JUMPI 0x8ab V726
---
Entry stack: [V10, 0x3fb, V424, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, V424, V426]

================================

Block 0x8a6
[0x8a6:0x8aa]
---
Predecessors: [0x88f]
Successors: []
---
0x8a6 PUSH1 0x0
0x8a8 PUSH1 0x0
0x8aa REVERT
---
0x8a6: V728 = 0x0
0x8a8: V729 = 0x0
0x8aa: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3fb, V424, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, V424, V426]

================================

Block 0x8ab
[0x8ab:0x8b4]
---
Predecessors: [0x88f]
Successors: [0xa62]
---
0x8ab JUMPDEST
0x8ac PUSH2 0x8b5
0x8af NUMBER
0x8b0 DUP4
0x8b1 PUSH2 0xa62
0x8b4 JUMP
---
0x8ab: JUMPDEST 
0x8ac: V730 = 0x8b5
0x8af: V731 = NUMBER
0x8b1: V732 = 0xa62
0x8b4: JUMP 0xa62
---
Entry stack: [V10, 0x3fb, V424, V426]
Stack pops: 2
Stack additions: [S1, S0, 0x8b5, V731, S1]
Exit stack: [V10, 0x3fb, V424, V426, 0x8b5, V731, V424]

================================

Block 0x8b5
[0x8b5:0x8c2]
---
Predecessors: [0xa76]
Successors: [0xa62]
---
0x8b5 JUMPDEST
0x8b6 PUSH1 0x0
0x8b8 SSTORE
0x8b9 PUSH2 0x8c3
0x8bc DUP2
0x8bd PUSH1 0x1
0x8bf PUSH2 0xa62
0x8c2 JUMP
---
0x8b5: JUMPDEST 
0x8b6: V733 = 0x0
0x8b8: S[0x0] = S0
0x8b9: V734 = 0x8c3
0x8bd: V735 = 0x1
0x8bf: V736 = 0xa62
0x8c2: JUMP 0xa62
---
Entry stack: [V10, 0x3fb, V424, V426, S0]
Stack pops: 2
Stack additions: [S1, 0x8c3, S1, 0x1]
Exit stack: [V10, 0x3fb, V424, V426, 0x8c3, V426, 0x1]

================================

Block 0x8c3
[0x8c3:0x8cf]
---
Predecessors: [0xa76]
Successors: [0x8d0]
---
0x8c3 JUMPDEST
0x8c4 PUSH2 0xe10
0x8c7 MUL
0x8c8 TIMESTAMP
0x8c9 ADD
0x8ca PUSH1 0x1
0x8cc DUP2
0x8cd SWAP1
0x8ce SSTORE
0x8cf POP
---
0x8c3: JUMPDEST 
0x8c4: V737 = 0xe10
0x8c7: V738 = MUL 0xe10 S0
0x8c8: V739 = TIMESTAMP
0x8c9: V740 = ADD V739 V738
0x8ca: V741 = 0x1
0x8ce: S[0x1] = V740
---
Entry stack: [V10, 0x3fb, V424, V426, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fb, V424, V426]

================================

Block 0x8d0
[0x8d0:0x8d0]
---
Predecessors: [0x8c3]
Successors: [0x8d1]
---
0x8d0 JUMPDEST
---
0x8d0: JUMPDEST 
---
Entry stack: [V10, 0x3fb, V424, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, V424, V426]

================================

Block 0x8d1
[0x8d1:0x8d4]
---
Predecessors: [0x8d0]
Successors: [0x3fb]
---
0x8d1 JUMPDEST
0x8d2 POP
0x8d3 POP
0x8d4 JUMP
---
0x8d1: JUMPDEST 
0x8d4: JUMP 0x3fb
---
Entry stack: [V10, 0x3fb, V424, V426]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d5
[0x8d5:0x8da]
---
Predecessors: [0x538]
Successors: [0x419]
---
0x8d5 JUMPDEST
0x8d6 PUSH1 0x1
0x8d8 SLOAD
0x8d9 DUP2
0x8da JUMP
---
0x8d5: JUMPDEST 
0x8d6: V742 = 0x1
0x8d8: V743 = S[0x1]
0x8da: JUMP 0x419
---
Entry stack: [V10, 0x419]
Stack pops: 1
Stack additions: [S0, V743]
Exit stack: [V10, 0x419, V743]

================================

Block 0x8db
[0x8db:0x8ee]
---
Predecessors: [0x55a]
Successors: [0x459]
---
0x8db JUMPDEST
0x8dc PUSH1 0x9
0x8de SLOAD
0x8df PUSH7 0x1000000000000
0x8e7 SWAP1
0x8e8 DIV
0x8e9 PUSH2 0xffff
0x8ec AND
0x8ed DUP2
0x8ee JUMP
---
0x8db: JUMPDEST 
0x8dc: V744 = 0x9
0x8de: V745 = S[0x9]
0x8df: V746 = 0x1000000000000
0x8e8: V747 = DIV V745 0x1000000000000
0x8e9: V748 = 0xffff
0x8ec: V749 = AND 0xffff V747
0x8ee: JUMP 0x459
---
Entry stack: [V10, 0x459]
Stack pops: 1
Stack additions: [S0, V749]
Exit stack: [V10, 0x459, V749]

================================

Block 0x8ef
[0x8ef:0x8f6]
---
Predecessors: [0x581]
Successors: [0xaa6]
---
0x8ef JUMPDEST
0x8f0 PUSH2 0x8f7
0x8f3 PUSH2 0xaa6
0x8f6 JUMP
---
0x8ef: JUMPDEST 
0x8f0: V750 = 0x8f7
0x8f3: V751 = 0xaa6
0x8f6: JUMP 0xaa6
---
Entry stack: [V10, 0x589]
Stack pops: 0
Stack additions: [0x8f7]
Exit stack: [V10, 0x589, 0x8f7]

================================

Block 0x8f7
[0x8f7:0x900]
---
Predecessors: [0xaa6]
Successors: [0x75e]
---
0x8f7 JUMPDEST
0x8f8 PUSH1 0x3
0x8fa PUSH2 0x901
0x8fd PUSH2 0x75e
0x900 JUMP
---
0x8f7: JUMPDEST 
0x8f8: V752 = 0x3
0x8fa: V753 = 0x901
0x8fd: V754 = 0x75e
0x900: JUMP 0x75e
---
Entry stack: [V10, 0x589, V880]
Stack pops: 0
Stack additions: [0x3, 0x901]
Exit stack: [V10, 0x589, V880, 0x3, 0x901]

================================

Block 0x901
[0x901:0x90a]
---
Predecessors: [0x793]
Successors: [0x90b, 0x90c]
---
0x901 JUMPDEST
0x902 PUSH1 0x2
0x904 DUP2
0x905 GT
0x906 ISZERO
0x907 PUSH2 0x90c
0x90a JUMPI
---
0x901: JUMPDEST 
0x902: V755 = 0x2
0x905: V756 = GT S0 0x2
0x906: V757 = ISZERO V756
0x907: V758 = 0x90c
0x90a: JUMPI 0x90c V757
---
Entry stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]

================================

Block 0x90b
[0x90b:0x90b]
---
Predecessors: [0x901]
Successors: []
---
0x90b INVALID
---
0x90b: INVALID 
---
Entry stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]

================================

Block 0x90c
[0x90c:0x914]
---
Predecessors: [0x901]
Successors: [0x915, 0x916]
---
0x90c JUMPDEST
0x90d PUSH1 0x3
0x90f DUP2
0x910 LT
0x911 PUSH2 0x916
0x914 JUMPI
---
0x90c: JUMPDEST 
0x90d: V759 = 0x3
0x910: V760 = LT S0 0x3
0x911: V761 = 0x916
0x914: JUMPI 0x916 V760
---
Entry stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fb, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x589}, S2, S1, S0]

================================

Block 0x915
[0x915:0x915]
---
Predecessors: [0x90c]
Successors: []
---
0x915 INVALID
---
0x915: INVALID 
---
Entry stack: [V10, 0x3fb, S4, {0x0, 0x589}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fb, S4, {0x0, 0x589}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x916
[0x916:0x919]
---
Predecessors: [0x90c]
Successors: [0x91a]
---
0x916 JUMPDEST
0x917 ADD
0x918 PUSH1 0x0
---
0x916: JUMPDEST 
0x917: V762 = ADD {0x0, 0x1, 0x2} {0x1, 0x3}
0x918: V763 = 0x0
---
Entry stack: [V10, 0x3fb, S4, {0x0, 0x589}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: [V762, 0x0]
Exit stack: [V10, 0x3fb, S4, {0x0, 0x589}, S2, V762, 0x0]

================================

Block 0x91a
[0x91a:0x958]
---
Predecessors: [0x916]
Successors: [0x959, 0x99f]
---
0x91a JUMPDEST
0x91b POP
0x91c DUP1
0x91d SLOAD
0x91e PUSH1 0x40
0x920 DUP1
0x921 MLOAD
0x922 PUSH1 0x20
0x924 PUSH1 0x2
0x926 PUSH1 0x1
0x928 DUP6
0x929 AND
0x92a ISZERO
0x92b PUSH2 0x100
0x92e MUL
0x92f PUSH1 0x0
0x931 NOT
0x932 ADD
0x933 SWAP1
0x934 SWAP5
0x935 AND
0x936 SWAP4
0x937 SWAP1
0x938 SWAP4
0x939 DIV
0x93a PUSH1 0x1f
0x93c DUP2
0x93d ADD
0x93e DUP5
0x93f SWAP1
0x940 DIV
0x941 DUP5
0x942 MUL
0x943 DUP3
0x944 ADD
0x945 DUP5
0x946 ADD
0x947 SWAP1
0x948 SWAP3
0x949 MSTORE
0x94a DUP2
0x94b DUP2
0x94c MSTORE
0x94d SWAP3
0x94e SWAP2
0x94f DUP4
0x950 ADD
0x951 DUP3
0x952 DUP3
0x953 DUP1
0x954 ISZERO
0x955 PUSH2 0x99f
0x958 JUMPI
---
0x91a: JUMPDEST 
0x91d: V764 = S[V762]
0x91e: V765 = 0x40
0x921: V766 = M[0x40]
0x922: V767 = 0x20
0x924: V768 = 0x2
0x926: V769 = 0x1
0x929: V770 = AND V764 0x1
0x92a: V771 = ISZERO V770
0x92b: V772 = 0x100
0x92e: V773 = MUL 0x100 V771
0x92f: V774 = 0x0
0x931: V775 = NOT 0x0
0x932: V776 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V773
0x935: V777 = AND V764 V776
0x939: V778 = DIV V777 0x2
0x93a: V779 = 0x1f
0x93d: V780 = ADD V778 0x1f
0x940: V781 = DIV V780 0x20
0x942: V782 = MUL 0x20 V781
0x944: V783 = ADD V766 V782
0x946: V784 = ADD 0x20 V783
0x949: M[0x40] = V784
0x94c: M[V766] = V778
0x950: V785 = ADD V766 0x20
0x954: V786 = ISZERO V778
0x955: V787 = 0x99f
0x958: JUMPI 0x99f V786
---
Entry stack: [V10, 0x3fb, S4, {0x0, 0x589}, S2, V762, 0x0]
Stack pops: 2
Stack additions: [V766, S1, V778, V785, S1, V778]
Exit stack: [V10, 0x3fb, S4, {0x0, 0x589}, S2, V766, V762, V778, V785, V762, V778]

================================

Block 0x959
[0x959:0x960]
---
Predecessors: [0x91a]
Successors: [0x961, 0x974]
---
0x959 DUP1
0x95a PUSH1 0x1f
0x95c LT
0x95d PUSH2 0x974
0x960 JUMPI
---
0x95a: V788 = 0x1f
0x95c: V789 = LT 0x1f V778
0x95d: V790 = 0x974
0x960: JUMPI 0x974 V789
---
Entry stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, V766, V762, V778, V785, V762, V778]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, V766, V762, V778, V785, V762, V778]

================================

Block 0x961
[0x961:0x973]
---
Predecessors: [0x959]
Successors: [0x99f]
---
0x961 PUSH2 0x100
0x964 DUP1
0x965 DUP4
0x966 SLOAD
0x967 DIV
0x968 MUL
0x969 DUP4
0x96a MSTORE
0x96b SWAP2
0x96c PUSH1 0x20
0x96e ADD
0x96f SWAP2
0x970 PUSH2 0x99f
0x973 JUMP
---
0x961: V791 = 0x100
0x966: V792 = S[S1]
0x967: V793 = DIV V792 0x100
0x968: V794 = MUL V793 0x100
0x96a: M[V785] = V794
0x96c: V795 = 0x20
0x96e: V796 = ADD 0x20 V785
0x970: V797 = 0x99f
0x973: JUMP 0x99f
---
Entry stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, V766, S4, V778, V785, S1, V778]
Stack pops: 3
Stack additions: [V796, S1, S0]
Exit stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, V766, S4, V778, V796, S1, V778]

================================

Block 0x974
[0x974:0x981]
---
Predecessors: [0x959]
Successors: [0x982]
---
0x974 JUMPDEST
0x975 DUP3
0x976 ADD
0x977 SWAP2
0x978 SWAP1
0x979 PUSH1 0x0
0x97b MSTORE
0x97c PUSH1 0x20
0x97e PUSH1 0x0
0x980 SHA3
0x981 SWAP1
---
0x974: JUMPDEST 
0x976: V798 = ADD V785 V778
0x979: V799 = 0x0
0x97b: M[0x0] = S1
0x97c: V800 = 0x20
0x97e: V801 = 0x0
0x980: V802 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, V766, S4, V778, V785, S1, V778]
Stack pops: 3
Stack additions: [V798, V802, S2]
Exit stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, V766, S4, V778, V798, V802, V785]

================================

Block 0x982
[0x982:0x995]
---
Predecessors: [0x974, 0x982]
Successors: [0x982, 0x996]
---
0x982 JUMPDEST
0x983 DUP2
0x984 SLOAD
0x985 DUP2
0x986 MSTORE
0x987 SWAP1
0x988 PUSH1 0x1
0x98a ADD
0x98b SWAP1
0x98c PUSH1 0x20
0x98e ADD
0x98f DUP1
0x990 DUP4
0x991 GT
0x992 PUSH2 0x982
0x995 JUMPI
---
0x982: JUMPDEST 
0x984: V803 = S[S1]
0x986: M[S0] = V803
0x988: V804 = 0x1
0x98a: V805 = ADD 0x1 S1
0x98c: V806 = 0x20
0x98e: V807 = ADD 0x20 S0
0x991: V808 = GT V798 V807
0x992: V809 = 0x982
0x995: JUMPI 0x982 V808
---
Entry stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, S5, S4, S3, V798, S1, S0]
Stack pops: 3
Stack additions: [S2, V805, V807]
Exit stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, S5, S4, S3, V798, V805, V807]

================================

Block 0x996
[0x996:0x99e]
---
Predecessors: [0x982]
Successors: [0x99f]
---
0x996 DUP3
0x997 SWAP1
0x998 SUB
0x999 PUSH1 0x1f
0x99b AND
0x99c DUP3
0x99d ADD
0x99e SWAP2
---
0x998: V810 = SUB V807 V798
0x999: V811 = 0x1f
0x99b: V812 = AND 0x1f V810
0x99d: V813 = ADD V798 V812
---
Entry stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, S5, S4, S3, V798, V805, V807]
Stack pops: 3
Stack additions: [V813, S1, S2]
Exit stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, S5, S4, S3, V813, V805, V798]

================================

Block 0x99f
[0x99f:0x9a6]
---
Predecessors: [0x91a, 0x961, 0x996]
Successors: [0x9a7]
---
0x99f JUMPDEST
0x9a0 POP
0x9a1 POP
0x9a2 POP
0x9a3 POP
0x9a4 POP
0x9a5 SWAP1
0x9a6 POP
---
0x99f: JUMPDEST 
---
Entry stack: [V10, 0x3fb, S8, {0x0, 0x589}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V10, 0x3fb, S8, {0x0, 0x589}, S5]

================================

Block 0x9a7
[0x9a7:0x9a9]
---
Predecessors: [0x99f]
Successors: [0x218, 0x589]
---
0x9a7 JUMPDEST
0x9a8 SWAP1
0x9a9 JUMP
---
0x9a7: JUMPDEST 
0x9a9: JUMP {0x0, 0x589}
---
Entry stack: [V10, 0x3fb, S2, {0x0, 0x589}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x3fb, S2, S0]

================================

Block 0x9aa
[0x9aa:0x9bb]
---
Predecessors: [0x611]
Successors: [0x9bc, 0x9d8]
---
0x9aa JUMPDEST
0x9ab PUSH1 0x1
0x9ad SLOAD
0x9ae PUSH1 0x0
0x9b0 SWAP1
0x9b1 DUP2
0x9b2 SWAP1
0x9b3 TIMESTAMP
0x9b4 DUP2
0x9b5 SUB
0x9b6 SWAP1
0x9b7 ISZERO
0x9b8 PUSH2 0x9d8
0x9bb JUMPI
---
0x9aa: JUMPDEST 
0x9ab: V814 = 0x1
0x9ad: V815 = S[0x1]
0x9ae: V816 = 0x0
0x9b3: V817 = TIMESTAMP
0x9b5: V818 = SUB V815 V817
0x9b7: V819 = ISZERO V815
0x9b8: V820 = 0x9d8
0x9bb: JUMPI 0x9d8 V819
---
Entry stack: [V10, 0x619]
Stack pops: 0
Stack additions: [0x0, 0x0, V818]
Exit stack: [V10, 0x619, 0x0, 0x0, V818]

================================

Block 0x9bc
[0x9bc:0x9bf]
---
Predecessors: [0x9aa]
Successors: [0x9c0]
---
0x9bc PUSH2 0xe10
0x9bf DUP2
---
0x9bc: V821 = 0xe10
---
Entry stack: [V10, 0x619, 0x0, 0x0, V818]
Stack pops: 1
Stack additions: [S0, 0xe10, S0]
Exit stack: [V10, 0x619, 0x0, 0x0, V818, 0xe10, V818]

================================

Block 0x9c0
[0x9c0:0x9c7]
---
Predecessors: [0x9bc]
Successors: [0x9c8]
---
0x9c0 JUMPDEST
0x9c1 DIV
0x9c2 PUSH1 0x3c
0x9c4 PUSH2 0xe10
0x9c7 DUP4
---
0x9c0: JUMPDEST 
0x9c1: V822 = DIV V818 0xe10
0x9c2: V823 = 0x3c
0x9c4: V824 = 0xe10
---
Entry stack: [V10, 0x619, 0x0, 0x0, V818, 0xe10, V818]
Stack pops: 3
Stack additions: [S2, V822, 0x3c, 0xe10, S2]
Exit stack: [V10, 0x619, 0x0, 0x0, V818, V822, 0x3c, 0xe10, V818]

================================

Block 0x9c8
[0x9c8:0x9d0]
---
Predecessors: [0x9c0]
Successors: [0x9d1, 0x9d2]
---
0x9c8 JUMPDEST
0x9c9 MOD
0x9ca DUP2
0x9cb ISZERO
0x9cc ISZERO
0x9cd PUSH2 0x9d2
0x9d0 JUMPI
---
0x9c8: JUMPDEST 
0x9c9: V825 = MOD V818 0xe10
0x9cb: V826 = ISZERO 0x3c
0x9cc: V827 = ISZERO 0x0
0x9cd: V828 = 0x9d2
0x9d0: JUMPI 0x9d2 0x1
---
Entry stack: [V10, 0x619, 0x0, 0x0, V818, V822, 0x3c, 0xe10, V818]
Stack pops: 3
Stack additions: [S2, V825]
Exit stack: [V10, 0x619, 0x0, 0x0, V818, V822, 0x3c, V825]

================================

Block 0x9d1
[0x9d1:0x9d1]
---
Predecessors: [0x9c8]
Successors: []
---
0x9d1 INVALID
---
0x9d1: INVALID 
---
Entry stack: [V10, 0x619, 0x0, 0x0, V818, V822, 0x3c, V825]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x619, 0x0, 0x0, V818, V822, 0x3c, V825]

================================

Block 0x9d2
[0x9d2:0x9d7]
---
Predecessors: [0x9c8]
Successors: [0x9dc]
---
0x9d2 JUMPDEST
0x9d3 DIV
0x9d4 PUSH2 0x9dc
0x9d7 JUMP
---
0x9d2: JUMPDEST 
0x9d3: V829 = DIV V825 0x3c
0x9d4: V830 = 0x9dc
0x9d7: JUMP 0x9dc
---
Entry stack: [V10, 0x619, 0x0, 0x0, V818, V822, 0x3c, V825]
Stack pops: 2
Stack additions: [V829]
Exit stack: [V10, 0x619, 0x0, 0x0, V818, V822, V829]

================================

Block 0x9d8
[0x9d8:0x9db]
---
Predecessors: [0x9aa]
Successors: [0x9dc]
---
0x9d8 JUMPDEST
0x9d9 PUSH1 0x0
0x9db DUP1
---
0x9d8: JUMPDEST 
0x9d9: V831 = 0x0
---
Entry stack: [V10, 0x619, 0x0, 0x0, V818]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x619, 0x0, 0x0, V818, 0x0, 0x0]

================================

Block 0x9dc
[0x9dc:0x9e0]
---
Predecessors: [0x9d2, 0x9d8]
Successors: [0x9e1]
---
0x9dc JUMPDEST
0x9dd SWAP3
0x9de POP
0x9df SWAP3
0x9e0 POP
---
0x9dc: JUMPDEST 
---
Entry stack: [V10, 0x619, 0x0, 0x0, V818, S1, S0]
Stack pops: 5
Stack additions: [S1, S0, S2]
Exit stack: [V10, 0x619, S1, S0, V818]

================================

Block 0x9e1
[0x9e1:0x9e5]
---
Predecessors: [0x9dc]
Successors: [0x619]
---
0x9e1 JUMPDEST
0x9e2 POP
0x9e3 SWAP1
0x9e4 SWAP2
0x9e5 JUMP
---
0x9e1: JUMPDEST 
0x9e5: JUMP 0x619
---
Entry stack: [V10, 0x619, S2, S1, V818]
Stack pops: 4
Stack additions: [S2, S1]
Exit stack: [V10, S2, S1]

================================

Block 0x9e6
[0x9e6:0x9eb]
---
Predecessors: [0x641]
Successors: [0x419]
---
0x9e6 JUMPDEST
0x9e7 PUSH1 0x0
0x9e9 SLOAD
0x9ea DUP2
0x9eb JUMP
---
0x9e6: JUMPDEST 
0x9e7: V832 = 0x0
0x9e9: V833 = S[0x0]
0x9eb: JUMP 0x419
---
Entry stack: [V10, 0x419]
Stack pops: 1
Stack additions: [S0, V833]
Exit stack: [V10, 0x419, V833]

================================

Block 0x9ec
[0x9ec:0x9ef]
---
Predecessors: [0x663]
Successors: [0x9f0]
---
0x9ec JUMPDEST
0x9ed PUSH1 0x8
0x9ef SLOAD
---
0x9ec: JUMPDEST 
0x9ed: V834 = 0x8
0x9ef: V835 = S[0x8]
---
Entry stack: [V10, 0x419]
Stack pops: 0
Stack additions: [V835]
Exit stack: [V10, 0x419, V835]

================================

Block 0x9f0
[0x9f0:0x9f2]
---
Predecessors: [0x9ec]
Successors: [0x419]
---
0x9f0 JUMPDEST
0x9f1 SWAP1
0x9f2 JUMP
---
0x9f0: JUMPDEST 
0x9f2: JUMP 0x419
---
Entry stack: [V10, 0x419, V835]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V835]

================================

Block 0x9f3
[0x9f3:0x9ff]
---
Predecessors: [0x685]
Successors: [0xa00, 0xa01]
---
0x9f3 JUMPDEST
0x9f4 PUSH1 0x8
0x9f6 DUP1
0x9f7 SLOAD
0x9f8 DUP3
0x9f9 SWAP1
0x9fa DUP2
0x9fb LT
0x9fc PUSH2 0xa01
0x9ff JUMPI
---
0x9f3: JUMPDEST 
0x9f4: V836 = 0x8
0x9f7: V837 = S[0x8]
0x9fb: V838 = LT V541 V837
0x9fc: V839 = 0xa01
0x9ff: JUMPI 0xa01 V838
---
Entry stack: [V10, 0x4ce, V541]
Stack pops: 1
Stack additions: [S0, 0x8, S0]
Exit stack: [V10, 0x4ce, V541, 0x8, V541]

================================

Block 0xa00
[0xa00:0xa00]
---
Predecessors: [0x9f3]
Successors: []
---
0xa00 INVALID
---
0xa00: INVALID 
---
Entry stack: [V10, 0x4ce, V541, 0x8, V541]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4ce, V541, 0x8, V541]

================================

Block 0xa01
[0xa01:0xa0e]
---
Predecessors: [0x9f3]
Successors: [0xa0f]
---
0xa01 JUMPDEST
0xa02 SWAP1
0xa03 PUSH1 0x0
0xa05 MSTORE
0xa06 PUSH1 0x20
0xa08 PUSH1 0x0
0xa0a SHA3
0xa0b SWAP1
0xa0c ADD
0xa0d PUSH1 0x0
---
0xa01: JUMPDEST 
0xa03: V840 = 0x0
0xa05: M[0x0] = 0x8
0xa06: V841 = 0x20
0xa08: V842 = 0x0
0xa0a: V843 = SHA3 0x0 0x20
0xa0c: V844 = ADD V541 V843
0xa0d: V845 = 0x0
---
Entry stack: [V10, 0x4ce, V541, 0x8, V541]
Stack pops: 2
Stack additions: [V844, 0x0]
Exit stack: [V10, 0x4ce, V541, V844, 0x0]

================================

Block 0xa0f
[0xa0f:0xa24]
---
Predecessors: [0xa01]
Successors: [0x4ce]
---
0xa0f JUMPDEST
0xa10 SWAP2
0xa11 POP
0xa12 SLOAD
0xa13 SWAP1
0xa14 PUSH2 0x100
0xa17 EXP
0xa18 SWAP1
0xa19 DIV
0xa1a PUSH1 0x1
0xa1c PUSH1 0xa0
0xa1e PUSH1 0x2
0xa20 EXP
0xa21 SUB
0xa22 AND
0xa23 DUP2
0xa24 JUMP
---
0xa0f: JUMPDEST 
0xa12: V846 = S[V844]
0xa14: V847 = 0x100
0xa17: V848 = EXP 0x100 0x0
0xa19: V849 = DIV V846 0x1
0xa1a: V850 = 0x1
0xa1c: V851 = 0xa0
0xa1e: V852 = 0x2
0xa20: V853 = EXP 0x2 0xa0
0xa21: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa22: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V849
0xa24: JUMP 0x4ce
---
Entry stack: [V10, 0x4ce, V541, V844, 0x0]
Stack pops: 4
Stack additions: [S3, V855]
Exit stack: [V10, 0x4ce, V855]

================================

Block 0xa25
[0xa25:0xa2a]
---
Predecessors: [0x6b4]
Successors: [0x419]
---
0xa25 JUMPDEST
0xa26 PUSH2 0x2ee0
0xa29 DUP2
0xa2a JUMP
---
0xa25: JUMPDEST 
0xa26: V856 = 0x2ee0
0xa2a: JUMP 0x419
---
Entry stack: [V10, 0x419]
Stack pops: 1
Stack additions: [S0, 0x2ee0]
Exit stack: [V10, 0x419, 0x2ee0]

================================

Block 0xa2b
[0xa2b:0xa61]
---
Predecessors: [0x6d6]
Successors: [0x589]
---
0xa2b JUMPDEST
0xa2c PUSH1 0x40
0xa2e DUP1
0xa2f MLOAD
0xa30 DUP1
0xa31 DUP3
0xa32 ADD
0xa33 SWAP1
0xa34 SWAP2
0xa35 MSTORE
0xa36 PUSH1 0x5
0xa38 DUP2
0xa39 MSTORE
0xa3a PUSH32 0x302e302e38000000000000000000000000000000000000000000000000000000
0xa5b PUSH1 0x20
0xa5d DUP3
0xa5e ADD
0xa5f MSTORE
0xa60 DUP2
0xa61 JUMP
---
0xa2b: JUMPDEST 
0xa2c: V857 = 0x40
0xa2f: V858 = M[0x40]
0xa32: V859 = ADD 0x40 V858
0xa35: M[0x40] = V859
0xa36: V860 = 0x5
0xa39: M[V858] = 0x5
0xa3a: V861 = 0x302e302e38000000000000000000000000000000000000000000000000000000
0xa5b: V862 = 0x20
0xa5e: V863 = ADD V858 0x20
0xa5f: M[V863] = 0x302e302e38000000000000000000000000000000000000000000000000000000
0xa61: JUMP 0x589
---
Entry stack: [V10, 0x589]
Stack pops: 1
Stack additions: [S0, V858]
Exit stack: [V10, 0x589, V858]

================================

Block 0xa62
[0xa62:0xa6b]
---
Predecessors: [0x8ab, 0x8b5]
Successors: [0xa6c, 0xa71]
---
0xa62 JUMPDEST
0xa63 PUSH1 0x0
0xa65 DUP2
0xa66 DUP4
0xa67 GT
0xa68 PUSH2 0xa71
0xa6b JUMPI
---
0xa62: JUMPDEST 
0xa63: V864 = 0x0
0xa67: V865 = GT S1 S0
0xa68: V866 = 0xa71
0xa6b: JUMPI 0xa71 V865
---
Entry stack: [V10, 0x3fb, V424, V426, {0x8b5, 0x8c3}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x3fb, V424, V426, {0x8b5, 0x8c3}, S1, S0, 0x0]

================================

Block 0xa6c
[0xa6c:0xa70]
---
Predecessors: [0xa62]
Successors: [0xa73]
---
0xa6c DUP2
0xa6d PUSH2 0xa73
0xa70 JUMP
---
0xa6d: V867 = 0xa73
0xa70: JUMP 0xa73
---
Entry stack: [V10, 0x3fb, V424, V426, {0x8b5, 0x8c3}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V10, 0x3fb, V424, V426, {0x8b5, 0x8c3}, S2, S1, 0x0, S1]

================================

Block 0xa71
[0xa71:0xa72]
---
Predecessors: [0xa62]
Successors: [0xa73]
---
0xa71 JUMPDEST
0xa72 DUP3
---
0xa71: JUMPDEST 
---
Entry stack: [V10, 0x3fb, V424, V426, {0x8b5, 0x8c3}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V10, 0x3fb, V424, V426, {0x8b5, 0x8c3}, S2, S1, 0x0, S2]

================================

Block 0xa73
[0xa73:0xa75]
---
Predecessors: [0xa6c, 0xa71]
Successors: [0xa76]
---
0xa73 JUMPDEST
0xa74 SWAP1
0xa75 POP
---
0xa73: JUMPDEST 
---
Entry stack: [V10, 0x3fb, V424, V426, {0x8b5, 0x8c3}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x3fb, V424, V426, {0x8b5, 0x8c3}, S3, S2, S0]

================================

Block 0xa76
[0xa76:0xa7b]
---
Predecessors: [0xa73]
Successors: [0x8b5, 0x8c3]
---
0xa76 JUMPDEST
0xa77 SWAP3
0xa78 SWAP2
0xa79 POP
0xa7a POP
0xa7b JUMP
---
0xa76: JUMPDEST 
0xa7b: JUMP {0x8b5, 0x8c3}
---
Entry stack: [V10, 0x3fb, V424, V426, {0x8b5, 0x8c3}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x3fb, V424, V426, S0]

================================

Block 0xa7c
[0xa7c:0xa89]
---
Predecessors: [0x207]
Successors: [0x3f5, 0xa8a]
---
0xa7c JUMPDEST
0xa7d DUP2
0xa7e SLOAD
0xa7f DUP2
0xa80 DUP4
0xa81 SSTORE
0xa82 DUP2
0xa83 DUP2
0xa84 ISZERO
0xa85 GT
0xa86 PUSH2 0x3f5
0xa89 JUMPI
---
0xa7c: JUMPDEST 
0xa7e: V868 = S[0x8]
0xa81: S[0x8] = V160
0xa84: V869 = ISZERO V868
0xa85: V870 = GT V869 V160
0xa86: V871 = 0x3f5
0xa89: JUMPI 0x3f5 V870
---
Entry stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x8, V158, V160, 0x218, 0x8, V160]
Stack pops: 2
Stack additions: [S1, S0, V868]
Exit stack: [V10, 0x3fb, S13, V113, S11, S10, S9, S8, V113, S6, 0x8, V158, V160, 0x218, 0x8, V160, V868]

================================

Block 0xa8a
[0xa8a:0xa9f]
---
Predecessors: [0xa7c]
Successors: [0xab8]
---
0xa8a PUSH1 0x0
0xa8c DUP4
0xa8d DUP2
0xa8e MSTORE
0xa8f PUSH1 0x20
0xa91 SWAP1
0xa92 SHA3
0xa93 PUSH2 0x3f5
0xa96 SWAP2
0xa97 DUP2
0xa98 ADD
0xa99 SWAP1
0xa9a DUP4
0xa9b ADD
0xa9c PUSH2 0xab8
0xa9f JUMP
---
0xa8a: V872 = 0x0
0xa8e: M[0x0] = 0x8
0xa8f: V873 = 0x20
0xa92: V874 = SHA3 0x0 0x20
0xa93: V875 = 0x3f5
0xa98: V876 = ADD V874 V868
0xa9b: V877 = ADD V160 V874
0xa9c: V878 = 0xab8
0xa9f: JUMP 0xab8
---
Entry stack: [V10, 0x3fb, S14, V113, S12, S11, S10, S9, V113, S7, 0x8, V158, V160, 0x218, 0x8, V160, V868]
Stack pops: 3
Stack additions: [S2, S1, 0x3f5, V876, V877]
Exit stack: [V10, 0x3fb, S14, V113, S12, S11, S10, S9, V113, S7, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f5, V876, V877]

================================

Block 0xaa0
[0xaa0:0xaa0]
---
Predecessors: []
Successors: [0xaa1]
---
0xaa0 JUMPDEST
---
0xaa0: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaa1
[0xaa1:0xaa5]
---
Predecessors: [0xaa0]
Successors: []
Has unresolved jump.
---
0xaa1 JUMPDEST
0xaa2 POP
0xaa3 POP
0xaa4 POP
0xaa5 JUMP
---
0xaa1: JUMPDEST 
0xaa5: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xaa6
[0xaa6:0xab7]
---
Predecessors: [0x8ef]
Successors: [0x8f7]
---
0xaa6 JUMPDEST
0xaa7 PUSH1 0x40
0xaa9 DUP1
0xaaa MLOAD
0xaab PUSH1 0x20
0xaad DUP2
0xaae ADD
0xaaf SWAP1
0xab0 SWAP2
0xab1 MSTORE
0xab2 PUSH1 0x0
0xab4 DUP2
0xab5 MSTORE
0xab6 SWAP1
0xab7 JUMP
---
0xaa6: JUMPDEST 
0xaa7: V879 = 0x40
0xaaa: V880 = M[0x40]
0xaab: V881 = 0x20
0xaae: V882 = ADD V880 0x20
0xab1: M[0x40] = V882
0xab2: V883 = 0x0
0xab5: M[V880] = 0x0
0xab7: JUMP 0x8f7
---
Entry stack: [V10, 0x589, 0x8f7]
Stack pops: 1
Stack additions: [V880]
Exit stack: [V10, 0x589, V880]

================================

Block 0xab8
[0xab8:0xabd]
---
Predecessors: [0xa8a]
Successors: [0xabe]
---
0xab8 JUMPDEST
0xab9 PUSH2 0x791
0xabc SWAP2
0xabd SWAP1
---
0xab8: JUMPDEST 
0xab9: V884 = 0x791
---
Entry stack: [V10, 0x3fb, S16, V113, S14, S13, S12, S11, V113, S9, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f5, V876, V877]
Stack pops: 2
Stack additions: [0x791, S1, S0]
Exit stack: [V10, 0x3fb, S16, V113, S14, S13, S12, S11, V113, S9, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f5, 0x791, V876, V877]

================================

Block 0xabe
[0xabe:0xac6]
---
Predecessors: [0xab8, 0xac7]
Successors: [0xac7, 0xad2]
---
0xabe JUMPDEST
0xabf DUP1
0xac0 DUP3
0xac1 GT
0xac2 ISZERO
0xac3 PUSH2 0xad2
0xac6 JUMPI
---
0xabe: JUMPDEST 
0xac1: V885 = GT V876 S0
0xac2: V886 = ISZERO V885
0xac3: V887 = 0xad2
0xac6: JUMPI 0xad2 V886
---
Entry stack: [V10, 0x3fb, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f5, 0x791, V876, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x3fb, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f5, 0x791, V876, S0]

================================

Block 0xac7
[0xac7:0xad1]
---
Predecessors: [0xabe]
Successors: [0xabe]
---
0xac7 PUSH1 0x0
0xac9 DUP2
0xaca SSTORE
0xacb PUSH1 0x1
0xacd ADD
0xace PUSH2 0xabe
0xad1 JUMP
---
0xac7: V888 = 0x0
0xaca: S[S0] = 0x0
0xacb: V889 = 0x1
0xacd: V890 = ADD 0x1 S0
0xace: V891 = 0xabe
0xad1: JUMP 0xabe
---
Entry stack: [V10, 0x3fb, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f5, 0x791, V876, S0]
Stack pops: 1
Stack additions: [V890]
Exit stack: [V10, 0x3fb, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f5, 0x791, V876, V890]

================================

Block 0xad2
[0xad2:0xad5]
---
Predecessors: [0xabe]
Successors: [0x791]
---
0xad2 JUMPDEST
0xad3 POP
0xad4 SWAP1
0xad5 JUMP
---
0xad2: JUMPDEST 
0xad5: JUMP 0x791
---
Entry stack: [V10, 0x3fb, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f5, 0x791, V876, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x3fb, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3f5, V876]

================================

Block 0xad6
[0xad6:0xb05]
---
Predecessors: []
Successors: []
---
0xad6 JUMPDEST
0xad7 SWAP1
0xad8 JUMP
0xad9 STOP
0xada LOG1
0xadb PUSH6 0x627a7a723058
0xae2 SHA3
0xae3 CODECOPY
0xae4 AND
0xae5 LOG0
0xae6 MISSING 0xde
0xae7 CALLER
0xae8 SSTORE
0xae9 CALLDATALOAD
0xaea EXTCODESIZE
0xaeb MISSING 0x1e
0xaec CODECOPY
0xaed MISSING 0xb7
0xaee PUSH23 0xa524bfbc6391f89f2652037cf62c557949a126640029
---
0xad6: JUMPDEST 
0xad8: JUMP S1
0xad9: STOP 
0xada: LOG S0 S1 S2
0xadb: V892 = 0x627a7a723058
0xae2: V893 = SHA3 0x627a7a723058 S3
0xae3: CODECOPY V893 S4 S5
0xae4: V894 = AND S6 S7
0xae5: LOG V894 S8
0xae6: MISSING 0xde
0xae7: V895 = CALLER
0xae8: S[V895] = S0
0xae9: V896 = CALLDATALOAD S1
0xaea: V897 = EXTCODESIZE V896
0xaeb: MISSING 0x1e
0xaec: CODECOPY S0 S1 S2
0xaed: MISSING 0xb7
0xaee: V898 = 0xa524bfbc6391f89f2652037cf62c557949a126640029
---
Entry stack: []
Stack pops: 46
Stack additions: [0xa524bfbc6391f89f2652037cf62c557949a126640029]
Exit stack: []

================================

Function 0:
Public function signature: 0xe5fc5f
Entry block: 0x3fd
Exit block: 0x419
Body: 0x3fd, 0x404, 0x405, 0x419, 0x7f9

Function 1:
Public function signature: 0x13af4035
Entry block: 0x42b
Exit block: 0x3fb
Body: 0x3fb, 0x42b, 0x432, 0x433, 0x80b, 0x822, 0x827, 0x850, 0x851

Function 2:
Public function signature: 0x2d2fe9d4
Entry block: 0x449
Exit block: 0x459
Body: 0x449, 0x450, 0x451, 0x459, 0x854

Function 3:
Public function signature: 0x6113611f
Entry block: 0x470
Exit block: 0x459
Body: 0x459, 0x470, 0x477, 0x478, 0x866

Function 4:
Public function signature: 0x64e08644
Entry block: 0x497
Exit block: 0x459
Body: 0x459, 0x497, 0x49e, 0x49f, 0x870

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x4be
Exit block: 0x4ce
Body: 0x4be, 0x4c5, 0x4c6, 0x4ce, 0x880

Function 6:
Public function signature: 0x8fe92aed
Entry block: 0x4ea
Exit block: 0x4f1
Body: 0x419, 0x4ea, 0x4f1, 0x4f2

Function 7:
Public function signature: 0x90fe5609
Entry block: 0x518
Exit block: 0x3fb
Body: 0x3fb, 0x518, 0x51f, 0x520, 0x88f, 0x8a6, 0x8ab, 0x8b5

Function 8:
Public function signature: 0xa201d102
Entry block: 0x530
Exit block: 0x419
Body: 0x419, 0x530, 0x537, 0x538, 0x8d5

Function 9:
Public function signature: 0xa4659ba2
Entry block: 0x552
Exit block: 0x459
Body: 0x459, 0x552, 0x559, 0x55a, 0x8db

Function 10:
Public function signature: 0xc19d93fb
Entry block: 0x579
Exit block: 0x3fb
Body: 0x218, 0x226, 0x250, 0x303, 0x30c, 0x312, 0x314, 0x33f, 0x348, 0x349, 0x359, 0x394, 0x3d3, 0x3f5, 0x3f6, 0x3fb, 0x579, 0x580, 0x581, 0x589, 0x5af, 0x5bd, 0x5cf, 0x5e2, 0x5fb, 0x8ef, 0x8f7, 0x901, 0x90b, 0x90c, 0x915, 0x916, 0x91a, 0x959, 0x961, 0x974, 0x982, 0x996, 0x99f, 0x9a7, 0xaa6

Function 11:
Public function signature: 0xc2a15e7e
Entry block: 0x609
Exit block: 0x619
Body: 0x609, 0x610, 0x611, 0x619, 0x9aa, 0x9bc, 0x9c0, 0x9c8, 0x9d1, 0x9d2, 0x9d8, 0x9dc, 0x9e1

Function 12:
Public function signature: 0xc8dda301
Entry block: 0x639
Exit block: 0x419
Body: 0x419, 0x639, 0x640, 0x641, 0x9e6

Function 13:
Public function signature: 0xcfd94b01
Entry block: 0x65b
Exit block: 0x419
Body: 0x419, 0x65b, 0x662, 0x663, 0x9ec, 0x9f0

Function 14:
Public function signature: 0xda58c7d9
Entry block: 0x67d
Exit block: 0x4ce
Body: 0x4ce, 0x67d, 0x684, 0x685, 0x9f3, 0xa00, 0xa01, 0xa0f

Function 15:
Public function signature: 0xfc34b908
Entry block: 0x6ac
Exit block: 0x419
Body: 0x419, 0x6ac, 0x6b3, 0x6b4, 0xa25

Function 16:
Public function signature: 0xffa1ad74
Entry block: 0x6ce
Exit block: 0x5fb
Body: 0x589, 0x5af, 0x5bd, 0x5cf, 0x5e2, 0x5fb, 0x6ce, 0x6d5, 0x6d6, 0xa2b

Function 17:
Public fallback function
Entry block: 0xed
Exit block: 0x348
Body: 0xed, 0xf1, 0xf8, 0x100, 0x10a, 0x10b, 0x111, 0x116, 0x183, 0x184, 0x191, 0x192, 0x1a4, 0x1a5, 0x1b6, 0x1dc, 0x1e2, 0x1e7, 0x207, 0x218, 0x226, 0x250, 0x273, 0x27f, 0x288, 0x289, 0x299, 0x2d1, 0x303, 0x30c, 0x312, 0x314, 0x33f, 0x348, 0x349, 0x359, 0x394, 0x3d3, 0x3f5, 0x3f6, 0x3fb, 0x589, 0x5af, 0x5bd, 0x5cf, 0x5e2, 0x5fb, 0xa7c, 0xa8a, 0xab8, 0xabe, 0xac7, 0xad2

Function 18:
Private function
Entry block: 0x75e
Exit block: 0x793
Body: 0x75e, 0x769, 0x76f, 0x775, 0x77c, 0x786, 0x78d, 0x791, 0x792, 0x793

Function 19:
Private function
Entry block: 0xa62
Exit block: 0xa76
Body: 0xa62, 0xa6c, 0xa71, 0xa73, 0xa76

Function 20:
Private function
Entry block: 0x796
Exit block: 0x7f3
Body: 0x796, 0x7bf, 0x7c7, 0x7d7, 0x7df, 0x7ed, 0x7f1, 0x7f2, 0x7f3

