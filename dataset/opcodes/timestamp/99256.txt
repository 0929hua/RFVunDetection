Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xa3]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2927d20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xa3
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2927d20
0x20: V14 = EQ V12 0x2927d20
0x21: V15 = 0xa3
0x24: JUMPI 0xa3 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd4]
---
0x25 DUP1
0x26 PUSH4 0x1922ff39
0x2b EQ
0x2c PUSH2 0xd4
0x2f JUMPI
---
0x26: V16 = 0x1922ff39
0x2b: V17 = EQ 0x1922ff39 V12
0x2c: V18 = 0xd4
0x2f: JUMPI 0xd4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x105]
---
0x30 DUP1
0x31 PUSH4 0x4124a6a7
0x36 EQ
0x37 PUSH2 0x105
0x3a JUMPI
---
0x31: V19 = 0x4124a6a7
0x36: V20 = EQ 0x4124a6a7 V12
0x37: V21 = 0x105
0x3a: JUMPI 0x105 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x12a]
---
0x3b DUP1
0x3c PUSH4 0x4592cd1d
0x41 EQ
0x42 PUSH2 0x12a
0x45 JUMPI
---
0x3c: V22 = 0x4592cd1d
0x41: V23 = EQ 0x4592cd1d V12
0x42: V24 = 0x12a
0x45: JUMPI 0x12a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x151]
---
0x46 DUP1
0x47 PUSH4 0x5136260d
0x4c EQ
0x4d PUSH2 0x151
0x50 JUMPI
---
0x47: V25 = 0x5136260d
0x4c: V26 = EQ 0x5136260d V12
0x4d: V27 = 0x151
0x50: JUMPI 0x151 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x176]
---
0x51 DUP1
0x52 PUSH4 0x557f4bc9
0x57 EQ
0x58 PUSH2 0x176
0x5b JUMPI
---
0x52: V28 = 0x557f4bc9
0x57: V29 = EQ 0x557f4bc9 V12
0x58: V30 = 0x176
0x5b: JUMPI 0x176 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a9]
---
0x5c DUP1
0x5d PUSH4 0x5aa77d3c
0x62 EQ
0x63 PUSH2 0x1a9
0x66 JUMPI
---
0x5d: V31 = 0x5aa77d3c
0x62: V32 = EQ 0x5aa77d3c V12
0x63: V33 = 0x1a9
0x66: JUMPI 0x1a9 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d8]
---
0x67 DUP1
0x68 PUSH4 0x83197ef0
0x6d EQ
0x6e PUSH2 0x1d8
0x71 JUMPI
---
0x68: V34 = 0x83197ef0
0x6d: V35 = EQ 0x83197ef0 V12
0x6e: V36 = 0x1d8
0x71: JUMPI 0x1d8 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1ed]
---
0x72 DUP1
0x73 PUSH4 0xce606ee0
0x78 EQ
0x79 PUSH2 0x1ed
0x7c JUMPI
---
0x73: V37 = 0xce606ee0
0x78: V38 = EQ 0xce606ee0 V12
0x79: V39 = 0x1ed
0x7c: JUMPI 0x1ed V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x21c]
---
0x7d DUP1
0x7e PUSH4 0xd8f9659b
0x83 EQ
0x84 PUSH2 0x21c
0x87 JUMPI
---
0x7e: V40 = 0xd8f9659b
0x83: V41 = EQ 0xd8f9659b V12
0x84: V42 = 0x21c
0x87: JUMPI 0x21c V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x288]
---
0x88 DUP1
0x89 PUSH4 0xf07629f8
0x8e EQ
0x8f PUSH2 0x288
0x92 JUMPI
---
0x89: V43 = 0xf07629f8
0x8e: V44 = EQ 0xf07629f8 V12
0x8f: V45 = 0x288
0x92: JUMPI 0x288 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2b7]
---
0x93 DUP1
0x94 PUSH4 0xfcddd056
0x99 EQ
0x9a PUSH2 0x2b7
0x9d JUMPI
---
0x94: V46 = 0xfcddd056
0x99: V47 = EQ 0xfcddd056 V12
0x9a: V48 = 0x2b7
0x9d: JUMPI 0x2b7 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa2]
---
Predecessors: [0x0, 0x93]
Successors: []
---
0x9e JUMPDEST
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9e: JUMPDEST 
0x9f: V49 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3
[0xa3:0xa9]
---
Predecessors: [0xb]
Successors: [0xaa, 0xae]
---
0xa3 JUMPDEST
0xa4 CALLVALUE
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa3: JUMPDEST 
0xa4: V50 = CALLVALUE
0xa5: V51 = ISZERO V50
0xa6: V52 = 0xae
0xa9: JUMPI 0xae V51
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa3]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V53 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xae
[0xae:0xc1]
---
Predecessors: [0xa3]
Successors: [0x2dc]
---
0xae JUMPDEST
0xaf PUSH2 0xc2
0xb2 PUSH1 0x1
0xb4 PUSH1 0xa0
0xb6 PUSH1 0x2
0xb8 EXP
0xb9 SUB
0xba PUSH1 0x4
0xbc CALLDATALOAD
0xbd AND
0xbe PUSH2 0x2dc
0xc1 JUMP
---
0xae: JUMPDEST 
0xaf: V54 = 0xc2
0xb2: V55 = 0x1
0xb4: V56 = 0xa0
0xb6: V57 = 0x2
0xb8: V58 = EXP 0x2 0xa0
0xb9: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba: V60 = 0x4
0xbc: V61 = CALLDATALOAD 0x4
0xbd: V62 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V63 = 0x2dc
0xc1: JUMP 0x2dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V62]
Exit stack: [V12, 0xc2, V62]

================================

Block 0xc2
[0xc2:0xd3]
---
Predecessors: [0x357, 0x437, 0x441, 0x4a0, 0x692, 0x7a3]
Successors: []
---
0xc2 JUMPDEST
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 SWAP1
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc PUSH1 0x40
0xce MLOAD
0xcf DUP1
0xd0 SWAP2
0xd1 SUB
0xd2 SWAP1
0xd3 RETURN
---
0xc2: JUMPDEST 
0xc3: V64 = 0x40
0xc5: V65 = M[0x40]
0xc8: M[V65] = S0
0xc9: V66 = 0x20
0xcb: V67 = ADD 0x20 V65
0xcc: V68 = 0x40
0xce: V69 = M[0x40]
0xd1: V70 = SUB V67 V69
0xd3: RETURN V69 V70
---
Entry stack: [V12, 0xc2, V62, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc2, V62, S1]

================================

Block 0xd4
[0xd4:0xda]
---
Predecessors: [0x25]
Successors: [0xdb, 0xdf]
---
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 ISZERO
0xd7 PUSH2 0xdf
0xda JUMPI
---
0xd4: JUMPDEST 
0xd5: V71 = CALLVALUE
0xd6: V72 = ISZERO V71
0xd7: V73 = 0xdf
0xda: JUMPI 0xdf V72
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdb
[0xdb:0xde]
---
Predecessors: [0xd4]
Successors: []
---
0xdb PUSH1 0x0
0xdd DUP1
0xde REVERT
---
0xdb: V74 = 0x0
0xde: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdf
[0xdf:0xf2]
---
Predecessors: [0xd4]
Successors: [0x35c]
---
0xdf JUMPDEST
0xe0 PUSH2 0xc2
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb PUSH1 0x4
0xed CALLDATALOAD
0xee AND
0xef PUSH2 0x35c
0xf2 JUMP
---
0xdf: JUMPDEST 
0xe0: V75 = 0xc2
0xe3: V76 = 0x1
0xe5: V77 = 0xa0
0xe7: V78 = 0x2
0xe9: V79 = EXP 0x2 0xa0
0xea: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb: V81 = 0x4
0xed: V82 = CALLDATALOAD 0x4
0xee: V83 = AND V82 0xffffffffffffffffffffffffffffffffffffffff
0xef: V84 = 0x35c
0xf2: JUMP 0x35c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V83]
Exit stack: [V12, 0xc2, V83]

================================

Block 0xf3
[0xf3:0x104]
---
Predecessors: []
Successors: []
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 SWAP1
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP1
0x101 SWAP2
0x102 SUB
0x103 SWAP1
0x104 RETURN
---
0xf3: JUMPDEST 
0xf4: V85 = 0x40
0xf6: V86 = M[0x40]
0xf9: M[V86] = S0
0xfa: V87 = 0x20
0xfc: V88 = ADD 0x20 V86
0xfd: V89 = 0x40
0xff: V90 = M[0x40]
0x102: V91 = SUB V88 V90
0x104: RETURN V90 V91
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x105
[0x105:0x10b]
---
Predecessors: [0x30]
Successors: [0x10c, 0x110]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x105: JUMPDEST 
0x106: V92 = CALLVALUE
0x107: V93 = ISZERO V92
0x108: V94 = 0x110
0x10b: JUMPI 0x110 V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x105]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V95 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0x105]
Successors: [0x43d]
---
0x110 JUMPDEST
0x111 PUSH2 0xc2
0x114 PUSH2 0x43d
0x117 JUMP
---
0x110: JUMPDEST 
0x111: V96 = 0xc2
0x114: V97 = 0x43d
0x117: JUMP 0x43d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2]
Exit stack: [V12, 0xc2]

================================

Block 0x118
[0x118:0x129]
---
Predecessors: []
Successors: []
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b MLOAD
0x11c SWAP1
0x11d DUP2
0x11e MSTORE
0x11f PUSH1 0x20
0x121 ADD
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 SWAP2
0x127 SUB
0x128 SWAP1
0x129 RETURN
---
0x118: JUMPDEST 
0x119: V98 = 0x40
0x11b: V99 = M[0x40]
0x11e: M[V99] = S0
0x11f: V100 = 0x20
0x121: V101 = ADD 0x20 V99
0x122: V102 = 0x40
0x124: V103 = M[0x40]
0x127: V104 = SUB V101 V103
0x129: RETURN V103 V104
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x12a
[0x12a:0x130]
---
Predecessors: [0x3b]
Successors: [0x131, 0x135]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0x12a: JUMPDEST 
0x12b: V105 = CALLVALUE
0x12c: V106 = ISZERO V105
0x12d: V107 = 0x135
0x130: JUMPI 0x135 V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x12a]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V108 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x135
[0x135:0x13c]
---
Predecessors: [0x12a]
Successors: [0x444]
---
0x135 JUMPDEST
0x136 PUSH2 0x13d
0x139 PUSH2 0x444
0x13c JUMP
---
0x135: JUMPDEST 
0x136: V109 = 0x13d
0x139: V110 = 0x444
0x13c: JUMP 0x444
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13d]
Exit stack: [V12, 0x13d]

================================

Block 0x13d
[0x13d:0x150]
---
Predecessors: [0x357, 0x441, 0x499, 0x4ff]
Successors: []
---
0x13d JUMPDEST
0x13e PUSH1 0x40
0x140 MLOAD
0x141 SWAP1
0x142 ISZERO
0x143 ISZERO
0x144 DUP2
0x145 MSTORE
0x146 PUSH1 0x20
0x148 ADD
0x149 PUSH1 0x40
0x14b MLOAD
0x14c DUP1
0x14d SWAP2
0x14e SUB
0x14f SWAP1
0x150 RETURN
---
0x13d: JUMPDEST 
0x13e: V111 = 0x40
0x140: V112 = M[0x40]
0x142: V113 = ISZERO S0
0x143: V114 = ISZERO V113
0x145: M[V112] = V114
0x146: V115 = 0x20
0x148: V116 = ADD 0x20 V112
0x149: V117 = 0x40
0x14b: V118 = M[0x40]
0x14e: V119 = SUB V116 V118
0x150: RETURN V118 V119
---
Entry stack: [V12, 0xc2, V62, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc2, V62, S1]

================================

Block 0x151
[0x151:0x157]
---
Predecessors: [0x46]
Successors: [0x158, 0x15c]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x151: JUMPDEST 
0x152: V120 = CALLVALUE
0x153: V121 = ISZERO V120
0x154: V122 = 0x15c
0x157: JUMPI 0x15c V121
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x151]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V123 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x151]
Successors: [0x49c]
---
0x15c JUMPDEST
0x15d PUSH2 0xc2
0x160 PUSH2 0x49c
0x163 JUMP
---
0x15c: JUMPDEST 
0x15d: V124 = 0xc2
0x160: V125 = 0x49c
0x163: JUMP 0x49c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2]
Exit stack: [V12, 0xc2]

================================

Block 0x164
[0x164:0x175]
---
Predecessors: []
Successors: []
---
0x164 JUMPDEST
0x165 PUSH1 0x40
0x167 MLOAD
0x168 SWAP1
0x169 DUP2
0x16a MSTORE
0x16b PUSH1 0x20
0x16d ADD
0x16e PUSH1 0x40
0x170 MLOAD
0x171 DUP1
0x172 SWAP2
0x173 SUB
0x174 SWAP1
0x175 RETURN
---
0x164: JUMPDEST 
0x165: V126 = 0x40
0x167: V127 = M[0x40]
0x16a: M[V127] = S0
0x16b: V128 = 0x20
0x16d: V129 = ADD 0x20 V127
0x16e: V130 = 0x40
0x170: V131 = M[0x40]
0x173: V132 = SUB V129 V131
0x175: RETURN V131 V132
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x176
[0x176:0x17c]
---
Predecessors: [0x51]
Successors: [0x17d, 0x181]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x176: JUMPDEST 
0x177: V133 = CALLVALUE
0x178: V134 = ISZERO V133
0x179: V135 = 0x181
0x17c: JUMPI 0x181 V134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x176]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V136 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x181
[0x181:0x194]
---
Predecessors: [0x176]
Successors: [0x4a3]
---
0x181 JUMPDEST
0x182 PUSH2 0x13d
0x185 PUSH1 0x1
0x187 PUSH1 0xa0
0x189 PUSH1 0x2
0x18b EXP
0x18c SUB
0x18d PUSH1 0x4
0x18f CALLDATALOAD
0x190 AND
0x191 PUSH2 0x4a3
0x194 JUMP
---
0x181: JUMPDEST 
0x182: V137 = 0x13d
0x185: V138 = 0x1
0x187: V139 = 0xa0
0x189: V140 = 0x2
0x18b: V141 = EXP 0x2 0xa0
0x18c: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18d: V143 = 0x4
0x18f: V144 = CALLDATALOAD 0x4
0x190: V145 = AND V144 0xffffffffffffffffffffffffffffffffffffffff
0x191: V146 = 0x4a3
0x194: JUMP 0x4a3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13d, V145]
Exit stack: [V12, 0x13d, V145]

================================

Block 0x195
[0x195:0x1a8]
---
Predecessors: []
Successors: []
---
0x195 JUMPDEST
0x196 PUSH1 0x40
0x198 MLOAD
0x199 SWAP1
0x19a ISZERO
0x19b ISZERO
0x19c DUP2
0x19d MSTORE
0x19e PUSH1 0x20
0x1a0 ADD
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 DUP1
0x1a5 SWAP2
0x1a6 SUB
0x1a7 SWAP1
0x1a8 RETURN
---
0x195: JUMPDEST 
0x196: V147 = 0x40
0x198: V148 = M[0x40]
0x19a: V149 = ISZERO S0
0x19b: V150 = ISZERO V149
0x19d: M[V148] = V150
0x19e: V151 = 0x20
0x1a0: V152 = ADD 0x20 V148
0x1a1: V153 = 0x40
0x1a3: V154 = M[0x40]
0x1a6: V155 = SUB V152 V154
0x1a8: RETURN V154 V155
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a9
[0x1a9:0x1af]
---
Predecessors: [0x5c]
Successors: [0x1b0, 0x1b4]
---
0x1a9 JUMPDEST
0x1aa CALLVALUE
0x1ab ISZERO
0x1ac PUSH2 0x1b4
0x1af JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V156 = CALLVALUE
0x1ab: V157 = ISZERO V156
0x1ac: V158 = 0x1b4
0x1af: JUMPI 0x1b4 V157
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1b3]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 REVERT
---
0x1b0: V159 = 0x0
0x1b3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b4
[0x1b4:0x1bb]
---
Predecessors: [0x1a9]
Successors: [0x504]
---
0x1b4 JUMPDEST
0x1b5 PUSH2 0x1bc
0x1b8 PUSH2 0x504
0x1bb JUMP
---
0x1b4: JUMPDEST 
0x1b5: V160 = 0x1bc
0x1b8: V161 = 0x504
0x1bb: JUMP 0x504
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1bc]
Exit stack: [V12, 0x1bc]

================================

Block 0x1bc
[0x1bc:0x1d7]
---
Predecessors: [0x504, 0x53a, 0x69b]
Successors: []
---
0x1bc JUMPDEST
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 SWAP1
0x1c9 SWAP2
0x1ca AND
0x1cb DUP2
0x1cc MSTORE
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 SWAP2
0x1d5 SUB
0x1d6 SWAP1
0x1d7 RETURN
---
0x1bc: JUMPDEST 
0x1bd: V162 = 0x40
0x1bf: V163 = M[0x40]
0x1c0: V164 = 0x1
0x1c2: V165 = 0xa0
0x1c4: V166 = 0x2
0x1c6: V167 = EXP 0x2 0xa0
0x1c7: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ca: V169 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: M[V163] = V169
0x1cd: V170 = 0x20
0x1cf: V171 = ADD 0x20 V163
0x1d0: V172 = 0x40
0x1d2: V173 = M[0x40]
0x1d5: V174 = SUB V171 V173
0x1d7: RETURN V173 V174
---
Entry stack: [V12, 0x1bc, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1bc]

================================

Block 0x1d8
[0x1d8:0x1de]
---
Predecessors: [0x67]
Successors: [0x1df, 0x1e3]
---
0x1d8 JUMPDEST
0x1d9 CALLVALUE
0x1da ISZERO
0x1db PUSH2 0x1e3
0x1de JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V175 = CALLVALUE
0x1da: V176 = ISZERO V175
0x1db: V177 = 0x1e3
0x1de: JUMPI 0x1e3 V176
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1df
[0x1df:0x1e2]
---
Predecessors: [0x1d8]
Successors: []
---
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 REVERT
---
0x1df: V178 = 0x0
0x1e2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e3
[0x1e3:0x1ea]
---
Predecessors: [0x1d8]
Successors: [0x513]
---
0x1e3 JUMPDEST
0x1e4 PUSH2 0x1eb
0x1e7 PUSH2 0x513
0x1ea JUMP
---
0x1e3: JUMPDEST 
0x1e4: V179 = 0x1eb
0x1e7: V180 = 0x513
0x1ea: JUMP 0x513
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1eb]
Exit stack: [V12, 0x1eb]

================================

Block 0x1eb
[0x1eb:0x1ec]
---
Predecessors: [0x538]
Successors: []
---
0x1eb JUMPDEST
0x1ec STOP
---
0x1eb: JUMPDEST 
0x1ec: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ed
[0x1ed:0x1f3]
---
Predecessors: [0x72]
Successors: [0x1f4, 0x1f8]
---
0x1ed JUMPDEST
0x1ee CALLVALUE
0x1ef ISZERO
0x1f0 PUSH2 0x1f8
0x1f3 JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V181 = CALLVALUE
0x1ef: V182 = ISZERO V181
0x1f0: V183 = 0x1f8
0x1f3: JUMPI 0x1f8 V182
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f4
[0x1f4:0x1f7]
---
Predecessors: [0x1ed]
Successors: []
---
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 REVERT
---
0x1f4: V184 = 0x0
0x1f7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f8
[0x1f8:0x1ff]
---
Predecessors: [0x1ed]
Successors: [0x53a]
---
0x1f8 JUMPDEST
0x1f9 PUSH2 0x1bc
0x1fc PUSH2 0x53a
0x1ff JUMP
---
0x1f8: JUMPDEST 
0x1f9: V185 = 0x1bc
0x1fc: V186 = 0x53a
0x1ff: JUMP 0x53a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1bc]
Exit stack: [V12, 0x1bc]

================================

Block 0x200
[0x200:0x21b]
---
Predecessors: []
Successors: []
---
0x200 JUMPDEST
0x201 PUSH1 0x40
0x203 MLOAD
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c SWAP1
0x20d SWAP2
0x20e AND
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x20
0x213 ADD
0x214 PUSH1 0x40
0x216 MLOAD
0x217 DUP1
0x218 SWAP2
0x219 SUB
0x21a SWAP1
0x21b RETURN
---
0x200: JUMPDEST 
0x201: V187 = 0x40
0x203: V188 = M[0x40]
0x204: V189 = 0x1
0x206: V190 = 0xa0
0x208: V191 = 0x2
0x20a: V192 = EXP 0x2 0xa0
0x20b: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V194 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x210: M[V188] = V194
0x211: V195 = 0x20
0x213: V196 = ADD 0x20 V188
0x214: V197 = 0x40
0x216: V198 = M[0x40]
0x219: V199 = SUB V196 V198
0x21b: RETURN V198 V199
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x21c
[0x21c:0x222]
---
Predecessors: [0x7d]
Successors: [0x223, 0x227]
---
0x21c JUMPDEST
0x21d CALLVALUE
0x21e ISZERO
0x21f PUSH2 0x227
0x222 JUMPI
---
0x21c: JUMPDEST 
0x21d: V200 = CALLVALUE
0x21e: V201 = ISZERO V200
0x21f: V202 = 0x227
0x222: JUMPI 0x227 V201
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x223
[0x223:0x226]
---
Predecessors: [0x21c]
Successors: []
---
0x223 PUSH1 0x0
0x225 DUP1
0x226 REVERT
---
0x223: V203 = 0x0
0x226: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x227
[0x227:0x275]
---
Predecessors: [0x21c]
Successors: [0x549]
---
0x227 JUMPDEST
0x228 PUSH2 0xc2
0x22b PUSH1 0x4
0x22d PUSH1 0x24
0x22f DUP2
0x230 CALLDATALOAD
0x231 DUP2
0x232 DUP2
0x233 ADD
0x234 SWAP1
0x235 DUP4
0x236 ADD
0x237 CALLDATALOAD
0x238 DUP1
0x239 PUSH1 0x20
0x23b DUP2
0x23c DUP2
0x23d MUL
0x23e ADD
0x23f PUSH1 0x40
0x241 MLOAD
0x242 SWAP1
0x243 DUP2
0x244 ADD
0x245 PUSH1 0x40
0x247 MSTORE
0x248 DUP1
0x249 SWAP4
0x24a SWAP3
0x24b SWAP2
0x24c SWAP1
0x24d DUP2
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 DUP4
0x254 DUP4
0x255 PUSH1 0x20
0x257 MUL
0x258 DUP1
0x259 DUP3
0x25a DUP5
0x25b CALLDATACOPY
0x25c POP
0x25d SWAP5
0x25e SWAP7
0x25f POP
0x260 POP
0x261 POP
0x262 SWAP3
0x263 CALLDATALOAD
0x264 PUSH1 0x1
0x266 PUSH1 0xa0
0x268 PUSH1 0x2
0x26a EXP
0x26b SUB
0x26c AND
0x26d SWAP3
0x26e POP
0x26f PUSH2 0x549
0x272 SWAP2
0x273 POP
0x274 POP
0x275 JUMP
---
0x227: JUMPDEST 
0x228: V204 = 0xc2
0x22b: V205 = 0x4
0x22d: V206 = 0x24
0x230: V207 = CALLDATALOAD 0x4
0x233: V208 = ADD V207 0x24
0x236: V209 = ADD 0x4 V207
0x237: V210 = CALLDATALOAD V209
0x239: V211 = 0x20
0x23d: V212 = MUL 0x20 V210
0x23e: V213 = ADD V212 0x20
0x23f: V214 = 0x40
0x241: V215 = M[0x40]
0x244: V216 = ADD V215 V213
0x245: V217 = 0x40
0x247: M[0x40] = V216
0x24f: M[V215] = V210
0x250: V218 = 0x20
0x252: V219 = ADD 0x20 V215
0x255: V220 = 0x20
0x257: V221 = MUL 0x20 V210
0x25b: CALLDATACOPY V219 V208 V221
0x263: V222 = CALLDATALOAD 0x24
0x264: V223 = 0x1
0x266: V224 = 0xa0
0x268: V225 = 0x2
0x26a: V226 = EXP 0x2 0xa0
0x26b: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26c: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x26f: V229 = 0x549
0x275: JUMP 0x549
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2, V215, V228]
Exit stack: [V12, 0xc2, V215, V228]

================================

Block 0x276
[0x276:0x287]
---
Predecessors: []
Successors: []
---
0x276 JUMPDEST
0x277 PUSH1 0x40
0x279 MLOAD
0x27a SWAP1
0x27b DUP2
0x27c MSTORE
0x27d PUSH1 0x20
0x27f ADD
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 SWAP2
0x285 SUB
0x286 SWAP1
0x287 RETURN
---
0x276: JUMPDEST 
0x277: V230 = 0x40
0x279: V231 = M[0x40]
0x27c: M[V231] = S0
0x27d: V232 = 0x20
0x27f: V233 = ADD 0x20 V231
0x280: V234 = 0x40
0x282: V235 = M[0x40]
0x285: V236 = SUB V233 V235
0x287: RETURN V235 V236
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x288
[0x288:0x28e]
---
Predecessors: [0x88]
Successors: [0x28f, 0x293]
---
0x288 JUMPDEST
0x289 CALLVALUE
0x28a ISZERO
0x28b PUSH2 0x293
0x28e JUMPI
---
0x288: JUMPDEST 
0x289: V237 = CALLVALUE
0x28a: V238 = ISZERO V237
0x28b: V239 = 0x293
0x28e: JUMPI 0x293 V238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28f
[0x28f:0x292]
---
Predecessors: [0x288]
Successors: []
---
0x28f PUSH1 0x0
0x291 DUP1
0x292 REVERT
---
0x28f: V240 = 0x0
0x292: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x293
[0x293:0x29a]
---
Predecessors: [0x288]
Successors: [0x69b]
---
0x293 JUMPDEST
0x294 PUSH2 0x1bc
0x297 PUSH2 0x69b
0x29a JUMP
---
0x293: JUMPDEST 
0x294: V241 = 0x1bc
0x297: V242 = 0x69b
0x29a: JUMP 0x69b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1bc]
Exit stack: [V12, 0x1bc]

================================

Block 0x29b
[0x29b:0x2b6]
---
Predecessors: []
Successors: []
---
0x29b JUMPDEST
0x29c PUSH1 0x40
0x29e MLOAD
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 SWAP1
0x2a8 SWAP2
0x2a9 AND
0x2aa DUP2
0x2ab MSTORE
0x2ac PUSH1 0x20
0x2ae ADD
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 DUP1
0x2b3 SWAP2
0x2b4 SUB
0x2b5 SWAP1
0x2b6 RETURN
---
0x29b: JUMPDEST 
0x29c: V243 = 0x40
0x29e: V244 = M[0x40]
0x29f: V245 = 0x1
0x2a1: V246 = 0xa0
0x2a3: V247 = 0x2
0x2a5: V248 = EXP 0x2 0xa0
0x2a6: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a9: V250 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: M[V244] = V250
0x2ac: V251 = 0x20
0x2ae: V252 = ADD 0x20 V244
0x2af: V253 = 0x40
0x2b1: V254 = M[0x40]
0x2b4: V255 = SUB V252 V254
0x2b6: RETURN V254 V255
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b7
[0x2b7:0x2bd]
---
Predecessors: [0x93]
Successors: [0x2be, 0x2c2]
---
0x2b7 JUMPDEST
0x2b8 CALLVALUE
0x2b9 ISZERO
0x2ba PUSH2 0x2c2
0x2bd JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V256 = CALLVALUE
0x2b9: V257 = ISZERO V256
0x2ba: V258 = 0x2c2
0x2bd: JUMPI 0x2c2 V257
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2be
[0x2be:0x2c1]
---
Predecessors: [0x2b7]
Successors: []
---
0x2be PUSH1 0x0
0x2c0 DUP1
0x2c1 REVERT
---
0x2be: V259 = 0x0
0x2c1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c2
[0x2c2:0x2c9]
---
Predecessors: [0x2b7]
Successors: [0x6aa]
---
0x2c2 JUMPDEST
0x2c3 PUSH2 0xc2
0x2c6 PUSH2 0x6aa
0x2c9 JUMP
---
0x2c2: JUMPDEST 
0x2c3: V260 = 0xc2
0x2c6: V261 = 0x6aa
0x2c9: JUMP 0x6aa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc2]
Exit stack: [V12, 0xc2]

================================

Block 0x2ca
[0x2ca:0x2db]
---
Predecessors: []
Successors: []
---
0x2ca JUMPDEST
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce SWAP1
0x2cf DUP2
0x2d0 MSTORE
0x2d1 PUSH1 0x20
0x2d3 ADD
0x2d4 PUSH1 0x40
0x2d6 MLOAD
0x2d7 DUP1
0x2d8 SWAP2
0x2d9 SUB
0x2da SWAP1
0x2db RETURN
---
0x2ca: JUMPDEST 
0x2cb: V262 = 0x40
0x2cd: V263 = M[0x40]
0x2d0: M[V263] = S0
0x2d1: V264 = 0x20
0x2d3: V265 = ADD 0x20 V263
0x2d4: V266 = 0x40
0x2d6: V267 = M[0x40]
0x2d9: V268 = SUB V265 V267
0x2db: RETURN V267 V268
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2dc
[0x2dc:0x2e5]
---
Predecessors: [0xae]
Successors: [0x7a7]
---
0x2dc JUMPDEST
0x2dd PUSH1 0x0
0x2df PUSH2 0x2e6
0x2e2 PUSH2 0x7a7
0x2e5 JUMP
---
0x2dc: JUMPDEST 
0x2dd: V269 = 0x0
0x2df: V270 = 0x2e6
0x2e2: V271 = 0x7a7
0x2e5: JUMP 0x7a7
---
Entry stack: [V12, 0xc2, V62]
Stack pops: 0
Stack additions: [0x0, 0x2e6]
Exit stack: [V12, 0xc2, V62, 0x0, 0x2e6]

================================

Block 0x2e6
[0x2e6:0x2f0]
---
Predecessors: [0x441, 0x7cb]
Successors: [0x2f1, 0x2f5]
---
0x2e6 JUMPDEST
0x2e7 SWAP1
0x2e8 POP
0x2e9 PUSH1 0x1
0x2eb DUP2
0x2ec EQ
0x2ed PUSH2 0x2f5
0x2f0 JUMPI
---
0x2e6: JUMPDEST 
0x2e9: V272 = 0x1
0x2ec: V273 = EQ S0 0x1
0x2ed: V274 = 0x2f5
0x2f0: JUMPI 0x2f5 V273
---
Entry stack: [V12, 0xc2, V62, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xc2, V62, S0]

================================

Block 0x2f1
[0x2f1:0x2f4]
---
Predecessors: [0x2e6]
Successors: [0x357]
---
0x2f1 PUSH2 0x357
0x2f4 JUMP
---
0x2f1: V275 = 0x357
0x2f4: JUMP 0x357
---
Entry stack: [V12, 0xc2, V62, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V62, S0]

================================

Block 0x2f5
[0x2f5:0x309]
---
Predecessors: [0x2e6]
Successors: [0x30a, 0x31d]
---
0x2f5 JUMPDEST
0x2f6 PUSH1 0x2
0x2f8 SLOAD
0x2f9 PUSH1 0x1
0x2fb PUSH1 0xa0
0x2fd PUSH1 0x2
0x2ff EXP
0x300 SUB
0x301 AND
0x302 ISZERO
0x303 DUP1
0x304 ISZERO
0x305 SWAP1
0x306 PUSH2 0x31d
0x309 JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V276 = 0x2
0x2f8: V277 = S[0x2]
0x2f9: V278 = 0x1
0x2fb: V279 = 0xa0
0x2fd: V280 = 0x2
0x2ff: V281 = EXP 0x2 0xa0
0x300: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x301: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x302: V284 = ISZERO V283
0x304: V285 = ISZERO V284
0x306: V286 = 0x31d
0x309: JUMPI 0x31d V284
---
Entry stack: [V12, 0xc2, V62, S0]
Stack pops: 0
Stack additions: [V285]
Exit stack: [V12, 0xc2, V62, S0, V285]

================================

Block 0x30a
[0x30a:0x31c]
---
Predecessors: [0x2f5]
Successors: [0x31d]
---
0x30a POP
0x30b PUSH1 0x2
0x30d SLOAD
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 DUP4
0x317 DUP2
0x318 AND
0x319 SWAP2
0x31a AND
0x31b EQ
0x31c ISZERO
---
0x30b: V287 = 0x2
0x30d: V288 = S[0x2]
0x30e: V289 = 0x1
0x310: V290 = 0xa0
0x312: V291 = 0x2
0x314: V292 = EXP 0x2 0xa0
0x315: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x31a: V295 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V296 = EQ V295 V294
0x31c: V297 = ISZERO V296
---
Entry stack: [V12, 0xc2, V62, S1, V285]
Stack pops: 3
Stack additions: [S2, S1, V297]
Exit stack: [V12, 0xc2, V62, S1, V297]

================================

Block 0x31d
[0x31d:0x322]
---
Predecessors: [0x2f5, 0x30a]
Successors: [0x323, 0x32b]
---
0x31d JUMPDEST
0x31e ISZERO
0x31f PUSH2 0x32b
0x322 JUMPI
---
0x31d: JUMPDEST 
0x31e: V298 = ISZERO S0
0x31f: V299 = 0x32b
0x322: JUMPI 0x32b V298
---
Entry stack: [V12, 0xc2, V62, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc2, V62, S1]

================================

Block 0x323
[0x323:0x32a]
---
Predecessors: [0x31d]
Successors: [0x357]
---
0x323 POP
0x324 PUSH2 0xc749
0x327 PUSH2 0x357
0x32a JUMP
---
0x324: V300 = 0xc749
0x327: V301 = 0x357
0x32a: JUMP 0x357
---
Entry stack: [V12, 0xc2, V62, S0]
Stack pops: 1
Stack additions: [0xc749]
Exit stack: [V12, 0xc2, V62, 0xc749]

================================

Block 0x32b
[0x32b:0x356]
---
Predecessors: [0x31d]
Successors: [0x357]
---
0x32b JUMPDEST
0x32c POP
0x32d PUSH1 0x2
0x32f DUP1
0x330 SLOAD
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 NOT
0x347 AND
0x348 PUSH1 0x1
0x34a PUSH1 0xa0
0x34c PUSH1 0x2
0x34e EXP
0x34f SUB
0x350 DUP4
0x351 AND
0x352 OR
0x353 SWAP1
0x354 SSTORE
0x355 PUSH1 0x1
---
0x32b: JUMPDEST 
0x32d: V302 = 0x2
0x330: V303 = S[0x2]
0x331: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V305 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x347: V306 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V303
0x348: V307 = 0x1
0x34a: V308 = 0xa0
0x34c: V309 = 0x2
0x34e: V310 = EXP 0x2 0xa0
0x34f: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V312 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x352: V313 = OR V312 V306
0x354: S[0x2] = V313
0x355: V314 = 0x1
---
Entry stack: [V12, 0xc2, V62, S0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0xc2, V62, 0x1]

================================

Block 0x357
[0x357:0x35b]
---
Predecessors: [0x2f1, 0x323, 0x32b, 0x4a3, 0x4cc]
Successors: [0xc2, 0x13d]
---
0x357 JUMPDEST
0x358 SWAP2
0x359 SWAP1
0x35a POP
0x35b JUMP
---
0x357: JUMPDEST 
0x35b: JUMP {0xc2, 0x13d}
---
Entry stack: [V12, {0xc2, 0x13d}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x35c
[0x35c:0x376]
---
Predecessors: [0xdf]
Successors: [0x377, 0x435]
---
0x35c JUMPDEST
0x35d PUSH1 0x0
0x35f DUP1
0x360 SLOAD
0x361 DUP2
0x362 SWAP1
0x363 CALLER
0x364 PUSH1 0x1
0x366 PUSH1 0xa0
0x368 PUSH1 0x2
0x36a EXP
0x36b SUB
0x36c SWAP1
0x36d DUP2
0x36e AND
0x36f SWAP2
0x370 AND
0x371 EQ
0x372 ISZERO
0x373 PUSH2 0x435
0x376 JUMPI
---
0x35c: JUMPDEST 
0x35d: V315 = 0x0
0x360: V316 = S[0x0]
0x363: V317 = CALLER
0x364: V318 = 0x1
0x366: V319 = 0xa0
0x368: V320 = 0x2
0x36a: V321 = EXP 0x2 0xa0
0x36b: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36e: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x370: V324 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x371: V325 = EQ V324 V323
0x372: V326 = ISZERO V325
0x373: V327 = 0x435
0x376: JUMPI 0x435 V326
---
Entry stack: [V12, 0xc2, V83]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xc2, V83, 0x0, 0x0]

================================

Block 0x377
[0x377:0x384]
---
Predecessors: [0x35c]
Successors: [0x385, 0x38e]
---
0x377 POP
0x378 PUSH1 0x4
0x37a SLOAD
0x37b PUSH1 0x5
0x37d SLOAD
0x37e TIMESTAMP
0x37f LT
0x380 ISZERO
0x381 PUSH2 0x38e
0x384 JUMPI
---
0x378: V328 = 0x4
0x37a: V329 = S[0x4]
0x37b: V330 = 0x5
0x37d: V331 = S[0x5]
0x37e: V332 = TIMESTAMP
0x37f: V333 = LT V332 V331
0x380: V334 = ISZERO V333
0x381: V335 = 0x38e
0x384: JUMPI 0x38e V334
---
Entry stack: [V12, 0xc2, V83, 0x0, 0x0]
Stack pops: 1
Stack additions: [V329]
Exit stack: [V12, 0xc2, V83, 0x0, V329]

================================

Block 0x385
[0x385:0x38d]
---
Predecessors: [0x377]
Successors: [0x435]
---
0x385 PUSH2 0xc745
0x388 SWAP2
0x389 POP
0x38a PUSH2 0x435
0x38d JUMP
---
0x385: V336 = 0xc745
0x38a: V337 = 0x435
0x38d: JUMP 0x435
---
Entry stack: [V12, 0xc2, V83, 0x0, V329]
Stack pops: 2
Stack additions: [0xc745, S0]
Exit stack: [V12, 0xc2, V83, 0xc745, V329]

================================

Block 0x38e
[0x38e:0x395]
---
Predecessors: [0x377]
Successors: [0x396, 0x39f]
---
0x38e JUMPDEST
0x38f DUP1
0x390 ISZERO
0x391 ISZERO
0x392 PUSH2 0x39f
0x395 JUMPI
---
0x38e: JUMPDEST 
0x390: V338 = ISZERO V329
0x391: V339 = ISZERO V338
0x392: V340 = 0x39f
0x395: JUMPI 0x39f V339
---
Entry stack: [V12, 0xc2, V83, 0x0, V329]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc2, V83, 0x0, V329]

================================

Block 0x396
[0x396:0x39e]
---
Predecessors: [0x38e]
Successors: [0x435]
---
0x396 PUSH2 0xc744
0x399 SWAP2
0x39a POP
0x39b PUSH2 0x435
0x39e JUMP
---
0x396: V341 = 0xc744
0x39b: V342 = 0x435
0x39e: JUMP 0x435
---
Entry stack: [V12, 0xc2, V83, 0x0, V329]
Stack pops: 2
Stack additions: [0xc744, S0]
Exit stack: [V12, 0xc2, V83, 0xc744, V329]

================================

Block 0x39f
[0x39f:0x3f9]
---
Predecessors: [0x38e]
Successors: [0x3fa, 0x3fe]
---
0x39f JUMPDEST
0x3a0 PUSH1 0x3
0x3a2 SLOAD
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0xa0
0x3a7 PUSH1 0x2
0x3a9 EXP
0x3aa SUB
0x3ab AND
0x3ac PUSH4 0xa9059cbb
0x3b1 DUP5
0x3b2 DUP4
0x3b3 PUSH1 0x0
0x3b5 PUSH1 0x40
0x3b7 MLOAD
0x3b8 PUSH1 0x20
0x3ba ADD
0x3bb MSTORE
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf PUSH1 0xe0
0x3c1 PUSH1 0x2
0x3c3 EXP
0x3c4 PUSH4 0xffffffff
0x3c9 DUP6
0x3ca AND
0x3cb MUL
0x3cc DUP2
0x3cd MSTORE
0x3ce PUSH1 0x1
0x3d0 PUSH1 0xa0
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 SUB
0x3d6 SWAP1
0x3d7 SWAP3
0x3d8 AND
0x3d9 PUSH1 0x4
0x3db DUP4
0x3dc ADD
0x3dd MSTORE
0x3de PUSH1 0x24
0x3e0 DUP3
0x3e1 ADD
0x3e2 MSTORE
0x3e3 PUSH1 0x44
0x3e5 ADD
0x3e6 PUSH1 0x20
0x3e8 PUSH1 0x40
0x3ea MLOAD
0x3eb DUP1
0x3ec DUP4
0x3ed SUB
0x3ee DUP2
0x3ef PUSH1 0x0
0x3f1 DUP8
0x3f2 DUP1
0x3f3 EXTCODESIZE
0x3f4 ISZERO
0x3f5 ISZERO
0x3f6 PUSH2 0x3fe
0x3f9 JUMPI
---
0x39f: JUMPDEST 
0x3a0: V343 = 0x3
0x3a2: V344 = S[0x3]
0x3a3: V345 = 0x1
0x3a5: V346 = 0xa0
0x3a7: V347 = 0x2
0x3a9: V348 = EXP 0x2 0xa0
0x3aa: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ab: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x3ac: V351 = 0xa9059cbb
0x3b3: V352 = 0x0
0x3b5: V353 = 0x40
0x3b7: V354 = M[0x40]
0x3b8: V355 = 0x20
0x3ba: V356 = ADD 0x20 V354
0x3bb: M[V356] = 0x0
0x3bc: V357 = 0x40
0x3be: V358 = M[0x40]
0x3bf: V359 = 0xe0
0x3c1: V360 = 0x2
0x3c3: V361 = EXP 0x2 0xe0
0x3c4: V362 = 0xffffffff
0x3ca: V363 = AND 0xa9059cbb 0xffffffff
0x3cb: V364 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3cd: M[V358] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3ce: V365 = 0x1
0x3d0: V366 = 0xa0
0x3d2: V367 = 0x2
0x3d4: V368 = EXP 0x2 0xa0
0x3d5: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d8: V370 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V371 = 0x4
0x3dc: V372 = ADD V358 0x4
0x3dd: M[V372] = V370
0x3de: V373 = 0x24
0x3e1: V374 = ADD V358 0x24
0x3e2: M[V374] = V329
0x3e3: V375 = 0x44
0x3e5: V376 = ADD 0x44 V358
0x3e6: V377 = 0x20
0x3e8: V378 = 0x40
0x3ea: V379 = M[0x40]
0x3ed: V380 = SUB V376 V379
0x3ef: V381 = 0x0
0x3f3: V382 = EXTCODESIZE V350
0x3f4: V383 = ISZERO V382
0x3f5: V384 = ISZERO V383
0x3f6: V385 = 0x3fe
0x3f9: JUMPI 0x3fe V384
---
Entry stack: [V12, 0xc2, V83, 0x0, V329]
Stack pops: 3
Stack additions: [S2, S1, S0, V350, 0xa9059cbb, V376, 0x20, V379, V380, V379, 0x0, V350]
Exit stack: [V12, 0xc2, V83, 0x0, V329, V350, 0xa9059cbb, V376, 0x20, V379, V380, V379, 0x0, V350]

================================

Block 0x3fa
[0x3fa:0x3fd]
---
Predecessors: [0x39f]
Successors: []
---
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd REVERT
---
0x3fa: V386 = 0x0
0x3fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V83, 0x0, V329, V350, 0xa9059cbb, V376, 0x20, V379, V380, V379, 0x0, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V83, 0x0, V329, V350, 0xa9059cbb, V376, 0x20, V379, V380, V379, 0x0, V350]

================================

Block 0x3fe
[0x3fe:0x40a]
---
Predecessors: [0x39f]
Successors: [0x40b, 0x40f]
---
0x3fe JUMPDEST
0x3ff PUSH2 0x2c6
0x402 GAS
0x403 SUB
0x404 CALL
0x405 ISZERO
0x406 ISZERO
0x407 PUSH2 0x40f
0x40a JUMPI
---
0x3fe: JUMPDEST 
0x3ff: V387 = 0x2c6
0x402: V388 = GAS
0x403: V389 = SUB V388 0x2c6
0x404: V390 = CALL V389 V350 0x0 V379 V380 V379 0x20
0x405: V391 = ISZERO V390
0x406: V392 = ISZERO V391
0x407: V393 = 0x40f
0x40a: JUMPI 0x40f V392
---
Entry stack: [V12, 0xc2, V83, 0x0, V329, V350, 0xa9059cbb, V376, 0x20, V379, V380, V379, 0x0, V350]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V83, 0x0, V329, V350, 0xa9059cbb, V376]

================================

Block 0x40b
[0x40b:0x40e]
---
Predecessors: [0x3fe]
Successors: []
---
0x40b PUSH1 0x0
0x40d DUP1
0x40e REVERT
---
0x40b: V394 = 0x0
0x40e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V83, 0x0, V329, V350, 0xa9059cbb, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V83, 0x0, V329, V350, 0xa9059cbb, V376]

================================

Block 0x40f
[0x40f:0x41f]
---
Predecessors: [0x3fe]
Successors: [0x420, 0x429]
---
0x40f JUMPDEST
0x410 POP
0x411 POP
0x412 POP
0x413 PUSH1 0x40
0x415 MLOAD
0x416 DUP1
0x417 MLOAD
0x418 SWAP1
0x419 POP
0x41a ISZERO
0x41b ISZERO
0x41c PUSH2 0x429
0x41f JUMPI
---
0x40f: JUMPDEST 
0x413: V395 = 0x40
0x415: V396 = M[0x40]
0x417: V397 = M[V396]
0x41a: V398 = ISZERO V397
0x41b: V399 = ISZERO V398
0x41c: V400 = 0x429
0x41f: JUMPI 0x429 V399
---
Entry stack: [V12, 0xc2, V83, 0x0, V329, V350, 0xa9059cbb, V376]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xc2, V83, 0x0, V329]

================================

Block 0x420
[0x420:0x428]
---
Predecessors: [0x40f]
Successors: [0x435]
---
0x420 PUSH2 0xc742
0x423 SWAP2
0x424 POP
0x425 PUSH2 0x435
0x428 JUMP
---
0x420: V401 = 0xc742
0x425: V402 = 0x435
0x428: JUMP 0x435
---
Entry stack: [V12, 0xc2, V83, 0x0, V329]
Stack pops: 2
Stack additions: [0xc742, S0]
Exit stack: [V12, 0xc2, V83, 0xc742, V329]

================================

Block 0x429
[0x429:0x434]
---
Predecessors: [0x40f]
Successors: []
---
0x429 JUMPDEST
0x42a CALLER
0x42b PUSH1 0x1
0x42d PUSH1 0xa0
0x42f PUSH1 0x2
0x431 EXP
0x432 SUB
0x433 AND
0x434 SELFDESTRUCT
---
0x429: JUMPDEST 
0x42a: V403 = CALLER
0x42b: V404 = 0x1
0x42d: V405 = 0xa0
0x42f: V406 = 0x2
0x431: V407 = EXP 0x2 0xa0
0x432: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x433: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x434: SELFDESTRUCT V409
---
Entry stack: [V12, 0xc2, V83, 0x0, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V83, 0x0, V329]

================================

Block 0x435
[0x435:0x435]
---
Predecessors: [0x35c, 0x385, 0x396, 0x420]
Successors: [0x436]
---
0x435 JUMPDEST
---
0x435: JUMPDEST 
---
Entry stack: [V12, 0xc2, V83, {0x0, 0xc742, 0xc744, 0xc745}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V83, {0x0, 0xc742, 0xc744, 0xc745}, S0]

================================

Block 0x436
[0x436:0x436]
---
Predecessors: [0x435]
Successors: [0x437]
---
0x436 JUMPDEST
---
0x436: JUMPDEST 
---
Entry stack: [V12, 0xc2, V83, {0x0, 0xc742, 0xc744, 0xc745}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V83, {0x0, 0xc742, 0xc744, 0xc745}, S0]

================================

Block 0x437
[0x437:0x43c]
---
Predecessors: [0x436]
Successors: [0xc2]
---
0x437 JUMPDEST
0x438 POP
0x439 SWAP2
0x43a SWAP1
0x43b POP
0x43c JUMP
---
0x437: JUMPDEST 
0x43c: JUMP 0xc2
---
Entry stack: [V12, 0xc2, V83, {0x0, 0xc742, 0xc744, 0xc745}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, {0x0, 0xc742, 0xc744, 0xc745}]

================================

Block 0x43d
[0x43d:0x440]
---
Predecessors: [0x110]
Successors: [0x441]
---
0x43d JUMPDEST
0x43e PUSH1 0x4
0x440 SLOAD
---
0x43d: JUMPDEST 
0x43e: V410 = 0x4
0x440: V411 = S[0x4]
---
Entry stack: [V12, 0xc2]
Stack pops: 0
Stack additions: [V411]
Exit stack: [V12, 0xc2, V411]

================================

Block 0x441
[0x441:0x443]
---
Predecessors: [0x43d, 0x45e, 0x7c0]
Successors: [0xc2, 0x13d, 0x2e6]
---
0x441 JUMPDEST
0x442 SWAP1
0x443 JUMP
---
0x441: JUMPDEST 
0x443: JUMP {0xc2, 0x13d, 0x2e6}
---
Entry stack: [V12, 0xc2, V62, S2, {0xc2, 0x13d, 0x2e6}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xc2, V62, S2, S0]

================================

Block 0x444
[0x444:0x45d]
---
Predecessors: [0x135]
Successors: [0x45e, 0x465]
---
0x444 JUMPDEST
0x445 PUSH1 0x1
0x447 SLOAD
0x448 PUSH1 0x0
0x44a SWAP1
0x44b CALLER
0x44c PUSH1 0x1
0x44e PUSH1 0xa0
0x450 PUSH1 0x2
0x452 EXP
0x453 SUB
0x454 SWAP1
0x455 DUP2
0x456 AND
0x457 SWAP2
0x458 AND
0x459 EQ
0x45a PUSH2 0x465
0x45d JUMPI
---
0x444: JUMPDEST 
0x445: V412 = 0x1
0x447: V413 = S[0x1]
0x448: V414 = 0x0
0x44b: V415 = CALLER
0x44c: V416 = 0x1
0x44e: V417 = 0xa0
0x450: V418 = 0x2
0x452: V419 = EXP 0x2 0xa0
0x453: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x456: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x458: V422 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x459: V423 = EQ V422 V421
0x45a: V424 = 0x465
0x45d: JUMPI 0x465 V423
---
Entry stack: [V12, 0x13d]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x13d, 0x0]

================================

Block 0x45e
[0x45e:0x464]
---
Predecessors: [0x444]
Successors: [0x441]
---
0x45e POP
0x45f PUSH1 0x0
0x461 PUSH2 0x441
0x464 JUMP
---
0x45f: V425 = 0x0
0x461: V426 = 0x441
0x464: JUMP 0x441
---
Entry stack: [V12, 0x13d, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x13d, 0x0]

================================

Block 0x465
[0x465:0x498]
---
Predecessors: [0x444]
Successors: [0x499]
---
0x465 JUMPDEST
0x466 POP
0x467 PUSH1 0x1
0x469 DUP1
0x46a SLOAD
0x46b PUSH1 0x0
0x46d DUP1
0x46e SLOAD
0x46f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x484 NOT
0x485 SWAP1
0x486 DUP2
0x487 AND
0x488 PUSH1 0x1
0x48a PUSH1 0xa0
0x48c PUSH1 0x2
0x48e EXP
0x48f SUB
0x490 DUP5
0x491 AND
0x492 OR
0x493 SWAP1
0x494 SWAP2
0x495 SSTORE
0x496 AND
0x497 DUP2
0x498 SSTORE
---
0x465: JUMPDEST 
0x467: V427 = 0x1
0x46a: V428 = S[0x1]
0x46b: V429 = 0x0
0x46e: V430 = S[0x0]
0x46f: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x484: V432 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x487: V433 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V430
0x488: V434 = 0x1
0x48a: V435 = 0xa0
0x48c: V436 = 0x2
0x48e: V437 = EXP 0x2 0xa0
0x48f: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x491: V439 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x492: V440 = OR V439 V433
0x495: S[0x0] = V440
0x496: V441 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V428
0x498: S[0x1] = V441
---
Entry stack: [V12, 0x13d, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x13d, 0x1]

================================

Block 0x499
[0x499:0x49b]
---
Predecessors: [0x465]
Successors: [0x13d]
---
0x499 JUMPDEST
0x49a SWAP1
0x49b JUMP
---
0x499: JUMPDEST 
0x49b: JUMP 0x13d
---
Entry stack: [V12, 0x13d, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x49c
[0x49c:0x49f]
---
Predecessors: [0x15c]
Successors: [0x4a0]
---
0x49c JUMPDEST
0x49d PUSH1 0x5
0x49f SLOAD
---
0x49c: JUMPDEST 
0x49d: V442 = 0x5
0x49f: V443 = S[0x5]
---
Entry stack: [V12, 0xc2]
Stack pops: 0
Stack additions: [V443]
Exit stack: [V12, 0xc2, V443]

================================

Block 0x4a0
[0x4a0:0x4a2]
---
Predecessors: [0x49c]
Successors: [0xc2]
---
0x4a0 JUMPDEST
0x4a1 SWAP1
0x4a2 JUMP
---
0x4a0: JUMPDEST 
0x4a2: JUMP 0xc2
---
Entry stack: [V12, 0xc2, V443]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V443]

================================

Block 0x4a3
[0x4a3:0x4bb]
---
Predecessors: [0x181]
Successors: [0x357, 0x4bc]
---
0x4a3 JUMPDEST
0x4a4 PUSH1 0x0
0x4a6 DUP1
0x4a7 SLOAD
0x4a8 CALLER
0x4a9 PUSH1 0x1
0x4ab PUSH1 0xa0
0x4ad PUSH1 0x2
0x4af EXP
0x4b0 SUB
0x4b1 SWAP1
0x4b2 DUP2
0x4b3 AND
0x4b4 SWAP2
0x4b5 AND
0x4b6 EQ
0x4b7 ISZERO
0x4b8 PUSH2 0x357
0x4bb JUMPI
---
0x4a3: JUMPDEST 
0x4a4: V444 = 0x0
0x4a7: V445 = S[0x0]
0x4a8: V446 = CALLER
0x4a9: V447 = 0x1
0x4ab: V448 = 0xa0
0x4ad: V449 = 0x2
0x4af: V450 = EXP 0x2 0xa0
0x4b0: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b3: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x4b5: V453 = AND V445 0xffffffffffffffffffffffffffffffffffffffff
0x4b6: V454 = EQ V453 V452
0x4b7: V455 = ISZERO V454
0x4b8: V456 = 0x357
0x4bb: JUMPI 0x357 V455
---
Entry stack: [V12, 0x13d, V145]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x13d, V145, 0x0]

================================

Block 0x4bc
[0x4bc:0x4cb]
---
Predecessors: [0x4a3]
Successors: [0x4cc, 0x4d3]
---
0x4bc PUSH1 0x1
0x4be PUSH1 0xa0
0x4c0 PUSH1 0x2
0x4c2 EXP
0x4c3 SUB
0x4c4 DUP3
0x4c5 AND
0x4c6 ISZERO
0x4c7 ISZERO
0x4c8 PUSH2 0x4d3
0x4cb JUMPI
---
0x4bc: V457 = 0x1
0x4be: V458 = 0xa0
0x4c0: V459 = 0x2
0x4c2: V460 = EXP 0x2 0xa0
0x4c3: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c5: V462 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x4c6: V463 = ISZERO V462
0x4c7: V464 = ISZERO V463
0x4c8: V465 = 0x4d3
0x4cb: JUMPI 0x4d3 V464
---
Entry stack: [V12, 0x13d, V145, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x13d, V145, 0x0]

================================

Block 0x4cc
[0x4cc:0x4d2]
---
Predecessors: [0x4bc]
Successors: [0x357]
---
0x4cc POP
0x4cd PUSH1 0x0
0x4cf PUSH2 0x357
0x4d2 JUMP
---
0x4cd: V466 = 0x0
0x4cf: V467 = 0x357
0x4d2: JUMP 0x357
---
Entry stack: [V12, 0x13d, V145, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x13d, V145, 0x0]

================================

Block 0x4d3
[0x4d3:0x4fc]
---
Predecessors: [0x4bc]
Successors: [0x4fd]
---
0x4d3 JUMPDEST
0x4d4 POP
0x4d5 PUSH1 0x1
0x4d7 DUP1
0x4d8 SLOAD
0x4d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ee NOT
0x4ef AND
0x4f0 PUSH1 0x1
0x4f2 PUSH1 0xa0
0x4f4 PUSH1 0x2
0x4f6 EXP
0x4f7 SUB
0x4f8 DUP4
0x4f9 AND
0x4fa OR
0x4fb DUP2
0x4fc SSTORE
---
0x4d3: JUMPDEST 
0x4d5: V468 = 0x1
0x4d8: V469 = S[0x1]
0x4d9: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: V471 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4ef: V472 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V469
0x4f0: V473 = 0x1
0x4f2: V474 = 0xa0
0x4f4: V475 = 0x2
0x4f6: V476 = EXP 0x2 0xa0
0x4f7: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f9: V478 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V479 = OR V478 V472
0x4fc: S[0x1] = V479
---
Entry stack: [V12, 0x13d, V145, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x13d, V145, 0x1]

================================

Block 0x4fd
[0x4fd:0x4fd]
---
Predecessors: [0x4d3]
Successors: [0x4fe]
---
0x4fd JUMPDEST
---
0x4fd: JUMPDEST 
---
Entry stack: [V12, 0x13d, V145, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d, V145, 0x1]

================================

Block 0x4fe
[0x4fe:0x4fe]
---
Predecessors: [0x4fd]
Successors: [0x4ff]
---
0x4fe JUMPDEST
---
0x4fe: JUMPDEST 
---
Entry stack: [V12, 0x13d, V145, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13d, V145, 0x1]

================================

Block 0x4ff
[0x4ff:0x503]
---
Predecessors: [0x4fe]
Successors: [0x13d]
---
0x4ff JUMPDEST
0x500 SWAP2
0x501 SWAP1
0x502 POP
0x503 JUMP
---
0x4ff: JUMPDEST 
0x503: JUMP 0x13d
---
Entry stack: [V12, 0x13d, V145, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x504
[0x504:0x512]
---
Predecessors: [0x1b4]
Successors: [0x1bc]
---
0x504 JUMPDEST
0x505 PUSH1 0x1
0x507 SLOAD
0x508 PUSH1 0x1
0x50a PUSH1 0xa0
0x50c PUSH1 0x2
0x50e EXP
0x50f SUB
0x510 AND
0x511 DUP2
0x512 JUMP
---
0x504: JUMPDEST 
0x505: V480 = 0x1
0x507: V481 = S[0x1]
0x508: V482 = 0x1
0x50a: V483 = 0xa0
0x50c: V484 = 0x2
0x50e: V485 = EXP 0x2 0xa0
0x50f: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x510: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x512: JUMP 0x1bc
---
Entry stack: [V12, 0x1bc]
Stack pops: 1
Stack additions: [S0, V487]
Exit stack: [V12, 0x1bc, V487]

================================

Block 0x513
[0x513:0x52a]
---
Predecessors: [0x1e3]
Successors: [0x52b, 0x536]
---
0x513 JUMPDEST
0x514 PUSH1 0x0
0x516 SLOAD
0x517 CALLER
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 SWAP1
0x521 DUP2
0x522 AND
0x523 SWAP2
0x524 AND
0x525 EQ
0x526 ISZERO
0x527 PUSH2 0x536
0x52a JUMPI
---
0x513: JUMPDEST 
0x514: V488 = 0x0
0x516: V489 = S[0x0]
0x517: V490 = CALLER
0x518: V491 = 0x1
0x51a: V492 = 0xa0
0x51c: V493 = 0x2
0x51e: V494 = EXP 0x2 0xa0
0x51f: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x522: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x524: V497 = AND V489 0xffffffffffffffffffffffffffffffffffffffff
0x525: V498 = EQ V497 V496
0x526: V499 = ISZERO V498
0x527: V500 = 0x536
0x52a: JUMPI 0x536 V499
---
Entry stack: [V12, 0x1eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1eb]

================================

Block 0x52b
[0x52b:0x535]
---
Predecessors: [0x513]
Successors: []
---
0x52b CALLER
0x52c PUSH1 0x1
0x52e PUSH1 0xa0
0x530 PUSH1 0x2
0x532 EXP
0x533 SUB
0x534 AND
0x535 SELFDESTRUCT
---
0x52b: V501 = CALLER
0x52c: V502 = 0x1
0x52e: V503 = 0xa0
0x530: V504 = 0x2
0x532: V505 = EXP 0x2 0xa0
0x533: V506 = SUB 0x10000000000000000000000000000000000000000 0x1
0x534: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x535: SELFDESTRUCT V507
---
Entry stack: [V12, 0x1eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1eb]

================================

Block 0x536
[0x536:0x536]
---
Predecessors: [0x513]
Successors: [0x537]
---
0x536 JUMPDEST
---
0x536: JUMPDEST 
---
Entry stack: [V12, 0x1eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1eb]

================================

Block 0x537
[0x537:0x537]
---
Predecessors: [0x536]
Successors: [0x538]
---
0x537 JUMPDEST
---
0x537: JUMPDEST 
---
Entry stack: [V12, 0x1eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1eb]

================================

Block 0x538
[0x538:0x539]
---
Predecessors: [0x537]
Successors: [0x1eb]
---
0x538 JUMPDEST
0x539 JUMP
---
0x538: JUMPDEST 
0x539: JUMP 0x1eb
---
Entry stack: [V12, 0x1eb]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x53a
[0x53a:0x548]
---
Predecessors: [0x1f8]
Successors: [0x1bc]
---
0x53a JUMPDEST
0x53b PUSH1 0x0
0x53d SLOAD
0x53e PUSH1 0x1
0x540 PUSH1 0xa0
0x542 PUSH1 0x2
0x544 EXP
0x545 SUB
0x546 AND
0x547 DUP2
0x548 JUMP
---
0x53a: JUMPDEST 
0x53b: V508 = 0x0
0x53d: V509 = S[0x0]
0x53e: V510 = 0x1
0x540: V511 = 0xa0
0x542: V512 = 0x2
0x544: V513 = EXP 0x2 0xa0
0x545: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x546: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x548: JUMP 0x1bc
---
Entry stack: [V12, 0x1bc]
Stack pops: 1
Stack additions: [S0, V515]
Exit stack: [V12, 0x1bc, V515]

================================

Block 0x549
[0x549:0x567]
---
Predecessors: [0x227]
Successors: [0x568, 0x690]
---
0x549 JUMPDEST
0x54a PUSH1 0x0
0x54c DUP1
0x54d SLOAD
0x54e DUP2
0x54f SWAP1
0x550 DUP2
0x551 SWAP1
0x552 DUP2
0x553 SWAP1
0x554 CALLER
0x555 PUSH1 0x1
0x557 PUSH1 0xa0
0x559 PUSH1 0x2
0x55b EXP
0x55c SUB
0x55d SWAP1
0x55e DUP2
0x55f AND
0x560 SWAP2
0x561 AND
0x562 EQ
0x563 ISZERO
0x564 PUSH2 0x690
0x567 JUMPI
---
0x549: JUMPDEST 
0x54a: V516 = 0x0
0x54d: V517 = S[0x0]
0x554: V518 = CALLER
0x555: V519 = 0x1
0x557: V520 = 0xa0
0x559: V521 = 0x2
0x55b: V522 = EXP 0x2 0xa0
0x55c: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55f: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x561: V525 = AND V517 0xffffffffffffffffffffffffffffffffffffffff
0x562: V526 = EQ V525 V524
0x563: V527 = ISZERO V526
0x564: V528 = 0x690
0x567: JUMPI 0x690 V527
---
Entry stack: [V12, 0xc2, V215, V228]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0xc2, V215, V228, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x568
[0x568:0x56b]
---
Predecessors: [0x549]
Successors: [0x56c]
---
0x568 PUSH1 0x0
0x56a SWAP3
0x56b POP
---
0x568: V529 = 0x0
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, 0xc2, V215, V228, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x56c
[0x56c:0x575]
---
Predecessors: [0x568, 0x680]
Successors: [0x576, 0x68b]
---
0x56c JUMPDEST
0x56d DUP6
0x56e MLOAD
0x56f DUP4
0x570 LT
0x571 ISZERO
0x572 PUSH2 0x68b
0x575 JUMPI
---
0x56c: JUMPDEST 
0x56e: V530 = M[V215]
0x570: V531 = LT S2 V530
0x571: V532 = ISZERO V531
0x572: V533 = 0x68b
0x575: JUMPI 0x68b V532
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xc2, V215, V228, 0x0, S2, S1, S0]

================================

Block 0x576
[0x576:0x57f]
---
Predecessors: [0x56c]
Successors: [0x580, 0x581]
---
0x576 DUP6
0x577 DUP4
0x578 DUP2
0x579 MLOAD
0x57a DUP2
0x57b LT
0x57c PUSH2 0x581
0x57f JUMPI
---
0x579: V534 = M[V215]
0x57b: V535 = LT S2 V534
0x57c: V536 = 0x581
0x57f: JUMPI 0x581 V535
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, S2]
Exit stack: [V12, 0xc2, V215, V228, 0x0, S2, S1, S0, V215, S2]

================================

Block 0x580
[0x580:0x580]
---
Predecessors: [0x576]
Successors: []
---
0x580 INVALID
---
0x580: INVALID 
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S4, S3, S2, V215, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, 0x0, S4, S3, S2, V215, S0]

================================

Block 0x581
[0x581:0x5df]
---
Predecessors: [0x576]
Successors: [0x5e0, 0x5e4]
---
0x581 JUMPDEST
0x582 SWAP1
0x583 PUSH1 0x20
0x585 ADD
0x586 SWAP1
0x587 PUSH1 0x20
0x589 MUL
0x58a ADD
0x58b MLOAD
0x58c SWAP2
0x58d POP
0x58e DUP2
0x58f PUSH1 0x1
0x591 PUSH1 0xa0
0x593 PUSH1 0x2
0x595 EXP
0x596 SUB
0x597 AND
0x598 PUSH4 0x70a08231
0x59d ADDRESS
0x59e PUSH1 0x0
0x5a0 PUSH1 0x40
0x5a2 MLOAD
0x5a3 PUSH1 0x20
0x5a5 ADD
0x5a6 MSTORE
0x5a7 PUSH1 0x40
0x5a9 MLOAD
0x5aa PUSH1 0xe0
0x5ac PUSH1 0x2
0x5ae EXP
0x5af PUSH4 0xffffffff
0x5b4 DUP5
0x5b5 AND
0x5b6 MUL
0x5b7 DUP2
0x5b8 MSTORE
0x5b9 PUSH1 0x1
0x5bb PUSH1 0xa0
0x5bd PUSH1 0x2
0x5bf EXP
0x5c0 SUB
0x5c1 SWAP1
0x5c2 SWAP2
0x5c3 AND
0x5c4 PUSH1 0x4
0x5c6 DUP3
0x5c7 ADD
0x5c8 MSTORE
0x5c9 PUSH1 0x24
0x5cb ADD
0x5cc PUSH1 0x20
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 DUP1
0x5d2 DUP4
0x5d3 SUB
0x5d4 DUP2
0x5d5 PUSH1 0x0
0x5d7 DUP8
0x5d8 DUP1
0x5d9 EXTCODESIZE
0x5da ISZERO
0x5db ISZERO
0x5dc PUSH2 0x5e4
0x5df JUMPI
---
0x581: JUMPDEST 
0x583: V537 = 0x20
0x585: V538 = ADD 0x20 V215
0x587: V539 = 0x20
0x589: V540 = MUL 0x20 S0
0x58a: V541 = ADD V540 V538
0x58b: V542 = M[V541]
0x58f: V543 = 0x1
0x591: V544 = 0xa0
0x593: V545 = 0x2
0x595: V546 = EXP 0x2 0xa0
0x596: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x597: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0x598: V549 = 0x70a08231
0x59d: V550 = ADDRESS
0x59e: V551 = 0x0
0x5a0: V552 = 0x40
0x5a2: V553 = M[0x40]
0x5a3: V554 = 0x20
0x5a5: V555 = ADD 0x20 V553
0x5a6: M[V555] = 0x0
0x5a7: V556 = 0x40
0x5a9: V557 = M[0x40]
0x5aa: V558 = 0xe0
0x5ac: V559 = 0x2
0x5ae: V560 = EXP 0x2 0xe0
0x5af: V561 = 0xffffffff
0x5b5: V562 = AND 0x70a08231 0xffffffff
0x5b6: V563 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x5b8: M[V557] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5b9: V564 = 0x1
0x5bb: V565 = 0xa0
0x5bd: V566 = 0x2
0x5bf: V567 = EXP 0x2 0xa0
0x5c0: V568 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c3: V569 = AND V550 0xffffffffffffffffffffffffffffffffffffffff
0x5c4: V570 = 0x4
0x5c7: V571 = ADD V557 0x4
0x5c8: M[V571] = V569
0x5c9: V572 = 0x24
0x5cb: V573 = ADD 0x24 V557
0x5cc: V574 = 0x20
0x5ce: V575 = 0x40
0x5d0: V576 = M[0x40]
0x5d3: V577 = SUB V573 V576
0x5d5: V578 = 0x0
0x5d9: V579 = EXTCODESIZE V548
0x5da: V580 = ISZERO V579
0x5db: V581 = ISZERO V580
0x5dc: V582 = 0x5e4
0x5df: JUMPI 0x5e4 V581
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S4, S3, S2, V215, S0]
Stack pops: 4
Stack additions: [V542, S2, V548, 0x70a08231, V573, 0x20, V576, V577, V576, 0x0, V548]
Exit stack: [V12, 0xc2, V215, V228, 0x0, S4, V542, S2, V548, 0x70a08231, V573, 0x20, V576, V577, V576, 0x0, V548]

================================

Block 0x5e0
[0x5e0:0x5e3]
---
Predecessors: [0x581]
Successors: []
---
0x5e0 PUSH1 0x0
0x5e2 DUP1
0x5e3 REVERT
---
0x5e0: V583 = 0x0
0x5e3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S11, V542, S9, V548, 0x70a08231, V573, 0x20, V576, V577, V576, 0x0, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, 0x0, S11, V542, S9, V548, 0x70a08231, V573, 0x20, V576, V577, V576, 0x0, V548]

================================

Block 0x5e4
[0x5e4:0x5f0]
---
Predecessors: [0x581]
Successors: [0x5f1, 0x5f5]
---
0x5e4 JUMPDEST
0x5e5 PUSH2 0x2c6
0x5e8 GAS
0x5e9 SUB
0x5ea CALL
0x5eb ISZERO
0x5ec ISZERO
0x5ed PUSH2 0x5f5
0x5f0 JUMPI
---
0x5e4: JUMPDEST 
0x5e5: V584 = 0x2c6
0x5e8: V585 = GAS
0x5e9: V586 = SUB V585 0x2c6
0x5ea: V587 = CALL V586 V548 0x0 V576 V577 V576 0x20
0x5eb: V588 = ISZERO V587
0x5ec: V589 = ISZERO V588
0x5ed: V590 = 0x5f5
0x5f0: JUMPI 0x5f5 V589
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S11, V542, S9, V548, 0x70a08231, V573, 0x20, V576, V577, V576, 0x0, V548]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, 0x0, S11, V542, S9, V548, 0x70a08231, V573]

================================

Block 0x5f1
[0x5f1:0x5f4]
---
Predecessors: [0x5e4]
Successors: []
---
0x5f1 PUSH1 0x0
0x5f3 DUP1
0x5f4 REVERT
---
0x5f1: V591 = 0x0
0x5f4: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S5, V542, S3, V548, 0x70a08231, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, 0x0, S5, V542, S3, V548, 0x70a08231, V573]

================================

Block 0x5f5
[0x5f5:0x606]
---
Predecessors: [0x5e4]
Successors: [0x607, 0x67f]
---
0x5f5 JUMPDEST
0x5f6 POP
0x5f7 POP
0x5f8 POP
0x5f9 PUSH1 0x40
0x5fb MLOAD
0x5fc DUP1
0x5fd MLOAD
0x5fe SWAP2
0x5ff POP
0x600 POP
0x601 DUP1
0x602 ISZERO
0x603 PUSH2 0x67f
0x606 JUMPI
---
0x5f5: JUMPDEST 
0x5f9: V592 = 0x40
0x5fb: V593 = M[0x40]
0x5fd: V594 = M[V593]
0x602: V595 = ISZERO V594
0x603: V596 = 0x67f
0x606: JUMPI 0x67f V595
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S5, V542, S3, V548, 0x70a08231, V573]
Stack pops: 4
Stack additions: [V594]
Exit stack: [V12, 0xc2, V215, V228, 0x0, S5, V542, V594]

================================

Block 0x607
[0x607:0x65e]
---
Predecessors: [0x5f5]
Successors: [0x65f, 0x663]
---
0x607 DUP2
0x608 PUSH1 0x1
0x60a PUSH1 0xa0
0x60c PUSH1 0x2
0x60e EXP
0x60f SUB
0x610 AND
0x611 PUSH4 0xa9059cbb
0x616 DUP7
0x617 DUP4
0x618 PUSH1 0x0
0x61a PUSH1 0x40
0x61c MLOAD
0x61d PUSH1 0x20
0x61f ADD
0x620 MSTORE
0x621 PUSH1 0x40
0x623 MLOAD
0x624 PUSH1 0xe0
0x626 PUSH1 0x2
0x628 EXP
0x629 PUSH4 0xffffffff
0x62e DUP6
0x62f AND
0x630 MUL
0x631 DUP2
0x632 MSTORE
0x633 PUSH1 0x1
0x635 PUSH1 0xa0
0x637 PUSH1 0x2
0x639 EXP
0x63a SUB
0x63b SWAP1
0x63c SWAP3
0x63d AND
0x63e PUSH1 0x4
0x640 DUP4
0x641 ADD
0x642 MSTORE
0x643 PUSH1 0x24
0x645 DUP3
0x646 ADD
0x647 MSTORE
0x648 PUSH1 0x44
0x64a ADD
0x64b PUSH1 0x20
0x64d PUSH1 0x40
0x64f MLOAD
0x650 DUP1
0x651 DUP4
0x652 SUB
0x653 DUP2
0x654 PUSH1 0x0
0x656 DUP8
0x657 DUP1
0x658 EXTCODESIZE
0x659 ISZERO
0x65a ISZERO
0x65b PUSH2 0x663
0x65e JUMPI
---
0x608: V597 = 0x1
0x60a: V598 = 0xa0
0x60c: V599 = 0x2
0x60e: V600 = EXP 0x2 0xa0
0x60f: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x610: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0x611: V603 = 0xa9059cbb
0x618: V604 = 0x0
0x61a: V605 = 0x40
0x61c: V606 = M[0x40]
0x61d: V607 = 0x20
0x61f: V608 = ADD 0x20 V606
0x620: M[V608] = 0x0
0x621: V609 = 0x40
0x623: V610 = M[0x40]
0x624: V611 = 0xe0
0x626: V612 = 0x2
0x628: V613 = EXP 0x2 0xe0
0x629: V614 = 0xffffffff
0x62f: V615 = AND 0xa9059cbb 0xffffffff
0x630: V616 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x632: M[V610] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x633: V617 = 0x1
0x635: V618 = 0xa0
0x637: V619 = 0x2
0x639: V620 = EXP 0x2 0xa0
0x63a: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63d: V622 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x63e: V623 = 0x4
0x641: V624 = ADD V610 0x4
0x642: M[V624] = V622
0x643: V625 = 0x24
0x646: V626 = ADD V610 0x24
0x647: M[V626] = V594
0x648: V627 = 0x44
0x64a: V628 = ADD 0x44 V610
0x64b: V629 = 0x20
0x64d: V630 = 0x40
0x64f: V631 = M[0x40]
0x652: V632 = SUB V628 V631
0x654: V633 = 0x0
0x658: V634 = EXTCODESIZE V602
0x659: V635 = ISZERO V634
0x65a: V636 = ISZERO V635
0x65b: V637 = 0x663
0x65e: JUMPI 0x663 V636
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S2, V542, V594]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V602, 0xa9059cbb, V628, 0x20, V631, V632, V631, 0x0, V602]
Exit stack: [V12, 0xc2, V215, V228, 0x0, S2, V542, V594, V602, 0xa9059cbb, V628, 0x20, V631, V632, V631, 0x0, V602]

================================

Block 0x65f
[0x65f:0x662]
---
Predecessors: [0x607]
Successors: []
---
0x65f PUSH1 0x0
0x661 DUP1
0x662 REVERT
---
0x65f: V638 = 0x0
0x662: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S11, V542, V594, V602, 0xa9059cbb, V628, 0x20, V631, V632, V631, 0x0, V602]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, 0x0, S11, V542, V594, V602, 0xa9059cbb, V628, 0x20, V631, V632, V631, 0x0, V602]

================================

Block 0x663
[0x663:0x66f]
---
Predecessors: [0x607]
Successors: [0x670, 0x674]
---
0x663 JUMPDEST
0x664 PUSH2 0x2c6
0x667 GAS
0x668 SUB
0x669 CALL
0x66a ISZERO
0x66b ISZERO
0x66c PUSH2 0x674
0x66f JUMPI
---
0x663: JUMPDEST 
0x664: V639 = 0x2c6
0x667: V640 = GAS
0x668: V641 = SUB V640 0x2c6
0x669: V642 = CALL V641 V602 0x0 V631 V632 V631 0x20
0x66a: V643 = ISZERO V642
0x66b: V644 = ISZERO V643
0x66c: V645 = 0x674
0x66f: JUMPI 0x674 V644
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S11, V542, V594, V602, 0xa9059cbb, V628, 0x20, V631, V632, V631, 0x0, V602]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, 0x0, S11, V542, V594, V602, 0xa9059cbb, V628]

================================

Block 0x670
[0x670:0x673]
---
Predecessors: [0x663]
Successors: []
---
0x670 PUSH1 0x0
0x672 DUP1
0x673 REVERT
---
0x670: V646 = 0x0
0x673: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S5, V542, V594, V602, 0xa9059cbb, V628]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, 0x0, S5, V542, V594, V602, 0xa9059cbb, V628]

================================

Block 0x674
[0x674:0x67e]
---
Predecessors: [0x663]
Successors: [0x67f]
---
0x674 JUMPDEST
0x675 POP
0x676 POP
0x677 POP
0x678 PUSH1 0x40
0x67a MLOAD
0x67b DUP1
0x67c MLOAD
0x67d POP
0x67e POP
---
0x674: JUMPDEST 
0x678: V647 = 0x40
0x67a: V648 = M[0x40]
0x67c: V649 = M[V648]
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S5, V542, V594, V602, 0xa9059cbb, V628]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, 0x0, S5, V542, V594]

================================

Block 0x67f
[0x67f:0x67f]
---
Predecessors: [0x5f5, 0x674]
Successors: [0x680]
---
0x67f JUMPDEST
---
0x67f: JUMPDEST 
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S2, V542, V594]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, 0x0, S2, V542, V594]

================================

Block 0x680
[0x680:0x68a]
---
Predecessors: [0x67f]
Successors: [0x56c]
---
0x680 JUMPDEST
0x681 PUSH1 0x1
0x683 SWAP1
0x684 SWAP3
0x685 ADD
0x686 SWAP2
0x687 PUSH2 0x56c
0x68a JUMP
---
0x680: JUMPDEST 
0x681: V650 = 0x1
0x685: V651 = ADD S2 0x1
0x687: V652 = 0x56c
0x68a: JUMP 0x56c
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S2, V542, V594]
Stack pops: 3
Stack additions: [V651, S1, S0]
Exit stack: [V12, 0xc2, V215, V228, 0x0, V651, V542, V594]

================================

Block 0x68b
[0x68b:0x68f]
---
Predecessors: [0x56c]
Successors: [0x690]
---
0x68b JUMPDEST
0x68c PUSH1 0x1
0x68e SWAP4
0x68f POP
---
0x68b: JUMPDEST 
0x68c: V653 = 0x1
---
Entry stack: [V12, 0xc2, V215, V228, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1, S2, S1, S0]
Exit stack: [V12, 0xc2, V215, V228, 0x1, S2, S1, S0]

================================

Block 0x690
[0x690:0x690]
---
Predecessors: [0x549, 0x68b]
Successors: [0x691]
---
0x690 JUMPDEST
---
0x690: JUMPDEST 
---
Entry stack: [V12, 0xc2, V215, V228, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, {0x0, 0x1}, S2, S1, S0]

================================

Block 0x691
[0x691:0x691]
---
Predecessors: [0x690]
Successors: [0x692]
---
0x691 JUMPDEST
---
0x691: JUMPDEST 
---
Entry stack: [V12, 0xc2, V215, V228, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, V215, V228, {0x0, 0x1}, S2, S1, S0]

================================

Block 0x692
[0x692:0x69a]
---
Predecessors: [0x691]
Successors: [0xc2]
---
0x692 JUMPDEST
0x693 POP
0x694 POP
0x695 POP
0x696 SWAP3
0x697 SWAP2
0x698 POP
0x699 POP
0x69a JUMP
---
0x692: JUMPDEST 
0x69a: JUMP 0xc2
---
Entry stack: [V12, 0xc2, V215, V228, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x69b
[0x69b:0x6a9]
---
Predecessors: [0x293]
Successors: [0x1bc]
---
0x69b JUMPDEST
0x69c PUSH1 0x2
0x69e SLOAD
0x69f PUSH1 0x1
0x6a1 PUSH1 0xa0
0x6a3 PUSH1 0x2
0x6a5 EXP
0x6a6 SUB
0x6a7 AND
0x6a8 DUP2
0x6a9 JUMP
---
0x69b: JUMPDEST 
0x69c: V654 = 0x2
0x69e: V655 = S[0x2]
0x69f: V656 = 0x1
0x6a1: V657 = 0xa0
0x6a3: V658 = 0x2
0x6a5: V659 = EXP 0x2 0xa0
0x6a6: V660 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a7: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x6a9: JUMP 0x1bc
---
Entry stack: [V12, 0x1bc]
Stack pops: 1
Stack additions: [S0, V661]
Exit stack: [V12, 0x1bc, V661]

================================

Block 0x6aa
[0x6aa:0x6c4]
---
Predecessors: [0x2c2]
Successors: [0x6c5, 0x7a1]
---
0x6aa JUMPDEST
0x6ab PUSH1 0x0
0x6ad DUP1
0x6ae SLOAD
0x6af DUP2
0x6b0 SWAP1
0x6b1 CALLER
0x6b2 PUSH1 0x1
0x6b4 PUSH1 0xa0
0x6b6 PUSH1 0x2
0x6b8 EXP
0x6b9 SUB
0x6ba SWAP1
0x6bb DUP2
0x6bc AND
0x6bd SWAP2
0x6be AND
0x6bf EQ
0x6c0 ISZERO
0x6c1 PUSH2 0x7a1
0x6c4 JUMPI
---
0x6aa: JUMPDEST 
0x6ab: V662 = 0x0
0x6ae: V663 = S[0x0]
0x6b1: V664 = CALLER
0x6b2: V665 = 0x1
0x6b4: V666 = 0xa0
0x6b6: V667 = 0x2
0x6b8: V668 = EXP 0x2 0xa0
0x6b9: V669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bc: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0x6be: V671 = AND V663 0xffffffffffffffffffffffffffffffffffffffff
0x6bf: V672 = EQ V671 V670
0x6c0: V673 = ISZERO V672
0x6c1: V674 = 0x7a1
0x6c4: JUMPI 0x7a1 V673
---
Entry stack: [V12, 0xc2]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xc2, 0x0, 0x0]

================================

Block 0x6c5
[0x6c5:0x718]
---
Predecessors: [0x6aa]
Successors: [0x719, 0x71d]
---
0x6c5 PUSH1 0x3
0x6c7 SLOAD
0x6c8 PUSH1 0x1
0x6ca PUSH1 0xa0
0x6cc PUSH1 0x2
0x6ce EXP
0x6cf SUB
0x6d0 AND
0x6d1 PUSH4 0x70a08231
0x6d6 ADDRESS
0x6d7 PUSH1 0x0
0x6d9 PUSH1 0x40
0x6db MLOAD
0x6dc PUSH1 0x20
0x6de ADD
0x6df MSTORE
0x6e0 PUSH1 0x40
0x6e2 MLOAD
0x6e3 PUSH1 0xe0
0x6e5 PUSH1 0x2
0x6e7 EXP
0x6e8 PUSH4 0xffffffff
0x6ed DUP5
0x6ee AND
0x6ef MUL
0x6f0 DUP2
0x6f1 MSTORE
0x6f2 PUSH1 0x1
0x6f4 PUSH1 0xa0
0x6f6 PUSH1 0x2
0x6f8 EXP
0x6f9 SUB
0x6fa SWAP1
0x6fb SWAP2
0x6fc AND
0x6fd PUSH1 0x4
0x6ff DUP3
0x700 ADD
0x701 MSTORE
0x702 PUSH1 0x24
0x704 ADD
0x705 PUSH1 0x20
0x707 PUSH1 0x40
0x709 MLOAD
0x70a DUP1
0x70b DUP4
0x70c SUB
0x70d DUP2
0x70e PUSH1 0x0
0x710 DUP8
0x711 DUP1
0x712 EXTCODESIZE
0x713 ISZERO
0x714 ISZERO
0x715 PUSH2 0x71d
0x718 JUMPI
---
0x6c5: V675 = 0x3
0x6c7: V676 = S[0x3]
0x6c8: V677 = 0x1
0x6ca: V678 = 0xa0
0x6cc: V679 = 0x2
0x6ce: V680 = EXP 0x2 0xa0
0x6cf: V681 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d0: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V676
0x6d1: V683 = 0x70a08231
0x6d6: V684 = ADDRESS
0x6d7: V685 = 0x0
0x6d9: V686 = 0x40
0x6db: V687 = M[0x40]
0x6dc: V688 = 0x20
0x6de: V689 = ADD 0x20 V687
0x6df: M[V689] = 0x0
0x6e0: V690 = 0x40
0x6e2: V691 = M[0x40]
0x6e3: V692 = 0xe0
0x6e5: V693 = 0x2
0x6e7: V694 = EXP 0x2 0xe0
0x6e8: V695 = 0xffffffff
0x6ee: V696 = AND 0x70a08231 0xffffffff
0x6ef: V697 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x6f1: M[V691] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6f2: V698 = 0x1
0x6f4: V699 = 0xa0
0x6f6: V700 = 0x2
0x6f8: V701 = EXP 0x2 0xa0
0x6f9: V702 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fc: V703 = AND V684 0xffffffffffffffffffffffffffffffffffffffff
0x6fd: V704 = 0x4
0x700: V705 = ADD V691 0x4
0x701: M[V705] = V703
0x702: V706 = 0x24
0x704: V707 = ADD 0x24 V691
0x705: V708 = 0x20
0x707: V709 = 0x40
0x709: V710 = M[0x40]
0x70c: V711 = SUB V707 V710
0x70e: V712 = 0x0
0x712: V713 = EXTCODESIZE V682
0x713: V714 = ISZERO V713
0x714: V715 = ISZERO V714
0x715: V716 = 0x71d
0x718: JUMPI 0x71d V715
---
Entry stack: [V12, 0xc2, 0x0, 0x0]
Stack pops: 0
Stack additions: [V682, 0x70a08231, V707, 0x20, V710, V711, V710, 0x0, V682]
Exit stack: [V12, 0xc2, 0x0, 0x0, V682, 0x70a08231, V707, 0x20, V710, V711, V710, 0x0, V682]

================================

Block 0x719
[0x719:0x71c]
---
Predecessors: [0x6c5]
Successors: []
---
0x719 PUSH1 0x0
0x71b DUP1
0x71c REVERT
---
0x719: V717 = 0x0
0x71c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, 0x0, 0x0, V682, 0x70a08231, V707, 0x20, V710, V711, V710, 0x0, V682]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, 0x0, 0x0, V682, 0x70a08231, V707, 0x20, V710, V711, V710, 0x0, V682]

================================

Block 0x71d
[0x71d:0x729]
---
Predecessors: [0x6c5]
Successors: [0x72a, 0x72e]
---
0x71d JUMPDEST
0x71e PUSH2 0x2c6
0x721 GAS
0x722 SUB
0x723 CALL
0x724 ISZERO
0x725 ISZERO
0x726 PUSH2 0x72e
0x729 JUMPI
---
0x71d: JUMPDEST 
0x71e: V718 = 0x2c6
0x721: V719 = GAS
0x722: V720 = SUB V719 0x2c6
0x723: V721 = CALL V720 V682 0x0 V710 V711 V710 0x20
0x724: V722 = ISZERO V721
0x725: V723 = ISZERO V722
0x726: V724 = 0x72e
0x729: JUMPI 0x72e V723
---
Entry stack: [V12, 0xc2, 0x0, 0x0, V682, 0x70a08231, V707, 0x20, V710, V711, V710, 0x0, V682]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc2, 0x0, 0x0, V682, 0x70a08231, V707]

================================

Block 0x72a
[0x72a:0x72d]
---
Predecessors: [0x71d]
Successors: []
---
0x72a PUSH1 0x0
0x72c DUP1
0x72d REVERT
---
0x72a: V725 = 0x0
0x72d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc2, 0x0, 0x0, V682, 0x70a08231, V707]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, 0x0, 0x0, V682, 0x70a08231, V707]

================================

Block 0x72e
[0x72e:0x743]
---
Predecessors: [0x71d]
Successors: [0x744, 0x764]
---
0x72e JUMPDEST
0x72f POP
0x730 POP
0x731 POP
0x732 PUSH1 0x40
0x734 MLOAD
0x735 DUP1
0x736 MLOAD
0x737 PUSH1 0x4
0x739 SLOAD
0x73a SWAP1
0x73b SWAP3
0x73c POP
0x73d ISZERO
0x73e SWAP1
0x73f POP
0x740 PUSH2 0x764
0x743 JUMPI
---
0x72e: JUMPDEST 
0x732: V726 = 0x40
0x734: V727 = M[0x40]
0x736: V728 = M[V727]
0x737: V729 = 0x4
0x739: V730 = S[0x4]
0x73d: V731 = ISZERO V730
0x740: V732 = 0x764
0x743: JUMPI 0x764 V731
---
Entry stack: [V12, 0xc2, 0x0, 0x0, V682, 0x70a08231, V707]
Stack pops: 4
Stack additions: [V728]
Exit stack: [V12, 0xc2, 0x0, V728]

================================

Block 0x744
[0x744:0x74c]
---
Predecessors: [0x72e]
Successors: [0x74d, 0x75a]
---
0x744 PUSH1 0x4
0x746 SLOAD
0x747 DUP2
0x748 EQ
0x749 PUSH2 0x75a
0x74c JUMPI
---
0x744: V733 = 0x4
0x746: V734 = S[0x4]
0x748: V735 = EQ V728 V734
0x749: V736 = 0x75a
0x74c: JUMPI 0x75a V735
---
Entry stack: [V12, 0xc2, 0x0, V728]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc2, 0x0, V728]

================================

Block 0x74d
[0x74d:0x759]
---
Predecessors: [0x744]
Successors: [0x7a1]
---
0x74d PUSH1 0x4
0x74f DUP2
0x750 SWAP1
0x751 SSTORE
0x752 PUSH1 0x1
0x754 SWAP2
0x755 POP
0x756 PUSH2 0x7a1
0x759 JUMP
---
0x74d: V737 = 0x4
0x751: S[0x4] = V728
0x752: V738 = 0x1
0x756: V739 = 0x7a1
0x759: JUMP 0x7a1
---
Entry stack: [V12, 0xc2, 0x0, V728]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0xc2, 0x1, V728]

================================

Block 0x75a
[0x75a:0x763]
---
Predecessors: [0x744]
Successors: [0x7a1]
---
0x75a JUMPDEST
0x75b PUSH2 0xc749
0x75e SWAP2
0x75f POP
0x760 PUSH2 0x7a1
0x763 JUMP
---
0x75a: JUMPDEST 
0x75b: V740 = 0xc749
0x760: V741 = 0x7a1
0x763: JUMP 0x7a1
---
Entry stack: [V12, 0xc2, 0x0, V728]
Stack pops: 2
Stack additions: [0xc749, S0]
Exit stack: [V12, 0xc2, 0xc749, V728]

================================

Block 0x764
[0x764:0x76b]
---
Predecessors: [0x72e]
Successors: [0x76c, 0x775]
---
0x764 JUMPDEST
0x765 DUP1
0x766 ISZERO
0x767 ISZERO
0x768 PUSH2 0x775
0x76b JUMPI
---
0x764: JUMPDEST 
0x766: V742 = ISZERO V728
0x767: V743 = ISZERO V742
0x768: V744 = 0x775
0x76b: JUMPI 0x775 V743
---
Entry stack: [V12, 0xc2, 0x0, V728]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc2, 0x0, V728]

================================

Block 0x76c
[0x76c:0x774]
---
Predecessors: [0x764]
Successors: [0x7a1]
---
0x76c PUSH2 0xc744
0x76f SWAP2
0x770 POP
0x771 PUSH2 0x7a1
0x774 JUMP
---
0x76c: V745 = 0xc744
0x771: V746 = 0x7a1
0x774: JUMP 0x7a1
---
Entry stack: [V12, 0xc2, 0x0, V728]
Stack pops: 2
Stack additions: [0xc744, S0]
Exit stack: [V12, 0xc2, 0xc744, V728]

================================

Block 0x775
[0x775:0x7a0]
---
Predecessors: [0x764]
Successors: [0x7a1]
---
0x775 JUMPDEST
0x776 PUSH1 0x40
0x778 DUP1
0x779 MLOAD
0x77a SWAP1
0x77b DUP2
0x77c ADD
0x77d PUSH1 0x40
0x77f MSTORE
0x780 DUP2
0x781 DUP2
0x782 MSTORE
0x783 PUSH4 0x5b60f800
0x788 PUSH1 0x20
0x78a DUP3
0x78b ADD
0x78c MSTORE
0x78d PUSH1 0x4
0x78f DUP2
0x790 MLOAD
0x791 DUP2
0x792 SSTORE
0x793 PUSH1 0x20
0x795 DUP3
0x796 ADD
0x797 MLOAD
0x798 PUSH1 0x1
0x79a SWAP2
0x79b DUP3
0x79c ADD
0x79d SSTORE
0x79e SWAP3
0x79f POP
0x7a0 POP
---
0x775: JUMPDEST 
0x776: V747 = 0x40
0x779: V748 = M[0x40]
0x77c: V749 = ADD V748 0x40
0x77d: V750 = 0x40
0x77f: M[0x40] = V749
0x782: M[V748] = V728
0x783: V751 = 0x5b60f800
0x788: V752 = 0x20
0x78b: V753 = ADD V748 0x20
0x78c: M[V753] = 0x5b60f800
0x78d: V754 = 0x4
0x790: V755 = M[V748]
0x792: S[0x4] = V755
0x793: V756 = 0x20
0x796: V757 = ADD V748 0x20
0x797: V758 = M[V757]
0x798: V759 = 0x1
0x79c: V760 = ADD 0x1 0x4
0x79d: S[0x5] = V758
---
Entry stack: [V12, 0xc2, 0x0, V728]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0xc2, 0x1, V728]

================================

Block 0x7a1
[0x7a1:0x7a1]
---
Predecessors: [0x6aa, 0x74d, 0x75a, 0x76c, 0x775]
Successors: [0x7a2]
---
0x7a1 JUMPDEST
---
0x7a1: JUMPDEST 
---
Entry stack: [V12, 0xc2, {0x0, 0x1, 0xc744, 0xc749}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, {0x0, 0x1, 0xc744, 0xc749}, S0]

================================

Block 0x7a2
[0x7a2:0x7a2]
---
Predecessors: [0x7a1]
Successors: [0x7a3]
---
0x7a2 JUMPDEST
---
0x7a2: JUMPDEST 
---
Entry stack: [V12, 0xc2, {0x0, 0x1, 0xc744, 0xc749}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc2, {0x0, 0x1, 0xc744, 0xc749}, S0]

================================

Block 0x7a3
[0x7a3:0x7a6]
---
Predecessors: [0x7a2]
Successors: [0xc2]
---
0x7a3 JUMPDEST
0x7a4 POP
0x7a5 SWAP1
0x7a6 JUMP
---
0x7a3: JUMPDEST 
0x7a6: JUMP 0xc2
---
Entry stack: [V12, 0xc2, {0x0, 0x1, 0xc744, 0xc749}, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, {0x0, 0x1, 0xc744, 0xc749}]

================================

Block 0x7a7
[0x7a7:0x7bf]
---
Predecessors: [0x2dc]
Successors: [0x7c0, 0x7c7]
---
0x7a7 JUMPDEST
0x7a8 PUSH1 0x0
0x7aa DUP1
0x7ab SLOAD
0x7ac CALLER
0x7ad PUSH1 0x1
0x7af PUSH1 0xa0
0x7b1 PUSH1 0x2
0x7b3 EXP
0x7b4 SUB
0x7b5 SWAP1
0x7b6 DUP2
0x7b7 AND
0x7b8 SWAP2
0x7b9 AND
0x7ba EQ
0x7bb ISZERO
0x7bc PUSH2 0x7c7
0x7bf JUMPI
---
0x7a7: JUMPDEST 
0x7a8: V761 = 0x0
0x7ab: V762 = S[0x0]
0x7ac: V763 = CALLER
0x7ad: V764 = 0x1
0x7af: V765 = 0xa0
0x7b1: V766 = 0x2
0x7b3: V767 = EXP 0x2 0xa0
0x7b4: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b7: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V763
0x7b9: V770 = AND V762 0xffffffffffffffffffffffffffffffffffffffff
0x7ba: V771 = EQ V770 V769
0x7bb: V772 = ISZERO V771
0x7bc: V773 = 0x7c7
0x7bf: JUMPI 0x7c7 V772
---
Entry stack: [V12, 0xc2, V62, 0x0, 0x2e6]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xc2, V62, 0x0, 0x2e6, 0x0]

================================

Block 0x7c0
[0x7c0:0x7c6]
---
Predecessors: [0x7a7]
Successors: [0x441]
---
0x7c0 POP
0x7c1 PUSH1 0x1
0x7c3 PUSH2 0x441
0x7c6 JUMP
---
0x7c1: V774 = 0x1
0x7c3: V775 = 0x441
0x7c6: JUMP 0x441
---
Entry stack: [V12, 0xc2, V62, 0x0, 0x2e6, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xc2, V62, 0x0, 0x2e6, 0x1]

================================

Block 0x7c7
[0x7c7:0x7ca]
---
Predecessors: [0x7a7]
Successors: [0x7cb]
---
0x7c7 JUMPDEST
0x7c8 POP
0x7c9 PUSH1 0x8
---
0x7c7: JUMPDEST 
0x7c9: V776 = 0x8
---
Entry stack: [V12, 0xc2, V62, 0x0, 0x2e6, 0x0]
Stack pops: 1
Stack additions: [0x8]
Exit stack: [V12, 0xc2, V62, 0x0, 0x2e6, 0x8]

================================

Block 0x7cb
[0x7cb:0x7cd]
---
Predecessors: [0x7c7]
Successors: [0x2e6]
---
0x7cb JUMPDEST
0x7cc SWAP1
0x7cd JUMP
---
0x7cb: JUMPDEST 
0x7cd: JUMP 0x2e6
---
Entry stack: [V12, 0xc2, V62, 0x0, 0x2e6, 0x8]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xc2, V62, 0x0, 0x8]

================================

Block 0x7ce
[0x7ce:0x7fe]
---
Predecessors: []
Successors: []
---
0x7ce STOP
0x7cf LOG1
0x7d0 PUSH6 0x627a7a723058
0x7d7 SHA3
0x7d8 SMOD
0x7d9 BLOCKHASH
0x7da PUSH5 0x96f65cd286
0x7e0 ADDMOD
0x7e1 MISSING 0x4d
0x7e2 MISSING 0xb5
0x7e3 MISSING 0x5d
0x7e4 DUP12
0x7e5 MISSING 0xcd
0x7e6 MISSING 0x5e
0x7e7 SHL
0x7e8 MISSING 0xbc
0x7e9 MISSING 0xd6
0x7ea ORIGIN
0x7eb STOP
0x7ec MISSING 0xd0
0x7ed SMOD
0x7ee JUMP
0x7ef PUSH15 0x273ea332282fd5c50029
---
0x7ce: STOP 
0x7cf: LOG S0 S1 S2
0x7d0: V777 = 0x627a7a723058
0x7d7: V778 = SHA3 0x627a7a723058 S3
0x7d8: V779 = SMOD V778 S4
0x7d9: V780 = BLOCKHASH V779
0x7da: V781 = 0x96f65cd286
0x7e0: V782 = ADDMOD 0x96f65cd286 V780 S5
0x7e1: MISSING 0x4d
0x7e2: MISSING 0xb5
0x7e3: MISSING 0x5d
0x7e5: MISSING 0xcd
0x7e6: MISSING 0x5e
0x7e7: V783 = SHL S0 S1
0x7e8: MISSING 0xbc
0x7e9: MISSING 0xd6
0x7ea: V784 = ORIGIN
0x7eb: STOP 
0x7ec: MISSING 0xd0
0x7ed: V785 = SMOD S0 S1
0x7ee: JUMP V785
0x7ef: V786 = 0x273ea332282fd5c50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V782, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V783, V784, 0x273ea332282fd5c50029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2927d20
Entry block: 0xa3
Exit block: 0x13d
Body: 0xa3, 0xaa, 0xae, 0xc2, 0x13d, 0x2dc, 0x2e6, 0x2f1, 0x2f5, 0x30a, 0x31d, 0x323, 0x32b, 0x357, 0x441, 0x7a7, 0x7c0, 0x7c7, 0x7cb

Function 1:
Public function signature: 0x1922ff39
Entry block: 0xd4
Exit block: 0x429
Body: 0xc2, 0xd4, 0xdb, 0xdf, 0x35c, 0x377, 0x385, 0x38e, 0x396, 0x39f, 0x3fa, 0x3fe, 0x40b, 0x40f, 0x420, 0x429, 0x435, 0x436, 0x437

Function 2:
Public function signature: 0x4124a6a7
Entry block: 0x105
Exit block: 0x13d
Body: 0xc2, 0x105, 0x10c, 0x110, 0x13d, 0x2e6, 0x2f1, 0x2f5, 0x30a, 0x31d, 0x323, 0x32b, 0x357, 0x43d, 0x441

Function 3:
Public function signature: 0x4592cd1d
Entry block: 0x12a
Exit block: 0x13d
Body: 0xc2, 0x12a, 0x131, 0x135, 0x13d, 0x2e6, 0x2f1, 0x2f5, 0x30a, 0x31d, 0x323, 0x32b, 0x357, 0x441, 0x444, 0x45e, 0x465, 0x499

Function 4:
Public function signature: 0x5136260d
Entry block: 0x151
Exit block: 0xc2
Body: 0xc2, 0x151, 0x158, 0x15c, 0x49c, 0x4a0

Function 5:
Public function signature: 0x557f4bc9
Entry block: 0x176
Exit block: 0x13d
Body: 0xc2, 0x13d, 0x176, 0x17d, 0x181, 0x357, 0x4a3, 0x4bc, 0x4cc, 0x4d3, 0x4fd, 0x4fe, 0x4ff

Function 6:
Public function signature: 0x5aa77d3c
Entry block: 0x1a9
Exit block: 0x1bc
Body: 0x1a9, 0x1b0, 0x1b4, 0x1bc, 0x504

Function 7:
Public function signature: 0x83197ef0
Entry block: 0x1d8
Exit block: 0x1eb
Body: 0x1d8, 0x1df, 0x1e3, 0x1eb, 0x513, 0x52b, 0x536, 0x537, 0x538

Function 8:
Public function signature: 0xce606ee0
Entry block: 0x1ed
Exit block: 0x1bc
Body: 0x1bc, 0x1ed, 0x1f4, 0x1f8, 0x53a

Function 9:
Public function signature: 0xd8f9659b
Entry block: 0x21c
Exit block: 0x670
Body: 0xc2, 0x21c, 0x223, 0x227, 0x549, 0x568, 0x56c, 0x576, 0x580, 0x581, 0x5e0, 0x5e4, 0x5f1, 0x5f5, 0x607, 0x65f, 0x663, 0x670, 0x674, 0x67f, 0x680, 0x68b, 0x690, 0x691, 0x692

Function 10:
Public function signature: 0xf07629f8
Entry block: 0x288
Exit block: 0x1bc
Body: 0x1bc, 0x288, 0x28f, 0x293, 0x69b

Function 11:
Public function signature: 0xfcddd056
Entry block: 0x2b7
Exit block: 0xc2
Body: 0xc2, 0x2b7, 0x2be, 0x2c2, 0x6aa, 0x6c5, 0x719, 0x71d, 0x72a, 0x72e, 0x744, 0x74d, 0x75a, 0x764, 0x76c, 0x775, 0x7a1, 0x7a2, 0x7a3

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0x9e
Body: 0x9e

