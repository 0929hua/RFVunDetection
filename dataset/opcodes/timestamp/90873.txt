Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8b
0xa: JUMPI 0x8b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xb3]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1793c314
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xb3
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1793c314
0x39: V12 = EQ V10 0x1793c314
0x3a: V13 = 0xb3
0x3d: JUMPI 0xb3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xda]
---
0x3e DUP1
0x3f PUSH4 0x21e92d49
0x44 EQ
0x45 PUSH2 0xda
0x48 JUMPI
---
0x3f: V14 = 0x21e92d49
0x44: V15 = EQ 0x21e92d49 V10
0x45: V16 = 0xda
0x48: JUMPI 0xda V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xf3]
---
0x49 DUP1
0x4a PUSH4 0x872fe620
0x4f EQ
0x50 PUSH2 0xf3
0x53 JUMPI
---
0x4a: V17 = 0x872fe620
0x4f: V18 = EQ 0x872fe620 V10
0x50: V19 = 0xf3
0x53: JUMPI 0xf3 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x108]
---
0x54 DUP1
0x55 PUSH4 0x8da5cb5b
0x5a EQ
0x5b PUSH2 0x108
0x5e JUMPI
---
0x55: V20 = 0x8da5cb5b
0x5a: V21 = EQ 0x8da5cb5b V10
0x5b: V22 = 0x108
0x5e: JUMPI 0x108 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x137]
---
0x5f DUP1
0x60 PUSH4 0x9066314e
0x65 EQ
0x66 PUSH2 0x137
0x69 JUMPI
---
0x60: V23 = 0x9066314e
0x65: V24 = EQ 0x9066314e V10
0x66: V25 = 0x137
0x69: JUMPI 0x137 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x151]
---
0x6a DUP1
0x6b PUSH4 0xa5bbc423
0x70 EQ
0x71 PUSH2 0x151
0x74 JUMPI
---
0x6b: V26 = 0xa5bbc423
0x70: V27 = EQ 0xa5bbc423 V10
0x71: V28 = 0x151
0x74: JUMPI 0x151 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1a4]
---
0x75 DUP1
0x76 PUSH4 0xc46f3e25
0x7b EQ
0x7c PUSH2 0x1a4
0x7f JUMPI
---
0x76: V29 = 0xc46f3e25
0x7b: V30 = EQ 0xc46f3e25 V10
0x7c: V31 = 0x1a4
0x7f: JUMPI 0x1a4 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1cb]
---
0x80 DUP1
0x81 PUSH4 0xf341cae8
0x86 EQ
0x87 PUSH2 0x1cb
0x8a JUMPI
---
0x81: V32 = 0xf341cae8
0x86: V33 = EQ 0xf341cae8 V10
0x87: V34 = 0x1cb
0x8a: JUMPI 0x1cb V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x0, 0x80]
Successors: [0x8c]
---
0x8b JUMPDEST
---
0x8b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8e]
---
Predecessors: [0x8b]
Successors: [0x8f]
---
0x8c JUMPDEST
0x8d PUSH1 0x0
---
0x8c: JUMPDEST 
0x8d: V35 = 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0x8f
[0x8f:0xa4]
---
Predecessors: [0x8c]
Successors: [0xa5, 0xa6]
---
0x8f JUMPDEST
0x90 PUSH1 0x12
0x92 SLOAD
0x93 PUSH3 0x10000
0x97 SWAP1
0x98 DIV
0x99 PUSH1 0xff
0x9b AND
0x9c PUSH1 0x2
0x9e DUP2
0x9f GT
0xa0 ISZERO
0xa1 PUSH2 0xa6
0xa4 JUMPI
---
0x8f: JUMPDEST 
0x90: V36 = 0x12
0x92: V37 = S[0x12]
0x93: V38 = 0x10000
0x98: V39 = DIV V37 0x10000
0x99: V40 = 0xff
0x9b: V41 = AND 0xff V39
0x9c: V42 = 0x2
0x9f: V43 = GT V41 0x2
0xa0: V44 = ISZERO V43
0xa1: V45 = 0xa6
0xa4: JUMPI 0xa6 V44
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V10, 0x0, V41]

================================

Block 0xa5
[0xa5:0xa5]
---
Predecessors: [0x8f]
Successors: []
---
0xa5 INVALID
---
0xa5: INVALID 
---
Entry stack: [V10, 0x0, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, V41]

================================

Block 0xa6
[0xa6:0xab]
---
Predecessors: [0x8f]
Successors: [0xac, 0xb0]
---
0xa6 JUMPDEST
0xa7 EQ
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa6: JUMPDEST 
0xa7: V46 = EQ V41 0x0
0xa8: V47 = 0xb0
0xab: JUMPI 0xb0 V46
---
Entry stack: [V10, 0x0, V41]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa6]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V48 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb0
[0xb0:0xb0]
---
Predecessors: [0xa6, 0x292, 0x338, 0x42e, 0x49f, 0x6e5]
Successors: [0xb1]
---
0xb0 JUMPDEST
---
0xb0: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: [0xb0]
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb3
[0xb3:0xb9]
---
Predecessors: [0xb]
Successors: [0xba, 0xbe]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb3: JUMPDEST 
0xb4: V49 = CALLVALUE
0xb5: V50 = ISZERO V49
0xb6: V51 = 0xbe
0xb9: JUMPI 0xbe V50
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb3]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V52 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbe
[0xbe:0xd7]
---
Predecessors: [0xb3]
Successors: [0x1e6]
---
0xbe JUMPDEST
0xbf PUSH2 0xb0
0xc2 PUSH1 0x1
0xc4 PUSH1 0xa0
0xc6 PUSH1 0x2
0xc8 EXP
0xc9 SUB
0xca PUSH1 0x4
0xcc CALLDATALOAD
0xcd DUP2
0xce AND
0xcf SWAP1
0xd0 PUSH1 0x24
0xd2 CALLDATALOAD
0xd3 AND
0xd4 PUSH2 0x1e6
0xd7 JUMP
---
0xbe: JUMPDEST 
0xbf: V53 = 0xb0
0xc2: V54 = 0x1
0xc4: V55 = 0xa0
0xc6: V56 = 0x2
0xc8: V57 = EXP 0x2 0xa0
0xc9: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca: V59 = 0x4
0xcc: V60 = CALLDATALOAD 0x4
0xce: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0xd0: V62 = 0x24
0xd2: V63 = CALLDATALOAD 0x24
0xd3: V64 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V65 = 0x1e6
0xd7: JUMP 0x1e6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V61, V64]
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0xd8
[0xd8:0xd9]
---
Predecessors: []
Successors: []
---
0xd8 JUMPDEST
0xd9 STOP
---
0xd8: JUMPDEST 
0xd9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xda
[0xda:0xf0]
---
Predecessors: [0x3e]
Successors: [0x296]
---
0xda JUMPDEST
0xdb PUSH2 0xb0
0xde PUSH1 0x1
0xe0 PUSH1 0xa0
0xe2 PUSH1 0x2
0xe4 EXP
0xe5 SUB
0xe6 PUSH1 0x4
0xe8 CALLDATALOAD
0xe9 AND
0xea PUSH1 0x24
0xec CALLDATALOAD
0xed PUSH2 0x296
0xf0 JUMP
---
0xda: JUMPDEST 
0xdb: V66 = 0xb0
0xde: V67 = 0x1
0xe0: V68 = 0xa0
0xe2: V69 = 0x2
0xe4: V70 = EXP 0x2 0xa0
0xe5: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe6: V72 = 0x4
0xe8: V73 = CALLDATALOAD 0x4
0xe9: V74 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xea: V75 = 0x24
0xec: V76 = CALLDATALOAD 0x24
0xed: V77 = 0x296
0xf0: JUMP 0x296
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V74, V76]
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0xf1
[0xf1:0xf2]
---
Predecessors: []
Successors: []
---
0xf1 JUMPDEST
0xf2 STOP
---
0xf1: JUMPDEST 
0xf2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf3
[0xf3:0xf9]
---
Predecessors: [0x49]
Successors: [0xfa, 0xfe]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 ISZERO
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xf3: JUMPDEST 
0xf4: V78 = CALLVALUE
0xf5: V79 = ISZERO V78
0xf6: V80 = 0xfe
0xf9: JUMPI 0xfe V79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xf3]
Successors: []
---
0xfa PUSH1 0x0
0xfc DUP1
0xfd REVERT
---
0xfa: V81 = 0x0
0xfd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfe
[0xfe:0x105]
---
Predecessors: [0xf3]
Successors: [0x33c]
---
0xfe JUMPDEST
0xff PUSH2 0xb0
0x102 PUSH2 0x33c
0x105 JUMP
---
0xfe: JUMPDEST 
0xff: V82 = 0xb0
0x102: V83 = 0x33c
0x105: JUMP 0x33c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0]
Exit stack: [V10, 0xb0]

================================

Block 0x106
[0x106:0x107]
---
Predecessors: []
Successors: []
---
0x106 JUMPDEST
0x107 STOP
---
0x106: JUMPDEST 
0x107: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x54]
Successors: [0x10f, 0x113]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V84 = CALLVALUE
0x10a: V85 = ISZERO V84
0x10b: V86 = 0x113
0x10e: JUMPI 0x113 V85
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x108]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V87 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x108]
Successors: [0x430]
---
0x113 JUMPDEST
0x114 PUSH2 0x11b
0x117 PUSH2 0x430
0x11a JUMP
---
0x113: JUMPDEST 
0x114: V88 = 0x11b
0x117: V89 = 0x430
0x11a: JUMP 0x430
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V10, 0x11b]

================================

Block 0x11b
[0x11b:0x136]
---
Predecessors: [0x430]
Successors: []
---
0x11b JUMPDEST
0x11c PUSH1 0x40
0x11e MLOAD
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 SWAP1
0x128 SWAP2
0x129 AND
0x12a DUP2
0x12b MSTORE
0x12c PUSH1 0x20
0x12e ADD
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 SWAP2
0x134 SUB
0x135 SWAP1
0x136 RETURN
---
0x11b: JUMPDEST 
0x11c: V90 = 0x40
0x11e: V91 = M[0x40]
0x11f: V92 = 0x1
0x121: V93 = 0xa0
0x123: V94 = 0x2
0x125: V95 = EXP 0x2 0xa0
0x126: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V97 = AND V411 0xffffffffffffffffffffffffffffffffffffffff
0x12b: M[V91] = V97
0x12c: V98 = 0x20
0x12e: V99 = ADD 0x20 V91
0x12f: V100 = 0x40
0x131: V101 = M[0x40]
0x134: V102 = SUB V99 V101
0x136: RETURN V101 V102
---
Entry stack: [V10, 0x11b, V411]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11b]

================================

Block 0x137
[0x137:0x13d]
---
Predecessors: [0x5f]
Successors: [0x13e, 0x142]
---
0x137 JUMPDEST
0x138 CALLVALUE
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x137: JUMPDEST 
0x138: V103 = CALLVALUE
0x139: V104 = ISZERO V103
0x13a: V105 = 0x142
0x13d: JUMPI 0x142 V104
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x137]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V106 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x142
[0x142:0x14e]
---
Predecessors: [0x137]
Successors: [0x43f]
---
0x142 JUMPDEST
0x143 PUSH2 0xb0
0x146 PUSH1 0x4
0x148 CALLDATALOAD
0x149 ISZERO
0x14a ISZERO
0x14b PUSH2 0x43f
0x14e JUMP
---
0x142: JUMPDEST 
0x143: V107 = 0xb0
0x146: V108 = 0x4
0x148: V109 = CALLDATALOAD 0x4
0x149: V110 = ISZERO V109
0x14a: V111 = ISZERO V110
0x14b: V112 = 0x43f
0x14e: JUMP 0x43f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V111]
Exit stack: [V10, 0xb0, V111]

================================

Block 0x14f
[0x14f:0x150]
---
Predecessors: []
Successors: []
---
0x14f JUMPDEST
0x150 STOP
---
0x14f: JUMPDEST 
0x150: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x151
[0x151:0x157]
---
Predecessors: [0x6a]
Successors: [0x158, 0x15c]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x151: JUMPDEST 
0x152: V113 = CALLVALUE
0x153: V114 = ISZERO V113
0x154: V115 = 0x15c
0x157: JUMPI 0x15c V114
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x151]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V116 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15c
[0x15c:0x1a1]
---
Predecessors: [0x151]
Successors: [0x4a2]
---
0x15c JUMPDEST
0x15d PUSH2 0xb0
0x160 PUSH1 0x4
0x162 PUSH1 0x24
0x164 DUP2
0x165 CALLDATALOAD
0x166 DUP2
0x167 DUP2
0x168 ADD
0x169 SWAP1
0x16a DUP4
0x16b ADD
0x16c CALLDATALOAD
0x16d DUP1
0x16e PUSH1 0x20
0x170 PUSH1 0x1f
0x172 DUP3
0x173 ADD
0x174 DUP2
0x175 SWAP1
0x176 DIV
0x177 DUP2
0x178 MUL
0x179 ADD
0x17a PUSH1 0x40
0x17c MLOAD
0x17d SWAP1
0x17e DUP2
0x17f ADD
0x180 PUSH1 0x40
0x182 MSTORE
0x183 DUP2
0x184 DUP2
0x185 MSTORE
0x186 SWAP3
0x187 SWAP2
0x188 SWAP1
0x189 PUSH1 0x20
0x18b DUP5
0x18c ADD
0x18d DUP4
0x18e DUP4
0x18f DUP1
0x190 DUP3
0x191 DUP5
0x192 CALLDATACOPY
0x193 POP
0x194 SWAP5
0x195 SWAP7
0x196 POP
0x197 PUSH2 0x4a2
0x19a SWAP6
0x19b POP
0x19c POP
0x19d POP
0x19e POP
0x19f POP
0x1a0 POP
0x1a1 JUMP
---
0x15c: JUMPDEST 
0x15d: V117 = 0xb0
0x160: V118 = 0x4
0x162: V119 = 0x24
0x165: V120 = CALLDATALOAD 0x4
0x168: V121 = ADD V120 0x24
0x16b: V122 = ADD 0x4 V120
0x16c: V123 = CALLDATALOAD V122
0x16e: V124 = 0x20
0x170: V125 = 0x1f
0x173: V126 = ADD V123 0x1f
0x176: V127 = DIV V126 0x20
0x178: V128 = MUL 0x20 V127
0x179: V129 = ADD V128 0x20
0x17a: V130 = 0x40
0x17c: V131 = M[0x40]
0x17f: V132 = ADD V131 V129
0x180: V133 = 0x40
0x182: M[0x40] = V132
0x185: M[V131] = V123
0x189: V134 = 0x20
0x18c: V135 = ADD V131 0x20
0x192: CALLDATACOPY V135 V121 V123
0x197: V136 = 0x4a2
0x1a1: JUMP 0x4a2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V131]
Exit stack: [V10, 0xb0, V131]

================================

Block 0x1a2
[0x1a2:0x1a3]
---
Predecessors: []
Successors: []
---
0x1a2 JUMPDEST
0x1a3 STOP
---
0x1a2: JUMPDEST 
0x1a3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x75]
Successors: [0x1ab, 0x1af]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V137 = CALLVALUE
0x1a6: V138 = ISZERO V137
0x1a7: V139 = 0x1af
0x1aa: JUMPI 0x1af V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V140 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x1a4]
Successors: [0x61e]
---
0x1af JUMPDEST
0x1b0 PUSH2 0x1b7
0x1b3 PUSH2 0x61e
0x1b6 JUMP
---
0x1af: JUMPDEST 
0x1b0: V141 = 0x1b7
0x1b3: V142 = 0x61e
0x1b6: JUMP 0x61e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b7]
Exit stack: [V10, 0x1b7]

================================

Block 0x1b7
[0x1b7:0x1ca]
---
Predecessors: [0x61e]
Successors: []
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb SWAP1
0x1bc ISZERO
0x1bd ISZERO
0x1be DUP2
0x1bf MSTORE
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x1b7: JUMPDEST 
0x1b8: V143 = 0x40
0x1ba: V144 = M[0x40]
0x1bc: V145 = ISZERO V603
0x1bd: V146 = ISZERO V145
0x1bf: M[V144] = V146
0x1c0: V147 = 0x20
0x1c2: V148 = ADD 0x20 V144
0x1c3: V149 = 0x40
0x1c5: V150 = M[0x40]
0x1c8: V151 = SUB V148 V150
0x1ca: RETURN V150 V151
---
Entry stack: [V10, 0x1b7, V603]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b7]

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x80]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V152 = CALLVALUE
0x1cd: V153 = ISZERO V152
0x1ce: V154 = 0x1d6
0x1d1: JUMPI 0x1d6 V153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V155 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d6
[0x1d6:0x1e3]
---
Predecessors: [0x1cb]
Successors: [0x627]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0xb0
0x1da PUSH1 0x4
0x1dc CALLDATALOAD
0x1dd PUSH1 0x24
0x1df CALLDATALOAD
0x1e0 PUSH2 0x627
0x1e3 JUMP
---
0x1d6: JUMPDEST 
0x1d7: V156 = 0xb0
0x1da: V157 = 0x4
0x1dc: V158 = CALLDATALOAD 0x4
0x1dd: V159 = 0x24
0x1df: V160 = CALLDATALOAD 0x24
0x1e0: V161 = 0x627
0x1e3: JUMP 0x627
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V158, V160]
Exit stack: [V10, 0xb0, V158, V160]

================================

Block 0x1e4
[0x1e4:0x1e5]
---
Predecessors: []
Successors: []
---
0x1e4 JUMPDEST
0x1e5 STOP
---
0x1e4: JUMPDEST 
0x1e5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e6
[0x1e6:0x1f2]
---
Predecessors: [0xbe]
Successors: [0x1f3, 0x1ff]
---
0x1e6 JUMPDEST
0x1e7 PUSH1 0x12
0x1e9 SLOAD
0x1ea PUSH1 0xff
0x1ec AND
0x1ed ISZERO
0x1ee DUP1
0x1ef PUSH2 0x1ff
0x1f2 JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V162 = 0x12
0x1e9: V163 = S[0x12]
0x1ea: V164 = 0xff
0x1ec: V165 = AND 0xff V163
0x1ed: V166 = ISZERO V165
0x1ef: V167 = 0x1ff
0x1f2: JUMPI 0x1ff V166
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V10, 0xb0, V61, V64, V166]

================================

Block 0x1f3
[0x1f3:0x1fe]
---
Predecessors: [0x1e6]
Successors: [0x1ff]
---
0x1f3 POP
0x1f4 PUSH1 0x11
0x1f6 SLOAD
0x1f7 PUSH3 0x506b80
0x1fb ADD
0x1fc TIMESTAMP
0x1fd GT
0x1fe ISZERO
---
0x1f4: V168 = 0x11
0x1f6: V169 = S[0x11]
0x1f7: V170 = 0x506b80
0x1fb: V171 = ADD 0x506b80 V169
0x1fc: V172 = TIMESTAMP
0x1fd: V173 = GT V172 V171
0x1fe: V174 = ISZERO V173
---
Entry stack: [V10, 0xb0, V61, V64, V166]
Stack pops: 1
Stack additions: [V174]
Exit stack: [V10, 0xb0, V61, V64, V174]

================================

Block 0x1ff
[0x1ff:0x204]
---
Predecessors: [0x1e6, 0x1f3]
Successors: [0x205, 0x209]
---
0x1ff JUMPDEST
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1ff: JUMPDEST 
0x200: V175 = ISZERO S0
0x201: V176 = 0x209
0x204: JUMPI 0x209 V175
---
Entry stack: [V10, 0xb0, V61, V64, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1ff]
Successors: [0x291]
---
0x205 PUSH2 0x291
0x208 JUMP
---
0x205: V177 = 0x291
0x208: JUMP 0x291
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x209
[0x209:0x219]
---
Predecessors: [0x1ff]
Successors: [0x21a, 0x253]
---
0x209 JUMPDEST
0x20a PUSH1 0x12
0x20c SLOAD
0x20d PUSH2 0x100
0x210 SWAP1
0x211 DIV
0x212 PUSH1 0xff
0x214 AND
0x215 ISZERO
0x216 PUSH2 0x253
0x219 JUMPI
---
0x209: JUMPDEST 
0x20a: V178 = 0x12
0x20c: V179 = S[0x12]
0x20d: V180 = 0x100
0x211: V181 = DIV V179 0x100
0x212: V182 = 0xff
0x214: V183 = AND 0xff V181
0x215: V184 = ISZERO V183
0x216: V185 = 0x253
0x219: JUMPI 0x253 V184
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x21a
[0x21a:0x24e]
---
Predecessors: [0x209]
Successors: [0x24f, 0x253]
---
0x21a PUSH1 0x3
0x21c SLOAD
0x21d DUP2
0x21e PUSH1 0x40
0x220 MLOAD
0x221 PUSH1 0x1
0x223 PUSH1 0xa0
0x225 PUSH1 0x2
0x227 EXP
0x228 SUB
0x229 SWAP2
0x22a SWAP1
0x22b SWAP2
0x22c AND
0x22d PUSH13 0x1000000000000000000000000
0x23b MUL
0x23c DUP2
0x23d MSTORE
0x23e PUSH1 0x14
0x240 ADD
0x241 PUSH1 0x40
0x243 MLOAD
0x244 SWAP1
0x245 DUP2
0x246 SWAP1
0x247 SUB
0x248 SWAP1
0x249 SHA3
0x24a EQ
0x24b PUSH2 0x253
0x24e JUMPI
---
0x21a: V186 = 0x3
0x21c: V187 = S[0x3]
0x21e: V188 = 0x40
0x220: V189 = M[0x40]
0x221: V190 = 0x1
0x223: V191 = 0xa0
0x225: V192 = 0x2
0x227: V193 = EXP 0x2 0xa0
0x228: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22c: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x22d: V196 = 0x1000000000000000000000000
0x23b: V197 = MUL 0x1000000000000000000000000 V195
0x23d: M[V189] = V197
0x23e: V198 = 0x14
0x240: V199 = ADD 0x14 V189
0x241: V200 = 0x40
0x243: V201 = M[0x40]
0x247: V202 = SUB V199 V201
0x249: V203 = SHA3 V201 V202
0x24a: V204 = EQ V203 V187
0x24b: V205 = 0x253
0x24e: JUMPI 0x253 V204
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x21a]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V206 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x253
[0x253:0x253]
---
Predecessors: [0x209, 0x21a]
Successors: [0x254]
---
0x253 JUMPDEST
---
0x253: JUMPDEST 
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x254
[0x254:0x28c]
---
Predecessors: [0x253]
Successors: [0x28d, 0x291]
---
0x254 JUMPDEST
0x255 DUP2
0x256 PUSH1 0x1
0x258 PUSH1 0xa0
0x25a PUSH1 0x2
0x25c EXP
0x25d SUB
0x25e AND
0x25f PUSH2 0x8fc
0x262 ADDRESS
0x263 PUSH1 0x1
0x265 PUSH1 0xa0
0x267 PUSH1 0x2
0x269 EXP
0x26a SUB
0x26b AND
0x26c BALANCE
0x26d SWAP1
0x26e DUP2
0x26f ISZERO
0x270 MUL
0x271 SWAP1
0x272 PUSH1 0x40
0x274 MLOAD
0x275 PUSH1 0x0
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b DUP4
0x27c SUB
0x27d DUP2
0x27e DUP6
0x27f DUP9
0x280 DUP9
0x281 CALL
0x282 SWAP4
0x283 POP
0x284 POP
0x285 POP
0x286 POP
0x287 ISZERO
0x288 ISZERO
0x289 PUSH2 0x291
0x28c JUMPI
---
0x254: JUMPDEST 
0x256: V207 = 0x1
0x258: V208 = 0xa0
0x25a: V209 = 0x2
0x25c: V210 = EXP 0x2 0xa0
0x25d: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x25f: V213 = 0x8fc
0x262: V214 = ADDRESS
0x263: V215 = 0x1
0x265: V216 = 0xa0
0x267: V217 = 0x2
0x269: V218 = EXP 0x2 0xa0
0x26a: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26b: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x26c: V221 = BALANCE V220
0x26f: V222 = ISZERO V221
0x270: V223 = MUL V222 0x8fc
0x272: V224 = 0x40
0x274: V225 = M[0x40]
0x275: V226 = 0x0
0x277: V227 = 0x40
0x279: V228 = M[0x40]
0x27c: V229 = SUB V225 V228
0x281: V230 = CALL V223 V212 V221 V228 V229 V228 0x0
0x287: V231 = ISZERO V230
0x288: V232 = ISZERO V231
0x289: V233 = 0x291
0x28c: JUMPI 0x291 V232
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x28d
[0x28d:0x290]
---
Predecessors: [0x254]
Successors: []
---
0x28d PUSH1 0x0
0x28f DUP1
0x290 REVERT
---
0x28d: V234 = 0x0
0x290: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x291
[0x291:0x291]
---
Predecessors: [0x205, 0x254, 0x5db]
Successors: [0x292]
---
0x291 JUMPDEST
---
0x291: JUMPDEST 
---
Entry stack: [V10, 0xb0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, S1, S0]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x291]
Successors: [0xb0]
---
0x292 JUMPDEST
0x293 POP
0x294 POP
0x295 JUMP
---
0x292: JUMPDEST 
0x295: JUMP 0xb0
---
Entry stack: [V10, 0xb0, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x296
[0x296:0x2ac]
---
Predecessors: [0xda]
Successors: [0x2ad, 0x2b1]
---
0x296 JUMPDEST
0x297 PUSH1 0x2
0x299 SLOAD
0x29a CALLER
0x29b PUSH1 0x1
0x29d PUSH1 0xa0
0x29f PUSH1 0x2
0x2a1 EXP
0x2a2 SUB
0x2a3 SWAP1
0x2a4 DUP2
0x2a5 AND
0x2a6 SWAP2
0x2a7 AND
0x2a8 EQ
0x2a9 PUSH2 0x2b1
0x2ac JUMPI
---
0x296: JUMPDEST 
0x297: V235 = 0x2
0x299: V236 = S[0x2]
0x29a: V237 = CALLER
0x29b: V238 = 0x1
0x29d: V239 = 0xa0
0x29f: V240 = 0x2
0x2a1: V241 = EXP 0x2 0xa0
0x2a2: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a5: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x2a7: V244 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V245 = EQ V244 V243
0x2a9: V246 = 0x2b1
0x2ac: JUMPI 0x2b1 V245
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2ad
[0x2ad:0x2b0]
---
Predecessors: [0x296]
Successors: []
---
0x2ad PUSH1 0x0
0x2af DUP1
0x2b0 REVERT
---
0x2ad: V247 = 0x0
0x2b0: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2b1
[0x2b1:0x2b3]
---
Predecessors: [0x296]
Successors: [0x2b4]
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x0
---
0x2b1: JUMPDEST 
0x2b2: V248 = 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xb0, V74, V76, 0x0]

================================

Block 0x2b4
[0x2b4:0x2c9]
---
Predecessors: [0x2b1]
Successors: [0x2ca, 0x2cb]
---
0x2b4 JUMPDEST
0x2b5 PUSH1 0x12
0x2b7 SLOAD
0x2b8 PUSH3 0x10000
0x2bc SWAP1
0x2bd DIV
0x2be PUSH1 0xff
0x2c0 AND
0x2c1 PUSH1 0x2
0x2c3 DUP2
0x2c4 GT
0x2c5 ISZERO
0x2c6 PUSH2 0x2cb
0x2c9 JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V249 = 0x12
0x2b7: V250 = S[0x12]
0x2b8: V251 = 0x10000
0x2bd: V252 = DIV V250 0x10000
0x2be: V253 = 0xff
0x2c0: V254 = AND 0xff V252
0x2c1: V255 = 0x2
0x2c4: V256 = GT V254 0x2
0x2c5: V257 = ISZERO V256
0x2c6: V258 = 0x2cb
0x2c9: JUMPI 0x2cb V257
---
Entry stack: [V10, 0xb0, V74, V76, 0x0]
Stack pops: 0
Stack additions: [V254]
Exit stack: [V10, 0xb0, V74, V76, 0x0, V254]

================================

Block 0x2ca
[0x2ca:0x2ca]
---
Predecessors: [0x2b4]
Successors: []
---
0x2ca INVALID
---
0x2ca: INVALID 
---
Entry stack: [V10, 0xb0, V74, V76, 0x0, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76, 0x0, V254]

================================

Block 0x2cb
[0x2cb:0x2d0]
---
Predecessors: [0x2b4]
Successors: [0x2d1, 0x2d5]
---
0x2cb JUMPDEST
0x2cc EQ
0x2cd PUSH2 0x2d5
0x2d0 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V259 = EQ V254 0x0
0x2cd: V260 = 0x2d5
0x2d0: JUMPI 0x2d5 V259
---
Entry stack: [V10, 0xb0, V74, V76, 0x0, V254]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2d1
[0x2d1:0x2d4]
---
Predecessors: [0x2cb]
Successors: []
---
0x2d1 PUSH1 0x0
0x2d3 DUP1
0x2d4 REVERT
---
0x2d1: V261 = 0x0
0x2d4: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2d5
[0x2d5:0x2e7]
---
Predecessors: [0x2cb]
Successors: [0x2e8, 0x2ec]
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x1
0x2d8 PUSH1 0xa0
0x2da PUSH1 0x2
0x2dc EXP
0x2dd SUB
0x2de ADDRESS
0x2df AND
0x2e0 BALANCE
0x2e1 DUP2
0x2e2 GT
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2d5: JUMPDEST 
0x2d6: V262 = 0x1
0x2d8: V263 = 0xa0
0x2da: V264 = 0x2
0x2dc: V265 = EXP 0x2 0xa0
0x2dd: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2de: V267 = ADDRESS
0x2df: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V269 = BALANCE V268
0x2e2: V270 = GT V76 V269
0x2e3: V271 = ISZERO V270
0x2e4: V272 = 0x2ec
0x2e7: JUMPI 0x2ec V271
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2d5]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V273 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2ec
[0x2ec:0x2fc]
---
Predecessors: [0x2d5]
Successors: [0x2fd, 0x301]
---
0x2ec JUMPDEST
0x2ed PUSH1 0x1
0x2ef PUSH1 0xa0
0x2f1 PUSH1 0x2
0x2f3 EXP
0x2f4 SUB
0x2f5 DUP3
0x2f6 AND
0x2f7 ISZERO
0x2f8 ISZERO
0x2f9 PUSH2 0x301
0x2fc JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V274 = 0x1
0x2ef: V275 = 0xa0
0x2f1: V276 = 0x2
0x2f3: V277 = EXP 0x2 0xa0
0x2f4: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V279 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V280 = ISZERO V279
0x2f8: V281 = ISZERO V280
0x2f9: V282 = 0x301
0x2fc: JUMPI 0x301 V281
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2fd
[0x2fd:0x300]
---
Predecessors: [0x2ec]
Successors: []
---
0x2fd PUSH1 0x0
0x2ff DUP1
0x300 REVERT
---
0x2fd: V283 = 0x0
0x300: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x301
[0x301:0x32d]
---
Predecessors: [0x2ec]
Successors: [0x32e, 0x332]
---
0x301 JUMPDEST
0x302 PUSH1 0x1
0x304 PUSH1 0xa0
0x306 PUSH1 0x2
0x308 EXP
0x309 SUB
0x30a DUP3
0x30b AND
0x30c DUP2
0x30d ISZERO
0x30e PUSH2 0x8fc
0x311 MUL
0x312 DUP3
0x313 PUSH1 0x40
0x315 MLOAD
0x316 PUSH1 0x0
0x318 PUSH1 0x40
0x31a MLOAD
0x31b DUP1
0x31c DUP4
0x31d SUB
0x31e DUP2
0x31f DUP6
0x320 DUP9
0x321 DUP9
0x322 CALL
0x323 SWAP4
0x324 POP
0x325 POP
0x326 POP
0x327 POP
0x328 ISZERO
0x329 ISZERO
0x32a PUSH2 0x332
0x32d JUMPI
---
0x301: JUMPDEST 
0x302: V284 = 0x1
0x304: V285 = 0xa0
0x306: V286 = 0x2
0x308: V287 = EXP 0x2 0xa0
0x309: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30b: V289 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V290 = ISZERO V76
0x30e: V291 = 0x8fc
0x311: V292 = MUL 0x8fc V290
0x313: V293 = 0x40
0x315: V294 = M[0x40]
0x316: V295 = 0x0
0x318: V296 = 0x40
0x31a: V297 = M[0x40]
0x31d: V298 = SUB V294 V297
0x322: V299 = CALL V292 V289 V76 V297 V298 V297 0x0
0x328: V300 = ISZERO V299
0x329: V301 = ISZERO V300
0x32a: V302 = 0x332
0x32d: JUMPI 0x332 V301
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x32e
[0x32e:0x331]
---
Predecessors: [0x301]
Successors: []
---
0x32e PUSH1 0x0
0x330 DUP1
0x331 REVERT
---
0x32e: V303 = 0x0
0x331: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x332
[0x332:0x336]
---
Predecessors: [0x301]
Successors: [0x337]
---
0x332 JUMPDEST
0x333 TIMESTAMP
0x334 PUSH1 0x11
0x336 SSTORE
---
0x332: JUMPDEST 
0x333: V304 = TIMESTAMP
0x334: V305 = 0x11
0x336: S[0x11] = V304
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x337
[0x337:0x337]
---
Predecessors: [0x332]
Successors: [0x338]
---
0x337 JUMPDEST
---
0x337: JUMPDEST 
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x338
[0x338:0x33b]
---
Predecessors: [0x337]
Successors: [0xb0]
---
0x338 JUMPDEST
0x339 POP
0x33a POP
0x33b JUMP
---
0x338: JUMPDEST 
0x33b: JUMP 0xb0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x33c
[0x33c:0x371]
---
Predecessors: [0xfe]
Successors: [0x372, 0x376]
---
0x33c JUMPDEST
0x33d PUSH1 0x3
0x33f SLOAD
0x340 CALLER
0x341 PUSH1 0x40
0x343 MLOAD
0x344 PUSH1 0x1
0x346 PUSH1 0xa0
0x348 PUSH1 0x2
0x34a EXP
0x34b SUB
0x34c SWAP2
0x34d SWAP1
0x34e SWAP2
0x34f AND
0x350 PUSH13 0x1000000000000000000000000
0x35e MUL
0x35f DUP2
0x360 MSTORE
0x361 PUSH1 0x14
0x363 ADD
0x364 PUSH1 0x40
0x366 MLOAD
0x367 SWAP1
0x368 DUP2
0x369 SWAP1
0x36a SUB
0x36b SWAP1
0x36c SHA3
0x36d EQ
0x36e PUSH2 0x376
0x371 JUMPI
---
0x33c: JUMPDEST 
0x33d: V306 = 0x3
0x33f: V307 = S[0x3]
0x340: V308 = CALLER
0x341: V309 = 0x40
0x343: V310 = M[0x40]
0x344: V311 = 0x1
0x346: V312 = 0xa0
0x348: V313 = 0x2
0x34a: V314 = EXP 0x2 0xa0
0x34b: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34f: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x350: V317 = 0x1000000000000000000000000
0x35e: V318 = MUL 0x1000000000000000000000000 V316
0x360: M[V310] = V318
0x361: V319 = 0x14
0x363: V320 = ADD 0x14 V310
0x364: V321 = 0x40
0x366: V322 = M[0x40]
0x36a: V323 = SUB V320 V322
0x36c: V324 = SHA3 V322 V323
0x36d: V325 = EQ V324 V307
0x36e: V326 = 0x376
0x371: JUMPI 0x376 V325
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x372
[0x372:0x375]
---
Predecessors: [0x33c]
Successors: []
---
0x372 PUSH1 0x0
0x374 DUP1
0x375 REVERT
---
0x372: V327 = 0x0
0x375: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x376
[0x376:0x378]
---
Predecessors: [0x33c]
Successors: [0x379]
---
0x376 JUMPDEST
0x377 PUSH1 0x1
---
0x376: JUMPDEST 
0x377: V328 = 0x1
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0xb0, 0x1]

================================

Block 0x379
[0x379:0x38e]
---
Predecessors: [0x376]
Successors: [0x38f, 0x390]
---
0x379 JUMPDEST
0x37a PUSH1 0x12
0x37c SLOAD
0x37d PUSH3 0x10000
0x381 SWAP1
0x382 DIV
0x383 PUSH1 0xff
0x385 AND
0x386 PUSH1 0x2
0x388 DUP2
0x389 GT
0x38a ISZERO
0x38b PUSH2 0x390
0x38e JUMPI
---
0x379: JUMPDEST 
0x37a: V329 = 0x12
0x37c: V330 = S[0x12]
0x37d: V331 = 0x10000
0x382: V332 = DIV V330 0x10000
0x383: V333 = 0xff
0x385: V334 = AND 0xff V332
0x386: V335 = 0x2
0x389: V336 = GT V334 0x2
0x38a: V337 = ISZERO V336
0x38b: V338 = 0x390
0x38e: JUMPI 0x390 V337
---
Entry stack: [V10, 0xb0, 0x1]
Stack pops: 0
Stack additions: [V334]
Exit stack: [V10, 0xb0, 0x1, V334]

================================

Block 0x38f
[0x38f:0x38f]
---
Predecessors: [0x379]
Successors: []
---
0x38f INVALID
---
0x38f: INVALID 
---
Entry stack: [V10, 0xb0, 0x1, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, 0x1, V334]

================================

Block 0x390
[0x390:0x395]
---
Predecessors: [0x379]
Successors: [0x396, 0x3b7]
---
0x390 JUMPDEST
0x391 EQ
0x392 PUSH2 0x3b7
0x395 JUMPI
---
0x390: JUMPDEST 
0x391: V339 = EQ V334 0x1
0x392: V340 = 0x3b7
0x395: JUMPI 0x3b7 V339
---
Entry stack: [V10, 0xb0, 0x1, V334]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x396
[0x396:0x3ac]
---
Predecessors: [0x390]
Successors: [0x3ad]
---
0x396 TIMESTAMP
0x397 PUSH1 0xf
0x399 SSTORE
0x39a PUSH1 0x12
0x39c DUP1
0x39d SLOAD
0x39e PUSH1 0x1
0x3a0 SWAP2
0x3a1 SWAP1
0x3a2 PUSH3 0xff0000
0x3a6 NOT
0x3a7 AND
0x3a8 PUSH3 0x10000
0x3ac DUP4
---
0x396: V341 = TIMESTAMP
0x397: V342 = 0xf
0x399: S[0xf] = V341
0x39a: V343 = 0x12
0x39d: V344 = S[0x12]
0x39e: V345 = 0x1
0x3a2: V346 = 0xff0000
0x3a6: V347 = NOT 0xff0000
0x3a7: V348 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V344
0x3a8: V349 = 0x10000
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: [0x1, 0x12, V348, 0x10000, 0x1]
Exit stack: [V10, 0xb0, 0x1, 0x12, V348, 0x10000, 0x1]

================================

Block 0x3ad
[0x3ad:0x3b6]
---
Predecessors: [0x396]
Successors: [0x42c]
---
0x3ad JUMPDEST
0x3ae MUL
0x3af OR
0x3b0 SWAP1
0x3b1 SSTORE
0x3b2 POP
0x3b3 PUSH2 0x42c
0x3b6 JUMP
---
0x3ad: JUMPDEST 
0x3ae: V350 = MUL 0x1 0x10000
0x3af: V351 = OR 0x10000 V348
0x3b1: S[0x12] = V351
0x3b3: V352 = 0x42c
0x3b6: JUMP 0x42c
---
Entry stack: [V10, 0xb0, 0x1, 0x12, V348, 0x10000, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3b7
[0x3b7:0x3c5]
---
Predecessors: [0x390]
Successors: [0x3c6, 0x3ca]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0xf
0x3ba SLOAD
0x3bb PUSH3 0x15180
0x3bf ADD
0x3c0 TIMESTAMP
0x3c1 GT
0x3c2 PUSH2 0x3ca
0x3c5 JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V353 = 0xf
0x3ba: V354 = S[0xf]
0x3bb: V355 = 0x15180
0x3bf: V356 = ADD 0x15180 V354
0x3c0: V357 = TIMESTAMP
0x3c1: V358 = GT V357 V356
0x3c2: V359 = 0x3ca
0x3c5: JUMPI 0x3ca V358
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3c6
[0x3c6:0x3c9]
---
Predecessors: [0x3b7]
Successors: [0x42c]
---
0x3c6 PUSH2 0x42c
0x3c9 JUMP
---
0x3c6: V360 = 0x42c
0x3c9: JUMP 0x42c
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3ca
[0x3ca:0x3ca]
---
Predecessors: [0x3b7]
Successors: [0x3cb]
---
0x3ca JUMPDEST
---
0x3ca: JUMPDEST 
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3cb
[0x3cb:0x3cd]
---
Predecessors: [0x3ca]
Successors: [0x3ce]
---
0x3cb JUMPDEST
0x3cc PUSH1 0x1
---
0x3cb: JUMPDEST 
0x3cc: V361 = 0x1
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0xb0, 0x1]

================================

Block 0x3ce
[0x3ce:0x3e3]
---
Predecessors: [0x3cb]
Successors: [0x3e4, 0x3e5]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x12
0x3d1 SLOAD
0x3d2 PUSH3 0x10000
0x3d6 SWAP1
0x3d7 DIV
0x3d8 PUSH1 0xff
0x3da AND
0x3db PUSH1 0x2
0x3dd DUP2
0x3de GT
0x3df ISZERO
0x3e0 PUSH2 0x3e5
0x3e3 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V362 = 0x12
0x3d1: V363 = S[0x12]
0x3d2: V364 = 0x10000
0x3d7: V365 = DIV V363 0x10000
0x3d8: V366 = 0xff
0x3da: V367 = AND 0xff V365
0x3db: V368 = 0x2
0x3de: V369 = GT V367 0x2
0x3df: V370 = ISZERO V369
0x3e0: V371 = 0x3e5
0x3e3: JUMPI 0x3e5 V370
---
Entry stack: [V10, 0xb0, 0x1]
Stack pops: 0
Stack additions: [V367]
Exit stack: [V10, 0xb0, 0x1, V367]

================================

Block 0x3e4
[0x3e4:0x3e4]
---
Predecessors: [0x3ce]
Successors: []
---
0x3e4 INVALID
---
0x3e4: INVALID 
---
Entry stack: [V10, 0xb0, 0x1, V367]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, 0x1, V367]

================================

Block 0x3e5
[0x3e5:0x3ea]
---
Predecessors: [0x3ce]
Successors: [0x3eb, 0x3ef]
---
0x3e5 JUMPDEST
0x3e6 EQ
0x3e7 PUSH2 0x3ef
0x3ea JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V372 = EQ V367 0x1
0x3e7: V373 = 0x3ef
0x3ea: JUMPI 0x3ef V372
---
Entry stack: [V10, 0xb0, 0x1, V367]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3eb
[0x3eb:0x3ee]
---
Predecessors: [0x3e5]
Successors: []
---
0x3eb PUSH1 0x0
0x3ed DUP1
0x3ee REVERT
---
0x3eb: V374 = 0x0
0x3ee: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3ef
[0x3ef:0x427]
---
Predecessors: [0x3e5]
Successors: [0x428, 0x42c]
---
0x3ef JUMPDEST
0x3f0 CALLER
0x3f1 PUSH1 0x1
0x3f3 PUSH1 0xa0
0x3f5 PUSH1 0x2
0x3f7 EXP
0x3f8 SUB
0x3f9 AND
0x3fa PUSH2 0x8fc
0x3fd ADDRESS
0x3fe PUSH1 0x1
0x400 PUSH1 0xa0
0x402 PUSH1 0x2
0x404 EXP
0x405 SUB
0x406 AND
0x407 BALANCE
0x408 SWAP1
0x409 DUP2
0x40a ISZERO
0x40b MUL
0x40c SWAP1
0x40d PUSH1 0x40
0x40f MLOAD
0x410 PUSH1 0x0
0x412 PUSH1 0x40
0x414 MLOAD
0x415 DUP1
0x416 DUP4
0x417 SUB
0x418 DUP2
0x419 DUP6
0x41a DUP9
0x41b DUP9
0x41c CALL
0x41d SWAP4
0x41e POP
0x41f POP
0x420 POP
0x421 POP
0x422 ISZERO
0x423 ISZERO
0x424 PUSH2 0x42c
0x427 JUMPI
---
0x3ef: JUMPDEST 
0x3f0: V375 = CALLER
0x3f1: V376 = 0x1
0x3f3: V377 = 0xa0
0x3f5: V378 = 0x2
0x3f7: V379 = EXP 0x2 0xa0
0x3f8: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f9: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x3fa: V382 = 0x8fc
0x3fd: V383 = ADDRESS
0x3fe: V384 = 0x1
0x400: V385 = 0xa0
0x402: V386 = 0x2
0x404: V387 = EXP 0x2 0xa0
0x405: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x407: V390 = BALANCE V389
0x40a: V391 = ISZERO V390
0x40b: V392 = MUL V391 0x8fc
0x40d: V393 = 0x40
0x40f: V394 = M[0x40]
0x410: V395 = 0x0
0x412: V396 = 0x40
0x414: V397 = M[0x40]
0x417: V398 = SUB V394 V397
0x41c: V399 = CALL V392 V381 V390 V397 V398 V397 0x0
0x422: V400 = ISZERO V399
0x423: V401 = ISZERO V400
0x424: V402 = 0x42c
0x427: JUMPI 0x42c V401
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x428
[0x428:0x42b]
---
Predecessors: [0x3ef]
Successors: []
---
0x428 PUSH1 0x0
0x42a DUP1
0x42b REVERT
---
0x428: V403 = 0x0
0x42b: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x42c
[0x42c:0x42c]
---
Predecessors: [0x3ad, 0x3c6, 0x3ef]
Successors: [0x42d]
---
0x42c JUMPDEST
---
0x42c: JUMPDEST 
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x42d
[0x42d:0x42d]
---
Predecessors: [0x42c]
Successors: [0x42e]
---
0x42d JUMPDEST
---
0x42d: JUMPDEST 
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x42e
[0x42e:0x42f]
---
Predecessors: [0x42d]
Successors: [0xb0]
---
0x42e JUMPDEST
0x42f JUMP
---
0x42e: JUMPDEST 
0x42f: JUMP 0xb0
---
Entry stack: [V10, 0xb0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x430
[0x430:0x43e]
---
Predecessors: [0x113]
Successors: [0x11b]
---
0x430 JUMPDEST
0x431 PUSH1 0x2
0x433 SLOAD
0x434 PUSH1 0x1
0x436 PUSH1 0xa0
0x438 PUSH1 0x2
0x43a EXP
0x43b SUB
0x43c AND
0x43d DUP2
0x43e JUMP
---
0x430: JUMPDEST 
0x431: V404 = 0x2
0x433: V405 = S[0x2]
0x434: V406 = 0x1
0x436: V407 = 0xa0
0x438: V408 = 0x2
0x43a: V409 = EXP 0x2 0xa0
0x43b: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43c: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x43e: JUMP 0x11b
---
Entry stack: [V10, 0x11b]
Stack pops: 1
Stack additions: [S0, V411]
Exit stack: [V10, 0x11b, V411]

================================

Block 0x43f
[0x43f:0x455]
---
Predecessors: [0x142]
Successors: [0x456, 0x45a]
---
0x43f JUMPDEST
0x440 PUSH1 0x2
0x442 SLOAD
0x443 CALLER
0x444 PUSH1 0x1
0x446 PUSH1 0xa0
0x448 PUSH1 0x2
0x44a EXP
0x44b SUB
0x44c SWAP1
0x44d DUP2
0x44e AND
0x44f SWAP2
0x450 AND
0x451 EQ
0x452 PUSH2 0x45a
0x455 JUMPI
---
0x43f: JUMPDEST 
0x440: V412 = 0x2
0x442: V413 = S[0x2]
0x443: V414 = CALLER
0x444: V415 = 0x1
0x446: V416 = 0xa0
0x448: V417 = 0x2
0x44a: V418 = EXP 0x2 0xa0
0x44b: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44e: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x450: V421 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x451: V422 = EQ V421 V420
0x452: V423 = 0x45a
0x455: JUMPI 0x45a V422
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x456
[0x456:0x459]
---
Predecessors: [0x43f]
Successors: []
---
0x456 PUSH1 0x0
0x458 DUP1
0x459 REVERT
---
0x456: V424 = 0x0
0x459: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x45a
[0x45a:0x45c]
---
Predecessors: [0x43f]
Successors: [0x45d]
---
0x45a JUMPDEST
0x45b PUSH1 0x0
---
0x45a: JUMPDEST 
0x45b: V425 = 0x0
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xb0, V111, 0x0]

================================

Block 0x45d
[0x45d:0x472]
---
Predecessors: [0x45a]
Successors: [0x473, 0x474]
---
0x45d JUMPDEST
0x45e PUSH1 0x12
0x460 SLOAD
0x461 PUSH3 0x10000
0x465 SWAP1
0x466 DIV
0x467 PUSH1 0xff
0x469 AND
0x46a PUSH1 0x2
0x46c DUP2
0x46d GT
0x46e ISZERO
0x46f PUSH2 0x474
0x472 JUMPI
---
0x45d: JUMPDEST 
0x45e: V426 = 0x12
0x460: V427 = S[0x12]
0x461: V428 = 0x10000
0x466: V429 = DIV V427 0x10000
0x467: V430 = 0xff
0x469: V431 = AND 0xff V429
0x46a: V432 = 0x2
0x46d: V433 = GT V431 0x2
0x46e: V434 = ISZERO V433
0x46f: V435 = 0x474
0x472: JUMPI 0x474 V434
---
Entry stack: [V10, 0xb0, V111, 0x0]
Stack pops: 0
Stack additions: [V431]
Exit stack: [V10, 0xb0, V111, 0x0, V431]

================================

Block 0x473
[0x473:0x473]
---
Predecessors: [0x45d]
Successors: []
---
0x473 INVALID
---
0x473: INVALID 
---
Entry stack: [V10, 0xb0, V111, 0x0, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111, 0x0, V431]

================================

Block 0x474
[0x474:0x479]
---
Predecessors: [0x45d]
Successors: [0x47a, 0x47e]
---
0x474 JUMPDEST
0x475 EQ
0x476 PUSH2 0x47e
0x479 JUMPI
---
0x474: JUMPDEST 
0x475: V436 = EQ V431 0x0
0x476: V437 = 0x47e
0x479: JUMPI 0x47e V436
---
Entry stack: [V10, 0xb0, V111, 0x0, V431]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x47a
[0x47a:0x47d]
---
Predecessors: [0x474]
Successors: []
---
0x47a PUSH1 0x0
0x47c DUP1
0x47d REVERT
---
0x47a: V438 = 0x0
0x47d: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x47e
[0x47e:0x49d]
---
Predecessors: [0x474]
Successors: [0x49e]
---
0x47e JUMPDEST
0x47f PUSH1 0x12
0x481 DUP1
0x482 SLOAD
0x483 PUSH1 0xff
0x485 DUP2
0x486 AND
0x487 ISZERO
0x488 PUSH1 0xff
0x48a NOT
0x48b SWAP1
0x48c SWAP2
0x48d AND
0x48e OR
0x48f PUSH2 0xff00
0x492 NOT
0x493 AND
0x494 PUSH2 0x100
0x497 DUP4
0x498 ISZERO
0x499 ISZERO
0x49a MUL
0x49b OR
0x49c SWAP1
0x49d SSTORE
---
0x47e: JUMPDEST 
0x47f: V439 = 0x12
0x482: V440 = S[0x12]
0x483: V441 = 0xff
0x486: V442 = AND V440 0xff
0x487: V443 = ISZERO V442
0x488: V444 = 0xff
0x48a: V445 = NOT 0xff
0x48d: V446 = AND V440 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x48e: V447 = OR V446 V443
0x48f: V448 = 0xff00
0x492: V449 = NOT 0xff00
0x493: V450 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V447
0x494: V451 = 0x100
0x498: V452 = ISZERO V111
0x499: V453 = ISZERO V452
0x49a: V454 = MUL V453 0x100
0x49b: V455 = OR V454 V450
0x49d: S[0x12] = V455
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb0, V111]

================================

Block 0x49e
[0x49e:0x49e]
---
Predecessors: [0x47e]
Successors: [0x49f]
---
0x49e JUMPDEST
---
0x49e: JUMPDEST 
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x49f
[0x49f:0x4a1]
---
Predecessors: [0x49e]
Successors: [0xb0]
---
0x49f JUMPDEST
0x4a0 POP
0x4a1 JUMP
---
0x49f: JUMPDEST 
0x4a1: JUMP 0xb0
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a2
[0x4a2:0x4b8]
---
Predecessors: [0x15c]
Successors: [0x4b9]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x0
0x4a5 SLOAD
0x4a6 DUP2
0x4a7 SWAP1
0x4a8 DUP2
0x4a9 CALLER
0x4aa PUSH1 0x40
0x4ac MLOAD
0x4ad DUP1
0x4ae DUP4
0x4af DUP1
0x4b0 MLOAD
0x4b1 SWAP1
0x4b2 PUSH1 0x20
0x4b4 ADD
0x4b5 SWAP1
0x4b6 DUP1
0x4b7 DUP4
0x4b8 DUP4
---
0x4a2: JUMPDEST 
0x4a3: V456 = 0x0
0x4a5: V457 = S[0x0]
0x4a9: V458 = CALLER
0x4aa: V459 = 0x40
0x4ac: V460 = M[0x40]
0x4b0: V461 = M[V131]
0x4b2: V462 = 0x20
0x4b4: V463 = ADD 0x20 V131
---
Entry stack: [V10, 0xb0, V131]
Stack pops: 1
Stack additions: [S0, S0, V457, S0, V458, V460, V460, V463, V461, V461, V460, V463]
Exit stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, V461, V460, V463]

================================

Block 0x4b9
[0x4b9:0x4c1]
---
Predecessors: [0x4a2, 0x4c6]
Successors: [0x4c2, 0x4d9]
---
0x4b9 JUMPDEST
0x4ba PUSH1 0x20
0x4bc DUP4
0x4bd LT
0x4be PUSH2 0x4d9
0x4c1 JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V464 = 0x20
0x4bd: V465 = LT S2 0x20
0x4be: V466 = 0x4d9
0x4c1: JUMPI 0x4d9 V465
---
Entry stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]

================================

Block 0x4c2
[0x4c2:0x4c5]
---
Predecessors: [0x4b9]
Successors: [0x4c6]
---
0x4c2 DUP1
0x4c3 MLOAD
0x4c4 DUP3
0x4c5 MSTORE
---
0x4c3: V467 = M[S0]
0x4c5: M[S1] = V467
---
Entry stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]

================================

Block 0x4c6
[0x4c6:0x4d8]
---
Predecessors: [0x4c2]
Successors: [0x4b9]
---
0x4c6 JUMPDEST
0x4c7 PUSH1 0x1f
0x4c9 NOT
0x4ca SWAP1
0x4cb SWAP3
0x4cc ADD
0x4cd SWAP2
0x4ce PUSH1 0x20
0x4d0 SWAP2
0x4d1 DUP3
0x4d2 ADD
0x4d3 SWAP2
0x4d4 ADD
0x4d5 PUSH2 0x4b9
0x4d8 JUMP
---
0x4c6: JUMPDEST 
0x4c7: V468 = 0x1f
0x4c9: V469 = NOT 0x1f
0x4cc: V470 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4ce: V471 = 0x20
0x4d2: V472 = ADD 0x20 S1
0x4d4: V473 = ADD 0x20 S0
0x4d5: V474 = 0x4b9
0x4d8: JUMP 0x4b9
---
Entry stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]
Stack pops: 3
Stack additions: [V470, V472, V473]
Exit stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, V470, V472, V473]

================================

Block 0x4d9
[0x4d9:0x534]
---
Predecessors: [0x4b9]
Successors: [0x535, 0x539]
---
0x4d9 JUMPDEST
0x4da PUSH1 0x1
0x4dc DUP4
0x4dd PUSH1 0x20
0x4df SUB
0x4e0 PUSH2 0x100
0x4e3 EXP
0x4e4 SUB
0x4e5 DUP1
0x4e6 NOT
0x4e7 DUP3
0x4e8 MLOAD
0x4e9 AND
0x4ea DUP2
0x4eb DUP5
0x4ec MLOAD
0x4ed AND
0x4ee DUP1
0x4ef DUP3
0x4f0 OR
0x4f1 DUP6
0x4f2 MSTORE
0x4f3 POP
0x4f4 POP
0x4f5 POP
0x4f6 POP
0x4f7 POP
0x4f8 POP
0x4f9 SWAP1
0x4fa POP
0x4fb ADD
0x4fc DUP3
0x4fd PUSH1 0x1
0x4ff PUSH1 0xa0
0x501 PUSH1 0x2
0x503 EXP
0x504 SUB
0x505 AND
0x506 PUSH1 0x1
0x508 PUSH1 0xa0
0x50a PUSH1 0x2
0x50c EXP
0x50d SUB
0x50e AND
0x50f PUSH13 0x1000000000000000000000000
0x51d MUL
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x14
0x522 ADD
0x523 SWAP3
0x524 POP
0x525 POP
0x526 POP
0x527 PUSH1 0x40
0x529 MLOAD
0x52a SWAP1
0x52b DUP2
0x52c SWAP1
0x52d SUB
0x52e SWAP1
0x52f SHA3
0x530 EQ
0x531 PUSH2 0x539
0x534 JUMPI
---
0x4d9: JUMPDEST 
0x4da: V475 = 0x1
0x4dd: V476 = 0x20
0x4df: V477 = SUB 0x20 S2
0x4e0: V478 = 0x100
0x4e3: V479 = EXP 0x100 V477
0x4e4: V480 = SUB V479 0x1
0x4e6: V481 = NOT V480
0x4e8: V482 = M[S0]
0x4e9: V483 = AND V482 V481
0x4ec: V484 = M[S1]
0x4ed: V485 = AND V484 V480
0x4f0: V486 = OR V483 V485
0x4f2: M[S1] = V486
0x4fb: V487 = ADD V461 V460
0x4fd: V488 = 0x1
0x4ff: V489 = 0xa0
0x501: V490 = 0x2
0x503: V491 = EXP 0x2 0xa0
0x504: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x505: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x506: V494 = 0x1
0x508: V495 = 0xa0
0x50a: V496 = 0x2
0x50c: V497 = EXP 0x2 0xa0
0x50d: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50e: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x50f: V500 = 0x1000000000000000000000000
0x51d: V501 = MUL 0x1000000000000000000000000 V499
0x51f: M[V487] = V501
0x520: V502 = 0x14
0x522: V503 = ADD 0x14 V487
0x527: V504 = 0x40
0x529: V505 = M[0x40]
0x52d: V506 = SUB V503 V505
0x52f: V507 = SHA3 V505 V506
0x530: V508 = EQ V507 V457
0x531: V509 = 0x539
0x534: JUMPI 0x539 V508
---
Entry stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x535
[0x535:0x538]
---
Predecessors: [0x4d9]
Successors: []
---
0x535 PUSH1 0x0
0x537 DUP1
0x538 REVERT
---
0x535: V510 = 0x0
0x538: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x539
[0x539:0x547]
---
Predecessors: [0x4d9]
Successors: [0x548, 0x54c]
---
0x539 JUMPDEST
0x53a PUSH1 0x10
0x53c SLOAD
0x53d PUSH3 0x15180
0x541 ADD
0x542 TIMESTAMP
0x543 GT
0x544 PUSH2 0x54c
0x547 JUMPI
---
0x539: JUMPDEST 
0x53a: V511 = 0x10
0x53c: V512 = S[0x10]
0x53d: V513 = 0x15180
0x541: V514 = ADD 0x15180 V512
0x542: V515 = TIMESTAMP
0x543: V516 = GT V515 V514
0x544: V517 = 0x54c
0x547: JUMPI 0x54c V516
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x548
[0x548:0x54b]
---
Predecessors: [0x539]
Successors: []
---
0x548 PUSH1 0x0
0x54a DUP1
0x54b REVERT
---
0x548: V518 = 0x0
0x54b: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x54c
[0x54c:0x55f]
---
Predecessors: [0x539]
Successors: [0x560]
---
0x54c JUMPDEST
0x54d PUSH1 0x4
0x54f SLOAD
0x550 DUP3
0x551 PUSH1 0x40
0x553 MLOAD
0x554 DUP1
0x555 DUP3
0x556 DUP1
0x557 MLOAD
0x558 SWAP1
0x559 PUSH1 0x20
0x55b ADD
0x55c SWAP1
0x55d DUP1
0x55e DUP4
0x55f DUP4
---
0x54c: JUMPDEST 
0x54d: V519 = 0x4
0x54f: V520 = S[0x4]
0x551: V521 = 0x40
0x553: V522 = M[0x40]
0x557: V523 = M[V131]
0x559: V524 = 0x20
0x55b: V525 = ADD 0x20 V131
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 2
Stack additions: [S1, S0, V520, S1, V522, V522, V525, V523, V523, V522, V525]
Exit stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, V523, V522, V525]

================================

Block 0x560
[0x560:0x568]
---
Predecessors: [0x54c, 0x56d]
Successors: [0x569, 0x580]
---
0x560 JUMPDEST
0x561 PUSH1 0x20
0x563 DUP4
0x564 LT
0x565 PUSH2 0x580
0x568 JUMPI
---
0x560: JUMPDEST 
0x561: V526 = 0x20
0x564: V527 = LT S2 0x20
0x565: V528 = 0x580
0x568: JUMPI 0x580 V527
---
Entry stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]

================================

Block 0x569
[0x569:0x56c]
---
Predecessors: [0x560]
Successors: [0x56d]
---
0x569 DUP1
0x56a MLOAD
0x56b DUP3
0x56c MSTORE
---
0x56a: V529 = M[S0]
0x56c: M[S1] = V529
---
Entry stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]

================================

Block 0x56d
[0x56d:0x57f]
---
Predecessors: [0x569]
Successors: [0x560]
---
0x56d JUMPDEST
0x56e PUSH1 0x1f
0x570 NOT
0x571 SWAP1
0x572 SWAP3
0x573 ADD
0x574 SWAP2
0x575 PUSH1 0x20
0x577 SWAP2
0x578 DUP3
0x579 ADD
0x57a SWAP2
0x57b ADD
0x57c PUSH2 0x560
0x57f JUMP
---
0x56d: JUMPDEST 
0x56e: V530 = 0x1f
0x570: V531 = NOT 0x1f
0x573: V532 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x575: V533 = 0x20
0x579: V534 = ADD 0x20 S1
0x57b: V535 = ADD 0x20 S0
0x57c: V536 = 0x560
0x57f: JUMP 0x560
---
Entry stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]
Stack pops: 3
Stack additions: [V532, V534, V535]
Exit stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, V532, V534, V535]

================================

Block 0x580
[0x580:0x5b2]
---
Predecessors: [0x560]
Successors: [0x5b3, 0x5b7]
---
0x580 JUMPDEST
0x581 PUSH1 0x1
0x583 DUP4
0x584 PUSH1 0x20
0x586 SUB
0x587 PUSH2 0x100
0x58a EXP
0x58b SUB
0x58c DUP1
0x58d NOT
0x58e DUP3
0x58f MLOAD
0x590 AND
0x591 DUP2
0x592 DUP5
0x593 MLOAD
0x594 AND
0x595 OR
0x596 SWAP1
0x597 SWAP3
0x598 MSTORE
0x599 POP
0x59a POP
0x59b POP
0x59c SWAP2
0x59d SWAP1
0x59e SWAP2
0x59f ADD
0x5a0 SWAP3
0x5a1 POP
0x5a2 PUSH1 0x40
0x5a4 SWAP2
0x5a5 POP
0x5a6 POP
0x5a7 MLOAD
0x5a8 SWAP1
0x5a9 DUP2
0x5aa SWAP1
0x5ab SUB
0x5ac SWAP1
0x5ad SHA3
0x5ae EQ
0x5af PUSH2 0x5b7
0x5b2 JUMPI
---
0x580: JUMPDEST 
0x581: V537 = 0x1
0x584: V538 = 0x20
0x586: V539 = SUB 0x20 S2
0x587: V540 = 0x100
0x58a: V541 = EXP 0x100 V539
0x58b: V542 = SUB V541 0x1
0x58d: V543 = NOT V542
0x58f: V544 = M[S0]
0x590: V545 = AND V544 V543
0x593: V546 = M[S1]
0x594: V547 = AND V546 V542
0x595: V548 = OR V547 V545
0x598: M[S1] = V548
0x59f: V549 = ADD V523 V522
0x5a2: V550 = 0x40
0x5a7: V551 = M[0x40]
0x5ab: V552 = SUB V549 V551
0x5ad: V553 = SHA3 V551 V552
0x5ae: V554 = EQ V553 V520
0x5af: V555 = 0x5b7
0x5b2: JUMPI 0x5b7 V554
---
Entry stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x5b3
[0x5b3:0x5b6]
---
Predecessors: [0x580]
Successors: []
---
0x5b3 PUSH1 0x0
0x5b5 DUP1
0x5b6 REVERT
---
0x5b3: V556 = 0x0
0x5b6: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x5b7
[0x5b7:0x5b9]
---
Predecessors: [0x580]
Successors: [0x5ba]
---
0x5b7 JUMPDEST
0x5b8 PUSH1 0x2
---
0x5b7: JUMPDEST 
0x5b8: V557 = 0x2
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V10, 0xb0, V131, V131, 0x2]

================================

Block 0x5ba
[0x5ba:0x5cf]
---
Predecessors: [0x5b7]
Successors: [0x5d0, 0x5d1]
---
0x5ba JUMPDEST
0x5bb PUSH1 0x12
0x5bd SLOAD
0x5be PUSH3 0x10000
0x5c2 SWAP1
0x5c3 DIV
0x5c4 PUSH1 0xff
0x5c6 AND
0x5c7 PUSH1 0x2
0x5c9 DUP2
0x5ca GT
0x5cb ISZERO
0x5cc PUSH2 0x5d1
0x5cf JUMPI
---
0x5ba: JUMPDEST 
0x5bb: V558 = 0x12
0x5bd: V559 = S[0x12]
0x5be: V560 = 0x10000
0x5c3: V561 = DIV V559 0x10000
0x5c4: V562 = 0xff
0x5c6: V563 = AND 0xff V561
0x5c7: V564 = 0x2
0x5ca: V565 = GT V563 0x2
0x5cb: V566 = ISZERO V565
0x5cc: V567 = 0x5d1
0x5cf: JUMPI 0x5d1 V566
---
Entry stack: [V10, 0xb0, V131, V131, 0x2]
Stack pops: 0
Stack additions: [V563]
Exit stack: [V10, 0xb0, V131, V131, 0x2, V563]

================================

Block 0x5d0
[0x5d0:0x5d0]
---
Predecessors: [0x5ba]
Successors: []
---
0x5d0 INVALID
---
0x5d0: INVALID 
---
Entry stack: [V10, 0xb0, V131, V131, 0x2, V563]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131, 0x2, V563]

================================

Block 0x5d1
[0x5d1:0x5d6]
---
Predecessors: [0x5ba]
Successors: [0x5d7, 0x5db]
---
0x5d1 JUMPDEST
0x5d2 EQ
0x5d3 PUSH2 0x5db
0x5d6 JUMPI
---
0x5d1: JUMPDEST 
0x5d2: V568 = EQ V563 0x2
0x5d3: V569 = 0x5db
0x5d6: JUMPI 0x5db V568
---
Entry stack: [V10, 0xb0, V131, V131, 0x2, V563]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x5d7
[0x5d7:0x5da]
---
Predecessors: [0x5d1]
Successors: []
---
0x5d7 PUSH1 0x0
0x5d9 DUP1
0x5da REVERT
---
0x5d7: V570 = 0x0
0x5da: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x5db
[0x5db:0x613]
---
Predecessors: [0x5d1]
Successors: [0x291, 0x614]
---
0x5db JUMPDEST
0x5dc CALLER
0x5dd PUSH1 0x1
0x5df PUSH1 0xa0
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 SUB
0x5e5 AND
0x5e6 PUSH2 0x8fc
0x5e9 ADDRESS
0x5ea PUSH1 0x1
0x5ec PUSH1 0xa0
0x5ee PUSH1 0x2
0x5f0 EXP
0x5f1 SUB
0x5f2 AND
0x5f3 BALANCE
0x5f4 SWAP1
0x5f5 DUP2
0x5f6 ISZERO
0x5f7 MUL
0x5f8 SWAP1
0x5f9 PUSH1 0x40
0x5fb MLOAD
0x5fc PUSH1 0x0
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 DUP1
0x602 DUP4
0x603 SUB
0x604 DUP2
0x605 DUP6
0x606 DUP9
0x607 DUP9
0x608 CALL
0x609 SWAP4
0x60a POP
0x60b POP
0x60c POP
0x60d POP
0x60e ISZERO
0x60f ISZERO
0x610 PUSH2 0x291
0x613 JUMPI
---
0x5db: JUMPDEST 
0x5dc: V571 = CALLER
0x5dd: V572 = 0x1
0x5df: V573 = 0xa0
0x5e1: V574 = 0x2
0x5e3: V575 = EXP 0x2 0xa0
0x5e4: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e5: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x5e6: V578 = 0x8fc
0x5e9: V579 = ADDRESS
0x5ea: V580 = 0x1
0x5ec: V581 = 0xa0
0x5ee: V582 = 0x2
0x5f0: V583 = EXP 0x2 0xa0
0x5f1: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f2: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x5f3: V586 = BALANCE V585
0x5f6: V587 = ISZERO V586
0x5f7: V588 = MUL V587 0x8fc
0x5f9: V589 = 0x40
0x5fb: V590 = M[0x40]
0x5fc: V591 = 0x0
0x5fe: V592 = 0x40
0x600: V593 = M[0x40]
0x603: V594 = SUB V590 V593
0x608: V595 = CALL V588 V577 V586 V593 V594 V593 0x0
0x60e: V596 = ISZERO V595
0x60f: V597 = ISZERO V596
0x610: V598 = 0x291
0x613: JUMPI 0x291 V597
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x614
[0x614:0x617]
---
Predecessors: [0x5db]
Successors: []
---
0x614 PUSH1 0x0
0x616 DUP1
0x617 REVERT
---
0x614: V599 = 0x0
0x617: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x618
[0x618:0x618]
---
Predecessors: []
Successors: [0x619]
---
0x618 JUMPDEST
---
0x618: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x619
[0x619:0x619]
---
Predecessors: [0x618]
Successors: [0x61a]
---
0x619 JUMPDEST
---
0x619: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x61a
[0x61a:0x61d]
---
Predecessors: [0x619]
Successors: []
Has unresolved jump.
---
0x61a JUMPDEST
0x61b POP
0x61c POP
0x61d JUMP
---
0x61a: JUMPDEST 
0x61d: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x61e
[0x61e:0x626]
---
Predecessors: [0x1af]
Successors: [0x1b7]
---
0x61e JUMPDEST
0x61f PUSH1 0x12
0x621 SLOAD
0x622 PUSH1 0xff
0x624 AND
0x625 DUP2
0x626 JUMP
---
0x61e: JUMPDEST 
0x61f: V600 = 0x12
0x621: V601 = S[0x12]
0x622: V602 = 0xff
0x624: V603 = AND 0xff V601
0x626: JUMP 0x1b7
---
Entry stack: [V10, 0x1b7]
Stack pops: 1
Stack additions: [S0, V603]
Exit stack: [V10, 0x1b7, V603]

================================

Block 0x627
[0x627:0x642]
---
Predecessors: [0x1d6]
Successors: [0x643, 0x647]
---
0x627 JUMPDEST
0x628 PUSH1 0x1
0x62a SLOAD
0x62b PUSH1 0x0
0x62d SWAP1
0x62e DUP2
0x62f SWAP1
0x630 CALLER
0x631 PUSH1 0x1
0x633 PUSH1 0xa0
0x635 PUSH1 0x2
0x637 EXP
0x638 SUB
0x639 SWAP1
0x63a DUP2
0x63b AND
0x63c SWAP2
0x63d AND
0x63e EQ
0x63f PUSH2 0x647
0x642 JUMPI
---
0x627: JUMPDEST 
0x628: V604 = 0x1
0x62a: V605 = S[0x1]
0x62b: V606 = 0x0
0x630: V607 = CALLER
0x631: V608 = 0x1
0x633: V609 = 0xa0
0x635: V610 = 0x2
0x637: V611 = EXP 0x2 0xa0
0x638: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63b: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x63d: V614 = AND V605 0xffffffffffffffffffffffffffffffffffffffff
0x63e: V615 = EQ V614 V613
0x63f: V616 = 0x647
0x642: JUMPI 0x647 V615
---
Entry stack: [V10, 0xb0, V158, V160]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x643
[0x643:0x646]
---
Predecessors: [0x627]
Successors: []
---
0x643 PUSH1 0x0
0x645 DUP1
0x646 REVERT
---
0x643: V617 = 0x0
0x646: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x647
[0x647:0x650]
---
Predecessors: [0x627]
Successors: [0x651, 0x655]
---
0x647 JUMPDEST
0x648 DUP3
0x649 ISZERO
0x64a DUP1
0x64b ISZERO
0x64c SWAP1
0x64d PUSH2 0x655
0x650 JUMPI
---
0x647: JUMPDEST 
0x649: V618 = ISZERO V160
0x64b: V619 = ISZERO V618
0x64d: V620 = 0x655
0x650: JUMPI 0x655 V618
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V619]
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0, V619]

================================

Block 0x651
[0x651:0x654]
---
Predecessors: [0x647]
Successors: [0x655]
---
0x651 POP
0x652 DUP4
0x653 ISZERO
0x654 ISZERO
---
0x653: V621 = ISZERO V158
0x654: V622 = ISZERO V621
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0, V619]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V622]
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0, V622]

================================

Block 0x655
[0x655:0x65b]
---
Predecessors: [0x647, 0x651]
Successors: [0x65c, 0x660]
---
0x655 JUMPDEST
0x656 ISZERO
0x657 ISZERO
0x658 PUSH2 0x660
0x65b JUMPI
---
0x655: JUMPDEST 
0x656: V623 = ISZERO S0
0x657: V624 = ISZERO V623
0x658: V625 = 0x660
0x65b: JUMPI 0x660 V624
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x65c
[0x65c:0x65f]
---
Predecessors: [0x655]
Successors: []
---
0x65c PUSH1 0x0
0x65e DUP1
0x65f REVERT
---
0x65c: V626 = 0x0
0x65f: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x660
[0x660:0x666]
---
Predecessors: [0x655]
Successors: [0x667]
---
0x660 JUMPDEST
0x661 POP
0x662 PUSH1 0x0
0x664 SWAP1
0x665 POP
0x666 DUP1
---
0x660: JUMPDEST 
0x662: V627 = 0x0
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x667
[0x667:0x673]
---
Predecessors: [0x660, 0x6aa]
Successors: [0x674, 0x6b5]
---
0x667 JUMPDEST
0x668 PUSH1 0xa
0x66a DUP3
0x66b PUSH1 0xff
0x66d AND
0x66e LT
0x66f ISZERO
0x670 PUSH2 0x6b5
0x673 JUMPI
---
0x667: JUMPDEST 
0x668: V628 = 0xa
0x66b: V629 = 0xff
0x66d: V630 = AND 0xff S1
0x66e: V631 = LT V630 0xa
0x66f: V632 = ISZERO V631
0x670: V633 = 0x6b5
0x673: JUMPI 0x6b5 V632
---
Entry stack: [V10, 0xb0, V158, V160, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V158, V160, S1, 0x0]

================================

Block 0x674
[0x674:0x694]
---
Predecessors: [0x667]
Successors: [0x695, 0x696]
---
0x674 DUP3
0x675 PUSH1 0x40
0x677 MLOAD
0x678 SWAP1
0x679 DUP2
0x67a MSTORE
0x67b PUSH1 0x20
0x67d ADD
0x67e PUSH1 0x40
0x680 MLOAD
0x681 SWAP1
0x682 DUP2
0x683 SWAP1
0x684 SUB
0x685 SWAP1
0x686 SHA3
0x687 PUSH1 0x5
0x689 PUSH1 0xff
0x68b DUP5
0x68c AND
0x68d PUSH1 0xa
0x68f DUP2
0x690 LT
0x691 PUSH2 0x696
0x694 JUMPI
---
0x675: V634 = 0x40
0x677: V635 = M[0x40]
0x67a: M[V635] = V160
0x67b: V636 = 0x20
0x67d: V637 = ADD 0x20 V635
0x67e: V638 = 0x40
0x680: V639 = M[0x40]
0x684: V640 = SUB V637 V639
0x686: V641 = SHA3 V639 V640
0x687: V642 = 0x5
0x689: V643 = 0xff
0x68c: V644 = AND S1 0xff
0x68d: V645 = 0xa
0x690: V646 = LT V644 0xa
0x691: V647 = 0x696
0x694: JUMPI 0x696 V646
---
Entry stack: [V10, 0xb0, V158, V160, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V641, 0x5, V644]
Exit stack: [V10, 0xb0, V158, V160, S1, 0x0, V641, 0x5, V644]

================================

Block 0x695
[0x695:0x695]
---
Predecessors: [0x674]
Successors: []
---
0x695 INVALID
---
0x695: INVALID 
---
Entry stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, 0x5, V644]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, 0x5, V644]

================================

Block 0x696
[0x696:0x699]
---
Predecessors: [0x674]
Successors: [0x69a]
---
0x696 JUMPDEST
0x697 ADD
0x698 PUSH1 0x0
---
0x696: JUMPDEST 
0x697: V648 = ADD V644 0x5
0x698: V649 = 0x0
---
Entry stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, 0x5, V644]
Stack pops: 2
Stack additions: [V648, 0x0]
Exit stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, V648, 0x0]

================================

Block 0x69a
[0x69a:0x6a2]
---
Predecessors: [0x696]
Successors: [0x6a3, 0x6aa]
---
0x69a JUMPDEST
0x69b POP
0x69c SLOAD
0x69d EQ
0x69e ISZERO
0x69f PUSH2 0x6aa
0x6a2 JUMPI
---
0x69a: JUMPDEST 
0x69c: V650 = S[V648]
0x69d: V651 = EQ V650 V641
0x69e: V652 = ISZERO V651
0x69f: V653 = 0x6aa
0x6a2: JUMPI 0x6aa V652
---
Entry stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, V648, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, S4, 0x0]

================================

Block 0x6a3
[0x6a3:0x6a9]
---
Predecessors: [0x69a]
Successors: [0x6b5]
---
0x6a3 POP
0x6a4 PUSH1 0x1
0x6a6 PUSH2 0x6b5
0x6a9 JUMP
---
0x6a4: V654 = 0x1
0x6a6: V655 = 0x6b5
0x6a9: JUMP 0x6b5
---
Entry stack: [V10, 0xb0, V158, V160, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0xb0, V158, V160, S1, 0x1]

================================

Block 0x6aa
[0x6aa:0x6b4]
---
Predecessors: [0x69a]
Successors: [0x667]
---
0x6aa JUMPDEST
0x6ab PUSH1 0x1
0x6ad SWAP1
0x6ae SWAP2
0x6af ADD
0x6b0 SWAP1
0x6b1 PUSH2 0x667
0x6b4 JUMP
---
0x6aa: JUMPDEST 
0x6ab: V656 = 0x1
0x6af: V657 = ADD S1 0x1
0x6b1: V658 = 0x667
0x6b4: JUMP 0x667
---
Entry stack: [V10, 0xb0, V158, V160, S1, 0x0]
Stack pops: 2
Stack additions: [V657, S0]
Exit stack: [V10, 0xb0, V158, V160, V657, 0x0]

================================

Block 0x6b5
[0x6b5:0x6bc]
---
Predecessors: [0x667, 0x6a3]
Successors: [0x6bd, 0x6c1]
---
0x6b5 JUMPDEST
0x6b6 DUP1
0x6b7 ISZERO
0x6b8 ISZERO
0x6b9 PUSH2 0x6c1
0x6bc JUMPI
---
0x6b5: JUMPDEST 
0x6b7: V659 = ISZERO {0x0, 0x1}
0x6b8: V660 = ISZERO V659
0x6b9: V661 = 0x6c1
0x6bc: JUMPI 0x6c1 V660
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]

================================

Block 0x6bd
[0x6bd:0x6c0]
---
Predecessors: [0x6b5]
Successors: []
---
0x6bd PUSH1 0x0
0x6bf DUP1
0x6c0 REVERT
---
0x6bd: V662 = 0x0
0x6c0: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]

================================

Block 0x6c1
[0x6c1:0x6d8]
---
Predecessors: [0x6b5]
Successors: [0x6d9]
---
0x6c1 JUMPDEST
0x6c2 TIMESTAMP
0x6c3 PUSH1 0x10
0x6c5 SSTORE
0x6c6 PUSH1 0x12
0x6c8 DUP1
0x6c9 SLOAD
0x6ca PUSH1 0x2
0x6cc SWAP2
0x6cd SWAP1
0x6ce PUSH3 0xff0000
0x6d2 NOT
0x6d3 AND
0x6d4 PUSH3 0x10000
0x6d8 DUP4
---
0x6c1: JUMPDEST 
0x6c2: V663 = TIMESTAMP
0x6c3: V664 = 0x10
0x6c5: S[0x10] = V663
0x6c6: V665 = 0x12
0x6c9: V666 = S[0x12]
0x6ca: V667 = 0x2
0x6ce: V668 = 0xff0000
0x6d2: V669 = NOT 0xff0000
0x6d3: V670 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V666
0x6d4: V671 = 0x10000
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x2, 0x12, V670, 0x10000, 0x2]
Exit stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}, 0x2, 0x12, V670, 0x10000, 0x2]

================================

Block 0x6d9
[0x6d9:0x6e3]
---
Predecessors: [0x6c1]
Successors: [0x6e4]
---
0x6d9 JUMPDEST
0x6da MUL
0x6db OR
0x6dc SWAP1
0x6dd SSTORE
0x6de POP
0x6df PUSH1 0x0
0x6e1 DUP5
0x6e2 SWAP1
0x6e3 SSTORE
---
0x6d9: JUMPDEST 
0x6da: V672 = MUL 0x2 0x10000
0x6db: V673 = OR 0x20000 V670
0x6dd: S[0x12] = V673
0x6df: V674 = 0x0
0x6e3: S[0x0] = V158
---
Entry stack: [V10, 0xb0, V158, V160, S6, {0x0, 0x1}, 0x2, 0x12, V670, 0x10000, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5]
Exit stack: [V10, 0xb0, V158, V160, S6, {0x0, 0x1}]

================================

Block 0x6e4
[0x6e4:0x6e4]
---
Predecessors: [0x6d9]
Successors: [0x6e5]
---
0x6e4 JUMPDEST
---
0x6e4: JUMPDEST 
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]

================================

Block 0x6e5
[0x6e5:0x6ea]
---
Predecessors: [0x6e4]
Successors: [0xb0]
---
0x6e5 JUMPDEST
0x6e6 POP
0x6e7 POP
0x6e8 POP
0x6e9 POP
0x6ea JUMP
---
0x6e5: JUMPDEST 
0x6ea: JUMP 0xb0
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x6eb
[0x6eb:0x728]
---
Predecessors: []
Successors: []
---
0x6eb STOP
0x6ec LOG1
0x6ed PUSH6 0x627a7a723058
0x6f4 SHA3
0x6f5 MISSING 0xa9
0x6f6 MISSING 0xf
0x6f7 MISSING 0xaf
0x6f8 PUSH7 0x1dfc99fc20b574
0x700 PUSH3 0xc8e8a1
0x704 SWAP6
0x705 MISSING 0xdf
0x706 ORIGIN
0x707 MISSING 0xfb
0x708 MISSING 0xd1
0x709 PUSH31 0xf67f69c8c38a4b5aee30da0029
---
0x6eb: STOP 
0x6ec: LOG S0 S1 S2
0x6ed: V675 = 0x627a7a723058
0x6f4: V676 = SHA3 0x627a7a723058 S3
0x6f5: MISSING 0xa9
0x6f6: MISSING 0xf
0x6f7: MISSING 0xaf
0x6f8: V677 = 0x1dfc99fc20b574
0x700: V678 = 0xc8e8a1
0x705: MISSING 0xdf
0x706: V679 = ORIGIN
0x707: MISSING 0xfb
0x708: MISSING 0xd1
0x709: V680 = 0xf67f69c8c38a4b5aee30da0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V676, S4, 0x1dfc99fc20b574, S0, S1, S2, S3, 0xc8e8a1, V679, 0xf67f69c8c38a4b5aee30da0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1793c314
Entry block: 0xb3
Exit block: 0xb1
Body: 0xb0, 0xb1, 0xb3, 0xba, 0xbe, 0x1e6, 0x1f3, 0x1ff, 0x205, 0x209, 0x21a, 0x24f, 0x253, 0x254, 0x28d, 0x291, 0x292

Function 1:
Public function signature: 0x21e92d49
Entry block: 0xda
Exit block: 0xb1
Body: 0xb0, 0xb1, 0xda, 0x296, 0x2ad, 0x2b1, 0x2b4, 0x2ca, 0x2cb, 0x2d1, 0x2d5, 0x2e8, 0x2ec, 0x2fd, 0x301, 0x32e, 0x332, 0x337, 0x338

Function 2:
Public function signature: 0x872fe620
Entry block: 0xf3
Exit block: 0x428
Body: 0xb0, 0xb1, 0xf3, 0xfa, 0xfe, 0x33c, 0x372, 0x376, 0x379, 0x38f, 0x390, 0x396, 0x3ad, 0x3b7, 0x3c6, 0x3ca, 0x3cb, 0x3ce, 0x3e4, 0x3e5, 0x3eb, 0x3ef, 0x428, 0x42c, 0x42d, 0x42e

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x108
Exit block: 0x11b
Body: 0x108, 0x10f, 0x113, 0x11b, 0x430

Function 4:
Public function signature: 0x9066314e
Entry block: 0x137
Exit block: 0xb1
Body: 0xb0, 0xb1, 0x137, 0x13e, 0x142, 0x43f, 0x456, 0x45a, 0x45d, 0x473, 0x474, 0x47a, 0x47e, 0x49e, 0x49f

Function 5:
Public function signature: 0xa5bbc423
Entry block: 0x151
Exit block: 0xb1
Body: 0xb0, 0xb1, 0x151, 0x158, 0x15c, 0x291, 0x292, 0x4a2, 0x4b9, 0x4c2, 0x4c6, 0x4d9, 0x535, 0x539, 0x548, 0x54c, 0x560, 0x569, 0x56d, 0x580, 0x5b3, 0x5b7, 0x5ba, 0x5d0, 0x5d1, 0x5d7, 0x5db, 0x614

Function 6:
Public function signature: 0xc46f3e25
Entry block: 0x1a4
Exit block: 0x1b7
Body: 0x1a4, 0x1ab, 0x1af, 0x1b7, 0x61e

Function 7:
Public function signature: 0xf341cae8
Entry block: 0x1cb
Exit block: 0xb1
Body: 0xb0, 0xb1, 0x1cb, 0x1d2, 0x1d6, 0x627, 0x643, 0x647, 0x651, 0x655, 0x65c, 0x660, 0x667, 0x674, 0x695, 0x696, 0x69a, 0x6a3, 0x6aa, 0x6b5, 0x6bd, 0x6c1, 0x6d9, 0x6e4, 0x6e5

Function 8:
Public fallback function
Entry block: 0x8b
Exit block: 0xb1
Body: 0x8b, 0x8c, 0x8f, 0xa5, 0xa6, 0xac, 0xb0, 0xb1

