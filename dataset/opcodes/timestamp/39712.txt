Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb4
0xa: JUMPI 0xb4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x240]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x9799c01
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x240
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x9799c01
0x20: V14 = EQ V12 0x9799c01
0x21: V15 = 0x240
0x24: JUMPI 0x240 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x265]
---
0x25 DUP1
0x26 PUSH4 0xb97bc86
0x2b EQ
0x2c PUSH2 0x265
0x2f JUMPI
---
0x26: V16 = 0xb97bc86
0x2b: V17 = EQ 0xb97bc86 V12
0x2c: V18 = 0x265
0x2f: JUMPI 0x265 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x28a]
---
0x30 DUP1
0x31 PUSH4 0x38af3eed
0x36 EQ
0x37 PUSH2 0x28a
0x3a JUMPI
---
0x31: V19 = 0x38af3eed
0x36: V20 = EQ 0x38af3eed V12
0x37: V21 = 0x28a
0x3a: JUMPI 0x28a V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x2b9]
---
0x3b DUP1
0x3c PUSH4 0x3ba0b9a9
0x41 EQ
0x42 PUSH2 0x2b9
0x45 JUMPI
---
0x3c: V22 = 0x3ba0b9a9
0x41: V23 = EQ 0x3ba0b9a9 V12
0x42: V24 = 0x2b9
0x45: JUMPI 0x2b9 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2de]
---
0x46 DUP1
0x47 PUSH4 0x68428a1b
0x4c EQ
0x4d PUSH2 0x2de
0x50 JUMPI
---
0x47: V25 = 0x68428a1b
0x4c: V26 = EQ 0x68428a1b V12
0x4d: V27 = 0x2de
0x50: JUMPI 0x2de V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x305]
---
0x51 DUP1
0x52 PUSH4 0x69043895
0x57 EQ
0x58 PUSH2 0x305
0x5b JUMPI
---
0x52: V28 = 0x69043895
0x57: V29 = EQ 0x69043895 V12
0x58: V30 = 0x305
0x5b: JUMPI 0x305 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x326]
---
0x5c DUP1
0x5d PUSH4 0x6e66f6e9
0x62 EQ
0x63 PUSH2 0x326
0x66 JUMPI
---
0x5d: V31 = 0x6e66f6e9
0x62: V32 = EQ 0x6e66f6e9 V12
0x63: V33 = 0x326
0x66: JUMPI 0x326 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x355]
---
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x355
0x71 JUMPI
---
0x68: V34 = 0x70a08231
0x6d: V35 = EQ 0x70a08231 V12
0x6e: V36 = 0x355
0x71: JUMPI 0x355 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x386]
---
0x72 DUP1
0x73 PUSH4 0x7a3a0e84
0x78 EQ
0x79 PUSH2 0x386
0x7c JUMPI
---
0x73: V37 = 0x7a3a0e84
0x78: V38 = EQ 0x7a3a0e84 V12
0x79: V39 = 0x386
0x7c: JUMPI 0x386 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3ab]
---
0x7d DUP1
0x7e PUSH4 0x7b3e5e7b
0x83 EQ
0x84 PUSH2 0x3ab
0x87 JUMPI
---
0x7e: V40 = 0x7b3e5e7b
0x83: V41 = EQ 0x7b3e5e7b V12
0x84: V42 = 0x3ab
0x87: JUMPI 0x3ab V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3d0]
---
0x88 DUP1
0x89 PUSH4 0x83197ef0
0x8e EQ
0x8f PUSH2 0x3d0
0x92 JUMPI
---
0x89: V43 = 0x83197ef0
0x8e: V44 = EQ 0x83197ef0 V12
0x8f: V45 = 0x3d0
0x92: JUMPI 0x3d0 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x3e5]
---
0x93 DUP1
0x94 PUSH4 0x8da5cb5b
0x99 EQ
0x9a PUSH2 0x3e5
0x9d JUMPI
---
0x94: V46 = 0x8da5cb5b
0x99: V47 = EQ 0x8da5cb5b V12
0x9a: V48 = 0x3e5
0x9d: JUMPI 0x3e5 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x414]
---
0x9e DUP1
0x9f PUSH4 0xb52e0dc8
0xa4 EQ
0xa5 PUSH2 0x414
0xa8 JUMPI
---
0x9f: V49 = 0xb52e0dc8
0xa4: V50 = EQ 0xb52e0dc8 V12
0xa5: V51 = 0x414
0xa8: JUMPI 0x414 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x43c]
---
0xa9 DUP1
0xaa PUSH4 0xc10b9358
0xaf EQ
0xb0 PUSH2 0x43c
0xb3 JUMPI
---
0xaa: V52 = 0xc10b9358
0xaf: V53 = EQ 0xc10b9358 V12
0xb0: V54 = 0x43c
0xb3: JUMPI 0x43c V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0x0, 0xa9]
Successors: [0xb5]
---
0xb4 JUMPDEST
---
0xb4: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5
[0xb5:0xbf]
---
Predecessors: [0xb4]
Successors: [0x451]
---
0xb5 JUMPDEST
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 PUSH2 0xc0
0xbc PUSH2 0x451
0xbf JUMP
---
0xb5: JUMPDEST 
0xb6: V55 = 0x0
0xb9: V56 = 0xc0
0xbc: V57 = 0x451
0xbf: JUMP 0x451
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0xc0]
Exit stack: [V12, 0x0, 0x0, 0xc0]

================================

Block 0xc0
[0xc0:0xc6]
---
Predecessors: [0x479]
Successors: [0xc7, 0xcb]
---
0xc0 JUMPDEST
0xc1 ISZERO
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xc0: JUMPDEST 
0xc1: V58 = ISZERO S0
0xc2: V59 = ISZERO V58
0xc3: V60 = 0xcb
0xc6: JUMPI 0xcb V59
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xc0]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V61 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0xcb
[0xcb:0xd6]
---
Predecessors: [0xc0]
Successors: [0xd7, 0xdb]
---
0xcb JUMPDEST
0xcc PUSH1 0x3
0xce SLOAD
0xcf PUSH1 0x4
0xd1 SLOAD
0xd2 LT
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xcb: JUMPDEST 
0xcc: V62 = 0x3
0xce: V63 = S[0x3]
0xcf: V64 = 0x4
0xd1: V65 = S[0x4]
0xd2: V66 = LT V65 V63
0xd3: V67 = 0xdb
0xd6: JUMPI 0xdb V66
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xcb]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V68 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0xdb
[0xdb:0x110]
---
Predecessors: [0xcb]
Successors: [0x47c]
---
0xdb JUMPDEST
0xdc PUSH1 0x1
0xde PUSH1 0xa0
0xe0 PUSH1 0x2
0xe2 EXP
0xe3 SUB
0xe4 CALLER
0xe5 AND
0xe6 PUSH1 0x0
0xe8 SWAP1
0xe9 DUP2
0xea MSTORE
0xeb PUSH1 0x8
0xed PUSH1 0x20
0xef MSTORE
0xf0 PUSH1 0x40
0xf2 SWAP1
0xf3 SHA3
0xf4 DUP1
0xf5 SLOAD
0xf6 CALLVALUE
0xf7 SWAP1
0xf8 DUP2
0xf9 ADD
0xfa SWAP1
0xfb SWAP2
0xfc SSTORE
0xfd PUSH1 0x4
0xff DUP1
0x100 SLOAD
0x101 DUP3
0x102 ADD
0x103 SWAP1
0x104 SSTORE
0x105 SWAP2
0x106 POP
0x107 PUSH2 0x116
0x10a PUSH2 0x111
0x10d PUSH2 0x47c
0x110 JUMP
---
0xdb: JUMPDEST 
0xdc: V69 = 0x1
0xde: V70 = 0xa0
0xe0: V71 = 0x2
0xe2: V72 = EXP 0x2 0xa0
0xe3: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4: V74 = CALLER
0xe5: V75 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V76 = 0x0
0xea: M[0x0] = V75
0xeb: V77 = 0x8
0xed: V78 = 0x20
0xef: M[0x20] = 0x8
0xf0: V79 = 0x40
0xf3: V80 = SHA3 0x0 0x40
0xf5: V81 = S[V80]
0xf6: V82 = CALLVALUE
0xf9: V83 = ADD V82 V81
0xfc: S[V80] = V83
0xfd: V84 = 0x4
0x100: V85 = S[0x4]
0x102: V86 = ADD V82 V85
0x104: S[0x4] = V86
0x107: V87 = 0x116
0x10a: V88 = 0x111
0x10d: V89 = 0x47c
0x110: JUMP 0x47c
---
Entry stack: [V12, S1, S0]
Stack pops: 2
Stack additions: [V82, S0, 0x116, 0x111]
Exit stack: [V12, V82, S0, 0x116, 0x111]

================================

Block 0x111
[0x111:0x115]
---
Predecessors: [0x47e]
Successors: [0x481]
---
0x111 JUMPDEST
0x112 PUSH2 0x481
0x115 JUMP
---
0x111: JUMPDEST 
0x112: V90 = 0x481
0x115: JUMP 0x481
---
Entry stack: [V12, V82, S2, {0x116, 0x129}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, S2, {0x116, 0x129}, S0]

================================

Block 0x116
[0x116:0x123]
---
Predecessors: [0x4b8]
Successors: [0x47c]
---
0x116 JUMPDEST
0x117 PUSH1 0x5
0x119 SSTORE
0x11a PUSH2 0x129
0x11d PUSH2 0x111
0x120 PUSH2 0x47c
0x123 JUMP
---
0x116: JUMPDEST 
0x117: V91 = 0x5
0x119: S[0x5] = {0x0, 0x1964}
0x11a: V92 = 0x129
0x11d: V93 = 0x111
0x120: V94 = 0x47c
0x123: JUMP 0x47c
---
Entry stack: [V12, V82, S1, {0x0, 0x1964}]
Stack pops: 1
Stack additions: [0x129, 0x111]
Exit stack: [V12, V82, S1, 0x129, 0x111]

================================

Block 0x124
[0x124:0x128]
---
Predecessors: []
Successors: [0x481]
---
0x124 JUMPDEST
0x125 PUSH2 0x481
0x128 JUMP
---
0x124: JUMPDEST 
0x125: V95 = 0x481
0x128: JUMP 0x481
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x129
[0x129:0x137]
---
Predecessors: [0x4b8]
Successors: [0x138, 0x139]
---
0x129 JUMPDEST
0x12a PUSH6 0x5af3107a4000
0x131 DUP2
0x132 ISZERO
0x133 ISZERO
0x134 PUSH2 0x139
0x137 JUMPI
---
0x129: JUMPDEST 
0x12a: V96 = 0x5af3107a4000
0x132: V97 = ISZERO {0x0, 0x1964}
0x133: V98 = ISZERO V97
0x134: V99 = 0x139
0x137: JUMPI 0x139 V98
---
Entry stack: [V12, V82, S1, {0x0, 0x1964}]
Stack pops: 1
Stack additions: [S0, 0x5af3107a4000]
Exit stack: [V12, V82, S1, {0x0, 0x1964}, 0x5af3107a4000]

================================

Block 0x138
[0x138:0x138]
---
Predecessors: [0x129]
Successors: []
---
0x138 INVALID
---
0x138: INVALID 
---
Entry stack: [V12, V82, S2, {0x0, 0x1964}, 0x5af3107a4000]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, S2, {0x0, 0x1964}, 0x5af3107a4000]

================================

Block 0x139
[0x139:0x159]
---
Predecessors: [0x129]
Successors: [0x15a, 0x15b]
---
0x139 JUMPDEST
0x13a PUSH1 0x6
0x13c SLOAD
0x13d SWAP2
0x13e SWAP1
0x13f DIV
0x140 SWAP2
0x141 POP
0x142 PUSH1 0x1
0x144 PUSH1 0xa0
0x146 PUSH1 0x2
0x148 EXP
0x149 SUB
0x14a AND
0x14b PUSH4 0xa9059cbb
0x150 CALLER
0x151 DUP4
0x152 DUP6
0x153 DUP2
0x154 ISZERO
0x155 ISZERO
0x156 PUSH2 0x15b
0x159 JUMPI
---
0x139: JUMPDEST 
0x13a: V100 = 0x6
0x13c: V101 = S[0x6]
0x13f: V102 = DIV 0x5af3107a4000 {0x0, 0x1964}
0x142: V103 = 0x1
0x144: V104 = 0xa0
0x146: V105 = 0x2
0x148: V106 = EXP 0x2 0xa0
0x149: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x14b: V109 = 0xa9059cbb
0x150: V110 = CALLER
0x154: V111 = ISZERO V102
0x155: V112 = ISZERO V111
0x156: V113 = 0x15b
0x159: JUMPI 0x15b V112
---
Entry stack: [V12, V82, S2, {0x0, 0x1964}, 0x5af3107a4000]
Stack pops: 4
Stack additions: [S3, V102, V108, 0xa9059cbb, V110, V102, S3]
Exit stack: [V12, V82, V102, V108, 0xa9059cbb, V110, V102, V82]

================================

Block 0x15a
[0x15a:0x15a]
---
Predecessors: [0x139]
Successors: []
---
0x15a INVALID
---
0x15a: INVALID 
---
Entry stack: [V12, V82, V102, V108, 0xa9059cbb, V110, V102, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, V102, V108, 0xa9059cbb, V110, V102, V82]

================================

Block 0x15b
[0x15b:0x19a]
---
Predecessors: [0x139]
Successors: [0x19b, 0x19f]
---
0x15b JUMPDEST
0x15c DIV
0x15d PUSH1 0x40
0x15f MLOAD
0x160 PUSH1 0xe0
0x162 PUSH1 0x2
0x164 EXP
0x165 PUSH4 0xffffffff
0x16a DUP6
0x16b AND
0x16c MUL
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 SWAP1
0x178 SWAP3
0x179 AND
0x17a PUSH1 0x4
0x17c DUP4
0x17d ADD
0x17e MSTORE
0x17f PUSH1 0x24
0x181 DUP3
0x182 ADD
0x183 MSTORE
0x184 PUSH1 0x44
0x186 ADD
0x187 PUSH1 0x0
0x189 PUSH1 0x40
0x18b MLOAD
0x18c DUP1
0x18d DUP4
0x18e SUB
0x18f DUP2
0x190 PUSH1 0x0
0x192 DUP8
0x193 DUP1
0x194 EXTCODESIZE
0x195 ISZERO
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x15b: JUMPDEST 
0x15c: V114 = DIV V82 V102
0x15d: V115 = 0x40
0x15f: V116 = M[0x40]
0x160: V117 = 0xe0
0x162: V118 = 0x2
0x164: V119 = EXP 0x2 0xe0
0x165: V120 = 0xffffffff
0x16b: V121 = AND 0xa9059cbb 0xffffffff
0x16c: V122 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x16e: M[V116] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x16f: V123 = 0x1
0x171: V124 = 0xa0
0x173: V125 = 0x2
0x175: V126 = EXP 0x2 0xa0
0x176: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V128 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V129 = 0x4
0x17d: V130 = ADD V116 0x4
0x17e: M[V130] = V128
0x17f: V131 = 0x24
0x182: V132 = ADD V116 0x24
0x183: M[V132] = V114
0x184: V133 = 0x44
0x186: V134 = ADD 0x44 V116
0x187: V135 = 0x0
0x189: V136 = 0x40
0x18b: V137 = M[0x40]
0x18e: V138 = SUB V134 V137
0x190: V139 = 0x0
0x194: V140 = EXTCODESIZE V108
0x195: V141 = ISZERO V140
0x196: V142 = ISZERO V141
0x197: V143 = 0x19f
0x19a: JUMPI 0x19f V142
---
Entry stack: [V12, V82, V102, V108, 0xa9059cbb, V110, V102, V82]
Stack pops: 5
Stack additions: [S4, S3, V134, 0x0, V137, V138, V137, 0x0, S4]
Exit stack: [V12, V82, V102, V108, 0xa9059cbb, V134, 0x0, V137, V138, V137, 0x0, V108]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x15b]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V144 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V12, V82, V102, V108, 0xa9059cbb, V134, 0x0, V137, V138, V137, 0x0, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, V102, V108, 0xa9059cbb, V134, 0x0, V137, V138, V137, 0x0, V108]

================================

Block 0x19f
[0x19f:0x1ab]
---
Predecessors: [0x15b]
Successors: [0x1ac, 0x1b0]
---
0x19f JUMPDEST
0x1a0 PUSH2 0x2c6
0x1a3 GAS
0x1a4 SUB
0x1a5 CALL
0x1a6 ISZERO
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x19f: JUMPDEST 
0x1a0: V145 = 0x2c6
0x1a3: V146 = GAS
0x1a4: V147 = SUB V146 0x2c6
0x1a5: V148 = CALL V147 V108 0x0 V137 V138 V137 0x0
0x1a6: V149 = ISZERO V148
0x1a7: V150 = ISZERO V149
0x1a8: V151 = 0x1b0
0x1ab: JUMPI 0x1b0 V150
---
Entry stack: [V12, V82, V102, V108, 0xa9059cbb, V134, 0x0, V137, V138, V137, 0x0, V108]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V82, V102, V108, 0xa9059cbb, V134]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x19f]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V152 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V12, V82, V102, V108, 0xa9059cbb, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, V102, V108, 0xa9059cbb, V134]

================================

Block 0x1b0
[0x1b0:0x236]
---
Predecessors: [0x19f]
Successors: [0x237, 0x23b]
---
0x1b0 JUMPDEST
0x1b1 POP
0x1b2 POP
0x1b3 POP
0x1b4 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d5 CALLER
0x1d6 DUP4
0x1d7 PUSH1 0x1
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 SWAP1
0x1e5 SWAP4
0x1e6 AND
0x1e7 DUP4
0x1e8 MSTORE
0x1e9 PUSH1 0x20
0x1eb DUP4
0x1ec ADD
0x1ed SWAP2
0x1ee SWAP1
0x1ef SWAP2
0x1f0 MSTORE
0x1f1 ISZERO
0x1f2 ISZERO
0x1f3 PUSH1 0x40
0x1f5 DUP1
0x1f6 DUP4
0x1f7 ADD
0x1f8 SWAP2
0x1f9 SWAP1
0x1fa SWAP2
0x1fb MSTORE
0x1fc PUSH1 0x60
0x1fe SWAP1
0x1ff SWAP2
0x200 ADD
0x201 SWAP1
0x202 MLOAD
0x203 DUP1
0x204 SWAP2
0x205 SUB
0x206 SWAP1
0x207 LOG1
0x208 PUSH1 0x7
0x20a SLOAD
0x20b PUSH1 0x1
0x20d PUSH1 0xa0
0x20f PUSH1 0x2
0x211 EXP
0x212 SUB
0x213 AND
0x214 CALLVALUE
0x215 DUP1
0x216 ISZERO
0x217 PUSH2 0x8fc
0x21a MUL
0x21b SWAP1
0x21c PUSH1 0x40
0x21e MLOAD
0x21f PUSH1 0x0
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 DUP4
0x226 SUB
0x227 DUP2
0x228 DUP6
0x229 DUP9
0x22a DUP9
0x22b CALL
0x22c SWAP4
0x22d POP
0x22e POP
0x22f POP
0x230 POP
0x231 ISZERO
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x1b0: JUMPDEST 
0x1b4: V153 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d5: V154 = CALLER
0x1d7: V155 = 0x1
0x1d9: V156 = 0x40
0x1db: V157 = M[0x40]
0x1dc: V158 = 0x1
0x1de: V159 = 0xa0
0x1e0: V160 = 0x2
0x1e2: V161 = EXP 0x2 0xa0
0x1e3: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V163 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: M[V157] = V163
0x1e9: V164 = 0x20
0x1ec: V165 = ADD V157 0x20
0x1f0: M[V165] = V82
0x1f1: V166 = ISZERO 0x1
0x1f2: V167 = ISZERO 0x0
0x1f3: V168 = 0x40
0x1f7: V169 = ADD V157 0x40
0x1fb: M[V169] = 0x1
0x1fc: V170 = 0x60
0x200: V171 = ADD V157 0x60
0x202: V172 = M[0x40]
0x205: V173 = SUB V171 V172
0x207: LOG V172 V173 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x208: V174 = 0x7
0x20a: V175 = S[0x7]
0x20b: V176 = 0x1
0x20d: V177 = 0xa0
0x20f: V178 = 0x2
0x211: V179 = EXP 0x2 0xa0
0x212: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x213: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x214: V182 = CALLVALUE
0x216: V183 = ISZERO V182
0x217: V184 = 0x8fc
0x21a: V185 = MUL 0x8fc V183
0x21c: V186 = 0x40
0x21e: V187 = M[0x40]
0x21f: V188 = 0x0
0x221: V189 = 0x40
0x223: V190 = M[0x40]
0x226: V191 = SUB V187 V190
0x22b: V192 = CALL V185 V181 V182 V190 V191 V190 0x0
0x231: V193 = ISZERO V192
0x232: V194 = ISZERO V193
0x233: V195 = 0x23b
0x236: JUMPI 0x23b V194
---
Entry stack: [V12, V82, V102, V108, 0xa9059cbb, V134]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, V82, V102]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x1b0]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V196 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V12, V82, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, V102]

================================

Block 0x23b
[0x23b:0x23b]
---
Predecessors: [0x1b0]
Successors: [0x23c]
---
0x23b JUMPDEST
---
0x23b: JUMPDEST 
---
Entry stack: [V12, V82, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, V102]

================================

Block 0x23c
[0x23c:0x23f]
---
Predecessors: [0x23b]
Successors: []
---
0x23c JUMPDEST
0x23d POP
0x23e POP
0x23f STOP
---
0x23c: JUMPDEST 
0x23f: STOP 
---
Entry stack: [V12, V82, V102]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x240
[0x240:0x246]
---
Predecessors: [0xb]
Successors: [0x247, 0x24b]
---
0x240 JUMPDEST
0x241 CALLVALUE
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x240: JUMPDEST 
0x241: V197 = CALLVALUE
0x242: V198 = ISZERO V197
0x243: V199 = 0x24b
0x246: JUMPI 0x24b V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x240]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V200 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24b
[0x24b:0x252]
---
Predecessors: [0x240]
Successors: [0x4bd]
---
0x24b JUMPDEST
0x24c PUSH2 0x253
0x24f PUSH2 0x4bd
0x252 JUMP
---
0x24b: JUMPDEST 
0x24c: V201 = 0x253
0x24f: V202 = 0x4bd
0x252: JUMP 0x4bd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x253]
Exit stack: [V12, 0x253]

================================

Block 0x253
[0x253:0x264]
---
Predecessors: [0x4b8, 0x4bd, 0x4c3, 0x4d8, 0x535, 0x547, 0x54d]
Successors: []
---
0x253 JUMPDEST
0x254 PUSH1 0x40
0x256 MLOAD
0x257 SWAP1
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x20
0x25c ADD
0x25d PUSH1 0x40
0x25f MLOAD
0x260 DUP1
0x261 SWAP2
0x262 SUB
0x263 SWAP1
0x264 RETURN
---
0x253: JUMPDEST 
0x254: V203 = 0x40
0x256: V204 = M[0x40]
0x259: M[V204] = S0
0x25a: V205 = 0x20
0x25c: V206 = ADD 0x20 V204
0x25d: V207 = 0x40
0x25f: V208 = M[0x40]
0x262: V209 = SUB V206 V208
0x264: RETURN V208 V209
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0x265
[0x265:0x26b]
---
Predecessors: [0x25]
Successors: [0x26c, 0x270]
---
0x265 JUMPDEST
0x266 CALLVALUE
0x267 ISZERO
0x268 PUSH2 0x270
0x26b JUMPI
---
0x265: JUMPDEST 
0x266: V210 = CALLVALUE
0x267: V211 = ISZERO V210
0x268: V212 = 0x270
0x26b: JUMPI 0x270 V211
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0x265]
Successors: []
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f REVERT
---
0x26c: V213 = 0x0
0x26f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x270
[0x270:0x277]
---
Predecessors: [0x265]
Successors: [0x4c3]
---
0x270 JUMPDEST
0x271 PUSH2 0x253
0x274 PUSH2 0x4c3
0x277 JUMP
---
0x270: JUMPDEST 
0x271: V214 = 0x253
0x274: V215 = 0x4c3
0x277: JUMP 0x4c3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x253]
Exit stack: [V12, 0x253]

================================

Block 0x278
[0x278:0x289]
---
Predecessors: []
Successors: []
---
0x278 JUMPDEST
0x279 PUSH1 0x40
0x27b MLOAD
0x27c SWAP1
0x27d DUP2
0x27e MSTORE
0x27f PUSH1 0x20
0x281 ADD
0x282 PUSH1 0x40
0x284 MLOAD
0x285 DUP1
0x286 SWAP2
0x287 SUB
0x288 SWAP1
0x289 RETURN
---
0x278: JUMPDEST 
0x279: V216 = 0x40
0x27b: V217 = M[0x40]
0x27e: M[V217] = S0
0x27f: V218 = 0x20
0x281: V219 = ADD 0x20 V217
0x282: V220 = 0x40
0x284: V221 = M[0x40]
0x287: V222 = SUB V219 V221
0x289: RETURN V221 V222
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28a
[0x28a:0x290]
---
Predecessors: [0x30]
Successors: [0x291, 0x295]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x28a: JUMPDEST 
0x28b: V223 = CALLVALUE
0x28c: V224 = ISZERO V223
0x28d: V225 = 0x295
0x290: JUMPI 0x295 V224
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x28a]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V226 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x295
[0x295:0x29c]
---
Predecessors: [0x28a]
Successors: [0x4c9]
---
0x295 JUMPDEST
0x296 PUSH2 0x29d
0x299 PUSH2 0x4c9
0x29c JUMP
---
0x295: JUMPDEST 
0x296: V227 = 0x29d
0x299: V228 = 0x4c9
0x29c: JUMP 0x4c9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29d]
Exit stack: [V12, 0x29d]

================================

Block 0x29d
[0x29d:0x2b8]
---
Predecessors: [0x4c9, 0x526, 0x590]
Successors: []
---
0x29d JUMPDEST
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 SWAP1
0x2aa SWAP2
0x2ab AND
0x2ac DUP2
0x2ad MSTORE
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 DUP1
0x2b5 SWAP2
0x2b6 SUB
0x2b7 SWAP1
0x2b8 RETURN
---
0x29d: JUMPDEST 
0x29e: V229 = 0x40
0x2a0: V230 = M[0x40]
0x2a1: V231 = 0x1
0x2a3: V232 = 0xa0
0x2a5: V233 = 0x2
0x2a7: V234 = EXP 0x2 0xa0
0x2a8: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ab: V236 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: M[V230] = V236
0x2ae: V237 = 0x20
0x2b0: V238 = ADD 0x20 V230
0x2b1: V239 = 0x40
0x2b3: V240 = M[0x40]
0x2b6: V241 = SUB V238 V240
0x2b8: RETURN V240 V241
---
Entry stack: [V12, 0x29d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x29d]

================================

Block 0x2b9
[0x2b9:0x2bf]
---
Predecessors: [0x3b]
Successors: [0x2c0, 0x2c4]
---
0x2b9 JUMPDEST
0x2ba CALLVALUE
0x2bb ISZERO
0x2bc PUSH2 0x2c4
0x2bf JUMPI
---
0x2b9: JUMPDEST 
0x2ba: V242 = CALLVALUE
0x2bb: V243 = ISZERO V242
0x2bc: V244 = 0x2c4
0x2bf: JUMPI 0x2c4 V243
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c0
[0x2c0:0x2c3]
---
Predecessors: [0x2b9]
Successors: []
---
0x2c0 PUSH1 0x0
0x2c2 DUP1
0x2c3 REVERT
---
0x2c0: V245 = 0x0
0x2c3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c4
[0x2c4:0x2cb]
---
Predecessors: [0x2b9]
Successors: [0x4d8]
---
0x2c4 JUMPDEST
0x2c5 PUSH2 0x253
0x2c8 PUSH2 0x4d8
0x2cb JUMP
---
0x2c4: JUMPDEST 
0x2c5: V246 = 0x253
0x2c8: V247 = 0x4d8
0x2cb: JUMP 0x4d8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x253]
Exit stack: [V12, 0x253]

================================

Block 0x2cc
[0x2cc:0x2dd]
---
Predecessors: []
Successors: []
---
0x2cc JUMPDEST
0x2cd PUSH1 0x40
0x2cf MLOAD
0x2d0 SWAP1
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 ADD
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 DUP1
0x2da SWAP2
0x2db SUB
0x2dc SWAP1
0x2dd RETURN
---
0x2cc: JUMPDEST 
0x2cd: V248 = 0x40
0x2cf: V249 = M[0x40]
0x2d2: M[V249] = S0
0x2d3: V250 = 0x20
0x2d5: V251 = ADD 0x20 V249
0x2d6: V252 = 0x40
0x2d8: V253 = M[0x40]
0x2db: V254 = SUB V251 V253
0x2dd: RETURN V253 V254
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2de
[0x2de:0x2e4]
---
Predecessors: [0x46]
Successors: [0x2e5, 0x2e9]
---
0x2de JUMPDEST
0x2df CALLVALUE
0x2e0 ISZERO
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2de: JUMPDEST 
0x2df: V255 = CALLVALUE
0x2e0: V256 = ISZERO V255
0x2e1: V257 = 0x2e9
0x2e4: JUMPI 0x2e9 V256
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2de]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V258 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e9
[0x2e9:0x2f0]
---
Predecessors: [0x2de]
Successors: [0x451]
---
0x2e9 JUMPDEST
0x2ea PUSH2 0x2f1
0x2ed PUSH2 0x451
0x2f0 JUMP
---
0x2e9: JUMPDEST 
0x2ea: V259 = 0x2f1
0x2ed: V260 = 0x451
0x2f0: JUMP 0x451
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2f1]
Exit stack: [V12, 0x2f1]

================================

Block 0x2f1
[0x2f1:0x304]
---
Predecessors: [0x479]
Successors: []
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 SWAP1
0x2f6 ISZERO
0x2f7 ISZERO
0x2f8 DUP2
0x2f9 MSTORE
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 DUP1
0x301 SWAP2
0x302 SUB
0x303 SWAP1
0x304 RETURN
---
0x2f1: JUMPDEST 
0x2f2: V261 = 0x40
0x2f4: V262 = M[0x40]
0x2f6: V263 = ISZERO S0
0x2f7: V264 = ISZERO V263
0x2f9: M[V262] = V264
0x2fa: V265 = 0x20
0x2fc: V266 = ADD 0x20 V262
0x2fd: V267 = 0x40
0x2ff: V268 = M[0x40]
0x302: V269 = SUB V266 V268
0x304: RETURN V268 V269
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0x305
[0x305:0x30b]
---
Predecessors: [0x51]
Successors: [0x30c, 0x310]
---
0x305 JUMPDEST
0x306 CALLVALUE
0x307 ISZERO
0x308 PUSH2 0x310
0x30b JUMPI
---
0x305: JUMPDEST 
0x306: V270 = CALLVALUE
0x307: V271 = ISZERO V270
0x308: V272 = 0x310
0x30b: JUMPI 0x310 V271
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30c
[0x30c:0x30f]
---
Predecessors: [0x305]
Successors: []
---
0x30c PUSH1 0x0
0x30e DUP1
0x30f REVERT
---
0x30c: V273 = 0x0
0x30f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x310
[0x310:0x323]
---
Predecessors: [0x305]
Successors: [0x4de]
---
0x310 JUMPDEST
0x311 PUSH2 0x324
0x314 PUSH1 0x1
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SUB
0x31c PUSH1 0x4
0x31e CALLDATALOAD
0x31f AND
0x320 PUSH2 0x4de
0x323 JUMP
---
0x310: JUMPDEST 
0x311: V274 = 0x324
0x314: V275 = 0x1
0x316: V276 = 0xa0
0x318: V277 = 0x2
0x31a: V278 = EXP 0x2 0xa0
0x31b: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31c: V280 = 0x4
0x31e: V281 = CALLDATALOAD 0x4
0x31f: V282 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x320: V283 = 0x4de
0x323: JUMP 0x4de
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x324, V282]
Exit stack: [V12, 0x324, V282]

================================

Block 0x324
[0x324:0x325]
---
Predecessors: [0x523, 0x58e]
Successors: []
---
0x324 JUMPDEST
0x325 STOP
---
0x324: JUMPDEST 
0x325: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x326
[0x326:0x32c]
---
Predecessors: [0x5c]
Successors: [0x32d, 0x331]
---
0x326 JUMPDEST
0x327 CALLVALUE
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x326: JUMPDEST 
0x327: V284 = CALLVALUE
0x328: V285 = ISZERO V284
0x329: V286 = 0x331
0x32c: JUMPI 0x331 V285
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x326]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V287 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x331
[0x331:0x338]
---
Predecessors: [0x326]
Successors: [0x526]
---
0x331 JUMPDEST
0x332 PUSH2 0x29d
0x335 PUSH2 0x526
0x338 JUMP
---
0x331: JUMPDEST 
0x332: V288 = 0x29d
0x335: V289 = 0x526
0x338: JUMP 0x526
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29d]
Exit stack: [V12, 0x29d]

================================

Block 0x339
[0x339:0x354]
---
Predecessors: []
Successors: []
---
0x339 JUMPDEST
0x33a PUSH1 0x40
0x33c MLOAD
0x33d PUSH1 0x1
0x33f PUSH1 0xa0
0x341 PUSH1 0x2
0x343 EXP
0x344 SUB
0x345 SWAP1
0x346 SWAP2
0x347 AND
0x348 DUP2
0x349 MSTORE
0x34a PUSH1 0x20
0x34c ADD
0x34d PUSH1 0x40
0x34f MLOAD
0x350 DUP1
0x351 SWAP2
0x352 SUB
0x353 SWAP1
0x354 RETURN
---
0x339: JUMPDEST 
0x33a: V290 = 0x40
0x33c: V291 = M[0x40]
0x33d: V292 = 0x1
0x33f: V293 = 0xa0
0x341: V294 = 0x2
0x343: V295 = EXP 0x2 0xa0
0x344: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x347: V297 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x349: M[V291] = V297
0x34a: V298 = 0x20
0x34c: V299 = ADD 0x20 V291
0x34d: V300 = 0x40
0x34f: V301 = M[0x40]
0x352: V302 = SUB V299 V301
0x354: RETURN V301 V302
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x355
[0x355:0x35b]
---
Predecessors: [0x67]
Successors: [0x35c, 0x360]
---
0x355 JUMPDEST
0x356 CALLVALUE
0x357 ISZERO
0x358 PUSH2 0x360
0x35b JUMPI
---
0x355: JUMPDEST 
0x356: V303 = CALLVALUE
0x357: V304 = ISZERO V303
0x358: V305 = 0x360
0x35b: JUMPI 0x360 V304
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35c
[0x35c:0x35f]
---
Predecessors: [0x355]
Successors: []
---
0x35c PUSH1 0x0
0x35e DUP1
0x35f REVERT
---
0x35c: V306 = 0x0
0x35f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x360
[0x360:0x373]
---
Predecessors: [0x355]
Successors: [0x535]
---
0x360 JUMPDEST
0x361 PUSH2 0x253
0x364 PUSH1 0x1
0x366 PUSH1 0xa0
0x368 PUSH1 0x2
0x36a EXP
0x36b SUB
0x36c PUSH1 0x4
0x36e CALLDATALOAD
0x36f AND
0x370 PUSH2 0x535
0x373 JUMP
---
0x360: JUMPDEST 
0x361: V307 = 0x253
0x364: V308 = 0x1
0x366: V309 = 0xa0
0x368: V310 = 0x2
0x36a: V311 = EXP 0x2 0xa0
0x36b: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36c: V313 = 0x4
0x36e: V314 = CALLDATALOAD 0x4
0x36f: V315 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x370: V316 = 0x535
0x373: JUMP 0x535
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x253, V315]
Exit stack: [V12, 0x253, V315]

================================

Block 0x374
[0x374:0x385]
---
Predecessors: []
Successors: []
---
0x374 JUMPDEST
0x375 PUSH1 0x40
0x377 MLOAD
0x378 SWAP1
0x379 DUP2
0x37a MSTORE
0x37b PUSH1 0x20
0x37d ADD
0x37e PUSH1 0x40
0x380 MLOAD
0x381 DUP1
0x382 SWAP2
0x383 SUB
0x384 SWAP1
0x385 RETURN
---
0x374: JUMPDEST 
0x375: V317 = 0x40
0x377: V318 = M[0x40]
0x37a: M[V318] = S0
0x37b: V319 = 0x20
0x37d: V320 = ADD 0x20 V318
0x37e: V321 = 0x40
0x380: V322 = M[0x40]
0x383: V323 = SUB V320 V322
0x385: RETURN V322 V323
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x386
[0x386:0x38c]
---
Predecessors: [0x72]
Successors: [0x38d, 0x391]
---
0x386 JUMPDEST
0x387 CALLVALUE
0x388 ISZERO
0x389 PUSH2 0x391
0x38c JUMPI
---
0x386: JUMPDEST 
0x387: V324 = CALLVALUE
0x388: V325 = ISZERO V324
0x389: V326 = 0x391
0x38c: JUMPI 0x391 V325
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38d
[0x38d:0x390]
---
Predecessors: [0x386]
Successors: []
---
0x38d PUSH1 0x0
0x38f DUP1
0x390 REVERT
---
0x38d: V327 = 0x0
0x390: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x391
[0x391:0x398]
---
Predecessors: [0x386]
Successors: [0x547]
---
0x391 JUMPDEST
0x392 PUSH2 0x253
0x395 PUSH2 0x547
0x398 JUMP
---
0x391: JUMPDEST 
0x392: V328 = 0x253
0x395: V329 = 0x547
0x398: JUMP 0x547
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x253]
Exit stack: [V12, 0x253]

================================

Block 0x399
[0x399:0x3aa]
---
Predecessors: []
Successors: []
---
0x399 JUMPDEST
0x39a PUSH1 0x40
0x39c MLOAD
0x39d SWAP1
0x39e DUP2
0x39f MSTORE
0x3a0 PUSH1 0x20
0x3a2 ADD
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 DUP1
0x3a7 SWAP2
0x3a8 SUB
0x3a9 SWAP1
0x3aa RETURN
---
0x399: JUMPDEST 
0x39a: V330 = 0x40
0x39c: V331 = M[0x40]
0x39f: M[V331] = S0
0x3a0: V332 = 0x20
0x3a2: V333 = ADD 0x20 V331
0x3a3: V334 = 0x40
0x3a5: V335 = M[0x40]
0x3a8: V336 = SUB V333 V335
0x3aa: RETURN V335 V336
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ab
[0x3ab:0x3b1]
---
Predecessors: [0x7d]
Successors: [0x3b2, 0x3b6]
---
0x3ab JUMPDEST
0x3ac CALLVALUE
0x3ad ISZERO
0x3ae PUSH2 0x3b6
0x3b1 JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V337 = CALLVALUE
0x3ad: V338 = ISZERO V337
0x3ae: V339 = 0x3b6
0x3b1: JUMPI 0x3b6 V338
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b2
[0x3b2:0x3b5]
---
Predecessors: [0x3ab]
Successors: []
---
0x3b2 PUSH1 0x0
0x3b4 DUP1
0x3b5 REVERT
---
0x3b2: V340 = 0x0
0x3b5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b6
[0x3b6:0x3bd]
---
Predecessors: [0x3ab]
Successors: [0x54d]
---
0x3b6 JUMPDEST
0x3b7 PUSH2 0x253
0x3ba PUSH2 0x54d
0x3bd JUMP
---
0x3b6: JUMPDEST 
0x3b7: V341 = 0x253
0x3ba: V342 = 0x54d
0x3bd: JUMP 0x54d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x253]
Exit stack: [V12, 0x253]

================================

Block 0x3be
[0x3be:0x3cf]
---
Predecessors: []
Successors: []
---
0x3be JUMPDEST
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 SWAP1
0x3c3 DUP2
0x3c4 MSTORE
0x3c5 PUSH1 0x20
0x3c7 ADD
0x3c8 PUSH1 0x40
0x3ca MLOAD
0x3cb DUP1
0x3cc SWAP2
0x3cd SUB
0x3ce SWAP1
0x3cf RETURN
---
0x3be: JUMPDEST 
0x3bf: V343 = 0x40
0x3c1: V344 = M[0x40]
0x3c4: M[V344] = S0
0x3c5: V345 = 0x20
0x3c7: V346 = ADD 0x20 V344
0x3c8: V347 = 0x40
0x3ca: V348 = M[0x40]
0x3cd: V349 = SUB V346 V348
0x3cf: RETURN V348 V349
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3d0
[0x3d0:0x3d6]
---
Predecessors: [0x88]
Successors: [0x3d7, 0x3db]
---
0x3d0 JUMPDEST
0x3d1 CALLVALUE
0x3d2 ISZERO
0x3d3 PUSH2 0x3db
0x3d6 JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V350 = CALLVALUE
0x3d2: V351 = ISZERO V350
0x3d3: V352 = 0x3db
0x3d6: JUMPI 0x3db V351
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d7
[0x3d7:0x3da]
---
Predecessors: [0x3d0]
Successors: []
---
0x3d7 PUSH1 0x0
0x3d9 DUP1
0x3da REVERT
---
0x3d7: V353 = 0x0
0x3da: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3db
[0x3db:0x3e2]
---
Predecessors: [0x3d0]
Successors: [0x553]
---
0x3db JUMPDEST
0x3dc PUSH2 0x324
0x3df PUSH2 0x553
0x3e2 JUMP
---
0x3db: JUMPDEST 
0x3dc: V354 = 0x324
0x3df: V355 = 0x553
0x3e2: JUMP 0x553
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x324]
Exit stack: [V12, 0x324]

================================

Block 0x3e3
[0x3e3:0x3e4]
---
Predecessors: []
Successors: []
---
0x3e3 JUMPDEST
0x3e4 STOP
---
0x3e3: JUMPDEST 
0x3e4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3e5
[0x3e5:0x3eb]
---
Predecessors: [0x93]
Successors: [0x3ec, 0x3f0]
---
0x3e5 JUMPDEST
0x3e6 CALLVALUE
0x3e7 ISZERO
0x3e8 PUSH2 0x3f0
0x3eb JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V356 = CALLVALUE
0x3e7: V357 = ISZERO V356
0x3e8: V358 = 0x3f0
0x3eb: JUMPI 0x3f0 V357
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ec
[0x3ec:0x3ef]
---
Predecessors: [0x3e5]
Successors: []
---
0x3ec PUSH1 0x0
0x3ee DUP1
0x3ef REVERT
---
0x3ec: V359 = 0x0
0x3ef: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f0
[0x3f0:0x3f7]
---
Predecessors: [0x3e5]
Successors: [0x590]
---
0x3f0 JUMPDEST
0x3f1 PUSH2 0x29d
0x3f4 PUSH2 0x590
0x3f7 JUMP
---
0x3f0: JUMPDEST 
0x3f1: V360 = 0x29d
0x3f4: V361 = 0x590
0x3f7: JUMP 0x590
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29d]
Exit stack: [V12, 0x29d]

================================

Block 0x3f8
[0x3f8:0x413]
---
Predecessors: []
Successors: []
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc PUSH1 0x1
0x3fe PUSH1 0xa0
0x400 PUSH1 0x2
0x402 EXP
0x403 SUB
0x404 SWAP1
0x405 SWAP2
0x406 AND
0x407 DUP2
0x408 MSTORE
0x409 PUSH1 0x20
0x40b ADD
0x40c PUSH1 0x40
0x40e MLOAD
0x40f DUP1
0x410 SWAP2
0x411 SUB
0x412 SWAP1
0x413 RETURN
---
0x3f8: JUMPDEST 
0x3f9: V362 = 0x40
0x3fb: V363 = M[0x40]
0x3fc: V364 = 0x1
0x3fe: V365 = 0xa0
0x400: V366 = 0x2
0x402: V367 = EXP 0x2 0xa0
0x403: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V369 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x408: M[V363] = V369
0x409: V370 = 0x20
0x40b: V371 = ADD 0x20 V363
0x40c: V372 = 0x40
0x40e: V373 = M[0x40]
0x411: V374 = SUB V371 V373
0x413: RETURN V373 V374
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x414
[0x414:0x41a]
---
Predecessors: [0x9e]
Successors: [0x41b, 0x41f]
---
0x414 JUMPDEST
0x415 CALLVALUE
0x416 ISZERO
0x417 PUSH2 0x41f
0x41a JUMPI
---
0x414: JUMPDEST 
0x415: V375 = CALLVALUE
0x416: V376 = ISZERO V375
0x417: V377 = 0x41f
0x41a: JUMPI 0x41f V376
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41b
[0x41b:0x41e]
---
Predecessors: [0x414]
Successors: []
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
---
0x41b: V378 = 0x0
0x41e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41f
[0x41f:0x429]
---
Predecessors: [0x414]
Successors: [0x481]
---
0x41f JUMPDEST
0x420 PUSH2 0x253
0x423 PUSH1 0x4
0x425 CALLDATALOAD
0x426 PUSH2 0x481
0x429 JUMP
---
0x41f: JUMPDEST 
0x420: V379 = 0x253
0x423: V380 = 0x4
0x425: V381 = CALLDATALOAD 0x4
0x426: V382 = 0x481
0x429: JUMP 0x481
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x253, V381]
Exit stack: [V12, 0x253, V381]

================================

Block 0x42a
[0x42a:0x43b]
---
Predecessors: []
Successors: []
---
0x42a JUMPDEST
0x42b PUSH1 0x40
0x42d MLOAD
0x42e SWAP1
0x42f DUP2
0x430 MSTORE
0x431 PUSH1 0x20
0x433 ADD
0x434 PUSH1 0x40
0x436 MLOAD
0x437 DUP1
0x438 SWAP2
0x439 SUB
0x43a SWAP1
0x43b RETURN
---
0x42a: JUMPDEST 
0x42b: V383 = 0x40
0x42d: V384 = M[0x40]
0x430: M[V384] = S0
0x431: V385 = 0x20
0x433: V386 = ADD 0x20 V384
0x434: V387 = 0x40
0x436: V388 = M[0x40]
0x439: V389 = SUB V386 V388
0x43b: RETURN V388 V389
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x43c
[0x43c:0x442]
---
Predecessors: [0xa9]
Successors: [0x443, 0x447]
---
0x43c JUMPDEST
0x43d CALLVALUE
0x43e ISZERO
0x43f PUSH2 0x447
0x442 JUMPI
---
0x43c: JUMPDEST 
0x43d: V390 = CALLVALUE
0x43e: V391 = ISZERO V390
0x43f: V392 = 0x447
0x442: JUMPI 0x447 V391
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x443
[0x443:0x446]
---
Predecessors: [0x43c]
Successors: []
---
0x443 PUSH1 0x0
0x445 DUP1
0x446 REVERT
---
0x443: V393 = 0x0
0x446: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x447
[0x447:0x44e]
---
Predecessors: [0x43c]
Successors: [0x59f]
---
0x447 JUMPDEST
0x448 PUSH2 0x324
0x44b PUSH2 0x59f
0x44e JUMP
---
0x447: JUMPDEST 
0x448: V394 = 0x324
0x44b: V395 = 0x59f
0x44e: JUMP 0x59f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x324]
Exit stack: [V12, 0x324]

================================

Block 0x44f
[0x44f:0x450]
---
Predecessors: []
Successors: []
---
0x44f JUMPDEST
0x450 STOP
---
0x44f: JUMPDEST 
0x450: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x451
[0x451:0x45f]
---
Predecessors: [0xb5, 0x2e9, 0x5ba]
Successors: [0x460, 0x467]
---
0x451 JUMPDEST
0x452 PUSH1 0x0
0x454 PUSH1 0x1
0x456 SLOAD
0x457 TIMESTAMP
0x458 LT
0x459 ISZERO
0x45a DUP1
0x45b ISZERO
0x45c PUSH2 0x467
0x45f JUMPI
---
0x451: JUMPDEST 
0x452: V396 = 0x0
0x454: V397 = 0x1
0x456: V398 = S[0x1]
0x457: V399 = TIMESTAMP
0x458: V400 = LT V399 V398
0x459: V401 = ISZERO V400
0x45b: V402 = ISZERO V401
0x45c: V403 = 0x467
0x45f: JUMPI 0x467 V402
---
Entry stack: [V12, S2, S1, {0xc0, 0x2f1, 0x5c2}]
Stack pops: 0
Stack additions: [0x0, V401]
Exit stack: [V12, S2, S1, {0xc0, 0x2f1, 0x5c2}, 0x0, V401]

================================

Block 0x460
[0x460:0x466]
---
Predecessors: [0x451]
Successors: [0x467]
---
0x460 POP
0x461 PUSH1 0x2
0x463 SLOAD
0x464 TIMESTAMP
0x465 GT
0x466 ISZERO
---
0x461: V404 = 0x2
0x463: V405 = S[0x2]
0x464: V406 = TIMESTAMP
0x465: V407 = GT V406 V405
0x466: V408 = ISZERO V407
---
Entry stack: [V12, S4, S3, {0xc0, 0x2f1, 0x5c2}, 0x0, V401]
Stack pops: 1
Stack additions: [V408]
Exit stack: [V12, S4, S3, {0xc0, 0x2f1, 0x5c2}, 0x0, V408]

================================

Block 0x467
[0x467:0x46d]
---
Predecessors: [0x451, 0x460]
Successors: [0x46e, 0x476]
---
0x467 JUMPDEST
0x468 DUP1
0x469 ISZERO
0x46a PUSH2 0x476
0x46d JUMPI
---
0x467: JUMPDEST 
0x469: V409 = ISZERO S0
0x46a: V410 = 0x476
0x46d: JUMPI 0x476 V409
---
Entry stack: [V12, S4, S3, {0xc0, 0x2f1, 0x5c2}, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, S3, {0xc0, 0x2f1, 0x5c2}, 0x0, S0]

================================

Block 0x46e
[0x46e:0x475]
---
Predecessors: [0x467]
Successors: [0x476]
---
0x46e POP
0x46f PUSH1 0x3
0x471 SLOAD
0x472 PUSH1 0x4
0x474 SLOAD
0x475 LT
---
0x46f: V411 = 0x3
0x471: V412 = S[0x3]
0x472: V413 = 0x4
0x474: V414 = S[0x4]
0x475: V415 = LT V414 V412
---
Entry stack: [V12, S4, S3, {0xc0, 0x2f1, 0x5c2}, 0x0, S0]
Stack pops: 1
Stack additions: [V415]
Exit stack: [V12, S4, S3, {0xc0, 0x2f1, 0x5c2}, 0x0, V415]

================================

Block 0x476
[0x476:0x478]
---
Predecessors: [0x467, 0x46e]
Successors: [0x479]
---
0x476 JUMPDEST
0x477 SWAP1
0x478 POP
---
0x476: JUMPDEST 
---
Entry stack: [V12, S4, S3, {0xc0, 0x2f1, 0x5c2}, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S4, S3, {0xc0, 0x2f1, 0x5c2}, S0]

================================

Block 0x479
[0x479:0x47b]
---
Predecessors: [0x476]
Successors: [0xc0, 0x2f1, 0x5c2]
---
0x479 JUMPDEST
0x47a SWAP1
0x47b JUMP
---
0x479: JUMPDEST 
0x47b: JUMP {0xc0, 0x2f1, 0x5c2}
---
Entry stack: [V12, S3, S2, {0xc0, 0x2f1, 0x5c2}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S3, S2, S0]

================================

Block 0x47c
[0x47c:0x47d]
---
Predecessors: [0xdb, 0x116]
Successors: [0x47e]
---
0x47c JUMPDEST
0x47d TIMESTAMP
---
0x47c: JUMPDEST 
0x47d: V416 = TIMESTAMP
---
Entry stack: [V12, V82, S2, {0x116, 0x129}, 0x111]
Stack pops: 0
Stack additions: [V416]
Exit stack: [V12, V82, S2, {0x116, 0x129}, 0x111, V416]

================================

Block 0x47e
[0x47e:0x480]
---
Predecessors: [0x47c]
Successors: [0x111]
---
0x47e JUMPDEST
0x47f SWAP1
0x480 JUMP
---
0x47e: JUMPDEST 
0x480: JUMP 0x111
---
Entry stack: [V12, V82, S3, {0x116, 0x129}, 0x111, V416]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V82, S3, {0x116, 0x129}, V416]

================================

Block 0x481
[0x481:0x48d]
---
Predecessors: [0x111, 0x124, 0x41f]
Successors: [0x48e, 0x495]
---
0x481 JUMPDEST
0x482 PUSH1 0x0
0x484 PUSH1 0x1
0x486 SLOAD
0x487 DUP3
0x488 LT
0x489 ISZERO
0x48a PUSH2 0x495
0x48d JUMPI
---
0x481: JUMPDEST 
0x482: V417 = 0x0
0x484: V418 = 0x1
0x486: V419 = S[0x1]
0x488: V420 = LT S0 V419
0x489: V421 = ISZERO V420
0x48a: V422 = 0x495
0x48d: JUMPI 0x495 V421
---
Entry stack: [V12, V82, S2, {0x116, 0x129, 0x253}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, V82, S2, {0x116, 0x129, 0x253}, S0, 0x0]

================================

Block 0x48e
[0x48e:0x494]
---
Predecessors: [0x481]
Successors: [0x4b5]
---
0x48e POP
0x48f PUSH1 0x0
0x491 PUSH2 0x4b5
0x494 JUMP
---
0x48f: V423 = 0x0
0x491: V424 = 0x4b5
0x494: JUMP 0x4b5
---
Entry stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x0]

================================

Block 0x495
[0x495:0x49e]
---
Predecessors: [0x481]
Successors: [0x49f, 0x4a7]
---
0x495 JUMPDEST
0x496 PUSH1 0x2
0x498 SLOAD
0x499 DUP3
0x49a GT
0x49b PUSH2 0x4a7
0x49e JUMPI
---
0x495: JUMPDEST 
0x496: V425 = 0x2
0x498: V426 = S[0x2]
0x49a: V427 = GT S1 V426
0x49b: V428 = 0x4a7
0x49e: JUMPI 0x4a7 V427
---
Entry stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x0]

================================

Block 0x49f
[0x49f:0x4a6]
---
Predecessors: [0x495]
Successors: [0x4b5]
---
0x49f POP
0x4a0 PUSH2 0x1964
0x4a3 PUSH2 0x4b5
0x4a6 JUMP
---
0x4a0: V429 = 0x1964
0x4a3: V430 = 0x4b5
0x4a6: JUMP 0x4b5
---
Entry stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x0]
Stack pops: 1
Stack additions: [0x1964]
Exit stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x1964]

================================

Block 0x4a7
[0x4a7:0x4b1]
---
Predecessors: [0x495]
Successors: [0x4b2, 0x4b5]
---
0x4a7 JUMPDEST
0x4a8 PUSH1 0x2
0x4aa SLOAD
0x4ab DUP3
0x4ac GT
0x4ad ISZERO
0x4ae PUSH2 0x4b5
0x4b1 JUMPI
---
0x4a7: JUMPDEST 
0x4a8: V431 = 0x2
0x4aa: V432 = S[0x2]
0x4ac: V433 = GT S1 V432
0x4ad: V434 = ISZERO V433
0x4ae: V435 = 0x4b5
0x4b1: JUMPI 0x4b5 V434
---
Entry stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x0]

================================

Block 0x4b2
[0x4b2:0x4b4]
---
Predecessors: [0x4a7]
Successors: [0x4b5]
---
0x4b2 POP
0x4b3 PUSH1 0x0
---
0x4b3: V436 = 0x0
---
Entry stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, 0x0]

================================

Block 0x4b5
[0x4b5:0x4b5]
---
Predecessors: [0x48e, 0x49f, 0x4a7, 0x4b2]
Successors: [0x4b6]
---
0x4b5 JUMPDEST
---
0x4b5: JUMPDEST 
---
Entry stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, {0x0, 0x1964}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, {0x0, 0x1964}]

================================

Block 0x4b6
[0x4b6:0x4b6]
---
Predecessors: [0x4b5]
Successors: [0x4b7]
---
0x4b6 JUMPDEST
---
0x4b6: JUMPDEST 
---
Entry stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, {0x0, 0x1964}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, {0x0, 0x1964}]

================================

Block 0x4b7
[0x4b7:0x4b7]
---
Predecessors: [0x4b6]
Successors: [0x4b8]
---
0x4b7 JUMPDEST
---
0x4b7: JUMPDEST 
---
Entry stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, {0x0, 0x1964}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, {0x0, 0x1964}]

================================

Block 0x4b8
[0x4b8:0x4bc]
---
Predecessors: [0x4b7]
Successors: [0x116, 0x129, 0x253]
---
0x4b8 JUMPDEST
0x4b9 SWAP2
0x4ba SWAP1
0x4bb POP
0x4bc JUMP
---
0x4b8: JUMPDEST 
0x4bc: JUMP {0x116, 0x129, 0x253}
---
Entry stack: [V12, V82, S3, {0x116, 0x129, 0x253}, S1, {0x0, 0x1964}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V82, S3, {0x0, 0x1964}]

================================

Block 0x4bd
[0x4bd:0x4c2]
---
Predecessors: [0x24b]
Successors: [0x253]
---
0x4bd JUMPDEST
0x4be PUSH1 0x2
0x4c0 SLOAD
0x4c1 DUP2
0x4c2 JUMP
---
0x4bd: JUMPDEST 
0x4be: V437 = 0x2
0x4c0: V438 = S[0x2]
0x4c2: JUMP 0x253
---
Entry stack: [V12, 0x253]
Stack pops: 1
Stack additions: [S0, V438]
Exit stack: [V12, 0x253, V438]

================================

Block 0x4c3
[0x4c3:0x4c8]
---
Predecessors: [0x270]
Successors: [0x253]
---
0x4c3 JUMPDEST
0x4c4 PUSH1 0x1
0x4c6 SLOAD
0x4c7 DUP2
0x4c8 JUMP
---
0x4c3: JUMPDEST 
0x4c4: V439 = 0x1
0x4c6: V440 = S[0x1]
0x4c8: JUMP 0x253
---
Entry stack: [V12, 0x253]
Stack pops: 1
Stack additions: [S0, V440]
Exit stack: [V12, 0x253, V440]

================================

Block 0x4c9
[0x4c9:0x4d7]
---
Predecessors: [0x295]
Successors: [0x29d]
---
0x4c9 JUMPDEST
0x4ca PUSH1 0x7
0x4cc SLOAD
0x4cd PUSH1 0x1
0x4cf PUSH1 0xa0
0x4d1 PUSH1 0x2
0x4d3 EXP
0x4d4 SUB
0x4d5 AND
0x4d6 DUP2
0x4d7 JUMP
---
0x4c9: JUMPDEST 
0x4ca: V441 = 0x7
0x4cc: V442 = S[0x7]
0x4cd: V443 = 0x1
0x4cf: V444 = 0xa0
0x4d1: V445 = 0x2
0x4d3: V446 = EXP 0x2 0xa0
0x4d4: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d5: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x4d7: JUMP 0x29d
---
Entry stack: [V12, 0x29d]
Stack pops: 1
Stack additions: [S0, V448]
Exit stack: [V12, 0x29d, V448]

================================

Block 0x4d8
[0x4d8:0x4dd]
---
Predecessors: [0x2c4]
Successors: [0x253]
---
0x4d8 JUMPDEST
0x4d9 PUSH1 0x5
0x4db SLOAD
0x4dc DUP2
0x4dd JUMP
---
0x4d8: JUMPDEST 
0x4d9: V449 = 0x5
0x4db: V450 = S[0x5]
0x4dd: JUMP 0x253
---
Entry stack: [V12, 0x253]
Stack pops: 1
Stack additions: [S0, V450]
Exit stack: [V12, 0x253, V450]

================================

Block 0x4de
[0x4de:0x4f4]
---
Predecessors: [0x310]
Successors: [0x4f5, 0x4f9]
---
0x4de JUMPDEST
0x4df PUSH1 0x0
0x4e1 SLOAD
0x4e2 CALLER
0x4e3 PUSH1 0x1
0x4e5 PUSH1 0xa0
0x4e7 PUSH1 0x2
0x4e9 EXP
0x4ea SUB
0x4eb SWAP1
0x4ec DUP2
0x4ed AND
0x4ee SWAP2
0x4ef AND
0x4f0 EQ
0x4f1 PUSH2 0x4f9
0x4f4 JUMPI
---
0x4de: JUMPDEST 
0x4df: V451 = 0x0
0x4e1: V452 = S[0x0]
0x4e2: V453 = CALLER
0x4e3: V454 = 0x1
0x4e5: V455 = 0xa0
0x4e7: V456 = 0x2
0x4e9: V457 = EXP 0x2 0xa0
0x4ea: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ed: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x4ef: V460 = AND V452 0xffffffffffffffffffffffffffffffffffffffff
0x4f0: V461 = EQ V460 V459
0x4f1: V462 = 0x4f9
0x4f4: JUMPI 0x4f9 V461
---
Entry stack: [V12, 0x324, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x324, V282]

================================

Block 0x4f5
[0x4f5:0x4f8]
---
Predecessors: [0x4de]
Successors: []
---
0x4f5 PUSH1 0x0
0x4f7 DUP1
0x4f8 REVERT
---
0x4f5: V463 = 0x0
0x4f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x324, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x324, V282]

================================

Block 0x4f9
[0x4f9:0x521]
---
Predecessors: [0x4de]
Successors: [0x522]
---
0x4f9 JUMPDEST
0x4fa PUSH1 0x0
0x4fc DUP1
0x4fd SLOAD
0x4fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x513 NOT
0x514 AND
0x515 PUSH1 0x1
0x517 PUSH1 0xa0
0x519 PUSH1 0x2
0x51b EXP
0x51c SUB
0x51d DUP4
0x51e AND
0x51f OR
0x520 SWAP1
0x521 SSTORE
---
0x4f9: JUMPDEST 
0x4fa: V464 = 0x0
0x4fd: V465 = S[0x0]
0x4fe: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x513: V467 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x514: V468 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V465
0x515: V469 = 0x1
0x517: V470 = 0xa0
0x519: V471 = 0x2
0x51b: V472 = EXP 0x2 0xa0
0x51c: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51e: V474 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V475 = OR V474 V468
0x521: S[0x0] = V475
---
Entry stack: [V12, 0x324, V282]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x324, V282]

================================

Block 0x522
[0x522:0x522]
---
Predecessors: [0x4f9]
Successors: [0x523]
---
0x522 JUMPDEST
---
0x522: JUMPDEST 
---
Entry stack: [V12, 0x324, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x324, V282]

================================

Block 0x523
[0x523:0x525]
---
Predecessors: [0x522]
Successors: [0x324]
---
0x523 JUMPDEST
0x524 POP
0x525 JUMP
---
0x523: JUMPDEST 
0x525: JUMP 0x324
---
Entry stack: [V12, 0x324, V282]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x526
[0x526:0x534]
---
Predecessors: [0x331]
Successors: [0x29d]
---
0x526 JUMPDEST
0x527 PUSH1 0x6
0x529 SLOAD
0x52a PUSH1 0x1
0x52c PUSH1 0xa0
0x52e PUSH1 0x2
0x530 EXP
0x531 SUB
0x532 AND
0x533 DUP2
0x534 JUMP
---
0x526: JUMPDEST 
0x527: V476 = 0x6
0x529: V477 = S[0x6]
0x52a: V478 = 0x1
0x52c: V479 = 0xa0
0x52e: V480 = 0x2
0x530: V481 = EXP 0x2 0xa0
0x531: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x532: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x534: JUMP 0x29d
---
Entry stack: [V12, 0x29d]
Stack pops: 1
Stack additions: [S0, V483]
Exit stack: [V12, 0x29d, V483]

================================

Block 0x535
[0x535:0x546]
---
Predecessors: [0x360]
Successors: [0x253]
---
0x535 JUMPDEST
0x536 PUSH1 0x8
0x538 PUSH1 0x20
0x53a MSTORE
0x53b PUSH1 0x0
0x53d SWAP1
0x53e DUP2
0x53f MSTORE
0x540 PUSH1 0x40
0x542 SWAP1
0x543 SHA3
0x544 SLOAD
0x545 DUP2
0x546 JUMP
---
0x535: JUMPDEST 
0x536: V484 = 0x8
0x538: V485 = 0x20
0x53a: M[0x20] = 0x8
0x53b: V486 = 0x0
0x53f: M[0x0] = V315
0x540: V487 = 0x40
0x543: V488 = SHA3 0x0 0x40
0x544: V489 = S[V488]
0x546: JUMP 0x253
---
Entry stack: [V12, 0x253, V315]
Stack pops: 2
Stack additions: [S1, V489]
Exit stack: [V12, 0x253, V489]

================================

Block 0x547
[0x547:0x54c]
---
Predecessors: [0x391]
Successors: [0x253]
---
0x547 JUMPDEST
0x548 PUSH1 0x3
0x54a SLOAD
0x54b DUP2
0x54c JUMP
---
0x547: JUMPDEST 
0x548: V490 = 0x3
0x54a: V491 = S[0x3]
0x54c: JUMP 0x253
---
Entry stack: [V12, 0x253]
Stack pops: 1
Stack additions: [S0, V491]
Exit stack: [V12, 0x253, V491]

================================

Block 0x54d
[0x54d:0x552]
---
Predecessors: [0x3b6]
Successors: [0x253]
---
0x54d JUMPDEST
0x54e PUSH1 0x4
0x550 SLOAD
0x551 DUP2
0x552 JUMP
---
0x54d: JUMPDEST 
0x54e: V492 = 0x4
0x550: V493 = S[0x4]
0x552: JUMP 0x253
---
Entry stack: [V12, 0x253]
Stack pops: 1
Stack additions: [S0, V493]
Exit stack: [V12, 0x253, V493]

================================

Block 0x553
[0x553:0x56a]
---
Predecessors: [0x3db]
Successors: [0x56b, 0x58d]
---
0x553 JUMPDEST
0x554 PUSH1 0x7
0x556 SLOAD
0x557 CALLER
0x558 PUSH1 0x1
0x55a PUSH1 0xa0
0x55c PUSH1 0x2
0x55e EXP
0x55f SUB
0x560 SWAP1
0x561 DUP2
0x562 AND
0x563 SWAP2
0x564 AND
0x565 EQ
0x566 ISZERO
0x567 PUSH2 0x58d
0x56a JUMPI
---
0x553: JUMPDEST 
0x554: V494 = 0x7
0x556: V495 = S[0x7]
0x557: V496 = CALLER
0x558: V497 = 0x1
0x55a: V498 = 0xa0
0x55c: V499 = 0x2
0x55e: V500 = EXP 0x2 0xa0
0x55f: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x562: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x564: V503 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x565: V504 = EQ V503 V502
0x566: V505 = ISZERO V504
0x567: V506 = 0x58d
0x56a: JUMPI 0x58d V505
---
Entry stack: [V12, 0x324]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x324]

================================

Block 0x56b
[0x56b:0x577]
---
Predecessors: [0x553]
Successors: []
---
0x56b PUSH1 0x7
0x56d SLOAD
0x56e PUSH1 0x1
0x570 PUSH1 0xa0
0x572 PUSH1 0x2
0x574 EXP
0x575 SUB
0x576 AND
0x577 SELFDESTRUCT
---
0x56b: V507 = 0x7
0x56d: V508 = S[0x7]
0x56e: V509 = 0x1
0x570: V510 = 0xa0
0x572: V511 = 0x2
0x574: V512 = EXP 0x2 0xa0
0x575: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x576: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x577: SELFDESTRUCT V514
---
Entry stack: [V12, 0x324]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x324]

================================

Block 0x578
[0x578:0x584]
---
Predecessors: [0x613]
Successors: [0x585, 0x589]
---
0x578 JUMPDEST
0x579 PUSH2 0x2c6
0x57c GAS
0x57d SUB
0x57e CALL
0x57f ISZERO
0x580 ISZERO
0x581 PUSH2 0x589
0x584 JUMPI
---
0x578: JUMPDEST 
0x579: V515 = 0x2c6
0x57c: V516 = GAS
0x57d: V517 = SUB V516 0x2c6
0x57e: V518 = CALL V517 V589 0x0 V617 V618 V617 0x0
0x57f: V519 = ISZERO V518
0x580: V520 = ISZERO V519
0x581: V521 = 0x589
0x584: JUMPI 0x589 V520
---
Entry stack: [V12, S10, S9, V589, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V589]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S10, S9, V589, 0xa9059cbb, V614]

================================

Block 0x585
[0x585:0x588]
---
Predecessors: [0x578]
Successors: []
---
0x585 PUSH1 0x0
0x587 DUP1
0x588 REVERT
---
0x585: V522 = 0x0
0x588: REVERT 0x0 0x0
---
Entry stack: [V12, S4, S3, V589, 0xa9059cbb, V614]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, V589, 0xa9059cbb, V614]

================================

Block 0x589
[0x589:0x58c]
---
Predecessors: [0x578, 0x674]
Successors: [0x58d]
---
0x589 JUMPDEST
0x58a POP
0x58b POP
0x58c POP
---
0x589: JUMPDEST 
---
Entry stack: [V12, S4, S3, V589, 0xa9059cbb, V614]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S4, S3]

================================

Block 0x58d
[0x58d:0x58d]
---
Predecessors: [0x553, 0x589]
Successors: [0x58e]
---
0x58d JUMPDEST
---
0x58d: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x58e
[0x58e:0x58f]
---
Predecessors: [0x58d]
Successors: [0x324]
---
0x58e JUMPDEST
0x58f JUMP
---
0x58e: JUMPDEST 
0x58f: JUMP S0
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x590
[0x590:0x59e]
---
Predecessors: [0x3f0]
Successors: [0x29d]
---
0x590 JUMPDEST
0x591 PUSH1 0x0
0x593 SLOAD
0x594 PUSH1 0x1
0x596 PUSH1 0xa0
0x598 PUSH1 0x2
0x59a EXP
0x59b SUB
0x59c AND
0x59d DUP2
0x59e JUMP
---
0x590: JUMPDEST 
0x591: V523 = 0x0
0x593: V524 = S[0x0]
0x594: V525 = 0x1
0x596: V526 = 0xa0
0x598: V527 = 0x2
0x59a: V528 = EXP 0x2 0xa0
0x59b: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59c: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x59e: JUMP 0x29d
---
Entry stack: [V12, 0x29d]
Stack pops: 1
Stack additions: [S0, V530]
Exit stack: [V12, 0x29d, V530]

================================

Block 0x59f
[0x59f:0x5b5]
---
Predecessors: [0x447]
Successors: [0x5b6, 0x5ba]
---
0x59f JUMPDEST
0x5a0 PUSH1 0x0
0x5a2 SLOAD
0x5a3 CALLER
0x5a4 PUSH1 0x1
0x5a6 PUSH1 0xa0
0x5a8 PUSH1 0x2
0x5aa EXP
0x5ab SUB
0x5ac SWAP1
0x5ad DUP2
0x5ae AND
0x5af SWAP2
0x5b0 AND
0x5b1 EQ
0x5b2 PUSH2 0x5ba
0x5b5 JUMPI
---
0x59f: JUMPDEST 
0x5a0: V531 = 0x0
0x5a2: V532 = S[0x0]
0x5a3: V533 = CALLER
0x5a4: V534 = 0x1
0x5a6: V535 = 0xa0
0x5a8: V536 = 0x2
0x5aa: V537 = EXP 0x2 0xa0
0x5ab: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ae: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0x5b0: V540 = AND V532 0xffffffffffffffffffffffffffffffffffffffff
0x5b1: V541 = EQ V540 V539
0x5b2: V542 = 0x5ba
0x5b5: JUMPI 0x5ba V541
---
Entry stack: [V12, 0x324]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x324]

================================

Block 0x5b6
[0x5b6:0x5b9]
---
Predecessors: [0x59f]
Successors: []
---
0x5b6 PUSH1 0x0
0x5b8 DUP1
0x5b9 REVERT
---
0x5b6: V543 = 0x0
0x5b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x324]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x324]

================================

Block 0x5ba
[0x5ba:0x5c1]
---
Predecessors: [0x59f]
Successors: [0x451]
---
0x5ba JUMPDEST
0x5bb PUSH2 0x5c2
0x5be PUSH2 0x451
0x5c1 JUMP
---
0x5ba: JUMPDEST 
0x5bb: V544 = 0x5c2
0x5be: V545 = 0x451
0x5c1: JUMP 0x451
---
Entry stack: [V12, 0x324]
Stack pops: 0
Stack additions: [0x5c2]
Exit stack: [V12, 0x324, 0x5c2]

================================

Block 0x5c2
[0x5c2:0x5c7]
---
Predecessors: [0x479]
Successors: [0x5c8, 0x5cc]
---
0x5c2 JUMPDEST
0x5c3 ISZERO
0x5c4 PUSH2 0x5cc
0x5c7 JUMPI
---
0x5c2: JUMPDEST 
0x5c3: V546 = ISZERO S0
0x5c4: V547 = 0x5cc
0x5c7: JUMPI 0x5cc V546
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0x5c8
[0x5c8:0x5cb]
---
Predecessors: [0x5c2]
Successors: []
---
0x5c8 PUSH1 0x0
0x5ca DUP1
0x5cb REVERT
---
0x5c8: V548 = 0x0
0x5cb: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x5cc
[0x5cc:0x5d5]
---
Predecessors: [0x5c2]
Successors: [0x5d6, 0x5da]
---
0x5cc JUMPDEST
0x5cd PUSH1 0x2
0x5cf SLOAD
0x5d0 TIMESTAMP
0x5d1 GT
0x5d2 PUSH2 0x5da
0x5d5 JUMPI
---
0x5cc: JUMPDEST 
0x5cd: V549 = 0x2
0x5cf: V550 = S[0x2]
0x5d0: V551 = TIMESTAMP
0x5d1: V552 = GT V551 V550
0x5d2: V553 = 0x5da
0x5d5: JUMPI 0x5da V552
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x5d6
[0x5d6:0x5d9]
---
Predecessors: [0x5cc]
Successors: []
---
0x5d6 PUSH1 0x0
0x5d8 DUP1
0x5d9 REVERT
---
0x5d6: V554 = 0x0
0x5d9: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x5da
[0x5da:0x60e]
---
Predecessors: [0x5cc]
Successors: [0x60f, 0x613]
---
0x5da JUMPDEST
0x5db PUSH1 0x7
0x5dd SLOAD
0x5de PUSH1 0x1
0x5e0 PUSH1 0xa0
0x5e2 PUSH1 0x2
0x5e4 EXP
0x5e5 SUB
0x5e6 SWAP1
0x5e7 DUP2
0x5e8 AND
0x5e9 SWAP1
0x5ea ADDRESS
0x5eb AND
0x5ec BALANCE
0x5ed DUP1
0x5ee ISZERO
0x5ef PUSH2 0x8fc
0x5f2 MUL
0x5f3 SWAP1
0x5f4 PUSH1 0x40
0x5f6 MLOAD
0x5f7 PUSH1 0x0
0x5f9 PUSH1 0x40
0x5fb MLOAD
0x5fc DUP1
0x5fd DUP4
0x5fe SUB
0x5ff DUP2
0x600 DUP6
0x601 DUP9
0x602 DUP9
0x603 CALL
0x604 SWAP4
0x605 POP
0x606 POP
0x607 POP
0x608 POP
0x609 ISZERO
0x60a ISZERO
0x60b PUSH2 0x613
0x60e JUMPI
---
0x5da: JUMPDEST 
0x5db: V555 = 0x7
0x5dd: V556 = S[0x7]
0x5de: V557 = 0x1
0x5e0: V558 = 0xa0
0x5e2: V559 = 0x2
0x5e4: V560 = EXP 0x2 0xa0
0x5e5: V561 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e8: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V556
0x5ea: V563 = ADDRESS
0x5eb: V564 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0x5ec: V565 = BALANCE V564
0x5ee: V566 = ISZERO V565
0x5ef: V567 = 0x8fc
0x5f2: V568 = MUL 0x8fc V566
0x5f4: V569 = 0x40
0x5f6: V570 = M[0x40]
0x5f7: V571 = 0x0
0x5f9: V572 = 0x40
0x5fb: V573 = M[0x40]
0x5fe: V574 = SUB V570 V573
0x603: V575 = CALL V568 V562 V565 V573 V574 V573 0x0
0x609: V576 = ISZERO V575
0x60a: V577 = ISZERO V576
0x60b: V578 = 0x613
0x60e: JUMPI 0x613 V577
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x60f
[0x60f:0x612]
---
Predecessors: [0x5da]
Successors: []
---
0x60f PUSH1 0x0
0x611 DUP1
0x612 REVERT
---
0x60f: V579 = 0x0
0x612: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x613
[0x613:0x66f]
---
Predecessors: [0x5da]
Successors: [0x578, 0x670]
---
0x613 JUMPDEST
0x614 PUSH1 0x6
0x616 SLOAD
0x617 PUSH1 0x7
0x619 SLOAD
0x61a PUSH1 0x1
0x61c PUSH1 0xa0
0x61e PUSH1 0x2
0x620 EXP
0x621 SUB
0x622 SWAP2
0x623 DUP3
0x624 AND
0x625 SWAP2
0x626 PUSH4 0xa9059cbb
0x62b SWAP2
0x62c DUP2
0x62d AND
0x62e SWAP1
0x62f ADDRESS
0x630 AND
0x631 BALANCE
0x632 PUSH1 0x40
0x634 MLOAD
0x635 PUSH1 0xe0
0x637 PUSH1 0x2
0x639 EXP
0x63a PUSH4 0xffffffff
0x63f DUP6
0x640 AND
0x641 MUL
0x642 DUP2
0x643 MSTORE
0x644 PUSH1 0x1
0x646 PUSH1 0xa0
0x648 PUSH1 0x2
0x64a EXP
0x64b SUB
0x64c SWAP1
0x64d SWAP3
0x64e AND
0x64f PUSH1 0x4
0x651 DUP4
0x652 ADD
0x653 MSTORE
0x654 PUSH1 0x24
0x656 DUP3
0x657 ADD
0x658 MSTORE
0x659 PUSH1 0x44
0x65b ADD
0x65c PUSH1 0x0
0x65e PUSH1 0x40
0x660 MLOAD
0x661 DUP1
0x662 DUP4
0x663 SUB
0x664 DUP2
0x665 PUSH1 0x0
0x667 DUP8
0x668 DUP1
0x669 EXTCODESIZE
0x66a ISZERO
0x66b ISZERO
0x66c PUSH2 0x578
0x66f JUMPI
---
0x613: JUMPDEST 
0x614: V580 = 0x6
0x616: V581 = S[0x6]
0x617: V582 = 0x7
0x619: V583 = S[0x7]
0x61a: V584 = 0x1
0x61c: V585 = 0xa0
0x61e: V586 = 0x2
0x620: V587 = EXP 0x2 0xa0
0x621: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x624: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x626: V590 = 0xa9059cbb
0x62d: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x62f: V592 = ADDRESS
0x630: V593 = AND V592 0xffffffffffffffffffffffffffffffffffffffff
0x631: V594 = BALANCE V593
0x632: V595 = 0x40
0x634: V596 = M[0x40]
0x635: V597 = 0xe0
0x637: V598 = 0x2
0x639: V599 = EXP 0x2 0xe0
0x63a: V600 = 0xffffffff
0x640: V601 = AND 0xa9059cbb 0xffffffff
0x641: V602 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x643: M[V596] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x644: V603 = 0x1
0x646: V604 = 0xa0
0x648: V605 = 0x2
0x64a: V606 = EXP 0x2 0xa0
0x64b: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64e: V608 = AND V591 0xffffffffffffffffffffffffffffffffffffffff
0x64f: V609 = 0x4
0x652: V610 = ADD V596 0x4
0x653: M[V610] = V608
0x654: V611 = 0x24
0x657: V612 = ADD V596 0x24
0x658: M[V612] = V594
0x659: V613 = 0x44
0x65b: V614 = ADD 0x44 V596
0x65c: V615 = 0x0
0x65e: V616 = 0x40
0x660: V617 = M[0x40]
0x663: V618 = SUB V614 V617
0x665: V619 = 0x0
0x669: V620 = EXTCODESIZE V589
0x66a: V621 = ISZERO V620
0x66b: V622 = ISZERO V621
0x66c: V623 = 0x578
0x66f: JUMPI 0x578 V622
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: [V589, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V589]
Exit stack: [V12, S1, S0, V589, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V589]

================================

Block 0x670
[0x670:0x673]
---
Predecessors: [0x613]
Successors: []
---
0x670 PUSH1 0x0
0x672 DUP1
0x673 REVERT
---
0x670: V624 = 0x0
0x673: REVERT 0x0 0x0
---
Entry stack: [V12, S10, S9, V589, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, V589, 0xa9059cbb, V614, 0x0, V617, V618, V617, 0x0, V589]

================================

Block 0x674
[0x674:0x680]
---
Predecessors: []
Successors: [0x589, 0x681]
---
0x674 JUMPDEST
0x675 PUSH2 0x2c6
0x678 GAS
0x679 SUB
0x67a CALL
0x67b ISZERO
0x67c ISZERO
0x67d PUSH2 0x589
0x680 JUMPI
---
0x674: JUMPDEST 
0x675: V625 = 0x2c6
0x678: V626 = GAS
0x679: V627 = SUB V626 0x2c6
0x67a: V628 = CALL V627 S0 S1 S2 S3 S4 S5
0x67b: V629 = ISZERO V628
0x67c: V630 = ISZERO V629
0x67d: V631 = 0x589
0x680: JUMPI 0x589 V630
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x681
[0x681:0x688]
---
Predecessors: [0x674]
Successors: [0x689]
---
0x681 PUSH1 0x0
0x683 DUP1
0x684 REVERT
0x685 JUMPDEST
0x686 POP
0x687 POP
0x688 POP
---
0x681: V632 = 0x0
0x684: REVERT 0x0 0x0
0x685: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x689
[0x689:0x689]
---
Predecessors: [0x681]
Successors: [0x68a]
---
0x689 JUMPDEST
---
0x689: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x68a
[0x68a:0x6b7]
---
Predecessors: [0x689]
Successors: []
---
0x68a JUMPDEST
0x68b JUMP
0x68c STOP
0x68d LOG1
0x68e PUSH6 0x627a7a723058
0x695 SHA3
0x696 MISSING 0x26
0x697 LOG4
0x698 MISSING 0xd9
0x699 RETURNDATASIZE
0x69a DUP10
0x69b MISSING 0x28
0x69c MISSING 0x25
0x69d SWAP2
0x69e ADD
0x69f MISSING 0xd4
0x6a0 INVALID
0x6a1 PUSH22 0xa450a34a04b7b247c7d7113d656acee62ce832b00029
---
0x68a: JUMPDEST 
0x68b: JUMP S0
0x68c: STOP 
0x68d: LOG S0 S1 S2
0x68e: V633 = 0x627a7a723058
0x695: V634 = SHA3 0x627a7a723058 S3
0x696: MISSING 0x26
0x697: LOG S0 S1 S2 S3 S4 S5
0x698: MISSING 0xd9
0x699: V635 = RETURNDATASIZE
0x69b: MISSING 0x28
0x69c: MISSING 0x25
0x69e: V636 = ADD S2 S1
0x69f: MISSING 0xd4
0x6a0: INVALID 
0x6a1: V637 = 0xa450a34a04b7b247c7d7113d656acee62ce832b00029
---
Entry stack: []
Stack pops: 132
Stack additions: [0xa450a34a04b7b247c7d7113d656acee62ce832b00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x9799c01
Entry block: 0x240
Exit block: 0x253
Body: 0x240, 0x247, 0x24b, 0x253, 0x4bd

Function 1:
Public function signature: 0xb97bc86
Entry block: 0x265
Exit block: 0x253
Body: 0x253, 0x265, 0x26c, 0x270, 0x4c3

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x28a
Exit block: 0x29d
Body: 0x28a, 0x291, 0x295, 0x29d, 0x4c9

Function 3:
Public function signature: 0x3ba0b9a9
Entry block: 0x2b9
Exit block: 0x253
Body: 0x253, 0x2b9, 0x2c0, 0x2c4, 0x4d8

Function 4:
Public function signature: 0x68428a1b
Entry block: 0x2de
Exit block: 0x2f1
Body: 0x2de, 0x2e5, 0x2e9, 0x2f1

Function 5:
Public function signature: 0x69043895
Entry block: 0x305
Exit block: 0x324
Body: 0x305, 0x30c, 0x310, 0x324, 0x4de, 0x4f5, 0x4f9, 0x522, 0x523

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x326
Exit block: 0x29d
Body: 0x29d, 0x326, 0x32d, 0x331, 0x526

Function 7:
Public function signature: 0x70a08231
Entry block: 0x355
Exit block: 0x253
Body: 0x253, 0x355, 0x35c, 0x360, 0x535

Function 8:
Public function signature: 0x7a3a0e84
Entry block: 0x386
Exit block: 0x253
Body: 0x253, 0x386, 0x38d, 0x391, 0x547

Function 9:
Public function signature: 0x7b3e5e7b
Entry block: 0x3ab
Exit block: 0x253
Body: 0x253, 0x3ab, 0x3b2, 0x3b6, 0x54d

Function 10:
Public function signature: 0x83197ef0
Entry block: 0x3d0
Exit block: 0x324
Body: 0x324, 0x3d0, 0x3d7, 0x3db, 0x553, 0x56b, 0x58d, 0x58e

Function 11:
Public function signature: 0x8da5cb5b
Entry block: 0x3e5
Exit block: 0x29d
Body: 0x29d, 0x3e5, 0x3ec, 0x3f0, 0x590

Function 12:
Public function signature: 0xb52e0dc8
Entry block: 0x414
Exit block: 0x23c
Body: 0x111, 0x116, 0x129, 0x138, 0x139, 0x15a, 0x15b, 0x19b, 0x19f, 0x1ac, 0x1b0, 0x237, 0x23b, 0x23c, 0x253, 0x414, 0x41b, 0x41f, 0x481, 0x48e, 0x495, 0x49f, 0x4a7, 0x4b2, 0x4b5, 0x4b6, 0x4b7, 0x4b8

Function 13:
Public function signature: 0xc10b9358
Entry block: 0x43c
Exit block: 0x324
Body: 0x324, 0x43c, 0x443, 0x447, 0x578, 0x585, 0x589, 0x58d, 0x58e, 0x59f, 0x5b6, 0x5ba, 0x5c2, 0x5c8, 0x5cc, 0x5d6, 0x5da, 0x60f, 0x613, 0x670

Function 14:
Public fallback function
Entry block: 0xb4
Exit block: 0x23c
Body: 0xb4, 0xb5, 0xc0, 0xc7, 0xcb, 0xd7, 0xdb, 0x111, 0x116, 0x129, 0x138, 0x139, 0x15a, 0x15b, 0x19b, 0x19f, 0x1ac, 0x1b0, 0x237, 0x23b, 0x23c, 0x253, 0x481, 0x48e, 0x495, 0x49f, 0x4a7, 0x4b2, 0x4b5, 0x4b6, 0x4b7, 0x4b8

Function 15:
Private function
Entry block: 0x47c
Exit block: 0x47e
Body: 0x47c, 0x47e

Function 16:
Private function
Entry block: 0x451
Exit block: 0x479
Body: 0x451, 0x460, 0x467, 0x46e, 0x476, 0x479

