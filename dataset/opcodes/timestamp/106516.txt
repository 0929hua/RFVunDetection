args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/7/106516.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa1]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa1
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa1
0xa: JUMPI 0xa1 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1dc]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1dc
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x1dc
0x3d: JUMPI 0x1dc V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1ee]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x1ee
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x1ee
0x48: JUMPI 0x1ee V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x210]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x210
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x210
0x53: JUMPI 0x210 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x23c]
---
0x54 DUP1
0x55 PUSH4 0x6e66f6e9
0x5a EQ
0x5b PUSH2 0x23c
0x5e JUMPI
---
0x55: V20 = 0x6e66f6e9
0x5a: V21 = EQ 0x6e66f6e9 V10
0x5b: V22 = 0x23c
0x5e: JUMPI 0x23c V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x268]
---
0x5f DUP1
0x60 PUSH4 0x70a08231
0x65 EQ
0x66 PUSH2 0x268
0x69 JUMPI
---
0x60: V23 = 0x70a08231
0x65: V24 = EQ 0x70a08231 V10
0x66: V25 = 0x268
0x69: JUMPI 0x268 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x296]
---
0x6a DUP1
0x6b PUSH4 0x7a3a0e84
0x70 EQ
0x71 PUSH2 0x296
0x74 JUMPI
---
0x6b: V26 = 0x7a3a0e84
0x70: V27 = EQ 0x7a3a0e84 V10
0x71: V28 = 0x296
0x74: JUMPI 0x296 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2b8]
---
0x75 DUP1
0x76 PUSH4 0x7b3e5e7b
0x7b EQ
0x7c PUSH2 0x2b8
0x7f JUMPI
---
0x76: V29 = 0x7b3e5e7b
0x7b: V30 = EQ 0x7b3e5e7b V10
0x7c: V31 = 0x2b8
0x7f: JUMPI 0x2b8 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2da]
---
0x80 DUP1
0x81 PUSH4 0x9b2cb5d8
0x86 EQ
0x87 PUSH2 0x2da
0x8a JUMPI
---
0x81: V32 = 0x9b2cb5d8
0x86: V33 = EQ 0x9b2cb5d8 V10
0x87: V34 = 0x2da
0x8a: JUMPI 0x2da V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2fc]
---
0x8b DUP1
0x8c PUSH4 0xa035b1fe
0x91 EQ
0x92 PUSH2 0x2fc
0x95 JUMPI
---
0x8c: V35 = 0xa035b1fe
0x91: V36 = EQ 0xa035b1fe V10
0x92: V37 = 0x2fc
0x95: JUMPI 0x2fc V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x31e]
---
0x96 DUP1
0x97 PUSH4 0xfd6b7ef8
0x9c EQ
0x9d PUSH2 0x31e
0xa0 JUMPI
---
0x97: V38 = 0xfd6b7ef8
0x9c: V39 = EQ 0xfd6b7ef8 V10
0x9d: V40 = 0x31e
0xa0: JUMPI 0x31e V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x0, 0x96]
Successors: [0xa5]
---
0xa1 JUMPDEST
0xa2 PUSH2 0x1da
---
0xa1: JUMPDEST 
0xa2: V41 = 0x1da
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1da]
Exit stack: [V10, 0x1da]

================================

Block 0xa5
[0xa5:0xb8]
---
Predecessors: [0xa1]
Successors: [0xb9, 0xbe]
---
0xa5 JUMPDEST
0xa6 PUSH1 0x8
0xa8 SLOAD
0xa9 PUSH1 0x0
0xab SWAP1
0xac PUSH2 0x100
0xaf SWAP1
0xb0 DIV
0xb1 PUSH1 0xff
0xb3 AND
0xb4 ISZERO
0xb5 PUSH2 0xbe
0xb8 JUMPI
---
0xa5: JUMPDEST 
0xa6: V42 = 0x8
0xa8: V43 = S[0x8]
0xa9: V44 = 0x0
0xac: V45 = 0x100
0xb0: V46 = DIV V43 0x100
0xb1: V47 = 0xff
0xb3: V48 = AND 0xff V46
0xb4: V49 = ISZERO V48
0xb5: V50 = 0xbe
0xb8: JUMPI 0xbe V49
---
Entry stack: [V10, 0x1da]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1da, 0x0]

================================

Block 0xb9
[0xb9:0xbd]
---
Predecessors: [0xa5]
Successors: []
---
0xb9 PUSH1 0x0
0xbb PUSH1 0x0
0xbd REVERT
---
0xb9: V51 = 0x0
0xbb: V52 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1da, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, 0x0]

================================

Block 0xbe
[0xbe:0xcb]
---
Predecessors: [0xa5]
Successors: [0xcc, 0xd1]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 SWAP1
0xc1 POP
0xc2 PUSH1 0x5
0xc4 SLOAD
0xc5 DUP2
0xc6 LT
0xc7 ISZERO
0xc8 PUSH2 0xd1
0xcb JUMPI
---
0xbe: JUMPDEST 
0xbf: V53 = CALLVALUE
0xc2: V54 = 0x5
0xc4: V55 = S[0x5]
0xc6: V56 = LT V53 V55
0xc7: V57 = ISZERO V56
0xc8: V58 = 0xd1
0xcb: JUMPI 0xd1 V57
---
Entry stack: [V10, 0x1da, 0x0]
Stack pops: 1
Stack additions: [V53]
Exit stack: [V10, 0x1da, V53]

================================

Block 0xcc
[0xcc:0xd0]
---
Predecessors: [0xbe]
Successors: []
---
0xcc PUSH1 0x0
0xce PUSH1 0x0
0xd0 REVERT
---
0xcc: V59 = 0x0
0xce: V60 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1da, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, V53]

================================

Block 0xd1
[0xd1:0x111]
---
Predecessors: [0xbe]
Successors: [0x112, 0x113]
---
0xd1 JUMPDEST
0xd2 CALLER
0xd3 PUSH1 0x1
0xd5 PUSH1 0xa0
0xd7 PUSH1 0x2
0xd9 EXP
0xda SUB
0xdb DUP2
0xdc DUP2
0xdd AND
0xde PUSH1 0x0
0xe0 SWAP1
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x7
0xe5 PUSH1 0x20
0xe7 MSTORE
0xe8 PUSH1 0x40
0xea SWAP1
0xeb SHA3
0xec DUP4
0xed SWAP1
0xee SSTORE
0xef PUSH1 0x2
0xf1 DUP1
0xf2 SLOAD
0xf3 DUP5
0xf4 ADD
0xf5 SWAP1
0xf6 SSTORE
0xf7 PUSH1 0x6
0xf9 SLOAD
0xfa PUSH1 0x4
0xfc SLOAD
0xfd SWAP2
0xfe AND
0xff SWAP2
0x100 PUSH4 0xa9059cbb
0x105 SWAP2
0x106 PUSH2 0x2710
0x109 DUP6
0x10a MUL
0x10b DUP2
0x10c ISZERO
0x10d ISZERO
0x10e PUSH2 0x113
0x111 JUMPI
---
0xd1: JUMPDEST 
0xd2: V61 = CALLER
0xd3: V62 = 0x1
0xd5: V63 = 0xa0
0xd7: V64 = 0x2
0xd9: V65 = EXP 0x2 0xa0
0xda: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xde: V68 = 0x0
0xe2: M[0x0] = V67
0xe3: V69 = 0x7
0xe5: V70 = 0x20
0xe7: M[0x20] = 0x7
0xe8: V71 = 0x40
0xeb: V72 = SHA3 0x0 0x40
0xee: S[V72] = V53
0xef: V73 = 0x2
0xf2: V74 = S[0x2]
0xf4: V75 = ADD V53 V74
0xf6: S[0x2] = V75
0xf7: V76 = 0x6
0xf9: V77 = S[0x6]
0xfa: V78 = 0x4
0xfc: V79 = S[0x4]
0xfe: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x100: V81 = 0xa9059cbb
0x106: V82 = 0x2710
0x10a: V83 = MUL V53 0x2710
0x10c: V84 = ISZERO V79
0x10d: V85 = ISZERO V84
0x10e: V86 = 0x113
0x111: JUMPI 0x113 V85
---
Entry stack: [V10, 0x1da, V53]
Stack pops: 1
Stack additions: [S0, V80, 0xa9059cbb, V61, V79, V83]
Exit stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V61, V79, V83]

================================

Block 0x112
[0x112:0x112]
---
Predecessors: [0xd1]
Successors: []
---
0x112 INVALID
---
0x112: INVALID 
---
Entry stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V61, V79, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V61, V79, V83]

================================

Block 0x113
[0x113:0x179]
---
Predecessors: [0xd1]
Successors: [0x17a, 0x17b]
---
0x113 JUMPDEST
0x114 DIV
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP4
0x119 PUSH4 0xffffffff
0x11e AND
0x11f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x13d MUL
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x4
0x142 ADD
0x143 DUP1
0x144 DUP4
0x145 PUSH1 0x1
0x147 PUSH1 0xa0
0x149 PUSH1 0x2
0x14b EXP
0x14c SUB
0x14d AND
0x14e PUSH1 0x1
0x150 PUSH1 0xa0
0x152 PUSH1 0x2
0x154 EXP
0x155 SUB
0x156 AND
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c DUP3
0x15d DUP2
0x15e MSTORE
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP3
0x163 POP
0x164 POP
0x165 POP
0x166 PUSH1 0x0
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c DUP4
0x16d SUB
0x16e DUP2
0x16f PUSH1 0x0
0x171 DUP8
0x172 DUP1
0x173 EXTCODESIZE
0x174 ISZERO
0x175 ISZERO
0x176 PUSH2 0x17b
0x179 JUMPI
---
0x113: JUMPDEST 
0x114: V87 = DIV V83 V79
0x115: V88 = 0x40
0x117: V89 = M[0x40]
0x119: V90 = 0xffffffff
0x11e: V91 = AND 0xffffffff 0xa9059cbb
0x11f: V92 = 0x100000000000000000000000000000000000000000000000000000000
0x13d: V93 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x13f: M[V89] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x140: V94 = 0x4
0x142: V95 = ADD 0x4 V89
0x145: V96 = 0x1
0x147: V97 = 0xa0
0x149: V98 = 0x2
0x14b: V99 = EXP 0x2 0xa0
0x14c: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14d: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x14e: V102 = 0x1
0x150: V103 = 0xa0
0x152: V104 = 0x2
0x154: V105 = EXP 0x2 0xa0
0x155: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x156: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x158: M[V95] = V107
0x159: V108 = 0x20
0x15b: V109 = ADD 0x20 V95
0x15e: M[V109] = V87
0x15f: V110 = 0x20
0x161: V111 = ADD 0x20 V109
0x166: V112 = 0x0
0x168: V113 = 0x40
0x16a: V114 = M[0x40]
0x16d: V115 = SUB V111 V114
0x16f: V116 = 0x0
0x173: V117 = EXTCODESIZE V80
0x174: V118 = ISZERO V117
0x175: V119 = ISZERO V118
0x176: V120 = 0x17b
0x179: JUMPI 0x17b V119
---
Entry stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V61, V79, V83]
Stack pops: 5
Stack additions: [S4, S3, V111, 0x0, V114, V115, V114, 0x0, S4]
Exit stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V80]

================================

Block 0x17a
[0x17a:0x17a]
---
Predecessors: [0x113]
Successors: []
---
0x17a INVALID
---
0x17a: INVALID 
---
Entry stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V80]

================================

Block 0x17b
[0x17b:0x187]
---
Predecessors: [0x113]
Successors: [0x188, 0x189]
---
0x17b JUMPDEST
0x17c PUSH2 0x2c6
0x17f GAS
0x180 SUB
0x181 CALL
0x182 ISZERO
0x183 ISZERO
0x184 PUSH2 0x189
0x187 JUMPI
---
0x17b: JUMPDEST 
0x17c: V121 = 0x2c6
0x17f: V122 = GAS
0x180: V123 = SUB V122 0x2c6
0x181: V124 = CALL V123 V80 0x0 V114 V115 V114 0x0
0x182: V125 = ISZERO V124
0x183: V126 = ISZERO V125
0x184: V127 = 0x189
0x187: JUMPI 0x189 V126
---
Entry stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V80]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V111]

================================

Block 0x188
[0x188:0x188]
---
Predecessors: [0x17b]
Successors: []
---
0x188 INVALID
---
0x188: INVALID 
---
Entry stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V111]

================================

Block 0x189
[0x189:0x1d6]
---
Predecessors: [0x17b]
Successors: [0x1d7]
---
0x189 JUMPDEST
0x18a POP
0x18b POP
0x18c PUSH1 0x40
0x18e DUP1
0x18f MLOAD
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 CALLER
0x199 AND
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e DUP2
0x19f ADD
0x1a0 DUP5
0x1a1 SWAP1
0x1a2 MSTORE
0x1a3 PUSH1 0x1
0x1a5 DUP2
0x1a6 DUP4
0x1a7 ADD
0x1a8 MSTORE
0x1a9 SWAP1
0x1aa MLOAD
0x1ab PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1cc SWAP3
0x1cd POP
0x1ce SWAP1
0x1cf DUP2
0x1d0 SWAP1
0x1d1 SUB
0x1d2 PUSH1 0x60
0x1d4 ADD
0x1d5 SWAP1
0x1d6 LOG1
---
0x189: JUMPDEST 
0x18c: V128 = 0x40
0x18f: V129 = M[0x40]
0x190: V130 = 0x1
0x192: V131 = 0xa0
0x194: V132 = 0x2
0x196: V133 = EXP 0x2 0xa0
0x197: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V135 = CALLER
0x199: V136 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x19b: M[V129] = V136
0x19c: V137 = 0x20
0x19f: V138 = ADD V129 0x20
0x1a2: M[V138] = V53
0x1a3: V139 = 0x1
0x1a7: V140 = ADD 0x40 V129
0x1a8: M[V140] = 0x1
0x1aa: V141 = M[0x40]
0x1ab: V142 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d1: V143 = SUB V129 V141
0x1d2: V144 = 0x60
0x1d4: V145 = ADD 0x60 V143
0x1d6: LOG V141 V145 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x1da, V53, V80, 0xa9059cbb, V111]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1da, V53]

================================

Block 0x1d7
[0x1d7:0x1d9]
---
Predecessors: [0x189, 0x501, 0x536]
Successors: [0x1da]
---
0x1d7 JUMPDEST
0x1d8 POP
0x1d9 JUMP
---
0x1d7: JUMPDEST 
0x1d9: JUMP 0x1da
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1da
[0x1da:0x1db]
---
Predecessors: [0x1d7, 0x3b5, 0x59b]
Successors: []
---
0x1da JUMPDEST
0x1db STOP
---
0x1da: JUMPDEST 
0x1db: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1dc
[0x1dc:0x1e2]
---
Predecessors: [0xb]
Successors: [0x1e3, 0x1e4]
---
0x1dc JUMPDEST
0x1dd CALLVALUE
0x1de ISZERO
0x1df PUSH2 0x1e4
0x1e2 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V146 = CALLVALUE
0x1de: V147 = ISZERO V146
0x1df: V148 = 0x1e4
0x1e2: JUMPI 0x1e4 V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e3
[0x1e3:0x1e3]
---
Predecessors: [0x1dc]
Successors: []
---
0x1e3 INVALID
---
0x1e3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e4
[0x1e4:0x1eb]
---
Predecessors: [0x1dc]
Successors: [0x330]
---
0x1e4 JUMPDEST
0x1e5 PUSH2 0x1da
0x1e8 PUSH2 0x330
0x1eb JUMP
---
0x1e4: JUMPDEST 
0x1e5: V149 = 0x1da
0x1e8: V150 = 0x330
0x1eb: JUMP 0x330
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1da]
Exit stack: [V10, 0x1da]

================================

Block 0x1ec
[0x1ec:0x1ed]
---
Predecessors: []
Successors: []
---
0x1ec JUMPDEST
0x1ed STOP
---
0x1ec: JUMPDEST 
0x1ed: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ee
[0x1ee:0x1f4]
---
Predecessors: [0x3e]
Successors: [0x1f5, 0x1f6]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 ISZERO
0x1f1 PUSH2 0x1f6
0x1f4 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V151 = CALLVALUE
0x1f0: V152 = ISZERO V151
0x1f1: V153 = 0x1f6
0x1f4: JUMPI 0x1f6 V152
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f5
[0x1f5:0x1f5]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f5 INVALID
---
0x1f5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f6
[0x1f6:0x1fd]
---
Predecessors: [0x1ee]
Successors: [0x3b7]
---
0x1f6 JUMPDEST
0x1f7 PUSH2 0x1fe
0x1fa PUSH2 0x3b7
0x1fd JUMP
---
0x1f6: JUMPDEST 
0x1f7: V154 = 0x1fe
0x1fa: V155 = 0x3b7
0x1fd: JUMP 0x3b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fe]
Exit stack: [V10, 0x1fe]

================================

Block 0x1fe
[0x1fe:0x20f]
---
Predecessors: [0x3b7, 0x3db, 0x3ed, 0x3f3, 0x3f9, 0x3ff]
Successors: []
---
0x1fe JUMPDEST
0x1ff PUSH1 0x40
0x201 DUP1
0x202 MLOAD
0x203 SWAP2
0x204 DUP3
0x205 MSTORE
0x206 MLOAD
0x207 SWAP1
0x208 DUP2
0x209 SWAP1
0x20a SUB
0x20b PUSH1 0x20
0x20d ADD
0x20e SWAP1
0x20f RETURN
---
0x1fe: JUMPDEST 
0x1ff: V156 = 0x40
0x202: V157 = M[0x40]
0x205: M[V157] = S0
0x206: V158 = M[0x40]
0x20a: V159 = SUB V157 V158
0x20b: V160 = 0x20
0x20d: V161 = ADD 0x20 V159
0x20f: RETURN V158 V161
---
Entry stack: [V10, 0x1fe, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1fe]

================================

Block 0x210
[0x210:0x216]
---
Predecessors: [0x49]
Successors: [0x217, 0x218]
---
0x210 JUMPDEST
0x211 CALLVALUE
0x212 ISZERO
0x213 PUSH2 0x218
0x216 JUMPI
---
0x210: JUMPDEST 
0x211: V162 = CALLVALUE
0x212: V163 = ISZERO V162
0x213: V164 = 0x218
0x216: JUMPI 0x218 V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x217
[0x217:0x217]
---
Predecessors: [0x210]
Successors: []
---
0x217 INVALID
---
0x217: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x218
[0x218:0x21f]
---
Predecessors: [0x210]
Successors: [0x3bd]
---
0x218 JUMPDEST
0x219 PUSH2 0x220
0x21c PUSH2 0x3bd
0x21f JUMP
---
0x218: JUMPDEST 
0x219: V165 = 0x220
0x21c: V166 = 0x3bd
0x21f: JUMP 0x3bd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x220]
Exit stack: [V10, 0x220]

================================

Block 0x220
[0x220:0x23b]
---
Predecessors: [0x3bd, 0x3cc]
Successors: []
---
0x220 JUMPDEST
0x221 PUSH1 0x40
0x223 DUP1
0x224 MLOAD
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d SWAP1
0x22e SWAP3
0x22f AND
0x230 DUP3
0x231 MSTORE
0x232 MLOAD
0x233 SWAP1
0x234 DUP2
0x235 SWAP1
0x236 SUB
0x237 PUSH1 0x20
0x239 ADD
0x23a SWAP1
0x23b RETURN
---
0x220: JUMPDEST 
0x221: V167 = 0x40
0x224: V168 = M[0x40]
0x225: V169 = 0x1
0x227: V170 = 0xa0
0x229: V171 = 0x2
0x22b: V172 = EXP 0x2 0xa0
0x22c: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V174 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x231: M[V168] = V174
0x232: V175 = M[0x40]
0x236: V176 = SUB V168 V175
0x237: V177 = 0x20
0x239: V178 = ADD 0x20 V176
0x23b: RETURN V175 V178
---
Entry stack: [V10, 0x220, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x220]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x54]
Successors: [0x243, 0x244]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e ISZERO
0x23f PUSH2 0x244
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V179 = CALLVALUE
0x23e: V180 = ISZERO V179
0x23f: V181 = 0x244
0x242: JUMPI 0x244 V180
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x243
[0x243:0x243]
---
Predecessors: [0x23c]
Successors: []
---
0x243 INVALID
---
0x243: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x244
[0x244:0x24b]
---
Predecessors: [0x23c]
Successors: [0x3cc]
---
0x244 JUMPDEST
0x245 PUSH2 0x220
0x248 PUSH2 0x3cc
0x24b JUMP
---
0x244: JUMPDEST 
0x245: V182 = 0x220
0x248: V183 = 0x3cc
0x24b: JUMP 0x3cc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x220]
Exit stack: [V10, 0x220]

================================

Block 0x24c
[0x24c:0x267]
---
Predecessors: []
Successors: []
---
0x24c JUMPDEST
0x24d PUSH1 0x40
0x24f DUP1
0x250 MLOAD
0x251 PUSH1 0x1
0x253 PUSH1 0xa0
0x255 PUSH1 0x2
0x257 EXP
0x258 SUB
0x259 SWAP1
0x25a SWAP3
0x25b AND
0x25c DUP3
0x25d MSTORE
0x25e MLOAD
0x25f SWAP1
0x260 DUP2
0x261 SWAP1
0x262 SUB
0x263 PUSH1 0x20
0x265 ADD
0x266 SWAP1
0x267 RETURN
---
0x24c: JUMPDEST 
0x24d: V184 = 0x40
0x250: V185 = M[0x40]
0x251: V186 = 0x1
0x253: V187 = 0xa0
0x255: V188 = 0x2
0x257: V189 = EXP 0x2 0xa0
0x258: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25b: V191 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x25d: M[V185] = V191
0x25e: V192 = M[0x40]
0x262: V193 = SUB V185 V192
0x263: V194 = 0x20
0x265: V195 = ADD 0x20 V193
0x267: RETURN V192 V195
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x268
[0x268:0x26e]
---
Predecessors: [0x5f]
Successors: [0x26f, 0x270]
---
0x268 JUMPDEST
0x269 CALLVALUE
0x26a ISZERO
0x26b PUSH2 0x270
0x26e JUMPI
---
0x268: JUMPDEST 
0x269: V196 = CALLVALUE
0x26a: V197 = ISZERO V196
0x26b: V198 = 0x270
0x26e: JUMPI 0x270 V197
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26f
[0x26f:0x26f]
---
Predecessors: [0x268]
Successors: []
---
0x26f INVALID
---
0x26f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x270
[0x270:0x283]
---
Predecessors: [0x268]
Successors: [0x3db]
---
0x270 JUMPDEST
0x271 PUSH2 0x1fe
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c PUSH1 0x4
0x27e CALLDATALOAD
0x27f AND
0x280 PUSH2 0x3db
0x283 JUMP
---
0x270: JUMPDEST 
0x271: V199 = 0x1fe
0x274: V200 = 0x1
0x276: V201 = 0xa0
0x278: V202 = 0x2
0x27a: V203 = EXP 0x2 0xa0
0x27b: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V205 = 0x4
0x27e: V206 = CALLDATALOAD 0x4
0x27f: V207 = AND V206 0xffffffffffffffffffffffffffffffffffffffff
0x280: V208 = 0x3db
0x283: JUMP 0x3db
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fe, V207]
Exit stack: [V10, 0x1fe, V207]

================================

Block 0x284
[0x284:0x295]
---
Predecessors: []
Successors: []
---
0x284 JUMPDEST
0x285 PUSH1 0x40
0x287 DUP1
0x288 MLOAD
0x289 SWAP2
0x28a DUP3
0x28b MSTORE
0x28c MLOAD
0x28d SWAP1
0x28e DUP2
0x28f SWAP1
0x290 SUB
0x291 PUSH1 0x20
0x293 ADD
0x294 SWAP1
0x295 RETURN
---
0x284: JUMPDEST 
0x285: V209 = 0x40
0x288: V210 = M[0x40]
0x28b: M[V210] = S0
0x28c: V211 = M[0x40]
0x290: V212 = SUB V210 V211
0x291: V213 = 0x20
0x293: V214 = ADD 0x20 V212
0x295: RETURN V211 V214
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x296
[0x296:0x29c]
---
Predecessors: [0x6a]
Successors: [0x29d, 0x29e]
---
0x296 JUMPDEST
0x297 CALLVALUE
0x298 ISZERO
0x299 PUSH2 0x29e
0x29c JUMPI
---
0x296: JUMPDEST 
0x297: V215 = CALLVALUE
0x298: V216 = ISZERO V215
0x299: V217 = 0x29e
0x29c: JUMPI 0x29e V216
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29d
[0x29d:0x29d]
---
Predecessors: [0x296]
Successors: []
---
0x29d INVALID
---
0x29d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29e
[0x29e:0x2a5]
---
Predecessors: [0x296]
Successors: [0x3ed]
---
0x29e JUMPDEST
0x29f PUSH2 0x1fe
0x2a2 PUSH2 0x3ed
0x2a5 JUMP
---
0x29e: JUMPDEST 
0x29f: V218 = 0x1fe
0x2a2: V219 = 0x3ed
0x2a5: JUMP 0x3ed
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fe]
Exit stack: [V10, 0x1fe]

================================

Block 0x2a6
[0x2a6:0x2b7]
---
Predecessors: []
Successors: []
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x40
0x2a9 DUP1
0x2aa MLOAD
0x2ab SWAP2
0x2ac DUP3
0x2ad MSTORE
0x2ae MLOAD
0x2af SWAP1
0x2b0 DUP2
0x2b1 SWAP1
0x2b2 SUB
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 SWAP1
0x2b7 RETURN
---
0x2a6: JUMPDEST 
0x2a7: V220 = 0x40
0x2aa: V221 = M[0x40]
0x2ad: M[V221] = S0
0x2ae: V222 = M[0x40]
0x2b2: V223 = SUB V221 V222
0x2b3: V224 = 0x20
0x2b5: V225 = ADD 0x20 V223
0x2b7: RETURN V222 V225
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b8
[0x2b8:0x2be]
---
Predecessors: [0x75]
Successors: [0x2bf, 0x2c0]
---
0x2b8 JUMPDEST
0x2b9 CALLVALUE
0x2ba ISZERO
0x2bb PUSH2 0x2c0
0x2be JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V226 = CALLVALUE
0x2ba: V227 = ISZERO V226
0x2bb: V228 = 0x2c0
0x2be: JUMPI 0x2c0 V227
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bf
[0x2bf:0x2bf]
---
Predecessors: [0x2b8]
Successors: []
---
0x2bf INVALID
---
0x2bf: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c0
[0x2c0:0x2c7]
---
Predecessors: [0x2b8]
Successors: [0x3f3]
---
0x2c0 JUMPDEST
0x2c1 PUSH2 0x1fe
0x2c4 PUSH2 0x3f3
0x2c7 JUMP
---
0x2c0: JUMPDEST 
0x2c1: V229 = 0x1fe
0x2c4: V230 = 0x3f3
0x2c7: JUMP 0x3f3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fe]
Exit stack: [V10, 0x1fe]

================================

Block 0x2c8
[0x2c8:0x2d9]
---
Predecessors: []
Successors: []
---
0x2c8 JUMPDEST
0x2c9 PUSH1 0x40
0x2cb DUP1
0x2cc MLOAD
0x2cd SWAP2
0x2ce DUP3
0x2cf MSTORE
0x2d0 MLOAD
0x2d1 SWAP1
0x2d2 DUP2
0x2d3 SWAP1
0x2d4 SUB
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 SWAP1
0x2d9 RETURN
---
0x2c8: JUMPDEST 
0x2c9: V231 = 0x40
0x2cc: V232 = M[0x40]
0x2cf: M[V232] = S0
0x2d0: V233 = M[0x40]
0x2d4: V234 = SUB V232 V233
0x2d5: V235 = 0x20
0x2d7: V236 = ADD 0x20 V234
0x2d9: RETURN V233 V236
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2da
[0x2da:0x2e0]
---
Predecessors: [0x80]
Successors: [0x2e1, 0x2e2]
---
0x2da JUMPDEST
0x2db CALLVALUE
0x2dc ISZERO
0x2dd PUSH2 0x2e2
0x2e0 JUMPI
---
0x2da: JUMPDEST 
0x2db: V237 = CALLVALUE
0x2dc: V238 = ISZERO V237
0x2dd: V239 = 0x2e2
0x2e0: JUMPI 0x2e2 V238
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e1
[0x2e1:0x2e1]
---
Predecessors: [0x2da]
Successors: []
---
0x2e1 INVALID
---
0x2e1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e2
[0x2e2:0x2e9]
---
Predecessors: [0x2da]
Successors: [0x3f9]
---
0x2e2 JUMPDEST
0x2e3 PUSH2 0x1fe
0x2e6 PUSH2 0x3f9
0x2e9 JUMP
---
0x2e2: JUMPDEST 
0x2e3: V240 = 0x1fe
0x2e6: V241 = 0x3f9
0x2e9: JUMP 0x3f9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fe]
Exit stack: [V10, 0x1fe]

================================

Block 0x2ea
[0x2ea:0x2fb]
---
Predecessors: []
Successors: []
---
0x2ea JUMPDEST
0x2eb PUSH1 0x40
0x2ed DUP1
0x2ee MLOAD
0x2ef SWAP2
0x2f0 DUP3
0x2f1 MSTORE
0x2f2 MLOAD
0x2f3 SWAP1
0x2f4 DUP2
0x2f5 SWAP1
0x2f6 SUB
0x2f7 PUSH1 0x20
0x2f9 ADD
0x2fa SWAP1
0x2fb RETURN
---
0x2ea: JUMPDEST 
0x2eb: V242 = 0x40
0x2ee: V243 = M[0x40]
0x2f1: M[V243] = S0
0x2f2: V244 = M[0x40]
0x2f6: V245 = SUB V243 V244
0x2f7: V246 = 0x20
0x2f9: V247 = ADD 0x20 V245
0x2fb: RETURN V244 V247
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fc
[0x2fc:0x302]
---
Predecessors: [0x8b]
Successors: [0x303, 0x304]
---
0x2fc JUMPDEST
0x2fd CALLVALUE
0x2fe ISZERO
0x2ff PUSH2 0x304
0x302 JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V248 = CALLVALUE
0x2fe: V249 = ISZERO V248
0x2ff: V250 = 0x304
0x302: JUMPI 0x304 V249
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x303
[0x303:0x303]
---
Predecessors: [0x2fc]
Successors: []
---
0x303 INVALID
---
0x303: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x304
[0x304:0x30b]
---
Predecessors: [0x2fc]
Successors: [0x3ff]
---
0x304 JUMPDEST
0x305 PUSH2 0x1fe
0x308 PUSH2 0x3ff
0x30b JUMP
---
0x304: JUMPDEST 
0x305: V251 = 0x1fe
0x308: V252 = 0x3ff
0x30b: JUMP 0x3ff
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fe]
Exit stack: [V10, 0x1fe]

================================

Block 0x30c
[0x30c:0x31d]
---
Predecessors: []
Successors: []
---
0x30c JUMPDEST
0x30d PUSH1 0x40
0x30f DUP1
0x310 MLOAD
0x311 SWAP2
0x312 DUP3
0x313 MSTORE
0x314 MLOAD
0x315 SWAP1
0x316 DUP2
0x317 SWAP1
0x318 SUB
0x319 PUSH1 0x20
0x31b ADD
0x31c SWAP1
0x31d RETURN
---
0x30c: JUMPDEST 
0x30d: V253 = 0x40
0x310: V254 = M[0x40]
0x313: M[V254] = S0
0x314: V255 = M[0x40]
0x318: V256 = SUB V254 V255
0x319: V257 = 0x20
0x31b: V258 = ADD 0x20 V256
0x31d: RETURN V255 V258
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x31e
[0x31e:0x324]
---
Predecessors: [0x96]
Successors: [0x325, 0x326]
---
0x31e JUMPDEST
0x31f CALLVALUE
0x320 ISZERO
0x321 PUSH2 0x326
0x324 JUMPI
---
0x31e: JUMPDEST 
0x31f: V259 = CALLVALUE
0x320: V260 = ISZERO V259
0x321: V261 = 0x326
0x324: JUMPI 0x326 V260
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x325
[0x325:0x325]
---
Predecessors: [0x31e]
Successors: []
---
0x325 INVALID
---
0x325: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x326
[0x326:0x32d]
---
Predecessors: [0x31e]
Successors: [0x405]
---
0x326 JUMPDEST
0x327 PUSH2 0x1da
0x32a PUSH2 0x405
0x32d JUMP
---
0x326: JUMPDEST 
0x327: V262 = 0x1da
0x32a: V263 = 0x405
0x32d: JUMP 0x405
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1da]
Exit stack: [V10, 0x1da]

================================

Block 0x32e
[0x32e:0x32f]
---
Predecessors: []
Successors: []
---
0x32e JUMPDEST
0x32f STOP
---
0x32e: JUMPDEST 
0x32f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x330
[0x330:0x33a]
---
Predecessors: [0x1e4]
Successors: [0x33b, 0x340]
---
0x330 JUMPDEST
0x331 PUSH1 0x3
0x333 SLOAD
0x334 TIMESTAMP
0x335 LT
0x336 ISZERO
0x337 PUSH2 0x340
0x33a JUMPI
---
0x330: JUMPDEST 
0x331: V264 = 0x3
0x333: V265 = S[0x3]
0x334: V266 = TIMESTAMP
0x335: V267 = LT V266 V265
0x336: V268 = ISZERO V267
0x337: V269 = 0x340
0x33a: JUMPI 0x340 V268
---
Entry stack: [V10, 0x1da]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da]

================================

Block 0x33b
[0x33b:0x33f]
---
Predecessors: [0x330]
Successors: []
---
0x33b PUSH1 0x0
0x33d PUSH1 0x0
0x33f REVERT
---
0x33b: V270 = 0x0
0x33d: V271 = 0x0
0x33f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1da]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da]

================================

Block 0x340
[0x340:0x34b]
---
Predecessors: [0x330]
Successors: [0x34c, 0x3a4]
---
0x340 JUMPDEST
0x341 PUSH1 0x1
0x343 SLOAD
0x344 PUSH1 0x2
0x346 SLOAD
0x347 LT
0x348 PUSH2 0x3a4
0x34b JUMPI
---
0x340: JUMPDEST 
0x341: V272 = 0x1
0x343: V273 = S[0x1]
0x344: V274 = 0x2
0x346: V275 = S[0x2]
0x347: V276 = LT V275 V273
0x348: V277 = 0x3a4
0x34b: JUMPI 0x3a4 V276
---
Entry stack: [V10, 0x1da]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da]

================================

Block 0x34c
[0x34c:0x3a3]
---
Predecessors: [0x340]
Successors: [0x3a4]
---
0x34c PUSH1 0x8
0x34e DUP1
0x34f SLOAD
0x350 PUSH1 0xff
0x352 NOT
0x353 AND
0x354 PUSH1 0x1
0x356 OR
0x357 SWAP1
0x358 SSTORE
0x359 PUSH1 0x0
0x35b SLOAD
0x35c PUSH1 0x2
0x35e SLOAD
0x35f PUSH1 0x40
0x361 DUP1
0x362 MLOAD
0x363 PUSH1 0x1
0x365 PUSH1 0xa0
0x367 PUSH1 0x2
0x369 EXP
0x36a SUB
0x36b SWAP1
0x36c SWAP4
0x36d AND
0x36e DUP4
0x36f MSTORE
0x370 PUSH1 0x20
0x372 DUP4
0x373 ADD
0x374 SWAP2
0x375 SWAP1
0x376 SWAP2
0x377 MSTORE
0x378 DUP1
0x379 MLOAD
0x37a PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x39b SWAP3
0x39c DUP2
0x39d SWAP1
0x39e SUB
0x39f SWAP1
0x3a0 SWAP2
0x3a1 ADD
0x3a2 SWAP1
0x3a3 LOG1
---
0x34c: V278 = 0x8
0x34f: V279 = S[0x8]
0x350: V280 = 0xff
0x352: V281 = NOT 0xff
0x353: V282 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V279
0x354: V283 = 0x1
0x356: V284 = OR 0x1 V282
0x358: S[0x8] = V284
0x359: V285 = 0x0
0x35b: V286 = S[0x0]
0x35c: V287 = 0x2
0x35e: V288 = S[0x2]
0x35f: V289 = 0x40
0x362: V290 = M[0x40]
0x363: V291 = 0x1
0x365: V292 = 0xa0
0x367: V293 = 0x2
0x369: V294 = EXP 0x2 0xa0
0x36a: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36d: V296 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0x36f: M[V290] = V296
0x370: V297 = 0x20
0x373: V298 = ADD V290 0x20
0x377: M[V298] = V288
0x379: V299 = M[0x40]
0x37a: V300 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x39e: V301 = SUB V290 V299
0x3a1: V302 = ADD 0x40 V301
0x3a3: LOG V299 V302 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x1da]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da]

================================

Block 0x3a4
[0x3a4:0x3b3]
---
Predecessors: [0x340, 0x34c]
Successors: [0x3b4]
---
0x3a4 JUMPDEST
0x3a5 PUSH1 0x8
0x3a7 DUP1
0x3a8 SLOAD
0x3a9 PUSH2 0xff00
0x3ac NOT
0x3ad AND
0x3ae PUSH2 0x100
0x3b1 OR
0x3b2 SWAP1
0x3b3 SSTORE
---
0x3a4: JUMPDEST 
0x3a5: V303 = 0x8
0x3a8: V304 = S[0x8]
0x3a9: V305 = 0xff00
0x3ac: V306 = NOT 0xff00
0x3ad: V307 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V304
0x3ae: V308 = 0x100
0x3b1: V309 = OR 0x100 V307
0x3b3: S[0x8] = V309
---
Entry stack: [V10, 0x1da]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da]

================================

Block 0x3b4
[0x3b4:0x3b4]
---
Predecessors: [0x3a4]
Successors: [0x3b5]
---
0x3b4 JUMPDEST
---
0x3b4: JUMPDEST 
---
Entry stack: [V10, 0x1da]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da]

================================

Block 0x3b5
[0x3b5:0x3b6]
---
Predecessors: [0x3b4]
Successors: [0x1da]
---
0x3b5 JUMPDEST
0x3b6 JUMP
---
0x3b5: JUMPDEST 
0x3b6: JUMP 0x1da
---
Entry stack: [V10, 0x1da]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b7
[0x3b7:0x3bc]
---
Predecessors: [0x1f6]
Successors: [0x1fe]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x3
0x3ba SLOAD
0x3bb DUP2
0x3bc JUMP
---
0x3b7: JUMPDEST 
0x3b8: V310 = 0x3
0x3ba: V311 = S[0x3]
0x3bc: JUMP 0x1fe
---
Entry stack: [V10, 0x1fe]
Stack pops: 1
Stack additions: [S0, V311]
Exit stack: [V10, 0x1fe, V311]

================================

Block 0x3bd
[0x3bd:0x3cb]
---
Predecessors: [0x218]
Successors: [0x220]
---
0x3bd JUMPDEST
0x3be PUSH1 0x0
0x3c0 SLOAD
0x3c1 PUSH1 0x1
0x3c3 PUSH1 0xa0
0x3c5 PUSH1 0x2
0x3c7 EXP
0x3c8 SUB
0x3c9 AND
0x3ca DUP2
0x3cb JUMP
---
0x3bd: JUMPDEST 
0x3be: V312 = 0x0
0x3c0: V313 = S[0x0]
0x3c1: V314 = 0x1
0x3c3: V315 = 0xa0
0x3c5: V316 = 0x2
0x3c7: V317 = EXP 0x2 0xa0
0x3c8: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c9: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x3cb: JUMP 0x220
---
Entry stack: [V10, 0x220]
Stack pops: 1
Stack additions: [S0, V319]
Exit stack: [V10, 0x220, V319]

================================

Block 0x3cc
[0x3cc:0x3da]
---
Predecessors: [0x244]
Successors: [0x220]
---
0x3cc JUMPDEST
0x3cd PUSH1 0x6
0x3cf SLOAD
0x3d0 PUSH1 0x1
0x3d2 PUSH1 0xa0
0x3d4 PUSH1 0x2
0x3d6 EXP
0x3d7 SUB
0x3d8 AND
0x3d9 DUP2
0x3da JUMP
---
0x3cc: JUMPDEST 
0x3cd: V320 = 0x6
0x3cf: V321 = S[0x6]
0x3d0: V322 = 0x1
0x3d2: V323 = 0xa0
0x3d4: V324 = 0x2
0x3d6: V325 = EXP 0x2 0xa0
0x3d7: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d8: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x3da: JUMP 0x220
---
Entry stack: [V10, 0x220]
Stack pops: 1
Stack additions: [S0, V327]
Exit stack: [V10, 0x220, V327]

================================

Block 0x3db
[0x3db:0x3ec]
---
Predecessors: [0x270]
Successors: [0x1fe]
---
0x3db JUMPDEST
0x3dc PUSH1 0x7
0x3de PUSH1 0x20
0x3e0 MSTORE
0x3e1 PUSH1 0x0
0x3e3 SWAP1
0x3e4 DUP2
0x3e5 MSTORE
0x3e6 PUSH1 0x40
0x3e8 SWAP1
0x3e9 SHA3
0x3ea SLOAD
0x3eb DUP2
0x3ec JUMP
---
0x3db: JUMPDEST 
0x3dc: V328 = 0x7
0x3de: V329 = 0x20
0x3e0: M[0x20] = 0x7
0x3e1: V330 = 0x0
0x3e5: M[0x0] = V207
0x3e6: V331 = 0x40
0x3e9: V332 = SHA3 0x0 0x40
0x3ea: V333 = S[V332]
0x3ec: JUMP 0x1fe
---
Entry stack: [V10, 0x1fe, V207]
Stack pops: 2
Stack additions: [S1, V333]
Exit stack: [V10, 0x1fe, V333]

================================

Block 0x3ed
[0x3ed:0x3f2]
---
Predecessors: [0x29e]
Successors: [0x1fe]
---
0x3ed JUMPDEST
0x3ee PUSH1 0x1
0x3f0 SLOAD
0x3f1 DUP2
0x3f2 JUMP
---
0x3ed: JUMPDEST 
0x3ee: V334 = 0x1
0x3f0: V335 = S[0x1]
0x3f2: JUMP 0x1fe
---
Entry stack: [V10, 0x1fe]
Stack pops: 1
Stack additions: [S0, V335]
Exit stack: [V10, 0x1fe, V335]

================================

Block 0x3f3
[0x3f3:0x3f8]
---
Predecessors: [0x2c0]
Successors: [0x1fe]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x2
0x3f6 SLOAD
0x3f7 DUP2
0x3f8 JUMP
---
0x3f3: JUMPDEST 
0x3f4: V336 = 0x2
0x3f6: V337 = S[0x2]
0x3f8: JUMP 0x1fe
---
Entry stack: [V10, 0x1fe]
Stack pops: 1
Stack additions: [S0, V337]
Exit stack: [V10, 0x1fe, V337]

================================

Block 0x3f9
[0x3f9:0x3fe]
---
Predecessors: [0x2e2]
Successors: [0x1fe]
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x5
0x3fc SLOAD
0x3fd DUP2
0x3fe JUMP
---
0x3f9: JUMPDEST 
0x3fa: V338 = 0x5
0x3fc: V339 = S[0x5]
0x3fe: JUMP 0x1fe
---
Entry stack: [V10, 0x1fe]
Stack pops: 1
Stack additions: [S0, V339]
Exit stack: [V10, 0x1fe, V339]

================================

Block 0x3ff
[0x3ff:0x404]
---
Predecessors: [0x304]
Successors: [0x1fe]
---
0x3ff JUMPDEST
0x400 PUSH1 0x4
0x402 SLOAD
0x403 DUP2
0x404 JUMP
---
0x3ff: JUMPDEST 
0x400: V340 = 0x4
0x402: V341 = S[0x4]
0x404: JUMP 0x1fe
---
Entry stack: [V10, 0x1fe]
Stack pops: 1
Stack additions: [S0, V341]
Exit stack: [V10, 0x1fe, V341]

================================

Block 0x405
[0x405:0x412]
---
Predecessors: [0x326]
Successors: [0x413, 0x418]
---
0x405 JUMPDEST
0x406 PUSH1 0x3
0x408 SLOAD
0x409 PUSH1 0x0
0x40b SWAP1
0x40c TIMESTAMP
0x40d LT
0x40e ISZERO
0x40f PUSH2 0x418
0x412 JUMPI
---
0x405: JUMPDEST 
0x406: V342 = 0x3
0x408: V343 = S[0x3]
0x409: V344 = 0x0
0x40c: V345 = TIMESTAMP
0x40d: V346 = LT V345 V343
0x40e: V347 = ISZERO V346
0x40f: V348 = 0x418
0x412: JUMPI 0x418 V347
---
Entry stack: [V10, 0x1da]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1da, 0x0]

================================

Block 0x413
[0x413:0x417]
---
Predecessors: [0x405]
Successors: []
---
0x413 PUSH1 0x0
0x415 PUSH1 0x0
0x417 REVERT
---
0x413: V349 = 0x0
0x415: V350 = 0x0
0x417: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1da, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, 0x0]

================================

Block 0x418
[0x418:0x424]
---
Predecessors: [0x405]
Successors: [0x425, 0x4df]
---
0x418 JUMPDEST
0x419 PUSH1 0x8
0x41b SLOAD
0x41c PUSH1 0xff
0x41e AND
0x41f ISZERO
0x420 ISZERO
0x421 PUSH2 0x4df
0x424 JUMPI
---
0x418: JUMPDEST 
0x419: V351 = 0x8
0x41b: V352 = S[0x8]
0x41c: V353 = 0xff
0x41e: V354 = AND 0xff V352
0x41f: V355 = ISZERO V354
0x420: V356 = ISZERO V355
0x421: V357 = 0x4df
0x424: JUMPI 0x4df V356
---
Entry stack: [V10, 0x1da, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, 0x0]

================================

Block 0x425
[0x425:0x44b]
---
Predecessors: [0x418]
Successors: [0x44c, 0x4df]
---
0x425 POP
0x426 PUSH1 0x1
0x428 PUSH1 0xa0
0x42a PUSH1 0x2
0x42c EXP
0x42d SUB
0x42e CALLER
0x42f AND
0x430 PUSH1 0x0
0x432 SWAP1
0x433 DUP2
0x434 MSTORE
0x435 PUSH1 0x7
0x437 PUSH1 0x20
0x439 MSTORE
0x43a PUSH1 0x40
0x43c DUP2
0x43d SHA3
0x43e DUP1
0x43f SLOAD
0x440 SWAP1
0x441 DUP3
0x442 SWAP1
0x443 SSTORE
0x444 SWAP1
0x445 DUP2
0x446 GT
0x447 ISZERO
0x448 PUSH2 0x4df
0x44b JUMPI
---
0x426: V358 = 0x1
0x428: V359 = 0xa0
0x42a: V360 = 0x2
0x42c: V361 = EXP 0x2 0xa0
0x42d: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42e: V363 = CALLER
0x42f: V364 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x430: V365 = 0x0
0x434: M[0x0] = V364
0x435: V366 = 0x7
0x437: V367 = 0x20
0x439: M[0x20] = 0x7
0x43a: V368 = 0x40
0x43d: V369 = SHA3 0x0 0x40
0x43f: V370 = S[V369]
0x443: S[V369] = 0x0
0x446: V371 = GT V370 0x0
0x447: V372 = ISZERO V371
0x448: V373 = 0x4df
0x44b: JUMPI 0x4df V372
---
Entry stack: [V10, 0x1da, 0x0]
Stack pops: 1
Stack additions: [V370]
Exit stack: [V10, 0x1da, V370]

================================

Block 0x44c
[0x44c:0x475]
---
Predecessors: [0x425]
Successors: [0x476, 0x4c3]
---
0x44c PUSH1 0x40
0x44e MLOAD
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 CALLER
0x458 AND
0x459 SWAP1
0x45a DUP3
0x45b ISZERO
0x45c PUSH2 0x8fc
0x45f MUL
0x460 SWAP1
0x461 DUP4
0x462 SWAP1
0x463 PUSH1 0x0
0x465 DUP2
0x466 DUP2
0x467 DUP2
0x468 DUP6
0x469 DUP9
0x46a DUP9
0x46b CALL
0x46c SWAP4
0x46d POP
0x46e POP
0x46f POP
0x470 POP
0x471 ISZERO
0x472 PUSH2 0x4c3
0x475 JUMPI
---
0x44c: V374 = 0x40
0x44e: V375 = M[0x40]
0x44f: V376 = 0x1
0x451: V377 = 0xa0
0x453: V378 = 0x2
0x455: V379 = EXP 0x2 0xa0
0x456: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V381 = CALLER
0x458: V382 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V383 = ISZERO V370
0x45c: V384 = 0x8fc
0x45f: V385 = MUL 0x8fc V383
0x463: V386 = 0x0
0x46b: V387 = CALL V385 V382 V370 V375 0x0 V375 0x0
0x471: V388 = ISZERO V387
0x472: V389 = 0x4c3
0x475: JUMPI 0x4c3 V388
---
Entry stack: [V10, 0x1da, V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1da, V370]

================================

Block 0x476
[0x476:0x4c2]
---
Predecessors: [0x44c]
Successors: [0x4df]
---
0x476 PUSH1 0x40
0x478 DUP1
0x479 MLOAD
0x47a PUSH1 0x1
0x47c PUSH1 0xa0
0x47e PUSH1 0x2
0x480 EXP
0x481 SUB
0x482 CALLER
0x483 AND
0x484 DUP2
0x485 MSTORE
0x486 PUSH1 0x20
0x488 DUP2
0x489 ADD
0x48a DUP4
0x48b SWAP1
0x48c MSTORE
0x48d PUSH1 0x0
0x48f DUP2
0x490 DUP4
0x491 ADD
0x492 MSTORE
0x493 SWAP1
0x494 MLOAD
0x495 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4b6 SWAP2
0x4b7 DUP2
0x4b8 SWAP1
0x4b9 SUB
0x4ba PUSH1 0x60
0x4bc ADD
0x4bd SWAP1
0x4be LOG1
0x4bf PUSH2 0x4df
0x4c2 JUMP
---
0x476: V390 = 0x40
0x479: V391 = M[0x40]
0x47a: V392 = 0x1
0x47c: V393 = 0xa0
0x47e: V394 = 0x2
0x480: V395 = EXP 0x2 0xa0
0x481: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x482: V397 = CALLER
0x483: V398 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x485: M[V391] = V398
0x486: V399 = 0x20
0x489: V400 = ADD V391 0x20
0x48c: M[V400] = V370
0x48d: V401 = 0x0
0x491: V402 = ADD 0x40 V391
0x492: M[V402] = 0x0
0x494: V403 = M[0x40]
0x495: V404 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4b9: V405 = SUB V391 V403
0x4ba: V406 = 0x60
0x4bc: V407 = ADD 0x60 V405
0x4be: LOG V403 V407 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4bf: V408 = 0x4df
0x4c2: JUMP 0x4df
---
Entry stack: [V10, 0x1da, V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1da, V370]

================================

Block 0x4c3
[0x4c3:0x4de]
---
Predecessors: [0x44c]
Successors: [0x4df]
---
0x4c3 JUMPDEST
0x4c4 PUSH1 0x1
0x4c6 PUSH1 0xa0
0x4c8 PUSH1 0x2
0x4ca EXP
0x4cb SUB
0x4cc CALLER
0x4cd AND
0x4ce PUSH1 0x0
0x4d0 SWAP1
0x4d1 DUP2
0x4d2 MSTORE
0x4d3 PUSH1 0x7
0x4d5 PUSH1 0x20
0x4d7 MSTORE
0x4d8 PUSH1 0x40
0x4da SWAP1
0x4db SHA3
0x4dc DUP2
0x4dd SWAP1
0x4de SSTORE
---
0x4c3: JUMPDEST 
0x4c4: V409 = 0x1
0x4c6: V410 = 0xa0
0x4c8: V411 = 0x2
0x4ca: V412 = EXP 0x2 0xa0
0x4cb: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V414 = CALLER
0x4cd: V415 = AND V414 0xffffffffffffffffffffffffffffffffffffffff
0x4ce: V416 = 0x0
0x4d2: M[0x0] = V415
0x4d3: V417 = 0x7
0x4d5: V418 = 0x20
0x4d7: M[0x20] = 0x7
0x4d8: V419 = 0x40
0x4db: V420 = SHA3 0x0 0x40
0x4de: S[V420] = V370
---
Entry stack: [V10, 0x1da, V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1da, V370]

================================

Block 0x4df
[0x4df:0x4df]
---
Predecessors: [0x418, 0x425, 0x476, 0x4c3]
Successors: [0x4e0]
---
0x4df JUMPDEST
---
0x4df: JUMPDEST 
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, S0]

================================

Block 0x4e0
[0x4e0:0x4e0]
---
Predecessors: [0x4df]
Successors: [0x4e1]
---
0x4e0 JUMPDEST
---
0x4e0: JUMPDEST 
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, S0]

================================

Block 0x4e1
[0x4e1:0x4ed]
---
Predecessors: [0x4e0]
Successors: [0x4ee, 0x501]
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0x8
0x4e4 SLOAD
0x4e5 PUSH1 0xff
0x4e7 AND
0x4e8 DUP1
0x4e9 ISZERO
0x4ea PUSH2 0x501
0x4ed JUMPI
---
0x4e1: JUMPDEST 
0x4e2: V421 = 0x8
0x4e4: V422 = S[0x8]
0x4e5: V423 = 0xff
0x4e7: V424 = AND 0xff V422
0x4e9: V425 = ISZERO V424
0x4ea: V426 = 0x501
0x4ed: JUMPI 0x501 V425
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 0
Stack additions: [V424]
Exit stack: [V10, 0x1da, S0, V424]

================================

Block 0x4ee
[0x4ee:0x500]
---
Predecessors: [0x4e1]
Successors: [0x501]
---
0x4ee POP
0x4ef PUSH1 0x0
0x4f1 SLOAD
0x4f2 CALLER
0x4f3 PUSH1 0x1
0x4f5 PUSH1 0xa0
0x4f7 PUSH1 0x2
0x4f9 EXP
0x4fa SUB
0x4fb SWAP1
0x4fc DUP2
0x4fd AND
0x4fe SWAP2
0x4ff AND
0x500 EQ
---
0x4ef: V427 = 0x0
0x4f1: V428 = S[0x0]
0x4f2: V429 = CALLER
0x4f3: V430 = 0x1
0x4f5: V431 = 0xa0
0x4f7: V432 = 0x2
0x4f9: V433 = EXP 0x2 0xa0
0x4fa: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x4ff: V436 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x500: V437 = EQ V436 V435
---
Entry stack: [V10, 0x1da, S1, V424]
Stack pops: 1
Stack additions: [V437]
Exit stack: [V10, 0x1da, S1, V437]

================================

Block 0x501
[0x501:0x506]
---
Predecessors: [0x4e1, 0x4ee]
Successors: [0x1d7, 0x507]
---
0x501 JUMPDEST
0x502 ISZERO
0x503 PUSH2 0x1d7
0x506 JUMPI
---
0x501: JUMPDEST 
0x502: V438 = ISZERO S0
0x503: V439 = 0x1d7
0x506: JUMPI 0x1d7 V438
---
Entry stack: [V10, 0x1da, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1da, S1]

================================

Block 0x507
[0x507:0x535]
---
Predecessors: [0x501]
Successors: [0x536, 0x58d]
---
0x507 PUSH1 0x0
0x509 DUP1
0x50a SLOAD
0x50b PUSH1 0x2
0x50d SLOAD
0x50e PUSH1 0x40
0x510 MLOAD
0x511 PUSH1 0x1
0x513 PUSH1 0xa0
0x515 PUSH1 0x2
0x517 EXP
0x518 SUB
0x519 SWAP1
0x51a SWAP3
0x51b AND
0x51c SWAP3
0x51d DUP2
0x51e ISZERO
0x51f PUSH2 0x8fc
0x522 MUL
0x523 SWAP3
0x524 SWAP1
0x525 DUP2
0x526 DUP2
0x527 DUP2
0x528 DUP6
0x529 DUP9
0x52a DUP9
0x52b CALL
0x52c SWAP4
0x52d POP
0x52e POP
0x52f POP
0x530 POP
0x531 ISZERO
0x532 PUSH2 0x58d
0x535 JUMPI
---
0x507: V440 = 0x0
0x50a: V441 = S[0x0]
0x50b: V442 = 0x2
0x50d: V443 = S[0x2]
0x50e: V444 = 0x40
0x510: V445 = M[0x40]
0x511: V446 = 0x1
0x513: V447 = 0xa0
0x515: V448 = 0x2
0x517: V449 = EXP 0x2 0xa0
0x518: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51b: V451 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0x51e: V452 = ISZERO V443
0x51f: V453 = 0x8fc
0x522: V454 = MUL 0x8fc V452
0x52b: V455 = CALL V454 V451 V443 V445 0x0 V445 0x0
0x531: V456 = ISZERO V455
0x532: V457 = 0x58d
0x535: JUMPI 0x58d V456
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, S0]

================================

Block 0x536
[0x536:0x58c]
---
Predecessors: [0x507]
Successors: [0x1d7]
---
0x536 PUSH1 0x0
0x538 DUP1
0x539 SLOAD
0x53a PUSH1 0x2
0x53c SLOAD
0x53d PUSH1 0x40
0x53f DUP1
0x540 MLOAD
0x541 PUSH1 0x1
0x543 PUSH1 0xa0
0x545 PUSH1 0x2
0x547 EXP
0x548 SUB
0x549 SWAP1
0x54a SWAP4
0x54b AND
0x54c DUP4
0x54d MSTORE
0x54e PUSH1 0x20
0x550 DUP4
0x551 ADD
0x552 SWAP2
0x553 SWAP1
0x554 SWAP2
0x555 MSTORE
0x556 DUP2
0x557 DUP2
0x558 ADD
0x559 SWAP3
0x55a SWAP1
0x55b SWAP3
0x55c MSTORE
0x55d SWAP1
0x55e MLOAD
0x55f PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x580 SWAP2
0x581 DUP2
0x582 SWAP1
0x583 SUB
0x584 PUSH1 0x60
0x586 ADD
0x587 SWAP1
0x588 LOG1
0x589 PUSH2 0x1d7
0x58c JUMP
---
0x536: V458 = 0x0
0x539: V459 = S[0x0]
0x53a: V460 = 0x2
0x53c: V461 = S[0x2]
0x53d: V462 = 0x40
0x540: V463 = M[0x40]
0x541: V464 = 0x1
0x543: V465 = 0xa0
0x545: V466 = 0x2
0x547: V467 = EXP 0x2 0xa0
0x548: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54b: V469 = AND V459 0xffffffffffffffffffffffffffffffffffffffff
0x54d: M[V463] = V469
0x54e: V470 = 0x20
0x551: V471 = ADD V463 0x20
0x555: M[V471] = V461
0x558: V472 = ADD 0x40 V463
0x55c: M[V472] = 0x0
0x55e: V473 = M[0x40]
0x55f: V474 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x583: V475 = SUB V463 V473
0x584: V476 = 0x60
0x586: V477 = ADD 0x60 V475
0x588: LOG V473 V477 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x589: V478 = 0x1d7
0x58c: JUMP 0x1d7
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, S0]

================================

Block 0x58d
[0x58d:0x597]
---
Predecessors: [0x507]
Successors: [0x598]
---
0x58d JUMPDEST
0x58e PUSH1 0x8
0x590 DUP1
0x591 SLOAD
0x592 PUSH1 0xff
0x594 NOT
0x595 AND
0x596 SWAP1
0x597 SSTORE
---
0x58d: JUMPDEST 
0x58e: V479 = 0x8
0x591: V480 = S[0x8]
0x592: V481 = 0xff
0x594: V482 = NOT 0xff
0x595: V483 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V480
0x597: S[0x8] = V483
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, S0]

================================

Block 0x598
[0x598:0x598]
---
Predecessors: [0x58d]
Successors: [0x599]
---
0x598 JUMPDEST
---
0x598: JUMPDEST 
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, S0]

================================

Block 0x599
[0x599:0x599]
---
Predecessors: [0x598]
Successors: [0x59a]
---
0x599 JUMPDEST
---
0x599: JUMPDEST 
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, S0]

================================

Block 0x59a
[0x59a:0x59a]
---
Predecessors: [0x599]
Successors: [0x59b]
---
0x59a JUMPDEST
---
0x59a: JUMPDEST 
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1da, S0]

================================

Block 0x59b
[0x59b:0x59d]
---
Predecessors: [0x59a]
Successors: [0x1da]
---
0x59b JUMPDEST
0x59c POP
0x59d JUMP
---
0x59b: JUMPDEST 
0x59d: JUMP 0x1da
---
Entry stack: [V10, 0x1da, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x59e
[0x59e:0x5ca]
---
Predecessors: []
Successors: []
---
0x59e STOP
0x59f LOG1
0x5a0 PUSH6 0x627a7a723058
0x5a7 SHA3
0x5a8 MISSING 0xc0
0x5a9 DIFFICULTY
0x5aa SWAP13
0x5ab MISSING 0xd6
0x5ac MISSING 0x22
0x5ad DIV
0x5ae SHL
0x5af MISSING 0xc3
0x5b0 SWAP7
0x5b1 PUSH25 0xcbe0205db2ee96f0ba3402bc3595346ff39ffe799cf70029
---
0x59e: STOP 
0x59f: LOG S0 S1 S2
0x5a0: V484 = 0x627a7a723058
0x5a7: V485 = SHA3 0x627a7a723058 S3
0x5a8: MISSING 0xc0
0x5a9: V486 = DIFFICULTY
0x5ab: MISSING 0xd6
0x5ac: MISSING 0x22
0x5ad: V487 = DIV S0 S1
0x5ae: V488 = SHL V487 S2
0x5af: MISSING 0xc3
0x5b1: V489 = 0xcbe0205db2ee96f0ba3402bc3595346ff39ffe799cf70029
---
Entry stack: []
Stack pops: 0
Stack additions: [V485, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V486, V488, 0xcbe0205db2ee96f0ba3402bc3595346ff39ffe799cf70029, S7, S1, S2, S3, S4, S5, S6, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1dc
Exit block: 0x1da
Body: 0x1da, 0x1dc, 0x1e3, 0x1e4, 0x330, 0x33b, 0x340, 0x34c, 0x3a4, 0x3b4, 0x3b5

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1ee
Exit block: 0x1fe
Body: 0x1ee, 0x1f5, 0x1f6, 0x1fe, 0x3b7

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x210
Exit block: 0x220
Body: 0x210, 0x217, 0x218, 0x220, 0x3bd

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x23c
Exit block: 0x220
Body: 0x220, 0x23c, 0x243, 0x244, 0x3cc

Function 4:
Public function signature: 0x70a08231
Entry block: 0x268
Exit block: 0x1fe
Body: 0x1fe, 0x268, 0x26f, 0x270, 0x3db

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x296
Exit block: 0x1fe
Body: 0x1fe, 0x296, 0x29d, 0x29e, 0x3ed

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2b8
Exit block: 0x1fe
Body: 0x1fe, 0x2b8, 0x2bf, 0x2c0, 0x3f3

Function 7:
Public function signature: 0x9b2cb5d8
Entry block: 0x2da
Exit block: 0x1fe
Body: 0x1fe, 0x2da, 0x2e1, 0x2e2, 0x3f9

Function 8:
Public function signature: 0xa035b1fe
Entry block: 0x2fc
Exit block: 0x1fe
Body: 0x1fe, 0x2fc, 0x303, 0x304, 0x3ff

Function 9:
Public function signature: 0xfd6b7ef8
Entry block: 0x31e
Exit block: 0x1da
Body: 0x1d7, 0x1da, 0x31e, 0x325, 0x326, 0x405, 0x413, 0x418, 0x425, 0x44c, 0x476, 0x4c3, 0x4df, 0x4e0, 0x4e1, 0x4ee, 0x501, 0x507, 0x536, 0x58d, 0x598, 0x599, 0x59a, 0x59b

Function 10:
Public fallback function
Entry block: 0xa1
Exit block: 0x1da
Body: 0xa1, 0xa5, 0xb9, 0xbe, 0xcc, 0xd1, 0x112, 0x113, 0x17a, 0x17b, 0x188, 0x189, 0x1d7, 0x1da

