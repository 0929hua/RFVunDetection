Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6f9]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x27ebcf0e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6f9
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x27ebcf0e
0x20: V14 = EQ V12 0x27ebcf0e
0x21: V15 = 0x6f9
0x24: JUMPI 0x6f9 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x728]
---
0x25 DUP1
0x26 PUSH4 0x30c74e04
0x2b EQ
0x2c PUSH2 0x728
0x2f JUMPI
---
0x26: V16 = 0x30c74e04
0x2b: V17 = EQ 0x30c74e04 V12
0x2c: V18 = 0x728
0x2f: JUMPI 0x728 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x74f]
---
0x30 DUP1
0x31 PUSH4 0x519ee19e
0x36 EQ
0x37 PUSH2 0x74f
0x3a JUMPI
---
0x31: V19 = 0x519ee19e
0x36: V20 = EQ 0x519ee19e V12
0x37: V21 = 0x74f
0x3a: JUMPI 0x74f V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x774]
---
0x3b DUP1
0x3c PUSH4 0x78e97925
0x41 EQ
0x42 PUSH2 0x774
0x45 JUMPI
---
0x3c: V22 = 0x78e97925
0x41: V23 = EQ 0x78e97925 V12
0x42: V24 = 0x774
0x45: JUMPI 0x774 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x799]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x799
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x799
0x50: JUMPI 0x799 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x7c8]
---
0x51 DUP1
0x52 PUSH4 0x96c5406d
0x57 EQ
0x58 PUSH2 0x7c8
0x5b JUMPI
---
0x52: V28 = 0x96c5406d
0x57: V29 = EQ 0x96c5406d V12
0x58: V30 = 0x7c8
0x5b: JUMPI 0x7c8 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x7ed]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x7ed
0x66 JUMPI
---
0x5d: V31 = 0xa035b1fe
0x62: V32 = EQ 0xa035b1fe V12
0x63: V33 = 0x7ed
0x66: JUMPI 0x7ed V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x812]
---
0x67 DUP1
0x68 PUSH4 0xc8e569a8
0x6d EQ
0x6e PUSH2 0x812
0x71 JUMPI
---
0x68: V34 = 0xc8e569a8
0x6d: V35 = EQ 0xc8e569a8 V12
0x6e: V36 = 0x812
0x71: JUMPI 0x812 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x837]
---
0x72 DUP1
0x73 PUSH4 0xccb07cef
0x78 EQ
0x79 PUSH2 0x837
0x7c JUMPI
---
0x73: V37 = 0xccb07cef
0x78: V38 = EQ 0xccb07cef V12
0x79: V39 = 0x837
0x7c: JUMPI 0x837 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x85e]
---
0x7d DUP1
0x7e PUSH4 0xf9081ba2
0x83 EQ
0x84 PUSH2 0x85e
0x87 JUMPI
---
0x7e: V40 = 0xf9081ba2
0x83: V41 = EQ 0xf9081ba2 V12
0x84: V42 = 0x85e
0x87: JUMPI 0x85e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x0, 0x7d]
Successors: [0x89]
---
0x88 JUMPDEST
---
0x88: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x98]
---
Predecessors: [0x88]
Successors: [0x99, 0xa8]
---
0x89 JUMPDEST
0x8a PUSH1 0x0
0x8c DUP1
0x8d PUSH1 0x0
0x8f PUSH1 0x5
0x91 SLOAD
0x92 TIMESTAMP
0x93 GT
0x94 ISZERO
0x95 PUSH2 0xa8
0x98 JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = 0x0
0x8d: V44 = 0x0
0x8f: V45 = 0x5
0x91: V46 = S[0x5]
0x92: V47 = TIMESTAMP
0x93: V48 = GT V47 V46
0x94: V49 = ISZERO V48
0x95: V50 = 0xa8
0x98: JUMPI 0xa8 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x99
[0x99:0xa7]
---
Predecessors: [0x89]
Successors: [0xbe]
---
0x99 PUSH7 0x254db1c2244000
0xa1 PUSH1 0x7
0xa3 SSTORE
0xa4 PUSH2 0xbe
0xa7 JUMP
---
0x99: V51 = 0x254db1c2244000
0xa1: V52 = 0x7
0xa3: S[0x7] = 0x254db1c2244000
0xa4: V53 = 0xbe
0xa7: JUMP 0xbe
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xa8
[0xa8:0xb2]
---
Predecessors: [0x89]
Successors: [0xb3, 0xbe]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x6
0xab SLOAD
0xac TIMESTAMP
0xad GT
0xae ISZERO
0xaf PUSH2 0xbe
0xb2 JUMPI
---
0xa8: JUMPDEST 
0xa9: V54 = 0x6
0xab: V55 = S[0x6]
0xac: V56 = TIMESTAMP
0xad: V57 = GT V56 V55
0xae: V58 = ISZERO V57
0xaf: V59 = 0xbe
0xb2: JUMPI 0xbe V58
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xb3
[0xb3:0xbd]
---
Predecessors: [0xa8]
Successors: [0xbe]
---
0xb3 PUSH7 0x18de76816d8000
0xbb PUSH1 0x7
0xbd SSTORE
---
0xb3: V60 = 0x18de76816d8000
0xbb: V61 = 0x7
0xbd: S[0x7] = 0x18de76816d8000
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xbe
[0xbe:0xbe]
---
Predecessors: [0x99, 0xa8, 0xb3]
Successors: [0xbf]
---
0xbe JUMPDEST
---
0xbe: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xbf
[0xbf:0x115]
---
Predecessors: [0xbe]
Successors: [0x116, 0x11a]
---
0xbf JUMPDEST
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 SLOAD
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc AND
0xcd SWAP1
0xce PUSH4 0x70a08231
0xd3 SWAP1
0xd4 ADDRESS
0xd5 SWAP1
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 PUSH1 0x20
0xdb ADD
0xdc MSTORE
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 PUSH1 0xe0
0xe2 PUSH1 0x2
0xe4 EXP
0xe5 PUSH4 0xffffffff
0xea DUP5
0xeb AND
0xec MUL
0xed DUP2
0xee MSTORE
0xef PUSH1 0x1
0xf1 PUSH1 0xa0
0xf3 PUSH1 0x2
0xf5 EXP
0xf6 SUB
0xf7 SWAP1
0xf8 SWAP2
0xf9 AND
0xfa PUSH1 0x4
0xfc DUP3
0xfd ADD
0xfe MSTORE
0xff PUSH1 0x24
0x101 ADD
0x102 PUSH1 0x20
0x104 PUSH1 0x40
0x106 MLOAD
0x107 DUP1
0x108 DUP4
0x109 SUB
0x10a DUP2
0x10b PUSH1 0x0
0x10d DUP8
0x10e DUP1
0x10f EXTCODESIZE
0x110 ISZERO
0x111 ISZERO
0x112 PUSH2 0x11a
0x115 JUMPI
---
0xbf: JUMPDEST 
0xc0: V62 = 0x0
0xc3: V63 = S[0x0]
0xc4: V64 = 0x1
0xc6: V65 = 0xa0
0xc8: V66 = 0x2
0xca: V67 = EXP 0x2 0xa0
0xcb: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xce: V70 = 0x70a08231
0xd4: V71 = ADDRESS
0xd6: V72 = 0x40
0xd8: V73 = M[0x40]
0xd9: V74 = 0x20
0xdb: V75 = ADD 0x20 V73
0xdc: M[V75] = 0x0
0xdd: V76 = 0x40
0xdf: V77 = M[0x40]
0xe0: V78 = 0xe0
0xe2: V79 = 0x2
0xe4: V80 = EXP 0x2 0xe0
0xe5: V81 = 0xffffffff
0xeb: V82 = AND 0x70a08231 0xffffffff
0xec: V83 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xee: M[V77] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xef: V84 = 0x1
0xf1: V85 = 0xa0
0xf3: V86 = 0x2
0xf5: V87 = EXP 0x2 0xa0
0xf6: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V89 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V90 = 0x4
0xfd: V91 = ADD V77 0x4
0xfe: M[V91] = V89
0xff: V92 = 0x24
0x101: V93 = ADD 0x24 V77
0x102: V94 = 0x20
0x104: V95 = 0x40
0x106: V96 = M[0x40]
0x109: V97 = SUB V93 V96
0x10b: V98 = 0x0
0x10f: V99 = EXTCODESIZE V69
0x110: V100 = ISZERO V99
0x111: V101 = ISZERO V100
0x112: V102 = 0x11a
0x115: JUMPI 0x11a V101
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]
Exit stack: [V12, 0x0, 0x0, 0x0, V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]

================================

Block 0x116
[0x116:0x119]
---
Predecessors: [0xbf]
Successors: []
---
0x116 PUSH1 0x0
0x118 DUP1
0x119 REVERT
---
0x116: V103 = 0x0
0x119: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]

================================

Block 0x11a
[0x11a:0x126]
---
Predecessors: [0xbf]
Successors: [0x127, 0x12b]
---
0x11a JUMPDEST
0x11b PUSH2 0x2c6
0x11e GAS
0x11f SUB
0x120 CALL
0x121 ISZERO
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x11a: JUMPDEST 
0x11b: V104 = 0x2c6
0x11e: V105 = GAS
0x11f: V106 = SUB V105 0x2c6
0x120: V107 = CALL V106 V69 0x0 V96 V97 V96 0x20
0x121: V108 = ISZERO V107
0x122: V109 = ISZERO V108
0x123: V110 = 0x12b
0x126: JUMPI 0x12b V109
---
Entry stack: [V12, 0x0, 0x0, 0x0, V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V69, 0x70a08231, V93]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x11a]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V111 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V69, 0x70a08231, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V69, 0x70a08231, V93]

================================

Block 0x12b
[0x12b:0x141]
---
Predecessors: [0x11a]
Successors: [0x142, 0x178]
---
0x12b JUMPDEST
0x12c POP
0x12d POP
0x12e POP
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 MLOAD
0x134 PUSH1 0xa
0x136 SSTORE
0x137 POP
0x138 PUSH1 0x3
0x13a SLOAD
0x13b TIMESTAMP
0x13c LT
0x13d ISZERO
0x13e PUSH2 0x178
0x141 JUMPI
---
0x12b: JUMPDEST 
0x12f: V112 = 0x40
0x131: V113 = M[0x40]
0x133: V114 = M[V113]
0x134: V115 = 0xa
0x136: S[0xa] = V114
0x138: V116 = 0x3
0x13a: V117 = S[0x3]
0x13b: V118 = TIMESTAMP
0x13c: V119 = LT V118 V117
0x13d: V120 = ISZERO V119
0x13e: V121 = 0x178
0x141: JUMPI 0x178 V120
---
Entry stack: [V12, 0x0, 0x0, 0x0, V69, 0x70a08231, V93]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x142
[0x142:0x16e]
---
Predecessors: [0x12b]
Successors: [0x16f, 0x173]
---
0x142 PUSH1 0x1
0x144 PUSH1 0xa0
0x146 PUSH1 0x2
0x148 EXP
0x149 SUB
0x14a CALLER
0x14b AND
0x14c CALLVALUE
0x14d DUP1
0x14e ISZERO
0x14f PUSH2 0x8fc
0x152 MUL
0x153 SWAP1
0x154 PUSH1 0x40
0x156 MLOAD
0x157 PUSH1 0x0
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d DUP4
0x15e SUB
0x15f DUP2
0x160 DUP6
0x161 DUP9
0x162 DUP9
0x163 CALL
0x164 SWAP4
0x165 POP
0x166 POP
0x167 POP
0x168 POP
0x169 ISZERO
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x142: V122 = 0x1
0x144: V123 = 0xa0
0x146: V124 = 0x2
0x148: V125 = EXP 0x2 0xa0
0x149: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a: V127 = CALLER
0x14b: V128 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V129 = CALLVALUE
0x14e: V130 = ISZERO V129
0x14f: V131 = 0x8fc
0x152: V132 = MUL 0x8fc V130
0x154: V133 = 0x40
0x156: V134 = M[0x40]
0x157: V135 = 0x0
0x159: V136 = 0x40
0x15b: V137 = M[0x40]
0x15e: V138 = SUB V134 V137
0x163: V139 = CALL V132 V128 V129 V137 V138 V137 0x0
0x169: V140 = ISZERO V139
0x16a: V141 = ISZERO V140
0x16b: V142 = 0x173
0x16e: JUMPI 0x173 V141
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x142]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V143 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x173
[0x173:0x177]
---
Predecessors: [0x142, 0x1b4, 0x345, 0x4ce]
Successors: [0x680]
---
0x173 JUMPDEST
0x174 PUSH2 0x680
0x177 JUMP
---
0x173: JUMPDEST 
0x174: V144 = 0x680
0x177: JUMP 0x680
---
Entry stack: [V12, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, 0x0]

================================

Block 0x178
[0x178:0x182]
---
Predecessors: [0x12b]
Successors: [0x183, 0x339]
---
0x178 JUMPDEST
0x179 PUSH1 0x4
0x17b SLOAD
0x17c TIMESTAMP
0x17d GT
0x17e ISZERO
0x17f PUSH2 0x339
0x182 JUMPI
---
0x178: JUMPDEST 
0x179: V145 = 0x4
0x17b: V146 = S[0x4]
0x17c: V147 = TIMESTAMP
0x17d: V148 = GT V147 V146
0x17e: V149 = ISZERO V148
0x17f: V150 = 0x339
0x182: JUMPI 0x339 V149
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x183
[0x183:0x1af]
---
Predecessors: [0x178]
Successors: [0x1b0, 0x1b4]
---
0x183 PUSH1 0x1
0x185 PUSH1 0xa0
0x187 PUSH1 0x2
0x189 EXP
0x18a SUB
0x18b CALLER
0x18c AND
0x18d CALLVALUE
0x18e DUP1
0x18f ISZERO
0x190 PUSH2 0x8fc
0x193 MUL
0x194 SWAP1
0x195 PUSH1 0x40
0x197 MLOAD
0x198 PUSH1 0x0
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e DUP4
0x19f SUB
0x1a0 DUP2
0x1a1 DUP6
0x1a2 DUP9
0x1a3 DUP9
0x1a4 CALL
0x1a5 SWAP4
0x1a6 POP
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa ISZERO
0x1ab ISZERO
0x1ac PUSH2 0x1b4
0x1af JUMPI
---
0x183: V151 = 0x1
0x185: V152 = 0xa0
0x187: V153 = 0x2
0x189: V154 = EXP 0x2 0xa0
0x18a: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18b: V156 = CALLER
0x18c: V157 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V158 = CALLVALUE
0x18f: V159 = ISZERO V158
0x190: V160 = 0x8fc
0x193: V161 = MUL 0x8fc V159
0x195: V162 = 0x40
0x197: V163 = M[0x40]
0x198: V164 = 0x0
0x19a: V165 = 0x40
0x19c: V166 = M[0x40]
0x19f: V167 = SUB V163 V166
0x1a4: V168 = CALL V161 V157 V158 V166 V167 V166 0x0
0x1aa: V169 = ISZERO V168
0x1ab: V170 = ISZERO V169
0x1ac: V171 = 0x1b4
0x1af: JUMPI 0x1b4 V170
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1b0
[0x1b0:0x1b3]
---
Predecessors: [0x183]
Successors: []
---
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 REVERT
---
0x1b0: V172 = 0x0
0x1b3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1b4
[0x1b4:0x1c5]
---
Predecessors: [0x183]
Successors: [0x173, 0x1c6]
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0xb
0x1b7 SLOAD
0x1b8 PUSH2 0x100
0x1bb SWAP1
0x1bc DIV
0x1bd PUSH1 0xff
0x1bf AND
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 PUSH2 0x173
0x1c5 JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V173 = 0xb
0x1b7: V174 = S[0xb]
0x1b8: V175 = 0x100
0x1bc: V176 = DIV V174 0x100
0x1bd: V177 = 0xff
0x1bf: V178 = AND 0xff V176
0x1c0: V179 = ISZERO V178
0x1c1: V180 = ISZERO V179
0x1c2: V181 = 0x173
0x1c5: JUMPI 0x173 V180
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1c6
[0x1c6:0x22c]
---
Predecessors: [0x1b4]
Successors: [0x22d, 0x231]
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 SLOAD
0x1ca PUSH1 0x2
0x1cc SLOAD
0x1cd PUSH1 0x1
0x1cf PUSH1 0xa0
0x1d1 PUSH1 0x2
0x1d3 EXP
0x1d4 SUB
0x1d5 SWAP2
0x1d6 DUP3
0x1d7 AND
0x1d8 SWAP3
0x1d9 PUSH4 0xa9059cbb
0x1de SWAP3
0x1df SWAP1
0x1e0 SWAP2
0x1e1 AND
0x1e2 SWAP1
0x1e3 DUP4
0x1e4 SWAP1
0x1e5 PUSH4 0x70a08231
0x1ea SWAP1
0x1eb ADDRESS
0x1ec SWAP1
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 MSTORE
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 PUSH1 0xe0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc PUSH4 0xffffffff
0x201 DUP5
0x202 AND
0x203 MUL
0x204 DUP2
0x205 MSTORE
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e SWAP1
0x20f SWAP2
0x210 AND
0x211 PUSH1 0x4
0x213 DUP3
0x214 ADD
0x215 MSTORE
0x216 PUSH1 0x24
0x218 ADD
0x219 PUSH1 0x20
0x21b PUSH1 0x40
0x21d MLOAD
0x21e DUP1
0x21f DUP4
0x220 SUB
0x221 DUP2
0x222 PUSH1 0x0
0x224 DUP8
0x225 DUP1
0x226 EXTCODESIZE
0x227 ISZERO
0x228 ISZERO
0x229 PUSH2 0x231
0x22c JUMPI
---
0x1c6: V182 = 0x0
0x1c9: V183 = S[0x0]
0x1ca: V184 = 0x2
0x1cc: V185 = S[0x2]
0x1cd: V186 = 0x1
0x1cf: V187 = 0xa0
0x1d1: V188 = 0x2
0x1d3: V189 = EXP 0x2 0xa0
0x1d4: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d7: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x1d9: V192 = 0xa9059cbb
0x1e1: V193 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V194 = 0x70a08231
0x1eb: V195 = ADDRESS
0x1ed: V196 = 0x40
0x1ef: V197 = M[0x40]
0x1f0: V198 = 0x20
0x1f2: V199 = ADD 0x20 V197
0x1f3: M[V199] = 0x0
0x1f4: V200 = 0x40
0x1f6: V201 = M[0x40]
0x1f7: V202 = 0xe0
0x1f9: V203 = 0x2
0x1fb: V204 = EXP 0x2 0xe0
0x1fc: V205 = 0xffffffff
0x202: V206 = AND 0x70a08231 0xffffffff
0x203: V207 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x205: M[V201] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x206: V208 = 0x1
0x208: V209 = 0xa0
0x20a: V210 = 0x2
0x20c: V211 = EXP 0x2 0xa0
0x20d: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V213 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x211: V214 = 0x4
0x214: V215 = ADD V201 0x4
0x215: M[V215] = V213
0x216: V216 = 0x24
0x218: V217 = ADD 0x24 V201
0x219: V218 = 0x20
0x21b: V219 = 0x40
0x21d: V220 = M[0x40]
0x220: V221 = SUB V217 V220
0x222: V222 = 0x0
0x226: V223 = EXTCODESIZE V191
0x227: V224 = ISZERO V223
0x228: V225 = ISZERO V224
0x229: V226 = 0x231
0x22c: JUMPI 0x231 V225
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V191, 0xa9059cbb, V193, V191, 0x70a08231, V217, 0x20, V220, V221, V220, 0x0, V191]
Exit stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V193, V191, 0x70a08231, V217, 0x20, V220, V221, V220, 0x0, V191]

================================

Block 0x22d
[0x22d:0x230]
---
Predecessors: [0x1c6]
Successors: []
---
0x22d PUSH1 0x0
0x22f DUP1
0x230 REVERT
---
0x22d: V227 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V193, V191, 0x70a08231, V217, 0x20, V220, V221, V220, 0x0, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V193, V191, 0x70a08231, V217, 0x20, V220, V221, V220, 0x0, V191]

================================

Block 0x231
[0x231:0x23d]
---
Predecessors: [0x1c6]
Successors: [0x23e, 0x242]
---
0x231 JUMPDEST
0x232 PUSH2 0x2c6
0x235 GAS
0x236 SUB
0x237 CALL
0x238 ISZERO
0x239 ISZERO
0x23a PUSH2 0x242
0x23d JUMPI
---
0x231: JUMPDEST 
0x232: V228 = 0x2c6
0x235: V229 = GAS
0x236: V230 = SUB V229 0x2c6
0x237: V231 = CALL V230 V191 0x0 V220 V221 V220 0x20
0x238: V232 = ISZERO V231
0x239: V233 = ISZERO V232
0x23a: V234 = 0x242
0x23d: JUMPI 0x242 V233
---
Entry stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V193, V191, 0x70a08231, V217, 0x20, V220, V221, V220, 0x0, V191]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V193, V191, 0x70a08231, V217]

================================

Block 0x23e
[0x23e:0x241]
---
Predecessors: [0x231]
Successors: []
---
0x23e PUSH1 0x0
0x240 DUP1
0x241 REVERT
---
0x23e: V235 = 0x0
0x241: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V193, V191, 0x70a08231, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V193, V191, 0x70a08231, V217]

================================

Block 0x242
[0x242:0x28a]
---
Predecessors: [0x231]
Successors: [0x28b, 0x28f]
---
0x242 JUMPDEST
0x243 POP
0x244 POP
0x245 POP
0x246 PUSH1 0x40
0x248 MLOAD
0x249 DUP1
0x24a MLOAD
0x24b SWAP1
0x24c POP
0x24d PUSH1 0x40
0x24f MLOAD
0x250 PUSH1 0xe0
0x252 PUSH1 0x2
0x254 EXP
0x255 PUSH4 0xffffffff
0x25a DUP6
0x25b AND
0x25c MUL
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x1
0x261 PUSH1 0xa0
0x263 PUSH1 0x2
0x265 EXP
0x266 SUB
0x267 SWAP1
0x268 SWAP3
0x269 AND
0x26a PUSH1 0x4
0x26c DUP4
0x26d ADD
0x26e MSTORE
0x26f PUSH1 0x24
0x271 DUP3
0x272 ADD
0x273 MSTORE
0x274 PUSH1 0x44
0x276 ADD
0x277 PUSH1 0x0
0x279 PUSH1 0x40
0x27b MLOAD
0x27c DUP1
0x27d DUP4
0x27e SUB
0x27f DUP2
0x280 PUSH1 0x0
0x282 DUP8
0x283 DUP1
0x284 EXTCODESIZE
0x285 ISZERO
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x242: JUMPDEST 
0x246: V236 = 0x40
0x248: V237 = M[0x40]
0x24a: V238 = M[V237]
0x24d: V239 = 0x40
0x24f: V240 = M[0x40]
0x250: V241 = 0xe0
0x252: V242 = 0x2
0x254: V243 = EXP 0x2 0xe0
0x255: V244 = 0xffffffff
0x25b: V245 = AND 0xa9059cbb 0xffffffff
0x25c: V246 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x25e: M[V240] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x25f: V247 = 0x1
0x261: V248 = 0xa0
0x263: V249 = 0x2
0x265: V250 = EXP 0x2 0xa0
0x266: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x269: V252 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V253 = 0x4
0x26d: V254 = ADD V240 0x4
0x26e: M[V254] = V252
0x26f: V255 = 0x24
0x272: V256 = ADD V240 0x24
0x273: M[V256] = V238
0x274: V257 = 0x44
0x276: V258 = ADD 0x44 V240
0x277: V259 = 0x0
0x279: V260 = 0x40
0x27b: V261 = M[0x40]
0x27e: V262 = SUB V258 V261
0x280: V263 = 0x0
0x284: V264 = EXTCODESIZE V191
0x285: V265 = ISZERO V264
0x286: V266 = ISZERO V265
0x287: V267 = 0x28f
0x28a: JUMPI 0x28f V266
---
Entry stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V193, V191, 0x70a08231, V217]
Stack pops: 6
Stack additions: [S5, S4, V258, 0x0, V261, V262, V261, 0x0, S5]
Exit stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V258, 0x0, V261, V262, V261, 0x0, V191]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x242]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V268 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V258, 0x0, V261, V262, V261, 0x0, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V258, 0x0, V261, V262, V261, 0x0, V191]

================================

Block 0x28f
[0x28f:0x29b]
---
Predecessors: [0x242]
Successors: [0x29c, 0x2a0]
---
0x28f JUMPDEST
0x290 PUSH2 0x2c6
0x293 GAS
0x294 SUB
0x295 CALL
0x296 ISZERO
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x28f: JUMPDEST 
0x290: V269 = 0x2c6
0x293: V270 = GAS
0x294: V271 = SUB V270 0x2c6
0x295: V272 = CALL V271 V191 0x0 V261 V262 V261 0x0
0x296: V273 = ISZERO V272
0x297: V274 = ISZERO V273
0x298: V275 = 0x2a0
0x29b: JUMPI 0x2a0 V274
---
Entry stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V258, 0x0, V261, V262, V261, 0x0, V191]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V258]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x28f]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V276 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V258]

================================

Block 0x2a0
[0x2a0:0x2f9]
---
Predecessors: [0x28f]
Successors: [0x2fa, 0x2fe]
---
0x2a0 JUMPDEST
0x2a1 POP
0x2a2 POP
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 SLOAD
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af AND
0x2b0 SWAP2
0x2b1 POP
0x2b2 PUSH4 0x70a08231
0x2b7 SWAP1
0x2b8 ADDRESS
0x2b9 SWAP1
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd PUSH1 0x20
0x2bf ADD
0x2c0 MSTORE
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 PUSH1 0xe0
0x2c6 PUSH1 0x2
0x2c8 EXP
0x2c9 PUSH4 0xffffffff
0x2ce DUP5
0x2cf AND
0x2d0 MUL
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0xa0
0x2d7 PUSH1 0x2
0x2d9 EXP
0x2da SUB
0x2db SWAP1
0x2dc SWAP2
0x2dd AND
0x2de PUSH1 0x4
0x2e0 DUP3
0x2e1 ADD
0x2e2 MSTORE
0x2e3 PUSH1 0x24
0x2e5 ADD
0x2e6 PUSH1 0x20
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP4
0x2ed SUB
0x2ee DUP2
0x2ef PUSH1 0x0
0x2f1 DUP8
0x2f2 DUP1
0x2f3 EXTCODESIZE
0x2f4 ISZERO
0x2f5 ISZERO
0x2f6 PUSH2 0x2fe
0x2f9 JUMPI
---
0x2a0: JUMPDEST 
0x2a3: V277 = 0x0
0x2a6: V278 = S[0x0]
0x2a7: V279 = 0x1
0x2a9: V280 = 0xa0
0x2ab: V281 = 0x2
0x2ad: V282 = EXP 0x2 0xa0
0x2ae: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x2b2: V285 = 0x70a08231
0x2b8: V286 = ADDRESS
0x2ba: V287 = 0x40
0x2bc: V288 = M[0x40]
0x2bd: V289 = 0x20
0x2bf: V290 = ADD 0x20 V288
0x2c0: M[V290] = 0x0
0x2c1: V291 = 0x40
0x2c3: V292 = M[0x40]
0x2c4: V293 = 0xe0
0x2c6: V294 = 0x2
0x2c8: V295 = EXP 0x2 0xe0
0x2c9: V296 = 0xffffffff
0x2cf: V297 = AND 0x70a08231 0xffffffff
0x2d0: V298 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2d2: M[V292] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2d3: V299 = 0x1
0x2d5: V300 = 0xa0
0x2d7: V301 = 0x2
0x2d9: V302 = EXP 0x2 0xa0
0x2da: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dd: V304 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V305 = 0x4
0x2e1: V306 = ADD V292 0x4
0x2e2: M[V306] = V304
0x2e3: V307 = 0x24
0x2e5: V308 = ADD 0x24 V292
0x2e6: V309 = 0x20
0x2e8: V310 = 0x40
0x2ea: V311 = M[0x40]
0x2ed: V312 = SUB V308 V311
0x2ef: V313 = 0x0
0x2f3: V314 = EXTCODESIZE V284
0x2f4: V315 = ISZERO V314
0x2f5: V316 = ISZERO V315
0x2f6: V317 = 0x2fe
0x2f9: JUMPI 0x2fe V316
---
Entry stack: [V12, 0x0, 0x0, 0x0, V191, 0xa9059cbb, V258]
Stack pops: 3
Stack additions: [V284, 0x70a08231, V308, 0x20, V311, V312, V311, 0x0, V284]
Exit stack: [V12, 0x0, 0x0, 0x0, V284, 0x70a08231, V308, 0x20, V311, V312, V311, 0x0, V284]

================================

Block 0x2fa
[0x2fa:0x2fd]
---
Predecessors: [0x2a0]
Successors: []
---
0x2fa PUSH1 0x0
0x2fc DUP1
0x2fd REVERT
---
0x2fa: V318 = 0x0
0x2fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V284, 0x70a08231, V308, 0x20, V311, V312, V311, 0x0, V284]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V284, 0x70a08231, V308, 0x20, V311, V312, V311, 0x0, V284]

================================

Block 0x2fe
[0x2fe:0x30a]
---
Predecessors: [0x2a0]
Successors: [0x30b, 0x30f]
---
0x2fe JUMPDEST
0x2ff PUSH2 0x2c6
0x302 GAS
0x303 SUB
0x304 CALL
0x305 ISZERO
0x306 ISZERO
0x307 PUSH2 0x30f
0x30a JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V319 = 0x2c6
0x302: V320 = GAS
0x303: V321 = SUB V320 0x2c6
0x304: V322 = CALL V321 V284 0x0 V311 V312 V311 0x20
0x305: V323 = ISZERO V322
0x306: V324 = ISZERO V323
0x307: V325 = 0x30f
0x30a: JUMPI 0x30f V324
---
Entry stack: [V12, 0x0, 0x0, 0x0, V284, 0x70a08231, V308, 0x20, V311, V312, V311, 0x0, V284]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V284, 0x70a08231, V308]

================================

Block 0x30b
[0x30b:0x30e]
---
Predecessors: [0x2fe]
Successors: []
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
---
0x30b: V326 = 0x0
0x30e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V284, 0x70a08231, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V284, 0x70a08231, V308]

================================

Block 0x30f
[0x30f:0x333]
---
Predecessors: [0x2fe]
Successors: [0x334]
---
0x30f JUMPDEST
0x310 POP
0x311 POP
0x312 POP
0x313 PUSH1 0x40
0x315 MLOAD
0x316 DUP1
0x317 MLOAD
0x318 PUSH1 0xa
0x31a SSTORE
0x31b POP
0x31c PUSH1 0xb
0x31e DUP1
0x31f SLOAD
0x320 PUSH1 0xff
0x322 NOT
0x323 PUSH2 0xff00
0x326 NOT
0x327 SWAP1
0x328 SWAP2
0x329 AND
0x32a PUSH2 0x100
0x32d OR
0x32e AND
0x32f PUSH1 0x1
0x331 OR
0x332 SWAP1
0x333 SSTORE
---
0x30f: JUMPDEST 
0x313: V327 = 0x40
0x315: V328 = M[0x40]
0x317: V329 = M[V328]
0x318: V330 = 0xa
0x31a: S[0xa] = V329
0x31c: V331 = 0xb
0x31f: V332 = S[0xb]
0x320: V333 = 0xff
0x322: V334 = NOT 0xff
0x323: V335 = 0xff00
0x326: V336 = NOT 0xff00
0x329: V337 = AND V332 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x32a: V338 = 0x100
0x32d: V339 = OR 0x100 V337
0x32e: V340 = AND V339 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x32f: V341 = 0x1
0x331: V342 = OR 0x1 V340
0x333: S[0xb] = V342
---
Entry stack: [V12, 0x0, 0x0, 0x0, V284, 0x70a08231, V308]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x334
[0x334:0x338]
---
Predecessors: [0x30f]
Successors: [0x680]
---
0x334 JUMPDEST
0x335 PUSH2 0x680
0x338 JUMP
---
0x334: JUMPDEST 
0x335: V343 = 0x680
0x338: JUMP 0x680
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x339
[0x339:0x344]
---
Predecessors: [0x178]
Successors: [0x345, 0x37b]
---
0x339 JUMPDEST
0x33a PUSH1 0xb
0x33c SLOAD
0x33d PUSH1 0xff
0x33f AND
0x340 ISZERO
0x341 PUSH2 0x37b
0x344 JUMPI
---
0x339: JUMPDEST 
0x33a: V344 = 0xb
0x33c: V345 = S[0xb]
0x33d: V346 = 0xff
0x33f: V347 = AND 0xff V345
0x340: V348 = ISZERO V347
0x341: V349 = 0x37b
0x344: JUMPI 0x37b V348
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x345
[0x345:0x371]
---
Predecessors: [0x339]
Successors: [0x173, 0x372]
---
0x345 PUSH1 0x1
0x347 PUSH1 0xa0
0x349 PUSH1 0x2
0x34b EXP
0x34c SUB
0x34d CALLER
0x34e AND
0x34f CALLVALUE
0x350 DUP1
0x351 ISZERO
0x352 PUSH2 0x8fc
0x355 MUL
0x356 SWAP1
0x357 PUSH1 0x40
0x359 MLOAD
0x35a PUSH1 0x0
0x35c PUSH1 0x40
0x35e MLOAD
0x35f DUP1
0x360 DUP4
0x361 SUB
0x362 DUP2
0x363 DUP6
0x364 DUP9
0x365 DUP9
0x366 CALL
0x367 SWAP4
0x368 POP
0x369 POP
0x36a POP
0x36b POP
0x36c ISZERO
0x36d ISZERO
0x36e PUSH2 0x173
0x371 JUMPI
---
0x345: V350 = 0x1
0x347: V351 = 0xa0
0x349: V352 = 0x2
0x34b: V353 = EXP 0x2 0xa0
0x34c: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34d: V355 = CALLER
0x34e: V356 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V357 = CALLVALUE
0x351: V358 = ISZERO V357
0x352: V359 = 0x8fc
0x355: V360 = MUL 0x8fc V358
0x357: V361 = 0x40
0x359: V362 = M[0x40]
0x35a: V363 = 0x0
0x35c: V364 = 0x40
0x35e: V365 = M[0x40]
0x361: V366 = SUB V362 V365
0x366: V367 = CALL V360 V356 V357 V365 V366 V365 0x0
0x36c: V368 = ISZERO V367
0x36d: V369 = ISZERO V368
0x36e: V370 = 0x173
0x371: JUMPI 0x173 V369
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x372
[0x372:0x375]
---
Predecessors: [0x345]
Successors: []
---
0x372 PUSH1 0x0
0x374 DUP1
0x375 REVERT
---
0x372: V371 = 0x0
0x375: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x376
[0x376:0x37a]
---
Predecessors: []
Successors: [0x680]
---
0x376 JUMPDEST
0x377 PUSH2 0x680
0x37a JUMP
---
0x376: JUMPDEST 
0x377: V372 = 0x680
0x37a: JUMP 0x680
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x37b
[0x37b:0x389]
---
Predecessors: [0x339]
Successors: [0x38a, 0x38b]
---
0x37b JUMPDEST
0x37c PUSH1 0x8
0x37e SLOAD
0x37f PUSH1 0x7
0x381 SLOAD
0x382 CALLVALUE
0x383 DUP2
0x384 ISZERO
0x385 ISZERO
0x386 PUSH2 0x38b
0x389 JUMPI
---
0x37b: JUMPDEST 
0x37c: V373 = 0x8
0x37e: V374 = S[0x8]
0x37f: V375 = 0x7
0x381: V376 = S[0x7]
0x382: V377 = CALLVALUE
0x384: V378 = ISZERO V376
0x385: V379 = ISZERO V378
0x386: V380 = 0x38b
0x389: JUMPI 0x38b V379
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V374, V376, V377]
Exit stack: [V12, 0x0, 0x0, 0x0, V374, V376, V377]

================================

Block 0x38a
[0x38a:0x38a]
---
Predecessors: [0x37b]
Successors: []
---
0x38a INVALID
---
0x38a: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V374, V376, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V374, V376, V377]

================================

Block 0x38b
[0x38b:0x397]
---
Predecessors: [0x37b]
Successors: [0x398, 0x3c9]
---
0x38b JUMPDEST
0x38c DIV
0x38d MUL
0x38e SWAP3
0x38f POP
0x390 PUSH1 0x0
0x392 DUP4
0x393 GT
0x394 PUSH2 0x3c9
0x397 JUMPI
---
0x38b: JUMPDEST 
0x38c: V381 = DIV V377 V376
0x38d: V382 = MUL V381 V374
0x390: V383 = 0x0
0x393: V384 = GT V382 0x0
0x394: V385 = 0x3c9
0x397: JUMPI 0x3c9 V384
---
Entry stack: [V12, 0x0, 0x0, 0x0, V374, V376, V377]
Stack pops: 6
Stack additions: [V382, S4, S3]
Exit stack: [V12, V382, 0x0, 0x0]

================================

Block 0x398
[0x398:0x3c4]
---
Predecessors: [0x38b]
Successors: [0x3c5, 0x3c9]
---
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 CALLER
0x3a1 AND
0x3a2 CALLVALUE
0x3a3 DUP1
0x3a4 ISZERO
0x3a5 PUSH2 0x8fc
0x3a8 MUL
0x3a9 SWAP1
0x3aa PUSH1 0x40
0x3ac MLOAD
0x3ad PUSH1 0x0
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 DUP1
0x3b3 DUP4
0x3b4 SUB
0x3b5 DUP2
0x3b6 DUP6
0x3b7 DUP9
0x3b8 DUP9
0x3b9 CALL
0x3ba SWAP4
0x3bb POP
0x3bc POP
0x3bd POP
0x3be POP
0x3bf ISZERO
0x3c0 ISZERO
0x3c1 PUSH2 0x3c9
0x3c4 JUMPI
---
0x398: V386 = 0x1
0x39a: V387 = 0xa0
0x39c: V388 = 0x2
0x39e: V389 = EXP 0x2 0xa0
0x39f: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a0: V391 = CALLER
0x3a1: V392 = AND V391 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V393 = CALLVALUE
0x3a4: V394 = ISZERO V393
0x3a5: V395 = 0x8fc
0x3a8: V396 = MUL 0x8fc V394
0x3aa: V397 = 0x40
0x3ac: V398 = M[0x40]
0x3ad: V399 = 0x0
0x3af: V400 = 0x40
0x3b1: V401 = M[0x40]
0x3b4: V402 = SUB V398 V401
0x3b9: V403 = CALL V396 V392 V393 V401 V402 V401 0x0
0x3bf: V404 = ISZERO V403
0x3c0: V405 = ISZERO V404
0x3c1: V406 = 0x3c9
0x3c4: JUMPI 0x3c9 V405
---
Entry stack: [V12, V382, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, 0x0, 0x0]

================================

Block 0x3c5
[0x3c5:0x3c8]
---
Predecessors: [0x398]
Successors: []
---
0x3c5 PUSH1 0x0
0x3c7 DUP1
0x3c8 REVERT
---
0x3c5: V407 = 0x0
0x3c8: REVERT 0x0 0x0
---
Entry stack: [V12, V382, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, 0x0, 0x0]

================================

Block 0x3c9
[0x3c9:0x3c9]
---
Predecessors: [0x38b, 0x398]
Successors: [0x3ca]
---
0x3c9 JUMPDEST
---
0x3c9: JUMPDEST 
---
Entry stack: [V12, V382, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, 0x0, 0x0]

================================

Block 0x3ca
[0x3ca:0x3d2]
---
Predecessors: [0x3c9]
Successors: [0x3d3, 0x3d7]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x0
0x3cd DUP4
0x3ce GT
0x3cf PUSH2 0x3d7
0x3d2 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V408 = 0x0
0x3ce: V409 = GT V382 0x0
0x3cf: V410 = 0x3d7
0x3d2: JUMPI 0x3d7 V409
---
Entry stack: [V12, V382, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, V382, 0x0, 0x0]

================================

Block 0x3d3
[0x3d3:0x3d6]
---
Predecessors: [0x3ca]
Successors: []
---
0x3d3 PUSH1 0x0
0x3d5 DUP1
0x3d6 REVERT
---
0x3d3: V411 = 0x0
0x3d6: REVERT 0x0 0x0
---
Entry stack: [V12, V382, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, 0x0, 0x0]

================================

Block 0x3d7
[0x3d7:0x3e6]
---
Predecessors: [0x3ca]
Successors: [0x3e7, 0x3e8]
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x8
0x3da SLOAD
0x3db PUSH1 0x7
0x3dd SLOAD
0x3de DUP5
0x3df MUL
0x3e0 DUP2
0x3e1 ISZERO
0x3e2 ISZERO
0x3e3 PUSH2 0x3e8
0x3e6 JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V412 = 0x8
0x3da: V413 = S[0x8]
0x3db: V414 = 0x7
0x3dd: V415 = S[0x7]
0x3df: V416 = MUL V382 V415
0x3e1: V417 = ISZERO V413
0x3e2: V418 = ISZERO V417
0x3e3: V419 = 0x3e8
0x3e6: JUMPI 0x3e8 V418
---
Entry stack: [V12, V382, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V413, V416]
Exit stack: [V12, V382, 0x0, 0x0, V413, V416]

================================

Block 0x3e7
[0x3e7:0x3e7]
---
Predecessors: [0x3d7]
Successors: []
---
0x3e7 INVALID
---
0x3e7: INVALID 
---
Entry stack: [V12, V382, 0x0, 0x0, V413, V416]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, 0x0, 0x0, V413, V416]

================================

Block 0x3e8
[0x3e8:0x3f6]
---
Predecessors: [0x3d7]
Successors: [0x3f7, 0x4fd]
---
0x3e8 JUMPDEST
0x3e9 DIV
0x3ea SWAP2
0x3eb POP
0x3ec DUP3
0x3ed PUSH1 0xa
0x3ef SLOAD
0x3f0 LT
0x3f1 ISZERO
0x3f2 ISZERO
0x3f3 PUSH2 0x4fd
0x3f6 JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V420 = DIV V416 V413
0x3ed: V421 = 0xa
0x3ef: V422 = S[0xa]
0x3f0: V423 = LT V422 V382
0x3f1: V424 = ISZERO V423
0x3f2: V425 = ISZERO V424
0x3f3: V426 = 0x4fd
0x3f6: JUMPI 0x4fd V425
---
Entry stack: [V12, V382, 0x0, 0x0, V413, V416]
Stack pops: 5
Stack additions: [S4, V420, S2]
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x3f7
[0x3f7:0x424]
---
Predecessors: [0x3e8]
Successors: [0x425, 0x429]
---
0x3f7 PUSH1 0x1
0x3f9 SLOAD
0x3fa PUSH1 0x1
0x3fc PUSH1 0xa0
0x3fe PUSH1 0x2
0x400 EXP
0x401 SUB
0x402 AND
0x403 DUP3
0x404 ISZERO
0x405 PUSH2 0x8fc
0x408 MUL
0x409 DUP4
0x40a PUSH1 0x40
0x40c MLOAD
0x40d PUSH1 0x0
0x40f PUSH1 0x40
0x411 MLOAD
0x412 DUP1
0x413 DUP4
0x414 SUB
0x415 DUP2
0x416 DUP6
0x417 DUP9
0x418 DUP9
0x419 CALL
0x41a SWAP4
0x41b POP
0x41c POP
0x41d POP
0x41e POP
0x41f ISZERO
0x420 ISZERO
0x421 PUSH2 0x429
0x424 JUMPI
---
0x3f7: V427 = 0x1
0x3f9: V428 = S[0x1]
0x3fa: V429 = 0x1
0x3fc: V430 = 0xa0
0x3fe: V431 = 0x2
0x400: V432 = EXP 0x2 0xa0
0x401: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x402: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x404: V435 = ISZERO V420
0x405: V436 = 0x8fc
0x408: V437 = MUL 0x8fc V435
0x40a: V438 = 0x40
0x40c: V439 = M[0x40]
0x40d: V440 = 0x0
0x40f: V441 = 0x40
0x411: V442 = M[0x40]
0x414: V443 = SUB V439 V442
0x419: V444 = CALL V437 V434 V420 V442 V443 V442 0x0
0x41f: V445 = ISZERO V444
0x420: V446 = ISZERO V445
0x421: V447 = 0x429
0x424: JUMPI 0x429 V446
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x425
[0x425:0x428]
---
Predecessors: [0x3f7]
Successors: []
---
0x425 PUSH1 0x0
0x427 DUP1
0x428 REVERT
---
0x425: V448 = 0x0
0x428: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x429
[0x429:0x431]
---
Predecessors: [0x3f7]
Successors: [0x432, 0x466]
---
0x429 JUMPDEST
0x42a DUP2
0x42b CALLVALUE
0x42c GT
0x42d ISZERO
0x42e PUSH2 0x466
0x431 JUMPI
---
0x429: JUMPDEST 
0x42b: V449 = CALLVALUE
0x42c: V450 = GT V449 V420
0x42d: V451 = ISZERO V450
0x42e: V452 = 0x466
0x431: JUMPI 0x466 V451
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x432
[0x432:0x461]
---
Predecessors: [0x429]
Successors: [0x462, 0x466]
---
0x432 CALLER
0x433 PUSH1 0x1
0x435 PUSH1 0xa0
0x437 PUSH1 0x2
0x439 EXP
0x43a SUB
0x43b AND
0x43c PUSH2 0x8fc
0x43f DUP4
0x440 CALLVALUE
0x441 SUB
0x442 SWAP1
0x443 DUP2
0x444 ISZERO
0x445 MUL
0x446 SWAP1
0x447 PUSH1 0x40
0x449 MLOAD
0x44a PUSH1 0x0
0x44c PUSH1 0x40
0x44e MLOAD
0x44f DUP1
0x450 DUP4
0x451 SUB
0x452 DUP2
0x453 DUP6
0x454 DUP9
0x455 DUP9
0x456 CALL
0x457 SWAP4
0x458 POP
0x459 POP
0x45a POP
0x45b POP
0x45c ISZERO
0x45d ISZERO
0x45e PUSH2 0x466
0x461 JUMPI
---
0x432: V453 = CALLER
0x433: V454 = 0x1
0x435: V455 = 0xa0
0x437: V456 = 0x2
0x439: V457 = EXP 0x2 0xa0
0x43a: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43b: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x43c: V460 = 0x8fc
0x440: V461 = CALLVALUE
0x441: V462 = SUB V461 V420
0x444: V463 = ISZERO V462
0x445: V464 = MUL V463 0x8fc
0x447: V465 = 0x40
0x449: V466 = M[0x40]
0x44a: V467 = 0x0
0x44c: V468 = 0x40
0x44e: V469 = M[0x40]
0x451: V470 = SUB V466 V469
0x456: V471 = CALL V464 V459 V462 V469 V470 V469 0x0
0x45c: V472 = ISZERO V471
0x45d: V473 = ISZERO V472
0x45e: V474 = 0x466
0x461: JUMPI 0x466 V473
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x462
[0x462:0x465]
---
Predecessors: [0x432]
Successors: []
---
0x462 PUSH1 0x0
0x464 DUP1
0x465 REVERT
---
0x462: V475 = 0x0
0x465: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x466
[0x466:0x466]
---
Predecessors: [0x429, 0x432]
Successors: [0x467]
---
0x466 JUMPDEST
---
0x466: JUMPDEST 
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x467
[0x467:0x4b8]
---
Predecessors: [0x466]
Successors: [0x4b9, 0x4bd]
---
0x467 JUMPDEST
0x468 PUSH1 0x0
0x46a SLOAD
0x46b PUSH1 0x1
0x46d PUSH1 0xa0
0x46f PUSH1 0x2
0x471 EXP
0x472 SUB
0x473 AND
0x474 PUSH4 0xa9059cbb
0x479 CALLER
0x47a DUP6
0x47b PUSH1 0x40
0x47d MLOAD
0x47e PUSH1 0xe0
0x480 PUSH1 0x2
0x482 EXP
0x483 PUSH4 0xffffffff
0x488 DUP6
0x489 AND
0x48a MUL
0x48b DUP2
0x48c MSTORE
0x48d PUSH1 0x1
0x48f PUSH1 0xa0
0x491 PUSH1 0x2
0x493 EXP
0x494 SUB
0x495 SWAP1
0x496 SWAP3
0x497 AND
0x498 PUSH1 0x4
0x49a DUP4
0x49b ADD
0x49c MSTORE
0x49d PUSH1 0x24
0x49f DUP3
0x4a0 ADD
0x4a1 MSTORE
0x4a2 PUSH1 0x44
0x4a4 ADD
0x4a5 PUSH1 0x0
0x4a7 PUSH1 0x40
0x4a9 MLOAD
0x4aa DUP1
0x4ab DUP4
0x4ac SUB
0x4ad DUP2
0x4ae PUSH1 0x0
0x4b0 DUP8
0x4b1 DUP1
0x4b2 EXTCODESIZE
0x4b3 ISZERO
0x4b4 ISZERO
0x4b5 PUSH2 0x4bd
0x4b8 JUMPI
---
0x467: JUMPDEST 
0x468: V476 = 0x0
0x46a: V477 = S[0x0]
0x46b: V478 = 0x1
0x46d: V479 = 0xa0
0x46f: V480 = 0x2
0x471: V481 = EXP 0x2 0xa0
0x472: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x473: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x474: V484 = 0xa9059cbb
0x479: V485 = CALLER
0x47b: V486 = 0x40
0x47d: V487 = M[0x40]
0x47e: V488 = 0xe0
0x480: V489 = 0x2
0x482: V490 = EXP 0x2 0xe0
0x483: V491 = 0xffffffff
0x489: V492 = AND 0xa9059cbb 0xffffffff
0x48a: V493 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x48c: M[V487] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x48d: V494 = 0x1
0x48f: V495 = 0xa0
0x491: V496 = 0x2
0x493: V497 = EXP 0x2 0xa0
0x494: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x497: V499 = AND V485 0xffffffffffffffffffffffffffffffffffffffff
0x498: V500 = 0x4
0x49b: V501 = ADD V487 0x4
0x49c: M[V501] = V499
0x49d: V502 = 0x24
0x4a0: V503 = ADD V487 0x24
0x4a1: M[V503] = V382
0x4a2: V504 = 0x44
0x4a4: V505 = ADD 0x44 V487
0x4a5: V506 = 0x0
0x4a7: V507 = 0x40
0x4a9: V508 = M[0x40]
0x4ac: V509 = SUB V505 V508
0x4ae: V510 = 0x0
0x4b2: V511 = EXTCODESIZE V483
0x4b3: V512 = ISZERO V511
0x4b4: V513 = ISZERO V512
0x4b5: V514 = 0x4bd
0x4b8: JUMPI 0x4bd V513
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]
Exit stack: [V12, V382, V420, 0x0, V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]

================================

Block 0x4b9
[0x4b9:0x4bc]
---
Predecessors: [0x467]
Successors: []
---
0x4b9 PUSH1 0x0
0x4bb DUP1
0x4bc REVERT
---
0x4b9: V515 = 0x0
0x4bc: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, 0x0, V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, 0x0, V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]

================================

Block 0x4bd
[0x4bd:0x4c9]
---
Predecessors: [0x467]
Successors: [0x4ca, 0x4ce]
---
0x4bd JUMPDEST
0x4be PUSH2 0x2c6
0x4c1 GAS
0x4c2 SUB
0x4c3 CALL
0x4c4 ISZERO
0x4c5 ISZERO
0x4c6 PUSH2 0x4ce
0x4c9 JUMPI
---
0x4bd: JUMPDEST 
0x4be: V516 = 0x2c6
0x4c1: V517 = GAS
0x4c2: V518 = SUB V517 0x2c6
0x4c3: V519 = CALL V518 V483 0x0 V508 V509 V508 0x0
0x4c4: V520 = ISZERO V519
0x4c5: V521 = ISZERO V520
0x4c6: V522 = 0x4ce
0x4c9: JUMPI 0x4ce V521
---
Entry stack: [V12, V382, V420, 0x0, V483, 0xa9059cbb, V505, 0x0, V508, V509, V508, 0x0, V483]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V382, V420, 0x0, V483, 0xa9059cbb, V505]

================================

Block 0x4ca
[0x4ca:0x4cd]
---
Predecessors: [0x4bd]
Successors: []
---
0x4ca PUSH1 0x0
0x4cc DUP1
0x4cd REVERT
---
0x4ca: V523 = 0x0
0x4cd: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, 0x0, V483, 0xa9059cbb, V505]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, 0x0, V483, 0xa9059cbb, V505]

================================

Block 0x4ce
[0x4ce:0x4ea]
---
Predecessors: [0x4bd]
Successors: [0x173, 0x4eb]
---
0x4ce JUMPDEST
0x4cf POP
0x4d0 POP
0x4d1 PUSH1 0x9
0x4d3 DUP1
0x4d4 SLOAD
0x4d5 DUP6
0x4d6 ADD
0x4d7 SWAP1
0x4d8 SSTORE
0x4d9 POP
0x4da PUSH1 0xa
0x4dc DUP1
0x4dd SLOAD
0x4de DUP5
0x4df SWAP1
0x4e0 SUB
0x4e1 SWAP1
0x4e2 DUP2
0x4e3 SWAP1
0x4e4 SSTORE
0x4e5 ISZERO
0x4e6 ISZERO
0x4e7 PUSH2 0x173
0x4ea JUMPI
---
0x4ce: JUMPDEST 
0x4d1: V524 = 0x9
0x4d4: V525 = S[0x9]
0x4d6: V526 = ADD V382 V525
0x4d8: S[0x9] = V526
0x4da: V527 = 0xa
0x4dd: V528 = S[0xa]
0x4e0: V529 = SUB V528 V382
0x4e4: S[0xa] = V529
0x4e5: V530 = ISZERO V529
0x4e6: V531 = ISZERO V530
0x4e7: V532 = 0x173
0x4ea: JUMPI 0x173 V531
---
Entry stack: [V12, V382, V420, 0x0, V483, 0xa9059cbb, V505]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x4eb
[0x4eb:0x4f7]
---
Predecessors: [0x4ce]
Successors: [0x4f8]
---
0x4eb PUSH1 0xb
0x4ed DUP1
0x4ee SLOAD
0x4ef PUSH1 0xff
0x4f1 NOT
0x4f2 AND
0x4f3 PUSH1 0x1
0x4f5 OR
0x4f6 SWAP1
0x4f7 SSTORE
---
0x4eb: V533 = 0xb
0x4ee: V534 = S[0xb]
0x4ef: V535 = 0xff
0x4f1: V536 = NOT 0xff
0x4f2: V537 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V534
0x4f3: V538 = 0x1
0x4f5: V539 = OR 0x1 V537
0x4f7: S[0xb] = V539
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x4f8
[0x4f8:0x4fc]
---
Predecessors: [0x4eb]
Successors: [0x680]
---
0x4f8 JUMPDEST
0x4f9 PUSH2 0x680
0x4fc JUMP
---
0x4f8: JUMPDEST 
0x4f9: V540 = 0x680
0x4fc: JUMP 0x680
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, 0x0]

================================

Block 0x4fd
[0x4fd:0x50e]
---
Predecessors: [0x3e8]
Successors: [0x50f, 0x510]
---
0x4fd JUMPDEST
0x4fe PUSH1 0x8
0x500 SLOAD
0x501 PUSH1 0x7
0x503 SLOAD
0x504 PUSH1 0xa
0x506 SLOAD
0x507 MUL
0x508 DUP2
0x509 ISZERO
0x50a ISZERO
0x50b PUSH2 0x510
0x50e JUMPI
---
0x4fd: JUMPDEST 
0x4fe: V541 = 0x8
0x500: V542 = S[0x8]
0x501: V543 = 0x7
0x503: V544 = S[0x7]
0x504: V545 = 0xa
0x506: V546 = S[0xa]
0x507: V547 = MUL V546 V544
0x509: V548 = ISZERO V542
0x50a: V549 = ISZERO V548
0x50b: V550 = 0x510
0x50e: JUMPI 0x510 V549
---
Entry stack: [V12, V382, V420, 0x0]
Stack pops: 0
Stack additions: [V542, V547]
Exit stack: [V12, V382, V420, 0x0, V542, V547]

================================

Block 0x50f
[0x50f:0x50f]
---
Predecessors: [0x4fd]
Successors: []
---
0x50f INVALID
---
0x50f: INVALID 
---
Entry stack: [V12, V382, V420, 0x0, V542, V547]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, 0x0, V542, V547]

================================

Block 0x510
[0x510:0x543]
---
Predecessors: [0x4fd]
Successors: [0x544, 0x548]
---
0x510 JUMPDEST
0x511 PUSH1 0x1
0x513 SLOAD
0x514 SWAP2
0x515 SWAP1
0x516 DIV
0x517 SWAP2
0x518 POP
0x519 PUSH1 0x1
0x51b PUSH1 0xa0
0x51d PUSH1 0x2
0x51f EXP
0x520 SUB
0x521 AND
0x522 DUP2
0x523 ISZERO
0x524 PUSH2 0x8fc
0x527 MUL
0x528 DUP3
0x529 PUSH1 0x40
0x52b MLOAD
0x52c PUSH1 0x0
0x52e PUSH1 0x40
0x530 MLOAD
0x531 DUP1
0x532 DUP4
0x533 SUB
0x534 DUP2
0x535 DUP6
0x536 DUP9
0x537 DUP9
0x538 CALL
0x539 SWAP4
0x53a POP
0x53b POP
0x53c POP
0x53d POP
0x53e ISZERO
0x53f ISZERO
0x540 PUSH2 0x548
0x543 JUMPI
---
0x510: JUMPDEST 
0x511: V551 = 0x1
0x513: V552 = S[0x1]
0x516: V553 = DIV V547 V542
0x519: V554 = 0x1
0x51b: V555 = 0xa0
0x51d: V556 = 0x2
0x51f: V557 = EXP 0x2 0xa0
0x520: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x521: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x523: V560 = ISZERO V553
0x524: V561 = 0x8fc
0x527: V562 = MUL 0x8fc V560
0x529: V563 = 0x40
0x52b: V564 = M[0x40]
0x52c: V565 = 0x0
0x52e: V566 = 0x40
0x530: V567 = M[0x40]
0x533: V568 = SUB V564 V567
0x538: V569 = CALL V562 V559 V553 V567 V568 V567 0x0
0x53e: V570 = ISZERO V569
0x53f: V571 = ISZERO V570
0x540: V572 = 0x548
0x543: JUMPI 0x548 V571
---
Entry stack: [V12, V382, V420, 0x0, V542, V547]
Stack pops: 3
Stack additions: [V553]
Exit stack: [V12, V382, V420, V553]

================================

Block 0x544
[0x544:0x547]
---
Predecessors: [0x510]
Successors: []
---
0x544 PUSH1 0x0
0x546 DUP1
0x547 REVERT
---
0x544: V573 = 0x0
0x547: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, V553]

================================

Block 0x548
[0x548:0x5a0]
---
Predecessors: [0x510]
Successors: [0x5a1, 0x5a5]
---
0x548 JUMPDEST
0x549 PUSH1 0x0
0x54b SLOAD
0x54c PUSH1 0xa
0x54e SLOAD
0x54f PUSH1 0x1
0x551 PUSH1 0xa0
0x553 PUSH1 0x2
0x555 EXP
0x556 SUB
0x557 SWAP1
0x558 SWAP2
0x559 AND
0x55a SWAP1
0x55b PUSH4 0xa9059cbb
0x560 SWAP1
0x561 CALLER
0x562 SWAP1
0x563 PUSH1 0x40
0x565 MLOAD
0x566 PUSH1 0xe0
0x568 PUSH1 0x2
0x56a EXP
0x56b PUSH4 0xffffffff
0x570 DUP6
0x571 AND
0x572 MUL
0x573 DUP2
0x574 MSTORE
0x575 PUSH1 0x1
0x577 PUSH1 0xa0
0x579 PUSH1 0x2
0x57b EXP
0x57c SUB
0x57d SWAP1
0x57e SWAP3
0x57f AND
0x580 PUSH1 0x4
0x582 DUP4
0x583 ADD
0x584 MSTORE
0x585 PUSH1 0x24
0x587 DUP3
0x588 ADD
0x589 MSTORE
0x58a PUSH1 0x44
0x58c ADD
0x58d PUSH1 0x0
0x58f PUSH1 0x40
0x591 MLOAD
0x592 DUP1
0x593 DUP4
0x594 SUB
0x595 DUP2
0x596 PUSH1 0x0
0x598 DUP8
0x599 DUP1
0x59a EXTCODESIZE
0x59b ISZERO
0x59c ISZERO
0x59d PUSH2 0x5a5
0x5a0 JUMPI
---
0x548: JUMPDEST 
0x549: V574 = 0x0
0x54b: V575 = S[0x0]
0x54c: V576 = 0xa
0x54e: V577 = S[0xa]
0x54f: V578 = 0x1
0x551: V579 = 0xa0
0x553: V580 = 0x2
0x555: V581 = EXP 0x2 0xa0
0x556: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x559: V583 = AND V575 0xffffffffffffffffffffffffffffffffffffffff
0x55b: V584 = 0xa9059cbb
0x561: V585 = CALLER
0x563: V586 = 0x40
0x565: V587 = M[0x40]
0x566: V588 = 0xe0
0x568: V589 = 0x2
0x56a: V590 = EXP 0x2 0xe0
0x56b: V591 = 0xffffffff
0x571: V592 = AND 0xa9059cbb 0xffffffff
0x572: V593 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x574: M[V587] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x575: V594 = 0x1
0x577: V595 = 0xa0
0x579: V596 = 0x2
0x57b: V597 = EXP 0x2 0xa0
0x57c: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57f: V599 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x580: V600 = 0x4
0x583: V601 = ADD V587 0x4
0x584: M[V601] = V599
0x585: V602 = 0x24
0x588: V603 = ADD V587 0x24
0x589: M[V603] = V577
0x58a: V604 = 0x44
0x58c: V605 = ADD 0x44 V587
0x58d: V606 = 0x0
0x58f: V607 = 0x40
0x591: V608 = M[0x40]
0x594: V609 = SUB V605 V608
0x596: V610 = 0x0
0x59a: V611 = EXTCODESIZE V583
0x59b: V612 = ISZERO V611
0x59c: V613 = ISZERO V612
0x59d: V614 = 0x5a5
0x5a0: JUMPI 0x5a5 V613
---
Entry stack: [V12, V382, V420, V553]
Stack pops: 0
Stack additions: [V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]
Exit stack: [V12, V382, V420, V553, V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]

================================

Block 0x5a1
[0x5a1:0x5a4]
---
Predecessors: [0x548]
Successors: []
---
0x5a1 PUSH1 0x0
0x5a3 DUP1
0x5a4 REVERT
---
0x5a1: V615 = 0x0
0x5a4: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, V553, V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, V553, V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]

================================

Block 0x5a5
[0x5a5:0x5b1]
---
Predecessors: [0x548]
Successors: [0x5b2, 0x5b6]
---
0x5a5 JUMPDEST
0x5a6 PUSH2 0x2c6
0x5a9 GAS
0x5aa SUB
0x5ab CALL
0x5ac ISZERO
0x5ad ISZERO
0x5ae PUSH2 0x5b6
0x5b1 JUMPI
---
0x5a5: JUMPDEST 
0x5a6: V616 = 0x2c6
0x5a9: V617 = GAS
0x5aa: V618 = SUB V617 0x2c6
0x5ab: V619 = CALL V618 V583 0x0 V608 V609 V608 0x0
0x5ac: V620 = ISZERO V619
0x5ad: V621 = ISZERO V620
0x5ae: V622 = 0x5b6
0x5b1: JUMPI 0x5b6 V621
---
Entry stack: [V12, V382, V420, V553, V583, 0xa9059cbb, V605, 0x0, V608, V609, V608, 0x0, V583]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V382, V420, V553, V583, 0xa9059cbb, V605]

================================

Block 0x5b2
[0x5b2:0x5b5]
---
Predecessors: [0x5a5]
Successors: []
---
0x5b2 PUSH1 0x0
0x5b4 DUP1
0x5b5 REVERT
---
0x5b2: V623 = 0x0
0x5b5: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, V553, V583, 0xa9059cbb, V605]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, V553, V583, 0xa9059cbb, V605]

================================

Block 0x5b6
[0x5b6:0x5e9]
---
Predecessors: [0x5a5]
Successors: [0x5ea, 0x5ee]
---
0x5b6 JUMPDEST
0x5b7 POP
0x5b8 POP
0x5b9 POP
0x5ba CALLER
0x5bb PUSH1 0x1
0x5bd PUSH1 0xa0
0x5bf PUSH1 0x2
0x5c1 EXP
0x5c2 SUB
0x5c3 AND
0x5c4 PUSH2 0x8fc
0x5c7 DUP3
0x5c8 CALLVALUE
0x5c9 SUB
0x5ca SWAP1
0x5cb DUP2
0x5cc ISZERO
0x5cd MUL
0x5ce SWAP1
0x5cf PUSH1 0x40
0x5d1 MLOAD
0x5d2 PUSH1 0x0
0x5d4 PUSH1 0x40
0x5d6 MLOAD
0x5d7 DUP1
0x5d8 DUP4
0x5d9 SUB
0x5da DUP2
0x5db DUP6
0x5dc DUP9
0x5dd DUP9
0x5de CALL
0x5df SWAP4
0x5e0 POP
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 ISZERO
0x5e5 ISZERO
0x5e6 PUSH2 0x5ee
0x5e9 JUMPI
---
0x5b6: JUMPDEST 
0x5ba: V624 = CALLER
0x5bb: V625 = 0x1
0x5bd: V626 = 0xa0
0x5bf: V627 = 0x2
0x5c1: V628 = EXP 0x2 0xa0
0x5c2: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c3: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x5c4: V631 = 0x8fc
0x5c8: V632 = CALLVALUE
0x5c9: V633 = SUB V632 V553
0x5cc: V634 = ISZERO V633
0x5cd: V635 = MUL V634 0x8fc
0x5cf: V636 = 0x40
0x5d1: V637 = M[0x40]
0x5d2: V638 = 0x0
0x5d4: V639 = 0x40
0x5d6: V640 = M[0x40]
0x5d9: V641 = SUB V637 V640
0x5de: V642 = CALL V635 V630 V633 V640 V641 V640 0x0
0x5e4: V643 = ISZERO V642
0x5e5: V644 = ISZERO V643
0x5e6: V645 = 0x5ee
0x5e9: JUMPI 0x5ee V644
---
Entry stack: [V12, V382, V420, V553, V583, 0xa9059cbb, V605]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V382, V420, V553]

================================

Block 0x5ea
[0x5ea:0x5ed]
---
Predecessors: [0x5b6]
Successors: []
---
0x5ea PUSH1 0x0
0x5ec DUP1
0x5ed REVERT
---
0x5ea: V646 = 0x0
0x5ed: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, V553]

================================

Block 0x5ee
[0x5ee:0x650]
---
Predecessors: [0x5b6]
Successors: [0x651, 0x655]
---
0x5ee JUMPDEST
0x5ef PUSH1 0xa
0x5f1 SLOAD
0x5f2 PUSH1 0x9
0x5f4 DUP1
0x5f5 SLOAD
0x5f6 SWAP1
0x5f7 SWAP2
0x5f8 ADD
0x5f9 SWAP1
0x5fa SSTORE
0x5fb PUSH1 0x0
0x5fd DUP1
0x5fe SLOAD
0x5ff PUSH1 0x1
0x601 PUSH1 0xa0
0x603 PUSH1 0x2
0x605 EXP
0x606 SUB
0x607 AND
0x608 SWAP1
0x609 PUSH4 0x70a08231
0x60e SWAP1
0x60f ADDRESS
0x610 SWAP1
0x611 PUSH1 0x40
0x613 MLOAD
0x614 PUSH1 0x20
0x616 ADD
0x617 MSTORE
0x618 PUSH1 0x40
0x61a MLOAD
0x61b PUSH1 0xe0
0x61d PUSH1 0x2
0x61f EXP
0x620 PUSH4 0xffffffff
0x625 DUP5
0x626 AND
0x627 MUL
0x628 DUP2
0x629 MSTORE
0x62a PUSH1 0x1
0x62c PUSH1 0xa0
0x62e PUSH1 0x2
0x630 EXP
0x631 SUB
0x632 SWAP1
0x633 SWAP2
0x634 AND
0x635 PUSH1 0x4
0x637 DUP3
0x638 ADD
0x639 MSTORE
0x63a PUSH1 0x24
0x63c ADD
0x63d PUSH1 0x20
0x63f PUSH1 0x40
0x641 MLOAD
0x642 DUP1
0x643 DUP4
0x644 SUB
0x645 DUP2
0x646 PUSH1 0x0
0x648 DUP8
0x649 DUP1
0x64a EXTCODESIZE
0x64b ISZERO
0x64c ISZERO
0x64d PUSH2 0x655
0x650 JUMPI
---
0x5ee: JUMPDEST 
0x5ef: V647 = 0xa
0x5f1: V648 = S[0xa]
0x5f2: V649 = 0x9
0x5f5: V650 = S[0x9]
0x5f8: V651 = ADD V648 V650
0x5fa: S[0x9] = V651
0x5fb: V652 = 0x0
0x5fe: V653 = S[0x0]
0x5ff: V654 = 0x1
0x601: V655 = 0xa0
0x603: V656 = 0x2
0x605: V657 = EXP 0x2 0xa0
0x606: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x607: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0x609: V660 = 0x70a08231
0x60f: V661 = ADDRESS
0x611: V662 = 0x40
0x613: V663 = M[0x40]
0x614: V664 = 0x20
0x616: V665 = ADD 0x20 V663
0x617: M[V665] = 0x0
0x618: V666 = 0x40
0x61a: V667 = M[0x40]
0x61b: V668 = 0xe0
0x61d: V669 = 0x2
0x61f: V670 = EXP 0x2 0xe0
0x620: V671 = 0xffffffff
0x626: V672 = AND 0x70a08231 0xffffffff
0x627: V673 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x629: M[V667] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x62a: V674 = 0x1
0x62c: V675 = 0xa0
0x62e: V676 = 0x2
0x630: V677 = EXP 0x2 0xa0
0x631: V678 = SUB 0x10000000000000000000000000000000000000000 0x1
0x634: V679 = AND V661 0xffffffffffffffffffffffffffffffffffffffff
0x635: V680 = 0x4
0x638: V681 = ADD V667 0x4
0x639: M[V681] = V679
0x63a: V682 = 0x24
0x63c: V683 = ADD 0x24 V667
0x63d: V684 = 0x20
0x63f: V685 = 0x40
0x641: V686 = M[0x40]
0x644: V687 = SUB V683 V686
0x646: V688 = 0x0
0x64a: V689 = EXTCODESIZE V659
0x64b: V690 = ISZERO V689
0x64c: V691 = ISZERO V690
0x64d: V692 = 0x655
0x650: JUMPI 0x655 V691
---
Entry stack: [V12, V382, V420, V553]
Stack pops: 0
Stack additions: [V659, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V659]
Exit stack: [V12, V382, V420, V553, V659, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V659]

================================

Block 0x651
[0x651:0x654]
---
Predecessors: [0x5ee]
Successors: []
---
0x651 PUSH1 0x0
0x653 DUP1
0x654 REVERT
---
0x651: V693 = 0x0
0x654: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, V553, V659, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V659]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, V553, V659, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V659]

================================

Block 0x655
[0x655:0x661]
---
Predecessors: [0x5ee]
Successors: [0x662, 0x666]
---
0x655 JUMPDEST
0x656 PUSH2 0x2c6
0x659 GAS
0x65a SUB
0x65b CALL
0x65c ISZERO
0x65d ISZERO
0x65e PUSH2 0x666
0x661 JUMPI
---
0x655: JUMPDEST 
0x656: V694 = 0x2c6
0x659: V695 = GAS
0x65a: V696 = SUB V695 0x2c6
0x65b: V697 = CALL V696 V659 0x0 V686 V687 V686 0x20
0x65c: V698 = ISZERO V697
0x65d: V699 = ISZERO V698
0x65e: V700 = 0x666
0x661: JUMPI 0x666 V699
---
Entry stack: [V12, V382, V420, V553, V659, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V659]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V382, V420, V553, V659, 0x70a08231, V683]

================================

Block 0x662
[0x662:0x665]
---
Predecessors: [0x655]
Successors: []
---
0x662 PUSH1 0x0
0x664 DUP1
0x665 REVERT
---
0x662: V701 = 0x0
0x665: REVERT 0x0 0x0
---
Entry stack: [V12, V382, V420, V553, V659, 0x70a08231, V683]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V382, V420, V553, V659, 0x70a08231, V683]

================================

Block 0x666
[0x666:0x67f]
---
Predecessors: [0x655]
Successors: [0x680]
---
0x666 JUMPDEST
0x667 POP
0x668 POP
0x669 POP
0x66a PUSH1 0x40
0x66c MLOAD
0x66d DUP1
0x66e MLOAD
0x66f PUSH1 0xa
0x671 SSTORE
0x672 POP
0x673 PUSH1 0xb
0x675 DUP1
0x676 SLOAD
0x677 PUSH1 0xff
0x679 NOT
0x67a AND
0x67b PUSH1 0x1
0x67d OR
0x67e SWAP1
0x67f SSTORE
---
0x666: JUMPDEST 
0x66a: V702 = 0x40
0x66c: V703 = M[0x40]
0x66e: V704 = M[V703]
0x66f: V705 = 0xa
0x671: S[0xa] = V704
0x673: V706 = 0xb
0x676: V707 = S[0xb]
0x677: V708 = 0xff
0x679: V709 = NOT 0xff
0x67a: V710 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V707
0x67b: V711 = 0x1
0x67d: V712 = OR 0x1 V710
0x67f: S[0xb] = V712
---
Entry stack: [V12, V382, V420, V553, V659, 0x70a08231, V683]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V382, V420, V553]

================================

Block 0x680
[0x680:0x680]
---
Predecessors: [0x173, 0x334, 0x376, 0x4f8, 0x666]
Successors: [0x681]
---
0x680 JUMPDEST
---
0x680: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x681
[0x681:0x681]
---
Predecessors: [0x680]
Successors: [0x682]
---
0x681 JUMPDEST
---
0x681: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x682
[0x682:0x682]
---
Predecessors: [0x681]
Successors: [0x683]
---
0x682 JUMPDEST
---
0x682: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x683
[0x683:0x6f3]
---
Predecessors: [0x682]
Successors: [0x6f4]
---
0x683 JUMPDEST
0x684 PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6a5 PUSH1 0xa
0x6a7 SLOAD
0x6a8 PUSH1 0x40
0x6aa MLOAD
0x6ab SWAP1
0x6ac DUP2
0x6ad MSTORE
0x6ae PUSH1 0x20
0x6b0 ADD
0x6b1 PUSH1 0x40
0x6b3 MLOAD
0x6b4 DUP1
0x6b5 SWAP2
0x6b6 SUB
0x6b7 SWAP1
0x6b8 LOG1
0x6b9 PUSH1 0xb
0x6bb SLOAD
0x6bc PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6dd SWAP1
0x6de PUSH1 0xff
0x6e0 AND
0x6e1 PUSH1 0x40
0x6e3 MLOAD
0x6e4 SWAP1
0x6e5 ISZERO
0x6e6 ISZERO
0x6e7 DUP2
0x6e8 MSTORE
0x6e9 PUSH1 0x20
0x6eb ADD
0x6ec PUSH1 0x40
0x6ee MLOAD
0x6ef DUP1
0x6f0 SWAP2
0x6f1 SUB
0x6f2 SWAP1
0x6f3 LOG1
---
0x683: JUMPDEST 
0x684: V713 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6a5: V714 = 0xa
0x6a7: V715 = S[0xa]
0x6a8: V716 = 0x40
0x6aa: V717 = M[0x40]
0x6ad: M[V717] = V715
0x6ae: V718 = 0x20
0x6b0: V719 = ADD 0x20 V717
0x6b1: V720 = 0x40
0x6b3: V721 = M[0x40]
0x6b6: V722 = SUB V719 V721
0x6b8: LOG V721 V722 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6b9: V723 = 0xb
0x6bb: V724 = S[0xb]
0x6bc: V725 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6de: V726 = 0xff
0x6e0: V727 = AND 0xff V724
0x6e1: V728 = 0x40
0x6e3: V729 = M[0x40]
0x6e5: V730 = ISZERO V727
0x6e6: V731 = ISZERO V730
0x6e8: M[V729] = V731
0x6e9: V732 = 0x20
0x6eb: V733 = ADD 0x20 V729
0x6ec: V734 = 0x40
0x6ee: V735 = M[0x40]
0x6f1: V736 = SUB V733 V735
0x6f3: LOG V735 V736 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x6f4
[0x6f4:0x6f8]
---
Predecessors: [0x683]
Successors: []
---
0x6f4 JUMPDEST
0x6f5 POP
0x6f6 POP
0x6f7 POP
0x6f8 STOP
---
0x6f4: JUMPDEST 
0x6f8: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x6f9
[0x6f9:0x6ff]
---
Predecessors: [0xb]
Successors: [0x700, 0x704]
---
0x6f9 JUMPDEST
0x6fa CALLVALUE
0x6fb ISZERO
0x6fc PUSH2 0x704
0x6ff JUMPI
---
0x6f9: JUMPDEST 
0x6fa: V737 = CALLVALUE
0x6fb: V738 = ISZERO V737
0x6fc: V739 = 0x704
0x6ff: JUMPI 0x704 V738
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x700
[0x700:0x703]
---
Predecessors: [0x6f9]
Successors: []
---
0x700 PUSH1 0x0
0x702 DUP1
0x703 REVERT
---
0x700: V740 = 0x0
0x703: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x704
[0x704:0x70b]
---
Predecessors: [0x6f9]
Successors: [0x88d]
---
0x704 JUMPDEST
0x705 PUSH2 0x70c
0x708 PUSH2 0x88d
0x70b JUMP
---
0x704: JUMPDEST 
0x705: V741 = 0x70c
0x708: V742 = 0x88d
0x70b: JUMP 0x88d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x70c]
Exit stack: [V12, 0x70c]

================================

Block 0x70c
[0x70c:0x727]
---
Predecessors: [0x88d, 0x8b6, 0x8e0]
Successors: []
---
0x70c JUMPDEST
0x70d PUSH1 0x40
0x70f MLOAD
0x710 PUSH1 0x1
0x712 PUSH1 0xa0
0x714 PUSH1 0x2
0x716 EXP
0x717 SUB
0x718 SWAP1
0x719 SWAP2
0x71a AND
0x71b DUP2
0x71c MSTORE
0x71d PUSH1 0x20
0x71f ADD
0x720 PUSH1 0x40
0x722 MLOAD
0x723 DUP1
0x724 SWAP2
0x725 SUB
0x726 SWAP1
0x727 RETURN
---
0x70c: JUMPDEST 
0x70d: V743 = 0x40
0x70f: V744 = M[0x40]
0x710: V745 = 0x1
0x712: V746 = 0xa0
0x714: V747 = 0x2
0x716: V748 = EXP 0x2 0xa0
0x717: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71a: V750 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x71c: M[V744] = V750
0x71d: V751 = 0x20
0x71f: V752 = ADD 0x20 V744
0x720: V753 = 0x40
0x722: V754 = M[0x40]
0x725: V755 = SUB V752 V754
0x727: RETURN V754 V755
---
Entry stack: [V12, 0x70c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x70c]

================================

Block 0x728
[0x728:0x72e]
---
Predecessors: [0x25]
Successors: [0x72f, 0x733]
---
0x728 JUMPDEST
0x729 CALLVALUE
0x72a ISZERO
0x72b PUSH2 0x733
0x72e JUMPI
---
0x728: JUMPDEST 
0x729: V756 = CALLVALUE
0x72a: V757 = ISZERO V756
0x72b: V758 = 0x733
0x72e: JUMPI 0x733 V757
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x72f
[0x72f:0x732]
---
Predecessors: [0x728]
Successors: []
---
0x72f PUSH1 0x0
0x731 DUP1
0x732 REVERT
---
0x72f: V759 = 0x0
0x732: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x733
[0x733:0x73a]
---
Predecessors: [0x728]
Successors: [0x89c]
---
0x733 JUMPDEST
0x734 PUSH2 0x73b
0x737 PUSH2 0x89c
0x73a JUMP
---
0x733: JUMPDEST 
0x734: V760 = 0x73b
0x737: V761 = 0x89c
0x73a: JUMP 0x89c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x73b]
Exit stack: [V12, 0x73b]

================================

Block 0x73b
[0x73b:0x74e]
---
Predecessors: [0x89c, 0x8d7]
Successors: []
---
0x73b JUMPDEST
0x73c PUSH1 0x40
0x73e MLOAD
0x73f SWAP1
0x740 ISZERO
0x741 ISZERO
0x742 DUP2
0x743 MSTORE
0x744 PUSH1 0x20
0x746 ADD
0x747 PUSH1 0x40
0x749 MLOAD
0x74a DUP1
0x74b SWAP2
0x74c SUB
0x74d SWAP1
0x74e RETURN
---
0x73b: JUMPDEST 
0x73c: V762 = 0x40
0x73e: V763 = M[0x40]
0x740: V764 = ISZERO S0
0x741: V765 = ISZERO V764
0x743: M[V763] = V765
0x744: V766 = 0x20
0x746: V767 = ADD 0x20 V763
0x747: V768 = 0x40
0x749: V769 = M[0x40]
0x74c: V770 = SUB V767 V769
0x74e: RETURN V769 V770
---
Entry stack: [V12, 0x73b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x73b]

================================

Block 0x74f
[0x74f:0x755]
---
Predecessors: [0x30]
Successors: [0x756, 0x75a]
---
0x74f JUMPDEST
0x750 CALLVALUE
0x751 ISZERO
0x752 PUSH2 0x75a
0x755 JUMPI
---
0x74f: JUMPDEST 
0x750: V771 = CALLVALUE
0x751: V772 = ISZERO V771
0x752: V773 = 0x75a
0x755: JUMPI 0x75a V772
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x756
[0x756:0x759]
---
Predecessors: [0x74f]
Successors: []
---
0x756 PUSH1 0x0
0x758 DUP1
0x759 REVERT
---
0x756: V774 = 0x0
0x759: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75a
[0x75a:0x761]
---
Predecessors: [0x74f]
Successors: [0x8aa]
---
0x75a JUMPDEST
0x75b PUSH2 0x762
0x75e PUSH2 0x8aa
0x761 JUMP
---
0x75a: JUMPDEST 
0x75b: V775 = 0x762
0x75e: V776 = 0x8aa
0x761: JUMP 0x8aa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x762]
Exit stack: [V12, 0x762]

================================

Block 0x762
[0x762:0x773]
---
Predecessors: [0x8aa, 0x8b0, 0x8c5, 0x8cb, 0x8d1]
Successors: []
---
0x762 JUMPDEST
0x763 PUSH1 0x40
0x765 MLOAD
0x766 SWAP1
0x767 DUP2
0x768 MSTORE
0x769 PUSH1 0x20
0x76b ADD
0x76c PUSH1 0x40
0x76e MLOAD
0x76f DUP1
0x770 SWAP2
0x771 SUB
0x772 SWAP1
0x773 RETURN
---
0x762: JUMPDEST 
0x763: V777 = 0x40
0x765: V778 = M[0x40]
0x768: M[V778] = S0
0x769: V779 = 0x20
0x76b: V780 = ADD 0x20 V778
0x76c: V781 = 0x40
0x76e: V782 = M[0x40]
0x771: V783 = SUB V780 V782
0x773: RETURN V782 V783
---
Entry stack: [V12, 0x762, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x762]

================================

Block 0x774
[0x774:0x77a]
---
Predecessors: [0x3b]
Successors: [0x77b, 0x77f]
---
0x774 JUMPDEST
0x775 CALLVALUE
0x776 ISZERO
0x777 PUSH2 0x77f
0x77a JUMPI
---
0x774: JUMPDEST 
0x775: V784 = CALLVALUE
0x776: V785 = ISZERO V784
0x777: V786 = 0x77f
0x77a: JUMPI 0x77f V785
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x77b
[0x77b:0x77e]
---
Predecessors: [0x774]
Successors: []
---
0x77b PUSH1 0x0
0x77d DUP1
0x77e REVERT
---
0x77b: V787 = 0x0
0x77e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x77f
[0x77f:0x786]
---
Predecessors: [0x774]
Successors: [0x8b0]
---
0x77f JUMPDEST
0x780 PUSH2 0x762
0x783 PUSH2 0x8b0
0x786 JUMP
---
0x77f: JUMPDEST 
0x780: V788 = 0x762
0x783: V789 = 0x8b0
0x786: JUMP 0x8b0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x762]
Exit stack: [V12, 0x762]

================================

Block 0x787
[0x787:0x798]
---
Predecessors: []
Successors: []
---
0x787 JUMPDEST
0x788 PUSH1 0x40
0x78a MLOAD
0x78b SWAP1
0x78c DUP2
0x78d MSTORE
0x78e PUSH1 0x20
0x790 ADD
0x791 PUSH1 0x40
0x793 MLOAD
0x794 DUP1
0x795 SWAP2
0x796 SUB
0x797 SWAP1
0x798 RETURN
---
0x787: JUMPDEST 
0x788: V790 = 0x40
0x78a: V791 = M[0x40]
0x78d: M[V791] = S0
0x78e: V792 = 0x20
0x790: V793 = ADD 0x20 V791
0x791: V794 = 0x40
0x793: V795 = M[0x40]
0x796: V796 = SUB V793 V795
0x798: RETURN V795 V796
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x799
[0x799:0x79f]
---
Predecessors: [0x46]
Successors: [0x7a0, 0x7a4]
---
0x799 JUMPDEST
0x79a CALLVALUE
0x79b ISZERO
0x79c PUSH2 0x7a4
0x79f JUMPI
---
0x799: JUMPDEST 
0x79a: V797 = CALLVALUE
0x79b: V798 = ISZERO V797
0x79c: V799 = 0x7a4
0x79f: JUMPI 0x7a4 V798
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a0
[0x7a0:0x7a3]
---
Predecessors: [0x799]
Successors: []
---
0x7a0 PUSH1 0x0
0x7a2 DUP1
0x7a3 REVERT
---
0x7a0: V800 = 0x0
0x7a3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a4
[0x7a4:0x7ab]
---
Predecessors: [0x799]
Successors: [0x8b6]
---
0x7a4 JUMPDEST
0x7a5 PUSH2 0x70c
0x7a8 PUSH2 0x8b6
0x7ab JUMP
---
0x7a4: JUMPDEST 
0x7a5: V801 = 0x70c
0x7a8: V802 = 0x8b6
0x7ab: JUMP 0x8b6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x70c]
Exit stack: [V12, 0x70c]

================================

Block 0x7ac
[0x7ac:0x7c7]
---
Predecessors: []
Successors: []
---
0x7ac JUMPDEST
0x7ad PUSH1 0x40
0x7af MLOAD
0x7b0 PUSH1 0x1
0x7b2 PUSH1 0xa0
0x7b4 PUSH1 0x2
0x7b6 EXP
0x7b7 SUB
0x7b8 SWAP1
0x7b9 SWAP2
0x7ba AND
0x7bb DUP2
0x7bc MSTORE
0x7bd PUSH1 0x20
0x7bf ADD
0x7c0 PUSH1 0x40
0x7c2 MLOAD
0x7c3 DUP1
0x7c4 SWAP2
0x7c5 SUB
0x7c6 SWAP1
0x7c7 RETURN
---
0x7ac: JUMPDEST 
0x7ad: V803 = 0x40
0x7af: V804 = M[0x40]
0x7b0: V805 = 0x1
0x7b2: V806 = 0xa0
0x7b4: V807 = 0x2
0x7b6: V808 = EXP 0x2 0xa0
0x7b7: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ba: V810 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7bc: M[V804] = V810
0x7bd: V811 = 0x20
0x7bf: V812 = ADD 0x20 V804
0x7c0: V813 = 0x40
0x7c2: V814 = M[0x40]
0x7c5: V815 = SUB V812 V814
0x7c7: RETURN V814 V815
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7c8
[0x7c8:0x7ce]
---
Predecessors: [0x51]
Successors: [0x7cf, 0x7d3]
---
0x7c8 JUMPDEST
0x7c9 CALLVALUE
0x7ca ISZERO
0x7cb PUSH2 0x7d3
0x7ce JUMPI
---
0x7c8: JUMPDEST 
0x7c9: V816 = CALLVALUE
0x7ca: V817 = ISZERO V816
0x7cb: V818 = 0x7d3
0x7ce: JUMPI 0x7d3 V817
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7cf
[0x7cf:0x7d2]
---
Predecessors: [0x7c8]
Successors: []
---
0x7cf PUSH1 0x0
0x7d1 DUP1
0x7d2 REVERT
---
0x7cf: V819 = 0x0
0x7d2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d3
[0x7d3:0x7da]
---
Predecessors: [0x7c8]
Successors: [0x8c5]
---
0x7d3 JUMPDEST
0x7d4 PUSH2 0x762
0x7d7 PUSH2 0x8c5
0x7da JUMP
---
0x7d3: JUMPDEST 
0x7d4: V820 = 0x762
0x7d7: V821 = 0x8c5
0x7da: JUMP 0x8c5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x762]
Exit stack: [V12, 0x762]

================================

Block 0x7db
[0x7db:0x7ec]
---
Predecessors: []
Successors: []
---
0x7db JUMPDEST
0x7dc PUSH1 0x40
0x7de MLOAD
0x7df SWAP1
0x7e0 DUP2
0x7e1 MSTORE
0x7e2 PUSH1 0x20
0x7e4 ADD
0x7e5 PUSH1 0x40
0x7e7 MLOAD
0x7e8 DUP1
0x7e9 SWAP2
0x7ea SUB
0x7eb SWAP1
0x7ec RETURN
---
0x7db: JUMPDEST 
0x7dc: V822 = 0x40
0x7de: V823 = M[0x40]
0x7e1: M[V823] = S0
0x7e2: V824 = 0x20
0x7e4: V825 = ADD 0x20 V823
0x7e5: V826 = 0x40
0x7e7: V827 = M[0x40]
0x7ea: V828 = SUB V825 V827
0x7ec: RETURN V827 V828
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ed
[0x7ed:0x7f3]
---
Predecessors: [0x5c]
Successors: [0x7f4, 0x7f8]
---
0x7ed JUMPDEST
0x7ee CALLVALUE
0x7ef ISZERO
0x7f0 PUSH2 0x7f8
0x7f3 JUMPI
---
0x7ed: JUMPDEST 
0x7ee: V829 = CALLVALUE
0x7ef: V830 = ISZERO V829
0x7f0: V831 = 0x7f8
0x7f3: JUMPI 0x7f8 V830
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f4
[0x7f4:0x7f7]
---
Predecessors: [0x7ed]
Successors: []
---
0x7f4 PUSH1 0x0
0x7f6 DUP1
0x7f7 REVERT
---
0x7f4: V832 = 0x0
0x7f7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f8
[0x7f8:0x7ff]
---
Predecessors: [0x7ed]
Successors: [0x8cb]
---
0x7f8 JUMPDEST
0x7f9 PUSH2 0x762
0x7fc PUSH2 0x8cb
0x7ff JUMP
---
0x7f8: JUMPDEST 
0x7f9: V833 = 0x762
0x7fc: V834 = 0x8cb
0x7ff: JUMP 0x8cb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x762]
Exit stack: [V12, 0x762]

================================

Block 0x800
[0x800:0x811]
---
Predecessors: []
Successors: []
---
0x800 JUMPDEST
0x801 PUSH1 0x40
0x803 MLOAD
0x804 SWAP1
0x805 DUP2
0x806 MSTORE
0x807 PUSH1 0x20
0x809 ADD
0x80a PUSH1 0x40
0x80c MLOAD
0x80d DUP1
0x80e SWAP2
0x80f SUB
0x810 SWAP1
0x811 RETURN
---
0x800: JUMPDEST 
0x801: V835 = 0x40
0x803: V836 = M[0x40]
0x806: M[V836] = S0
0x807: V837 = 0x20
0x809: V838 = ADD 0x20 V836
0x80a: V839 = 0x40
0x80c: V840 = M[0x40]
0x80f: V841 = SUB V838 V840
0x811: RETURN V840 V841
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x812
[0x812:0x818]
---
Predecessors: [0x67]
Successors: [0x819, 0x81d]
---
0x812 JUMPDEST
0x813 CALLVALUE
0x814 ISZERO
0x815 PUSH2 0x81d
0x818 JUMPI
---
0x812: JUMPDEST 
0x813: V842 = CALLVALUE
0x814: V843 = ISZERO V842
0x815: V844 = 0x81d
0x818: JUMPI 0x81d V843
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x819
[0x819:0x81c]
---
Predecessors: [0x812]
Successors: []
---
0x819 PUSH1 0x0
0x81b DUP1
0x81c REVERT
---
0x819: V845 = 0x0
0x81c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81d
[0x81d:0x824]
---
Predecessors: [0x812]
Successors: [0x8d1]
---
0x81d JUMPDEST
0x81e PUSH2 0x762
0x821 PUSH2 0x8d1
0x824 JUMP
---
0x81d: JUMPDEST 
0x81e: V846 = 0x762
0x821: V847 = 0x8d1
0x824: JUMP 0x8d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x762]
Exit stack: [V12, 0x762]

================================

Block 0x825
[0x825:0x836]
---
Predecessors: []
Successors: []
---
0x825 JUMPDEST
0x826 PUSH1 0x40
0x828 MLOAD
0x829 SWAP1
0x82a DUP2
0x82b MSTORE
0x82c PUSH1 0x20
0x82e ADD
0x82f PUSH1 0x40
0x831 MLOAD
0x832 DUP1
0x833 SWAP2
0x834 SUB
0x835 SWAP1
0x836 RETURN
---
0x825: JUMPDEST 
0x826: V848 = 0x40
0x828: V849 = M[0x40]
0x82b: M[V849] = S0
0x82c: V850 = 0x20
0x82e: V851 = ADD 0x20 V849
0x82f: V852 = 0x40
0x831: V853 = M[0x40]
0x834: V854 = SUB V851 V853
0x836: RETURN V853 V854
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x837
[0x837:0x83d]
---
Predecessors: [0x72]
Successors: [0x83e, 0x842]
---
0x837 JUMPDEST
0x838 CALLVALUE
0x839 ISZERO
0x83a PUSH2 0x842
0x83d JUMPI
---
0x837: JUMPDEST 
0x838: V855 = CALLVALUE
0x839: V856 = ISZERO V855
0x83a: V857 = 0x842
0x83d: JUMPI 0x842 V856
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x83e
[0x83e:0x841]
---
Predecessors: [0x837]
Successors: []
---
0x83e PUSH1 0x0
0x840 DUP1
0x841 REVERT
---
0x83e: V858 = 0x0
0x841: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x842
[0x842:0x849]
---
Predecessors: [0x837]
Successors: [0x8d7]
---
0x842 JUMPDEST
0x843 PUSH2 0x73b
0x846 PUSH2 0x8d7
0x849 JUMP
---
0x842: JUMPDEST 
0x843: V859 = 0x73b
0x846: V860 = 0x8d7
0x849: JUMP 0x8d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x73b]
Exit stack: [V12, 0x73b]

================================

Block 0x84a
[0x84a:0x85d]
---
Predecessors: []
Successors: []
---
0x84a JUMPDEST
0x84b PUSH1 0x40
0x84d MLOAD
0x84e SWAP1
0x84f ISZERO
0x850 ISZERO
0x851 DUP2
0x852 MSTORE
0x853 PUSH1 0x20
0x855 ADD
0x856 PUSH1 0x40
0x858 MLOAD
0x859 DUP1
0x85a SWAP2
0x85b SUB
0x85c SWAP1
0x85d RETURN
---
0x84a: JUMPDEST 
0x84b: V861 = 0x40
0x84d: V862 = M[0x40]
0x84f: V863 = ISZERO S0
0x850: V864 = ISZERO V863
0x852: M[V862] = V864
0x853: V865 = 0x20
0x855: V866 = ADD 0x20 V862
0x856: V867 = 0x40
0x858: V868 = M[0x40]
0x85b: V869 = SUB V866 V868
0x85d: RETURN V868 V869
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x85e
[0x85e:0x864]
---
Predecessors: [0x7d]
Successors: [0x865, 0x869]
---
0x85e JUMPDEST
0x85f CALLVALUE
0x860 ISZERO
0x861 PUSH2 0x869
0x864 JUMPI
---
0x85e: JUMPDEST 
0x85f: V870 = CALLVALUE
0x860: V871 = ISZERO V870
0x861: V872 = 0x869
0x864: JUMPI 0x869 V871
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x865
[0x865:0x868]
---
Predecessors: [0x85e]
Successors: []
---
0x865 PUSH1 0x0
0x867 DUP1
0x868 REVERT
---
0x865: V873 = 0x0
0x868: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x869
[0x869:0x870]
---
Predecessors: [0x85e]
Successors: [0x8e0]
---
0x869 JUMPDEST
0x86a PUSH2 0x70c
0x86d PUSH2 0x8e0
0x870 JUMP
---
0x869: JUMPDEST 
0x86a: V874 = 0x70c
0x86d: V875 = 0x8e0
0x870: JUMP 0x8e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x70c]
Exit stack: [V12, 0x70c]

================================

Block 0x871
[0x871:0x88c]
---
Predecessors: []
Successors: []
---
0x871 JUMPDEST
0x872 PUSH1 0x40
0x874 MLOAD
0x875 PUSH1 0x1
0x877 PUSH1 0xa0
0x879 PUSH1 0x2
0x87b EXP
0x87c SUB
0x87d SWAP1
0x87e SWAP2
0x87f AND
0x880 DUP2
0x881 MSTORE
0x882 PUSH1 0x20
0x884 ADD
0x885 PUSH1 0x40
0x887 MLOAD
0x888 DUP1
0x889 SWAP2
0x88a SUB
0x88b SWAP1
0x88c RETURN
---
0x871: JUMPDEST 
0x872: V876 = 0x40
0x874: V877 = M[0x40]
0x875: V878 = 0x1
0x877: V879 = 0xa0
0x879: V880 = 0x2
0x87b: V881 = EXP 0x2 0xa0
0x87c: V882 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87f: V883 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x881: M[V877] = V883
0x882: V884 = 0x20
0x884: V885 = ADD 0x20 V877
0x885: V886 = 0x40
0x887: V887 = M[0x40]
0x88a: V888 = SUB V885 V887
0x88c: RETURN V887 V888
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x88d
[0x88d:0x89b]
---
Predecessors: [0x704]
Successors: [0x70c]
---
0x88d JUMPDEST
0x88e PUSH1 0x0
0x890 SLOAD
0x891 PUSH1 0x1
0x893 PUSH1 0xa0
0x895 PUSH1 0x2
0x897 EXP
0x898 SUB
0x899 AND
0x89a DUP2
0x89b JUMP
---
0x88d: JUMPDEST 
0x88e: V889 = 0x0
0x890: V890 = S[0x0]
0x891: V891 = 0x1
0x893: V892 = 0xa0
0x895: V893 = 0x2
0x897: V894 = EXP 0x2 0xa0
0x898: V895 = SUB 0x10000000000000000000000000000000000000000 0x1
0x899: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V890
0x89b: JUMP 0x70c
---
Entry stack: [V12, 0x70c]
Stack pops: 1
Stack additions: [S0, V896]
Exit stack: [V12, 0x70c, V896]

================================

Block 0x89c
[0x89c:0x8a9]
---
Predecessors: [0x733]
Successors: [0x73b]
---
0x89c JUMPDEST
0x89d PUSH1 0xb
0x89f SLOAD
0x8a0 PUSH2 0x100
0x8a3 SWAP1
0x8a4 DIV
0x8a5 PUSH1 0xff
0x8a7 AND
0x8a8 DUP2
0x8a9 JUMP
---
0x89c: JUMPDEST 
0x89d: V897 = 0xb
0x89f: V898 = S[0xb]
0x8a0: V899 = 0x100
0x8a4: V900 = DIV V898 0x100
0x8a5: V901 = 0xff
0x8a7: V902 = AND 0xff V900
0x8a9: JUMP 0x73b
---
Entry stack: [V12, 0x73b]
Stack pops: 1
Stack additions: [S0, V902]
Exit stack: [V12, 0x73b, V902]

================================

Block 0x8aa
[0x8aa:0x8af]
---
Predecessors: [0x75a]
Successors: [0x762]
---
0x8aa JUMPDEST
0x8ab PUSH1 0x9
0x8ad SLOAD
0x8ae DUP2
0x8af JUMP
---
0x8aa: JUMPDEST 
0x8ab: V903 = 0x9
0x8ad: V904 = S[0x9]
0x8af: JUMP 0x762
---
Entry stack: [V12, 0x762]
Stack pops: 1
Stack additions: [S0, V904]
Exit stack: [V12, 0x762, V904]

================================

Block 0x8b0
[0x8b0:0x8b5]
---
Predecessors: [0x77f]
Successors: [0x762]
---
0x8b0 JUMPDEST
0x8b1 PUSH1 0x3
0x8b3 SLOAD
0x8b4 DUP2
0x8b5 JUMP
---
0x8b0: JUMPDEST 
0x8b1: V905 = 0x3
0x8b3: V906 = S[0x3]
0x8b5: JUMP 0x762
---
Entry stack: [V12, 0x762]
Stack pops: 1
Stack additions: [S0, V906]
Exit stack: [V12, 0x762, V906]

================================

Block 0x8b6
[0x8b6:0x8c4]
---
Predecessors: [0x7a4]
Successors: [0x70c]
---
0x8b6 JUMPDEST
0x8b7 PUSH1 0x1
0x8b9 SLOAD
0x8ba PUSH1 0x1
0x8bc PUSH1 0xa0
0x8be PUSH1 0x2
0x8c0 EXP
0x8c1 SUB
0x8c2 AND
0x8c3 DUP2
0x8c4 JUMP
---
0x8b6: JUMPDEST 
0x8b7: V907 = 0x1
0x8b9: V908 = S[0x1]
0x8ba: V909 = 0x1
0x8bc: V910 = 0xa0
0x8be: V911 = 0x2
0x8c0: V912 = EXP 0x2 0xa0
0x8c1: V913 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c2: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V908
0x8c4: JUMP 0x70c
---
Entry stack: [V12, 0x70c]
Stack pops: 1
Stack additions: [S0, V914]
Exit stack: [V12, 0x70c, V914]

================================

Block 0x8c5
[0x8c5:0x8ca]
---
Predecessors: [0x7d3]
Successors: [0x762]
---
0x8c5 JUMPDEST
0x8c6 PUSH1 0xa
0x8c8 SLOAD
0x8c9 DUP2
0x8ca JUMP
---
0x8c5: JUMPDEST 
0x8c6: V915 = 0xa
0x8c8: V916 = S[0xa]
0x8ca: JUMP 0x762
---
Entry stack: [V12, 0x762]
Stack pops: 1
Stack additions: [S0, V916]
Exit stack: [V12, 0x762, V916]

================================

Block 0x8cb
[0x8cb:0x8d0]
---
Predecessors: [0x7f8]
Successors: [0x762]
---
0x8cb JUMPDEST
0x8cc PUSH1 0x7
0x8ce SLOAD
0x8cf DUP2
0x8d0 JUMP
---
0x8cb: JUMPDEST 
0x8cc: V917 = 0x7
0x8ce: V918 = S[0x7]
0x8d0: JUMP 0x762
---
Entry stack: [V12, 0x762]
Stack pops: 1
Stack additions: [S0, V918]
Exit stack: [V12, 0x762, V918]

================================

Block 0x8d1
[0x8d1:0x8d6]
---
Predecessors: [0x81d]
Successors: [0x762]
---
0x8d1 JUMPDEST
0x8d2 PUSH1 0x4
0x8d4 SLOAD
0x8d5 DUP2
0x8d6 JUMP
---
0x8d1: JUMPDEST 
0x8d2: V919 = 0x4
0x8d4: V920 = S[0x4]
0x8d6: JUMP 0x762
---
Entry stack: [V12, 0x762]
Stack pops: 1
Stack additions: [S0, V920]
Exit stack: [V12, 0x762, V920]

================================

Block 0x8d7
[0x8d7:0x8df]
---
Predecessors: [0x842]
Successors: [0x73b]
---
0x8d7 JUMPDEST
0x8d8 PUSH1 0xb
0x8da SLOAD
0x8db PUSH1 0xff
0x8dd AND
0x8de DUP2
0x8df JUMP
---
0x8d7: JUMPDEST 
0x8d8: V921 = 0xb
0x8da: V922 = S[0xb]
0x8db: V923 = 0xff
0x8dd: V924 = AND 0xff V922
0x8df: JUMP 0x73b
---
Entry stack: [V12, 0x73b]
Stack pops: 1
Stack additions: [S0, V924]
Exit stack: [V12, 0x73b, V924]

================================

Block 0x8e0
[0x8e0:0x8ee]
---
Predecessors: [0x869]
Successors: [0x70c]
---
0x8e0 JUMPDEST
0x8e1 PUSH1 0x2
0x8e3 SLOAD
0x8e4 PUSH1 0x1
0x8e6 PUSH1 0xa0
0x8e8 PUSH1 0x2
0x8ea EXP
0x8eb SUB
0x8ec AND
0x8ed DUP2
0x8ee JUMP
---
0x8e0: JUMPDEST 
0x8e1: V925 = 0x2
0x8e3: V926 = S[0x2]
0x8e4: V927 = 0x1
0x8e6: V928 = 0xa0
0x8e8: V929 = 0x2
0x8ea: V930 = EXP 0x2 0xa0
0x8eb: V931 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ec: V932 = AND 0xffffffffffffffffffffffffffffffffffffffff V926
0x8ee: JUMP 0x70c
---
Entry stack: [V12, 0x70c]
Stack pops: 1
Stack additions: [S0, V932]
Exit stack: [V12, 0x70c, V932]

================================

Block 0x8ef
[0x8ef:0x91f]
---
Predecessors: []
Successors: []
---
0x8ef STOP
0x8f0 LOG1
0x8f1 PUSH6 0x627a7a723058
0x8f8 SHA3
0x8f9 SWAP7
0x8fa RETURNDATASIZE
0x8fb SWAP4
0x8fc MISSING 0xa9
0x8fd SWAP12
0x8fe PUSH18 0x104a23b2fcb9954d5eb034590482b1ff37a6
0x911 DUP10
0x912 MISSING 0xba
0x913 SWAP9
0x914 SWAP4
0x915 MISSING 0xad
0x916 MISSING 0xd7
0x917 PUSH8 0xba0029
---
0x8ef: STOP 
0x8f0: LOG S0 S1 S2
0x8f1: V933 = 0x627a7a723058
0x8f8: V934 = SHA3 0x627a7a723058 S3
0x8fa: V935 = RETURNDATASIZE
0x8fc: MISSING 0xa9
0x8fe: V936 = 0x104a23b2fcb9954d5eb034590482b1ff37a6
0x912: MISSING 0xba
0x915: MISSING 0xad
0x916: MISSING 0xd7
0x917: V937 = 0xba0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, S10, S4, S5, V935, S7, S8, S9, V934, S8, 0x104a23b2fcb9954d5eb034590482b1ff37a6, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, S4, S1, S2, S3, S9, S5, S6, S7, S8, S0, 0xba0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebcf0e
Entry block: 0x6f9
Exit block: 0x70c
Body: 0x6f9, 0x700, 0x704, 0x70c, 0x88d

Function 1:
Public function signature: 0x30c74e04
Entry block: 0x728
Exit block: 0x73b
Body: 0x728, 0x72f, 0x733, 0x73b, 0x89c

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x74f
Exit block: 0x762
Body: 0x74f, 0x756, 0x75a, 0x762, 0x8aa

Function 3:
Public function signature: 0x78e97925
Entry block: 0x774
Exit block: 0x762
Body: 0x762, 0x774, 0x77b, 0x77f, 0x8b0

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x799
Exit block: 0x70c
Body: 0x70c, 0x799, 0x7a0, 0x7a4, 0x8b6

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x7c8
Exit block: 0x762
Body: 0x762, 0x7c8, 0x7cf, 0x7d3, 0x8c5

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x7ed
Exit block: 0x762
Body: 0x762, 0x7ed, 0x7f4, 0x7f8, 0x8cb

Function 7:
Public function signature: 0xc8e569a8
Entry block: 0x812
Exit block: 0x762
Body: 0x762, 0x812, 0x819, 0x81d, 0x8d1

Function 8:
Public function signature: 0xccb07cef
Entry block: 0x837
Exit block: 0x73b
Body: 0x73b, 0x837, 0x83e, 0x842, 0x8d7

Function 9:
Public function signature: 0xf9081ba2
Entry block: 0x85e
Exit block: 0x70c
Body: 0x70c, 0x85e, 0x865, 0x869, 0x8e0

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x662
Body: 0x88, 0x89, 0x99, 0xa8, 0xb3, 0xbe, 0xbf, 0x116, 0x11a, 0x127, 0x12b, 0x142, 0x16f, 0x173, 0x178, 0x183, 0x1b0, 0x1b4, 0x1c6, 0x22d, 0x231, 0x23e, 0x242, 0x28b, 0x28f, 0x29c, 0x2a0, 0x2fa, 0x2fe, 0x30b, 0x30f, 0x334, 0x339, 0x345, 0x372, 0x37b, 0x38a, 0x38b, 0x398, 0x3c5, 0x3c9, 0x3ca, 0x3d3, 0x3d7, 0x3e7, 0x3e8, 0x3f7, 0x425, 0x429, 0x432, 0x462, 0x466, 0x467, 0x4b9, 0x4bd, 0x4ca, 0x4ce, 0x4eb, 0x4f8, 0x4fd, 0x50f, 0x510, 0x544, 0x548, 0x5a1, 0x5a5, 0x5b2, 0x5b6, 0x5ea, 0x5ee, 0x651, 0x655, 0x662, 0x666, 0x680, 0x681, 0x682, 0x683, 0x6f4

