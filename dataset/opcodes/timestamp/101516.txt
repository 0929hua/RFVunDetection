args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/2/101516.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x94]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x94
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x94
0xa: JUMPI 0x94 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3c]
---
Predecessors: [0x0]
Successors: [0x3d, 0x1af]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH3 0x597d31
0x37 DUP2
0x38 EQ
0x39 PUSH2 0x1af
0x3c JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x597d31
0x38: V12 = EQ V10 0x597d31
0x39: V13 = 0x1af
0x3c: JUMPI 0x1af V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3d
[0x3d:0x46]
---
Predecessors: [0xb]
Successors: [0x47, 0x1d1]
---
0x3d DUP1
0x3e PUSH3 0xe5fc5f
0x42 EQ
0x43 PUSH2 0x1d1
0x46 JUMPI
---
0x3e: V14 = 0xe5fc5f
0x42: V15 = EQ 0xe5fc5f V10
0x43: V16 = 0x1d1
0x46: JUMPI 0x1d1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x47
[0x47:0x51]
---
Predecessors: [0x3d]
Successors: [0x52, 0x1ff]
---
0x47 DUP1
0x48 PUSH4 0x13af4035
0x4d EQ
0x4e PUSH2 0x1ff
0x51 JUMPI
---
0x48: V17 = 0x13af4035
0x4d: V18 = EQ 0x13af4035 V10
0x4e: V19 = 0x1ff
0x51: JUMPI 0x1ff V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x52
[0x52:0x5c]
---
Predecessors: [0x47]
Successors: [0x5d, 0x21d]
---
0x52 DUP1
0x53 PUSH4 0x8fe92aed
0x58 EQ
0x59 PUSH2 0x21d
0x5c JUMPI
---
0x53: V20 = 0x8fe92aed
0x58: V21 = EQ 0x8fe92aed V10
0x59: V22 = 0x21d
0x5c: JUMPI 0x21d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5d
[0x5d:0x67]
---
Predecessors: [0x52]
Successors: [0x68, 0x24b]
---
0x5d DUP1
0x5e PUSH4 0x90fe5609
0x63 EQ
0x64 PUSH2 0x24b
0x67 JUMPI
---
0x5e: V23 = 0x90fe5609
0x63: V24 = EQ 0x90fe5609 V10
0x64: V25 = 0x24b
0x67: JUMPI 0x24b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x68
[0x68:0x72]
---
Predecessors: [0x5d]
Successors: [0x73, 0x263]
---
0x68 DUP1
0x69 PUSH4 0xa201d102
0x6e EQ
0x6f PUSH2 0x263
0x72 JUMPI
---
0x69: V26 = 0xa201d102
0x6e: V27 = EQ 0xa201d102 V10
0x6f: V28 = 0x263
0x72: JUMPI 0x263 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x73
[0x73:0x7d]
---
Predecessors: [0x68]
Successors: [0x7e, 0x285]
---
0x73 DUP1
0x74 PUSH4 0xc19d93fb
0x79 EQ
0x7a PUSH2 0x285
0x7d JUMPI
---
0x74: V29 = 0xc19d93fb
0x79: V30 = EQ 0xc19d93fb V10
0x7a: V31 = 0x285
0x7d: JUMPI 0x285 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x7e
[0x7e:0x88]
---
Predecessors: [0x73]
Successors: [0x89, 0x315]
---
0x7e DUP1
0x7f PUSH4 0xc8dda301
0x84 EQ
0x85 PUSH2 0x315
0x88 JUMPI
---
0x7f: V32 = 0xc8dda301
0x84: V33 = EQ 0xc8dda301 V10
0x85: V34 = 0x315
0x88: JUMPI 0x315 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x89
[0x89:0x93]
---
Predecessors: [0x7e]
Successors: [0x94, 0x337]
---
0x89 DUP1
0x8a PUSH4 0xffa1ad74
0x8f EQ
0x90 PUSH2 0x337
0x93 JUMPI
---
0x8a: V35 = 0xffa1ad74
0x8f: V36 = EQ 0xffa1ad74 V10
0x90: V37 = 0x337
0x93: JUMPI 0x337 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x0, 0x89]
Successors: [0x98]
---
0x94 JUMPDEST
0x95 PUSH2 0x1ad
---
0x94: JUMPDEST 
0x95: V38 = 0x1ad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ad]
Exit stack: [V10, 0x1ad]

================================

Block 0x98
[0x98:0x104]
---
Predecessors: [0x94]
Successors: [0x105, 0x106]
---
0x98 JUMPDEST
0x99 PUSH1 0x2
0x9b SLOAD
0x9c PUSH1 0x40
0x9e DUP1
0x9f MLOAD
0xa0 PUSH1 0x0
0xa2 PUSH1 0x20
0xa4 SWAP2
0xa5 DUP3
0xa6 ADD
0xa7 DUP2
0xa8 SWAP1
0xa9 MSTORE
0xaa DUP3
0xab MLOAD
0xac PUSH32 0x27e235e300000000000000000000000000000000000000000000000000000000
0xcd DUP2
0xce MSTORE
0xcf PUSH1 0x1
0xd1 PUSH1 0xa0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 SUB
0xd7 CALLER
0xd8 DUP2
0xd9 AND
0xda PUSH1 0x4
0xdc DUP4
0xdd ADD
0xde MSTORE
0xdf SWAP4
0xe0 MLOAD
0xe1 SWAP4
0xe2 SWAP1
0xe3 SWAP5
0xe4 AND
0xe5 SWAP4
0xe6 PUSH4 0x27e235e3
0xeb SWAP4
0xec PUSH1 0x24
0xee DUP1
0xef DUP4
0xf0 ADD
0xf1 SWAP5
0xf2 SWAP4
0xf3 SWAP2
0xf4 SWAP3
0xf5 DUP4
0xf6 SWAP1
0xf7 SUB
0xf8 ADD
0xf9 SWAP1
0xfa DUP3
0xfb SWAP1
0xfc DUP8
0xfd DUP1
0xfe EXTCODESIZE
0xff ISZERO
0x100 ISZERO
0x101 PUSH2 0x106
0x104 JUMPI
---
0x98: JUMPDEST 
0x99: V39 = 0x2
0x9b: V40 = S[0x2]
0x9c: V41 = 0x40
0x9f: V42 = M[0x40]
0xa0: V43 = 0x0
0xa2: V44 = 0x20
0xa6: V45 = ADD 0x20 V42
0xa9: M[V45] = 0x0
0xab: V46 = M[0x40]
0xac: V47 = 0x27e235e300000000000000000000000000000000000000000000000000000000
0xce: M[V46] = 0x27e235e300000000000000000000000000000000000000000000000000000000
0xcf: V48 = 0x1
0xd1: V49 = 0xa0
0xd3: V50 = 0x2
0xd5: V51 = EXP 0x2 0xa0
0xd6: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V53 = CALLER
0xd9: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xda: V55 = 0x4
0xdd: V56 = ADD V46 0x4
0xde: M[V56] = V54
0xe0: V57 = M[0x40]
0xe4: V58 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V59 = 0x27e235e3
0xec: V60 = 0x24
0xf0: V61 = ADD V46 0x24
0xf7: V62 = SUB V46 V57
0xf8: V63 = ADD V62 0x24
0xfe: V64 = EXTCODESIZE V58
0xff: V65 = ISZERO V64
0x100: V66 = ISZERO V65
0x101: V67 = 0x106
0x104: JUMPI 0x106 V66
---
Entry stack: [V10, 0x1ad]
Stack pops: 0
Stack additions: [V58, 0x27e235e3, V61, 0x20, V57, V63, V57, 0x0, V58]
Exit stack: [V10, 0x1ad, V58, 0x27e235e3, V61, 0x20, V57, V63, V57, 0x0, V58]

================================

Block 0x105
[0x105:0x105]
---
Predecessors: [0x98]
Successors: []
---
0x105 INVALID
---
0x105: INVALID 
---
Entry stack: [V10, 0x1ad, V58, 0x27e235e3, V61, 0x20, V57, V63, V57, 0x0, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ad, V58, 0x27e235e3, V61, 0x20, V57, V63, V57, 0x0, V58]

================================

Block 0x106
[0x106:0x112]
---
Predecessors: [0x98]
Successors: [0x113, 0x114]
---
0x106 JUMPDEST
0x107 PUSH2 0x2c6
0x10a GAS
0x10b SUB
0x10c CALL
0x10d ISZERO
0x10e ISZERO
0x10f PUSH2 0x114
0x112 JUMPI
---
0x106: JUMPDEST 
0x107: V68 = 0x2c6
0x10a: V69 = GAS
0x10b: V70 = SUB V69 0x2c6
0x10c: V71 = CALL V70 V58 0x0 V57 V63 V57 0x20
0x10d: V72 = ISZERO V71
0x10e: V73 = ISZERO V72
0x10f: V74 = 0x114
0x112: JUMPI 0x114 V73
---
Entry stack: [V10, 0x1ad, V58, 0x27e235e3, V61, 0x20, V57, V63, V57, 0x0, V58]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1ad, V58, 0x27e235e3, V61]

================================

Block 0x113
[0x113:0x113]
---
Predecessors: [0x106]
Successors: []
---
0x113 INVALID
---
0x113: INVALID 
---
Entry stack: [V10, 0x1ad, V58, 0x27e235e3, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ad, V58, 0x27e235e3, V61]

================================

Block 0x114
[0x114:0x122]
---
Predecessors: [0x106]
Successors: [0x123, 0x128]
---
0x114 JUMPDEST
0x115 POP
0x116 POP
0x117 PUSH1 0x40
0x119 MLOAD
0x11a MLOAD
0x11b ISZERO
0x11c ISZERO
0x11d SWAP1
0x11e POP
0x11f PUSH2 0x128
0x122 JUMPI
---
0x114: JUMPDEST 
0x117: V75 = 0x40
0x119: V76 = M[0x40]
0x11a: V77 = M[V76]
0x11b: V78 = ISZERO V77
0x11c: V79 = ISZERO V78
0x11f: V80 = 0x128
0x122: JUMPI 0x128 V79
---
Entry stack: [V10, 0x1ad, V58, 0x27e235e3, V61]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x1ad]

================================

Block 0x123
[0x123:0x127]
---
Predecessors: [0x114]
Successors: []
---
0x123 PUSH1 0x0
0x125 PUSH1 0x0
0x127 REVERT
---
0x123: V81 = 0x0
0x125: V82 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ad]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ad]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x114]
Successors: [0x12c]
---
0x128 JUMPDEST
0x129 PUSH1 0x1
0x12b DUP1
---
0x128: JUMPDEST 
0x129: V83 = 0x1
---
Entry stack: [V10, 0x1ad]
Stack pops: 0
Stack additions: [0x1, 0x1]
Exit stack: [V10, 0x1ad, 0x1, 0x1]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x128]
Successors: [0x3c7]
---
0x12c JUMPDEST
0x12d PUSH2 0x134
0x130 PUSH2 0x3c7
0x133 JUMP
---
0x12c: JUMPDEST 
0x12d: V84 = 0x134
0x130: V85 = 0x3c7
0x133: JUMP 0x3c7
---
Entry stack: [V10, 0x1ad, 0x1, 0x1]
Stack pops: 0
Stack additions: [0x134]
Exit stack: [V10, 0x1ad, 0x1, 0x1, 0x134]

================================

Block 0x134
[0x134:0x13d]
---
Predecessors: [0x3fc]
Successors: [0x13e, 0x13f]
---
0x134 JUMPDEST
0x135 PUSH1 0x2
0x137 DUP2
0x138 GT
0x139 ISZERO
0x13a PUSH2 0x13f
0x13d JUMPI
---
0x134: JUMPDEST 
0x135: V86 = 0x2
0x138: V87 = GT {0x0, 0x1, 0x2} 0x2
0x139: V88 = ISZERO V87
0x13a: V89 = 0x13f
0x13d: JUMPI 0x13f V88
---
Entry stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x13e
[0x13e:0x13e]
---
Predecessors: [0x134]
Successors: []
---
0x13e INVALID
---
0x13e: INVALID 
---
Entry stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x13f
[0x13f:0x144]
---
Predecessors: [0x134]
Successors: [0x145, 0x14a]
---
0x13f JUMPDEST
0x140 EQ
0x141 PUSH2 0x14a
0x144 JUMPI
---
0x13f: JUMPDEST 
0x140: V90 = EQ {0x0, 0x1, 0x2} {0x1, 0x3}
0x141: V91 = 0x14a
0x144: JUMPI 0x14a V90
---
Entry stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S2]

================================

Block 0x145
[0x145:0x149]
---
Predecessors: [0x13f]
Successors: []
---
0x145 PUSH1 0x0
0x147 PUSH1 0x0
0x149 REVERT
---
0x145: V92 = 0x0
0x147: V93 = 0x0
0x149: REVERT 0x0 0x0
---
Entry stack: [V10, {0x1ad, 0x295}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S0]

================================

Block 0x14a
[0x14a:0x15a]
---
Predecessors: [0x13f]
Successors: [0x15b, 0x181]
---
0x14a JUMPDEST
0x14b PUSH8 0xde0b6b3a7640000
0x154 CALLVALUE
0x155 GT
0x156 DUP1
0x157 PUSH2 0x181
0x15a JUMPI
---
0x14a: JUMPDEST 
0x14b: V94 = 0xde0b6b3a7640000
0x154: V95 = CALLVALUE
0x155: V96 = GT V95 0xde0b6b3a7640000
0x157: V97 = 0x181
0x15a: JUMPI 0x181 V96
---
Entry stack: [V10, {0x1ad, 0x295}, S0]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V10, {0x1ad, 0x295}, S0, V96]

================================

Block 0x15b
[0x15b:0x180]
---
Predecessors: [0x14a]
Successors: [0x181]
---
0x15b POP
0x15c PUSH1 0x40
0x15e MLOAD
0x15f PUSH1 0x1
0x161 PUSH1 0xa0
0x163 PUSH1 0x2
0x165 EXP
0x166 SUB
0x167 CALLER
0x168 AND
0x169 SWAP1
0x16a CALLVALUE
0x16b DUP1
0x16c ISZERO
0x16d PUSH2 0x8fc
0x170 MUL
0x171 SWAP2
0x172 PUSH1 0x0
0x174 DUP2
0x175 DUP2
0x176 DUP2
0x177 DUP6
0x178 DUP9
0x179 DUP9
0x17a CALL
0x17b SWAP4
0x17c POP
0x17d POP
0x17e POP
0x17f POP
0x180 ISZERO
---
0x15c: V98 = 0x40
0x15e: V99 = M[0x40]
0x15f: V100 = 0x1
0x161: V101 = 0xa0
0x163: V102 = 0x2
0x165: V103 = EXP 0x2 0xa0
0x166: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V105 = CALLER
0x168: V106 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x16a: V107 = CALLVALUE
0x16c: V108 = ISZERO V107
0x16d: V109 = 0x8fc
0x170: V110 = MUL 0x8fc V108
0x172: V111 = 0x0
0x17a: V112 = CALL V110 V106 V107 V99 0x0 V99 0x0
0x180: V113 = ISZERO V112
---
Entry stack: [V10, {0x1ad, 0x295}, S1, V96]
Stack pops: 1
Stack additions: [V113]
Exit stack: [V10, {0x1ad, 0x295}, S1, V113]

================================

Block 0x181
[0x181:0x186]
---
Predecessors: [0x14a, 0x15b]
Successors: [0x187, 0x18c]
---
0x181 JUMPDEST
0x182 ISZERO
0x183 PUSH2 0x18c
0x186 JUMPI
---
0x181: JUMPDEST 
0x182: V114 = ISZERO S0
0x183: V115 = 0x18c
0x186: JUMPI 0x18c V114
---
Entry stack: [V10, {0x1ad, 0x295}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S1]

================================

Block 0x187
[0x187:0x18b]
---
Predecessors: [0x181]
Successors: []
---
0x187 PUSH1 0x0
0x189 PUSH1 0x0
0x18b REVERT
---
0x187: V116 = 0x0
0x189: V117 = 0x0
0x18b: REVERT 0x0 0x0
---
Entry stack: [V10, {0x1ad, 0x295}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S0]

================================

Block 0x18c
[0x18c:0x1a7]
---
Predecessors: [0x181]
Successors: [0x1a8]
---
0x18c JUMPDEST
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 CALLER
0x196 AND
0x197 PUSH1 0x0
0x199 SWAP1
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x8
0x19e PUSH1 0x20
0x1a0 MSTORE
0x1a1 PUSH1 0x40
0x1a3 SWAP1
0x1a4 SHA3
0x1a5 CALLVALUE
0x1a6 SWAP1
0x1a7 SSTORE
---
0x18c: JUMPDEST 
0x18d: V118 = 0x1
0x18f: V119 = 0xa0
0x191: V120 = 0x2
0x193: V121 = EXP 0x2 0xa0
0x194: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V123 = CALLER
0x196: V124 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x197: V125 = 0x0
0x19b: M[0x0] = V124
0x19c: V126 = 0x8
0x19e: V127 = 0x20
0x1a0: M[0x20] = 0x8
0x1a1: V128 = 0x40
0x1a4: V129 = SHA3 0x0 0x40
0x1a5: V130 = CALLVALUE
0x1a7: S[V129] = V130
---
Entry stack: [V10, {0x1ad, 0x295}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S0]

================================

Block 0x1a8
[0x1a8:0x1a8]
---
Predecessors: [0x18c]
Successors: [0x1a9]
---
0x1a8 JUMPDEST
---
0x1a8: JUMPDEST 
---
Entry stack: [V10, {0x1ad, 0x295}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S0]

================================

Block 0x1a9
[0x1a9:0x1aa]
---
Predecessors: [0x1a8]
Successors: [0x1ab]
---
0x1a9 JUMPDEST
0x1aa POP
---
0x1a9: JUMPDEST 
---
Entry stack: [V10, {0x1ad, 0x295}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}]

================================

Block 0x1ab
[0x1ab:0x1ac]
---
Predecessors: [0x1a9]
Successors: [0x1ad, 0x295]
---
0x1ab JUMPDEST
0x1ac JUMP
---
0x1ab: JUMPDEST 
0x1ac: JUMP {0x1ad, 0x295}
---
Entry stack: [V10, {0x1ad, 0x295}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ad
[0x1ad:0x1ae]
---
Predecessors: [0x1ab, 0x47d, 0x524, 0x5e6]
Successors: []
---
0x1ad JUMPDEST
0x1ae STOP
---
0x1ad: JUMPDEST 
0x1ae: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x1af
[0x1af:0x1b5]
---
Predecessors: [0xb]
Successors: [0x1b6, 0x1b7]
---
0x1af JUMPDEST
0x1b0 CALLVALUE
0x1b1 ISZERO
0x1b2 PUSH2 0x1b7
0x1b5 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V131 = CALLVALUE
0x1b1: V132 = ISZERO V131
0x1b2: V133 = 0x1b7
0x1b5: JUMPI 0x1b7 V132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b6
[0x1b6:0x1b6]
---
Predecessors: [0x1af]
Successors: []
---
0x1b6 INVALID
---
0x1b6: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b7
[0x1b7:0x1be]
---
Predecessors: [0x1af]
Successors: [0x3ff]
---
0x1b7 JUMPDEST
0x1b8 PUSH2 0x1bf
0x1bb PUSH2 0x3ff
0x1be JUMP
---
0x1b7: JUMPDEST 
0x1b8: V134 = 0x1bf
0x1bb: V135 = 0x3ff
0x1be: JUMP 0x3ff
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bf]
Exit stack: [V10, 0x1bf]

================================

Block 0x1bf
[0x1bf:0x1d0]
---
Predecessors: [0x422, 0x425, 0x4dc, 0x528, 0x5e9]
Successors: []
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x40
0x1c2 DUP1
0x1c3 MLOAD
0x1c4 SWAP2
0x1c5 DUP3
0x1c6 MSTORE
0x1c7 MLOAD
0x1c8 SWAP1
0x1c9 DUP2
0x1ca SWAP1
0x1cb SUB
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf SWAP1
0x1d0 RETURN
---
0x1bf: JUMPDEST 
0x1c0: V136 = 0x40
0x1c3: V137 = M[0x40]
0x1c6: M[V137] = S0
0x1c7: V138 = M[0x40]
0x1cb: V139 = SUB V137 V138
0x1cc: V140 = 0x20
0x1ce: V141 = ADD 0x20 V139
0x1d0: RETURN V138 V141
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x1d1
[0x1d1:0x1d7]
---
Predecessors: [0x3d]
Successors: [0x1d8, 0x1d9]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0x1d9
0x1d7 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V142 = CALLVALUE
0x1d3: V143 = ISZERO V142
0x1d4: V144 = 0x1d9
0x1d7: JUMPI 0x1d9 V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d8
[0x1d8:0x1d8]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d8 INVALID
---
0x1d8: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d9
[0x1d9:0x1ec]
---
Predecessors: [0x1d1]
Successors: [0x425]
---
0x1d9 JUMPDEST
0x1da PUSH2 0x1bf
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 PUSH1 0x4
0x1e7 CALLDATALOAD
0x1e8 AND
0x1e9 PUSH2 0x425
0x1ec JUMP
---
0x1d9: JUMPDEST 
0x1da: V145 = 0x1bf
0x1dd: V146 = 0x1
0x1df: V147 = 0xa0
0x1e1: V148 = 0x2
0x1e3: V149 = EXP 0x2 0xa0
0x1e4: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V151 = 0x4
0x1e7: V152 = CALLDATALOAD 0x4
0x1e8: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V154 = 0x425
0x1ec: JUMP 0x425
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bf, V153]
Exit stack: [V10, 0x1bf, V153]

================================

Block 0x1ed
[0x1ed:0x1fe]
---
Predecessors: []
Successors: []
---
0x1ed JUMPDEST
0x1ee PUSH1 0x40
0x1f0 DUP1
0x1f1 MLOAD
0x1f2 SWAP2
0x1f3 DUP3
0x1f4 MSTORE
0x1f5 MLOAD
0x1f6 SWAP1
0x1f7 DUP2
0x1f8 SWAP1
0x1f9 SUB
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe RETURN
---
0x1ed: JUMPDEST 
0x1ee: V155 = 0x40
0x1f1: V156 = M[0x40]
0x1f4: M[V156] = S0
0x1f5: V157 = M[0x40]
0x1f9: V158 = SUB V156 V157
0x1fa: V159 = 0x20
0x1fc: V160 = ADD 0x20 V158
0x1fe: RETURN V157 V160
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ff
[0x1ff:0x205]
---
Predecessors: [0x47]
Successors: [0x206, 0x207]
---
0x1ff JUMPDEST
0x200 CALLVALUE
0x201 ISZERO
0x202 PUSH2 0x207
0x205 JUMPI
---
0x1ff: JUMPDEST 
0x200: V161 = CALLVALUE
0x201: V162 = ISZERO V161
0x202: V163 = 0x207
0x205: JUMPI 0x207 V162
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x206
[0x206:0x206]
---
Predecessors: [0x1ff]
Successors: []
---
0x206 INVALID
---
0x206: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x207
[0x207:0x21a]
---
Predecessors: [0x1ff]
Successors: [0x437]
---
0x207 JUMPDEST
0x208 PUSH2 0x1ad
0x20b PUSH1 0x1
0x20d PUSH1 0xa0
0x20f PUSH1 0x2
0x211 EXP
0x212 SUB
0x213 PUSH1 0x4
0x215 CALLDATALOAD
0x216 AND
0x217 PUSH2 0x437
0x21a JUMP
---
0x207: JUMPDEST 
0x208: V164 = 0x1ad
0x20b: V165 = 0x1
0x20d: V166 = 0xa0
0x20f: V167 = 0x2
0x211: V168 = EXP 0x2 0xa0
0x212: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x213: V170 = 0x4
0x215: V171 = CALLDATALOAD 0x4
0x216: V172 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x217: V173 = 0x437
0x21a: JUMP 0x437
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ad, V172]
Exit stack: [V10, 0x1ad, V172]

================================

Block 0x21b
[0x21b:0x21c]
---
Predecessors: []
Successors: []
---
0x21b JUMPDEST
0x21c STOP
---
0x21b: JUMPDEST 
0x21c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21d
[0x21d:0x223]
---
Predecessors: [0x52]
Successors: [0x224, 0x225]
---
0x21d JUMPDEST
0x21e CALLVALUE
0x21f ISZERO
0x220 PUSH2 0x225
0x223 JUMPI
---
0x21d: JUMPDEST 
0x21e: V174 = CALLVALUE
0x21f: V175 = ISZERO V174
0x220: V176 = 0x225
0x223: JUMPI 0x225 V175
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x224
[0x224:0x224]
---
Predecessors: [0x21d]
Successors: []
---
0x224 INVALID
---
0x224: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x225
[0x225:0x238]
---
Predecessors: [0x21d]
Successors: [0x480]
---
0x225 JUMPDEST
0x226 PUSH2 0x1bf
0x229 PUSH1 0x1
0x22b PUSH1 0xa0
0x22d PUSH1 0x2
0x22f EXP
0x230 SUB
0x231 PUSH1 0x4
0x233 CALLDATALOAD
0x234 AND
0x235 PUSH2 0x480
0x238 JUMP
---
0x225: JUMPDEST 
0x226: V177 = 0x1bf
0x229: V178 = 0x1
0x22b: V179 = 0xa0
0x22d: V180 = 0x2
0x22f: V181 = EXP 0x2 0xa0
0x230: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V183 = 0x4
0x233: V184 = CALLDATALOAD 0x4
0x234: V185 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x235: V186 = 0x480
0x238: JUMP 0x480
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bf, V185]
Exit stack: [V10, 0x1bf, V185]

================================

Block 0x239
[0x239:0x24a]
---
Predecessors: []
Successors: []
---
0x239 JUMPDEST
0x23a PUSH1 0x40
0x23c DUP1
0x23d MLOAD
0x23e SWAP2
0x23f DUP3
0x240 MSTORE
0x241 MLOAD
0x242 SWAP1
0x243 DUP2
0x244 SWAP1
0x245 SUB
0x246 PUSH1 0x20
0x248 ADD
0x249 SWAP1
0x24a RETURN
---
0x239: JUMPDEST 
0x23a: V187 = 0x40
0x23d: V188 = M[0x40]
0x240: M[V188] = S0
0x241: V189 = M[0x40]
0x245: V190 = SUB V188 V189
0x246: V191 = 0x20
0x248: V192 = ADD 0x20 V190
0x24a: RETURN V189 V192
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x24b
[0x24b:0x251]
---
Predecessors: [0x5d]
Successors: [0x252, 0x253]
---
0x24b JUMPDEST
0x24c CALLVALUE
0x24d ISZERO
0x24e PUSH2 0x253
0x251 JUMPI
---
0x24b: JUMPDEST 
0x24c: V193 = CALLVALUE
0x24d: V194 = ISZERO V193
0x24e: V195 = 0x253
0x251: JUMPI 0x253 V194
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x252
[0x252:0x252]
---
Predecessors: [0x24b]
Successors: []
---
0x252 INVALID
---
0x252: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x253
[0x253:0x260]
---
Predecessors: [0x24b]
Successors: [0x4e2]
---
0x253 JUMPDEST
0x254 PUSH2 0x1ad
0x257 PUSH1 0x4
0x259 CALLDATALOAD
0x25a PUSH1 0x24
0x25c CALLDATALOAD
0x25d PUSH2 0x4e2
0x260 JUMP
---
0x253: JUMPDEST 
0x254: V196 = 0x1ad
0x257: V197 = 0x4
0x259: V198 = CALLDATALOAD 0x4
0x25a: V199 = 0x24
0x25c: V200 = CALLDATALOAD 0x24
0x25d: V201 = 0x4e2
0x260: JUMP 0x4e2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ad, V198, V200]
Exit stack: [V10, 0x1ad, V198, V200]

================================

Block 0x261
[0x261:0x262]
---
Predecessors: []
Successors: []
---
0x261 JUMPDEST
0x262 STOP
---
0x261: JUMPDEST 
0x262: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x263
[0x263:0x269]
---
Predecessors: [0x68]
Successors: [0x26a, 0x26b]
---
0x263 JUMPDEST
0x264 CALLVALUE
0x265 ISZERO
0x266 PUSH2 0x26b
0x269 JUMPI
---
0x263: JUMPDEST 
0x264: V202 = CALLVALUE
0x265: V203 = ISZERO V202
0x266: V204 = 0x26b
0x269: JUMPI 0x26b V203
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26a
[0x26a:0x26a]
---
Predecessors: [0x263]
Successors: []
---
0x26a INVALID
---
0x26a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26b
[0x26b:0x272]
---
Predecessors: [0x263]
Successors: [0x528]
---
0x26b JUMPDEST
0x26c PUSH2 0x1bf
0x26f PUSH2 0x528
0x272 JUMP
---
0x26b: JUMPDEST 
0x26c: V205 = 0x1bf
0x26f: V206 = 0x528
0x272: JUMP 0x528
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bf]
Exit stack: [V10, 0x1bf]

================================

Block 0x273
[0x273:0x284]
---
Predecessors: []
Successors: []
---
0x273 JUMPDEST
0x274 PUSH1 0x40
0x276 DUP1
0x277 MLOAD
0x278 SWAP2
0x279 DUP3
0x27a MSTORE
0x27b MLOAD
0x27c SWAP1
0x27d DUP2
0x27e SWAP1
0x27f SUB
0x280 PUSH1 0x20
0x282 ADD
0x283 SWAP1
0x284 RETURN
---
0x273: JUMPDEST 
0x274: V207 = 0x40
0x277: V208 = M[0x40]
0x27a: M[V208] = S0
0x27b: V209 = M[0x40]
0x27f: V210 = SUB V208 V209
0x280: V211 = 0x20
0x282: V212 = ADD 0x20 V210
0x284: RETURN V209 V212
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x285
[0x285:0x28b]
---
Predecessors: [0x73]
Successors: [0x28c, 0x28d]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 ISZERO
0x288 PUSH2 0x28d
0x28b JUMPI
---
0x285: JUMPDEST 
0x286: V213 = CALLVALUE
0x287: V214 = ISZERO V213
0x288: V215 = 0x28d
0x28b: JUMPI 0x28d V214
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28c
[0x28c:0x28c]
---
Predecessors: [0x285]
Successors: []
---
0x28c INVALID
---
0x28c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28d
[0x28d:0x294]
---
Predecessors: [0x285]
Successors: [0x52e]
---
0x28d JUMPDEST
0x28e PUSH2 0x295
0x291 PUSH2 0x52e
0x294 JUMP
---
0x28d: JUMPDEST 
0x28e: V216 = 0x295
0x291: V217 = 0x52e
0x294: JUMP 0x52e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x295]
Exit stack: [V10, 0x295]

================================

Block 0x295
[0x295:0x2ba]
---
Predecessors: [0x1ab, 0x5e6, 0x5ef]
Successors: [0x2bb, 0x2db]
---
0x295 JUMPDEST
0x296 PUSH1 0x40
0x298 DUP1
0x299 MLOAD
0x29a PUSH1 0x20
0x29c DUP1
0x29d DUP3
0x29e MSTORE
0x29f DUP4
0x2a0 MLOAD
0x2a1 DUP2
0x2a2 DUP4
0x2a3 ADD
0x2a4 MSTORE
0x2a5 DUP4
0x2a6 MLOAD
0x2a7 SWAP2
0x2a8 SWAP3
0x2a9 DUP4
0x2aa SWAP3
0x2ab SWAP1
0x2ac DUP4
0x2ad ADD
0x2ae SWAP2
0x2af DUP6
0x2b0 ADD
0x2b1 SWAP1
0x2b2 DUP1
0x2b3 DUP4
0x2b4 DUP4
0x2b5 DUP3
0x2b6 ISZERO
0x2b7 PUSH2 0x2db
0x2ba JUMPI
---
0x295: JUMPDEST 
0x296: V218 = 0x40
0x299: V219 = M[0x40]
0x29a: V220 = 0x20
0x29e: M[V219] = 0x20
0x2a0: V221 = M[S0]
0x2a3: V222 = ADD V219 0x20
0x2a4: M[V222] = V221
0x2a6: V223 = M[S0]
0x2ad: V224 = ADD V219 0x40
0x2b0: V225 = ADD S0 0x20
0x2b6: V226 = ISZERO V223
0x2b7: V227 = 0x2db
0x2ba: JUMPI 0x2db V226
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: [S0, V219, V219, V224, V225, V223, V223, V224, V225]
Exit stack: [V10, S1, S0, V219, V219, V224, V225, V223, V223, V224, V225]

================================

Block 0x2bb
[0x2bb:0x2c8]
---
Predecessors: [0x295, 0x2c9, 0x37b]
Successors: [0x2c9, 0x2db]
---
0x2bb JUMPDEST
0x2bc DUP1
0x2bd MLOAD
0x2be DUP3
0x2bf MSTORE
0x2c0 PUSH1 0x20
0x2c2 DUP4
0x2c3 GT
0x2c4 ISZERO
0x2c5 PUSH2 0x2db
0x2c8 JUMPI
---
0x2bb: JUMPDEST 
0x2bd: V228 = M[S0]
0x2bf: M[S1] = V228
0x2c0: V229 = 0x20
0x2c3: V230 = GT S2 0x20
0x2c4: V231 = ISZERO V230
0x2c5: V232 = 0x2db
0x2c8: JUMPI 0x2db V231
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x2c9
[0x2c9:0x2da]
---
Predecessors: [0x2bb]
Successors: [0x2bb]
---
0x2c9 PUSH1 0x1f
0x2cb NOT
0x2cc SWAP1
0x2cd SWAP3
0x2ce ADD
0x2cf SWAP2
0x2d0 PUSH1 0x20
0x2d2 SWAP2
0x2d3 DUP3
0x2d4 ADD
0x2d5 SWAP2
0x2d6 ADD
0x2d7 PUSH2 0x2bb
0x2da JUMP
---
0x2c9: V233 = 0x1f
0x2cb: V234 = NOT 0x1f
0x2ce: V235 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2d0: V236 = 0x20
0x2d4: V237 = ADD 0x20 S1
0x2d6: V238 = ADD 0x20 S0
0x2d7: V239 = 0x2bb
0x2da: JUMP 0x2bb
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V235, V237, V238]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, V235, V237, V238]

================================

Block 0x2db
[0x2db:0x2ed]
---
Predecessors: [0x295, 0x2bb, 0x347, 0x36d]
Successors: [0x2ee, 0x307]
---
0x2db JUMPDEST
0x2dc POP
0x2dd POP
0x2de POP
0x2df SWAP1
0x2e0 POP
0x2e1 SWAP1
0x2e2 DUP2
0x2e3 ADD
0x2e4 SWAP1
0x2e5 PUSH1 0x1f
0x2e7 AND
0x2e8 DUP1
0x2e9 ISZERO
0x2ea PUSH2 0x307
0x2ed JUMPI
---
0x2db: JUMPDEST 
0x2e3: V240 = ADD S3 S5
0x2e5: V241 = 0x1f
0x2e7: V242 = AND 0x1f S3
0x2e9: V243 = ISZERO V242
0x2ea: V244 = 0x307
0x2ed: JUMPI 0x307 V243
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V240, V242]
Exit stack: [V10, S9, S8, S7, S6, V240, V242]

================================

Block 0x2ee
[0x2ee:0x306]
---
Predecessors: [0x2db]
Successors: [0x307]
---
0x2ee DUP1
0x2ef DUP3
0x2f0 SUB
0x2f1 DUP1
0x2f2 MLOAD
0x2f3 PUSH1 0x1
0x2f5 DUP4
0x2f6 PUSH1 0x20
0x2f8 SUB
0x2f9 PUSH2 0x100
0x2fc EXP
0x2fd SUB
0x2fe NOT
0x2ff AND
0x300 DUP2
0x301 MSTORE
0x302 PUSH1 0x20
0x304 ADD
0x305 SWAP2
0x306 POP
---
0x2f0: V245 = SUB V240 V242
0x2f2: V246 = M[V245]
0x2f3: V247 = 0x1
0x2f6: V248 = 0x20
0x2f8: V249 = SUB 0x20 V242
0x2f9: V250 = 0x100
0x2fc: V251 = EXP 0x100 V249
0x2fd: V252 = SUB V251 0x1
0x2fe: V253 = NOT V252
0x2ff: V254 = AND V253 V246
0x301: M[V245] = V254
0x302: V255 = 0x20
0x304: V256 = ADD 0x20 V245
---
Entry stack: [V10, S5, S4, S3, S2, V240, V242]
Stack pops: 2
Stack additions: [V256, S0]
Exit stack: [V10, S5, S4, S3, S2, V256, V242]

================================

Block 0x307
[0x307:0x314]
---
Predecessors: [0x2db, 0x2ee, 0x38d]
Successors: []
---
0x307 JUMPDEST
0x308 POP
0x309 SWAP3
0x30a POP
0x30b POP
0x30c POP
0x30d PUSH1 0x40
0x30f MLOAD
0x310 DUP1
0x311 SWAP2
0x312 SUB
0x313 SWAP1
0x314 RETURN
---
0x307: JUMPDEST 
0x30d: V257 = 0x40
0x30f: V258 = M[0x40]
0x312: V259 = SUB S1 V258
0x314: RETURN V258 V259
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S5]

================================

Block 0x315
[0x315:0x31b]
---
Predecessors: [0x7e]
Successors: [0x31c, 0x31d]
---
0x315 JUMPDEST
0x316 CALLVALUE
0x317 ISZERO
0x318 PUSH2 0x31d
0x31b JUMPI
---
0x315: JUMPDEST 
0x316: V260 = CALLVALUE
0x317: V261 = ISZERO V260
0x318: V262 = 0x31d
0x31b: JUMPI 0x31d V261
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31c
[0x31c:0x31c]
---
Predecessors: [0x315]
Successors: []
---
0x31c INVALID
---
0x31c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31d
[0x31d:0x324]
---
Predecessors: [0x315]
Successors: [0x5e9]
---
0x31d JUMPDEST
0x31e PUSH2 0x1bf
0x321 PUSH2 0x5e9
0x324 JUMP
---
0x31d: JUMPDEST 
0x31e: V263 = 0x1bf
0x321: V264 = 0x5e9
0x324: JUMP 0x5e9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bf]
Exit stack: [V10, 0x1bf]

================================

Block 0x325
[0x325:0x336]
---
Predecessors: []
Successors: []
---
0x325 JUMPDEST
0x326 PUSH1 0x40
0x328 DUP1
0x329 MLOAD
0x32a SWAP2
0x32b DUP3
0x32c MSTORE
0x32d MLOAD
0x32e SWAP1
0x32f DUP2
0x330 SWAP1
0x331 SUB
0x332 PUSH1 0x20
0x334 ADD
0x335 SWAP1
0x336 RETURN
---
0x325: JUMPDEST 
0x326: V265 = 0x40
0x329: V266 = M[0x40]
0x32c: M[V266] = S0
0x32d: V267 = M[0x40]
0x331: V268 = SUB V266 V267
0x332: V269 = 0x20
0x334: V270 = ADD 0x20 V268
0x336: RETURN V267 V270
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x337
[0x337:0x33d]
---
Predecessors: [0x89]
Successors: [0x33e, 0x33f]
---
0x337 JUMPDEST
0x338 CALLVALUE
0x339 ISZERO
0x33a PUSH2 0x33f
0x33d JUMPI
---
0x337: JUMPDEST 
0x338: V271 = CALLVALUE
0x339: V272 = ISZERO V271
0x33a: V273 = 0x33f
0x33d: JUMPI 0x33f V272
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33e
[0x33e:0x33e]
---
Predecessors: [0x337]
Successors: []
---
0x33e INVALID
---
0x33e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33f
[0x33f:0x346]
---
Predecessors: [0x337]
Successors: [0x5ef]
---
0x33f JUMPDEST
0x340 PUSH2 0x295
0x343 PUSH2 0x5ef
0x346 JUMP
---
0x33f: JUMPDEST 
0x340: V274 = 0x295
0x343: V275 = 0x5ef
0x346: JUMP 0x5ef
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x295]
Exit stack: [V10, 0x295]

================================

Block 0x347
[0x347:0x36c]
---
Predecessors: []
Successors: [0x2db, 0x36d]
---
0x347 JUMPDEST
0x348 PUSH1 0x40
0x34a DUP1
0x34b MLOAD
0x34c PUSH1 0x20
0x34e DUP1
0x34f DUP3
0x350 MSTORE
0x351 DUP4
0x352 MLOAD
0x353 DUP2
0x354 DUP4
0x355 ADD
0x356 MSTORE
0x357 DUP4
0x358 MLOAD
0x359 SWAP2
0x35a SWAP3
0x35b DUP4
0x35c SWAP3
0x35d SWAP1
0x35e DUP4
0x35f ADD
0x360 SWAP2
0x361 DUP6
0x362 ADD
0x363 SWAP1
0x364 DUP1
0x365 DUP4
0x366 DUP4
0x367 DUP3
0x368 ISZERO
0x369 PUSH2 0x2db
0x36c JUMPI
---
0x347: JUMPDEST 
0x348: V276 = 0x40
0x34b: V277 = M[0x40]
0x34c: V278 = 0x20
0x350: M[V277] = 0x20
0x352: V279 = M[S0]
0x355: V280 = ADD V277 0x20
0x356: M[V280] = V279
0x358: V281 = M[S0]
0x35f: V282 = ADD V277 0x40
0x362: V283 = ADD S0 0x20
0x368: V284 = ISZERO V281
0x369: V285 = 0x2db
0x36c: JUMPI 0x2db V284
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V277, V277, V282, V283, V281, V281, V282, V283]
Exit stack: [S0, V277, V277, V282, V283, V281, V281, V282, V283]

================================

Block 0x36d
[0x36d:0x37a]
---
Predecessors: [0x347]
Successors: [0x2db, 0x37b]
---
0x36d JUMPDEST
0x36e DUP1
0x36f MLOAD
0x370 DUP3
0x371 MSTORE
0x372 PUSH1 0x20
0x374 DUP4
0x375 GT
0x376 ISZERO
0x377 PUSH2 0x2db
0x37a JUMPI
---
0x36d: JUMPDEST 
0x36f: V286 = M[V283]
0x371: M[V282] = V286
0x372: V287 = 0x20
0x375: V288 = GT V281 0x20
0x376: V289 = ISZERO V288
0x377: V290 = 0x2db
0x37a: JUMPI 0x2db V289
---
Entry stack: [S8, V277, V277, V282, V283, V281, V281, V282, V283]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V277, V277, V282, V283, V281, V281, V282, V283]

================================

Block 0x37b
[0x37b:0x38c]
---
Predecessors: [0x36d]
Successors: [0x2bb]
---
0x37b PUSH1 0x1f
0x37d NOT
0x37e SWAP1
0x37f SWAP3
0x380 ADD
0x381 SWAP2
0x382 PUSH1 0x20
0x384 SWAP2
0x385 DUP3
0x386 ADD
0x387 SWAP2
0x388 ADD
0x389 PUSH2 0x2bb
0x38c JUMP
---
0x37b: V291 = 0x1f
0x37d: V292 = NOT 0x1f
0x380: V293 = ADD V281 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x382: V294 = 0x20
0x386: V295 = ADD 0x20 V282
0x388: V296 = ADD 0x20 V283
0x389: V297 = 0x2bb
0x38c: JUMP 0x2bb
---
Entry stack: [S8, V277, V277, V282, V283, V281, V281, V282, V283]
Stack pops: 3
Stack additions: [V293, V295, V296]
Exit stack: [S8, V277, V277, V282, V283, V281, V293, V295, V296]

================================

Block 0x38d
[0x38d:0x39f]
---
Predecessors: []
Successors: [0x307, 0x3a0]
---
0x38d JUMPDEST
0x38e POP
0x38f POP
0x390 POP
0x391 SWAP1
0x392 POP
0x393 SWAP1
0x394 DUP2
0x395 ADD
0x396 SWAP1
0x397 PUSH1 0x1f
0x399 AND
0x39a DUP1
0x39b ISZERO
0x39c PUSH2 0x307
0x39f JUMPI
---
0x38d: JUMPDEST 
0x395: V298 = ADD S3 S5
0x397: V299 = 0x1f
0x399: V300 = AND 0x1f S3
0x39b: V301 = ISZERO V300
0x39c: V302 = 0x307
0x39f: JUMPI 0x307 V301
---
Entry stack: []
Stack pops: 6
Stack additions: [V298, V300]
Exit stack: [V298, V300]

================================

Block 0x3a0
[0x3a0:0x3b8]
---
Predecessors: [0x38d]
Successors: [0x3b9]
---
0x3a0 DUP1
0x3a1 DUP3
0x3a2 SUB
0x3a3 DUP1
0x3a4 MLOAD
0x3a5 PUSH1 0x1
0x3a7 DUP4
0x3a8 PUSH1 0x20
0x3aa SUB
0x3ab PUSH2 0x100
0x3ae EXP
0x3af SUB
0x3b0 NOT
0x3b1 AND
0x3b2 DUP2
0x3b3 MSTORE
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 SWAP2
0x3b8 POP
---
0x3a2: V303 = SUB V298 V300
0x3a4: V304 = M[V303]
0x3a5: V305 = 0x1
0x3a8: V306 = 0x20
0x3aa: V307 = SUB 0x20 V300
0x3ab: V308 = 0x100
0x3ae: V309 = EXP 0x100 V307
0x3af: V310 = SUB V309 0x1
0x3b0: V311 = NOT V310
0x3b1: V312 = AND V311 V304
0x3b3: M[V303] = V312
0x3b4: V313 = 0x20
0x3b6: V314 = ADD 0x20 V303
---
Entry stack: [V298, V300]
Stack pops: 2
Stack additions: [V314, S0]
Exit stack: [V314, V300]

================================

Block 0x3b9
[0x3b9:0x3c6]
---
Predecessors: [0x3a0]
Successors: []
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb SWAP3
0x3bc POP
0x3bd POP
0x3be POP
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 SWAP2
0x3c4 SUB
0x3c5 SWAP1
0x3c6 RETURN
---
0x3b9: JUMPDEST 
0x3bf: V315 = 0x40
0x3c1: V316 = M[0x40]
0x3c4: V317 = SUB V314 V316
0x3c6: RETURN V316 V317
---
Entry stack: [V314, V300]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x3c7
[0x3c7:0x3d1]
---
Predecessors: [0x12c, 0x536]
Successors: [0x3d2, 0x3d8]
---
0x3c7 JUMPDEST
0x3c8 PUSH1 0x0
0x3ca DUP1
0x3cb SLOAD
0x3cc ISZERO
0x3cd DUP1
0x3ce PUSH2 0x3d8
0x3d1 JUMPI
---
0x3c7: JUMPDEST 
0x3c8: V318 = 0x0
0x3cb: V319 = S[0x0]
0x3cc: V320 = ISZERO V319
0x3ce: V321 = 0x3d8
0x3d1: JUMPI 0x3d8 V320
---
Entry stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x134, 0x540}]
Stack pops: 0
Stack additions: [0x0, V320]
Exit stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x134, 0x540}, 0x0, V320]

================================

Block 0x3d2
[0x3d2:0x3d7]
---
Predecessors: [0x3c7]
Successors: [0x3d8]
---
0x3d2 POP
0x3d3 PUSH1 0x0
0x3d5 SLOAD
0x3d6 NUMBER
0x3d7 LT
---
0x3d3: V322 = 0x0
0x3d5: V323 = S[0x0]
0x3d6: V324 = NUMBER
0x3d7: V325 = LT V324 V323
---
Entry stack: [V10, {0x1ad, 0x295}, S4, {0x1, 0x3}, {0x134, 0x540}, 0x0, V320]
Stack pops: 1
Stack additions: [V325]
Exit stack: [V10, {0x1ad, 0x295}, S4, {0x1, 0x3}, {0x134, 0x540}, 0x0, V325]

================================

Block 0x3d8
[0x3d8:0x3dd]
---
Predecessors: [0x3c7, 0x3d2]
Successors: [0x3de, 0x3e5]
---
0x3d8 JUMPDEST
0x3d9 ISZERO
0x3da PUSH2 0x3e5
0x3dd JUMPI
---
0x3d8: JUMPDEST 
0x3d9: V326 = ISZERO S0
0x3da: V327 = 0x3e5
0x3dd: JUMPI 0x3e5 V326
---
Entry stack: [V10, {0x1ad, 0x295}, S4, {0x1, 0x3}, {0x134, 0x540}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S4, {0x1, 0x3}, {0x134, 0x540}, 0x0]

================================

Block 0x3de
[0x3de:0x3e4]
---
Predecessors: [0x3d8]
Successors: [0x3fa]
---
0x3de POP
0x3df PUSH1 0x0
0x3e1 PUSH2 0x3fa
0x3e4 JUMP
---
0x3df: V328 = 0x0
0x3e1: V329 = 0x3fa
0x3e4: JUMP 0x3fa
---
Entry stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, 0x0]

================================

Block 0x3e5
[0x3e5:0x3ee]
---
Predecessors: [0x3d8]
Successors: [0x3ef, 0x3f6]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x1
0x3e8 SLOAD
0x3e9 TIMESTAMP
0x3ea GT
0x3eb PUSH2 0x3f6
0x3ee JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V330 = 0x1
0x3e8: V331 = S[0x1]
0x3e9: V332 = TIMESTAMP
0x3ea: V333 = GT V332 V331
0x3eb: V334 = 0x3f6
0x3ee: JUMPI 0x3f6 V333
---
Entry stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, 0x0]

================================

Block 0x3ef
[0x3ef:0x3f5]
---
Predecessors: [0x3e5]
Successors: [0x3fa]
---
0x3ef POP
0x3f0 PUSH1 0x1
0x3f2 PUSH2 0x3fa
0x3f5 JUMP
---
0x3f0: V335 = 0x1
0x3f2: V336 = 0x3fa
0x3f5: JUMP 0x3fa
---
Entry stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, 0x1]

================================

Block 0x3f6
[0x3f6:0x3f9]
---
Predecessors: [0x3e5]
Successors: [0x3fa]
---
0x3f6 JUMPDEST
0x3f7 POP
0x3f8 PUSH1 0x2
---
0x3f6: JUMPDEST 
0x3f8: V337 = 0x2
---
Entry stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, 0x0]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, 0x2]

================================

Block 0x3fa
[0x3fa:0x3fa]
---
Predecessors: [0x3de, 0x3ef, 0x3f6]
Successors: [0x3fb]
---
0x3fa JUMPDEST
---
0x3fa: JUMPDEST 
---
Entry stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, {0x0, 0x1, 0x2}]

================================

Block 0x3fb
[0x3fb:0x3fb]
---
Predecessors: [0x3fa]
Successors: [0x3fc]
---
0x3fb JUMPDEST
---
0x3fb: JUMPDEST 
---
Entry stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, {0x0, 0x1, 0x2}]

================================

Block 0x3fc
[0x3fc:0x3fe]
---
Predecessors: [0x3fb]
Successors: [0x134, 0x540]
---
0x3fc JUMPDEST
0x3fd SWAP1
0x3fe JUMP
---
0x3fc: JUMPDEST 
0x3fe: JUMP {0x134, 0x540}
---
Entry stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x134, 0x540}, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, {0x1ad, 0x295}, S3, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x3ff
[0x3ff:0x40b]
---
Predecessors: [0x1b7]
Successors: [0x40c, 0x41c]
---
0x3ff JUMPDEST
0x400 PUSH1 0x0
0x402 PUSH1 0x1
0x404 SLOAD
0x405 PUSH1 0x0
0x407 EQ
0x408 PUSH2 0x41c
0x40b JUMPI
---
0x3ff: JUMPDEST 
0x400: V338 = 0x0
0x402: V339 = 0x1
0x404: V340 = S[0x1]
0x405: V341 = 0x0
0x407: V342 = EQ 0x0 V340
0x408: V343 = 0x41c
0x40b: JUMPI 0x41c V342
---
Entry stack: [V10, 0x1bf]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1bf, 0x0]

================================

Block 0x40c
[0x40c:0x415]
---
Predecessors: [0x3ff]
Successors: [0x416]
---
0x40c PUSH1 0x1
0x40e SLOAD
0x40f PUSH2 0xe10
0x412 SWAP1
0x413 TIMESTAMP
0x414 SWAP1
0x415 SUB
---
0x40c: V344 = 0x1
0x40e: V345 = S[0x1]
0x40f: V346 = 0xe10
0x413: V347 = TIMESTAMP
0x415: V348 = SUB V345 V347
---
Entry stack: [V10, 0x1bf, 0x0]
Stack pops: 0
Stack additions: [0xe10, V348]
Exit stack: [V10, 0x1bf, 0x0, 0xe10, V348]

================================

Block 0x416
[0x416:0x41b]
---
Predecessors: [0x40c]
Successors: [0x41f]
---
0x416 JUMPDEST
0x417 DIV
0x418 PUSH2 0x41f
0x41b JUMP
---
0x416: JUMPDEST 
0x417: V349 = DIV V348 0xe10
0x418: V350 = 0x41f
0x41b: JUMP 0x41f
---
Entry stack: [V10, 0x1bf, 0x0, 0xe10, V348]
Stack pops: 2
Stack additions: [V349]
Exit stack: [V10, 0x1bf, 0x0, V349]

================================

Block 0x41c
[0x41c:0x41e]
---
Predecessors: [0x3ff]
Successors: [0x41f]
---
0x41c JUMPDEST
0x41d PUSH1 0x0
---
0x41c: JUMPDEST 
0x41d: V351 = 0x0
---
Entry stack: [V10, 0x1bf, 0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1bf, 0x0, 0x0]

================================

Block 0x41f
[0x41f:0x421]
---
Predecessors: [0x416, 0x41c]
Successors: [0x422]
---
0x41f JUMPDEST
0x420 SWAP1
0x421 POP
---
0x41f: JUMPDEST 
---
Entry stack: [V10, 0x1bf, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x1bf, S0]

================================

Block 0x422
[0x422:0x424]
---
Predecessors: [0x41f]
Successors: [0x1bf]
---
0x422 JUMPDEST
0x423 SWAP1
0x424 JUMP
---
0x422: JUMPDEST 
0x424: JUMP 0x1bf
---
Entry stack: [V10, 0x1bf, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x425
[0x425:0x436]
---
Predecessors: [0x1d9]
Successors: [0x1bf]
---
0x425 JUMPDEST
0x426 PUSH1 0x8
0x428 PUSH1 0x20
0x42a MSTORE
0x42b PUSH1 0x0
0x42d SWAP1
0x42e DUP2
0x42f MSTORE
0x430 PUSH1 0x40
0x432 SWAP1
0x433 SHA3
0x434 SLOAD
0x435 DUP2
0x436 JUMP
---
0x425: JUMPDEST 
0x426: V352 = 0x8
0x428: V353 = 0x20
0x42a: M[0x20] = 0x8
0x42b: V354 = 0x0
0x42f: M[0x0] = V153
0x430: V355 = 0x40
0x433: V356 = SHA3 0x0 0x40
0x434: V357 = S[V356]
0x436: JUMP 0x1bf
---
Entry stack: [V10, 0x1bf, V153]
Stack pops: 2
Stack additions: [S1, V357]
Exit stack: [V10, 0x1bf, V357]

================================

Block 0x437
[0x437:0x44d]
---
Predecessors: [0x207]
Successors: [0x44e, 0x453]
---
0x437 JUMPDEST
0x438 PUSH1 0x9
0x43a SLOAD
0x43b CALLER
0x43c PUSH1 0x1
0x43e PUSH1 0xa0
0x440 PUSH1 0x2
0x442 EXP
0x443 SUB
0x444 SWAP1
0x445 DUP2
0x446 AND
0x447 SWAP2
0x448 AND
0x449 EQ
0x44a PUSH2 0x453
0x44d JUMPI
---
0x437: JUMPDEST 
0x438: V358 = 0x9
0x43a: V359 = S[0x9]
0x43b: V360 = CALLER
0x43c: V361 = 0x1
0x43e: V362 = 0xa0
0x440: V363 = 0x2
0x442: V364 = EXP 0x2 0xa0
0x443: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x448: V367 = AND V359 0xffffffffffffffffffffffffffffffffffffffff
0x449: V368 = EQ V367 V366
0x44a: V369 = 0x453
0x44d: JUMPI 0x453 V368
---
Entry stack: [V10, 0x1ad, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ad, V172]

================================

Block 0x44e
[0x44e:0x452]
---
Predecessors: [0x437]
Successors: []
---
0x44e PUSH1 0x0
0x450 PUSH1 0x0
0x452 REVERT
---
0x44e: V370 = 0x0
0x450: V371 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ad, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ad, V172]

================================

Block 0x453
[0x453:0x47b]
---
Predecessors: [0x437]
Successors: [0x47c]
---
0x453 JUMPDEST
0x454 PUSH1 0x9
0x456 DUP1
0x457 SLOAD
0x458 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46d NOT
0x46e AND
0x46f PUSH1 0x1
0x471 PUSH1 0xa0
0x473 PUSH1 0x2
0x475 EXP
0x476 SUB
0x477 DUP4
0x478 AND
0x479 OR
0x47a SWAP1
0x47b SSTORE
---
0x453: JUMPDEST 
0x454: V372 = 0x9
0x457: V373 = S[0x9]
0x458: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x46d: V375 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x46e: V376 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V373
0x46f: V377 = 0x1
0x471: V378 = 0xa0
0x473: V379 = 0x2
0x475: V380 = EXP 0x2 0xa0
0x476: V381 = SUB 0x10000000000000000000000000000000000000000 0x1
0x478: V382 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x479: V383 = OR V382 V376
0x47b: S[0x9] = V383
---
Entry stack: [V10, 0x1ad, V172]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1ad, V172]

================================

Block 0x47c
[0x47c:0x47c]
---
Predecessors: [0x453]
Successors: [0x47d]
---
0x47c JUMPDEST
---
0x47c: JUMPDEST 
---
Entry stack: [V10, 0x1ad, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ad, V172]

================================

Block 0x47d
[0x47d:0x47f]
---
Predecessors: [0x47c]
Successors: [0x1ad]
---
0x47d JUMPDEST
0x47e POP
0x47f JUMP
---
0x47d: JUMPDEST 
0x47f: JUMP 0x1ad
---
Entry stack: [V10, 0x1ad, V172]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x480
[0x480:0x4a7]
---
Predecessors: [0x225]
Successors: [0x4a8, 0x4b0]
---
0x480 JUMPDEST
0x481 PUSH1 0x1
0x483 PUSH1 0xa0
0x485 PUSH1 0x2
0x487 EXP
0x488 SUB
0x489 DUP2
0x48a AND
0x48b PUSH1 0x0
0x48d SWAP1
0x48e DUP2
0x48f MSTORE
0x490 PUSH1 0x8
0x492 PUSH1 0x20
0x494 MSTORE
0x495 PUSH1 0x40
0x497 DUP2
0x498 SHA3
0x499 SLOAD
0x49a PUSH7 0x38d7ea4c68000
0x4a2 DUP2
0x4a3 GT
0x4a4 PUSH2 0x4b0
0x4a7 JUMPI
---
0x480: JUMPDEST 
0x481: V384 = 0x1
0x483: V385 = 0xa0
0x485: V386 = 0x2
0x487: V387 = EXP 0x2 0xa0
0x488: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48a: V389 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x48b: V390 = 0x0
0x48f: M[0x0] = V389
0x490: V391 = 0x8
0x492: V392 = 0x20
0x494: M[0x20] = 0x8
0x495: V393 = 0x40
0x498: V394 = SHA3 0x0 0x40
0x499: V395 = S[V394]
0x49a: V396 = 0x38d7ea4c68000
0x4a3: V397 = GT V395 0x38d7ea4c68000
0x4a4: V398 = 0x4b0
0x4a7: JUMPI 0x4b0 V397
---
Entry stack: [V10, 0x1bf, V185]
Stack pops: 1
Stack additions: [S0, 0x0, V395]
Exit stack: [V10, 0x1bf, V185, 0x0, V395]

================================

Block 0x4a8
[0x4a8:0x4af]
---
Predecessors: [0x480]
Successors: [0x4da]
---
0x4a8 PUSH1 0x0
0x4aa SWAP2
0x4ab POP
0x4ac PUSH2 0x4da
0x4af JUMP
---
0x4a8: V399 = 0x0
0x4ac: V400 = 0x4da
0x4af: JUMP 0x4da
---
Entry stack: [V10, 0x1bf, V185, 0x0, V395]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x1bf, V185, 0x0, V395]

================================

Block 0x4b0
[0x4b0:0x4bf]
---
Predecessors: [0x480]
Successors: [0x4c0, 0x4c8]
---
0x4b0 JUMPDEST
0x4b1 PUSH8 0xde0b6b3a7640000
0x4ba DUP2
0x4bb LT
0x4bc PUSH2 0x4c8
0x4bf JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V401 = 0xde0b6b3a7640000
0x4bb: V402 = LT V395 0xde0b6b3a7640000
0x4bc: V403 = 0x4c8
0x4bf: JUMPI 0x4c8 V402
---
Entry stack: [V10, 0x1bf, V185, 0x0, V395]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1bf, V185, 0x0, V395]

================================

Block 0x4c0
[0x4c0:0x4c7]
---
Predecessors: [0x4b0]
Successors: [0x4da]
---
0x4c0 PUSH1 0x64
0x4c2 SWAP2
0x4c3 POP
0x4c4 PUSH2 0x4da
0x4c7 JUMP
---
0x4c0: V404 = 0x64
0x4c4: V405 = 0x4da
0x4c7: JUMP 0x4da
---
Entry stack: [V10, 0x1bf, V185, 0x0, V395]
Stack pops: 2
Stack additions: [0x64, S0]
Exit stack: [V10, 0x1bf, V185, 0x64, V395]

================================

Block 0x4c8
[0x4c8:0x4d5]
---
Predecessors: [0x4b0]
Successors: [0x4d6]
---
0x4c8 JUMPDEST
0x4c9 PUSH8 0xde0b6b3a7640000
0x4d2 PUSH1 0x64
0x4d4 DUP3
0x4d5 MUL
---
0x4c8: JUMPDEST 
0x4c9: V406 = 0xde0b6b3a7640000
0x4d2: V407 = 0x64
0x4d5: V408 = MUL V395 0x64
---
Entry stack: [V10, 0x1bf, V185, 0x0, V395]
Stack pops: 1
Stack additions: [S0, 0xde0b6b3a7640000, V408]
Exit stack: [V10, 0x1bf, V185, 0x0, V395, 0xde0b6b3a7640000, V408]

================================

Block 0x4d6
[0x4d6:0x4d9]
---
Predecessors: [0x4c8]
Successors: [0x4da]
---
0x4d6 JUMPDEST
0x4d7 DIV
0x4d8 SWAP2
0x4d9 POP
---
0x4d6: JUMPDEST 
0x4d7: V409 = DIV V408 0xde0b6b3a7640000
---
Entry stack: [V10, 0x1bf, V185, 0x0, V395, 0xde0b6b3a7640000, V408]
Stack pops: 4
Stack additions: [V409, S2]
Exit stack: [V10, 0x1bf, V185, V409, V395]

================================

Block 0x4da
[0x4da:0x4da]
---
Predecessors: [0x4a8, 0x4c0, 0x4d6]
Successors: [0x4db]
---
0x4da JUMPDEST
---
0x4da: JUMPDEST 
---
Entry stack: [V10, 0x1bf, V185, S1, V395]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bf, V185, S1, V395]

================================

Block 0x4db
[0x4db:0x4db]
---
Predecessors: [0x4da]
Successors: [0x4dc]
---
0x4db JUMPDEST
---
0x4db: JUMPDEST 
---
Entry stack: [V10, 0x1bf, V185, S1, V395]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bf, V185, S1, V395]

================================

Block 0x4dc
[0x4dc:0x4e1]
---
Predecessors: [0x4db]
Successors: [0x1bf]
---
0x4dc JUMPDEST
0x4dd POP
0x4de SWAP2
0x4df SWAP1
0x4e0 POP
0x4e1 JUMP
---
0x4dc: JUMPDEST 
0x4e1: JUMP 0x1bf
---
Entry stack: [V10, 0x1bf, V185, S1, V395]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, S1]

================================

Block 0x4e2
[0x4e2:0x4f8]
---
Predecessors: [0x253]
Successors: [0x4f9, 0x4fe]
---
0x4e2 JUMPDEST
0x4e3 PUSH1 0x9
0x4e5 SLOAD
0x4e6 CALLER
0x4e7 PUSH1 0x1
0x4e9 PUSH1 0xa0
0x4eb PUSH1 0x2
0x4ed EXP
0x4ee SUB
0x4ef SWAP1
0x4f0 DUP2
0x4f1 AND
0x4f2 SWAP2
0x4f3 AND
0x4f4 EQ
0x4f5 PUSH2 0x4fe
0x4f8 JUMPI
---
0x4e2: JUMPDEST 
0x4e3: V410 = 0x9
0x4e5: V411 = S[0x9]
0x4e6: V412 = CALLER
0x4e7: V413 = 0x1
0x4e9: V414 = 0xa0
0x4eb: V415 = 0x2
0x4ed: V416 = EXP 0x2 0xa0
0x4ee: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f1: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x4f3: V419 = AND V411 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V420 = EQ V419 V418
0x4f5: V421 = 0x4fe
0x4f8: JUMPI 0x4fe V420
---
Entry stack: [V10, 0x1ad, V198, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ad, V198, V200]

================================

Block 0x4f9
[0x4f9:0x4fd]
---
Predecessors: [0x4e2]
Successors: []
---
0x4f9 PUSH1 0x0
0x4fb PUSH1 0x0
0x4fd REVERT
---
0x4f9: V422 = 0x0
0x4fb: V423 = 0x0
0x4fd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ad, V198, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ad, V198, V200]

================================

Block 0x4fe
[0x4fe:0x507]
---
Predecessors: [0x4e2]
Successors: [0x626]
---
0x4fe JUMPDEST
0x4ff PUSH2 0x508
0x502 NUMBER
0x503 DUP4
0x504 PUSH2 0x626
0x507 JUMP
---
0x4fe: JUMPDEST 
0x4ff: V424 = 0x508
0x502: V425 = NUMBER
0x504: V426 = 0x626
0x507: JUMP 0x626
---
Entry stack: [V10, 0x1ad, V198, V200]
Stack pops: 2
Stack additions: [S1, S0, 0x508, V425, S1]
Exit stack: [V10, 0x1ad, V198, V200, 0x508, V425, V198]

================================

Block 0x508
[0x508:0x515]
---
Predecessors: [0x63a]
Successors: [0x626]
---
0x508 JUMPDEST
0x509 PUSH1 0x0
0x50b SSTORE
0x50c PUSH2 0x516
0x50f DUP2
0x510 PUSH1 0x1
0x512 PUSH2 0x626
0x515 JUMP
---
0x508: JUMPDEST 
0x509: V427 = 0x0
0x50b: S[0x0] = S0
0x50c: V428 = 0x516
0x510: V429 = 0x1
0x512: V430 = 0x626
0x515: JUMP 0x626
---
Entry stack: [V10, 0x1ad, V198, V200, S0]
Stack pops: 2
Stack additions: [S1, 0x516, S1, 0x1]
Exit stack: [V10, 0x1ad, V198, V200, 0x516, V200, 0x1]

================================

Block 0x516
[0x516:0x522]
---
Predecessors: [0x63a]
Successors: [0x523]
---
0x516 JUMPDEST
0x517 PUSH2 0xe10
0x51a MUL
0x51b TIMESTAMP
0x51c ADD
0x51d PUSH1 0x1
0x51f DUP2
0x520 SWAP1
0x521 SSTORE
0x522 POP
---
0x516: JUMPDEST 
0x517: V431 = 0xe10
0x51a: V432 = MUL 0xe10 S0
0x51b: V433 = TIMESTAMP
0x51c: V434 = ADD V433 V432
0x51d: V435 = 0x1
0x521: S[0x1] = V434
---
Entry stack: [V10, 0x1ad, V198, V200, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1ad, V198, V200]

================================

Block 0x523
[0x523:0x523]
---
Predecessors: [0x516]
Successors: [0x524]
---
0x523 JUMPDEST
---
0x523: JUMPDEST 
---
Entry stack: [V10, 0x1ad, V198, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ad, V198, V200]

================================

Block 0x524
[0x524:0x527]
---
Predecessors: [0x523]
Successors: [0x1ad]
---
0x524 JUMPDEST
0x525 POP
0x526 POP
0x527 JUMP
---
0x524: JUMPDEST 
0x527: JUMP 0x1ad
---
Entry stack: [V10, 0x1ad, V198, V200]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x528
[0x528:0x52d]
---
Predecessors: [0x26b]
Successors: [0x1bf]
---
0x528 JUMPDEST
0x529 PUSH1 0x1
0x52b SLOAD
0x52c DUP2
0x52d JUMP
---
0x528: JUMPDEST 
0x529: V436 = 0x1
0x52b: V437 = S[0x1]
0x52d: JUMP 0x1bf
---
Entry stack: [V10, 0x1bf]
Stack pops: 1
Stack additions: [S0, V437]
Exit stack: [V10, 0x1bf, V437]

================================

Block 0x52e
[0x52e:0x535]
---
Predecessors: [0x28d]
Successors: [0x640]
---
0x52e JUMPDEST
0x52f PUSH2 0x536
0x532 PUSH2 0x640
0x535 JUMP
---
0x52e: JUMPDEST 
0x52f: V438 = 0x536
0x532: V439 = 0x640
0x535: JUMP 0x640
---
Entry stack: [V10, 0x295]
Stack pops: 0
Stack additions: [0x536]
Exit stack: [V10, 0x295, 0x536]

================================

Block 0x536
[0x536:0x53f]
---
Predecessors: [0x640]
Successors: [0x3c7]
---
0x536 JUMPDEST
0x537 PUSH1 0x3
0x539 PUSH2 0x540
0x53c PUSH2 0x3c7
0x53f JUMP
---
0x536: JUMPDEST 
0x537: V440 = 0x3
0x539: V441 = 0x540
0x53c: V442 = 0x3c7
0x53f: JUMP 0x3c7
---
Entry stack: [V10, 0x295, V516]
Stack pops: 0
Stack additions: [0x3, 0x540]
Exit stack: [V10, 0x295, V516, 0x3, 0x540]

================================

Block 0x540
[0x540:0x549]
---
Predecessors: [0x3fc]
Successors: [0x54a, 0x54b]
---
0x540 JUMPDEST
0x541 PUSH1 0x2
0x543 DUP2
0x544 GT
0x545 ISZERO
0x546 PUSH2 0x54b
0x549 JUMPI
---
0x540: JUMPDEST 
0x541: V443 = 0x2
0x544: V444 = GT {0x0, 0x1, 0x2} 0x2
0x545: V445 = ISZERO V444
0x546: V446 = 0x54b
0x549: JUMPI 0x54b V445
---
Entry stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x54a
[0x54a:0x54a]
---
Predecessors: [0x540]
Successors: []
---
0x54a INVALID
---
0x54a: INVALID 
---
Entry stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x54b
[0x54b:0x553]
---
Predecessors: [0x540]
Successors: [0x554, 0x555]
---
0x54b JUMPDEST
0x54c PUSH1 0x5
0x54e DUP2
0x54f LT
0x550 PUSH2 0x555
0x553 JUMPI
---
0x54b: JUMPDEST 
0x54c: V447 = 0x5
0x54f: V448 = LT {0x0, 0x1, 0x2} 0x5
0x550: V449 = 0x555
0x553: JUMPI 0x555 V448
---
Entry stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x554
[0x554:0x554]
---
Predecessors: [0x54b]
Successors: []
---
0x554 INVALID
---
0x554: INVALID 
---
Entry stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x555
[0x555:0x558]
---
Predecessors: [0x54b]
Successors: [0x559]
---
0x555 JUMPDEST
0x556 ADD
0x557 PUSH1 0x0
---
0x555: JUMPDEST 
0x556: V450 = ADD {0x0, 0x1, 0x2} {0x1, 0x3}
0x557: V451 = 0x0
---
Entry stack: [V10, {0x1ad, 0x295}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: [V450, 0x0]
Exit stack: [V10, {0x1ad, 0x295}, S2, V450, 0x0]

================================

Block 0x559
[0x559:0x597]
---
Predecessors: [0x555]
Successors: [0x598, 0x5de]
---
0x559 JUMPDEST
0x55a POP
0x55b DUP1
0x55c SLOAD
0x55d PUSH1 0x40
0x55f DUP1
0x560 MLOAD
0x561 PUSH1 0x20
0x563 PUSH1 0x2
0x565 PUSH1 0x1
0x567 DUP6
0x568 AND
0x569 ISZERO
0x56a PUSH2 0x100
0x56d MUL
0x56e PUSH1 0x0
0x570 NOT
0x571 ADD
0x572 SWAP1
0x573 SWAP5
0x574 AND
0x575 SWAP4
0x576 SWAP1
0x577 SWAP4
0x578 DIV
0x579 PUSH1 0x1f
0x57b DUP2
0x57c ADD
0x57d DUP5
0x57e SWAP1
0x57f DIV
0x580 DUP5
0x581 MUL
0x582 DUP3
0x583 ADD
0x584 DUP5
0x585 ADD
0x586 SWAP1
0x587 SWAP3
0x588 MSTORE
0x589 DUP2
0x58a DUP2
0x58b MSTORE
0x58c SWAP3
0x58d SWAP2
0x58e DUP4
0x58f ADD
0x590 DUP3
0x591 DUP3
0x592 DUP1
0x593 ISZERO
0x594 PUSH2 0x5de
0x597 JUMPI
---
0x559: JUMPDEST 
0x55c: V452 = S[V450]
0x55d: V453 = 0x40
0x560: V454 = M[0x40]
0x561: V455 = 0x20
0x563: V456 = 0x2
0x565: V457 = 0x1
0x568: V458 = AND V452 0x1
0x569: V459 = ISZERO V458
0x56a: V460 = 0x100
0x56d: V461 = MUL 0x100 V459
0x56e: V462 = 0x0
0x570: V463 = NOT 0x0
0x571: V464 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V461
0x574: V465 = AND V452 V464
0x578: V466 = DIV V465 0x2
0x579: V467 = 0x1f
0x57c: V468 = ADD V466 0x1f
0x57f: V469 = DIV V468 0x20
0x581: V470 = MUL 0x20 V469
0x583: V471 = ADD V454 V470
0x585: V472 = ADD 0x20 V471
0x588: M[0x40] = V472
0x58b: M[V454] = V466
0x58f: V473 = ADD V454 0x20
0x593: V474 = ISZERO V466
0x594: V475 = 0x5de
0x597: JUMPI 0x5de V474
---
Entry stack: [V10, {0x1ad, 0x295}, S2, V450, 0x0]
Stack pops: 2
Stack additions: [V454, S1, V466, V473, S1, V466]
Exit stack: [V10, {0x1ad, 0x295}, S2, V454, V450, V466, V473, V450, V466]

================================

Block 0x598
[0x598:0x59f]
---
Predecessors: [0x559]
Successors: [0x5a0, 0x5b3]
---
0x598 DUP1
0x599 PUSH1 0x1f
0x59b LT
0x59c PUSH2 0x5b3
0x59f JUMPI
---
0x599: V476 = 0x1f
0x59b: V477 = LT 0x1f V466
0x59c: V478 = 0x5b3
0x59f: JUMPI 0x5b3 V477
---
Entry stack: [V10, {0x1ad, 0x295}, S6, V454, S4, V466, V473, S1, V466]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, {0x1ad, 0x295}, S6, V454, S4, V466, V473, S1, V466]

================================

Block 0x5a0
[0x5a0:0x5b2]
---
Predecessors: [0x598]
Successors: [0x5de]
---
0x5a0 PUSH2 0x100
0x5a3 DUP1
0x5a4 DUP4
0x5a5 SLOAD
0x5a6 DIV
0x5a7 MUL
0x5a8 DUP4
0x5a9 MSTORE
0x5aa SWAP2
0x5ab PUSH1 0x20
0x5ad ADD
0x5ae SWAP2
0x5af PUSH2 0x5de
0x5b2 JUMP
---
0x5a0: V479 = 0x100
0x5a5: V480 = S[S1]
0x5a6: V481 = DIV V480 0x100
0x5a7: V482 = MUL V481 0x100
0x5a9: M[V473] = V482
0x5ab: V483 = 0x20
0x5ad: V484 = ADD 0x20 V473
0x5af: V485 = 0x5de
0x5b2: JUMP 0x5de
---
Entry stack: [V10, {0x1ad, 0x295}, S6, V454, S4, V466, V473, S1, V466]
Stack pops: 3
Stack additions: [V484, S1, S0]
Exit stack: [V10, {0x1ad, 0x295}, S6, V454, S4, V466, V484, S1, V466]

================================

Block 0x5b3
[0x5b3:0x5c0]
---
Predecessors: [0x598]
Successors: [0x5c1]
---
0x5b3 JUMPDEST
0x5b4 DUP3
0x5b5 ADD
0x5b6 SWAP2
0x5b7 SWAP1
0x5b8 PUSH1 0x0
0x5ba MSTORE
0x5bb PUSH1 0x20
0x5bd PUSH1 0x0
0x5bf SHA3
0x5c0 SWAP1
---
0x5b3: JUMPDEST 
0x5b5: V486 = ADD V473 V466
0x5b8: V487 = 0x0
0x5ba: M[0x0] = S1
0x5bb: V488 = 0x20
0x5bd: V489 = 0x0
0x5bf: V490 = SHA3 0x0 0x20
---
Entry stack: [V10, {0x1ad, 0x295}, S6, V454, S4, V466, V473, S1, V466]
Stack pops: 3
Stack additions: [V486, V490, S2]
Exit stack: [V10, {0x1ad, 0x295}, S6, V454, S4, V466, V486, V490, V473]

================================

Block 0x5c1
[0x5c1:0x5d4]
---
Predecessors: [0x5b3, 0x5c1]
Successors: [0x5c1, 0x5d5]
---
0x5c1 JUMPDEST
0x5c2 DUP2
0x5c3 SLOAD
0x5c4 DUP2
0x5c5 MSTORE
0x5c6 SWAP1
0x5c7 PUSH1 0x1
0x5c9 ADD
0x5ca SWAP1
0x5cb PUSH1 0x20
0x5cd ADD
0x5ce DUP1
0x5cf DUP4
0x5d0 GT
0x5d1 PUSH2 0x5c1
0x5d4 JUMPI
---
0x5c1: JUMPDEST 
0x5c3: V491 = S[S1]
0x5c5: M[S0] = V491
0x5c7: V492 = 0x1
0x5c9: V493 = ADD 0x1 S1
0x5cb: V494 = 0x20
0x5cd: V495 = ADD 0x20 S0
0x5d0: V496 = GT V486 V495
0x5d1: V497 = 0x5c1
0x5d4: JUMPI 0x5c1 V496
---
Entry stack: [V10, {0x1ad, 0x295}, S6, S5, S4, S3, V486, S1, S0]
Stack pops: 3
Stack additions: [S2, V493, V495]
Exit stack: [V10, {0x1ad, 0x295}, S6, S5, S4, S3, V486, V493, V495]

================================

Block 0x5d5
[0x5d5:0x5dd]
---
Predecessors: [0x5c1]
Successors: [0x5de]
---
0x5d5 DUP3
0x5d6 SWAP1
0x5d7 SUB
0x5d8 PUSH1 0x1f
0x5da AND
0x5db DUP3
0x5dc ADD
0x5dd SWAP2
---
0x5d7: V498 = SUB V495 V486
0x5d8: V499 = 0x1f
0x5da: V500 = AND 0x1f V498
0x5dc: V501 = ADD V486 V500
---
Entry stack: [V10, {0x1ad, 0x295}, S6, S5, S4, S3, V486, V493, V495]
Stack pops: 3
Stack additions: [V501, S1, S2]
Exit stack: [V10, {0x1ad, 0x295}, S6, S5, S4, S3, V501, V493, V486]

================================

Block 0x5de
[0x5de:0x5e5]
---
Predecessors: [0x559, 0x5a0, 0x5d5]
Successors: [0x5e6]
---
0x5de JUMPDEST
0x5df POP
0x5e0 POP
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 SWAP1
0x5e5 POP
---
0x5de: JUMPDEST 
---
Entry stack: [V10, {0x1ad, 0x295}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V10, {0x1ad, 0x295}, S5]

================================

Block 0x5e6
[0x5e6:0x5e8]
---
Predecessors: [0x5de]
Successors: [0x1ad, 0x295]
---
0x5e6 JUMPDEST
0x5e7 SWAP1
0x5e8 JUMP
---
0x5e6: JUMPDEST 
0x5e8: JUMP {0x1ad, 0x295}
---
Entry stack: [V10, {0x1ad, 0x295}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x5e9
[0x5e9:0x5ee]
---
Predecessors: [0x31d]
Successors: [0x1bf]
---
0x5e9 JUMPDEST
0x5ea PUSH1 0x0
0x5ec SLOAD
0x5ed DUP2
0x5ee JUMP
---
0x5e9: JUMPDEST 
0x5ea: V502 = 0x0
0x5ec: V503 = S[0x0]
0x5ee: JUMP 0x1bf
---
Entry stack: [V10, 0x1bf]
Stack pops: 1
Stack additions: [S0, V503]
Exit stack: [V10, 0x1bf, V503]

================================

Block 0x5ef
[0x5ef:0x625]
---
Predecessors: [0x33f]
Successors: [0x295]
---
0x5ef JUMPDEST
0x5f0 PUSH1 0x40
0x5f2 DUP1
0x5f3 MLOAD
0x5f4 DUP1
0x5f5 DUP3
0x5f6 ADD
0x5f7 SWAP1
0x5f8 SWAP2
0x5f9 MSTORE
0x5fa PUSH1 0x5
0x5fc DUP2
0x5fd MSTORE
0x5fe PUSH32 0x302e302e31000000000000000000000000000000000000000000000000000000
0x61f PUSH1 0x20
0x621 DUP3
0x622 ADD
0x623 MSTORE
0x624 DUP2
0x625 JUMP
---
0x5ef: JUMPDEST 
0x5f0: V504 = 0x40
0x5f3: V505 = M[0x40]
0x5f6: V506 = ADD 0x40 V505
0x5f9: M[0x40] = V506
0x5fa: V507 = 0x5
0x5fd: M[V505] = 0x5
0x5fe: V508 = 0x302e302e31000000000000000000000000000000000000000000000000000000
0x61f: V509 = 0x20
0x622: V510 = ADD V505 0x20
0x623: M[V510] = 0x302e302e31000000000000000000000000000000000000000000000000000000
0x625: JUMP 0x295
---
Entry stack: [V10, 0x295]
Stack pops: 1
Stack additions: [S0, V505]
Exit stack: [V10, 0x295, V505]

================================

Block 0x626
[0x626:0x62f]
---
Predecessors: [0x4fe, 0x508]
Successors: [0x630, 0x635]
---
0x626 JUMPDEST
0x627 PUSH1 0x0
0x629 DUP2
0x62a DUP4
0x62b GT
0x62c PUSH2 0x635
0x62f JUMPI
---
0x626: JUMPDEST 
0x627: V511 = 0x0
0x62b: V512 = GT S1 S0
0x62c: V513 = 0x635
0x62f: JUMPI 0x635 V512
---
Entry stack: [V10, 0x1ad, V198, V200, {0x508, 0x516}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x1ad, V198, V200, {0x508, 0x516}, S1, S0, 0x0]

================================

Block 0x630
[0x630:0x634]
---
Predecessors: [0x626]
Successors: [0x637]
---
0x630 DUP2
0x631 PUSH2 0x637
0x634 JUMP
---
0x631: V514 = 0x637
0x634: JUMP 0x637
---
Entry stack: [V10, 0x1ad, V198, V200, {0x508, 0x516}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V10, 0x1ad, V198, V200, {0x508, 0x516}, S2, S1, 0x0, S1]

================================

Block 0x635
[0x635:0x636]
---
Predecessors: [0x626]
Successors: [0x637]
---
0x635 JUMPDEST
0x636 DUP3
---
0x635: JUMPDEST 
---
Entry stack: [V10, 0x1ad, V198, V200, {0x508, 0x516}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V10, 0x1ad, V198, V200, {0x508, 0x516}, S2, S1, 0x0, S2]

================================

Block 0x637
[0x637:0x639]
---
Predecessors: [0x630, 0x635]
Successors: [0x63a]
---
0x637 JUMPDEST
0x638 SWAP1
0x639 POP
---
0x637: JUMPDEST 
---
Entry stack: [V10, 0x1ad, V198, V200, {0x508, 0x516}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x1ad, V198, V200, {0x508, 0x516}, S3, S2, S0]

================================

Block 0x63a
[0x63a:0x63f]
---
Predecessors: [0x637]
Successors: [0x508, 0x516]
---
0x63a JUMPDEST
0x63b SWAP3
0x63c SWAP2
0x63d POP
0x63e POP
0x63f JUMP
---
0x63a: JUMPDEST 
0x63f: JUMP {0x508, 0x516}
---
Entry stack: [V10, 0x1ad, V198, V200, {0x508, 0x516}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1ad, V198, V200, S0]

================================

Block 0x640
[0x640:0x651]
---
Predecessors: [0x52e]
Successors: [0x536]
---
0x640 JUMPDEST
0x641 PUSH1 0x40
0x643 DUP1
0x644 MLOAD
0x645 PUSH1 0x20
0x647 DUP2
0x648 ADD
0x649 SWAP1
0x64a SWAP2
0x64b MSTORE
0x64c PUSH1 0x0
0x64e DUP2
0x64f MSTORE
0x650 SWAP1
0x651 JUMP
---
0x640: JUMPDEST 
0x641: V515 = 0x40
0x644: V516 = M[0x40]
0x645: V517 = 0x20
0x648: V518 = ADD V516 0x20
0x64b: M[0x40] = V518
0x64c: V519 = 0x0
0x64f: M[V516] = 0x0
0x651: JUMP 0x536
---
Entry stack: [V10, 0x295, 0x536]
Stack pops: 1
Stack additions: [V516]
Exit stack: [V10, 0x295, V516]

================================

Block 0x652
[0x652:0x67d]
---
Predecessors: []
Successors: []
---
0x652 STOP
0x653 LOG1
0x654 PUSH6 0x627a7a723058
0x65b SHA3
0x65c RETURNDATACOPY
0x65d SWAP1
0x65e LOG0
0x65f MISSING 0xbe
0x660 CREATE
0x661 EXTCODEHASH
0x662 CREATE2
0x663 MISSING 0xf
0x664 PUSH23 0x730b1ac7409230d41f43bbe505a127783cac1ce2c895ef
0x67c STOP
0x67d MISSING 0x29
---
0x652: STOP 
0x653: LOG S0 S1 S2
0x654: V520 = 0x627a7a723058
0x65b: V521 = SHA3 0x627a7a723058 S3
0x65c: RETURNDATACOPY V521 S4 S5
0x65e: LOG S7 S6
0x65f: MISSING 0xbe
0x660: V522 = CREATE S0 S1 S2
0x661: V523 = EXTCODEHASH V522
0x662: V524 = CREATE2 V523 S3 S4 S5
0x663: MISSING 0xf
0x664: V525 = 0x730b1ac7409230d41f43bbe505a127783cac1ce2c895ef
0x67c: STOP 
0x67d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V524, 0x730b1ac7409230d41f43bbe505a127783cac1ce2c895ef]
Exit stack: []

================================

Function 0:
Public function signature: 0x597d31
Entry block: 0x1af
Exit block: 0x1bf
Body: 0x1af, 0x1b6, 0x1b7, 0x1bf, 0x3ff, 0x40c, 0x416, 0x41c, 0x41f, 0x422

Function 1:
Public function signature: 0xe5fc5f
Entry block: 0x1d1
Exit block: 0x1bf
Body: 0x1bf, 0x1d1, 0x1d8, 0x1d9, 0x425

Function 2:
Public function signature: 0x13af4035
Entry block: 0x1ff
Exit block: 0x1ad
Body: 0x1ad, 0x1ff, 0x206, 0x207, 0x437, 0x44e, 0x453, 0x47c, 0x47d

Function 3:
Public function signature: 0x8fe92aed
Entry block: 0x21d
Exit block: 0x1bf
Body: 0x1bf, 0x21d, 0x224, 0x225, 0x480, 0x4a8, 0x4b0, 0x4c0, 0x4c8, 0x4d6, 0x4da, 0x4db, 0x4dc

Function 4:
Public function signature: 0x90fe5609
Entry block: 0x24b
Exit block: 0x1ad
Body: 0x1ad, 0x24b, 0x252, 0x253, 0x4e2, 0x4f9, 0x4fe, 0x508

Function 5:
Public function signature: 0xa201d102
Entry block: 0x263
Exit block: 0x1bf
Body: 0x1bf, 0x263, 0x26a, 0x26b, 0x528

Function 6:
Public function signature: 0xc19d93fb
Entry block: 0x285
Exit block: 0x307
Body: 0x1ad, 0x285, 0x28c, 0x28d, 0x295, 0x2bb, 0x2c9, 0x2db, 0x2ee, 0x307, 0x52e, 0x536, 0x540, 0x54a, 0x54b, 0x554, 0x555, 0x559, 0x598, 0x5a0, 0x5b3, 0x5c1, 0x5d5, 0x5de, 0x5e6, 0x640

Function 7:
Public function signature: 0xc8dda301
Entry block: 0x315
Exit block: 0x1bf
Body: 0x1bf, 0x315, 0x31c, 0x31d, 0x5e9

Function 8:
Public function signature: 0xffa1ad74
Entry block: 0x337
Exit block: 0x307
Body: 0x295, 0x2bb, 0x2c9, 0x2db, 0x2ee, 0x307, 0x337, 0x33e, 0x33f, 0x5ef

Function 9:
Public fallback function
Entry block: 0x94
Exit block: 0x307
Body: 0x94, 0x98, 0x105, 0x106, 0x113, 0x114, 0x123, 0x128, 0x12c, 0x134, 0x13e, 0x13f, 0x145, 0x14a, 0x15b, 0x181, 0x187, 0x18c, 0x1a8, 0x1a9, 0x1ab, 0x1ad, 0x295, 0x2bb, 0x2c9, 0x2db, 0x2ee, 0x307

Function 10:
Private function
Entry block: 0x3c7
Exit block: 0x3fc
Body: 0x3c7, 0x3d2, 0x3d8, 0x3de, 0x3e5, 0x3ef, 0x3f6, 0x3fa, 0x3fb, 0x3fc

Function 11:
Private function
Entry block: 0x626
Exit block: 0x63a
Body: 0x626, 0x630, 0x635, 0x637, 0x63a

