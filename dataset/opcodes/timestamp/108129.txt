args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/9/108129.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x72]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8551a53
0x3c EQ
0x3d PUSH2 0x72
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8551a53
0x3c: V13 = EQ 0x8551a53 V11
0x3d: V14 = 0x72
0x40: JUMPI 0x72 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc9]
---
0x41 DUP1
0x42 PUSH4 0x1eb5ea2e
0x47 EQ
0x48 PUSH2 0xc9
0x4b JUMPI
---
0x42: V15 = 0x1eb5ea2e
0x47: V16 = EQ 0x1eb5ea2e V11
0x48: V17 = 0xc9
0x4b: JUMPI 0xc9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xe0]
---
0x4c DUP1
0x4d PUSH4 0x3197cbb6
0x52 EQ
0x53 PUSH2 0xe0
0x56 JUMPI
---
0x4d: V18 = 0x3197cbb6
0x52: V19 = EQ 0x3197cbb6 V11
0x53: V20 = 0xe0
0x56: JUMPI 0xe0 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x10b]
---
0x57 DUP1
0x58 PUSH4 0x7150d8ae
0x5d EQ
0x5e PUSH2 0x10b
0x61 JUMPI
---
0x58: V21 = 0x7150d8ae
0x5d: V22 = EQ 0x7150d8ae V11
0x5e: V23 = 0x10b
0x61: JUMPI 0x10b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x162]
---
0x62 DUP1
0x63 PUSH4 0x86d1a69f
0x68 EQ
0x69 PUSH2 0x162
0x6c JUMPI
---
0x63: V24 = 0x86d1a69f
0x68: V25 = EQ 0x86d1a69f V11
0x69: V26 = 0x162
0x6c: JUMPI 0x162 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x71]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0xd]
Successors: [0x7a, 0x7e]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 DUP1
0x75 ISZERO
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x72: JUMPDEST 
0x73: V28 = CALLVALUE
0x75: V29 = ISZERO V28
0x76: V30 = 0x7e
0x79: JUMPI 0x7e V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x72]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V31 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7e
[0x7e:0x86]
---
Predecessors: [0x72]
Successors: [0x179]
---
0x7e JUMPDEST
0x7f POP
0x80 PUSH2 0x87
0x83 PUSH2 0x179
0x86 JUMP
---
0x7e: JUMPDEST 
0x80: V32 = 0x87
0x83: V33 = 0x179
0x86: JUMP 0x179
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x87]
Exit stack: [V11, 0x87]

================================

Block 0x87
[0x87:0xc8]
---
Predecessors: [0x179]
Successors: []
---
0x87 JUMPDEST
0x88 PUSH1 0x40
0x8a MLOAD
0x8b DUP1
0x8c DUP3
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 DUP2
0xba MSTORE
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP2
0xbf POP
0xc0 POP
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 DUP1
0xc5 SWAP2
0xc6 SUB
0xc7 SWAP1
0xc8 RETURN
---
0x87: JUMPDEST 
0x88: V34 = 0x40
0x8a: V35 = M[0x40]
0x8d: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0xa3: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xba: M[V35] = V39
0xbb: V40 = 0x20
0xbd: V41 = ADD 0x20 V35
0xc1: V42 = 0x40
0xc3: V43 = M[0x40]
0xc6: V44 = SUB V41 V43
0xc8: RETURN V43 V44
---
Entry stack: [V11, 0x87, V94]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x87]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x41]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V45 = CALLVALUE
0xcc: V46 = ISZERO V45
0xcd: V47 = 0xd5
0xd0: JUMPI 0xd5 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V48 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x19f]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0xde
0xda PUSH2 0x19f
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V49 = 0xde
0xda: V50 = 0x19f
0xdd: JUMP 0x19f
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: []
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0x4c]
Successors: [0xe8, 0xec]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 DUP1
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xe0: JUMPDEST 
0xe1: V51 = CALLVALUE
0xe3: V52 = ISZERO V51
0xe4: V53 = 0xec
0xe7: JUMPI 0xec V52
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V51]
Exit stack: [V11, V51]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xe0]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V54 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V11, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V51]

================================

Block 0xec
[0xec:0xf4]
---
Predecessors: [0xe0]
Successors: [0x3d7]
---
0xec JUMPDEST
0xed POP
0xee PUSH2 0xf5
0xf1 PUSH2 0x3d7
0xf4 JUMP
---
0xec: JUMPDEST 
0xee: V55 = 0xf5
0xf1: V56 = 0x3d7
0xf4: JUMP 0x3d7
---
Entry stack: [V11, V51]
Stack pops: 1
Stack additions: [0xf5]
Exit stack: [V11, 0xf5]

================================

Block 0xf5
[0xf5:0x10a]
---
Predecessors: [0x3d7]
Successors: []
---
0xf5 JUMPDEST
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa DUP3
0xfb DUP2
0xfc MSTORE
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP2
0x101 POP
0x102 POP
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 SWAP2
0x108 SUB
0x109 SWAP1
0x10a RETURN
---
0xf5: JUMPDEST 
0xf6: V57 = 0x40
0xf8: V58 = M[0x40]
0xfc: M[V58] = V188
0xfd: V59 = 0x20
0xff: V60 = ADD 0x20 V58
0x103: V61 = 0x40
0x105: V62 = M[0x40]
0x108: V63 = SUB V60 V62
0x10a: RETURN V62 V63
---
Entry stack: [V11, 0xf5, V188]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf5]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x57]
Successors: [0x113, 0x117]
---
0x10b JUMPDEST
0x10c CALLVALUE
0x10d DUP1
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x10b: JUMPDEST 
0x10c: V64 = CALLVALUE
0x10e: V65 = ISZERO V64
0x10f: V66 = 0x117
0x112: JUMPI 0x117 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x10b]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V67 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0x117
[0x117:0x11f]
---
Predecessors: [0x10b]
Successors: [0x3dd]
---
0x117 JUMPDEST
0x118 POP
0x119 PUSH2 0x120
0x11c PUSH2 0x3dd
0x11f JUMP
---
0x117: JUMPDEST 
0x119: V68 = 0x120
0x11c: V69 = 0x3dd
0x11f: JUMP 0x3dd
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x120]
Exit stack: [V11, 0x120]

================================

Block 0x120
[0x120:0x161]
---
Predecessors: [0x3dd]
Successors: []
---
0x120 JUMPDEST
0x121 PUSH1 0x40
0x123 MLOAD
0x124 DUP1
0x125 DUP3
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP2
0x158 POP
0x159 POP
0x15a PUSH1 0x40
0x15c MLOAD
0x15d DUP1
0x15e SWAP2
0x15f SUB
0x160 SWAP1
0x161 RETURN
---
0x120: JUMPDEST 
0x121: V70 = 0x40
0x123: V71 = M[0x40]
0x126: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x13c: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x153: M[V71] = V75
0x154: V76 = 0x20
0x156: V77 = ADD 0x20 V71
0x15a: V78 = 0x40
0x15c: V79 = M[0x40]
0x15f: V80 = SUB V77 V79
0x161: RETURN V79 V80
---
Entry stack: [V11, 0x120, V195]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x120]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x62]
Successors: [0x16a, 0x16e]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 DUP1
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x162: JUMPDEST 
0x163: V81 = CALLVALUE
0x165: V82 = ISZERO V81
0x166: V83 = 0x16e
0x169: JUMPI 0x16e V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V11, V81]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x162]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V84 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V11, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V81]

================================

Block 0x16e
[0x16e:0x176]
---
Predecessors: [0x162]
Successors: [0x402]
---
0x16e JUMPDEST
0x16f POP
0x170 PUSH2 0x177
0x173 PUSH2 0x402
0x176 JUMP
---
0x16e: JUMPDEST 
0x170: V85 = 0x177
0x173: V86 = 0x402
0x176: JUMP 0x402
---
Entry stack: [V11, V81]
Stack pops: 1
Stack additions: [0x177]
Exit stack: [V11, 0x177]

================================

Block 0x177
[0x177:0x178]
---
Predecessors: []
Successors: []
---
0x177 JUMPDEST
0x178 STOP
---
0x177: JUMPDEST 
0x178: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x179
[0x179:0x19e]
---
Predecessors: [0x7e]
Successors: [0x87]
---
0x179 JUMPDEST
0x17a PUSH1 0x1
0x17c PUSH1 0x0
0x17e SWAP1
0x17f SLOAD
0x180 SWAP1
0x181 PUSH2 0x100
0x184 EXP
0x185 SWAP1
0x186 DIV
0x187 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19c AND
0x19d DUP2
0x19e JUMP
---
0x179: JUMPDEST 
0x17a: V87 = 0x1
0x17c: V88 = 0x0
0x17f: V89 = S[0x1]
0x181: V90 = 0x100
0x184: V91 = EXP 0x100 0x0
0x186: V92 = DIV V89 0x1
0x187: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x19e: JUMP 0x87
---
Entry stack: [V11, 0x87]
Stack pops: 1
Stack additions: [S0, V94]
Exit stack: [V11, 0x87, V94]

================================

Block 0x19f
[0x19f:0x1f5]
---
Predecessors: [0xd5]
Successors: [0x1f6, 0x23a]
---
0x19f JUMPDEST
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0x0
0x1a4 SWAP1
0x1a5 SLOAD
0x1a6 SWAP1
0x1a7 PUSH2 0x100
0x1aa EXP
0x1ab SWAP1
0x1ac DIV
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d8 AND
0x1d9 CALLER
0x1da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ef AND
0x1f0 EQ
0x1f1 DUP1
0x1f2 PUSH2 0x23a
0x1f5 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V95 = 0x1
0x1a2: V96 = 0x0
0x1a5: V97 = S[0x1]
0x1a7: V98 = 0x100
0x1aa: V99 = EXP 0x100 0x0
0x1ac: V100 = DIV V97 0x1
0x1ad: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1c3: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1d9: V105 = CALLER
0x1da: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1f0: V108 = EQ V107 V104
0x1f2: V109 = 0x23a
0x1f5: JUMPI 0x23a V108
---
Entry stack: [V11, 0xde]
Stack pops: 0
Stack additions: [V108]
Exit stack: [V11, 0xde, V108]

================================

Block 0x1f6
[0x1f6:0x239]
---
Predecessors: [0x19f]
Successors: [0x23a]
---
0x1f6 POP
0x1f7 PUSH20 0x75d802b5ce522e8baf2a41a7be0fb2f0d69b930a
0x20c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x221 AND
0x222 CALLER
0x223 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x238 AND
0x239 EQ
---
0x1f7: V110 = 0x75d802b5ce522e8baf2a41a7be0fb2f0d69b930a
0x20c: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x221: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x75d802b5ce522e8baf2a41a7be0fb2f0d69b930a
0x222: V113 = CALLER
0x223: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x238: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x239: V116 = EQ V115 0x75d802b5ce522e8baf2a41a7be0fb2f0d69b930a
---
Entry stack: [V11, 0xde, V108]
Stack pops: 1
Stack additions: [V116]
Exit stack: [V11, 0xde, V116]

================================

Block 0x23a
[0x23a:0x240]
---
Predecessors: [0x19f, 0x1f6]
Successors: [0x241, 0x2d4]
---
0x23a JUMPDEST
0x23b ISZERO
0x23c ISZERO
0x23d PUSH2 0x2d4
0x240 JUMPI
---
0x23a: JUMPDEST 
0x23b: V117 = ISZERO S0
0x23c: V118 = ISZERO V117
0x23d: V119 = 0x2d4
0x240: JUMPI 0x2d4 V118
---
Entry stack: [V11, 0xde, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0x241
[0x241:0x2d3]
---
Predecessors: [0x23a]
Successors: []
---
0x241 PUSH1 0x40
0x243 MLOAD
0x244 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x265 DUP2
0x266 MSTORE
0x267 PUSH1 0x4
0x269 ADD
0x26a DUP1
0x26b DUP1
0x26c PUSH1 0x20
0x26e ADD
0x26f DUP3
0x270 DUP2
0x271 SUB
0x272 DUP3
0x273 MSTORE
0x274 PUSH1 0x27
0x276 DUP2
0x277 MSTORE
0x278 PUSH1 0x20
0x27a ADD
0x27b DUP1
0x27c PUSH32 0x6f6e6c792073656c6c6572206f7220746865206f7261636c652063616e206361
0x29d DUP2
0x29e MSTORE
0x29f PUSH1 0x20
0x2a1 ADD
0x2a2 PUSH32 0x6c6c207468697300000000000000000000000000000000000000000000000000
0x2c3 DUP2
0x2c4 MSTORE
0x2c5 POP
0x2c6 PUSH1 0x40
0x2c8 ADD
0x2c9 SWAP2
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 SWAP2
0x2d1 SUB
0x2d2 SWAP1
0x2d3 REVERT
---
0x241: V120 = 0x40
0x243: V121 = M[0x40]
0x244: V122 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x266: M[V121] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x267: V123 = 0x4
0x269: V124 = ADD 0x4 V121
0x26c: V125 = 0x20
0x26e: V126 = ADD 0x20 V124
0x271: V127 = SUB V126 V124
0x273: M[V124] = V127
0x274: V128 = 0x27
0x277: M[V126] = 0x27
0x278: V129 = 0x20
0x27a: V130 = ADD 0x20 V126
0x27c: V131 = 0x6f6e6c792073656c6c6572206f7220746865206f7261636c652063616e206361
0x29e: M[V130] = 0x6f6e6c792073656c6c6572206f7220746865206f7261636c652063616e206361
0x29f: V132 = 0x20
0x2a1: V133 = ADD 0x20 V130
0x2a2: V134 = 0x6c6c207468697300000000000000000000000000000000000000000000000000
0x2c4: M[V133] = 0x6c6c207468697300000000000000000000000000000000000000000000000000
0x2c6: V135 = 0x40
0x2c8: V136 = ADD 0x40 V130
0x2cc: V137 = 0x40
0x2ce: V138 = M[0x40]
0x2d1: V139 = SUB V136 V138
0x2d3: REVERT V138 V139
---
Entry stack: [V11, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0x2d4
[0x2d4:0x2e0]
---
Predecessors: [0x23a]
Successors: [0x2e1, 0x34e]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x2
0x2d7 SLOAD
0x2d8 TIMESTAMP
0x2d9 LT
0x2da ISZERO
0x2db ISZERO
0x2dc ISZERO
0x2dd PUSH2 0x34e
0x2e0 JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V140 = 0x2
0x2d7: V141 = S[0x2]
0x2d8: V142 = TIMESTAMP
0x2d9: V143 = LT V142 V141
0x2da: V144 = ISZERO V143
0x2db: V145 = ISZERO V144
0x2dc: V146 = ISZERO V145
0x2dd: V147 = 0x34e
0x2e0: JUMPI 0x34e V146
---
Entry stack: [V11, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0x2e1
[0x2e1:0x34d]
---
Predecessors: [0x2d4]
Successors: []
---
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x4
0x309 ADD
0x30a DUP1
0x30b DUP1
0x30c PUSH1 0x20
0x30e ADD
0x30f DUP3
0x310 DUP2
0x311 SUB
0x312 DUP3
0x313 MSTORE
0x314 PUSH1 0x16
0x316 DUP2
0x317 MSTORE
0x318 PUSH1 0x20
0x31a ADD
0x31b DUP1
0x31c PUSH32 0x657363726f77206e6f7420796574206578706972656400000000000000000000
0x33d DUP2
0x33e MSTORE
0x33f POP
0x340 PUSH1 0x20
0x342 ADD
0x343 SWAP2
0x344 POP
0x345 POP
0x346 PUSH1 0x40
0x348 MLOAD
0x349 DUP1
0x34a SWAP2
0x34b SUB
0x34c SWAP1
0x34d REVERT
---
0x2e1: V148 = 0x40
0x2e3: V149 = M[0x40]
0x2e4: V150 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x306: M[V149] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x307: V151 = 0x4
0x309: V152 = ADD 0x4 V149
0x30c: V153 = 0x20
0x30e: V154 = ADD 0x20 V152
0x311: V155 = SUB V154 V152
0x313: M[V152] = V155
0x314: V156 = 0x16
0x317: M[V154] = 0x16
0x318: V157 = 0x20
0x31a: V158 = ADD 0x20 V154
0x31c: V159 = 0x657363726f77206e6f7420796574206578706972656400000000000000000000
0x33e: M[V158] = 0x657363726f77206e6f7420796574206578706972656400000000000000000000
0x340: V160 = 0x20
0x342: V161 = ADD 0x20 V158
0x346: V162 = 0x40
0x348: V163 = M[0x40]
0x34b: V164 = SUB V161 V163
0x34d: REVERT V163 V164
---
Entry stack: [V11, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0x34e
[0x34e:0x3d6]
---
Predecessors: [0x2d4]
Successors: []
---
0x34e JUMPDEST
0x34f PUSH32 0x1aa102143e378921826711bb10b73c4673032b1a4ab478e2080a0e9840d99363
0x370 ADDRESS
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 BALANCE
0x388 PUSH1 0x40
0x38a MLOAD
0x38b DUP1
0x38c DUP3
0x38d DUP2
0x38e MSTORE
0x38f PUSH1 0x20
0x391 ADD
0x392 SWAP2
0x393 POP
0x394 POP
0x395 PUSH1 0x40
0x397 MLOAD
0x398 DUP1
0x399 SWAP2
0x39a SUB
0x39b SWAP1
0x39c LOG1
0x39d PUSH1 0x1
0x39f PUSH1 0x0
0x3a1 SWAP1
0x3a2 SLOAD
0x3a3 SWAP1
0x3a4 PUSH2 0x100
0x3a7 EXP
0x3a8 SWAP1
0x3a9 DIV
0x3aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bf AND
0x3c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d5 AND
0x3d6 SELFDESTRUCT
---
0x34e: JUMPDEST 
0x34f: V165 = 0x1aa102143e378921826711bb10b73c4673032b1a4ab478e2080a0e9840d99363
0x370: V166 = ADDRESS
0x371: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x387: V169 = BALANCE V168
0x388: V170 = 0x40
0x38a: V171 = M[0x40]
0x38e: M[V171] = V169
0x38f: V172 = 0x20
0x391: V173 = ADD 0x20 V171
0x395: V174 = 0x40
0x397: V175 = M[0x40]
0x39a: V176 = SUB V173 V175
0x39c: LOG V175 V176 0x1aa102143e378921826711bb10b73c4673032b1a4ab478e2080a0e9840d99363
0x39d: V177 = 0x1
0x39f: V178 = 0x0
0x3a2: V179 = S[0x1]
0x3a4: V180 = 0x100
0x3a7: V181 = EXP 0x100 0x0
0x3a9: V182 = DIV V179 0x1
0x3aa: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x3c0: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x3d6: SELFDESTRUCT V186
---
Entry stack: [V11, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0x3d7
[0x3d7:0x3dc]
---
Predecessors: [0xec]
Successors: [0xf5]
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x2
0x3da SLOAD
0x3db DUP2
0x3dc JUMP
---
0x3d7: JUMPDEST 
0x3d8: V187 = 0x2
0x3da: V188 = S[0x2]
0x3dc: JUMP 0xf5
---
Entry stack: [V11, 0xf5]
Stack pops: 1
Stack additions: [S0, V188]
Exit stack: [V11, 0xf5, V188]

================================

Block 0x3dd
[0x3dd:0x401]
---
Predecessors: [0x117]
Successors: [0x120]
---
0x3dd JUMPDEST
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 SWAP1
0x3e2 SLOAD
0x3e3 SWAP1
0x3e4 PUSH2 0x100
0x3e7 EXP
0x3e8 SWAP1
0x3e9 DIV
0x3ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ff AND
0x400 DUP2
0x401 JUMP
---
0x3dd: JUMPDEST 
0x3de: V189 = 0x0
0x3e2: V190 = S[0x0]
0x3e4: V191 = 0x100
0x3e7: V192 = EXP 0x100 0x0
0x3e9: V193 = DIV V190 0x1
0x3ea: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x401: JUMP 0x120
---
Entry stack: [V11, 0x120]
Stack pops: 1
Stack additions: [S0, V195]
Exit stack: [V11, 0x120, V195]

================================

Block 0x402
[0x402:0x44b]
---
Predecessors: [0x16e]
Successors: [0x44c, 0x4b9]
---
0x402 JUMPDEST
0x403 PUSH20 0x75d802b5ce522e8baf2a41a7be0fb2f0d69b930a
0x418 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42d AND
0x42e CALLER
0x42f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x444 AND
0x445 EQ
0x446 ISZERO
0x447 ISZERO
0x448 PUSH2 0x4b9
0x44b JUMPI
---
0x402: JUMPDEST 
0x403: V196 = 0x75d802b5ce522e8baf2a41a7be0fb2f0d69b930a
0x418: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x75d802b5ce522e8baf2a41a7be0fb2f0d69b930a
0x42e: V199 = CALLER
0x42f: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x444: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x445: V202 = EQ V201 0x75d802b5ce522e8baf2a41a7be0fb2f0d69b930a
0x446: V203 = ISZERO V202
0x447: V204 = ISZERO V203
0x448: V205 = 0x4b9
0x44b: JUMPI 0x4b9 V204
---
Entry stack: [V11, 0x177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x177]

================================

Block 0x44c
[0x44c:0x4b8]
---
Predecessors: [0x402]
Successors: []
---
0x44c PUSH1 0x40
0x44e MLOAD
0x44f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x470 DUP2
0x471 MSTORE
0x472 PUSH1 0x4
0x474 ADD
0x475 DUP1
0x476 DUP1
0x477 PUSH1 0x20
0x479 ADD
0x47a DUP3
0x47b DUP2
0x47c SUB
0x47d DUP3
0x47e MSTORE
0x47f PUSH1 0x1d
0x481 DUP2
0x482 MSTORE
0x483 PUSH1 0x20
0x485 ADD
0x486 DUP1
0x487 PUSH32 0x6f6e6c7920746865206f7261636c652063616e2063616c6c2074686973000000
0x4a8 DUP2
0x4a9 MSTORE
0x4aa POP
0x4ab PUSH1 0x20
0x4ad ADD
0x4ae SWAP2
0x4af POP
0x4b0 POP
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 DUP1
0x4b5 SWAP2
0x4b6 SUB
0x4b7 SWAP1
0x4b8 REVERT
---
0x44c: V206 = 0x40
0x44e: V207 = M[0x40]
0x44f: V208 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x471: M[V207] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x472: V209 = 0x4
0x474: V210 = ADD 0x4 V207
0x477: V211 = 0x20
0x479: V212 = ADD 0x20 V210
0x47c: V213 = SUB V212 V210
0x47e: M[V210] = V213
0x47f: V214 = 0x1d
0x482: M[V212] = 0x1d
0x483: V215 = 0x20
0x485: V216 = ADD 0x20 V212
0x487: V217 = 0x6f6e6c7920746865206f7261636c652063616e2063616c6c2074686973000000
0x4a9: M[V216] = 0x6f6e6c7920746865206f7261636c652063616e2063616c6c2074686973000000
0x4ab: V218 = 0x20
0x4ad: V219 = ADD 0x20 V216
0x4b1: V220 = 0x40
0x4b3: V221 = M[0x40]
0x4b6: V222 = SUB V219 V221
0x4b8: REVERT V221 V222
---
Entry stack: [V11, 0x177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x177]

================================

Block 0x4b9
[0x4b9:0x540]
---
Predecessors: [0x402]
Successors: []
---
0x4b9 JUMPDEST
0x4ba PUSH32 0xfb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565
0x4db ADDRESS
0x4dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f1 AND
0x4f2 BALANCE
0x4f3 PUSH1 0x40
0x4f5 MLOAD
0x4f6 DUP1
0x4f7 DUP3
0x4f8 DUP2
0x4f9 MSTORE
0x4fa PUSH1 0x20
0x4fc ADD
0x4fd SWAP2
0x4fe POP
0x4ff POP
0x500 PUSH1 0x40
0x502 MLOAD
0x503 DUP1
0x504 SWAP2
0x505 SUB
0x506 SWAP1
0x507 LOG1
0x508 PUSH1 0x0
0x50a DUP1
0x50b SWAP1
0x50c SLOAD
0x50d SWAP1
0x50e PUSH2 0x100
0x511 EXP
0x512 SWAP1
0x513 DIV
0x514 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x529 AND
0x52a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53f AND
0x540 SELFDESTRUCT
---
0x4b9: JUMPDEST 
0x4ba: V223 = 0xfb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565
0x4db: V224 = ADDRESS
0x4dc: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x4f2: V227 = BALANCE V226
0x4f3: V228 = 0x40
0x4f5: V229 = M[0x40]
0x4f9: M[V229] = V227
0x4fa: V230 = 0x20
0x4fc: V231 = ADD 0x20 V229
0x500: V232 = 0x40
0x502: V233 = M[0x40]
0x505: V234 = SUB V231 V233
0x507: LOG V233 V234 0xfb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565
0x508: V235 = 0x0
0x50c: V236 = S[0x0]
0x50e: V237 = 0x100
0x511: V238 = EXP 0x100 0x0
0x513: V239 = DIV V236 0x1
0x514: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x529: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x52a: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x53f: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x540: SELFDESTRUCT V243
---
Entry stack: [V11, 0x177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x177]

================================

Block 0x541
[0x541:0x55b]
---
Predecessors: []
Successors: [0x55c]
Has unresolved jump.
---
0x541 STOP
0x542 LOG1
0x543 PUSH6 0x627a7a723058
0x54a SHA3
0x54b EXP
0x54c MULMOD
0x54d DUP8
0x54e CALLDATALOAD
0x54f LOG2
0x550 INVALID
0x551 MISSING 0xec
0x552 NOT
0x553 DUP3
0x554 MISSING 0xe4
0x555 MISSING 0xc2
0x556 MISSING 0xb5
0x557 MISSING 0xad
0x558 MISSING 0x47
0x559 SWAP6
0x55a TIMESTAMP
0x55b JUMPI
---
0x541: STOP 
0x542: LOG S0 S1 S2
0x543: V244 = 0x627a7a723058
0x54a: V245 = SHA3 0x627a7a723058 S3
0x54b: V246 = EXP V245 S4
0x54c: V247 = MULMOD V246 S5 S6
0x54e: V248 = CALLDATALOAD S13
0x54f: LOG V248 V247 S7 S8
0x550: INVALID 
0x551: MISSING 0xec
0x552: V249 = NOT S0
0x554: MISSING 0xe4
0x555: MISSING 0xc2
0x556: MISSING 0xb5
0x557: MISSING 0xad
0x558: MISSING 0x47
0x55a: V250 = TIMESTAMP
0x55b: JUMPI V250 S6
---
Entry stack: []
Stack pops: 0
Stack additions: [S9, S10, S11, S12, S13, S2, V249, S1, S2, S1, S2, S3, S4, S5, S0]
Exit stack: []

================================

Block 0x55c
[0x55c:0x56e]
---
Predecessors: [0x541]
Successors: []
---
0x55c SWAP10
0x55d MISSING 0xad
0x55e MISSING 0xcc
0x55f MISSING 0x4c
0x560 MISSING 0xaf
0x561 MISSING 0xe5
0x562 COINBASE
0x563 CODESIZE
0x564 MISSING 0xf6
0x565 PUSH9 0x6951139c220029
---
0x55d: MISSING 0xad
0x55e: MISSING 0xcc
0x55f: MISSING 0x4c
0x560: MISSING 0xaf
0x561: MISSING 0xe5
0x562: V251 = COINBASE
0x563: V252 = CODESIZE
0x564: MISSING 0xf6
0x565: V253 = 0x6951139c220029
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 350
Stack additions: [0x6951139c220029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8551a53
Entry block: 0x72
Exit block: 0x87
Body: 0x72, 0x7a, 0x7e, 0x87, 0x179

Function 1:
Public function signature: 0x1eb5ea2e
Entry block: 0xc9
Exit block: 0x34e
Body: 0xc9, 0xd1, 0xd5, 0x19f, 0x1f6, 0x23a, 0x241, 0x2d4, 0x2e1, 0x34e

Function 2:
Public function signature: 0x3197cbb6
Entry block: 0xe0
Exit block: 0xf5
Body: 0xe0, 0xe8, 0xec, 0xf5, 0x3d7

Function 3:
Public function signature: 0x7150d8ae
Entry block: 0x10b
Exit block: 0x120
Body: 0x10b, 0x113, 0x117, 0x120, 0x3dd

Function 4:
Public function signature: 0x86d1a69f
Entry block: 0x162
Exit block: 0x4b9
Body: 0x162, 0x16a, 0x16e, 0x402, 0x44c, 0x4b9

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

