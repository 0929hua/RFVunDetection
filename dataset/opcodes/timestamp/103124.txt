args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/4/103124.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x110]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x110
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x110
0xa: JUMPI 0x110 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x115]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1c488683
0x3a EQ
0x3b PUSH2 0x115
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1c488683
0x3a: V12 = EQ 0x1c488683 V10
0x3b: V13 = 0x115
0x3e: JUMPI 0x115 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x142]
---
0x3f DUP1
0x40 PUSH4 0x1f6b1d22
0x45 EQ
0x46 PUSH2 0x142
0x49 JUMPI
---
0x40: V14 = 0x1f6b1d22
0x45: V15 = EQ 0x1f6b1d22 V10
0x46: V16 = 0x142
0x49: JUMPI 0x142 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x197]
---
0x4a DUP1
0x4b PUSH4 0x217145e0
0x50 EQ
0x51 PUSH2 0x197
0x54 JUMPI
---
0x4b: V17 = 0x217145e0
0x50: V18 = EQ 0x217145e0 V10
0x51: V19 = 0x197
0x54: JUMPI 0x197 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1c4]
---
0x55 DUP1
0x56 PUSH4 0x22e63b34
0x5b EQ
0x5c PUSH2 0x1c4
0x5f JUMPI
---
0x56: V20 = 0x22e63b34
0x5b: V21 = EQ 0x22e63b34 V10
0x5c: V22 = 0x1c4
0x5f: JUMPI 0x1c4 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1f1]
---
0x60 DUP1
0x61 PUSH4 0x27d795d7
0x66 EQ
0x67 PUSH2 0x1f1
0x6a JUMPI
---
0x61: V23 = 0x27d795d7
0x66: V24 = EQ 0x27d795d7 V10
0x67: V25 = 0x1f1
0x6a: JUMPI 0x1f1 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x21a]
---
0x6b DUP1
0x6c PUSH4 0x28a14b04
0x71 EQ
0x72 PUSH2 0x21a
0x75 JUMPI
---
0x6c: V26 = 0x28a14b04
0x71: V27 = EQ 0x28a14b04 V10
0x72: V28 = 0x21a
0x75: JUMPI 0x21a V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x247]
---
0x76 DUP1
0x77 PUSH4 0x2dbc6d55
0x7c EQ
0x7d PUSH2 0x247
0x80 JUMPI
---
0x77: V29 = 0x2dbc6d55
0x7c: V30 = EQ 0x2dbc6d55 V10
0x7d: V31 = 0x247
0x80: JUMPI 0x247 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x270]
---
0x81 DUP1
0x82 PUSH4 0x49d8d955
0x87 EQ
0x88 PUSH2 0x270
0x8b JUMPI
---
0x82: V32 = 0x49d8d955
0x87: V33 = EQ 0x49d8d955 V10
0x88: V34 = 0x270
0x8b: JUMPI 0x270 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x27a]
---
0x8c DUP1
0x8d PUSH4 0x52949a1b
0x92 EQ
0x93 PUSH2 0x27a
0x96 JUMPI
---
0x8d: V35 = 0x52949a1b
0x92: V36 = EQ 0x52949a1b V10
0x93: V37 = 0x27a
0x96: JUMPI 0x27a V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x2a7]
---
0x97 DUP1
0x98 PUSH4 0x72a054d1
0x9d EQ
0x9e PUSH2 0x2a7
0xa1 JUMPI
---
0x98: V38 = 0x72a054d1
0x9d: V39 = EQ 0x72a054d1 V10
0x9e: V40 = 0x2a7
0xa1: JUMPI 0x2a7 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x326]
---
0xa2 DUP1
0xa3 PUSH4 0x7d21c191
0xa8 EQ
0xa9 PUSH2 0x326
0xac JUMPI
---
0xa3: V41 = 0x7d21c191
0xa8: V42 = EQ 0x7d21c191 V10
0xa9: V43 = 0x326
0xac: JUMPI 0x326 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x33b]
---
0xad DUP1
0xae PUSH4 0xac3d6bea
0xb3 EQ
0xb4 PUSH2 0x33b
0xb7 JUMPI
---
0xae: V44 = 0xac3d6bea
0xb3: V45 = EQ 0xac3d6bea V10
0xb4: V46 = 0x33b
0xb7: JUMPI 0x33b V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3, 0x350]
---
0xb8 DUP1
0xb9 PUSH4 0xc19d93fb
0xbe EQ
0xbf PUSH2 0x350
0xc2 JUMPI
---
0xb9: V47 = 0xc19d93fb
0xbe: V48 = EQ 0xc19d93fb V10
0xbf: V49 = 0x350
0xc2: JUMPI 0x350 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xb8]
Successors: [0xce, 0x387]
---
0xc3 DUP1
0xc4 PUSH4 0xc426a65c
0xc9 EQ
0xca PUSH2 0x387
0xcd JUMPI
---
0xc4: V50 = 0xc426a65c
0xc9: V51 = EQ 0xc426a65c V10
0xca: V52 = 0x387
0xcd: JUMPI 0x387 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd8]
---
Predecessors: [0xc3]
Successors: [0xd9, 0x3b4]
---
0xce DUP1
0xcf PUSH4 0xda1fbbf7
0xd4 EQ
0xd5 PUSH2 0x3b4
0xd8 JUMPI
---
0xcf: V53 = 0xda1fbbf7
0xd4: V54 = EQ 0xda1fbbf7 V10
0xd5: V55 = 0x3b4
0xd8: JUMPI 0x3b4 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd9
[0xd9:0xe3]
---
Predecessors: [0xce]
Successors: [0xe4, 0x3dd]
---
0xd9 DUP1
0xda PUSH4 0xe19391f8
0xdf EQ
0xe0 PUSH2 0x3dd
0xe3 JUMPI
---
0xda: V56 = 0xe19391f8
0xdf: V57 = EQ 0xe19391f8 V10
0xe0: V58 = 0x3dd
0xe3: JUMPI 0x3dd V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe4
[0xe4:0xee]
---
Predecessors: [0xd9]
Successors: [0xef, 0x432]
---
0xe4 DUP1
0xe5 PUSH4 0xe3941225
0xea EQ
0xeb PUSH2 0x432
0xee JUMPI
---
0xe5: V59 = 0xe3941225
0xea: V60 = EQ 0xe3941225 V10
0xeb: V61 = 0x432
0xee: JUMPI 0x432 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xef
[0xef:0xf9]
---
Predecessors: [0xe4]
Successors: [0xfa, 0x45b]
---
0xef DUP1
0xf0 PUSH4 0xe7b4d44a
0xf5 EQ
0xf6 PUSH2 0x45b
0xf9 JUMPI
---
0xf0: V62 = 0xe7b4d44a
0xf5: V63 = EQ 0xe7b4d44a V10
0xf6: V64 = 0x45b
0xf9: JUMPI 0x45b V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xfa
[0xfa:0x104]
---
Predecessors: [0xef]
Successors: [0x105, 0x488]
---
0xfa DUP1
0xfb PUSH4 0xee97f7f3
0x100 EQ
0x101 PUSH2 0x488
0x104 JUMPI
---
0xfb: V65 = 0xee97f7f3
0x100: V66 = EQ 0xee97f7f3 V10
0x101: V67 = 0x488
0x104: JUMPI 0x488 V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x105
[0x105:0x10f]
---
Predecessors: [0xfa]
Successors: [0x110, 0x4dd]
---
0x105 DUP1
0x106 PUSH4 0xf2a968a5
0x10b EQ
0x10c PUSH2 0x4dd
0x10f JUMPI
---
0x106: V68 = 0xf2a968a5
0x10b: V69 = EQ 0xf2a968a5 V10
0x10c: V70 = 0x4dd
0x10f: JUMPI 0x4dd V69
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x110
[0x110:0x114]
---
Predecessors: [0x0, 0x105]
Successors: []
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 DUP1
0x114 REVERT
---
0x110: JUMPDEST 
0x111: V71 = 0x0
0x114: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x115
[0x115:0x11b]
---
Predecessors: [0xb]
Successors: [0x11c, 0x120]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x115: JUMPDEST 
0x116: V72 = CALLVALUE
0x117: V73 = ISZERO V72
0x118: V74 = 0x120
0x11b: JUMPI 0x120 V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x115]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V75 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x115]
Successors: [0x506]
---
0x120 JUMPDEST
0x121 PUSH2 0x128
0x124 PUSH2 0x506
0x127 JUMP
---
0x120: JUMPDEST 
0x121: V76 = 0x128
0x124: V77 = 0x506
0x127: JUMP 0x506
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x128]
Exit stack: [V10, 0x128]

================================

Block 0x128
[0x128:0x141]
---
Predecessors: [0x506]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b MLOAD
0x12c DUP1
0x12d DUP3
0x12e ISZERO
0x12f ISZERO
0x130 ISZERO
0x131 ISZERO
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP2
0x138 POP
0x139 POP
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e SWAP2
0x13f SUB
0x140 SWAP1
0x141 RETURN
---
0x128: JUMPDEST 
0x129: V78 = 0x40
0x12b: V79 = M[0x40]
0x12e: V80 = ISZERO V378
0x12f: V81 = ISZERO V80
0x130: V82 = ISZERO V81
0x131: V83 = ISZERO V82
0x133: M[V79] = V83
0x134: V84 = 0x20
0x136: V85 = ADD 0x20 V79
0x13a: V86 = 0x40
0x13c: V87 = M[0x40]
0x13f: V88 = SUB V85 V87
0x141: RETURN V87 V88
---
Entry stack: [V10, 0x128, V378]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x128]

================================

Block 0x142
[0x142:0x148]
---
Predecessors: [0x3f]
Successors: [0x149, 0x14d]
---
0x142 JUMPDEST
0x143 CALLVALUE
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x142: JUMPDEST 
0x143: V89 = CALLVALUE
0x144: V90 = ISZERO V89
0x145: V91 = 0x14d
0x148: JUMPI 0x14d V90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x142]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V92 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14d
[0x14d:0x154]
---
Predecessors: [0x142]
Successors: [0x519]
---
0x14d JUMPDEST
0x14e PUSH2 0x155
0x151 PUSH2 0x519
0x154 JUMP
---
0x14d: JUMPDEST 
0x14e: V93 = 0x155
0x151: V94 = 0x519
0x154: JUMP 0x519
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x155]
Exit stack: [V10, 0x155]

================================

Block 0x155
[0x155:0x196]
---
Predecessors: [0x519]
Successors: []
---
0x155 JUMPDEST
0x156 PUSH1 0x40
0x158 MLOAD
0x159 DUP1
0x15a DUP3
0x15b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x170 AND
0x171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186 AND
0x187 DUP2
0x188 MSTORE
0x189 PUSH1 0x20
0x18b ADD
0x18c SWAP2
0x18d POP
0x18e POP
0x18f PUSH1 0x40
0x191 MLOAD
0x192 DUP1
0x193 SWAP2
0x194 SUB
0x195 SWAP1
0x196 RETURN
---
0x155: JUMPDEST 
0x156: V95 = 0x40
0x158: V96 = M[0x40]
0x15b: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x170: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x171: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x188: M[V96] = V100
0x189: V101 = 0x20
0x18b: V102 = ADD 0x20 V96
0x18f: V103 = 0x40
0x191: V104 = M[0x40]
0x194: V105 = SUB V102 V104
0x196: RETURN V104 V105
---
Entry stack: [V10, 0x155, V386]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x155]

================================

Block 0x197
[0x197:0x19d]
---
Predecessors: [0x4a]
Successors: [0x19e, 0x1a2]
---
0x197 JUMPDEST
0x198 CALLVALUE
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x197: JUMPDEST 
0x198: V106 = CALLVALUE
0x199: V107 = ISZERO V106
0x19a: V108 = 0x1a2
0x19d: JUMPI 0x1a2 V107
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x197]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V109 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a2
[0x1a2:0x1a9]
---
Predecessors: [0x197]
Successors: [0x53f]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x1aa
0x1a6 PUSH2 0x53f
0x1a9 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V110 = 0x1aa
0x1a6: V111 = 0x53f
0x1a9: JUMP 0x53f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1aa]
Exit stack: [V10, 0x1aa]

================================

Block 0x1aa
[0x1aa:0x1c3]
---
Predecessors: [0x709]
Successors: []
---
0x1aa JUMPDEST
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae DUP1
0x1af DUP3
0x1b0 ISZERO
0x1b1 ISZERO
0x1b2 ISZERO
0x1b3 ISZERO
0x1b4 DUP2
0x1b5 MSTORE
0x1b6 PUSH1 0x20
0x1b8 ADD
0x1b9 SWAP2
0x1ba POP
0x1bb POP
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 SWAP2
0x1c1 SUB
0x1c2 SWAP1
0x1c3 RETURN
---
0x1aa: JUMPDEST 
0x1ab: V112 = 0x40
0x1ad: V113 = M[0x40]
0x1b0: V114 = ISZERO 0x1
0x1b1: V115 = ISZERO 0x0
0x1b2: V116 = ISZERO 0x1
0x1b3: V117 = ISZERO 0x0
0x1b5: M[V113] = 0x1
0x1b6: V118 = 0x20
0x1b8: V119 = ADD 0x20 V113
0x1bc: V120 = 0x40
0x1be: V121 = M[0x40]
0x1c1: V122 = SUB V119 V121
0x1c3: RETURN V121 V122
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c4
[0x1c4:0x1ca]
---
Predecessors: [0x55]
Successors: [0x1cb, 0x1cf]
---
0x1c4 JUMPDEST
0x1c5 CALLVALUE
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V123 = CALLVALUE
0x1c6: V124 = ISZERO V123
0x1c7: V125 = 0x1cf
0x1ca: JUMPI 0x1cf V124
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V126 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x1c4]
Successors: [0x77c]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x1d7
0x1d3 PUSH2 0x77c
0x1d6 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V127 = 0x1d7
0x1d3: V128 = 0x77c
0x1d6: JUMP 0x77c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V10, 0x1d7]

================================

Block 0x1d7
[0x1d7:0x1f0]
---
Predecessors: [0x77c]
Successors: []
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db DUP1
0x1dc DUP3
0x1dd ISZERO
0x1de ISZERO
0x1df ISZERO
0x1e0 ISZERO
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP2
0x1e7 POP
0x1e8 POP
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec DUP1
0x1ed SWAP2
0x1ee SUB
0x1ef SWAP1
0x1f0 RETURN
---
0x1d7: JUMPDEST 
0x1d8: V129 = 0x40
0x1da: V130 = M[0x40]
0x1dd: V131 = ISZERO V545
0x1de: V132 = ISZERO V131
0x1df: V133 = ISZERO V132
0x1e0: V134 = ISZERO V133
0x1e2: M[V130] = V134
0x1e3: V135 = 0x20
0x1e5: V136 = ADD 0x20 V130
0x1e9: V137 = 0x40
0x1eb: V138 = M[0x40]
0x1ee: V139 = SUB V136 V138
0x1f0: RETURN V138 V139
---
Entry stack: [V10, 0x1d7, V545]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d7]

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0x60]
Successors: [0x1f8, 0x1fc]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V140 = CALLVALUE
0x1f3: V141 = ISZERO V140
0x1f4: V142 = 0x1fc
0x1f7: JUMPI 0x1fc V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V143 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fc
[0x1fc:0x203]
---
Predecessors: [0x1f1]
Successors: [0x78f]
---
0x1fc JUMPDEST
0x1fd PUSH2 0x204
0x200 PUSH2 0x78f
0x203 JUMP
---
0x1fc: JUMPDEST 
0x1fd: V144 = 0x204
0x200: V145 = 0x78f
0x203: JUMP 0x78f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x204]
Exit stack: [V10, 0x204]

================================

Block 0x204
[0x204:0x219]
---
Predecessors: [0x78f]
Successors: []
---
0x204 JUMPDEST
0x205 PUSH1 0x40
0x207 MLOAD
0x208 DUP1
0x209 DUP3
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x20
0x20e ADD
0x20f SWAP2
0x210 POP
0x211 POP
0x212 PUSH1 0x40
0x214 MLOAD
0x215 DUP1
0x216 SWAP2
0x217 SUB
0x218 SWAP1
0x219 RETURN
---
0x204: JUMPDEST 
0x205: V146 = 0x40
0x207: V147 = M[0x40]
0x20b: M[V147] = V547
0x20c: V148 = 0x20
0x20e: V149 = ADD 0x20 V147
0x212: V150 = 0x40
0x214: V151 = M[0x40]
0x217: V152 = SUB V149 V151
0x219: RETURN V151 V152
---
Entry stack: [V10, 0x204, V547]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x204]

================================

Block 0x21a
[0x21a:0x220]
---
Predecessors: [0x6b]
Successors: [0x221, 0x225]
---
0x21a JUMPDEST
0x21b CALLVALUE
0x21c ISZERO
0x21d PUSH2 0x225
0x220 JUMPI
---
0x21a: JUMPDEST 
0x21b: V153 = CALLVALUE
0x21c: V154 = ISZERO V153
0x21d: V155 = 0x225
0x220: JUMPI 0x225 V154
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x221
[0x221:0x224]
---
Predecessors: [0x21a]
Successors: []
---
0x221 PUSH1 0x0
0x223 DUP1
0x224 REVERT
---
0x221: V156 = 0x0
0x224: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x225
[0x225:0x22c]
---
Predecessors: [0x21a]
Successors: [0x795]
---
0x225 JUMPDEST
0x226 PUSH2 0x22d
0x229 PUSH2 0x795
0x22c JUMP
---
0x225: JUMPDEST 
0x226: V157 = 0x22d
0x229: V158 = 0x795
0x22c: JUMP 0x795
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22d]
Exit stack: [V10, 0x22d]

================================

Block 0x22d
[0x22d:0x246]
---
Predecessors: [0x993]
Successors: []
---
0x22d JUMPDEST
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP1
0x232 DUP3
0x233 ISZERO
0x234 ISZERO
0x235 ISZERO
0x236 ISZERO
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP2
0x23d POP
0x23e POP
0x23f PUSH1 0x40
0x241 MLOAD
0x242 DUP1
0x243 SWAP2
0x244 SUB
0x245 SWAP1
0x246 RETURN
---
0x22d: JUMPDEST 
0x22e: V159 = 0x40
0x230: V160 = M[0x40]
0x233: V161 = ISZERO {0x0, 0x1}
0x234: V162 = ISZERO V161
0x235: V163 = ISZERO V162
0x236: V164 = ISZERO V163
0x238: M[V160] = V164
0x239: V165 = 0x20
0x23b: V166 = ADD 0x20 V160
0x23f: V167 = 0x40
0x241: V168 = M[0x40]
0x244: V169 = SUB V166 V168
0x246: RETURN V168 V169
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x247
[0x247:0x24d]
---
Predecessors: [0x76]
Successors: [0x24e, 0x252]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 ISZERO
0x24a PUSH2 0x252
0x24d JUMPI
---
0x247: JUMPDEST 
0x248: V170 = CALLVALUE
0x249: V171 = ISZERO V170
0x24a: V172 = 0x252
0x24d: JUMPI 0x252 V171
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24e
[0x24e:0x251]
---
Predecessors: [0x247]
Successors: []
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
---
0x24e: V173 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x252
[0x252:0x259]
---
Predecessors: [0x247]
Successors: [0x997]
---
0x252 JUMPDEST
0x253 PUSH2 0x25a
0x256 PUSH2 0x997
0x259 JUMP
---
0x252: JUMPDEST 
0x253: V174 = 0x25a
0x256: V175 = 0x997
0x259: JUMP 0x997
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25a]
Exit stack: [V10, 0x25a]

================================

Block 0x25a
[0x25a:0x26f]
---
Predecessors: [0x997]
Successors: []
---
0x25a JUMPDEST
0x25b PUSH1 0x40
0x25d MLOAD
0x25e DUP1
0x25f DUP3
0x260 DUP2
0x261 MSTORE
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP2
0x266 POP
0x267 POP
0x268 PUSH1 0x40
0x26a MLOAD
0x26b DUP1
0x26c SWAP2
0x26d SUB
0x26e SWAP1
0x26f RETURN
---
0x25a: JUMPDEST 
0x25b: V176 = 0x40
0x25d: V177 = M[0x40]
0x261: M[V177] = V713
0x262: V178 = 0x20
0x264: V179 = ADD 0x20 V177
0x268: V180 = 0x40
0x26a: V181 = M[0x40]
0x26d: V182 = SUB V179 V181
0x26f: RETURN V181 V182
---
Entry stack: [V10, 0x25a, V713]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x270
[0x270:0x277]
---
Predecessors: [0x81]
Successors: [0x99d]
---
0x270 JUMPDEST
0x271 PUSH2 0x278
0x274 PUSH2 0x99d
0x277 JUMP
---
0x270: JUMPDEST 
0x271: V183 = 0x278
0x274: V184 = 0x99d
0x277: JUMP 0x99d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x278]
Exit stack: [V10, 0x278]

================================

Block 0x278
[0x278:0x279]
---
Predecessors: [0xa37]
Successors: []
---
0x278 JUMPDEST
0x279 STOP
---
0x278: JUMPDEST 
0x279: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27a
[0x27a:0x280]
---
Predecessors: [0x8c]
Successors: [0x281, 0x285]
---
0x27a JUMPDEST
0x27b CALLVALUE
0x27c ISZERO
0x27d PUSH2 0x285
0x280 JUMPI
---
0x27a: JUMPDEST 
0x27b: V185 = CALLVALUE
0x27c: V186 = ISZERO V185
0x27d: V187 = 0x285
0x280: JUMPI 0x285 V186
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x281
[0x281:0x284]
---
Predecessors: [0x27a]
Successors: []
---
0x281 PUSH1 0x0
0x283 DUP1
0x284 REVERT
---
0x281: V188 = 0x0
0x284: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x285
[0x285:0x28c]
---
Predecessors: [0x27a]
Successors: [0xa42]
---
0x285 JUMPDEST
0x286 PUSH2 0x28d
0x289 PUSH2 0xa42
0x28c JUMP
---
0x285: JUMPDEST 
0x286: V189 = 0x28d
0x289: V190 = 0xa42
0x28c: JUMP 0xa42
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x28d]
Exit stack: [V10, 0x28d]

================================

Block 0x28d
[0x28d:0x2a6]
---
Predecessors: [0xa42]
Successors: []
---
0x28d JUMPDEST
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 DUP3
0x293 ISZERO
0x294 ISZERO
0x295 ISZERO
0x296 ISZERO
0x297 DUP2
0x298 MSTORE
0x299 PUSH1 0x20
0x29b ADD
0x29c SWAP2
0x29d POP
0x29e POP
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 SWAP2
0x2a4 SUB
0x2a5 SWAP1
0x2a6 RETURN
---
0x28d: JUMPDEST 
0x28e: V191 = 0x40
0x290: V192 = M[0x40]
0x293: V193 = ISZERO V768
0x294: V194 = ISZERO V193
0x295: V195 = ISZERO V194
0x296: V196 = ISZERO V195
0x298: M[V192] = V196
0x299: V197 = 0x20
0x29b: V198 = ADD 0x20 V192
0x29f: V199 = 0x40
0x2a1: V200 = M[0x40]
0x2a4: V201 = SUB V198 V200
0x2a6: RETURN V200 V201
---
Entry stack: [V10, 0x28d, V768]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x28d]

================================

Block 0x2a7
[0x2a7:0x2ad]
---
Predecessors: [0x97]
Successors: [0x2ae, 0x2b2]
---
0x2a7 JUMPDEST
0x2a8 CALLVALUE
0x2a9 ISZERO
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V202 = CALLVALUE
0x2a9: V203 = ISZERO V202
0x2aa: V204 = 0x2b2
0x2ad: JUMPI 0x2b2 V203
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x2a7]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V205 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b2
[0x2b2:0x2b9]
---
Predecessors: [0x2a7]
Successors: [0xa55]
---
0x2b2 JUMPDEST
0x2b3 PUSH2 0x2ba
0x2b6 PUSH2 0xa55
0x2b9 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V206 = 0x2ba
0x2b6: V207 = 0xa55
0x2b9: JUMP 0xa55
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2ba]
Exit stack: [V10, 0x2ba]

================================

Block 0x2ba
[0x2ba:0x2c8]
---
Predecessors: [0xa55]
Successors: [0x2c9, 0x2ca]
---
0x2ba JUMPDEST
0x2bb PUSH1 0x40
0x2bd MLOAD
0x2be DUP1
0x2bf DUP7
0x2c0 PUSH1 0x7
0x2c2 DUP2
0x2c3 GT
0x2c4 ISZERO
0x2c5 PUSH2 0x2ca
0x2c8 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V208 = 0x40
0x2bd: V209 = M[0x40]
0x2c0: V210 = 0x7
0x2c3: V211 = GT V779 0x7
0x2c4: V212 = ISZERO V211
0x2c5: V213 = 0x2ca
0x2c8: JUMPI 0x2ca V212
---
Entry stack: [V10, V779, V781, V783, V791, V793]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V209, V209, S4]
Exit stack: [V10, V779, V781, V783, V791, V793, V209, V209, V779]

================================

Block 0x2c9
[0x2c9:0x2c9]
---
Predecessors: [0x2ba]
Successors: []
---
0x2c9 INVALID
---
0x2c9: INVALID 
---
Entry stack: [V10, V779, V781, V783, V791, V793, V209, V209, V779]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V779, V781, V783, V791, V793, V209, V209, V779]

================================

Block 0x2ca
[0x2ca:0x325]
---
Predecessors: [0x2ba]
Successors: []
---
0x2ca JUMPDEST
0x2cb PUSH1 0xff
0x2cd AND
0x2ce DUP2
0x2cf MSTORE
0x2d0 PUSH1 0x20
0x2d2 ADD
0x2d3 DUP6
0x2d4 DUP2
0x2d5 MSTORE
0x2d6 PUSH1 0x20
0x2d8 ADD
0x2d9 DUP5
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x20
0x2de ADD
0x2df DUP4
0x2e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f5 AND
0x2f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30b AND
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 DUP3
0x312 DUP2
0x313 MSTORE
0x314 PUSH1 0x20
0x316 ADD
0x317 SWAP6
0x318 POP
0x319 POP
0x31a POP
0x31b POP
0x31c POP
0x31d POP
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 SWAP2
0x323 SUB
0x324 SWAP1
0x325 RETURN
---
0x2ca: JUMPDEST 
0x2cb: V214 = 0xff
0x2cd: V215 = AND 0xff V779
0x2cf: M[V209] = V215
0x2d0: V216 = 0x20
0x2d2: V217 = ADD 0x20 V209
0x2d5: M[V217] = V781
0x2d6: V218 = 0x20
0x2d8: V219 = ADD 0x20 V217
0x2db: M[V219] = V783
0x2dc: V220 = 0x20
0x2de: V221 = ADD 0x20 V219
0x2e0: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0x2f6: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x30d: M[V221] = V225
0x30e: V226 = 0x20
0x310: V227 = ADD 0x20 V221
0x313: M[V227] = V793
0x314: V228 = 0x20
0x316: V229 = ADD 0x20 V227
0x31e: V230 = 0x40
0x320: V231 = M[0x40]
0x323: V232 = SUB V229 V231
0x325: RETURN V231 V232
---
Entry stack: [V10, V779, V781, V783, V791, V793, V209, V209, V779]
Stack pops: 8
Stack additions: []
Exit stack: [V10]

================================

Block 0x326
[0x326:0x32c]
---
Predecessors: [0xa2]
Successors: [0x32d, 0x331]
---
0x326 JUMPDEST
0x327 CALLVALUE
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x326: JUMPDEST 
0x327: V233 = CALLVALUE
0x328: V234 = ISZERO V233
0x329: V235 = 0x331
0x32c: JUMPI 0x331 V234
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x326]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V236 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x331
[0x331:0x338]
---
Predecessors: [0x326]
Successors: [0xaaa]
---
0x331 JUMPDEST
0x332 PUSH2 0x339
0x335 PUSH2 0xaaa
0x338 JUMP
---
0x331: JUMPDEST 
0x332: V237 = 0x339
0x335: V238 = 0xaaa
0x338: JUMP 0xaaa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x339]
Exit stack: [V10, 0x339]

================================

Block 0x339
[0x339:0x33a]
---
Predecessors: [0xd02]
Successors: []
---
0x339 JUMPDEST
0x33a STOP
---
0x339: JUMPDEST 
0x33a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33b
[0x33b:0x341]
---
Predecessors: [0xad]
Successors: [0x342, 0x346]
---
0x33b JUMPDEST
0x33c CALLVALUE
0x33d ISZERO
0x33e PUSH2 0x346
0x341 JUMPI
---
0x33b: JUMPDEST 
0x33c: V239 = CALLVALUE
0x33d: V240 = ISZERO V239
0x33e: V241 = 0x346
0x341: JUMPI 0x346 V240
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x342
[0x342:0x345]
---
Predecessors: [0x33b]
Successors: []
---
0x342 PUSH1 0x0
0x344 DUP1
0x345 REVERT
---
0x342: V242 = 0x0
0x345: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x346
[0x346:0x34d]
---
Predecessors: [0x33b]
Successors: [0xd05]
---
0x346 JUMPDEST
0x347 PUSH2 0x34e
0x34a PUSH2 0xd05
0x34d JUMP
---
0x346: JUMPDEST 
0x347: V243 = 0x34e
0x34a: V244 = 0xd05
0x34d: JUMP 0xd05
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x34e]
Exit stack: [V10, 0x34e]

================================

Block 0x34e
[0x34e:0x34f]
---
Predecessors: [0xf5d]
Successors: []
---
0x34e JUMPDEST
0x34f STOP
---
0x34e: JUMPDEST 
0x34f: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x350
[0x350:0x356]
---
Predecessors: [0xb8]
Successors: [0x357, 0x35b]
---
0x350 JUMPDEST
0x351 CALLVALUE
0x352 ISZERO
0x353 PUSH2 0x35b
0x356 JUMPI
---
0x350: JUMPDEST 
0x351: V245 = CALLVALUE
0x352: V246 = ISZERO V245
0x353: V247 = 0x35b
0x356: JUMPI 0x35b V246
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x357
[0x357:0x35a]
---
Predecessors: [0x350]
Successors: []
---
0x357 PUSH1 0x0
0x359 DUP1
0x35a REVERT
---
0x357: V248 = 0x0
0x35a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35b
[0x35b:0x362]
---
Predecessors: [0x350]
Successors: [0xf60]
---
0x35b JUMPDEST
0x35c PUSH2 0x363
0x35f PUSH2 0xf60
0x362 JUMP
---
0x35b: JUMPDEST 
0x35c: V249 = 0x363
0x35f: V250 = 0xf60
0x362: JUMP 0xf60
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x363]
Exit stack: [V10, 0x363]

================================

Block 0x363
[0x363:0x371]
---
Predecessors: [0xf60]
Successors: [0x372, 0x373]
---
0x363 JUMPDEST
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 DUP3
0x369 PUSH1 0x7
0x36b DUP2
0x36c GT
0x36d ISZERO
0x36e PUSH2 0x373
0x371 JUMPI
---
0x363: JUMPDEST 
0x364: V251 = 0x40
0x366: V252 = M[0x40]
0x369: V253 = 0x7
0x36c: V254 = GT V1103 0x7
0x36d: V255 = ISZERO V254
0x36e: V256 = 0x373
0x371: JUMPI 0x373 V255
---
Entry stack: [V10, 0x363, V1103]
Stack pops: 1
Stack additions: [S0, V252, V252, S0]
Exit stack: [V10, 0x363, V1103, V252, V252, V1103]

================================

Block 0x372
[0x372:0x372]
---
Predecessors: [0x363]
Successors: []
---
0x372 INVALID
---
0x372: INVALID 
---
Entry stack: [V10, 0x363, V1103, V252, V252, V1103]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x363, V1103, V252, V252, V1103]

================================

Block 0x373
[0x373:0x386]
---
Predecessors: [0x363]
Successors: []
---
0x373 JUMPDEST
0x374 PUSH1 0xff
0x376 AND
0x377 DUP2
0x378 MSTORE
0x379 PUSH1 0x20
0x37b ADD
0x37c SWAP2
0x37d POP
0x37e POP
0x37f PUSH1 0x40
0x381 MLOAD
0x382 DUP1
0x383 SWAP2
0x384 SUB
0x385 SWAP1
0x386 RETURN
---
0x373: JUMPDEST 
0x374: V257 = 0xff
0x376: V258 = AND 0xff V1103
0x378: M[V252] = V258
0x379: V259 = 0x20
0x37b: V260 = ADD 0x20 V252
0x37f: V261 = 0x40
0x381: V262 = M[0x40]
0x384: V263 = SUB V260 V262
0x386: RETURN V262 V263
---
Entry stack: [V10, 0x363, V1103, V252, V252, V1103]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x363]

================================

Block 0x387
[0x387:0x38d]
---
Predecessors: [0xc3]
Successors: [0x38e, 0x392]
---
0x387 JUMPDEST
0x388 CALLVALUE
0x389 ISZERO
0x38a PUSH2 0x392
0x38d JUMPI
---
0x387: JUMPDEST 
0x388: V264 = CALLVALUE
0x389: V265 = ISZERO V264
0x38a: V266 = 0x392
0x38d: JUMPI 0x392 V265
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38e
[0x38e:0x391]
---
Predecessors: [0x387]
Successors: []
---
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
---
0x38e: V267 = 0x0
0x391: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x392
[0x392:0x399]
---
Predecessors: [0x387]
Successors: [0xf73]
---
0x392 JUMPDEST
0x393 PUSH2 0x39a
0x396 PUSH2 0xf73
0x399 JUMP
---
0x392: JUMPDEST 
0x393: V268 = 0x39a
0x396: V269 = 0xf73
0x399: JUMP 0xf73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x39a]
Exit stack: [V10, 0x39a]

================================

Block 0x39a
[0x39a:0x3b3]
---
Predecessors: [0x1173]
Successors: []
---
0x39a JUMPDEST
0x39b PUSH1 0x40
0x39d MLOAD
0x39e DUP1
0x39f DUP3
0x3a0 ISZERO
0x3a1 ISZERO
0x3a2 ISZERO
0x3a3 ISZERO
0x3a4 DUP2
0x3a5 MSTORE
0x3a6 PUSH1 0x20
0x3a8 ADD
0x3a9 SWAP2
0x3aa POP
0x3ab POP
0x3ac PUSH1 0x40
0x3ae MLOAD
0x3af DUP1
0x3b0 SWAP2
0x3b1 SUB
0x3b2 SWAP1
0x3b3 RETURN
---
0x39a: JUMPDEST 
0x39b: V270 = 0x40
0x39d: V271 = M[0x40]
0x3a0: V272 = ISZERO {0x0, 0x1}
0x3a1: V273 = ISZERO V272
0x3a2: V274 = ISZERO V273
0x3a3: V275 = ISZERO V274
0x3a5: M[V271] = V275
0x3a6: V276 = 0x20
0x3a8: V277 = ADD 0x20 V271
0x3ac: V278 = 0x40
0x3ae: V279 = M[0x40]
0x3b1: V280 = SUB V277 V279
0x3b3: RETURN V279 V280
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b4
[0x3b4:0x3ba]
---
Predecessors: [0xce]
Successors: [0x3bb, 0x3bf]
---
0x3b4 JUMPDEST
0x3b5 CALLVALUE
0x3b6 ISZERO
0x3b7 PUSH2 0x3bf
0x3ba JUMPI
---
0x3b4: JUMPDEST 
0x3b5: V281 = CALLVALUE
0x3b6: V282 = ISZERO V281
0x3b7: V283 = 0x3bf
0x3ba: JUMPI 0x3bf V282
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bb
[0x3bb:0x3be]
---
Predecessors: [0x3b4]
Successors: []
---
0x3bb PUSH1 0x0
0x3bd DUP1
0x3be REVERT
---
0x3bb: V284 = 0x0
0x3be: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bf
[0x3bf:0x3c6]
---
Predecessors: [0x3b4]
Successors: [0x1178]
---
0x3bf JUMPDEST
0x3c0 PUSH2 0x3c7
0x3c3 PUSH2 0x1178
0x3c6 JUMP
---
0x3bf: JUMPDEST 
0x3c0: V285 = 0x3c7
0x3c3: V286 = 0x1178
0x3c6: JUMP 0x1178
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3c7]
Exit stack: [V10, 0x3c7]

================================

Block 0x3c7
[0x3c7:0x3dc]
---
Predecessors: [0x1178]
Successors: []
---
0x3c7 JUMPDEST
0x3c8 PUSH1 0x40
0x3ca MLOAD
0x3cb DUP1
0x3cc DUP3
0x3cd DUP2
0x3ce MSTORE
0x3cf PUSH1 0x20
0x3d1 ADD
0x3d2 SWAP2
0x3d3 POP
0x3d4 POP
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 DUP1
0x3d9 SWAP2
0x3da SUB
0x3db SWAP1
0x3dc RETURN
---
0x3c7: JUMPDEST 
0x3c8: V287 = 0x40
0x3ca: V288 = M[0x40]
0x3ce: M[V288] = V1268
0x3cf: V289 = 0x20
0x3d1: V290 = ADD 0x20 V288
0x3d5: V291 = 0x40
0x3d7: V292 = M[0x40]
0x3da: V293 = SUB V290 V292
0x3dc: RETURN V292 V293
---
Entry stack: [V10, 0x3c7, V1268]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3c7]

================================

Block 0x3dd
[0x3dd:0x3e3]
---
Predecessors: [0xd9]
Successors: [0x3e4, 0x3e8]
---
0x3dd JUMPDEST
0x3de CALLVALUE
0x3df ISZERO
0x3e0 PUSH2 0x3e8
0x3e3 JUMPI
---
0x3dd: JUMPDEST 
0x3de: V294 = CALLVALUE
0x3df: V295 = ISZERO V294
0x3e0: V296 = 0x3e8
0x3e3: JUMPI 0x3e8 V295
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e4
[0x3e4:0x3e7]
---
Predecessors: [0x3dd]
Successors: []
---
0x3e4 PUSH1 0x0
0x3e6 DUP1
0x3e7 REVERT
---
0x3e4: V297 = 0x0
0x3e7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e8
[0x3e8:0x3ef]
---
Predecessors: [0x3dd]
Successors: [0x117e]
---
0x3e8 JUMPDEST
0x3e9 PUSH2 0x3f0
0x3ec PUSH2 0x117e
0x3ef JUMP
---
0x3e8: JUMPDEST 
0x3e9: V298 = 0x3f0
0x3ec: V299 = 0x117e
0x3ef: JUMP 0x117e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3f0]
Exit stack: [V10, 0x3f0]

================================

Block 0x3f0
[0x3f0:0x431]
---
Predecessors: [0x117e]
Successors: []
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x40
0x3f3 MLOAD
0x3f4 DUP1
0x3f5 DUP3
0x3f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40b AND
0x40c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x421 AND
0x422 DUP2
0x423 MSTORE
0x424 PUSH1 0x20
0x426 ADD
0x427 SWAP2
0x428 POP
0x429 POP
0x42a PUSH1 0x40
0x42c MLOAD
0x42d DUP1
0x42e SWAP2
0x42f SUB
0x430 SWAP1
0x431 RETURN
---
0x3f0: JUMPDEST 
0x3f1: V300 = 0x40
0x3f3: V301 = M[0x40]
0x3f6: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V1276
0x40c: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x421: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x423: M[V301] = V305
0x424: V306 = 0x20
0x426: V307 = ADD 0x20 V301
0x42a: V308 = 0x40
0x42c: V309 = M[0x40]
0x42f: V310 = SUB V307 V309
0x431: RETURN V309 V310
---
Entry stack: [V10, 0x3f0, V1276]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3f0]

================================

Block 0x432
[0x432:0x438]
---
Predecessors: [0xe4]
Successors: [0x439, 0x43d]
---
0x432 JUMPDEST
0x433 CALLVALUE
0x434 ISZERO
0x435 PUSH2 0x43d
0x438 JUMPI
---
0x432: JUMPDEST 
0x433: V311 = CALLVALUE
0x434: V312 = ISZERO V311
0x435: V313 = 0x43d
0x438: JUMPI 0x43d V312
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x439
[0x439:0x43c]
---
Predecessors: [0x432]
Successors: []
---
0x439 PUSH1 0x0
0x43b DUP1
0x43c REVERT
---
0x439: V314 = 0x0
0x43c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x43d
[0x43d:0x444]
---
Predecessors: [0x432]
Successors: [0x11a4]
---
0x43d JUMPDEST
0x43e PUSH2 0x445
0x441 PUSH2 0x11a4
0x444 JUMP
---
0x43d: JUMPDEST 
0x43e: V315 = 0x445
0x441: V316 = 0x11a4
0x444: JUMP 0x11a4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x445]
Exit stack: [V10, 0x445]

================================

Block 0x445
[0x445:0x45a]
---
Predecessors: [0x11a4]
Successors: []
---
0x445 JUMPDEST
0x446 PUSH1 0x40
0x448 MLOAD
0x449 DUP1
0x44a DUP3
0x44b DUP2
0x44c MSTORE
0x44d PUSH1 0x20
0x44f ADD
0x450 SWAP2
0x451 POP
0x452 POP
0x453 PUSH1 0x40
0x455 MLOAD
0x456 DUP1
0x457 SWAP2
0x458 SUB
0x459 SWAP1
0x45a RETURN
---
0x445: JUMPDEST 
0x446: V317 = 0x40
0x448: V318 = M[0x40]
0x44c: M[V318] = V1278
0x44d: V319 = 0x20
0x44f: V320 = ADD 0x20 V318
0x453: V321 = 0x40
0x455: V322 = M[0x40]
0x458: V323 = SUB V320 V322
0x45a: RETURN V322 V323
---
Entry stack: [V10, 0x445, V1278]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x445]

================================

Block 0x45b
[0x45b:0x461]
---
Predecessors: [0xef]
Successors: [0x462, 0x466]
---
0x45b JUMPDEST
0x45c CALLVALUE
0x45d ISZERO
0x45e PUSH2 0x466
0x461 JUMPI
---
0x45b: JUMPDEST 
0x45c: V324 = CALLVALUE
0x45d: V325 = ISZERO V324
0x45e: V326 = 0x466
0x461: JUMPI 0x466 V325
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x462
[0x462:0x465]
---
Predecessors: [0x45b]
Successors: []
---
0x462 PUSH1 0x0
0x464 DUP1
0x465 REVERT
---
0x462: V327 = 0x0
0x465: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x466
[0x466:0x46d]
---
Predecessors: [0x45b]
Successors: [0x11aa]
---
0x466 JUMPDEST
0x467 PUSH2 0x46e
0x46a PUSH2 0x11aa
0x46d JUMP
---
0x466: JUMPDEST 
0x467: V328 = 0x46e
0x46a: V329 = 0x11aa
0x46d: JUMP 0x11aa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x46e]
Exit stack: [V10, 0x46e]

================================

Block 0x46e
[0x46e:0x487]
---
Predecessors: [0x11aa]
Successors: []
---
0x46e JUMPDEST
0x46f PUSH1 0x40
0x471 MLOAD
0x472 DUP1
0x473 DUP3
0x474 ISZERO
0x475 ISZERO
0x476 ISZERO
0x477 ISZERO
0x478 DUP2
0x479 MSTORE
0x47a PUSH1 0x20
0x47c ADD
0x47d SWAP2
0x47e POP
0x47f POP
0x480 PUSH1 0x40
0x482 MLOAD
0x483 DUP1
0x484 SWAP2
0x485 SUB
0x486 SWAP1
0x487 RETURN
---
0x46e: JUMPDEST 
0x46f: V330 = 0x40
0x471: V331 = M[0x40]
0x474: V332 = ISZERO V1286
0x475: V333 = ISZERO V332
0x476: V334 = ISZERO V333
0x477: V335 = ISZERO V334
0x479: M[V331] = V335
0x47a: V336 = 0x20
0x47c: V337 = ADD 0x20 V331
0x480: V338 = 0x40
0x482: V339 = M[0x40]
0x485: V340 = SUB V337 V339
0x487: RETURN V339 V340
---
Entry stack: [V10, 0x46e, V1286]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x46e]

================================

Block 0x488
[0x488:0x48e]
---
Predecessors: [0xfa]
Successors: [0x48f, 0x493]
---
0x488 JUMPDEST
0x489 CALLVALUE
0x48a ISZERO
0x48b PUSH2 0x493
0x48e JUMPI
---
0x488: JUMPDEST 
0x489: V341 = CALLVALUE
0x48a: V342 = ISZERO V341
0x48b: V343 = 0x493
0x48e: JUMPI 0x493 V342
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x48f
[0x48f:0x492]
---
Predecessors: [0x488]
Successors: []
---
0x48f PUSH1 0x0
0x491 DUP1
0x492 REVERT
---
0x48f: V344 = 0x0
0x492: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x493
[0x493:0x49a]
---
Predecessors: [0x488]
Successors: [0x11bd]
---
0x493 JUMPDEST
0x494 PUSH2 0x49b
0x497 PUSH2 0x11bd
0x49a JUMP
---
0x493: JUMPDEST 
0x494: V345 = 0x49b
0x497: V346 = 0x11bd
0x49a: JUMP 0x11bd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x49b]
Exit stack: [V10, 0x49b]

================================

Block 0x49b
[0x49b:0x4dc]
---
Predecessors: [0x11bd]
Successors: []
---
0x49b JUMPDEST
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 DUP3
0x4a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b6 AND
0x4b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cc AND
0x4cd DUP2
0x4ce MSTORE
0x4cf PUSH1 0x20
0x4d1 ADD
0x4d2 SWAP2
0x4d3 POP
0x4d4 POP
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 SWAP2
0x4da SUB
0x4db SWAP1
0x4dc RETURN
---
0x49b: JUMPDEST 
0x49c: V347 = 0x40
0x49e: V348 = M[0x40]
0x4a1: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b6: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V1293
0x4b7: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x4ce: M[V348] = V352
0x4cf: V353 = 0x20
0x4d1: V354 = ADD 0x20 V348
0x4d5: V355 = 0x40
0x4d7: V356 = M[0x40]
0x4da: V357 = SUB V354 V356
0x4dc: RETURN V356 V357
---
Entry stack: [V10, 0x49b, V1293]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x49b]

================================

Block 0x4dd
[0x4dd:0x4e3]
---
Predecessors: [0x105]
Successors: [0x4e4, 0x4e8]
---
0x4dd JUMPDEST
0x4de CALLVALUE
0x4df ISZERO
0x4e0 PUSH2 0x4e8
0x4e3 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V358 = CALLVALUE
0x4df: V359 = ISZERO V358
0x4e0: V360 = 0x4e8
0x4e3: JUMPI 0x4e8 V359
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e4
[0x4e4:0x4e7]
---
Predecessors: [0x4dd]
Successors: []
---
0x4e4 PUSH1 0x0
0x4e6 DUP1
0x4e7 REVERT
---
0x4e4: V361 = 0x0
0x4e7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e8
[0x4e8:0x4ef]
---
Predecessors: [0x4dd]
Successors: [0x11e2]
---
0x4e8 JUMPDEST
0x4e9 PUSH2 0x4f0
0x4ec PUSH2 0x11e2
0x4ef JUMP
---
0x4e8: JUMPDEST 
0x4e9: V362 = 0x4f0
0x4ec: V363 = 0x11e2
0x4ef: JUMP 0x11e2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4f0]
Exit stack: [V10, 0x4f0]

================================

Block 0x4f0
[0x4f0:0x505]
---
Predecessors: [0x11e2]
Successors: []
---
0x4f0 JUMPDEST
0x4f1 PUSH1 0x40
0x4f3 MLOAD
0x4f4 DUP1
0x4f5 DUP3
0x4f6 DUP2
0x4f7 MSTORE
0x4f8 PUSH1 0x20
0x4fa ADD
0x4fb SWAP2
0x4fc POP
0x4fd POP
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 DUP1
0x502 SWAP2
0x503 SUB
0x504 SWAP1
0x505 RETURN
---
0x4f0: JUMPDEST 
0x4f1: V364 = 0x40
0x4f3: V365 = M[0x40]
0x4f7: M[V365] = V1295
0x4f8: V366 = 0x20
0x4fa: V367 = ADD 0x20 V365
0x4fe: V368 = 0x40
0x500: V369 = M[0x40]
0x503: V370 = SUB V367 V369
0x505: RETURN V369 V370
---
Entry stack: [V10, 0x4f0, V1295]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x4f0]

================================

Block 0x506
[0x506:0x518]
---
Predecessors: [0x120]
Successors: [0x128]
---
0x506 JUMPDEST
0x507 PUSH1 0x8
0x509 PUSH1 0x2
0x50b SWAP1
0x50c SLOAD
0x50d SWAP1
0x50e PUSH2 0x100
0x511 EXP
0x512 SWAP1
0x513 DIV
0x514 PUSH1 0xff
0x516 AND
0x517 DUP2
0x518 JUMP
---
0x506: JUMPDEST 
0x507: V371 = 0x8
0x509: V372 = 0x2
0x50c: V373 = S[0x8]
0x50e: V374 = 0x100
0x511: V375 = EXP 0x100 0x2
0x513: V376 = DIV V373 0x10000
0x514: V377 = 0xff
0x516: V378 = AND 0xff V376
0x518: JUMP 0x128
---
Entry stack: [V10, 0x128]
Stack pops: 1
Stack additions: [S0, V378]
Exit stack: [V10, 0x128, V378]

================================

Block 0x519
[0x519:0x53e]
---
Predecessors: [0x14d]
Successors: [0x155]
---
0x519 JUMPDEST
0x51a PUSH1 0x1
0x51c PUSH1 0x0
0x51e SWAP1
0x51f SLOAD
0x520 SWAP1
0x521 PUSH2 0x100
0x524 EXP
0x525 SWAP1
0x526 DIV
0x527 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53c AND
0x53d DUP2
0x53e JUMP
---
0x519: JUMPDEST 
0x51a: V379 = 0x1
0x51c: V380 = 0x0
0x51f: V381 = S[0x1]
0x521: V382 = 0x100
0x524: V383 = EXP 0x100 0x0
0x526: V384 = DIV V381 0x1
0x527: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x53c: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x53e: JUMP 0x155
---
Entry stack: [V10, 0x155]
Stack pops: 1
Stack additions: [S0, V386]
Exit stack: [V10, 0x155, V386]

================================

Block 0x53f
[0x53f:0x551]
---
Predecessors: [0x1a2]
Successors: [0x552, 0x553]
---
0x53f JUMPDEST
0x540 PUSH1 0x0
0x542 DUP1
0x543 PUSH1 0x0
0x545 DUP1
0x546 CALLER
0x547 PUSH1 0x3
0x549 PUSH1 0x7
0x54b DUP2
0x54c GT
0x54d ISZERO
0x54e PUSH2 0x553
0x551 JUMPI
---
0x53f: JUMPDEST 
0x540: V387 = 0x0
0x543: V388 = 0x0
0x546: V389 = CALLER
0x547: V390 = 0x3
0x549: V391 = 0x7
0x54c: V392 = GT 0x3 0x7
0x54d: V393 = ISZERO 0x0
0x54e: V394 = 0x553
0x551: JUMPI 0x553 0x1
---
Entry stack: [V10, 0x1aa]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, V389, 0x3]
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, 0x3]

================================

Block 0x552
[0x552:0x552]
---
Predecessors: [0x53f]
Successors: []
---
0x552 INVALID
---
0x552: INVALID 
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, 0x3]

================================

Block 0x553
[0x553:0x56c]
---
Predecessors: [0x53f]
Successors: [0x56d, 0x56e]
---
0x553 JUMPDEST
0x554 PUSH1 0x8
0x556 PUSH1 0x4
0x558 SWAP1
0x559 SLOAD
0x55a SWAP1
0x55b PUSH2 0x100
0x55e EXP
0x55f SWAP1
0x560 DIV
0x561 PUSH1 0xff
0x563 AND
0x564 PUSH1 0x7
0x566 DUP2
0x567 GT
0x568 ISZERO
0x569 PUSH2 0x56e
0x56c JUMPI
---
0x553: JUMPDEST 
0x554: V395 = 0x8
0x556: V396 = 0x4
0x559: V397 = S[0x8]
0x55b: V398 = 0x100
0x55e: V399 = EXP 0x100 0x4
0x560: V400 = DIV V397 0x100000000
0x561: V401 = 0xff
0x563: V402 = AND 0xff V400
0x564: V403 = 0x7
0x567: V404 = GT V402 0x7
0x568: V405 = ISZERO V404
0x569: V406 = 0x56e
0x56c: JUMPI 0x56e V405
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, 0x3]
Stack pops: 0
Stack additions: [V402]
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, 0x3, V402]

================================

Block 0x56d
[0x56d:0x56d]
---
Predecessors: [0x553]
Successors: []
---
0x56d INVALID
---
0x56d: INVALID 
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, 0x3, V402]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, 0x3, V402]

================================

Block 0x56e
[0x56e:0x575]
---
Predecessors: [0x553]
Successors: [0x576, 0x5c8]
---
0x56e JUMPDEST
0x56f EQ
0x570 DUP1
0x571 ISZERO
0x572 PUSH2 0x5c8
0x575 JUMPI
---
0x56e: JUMPDEST 
0x56f: V407 = EQ V402 0x3
0x571: V408 = ISZERO V407
0x572: V409 = 0x5c8
0x575: JUMPI 0x5c8 V408
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, 0x3, V402]
Stack pops: 2
Stack additions: [V407]
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, V407]

================================

Block 0x576
[0x576:0x5c7]
---
Predecessors: [0x56e]
Successors: [0x5c8]
---
0x576 POP
0x577 PUSH1 0x2
0x579 PUSH1 0x0
0x57b SWAP1
0x57c SLOAD
0x57d SWAP1
0x57e PUSH2 0x100
0x581 EXP
0x582 SWAP1
0x583 DIV
0x584 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x599 AND
0x59a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5af AND
0x5b0 DUP2
0x5b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c6 AND
0x5c7 EQ
---
0x577: V410 = 0x2
0x579: V411 = 0x0
0x57c: V412 = S[0x2]
0x57e: V413 = 0x100
0x581: V414 = EXP 0x100 0x0
0x583: V415 = DIV V412 0x1
0x584: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x599: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x59a: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x5af: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x5b1: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x5c7: V422 = EQ V421 V419
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, V407]
Stack pops: 2
Stack additions: [S1, V422]
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, V422]

================================

Block 0x5c8
[0x5c8:0x5ce]
---
Predecessors: [0x56e, 0x576]
Successors: [0x5cf, 0x5e0]
---
0x5c8 JUMPDEST
0x5c9 DUP1
0x5ca ISZERO
0x5cb PUSH2 0x5e0
0x5ce JUMPI
---
0x5c8: JUMPDEST 
0x5ca: V423 = ISZERO S0
0x5cb: V424 = 0x5e0
0x5ce: JUMPI 0x5e0 V423
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, S0]

================================

Block 0x5cf
[0x5cf:0x5df]
---
Predecessors: [0x5c8]
Successors: [0x5e0]
---
0x5cf POP
0x5d0 PUSH1 0x8
0x5d2 PUSH1 0x0
0x5d4 SWAP1
0x5d5 SLOAD
0x5d6 SWAP1
0x5d7 PUSH2 0x100
0x5da EXP
0x5db SWAP1
0x5dc DIV
0x5dd PUSH1 0xff
0x5df AND
---
0x5d0: V425 = 0x8
0x5d2: V426 = 0x0
0x5d5: V427 = S[0x8]
0x5d7: V428 = 0x100
0x5da: V429 = EXP 0x100 0x0
0x5dc: V430 = DIV V427 0x1
0x5dd: V431 = 0xff
0x5df: V432 = AND 0xff V430
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, S0]
Stack pops: 1
Stack additions: [V432]
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, V432]

================================

Block 0x5e0
[0x5e0:0x5e6]
---
Predecessors: [0x5c8, 0x5cf]
Successors: [0x5e7, 0x5f8]
---
0x5e0 JUMPDEST
0x5e1 DUP1
0x5e2 ISZERO
0x5e3 PUSH2 0x5f8
0x5e6 JUMPI
---
0x5e0: JUMPDEST 
0x5e2: V433 = ISZERO S0
0x5e3: V434 = 0x5f8
0x5e6: JUMPI 0x5f8 V433
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, S0]

================================

Block 0x5e7
[0x5e7:0x5f7]
---
Predecessors: [0x5e0]
Successors: [0x5f8]
---
0x5e7 POP
0x5e8 PUSH1 0x8
0x5ea PUSH1 0x1
0x5ec SWAP1
0x5ed SLOAD
0x5ee SWAP1
0x5ef PUSH2 0x100
0x5f2 EXP
0x5f3 SWAP1
0x5f4 DIV
0x5f5 PUSH1 0xff
0x5f7 AND
---
0x5e8: V435 = 0x8
0x5ea: V436 = 0x1
0x5ed: V437 = S[0x8]
0x5ef: V438 = 0x100
0x5f2: V439 = EXP 0x100 0x1
0x5f4: V440 = DIV V437 0x100
0x5f5: V441 = 0xff
0x5f7: V442 = AND 0xff V440
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, S0]
Stack pops: 1
Stack additions: [V442]
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, V442]

================================

Block 0x5f8
[0x5f8:0x5fe]
---
Predecessors: [0x5e0, 0x5e7]
Successors: [0x5ff, 0x603]
---
0x5f8 JUMPDEST
0x5f9 ISZERO
0x5fa ISZERO
0x5fb PUSH2 0x603
0x5fe JUMPI
---
0x5f8: JUMPDEST 
0x5f9: V443 = ISZERO S0
0x5fa: V444 = ISZERO V443
0x5fb: V445 = 0x603
0x5fe: JUMPI 0x603 V444
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389]

================================

Block 0x5ff
[0x5ff:0x602]
---
Predecessors: [0x5f8]
Successors: []
---
0x5ff PUSH1 0x0
0x601 DUP1
0x602 REVERT
---
0x5ff: V446 = 0x0
0x602: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389]

================================

Block 0x603
[0x603:0x621]
---
Predecessors: [0x5f8]
Successors: [0x622, 0x630]
---
0x603 JUMPDEST
0x604 PUSH1 0x3
0x606 SLOAD
0x607 SWAP4
0x608 POP
0x609 PUSH1 0x0
0x60b SWAP3
0x60c POP
0x60d PUSH8 0xde0b6b3a7640000
0x616 SWAP2
0x617 POP
0x618 DUP2
0x619 PUSH1 0x5
0x61b SLOAD
0x61c LT
0x61d ISZERO
0x61e PUSH2 0x630
0x621 JUMPI
---
0x603: JUMPDEST 
0x604: V447 = 0x3
0x606: V448 = S[0x3]
0x609: V449 = 0x0
0x60d: V450 = 0xde0b6b3a7640000
0x619: V451 = 0x5
0x61b: V452 = S[0x5]
0x61c: V453 = LT V452 0xde0b6b3a7640000
0x61d: V454 = ISZERO V453
0x61e: V455 = 0x630
0x621: JUMPI 0x630 V454
---
Entry stack: [V10, 0x1aa, 0x0, 0x0, 0x0, 0x0, V389]
Stack pops: 4
Stack additions: [V448, 0x0, 0xde0b6b3a7640000, S0]
Exit stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389]

================================

Block 0x622
[0x622:0x62c]
---
Predecessors: [0x603]
Successors: [0x11e8]
---
0x622 PUSH2 0x62d
0x625 DUP5
0x626 PUSH2 0xfa0
0x629 PUSH2 0x11e8
0x62c JUMP
---
0x622: V456 = 0x62d
0x626: V457 = 0xfa0
0x629: V458 = 0x11e8
0x62c: JUMP 0x11e8
---
Entry stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x62d, S3, 0xfa0]
Exit stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389, 0x62d, V448, 0xfa0]

================================

Block 0x62d
[0x62d:0x62f]
---
Predecessors: [0x11f6]
Successors: [0x630]
---
0x62d JUMPDEST
0x62e SWAP3
0x62f POP
---
0x62d: JUMPDEST 
---
Entry stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389, V1300]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V10, 0x1aa, 0x0, V448, V1300, 0xde0b6b3a7640000, V389]

================================

Block 0x630
[0x630:0x639]
---
Predecessors: [0x603, 0x62d]
Successors: [0x63a, 0x6a0]
---
0x630 JUMPDEST
0x631 PUSH1 0x0
0x633 DUP4
0x634 GT
0x635 ISZERO
0x636 PUSH2 0x6a0
0x639 JUMPI
---
0x630: JUMPDEST 
0x631: V459 = 0x0
0x634: V460 = GT S2 0x0
0x635: V461 = ISZERO V460
0x636: V462 = 0x6a0
0x639: JUMPI 0x6a0 V461
---
Entry stack: [V10, 0x1aa, 0x0, V448, S2, 0xde0b6b3a7640000, V389]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1aa, 0x0, V448, S2, 0xde0b6b3a7640000, V389]

================================

Block 0x63a
[0x63a:0x695]
---
Predecessors: [0x630]
Successors: [0x696, 0x69a]
---
0x63a PUSH1 0x0
0x63c DUP1
0x63d SWAP1
0x63e SLOAD
0x63f SWAP1
0x640 PUSH2 0x100
0x643 EXP
0x644 SWAP1
0x645 DIV
0x646 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65b AND
0x65c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x671 AND
0x672 PUSH2 0x8fc
0x675 DUP5
0x676 SWAP1
0x677 DUP2
0x678 ISZERO
0x679 MUL
0x67a SWAP1
0x67b PUSH1 0x40
0x67d MLOAD
0x67e PUSH1 0x0
0x680 PUSH1 0x40
0x682 MLOAD
0x683 DUP1
0x684 DUP4
0x685 SUB
0x686 DUP2
0x687 DUP6
0x688 DUP9
0x689 DUP9
0x68a CALL
0x68b SWAP4
0x68c POP
0x68d POP
0x68e POP
0x68f POP
0x690 ISZERO
0x691 ISZERO
0x692 PUSH2 0x69a
0x695 JUMPI
---
0x63a: V463 = 0x0
0x63e: V464 = S[0x0]
0x640: V465 = 0x100
0x643: V466 = EXP 0x100 0x0
0x645: V467 = DIV V464 0x1
0x646: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x65b: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x65c: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x671: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x672: V472 = 0x8fc
0x678: V473 = ISZERO S2
0x679: V474 = MUL V473 0x8fc
0x67b: V475 = 0x40
0x67d: V476 = M[0x40]
0x67e: V477 = 0x0
0x680: V478 = 0x40
0x682: V479 = M[0x40]
0x685: V480 = SUB V476 V479
0x68a: V481 = CALL V474 V471 S2 V479 V480 V479 0x0
0x690: V482 = ISZERO V481
0x691: V483 = ISZERO V482
0x692: V484 = 0x69a
0x695: JUMPI 0x69a V483
---
Entry stack: [V10, 0x1aa, 0x0, V448, S2, 0xde0b6b3a7640000, V389]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1aa, 0x0, V448, S2, 0xde0b6b3a7640000, V389]

================================

Block 0x696
[0x696:0x699]
---
Predecessors: [0x63a]
Successors: []
---
0x696 PUSH1 0x0
0x698 DUP1
0x699 REVERT
---
0x696: V485 = 0x0
0x699: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1aa, 0x0, V448, S2, 0xde0b6b3a7640000, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1aa, 0x0, V448, S2, 0xde0b6b3a7640000, V389]

================================

Block 0x69a
[0x69a:0x69f]
---
Predecessors: [0x63a]
Successors: [0x6a0]
---
0x69a JUMPDEST
0x69b DUP3
0x69c DUP5
0x69d SUB
0x69e SWAP4
0x69f POP
---
0x69a: JUMPDEST 
0x69d: V486 = SUB V448 S2
---
Entry stack: [V10, 0x1aa, 0x0, V448, S2, 0xde0b6b3a7640000, V389]
Stack pops: 4
Stack additions: [V486, S2, S1, S0]
Exit stack: [V10, 0x1aa, 0x0, V486, S2, 0xde0b6b3a7640000, V389]

================================

Block 0x6a0
[0x6a0:0x6a9]
---
Predecessors: [0x630, 0x69a]
Successors: [0x6aa, 0x6ea]
---
0x6a0 JUMPDEST
0x6a1 PUSH1 0x0
0x6a3 DUP5
0x6a4 GT
0x6a5 ISZERO
0x6a6 PUSH2 0x6ea
0x6a9 JUMPI
---
0x6a0: JUMPDEST 
0x6a1: V487 = 0x0
0x6a4: V488 = GT S3 0x0
0x6a5: V489 = ISZERO V488
0x6a6: V490 = 0x6ea
0x6a9: JUMPI 0x6ea V489
---
Entry stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389]

================================

Block 0x6aa
[0x6aa:0x6e4]
---
Predecessors: [0x6a0]
Successors: [0x6e5, 0x6e9]
---
0x6aa CALLER
0x6ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c0 AND
0x6c1 PUSH2 0x8fc
0x6c4 DUP6
0x6c5 SWAP1
0x6c6 DUP2
0x6c7 ISZERO
0x6c8 MUL
0x6c9 SWAP1
0x6ca PUSH1 0x40
0x6cc MLOAD
0x6cd PUSH1 0x0
0x6cf PUSH1 0x40
0x6d1 MLOAD
0x6d2 DUP1
0x6d3 DUP4
0x6d4 SUB
0x6d5 DUP2
0x6d6 DUP6
0x6d7 DUP9
0x6d8 DUP9
0x6d9 CALL
0x6da SWAP4
0x6db POP
0x6dc POP
0x6dd POP
0x6de POP
0x6df ISZERO
0x6e0 ISZERO
0x6e1 PUSH2 0x6e9
0x6e4 JUMPI
---
0x6aa: V491 = CALLER
0x6ab: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c0: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x6c1: V494 = 0x8fc
0x6c7: V495 = ISZERO S3
0x6c8: V496 = MUL V495 0x8fc
0x6ca: V497 = 0x40
0x6cc: V498 = M[0x40]
0x6cd: V499 = 0x0
0x6cf: V500 = 0x40
0x6d1: V501 = M[0x40]
0x6d4: V502 = SUB V498 V501
0x6d9: V503 = CALL V496 V493 S3 V501 V502 V501 0x0
0x6df: V504 = ISZERO V503
0x6e0: V505 = ISZERO V504
0x6e1: V506 = 0x6e9
0x6e4: JUMPI 0x6e9 V505
---
Entry stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389]

================================

Block 0x6e5
[0x6e5:0x6e8]
---
Predecessors: [0x6aa]
Successors: []
---
0x6e5 PUSH1 0x0
0x6e7 DUP1
0x6e8 REVERT
---
0x6e5: V507 = 0x0
0x6e8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389]

================================

Block 0x6e9
[0x6e9:0x6e9]
---
Predecessors: [0x6aa]
Successors: [0x6ea]
---
0x6e9 JUMPDEST
---
0x6e9: JUMPDEST 
---
Entry stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389]

================================

Block 0x6ea
[0x6ea:0x707]
---
Predecessors: [0x6a0, 0x6e9]
Successors: [0x708, 0x709]
---
0x6ea JUMPDEST
0x6eb PUSH1 0x4
0x6ed PUSH1 0x8
0x6ef PUSH1 0x4
0x6f1 PUSH2 0x100
0x6f4 EXP
0x6f5 DUP2
0x6f6 SLOAD
0x6f7 DUP2
0x6f8 PUSH1 0xff
0x6fa MUL
0x6fb NOT
0x6fc AND
0x6fd SWAP1
0x6fe DUP4
0x6ff PUSH1 0x7
0x701 DUP2
0x702 GT
0x703 ISZERO
0x704 PUSH2 0x709
0x707 JUMPI
---
0x6ea: JUMPDEST 
0x6eb: V508 = 0x4
0x6ed: V509 = 0x8
0x6ef: V510 = 0x4
0x6f1: V511 = 0x100
0x6f4: V512 = EXP 0x100 0x4
0x6f6: V513 = S[0x8]
0x6f8: V514 = 0xff
0x6fa: V515 = MUL 0xff 0x100000000
0x6fb: V516 = NOT 0xff00000000
0x6fc: V517 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V513
0x6ff: V518 = 0x7
0x702: V519 = GT 0x4 0x7
0x703: V520 = ISZERO 0x0
0x704: V521 = 0x709
0x707: JUMPI 0x709 0x1
---
Entry stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389]
Stack pops: 0
Stack additions: [0x4, 0x8, V517, 0x100000000, 0x4]
Exit stack: [V10, 0x1aa, 0x0, S3, S2, 0xde0b6b3a7640000, V389, 0x4, 0x8, V517, 0x100000000, 0x4]

================================

Block 0x708
[0x708:0x708]
---
Predecessors: [0x6ea]
Successors: []
---
0x708 INVALID
---
0x708: INVALID 
---
Entry stack: [V10, 0x1aa, 0x0, S8, S7, 0xde0b6b3a7640000, V389, 0x4, 0x8, V517, 0x100000000, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1aa, 0x0, S8, S7, 0xde0b6b3a7640000, V389, 0x4, 0x8, V517, 0x100000000, 0x4]

================================

Block 0x709
[0x709:0x77b]
---
Predecessors: [0x6ea]
Successors: [0x1aa]
---
0x709 JUMPDEST
0x70a MUL
0x70b OR
0x70c SWAP1
0x70d SSTORE
0x70e POP
0x70f PUSH32 0x5699deef3e04be804ac29c66b1ca35e41bc435d9a0326d9a6ae520ae1a1e8755
0x730 CALLER
0x731 PUSH1 0x40
0x733 MLOAD
0x734 DUP1
0x735 DUP3
0x736 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74b AND
0x74c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x761 AND
0x762 DUP2
0x763 MSTORE
0x764 PUSH1 0x20
0x766 ADD
0x767 SWAP2
0x768 POP
0x769 POP
0x76a PUSH1 0x40
0x76c MLOAD
0x76d DUP1
0x76e SWAP2
0x76f SUB
0x770 SWAP1
0x771 LOG1
0x772 PUSH1 0x1
0x774 SWAP5
0x775 POP
0x776 POP
0x777 POP
0x778 POP
0x779 POP
0x77a SWAP1
0x77b JUMP
---
0x709: JUMPDEST 
0x70a: V522 = MUL 0x4 0x100000000
0x70b: V523 = OR 0x400000000 V517
0x70d: S[0x8] = V523
0x70f: V524 = 0x5699deef3e04be804ac29c66b1ca35e41bc435d9a0326d9a6ae520ae1a1e8755
0x730: V525 = CALLER
0x731: V526 = 0x40
0x733: V527 = M[0x40]
0x736: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x74b: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x74c: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x761: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x763: M[V527] = V531
0x764: V532 = 0x20
0x766: V533 = ADD 0x20 V527
0x76a: V534 = 0x40
0x76c: V535 = M[0x40]
0x76f: V536 = SUB V533 V535
0x771: LOG V535 V536 0x5699deef3e04be804ac29c66b1ca35e41bc435d9a0326d9a6ae520ae1a1e8755
0x772: V537 = 0x1
0x77b: JUMP 0x1aa
---
Entry stack: [V10, 0x1aa, 0x0, S8, S7, 0xde0b6b3a7640000, V389, 0x4, 0x8, V517, 0x100000000, 0x4]
Stack pops: 11
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x77c
[0x77c:0x78e]
---
Predecessors: [0x1cf]
Successors: [0x1d7]
---
0x77c JUMPDEST
0x77d PUSH1 0x8
0x77f PUSH1 0x3
0x781 SWAP1
0x782 SLOAD
0x783 SWAP1
0x784 PUSH2 0x100
0x787 EXP
0x788 SWAP1
0x789 DIV
0x78a PUSH1 0xff
0x78c AND
0x78d DUP2
0x78e JUMP
---
0x77c: JUMPDEST 
0x77d: V538 = 0x8
0x77f: V539 = 0x3
0x782: V540 = S[0x8]
0x784: V541 = 0x100
0x787: V542 = EXP 0x100 0x3
0x789: V543 = DIV V540 0x1000000
0x78a: V544 = 0xff
0x78c: V545 = AND 0xff V543
0x78e: JUMP 0x1d7
---
Entry stack: [V10, 0x1d7]
Stack pops: 1
Stack additions: [S0, V545]
Exit stack: [V10, 0x1d7, V545]

================================

Block 0x78f
[0x78f:0x794]
---
Predecessors: [0x1fc]
Successors: [0x204]
---
0x78f JUMPDEST
0x790 PUSH1 0x6
0x792 SLOAD
0x793 DUP2
0x794 JUMP
---
0x78f: JUMPDEST 
0x790: V546 = 0x6
0x792: V547 = S[0x6]
0x794: JUMP 0x204
---
Entry stack: [V10, 0x204]
Stack pops: 1
Stack additions: [S0, V547]
Exit stack: [V10, 0x204, V547]

================================

Block 0x795
[0x795:0x7a7]
---
Predecessors: [0x225]
Successors: [0x7a8, 0x7af]
---
0x795 JUMPDEST
0x796 PUSH1 0x0
0x798 CALLER
0x799 PUSH1 0x7
0x79b SLOAD
0x79c PUSH1 0x6
0x79e SLOAD
0x79f ADD
0x7a0 TIMESTAMP
0x7a1 GT
0x7a2 DUP1
0x7a3 ISZERO
0x7a4 PUSH2 0x7af
0x7a7 JUMPI
---
0x795: JUMPDEST 
0x796: V548 = 0x0
0x798: V549 = CALLER
0x799: V550 = 0x7
0x79b: V551 = S[0x7]
0x79c: V552 = 0x6
0x79e: V553 = S[0x6]
0x79f: V554 = ADD V553 V551
0x7a0: V555 = TIMESTAMP
0x7a1: V556 = GT V555 V554
0x7a3: V557 = ISZERO V556
0x7a4: V558 = 0x7af
0x7a7: JUMPI 0x7af V557
---
Entry stack: [V10, 0x22d]
Stack pops: 0
Stack additions: [0x0, V549, V556]
Exit stack: [V10, 0x22d, 0x0, V549, V556]

================================

Block 0x7a8
[0x7a8:0x7ae]
---
Predecessors: [0x795]
Successors: [0x7af]
---
0x7a8 POP
0x7a9 PUSH1 0x0
0x7ab PUSH1 0x4
0x7ad SLOAD
0x7ae GT
---
0x7a9: V559 = 0x0
0x7ab: V560 = 0x4
0x7ad: V561 = S[0x4]
0x7ae: V562 = GT V561 0x0
---
Entry stack: [V10, 0x22d, 0x0, V549, V556]
Stack pops: 1
Stack additions: [V562]
Exit stack: [V10, 0x22d, 0x0, V549, V562]

================================

Block 0x7af
[0x7af:0x7b5]
---
Predecessors: [0x795, 0x7a8]
Successors: [0x7b6, 0x7c8]
---
0x7af JUMPDEST
0x7b0 DUP1
0x7b1 ISZERO
0x7b2 PUSH2 0x7c8
0x7b5 JUMPI
---
0x7af: JUMPDEST 
0x7b1: V563 = ISZERO S0
0x7b2: V564 = 0x7c8
0x7b5: JUMPI 0x7c8 V563
---
Entry stack: [V10, 0x22d, 0x0, V549, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x22d, 0x0, V549, S0]

================================

Block 0x7b6
[0x7b6:0x7c7]
---
Predecessors: [0x7af]
Successors: [0x7c8]
---
0x7b6 POP
0x7b7 PUSH1 0x8
0x7b9 PUSH1 0x3
0x7bb SWAP1
0x7bc SLOAD
0x7bd SWAP1
0x7be PUSH2 0x100
0x7c1 EXP
0x7c2 SWAP1
0x7c3 DIV
0x7c4 PUSH1 0xff
0x7c6 AND
0x7c7 ISZERO
---
0x7b7: V565 = 0x8
0x7b9: V566 = 0x3
0x7bc: V567 = S[0x8]
0x7be: V568 = 0x100
0x7c1: V569 = EXP 0x100 0x3
0x7c3: V570 = DIV V567 0x1000000
0x7c4: V571 = 0xff
0x7c6: V572 = AND 0xff V570
0x7c7: V573 = ISZERO V572
---
Entry stack: [V10, 0x22d, 0x0, V549, S0]
Stack pops: 1
Stack additions: [V573]
Exit stack: [V10, 0x22d, 0x0, V549, V573]

================================

Block 0x7c8
[0x7c8:0x7ce]
---
Predecessors: [0x7af, 0x7b6]
Successors: [0x7cf, 0x821]
---
0x7c8 JUMPDEST
0x7c9 DUP1
0x7ca ISZERO
0x7cb PUSH2 0x821
0x7ce JUMPI
---
0x7c8: JUMPDEST 
0x7ca: V574 = ISZERO S0
0x7cb: V575 = 0x821
0x7ce: JUMPI 0x821 V574
---
Entry stack: [V10, 0x22d, 0x0, V549, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x22d, 0x0, V549, S0]

================================

Block 0x7cf
[0x7cf:0x820]
---
Predecessors: [0x7c8]
Successors: [0x821]
---
0x7cf POP
0x7d0 PUSH1 0x2
0x7d2 PUSH1 0x0
0x7d4 SWAP1
0x7d5 SLOAD
0x7d6 SWAP1
0x7d7 PUSH2 0x100
0x7da EXP
0x7db SWAP1
0x7dc DIV
0x7dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f2 AND
0x7f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x808 AND
0x809 DUP2
0x80a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81f AND
0x820 EQ
---
0x7d0: V576 = 0x2
0x7d2: V577 = 0x0
0x7d5: V578 = S[0x2]
0x7d7: V579 = 0x100
0x7da: V580 = EXP 0x100 0x0
0x7dc: V581 = DIV V578 0x1
0x7dd: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x7f3: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0x808: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x80a: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x81f: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x820: V588 = EQ V587 V585
---
Entry stack: [V10, 0x22d, 0x0, V549, S0]
Stack pops: 2
Stack additions: [S1, V588]
Exit stack: [V10, 0x22d, 0x0, V549, V588]

================================

Block 0x821
[0x821:0x827]
---
Predecessors: [0x7c8, 0x7cf]
Successors: [0x828, 0x852]
---
0x821 JUMPDEST
0x822 DUP1
0x823 ISZERO
0x824 PUSH2 0x852
0x827 JUMPI
---
0x821: JUMPDEST 
0x823: V589 = ISZERO S0
0x824: V590 = 0x852
0x827: JUMPI 0x852 V589
---
Entry stack: [V10, 0x22d, 0x0, V549, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x22d, 0x0, V549, S0]

================================

Block 0x828
[0x828:0x83e]
---
Predecessors: [0x821]
Successors: [0x83f, 0x850]
---
0x828 POP
0x829 PUSH1 0x8
0x82b PUSH1 0x0
0x82d SWAP1
0x82e SLOAD
0x82f SWAP1
0x830 PUSH2 0x100
0x833 EXP
0x834 SWAP1
0x835 DIV
0x836 PUSH1 0xff
0x838 AND
0x839 DUP1
0x83a ISZERO
0x83b PUSH2 0x850
0x83e JUMPI
---
0x829: V591 = 0x8
0x82b: V592 = 0x0
0x82e: V593 = S[0x8]
0x830: V594 = 0x100
0x833: V595 = EXP 0x100 0x0
0x835: V596 = DIV V593 0x1
0x836: V597 = 0xff
0x838: V598 = AND 0xff V596
0x83a: V599 = ISZERO V598
0x83b: V600 = 0x850
0x83e: JUMPI 0x850 V599
---
Entry stack: [V10, 0x22d, 0x0, V549, S0]
Stack pops: 1
Stack additions: [V598]
Exit stack: [V10, 0x22d, 0x0, V549, V598]

================================

Block 0x83f
[0x83f:0x84f]
---
Predecessors: [0x828]
Successors: [0x850]
---
0x83f POP
0x840 PUSH1 0x8
0x842 PUSH1 0x1
0x844 SWAP1
0x845 SLOAD
0x846 SWAP1
0x847 PUSH2 0x100
0x84a EXP
0x84b SWAP1
0x84c DIV
0x84d PUSH1 0xff
0x84f AND
---
0x840: V601 = 0x8
0x842: V602 = 0x1
0x845: V603 = S[0x8]
0x847: V604 = 0x100
0x84a: V605 = EXP 0x100 0x1
0x84c: V606 = DIV V603 0x100
0x84d: V607 = 0xff
0x84f: V608 = AND 0xff V606
---
Entry stack: [V10, 0x22d, 0x0, V549, V598]
Stack pops: 1
Stack additions: [V608]
Exit stack: [V10, 0x22d, 0x0, V549, V608]

================================

Block 0x850
[0x850:0x851]
---
Predecessors: [0x828, 0x83f]
Successors: [0x852]
---
0x850 JUMPDEST
0x851 ISZERO
---
0x850: JUMPDEST 
0x851: V609 = ISZERO S0
---
Entry stack: [V10, 0x22d, 0x0, V549, S0]
Stack pops: 1
Stack additions: [V609]
Exit stack: [V10, 0x22d, 0x0, V549, V609]

================================

Block 0x852
[0x852:0x858]
---
Predecessors: [0x821, 0x850]
Successors: [0x859, 0x85d]
---
0x852 JUMPDEST
0x853 ISZERO
0x854 ISZERO
0x855 PUSH2 0x85d
0x858 JUMPI
---
0x852: JUMPDEST 
0x853: V610 = ISZERO S0
0x854: V611 = ISZERO V610
0x855: V612 = 0x85d
0x858: JUMPI 0x85d V611
---
Entry stack: [V10, 0x22d, 0x0, V549, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x22d, 0x0, V549]

================================

Block 0x859
[0x859:0x85c]
---
Predecessors: [0x852]
Successors: []
---
0x859 PUSH1 0x0
0x85b DUP1
0x85c REVERT
---
0x859: V613 = 0x0
0x85c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22d, 0x0, V549]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22d, 0x0, V549]

================================

Block 0x85d
[0x85d:0x8b5]
---
Predecessors: [0x852]
Successors: [0x8b6, 0x8d9]
---
0x85d JUMPDEST
0x85e PUSH1 0x1
0x860 PUSH1 0x8
0x862 PUSH1 0x2
0x864 PUSH2 0x100
0x867 EXP
0x868 DUP2
0x869 SLOAD
0x86a DUP2
0x86b PUSH1 0xff
0x86d MUL
0x86e NOT
0x86f AND
0x870 SWAP1
0x871 DUP4
0x872 ISZERO
0x873 ISZERO
0x874 MUL
0x875 OR
0x876 SWAP1
0x877 SSTORE
0x878 POP
0x879 CALLER
0x87a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88f AND
0x890 PUSH2 0x8fc
0x893 PUSH1 0x4
0x895 SLOAD
0x896 SWAP1
0x897 DUP2
0x898 ISZERO
0x899 MUL
0x89a SWAP1
0x89b PUSH1 0x40
0x89d MLOAD
0x89e PUSH1 0x0
0x8a0 PUSH1 0x40
0x8a2 MLOAD
0x8a3 DUP1
0x8a4 DUP4
0x8a5 SUB
0x8a6 DUP2
0x8a7 DUP6
0x8a8 DUP9
0x8a9 DUP9
0x8aa CALL
0x8ab SWAP4
0x8ac POP
0x8ad POP
0x8ae POP
0x8af POP
0x8b0 ISZERO
0x8b1 ISZERO
0x8b2 PUSH2 0x8d9
0x8b5 JUMPI
---
0x85d: JUMPDEST 
0x85e: V614 = 0x1
0x860: V615 = 0x8
0x862: V616 = 0x2
0x864: V617 = 0x100
0x867: V618 = EXP 0x100 0x2
0x869: V619 = S[0x8]
0x86b: V620 = 0xff
0x86d: V621 = MUL 0xff 0x10000
0x86e: V622 = NOT 0xff0000
0x86f: V623 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V619
0x872: V624 = ISZERO 0x1
0x873: V625 = ISZERO 0x0
0x874: V626 = MUL 0x1 0x10000
0x875: V627 = OR 0x10000 V623
0x877: S[0x8] = V627
0x879: V628 = CALLER
0x87a: V629 = 0xffffffffffffffffffffffffffffffffffffffff
0x88f: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0x890: V631 = 0x8fc
0x893: V632 = 0x4
0x895: V633 = S[0x4]
0x898: V634 = ISZERO V633
0x899: V635 = MUL V634 0x8fc
0x89b: V636 = 0x40
0x89d: V637 = M[0x40]
0x89e: V638 = 0x0
0x8a0: V639 = 0x40
0x8a2: V640 = M[0x40]
0x8a5: V641 = SUB V637 V640
0x8aa: V642 = CALL V635 V630 V633 V640 V641 V640 0x0
0x8b0: V643 = ISZERO V642
0x8b1: V644 = ISZERO V643
0x8b2: V645 = 0x8d9
0x8b5: JUMPI 0x8d9 V644
---
Entry stack: [V10, 0x22d, 0x0, V549]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22d, 0x0, V549]

================================

Block 0x8b6
[0x8b6:0x8d8]
---
Predecessors: [0x85d]
Successors: [0x993]
---
0x8b6 PUSH1 0x0
0x8b8 PUSH1 0x8
0x8ba PUSH1 0x2
0x8bc PUSH2 0x100
0x8bf EXP
0x8c0 DUP2
0x8c1 SLOAD
0x8c2 DUP2
0x8c3 PUSH1 0xff
0x8c5 MUL
0x8c6 NOT
0x8c7 AND
0x8c8 SWAP1
0x8c9 DUP4
0x8ca ISZERO
0x8cb ISZERO
0x8cc MUL
0x8cd OR
0x8ce SWAP1
0x8cf SSTORE
0x8d0 POP
0x8d1 PUSH1 0x0
0x8d3 SWAP2
0x8d4 POP
0x8d5 PUSH2 0x993
0x8d8 JUMP
---
0x8b6: V646 = 0x0
0x8b8: V647 = 0x8
0x8ba: V648 = 0x2
0x8bc: V649 = 0x100
0x8bf: V650 = EXP 0x100 0x2
0x8c1: V651 = S[0x8]
0x8c3: V652 = 0xff
0x8c5: V653 = MUL 0xff 0x10000
0x8c6: V654 = NOT 0xff0000
0x8c7: V655 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V651
0x8ca: V656 = ISZERO 0x0
0x8cb: V657 = ISZERO 0x1
0x8cc: V658 = MUL 0x0 0x10000
0x8cd: V659 = OR 0x0 V655
0x8cf: S[0x8] = V659
0x8d1: V660 = 0x0
0x8d5: V661 = 0x993
0x8d8: JUMP 0x993
---
Entry stack: [V10, 0x22d, 0x0, V549]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x22d, 0x0, V549]

================================

Block 0x8d9
[0x8d9:0x8f6]
---
Predecessors: [0x85d]
Successors: [0x8f7, 0x8f8]
---
0x8d9 JUMPDEST
0x8da PUSH1 0x7
0x8dc PUSH1 0x8
0x8de PUSH1 0x4
0x8e0 PUSH2 0x100
0x8e3 EXP
0x8e4 DUP2
0x8e5 SLOAD
0x8e6 DUP2
0x8e7 PUSH1 0xff
0x8e9 MUL
0x8ea NOT
0x8eb AND
0x8ec SWAP1
0x8ed DUP4
0x8ee PUSH1 0x7
0x8f0 DUP2
0x8f1 GT
0x8f2 ISZERO
0x8f3 PUSH2 0x8f8
0x8f6 JUMPI
---
0x8d9: JUMPDEST 
0x8da: V662 = 0x7
0x8dc: V663 = 0x8
0x8de: V664 = 0x4
0x8e0: V665 = 0x100
0x8e3: V666 = EXP 0x100 0x4
0x8e5: V667 = S[0x8]
0x8e7: V668 = 0xff
0x8e9: V669 = MUL 0xff 0x100000000
0x8ea: V670 = NOT 0xff00000000
0x8eb: V671 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V667
0x8ee: V672 = 0x7
0x8f1: V673 = GT 0x7 0x7
0x8f2: V674 = ISZERO 0x0
0x8f3: V675 = 0x8f8
0x8f6: JUMPI 0x8f8 0x1
---
Entry stack: [V10, 0x22d, 0x0, V549]
Stack pops: 0
Stack additions: [0x7, 0x8, V671, 0x100000000, 0x7]
Exit stack: [V10, 0x22d, 0x0, V549, 0x7, 0x8, V671, 0x100000000, 0x7]

================================

Block 0x8f7
[0x8f7:0x8f7]
---
Predecessors: [0x8d9]
Successors: []
---
0x8f7 INVALID
---
0x8f7: INVALID 
---
Entry stack: [V10, 0x22d, 0x0, V549, 0x7, 0x8, V671, 0x100000000, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22d, 0x0, V549, 0x7, 0x8, V671, 0x100000000, 0x7]

================================

Block 0x8f8
[0x8f8:0x987]
---
Predecessors: [0x8d9]
Successors: [0x988, 0x989]
---
0x8f8 JUMPDEST
0x8f9 MUL
0x8fa OR
0x8fb SWAP1
0x8fc SSTORE
0x8fd POP
0x8fe PUSH32 0x84f091117c6c8ed17ac6317eaeaccc08c44f3228636be1f0ba66de20d10ecc77
0x91f CALLER
0x920 PUSH1 0x4
0x922 SLOAD
0x923 PUSH1 0x40
0x925 MLOAD
0x926 DUP1
0x927 DUP4
0x928 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93d AND
0x93e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x953 AND
0x954 DUP2
0x955 MSTORE
0x956 PUSH1 0x20
0x958 ADD
0x959 DUP3
0x95a DUP2
0x95b MSTORE
0x95c PUSH1 0x20
0x95e ADD
0x95f SWAP3
0x960 POP
0x961 POP
0x962 POP
0x963 PUSH1 0x40
0x965 MLOAD
0x966 DUP1
0x967 SWAP2
0x968 SUB
0x969 SWAP1
0x96a LOG1
0x96b PUSH1 0x4
0x96d PUSH1 0x8
0x96f PUSH1 0x4
0x971 PUSH2 0x100
0x974 EXP
0x975 DUP2
0x976 SLOAD
0x977 DUP2
0x978 PUSH1 0xff
0x97a MUL
0x97b NOT
0x97c AND
0x97d SWAP1
0x97e DUP4
0x97f PUSH1 0x7
0x981 DUP2
0x982 GT
0x983 ISZERO
0x984 PUSH2 0x989
0x987 JUMPI
---
0x8f8: JUMPDEST 
0x8f9: V676 = MUL 0x7 0x100000000
0x8fa: V677 = OR 0x700000000 V671
0x8fc: S[0x8] = V677
0x8fe: V678 = 0x84f091117c6c8ed17ac6317eaeaccc08c44f3228636be1f0ba66de20d10ecc77
0x91f: V679 = CALLER
0x920: V680 = 0x4
0x922: V681 = S[0x4]
0x923: V682 = 0x40
0x925: V683 = M[0x40]
0x928: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0x93d: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0x93e: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0x953: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0x955: M[V683] = V687
0x956: V688 = 0x20
0x958: V689 = ADD 0x20 V683
0x95b: M[V689] = V681
0x95c: V690 = 0x20
0x95e: V691 = ADD 0x20 V689
0x963: V692 = 0x40
0x965: V693 = M[0x40]
0x968: V694 = SUB V691 V693
0x96a: LOG V693 V694 0x84f091117c6c8ed17ac6317eaeaccc08c44f3228636be1f0ba66de20d10ecc77
0x96b: V695 = 0x4
0x96d: V696 = 0x8
0x96f: V697 = 0x4
0x971: V698 = 0x100
0x974: V699 = EXP 0x100 0x4
0x976: V700 = S[0x8]
0x978: V701 = 0xff
0x97a: V702 = MUL 0xff 0x100000000
0x97b: V703 = NOT 0xff00000000
0x97c: V704 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V700
0x97f: V705 = 0x7
0x982: V706 = GT 0x4 0x7
0x983: V707 = ISZERO 0x0
0x984: V708 = 0x989
0x987: JUMPI 0x989 0x1
---
Entry stack: [V10, 0x22d, 0x0, V549, 0x7, 0x8, V671, 0x100000000, 0x7]
Stack pops: 5
Stack additions: [0x4, 0x8, V704, 0x100000000, 0x4]
Exit stack: [V10, 0x22d, 0x0, V549, 0x4, 0x8, V704, 0x100000000, 0x4]

================================

Block 0x988
[0x988:0x988]
---
Predecessors: [0x8f8]
Successors: []
---
0x988 INVALID
---
0x988: INVALID 
---
Entry stack: [V10, 0x22d, 0x0, V549, 0x4, 0x8, V704, 0x100000000, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22d, 0x0, V549, 0x4, 0x8, V704, 0x100000000, 0x4]

================================

Block 0x989
[0x989:0x992]
---
Predecessors: [0x8f8]
Successors: [0x993]
---
0x989 JUMPDEST
0x98a MUL
0x98b OR
0x98c SWAP1
0x98d SSTORE
0x98e POP
0x98f PUSH1 0x1
0x991 SWAP2
0x992 POP
---
0x989: JUMPDEST 
0x98a: V709 = MUL 0x4 0x100000000
0x98b: V710 = OR 0x400000000 V704
0x98d: S[0x8] = V710
0x98f: V711 = 0x1
---
Entry stack: [V10, 0x22d, 0x0, V549, 0x4, 0x8, V704, 0x100000000, 0x4]
Stack pops: 7
Stack additions: [0x1, S5]
Exit stack: [V10, 0x22d, 0x1, V549]

================================

Block 0x993
[0x993:0x996]
---
Predecessors: [0x8b6, 0x989]
Successors: [0x22d]
---
0x993 JUMPDEST
0x994 POP
0x995 SWAP1
0x996 JUMP
---
0x993: JUMPDEST 
0x996: JUMP 0x22d
---
Entry stack: [V10, 0x22d, {0x0, 0x1}, V549]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x997
[0x997:0x99c]
---
Predecessors: [0x252]
Successors: [0x25a]
---
0x997 JUMPDEST
0x998 PUSH1 0x4
0x99a SLOAD
0x99b DUP2
0x99c JUMP
---
0x997: JUMPDEST 
0x998: V712 = 0x4
0x99a: V713 = S[0x4]
0x99c: JUMP 0x25a
---
Entry stack: [V10, 0x25a]
Stack pops: 1
Stack additions: [S0, V713]
Exit stack: [V10, 0x25a, V713]

================================

Block 0x99d
[0x99d:0x9ac]
---
Predecessors: [0x270]
Successors: [0x9ad, 0x9ae]
---
0x99d JUMPDEST
0x99e CALLVALUE
0x99f PUSH1 0x0
0x9a1 PUSH3 0x186a0
0x9a5 DUP3
0x9a6 DUP2
0x9a7 ISZERO
0x9a8 ISZERO
0x9a9 PUSH2 0x9ae
0x9ac JUMPI
---
0x99d: JUMPDEST 
0x99e: V714 = CALLVALUE
0x99f: V715 = 0x0
0x9a1: V716 = 0x186a0
0x9a7: V717 = ISZERO 0x186a0
0x9a8: V718 = ISZERO 0x0
0x9a9: V719 = 0x9ae
0x9ac: JUMPI 0x9ae 0x1
---
Entry stack: [V10, 0x278]
Stack pops: 0
Stack additions: [V714, 0x0, 0x186a0, V714]
Exit stack: [V10, 0x278, V714, 0x0, 0x186a0, V714]

================================

Block 0x9ad
[0x9ad:0x9ad]
---
Predecessors: [0x99d]
Successors: []
---
0x9ad INVALID
---
0x9ad: INVALID 
---
Entry stack: [V10, 0x278, V714, 0x0, 0x186a0, V714]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, V714, 0x0, 0x186a0, V714]

================================

Block 0x9ae
[0x9ae:0x9b6]
---
Predecessors: [0x99d]
Successors: [0x9b7, 0x9bb]
---
0x9ae JUMPDEST
0x9af MOD
0x9b0 EQ
0x9b1 ISZERO
0x9b2 ISZERO
0x9b3 PUSH2 0x9bb
0x9b6 JUMPI
---
0x9ae: JUMPDEST 
0x9af: V720 = MOD V714 0x186a0
0x9b0: V721 = EQ V720 0x0
0x9b1: V722 = ISZERO V721
0x9b2: V723 = ISZERO V722
0x9b3: V724 = 0x9bb
0x9b6: JUMPI 0x9bb V723
---
Entry stack: [V10, 0x278, V714, 0x0, 0x186a0, V714]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x278, V714]

================================

Block 0x9b7
[0x9b7:0x9ba]
---
Predecessors: [0x9ae]
Successors: []
---
0x9b7 PUSH1 0x0
0x9b9 DUP1
0x9ba REVERT
---
0x9b7: V725 = 0x0
0x9ba: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, V714]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, V714]

================================

Block 0x9bb
[0x9bb:0x9cb]
---
Predecessors: [0x9ae]
Successors: [0x9cc, 0xa1e]
---
0x9bb JUMPDEST
0x9bc CALLER
0x9bd PUSH1 0x7
0x9bf SLOAD
0x9c0 PUSH1 0x6
0x9c2 SLOAD
0x9c3 ADD
0x9c4 TIMESTAMP
0x9c5 LT
0x9c6 DUP1
0x9c7 ISZERO
0x9c8 PUSH2 0xa1e
0x9cb JUMPI
---
0x9bb: JUMPDEST 
0x9bc: V726 = CALLER
0x9bd: V727 = 0x7
0x9bf: V728 = S[0x7]
0x9c0: V729 = 0x6
0x9c2: V730 = S[0x6]
0x9c3: V731 = ADD V730 V728
0x9c4: V732 = TIMESTAMP
0x9c5: V733 = LT V732 V731
0x9c7: V734 = ISZERO V733
0x9c8: V735 = 0xa1e
0x9cb: JUMPI 0xa1e V734
---
Entry stack: [V10, 0x278, V714]
Stack pops: 0
Stack additions: [V726, V733]
Exit stack: [V10, 0x278, V714, V726, V733]

================================

Block 0x9cc
[0x9cc:0xa1d]
---
Predecessors: [0x9bb]
Successors: [0xa1e]
---
0x9cc POP
0x9cd PUSH1 0x1
0x9cf PUSH1 0x0
0x9d1 SWAP1
0x9d2 SLOAD
0x9d3 SWAP1
0x9d4 PUSH2 0x100
0x9d7 EXP
0x9d8 SWAP1
0x9d9 DIV
0x9da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ef AND
0x9f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa05 AND
0xa06 DUP2
0xa07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1c AND
0xa1d EQ
---
0x9cd: V736 = 0x1
0x9cf: V737 = 0x0
0x9d2: V738 = S[0x1]
0x9d4: V739 = 0x100
0x9d7: V740 = EXP 0x100 0x0
0x9d9: V741 = DIV V738 0x1
0x9da: V742 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ef: V743 = AND 0xffffffffffffffffffffffffffffffffffffffff V741
0x9f0: V744 = 0xffffffffffffffffffffffffffffffffffffffff
0xa05: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0xa07: V746 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1c: V747 = AND 0xffffffffffffffffffffffffffffffffffffffff V726
0xa1d: V748 = EQ V747 V745
---
Entry stack: [V10, 0x278, V714, V726, V733]
Stack pops: 2
Stack additions: [S1, V748]
Exit stack: [V10, 0x278, V714, V726, V748]

================================

Block 0xa1e
[0xa1e:0xa24]
---
Predecessors: [0x9bb, 0x9cc]
Successors: [0xa25, 0xa2c]
---
0xa1e JUMPDEST
0xa1f DUP1
0xa20 ISZERO
0xa21 PUSH2 0xa2c
0xa24 JUMPI
---
0xa1e: JUMPDEST 
0xa20: V749 = ISZERO S0
0xa21: V750 = 0xa2c
0xa24: JUMPI 0xa2c V749
---
Entry stack: [V10, 0x278, V714, V726, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x278, V714, V726, S0]

================================

Block 0xa25
[0xa25:0xa2b]
---
Predecessors: [0xa1e]
Successors: [0xa2c]
---
0xa25 POP
0xa26 PUSH1 0x0
0xa28 PUSH1 0x3
0xa2a SLOAD
0xa2b EQ
---
0xa26: V751 = 0x0
0xa28: V752 = 0x3
0xa2a: V753 = S[0x3]
0xa2b: V754 = EQ V753 0x0
---
Entry stack: [V10, 0x278, V714, V726, S0]
Stack pops: 1
Stack additions: [V754]
Exit stack: [V10, 0x278, V714, V726, V754]

================================

Block 0xa2c
[0xa2c:0xa32]
---
Predecessors: [0xa1e, 0xa25]
Successors: [0xa33, 0xa37]
---
0xa2c JUMPDEST
0xa2d ISZERO
0xa2e ISZERO
0xa2f PUSH2 0xa37
0xa32 JUMPI
---
0xa2c: JUMPDEST 
0xa2d: V755 = ISZERO S0
0xa2e: V756 = ISZERO V755
0xa2f: V757 = 0xa37
0xa32: JUMPI 0xa37 V756
---
Entry stack: [V10, 0x278, V714, V726, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x278, V714, V726]

================================

Block 0xa33
[0xa33:0xa36]
---
Predecessors: [0xa2c]
Successors: []
---
0xa33 PUSH1 0x0
0xa35 DUP1
0xa36 REVERT
---
0xa33: V758 = 0x0
0xa36: REVERT 0x0 0x0
---
Entry stack: [V10, 0x278, V714, V726]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x278, V714, V726]

================================

Block 0xa37
[0xa37:0xa41]
---
Predecessors: [0xa2c]
Successors: [0x278]
---
0xa37 JUMPDEST
0xa38 CALLVALUE
0xa39 PUSH1 0x3
0xa3b DUP2
0xa3c SWAP1
0xa3d SSTORE
0xa3e POP
0xa3f POP
0xa40 POP
0xa41 JUMP
---
0xa37: JUMPDEST 
0xa38: V759 = CALLVALUE
0xa39: V760 = 0x3
0xa3d: S[0x3] = V759
0xa41: JUMP 0x278
---
Entry stack: [V10, 0x278, V714, V726]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xa42
[0xa42:0xa54]
---
Predecessors: [0x285]
Successors: [0x28d]
---
0xa42 JUMPDEST
0xa43 PUSH1 0x8
0xa45 PUSH1 0x0
0xa47 SWAP1
0xa48 SLOAD
0xa49 SWAP1
0xa4a PUSH2 0x100
0xa4d EXP
0xa4e SWAP1
0xa4f DIV
0xa50 PUSH1 0xff
0xa52 AND
0xa53 DUP2
0xa54 JUMP
---
0xa42: JUMPDEST 
0xa43: V761 = 0x8
0xa45: V762 = 0x0
0xa48: V763 = S[0x8]
0xa4a: V764 = 0x100
0xa4d: V765 = EXP 0x100 0x0
0xa4f: V766 = DIV V763 0x1
0xa50: V767 = 0xff
0xa52: V768 = AND 0xff V766
0xa54: JUMP 0x28d
---
Entry stack: [V10, 0x28d]
Stack pops: 1
Stack additions: [S0, V768]
Exit stack: [V10, 0x28d, V768]

================================

Block 0xa55
[0xa55:0xaa9]
---
Predecessors: [0x2b2]
Successors: [0x2ba]
---
0xa55 JUMPDEST
0xa56 PUSH1 0x0
0xa58 DUP1
0xa59 PUSH1 0x0
0xa5b DUP1
0xa5c PUSH1 0x0
0xa5e PUSH1 0x8
0xa60 PUSH1 0x4
0xa62 SWAP1
0xa63 SLOAD
0xa64 SWAP1
0xa65 PUSH2 0x100
0xa68 EXP
0xa69 SWAP1
0xa6a DIV
0xa6b PUSH1 0xff
0xa6d AND
0xa6e PUSH1 0x3
0xa70 SLOAD
0xa71 PUSH1 0x7
0xa73 SLOAD
0xa74 PUSH1 0x2
0xa76 PUSH1 0x0
0xa78 SWAP1
0xa79 SLOAD
0xa7a SWAP1
0xa7b PUSH2 0x100
0xa7e EXP
0xa7f SWAP1
0xa80 DIV
0xa81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa96 AND
0xa97 PUSH1 0x6
0xa99 SLOAD
0xa9a SWAP5
0xa9b POP
0xa9c SWAP5
0xa9d POP
0xa9e SWAP5
0xa9f POP
0xaa0 SWAP5
0xaa1 POP
0xaa2 SWAP5
0xaa3 POP
0xaa4 SWAP1
0xaa5 SWAP2
0xaa6 SWAP3
0xaa7 SWAP4
0xaa8 SWAP5
0xaa9 JUMP
---
0xa55: JUMPDEST 
0xa56: V769 = 0x0
0xa59: V770 = 0x0
0xa5c: V771 = 0x0
0xa5e: V772 = 0x8
0xa60: V773 = 0x4
0xa63: V774 = S[0x8]
0xa65: V775 = 0x100
0xa68: V776 = EXP 0x100 0x4
0xa6a: V777 = DIV V774 0x100000000
0xa6b: V778 = 0xff
0xa6d: V779 = AND 0xff V777
0xa6e: V780 = 0x3
0xa70: V781 = S[0x3]
0xa71: V782 = 0x7
0xa73: V783 = S[0x7]
0xa74: V784 = 0x2
0xa76: V785 = 0x0
0xa79: V786 = S[0x2]
0xa7b: V787 = 0x100
0xa7e: V788 = EXP 0x100 0x0
0xa80: V789 = DIV V786 0x1
0xa81: V790 = 0xffffffffffffffffffffffffffffffffffffffff
0xa96: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V789
0xa97: V792 = 0x6
0xa99: V793 = S[0x6]
0xaa9: JUMP 0x2ba
---
Entry stack: [V10, 0x2ba]
Stack pops: 1
Stack additions: [V779, V781, V783, V791, V793]
Exit stack: [V10, V779, V781, V783, V791, V793]

================================

Block 0xaaa
[0xaaa:0xb02]
---
Predecessors: [0x331]
Successors: [0xb03, 0xb15]
---
0xaaa JUMPDEST
0xaab CALLER
0xaac PUSH1 0x2
0xaae PUSH1 0x0
0xab0 SWAP1
0xab1 SLOAD
0xab2 SWAP1
0xab3 PUSH2 0x100
0xab6 EXP
0xab7 SWAP1
0xab8 DIV
0xab9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xace AND
0xacf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae4 AND
0xae5 DUP2
0xae6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xafb AND
0xafc EQ
0xafd DUP1
0xafe ISZERO
0xaff PUSH2 0xb15
0xb02 JUMPI
---
0xaaa: JUMPDEST 
0xaab: V794 = CALLER
0xaac: V795 = 0x2
0xaae: V796 = 0x0
0xab1: V797 = S[0x2]
0xab3: V798 = 0x100
0xab6: V799 = EXP 0x100 0x0
0xab8: V800 = DIV V797 0x1
0xab9: V801 = 0xffffffffffffffffffffffffffffffffffffffff
0xace: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0xacf: V803 = 0xffffffffffffffffffffffffffffffffffffffff
0xae4: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff V802
0xae6: V805 = 0xffffffffffffffffffffffffffffffffffffffff
0xafb: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V794
0xafc: V807 = EQ V806 V804
0xafe: V808 = ISZERO V807
0xaff: V809 = 0xb15
0xb02: JUMPI 0xb15 V808
---
Entry stack: [V10, 0x339]
Stack pops: 0
Stack additions: [V794, V807]
Exit stack: [V10, 0x339, V794, V807]

================================

Block 0xb03
[0xb03:0xb14]
---
Predecessors: [0xaaa]
Successors: [0xb15]
---
0xb03 POP
0xb04 PUSH1 0x8
0xb06 PUSH1 0x1
0xb08 SWAP1
0xb09 SLOAD
0xb0a SWAP1
0xb0b PUSH2 0x100
0xb0e EXP
0xb0f SWAP1
0xb10 DIV
0xb11 PUSH1 0xff
0xb13 AND
0xb14 ISZERO
---
0xb04: V810 = 0x8
0xb06: V811 = 0x1
0xb09: V812 = S[0x8]
0xb0b: V813 = 0x100
0xb0e: V814 = EXP 0x100 0x1
0xb10: V815 = DIV V812 0x100
0xb11: V816 = 0xff
0xb13: V817 = AND 0xff V815
0xb14: V818 = ISZERO V817
---
Entry stack: [V10, 0x339, V794, V807]
Stack pops: 1
Stack additions: [V818]
Exit stack: [V10, 0x339, V794, V818]

================================

Block 0xb15
[0xb15:0xb1b]
---
Predecessors: [0xaaa, 0xb03]
Successors: [0xb1c, 0xb27]
---
0xb15 JUMPDEST
0xb16 DUP1
0xb17 ISZERO
0xb18 PUSH2 0xb27
0xb1b JUMPI
---
0xb15: JUMPDEST 
0xb17: V819 = ISZERO S0
0xb18: V820 = 0xb27
0xb1b: JUMPI 0xb27 V819
---
Entry stack: [V10, 0x339, V794, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x339, V794, S0]

================================

Block 0xb1c
[0xb1c:0xb26]
---
Predecessors: [0xb15]
Successors: [0xb27]
---
0xb1c POP
0xb1d PUSH1 0x7
0xb1f SLOAD
0xb20 PUSH1 0x6
0xb22 SLOAD
0xb23 ADD
0xb24 TIMESTAMP
0xb25 GT
0xb26 ISZERO
---
0xb1d: V821 = 0x7
0xb1f: V822 = S[0x7]
0xb20: V823 = 0x6
0xb22: V824 = S[0x6]
0xb23: V825 = ADD V824 V822
0xb24: V826 = TIMESTAMP
0xb25: V827 = GT V826 V825
0xb26: V828 = ISZERO V827
---
Entry stack: [V10, 0x339, V794, S0]
Stack pops: 1
Stack additions: [V828]
Exit stack: [V10, 0x339, V794, V828]

================================

Block 0xb27
[0xb27:0xb2d]
---
Predecessors: [0xb15, 0xb1c]
Successors: [0xb2e, 0xb32]
---
0xb27 JUMPDEST
0xb28 ISZERO
0xb29 ISZERO
0xb2a PUSH2 0xb32
0xb2d JUMPI
---
0xb27: JUMPDEST 
0xb28: V829 = ISZERO S0
0xb29: V830 = ISZERO V829
0xb2a: V831 = 0xb32
0xb2d: JUMPI 0xb32 V830
---
Entry stack: [V10, 0x339, V794, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x339, V794]

================================

Block 0xb2e
[0xb2e:0xb31]
---
Predecessors: [0xb27]
Successors: []
---
0xb2e PUSH1 0x0
0xb30 DUP1
0xb31 REVERT
---
0xb2e: V832 = 0x0
0xb31: REVERT 0x0 0x0
---
Entry stack: [V10, 0x339, V794]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V794]

================================

Block 0xb32
[0xb32:0xb62]
---
Predecessors: [0xb27]
Successors: [0xb63, 0xc7a]
---
0xb32 JUMPDEST
0xb33 PUSH1 0x1
0xb35 PUSH1 0x8
0xb37 PUSH1 0x1
0xb39 PUSH2 0x100
0xb3c EXP
0xb3d DUP2
0xb3e SLOAD
0xb3f DUP2
0xb40 PUSH1 0xff
0xb42 MUL
0xb43 NOT
0xb44 AND
0xb45 SWAP1
0xb46 DUP4
0xb47 ISZERO
0xb48 ISZERO
0xb49 MUL
0xb4a OR
0xb4b SWAP1
0xb4c SSTORE
0xb4d POP
0xb4e PUSH1 0x8
0xb50 PUSH1 0x0
0xb52 SWAP1
0xb53 SLOAD
0xb54 SWAP1
0xb55 PUSH2 0x100
0xb58 EXP
0xb59 SWAP1
0xb5a DIV
0xb5b PUSH1 0xff
0xb5d AND
0xb5e ISZERO
0xb5f PUSH2 0xc7a
0xb62 JUMPI
---
0xb32: JUMPDEST 
0xb33: V833 = 0x1
0xb35: V834 = 0x8
0xb37: V835 = 0x1
0xb39: V836 = 0x100
0xb3c: V837 = EXP 0x100 0x1
0xb3e: V838 = S[0x8]
0xb40: V839 = 0xff
0xb42: V840 = MUL 0xff 0x100
0xb43: V841 = NOT 0xff00
0xb44: V842 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V838
0xb47: V843 = ISZERO 0x1
0xb48: V844 = ISZERO 0x0
0xb49: V845 = MUL 0x1 0x100
0xb4a: V846 = OR 0x100 V842
0xb4c: S[0x8] = V846
0xb4e: V847 = 0x8
0xb50: V848 = 0x0
0xb53: V849 = S[0x8]
0xb55: V850 = 0x100
0xb58: V851 = EXP 0x100 0x0
0xb5a: V852 = DIV V849 0x1
0xb5b: V853 = 0xff
0xb5d: V854 = AND 0xff V852
0xb5e: V855 = ISZERO V854
0xb5f: V856 = 0xc7a
0xb62: JUMPI 0xc7a V855
---
Entry stack: [V10, 0x339, V794]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V794]

================================

Block 0xb63
[0xb63:0xb7f]
---
Predecessors: [0xb32]
Successors: [0xb80, 0xb81]
---
0xb63 PUSH1 0x3
0xb65 PUSH1 0x8
0xb67 PUSH1 0x4
0xb69 PUSH2 0x100
0xb6c EXP
0xb6d DUP2
0xb6e SLOAD
0xb6f DUP2
0xb70 PUSH1 0xff
0xb72 MUL
0xb73 NOT
0xb74 AND
0xb75 SWAP1
0xb76 DUP4
0xb77 PUSH1 0x7
0xb79 DUP2
0xb7a GT
0xb7b ISZERO
0xb7c PUSH2 0xb81
0xb7f JUMPI
---
0xb63: V857 = 0x3
0xb65: V858 = 0x8
0xb67: V859 = 0x4
0xb69: V860 = 0x100
0xb6c: V861 = EXP 0x100 0x4
0xb6e: V862 = S[0x8]
0xb70: V863 = 0xff
0xb72: V864 = MUL 0xff 0x100000000
0xb73: V865 = NOT 0xff00000000
0xb74: V866 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V862
0xb77: V867 = 0x7
0xb7a: V868 = GT 0x3 0x7
0xb7b: V869 = ISZERO 0x0
0xb7c: V870 = 0xb81
0xb7f: JUMPI 0xb81 0x1
---
Entry stack: [V10, 0x339, V794]
Stack pops: 0
Stack additions: [0x3, 0x8, V866, 0x100000000, 0x3]
Exit stack: [V10, 0x339, V794, 0x3, 0x8, V866, 0x100000000, 0x3]

================================

Block 0xb80
[0xb80:0xb80]
---
Predecessors: [0xb63]
Successors: []
---
0xb80 INVALID
---
0xb80: INVALID 
---
Entry stack: [V10, 0x339, V794, 0x3, 0x8, V866, 0x100000000, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V794, 0x3, 0x8, V866, 0x100000000, 0x3]

================================

Block 0xb81
[0xb81:0xc79]
---
Predecessors: [0xb63]
Successors: [0xd02]
---
0xb81 JUMPDEST
0xb82 MUL
0xb83 OR
0xb84 SWAP1
0xb85 SSTORE
0xb86 POP
0xb87 PUSH32 0x5a7d51bcf476114dd5554bb88f264ee356c5471d56a4d1ba560cb9c1d58f0de2
0xba8 PUSH1 0x6
0xbaa SLOAD
0xbab PUSH1 0x1
0xbad PUSH1 0x0
0xbaf SWAP1
0xbb0 SLOAD
0xbb1 SWAP1
0xbb2 PUSH2 0x100
0xbb5 EXP
0xbb6 SWAP1
0xbb7 DIV
0xbb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbcd AND
0xbce PUSH1 0x2
0xbd0 PUSH1 0x0
0xbd2 SWAP1
0xbd3 SLOAD
0xbd4 SWAP1
0xbd5 PUSH2 0x100
0xbd8 EXP
0xbd9 SWAP1
0xbda DIV
0xbdb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf0 AND
0xbf1 PUSH1 0x3
0xbf3 SLOAD
0xbf4 PUSH1 0x40
0xbf6 MLOAD
0xbf7 DUP1
0xbf8 DUP6
0xbf9 DUP2
0xbfa MSTORE
0xbfb PUSH1 0x20
0xbfd ADD
0xbfe DUP5
0xbff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc14 AND
0xc15 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2a AND
0xc2b DUP2
0xc2c MSTORE
0xc2d PUSH1 0x20
0xc2f ADD
0xc30 DUP4
0xc31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc46 AND
0xc47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5c AND
0xc5d DUP2
0xc5e MSTORE
0xc5f PUSH1 0x20
0xc61 ADD
0xc62 DUP3
0xc63 DUP2
0xc64 MSTORE
0xc65 PUSH1 0x20
0xc67 ADD
0xc68 SWAP5
0xc69 POP
0xc6a POP
0xc6b POP
0xc6c POP
0xc6d POP
0xc6e PUSH1 0x40
0xc70 MLOAD
0xc71 DUP1
0xc72 SWAP2
0xc73 SUB
0xc74 SWAP1
0xc75 LOG1
0xc76 PUSH2 0xd02
0xc79 JUMP
---
0xb81: JUMPDEST 
0xb82: V871 = MUL 0x3 0x100000000
0xb83: V872 = OR 0x300000000 V866
0xb85: S[0x8] = V872
0xb87: V873 = 0x5a7d51bcf476114dd5554bb88f264ee356c5471d56a4d1ba560cb9c1d58f0de2
0xba8: V874 = 0x6
0xbaa: V875 = S[0x6]
0xbab: V876 = 0x1
0xbad: V877 = 0x0
0xbb0: V878 = S[0x1]
0xbb2: V879 = 0x100
0xbb5: V880 = EXP 0x100 0x0
0xbb7: V881 = DIV V878 0x1
0xbb8: V882 = 0xffffffffffffffffffffffffffffffffffffffff
0xbcd: V883 = AND 0xffffffffffffffffffffffffffffffffffffffff V881
0xbce: V884 = 0x2
0xbd0: V885 = 0x0
0xbd3: V886 = S[0x2]
0xbd5: V887 = 0x100
0xbd8: V888 = EXP 0x100 0x0
0xbda: V889 = DIV V886 0x1
0xbdb: V890 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf0: V891 = AND 0xffffffffffffffffffffffffffffffffffffffff V889
0xbf1: V892 = 0x3
0xbf3: V893 = S[0x3]
0xbf4: V894 = 0x40
0xbf6: V895 = M[0x40]
0xbfa: M[V895] = V875
0xbfb: V896 = 0x20
0xbfd: V897 = ADD 0x20 V895
0xbff: V898 = 0xffffffffffffffffffffffffffffffffffffffff
0xc14: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff V883
0xc15: V900 = 0xffffffffffffffffffffffffffffffffffffffff
0xc2a: V901 = AND 0xffffffffffffffffffffffffffffffffffffffff V899
0xc2c: M[V897] = V901
0xc2d: V902 = 0x20
0xc2f: V903 = ADD 0x20 V897
0xc31: V904 = 0xffffffffffffffffffffffffffffffffffffffff
0xc46: V905 = AND 0xffffffffffffffffffffffffffffffffffffffff V891
0xc47: V906 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5c: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V905
0xc5e: M[V903] = V907
0xc5f: V908 = 0x20
0xc61: V909 = ADD 0x20 V903
0xc64: M[V909] = V893
0xc65: V910 = 0x20
0xc67: V911 = ADD 0x20 V909
0xc6e: V912 = 0x40
0xc70: V913 = M[0x40]
0xc73: V914 = SUB V911 V913
0xc75: LOG V913 V914 0x5a7d51bcf476114dd5554bb88f264ee356c5471d56a4d1ba560cb9c1d58f0de2
0xc76: V915 = 0xd02
0xc79: JUMP 0xd02
---
Entry stack: [V10, 0x339, V794, 0x3, 0x8, V866, 0x100000000, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x339, V794]

================================

Block 0xc7a
[0xc7a:0xc97]
---
Predecessors: [0xb32]
Successors: [0xc98, 0xc99]
---
0xc7a JUMPDEST
0xc7b PUSH1 0x1
0xc7d PUSH1 0x8
0xc7f PUSH1 0x4
0xc81 PUSH2 0x100
0xc84 EXP
0xc85 DUP2
0xc86 SLOAD
0xc87 DUP2
0xc88 PUSH1 0xff
0xc8a MUL
0xc8b NOT
0xc8c AND
0xc8d SWAP1
0xc8e DUP4
0xc8f PUSH1 0x7
0xc91 DUP2
0xc92 GT
0xc93 ISZERO
0xc94 PUSH2 0xc99
0xc97 JUMPI
---
0xc7a: JUMPDEST 
0xc7b: V916 = 0x1
0xc7d: V917 = 0x8
0xc7f: V918 = 0x4
0xc81: V919 = 0x100
0xc84: V920 = EXP 0x100 0x4
0xc86: V921 = S[0x8]
0xc88: V922 = 0xff
0xc8a: V923 = MUL 0xff 0x100000000
0xc8b: V924 = NOT 0xff00000000
0xc8c: V925 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V921
0xc8f: V926 = 0x7
0xc92: V927 = GT 0x1 0x7
0xc93: V928 = ISZERO 0x0
0xc94: V929 = 0xc99
0xc97: JUMPI 0xc99 0x1
---
Entry stack: [V10, 0x339, V794]
Stack pops: 0
Stack additions: [0x1, 0x8, V925, 0x100000000, 0x1]
Exit stack: [V10, 0x339, V794, 0x1, 0x8, V925, 0x100000000, 0x1]

================================

Block 0xc98
[0xc98:0xc98]
---
Predecessors: [0xc7a]
Successors: []
---
0xc98 INVALID
---
0xc98: INVALID 
---
Entry stack: [V10, 0x339, V794, 0x1, 0x8, V925, 0x100000000, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V794, 0x1, 0x8, V925, 0x100000000, 0x1]

================================

Block 0xc99
[0xc99:0xd01]
---
Predecessors: [0xc7a]
Successors: [0xd02]
---
0xc99 JUMPDEST
0xc9a MUL
0xc9b OR
0xc9c SWAP1
0xc9d SSTORE
0xc9e POP
0xc9f PUSH32 0x6960017ce95f51298c0c80e5acf3955b0b8c34559a30c8485f3848ff1b83285e
0xcc0 CALLER
0xcc1 PUSH1 0x40
0xcc3 MLOAD
0xcc4 DUP1
0xcc5 DUP3
0xcc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcdb AND
0xcdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf1 AND
0xcf2 DUP2
0xcf3 MSTORE
0xcf4 PUSH1 0x20
0xcf6 ADD
0xcf7 SWAP2
0xcf8 POP
0xcf9 POP
0xcfa PUSH1 0x40
0xcfc MLOAD
0xcfd DUP1
0xcfe SWAP2
0xcff SUB
0xd00 SWAP1
0xd01 LOG1
---
0xc99: JUMPDEST 
0xc9a: V930 = MUL 0x1 0x100000000
0xc9b: V931 = OR 0x100000000 V925
0xc9d: S[0x8] = V931
0xc9f: V932 = 0x6960017ce95f51298c0c80e5acf3955b0b8c34559a30c8485f3848ff1b83285e
0xcc0: V933 = CALLER
0xcc1: V934 = 0x40
0xcc3: V935 = M[0x40]
0xcc6: V936 = 0xffffffffffffffffffffffffffffffffffffffff
0xcdb: V937 = AND 0xffffffffffffffffffffffffffffffffffffffff V933
0xcdc: V938 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf1: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V937
0xcf3: M[V935] = V939
0xcf4: V940 = 0x20
0xcf6: V941 = ADD 0x20 V935
0xcfa: V942 = 0x40
0xcfc: V943 = M[0x40]
0xcff: V944 = SUB V941 V943
0xd01: LOG V943 V944 0x6960017ce95f51298c0c80e5acf3955b0b8c34559a30c8485f3848ff1b83285e
---
Entry stack: [V10, 0x339, V794, 0x1, 0x8, V925, 0x100000000, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x339, V794]

================================

Block 0xd02
[0xd02:0xd04]
---
Predecessors: [0xb81, 0xc99]
Successors: [0x339]
---
0xd02 JUMPDEST
0xd03 POP
0xd04 JUMP
---
0xd02: JUMPDEST 
0xd04: JUMP 0x339
---
Entry stack: [V10, 0x339, V794]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xd05
[0xd05:0xd5d]
---
Predecessors: [0x346]
Successors: [0xd5e, 0xd70]
---
0xd05 JUMPDEST
0xd06 CALLER
0xd07 PUSH1 0x1
0xd09 PUSH1 0x0
0xd0b SWAP1
0xd0c SLOAD
0xd0d SWAP1
0xd0e PUSH2 0x100
0xd11 EXP
0xd12 SWAP1
0xd13 DIV
0xd14 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd29 AND
0xd2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3f AND
0xd40 DUP2
0xd41 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd56 AND
0xd57 EQ
0xd58 DUP1
0xd59 ISZERO
0xd5a PUSH2 0xd70
0xd5d JUMPI
---
0xd05: JUMPDEST 
0xd06: V945 = CALLER
0xd07: V946 = 0x1
0xd09: V947 = 0x0
0xd0c: V948 = S[0x1]
0xd0e: V949 = 0x100
0xd11: V950 = EXP 0x100 0x0
0xd13: V951 = DIV V948 0x1
0xd14: V952 = 0xffffffffffffffffffffffffffffffffffffffff
0xd29: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff V951
0xd2a: V954 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3f: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V953
0xd41: V956 = 0xffffffffffffffffffffffffffffffffffffffff
0xd56: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff V945
0xd57: V958 = EQ V957 V955
0xd59: V959 = ISZERO V958
0xd5a: V960 = 0xd70
0xd5d: JUMPI 0xd70 V959
---
Entry stack: [V10, 0x34e]
Stack pops: 0
Stack additions: [V945, V958]
Exit stack: [V10, 0x34e, V945, V958]

================================

Block 0xd5e
[0xd5e:0xd6f]
---
Predecessors: [0xd05]
Successors: [0xd70]
---
0xd5e POP
0xd5f PUSH1 0x8
0xd61 PUSH1 0x0
0xd63 SWAP1
0xd64 SLOAD
0xd65 SWAP1
0xd66 PUSH2 0x100
0xd69 EXP
0xd6a SWAP1
0xd6b DIV
0xd6c PUSH1 0xff
0xd6e AND
0xd6f ISZERO
---
0xd5f: V961 = 0x8
0xd61: V962 = 0x0
0xd64: V963 = S[0x8]
0xd66: V964 = 0x100
0xd69: V965 = EXP 0x100 0x0
0xd6b: V966 = DIV V963 0x1
0xd6c: V967 = 0xff
0xd6e: V968 = AND 0xff V966
0xd6f: V969 = ISZERO V968
---
Entry stack: [V10, 0x34e, V945, V958]
Stack pops: 1
Stack additions: [V969]
Exit stack: [V10, 0x34e, V945, V969]

================================

Block 0xd70
[0xd70:0xd76]
---
Predecessors: [0xd05, 0xd5e]
Successors: [0xd77, 0xd82]
---
0xd70 JUMPDEST
0xd71 DUP1
0xd72 ISZERO
0xd73 PUSH2 0xd82
0xd76 JUMPI
---
0xd70: JUMPDEST 
0xd72: V970 = ISZERO S0
0xd73: V971 = 0xd82
0xd76: JUMPI 0xd82 V970
---
Entry stack: [V10, 0x34e, V945, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x34e, V945, S0]

================================

Block 0xd77
[0xd77:0xd81]
---
Predecessors: [0xd70]
Successors: [0xd82]
---
0xd77 POP
0xd78 PUSH1 0x7
0xd7a SLOAD
0xd7b PUSH1 0x6
0xd7d SLOAD
0xd7e ADD
0xd7f TIMESTAMP
0xd80 GT
0xd81 ISZERO
---
0xd78: V972 = 0x7
0xd7a: V973 = S[0x7]
0xd7b: V974 = 0x6
0xd7d: V975 = S[0x6]
0xd7e: V976 = ADD V975 V973
0xd7f: V977 = TIMESTAMP
0xd80: V978 = GT V977 V976
0xd81: V979 = ISZERO V978
---
Entry stack: [V10, 0x34e, V945, S0]
Stack pops: 1
Stack additions: [V979]
Exit stack: [V10, 0x34e, V945, V979]

================================

Block 0xd82
[0xd82:0xd88]
---
Predecessors: [0xd70, 0xd77]
Successors: [0xd89, 0xd8d]
---
0xd82 JUMPDEST
0xd83 ISZERO
0xd84 ISZERO
0xd85 PUSH2 0xd8d
0xd88 JUMPI
---
0xd82: JUMPDEST 
0xd83: V980 = ISZERO S0
0xd84: V981 = ISZERO V980
0xd85: V982 = 0xd8d
0xd88: JUMPI 0xd8d V981
---
Entry stack: [V10, 0x34e, V945, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x34e, V945]

================================

Block 0xd89
[0xd89:0xd8c]
---
Predecessors: [0xd82]
Successors: []
---
0xd89 PUSH1 0x0
0xd8b DUP1
0xd8c REVERT
---
0xd89: V983 = 0x0
0xd8c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x34e, V945]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x34e, V945]

================================

Block 0xd8d
[0xd8d:0xdbd]
---
Predecessors: [0xd82]
Successors: [0xdbe, 0xed5]
---
0xd8d JUMPDEST
0xd8e PUSH1 0x1
0xd90 PUSH1 0x8
0xd92 PUSH1 0x0
0xd94 PUSH2 0x100
0xd97 EXP
0xd98 DUP2
0xd99 SLOAD
0xd9a DUP2
0xd9b PUSH1 0xff
0xd9d MUL
0xd9e NOT
0xd9f AND
0xda0 SWAP1
0xda1 DUP4
0xda2 ISZERO
0xda3 ISZERO
0xda4 MUL
0xda5 OR
0xda6 SWAP1
0xda7 SSTORE
0xda8 POP
0xda9 PUSH1 0x8
0xdab PUSH1 0x1
0xdad SWAP1
0xdae SLOAD
0xdaf SWAP1
0xdb0 PUSH2 0x100
0xdb3 EXP
0xdb4 SWAP1
0xdb5 DIV
0xdb6 PUSH1 0xff
0xdb8 AND
0xdb9 ISZERO
0xdba PUSH2 0xed5
0xdbd JUMPI
---
0xd8d: JUMPDEST 
0xd8e: V984 = 0x1
0xd90: V985 = 0x8
0xd92: V986 = 0x0
0xd94: V987 = 0x100
0xd97: V988 = EXP 0x100 0x0
0xd99: V989 = S[0x8]
0xd9b: V990 = 0xff
0xd9d: V991 = MUL 0xff 0x1
0xd9e: V992 = NOT 0xff
0xd9f: V993 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V989
0xda2: V994 = ISZERO 0x1
0xda3: V995 = ISZERO 0x0
0xda4: V996 = MUL 0x1 0x1
0xda5: V997 = OR 0x1 V993
0xda7: S[0x8] = V997
0xda9: V998 = 0x8
0xdab: V999 = 0x1
0xdae: V1000 = S[0x8]
0xdb0: V1001 = 0x100
0xdb3: V1002 = EXP 0x100 0x1
0xdb5: V1003 = DIV V1000 0x100
0xdb6: V1004 = 0xff
0xdb8: V1005 = AND 0xff V1003
0xdb9: V1006 = ISZERO V1005
0xdba: V1007 = 0xed5
0xdbd: JUMPI 0xed5 V1006
---
Entry stack: [V10, 0x34e, V945]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x34e, V945]

================================

Block 0xdbe
[0xdbe:0xdda]
---
Predecessors: [0xd8d]
Successors: [0xddb, 0xddc]
---
0xdbe PUSH1 0x3
0xdc0 PUSH1 0x8
0xdc2 PUSH1 0x4
0xdc4 PUSH2 0x100
0xdc7 EXP
0xdc8 DUP2
0xdc9 SLOAD
0xdca DUP2
0xdcb PUSH1 0xff
0xdcd MUL
0xdce NOT
0xdcf AND
0xdd0 SWAP1
0xdd1 DUP4
0xdd2 PUSH1 0x7
0xdd4 DUP2
0xdd5 GT
0xdd6 ISZERO
0xdd7 PUSH2 0xddc
0xdda JUMPI
---
0xdbe: V1008 = 0x3
0xdc0: V1009 = 0x8
0xdc2: V1010 = 0x4
0xdc4: V1011 = 0x100
0xdc7: V1012 = EXP 0x100 0x4
0xdc9: V1013 = S[0x8]
0xdcb: V1014 = 0xff
0xdcd: V1015 = MUL 0xff 0x100000000
0xdce: V1016 = NOT 0xff00000000
0xdcf: V1017 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V1013
0xdd2: V1018 = 0x7
0xdd5: V1019 = GT 0x3 0x7
0xdd6: V1020 = ISZERO 0x0
0xdd7: V1021 = 0xddc
0xdda: JUMPI 0xddc 0x1
---
Entry stack: [V10, 0x34e, V945]
Stack pops: 0
Stack additions: [0x3, 0x8, V1017, 0x100000000, 0x3]
Exit stack: [V10, 0x34e, V945, 0x3, 0x8, V1017, 0x100000000, 0x3]

================================

Block 0xddb
[0xddb:0xddb]
---
Predecessors: [0xdbe]
Successors: []
---
0xddb INVALID
---
0xddb: INVALID 
---
Entry stack: [V10, 0x34e, V945, 0x3, 0x8, V1017, 0x100000000, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x34e, V945, 0x3, 0x8, V1017, 0x100000000, 0x3]

================================

Block 0xddc
[0xddc:0xed4]
---
Predecessors: [0xdbe]
Successors: [0xf5d]
---
0xddc JUMPDEST
0xddd MUL
0xdde OR
0xddf SWAP1
0xde0 SSTORE
0xde1 POP
0xde2 PUSH32 0x5a7d51bcf476114dd5554bb88f264ee356c5471d56a4d1ba560cb9c1d58f0de2
0xe03 PUSH1 0x6
0xe05 SLOAD
0xe06 PUSH1 0x1
0xe08 PUSH1 0x0
0xe0a SWAP1
0xe0b SLOAD
0xe0c SWAP1
0xe0d PUSH2 0x100
0xe10 EXP
0xe11 SWAP1
0xe12 DIV
0xe13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe28 AND
0xe29 PUSH1 0x2
0xe2b PUSH1 0x0
0xe2d SWAP1
0xe2e SLOAD
0xe2f SWAP1
0xe30 PUSH2 0x100
0xe33 EXP
0xe34 SWAP1
0xe35 DIV
0xe36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4b AND
0xe4c PUSH1 0x3
0xe4e SLOAD
0xe4f PUSH1 0x40
0xe51 MLOAD
0xe52 DUP1
0xe53 DUP6
0xe54 DUP2
0xe55 MSTORE
0xe56 PUSH1 0x20
0xe58 ADD
0xe59 DUP5
0xe5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6f AND
0xe70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe85 AND
0xe86 DUP2
0xe87 MSTORE
0xe88 PUSH1 0x20
0xe8a ADD
0xe8b DUP4
0xe8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea1 AND
0xea2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb7 AND
0xeb8 DUP2
0xeb9 MSTORE
0xeba PUSH1 0x20
0xebc ADD
0xebd DUP3
0xebe DUP2
0xebf MSTORE
0xec0 PUSH1 0x20
0xec2 ADD
0xec3 SWAP5
0xec4 POP
0xec5 POP
0xec6 POP
0xec7 POP
0xec8 POP
0xec9 PUSH1 0x40
0xecb MLOAD
0xecc DUP1
0xecd SWAP2
0xece SUB
0xecf SWAP1
0xed0 LOG1
0xed1 PUSH2 0xf5d
0xed4 JUMP
---
0xddc: JUMPDEST 
0xddd: V1022 = MUL 0x3 0x100000000
0xdde: V1023 = OR 0x300000000 V1017
0xde0: S[0x8] = V1023
0xde2: V1024 = 0x5a7d51bcf476114dd5554bb88f264ee356c5471d56a4d1ba560cb9c1d58f0de2
0xe03: V1025 = 0x6
0xe05: V1026 = S[0x6]
0xe06: V1027 = 0x1
0xe08: V1028 = 0x0
0xe0b: V1029 = S[0x1]
0xe0d: V1030 = 0x100
0xe10: V1031 = EXP 0x100 0x0
0xe12: V1032 = DIV V1029 0x1
0xe13: V1033 = 0xffffffffffffffffffffffffffffffffffffffff
0xe28: V1034 = AND 0xffffffffffffffffffffffffffffffffffffffff V1032
0xe29: V1035 = 0x2
0xe2b: V1036 = 0x0
0xe2e: V1037 = S[0x2]
0xe30: V1038 = 0x100
0xe33: V1039 = EXP 0x100 0x0
0xe35: V1040 = DIV V1037 0x1
0xe36: V1041 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4b: V1042 = AND 0xffffffffffffffffffffffffffffffffffffffff V1040
0xe4c: V1043 = 0x3
0xe4e: V1044 = S[0x3]
0xe4f: V1045 = 0x40
0xe51: V1046 = M[0x40]
0xe55: M[V1046] = V1026
0xe56: V1047 = 0x20
0xe58: V1048 = ADD 0x20 V1046
0xe5a: V1049 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6f: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff V1034
0xe70: V1051 = 0xffffffffffffffffffffffffffffffffffffffff
0xe85: V1052 = AND 0xffffffffffffffffffffffffffffffffffffffff V1050
0xe87: M[V1048] = V1052
0xe88: V1053 = 0x20
0xe8a: V1054 = ADD 0x20 V1048
0xe8c: V1055 = 0xffffffffffffffffffffffffffffffffffffffff
0xea1: V1056 = AND 0xffffffffffffffffffffffffffffffffffffffff V1042
0xea2: V1057 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb7: V1058 = AND 0xffffffffffffffffffffffffffffffffffffffff V1056
0xeb9: M[V1054] = V1058
0xeba: V1059 = 0x20
0xebc: V1060 = ADD 0x20 V1054
0xebf: M[V1060] = V1044
0xec0: V1061 = 0x20
0xec2: V1062 = ADD 0x20 V1060
0xec9: V1063 = 0x40
0xecb: V1064 = M[0x40]
0xece: V1065 = SUB V1062 V1064
0xed0: LOG V1064 V1065 0x5a7d51bcf476114dd5554bb88f264ee356c5471d56a4d1ba560cb9c1d58f0de2
0xed1: V1066 = 0xf5d
0xed4: JUMP 0xf5d
---
Entry stack: [V10, 0x34e, V945, 0x3, 0x8, V1017, 0x100000000, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x34e, V945]

================================

Block 0xed5
[0xed5:0xef2]
---
Predecessors: [0xd8d]
Successors: [0xef3, 0xef4]
---
0xed5 JUMPDEST
0xed6 PUSH1 0x2
0xed8 PUSH1 0x8
0xeda PUSH1 0x4
0xedc PUSH2 0x100
0xedf EXP
0xee0 DUP2
0xee1 SLOAD
0xee2 DUP2
0xee3 PUSH1 0xff
0xee5 MUL
0xee6 NOT
0xee7 AND
0xee8 SWAP1
0xee9 DUP4
0xeea PUSH1 0x7
0xeec DUP2
0xeed GT
0xeee ISZERO
0xeef PUSH2 0xef4
0xef2 JUMPI
---
0xed5: JUMPDEST 
0xed6: V1067 = 0x2
0xed8: V1068 = 0x8
0xeda: V1069 = 0x4
0xedc: V1070 = 0x100
0xedf: V1071 = EXP 0x100 0x4
0xee1: V1072 = S[0x8]
0xee3: V1073 = 0xff
0xee5: V1074 = MUL 0xff 0x100000000
0xee6: V1075 = NOT 0xff00000000
0xee7: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V1072
0xeea: V1077 = 0x7
0xeed: V1078 = GT 0x2 0x7
0xeee: V1079 = ISZERO 0x0
0xeef: V1080 = 0xef4
0xef2: JUMPI 0xef4 0x1
---
Entry stack: [V10, 0x34e, V945]
Stack pops: 0
Stack additions: [0x2, 0x8, V1076, 0x100000000, 0x2]
Exit stack: [V10, 0x34e, V945, 0x2, 0x8, V1076, 0x100000000, 0x2]

================================

Block 0xef3
[0xef3:0xef3]
---
Predecessors: [0xed5]
Successors: []
---
0xef3 INVALID
---
0xef3: INVALID 
---
Entry stack: [V10, 0x34e, V945, 0x2, 0x8, V1076, 0x100000000, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x34e, V945, 0x2, 0x8, V1076, 0x100000000, 0x2]

================================

Block 0xef4
[0xef4:0xf5c]
---
Predecessors: [0xed5]
Successors: [0xf5d]
---
0xef4 JUMPDEST
0xef5 MUL
0xef6 OR
0xef7 SWAP1
0xef8 SSTORE
0xef9 POP
0xefa PUSH32 0x61ca4702b8ec471effd875f7123127db0474b0fde414c473f3f6487b2390b1a8
0xf1b CALLER
0xf1c PUSH1 0x40
0xf1e MLOAD
0xf1f DUP1
0xf20 DUP3
0xf21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf36 AND
0xf37 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4c AND
0xf4d DUP2
0xf4e MSTORE
0xf4f PUSH1 0x20
0xf51 ADD
0xf52 SWAP2
0xf53 POP
0xf54 POP
0xf55 PUSH1 0x40
0xf57 MLOAD
0xf58 DUP1
0xf59 SWAP2
0xf5a SUB
0xf5b SWAP1
0xf5c LOG1
---
0xef4: JUMPDEST 
0xef5: V1081 = MUL 0x2 0x100000000
0xef6: V1082 = OR 0x200000000 V1076
0xef8: S[0x8] = V1082
0xefa: V1083 = 0x61ca4702b8ec471effd875f7123127db0474b0fde414c473f3f6487b2390b1a8
0xf1b: V1084 = CALLER
0xf1c: V1085 = 0x40
0xf1e: V1086 = M[0x40]
0xf21: V1087 = 0xffffffffffffffffffffffffffffffffffffffff
0xf36: V1088 = AND 0xffffffffffffffffffffffffffffffffffffffff V1084
0xf37: V1089 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4c: V1090 = AND 0xffffffffffffffffffffffffffffffffffffffff V1088
0xf4e: M[V1086] = V1090
0xf4f: V1091 = 0x20
0xf51: V1092 = ADD 0x20 V1086
0xf55: V1093 = 0x40
0xf57: V1094 = M[0x40]
0xf5a: V1095 = SUB V1092 V1094
0xf5c: LOG V1094 V1095 0x61ca4702b8ec471effd875f7123127db0474b0fde414c473f3f6487b2390b1a8
---
Entry stack: [V10, 0x34e, V945, 0x2, 0x8, V1076, 0x100000000, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x34e, V945]

================================

Block 0xf5d
[0xf5d:0xf5f]
---
Predecessors: [0xddc, 0xef4]
Successors: [0x34e]
---
0xf5d JUMPDEST
0xf5e POP
0xf5f JUMP
---
0xf5d: JUMPDEST 
0xf5f: JUMP 0x34e
---
Entry stack: [V10, 0x34e, V945]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xf60
[0xf60:0xf72]
---
Predecessors: [0x35b]
Successors: [0x363]
---
0xf60 JUMPDEST
0xf61 PUSH1 0x8
0xf63 PUSH1 0x4
0xf65 SWAP1
0xf66 SLOAD
0xf67 SWAP1
0xf68 PUSH2 0x100
0xf6b EXP
0xf6c SWAP1
0xf6d DIV
0xf6e PUSH1 0xff
0xf70 AND
0xf71 DUP2
0xf72 JUMP
---
0xf60: JUMPDEST 
0xf61: V1096 = 0x8
0xf63: V1097 = 0x4
0xf66: V1098 = S[0x8]
0xf68: V1099 = 0x100
0xf6b: V1100 = EXP 0x100 0x4
0xf6d: V1101 = DIV V1098 0x100000000
0xf6e: V1102 = 0xff
0xf70: V1103 = AND 0xff V1101
0xf72: JUMP 0x363
---
Entry stack: [V10, 0x363]
Stack pops: 1
Stack additions: [S0, V1103]
Exit stack: [V10, 0x363, V1103]

================================

Block 0xf73
[0xf73:0xf86]
---
Predecessors: [0x392]
Successors: [0xf87, 0xf99]
---
0xf73 JUMPDEST
0xf74 PUSH1 0x0
0xf76 DUP1
0xf77 CALLER
0xf78 PUSH1 0x7
0xf7a SLOAD
0xf7b PUSH1 0x6
0xf7d SLOAD
0xf7e ADD
0xf7f TIMESTAMP
0xf80 GT
0xf81 DUP1
0xf82 ISZERO
0xf83 PUSH2 0xf99
0xf86 JUMPI
---
0xf73: JUMPDEST 
0xf74: V1104 = 0x0
0xf77: V1105 = CALLER
0xf78: V1106 = 0x7
0xf7a: V1107 = S[0x7]
0xf7b: V1108 = 0x6
0xf7d: V1109 = S[0x6]
0xf7e: V1110 = ADD V1109 V1107
0xf7f: V1111 = TIMESTAMP
0xf80: V1112 = GT V1111 V1110
0xf82: V1113 = ISZERO V1112
0xf83: V1114 = 0xf99
0xf86: JUMPI 0xf99 V1113
---
Entry stack: [V10, 0x39a]
Stack pops: 0
Stack additions: [0x0, 0x0, V1105, V1112]
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105, V1112]

================================

Block 0xf87
[0xf87:0xf98]
---
Predecessors: [0xf73]
Successors: [0xf99]
---
0xf87 POP
0xf88 PUSH1 0x8
0xf8a PUSH1 0x2
0xf8c SWAP1
0xf8d SLOAD
0xf8e SWAP1
0xf8f PUSH2 0x100
0xf92 EXP
0xf93 SWAP1
0xf94 DIV
0xf95 PUSH1 0xff
0xf97 AND
0xf98 ISZERO
---
0xf88: V1115 = 0x8
0xf8a: V1116 = 0x2
0xf8d: V1117 = S[0x8]
0xf8f: V1118 = 0x100
0xf92: V1119 = EXP 0x100 0x2
0xf94: V1120 = DIV V1117 0x10000
0xf95: V1121 = 0xff
0xf97: V1122 = AND 0xff V1120
0xf98: V1123 = ISZERO V1122
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105, V1112]
Stack pops: 1
Stack additions: [V1123]
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105, V1123]

================================

Block 0xf99
[0xf99:0xf9f]
---
Predecessors: [0xf73, 0xf87]
Successors: [0xfa0, 0xff2]
---
0xf99 JUMPDEST
0xf9a DUP1
0xf9b ISZERO
0xf9c PUSH2 0xff2
0xf9f JUMPI
---
0xf99: JUMPDEST 
0xf9b: V1124 = ISZERO S0
0xf9c: V1125 = 0xff2
0xf9f: JUMPI 0xff2 V1124
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105, S0]

================================

Block 0xfa0
[0xfa0:0xff1]
---
Predecessors: [0xf99]
Successors: [0xff2]
---
0xfa0 POP
0xfa1 PUSH1 0x1
0xfa3 PUSH1 0x0
0xfa5 SWAP1
0xfa6 SLOAD
0xfa7 SWAP1
0xfa8 PUSH2 0x100
0xfab EXP
0xfac SWAP1
0xfad DIV
0xfae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc3 AND
0xfc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd9 AND
0xfda DUP2
0xfdb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff0 AND
0xff1 EQ
---
0xfa1: V1126 = 0x1
0xfa3: V1127 = 0x0
0xfa6: V1128 = S[0x1]
0xfa8: V1129 = 0x100
0xfab: V1130 = EXP 0x100 0x0
0xfad: V1131 = DIV V1128 0x1
0xfae: V1132 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc3: V1133 = AND 0xffffffffffffffffffffffffffffffffffffffff V1131
0xfc4: V1134 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd9: V1135 = AND 0xffffffffffffffffffffffffffffffffffffffff V1133
0xfdb: V1136 = 0xffffffffffffffffffffffffffffffffffffffff
0xff0: V1137 = AND 0xffffffffffffffffffffffffffffffffffffffff V1105
0xff1: V1138 = EQ V1137 V1135
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105, S0]
Stack pops: 2
Stack additions: [S1, V1138]
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105, V1138]

================================

Block 0xff2
[0xff2:0xff8]
---
Predecessors: [0xf99, 0xfa0]
Successors: [0xff9, 0x1023]
---
0xff2 JUMPDEST
0xff3 DUP1
0xff4 ISZERO
0xff5 PUSH2 0x1023
0xff8 JUMPI
---
0xff2: JUMPDEST 
0xff4: V1139 = ISZERO S0
0xff5: V1140 = 0x1023
0xff8: JUMPI 0x1023 V1139
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105, S0]

================================

Block 0xff9
[0xff9:0x100f]
---
Predecessors: [0xff2]
Successors: [0x1010, 0x1021]
---
0xff9 POP
0xffa PUSH1 0x8
0xffc PUSH1 0x0
0xffe SWAP1
0xfff SLOAD
0x1000 SWAP1
0x1001 PUSH2 0x100
0x1004 EXP
0x1005 SWAP1
0x1006 DIV
0x1007 PUSH1 0xff
0x1009 AND
0x100a DUP1
0x100b ISZERO
0x100c PUSH2 0x1021
0x100f JUMPI
---
0xffa: V1141 = 0x8
0xffc: V1142 = 0x0
0xfff: V1143 = S[0x8]
0x1001: V1144 = 0x100
0x1004: V1145 = EXP 0x100 0x0
0x1006: V1146 = DIV V1143 0x1
0x1007: V1147 = 0xff
0x1009: V1148 = AND 0xff V1146
0x100b: V1149 = ISZERO V1148
0x100c: V1150 = 0x1021
0x100f: JUMPI 0x1021 V1149
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105, S0]
Stack pops: 1
Stack additions: [V1148]
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105, V1148]

================================

Block 0x1010
[0x1010:0x1020]
---
Predecessors: [0xff9]
Successors: [0x1021]
---
0x1010 POP
0x1011 PUSH1 0x8
0x1013 PUSH1 0x1
0x1015 SWAP1
0x1016 SLOAD
0x1017 SWAP1
0x1018 PUSH2 0x100
0x101b EXP
0x101c SWAP1
0x101d DIV
0x101e PUSH1 0xff
0x1020 AND
---
0x1011: V1151 = 0x8
0x1013: V1152 = 0x1
0x1016: V1153 = S[0x8]
0x1018: V1154 = 0x100
0x101b: V1155 = EXP 0x100 0x1
0x101d: V1156 = DIV V1153 0x100
0x101e: V1157 = 0xff
0x1020: V1158 = AND 0xff V1156
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105, V1148]
Stack pops: 1
Stack additions: [V1158]
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105, V1158]

================================

Block 0x1021
[0x1021:0x1022]
---
Predecessors: [0xff9, 0x1010]
Successors: [0x1023]
---
0x1021 JUMPDEST
0x1022 ISZERO
---
0x1021: JUMPDEST 
0x1022: V1159 = ISZERO S0
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105, S0]
Stack pops: 1
Stack additions: [V1159]
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105, V1159]

================================

Block 0x1023
[0x1023:0x1029]
---
Predecessors: [0xff2, 0x1021]
Successors: [0x102a, 0x102e]
---
0x1023 JUMPDEST
0x1024 ISZERO
0x1025 ISZERO
0x1026 PUSH2 0x102e
0x1029 JUMPI
---
0x1023: JUMPDEST 
0x1024: V1160 = ISZERO S0
0x1025: V1161 = ISZERO V1160
0x1026: V1162 = 0x102e
0x1029: JUMPI 0x102e V1161
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105]

================================

Block 0x102a
[0x102a:0x102d]
---
Predecessors: [0x1023]
Successors: []
---
0x102a PUSH1 0x0
0x102c DUP1
0x102d REVERT
---
0x102a: V1163 = 0x0
0x102d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x39a, 0x0, 0x0, V1105]

================================

Block 0x102e
[0x102e:0x1040]
---
Predecessors: [0x1023]
Successors: [0x1041, 0x10bb]
---
0x102e JUMPDEST
0x102f PUSH1 0x4
0x1031 SLOAD
0x1032 PUSH1 0x3
0x1034 SLOAD
0x1035 SUB
0x1036 SWAP2
0x1037 POP
0x1038 PUSH1 0x0
0x103a DUP3
0x103b GT
0x103c ISZERO
0x103d PUSH2 0x10bb
0x1040 JUMPI
---
0x102e: JUMPDEST 
0x102f: V1164 = 0x4
0x1031: V1165 = S[0x4]
0x1032: V1166 = 0x3
0x1034: V1167 = S[0x3]
0x1035: V1168 = SUB V1167 V1165
0x1038: V1169 = 0x0
0x103b: V1170 = GT V1168 0x0
0x103c: V1171 = ISZERO V1170
0x103d: V1172 = 0x10bb
0x1040: JUMPI 0x10bb V1171
---
Entry stack: [V10, 0x39a, 0x0, 0x0, V1105]
Stack pops: 2
Stack additions: [V1168, S0]
Exit stack: [V10, 0x39a, 0x0, V1168, V1105]

================================

Block 0x1041
[0x1041:0x1096]
---
Predecessors: [0x102e]
Successors: [0x1097, 0x10ba]
---
0x1041 PUSH1 0x1
0x1043 PUSH1 0x8
0x1045 PUSH1 0x2
0x1047 PUSH2 0x100
0x104a EXP
0x104b DUP2
0x104c SLOAD
0x104d DUP2
0x104e PUSH1 0xff
0x1050 MUL
0x1051 NOT
0x1052 AND
0x1053 SWAP1
0x1054 DUP4
0x1055 ISZERO
0x1056 ISZERO
0x1057 MUL
0x1058 OR
0x1059 SWAP1
0x105a SSTORE
0x105b POP
0x105c CALLER
0x105d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1072 AND
0x1073 PUSH2 0x8fc
0x1076 DUP4
0x1077 SWAP1
0x1078 DUP2
0x1079 ISZERO
0x107a MUL
0x107b SWAP1
0x107c PUSH1 0x40
0x107e MLOAD
0x107f PUSH1 0x0
0x1081 PUSH1 0x40
0x1083 MLOAD
0x1084 DUP1
0x1085 DUP4
0x1086 SUB
0x1087 DUP2
0x1088 DUP6
0x1089 DUP9
0x108a DUP9
0x108b CALL
0x108c SWAP4
0x108d POP
0x108e POP
0x108f POP
0x1090 POP
0x1091 ISZERO
0x1092 ISZERO
0x1093 PUSH2 0x10ba
0x1096 JUMPI
---
0x1041: V1173 = 0x1
0x1043: V1174 = 0x8
0x1045: V1175 = 0x2
0x1047: V1176 = 0x100
0x104a: V1177 = EXP 0x100 0x2
0x104c: V1178 = S[0x8]
0x104e: V1179 = 0xff
0x1050: V1180 = MUL 0xff 0x10000
0x1051: V1181 = NOT 0xff0000
0x1052: V1182 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1178
0x1055: V1183 = ISZERO 0x1
0x1056: V1184 = ISZERO 0x0
0x1057: V1185 = MUL 0x1 0x10000
0x1058: V1186 = OR 0x10000 V1182
0x105a: S[0x8] = V1186
0x105c: V1187 = CALLER
0x105d: V1188 = 0xffffffffffffffffffffffffffffffffffffffff
0x1072: V1189 = AND 0xffffffffffffffffffffffffffffffffffffffff V1187
0x1073: V1190 = 0x8fc
0x1079: V1191 = ISZERO V1168
0x107a: V1192 = MUL V1191 0x8fc
0x107c: V1193 = 0x40
0x107e: V1194 = M[0x40]
0x107f: V1195 = 0x0
0x1081: V1196 = 0x40
0x1083: V1197 = M[0x40]
0x1086: V1198 = SUB V1194 V1197
0x108b: V1199 = CALL V1192 V1189 V1168 V1197 V1198 V1197 0x0
0x1091: V1200 = ISZERO V1199
0x1092: V1201 = ISZERO V1200
0x1093: V1202 = 0x10ba
0x1096: JUMPI 0x10ba V1201
---
Entry stack: [V10, 0x39a, 0x0, V1168, V1105]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x39a, 0x0, V1168, V1105]

================================

Block 0x1097
[0x1097:0x10b9]
---
Predecessors: [0x1041]
Successors: [0x1173]
---
0x1097 PUSH1 0x0
0x1099 PUSH1 0x8
0x109b PUSH1 0x2
0x109d PUSH2 0x100
0x10a0 EXP
0x10a1 DUP2
0x10a2 SLOAD
0x10a3 DUP2
0x10a4 PUSH1 0xff
0x10a6 MUL
0x10a7 NOT
0x10a8 AND
0x10a9 SWAP1
0x10aa DUP4
0x10ab ISZERO
0x10ac ISZERO
0x10ad MUL
0x10ae OR
0x10af SWAP1
0x10b0 SSTORE
0x10b1 POP
0x10b2 PUSH1 0x0
0x10b4 SWAP3
0x10b5 POP
0x10b6 PUSH2 0x1173
0x10b9 JUMP
---
0x1097: V1203 = 0x0
0x1099: V1204 = 0x8
0x109b: V1205 = 0x2
0x109d: V1206 = 0x100
0x10a0: V1207 = EXP 0x100 0x2
0x10a2: V1208 = S[0x8]
0x10a4: V1209 = 0xff
0x10a6: V1210 = MUL 0xff 0x10000
0x10a7: V1211 = NOT 0xff0000
0x10a8: V1212 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1208
0x10ab: V1213 = ISZERO 0x0
0x10ac: V1214 = ISZERO 0x1
0x10ad: V1215 = MUL 0x0 0x10000
0x10ae: V1216 = OR 0x0 V1212
0x10b0: S[0x8] = V1216
0x10b2: V1217 = 0x0
0x10b6: V1218 = 0x1173
0x10b9: JUMP 0x1173
---
Entry stack: [V10, 0x39a, 0x0, V1168, V1105]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V10, 0x39a, 0x0, V1168, V1105]

================================

Block 0x10ba
[0x10ba:0x10ba]
---
Predecessors: [0x1041]
Successors: [0x10bb]
---
0x10ba JUMPDEST
---
0x10ba: JUMPDEST 
---
Entry stack: [V10, 0x39a, 0x0, V1168, V1105]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x39a, 0x0, V1168, V1105]

================================

Block 0x10bb
[0x10bb:0x10d8]
---
Predecessors: [0x102e, 0x10ba]
Successors: [0x10d9, 0x10da]
---
0x10bb JUMPDEST
0x10bc PUSH1 0x6
0x10be PUSH1 0x8
0x10c0 PUSH1 0x4
0x10c2 PUSH2 0x100
0x10c5 EXP
0x10c6 DUP2
0x10c7 SLOAD
0x10c8 DUP2
0x10c9 PUSH1 0xff
0x10cb MUL
0x10cc NOT
0x10cd AND
0x10ce SWAP1
0x10cf DUP4
0x10d0 PUSH1 0x7
0x10d2 DUP2
0x10d3 GT
0x10d4 ISZERO
0x10d5 PUSH2 0x10da
0x10d8 JUMPI
---
0x10bb: JUMPDEST 
0x10bc: V1219 = 0x6
0x10be: V1220 = 0x8
0x10c0: V1221 = 0x4
0x10c2: V1222 = 0x100
0x10c5: V1223 = EXP 0x100 0x4
0x10c7: V1224 = S[0x8]
0x10c9: V1225 = 0xff
0x10cb: V1226 = MUL 0xff 0x100000000
0x10cc: V1227 = NOT 0xff00000000
0x10cd: V1228 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V1224
0x10d0: V1229 = 0x7
0x10d3: V1230 = GT 0x6 0x7
0x10d4: V1231 = ISZERO 0x0
0x10d5: V1232 = 0x10da
0x10d8: JUMPI 0x10da 0x1
---
Entry stack: [V10, 0x39a, 0x0, V1168, V1105]
Stack pops: 0
Stack additions: [0x6, 0x8, V1228, 0x100000000, 0x6]
Exit stack: [V10, 0x39a, 0x0, V1168, V1105, 0x6, 0x8, V1228, 0x100000000, 0x6]

================================

Block 0x10d9
[0x10d9:0x10d9]
---
Predecessors: [0x10bb]
Successors: []
---
0x10d9 INVALID
---
0x10d9: INVALID 
---
Entry stack: [V10, 0x39a, 0x0, V1168, V1105, 0x6, 0x8, V1228, 0x100000000, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x39a, 0x0, V1168, V1105, 0x6, 0x8, V1228, 0x100000000, 0x6]

================================

Block 0x10da
[0x10da:0x1167]
---
Predecessors: [0x10bb]
Successors: [0x1168, 0x1169]
---
0x10da JUMPDEST
0x10db MUL
0x10dc OR
0x10dd SWAP1
0x10de SSTORE
0x10df POP
0x10e0 PUSH32 0x1b14650ec71042cf8c66da04762148a77ee0a9222d8361b80e48fc50881e445c
0x1101 CALLER
0x1102 DUP4
0x1103 PUSH1 0x40
0x1105 MLOAD
0x1106 DUP1
0x1107 DUP4
0x1108 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111d AND
0x111e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1133 AND
0x1134 DUP2
0x1135 MSTORE
0x1136 PUSH1 0x20
0x1138 ADD
0x1139 DUP3
0x113a DUP2
0x113b MSTORE
0x113c PUSH1 0x20
0x113e ADD
0x113f SWAP3
0x1140 POP
0x1141 POP
0x1142 POP
0x1143 PUSH1 0x40
0x1145 MLOAD
0x1146 DUP1
0x1147 SWAP2
0x1148 SUB
0x1149 SWAP1
0x114a LOG1
0x114b PUSH1 0x4
0x114d PUSH1 0x8
0x114f PUSH1 0x4
0x1151 PUSH2 0x100
0x1154 EXP
0x1155 DUP2
0x1156 SLOAD
0x1157 DUP2
0x1158 PUSH1 0xff
0x115a MUL
0x115b NOT
0x115c AND
0x115d SWAP1
0x115e DUP4
0x115f PUSH1 0x7
0x1161 DUP2
0x1162 GT
0x1163 ISZERO
0x1164 PUSH2 0x1169
0x1167 JUMPI
---
0x10da: JUMPDEST 
0x10db: V1233 = MUL 0x6 0x100000000
0x10dc: V1234 = OR 0x600000000 V1228
0x10de: S[0x8] = V1234
0x10e0: V1235 = 0x1b14650ec71042cf8c66da04762148a77ee0a9222d8361b80e48fc50881e445c
0x1101: V1236 = CALLER
0x1103: V1237 = 0x40
0x1105: V1238 = M[0x40]
0x1108: V1239 = 0xffffffffffffffffffffffffffffffffffffffff
0x111d: V1240 = AND 0xffffffffffffffffffffffffffffffffffffffff V1236
0x111e: V1241 = 0xffffffffffffffffffffffffffffffffffffffff
0x1133: V1242 = AND 0xffffffffffffffffffffffffffffffffffffffff V1240
0x1135: M[V1238] = V1242
0x1136: V1243 = 0x20
0x1138: V1244 = ADD 0x20 V1238
0x113b: M[V1244] = V1168
0x113c: V1245 = 0x20
0x113e: V1246 = ADD 0x20 V1244
0x1143: V1247 = 0x40
0x1145: V1248 = M[0x40]
0x1148: V1249 = SUB V1246 V1248
0x114a: LOG V1248 V1249 0x1b14650ec71042cf8c66da04762148a77ee0a9222d8361b80e48fc50881e445c
0x114b: V1250 = 0x4
0x114d: V1251 = 0x8
0x114f: V1252 = 0x4
0x1151: V1253 = 0x100
0x1154: V1254 = EXP 0x100 0x4
0x1156: V1255 = S[0x8]
0x1158: V1256 = 0xff
0x115a: V1257 = MUL 0xff 0x100000000
0x115b: V1258 = NOT 0xff00000000
0x115c: V1259 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V1255
0x115f: V1260 = 0x7
0x1162: V1261 = GT 0x4 0x7
0x1163: V1262 = ISZERO 0x0
0x1164: V1263 = 0x1169
0x1167: JUMPI 0x1169 0x1
---
Entry stack: [V10, 0x39a, 0x0, V1168, V1105, 0x6, 0x8, V1228, 0x100000000, 0x6]
Stack pops: 7
Stack additions: [S6, S5, 0x4, 0x8, V1259, 0x100000000, 0x4]
Exit stack: [V10, 0x39a, 0x0, V1168, V1105, 0x4, 0x8, V1259, 0x100000000, 0x4]

================================

Block 0x1168
[0x1168:0x1168]
---
Predecessors: [0x10da]
Successors: []
---
0x1168 INVALID
---
0x1168: INVALID 
---
Entry stack: [V10, 0x39a, 0x0, V1168, V1105, 0x4, 0x8, V1259, 0x100000000, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x39a, 0x0, V1168, V1105, 0x4, 0x8, V1259, 0x100000000, 0x4]

================================

Block 0x1169
[0x1169:0x1172]
---
Predecessors: [0x10da]
Successors: [0x1173]
---
0x1169 JUMPDEST
0x116a MUL
0x116b OR
0x116c SWAP1
0x116d SSTORE
0x116e POP
0x116f PUSH1 0x1
0x1171 SWAP3
0x1172 POP
---
0x1169: JUMPDEST 
0x116a: V1264 = MUL 0x4 0x100000000
0x116b: V1265 = OR 0x400000000 V1259
0x116d: S[0x8] = V1265
0x116f: V1266 = 0x1
---
Entry stack: [V10, 0x39a, 0x0, V1168, V1105, 0x4, 0x8, V1259, 0x100000000, 0x4]
Stack pops: 8
Stack additions: [0x1, S6, S5]
Exit stack: [V10, 0x39a, 0x1, V1168, V1105]

================================

Block 0x1173
[0x1173:0x1177]
---
Predecessors: [0x1097, 0x1169]
Successors: [0x39a]
---
0x1173 JUMPDEST
0x1174 POP
0x1175 POP
0x1176 SWAP1
0x1177 JUMP
---
0x1173: JUMPDEST 
0x1177: JUMP 0x39a
---
Entry stack: [V10, 0x39a, {0x0, 0x1}, V1168, V1105]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x1178
[0x1178:0x117d]
---
Predecessors: [0x3bf]
Successors: [0x3c7]
---
0x1178 JUMPDEST
0x1179 PUSH1 0x5
0x117b SLOAD
0x117c DUP2
0x117d JUMP
---
0x1178: JUMPDEST 
0x1179: V1267 = 0x5
0x117b: V1268 = S[0x5]
0x117d: JUMP 0x3c7
---
Entry stack: [V10, 0x3c7]
Stack pops: 1
Stack additions: [S0, V1268]
Exit stack: [V10, 0x3c7, V1268]

================================

Block 0x117e
[0x117e:0x11a3]
---
Predecessors: [0x3e8]
Successors: [0x3f0]
---
0x117e JUMPDEST
0x117f PUSH1 0x2
0x1181 PUSH1 0x0
0x1183 SWAP1
0x1184 SLOAD
0x1185 SWAP1
0x1186 PUSH2 0x100
0x1189 EXP
0x118a SWAP1
0x118b DIV
0x118c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a1 AND
0x11a2 DUP2
0x11a3 JUMP
---
0x117e: JUMPDEST 
0x117f: V1269 = 0x2
0x1181: V1270 = 0x0
0x1184: V1271 = S[0x2]
0x1186: V1272 = 0x100
0x1189: V1273 = EXP 0x100 0x0
0x118b: V1274 = DIV V1271 0x1
0x118c: V1275 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a1: V1276 = AND 0xffffffffffffffffffffffffffffffffffffffff V1274
0x11a3: JUMP 0x3f0
---
Entry stack: [V10, 0x3f0]
Stack pops: 1
Stack additions: [S0, V1276]
Exit stack: [V10, 0x3f0, V1276]

================================

Block 0x11a4
[0x11a4:0x11a9]
---
Predecessors: [0x43d]
Successors: [0x445]
---
0x11a4 JUMPDEST
0x11a5 PUSH1 0x7
0x11a7 SLOAD
0x11a8 DUP2
0x11a9 JUMP
---
0x11a4: JUMPDEST 
0x11a5: V1277 = 0x7
0x11a7: V1278 = S[0x7]
0x11a9: JUMP 0x445
---
Entry stack: [V10, 0x445]
Stack pops: 1
Stack additions: [S0, V1278]
Exit stack: [V10, 0x445, V1278]

================================

Block 0x11aa
[0x11aa:0x11bc]
---
Predecessors: [0x466]
Successors: [0x46e]
---
0x11aa JUMPDEST
0x11ab PUSH1 0x8
0x11ad PUSH1 0x1
0x11af SWAP1
0x11b0 SLOAD
0x11b1 SWAP1
0x11b2 PUSH2 0x100
0x11b5 EXP
0x11b6 SWAP1
0x11b7 DIV
0x11b8 PUSH1 0xff
0x11ba AND
0x11bb DUP2
0x11bc JUMP
---
0x11aa: JUMPDEST 
0x11ab: V1279 = 0x8
0x11ad: V1280 = 0x1
0x11b0: V1281 = S[0x8]
0x11b2: V1282 = 0x100
0x11b5: V1283 = EXP 0x100 0x1
0x11b7: V1284 = DIV V1281 0x100
0x11b8: V1285 = 0xff
0x11ba: V1286 = AND 0xff V1284
0x11bc: JUMP 0x46e
---
Entry stack: [V10, 0x46e]
Stack pops: 1
Stack additions: [S0, V1286]
Exit stack: [V10, 0x46e, V1286]

================================

Block 0x11bd
[0x11bd:0x11e1]
---
Predecessors: [0x493]
Successors: [0x49b]
---
0x11bd JUMPDEST
0x11be PUSH1 0x0
0x11c0 DUP1
0x11c1 SWAP1
0x11c2 SLOAD
0x11c3 SWAP1
0x11c4 PUSH2 0x100
0x11c7 EXP
0x11c8 SWAP1
0x11c9 DIV
0x11ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11df AND
0x11e0 DUP2
0x11e1 JUMP
---
0x11bd: JUMPDEST 
0x11be: V1287 = 0x0
0x11c2: V1288 = S[0x0]
0x11c4: V1289 = 0x100
0x11c7: V1290 = EXP 0x100 0x0
0x11c9: V1291 = DIV V1288 0x1
0x11ca: V1292 = 0xffffffffffffffffffffffffffffffffffffffff
0x11df: V1293 = AND 0xffffffffffffffffffffffffffffffffffffffff V1291
0x11e1: JUMP 0x49b
---
Entry stack: [V10, 0x49b]
Stack pops: 1
Stack additions: [S0, V1293]
Exit stack: [V10, 0x49b, V1293]

================================

Block 0x11e2
[0x11e2:0x11e7]
---
Predecessors: [0x4e8]
Successors: [0x4f0]
---
0x11e2 JUMPDEST
0x11e3 PUSH1 0x3
0x11e5 SLOAD
0x11e6 DUP2
0x11e7 JUMP
---
0x11e2: JUMPDEST 
0x11e3: V1294 = 0x3
0x11e5: V1295 = S[0x3]
0x11e7: JUMP 0x4f0
---
Entry stack: [V10, 0x4f0]
Stack pops: 1
Stack additions: [S0, V1295]
Exit stack: [V10, 0x4f0, V1295]

================================

Block 0x11e8
[0x11e8:0x11f4]
---
Predecessors: [0x622]
Successors: [0x11f5, 0x11f6]
---
0x11e8 JUMPDEST
0x11e9 PUSH1 0x0
0x11eb DUP1
0x11ec DUP3
0x11ed DUP5
0x11ee DUP2
0x11ef ISZERO
0x11f0 ISZERO
0x11f1 PUSH2 0x11f6
0x11f4 JUMPI
---
0x11e8: JUMPDEST 
0x11e9: V1296 = 0x0
0x11ef: V1297 = ISZERO 0xfa0
0x11f0: V1298 = ISZERO 0x0
0x11f1: V1299 = 0x11f6
0x11f4: JUMPI 0x11f6 0x1
---
Entry stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389, 0x62d, V448, 0xfa0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389, 0x62d, V448, 0xfa0, 0x0, 0x0, 0xfa0, V448]

================================

Block 0x11f5
[0x11f5:0x11f5]
---
Predecessors: [0x11e8]
Successors: []
---
0x11f5 INVALID
---
0x11f5: INVALID 
---
Entry stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389, 0x62d, V448, 0xfa0, 0x0, 0x0, 0xfa0, V448]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389, 0x62d, V448, 0xfa0, 0x0, 0x0, 0xfa0, V448]

================================

Block 0x11f6
[0x11f6:0x1202]
---
Predecessors: [0x11e8]
Successors: [0x62d]
---
0x11f6 JUMPDEST
0x11f7 DIV
0x11f8 SWAP1
0x11f9 POP
0x11fa DUP1
0x11fb SWAP2
0x11fc POP
0x11fd POP
0x11fe SWAP3
0x11ff SWAP2
0x1200 POP
0x1201 POP
0x1202 JUMP
---
0x11f6: JUMPDEST 
0x11f7: V1300 = DIV V448 0xfa0
0x1202: JUMP 0x62d
---
Entry stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389, 0x62d, V448, 0xfa0, 0x0, 0x0, 0xfa0, V448]
Stack pops: 7
Stack additions: [V1300]
Exit stack: [V10, 0x1aa, 0x0, V448, 0x0, 0xde0b6b3a7640000, V389, V1300]

================================

Block 0x1203
[0x1203:0x122e]
---
Predecessors: []
Successors: []
---
0x1203 STOP
0x1204 LOG1
0x1205 PUSH6 0x627a7a723058
0x120c SHA3
0x120d MISSING 0xae
0x120e DUP8
0x120f SUB
0x1210 PUSH5 0x579a495d82
0x1216 LT
0x1217 PUSH20 0xc748c16f0439f641bc573a3ffe065748f432b994
0x122c MISSING 0xc7
0x122d STOP
0x122e MISSING 0x29
---
0x1203: STOP 
0x1204: LOG S0 S1 S2
0x1205: V1301 = 0x627a7a723058
0x120c: V1302 = SHA3 0x627a7a723058 S3
0x120d: MISSING 0xae
0x120f: V1303 = SUB S7 S0
0x1210: V1304 = 0x579a495d82
0x1216: V1305 = LT 0x579a495d82 V1303
0x1217: V1306 = 0xc748c16f0439f641bc573a3ffe065748f432b994
0x122c: MISSING 0xc7
0x122d: STOP 
0x122e: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1302, 0xc748c16f0439f641bc573a3ffe065748f432b994, V1305, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x1c488683
Entry block: 0x115
Exit block: 0x128
Body: 0x115, 0x11c, 0x120, 0x128, 0x506

Function 1:
Public function signature: 0x1f6b1d22
Entry block: 0x142
Exit block: 0x155
Body: 0x142, 0x149, 0x14d, 0x155, 0x519

Function 2:
Public function signature: 0x217145e0
Entry block: 0x197
Exit block: 0x1aa
Body: 0x197, 0x19e, 0x1a2, 0x1aa, 0x53f, 0x552, 0x553, 0x56d, 0x56e, 0x576, 0x5c8, 0x5cf, 0x5e0, 0x5e7, 0x5f8, 0x5ff, 0x603, 0x622, 0x62d, 0x630, 0x63a, 0x696, 0x69a, 0x6a0, 0x6aa, 0x6e5, 0x6e9, 0x6ea, 0x708, 0x709, 0x11e8, 0x11f5, 0x11f6

Function 3:
Public function signature: 0x22e63b34
Entry block: 0x1c4
Exit block: 0x1d7
Body: 0x1c4, 0x1cb, 0x1cf, 0x1d7, 0x77c

Function 4:
Public function signature: 0x27d795d7
Entry block: 0x1f1
Exit block: 0x204
Body: 0x1f1, 0x1f8, 0x1fc, 0x204, 0x78f

Function 5:
Public function signature: 0x28a14b04
Entry block: 0x21a
Exit block: 0x988
Body: 0x21a, 0x221, 0x225, 0x22d, 0x795, 0x7a8, 0x7af, 0x7b6, 0x7c8, 0x7cf, 0x821, 0x828, 0x83f, 0x850, 0x852, 0x859, 0x85d, 0x8b6, 0x8d9, 0x8f7, 0x8f8, 0x988, 0x989, 0x993

Function 6:
Public function signature: 0x2dbc6d55
Entry block: 0x247
Exit block: 0x25a
Body: 0x247, 0x24e, 0x252, 0x25a, 0x997

Function 7:
Public function signature: 0x49d8d955
Entry block: 0x270
Exit block: 0x278
Body: 0x270, 0x278, 0x99d, 0x9ad, 0x9ae, 0x9b7, 0x9bb, 0x9cc, 0xa1e, 0xa25, 0xa2c, 0xa33, 0xa37

Function 8:
Public function signature: 0x52949a1b
Entry block: 0x27a
Exit block: 0x28d
Body: 0x27a, 0x281, 0x285, 0x28d, 0xa42

Function 9:
Public function signature: 0x72a054d1
Entry block: 0x2a7
Exit block: 0x2ca
Body: 0x2a7, 0x2ae, 0x2b2, 0x2ba, 0x2c9, 0x2ca, 0xa55

Function 10:
Public function signature: 0x7d21c191
Entry block: 0x326
Exit block: 0x339
Body: 0x326, 0x32d, 0x331, 0x339, 0xaaa, 0xb03, 0xb15, 0xb1c, 0xb27, 0xb2e, 0xb32, 0xb63, 0xb80, 0xb81, 0xc7a, 0xc98, 0xc99, 0xd02

Function 11:
Public function signature: 0xac3d6bea
Entry block: 0x33b
Exit block: 0x34e
Body: 0x33b, 0x342, 0x346, 0x34e, 0xd05, 0xd5e, 0xd70, 0xd77, 0xd82, 0xd89, 0xd8d, 0xdbe, 0xddb, 0xddc, 0xed5, 0xef3, 0xef4, 0xf5d

Function 12:
Public function signature: 0xc19d93fb
Entry block: 0x350
Exit block: 0x373
Body: 0x350, 0x357, 0x35b, 0x363, 0x372, 0x373, 0xf60

Function 13:
Public function signature: 0xc426a65c
Entry block: 0x387
Exit block: 0x39a
Body: 0x387, 0x38e, 0x392, 0x39a, 0xf73, 0xf87, 0xf99, 0xfa0, 0xff2, 0xff9, 0x1010, 0x1021, 0x1023, 0x102a, 0x102e, 0x1041, 0x1097, 0x10ba, 0x10bb, 0x10d9, 0x10da, 0x1168, 0x1169, 0x1173

Function 14:
Public function signature: 0xda1fbbf7
Entry block: 0x3b4
Exit block: 0x3c7
Body: 0x3b4, 0x3bb, 0x3bf, 0x3c7, 0x1178

Function 15:
Public function signature: 0xe19391f8
Entry block: 0x3dd
Exit block: 0x3f0
Body: 0x3dd, 0x3e4, 0x3e8, 0x3f0, 0x117e

Function 16:
Public function signature: 0xe3941225
Entry block: 0x432
Exit block: 0x445
Body: 0x432, 0x439, 0x43d, 0x445, 0x11a4

Function 17:
Public function signature: 0xe7b4d44a
Entry block: 0x45b
Exit block: 0x46e
Body: 0x45b, 0x462, 0x466, 0x46e, 0x11aa

Function 18:
Public function signature: 0xee97f7f3
Entry block: 0x488
Exit block: 0x49b
Body: 0x488, 0x48f, 0x493, 0x49b, 0x11bd

Function 19:
Public function signature: 0xf2a968a5
Entry block: 0x4dd
Exit block: 0x4f0
Body: 0x4dd, 0x4e4, 0x4e8, 0x4f0, 0x11e2

Function 20:
Public fallback function
Entry block: 0x110
Exit block: 0x110
Body: 0x110

