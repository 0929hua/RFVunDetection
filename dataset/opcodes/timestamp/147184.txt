Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd5
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd5
0xa: JUMPI 0xd5 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xe8]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2d05d3f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xe8
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2d05d3f
0x20: V14 = EQ V12 0x2d05d3f
0x21: V15 = 0xe8
0x24: JUMPI 0xe8 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x117]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x117
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x117
0x2f: JUMPI 0x117 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x13c]
---
0x30 DUP1
0x31 PUSH4 0x38771242
0x36 EQ
0x37 PUSH2 0x13c
0x3a JUMPI
---
0x31: V19 = 0x38771242
0x36: V20 = EQ 0x38771242 V12
0x37: V21 = 0x13c
0x3a: JUMPI 0x13c V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x161]
---
0x3b DUP1
0x3c PUSH4 0x38af3eed
0x41 EQ
0x42 PUSH2 0x161
0x45 JUMPI
---
0x3c: V22 = 0x38af3eed
0x41: V23 = EQ 0x38af3eed V12
0x42: V24 = 0x161
0x45: JUMPI 0x161 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x190]
---
0x46 DUP1
0x47 PUSH4 0x3c8da588
0x4c EQ
0x4d PUSH2 0x190
0x50 JUMPI
---
0x47: V25 = 0x3c8da588
0x4c: V26 = EQ 0x3c8da588 V12
0x4d: V27 = 0x190
0x50: JUMPI 0x190 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1b5]
---
0x51 DUP1
0x52 PUSH4 0x6e66f6e9
0x57 EQ
0x58 PUSH2 0x1b5
0x5b JUMPI
---
0x52: V28 = 0x6e66f6e9
0x57: V29 = EQ 0x6e66f6e9 V12
0x58: V30 = 0x1b5
0x5b: JUMPI 0x1b5 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1e4]
---
0x5c DUP1
0x5d PUSH4 0x71ae8f02
0x62 EQ
0x63 PUSH2 0x1e4
0x66 JUMPI
---
0x5d: V31 = 0x71ae8f02
0x62: V32 = EQ 0x71ae8f02 V12
0x63: V33 = 0x1e4
0x66: JUMPI 0x1e4 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x209]
---
0x67 DUP1
0x68 PUSH4 0x86f32586
0x6d EQ
0x6e PUSH2 0x209
0x71 JUMPI
---
0x68: V34 = 0x86f32586
0x6d: V35 = EQ 0x86f32586 V12
0x6e: V36 = 0x209
0x71: JUMPI 0x209 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x21e]
---
0x72 DUP1
0x73 PUSH4 0xaa367664
0x78 EQ
0x79 PUSH2 0x21e
0x7c JUMPI
---
0x73: V37 = 0xaa367664
0x78: V38 = EQ 0xaa367664 V12
0x79: V39 = 0x21e
0x7c: JUMPI 0x21e V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x243]
---
0x7d DUP1
0x7e PUSH4 0xb2d5ae44
0x83 EQ
0x84 PUSH2 0x243
0x87 JUMPI
---
0x7e: V40 = 0xb2d5ae44
0x83: V41 = EQ 0xb2d5ae44 V12
0x84: V42 = 0x243
0x87: JUMPI 0x243 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x26a]
---
0x88 DUP1
0x89 PUSH4 0xc19d93fb
0x8e EQ
0x8f PUSH2 0x26a
0x92 JUMPI
---
0x89: V43 = 0xc19d93fb
0x8e: V44 = EQ 0xc19d93fb V12
0x8f: V45 = 0x26a
0x92: JUMPI 0x26a V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2a1]
---
0x93 DUP1
0x94 PUSH4 0xc2052403
0x99 EQ
0x9a PUSH2 0x2a1
0x9d JUMPI
---
0x94: V46 = 0xc2052403
0x99: V47 = EQ 0xc2052403 V12
0x9a: V48 = 0x2a1
0x9d: JUMPI 0x2a1 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2b6]
---
0x9e DUP1
0x9f PUSH4 0xc5c4744c
0xa4 EQ
0xa5 PUSH2 0x2b6
0xa8 JUMPI
---
0x9f: V49 = 0xc5c4744c
0xa4: V50 = EQ 0xc5c4744c V12
0xa5: V51 = 0x2b6
0xa8: JUMPI 0x2b6 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2db]
---
0xa9 DUP1
0xaa PUSH4 0xce845d1d
0xaf EQ
0xb0 PUSH2 0x2db
0xb3 JUMPI
---
0xaa: V52 = 0xce845d1d
0xaf: V53 = EQ 0xce845d1d V12
0xb0: V54 = 0x2db
0xb3: JUMPI 0x2db V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x300]
---
0xb4 DUP1
0xb5 PUSH4 0xd7bb99ba
0xba EQ
0xbb PUSH2 0x300
0xbe JUMPI
---
0xb5: V55 = 0xd7bb99ba
0xba: V56 = EQ 0xd7bb99ba V12
0xbb: V57 = 0x300
0xbe: JUMPI 0x300 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x31a]
---
0xbf DUP1
0xc0 PUSH4 0xfe374098
0xc5 EQ
0xc6 PUSH2 0x31a
0xc9 JUMPI
---
0xc0: V58 = 0xfe374098
0xc5: V59 = EQ 0xfe374098 V12
0xc6: V60 = 0x31a
0xc9: JUMPI 0x31a V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x32f]
---
0xca DUP1
0xcb PUSH4 0xfe389e09
0xd0 EQ
0xd1 PUSH2 0x32f
0xd4 JUMPI
---
0xcb: V61 = 0xfe389e09
0xd0: V62 = EQ 0xfe389e09 V12
0xd1: V63 = 0x32f
0xd4: JUMPI 0x32f V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdb]
---
Predecessors: [0x0, 0xca]
Successors: [0xdc, 0xe0]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xd5: JUMPDEST 
0xd6: V64 = CALLVALUE
0xd7: V65 = ISZERO V64
0xd8: V66 = 0xe0
0xdb: JUMPI 0xe0 V65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xd5]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V67 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe0]
---
Predecessors: [0xd5]
Successors: [0xe1]
---
0xe0 JUMPDEST
---
0xe0: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe1
[0xe1:0xe5]
---
Predecessors: [0xe0]
Successors: []
---
0xe1 JUMPDEST
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe1: JUMPDEST 
0xe2: V68 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: [0x4ca, 0x6fa]
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: [V12, S4, {0x0, 0x12a}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0x0, 0x12a}, S2, S1, S0]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0xb]
Successors: [0xef, 0xf3]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V69 = CALLVALUE
0xea: V70 = ISZERO V69
0xeb: V71 = 0xf3
0xee: JUMPI 0xf3 V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe8]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V72 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0xe8]
Successors: [0x344]
---
0xf3 JUMPDEST
0xf4 PUSH2 0xfb
0xf7 PUSH2 0x344
0xfa JUMP
---
0xf3: JUMPDEST 
0xf4: V73 = 0xfb
0xf7: V74 = 0x344
0xfa: JUMP 0x344
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V12, 0xfb]

================================

Block 0xfb
[0xfb:0x116]
---
Predecessors: [0x344, 0x35f, 0x374]
Successors: []
---
0xfb JUMPDEST
0xfc PUSH1 0x40
0xfe MLOAD
0xff PUSH1 0x1
0x101 PUSH1 0xa0
0x103 PUSH1 0x2
0x105 EXP
0x106 SUB
0x107 SWAP1
0x108 SWAP2
0x109 AND
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f PUSH1 0x40
0x111 MLOAD
0x112 DUP1
0x113 SWAP2
0x114 SUB
0x115 SWAP1
0x116 RETURN
---
0xfb: JUMPDEST 
0xfc: V75 = 0x40
0xfe: V76 = M[0x40]
0xff: V77 = 0x1
0x101: V78 = 0xa0
0x103: V79 = 0x2
0x105: V80 = EXP 0x2 0xa0
0x106: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0x109: V82 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10b: M[V76] = V82
0x10c: V83 = 0x20
0x10e: V84 = ADD 0x20 V76
0x10f: V85 = 0x40
0x111: V86 = M[0x40]
0x114: V87 = SUB V84 V86
0x116: RETURN V86 V87
---
Entry stack: [V12, 0xfb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xfb]

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x25]
Successors: [0x11e, 0x122]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x117: JUMPDEST 
0x118: V88 = CALLVALUE
0x119: V89 = ISZERO V88
0x11a: V90 = 0x122
0x11d: JUMPI 0x122 V89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x117]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V91 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x117]
Successors: [0x353]
---
0x122 JUMPDEST
0x123 PUSH2 0x12a
0x126 PUSH2 0x353
0x129 JUMP
---
0x122: JUMPDEST 
0x123: V92 = 0x12a
0x126: V93 = 0x353
0x129: JUMP 0x353
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x12a
[0x12a:0x13b]
---
Predecessors: [0x353, 0x359, 0x36e, 0x383, 0x4cc, 0x6fd, 0x703, 0x953]
Successors: []
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d MLOAD
0x12e SWAP1
0x12f DUP2
0x130 MSTORE
0x131 PUSH1 0x20
0x133 ADD
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 SWAP2
0x139 SUB
0x13a SWAP1
0x13b RETURN
---
0x12a: JUMPDEST 
0x12b: V94 = 0x40
0x12d: V95 = M[0x40]
0x130: M[V95] = S0
0x131: V96 = 0x20
0x133: V97 = ADD 0x20 V95
0x134: V98 = 0x40
0x136: V99 = M[0x40]
0x139: V100 = SUB V97 V99
0x13b: RETURN V99 V100
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x13c
[0x13c:0x142]
---
Predecessors: [0x30]
Successors: [0x143, 0x147]
---
0x13c JUMPDEST
0x13d CALLVALUE
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x13c: JUMPDEST 
0x13d: V101 = CALLVALUE
0x13e: V102 = ISZERO V101
0x13f: V103 = 0x147
0x142: JUMPI 0x147 V102
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x13c]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V104 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x13c]
Successors: [0x359]
---
0x147 JUMPDEST
0x148 PUSH2 0x12a
0x14b PUSH2 0x359
0x14e JUMP
---
0x147: JUMPDEST 
0x148: V105 = 0x12a
0x14b: V106 = 0x359
0x14e: JUMP 0x359
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x14f
[0x14f:0x160]
---
Predecessors: []
Successors: []
---
0x14f JUMPDEST
0x150 PUSH1 0x40
0x152 MLOAD
0x153 SWAP1
0x154 DUP2
0x155 MSTORE
0x156 PUSH1 0x20
0x158 ADD
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d SWAP2
0x15e SUB
0x15f SWAP1
0x160 RETURN
---
0x14f: JUMPDEST 
0x150: V107 = 0x40
0x152: V108 = M[0x40]
0x155: M[V108] = S0
0x156: V109 = 0x20
0x158: V110 = ADD 0x20 V108
0x159: V111 = 0x40
0x15b: V112 = M[0x40]
0x15e: V113 = SUB V110 V112
0x160: RETURN V112 V113
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x161
[0x161:0x167]
---
Predecessors: [0x3b]
Successors: [0x168, 0x16c]
---
0x161 JUMPDEST
0x162 CALLVALUE
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x161: JUMPDEST 
0x162: V114 = CALLVALUE
0x163: V115 = ISZERO V114
0x164: V116 = 0x16c
0x167: JUMPI 0x16c V115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x161]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V117 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x161]
Successors: [0x35f]
---
0x16c JUMPDEST
0x16d PUSH2 0xfb
0x170 PUSH2 0x35f
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V118 = 0xfb
0x170: V119 = 0x35f
0x173: JUMP 0x35f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V12, 0xfb]

================================

Block 0x174
[0x174:0x18f]
---
Predecessors: []
Successors: []
---
0x174 JUMPDEST
0x175 PUSH1 0x40
0x177 MLOAD
0x178 PUSH1 0x1
0x17a PUSH1 0xa0
0x17c PUSH1 0x2
0x17e EXP
0x17f SUB
0x180 SWAP1
0x181 SWAP2
0x182 AND
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP1
0x18c SWAP2
0x18d SUB
0x18e SWAP1
0x18f RETURN
---
0x174: JUMPDEST 
0x175: V120 = 0x40
0x177: V121 = M[0x40]
0x178: V122 = 0x1
0x17a: V123 = 0xa0
0x17c: V124 = 0x2
0x17e: V125 = EXP 0x2 0xa0
0x17f: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x182: V127 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x184: M[V121] = V127
0x185: V128 = 0x20
0x187: V129 = ADD 0x20 V121
0x188: V130 = 0x40
0x18a: V131 = M[0x40]
0x18d: V132 = SUB V129 V131
0x18f: RETURN V131 V132
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x190
[0x190:0x196]
---
Predecessors: [0x46]
Successors: [0x197, 0x19b]
---
0x190 JUMPDEST
0x191 CALLVALUE
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x190: JUMPDEST 
0x191: V133 = CALLVALUE
0x192: V134 = ISZERO V133
0x193: V135 = 0x19b
0x196: JUMPI 0x19b V134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x190]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V136 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x190]
Successors: [0x36e]
---
0x19b JUMPDEST
0x19c PUSH2 0x12a
0x19f PUSH2 0x36e
0x1a2 JUMP
---
0x19b: JUMPDEST 
0x19c: V137 = 0x12a
0x19f: V138 = 0x36e
0x1a2: JUMP 0x36e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x1a3
[0x1a3:0x1b4]
---
Predecessors: []
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 SWAP1
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 SWAP2
0x1b2 SUB
0x1b3 SWAP1
0x1b4 RETURN
---
0x1a3: JUMPDEST 
0x1a4: V139 = 0x40
0x1a6: V140 = M[0x40]
0x1a9: M[V140] = S0
0x1aa: V141 = 0x20
0x1ac: V142 = ADD 0x20 V140
0x1ad: V143 = 0x40
0x1af: V144 = M[0x40]
0x1b2: V145 = SUB V142 V144
0x1b4: RETURN V144 V145
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b5
[0x1b5:0x1bb]
---
Predecessors: [0x51]
Successors: [0x1bc, 0x1c0]
---
0x1b5 JUMPDEST
0x1b6 CALLVALUE
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V146 = CALLVALUE
0x1b7: V147 = ISZERO V146
0x1b8: V148 = 0x1c0
0x1bb: JUMPI 0x1c0 V147
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x1b5]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V149 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c0
[0x1c0:0x1c7]
---
Predecessors: [0x1b5]
Successors: [0x374]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0xfb
0x1c4 PUSH2 0x374
0x1c7 JUMP
---
0x1c0: JUMPDEST 
0x1c1: V150 = 0xfb
0x1c4: V151 = 0x374
0x1c7: JUMP 0x374
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V12, 0xfb]

================================

Block 0x1c8
[0x1c8:0x1e3]
---
Predecessors: []
Successors: []
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc PUSH1 0x1
0x1ce PUSH1 0xa0
0x1d0 PUSH1 0x2
0x1d2 EXP
0x1d3 SUB
0x1d4 SWAP1
0x1d5 SWAP2
0x1d6 AND
0x1d7 DUP2
0x1d8 MSTORE
0x1d9 PUSH1 0x20
0x1db ADD
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 RETURN
---
0x1c8: JUMPDEST 
0x1c9: V152 = 0x40
0x1cb: V153 = M[0x40]
0x1cc: V154 = 0x1
0x1ce: V155 = 0xa0
0x1d0: V156 = 0x2
0x1d2: V157 = EXP 0x2 0xa0
0x1d3: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V159 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: M[V153] = V159
0x1d9: V160 = 0x20
0x1db: V161 = ADD 0x20 V153
0x1dc: V162 = 0x40
0x1de: V163 = M[0x40]
0x1e1: V164 = SUB V161 V163
0x1e3: RETURN V163 V164
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x5c]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V165 = CALLVALUE
0x1e6: V166 = ISZERO V165
0x1e7: V167 = 0x1ef
0x1ea: JUMPI 0x1ef V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V168 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x1e4]
Successors: [0x383]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0x12a
0x1f3 PUSH2 0x383
0x1f6 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V169 = 0x12a
0x1f3: V170 = 0x383
0x1f6: JUMP 0x383
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x1f7
[0x1f7:0x208]
---
Predecessors: []
Successors: []
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb SWAP1
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 ADD
0x201 PUSH1 0x40
0x203 MLOAD
0x204 DUP1
0x205 SWAP2
0x206 SUB
0x207 SWAP1
0x208 RETURN
---
0x1f7: JUMPDEST 
0x1f8: V171 = 0x40
0x1fa: V172 = M[0x40]
0x1fd: M[V172] = S0
0x1fe: V173 = 0x20
0x200: V174 = ADD 0x20 V172
0x201: V175 = 0x40
0x203: V176 = M[0x40]
0x206: V177 = SUB V174 V176
0x208: RETURN V176 V177
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x209
[0x209:0x20f]
---
Predecessors: [0x67]
Successors: [0x210, 0x214]
---
0x209 JUMPDEST
0x20a CALLVALUE
0x20b ISZERO
0x20c PUSH2 0x214
0x20f JUMPI
---
0x209: JUMPDEST 
0x20a: V178 = CALLVALUE
0x20b: V179 = ISZERO V178
0x20c: V180 = 0x214
0x20f: JUMPI 0x214 V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x209]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V181 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x214
[0x214:0x21b]
---
Predecessors: [0x209]
Successors: [0x389]
---
0x214 JUMPDEST
0x215 PUSH2 0xe6
0x218 PUSH2 0x389
0x21b JUMP
---
0x214: JUMPDEST 
0x215: V182 = 0xe6
0x218: V183 = 0x389
0x21b: JUMP 0x389
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V12, 0xe6]

================================

Block 0x21c
[0x21c:0x21d]
---
Predecessors: []
Successors: []
---
0x21c JUMPDEST
0x21d STOP
---
0x21c: JUMPDEST 
0x21d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21e
[0x21e:0x224]
---
Predecessors: [0x72]
Successors: [0x225, 0x229]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x21e: JUMPDEST 
0x21f: V184 = CALLVALUE
0x220: V185 = ISZERO V184
0x221: V186 = 0x229
0x224: JUMPI 0x229 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x21e]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V187 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x229
[0x229:0x230]
---
Predecessors: [0x21e]
Successors: [0x4cc]
---
0x229 JUMPDEST
0x22a PUSH2 0x12a
0x22d PUSH2 0x4cc
0x230 JUMP
---
0x229: JUMPDEST 
0x22a: V188 = 0x12a
0x22d: V189 = 0x4cc
0x230: JUMP 0x4cc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x231
[0x231:0x242]
---
Predecessors: []
Successors: []
---
0x231 JUMPDEST
0x232 PUSH1 0x40
0x234 MLOAD
0x235 SWAP1
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x20
0x23a ADD
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f SWAP2
0x240 SUB
0x241 SWAP1
0x242 RETURN
---
0x231: JUMPDEST 
0x232: V190 = 0x40
0x234: V191 = M[0x40]
0x237: M[V191] = S0
0x238: V192 = 0x20
0x23a: V193 = ADD 0x20 V191
0x23b: V194 = 0x40
0x23d: V195 = M[0x40]
0x240: V196 = SUB V193 V195
0x242: RETURN V195 V196
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x243
[0x243:0x249]
---
Predecessors: [0x7d]
Successors: [0x24a, 0x24e]
---
0x243 JUMPDEST
0x244 CALLVALUE
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x243: JUMPDEST 
0x244: V197 = CALLVALUE
0x245: V198 = ISZERO V197
0x246: V199 = 0x24e
0x249: JUMPI 0x24e V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x243]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V200 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24e
[0x24e:0x255]
---
Predecessors: [0x243]
Successors: [0x4d2]
---
0x24e JUMPDEST
0x24f PUSH2 0x256
0x252 PUSH2 0x4d2
0x255 JUMP
---
0x24e: JUMPDEST 
0x24f: V201 = 0x256
0x252: V202 = 0x4d2
0x255: JUMP 0x4d2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x256]
Exit stack: [V12, 0x256]

================================

Block 0x256
[0x256:0x269]
---
Predecessors: [0x62e]
Successors: []
---
0x256 JUMPDEST
0x257 PUSH1 0x40
0x259 MLOAD
0x25a SWAP1
0x25b ISZERO
0x25c ISZERO
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x20
0x261 ADD
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 SWAP2
0x267 SUB
0x268 SWAP1
0x269 RETURN
---
0x256: JUMPDEST 
0x257: V203 = 0x40
0x259: V204 = M[0x40]
0x25b: V205 = ISZERO {0x0, 0x1}
0x25c: V206 = ISZERO V205
0x25e: M[V204] = V206
0x25f: V207 = 0x20
0x261: V208 = ADD 0x20 V204
0x262: V209 = 0x40
0x264: V210 = M[0x40]
0x267: V211 = SUB V208 V210
0x269: RETURN V210 V211
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x26a
[0x26a:0x270]
---
Predecessors: [0x88]
Successors: [0x271, 0x275]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c ISZERO
0x26d PUSH2 0x275
0x270 JUMPI
---
0x26a: JUMPDEST 
0x26b: V212 = CALLVALUE
0x26c: V213 = ISZERO V212
0x26d: V214 = 0x275
0x270: JUMPI 0x275 V213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x26a]
Successors: []
---
0x271 PUSH1 0x0
0x273 DUP1
0x274 REVERT
---
0x271: V215 = 0x0
0x274: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x275
[0x275:0x27c]
---
Predecessors: [0x26a]
Successors: [0x634]
---
0x275 JUMPDEST
0x276 PUSH2 0x27d
0x279 PUSH2 0x634
0x27c JUMP
---
0x275: JUMPDEST 
0x276: V216 = 0x27d
0x279: V217 = 0x634
0x27c: JUMP 0x634
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27d]
Exit stack: [V12, 0x27d]

================================

Block 0x27d
[0x27d:0x28b]
---
Predecessors: [0x634]
Successors: [0x28c, 0x28d]
---
0x27d JUMPDEST
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 DUP3
0x283 PUSH1 0x3
0x285 DUP2
0x286 GT
0x287 ISZERO
0x288 PUSH2 0x28d
0x28b JUMPI
---
0x27d: JUMPDEST 
0x27e: V218 = 0x40
0x280: V219 = M[0x40]
0x283: V220 = 0x3
0x286: V221 = GT V553 0x3
0x287: V222 = ISZERO V221
0x288: V223 = 0x28d
0x28b: JUMPI 0x28d V222
---
Entry stack: [V12, 0x27d, V553]
Stack pops: 1
Stack additions: [S0, V219, V219, S0]
Exit stack: [V12, 0x27d, V553, V219, V219, V553]

================================

Block 0x28c
[0x28c:0x28c]
---
Predecessors: [0x27d]
Successors: []
---
0x28c INVALID
---
0x28c: INVALID 
---
Entry stack: [V12, 0x27d, V553, V219, V219, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27d, V553, V219, V219, V553]

================================

Block 0x28d
[0x28d:0x2a0]
---
Predecessors: [0x27d]
Successors: []
---
0x28d JUMPDEST
0x28e PUSH1 0xff
0x290 AND
0x291 DUP2
0x292 MSTORE
0x293 PUSH1 0x20
0x295 ADD
0x296 SWAP2
0x297 POP
0x298 POP
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d SWAP2
0x29e SUB
0x29f SWAP1
0x2a0 RETURN
---
0x28d: JUMPDEST 
0x28e: V224 = 0xff
0x290: V225 = AND 0xff V553
0x292: M[V219] = V225
0x293: V226 = 0x20
0x295: V227 = ADD 0x20 V219
0x299: V228 = 0x40
0x29b: V229 = M[0x40]
0x29e: V230 = SUB V227 V229
0x2a0: RETURN V229 V230
---
Entry stack: [V12, 0x27d, V553, V219, V219, V553]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x27d]

================================

Block 0x2a1
[0x2a1:0x2a7]
---
Predecessors: [0x93]
Successors: [0x2a8, 0x2ac]
---
0x2a1 JUMPDEST
0x2a2 CALLVALUE
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V231 = CALLVALUE
0x2a3: V232 = ISZERO V231
0x2a4: V233 = 0x2ac
0x2a7: JUMPI 0x2ac V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a1]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V234 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ac
[0x2ac:0x2b3]
---
Predecessors: [0x2a1]
Successors: [0x63d]
---
0x2ac JUMPDEST
0x2ad PUSH2 0xe6
0x2b0 PUSH2 0x63d
0x2b3 JUMP
---
0x2ac: JUMPDEST 
0x2ad: V235 = 0xe6
0x2b0: V236 = 0x63d
0x2b3: JUMP 0x63d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V12, 0xe6]

================================

Block 0x2b4
[0x2b4:0x2b5]
---
Predecessors: []
Successors: []
---
0x2b4 JUMPDEST
0x2b5 STOP
---
0x2b4: JUMPDEST 
0x2b5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b6
[0x2b6:0x2bc]
---
Predecessors: [0x9e]
Successors: [0x2bd, 0x2c1]
---
0x2b6 JUMPDEST
0x2b7 CALLVALUE
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V237 = CALLVALUE
0x2b8: V238 = ISZERO V237
0x2b9: V239 = 0x2c1
0x2bc: JUMPI 0x2c1 V238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2b6]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V240 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c1
[0x2c1:0x2c8]
---
Predecessors: [0x2b6]
Successors: [0x6fd]
---
0x2c1 JUMPDEST
0x2c2 PUSH2 0x12a
0x2c5 PUSH2 0x6fd
0x2c8 JUMP
---
0x2c1: JUMPDEST 
0x2c2: V241 = 0x12a
0x2c5: V242 = 0x6fd
0x2c8: JUMP 0x6fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x2c9
[0x2c9:0x2da]
---
Predecessors: []
Successors: []
---
0x2c9 JUMPDEST
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd SWAP1
0x2ce DUP2
0x2cf MSTORE
0x2d0 PUSH1 0x20
0x2d2 ADD
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP1
0x2d7 SWAP2
0x2d8 SUB
0x2d9 SWAP1
0x2da RETURN
---
0x2c9: JUMPDEST 
0x2ca: V243 = 0x40
0x2cc: V244 = M[0x40]
0x2cf: M[V244] = S0
0x2d0: V245 = 0x20
0x2d2: V246 = ADD 0x20 V244
0x2d3: V247 = 0x40
0x2d5: V248 = M[0x40]
0x2d8: V249 = SUB V246 V248
0x2da: RETURN V248 V249
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2db
[0x2db:0x2e1]
---
Predecessors: [0xa9]
Successors: [0x2e2, 0x2e6]
---
0x2db JUMPDEST
0x2dc CALLVALUE
0x2dd ISZERO
0x2de PUSH2 0x2e6
0x2e1 JUMPI
---
0x2db: JUMPDEST 
0x2dc: V250 = CALLVALUE
0x2dd: V251 = ISZERO V250
0x2de: V252 = 0x2e6
0x2e1: JUMPI 0x2e6 V251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e2
[0x2e2:0x2e5]
---
Predecessors: [0x2db]
Successors: []
---
0x2e2 PUSH1 0x0
0x2e4 DUP1
0x2e5 REVERT
---
0x2e2: V253 = 0x0
0x2e5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e6
[0x2e6:0x2ed]
---
Predecessors: [0x2db]
Successors: [0x703]
---
0x2e6 JUMPDEST
0x2e7 PUSH2 0x12a
0x2ea PUSH2 0x703
0x2ed JUMP
---
0x2e6: JUMPDEST 
0x2e7: V254 = 0x12a
0x2ea: V255 = 0x703
0x2ed: JUMP 0x703
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x2ee
[0x2ee:0x2ff]
---
Predecessors: []
Successors: []
---
0x2ee JUMPDEST
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 SWAP1
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb DUP1
0x2fc SWAP2
0x2fd SUB
0x2fe SWAP1
0x2ff RETURN
---
0x2ee: JUMPDEST 
0x2ef: V256 = 0x40
0x2f1: V257 = M[0x40]
0x2f4: M[V257] = S0
0x2f5: V258 = 0x20
0x2f7: V259 = ADD 0x20 V257
0x2f8: V260 = 0x40
0x2fa: V261 = M[0x40]
0x2fd: V262 = SUB V259 V261
0x2ff: RETURN V261 V262
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x300
[0x300:0x307]
---
Predecessors: [0xb4]
Successors: [0x709]
---
0x300 JUMPDEST
0x301 PUSH2 0x12a
0x304 PUSH2 0x709
0x307 JUMP
---
0x300: JUMPDEST 
0x301: V263 = 0x12a
0x304: V264 = 0x709
0x307: JUMP 0x709
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x308
[0x308:0x319]
---
Predecessors: []
Successors: []
---
0x308 JUMPDEST
0x309 PUSH1 0x40
0x30b MLOAD
0x30c SWAP1
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x20
0x311 ADD
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 SWAP2
0x317 SUB
0x318 SWAP1
0x319 RETURN
---
0x308: JUMPDEST 
0x309: V265 = 0x40
0x30b: V266 = M[0x40]
0x30e: M[V266] = S0
0x30f: V267 = 0x20
0x311: V268 = ADD 0x20 V266
0x312: V269 = 0x40
0x314: V270 = M[0x40]
0x317: V271 = SUB V268 V270
0x319: RETURN V270 V271
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x31a
[0x31a:0x320]
---
Predecessors: [0xbf]
Successors: [0x321, 0x325]
---
0x31a JUMPDEST
0x31b CALLVALUE
0x31c ISZERO
0x31d PUSH2 0x325
0x320 JUMPI
---
0x31a: JUMPDEST 
0x31b: V272 = CALLVALUE
0x31c: V273 = ISZERO V272
0x31d: V274 = 0x325
0x320: JUMPI 0x325 V273
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x321
[0x321:0x324]
---
Predecessors: [0x31a]
Successors: []
---
0x321 PUSH1 0x0
0x323 DUP1
0x324 REVERT
---
0x321: V275 = 0x0
0x324: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x325
[0x325:0x32c]
---
Predecessors: [0x31a]
Successors: [0x958]
---
0x325 JUMPDEST
0x326 PUSH2 0xe6
0x329 PUSH2 0x958
0x32c JUMP
---
0x325: JUMPDEST 
0x326: V276 = 0xe6
0x329: V277 = 0x958
0x32c: JUMP 0x958
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V12, 0xe6]

================================

Block 0x32d
[0x32d:0x32e]
---
Predecessors: []
Successors: []
---
0x32d JUMPDEST
0x32e STOP
---
0x32d: JUMPDEST 
0x32e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x32f
[0x32f:0x335]
---
Predecessors: [0xca]
Successors: [0x336, 0x33a]
---
0x32f JUMPDEST
0x330 CALLVALUE
0x331 ISZERO
0x332 PUSH2 0x33a
0x335 JUMPI
---
0x32f: JUMPDEST 
0x330: V278 = CALLVALUE
0x331: V279 = ISZERO V278
0x332: V280 = 0x33a
0x335: JUMPI 0x33a V279
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x336
[0x336:0x339]
---
Predecessors: [0x32f]
Successors: []
---
0x336 PUSH1 0x0
0x338 DUP1
0x339 REVERT
---
0x336: V281 = 0x0
0x339: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33a
[0x33a:0x341]
---
Predecessors: [0x32f]
Successors: [0xa20]
---
0x33a JUMPDEST
0x33b PUSH2 0xe6
0x33e PUSH2 0xa20
0x341 JUMP
---
0x33a: JUMPDEST 
0x33b: V282 = 0xe6
0x33e: V283 = 0xa20
0x341: JUMP 0xa20
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V12, 0xe6]

================================

Block 0x342
[0x342:0x343]
---
Predecessors: []
Successors: []
---
0x342 JUMPDEST
0x343 STOP
---
0x342: JUMPDEST 
0x343: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x344
[0x344:0x352]
---
Predecessors: [0xf3]
Successors: [0xfb]
---
0x344 JUMPDEST
0x345 PUSH1 0xa
0x347 SLOAD
0x348 PUSH1 0x1
0x34a PUSH1 0xa0
0x34c PUSH1 0x2
0x34e EXP
0x34f SUB
0x350 AND
0x351 DUP2
0x352 JUMP
---
0x344: JUMPDEST 
0x345: V284 = 0xa
0x347: V285 = S[0xa]
0x348: V286 = 0x1
0x34a: V287 = 0xa0
0x34c: V288 = 0x2
0x34e: V289 = EXP 0x2 0xa0
0x34f: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x350: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x352: JUMP 0xfb
---
Entry stack: [V12, 0xfb]
Stack pops: 1
Stack additions: [S0, V291]
Exit stack: [V12, 0xfb, V291]

================================

Block 0x353
[0x353:0x358]
---
Predecessors: [0x122]
Successors: [0x12a]
---
0x353 JUMPDEST
0x354 PUSH1 0x4
0x356 SLOAD
0x357 DUP2
0x358 JUMP
---
0x353: JUMPDEST 
0x354: V292 = 0x4
0x356: V293 = S[0x4]
0x358: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V293]
Exit stack: [V12, 0x12a, V293]

================================

Block 0x359
[0x359:0x35e]
---
Predecessors: [0x147]
Successors: [0x12a]
---
0x359 JUMPDEST
0x35a PUSH1 0x5
0x35c SLOAD
0x35d DUP2
0x35e JUMP
---
0x359: JUMPDEST 
0x35a: V294 = 0x5
0x35c: V295 = S[0x5]
0x35e: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V295]
Exit stack: [V12, 0x12a, V295]

================================

Block 0x35f
[0x35f:0x36d]
---
Predecessors: [0x16c]
Successors: [0xfb]
---
0x35f JUMPDEST
0x360 PUSH1 0xb
0x362 SLOAD
0x363 PUSH1 0x1
0x365 PUSH1 0xa0
0x367 PUSH1 0x2
0x369 EXP
0x36a SUB
0x36b AND
0x36c DUP2
0x36d JUMP
---
0x35f: JUMPDEST 
0x360: V296 = 0xb
0x362: V297 = S[0xb]
0x363: V298 = 0x1
0x365: V299 = 0xa0
0x367: V300 = 0x2
0x369: V301 = EXP 0x2 0xa0
0x36a: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36b: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x36d: JUMP 0xfb
---
Entry stack: [V12, 0xfb]
Stack pops: 1
Stack additions: [S0, V303]
Exit stack: [V12, 0xfb, V303]

================================

Block 0x36e
[0x36e:0x373]
---
Predecessors: [0x19b]
Successors: [0x12a]
---
0x36e JUMPDEST
0x36f PUSH1 0x6
0x371 SLOAD
0x372 DUP2
0x373 JUMP
---
0x36e: JUMPDEST 
0x36f: V304 = 0x6
0x371: V305 = S[0x6]
0x373: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V305]
Exit stack: [V12, 0x12a, V305]

================================

Block 0x374
[0x374:0x382]
---
Predecessors: [0x1c0]
Successors: [0xfb]
---
0x374 JUMPDEST
0x375 PUSH1 0x9
0x377 SLOAD
0x378 PUSH1 0x1
0x37a PUSH1 0xa0
0x37c PUSH1 0x2
0x37e EXP
0x37f SUB
0x380 AND
0x381 DUP2
0x382 JUMP
---
0x374: JUMPDEST 
0x375: V306 = 0x9
0x377: V307 = S[0x9]
0x378: V308 = 0x1
0x37a: V309 = 0xa0
0x37c: V310 = 0x2
0x37e: V311 = EXP 0x2 0xa0
0x37f: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x382: JUMP 0xfb
---
Entry stack: [V12, 0xfb]
Stack pops: 1
Stack additions: [S0, V313]
Exit stack: [V12, 0xfb, V313]

================================

Block 0x383
[0x383:0x388]
---
Predecessors: [0x1ef]
Successors: [0x12a]
---
0x383 JUMPDEST
0x384 PUSH1 0x7
0x386 SLOAD
0x387 DUP2
0x388 JUMP
---
0x383: JUMPDEST 
0x384: V314 = 0x7
0x386: V315 = S[0x7]
0x388: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V315]
Exit stack: [V12, 0x12a, V315]

================================

Block 0x389
[0x389:0x394]
---
Predecessors: [0x214, 0x8e3]
Successors: [0x395, 0x39d]
---
0x389 JUMPDEST
0x38a PUSH1 0x8
0x38c SLOAD
0x38d ISZERO
0x38e DUP1
0x38f ISZERO
0x390 SWAP1
0x391 PUSH2 0x39d
0x394 JUMPI
---
0x389: JUMPDEST 
0x38a: V316 = 0x8
0x38c: V317 = S[0x8]
0x38d: V318 = ISZERO V317
0x38f: V319 = ISZERO V318
0x391: V320 = 0x39d
0x394: JUMPI 0x39d V318
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}]
Stack pops: 0
Stack additions: [V319]
Exit stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}, V319]

================================

Block 0x395
[0x395:0x39c]
---
Predecessors: [0x389]
Successors: [0x39d]
---
0x395 POP
0x396 PUSH1 0x8
0x398 SLOAD
0x399 PUSH1 0x2
0x39b SLOAD
0x39c GT
---
0x396: V321 = 0x8
0x398: V322 = S[0x8]
0x399: V323 = 0x2
0x39b: V324 = S[0x2]
0x39c: V325 = GT V324 V322
---
Entry stack: [V12, 0x12a, 0x0, V659, S2, {0xe6, 0x946}, V319]
Stack pops: 1
Stack additions: [V325]
Exit stack: [V12, 0x12a, 0x0, V659, S2, {0xe6, 0x946}, V325]

================================

Block 0x39d
[0x39d:0x3a2]
---
Predecessors: [0x389, 0x395]
Successors: [0x3a3, 0x3fd]
---
0x39d JUMPDEST
0x39e ISZERO
0x39f PUSH2 0x3fd
0x3a2 JUMPI
---
0x39d: JUMPDEST 
0x39e: V326 = ISZERO S0
0x39f: V327 = 0x3fd
0x3a2: JUMPI 0x3fd V326
---
Entry stack: [V12, 0x12a, 0x0, V659, S2, {0xe6, 0x946}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S2, {0xe6, 0x946}]

================================

Block 0x3a3
[0x3a3:0x3b1]
---
Predecessors: [0x39d]
Successors: [0x3b2]
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 SLOAD
0x3a7 PUSH1 0x2
0x3a9 SWAP2
0x3aa SWAP1
0x3ab PUSH1 0xff
0x3ad NOT
0x3ae AND
0x3af PUSH1 0x1
0x3b1 DUP4
---
0x3a3: V328 = 0x0
0x3a6: V329 = S[0x0]
0x3a7: V330 = 0x2
0x3ab: V331 = 0xff
0x3ad: V332 = NOT 0xff
0x3ae: V333 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V329
0x3af: V334 = 0x1
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}]
Stack pops: 0
Stack additions: [0x2, 0x0, V333, 0x1, 0x2]
Exit stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}, 0x2, 0x0, V333, 0x1, 0x2]

================================

Block 0x3b2
[0x3b2:0x3f3]
---
Predecessors: [0x3a3, 0x413]
Successors: [0x63d]
---
0x3b2 JUMPDEST
0x3b3 MUL
0x3b4 OR
0x3b5 SWAP1
0x3b6 SSTORE
0x3b7 POP
0x3b8 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x3d9 PUSH1 0x2
0x3db SLOAD
0x3dc PUSH1 0x40
0x3de MLOAD
0x3df SWAP1
0x3e0 DUP2
0x3e1 MSTORE
0x3e2 PUSH1 0x20
0x3e4 ADD
0x3e5 PUSH1 0x40
0x3e7 MLOAD
0x3e8 DUP1
0x3e9 SWAP2
0x3ea SUB
0x3eb SWAP1
0x3ec LOG1
0x3ed PUSH2 0x3f4
0x3f0 PUSH2 0x63d
0x3f3 JUMP
---
0x3b2: JUMPDEST 
0x3b3: V335 = MUL 0x2 0x1
0x3b4: V336 = OR 0x2 S2
0x3b6: S[0x0] = V336
0x3b8: V337 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x3d9: V338 = 0x2
0x3db: V339 = S[0x2]
0x3dc: V340 = 0x40
0x3de: V341 = M[0x40]
0x3e1: M[V341] = V339
0x3e2: V342 = 0x20
0x3e4: V343 = ADD 0x20 V341
0x3e5: V344 = 0x40
0x3e7: V345 = M[0x40]
0x3ea: V346 = SUB V343 V345
0x3ec: LOG V345 V346 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x3ed: V347 = 0x3f4
0x3f0: V348 = 0x63d
0x3f3: JUMP 0x63d
---
Entry stack: [V12, 0x12a, 0x0, V659, S6, {0xe6, 0x946}, 0x2, 0x0, S2, 0x1, 0x2]
Stack pops: 5
Stack additions: [0x3f4]
Exit stack: [V12, 0x12a, 0x0, V659, S6, {0xe6, 0x946}, 0x3f4]

================================

Block 0x3f4
[0x3f4:0x3fc]
---
Predecessors: [0x6fa]
Successors: [0x4c7]
---
0x3f4 JUMPDEST
0x3f5 TIMESTAMP
0x3f6 PUSH1 0x5
0x3f8 SSTORE
0x3f9 PUSH2 0x4c7
0x3fc JUMP
---
0x3f4: JUMPDEST 
0x3f5: V349 = TIMESTAMP
0x3f6: V350 = 0x5
0x3f8: S[0x5] = V349
0x3f9: V351 = 0x4c7
0x3fc: JUMP 0x4c7
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S1, S0]

================================

Block 0x3fd
[0x3fd:0x407]
---
Predecessors: [0x39d]
Successors: [0x408, 0x4c7]
---
0x3fd JUMPDEST
0x3fe PUSH1 0x4
0x400 SLOAD
0x401 TIMESTAMP
0x402 GT
0x403 ISZERO
0x404 PUSH2 0x4c7
0x407 JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V352 = 0x4
0x400: V353 = S[0x4]
0x401: V354 = TIMESTAMP
0x402: V355 = GT V354 V353
0x403: V356 = ISZERO V355
0x404: V357 = 0x4c7
0x407: JUMPI 0x4c7 V356
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}]

================================

Block 0x408
[0x408:0x412]
---
Predecessors: [0x3fd]
Successors: [0x413, 0x471]
---
0x408 PUSH1 0x7
0x40a SLOAD
0x40b PUSH1 0x2
0x40d SLOAD
0x40e LT
0x40f PUSH2 0x471
0x412 JUMPI
---
0x408: V358 = 0x7
0x40a: V359 = S[0x7]
0x40b: V360 = 0x2
0x40d: V361 = S[0x2]
0x40e: V362 = LT V361 V359
0x40f: V363 = 0x471
0x412: JUMPI 0x471 V362
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}]

================================

Block 0x413
[0x413:0x425]
---
Predecessors: [0x408]
Successors: [0x3b2]
---
0x413 PUSH1 0x0
0x415 DUP1
0x416 SLOAD
0x417 PUSH1 0x2
0x419 SWAP2
0x41a SWAP1
0x41b PUSH1 0xff
0x41d NOT
0x41e AND
0x41f PUSH1 0x1
0x421 DUP4
0x422 PUSH2 0x3b2
0x425 JUMP
---
0x413: V364 = 0x0
0x416: V365 = S[0x0]
0x417: V366 = 0x2
0x41b: V367 = 0xff
0x41d: V368 = NOT 0xff
0x41e: V369 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V365
0x41f: V370 = 0x1
0x422: V371 = 0x3b2
0x425: JUMP 0x3b2
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}]
Stack pops: 0
Stack additions: [0x2, 0x0, V369, 0x1, 0x2]
Exit stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}, 0x2, 0x0, V369, 0x1, 0x2]

================================

Block 0x426
[0x426:0x467]
---
Predecessors: []
Successors: [0x63d]
---
0x426 JUMPDEST
0x427 MUL
0x428 OR
0x429 SWAP1
0x42a SSTORE
0x42b POP
0x42c PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x44d PUSH1 0x2
0x44f SLOAD
0x450 PUSH1 0x40
0x452 MLOAD
0x453 SWAP1
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 PUSH1 0x40
0x45b MLOAD
0x45c DUP1
0x45d SWAP2
0x45e SUB
0x45f SWAP1
0x460 LOG1
0x461 PUSH2 0x3f4
0x464 PUSH2 0x63d
0x467 JUMP
---
0x426: JUMPDEST 
0x427: V372 = MUL S0 S1
0x428: V373 = OR V372 S2
0x42a: S[S3] = V373
0x42c: V374 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x44d: V375 = 0x2
0x44f: V376 = S[0x2]
0x450: V377 = 0x40
0x452: V378 = M[0x40]
0x455: M[V378] = V376
0x456: V379 = 0x20
0x458: V380 = ADD 0x20 V378
0x459: V381 = 0x40
0x45b: V382 = M[0x40]
0x45e: V383 = SUB V380 V382
0x460: LOG V382 V383 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x461: V384 = 0x3f4
0x464: V385 = 0x63d
0x467: JUMP 0x63d
---
Entry stack: []
Stack pops: 5
Stack additions: [0x3f4]
Exit stack: [0x3f4]

================================

Block 0x468
[0x468:0x470]
---
Predecessors: []
Successors: [0x4c7]
---
0x468 JUMPDEST
0x469 TIMESTAMP
0x46a PUSH1 0x5
0x46c SSTORE
0x46d PUSH2 0x4c7
0x470 JUMP
---
0x468: JUMPDEST 
0x469: V386 = TIMESTAMP
0x46a: V387 = 0x5
0x46c: S[0x5] = V386
0x46d: V388 = 0x4c7
0x470: JUMP 0x4c7
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x471
[0x471:0x47f]
---
Predecessors: [0x408]
Successors: [0x480]
---
0x471 JUMPDEST
0x472 PUSH1 0x0
0x474 DUP1
0x475 SLOAD
0x476 PUSH1 0x1
0x478 SWAP2
0x479 SWAP1
0x47a PUSH1 0xff
0x47c NOT
0x47d AND
0x47e DUP3
0x47f DUP1
---
0x471: JUMPDEST 
0x472: V389 = 0x0
0x475: V390 = S[0x0]
0x476: V391 = 0x1
0x47a: V392 = 0xff
0x47c: V393 = NOT 0xff
0x47d: V394 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V390
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}]
Stack pops: 0
Stack additions: [0x1, 0x0, V394, 0x1, 0x1]
Exit stack: [V12, 0x12a, 0x0, V659, S1, {0xe6, 0x946}, 0x1, 0x0, V394, 0x1, 0x1]

================================

Block 0x480
[0x480:0x4c1]
---
Predecessors: [0x471]
Successors: [0x63d]
---
0x480 JUMPDEST
0x481 MUL
0x482 OR
0x483 SWAP1
0x484 SSTORE
0x485 POP
0x486 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x4a7 PUSH1 0x2
0x4a9 SLOAD
0x4aa PUSH1 0x40
0x4ac MLOAD
0x4ad SWAP1
0x4ae DUP2
0x4af MSTORE
0x4b0 PUSH1 0x20
0x4b2 ADD
0x4b3 PUSH1 0x40
0x4b5 MLOAD
0x4b6 DUP1
0x4b7 SWAP2
0x4b8 SUB
0x4b9 SWAP1
0x4ba LOG1
0x4bb PUSH2 0x4c2
0x4be PUSH2 0x63d
0x4c1 JUMP
---
0x480: JUMPDEST 
0x481: V395 = MUL 0x1 0x1
0x482: V396 = OR 0x1 V394
0x484: S[0x0] = V396
0x486: V397 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x4a7: V398 = 0x2
0x4a9: V399 = S[0x2]
0x4aa: V400 = 0x40
0x4ac: V401 = M[0x40]
0x4af: M[V401] = V399
0x4b0: V402 = 0x20
0x4b2: V403 = ADD 0x20 V401
0x4b3: V404 = 0x40
0x4b5: V405 = M[0x40]
0x4b8: V406 = SUB V403 V405
0x4ba: LOG V405 V406 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x4bb: V407 = 0x4c2
0x4be: V408 = 0x63d
0x4c1: JUMP 0x63d
---
Entry stack: [V12, 0x12a, 0x0, V659, S6, {0xe6, 0x946}, 0x1, 0x0, V394, 0x1, 0x1]
Stack pops: 5
Stack additions: [0x4c2]
Exit stack: [V12, 0x12a, 0x0, V659, S6, {0xe6, 0x946}, 0x4c2]

================================

Block 0x4c2
[0x4c2:0x4c6]
---
Predecessors: [0x6fa]
Successors: [0x4c7]
---
0x4c2 JUMPDEST
0x4c3 TIMESTAMP
0x4c4 PUSH1 0x5
0x4c6 SSTORE
---
0x4c2: JUMPDEST 
0x4c3: V409 = TIMESTAMP
0x4c4: V410 = 0x5
0x4c6: S[0x5] = V409
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S1, S0]

================================

Block 0x4c7
[0x4c7:0x4c7]
---
Predecessors: [0x3f4, 0x3fd, 0x468, 0x4c2]
Successors: [0x4c8]
---
0x4c7 JUMPDEST
---
0x4c7: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S1, S0]

================================

Block 0x4c8
[0x4c8:0x4c8]
---
Predecessors: [0x4c7]
Successors: [0x4c9]
---
0x4c8 JUMPDEST
---
0x4c8: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S1, S0]

================================

Block 0x4c9
[0x4c9:0x4c9]
---
Predecessors: [0x4c8]
Successors: [0x4ca]
---
0x4c9 JUMPDEST
---
0x4c9: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S1, S0]

================================

Block 0x4ca
[0x4ca:0x4cb]
---
Predecessors: [0x4c9]
Successors: [0xe6, 0x946]
---
0x4ca JUMPDEST
0x4cb JUMP
---
0x4ca: JUMPDEST 
0x4cb: JUMP S0
---
Entry stack: [V12, 0x12a, 0x0, V659, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S1]

================================

Block 0x4cc
[0x4cc:0x4d1]
---
Predecessors: [0x229]
Successors: [0x12a]
---
0x4cc JUMPDEST
0x4cd PUSH1 0x8
0x4cf SLOAD
0x4d0 DUP2
0x4d1 JUMP
---
0x4cc: JUMPDEST 
0x4cd: V411 = 0x8
0x4cf: V412 = S[0x8]
0x4d1: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V412]
Exit stack: [V12, 0x12a, V412]

================================

Block 0x4d2
[0x4d2:0x4d9]
---
Predecessors: [0x24e]
Successors: [0x4da]
---
0x4d2 JUMPDEST
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 DUP1
0x4d7 PUSH1 0x1
0x4d9 DUP1
---
0x4d2: JUMPDEST 
0x4d3: V413 = 0x0
0x4d7: V414 = 0x1
---
Entry stack: [V12, 0x256]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x1, 0x1]
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1]

================================

Block 0x4da
[0x4da:0x4e9]
---
Predecessors: [0x4d2]
Successors: [0x4ea, 0x4eb]
---
0x4da JUMPDEST
0x4db PUSH1 0x0
0x4dd SLOAD
0x4de PUSH1 0xff
0x4e0 AND
0x4e1 PUSH1 0x3
0x4e3 DUP2
0x4e4 GT
0x4e5 ISZERO
0x4e6 PUSH2 0x4eb
0x4e9 JUMPI
---
0x4da: JUMPDEST 
0x4db: V415 = 0x0
0x4dd: V416 = S[0x0]
0x4de: V417 = 0xff
0x4e0: V418 = AND 0xff V416
0x4e1: V419 = 0x3
0x4e4: V420 = GT V418 0x3
0x4e5: V421 = ISZERO V420
0x4e6: V422 = 0x4eb
0x4e9: JUMPI 0x4eb V421
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [V418]
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1, V418]

================================

Block 0x4ea
[0x4ea:0x4ea]
---
Predecessors: [0x4da]
Successors: []
---
0x4ea INVALID
---
0x4ea: INVALID 
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1, V418]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1, V418]

================================

Block 0x4eb
[0x4eb:0x4f0]
---
Predecessors: [0x4da]
Successors: [0x4f1, 0x4f5]
---
0x4eb JUMPDEST
0x4ec EQ
0x4ed PUSH2 0x4f5
0x4f0 JUMPI
---
0x4eb: JUMPDEST 
0x4ec: V423 = EQ V418 0x1
0x4ed: V424 = 0x4f5
0x4f0: JUMPI 0x4f5 V423
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1, V418]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x4f1
[0x4f1:0x4f4]
---
Predecessors: [0x4eb]
Successors: []
---
0x4f1 PUSH1 0x0
0x4f3 DUP1
0x4f4 REVERT
---
0x4f1: V425 = 0x0
0x4f4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x4f5
[0x4f5:0x4f9]
---
Predecessors: [0x4eb]
Successors: [0x4fa]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x0
0x4f8 SWAP3
0x4f9 POP
---
0x4f5: JUMPDEST 
0x4f6: V426 = 0x0
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x4fa
[0x4fa:0x503]
---
Predecessors: [0x4f5, 0x61d]
Successors: [0x504, 0x628]
---
0x4fa JUMPDEST
0x4fb PUSH1 0x1
0x4fd SLOAD
0x4fe DUP4
0x4ff GT
0x500 PUSH2 0x628
0x503 JUMPI
---
0x4fa: JUMPDEST 
0x4fb: V427 = 0x1
0x4fd: V428 = S[0x1]
0x4ff: V429 = GT S2 V428
0x500: V430 = 0x628
0x503: JUMPI 0x628 V429
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]

================================

Block 0x504
[0x504:0x51a]
---
Predecessors: [0x4fa]
Successors: [0x51b, 0x51c]
---
0x504 CALLER
0x505 PUSH1 0x1
0x507 PUSH1 0xa0
0x509 PUSH1 0x2
0x50b EXP
0x50c SUB
0x50d AND
0x50e PUSH1 0x1
0x510 DUP5
0x511 DUP2
0x512 SLOAD
0x513 DUP2
0x514 LT
0x515 ISZERO
0x516 ISZERO
0x517 PUSH2 0x51c
0x51a JUMPI
---
0x504: V431 = CALLER
0x505: V432 = 0x1
0x507: V433 = 0xa0
0x509: V434 = 0x2
0x50b: V435 = EXP 0x2 0xa0
0x50c: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50d: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x50e: V438 = 0x1
0x512: V439 = S[0x1]
0x514: V440 = LT S2 V439
0x515: V441 = ISZERO V440
0x516: V442 = ISZERO V441
0x517: V443 = 0x51c
0x51a: JUMPI 0x51c V442
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, V437, 0x1, S2]
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1, V437, 0x1, S2]

================================

Block 0x51b
[0x51b:0x51b]
---
Predecessors: [0x504]
Successors: []
---
0x51b INVALID
---
0x51b: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V437, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V437, 0x1, S0]

================================

Block 0x51c
[0x51c:0x52c]
---
Predecessors: [0x504]
Successors: [0x52d]
---
0x51c JUMPDEST
0x51d SWAP1
0x51e PUSH1 0x0
0x520 MSTORE
0x521 PUSH1 0x20
0x523 PUSH1 0x0
0x525 SHA3
0x526 SWAP1
0x527 PUSH1 0x2
0x529 MUL
0x52a ADD
0x52b PUSH1 0x0
---
0x51c: JUMPDEST 
0x51e: V444 = 0x0
0x520: M[0x0] = 0x1
0x521: V445 = 0x20
0x523: V446 = 0x0
0x525: V447 = SHA3 0x0 0x20
0x527: V448 = 0x2
0x529: V449 = MUL 0x2 S0
0x52a: V450 = ADD V449 V447
0x52b: V451 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V437, 0x1, S0]
Stack pops: 2
Stack additions: [V450, 0x0]
Exit stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V437, V450, 0x0]

================================

Block 0x52d
[0x52d:0x541]
---
Predecessors: [0x51c]
Successors: [0x542, 0x61c]
---
0x52d JUMPDEST
0x52e POP
0x52f PUSH1 0x1
0x531 ADD
0x532 SLOAD
0x533 PUSH1 0x1
0x535 PUSH1 0xa0
0x537 PUSH1 0x2
0x539 EXP
0x53a SUB
0x53b AND
0x53c EQ
0x53d ISZERO
0x53e PUSH2 0x61c
0x541 JUMPI
---
0x52d: JUMPDEST 
0x52f: V452 = 0x1
0x531: V453 = ADD 0x1 V450
0x532: V454 = S[V453]
0x533: V455 = 0x1
0x535: V456 = 0xa0
0x537: V457 = 0x2
0x539: V458 = EXP 0x2 0xa0
0x53a: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53b: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x53c: V461 = EQ V460 V437
0x53d: V462 = ISZERO V461
0x53e: V463 = 0x61c
0x541: JUMPI 0x61c V462
---
Entry stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V437, V450, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S5, 0x0, 0x1]

================================

Block 0x542
[0x542:0x54d]
---
Predecessors: [0x52d]
Successors: [0x54e, 0x54f]
---
0x542 PUSH1 0x1
0x544 DUP1
0x545 SLOAD
0x546 DUP5
0x547 SWAP1
0x548 DUP2
0x549 LT
0x54a PUSH2 0x54f
0x54d JUMPI
---
0x542: V464 = 0x1
0x545: V465 = S[0x1]
0x549: V466 = LT S2 V465
0x54a: V467 = 0x54f
0x54d: JUMPI 0x54f V466
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, S2]
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1, 0x1, S2]

================================

Block 0x54e
[0x54e:0x54e]
---
Predecessors: [0x542]
Successors: []
---
0x54e INVALID
---
0x54e: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, 0x1, S0]

================================

Block 0x54f
[0x54f:0x55f]
---
Predecessors: [0x542]
Successors: [0x560]
---
0x54f JUMPDEST
0x550 SWAP1
0x551 PUSH1 0x0
0x553 MSTORE
0x554 PUSH1 0x20
0x556 PUSH1 0x0
0x558 SHA3
0x559 SWAP1
0x55a PUSH1 0x2
0x55c MUL
0x55d ADD
0x55e PUSH1 0x0
---
0x54f: JUMPDEST 
0x551: V468 = 0x0
0x553: M[0x0] = 0x1
0x554: V469 = 0x20
0x556: V470 = 0x0
0x558: V471 = SHA3 0x0 0x20
0x55a: V472 = 0x2
0x55c: V473 = MUL 0x2 S0
0x55d: V474 = ADD V473 V471
0x55e: V475 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, 0x1, S0]
Stack pops: 2
Stack additions: [V474, 0x0]
Exit stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, V474, 0x0]

================================

Block 0x560
[0x560:0x574]
---
Predecessors: [0x54f]
Successors: [0x575, 0x576]
---
0x560 JUMPDEST
0x561 POP
0x562 SLOAD
0x563 PUSH1 0x1
0x565 DUP1
0x566 SLOAD
0x567 SWAP2
0x568 SWAP4
0x569 POP
0x56a PUSH1 0x0
0x56c SWAP2
0x56d DUP6
0x56e SWAP1
0x56f DUP2
0x570 LT
0x571 PUSH2 0x576
0x574 JUMPI
---
0x560: JUMPDEST 
0x562: V476 = S[V474]
0x563: V477 = 0x1
0x566: V478 = S[0x1]
0x56a: V479 = 0x0
0x570: V480 = LT S4 V478
0x571: V481 = 0x576
0x574: JUMPI 0x576 V480
---
Entry stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, V474, 0x0]
Stack pops: 5
Stack additions: [S4, V476, S2, 0x0, 0x1, S4]
Exit stack: [V12, 0x256, 0x0, S4, V476, 0x1, 0x0, 0x1, S4]

================================

Block 0x575
[0x575:0x575]
---
Predecessors: [0x560]
Successors: []
---
0x575 INVALID
---
0x575: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S5, V476, 0x1, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S5, V476, 0x1, 0x0, 0x1, S0]

================================

Block 0x576
[0x576:0x586]
---
Predecessors: [0x560]
Successors: [0x587]
---
0x576 JUMPDEST
0x577 SWAP1
0x578 PUSH1 0x0
0x57a MSTORE
0x57b PUSH1 0x20
0x57d PUSH1 0x0
0x57f SHA3
0x580 SWAP1
0x581 PUSH1 0x2
0x583 MUL
0x584 ADD
0x585 PUSH1 0x0
---
0x576: JUMPDEST 
0x578: V482 = 0x0
0x57a: M[0x0] = 0x1
0x57b: V483 = 0x20
0x57d: V484 = 0x0
0x57f: V485 = SHA3 0x0 0x20
0x581: V486 = 0x2
0x583: V487 = MUL 0x2 S0
0x584: V488 = ADD V487 V485
0x585: V489 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S5, V476, 0x1, 0x0, 0x1, S0]
Stack pops: 2
Stack additions: [V488, 0x0]
Exit stack: [V12, 0x256, 0x0, S5, V476, 0x1, 0x0, V488, 0x0]

================================

Block 0x587
[0x587:0x595]
---
Predecessors: [0x576]
Successors: [0x596, 0x597]
---
0x587 JUMPDEST
0x588 POP
0x589 SSTORE
0x58a PUSH1 0x1
0x58c DUP1
0x58d SLOAD
0x58e DUP5
0x58f SWAP1
0x590 DUP2
0x591 LT
0x592 PUSH2 0x597
0x595 JUMPI
---
0x587: JUMPDEST 
0x589: S[V488] = 0x0
0x58a: V490 = 0x1
0x58d: V491 = S[0x1]
0x591: V492 = LT S5 V491
0x592: V493 = 0x597
0x595: JUMPI 0x597 V492
---
Entry stack: [V12, 0x256, 0x0, S5, V476, 0x1, 0x0, V488, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x1, S5]
Exit stack: [V12, 0x256, 0x0, S5, V476, 0x1, 0x1, S5]

================================

Block 0x596
[0x596:0x596]
---
Predecessors: [0x587]
Successors: []
---
0x596 INVALID
---
0x596: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S4, V476, 0x1, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S4, V476, 0x1, 0x1, S0]

================================

Block 0x597
[0x597:0x5a7]
---
Predecessors: [0x587]
Successors: [0x5a8]
---
0x597 JUMPDEST
0x598 SWAP1
0x599 PUSH1 0x0
0x59b MSTORE
0x59c PUSH1 0x20
0x59e PUSH1 0x0
0x5a0 SHA3
0x5a1 SWAP1
0x5a2 PUSH1 0x2
0x5a4 MUL
0x5a5 ADD
0x5a6 PUSH1 0x0
---
0x597: JUMPDEST 
0x599: V494 = 0x0
0x59b: M[0x0] = 0x1
0x59c: V495 = 0x20
0x59e: V496 = 0x0
0x5a0: V497 = SHA3 0x0 0x20
0x5a2: V498 = 0x2
0x5a4: V499 = MUL 0x2 S0
0x5a5: V500 = ADD V499 V497
0x5a6: V501 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S4, V476, 0x1, 0x1, S0]
Stack pops: 2
Stack additions: [V500, 0x0]
Exit stack: [V12, 0x256, 0x0, S4, V476, 0x1, V500, 0x0]

================================

Block 0x5a8
[0x5a8:0x5d8]
---
Predecessors: [0x597]
Successors: [0x5d9, 0x604]
---
0x5a8 JUMPDEST
0x5a9 POP
0x5aa PUSH1 0x1
0x5ac ADD
0x5ad SLOAD
0x5ae PUSH1 0x1
0x5b0 PUSH1 0xa0
0x5b2 PUSH1 0x2
0x5b4 EXP
0x5b5 SUB
0x5b6 AND
0x5b7 DUP3
0x5b8 ISZERO
0x5b9 PUSH2 0x8fc
0x5bc MUL
0x5bd DUP4
0x5be PUSH1 0x40
0x5c0 MLOAD
0x5c1 PUSH1 0x0
0x5c3 PUSH1 0x40
0x5c5 MLOAD
0x5c6 DUP1
0x5c7 DUP4
0x5c8 SUB
0x5c9 DUP2
0x5ca DUP6
0x5cb DUP9
0x5cc DUP9
0x5cd CALL
0x5ce SWAP4
0x5cf POP
0x5d0 POP
0x5d1 POP
0x5d2 POP
0x5d3 ISZERO
0x5d4 ISZERO
0x5d5 PUSH2 0x604
0x5d8 JUMPI
---
0x5a8: JUMPDEST 
0x5aa: V502 = 0x1
0x5ac: V503 = ADD 0x1 V500
0x5ad: V504 = S[V503]
0x5ae: V505 = 0x1
0x5b0: V506 = 0xa0
0x5b2: V507 = 0x2
0x5b4: V508 = EXP 0x2 0xa0
0x5b5: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b6: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x5b8: V511 = ISZERO V476
0x5b9: V512 = 0x8fc
0x5bc: V513 = MUL 0x8fc V511
0x5be: V514 = 0x40
0x5c0: V515 = M[0x40]
0x5c1: V516 = 0x0
0x5c3: V517 = 0x40
0x5c5: V518 = M[0x40]
0x5c8: V519 = SUB V515 V518
0x5cd: V520 = CALL V513 V510 V476 V518 V519 V518 0x0
0x5d3: V521 = ISZERO V520
0x5d4: V522 = ISZERO V521
0x5d5: V523 = 0x604
0x5d8: JUMPI 0x604 V522
---
Entry stack: [V12, 0x256, 0x0, S4, V476, 0x1, V500, 0x0]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V12, 0x256, 0x0, S4, V476, 0x1]

================================

Block 0x5d9
[0x5d9:0x5e6]
---
Predecessors: [0x5a8]
Successors: [0x5e7, 0x5e8]
---
0x5d9 DUP2
0x5da PUSH1 0x1
0x5dc DUP5
0x5dd DUP2
0x5de SLOAD
0x5df DUP2
0x5e0 LT
0x5e1 ISZERO
0x5e2 ISZERO
0x5e3 PUSH2 0x5e8
0x5e6 JUMPI
---
0x5da: V524 = 0x1
0x5de: V525 = S[0x1]
0x5e0: V526 = LT S2 V525
0x5e1: V527 = ISZERO V526
0x5e2: V528 = ISZERO V527
0x5e3: V529 = 0x5e8
0x5e6: JUMPI 0x5e8 V528
---
Entry stack: [V12, 0x256, 0x0, S2, V476, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, S1, 0x1, S2]
Exit stack: [V12, 0x256, 0x0, S2, V476, 0x1, V476, 0x1, S2]

================================

Block 0x5e7
[0x5e7:0x5e7]
---
Predecessors: [0x5d9]
Successors: []
---
0x5e7 INVALID
---
0x5e7: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S5, V476, 0x1, V476, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S5, V476, 0x1, V476, 0x1, S0]

================================

Block 0x5e8
[0x5e8:0x5f8]
---
Predecessors: [0x5d9]
Successors: [0x5f9]
---
0x5e8 JUMPDEST
0x5e9 SWAP1
0x5ea PUSH1 0x0
0x5ec MSTORE
0x5ed PUSH1 0x20
0x5ef PUSH1 0x0
0x5f1 SHA3
0x5f2 SWAP1
0x5f3 PUSH1 0x2
0x5f5 MUL
0x5f6 ADD
0x5f7 PUSH1 0x0
---
0x5e8: JUMPDEST 
0x5ea: V530 = 0x0
0x5ec: M[0x0] = 0x1
0x5ed: V531 = 0x20
0x5ef: V532 = 0x0
0x5f1: V533 = SHA3 0x0 0x20
0x5f3: V534 = 0x2
0x5f5: V535 = MUL 0x2 S0
0x5f6: V536 = ADD V535 V533
0x5f7: V537 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S5, V476, 0x1, V476, 0x1, S0]
Stack pops: 2
Stack additions: [V536, 0x0]
Exit stack: [V12, 0x256, 0x0, S5, V476, 0x1, V476, V536, 0x0]

================================

Block 0x5f9
[0x5f9:0x603]
---
Predecessors: [0x5e8]
Successors: [0x62d]
---
0x5f9 JUMPDEST
0x5fa POP
0x5fb SSTORE
0x5fc PUSH1 0x0
0x5fe SWAP4
0x5ff POP
0x600 PUSH2 0x62d
0x603 JUMP
---
0x5f9: JUMPDEST 
0x5fb: S[V536] = V476
0x5fc: V538 = 0x0
0x600: V539 = 0x62d
0x603: JUMP 0x62d
---
Entry stack: [V12, 0x256, 0x0, S5, V476, 0x1, V476, V536, 0x0]
Stack pops: 7
Stack additions: [0x0, S5, S4, S3]
Exit stack: [V12, 0x256, 0x0, S5, V476, 0x1]

================================

Block 0x604
[0x604:0x612]
---
Predecessors: [0x5a8]
Successors: [0x613]
---
0x604 JUMPDEST
0x605 PUSH1 0x2
0x607 DUP1
0x608 SLOAD
0x609 DUP4
0x60a SWAP1
0x60b SUB
0x60c SWAP1
0x60d DUP2
0x60e SWAP1
0x60f SSTORE
0x610 PUSH1 0x3
0x612 SSTORE
---
0x604: JUMPDEST 
0x605: V540 = 0x2
0x608: V541 = S[0x2]
0x60b: V542 = SUB V541 V476
0x60f: S[0x2] = V542
0x610: V543 = 0x3
0x612: S[0x3] = V542
---
Entry stack: [V12, 0x256, 0x0, S2, V476, 0x1]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x256, 0x0, S2, V476, 0x1]

================================

Block 0x613
[0x613:0x61b]
---
Predecessors: [0x604]
Successors: [0x62d]
---
0x613 JUMPDEST
0x614 PUSH1 0x1
0x616 SWAP4
0x617 POP
0x618 PUSH2 0x62d
0x61b JUMP
---
0x613: JUMPDEST 
0x614: V544 = 0x1
0x618: V545 = 0x62d
0x61b: JUMP 0x62d
---
Entry stack: [V12, 0x256, 0x0, S2, V476, 0x1]
Stack pops: 4
Stack additions: [0x1, S2, S1, S0]
Exit stack: [V12, 0x256, 0x1, S2, V476, 0x1]

================================

Block 0x61c
[0x61c:0x61c]
---
Predecessors: [0x52d]
Successors: [0x61d]
---
0x61c JUMPDEST
---
0x61c: JUMPDEST 
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]

================================

Block 0x61d
[0x61d:0x627]
---
Predecessors: [0x61c]
Successors: [0x4fa]
---
0x61d JUMPDEST
0x61e PUSH1 0x1
0x620 SWAP1
0x621 SWAP3
0x622 ADD
0x623 SWAP2
0x624 PUSH2 0x4fa
0x627 JUMP
---
0x61d: JUMPDEST 
0x61e: V546 = 0x1
0x622: V547 = ADD S2 0x1
0x624: V548 = 0x4fa
0x627: JUMP 0x4fa
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [V547, S1, S0]
Exit stack: [V12, 0x256, 0x0, V547, 0x0, 0x1]

================================

Block 0x628
[0x628:0x62c]
---
Predecessors: [0x4fa]
Successors: [0x62d]
---
0x628 JUMPDEST
0x629 PUSH1 0x0
0x62b SWAP4
0x62c POP
---
0x628: JUMPDEST 
0x629: V549 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]

================================

Block 0x62d
[0x62d:0x62d]
---
Predecessors: [0x5f9, 0x613, 0x628]
Successors: [0x62e]
---
0x62d JUMPDEST
---
0x62d: JUMPDEST 
---
Entry stack: [V12, 0x256, {0x0, 0x1}, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, {0x0, 0x1}, S2, S1, 0x1]

================================

Block 0x62e
[0x62e:0x633]
---
Predecessors: [0x62d]
Successors: [0x256]
---
0x62e JUMPDEST
0x62f POP
0x630 POP
0x631 POP
0x632 SWAP1
0x633 JUMP
---
0x62e: JUMPDEST 
0x633: JUMP 0x256
---
Entry stack: [V12, 0x256, {0x0, 0x1}, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x634
[0x634:0x63c]
---
Predecessors: [0x275]
Successors: [0x27d]
---
0x634 JUMPDEST
0x635 PUSH1 0x0
0x637 SLOAD
0x638 PUSH1 0xff
0x63a AND
0x63b DUP2
0x63c JUMP
---
0x634: JUMPDEST 
0x635: V550 = 0x0
0x637: V551 = S[0x0]
0x638: V552 = 0xff
0x63a: V553 = AND 0xff V551
0x63c: JUMP 0x27d
---
Entry stack: [V12, 0x27d]
Stack pops: 1
Stack additions: [S0, V553]
Exit stack: [V12, 0x27d, V553]

================================

Block 0x63d
[0x63d:0x640]
---
Predecessors: [0x2ac, 0x3b2, 0x426, 0x480]
Successors: [0x641]
---
0x63d JUMPDEST
0x63e PUSH1 0x2
0x640 DUP1
---
0x63d: JUMPDEST 
0x63e: V554 = 0x2
---
Entry stack: [V12, 0x12a, 0x0, V659, S2, S1, {0xe6, 0x3f4, 0x4c2}]
Stack pops: 0
Stack additions: [0x2, 0x2]
Exit stack: [V12, 0x12a, 0x0, V659, S2, S1, {0xe6, 0x3f4, 0x4c2}, 0x2, 0x2]

================================

Block 0x641
[0x641:0x650]
---
Predecessors: [0x63d, 0x958]
Successors: [0x651, 0x652]
---
0x641 JUMPDEST
0x642 PUSH1 0x0
0x644 SLOAD
0x645 PUSH1 0xff
0x647 AND
0x648 PUSH1 0x3
0x64a DUP2
0x64b GT
0x64c ISZERO
0x64d PUSH2 0x652
0x650 JUMPI
---
0x641: JUMPDEST 
0x642: V555 = 0x0
0x644: V556 = S[0x0]
0x645: V557 = 0xff
0x647: V558 = AND 0xff V556
0x648: V559 = 0x3
0x64b: V560 = GT V558 0x3
0x64c: V561 = ISZERO V560
0x64d: V562 = 0x652
0x650: JUMPI 0x652 V561
---
Entry stack: [V12, 0x12a, 0x0, V659, S4, S3, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}, {0x1, 0x2}]
Stack pops: 0
Stack additions: [V558]
Exit stack: [V12, 0x12a, 0x0, V659, S4, S3, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}, {0x1, 0x2}, V558]

================================

Block 0x651
[0x651:0x651]
---
Predecessors: [0x641]
Successors: []
---
0x651 INVALID
---
0x651: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, V659, S5, S4, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}, {0x1, 0x2}, V558]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S5, S4, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}, {0x1, 0x2}, V558]

================================

Block 0x652
[0x652:0x657]
---
Predecessors: [0x641, 0x960]
Successors: [0x658, 0x65c]
---
0x652 JUMPDEST
0x653 EQ
0x654 PUSH2 0x65c
0x657 JUMPI
---
0x652: JUMPDEST 
0x653: V563 = EQ S0 {0x1, 0x2}
0x654: V564 = 0x65c
0x657: JUMPI 0x65c V563
---
Entry stack: [V12, 0x12a, 0x0, V659, S5, S4, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}, {0x1, 0x2}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S5, S4, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]

================================

Block 0x658
[0x658:0x65b]
---
Predecessors: [0x652]
Successors: []
---
0x658 PUSH1 0x0
0x65a DUP1
0x65b REVERT
---
0x658: V565 = 0x0
0x65b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]

================================

Block 0x65c
[0x65c:0x690]
---
Predecessors: [0x652, 0x970]
Successors: [0x691, 0x695]
---
0x65c JUMPDEST
0x65d PUSH1 0xb
0x65f SLOAD
0x660 PUSH1 0x1
0x662 PUSH1 0xa0
0x664 PUSH1 0x2
0x666 EXP
0x667 SUB
0x668 SWAP1
0x669 DUP2
0x66a AND
0x66b SWAP1
0x66c ADDRESS
0x66d AND
0x66e BALANCE
0x66f DUP1
0x670 ISZERO
0x671 PUSH2 0x8fc
0x674 MUL
0x675 SWAP1
0x676 PUSH1 0x40
0x678 MLOAD
0x679 PUSH1 0x0
0x67b PUSH1 0x40
0x67d MLOAD
0x67e DUP1
0x67f DUP4
0x680 SUB
0x681 DUP2
0x682 DUP6
0x683 DUP9
0x684 DUP9
0x685 CALL
0x686 SWAP4
0x687 POP
0x688 POP
0x689 POP
0x68a POP
0x68b ISZERO
0x68c ISZERO
0x68d PUSH2 0x695
0x690 JUMPI
---
0x65c: JUMPDEST 
0x65d: V566 = 0xb
0x65f: V567 = S[0xb]
0x660: V568 = 0x1
0x662: V569 = 0xa0
0x664: V570 = 0x2
0x666: V571 = EXP 0x2 0xa0
0x667: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66a: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x66c: V574 = ADDRESS
0x66d: V575 = AND V574 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V576 = BALANCE V575
0x670: V577 = ISZERO V576
0x671: V578 = 0x8fc
0x674: V579 = MUL 0x8fc V577
0x676: V580 = 0x40
0x678: V581 = M[0x40]
0x679: V582 = 0x0
0x67b: V583 = 0x40
0x67d: V584 = M[0x40]
0x680: V585 = SUB V581 V584
0x685: V586 = CALL V579 V573 V576 V584 V585 V584 0x0
0x68b: V587 = ISZERO V586
0x68c: V588 = ISZERO V587
0x68d: V589 = 0x695
0x690: JUMPI 0x695 V588
---
Entry stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]

================================

Block 0x691
[0x691:0x694]
---
Predecessors: [0x65c]
Successors: []
---
0x691 PUSH1 0x0
0x693 DUP1
0x694 REVERT
---
0x691: V590 = 0x0
0x694: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]

================================

Block 0x695
[0x695:0x6a4]
---
Predecessors: [0x65c, 0x977]
Successors: [0x6a5]
---
0x695 JUMPDEST
0x696 PUSH1 0x0
0x698 DUP1
0x699 SLOAD
0x69a PUSH1 0x3
0x69c SWAP2
0x69d SWAP1
0x69e PUSH1 0xff
0x6a0 NOT
0x6a1 AND
0x6a2 PUSH1 0x1
0x6a4 DUP4
---
0x695: JUMPDEST 
0x696: V591 = 0x0
0x699: V592 = S[0x0]
0x69a: V593 = 0x3
0x69e: V594 = 0xff
0x6a0: V595 = NOT 0xff
0x6a1: V596 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V592
0x6a2: V597 = 0x1
---
Entry stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]
Stack pops: 0
Stack additions: [0x3, 0x0, V596, 0x1, 0x3]
Exit stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}, 0x3, 0x0, V596, 0x1, 0x3]

================================

Block 0x6a5
[0x6a5:0x6f8]
---
Predecessors: [0x695, 0x9b0]
Successors: [0x6f9]
---
0x6a5 JUMPDEST
0x6a6 MUL
0x6a7 OR
0x6a8 SWAP1
0x6a9 SSTORE
0x6aa POP
0x6ab PUSH1 0x0
0x6ad PUSH1 0x3
0x6af SSTORE
0x6b0 PUSH1 0xb
0x6b2 SLOAD
0x6b3 PUSH32 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x6d4 SWAP1
0x6d5 PUSH1 0x1
0x6d7 PUSH1 0xa0
0x6d9 PUSH1 0x2
0x6db EXP
0x6dc SUB
0x6dd AND
0x6de PUSH1 0x40
0x6e0 MLOAD
0x6e1 PUSH1 0x1
0x6e3 PUSH1 0xa0
0x6e5 PUSH1 0x2
0x6e7 EXP
0x6e8 SUB
0x6e9 SWAP1
0x6ea SWAP2
0x6eb AND
0x6ec DUP2
0x6ed MSTORE
0x6ee PUSH1 0x20
0x6f0 ADD
0x6f1 PUSH1 0x40
0x6f3 MLOAD
0x6f4 DUP1
0x6f5 SWAP2
0x6f6 SUB
0x6f7 SWAP1
0x6f8 LOG1
---
0x6a5: JUMPDEST 
0x6a6: V598 = MUL 0x3 0x1
0x6a7: V599 = OR 0x3 S2
0x6a9: S[0x0] = V599
0x6ab: V600 = 0x0
0x6ad: V601 = 0x3
0x6af: S[0x3] = 0x0
0x6b0: V602 = 0xb
0x6b2: V603 = S[0xb]
0x6b3: V604 = 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x6d5: V605 = 0x1
0x6d7: V606 = 0xa0
0x6d9: V607 = 0x2
0x6db: V608 = EXP 0x2 0xa0
0x6dc: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dd: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x6de: V611 = 0x40
0x6e0: V612 = M[0x40]
0x6e1: V613 = 0x1
0x6e3: V614 = 0xa0
0x6e5: V615 = 0x2
0x6e7: V616 = EXP 0x2 0xa0
0x6e8: V617 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6eb: V618 = AND V610 0xffffffffffffffffffffffffffffffffffffffff
0x6ed: M[V612] = V618
0x6ee: V619 = 0x20
0x6f0: V620 = ADD 0x20 V612
0x6f1: V621 = 0x40
0x6f3: V622 = M[0x40]
0x6f6: V623 = SUB V620 V622
0x6f8: LOG V622 V623 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
---
Entry stack: [V12, 0x12a, 0x0, V659, S8, S7, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}, 0x3, 0x0, S2, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S8, S7, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]

================================

Block 0x6f9
[0x6f9:0x6f9]
---
Predecessors: [0x6a5]
Successors: [0x6fa]
---
0x6f9 JUMPDEST
---
0x6f9: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]

================================

Block 0x6fa
[0x6fa:0x6fc]
---
Predecessors: [0x6f9]
Successors: [0xe6, 0x3f4, 0x4c2]
---
0x6fa JUMPDEST
0x6fb POP
0x6fc JUMP
---
0x6fa: JUMPDEST 
0x6fc: JUMP {0xe6, 0x3f4, 0x4c2}
---
Entry stack: [V12, 0x12a, 0x0, V659, S3, S2, {0xe6, 0x3f4, 0x4c2}, {0x1, 0x2}]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, S3, S2]

================================

Block 0x6fd
[0x6fd:0x702]
---
Predecessors: [0x2c1]
Successors: [0x12a]
---
0x6fd JUMPDEST
0x6fe PUSH1 0x2
0x700 SLOAD
0x701 DUP2
0x702 JUMP
---
0x6fd: JUMPDEST 
0x6fe: V624 = 0x2
0x700: V625 = S[0x2]
0x702: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V625]
Exit stack: [V12, 0x12a, V625]

================================

Block 0x703
[0x703:0x708]
---
Predecessors: [0x2e6]
Successors: [0x12a]
---
0x703 JUMPDEST
0x704 PUSH1 0x3
0x706 SLOAD
0x707 DUP2
0x708 JUMP
---
0x703: JUMPDEST 
0x704: V626 = 0x3
0x706: V627 = S[0x3]
0x708: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V627]
Exit stack: [V12, 0x12a, V627]

================================

Block 0x709
[0x709:0x70e]
---
Predecessors: [0x300]
Successors: [0x70f]
---
0x709 JUMPDEST
0x70a PUSH1 0x0
0x70c DUP1
0x70d DUP1
0x70e DUP1
---
0x709: JUMPDEST 
0x70a: V628 = 0x0
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x70f
[0x70f:0x71e]
---
Predecessors: [0x709]
Successors: [0x71f, 0x720]
---
0x70f JUMPDEST
0x710 PUSH1 0x0
0x712 SLOAD
0x713 PUSH1 0xff
0x715 AND
0x716 PUSH1 0x3
0x718 DUP2
0x719 GT
0x71a ISZERO
0x71b PUSH2 0x720
0x71e JUMPI
---
0x70f: JUMPDEST 
0x710: V629 = 0x0
0x712: V630 = S[0x0]
0x713: V631 = 0xff
0x715: V632 = AND 0xff V630
0x716: V633 = 0x3
0x719: V634 = GT V632 0x3
0x71a: V635 = ISZERO V634
0x71b: V636 = 0x720
0x71e: JUMPI 0x720 V635
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V632]
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0, V632]

================================

Block 0x71f
[0x71f:0x71f]
---
Predecessors: [0x70f]
Successors: []
---
0x71f INVALID
---
0x71f: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0, V632]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0, V632]

================================

Block 0x720
[0x720:0x725]
---
Predecessors: [0x70f]
Successors: [0x726, 0x72a]
---
0x720 JUMPDEST
0x721 EQ
0x722 PUSH2 0x72a
0x725 JUMPI
---
0x720: JUMPDEST 
0x721: V637 = EQ V632 0x0
0x722: V638 = 0x72a
0x725: JUMPI 0x72a V637
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0, V632]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x726
[0x726:0x729]
---
Predecessors: [0x720]
Successors: []
---
0x726 PUSH1 0x0
0x728 DUP1
0x729 REVERT
---
0x726: V639 = 0x0
0x729: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x72a
[0x72a:0x734]
---
Predecessors: [0x720]
Successors: [0x735, 0x739]
---
0x72a JUMPDEST
0x72b PUSH1 0x6
0x72d SLOAD
0x72e CALLVALUE
0x72f LT
0x730 ISZERO
0x731 PUSH2 0x739
0x734 JUMPI
---
0x72a: JUMPDEST 
0x72b: V640 = 0x6
0x72d: V641 = S[0x6]
0x72e: V642 = CALLVALUE
0x72f: V643 = LT V642 V641
0x730: V644 = ISZERO V643
0x731: V645 = 0x739
0x734: JUMPI 0x739 V644
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x735
[0x735:0x738]
---
Predecessors: [0x72a]
Successors: []
---
0x735 PUSH1 0x0
0x737 DUP1
0x738 REVERT
---
0x735: V646 = 0x0
0x738: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x739
[0x739:0x744]
---
Predecessors: [0x72a]
Successors: [0x745, 0x746]
---
0x739 JUMPDEST
0x73a PUSH1 0x6
0x73c SLOAD
0x73d CALLVALUE
0x73e DUP2
0x73f ISZERO
0x740 ISZERO
0x741 PUSH2 0x746
0x744 JUMPI
---
0x739: JUMPDEST 
0x73a: V647 = 0x6
0x73c: V648 = S[0x6]
0x73d: V649 = CALLVALUE
0x73f: V650 = ISZERO V648
0x740: V651 = ISZERO V650
0x741: V652 = 0x746
0x744: JUMPI 0x746 V651
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V648, V649]
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, V648, V649]

================================

Block 0x745
[0x745:0x745]
---
Predecessors: [0x739]
Successors: []
---
0x745 INVALID
---
0x745: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, V648, V649]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, V648, V649]

================================

Block 0x746
[0x746:0x74c]
---
Predecessors: [0x739]
Successors: [0x74d, 0x751]
---
0x746 JUMPDEST
0x747 MOD
0x748 ISZERO
0x749 PUSH2 0x751
0x74c JUMPI
---
0x746: JUMPDEST 
0x747: V653 = MOD V649 V648
0x748: V654 = ISZERO V653
0x749: V655 = 0x751
0x74c: JUMPI 0x751 V654
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, V648, V649]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x74d
[0x74d:0x750]
---
Predecessors: [0x746]
Successors: []
---
0x74d PUSH1 0x0
0x74f DUP1
0x750 REVERT
---
0x74d: V656 = 0x0
0x750: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x751
[0x751:0x764]
---
Predecessors: [0x746]
Successors: [0xa98]
---
0x751 JUMPDEST
0x752 PUSH1 0x1
0x754 DUP1
0x755 SLOAD
0x756 CALLVALUE
0x757 SWAP4
0x758 POP
0x759 DUP1
0x75a DUP3
0x75b ADD
0x75c PUSH2 0x765
0x75f DUP4
0x760 DUP3
0x761 PUSH2 0xa98
0x764 JUMP
---
0x751: JUMPDEST 
0x752: V657 = 0x1
0x755: V658 = S[0x1]
0x756: V659 = CALLVALUE
0x75b: V660 = ADD 0x1 V658
0x75c: V661 = 0x765
0x761: V662 = 0xa98
0x764: JUMP 0xa98
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V659, S0, 0x1, V658, V660, 0x765, 0x1, V660]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660]

================================

Block 0x765
[0x765:0x775]
---
Predecessors: [0xac5]
Successors: [0x776]
---
0x765 JUMPDEST
0x766 SWAP2
0x767 PUSH1 0x0
0x769 MSTORE
0x76a PUSH1 0x20
0x76c PUSH1 0x0
0x76e SHA3
0x76f SWAP1
0x770 PUSH1 0x2
0x772 MUL
0x773 ADD
0x774 PUSH1 0x0
---
0x765: JUMPDEST 
0x767: V663 = 0x0
0x769: M[0x0] = 0x1
0x76a: V664 = 0x20
0x76c: V665 = 0x0
0x76e: V666 = SHA3 0x0 0x20
0x770: V667 = 0x2
0x772: V668 = MUL 0x2 V658
0x773: V669 = ADD V668 V666
0x774: V670 = 0x0
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660]
Stack pops: 3
Stack additions: [S0, V669, 0x0]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V660, V669, 0x0]

================================

Block 0x776
[0x776:0x7e5]
---
Predecessors: [0x765]
Successors: [0x7e6, 0x866]
---
0x776 JUMPDEST
0x777 PUSH1 0x40
0x779 DUP1
0x77a MLOAD
0x77b SWAP1
0x77c DUP2
0x77d ADD
0x77e PUSH1 0x40
0x780 MSTORE
0x781 CALLVALUE
0x782 DUP2
0x783 MSTORE
0x784 PUSH1 0x1
0x786 PUSH1 0xa0
0x788 PUSH1 0x2
0x78a EXP
0x78b SUB
0x78c CALLER
0x78d AND
0x78e PUSH1 0x20
0x790 DUP3
0x791 ADD
0x792 MSTORE
0x793 SWAP2
0x794 SWAP1
0x795 POP
0x796 DUP2
0x797 MLOAD
0x798 DUP2
0x799 SSTORE
0x79a PUSH1 0x20
0x79c DUP3
0x79d ADD
0x79e MLOAD
0x79f PUSH1 0x1
0x7a1 SWAP2
0x7a2 SWAP1
0x7a3 SWAP2
0x7a4 ADD
0x7a5 DUP1
0x7a6 SLOAD
0x7a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bc NOT
0x7bd AND
0x7be PUSH1 0x1
0x7c0 PUSH1 0xa0
0x7c2 PUSH1 0x2
0x7c4 EXP
0x7c5 SUB
0x7c6 SWAP1
0x7c7 SWAP3
0x7c8 AND
0x7c9 SWAP2
0x7ca SWAP1
0x7cb SWAP2
0x7cc OR
0x7cd SWAP1
0x7ce SSTORE
0x7cf POP
0x7d0 POP
0x7d1 PUSH1 0x2
0x7d3 DUP1
0x7d4 SLOAD
0x7d5 CALLVALUE
0x7d6 ADD
0x7d7 SWAP1
0x7d8 DUP2
0x7d9 SWAP1
0x7da SSTORE
0x7db PUSH1 0x3
0x7dd SSTORE
0x7de PUSH1 0x8
0x7e0 SLOAD
0x7e1 ISZERO
0x7e2 PUSH2 0x866
0x7e5 JUMPI
---
0x776: JUMPDEST 
0x777: V671 = 0x40
0x77a: V672 = M[0x40]
0x77d: V673 = ADD V672 0x40
0x77e: V674 = 0x40
0x780: M[0x40] = V673
0x781: V675 = CALLVALUE
0x783: M[V672] = V675
0x784: V676 = 0x1
0x786: V677 = 0xa0
0x788: V678 = 0x2
0x78a: V679 = EXP 0x2 0xa0
0x78b: V680 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78c: V681 = CALLER
0x78d: V682 = AND V681 0xffffffffffffffffffffffffffffffffffffffff
0x78e: V683 = 0x20
0x791: V684 = ADD V672 0x20
0x792: M[V684] = V682
0x797: V685 = M[V672]
0x799: S[V669] = V685
0x79a: V686 = 0x20
0x79d: V687 = ADD V672 0x20
0x79e: V688 = M[V687]
0x79f: V689 = 0x1
0x7a4: V690 = ADD 0x1 V669
0x7a6: V691 = S[V690]
0x7a7: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bc: V693 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7bd: V694 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V691
0x7be: V695 = 0x1
0x7c0: V696 = 0xa0
0x7c2: V697 = 0x2
0x7c4: V698 = EXP 0x2 0xa0
0x7c5: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c8: V700 = AND V688 0xffffffffffffffffffffffffffffffffffffffff
0x7cc: V701 = OR V700 V694
0x7ce: S[V690] = V701
0x7d1: V702 = 0x2
0x7d4: V703 = S[0x2]
0x7d5: V704 = CALLVALUE
0x7d6: V705 = ADD V704 V703
0x7da: S[0x2] = V705
0x7db: V706 = 0x3
0x7dd: S[0x3] = V705
0x7de: V707 = 0x8
0x7e0: V708 = S[0x8]
0x7e1: V709 = ISZERO V708
0x7e2: V710 = 0x866
0x7e5: JUMPI 0x866 V709
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V660, V669, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0]

================================

Block 0x7e6
[0x7e6:0x807]
---
Predecessors: [0x776]
Successors: [0x808, 0x809]
---
0x7e6 PUSH1 0x9
0x7e8 SLOAD
0x7e9 PUSH1 0x6
0x7eb SLOAD
0x7ec PUSH1 0x1
0x7ee PUSH1 0xa0
0x7f0 PUSH1 0x2
0x7f2 EXP
0x7f3 SUB
0x7f4 SWAP1
0x7f5 SWAP2
0x7f6 AND
0x7f7 SWAP1
0x7f8 PUSH4 0xa9059cbb
0x7fd SWAP1
0x7fe CALLER
0x7ff SWAP1
0x800 DUP6
0x801 DUP2
0x802 ISZERO
0x803 ISZERO
0x804 PUSH2 0x809
0x807 JUMPI
---
0x7e6: V711 = 0x9
0x7e8: V712 = S[0x9]
0x7e9: V713 = 0x6
0x7eb: V714 = S[0x6]
0x7ec: V715 = 0x1
0x7ee: V716 = 0xa0
0x7f0: V717 = 0x2
0x7f2: V718 = EXP 0x2 0xa0
0x7f3: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f6: V720 = AND V712 0xffffffffffffffffffffffffffffffffffffffff
0x7f8: V721 = 0xa9059cbb
0x7fe: V722 = CALLER
0x802: V723 = ISZERO V714
0x803: V724 = ISZERO V723
0x804: V725 = 0x809
0x807: JUMPI 0x809 V724
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V720, 0xa9059cbb, V722, V714, S1]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V722, V714, V659]

================================

Block 0x808
[0x808:0x808]
---
Predecessors: [0x7e6]
Successors: []
---
0x808 INVALID
---
0x808: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V722, V714, V659]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V722, V714, V659]

================================

Block 0x809
[0x809:0x848]
---
Predecessors: [0x7e6]
Successors: [0x849, 0x84d]
---
0x809 JUMPDEST
0x80a DIV
0x80b PUSH1 0x40
0x80d MLOAD
0x80e PUSH1 0xe0
0x810 PUSH1 0x2
0x812 EXP
0x813 PUSH4 0xffffffff
0x818 DUP6
0x819 AND
0x81a MUL
0x81b DUP2
0x81c MSTORE
0x81d PUSH1 0x1
0x81f PUSH1 0xa0
0x821 PUSH1 0x2
0x823 EXP
0x824 SUB
0x825 SWAP1
0x826 SWAP3
0x827 AND
0x828 PUSH1 0x4
0x82a DUP4
0x82b ADD
0x82c MSTORE
0x82d PUSH1 0x24
0x82f DUP3
0x830 ADD
0x831 MSTORE
0x832 PUSH1 0x44
0x834 ADD
0x835 PUSH1 0x0
0x837 PUSH1 0x40
0x839 MLOAD
0x83a DUP1
0x83b DUP4
0x83c SUB
0x83d DUP2
0x83e PUSH1 0x0
0x840 DUP8
0x841 DUP1
0x842 EXTCODESIZE
0x843 ISZERO
0x844 ISZERO
0x845 PUSH2 0x84d
0x848 JUMPI
---
0x809: JUMPDEST 
0x80a: V726 = DIV V659 V714
0x80b: V727 = 0x40
0x80d: V728 = M[0x40]
0x80e: V729 = 0xe0
0x810: V730 = 0x2
0x812: V731 = EXP 0x2 0xe0
0x813: V732 = 0xffffffff
0x819: V733 = AND 0xa9059cbb 0xffffffff
0x81a: V734 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x81c: M[V728] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x81d: V735 = 0x1
0x81f: V736 = 0xa0
0x821: V737 = 0x2
0x823: V738 = EXP 0x2 0xa0
0x824: V739 = SUB 0x10000000000000000000000000000000000000000 0x1
0x827: V740 = AND V722 0xffffffffffffffffffffffffffffffffffffffff
0x828: V741 = 0x4
0x82b: V742 = ADD V728 0x4
0x82c: M[V742] = V740
0x82d: V743 = 0x24
0x830: V744 = ADD V728 0x24
0x831: M[V744] = V726
0x832: V745 = 0x44
0x834: V746 = ADD 0x44 V728
0x835: V747 = 0x0
0x837: V748 = 0x40
0x839: V749 = M[0x40]
0x83c: V750 = SUB V746 V749
0x83e: V751 = 0x0
0x842: V752 = EXTCODESIZE V720
0x843: V753 = ISZERO V752
0x844: V754 = ISZERO V753
0x845: V755 = 0x84d
0x848: JUMPI 0x84d V754
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V722, V714, V659]
Stack pops: 5
Stack additions: [S4, S3, V746, 0x0, V749, V750, V749, 0x0, S4]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V746, 0x0, V749, V750, V749, 0x0, V720]

================================

Block 0x849
[0x849:0x84c]
---
Predecessors: [0x809]
Successors: []
---
0x849 PUSH1 0x0
0x84b DUP1
0x84c REVERT
---
0x849: V756 = 0x0
0x84c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V746, 0x0, V749, V750, V749, 0x0, V720]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V746, 0x0, V749, V750, V749, 0x0, V720]

================================

Block 0x84d
[0x84d:0x859]
---
Predecessors: [0x809]
Successors: [0x85a, 0x85e]
---
0x84d JUMPDEST
0x84e PUSH2 0x2c6
0x851 GAS
0x852 SUB
0x853 CALL
0x854 ISZERO
0x855 ISZERO
0x856 PUSH2 0x85e
0x859 JUMPI
---
0x84d: JUMPDEST 
0x84e: V757 = 0x2c6
0x851: V758 = GAS
0x852: V759 = SUB V758 0x2c6
0x853: V760 = CALL V759 V720 0x0 V749 V750 V749 0x0
0x854: V761 = ISZERO V760
0x855: V762 = ISZERO V761
0x856: V763 = 0x85e
0x859: JUMPI 0x85e V762
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V746, 0x0, V749, V750, V749, 0x0, V720]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V746]

================================

Block 0x85a
[0x85a:0x85d]
---
Predecessors: [0x84d]
Successors: []
---
0x85a PUSH1 0x0
0x85c DUP1
0x85d REVERT
---
0x85a: V764 = 0x0
0x85d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V746]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V746]

================================

Block 0x85e
[0x85e:0x865]
---
Predecessors: [0x84d]
Successors: [0x8e3]
---
0x85e JUMPDEST
0x85f POP
0x860 POP
0x861 POP
0x862 PUSH2 0x8e3
0x865 JUMP
---
0x85e: JUMPDEST 
0x862: V765 = 0x8e3
0x865: JUMP 0x8e3
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V720, 0xa9059cbb, V746]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0]

================================

Block 0x866
[0x866:0x888]
---
Predecessors: [0x776]
Successors: [0x889, 0x88a]
---
0x866 JUMPDEST
0x867 PUSH1 0x9
0x869 SLOAD
0x86a PUSH1 0x6
0x86c SLOAD
0x86d PUSH1 0x1
0x86f PUSH1 0xa0
0x871 PUSH1 0x2
0x873 EXP
0x874 SUB
0x875 SWAP1
0x876 SWAP2
0x877 AND
0x878 SWAP1
0x879 PUSH4 0x79c65068
0x87e SWAP1
0x87f CALLER
0x880 SWAP1
0x881 DUP6
0x882 DUP2
0x883 ISZERO
0x884 ISZERO
0x885 PUSH2 0x88a
0x888 JUMPI
---
0x866: JUMPDEST 
0x867: V766 = 0x9
0x869: V767 = S[0x9]
0x86a: V768 = 0x6
0x86c: V769 = S[0x6]
0x86d: V770 = 0x1
0x86f: V771 = 0xa0
0x871: V772 = 0x2
0x873: V773 = EXP 0x2 0xa0
0x874: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x877: V775 = AND V767 0xffffffffffffffffffffffffffffffffffffffff
0x879: V776 = 0x79c65068
0x87f: V777 = CALLER
0x883: V778 = ISZERO V769
0x884: V779 = ISZERO V778
0x885: V780 = 0x88a
0x888: JUMPI 0x88a V779
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V775, 0x79c65068, V777, V769, S1]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V777, V769, V659]

================================

Block 0x889
[0x889:0x889]
---
Predecessors: [0x866]
Successors: []
---
0x889 INVALID
---
0x889: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V777, V769, V659]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V777, V769, V659]

================================

Block 0x88a
[0x88a:0x8c9]
---
Predecessors: [0x866]
Successors: [0x8ca, 0x8ce]
---
0x88a JUMPDEST
0x88b DIV
0x88c PUSH1 0x40
0x88e MLOAD
0x88f PUSH1 0xe0
0x891 PUSH1 0x2
0x893 EXP
0x894 PUSH4 0xffffffff
0x899 DUP6
0x89a AND
0x89b MUL
0x89c DUP2
0x89d MSTORE
0x89e PUSH1 0x1
0x8a0 PUSH1 0xa0
0x8a2 PUSH1 0x2
0x8a4 EXP
0x8a5 SUB
0x8a6 SWAP1
0x8a7 SWAP3
0x8a8 AND
0x8a9 PUSH1 0x4
0x8ab DUP4
0x8ac ADD
0x8ad MSTORE
0x8ae PUSH1 0x24
0x8b0 DUP3
0x8b1 ADD
0x8b2 MSTORE
0x8b3 PUSH1 0x44
0x8b5 ADD
0x8b6 PUSH1 0x0
0x8b8 PUSH1 0x40
0x8ba MLOAD
0x8bb DUP1
0x8bc DUP4
0x8bd SUB
0x8be DUP2
0x8bf PUSH1 0x0
0x8c1 DUP8
0x8c2 DUP1
0x8c3 EXTCODESIZE
0x8c4 ISZERO
0x8c5 ISZERO
0x8c6 PUSH2 0x8ce
0x8c9 JUMPI
---
0x88a: JUMPDEST 
0x88b: V781 = DIV V659 V769
0x88c: V782 = 0x40
0x88e: V783 = M[0x40]
0x88f: V784 = 0xe0
0x891: V785 = 0x2
0x893: V786 = EXP 0x2 0xe0
0x894: V787 = 0xffffffff
0x89a: V788 = AND 0x79c65068 0xffffffff
0x89b: V789 = MUL 0x79c65068 0x100000000000000000000000000000000000000000000000000000000
0x89d: M[V783] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x89e: V790 = 0x1
0x8a0: V791 = 0xa0
0x8a2: V792 = 0x2
0x8a4: V793 = EXP 0x2 0xa0
0x8a5: V794 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a8: V795 = AND V777 0xffffffffffffffffffffffffffffffffffffffff
0x8a9: V796 = 0x4
0x8ac: V797 = ADD V783 0x4
0x8ad: M[V797] = V795
0x8ae: V798 = 0x24
0x8b1: V799 = ADD V783 0x24
0x8b2: M[V799] = V781
0x8b3: V800 = 0x44
0x8b5: V801 = ADD 0x44 V783
0x8b6: V802 = 0x0
0x8b8: V803 = 0x40
0x8ba: V804 = M[0x40]
0x8bd: V805 = SUB V801 V804
0x8bf: V806 = 0x0
0x8c3: V807 = EXTCODESIZE V775
0x8c4: V808 = ISZERO V807
0x8c5: V809 = ISZERO V808
0x8c6: V810 = 0x8ce
0x8c9: JUMPI 0x8ce V809
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V777, V769, V659]
Stack pops: 5
Stack additions: [S4, S3, V801, 0x0, V804, V805, V804, 0x0, S4]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V801, 0x0, V804, V805, V804, 0x0, V775]

================================

Block 0x8ca
[0x8ca:0x8cd]
---
Predecessors: [0x88a]
Successors: []
---
0x8ca PUSH1 0x0
0x8cc DUP1
0x8cd REVERT
---
0x8ca: V811 = 0x0
0x8cd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V801, 0x0, V804, V805, V804, 0x0, V775]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V801, 0x0, V804, V805, V804, 0x0, V775]

================================

Block 0x8ce
[0x8ce:0x8da]
---
Predecessors: [0x88a]
Successors: [0x8db, 0x8df]
---
0x8ce JUMPDEST
0x8cf PUSH2 0x2c6
0x8d2 GAS
0x8d3 SUB
0x8d4 CALL
0x8d5 ISZERO
0x8d6 ISZERO
0x8d7 PUSH2 0x8df
0x8da JUMPI
---
0x8ce: JUMPDEST 
0x8cf: V812 = 0x2c6
0x8d2: V813 = GAS
0x8d3: V814 = SUB V813 0x2c6
0x8d4: V815 = CALL V814 V775 0x0 V804 V805 V804 0x0
0x8d5: V816 = ISZERO V815
0x8d6: V817 = ISZERO V816
0x8d7: V818 = 0x8df
0x8da: JUMPI 0x8df V817
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V801, 0x0, V804, V805, V804, 0x0, V775]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V801]

================================

Block 0x8db
[0x8db:0x8de]
---
Predecessors: [0x8ce]
Successors: []
---
0x8db PUSH1 0x0
0x8dd DUP1
0x8de REVERT
---
0x8db: V819 = 0x0
0x8de: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V801]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V801]

================================

Block 0x8df
[0x8df:0x8e2]
---
Predecessors: [0x8ce]
Successors: [0x8e3]
---
0x8df JUMPDEST
0x8e0 POP
0x8e1 POP
0x8e2 POP
---
0x8df: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, V775, 0x79c65068, V801]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0]

================================

Block 0x8e3
[0x8e3:0x945]
---
Predecessors: [0x85e, 0x8df]
Successors: [0x389]
---
0x8e3 JUMPDEST
0x8e4 PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x905 CALLER
0x906 CALLVALUE
0x907 PUSH1 0x2
0x909 SLOAD
0x90a PUSH1 0x40
0x90c MLOAD
0x90d DUP1
0x90e DUP5
0x90f PUSH1 0x1
0x911 PUSH1 0xa0
0x913 PUSH1 0x2
0x915 EXP
0x916 SUB
0x917 AND
0x918 PUSH1 0x1
0x91a PUSH1 0xa0
0x91c PUSH1 0x2
0x91e EXP
0x91f SUB
0x920 AND
0x921 DUP2
0x922 MSTORE
0x923 PUSH1 0x20
0x925 ADD
0x926 DUP4
0x927 DUP2
0x928 MSTORE
0x929 PUSH1 0x20
0x92b ADD
0x92c DUP3
0x92d DUP2
0x92e MSTORE
0x92f PUSH1 0x20
0x931 ADD
0x932 SWAP4
0x933 POP
0x934 POP
0x935 POP
0x936 POP
0x937 PUSH1 0x40
0x939 MLOAD
0x93a DUP1
0x93b SWAP2
0x93c SUB
0x93d SWAP1
0x93e LOG1
0x93f PUSH2 0x946
0x942 PUSH2 0x389
0x945 JUMP
---
0x8e3: JUMPDEST 
0x8e4: V820 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x905: V821 = CALLER
0x906: V822 = CALLVALUE
0x907: V823 = 0x2
0x909: V824 = S[0x2]
0x90a: V825 = 0x40
0x90c: V826 = M[0x40]
0x90f: V827 = 0x1
0x911: V828 = 0xa0
0x913: V829 = 0x2
0x915: V830 = EXP 0x2 0xa0
0x916: V831 = SUB 0x10000000000000000000000000000000000000000 0x1
0x917: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0x918: V833 = 0x1
0x91a: V834 = 0xa0
0x91c: V835 = 0x2
0x91e: V836 = EXP 0x2 0xa0
0x91f: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0x920: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0x922: M[V826] = V838
0x923: V839 = 0x20
0x925: V840 = ADD 0x20 V826
0x928: M[V840] = V822
0x929: V841 = 0x20
0x92b: V842 = ADD 0x20 V840
0x92e: M[V842] = V824
0x92f: V843 = 0x20
0x931: V844 = ADD 0x20 V842
0x937: V845 = 0x40
0x939: V846 = M[0x40]
0x93c: V847 = SUB V844 V846
0x93e: LOG V846 V847 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x93f: V848 = 0x946
0x942: V849 = 0x389
0x945: JUMP 0x389
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0]
Stack pops: 0
Stack additions: [0x946]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x946]

================================

Block 0x946
[0x946:0x94f]
---
Predecessors: [0x4ca]
Successors: [0x950]
---
0x946 JUMPDEST
0x947 PUSH1 0x1
0x949 SLOAD
0x94a PUSH1 0x0
0x94c NOT
0x94d ADD
0x94e SWAP3
0x94f POP
---
0x946: JUMPDEST 
0x947: V850 = 0x1
0x949: V851 = S[0x1]
0x94a: V852 = 0x0
0x94c: V853 = NOT 0x0
0x94d: V854 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V851
---
Entry stack: [V12, 0x12a, 0x0, V659, S0]
Stack pops: 3
Stack additions: [V854, S1, S0]
Exit stack: [V12, 0x12a, V854, V659, S0]

================================

Block 0x950
[0x950:0x950]
---
Predecessors: [0x946]
Successors: [0x951]
---
0x950 JUMPDEST
---
0x950: JUMPDEST 
---
Entry stack: [V12, 0x12a, V854, V659, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V854, V659, S0]

================================

Block 0x951
[0x951:0x951]
---
Predecessors: [0x950]
Successors: [0x952]
---
0x951 JUMPDEST
---
0x951: JUMPDEST 
---
Entry stack: [V12, 0x12a, V854, V659, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V854, V659, S0]

================================

Block 0x952
[0x952:0x952]
---
Predecessors: [0x951]
Successors: [0x953]
---
0x952 JUMPDEST
---
0x952: JUMPDEST 
---
Entry stack: [V12, 0x12a, V854, V659, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V854, V659, S0]

================================

Block 0x953
[0x953:0x957]
---
Predecessors: [0x952]
Successors: [0x12a]
---
0x953 JUMPDEST
0x954 POP
0x955 POP
0x956 SWAP1
0x957 JUMP
---
0x953: JUMPDEST 
0x957: JUMP 0x12a
---
Entry stack: [V12, 0x12a, V854, V659, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, V854]

================================

Block 0x958
[0x958:0x95f]
---
Predecessors: [0x325]
Successors: [0x641]
---
0x958 JUMPDEST
0x959 PUSH1 0x1
0x95b DUP1
0x95c PUSH2 0x641
0x95f JUMP
---
0x958: JUMPDEST 
0x959: V855 = 0x1
0x95c: V856 = 0x641
0x95f: JUMP 0x641
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: [0x1, 0x1]
Exit stack: [V12, 0xe6, 0x1, 0x1]

================================

Block 0x960
[0x960:0x96f]
---
Predecessors: []
Successors: [0x652, 0x970]
---
0x960 JUMPDEST
0x961 PUSH1 0x0
0x963 SLOAD
0x964 PUSH1 0xff
0x966 AND
0x967 PUSH1 0x3
0x969 DUP2
0x96a GT
0x96b ISZERO
0x96c PUSH2 0x652
0x96f JUMPI
---
0x960: JUMPDEST 
0x961: V857 = 0x0
0x963: V858 = S[0x0]
0x964: V859 = 0xff
0x966: V860 = AND 0xff V858
0x967: V861 = 0x3
0x96a: V862 = GT V860 0x3
0x96b: V863 = ISZERO V862
0x96c: V864 = 0x652
0x96f: JUMPI 0x652 V863
---
Entry stack: []
Stack pops: 0
Stack additions: [V860]
Exit stack: [V860]

================================

Block 0x970
[0x970:0x976]
---
Predecessors: [0x960]
Successors: [0x65c, 0x977]
---
0x970 INVALID
0x971 JUMPDEST
0x972 EQ
0x973 PUSH2 0x65c
0x976 JUMPI
---
0x970: INVALID 
0x971: JUMPDEST 
0x972: V865 = EQ S0 S1
0x973: V866 = 0x65c
0x976: JUMPI 0x65c V865
---
Entry stack: [V860]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x977
[0x977:0x9af]
---
Predecessors: [0x970]
Successors: [0x695, 0x9b0]
---
0x977 PUSH1 0x0
0x979 DUP1
0x97a REVERT
0x97b JUMPDEST
0x97c PUSH1 0xb
0x97e SLOAD
0x97f PUSH1 0x1
0x981 PUSH1 0xa0
0x983 PUSH1 0x2
0x985 EXP
0x986 SUB
0x987 SWAP1
0x988 DUP2
0x989 AND
0x98a SWAP1
0x98b ADDRESS
0x98c AND
0x98d BALANCE
0x98e DUP1
0x98f ISZERO
0x990 PUSH2 0x8fc
0x993 MUL
0x994 SWAP1
0x995 PUSH1 0x40
0x997 MLOAD
0x998 PUSH1 0x0
0x99a PUSH1 0x40
0x99c MLOAD
0x99d DUP1
0x99e DUP4
0x99f SUB
0x9a0 DUP2
0x9a1 DUP6
0x9a2 DUP9
0x9a3 DUP9
0x9a4 CALL
0x9a5 SWAP4
0x9a6 POP
0x9a7 POP
0x9a8 POP
0x9a9 POP
0x9aa ISZERO
0x9ab ISZERO
0x9ac PUSH2 0x695
0x9af JUMPI
---
0x977: V867 = 0x0
0x97a: REVERT 0x0 0x0
0x97b: JUMPDEST 
0x97c: V868 = 0xb
0x97e: V869 = S[0xb]
0x97f: V870 = 0x1
0x981: V871 = 0xa0
0x983: V872 = 0x2
0x985: V873 = EXP 0x2 0xa0
0x986: V874 = SUB 0x10000000000000000000000000000000000000000 0x1
0x989: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff V869
0x98b: V876 = ADDRESS
0x98c: V877 = AND V876 0xffffffffffffffffffffffffffffffffffffffff
0x98d: V878 = BALANCE V877
0x98f: V879 = ISZERO V878
0x990: V880 = 0x8fc
0x993: V881 = MUL 0x8fc V879
0x995: V882 = 0x40
0x997: V883 = M[0x40]
0x998: V884 = 0x0
0x99a: V885 = 0x40
0x99c: V886 = M[0x40]
0x99f: V887 = SUB V883 V886
0x9a4: V888 = CALL V881 V875 V878 V886 V887 V886 0x0
0x9aa: V889 = ISZERO V888
0x9ab: V890 = ISZERO V889
0x9ac: V891 = 0x695
0x9af: JUMPI 0x695 V890
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9b0
[0x9b0:0x9c7]
---
Predecessors: [0x977]
Successors: [0x6a5]
---
0x9b0 PUSH1 0x0
0x9b2 DUP1
0x9b3 REVERT
0x9b4 JUMPDEST
0x9b5 PUSH1 0x0
0x9b7 DUP1
0x9b8 SLOAD
0x9b9 PUSH1 0x3
0x9bb SWAP2
0x9bc SWAP1
0x9bd PUSH1 0xff
0x9bf NOT
0x9c0 AND
0x9c1 PUSH1 0x1
0x9c3 DUP4
0x9c4 PUSH2 0x6a5
0x9c7 JUMP
---
0x9b0: V892 = 0x0
0x9b3: REVERT 0x0 0x0
0x9b4: JUMPDEST 
0x9b5: V893 = 0x0
0x9b8: V894 = S[0x0]
0x9b9: V895 = 0x3
0x9bd: V896 = 0xff
0x9bf: V897 = NOT 0xff
0x9c0: V898 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V894
0x9c1: V899 = 0x1
0x9c4: V900 = 0x6a5
0x9c7: JUMP 0x6a5
---
Entry stack: []
Stack pops: 0
Stack additions: [0x3, 0x1, V898, 0x0, 0x3]
Exit stack: []

================================

Block 0x9c8
[0x9c8:0xa1b]
---
Predecessors: []
Successors: [0xa1c]
---
0x9c8 JUMPDEST
0x9c9 MUL
0x9ca OR
0x9cb SWAP1
0x9cc SSTORE
0x9cd POP
0x9ce PUSH1 0x0
0x9d0 PUSH1 0x3
0x9d2 SSTORE
0x9d3 PUSH1 0xb
0x9d5 SLOAD
0x9d6 PUSH32 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x9f7 SWAP1
0x9f8 PUSH1 0x1
0x9fa PUSH1 0xa0
0x9fc PUSH1 0x2
0x9fe EXP
0x9ff SUB
0xa00 AND
0xa01 PUSH1 0x40
0xa03 MLOAD
0xa04 PUSH1 0x1
0xa06 PUSH1 0xa0
0xa08 PUSH1 0x2
0xa0a EXP
0xa0b SUB
0xa0c SWAP1
0xa0d SWAP2
0xa0e AND
0xa0f DUP2
0xa10 MSTORE
0xa11 PUSH1 0x20
0xa13 ADD
0xa14 PUSH1 0x40
0xa16 MLOAD
0xa17 DUP1
0xa18 SWAP2
0xa19 SUB
0xa1a SWAP1
0xa1b LOG1
---
0x9c8: JUMPDEST 
0x9c9: V901 = MUL S0 S1
0x9ca: V902 = OR V901 S2
0x9cc: S[S3] = V902
0x9ce: V903 = 0x0
0x9d0: V904 = 0x3
0x9d2: S[0x3] = 0x0
0x9d3: V905 = 0xb
0x9d5: V906 = S[0xb]
0x9d6: V907 = 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x9f8: V908 = 0x1
0x9fa: V909 = 0xa0
0x9fc: V910 = 0x2
0x9fe: V911 = EXP 0x2 0xa0
0x9ff: V912 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa00: V913 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xa01: V914 = 0x40
0xa03: V915 = M[0x40]
0xa04: V916 = 0x1
0xa06: V917 = 0xa0
0xa08: V918 = 0x2
0xa0a: V919 = EXP 0x2 0xa0
0xa0b: V920 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0e: V921 = AND V913 0xffffffffffffffffffffffffffffffffffffffff
0xa10: M[V915] = V921
0xa11: V922 = 0x20
0xa13: V923 = ADD 0x20 V915
0xa14: V924 = 0x40
0xa16: V925 = M[0x40]
0xa19: V926 = SUB V923 V925
0xa1b: LOG V925 V926 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
---
Entry stack: []
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xa1c
[0xa1c:0xa1c]
---
Predecessors: [0x9c8]
Successors: [0xa1d]
---
0xa1c JUMPDEST
---
0xa1c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa1d
[0xa1d:0xa1f]
---
Predecessors: [0xa1c]
Successors: []
Has unresolved jump.
---
0xa1d JUMPDEST
0xa1e POP
0xa1f JUMP
---
0xa1d: JUMPDEST 
0xa1f: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xa20
[0xa20:0xa36]
---
Predecessors: [0x33a]
Successors: [0xa37, 0xa3b]
---
0xa20 JUMPDEST
0xa21 PUSH1 0xa
0xa23 SLOAD
0xa24 CALLER
0xa25 PUSH1 0x1
0xa27 PUSH1 0xa0
0xa29 PUSH1 0x2
0xa2b EXP
0xa2c SUB
0xa2d SWAP1
0xa2e DUP2
0xa2f AND
0xa30 SWAP2
0xa31 AND
0xa32 EQ
0xa33 PUSH2 0xa3b
0xa36 JUMPI
---
0xa20: JUMPDEST 
0xa21: V927 = 0xa
0xa23: V928 = S[0xa]
0xa24: V929 = CALLER
0xa25: V930 = 0x1
0xa27: V931 = 0xa0
0xa29: V932 = 0x2
0xa2b: V933 = EXP 0x2 0xa0
0xa2c: V934 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2f: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V929
0xa31: V936 = AND V928 0xffffffffffffffffffffffffffffffffffffffff
0xa32: V937 = EQ V936 V935
0xa33: V938 = 0xa3b
0xa36: JUMPI 0xa3b V937
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xa37
[0xa37:0xa3a]
---
Predecessors: [0xa20]
Successors: []
---
0xa37 PUSH1 0x0
0xa39 DUP1
0xa3a REVERT
---
0xa37: V939 = 0x0
0xa3a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xa3b
[0xa3b:0xa3d]
---
Predecessors: [0xa20]
Successors: [0xa3e]
---
0xa3b JUMPDEST
0xa3c PUSH1 0x1
---
0xa3b: JUMPDEST 
0xa3c: V940 = 0x1
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0xe6, 0x1]

================================

Block 0xa3e
[0xa3e:0xa4d]
---
Predecessors: [0xa3b]
Successors: [0xa4e, 0xa4f]
---
0xa3e JUMPDEST
0xa3f PUSH1 0x0
0xa41 SLOAD
0xa42 PUSH1 0xff
0xa44 AND
0xa45 PUSH1 0x3
0xa47 DUP2
0xa48 GT
0xa49 ISZERO
0xa4a PUSH2 0xa4f
0xa4d JUMPI
---
0xa3e: JUMPDEST 
0xa3f: V941 = 0x0
0xa41: V942 = S[0x0]
0xa42: V943 = 0xff
0xa44: V944 = AND 0xff V942
0xa45: V945 = 0x3
0xa48: V946 = GT V944 0x3
0xa49: V947 = ISZERO V946
0xa4a: V948 = 0xa4f
0xa4d: JUMPI 0xa4f V947
---
Entry stack: [V12, 0xe6, 0x1]
Stack pops: 0
Stack additions: [V944]
Exit stack: [V12, 0xe6, 0x1, V944]

================================

Block 0xa4e
[0xa4e:0xa4e]
---
Predecessors: [0xa3e]
Successors: []
---
0xa4e INVALID
---
0xa4e: INVALID 
---
Entry stack: [V12, 0xe6, 0x1, V944]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6, 0x1, V944]

================================

Block 0xa4f
[0xa4f:0xa55]
---
Predecessors: [0xa3e]
Successors: [0xa56, 0xa6c]
---
0xa4f JUMPDEST
0xa50 EQ
0xa51 DUP1
0xa52 PUSH2 0xa6c
0xa55 JUMPI
---
0xa4f: JUMPDEST 
0xa50: V949 = EQ V944 0x1
0xa52: V950 = 0xa6c
0xa55: JUMPI 0xa6c V949
---
Entry stack: [V12, 0xe6, 0x1, V944]
Stack pops: 2
Stack additions: [V949]
Exit stack: [V12, 0xe6, V949]

================================

Block 0xa56
[0xa56:0xa58]
---
Predecessors: [0xa4f]
Successors: [0xa59]
---
0xa56 POP
0xa57 PUSH1 0x2
---
0xa57: V951 = 0x2
---
Entry stack: [V12, 0xe6, V949]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V12, 0xe6, 0x2]

================================

Block 0xa59
[0xa59:0xa68]
---
Predecessors: [0xa56]
Successors: [0xa69, 0xa6a]
---
0xa59 JUMPDEST
0xa5a PUSH1 0x0
0xa5c SLOAD
0xa5d PUSH1 0xff
0xa5f AND
0xa60 PUSH1 0x3
0xa62 DUP2
0xa63 GT
0xa64 ISZERO
0xa65 PUSH2 0xa6a
0xa68 JUMPI
---
0xa59: JUMPDEST 
0xa5a: V952 = 0x0
0xa5c: V953 = S[0x0]
0xa5d: V954 = 0xff
0xa5f: V955 = AND 0xff V953
0xa60: V956 = 0x3
0xa63: V957 = GT V955 0x3
0xa64: V958 = ISZERO V957
0xa65: V959 = 0xa6a
0xa68: JUMPI 0xa6a V958
---
Entry stack: [V12, 0xe6, 0x2]
Stack pops: 0
Stack additions: [V955]
Exit stack: [V12, 0xe6, 0x2, V955]

================================

Block 0xa69
[0xa69:0xa69]
---
Predecessors: [0xa59]
Successors: []
---
0xa69 INVALID
---
0xa69: INVALID 
---
Entry stack: [V12, 0xe6, 0x2, V955]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6, 0x2, V955]

================================

Block 0xa6a
[0xa6a:0xa6b]
---
Predecessors: [0xa59]
Successors: [0xa6c]
---
0xa6a JUMPDEST
0xa6b EQ
---
0xa6a: JUMPDEST 
0xa6b: V960 = EQ V955 0x2
---
Entry stack: [V12, 0xe6, 0x2, V955]
Stack pops: 2
Stack additions: [V960]
Exit stack: [V12, 0xe6, V960]

================================

Block 0xa6c
[0xa6c:0xa72]
---
Predecessors: [0xa4f, 0xa6a]
Successors: [0xa73, 0xa7d]
---
0xa6c JUMPDEST
0xa6d DUP1
0xa6e ISZERO
0xa6f PUSH2 0xa7d
0xa72 JUMPI
---
0xa6c: JUMPDEST 
0xa6e: V961 = ISZERO S0
0xa6f: V962 = 0xa7d
0xa72: JUMPI 0xa7d V961
---
Entry stack: [V12, 0xe6, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe6, S0]

================================

Block 0xa73
[0xa73:0xa7c]
---
Predecessors: [0xa6c]
Successors: [0xa7d]
---
0xa73 POP
0xa74 TIMESTAMP
0xa75 PUSH1 0x5
0xa77 SLOAD
0xa78 PUSH2 0xe10
0xa7b ADD
0xa7c LT
---
0xa74: V963 = TIMESTAMP
0xa75: V964 = 0x5
0xa77: V965 = S[0x5]
0xa78: V966 = 0xe10
0xa7b: V967 = ADD 0xe10 V965
0xa7c: V968 = LT V967 V963
---
Entry stack: [V12, 0xe6, S0]
Stack pops: 1
Stack additions: [V968]
Exit stack: [V12, 0xe6, V968]

================================

Block 0xa7d
[0xa7d:0xa83]
---
Predecessors: [0xa6c, 0xa73]
Successors: [0xa84, 0xa88]
---
0xa7d JUMPDEST
0xa7e ISZERO
0xa7f ISZERO
0xa80 PUSH2 0xa88
0xa83 JUMPI
---
0xa7d: JUMPDEST 
0xa7e: V969 = ISZERO S0
0xa7f: V970 = ISZERO V969
0xa80: V971 = 0xa88
0xa83: JUMPI 0xa88 V970
---
Entry stack: [V12, 0xe6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xa84
[0xa84:0xa87]
---
Predecessors: [0xa7d]
Successors: []
---
0xa84 PUSH1 0x0
0xa86 DUP1
0xa87 REVERT
---
0xa84: V972 = 0x0
0xa87: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xa88
[0xa88:0xa93]
---
Predecessors: [0xa7d]
Successors: []
---
0xa88 JUMPDEST
0xa89 CALLER
0xa8a PUSH1 0x1
0xa8c PUSH1 0xa0
0xa8e PUSH1 0x2
0xa90 EXP
0xa91 SUB
0xa92 AND
0xa93 SELFDESTRUCT
---
0xa88: JUMPDEST 
0xa89: V973 = CALLER
0xa8a: V974 = 0x1
0xa8c: V975 = 0xa0
0xa8e: V976 = 0x2
0xa90: V977 = EXP 0x2 0xa0
0xa91: V978 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa92: V979 = AND 0xffffffffffffffffffffffffffffffffffffffff V973
0xa93: SELFDESTRUCT V979
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xa94
[0xa94:0xa94]
---
Predecessors: []
Successors: [0xa95]
---
0xa94 JUMPDEST
---
0xa94: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa95
[0xa95:0xa95]
---
Predecessors: [0xa94]
Successors: [0xa96]
---
0xa95 JUMPDEST
---
0xa95: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa96
[0xa96:0xa97]
---
Predecessors: [0xa95]
Successors: []
Has unresolved jump.
---
0xa96 JUMPDEST
0xa97 JUMP
---
0xa96: JUMPDEST 
0xa97: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa98
[0xa98:0xaa5]
---
Predecessors: [0x751]
Successors: [0xaa6, 0xac4]
---
0xa98 JUMPDEST
0xa99 DUP2
0xa9a SLOAD
0xa9b DUP2
0xa9c DUP4
0xa9d SSTORE
0xa9e DUP2
0xa9f DUP2
0xaa0 ISZERO
0xaa1 GT
0xaa2 PUSH2 0xac4
0xaa5 JUMPI
---
0xa98: JUMPDEST 
0xa9a: V980 = S[0x1]
0xa9d: S[0x1] = V660
0xaa0: V981 = ISZERO V980
0xaa1: V982 = GT V981 V660
0xaa2: V983 = 0xac4
0xaa5: JUMPI 0xac4 V982
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660]
Stack pops: 2
Stack additions: [S1, S0, V980]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, V980]

================================

Block 0xaa6
[0xaa6:0xac3]
---
Predecessors: [0xa98]
Successors: [0xaca]
---
0xaa6 PUSH1 0x2
0xaa8 MUL
0xaa9 DUP2
0xaaa PUSH1 0x2
0xaac MUL
0xaad DUP4
0xaae PUSH1 0x0
0xab0 MSTORE
0xab1 PUSH1 0x20
0xab3 PUSH1 0x0
0xab5 SHA3
0xab6 SWAP2
0xab7 DUP3
0xab8 ADD
0xab9 SWAP2
0xaba ADD
0xabb PUSH2 0xac4
0xabe SWAP2
0xabf SWAP1
0xac0 PUSH2 0xaca
0xac3 JUMP
---
0xaa6: V984 = 0x2
0xaa8: V985 = MUL 0x2 V980
0xaaa: V986 = 0x2
0xaac: V987 = MUL 0x2 V660
0xaae: V988 = 0x0
0xab0: M[0x0] = 0x1
0xab1: V989 = 0x20
0xab3: V990 = 0x0
0xab5: V991 = SHA3 0x0 0x20
0xab8: V992 = ADD V991 V985
0xaba: V993 = ADD V991 V987
0xabb: V994 = 0xac4
0xac0: V995 = 0xaca
0xac3: JUMP 0xaca
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, V980]
Stack pops: 3
Stack additions: [S2, S1, 0xac4, V992, V993]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, V992, V993]

================================

Block 0xac4
[0xac4:0xac4]
---
Predecessors: [0xa98, 0xb07]
Successors: [0xac5]
---
0xac4 JUMPDEST
---
0xac4: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, S0]

================================

Block 0xac5
[0xac5:0xac9]
---
Predecessors: [0xac4]
Successors: [0x765]
---
0xac5 JUMPDEST
0xac6 POP
0xac7 POP
0xac8 POP
0xac9 JUMP
---
0xac5: JUMPDEST 
0xac9: JUMP 0x765
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660]

================================

Block 0xaca
[0xaca:0xacf]
---
Predecessors: [0xaa6]
Successors: [0xad0]
---
0xaca JUMPDEST
0xacb PUSH2 0xb07
0xace SWAP2
0xacf SWAP1
---
0xaca: JUMPDEST 
0xacb: V996 = 0xb07
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, V992, V993]
Stack pops: 2
Stack additions: [0xb07, S1, S0]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, 0xb07, V992, V993]

================================

Block 0xad0
[0xad0:0xad8]
---
Predecessors: [0xaca, 0xad9]
Successors: [0xad9, 0xb03]
---
0xad0 JUMPDEST
0xad1 DUP1
0xad2 DUP3
0xad3 GT
0xad4 ISZERO
0xad5 PUSH2 0xb03
0xad8 JUMPI
---
0xad0: JUMPDEST 
0xad3: V997 = GT V992 S0
0xad4: V998 = ISZERO V997
0xad5: V999 = 0xb03
0xad8: JUMPI 0xb03 V998
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, 0xb07, V992, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, 0xb07, V992, S0]

================================

Block 0xad9
[0xad9:0xb02]
---
Predecessors: [0xad0]
Successors: [0xad0]
---
0xad9 PUSH1 0x0
0xadb DUP2
0xadc SSTORE
0xadd PUSH1 0x1
0xadf DUP2
0xae0 ADD
0xae1 DUP1
0xae2 SLOAD
0xae3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf8 NOT
0xaf9 AND
0xafa SWAP1
0xafb SSTORE
0xafc PUSH1 0x2
0xafe ADD
0xaff PUSH2 0xad0
0xb02 JUMP
---
0xad9: V1000 = 0x0
0xadc: S[S0] = 0x0
0xadd: V1001 = 0x1
0xae0: V1002 = ADD S0 0x1
0xae2: V1003 = S[V1002]
0xae3: V1004 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf8: V1005 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaf9: V1006 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1003
0xafb: S[V1002] = V1006
0xafc: V1007 = 0x2
0xafe: V1008 = ADD 0x2 S0
0xaff: V1009 = 0xad0
0xb02: JUMP 0xad0
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, 0xb07, V992, S0]
Stack pops: 1
Stack additions: [V1008]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, 0xb07, V992, V1008]

================================

Block 0xb03
[0xb03:0xb06]
---
Predecessors: [0xad0]
Successors: [0xb07]
---
0xb03 JUMPDEST
0xb04 POP
0xb05 SWAP1
0xb06 JUMP
---
0xb03: JUMPDEST 
0xb06: JUMP 0xb07
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, 0xb07, V992, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, V992]

================================

Block 0xb07
[0xb07:0xb09]
---
Predecessors: [0xb03]
Successors: [0xac4]
---
0xb07 JUMPDEST
0xb08 SWAP1
0xb09 JUMP
---
0xb07: JUMPDEST 
0xb09: JUMP 0xac4
---
Entry stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, 0xac4, V992]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12a, 0x0, V659, 0x0, 0x1, V658, V660, 0x765, 0x1, V660, V992]

================================

Block 0xb0a
[0xb0a:0xb35]
---
Predecessors: []
Successors: []
---
0xb0a STOP
0xb0b LOG1
0xb0c PUSH6 0x627a7a723058
0xb13 SHA3
0xb14 DUP6
0xb15 POP
0xb16 MISSING 0x4b
0xb17 CALLCODE
0xb18 MLOAD
0xb19 SUB
0xb1a MISSING 0xdb
0xb1b CREATE
0xb1c MISSING 0x2d
0xb1d LOG4
0xb1e MISSING 0x4a
0xb1f MISSING 0x4d
0xb20 MISSING 0xd6
0xb21 DUP2
0xb22 MSIZE
0xb23 MISSING 0xda
0xb24 MISSING 0x4e
0xb25 MISSING 0x5c
0xb26 MISSING 0x48
0xb27 DUP5
0xb28 PUSH8 0x36e13a2118dc66e
0xb31 LT
0xb32 MISSING 0xd0
0xb33 ISZERO
0xb34 STOP
0xb35 MISSING 0x29
---
0xb0a: STOP 
0xb0b: LOG S0 S1 S2
0xb0c: V1010 = 0x627a7a723058
0xb13: V1011 = SHA3 0x627a7a723058 S3
0xb16: MISSING 0x4b
0xb17: V1012 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xb18: V1013 = M[V1012]
0xb19: V1014 = SUB V1013 S7
0xb1a: MISSING 0xdb
0xb1b: V1015 = CREATE S0 S1 S2
0xb1c: MISSING 0x2d
0xb1d: LOG S0 S1 S2 S3 S4 S5
0xb1e: MISSING 0x4a
0xb1f: MISSING 0x4d
0xb20: MISSING 0xd6
0xb22: V1016 = MSIZE
0xb23: MISSING 0xda
0xb24: MISSING 0x4e
0xb25: MISSING 0x5c
0xb26: MISSING 0x48
0xb28: V1017 = 0x36e13a2118dc66e
0xb31: V1018 = LT 0x36e13a2118dc66e S4
0xb32: MISSING 0xd0
0xb33: V1019 = ISZERO S0
0xb34: STOP 
0xb35: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1011, S4, S5, S6, S7, S8, V1014, V1015, V1016, S1, S0, S1, V1018, S0, S1, S2, S3, S4, V1019]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xe8
Exit block: 0xfb
Body: 0xe8, 0xef, 0xf3, 0xfb, 0x344

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x117
Exit block: 0x12a
Body: 0x117, 0x11e, 0x122, 0x12a, 0x353

Function 2:
Public function signature: 0x38771242
Entry block: 0x13c
Exit block: 0x12a
Body: 0x12a, 0x13c, 0x143, 0x147, 0x359

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x161
Exit block: 0xfb
Body: 0xfb, 0x161, 0x168, 0x16c, 0x35f

Function 4:
Public function signature: 0x3c8da588
Entry block: 0x190
Exit block: 0x12a
Body: 0x12a, 0x190, 0x197, 0x19b, 0x36e

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x1b5
Exit block: 0xfb
Body: 0xfb, 0x1b5, 0x1bc, 0x1c0, 0x374

Function 6:
Public function signature: 0x71ae8f02
Entry block: 0x1e4
Exit block: 0x12a
Body: 0x12a, 0x1e4, 0x1eb, 0x1ef, 0x383

Function 7:
Public function signature: 0x86f32586
Entry block: 0x209
Exit block: 0xe6
Body: 0xe6, 0x209, 0x210, 0x214

Function 8:
Public function signature: 0xaa367664
Entry block: 0x21e
Exit block: 0x12a
Body: 0x12a, 0x21e, 0x225, 0x229, 0x4cc

Function 9:
Public function signature: 0xb2d5ae44
Entry block: 0x243
Exit block: 0x5e7
Body: 0x243, 0x24a, 0x24e, 0x256, 0x4d2, 0x4da, 0x4ea, 0x4eb, 0x4f1, 0x4f5, 0x4fa, 0x504, 0x51b, 0x51c, 0x52d, 0x542, 0x54e, 0x54f, 0x560, 0x575, 0x576, 0x587, 0x596, 0x597, 0x5a8, 0x5d9, 0x5e7, 0x5e8, 0x5f9, 0x604, 0x613, 0x61c, 0x61d, 0x628, 0x62d, 0x62e

Function 10:
Public function signature: 0xc19d93fb
Entry block: 0x26a
Exit block: 0x28c
Body: 0x26a, 0x271, 0x275, 0x27d, 0x28c, 0x28d, 0x634

Function 11:
Public function signature: 0xc2052403
Entry block: 0x2a1
Exit block: 0xe6
Body: 0xe6, 0x2a1, 0x2a8, 0x2ac

Function 12:
Public function signature: 0xc5c4744c
Entry block: 0x2b6
Exit block: 0x12a
Body: 0x12a, 0x2b6, 0x2bd, 0x2c1, 0x6fd

Function 13:
Public function signature: 0xce845d1d
Entry block: 0x2db
Exit block: 0x12a
Body: 0x12a, 0x2db, 0x2e2, 0x2e6, 0x703

Function 14:
Public function signature: 0xd7bb99ba
Entry block: 0x300
Exit block: 0x12a
Body: 0x12a, 0x300, 0x709, 0x70f, 0x71f, 0x720, 0x726, 0x72a, 0x735, 0x739, 0x745, 0x746, 0x74d, 0x751, 0x765, 0x776, 0x7e6, 0x808, 0x809, 0x849, 0x84d, 0x85a, 0x85e, 0x866, 0x889, 0x88a, 0x8ca, 0x8ce, 0x8db, 0x8df, 0x8e3, 0x946, 0x950, 0x951, 0x952, 0x953, 0xa98, 0xaa6, 0xac4, 0xac5, 0xaca, 0xad0, 0xad9, 0xb03, 0xb07

Function 15:
Public function signature: 0xfe374098
Entry block: 0x31a
Exit block: 0x651
Body: 0x31a, 0x321, 0x325, 0x651, 0x958

Function 16:
Public function signature: 0xfe389e09
Entry block: 0x32f
Exit block: 0xa84
Body: 0x32f, 0x336, 0x33a, 0xa20, 0xa37, 0xa3b, 0xa3e, 0xa4e, 0xa4f, 0xa56, 0xa59, 0xa69, 0xa6a, 0xa6c, 0xa73, 0xa7d, 0xa84, 0xa88

Function 17:
Public fallback function
Entry block: 0xd5
Exit block: 0xe1
Body: 0xd5, 0xdc, 0xe0, 0xe1

Function 18:
Private function
Entry block: 0x389
Exit block: 0x4ca
Body: 0x389, 0x395, 0x39d, 0x3a3, 0x3b2, 0x3b2, 0x3f4, 0x3fd, 0x408, 0x413, 0x471, 0x480, 0x4c2, 0x4c7, 0x4c8, 0x4c9, 0x4ca

Function 19:
Private function
Entry block: 0x63d
Exit block: 0x6fa
Body: 0x63d, 0x641, 0x652, 0x65c, 0x695, 0x6a5, 0x6f9, 0x6fa

