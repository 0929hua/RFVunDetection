Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xd4]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1cb3b20
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xd4
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1cb3b20
0x1a: V12 = EQ V10 0x1cb3b20
0x1b: V13 = 0xd4
0x1e: JUMPI 0xd4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x149]
---
0x1f DUP1
0x20 PUSH4 0x29dcb0cf
0x25 EQ
0x26 PUSH2 0x149
0x29 JUMPI
---
0x20: V14 = 0x29dcb0cf
0x25: V15 = EQ 0x29dcb0cf V10
0x26: V16 = 0x149
0x29: JUMPI 0x149 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x152]
---
0x2a DUP1
0x2b PUSH4 0x38af3eed
0x30 EQ
0x31 PUSH2 0x152
0x34 JUMPI
---
0x2b: V17 = 0x38af3eed
0x30: V18 = EQ 0x38af3eed V10
0x31: V19 = 0x152
0x34: JUMPI 0x152 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x164]
---
0x35 DUP1
0x36 PUSH4 0x6e66f6e9
0x3b EQ
0x3c PUSH2 0x164
0x3f JUMPI
---
0x36: V20 = 0x6e66f6e9
0x3b: V21 = EQ 0x6e66f6e9 V10
0x3c: V22 = 0x164
0x3f: JUMPI 0x164 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x176]
---
0x40 DUP1
0x41 PUSH4 0x7a3a0e84
0x46 EQ
0x47 PUSH2 0x176
0x4a JUMPI
---
0x41: V23 = 0x7a3a0e84
0x46: V24 = EQ 0x7a3a0e84 V10
0x47: V25 = 0x176
0x4a: JUMPI 0x176 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x17f]
---
0x4b DUP1
0x4c PUSH4 0x7b3e5e7b
0x51 EQ
0x52 PUSH2 0x17f
0x55 JUMPI
---
0x4c: V26 = 0x7b3e5e7b
0x51: V27 = EQ 0x7b3e5e7b V10
0x52: V28 = 0x17f
0x55: JUMPI 0x17f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x188]
---
0x56 DUP1
0x57 PUSH4 0xa035b1fe
0x5c EQ
0x5d PUSH2 0x188
0x60 JUMPI
---
0x57: V29 = 0xa035b1fe
0x5c: V30 = EQ 0xa035b1fe V10
0x5d: V31 = 0x188
0x60: JUMPI 0x188 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x191]
---
0x61 DUP1
0x62 PUSH4 0xdc0d3dff
0x67 EQ
0x68 PUSH2 0x191
0x6b JUMPI
---
0x62: V32 = 0xdc0d3dff
0x67: V33 = EQ 0xdc0d3dff V10
0x68: V34 = 0x191
0x6b: JUMPI 0x191 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x8b]
---
Predecessors: [0x0, 0x61]
Successors: [0x8c, 0x1e3]
---
0x6c JUMPDEST
0x6d PUSH2 0x1e1
0x70 PUSH1 0x6
0x72 DUP1
0x73 SLOAD
0x74 PUSH1 0x1
0x76 DUP2
0x77 ADD
0x78 DUP1
0x79 DUP4
0x7a SSTORE
0x7b PUSH1 0x0
0x7d SWAP3
0x7e SWAP2
0x7f DUP3
0x80 SWAP1
0x81 DUP3
0x82 SWAP1
0x83 DUP1
0x84 ISZERO
0x85 DUP3
0x86 SWAP1
0x87 GT
0x88 PUSH2 0x1e3
0x8b JUMPI
---
0x6c: JUMPDEST 
0x6d: V35 = 0x1e1
0x70: V36 = 0x6
0x73: V37 = S[0x6]
0x74: V38 = 0x1
0x77: V39 = ADD V37 0x1
0x7a: S[0x6] = V39
0x7b: V40 = 0x0
0x84: V41 = ISZERO V37
0x87: V42 = GT V41 V39
0x88: V43 = 0x1e3
0x8b: JUMPI 0x1e3 V42
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e1, 0x0, 0x6, V39, 0x6, V39, V37]
Exit stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, V37]

================================

Block 0x8c
[0x8c:0xa5]
---
Predecessors: [0x6c]
Successors: [0xa6]
---
0x8c PUSH1 0x2
0x8e MUL
0x8f DUP2
0x90 PUSH1 0x2
0x92 MUL
0x93 DUP4
0x94 PUSH1 0x0
0x96 MSTORE
0x97 PUSH1 0x20
0x99 PUSH1 0x0
0x9b SHA3
0x9c SWAP2
0x9d DUP3
0x9e ADD
0x9f SWAP2
0xa0 ADD
0xa1 PUSH2 0x1e3
0xa4 SWAP2
0xa5 SWAP1
---
0x8c: V44 = 0x2
0x8e: V45 = MUL 0x2 V37
0x90: V46 = 0x2
0x92: V47 = MUL 0x2 V39
0x94: V48 = 0x0
0x96: M[0x0] = 0x6
0x97: V49 = 0x20
0x99: V50 = 0x0
0x9b: V51 = SHA3 0x0 0x20
0x9e: V52 = ADD V51 V45
0xa0: V53 = ADD V51 V47
0xa1: V54 = 0x1e3
---
Entry stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, V37]
Stack pops: 3
Stack additions: [S2, S1, 0x1e3, V52, V53]
Exit stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, 0x1e3, V52, V53]

================================

Block 0xa6
[0xa6:0xae]
---
Predecessors: [0x8c, 0xaf]
Successors: [0xaf, 0x318]
---
0xa6 JUMPDEST
0xa7 DUP1
0xa8 DUP3
0xa9 GT
0xaa ISZERO
0xab PUSH2 0x318
0xae JUMPI
---
0xa6: JUMPDEST 
0xa9: V55 = GT V52 S0
0xaa: V56 = ISZERO V55
0xab: V57 = 0x318
0xae: JUMPI 0x318 V56
---
Entry stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, 0x1e3, V52, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, 0x1e3, V52, S0]

================================

Block 0xaf
[0xaf:0xd3]
---
Predecessors: [0xa6]
Successors: [0xa6]
---
0xaf DUP1
0xb0 SLOAD
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 NOT
0xc7 AND
0xc8 DUP2
0xc9 SSTORE
0xca PUSH1 0x1
0xcc ADD
0xcd DUP8
0xce DUP2
0xcf SSTORE
0xd0 PUSH2 0xa6
0xd3 JUMP
---
0xb0: V58 = S[S0]
0xb1: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V60 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc7: V61 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V58
0xc9: S[S0] = V61
0xca: V62 = 0x1
0xcc: V63 = ADD 0x1 S0
0xcf: S[V63] = 0x0
0xd0: V64 = 0xa6
0xd3: JUMP 0xa6
---
Entry stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, 0x1e3, V52, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, V63]
Exit stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, 0x1e3, V52, V63]

================================

Block 0xd4
[0xd4:0xe3]
---
Predecessors: [0xb]
Successors: [0xe4, 0x315]
---
0xd4 JUMPDEST
0xd5 PUSH2 0x1e1
0xd8 PUSH1 0x3
0xda SLOAD
0xdb PUSH1 0x0
0xdd SWAP1
0xde TIMESTAMP
0xdf LT
0xe0 PUSH2 0x315
0xe3 JUMPI
---
0xd4: JUMPDEST 
0xd5: V65 = 0x1e1
0xd8: V66 = 0x3
0xda: V67 = S[0x3]
0xdb: V68 = 0x0
0xde: V69 = TIMESTAMP
0xdf: V70 = LT V69 V67
0xe0: V71 = 0x315
0xe3: JUMPI 0x315 V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e1, 0x0]
Exit stack: [V10, 0x1e1, 0x0]

================================

Block 0xe4
[0xe4:0xef]
---
Predecessors: [0xd4]
Successors: [0xf0, 0x346]
---
0xe4 PUSH1 0x2
0xe6 SLOAD
0xe7 PUSH1 0x1
0xe9 SLOAD
0xea SWAP1
0xeb LT
0xec PUSH2 0x346
0xef JUMPI
---
0xe4: V72 = 0x2
0xe6: V73 = S[0x2]
0xe7: V74 = 0x1
0xe9: V75 = S[0x1]
0xeb: V76 = LT V73 V75
0xec: V77 = 0x346
0xef: JUMPI 0x346 V76
---
Entry stack: [V10, 0x1e1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, 0x0]

================================

Block 0xf0
[0xf0:0x13a]
---
Predecessors: [0xe4]
Successors: [0x13b]
---
0xf0 PUSH1 0x2
0xf2 SLOAD
0xf3 DUP2
0xf4 SLOAD
0xf5 PUSH1 0x1
0xf7 PUSH1 0xa0
0xf9 PUSH1 0x2
0xfb EXP
0xfc SUB
0xfd AND
0xfe SWAP1
0xff DUP3
0x100 SWAP1
0x101 PUSH1 0x60
0x103 DUP3
0x104 DUP2
0x105 DUP2
0x106 DUP2
0x107 DUP6
0x108 DUP9
0x109 DUP4
0x10a CALL
0x10b POP
0x10c PUSH1 0x40
0x10e DUP1
0x10f MLOAD
0x110 SWAP5
0x111 DUP6
0x112 MSTORE
0x113 PUSH1 0x20
0x115 DUP6
0x116 ADD
0x117 SWAP3
0x118 SWAP1
0x119 SWAP3
0x11a MSTORE
0x11b DUP4
0x11c DUP3
0x11d ADD
0x11e SWAP3
0x11f SWAP1
0x120 SWAP3
0x121 MSTORE
0x122 MLOAD
0x123 PUSH1 0x0
0x125 DUP1
0x126 MLOAD
0x127 PUSH1 0x20
0x129 PUSH2 0x4b9
0x12c DUP4
0x12d CODECOPY
0x12e DUP2
0x12f MLOAD
0x130 SWAP2
0x131 MSTORE
0x132 SWAP3
0x133 DUP2
0x134 SWAP1
0x135 SUB
0x136 SWAP1
0x137 SWAP2
0x138 ADD
0x139 SWAP1
0x13a LOG1
---
0xf0: V78 = 0x2
0xf2: V79 = S[0x2]
0xf4: V80 = S[0x0]
0xf5: V81 = 0x1
0xf7: V82 = 0xa0
0xf9: V83 = 0x2
0xfb: V84 = EXP 0x2 0xa0
0xfc: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x101: V87 = 0x60
0x10a: V88 = CALL 0x0 V86 V79 0x60 0x0 0x60 0x0
0x10c: V89 = 0x40
0x10f: V90 = M[0x40]
0x112: M[V90] = V86
0x113: V91 = 0x20
0x116: V92 = ADD V90 0x20
0x11a: M[V92] = V79
0x11d: V93 = ADD 0x40 V90
0x121: M[V93] = 0x0
0x122: V94 = M[0x40]
0x123: V95 = 0x0
0x126: V96 = M[0x0]
0x127: V97 = 0x20
0x129: V98 = 0x4b9
0x12d: CODECOPY 0x0 0x4b9 0x20
0x12f: V99 = M[0x0]
0x131: M[0x0] = V96
0x135: V100 = SUB V90 V94
0x138: V101 = ADD 0x60 V100
0x13a: LOG V94 V101 V99
---
Entry stack: [V10, 0x1e1, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e1, 0x0]

================================

Block 0x13b
[0x13b:0x148]
---
Predecessors: [0xf0, 0x368]
Successors: []
---
0x13b JUMPDEST
0x13c PUSH1 0x0
0x13e SLOAD
0x13f PUSH1 0x1
0x141 PUSH1 0xa0
0x143 PUSH1 0x2
0x145 EXP
0x146 SUB
0x147 AND
0x148 SELFDESTRUCT
---
0x13b: JUMPDEST 
0x13c: V102 = 0x0
0x13e: V103 = S[0x0]
0x13f: V104 = 0x1
0x141: V105 = 0xa0
0x143: V106 = 0x2
0x145: V107 = EXP 0x2 0xa0
0x146: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x148: SELFDESTRUCT V109
---
Entry stack: [V10, 0x1e1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, S0]

================================

Block 0x149
[0x149:0x151]
---
Predecessors: [0x1f]
Successors: [0x31c]
---
0x149 JUMPDEST
0x14a PUSH2 0x31c
0x14d PUSH1 0x3
0x14f SLOAD
0x150 DUP2
0x151 JUMP
---
0x149: JUMPDEST 
0x14a: V110 = 0x31c
0x14d: V111 = 0x3
0x14f: V112 = S[0x3]
0x151: JUMP 0x31c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31c, V112]
Exit stack: [V10, 0x31c, V112]

================================

Block 0x152
[0x152:0x163]
---
Predecessors: [0x2a]
Successors: [0x326]
---
0x152 JUMPDEST
0x153 PUSH2 0x326
0x156 PUSH1 0x0
0x158 SLOAD
0x159 PUSH1 0x1
0x15b PUSH1 0xa0
0x15d PUSH1 0x2
0x15f EXP
0x160 SUB
0x161 AND
0x162 DUP2
0x163 JUMP
---
0x152: JUMPDEST 
0x153: V113 = 0x326
0x156: V114 = 0x0
0x158: V115 = S[0x0]
0x159: V116 = 0x1
0x15b: V117 = 0xa0
0x15d: V118 = 0x2
0x15f: V119 = EXP 0x2 0xa0
0x160: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x161: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x163: JUMP 0x326
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x326, V121]
Exit stack: [V10, 0x326, V121]

================================

Block 0x164
[0x164:0x175]
---
Predecessors: [0x35]
Successors: [0x326]
---
0x164 JUMPDEST
0x165 PUSH2 0x326
0x168 PUSH1 0x5
0x16a SLOAD
0x16b PUSH1 0x1
0x16d PUSH1 0xa0
0x16f PUSH1 0x2
0x171 EXP
0x172 SUB
0x173 AND
0x174 DUP2
0x175 JUMP
---
0x164: JUMPDEST 
0x165: V122 = 0x326
0x168: V123 = 0x5
0x16a: V124 = S[0x5]
0x16b: V125 = 0x1
0x16d: V126 = 0xa0
0x16f: V127 = 0x2
0x171: V128 = EXP 0x2 0xa0
0x172: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x175: JUMP 0x326
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x326, V130]
Exit stack: [V10, 0x326, V130]

================================

Block 0x176
[0x176:0x17e]
---
Predecessors: [0x40]
Successors: [0x31c]
---
0x176 JUMPDEST
0x177 PUSH2 0x31c
0x17a PUSH1 0x1
0x17c SLOAD
0x17d DUP2
0x17e JUMP
---
0x176: JUMPDEST 
0x177: V131 = 0x31c
0x17a: V132 = 0x1
0x17c: V133 = S[0x1]
0x17e: JUMP 0x31c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31c, V133]
Exit stack: [V10, 0x31c, V133]

================================

Block 0x17f
[0x17f:0x187]
---
Predecessors: [0x4b]
Successors: [0x31c]
---
0x17f JUMPDEST
0x180 PUSH2 0x31c
0x183 PUSH1 0x2
0x185 SLOAD
0x186 DUP2
0x187 JUMP
---
0x17f: JUMPDEST 
0x180: V134 = 0x31c
0x183: V135 = 0x2
0x185: V136 = S[0x2]
0x187: JUMP 0x31c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31c, V136]
Exit stack: [V10, 0x31c, V136]

================================

Block 0x188
[0x188:0x190]
---
Predecessors: [0x56]
Successors: [0x31c]
---
0x188 JUMPDEST
0x189 PUSH2 0x31c
0x18c PUSH1 0x4
0x18e SLOAD
0x18f DUP2
0x190 JUMP
---
0x188: JUMPDEST 
0x189: V137 = 0x31c
0x18c: V138 = 0x4
0x18e: V139 = S[0x4]
0x190: JUMP 0x31c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31c, V139]
Exit stack: [V10, 0x31c, V139]

================================

Block 0x191
[0x191:0x1a4]
---
Predecessors: [0x61]
Successors: [0x1a5]
---
0x191 JUMPDEST
0x192 PUSH2 0x339
0x195 PUSH1 0x4
0x197 CALLDATALOAD
0x198 PUSH1 0x6
0x19a DUP1
0x19b SLOAD
0x19c DUP3
0x19d SWAP1
0x19e DUP2
0x19f LT
0x1a0 ISZERO
0x1a1 PUSH2 0x2
0x1a4 JUMPI
---
0x191: JUMPDEST 
0x192: V140 = 0x339
0x195: V141 = 0x4
0x197: V142 = CALLDATALOAD 0x4
0x198: V143 = 0x6
0x19b: V144 = S[0x6]
0x19f: V145 = LT V142 V144
0x1a0: V146 = ISZERO V145
0x1a1: V147 = 0x2
0x1a4: THROWI V146
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x339, V142, 0x6, V142]
Exit stack: [V10, 0x339, V142, 0x6, V142]

================================

Block 0x1a5
[0x1a5:0x1e0]
---
Predecessors: [0x191]
Successors: [0x339]
---
0x1a5 POP
0x1a6 PUSH1 0x0
0x1a8 MSTORE
0x1a9 PUSH1 0x2
0x1ab MUL
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af MLOAD
0x1b0 PUSH1 0x20
0x1b2 PUSH2 0x499
0x1b5 DUP4
0x1b6 CODECOPY
0x1b7 DUP2
0x1b8 MLOAD
0x1b9 SWAP2
0x1ba MSTORE
0x1bb DUP2
0x1bc ADD
0x1bd SLOAD
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 MLOAD
0x1c2 PUSH1 0x20
0x1c4 PUSH2 0x479
0x1c7 DUP4
0x1c8 CODECOPY
0x1c9 DUP2
0x1ca MLOAD
0x1cb SWAP2
0x1cc MSTORE
0x1cd SWAP2
0x1ce SWAP1
0x1cf SWAP2
0x1d0 ADD
0x1d1 SLOAD
0x1d2 PUSH1 0x1
0x1d4 PUSH1 0xa0
0x1d6 PUSH1 0x2
0x1d8 EXP
0x1d9 SUB
0x1da SWAP2
0x1db SWAP1
0x1dc SWAP2
0x1dd AND
0x1de SWAP1
0x1df DUP3
0x1e0 JUMP
---
0x1a6: V148 = 0x0
0x1a8: M[0x0] = 0x6
0x1a9: V149 = 0x2
0x1ab: V150 = MUL 0x2 V142
0x1ac: V151 = 0x0
0x1af: V152 = M[0x0]
0x1b0: V153 = 0x20
0x1b2: V154 = 0x499
0x1b6: CODECOPY 0x0 0x499 0x20
0x1b8: V155 = M[0x0]
0x1ba: M[0x0] = V152
0x1bc: V156 = ADD V150 V155
0x1bd: V157 = S[V156]
0x1be: V158 = 0x0
0x1c1: V159 = M[0x0]
0x1c2: V160 = 0x20
0x1c4: V161 = 0x479
0x1c8: CODECOPY 0x0 0x479 0x20
0x1ca: V162 = M[0x0]
0x1cc: M[0x0] = V159
0x1d0: V163 = ADD V162 V150
0x1d1: V164 = S[V163]
0x1d2: V165 = 0x1
0x1d4: V166 = 0xa0
0x1d6: V167 = 0x2
0x1d8: V168 = EXP 0x2 0xa0
0x1d9: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dd: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x1e0: JUMP 0x339
---
Entry stack: [V10, 0x339, V142, 0x6, V142]
Stack pops: 4
Stack additions: [S3, V170, V164]
Exit stack: [V10, 0x339, V170, V164]

================================

Block 0x1e1
[0x1e1:0x1e2]
---
Predecessors: [0x315]
Successors: []
---
0x1e1 JUMPDEST
0x1e2 STOP
---
0x1e1: JUMPDEST 
0x1e2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e3
[0x1e3:0x1ed]
---
Predecessors: [0x6c, 0x318]
Successors: [0x1ee]
---
0x1e3 JUMPDEST
0x1e4 POP
0x1e5 POP
0x1e6 SLOAD
0x1e7 DUP2
0x1e8 LT
0x1e9 ISZERO
0x1ea PUSH2 0x2
0x1ed JUMPI
---
0x1e3: JUMPDEST 
0x1e6: V171 = S[0x6]
0x1e8: V172 = LT V39 V171
0x1e9: V173 = ISZERO V172
0x1ea: V174 = 0x2
0x1ed: THROWI V173
---
Entry stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, S0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1e1, 0x0, 0x6, V39]

================================

Block 0x1ee
[0x1ee:0x2a9]
---
Predecessors: [0x1e3]
Successors: [0x2aa]
---
0x1ee SWAP1
0x1ef DUP3
0x1f0 MSTORE
0x1f1 PUSH1 0x0
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 PUSH1 0x20
0x1f7 PUSH2 0x499
0x1fa DUP4
0x1fb CODECOPY
0x1fc DUP2
0x1fd MLOAD
0x1fe SWAP2
0x1ff MSTORE
0x200 PUSH1 0x2
0x202 SWAP2
0x203 DUP3
0x204 MUL
0x205 SWAP1
0x206 DUP2
0x207 ADD
0x208 DUP1
0x209 SLOAD
0x20a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21f NOT
0x220 AND
0x221 CALLER
0x222 SWAP1
0x223 DUP2
0x224 OR
0x225 DUP3
0x226 SSTORE
0x227 CALLVALUE
0x228 PUSH1 0x0
0x22a DUP1
0x22b MLOAD
0x22c PUSH1 0x20
0x22e PUSH2 0x479
0x231 DUP4
0x232 CODECOPY
0x233 DUP2
0x234 MLOAD
0x235 SWAP2
0x236 MSTORE
0x237 SWAP1
0x238 SWAP4
0x239 ADD
0x23a DUP4
0x23b DUP2
0x23c SSTORE
0x23d DUP5
0x23e SLOAD
0x23f SWAP1
0x240 SWAP4
0x241 ADD
0x242 SWAP1
0x243 SWAP4
0x244 SSTORE
0x245 PUSH1 0x5
0x247 SLOAD
0x248 PUSH1 0x4
0x24a SLOAD
0x24b SWAP3
0x24c SLOAD
0x24d PUSH32 0x90b98a1100000000000000000000000000000000000000000000000000000000
0x26e PUSH1 0x60
0x270 SWAP1
0x271 DUP2
0x272 MSTORE
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b SWAP6
0x27c DUP7
0x27d AND
0x27e PUSH1 0x64
0x280 MSTORE
0x281 SWAP4
0x282 SWAP1
0x283 DIV
0x284 PUSH1 0x84
0x286 MSTORE
0x287 SWAP1
0x288 SWAP4
0x289 SWAP3
0x28a AND
0x28b SWAP2
0x28c PUSH4 0x90b98a11
0x291 SWAP2
0x292 PUSH1 0xa4
0x294 SWAP2
0x295 PUSH1 0x20
0x297 SWAP2
0x298 SWAP1
0x299 PUSH1 0x44
0x29b SWAP1
0x29c DUP3
0x29d SWAP1
0x29e DUP8
0x29f PUSH2 0x61da
0x2a2 GAS
0x2a3 SUB
0x2a4 CALL
0x2a5 ISZERO
0x2a6 PUSH2 0x2
0x2a9 JUMPI
---
0x1f0: M[0x0] = 0x6
0x1f1: V175 = 0x0
0x1f4: V176 = M[0x0]
0x1f5: V177 = 0x20
0x1f7: V178 = 0x499
0x1fb: CODECOPY 0x0 0x499 0x20
0x1fd: V179 = M[0x0]
0x1ff: M[0x0] = V176
0x200: V180 = 0x2
0x204: V181 = MUL 0x2 V39
0x207: V182 = ADD V181 V179
0x209: V183 = S[V182]
0x20a: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x21f: V185 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x220: V186 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V183
0x221: V187 = CALLER
0x224: V188 = OR V187 V186
0x226: S[V182] = V188
0x227: V189 = CALLVALUE
0x228: V190 = 0x0
0x22b: V191 = M[0x0]
0x22c: V192 = 0x20
0x22e: V193 = 0x479
0x232: CODECOPY 0x0 0x479 0x20
0x234: V194 = M[0x0]
0x236: M[0x0] = V191
0x239: V195 = ADD V181 V194
0x23c: S[V195] = V189
0x23e: V196 = S[0x2]
0x241: V197 = ADD V189 V196
0x244: S[0x2] = V197
0x245: V198 = 0x5
0x247: V199 = S[0x5]
0x248: V200 = 0x4
0x24a: V201 = S[0x4]
0x24c: V202 = S[V195]
0x24d: V203 = 0x90b98a1100000000000000000000000000000000000000000000000000000000
0x26e: V204 = 0x60
0x272: M[0x60] = 0x90b98a1100000000000000000000000000000000000000000000000000000000
0x273: V205 = 0x1
0x275: V206 = 0xa0
0x277: V207 = 0x2
0x279: V208 = EXP 0x2 0xa0
0x27a: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x27e: V211 = 0x64
0x280: M[0x64] = V210
0x283: V212 = DIV V202 V201
0x284: V213 = 0x84
0x286: M[0x84] = V212
0x28a: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x28c: V215 = 0x90b98a11
0x292: V216 = 0xa4
0x295: V217 = 0x20
0x299: V218 = 0x44
0x29f: V219 = 0x61da
0x2a2: V220 = GAS
0x2a3: V221 = SUB V220 0x61da
0x2a4: V222 = CALL V221 V214 0x0 0x60 0x44 0x60 0x20
0x2a5: V223 = ISZERO V222
0x2a6: V224 = 0x2
0x2a9: THROWI V223
---
Entry stack: [V10, 0x1e1, 0x0, 0x6, V39]
Stack pops: 3
Stack additions: [V182, V214, 0x90b98a11, 0xa4]
Exit stack: [V10, 0x1e1, V182, V214, 0x90b98a11, 0xa4]

================================

Block 0x2aa
[0x2aa:0x314]
---
Predecessors: [0x1ee]
Successors: [0x315]
---
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 DUP1
0x2b1 MLOAD
0x2b2 SWAP1
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 POP
0x2b7 POP
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb MLOAD
0x2bc PUSH1 0x20
0x2be PUSH2 0x4b9
0x2c1 DUP4
0x2c2 CODECOPY
0x2c3 DUP2
0x2c4 MLOAD
0x2c5 SWAP2
0x2c6 MSTORE
0x2c7 DUP2
0x2c8 PUSH1 0x0
0x2ca ADD
0x2cb PUSH1 0x0
0x2cd SWAP1
0x2ce SLOAD
0x2cf SWAP1
0x2d0 PUSH2 0x100
0x2d3 EXP
0x2d4 SWAP1
0x2d5 DIV
0x2d6 PUSH1 0x1
0x2d8 PUSH1 0xa0
0x2da PUSH1 0x2
0x2dc EXP
0x2dd SUB
0x2de AND
0x2df DUP3
0x2e0 PUSH1 0x1
0x2e2 ADD
0x2e3 PUSH1 0x0
0x2e5 POP
0x2e6 SLOAD
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0x40
0x2eb MLOAD
0x2ec DUP1
0x2ed DUP5
0x2ee PUSH1 0x1
0x2f0 PUSH1 0xa0
0x2f2 PUSH1 0x2
0x2f4 EXP
0x2f5 SUB
0x2f6 AND
0x2f7 DUP2
0x2f8 MSTORE
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc DUP4
0x2fd DUP2
0x2fe MSTORE
0x2ff PUSH1 0x20
0x301 ADD
0x302 DUP3
0x303 DUP2
0x304 MSTORE
0x305 PUSH1 0x20
0x307 ADD
0x308 SWAP4
0x309 POP
0x30a POP
0x30b POP
0x30c POP
0x30d PUSH1 0x40
0x30f MLOAD
0x310 DUP1
0x311 SWAP2
0x312 SUB
0x313 SWAP1
0x314 LOG1
---
0x2ad: V225 = 0x40
0x2af: V226 = M[0x40]
0x2b1: V227 = M[V226]
0x2b3: V228 = 0x20
0x2b5: V229 = ADD 0x20 V226
0x2b8: V230 = 0x0
0x2bb: V231 = M[0x0]
0x2bc: V232 = 0x20
0x2be: V233 = 0x4b9
0x2c2: CODECOPY 0x0 0x4b9 0x20
0x2c4: V234 = M[0x0]
0x2c6: M[0x0] = V231
0x2c8: V235 = 0x0
0x2ca: V236 = ADD 0x0 V182
0x2cb: V237 = 0x0
0x2ce: V238 = S[V236]
0x2d0: V239 = 0x100
0x2d3: V240 = EXP 0x100 0x0
0x2d5: V241 = DIV V238 0x1
0x2d6: V242 = 0x1
0x2d8: V243 = 0xa0
0x2da: V244 = 0x2
0x2dc: V245 = EXP 0x2 0xa0
0x2dd: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2de: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x2e0: V248 = 0x1
0x2e2: V249 = ADD 0x1 V182
0x2e3: V250 = 0x0
0x2e6: V251 = S[V249]
0x2e7: V252 = 0x1
0x2e9: V253 = 0x40
0x2eb: V254 = M[0x40]
0x2ee: V255 = 0x1
0x2f0: V256 = 0xa0
0x2f2: V257 = 0x2
0x2f4: V258 = EXP 0x2 0xa0
0x2f5: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2f8: M[V254] = V260
0x2f9: V261 = 0x20
0x2fb: V262 = ADD 0x20 V254
0x2fe: M[V262] = V251
0x2ff: V263 = 0x20
0x301: V264 = ADD 0x20 V262
0x304: M[V264] = 0x1
0x305: V265 = 0x20
0x307: V266 = ADD 0x20 V264
0x30d: V267 = 0x40
0x30f: V268 = M[0x40]
0x312: V269 = SUB V266 V268
0x314: LOG V268 V269 V234
---
Entry stack: [V10, 0x1e1, V182, V214, 0x90b98a11, 0xa4]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1e1, V182]

================================

Block 0x315
[0x315:0x317]
---
Predecessors: [0xd4, 0x2aa]
Successors: [0x1e1]
---
0x315 JUMPDEST
0x316 POP
0x317 JUMP
---
0x315: JUMPDEST 
0x317: JUMP 0x1e1
---
Entry stack: [V10, 0x1e1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0xa6]
Successors: [0x1e3]
---
0x318 JUMPDEST
0x319 POP
0x31a SWAP1
0x31b JUMP
---
0x318: JUMPDEST 
0x31b: JUMP 0x1e3
---
Entry stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, 0x1e3, V52, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x1e1, 0x0, 0x6, V39, 0x6, V39, V52]

================================

Block 0x31c
[0x31c:0x325]
---
Predecessors: [0x149, 0x176, 0x17f, 0x188]
Successors: []
---
0x31c JUMPDEST
0x31d PUSH1 0x60
0x31f SWAP1
0x320 DUP2
0x321 MSTORE
0x322 PUSH1 0x20
0x324 SWAP1
0x325 RETURN
---
0x31c: JUMPDEST 
0x31d: V270 = 0x60
0x321: M[0x60] = S0
0x322: V271 = 0x20
0x325: RETURN 0x60 0x20
---
Entry stack: [V10, 0x31c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x31c]

================================

Block 0x326
[0x326:0x338]
---
Predecessors: [0x152, 0x164]
Successors: []
---
0x326 JUMPDEST
0x327 PUSH1 0x1
0x329 PUSH1 0xa0
0x32b PUSH1 0x2
0x32d EXP
0x32e SUB
0x32f AND
0x330 PUSH1 0x60
0x332 SWAP1
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x20
0x337 SWAP1
0x338 RETURN
---
0x326: JUMPDEST 
0x327: V272 = 0x1
0x329: V273 = 0xa0
0x32b: V274 = 0x2
0x32d: V275 = EXP 0x2 0xa0
0x32e: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32f: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x330: V278 = 0x60
0x334: M[0x60] = V277
0x335: V279 = 0x20
0x338: RETURN 0x60 0x20
---
Entry stack: [V10, 0x326, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x326]

================================

Block 0x339
[0x339:0x345]
---
Predecessors: [0x1a5]
Successors: []
---
0x339 JUMPDEST
0x33a PUSH1 0x60
0x33c SWAP2
0x33d DUP3
0x33e MSTORE
0x33f PUSH1 0x80
0x341 MSTORE
0x342 PUSH1 0x40
0x344 SWAP1
0x345 RETURN
---
0x339: JUMPDEST 
0x33a: V280 = 0x60
0x33e: M[0x60] = V170
0x33f: V281 = 0x80
0x341: M[0x80] = V164
0x342: V282 = 0x40
0x345: RETURN 0x60 0x40
---
Entry stack: [V10, 0x339, V170, V164]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x339]

================================

Block 0x346
[0x346:0x367]
---
Predecessors: [0xe4]
Successors: [0x368]
---
0x346 JUMPDEST
0x347 PUSH1 0x60
0x349 DUP2
0x34a DUP2
0x34b MSTORE
0x34c PUSH1 0xb
0x34e PUSH1 0x80
0x350 MSTORE
0x351 PUSH1 0xa0
0x353 DUP3
0x354 SWAP1
0x355 MSTORE
0x356 PUSH1 0x0
0x358 DUP1
0x359 MLOAD
0x35a PUSH1 0x20
0x35c PUSH2 0x4b9
0x35f DUP4
0x360 CODECOPY
0x361 DUP2
0x362 MLOAD
0x363 SWAP2
0x364 MSTORE
0x365 SWAP1
0x366 DUP1
0x367 LOG1
---
0x346: JUMPDEST 
0x347: V283 = 0x60
0x34b: M[0x60] = 0x0
0x34c: V284 = 0xb
0x34e: V285 = 0x80
0x350: M[0x80] = 0xb
0x351: V286 = 0xa0
0x355: M[0xa0] = 0x0
0x356: V287 = 0x0
0x359: V288 = M[0x0]
0x35a: V289 = 0x20
0x35c: V290 = 0x4b9
0x360: CODECOPY 0x0 0x4b9 0x20
0x362: V291 = M[0x0]
0x364: M[0x0] = V288
0x367: LOG 0x60 0x60 V291
---
Entry stack: [V10, 0x1e1, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e1, 0x0]

================================

Block 0x368
[0x368:0x372]
---
Predecessors: [0x346, 0x42e]
Successors: [0x13b, 0x373]
---
0x368 JUMPDEST
0x369 PUSH1 0x6
0x36b SLOAD
0x36c DUP2
0x36d LT
0x36e ISZERO
0x36f PUSH2 0x13b
0x372 JUMPI
---
0x368: JUMPDEST 
0x369: V292 = 0x6
0x36b: V293 = S[0x6]
0x36d: V294 = LT S0 V293
0x36e: V295 = ISZERO V294
0x36f: V296 = 0x13b
0x372: JUMPI 0x13b V295
---
Entry stack: [V10, 0x1e1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e1, S0]

================================

Block 0x373
[0x373:0x37f]
---
Predecessors: [0x368]
Successors: [0x380]
---
0x373 PUSH1 0x6
0x375 DUP1
0x376 SLOAD
0x377 DUP3
0x378 SWAP1
0x379 DUP2
0x37a LT
0x37b ISZERO
0x37c PUSH2 0x2
0x37f JUMPI
---
0x373: V297 = 0x6
0x376: V298 = S[0x6]
0x37a: V299 = LT S0 V298
0x37b: V300 = ISZERO V299
0x37c: V301 = 0x2
0x37f: THROWI V300
---
Entry stack: [V10, 0x1e1, S0]
Stack pops: 1
Stack additions: [S0, 0x6, S0]
Exit stack: [V10, 0x1e1, S0, 0x6, S0]

================================

Block 0x380
[0x380:0x3b5]
---
Predecessors: [0x373]
Successors: [0x3b6]
---
0x380 PUSH1 0x0
0x382 SWAP2
0x383 DUP3
0x384 MSTORE
0x385 PUSH1 0x2
0x387 MUL
0x388 PUSH1 0x0
0x38a DUP1
0x38b MLOAD
0x38c PUSH1 0x20
0x38e PUSH2 0x499
0x391 DUP4
0x392 CODECOPY
0x393 DUP2
0x394 MLOAD
0x395 SWAP2
0x396 MSTORE
0x397 ADD
0x398 SWAP1
0x399 SWAP1
0x39a SLOAD
0x39b PUSH1 0x6
0x39d DUP1
0x39e SLOAD
0x39f PUSH1 0x1
0x3a1 PUSH1 0xa0
0x3a3 PUSH1 0x2
0x3a5 EXP
0x3a6 SUB
0x3a7 SWAP3
0x3a8 SWAP1
0x3a9 SWAP3
0x3aa AND
0x3ab SWAP3
0x3ac SWAP2
0x3ad DUP5
0x3ae SWAP1
0x3af DUP2
0x3b0 LT
0x3b1 ISZERO
0x3b2 PUSH2 0x2
0x3b5 JUMPI
---
0x380: V302 = 0x0
0x384: M[0x0] = 0x6
0x385: V303 = 0x2
0x387: V304 = MUL 0x2 S0
0x388: V305 = 0x0
0x38b: V306 = M[0x0]
0x38c: V307 = 0x20
0x38e: V308 = 0x499
0x392: CODECOPY 0x0 0x499 0x20
0x394: V309 = M[0x0]
0x396: M[0x0] = V306
0x397: V310 = ADD V309 V304
0x39a: V311 = S[V310]
0x39b: V312 = 0x6
0x39e: V313 = S[0x6]
0x39f: V314 = 0x1
0x3a1: V315 = 0xa0
0x3a3: V316 = 0x2
0x3a5: V317 = EXP 0x2 0xa0
0x3a6: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3aa: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x3b0: V320 = LT S2 V313
0x3b1: V321 = ISZERO V320
0x3b2: V322 = 0x2
0x3b5: THROWI V321
---
Entry stack: [V10, 0x1e1, S2, 0x6, S0]
Stack pops: 3
Stack additions: [S2, V319, 0x0, 0x6, S2]
Exit stack: [V10, 0x1e1, S2, V319, 0x0, 0x6, S2]

================================

Block 0x3b6
[0x3b6:0x3fb]
---
Predecessors: [0x380]
Successors: [0x3fc]
---
0x3b6 PUSH1 0x2
0x3b8 MUL
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc MLOAD
0x3bd PUSH1 0x20
0x3bf PUSH2 0x479
0x3c2 DUP4
0x3c3 CODECOPY
0x3c4 DUP2
0x3c5 MLOAD
0x3c6 SWAP2
0x3c7 MSTORE
0x3c8 ADD
0x3c9 SLOAD
0x3ca PUSH1 0x40
0x3cc MLOAD
0x3cd SWAP1
0x3ce SWAP2
0x3cf POP
0x3d0 DUP3
0x3d1 DUP2
0x3d2 DUP2
0x3d3 DUP2
0x3d4 DUP6
0x3d5 DUP9
0x3d6 DUP4
0x3d7 CALL
0x3d8 SWAP4
0x3d9 POP
0x3da POP
0x3db POP
0x3dc POP
0x3dd POP
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 MLOAD
0x3e2 PUSH1 0x20
0x3e4 PUSH2 0x4b9
0x3e7 DUP4
0x3e8 CODECOPY
0x3e9 DUP2
0x3ea MLOAD
0x3eb SWAP2
0x3ec MSTORE
0x3ed PUSH1 0x6
0x3ef PUSH1 0x0
0x3f1 POP
0x3f2 DUP3
0x3f3 DUP2
0x3f4 SLOAD
0x3f5 DUP2
0x3f6 LT
0x3f7 ISZERO
0x3f8 PUSH2 0x2
0x3fb JUMPI
---
0x3b6: V323 = 0x2
0x3b8: V324 = MUL 0x2 S0
0x3b9: V325 = 0x0
0x3bc: V326 = M[0x0]
0x3bd: V327 = 0x20
0x3bf: V328 = 0x479
0x3c3: CODECOPY 0x0 0x479 0x20
0x3c5: V329 = M[0x0]
0x3c7: M[0x0] = V326
0x3c8: V330 = ADD V329 V324
0x3c9: V331 = S[V330]
0x3ca: V332 = 0x40
0x3cc: V333 = M[0x40]
0x3d7: V334 = CALL 0x0 V319 V331 V333 0x0 V333 0x0
0x3de: V335 = 0x0
0x3e1: V336 = M[0x0]
0x3e2: V337 = 0x20
0x3e4: V338 = 0x4b9
0x3e8: CODECOPY 0x0 0x4b9 0x20
0x3ea: V339 = M[0x0]
0x3ec: M[0x0] = V336
0x3ed: V340 = 0x6
0x3ef: V341 = 0x0
0x3f4: V342 = S[0x6]
0x3f6: V343 = LT S4 V342
0x3f7: V344 = ISZERO V343
0x3f8: V345 = 0x2
0x3fb: THROWI V344
---
Entry stack: [V10, 0x1e1, S4, V319, 0x0, 0x6, S0]
Stack pops: 5
Stack additions: [S4, V339, 0x6, S4]
Exit stack: [V10, 0x1e1, S4, V339, 0x6, S4]

================================

Block 0x3fc
[0x3fc:0x42d]
---
Predecessors: [0x3b6]
Successors: [0x42e]
---
0x3fc PUSH1 0x0
0x3fe DUP3
0x3ff SWAP1
0x400 MSTORE
0x401 PUSH1 0x2
0x403 MUL
0x404 PUSH1 0x0
0x406 DUP1
0x407 MLOAD
0x408 PUSH1 0x20
0x40a PUSH2 0x499
0x40d DUP4
0x40e CODECOPY
0x40f DUP2
0x410 MLOAD
0x411 SWAP2
0x412 MSTORE
0x413 ADD
0x414 SLOAD
0x415 DUP2
0x416 SLOAD
0x417 PUSH1 0x1
0x419 PUSH1 0xa0
0x41b PUSH1 0x2
0x41d EXP
0x41e SUB
0x41f SWAP2
0x420 SWAP1
0x421 SWAP2
0x422 AND
0x423 SWAP2
0x424 SWAP1
0x425 DUP5
0x426 SWAP1
0x427 DUP2
0x428 LT
0x429 ISZERO
0x42a PUSH2 0x2
0x42d JUMPI
---
0x3fc: V346 = 0x0
0x400: M[0x0] = 0x6
0x401: V347 = 0x2
0x403: V348 = MUL 0x2 S0
0x404: V349 = 0x0
0x407: V350 = M[0x0]
0x408: V351 = 0x20
0x40a: V352 = 0x499
0x40e: CODECOPY 0x0 0x499 0x20
0x410: V353 = M[0x0]
0x412: M[0x0] = V350
0x413: V354 = ADD V353 V348
0x414: V355 = S[V354]
0x416: V356 = S[0x6]
0x417: V357 = 0x1
0x419: V358 = 0xa0
0x41b: V359 = 0x2
0x41d: V360 = EXP 0x2 0xa0
0x41e: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x428: V363 = LT S3 V356
0x429: V364 = ISZERO V363
0x42a: V365 = 0x2
0x42d: THROWI V364
---
Entry stack: [V10, 0x1e1, S3, V339, 0x6, S0]
Stack pops: 4
Stack additions: [S3, S2, V362, S1, S3]
Exit stack: [V10, 0x1e1, S3, V339, V362, 0x6, S3]

================================

Block 0x42e
[0x42e:0x478]
---
Predecessors: [0x3fc]
Successors: [0x368]
---
0x42e PUSH1 0x40
0x430 DUP1
0x431 MLOAD
0x432 PUSH1 0x2
0x434 SWAP3
0x435 SWAP1
0x436 SWAP3
0x437 MUL
0x438 PUSH1 0x0
0x43a DUP1
0x43b MLOAD
0x43c PUSH1 0x20
0x43e PUSH2 0x479
0x441 DUP4
0x442 CODECOPY
0x443 DUP2
0x444 MLOAD
0x445 SWAP2
0x446 MSTORE
0x447 ADD
0x448 SLOAD
0x449 PUSH1 0x1
0x44b PUSH1 0xa0
0x44d PUSH1 0x2
0x44f EXP
0x450 SUB
0x451 SWAP5
0x452 SWAP1
0x453 SWAP5
0x454 AND
0x455 DUP3
0x456 MSTORE
0x457 PUSH1 0x20
0x459 DUP3
0x45a ADD
0x45b SWAP4
0x45c SWAP1
0x45d SWAP4
0x45e MSTORE
0x45f PUSH1 0x0
0x461 DUP2
0x462 DUP5
0x463 ADD
0x464 MSTORE
0x465 SWAP2
0x466 MLOAD
0x467 SWAP2
0x468 DUP3
0x469 SWAP1
0x46a SUB
0x46b PUSH1 0x60
0x46d ADD
0x46e SWAP2
0x46f SWAP1
0x470 POP
0x471 LOG1
0x472 PUSH1 0x1
0x474 ADD
0x475 PUSH2 0x368
0x478 JUMP
---
0x42e: V366 = 0x40
0x431: V367 = M[0x40]
0x432: V368 = 0x2
0x437: V369 = MUL 0x2 S0
0x438: V370 = 0x0
0x43b: V371 = M[0x0]
0x43c: V372 = 0x20
0x43e: V373 = 0x479
0x442: CODECOPY 0x0 0x479 0x20
0x444: V374 = M[0x0]
0x446: M[0x0] = V371
0x447: V375 = ADD V374 V369
0x448: V376 = S[V375]
0x449: V377 = 0x1
0x44b: V378 = 0xa0
0x44d: V379 = 0x2
0x44f: V380 = EXP 0x2 0xa0
0x450: V381 = SUB 0x10000000000000000000000000000000000000000 0x1
0x454: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x456: M[V367] = V382
0x457: V383 = 0x20
0x45a: V384 = ADD V367 0x20
0x45e: M[V384] = V376
0x45f: V385 = 0x0
0x463: V386 = ADD 0x40 V367
0x464: M[V386] = 0x0
0x466: V387 = M[0x40]
0x46a: V388 = SUB V367 V387
0x46b: V389 = 0x60
0x46d: V390 = ADD 0x60 V388
0x471: LOG V387 V390 V339
0x472: V391 = 0x1
0x474: V392 = ADD 0x1 S4
0x475: V393 = 0x368
0x478: JUMP 0x368
---
Entry stack: [V10, 0x1e1, S4, V339, V362, 0x6, S0]
Stack pops: 5
Stack additions: [V392]
Exit stack: [V10, 0x1e1, V392]

================================

Block 0x479
[0x479:0x4d8]
---
Predecessors: []
Successors: []
---
0x479 MISSING 0xf6
0x47a MSTORE
0x47b MISSING 0x22
0x47c MISSING 0x23
0x47d SGT
0x47e MISSING 0xe2
0x47f DUP5
0x480 MSIZE
0x481 MSTORE
0x482 DUP14
0x483 SWAP3
0x484 SIGNEXTEND
0x485 PUSH6 0x115c16c04f3e
0x48c MISSING 0xfc
0x48d DUP3
0x48e MISSING 0xaa
0x48f MISSING 0xed
0x490 MISSING 0xc9
0x491 PUSH28 0xe59f3f377c0d40f652222313e28459528d920b65115c16c04f3efc82
0x4ae MISSING 0xaa
0x4af MISSING 0xed
0x4b0 MISSING 0xc9
0x4b1 PUSH28 0xe59f3f377c0d3fe842aea7a5f1b01049d752008c53c52890b1a6daf6
0x4ce PUSH1 0xcf
0x4d0 CODECOPY
0x4d1 MISSING 0xe8
0x4d2 MISSING 0xee
0x4d3 MISSING 0xc5
0x4d4 MOD
0x4d5 GT
0x4d6 MISSING 0x2b
0x4d7 MISSING 0xbd
0x4d8 MISSING 0xf6
---
0x479: MISSING 0xf6
0x47a: M[S0] = S1
0x47b: MISSING 0x22
0x47c: MISSING 0x23
0x47d: V394 = SGT S0 S1
0x47e: MISSING 0xe2
0x480: V395 = MSIZE
0x481: M[V395] = S4
0x484: V396 = SIGNEXTEND S2 S0
0x485: V397 = 0x115c16c04f3e
0x48c: MISSING 0xfc
0x48e: MISSING 0xaa
0x48f: MISSING 0xed
0x490: MISSING 0xc9
0x491: V398 = 0xe59f3f377c0d40f652222313e28459528d920b65115c16c04f3efc82
0x4ae: MISSING 0xaa
0x4af: MISSING 0xed
0x4b0: MISSING 0xc9
0x4b1: V399 = 0xe59f3f377c0d3fe842aea7a5f1b01049d752008c53c52890b1a6daf6
0x4ce: V400 = 0xcf
0x4d0: CODECOPY 0xcf 0xe59f3f377c0d3fe842aea7a5f1b01049d752008c53c52890b1a6daf6 S0
0x4d1: MISSING 0xe8
0x4d2: MISSING 0xee
0x4d3: MISSING 0xc5
0x4d4: V401 = MOD S0 S1
0x4d5: V402 = GT V401 S2
0x4d6: MISSING 0x2b
0x4d7: MISSING 0xbd
0x4d8: MISSING 0xf6
---
Entry stack: []
Stack pops: 0
Stack additions: [V394, 0x115c16c04f3e, V396, S1, S13, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S2, S0, S1, S2, 0xe59f3f377c0d40f652222313e28459528d920b65115c16c04f3efc82, V402]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0xd4
Exit block: 0x13b
Body: 0xd4, 0xe4, 0xf0, 0x13b, 0x1e1, 0x315, 0x346, 0x368, 0x373, 0x380, 0x3b6, 0x3fc, 0x42e

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x149
Exit block: 0x31c
Body: 0x149, 0x31c

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x152
Exit block: 0x326
Body: 0x152, 0x326

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x164
Exit block: 0x326
Body: 0x164, 0x326

Function 4:
Public function signature: 0x7a3a0e84
Entry block: 0x176
Exit block: 0x31c
Body: 0x176, 0x31c

Function 5:
Public function signature: 0x7b3e5e7b
Entry block: 0x17f
Exit block: 0x31c
Body: 0x17f, 0x31c

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x188
Exit block: 0x31c
Body: 0x188, 0x31c

Function 7:
Public function signature: 0xdc0d3dff
Entry block: 0x191
Exit block: 0x339
Body: 0x191, 0x1a5, 0x339

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x1e1
Body: 0x6c, 0x8c, 0xa6, 0xaf, 0x1e1, 0x1e3, 0x1ee, 0x2aa, 0x315, 0x318

