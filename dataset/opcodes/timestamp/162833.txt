Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa3
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa3
0xa: JUMPI 0xa3 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x11c]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x89c22ad
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x11c
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x89c22ad
0x1a: V12 = EQ V10 0x89c22ad
0x1b: V13 = 0x11c
0x1e: JUMPI 0x11c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x12a]
---
0x1f DUP1
0x20 PUSH4 0x38af3eed
0x25 EQ
0x26 PUSH2 0x12a
0x29 JUMPI
---
0x20: V14 = 0x38af3eed
0x25: V15 = EQ 0x38af3eed V10
0x26: V16 = 0x12a
0x29: JUMPI 0x12a V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x141]
---
0x2a DUP1
0x2b PUSH4 0x4b449cba
0x30 EQ
0x31 PUSH2 0x141
0x34 JUMPI
---
0x2b: V17 = 0x4b449cba
0x30: V18 = EQ 0x4b449cba V10
0x31: V19 = 0x141
0x34: JUMPI 0x141 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x160]
---
0x35 DUP1
0x36 PUSH4 0x4d804e60
0x3b EQ
0x3c PUSH2 0x160
0x3f JUMPI
---
0x36: V20 = 0x4d804e60
0x3b: V21 = EQ 0x4d804e60 V10
0x3c: V22 = 0x160
0x3f: JUMPI 0x160 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x172]
---
0x40 DUP1
0x41 PUSH4 0x4f245ef7
0x46 EQ
0x47 PUSH2 0x172
0x4a JUMPI
---
0x41: V23 = 0x4f245ef7
0x46: V24 = EQ 0x4f245ef7 V10
0x47: V25 = 0x172
0x4a: JUMPI 0x172 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x180]
---
0x4b DUP1
0x4c PUSH4 0x5d7db95d
0x51 EQ
0x52 PUSH2 0x180
0x55 JUMPI
---
0x4c: V26 = 0x5d7db95d
0x51: V27 = EQ 0x5d7db95d V10
0x52: V28 = 0x180
0x55: JUMPI 0x180 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1a5]
---
0x56 DUP1
0x57 PUSH4 0x5f8909bd
0x5c EQ
0x5d PUSH2 0x1a5
0x60 JUMPI
---
0x57: V29 = 0x5f8909bd
0x5c: V30 = EQ 0x5f8909bd V10
0x5d: V31 = 0x1a5
0x60: JUMPI 0x1a5 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1b3]
---
0x61 DUP1
0x62 PUSH4 0x6bd61a66
0x67 EQ
0x68 PUSH2 0x1b3
0x6b JUMPI
---
0x62: V32 = 0x6bd61a66
0x67: V33 = EQ 0x6bd61a66 V10
0x68: V34 = 0x1b3
0x6b: JUMPI 0x1b3 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1c0]
---
0x6c DUP1
0x6d PUSH4 0x7f0a1bed
0x72 EQ
0x73 PUSH2 0x1c0
0x76 JUMPI
---
0x6d: V35 = 0x7f0a1bed
0x72: V36 = EQ 0x7f0a1bed V10
0x73: V37 = 0x1c0
0x76: JUMPI 0x1c0 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1e3]
---
0x77 DUP1
0x78 PUSH4 0x91f90157
0x7d EQ
0x7e PUSH2 0x1e3
0x81 JUMPI
---
0x78: V38 = 0x91f90157
0x7d: V39 = EQ 0x91f90157 V10
0x7e: V40 = 0x1e3
0x81: JUMPI 0x1e3 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1fa]
---
0x82 DUP1
0x83 PUSH4 0x951504c5
0x88 EQ
0x89 PUSH2 0x1fa
0x8c JUMPI
---
0x83: V41 = 0x951504c5
0x88: V42 = EQ 0x951504c5 V10
0x89: V43 = 0x1fa
0x8c: JUMPI 0x1fa V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x21f]
---
0x8d DUP1
0x8e PUSH4 0xc8b342ab
0x93 EQ
0x94 PUSH2 0x21f
0x97 JUMPI
---
0x8e: V44 = 0xc8b342ab
0x93: V45 = EQ 0xc8b342ab V10
0x94: V46 = 0x21f
0x97: JUMPI 0x21f V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x24c]
---
0x98 DUP1
0x99 PUSH4 0xd57bde79
0x9e EQ
0x9f PUSH2 0x24c
0xa2 JUMPI
---
0x99: V47 = 0xd57bde79
0x9e: V48 = EQ 0xd57bde79 V10
0x9f: V49 = 0x24c
0xa2: JUMPI 0x24c V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xb4]
---
Predecessors: [0x0, 0x98]
Successors: [0xb5, 0x25c]
---
0xa3 JUMPDEST
0xa4 PUSH2 0x25a
0xa7 PUSH6 0x5af3107a4000
0xae CALLVALUE
0xaf EQ
0xb0 ISZERO
0xb1 PUSH2 0x25c
0xb4 JUMPI
---
0xa3: JUMPDEST 
0xa4: V50 = 0x25a
0xa7: V51 = 0x5af3107a4000
0xae: V52 = CALLVALUE
0xaf: V53 = EQ V52 0x5af3107a4000
0xb0: V54 = ISZERO V53
0xb1: V55 = 0x25c
0xb4: JUMPI 0x25c V54
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25a]
Exit stack: [V10, 0x25a]

================================

Block 0xb5
[0xb5:0xb7]
---
Predecessors: [0xa3]
Successors: [0xb8]
---
0xb5 PUSH2 0x264
---
0xb5: V56 = 0x264
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: [0x264]
Exit stack: [V10, 0x25a, 0x264]

================================

Block 0xb8
[0xb8:0xd9]
---
Predecessors: [0xb5, 0x1b9]
Successors: [0xda, 0x2f0]
---
0xb8 JUMPDEST
0xb9 PUSH1 0x1
0xbb PUSH1 0xa0
0xbd PUSH1 0x2
0xbf EXP
0xc0 SUB
0xc1 CALLER
0xc2 AND
0xc3 PUSH1 0x0
0xc5 SWAP1
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x6
0xca PUSH1 0x20
0xcc MSTORE
0xcd PUSH1 0x40
0xcf DUP2
0xd0 SHA3
0xd1 SLOAD
0xd2 SWAP1
0xd3 DUP2
0xd4 GT
0xd5 ISZERO
0xd6 PUSH2 0x2f0
0xd9 JUMPI
---
0xb8: JUMPDEST 
0xb9: V57 = 0x1
0xbb: V58 = 0xa0
0xbd: V59 = 0x2
0xbf: V60 = EXP 0x2 0xa0
0xc0: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1: V62 = CALLER
0xc2: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V64 = 0x0
0xc7: M[0x0] = V63
0xc8: V65 = 0x6
0xca: V66 = 0x20
0xcc: M[0x20] = 0x6
0xcd: V67 = 0x40
0xd0: V68 = SHA3 0x0 0x40
0xd1: V69 = S[V68]
0xd4: V70 = GT V69 0x0
0xd5: V71 = ISZERO V70
0xd6: V72 = 0x2f0
0xd9: JUMPI 0x2f0 V71
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V10, S1, {0x25a, 0x264}, V69]

================================

Block 0xda
[0xda:0x117]
---
Predecessors: [0xb8]
Successors: [0x118, 0x2f0]
---
0xda PUSH1 0x40
0xdc PUSH1 0x0
0xde DUP2
0xdf DUP2
0xe0 SHA3
0xe1 PUSH1 0x1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SUB
0xe9 CALLER
0xea AND
0xeb DUP1
0xec DUP4
0xed MSTORE
0xee PUSH1 0x6
0xf0 PUSH1 0x20
0xf2 MSTORE
0xf3 SWAP1
0xf4 DUP3
0xf5 SWAP1
0xf6 SSTORE
0xf7 SWAP2
0xf8 MLOAD
0xf9 CALLVALUE
0xfa DUP5
0xfb ADD
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x8fc
0x101 MUL
0x102 SWAP3
0x103 SWAP1
0x104 SWAP2
0x105 SWAP1
0x106 DUP2
0x107 DUP2
0x108 DUP2
0x109 DUP6
0x10a DUP9
0x10b DUP9
0x10c CALL
0x10d SWAP4
0x10e POP
0x10f POP
0x110 POP
0x111 POP
0x112 ISZERO
0x113 ISZERO
0x114 PUSH2 0x2f0
0x117 JUMPI
---
0xda: V73 = 0x40
0xdc: V74 = 0x0
0xe0: V75 = SHA3 0x0 0x40
0xe1: V76 = 0x1
0xe3: V77 = 0xa0
0xe5: V78 = 0x2
0xe7: V79 = EXP 0x2 0xa0
0xe8: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9: V81 = CALLER
0xea: V82 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0xed: M[0x0] = V82
0xee: V83 = 0x6
0xf0: V84 = 0x20
0xf2: M[0x20] = 0x6
0xf6: S[V75] = 0x0
0xf8: V85 = M[0x40]
0xf9: V86 = CALLVALUE
0xfb: V87 = ADD V69 V86
0xfd: V88 = ISZERO V87
0xfe: V89 = 0x8fc
0x101: V90 = MUL 0x8fc V88
0x10c: V91 = CALL V90 V82 V87 V85 0x0 V85 0x0
0x112: V92 = ISZERO V91
0x113: V93 = ISZERO V92
0x114: V94 = 0x2f0
0x117: JUMPI 0x2f0 V93
---
Entry stack: [V10, S2, {0x25a, 0x264}, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S2, {0x25a, 0x264}, V69]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0xda]
Successors: []
---
0x118 PUSH2 0x2
0x11b JUMP
---
0x118: V95 = 0x2
0x11b: THROW 
---
Entry stack: [V10, S2, {0x25a, 0x264}, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0x25a, 0x264}, V69]

================================

Block 0x11c
[0x11c:0x121]
---
Predecessors: [0xb]
Successors: [0x122]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e PUSH2 0x2
0x121 JUMPI
---
0x11c: JUMPDEST 
0x11d: V96 = CALLVALUE
0x11e: V97 = 0x2
0x121: THROWI V96
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x11c]
Successors: [0x14e]
---
0x122 PUSH2 0x14e
0x125 PUSH1 0x3
0x127 SLOAD
0x128 DUP2
0x129 JUMP
---
0x122: V98 = 0x14e
0x125: V99 = 0x3
0x127: V100 = S[0x3]
0x129: JUMP 0x14e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14e, V100]
Exit stack: [V10, 0x14e, V100]

================================

Block 0x12a
[0x12a:0x12f]
---
Predecessors: [0x1f]
Successors: [0x130]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c PUSH2 0x2
0x12f JUMPI
---
0x12a: JUMPDEST 
0x12b: V101 = CALLVALUE
0x12c: V102 = 0x2
0x12f: THROWI V101
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x130
[0x130:0x140]
---
Predecessors: [0x12a]
Successors: [0x266]
---
0x130 PUSH2 0x266
0x133 PUSH1 0x0
0x135 SLOAD
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e AND
0x13f DUP2
0x140 JUMP
---
0x130: V103 = 0x266
0x133: V104 = 0x0
0x135: V105 = S[0x0]
0x136: V106 = 0x1
0x138: V107 = 0xa0
0x13a: V108 = 0x2
0x13c: V109 = EXP 0x2 0xa0
0x13d: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x140: JUMP 0x266
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x266, V111]
Exit stack: [V10, 0x266, V111]

================================

Block 0x141
[0x141:0x146]
---
Predecessors: [0x2a]
Successors: [0x147]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 PUSH2 0x2
0x146 JUMPI
---
0x141: JUMPDEST 
0x142: V112 = CALLVALUE
0x143: V113 = 0x2
0x146: THROWI V112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0x141]
Successors: [0x14e]
---
0x147 PUSH1 0x1
0x149 SLOAD
0x14a PUSH1 0x2
0x14c SLOAD
0x14d ADD
---
0x147: V114 = 0x1
0x149: V115 = S[0x1]
0x14a: V116 = 0x2
0x14c: V117 = S[0x2]
0x14d: V118 = ADD V117 V115
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V10, V118]

================================

Block 0x14e
[0x14e:0x15f]
---
Predecessors: [0x122, 0x147, 0x166, 0x178, 0x1ab, 0x252, 0x4db]
Successors: []
---
0x14e JUMPDEST
0x14f PUSH1 0x40
0x151 DUP1
0x152 MLOAD
0x153 SWAP2
0x154 DUP3
0x155 MSTORE
0x156 MLOAD
0x157 SWAP1
0x158 DUP2
0x159 SWAP1
0x15a SUB
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP1
0x15f RETURN
---
0x14e: JUMPDEST 
0x14f: V119 = 0x40
0x152: V120 = M[0x40]
0x155: M[V120] = S0
0x156: V121 = M[0x40]
0x15a: V122 = SUB V120 V121
0x15b: V123 = 0x20
0x15d: V124 = ADD 0x20 V122
0x15f: RETURN V121 V124
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x160
[0x160:0x165]
---
Predecessors: [0x35]
Successors: [0x166]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 PUSH2 0x2
0x165 JUMPI
---
0x160: JUMPDEST 
0x161: V125 = CALLVALUE
0x162: V126 = 0x2
0x165: THROWI V125
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x166
[0x166:0x171]
---
Predecessors: [0x160]
Successors: [0x14e]
---
0x166 PUSH2 0x14e
0x169 PUSH6 0x5af3107a4000
0x170 DUP2
0x171 JUMP
---
0x166: V127 = 0x14e
0x169: V128 = 0x5af3107a4000
0x171: JUMP 0x14e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14e, 0x5af3107a4000]
Exit stack: [V10, 0x14e, 0x5af3107a4000]

================================

Block 0x172
[0x172:0x177]
---
Predecessors: [0x40]
Successors: [0x178]
---
0x172 JUMPDEST
0x173 CALLVALUE
0x174 PUSH2 0x2
0x177 JUMPI
---
0x172: JUMPDEST 
0x173: V129 = CALLVALUE
0x174: V130 = 0x2
0x177: THROWI V129
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x172]
Successors: [0x14e]
---
0x178 PUSH2 0x14e
0x17b PUSH1 0x1
0x17d SLOAD
0x17e DUP2
0x17f JUMP
---
0x178: V131 = 0x14e
0x17b: V132 = 0x1
0x17d: V133 = S[0x1]
0x17f: JUMP 0x14e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14e, V133]
Exit stack: [V10, 0x14e, V133]

================================

Block 0x180
[0x180:0x185]
---
Predecessors: [0x4b]
Successors: [0x186]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 PUSH2 0x2
0x185 JUMPI
---
0x180: JUMPDEST 
0x181: V134 = CALLVALUE
0x182: V135 = 0x2
0x185: THROWI V134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x186
[0x186:0x1a0]
---
Predecessors: [0x180]
Successors: [0x1a1, 0x3a8]
---
0x186 PUSH2 0x25a
0x189 PUSH1 0x0
0x18b SLOAD
0x18c PUSH1 0x1
0x18e PUSH1 0xa0
0x190 PUSH1 0x2
0x192 EXP
0x193 SUB
0x194 SWAP1
0x195 DUP2
0x196 AND
0x197 CALLER
0x198 SWAP2
0x199 SWAP1
0x19a SWAP2
0x19b AND
0x19c EQ
0x19d PUSH2 0x3a8
0x1a0 JUMPI
---
0x186: V136 = 0x25a
0x189: V137 = 0x0
0x18b: V138 = S[0x0]
0x18c: V139 = 0x1
0x18e: V140 = 0xa0
0x190: V141 = 0x2
0x192: V142 = EXP 0x2 0xa0
0x193: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x196: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x197: V145 = CALLER
0x19b: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V147 = EQ V146 V144
0x19d: V148 = 0x3a8
0x1a0: JUMPI 0x3a8 V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25a]
Exit stack: [V10, 0x25a]

================================

Block 0x1a1
[0x1a1:0x1a4]
---
Predecessors: [0x186]
Successors: []
---
0x1a1 PUSH2 0x2
0x1a4 JUMP
---
0x1a1: V149 = 0x2
0x1a4: THROW 
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x1a5
[0x1a5:0x1aa]
---
Predecessors: [0x56]
Successors: [0x1ab]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 PUSH2 0x2
0x1aa JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V150 = CALLVALUE
0x1a7: V151 = 0x2
0x1aa: THROWI V150
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ab
[0x1ab:0x1b2]
---
Predecessors: [0x1a5]
Successors: [0x14e]
---
0x1ab PUSH2 0x14e
0x1ae PUSH1 0x2
0x1b0 SLOAD
0x1b1 DUP2
0x1b2 JUMP
---
0x1ab: V152 = 0x14e
0x1ae: V153 = 0x2
0x1b0: V154 = S[0x2]
0x1b2: JUMP 0x14e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14e, V154]
Exit stack: [V10, 0x14e, V154]

================================

Block 0x1b3
[0x1b3:0x1b8]
---
Predecessors: [0x61]
Successors: [0x1b9]
---
0x1b3 JUMPDEST
0x1b4 CALLVALUE
0x1b5 PUSH2 0x2
0x1b8 JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V155 = CALLVALUE
0x1b5: V156 = 0x2
0x1b8: THROWI V155
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b9
[0x1b9:0x1bf]
---
Predecessors: [0x1b3]
Successors: [0xb8]
---
0x1b9 PUSH2 0x25a
0x1bc PUSH2 0xb8
0x1bf JUMP
---
0x1b9: V157 = 0x25a
0x1bc: V158 = 0xb8
0x1bf: JUMP 0xb8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25a]
Exit stack: [V10, 0x25a]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x6c]
Successors: [0x1c4]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0x25a
---
0x1c0: JUMPDEST 
0x1c1: V159 = 0x25a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25a]
Exit stack: [V10, 0x25a]

================================

Block 0x1c4
[0x1c4:0x1ce]
---
Predecessors: [0x1c0, 0x25c]
Successors: [0x1cf, 0x1d9]
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x1
0x1c7 SLOAD
0x1c8 TIMESTAMP
0x1c9 LT
0x1ca DUP1
0x1cb PUSH2 0x1d9
0x1ce JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V160 = 0x1
0x1c7: V161 = S[0x1]
0x1c8: V162 = TIMESTAMP
0x1c9: V163 = LT V162 V161
0x1cb: V164 = 0x1d9
0x1ce: JUMPI 0x1d9 V163
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 0
Stack additions: [V163]
Exit stack: [V10, S1, {0x25a, 0x264}, V163]

================================

Block 0x1cf
[0x1cf:0x1d8]
---
Predecessors: [0x1c4]
Successors: [0x1d9]
---
0x1cf POP
0x1d0 PUSH1 0x1
0x1d2 SLOAD
0x1d3 PUSH1 0x2
0x1d5 SLOAD
0x1d6 ADD
0x1d7 TIMESTAMP
0x1d8 GT
---
0x1d0: V165 = 0x1
0x1d2: V166 = S[0x1]
0x1d3: V167 = 0x2
0x1d5: V168 = S[0x2]
0x1d6: V169 = ADD V168 V166
0x1d7: V170 = TIMESTAMP
0x1d8: V171 = GT V170 V169
---
Entry stack: [V10, S2, {0x25a, 0x264}, V163]
Stack pops: 1
Stack additions: [V171]
Exit stack: [V10, S2, {0x25a, 0x264}, V171]

================================

Block 0x1d9
[0x1d9:0x1de]
---
Predecessors: [0x1c4, 0x1cf]
Successors: [0x1df, 0x283]
---
0x1d9 JUMPDEST
0x1da ISZERO
0x1db PUSH2 0x283
0x1de JUMPI
---
0x1d9: JUMPDEST 
0x1da: V172 = ISZERO S0
0x1db: V173 = 0x283
0x1de: JUMPI 0x283 V172
---
Entry stack: [V10, S2, {0x25a, 0x264}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, {0x25a, 0x264}]

================================

Block 0x1df
[0x1df:0x1e2]
---
Predecessors: [0x1d9]
Successors: []
---
0x1df PUSH2 0x2
0x1e2 JUMP
---
0x1df: V174 = 0x2
0x1e2: THROW 
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x25a, 0x264}]

================================

Block 0x1e3
[0x1e3:0x1e8]
---
Predecessors: [0x77]
Successors: [0x1e9]
---
0x1e3 JUMPDEST
0x1e4 CALLVALUE
0x1e5 PUSH2 0x2
0x1e8 JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V175 = CALLVALUE
0x1e5: V176 = 0x2
0x1e8: THROWI V175
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e9
[0x1e9:0x1f9]
---
Predecessors: [0x1e3]
Successors: [0x266]
---
0x1e9 PUSH2 0x266
0x1ec PUSH1 0x4
0x1ee SLOAD
0x1ef PUSH1 0x1
0x1f1 PUSH1 0xa0
0x1f3 PUSH1 0x2
0x1f5 EXP
0x1f6 SUB
0x1f7 AND
0x1f8 DUP2
0x1f9 JUMP
---
0x1e9: V177 = 0x266
0x1ec: V178 = 0x4
0x1ee: V179 = S[0x4]
0x1ef: V180 = 0x1
0x1f1: V181 = 0xa0
0x1f3: V182 = 0x2
0x1f5: V183 = EXP 0x2 0xa0
0x1f6: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f7: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x1f9: JUMP 0x266
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x266, V185]
Exit stack: [V10, 0x266, V185]

================================

Block 0x1fa
[0x1fa:0x1ff]
---
Predecessors: [0x82]
Successors: [0x200]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc PUSH2 0x2
0x1ff JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V186 = CALLVALUE
0x1fc: V187 = 0x2
0x1ff: THROWI V186
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x200
[0x200:0x21a]
---
Predecessors: [0x1fa]
Successors: [0x21b, 0x474]
---
0x200 PUSH2 0x25a
0x203 PUSH1 0x0
0x205 SLOAD
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e SWAP1
0x20f DUP2
0x210 AND
0x211 CALLER
0x212 SWAP2
0x213 SWAP1
0x214 SWAP2
0x215 AND
0x216 EQ
0x217 PUSH2 0x474
0x21a JUMPI
---
0x200: V188 = 0x25a
0x203: V189 = 0x0
0x205: V190 = S[0x0]
0x206: V191 = 0x1
0x208: V192 = 0xa0
0x20a: V193 = 0x2
0x20c: V194 = EXP 0x2 0xa0
0x20d: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x211: V197 = CALLER
0x215: V198 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x216: V199 = EQ V198 V196
0x217: V200 = 0x474
0x21a: JUMPI 0x474 V199
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25a]
Exit stack: [V10, 0x25a]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x200]
Successors: []
---
0x21b PUSH2 0x2
0x21e JUMP
---
0x21b: V201 = 0x2
0x21e: THROW 
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x21f
[0x21f:0x224]
---
Predecessors: [0x8d]
Successors: [0x225]
---
0x21f JUMPDEST
0x220 CALLVALUE
0x221 PUSH2 0x2
0x224 JUMPI
---
0x21f: JUMPDEST 
0x220: V202 = CALLVALUE
0x221: V203 = 0x2
0x224: THROWI V202
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x225
[0x225:0x243]
---
Predecessors: [0x21f]
Successors: [0x244, 0x4c0]
---
0x225 PUSH2 0x14e
0x228 PUSH1 0x4
0x22a CALLDATALOAD
0x22b PUSH1 0x4
0x22d SLOAD
0x22e PUSH1 0x0
0x230 SWAP1
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 DUP4
0x23a DUP2
0x23b AND
0x23c SWAP2
0x23d AND
0x23e EQ
0x23f ISZERO
0x240 PUSH2 0x4c0
0x243 JUMPI
---
0x225: V204 = 0x14e
0x228: V205 = 0x4
0x22a: V206 = CALLDATALOAD 0x4
0x22b: V207 = 0x4
0x22d: V208 = S[0x4]
0x22e: V209 = 0x0
0x231: V210 = 0x1
0x233: V211 = 0xa0
0x235: V212 = 0x2
0x237: V213 = EXP 0x2 0xa0
0x238: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23b: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x23d: V216 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V217 = EQ V216 V215
0x23f: V218 = ISZERO V217
0x240: V219 = 0x4c0
0x243: JUMPI 0x4c0 V218
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14e, V206, 0x0]
Exit stack: [V10, 0x14e, V206, 0x0]

================================

Block 0x244
[0x244:0x24b]
---
Predecessors: [0x225]
Successors: [0x4db]
---
0x244 POP
0x245 PUSH1 0x5
0x247 SLOAD
0x248 PUSH2 0x4db
0x24b JUMP
---
0x245: V220 = 0x5
0x247: V221 = S[0x5]
0x248: V222 = 0x4db
0x24b: JUMP 0x4db
---
Entry stack: [V10, 0x14e, V206, 0x0]
Stack pops: 1
Stack additions: [V221]
Exit stack: [V10, 0x14e, V206, V221]

================================

Block 0x24c
[0x24c:0x251]
---
Predecessors: [0x98]
Successors: [0x252]
---
0x24c JUMPDEST
0x24d CALLVALUE
0x24e PUSH2 0x2
0x251 JUMPI
---
0x24c: JUMPDEST 
0x24d: V223 = CALLVALUE
0x24e: V224 = 0x2
0x251: THROWI V223
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x252
[0x252:0x259]
---
Predecessors: [0x24c]
Successors: [0x14e]
---
0x252 PUSH2 0x14e
0x255 PUSH1 0x5
0x257 SLOAD
0x258 DUP2
0x259 JUMP
---
0x252: V225 = 0x14e
0x255: V226 = 0x5
0x257: V227 = S[0x5]
0x259: JUMP 0x14e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14e, V227]
Exit stack: [V10, 0x14e, V227]

================================

Block 0x25a
[0x25a:0x25b]
---
Predecessors: [0x264, 0x2f0, 0x339]
Successors: []
---
0x25a JUMPDEST
0x25b STOP
---
0x25a: JUMPDEST 
0x25b: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x25c
[0x25c:0x263]
---
Predecessors: [0xa3]
Successors: [0x1c4]
---
0x25c JUMPDEST
0x25d PUSH2 0x264
0x260 PUSH2 0x1c4
0x263 JUMP
---
0x25c: JUMPDEST 
0x25d: V228 = 0x264
0x260: V229 = 0x1c4
0x263: JUMP 0x1c4
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: [0x264]
Exit stack: [V10, 0x25a, 0x264]

================================

Block 0x264
[0x264:0x265]
---
Predecessors: [0x264, 0x2f0, 0x339, 0x3cb, 0x487]
Successors: [0x25a, 0x264]
---
0x264 JUMPDEST
0x265 JUMP
---
0x264: JUMPDEST 
0x265: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x266
[0x266:0x282]
---
Predecessors: [0x130, 0x1e9]
Successors: []
---
0x266 JUMPDEST
0x267 PUSH1 0x40
0x269 DUP1
0x26a MLOAD
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f PUSH1 0x2
0x271 EXP
0x272 SUB
0x273 SWAP3
0x274 SWAP1
0x275 SWAP3
0x276 AND
0x277 DUP3
0x278 MSTORE
0x279 MLOAD
0x27a SWAP1
0x27b DUP2
0x27c SWAP1
0x27d SUB
0x27e PUSH1 0x20
0x280 ADD
0x281 SWAP1
0x282 RETURN
---
0x266: JUMPDEST 
0x267: V230 = 0x40
0x26a: V231 = M[0x40]
0x26b: V232 = 0x1
0x26d: V233 = 0xa0
0x26f: V234 = 0x2
0x271: V235 = EXP 0x2 0xa0
0x272: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x276: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x278: M[V231] = V237
0x279: V238 = M[0x40]
0x27d: V239 = SUB V231 V238
0x27e: V240 = 0x20
0x280: V241 = ADD 0x20 V239
0x282: RETURN V238 V241
---
Entry stack: [V10, 0x266, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x266]

================================

Block 0x283
[0x283:0x2a2]
---
Predecessors: [0x1d9]
Successors: [0x2a3, 0x2b7]
---
0x283 JUMPDEST
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c CALLER
0x28d AND
0x28e PUSH1 0x0
0x290 SWAP1
0x291 DUP2
0x292 MSTORE
0x293 PUSH1 0x6
0x295 PUSH1 0x20
0x297 MSTORE
0x298 PUSH1 0x40
0x29a DUP2
0x29b SHA3
0x29c SLOAD
0x29d GT
0x29e DUP1
0x29f PUSH2 0x2b7
0x2a2 JUMPI
---
0x283: JUMPDEST 
0x284: V242 = 0x1
0x286: V243 = 0xa0
0x288: V244 = 0x2
0x28a: V245 = EXP 0x2 0xa0
0x28b: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28c: V247 = CALLER
0x28d: V248 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V249 = 0x0
0x292: M[0x0] = V248
0x293: V250 = 0x6
0x295: V251 = 0x20
0x297: M[0x20] = 0x6
0x298: V252 = 0x40
0x29b: V253 = SHA3 0x0 0x40
0x29c: V254 = S[V253]
0x29d: V255 = GT V254 0x0
0x29f: V256 = 0x2b7
0x2a2: JUMPI 0x2b7 V255
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 0
Stack additions: [V255]
Exit stack: [V10, S1, {0x25a, 0x264}, V255]

================================

Block 0x2a3
[0x2a3:0x2b6]
---
Predecessors: [0x283]
Successors: [0x2b7]
---
0x2a3 POP
0x2a4 PUSH1 0x4
0x2a6 SLOAD
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af SWAP1
0x2b0 DUP2
0x2b1 AND
0x2b2 CALLER
0x2b3 SWAP1
0x2b4 SWAP2
0x2b5 AND
0x2b6 EQ
---
0x2a4: V257 = 0x4
0x2a6: V258 = S[0x4]
0x2a7: V259 = 0x1
0x2a9: V260 = 0xa0
0x2ab: V261 = 0x2
0x2ad: V262 = EXP 0x2 0xa0
0x2ae: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b1: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x2b2: V265 = CALLER
0x2b5: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x2b6: V267 = EQ V266 V264
---
Entry stack: [V10, S2, {0x25a, 0x264}, V255]
Stack pops: 1
Stack additions: [V267]
Exit stack: [V10, S2, {0x25a, 0x264}, V267]

================================

Block 0x2b7
[0x2b7:0x2bd]
---
Predecessors: [0x283, 0x2a3]
Successors: [0x2be, 0x2c3]
---
0x2b7 JUMPDEST
0x2b8 DUP1
0x2b9 ISZERO
0x2ba PUSH2 0x2c3
0x2bd JUMPI
---
0x2b7: JUMPDEST 
0x2b9: V268 = ISZERO S0
0x2ba: V269 = 0x2c3
0x2bd: JUMPI 0x2c3 V268
---
Entry stack: [V10, S2, {0x25a, 0x264}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S2, {0x25a, 0x264}, S0]

================================

Block 0x2be
[0x2be:0x2c2]
---
Predecessors: [0x2b7]
Successors: [0x2c3]
---
0x2be POP
0x2bf PUSH1 0x0
0x2c1 CALLVALUE
0x2c2 GT
---
0x2bf: V270 = 0x0
0x2c1: V271 = CALLVALUE
0x2c2: V272 = GT V271 0x0
---
Entry stack: [V10, S2, {0x25a, 0x264}, S0]
Stack pops: 1
Stack additions: [V272]
Exit stack: [V10, S2, {0x25a, 0x264}, V272]

================================

Block 0x2c3
[0x2c3:0x2c8]
---
Predecessors: [0x2b7, 0x2be]
Successors: [0x2c9, 0x2f3]
---
0x2c3 JUMPDEST
0x2c4 ISZERO
0x2c5 PUSH2 0x2f3
0x2c8 JUMPI
---
0x2c3: JUMPDEST 
0x2c4: V273 = ISZERO S0
0x2c5: V274 = 0x2f3
0x2c8: JUMPI 0x2f3 V273
---
Entry stack: [V10, S2, {0x25a, 0x264}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, {0x25a, 0x264}]

================================

Block 0x2c9
[0x2c9:0x2e7]
---
Predecessors: [0x2c3]
Successors: [0x2e8, 0x4e0]
---
0x2c9 PUSH2 0x264
0x2cc PUSH1 0x4
0x2ce SLOAD
0x2cf PUSH1 0x0
0x2d1 SWAP1
0x2d2 PUSH1 0x1
0x2d4 PUSH1 0xa0
0x2d6 PUSH1 0x2
0x2d8 EXP
0x2d9 SUB
0x2da SWAP1
0x2db DUP2
0x2dc AND
0x2dd CALLER
0x2de SWAP2
0x2df SWAP1
0x2e0 SWAP2
0x2e1 AND
0x2e2 EQ
0x2e3 ISZERO
0x2e4 PUSH2 0x4e0
0x2e7 JUMPI
---
0x2c9: V275 = 0x264
0x2cc: V276 = 0x4
0x2ce: V277 = S[0x4]
0x2cf: V278 = 0x0
0x2d2: V279 = 0x1
0x2d4: V280 = 0xa0
0x2d6: V281 = 0x2
0x2d8: V282 = EXP 0x2 0xa0
0x2d9: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dc: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x2dd: V285 = CALLER
0x2e1: V286 = AND V285 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V287 = EQ V286 V284
0x2e3: V288 = ISZERO V287
0x2e4: V289 = 0x4e0
0x2e7: JUMPI 0x4e0 V288
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 0
Stack additions: [0x264, 0x0]
Exit stack: [V10, S1, {0x25a, 0x264}, 0x264, 0x0]

================================

Block 0x2e8
[0x2e8:0x2ef]
---
Predecessors: [0x2c9]
Successors: [0x2f0]
---
0x2e8 PUSH1 0x5
0x2ea DUP1
0x2eb SLOAD
0x2ec CALLVALUE
0x2ed ADD
0x2ee SWAP1
0x2ef SSTORE
---
0x2e8: V290 = 0x5
0x2eb: V291 = S[0x5]
0x2ec: V292 = CALLVALUE
0x2ed: V293 = ADD V292 V291
0x2ef: S[0x5] = V293
---
Entry stack: [V10, S3, {0x25a, 0x264}, 0x264, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x25a, 0x264}, 0x264, 0x0]

================================

Block 0x2f0
[0x2f0:0x2f2]
---
Predecessors: [0xb8, 0xda, 0x2e8, 0x505]
Successors: [0x25a, 0x264]
---
0x2f0 JUMPDEST
0x2f1 POP
0x2f2 JUMP
---
0x2f0: JUMPDEST 
0x2f2: JUMP {0x25a, 0x264}
---
Entry stack: [V10, S3, S2, {0x25a, 0x264}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S3, S2]

================================

Block 0x2f3
[0x2f3:0x2fc]
---
Predecessors: [0x2c3]
Successors: [0x2fd, 0x301]
---
0x2f3 JUMPDEST
0x2f4 PUSH1 0x5
0x2f6 SLOAD
0x2f7 CALLVALUE
0x2f8 GT
0x2f9 PUSH2 0x301
0x2fc JUMPI
---
0x2f3: JUMPDEST 
0x2f4: V294 = 0x5
0x2f6: V295 = S[0x5]
0x2f7: V296 = CALLVALUE
0x2f8: V297 = GT V296 V295
0x2f9: V298 = 0x301
0x2fc: JUMPI 0x301 V297
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x25a, 0x264}]

================================

Block 0x2fd
[0x2fd:0x300]
---
Predecessors: [0x2f3]
Successors: []
---
0x2fd PUSH2 0x2
0x300 JUMP
---
0x2fd: V299 = 0x2
0x300: THROW 
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x25a, 0x264}]

================================

Block 0x301
[0x301:0x314]
---
Predecessors: [0x2f3]
Successors: [0x315, 0x339]
---
0x301 JUMPDEST
0x302 PUSH1 0x4
0x304 SLOAD
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d AND
0x30e PUSH1 0x0
0x310 EQ
0x311 PUSH2 0x339
0x314 JUMPI
---
0x301: JUMPDEST 
0x302: V300 = 0x4
0x304: V301 = S[0x4]
0x305: V302 = 0x1
0x307: V303 = 0xa0
0x309: V304 = 0x2
0x30b: V305 = EXP 0x2 0xa0
0x30c: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x30e: V308 = 0x0
0x310: V309 = EQ 0x0 V307
0x311: V310 = 0x339
0x314: JUMPI 0x339 V309
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x25a, 0x264}]

================================

Block 0x315
[0x315:0x338]
---
Predecessors: [0x301]
Successors: [0x339]
---
0x315 PUSH1 0x5
0x317 SLOAD
0x318 PUSH1 0x4
0x31a SLOAD
0x31b PUSH1 0x1
0x31d PUSH1 0xa0
0x31f PUSH1 0x2
0x321 EXP
0x322 SUB
0x323 AND
0x324 PUSH1 0x0
0x326 SWAP1
0x327 DUP2
0x328 MSTORE
0x329 PUSH1 0x6
0x32b PUSH1 0x20
0x32d MSTORE
0x32e PUSH1 0x40
0x330 SWAP1
0x331 SHA3
0x332 DUP1
0x333 SLOAD
0x334 SWAP1
0x335 SWAP2
0x336 ADD
0x337 SWAP1
0x338 SSTORE
---
0x315: V311 = 0x5
0x317: V312 = S[0x5]
0x318: V313 = 0x4
0x31a: V314 = S[0x4]
0x31b: V315 = 0x1
0x31d: V316 = 0xa0
0x31f: V317 = 0x2
0x321: V318 = EXP 0x2 0xa0
0x322: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x323: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x324: V321 = 0x0
0x328: M[0x0] = V320
0x329: V322 = 0x6
0x32b: V323 = 0x20
0x32d: M[0x20] = 0x6
0x32e: V324 = 0x40
0x331: V325 = SHA3 0x0 0x40
0x333: V326 = S[V325]
0x336: V327 = ADD V312 V326
0x338: S[V325] = V327
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x25a, 0x264}]

================================

Block 0x339
[0x339:0x3a7]
---
Predecessors: [0x301, 0x315]
Successors: [0x25a, 0x264]
---
0x339 JUMPDEST
0x33a PUSH1 0x4
0x33c DUP1
0x33d SLOAD
0x33e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x353 NOT
0x354 AND
0x355 CALLER
0x356 SWAP1
0x357 DUP2
0x358 OR
0x359 SWAP1
0x35a SWAP2
0x35b SSTORE
0x35c CALLVALUE
0x35d PUSH1 0x5
0x35f DUP2
0x360 SWAP1
0x361 SSTORE
0x362 PUSH1 0x40
0x364 DUP1
0x365 MLOAD
0x366 PUSH1 0x1
0x368 PUSH1 0xa0
0x36a PUSH1 0x2
0x36c EXP
0x36d SUB
0x36e SWAP1
0x36f SWAP4
0x370 AND
0x371 DUP4
0x372 MSTORE
0x373 PUSH1 0x20
0x375 DUP4
0x376 ADD
0x377 SWAP2
0x378 SWAP1
0x379 SWAP2
0x37a MSTORE
0x37b DUP1
0x37c MLOAD
0x37d PUSH32 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x39e SWAP3
0x39f DUP2
0x3a0 SWAP1
0x3a1 SUB
0x3a2 SWAP1
0x3a3 SWAP2
0x3a4 ADD
0x3a5 SWAP1
0x3a6 LOG1
0x3a7 JUMP
---
0x339: JUMPDEST 
0x33a: V328 = 0x4
0x33d: V329 = S[0x4]
0x33e: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x353: V331 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x354: V332 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V329
0x355: V333 = CALLER
0x358: V334 = OR V333 V332
0x35b: S[0x4] = V334
0x35c: V335 = CALLVALUE
0x35d: V336 = 0x5
0x361: S[0x5] = V335
0x362: V337 = 0x40
0x365: V338 = M[0x40]
0x366: V339 = 0x1
0x368: V340 = 0xa0
0x36a: V341 = 0x2
0x36c: V342 = EXP 0x2 0xa0
0x36d: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x370: V344 = AND V333 0xffffffffffffffffffffffffffffffffffffffff
0x372: M[V338] = V344
0x373: V345 = 0x20
0x376: V346 = ADD V338 0x20
0x37a: M[V346] = V335
0x37c: V347 = M[0x40]
0x37d: V348 = 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x3a1: V349 = SUB V338 V347
0x3a4: V350 = ADD 0x40 V349
0x3a6: LOG V347 V350 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x3a7: JUMP {0x25a, 0x264}
---
Entry stack: [V10, S1, {0x25a, 0x264}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x3a8
[0x3a8:0x3b6]
---
Predecessors: [0x186]
Successors: [0x3b7, 0x3bb]
---
0x3a8 JUMPDEST
0x3a9 PUSH1 0x1
0x3ab SLOAD
0x3ac PUSH1 0x2
0x3ae SLOAD
0x3af ADD
0x3b0 TIMESTAMP
0x3b1 LT
0x3b2 ISZERO
0x3b3 PUSH2 0x3bb
0x3b6 JUMPI
---
0x3a8: JUMPDEST 
0x3a9: V351 = 0x1
0x3ab: V352 = S[0x1]
0x3ac: V353 = 0x2
0x3ae: V354 = S[0x2]
0x3af: V355 = ADD V354 V352
0x3b0: V356 = TIMESTAMP
0x3b1: V357 = LT V356 V355
0x3b2: V358 = ISZERO V357
0x3b3: V359 = 0x3bb
0x3b6: JUMPI 0x3bb V358
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x3b7
[0x3b7:0x3ba]
---
Predecessors: [0x3a8]
Successors: []
---
0x3b7 PUSH2 0x2
0x3ba JUMP
---
0x3b7: V360 = 0x2
0x3ba: THROW 
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x3bb
[0x3bb:0x3c6]
---
Predecessors: [0x3a8]
Successors: [0x3c7, 0x3cb]
---
0x3bb JUMPDEST
0x3bc PUSH1 0x7
0x3be SLOAD
0x3bf PUSH1 0xff
0x3c1 AND
0x3c2 ISZERO
0x3c3 PUSH2 0x3cb
0x3c6 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V361 = 0x7
0x3be: V362 = S[0x7]
0x3bf: V363 = 0xff
0x3c1: V364 = AND 0xff V362
0x3c2: V365 = ISZERO V364
0x3c3: V366 = 0x3cb
0x3c6: JUMPI 0x3cb V365
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x3c7
[0x3c7:0x3ca]
---
Predecessors: [0x3bb]
Successors: []
---
0x3c7 PUSH2 0x2
0x3ca JUMP
---
0x3c7: V367 = 0x2
0x3ca: THROW 
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x3cb
[0x3cb:0x46f]
---
Predecessors: [0x3bb]
Successors: [0x264, 0x470]
---
0x3cb JUMPDEST
0x3cc PUSH1 0x7
0x3ce DUP1
0x3cf SLOAD
0x3d0 PUSH1 0xff
0x3d2 NOT
0x3d3 AND
0x3d4 PUSH1 0x1
0x3d6 OR
0x3d7 SWAP1
0x3d8 SSTORE
0x3d9 PUSH1 0x4
0x3db SLOAD
0x3dc PUSH1 0x5
0x3de SLOAD
0x3df PUSH1 0x40
0x3e1 DUP1
0x3e2 MLOAD
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb SWAP4
0x3ec SWAP1
0x3ed SWAP4
0x3ee AND
0x3ef DUP4
0x3f0 MSTORE
0x3f1 PUSH1 0x20
0x3f3 DUP4
0x3f4 ADD
0x3f5 SWAP2
0x3f6 SWAP1
0x3f7 SWAP2
0x3f8 MSTORE
0x3f9 DUP1
0x3fa MLOAD
0x3fb PUSH32 0x1d78ca6377547e2f5434a04066a4dcac7670fd77e146b686b06bf8fbc06fb435
0x41c SWAP3
0x41d DUP2
0x41e SWAP1
0x41f SUB
0x420 SWAP1
0x421 SWAP2
0x422 ADD
0x423 SWAP1
0x424 LOG1
0x425 PUSH1 0x0
0x427 PUSH1 0x0
0x429 SWAP1
0x42a SLOAD
0x42b SWAP1
0x42c PUSH2 0x100
0x42f EXP
0x430 SWAP1
0x431 DIV
0x432 PUSH1 0x1
0x434 PUSH1 0xa0
0x436 PUSH1 0x2
0x438 EXP
0x439 SUB
0x43a AND
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 AND
0x444 PUSH2 0x8fc
0x447 PUSH1 0x5
0x449 PUSH1 0x0
0x44b POP
0x44c SLOAD
0x44d SWAP1
0x44e DUP2
0x44f ISZERO
0x450 MUL
0x451 SWAP1
0x452 PUSH1 0x40
0x454 MLOAD
0x455 DUP1
0x456 SWAP1
0x457 POP
0x458 PUSH1 0x0
0x45a PUSH1 0x40
0x45c MLOAD
0x45d DUP1
0x45e DUP4
0x45f SUB
0x460 DUP2
0x461 DUP6
0x462 DUP9
0x463 DUP9
0x464 CALL
0x465 SWAP4
0x466 POP
0x467 POP
0x468 POP
0x469 POP
0x46a ISZERO
0x46b ISZERO
0x46c PUSH2 0x264
0x46f JUMPI
---
0x3cb: JUMPDEST 
0x3cc: V368 = 0x7
0x3cf: V369 = S[0x7]
0x3d0: V370 = 0xff
0x3d2: V371 = NOT 0xff
0x3d3: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V369
0x3d4: V373 = 0x1
0x3d6: V374 = OR 0x1 V372
0x3d8: S[0x7] = V374
0x3d9: V375 = 0x4
0x3db: V376 = S[0x4]
0x3dc: V377 = 0x5
0x3de: V378 = S[0x5]
0x3df: V379 = 0x40
0x3e2: V380 = M[0x40]
0x3e3: V381 = 0x1
0x3e5: V382 = 0xa0
0x3e7: V383 = 0x2
0x3e9: V384 = EXP 0x2 0xa0
0x3ea: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ee: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x3f0: M[V380] = V386
0x3f1: V387 = 0x20
0x3f4: V388 = ADD V380 0x20
0x3f8: M[V388] = V378
0x3fa: V389 = M[0x40]
0x3fb: V390 = 0x1d78ca6377547e2f5434a04066a4dcac7670fd77e146b686b06bf8fbc06fb435
0x41f: V391 = SUB V380 V389
0x422: V392 = ADD 0x40 V391
0x424: LOG V389 V392 0x1d78ca6377547e2f5434a04066a4dcac7670fd77e146b686b06bf8fbc06fb435
0x425: V393 = 0x0
0x427: V394 = 0x0
0x42a: V395 = S[0x0]
0x42c: V396 = 0x100
0x42f: V397 = EXP 0x100 0x0
0x431: V398 = DIV V395 0x1
0x432: V399 = 0x1
0x434: V400 = 0xa0
0x436: V401 = 0x2
0x438: V402 = EXP 0x2 0xa0
0x439: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43a: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x43b: V405 = 0x1
0x43d: V406 = 0xa0
0x43f: V407 = 0x2
0x441: V408 = EXP 0x2 0xa0
0x442: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x443: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x444: V411 = 0x8fc
0x447: V412 = 0x5
0x449: V413 = 0x0
0x44c: V414 = S[0x5]
0x44f: V415 = ISZERO V414
0x450: V416 = MUL V415 0x8fc
0x452: V417 = 0x40
0x454: V418 = M[0x40]
0x458: V419 = 0x0
0x45a: V420 = 0x40
0x45c: V421 = M[0x40]
0x45f: V422 = SUB V418 V421
0x464: V423 = CALL V416 V410 V414 V421 V422 V421 0x0
0x46a: V424 = ISZERO V423
0x46b: V425 = ISZERO V424
0x46c: V426 = 0x264
0x46f: JUMPI 0x264 V425
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x470
[0x470:0x473]
---
Predecessors: [0x3cb]
Successors: []
---
0x470 PUSH2 0x2
0x473 JUMP
---
0x470: V427 = 0x2
0x473: THROW 
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x474
[0x474:0x482]
---
Predecessors: [0x200]
Successors: [0x483, 0x487]
---
0x474 JUMPDEST
0x475 PUSH1 0x3
0x477 SLOAD
0x478 PUSH1 0x1
0x47a SLOAD
0x47b ADD
0x47c TIMESTAMP
0x47d LT
0x47e ISZERO
0x47f PUSH2 0x487
0x482 JUMPI
---
0x474: JUMPDEST 
0x475: V428 = 0x3
0x477: V429 = S[0x3]
0x478: V430 = 0x1
0x47a: V431 = S[0x1]
0x47b: V432 = ADD V431 V429
0x47c: V433 = TIMESTAMP
0x47d: V434 = LT V433 V432
0x47e: V435 = ISZERO V434
0x47f: V436 = 0x487
0x482: JUMPI 0x487 V435
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x483
[0x483:0x486]
---
Predecessors: [0x474]
Successors: []
---
0x483 PUSH2 0x2
0x486 JUMP
---
0x483: V437 = 0x2
0x486: THROW 
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x487
[0x487:0x4bb]
---
Predecessors: [0x474]
Successors: [0x264, 0x4bc]
---
0x487 JUMPDEST
0x488 PUSH1 0x0
0x48a DUP1
0x48b SLOAD
0x48c PUSH1 0x40
0x48e MLOAD
0x48f PUSH1 0x1
0x491 PUSH1 0xa0
0x493 PUSH1 0x2
0x495 EXP
0x496 SUB
0x497 SWAP2
0x498 DUP3
0x499 AND
0x49a SWAP3
0x49b ADDRESS
0x49c SWAP1
0x49d SWAP3
0x49e AND
0x49f BALANCE
0x4a0 DUP1
0x4a1 ISZERO
0x4a2 PUSH2 0x8fc
0x4a5 MUL
0x4a6 SWAP3
0x4a7 SWAP1
0x4a8 SWAP2
0x4a9 SWAP1
0x4aa DUP2
0x4ab DUP2
0x4ac DUP2
0x4ad DUP6
0x4ae DUP9
0x4af DUP9
0x4b0 CALL
0x4b1 SWAP4
0x4b2 POP
0x4b3 POP
0x4b4 POP
0x4b5 POP
0x4b6 ISZERO
0x4b7 ISZERO
0x4b8 PUSH2 0x264
0x4bb JUMPI
---
0x487: JUMPDEST 
0x488: V438 = 0x0
0x48b: V439 = S[0x0]
0x48c: V440 = 0x40
0x48e: V441 = M[0x40]
0x48f: V442 = 0x1
0x491: V443 = 0xa0
0x493: V444 = 0x2
0x495: V445 = EXP 0x2 0xa0
0x496: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x499: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x49b: V448 = ADDRESS
0x49e: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x49f: V450 = BALANCE V449
0x4a1: V451 = ISZERO V450
0x4a2: V452 = 0x8fc
0x4a5: V453 = MUL 0x8fc V451
0x4b0: V454 = CALL V453 V447 V450 V441 0x0 V441 0x0
0x4b6: V455 = ISZERO V454
0x4b7: V456 = ISZERO V455
0x4b8: V457 = 0x264
0x4bb: JUMPI 0x264 V456
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x4bc
[0x4bc:0x4bf]
---
Predecessors: [0x487]
Successors: []
---
0x4bc PUSH2 0x2
0x4bf JUMP
---
0x4bc: V458 = 0x2
0x4bf: THROW 
---
Entry stack: [V10, 0x25a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25a]

================================

Block 0x4c0
[0x4c0:0x4da]
---
Predecessors: [0x225]
Successors: [0x4db]
---
0x4c0 JUMPDEST
0x4c1 POP
0x4c2 PUSH1 0x1
0x4c4 PUSH1 0xa0
0x4c6 PUSH1 0x2
0x4c8 EXP
0x4c9 SUB
0x4ca DUP2
0x4cb AND
0x4cc PUSH1 0x0
0x4ce SWAP1
0x4cf DUP2
0x4d0 MSTORE
0x4d1 PUSH1 0x6
0x4d3 PUSH1 0x20
0x4d5 MSTORE
0x4d6 PUSH1 0x40
0x4d8 SWAP1
0x4d9 SHA3
0x4da SLOAD
---
0x4c0: JUMPDEST 
0x4c2: V459 = 0x1
0x4c4: V460 = 0xa0
0x4c6: V461 = 0x2
0x4c8: V462 = EXP 0x2 0xa0
0x4c9: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cb: V464 = AND V206 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V465 = 0x0
0x4d0: M[0x0] = V464
0x4d1: V466 = 0x6
0x4d3: V467 = 0x20
0x4d5: M[0x20] = 0x6
0x4d6: V468 = 0x40
0x4d9: V469 = SHA3 0x0 0x40
0x4da: V470 = S[V469]
---
Entry stack: [V10, 0x14e, V206, 0x0]
Stack pops: 2
Stack additions: [S1, V470]
Exit stack: [V10, 0x14e, V206, V470]

================================

Block 0x4db
[0x4db:0x4df]
---
Predecessors: [0x244, 0x4c0]
Successors: [0x14e]
---
0x4db JUMPDEST
0x4dc SWAP2
0x4dd SWAP1
0x4de POP
0x4df JUMP
---
0x4db: JUMPDEST 
0x4df: JUMP 0x14e
---
Entry stack: [V10, 0x14e, V206, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x4e0
[0x4e0:0x504]
---
Predecessors: [0x2c9]
Successors: [0x505, 0x59c]
---
0x4e0 JUMPDEST
0x4e1 PUSH1 0x5
0x4e3 SLOAD
0x4e4 PUSH1 0x1
0x4e6 PUSH1 0xa0
0x4e8 PUSH1 0x2
0x4ea EXP
0x4eb SUB
0x4ec CALLER
0x4ed AND
0x4ee PUSH1 0x0
0x4f0 SWAP1
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 PUSH1 0x6
0x4f5 PUSH1 0x20
0x4f7 MSTORE
0x4f8 PUSH1 0x40
0x4fa SWAP1
0x4fb SHA3
0x4fc SLOAD
0x4fd CALLVALUE
0x4fe ADD
0x4ff GT
0x500 ISZERO
0x501 PUSH2 0x59c
0x504 JUMPI
---
0x4e0: JUMPDEST 
0x4e1: V471 = 0x5
0x4e3: V472 = S[0x5]
0x4e4: V473 = 0x1
0x4e6: V474 = 0xa0
0x4e8: V475 = 0x2
0x4ea: V476 = EXP 0x2 0xa0
0x4eb: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ec: V478 = CALLER
0x4ed: V479 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: V480 = 0x0
0x4f2: M[0x0] = V479
0x4f3: V481 = 0x6
0x4f5: V482 = 0x20
0x4f7: M[0x20] = 0x6
0x4f8: V483 = 0x40
0x4fb: V484 = SHA3 0x0 0x40
0x4fc: V485 = S[V484]
0x4fd: V486 = CALLVALUE
0x4fe: V487 = ADD V486 V485
0x4ff: V488 = GT V487 V472
0x500: V489 = ISZERO V488
0x501: V490 = 0x59c
0x504: JUMPI 0x59c V489
---
Entry stack: [V10, S3, {0x25a, 0x264}, 0x264, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x25a, 0x264}, 0x264, 0x0]

================================

Block 0x505
[0x505:0x59b]
---
Predecessors: [0x4e0]
Successors: [0x2f0]
---
0x505 POP
0x506 PUSH1 0x40
0x508 PUSH1 0x0
0x50a DUP2
0x50b DUP2
0x50c SHA3
0x50d DUP1
0x50e SLOAD
0x50f SWAP1
0x510 DUP3
0x511 SWAP1
0x512 SSTORE
0x513 PUSH1 0x5
0x515 DUP1
0x516 SLOAD
0x517 PUSH1 0x4
0x519 DUP1
0x51a SLOAD
0x51b PUSH1 0x1
0x51d PUSH1 0xa0
0x51f PUSH1 0x2
0x521 EXP
0x522 SUB
0x523 SWAP1
0x524 DUP2
0x525 AND
0x526 DUP7
0x527 MSTORE
0x528 SWAP5
0x529 DUP7
0x52a SWAP1
0x52b SHA3
0x52c DUP1
0x52d SLOAD
0x52e SWAP1
0x52f SWAP3
0x530 ADD
0x531 SWAP1
0x532 SWAP2
0x533 SSTORE
0x534 CALLVALUE
0x535 SWAP3
0x536 SWAP1
0x537 SWAP3
0x538 ADD
0x539 SWAP1
0x53a DUP2
0x53b SWAP1
0x53c SSTORE
0x53d DUP2
0x53e SLOAD
0x53f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x554 NOT
0x555 AND
0x556 CALLER
0x557 SWAP1
0x558 DUP2
0x559 OR
0x55a SWAP1
0x55b SWAP3
0x55c SSTORE
0x55d DUP4
0x55e MLOAD
0x55f SWAP3
0x560 SWAP1
0x561 SWAP2
0x562 AND
0x563 DUP3
0x564 MSTORE
0x565 PUSH1 0x20
0x567 DUP3
0x568 ADD
0x569 DUP2
0x56a SWAP1
0x56b MSTORE
0x56c DUP3
0x56d MLOAD
0x56e SWAP1
0x56f SWAP3
0x570 PUSH32 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x591 SWAP3
0x592 DUP3
0x593 SWAP1
0x594 SUB
0x595 ADD
0x596 SWAP1
0x597 LOG1
0x598 PUSH2 0x2f0
0x59b JUMP
---
0x506: V491 = 0x40
0x508: V492 = 0x0
0x50c: V493 = SHA3 0x0 0x40
0x50e: V494 = S[V493]
0x512: S[V493] = 0x0
0x513: V495 = 0x5
0x516: V496 = S[0x5]
0x517: V497 = 0x4
0x51a: V498 = S[0x4]
0x51b: V499 = 0x1
0x51d: V500 = 0xa0
0x51f: V501 = 0x2
0x521: V502 = EXP 0x2 0xa0
0x522: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x525: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x527: M[0x0] = V504
0x52b: V505 = SHA3 0x0 0x40
0x52d: V506 = S[V505]
0x530: V507 = ADD V496 V506
0x533: S[V505] = V507
0x534: V508 = CALLVALUE
0x538: V509 = ADD V508 V494
0x53c: S[0x5] = V509
0x53e: V510 = S[0x4]
0x53f: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x554: V512 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x555: V513 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V510
0x556: V514 = CALLER
0x559: V515 = OR V514 V513
0x55c: S[0x4] = V515
0x55e: V516 = M[0x40]
0x562: V517 = AND V514 0xffffffffffffffffffffffffffffffffffffffff
0x564: M[V516] = V517
0x565: V518 = 0x20
0x568: V519 = ADD V516 0x20
0x56b: M[V519] = V509
0x56d: V520 = M[0x40]
0x570: V521 = 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x594: V522 = SUB V516 V520
0x595: V523 = ADD V522 0x40
0x597: LOG V520 V523 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x598: V524 = 0x2f0
0x59b: JUMP 0x2f0
---
Entry stack: [V10, S3, {0x25a, 0x264}, 0x264, 0x0]
Stack pops: 1
Stack additions: [V509]
Exit stack: [V10, S3, {0x25a, 0x264}, 0x264, V509]

================================

Block 0x59c
[0x59c:0x5a0]
---
Predecessors: [0x4e0]
Successors: []
---
0x59c JUMPDEST
0x59d PUSH2 0x2
0x5a0 JUMP
---
0x59c: JUMPDEST 
0x59d: V525 = 0x2
0x5a0: THROW 
---
Entry stack: [V10, S3, {0x25a, 0x264}, 0x264, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x25a, 0x264}, 0x264, 0x0]

================================

Function 0:
Public function signature: 0x89c22ad
Entry block: 0x11c
Exit block: 0x14e
Body: 0x11c, 0x122, 0x14e

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x12a
Exit block: 0x266
Body: 0x12a, 0x130, 0x266

Function 2:
Public function signature: 0x4b449cba
Entry block: 0x141
Exit block: 0x14e
Body: 0x141, 0x147, 0x14e

Function 3:
Public function signature: 0x4d804e60
Entry block: 0x160
Exit block: 0x14e
Body: 0x14e, 0x160, 0x166

Function 4:
Public function signature: 0x4f245ef7
Entry block: 0x172
Exit block: 0x14e
Body: 0x14e, 0x172, 0x178

Function 5:
Public function signature: 0x5d7db95d
Entry block: 0x180
Exit block: 0x25a
Body: 0x180, 0x186, 0x1a1, 0x25a, 0x264, 0x3a8, 0x3b7, 0x3bb, 0x3c7, 0x3cb, 0x470

Function 6:
Public function signature: 0x5f8909bd
Entry block: 0x1a5
Exit block: 0x14e
Body: 0x14e, 0x1a5, 0x1ab

Function 7:
Public function signature: 0x6bd61a66
Entry block: 0x1b3
Exit block: 0x25a
Body: 0xb8, 0xda, 0x118, 0x1b3, 0x1b9, 0x25a, 0x264, 0x2f0

Function 8:
Public function signature: 0x7f0a1bed
Entry block: 0x1c0
Exit block: 0x25a
Body: 0x1c0, 0x1c4, 0x1cf, 0x1d9, 0x1df, 0x25a, 0x264, 0x283, 0x2a3, 0x2b7, 0x2be, 0x2c3, 0x2c9, 0x2e8, 0x2f0, 0x2f3, 0x2fd, 0x301, 0x315, 0x339, 0x4e0, 0x505, 0x59c

Function 9:
Public function signature: 0x91f90157
Entry block: 0x1e3
Exit block: 0x266
Body: 0x1e3, 0x1e9, 0x266

Function 10:
Public function signature: 0x951504c5
Entry block: 0x1fa
Exit block: 0x25a
Body: 0x1fa, 0x200, 0x21b, 0x25a, 0x264, 0x474, 0x483, 0x487, 0x4bc

Function 11:
Public function signature: 0xc8b342ab
Entry block: 0x21f
Exit block: 0x14e
Body: 0x14e, 0x21f, 0x225, 0x244, 0x4c0, 0x4db

Function 12:
Public function signature: 0xd57bde79
Entry block: 0x24c
Exit block: 0x14e
Body: 0x14e, 0x24c, 0x252

Function 13:
Public fallback function
Entry block: 0xa3
Exit block: 0x25a
Body: 0xa3, 0xb5, 0xb8, 0xda, 0x118, 0x1c4, 0x1cf, 0x1d9, 0x1df, 0x25a, 0x25c, 0x264, 0x283, 0x2a3, 0x2b7, 0x2be, 0x2c3, 0x2c9, 0x2e8, 0x2f0, 0x2f3, 0x2fd, 0x301, 0x315, 0x339, 0x4e0, 0x505, 0x59c

