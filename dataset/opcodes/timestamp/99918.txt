Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x45c]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xd6103a1
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x45c
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xd6103a1
0x20: V14 = EQ V12 0xd6103a1
0x21: V15 = 0x45c
0x24: JUMPI 0x45c V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x471]
---
0x25 DUP1
0x26 PUSH4 0x27ebcf0e
0x2b EQ
0x2c PUSH2 0x471
0x2f JUMPI
---
0x26: V16 = 0x27ebcf0e
0x2b: V17 = EQ 0x27ebcf0e V12
0x2c: V18 = 0x471
0x2f: JUMPI 0x471 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x4a0]
---
0x30 DUP1
0x31 PUSH4 0x519ee19e
0x36 EQ
0x37 PUSH2 0x4a0
0x3a JUMPI
---
0x31: V19 = 0x519ee19e
0x36: V20 = EQ 0x519ee19e V12
0x37: V21 = 0x4a0
0x3a: JUMPI 0x4a0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x4c5]
---
0x3b DUP1
0x3c PUSH4 0x7fa8c158
0x41 EQ
0x42 PUSH2 0x4c5
0x45 JUMPI
---
0x3c: V22 = 0x7fa8c158
0x41: V23 = EQ 0x7fa8c158 V12
0x42: V24 = 0x4c5
0x45: JUMPI 0x4c5 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x4ea]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x4ea
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x4ea
0x50: JUMPI 0x4ea V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x519]
---
0x51 DUP1
0x52 PUSH4 0x96c5406d
0x57 EQ
0x58 PUSH2 0x519
0x5b JUMPI
---
0x52: V28 = 0x96c5406d
0x57: V29 = EQ 0x96c5406d V12
0x58: V30 = 0x519
0x5b: JUMPI 0x519 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x53e]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x53e
0x66 JUMPI
---
0x5d: V31 = 0xa035b1fe
0x62: V32 = EQ 0xa035b1fe V12
0x63: V33 = 0x53e
0x66: JUMPI 0x53e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x563]
---
0x67 DUP1
0x68 PUSH4 0xb44eccc9
0x6d EQ
0x6e PUSH2 0x563
0x71 JUMPI
---
0x68: V34 = 0xb44eccc9
0x6d: V35 = EQ 0xb44eccc9 V12
0x6e: V36 = 0x563
0x71: JUMPI 0x563 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x588]
---
0x72 DUP1
0x73 PUSH4 0xc8e569a8
0x78 EQ
0x79 PUSH2 0x588
0x7c JUMPI
---
0x73: V37 = 0xc8e569a8
0x78: V38 = EQ 0xc8e569a8 V12
0x79: V39 = 0x588
0x7c: JUMPI 0x588 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x5ad]
---
0x7d DUP1
0x7e PUSH4 0xccb07cef
0x83 EQ
0x84 PUSH2 0x5ad
0x87 JUMPI
---
0x7e: V40 = 0xccb07cef
0x83: V41 = EQ 0xccb07cef V12
0x84: V42 = 0x5ad
0x87: JUMPI 0x5ad V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x0, 0x7d]
Successors: [0x8c]
---
0x88 JUMPDEST
0x89 PUSH2 0x45a
---
0x88: JUMPDEST 
0x89: V43 = 0x45a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x45a]
Exit stack: [V12, 0x45a]

================================

Block 0x8c
[0x8c:0xe4]
---
Predecessors: [0x88]
Successors: [0xe5, 0xe9]
---
0x8c JUMPDEST
0x8d PUSH1 0x0
0x8f DUP1
0x90 SLOAD
0x91 DUP2
0x92 SWAP1
0x93 DUP2
0x94 SWAP1
0x95 PUSH1 0x1
0x97 PUSH1 0xa0
0x99 PUSH1 0x2
0x9b EXP
0x9c SUB
0x9d AND
0x9e PUSH4 0x70a08231
0xa3 ADDRESS
0xa4 DUP4
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 PUSH1 0x20
0xaa ADD
0xab MSTORE
0xac PUSH1 0x40
0xae MLOAD
0xaf PUSH1 0xe0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 PUSH4 0xffffffff
0xb9 DUP5
0xba AND
0xbb MUL
0xbc DUP2
0xbd MSTORE
0xbe PUSH1 0x1
0xc0 PUSH1 0xa0
0xc2 PUSH1 0x2
0xc4 EXP
0xc5 SUB
0xc6 SWAP1
0xc7 SWAP2
0xc8 AND
0xc9 PUSH1 0x4
0xcb DUP3
0xcc ADD
0xcd MSTORE
0xce PUSH1 0x24
0xd0 ADD
0xd1 PUSH1 0x20
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 DUP1
0xd7 DUP4
0xd8 SUB
0xd9 DUP2
0xda PUSH1 0x0
0xdc DUP8
0xdd DUP1
0xde EXTCODESIZE
0xdf ISZERO
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0x8c: JUMPDEST 
0x8d: V44 = 0x0
0x90: V45 = S[0x0]
0x95: V46 = 0x1
0x97: V47 = 0xa0
0x99: V48 = 0x2
0x9b: V49 = EXP 0x2 0xa0
0x9c: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x9e: V52 = 0x70a08231
0xa3: V53 = ADDRESS
0xa5: V54 = 0x40
0xa7: V55 = M[0x40]
0xa8: V56 = 0x20
0xaa: V57 = ADD 0x20 V55
0xab: M[V57] = 0x0
0xac: V58 = 0x40
0xae: V59 = M[0x40]
0xaf: V60 = 0xe0
0xb1: V61 = 0x2
0xb3: V62 = EXP 0x2 0xe0
0xb4: V63 = 0xffffffff
0xba: V64 = AND 0x70a08231 0xffffffff
0xbb: V65 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xbd: M[V59] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbe: V66 = 0x1
0xc0: V67 = 0xa0
0xc2: V68 = 0x2
0xc4: V69 = EXP 0x2 0xa0
0xc5: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8: V71 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V72 = 0x4
0xcc: V73 = ADD V59 0x4
0xcd: M[V73] = V71
0xce: V74 = 0x24
0xd0: V75 = ADD 0x24 V59
0xd1: V76 = 0x20
0xd3: V77 = 0x40
0xd5: V78 = M[0x40]
0xd8: V79 = SUB V75 V78
0xda: V80 = 0x0
0xde: V81 = EXTCODESIZE V51
0xdf: V82 = ISZERO V81
0xe0: V83 = ISZERO V82
0xe1: V84 = 0xe9
0xe4: JUMPI 0xe9 V83
---
Entry stack: [V12, 0x45a]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0x8c]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V85 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]

================================

Block 0xe9
[0xe9:0xf5]
---
Predecessors: [0x8c]
Successors: [0xf6, 0xfa]
---
0xe9 JUMPDEST
0xea PUSH2 0x2c6
0xed GAS
0xee SUB
0xef CALL
0xf0 ISZERO
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xe9: JUMPDEST 
0xea: V86 = 0x2c6
0xed: V87 = GAS
0xee: V88 = SUB V87 0x2c6
0xef: V89 = CALL V88 V51 0x0 V78 V79 V78 0x20
0xf0: V90 = ISZERO V89
0xf1: V91 = ISZERO V90
0xf2: V92 = 0xfa
0xf5: JUMPI 0xfa V91
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xe9]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V93 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]

================================

Block 0xfa
[0xfa:0x113]
---
Predecessors: [0xe9]
Successors: [0x114, 0x157]
---
0xfa JUMPDEST
0xfb POP
0xfc POP
0xfd POP
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 MLOAD
0x103 PUSH1 0x7
0x105 SSTORE
0x106 POP
0x107 PUSH1 0x3
0x109 SLOAD
0x10a PUSH1 0x1
0x10c ADD
0x10d TIMESTAMP
0x10e GT
0x10f ISZERO
0x110 PUSH2 0x157
0x113 JUMPI
---
0xfa: JUMPDEST 
0xfe: V94 = 0x40
0x100: V95 = M[0x40]
0x102: V96 = M[V95]
0x103: V97 = 0x7
0x105: S[0x7] = V96
0x107: V98 = 0x3
0x109: V99 = S[0x3]
0x10a: V100 = 0x1
0x10c: V101 = ADD 0x1 V99
0x10d: V102 = TIMESTAMP
0x10e: V103 = GT V102 V101
0x10f: V104 = ISZERO V103
0x110: V105 = 0x157
0x113: JUMPI 0x157 V104
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0]

================================

Block 0x114
[0x114:0x140]
---
Predecessors: [0xfa]
Successors: [0x141, 0x145]
---
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c CALLER
0x11d AND
0x11e CALLVALUE
0x11f DUP1
0x120 ISZERO
0x121 PUSH2 0x8fc
0x124 MUL
0x125 SWAP1
0x126 PUSH1 0x40
0x128 MLOAD
0x129 PUSH1 0x0
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f DUP4
0x130 SUB
0x131 DUP2
0x132 DUP6
0x133 DUP9
0x134 DUP9
0x135 CALL
0x136 SWAP4
0x137 POP
0x138 POP
0x139 POP
0x13a POP
0x13b ISZERO
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x114: V106 = 0x1
0x116: V107 = 0xa0
0x118: V108 = 0x2
0x11a: V109 = EXP 0x2 0xa0
0x11b: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V111 = CALLER
0x11d: V112 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V113 = CALLVALUE
0x120: V114 = ISZERO V113
0x121: V115 = 0x8fc
0x124: V116 = MUL 0x8fc V114
0x126: V117 = 0x40
0x128: V118 = M[0x40]
0x129: V119 = 0x0
0x12b: V120 = 0x40
0x12d: V121 = M[0x40]
0x130: V122 = SUB V118 V121
0x135: V123 = CALL V116 V112 V113 V121 V122 V121 0x0
0x13b: V124 = ISZERO V123
0x13c: V125 = ISZERO V124
0x13d: V126 = 0x145
0x140: JUMPI 0x145 V125
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x114]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V127 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0]

================================

Block 0x145
[0x145:0x156]
---
Predecessors: [0x114]
Successors: [0x3e2]
---
0x145 JUMPDEST
0x146 PUSH1 0x8
0x148 DUP1
0x149 SLOAD
0x14a PUSH1 0xff
0x14c NOT
0x14d AND
0x14e PUSH1 0x1
0x150 OR
0x151 SWAP1
0x152 SSTORE
0x153 PUSH2 0x3e2
0x156 JUMP
---
0x145: JUMPDEST 
0x146: V128 = 0x8
0x149: V129 = S[0x8]
0x14a: V130 = 0xff
0x14c: V131 = NOT 0xff
0x14d: V132 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V129
0x14e: V133 = 0x1
0x150: V134 = OR 0x1 V132
0x152: S[0x8] = V134
0x153: V135 = 0x3e2
0x156: JUMP 0x3e2
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0]

================================

Block 0x157
[0x157:0x160]
---
Predecessors: [0xfa]
Successors: [0x161, 0x197]
---
0x157 JUMPDEST
0x158 PUSH1 0x7
0x15a SLOAD
0x15b ISZERO
0x15c ISZERO
0x15d PUSH2 0x197
0x160 JUMPI
---
0x157: JUMPDEST 
0x158: V136 = 0x7
0x15a: V137 = S[0x7]
0x15b: V138 = ISZERO V137
0x15c: V139 = ISZERO V138
0x15d: V140 = 0x197
0x160: JUMPI 0x197 V139
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0]

================================

Block 0x161
[0x161:0x18d]
---
Predecessors: [0x157]
Successors: [0x18e, 0x192]
---
0x161 PUSH1 0x1
0x163 PUSH1 0xa0
0x165 PUSH1 0x2
0x167 EXP
0x168 SUB
0x169 CALLER
0x16a AND
0x16b CALLVALUE
0x16c DUP1
0x16d ISZERO
0x16e PUSH2 0x8fc
0x171 MUL
0x172 SWAP1
0x173 PUSH1 0x40
0x175 MLOAD
0x176 PUSH1 0x0
0x178 PUSH1 0x40
0x17a MLOAD
0x17b DUP1
0x17c DUP4
0x17d SUB
0x17e DUP2
0x17f DUP6
0x180 DUP9
0x181 DUP9
0x182 CALL
0x183 SWAP4
0x184 POP
0x185 POP
0x186 POP
0x187 POP
0x188 ISZERO
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x161: V141 = 0x1
0x163: V142 = 0xa0
0x165: V143 = 0x2
0x167: V144 = EXP 0x2 0xa0
0x168: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x169: V146 = CALLER
0x16a: V147 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V148 = CALLVALUE
0x16d: V149 = ISZERO V148
0x16e: V150 = 0x8fc
0x171: V151 = MUL 0x8fc V149
0x173: V152 = 0x40
0x175: V153 = M[0x40]
0x176: V154 = 0x0
0x178: V155 = 0x40
0x17a: V156 = M[0x40]
0x17d: V157 = SUB V153 V156
0x182: V158 = CALL V151 V147 V148 V156 V157 V156 0x0
0x188: V159 = ISZERO V158
0x189: V160 = ISZERO V159
0x18a: V161 = 0x192
0x18d: JUMPI 0x192 V160
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x161]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V162 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0]

================================

Block 0x192
[0x192:0x196]
---
Predecessors: [0x161]
Successors: [0x3e2]
---
0x192 JUMPDEST
0x193 PUSH2 0x3e2
0x196 JUMP
---
0x192: JUMPDEST 
0x193: V163 = 0x3e2
0x196: JUMP 0x3e2
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0]

================================

Block 0x197
[0x197:0x1a5]
---
Predecessors: [0x157]
Successors: [0x1a6, 0x1a7]
---
0x197 JUMPDEST
0x198 PUSH1 0x5
0x19a SLOAD
0x19b PUSH1 0x4
0x19d SLOAD
0x19e CALLVALUE
0x19f DUP2
0x1a0 ISZERO
0x1a1 ISZERO
0x1a2 PUSH2 0x1a7
0x1a5 JUMPI
---
0x197: JUMPDEST 
0x198: V164 = 0x5
0x19a: V165 = S[0x5]
0x19b: V166 = 0x4
0x19d: V167 = S[0x4]
0x19e: V168 = CALLVALUE
0x1a0: V169 = ISZERO V167
0x1a1: V170 = ISZERO V169
0x1a2: V171 = 0x1a7
0x1a5: JUMPI 0x1a7 V170
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V165, V167, V168]
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0, V165, V167, V168]

================================

Block 0x1a6
[0x1a6:0x1a6]
---
Predecessors: [0x197]
Successors: []
---
0x1a6 INVALID
---
0x1a6: INVALID 
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0, V165, V167, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, 0x0, 0x0, 0x0, V165, V167, V168]

================================

Block 0x1a7
[0x1a7:0x1b3]
---
Predecessors: [0x197]
Successors: [0x1b4, 0x1b8]
---
0x1a7 JUMPDEST
0x1a8 DIV
0x1a9 MUL
0x1aa SWAP3
0x1ab POP
0x1ac PUSH1 0x0
0x1ae DUP4
0x1af GT
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V172 = DIV V168 V167
0x1a9: V173 = MUL V172 V165
0x1ac: V174 = 0x0
0x1af: V175 = GT V173 0x0
0x1b0: V176 = 0x1b8
0x1b3: JUMPI 0x1b8 V175
---
Entry stack: [V12, 0x45a, 0x0, 0x0, 0x0, V165, V167, V168]
Stack pops: 6
Stack additions: [V173, S4, S3]
Exit stack: [V12, 0x45a, V173, 0x0, 0x0]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1a7]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V177 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V173, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, 0x0, 0x0]

================================

Block 0x1b8
[0x1b8:0x1c7]
---
Predecessors: [0x1a7]
Successors: [0x1c8, 0x1c9]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x5
0x1bb SLOAD
0x1bc PUSH1 0x4
0x1be SLOAD
0x1bf DUP5
0x1c0 MUL
0x1c1 DUP2
0x1c2 ISZERO
0x1c3 ISZERO
0x1c4 PUSH2 0x1c9
0x1c7 JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V178 = 0x5
0x1bb: V179 = S[0x5]
0x1bc: V180 = 0x4
0x1be: V181 = S[0x4]
0x1c0: V182 = MUL V173 V181
0x1c2: V183 = ISZERO V179
0x1c3: V184 = ISZERO V183
0x1c4: V185 = 0x1c9
0x1c7: JUMPI 0x1c9 V184
---
Entry stack: [V12, 0x45a, V173, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V179, V182]
Exit stack: [V12, 0x45a, V173, 0x0, 0x0, V179, V182]

================================

Block 0x1c8
[0x1c8:0x1c8]
---
Predecessors: [0x1b8]
Successors: []
---
0x1c8 INVALID
---
0x1c8: INVALID 
---
Entry stack: [V12, 0x45a, V173, 0x0, 0x0, V179, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, 0x0, 0x0, V179, V182]

================================

Block 0x1c9
[0x1c9:0x1d7]
---
Predecessors: [0x1b8]
Successors: [0x1d8, 0x2cd]
---
0x1c9 JUMPDEST
0x1ca DIV
0x1cb SWAP2
0x1cc POP
0x1cd DUP3
0x1ce PUSH1 0x7
0x1d0 SLOAD
0x1d1 LT
0x1d2 ISZERO
0x1d3 ISZERO
0x1d4 PUSH2 0x2cd
0x1d7 JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V186 = DIV V182 V179
0x1ce: V187 = 0x7
0x1d0: V188 = S[0x7]
0x1d1: V189 = LT V188 V173
0x1d2: V190 = ISZERO V189
0x1d3: V191 = ISZERO V190
0x1d4: V192 = 0x2cd
0x1d7: JUMPI 0x2cd V191
---
Entry stack: [V12, 0x45a, V173, 0x0, 0x0, V179, V182]
Stack pops: 5
Stack additions: [S4, V186, S2]
Exit stack: [V12, 0x45a, V173, V186, 0x0]

================================

Block 0x1d8
[0x1d8:0x20a]
---
Predecessors: [0x1c9]
Successors: [0x20b, 0x20f]
---
0x1d8 PUSH1 0x8
0x1da SLOAD
0x1db PUSH2 0x100
0x1de SWAP1
0x1df DIV
0x1e0 PUSH1 0x1
0x1e2 PUSH1 0xa0
0x1e4 PUSH1 0x2
0x1e6 EXP
0x1e7 SUB
0x1e8 AND
0x1e9 PUSH2 0x8fc
0x1ec DUP4
0x1ed ISZERO
0x1ee MUL
0x1ef DUP4
0x1f0 PUSH1 0x40
0x1f2 MLOAD
0x1f3 PUSH1 0x0
0x1f5 PUSH1 0x40
0x1f7 MLOAD
0x1f8 DUP1
0x1f9 DUP4
0x1fa SUB
0x1fb DUP2
0x1fc DUP6
0x1fd DUP9
0x1fe DUP9
0x1ff CALL
0x200 SWAP4
0x201 POP
0x202 POP
0x203 POP
0x204 POP
0x205 ISZERO
0x206 ISZERO
0x207 PUSH2 0x20f
0x20a JUMPI
---
0x1d8: V193 = 0x8
0x1da: V194 = S[0x8]
0x1db: V195 = 0x100
0x1df: V196 = DIV V194 0x100
0x1e0: V197 = 0x1
0x1e2: V198 = 0xa0
0x1e4: V199 = 0x2
0x1e6: V200 = EXP 0x2 0xa0
0x1e7: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e8: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x1e9: V203 = 0x8fc
0x1ed: V204 = ISZERO V186
0x1ee: V205 = MUL V204 0x8fc
0x1f0: V206 = 0x40
0x1f2: V207 = M[0x40]
0x1f3: V208 = 0x0
0x1f5: V209 = 0x40
0x1f7: V210 = M[0x40]
0x1fa: V211 = SUB V207 V210
0x1ff: V212 = CALL V205 V202 V186 V210 V211 V210 0x0
0x205: V213 = ISZERO V212
0x206: V214 = ISZERO V213
0x207: V215 = 0x20f
0x20a: JUMPI 0x20f V214
---
Entry stack: [V12, 0x45a, V173, V186, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x45a, V173, V186, 0x0]

================================

Block 0x20b
[0x20b:0x20e]
---
Predecessors: [0x1d8]
Successors: []
---
0x20b PUSH1 0x0
0x20d DUP1
0x20e REVERT
---
0x20b: V216 = 0x0
0x20e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V173, V186, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, 0x0]

================================

Block 0x20f
[0x20f:0x217]
---
Predecessors: [0x1d8]
Successors: [0x218, 0x24c]
---
0x20f JUMPDEST
0x210 DUP2
0x211 CALLVALUE
0x212 GT
0x213 ISZERO
0x214 PUSH2 0x24c
0x217 JUMPI
---
0x20f: JUMPDEST 
0x211: V217 = CALLVALUE
0x212: V218 = GT V217 V186
0x213: V219 = ISZERO V218
0x214: V220 = 0x24c
0x217: JUMPI 0x24c V219
---
Entry stack: [V12, 0x45a, V173, V186, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x45a, V173, V186, 0x0]

================================

Block 0x218
[0x218:0x247]
---
Predecessors: [0x20f]
Successors: [0x248, 0x24c]
---
0x218 CALLER
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 AND
0x222 PUSH2 0x8fc
0x225 DUP4
0x226 CALLVALUE
0x227 SUB
0x228 SWAP1
0x229 DUP2
0x22a ISZERO
0x22b MUL
0x22c SWAP1
0x22d PUSH1 0x40
0x22f MLOAD
0x230 PUSH1 0x0
0x232 PUSH1 0x40
0x234 MLOAD
0x235 DUP1
0x236 DUP4
0x237 SUB
0x238 DUP2
0x239 DUP6
0x23a DUP9
0x23b DUP9
0x23c CALL
0x23d SWAP4
0x23e POP
0x23f POP
0x240 POP
0x241 POP
0x242 ISZERO
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x218: V221 = CALLER
0x219: V222 = 0x1
0x21b: V223 = 0xa0
0x21d: V224 = 0x2
0x21f: V225 = EXP 0x2 0xa0
0x220: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x222: V228 = 0x8fc
0x226: V229 = CALLVALUE
0x227: V230 = SUB V229 V186
0x22a: V231 = ISZERO V230
0x22b: V232 = MUL V231 0x8fc
0x22d: V233 = 0x40
0x22f: V234 = M[0x40]
0x230: V235 = 0x0
0x232: V236 = 0x40
0x234: V237 = M[0x40]
0x237: V238 = SUB V234 V237
0x23c: V239 = CALL V232 V227 V230 V237 V238 V237 0x0
0x242: V240 = ISZERO V239
0x243: V241 = ISZERO V240
0x244: V242 = 0x24c
0x247: JUMPI 0x24c V241
---
Entry stack: [V12, 0x45a, V173, V186, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x45a, V173, V186, 0x0]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x218]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V243 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V173, V186, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, 0x0]

================================

Block 0x24c
[0x24c:0x24c]
---
Predecessors: [0x20f, 0x218]
Successors: [0x24d]
---
0x24c JUMPDEST
---
0x24c: JUMPDEST 
---
Entry stack: [V12, 0x45a, V173, V186, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, 0x0]

================================

Block 0x24d
[0x24d:0x29e]
---
Predecessors: [0x24c]
Successors: [0x29f, 0x2a3]
---
0x24d JUMPDEST
0x24e PUSH1 0x0
0x250 SLOAD
0x251 PUSH1 0x1
0x253 PUSH1 0xa0
0x255 PUSH1 0x2
0x257 EXP
0x258 SUB
0x259 AND
0x25a PUSH4 0xa9059cbb
0x25f CALLER
0x260 DUP6
0x261 PUSH1 0x40
0x263 MLOAD
0x264 PUSH1 0xe0
0x266 PUSH1 0x2
0x268 EXP
0x269 PUSH4 0xffffffff
0x26e DUP6
0x26f AND
0x270 MUL
0x271 DUP2
0x272 MSTORE
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b SWAP1
0x27c SWAP3
0x27d AND
0x27e PUSH1 0x4
0x280 DUP4
0x281 ADD
0x282 MSTORE
0x283 PUSH1 0x24
0x285 DUP3
0x286 ADD
0x287 MSTORE
0x288 PUSH1 0x44
0x28a ADD
0x28b PUSH1 0x0
0x28d PUSH1 0x40
0x28f MLOAD
0x290 DUP1
0x291 DUP4
0x292 SUB
0x293 DUP2
0x294 PUSH1 0x0
0x296 DUP8
0x297 DUP1
0x298 EXTCODESIZE
0x299 ISZERO
0x29a ISZERO
0x29b PUSH2 0x2a3
0x29e JUMPI
---
0x24d: JUMPDEST 
0x24e: V244 = 0x0
0x250: V245 = S[0x0]
0x251: V246 = 0x1
0x253: V247 = 0xa0
0x255: V248 = 0x2
0x257: V249 = EXP 0x2 0xa0
0x258: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x259: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x25a: V252 = 0xa9059cbb
0x25f: V253 = CALLER
0x261: V254 = 0x40
0x263: V255 = M[0x40]
0x264: V256 = 0xe0
0x266: V257 = 0x2
0x268: V258 = EXP 0x2 0xe0
0x269: V259 = 0xffffffff
0x26f: V260 = AND 0xa9059cbb 0xffffffff
0x270: V261 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x272: M[V255] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x273: V262 = 0x1
0x275: V263 = 0xa0
0x277: V264 = 0x2
0x279: V265 = EXP 0x2 0xa0
0x27a: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V267 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0x27e: V268 = 0x4
0x281: V269 = ADD V255 0x4
0x282: M[V269] = V267
0x283: V270 = 0x24
0x286: V271 = ADD V255 0x24
0x287: M[V271] = V173
0x288: V272 = 0x44
0x28a: V273 = ADD 0x44 V255
0x28b: V274 = 0x0
0x28d: V275 = 0x40
0x28f: V276 = M[0x40]
0x292: V277 = SUB V273 V276
0x294: V278 = 0x0
0x298: V279 = EXTCODESIZE V251
0x299: V280 = ISZERO V279
0x29a: V281 = ISZERO V280
0x29b: V282 = 0x2a3
0x29e: JUMPI 0x2a3 V281
---
Entry stack: [V12, 0x45a, V173, V186, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V251, 0xa9059cbb, V273, 0x0, V276, V277, V276, 0x0, V251]
Exit stack: [V12, 0x45a, V173, V186, 0x0, V251, 0xa9059cbb, V273, 0x0, V276, V277, V276, 0x0, V251]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x24d]
Successors: []
---
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 REVERT
---
0x29f: V283 = 0x0
0x2a2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V173, V186, 0x0, V251, 0xa9059cbb, V273, 0x0, V276, V277, V276, 0x0, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, 0x0, V251, 0xa9059cbb, V273, 0x0, V276, V277, V276, 0x0, V251]

================================

Block 0x2a3
[0x2a3:0x2af]
---
Predecessors: [0x24d]
Successors: [0x2b0, 0x2b4]
---
0x2a3 JUMPDEST
0x2a4 PUSH2 0x2c6
0x2a7 GAS
0x2a8 SUB
0x2a9 CALL
0x2aa ISZERO
0x2ab ISZERO
0x2ac PUSH2 0x2b4
0x2af JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V284 = 0x2c6
0x2a7: V285 = GAS
0x2a8: V286 = SUB V285 0x2c6
0x2a9: V287 = CALL V286 V251 0x0 V276 V277 V276 0x0
0x2aa: V288 = ISZERO V287
0x2ab: V289 = ISZERO V288
0x2ac: V290 = 0x2b4
0x2af: JUMPI 0x2b4 V289
---
Entry stack: [V12, 0x45a, V173, V186, 0x0, V251, 0xa9059cbb, V273, 0x0, V276, V277, V276, 0x0, V251]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, 0x0, V251, 0xa9059cbb, V273]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x2a3]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
---
0x2b0: V291 = 0x0
0x2b3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V173, V186, 0x0, V251, 0xa9059cbb, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, 0x0, V251, 0xa9059cbb, V273]

================================

Block 0x2b4
[0x2b4:0x2cc]
---
Predecessors: [0x2a3]
Successors: [0x3e2]
---
0x2b4 JUMPDEST
0x2b5 POP
0x2b6 POP
0x2b7 PUSH1 0x6
0x2b9 DUP1
0x2ba SLOAD
0x2bb DUP6
0x2bc ADD
0x2bd SWAP1
0x2be SSTORE
0x2bf POP
0x2c0 PUSH1 0x7
0x2c2 DUP1
0x2c3 SLOAD
0x2c4 DUP5
0x2c5 SWAP1
0x2c6 SUB
0x2c7 SWAP1
0x2c8 SSTORE
0x2c9 PUSH2 0x3e2
0x2cc JUMP
---
0x2b4: JUMPDEST 
0x2b7: V292 = 0x6
0x2ba: V293 = S[0x6]
0x2bc: V294 = ADD V173 V293
0x2be: S[0x6] = V294
0x2c0: V295 = 0x7
0x2c3: V296 = S[0x7]
0x2c6: V297 = SUB V296 V173
0x2c8: S[0x7] = V297
0x2c9: V298 = 0x3e2
0x2cc: JUMP 0x3e2
---
Entry stack: [V12, 0x45a, V173, V186, 0x0, V251, 0xa9059cbb, V273]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, 0x45a, V173, V186, 0x0]

================================

Block 0x2cd
[0x2cd:0x2de]
---
Predecessors: [0x1c9]
Successors: [0x2df, 0x2e0]
---
0x2cd JUMPDEST
0x2ce PUSH1 0x5
0x2d0 SLOAD
0x2d1 PUSH1 0x4
0x2d3 SLOAD
0x2d4 PUSH1 0x7
0x2d6 SLOAD
0x2d7 MUL
0x2d8 DUP2
0x2d9 ISZERO
0x2da ISZERO
0x2db PUSH2 0x2e0
0x2de JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V299 = 0x5
0x2d0: V300 = S[0x5]
0x2d1: V301 = 0x4
0x2d3: V302 = S[0x4]
0x2d4: V303 = 0x7
0x2d6: V304 = S[0x7]
0x2d7: V305 = MUL V304 V302
0x2d9: V306 = ISZERO V300
0x2da: V307 = ISZERO V306
0x2db: V308 = 0x2e0
0x2de: JUMPI 0x2e0 V307
---
Entry stack: [V12, 0x45a, V173, V186, 0x0]
Stack pops: 0
Stack additions: [V300, V305]
Exit stack: [V12, 0x45a, V173, V186, 0x0, V300, V305]

================================

Block 0x2df
[0x2df:0x2df]
---
Predecessors: [0x2cd]
Successors: []
---
0x2df INVALID
---
0x2df: INVALID 
---
Entry stack: [V12, 0x45a, V173, V186, 0x0, V300, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, 0x0, V300, V305]

================================

Block 0x2e0
[0x2e0:0x318]
---
Predecessors: [0x2cd]
Successors: [0x319, 0x31d]
---
0x2e0 JUMPDEST
0x2e1 PUSH1 0x8
0x2e3 SLOAD
0x2e4 SWAP2
0x2e5 SWAP1
0x2e6 DIV
0x2e7 SWAP2
0x2e8 POP
0x2e9 PUSH2 0x100
0x2ec SWAP1
0x2ed DIV
0x2ee PUSH1 0x1
0x2f0 PUSH1 0xa0
0x2f2 PUSH1 0x2
0x2f4 EXP
0x2f5 SUB
0x2f6 AND
0x2f7 PUSH2 0x8fc
0x2fa DUP3
0x2fb ISZERO
0x2fc MUL
0x2fd DUP3
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 PUSH1 0x0
0x303 PUSH1 0x40
0x305 MLOAD
0x306 DUP1
0x307 DUP4
0x308 SUB
0x309 DUP2
0x30a DUP6
0x30b DUP9
0x30c DUP9
0x30d CALL
0x30e SWAP4
0x30f POP
0x310 POP
0x311 POP
0x312 POP
0x313 ISZERO
0x314 ISZERO
0x315 PUSH2 0x31d
0x318 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V309 = 0x8
0x2e3: V310 = S[0x8]
0x2e6: V311 = DIV V305 V300
0x2e9: V312 = 0x100
0x2ed: V313 = DIV V310 0x100
0x2ee: V314 = 0x1
0x2f0: V315 = 0xa0
0x2f2: V316 = 0x2
0x2f4: V317 = EXP 0x2 0xa0
0x2f5: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x2f7: V320 = 0x8fc
0x2fb: V321 = ISZERO V311
0x2fc: V322 = MUL V321 0x8fc
0x2fe: V323 = 0x40
0x300: V324 = M[0x40]
0x301: V325 = 0x0
0x303: V326 = 0x40
0x305: V327 = M[0x40]
0x308: V328 = SUB V324 V327
0x30d: V329 = CALL V322 V319 V311 V327 V328 V327 0x0
0x313: V330 = ISZERO V329
0x314: V331 = ISZERO V330
0x315: V332 = 0x31d
0x318: JUMPI 0x31d V331
---
Entry stack: [V12, 0x45a, V173, V186, 0x0, V300, V305]
Stack pops: 3
Stack additions: [V311]
Exit stack: [V12, 0x45a, V173, V186, V311]

================================

Block 0x319
[0x319:0x31c]
---
Predecessors: [0x2e0]
Successors: []
---
0x319 PUSH1 0x0
0x31b DUP1
0x31c REVERT
---
0x319: V333 = 0x0
0x31c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V173, V186, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, V311]

================================

Block 0x31d
[0x31d:0x375]
---
Predecessors: [0x2e0]
Successors: [0x376, 0x37a]
---
0x31d JUMPDEST
0x31e PUSH1 0x0
0x320 SLOAD
0x321 PUSH1 0x7
0x323 SLOAD
0x324 PUSH1 0x1
0x326 PUSH1 0xa0
0x328 PUSH1 0x2
0x32a EXP
0x32b SUB
0x32c SWAP1
0x32d SWAP2
0x32e AND
0x32f SWAP1
0x330 PUSH4 0xa9059cbb
0x335 SWAP1
0x336 CALLER
0x337 SWAP1
0x338 PUSH1 0x40
0x33a MLOAD
0x33b PUSH1 0xe0
0x33d PUSH1 0x2
0x33f EXP
0x340 PUSH4 0xffffffff
0x345 DUP6
0x346 AND
0x347 MUL
0x348 DUP2
0x349 MSTORE
0x34a PUSH1 0x1
0x34c PUSH1 0xa0
0x34e PUSH1 0x2
0x350 EXP
0x351 SUB
0x352 SWAP1
0x353 SWAP3
0x354 AND
0x355 PUSH1 0x4
0x357 DUP4
0x358 ADD
0x359 MSTORE
0x35a PUSH1 0x24
0x35c DUP3
0x35d ADD
0x35e MSTORE
0x35f PUSH1 0x44
0x361 ADD
0x362 PUSH1 0x0
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 DUP4
0x369 SUB
0x36a DUP2
0x36b PUSH1 0x0
0x36d DUP8
0x36e DUP1
0x36f EXTCODESIZE
0x370 ISZERO
0x371 ISZERO
0x372 PUSH2 0x37a
0x375 JUMPI
---
0x31d: JUMPDEST 
0x31e: V334 = 0x0
0x320: V335 = S[0x0]
0x321: V336 = 0x7
0x323: V337 = S[0x7]
0x324: V338 = 0x1
0x326: V339 = 0xa0
0x328: V340 = 0x2
0x32a: V341 = EXP 0x2 0xa0
0x32b: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32e: V343 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x330: V344 = 0xa9059cbb
0x336: V345 = CALLER
0x338: V346 = 0x40
0x33a: V347 = M[0x40]
0x33b: V348 = 0xe0
0x33d: V349 = 0x2
0x33f: V350 = EXP 0x2 0xe0
0x340: V351 = 0xffffffff
0x346: V352 = AND 0xa9059cbb 0xffffffff
0x347: V353 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x349: M[V347] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x34a: V354 = 0x1
0x34c: V355 = 0xa0
0x34e: V356 = 0x2
0x350: V357 = EXP 0x2 0xa0
0x351: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x354: V359 = AND V345 0xffffffffffffffffffffffffffffffffffffffff
0x355: V360 = 0x4
0x358: V361 = ADD V347 0x4
0x359: M[V361] = V359
0x35a: V362 = 0x24
0x35d: V363 = ADD V347 0x24
0x35e: M[V363] = V337
0x35f: V364 = 0x44
0x361: V365 = ADD 0x44 V347
0x362: V366 = 0x0
0x364: V367 = 0x40
0x366: V368 = M[0x40]
0x369: V369 = SUB V365 V368
0x36b: V370 = 0x0
0x36f: V371 = EXTCODESIZE V343
0x370: V372 = ISZERO V371
0x371: V373 = ISZERO V372
0x372: V374 = 0x37a
0x375: JUMPI 0x37a V373
---
Entry stack: [V12, 0x45a, V173, V186, V311]
Stack pops: 0
Stack additions: [V343, 0xa9059cbb, V365, 0x0, V368, V369, V368, 0x0, V343]
Exit stack: [V12, 0x45a, V173, V186, V311, V343, 0xa9059cbb, V365, 0x0, V368, V369, V368, 0x0, V343]

================================

Block 0x376
[0x376:0x379]
---
Predecessors: [0x31d]
Successors: []
---
0x376 PUSH1 0x0
0x378 DUP1
0x379 REVERT
---
0x376: V375 = 0x0
0x379: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V173, V186, V311, V343, 0xa9059cbb, V365, 0x0, V368, V369, V368, 0x0, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, V311, V343, 0xa9059cbb, V365, 0x0, V368, V369, V368, 0x0, V343]

================================

Block 0x37a
[0x37a:0x386]
---
Predecessors: [0x31d]
Successors: [0x387, 0x38b]
---
0x37a JUMPDEST
0x37b PUSH2 0x2c6
0x37e GAS
0x37f SUB
0x380 CALL
0x381 ISZERO
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x37a: JUMPDEST 
0x37b: V376 = 0x2c6
0x37e: V377 = GAS
0x37f: V378 = SUB V377 0x2c6
0x380: V379 = CALL V378 V343 0x0 V368 V369 V368 0x0
0x381: V380 = ISZERO V379
0x382: V381 = ISZERO V380
0x383: V382 = 0x38b
0x386: JUMPI 0x38b V381
---
Entry stack: [V12, 0x45a, V173, V186, V311, V343, 0xa9059cbb, V365, 0x0, V368, V369, V368, 0x0, V343]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, V311, V343, 0xa9059cbb, V365]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x37a]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V383 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V173, V186, V311, V343, 0xa9059cbb, V365]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, V311, V343, 0xa9059cbb, V365]

================================

Block 0x38b
[0x38b:0x3be]
---
Predecessors: [0x37a]
Successors: [0x3bf, 0x3c3]
---
0x38b JUMPDEST
0x38c POP
0x38d POP
0x38e POP
0x38f CALLER
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 AND
0x399 PUSH2 0x8fc
0x39c DUP3
0x39d CALLVALUE
0x39e SUB
0x39f SWAP1
0x3a0 DUP2
0x3a1 ISZERO
0x3a2 MUL
0x3a3 SWAP1
0x3a4 PUSH1 0x40
0x3a6 MLOAD
0x3a7 PUSH1 0x0
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac DUP1
0x3ad DUP4
0x3ae SUB
0x3af DUP2
0x3b0 DUP6
0x3b1 DUP9
0x3b2 DUP9
0x3b3 CALL
0x3b4 SWAP4
0x3b5 POP
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 ISZERO
0x3ba ISZERO
0x3bb PUSH2 0x3c3
0x3be JUMPI
---
0x38b: JUMPDEST 
0x38f: V384 = CALLER
0x390: V385 = 0x1
0x392: V386 = 0xa0
0x394: V387 = 0x2
0x396: V388 = EXP 0x2 0xa0
0x397: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x398: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x399: V391 = 0x8fc
0x39d: V392 = CALLVALUE
0x39e: V393 = SUB V392 V311
0x3a1: V394 = ISZERO V393
0x3a2: V395 = MUL V394 0x8fc
0x3a4: V396 = 0x40
0x3a6: V397 = M[0x40]
0x3a7: V398 = 0x0
0x3a9: V399 = 0x40
0x3ab: V400 = M[0x40]
0x3ae: V401 = SUB V397 V400
0x3b3: V402 = CALL V395 V390 V393 V400 V401 V400 0x0
0x3b9: V403 = ISZERO V402
0x3ba: V404 = ISZERO V403
0x3bb: V405 = 0x3c3
0x3be: JUMPI 0x3c3 V404
---
Entry stack: [V12, 0x45a, V173, V186, V311, V343, 0xa9059cbb, V365]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x45a, V173, V186, V311]

================================

Block 0x3bf
[0x3bf:0x3c2]
---
Predecessors: [0x38b]
Successors: []
---
0x3bf PUSH1 0x0
0x3c1 DUP1
0x3c2 REVERT
---
0x3bf: V406 = 0x0
0x3c2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V173, V186, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, V311]

================================

Block 0x3c3
[0x3c3:0x3e1]
---
Predecessors: [0x38b]
Successors: [0x3e2]
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x7
0x3c6 DUP1
0x3c7 SLOAD
0x3c8 PUSH1 0x6
0x3ca DUP1
0x3cb SLOAD
0x3cc SWAP1
0x3cd SWAP2
0x3ce ADD
0x3cf SWAP1
0x3d0 SSTORE
0x3d1 PUSH1 0x0
0x3d3 SWAP1
0x3d4 SSTORE
0x3d5 PUSH1 0x8
0x3d7 DUP1
0x3d8 SLOAD
0x3d9 PUSH1 0xff
0x3db NOT
0x3dc AND
0x3dd PUSH1 0x1
0x3df OR
0x3e0 SWAP1
0x3e1 SSTORE
---
0x3c3: JUMPDEST 
0x3c4: V407 = 0x7
0x3c7: V408 = S[0x7]
0x3c8: V409 = 0x6
0x3cb: V410 = S[0x6]
0x3ce: V411 = ADD V408 V410
0x3d0: S[0x6] = V411
0x3d1: V412 = 0x0
0x3d4: S[0x7] = 0x0
0x3d5: V413 = 0x8
0x3d8: V414 = S[0x8]
0x3d9: V415 = 0xff
0x3db: V416 = NOT 0xff
0x3dc: V417 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V414
0x3dd: V418 = 0x1
0x3df: V419 = OR 0x1 V417
0x3e1: S[0x8] = V419
---
Entry stack: [V12, 0x45a, V173, V186, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V173, V186, V311]

================================

Block 0x3e2
[0x3e2:0x3e2]
---
Predecessors: [0x145, 0x192, 0x2b4, 0x3c3]
Successors: [0x3e3]
---
0x3e2 JUMPDEST
---
0x3e2: JUMPDEST 
---
Entry stack: [V12, 0x45a, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, S2, S1, S0]

================================

Block 0x3e3
[0x3e3:0x3e3]
---
Predecessors: [0x3e2]
Successors: [0x3e4]
---
0x3e3 JUMPDEST
---
0x3e3: JUMPDEST 
---
Entry stack: [V12, 0x45a, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, S2, S1, S0]

================================

Block 0x3e4
[0x3e4:0x454]
---
Predecessors: [0x3e3]
Successors: [0x455]
---
0x3e4 JUMPDEST
0x3e5 PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x406 PUSH1 0x7
0x408 SLOAD
0x409 PUSH1 0x40
0x40b MLOAD
0x40c SWAP1
0x40d DUP2
0x40e MSTORE
0x40f PUSH1 0x20
0x411 ADD
0x412 PUSH1 0x40
0x414 MLOAD
0x415 DUP1
0x416 SWAP2
0x417 SUB
0x418 SWAP1
0x419 LOG1
0x41a PUSH1 0x8
0x41c SLOAD
0x41d PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x43e SWAP1
0x43f PUSH1 0xff
0x441 AND
0x442 PUSH1 0x40
0x444 MLOAD
0x445 SWAP1
0x446 ISZERO
0x447 ISZERO
0x448 DUP2
0x449 MSTORE
0x44a PUSH1 0x20
0x44c ADD
0x44d PUSH1 0x40
0x44f MLOAD
0x450 DUP1
0x451 SWAP2
0x452 SUB
0x453 SWAP1
0x454 LOG1
---
0x3e4: JUMPDEST 
0x3e5: V420 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x406: V421 = 0x7
0x408: V422 = S[0x7]
0x409: V423 = 0x40
0x40b: V424 = M[0x40]
0x40e: M[V424] = V422
0x40f: V425 = 0x20
0x411: V426 = ADD 0x20 V424
0x412: V427 = 0x40
0x414: V428 = M[0x40]
0x417: V429 = SUB V426 V428
0x419: LOG V428 V429 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x41a: V430 = 0x8
0x41c: V431 = S[0x8]
0x41d: V432 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x43f: V433 = 0xff
0x441: V434 = AND 0xff V431
0x442: V435 = 0x40
0x444: V436 = M[0x40]
0x446: V437 = ISZERO V434
0x447: V438 = ISZERO V437
0x449: M[V436] = V438
0x44a: V439 = 0x20
0x44c: V440 = ADD 0x20 V436
0x44d: V441 = 0x40
0x44f: V442 = M[0x40]
0x452: V443 = SUB V440 V442
0x454: LOG V442 V443 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, 0x45a, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, S2, S1, S0]

================================

Block 0x455
[0x455:0x459]
---
Predecessors: [0x3e4]
Successors: [0x45a]
---
0x455 JUMPDEST
0x456 POP
0x457 POP
0x458 POP
0x459 JUMP
---
0x455: JUMPDEST 
0x459: JUMP 0x45a
---
Entry stack: [V12, 0x45a, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x45a
[0x45a:0x45b]
---
Predecessors: [0x455, 0x6fc]
Successors: []
---
0x45a JUMPDEST
0x45b STOP
---
0x45a: JUMPDEST 
0x45b: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x45c
[0x45c:0x462]
---
Predecessors: [0xb]
Successors: [0x463, 0x467]
---
0x45c JUMPDEST
0x45d CALLVALUE
0x45e ISZERO
0x45f PUSH2 0x467
0x462 JUMPI
---
0x45c: JUMPDEST 
0x45d: V444 = CALLVALUE
0x45e: V445 = ISZERO V444
0x45f: V446 = 0x467
0x462: JUMPI 0x467 V445
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x45c]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V447 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x467
[0x467:0x46e]
---
Predecessors: [0x45c]
Successors: [0x5d4]
---
0x467 JUMPDEST
0x468 PUSH2 0x45a
0x46b PUSH2 0x5d4
0x46e JUMP
---
0x467: JUMPDEST 
0x468: V448 = 0x45a
0x46b: V449 = 0x5d4
0x46e: JUMP 0x5d4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x45a]
Exit stack: [V12, 0x45a]

================================

Block 0x46f
[0x46f:0x470]
---
Predecessors: []
Successors: []
---
0x46f JUMPDEST
0x470 STOP
---
0x46f: JUMPDEST 
0x470: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x471
[0x471:0x477]
---
Predecessors: [0x25]
Successors: [0x478, 0x47c]
---
0x471 JUMPDEST
0x472 CALLVALUE
0x473 ISZERO
0x474 PUSH2 0x47c
0x477 JUMPI
---
0x471: JUMPDEST 
0x472: V450 = CALLVALUE
0x473: V451 = ISZERO V450
0x474: V452 = 0x47c
0x477: JUMPI 0x47c V451
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x478
[0x478:0x47b]
---
Predecessors: [0x471]
Successors: []
---
0x478 PUSH1 0x0
0x47a DUP1
0x47b REVERT
---
0x478: V453 = 0x0
0x47b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47c
[0x47c:0x483]
---
Predecessors: [0x471]
Successors: [0x6fe]
---
0x47c JUMPDEST
0x47d PUSH2 0x484
0x480 PUSH2 0x6fe
0x483 JUMP
---
0x47c: JUMPDEST 
0x47d: V454 = 0x484
0x480: V455 = 0x6fe
0x483: JUMP 0x6fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x484]
Exit stack: [V12, 0x484]

================================

Block 0x484
[0x484:0x49f]
---
Predecessors: [0x6fe, 0x719]
Successors: []
---
0x484 JUMPDEST
0x485 PUSH1 0x40
0x487 MLOAD
0x488 PUSH1 0x1
0x48a PUSH1 0xa0
0x48c PUSH1 0x2
0x48e EXP
0x48f SUB
0x490 SWAP1
0x491 SWAP2
0x492 AND
0x493 DUP2
0x494 MSTORE
0x495 PUSH1 0x20
0x497 ADD
0x498 PUSH1 0x40
0x49a MLOAD
0x49b DUP1
0x49c SWAP2
0x49d SUB
0x49e SWAP1
0x49f RETURN
---
0x484: JUMPDEST 
0x485: V456 = 0x40
0x487: V457 = M[0x40]
0x488: V458 = 0x1
0x48a: V459 = 0xa0
0x48c: V460 = 0x2
0x48e: V461 = EXP 0x2 0xa0
0x48f: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x492: V463 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x494: M[V457] = V463
0x495: V464 = 0x20
0x497: V465 = ADD 0x20 V457
0x498: V466 = 0x40
0x49a: V467 = M[0x40]
0x49d: V468 = SUB V465 V467
0x49f: RETURN V467 V468
---
Entry stack: [V12, 0x484, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x484]

================================

Block 0x4a0
[0x4a0:0x4a6]
---
Predecessors: [0x30]
Successors: [0x4a7, 0x4ab]
---
0x4a0 JUMPDEST
0x4a1 CALLVALUE
0x4a2 ISZERO
0x4a3 PUSH2 0x4ab
0x4a6 JUMPI
---
0x4a0: JUMPDEST 
0x4a1: V469 = CALLVALUE
0x4a2: V470 = ISZERO V469
0x4a3: V471 = 0x4ab
0x4a6: JUMPI 0x4ab V470
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a7
[0x4a7:0x4aa]
---
Predecessors: [0x4a0]
Successors: []
---
0x4a7 PUSH1 0x0
0x4a9 DUP1
0x4aa REVERT
---
0x4a7: V472 = 0x0
0x4aa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ab
[0x4ab:0x4b2]
---
Predecessors: [0x4a0]
Successors: [0x70d]
---
0x4ab JUMPDEST
0x4ac PUSH2 0x4b3
0x4af PUSH2 0x70d
0x4b2 JUMP
---
0x4ab: JUMPDEST 
0x4ac: V473 = 0x4b3
0x4af: V474 = 0x70d
0x4b2: JUMP 0x70d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4b3]
Exit stack: [V12, 0x4b3]

================================

Block 0x4b3
[0x4b3:0x4c4]
---
Predecessors: [0x70d, 0x713, 0x72d, 0x733, 0x739, 0x73f]
Successors: []
---
0x4b3 JUMPDEST
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 SWAP1
0x4b8 DUP2
0x4b9 MSTORE
0x4ba PUSH1 0x20
0x4bc ADD
0x4bd PUSH1 0x40
0x4bf MLOAD
0x4c0 DUP1
0x4c1 SWAP2
0x4c2 SUB
0x4c3 SWAP1
0x4c4 RETURN
---
0x4b3: JUMPDEST 
0x4b4: V475 = 0x40
0x4b6: V476 = M[0x40]
0x4b9: M[V476] = S0
0x4ba: V477 = 0x20
0x4bc: V478 = ADD 0x20 V476
0x4bd: V479 = 0x40
0x4bf: V480 = M[0x40]
0x4c2: V481 = SUB V478 V480
0x4c4: RETURN V480 V481
---
Entry stack: [V12, 0x4b3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x4b3]

================================

Block 0x4c5
[0x4c5:0x4cb]
---
Predecessors: [0x3b]
Successors: [0x4cc, 0x4d0]
---
0x4c5 JUMPDEST
0x4c6 CALLVALUE
0x4c7 ISZERO
0x4c8 PUSH2 0x4d0
0x4cb JUMPI
---
0x4c5: JUMPDEST 
0x4c6: V482 = CALLVALUE
0x4c7: V483 = ISZERO V482
0x4c8: V484 = 0x4d0
0x4cb: JUMPI 0x4d0 V483
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4cc
[0x4cc:0x4cf]
---
Predecessors: [0x4c5]
Successors: []
---
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf REVERT
---
0x4cc: V485 = 0x0
0x4cf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d0
[0x4d0:0x4d7]
---
Predecessors: [0x4c5]
Successors: [0x713]
---
0x4d0 JUMPDEST
0x4d1 PUSH2 0x4b3
0x4d4 PUSH2 0x713
0x4d7 JUMP
---
0x4d0: JUMPDEST 
0x4d1: V486 = 0x4b3
0x4d4: V487 = 0x713
0x4d7: JUMP 0x713
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4b3]
Exit stack: [V12, 0x4b3]

================================

Block 0x4d8
[0x4d8:0x4e9]
---
Predecessors: []
Successors: []
---
0x4d8 JUMPDEST
0x4d9 PUSH1 0x40
0x4db MLOAD
0x4dc SWAP1
0x4dd DUP2
0x4de MSTORE
0x4df PUSH1 0x20
0x4e1 ADD
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 DUP1
0x4e6 SWAP2
0x4e7 SUB
0x4e8 SWAP1
0x4e9 RETURN
---
0x4d8: JUMPDEST 
0x4d9: V488 = 0x40
0x4db: V489 = M[0x40]
0x4de: M[V489] = S0
0x4df: V490 = 0x20
0x4e1: V491 = ADD 0x20 V489
0x4e2: V492 = 0x40
0x4e4: V493 = M[0x40]
0x4e7: V494 = SUB V491 V493
0x4e9: RETURN V493 V494
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4ea
[0x4ea:0x4f0]
---
Predecessors: [0x46]
Successors: [0x4f1, 0x4f5]
---
0x4ea JUMPDEST
0x4eb CALLVALUE
0x4ec ISZERO
0x4ed PUSH2 0x4f5
0x4f0 JUMPI
---
0x4ea: JUMPDEST 
0x4eb: V495 = CALLVALUE
0x4ec: V496 = ISZERO V495
0x4ed: V497 = 0x4f5
0x4f0: JUMPI 0x4f5 V496
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f1
[0x4f1:0x4f4]
---
Predecessors: [0x4ea]
Successors: []
---
0x4f1 PUSH1 0x0
0x4f3 DUP1
0x4f4 REVERT
---
0x4f1: V498 = 0x0
0x4f4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f5
[0x4f5:0x4fc]
---
Predecessors: [0x4ea]
Successors: [0x719]
---
0x4f5 JUMPDEST
0x4f6 PUSH2 0x484
0x4f9 PUSH2 0x719
0x4fc JUMP
---
0x4f5: JUMPDEST 
0x4f6: V499 = 0x484
0x4f9: V500 = 0x719
0x4fc: JUMP 0x719
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x484]
Exit stack: [V12, 0x484]

================================

Block 0x4fd
[0x4fd:0x518]
---
Predecessors: []
Successors: []
---
0x4fd JUMPDEST
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 PUSH1 0x1
0x503 PUSH1 0xa0
0x505 PUSH1 0x2
0x507 EXP
0x508 SUB
0x509 SWAP1
0x50a SWAP2
0x50b AND
0x50c DUP2
0x50d MSTORE
0x50e PUSH1 0x20
0x510 ADD
0x511 PUSH1 0x40
0x513 MLOAD
0x514 DUP1
0x515 SWAP2
0x516 SUB
0x517 SWAP1
0x518 RETURN
---
0x4fd: JUMPDEST 
0x4fe: V501 = 0x40
0x500: V502 = M[0x40]
0x501: V503 = 0x1
0x503: V504 = 0xa0
0x505: V505 = 0x2
0x507: V506 = EXP 0x2 0xa0
0x508: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50b: V508 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x50d: M[V502] = V508
0x50e: V509 = 0x20
0x510: V510 = ADD 0x20 V502
0x511: V511 = 0x40
0x513: V512 = M[0x40]
0x516: V513 = SUB V510 V512
0x518: RETURN V512 V513
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x519
[0x519:0x51f]
---
Predecessors: [0x51]
Successors: [0x520, 0x524]
---
0x519 JUMPDEST
0x51a CALLVALUE
0x51b ISZERO
0x51c PUSH2 0x524
0x51f JUMPI
---
0x519: JUMPDEST 
0x51a: V514 = CALLVALUE
0x51b: V515 = ISZERO V514
0x51c: V516 = 0x524
0x51f: JUMPI 0x524 V515
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x520
[0x520:0x523]
---
Predecessors: [0x519]
Successors: []
---
0x520 PUSH1 0x0
0x522 DUP1
0x523 REVERT
---
0x520: V517 = 0x0
0x523: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x524
[0x524:0x52b]
---
Predecessors: [0x519]
Successors: [0x72d]
---
0x524 JUMPDEST
0x525 PUSH2 0x4b3
0x528 PUSH2 0x72d
0x52b JUMP
---
0x524: JUMPDEST 
0x525: V518 = 0x4b3
0x528: V519 = 0x72d
0x52b: JUMP 0x72d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4b3]
Exit stack: [V12, 0x4b3]

================================

Block 0x52c
[0x52c:0x53d]
---
Predecessors: []
Successors: []
---
0x52c JUMPDEST
0x52d PUSH1 0x40
0x52f MLOAD
0x530 SWAP1
0x531 DUP2
0x532 MSTORE
0x533 PUSH1 0x20
0x535 ADD
0x536 PUSH1 0x40
0x538 MLOAD
0x539 DUP1
0x53a SWAP2
0x53b SUB
0x53c SWAP1
0x53d RETURN
---
0x52c: JUMPDEST 
0x52d: V520 = 0x40
0x52f: V521 = M[0x40]
0x532: M[V521] = S0
0x533: V522 = 0x20
0x535: V523 = ADD 0x20 V521
0x536: V524 = 0x40
0x538: V525 = M[0x40]
0x53b: V526 = SUB V523 V525
0x53d: RETURN V525 V526
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x53e
[0x53e:0x544]
---
Predecessors: [0x5c]
Successors: [0x545, 0x549]
---
0x53e JUMPDEST
0x53f CALLVALUE
0x540 ISZERO
0x541 PUSH2 0x549
0x544 JUMPI
---
0x53e: JUMPDEST 
0x53f: V527 = CALLVALUE
0x540: V528 = ISZERO V527
0x541: V529 = 0x549
0x544: JUMPI 0x549 V528
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x545
[0x545:0x548]
---
Predecessors: [0x53e]
Successors: []
---
0x545 PUSH1 0x0
0x547 DUP1
0x548 REVERT
---
0x545: V530 = 0x0
0x548: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x549
[0x549:0x550]
---
Predecessors: [0x53e]
Successors: [0x733]
---
0x549 JUMPDEST
0x54a PUSH2 0x4b3
0x54d PUSH2 0x733
0x550 JUMP
---
0x549: JUMPDEST 
0x54a: V531 = 0x4b3
0x54d: V532 = 0x733
0x550: JUMP 0x733
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4b3]
Exit stack: [V12, 0x4b3]

================================

Block 0x551
[0x551:0x562]
---
Predecessors: []
Successors: []
---
0x551 JUMPDEST
0x552 PUSH1 0x40
0x554 MLOAD
0x555 SWAP1
0x556 DUP2
0x557 MSTORE
0x558 PUSH1 0x20
0x55a ADD
0x55b PUSH1 0x40
0x55d MLOAD
0x55e DUP1
0x55f SWAP2
0x560 SUB
0x561 SWAP1
0x562 RETURN
---
0x551: JUMPDEST 
0x552: V533 = 0x40
0x554: V534 = M[0x40]
0x557: M[V534] = S0
0x558: V535 = 0x20
0x55a: V536 = ADD 0x20 V534
0x55b: V537 = 0x40
0x55d: V538 = M[0x40]
0x560: V539 = SUB V536 V538
0x562: RETURN V538 V539
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x563
[0x563:0x569]
---
Predecessors: [0x67]
Successors: [0x56a, 0x56e]
---
0x563 JUMPDEST
0x564 CALLVALUE
0x565 ISZERO
0x566 PUSH2 0x56e
0x569 JUMPI
---
0x563: JUMPDEST 
0x564: V540 = CALLVALUE
0x565: V541 = ISZERO V540
0x566: V542 = 0x56e
0x569: JUMPI 0x56e V541
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x56a
[0x56a:0x56d]
---
Predecessors: [0x563]
Successors: []
---
0x56a PUSH1 0x0
0x56c DUP1
0x56d REVERT
---
0x56a: V543 = 0x0
0x56d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x56e
[0x56e:0x575]
---
Predecessors: [0x563]
Successors: [0x739]
---
0x56e JUMPDEST
0x56f PUSH2 0x4b3
0x572 PUSH2 0x739
0x575 JUMP
---
0x56e: JUMPDEST 
0x56f: V544 = 0x4b3
0x572: V545 = 0x739
0x575: JUMP 0x739
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4b3]
Exit stack: [V12, 0x4b3]

================================

Block 0x576
[0x576:0x587]
---
Predecessors: []
Successors: []
---
0x576 JUMPDEST
0x577 PUSH1 0x40
0x579 MLOAD
0x57a SWAP1
0x57b DUP2
0x57c MSTORE
0x57d PUSH1 0x20
0x57f ADD
0x580 PUSH1 0x40
0x582 MLOAD
0x583 DUP1
0x584 SWAP2
0x585 SUB
0x586 SWAP1
0x587 RETURN
---
0x576: JUMPDEST 
0x577: V546 = 0x40
0x579: V547 = M[0x40]
0x57c: M[V547] = S0
0x57d: V548 = 0x20
0x57f: V549 = ADD 0x20 V547
0x580: V550 = 0x40
0x582: V551 = M[0x40]
0x585: V552 = SUB V549 V551
0x587: RETURN V551 V552
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x588
[0x588:0x58e]
---
Predecessors: [0x72]
Successors: [0x58f, 0x593]
---
0x588 JUMPDEST
0x589 CALLVALUE
0x58a ISZERO
0x58b PUSH2 0x593
0x58e JUMPI
---
0x588: JUMPDEST 
0x589: V553 = CALLVALUE
0x58a: V554 = ISZERO V553
0x58b: V555 = 0x593
0x58e: JUMPI 0x593 V554
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x58f
[0x58f:0x592]
---
Predecessors: [0x588]
Successors: []
---
0x58f PUSH1 0x0
0x591 DUP1
0x592 REVERT
---
0x58f: V556 = 0x0
0x592: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x593
[0x593:0x59a]
---
Predecessors: [0x588]
Successors: [0x73f]
---
0x593 JUMPDEST
0x594 PUSH2 0x4b3
0x597 PUSH2 0x73f
0x59a JUMP
---
0x593: JUMPDEST 
0x594: V557 = 0x4b3
0x597: V558 = 0x73f
0x59a: JUMP 0x73f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4b3]
Exit stack: [V12, 0x4b3]

================================

Block 0x59b
[0x59b:0x5ac]
---
Predecessors: []
Successors: []
---
0x59b JUMPDEST
0x59c PUSH1 0x40
0x59e MLOAD
0x59f SWAP1
0x5a0 DUP2
0x5a1 MSTORE
0x5a2 PUSH1 0x20
0x5a4 ADD
0x5a5 PUSH1 0x40
0x5a7 MLOAD
0x5a8 DUP1
0x5a9 SWAP2
0x5aa SUB
0x5ab SWAP1
0x5ac RETURN
---
0x59b: JUMPDEST 
0x59c: V559 = 0x40
0x59e: V560 = M[0x40]
0x5a1: M[V560] = S0
0x5a2: V561 = 0x20
0x5a4: V562 = ADD 0x20 V560
0x5a5: V563 = 0x40
0x5a7: V564 = M[0x40]
0x5aa: V565 = SUB V562 V564
0x5ac: RETURN V564 V565
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5ad
[0x5ad:0x5b3]
---
Predecessors: [0x7d]
Successors: [0x5b4, 0x5b8]
---
0x5ad JUMPDEST
0x5ae CALLVALUE
0x5af ISZERO
0x5b0 PUSH2 0x5b8
0x5b3 JUMPI
---
0x5ad: JUMPDEST 
0x5ae: V566 = CALLVALUE
0x5af: V567 = ISZERO V566
0x5b0: V568 = 0x5b8
0x5b3: JUMPI 0x5b8 V567
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b4
[0x5b4:0x5b7]
---
Predecessors: [0x5ad]
Successors: []
---
0x5b4 PUSH1 0x0
0x5b6 DUP1
0x5b7 REVERT
---
0x5b4: V569 = 0x0
0x5b7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b8
[0x5b8:0x5bf]
---
Predecessors: [0x5ad]
Successors: [0x745]
---
0x5b8 JUMPDEST
0x5b9 PUSH2 0x5c0
0x5bc PUSH2 0x745
0x5bf JUMP
---
0x5b8: JUMPDEST 
0x5b9: V570 = 0x5c0
0x5bc: V571 = 0x745
0x5bf: JUMP 0x745
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5c0]
Exit stack: [V12, 0x5c0]

================================

Block 0x5c0
[0x5c0:0x5d3]
---
Predecessors: [0x745]
Successors: []
---
0x5c0 JUMPDEST
0x5c1 PUSH1 0x40
0x5c3 MLOAD
0x5c4 SWAP1
0x5c5 ISZERO
0x5c6 ISZERO
0x5c7 DUP2
0x5c8 MSTORE
0x5c9 PUSH1 0x20
0x5cb ADD
0x5cc PUSH1 0x40
0x5ce MLOAD
0x5cf DUP1
0x5d0 SWAP2
0x5d1 SUB
0x5d2 SWAP1
0x5d3 RETURN
---
0x5c0: JUMPDEST 
0x5c1: V572 = 0x40
0x5c3: V573 = M[0x40]
0x5c5: V574 = ISZERO V743
0x5c6: V575 = ISZERO V574
0x5c8: M[V573] = V575
0x5c9: V576 = 0x20
0x5cb: V577 = ADD 0x20 V573
0x5cc: V578 = 0x40
0x5ce: V579 = M[0x40]
0x5d1: V580 = SUB V577 V579
0x5d3: RETURN V579 V580
---
Entry stack: [V12, 0x5c0, V743]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x5c0]

================================

Block 0x5d4
[0x5d4:0x5e0]
---
Predecessors: [0x467]
Successors: [0x5e1, 0x5e5]
---
0x5d4 JUMPDEST
0x5d5 PUSH1 0x3
0x5d7 SLOAD
0x5d8 PUSH1 0x1
0x5da ADD
0x5db TIMESTAMP
0x5dc GT
0x5dd PUSH2 0x5e5
0x5e0 JUMPI
---
0x5d4: JUMPDEST 
0x5d5: V581 = 0x3
0x5d7: V582 = S[0x3]
0x5d8: V583 = 0x1
0x5da: V584 = ADD 0x1 V582
0x5db: V585 = TIMESTAMP
0x5dc: V586 = GT V585 V584
0x5dd: V587 = 0x5e5
0x5e0: JUMPI 0x5e5 V586
---
Entry stack: [V12, 0x45a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a]

================================

Block 0x5e1
[0x5e1:0x5e4]
---
Predecessors: [0x5d4]
Successors: []
---
0x5e1 PUSH1 0x0
0x5e3 DUP1
0x5e4 REVERT
---
0x5e1: V588 = 0x0
0x5e4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a]

================================

Block 0x5e5
[0x5e5:0x600]
---
Predecessors: [0x5d4]
Successors: [0x601, 0x605]
---
0x5e5 JUMPDEST
0x5e6 PUSH1 0x8
0x5e8 SLOAD
0x5e9 CALLER
0x5ea PUSH1 0x1
0x5ec PUSH1 0xa0
0x5ee PUSH1 0x2
0x5f0 EXP
0x5f1 SUB
0x5f2 SWAP1
0x5f3 DUP2
0x5f4 AND
0x5f5 PUSH2 0x100
0x5f8 SWAP1
0x5f9 SWAP3
0x5fa DIV
0x5fb AND
0x5fc EQ
0x5fd PUSH2 0x605
0x600 JUMPI
---
0x5e5: JUMPDEST 
0x5e6: V589 = 0x8
0x5e8: V590 = S[0x8]
0x5e9: V591 = CALLER
0x5ea: V592 = 0x1
0x5ec: V593 = 0xa0
0x5ee: V594 = 0x2
0x5f0: V595 = EXP 0x2 0xa0
0x5f1: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f4: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x5f5: V598 = 0x100
0x5fa: V599 = DIV V590 0x100
0x5fb: V600 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x5fc: V601 = EQ V600 V597
0x5fd: V602 = 0x605
0x600: JUMPI 0x605 V601
---
Entry stack: [V12, 0x45a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a]

================================

Block 0x601
[0x601:0x604]
---
Predecessors: [0x5e5]
Successors: []
---
0x601 PUSH1 0x0
0x603 DUP1
0x604 REVERT
---
0x601: V603 = 0x0
0x604: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a]

================================

Block 0x605
[0x605:0x672]
---
Predecessors: [0x5e5]
Successors: [0x673, 0x677]
---
0x605 JUMPDEST
0x606 PUSH1 0x0
0x608 DUP1
0x609 SLOAD
0x60a PUSH1 0x8
0x60c SLOAD
0x60d PUSH1 0x1
0x60f PUSH1 0xa0
0x611 PUSH1 0x2
0x613 EXP
0x614 SUB
0x615 SWAP2
0x616 DUP3
0x617 AND
0x618 SWAP3
0x619 PUSH4 0xa9059cbb
0x61e SWAP3
0x61f PUSH2 0x100
0x622 SWAP1
0x623 SWAP3
0x624 DIV
0x625 SWAP1
0x626 SWAP2
0x627 AND
0x628 SWAP1
0x629 DUP4
0x62a SWAP1
0x62b PUSH4 0x70a08231
0x630 SWAP1
0x631 ADDRESS
0x632 SWAP1
0x633 PUSH1 0x40
0x635 MLOAD
0x636 PUSH1 0x20
0x638 ADD
0x639 MSTORE
0x63a PUSH1 0x40
0x63c MLOAD
0x63d PUSH1 0xe0
0x63f PUSH1 0x2
0x641 EXP
0x642 PUSH4 0xffffffff
0x647 DUP5
0x648 AND
0x649 MUL
0x64a DUP2
0x64b MSTORE
0x64c PUSH1 0x1
0x64e PUSH1 0xa0
0x650 PUSH1 0x2
0x652 EXP
0x653 SUB
0x654 SWAP1
0x655 SWAP2
0x656 AND
0x657 PUSH1 0x4
0x659 DUP3
0x65a ADD
0x65b MSTORE
0x65c PUSH1 0x24
0x65e ADD
0x65f PUSH1 0x20
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 DUP4
0x666 SUB
0x667 DUP2
0x668 PUSH1 0x0
0x66a DUP8
0x66b DUP1
0x66c EXTCODESIZE
0x66d ISZERO
0x66e ISZERO
0x66f PUSH2 0x677
0x672 JUMPI
---
0x605: JUMPDEST 
0x606: V604 = 0x0
0x609: V605 = S[0x0]
0x60a: V606 = 0x8
0x60c: V607 = S[0x8]
0x60d: V608 = 0x1
0x60f: V609 = 0xa0
0x611: V610 = 0x2
0x613: V611 = EXP 0x2 0xa0
0x614: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x617: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x619: V614 = 0xa9059cbb
0x61f: V615 = 0x100
0x624: V616 = DIV V607 0x100
0x627: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x62b: V618 = 0x70a08231
0x631: V619 = ADDRESS
0x633: V620 = 0x40
0x635: V621 = M[0x40]
0x636: V622 = 0x20
0x638: V623 = ADD 0x20 V621
0x639: M[V623] = 0x0
0x63a: V624 = 0x40
0x63c: V625 = M[0x40]
0x63d: V626 = 0xe0
0x63f: V627 = 0x2
0x641: V628 = EXP 0x2 0xe0
0x642: V629 = 0xffffffff
0x648: V630 = AND 0x70a08231 0xffffffff
0x649: V631 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x64b: M[V625] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x64c: V632 = 0x1
0x64e: V633 = 0xa0
0x650: V634 = 0x2
0x652: V635 = EXP 0x2 0xa0
0x653: V636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x656: V637 = AND V619 0xffffffffffffffffffffffffffffffffffffffff
0x657: V638 = 0x4
0x65a: V639 = ADD V625 0x4
0x65b: M[V639] = V637
0x65c: V640 = 0x24
0x65e: V641 = ADD 0x24 V625
0x65f: V642 = 0x20
0x661: V643 = 0x40
0x663: V644 = M[0x40]
0x666: V645 = SUB V641 V644
0x668: V646 = 0x0
0x66c: V647 = EXTCODESIZE V613
0x66d: V648 = ISZERO V647
0x66e: V649 = ISZERO V648
0x66f: V650 = 0x677
0x672: JUMPI 0x677 V649
---
Entry stack: [V12, 0x45a]
Stack pops: 0
Stack additions: [V613, 0xa9059cbb, V617, V613, 0x70a08231, V641, 0x20, V644, V645, V644, 0x0, V613]
Exit stack: [V12, 0x45a, V613, 0xa9059cbb, V617, V613, 0x70a08231, V641, 0x20, V644, V645, V644, 0x0, V613]

================================

Block 0x673
[0x673:0x676]
---
Predecessors: [0x605]
Successors: []
---
0x673 PUSH1 0x0
0x675 DUP1
0x676 REVERT
---
0x673: V651 = 0x0
0x676: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V613, 0xa9059cbb, V617, V613, 0x70a08231, V641, 0x20, V644, V645, V644, 0x0, V613]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V613, 0xa9059cbb, V617, V613, 0x70a08231, V641, 0x20, V644, V645, V644, 0x0, V613]

================================

Block 0x677
[0x677:0x683]
---
Predecessors: [0x605]
Successors: [0x684, 0x688]
---
0x677 JUMPDEST
0x678 PUSH2 0x2c6
0x67b GAS
0x67c SUB
0x67d CALL
0x67e ISZERO
0x67f ISZERO
0x680 PUSH2 0x688
0x683 JUMPI
---
0x677: JUMPDEST 
0x678: V652 = 0x2c6
0x67b: V653 = GAS
0x67c: V654 = SUB V653 0x2c6
0x67d: V655 = CALL V654 V613 0x0 V644 V645 V644 0x20
0x67e: V656 = ISZERO V655
0x67f: V657 = ISZERO V656
0x680: V658 = 0x688
0x683: JUMPI 0x688 V657
---
Entry stack: [V12, 0x45a, V613, 0xa9059cbb, V617, V613, 0x70a08231, V641, 0x20, V644, V645, V644, 0x0, V613]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x45a, V613, 0xa9059cbb, V617, V613, 0x70a08231, V641]

================================

Block 0x684
[0x684:0x687]
---
Predecessors: [0x677]
Successors: []
---
0x684 PUSH1 0x0
0x686 DUP1
0x687 REVERT
---
0x684: V659 = 0x0
0x687: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V613, 0xa9059cbb, V617, V613, 0x70a08231, V641]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V613, 0xa9059cbb, V617, V613, 0x70a08231, V641]

================================

Block 0x688
[0x688:0x6d0]
---
Predecessors: [0x677]
Successors: [0x6d1, 0x6d5]
---
0x688 JUMPDEST
0x689 POP
0x68a POP
0x68b POP
0x68c PUSH1 0x40
0x68e MLOAD
0x68f DUP1
0x690 MLOAD
0x691 SWAP1
0x692 POP
0x693 PUSH1 0x40
0x695 MLOAD
0x696 PUSH1 0xe0
0x698 PUSH1 0x2
0x69a EXP
0x69b PUSH4 0xffffffff
0x6a0 DUP6
0x6a1 AND
0x6a2 MUL
0x6a3 DUP2
0x6a4 MSTORE
0x6a5 PUSH1 0x1
0x6a7 PUSH1 0xa0
0x6a9 PUSH1 0x2
0x6ab EXP
0x6ac SUB
0x6ad SWAP1
0x6ae SWAP3
0x6af AND
0x6b0 PUSH1 0x4
0x6b2 DUP4
0x6b3 ADD
0x6b4 MSTORE
0x6b5 PUSH1 0x24
0x6b7 DUP3
0x6b8 ADD
0x6b9 MSTORE
0x6ba PUSH1 0x44
0x6bc ADD
0x6bd PUSH1 0x0
0x6bf PUSH1 0x40
0x6c1 MLOAD
0x6c2 DUP1
0x6c3 DUP4
0x6c4 SUB
0x6c5 DUP2
0x6c6 PUSH1 0x0
0x6c8 DUP8
0x6c9 DUP1
0x6ca EXTCODESIZE
0x6cb ISZERO
0x6cc ISZERO
0x6cd PUSH2 0x6d5
0x6d0 JUMPI
---
0x688: JUMPDEST 
0x68c: V660 = 0x40
0x68e: V661 = M[0x40]
0x690: V662 = M[V661]
0x693: V663 = 0x40
0x695: V664 = M[0x40]
0x696: V665 = 0xe0
0x698: V666 = 0x2
0x69a: V667 = EXP 0x2 0xe0
0x69b: V668 = 0xffffffff
0x6a1: V669 = AND 0xa9059cbb 0xffffffff
0x6a2: V670 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6a4: M[V664] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6a5: V671 = 0x1
0x6a7: V672 = 0xa0
0x6a9: V673 = 0x2
0x6ab: V674 = EXP 0x2 0xa0
0x6ac: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6af: V676 = AND V617 0xffffffffffffffffffffffffffffffffffffffff
0x6b0: V677 = 0x4
0x6b3: V678 = ADD V664 0x4
0x6b4: M[V678] = V676
0x6b5: V679 = 0x24
0x6b8: V680 = ADD V664 0x24
0x6b9: M[V680] = V662
0x6ba: V681 = 0x44
0x6bc: V682 = ADD 0x44 V664
0x6bd: V683 = 0x0
0x6bf: V684 = 0x40
0x6c1: V685 = M[0x40]
0x6c4: V686 = SUB V682 V685
0x6c6: V687 = 0x0
0x6ca: V688 = EXTCODESIZE V613
0x6cb: V689 = ISZERO V688
0x6cc: V690 = ISZERO V689
0x6cd: V691 = 0x6d5
0x6d0: JUMPI 0x6d5 V690
---
Entry stack: [V12, 0x45a, V613, 0xa9059cbb, V617, V613, 0x70a08231, V641]
Stack pops: 6
Stack additions: [S5, S4, V682, 0x0, V685, V686, V685, 0x0, S5]
Exit stack: [V12, 0x45a, V613, 0xa9059cbb, V682, 0x0, V685, V686, V685, 0x0, V613]

================================

Block 0x6d1
[0x6d1:0x6d4]
---
Predecessors: [0x688]
Successors: []
---
0x6d1 PUSH1 0x0
0x6d3 DUP1
0x6d4 REVERT
---
0x6d1: V692 = 0x0
0x6d4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V613, 0xa9059cbb, V682, 0x0, V685, V686, V685, 0x0, V613]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V613, 0xa9059cbb, V682, 0x0, V685, V686, V685, 0x0, V613]

================================

Block 0x6d5
[0x6d5:0x6e1]
---
Predecessors: [0x688]
Successors: [0x6e2, 0x6e6]
---
0x6d5 JUMPDEST
0x6d6 PUSH2 0x2c6
0x6d9 GAS
0x6da SUB
0x6db CALL
0x6dc ISZERO
0x6dd ISZERO
0x6de PUSH2 0x6e6
0x6e1 JUMPI
---
0x6d5: JUMPDEST 
0x6d6: V693 = 0x2c6
0x6d9: V694 = GAS
0x6da: V695 = SUB V694 0x2c6
0x6db: V696 = CALL V695 V613 0x0 V685 V686 V685 0x0
0x6dc: V697 = ISZERO V696
0x6dd: V698 = ISZERO V697
0x6de: V699 = 0x6e6
0x6e1: JUMPI 0x6e6 V698
---
Entry stack: [V12, 0x45a, V613, 0xa9059cbb, V682, 0x0, V685, V686, V685, 0x0, V613]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x45a, V613, 0xa9059cbb, V682]

================================

Block 0x6e2
[0x6e2:0x6e5]
---
Predecessors: [0x6d5]
Successors: []
---
0x6e2 PUSH1 0x0
0x6e4 DUP1
0x6e5 REVERT
---
0x6e2: V700 = 0x0
0x6e5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x45a, V613, 0xa9059cbb, V682]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x45a, V613, 0xa9059cbb, V682]

================================

Block 0x6e6
[0x6e6:0x6fb]
---
Predecessors: [0x6d5]
Successors: [0x6fc]
---
0x6e6 JUMPDEST
0x6e7 POP
0x6e8 POP
0x6e9 PUSH1 0x0
0x6eb PUSH1 0x7
0x6ed SSTORE
0x6ee POP
0x6ef PUSH1 0x8
0x6f1 DUP1
0x6f2 SLOAD
0x6f3 PUSH1 0xff
0x6f5 NOT
0x6f6 AND
0x6f7 PUSH1 0x1
0x6f9 OR
0x6fa SWAP1
0x6fb SSTORE
---
0x6e6: JUMPDEST 
0x6e9: V701 = 0x0
0x6eb: V702 = 0x7
0x6ed: S[0x7] = 0x0
0x6ef: V703 = 0x8
0x6f2: V704 = S[0x8]
0x6f3: V705 = 0xff
0x6f5: V706 = NOT 0xff
0x6f6: V707 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V704
0x6f7: V708 = 0x1
0x6f9: V709 = OR 0x1 V707
0x6fb: S[0x8] = V709
---
Entry stack: [V12, 0x45a, V613, 0xa9059cbb, V682]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x45a]

================================

Block 0x6fc
[0x6fc:0x6fd]
---
Predecessors: [0x6e6]
Successors: [0x45a]
---
0x6fc JUMPDEST
0x6fd JUMP
---
0x6fc: JUMPDEST 
0x6fd: JUMP 0x45a
---
Entry stack: [V12, 0x45a]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x6fe
[0x6fe:0x70c]
---
Predecessors: [0x47c]
Successors: [0x484]
---
0x6fe JUMPDEST
0x6ff PUSH1 0x0
0x701 SLOAD
0x702 PUSH1 0x1
0x704 PUSH1 0xa0
0x706 PUSH1 0x2
0x708 EXP
0x709 SUB
0x70a AND
0x70b DUP2
0x70c JUMP
---
0x6fe: JUMPDEST 
0x6ff: V710 = 0x0
0x701: V711 = S[0x0]
0x702: V712 = 0x1
0x704: V713 = 0xa0
0x706: V714 = 0x2
0x708: V715 = EXP 0x2 0xa0
0x709: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70a: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V711
0x70c: JUMP 0x484
---
Entry stack: [V12, 0x484]
Stack pops: 1
Stack additions: [S0, V717]
Exit stack: [V12, 0x484, V717]

================================

Block 0x70d
[0x70d:0x712]
---
Predecessors: [0x4ab]
Successors: [0x4b3]
---
0x70d JUMPDEST
0x70e PUSH1 0x6
0x710 SLOAD
0x711 DUP2
0x712 JUMP
---
0x70d: JUMPDEST 
0x70e: V718 = 0x6
0x710: V719 = S[0x6]
0x712: JUMP 0x4b3
---
Entry stack: [V12, 0x4b3]
Stack pops: 1
Stack additions: [S0, V719]
Exit stack: [V12, 0x4b3, V719]

================================

Block 0x713
[0x713:0x718]
---
Predecessors: [0x4d0]
Successors: [0x4b3]
---
0x713 JUMPDEST
0x714 PUSH1 0x1
0x716 SLOAD
0x717 DUP2
0x718 JUMP
---
0x713: JUMPDEST 
0x714: V720 = 0x1
0x716: V721 = S[0x1]
0x718: JUMP 0x4b3
---
Entry stack: [V12, 0x4b3]
Stack pops: 1
Stack additions: [S0, V721]
Exit stack: [V12, 0x4b3, V721]

================================

Block 0x719
[0x719:0x72c]
---
Predecessors: [0x4f5]
Successors: [0x484]
---
0x719 JUMPDEST
0x71a PUSH1 0x8
0x71c SLOAD
0x71d PUSH2 0x100
0x720 SWAP1
0x721 DIV
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a AND
0x72b DUP2
0x72c JUMP
---
0x719: JUMPDEST 
0x71a: V722 = 0x8
0x71c: V723 = S[0x8]
0x71d: V724 = 0x100
0x721: V725 = DIV V723 0x100
0x722: V726 = 0x1
0x724: V727 = 0xa0
0x726: V728 = 0x2
0x728: V729 = EXP 0x2 0xa0
0x729: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72a: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0x72c: JUMP 0x484
---
Entry stack: [V12, 0x484]
Stack pops: 1
Stack additions: [S0, V731]
Exit stack: [V12, 0x484, V731]

================================

Block 0x72d
[0x72d:0x732]
---
Predecessors: [0x524]
Successors: [0x4b3]
---
0x72d JUMPDEST
0x72e PUSH1 0x7
0x730 SLOAD
0x731 DUP2
0x732 JUMP
---
0x72d: JUMPDEST 
0x72e: V732 = 0x7
0x730: V733 = S[0x7]
0x732: JUMP 0x4b3
---
Entry stack: [V12, 0x4b3]
Stack pops: 1
Stack additions: [S0, V733]
Exit stack: [V12, 0x4b3, V733]

================================

Block 0x733
[0x733:0x738]
---
Predecessors: [0x549]
Successors: [0x4b3]
---
0x733 JUMPDEST
0x734 PUSH1 0x4
0x736 SLOAD
0x737 DUP2
0x738 JUMP
---
0x733: JUMPDEST 
0x734: V734 = 0x4
0x736: V735 = S[0x4]
0x738: JUMP 0x4b3
---
Entry stack: [V12, 0x4b3]
Stack pops: 1
Stack additions: [S0, V735]
Exit stack: [V12, 0x4b3, V735]

================================

Block 0x739
[0x739:0x73e]
---
Predecessors: [0x56e]
Successors: [0x4b3]
---
0x739 JUMPDEST
0x73a PUSH1 0x2
0x73c SLOAD
0x73d DUP2
0x73e JUMP
---
0x739: JUMPDEST 
0x73a: V736 = 0x2
0x73c: V737 = S[0x2]
0x73e: JUMP 0x4b3
---
Entry stack: [V12, 0x4b3]
Stack pops: 1
Stack additions: [S0, V737]
Exit stack: [V12, 0x4b3, V737]

================================

Block 0x73f
[0x73f:0x744]
---
Predecessors: [0x593]
Successors: [0x4b3]
---
0x73f JUMPDEST
0x740 PUSH1 0x3
0x742 SLOAD
0x743 DUP2
0x744 JUMP
---
0x73f: JUMPDEST 
0x740: V738 = 0x3
0x742: V739 = S[0x3]
0x744: JUMP 0x4b3
---
Entry stack: [V12, 0x4b3]
Stack pops: 1
Stack additions: [S0, V739]
Exit stack: [V12, 0x4b3, V739]

================================

Block 0x745
[0x745:0x74d]
---
Predecessors: [0x5b8]
Successors: [0x5c0]
---
0x745 JUMPDEST
0x746 PUSH1 0x8
0x748 SLOAD
0x749 PUSH1 0xff
0x74b AND
0x74c DUP2
0x74d JUMP
---
0x745: JUMPDEST 
0x746: V740 = 0x8
0x748: V741 = S[0x8]
0x749: V742 = 0xff
0x74b: V743 = AND 0xff V741
0x74d: JUMP 0x5c0
---
Entry stack: [V12, 0x5c0]
Stack pops: 1
Stack additions: [S0, V743]
Exit stack: [V12, 0x5c0, V743]

================================

Block 0x74e
[0x74e:0x78f]
---
Predecessors: []
Successors: []
---
0x74e STOP
0x74f LOG1
0x750 PUSH6 0x627a7a723058
0x757 SHA3
0x758 GAS
0x759 JUMP
0x75a MISSING 0xe0
0x75b DIV
0x75c MISSING 0x2f
0x75d MISSING 0xb4
0x75e MISSING 0xfc
0x75f MISSING 0xee
0x760 PUSH13 0x415bceea6d1e686d0395c4d545
0x76e MISSING 0xdd
0x76f GASLIMIT
0x770 MISSING 0x28
0x771 DUP1
0x772 PUSH29 0x9ad10f06cb0029
---
0x74e: STOP 
0x74f: LOG S0 S1 S2
0x750: V744 = 0x627a7a723058
0x757: V745 = SHA3 0x627a7a723058 S3
0x758: V746 = GAS
0x759: JUMP V746
0x75a: MISSING 0xe0
0x75b: V747 = DIV S0 S1
0x75c: MISSING 0x2f
0x75d: MISSING 0xb4
0x75e: MISSING 0xfc
0x75f: MISSING 0xee
0x760: V748 = 0x415bceea6d1e686d0395c4d545
0x76e: MISSING 0xdd
0x76f: V749 = GASLIMIT
0x770: MISSING 0x28
0x772: V750 = 0x9ad10f06cb0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V745, V747, 0x415bceea6d1e686d0395c4d545, V749, 0x9ad10f06cb0029, S0, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0xd6103a1
Entry block: 0x45c
Exit block: 0x45a
Body: 0x45a, 0x45c, 0x463, 0x467, 0x5d4, 0x5e1, 0x5e5, 0x601, 0x605, 0x673, 0x677, 0x684, 0x688, 0x6d1, 0x6d5, 0x6e2, 0x6e6, 0x6fc

Function 1:
Public function signature: 0x27ebcf0e
Entry block: 0x471
Exit block: 0x484
Body: 0x471, 0x478, 0x47c, 0x484, 0x6fe

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x4a0
Exit block: 0x4b3
Body: 0x4a0, 0x4a7, 0x4ab, 0x4b3, 0x70d

Function 3:
Public function signature: 0x7fa8c158
Entry block: 0x4c5
Exit block: 0x4b3
Body: 0x4b3, 0x4c5, 0x4cc, 0x4d0, 0x713

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x4ea
Exit block: 0x484
Body: 0x484, 0x4ea, 0x4f1, 0x4f5, 0x719

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x519
Exit block: 0x4b3
Body: 0x4b3, 0x519, 0x520, 0x524, 0x72d

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x53e
Exit block: 0x4b3
Body: 0x4b3, 0x53e, 0x545, 0x549, 0x733

Function 7:
Public function signature: 0xb44eccc9
Entry block: 0x563
Exit block: 0x4b3
Body: 0x4b3, 0x563, 0x56a, 0x56e, 0x739

Function 8:
Public function signature: 0xc8e569a8
Entry block: 0x588
Exit block: 0x4b3
Body: 0x4b3, 0x588, 0x58f, 0x593, 0x73f

Function 9:
Public function signature: 0xccb07cef
Entry block: 0x5ad
Exit block: 0x5c0
Body: 0x5ad, 0x5b4, 0x5b8, 0x5c0, 0x745

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x2b0
Body: 0x88, 0x8c, 0xe5, 0xe9, 0xf6, 0xfa, 0x114, 0x141, 0x145, 0x157, 0x161, 0x18e, 0x192, 0x197, 0x1a6, 0x1a7, 0x1b4, 0x1b8, 0x1c8, 0x1c9, 0x1d8, 0x20b, 0x20f, 0x218, 0x248, 0x24c, 0x24d, 0x29f, 0x2a3, 0x2b0, 0x2b4, 0x2cd, 0x2df, 0x2e0, 0x319, 0x31d, 0x376, 0x37a, 0x387, 0x38b, 0x3bf, 0x3c3, 0x3e2, 0x3e3, 0x3e4, 0x455, 0x45a

