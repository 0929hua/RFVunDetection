args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/8/107886.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x77]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1998aeef
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x77
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1998aeef
0x1a: V12 = EQ V10 0x1998aeef
0x1b: V13 = 0x77
0x1e: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x8e]
---
0x1f DUP1
0x20 PUSH4 0x2a24f46c
0x25 EQ
0x26 PUSH2 0x8e
0x29 JUMPI
---
0x20: V14 = 0x2a24f46c
0x25: V15 = EQ 0x2a24f46c V10
0x26: V16 = 0x8e
0x29: JUMPI 0x8e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xa8]
---
0x2a DUP1
0x2b PUSH4 0x38af3eed
0x30 EQ
0x31 PUSH2 0xa8
0x34 JUMPI
---
0x2b: V17 = 0x38af3eed
0x30: V18 = EQ 0x38af3eed V10
0x31: V19 = 0xa8
0x34: JUMPI 0xa8 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xbf]
---
0x35 DUP1
0x36 PUSH4 0x3ccfd60b
0x3b EQ
0x3c PUSH2 0xbf
0x3f JUMPI
---
0x36: V20 = 0x3ccfd60b
0x3b: V21 = EQ 0x3ccfd60b V10
0x3c: V22 = 0xbf
0x3f: JUMPI 0xbf V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x148]
---
0x40 DUP1
0x41 PUSH4 0x4f245ef7
0x46 EQ
0x47 PUSH2 0x148
0x4a JUMPI
---
0x41: V23 = 0x4f245ef7
0x46: V24 = EQ 0x4f245ef7 V10
0x47: V25 = 0x148
0x4a: JUMPI 0x148 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x156]
---
0x4b DUP1
0x4c PUSH4 0x91f90157
0x51 EQ
0x52 PUSH2 0x156
0x55 JUMPI
---
0x4c: V26 = 0x91f90157
0x51: V27 = EQ 0x91f90157 V10
0x52: V28 = 0x156
0x55: JUMPI 0x156 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x16d]
---
0x56 DUP1
0x57 PUSH4 0xd074a38d
0x5c EQ
0x5d PUSH2 0x16d
0x60 JUMPI
---
0x57: V29 = 0xd074a38d
0x5c: V30 = EQ 0xd074a38d V10
0x5d: V31 = 0x16d
0x60: JUMPI 0x16d V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x17b]
---
0x61 DUP1
0x62 PUSH4 0xd57bde79
0x67 EQ
0x68 PUSH2 0x17b
0x6b JUMPI
---
0x62: V32 = 0xd57bde79
0x67: V33 = EQ 0xd57bde79 V10
0x68: V34 = 0x17b
0x6b: JUMPI 0x17b V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x0, 0x61]
Successors: [0x7b]
---
0x6c JUMPDEST
0x6d PUSH2 0x189
0x70 PUSH2 0x18b
0x73 PUSH2 0x7b
0x76 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x189
0x70: V36 = 0x18b
0x73: V37 = 0x7b
0x76: JUMP 0x7b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x189, 0x18b]
Exit stack: [V10, 0x189, 0x18b]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0xb]
Successors: [0x7b]
---
0x77 JUMPDEST
0x78 PUSH2 0x189
---
0x77: JUMPDEST 
0x78: V38 = 0x189
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V10, 0x189]

================================

Block 0x7b
[0x7b:0x89]
---
Predecessors: [0x6c, 0x77]
Successors: [0x8a, 0x278]
---
0x7b JUMPDEST
0x7c PUSH1 0x2
0x7e SLOAD
0x7f PUSH1 0x1
0x81 SLOAD
0x82 ADD
0x83 TIMESTAMP
0x84 GT
0x85 ISZERO
0x86 PUSH2 0x278
0x89 JUMPI
---
0x7b: JUMPDEST 
0x7c: V39 = 0x2
0x7e: V40 = S[0x2]
0x7f: V41 = 0x1
0x81: V42 = S[0x1]
0x82: V43 = ADD V42 V40
0x83: V44 = TIMESTAMP
0x84: V45 = GT V44 V43
0x85: V46 = ISZERO V45
0x86: V47 = 0x278
0x89: JUMPI 0x278 V46
---
Entry stack: [V10, S1, {0x189, 0x18b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x189, 0x18b}]

================================

Block 0x8a
[0x8a:0x8d]
---
Predecessors: [0x7b]
Successors: []
---
0x8a PUSH2 0x2
0x8d JUMP
---
0x8a: V48 = 0x2
0x8d: THROW 
---
Entry stack: [V10, S1, {0x189, 0x18b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x189, 0x18b}]

================================

Block 0x8e
[0x8e:0x93]
---
Predecessors: [0x1f]
Successors: [0x94]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 PUSH2 0x2
0x93 JUMPI
---
0x8e: JUMPDEST 
0x8f: V49 = CALLVALUE
0x90: V50 = 0x2
0x93: THROWI V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x94
[0x94:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x286]
---
0x94 PUSH2 0x189
0x97 PUSH1 0x2
0x99 SLOAD
0x9a PUSH1 0x1
0x9c SLOAD
0x9d ADD
0x9e TIMESTAMP
0x9f GT
0xa0 PUSH2 0x286
0xa3 JUMPI
---
0x94: V51 = 0x189
0x97: V52 = 0x2
0x99: V53 = S[0x2]
0x9a: V54 = 0x1
0x9c: V55 = S[0x1]
0x9d: V56 = ADD V55 V53
0x9e: V57 = TIMESTAMP
0x9f: V58 = GT V57 V56
0xa0: V59 = 0x286
0xa3: JUMPI 0x286 V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V10, 0x189]

================================

Block 0xa4
[0xa4:0xa7]
---
Predecessors: [0x94]
Successors: []
---
0xa4 PUSH2 0x2
0xa7 JUMP
---
0xa4: V60 = 0x2
0xa7: THROW 
---
Entry stack: [V10, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x189]

================================

Block 0xa8
[0xa8:0xad]
---
Predecessors: [0x2a]
Successors: [0xae]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa PUSH2 0x2
0xad JUMPI
---
0xa8: JUMPDEST 
0xa9: V61 = CALLVALUE
0xaa: V62 = 0x2
0xad: THROWI V61
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xae
[0xae:0xbe]
---
Predecessors: [0xa8]
Successors: [0x18d]
---
0xae PUSH2 0x18d
0xb1 PUSH1 0x0
0xb3 SLOAD
0xb4 PUSH1 0x1
0xb6 PUSH1 0xa0
0xb8 PUSH1 0x2
0xba EXP
0xbb SUB
0xbc AND
0xbd DUP2
0xbe JUMP
---
0xae: V63 = 0x18d
0xb1: V64 = 0x0
0xb3: V65 = S[0x0]
0xb4: V66 = 0x1
0xb6: V67 = 0xa0
0xb8: V68 = 0x2
0xba: V69 = EXP 0x2 0xa0
0xbb: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xbe: JUMP 0x18d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18d, V71]
Exit stack: [V10, 0x18d, V71]

================================

Block 0xbf
[0xbf:0xc4]
---
Predecessors: [0x35]
Successors: [0xc5]
---
0xbf JUMPDEST
0xc0 CALLVALUE
0xc1 PUSH2 0x2
0xc4 JUMPI
---
0xbf: JUMPDEST 
0xc0: V72 = CALLVALUE
0xc1: V73 = 0x2
0xc4: THROWI V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc5
[0xc5:0xe8]
---
Predecessors: [0xbf]
Successors: [0xe9, 0x33f]
---
0xc5 PUSH2 0x1aa
0xc8 CALLER
0xc9 PUSH1 0x1
0xcb PUSH1 0xa0
0xcd PUSH1 0x2
0xcf EXP
0xd0 SUB
0xd1 AND
0xd2 PUSH1 0x0
0xd4 SWAP1
0xd5 DUP2
0xd6 MSTORE
0xd7 PUSH1 0x5
0xd9 PUSH1 0x20
0xdb MSTORE
0xdc PUSH1 0x40
0xde DUP2
0xdf SHA3
0xe0 SLOAD
0xe1 DUP2
0xe2 DUP2
0xe3 GT
0xe4 ISZERO
0xe5 PUSH2 0x33f
0xe8 JUMPI
---
0xc5: V74 = 0x1aa
0xc8: V75 = CALLER
0xc9: V76 = 0x1
0xcb: V77 = 0xa0
0xcd: V78 = 0x2
0xcf: V79 = EXP 0x2 0xa0
0xd0: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xd2: V82 = 0x0
0xd6: M[0x0] = V81
0xd7: V83 = 0x5
0xd9: V84 = 0x20
0xdb: M[0x20] = 0x5
0xdc: V85 = 0x40
0xdf: V86 = SHA3 0x0 0x40
0xe0: V87 = S[V86]
0xe3: V88 = GT V87 0x0
0xe4: V89 = ISZERO V88
0xe5: V90 = 0x33f
0xe8: JUMPI 0x33f V89
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1aa, 0x0, V87]
Exit stack: [V10, 0x1aa, 0x0, V87]

================================

Block 0xe9
[0xe9:0x118]
---
Predecessors: [0xc5]
Successors: [0x119, 0x33f]
---
0xe9 PUSH1 0x40
0xeb DUP1
0xec DUP4
0xed SHA3
0xee DUP4
0xef SWAP1
0xf0 SSTORE
0xf1 MLOAD
0xf2 CALLER
0xf3 PUSH1 0x1
0xf5 PUSH1 0xa0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa SUB
0xfb AND
0xfc SWAP1
0xfd DUP3
0xfe ISZERO
0xff PUSH2 0x8fc
0x102 MUL
0x103 SWAP1
0x104 DUP4
0x105 SWAP1
0x106 DUP6
0x107 DUP2
0x108 DUP2
0x109 DUP2
0x10a DUP6
0x10b DUP9
0x10c DUP9
0x10d CALL
0x10e SWAP4
0x10f POP
0x110 POP
0x111 POP
0x112 POP
0x113 ISZERO
0x114 ISZERO
0x115 PUSH2 0x33f
0x118 JUMPI
---
0xe9: V91 = 0x40
0xed: V92 = SHA3 0x0 0x40
0xf0: S[V92] = 0x0
0xf1: V93 = M[0x40]
0xf2: V94 = CALLER
0xf3: V95 = 0x1
0xf5: V96 = 0xa0
0xf7: V97 = 0x2
0xf9: V98 = EXP 0x2 0xa0
0xfa: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0xfe: V101 = ISZERO V87
0xff: V102 = 0x8fc
0x102: V103 = MUL 0x8fc V101
0x10d: V104 = CALL V103 V100 V87 V93 0x0 V93 0x0
0x113: V105 = ISZERO V104
0x114: V106 = ISZERO V105
0x115: V107 = 0x33f
0x118: JUMPI 0x33f V106
---
Entry stack: [V10, 0x1aa, 0x0, V87]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1aa, 0x0, V87]

================================

Block 0x119
[0x119:0x147]
---
Predecessors: [0xe9]
Successors: [0x344]
---
0x119 DUP1
0x11a PUSH1 0x5
0x11c PUSH1 0x0
0x11e POP
0x11f PUSH1 0x0
0x121 CALLER
0x122 PUSH1 0x1
0x124 PUSH1 0xa0
0x126 PUSH1 0x2
0x128 EXP
0x129 SUB
0x12a AND
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP1
0x131 DUP2
0x132 MSTORE
0x133 PUSH1 0x20
0x135 ADD
0x136 PUSH1 0x0
0x138 SHA3
0x139 PUSH1 0x0
0x13b POP
0x13c DUP2
0x13d SWAP1
0x13e SSTORE
0x13f POP
0x140 PUSH1 0x0
0x142 SWAP2
0x143 POP
0x144 PUSH2 0x344
0x147 JUMP
---
0x11a: V108 = 0x5
0x11c: V109 = 0x0
0x11f: V110 = 0x0
0x121: V111 = CALLER
0x122: V112 = 0x1
0x124: V113 = 0xa0
0x126: V114 = 0x2
0x128: V115 = EXP 0x2 0xa0
0x129: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x12c: M[0x0] = V117
0x12d: V118 = 0x20
0x12f: V119 = ADD 0x20 0x0
0x132: M[0x20] = 0x5
0x133: V120 = 0x20
0x135: V121 = ADD 0x20 0x20
0x136: V122 = 0x0
0x138: V123 = SHA3 0x0 0x40
0x139: V124 = 0x0
0x13e: S[V123] = V87
0x140: V125 = 0x0
0x144: V126 = 0x344
0x147: JUMP 0x344
---
Entry stack: [V10, 0x1aa, 0x0, V87]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x1aa, 0x0, V87]

================================

Block 0x148
[0x148:0x14d]
---
Predecessors: [0x40]
Successors: [0x14e]
---
0x148 JUMPDEST
0x149 CALLVALUE
0x14a PUSH2 0x2
0x14d JUMPI
---
0x148: JUMPDEST 
0x149: V127 = CALLVALUE
0x14a: V128 = 0x2
0x14d: THROWI V127
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x148]
Successors: [0x1be]
---
0x14e PUSH2 0x1be
0x151 PUSH1 0x1
0x153 SLOAD
0x154 DUP2
0x155 JUMP
---
0x14e: V129 = 0x1be
0x151: V130 = 0x1
0x153: V131 = S[0x1]
0x155: JUMP 0x1be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1be, V131]
Exit stack: [V10, 0x1be, V131]

================================

Block 0x156
[0x156:0x15b]
---
Predecessors: [0x4b]
Successors: [0x15c]
---
0x156 JUMPDEST
0x157 CALLVALUE
0x158 PUSH2 0x2
0x15b JUMPI
---
0x156: JUMPDEST 
0x157: V132 = CALLVALUE
0x158: V133 = 0x2
0x15b: THROWI V132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15c
[0x15c:0x16c]
---
Predecessors: [0x156]
Successors: [0x18d]
---
0x15c PUSH2 0x18d
0x15f PUSH1 0x3
0x161 SLOAD
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a AND
0x16b DUP2
0x16c JUMP
---
0x15c: V134 = 0x18d
0x15f: V135 = 0x3
0x161: V136 = S[0x3]
0x162: V137 = 0x1
0x164: V138 = 0xa0
0x166: V139 = 0x2
0x168: V140 = EXP 0x2 0xa0
0x169: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x16c: JUMP 0x18d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18d, V142]
Exit stack: [V10, 0x18d, V142]

================================

Block 0x16d
[0x16d:0x172]
---
Predecessors: [0x56]
Successors: [0x173]
---
0x16d JUMPDEST
0x16e CALLVALUE
0x16f PUSH2 0x2
0x172 JUMPI
---
0x16d: JUMPDEST 
0x16e: V143 = CALLVALUE
0x16f: V144 = 0x2
0x172: THROWI V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x16d]
Successors: [0x1be]
---
0x173 PUSH2 0x1be
0x176 PUSH1 0x2
0x178 SLOAD
0x179 DUP2
0x17a JUMP
---
0x173: V145 = 0x1be
0x176: V146 = 0x2
0x178: V147 = S[0x2]
0x17a: JUMP 0x1be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1be, V147]
Exit stack: [V10, 0x1be, V147]

================================

Block 0x17b
[0x17b:0x180]
---
Predecessors: [0x61]
Successors: [0x181]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d PUSH2 0x2
0x180 JUMPI
---
0x17b: JUMPDEST 
0x17c: V148 = CALLVALUE
0x17d: V149 = 0x2
0x180: THROWI V148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x181
[0x181:0x188]
---
Predecessors: [0x17b]
Successors: [0x1be]
---
0x181 PUSH2 0x1be
0x184 PUSH1 0x4
0x186 SLOAD
0x187 DUP2
0x188 JUMP
---
0x181: V150 = 0x1be
0x184: V151 = 0x4
0x186: V152 = S[0x4]
0x188: JUMP 0x1be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1be, V152]
Exit stack: [V10, 0x1be, V152]

================================

Block 0x189
[0x189:0x18a]
---
Predecessors: [0x18b, 0x208]
Successors: []
---
0x189 JUMPDEST
0x18a STOP
---
0x189: JUMPDEST 
0x18a: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x18b
[0x18b:0x18c]
---
Predecessors: [0x208, 0x296]
Successors: [0x189]
---
0x18b JUMPDEST
0x18c JUMP
---
0x18b: JUMPDEST 
0x18c: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x18d
[0x18d:0x1a9]
---
Predecessors: [0xae, 0x15c]
Successors: []
---
0x18d JUMPDEST
0x18e PUSH1 0x40
0x190 DUP1
0x191 MLOAD
0x192 PUSH1 0x1
0x194 PUSH1 0xa0
0x196 PUSH1 0x2
0x198 EXP
0x199 SUB
0x19a SWAP3
0x19b SWAP1
0x19c SWAP3
0x19d AND
0x19e DUP3
0x19f MSTORE
0x1a0 MLOAD
0x1a1 SWAP1
0x1a2 DUP2
0x1a3 SWAP1
0x1a4 SUB
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 SWAP1
0x1a9 RETURN
---
0x18d: JUMPDEST 
0x18e: V153 = 0x40
0x191: V154 = M[0x40]
0x192: V155 = 0x1
0x194: V156 = 0xa0
0x196: V157 = 0x2
0x198: V158 = EXP 0x2 0xa0
0x199: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19d: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x19f: M[V154] = V160
0x1a0: V161 = M[0x40]
0x1a4: V162 = SUB V154 V161
0x1a5: V163 = 0x20
0x1a7: V164 = ADD 0x20 V162
0x1a9: RETURN V161 V164
---
Entry stack: [V10, 0x18d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x18d]

================================

Block 0x1aa
[0x1aa:0x1bd]
---
Predecessors: [0x344]
Successors: []
---
0x1aa JUMPDEST
0x1ab PUSH1 0x40
0x1ad DUP1
0x1ae MLOAD
0x1af SWAP2
0x1b0 ISZERO
0x1b1 ISZERO
0x1b2 DUP3
0x1b3 MSTORE
0x1b4 MLOAD
0x1b5 SWAP1
0x1b6 DUP2
0x1b7 SWAP1
0x1b8 SUB
0x1b9 PUSH1 0x20
0x1bb ADD
0x1bc SWAP1
0x1bd RETURN
---
0x1aa: JUMPDEST 
0x1ab: V165 = 0x40
0x1ae: V166 = M[0x40]
0x1b0: V167 = ISZERO {0x0, 0x1}
0x1b1: V168 = ISZERO V167
0x1b3: M[V166] = V168
0x1b4: V169 = M[0x40]
0x1b8: V170 = SUB V166 V169
0x1b9: V171 = 0x20
0x1bb: V172 = ADD 0x20 V170
0x1bd: RETURN V169 V172
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1be
[0x1be:0x1cf]
---
Predecessors: [0x14e, 0x173, 0x181]
Successors: []
---
0x1be JUMPDEST
0x1bf PUSH1 0x40
0x1c1 DUP1
0x1c2 MLOAD
0x1c3 SWAP2
0x1c4 DUP3
0x1c5 MSTORE
0x1c6 MLOAD
0x1c7 SWAP1
0x1c8 DUP2
0x1c9 SWAP1
0x1ca SUB
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce SWAP1
0x1cf RETURN
---
0x1be: JUMPDEST 
0x1bf: V173 = 0x40
0x1c2: V174 = M[0x40]
0x1c5: M[V174] = S0
0x1c6: V175 = M[0x40]
0x1ca: V176 = SUB V174 V175
0x1cb: V177 = 0x20
0x1cd: V178 = ADD 0x20 V176
0x1cf: RETURN V175 V178
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1be]

================================

Block 0x1d0
[0x1d0:0x1e3]
---
Predecessors: [0x278]
Successors: [0x1e4, 0x208]
---
0x1d0 JUMPDEST
0x1d1 PUSH1 0x3
0x1d3 SLOAD
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0xa0
0x1d8 PUSH1 0x2
0x1da EXP
0x1db SUB
0x1dc AND
0x1dd PUSH1 0x0
0x1df EQ
0x1e0 PUSH2 0x208
0x1e3 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V179 = 0x3
0x1d3: V180 = S[0x3]
0x1d4: V181 = 0x1
0x1d6: V182 = 0xa0
0x1d8: V183 = 0x2
0x1da: V184 = EXP 0x2 0xa0
0x1db: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dc: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x1dd: V187 = 0x0
0x1df: V188 = EQ 0x0 V186
0x1e0: V189 = 0x208
0x1e3: JUMPI 0x208 V188
---
Entry stack: [V10, S1, {0x189, 0x18b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x189, 0x18b}]

================================

Block 0x1e4
[0x1e4:0x207]
---
Predecessors: [0x1d0]
Successors: [0x208]
---
0x1e4 PUSH1 0x4
0x1e6 SLOAD
0x1e7 PUSH1 0x3
0x1e9 SLOAD
0x1ea PUSH1 0x1
0x1ec PUSH1 0xa0
0x1ee PUSH1 0x2
0x1f0 EXP
0x1f1 SUB
0x1f2 AND
0x1f3 PUSH1 0x0
0x1f5 SWAP1
0x1f6 DUP2
0x1f7 MSTORE
0x1f8 PUSH1 0x5
0x1fa PUSH1 0x20
0x1fc MSTORE
0x1fd PUSH1 0x40
0x1ff SWAP1
0x200 SHA3
0x201 DUP1
0x202 SLOAD
0x203 SWAP1
0x204 SWAP2
0x205 ADD
0x206 SWAP1
0x207 SSTORE
---
0x1e4: V190 = 0x4
0x1e6: V191 = S[0x4]
0x1e7: V192 = 0x3
0x1e9: V193 = S[0x3]
0x1ea: V194 = 0x1
0x1ec: V195 = 0xa0
0x1ee: V196 = 0x2
0x1f0: V197 = EXP 0x2 0xa0
0x1f1: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x1f3: V200 = 0x0
0x1f7: M[0x0] = V199
0x1f8: V201 = 0x5
0x1fa: V202 = 0x20
0x1fc: M[0x20] = 0x5
0x1fd: V203 = 0x40
0x200: V204 = SHA3 0x0 0x40
0x202: V205 = S[V204]
0x205: V206 = ADD V191 V205
0x207: S[V204] = V206
---
Entry stack: [V10, S1, {0x189, 0x18b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x189, 0x18b}]

================================

Block 0x208
[0x208:0x277]
---
Predecessors: [0x1d0, 0x1e4]
Successors: [0x189, 0x18b]
---
0x208 JUMPDEST
0x209 PUSH1 0x3
0x20b DUP1
0x20c SLOAD
0x20d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x222 NOT
0x223 AND
0x224 CALLER
0x225 SWAP1
0x226 DUP2
0x227 OR
0x228 SWAP1
0x229 SWAP2
0x22a SSTORE
0x22b CALLVALUE
0x22c PUSH1 0x4
0x22e DUP2
0x22f SWAP1
0x230 SSTORE
0x231 PUSH1 0x40
0x233 DUP1
0x234 MLOAD
0x235 PUSH1 0x1
0x237 PUSH1 0xa0
0x239 PUSH1 0x2
0x23b EXP
0x23c SUB
0x23d SWAP4
0x23e SWAP1
0x23f SWAP4
0x240 AND
0x241 DUP4
0x242 MSTORE
0x243 PUSH1 0x20
0x245 DUP4
0x246 ADD
0x247 SWAP2
0x248 SWAP1
0x249 SWAP2
0x24a MSTORE
0x24b DUP1
0x24c MLOAD
0x24d PUSH32 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x26e SWAP3
0x26f DUP2
0x270 SWAP1
0x271 SUB
0x272 SWAP1
0x273 SWAP2
0x274 ADD
0x275 SWAP1
0x276 LOG1
0x277 JUMP
---
0x208: JUMPDEST 
0x209: V207 = 0x3
0x20c: V208 = S[0x3]
0x20d: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x222: V210 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x223: V211 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V208
0x224: V212 = CALLER
0x227: V213 = OR V212 V211
0x22a: S[0x3] = V213
0x22b: V214 = CALLVALUE
0x22c: V215 = 0x4
0x230: S[0x4] = V214
0x231: V216 = 0x40
0x234: V217 = M[0x40]
0x235: V218 = 0x1
0x237: V219 = 0xa0
0x239: V220 = 0x2
0x23b: V221 = EXP 0x2 0xa0
0x23c: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x240: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x242: M[V217] = V223
0x243: V224 = 0x20
0x246: V225 = ADD V217 0x20
0x24a: M[V225] = V214
0x24c: V226 = M[0x40]
0x24d: V227 = 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x271: V228 = SUB V217 V226
0x274: V229 = ADD 0x40 V228
0x276: LOG V226 V229 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x277: JUMP {0x189, 0x18b}
---
Entry stack: [V10, S1, {0x189, 0x18b}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x278
[0x278:0x281]
---
Predecessors: [0x7b]
Successors: [0x1d0, 0x282]
---
0x278 JUMPDEST
0x279 PUSH1 0x4
0x27b SLOAD
0x27c CALLVALUE
0x27d GT
0x27e PUSH2 0x1d0
0x281 JUMPI
---
0x278: JUMPDEST 
0x279: V230 = 0x4
0x27b: V231 = S[0x4]
0x27c: V232 = CALLVALUE
0x27d: V233 = GT V232 V231
0x27e: V234 = 0x1d0
0x281: JUMPI 0x1d0 V233
---
Entry stack: [V10, S1, {0x189, 0x18b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x189, 0x18b}]

================================

Block 0x282
[0x282:0x285]
---
Predecessors: [0x278]
Successors: []
---
0x282 PUSH2 0x2
0x285 JUMP
---
0x282: V235 = 0x2
0x285: THROW 
---
Entry stack: [V10, S1, {0x189, 0x18b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x189, 0x18b}]

================================

Block 0x286
[0x286:0x291]
---
Predecessors: [0x94]
Successors: [0x292, 0x296]
---
0x286 JUMPDEST
0x287 PUSH1 0x6
0x289 SLOAD
0x28a PUSH1 0xff
0x28c AND
0x28d ISZERO
0x28e PUSH2 0x296
0x291 JUMPI
---
0x286: JUMPDEST 
0x287: V236 = 0x6
0x289: V237 = S[0x6]
0x28a: V238 = 0xff
0x28c: V239 = AND 0xff V237
0x28d: V240 = ISZERO V239
0x28e: V241 = 0x296
0x291: JUMPI 0x296 V240
---
Entry stack: [V10, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x189]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x286]
Successors: []
---
0x292 PUSH2 0x2
0x295 JUMP
---
0x292: V242 = 0x2
0x295: THROW 
---
Entry stack: [V10, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x189]

================================

Block 0x296
[0x296:0x33a]
---
Predecessors: [0x286]
Successors: [0x18b, 0x33b]
---
0x296 JUMPDEST
0x297 PUSH1 0x6
0x299 DUP1
0x29a SLOAD
0x29b PUSH1 0xff
0x29d NOT
0x29e AND
0x29f PUSH1 0x1
0x2a1 OR
0x2a2 SWAP1
0x2a3 SSTORE
0x2a4 PUSH1 0x4
0x2a6 SLOAD
0x2a7 PUSH1 0x3
0x2a9 SLOAD
0x2aa PUSH1 0x40
0x2ac DUP1
0x2ad MLOAD
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 SWAP1
0x2b7 SWAP3
0x2b8 AND
0x2b9 DUP3
0x2ba MSTORE
0x2bb PUSH1 0x20
0x2bd DUP3
0x2be ADD
0x2bf SWAP3
0x2c0 SWAP1
0x2c1 SWAP3
0x2c2 MSTORE
0x2c3 DUP2
0x2c4 MLOAD
0x2c5 PUSH32 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x2e6 SWAP3
0x2e7 SWAP2
0x2e8 DUP2
0x2e9 SWAP1
0x2ea SUB
0x2eb SWAP1
0x2ec SWAP2
0x2ed ADD
0x2ee SWAP1
0x2ef LOG1
0x2f0 PUSH1 0x0
0x2f2 PUSH1 0x0
0x2f4 SWAP1
0x2f5 SLOAD
0x2f6 SWAP1
0x2f7 PUSH2 0x100
0x2fa EXP
0x2fb SWAP1
0x2fc DIV
0x2fd PUSH1 0x1
0x2ff PUSH1 0xa0
0x301 PUSH1 0x2
0x303 EXP
0x304 SUB
0x305 AND
0x306 PUSH1 0x1
0x308 PUSH1 0xa0
0x30a PUSH1 0x2
0x30c EXP
0x30d SUB
0x30e AND
0x30f PUSH2 0x8fc
0x312 PUSH1 0x4
0x314 PUSH1 0x0
0x316 POP
0x317 SLOAD
0x318 SWAP1
0x319 DUP2
0x31a ISZERO
0x31b MUL
0x31c SWAP1
0x31d PUSH1 0x40
0x31f MLOAD
0x320 DUP1
0x321 SWAP1
0x322 POP
0x323 PUSH1 0x0
0x325 PUSH1 0x40
0x327 MLOAD
0x328 DUP1
0x329 DUP4
0x32a SUB
0x32b DUP2
0x32c DUP6
0x32d DUP9
0x32e DUP9
0x32f CALL
0x330 SWAP4
0x331 POP
0x332 POP
0x333 POP
0x334 POP
0x335 ISZERO
0x336 ISZERO
0x337 PUSH2 0x18b
0x33a JUMPI
---
0x296: JUMPDEST 
0x297: V243 = 0x6
0x29a: V244 = S[0x6]
0x29b: V245 = 0xff
0x29d: V246 = NOT 0xff
0x29e: V247 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V244
0x29f: V248 = 0x1
0x2a1: V249 = OR 0x1 V247
0x2a3: S[0x6] = V249
0x2a4: V250 = 0x4
0x2a6: V251 = S[0x4]
0x2a7: V252 = 0x3
0x2a9: V253 = S[0x3]
0x2aa: V254 = 0x40
0x2ad: V255 = M[0x40]
0x2ae: V256 = 0x1
0x2b0: V257 = 0xa0
0x2b2: V258 = 0x2
0x2b4: V259 = EXP 0x2 0xa0
0x2b5: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b8: V261 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: M[V255] = V261
0x2bb: V262 = 0x20
0x2be: V263 = ADD V255 0x20
0x2c2: M[V263] = V251
0x2c4: V264 = M[0x40]
0x2c5: V265 = 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x2ea: V266 = SUB V255 V264
0x2ed: V267 = ADD 0x40 V266
0x2ef: LOG V264 V267 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x2f0: V268 = 0x0
0x2f2: V269 = 0x0
0x2f5: V270 = S[0x0]
0x2f7: V271 = 0x100
0x2fa: V272 = EXP 0x100 0x0
0x2fc: V273 = DIV V270 0x1
0x2fd: V274 = 0x1
0x2ff: V275 = 0xa0
0x301: V276 = 0x2
0x303: V277 = EXP 0x2 0xa0
0x304: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x305: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x306: V280 = 0x1
0x308: V281 = 0xa0
0x30a: V282 = 0x2
0x30c: V283 = EXP 0x2 0xa0
0x30d: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30e: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x30f: V286 = 0x8fc
0x312: V287 = 0x4
0x314: V288 = 0x0
0x317: V289 = S[0x4]
0x31a: V290 = ISZERO V289
0x31b: V291 = MUL V290 0x8fc
0x31d: V292 = 0x40
0x31f: V293 = M[0x40]
0x323: V294 = 0x0
0x325: V295 = 0x40
0x327: V296 = M[0x40]
0x32a: V297 = SUB V293 V296
0x32f: V298 = CALL V291 V285 V289 V296 V297 V296 0x0
0x335: V299 = ISZERO V298
0x336: V300 = ISZERO V299
0x337: V301 = 0x18b
0x33a: JUMPI 0x18b V300
---
Entry stack: [V10, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x189]

================================

Block 0x33b
[0x33b:0x33e]
---
Predecessors: [0x296]
Successors: []
---
0x33b PUSH2 0x2
0x33e JUMP
---
0x33b: V302 = 0x2
0x33e: THROW 
---
Entry stack: [V10, 0x189]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x189]

================================

Block 0x33f
[0x33f:0x343]
---
Predecessors: [0xc5, 0xe9]
Successors: [0x344]
---
0x33f JUMPDEST
0x340 PUSH1 0x1
0x342 SWAP2
0x343 POP
---
0x33f: JUMPDEST 
0x340: V303 = 0x1
---
Entry stack: [V10, 0x1aa, 0x0, V87]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V10, 0x1aa, 0x1, V87]

================================

Block 0x344
[0x344:0x347]
---
Predecessors: [0x119, 0x33f]
Successors: [0x1aa]
---
0x344 JUMPDEST
0x345 POP
0x346 SWAP1
0x347 JUMP
---
0x344: JUMPDEST 
0x347: JUMP 0x1aa
---
Entry stack: [V10, 0x1aa, {0x0, 0x1}, V87]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Function 0:
Public function signature: 0x1998aeef
Entry block: 0x77
Exit block: 0x189
Body: 0x77, 0x7b, 0x8a, 0x189, 0x18b, 0x1d0, 0x1e4, 0x208, 0x278, 0x282

Function 1:
Public function signature: 0x2a24f46c
Entry block: 0x8e
Exit block: 0x189
Body: 0x8e, 0x94, 0xa4, 0x189, 0x18b, 0x286, 0x292, 0x296, 0x33b

Function 2:
Public function signature: 0x38af3eed
Entry block: 0xa8
Exit block: 0x18d
Body: 0xa8, 0xae, 0x18d

Function 3:
Public function signature: 0x3ccfd60b
Entry block: 0xbf
Exit block: 0x1aa
Body: 0xbf, 0xc5, 0xe9, 0x119, 0x1aa, 0x33f, 0x344

Function 4:
Public function signature: 0x4f245ef7
Entry block: 0x148
Exit block: 0x1be
Body: 0x148, 0x14e, 0x1be

Function 5:
Public function signature: 0x91f90157
Entry block: 0x156
Exit block: 0x18d
Body: 0x156, 0x15c, 0x18d

Function 6:
Public function signature: 0xd074a38d
Entry block: 0x16d
Exit block: 0x1be
Body: 0x16d, 0x173, 0x1be

Function 7:
Public function signature: 0xd57bde79
Entry block: 0x17b
Exit block: 0x1be
Body: 0x17b, 0x181, 0x1be

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x189
Body: 0x6c, 0x7b, 0x8a, 0x189, 0x18b, 0x1d0, 0x1e4, 0x208, 0x278, 0x282

