args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/9/108848.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8d
0xa: JUMPI 0x8d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xf5]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1cb3b20
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xf5
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1cb3b20
0x1a: V12 = EQ V10 0x1cb3b20
0x1b: V13 = 0xf5
0x1e: JUMPI 0xf5 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x179]
---
0x1f DUP1
0x20 PUSH4 0x17a5410b
0x25 EQ
0x26 PUSH2 0x179
0x29 JUMPI
---
0x20: V14 = 0x17a5410b
0x25: V15 = EQ 0x17a5410b V10
0x26: V16 = 0x179
0x29: JUMPI 0x179 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x182]
---
0x2a DUP1
0x2b PUSH4 0x1998aeef
0x30 EQ
0x31 PUSH2 0x182
0x34 JUMPI
---
0x2b: V17 = 0x1998aeef
0x30: V18 = EQ 0x1998aeef V10
0x31: V19 = 0x182
0x34: JUMPI 0x182 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x18b]
---
0x35 DUP1
0x36 PUSH4 0x38af3eed
0x3b EQ
0x3c PUSH2 0x18b
0x3f JUMPI
---
0x36: V20 = 0x38af3eed
0x3b: V21 = EQ 0x38af3eed V10
0x3c: V22 = 0x18b
0x3f: JUMPI 0x18b V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x19d]
---
0x40 DUP1
0x41 PUSH4 0x4a707247
0x46 EQ
0x47 PUSH2 0x19d
0x4a JUMPI
---
0x41: V23 = 0x4a707247
0x46: V24 = EQ 0x4a707247 V10
0x47: V25 = 0x19d
0x4a: JUMPI 0x19d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1a6]
---
0x4b DUP1
0x4c PUSH4 0x6e66f6e9
0x51 EQ
0x52 PUSH2 0x1a6
0x55 JUMPI
---
0x4c: V26 = 0x6e66f6e9
0x51: V27 = EQ 0x6e66f6e9 V10
0x52: V28 = 0x1a6
0x55: JUMPI 0x1a6 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1b8]
---
0x56 DUP1
0x57 PUSH4 0x7121809a
0x5c EQ
0x5d PUSH2 0x1b8
0x60 JUMPI
---
0x57: V29 = 0x7121809a
0x5c: V30 = EQ 0x7121809a V10
0x5d: V31 = 0x1b8
0x60: JUMPI 0x1b8 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1c1]
---
0x61 DUP1
0x62 PUSH4 0x7a3a0e84
0x67 EQ
0x68 PUSH2 0x1c1
0x6b JUMPI
---
0x62: V32 = 0x7a3a0e84
0x67: V33 = EQ 0x7a3a0e84 V10
0x68: V34 = 0x1c1
0x6b: JUMPI 0x1c1 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1ca]
---
0x6c DUP1
0x6d PUSH4 0x7b3e5e7b
0x72 EQ
0x73 PUSH2 0x1ca
0x76 JUMPI
---
0x6d: V35 = 0x7b3e5e7b
0x72: V36 = EQ 0x7b3e5e7b V10
0x73: V37 = 0x1ca
0x76: JUMPI 0x1ca V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1d3]
---
0x77 DUP1
0x78 PUSH4 0x7b4fd96e
0x7d EQ
0x7e PUSH2 0x1d3
0x81 JUMPI
---
0x78: V38 = 0x7b4fd96e
0x7d: V39 = EQ 0x7b4fd96e V10
0x7e: V40 = 0x1d3
0x81: JUMPI 0x1d3 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1dc]
---
0x82 DUP1
0x83 PUSH4 0xdc0d3dff
0x88 EQ
0x89 PUSH2 0x1dc
0x8c JUMPI
---
0x83: V41 = 0xdc0d3dff
0x88: V42 = EQ 0xdc0d3dff V10
0x89: V43 = 0x1dc
0x8c: JUMPI 0x1dc V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0xac]
---
Predecessors: [0x0, 0x82]
Successors: [0xad, 0x252]
---
0x8d JUMPDEST
0x8e PUSH2 0x250
0x91 PUSH1 0x9
0x93 DUP1
0x94 SLOAD
0x95 PUSH1 0x1
0x97 DUP2
0x98 ADD
0x99 DUP1
0x9a DUP4
0x9b SSTORE
0x9c PUSH1 0x0
0x9e SWAP3
0x9f SWAP2
0xa0 DUP3
0xa1 SWAP1
0xa2 DUP3
0xa3 SWAP1
0xa4 DUP1
0xa5 ISZERO
0xa6 DUP3
0xa7 SWAP1
0xa8 GT
0xa9 PUSH2 0x252
0xac JUMPI
---
0x8d: JUMPDEST 
0x8e: V44 = 0x250
0x91: V45 = 0x9
0x94: V46 = S[0x9]
0x95: V47 = 0x1
0x98: V48 = ADD V46 0x1
0x9b: S[0x9] = V48
0x9c: V49 = 0x0
0xa5: V50 = ISZERO V46
0xa8: V51 = GT V50 V48
0xa9: V52 = 0x252
0xac: JUMPI 0x252 V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x250, 0x0, 0x9, V48, 0x9, V48, V46]
Exit stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, V46]

================================

Block 0xad
[0xad:0xc6]
---
Predecessors: [0x8d]
Successors: [0xc7]
---
0xad PUSH1 0x2
0xaf MUL
0xb0 DUP2
0xb1 PUSH1 0x2
0xb3 MUL
0xb4 DUP4
0xb5 PUSH1 0x0
0xb7 MSTORE
0xb8 PUSH1 0x20
0xba PUSH1 0x0
0xbc SHA3
0xbd SWAP2
0xbe DUP3
0xbf ADD
0xc0 SWAP2
0xc1 ADD
0xc2 PUSH2 0x252
0xc5 SWAP2
0xc6 SWAP1
---
0xad: V53 = 0x2
0xaf: V54 = MUL 0x2 V46
0xb1: V55 = 0x2
0xb3: V56 = MUL 0x2 V48
0xb5: V57 = 0x0
0xb7: M[0x0] = 0x9
0xb8: V58 = 0x20
0xba: V59 = 0x0
0xbc: V60 = SHA3 0x0 0x20
0xbf: V61 = ADD V60 V54
0xc1: V62 = ADD V60 V56
0xc2: V63 = 0x252
---
Entry stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, V46]
Stack pops: 3
Stack additions: [S2, S1, 0x252, V61, V62]
Exit stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, 0x252, V61, V62]

================================

Block 0xc7
[0xc7:0xcf]
---
Predecessors: [0xad, 0xd0]
Successors: [0xd0, 0x3bc]
---
0xc7 JUMPDEST
0xc8 DUP1
0xc9 DUP3
0xca GT
0xcb ISZERO
0xcc PUSH2 0x3bc
0xcf JUMPI
---
0xc7: JUMPDEST 
0xca: V64 = GT V61 S0
0xcb: V65 = ISZERO V64
0xcc: V66 = 0x3bc
0xcf: JUMPI 0x3bc V65
---
Entry stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, 0x252, V61, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, 0x252, V61, S0]

================================

Block 0xd0
[0xd0:0xf4]
---
Predecessors: [0xc7]
Successors: [0xc7]
---
0xd0 DUP1
0xd1 SLOAD
0xd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7 NOT
0xe8 AND
0xe9 DUP2
0xea SSTORE
0xeb PUSH1 0x1
0xed ADD
0xee DUP8
0xef DUP2
0xf0 SSTORE
0xf1 PUSH2 0xc7
0xf4 JUMP
---
0xd1: V67 = S[S0]
0xd2: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V69 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe8: V70 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V67
0xea: S[S0] = V70
0xeb: V71 = 0x1
0xed: V72 = ADD 0x1 S0
0xf0: S[V72] = 0x0
0xf1: V73 = 0xc7
0xf4: JUMP 0xc7
---
Entry stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, 0x252, V61, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, V72]
Exit stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, 0x252, V61, V72]

================================

Block 0xf5
[0xf5:0x101]
---
Predecessors: [0xb]
Successors: [0x102, 0x3ea]
---
0xf5 JUMPDEST
0xf6 PUSH2 0x250
0xf9 PUSH1 0x3
0xfb SLOAD
0xfc TIMESTAMP
0xfd LT
0xfe PUSH2 0x3ea
0x101 JUMPI
---
0xf5: JUMPDEST 
0xf6: V74 = 0x250
0xf9: V75 = 0x3
0xfb: V76 = S[0x3]
0xfc: V77 = TIMESTAMP
0xfd: V78 = LT V77 V76
0xfe: V79 = 0x3ea
0x101: JUMPI 0x3ea V78
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x250]
Exit stack: [V10, 0x250]

================================

Block 0x102
[0x102:0x10d]
---
Predecessors: [0xf5]
Successors: [0x10e, 0x16b]
---
0x102 PUSH1 0x2
0x104 SLOAD
0x105 PUSH1 0x1
0x107 SLOAD
0x108 SWAP1
0x109 LT
0x10a PUSH2 0x16b
0x10d JUMPI
---
0x102: V80 = 0x2
0x104: V81 = S[0x2]
0x105: V82 = 0x1
0x107: V83 = S[0x1]
0x109: V84 = LT V81 V83
0x10a: V85 = 0x16b
0x10d: JUMPI 0x16b V84
---
Entry stack: [V10, 0x250]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x250]

================================

Block 0x10e
[0x10e:0x16a]
---
Predecessors: [0x102]
Successors: [0x16b]
---
0x10e PUSH1 0x2
0x110 SLOAD
0x111 PUSH1 0x0
0x113 DUP1
0x114 SLOAD
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d AND
0x11e SWAP2
0x11f PUSH1 0x60
0x121 DUP3
0x122 DUP2
0x123 DUP2
0x124 DUP2
0x125 DUP6
0x126 DUP9
0x127 DUP4
0x128 CALL
0x129 POP
0x12a PUSH1 0x40
0x12c DUP1
0x12d MLOAD
0x12e SWAP5
0x12f DUP6
0x130 MSTORE
0x131 PUSH1 0x20
0x133 DUP6
0x134 ADD
0x135 SWAP3
0x136 SWAP1
0x137 SWAP3
0x138 MSTORE
0x139 DUP4
0x13a DUP3
0x13b ADD
0x13c SWAP3
0x13d SWAP1
0x13e SWAP3
0x13f MSTORE
0x140 MLOAD
0x141 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x162 SWAP3
0x163 DUP2
0x164 SWAP1
0x165 SUB
0x166 SWAP1
0x167 SWAP2
0x168 ADD
0x169 SWAP1
0x16a LOG1
---
0x10e: V86 = 0x2
0x110: V87 = S[0x2]
0x111: V88 = 0x0
0x114: V89 = S[0x0]
0x115: V90 = 0x1
0x117: V91 = 0xa0
0x119: V92 = 0x2
0x11b: V93 = EXP 0x2 0xa0
0x11c: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x11f: V96 = 0x60
0x128: V97 = CALL 0x0 V95 V87 0x60 0x0 0x60 0x0
0x12a: V98 = 0x40
0x12d: V99 = M[0x40]
0x130: M[V99] = V95
0x131: V100 = 0x20
0x134: V101 = ADD V99 0x20
0x138: M[V101] = V87
0x13b: V102 = ADD 0x40 V99
0x13f: M[V102] = 0x0
0x140: V103 = M[0x40]
0x141: V104 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x165: V105 = SUB V99 V103
0x168: V106 = ADD 0x60 V105
0x16a: LOG V103 V106 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x250]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x250]

================================

Block 0x16b
[0x16b:0x178]
---
Predecessors: [0x102, 0x10e]
Successors: []
---
0x16b JUMPDEST
0x16c PUSH1 0x0
0x16e SLOAD
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 AND
0x178 SELFDESTRUCT
---
0x16b: JUMPDEST 
0x16c: V107 = 0x0
0x16e: V108 = S[0x0]
0x16f: V109 = 0x1
0x171: V110 = 0xa0
0x173: V111 = 0x2
0x175: V112 = EXP 0x2 0xa0
0x176: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x177: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x178: SELFDESTRUCT V114
---
Entry stack: [V10, 0x250]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x250]

================================

Block 0x179
[0x179:0x181]
---
Predecessors: [0x1f]
Successors: [0x3c0]
---
0x179 JUMPDEST
0x17a PUSH2 0x3c0
0x17d PUSH1 0x3
0x17f SLOAD
0x180 DUP2
0x181 JUMP
---
0x179: JUMPDEST 
0x17a: V115 = 0x3c0
0x17d: V116 = 0x3
0x17f: V117 = S[0x3]
0x181: JUMP 0x3c0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3c0, V117]
Exit stack: [V10, 0x3c0, V117]

================================

Block 0x182
[0x182:0x18a]
---
Predecessors: [0x2a]
Successors: [0x3c0]
---
0x182 JUMPDEST
0x183 PUSH2 0x3c0
0x186 PUSH1 0x7
0x188 SLOAD
0x189 DUP2
0x18a JUMP
---
0x182: JUMPDEST 
0x183: V118 = 0x3c0
0x186: V119 = 0x7
0x188: V120 = S[0x7]
0x18a: JUMP 0x3c0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3c0, V120]
Exit stack: [V10, 0x3c0, V120]

================================

Block 0x18b
[0x18b:0x19c]
---
Predecessors: [0x35]
Successors: [0x3ca]
---
0x18b JUMPDEST
0x18c PUSH2 0x3ca
0x18f PUSH1 0x0
0x191 SLOAD
0x192 PUSH1 0x1
0x194 PUSH1 0xa0
0x196 PUSH1 0x2
0x198 EXP
0x199 SUB
0x19a AND
0x19b DUP2
0x19c JUMP
---
0x18b: JUMPDEST 
0x18c: V121 = 0x3ca
0x18f: V122 = 0x0
0x191: V123 = S[0x0]
0x192: V124 = 0x1
0x194: V125 = 0xa0
0x196: V126 = 0x2
0x198: V127 = EXP 0x2 0xa0
0x199: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19a: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x19c: JUMP 0x3ca
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ca, V129]
Exit stack: [V10, 0x3ca, V129]

================================

Block 0x19d
[0x19d:0x1a5]
---
Predecessors: [0x40]
Successors: [0x3c0]
---
0x19d JUMPDEST
0x19e PUSH2 0x3c0
0x1a1 PUSH1 0x6
0x1a3 SLOAD
0x1a4 DUP2
0x1a5 JUMP
---
0x19d: JUMPDEST 
0x19e: V130 = 0x3c0
0x1a1: V131 = 0x6
0x1a3: V132 = S[0x6]
0x1a5: JUMP 0x3c0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3c0, V132]
Exit stack: [V10, 0x3c0, V132]

================================

Block 0x1a6
[0x1a6:0x1b7]
---
Predecessors: [0x4b]
Successors: [0x3ca]
---
0x1a6 JUMPDEST
0x1a7 PUSH2 0x3ca
0x1aa PUSH1 0x8
0x1ac SLOAD
0x1ad PUSH1 0x1
0x1af PUSH1 0xa0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 SUB
0x1b5 AND
0x1b6 DUP2
0x1b7 JUMP
---
0x1a6: JUMPDEST 
0x1a7: V133 = 0x3ca
0x1aa: V134 = 0x8
0x1ac: V135 = S[0x8]
0x1ad: V136 = 0x1
0x1af: V137 = 0xa0
0x1b1: V138 = 0x2
0x1b3: V139 = EXP 0x2 0xa0
0x1b4: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x1b7: JUMP 0x3ca
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ca, V141]
Exit stack: [V10, 0x3ca, V141]

================================

Block 0x1b8
[0x1b8:0x1c0]
---
Predecessors: [0x56]
Successors: [0x3c0]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0x3c0
0x1bc PUSH1 0x5
0x1be SLOAD
0x1bf DUP2
0x1c0 JUMP
---
0x1b8: JUMPDEST 
0x1b9: V142 = 0x3c0
0x1bc: V143 = 0x5
0x1be: V144 = S[0x5]
0x1c0: JUMP 0x3c0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3c0, V144]
Exit stack: [V10, 0x3c0, V144]

================================

Block 0x1c1
[0x1c1:0x1c9]
---
Predecessors: [0x61]
Successors: [0x3c0]
---
0x1c1 JUMPDEST
0x1c2 PUSH2 0x3c0
0x1c5 PUSH1 0x1
0x1c7 SLOAD
0x1c8 DUP2
0x1c9 JUMP
---
0x1c1: JUMPDEST 
0x1c2: V145 = 0x3c0
0x1c5: V146 = 0x1
0x1c7: V147 = S[0x1]
0x1c9: JUMP 0x3c0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3c0, V147]
Exit stack: [V10, 0x3c0, V147]

================================

Block 0x1ca
[0x1ca:0x1d2]
---
Predecessors: [0x6c]
Successors: [0x3c0]
---
0x1ca JUMPDEST
0x1cb PUSH2 0x3c0
0x1ce PUSH1 0x2
0x1d0 SLOAD
0x1d1 DUP2
0x1d2 JUMP
---
0x1ca: JUMPDEST 
0x1cb: V148 = 0x3c0
0x1ce: V149 = 0x2
0x1d0: V150 = S[0x2]
0x1d2: JUMP 0x3c0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3c0, V150]
Exit stack: [V10, 0x3c0, V150]

================================

Block 0x1d3
[0x1d3:0x1db]
---
Predecessors: [0x77]
Successors: [0x3c0]
---
0x1d3 JUMPDEST
0x1d4 PUSH2 0x3c0
0x1d7 PUSH1 0x4
0x1d9 SLOAD
0x1da DUP2
0x1db JUMP
---
0x1d3: JUMPDEST 
0x1d4: V151 = 0x3c0
0x1d7: V152 = 0x4
0x1d9: V153 = S[0x4]
0x1db: JUMP 0x3c0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3c0, V153]
Exit stack: [V10, 0x3c0, V153]

================================

Block 0x1dc
[0x1dc:0x1ef]
---
Predecessors: [0x82]
Successors: [0x1f0]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x3dd
0x1e0 PUSH1 0x4
0x1e2 CALLDATALOAD
0x1e3 PUSH1 0x9
0x1e5 DUP1
0x1e6 SLOAD
0x1e7 DUP3
0x1e8 SWAP1
0x1e9 DUP2
0x1ea LT
0x1eb ISZERO
0x1ec PUSH2 0x2
0x1ef JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V154 = 0x3dd
0x1e0: V155 = 0x4
0x1e2: V156 = CALLDATALOAD 0x4
0x1e3: V157 = 0x9
0x1e6: V158 = S[0x9]
0x1ea: V159 = LT V156 V158
0x1eb: V160 = ISZERO V159
0x1ec: V161 = 0x2
0x1ef: THROWI V160
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3dd, V156, 0x9, V156]
Exit stack: [V10, 0x3dd, V156, 0x9, V156]

================================

Block 0x1f0
[0x1f0:0x24f]
---
Predecessors: [0x1dc]
Successors: [0x3dd]
---
0x1f0 POP
0x1f1 PUSH1 0x0
0x1f3 MSTORE
0x1f4 PUSH1 0x2
0x1f6 MUL
0x1f7 PUSH32 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af
0x218 DUP2
0x219 ADD
0x21a SLOAD
0x21b PUSH32 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0
0x23c SWAP2
0x23d SWAP1
0x23e SWAP2
0x23f ADD
0x240 SLOAD
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 SWAP2
0x24a SWAP1
0x24b SWAP2
0x24c AND
0x24d SWAP1
0x24e DUP3
0x24f JUMP
---
0x1f1: V162 = 0x0
0x1f3: M[0x0] = 0x9
0x1f4: V163 = 0x2
0x1f6: V164 = MUL 0x2 V156
0x1f7: V165 = 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af
0x219: V166 = ADD V164 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af
0x21a: V167 = S[V166]
0x21b: V168 = 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0
0x23f: V169 = ADD 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0 V164
0x240: V170 = S[V169]
0x241: V171 = 0x1
0x243: V172 = 0xa0
0x245: V173 = 0x2
0x247: V174 = EXP 0x2 0xa0
0x248: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x24f: JUMP 0x3dd
---
Entry stack: [V10, 0x3dd, V156, 0x9, V156]
Stack pops: 4
Stack additions: [S3, V176, V170]
Exit stack: [V10, 0x3dd, V176, V170]

================================

Block 0x250
[0x250:0x251]
---
Predecessors: [0x33d, 0x3ea]
Successors: []
---
0x250 JUMPDEST
0x251 STOP
---
0x250: JUMPDEST 
0x251: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x252
[0x252:0x25c]
---
Predecessors: [0x8d, 0x3bc]
Successors: [0x25d]
---
0x252 JUMPDEST
0x253 POP
0x254 POP
0x255 SLOAD
0x256 DUP2
0x257 LT
0x258 ISZERO
0x259 PUSH2 0x2
0x25c JUMPI
---
0x252: JUMPDEST 
0x255: V177 = S[0x9]
0x257: V178 = LT V48 V177
0x258: V179 = ISZERO V178
0x259: V180 = 0x2
0x25c: THROWI V179
---
Entry stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, S0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x250, 0x0, 0x9, V48]

================================

Block 0x25d
[0x25d:0x33c]
---
Predecessors: [0x252]
Successors: [0x33d]
---
0x25d SWAP1
0x25e DUP3
0x25f MSTORE
0x260 PUSH32 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af
0x281 PUSH1 0x2
0x283 SWAP2
0x284 DUP3
0x285 MUL
0x286 SWAP1
0x287 DUP2
0x288 ADD
0x289 DUP1
0x28a SLOAD
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 NOT
0x2a1 AND
0x2a2 CALLER
0x2a3 SWAP1
0x2a4 DUP2
0x2a5 OR
0x2a6 DUP3
0x2a7 SSTORE
0x2a8 CALLVALUE
0x2a9 PUSH32 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0
0x2ca SWAP1
0x2cb SWAP4
0x2cc ADD
0x2cd DUP4
0x2ce DUP2
0x2cf SSTORE
0x2d0 DUP5
0x2d1 SLOAD
0x2d2 SWAP1
0x2d3 SWAP4
0x2d4 ADD
0x2d5 SWAP1
0x2d6 SWAP4
0x2d7 SSTORE
0x2d8 PUSH1 0x8
0x2da SLOAD
0x2db PUSH1 0x4
0x2dd SLOAD
0x2de SWAP3
0x2df SLOAD
0x2e0 PUSH32 0x90b98a1100000000000000000000000000000000000000000000000000000000
0x301 PUSH1 0x60
0x303 SWAP1
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x1
0x308 PUSH1 0xa0
0x30a PUSH1 0x2
0x30c EXP
0x30d SUB
0x30e SWAP6
0x30f DUP7
0x310 AND
0x311 PUSH1 0x64
0x313 MSTORE
0x314 SWAP4
0x315 SWAP1
0x316 DIV
0x317 PUSH1 0x84
0x319 MSTORE
0x31a SWAP1
0x31b SWAP4
0x31c SWAP3
0x31d AND
0x31e SWAP2
0x31f PUSH4 0x90b98a11
0x324 SWAP2
0x325 PUSH1 0xa4
0x327 SWAP2
0x328 PUSH1 0x20
0x32a SWAP2
0x32b SWAP1
0x32c PUSH1 0x44
0x32e SWAP1
0x32f DUP3
0x330 SWAP1
0x331 DUP8
0x332 PUSH2 0x61da
0x335 GAS
0x336 SUB
0x337 CALL
0x338 ISZERO
0x339 PUSH2 0x2
0x33c JUMPI
---
0x25f: M[0x0] = 0x9
0x260: V181 = 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af
0x281: V182 = 0x2
0x285: V183 = MUL 0x2 V48
0x288: V184 = ADD V183 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af
0x28a: V185 = S[V184]
0x28b: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V187 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V188 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V185
0x2a2: V189 = CALLER
0x2a5: V190 = OR V189 V188
0x2a7: S[V184] = V190
0x2a8: V191 = CALLVALUE
0x2a9: V192 = 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0
0x2cc: V193 = ADD V183 0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0
0x2cf: S[V193] = V191
0x2d1: V194 = S[0x2]
0x2d4: V195 = ADD V191 V194
0x2d7: S[0x2] = V195
0x2d8: V196 = 0x8
0x2da: V197 = S[0x8]
0x2db: V198 = 0x4
0x2dd: V199 = S[0x4]
0x2df: V200 = S[V193]
0x2e0: V201 = 0x90b98a1100000000000000000000000000000000000000000000000000000000
0x301: V202 = 0x60
0x305: M[0x60] = 0x90b98a1100000000000000000000000000000000000000000000000000000000
0x306: V203 = 0x1
0x308: V204 = 0xa0
0x30a: V205 = 0x2
0x30c: V206 = EXP 0x2 0xa0
0x30d: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x310: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x311: V209 = 0x64
0x313: M[0x64] = V208
0x316: V210 = DIV V200 V199
0x317: V211 = 0x84
0x319: M[0x84] = V210
0x31d: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x31f: V213 = 0x90b98a11
0x325: V214 = 0xa4
0x328: V215 = 0x20
0x32c: V216 = 0x44
0x332: V217 = 0x61da
0x335: V218 = GAS
0x336: V219 = SUB V218 0x61da
0x337: V220 = CALL V219 V212 0x0 0x60 0x44 0x60 0x20
0x338: V221 = ISZERO V220
0x339: V222 = 0x2
0x33c: THROWI V221
---
Entry stack: [V10, 0x250, 0x0, 0x9, V48]
Stack pops: 3
Stack additions: [V184, V212, 0x90b98a11, 0xa4]
Exit stack: [V10, 0x250, V184, V212, 0x90b98a11, 0xa4]

================================

Block 0x33d
[0x33d:0x3bb]
---
Predecessors: [0x25d]
Successors: [0x250]
---
0x33d POP
0x33e POP
0x33f POP
0x340 PUSH1 0x40
0x342 MLOAD
0x343 DUP1
0x344 MLOAD
0x345 SWAP1
0x346 PUSH1 0x20
0x348 ADD
0x349 POP
0x34a POP
0x34b PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x36c DUP2
0x36d PUSH1 0x0
0x36f ADD
0x370 PUSH1 0x0
0x372 SWAP1
0x373 SLOAD
0x374 SWAP1
0x375 PUSH2 0x100
0x378 EXP
0x379 SWAP1
0x37a DIV
0x37b PUSH1 0x1
0x37d PUSH1 0xa0
0x37f PUSH1 0x2
0x381 EXP
0x382 SUB
0x383 AND
0x384 DUP3
0x385 PUSH1 0x1
0x387 ADD
0x388 PUSH1 0x0
0x38a POP
0x38b SLOAD
0x38c PUSH1 0x1
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 DUP5
0x393 PUSH1 0x1
0x395 PUSH1 0xa0
0x397 PUSH1 0x2
0x399 EXP
0x39a SUB
0x39b AND
0x39c DUP2
0x39d MSTORE
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 DUP4
0x3a2 DUP2
0x3a3 MSTORE
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 DUP3
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x20
0x3ac ADD
0x3ad SWAP4
0x3ae POP
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 PUSH1 0x40
0x3b4 MLOAD
0x3b5 DUP1
0x3b6 SWAP2
0x3b7 SUB
0x3b8 SWAP1
0x3b9 LOG1
0x3ba POP
0x3bb JUMP
---
0x340: V223 = 0x40
0x342: V224 = M[0x40]
0x344: V225 = M[V224]
0x346: V226 = 0x20
0x348: V227 = ADD 0x20 V224
0x34b: V228 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x36d: V229 = 0x0
0x36f: V230 = ADD 0x0 V184
0x370: V231 = 0x0
0x373: V232 = S[V230]
0x375: V233 = 0x100
0x378: V234 = EXP 0x100 0x0
0x37a: V235 = DIV V232 0x1
0x37b: V236 = 0x1
0x37d: V237 = 0xa0
0x37f: V238 = 0x2
0x381: V239 = EXP 0x2 0xa0
0x382: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x383: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x385: V242 = 0x1
0x387: V243 = ADD 0x1 V184
0x388: V244 = 0x0
0x38b: V245 = S[V243]
0x38c: V246 = 0x1
0x38e: V247 = 0x40
0x390: V248 = M[0x40]
0x393: V249 = 0x1
0x395: V250 = 0xa0
0x397: V251 = 0x2
0x399: V252 = EXP 0x2 0xa0
0x39a: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39b: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x39d: M[V248] = V254
0x39e: V255 = 0x20
0x3a0: V256 = ADD 0x20 V248
0x3a3: M[V256] = V245
0x3a4: V257 = 0x20
0x3a6: V258 = ADD 0x20 V256
0x3a9: M[V258] = 0x1
0x3aa: V259 = 0x20
0x3ac: V260 = ADD 0x20 V258
0x3b2: V261 = 0x40
0x3b4: V262 = M[0x40]
0x3b7: V263 = SUB V260 V262
0x3b9: LOG V262 V263 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x3bb: JUMP 0x250
---
Entry stack: [V10, 0x250, V184, V212, 0x90b98a11, 0xa4]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bc
[0x3bc:0x3bf]
---
Predecessors: [0xc7]
Successors: [0x252]
---
0x3bc JUMPDEST
0x3bd POP
0x3be SWAP1
0x3bf JUMP
---
0x3bc: JUMPDEST 
0x3bf: JUMP 0x252
---
Entry stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, 0x252, V61, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x250, 0x0, 0x9, V48, 0x9, V48, V61]

================================

Block 0x3c0
[0x3c0:0x3c9]
---
Predecessors: [0x179, 0x182, 0x19d, 0x1b8, 0x1c1, 0x1ca, 0x1d3]
Successors: []
---
0x3c0 JUMPDEST
0x3c1 PUSH1 0x60
0x3c3 SWAP1
0x3c4 DUP2
0x3c5 MSTORE
0x3c6 PUSH1 0x20
0x3c8 SWAP1
0x3c9 RETURN
---
0x3c0: JUMPDEST 
0x3c1: V264 = 0x60
0x3c5: M[0x60] = S0
0x3c6: V265 = 0x20
0x3c9: RETURN 0x60 0x20
---
Entry stack: [V10, 0x3c0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3c0]

================================

Block 0x3ca
[0x3ca:0x3dc]
---
Predecessors: [0x18b, 0x1a6]
Successors: []
---
0x3ca JUMPDEST
0x3cb PUSH1 0x1
0x3cd PUSH1 0xa0
0x3cf PUSH1 0x2
0x3d1 EXP
0x3d2 SUB
0x3d3 AND
0x3d4 PUSH1 0x60
0x3d6 SWAP1
0x3d7 DUP2
0x3d8 MSTORE
0x3d9 PUSH1 0x20
0x3db SWAP1
0x3dc RETURN
---
0x3ca: JUMPDEST 
0x3cb: V266 = 0x1
0x3cd: V267 = 0xa0
0x3cf: V268 = 0x2
0x3d1: V269 = EXP 0x2 0xa0
0x3d2: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d3: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3d4: V272 = 0x60
0x3d8: M[0x60] = V271
0x3d9: V273 = 0x20
0x3dc: RETURN 0x60 0x20
---
Entry stack: [V10, 0x3ca, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3ca]

================================

Block 0x3dd
[0x3dd:0x3e9]
---
Predecessors: [0x1f0]
Successors: []
---
0x3dd JUMPDEST
0x3de PUSH1 0x60
0x3e0 SWAP2
0x3e1 DUP3
0x3e2 MSTORE
0x3e3 PUSH1 0x80
0x3e5 MSTORE
0x3e6 PUSH1 0x40
0x3e8 SWAP1
0x3e9 RETURN
---
0x3dd: JUMPDEST 
0x3de: V274 = 0x60
0x3e2: M[0x60] = V176
0x3e3: V275 = 0x80
0x3e5: M[0x80] = V170
0x3e6: V276 = 0x40
0x3e9: RETURN 0x60 0x40
---
Entry stack: [V10, 0x3dd, V176, V170]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3dd]

================================

Block 0x3ea
[0x3ea:0x3eb]
---
Predecessors: [0xf5]
Successors: [0x250]
---
0x3ea JUMPDEST
0x3eb JUMP
---
0x3ea: JUMPDEST 
0x3eb: JUMP 0x250
---
Entry stack: [V10, 0x250]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0xf5
Exit block: 0x16b
Body: 0xf5, 0x102, 0x10e, 0x16b, 0x250, 0x3ea

Function 1:
Public function signature: 0x17a5410b
Entry block: 0x179
Exit block: 0x3c0
Body: 0x179, 0x3c0

Function 2:
Public function signature: 0x1998aeef
Entry block: 0x182
Exit block: 0x3c0
Body: 0x182, 0x3c0

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x18b
Exit block: 0x3ca
Body: 0x18b, 0x3ca

Function 4:
Public function signature: 0x4a707247
Entry block: 0x19d
Exit block: 0x3c0
Body: 0x19d, 0x3c0

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x1a6
Exit block: 0x3ca
Body: 0x1a6, 0x3ca

Function 6:
Public function signature: 0x7121809a
Entry block: 0x1b8
Exit block: 0x3c0
Body: 0x1b8, 0x3c0

Function 7:
Public function signature: 0x7a3a0e84
Entry block: 0x1c1
Exit block: 0x3c0
Body: 0x1c1, 0x3c0

Function 8:
Public function signature: 0x7b3e5e7b
Entry block: 0x1ca
Exit block: 0x3c0
Body: 0x1ca, 0x3c0

Function 9:
Public function signature: 0x7b4fd96e
Entry block: 0x1d3
Exit block: 0x3c0
Body: 0x1d3, 0x3c0

Function 10:
Public function signature: 0xdc0d3dff
Entry block: 0x1dc
Exit block: 0x3dd
Body: 0x1dc, 0x1f0, 0x3dd

Function 11:
Public fallback function
Entry block: 0x8d
Exit block: 0x250
Body: 0x8d, 0xad, 0xc7, 0xd0, 0x250, 0x252, 0x25d, 0x33d, 0x3bc

