Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3b
0xa: JUMPI 0x3b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xd2]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x8da5cb5b
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xd2
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x8da5cb5b
0x20: V14 = EQ V12 0x8da5cb5b
0x21: V15 = 0xd2
0x24: JUMPI 0xd2 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xfb]
---
0x25 DUP1
0x26 PUSH4 0xa6f9dae1
0x2b EQ
0x2c PUSH2 0xfb
0x2f JUMPI
---
0x26: V16 = 0xa6f9dae1
0x2b: V17 = EQ 0xa6f9dae1 V12
0x2c: V18 = 0xfb
0x2f: JUMPI 0xfb V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x116]
---
0x30 DUP1
0x31 PUSH4 0xb808b43d
0x36 EQ
0x37 PUSH2 0x116
0x3a JUMPI
---
0x31: V19 = 0xb808b43d
0x36: V20 = EQ 0xb808b43d V12
0x37: V21 = 0x116
0x3a: JUMPI 0x116 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x3e]
---
Predecessors: [0x0, 0x30]
Successors: [0x3f]
---
0x3b JUMPDEST
0x3c PUSH2 0xd0
---
0x3b: JUMPDEST 
0x3c: V22 = 0xd0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V12, 0xd0]

================================

Block 0x3f
[0x3f:0x48]
---
Predecessors: [0x3b]
Successors: [0x49, 0x4d]
---
0x3f JUMPDEST
0x40 PUSH1 0x1
0x42 SLOAD
0x43 TIMESTAMP
0x44 LT
0x45 PUSH2 0x4d
0x48 JUMPI
---
0x3f: JUMPDEST 
0x40: V23 = 0x1
0x42: V24 = S[0x1]
0x43: V25 = TIMESTAMP
0x44: V26 = LT V25 V24
0x45: V27 = 0x4d
0x48: JUMPI 0x4d V26
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x3f]
Successors: []
---
0x49 PUSH2 0x0
0x4c JUMP
---
0x49: V28 = 0x0
0x4c: THROW 
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0x4d
[0x4d:0x57]
---
Predecessors: [0x3f]
Successors: [0x58, 0x5c]
---
0x4d JUMPDEST
0x4e PUSH1 0x2
0x50 SLOAD
0x51 CALLVALUE
0x52 LT
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x4d: JUMPDEST 
0x4e: V29 = 0x2
0x50: V30 = S[0x2]
0x51: V31 = CALLVALUE
0x52: V32 = LT V31 V30
0x53: V33 = ISZERO V32
0x54: V34 = 0x5c
0x57: JUMPI 0x5c V33
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x4d]
Successors: []
---
0x58 PUSH2 0x0
0x5b JUMP
---
0x58: V35 = 0x0
0x5b: THROW 
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0x5c
[0x5c:0xbf]
---
Predecessors: [0x4d]
Successors: [0xc0]
---
0x5c JUMPDEST
0x5d PUSH1 0x0
0x5f DUP1
0x60 SLOAD
0x61 PUSH1 0x40
0x63 DUP1
0x64 MLOAD
0x65 PUSH32 0x888921800000000000000000000000000000000000000000000000000000000
0x86 DUP2
0x87 MSTORE
0x88 PUSH1 0x1
0x8a PUSH1 0xa0
0x8c PUSH1 0x2
0x8e EXP
0x8f SUB
0x90 CALLER
0x91 DUP2
0x92 AND
0x93 PUSH1 0x4
0x95 DUP4
0x96 ADD
0x97 MSTORE
0x98 CALLVALUE
0x99 PUSH1 0x24
0x9b DUP4
0x9c ADD
0x9d MSTORE
0x9e SWAP2
0x9f MLOAD
0xa0 SWAP2
0xa1 SWAP1
0xa2 SWAP3
0xa3 AND
0xa4 SWAP3
0xa5 PUSH4 0x8889218
0xaa SWAP3
0xab PUSH1 0x44
0xad DUP1
0xae DUP3
0xaf ADD
0xb0 SWAP4
0xb1 SWAP2
0xb2 DUP3
0xb3 SWAP1
0xb4 SUB
0xb5 ADD
0xb6 DUP2
0xb7 DUP4
0xb8 DUP8
0xb9 DUP1
0xba EXTCODESIZE
0xbb ISZERO
0xbc PUSH2 0x0
0xbf JUMPI
---
0x5c: JUMPDEST 
0x5d: V36 = 0x0
0x60: V37 = S[0x0]
0x61: V38 = 0x40
0x64: V39 = M[0x40]
0x65: V40 = 0x888921800000000000000000000000000000000000000000000000000000000
0x87: M[V39] = 0x888921800000000000000000000000000000000000000000000000000000000
0x88: V41 = 0x1
0x8a: V42 = 0xa0
0x8c: V43 = 0x2
0x8e: V44 = EXP 0x2 0xa0
0x8f: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90: V46 = CALLER
0x92: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0x93: V48 = 0x4
0x96: V49 = ADD V39 0x4
0x97: M[V49] = V47
0x98: V50 = CALLVALUE
0x99: V51 = 0x24
0x9c: V52 = ADD V39 0x24
0x9d: M[V52] = V50
0x9f: V53 = M[0x40]
0xa3: V54 = AND V37 0xffffffffffffffffffffffffffffffffffffffff
0xa5: V55 = 0x8889218
0xab: V56 = 0x44
0xaf: V57 = ADD V39 0x44
0xb4: V58 = SUB V39 V53
0xb5: V59 = ADD V58 0x44
0xba: V60 = EXTCODESIZE V54
0xbb: V61 = ISZERO V60
0xbc: V62 = 0x0
0xbf: THROWI V61
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: [V54, 0x8889218, V57, 0x0, V53, V59, V53, 0x0, V54]
Exit stack: [V12, 0xd0, V54, 0x8889218, V57, 0x0, V53, V59, V53, 0x0, V54]

================================

Block 0xc0
[0xc0:0xc9]
---
Predecessors: [0x5c]
Successors: [0xca]
---
0xc0 PUSH1 0x32
0xc2 GAS
0xc3 SUB
0xc4 CALL
0xc5 ISZERO
0xc6 PUSH2 0x0
0xc9 JUMPI
---
0xc0: V63 = 0x32
0xc2: V64 = GAS
0xc3: V65 = SUB V64 0x32
0xc4: V66 = CALL V65 V54 0x0 V53 V59 V53 0x0
0xc5: V67 = ISZERO V66
0xc6: V68 = 0x0
0xc9: THROWI V67
---
Entry stack: [V12, 0xd0, V54, 0x8889218, V57, 0x0, V53, V59, V53, 0x0, V54]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xd0, V54, 0x8889218, V57]

================================

Block 0xca
[0xca:0xcc]
---
Predecessors: [0xc0]
Successors: [0xcd]
---
0xca POP
0xcb POP
0xcc POP
---
0xca: NOP 
---
Entry stack: [V12, 0xd0, V54, 0x8889218, V57]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0xcd
[0xcd:0xcd]
---
Predecessors: [0xca, 0x179, 0x19f]
Successors: [0xce]
---
0xcd JUMPDEST
---
0xcd: JUMPDEST 
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0xce
[0xce:0xcf]
---
Predecessors: [0xcd]
Successors: [0xd0]
---
0xce JUMPDEST
0xcf JUMP
---
0xce: JUMPDEST 
0xcf: JUMP 0xd0
---
Entry stack: [V12, 0xd0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd0
[0xd0:0xd1]
---
Predecessors: [0xce, 0x176]
Successors: []
---
0xd0 JUMPDEST
0xd1 STOP
---
0xd0: JUMPDEST 
0xd1: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd2
[0xd2:0xd7]
---
Predecessors: [0xb]
Successors: [0xd8]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 PUSH2 0x0
0xd7 JUMPI
---
0xd2: JUMPDEST 
0xd3: V69 = CALLVALUE
0xd4: V70 = 0x0
0xd7: THROWI V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd8
[0xd8:0xde]
---
Predecessors: [0xd2]
Successors: [0x125]
---
0xd8 PUSH2 0xdf
0xdb PUSH2 0x125
0xde JUMP
---
0xd8: V71 = 0xdf
0xdb: V72 = 0x125
0xde: JUMP 0x125
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdf]
Exit stack: [V12, 0xdf]

================================

Block 0xdf
[0xdf:0xfa]
---
Predecessors: [0x125]
Successors: []
---
0xdf JUMPDEST
0xe0 PUSH1 0x40
0xe2 DUP1
0xe3 MLOAD
0xe4 PUSH1 0x1
0xe6 PUSH1 0xa0
0xe8 PUSH1 0x2
0xea EXP
0xeb SUB
0xec SWAP1
0xed SWAP3
0xee AND
0xef DUP3
0xf0 MSTORE
0xf1 MLOAD
0xf2 SWAP1
0xf3 DUP2
0xf4 SWAP1
0xf5 SUB
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP1
0xfa RETURN
---
0xdf: JUMPDEST 
0xe0: V73 = 0x40
0xe3: V74 = M[0x40]
0xe4: V75 = 0x1
0xe6: V76 = 0xa0
0xe8: V77 = 0x2
0xea: V78 = EXP 0x2 0xa0
0xeb: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V80 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0xf0: M[V74] = V80
0xf1: V81 = M[0x40]
0xf5: V82 = SUB V74 V81
0xf6: V83 = 0x20
0xf8: V84 = ADD 0x20 V82
0xfa: RETURN V81 V84
---
Entry stack: [V12, 0xdf, V108]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xdf]

================================

Block 0xfb
[0xfb:0x100]
---
Predecessors: [0x25]
Successors: [0x101]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd PUSH2 0x0
0x100 JUMPI
---
0xfb: JUMPDEST 
0xfc: V85 = CALLVALUE
0xfd: V86 = 0x0
0x100: THROWI V85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x101
[0x101:0x113]
---
Predecessors: [0xfb]
Successors: [0x134]
---
0x101 PUSH2 0xd0
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c PUSH1 0x4
0x10e CALLDATALOAD
0x10f AND
0x110 PUSH2 0x134
0x113 JUMP
---
0x101: V87 = 0xd0
0x104: V88 = 0x1
0x106: V89 = 0xa0
0x108: V90 = 0x2
0x10a: V91 = EXP 0x2 0xa0
0x10b: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V93 = 0x4
0x10e: V94 = CALLDATALOAD 0x4
0x10f: V95 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x110: V96 = 0x134
0x113: JUMP 0x134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd0, V95]
Exit stack: [V12, 0xd0, V95]

================================

Block 0x114
[0x114:0x115]
---
Predecessors: []
Successors: []
---
0x114 JUMPDEST
0x115 STOP
---
0x114: JUMPDEST 
0x115: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x116
[0x116:0x11b]
---
Predecessors: [0x30]
Successors: [0x11c]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 PUSH2 0x0
0x11b JUMPI
---
0x116: JUMPDEST 
0x117: V97 = CALLVALUE
0x118: V98 = 0x0
0x11b: THROWI V97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11c
[0x11c:0x122]
---
Predecessors: [0x116]
Successors: [0x179]
---
0x11c PUSH2 0xd0
0x11f PUSH2 0x179
0x122 JUMP
---
0x11c: V99 = 0xd0
0x11f: V100 = 0x179
0x122: JUMP 0x179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V12, 0xd0]

================================

Block 0x123
[0x123:0x124]
---
Predecessors: []
Successors: []
---
0x123 JUMPDEST
0x124 STOP
---
0x123: JUMPDEST 
0x124: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x125
[0x125:0x133]
---
Predecessors: [0xd8]
Successors: [0xdf]
---
0x125 JUMPDEST
0x126 PUSH1 0x0
0x128 SLOAD
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 AND
0x132 DUP2
0x133 JUMP
---
0x125: JUMPDEST 
0x126: V101 = 0x0
0x128: V102 = S[0x0]
0x129: V103 = 0x1
0x12b: V104 = 0xa0
0x12d: V105 = 0x2
0x12f: V106 = EXP 0x2 0xa0
0x130: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x133: JUMP 0xdf
---
Entry stack: [V12, 0xdf]
Stack pops: 1
Stack additions: [S0, V108]
Exit stack: [V12, 0xdf, V108]

================================

Block 0x134
[0x134:0x14b]
---
Predecessors: [0x101]
Successors: [0x14c, 0x174]
---
0x134 JUMPDEST
0x135 PUSH1 0x0
0x137 SLOAD
0x138 CALLER
0x139 PUSH1 0x1
0x13b PUSH1 0xa0
0x13d PUSH1 0x2
0x13f EXP
0x140 SUB
0x141 SWAP1
0x142 DUP2
0x143 AND
0x144 SWAP2
0x145 AND
0x146 EQ
0x147 ISZERO
0x148 PUSH2 0x174
0x14b JUMPI
---
0x134: JUMPDEST 
0x135: V109 = 0x0
0x137: V110 = S[0x0]
0x138: V111 = CALLER
0x139: V112 = 0x1
0x13b: V113 = 0xa0
0x13d: V114 = 0x2
0x13f: V115 = EXP 0x2 0xa0
0x140: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x145: V118 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x146: V119 = EQ V118 V117
0x147: V120 = ISZERO V119
0x148: V121 = 0x174
0x14b: JUMPI 0x174 V120
---
Entry stack: [V12, 0xd0, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0, V95]

================================

Block 0x14c
[0x14c:0x173]
---
Predecessors: [0x134]
Successors: [0x174]
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f SLOAD
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 NOT
0x166 AND
0x167 PUSH1 0x1
0x169 PUSH1 0xa0
0x16b PUSH1 0x2
0x16d EXP
0x16e SUB
0x16f DUP4
0x170 AND
0x171 OR
0x172 SWAP1
0x173 SSTORE
---
0x14c: V122 = 0x0
0x14f: V123 = S[0x0]
0x150: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V125 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x166: V126 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V123
0x167: V127 = 0x1
0x169: V128 = 0xa0
0x16b: V129 = 0x2
0x16d: V130 = EXP 0x2 0xa0
0x16e: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x170: V132 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x171: V133 = OR V132 V126
0x173: S[0x0] = V133
---
Entry stack: [V12, 0xd0, V95]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xd0, V95]

================================

Block 0x174
[0x174:0x174]
---
Predecessors: [0x134, 0x14c]
Successors: [0x175]
---
0x174 JUMPDEST
---
0x174: JUMPDEST 
---
Entry stack: [V12, 0xd0, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0, V95]

================================

Block 0x175
[0x175:0x175]
---
Predecessors: [0x174]
Successors: [0x176]
---
0x175 JUMPDEST
---
0x175: JUMPDEST 
---
Entry stack: [V12, 0xd0, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0, V95]

================================

Block 0x176
[0x176:0x178]
---
Predecessors: [0x175]
Successors: [0xd0]
---
0x176 JUMPDEST
0x177 POP
0x178 JUMP
---
0x176: JUMPDEST 
0x178: JUMP 0xd0
---
Entry stack: [V12, 0xd0, V95]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x179
[0x179:0x190]
---
Predecessors: [0x11c]
Successors: [0xcd, 0x191]
---
0x179 JUMPDEST
0x17a PUSH1 0x0
0x17c SLOAD
0x17d CALLER
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 SWAP1
0x187 DUP2
0x188 AND
0x189 SWAP2
0x18a AND
0x18b EQ
0x18c ISZERO
0x18d PUSH2 0xcd
0x190 JUMPI
---
0x179: JUMPDEST 
0x17a: V134 = 0x0
0x17c: V135 = S[0x0]
0x17d: V136 = CALLER
0x17e: V137 = 0x1
0x180: V138 = 0xa0
0x182: V139 = 0x2
0x184: V140 = EXP 0x2 0xa0
0x185: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x188: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x18a: V143 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V144 = EQ V143 V142
0x18c: V145 = ISZERO V144
0x18d: V146 = 0xcd
0x190: JUMPI 0xcd V145
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0x191
[0x191:0x19a]
---
Predecessors: [0x179]
Successors: [0x19b, 0x19f]
---
0x191 PUSH1 0x1
0x193 SLOAD
0x194 TIMESTAMP
0x195 LT
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x191: V147 = 0x1
0x193: V148 = S[0x1]
0x194: V149 = TIMESTAMP
0x195: V150 = LT V149 V148
0x196: V151 = ISZERO V150
0x197: V152 = 0x19f
0x19a: JUMPI 0x19f V151
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x191]
Successors: []
---
0x19b PUSH2 0x0
0x19e JUMP
---
0x19b: V153 = 0x0
0x19e: THROW 
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0x19f
[0x19f:0x1d3]
---
Predecessors: [0x191]
Successors: [0xcd, 0x1d4]
---
0x19f JUMPDEST
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 SLOAD
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af SWAP2
0x1b0 DUP3
0x1b1 AND
0x1b2 SWAP3
0x1b3 ADDRESS
0x1b4 SWAP1
0x1b5 SWAP3
0x1b6 AND
0x1b7 BALANCE
0x1b8 DUP1
0x1b9 ISZERO
0x1ba PUSH2 0x8fc
0x1bd MUL
0x1be SWAP3
0x1bf SWAP1
0x1c0 SWAP2
0x1c1 SWAP1
0x1c2 DUP2
0x1c3 DUP2
0x1c4 DUP2
0x1c5 DUP6
0x1c6 DUP9
0x1c7 DUP9
0x1c8 CALL
0x1c9 SWAP4
0x1ca POP
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce ISZERO
0x1cf ISZERO
0x1d0 PUSH2 0xcd
0x1d3 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V154 = 0x0
0x1a3: V155 = S[0x0]
0x1a4: V156 = 0x40
0x1a6: V157 = M[0x40]
0x1a7: V158 = 0x1
0x1a9: V159 = 0xa0
0x1ab: V160 = 0x2
0x1ad: V161 = EXP 0x2 0xa0
0x1ae: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x1b3: V164 = ADDRESS
0x1b6: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1b7: V166 = BALANCE V165
0x1b9: V167 = ISZERO V166
0x1ba: V168 = 0x8fc
0x1bd: V169 = MUL 0x8fc V167
0x1c8: V170 = CALL V169 V163 V166 V157 0x0 V157 0x0
0x1ce: V171 = ISZERO V170
0x1cf: V172 = ISZERO V171
0x1d0: V173 = 0xcd
0x1d3: JUMPI 0xcd V172
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x19f]
Successors: []
---
0x1d4 PUSH2 0x0
0x1d7 JUMP
---
0x1d4: V174 = 0x0
0x1d7: THROW 
---
Entry stack: [V12, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd0]

================================

Block 0x1d8
[0x1d8:0x1d8]
---
Predecessors: []
Successors: [0x1d9]
---
0x1d8 JUMPDEST
---
0x1d8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d9
[0x1d9:0x1d9]
---
Predecessors: [0x1d8]
Successors: [0x1da]
---
0x1d9 JUMPDEST
---
0x1d9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1da
[0x1da:0x1da]
---
Predecessors: [0x1d9]
Successors: [0x1db]
---
0x1da JUMPDEST
---
0x1da: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1db
[0x1db:0x1db]
---
Predecessors: [0x1da]
Successors: [0x1dc]
---
0x1db JUMPDEST
---
0x1db: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1dc
[0x1dc:0x20a]
---
Predecessors: [0x1db]
Successors: []
---
0x1dc JUMPDEST
0x1dd JUMP
0x1de STOP
0x1df LOG1
0x1e0 PUSH6 0x627a7a723058
0x1e7 SHA3
0x1e8 MISSING 0x47
0x1e9 MISSING 0x28
0x1ea MISSING 0xe6
0x1eb SSTORE
0x1ec BYTE
0x1ed SWAP16
0x1ee MISSING 0xad
0x1ef PC
0x1f0 GASPRICE
0x1f1 MOD
0x1f2 PUSH13 0x514efe562d1fc9d6491478aad4
0x200 PUSH10 0x4b7e0a89e6afd70029
---
0x1dc: JUMPDEST 
0x1dd: JUMP S0
0x1de: STOP 
0x1df: LOG S0 S1 S2
0x1e0: V175 = 0x627a7a723058
0x1e7: V176 = SHA3 0x627a7a723058 S3
0x1e8: MISSING 0x47
0x1e9: MISSING 0x28
0x1ea: MISSING 0xe6
0x1eb: S[S0] = S1
0x1ec: V177 = BYTE S2 S3
0x1ee: MISSING 0xad
0x1ef: V178 = PC
0x1f0: V179 = GASPRICE
0x1f1: V180 = MOD V179 V178
0x1f2: V181 = 0x514efe562d1fc9d6491478aad4
0x200: V182 = 0x4b7e0a89e6afd70029
---
Entry stack: []
Stack pops: 39
Stack additions: [0x4b7e0a89e6afd70029, 0x514efe562d1fc9d6491478aad4, V180]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0xd2
Exit block: 0xdf
Body: 0xd2, 0xd8, 0xdf, 0x125

Function 1:
Public function signature: 0xa6f9dae1
Entry block: 0xfb
Exit block: 0xd0
Body: 0xd0, 0xfb, 0x101, 0x134, 0x14c, 0x174, 0x175, 0x176

Function 2:
Public function signature: 0xb808b43d
Entry block: 0x116
Exit block: 0xd0
Body: 0xcd, 0xce, 0xd0, 0x116, 0x11c, 0x179, 0x191, 0x19b, 0x19f, 0x1d4

Function 3:
Public fallback function
Entry block: 0x3b
Exit block: 0xd0
Body: 0x3b, 0x3f, 0x49, 0x4d, 0x58, 0x5c, 0xc0, 0xca, 0xcd, 0xce, 0xd0

