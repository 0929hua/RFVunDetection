args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/2/101117.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd5
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd5
0xa: JUMPI 0xd5 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xe1]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2d05d3f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xe1
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2d05d3f
0x20: V14 = EQ V12 0x2d05d3f
0x21: V15 = 0xe1
0x24: JUMPI 0xe1 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x110]
---
0x25 DUP1
0x26 PUSH4 0x158ef93e
0x2b EQ
0x2c PUSH2 0x110
0x2f JUMPI
---
0x26: V16 = 0x158ef93e
0x2b: V17 = EQ 0x158ef93e V12
0x2c: V18 = 0x110
0x2f: JUMPI 0x110 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x137]
---
0x30 DUP1
0x31 PUSH4 0x2184a712
0x36 EQ
0x37 PUSH2 0x137
0x3a JUMPI
---
0x31: V19 = 0x2184a712
0x36: V20 = EQ 0x2184a712 V12
0x37: V21 = 0x137
0x3a: JUMPI 0x137 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x168]
---
0x3b DUP1
0x3c PUSH4 0x22f3e2d4
0x41 EQ
0x42 PUSH2 0x168
0x45 JUMPI
---
0x3c: V22 = 0x22f3e2d4
0x41: V23 = EQ 0x22f3e2d4 V12
0x42: V24 = 0x168
0x45: JUMPI 0x168 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x18f]
---
0x46 DUP1
0x47 PUSH4 0x50bfeadc
0x4c EQ
0x4d PUSH2 0x18f
0x50 JUMPI
---
0x47: V25 = 0x50bfeadc
0x4c: V26 = EQ 0x50bfeadc V12
0x4d: V27 = 0x18f
0x50: JUMPI 0x18f V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1b4]
---
0x51 DUP1
0x52 PUSH4 0x60659a92
0x57 EQ
0x58 PUSH2 0x1b4
0x5b JUMPI
---
0x52: V28 = 0x60659a92
0x57: V29 = EQ 0x60659a92 V12
0x58: V30 = 0x1b4
0x5b: JUMPI 0x1b4 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1d9]
---
0x5c DUP1
0x5d PUSH4 0x679aefce
0x62 EQ
0x63 PUSH2 0x1d9
0x66 JUMPI
---
0x5d: V31 = 0x679aefce
0x62: V32 = EQ 0x679aefce V12
0x63: V33 = 0x1d9
0x66: JUMPI 0x1d9 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1fe]
---
0x67 DUP1
0x68 PUSH4 0x7d3d6522
0x6d EQ
0x6e PUSH2 0x1fe
0x71 JUMPI
---
0x68: V34 = 0x7d3d6522
0x6d: V35 = EQ 0x7d3d6522 V12
0x6e: V36 = 0x1fe
0x71: JUMPI 0x1fe V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x225]
---
0x72 DUP1
0x73 PUSH4 0x8129fc1c
0x78 EQ
0x79 PUSH2 0x225
0x7c JUMPI
---
0x73: V37 = 0x8129fc1c
0x78: V38 = EQ 0x8129fc1c V12
0x79: V39 = 0x225
0x7c: JUMPI 0x225 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x23a]
---
0x7d DUP1
0x7e PUSH4 0x83197ef0
0x83 EQ
0x84 PUSH2 0x23a
0x87 JUMPI
---
0x7e: V40 = 0x83197ef0
0x83: V41 = EQ 0x83197ef0 V12
0x84: V42 = 0x23a
0x87: JUMPI 0x23a V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x24f]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x24f
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x24f
0x92: JUMPI 0x24f V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x27e]
---
0x93 DUP1
0x94 PUSH4 0xba9a061a
0x99 EQ
0x9a PUSH2 0x27e
0x9d JUMPI
---
0x94: V46 = 0xba9a061a
0x99: V47 = EQ 0xba9a061a V12
0x9a: V48 = 0x27e
0x9d: JUMPI 0x27e V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2a3]
---
0x9e DUP1
0x9f PUSH4 0xc549e6b9
0xa4 EQ
0xa5 PUSH2 0x2a3
0xa8 JUMPI
---
0x9f: V49 = 0xc549e6b9
0xa4: V50 = EQ 0xc549e6b9 V12
0xa5: V51 = 0x2a3
0xa8: JUMPI 0x2a3 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2c8]
---
0xa9 DUP1
0xaa PUSH4 0xc59ee1dc
0xaf EQ
0xb0 PUSH2 0x2c8
0xb3 JUMPI
---
0xaa: V52 = 0xc59ee1dc
0xaf: V53 = EQ 0xc59ee1dc V12
0xb0: V54 = 0x2c8
0xb3: JUMPI 0x2c8 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0xd5]
---
0xb4 DUP1
0xb5 PUSH4 0xd0febe4c
0xba EQ
0xbb PUSH2 0xd5
0xbe JUMPI
---
0xb5: V55 = 0xd0febe4c
0xba: V56 = EQ 0xd0febe4c V12
0xbb: V57 = 0xd5
0xbe: JUMPI 0xd5 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x2f7]
---
0xbf DUP1
0xc0 PUSH4 0xd8270dce
0xc5 EQ
0xc6 PUSH2 0x2f7
0xc9 JUMPI
---
0xc0: V58 = 0xd8270dce
0xc5: V59 = EQ 0xd8270dce V12
0xc6: V60 = 0x2f7
0xc9: JUMPI 0x2f7 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x31c]
---
0xca DUP1
0xcb PUSH4 0xf2fde38b
0xd0 EQ
0xd1 PUSH2 0x31c
0xd4 JUMPI
---
0xcb: V61 = 0xf2fde38b
0xd0: V62 = EQ 0xf2fde38b V12
0xd1: V63 = 0x31c
0xd4: JUMPI 0x31c V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xd5]
---
Predecessors: [0x0, 0xb4, 0xca]
Successors: [0xd6]
---
0xd5 JUMPDEST
---
0xd5: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0xd5]
Successors: [0x33d]
---
0xd6 JUMPDEST
0xd7 PUSH2 0xde
0xda PUSH2 0x33d
0xdd JUMP
---
0xd6: JUMPDEST 
0xd7: V64 = 0xde
0xda: V65 = 0x33d
0xdd: JUMP 0x33d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0xde
[0xde:0xde]
---
Predecessors: [0x48f, 0x687, 0x6eb, 0x89f]
Successors: [0xdf]
---
0xde JUMPDEST
---
0xde: JUMPDEST 
---
Entry stack: [V12, 0xde, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S3, S2, S1, S0]

================================

Block 0xdf
[0xdf:0xe0]
---
Predecessors: [0xde]
Successors: []
---
0xdf JUMPDEST
0xe0 STOP
---
0xdf: JUMPDEST 
0xe0: STOP 
---
Entry stack: [V12, 0xde, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S3, S2, S1, S0]

================================

Block 0xe1
[0xe1:0xe7]
---
Predecessors: [0xb]
Successors: [0xe8, 0xec]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xe1: JUMPDEST 
0xe2: V66 = CALLVALUE
0xe3: V67 = ISZERO V66
0xe4: V68 = 0xec
0xe7: JUMPI 0xec V67
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xe1]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V69 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0xe1]
Successors: [0x494]
---
0xec JUMPDEST
0xed PUSH2 0xf4
0xf0 PUSH2 0x494
0xf3 JUMP
---
0xec: JUMPDEST 
0xed: V70 = 0xf4
0xf0: V71 = 0x494
0xf3: JUMP 0x494
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf4]
Exit stack: [V12, 0xf4]

================================

Block 0xf4
[0xf4:0x10f]
---
Predecessors: [0x494, 0x81d]
Successors: []
---
0xf4 JUMPDEST
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 PUSH1 0x1
0xfa PUSH1 0xa0
0xfc PUSH1 0x2
0xfe EXP
0xff SUB
0x100 SWAP1
0x101 SWAP2
0x102 AND
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x20
0x107 ADD
0x108 PUSH1 0x40
0x10a MLOAD
0x10b DUP1
0x10c SWAP2
0x10d SUB
0x10e SWAP1
0x10f RETURN
---
0xf4: JUMPDEST 
0xf5: V72 = 0x40
0xf7: V73 = M[0x40]
0xf8: V74 = 0x1
0xfa: V75 = 0xa0
0xfc: V76 = 0x2
0xfe: V77 = EXP 0x2 0xa0
0xff: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0x102: V79 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x104: M[V73] = V79
0x105: V80 = 0x20
0x107: V81 = ADD 0x20 V73
0x108: V82 = 0x40
0x10a: V83 = M[0x40]
0x10d: V84 = SUB V81 V83
0x10f: RETURN V83 V84
---
Entry stack: [V12, 0xf4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xf4]

================================

Block 0x110
[0x110:0x116]
---
Predecessors: [0x25]
Successors: [0x117, 0x11b]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x110: JUMPDEST 
0x111: V85 = CALLVALUE
0x112: V86 = ISZERO V85
0x113: V87 = 0x11b
0x116: JUMPI 0x11b V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x110]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V88 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x110]
Successors: [0x4a3]
---
0x11b JUMPDEST
0x11c PUSH2 0x123
0x11f PUSH2 0x4a3
0x122 JUMP
---
0x11b: JUMPDEST 
0x11c: V89 = 0x123
0x11f: V90 = 0x4a3
0x122: JUMP 0x4a3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x123
[0x123:0x136]
---
Predecessors: [0x4a3, 0x57f, 0x687, 0x6eb]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 MLOAD
0x127 SWAP1
0x128 ISZERO
0x129 ISZERO
0x12a DUP2
0x12b MSTORE
0x12c PUSH1 0x20
0x12e ADD
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 SWAP2
0x134 SUB
0x135 SWAP1
0x136 RETURN
---
0x123: JUMPDEST 
0x124: V91 = 0x40
0x126: V92 = M[0x40]
0x128: V93 = ISZERO S0
0x129: V94 = ISZERO V93
0x12b: M[V92] = V94
0x12c: V95 = 0x20
0x12e: V96 = ADD 0x20 V92
0x12f: V97 = 0x40
0x131: V98 = M[0x40]
0x134: V99 = SUB V96 V98
0x136: RETURN V98 V99
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1]

================================

Block 0x137
[0x137:0x13d]
---
Predecessors: [0x30]
Successors: [0x13e, 0x142]
---
0x137 JUMPDEST
0x138 CALLVALUE
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x137: JUMPDEST 
0x138: V100 = CALLVALUE
0x139: V101 = ISZERO V100
0x13a: V102 = 0x142
0x13d: JUMPI 0x142 V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x137]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V103 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x142
[0x142:0x155]
---
Predecessors: [0x137]
Successors: [0x4ac]
---
0x142 JUMPDEST
0x143 PUSH2 0x156
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e PUSH1 0x4
0x150 CALLDATALOAD
0x151 AND
0x152 PUSH2 0x4ac
0x155 JUMP
---
0x142: JUMPDEST 
0x143: V104 = 0x156
0x146: V105 = 0x1
0x148: V106 = 0xa0
0x14a: V107 = 0x2
0x14c: V108 = EXP 0x2 0xa0
0x14d: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14e: V110 = 0x4
0x150: V111 = CALLDATALOAD 0x4
0x151: V112 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x152: V113 = 0x4ac
0x155: JUMP 0x4ac
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x156, V112]
Exit stack: [V12, 0x156, V112]

================================

Block 0x156
[0x156:0x167]
---
Predecessors: [0x524, 0x57f, 0x582, 0x609, 0x82c, 0x834, 0x839, 0x83f]
Successors: []
---
0x156 JUMPDEST
0x157 PUSH1 0x40
0x159 MLOAD
0x15a SWAP1
0x15b DUP2
0x15c MSTORE
0x15d PUSH1 0x20
0x15f ADD
0x160 PUSH1 0x40
0x162 MLOAD
0x163 DUP1
0x164 SWAP2
0x165 SUB
0x166 SWAP1
0x167 RETURN
---
0x156: JUMPDEST 
0x157: V114 = 0x40
0x159: V115 = M[0x40]
0x15c: M[V115] = S0
0x15d: V116 = 0x20
0x15f: V117 = ADD 0x20 V115
0x160: V118 = 0x40
0x162: V119 = M[0x40]
0x165: V120 = SUB V117 V119
0x167: RETURN V119 V120
---
Entry stack: [V12, 0xde, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xde, S6, S5, S4, S3, S2, S1]

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x3b]
Successors: [0x16f, 0x173]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V121 = CALLVALUE
0x16a: V122 = ISZERO V121
0x16b: V123 = 0x173
0x16e: JUMPI 0x173 V122
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x168]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V124 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x168]
Successors: [0x529]
---
0x173 JUMPDEST
0x174 PUSH2 0x123
0x177 PUSH2 0x529
0x17a JUMP
---
0x173: JUMPDEST 
0x174: V125 = 0x123
0x177: V126 = 0x529
0x17a: JUMP 0x529
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x17b
[0x17b:0x18e]
---
Predecessors: []
Successors: []
---
0x17b JUMPDEST
0x17c PUSH1 0x40
0x17e MLOAD
0x17f SWAP1
0x180 ISZERO
0x181 ISZERO
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 PUSH1 0x40
0x189 MLOAD
0x18a DUP1
0x18b SWAP2
0x18c SUB
0x18d SWAP1
0x18e RETURN
---
0x17b: JUMPDEST 
0x17c: V127 = 0x40
0x17e: V128 = M[0x40]
0x180: V129 = ISZERO S0
0x181: V130 = ISZERO V129
0x183: M[V128] = V130
0x184: V131 = 0x20
0x186: V132 = ADD 0x20 V128
0x187: V133 = 0x40
0x189: V134 = M[0x40]
0x18c: V135 = SUB V132 V134
0x18e: RETURN V134 V135
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x18f
[0x18f:0x195]
---
Predecessors: [0x46]
Successors: [0x196, 0x19a]
---
0x18f JUMPDEST
0x190 CALLVALUE
0x191 ISZERO
0x192 PUSH2 0x19a
0x195 JUMPI
---
0x18f: JUMPDEST 
0x190: V136 = CALLVALUE
0x191: V137 = ISZERO V136
0x192: V138 = 0x19a
0x195: JUMPI 0x19a V137
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x196
[0x196:0x199]
---
Predecessors: [0x18f]
Successors: []
---
0x196 PUSH1 0x0
0x198 DUP1
0x199 REVERT
---
0x196: V139 = 0x0
0x199: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19a
[0x19a:0x1a1]
---
Predecessors: [0x18f]
Successors: [0x582]
---
0x19a JUMPDEST
0x19b PUSH2 0x156
0x19e PUSH2 0x582
0x1a1 JUMP
---
0x19a: JUMPDEST 
0x19b: V140 = 0x156
0x19e: V141 = 0x582
0x1a1: JUMP 0x582
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V12, 0x156]

================================

Block 0x1a2
[0x1a2:0x1b3]
---
Predecessors: []
Successors: []
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 SWAP1
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP1
0x1b0 SWAP2
0x1b1 SUB
0x1b2 SWAP1
0x1b3 RETURN
---
0x1a2: JUMPDEST 
0x1a3: V142 = 0x40
0x1a5: V143 = M[0x40]
0x1a8: M[V143] = S0
0x1a9: V144 = 0x20
0x1ab: V145 = ADD 0x20 V143
0x1ac: V146 = 0x40
0x1ae: V147 = M[0x40]
0x1b1: V148 = SUB V145 V147
0x1b3: RETURN V147 V148
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b4
[0x1b4:0x1ba]
---
Predecessors: [0x51]
Successors: [0x1bb, 0x1bf]
---
0x1b4 JUMPDEST
0x1b5 CALLVALUE
0x1b6 ISZERO
0x1b7 PUSH2 0x1bf
0x1ba JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V149 = CALLVALUE
0x1b6: V150 = ISZERO V149
0x1b7: V151 = 0x1bf
0x1ba: JUMPI 0x1bf V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x1b4]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V152 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bf
[0x1bf:0x1c6]
---
Predecessors: [0x1b4]
Successors: [0x591]
---
0x1bf JUMPDEST
0x1c0 PUSH2 0x156
0x1c3 PUSH2 0x591
0x1c6 JUMP
---
0x1bf: JUMPDEST 
0x1c0: V153 = 0x156
0x1c3: V154 = 0x591
0x1c6: JUMP 0x591
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V12, 0x156]

================================

Block 0x1c7
[0x1c7:0x1d8]
---
Predecessors: []
Successors: []
---
0x1c7 JUMPDEST
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb SWAP1
0x1cc DUP2
0x1cd MSTORE
0x1ce PUSH1 0x20
0x1d0 ADD
0x1d1 PUSH1 0x40
0x1d3 MLOAD
0x1d4 DUP1
0x1d5 SWAP2
0x1d6 SUB
0x1d7 SWAP1
0x1d8 RETURN
---
0x1c7: JUMPDEST 
0x1c8: V155 = 0x40
0x1ca: V156 = M[0x40]
0x1cd: M[V156] = S0
0x1ce: V157 = 0x20
0x1d0: V158 = ADD 0x20 V156
0x1d1: V159 = 0x40
0x1d3: V160 = M[0x40]
0x1d6: V161 = SUB V158 V160
0x1d8: RETURN V160 V161
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d9
[0x1d9:0x1df]
---
Predecessors: [0x5c]
Successors: [0x1e0, 0x1e4]
---
0x1d9 JUMPDEST
0x1da CALLVALUE
0x1db ISZERO
0x1dc PUSH2 0x1e4
0x1df JUMPI
---
0x1d9: JUMPDEST 
0x1da: V162 = CALLVALUE
0x1db: V163 = ISZERO V162
0x1dc: V164 = 0x1e4
0x1df: JUMPI 0x1e4 V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e0
[0x1e0:0x1e3]
---
Predecessors: [0x1d9]
Successors: []
---
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 REVERT
---
0x1e0: V165 = 0x0
0x1e3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e4
[0x1e4:0x1eb]
---
Predecessors: [0x1d9]
Successors: [0x60c]
---
0x1e4 JUMPDEST
0x1e5 PUSH2 0x156
0x1e8 PUSH2 0x60c
0x1eb JUMP
---
0x1e4: JUMPDEST 
0x1e5: V166 = 0x156
0x1e8: V167 = 0x60c
0x1eb: JUMP 0x60c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V12, 0x156]

================================

Block 0x1ec
[0x1ec:0x1fd]
---
Predecessors: []
Successors: []
---
0x1ec JUMPDEST
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 SWAP1
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 PUSH1 0x40
0x1f8 MLOAD
0x1f9 DUP1
0x1fa SWAP2
0x1fb SUB
0x1fc SWAP1
0x1fd RETURN
---
0x1ec: JUMPDEST 
0x1ed: V168 = 0x40
0x1ef: V169 = M[0x40]
0x1f2: M[V169] = S0
0x1f3: V170 = 0x20
0x1f5: V171 = ADD 0x20 V169
0x1f6: V172 = 0x40
0x1f8: V173 = M[0x40]
0x1fb: V174 = SUB V171 V173
0x1fd: RETURN V173 V174
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1fe
[0x1fe:0x204]
---
Predecessors: [0x67]
Successors: [0x205, 0x209]
---
0x1fe JUMPDEST
0x1ff CALLVALUE
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V175 = CALLVALUE
0x200: V176 = ISZERO V175
0x201: V177 = 0x209
0x204: JUMPI 0x209 V176
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1fe]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V178 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x209
[0x209:0x210]
---
Predecessors: [0x1fe]
Successors: [0x665]
---
0x209 JUMPDEST
0x20a PUSH2 0x123
0x20d PUSH2 0x665
0x210 JUMP
---
0x209: JUMPDEST 
0x20a: V179 = 0x123
0x20d: V180 = 0x665
0x210: JUMP 0x665
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V12, 0x123]

================================

Block 0x211
[0x211:0x224]
---
Predecessors: []
Successors: []
---
0x211 JUMPDEST
0x212 PUSH1 0x40
0x214 MLOAD
0x215 SWAP1
0x216 ISZERO
0x217 ISZERO
0x218 DUP2
0x219 MSTORE
0x21a PUSH1 0x20
0x21c ADD
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 SWAP2
0x222 SUB
0x223 SWAP1
0x224 RETURN
---
0x211: JUMPDEST 
0x212: V181 = 0x40
0x214: V182 = M[0x40]
0x216: V183 = ISZERO S0
0x217: V184 = ISZERO V183
0x219: M[V182] = V184
0x21a: V185 = 0x20
0x21c: V186 = ADD 0x20 V182
0x21d: V187 = 0x40
0x21f: V188 = M[0x40]
0x222: V189 = SUB V186 V188
0x224: RETURN V188 V189
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x72]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V190 = CALLVALUE
0x227: V191 = ISZERO V190
0x228: V192 = 0x230
0x22b: JUMPI 0x230 V191
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V193 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x225]
Successors: [0x68a]
---
0x230 JUMPDEST
0x231 PUSH2 0xde
0x234 PUSH2 0x68a
0x237 JUMP
---
0x230: JUMPDEST 
0x231: V194 = 0xde
0x234: V195 = 0x68a
0x237: JUMP 0x68a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0x238
[0x238:0x239]
---
Predecessors: []
Successors: []
---
0x238 JUMPDEST
0x239 STOP
---
0x238: JUMPDEST 
0x239: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23a
[0x23a:0x240]
---
Predecessors: [0x7d]
Successors: [0x241, 0x245]
---
0x23a JUMPDEST
0x23b CALLVALUE
0x23c ISZERO
0x23d PUSH2 0x245
0x240 JUMPI
---
0x23a: JUMPDEST 
0x23b: V196 = CALLVALUE
0x23c: V197 = ISZERO V196
0x23d: V198 = 0x245
0x240: JUMPI 0x245 V197
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x241
[0x241:0x244]
---
Predecessors: [0x23a]
Successors: []
---
0x241 PUSH1 0x0
0x243 DUP1
0x244 REVERT
---
0x241: V199 = 0x0
0x244: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x245
[0x245:0x24c]
---
Predecessors: [0x23a]
Successors: [0x6ed]
---
0x245 JUMPDEST
0x246 PUSH2 0xde
0x249 PUSH2 0x6ed
0x24c JUMP
---
0x245: JUMPDEST 
0x246: V200 = 0xde
0x249: V201 = 0x6ed
0x24c: JUMP 0x6ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0x24d
[0x24d:0x24e]
---
Predecessors: []
Successors: []
---
0x24d JUMPDEST
0x24e STOP
---
0x24d: JUMPDEST 
0x24e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x24f
[0x24f:0x255]
---
Predecessors: [0x88]
Successors: [0x256, 0x25a]
---
0x24f JUMPDEST
0x250 CALLVALUE
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x24f: JUMPDEST 
0x250: V202 = CALLVALUE
0x251: V203 = ISZERO V202
0x252: V204 = 0x25a
0x255: JUMPI 0x25a V203
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x24f]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V205 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25a
[0x25a:0x261]
---
Predecessors: [0x24f]
Successors: [0x81d]
---
0x25a JUMPDEST
0x25b PUSH2 0xf4
0x25e PUSH2 0x81d
0x261 JUMP
---
0x25a: JUMPDEST 
0x25b: V206 = 0xf4
0x25e: V207 = 0x81d
0x261: JUMP 0x81d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf4]
Exit stack: [V12, 0xf4]

================================

Block 0x262
[0x262:0x27d]
---
Predecessors: []
Successors: []
---
0x262 JUMPDEST
0x263 PUSH1 0x40
0x265 MLOAD
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e SWAP1
0x26f SWAP2
0x270 AND
0x271 DUP2
0x272 MSTORE
0x273 PUSH1 0x20
0x275 ADD
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a SWAP2
0x27b SUB
0x27c SWAP1
0x27d RETURN
---
0x262: JUMPDEST 
0x263: V208 = 0x40
0x265: V209 = M[0x40]
0x266: V210 = 0x1
0x268: V211 = 0xa0
0x26a: V212 = 0x2
0x26c: V213 = EXP 0x2 0xa0
0x26d: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V215 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x272: M[V209] = V215
0x273: V216 = 0x20
0x275: V217 = ADD 0x20 V209
0x276: V218 = 0x40
0x278: V219 = M[0x40]
0x27b: V220 = SUB V217 V219
0x27d: RETURN V219 V220
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x27e
[0x27e:0x284]
---
Predecessors: [0x93]
Successors: [0x285, 0x289]
---
0x27e JUMPDEST
0x27f CALLVALUE
0x280 ISZERO
0x281 PUSH2 0x289
0x284 JUMPI
---
0x27e: JUMPDEST 
0x27f: V221 = CALLVALUE
0x280: V222 = ISZERO V221
0x281: V223 = 0x289
0x284: JUMPI 0x289 V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x27e]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V224 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0x27e]
Successors: [0x82c]
---
0x289 JUMPDEST
0x28a PUSH2 0x156
0x28d PUSH2 0x82c
0x290 JUMP
---
0x289: JUMPDEST 
0x28a: V225 = 0x156
0x28d: V226 = 0x82c
0x290: JUMP 0x82c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V12, 0x156]

================================

Block 0x291
[0x291:0x2a2]
---
Predecessors: []
Successors: []
---
0x291 JUMPDEST
0x292 PUSH1 0x40
0x294 MLOAD
0x295 SWAP1
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x291: JUMPDEST 
0x292: V227 = 0x40
0x294: V228 = M[0x40]
0x297: M[V228] = S0
0x298: V229 = 0x20
0x29a: V230 = ADD 0x20 V228
0x29b: V231 = 0x40
0x29d: V232 = M[0x40]
0x2a0: V233 = SUB V230 V232
0x2a2: RETURN V232 V233
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a3
[0x2a3:0x2a9]
---
Predecessors: [0x9e]
Successors: [0x2aa, 0x2ae]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V234 = CALLVALUE
0x2a5: V235 = ISZERO V234
0x2a6: V236 = 0x2ae
0x2a9: JUMPI 0x2ae V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x2a3]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V237 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ae
[0x2ae:0x2b5]
---
Predecessors: [0x2a3]
Successors: [0x834]
---
0x2ae JUMPDEST
0x2af PUSH2 0x156
0x2b2 PUSH2 0x834
0x2b5 JUMP
---
0x2ae: JUMPDEST 
0x2af: V238 = 0x156
0x2b2: V239 = 0x834
0x2b5: JUMP 0x834
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V12, 0x156]

================================

Block 0x2b6
[0x2b6:0x2c7]
---
Predecessors: []
Successors: []
---
0x2b6 JUMPDEST
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba SWAP1
0x2bb DUP2
0x2bc MSTORE
0x2bd PUSH1 0x20
0x2bf ADD
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 DUP1
0x2c4 SWAP2
0x2c5 SUB
0x2c6 SWAP1
0x2c7 RETURN
---
0x2b6: JUMPDEST 
0x2b7: V240 = 0x40
0x2b9: V241 = M[0x40]
0x2bc: M[V241] = S0
0x2bd: V242 = 0x20
0x2bf: V243 = ADD 0x20 V241
0x2c0: V244 = 0x40
0x2c2: V245 = M[0x40]
0x2c5: V246 = SUB V243 V245
0x2c7: RETURN V245 V246
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c8
[0x2c8:0x2ce]
---
Predecessors: [0xa9]
Successors: [0x2cf, 0x2d3]
---
0x2c8 JUMPDEST
0x2c9 CALLVALUE
0x2ca ISZERO
0x2cb PUSH2 0x2d3
0x2ce JUMPI
---
0x2c8: JUMPDEST 
0x2c9: V247 = CALLVALUE
0x2ca: V248 = ISZERO V247
0x2cb: V249 = 0x2d3
0x2ce: JUMPI 0x2d3 V248
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cf
[0x2cf:0x2d2]
---
Predecessors: [0x2c8]
Successors: []
---
0x2cf PUSH1 0x0
0x2d1 DUP1
0x2d2 REVERT
---
0x2cf: V250 = 0x0
0x2d2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d3
[0x2d3:0x2da]
---
Predecessors: [0x2c8]
Successors: [0x839]
---
0x2d3 JUMPDEST
0x2d4 PUSH2 0x156
0x2d7 PUSH2 0x839
0x2da JUMP
---
0x2d3: JUMPDEST 
0x2d4: V251 = 0x156
0x2d7: V252 = 0x839
0x2da: JUMP 0x839
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V12, 0x156]

================================

Block 0x2db
[0x2db:0x2f4]
---
Predecessors: []
Successors: [0x33d]
---
0x2db JUMPDEST
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df SWAP1
0x2e0 DUP2
0x2e1 MSTORE
0x2e2 PUSH1 0x20
0x2e4 ADD
0x2e5 PUSH1 0x40
0x2e7 MLOAD
0x2e8 DUP1
0x2e9 SWAP2
0x2ea SUB
0x2eb SWAP1
0x2ec RETURN
0x2ed JUMPDEST
0x2ee PUSH2 0xde
0x2f1 PUSH2 0x33d
0x2f4 JUMP
---
0x2db: JUMPDEST 
0x2dc: V253 = 0x40
0x2de: V254 = M[0x40]
0x2e1: M[V254] = S0
0x2e2: V255 = 0x20
0x2e4: V256 = ADD 0x20 V254
0x2e5: V257 = 0x40
0x2e7: V258 = M[0x40]
0x2ea: V259 = SUB V256 V258
0x2ec: RETURN V258 V259
0x2ed: JUMPDEST 
0x2ee: V260 = 0xde
0x2f1: V261 = 0x33d
0x2f4: JUMP 0x33d
---
Entry stack: []
Stack pops: 2
Stack additions: [0xde]
Exit stack: []

================================

Block 0x2f5
[0x2f5:0x2f6]
---
Predecessors: []
Successors: []
---
0x2f5 JUMPDEST
0x2f6 STOP
---
0x2f5: JUMPDEST 
0x2f6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f7
[0x2f7:0x2fd]
---
Predecessors: [0xbf]
Successors: [0x2fe, 0x302]
---
0x2f7 JUMPDEST
0x2f8 CALLVALUE
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V262 = CALLVALUE
0x2f9: V263 = ISZERO V262
0x2fa: V264 = 0x302
0x2fd: JUMPI 0x302 V263
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2f7]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V265 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x302
[0x302:0x309]
---
Predecessors: [0x2f7]
Successors: [0x83f]
---
0x302 JUMPDEST
0x303 PUSH2 0x156
0x306 PUSH2 0x83f
0x309 JUMP
---
0x302: JUMPDEST 
0x303: V266 = 0x156
0x306: V267 = 0x83f
0x309: JUMP 0x83f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V12, 0x156]

================================

Block 0x30a
[0x30a:0x31b]
---
Predecessors: []
Successors: []
---
0x30a JUMPDEST
0x30b PUSH1 0x40
0x30d MLOAD
0x30e SWAP1
0x30f DUP2
0x310 MSTORE
0x311 PUSH1 0x20
0x313 ADD
0x314 PUSH1 0x40
0x316 MLOAD
0x317 DUP1
0x318 SWAP2
0x319 SUB
0x31a SWAP1
0x31b RETURN
---
0x30a: JUMPDEST 
0x30b: V268 = 0x40
0x30d: V269 = M[0x40]
0x310: M[V269] = S0
0x311: V270 = 0x20
0x313: V271 = ADD 0x20 V269
0x314: V272 = 0x40
0x316: V273 = M[0x40]
0x319: V274 = SUB V271 V273
0x31b: RETURN V273 V274
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x31c
[0x31c:0x322]
---
Predecessors: [0xca]
Successors: [0x323, 0x327]
---
0x31c JUMPDEST
0x31d CALLVALUE
0x31e ISZERO
0x31f PUSH2 0x327
0x322 JUMPI
---
0x31c: JUMPDEST 
0x31d: V275 = CALLVALUE
0x31e: V276 = ISZERO V275
0x31f: V277 = 0x327
0x322: JUMPI 0x327 V276
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x323
[0x323:0x326]
---
Predecessors: [0x31c]
Successors: []
---
0x323 PUSH1 0x0
0x325 DUP1
0x326 REVERT
---
0x323: V278 = 0x0
0x326: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x327
[0x327:0x33a]
---
Predecessors: [0x31c]
Successors: [0x845]
---
0x327 JUMPDEST
0x328 PUSH2 0xde
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 PUSH1 0x4
0x335 CALLDATALOAD
0x336 AND
0x337 PUSH2 0x845
0x33a JUMP
---
0x327: JUMPDEST 
0x328: V279 = 0xde
0x32b: V280 = 0x1
0x32d: V281 = 0xa0
0x32f: V282 = 0x2
0x331: V283 = EXP 0x2 0xa0
0x332: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x333: V285 = 0x4
0x335: V286 = CALLDATALOAD 0x4
0x336: V287 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0x337: V288 = 0x845
0x33a: JUMP 0x845
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde, V287]
Exit stack: [V12, 0xde, V287]

================================

Block 0x33b
[0x33b:0x33c]
---
Predecessors: []
Successors: []
---
0x33b JUMPDEST
0x33c STOP
---
0x33b: JUMPDEST 
0x33c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x33d
[0x33d:0x349]
---
Predecessors: [0xd6, 0x2db]
Successors: [0x529]
---
0x33d JUMPDEST
0x33e PUSH1 0x0
0x340 DUP1
0x341 PUSH1 0x0
0x343 PUSH2 0x34a
0x346 PUSH2 0x529
0x349 JUMP
---
0x33d: JUMPDEST 
0x33e: V289 = 0x0
0x341: V290 = 0x0
0x343: V291 = 0x34a
0x346: V292 = 0x529
0x349: JUMP 0x529
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x34a]
Exit stack: [V12, 0xde, 0x0, 0x0, 0x0, 0x34a]

================================

Block 0x34a
[0x34a:0x350]
---
Predecessors: [0x57f]
Successors: [0x351, 0x352]
---
0x34a JUMPDEST
0x34b ISZERO
0x34c ISZERO
0x34d PUSH2 0x352
0x350 JUMPI
---
0x34a: JUMPDEST 
0x34b: V293 = ISZERO S0
0x34c: V294 = ISZERO V293
0x34d: V295 = 0x352
0x350: JUMPI 0x352 V294
---
Entry stack: [V12, 0xde, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xde, S3, 0x0, S1]

================================

Block 0x351
[0x351:0x351]
---
Predecessors: [0x34a]
Successors: []
---
0x351 INVALID
---
0x351: INVALID 
---
Entry stack: [V12, 0xde, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S2, 0x0, S0]

================================

Block 0x352
[0x352:0x35c]
---
Predecessors: [0x34a]
Successors: [0x60c]
---
0x352 JUMPDEST
0x353 CALLVALUE
0x354 SWAP3
0x355 POP
0x356 PUSH2 0x35d
0x359 PUSH2 0x60c
0x35c JUMP
---
0x352: JUMPDEST 
0x353: V296 = CALLVALUE
0x356: V297 = 0x35d
0x359: V298 = 0x60c
0x35c: JUMP 0x60c
---
Entry stack: [V12, 0xde, S2, 0x0, S0]
Stack pops: 3
Stack additions: [V296, S1, S0, 0x35d]
Exit stack: [V12, 0xde, V296, 0x0, S0, 0x35d]

================================

Block 0x35d
[0x35d:0x36e]
---
Predecessors: [0x57f]
Successors: [0x8a2]
---
0x35d JUMPDEST
0x35e SWAP2
0x35f POP
0x360 PUSH2 0x36f
0x363 DUP4
0x364 DUP4
0x365 PUSH4 0xffffffff
0x36a PUSH2 0x8a2
0x36d AND
0x36e JUMP
---
0x35d: JUMPDEST 
0x360: V299 = 0x36f
0x365: V300 = 0xffffffff
0x36a: V301 = 0x8a2
0x36d: V302 = AND 0x8a2 0xffffffff
0x36e: JUMP 0x8a2
---
Entry stack: [V12, 0xde, S3, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S3, S0, S1, 0x36f, S3, S0]
Exit stack: [V12, 0xde, S3, S0, S1, 0x36f, S3, S0]

================================

Block 0x36f
[0x36f:0x379]
---
Predecessors: [0x8ca]
Successors: [0x591]
---
0x36f JUMPDEST
0x370 SWAP1
0x371 POP
0x372 DUP1
0x373 PUSH2 0x37a
0x376 PUSH2 0x591
0x379 JUMP
---
0x36f: JUMPDEST 
0x373: V303 = 0x37a
0x376: V304 = 0x591
0x379: JUMP 0x591
---
Entry stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S1, S0]
Stack pops: 2
Stack additions: [S0, S0, 0x37a]
Exit stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S0, S0, 0x37a]

================================

Block 0x37a
[0x37a:0x380]
---
Predecessors: [0x609]
Successors: [0x381, 0x385]
---
0x37a JUMPDEST
0x37b LT
0x37c ISZERO
0x37d PUSH2 0x385
0x380 JUMPI
---
0x37a: JUMPDEST 
0x37b: V305 = LT S0 S1
0x37c: V306 = ISZERO V305
0x37d: V307 = 0x385
0x380: JUMPI 0x385 V306
---
Entry stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2]

================================

Block 0x381
[0x381:0x384]
---
Predecessors: [0x37a]
Successors: []
---
0x381 PUSH1 0x0
0x383 DUP1
0x384 REVERT
---
0x381: V308 = 0x0
0x384: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]

================================

Block 0x385
[0x385:0x3db]
---
Predecessors: [0x37a]
Successors: [0x8d1]
---
0x385 JUMPDEST
0x386 CALLER
0x387 PUSH1 0x1
0x389 PUSH1 0xa0
0x38b PUSH1 0x2
0x38d EXP
0x38e SUB
0x38f AND
0x390 PUSH32 0xff617f3e2f581705274c96e449cb6db5e8766c51e0a0fa4e9c425db2398cfb6c
0x3b1 DUP3
0x3b2 DUP6
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 SWAP2
0x3b7 DUP3
0x3b8 MSTORE
0x3b9 PUSH1 0x20
0x3bb DUP3
0x3bc ADD
0x3bd MSTORE
0x3be PUSH1 0x40
0x3c0 SWAP1
0x3c1 DUP2
0x3c2 ADD
0x3c3 SWAP1
0x3c4 MLOAD
0x3c5 DUP1
0x3c6 SWAP2
0x3c7 SUB
0x3c8 SWAP1
0x3c9 LOG2
0x3ca PUSH1 0x5
0x3cc SLOAD
0x3cd PUSH2 0x3dc
0x3d0 SWAP1
0x3d1 CALLVALUE
0x3d2 PUSH4 0xffffffff
0x3d7 PUSH2 0x8d1
0x3da AND
0x3db JUMP
---
0x385: JUMPDEST 
0x386: V309 = CALLER
0x387: V310 = 0x1
0x389: V311 = 0xa0
0x38b: V312 = 0x2
0x38d: V313 = EXP 0x2 0xa0
0x38e: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x390: V316 = 0xff617f3e2f581705274c96e449cb6db5e8766c51e0a0fa4e9c425db2398cfb6c
0x3b3: V317 = 0x40
0x3b5: V318 = M[0x40]
0x3b8: M[V318] = S0
0x3b9: V319 = 0x20
0x3bc: V320 = ADD V318 0x20
0x3bd: M[V320] = S2
0x3be: V321 = 0x40
0x3c2: V322 = ADD 0x40 V318
0x3c4: V323 = M[0x40]
0x3c7: V324 = SUB V322 V323
0x3c9: LOG V323 V324 0xff617f3e2f581705274c96e449cb6db5e8766c51e0a0fa4e9c425db2398cfb6c V315
0x3ca: V325 = 0x5
0x3cc: V326 = S[0x5]
0x3cd: V327 = 0x3dc
0x3d1: V328 = CALLVALUE
0x3d2: V329 = 0xffffffff
0x3d7: V330 = 0x8d1
0x3da: V331 = AND 0x8d1 0xffffffff
0x3db: JUMP 0x8d1
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x3dc, V326, V328]
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0, 0x3dc, V326, V328]

================================

Block 0x3dc
[0x3dc:0x439]
---
Predecessors: [0x8ca]
Successors: [0x43a, 0x43e]
---
0x3dc JUMPDEST
0x3dd PUSH1 0x5
0x3df SSTORE
0x3e0 PUSH1 0x2
0x3e2 SLOAD
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb AND
0x3ec PUSH4 0xa9059cbb
0x3f1 CALLER
0x3f2 DUP4
0x3f3 PUSH1 0x0
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 PUSH1 0x20
0x3fa ADD
0x3fb MSTORE
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff PUSH1 0xe0
0x401 PUSH1 0x2
0x403 EXP
0x404 PUSH4 0xffffffff
0x409 DUP6
0x40a AND
0x40b MUL
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x1
0x410 PUSH1 0xa0
0x412 PUSH1 0x2
0x414 EXP
0x415 SUB
0x416 SWAP1
0x417 SWAP3
0x418 AND
0x419 PUSH1 0x4
0x41b DUP4
0x41c ADD
0x41d MSTORE
0x41e PUSH1 0x24
0x420 DUP3
0x421 ADD
0x422 MSTORE
0x423 PUSH1 0x44
0x425 ADD
0x426 PUSH1 0x20
0x428 PUSH1 0x40
0x42a MLOAD
0x42b DUP1
0x42c DUP4
0x42d SUB
0x42e DUP2
0x42f PUSH1 0x0
0x431 DUP8
0x432 DUP1
0x433 EXTCODESIZE
0x434 ISZERO
0x435 ISZERO
0x436 PUSH2 0x43e
0x439 JUMPI
---
0x3dc: JUMPDEST 
0x3dd: V332 = 0x5
0x3df: S[0x5] = S0
0x3e0: V333 = 0x2
0x3e2: V334 = S[0x2]
0x3e3: V335 = 0x1
0x3e5: V336 = 0xa0
0x3e7: V337 = 0x2
0x3e9: V338 = EXP 0x2 0xa0
0x3ea: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3eb: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x3ec: V341 = 0xa9059cbb
0x3f1: V342 = CALLER
0x3f3: V343 = 0x0
0x3f5: V344 = 0x40
0x3f7: V345 = M[0x40]
0x3f8: V346 = 0x20
0x3fa: V347 = ADD 0x20 V345
0x3fb: M[V347] = 0x0
0x3fc: V348 = 0x40
0x3fe: V349 = M[0x40]
0x3ff: V350 = 0xe0
0x401: V351 = 0x2
0x403: V352 = EXP 0x2 0xe0
0x404: V353 = 0xffffffff
0x40a: V354 = AND 0xa9059cbb 0xffffffff
0x40b: V355 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x40d: M[V349] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x40e: V356 = 0x1
0x410: V357 = 0xa0
0x412: V358 = 0x2
0x414: V359 = EXP 0x2 0xa0
0x415: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x418: V361 = AND V342 0xffffffffffffffffffffffffffffffffffffffff
0x419: V362 = 0x4
0x41c: V363 = ADD V349 0x4
0x41d: M[V363] = V361
0x41e: V364 = 0x24
0x421: V365 = ADD V349 0x24
0x422: M[V365] = S1
0x423: V366 = 0x44
0x425: V367 = ADD 0x44 V349
0x426: V368 = 0x20
0x428: V369 = 0x40
0x42a: V370 = M[0x40]
0x42d: V371 = SUB V367 V370
0x42f: V372 = 0x0
0x433: V373 = EXTCODESIZE V340
0x434: V374 = ISZERO V373
0x435: V375 = ISZERO V374
0x436: V376 = 0x43e
0x439: JUMPI 0x43e V375
---
Entry stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S1, S0]
Stack pops: 2
Stack additions: [S1, V340, 0xa9059cbb, V367, 0x20, V370, V371, V370, 0x0, V340]
Exit stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S1, V340, 0xa9059cbb, V367, 0x20, V370, V371, V370, 0x0, V340]

================================

Block 0x43a
[0x43a:0x43d]
---
Predecessors: [0x3dc]
Successors: []
---
0x43a PUSH1 0x0
0x43c DUP1
0x43d REVERT
---
0x43a: V377 = 0x0
0x43d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, S13, {0x0, 0xde}, S11, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S9, V340, 0xa9059cbb, V367, 0x20, V370, V371, V370, 0x0, V340]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S13, {0x0, 0xde}, S11, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S9, V340, 0xa9059cbb, V367, 0x20, V370, V371, V370, 0x0, V340]

================================

Block 0x43e
[0x43e:0x44a]
---
Predecessors: [0x3dc]
Successors: [0x44b, 0x44f]
---
0x43e JUMPDEST
0x43f PUSH2 0x2c6
0x442 GAS
0x443 SUB
0x444 CALL
0x445 ISZERO
0x446 ISZERO
0x447 PUSH2 0x44f
0x44a JUMPI
---
0x43e: JUMPDEST 
0x43f: V378 = 0x2c6
0x442: V379 = GAS
0x443: V380 = SUB V379 0x2c6
0x444: V381 = CALL V380 V340 0x0 V370 V371 V370 0x20
0x445: V382 = ISZERO V381
0x446: V383 = ISZERO V382
0x447: V384 = 0x44f
0x44a: JUMPI 0x44f V383
---
Entry stack: [V12, 0xde, S13, {0x0, 0xde}, S11, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S9, V340, 0xa9059cbb, V367, 0x20, V370, V371, V370, 0x0, V340]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xde, S13, {0x0, 0xde}, S11, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S9, V340, 0xa9059cbb, V367]

================================

Block 0x44b
[0x44b:0x44e]
---
Predecessors: [0x43e]
Successors: []
---
0x44b PUSH1 0x0
0x44d DUP1
0x44e REVERT
---
0x44b: V385 = 0x0
0x44e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, S7, {0x0, 0xde}, S5, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S7, {0x0, 0xde}, S5, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S3, S2, 0xa9059cbb, S0]

================================

Block 0x44f
[0x44f:0x488]
---
Predecessors: [0x43e]
Successors: [0x489, 0x48d]
---
0x44f JUMPDEST
0x450 POP
0x451 POP
0x452 POP
0x453 PUSH1 0x40
0x455 MLOAD
0x456 DUP1
0x457 MLOAD
0x458 POP
0x459 POP
0x45a PUSH1 0x1
0x45c SLOAD
0x45d PUSH1 0x1
0x45f PUSH1 0xa0
0x461 PUSH1 0x2
0x463 EXP
0x464 SUB
0x465 AND
0x466 CALLVALUE
0x467 DUP1
0x468 ISZERO
0x469 PUSH2 0x8fc
0x46c MUL
0x46d SWAP1
0x46e PUSH1 0x40
0x470 MLOAD
0x471 PUSH1 0x0
0x473 PUSH1 0x40
0x475 MLOAD
0x476 DUP1
0x477 DUP4
0x478 SUB
0x479 DUP2
0x47a DUP6
0x47b DUP9
0x47c DUP9
0x47d CALL
0x47e SWAP4
0x47f POP
0x480 POP
0x481 POP
0x482 POP
0x483 ISZERO
0x484 ISZERO
0x485 PUSH2 0x48d
0x488 JUMPI
---
0x44f: JUMPDEST 
0x453: V386 = 0x40
0x455: V387 = M[0x40]
0x457: V388 = M[V387]
0x45a: V389 = 0x1
0x45c: V390 = S[0x1]
0x45d: V391 = 0x1
0x45f: V392 = 0xa0
0x461: V393 = 0x2
0x463: V394 = EXP 0x2 0xa0
0x464: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x465: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x466: V397 = CALLVALUE
0x468: V398 = ISZERO V397
0x469: V399 = 0x8fc
0x46c: V400 = MUL 0x8fc V398
0x46e: V401 = 0x40
0x470: V402 = M[0x40]
0x471: V403 = 0x0
0x473: V404 = 0x40
0x475: V405 = M[0x40]
0x478: V406 = SUB V402 V405
0x47d: V407 = CALL V400 V396 V397 V405 V406 V405 0x0
0x483: V408 = ISZERO V407
0x484: V409 = ISZERO V408
0x485: V410 = 0x48d
0x488: JUMPI 0x48d V409
---
Entry stack: [V12, 0xde, S7, {0x0, 0xde}, S5, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xde, S7, {0x0, 0xde}, S5, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S3]

================================

Block 0x489
[0x489:0x48c]
---
Predecessors: [0x44f]
Successors: []
---
0x489 PUSH1 0x0
0x48b DUP1
0x48c REVERT
---
0x489: V411 = 0x0
0x48c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S0]

================================

Block 0x48d
[0x48d:0x48d]
---
Predecessors: [0x44f]
Successors: [0x48e]
---
0x48d JUMPDEST
---
0x48d: JUMPDEST 
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S0]

================================

Block 0x48e
[0x48e:0x48e]
---
Predecessors: [0x48d]
Successors: [0x48f]
---
0x48e JUMPDEST
---
0x48e: JUMPDEST 
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S0]

================================

Block 0x48f
[0x48f:0x493]
---
Predecessors: [0x48e]
Successors: [0xde]
---
0x48f JUMPDEST
0x490 POP
0x491 POP
0x492 POP
0x493 JUMP
---
0x48f: JUMPDEST 
0x493: JUMP {0x0, 0xde}
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xde, S4]

================================

Block 0x494
[0x494:0x4a2]
---
Predecessors: [0xec]
Successors: [0xf4]
---
0x494 JUMPDEST
0x495 PUSH1 0x1
0x497 SLOAD
0x498 PUSH1 0x1
0x49a PUSH1 0xa0
0x49c PUSH1 0x2
0x49e EXP
0x49f SUB
0x4a0 AND
0x4a1 DUP2
0x4a2 JUMP
---
0x494: JUMPDEST 
0x495: V412 = 0x1
0x497: V413 = S[0x1]
0x498: V414 = 0x1
0x49a: V415 = 0xa0
0x49c: V416 = 0x2
0x49e: V417 = EXP 0x2 0xa0
0x49f: V418 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a0: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x4a2: JUMP 0xf4
---
Entry stack: [V12, 0xf4]
Stack pops: 1
Stack additions: [S0, V419]
Exit stack: [V12, 0xf4, V419]

================================

Block 0x4a3
[0x4a3:0x4ab]
---
Predecessors: [0x11b]
Successors: [0x123]
---
0x4a3 JUMPDEST
0x4a4 PUSH1 0x4
0x4a6 SLOAD
0x4a7 PUSH1 0xff
0x4a9 AND
0x4aa DUP2
0x4ab JUMP
---
0x4a3: JUMPDEST 
0x4a4: V420 = 0x4
0x4a6: V421 = S[0x4]
0x4a7: V422 = 0xff
0x4a9: V423 = AND 0xff V421
0x4ab: JUMP 0x123
---
Entry stack: [V12, 0x123]
Stack pops: 1
Stack additions: [S0, V423]
Exit stack: [V12, 0x123, V423]

================================

Block 0x4ac
[0x4ac:0x502]
---
Predecessors: [0x142]
Successors: [0x503, 0x507]
---
0x4ac JUMPDEST
0x4ad PUSH1 0x2
0x4af SLOAD
0x4b0 PUSH1 0x0
0x4b2 SWAP1
0x4b3 PUSH1 0x1
0x4b5 PUSH1 0xa0
0x4b7 PUSH1 0x2
0x4b9 EXP
0x4ba SUB
0x4bb AND
0x4bc PUSH4 0x70a08231
0x4c1 DUP4
0x4c2 DUP4
0x4c3 PUSH1 0x40
0x4c5 MLOAD
0x4c6 PUSH1 0x20
0x4c8 ADD
0x4c9 MSTORE
0x4ca PUSH1 0x40
0x4cc MLOAD
0x4cd PUSH1 0xe0
0x4cf PUSH1 0x2
0x4d1 EXP
0x4d2 PUSH4 0xffffffff
0x4d7 DUP5
0x4d8 AND
0x4d9 MUL
0x4da DUP2
0x4db MSTORE
0x4dc PUSH1 0x1
0x4de PUSH1 0xa0
0x4e0 PUSH1 0x2
0x4e2 EXP
0x4e3 SUB
0x4e4 SWAP1
0x4e5 SWAP2
0x4e6 AND
0x4e7 PUSH1 0x4
0x4e9 DUP3
0x4ea ADD
0x4eb MSTORE
0x4ec PUSH1 0x24
0x4ee ADD
0x4ef PUSH1 0x20
0x4f1 PUSH1 0x40
0x4f3 MLOAD
0x4f4 DUP1
0x4f5 DUP4
0x4f6 SUB
0x4f7 DUP2
0x4f8 PUSH1 0x0
0x4fa DUP8
0x4fb DUP1
0x4fc EXTCODESIZE
0x4fd ISZERO
0x4fe ISZERO
0x4ff PUSH2 0x507
0x502 JUMPI
---
0x4ac: JUMPDEST 
0x4ad: V424 = 0x2
0x4af: V425 = S[0x2]
0x4b0: V426 = 0x0
0x4b3: V427 = 0x1
0x4b5: V428 = 0xa0
0x4b7: V429 = 0x2
0x4b9: V430 = EXP 0x2 0xa0
0x4ba: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bb: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4bc: V433 = 0x70a08231
0x4c3: V434 = 0x40
0x4c5: V435 = M[0x40]
0x4c6: V436 = 0x20
0x4c8: V437 = ADD 0x20 V435
0x4c9: M[V437] = 0x0
0x4ca: V438 = 0x40
0x4cc: V439 = M[0x40]
0x4cd: V440 = 0xe0
0x4cf: V441 = 0x2
0x4d1: V442 = EXP 0x2 0xe0
0x4d2: V443 = 0xffffffff
0x4d8: V444 = AND 0x70a08231 0xffffffff
0x4d9: V445 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x4db: M[V439] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4dc: V446 = 0x1
0x4de: V447 = 0xa0
0x4e0: V448 = 0x2
0x4e2: V449 = EXP 0x2 0xa0
0x4e3: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e6: V451 = AND V112 0xffffffffffffffffffffffffffffffffffffffff
0x4e7: V452 = 0x4
0x4ea: V453 = ADD V439 0x4
0x4eb: M[V453] = V451
0x4ec: V454 = 0x24
0x4ee: V455 = ADD 0x24 V439
0x4ef: V456 = 0x20
0x4f1: V457 = 0x40
0x4f3: V458 = M[0x40]
0x4f6: V459 = SUB V455 V458
0x4f8: V460 = 0x0
0x4fc: V461 = EXTCODESIZE V432
0x4fd: V462 = ISZERO V461
0x4fe: V463 = ISZERO V462
0x4ff: V464 = 0x507
0x502: JUMPI 0x507 V463
---
Entry stack: [V12, 0x156, V112]
Stack pops: 1
Stack additions: [S0, 0x0, V432, 0x70a08231, V455, 0x20, V458, V459, V458, 0x0, V432]
Exit stack: [V12, 0x156, V112, 0x0, V432, 0x70a08231, V455, 0x20, V458, V459, V458, 0x0, V432]

================================

Block 0x503
[0x503:0x506]
---
Predecessors: [0x4ac]
Successors: []
---
0x503 PUSH1 0x0
0x505 DUP1
0x506 REVERT
---
0x503: V465 = 0x0
0x506: REVERT 0x0 0x0
---
Entry stack: [V12, 0x156, V112, 0x0, V432, 0x70a08231, V455, 0x20, V458, V459, V458, 0x0, V432]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x156, V112, 0x0, V432, 0x70a08231, V455, 0x20, V458, V459, V458, 0x0, V432]

================================

Block 0x507
[0x507:0x513]
---
Predecessors: [0x4ac]
Successors: [0x514, 0x518]
---
0x507 JUMPDEST
0x508 PUSH2 0x2c6
0x50b GAS
0x50c SUB
0x50d CALL
0x50e ISZERO
0x50f ISZERO
0x510 PUSH2 0x518
0x513 JUMPI
---
0x507: JUMPDEST 
0x508: V466 = 0x2c6
0x50b: V467 = GAS
0x50c: V468 = SUB V467 0x2c6
0x50d: V469 = CALL V468 V432 0x0 V458 V459 V458 0x20
0x50e: V470 = ISZERO V469
0x50f: V471 = ISZERO V470
0x510: V472 = 0x518
0x513: JUMPI 0x518 V471
---
Entry stack: [V12, 0x156, V112, 0x0, V432, 0x70a08231, V455, 0x20, V458, V459, V458, 0x0, V432]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x156, V112, 0x0, V432, 0x70a08231, V455]

================================

Block 0x514
[0x514:0x517]
---
Predecessors: [0x507]
Successors: []
---
0x514 PUSH1 0x0
0x516 DUP1
0x517 REVERT
---
0x514: V473 = 0x0
0x517: REVERT 0x0 0x0
---
Entry stack: [V12, 0x156, V112, 0x0, V432, 0x70a08231, V455]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x156, V112, 0x0, V432, 0x70a08231, V455]

================================

Block 0x518
[0x518:0x523]
---
Predecessors: [0x507]
Successors: [0x524]
---
0x518 JUMPDEST
0x519 POP
0x51a POP
0x51b POP
0x51c PUSH1 0x40
0x51e MLOAD
0x51f DUP1
0x520 MLOAD
0x521 SWAP2
0x522 POP
0x523 POP
---
0x518: JUMPDEST 
0x51c: V474 = 0x40
0x51e: V475 = M[0x40]
0x520: V476 = M[V475]
---
Entry stack: [V12, 0x156, V112, 0x0, V432, 0x70a08231, V455]
Stack pops: 4
Stack additions: [V476]
Exit stack: [V12, 0x156, V112, V476]

================================

Block 0x524
[0x524:0x528]
---
Predecessors: [0x518]
Successors: [0x156]
---
0x524 JUMPDEST
0x525 SWAP2
0x526 SWAP1
0x527 POP
0x528 JUMP
---
0x524: JUMPDEST 
0x528: JUMP 0x156
---
Entry stack: [V12, 0x156, V112, V476]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V476]

================================

Block 0x529
[0x529:0x53d]
---
Predecessors: [0x173, 0x33d]
Successors: [0x53e, 0x547]
---
0x529 JUMPDEST
0x52a PUSH1 0x4
0x52c SLOAD
0x52d PUSH1 0x0
0x52f SWAP1
0x530 PUSH1 0xff
0x532 AND
0x533 ISZERO
0x534 ISZERO
0x535 PUSH1 0x1
0x537 EQ
0x538 DUP1
0x539 ISZERO
0x53a PUSH2 0x547
0x53d JUMPI
---
0x529: JUMPDEST 
0x52a: V477 = 0x4
0x52c: V478 = S[0x4]
0x52d: V479 = 0x0
0x530: V480 = 0xff
0x532: V481 = AND 0xff V478
0x533: V482 = ISZERO V481
0x534: V483 = ISZERO V482
0x535: V484 = 0x1
0x537: V485 = EQ 0x1 V483
0x539: V486 = ISZERO V485
0x53a: V487 = 0x547
0x53d: JUMPI 0x547 V486
---
Entry stack: [V12, 0xde, 0x0, 0x0, S1, {0x123, 0x34a}]
Stack pops: 0
Stack additions: [0x0, V485]
Exit stack: [V12, 0xde, 0x0, 0x0, S1, {0x123, 0x34a}, 0x0, V485]

================================

Block 0x53e
[0x53e:0x546]
---
Predecessors: [0x529]
Successors: [0x547]
---
0x53e POP
0x53f PUSH4 0x5a01a040
0x544 TIMESTAMP
0x545 LT
0x546 ISZERO
---
0x53f: V488 = 0x5a01a040
0x544: V489 = TIMESTAMP
0x545: V490 = LT V489 0x5a01a040
0x546: V491 = ISZERO V490
---
Entry stack: [V12, 0xde, 0x0, 0x0, S3, {0x123, 0x34a}, 0x0, V485]
Stack pops: 1
Stack additions: [V491]
Exit stack: [V12, 0xde, 0x0, 0x0, S3, {0x123, 0x34a}, 0x0, V491]

================================

Block 0x547
[0x547:0x54d]
---
Predecessors: [0x529, 0x53e]
Successors: [0x54e, 0x569]
---
0x547 JUMPDEST
0x548 DUP1
0x549 ISZERO
0x54a PUSH2 0x569
0x54d JUMPI
---
0x547: JUMPDEST 
0x549: V492 = ISZERO S0
0x54a: V493 = 0x569
0x54d: JUMPI 0x569 V492
---
Entry stack: [V12, 0xde, 0x0, 0x0, S3, {0x123, 0x34a}, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, 0x0, 0x0, S3, {0x123, 0x34a}, 0x0, S0]

================================

Block 0x54e
[0x54e:0x564]
---
Predecessors: [0x547]
Successors: [0x8d1]
---
0x54e POP
0x54f PUSH2 0x565
0x552 PUSH4 0x5a01a040
0x557 PUSH3 0x1baf80
0x55b PUSH4 0xffffffff
0x560 PUSH2 0x8d1
0x563 AND
0x564 JUMP
---
0x54f: V494 = 0x565
0x552: V495 = 0x5a01a040
0x557: V496 = 0x1baf80
0x55b: V497 = 0xffffffff
0x560: V498 = 0x8d1
0x563: V499 = AND 0x8d1 0xffffffff
0x564: JUMP 0x8d1
---
Entry stack: [V12, 0xde, 0x0, 0x0, S3, {0x123, 0x34a}, 0x0, S0]
Stack pops: 1
Stack additions: [0x565, 0x5a01a040, 0x1baf80]
Exit stack: [V12, 0xde, 0x0, 0x0, S3, {0x123, 0x34a}, 0x0, 0x565, 0x5a01a040, 0x1baf80]

================================

Block 0x565
[0x565:0x568]
---
Predecessors: [0x8ca]
Successors: [0x569]
---
0x565 JUMPDEST
0x566 TIMESTAMP
0x567 GT
0x568 ISZERO
---
0x565: JUMPDEST 
0x566: V500 = TIMESTAMP
0x567: V501 = GT V500 S0
0x568: V502 = ISZERO V501
---
Entry stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S1, S0]
Stack pops: 1
Stack additions: [V502]
Exit stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S1, V502]

================================

Block 0x569
[0x569:0x56f]
---
Predecessors: [0x547, 0x565]
Successors: [0x570, 0x57c]
---
0x569 JUMPDEST
0x56a DUP1
0x56b ISZERO
0x56c PUSH2 0x57c
0x56f JUMPI
---
0x569: JUMPDEST 
0x56b: V503 = ISZERO S0
0x56c: V504 = 0x57c
0x56f: JUMPI 0x57c V503
---
Entry stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S1, S0]

================================

Block 0x570
[0x570:0x579]
---
Predecessors: [0x569]
Successors: [0x591]
---
0x570 POP
0x571 PUSH1 0x0
0x573 PUSH2 0x57a
0x576 PUSH2 0x591
0x579 JUMP
---
0x571: V505 = 0x0
0x573: V506 = 0x57a
0x576: V507 = 0x591
0x579: JUMP 0x591
---
Entry stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S1, S0]
Stack pops: 1
Stack additions: [0x0, 0x57a]
Exit stack: [V12, 0xde, S5, {0x0, 0xde}, S3, {0x123, 0x34a, 0x4b3, 0x5e0, 0x634, 0x694}, S1, 0x0, 0x57a]

================================

Block 0x57a
[0x57a:0x57b]
---
Predecessors: [0x609]
Successors: [0x57c]
---
0x57a JUMPDEST
0x57b GT
---
0x57a: JUMPDEST 
0x57b: V508 = GT S0 S1
---
Entry stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V508]
Exit stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, V508]

================================

Block 0x57c
[0x57c:0x57e]
---
Predecessors: [0x569, 0x57a, 0x665]
Successors: [0x57f]
---
0x57c JUMPDEST
0x57d SWAP1
0x57e POP
---
0x57c: JUMPDEST 
---
Entry stack: [V12, 0xde, S5, {0x0, 0xde}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xde, S5, {0x0, 0xde}, S3, S2, S0]

================================

Block 0x57f
[0x57f:0x581]
---
Predecessors: [0x57c, 0x61e, 0x636, 0x64e, 0x656]
Successors: [0x123, 0x156, 0x34a, 0x35d]
---
0x57f JUMPDEST
0x580 SWAP1
0x581 JUMP
---
0x57f: JUMPDEST 
0x581: JUMP S1
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S0]

================================

Block 0x582
[0x582:0x590]
---
Predecessors: [0x19a]
Successors: [0x156]
---
0x582 JUMPDEST
0x583 PUSH11 0x7c13bc4b2c133c56000000
0x58f DUP2
0x590 JUMP
---
0x582: JUMPDEST 
0x583: V509 = 0x7c13bc4b2c133c56000000
0x590: JUMP 0x156
---
Entry stack: [V12, 0x156]
Stack pops: 1
Stack additions: [S0, 0x7c13bc4b2c133c56000000]
Exit stack: [V12, 0x156, 0x7c13bc4b2c133c56000000]

================================

Block 0x591
[0x591:0x5e7]
---
Predecessors: [0x1bf, 0x36f, 0x570, 0x67a, 0x6b5]
Successors: [0x5e8, 0x5ec]
---
0x591 JUMPDEST
0x592 PUSH1 0x2
0x594 SLOAD
0x595 PUSH1 0x0
0x597 SWAP1
0x598 PUSH1 0x1
0x59a PUSH1 0xa0
0x59c PUSH1 0x2
0x59e EXP
0x59f SUB
0x5a0 AND
0x5a1 PUSH4 0x70a08231
0x5a6 ADDRESS
0x5a7 DUP4
0x5a8 PUSH1 0x40
0x5aa MLOAD
0x5ab PUSH1 0x20
0x5ad ADD
0x5ae MSTORE
0x5af PUSH1 0x40
0x5b1 MLOAD
0x5b2 PUSH1 0xe0
0x5b4 PUSH1 0x2
0x5b6 EXP
0x5b7 PUSH4 0xffffffff
0x5bc DUP5
0x5bd AND
0x5be MUL
0x5bf DUP2
0x5c0 MSTORE
0x5c1 PUSH1 0x1
0x5c3 PUSH1 0xa0
0x5c5 PUSH1 0x2
0x5c7 EXP
0x5c8 SUB
0x5c9 SWAP1
0x5ca SWAP2
0x5cb AND
0x5cc PUSH1 0x4
0x5ce DUP3
0x5cf ADD
0x5d0 MSTORE
0x5d1 PUSH1 0x24
0x5d3 ADD
0x5d4 PUSH1 0x20
0x5d6 PUSH1 0x40
0x5d8 MLOAD
0x5d9 DUP1
0x5da DUP4
0x5db SUB
0x5dc DUP2
0x5dd PUSH1 0x0
0x5df DUP8
0x5e0 DUP1
0x5e1 EXTCODESIZE
0x5e2 ISZERO
0x5e3 ISZERO
0x5e4 PUSH2 0x5ec
0x5e7 JUMPI
---
0x591: JUMPDEST 
0x592: V510 = 0x2
0x594: V511 = S[0x2]
0x595: V512 = 0x0
0x598: V513 = 0x1
0x59a: V514 = 0xa0
0x59c: V515 = 0x2
0x59e: V516 = EXP 0x2 0xa0
0x59f: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a0: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x5a1: V519 = 0x70a08231
0x5a6: V520 = ADDRESS
0x5a8: V521 = 0x40
0x5aa: V522 = M[0x40]
0x5ab: V523 = 0x20
0x5ad: V524 = ADD 0x20 V522
0x5ae: M[V524] = 0x0
0x5af: V525 = 0x40
0x5b1: V526 = M[0x40]
0x5b2: V527 = 0xe0
0x5b4: V528 = 0x2
0x5b6: V529 = EXP 0x2 0xe0
0x5b7: V530 = 0xffffffff
0x5bd: V531 = AND 0x70a08231 0xffffffff
0x5be: V532 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x5c0: M[V526] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5c1: V533 = 0x1
0x5c3: V534 = 0xa0
0x5c5: V535 = 0x2
0x5c7: V536 = EXP 0x2 0xa0
0x5c8: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cb: V538 = AND V520 0xffffffffffffffffffffffffffffffffffffffff
0x5cc: V539 = 0x4
0x5cf: V540 = ADD V526 0x4
0x5d0: M[V540] = V538
0x5d1: V541 = 0x24
0x5d3: V542 = ADD 0x24 V526
0x5d4: V543 = 0x20
0x5d6: V544 = 0x40
0x5d8: V545 = M[0x40]
0x5db: V546 = SUB V542 V545
0x5dd: V547 = 0x0
0x5e1: V548 = EXTCODESIZE V518
0x5e2: V549 = ISZERO V548
0x5e3: V550 = ISZERO V549
0x5e4: V551 = 0x5ec
0x5e7: JUMPI 0x5ec V550
---
Entry stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, S1, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}]
Stack pops: 0
Stack additions: [0x0, V518, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V518]
Exit stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, S1, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, 0x0, V518, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V518]

================================

Block 0x5e8
[0x5e8:0x5eb]
---
Predecessors: [0x591]
Successors: []
---
0x5e8 PUSH1 0x0
0x5ea DUP1
0x5eb REVERT
---
0x5e8: V552 = 0x0
0x5eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, S16, {0x0, 0xde}, S14, S13, S12, S11, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, 0x0, V518, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V518]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S16, {0x0, 0xde}, S14, S13, S12, S11, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, 0x0, V518, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V518]

================================

Block 0x5ec
[0x5ec:0x5f8]
---
Predecessors: [0x591]
Successors: [0x5f9, 0x5fd]
---
0x5ec JUMPDEST
0x5ed PUSH2 0x2c6
0x5f0 GAS
0x5f1 SUB
0x5f2 CALL
0x5f3 ISZERO
0x5f4 ISZERO
0x5f5 PUSH2 0x5fd
0x5f8 JUMPI
---
0x5ec: JUMPDEST 
0x5ed: V553 = 0x2c6
0x5f0: V554 = GAS
0x5f1: V555 = SUB V554 0x2c6
0x5f2: V556 = CALL V555 V518 0x0 V545 V546 V545 0x20
0x5f3: V557 = ISZERO V556
0x5f4: V558 = ISZERO V557
0x5f5: V559 = 0x5fd
0x5f8: JUMPI 0x5fd V558
---
Entry stack: [V12, 0xde, S16, {0x0, 0xde}, S14, S13, S12, S11, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, 0x0, V518, 0x70a08231, V542, 0x20, V545, V546, V545, 0x0, V518]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xde, S16, {0x0, 0xde}, S14, S13, S12, S11, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, 0x0, V518, 0x70a08231, V542]

================================

Block 0x5f9
[0x5f9:0x5fc]
---
Predecessors: [0x5ec]
Successors: []
---
0x5f9 PUSH1 0x0
0x5fb DUP1
0x5fc REVERT
---
0x5f9: V560 = 0x0
0x5fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, S10, {0x0, 0xde}, S8, S7, S6, S5, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S10, {0x0, 0xde}, S8, S7, S6, S5, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, 0x0, S2, 0x70a08231, S0]

================================

Block 0x5fd
[0x5fd:0x608]
---
Predecessors: [0x5ec]
Successors: [0x609]
---
0x5fd JUMPDEST
0x5fe POP
0x5ff POP
0x600 POP
0x601 PUSH1 0x40
0x603 MLOAD
0x604 DUP1
0x605 MLOAD
0x606 SWAP2
0x607 POP
0x608 POP
---
0x5fd: JUMPDEST 
0x601: V561 = 0x40
0x603: V562 = M[0x40]
0x605: V563 = M[V562]
---
Entry stack: [V12, 0xde, S10, {0x0, 0xde}, S8, S7, S6, S5, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, 0x0, S2, 0x70a08231, S0]
Stack pops: 4
Stack additions: [V563]
Exit stack: [V12, 0xde, S10, {0x0, 0xde}, S8, S7, S6, S5, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, V563]

================================

Block 0x609
[0x609:0x60b]
---
Predecessors: [0x5fd]
Successors: [0x156, 0x37a, 0x57a, 0x682, 0x6c9]
---
0x609 JUMPDEST
0x60a SWAP1
0x60b JUMP
---
0x609: JUMPDEST 
0x60b: JUMP {0x156, 0x37a, 0x57a, 0x682, 0x6c9}
---
Entry stack: [V12, 0xde, S7, {0x0, 0xde}, S5, S4, S3, S2, {0x156, 0x37a, 0x57a, 0x682, 0x6c9}, V563]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xde, S7, {0x0, 0xde}, S5, S4, S3, S2, V563]

================================

Block 0x60c
[0x60c:0x61d]
---
Predecessors: [0x1e4, 0x352]
Successors: [0x61e, 0x626]
---
0x60c JUMPDEST
0x60d PUSH1 0x0
0x60f TIMESTAMP
0x610 PUSH1 0x3
0x612 SLOAD
0x613 PUSH3 0x93a80
0x617 ADD
0x618 GT
0x619 ISZERO
0x61a PUSH2 0x626
0x61d JUMPI
---
0x60c: JUMPDEST 
0x60d: V564 = 0x0
0x60f: V565 = TIMESTAMP
0x610: V566 = 0x3
0x612: V567 = S[0x3]
0x613: V568 = 0x93a80
0x617: V569 = ADD 0x93a80 V567
0x618: V570 = GT V569 V565
0x619: V571 = ISZERO V570
0x61a: V572 = 0x626
0x61d: JUMPI 0x626 V571
---
Entry stack: [V12, 0xde, V296, 0x0, S1, {0x156, 0x35d}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xde, V296, 0x0, S1, {0x156, 0x35d}, 0x0]

================================

Block 0x61e
[0x61e:0x625]
---
Predecessors: [0x60c]
Successors: [0x57f]
---
0x61e POP
0x61f PUSH2 0x694
0x622 PUSH2 0x57f
0x625 JUMP
---
0x61f: V573 = 0x694
0x622: V574 = 0x57f
0x625: JUMP 0x57f
---
Entry stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x0]
Stack pops: 1
Stack additions: [0x694]
Exit stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x694]

================================

Block 0x626
[0x626:0x635]
---
Predecessors: [0x60c]
Successors: [0x636, 0x63e]
---
0x626 JUMPDEST
0x627 TIMESTAMP
0x628 PUSH1 0x3
0x62a SLOAD
0x62b PUSH3 0x127500
0x62f ADD
0x630 GT
0x631 ISZERO
0x632 PUSH2 0x63e
0x635 JUMPI
---
0x626: JUMPDEST 
0x627: V575 = TIMESTAMP
0x628: V576 = 0x3
0x62a: V577 = S[0x3]
0x62b: V578 = 0x127500
0x62f: V579 = ADD 0x127500 V577
0x630: V580 = GT V579 V575
0x631: V581 = ISZERO V580
0x632: V582 = 0x63e
0x635: JUMPI 0x63e V581
---
Entry stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x0]

================================

Block 0x636
[0x636:0x63d]
---
Predecessors: [0x626]
Successors: [0x57f]
---
0x636 POP
0x637 PUSH2 0x634
0x63a PUSH2 0x57f
0x63d JUMP
---
0x637: V583 = 0x634
0x63a: V584 = 0x57f
0x63d: JUMP 0x57f
---
Entry stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x0]
Stack pops: 1
Stack additions: [0x634]
Exit stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x634]

================================

Block 0x63e
[0x63e:0x64d]
---
Predecessors: [0x626]
Successors: [0x64e, 0x656]
---
0x63e JUMPDEST
0x63f TIMESTAMP
0x640 PUSH1 0x3
0x642 SLOAD
0x643 PUSH3 0x1baf80
0x647 ADD
0x648 GT
0x649 ISZERO
0x64a PUSH2 0x656
0x64d JUMPI
---
0x63e: JUMPDEST 
0x63f: V585 = TIMESTAMP
0x640: V586 = 0x3
0x642: V587 = S[0x3]
0x643: V588 = 0x1baf80
0x647: V589 = ADD 0x1baf80 V587
0x648: V590 = GT V589 V585
0x649: V591 = ISZERO V590
0x64a: V592 = 0x656
0x64d: JUMPI 0x656 V591
---
Entry stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x0]

================================

Block 0x64e
[0x64e:0x655]
---
Predecessors: [0x63e]
Successors: [0x57f]
---
0x64e POP
0x64f PUSH2 0x5e0
0x652 PUSH2 0x57f
0x655 JUMP
---
0x64f: V593 = 0x5e0
0x652: V594 = 0x57f
0x655: JUMP 0x57f
---
Entry stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x0]
Stack pops: 1
Stack additions: [0x5e0]
Exit stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x5e0]

================================

Block 0x656
[0x656:0x65e]
---
Predecessors: [0x63e]
Successors: [0x57f]
---
0x656 JUMPDEST
0x657 POP
0x658 PUSH2 0x4b3
0x65b PUSH2 0x57f
0x65e JUMP
---
0x656: JUMPDEST 
0x658: V595 = 0x4b3
0x65b: V596 = 0x57f
0x65e: JUMP 0x57f
---
Entry stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x0]
Stack pops: 1
Stack additions: [0x4b3]
Exit stack: [V12, 0xde, V296, 0x0, S2, {0x156, 0x35d}, 0x4b3]

================================

Block 0x65f
[0x65f:0x65f]
---
Predecessors: []
Successors: [0x660]
---
0x65f JUMPDEST
---
0x65f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x660
[0x660:0x660]
---
Predecessors: [0x65f]
Successors: [0x661]
---
0x660 JUMPDEST
---
0x660: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x661
[0x661:0x661]
---
Predecessors: [0x660]
Successors: [0x662]
---
0x661 JUMPDEST
---
0x661: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x662
[0x662:0x664]
---
Predecessors: [0x661]
Successors: []
Has unresolved jump.
---
0x662 JUMPDEST
0x663 SWAP1
0x664 JUMP
---
0x662: JUMPDEST 
0x664: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x665
[0x665:0x679]
---
Predecessors: [0x209]
Successors: [0x57c, 0x67a]
---
0x665 JUMPDEST
0x666 PUSH1 0x4
0x668 SLOAD
0x669 PUSH1 0x0
0x66b SWAP1
0x66c PUSH1 0xff
0x66e AND
0x66f ISZERO
0x670 ISZERO
0x671 PUSH1 0x1
0x673 EQ
0x674 DUP1
0x675 ISZERO
0x676 PUSH2 0x57c
0x679 JUMPI
---
0x665: JUMPDEST 
0x666: V597 = 0x4
0x668: V598 = S[0x4]
0x669: V599 = 0x0
0x66c: V600 = 0xff
0x66e: V601 = AND 0xff V598
0x66f: V602 = ISZERO V601
0x670: V603 = ISZERO V602
0x671: V604 = 0x1
0x673: V605 = EQ 0x1 V603
0x675: V606 = ISZERO V605
0x676: V607 = 0x57c
0x679: JUMPI 0x57c V606
---
Entry stack: [V12, 0x123]
Stack pops: 0
Stack additions: [0x0, V605]
Exit stack: [V12, 0x123, 0x0, V605]

================================

Block 0x67a
[0x67a:0x681]
---
Predecessors: [0x665]
Successors: [0x591]
---
0x67a POP
0x67b PUSH2 0x682
0x67e PUSH2 0x591
0x681 JUMP
---
0x67b: V608 = 0x682
0x67e: V609 = 0x591
0x681: JUMP 0x591
---
Entry stack: [V12, 0x123, 0x0, V605]
Stack pops: 1
Stack additions: [0x682]
Exit stack: [V12, 0x123, 0x0, 0x682]

================================

Block 0x682
[0x682:0x683]
---
Predecessors: [0x609]
Successors: [0x684]
---
0x682 JUMPDEST
0x683 ISZERO
---
0x682: JUMPDEST 
0x683: V610 = ISZERO S0
---
Entry stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V610]
Exit stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, S1, V610]

================================

Block 0x684
[0x684:0x686]
---
Predecessors: [0x682]
Successors: [0x687]
---
0x684 JUMPDEST
0x685 SWAP1
0x686 POP
---
0x684: JUMPDEST 
---
Entry stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, S1, V610]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, V610]

================================

Block 0x687
[0x687:0x689]
---
Predecessors: [0x684]
Successors: [0xde, 0x123]
---
0x687 JUMPDEST
0x688 SWAP1
0x689 JUMP
---
0x687: JUMPDEST 
0x689: JUMP S1
---
Entry stack: [V12, 0xde, S5, {0x0, 0xde}, S3, S2, S1, V610]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xde, S5, {0x0, 0xde}, S3, S2, V610]

================================

Block 0x68a
[0x68a:0x6a0]
---
Predecessors: [0x230]
Successors: [0x6a1, 0x6a5]
---
0x68a JUMPDEST
0x68b PUSH1 0x0
0x68d SLOAD
0x68e CALLER
0x68f PUSH1 0x1
0x691 PUSH1 0xa0
0x693 PUSH1 0x2
0x695 EXP
0x696 SUB
0x697 SWAP1
0x698 DUP2
0x699 AND
0x69a SWAP2
0x69b AND
0x69c EQ
0x69d PUSH2 0x6a5
0x6a0 JUMPI
---
0x68a: JUMPDEST 
0x68b: V611 = 0x0
0x68d: V612 = S[0x0]
0x68e: V613 = CALLER
0x68f: V614 = 0x1
0x691: V615 = 0xa0
0x693: V616 = 0x2
0x695: V617 = EXP 0x2 0xa0
0x696: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x699: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0x69b: V620 = AND V612 0xffffffffffffffffffffffffffffffffffffffff
0x69c: V621 = EQ V620 V619
0x69d: V622 = 0x6a5
0x6a0: JUMPI 0x6a5 V621
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x6a1
[0x6a1:0x6a4]
---
Predecessors: [0x68a]
Successors: []
---
0x6a1 PUSH1 0x0
0x6a3 DUP1
0x6a4 REVERT
---
0x6a1: V623 = 0x0
0x6a4: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x6a5
[0x6a5:0x6b0]
---
Predecessors: [0x68a]
Successors: [0x6b1, 0x6b5]
---
0x6a5 JUMPDEST
0x6a6 PUSH1 0x4
0x6a8 SLOAD
0x6a9 PUSH1 0xff
0x6ab AND
0x6ac ISZERO
0x6ad PUSH2 0x6b5
0x6b0 JUMPI
---
0x6a5: JUMPDEST 
0x6a6: V624 = 0x4
0x6a8: V625 = S[0x4]
0x6a9: V626 = 0xff
0x6ab: V627 = AND 0xff V625
0x6ac: V628 = ISZERO V627
0x6ad: V629 = 0x6b5
0x6b0: JUMPI 0x6b5 V628
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x6b1
[0x6b1:0x6b4]
---
Predecessors: [0x6a5]
Successors: []
---
0x6b1 PUSH1 0x0
0x6b3 DUP1
0x6b4 REVERT
---
0x6b1: V630 = 0x0
0x6b4: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0x6b5
[0x6b5:0x6c8]
---
Predecessors: [0x6a5]
Successors: [0x591]
---
0x6b5 JUMPDEST
0x6b6 PUSH11 0x7c13bc4b2c133c56000000
0x6c2 PUSH2 0x6c9
0x6c5 PUSH2 0x591
0x6c8 JUMP
---
0x6b5: JUMPDEST 
0x6b6: V631 = 0x7c13bc4b2c133c56000000
0x6c2: V632 = 0x6c9
0x6c5: V633 = 0x591
0x6c8: JUMP 0x591
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: [0x7c13bc4b2c133c56000000, 0x6c9]
Exit stack: [V12, 0xde, 0x7c13bc4b2c133c56000000, 0x6c9]

================================

Block 0x6c9
[0x6c9:0x6cf]
---
Predecessors: [0x609]
Successors: [0x6d0, 0x6d4]
---
0x6c9 JUMPDEST
0x6ca LT
0x6cb ISZERO
0x6cc PUSH2 0x6d4
0x6cf JUMPI
---
0x6c9: JUMPDEST 
0x6ca: V634 = LT S0 S1
0x6cb: V635 = ISZERO V634
0x6cc: V636 = 0x6d4
0x6cf: JUMPI 0x6d4 V635
---
Entry stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xde, S6, {0x0, 0xde}, S4, S3, S2]

================================

Block 0x6d0
[0x6d0:0x6d3]
---
Predecessors: [0x6c9]
Successors: []
---
0x6d0 PUSH1 0x0
0x6d2 DUP1
0x6d3 REVERT
---
0x6d0: V637 = 0x0
0x6d3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]

================================

Block 0x6d4
[0x6d4:0x6e9]
---
Predecessors: [0x6c9]
Successors: [0x6ea]
---
0x6d4 JUMPDEST
0x6d5 PUSH1 0x4
0x6d7 DUP1
0x6d8 SLOAD
0x6d9 PUSH1 0xff
0x6db NOT
0x6dc AND
0x6dd PUSH1 0x1
0x6df OR
0x6e0 SWAP1
0x6e1 SSTORE
0x6e2 PUSH4 0x5a01a040
0x6e7 PUSH1 0x3
0x6e9 SSTORE
---
0x6d4: JUMPDEST 
0x6d5: V638 = 0x4
0x6d8: V639 = S[0x4]
0x6d9: V640 = 0xff
0x6db: V641 = NOT 0xff
0x6dc: V642 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V639
0x6dd: V643 = 0x1
0x6df: V644 = OR 0x1 V642
0x6e1: S[0x4] = V644
0x6e2: V645 = 0x5a01a040
0x6e7: V646 = 0x3
0x6e9: S[0x3] = 0x5a01a040
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]

================================

Block 0x6ea
[0x6ea:0x6ea]
---
Predecessors: [0x6d4]
Successors: [0x6eb]
---
0x6ea JUMPDEST
---
0x6ea: JUMPDEST 
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]

================================

Block 0x6eb
[0x6eb:0x6ec]
---
Predecessors: [0x6ea]
Successors: [0xde, 0x123]
---
0x6eb JUMPDEST
0x6ec JUMP
---
0x6eb: JUMPDEST 
0x6ec: JUMP S0
---
Entry stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xde, S4, {0x0, 0xde}, S2, S1]

================================

Block 0x6ed
[0x6ed:0x704]
---
Predecessors: [0x245]
Successors: [0x705, 0x709]
---
0x6ed JUMPDEST
0x6ee PUSH1 0x0
0x6f0 DUP1
0x6f1 SLOAD
0x6f2 CALLER
0x6f3 PUSH1 0x1
0x6f5 PUSH1 0xa0
0x6f7 PUSH1 0x2
0x6f9 EXP
0x6fa SUB
0x6fb SWAP1
0x6fc DUP2
0x6fd AND
0x6fe SWAP2
0x6ff AND
0x700 EQ
0x701 PUSH2 0x709
0x704 JUMPI
---
0x6ed: JUMPDEST 
0x6ee: V647 = 0x0
0x6f1: V648 = S[0x0]
0x6f2: V649 = CALLER
0x6f3: V650 = 0x1
0x6f5: V651 = 0xa0
0x6f7: V652 = 0x2
0x6f9: V653 = EXP 0x2 0xa0
0x6fa: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fd: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x6ff: V656 = AND V648 0xffffffffffffffffffffffffffffffffffffffff
0x700: V657 = EQ V656 V655
0x701: V658 = 0x709
0x704: JUMPI 0x709 V657
---
Entry stack: [V12, 0xde]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xde, 0x0]

================================

Block 0x705
[0x705:0x708]
---
Predecessors: [0x6ed]
Successors: []
---
0x705 PUSH1 0x0
0x707 DUP1
0x708 REVERT
---
0x705: V659 = 0x0
0x708: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, 0x0]

================================

Block 0x709
[0x709:0x75d]
---
Predecessors: [0x6ed]
Successors: [0x75e, 0x762]
---
0x709 JUMPDEST
0x70a PUSH1 0x2
0x70c SLOAD
0x70d PUSH1 0x1
0x70f PUSH1 0xa0
0x711 PUSH1 0x2
0x713 EXP
0x714 SUB
0x715 AND
0x716 PUSH4 0x70a08231
0x71b ADDRESS
0x71c PUSH1 0x0
0x71e PUSH1 0x40
0x720 MLOAD
0x721 PUSH1 0x20
0x723 ADD
0x724 MSTORE
0x725 PUSH1 0x40
0x727 MLOAD
0x728 PUSH1 0xe0
0x72a PUSH1 0x2
0x72c EXP
0x72d PUSH4 0xffffffff
0x732 DUP5
0x733 AND
0x734 MUL
0x735 DUP2
0x736 MSTORE
0x737 PUSH1 0x1
0x739 PUSH1 0xa0
0x73b PUSH1 0x2
0x73d EXP
0x73e SUB
0x73f SWAP1
0x740 SWAP2
0x741 AND
0x742 PUSH1 0x4
0x744 DUP3
0x745 ADD
0x746 MSTORE
0x747 PUSH1 0x24
0x749 ADD
0x74a PUSH1 0x20
0x74c PUSH1 0x40
0x74e MLOAD
0x74f DUP1
0x750 DUP4
0x751 SUB
0x752 DUP2
0x753 PUSH1 0x0
0x755 DUP8
0x756 DUP1
0x757 EXTCODESIZE
0x758 ISZERO
0x759 ISZERO
0x75a PUSH2 0x762
0x75d JUMPI
---
0x709: JUMPDEST 
0x70a: V660 = 0x2
0x70c: V661 = S[0x2]
0x70d: V662 = 0x1
0x70f: V663 = 0xa0
0x711: V664 = 0x2
0x713: V665 = EXP 0x2 0xa0
0x714: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x715: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0x716: V668 = 0x70a08231
0x71b: V669 = ADDRESS
0x71c: V670 = 0x0
0x71e: V671 = 0x40
0x720: V672 = M[0x40]
0x721: V673 = 0x20
0x723: V674 = ADD 0x20 V672
0x724: M[V674] = 0x0
0x725: V675 = 0x40
0x727: V676 = M[0x40]
0x728: V677 = 0xe0
0x72a: V678 = 0x2
0x72c: V679 = EXP 0x2 0xe0
0x72d: V680 = 0xffffffff
0x733: V681 = AND 0x70a08231 0xffffffff
0x734: V682 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x736: M[V676] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x737: V683 = 0x1
0x739: V684 = 0xa0
0x73b: V685 = 0x2
0x73d: V686 = EXP 0x2 0xa0
0x73e: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x741: V688 = AND V669 0xffffffffffffffffffffffffffffffffffffffff
0x742: V689 = 0x4
0x745: V690 = ADD V676 0x4
0x746: M[V690] = V688
0x747: V691 = 0x24
0x749: V692 = ADD 0x24 V676
0x74a: V693 = 0x20
0x74c: V694 = 0x40
0x74e: V695 = M[0x40]
0x751: V696 = SUB V692 V695
0x753: V697 = 0x0
0x757: V698 = EXTCODESIZE V667
0x758: V699 = ISZERO V698
0x759: V700 = ISZERO V699
0x75a: V701 = 0x762
0x75d: JUMPI 0x762 V700
---
Entry stack: [V12, 0xde, 0x0]
Stack pops: 0
Stack additions: [V667, 0x70a08231, V692, 0x20, V695, V696, V695, 0x0, V667]
Exit stack: [V12, 0xde, 0x0, V667, 0x70a08231, V692, 0x20, V695, V696, V695, 0x0, V667]

================================

Block 0x75e
[0x75e:0x761]
---
Predecessors: [0x709]
Successors: []
---
0x75e PUSH1 0x0
0x760 DUP1
0x761 REVERT
---
0x75e: V702 = 0x0
0x761: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, 0x0, V667, 0x70a08231, V692, 0x20, V695, V696, V695, 0x0, V667]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, 0x0, V667, 0x70a08231, V692, 0x20, V695, V696, V695, 0x0, V667]

================================

Block 0x762
[0x762:0x76e]
---
Predecessors: [0x709]
Successors: [0x76f, 0x773]
---
0x762 JUMPDEST
0x763 PUSH2 0x2c6
0x766 GAS
0x767 SUB
0x768 CALL
0x769 ISZERO
0x76a ISZERO
0x76b PUSH2 0x773
0x76e JUMPI
---
0x762: JUMPDEST 
0x763: V703 = 0x2c6
0x766: V704 = GAS
0x767: V705 = SUB V704 0x2c6
0x768: V706 = CALL V705 V667 0x0 V695 V696 V695 0x20
0x769: V707 = ISZERO V706
0x76a: V708 = ISZERO V707
0x76b: V709 = 0x773
0x76e: JUMPI 0x773 V708
---
Entry stack: [V12, 0xde, 0x0, V667, 0x70a08231, V692, 0x20, V695, V696, V695, 0x0, V667]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xde, 0x0, V667, 0x70a08231, V692]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x762]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V710 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, 0x0, V667, 0x70a08231, V692]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, 0x0, V667, 0x70a08231, V692]

================================

Block 0x773
[0x773:0x786]
---
Predecessors: [0x762]
Successors: [0x787, 0x788]
---
0x773 JUMPDEST
0x774 POP
0x775 POP
0x776 POP
0x777 PUSH1 0x40
0x779 MLOAD
0x77a DUP1
0x77b MLOAD
0x77c SWAP2
0x77d POP
0x77e POP
0x77f PUSH1 0x0
0x781 DUP2
0x782 GT
0x783 PUSH2 0x788
0x786 JUMPI
---
0x773: JUMPDEST 
0x777: V711 = 0x40
0x779: V712 = M[0x40]
0x77b: V713 = M[V712]
0x77f: V714 = 0x0
0x782: V715 = GT V713 0x0
0x783: V716 = 0x788
0x786: JUMPI 0x788 V715
---
Entry stack: [V12, 0xde, 0x0, V667, 0x70a08231, V692]
Stack pops: 4
Stack additions: [V713]
Exit stack: [V12, 0xde, V713]

================================

Block 0x787
[0x787:0x787]
---
Predecessors: [0x773]
Successors: []
---
0x787 INVALID
---
0x787: INVALID 
---
Entry stack: [V12, 0xde, V713]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V713]

================================

Block 0x788
[0x788:0x7eb]
---
Predecessors: [0x773]
Successors: [0x7ec, 0x7f0]
---
0x788 JUMPDEST
0x789 PUSH1 0x2
0x78b SLOAD
0x78c PUSH1 0x0
0x78e DUP1
0x78f SLOAD
0x790 PUSH1 0x1
0x792 PUSH1 0xa0
0x794 PUSH1 0x2
0x796 EXP
0x797 SUB
0x798 SWAP3
0x799 DUP4
0x79a AND
0x79b SWAP3
0x79c PUSH4 0xa9059cbb
0x7a1 SWAP3
0x7a2 SWAP2
0x7a3 AND
0x7a4 SWAP1
0x7a5 DUP5
0x7a6 SWAP1
0x7a7 PUSH1 0x40
0x7a9 MLOAD
0x7aa PUSH1 0x20
0x7ac ADD
0x7ad MSTORE
0x7ae PUSH1 0x40
0x7b0 MLOAD
0x7b1 PUSH1 0xe0
0x7b3 PUSH1 0x2
0x7b5 EXP
0x7b6 PUSH4 0xffffffff
0x7bb DUP6
0x7bc AND
0x7bd MUL
0x7be DUP2
0x7bf MSTORE
0x7c0 PUSH1 0x1
0x7c2 PUSH1 0xa0
0x7c4 PUSH1 0x2
0x7c6 EXP
0x7c7 SUB
0x7c8 SWAP1
0x7c9 SWAP3
0x7ca AND
0x7cb PUSH1 0x4
0x7cd DUP4
0x7ce ADD
0x7cf MSTORE
0x7d0 PUSH1 0x24
0x7d2 DUP3
0x7d3 ADD
0x7d4 MSTORE
0x7d5 PUSH1 0x44
0x7d7 ADD
0x7d8 PUSH1 0x20
0x7da PUSH1 0x40
0x7dc MLOAD
0x7dd DUP1
0x7de DUP4
0x7df SUB
0x7e0 DUP2
0x7e1 PUSH1 0x0
0x7e3 DUP8
0x7e4 DUP1
0x7e5 EXTCODESIZE
0x7e6 ISZERO
0x7e7 ISZERO
0x7e8 PUSH2 0x7f0
0x7eb JUMPI
---
0x788: JUMPDEST 
0x789: V717 = 0x2
0x78b: V718 = S[0x2]
0x78c: V719 = 0x0
0x78f: V720 = S[0x0]
0x790: V721 = 0x1
0x792: V722 = 0xa0
0x794: V723 = 0x2
0x796: V724 = EXP 0x2 0xa0
0x797: V725 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79a: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0x79c: V727 = 0xa9059cbb
0x7a3: V728 = AND V720 0xffffffffffffffffffffffffffffffffffffffff
0x7a7: V729 = 0x40
0x7a9: V730 = M[0x40]
0x7aa: V731 = 0x20
0x7ac: V732 = ADD 0x20 V730
0x7ad: M[V732] = 0x0
0x7ae: V733 = 0x40
0x7b0: V734 = M[0x40]
0x7b1: V735 = 0xe0
0x7b3: V736 = 0x2
0x7b5: V737 = EXP 0x2 0xe0
0x7b6: V738 = 0xffffffff
0x7bc: V739 = AND 0xa9059cbb 0xffffffff
0x7bd: V740 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x7bf: M[V734] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7c0: V741 = 0x1
0x7c2: V742 = 0xa0
0x7c4: V743 = 0x2
0x7c6: V744 = EXP 0x2 0xa0
0x7c7: V745 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ca: V746 = AND V728 0xffffffffffffffffffffffffffffffffffffffff
0x7cb: V747 = 0x4
0x7ce: V748 = ADD V734 0x4
0x7cf: M[V748] = V746
0x7d0: V749 = 0x24
0x7d3: V750 = ADD V734 0x24
0x7d4: M[V750] = V713
0x7d5: V751 = 0x44
0x7d7: V752 = ADD 0x44 V734
0x7d8: V753 = 0x20
0x7da: V754 = 0x40
0x7dc: V755 = M[0x40]
0x7df: V756 = SUB V752 V755
0x7e1: V757 = 0x0
0x7e5: V758 = EXTCODESIZE V726
0x7e6: V759 = ISZERO V758
0x7e7: V760 = ISZERO V759
0x7e8: V761 = 0x7f0
0x7eb: JUMPI 0x7f0 V760
---
Entry stack: [V12, 0xde, V713]
Stack pops: 1
Stack additions: [S0, V726, 0xa9059cbb, V752, 0x20, V755, V756, V755, 0x0, V726]
Exit stack: [V12, 0xde, V713, V726, 0xa9059cbb, V752, 0x20, V755, V756, V755, 0x0, V726]

================================

Block 0x7ec
[0x7ec:0x7ef]
---
Predecessors: [0x788]
Successors: []
---
0x7ec PUSH1 0x0
0x7ee DUP1
0x7ef REVERT
---
0x7ec: V762 = 0x0
0x7ef: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V713, V726, 0xa9059cbb, V752, 0x20, V755, V756, V755, 0x0, V726]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V713, V726, 0xa9059cbb, V752, 0x20, V755, V756, V755, 0x0, V726]

================================

Block 0x7f0
[0x7f0:0x7fc]
---
Predecessors: [0x788]
Successors: [0x7fd, 0x801]
---
0x7f0 JUMPDEST
0x7f1 PUSH2 0x2c6
0x7f4 GAS
0x7f5 SUB
0x7f6 CALL
0x7f7 ISZERO
0x7f8 ISZERO
0x7f9 PUSH2 0x801
0x7fc JUMPI
---
0x7f0: JUMPDEST 
0x7f1: V763 = 0x2c6
0x7f4: V764 = GAS
0x7f5: V765 = SUB V764 0x2c6
0x7f6: V766 = CALL V765 V726 0x0 V755 V756 V755 0x20
0x7f7: V767 = ISZERO V766
0x7f8: V768 = ISZERO V767
0x7f9: V769 = 0x801
0x7fc: JUMPI 0x801 V768
---
Entry stack: [V12, 0xde, V713, V726, 0xa9059cbb, V752, 0x20, V755, V756, V755, 0x0, V726]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xde, V713, V726, 0xa9059cbb, V752]

================================

Block 0x7fd
[0x7fd:0x800]
---
Predecessors: [0x7f0]
Successors: []
---
0x7fd PUSH1 0x0
0x7ff DUP1
0x800 REVERT
---
0x7fd: V770 = 0x0
0x800: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V713, V726, 0xa9059cbb, V752]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V713, V726, 0xa9059cbb, V752]

================================

Block 0x801
[0x801:0x818]
---
Predecessors: [0x7f0]
Successors: []
---
0x801 JUMPDEST
0x802 POP
0x803 POP
0x804 POP
0x805 PUSH1 0x40
0x807 MLOAD
0x808 DUP1
0x809 MLOAD
0x80a POP
0x80b POP
0x80c PUSH1 0x0
0x80e SLOAD
0x80f PUSH1 0x1
0x811 PUSH1 0xa0
0x813 PUSH1 0x2
0x815 EXP
0x816 SUB
0x817 AND
0x818 SELFDESTRUCT
---
0x801: JUMPDEST 
0x805: V771 = 0x40
0x807: V772 = M[0x40]
0x809: V773 = M[V772]
0x80c: V774 = 0x0
0x80e: V775 = S[0x0]
0x80f: V776 = 0x1
0x811: V777 = 0xa0
0x813: V778 = 0x2
0x815: V779 = EXP 0x2 0xa0
0x816: V780 = SUB 0x10000000000000000000000000000000000000000 0x1
0x817: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0x818: SELFDESTRUCT V781
---
Entry stack: [V12, 0xde, V713, V726, 0xa9059cbb, V752]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xde, V713]

================================

Block 0x819
[0x819:0x819]
---
Predecessors: []
Successors: [0x81a]
---
0x819 JUMPDEST
---
0x819: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x81a
[0x81a:0x81c]
---
Predecessors: [0x819]
Successors: []
Has unresolved jump.
---
0x81a JUMPDEST
0x81b POP
0x81c JUMP
---
0x81a: JUMPDEST 
0x81c: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x81d
[0x81d:0x82b]
---
Predecessors: [0x25a]
Successors: [0xf4]
---
0x81d JUMPDEST
0x81e PUSH1 0x0
0x820 SLOAD
0x821 PUSH1 0x1
0x823 PUSH1 0xa0
0x825 PUSH1 0x2
0x827 EXP
0x828 SUB
0x829 AND
0x82a DUP2
0x82b JUMP
---
0x81d: JUMPDEST 
0x81e: V782 = 0x0
0x820: V783 = S[0x0]
0x821: V784 = 0x1
0x823: V785 = 0xa0
0x825: V786 = 0x2
0x827: V787 = EXP 0x2 0xa0
0x828: V788 = SUB 0x10000000000000000000000000000000000000000 0x1
0x829: V789 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0x82b: JUMP 0xf4
---
Entry stack: [V12, 0xf4]
Stack pops: 1
Stack additions: [S0, V789]
Exit stack: [V12, 0xf4, V789]

================================

Block 0x82c
[0x82c:0x833]
---
Predecessors: [0x289]
Successors: [0x156]
---
0x82c JUMPDEST
0x82d PUSH4 0x5a01a040
0x832 DUP2
0x833 JUMP
---
0x82c: JUMPDEST 
0x82d: V790 = 0x5a01a040
0x833: JUMP 0x156
---
Entry stack: [V12, 0x156]
Stack pops: 1
Stack additions: [S0, 0x5a01a040]
Exit stack: [V12, 0x156, 0x5a01a040]

================================

Block 0x834
[0x834:0x838]
---
Predecessors: [0x2ae]
Successors: [0x156]
---
0x834 JUMPDEST
0x835 PUSH1 0x15
0x837 DUP2
0x838 JUMP
---
0x834: JUMPDEST 
0x835: V791 = 0x15
0x838: JUMP 0x156
---
Entry stack: [V12, 0x156]
Stack pops: 1
Stack additions: [S0, 0x15]
Exit stack: [V12, 0x156, 0x15]

================================

Block 0x839
[0x839:0x83e]
---
Predecessors: [0x2d3]
Successors: [0x156]
---
0x839 JUMPDEST
0x83a PUSH1 0x5
0x83c SLOAD
0x83d DUP2
0x83e JUMP
---
0x839: JUMPDEST 
0x83a: V792 = 0x5
0x83c: V793 = S[0x5]
0x83e: JUMP 0x156
---
Entry stack: [V12, 0x156]
Stack pops: 1
Stack additions: [S0, V793]
Exit stack: [V12, 0x156, V793]

================================

Block 0x83f
[0x83f:0x844]
---
Predecessors: [0x302]
Successors: [0x156]
---
0x83f JUMPDEST
0x840 PUSH1 0x3
0x842 SLOAD
0x843 DUP2
0x844 JUMP
---
0x83f: JUMPDEST 
0x840: V794 = 0x3
0x842: V795 = S[0x3]
0x844: JUMP 0x156
---
Entry stack: [V12, 0x156]
Stack pops: 1
Stack additions: [S0, V795]
Exit stack: [V12, 0x156, V795]

================================

Block 0x845
[0x845:0x85b]
---
Predecessors: [0x327]
Successors: [0x85c, 0x860]
---
0x845 JUMPDEST
0x846 PUSH1 0x0
0x848 SLOAD
0x849 CALLER
0x84a PUSH1 0x1
0x84c PUSH1 0xa0
0x84e PUSH1 0x2
0x850 EXP
0x851 SUB
0x852 SWAP1
0x853 DUP2
0x854 AND
0x855 SWAP2
0x856 AND
0x857 EQ
0x858 PUSH2 0x860
0x85b JUMPI
---
0x845: JUMPDEST 
0x846: V796 = 0x0
0x848: V797 = S[0x0]
0x849: V798 = CALLER
0x84a: V799 = 0x1
0x84c: V800 = 0xa0
0x84e: V801 = 0x2
0x850: V802 = EXP 0x2 0xa0
0x851: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x854: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0x856: V805 = AND V797 0xffffffffffffffffffffffffffffffffffffffff
0x857: V806 = EQ V805 V804
0x858: V807 = 0x860
0x85b: JUMPI 0x860 V806
---
Entry stack: [V12, 0xde, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V287]

================================

Block 0x85c
[0x85c:0x85f]
---
Predecessors: [0x845]
Successors: []
---
0x85c PUSH1 0x0
0x85e DUP1
0x85f REVERT
---
0x85c: V808 = 0x0
0x85f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V287]

================================

Block 0x860
[0x860:0x870]
---
Predecessors: [0x845]
Successors: [0x871, 0x875]
---
0x860 JUMPDEST
0x861 PUSH1 0x1
0x863 PUSH1 0xa0
0x865 PUSH1 0x2
0x867 EXP
0x868 SUB
0x869 DUP2
0x86a AND
0x86b ISZERO
0x86c ISZERO
0x86d PUSH2 0x875
0x870 JUMPI
---
0x860: JUMPDEST 
0x861: V809 = 0x1
0x863: V810 = 0xa0
0x865: V811 = 0x2
0x867: V812 = EXP 0x2 0xa0
0x868: V813 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86a: V814 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x86b: V815 = ISZERO V814
0x86c: V816 = ISZERO V815
0x86d: V817 = 0x875
0x870: JUMPI 0x875 V816
---
Entry stack: [V12, 0xde, V287]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, V287]

================================

Block 0x871
[0x871:0x874]
---
Predecessors: [0x860]
Successors: []
---
0x871 PUSH1 0x0
0x873 DUP1
0x874 REVERT
---
0x871: V818 = 0x0
0x874: REVERT 0x0 0x0
---
Entry stack: [V12, 0xde, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V287]

================================

Block 0x875
[0x875:0x89d]
---
Predecessors: [0x860]
Successors: [0x89e]
---
0x875 JUMPDEST
0x876 PUSH1 0x0
0x878 DUP1
0x879 SLOAD
0x87a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88f NOT
0x890 AND
0x891 PUSH1 0x1
0x893 PUSH1 0xa0
0x895 PUSH1 0x2
0x897 EXP
0x898 SUB
0x899 DUP4
0x89a AND
0x89b OR
0x89c SWAP1
0x89d SSTORE
---
0x875: JUMPDEST 
0x876: V819 = 0x0
0x879: V820 = S[0x0]
0x87a: V821 = 0xffffffffffffffffffffffffffffffffffffffff
0x88f: V822 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x890: V823 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V820
0x891: V824 = 0x1
0x893: V825 = 0xa0
0x895: V826 = 0x2
0x897: V827 = EXP 0x2 0xa0
0x898: V828 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89a: V829 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x89b: V830 = OR V829 V823
0x89d: S[0x0] = V830
---
Entry stack: [V12, 0xde, V287]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xde, V287]

================================

Block 0x89e
[0x89e:0x89e]
---
Predecessors: [0x875]
Successors: [0x89f]
---
0x89e JUMPDEST
---
0x89e: JUMPDEST 
---
Entry stack: [V12, 0xde, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, V287]

================================

Block 0x89f
[0x89f:0x8a1]
---
Predecessors: [0x89e]
Successors: [0xde]
---
0x89f JUMPDEST
0x8a0 POP
0x8a1 JUMP
---
0x89f: JUMPDEST 
0x8a1: JUMP 0xde
---
Entry stack: [V12, 0xde, V287]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a2
[0x8a2:0x8ae]
---
Predecessors: [0x35d]
Successors: [0x8af, 0x8be]
---
0x8a2 JUMPDEST
0x8a3 PUSH1 0x0
0x8a5 DUP3
0x8a6 DUP3
0x8a7 MUL
0x8a8 DUP4
0x8a9 ISZERO
0x8aa DUP1
0x8ab PUSH2 0x8be
0x8ae JUMPI
---
0x8a2: JUMPDEST 
0x8a3: V831 = 0x0
0x8a7: V832 = MUL S0 S1
0x8a9: V833 = ISZERO S1
0x8ab: V834 = 0x8be
0x8ae: JUMPI 0x8be V833
---
Entry stack: [V12, 0xde, S5, S4, S3, 0x36f, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V832, V833]
Exit stack: [V12, 0xde, S5, S4, S3, 0x36f, S1, S0, 0x0, V832, V833]

================================

Block 0x8af
[0x8af:0x8b9]
---
Predecessors: [0x8a2]
Successors: [0x8ba, 0x8bb]
---
0x8af POP
0x8b0 DUP3
0x8b1 DUP5
0x8b2 DUP3
0x8b3 DUP2
0x8b4 ISZERO
0x8b5 ISZERO
0x8b6 PUSH2 0x8bb
0x8b9 JUMPI
---
0x8b4: V835 = ISZERO S4
0x8b5: V836 = ISZERO V835
0x8b6: V837 = 0x8bb
0x8b9: JUMPI 0x8bb V836
---
Entry stack: [V12, 0xde, S8, S7, S6, 0x36f, S4, S3, 0x0, V832, V833]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0xde, S8, S7, S6, 0x36f, S4, S3, 0x0, V832, S3, S4, V832]

================================

Block 0x8ba
[0x8ba:0x8ba]
---
Predecessors: [0x8af]
Successors: []
---
0x8ba INVALID
---
0x8ba: INVALID 
---
Entry stack: [V12, 0xde, S10, S9, S8, 0x36f, S6, S5, 0x0, V832, S2, S1, V832]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S10, S9, S8, 0x36f, S6, S5, 0x0, V832, S2, S1, V832]

================================

Block 0x8bb
[0x8bb:0x8bd]
---
Predecessors: [0x8af]
Successors: [0x8be]
---
0x8bb JUMPDEST
0x8bc DIV
0x8bd EQ
---
0x8bb: JUMPDEST 
0x8bc: V838 = DIV V832 S1
0x8bd: V839 = EQ V838 S2
---
Entry stack: [V12, 0xde, S10, S9, S8, 0x36f, S6, S5, 0x0, V832, S2, S1, V832]
Stack pops: 3
Stack additions: [V839]
Exit stack: [V12, 0xde, S10, S9, S8, 0x36f, S6, S5, 0x0, V832, V839]

================================

Block 0x8be
[0x8be:0x8c4]
---
Predecessors: [0x8a2, 0x8bb]
Successors: [0x8c5, 0x8c6]
---
0x8be JUMPDEST
0x8bf ISZERO
0x8c0 ISZERO
0x8c1 PUSH2 0x8c6
0x8c4 JUMPI
---
0x8be: JUMPDEST 
0x8bf: V840 = ISZERO S0
0x8c0: V841 = ISZERO V840
0x8c1: V842 = 0x8c6
0x8c4: JUMPI 0x8c6 V841
---
Entry stack: [V12, 0xde, S8, S7, S6, 0x36f, S4, S3, 0x0, V832, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xde, S8, S7, S6, 0x36f, S4, S3, 0x0, V832]

================================

Block 0x8c5
[0x8c5:0x8c5]
---
Predecessors: [0x8be]
Successors: []
---
0x8c5 INVALID
---
0x8c5: INVALID 
---
Entry stack: [V12, 0xde, S7, S6, S5, 0x36f, S3, S2, 0x0, V832]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S7, S6, S5, 0x36f, S3, S2, 0x0, V832]

================================

Block 0x8c6
[0x8c6:0x8c9]
---
Predecessors: [0x8be, 0x8d1]
Successors: [0x8ca]
---
0x8c6 JUMPDEST
0x8c7 DUP1
0x8c8 SWAP2
0x8c9 POP
---
0x8c6: JUMPDEST 
---
Entry stack: [V12, 0xde, S9, {0x0, 0xde}, S7, S6, S5, {0x36f, 0x3dc, 0x565}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0xde, S9, {0x0, 0xde}, S7, S6, S5, {0x36f, 0x3dc, 0x565}, S3, S2, S0, S0]

================================

Block 0x8ca
[0x8ca:0x8d0]
---
Predecessors: [0x8c6]
Successors: [0x36f, 0x3dc, 0x565]
---
0x8ca JUMPDEST
0x8cb POP
0x8cc SWAP3
0x8cd SWAP2
0x8ce POP
0x8cf POP
0x8d0 JUMP
---
0x8ca: JUMPDEST 
0x8d0: JUMP {0x36f, 0x3dc, 0x565}
---
Entry stack: [V12, 0xde, S9, {0x0, 0xde}, S7, S6, S5, {0x36f, 0x3dc, 0x565}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0xde, S9, {0x0, 0xde}, S7, S6, S5, S1]

================================

Block 0x8d1
[0x8d1:0x8de]
---
Predecessors: [0x385, 0x54e]
Successors: [0x8c6, 0x8df]
---
0x8d1 JUMPDEST
0x8d2 PUSH1 0x0
0x8d4 DUP3
0x8d5 DUP3
0x8d6 ADD
0x8d7 DUP4
0x8d8 DUP2
0x8d9 LT
0x8da ISZERO
0x8db PUSH2 0x8c6
0x8de JUMPI
---
0x8d1: JUMPDEST 
0x8d2: V843 = 0x0
0x8d6: V844 = ADD S0 S1
0x8d9: V845 = LT V844 S1
0x8da: V846 = ISZERO V845
0x8db: V847 = 0x8c6
0x8de: JUMPI 0x8c6 V846
---
Entry stack: [V12, 0xde, S7, {0x0, 0xde}, S5, S4, S3, {0x3dc, 0x565}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V844]
Exit stack: [V12, 0xde, S7, {0x0, 0xde}, S5, S4, S3, {0x3dc, 0x565}, S1, S0, 0x0, V844]

================================

Block 0x8df
[0x8df:0x8df]
---
Predecessors: [0x8d1]
Successors: []
---
0x8df INVALID
---
0x8df: INVALID 
---
Entry stack: [V12, 0xde, S9, {0x0, 0xde}, S7, S6, S5, {0x3dc, 0x565}, S3, S2, 0x0, V844]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xde, S9, {0x0, 0xde}, S7, S6, S5, {0x3dc, 0x565}, S3, S2, 0x0, V844]

================================

Block 0x8e0
[0x8e0:0x8e3]
---
Predecessors: []
Successors: [0x8e4]
---
0x8e0 JUMPDEST
0x8e1 DUP1
0x8e2 SWAP2
0x8e3 POP
---
0x8e0: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x8e4
[0x8e4:0x922]
---
Predecessors: [0x8e0]
Successors: []
---
0x8e4 JUMPDEST
0x8e5 POP
0x8e6 SWAP3
0x8e7 SWAP2
0x8e8 POP
0x8e9 POP
0x8ea JUMP
0x8eb STOP
0x8ec LOG1
0x8ed PUSH6 0x627a7a723058
0x8f4 SHA3
0x8f5 SAR
0x8f6 PUSH20 0xd5a930a8f63355f16e6d6a8f19a90737f1f2f054
0x90b MSIZE
0x90c PUSH22 0xa747992cbdeda6be0029
---
0x8e4: JUMPDEST 
0x8ea: JUMP S4
0x8eb: STOP 
0x8ec: LOG S0 S1 S2
0x8ed: V848 = 0x627a7a723058
0x8f4: V849 = SHA3 0x627a7a723058 S3
0x8f5: V850 = SAR V849 S4
0x8f6: V851 = 0xd5a930a8f63355f16e6d6a8f19a90737f1f2f054
0x90b: V852 = MSIZE
0x90c: V853 = 0xa747992cbdeda6be0029
---
Entry stack: [S1, S0]
Stack pops: 18
Stack additions: [0xa747992cbdeda6be0029, V852, 0xd5a930a8f63355f16e6d6a8f19a90737f1f2f054, V850]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xe1
Exit block: 0xf4
Body: 0xe1, 0xe8, 0xec, 0xf4, 0x494

Function 1:
Public function signature: 0x158ef93e
Entry block: 0x110
Exit block: 0x123
Body: 0x110, 0x117, 0x11b, 0x123, 0x4a3

Function 2:
Public function signature: 0x2184a712
Entry block: 0x137
Exit block: 0x156
Body: 0x137, 0x13e, 0x142, 0x156, 0x4ac, 0x503, 0x507, 0x514, 0x518, 0x524

Function 3:
Public function signature: 0x22f3e2d4
Entry block: 0x168
Exit block: 0x16f
Body: 0x123, 0x168, 0x16f, 0x173

Function 4:
Public function signature: 0x50bfeadc
Entry block: 0x18f
Exit block: 0x156
Body: 0x156, 0x18f, 0x196, 0x19a, 0x582

Function 5:
Public function signature: 0x60659a92
Entry block: 0x1b4
Exit block: 0x1bb
Body: 0x156, 0x1b4, 0x1bb, 0x1bf

Function 6:
Public function signature: 0x679aefce
Entry block: 0x1d9
Exit block: 0x156
Body: 0x156, 0x1d9, 0x1e0, 0x1e4

Function 7:
Public function signature: 0x7d3d6522
Entry block: 0x1fe
Exit block: 0xdf
Body: 0xde, 0xdf, 0x123, 0x1fe, 0x205, 0x209, 0x665, 0x67a, 0x682, 0x684, 0x687

Function 8:
Public function signature: 0x8129fc1c
Entry block: 0x225
Exit block: 0xdf
Body: 0xde, 0xdf, 0x123, 0x225, 0x22c, 0x230, 0x68a, 0x6a1, 0x6a5, 0x6b1, 0x6b5, 0x6c9, 0x6d0, 0x6d4, 0x6ea, 0x6eb

Function 9:
Public function signature: 0x83197ef0
Entry block: 0x23a
Exit block: 0x801
Body: 0x23a, 0x241, 0x245, 0x6ed, 0x705, 0x709, 0x75e, 0x762, 0x76f, 0x773, 0x787, 0x788, 0x7ec, 0x7f0, 0x7fd, 0x801

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x24f
Exit block: 0xf4
Body: 0xf4, 0x24f, 0x256, 0x25a, 0x81d

Function 11:
Public function signature: 0xba9a061a
Entry block: 0x27e
Exit block: 0x156
Body: 0x156, 0x27e, 0x285, 0x289, 0x82c

Function 12:
Public function signature: 0xc549e6b9
Entry block: 0x2a3
Exit block: 0x156
Body: 0x156, 0x2a3, 0x2aa, 0x2ae, 0x834

Function 13:
Public function signature: 0xc59ee1dc
Entry block: 0x2c8
Exit block: 0x156
Body: 0x156, 0x2c8, 0x2cf, 0x2d3, 0x839

Function 14:
Public function signature: 0xd0febe4c
Entry block: 0xd5
Exit block: 0xdf
Body: 0xd5, 0xd6, 0xde, 0xdf

Function 15:
Public function signature: 0xd8270dce
Entry block: 0x2f7
Exit block: 0x156
Body: 0x156, 0x2f7, 0x2fe, 0x302, 0x83f

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x31c
Exit block: 0xdf
Body: 0xde, 0xdf, 0x31c, 0x323, 0x327, 0x845, 0x85c, 0x860, 0x871, 0x875, 0x89e, 0x89f

Function 17:
Public fallback function
Entry block: 0xd5
Exit block: 0xdf
Body: 0xd5, 0xd6, 0xde, 0xdf

Function 18:
Private function
Entry block: 0x60c
Exit block: 0x57f
Body: 0x34a, 0x352, 0x35d, 0x36f, 0x37a, 0x385, 0x565, 0x569, 0x570, 0x57a, 0x57c, 0x57f, 0x60c, 0x61e, 0x626, 0x636, 0x63e, 0x64e, 0x656, 0x8a2, 0x8af, 0x8bb, 0x8be, 0x8c6, 0x8ca

Function 19:
Private function
Entry block: 0x8d1
Exit block: 0x8ca
Body: 0x36f, 0x37a, 0x385, 0x3dc, 0x8c6, 0x8ca, 0x8d1

Function 20:
Private function
Entry block: 0x591
Exit block: 0x609
Body: 0x591, 0x5ec, 0x5fd, 0x609

Function 21:
Private function
Entry block: 0x529
Exit block: 0x57f
Body: 0x35d, 0x36f, 0x37a, 0x385, 0x529, 0x53e, 0x547, 0x54e, 0x565, 0x569, 0x570, 0x57a, 0x57c, 0x57f, 0x8a2, 0x8af, 0x8bb, 0x8be, 0x8c6, 0x8ca

Function 22:
Private function
Entry block: 0x33d
Exit block: 0x89f
Body: 0x33d, 0x34a, 0x352, 0x35d, 0x36f, 0x37a, 0x385, 0x3dc, 0x43e, 0x44f, 0x48d, 0x48e, 0x48f, 0x565, 0x569, 0x570, 0x57a, 0x57c, 0x57f, 0x8a2, 0x8af, 0x8bb, 0x8be, 0x8c6, 0x8ca

