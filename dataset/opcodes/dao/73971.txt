Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3a
0xa: JUMPI 0x3a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0xeb]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH3 0x821de3
0x1e DUP2
0x1f EQ
0x20 PUSH2 0xeb
0x23 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x821de3
0x1f: V14 = EQ V12 0x821de3
0x20: V15 = 0xeb
0x23: JUMPI 0xeb V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0xb]
Successors: [0x2f, 0x11a]
---
0x24 DUP1
0x25 PUSH4 0x3ef13367
0x2a EQ
0x2b PUSH2 0x11a
0x2e JUMPI
---
0x25: V16 = 0x3ef13367
0x2a: V17 = EQ 0x3ef13367 V12
0x2b: V18 = 0x11a
0x2e: JUMPI 0x11a V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x13b]
---
0x2f DUP1
0x30 PUSH4 0x6b9f96ea
0x35 EQ
0x36 PUSH2 0x13b
0x39 JUMPI
---
0x30: V19 = 0x6b9f96ea
0x35: V20 = EQ 0x6b9f96ea V12
0x36: V21 = 0x13b
0x39: JUMPI 0x13b V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3a
[0x3a:0x3a]
---
Predecessors: [0x0, 0x2f]
Successors: [0x3b]
---
0x3a JUMPDEST
---
0x3a: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x7a]
---
Predecessors: [0x3a]
Successors: [0x7b, 0x7f]
---
0x3b JUMPDEST
0x3c PUSH1 0x0
0x3e DUP1
0x3f SLOAD
0x40 PUSH1 0x1
0x42 PUSH1 0xa0
0x44 PUSH1 0x2
0x46 EXP
0x47 SUB
0x48 AND
0x49 SWAP1
0x4a CALLVALUE
0x4b SWAP1
0x4c CALLDATASIZE
0x4d PUSH1 0x40
0x4f MLOAD
0x50 DUP1
0x51 DUP4
0x52 DUP4
0x53 DUP1
0x54 DUP3
0x55 DUP5
0x56 CALLDATACOPY
0x57 DUP3
0x58 ADD
0x59 SWAP2
0x5a POP
0x5b POP
0x5c SWAP3
0x5d POP
0x5e POP
0x5f POP
0x60 PUSH1 0x0
0x62 PUSH1 0x40
0x64 MLOAD
0x65 DUP1
0x66 DUP4
0x67 SUB
0x68 DUP2
0x69 DUP6
0x6a DUP8
0x6b PUSH2 0x8796
0x6e GAS
0x6f SUB
0x70 CALL
0x71 SWAP3
0x72 POP
0x73 POP
0x74 POP
0x75 ISZERO
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x3b: JUMPDEST 
0x3c: V22 = 0x0
0x3f: V23 = S[0x0]
0x40: V24 = 0x1
0x42: V25 = 0xa0
0x44: V26 = 0x2
0x46: V27 = EXP 0x2 0xa0
0x47: V28 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x4a: V30 = CALLVALUE
0x4c: V31 = CALLDATASIZE
0x4d: V32 = 0x40
0x4f: V33 = M[0x40]
0x56: CALLDATACOPY V33 0x0 V31
0x58: V34 = ADD V33 V31
0x60: V35 = 0x0
0x62: V36 = 0x40
0x64: V37 = M[0x40]
0x67: V38 = SUB V34 V37
0x6b: V39 = 0x8796
0x6e: V40 = GAS
0x6f: V41 = SUB V40 0x8796
0x70: V42 = CALL V41 V29 V30 V37 V38 V37 0x0
0x75: V43 = ISZERO V42
0x76: V44 = ISZERO V43
0x77: V45 = 0x7f
0x7a: JUMPI 0x7f V44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x3b]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V46 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0xe8]
---
Predecessors: [0x3b]
Successors: [0xe9]
---
0x7f JUMPDEST
0x80 PUSH32 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xa1 CALLER
0xa2 CALLVALUE
0xa3 PUSH1 0x0
0xa5 CALLDATASIZE
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 PUSH1 0x1
0xab PUSH1 0xa0
0xad PUSH1 0x2
0xaf EXP
0xb0 SUB
0xb1 DUP6
0xb2 AND
0xb3 DUP2
0xb4 MSTORE
0xb5 PUSH1 0x20
0xb7 DUP2
0xb8 ADD
0xb9 DUP5
0xba SWAP1
0xbb MSTORE
0xbc PUSH1 0x60
0xbe PUSH1 0x40
0xc0 DUP3
0xc1 ADD
0xc2 DUP2
0xc3 DUP2
0xc4 MSTORE
0xc5 SWAP1
0xc6 DUP3
0xc7 ADD
0xc8 DUP4
0xc9 SWAP1
0xca MSTORE
0xcb PUSH1 0x80
0xcd DUP3
0xce ADD
0xcf DUP5
0xd0 DUP5
0xd1 DUP1
0xd2 DUP3
0xd3 DUP5
0xd4 CALLDATACOPY
0xd5 DUP3
0xd6 ADD
0xd7 SWAP2
0xd8 POP
0xd9 POP
0xda SWAP6
0xdb POP
0xdc POP
0xdd POP
0xde POP
0xdf POP
0xe0 POP
0xe1 PUSH1 0x40
0xe3 MLOAD
0xe4 DUP1
0xe5 SWAP2
0xe6 SUB
0xe7 SWAP1
0xe8 LOG1
---
0x7f: JUMPDEST 
0x80: V47 = 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xa1: V48 = CALLER
0xa2: V49 = CALLVALUE
0xa3: V50 = 0x0
0xa5: V51 = CALLDATASIZE
0xa6: V52 = 0x40
0xa8: V53 = M[0x40]
0xa9: V54 = 0x1
0xab: V55 = 0xa0
0xad: V56 = 0x2
0xaf: V57 = EXP 0x2 0xa0
0xb0: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2: V59 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0xb4: M[V53] = V59
0xb5: V60 = 0x20
0xb8: V61 = ADD V53 0x20
0xbb: M[V61] = V49
0xbc: V62 = 0x60
0xbe: V63 = 0x40
0xc1: V64 = ADD V53 0x40
0xc4: M[V64] = 0x60
0xc7: V65 = ADD V53 0x60
0xca: M[V65] = V51
0xcb: V66 = 0x80
0xce: V67 = ADD V53 0x80
0xd4: CALLDATACOPY V67 0x0 V51
0xd6: V68 = ADD V67 V51
0xe1: V69 = 0x40
0xe3: V70 = M[0x40]
0xe6: V71 = SUB V68 V70
0xe8: LOG V70 V71 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x7f, 0x2d6, 0x312]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0xb]
Successors: [0xf2, 0xf6]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V72 = CALLVALUE
0xed: V73 = ISZERO V72
0xee: V74 = 0xf6
0xf1: JUMPI 0xf6 V73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V75 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0xeb]
Successors: [0x150]
---
0xf6 JUMPDEST
0xf7 PUSH2 0xfe
0xfa PUSH2 0x150
0xfd JUMP
---
0xf6: JUMPDEST 
0xf7: V76 = 0xfe
0xfa: V77 = 0x150
0xfd: JUMP 0x150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfe]
Exit stack: [V12, 0xfe]

================================

Block 0xfe
[0xfe:0x119]
---
Predecessors: [0x150]
Successors: []
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 MLOAD
0x102 PUSH1 0x1
0x104 PUSH1 0xa0
0x106 PUSH1 0x2
0x108 EXP
0x109 SUB
0x10a SWAP1
0x10b SWAP2
0x10c AND
0x10d DUP2
0x10e MSTORE
0x10f PUSH1 0x20
0x111 ADD
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 SWAP2
0x117 SUB
0x118 SWAP1
0x119 RETURN
---
0xfe: JUMPDEST 
0xff: V78 = 0x40
0x101: V79 = M[0x40]
0x102: V80 = 0x1
0x104: V81 = 0xa0
0x106: V82 = 0x2
0x108: V83 = EXP 0x2 0xa0
0x109: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V85 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x10e: M[V79] = V85
0x10f: V86 = 0x20
0x111: V87 = ADD 0x20 V79
0x112: V88 = 0x40
0x114: V89 = M[0x40]
0x117: V90 = SUB V87 V89
0x119: RETURN V89 V90
---
Entry stack: [V12, 0xfe, V118]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xfe]

================================

Block 0x11a
[0x11a:0x120]
---
Predecessors: [0x24]
Successors: [0x121, 0x125]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c ISZERO
0x11d PUSH2 0x125
0x120 JUMPI
---
0x11a: JUMPDEST 
0x11b: V91 = CALLVALUE
0x11c: V92 = ISZERO V91
0x11d: V93 = 0x125
0x120: JUMPI 0x125 V92
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x121
[0x121:0x124]
---
Predecessors: [0x11a]
Successors: []
---
0x121 PUSH1 0x0
0x123 DUP1
0x124 REVERT
---
0x121: V94 = 0x0
0x124: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x125
[0x125:0x138]
---
Predecessors: [0x11a]
Successors: [0x15f]
---
0x125 JUMPDEST
0x126 PUSH2 0xe9
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 PUSH1 0x4
0x133 CALLDATALOAD
0x134 AND
0x135 PUSH2 0x15f
0x138 JUMP
---
0x125: JUMPDEST 
0x126: V95 = 0xe9
0x129: V96 = 0x1
0x12b: V97 = 0xa0
0x12d: V98 = 0x2
0x12f: V99 = EXP 0x2 0xa0
0x130: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131: V101 = 0x4
0x133: V102 = CALLDATALOAD 0x4
0x134: V103 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x135: V104 = 0x15f
0x138: JUMP 0x15f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe9, V103]
Exit stack: [V12, 0xe9, V103]

================================

Block 0x139
[0x139:0x13a]
---
Predecessors: []
Successors: []
---
0x139 JUMPDEST
0x13a STOP
---
0x139: JUMPDEST 
0x13a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x2f]
Successors: [0x142, 0x146]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V105 = CALLVALUE
0x13d: V106 = ISZERO V105
0x13e: V107 = 0x146
0x141: JUMPI 0x146 V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13b]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V108 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x13b]
Successors: [0x2dc]
---
0x146 JUMPDEST
0x147 PUSH2 0xe9
0x14a PUSH2 0x2dc
0x14d JUMP
---
0x146: JUMPDEST 
0x147: V109 = 0xe9
0x14a: V110 = 0x2dc
0x14d: JUMP 0x2dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe9]
Exit stack: [V12, 0xe9]

================================

Block 0x14e
[0x14e:0x14f]
---
Predecessors: []
Successors: []
---
0x14e JUMPDEST
0x14f STOP
---
0x14e: JUMPDEST 
0x14f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x150
[0x150:0x15e]
---
Predecessors: [0xf6]
Successors: [0xfe]
---
0x150 JUMPDEST
0x151 PUSH1 0x0
0x153 SLOAD
0x154 PUSH1 0x1
0x156 PUSH1 0xa0
0x158 PUSH1 0x2
0x15a EXP
0x15b SUB
0x15c AND
0x15d DUP2
0x15e JUMP
---
0x150: JUMPDEST 
0x151: V111 = 0x0
0x153: V112 = S[0x0]
0x154: V113 = 0x1
0x156: V114 = 0xa0
0x158: V115 = 0x2
0x15a: V116 = EXP 0x2 0xa0
0x15b: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15c: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x15e: JUMP 0xfe
---
Entry stack: [V12, 0xfe]
Stack pops: 1
Stack additions: [S0, V118]
Exit stack: [V12, 0xfe, V118]

================================

Block 0x15f
[0x15f:0x17a]
---
Predecessors: [0x125]
Successors: [0x17b, 0x17f]
---
0x15f JUMPDEST
0x160 PUSH1 0x0
0x162 DUP1
0x163 SLOAD
0x164 DUP2
0x165 SWAP1
0x166 DUP2
0x167 SWAP1
0x168 CALLER
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 SWAP1
0x172 DUP2
0x173 AND
0x174 SWAP2
0x175 AND
0x176 EQ
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x15f: JUMPDEST 
0x160: V119 = 0x0
0x163: V120 = S[0x0]
0x168: V121 = CALLER
0x169: V122 = 0x1
0x16b: V123 = 0xa0
0x16d: V124 = 0x2
0x16f: V125 = EXP 0x2 0xa0
0x170: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x175: V128 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x176: V129 = EQ V128 V127
0x177: V130 = 0x17f
0x17a: JUMPI 0x17f V129
---
Entry stack: [V12, 0xe9, V103]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0xe9, V103, 0x0, 0x0, 0x0]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x15f]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V131 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe9, V103, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9, V103, 0x0, 0x0, 0x0]

================================

Block 0x17f
[0x17f:0x1d7]
---
Predecessors: [0x15f]
Successors: [0x1d8, 0x1dc]
---
0x17f JUMPDEST
0x180 DUP4
0x181 SWAP3
0x182 POP
0x183 ADDRESS
0x184 SWAP2
0x185 POP
0x186 DUP3
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f AND
0x190 PUSH4 0x70a08231
0x195 DUP4
0x196 PUSH1 0x0
0x198 PUSH1 0x40
0x19a MLOAD
0x19b PUSH1 0x20
0x19d ADD
0x19e MSTORE
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 PUSH1 0xe0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 PUSH4 0xffffffff
0x1ac DUP5
0x1ad AND
0x1ae MUL
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x1
0x1b3 PUSH1 0xa0
0x1b5 PUSH1 0x2
0x1b7 EXP
0x1b8 SUB
0x1b9 SWAP1
0x1ba SWAP2
0x1bb AND
0x1bc PUSH1 0x4
0x1be DUP3
0x1bf ADD
0x1c0 MSTORE
0x1c1 PUSH1 0x24
0x1c3 ADD
0x1c4 PUSH1 0x20
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 DUP1
0x1ca DUP4
0x1cb SUB
0x1cc DUP2
0x1cd PUSH1 0x0
0x1cf DUP8
0x1d0 DUP1
0x1d1 EXTCODESIZE
0x1d2 ISZERO
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x17f: JUMPDEST 
0x183: V132 = ADDRESS
0x187: V133 = 0x1
0x189: V134 = 0xa0
0x18b: V135 = 0x2
0x18d: V136 = EXP 0x2 0xa0
0x18e: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x190: V139 = 0x70a08231
0x196: V140 = 0x0
0x198: V141 = 0x40
0x19a: V142 = M[0x40]
0x19b: V143 = 0x20
0x19d: V144 = ADD 0x20 V142
0x19e: M[V144] = 0x0
0x19f: V145 = 0x40
0x1a1: V146 = M[0x40]
0x1a2: V147 = 0xe0
0x1a4: V148 = 0x2
0x1a6: V149 = EXP 0x2 0xe0
0x1a7: V150 = 0xffffffff
0x1ad: V151 = AND 0x70a08231 0xffffffff
0x1ae: V152 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x1b0: M[V146] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1b1: V153 = 0x1
0x1b3: V154 = 0xa0
0x1b5: V155 = 0x2
0x1b7: V156 = EXP 0x2 0xa0
0x1b8: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bb: V158 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V159 = 0x4
0x1bf: V160 = ADD V146 0x4
0x1c0: M[V160] = V158
0x1c1: V161 = 0x24
0x1c3: V162 = ADD 0x24 V146
0x1c4: V163 = 0x20
0x1c6: V164 = 0x40
0x1c8: V165 = M[0x40]
0x1cb: V166 = SUB V162 V165
0x1cd: V167 = 0x0
0x1d1: V168 = EXTCODESIZE V138
0x1d2: V169 = ISZERO V168
0x1d3: V170 = ISZERO V169
0x1d4: V171 = 0x1dc
0x1d7: JUMPI 0x1dc V170
---
Entry stack: [V12, 0xe9, V103, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, V132, S0, V138, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V138]
Exit stack: [V12, 0xe9, V103, V103, V132, 0x0, V138, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V138]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x17f]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V172 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe9, V103, V103, V132, 0x0, V138, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, 0x0, V138, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V138]

================================

Block 0x1dc
[0x1dc:0x1e8]
---
Predecessors: [0x17f]
Successors: [0x1e9, 0x1ed]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x2c6
0x1e0 GAS
0x1e1 SUB
0x1e2 CALL
0x1e3 ISZERO
0x1e4 ISZERO
0x1e5 PUSH2 0x1ed
0x1e8 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V173 = 0x2c6
0x1e0: V174 = GAS
0x1e1: V175 = SUB V174 0x2c6
0x1e2: V176 = CALL V175 V138 0x0 V165 V166 V165 0x20
0x1e3: V177 = ISZERO V176
0x1e4: V178 = ISZERO V177
0x1e5: V179 = 0x1ed
0x1e8: JUMPI 0x1ed V178
---
Entry stack: [V12, 0xe9, V103, V103, V132, 0x0, V138, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V138]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, 0x0, V138, 0x70a08231, V162]

================================

Block 0x1e9
[0x1e9:0x1ec]
---
Predecessors: [0x1dc]
Successors: []
---
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec REVERT
---
0x1e9: V180 = 0x0
0x1ec: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe9, V103, V103, V132, 0x0, V138, 0x70a08231, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, 0x0, V138, 0x70a08231, V162]

================================

Block 0x1ed
[0x1ed:0x1ff]
---
Predecessors: [0x1dc]
Successors: [0x200, 0x204]
---
0x1ed JUMPDEST
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 MLOAD
0x1f6 SWAP2
0x1f7 POP
0x1f8 POP
0x1f9 DUP1
0x1fa ISZERO
0x1fb ISZERO
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1ed: JUMPDEST 
0x1f1: V181 = 0x40
0x1f3: V182 = M[0x40]
0x1f5: V183 = M[V182]
0x1fa: V184 = ISZERO V183
0x1fb: V185 = ISZERO V184
0x1fc: V186 = 0x204
0x1ff: JUMPI 0x204 V185
---
Entry stack: [V12, 0xe9, V103, V103, V132, 0x0, V138, 0x70a08231, V162]
Stack pops: 4
Stack additions: [V183]
Exit stack: [V12, 0xe9, V103, V103, V132, V183]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1ed]
Successors: [0x2d5]
---
0x200 PUSH2 0x2d5
0x203 JUMP
---
0x200: V187 = 0x2d5
0x203: JUMP 0x2d5
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, V183]

================================

Block 0x204
[0x204:0x265]
---
Predecessors: [0x1ed]
Successors: [0x266, 0x26a]
---
0x204 JUMPDEST
0x205 PUSH1 0x0
0x207 DUP1
0x208 SLOAD
0x209 PUSH1 0x1
0x20b PUSH1 0xa0
0x20d PUSH1 0x2
0x20f EXP
0x210 SUB
0x211 DUP1
0x212 DUP7
0x213 AND
0x214 SWAP3
0x215 PUSH4 0xa9059cbb
0x21a SWAP3
0x21b SWAP1
0x21c SWAP2
0x21d AND
0x21e SWAP1
0x21f DUP5
0x220 SWAP1
0x221 PUSH1 0x40
0x223 MLOAD
0x224 PUSH1 0x20
0x226 ADD
0x227 MSTORE
0x228 PUSH1 0x40
0x22a MLOAD
0x22b PUSH1 0xe0
0x22d PUSH1 0x2
0x22f EXP
0x230 PUSH4 0xffffffff
0x235 DUP6
0x236 AND
0x237 MUL
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 SWAP1
0x243 SWAP3
0x244 AND
0x245 PUSH1 0x4
0x247 DUP4
0x248 ADD
0x249 MSTORE
0x24a PUSH1 0x24
0x24c DUP3
0x24d ADD
0x24e MSTORE
0x24f PUSH1 0x44
0x251 ADD
0x252 PUSH1 0x20
0x254 PUSH1 0x40
0x256 MLOAD
0x257 DUP1
0x258 DUP4
0x259 SUB
0x25a DUP2
0x25b PUSH1 0x0
0x25d DUP8
0x25e DUP1
0x25f EXTCODESIZE
0x260 ISZERO
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x204: JUMPDEST 
0x205: V188 = 0x0
0x208: V189 = S[0x0]
0x209: V190 = 0x1
0x20b: V191 = 0xa0
0x20d: V192 = 0x2
0x20f: V193 = EXP 0x2 0xa0
0x210: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x213: V195 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x215: V196 = 0xa9059cbb
0x21d: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x221: V198 = 0x40
0x223: V199 = M[0x40]
0x224: V200 = 0x20
0x226: V201 = ADD 0x20 V199
0x227: M[V201] = 0x0
0x228: V202 = 0x40
0x22a: V203 = M[0x40]
0x22b: V204 = 0xe0
0x22d: V205 = 0x2
0x22f: V206 = EXP 0x2 0xe0
0x230: V207 = 0xffffffff
0x236: V208 = AND 0xa9059cbb 0xffffffff
0x237: V209 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x239: M[V203] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x23a: V210 = 0x1
0x23c: V211 = 0xa0
0x23e: V212 = 0x2
0x240: V213 = EXP 0x2 0xa0
0x241: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V215 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x245: V216 = 0x4
0x248: V217 = ADD V203 0x4
0x249: M[V217] = V215
0x24a: V218 = 0x24
0x24d: V219 = ADD V203 0x24
0x24e: M[V219] = V183
0x24f: V220 = 0x44
0x251: V221 = ADD 0x44 V203
0x252: V222 = 0x20
0x254: V223 = 0x40
0x256: V224 = M[0x40]
0x259: V225 = SUB V221 V224
0x25b: V226 = 0x0
0x25f: V227 = EXTCODESIZE V195
0x260: V228 = ISZERO V227
0x261: V229 = ISZERO V228
0x262: V230 = 0x26a
0x265: JUMPI 0x26a V229
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183]
Stack pops: 3
Stack additions: [S2, S1, S0, V195, 0xa9059cbb, V221, 0x20, V224, V225, V224, 0x0, V195]
Exit stack: [V12, 0xe9, V103, V103, V132, V183, V195, 0xa9059cbb, V221, 0x20, V224, V225, V224, 0x0, V195]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x204]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V231 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183, V195, 0xa9059cbb, V221, 0x20, V224, V225, V224, 0x0, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, V183, V195, 0xa9059cbb, V221, 0x20, V224, V225, V224, 0x0, V195]

================================

Block 0x26a
[0x26a:0x276]
---
Predecessors: [0x204]
Successors: [0x277, 0x27b]
---
0x26a JUMPDEST
0x26b PUSH2 0x2c6
0x26e GAS
0x26f SUB
0x270 CALL
0x271 ISZERO
0x272 ISZERO
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x26a: JUMPDEST 
0x26b: V232 = 0x2c6
0x26e: V233 = GAS
0x26f: V234 = SUB V233 0x2c6
0x270: V235 = CALL V234 V195 0x0 V224 V225 V224 0x20
0x271: V236 = ISZERO V235
0x272: V237 = ISZERO V236
0x273: V238 = 0x27b
0x276: JUMPI 0x27b V237
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183, V195, 0xa9059cbb, V221, 0x20, V224, V225, V224, 0x0, V195]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, V183, V195, 0xa9059cbb, V221]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x26a]
Successors: []
---
0x277 PUSH1 0x0
0x279 DUP1
0x27a REVERT
---
0x277: V239 = 0x0
0x27a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183, V195, 0xa9059cbb, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, V183, V195, 0xa9059cbb, V221]

================================

Block 0x27b
[0x27b:0x28b]
---
Predecessors: [0x26a]
Successors: [0x28c, 0x290]
---
0x27b JUMPDEST
0x27c POP
0x27d POP
0x27e POP
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 MLOAD
0x284 SWAP1
0x285 POP
0x286 ISZERO
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x27b: JUMPDEST 
0x27f: V240 = 0x40
0x281: V241 = M[0x40]
0x283: V242 = M[V241]
0x286: V243 = ISZERO V242
0x287: V244 = ISZERO V243
0x288: V245 = 0x290
0x28b: JUMPI 0x290 V244
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183, V195, 0xa9059cbb, V221]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, V183]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x27b]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V246 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, V183]

================================

Block 0x290
[0x290:0x2d4]
---
Predecessors: [0x27b]
Successors: [0x2d5]
---
0x290 JUMPDEST
0x291 PUSH32 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
0x2b2 DUP5
0x2b3 DUP3
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 PUSH1 0x1
0x2b9 PUSH1 0xa0
0x2bb PUSH1 0x2
0x2bd EXP
0x2be SUB
0x2bf SWAP1
0x2c0 SWAP3
0x2c1 AND
0x2c2 DUP3
0x2c3 MSTORE
0x2c4 PUSH1 0x20
0x2c6 DUP3
0x2c7 ADD
0x2c8 MSTORE
0x2c9 PUSH1 0x40
0x2cb SWAP1
0x2cc DUP2
0x2cd ADD
0x2ce SWAP1
0x2cf MLOAD
0x2d0 DUP1
0x2d1 SWAP2
0x2d2 SUB
0x2d3 SWAP1
0x2d4 LOG1
---
0x290: JUMPDEST 
0x291: V247 = 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
0x2b4: V248 = 0x40
0x2b6: V249 = M[0x40]
0x2b7: V250 = 0x1
0x2b9: V251 = 0xa0
0x2bb: V252 = 0x2
0x2bd: V253 = EXP 0x2 0xa0
0x2be: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c1: V255 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: M[V249] = V255
0x2c4: V256 = 0x20
0x2c7: V257 = ADD V249 0x20
0x2c8: M[V257] = V183
0x2c9: V258 = 0x40
0x2cd: V259 = ADD 0x40 V249
0x2cf: V260 = M[0x40]
0x2d2: V261 = SUB V259 V260
0x2d4: LOG V260 V261 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0xe9, V103, V103, V132, V183]

================================

Block 0x2d5
[0x2d5:0x2d5]
---
Predecessors: [0x200, 0x290]
Successors: [0x2d6]
---
0x2d5 JUMPDEST
---
0x2d5: JUMPDEST 
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9, V103, V103, V132, V183]

================================

Block 0x2d6
[0x2d6:0x2db]
---
Predecessors: [0x2d5]
Successors: [0xe9]
---
0x2d6 JUMPDEST
0x2d7 POP
0x2d8 POP
0x2d9 POP
0x2da POP
0x2db JUMP
---
0x2d6: JUMPDEST 
0x2db: JUMP 0xe9
---
Entry stack: [V12, 0xe9, V103, V103, V132, V183]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x2dc
[0x2dc:0x30c]
---
Predecessors: [0x146]
Successors: [0x30d, 0x311]
---
0x2dc JUMPDEST
0x2dd PUSH1 0x0
0x2df SLOAD
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 SWAP1
0x2e9 DUP2
0x2ea AND
0x2eb SWAP1
0x2ec ADDRESS
0x2ed AND
0x2ee BALANCE
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 PUSH1 0x0
0x2f4 PUSH1 0x40
0x2f6 MLOAD
0x2f7 DUP1
0x2f8 DUP4
0x2f9 SUB
0x2fa DUP2
0x2fb DUP6
0x2fc DUP8
0x2fd PUSH2 0x8796
0x300 GAS
0x301 SUB
0x302 CALL
0x303 SWAP3
0x304 POP
0x305 POP
0x306 POP
0x307 ISZERO
0x308 ISZERO
0x309 PUSH2 0x311
0x30c JUMPI
---
0x2dc: JUMPDEST 
0x2dd: V262 = 0x0
0x2df: V263 = S[0x0]
0x2e0: V264 = 0x1
0x2e2: V265 = 0xa0
0x2e4: V266 = 0x2
0x2e6: V267 = EXP 0x2 0xa0
0x2e7: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x2ec: V270 = ADDRESS
0x2ed: V271 = AND V270 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V272 = BALANCE V271
0x2ef: V273 = 0x40
0x2f1: V274 = M[0x40]
0x2f2: V275 = 0x0
0x2f4: V276 = 0x40
0x2f6: V277 = M[0x40]
0x2f9: V278 = SUB V274 V277
0x2fd: V279 = 0x8796
0x300: V280 = GAS
0x301: V281 = SUB V280 0x8796
0x302: V282 = CALL V281 V269 V272 V277 V278 V277 0x0
0x307: V283 = ISZERO V282
0x308: V284 = ISZERO V283
0x309: V285 = 0x311
0x30c: JUMPI 0x311 V284
---
Entry stack: [V12, 0xe9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9]

================================

Block 0x30d
[0x30d:0x310]
---
Predecessors: [0x2dc]
Successors: []
---
0x30d PUSH1 0x0
0x30f DUP1
0x310 REVERT
---
0x30d: V286 = 0x0
0x310: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9]

================================

Block 0x311
[0x311:0x311]
---
Predecessors: [0x2dc]
Successors: [0x312]
---
0x311 JUMPDEST
---
0x311: JUMPDEST 
---
Entry stack: [V12, 0xe9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe9]

================================

Block 0x312
[0x312:0x313]
---
Predecessors: [0x311]
Successors: [0xe9]
---
0x312 JUMPDEST
0x313 JUMP
---
0x312: JUMPDEST 
0x313: JUMP 0xe9
---
Entry stack: [V12, 0xe9]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x314
[0x314:0x328]
---
Predecessors: []
Successors: [0x329]
---
0x314 STOP
0x315 LOG1
0x316 PUSH6 0x627a7a723058
0x31d SHA3
0x31e SWAP10
0x31f GT
0x320 MISSING 0xe
0x321 SWAP8
0x322 MISSING 0xef
0x323 LOG2
0x324 SWAP6
0x325 MISSING 0xab
0x326 OR
0x327 MISSING 0xc8
0x328 SHR
---
0x314: STOP 
0x315: LOG S0 S1 S2
0x316: V287 = 0x627a7a723058
0x31d: V288 = SHA3 0x627a7a723058 S3
0x31f: V289 = GT S13 S4
0x320: MISSING 0xe
0x322: MISSING 0xef
0x323: LOG S0 S1 S2 S3
0x325: MISSING 0xab
0x326: V290 = OR S0 S1
0x327: MISSING 0xc8
0x328: V291 = SHR S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V289, S5, S6, S7, S8, S9, S10, S11, S12, V288, S8, S1, S2, S3, S4, S5, S6, S7, S0, S10, S5, S6, S7, S8, S9, S4, V290, V291]
Exit stack: []

================================

Block 0x329
[0x329:0x356]
---
Predecessors: [0x314]
Successors: []
---
0x329 JUMPDEST
0x32a MSIZE
0x32b MISSING 0xfb
0x32c MISSING 0xda
0x32d MISSING 0xcd
0x32e CALLDATASIZE
0x32f MISSING 0x4b
0x330 MISSING 0xce
0x331 MISSING 0x27
0x332 DUP12
0x333 LOG2
0x334 INVALID
0x335 MUL
0x336 PUSH32 0x26398a9f6f54d20029
---
0x329: JUMPDEST 
0x32a: V292 = MSIZE
0x32b: MISSING 0xfb
0x32c: MISSING 0xda
0x32d: MISSING 0xcd
0x32e: V293 = CALLDATASIZE
0x32f: MISSING 0x4b
0x330: MISSING 0xce
0x331: MISSING 0x27
0x333: LOG S11 S0 S1 S2
0x334: INVALID 
0x335: V294 = MUL S0 S1
0x336: V295 = 0x26398a9f6f54d20029
---
Entry stack: [V291]
Stack pops: 0
Stack additions: [V292, V293, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x26398a9f6f54d20029, V294]
Exit stack: []

================================

Function 0:
Public function signature: 0x821de3
Entry block: 0xeb
Exit block: 0xfe
Body: 0xeb, 0xf2, 0xf6, 0xfe, 0x150

Function 1:
Public function signature: 0x3ef13367
Entry block: 0x11a
Exit block: 0x28c
Body: 0xe9, 0x11a, 0x121, 0x125, 0x15f, 0x17b, 0x17f, 0x1d8, 0x1dc, 0x1e9, 0x1ed, 0x200, 0x204, 0x266, 0x26a, 0x277, 0x27b, 0x28c, 0x290, 0x2d5, 0x2d6

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0x13b
Exit block: 0xe9
Body: 0xe9, 0x13b, 0x142, 0x146, 0x2dc, 0x30d, 0x311, 0x312

Function 3:
Public fallback function
Entry block: 0x3a
Exit block: 0xe9
Body: 0x3a, 0x3b, 0x7b, 0x7f, 0xe9

