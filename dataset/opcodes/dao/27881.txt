Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3d
0xa: JUMPI 0x3d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xe1]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x9e5faafc
0x34 EQ
0x35 PUSH2 0xe1
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x9e5faafc
0x34: V10 = EQ 0x9e5faafc V8
0x35: V11 = 0xe1
0x38: JUMPI 0xe1 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x3c]
---
Predecessors: [0xb]
Successors: [0x3d]
---
0x39 PUSH2 0x3d
0x3c JUMP
---
0x39: V12 = 0x3d
0x3c: JUMP 0x3d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x3d
[0x3d:0x40]
---
Predecessors: [0x0, 0x39]
Successors: [0x41]
---
0x3d JUMPDEST
0x3e PUSH2 0xdf
---
0x3d: JUMPDEST 
0x3e: V13 = 0xdf
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xdf]
Exit stack: [V8, 0xdf]

================================

Block 0x41
[0x41:0xce]
---
Predecessors: [0x3d]
Successors: [0xcf]
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 PUSH1 0x0
0x46 SWAP1
0x47 SLOAD
0x48 SWAP1
0x49 PUSH2 0x100
0x4c EXP
0x4d SWAP1
0x4e DIV
0x4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64 AND
0x65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a AND
0x7b PUSH4 0x2e1a7d4d
0x80 PUSH1 0x2
0x82 PUSH1 0x0
0x84 POP
0x85 SLOAD
0x86 PUSH1 0x40
0x88 MLOAD
0x89 DUP3
0x8a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa8 MUL
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x4
0xad ADD
0xae DUP1
0xaf DUP3
0xb0 DUP2
0xb1 MSTORE
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 SWAP2
0xb6 POP
0xb7 POP
0xb8 PUSH1 0x20
0xba PUSH1 0x40
0xbc MLOAD
0xbd DUP1
0xbe DUP4
0xbf SUB
0xc0 DUP2
0xc1 PUSH1 0x0
0xc3 DUP8
0xc4 PUSH2 0x61da
0xc7 GAS
0xc8 SUB
0xc9 CALL
0xca ISZERO
0xcb PUSH2 0x2
0xce JUMPI
---
0x41: JUMPDEST 
0x42: V14 = 0x0
0x44: V15 = 0x0
0x47: V16 = S[0x0]
0x49: V17 = 0x100
0x4c: V18 = EXP 0x100 0x0
0x4e: V19 = DIV V16 0x1
0x4f: V20 = 0xffffffffffffffffffffffffffffffffffffffff
0x64: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff V19
0x65: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x7b: V24 = 0x2e1a7d4d
0x80: V25 = 0x2
0x82: V26 = 0x0
0x85: V27 = S[0x2]
0x86: V28 = 0x40
0x88: V29 = M[0x40]
0x8a: V30 = 0x100000000000000000000000000000000000000000000000000000000
0xa8: V31 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0xaa: M[V29] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0xab: V32 = 0x4
0xad: V33 = ADD 0x4 V29
0xb1: M[V33] = V27
0xb2: V34 = 0x20
0xb4: V35 = ADD 0x20 V33
0xb8: V36 = 0x20
0xba: V37 = 0x40
0xbc: V38 = M[0x40]
0xbf: V39 = SUB V35 V38
0xc1: V40 = 0x0
0xc4: V41 = 0x61da
0xc7: V42 = GAS
0xc8: V43 = SUB V42 0x61da
0xc9: V44 = CALL V43 V23 0x0 V38 V39 V38 0x20
0xca: V45 = ISZERO V44
0xcb: V46 = 0x2
0xce: THROWI V45
---
Entry stack: [V8, 0xdf]
Stack pops: 0
Stack additions: [V23, 0x2e1a7d4d, V35]
Exit stack: [V8, 0xdf, V23, 0x2e1a7d4d, V35]

================================

Block 0xcf
[0xcf:0xdc]
---
Predecessors: [0x41]
Successors: [0xdd]
---
0xcf POP
0xd0 POP
0xd1 POP
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 DUP1
0xd6 MLOAD
0xd7 SWAP1
0xd8 PUSH1 0x20
0xda ADD
0xdb POP
0xdc POP
---
0xd2: V47 = 0x40
0xd4: V48 = M[0x40]
0xd6: V49 = M[V48]
0xd8: V50 = 0x20
0xda: V51 = ADD 0x20 V48
---
Entry stack: [V8, 0xdf, V23, 0x2e1a7d4d, V35]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0xdf]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0xcf]
Successors: [0xdf]
---
0xdd JUMPDEST
0xde JUMP
---
0xdd: JUMPDEST 
0xde: JUMP 0xdf
---
Entry stack: [V8, 0xdf]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xdf
[0xdf:0xe0]
---
Predecessors: [0xdd]
Successors: []
---
0xdf JUMPDEST
0xe0 STOP
---
0xdf: JUMPDEST 
0xe0: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xe1
[0xe1:0xed]
---
Predecessors: [0xb]
Successors: [0xf0]
---
0xe1 JUMPDEST
0xe2 PUSH2 0xee
0xe5 PUSH1 0x4
0xe7 DUP1
0xe8 POP
0xe9 POP
0xea PUSH2 0xf0
0xed JUMP
---
0xe1: JUMPDEST 
0xe2: V52 = 0xee
0xe5: V53 = 0x4
0xea: V54 = 0xf0
0xed: JUMP 0xf0
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xee]
Exit stack: [V8, 0xee]

================================

Block 0xee
[0xee:0xef]
---
Predecessors: [0x2ad]
Successors: []
---
0xee JUMPDEST
0xef STOP
---
0xee: JUMPDEST 
0xef: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xf0
[0xf0:0x196]
---
Predecessors: [0xe1]
Successors: [0x197]
---
0xf0 JUMPDEST
0xf1 ADDRESS
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 BALANCE
0x109 PUSH1 0x2
0x10b PUSH1 0x0
0x10d POP
0x10e DUP2
0x10f SWAP1
0x110 SSTORE
0x111 POP
0x112 PUSH1 0x0
0x114 PUSH1 0x0
0x116 SWAP1
0x117 SLOAD
0x118 SWAP1
0x119 PUSH2 0x100
0x11c EXP
0x11d SWAP1
0x11e DIV
0x11f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134 AND
0x135 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14a AND
0x14b PUSH4 0xd0e30db0
0x150 PUSH1 0x2
0x152 PUSH1 0x0
0x154 POP
0x155 SLOAD
0x156 PUSH1 0x40
0x158 MLOAD
0x159 DUP3
0x15a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x178 MUL
0x179 DUP2
0x17a MSTORE
0x17b PUSH1 0x4
0x17d ADD
0x17e DUP1
0x17f SWAP1
0x180 POP
0x181 PUSH1 0x20
0x183 PUSH1 0x40
0x185 MLOAD
0x186 DUP1
0x187 DUP4
0x188 SUB
0x189 DUP2
0x18a DUP6
0x18b DUP9
0x18c PUSH2 0x8502
0x18f GAS
0x190 SUB
0x191 CALL
0x192 ISZERO
0x193 PUSH2 0x2
0x196 JUMPI
---
0xf0: JUMPDEST 
0xf1: V55 = ADDRESS
0xf2: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x108: V58 = BALANCE V57
0x109: V59 = 0x2
0x10b: V60 = 0x0
0x110: S[0x2] = V58
0x112: V61 = 0x0
0x114: V62 = 0x0
0x117: V63 = S[0x0]
0x119: V64 = 0x100
0x11c: V65 = EXP 0x100 0x0
0x11e: V66 = DIV V63 0x1
0x11f: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x134: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x135: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x14b: V71 = 0xd0e30db0
0x150: V72 = 0x2
0x152: V73 = 0x0
0x155: V74 = S[0x2]
0x156: V75 = 0x40
0x158: V76 = M[0x40]
0x15a: V77 = 0x100000000000000000000000000000000000000000000000000000000
0x178: V78 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x17a: M[V76] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x17b: V79 = 0x4
0x17d: V80 = ADD 0x4 V76
0x181: V81 = 0x20
0x183: V82 = 0x40
0x185: V83 = M[0x40]
0x188: V84 = SUB V80 V83
0x18c: V85 = 0x8502
0x18f: V86 = GAS
0x190: V87 = SUB V86 0x8502
0x191: V88 = CALL V87 V70 V74 V83 V84 V83 0x20
0x192: V89 = ISZERO V88
0x193: V90 = 0x2
0x196: THROWI V89
---
Entry stack: [V8, 0xee]
Stack pops: 0
Stack additions: [V70, 0xd0e30db0, V74, V80]
Exit stack: [V8, 0xee, V70, 0xd0e30db0, V74, V80]

================================

Block 0x197
[0x197:0x232]
---
Predecessors: [0xf0]
Successors: [0x233]
---
0x197 POP
0x198 POP
0x199 POP
0x19a POP
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f MLOAD
0x1a0 SWAP1
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 POP
0x1a5 POP
0x1a6 PUSH1 0x0
0x1a8 PUSH1 0x0
0x1aa SWAP1
0x1ab SLOAD
0x1ac SWAP1
0x1ad PUSH2 0x100
0x1b0 EXP
0x1b1 SWAP1
0x1b2 DIV
0x1b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c8 AND
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df PUSH4 0x2e1a7d4d
0x1e4 PUSH1 0x2
0x1e6 PUSH1 0x0
0x1e8 POP
0x1e9 SLOAD
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP3
0x1ee PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x20c MUL
0x20d DUP2
0x20e MSTORE
0x20f PUSH1 0x4
0x211 ADD
0x212 DUP1
0x213 DUP3
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP2
0x21a POP
0x21b POP
0x21c PUSH1 0x20
0x21e PUSH1 0x40
0x220 MLOAD
0x221 DUP1
0x222 DUP4
0x223 SUB
0x224 DUP2
0x225 PUSH1 0x0
0x227 DUP8
0x228 PUSH2 0x61da
0x22b GAS
0x22c SUB
0x22d CALL
0x22e ISZERO
0x22f PUSH2 0x2
0x232 JUMPI
---
0x19b: V91 = 0x40
0x19d: V92 = M[0x40]
0x19f: V93 = M[V92]
0x1a1: V94 = 0x20
0x1a3: V95 = ADD 0x20 V92
0x1a6: V96 = 0x0
0x1a8: V97 = 0x0
0x1ab: V98 = S[0x0]
0x1ad: V99 = 0x100
0x1b0: V100 = EXP 0x100 0x0
0x1b2: V101 = DIV V98 0x1
0x1b3: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1c9: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1df: V106 = 0x2e1a7d4d
0x1e4: V107 = 0x2
0x1e6: V108 = 0x0
0x1e9: V109 = S[0x2]
0x1ea: V110 = 0x40
0x1ec: V111 = M[0x40]
0x1ee: V112 = 0x100000000000000000000000000000000000000000000000000000000
0x20c: V113 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0x20e: M[V111] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x20f: V114 = 0x4
0x211: V115 = ADD 0x4 V111
0x215: M[V115] = V109
0x216: V116 = 0x20
0x218: V117 = ADD 0x20 V115
0x21c: V118 = 0x20
0x21e: V119 = 0x40
0x220: V120 = M[0x40]
0x223: V121 = SUB V117 V120
0x225: V122 = 0x0
0x228: V123 = 0x61da
0x22b: V124 = GAS
0x22c: V125 = SUB V124 0x61da
0x22d: V126 = CALL V125 V105 0x0 V120 V121 V120 0x20
0x22e: V127 = ISZERO V126
0x22f: V128 = 0x2
0x232: THROWI V127
---
Entry stack: [V8, 0xee, V70, 0xd0e30db0, V74, V80]
Stack pops: 4
Stack additions: [V105, 0x2e1a7d4d, V117]
Exit stack: [V8, 0xee, V105, 0x2e1a7d4d, V117]

================================

Block 0x233
[0x233:0x2ac]
---
Predecessors: [0x197]
Successors: [0x2ad]
---
0x233 POP
0x234 POP
0x235 POP
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a MLOAD
0x23b SWAP1
0x23c PUSH1 0x20
0x23e ADD
0x23f POP
0x240 POP
0x241 PUSH1 0x1
0x243 PUSH1 0x0
0x245 SWAP1
0x246 SLOAD
0x247 SWAP1
0x248 PUSH2 0x100
0x24b EXP
0x24c SWAP1
0x24d DIV
0x24e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x263 AND
0x264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x279 AND
0x27a PUSH1 0x0
0x27c ADDRESS
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 BALANCE
0x294 PUSH1 0x40
0x296 MLOAD
0x297 DUP1
0x298 SWAP1
0x299 POP
0x29a PUSH1 0x0
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 DUP4
0x2a1 SUB
0x2a2 DUP2
0x2a3 DUP6
0x2a4 DUP9
0x2a5 DUP9
0x2a6 CALL
0x2a7 SWAP4
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac POP
---
0x236: V129 = 0x40
0x238: V130 = M[0x40]
0x23a: V131 = M[V130]
0x23c: V132 = 0x20
0x23e: V133 = ADD 0x20 V130
0x241: V134 = 0x1
0x243: V135 = 0x0
0x246: V136 = S[0x1]
0x248: V137 = 0x100
0x24b: V138 = EXP 0x100 0x0
0x24d: V139 = DIV V136 0x1
0x24e: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x263: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x264: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x279: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x27a: V144 = 0x0
0x27c: V145 = ADDRESS
0x27d: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x293: V148 = BALANCE V147
0x294: V149 = 0x40
0x296: V150 = M[0x40]
0x29a: V151 = 0x0
0x29c: V152 = 0x40
0x29e: V153 = M[0x40]
0x2a1: V154 = SUB V150 V153
0x2a6: V155 = CALL 0x0 V143 V148 V153 V154 V153 0x0
---
Entry stack: [V8, 0xee, V105, 0x2e1a7d4d, V117]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0xee]

================================

Block 0x2ad
[0x2ad:0x2ae]
---
Predecessors: [0x233]
Successors: [0xee]
---
0x2ad JUMPDEST
0x2ae JUMP
---
0x2ad: JUMPDEST 
0x2ae: JUMP 0xee
---
Entry stack: [V8, 0xee]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x9e5faafc
Entry block: 0xe1
Exit block: 0xee
Body: 0xe1, 0xee, 0xf0, 0x197, 0x233, 0x2ad

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0xdf
Body: 0x39, 0x3d, 0x41, 0xcf, 0xdd, 0xdf

