Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x72]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x72
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x72
0xa: JUMPI 0x72 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7b]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x8e081e4
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7b
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x8e081e4
0x20: V14 = EQ V12 0x8e081e4
0x21: V15 = 0x7b
0x24: JUMPI 0x7b V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xc4]
---
0x25 DUP1
0x26 PUSH4 0x6ad1fe02
0x2b EQ
0x2c PUSH2 0xc4
0x2f JUMPI
---
0x26: V16 = 0x6ad1fe02
0x2b: V17 = EQ 0x6ad1fe02 V12
0x2c: V18 = 0xc4
0x2f: JUMPI 0xc4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xf3]
---
0x30 DUP1
0x31 PUSH4 0x89476069
0x36 EQ
0x37 PUSH2 0xf3
0x3a JUMPI
---
0x31: V19 = 0x89476069
0x36: V20 = EQ 0x89476069 V12
0x37: V21 = 0xf3
0x3a: JUMPI 0xf3 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x114]
---
0x3b DUP1
0x3c PUSH4 0xa6f2ae3a
0x41 EQ
0x42 PUSH2 0x114
0x45 JUMPI
---
0x3c: V22 = 0xa6f2ae3a
0x41: V23 = EQ 0xa6f2ae3a V12
0x42: V24 = 0x114
0x45: JUMPI 0x114 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x129]
---
0x46 DUP1
0x47 PUSH4 0xb622ab4a
0x4c EQ
0x4d PUSH2 0x129
0x50 JUMPI
---
0x47: V25 = 0xb622ab4a
0x4c: V26 = EQ 0xb622ab4a V12
0x4d: V27 = 0x129
0x50: JUMPI 0x129 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x160]
---
0x51 DUP1
0x52 PUSH4 0xca4b208b
0x57 EQ
0x58 PUSH2 0x160
0x5b JUMPI
---
0x52: V28 = 0xca4b208b
0x57: V29 = EQ 0xca4b208b V12
0x58: V30 = 0x160
0x5b: JUMPI 0x160 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x18f]
---
0x5c DUP1
0x5d PUSH4 0xe086e5ec
0x62 EQ
0x63 PUSH2 0x18f
0x66 JUMPI
---
0x5d: V31 = 0xe086e5ec
0x62: V32 = EQ 0xe086e5ec V12
0x63: V33 = 0x18f
0x66: JUMPI 0x18f V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1a4]
---
0x67 DUP1
0x68 PUSH4 0xfc0c546a
0x6d EQ
0x6e PUSH2 0x1a4
0x71 JUMPI
---
0x68: V34 = 0xfc0c546a
0x6d: V35 = EQ 0xfc0c546a V12
0x6e: V36 = 0x1a4
0x71: JUMPI 0x1a4 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x0, 0x67]
Successors: [0x76]
---
0x72 JUMPDEST
0x73 PUSH2 0x79
---
0x72: JUMPDEST 
0x73: V37 = 0x79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79]
Exit stack: [V12, 0x79]

================================

Block 0x76
[0x76:0x76]
---
Predecessors: [0x72, 0x3ab, 0x478]
Successors: [0x77]
---
0x76 JUMPDEST
---
0x76: JUMPDEST 
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x76]
Successors: [0x79]
---
0x77 JUMPDEST
0x78 JUMP
---
0x77: JUMPDEST 
0x78: JUMP 0x79
---
Entry stack: [V12, 0x79]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x79
[0x79:0x7a]
---
Predecessors: [0x77, 0x266, 0x391]
Successors: []
---
0x79 JUMPDEST
0x7a STOP
---
0x79: JUMPDEST 
0x7a: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b
[0x7b:0x81]
---
Predecessors: [0xb]
Successors: [0x82, 0x86]
---
0x7b JUMPDEST
0x7c CALLVALUE
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x7b: JUMPDEST 
0x7c: V38 = CALLVALUE
0x7d: V39 = ISZERO V38
0x7e: V40 = 0x86
0x81: JUMPI 0x86 V39
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x7b]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V41 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86
[0x86:0xc1]
---
Predecessors: [0x7b]
Successors: [0x1d3]
---
0x86 JUMPDEST
0x87 PUSH2 0x79
0x8a PUSH1 0x1
0x8c PUSH1 0xa0
0x8e PUSH1 0x2
0x90 EXP
0x91 SUB
0x92 PUSH1 0x4
0x94 CALLDATALOAD
0x95 DUP2
0x96 AND
0x97 SWAP1
0x98 PUSH1 0x24
0x9a CALLDATALOAD
0x9b AND
0x9c PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb9 NOT
0xba PUSH1 0x44
0xbc CALLDATALOAD
0xbd AND
0xbe PUSH2 0x1d3
0xc1 JUMP
---
0x86: JUMPDEST 
0x87: V42 = 0x79
0x8a: V43 = 0x1
0x8c: V44 = 0xa0
0x8e: V45 = 0x2
0x90: V46 = EXP 0x2 0xa0
0x91: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92: V48 = 0x4
0x94: V49 = CALLDATALOAD 0x4
0x96: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x98: V51 = 0x24
0x9a: V52 = CALLDATALOAD 0x24
0x9b: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V54 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb9: V55 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xba: V56 = 0x44
0xbc: V57 = CALLDATALOAD 0x44
0xbd: V58 = AND V57 0xffffffff00000000000000000000000000000000000000000000000000000000
0xbe: V59 = 0x1d3
0xc1: JUMP 0x1d3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79, V50, V53, V58]
Exit stack: [V12, 0x79, V50, V53, V58]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: []
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0x25]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V60 = CALLVALUE
0xc6: V61 = ISZERO V60
0xc7: V62 = 0xcf
0xca: JUMPI 0xcf V61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V63 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcf
[0xcf:0xd6]
---
Predecessors: [0xc4]
Successors: [0x26b]
---
0xcf JUMPDEST
0xd0 PUSH2 0xd7
0xd3 PUSH2 0x26b
0xd6 JUMP
---
0xcf: JUMPDEST 
0xd0: V64 = 0xd7
0xd3: V65 = 0x26b
0xd6: JUMP 0x26b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd7]
Exit stack: [V12, 0xd7]

================================

Block 0xd7
[0xd7:0xf2]
---
Predecessors: [0x26b, 0x44e, 0x4b4]
Successors: []
---
0xd7 JUMPDEST
0xd8 PUSH1 0x40
0xda MLOAD
0xdb PUSH1 0x1
0xdd PUSH1 0xa0
0xdf PUSH1 0x2
0xe1 EXP
0xe2 SUB
0xe3 SWAP1
0xe4 SWAP2
0xe5 AND
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x20
0xea ADD
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef SWAP2
0xf0 SUB
0xf1 SWAP1
0xf2 RETURN
---
0xd7: JUMPDEST 
0xd8: V66 = 0x40
0xda: V67 = M[0x40]
0xdb: V68 = 0x1
0xdd: V69 = 0xa0
0xdf: V70 = 0x2
0xe1: V71 = EXP 0x2 0xa0
0xe2: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5: V73 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe7: M[V67] = V73
0xe8: V74 = 0x20
0xea: V75 = ADD 0x20 V67
0xeb: V76 = 0x40
0xed: V77 = M[0x40]
0xf0: V78 = SUB V75 V77
0xf2: RETURN V77 V78
---
Entry stack: [V12, 0xd7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd7]

================================

Block 0xf3
[0xf3:0xf9]
---
Predecessors: [0x30]
Successors: [0xfa, 0xfe]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 ISZERO
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xf3: JUMPDEST 
0xf4: V79 = CALLVALUE
0xf5: V80 = ISZERO V79
0xf6: V81 = 0xfe
0xf9: JUMPI 0xfe V80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xf3]
Successors: []
---
0xfa PUSH1 0x0
0xfc DUP1
0xfd REVERT
---
0xfa: V82 = 0x0
0xfd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfe
[0xfe:0x111]
---
Predecessors: [0xf3]
Successors: [0x27a]
---
0xfe JUMPDEST
0xff PUSH2 0x79
0x102 PUSH1 0x1
0x104 PUSH1 0xa0
0x106 PUSH1 0x2
0x108 EXP
0x109 SUB
0x10a PUSH1 0x4
0x10c CALLDATALOAD
0x10d AND
0x10e PUSH2 0x27a
0x111 JUMP
---
0xfe: JUMPDEST 
0xff: V83 = 0x79
0x102: V84 = 0x1
0x104: V85 = 0xa0
0x106: V86 = 0x2
0x108: V87 = EXP 0x2 0xa0
0x109: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a: V89 = 0x4
0x10c: V90 = CALLDATALOAD 0x4
0x10d: V91 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V92 = 0x27a
0x111: JUMP 0x27a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79, V91]
Exit stack: [V12, 0x79, V91]

================================

Block 0x112
[0x112:0x113]
---
Predecessors: []
Successors: []
---
0x112 JUMPDEST
0x113 STOP
---
0x112: JUMPDEST 
0x113: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x3b]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V93 = CALLVALUE
0x116: V94 = ISZERO V93
0x117: V95 = 0x11f
0x11a: JUMPI 0x11f V94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V96 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11f
[0x11f:0x126]
---
Predecessors: [0x114]
Successors: [0x394]
---
0x11f JUMPDEST
0x120 PUSH2 0x79
0x123 PUSH2 0x394
0x126 JUMP
---
0x11f: JUMPDEST 
0x120: V97 = 0x79
0x123: V98 = 0x394
0x126: JUMP 0x394
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79]
Exit stack: [V12, 0x79]

================================

Block 0x127
[0x127:0x128]
---
Predecessors: []
Successors: []
---
0x127 JUMPDEST
0x128 STOP
---
0x127: JUMPDEST 
0x128: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x129
[0x129:0x12f]
---
Predecessors: [0x46]
Successors: [0x130, 0x134]
---
0x129 JUMPDEST
0x12a CALLVALUE
0x12b ISZERO
0x12c PUSH2 0x134
0x12f JUMPI
---
0x129: JUMPDEST 
0x12a: V99 = CALLVALUE
0x12b: V100 = ISZERO V99
0x12c: V101 = 0x134
0x12f: JUMPI 0x134 V100
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x130
[0x130:0x133]
---
Predecessors: [0x129]
Successors: []
---
0x130 PUSH1 0x0
0x132 DUP1
0x133 REVERT
---
0x130: V102 = 0x0
0x133: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x134
[0x134:0x15d]
---
Predecessors: [0x129]
Successors: [0x3e3]
---
0x134 JUMPDEST
0x135 PUSH2 0x79
0x138 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x155 NOT
0x156 PUSH1 0x4
0x158 CALLDATALOAD
0x159 AND
0x15a PUSH2 0x3e3
0x15d JUMP
---
0x134: JUMPDEST 
0x135: V103 = 0x79
0x138: V104 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x155: V105 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x156: V106 = 0x4
0x158: V107 = CALLDATALOAD 0x4
0x159: V108 = AND V107 0xffffffff00000000000000000000000000000000000000000000000000000000
0x15a: V109 = 0x3e3
0x15d: JUMP 0x3e3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79, V108]
Exit stack: [V12, 0x79, V108]

================================

Block 0x15e
[0x15e:0x15f]
---
Predecessors: []
Successors: []
---
0x15e JUMPDEST
0x15f STOP
---
0x15e: JUMPDEST 
0x15f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x160
[0x160:0x166]
---
Predecessors: [0x51]
Successors: [0x167, 0x16b]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x160: JUMPDEST 
0x161: V110 = CALLVALUE
0x162: V111 = ISZERO V110
0x163: V112 = 0x16b
0x166: JUMPI 0x16b V111
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x160]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V113 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16b
[0x16b:0x172]
---
Predecessors: [0x160]
Successors: [0x44e]
---
0x16b JUMPDEST
0x16c PUSH2 0xd7
0x16f PUSH2 0x44e
0x172 JUMP
---
0x16b: JUMPDEST 
0x16c: V114 = 0xd7
0x16f: V115 = 0x44e
0x172: JUMP 0x44e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd7]
Exit stack: [V12, 0xd7]

================================

Block 0x173
[0x173:0x18e]
---
Predecessors: []
Successors: []
---
0x173 JUMPDEST
0x174 PUSH1 0x40
0x176 MLOAD
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f SWAP1
0x180 SWAP2
0x181 AND
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 PUSH1 0x40
0x189 MLOAD
0x18a DUP1
0x18b SWAP2
0x18c SUB
0x18d SWAP1
0x18e RETURN
---
0x173: JUMPDEST 
0x174: V116 = 0x40
0x176: V117 = M[0x40]
0x177: V118 = 0x1
0x179: V119 = 0xa0
0x17b: V120 = 0x2
0x17d: V121 = EXP 0x2 0xa0
0x17e: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V123 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x183: M[V117] = V123
0x184: V124 = 0x20
0x186: V125 = ADD 0x20 V117
0x187: V126 = 0x40
0x189: V127 = M[0x40]
0x18c: V128 = SUB V125 V127
0x18e: RETURN V127 V128
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x18f
[0x18f:0x195]
---
Predecessors: [0x5c]
Successors: [0x196, 0x19a]
---
0x18f JUMPDEST
0x190 CALLVALUE
0x191 ISZERO
0x192 PUSH2 0x19a
0x195 JUMPI
---
0x18f: JUMPDEST 
0x190: V129 = CALLVALUE
0x191: V130 = ISZERO V129
0x192: V131 = 0x19a
0x195: JUMPI 0x19a V130
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x196
[0x196:0x199]
---
Predecessors: [0x18f]
Successors: []
---
0x196 PUSH1 0x0
0x198 DUP1
0x199 REVERT
---
0x196: V132 = 0x0
0x199: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19a
[0x19a:0x1a1]
---
Predecessors: [0x18f]
Successors: [0x45d]
---
0x19a JUMPDEST
0x19b PUSH2 0x79
0x19e PUSH2 0x45d
0x1a1 JUMP
---
0x19a: JUMPDEST 
0x19b: V133 = 0x79
0x19e: V134 = 0x45d
0x1a1: JUMP 0x45d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79]
Exit stack: [V12, 0x79]

================================

Block 0x1a2
[0x1a2:0x1a3]
---
Predecessors: []
Successors: []
---
0x1a2 JUMPDEST
0x1a3 STOP
---
0x1a2: JUMPDEST 
0x1a3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x67]
Successors: [0x1ab, 0x1af]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V135 = CALLVALUE
0x1a6: V136 = ISZERO V135
0x1a7: V137 = 0x1af
0x1aa: JUMPI 0x1af V136
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V138 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x1a4]
Successors: [0x4b4]
---
0x1af JUMPDEST
0x1b0 PUSH2 0xd7
0x1b3 PUSH2 0x4b4
0x1b6 JUMP
---
0x1af: JUMPDEST 
0x1b0: V139 = 0xd7
0x1b3: V140 = 0x4b4
0x1b6: JUMP 0x4b4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd7]
Exit stack: [V12, 0xd7]

================================

Block 0x1b7
[0x1b7:0x1d2]
---
Predecessors: []
Successors: []
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb PUSH1 0x1
0x1bd PUSH1 0xa0
0x1bf PUSH1 0x2
0x1c1 EXP
0x1c2 SUB
0x1c3 SWAP1
0x1c4 SWAP2
0x1c5 AND
0x1c6 DUP2
0x1c7 MSTORE
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP1
0x1cf SWAP2
0x1d0 SUB
0x1d1 SWAP1
0x1d2 RETURN
---
0x1b7: JUMPDEST 
0x1b8: V141 = 0x40
0x1ba: V142 = M[0x40]
0x1bb: V143 = 0x1
0x1bd: V144 = 0xa0
0x1bf: V145 = 0x2
0x1c1: V146 = EXP 0x2 0xa0
0x1c2: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V148 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: M[V142] = V148
0x1c8: V149 = 0x20
0x1ca: V150 = ADD 0x20 V142
0x1cb: V151 = 0x40
0x1cd: V152 = M[0x40]
0x1d0: V153 = SUB V150 V152
0x1d2: RETURN V152 V153
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d3
[0x1d3:0x1e9]
---
Predecessors: [0x86]
Successors: [0x1ea, 0x1ee]
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x0
0x1d6 SLOAD
0x1d7 CALLER
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 AND
0x1e3 SWAP2
0x1e4 AND
0x1e5 EQ
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V154 = 0x0
0x1d6: V155 = S[0x0]
0x1d7: V156 = CALLER
0x1d8: V157 = 0x1
0x1da: V158 = 0xa0
0x1dc: V159 = 0x2
0x1de: V160 = EXP 0x2 0xa0
0x1df: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x1e4: V163 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V164 = EQ V163 V162
0x1e6: V165 = 0x1ee
0x1e9: JUMPI 0x1ee V164
---
Entry stack: [V12, 0x79, V50, V53, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V50, V53, V58]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x1d3]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V166 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V50, V53, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V50, V53, V58]

================================

Block 0x1ee
[0x1ee:0x265]
---
Predecessors: [0x1d3]
Successors: [0x266]
---
0x1ee JUMPDEST
0x1ef PUSH1 0x1
0x1f1 DUP1
0x1f2 SLOAD
0x1f3 PUSH1 0x1
0x1f5 PUSH1 0xa0
0x1f7 PUSH1 0x2
0x1f9 EXP
0x1fa SUB
0x1fb DUP1
0x1fc DUP7
0x1fd AND
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 NOT
0x214 SWAP3
0x215 DUP4
0x216 AND
0x217 OR
0x218 SWAP1
0x219 SWAP3
0x21a SSTORE
0x21b PUSH1 0x2
0x21d DUP1
0x21e SLOAD
0x21f PUSH1 0xe0
0x221 PUSH1 0x2
0x223 EXP
0x224 DUP6
0x225 DIV
0x226 PUSH21 0x10000000000000000000000000000000000000000
0x23c MUL
0x23d PUSH24 0xffffffff0000000000000000000000000000000000000000
0x256 NOT
0x257 SWAP5
0x258 DUP8
0x259 AND
0x25a SWAP2
0x25b SWAP1
0x25c SWAP4
0x25d AND
0x25e OR
0x25f SWAP3
0x260 SWAP1
0x261 SWAP3
0x262 AND
0x263 OR
0x264 SWAP1
0x265 SSTORE
---
0x1ee: JUMPDEST 
0x1ef: V167 = 0x1
0x1f2: V168 = S[0x1]
0x1f3: V169 = 0x1
0x1f5: V170 = 0xa0
0x1f7: V171 = 0x2
0x1f9: V172 = EXP 0x2 0xa0
0x1fa: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V174 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V176 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x216: V177 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V168
0x217: V178 = OR V177 V174
0x21a: S[0x1] = V178
0x21b: V179 = 0x2
0x21e: V180 = S[0x2]
0x21f: V181 = 0xe0
0x221: V182 = 0x2
0x223: V183 = EXP 0x2 0xe0
0x225: V184 = DIV V58 0x100000000000000000000000000000000000000000000000000000000
0x226: V185 = 0x10000000000000000000000000000000000000000
0x23c: V186 = MUL 0x10000000000000000000000000000000000000000 V184
0x23d: V187 = 0xffffffff0000000000000000000000000000000000000000
0x256: V188 = NOT 0xffffffff0000000000000000000000000000000000000000
0x259: V189 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V190 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V180
0x25e: V191 = OR V190 V189
0x262: V192 = AND V191 0xffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff
0x263: V193 = OR V192 V186
0x265: S[0x2] = V193
---
Entry stack: [V12, 0x79, V50, V53, V58]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x79, V50, V53, V58]

================================

Block 0x266
[0x266:0x26a]
---
Predecessors: [0x1ee]
Successors: [0x79]
---
0x266 JUMPDEST
0x267 POP
0x268 POP
0x269 POP
0x26a JUMP
---
0x266: JUMPDEST 
0x26a: JUMP 0x79
---
Entry stack: [V12, 0x79, V50, V53, V58]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x26b
[0x26b:0x279]
---
Predecessors: [0xcf]
Successors: [0xd7]
---
0x26b JUMPDEST
0x26c PUSH1 0x1
0x26e SLOAD
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 AND
0x278 DUP2
0x279 JUMP
---
0x26b: JUMPDEST 
0x26c: V194 = 0x1
0x26e: V195 = S[0x1]
0x26f: V196 = 0x1
0x271: V197 = 0xa0
0x273: V198 = 0x2
0x275: V199 = EXP 0x2 0xa0
0x276: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x279: JUMP 0xd7
---
Entry stack: [V12, 0xd7]
Stack pops: 1
Stack additions: [S0, V201]
Exit stack: [V12, 0xd7, V201]

================================

Block 0x27a
[0x27a:0x290]
---
Predecessors: [0xfe]
Successors: [0x291, 0x295]
---
0x27a JUMPDEST
0x27b PUSH1 0x0
0x27d SLOAD
0x27e CALLER
0x27f PUSH1 0x1
0x281 PUSH1 0xa0
0x283 PUSH1 0x2
0x285 EXP
0x286 SUB
0x287 SWAP1
0x288 DUP2
0x289 AND
0x28a SWAP2
0x28b AND
0x28c EQ
0x28d PUSH2 0x295
0x290 JUMPI
---
0x27a: JUMPDEST 
0x27b: V202 = 0x0
0x27d: V203 = S[0x0]
0x27e: V204 = CALLER
0x27f: V205 = 0x1
0x281: V206 = 0xa0
0x283: V207 = 0x2
0x285: V208 = EXP 0x2 0xa0
0x286: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x289: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x28b: V211 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V212 = EQ V211 V210
0x28d: V213 = 0x295
0x290: JUMPI 0x295 V212
---
Entry stack: [V12, 0x79, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V91]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x27a]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V214 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V91]

================================

Block 0x295
[0x295:0x2fe]
---
Predecessors: [0x27a]
Successors: [0x2ff, 0x303]
---
0x295 JUMPDEST
0x296 PUSH1 0x2
0x298 SLOAD
0x299 PUSH1 0x0
0x29b DUP1
0x29c SLOAD
0x29d PUSH1 0x1
0x29f PUSH1 0xa0
0x2a1 PUSH1 0x2
0x2a3 EXP
0x2a4 SUB
0x2a5 SWAP3
0x2a6 DUP4
0x2a7 AND
0x2a8 SWAP3
0x2a9 PUSH4 0xa9059cbb
0x2ae SWAP3
0x2af SWAP2
0x2b0 DUP2
0x2b1 AND
0x2b2 SWAP2
0x2b3 SWAP1
0x2b4 DUP6
0x2b5 AND
0x2b6 SWAP1
0x2b7 PUSH4 0x70a08231
0x2bc SWAP1
0x2bd ADDRESS
0x2be SWAP1
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 PUSH1 0x20
0x2c4 ADD
0x2c5 MSTORE
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 PUSH1 0xe0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce PUSH4 0xffffffff
0x2d3 DUP5
0x2d4 AND
0x2d5 MUL
0x2d6 DUP2
0x2d7 MSTORE
0x2d8 PUSH1 0x1
0x2da PUSH1 0xa0
0x2dc PUSH1 0x2
0x2de EXP
0x2df SUB
0x2e0 SWAP1
0x2e1 SWAP2
0x2e2 AND
0x2e3 PUSH1 0x4
0x2e5 DUP3
0x2e6 ADD
0x2e7 MSTORE
0x2e8 PUSH1 0x24
0x2ea ADD
0x2eb PUSH1 0x20
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP1
0x2f1 DUP4
0x2f2 SUB
0x2f3 DUP2
0x2f4 PUSH1 0x0
0x2f6 DUP8
0x2f7 DUP1
0x2f8 EXTCODESIZE
0x2f9 ISZERO
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x295: JUMPDEST 
0x296: V215 = 0x2
0x298: V216 = S[0x2]
0x299: V217 = 0x0
0x29c: V218 = S[0x0]
0x29d: V219 = 0x1
0x29f: V220 = 0xa0
0x2a1: V221 = 0x2
0x2a3: V222 = EXP 0x2 0xa0
0x2a4: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a7: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2a9: V225 = 0xa9059cbb
0x2b1: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x2b5: V227 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V228 = 0x70a08231
0x2bd: V229 = ADDRESS
0x2bf: V230 = 0x40
0x2c1: V231 = M[0x40]
0x2c2: V232 = 0x20
0x2c4: V233 = ADD 0x20 V231
0x2c5: M[V233] = 0x0
0x2c6: V234 = 0x40
0x2c8: V235 = M[0x40]
0x2c9: V236 = 0xe0
0x2cb: V237 = 0x2
0x2cd: V238 = EXP 0x2 0xe0
0x2ce: V239 = 0xffffffff
0x2d4: V240 = AND 0x70a08231 0xffffffff
0x2d5: V241 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2d7: M[V235] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2d8: V242 = 0x1
0x2da: V243 = 0xa0
0x2dc: V244 = 0x2
0x2de: V245 = EXP 0x2 0xa0
0x2df: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e2: V247 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V248 = 0x4
0x2e6: V249 = ADD V235 0x4
0x2e7: M[V249] = V247
0x2e8: V250 = 0x24
0x2ea: V251 = ADD 0x24 V235
0x2eb: V252 = 0x20
0x2ed: V253 = 0x40
0x2ef: V254 = M[0x40]
0x2f2: V255 = SUB V251 V254
0x2f4: V256 = 0x0
0x2f8: V257 = EXTCODESIZE V227
0x2f9: V258 = ISZERO V257
0x2fa: V259 = ISZERO V258
0x2fb: V260 = 0x303
0x2fe: JUMPI 0x303 V259
---
Entry stack: [V12, 0x79, V91]
Stack pops: 1
Stack additions: [S0, V224, 0xa9059cbb, V226, V227, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V227]
Exit stack: [V12, 0x79, V91, V224, 0xa9059cbb, V226, V227, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V227]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x295]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V261 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V91, V224, 0xa9059cbb, V226, V227, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V91, V224, 0xa9059cbb, V226, V227, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V227]

================================

Block 0x303
[0x303:0x30f]
---
Predecessors: [0x295]
Successors: [0x310, 0x314]
---
0x303 JUMPDEST
0x304 PUSH2 0x2c6
0x307 GAS
0x308 SUB
0x309 CALL
0x30a ISZERO
0x30b ISZERO
0x30c PUSH2 0x314
0x30f JUMPI
---
0x303: JUMPDEST 
0x304: V262 = 0x2c6
0x307: V263 = GAS
0x308: V264 = SUB V263 0x2c6
0x309: V265 = CALL V264 V227 0x0 V254 V255 V254 0x20
0x30a: V266 = ISZERO V265
0x30b: V267 = ISZERO V266
0x30c: V268 = 0x314
0x30f: JUMPI 0x314 V267
---
Entry stack: [V12, 0x79, V91, V224, 0xa9059cbb, V226, V227, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V227]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x79, V91, V224, 0xa9059cbb, V226, V227, 0x70a08231, V251]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x303]
Successors: []
---
0x310 PUSH1 0x0
0x312 DUP1
0x313 REVERT
---
0x310: V269 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V91, V224, 0xa9059cbb, V226, V227, 0x70a08231, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V91, V224, 0xa9059cbb, V226, V227, 0x70a08231, V251]

================================

Block 0x314
[0x314:0x365]
---
Predecessors: [0x303]
Successors: [0x366, 0x36a]
---
0x314 JUMPDEST
0x315 POP
0x316 POP
0x317 POP
0x318 PUSH1 0x40
0x31a MLOAD
0x31b DUP1
0x31c MLOAD
0x31d SWAP1
0x31e POP
0x31f PUSH1 0x0
0x321 PUSH1 0x40
0x323 MLOAD
0x324 PUSH1 0x20
0x326 ADD
0x327 MSTORE
0x328 PUSH1 0x40
0x32a MLOAD
0x32b PUSH1 0xe0
0x32d PUSH1 0x2
0x32f EXP
0x330 PUSH4 0xffffffff
0x335 DUP6
0x336 AND
0x337 MUL
0x338 DUP2
0x339 MSTORE
0x33a PUSH1 0x1
0x33c PUSH1 0xa0
0x33e PUSH1 0x2
0x340 EXP
0x341 SUB
0x342 SWAP1
0x343 SWAP3
0x344 AND
0x345 PUSH1 0x4
0x347 DUP4
0x348 ADD
0x349 MSTORE
0x34a PUSH1 0x24
0x34c DUP3
0x34d ADD
0x34e MSTORE
0x34f PUSH1 0x44
0x351 ADD
0x352 PUSH1 0x20
0x354 PUSH1 0x40
0x356 MLOAD
0x357 DUP1
0x358 DUP4
0x359 SUB
0x35a DUP2
0x35b PUSH1 0x0
0x35d DUP8
0x35e DUP1
0x35f EXTCODESIZE
0x360 ISZERO
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x314: JUMPDEST 
0x318: V270 = 0x40
0x31a: V271 = M[0x40]
0x31c: V272 = M[V271]
0x31f: V273 = 0x0
0x321: V274 = 0x40
0x323: V275 = M[0x40]
0x324: V276 = 0x20
0x326: V277 = ADD 0x20 V275
0x327: M[V277] = 0x0
0x328: V278 = 0x40
0x32a: V279 = M[0x40]
0x32b: V280 = 0xe0
0x32d: V281 = 0x2
0x32f: V282 = EXP 0x2 0xe0
0x330: V283 = 0xffffffff
0x336: V284 = AND 0xa9059cbb 0xffffffff
0x337: V285 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x339: M[V279] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x33a: V286 = 0x1
0x33c: V287 = 0xa0
0x33e: V288 = 0x2
0x340: V289 = EXP 0x2 0xa0
0x341: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x344: V291 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x345: V292 = 0x4
0x348: V293 = ADD V279 0x4
0x349: M[V293] = V291
0x34a: V294 = 0x24
0x34d: V295 = ADD V279 0x24
0x34e: M[V295] = V272
0x34f: V296 = 0x44
0x351: V297 = ADD 0x44 V279
0x352: V298 = 0x20
0x354: V299 = 0x40
0x356: V300 = M[0x40]
0x359: V301 = SUB V297 V300
0x35b: V302 = 0x0
0x35f: V303 = EXTCODESIZE V224
0x360: V304 = ISZERO V303
0x361: V305 = ISZERO V304
0x362: V306 = 0x36a
0x365: JUMPI 0x36a V305
---
Entry stack: [V12, 0x79, V91, V224, 0xa9059cbb, V226, V227, 0x70a08231, V251]
Stack pops: 6
Stack additions: [S5, S4, V297, 0x20, V300, V301, V300, 0x0, S5]
Exit stack: [V12, 0x79, V91, V224, 0xa9059cbb, V297, 0x20, V300, V301, V300, 0x0, V224]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x314]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V307 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V91, V224, 0xa9059cbb, V297, 0x20, V300, V301, V300, 0x0, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V91, V224, 0xa9059cbb, V297, 0x20, V300, V301, V300, 0x0, V224]

================================

Block 0x36a
[0x36a:0x376]
---
Predecessors: [0x314]
Successors: [0x377, 0x37b]
---
0x36a JUMPDEST
0x36b PUSH2 0x2c6
0x36e GAS
0x36f SUB
0x370 CALL
0x371 ISZERO
0x372 ISZERO
0x373 PUSH2 0x37b
0x376 JUMPI
---
0x36a: JUMPDEST 
0x36b: V308 = 0x2c6
0x36e: V309 = GAS
0x36f: V310 = SUB V309 0x2c6
0x370: V311 = CALL V310 V224 0x0 V300 V301 V300 0x20
0x371: V312 = ISZERO V311
0x372: V313 = ISZERO V312
0x373: V314 = 0x37b
0x376: JUMPI 0x37b V313
---
Entry stack: [V12, 0x79, V91, V224, 0xa9059cbb, V297, 0x20, V300, V301, V300, 0x0, V224]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x79, V91, V224, 0xa9059cbb, V297]

================================

Block 0x377
[0x377:0x37a]
---
Predecessors: [0x36a]
Successors: []
---
0x377 PUSH1 0x0
0x379 DUP1
0x37a REVERT
---
0x377: V315 = 0x0
0x37a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V91, V224, 0xa9059cbb, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V91, V224, 0xa9059cbb, V297]

================================

Block 0x37b
[0x37b:0x38b]
---
Predecessors: [0x36a]
Successors: [0x38c, 0x390]
---
0x37b JUMPDEST
0x37c POP
0x37d POP
0x37e POP
0x37f PUSH1 0x40
0x381 MLOAD
0x382 DUP1
0x383 MLOAD
0x384 SWAP1
0x385 POP
0x386 ISZERO
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x37b: JUMPDEST 
0x37f: V316 = 0x40
0x381: V317 = M[0x40]
0x383: V318 = M[V317]
0x386: V319 = ISZERO V318
0x387: V320 = ISZERO V319
0x388: V321 = 0x390
0x38b: JUMPI 0x390 V320
---
Entry stack: [V12, 0x79, V91, V224, 0xa9059cbb, V297]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x79, V91]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x37b]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V322 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V91]

================================

Block 0x390
[0x390:0x390]
---
Predecessors: [0x37b, 0x3fa]
Successors: [0x391]
---
0x390 JUMPDEST
---
0x390: JUMPDEST 
---
Entry stack: [V12, 0x79, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, S0]

================================

Block 0x391
[0x391:0x393]
---
Predecessors: [0x390]
Successors: [0x79]
---
0x391 JUMPDEST
0x392 POP
0x393 JUMP
---
0x391: JUMPDEST 
0x393: JUMP 0x79
---
Entry stack: [V12, 0x79, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x394
[0x394:0x3a6]
---
Predecessors: [0x11f]
Successors: [0x3a7, 0x3ab]
---
0x394 JUMPDEST
0x395 PUSH1 0x1
0x397 SLOAD
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 AND
0x3a1 ISZERO
0x3a2 ISZERO
0x3a3 PUSH2 0x3ab
0x3a6 JUMPI
---
0x394: JUMPDEST 
0x395: V323 = 0x1
0x397: V324 = S[0x1]
0x398: V325 = 0x1
0x39a: V326 = 0xa0
0x39c: V327 = 0x2
0x39e: V328 = EXP 0x2 0xa0
0x39f: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a0: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x3a1: V331 = ISZERO V330
0x3a2: V332 = ISZERO V331
0x3a3: V333 = 0x3ab
0x3a6: JUMPI 0x3ab V332
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x3a7
[0x3a7:0x3aa]
---
Predecessors: [0x394]
Successors: []
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
---
0x3a7: V334 = 0x0
0x3aa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x3ab
[0x3ab:0x3db]
---
Predecessors: [0x394]
Successors: [0x76, 0x3dc]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x1
0x3ae SLOAD
0x3af PUSH1 0x1
0x3b1 PUSH1 0xa0
0x3b3 PUSH1 0x2
0x3b5 EXP
0x3b6 SUB
0x3b7 SWAP1
0x3b8 DUP2
0x3b9 AND
0x3ba SWAP1
0x3bb ADDRESS
0x3bc AND
0x3bd BALANCE
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 PUSH1 0x0
0x3c3 PUSH1 0x40
0x3c5 MLOAD
0x3c6 DUP1
0x3c7 DUP4
0x3c8 SUB
0x3c9 DUP2
0x3ca DUP6
0x3cb DUP8
0x3cc PUSH2 0x8796
0x3cf GAS
0x3d0 SUB
0x3d1 CALL
0x3d2 SWAP3
0x3d3 POP
0x3d4 POP
0x3d5 POP
0x3d6 ISZERO
0x3d7 ISZERO
0x3d8 PUSH2 0x76
0x3db JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V335 = 0x1
0x3ae: V336 = S[0x1]
0x3af: V337 = 0x1
0x3b1: V338 = 0xa0
0x3b3: V339 = 0x2
0x3b5: V340 = EXP 0x2 0xa0
0x3b6: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b9: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x3bb: V343 = ADDRESS
0x3bc: V344 = AND V343 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V345 = BALANCE V344
0x3be: V346 = 0x40
0x3c0: V347 = M[0x40]
0x3c1: V348 = 0x0
0x3c3: V349 = 0x40
0x3c5: V350 = M[0x40]
0x3c8: V351 = SUB V347 V350
0x3cc: V352 = 0x8796
0x3cf: V353 = GAS
0x3d0: V354 = SUB V353 0x8796
0x3d1: V355 = CALL V354 V342 V345 V350 V351 V350 0x0
0x3d6: V356 = ISZERO V355
0x3d7: V357 = ISZERO V356
0x3d8: V358 = 0x76
0x3db: JUMPI 0x76 V357
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x3dc
[0x3dc:0x3df]
---
Predecessors: [0x3ab]
Successors: []
---
0x3dc PUSH1 0x0
0x3de DUP1
0x3df REVERT
---
0x3dc: V359 = 0x0
0x3df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x3e0
[0x3e0:0x3e0]
---
Predecessors: []
Successors: [0x3e1]
---
0x3e0 JUMPDEST
---
0x3e0: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3e1
[0x3e1:0x3e2]
---
Predecessors: [0x3e0]
Successors: []
Has unresolved jump.
---
0x3e1 JUMPDEST
0x3e2 JUMP
---
0x3e1: JUMPDEST 
0x3e2: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e3
[0x3e3:0x3f5]
---
Predecessors: [0x134]
Successors: [0x3f6, 0x3fa]
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0x1
0x3e6 SLOAD
0x3e7 PUSH1 0x1
0x3e9 PUSH1 0xa0
0x3eb PUSH1 0x2
0x3ed EXP
0x3ee SUB
0x3ef AND
0x3f0 ISZERO
0x3f1 ISZERO
0x3f2 PUSH2 0x3fa
0x3f5 JUMPI
---
0x3e3: JUMPDEST 
0x3e4: V360 = 0x1
0x3e6: V361 = S[0x1]
0x3e7: V362 = 0x1
0x3e9: V363 = 0xa0
0x3eb: V364 = 0x2
0x3ed: V365 = EXP 0x2 0xa0
0x3ee: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ef: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x3f0: V368 = ISZERO V367
0x3f1: V369 = ISZERO V368
0x3f2: V370 = 0x3fa
0x3f5: JUMPI 0x3fa V369
---
Entry stack: [V12, 0x79, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V108]

================================

Block 0x3f6
[0x3f6:0x3f9]
---
Predecessors: [0x3e3]
Successors: []
---
0x3f6 PUSH1 0x0
0x3f8 DUP1
0x3f9 REVERT
---
0x3f6: V371 = 0x0
0x3f9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V108]

================================

Block 0x3fa
[0x3fa:0x445]
---
Predecessors: [0x3e3]
Successors: [0x390, 0x446]
---
0x3fa JUMPDEST
0x3fb PUSH1 0x1
0x3fd SLOAD
0x3fe PUSH1 0x1
0x400 PUSH1 0xa0
0x402 PUSH1 0x2
0x404 EXP
0x405 SUB
0x406 SWAP1
0x407 DUP2
0x408 AND
0x409 SWAP1
0x40a PUSH1 0xe0
0x40c PUSH1 0x2
0x40e EXP
0x40f DUP4
0x410 DIV
0x411 SWAP1
0x412 ADDRESS
0x413 AND
0x414 BALANCE
0x415 PUSH1 0x40
0x417 MLOAD
0x418 DUP3
0x419 PUSH4 0xffffffff
0x41e AND
0x41f PUSH1 0xe0
0x421 PUSH1 0x2
0x423 EXP
0x424 MUL
0x425 DUP2
0x426 MSTORE
0x427 PUSH1 0x4
0x429 ADD
0x42a PUSH1 0x0
0x42c PUSH1 0x40
0x42e MLOAD
0x42f DUP1
0x430 DUP4
0x431 SUB
0x432 DUP2
0x433 DUP6
0x434 DUP9
0x435 PUSH2 0x8796
0x438 GAS
0x439 SUB
0x43a CALL
0x43b SWAP4
0x43c POP
0x43d POP
0x43e POP
0x43f POP
0x440 ISZERO
0x441 ISZERO
0x442 PUSH2 0x390
0x445 JUMPI
---
0x3fa: JUMPDEST 
0x3fb: V372 = 0x1
0x3fd: V373 = S[0x1]
0x3fe: V374 = 0x1
0x400: V375 = 0xa0
0x402: V376 = 0x2
0x404: V377 = EXP 0x2 0xa0
0x405: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x408: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x40a: V380 = 0xe0
0x40c: V381 = 0x2
0x40e: V382 = EXP 0x2 0xe0
0x410: V383 = DIV V108 0x100000000000000000000000000000000000000000000000000000000
0x412: V384 = ADDRESS
0x413: V385 = AND V384 0xffffffffffffffffffffffffffffffffffffffff
0x414: V386 = BALANCE V385
0x415: V387 = 0x40
0x417: V388 = M[0x40]
0x419: V389 = 0xffffffff
0x41e: V390 = AND 0xffffffff V383
0x41f: V391 = 0xe0
0x421: V392 = 0x2
0x423: V393 = EXP 0x2 0xe0
0x424: V394 = MUL 0x100000000000000000000000000000000000000000000000000000000 V390
0x426: M[V388] = V394
0x427: V395 = 0x4
0x429: V396 = ADD 0x4 V388
0x42a: V397 = 0x0
0x42c: V398 = 0x40
0x42e: V399 = M[0x40]
0x431: V400 = SUB V396 V399
0x435: V401 = 0x8796
0x438: V402 = GAS
0x439: V403 = SUB V402 0x8796
0x43a: V404 = CALL V403 V379 V386 V399 V400 V399 0x0
0x440: V405 = ISZERO V404
0x441: V406 = ISZERO V405
0x442: V407 = 0x390
0x445: JUMPI 0x390 V406
---
Entry stack: [V12, 0x79, V108]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x79, V108]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x3fa]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V408 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V108]

================================

Block 0x44a
[0x44a:0x44a]
---
Predecessors: []
Successors: [0x44b]
---
0x44a JUMPDEST
---
0x44a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x44b
[0x44b:0x44d]
---
Predecessors: [0x44a]
Successors: []
Has unresolved jump.
---
0x44b JUMPDEST
0x44c POP
0x44d JUMP
---
0x44b: JUMPDEST 
0x44d: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x44e
[0x44e:0x45c]
---
Predecessors: [0x16b]
Successors: [0xd7]
---
0x44e JUMPDEST
0x44f PUSH1 0x0
0x451 SLOAD
0x452 PUSH1 0x1
0x454 PUSH1 0xa0
0x456 PUSH1 0x2
0x458 EXP
0x459 SUB
0x45a AND
0x45b DUP2
0x45c JUMP
---
0x44e: JUMPDEST 
0x44f: V409 = 0x0
0x451: V410 = S[0x0]
0x452: V411 = 0x1
0x454: V412 = 0xa0
0x456: V413 = 0x2
0x458: V414 = EXP 0x2 0xa0
0x459: V415 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45a: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x45c: JUMP 0xd7
---
Entry stack: [V12, 0xd7]
Stack pops: 1
Stack additions: [S0, V416]
Exit stack: [V12, 0xd7, V416]

================================

Block 0x45d
[0x45d:0x473]
---
Predecessors: [0x19a]
Successors: [0x474, 0x478]
---
0x45d JUMPDEST
0x45e PUSH1 0x0
0x460 SLOAD
0x461 CALLER
0x462 PUSH1 0x1
0x464 PUSH1 0xa0
0x466 PUSH1 0x2
0x468 EXP
0x469 SUB
0x46a SWAP1
0x46b DUP2
0x46c AND
0x46d SWAP2
0x46e AND
0x46f EQ
0x470 PUSH2 0x478
0x473 JUMPI
---
0x45d: JUMPDEST 
0x45e: V417 = 0x0
0x460: V418 = S[0x0]
0x461: V419 = CALLER
0x462: V420 = 0x1
0x464: V421 = 0xa0
0x466: V422 = 0x2
0x468: V423 = EXP 0x2 0xa0
0x469: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46c: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x46e: V426 = AND V418 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V427 = EQ V426 V425
0x470: V428 = 0x478
0x473: JUMPI 0x478 V427
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x474
[0x474:0x477]
---
Predecessors: [0x45d]
Successors: []
---
0x474 PUSH1 0x0
0x476 DUP1
0x477 REVERT
---
0x474: V429 = 0x0
0x477: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x478
[0x478:0x4ac]
---
Predecessors: [0x45d]
Successors: [0x76, 0x4ad]
---
0x478 JUMPDEST
0x479 PUSH1 0x0
0x47b SLOAD
0x47c PUSH1 0x1
0x47e PUSH1 0xa0
0x480 PUSH1 0x2
0x482 EXP
0x483 SUB
0x484 SWAP1
0x485 DUP2
0x486 AND
0x487 SWAP1
0x488 ADDRESS
0x489 AND
0x48a BALANCE
0x48b DUP1
0x48c ISZERO
0x48d PUSH2 0x8fc
0x490 MUL
0x491 SWAP1
0x492 PUSH1 0x40
0x494 MLOAD
0x495 PUSH1 0x0
0x497 PUSH1 0x40
0x499 MLOAD
0x49a DUP1
0x49b DUP4
0x49c SUB
0x49d DUP2
0x49e DUP6
0x49f DUP9
0x4a0 DUP9
0x4a1 CALL
0x4a2 SWAP4
0x4a3 POP
0x4a4 POP
0x4a5 POP
0x4a6 POP
0x4a7 ISZERO
0x4a8 ISZERO
0x4a9 PUSH2 0x76
0x4ac JUMPI
---
0x478: JUMPDEST 
0x479: V430 = 0x0
0x47b: V431 = S[0x0]
0x47c: V432 = 0x1
0x47e: V433 = 0xa0
0x480: V434 = 0x2
0x482: V435 = EXP 0x2 0xa0
0x483: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x486: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x488: V438 = ADDRESS
0x489: V439 = AND V438 0xffffffffffffffffffffffffffffffffffffffff
0x48a: V440 = BALANCE V439
0x48c: V441 = ISZERO V440
0x48d: V442 = 0x8fc
0x490: V443 = MUL 0x8fc V441
0x492: V444 = 0x40
0x494: V445 = M[0x40]
0x495: V446 = 0x0
0x497: V447 = 0x40
0x499: V448 = M[0x40]
0x49c: V449 = SUB V445 V448
0x4a1: V450 = CALL V443 V437 V440 V448 V449 V448 0x0
0x4a7: V451 = ISZERO V450
0x4a8: V452 = ISZERO V451
0x4a9: V453 = 0x76
0x4ac: JUMPI 0x76 V452
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x4ad
[0x4ad:0x4b0]
---
Predecessors: [0x478]
Successors: []
---
0x4ad PUSH1 0x0
0x4af DUP1
0x4b0 REVERT
---
0x4ad: V454 = 0x0
0x4b0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x4b1
[0x4b1:0x4b1]
---
Predecessors: []
Successors: [0x4b2]
---
0x4b1 JUMPDEST
---
0x4b1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4b2
[0x4b2:0x4b3]
---
Predecessors: [0x4b1]
Successors: []
Has unresolved jump.
---
0x4b2 JUMPDEST
0x4b3 JUMP
---
0x4b2: JUMPDEST 
0x4b3: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4b4
[0x4b4:0x4c2]
---
Predecessors: [0x1af]
Successors: [0xd7]
---
0x4b4 JUMPDEST
0x4b5 PUSH1 0x2
0x4b7 SLOAD
0x4b8 PUSH1 0x1
0x4ba PUSH1 0xa0
0x4bc PUSH1 0x2
0x4be EXP
0x4bf SUB
0x4c0 AND
0x4c1 DUP2
0x4c2 JUMP
---
0x4b4: JUMPDEST 
0x4b5: V455 = 0x2
0x4b7: V456 = S[0x2]
0x4b8: V457 = 0x1
0x4ba: V458 = 0xa0
0x4bc: V459 = 0x2
0x4be: V460 = EXP 0x2 0xa0
0x4bf: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c0: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x4c2: JUMP 0xd7
---
Entry stack: [V12, 0xd7]
Stack pops: 1
Stack additions: [S0, V462]
Exit stack: [V12, 0xd7, V462]

================================

Block 0x4c3
[0x4c3:0x4fa]
---
Predecessors: []
Successors: []
---
0x4c3 STOP
0x4c4 LOG1
0x4c5 PUSH6 0x627a7a723058
0x4cc SHA3
0x4cd PUSH19 0x6e8bb6c082e0d60235863de5bc85af4856a8bd
0x4e1 SIGNEXTEND
0x4e2 PUSH24 0xddca72a5f43209792d490029
---
0x4c3: STOP 
0x4c4: LOG S0 S1 S2
0x4c5: V463 = 0x627a7a723058
0x4cc: V464 = SHA3 0x627a7a723058 S3
0x4cd: V465 = 0x6e8bb6c082e0d60235863de5bc85af4856a8bd
0x4e1: V466 = SIGNEXTEND 0x6e8bb6c082e0d60235863de5bc85af4856a8bd V464
0x4e2: V467 = 0xddca72a5f43209792d490029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xddca72a5f43209792d490029, V466]
Exit stack: []

================================

Function 0:
Public function signature: 0x8e081e4
Entry block: 0x7b
Exit block: 0x79
Body: 0x79, 0x7b, 0x82, 0x86, 0x1d3, 0x1ea, 0x1ee, 0x266

Function 1:
Public function signature: 0x6ad1fe02
Entry block: 0xc4
Exit block: 0xd7
Body: 0xc4, 0xcb, 0xcf, 0xd7, 0x26b

Function 2:
Public function signature: 0x89476069
Entry block: 0xf3
Exit block: 0x79
Body: 0x79, 0xf3, 0xfa, 0xfe, 0x27a, 0x291, 0x295, 0x2ff, 0x303, 0x310, 0x314, 0x366, 0x36a, 0x377, 0x37b, 0x38c, 0x390, 0x391

Function 3:
Public function signature: 0xa6f2ae3a
Entry block: 0x114
Exit block: 0x79
Body: 0x76, 0x77, 0x79, 0x114, 0x11b, 0x11f, 0x394, 0x3a7, 0x3ab, 0x3dc

Function 4:
Public function signature: 0xb622ab4a
Entry block: 0x129
Exit block: 0x79
Body: 0x79, 0x129, 0x130, 0x134, 0x390, 0x391, 0x3e3, 0x3f6, 0x3fa, 0x446

Function 5:
Public function signature: 0xca4b208b
Entry block: 0x160
Exit block: 0xd7
Body: 0xd7, 0x160, 0x167, 0x16b, 0x44e

Function 6:
Public function signature: 0xe086e5ec
Entry block: 0x18f
Exit block: 0x79
Body: 0x76, 0x77, 0x79, 0x18f, 0x196, 0x19a, 0x45d, 0x474, 0x478, 0x4ad

Function 7:
Public function signature: 0xfc0c546a
Entry block: 0x1a4
Exit block: 0xd7
Body: 0xd7, 0x1a4, 0x1ab, 0x1af, 0x4b4

Function 8:
Public fallback function
Entry block: 0x72
Exit block: 0x79
Body: 0x72, 0x76, 0x77, 0x79

