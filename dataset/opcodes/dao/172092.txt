Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x46]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x46
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x46
0xa: JUMPI 0x46 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc3]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x82bd0b3
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc3
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x82bd0b3
0x20: V14 = EQ V12 0x82bd0b3
0x21: V15 = 0xc3
0x24: JUMPI 0xc3 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xcd]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0xcd
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0xcd
0x2f: JUMPI 0xcd V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xdf]
---
0x30 DUP1
0x31 PUSH4 0x8da5cb5b
0x36 EQ
0x37 PUSH2 0xdf
0x3a JUMPI
---
0x31: V19 = 0x8da5cb5b
0x36: V20 = EQ 0x8da5cb5b V12
0x37: V21 = 0xdf
0x3a: JUMPI 0xdf V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x10b]
---
0x3b DUP1
0x3c PUSH4 0xde82efb4
0x41 EQ
0x42 PUSH2 0x10b
0x45 JUMPI
---
0x3c: V22 = 0xde82efb4
0x41: V23 = EQ 0xde82efb4 V12
0x42: V24 = 0x10b
0x45: JUMPI 0x10b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x49]
---
Predecessors: [0x0, 0x3b]
Successors: [0x4a]
---
0x46 JUMPDEST
0x47 PUSH2 0xc1
---
0x46: JUMPDEST 
0x47: V25 = 0xc1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0x4a
[0x4a:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0xbe]
---
0x4a JUMPDEST
0x4b CALLVALUE
0x4c PUSH1 0x1
0x4e PUSH1 0xa0
0x50 PUSH1 0x2
0x52 EXP
0x53 SUB
0x54 CALLER
0x55 AND
0x56 BALANCE
0x57 LT
0x58 PUSH2 0xbe
0x5b JUMPI
---
0x4a: JUMPDEST 
0x4b: V26 = CALLVALUE
0x4c: V27 = 0x1
0x4e: V28 = 0xa0
0x50: V29 = 0x2
0x52: V30 = EXP 0x2 0xa0
0x53: V31 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54: V32 = CALLER
0x55: V33 = AND V32 0xffffffffffffffffffffffffffffffffffffffff
0x56: V34 = BALANCE V33
0x57: V35 = LT V34 V26
0x58: V36 = 0xbe
0x5b: JUMPI 0xbe V35
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x5c
[0x5c:0xbd]
---
Predecessors: [0x4a]
Successors: [0xbe]
---
0x5c CALLER
0x5d PUSH1 0x1
0x5f PUSH1 0xa0
0x61 PUSH1 0x2
0x63 EXP
0x64 SUB
0x65 AND
0x66 PUSH3 0x249f0
0x6a PUSH1 0x40
0x6c MLOAD
0x6d DUP1
0x6e DUP1
0x6f PUSH1 0xd8
0x71 PUSH1 0x2
0x73 EXP
0x74 PUSH5 0x776f6e2829
0x7a MUL
0x7b DUP2
0x7c MSTORE
0x7d POP
0x7e PUSH1 0x5
0x80 ADD
0x81 SWAP1
0x82 POP
0x83 PUSH1 0x40
0x85 MLOAD
0x86 DUP1
0x87 SWAP2
0x88 SUB
0x89 SWAP1
0x8a SHA3
0x8b PUSH1 0xe0
0x8d PUSH1 0x2
0x8f EXP
0x90 SWAP1
0x91 DIV
0x92 SWAP1
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP3
0x97 PUSH4 0xffffffff
0x9c AND
0x9d PUSH1 0xe0
0x9f PUSH1 0x2
0xa1 EXP
0xa2 MUL
0xa3 DUP2
0xa4 MSTORE
0xa5 PUSH1 0x4
0xa7 ADD
0xa8 DUP1
0xa9 SWAP1
0xaa POP
0xab PUSH1 0x0
0xad PUSH1 0x40
0xaf MLOAD
0xb0 DUP1
0xb1 DUP4
0xb2 SUB
0xb3 DUP2
0xb4 PUSH1 0x0
0xb6 DUP9
0xb7 DUP8
0xb8 CALL
0xb9 POP
0xba POP
0xbb POP
0xbc POP
0xbd POP
---
0x5c: V37 = CALLER
0x5d: V38 = 0x1
0x5f: V39 = 0xa0
0x61: V40 = 0x2
0x63: V41 = EXP 0x2 0xa0
0x64: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x66: V44 = 0x249f0
0x6a: V45 = 0x40
0x6c: V46 = M[0x40]
0x6f: V47 = 0xd8
0x71: V48 = 0x2
0x73: V49 = EXP 0x2 0xd8
0x74: V50 = 0x776f6e2829
0x7a: V51 = MUL 0x776f6e2829 0x1000000000000000000000000000000000000000000000000000000
0x7c: M[V46] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x7e: V52 = 0x5
0x80: V53 = ADD 0x5 V46
0x83: V54 = 0x40
0x85: V55 = M[0x40]
0x88: V56 = SUB V53 V55
0x8a: V57 = SHA3 V55 V56
0x8b: V58 = 0xe0
0x8d: V59 = 0x2
0x8f: V60 = EXP 0x2 0xe0
0x91: V61 = DIV V57 0x100000000000000000000000000000000000000000000000000000000
0x93: V62 = 0x40
0x95: V63 = M[0x40]
0x97: V64 = 0xffffffff
0x9c: V65 = AND 0xffffffff V61
0x9d: V66 = 0xe0
0x9f: V67 = 0x2
0xa1: V68 = EXP 0x2 0xe0
0xa2: V69 = MUL 0x100000000000000000000000000000000000000000000000000000000 V65
0xa4: M[V63] = V69
0xa5: V70 = 0x4
0xa7: V71 = ADD 0x4 V63
0xab: V72 = 0x0
0xad: V73 = 0x40
0xaf: V74 = M[0x40]
0xb2: V75 = SUB V71 V74
0xb4: V76 = 0x0
0xb8: V77 = CALL 0x249f0 V43 0x0 V74 V75 V74 0x0
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xbe
[0xbe:0xbe]
---
Predecessors: [0x4a, 0x5c]
Successors: [0xbf]
---
0xbe JUMPDEST
---
0xbe: JUMPDEST 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xbf
[0xbf:0xc0]
---
Predecessors: [0xbe]
Successors: [0xc1]
---
0xbf JUMPDEST
0xc0 JUMP
---
0xbf: JUMPDEST 
0xc0: JUMP 0xc1
---
Entry stack: [V12, 0xc1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc1
[0xc1:0xc2]
---
Predecessors: [0xbf, 0x1b1, 0x270]
Successors: []
---
0xc1 JUMPDEST
0xc2 STOP
---
0xc1: JUMPDEST 
0xc2: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3
[0xc3:0xca]
---
Predecessors: [0xb]
Successors: [0x115]
---
0xc3 JUMPDEST
0xc4 PUSH2 0xc1
0xc7 PUSH2 0x115
0xca JUMP
---
0xc3: JUMPDEST 
0xc4: V78 = 0xc1
0xc7: V79 = 0x115
0xca: JUMP 0x115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0xcb
[0xcb:0xcc]
---
Predecessors: []
Successors: []
---
0xcb JUMPDEST
0xcc STOP
---
0xcb: JUMPDEST 
0xcc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcd
[0xcd:0xd3]
---
Predecessors: [0x25]
Successors: [0xd4, 0xd5]
---
0xcd JUMPDEST
0xce CALLVALUE
0xcf ISZERO
0xd0 PUSH2 0xd5
0xd3 JUMPI
---
0xcd: JUMPDEST 
0xce: V80 = CALLVALUE
0xcf: V81 = ISZERO V80
0xd0: V82 = 0xd5
0xd3: JUMPI 0xd5 V81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd4
[0xd4:0xd4]
---
Predecessors: [0xcd]
Successors: []
---
0xd4 INVALID
---
0xd4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0xcd]
Successors: [0x1b4]
---
0xd5 JUMPDEST
0xd6 PUSH2 0xc1
0xd9 PUSH2 0x1b4
0xdc JUMP
---
0xd5: JUMPDEST 
0xd6: V83 = 0xc1
0xd9: V84 = 0x1b4
0xdc: JUMP 0x1b4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: []
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdf
[0xdf:0xe5]
---
Predecessors: [0x30]
Successors: [0xe6, 0xe7]
---
0xdf JUMPDEST
0xe0 CALLVALUE
0xe1 ISZERO
0xe2 PUSH2 0xe7
0xe5 JUMPI
---
0xdf: JUMPDEST 
0xe0: V85 = CALLVALUE
0xe1: V86 = ISZERO V85
0xe2: V87 = 0xe7
0xe5: JUMPI 0xe7 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe6
[0xe6:0xe6]
---
Predecessors: [0xdf]
Successors: []
---
0xe6 INVALID
---
0xe6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xdf]
Successors: [0x1dd]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xef
0xeb PUSH2 0x1dd
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V88 = 0xef
0xeb: V89 = 0x1dd
0xee: JUMP 0x1dd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0xef
[0xef:0x10a]
---
Predecessors: [0x1dd]
Successors: []
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH1 0x1
0xf6 PUSH1 0xa0
0xf8 PUSH1 0x2
0xfa EXP
0xfb SUB
0xfc SWAP1
0xfd SWAP3
0xfe AND
0xff DUP3
0x100 MSTORE
0x101 MLOAD
0x102 SWAP1
0x103 DUP2
0x104 SWAP1
0x105 SUB
0x106 PUSH1 0x20
0x108 ADD
0x109 SWAP1
0x10a RETURN
---
0xef: JUMPDEST 
0xf0: V90 = 0x40
0xf3: V91 = M[0x40]
0xf4: V92 = 0x1
0xf6: V93 = 0xa0
0xf8: V94 = 0x2
0xfa: V95 = EXP 0x2 0xa0
0xfb: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfe: V97 = AND V167 0xffffffffffffffffffffffffffffffffffffffff
0x100: M[V91] = V97
0x101: V98 = M[0x40]
0x105: V99 = SUB V91 V98
0x106: V100 = 0x20
0x108: V101 = ADD 0x20 V99
0x10a: RETURN V98 V101
---
Entry stack: [V12, 0xef, V167]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x3b]
Successors: [0x1ec]
---
0x10b JUMPDEST
0x10c PUSH2 0xc1
0x10f PUSH2 0x1ec
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V102 = 0xc1
0x10f: V103 = 0x1ec
0x112: JUMP 0x1ec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0x113
[0x113:0x114]
---
Predecessors: []
Successors: []
---
0x113 JUMPDEST
0x114 STOP
---
0x113: JUMPDEST 
0x114: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x115
[0x115:0x1b0]
---
Predecessors: [0xc3]
Successors: [0x1b1]
---
0x115 JUMPDEST
0x116 PUSH1 0x40
0x118 DUP1
0x119 MLOAD
0x11a PUSH32 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x13b DUP2
0x13c MSTORE
0x13d DUP2
0x13e MLOAD
0x13f SWAP1
0x140 DUP2
0x141 SWAP1
0x142 SUB
0x143 PUSH1 0x13
0x145 ADD
0x146 DUP2
0x147 SHA3
0x148 PUSH4 0xffffffff
0x14d PUSH1 0xe0
0x14f PUSH1 0x2
0x151 EXP
0x152 SWAP2
0x153 DUP3
0x154 SWAP1
0x155 DIV
0x156 SWAP1
0x157 DUP2
0x158 AND
0x159 SWAP1
0x15a SWAP2
0x15b MUL
0x15c DUP3
0x15d MSTORE
0x15e ADDRESS
0x15f PUSH1 0x1
0x161 PUSH1 0xa0
0x163 PUSH1 0x2
0x165 EXP
0x166 SUB
0x167 AND
0x168 PUSH1 0x4
0x16a DUP4
0x16b ADD
0x16c MSTORE
0x16d SWAP2
0x16e MLOAD
0x16f PUSH20 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c
0x184 SWAP3
0x185 DUP4
0x186 SWAP3
0x187 SWAP1
0x188 SWAP2
0x189 PUSH8 0xde0b6b3a7640000
0x192 SWAP2
0x193 PUSH1 0x24
0x195 DUP1
0x196 DUP3
0x197 ADD
0x198 SWAP3
0x199 PUSH1 0x0
0x19b SWAP3
0x19c SWAP1
0x19d SWAP2
0x19e SWAP1
0x19f DUP3
0x1a0 SWAP1
0x1a1 SUB
0x1a2 ADD
0x1a3 DUP2
0x1a4 DUP6
0x1a5 DUP9
0x1a6 PUSH2 0x8502
0x1a9 GAS
0x1aa SUB
0x1ab CALL
0x1ac POP
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 POP
---
0x115: JUMPDEST 
0x116: V104 = 0x40
0x119: V105 = M[0x40]
0x11a: V106 = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x13c: M[V105] = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x13e: V107 = M[0x40]
0x142: V108 = SUB V105 V107
0x143: V109 = 0x13
0x145: V110 = ADD 0x13 V108
0x147: V111 = SHA3 V107 V110
0x148: V112 = 0xffffffff
0x14d: V113 = 0xe0
0x14f: V114 = 0x2
0x151: V115 = EXP 0x2 0xe0
0x155: V116 = DIV V111 0x100000000000000000000000000000000000000000000000000000000
0x158: V117 = AND V116 0xffffffff
0x15b: V118 = MUL 0x100000000000000000000000000000000000000000000000000000000 V117
0x15d: M[V107] = V118
0x15e: V119 = ADDRESS
0x15f: V120 = 0x1
0x161: V121 = 0xa0
0x163: V122 = 0x2
0x165: V123 = EXP 0x2 0xa0
0x166: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x168: V126 = 0x4
0x16b: V127 = ADD V107 0x4
0x16c: M[V127] = V125
0x16e: V128 = M[0x40]
0x16f: V129 = 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c
0x189: V130 = 0xde0b6b3a7640000
0x193: V131 = 0x24
0x197: V132 = ADD V107 0x24
0x199: V133 = 0x0
0x1a1: V134 = SUB V107 V128
0x1a2: V135 = ADD V134 0x24
0x1a6: V136 = 0x8502
0x1a9: V137 = GAS
0x1aa: V138 = SUB V137 0x8502
0x1ab: V139 = CALL V138 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c 0xde0b6b3a7640000 V128 V135 V128 0x0
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: [0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c]
Exit stack: [V12, 0xc1, 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c]

================================

Block 0x1b1
[0x1b1:0x1b3]
---
Predecessors: [0x115]
Successors: [0xc1]
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 JUMP
---
0x1b1: JUMPDEST 
0x1b3: JUMP 0xc1
---
Entry stack: [V12, 0xc1, 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b4
[0x1b4:0x1ca]
---
Predecessors: [0xd5]
Successors: [0x1cb, 0x1cc]
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x0
0x1b7 SLOAD
0x1b8 CALLER
0x1b9 PUSH1 0x1
0x1bb PUSH1 0xa0
0x1bd PUSH1 0x2
0x1bf EXP
0x1c0 SUB
0x1c1 SWAP1
0x1c2 DUP2
0x1c3 AND
0x1c4 SWAP2
0x1c5 AND
0x1c6 EQ
0x1c7 PUSH2 0x1cc
0x1ca JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V140 = 0x0
0x1b7: V141 = S[0x0]
0x1b8: V142 = CALLER
0x1b9: V143 = 0x1
0x1bb: V144 = 0xa0
0x1bd: V145 = 0x2
0x1bf: V146 = EXP 0x2 0xa0
0x1c0: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c3: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x1c5: V149 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V150 = EQ V149 V148
0x1c7: V151 = 0x1cc
0x1ca: JUMPI 0x1cc V150
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x1cb
[0x1cb:0x1cb]
---
Predecessors: [0x1b4]
Successors: []
---
0x1cb INVALID
---
0x1cb: INVALID 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x1cc
[0x1cc:0x1d9]
---
Predecessors: [0x1b4]
Successors: []
---
0x1cc JUMPDEST
0x1cd PUSH1 0x0
0x1cf SLOAD
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 AND
0x1d9 SELFDESTRUCT
---
0x1cc: JUMPDEST 
0x1cd: V152 = 0x0
0x1cf: V153 = S[0x0]
0x1d0: V154 = 0x1
0x1d2: V155 = 0xa0
0x1d4: V156 = 0x2
0x1d6: V157 = EXP 0x2 0xa0
0x1d7: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x1d9: SELFDESTRUCT V159
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x1da
[0x1da:0x1da]
---
Predecessors: []
Successors: [0x1db]
---
0x1da JUMPDEST
---
0x1da: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1db
[0x1db:0x1dc]
---
Predecessors: [0x1da]
Successors: []
Has unresolved jump.
---
0x1db JUMPDEST
0x1dc JUMP
---
0x1db: JUMPDEST 
0x1dc: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1dd
[0x1dd:0x1eb]
---
Predecessors: [0xe7]
Successors: [0xef]
---
0x1dd JUMPDEST
0x1de PUSH1 0x0
0x1e0 SLOAD
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0xa0
0x1e5 PUSH1 0x2
0x1e7 EXP
0x1e8 SUB
0x1e9 AND
0x1ea DUP2
0x1eb JUMP
---
0x1dd: JUMPDEST 
0x1de: V160 = 0x0
0x1e0: V161 = S[0x0]
0x1e1: V162 = 0x1
0x1e3: V163 = 0xa0
0x1e5: V164 = 0x2
0x1e7: V165 = EXP 0x2 0xa0
0x1e8: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e9: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1eb: JUMP 0xef
---
Entry stack: [V12, 0xef]
Stack pops: 1
Stack additions: [S0, V167]
Exit stack: [V12, 0xef, V167]

================================

Block 0x1ec
[0x1ec:0x26f]
---
Predecessors: [0x10b]
Successors: [0x270]
---
0x1ec JUMPDEST
0x1ed PUSH1 0x0
0x1ef PUSH20 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c
0x204 SWAP1
0x205 POP
0x206 DUP1
0x207 PUSH1 0x1
0x209 PUSH1 0xa0
0x20b PUSH1 0x2
0x20d EXP
0x20e SUB
0x20f AND
0x210 PUSH8 0xde0b6b3a7640000
0x219 PUSH1 0x40
0x21b MLOAD
0x21c DUP1
0x21d DUP1
0x21e PUSH1 0xd8
0x220 PUSH1 0x2
0x222 EXP
0x223 PUSH5 0x776f6e2829
0x229 MUL
0x22a DUP2
0x22b MSTORE
0x22c POP
0x22d PUSH1 0x5
0x22f ADD
0x230 SWAP1
0x231 POP
0x232 PUSH1 0x40
0x234 MLOAD
0x235 DUP1
0x236 SWAP2
0x237 SUB
0x238 SWAP1
0x239 SHA3
0x23a PUSH1 0xe0
0x23c PUSH1 0x2
0x23e EXP
0x23f SWAP1
0x240 DIV
0x241 SWAP1
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP3
0x246 PUSH4 0xffffffff
0x24b AND
0x24c PUSH1 0xe0
0x24e PUSH1 0x2
0x250 EXP
0x251 MUL
0x252 DUP2
0x253 MSTORE
0x254 PUSH1 0x4
0x256 ADD
0x257 DUP1
0x258 SWAP1
0x259 POP
0x25a PUSH1 0x0
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 DUP4
0x261 SUB
0x262 DUP2
0x263 DUP6
0x264 DUP9
0x265 PUSH2 0x8502
0x268 GAS
0x269 SUB
0x26a CALL
0x26b POP
0x26c POP
0x26d POP
0x26e POP
0x26f POP
---
0x1ec: JUMPDEST 
0x1ed: V168 = 0x0
0x1ef: V169 = 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c
0x207: V170 = 0x1
0x209: V171 = 0xa0
0x20b: V172 = 0x2
0x20d: V173 = EXP 0x2 0xa0
0x20e: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20f: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c
0x210: V176 = 0xde0b6b3a7640000
0x219: V177 = 0x40
0x21b: V178 = M[0x40]
0x21e: V179 = 0xd8
0x220: V180 = 0x2
0x222: V181 = EXP 0x2 0xd8
0x223: V182 = 0x776f6e2829
0x229: V183 = MUL 0x776f6e2829 0x1000000000000000000000000000000000000000000000000000000
0x22b: M[V178] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x22d: V184 = 0x5
0x22f: V185 = ADD 0x5 V178
0x232: V186 = 0x40
0x234: V187 = M[0x40]
0x237: V188 = SUB V185 V187
0x239: V189 = SHA3 V187 V188
0x23a: V190 = 0xe0
0x23c: V191 = 0x2
0x23e: V192 = EXP 0x2 0xe0
0x240: V193 = DIV V189 0x100000000000000000000000000000000000000000000000000000000
0x242: V194 = 0x40
0x244: V195 = M[0x40]
0x246: V196 = 0xffffffff
0x24b: V197 = AND 0xffffffff V193
0x24c: V198 = 0xe0
0x24e: V199 = 0x2
0x250: V200 = EXP 0x2 0xe0
0x251: V201 = MUL 0x100000000000000000000000000000000000000000000000000000000 V197
0x253: M[V195] = V201
0x254: V202 = 0x4
0x256: V203 = ADD 0x4 V195
0x25a: V204 = 0x0
0x25c: V205 = 0x40
0x25e: V206 = M[0x40]
0x261: V207 = SUB V203 V206
0x265: V208 = 0x8502
0x268: V209 = GAS
0x269: V210 = SUB V209 0x8502
0x26a: V211 = CALL V210 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c 0xde0b6b3a7640000 V206 V207 V206 0x0
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: [0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c]
Exit stack: [V12, 0xc1, 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c]

================================

Block 0x270
[0x270:0x272]
---
Predecessors: [0x1ec]
Successors: [0xc1]
---
0x270 JUMPDEST
0x271 POP
0x272 JUMP
---
0x270: JUMPDEST 
0x272: JUMP 0xc1
---
Entry stack: [V12, 0xc1, 0x6f6deb5db0c4994a8283a01d6cfeeb27fc3bbe9c]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x273
[0x273:0x29e]
---
Predecessors: []
Successors: []
---
0x273 STOP
0x274 LOG1
0x275 PUSH6 0x627a7a723058
0x27c SHA3
0x27d SGT
0x27e MISSING 0xda
0x27f MISSING 0xdd
0x280 MISSING 0xe4
0x281 MISSING 0x21
0x282 MISSING 0xba
0x283 PUSH27 0x2a735fe742839c601efdea5aa2cacb769d0d7f29f40dc672170029
---
0x273: STOP 
0x274: LOG S0 S1 S2
0x275: V212 = 0x627a7a723058
0x27c: V213 = SHA3 0x627a7a723058 S3
0x27d: V214 = SGT V213 S4
0x27e: MISSING 0xda
0x27f: MISSING 0xdd
0x280: MISSING 0xe4
0x281: MISSING 0x21
0x282: MISSING 0xba
0x283: V215 = 0x2a735fe742839c601efdea5aa2cacb769d0d7f29f40dc672170029
---
Entry stack: []
Stack pops: 0
Stack additions: [V214, 0x2a735fe742839c601efdea5aa2cacb769d0d7f29f40dc672170029]
Exit stack: []

================================

Function 0:
Public function signature: 0x82bd0b3
Entry block: 0xc3
Exit block: 0xc1
Body: 0xc1, 0xc3, 0x115, 0x1b1

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xcd
Exit block: 0x1cb
Body: 0xcd, 0xd4, 0xd5, 0x1b4, 0x1cb, 0x1cc

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xdf
Exit block: 0xef
Body: 0xdf, 0xe6, 0xe7, 0xef, 0x1dd

Function 3:
Public function signature: 0xde82efb4
Entry block: 0x10b
Exit block: 0xc1
Body: 0xc1, 0x10b, 0x1ec, 0x270

Function 4:
Public fallback function
Entry block: 0x46
Exit block: 0xc1
Body: 0x46, 0x4a, 0x5c, 0xbe, 0xbf, 0xc1

