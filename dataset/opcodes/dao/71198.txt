Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x24600fc3
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x24600fc3
0x3b: V13 = EQ V11 0x24600fc3
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8e]
---
0x40 DUP1
0x41 PUSH4 0x30ce4895
0x46 EQ
0x47 PUSH2 0x8e
0x4a JUMPI
---
0x41: V15 = 0x30ce4895
0x46: V16 = EQ 0x30ce4895 V11
0x47: V17 = 0x8e
0x4a: JUMPI 0x8e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xbe]
---
0x4b DUP1
0x4c PUSH4 0x35f4581b
0x51 EQ
0x52 PUSH2 0xbe
0x55 JUMPI
---
0x4c: V18 = 0x35f4581b
0x51: V19 = EQ 0x35f4581b V11
0x52: V20 = 0xbe
0x55: JUMPI 0xbe V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xc9]
---
0x56 DUP1
0x57 PUSH4 0x41c0e1b5
0x5c EQ
0x5d PUSH2 0xc9
0x60 JUMPI
---
0x57: V21 = 0x41c0e1b5
0x5c: V22 = EQ 0x41c0e1b5 V11
0x5d: V23 = 0xc9
0x60: JUMPI 0xc9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xde]
---
0x61 DUP1
0x62 PUSH4 0x590e1ae3
0x67 EQ
0x68 PUSH2 0xde
0x6b JUMPI
---
0x62: V24 = 0x590e1ae3
0x67: V25 = EQ 0x590e1ae3 V11
0x68: V26 = 0xde
0x6b: JUMPI 0xde V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0xf3]
---
0x6c DUP1
0x6d PUSH4 0xa92100cb
0x72 EQ
0x73 PUSH2 0xf3
0x76 JUMPI
---
0x6d: V27 = 0xa92100cb
0x72: V28 = EQ 0xa92100cb V11
0x73: V29 = 0xf3
0x76: JUMPI 0xf3 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x197, 0x5a0, 0x6de, 0x94e]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b DUP1
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x79]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x85
[0x85:0x8d]
---
Predecessors: [0x79]
Successors: [0x11c]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH2 0x77
0x8a PUSH2 0x11c
0x8d JUMP
---
0x85: JUMPDEST 
0x87: V34 = 0x77
0x8a: V35 = 0x11c
0x8d: JUMP 0x11c
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x8e
[0x8e:0x95]
---
Predecessors: [0x40]
Successors: [0x96, 0x9a]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 DUP1
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8e: JUMPDEST 
0x8f: V36 = CALLVALUE
0x91: V37 = ISZERO V36
0x92: V38 = 0x9a
0x95: JUMPI 0x9a V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8e]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V39 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x9a
[0x9a:0xbd]
---
Predecessors: [0x8e]
Successors: [0x199]
---
0x9a JUMPDEST
0x9b POP
0x9c PUSH2 0x77
0x9f PUSH1 0x4
0xa1 CALLDATALOAD
0xa2 PUSH1 0x24
0xa4 CALLDATALOAD
0xa5 PUSH1 0x44
0xa7 CALLDATALOAD
0xa8 PUSH1 0x64
0xaa CALLDATALOAD
0xab PUSH1 0x84
0xad CALLDATALOAD
0xae PUSH1 0x1
0xb0 PUSH1 0xa0
0xb2 PUSH1 0x2
0xb4 EXP
0xb5 SUB
0xb6 PUSH1 0xa4
0xb8 CALLDATALOAD
0xb9 AND
0xba PUSH2 0x199
0xbd JUMP
---
0x9a: JUMPDEST 
0x9c: V40 = 0x77
0x9f: V41 = 0x4
0xa1: V42 = CALLDATALOAD 0x4
0xa2: V43 = 0x24
0xa4: V44 = CALLDATALOAD 0x24
0xa5: V45 = 0x44
0xa7: V46 = CALLDATALOAD 0x44
0xa8: V47 = 0x64
0xaa: V48 = CALLDATALOAD 0x64
0xab: V49 = 0x84
0xad: V50 = CALLDATALOAD 0x84
0xae: V51 = 0x1
0xb0: V52 = 0xa0
0xb2: V53 = 0x2
0xb4: V54 = EXP 0x2 0xa0
0xb5: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6: V56 = 0xa4
0xb8: V57 = CALLDATALOAD 0xa4
0xb9: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xba: V59 = 0x199
0xbd: JUMP 0x199
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x77, V42, V44, V46, V48, V50, V58]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58]

================================

Block 0xbe
[0xbe:0xc8]
---
Predecessors: [0x4b]
Successors: [0x5ae]
---
0xbe JUMPDEST
0xbf PUSH2 0x77
0xc2 PUSH1 0x4
0xc4 CALLDATALOAD
0xc5 PUSH2 0x5ae
0xc8 JUMP
---
0xbe: JUMPDEST 
0xbf: V60 = 0x77
0xc2: V61 = 0x4
0xc4: V62 = CALLDATALOAD 0x4
0xc5: V63 = 0x5ae
0xc8: JUMP 0x5ae
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V62]
Exit stack: [V11, 0x77, V62]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x56]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V64 = CALLVALUE
0xcc: V65 = ISZERO V64
0xcd: V66 = 0xd5
0xd0: JUMPI 0xd5 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V67 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x6e6]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0x77
0xda PUSH2 0x6e6
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V68 = 0x77
0xda: V69 = 0x6e6
0xdd: JUMP 0x6e6
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0x61]
Successors: [0xe6, 0xea]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 DUP1
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xde: JUMPDEST 
0xdf: V70 = CALLVALUE
0xe1: V71 = ISZERO V70
0xe2: V72 = 0xea
0xe5: JUMPI 0xea V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V70]
Exit stack: [V11, V70]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xde]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V73 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70]

================================

Block 0xea
[0xea:0xf2]
---
Predecessors: [0xde]
Successors: [0x758]
---
0xea JUMPDEST
0xeb POP
0xec PUSH2 0x77
0xef PUSH2 0x758
0xf2 JUMP
---
0xea: JUMPDEST 
0xec: V74 = 0x77
0xef: V75 = 0x758
0xf2: JUMP 0x758
---
Entry stack: [V11, V70]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0x6c]
Successors: [0xfb, 0xff]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 DUP1
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf3: JUMPDEST 
0xf4: V76 = CALLVALUE
0xf6: V77 = ISZERO V76
0xf7: V78 = 0xff
0xfa: JUMPI 0xff V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V76]
Exit stack: [V11, V76]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf3]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V79 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V11, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V76]

================================

Block 0xff
[0xff:0x107]
---
Predecessors: [0xf3]
Successors: [0x955]
---
0xff JUMPDEST
0x100 POP
0x101 PUSH2 0x108
0x104 PUSH2 0x955
0x107 JUMP
---
0xff: JUMPDEST 
0x101: V80 = 0x108
0x104: V81 = 0x955
0x107: JUMP 0x955
---
Entry stack: [V11, V76]
Stack pops: 1
Stack additions: [0x108]
Exit stack: [V11, 0x108]

================================

Block 0x108
[0x108:0x11b]
---
Predecessors: [0xaf6]
Successors: []
---
0x108 JUMPDEST
0x109 PUSH1 0x40
0x10b DUP1
0x10c MLOAD
0x10d SWAP2
0x10e ISZERO
0x10f ISZERO
0x110 DUP3
0x111 MSTORE
0x112 MLOAD
0x113 SWAP1
0x114 DUP2
0x115 SWAP1
0x116 SUB
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP1
0x11b RETURN
---
0x108: JUMPDEST 
0x109: V82 = 0x40
0x10c: V83 = M[0x40]
0x10e: V84 = ISZERO {0x0, 0x1}
0x10f: V85 = ISZERO V84
0x111: M[V83] = V85
0x112: V86 = M[0x40]
0x116: V87 = SUB V83 V86
0x117: V88 = 0x20
0x119: V89 = ADD 0x20 V87
0x11b: RETURN V86 V89
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x11c
[0x11c:0x12e]
---
Predecessors: [0x85]
Successors: [0x12f, 0x180]
---
0x11c JUMPDEST
0x11d PUSH1 0x2
0x11f SLOAD
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 AND
0x129 CALLER
0x12a EQ
0x12b PUSH2 0x180
0x12e JUMPI
---
0x11c: JUMPDEST 
0x11d: V90 = 0x2
0x11f: V91 = S[0x2]
0x120: V92 = 0x1
0x122: V93 = 0xa0
0x124: V94 = 0x2
0x126: V95 = EXP 0x2 0xa0
0x127: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x129: V98 = CALLER
0x12a: V99 = EQ V98 V97
0x12b: V100 = 0x180
0x12e: JUMPI 0x180 V99
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x12f
[0x12f:0x17f]
---
Predecessors: [0x11c]
Successors: []
---
0x12f PUSH1 0x40
0x131 DUP1
0x132 MLOAD
0x133 PUSH1 0xe5
0x135 PUSH1 0x2
0x137 EXP
0x138 PUSH3 0x461bcd
0x13c MUL
0x13d DUP2
0x13e MSTORE
0x13f PUSH1 0x20
0x141 PUSH1 0x4
0x143 DUP3
0x144 ADD
0x145 MSTORE
0x146 PUSH1 0x26
0x148 PUSH1 0x24
0x14a DUP3
0x14b ADD
0x14c MSTORE
0x14d PUSH1 0x0
0x14f DUP1
0x150 MLOAD
0x151 PUSH1 0x20
0x153 PUSH2 0xb45
0x156 DUP4
0x157 CODECOPY
0x158 DUP2
0x159 MLOAD
0x15a SWAP2
0x15b MSTORE
0x15c PUSH1 0x44
0x15e DUP3
0x15f ADD
0x160 MSTORE
0x161 PUSH1 0x0
0x163 DUP1
0x164 MLOAD
0x165 PUSH1 0x20
0x167 PUSH2 0xb25
0x16a DUP4
0x16b CODECOPY
0x16c DUP2
0x16d MLOAD
0x16e SWAP2
0x16f MSTORE
0x170 PUSH1 0x64
0x172 DUP3
0x173 ADD
0x174 MSTORE
0x175 SWAP1
0x176 MLOAD
0x177 SWAP1
0x178 DUP2
0x179 SWAP1
0x17a SUB
0x17b PUSH1 0x84
0x17d ADD
0x17e SWAP1
0x17f REVERT
---
0x12f: V101 = 0x40
0x132: V102 = M[0x40]
0x133: V103 = 0xe5
0x135: V104 = 0x2
0x137: V105 = EXP 0x2 0xe5
0x138: V106 = 0x461bcd
0x13c: V107 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x13e: M[V102] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x13f: V108 = 0x20
0x141: V109 = 0x4
0x144: V110 = ADD V102 0x4
0x145: M[V110] = 0x20
0x146: V111 = 0x26
0x148: V112 = 0x24
0x14b: V113 = ADD V102 0x24
0x14c: M[V113] = 0x26
0x14d: V114 = 0x0
0x150: V115 = M[0x0]
0x151: V116 = 0x20
0x153: V117 = 0xb45
0x157: CODECOPY 0x0 0xb45 0x20
0x159: V118 = M[0x0]
0x15b: M[0x0] = V115
0x15c: V119 = 0x44
0x15f: V120 = ADD V102 0x44
0x160: M[V120] = V118
0x161: V121 = 0x0
0x164: V122 = M[0x0]
0x165: V123 = 0x20
0x167: V124 = 0xb25
0x16b: CODECOPY 0x0 0xb25 0x20
0x16d: V125 = M[0x0]
0x16f: M[0x0] = V122
0x170: V126 = 0x64
0x173: V127 = ADD V102 0x64
0x174: M[V127] = V125
0x176: V128 = M[0x40]
0x17a: V129 = SUB V102 V128
0x17b: V130 = 0x84
0x17d: V131 = ADD 0x84 V129
0x17f: REVERT V128 V131
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x180
[0x180:0x196]
---
Predecessors: [0x11c]
Successors: [0xafb]
---
0x180 JUMPDEST
0x181 PUSH1 0x2
0x183 SLOAD
0x184 PUSH2 0x197
0x187 SWAP1
0x188 PUSH1 0x1
0x18a PUSH1 0xa0
0x18c PUSH1 0x2
0x18e EXP
0x18f SUB
0x190 AND
0x191 ADDRESS
0x192 BALANCE
0x193 PUSH2 0xafb
0x196 JUMP
---
0x180: JUMPDEST 
0x181: V132 = 0x2
0x183: V133 = S[0x2]
0x184: V134 = 0x197
0x188: V135 = 0x1
0x18a: V136 = 0xa0
0x18c: V137 = 0x2
0x18e: V138 = EXP 0x2 0xa0
0x18f: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x190: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x191: V141 = ADDRESS
0x192: V142 = BALANCE V141
0x193: V143 = 0xafb
0x196: JUMP 0xafb
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x197, V140, V142]
Exit stack: [V11, 0x77, 0x197, V140, V142]

================================

Block 0x197
[0x197:0x198]
---
Predecessors: [0xafb]
Successors: [0x77]
---
0x197 JUMPDEST
0x198 JUMP
---
0x197: JUMPDEST 
0x198: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x1b1]
---
Predecessors: [0x9a]
Successors: [0x1b2, 0x203]
---
0x199 JUMPDEST
0x19a PUSH1 0x2
0x19c SLOAD
0x19d PUSH1 0x0
0x19f SWAP1
0x1a0 PUSH1 0x60
0x1a2 SWAP1
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab AND
0x1ac CALLER
0x1ad EQ
0x1ae PUSH2 0x203
0x1b1 JUMPI
---
0x199: JUMPDEST 
0x19a: V144 = 0x2
0x19c: V145 = S[0x2]
0x19d: V146 = 0x0
0x1a0: V147 = 0x60
0x1a3: V148 = 0x1
0x1a5: V149 = 0xa0
0x1a7: V150 = 0x2
0x1a9: V151 = EXP 0x2 0xa0
0x1aa: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ab: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x1ac: V154 = CALLER
0x1ad: V155 = EQ V154 V153
0x1ae: V156 = 0x203
0x1b1: JUMPI 0x203 V155
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]

================================

Block 0x1b2
[0x1b2:0x202]
---
Predecessors: [0x199]
Successors: []
---
0x1b2 PUSH1 0x40
0x1b4 DUP1
0x1b5 MLOAD
0x1b6 PUSH1 0xe5
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb PUSH3 0x461bcd
0x1bf MUL
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 PUSH1 0x4
0x1c6 DUP3
0x1c7 ADD
0x1c8 MSTORE
0x1c9 PUSH1 0x26
0x1cb PUSH1 0x24
0x1cd DUP3
0x1ce ADD
0x1cf MSTORE
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 MLOAD
0x1d4 PUSH1 0x20
0x1d6 PUSH2 0xb45
0x1d9 DUP4
0x1da CODECOPY
0x1db DUP2
0x1dc MLOAD
0x1dd SWAP2
0x1de MSTORE
0x1df PUSH1 0x44
0x1e1 DUP3
0x1e2 ADD
0x1e3 MSTORE
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 MLOAD
0x1e8 PUSH1 0x20
0x1ea PUSH2 0xb25
0x1ed DUP4
0x1ee CODECOPY
0x1ef DUP2
0x1f0 MLOAD
0x1f1 SWAP2
0x1f2 MSTORE
0x1f3 PUSH1 0x64
0x1f5 DUP3
0x1f6 ADD
0x1f7 MSTORE
0x1f8 SWAP1
0x1f9 MLOAD
0x1fa SWAP1
0x1fb DUP2
0x1fc SWAP1
0x1fd SUB
0x1fe PUSH1 0x84
0x200 ADD
0x201 SWAP1
0x202 REVERT
---
0x1b2: V157 = 0x40
0x1b5: V158 = M[0x40]
0x1b6: V159 = 0xe5
0x1b8: V160 = 0x2
0x1ba: V161 = EXP 0x2 0xe5
0x1bb: V162 = 0x461bcd
0x1bf: V163 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x1c1: M[V158] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1c2: V164 = 0x20
0x1c4: V165 = 0x4
0x1c7: V166 = ADD V158 0x4
0x1c8: M[V166] = 0x20
0x1c9: V167 = 0x26
0x1cb: V168 = 0x24
0x1ce: V169 = ADD V158 0x24
0x1cf: M[V169] = 0x26
0x1d0: V170 = 0x0
0x1d3: V171 = M[0x0]
0x1d4: V172 = 0x20
0x1d6: V173 = 0xb45
0x1da: CODECOPY 0x0 0xb45 0x20
0x1dc: V174 = M[0x0]
0x1de: M[0x0] = V171
0x1df: V175 = 0x44
0x1e2: V176 = ADD V158 0x44
0x1e3: M[V176] = V174
0x1e4: V177 = 0x0
0x1e7: V178 = M[0x0]
0x1e8: V179 = 0x20
0x1ea: V180 = 0xb25
0x1ee: CODECOPY 0x0 0xb25 0x20
0x1f0: V181 = M[0x0]
0x1f2: M[0x0] = V178
0x1f3: V182 = 0x64
0x1f6: V183 = ADD V158 0x64
0x1f7: M[V183] = V181
0x1f9: V184 = M[0x40]
0x1fd: V185 = SUB V158 V184
0x1fe: V186 = 0x84
0x200: V187 = ADD 0x84 V185
0x202: REVERT V184 V187
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]

================================

Block 0x203
[0x203:0x277]
---
Predecessors: [0x199]
Successors: [0x278]
---
0x203 JUMPDEST
0x204 PUSH1 0x5
0x206 DUP6
0x207 SWAP1
0x208 SSTORE
0x209 PUSH1 0x6
0x20b DUP5
0x20c SWAP1
0x20d SSTORE
0x20e PUSH1 0x4
0x210 DUP7
0x211 SWAP1
0x212 SSTORE
0x213 PUSH8 0x1000000000000000
0x21c DUP8
0x21d ADD
0x21e PUSH1 0x3
0x220 SSTORE
0x221 PUSH1 0x1
0x223 DUP1
0x224 SLOAD
0x225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23a NOT
0x23b AND
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 DUP6
0x245 AND
0x246 OR
0x247 SWAP1
0x248 SSTORE
0x249 PUSH1 0x7
0x24b DUP9
0x24c SWAP1
0x24d SSTORE
0x24e PUSH1 0x40
0x250 DUP1
0x251 MLOAD
0x252 PUSH1 0x20
0x254 DUP1
0x255 DUP3
0x256 ADD
0x257 DUP12
0x258 SWAP1
0x259 MSTORE
0x25a DUP3
0x25b MLOAD
0x25c DUP1
0x25d DUP4
0x25e SUB
0x25f DUP3
0x260 ADD
0x261 DUP2
0x262 MSTORE
0x263 SWAP2
0x264 DUP4
0x265 ADD
0x266 SWAP3
0x267 DUP4
0x268 SWAP1
0x269 MSTORE
0x26a DUP2
0x26b MLOAD
0x26c DUP10
0x26d SWAP4
0x26e SWAP2
0x26f DUP3
0x270 SWAP2
0x271 SWAP1
0x272 DUP5
0x273 ADD
0x274 SWAP1
0x275 DUP1
0x276 DUP4
0x277 DUP4
---
0x203: JUMPDEST 
0x204: V188 = 0x5
0x208: S[0x5] = V48
0x209: V189 = 0x6
0x20d: S[0x6] = V50
0x20e: V190 = 0x4
0x212: S[0x4] = V46
0x213: V191 = 0x1000000000000000
0x21d: V192 = ADD V44 0x1000000000000000
0x21e: V193 = 0x3
0x220: S[0x3] = V192
0x221: V194 = 0x1
0x224: V195 = S[0x1]
0x225: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V197 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V198 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V195
0x23c: V199 = 0x1
0x23e: V200 = 0xa0
0x240: V201 = 0x2
0x242: V202 = EXP 0x2 0xa0
0x243: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x245: V204 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0x246: V205 = OR V204 V198
0x248: S[0x1] = V205
0x249: V206 = 0x7
0x24d: S[0x7] = V42
0x24e: V207 = 0x40
0x251: V208 = M[0x40]
0x252: V209 = 0x20
0x256: V210 = ADD V208 0x20
0x259: M[V210] = V42
0x25b: V211 = M[0x40]
0x25e: V212 = SUB V208 V211
0x260: V213 = ADD 0x20 V212
0x262: M[V211] = V213
0x265: V214 = ADD 0x40 V208
0x269: M[0x40] = V214
0x26b: V215 = M[V211]
0x273: V216 = ADD V211 0x20
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, S5, V211, V214, V214, V216, V215, V215, V214, V216]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V46, V211, V214, V214, V216, V215, V215, V214, V216]

================================

Block 0x278
[0x278:0x280]
---
Predecessors: [0x203, 0x281]
Successors: [0x281, 0x297]
---
0x278 JUMPDEST
0x279 PUSH1 0x20
0x27b DUP4
0x27c LT
0x27d PUSH2 0x297
0x280 JUMPI
---
0x278: JUMPDEST 
0x279: V217 = 0x20
0x27c: V218 = LT S2 0x20
0x27d: V219 = 0x297
0x280: JUMPI 0x297 V218
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V46, V211, V214, V214, V216, V215, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V46, V211, V214, V214, V216, V215, S2, S1, S0]

================================

Block 0x281
[0x281:0x296]
---
Predecessors: [0x278]
Successors: [0x278]
---
0x281 DUP1
0x282 MLOAD
0x283 DUP3
0x284 MSTORE
0x285 PUSH1 0x1f
0x287 NOT
0x288 SWAP1
0x289 SWAP3
0x28a ADD
0x28b SWAP2
0x28c PUSH1 0x20
0x28e SWAP2
0x28f DUP3
0x290 ADD
0x291 SWAP2
0x292 ADD
0x293 PUSH2 0x278
0x296 JUMP
---
0x282: V220 = M[S0]
0x284: M[S1] = V220
0x285: V221 = 0x1f
0x287: V222 = NOT 0x1f
0x28a: V223 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x28c: V224 = 0x20
0x290: V225 = ADD 0x20 S1
0x292: V226 = ADD 0x20 S0
0x293: V227 = 0x278
0x296: JUMP 0x278
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V46, V211, V214, V214, V216, V215, S2, S1, S0]
Stack pops: 3
Stack additions: [V223, V225, V226]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V46, V211, V214, V214, V216, V215, V223, V225, V226]

================================

Block 0x297
[0x297:0x2cf]
---
Predecessors: [0x278]
Successors: [0x2d0, 0x2d4]
---
0x297 JUMPDEST
0x298 PUSH1 0x1
0x29a DUP4
0x29b PUSH1 0x20
0x29d SUB
0x29e PUSH2 0x100
0x2a1 EXP
0x2a2 SUB
0x2a3 DUP1
0x2a4 NOT
0x2a5 DUP3
0x2a6 MLOAD
0x2a7 AND
0x2a8 DUP2
0x2a9 DUP5
0x2aa MLOAD
0x2ab AND
0x2ac DUP1
0x2ad DUP3
0x2ae OR
0x2af DUP6
0x2b0 MSTORE
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 SWAP1
0x2b8 POP
0x2b9 ADD
0x2ba SWAP2
0x2bb POP
0x2bc POP
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 DUP1
0x2c1 SWAP2
0x2c2 SUB
0x2c3 SWAP1
0x2c4 SHA3
0x2c5 PUSH1 0x1
0x2c7 SWAP1
0x2c8 DIV
0x2c9 EQ
0x2ca ISZERO
0x2cb ISZERO
0x2cc PUSH2 0x2d4
0x2cf JUMPI
---
0x297: JUMPDEST 
0x298: V228 = 0x1
0x29b: V229 = 0x20
0x29d: V230 = SUB 0x20 S2
0x29e: V231 = 0x100
0x2a1: V232 = EXP 0x100 V230
0x2a2: V233 = SUB V232 0x1
0x2a4: V234 = NOT V233
0x2a6: V235 = M[S0]
0x2a7: V236 = AND V235 V234
0x2aa: V237 = M[S1]
0x2ab: V238 = AND V237 V233
0x2ae: V239 = OR V236 V238
0x2b0: M[S1] = V239
0x2b9: V240 = ADD V215 V214
0x2bd: V241 = 0x40
0x2bf: V242 = M[0x40]
0x2c2: V243 = SUB V240 V242
0x2c4: V244 = SHA3 V242 V243
0x2c5: V245 = 0x1
0x2c8: V246 = DIV V244 0x1
0x2c9: V247 = EQ V246 V46
0x2ca: V248 = ISZERO V247
0x2cb: V249 = ISZERO V248
0x2cc: V250 = 0x2d4
0x2cf: JUMPI 0x2d4 V249
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V46, V211, V214, V214, V216, V215, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x297]
Successors: []
---
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 REVERT
---
0x2d0: V251 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]

================================

Block 0x2d4
[0x2d4:0x2de]
---
Predecessors: [0x297]
Successors: [0x2df, 0x32e]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x3
0x2d7 SLOAD
0x2d8 NUMBER
0x2d9 GT
0x2da ISZERO
0x2db PUSH2 0x32e
0x2de JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V252 = 0x3
0x2d7: V253 = S[0x3]
0x2d8: V254 = NUMBER
0x2d9: V255 = GT V254 V253
0x2da: V256 = ISZERO V255
0x2db: V257 = 0x32e
0x2de: JUMPI 0x32e V256
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]

================================

Block 0x2df
[0x2df:0x32d]
---
Predecessors: [0x2d4]
Successors: []
---
0x2df PUSH1 0x40
0x2e1 DUP1
0x2e2 MLOAD
0x2e3 PUSH1 0xe5
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 PUSH3 0x461bcd
0x2ec MUL
0x2ed DUP2
0x2ee MSTORE
0x2ef PUSH1 0x20
0x2f1 PUSH1 0x4
0x2f3 DUP3
0x2f4 ADD
0x2f5 MSTORE
0x2f6 PUSH1 0x13
0x2f8 PUSH1 0x24
0x2fa DUP3
0x2fb ADD
0x2fc MSTORE
0x2fd PUSH32 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x31e PUSH1 0x44
0x320 DUP3
0x321 ADD
0x322 MSTORE
0x323 SWAP1
0x324 MLOAD
0x325 SWAP1
0x326 DUP2
0x327 SWAP1
0x328 SUB
0x329 PUSH1 0x64
0x32b ADD
0x32c SWAP1
0x32d REVERT
---
0x2df: V258 = 0x40
0x2e2: V259 = M[0x40]
0x2e3: V260 = 0xe5
0x2e5: V261 = 0x2
0x2e7: V262 = EXP 0x2 0xe5
0x2e8: V263 = 0x461bcd
0x2ec: V264 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x2ee: M[V259] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2ef: V265 = 0x20
0x2f1: V266 = 0x4
0x2f4: V267 = ADD V259 0x4
0x2f5: M[V267] = 0x20
0x2f6: V268 = 0x13
0x2f8: V269 = 0x24
0x2fb: V270 = ADD V259 0x24
0x2fc: M[V270] = 0x13
0x2fd: V271 = 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x31e: V272 = 0x44
0x321: V273 = ADD V259 0x44
0x322: M[V273] = 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x324: V274 = M[0x40]
0x328: V275 = SUB V259 V274
0x329: V276 = 0x64
0x32b: V277 = ADD 0x64 V275
0x32d: REVERT V274 V277
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]

================================

Block 0x32e
[0x32e:0x395]
---
Predecessors: [0x2d4]
Successors: [0x396]
---
0x32e JUMPDEST
0x32f PUSH1 0x3
0x331 SLOAD
0x332 PUSH1 0x4
0x334 SLOAD
0x335 PUSH1 0x40
0x337 MLOAD
0x338 PUSH1 0x20
0x33a ADD
0x33b DUP1
0x33c DUP4
0x33d PUSH5 0xffffffffff
0x343 AND
0x344 PUSH5 0xffffffffff
0x34a AND
0x34b PUSH28 0x1000000000000000000000000000000000000000000000000000000
0x368 MUL
0x369 DUP2
0x36a MSTORE
0x36b PUSH1 0x5
0x36d ADD
0x36e DUP3
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x20
0x373 ADD
0x374 SWAP3
0x375 POP
0x376 POP
0x377 POP
0x378 PUSH1 0x40
0x37a MLOAD
0x37b PUSH1 0x20
0x37d DUP2
0x37e DUP4
0x37f SUB
0x380 SUB
0x381 DUP2
0x382 MSTORE
0x383 SWAP1
0x384 PUSH1 0x40
0x386 MSTORE
0x387 PUSH1 0x40
0x389 MLOAD
0x38a DUP1
0x38b DUP3
0x38c DUP1
0x38d MLOAD
0x38e SWAP1
0x38f PUSH1 0x20
0x391 ADD
0x392 SWAP1
0x393 DUP1
0x394 DUP4
0x395 DUP4
---
0x32e: JUMPDEST 
0x32f: V278 = 0x3
0x331: V279 = S[0x3]
0x332: V280 = 0x4
0x334: V281 = S[0x4]
0x335: V282 = 0x40
0x337: V283 = M[0x40]
0x338: V284 = 0x20
0x33a: V285 = ADD 0x20 V283
0x33d: V286 = 0xffffffffff
0x343: V287 = AND 0xffffffffff V279
0x344: V288 = 0xffffffffff
0x34a: V289 = AND 0xffffffffff V287
0x34b: V290 = 0x1000000000000000000000000000000000000000000000000000000
0x368: V291 = MUL 0x1000000000000000000000000000000000000000000000000000000 V289
0x36a: M[V285] = V291
0x36b: V292 = 0x5
0x36d: V293 = ADD 0x5 V285
0x370: M[V293] = V281
0x371: V294 = 0x20
0x373: V295 = ADD 0x20 V293
0x378: V296 = 0x40
0x37a: V297 = M[0x40]
0x37b: V298 = 0x20
0x37f: V299 = SUB V295 V297
0x380: V300 = SUB V299 0x20
0x382: M[V297] = V300
0x384: V301 = 0x40
0x386: M[0x40] = V295
0x387: V302 = 0x40
0x389: V303 = M[0x40]
0x38d: V304 = M[V297]
0x38f: V305 = 0x20
0x391: V306 = ADD 0x20 V297
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60]
Stack pops: 0
Stack additions: [V297, V303, V303, V306, V304, V304, V303, V306]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V297, V303, V303, V306, V304, V304, V303, V306]

================================

Block 0x396
[0x396:0x39e]
---
Predecessors: [0x32e, 0x39f]
Successors: [0x39f, 0x3b5]
---
0x396 JUMPDEST
0x397 PUSH1 0x20
0x399 DUP4
0x39a LT
0x39b PUSH2 0x3b5
0x39e JUMPI
---
0x396: JUMPDEST 
0x397: V307 = 0x20
0x39a: V308 = LT S2 0x20
0x39b: V309 = 0x3b5
0x39e: JUMPI 0x3b5 V308
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V297, V303, V303, V306, V304, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V297, V303, V303, V306, V304, S2, S1, S0]

================================

Block 0x39f
[0x39f:0x3b4]
---
Predecessors: [0x396]
Successors: [0x396]
---
0x39f DUP1
0x3a0 MLOAD
0x3a1 DUP3
0x3a2 MSTORE
0x3a3 PUSH1 0x1f
0x3a5 NOT
0x3a6 SWAP1
0x3a7 SWAP3
0x3a8 ADD
0x3a9 SWAP2
0x3aa PUSH1 0x20
0x3ac SWAP2
0x3ad DUP3
0x3ae ADD
0x3af SWAP2
0x3b0 ADD
0x3b1 PUSH2 0x396
0x3b4 JUMP
---
0x3a0: V310 = M[S0]
0x3a2: M[S1] = V310
0x3a3: V311 = 0x1f
0x3a5: V312 = NOT 0x1f
0x3a8: V313 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3aa: V314 = 0x20
0x3ae: V315 = ADD 0x20 S1
0x3b0: V316 = ADD 0x20 S0
0x3b1: V317 = 0x396
0x3b4: JUMP 0x396
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V297, V303, V303, V306, V304, S2, S1, S0]
Stack pops: 3
Stack additions: [V313, V315, V316]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V297, V303, V303, V306, V304, V313, V315, V316]

================================

Block 0x3b5
[0x3b5:0x42e]
---
Predecessors: [0x396]
Successors: [0x42f, 0x438]
---
0x3b5 JUMPDEST
0x3b6 MLOAD
0x3b7 DUP2
0x3b8 MLOAD
0x3b9 PUSH1 0x20
0x3bb SWAP4
0x3bc DUP5
0x3bd SUB
0x3be PUSH2 0x100
0x3c1 EXP
0x3c2 PUSH1 0x0
0x3c4 NOT
0x3c5 ADD
0x3c6 DUP1
0x3c7 NOT
0x3c8 SWAP1
0x3c9 SWAP3
0x3ca AND
0x3cb SWAP2
0x3cc AND
0x3cd OR
0x3ce SWAP1
0x3cf MSTORE
0x3d0 PUSH1 0x40
0x3d2 DUP1
0x3d3 MLOAD
0x3d4 SWAP3
0x3d5 SWAP1
0x3d6 SWAP5
0x3d7 ADD
0x3d8 DUP3
0x3d9 SWAP1
0x3da SUB
0x3db DUP3
0x3dc SHA3
0x3dd PUSH1 0x5
0x3df SLOAD
0x3e0 PUSH1 0x6
0x3e2 SLOAD
0x3e3 PUSH1 0x0
0x3e5 DUP1
0x3e6 DUP7
0x3e7 MSTORE
0x3e8 DUP6
0x3e9 DUP6
0x3ea ADD
0x3eb DUP1
0x3ec DUP10
0x3ed MSTORE
0x3ee DUP5
0x3ef SWAP1
0x3f0 MSTORE
0x3f1 PUSH1 0x1b
0x3f3 DUP7
0x3f4 DUP10
0x3f5 ADD
0x3f6 MSTORE
0x3f7 PUSH1 0x60
0x3f9 DUP7
0x3fa ADD
0x3fb SWAP3
0x3fc SWAP1
0x3fd SWAP3
0x3fe MSTORE
0x3ff PUSH1 0x80
0x401 DUP6
0x402 ADD
0x403 MSTORE
0x404 SWAP5
0x405 MLOAD
0x406 SWAP1
0x407 SWAP9
0x408 POP
0x409 PUSH1 0x1
0x40b SWAP7
0x40c POP
0x40d PUSH1 0xa0
0x40f DUP1
0x410 DUP5
0x411 ADD
0x412 SWAP7
0x413 POP
0x414 SWAP2
0x415 SWAP5
0x416 PUSH1 0x1f
0x418 NOT
0x419 DUP3
0x41a ADD
0x41b SWAP5
0x41c POP
0x41d SWAP3
0x41e DUP2
0x41f SWAP1
0x420 SUB
0x421 SWAP1
0x422 SWAP2
0x423 ADD
0x424 SWAP2
0x425 DUP7
0x426 GAS
0x427 CALL
0x428 ISZERO
0x429 DUP1
0x42a ISZERO
0x42b PUSH2 0x438
0x42e JUMPI
---
0x3b5: JUMPDEST 
0x3b6: V318 = M[S0]
0x3b8: V319 = M[S1]
0x3b9: V320 = 0x20
0x3bd: V321 = SUB 0x20 S2
0x3be: V322 = 0x100
0x3c1: V323 = EXP 0x100 V321
0x3c2: V324 = 0x0
0x3c4: V325 = NOT 0x0
0x3c5: V326 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V323
0x3c7: V327 = NOT V326
0x3ca: V328 = AND V318 V327
0x3cc: V329 = AND V326 V319
0x3cd: V330 = OR V329 V328
0x3cf: M[S1] = V330
0x3d0: V331 = 0x40
0x3d3: V332 = M[0x40]
0x3d7: V333 = ADD V303 V304
0x3da: V334 = SUB V333 V332
0x3dc: V335 = SHA3 V332 V334
0x3dd: V336 = 0x5
0x3df: V337 = S[0x5]
0x3e0: V338 = 0x6
0x3e2: V339 = S[0x6]
0x3e3: V340 = 0x0
0x3e7: M[V332] = 0x0
0x3ea: V341 = ADD 0x20 V332
0x3ed: M[0x40] = V341
0x3f0: M[V341] = V335
0x3f1: V342 = 0x1b
0x3f5: V343 = ADD 0x40 V332
0x3f6: M[V343] = 0x1b
0x3f7: V344 = 0x60
0x3fa: V345 = ADD V332 0x60
0x3fe: M[V345] = V337
0x3ff: V346 = 0x80
0x402: V347 = ADD V332 0x80
0x403: M[V347] = V339
0x405: V348 = M[0x40]
0x409: V349 = 0x1
0x40d: V350 = 0xa0
0x411: V351 = ADD V332 0xa0
0x416: V352 = 0x1f
0x418: V353 = NOT 0x1f
0x41a: V354 = ADD V348 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x420: V355 = SUB V332 V348
0x423: V356 = ADD 0xa0 V355
0x426: V357 = GAS
0x427: V358 = CALL V357 0x1 0x0 V348 V356 V354 0x20
0x428: V359 = ISZERO V358
0x42a: V360 = ISZERO V359
0x42b: V361 = 0x438
0x42e: JUMPI 0x438 V360
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, 0x0, 0x60, V297, V303, V303, V306, V304, S2, S1, S0]
Stack pops: 10
Stack additions: [V335, S8, 0x1, V351, V359]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, 0x60, 0x1, V351, V359]

================================

Block 0x42f
[0x42f:0x437]
---
Predecessors: [0x3b5]
Successors: []
---
0x42f RETURNDATASIZE
0x430 PUSH1 0x0
0x432 DUP1
0x433 RETURNDATACOPY
0x434 RETURNDATASIZE
0x435 PUSH1 0x0
0x437 REVERT
---
0x42f: V362 = RETURNDATASIZE
0x430: V363 = 0x0
0x433: RETURNDATACOPY 0x0 0x0 V362
0x434: V364 = RETURNDATASIZE
0x435: V365 = 0x0
0x437: REVERT 0x0 V364
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, 0x60, 0x1, V351, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, 0x60, 0x1, V351, V359]

================================

Block 0x438
[0x438:0x459]
---
Predecessors: [0x3b5]
Successors: [0x45a, 0x4a9]
---
0x438 JUMPDEST
0x439 POP
0x43a POP
0x43b PUSH1 0x40
0x43d MLOAD
0x43e PUSH1 0x1f
0x440 NOT
0x441 ADD
0x442 MLOAD
0x443 PUSH1 0x1
0x445 SLOAD
0x446 PUSH1 0x1
0x448 PUSH1 0xa0
0x44a PUSH1 0x2
0x44c EXP
0x44d SUB
0x44e SWAP1
0x44f DUP2
0x450 AND
0x451 SWAP2
0x452 AND
0x453 EQ
0x454 SWAP1
0x455 POP
0x456 PUSH2 0x4a9
0x459 JUMPI
---
0x438: JUMPDEST 
0x43b: V366 = 0x40
0x43d: V367 = M[0x40]
0x43e: V368 = 0x1f
0x440: V369 = NOT 0x1f
0x441: V370 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0 V367
0x442: V371 = M[V370]
0x443: V372 = 0x1
0x445: V373 = S[0x1]
0x446: V374 = 0x1
0x448: V375 = 0xa0
0x44a: V376 = 0x2
0x44c: V377 = EXP 0x2 0xa0
0x44d: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x450: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x452: V380 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0x453: V381 = EQ V380 V379
0x456: V382 = 0x4a9
0x459: JUMPI 0x4a9 V381
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, 0x60, 0x1, V351, V359]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, 0x60]

================================

Block 0x45a
[0x45a:0x4a8]
---
Predecessors: [0x438]
Successors: []
---
0x45a PUSH1 0x40
0x45c DUP1
0x45d MLOAD
0x45e PUSH1 0xe5
0x460 PUSH1 0x2
0x462 EXP
0x463 PUSH3 0x461bcd
0x467 MUL
0x468 DUP2
0x469 MSTORE
0x46a PUSH1 0x20
0x46c PUSH1 0x4
0x46e DUP3
0x46f ADD
0x470 MSTORE
0x471 PUSH1 0x1d
0x473 PUSH1 0x24
0x475 DUP3
0x476 ADD
0x477 MSTORE
0x478 PUSH32 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x499 PUSH1 0x44
0x49b DUP3
0x49c ADD
0x49d MSTORE
0x49e SWAP1
0x49f MLOAD
0x4a0 SWAP1
0x4a1 DUP2
0x4a2 SWAP1
0x4a3 SUB
0x4a4 PUSH1 0x64
0x4a6 ADD
0x4a7 SWAP1
0x4a8 REVERT
---
0x45a: V383 = 0x40
0x45d: V384 = M[0x40]
0x45e: V385 = 0xe5
0x460: V386 = 0x2
0x462: V387 = EXP 0x2 0xe5
0x463: V388 = 0x461bcd
0x467: V389 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x469: M[V384] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x46a: V390 = 0x20
0x46c: V391 = 0x4
0x46f: V392 = ADD V384 0x4
0x470: M[V392] = 0x20
0x471: V393 = 0x1d
0x473: V394 = 0x24
0x476: V395 = ADD V384 0x24
0x477: M[V395] = 0x1d
0x478: V396 = 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x499: V397 = 0x44
0x49c: V398 = ADD V384 0x44
0x49d: M[V398] = 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x49f: V399 = M[0x40]
0x4a3: V400 = SUB V384 V399
0x4a4: V401 = 0x64
0x4a6: V402 = ADD 0x64 V400
0x4a8: REVERT V399 V402
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, 0x60]

================================

Block 0x4a9
[0x4a9:0x4d9]
---
Predecessors: [0x438]
Successors: [0x4da, 0x4db]
---
0x4a9 JUMPDEST
0x4aa PUSH1 0x40
0x4ac DUP1
0x4ad MLOAD
0x4ae PUSH1 0x1
0x4b0 DUP1
0x4b1 DUP3
0x4b2 MSTORE
0x4b3 DUP2
0x4b4 DUP4
0x4b5 ADD
0x4b6 SWAP1
0x4b7 SWAP3
0x4b8 MSTORE
0x4b9 SWAP1
0x4ba PUSH1 0x20
0x4bc DUP1
0x4bd DUP4
0x4be ADD
0x4bf SWAP1
0x4c0 DUP1
0x4c1 CODESIZE
0x4c2 DUP4
0x4c3 CODECOPY
0x4c4 ADD
0x4c5 SWAP1
0x4c6 POP
0x4c7 POP
0x4c8 SWAP1
0x4c9 POP
0x4ca PUSH1 0x4
0x4cc SLOAD
0x4cd DUP2
0x4ce PUSH1 0x0
0x4d0 DUP2
0x4d1 MLOAD
0x4d2 DUP2
0x4d3 LT
0x4d4 ISZERO
0x4d5 ISZERO
0x4d6 PUSH2 0x4db
0x4d9 JUMPI
---
0x4a9: JUMPDEST 
0x4aa: V403 = 0x40
0x4ad: V404 = M[0x40]
0x4ae: V405 = 0x1
0x4b2: M[V404] = 0x1
0x4b5: V406 = ADD 0x40 V404
0x4b8: M[0x40] = V406
0x4ba: V407 = 0x20
0x4be: V408 = ADD V404 0x20
0x4c1: V409 = CODESIZE
0x4c3: CODECOPY V408 V409 0x20
0x4c4: V410 = ADD 0x20 V408
0x4ca: V411 = 0x4
0x4cc: V412 = S[0x4]
0x4ce: V413 = 0x0
0x4d1: V414 = M[V404]
0x4d3: V415 = LT 0x0 V414
0x4d4: V416 = ISZERO V415
0x4d5: V417 = ISZERO V416
0x4d6: V418 = 0x4db
0x4d9: JUMPI 0x4db V417
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, 0x60]
Stack pops: 1
Stack additions: [V404, V412, V404, 0x0]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V412, V404, 0x0]

================================

Block 0x4da
[0x4da:0x4da]
---
Predecessors: [0x4a9]
Successors: []
---
0x4da INVALID
---
0x4da: INVALID 
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V412, V404, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V412, V404, 0x0]

================================

Block 0x4db
[0x4db:0x54e]
---
Predecessors: [0x4a9]
Successors: [0x54f]
---
0x4db JUMPDEST
0x4dc PUSH1 0x20
0x4de SWAP1
0x4df DUP2
0x4e0 MUL
0x4e1 SWAP1
0x4e2 SWAP2
0x4e3 ADD
0x4e4 DUP2
0x4e5 ADD
0x4e6 SWAP2
0x4e7 SWAP1
0x4e8 SWAP2
0x4e9 MSTORE
0x4ea PUSH1 0x0
0x4ec DUP1
0x4ed SLOAD
0x4ee PUSH1 0x40
0x4f0 MLOAD
0x4f1 PUSH32 0xef11554200000000000000000000000000000000000000000000000000000000
0x512 DUP2
0x513 MSTORE
0x514 PUSH1 0x4
0x516 DUP2
0x517 ADD
0x518 DUP5
0x519 DUP2
0x51a MSTORE
0x51b DUP6
0x51c MLOAD
0x51d PUSH1 0x24
0x51f DUP4
0x520 ADD
0x521 MSTORE
0x522 DUP6
0x523 MLOAD
0x524 PUSH1 0x1
0x526 PUSH1 0xa0
0x528 PUSH1 0x2
0x52a EXP
0x52b SUB
0x52c SWAP1
0x52d SWAP4
0x52e AND
0x52f SWAP5
0x530 PUSH4 0xef115542
0x535 SWAP5
0x536 DUP8
0x537 SWAP5
0x538 SWAP3
0x539 SWAP4
0x53a DUP5
0x53b SWAP4
0x53c PUSH1 0x44
0x53e SWAP1
0x53f SWAP2
0x540 ADD
0x541 SWAP3
0x542 DUP7
0x543 DUP2
0x544 ADD
0x545 SWAP3
0x546 SWAP2
0x547 MUL
0x548 SWAP1
0x549 DUP2
0x54a SWAP1
0x54b DUP5
0x54c SWAP1
0x54d DUP5
0x54e SWAP1
---
0x4db: JUMPDEST 
0x4dc: V419 = 0x20
0x4e0: V420 = MUL 0x20 0x0
0x4e3: V421 = ADD V404 0x0
0x4e5: V422 = ADD 0x20 V421
0x4e9: M[V422] = V412
0x4ea: V423 = 0x0
0x4ed: V424 = S[0x0]
0x4ee: V425 = 0x40
0x4f0: V426 = M[0x40]
0x4f1: V427 = 0xef11554200000000000000000000000000000000000000000000000000000000
0x513: M[V426] = 0xef11554200000000000000000000000000000000000000000000000000000000
0x514: V428 = 0x4
0x517: V429 = ADD V426 0x4
0x51a: M[V429] = 0x20
0x51c: V430 = M[V404]
0x51d: V431 = 0x24
0x520: V432 = ADD V426 0x24
0x521: M[V432] = V430
0x523: V433 = M[V404]
0x524: V434 = 0x1
0x526: V435 = 0xa0
0x528: V436 = 0x2
0x52a: V437 = EXP 0x2 0xa0
0x52b: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52e: V439 = AND V424 0xffffffffffffffffffffffffffffffffffffffff
0x530: V440 = 0xef115542
0x53c: V441 = 0x44
0x540: V442 = ADD V426 0x44
0x544: V443 = ADD 0x20 V404
0x547: V444 = MUL V433 0x20
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V412, V404, 0x0]
Stack pops: 4
Stack additions: [S3, V439, 0xef115542, S3, V429, V429, V442, V443, V444, V444, V442, V443, 0x0]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V404, V429, V429, V442, V443, V444, V444, V442, V443, 0x0]

================================

Block 0x54f
[0x54f:0x557]
---
Predecessors: [0x4db, 0x558]
Successors: [0x558, 0x567]
---
0x54f JUMPDEST
0x550 DUP4
0x551 DUP2
0x552 LT
0x553 ISZERO
0x554 PUSH2 0x567
0x557 JUMPI
---
0x54f: JUMPDEST 
0x552: V445 = LT S0 V444
0x553: V446 = ISZERO V445
0x554: V447 = 0x567
0x557: JUMPI 0x567 V446
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V404, V429, V429, V442, V443, V444, V444, V442, V443, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V404, V429, V429, V442, V443, V444, V444, V442, V443, S0]

================================

Block 0x558
[0x558:0x566]
---
Predecessors: [0x54f]
Successors: [0x54f]
---
0x558 DUP2
0x559 DUP2
0x55a ADD
0x55b MLOAD
0x55c DUP4
0x55d DUP3
0x55e ADD
0x55f MSTORE
0x560 PUSH1 0x20
0x562 ADD
0x563 PUSH2 0x54f
0x566 JUMP
---
0x55a: V448 = ADD S0 V443
0x55b: V449 = M[V448]
0x55e: V450 = ADD S0 V442
0x55f: M[V450] = V449
0x560: V451 = 0x20
0x562: V452 = ADD 0x20 S0
0x563: V453 = 0x54f
0x566: JUMP 0x54f
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V404, V429, V429, V442, V443, V444, V444, V442, V443, S0]
Stack pops: 3
Stack additions: [S2, S1, V452]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V404, V429, V429, V442, V443, V444, V444, V442, V443, V452]

================================

Block 0x567
[0x567:0x587]
---
Predecessors: [0x54f]
Successors: [0x588, 0x58c]
---
0x567 JUMPDEST
0x568 POP
0x569 POP
0x56a POP
0x56b POP
0x56c SWAP1
0x56d POP
0x56e ADD
0x56f SWAP3
0x570 POP
0x571 POP
0x572 POP
0x573 PUSH1 0x0
0x575 PUSH1 0x40
0x577 MLOAD
0x578 DUP1
0x579 DUP4
0x57a SUB
0x57b DUP2
0x57c PUSH1 0x0
0x57e DUP8
0x57f DUP1
0x580 EXTCODESIZE
0x581 ISZERO
0x582 DUP1
0x583 ISZERO
0x584 PUSH2 0x58c
0x587 JUMPI
---
0x567: JUMPDEST 
0x56e: V454 = ADD V444 V442
0x573: V455 = 0x0
0x575: V456 = 0x40
0x577: V457 = M[0x40]
0x57a: V458 = SUB V454 V457
0x57c: V459 = 0x0
0x580: V460 = EXTCODESIZE V439
0x581: V461 = ISZERO V460
0x583: V462 = ISZERO V461
0x584: V463 = 0x58c
0x587: JUMPI 0x58c V462
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V404, V429, V429, V442, V443, V444, V444, V442, V443, S0]
Stack pops: 12
Stack additions: [S11, S10, V454, 0x0, V457, V458, V457, 0x0, S11, V461]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V454, 0x0, V457, V458, V457, 0x0, V439, V461]

================================

Block 0x588
[0x588:0x58b]
---
Predecessors: [0x567]
Successors: []
---
0x588 PUSH1 0x0
0x58a DUP1
0x58b REVERT
---
0x588: V464 = 0x0
0x58b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V454, 0x0, V457, V458, V457, 0x0, V439, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V454, 0x0, V457, V458, V457, 0x0, V439, V461]

================================

Block 0x58c
[0x58c:0x596]
---
Predecessors: [0x567]
Successors: [0x597, 0x5a0]
---
0x58c JUMPDEST
0x58d POP
0x58e GAS
0x58f CALL
0x590 ISZERO
0x591 DUP1
0x592 ISZERO
0x593 PUSH2 0x5a0
0x596 JUMPI
---
0x58c: JUMPDEST 
0x58e: V465 = GAS
0x58f: V466 = CALL V465 V439 0x0 V457 V458 V457 0x0
0x590: V467 = ISZERO V466
0x592: V468 = ISZERO V467
0x593: V469 = 0x5a0
0x596: JUMPI 0x5a0 V468
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V454, 0x0, V457, V458, V457, 0x0, V439, V461]
Stack pops: 7
Stack additions: [V467]
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V454, V467]

================================

Block 0x597
[0x597:0x59f]
---
Predecessors: [0x58c]
Successors: []
---
0x597 RETURNDATASIZE
0x598 PUSH1 0x0
0x59a DUP1
0x59b RETURNDATACOPY
0x59c RETURNDATASIZE
0x59d PUSH1 0x0
0x59f REVERT
---
0x597: V470 = RETURNDATASIZE
0x598: V471 = 0x0
0x59b: RETURNDATACOPY 0x0 0x0 V470
0x59c: V472 = RETURNDATASIZE
0x59d: V473 = 0x0
0x59f: REVERT 0x0 V472
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V454, V467]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V454, V467]

================================

Block 0x5a0
[0x5a0:0x5ad]
---
Predecessors: [0x58c]
Successors: [0x77]
---
0x5a0 JUMPDEST
0x5a1 POP
0x5a2 POP
0x5a3 POP
0x5a4 POP
0x5a5 POP
0x5a6 POP
0x5a7 POP
0x5a8 POP
0x5a9 POP
0x5aa POP
0x5ab POP
0x5ac POP
0x5ad JUMP
---
0x5a0: JUMPDEST 
0x5ad: JUMP 0x77
---
Entry stack: [V11, 0x77, V42, V44, V46, V48, V50, V58, V335, V404, V439, 0xef115542, V454, V467]
Stack pops: 13
Stack additions: []
Exit stack: [V11]

================================

Block 0x5ae
[0x5ae:0x5c0]
---
Predecessors: [0xbe]
Successors: [0x5c1, 0x612]
---
0x5ae JUMPDEST
0x5af PUSH1 0x2
0x5b1 SLOAD
0x5b2 PUSH1 0x1
0x5b4 PUSH1 0xa0
0x5b6 PUSH1 0x2
0x5b8 EXP
0x5b9 SUB
0x5ba AND
0x5bb CALLER
0x5bc EQ
0x5bd PUSH2 0x612
0x5c0 JUMPI
---
0x5ae: JUMPDEST 
0x5af: V474 = 0x2
0x5b1: V475 = S[0x2]
0x5b2: V476 = 0x1
0x5b4: V477 = 0xa0
0x5b6: V478 = 0x2
0x5b8: V479 = EXP 0x2 0xa0
0x5b9: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ba: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x5bb: V482 = CALLER
0x5bc: V483 = EQ V482 V481
0x5bd: V484 = 0x612
0x5c0: JUMPI 0x612 V483
---
Entry stack: [V11, 0x77, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V62]

================================

Block 0x5c1
[0x5c1:0x611]
---
Predecessors: [0x5ae]
Successors: []
---
0x5c1 PUSH1 0x40
0x5c3 DUP1
0x5c4 MLOAD
0x5c5 PUSH1 0xe5
0x5c7 PUSH1 0x2
0x5c9 EXP
0x5ca PUSH3 0x461bcd
0x5ce MUL
0x5cf DUP2
0x5d0 MSTORE
0x5d1 PUSH1 0x20
0x5d3 PUSH1 0x4
0x5d5 DUP3
0x5d6 ADD
0x5d7 MSTORE
0x5d8 PUSH1 0x26
0x5da PUSH1 0x24
0x5dc DUP3
0x5dd ADD
0x5de MSTORE
0x5df PUSH1 0x0
0x5e1 DUP1
0x5e2 MLOAD
0x5e3 PUSH1 0x20
0x5e5 PUSH2 0xb45
0x5e8 DUP4
0x5e9 CODECOPY
0x5ea DUP2
0x5eb MLOAD
0x5ec SWAP2
0x5ed MSTORE
0x5ee PUSH1 0x44
0x5f0 DUP3
0x5f1 ADD
0x5f2 MSTORE
0x5f3 PUSH1 0x0
0x5f5 DUP1
0x5f6 MLOAD
0x5f7 PUSH1 0x20
0x5f9 PUSH2 0xb25
0x5fc DUP4
0x5fd CODECOPY
0x5fe DUP2
0x5ff MLOAD
0x600 SWAP2
0x601 MSTORE
0x602 PUSH1 0x64
0x604 DUP3
0x605 ADD
0x606 MSTORE
0x607 SWAP1
0x608 MLOAD
0x609 SWAP1
0x60a DUP2
0x60b SWAP1
0x60c SUB
0x60d PUSH1 0x84
0x60f ADD
0x610 SWAP1
0x611 REVERT
---
0x5c1: V485 = 0x40
0x5c4: V486 = M[0x40]
0x5c5: V487 = 0xe5
0x5c7: V488 = 0x2
0x5c9: V489 = EXP 0x2 0xe5
0x5ca: V490 = 0x461bcd
0x5ce: V491 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5d0: M[V486] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5d1: V492 = 0x20
0x5d3: V493 = 0x4
0x5d6: V494 = ADD V486 0x4
0x5d7: M[V494] = 0x20
0x5d8: V495 = 0x26
0x5da: V496 = 0x24
0x5dd: V497 = ADD V486 0x24
0x5de: M[V497] = 0x26
0x5df: V498 = 0x0
0x5e2: V499 = M[0x0]
0x5e3: V500 = 0x20
0x5e5: V501 = 0xb45
0x5e9: CODECOPY 0x0 0xb45 0x20
0x5eb: V502 = M[0x0]
0x5ed: M[0x0] = V499
0x5ee: V503 = 0x44
0x5f1: V504 = ADD V486 0x44
0x5f2: M[V504] = V502
0x5f3: V505 = 0x0
0x5f6: V506 = M[0x0]
0x5f7: V507 = 0x20
0x5f9: V508 = 0xb25
0x5fd: CODECOPY 0x0 0xb25 0x20
0x5ff: V509 = M[0x0]
0x601: M[0x0] = V506
0x602: V510 = 0x64
0x605: V511 = ADD V486 0x64
0x606: M[V511] = V509
0x608: V512 = M[0x40]
0x60c: V513 = SUB V486 V512
0x60d: V514 = 0x84
0x60f: V515 = ADD 0x84 V513
0x611: REVERT V512 V515
---
Entry stack: [V11, 0x77, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V62]

================================

Block 0x612
[0x612:0x619]
---
Predecessors: [0x5ae]
Successors: [0x61a, 0x61d]
---
0x612 JUMPDEST
0x613 DUP1
0x614 ISZERO
0x615 ISZERO
0x616 PUSH2 0x61d
0x619 JUMPI
---
0x612: JUMPDEST 
0x614: V516 = ISZERO V62
0x615: V517 = ISZERO V516
0x616: V518 = 0x61d
0x619: JUMPI 0x61d V517
---
Entry stack: [V11, 0x77, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V62]

================================

Block 0x61a
[0x61a:0x61c]
---
Predecessors: [0x612]
Successors: [0x61d]
---
0x61a POP
0x61b ADDRESS
0x61c BALANCE
---
0x61b: V519 = ADDRESS
0x61c: V520 = BALANCE V519
---
Entry stack: [V11, 0x77, V62]
Stack pops: 1
Stack additions: [V520]
Exit stack: [V11, 0x77, V520]

================================

Block 0x61d
[0x61d:0x6c5]
---
Predecessors: [0x612, 0x61a]
Successors: [0x6c6, 0x6ca]
---
0x61d JUMPDEST
0x61e PUSH1 0x8
0x620 DUP1
0x621 SLOAD
0x622 PUSH5 0xffffffffff
0x628 NOT
0x629 AND
0x62a NUMBER
0x62b PUSH5 0xffffffffff
0x631 AND
0x632 OR
0x633 SWAP1
0x634 SSTORE
0x635 PUSH1 0x0
0x637 DUP1
0x638 SLOAD
0x639 PUSH1 0x3
0x63b SLOAD
0x63c PUSH1 0x4
0x63e DUP1
0x63f SLOAD
0x640 PUSH1 0x5
0x642 SLOAD
0x643 PUSH1 0x6
0x645 SLOAD
0x646 PUSH1 0x40
0x648 DUP1
0x649 MLOAD
0x64a PUSH32 0x5e83b46300000000000000000000000000000000000000000000000000000000
0x66b DUP2
0x66c MSTORE
0x66d PUSH1 0x32
0x66f SWAP6
0x670 DUP2
0x671 ADD
0x672 SWAP6
0x673 SWAP1
0x674 SWAP6
0x675 MSTORE
0x676 PUSH1 0x64
0x678 PUSH1 0x24
0x67a DUP7
0x67b ADD
0x67c DUP2
0x67d SWAP1
0x67e MSTORE
0x67f PUSH1 0x44
0x681 DUP7
0x682 ADD
0x683 SWAP7
0x684 SWAP1
0x685 SWAP7
0x686 MSTORE
0x687 SWAP5
0x688 DUP5
0x689 ADD
0x68a SWAP3
0x68b SWAP1
0x68c SWAP3
0x68d MSTORE
0x68e PUSH1 0x84
0x690 DUP4
0x691 ADD
0x692 MSTORE
0x693 PUSH1 0xa4
0x695 DUP3
0x696 ADD
0x697 MSTORE
0x698 SWAP1
0x699 MLOAD
0x69a PUSH1 0x1
0x69c PUSH1 0xa0
0x69e PUSH1 0x2
0x6a0 EXP
0x6a1 SUB
0x6a2 SWAP1
0x6a3 SWAP3
0x6a4 AND
0x6a5 SWAP3
0x6a6 PUSH4 0x5e83b463
0x6ab SWAP3
0x6ac DUP6
0x6ad SWAP3
0x6ae PUSH1 0xc4
0x6b0 DUP1
0x6b1 DUP3
0x6b2 ADD
0x6b3 SWAP4
0x6b4 SWAP3
0x6b5 SWAP2
0x6b6 DUP3
0x6b7 SWAP1
0x6b8 SUB
0x6b9 ADD
0x6ba DUP2
0x6bb DUP6
0x6bc DUP9
0x6bd DUP1
0x6be EXTCODESIZE
0x6bf ISZERO
0x6c0 DUP1
0x6c1 ISZERO
0x6c2 PUSH2 0x6ca
0x6c5 JUMPI
---
0x61d: JUMPDEST 
0x61e: V521 = 0x8
0x621: V522 = S[0x8]
0x622: V523 = 0xffffffffff
0x628: V524 = NOT 0xffffffffff
0x629: V525 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000 V522
0x62a: V526 = NUMBER
0x62b: V527 = 0xffffffffff
0x631: V528 = AND 0xffffffffff V526
0x632: V529 = OR V528 V525
0x634: S[0x8] = V529
0x635: V530 = 0x0
0x638: V531 = S[0x0]
0x639: V532 = 0x3
0x63b: V533 = S[0x3]
0x63c: V534 = 0x4
0x63f: V535 = S[0x4]
0x640: V536 = 0x5
0x642: V537 = S[0x5]
0x643: V538 = 0x6
0x645: V539 = S[0x6]
0x646: V540 = 0x40
0x649: V541 = M[0x40]
0x64a: V542 = 0x5e83b46300000000000000000000000000000000000000000000000000000000
0x66c: M[V541] = 0x5e83b46300000000000000000000000000000000000000000000000000000000
0x66d: V543 = 0x32
0x671: V544 = ADD V541 0x4
0x675: M[V544] = 0x32
0x676: V545 = 0x64
0x678: V546 = 0x24
0x67b: V547 = ADD V541 0x24
0x67e: M[V547] = 0x64
0x67f: V548 = 0x44
0x682: V549 = ADD V541 0x44
0x686: M[V549] = V533
0x689: V550 = ADD V541 0x64
0x68d: M[V550] = V535
0x68e: V551 = 0x84
0x691: V552 = ADD V541 0x84
0x692: M[V552] = V537
0x693: V553 = 0xa4
0x696: V554 = ADD V541 0xa4
0x697: M[V554] = V539
0x699: V555 = M[0x40]
0x69a: V556 = 0x1
0x69c: V557 = 0xa0
0x69e: V558 = 0x2
0x6a0: V559 = EXP 0x2 0xa0
0x6a1: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a4: V561 = AND V531 0xffffffffffffffffffffffffffffffffffffffff
0x6a6: V562 = 0x5e83b463
0x6ae: V563 = 0xc4
0x6b2: V564 = ADD V541 0xc4
0x6b8: V565 = SUB V541 V555
0x6b9: V566 = ADD V565 0xc4
0x6be: V567 = EXTCODESIZE V561
0x6bf: V568 = ISZERO V567
0x6c1: V569 = ISZERO V568
0x6c2: V570 = 0x6ca
0x6c5: JUMPI 0x6ca V569
---
Entry stack: [V11, 0x77, S0]
Stack pops: 1
Stack additions: [S0, V561, 0x5e83b463, S0, V564, 0x0, V555, V566, V555, S0, V561, V568]
Exit stack: [V11, 0x77, S0, V561, 0x5e83b463, S0, V564, 0x0, V555, V566, V555, S0, V561, V568]

================================

Block 0x6c6
[0x6c6:0x6c9]
---
Predecessors: [0x61d]
Successors: []
---
0x6c6 PUSH1 0x0
0x6c8 DUP1
0x6c9 REVERT
---
0x6c6: V571 = 0x0
0x6c9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, S11, V561, 0x5e83b463, S8, V564, 0x0, V555, V566, V555, S2, V561, V568]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S11, V561, 0x5e83b463, S8, V564, 0x0, V555, V566, V555, S2, V561, V568]

================================

Block 0x6ca
[0x6ca:0x6d4]
---
Predecessors: [0x61d]
Successors: [0x6d5, 0x6de]
---
0x6ca JUMPDEST
0x6cb POP
0x6cc GAS
0x6cd CALL
0x6ce ISZERO
0x6cf DUP1
0x6d0 ISZERO
0x6d1 PUSH2 0x6de
0x6d4 JUMPI
---
0x6ca: JUMPDEST 
0x6cc: V572 = GAS
0x6cd: V573 = CALL V572 V561 S2 V555 V566 V555 0x0
0x6ce: V574 = ISZERO V573
0x6d0: V575 = ISZERO V574
0x6d1: V576 = 0x6de
0x6d4: JUMPI 0x6de V575
---
Entry stack: [V11, 0x77, S11, V561, 0x5e83b463, S8, V564, 0x0, V555, V566, V555, S2, V561, V568]
Stack pops: 7
Stack additions: [V574]
Exit stack: [V11, 0x77, S11, V561, 0x5e83b463, S8, V564, V574]

================================

Block 0x6d5
[0x6d5:0x6dd]
---
Predecessors: [0x6ca]
Successors: []
---
0x6d5 RETURNDATASIZE
0x6d6 PUSH1 0x0
0x6d8 DUP1
0x6d9 RETURNDATACOPY
0x6da RETURNDATASIZE
0x6db PUSH1 0x0
0x6dd REVERT
---
0x6d5: V577 = RETURNDATASIZE
0x6d6: V578 = 0x0
0x6d9: RETURNDATACOPY 0x0 0x0 V577
0x6da: V579 = RETURNDATASIZE
0x6db: V580 = 0x0
0x6dd: REVERT 0x0 V579
---
Entry stack: [V11, 0x77, S5, V561, 0x5e83b463, S2, V564, V574]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S5, V561, 0x5e83b463, S2, V564, V574]

================================

Block 0x6de
[0x6de:0x6e5]
---
Predecessors: [0x6ca]
Successors: [0x77]
---
0x6de JUMPDEST
0x6df POP
0x6e0 POP
0x6e1 POP
0x6e2 POP
0x6e3 POP
0x6e4 POP
0x6e5 JUMP
---
0x6de: JUMPDEST 
0x6e5: JUMP 0x77
---
Entry stack: [V11, 0x77, S5, V561, 0x5e83b463, S2, V564, V574]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e6
[0x6e6:0x6f8]
---
Predecessors: [0xd5]
Successors: [0x6f9, 0x74a]
---
0x6e6 JUMPDEST
0x6e7 PUSH1 0x2
0x6e9 SLOAD
0x6ea PUSH1 0x1
0x6ec PUSH1 0xa0
0x6ee PUSH1 0x2
0x6f0 EXP
0x6f1 SUB
0x6f2 AND
0x6f3 CALLER
0x6f4 EQ
0x6f5 PUSH2 0x74a
0x6f8 JUMPI
---
0x6e6: JUMPDEST 
0x6e7: V581 = 0x2
0x6e9: V582 = S[0x2]
0x6ea: V583 = 0x1
0x6ec: V584 = 0xa0
0x6ee: V585 = 0x2
0x6f0: V586 = EXP 0x2 0xa0
0x6f1: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f2: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x6f3: V589 = CALLER
0x6f4: V590 = EQ V589 V588
0x6f5: V591 = 0x74a
0x6f8: JUMPI 0x74a V590
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x6f9
[0x6f9:0x749]
---
Predecessors: [0x6e6]
Successors: []
---
0x6f9 PUSH1 0x40
0x6fb DUP1
0x6fc MLOAD
0x6fd PUSH1 0xe5
0x6ff PUSH1 0x2
0x701 EXP
0x702 PUSH3 0x461bcd
0x706 MUL
0x707 DUP2
0x708 MSTORE
0x709 PUSH1 0x20
0x70b PUSH1 0x4
0x70d DUP3
0x70e ADD
0x70f MSTORE
0x710 PUSH1 0x26
0x712 PUSH1 0x24
0x714 DUP3
0x715 ADD
0x716 MSTORE
0x717 PUSH1 0x0
0x719 DUP1
0x71a MLOAD
0x71b PUSH1 0x20
0x71d PUSH2 0xb45
0x720 DUP4
0x721 CODECOPY
0x722 DUP2
0x723 MLOAD
0x724 SWAP2
0x725 MSTORE
0x726 PUSH1 0x44
0x728 DUP3
0x729 ADD
0x72a MSTORE
0x72b PUSH1 0x0
0x72d DUP1
0x72e MLOAD
0x72f PUSH1 0x20
0x731 PUSH2 0xb25
0x734 DUP4
0x735 CODECOPY
0x736 DUP2
0x737 MLOAD
0x738 SWAP2
0x739 MSTORE
0x73a PUSH1 0x64
0x73c DUP3
0x73d ADD
0x73e MSTORE
0x73f SWAP1
0x740 MLOAD
0x741 SWAP1
0x742 DUP2
0x743 SWAP1
0x744 SUB
0x745 PUSH1 0x84
0x747 ADD
0x748 SWAP1
0x749 REVERT
---
0x6f9: V592 = 0x40
0x6fc: V593 = M[0x40]
0x6fd: V594 = 0xe5
0x6ff: V595 = 0x2
0x701: V596 = EXP 0x2 0xe5
0x702: V597 = 0x461bcd
0x706: V598 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x708: M[V593] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x709: V599 = 0x20
0x70b: V600 = 0x4
0x70e: V601 = ADD V593 0x4
0x70f: M[V601] = 0x20
0x710: V602 = 0x26
0x712: V603 = 0x24
0x715: V604 = ADD V593 0x24
0x716: M[V604] = 0x26
0x717: V605 = 0x0
0x71a: V606 = M[0x0]
0x71b: V607 = 0x20
0x71d: V608 = 0xb45
0x721: CODECOPY 0x0 0xb45 0x20
0x723: V609 = M[0x0]
0x725: M[0x0] = V606
0x726: V610 = 0x44
0x729: V611 = ADD V593 0x44
0x72a: M[V611] = V609
0x72b: V612 = 0x0
0x72e: V613 = M[0x0]
0x72f: V614 = 0x20
0x731: V615 = 0xb25
0x735: CODECOPY 0x0 0xb25 0x20
0x737: V616 = M[0x0]
0x739: M[0x0] = V613
0x73a: V617 = 0x64
0x73d: V618 = ADD V593 0x64
0x73e: M[V618] = V616
0x740: V619 = M[0x40]
0x744: V620 = SUB V593 V619
0x745: V621 = 0x84
0x747: V622 = ADD 0x84 V620
0x749: REVERT V619 V622
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x74a
[0x74a:0x757]
---
Predecessors: [0x6e6]
Successors: []
---
0x74a JUMPDEST
0x74b PUSH1 0x2
0x74d SLOAD
0x74e PUSH1 0x1
0x750 PUSH1 0xa0
0x752 PUSH1 0x2
0x754 EXP
0x755 SUB
0x756 AND
0x757 SELFDESTRUCT
---
0x74a: JUMPDEST 
0x74b: V623 = 0x2
0x74d: V624 = S[0x2]
0x74e: V625 = 0x1
0x750: V626 = 0xa0
0x752: V627 = 0x2
0x754: V628 = EXP 0x2 0xa0
0x755: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x756: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x757: SELFDESTRUCT V630
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x758
[0x758:0x76d]
---
Predecessors: [0xea]
Successors: [0x76e, 0x7bf]
---
0x758 JUMPDEST
0x759 PUSH1 0x2
0x75b SLOAD
0x75c PUSH1 0x60
0x75e SWAP1
0x75f PUSH1 0x1
0x761 PUSH1 0xa0
0x763 PUSH1 0x2
0x765 EXP
0x766 SUB
0x767 AND
0x768 CALLER
0x769 EQ
0x76a PUSH2 0x7bf
0x76d JUMPI
---
0x758: JUMPDEST 
0x759: V631 = 0x2
0x75b: V632 = S[0x2]
0x75c: V633 = 0x60
0x75f: V634 = 0x1
0x761: V635 = 0xa0
0x763: V636 = 0x2
0x765: V637 = EXP 0x2 0xa0
0x766: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x767: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x768: V640 = CALLER
0x769: V641 = EQ V640 V639
0x76a: V642 = 0x7bf
0x76d: JUMPI 0x7bf V641
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V11, 0x77, 0x60]

================================

Block 0x76e
[0x76e:0x7be]
---
Predecessors: [0x758]
Successors: []
---
0x76e PUSH1 0x40
0x770 DUP1
0x771 MLOAD
0x772 PUSH1 0xe5
0x774 PUSH1 0x2
0x776 EXP
0x777 PUSH3 0x461bcd
0x77b MUL
0x77c DUP2
0x77d MSTORE
0x77e PUSH1 0x20
0x780 PUSH1 0x4
0x782 DUP3
0x783 ADD
0x784 MSTORE
0x785 PUSH1 0x26
0x787 PUSH1 0x24
0x789 DUP3
0x78a ADD
0x78b MSTORE
0x78c PUSH1 0x0
0x78e DUP1
0x78f MLOAD
0x790 PUSH1 0x20
0x792 PUSH2 0xb45
0x795 DUP4
0x796 CODECOPY
0x797 DUP2
0x798 MLOAD
0x799 SWAP2
0x79a MSTORE
0x79b PUSH1 0x44
0x79d DUP3
0x79e ADD
0x79f MSTORE
0x7a0 PUSH1 0x0
0x7a2 DUP1
0x7a3 MLOAD
0x7a4 PUSH1 0x20
0x7a6 PUSH2 0xb25
0x7a9 DUP4
0x7aa CODECOPY
0x7ab DUP2
0x7ac MLOAD
0x7ad SWAP2
0x7ae MSTORE
0x7af PUSH1 0x64
0x7b1 DUP3
0x7b2 ADD
0x7b3 MSTORE
0x7b4 SWAP1
0x7b5 MLOAD
0x7b6 SWAP1
0x7b7 DUP2
0x7b8 SWAP1
0x7b9 SUB
0x7ba PUSH1 0x84
0x7bc ADD
0x7bd SWAP1
0x7be REVERT
---
0x76e: V643 = 0x40
0x771: V644 = M[0x40]
0x772: V645 = 0xe5
0x774: V646 = 0x2
0x776: V647 = EXP 0x2 0xe5
0x777: V648 = 0x461bcd
0x77b: V649 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x77d: M[V644] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x77e: V650 = 0x20
0x780: V651 = 0x4
0x783: V652 = ADD V644 0x4
0x784: M[V652] = 0x20
0x785: V653 = 0x26
0x787: V654 = 0x24
0x78a: V655 = ADD V644 0x24
0x78b: M[V655] = 0x26
0x78c: V656 = 0x0
0x78f: V657 = M[0x0]
0x790: V658 = 0x20
0x792: V659 = 0xb45
0x796: CODECOPY 0x0 0xb45 0x20
0x798: V660 = M[0x0]
0x79a: M[0x0] = V657
0x79b: V661 = 0x44
0x79e: V662 = ADD V644 0x44
0x79f: M[V662] = V660
0x7a0: V663 = 0x0
0x7a3: V664 = M[0x0]
0x7a4: V665 = 0x20
0x7a6: V666 = 0xb25
0x7aa: CODECOPY 0x0 0xb25 0x20
0x7ac: V667 = M[0x0]
0x7ae: M[0x0] = V664
0x7af: V668 = 0x64
0x7b2: V669 = ADD V644 0x64
0x7b3: M[V669] = V667
0x7b5: V670 = M[0x40]
0x7b9: V671 = SUB V644 V670
0x7ba: V672 = 0x84
0x7bc: V673 = ADD 0x84 V671
0x7be: REVERT V670 V673
---
Entry stack: [V11, 0x77, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x60]

================================

Block 0x7bf
[0x7bf:0x7d5]
---
Predecessors: [0x758]
Successors: [0x7d6, 0x7da]
---
0x7bf JUMPDEST
0x7c0 PUSH1 0x8
0x7c2 SLOAD
0x7c3 PUSH1 0xfa
0x7c5 PUSH5 0xffffffffff
0x7cb SWAP2
0x7cc DUP3
0x7cd AND
0x7ce ADD
0x7cf AND
0x7d0 NUMBER
0x7d1 GT
0x7d2 PUSH2 0x7da
0x7d5 JUMPI
---
0x7bf: JUMPDEST 
0x7c0: V674 = 0x8
0x7c2: V675 = S[0x8]
0x7c3: V676 = 0xfa
0x7c5: V677 = 0xffffffffff
0x7cd: V678 = AND 0xffffffffff V675
0x7ce: V679 = ADD V678 0xfa
0x7cf: V680 = AND V679 0xffffffffff
0x7d0: V681 = NUMBER
0x7d1: V682 = GT V681 V680
0x7d2: V683 = 0x7da
0x7d5: JUMPI 0x7da V682
---
Entry stack: [V11, 0x77, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x60]

================================

Block 0x7d6
[0x7d6:0x7d9]
---
Predecessors: [0x7bf]
Successors: []
---
0x7d6 PUSH1 0x0
0x7d8 DUP1
0x7d9 REVERT
---
0x7d6: V684 = 0x0
0x7d9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x60]

================================

Block 0x7da
[0x7da:0x839]
---
Predecessors: [0x7bf]
Successors: [0x83a, 0x83e]
---
0x7da JUMPDEST
0x7db PUSH1 0x0
0x7dd DUP1
0x7de SLOAD
0x7df PUSH1 0x4
0x7e1 DUP1
0x7e2 SLOAD
0x7e3 PUSH1 0x40
0x7e5 DUP1
0x7e6 MLOAD
0x7e7 PUSH32 0xe1fdb4b400000000000000000000000000000000000000000000000000000000
0x808 DUP2
0x809 MSTORE
0x80a SWAP3
0x80b DUP4
0x80c ADD
0x80d SWAP2
0x80e SWAP1
0x80f SWAP2
0x810 MSTORE
0x811 MLOAD
0x812 PUSH1 0x1
0x814 PUSH1 0xa0
0x816 PUSH1 0x2
0x818 EXP
0x819 SUB
0x81a SWAP1
0x81b SWAP3
0x81c AND
0x81d SWAP3
0x81e PUSH4 0xe1fdb4b4
0x823 SWAP3
0x824 PUSH1 0x24
0x826 DUP1
0x827 DUP5
0x828 ADD
0x829 SWAP4
0x82a DUP3
0x82b SWAP1
0x82c SUB
0x82d ADD
0x82e DUP2
0x82f DUP4
0x830 DUP8
0x831 DUP1
0x832 EXTCODESIZE
0x833 ISZERO
0x834 DUP1
0x835 ISZERO
0x836 PUSH2 0x83e
0x839 JUMPI
---
0x7da: JUMPDEST 
0x7db: V685 = 0x0
0x7de: V686 = S[0x0]
0x7df: V687 = 0x4
0x7e2: V688 = S[0x4]
0x7e3: V689 = 0x40
0x7e6: V690 = M[0x40]
0x7e7: V691 = 0xe1fdb4b400000000000000000000000000000000000000000000000000000000
0x809: M[V690] = 0xe1fdb4b400000000000000000000000000000000000000000000000000000000
0x80c: V692 = ADD V690 0x4
0x810: M[V692] = V688
0x811: V693 = M[0x40]
0x812: V694 = 0x1
0x814: V695 = 0xa0
0x816: V696 = 0x2
0x818: V697 = EXP 0x2 0xa0
0x819: V698 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81c: V699 = AND V686 0xffffffffffffffffffffffffffffffffffffffff
0x81e: V700 = 0xe1fdb4b4
0x824: V701 = 0x24
0x828: V702 = ADD V690 0x24
0x82c: V703 = SUB V690 V693
0x82d: V704 = ADD V703 0x24
0x832: V705 = EXTCODESIZE V699
0x833: V706 = ISZERO V705
0x835: V707 = ISZERO V706
0x836: V708 = 0x83e
0x839: JUMPI 0x83e V707
---
Entry stack: [V11, 0x77, 0x60]
Stack pops: 0
Stack additions: [V699, 0xe1fdb4b4, V702, 0x0, V693, V704, V693, 0x0, V699, V706]
Exit stack: [V11, 0x77, 0x60, V699, 0xe1fdb4b4, V702, 0x0, V693, V704, V693, 0x0, V699, V706]

================================

Block 0x83a
[0x83a:0x83d]
---
Predecessors: [0x7da]
Successors: []
---
0x83a PUSH1 0x0
0x83c DUP1
0x83d REVERT
---
0x83a: V709 = 0x0
0x83d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, 0x60, V699, 0xe1fdb4b4, V702, 0x0, V693, V704, V693, 0x0, V699, V706]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x60, V699, 0xe1fdb4b4, V702, 0x0, V693, V704, V693, 0x0, V699, V706]

================================

Block 0x83e
[0x83e:0x848]
---
Predecessors: [0x7da]
Successors: [0x849, 0x852]
---
0x83e JUMPDEST
0x83f POP
0x840 GAS
0x841 CALL
0x842 ISZERO
0x843 DUP1
0x844 ISZERO
0x845 PUSH2 0x852
0x848 JUMPI
---
0x83e: JUMPDEST 
0x840: V710 = GAS
0x841: V711 = CALL V710 V699 0x0 V693 V704 V693 0x0
0x842: V712 = ISZERO V711
0x844: V713 = ISZERO V712
0x845: V714 = 0x852
0x848: JUMPI 0x852 V713
---
Entry stack: [V11, 0x77, 0x60, V699, 0xe1fdb4b4, V702, 0x0, V693, V704, V693, 0x0, V699, V706]
Stack pops: 7
Stack additions: [V712]
Exit stack: [V11, 0x77, 0x60, V699, 0xe1fdb4b4, V702, V712]

================================

Block 0x849
[0x849:0x851]
---
Predecessors: [0x83e]
Successors: []
---
0x849 RETURNDATASIZE
0x84a PUSH1 0x0
0x84c DUP1
0x84d RETURNDATACOPY
0x84e RETURNDATASIZE
0x84f PUSH1 0x0
0x851 REVERT
---
0x849: V715 = RETURNDATASIZE
0x84a: V716 = 0x0
0x84d: RETURNDATACOPY 0x0 0x0 V715
0x84e: V717 = RETURNDATASIZE
0x84f: V718 = 0x0
0x851: REVERT 0x0 V717
---
Entry stack: [V11, 0x77, 0x60, V699, 0xe1fdb4b4, V702, V712]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x60, V699, 0xe1fdb4b4, V702, V712]

================================

Block 0x852
[0x852:0x887]
---
Predecessors: [0x83e]
Successors: [0x888, 0x889]
---
0x852 JUMPDEST
0x853 POP
0x854 POP
0x855 PUSH1 0x40
0x857 DUP1
0x858 MLOAD
0x859 PUSH1 0x1
0x85b DUP1
0x85c DUP3
0x85d MSTORE
0x85e DUP2
0x85f DUP4
0x860 ADD
0x861 SWAP1
0x862 SWAP3
0x863 MSTORE
0x864 SWAP3
0x865 POP
0x866 SWAP1
0x867 POP
0x868 PUSH1 0x20
0x86a DUP1
0x86b DUP4
0x86c ADD
0x86d SWAP1
0x86e DUP1
0x86f CODESIZE
0x870 DUP4
0x871 CODECOPY
0x872 ADD
0x873 SWAP1
0x874 POP
0x875 POP
0x876 SWAP1
0x877 POP
0x878 PUSH1 0x4
0x87a SLOAD
0x87b DUP2
0x87c PUSH1 0x0
0x87e DUP2
0x87f MLOAD
0x880 DUP2
0x881 LT
0x882 ISZERO
0x883 ISZERO
0x884 PUSH2 0x889
0x887 JUMPI
---
0x852: JUMPDEST 
0x855: V719 = 0x40
0x858: V720 = M[0x40]
0x859: V721 = 0x1
0x85d: M[V720] = 0x1
0x860: V722 = ADD 0x40 V720
0x863: M[0x40] = V722
0x868: V723 = 0x20
0x86c: V724 = ADD V720 0x20
0x86f: V725 = CODESIZE
0x871: CODECOPY V724 V725 0x20
0x872: V726 = ADD 0x20 V724
0x878: V727 = 0x4
0x87a: V728 = S[0x4]
0x87c: V729 = 0x0
0x87f: V730 = M[V720]
0x881: V731 = LT 0x0 V730
0x882: V732 = ISZERO V731
0x883: V733 = ISZERO V732
0x884: V734 = 0x889
0x887: JUMPI 0x889 V733
---
Entry stack: [V11, 0x77, 0x60, V699, 0xe1fdb4b4, V702, V712]
Stack pops: 5
Stack additions: [V720, V728, V720, 0x0]
Exit stack: [V11, 0x77, V720, V728, V720, 0x0]

================================

Block 0x888
[0x888:0x888]
---
Predecessors: [0x852]
Successors: []
---
0x888 INVALID
---
0x888: INVALID 
---
Entry stack: [V11, 0x77, V720, V728, V720, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V720, V728, V720, 0x0]

================================

Block 0x889
[0x889:0x8fc]
---
Predecessors: [0x852]
Successors: [0x8fd]
---
0x889 JUMPDEST
0x88a PUSH1 0x20
0x88c SWAP1
0x88d DUP2
0x88e MUL
0x88f SWAP1
0x890 SWAP2
0x891 ADD
0x892 DUP2
0x893 ADD
0x894 SWAP2
0x895 SWAP1
0x896 SWAP2
0x897 MSTORE
0x898 PUSH1 0x0
0x89a DUP1
0x89b SLOAD
0x89c PUSH1 0x40
0x89e MLOAD
0x89f PUSH32 0xef11554200000000000000000000000000000000000000000000000000000000
0x8c0 DUP2
0x8c1 MSTORE
0x8c2 PUSH1 0x4
0x8c4 DUP2
0x8c5 ADD
0x8c6 DUP5
0x8c7 DUP2
0x8c8 MSTORE
0x8c9 DUP6
0x8ca MLOAD
0x8cb PUSH1 0x24
0x8cd DUP4
0x8ce ADD
0x8cf MSTORE
0x8d0 DUP6
0x8d1 MLOAD
0x8d2 PUSH1 0x1
0x8d4 PUSH1 0xa0
0x8d6 PUSH1 0x2
0x8d8 EXP
0x8d9 SUB
0x8da SWAP1
0x8db SWAP4
0x8dc AND
0x8dd SWAP5
0x8de PUSH4 0xef115542
0x8e3 SWAP5
0x8e4 DUP8
0x8e5 SWAP5
0x8e6 SWAP3
0x8e7 SWAP4
0x8e8 DUP5
0x8e9 SWAP4
0x8ea PUSH1 0x44
0x8ec SWAP1
0x8ed SWAP2
0x8ee ADD
0x8ef SWAP3
0x8f0 DUP7
0x8f1 DUP2
0x8f2 ADD
0x8f3 SWAP3
0x8f4 SWAP2
0x8f5 MUL
0x8f6 SWAP1
0x8f7 DUP2
0x8f8 SWAP1
0x8f9 DUP5
0x8fa SWAP1
0x8fb DUP5
0x8fc SWAP1
---
0x889: JUMPDEST 
0x88a: V735 = 0x20
0x88e: V736 = MUL 0x20 0x0
0x891: V737 = ADD V720 0x0
0x893: V738 = ADD 0x20 V737
0x897: M[V738] = V728
0x898: V739 = 0x0
0x89b: V740 = S[0x0]
0x89c: V741 = 0x40
0x89e: V742 = M[0x40]
0x89f: V743 = 0xef11554200000000000000000000000000000000000000000000000000000000
0x8c1: M[V742] = 0xef11554200000000000000000000000000000000000000000000000000000000
0x8c2: V744 = 0x4
0x8c5: V745 = ADD V742 0x4
0x8c8: M[V745] = 0x20
0x8ca: V746 = M[V720]
0x8cb: V747 = 0x24
0x8ce: V748 = ADD V742 0x24
0x8cf: M[V748] = V746
0x8d1: V749 = M[V720]
0x8d2: V750 = 0x1
0x8d4: V751 = 0xa0
0x8d6: V752 = 0x2
0x8d8: V753 = EXP 0x2 0xa0
0x8d9: V754 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8dc: V755 = AND V740 0xffffffffffffffffffffffffffffffffffffffff
0x8de: V756 = 0xef115542
0x8ea: V757 = 0x44
0x8ee: V758 = ADD V742 0x44
0x8f2: V759 = ADD 0x20 V720
0x8f5: V760 = MUL V749 0x20
---
Entry stack: [V11, 0x77, V720, V728, V720, 0x0]
Stack pops: 4
Stack additions: [S3, V755, 0xef115542, S3, V745, V745, V758, V759, V760, V760, V758, V759, 0x0]
Exit stack: [V11, 0x77, V720, V755, 0xef115542, V720, V745, V745, V758, V759, V760, V760, V758, V759, 0x0]

================================

Block 0x8fd
[0x8fd:0x905]
---
Predecessors: [0x889, 0x906]
Successors: [0x906, 0x915]
---
0x8fd JUMPDEST
0x8fe DUP4
0x8ff DUP2
0x900 LT
0x901 ISZERO
0x902 PUSH2 0x915
0x905 JUMPI
---
0x8fd: JUMPDEST 
0x900: V761 = LT S0 V760
0x901: V762 = ISZERO V761
0x902: V763 = 0x915
0x905: JUMPI 0x915 V762
---
Entry stack: [V11, 0x77, V720, V755, 0xef115542, V720, V745, V745, V758, V759, V760, V760, V758, V759, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x77, V720, V755, 0xef115542, V720, V745, V745, V758, V759, V760, V760, V758, V759, S0]

================================

Block 0x906
[0x906:0x914]
---
Predecessors: [0x8fd]
Successors: [0x8fd]
---
0x906 DUP2
0x907 DUP2
0x908 ADD
0x909 MLOAD
0x90a DUP4
0x90b DUP3
0x90c ADD
0x90d MSTORE
0x90e PUSH1 0x20
0x910 ADD
0x911 PUSH2 0x8fd
0x914 JUMP
---
0x908: V764 = ADD S0 V759
0x909: V765 = M[V764]
0x90c: V766 = ADD S0 V758
0x90d: M[V766] = V765
0x90e: V767 = 0x20
0x910: V768 = ADD 0x20 S0
0x911: V769 = 0x8fd
0x914: JUMP 0x8fd
---
Entry stack: [V11, 0x77, V720, V755, 0xef115542, V720, V745, V745, V758, V759, V760, V760, V758, V759, S0]
Stack pops: 3
Stack additions: [S2, S1, V768]
Exit stack: [V11, 0x77, V720, V755, 0xef115542, V720, V745, V745, V758, V759, V760, V760, V758, V759, V768]

================================

Block 0x915
[0x915:0x935]
---
Predecessors: [0x8fd]
Successors: [0x936, 0x93a]
---
0x915 JUMPDEST
0x916 POP
0x917 POP
0x918 POP
0x919 POP
0x91a SWAP1
0x91b POP
0x91c ADD
0x91d SWAP3
0x91e POP
0x91f POP
0x920 POP
0x921 PUSH1 0x0
0x923 PUSH1 0x40
0x925 MLOAD
0x926 DUP1
0x927 DUP4
0x928 SUB
0x929 DUP2
0x92a PUSH1 0x0
0x92c DUP8
0x92d DUP1
0x92e EXTCODESIZE
0x92f ISZERO
0x930 DUP1
0x931 ISZERO
0x932 PUSH2 0x93a
0x935 JUMPI
---
0x915: JUMPDEST 
0x91c: V770 = ADD V760 V758
0x921: V771 = 0x0
0x923: V772 = 0x40
0x925: V773 = M[0x40]
0x928: V774 = SUB V770 V773
0x92a: V775 = 0x0
0x92e: V776 = EXTCODESIZE V755
0x92f: V777 = ISZERO V776
0x931: V778 = ISZERO V777
0x932: V779 = 0x93a
0x935: JUMPI 0x93a V778
---
Entry stack: [V11, 0x77, V720, V755, 0xef115542, V720, V745, V745, V758, V759, V760, V760, V758, V759, S0]
Stack pops: 12
Stack additions: [S11, S10, V770, 0x0, V773, V774, V773, 0x0, S11, V777]
Exit stack: [V11, 0x77, V720, V755, 0xef115542, V770, 0x0, V773, V774, V773, 0x0, V755, V777]

================================

Block 0x936
[0x936:0x939]
---
Predecessors: [0x915]
Successors: []
---
0x936 PUSH1 0x0
0x938 DUP1
0x939 REVERT
---
0x936: V780 = 0x0
0x939: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V720, V755, 0xef115542, V770, 0x0, V773, V774, V773, 0x0, V755, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V720, V755, 0xef115542, V770, 0x0, V773, V774, V773, 0x0, V755, V777]

================================

Block 0x93a
[0x93a:0x944]
---
Predecessors: [0x915]
Successors: [0x945, 0x94e]
---
0x93a JUMPDEST
0x93b POP
0x93c GAS
0x93d CALL
0x93e ISZERO
0x93f DUP1
0x940 ISZERO
0x941 PUSH2 0x94e
0x944 JUMPI
---
0x93a: JUMPDEST 
0x93c: V781 = GAS
0x93d: V782 = CALL V781 V755 0x0 V773 V774 V773 0x0
0x93e: V783 = ISZERO V782
0x940: V784 = ISZERO V783
0x941: V785 = 0x94e
0x944: JUMPI 0x94e V784
---
Entry stack: [V11, 0x77, V720, V755, 0xef115542, V770, 0x0, V773, V774, V773, 0x0, V755, V777]
Stack pops: 7
Stack additions: [V783]
Exit stack: [V11, 0x77, V720, V755, 0xef115542, V770, V783]

================================

Block 0x945
[0x945:0x94d]
---
Predecessors: [0x93a]
Successors: []
---
0x945 RETURNDATASIZE
0x946 PUSH1 0x0
0x948 DUP1
0x949 RETURNDATACOPY
0x94a RETURNDATASIZE
0x94b PUSH1 0x0
0x94d REVERT
---
0x945: V786 = RETURNDATASIZE
0x946: V787 = 0x0
0x949: RETURNDATACOPY 0x0 0x0 V786
0x94a: V788 = RETURNDATASIZE
0x94b: V789 = 0x0
0x94d: REVERT 0x0 V788
---
Entry stack: [V11, 0x77, V720, V755, 0xef115542, V770, V783]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V720, V755, 0xef115542, V770, V783]

================================

Block 0x94e
[0x94e:0x954]
---
Predecessors: [0x93a]
Successors: [0x77]
---
0x94e JUMPDEST
0x94f POP
0x950 POP
0x951 POP
0x952 POP
0x953 POP
0x954 JUMP
---
0x94e: JUMPDEST 
0x954: JUMP 0x77
---
Entry stack: [V11, 0x77, V720, V755, 0xef115542, V770, V783]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x955
[0x955:0x96e]
---
Predecessors: [0xff]
Successors: [0x96f, 0x9c0]
---
0x955 JUMPDEST
0x956 PUSH1 0x2
0x958 SLOAD
0x959 PUSH1 0x0
0x95b SWAP1
0x95c DUP2
0x95d SWAP1
0x95e DUP2
0x95f SWAP1
0x960 PUSH1 0x1
0x962 PUSH1 0xa0
0x964 PUSH1 0x2
0x966 EXP
0x967 SUB
0x968 AND
0x969 CALLER
0x96a EQ
0x96b PUSH2 0x9c0
0x96e JUMPI
---
0x955: JUMPDEST 
0x956: V790 = 0x2
0x958: V791 = S[0x2]
0x959: V792 = 0x0
0x960: V793 = 0x1
0x962: V794 = 0xa0
0x964: V795 = 0x2
0x966: V796 = EXP 0x2 0xa0
0x967: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x968: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0x969: V799 = CALLER
0x96a: V800 = EQ V799 V798
0x96b: V801 = 0x9c0
0x96e: JUMPI 0x9c0 V800
---
Entry stack: [V11, 0x108]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x108, 0x0, 0x0, 0x0]

================================

Block 0x96f
[0x96f:0x9bf]
---
Predecessors: [0x955]
Successors: []
---
0x96f PUSH1 0x40
0x971 DUP1
0x972 MLOAD
0x973 PUSH1 0xe5
0x975 PUSH1 0x2
0x977 EXP
0x978 PUSH3 0x461bcd
0x97c MUL
0x97d DUP2
0x97e MSTORE
0x97f PUSH1 0x20
0x981 PUSH1 0x4
0x983 DUP3
0x984 ADD
0x985 MSTORE
0x986 PUSH1 0x26
0x988 PUSH1 0x24
0x98a DUP3
0x98b ADD
0x98c MSTORE
0x98d PUSH1 0x0
0x98f DUP1
0x990 MLOAD
0x991 PUSH1 0x20
0x993 PUSH2 0xb45
0x996 DUP4
0x997 CODECOPY
0x998 DUP2
0x999 MLOAD
0x99a SWAP2
0x99b MSTORE
0x99c PUSH1 0x44
0x99e DUP3
0x99f ADD
0x9a0 MSTORE
0x9a1 PUSH1 0x0
0x9a3 DUP1
0x9a4 MLOAD
0x9a5 PUSH1 0x20
0x9a7 PUSH2 0xb25
0x9aa DUP4
0x9ab CODECOPY
0x9ac DUP2
0x9ad MLOAD
0x9ae SWAP2
0x9af MSTORE
0x9b0 PUSH1 0x64
0x9b2 DUP3
0x9b3 ADD
0x9b4 MSTORE
0x9b5 SWAP1
0x9b6 MLOAD
0x9b7 SWAP1
0x9b8 DUP2
0x9b9 SWAP1
0x9ba SUB
0x9bb PUSH1 0x84
0x9bd ADD
0x9be SWAP1
0x9bf REVERT
---
0x96f: V802 = 0x40
0x972: V803 = M[0x40]
0x973: V804 = 0xe5
0x975: V805 = 0x2
0x977: V806 = EXP 0x2 0xe5
0x978: V807 = 0x461bcd
0x97c: V808 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x97e: M[V803] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x97f: V809 = 0x20
0x981: V810 = 0x4
0x984: V811 = ADD V803 0x4
0x985: M[V811] = 0x20
0x986: V812 = 0x26
0x988: V813 = 0x24
0x98b: V814 = ADD V803 0x24
0x98c: M[V814] = 0x26
0x98d: V815 = 0x0
0x990: V816 = M[0x0]
0x991: V817 = 0x20
0x993: V818 = 0xb45
0x997: CODECOPY 0x0 0xb45 0x20
0x999: V819 = M[0x0]
0x99b: M[0x0] = V816
0x99c: V820 = 0x44
0x99f: V821 = ADD V803 0x44
0x9a0: M[V821] = V819
0x9a1: V822 = 0x0
0x9a4: V823 = M[0x0]
0x9a5: V824 = 0x20
0x9a7: V825 = 0xb25
0x9ab: CODECOPY 0x0 0xb25 0x20
0x9ad: V826 = M[0x0]
0x9af: M[0x0] = V823
0x9b0: V827 = 0x64
0x9b3: V828 = ADD V803 0x64
0x9b4: M[V828] = V826
0x9b6: V829 = M[0x40]
0x9ba: V830 = SUB V803 V829
0x9bb: V831 = 0x84
0x9bd: V832 = ADD 0x84 V830
0x9bf: REVERT V829 V832
---
Entry stack: [V11, 0x108, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, 0x0, 0x0, 0x0]

================================

Block 0x9c0
[0x9c0:0xa01]
---
Predecessors: [0x955]
Successors: [0xa02]
---
0x9c0 JUMPDEST
0x9c1 PUSH1 0x7
0x9c3 SLOAD
0x9c4 PUSH1 0x8
0x9c6 SLOAD
0x9c7 PUSH1 0x40
0x9c9 DUP1
0x9ca MLOAD
0x9cb PUSH1 0x20
0x9cd DUP1
0x9ce DUP3
0x9cf ADD
0x9d0 SWAP5
0x9d1 SWAP1
0x9d2 SWAP5
0x9d3 MSTORE
0x9d4 PUSH5 0xffffffffff
0x9da SWAP1
0x9db SWAP3
0x9dc AND
0x9dd BLOCKHASH
0x9de DUP3
0x9df DUP3
0x9e0 ADD
0x9e1 MSTORE
0x9e2 DUP1
0x9e3 MLOAD
0x9e4 DUP1
0x9e5 DUP4
0x9e6 SUB
0x9e7 DUP3
0x9e8 ADD
0x9e9 DUP2
0x9ea MSTORE
0x9eb PUSH1 0x60
0x9ed SWAP1
0x9ee SWAP3
0x9ef ADD
0x9f0 SWAP1
0x9f1 DUP2
0x9f2 SWAP1
0x9f3 MSTORE
0x9f4 DUP2
0x9f5 MLOAD
0x9f6 SWAP2
0x9f7 SWAP3
0x9f8 SWAP1
0x9f9 SWAP2
0x9fa DUP3
0x9fb SWAP2
0x9fc DUP5
0x9fd ADD
0x9fe SWAP1
0x9ff DUP1
0xa00 DUP4
0xa01 DUP4
---
0x9c0: JUMPDEST 
0x9c1: V833 = 0x7
0x9c3: V834 = S[0x7]
0x9c4: V835 = 0x8
0x9c6: V836 = S[0x8]
0x9c7: V837 = 0x40
0x9ca: V838 = M[0x40]
0x9cb: V839 = 0x20
0x9cf: V840 = ADD V838 0x20
0x9d3: M[V840] = V834
0x9d4: V841 = 0xffffffffff
0x9dc: V842 = AND V836 0xffffffffff
0x9dd: V843 = BLOCKHASH V842
0x9e0: V844 = ADD 0x40 V838
0x9e1: M[V844] = V843
0x9e3: V845 = M[0x40]
0x9e6: V846 = SUB V838 V845
0x9e8: V847 = ADD 0x40 V846
0x9ea: M[V845] = V847
0x9eb: V848 = 0x60
0x9ef: V849 = ADD V838 0x60
0x9f3: M[0x40] = V849
0x9f5: V850 = M[V845]
0x9fd: V851 = ADD V845 0x20
---
Entry stack: [V11, 0x108, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V845, V849, V849, V851, V850, V850, V849, V851]
Exit stack: [V11, 0x108, 0x0, 0x0, 0x0, V845, V849, V849, V851, V850, V850, V849, V851]

================================

Block 0xa02
[0xa02:0xa0a]
---
Predecessors: [0x9c0, 0xa0b]
Successors: [0xa0b, 0xa21]
---
0xa02 JUMPDEST
0xa03 PUSH1 0x20
0xa05 DUP4
0xa06 LT
0xa07 PUSH2 0xa21
0xa0a JUMPI
---
0xa02: JUMPDEST 
0xa03: V852 = 0x20
0xa06: V853 = LT S2 0x20
0xa07: V854 = 0xa21
0xa0a: JUMPI 0xa21 V853
---
Entry stack: [V11, 0x108, 0x0, 0x0, 0x0, V845, V849, V849, V851, V850, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x108, 0x0, 0x0, 0x0, V845, V849, V849, V851, V850, S2, S1, S0]

================================

Block 0xa0b
[0xa0b:0xa20]
---
Predecessors: [0xa02]
Successors: [0xa02]
---
0xa0b DUP1
0xa0c MLOAD
0xa0d DUP3
0xa0e MSTORE
0xa0f PUSH1 0x1f
0xa11 NOT
0xa12 SWAP1
0xa13 SWAP3
0xa14 ADD
0xa15 SWAP2
0xa16 PUSH1 0x20
0xa18 SWAP2
0xa19 DUP3
0xa1a ADD
0xa1b SWAP2
0xa1c ADD
0xa1d PUSH2 0xa02
0xa20 JUMP
---
0xa0c: V855 = M[S0]
0xa0e: M[S1] = V855
0xa0f: V856 = 0x1f
0xa11: V857 = NOT 0x1f
0xa14: V858 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xa16: V859 = 0x20
0xa1a: V860 = ADD 0x20 S1
0xa1c: V861 = ADD 0x20 S0
0xa1d: V862 = 0xa02
0xa20: JUMP 0xa02
---
Entry stack: [V11, 0x108, 0x0, 0x0, 0x0, V845, V849, V849, V851, V850, S2, S1, S0]
Stack pops: 3
Stack additions: [V858, V860, V861]
Exit stack: [V11, 0x108, 0x0, 0x0, 0x0, V845, V849, V849, V851, V850, V858, V860, V861]

================================

Block 0xa21
[0xa21:0xa59]
---
Predecessors: [0xa02]
Successors: [0xa5a]
---
0xa21 JUMPDEST
0xa22 MLOAD
0xa23 DUP2
0xa24 MLOAD
0xa25 PUSH1 0x20
0xa27 SWAP4
0xa28 SWAP1
0xa29 SWAP4
0xa2a SUB
0xa2b PUSH2 0x100
0xa2e EXP
0xa2f PUSH1 0x0
0xa31 NOT
0xa32 ADD
0xa33 DUP1
0xa34 NOT
0xa35 SWAP1
0xa36 SWAP2
0xa37 AND
0xa38 SWAP3
0xa39 AND
0xa3a SWAP2
0xa3b SWAP1
0xa3c SWAP2
0xa3d OR
0xa3e SWAP1
0xa3f MSTORE
0xa40 PUSH1 0x40
0xa42 MLOAD
0xa43 SWAP3
0xa44 ADD
0xa45 DUP3
0xa46 SWAP1
0xa47 SUB
0xa48 SWAP1
0xa49 SWAP2
0xa4a SHA3
0xa4b SWAP5
0xa4c POP
0xa4d PUSH1 0x64
0xa4f SWAP3
0xa50 POP
0xa51 DUP5
0xa52 SWAP2
0xa53 POP
0xa54 PUSH2 0xa5a
0xa57 SWAP1
0xa58 POP
0xa59 JUMP
---
0xa21: JUMPDEST 
0xa22: V863 = M[S0]
0xa24: V864 = M[S1]
0xa25: V865 = 0x20
0xa2a: V866 = SUB 0x20 S2
0xa2b: V867 = 0x100
0xa2e: V868 = EXP 0x100 V866
0xa2f: V869 = 0x0
0xa31: V870 = NOT 0x0
0xa32: V871 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V868
0xa34: V872 = NOT V871
0xa37: V873 = AND V863 V872
0xa39: V874 = AND V864 V871
0xa3d: V875 = OR V874 V873
0xa3f: M[S1] = V875
0xa40: V876 = 0x40
0xa42: V877 = M[0x40]
0xa44: V878 = ADD V849 V850
0xa47: V879 = SUB V878 V877
0xa4a: V880 = SHA3 V877 V879
0xa4d: V881 = 0x64
0xa54: V882 = 0xa5a
0xa59: JUMP 0xa5a
---
Entry stack: [V11, 0x108, 0x0, 0x0, 0x0, V845, V849, V849, V851, V850, S2, S1, S0]
Stack pops: 10
Stack additions: [V880, S8, 0x64, V880]
Exit stack: [V11, 0x108, 0x0, V880, 0x0, 0x64, V880]

================================

Block 0xa5a
[0xa5a:0xa65]
---
Predecessors: [0xa21]
Successors: [0xa66, 0xa6e]
---
0xa5a JUMPDEST
0xa5b MOD
0xa5c SWAP1
0xa5d POP
0xa5e PUSH1 0x32
0xa60 DUP2
0xa61 LT
0xa62 PUSH2 0xa6e
0xa65 JUMPI
---
0xa5a: JUMPDEST 
0xa5b: V883 = MOD V880 0x64
0xa5e: V884 = 0x32
0xa61: V885 = LT V883 0x32
0xa62: V886 = 0xa6e
0xa65: JUMPI 0xa6e V885
---
Entry stack: [V11, 0x108, 0x0, V880, 0x0, 0x64, V880]
Stack pops: 3
Stack additions: [V883]
Exit stack: [V11, 0x108, 0x0, V880, V883]

================================

Block 0xa66
[0xa66:0xa6d]
---
Predecessors: [0xa5a]
Successors: [0xaf6]
---
0xa66 PUSH1 0x0
0xa68 SWAP3
0xa69 POP
0xa6a PUSH2 0xaf6
0xa6d JUMP
---
0xa66: V887 = 0x0
0xa6a: V888 = 0xaf6
0xa6d: JUMP 0xaf6
---
Entry stack: [V11, 0x108, 0x0, V880, V883]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V11, 0x108, 0x0, V880, V883]

================================

Block 0xa6e
[0xa6e:0xad4]
---
Predecessors: [0xa5a]
Successors: [0xad5, 0xad9]
---
0xa6e JUMPDEST
0xa6f PUSH1 0x0
0xa71 DUP1
0xa72 SLOAD
0xa73 PUSH1 0x7
0xa75 SLOAD
0xa76 PUSH1 0x40
0xa78 DUP1
0xa79 MLOAD
0xa7a PUSH32 0xd2cbe1300000000000000000000000000000000000000000000000000000000
0xa9b DUP2
0xa9c MSTORE
0xa9d PUSH1 0x4
0xa9f DUP2
0xaa0 ADD
0xaa1 SWAP3
0xaa2 SWAP1
0xaa3 SWAP3
0xaa4 MSTORE
0xaa5 PUSH1 0x1
0xaa7 PUSH1 0x24
0xaa9 DUP4
0xaaa ADD
0xaab MSTORE
0xaac MLOAD
0xaad PUSH1 0x1
0xaaf PUSH1 0xa0
0xab1 PUSH1 0x2
0xab3 EXP
0xab4 SUB
0xab5 SWAP1
0xab6 SWAP3
0xab7 AND
0xab8 SWAP3
0xab9 PUSH4 0xd2cbe13
0xabe SWAP3
0xabf PUSH1 0x44
0xac1 DUP1
0xac2 DUP5
0xac3 ADD
0xac4 SWAP4
0xac5 DUP3
0xac6 SWAP1
0xac7 SUB
0xac8 ADD
0xac9 DUP2
0xaca DUP4
0xacb DUP8
0xacc DUP1
0xacd EXTCODESIZE
0xace ISZERO
0xacf DUP1
0xad0 ISZERO
0xad1 PUSH2 0xad9
0xad4 JUMPI
---
0xa6e: JUMPDEST 
0xa6f: V889 = 0x0
0xa72: V890 = S[0x0]
0xa73: V891 = 0x7
0xa75: V892 = S[0x7]
0xa76: V893 = 0x40
0xa79: V894 = M[0x40]
0xa7a: V895 = 0xd2cbe1300000000000000000000000000000000000000000000000000000000
0xa9c: M[V894] = 0xd2cbe1300000000000000000000000000000000000000000000000000000000
0xa9d: V896 = 0x4
0xaa0: V897 = ADD V894 0x4
0xaa4: M[V897] = V892
0xaa5: V898 = 0x1
0xaa7: V899 = 0x24
0xaaa: V900 = ADD V894 0x24
0xaab: M[V900] = 0x1
0xaac: V901 = M[0x40]
0xaad: V902 = 0x1
0xaaf: V903 = 0xa0
0xab1: V904 = 0x2
0xab3: V905 = EXP 0x2 0xa0
0xab4: V906 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab7: V907 = AND V890 0xffffffffffffffffffffffffffffffffffffffff
0xab9: V908 = 0xd2cbe13
0xabf: V909 = 0x44
0xac3: V910 = ADD V894 0x44
0xac7: V911 = SUB V894 V901
0xac8: V912 = ADD V911 0x44
0xacd: V913 = EXTCODESIZE V907
0xace: V914 = ISZERO V913
0xad0: V915 = ISZERO V914
0xad1: V916 = 0xad9
0xad4: JUMPI 0xad9 V915
---
Entry stack: [V11, 0x108, 0x0, V880, V883]
Stack pops: 0
Stack additions: [V907, 0xd2cbe13, V910, 0x0, V901, V912, V901, 0x0, V907, V914]
Exit stack: [V11, 0x108, 0x0, V880, V883, V907, 0xd2cbe13, V910, 0x0, V901, V912, V901, 0x0, V907, V914]

================================

Block 0xad5
[0xad5:0xad8]
---
Predecessors: [0xa6e]
Successors: []
---
0xad5 PUSH1 0x0
0xad7 DUP1
0xad8 REVERT
---
0xad5: V917 = 0x0
0xad8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x108, 0x0, V880, V883, V907, 0xd2cbe13, V910, 0x0, V901, V912, V901, 0x0, V907, V914]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, 0x0, V880, V883, V907, 0xd2cbe13, V910, 0x0, V901, V912, V901, 0x0, V907, V914]

================================

Block 0xad9
[0xad9:0xae3]
---
Predecessors: [0xa6e]
Successors: [0xae4, 0xaed]
---
0xad9 JUMPDEST
0xada POP
0xadb GAS
0xadc CALL
0xadd ISZERO
0xade DUP1
0xadf ISZERO
0xae0 PUSH2 0xaed
0xae3 JUMPI
---
0xad9: JUMPDEST 
0xadb: V918 = GAS
0xadc: V919 = CALL V918 V907 0x0 V901 V912 V901 0x0
0xadd: V920 = ISZERO V919
0xadf: V921 = ISZERO V920
0xae0: V922 = 0xaed
0xae3: JUMPI 0xaed V921
---
Entry stack: [V11, 0x108, 0x0, V880, V883, V907, 0xd2cbe13, V910, 0x0, V901, V912, V901, 0x0, V907, V914]
Stack pops: 7
Stack additions: [V920]
Exit stack: [V11, 0x108, 0x0, V880, V883, V907, 0xd2cbe13, V910, V920]

================================

Block 0xae4
[0xae4:0xaec]
---
Predecessors: [0xad9]
Successors: []
---
0xae4 RETURNDATASIZE
0xae5 PUSH1 0x0
0xae7 DUP1
0xae8 RETURNDATACOPY
0xae9 RETURNDATASIZE
0xaea PUSH1 0x0
0xaec REVERT
---
0xae4: V923 = RETURNDATASIZE
0xae5: V924 = 0x0
0xae8: RETURNDATACOPY 0x0 0x0 V923
0xae9: V925 = RETURNDATASIZE
0xaea: V926 = 0x0
0xaec: REVERT 0x0 V925
---
Entry stack: [V11, 0x108, 0x0, V880, V883, V907, 0xd2cbe13, V910, V920]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, 0x0, V880, V883, V907, 0xd2cbe13, V910, V920]

================================

Block 0xaed
[0xaed:0xaf5]
---
Predecessors: [0xad9]
Successors: [0xaf6]
---
0xaed JUMPDEST
0xaee POP
0xaef POP
0xaf0 POP
0xaf1 POP
0xaf2 PUSH1 0x1
0xaf4 SWAP3
0xaf5 POP
---
0xaed: JUMPDEST 
0xaf2: V927 = 0x1
---
Entry stack: [V11, 0x108, 0x0, V880, V883, V907, 0xd2cbe13, V910, V920]
Stack pops: 7
Stack additions: [0x1, S5, S4]
Exit stack: [V11, 0x108, 0x1, V880, V883]

================================

Block 0xaf6
[0xaf6:0xafa]
---
Predecessors: [0xa66, 0xaed]
Successors: [0x108]
---
0xaf6 JUMPDEST
0xaf7 POP
0xaf8 POP
0xaf9 SWAP1
0xafa JUMP
---
0xaf6: JUMPDEST 
0xafa: JUMP 0x108
---
Entry stack: [V11, 0x108, {0x0, 0x1}, V880, V883]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xafb
[0xafb:0xb23]
---
Predecessors: [0x180]
Successors: [0x197]
---
0xafb JUMPDEST
0xafc PUSH1 0x40
0xafe MLOAD
0xaff PUSH1 0x1
0xb01 PUSH1 0xa0
0xb03 PUSH1 0x2
0xb05 EXP
0xb06 SUB
0xb07 DUP4
0xb08 AND
0xb09 SWAP1
0xb0a DUP3
0xb0b ISZERO
0xb0c PUSH2 0x8fc
0xb0f MUL
0xb10 SWAP1
0xb11 DUP4
0xb12 SWAP1
0xb13 PUSH1 0x0
0xb15 DUP2
0xb16 DUP2
0xb17 DUP2
0xb18 DUP6
0xb19 DUP9
0xb1a DUP9
0xb1b CALL
0xb1c POP
0xb1d POP
0xb1e POP
0xb1f POP
0xb20 POP
0xb21 POP
0xb22 POP
0xb23 JUMP
---
0xafb: JUMPDEST 
0xafc: V928 = 0x40
0xafe: V929 = M[0x40]
0xaff: V930 = 0x1
0xb01: V931 = 0xa0
0xb03: V932 = 0x2
0xb05: V933 = EXP 0x2 0xa0
0xb06: V934 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb08: V935 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0xb0b: V936 = ISZERO V142
0xb0c: V937 = 0x8fc
0xb0f: V938 = MUL 0x8fc V936
0xb13: V939 = 0x0
0xb1b: V940 = CALL V938 V935 V142 V929 0x0 V929 0x0
0xb23: JUMP 0x197
---
Entry stack: [V11, 0x77, 0x197, V140, V142]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0xb24
[0xb24:0xb8f]
---
Predecessors: []
Successors: []
---
0xb24 STOP
0xb25 PUSH16 0x776e65722e0000000000000000000000
0xb36 STOP
0xb37 STOP
0xb38 STOP
0xb39 STOP
0xb3a STOP
0xb3b STOP
0xb3c STOP
0xb3d STOP
0xb3e STOP
0xb3f STOP
0xb40 STOP
0xb41 STOP
0xb42 STOP
0xb43 STOP
0xb44 STOP
0xb45 MISSING 0x4f
0xb46 PUSH15 0x6c794f776e6572206d6574686f6473
0xb56 SHA3
0xb57 PUSH4 0x616c6c65
0xb5c PUSH5 0x206279206e
0xb62 PUSH16 0x6e2da165627a7a7230582099889265b4
0xb73 DIV
0xb74 MISSING 0xbe
0xb75 PUSH23 0x177a3741d7a4414354028872138dd68ae4a9ef727e857b
0xb8d RETURNDATASIZE
0xb8e STOP
0xb8f MISSING 0x29
---
0xb24: STOP 
0xb25: V941 = 0x776e65722e0000000000000000000000
0xb36: STOP 
0xb37: STOP 
0xb38: STOP 
0xb39: STOP 
0xb3a: STOP 
0xb3b: STOP 
0xb3c: STOP 
0xb3d: STOP 
0xb3e: STOP 
0xb3f: STOP 
0xb40: STOP 
0xb41: STOP 
0xb42: STOP 
0xb43: STOP 
0xb44: STOP 
0xb45: MISSING 0x4f
0xb46: V942 = 0x6c794f776e6572206d6574686f6473
0xb56: V943 = SHA3 0x6c794f776e6572206d6574686f6473 S0
0xb57: V944 = 0x616c6c65
0xb5c: V945 = 0x206279206e
0xb62: V946 = 0x6e2da165627a7a7230582099889265b4
0xb73: V947 = DIV 0x6e2da165627a7a7230582099889265b4 0x206279206e
0xb74: MISSING 0xbe
0xb75: V948 = 0x177a3741d7a4414354028872138dd68ae4a9ef727e857b
0xb8d: V949 = RETURNDATASIZE
0xb8e: STOP 
0xb8f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x776e65722e0000000000000000000000, 0x366f4dc872d34041a630710, 0x616c6c65, V943, V949, 0x177a3741d7a4414354028872138dd68ae4a9ef727e857b]
Exit stack: []

================================

Function 0:
Public function signature: 0x24600fc3
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x81, 0x85, 0x11c, 0x12f, 0x180, 0x197, 0xafb

Function 1:
Public function signature: 0x30ce4895
Entry block: 0x8e
Exit block: 0x77
Body: 0x77, 0x8e, 0x96, 0x9a, 0x199, 0x1b2, 0x203, 0x278, 0x281, 0x297, 0x2d0, 0x2d4, 0x2df, 0x32e, 0x396, 0x39f, 0x3b5, 0x42f, 0x438, 0x45a, 0x4a9, 0x4da, 0x4db, 0x54f, 0x558, 0x567, 0x588, 0x58c, 0x597, 0x5a0

Function 2:
Public function signature: 0x35f4581b
Entry block: 0xbe
Exit block: 0x77
Body: 0x77, 0xbe, 0x5ae, 0x5c1, 0x612, 0x61a, 0x61d, 0x6c6, 0x6ca, 0x6d5, 0x6de

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0xc9
Exit block: 0x6f9
Body: 0xc9, 0xd1, 0xd5, 0x6e6, 0x6f9, 0x74a

Function 4:
Public function signature: 0x590e1ae3
Entry block: 0xde
Exit block: 0x77
Body: 0x77, 0xde, 0xe6, 0xea, 0x758, 0x76e, 0x7bf, 0x7d6, 0x7da, 0x83a, 0x83e, 0x849, 0x852, 0x888, 0x889, 0x8fd, 0x906, 0x915, 0x936, 0x93a, 0x945, 0x94e

Function 5:
Public function signature: 0xa92100cb
Entry block: 0xf3
Exit block: 0x108
Body: 0xf3, 0xfb, 0xff, 0x108, 0x955, 0x96f, 0x9c0, 0xa02, 0xa0b, 0xa21, 0xa5a, 0xa66, 0xa6e, 0xad5, 0xad9, 0xae4, 0xaed, 0xaf6

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

