Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x61
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x61
0xa: JUMPI 0x61 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xb4]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1f81ba6
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xb4
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1f81ba6
0x1a: V12 = EQ V10 0x1f81ba6
0x1b: V13 = 0xb4
0x1e: JUMPI 0xb4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xda]
---
0x1f DUP1
0x20 PUSH4 0x6fc3c817
0x25 EQ
0x26 PUSH2 0xda
0x29 JUMPI
---
0x20: V14 = 0x6fc3c817
0x25: V15 = EQ 0x6fc3c817 V10
0x26: V16 = 0xda
0x29: JUMPI 0xda V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xf1]
---
0x2a DUP1
0x2b PUSH4 0x70a08231
0x30 EQ
0x31 PUSH2 0xf1
0x34 JUMPI
---
0x2b: V17 = 0x70a08231
0x30: V18 = EQ 0x70a08231 V10
0x31: V19 = 0xf1
0x34: JUMPI 0xf1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x124]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0x124
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0x124
0x3f: JUMPI 0x124 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x13b]
---
0x40 DUP1
0x41 PUSH4 0xa9059cbb
0x46 EQ
0x47 PUSH2 0x13b
0x4a JUMPI
---
0x41: V23 = 0xa9059cbb
0x46: V24 = EQ 0xa9059cbb V10
0x47: V25 = 0x13b
0x4a: JUMPI 0x13b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x165]
---
0x4b DUP1
0x4c PUSH4 0xbaa49301
0x51 EQ
0x52 PUSH2 0x165
0x55 JUMPI
---
0x4c: V26 = 0xbaa49301
0x51: V27 = EQ 0xbaa49301 V10
0x52: V28 = 0x165
0x55: JUMPI 0x165 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x188]
---
0x56 DUP1
0x57 PUSH4 0xcd5295d3
0x5c EQ
0x5d PUSH2 0x188
0x60 JUMPI
---
0x57: V29 = 0xcd5295d3
0x5c: V30 = EQ 0xcd5295d3 V10
0x5d: V31 = 0x188
0x60: JUMPI 0x188 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x66]
---
Predecessors: [0x0, 0x56]
Successors: [0x67]
---
0x61 JUMPDEST
0x62 CALLVALUE
0x63 PUSH2 0x2
0x66 JUMPI
---
0x61: JUMPDEST 
0x62: V32 = CALLVALUE
0x63: V33 = 0x2
0x66: THROWI V32
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x67
[0x67:0x72]
---
Predecessors: [0x61]
Successors: [0x73, 0xb2]
---
0x67 PUSH2 0x1ae
0x6a PUSH1 0x0
0x6c CALLVALUE
0x6d GT
0x6e ISZERO
0x6f PUSH2 0xb2
0x72 JUMPI
---
0x67: V34 = 0x1ae
0x6a: V35 = 0x0
0x6c: V36 = CALLVALUE
0x6d: V37 = GT V36 0x0
0x6e: V38 = ISZERO V37
0x6f: V39 = 0xb2
0x72: JUMPI 0xb2 V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ae]
Exit stack: [V10, 0x1ae]

================================

Block 0x73
[0x73:0xb1]
---
Predecessors: [0x67]
Successors: [0xb2]
---
0x73 PUSH1 0x40
0x75 DUP1
0x76 MLOAD
0x77 CALLVALUE
0x78 DUP2
0x79 MSTORE
0x7a SWAP1
0x7b MLOAD
0x7c PUSH1 0x1
0x7e PUSH1 0xa0
0x80 PUSH1 0x2
0x82 EXP
0x83 SUB
0x84 CALLER
0x85 AND
0x86 SWAP2
0x87 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xa8 SWAP2
0xa9 SWAP1
0xaa DUP2
0xab SWAP1
0xac SUB
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP1
0xb1 LOG2
---
0x73: V40 = 0x40
0x76: V41 = M[0x40]
0x77: V42 = CALLVALUE
0x79: M[V41] = V42
0x7b: V43 = M[0x40]
0x7c: V44 = 0x1
0x7e: V45 = 0xa0
0x80: V46 = 0x2
0x82: V47 = EXP 0x2 0xa0
0x83: V48 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84: V49 = CALLER
0x85: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x87: V51 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xac: V52 = SUB V41 V43
0xad: V53 = 0x20
0xaf: V54 = ADD 0x20 V52
0xb1: LOG V43 V54 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V50
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae]

================================

Block 0xb2
[0xb2:0xb3]
---
Predecessors: [0x67, 0x73, 0x2ec, 0x333]
Successors: [0x1ae]
---
0xb2 JUMPDEST
0xb3 JUMP
---
0xb2: JUMPDEST 
0xb3: JUMP 0x1ae
---
Entry stack: [V10, 0x1ae]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xb4
[0xb4:0xb9]
---
Predecessors: [0xb]
Successors: [0xba]
---
0xb4 JUMPDEST
0xb5 CALLVALUE
0xb6 PUSH2 0x2
0xb9 JUMPI
---
0xb4: JUMPDEST 
0xb5: V55 = CALLVALUE
0xb6: V56 = 0x2
0xb9: THROWI V55
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xba
[0xba:0xd5]
---
Predecessors: [0xb4]
Successors: [0xd6, 0x1f5]
---
0xba PUSH2 0x1ae
0xbd PUSH1 0x4
0xbf CALLDATALOAD
0xc0 PUSH1 0x1
0xc2 SLOAD
0xc3 CALLER
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc SWAP1
0xcd DUP2
0xce AND
0xcf SWAP2
0xd0 AND
0xd1 EQ
0xd2 PUSH2 0x1f5
0xd5 JUMPI
---
0xba: V57 = 0x1ae
0xbd: V58 = 0x4
0xbf: V59 = CALLDATALOAD 0x4
0xc0: V60 = 0x1
0xc2: V61 = S[0x1]
0xc3: V62 = CALLER
0xc4: V63 = 0x1
0xc6: V64 = 0xa0
0xc8: V65 = 0x2
0xca: V66 = EXP 0x2 0xa0
0xcb: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xd0: V69 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xd1: V70 = EQ V69 V68
0xd2: V71 = 0x1f5
0xd5: JUMPI 0x1f5 V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ae, V59]
Exit stack: [V10, 0x1ae, V59]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xba]
Successors: []
---
0xd6 PUSH2 0x2
0xd9 JUMP
---
0xd6: V72 = 0x2
0xd9: THROW 
---
Entry stack: [V10, 0x1ae, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae, V59]

================================

Block 0xda
[0xda:0xdf]
---
Predecessors: [0x1f]
Successors: [0xe0]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc PUSH2 0x2
0xdf JUMPI
---
0xda: JUMPDEST 
0xdb: V73 = CALLVALUE
0xdc: V74 = 0x2
0xdf: THROWI V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe0
[0xe0:0xf0]
---
Predecessors: [0xda]
Successors: [0x1b0]
---
0xe0 PUSH2 0x1b0
0xe3 PUSH1 0x1
0xe5 SLOAD
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee AND
0xef DUP2
0xf0 JUMP
---
0xe0: V75 = 0x1b0
0xe3: V76 = 0x1
0xe5: V77 = S[0x1]
0xe6: V78 = 0x1
0xe8: V79 = 0xa0
0xea: V80 = 0x2
0xec: V81 = EXP 0x2 0xa0
0xed: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xf0: JUMP 0x1b0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b0, V83]
Exit stack: [V10, 0x1b0, V83]

================================

Block 0xf1
[0xf1:0xf6]
---
Predecessors: [0x2a]
Successors: [0xf7]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 PUSH2 0x2
0xf6 JUMPI
---
0xf1: JUMPDEST 
0xf2: V84 = CALLVALUE
0xf3: V85 = 0x2
0xf6: THROWI V84
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf7
[0xf7:0x113]
---
Predecessors: [0xf1]
Successors: [0x114, 0x217]
---
0xf7 PUSH2 0x1cc
0xfa PUSH1 0x4
0xfc CALLDATALOAD
0xfd PUSH1 0x0
0xff DUP1
0x100 SLOAD
0x101 PUSH1 0x1
0x103 PUSH1 0xa0
0x105 PUSH1 0x2
0x107 EXP
0x108 SUB
0x109 DUP4
0x10a DUP2
0x10b AND
0x10c SWAP2
0x10d AND
0x10e EQ
0x10f ISZERO
0x110 PUSH2 0x217
0x113 JUMPI
---
0xf7: V86 = 0x1cc
0xfa: V87 = 0x4
0xfc: V88 = CALLDATALOAD 0x4
0xfd: V89 = 0x0
0x100: V90 = S[0x0]
0x101: V91 = 0x1
0x103: V92 = 0xa0
0x105: V93 = 0x2
0x107: V94 = EXP 0x2 0xa0
0x108: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x10d: V97 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V98 = EQ V97 V96
0x10f: V99 = ISZERO V98
0x110: V100 = 0x217
0x113: JUMPI 0x217 V99
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cc, V88, 0x0]
Exit stack: [V10, 0x1cc, V88, 0x0]

================================

Block 0x114
[0x114:0x123]
---
Predecessors: [0xf7]
Successors: [0x21b]
---
0x114 POP
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d ADDRESS
0x11e AND
0x11f BALANCE
0x120 PUSH2 0x21b
0x123 JUMP
---
0x115: V101 = 0x1
0x117: V102 = 0xa0
0x119: V103 = 0x2
0x11b: V104 = EXP 0x2 0xa0
0x11c: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V106 = ADDRESS
0x11e: V107 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V108 = BALANCE V107
0x120: V109 = 0x21b
0x123: JUMP 0x21b
---
Entry stack: [V10, 0x1cc, V88, 0x0]
Stack pops: 1
Stack additions: [V108]
Exit stack: [V10, 0x1cc, V88, V108]

================================

Block 0x124
[0x124:0x129]
---
Predecessors: [0x35]
Successors: [0x12a]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 PUSH2 0x2
0x129 JUMPI
---
0x124: JUMPDEST 
0x125: V110 = CALLVALUE
0x126: V111 = 0x2
0x129: THROWI V110
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12a
[0x12a:0x13a]
---
Predecessors: [0x124]
Successors: [0x1b0]
---
0x12a PUSH2 0x1b0
0x12d PUSH1 0x0
0x12f SLOAD
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 AND
0x139 DUP2
0x13a JUMP
---
0x12a: V112 = 0x1b0
0x12d: V113 = 0x0
0x12f: V114 = S[0x0]
0x130: V115 = 0x1
0x132: V116 = 0xa0
0x134: V117 = 0x2
0x136: V118 = EXP 0x2 0xa0
0x137: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x138: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x13a: JUMP 0x1b0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b0, V120]
Exit stack: [V10, 0x1b0, V120]

================================

Block 0x13b
[0x13b:0x140]
---
Predecessors: [0x40]
Successors: [0x141]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d PUSH2 0x2
0x140 JUMPI
---
0x13b: JUMPDEST 
0x13c: V121 = CALLVALUE
0x13d: V122 = 0x2
0x140: THROWI V121
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x141
[0x141:0x160]
---
Predecessors: [0x13b]
Successors: [0x161, 0x220]
---
0x141 PUSH2 0x1de
0x144 PUSH1 0x4
0x146 CALLDATALOAD
0x147 PUSH1 0x24
0x149 CALLDATALOAD
0x14a PUSH1 0x0
0x14c DUP1
0x14d SLOAD
0x14e CALLER
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 SWAP1
0x158 DUP2
0x159 AND
0x15a SWAP2
0x15b AND
0x15c EQ
0x15d PUSH2 0x220
0x160 JUMPI
---
0x141: V123 = 0x1de
0x144: V124 = 0x4
0x146: V125 = CALLDATALOAD 0x4
0x147: V126 = 0x24
0x149: V127 = CALLDATALOAD 0x24
0x14a: V128 = 0x0
0x14d: V129 = S[0x0]
0x14e: V130 = CALLER
0x14f: V131 = 0x1
0x151: V132 = 0xa0
0x153: V133 = 0x2
0x155: V134 = EXP 0x2 0xa0
0x156: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x15b: V137 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V138 = EQ V137 V136
0x15d: V139 = 0x220
0x160: JUMPI 0x220 V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de, V125, V127, 0x0]
Exit stack: [V10, 0x1de, V125, V127, 0x0]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x141]
Successors: []
---
0x161 PUSH2 0x2
0x164 JUMP
---
0x161: V140 = 0x2
0x164: THROW 
---
Entry stack: [V10, 0x1de, V125, V127, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1de, V125, V127, 0x0]

================================

Block 0x165
[0x165:0x16a]
---
Predecessors: [0x4b]
Successors: [0x16b]
---
0x165 JUMPDEST
0x166 CALLVALUE
0x167 PUSH2 0x2
0x16a JUMPI
---
0x165: JUMPDEST 
0x166: V141 = CALLVALUE
0x167: V142 = 0x2
0x16a: THROWI V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16b
[0x16b:0x183]
---
Predecessors: [0x165]
Successors: [0x184, 0x2da]
---
0x16b PUSH2 0x1ae
0x16e PUSH1 0x1
0x170 SLOAD
0x171 CALLER
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a SWAP1
0x17b DUP2
0x17c AND
0x17d SWAP2
0x17e AND
0x17f EQ
0x180 PUSH2 0x2da
0x183 JUMPI
---
0x16b: V143 = 0x1ae
0x16e: V144 = 0x1
0x170: V145 = S[0x1]
0x171: V146 = CALLER
0x172: V147 = 0x1
0x174: V148 = 0xa0
0x176: V149 = 0x2
0x178: V150 = EXP 0x2 0xa0
0x179: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17c: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x17e: V153 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V154 = EQ V153 V152
0x180: V155 = 0x2da
0x183: JUMPI 0x2da V154
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ae]
Exit stack: [V10, 0x1ae]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x16b]
Successors: []
---
0x184 PUSH2 0x2
0x187 JUMP
---
0x184: V156 = 0x2
0x187: THROW 
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae]

================================

Block 0x188
[0x188:0x18d]
---
Predecessors: [0x56]
Successors: [0x18e]
---
0x188 JUMPDEST
0x189 CALLVALUE
0x18a PUSH2 0x2
0x18d JUMPI
---
0x188: JUMPDEST 
0x189: V157 = CALLVALUE
0x18a: V158 = 0x2
0x18d: THROWI V157
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18e
[0x18e:0x1a9]
---
Predecessors: [0x188]
Successors: [0x1aa, 0x3e3]
---
0x18e PUSH2 0x1ae
0x191 PUSH1 0x4
0x193 CALLDATALOAD
0x194 PUSH1 0x0
0x196 SLOAD
0x197 CALLER
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 AND
0x1a3 SWAP2
0x1a4 AND
0x1a5 EQ
0x1a6 PUSH2 0x3e3
0x1a9 JUMPI
---
0x18e: V159 = 0x1ae
0x191: V160 = 0x4
0x193: V161 = CALLDATALOAD 0x4
0x194: V162 = 0x0
0x196: V163 = S[0x0]
0x197: V164 = CALLER
0x198: V165 = 0x1
0x19a: V166 = 0xa0
0x19c: V167 = 0x2
0x19e: V168 = EXP 0x2 0xa0
0x19f: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a2: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1a4: V171 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V172 = EQ V171 V170
0x1a6: V173 = 0x3e3
0x1a9: JUMPI 0x3e3 V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ae, V161]
Exit stack: [V10, 0x1ae, V161]

================================

Block 0x1aa
[0x1aa:0x1ad]
---
Predecessors: [0x18e]
Successors: []
---
0x1aa PUSH2 0x2
0x1ad JUMP
---
0x1aa: V174 = 0x2
0x1ad: THROW 
---
Entry stack: [V10, 0x1ae, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae, V161]

================================

Block 0x1ae
[0x1ae:0x1af]
---
Predecessors: [0xb2, 0x1f2, 0x2be, 0x3e3]
Successors: []
---
0x1ae JUMPDEST
0x1af STOP
---
0x1ae: JUMPDEST 
0x1af: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b0
[0x1b0:0x1cb]
---
Predecessors: [0xe0, 0x12a]
Successors: []
---
0x1b0 JUMPDEST
0x1b1 PUSH1 0x40
0x1b3 DUP1
0x1b4 MLOAD
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd SWAP1
0x1be SWAP3
0x1bf AND
0x1c0 DUP3
0x1c1 MSTORE
0x1c2 MLOAD
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 SWAP1
0x1c6 SUB
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP1
0x1cb RETURN
---
0x1b0: JUMPDEST 
0x1b1: V175 = 0x40
0x1b4: V176 = M[0x40]
0x1b5: V177 = 0x1
0x1b7: V178 = 0xa0
0x1b9: V179 = 0x2
0x1bb: V180 = EXP 0x2 0xa0
0x1bc: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bf: V182 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: M[V176] = V182
0x1c2: V183 = M[0x40]
0x1c6: V184 = SUB V176 V183
0x1c7: V185 = 0x20
0x1c9: V186 = ADD 0x20 V184
0x1cb: RETURN V183 V186
---
Entry stack: [V10, 0x1b0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b0]

================================

Block 0x1cc
[0x1cc:0x1dd]
---
Predecessors: [0x21b]
Successors: []
---
0x1cc JUMPDEST
0x1cd PUSH1 0x40
0x1cf DUP1
0x1d0 MLOAD
0x1d1 SWAP2
0x1d2 DUP3
0x1d3 MSTORE
0x1d4 MLOAD
0x1d5 SWAP1
0x1d6 DUP2
0x1d7 SWAP1
0x1d8 SUB
0x1d9 PUSH1 0x20
0x1db ADD
0x1dc SWAP1
0x1dd RETURN
---
0x1cc: JUMPDEST 
0x1cd: V187 = 0x40
0x1d0: V188 = M[0x40]
0x1d3: M[V188] = S0
0x1d4: V189 = M[0x40]
0x1d8: V190 = SUB V188 V189
0x1d9: V191 = 0x20
0x1db: V192 = ADD 0x20 V190
0x1dd: RETURN V189 V192
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1de
[0x1de:0x1f1]
---
Predecessors: [0x220]
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 DUP1
0x1e2 MLOAD
0x1e3 SWAP2
0x1e4 ISZERO
0x1e5 ISZERO
0x1e6 DUP3
0x1e7 MSTORE
0x1e8 MLOAD
0x1e9 SWAP1
0x1ea DUP2
0x1eb SWAP1
0x1ec SUB
0x1ed PUSH1 0x20
0x1ef ADD
0x1f0 SWAP1
0x1f1 RETURN
---
0x1de: JUMPDEST 
0x1df: V193 = 0x40
0x1e2: V194 = M[0x40]
0x1e4: V195 = ISZERO 0x1
0x1e5: V196 = ISZERO 0x0
0x1e7: M[V194] = 0x1
0x1e8: V197 = M[0x40]
0x1ec: V198 = SUB V194 V197
0x1ed: V199 = 0x20
0x1ef: V200 = ADD 0x20 V198
0x1f1: RETURN V197 V200
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f2
[0x1f2:0x1f4]
---
Predecessors: [0x1f5]
Successors: [0x1ae]
---
0x1f2 JUMPDEST
0x1f3 POP
0x1f4 JUMP
---
0x1f2: JUMPDEST 
0x1f4: JUMP 0x1ae
---
Entry stack: [V10, 0x1ae, V59]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f5
[0x1f5:0x20b]
---
Predecessors: [0xba]
Successors: [0x1f2, 0x20c]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x2
0x1f8 SLOAD
0x1f9 PUSH1 0x1
0x1fb PUSH1 0xa0
0x1fd PUSH1 0x2
0x1ff EXP
0x200 SUB
0x201 DUP3
0x202 DUP2
0x203 AND
0x204 SWAP2
0x205 AND
0x206 EQ
0x207 ISZERO
0x208 PUSH2 0x1f2
0x20b JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V201 = 0x2
0x1f8: V202 = S[0x2]
0x1f9: V203 = 0x1
0x1fb: V204 = 0xa0
0x1fd: V205 = 0x2
0x1ff: V206 = EXP 0x2 0xa0
0x200: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x205: V209 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x206: V210 = EQ V209 V208
0x207: V211 = ISZERO V210
0x208: V212 = 0x1f2
0x20b: JUMPI 0x1f2 V211
---
Entry stack: [V10, 0x1ae, V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1ae, V59]

================================

Block 0x20c
[0x20c:0x216]
---
Predecessors: [0x1f5]
Successors: []
---
0x20c DUP1
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 AND
0x216 SELFDESTRUCT
---
0x20d: V213 = 0x1
0x20f: V214 = 0xa0
0x211: V215 = 0x2
0x213: V216 = EXP 0x2 0xa0
0x214: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x215: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x216: SELFDESTRUCT V218
---
Entry stack: [V10, 0x1ae, V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1ae, V59]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0xf7]
Successors: [0x21b]
---
0x217 JUMPDEST
0x218 POP
0x219 PUSH1 0x0
---
0x217: JUMPDEST 
0x219: V219 = 0x0
---
Entry stack: [V10, 0x1cc, V88, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x1cc, V88, 0x0]

================================

Block 0x21b
[0x21b:0x21f]
---
Predecessors: [0x114, 0x217]
Successors: [0x1cc]
---
0x21b JUMPDEST
0x21c SWAP2
0x21d SWAP1
0x21e POP
0x21f JUMP
---
0x21b: JUMPDEST 
0x21f: JUMP 0x1cc
---
Entry stack: [V10, 0x1cc, V88, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x220
[0x220:0x288]
---
Predecessors: [0x141]
Successors: [0x1de]
---
0x220 JUMPDEST
0x221 TIMESTAMP
0x222 PUSH1 0x3
0x224 SSTORE
0x225 PUSH1 0x4
0x227 DUP1
0x228 SLOAD
0x229 PUSH1 0x1
0x22b PUSH1 0xa0
0x22d PUSH1 0x2
0x22f EXP
0x230 SUB
0x231 NOT
0x232 AND
0x233 DUP5
0x234 OR
0x235 SWAP1
0x236 DUP2
0x237 SWAP1
0x238 SSTORE
0x239 PUSH1 0x5
0x23b DUP4
0x23c SWAP1
0x23d SSTORE
0x23e PUSH1 0x40
0x240 DUP1
0x241 MLOAD
0x242 DUP5
0x243 DUP2
0x244 MSTORE
0x245 SWAP1
0x246 MLOAD
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f SWAP3
0x250 DUP4
0x251 AND
0x252 SWAP3
0x253 CALLER
0x254 AND
0x255 SWAP2
0x256 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x277 SWAP2
0x278 SWAP1
0x279 DUP2
0x27a SWAP1
0x27b SUB
0x27c PUSH1 0x20
0x27e ADD
0x27f SWAP1
0x280 LOG3
0x281 POP
0x282 PUSH1 0x1
0x284 SWAP3
0x285 SWAP2
0x286 POP
0x287 POP
0x288 JUMP
---
0x220: JUMPDEST 
0x221: V220 = TIMESTAMP
0x222: V221 = 0x3
0x224: S[0x3] = V220
0x225: V222 = 0x4
0x228: V223 = S[0x4]
0x229: V224 = 0x1
0x22b: V225 = 0xa0
0x22d: V226 = 0x2
0x22f: V227 = EXP 0x2 0xa0
0x230: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V229 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x232: V230 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V223
0x234: V231 = OR V125 V230
0x238: S[0x4] = V231
0x239: V232 = 0x5
0x23d: S[0x5] = V127
0x23e: V233 = 0x40
0x241: V234 = M[0x40]
0x244: M[V234] = V127
0x246: V235 = M[0x40]
0x247: V236 = 0x1
0x249: V237 = 0xa0
0x24b: V238 = 0x2
0x24d: V239 = EXP 0x2 0xa0
0x24e: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x251: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x253: V242 = CALLER
0x254: V243 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x256: V244 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x27b: V245 = SUB V234 V235
0x27c: V246 = 0x20
0x27e: V247 = ADD 0x20 V245
0x280: LOG V235 V247 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V243 V241
0x282: V248 = 0x1
0x288: JUMP 0x1de
---
Entry stack: [V10, 0x1de, V125, V127, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x289
[0x289:0x2bd]
---
Predecessors: [0x36b]
Successors: [0x2be]
---
0x289 JUMPDEST
0x28a PUSH1 0x40
0x28c DUP1
0x28d MLOAD
0x28e PUSH1 0x4
0x290 DUP2
0x291 MSTORE
0x292 SWAP1
0x293 MLOAD
0x294 PUSH32 0xb8b9aa594424325c5216e17e5ad757fe48fc4454865949c8c7d02a7f58e00359
0x2b5 SWAP2
0x2b6 DUP2
0x2b7 SWAP1
0x2b8 SUB
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc SWAP1
0x2bd LOG1
---
0x289: JUMPDEST 
0x28a: V249 = 0x40
0x28d: V250 = M[0x40]
0x28e: V251 = 0x4
0x291: M[V250] = 0x4
0x293: V252 = M[0x40]
0x294: V253 = 0xb8b9aa594424325c5216e17e5ad757fe48fc4454865949c8c7d02a7f58e00359
0x2b8: V254 = SUB V250 V252
0x2b9: V255 = 0x20
0x2bb: V256 = ADD 0x20 V254
0x2bd: LOG V252 V256 0xb8b9aa594424325c5216e17e5ad757fe48fc4454865949c8c7d02a7f58e00359
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae]

================================

Block 0x2be
[0x2be:0x2d9]
---
Predecessors: [0x289, 0x397]
Successors: [0x1ae]
---
0x2be JUMPDEST
0x2bf PUSH1 0x0
0x2c1 PUSH1 0x3
0x2c3 DUP2
0x2c4 SWAP1
0x2c5 SSTORE
0x2c6 PUSH1 0x4
0x2c8 DUP1
0x2c9 SLOAD
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 NOT
0x2d3 AND
0x2d4 SWAP1
0x2d5 SSTORE
0x2d6 PUSH1 0x5
0x2d8 SSTORE
0x2d9 JUMP
---
0x2be: JUMPDEST 
0x2bf: V257 = 0x0
0x2c1: V258 = 0x3
0x2c5: S[0x3] = 0x0
0x2c6: V259 = 0x4
0x2c9: V260 = S[0x4]
0x2ca: V261 = 0x1
0x2cc: V262 = 0xa0
0x2ce: V263 = 0x2
0x2d0: V264 = EXP 0x2 0xa0
0x2d1: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d2: V266 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V267 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V260
0x2d5: S[0x4] = V267
0x2d6: V268 = 0x5
0x2d8: S[0x5] = 0x0
0x2d9: JUMP 0x1ae
---
Entry stack: [V10, 0x1ae]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2da
[0x2da:0x2eb]
---
Predecessors: [0x16b]
Successors: [0x2ec, 0x324]
---
0x2da JUMPDEST
0x2db PUSH1 0x4
0x2dd SLOAD
0x2de PUSH1 0x1
0x2e0 PUSH1 0xa0
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SUB
0x2e6 AND
0x2e7 ISZERO
0x2e8 PUSH2 0x324
0x2eb JUMPI
---
0x2da: JUMPDEST 
0x2db: V269 = 0x4
0x2dd: V270 = S[0x4]
0x2de: V271 = 0x1
0x2e0: V272 = 0xa0
0x2e2: V273 = 0x2
0x2e4: V274 = EXP 0x2 0xa0
0x2e5: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x2e7: V277 = ISZERO V276
0x2e8: V278 = 0x324
0x2eb: JUMPI 0x324 V277
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae]

================================

Block 0x2ec
[0x2ec:0x323]
---
Predecessors: [0x2da]
Successors: [0xb2]
---
0x2ec PUSH1 0x40
0x2ee DUP1
0x2ef MLOAD
0x2f0 PUSH1 0x2
0x2f2 DUP2
0x2f3 MSTORE
0x2f4 SWAP1
0x2f5 MLOAD
0x2f6 PUSH32 0xb8b9aa594424325c5216e17e5ad757fe48fc4454865949c8c7d02a7f58e00359
0x317 SWAP2
0x318 DUP2
0x319 SWAP1
0x31a SUB
0x31b PUSH1 0x20
0x31d ADD
0x31e SWAP1
0x31f LOG1
0x320 PUSH2 0xb2
0x323 JUMP
---
0x2ec: V279 = 0x40
0x2ef: V280 = M[0x40]
0x2f0: V281 = 0x2
0x2f3: M[V280] = 0x2
0x2f5: V282 = M[0x40]
0x2f6: V283 = 0xb8b9aa594424325c5216e17e5ad757fe48fc4454865949c8c7d02a7f58e00359
0x31a: V284 = SUB V280 V282
0x31b: V285 = 0x20
0x31d: V286 = ADD 0x20 V284
0x31f: LOG V282 V286 0xb8b9aa594424325c5216e17e5ad757fe48fc4454865949c8c7d02a7f58e00359
0x320: V287 = 0xb2
0x323: JUMP 0xb2
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae]

================================

Block 0x324
[0x324:0x332]
---
Predecessors: [0x2da]
Successors: [0x333, 0x36b]
---
0x324 JUMPDEST
0x325 PUSH1 0x3
0x327 SLOAD
0x328 PUSH2 0xe10
0x32b ADD
0x32c TIMESTAMP
0x32d GT
0x32e ISZERO
0x32f PUSH2 0x36b
0x332 JUMPI
---
0x324: JUMPDEST 
0x325: V288 = 0x3
0x327: V289 = S[0x3]
0x328: V290 = 0xe10
0x32b: V291 = ADD 0xe10 V289
0x32c: V292 = TIMESTAMP
0x32d: V293 = GT V292 V291
0x32e: V294 = ISZERO V293
0x32f: V295 = 0x36b
0x332: JUMPI 0x36b V294
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae]

================================

Block 0x333
[0x333:0x36a]
---
Predecessors: [0x324]
Successors: [0xb2]
---
0x333 PUSH1 0x40
0x335 DUP1
0x336 MLOAD
0x337 PUSH1 0x3
0x339 DUP2
0x33a MSTORE
0x33b SWAP1
0x33c MLOAD
0x33d PUSH32 0xb8b9aa594424325c5216e17e5ad757fe48fc4454865949c8c7d02a7f58e00359
0x35e SWAP2
0x35f DUP2
0x360 SWAP1
0x361 SUB
0x362 PUSH1 0x20
0x364 ADD
0x365 SWAP1
0x366 LOG1
0x367 PUSH2 0xb2
0x36a JUMP
---
0x333: V296 = 0x40
0x336: V297 = M[0x40]
0x337: V298 = 0x3
0x33a: M[V297] = 0x3
0x33c: V299 = M[0x40]
0x33d: V300 = 0xb8b9aa594424325c5216e17e5ad757fe48fc4454865949c8c7d02a7f58e00359
0x361: V301 = SUB V297 V299
0x362: V302 = 0x20
0x364: V303 = ADD 0x20 V301
0x366: LOG V299 V303 0xb8b9aa594424325c5216e17e5ad757fe48fc4454865949c8c7d02a7f58e00359
0x367: V304 = 0xb2
0x36a: JUMP 0xb2
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae]

================================

Block 0x36b
[0x36b:0x396]
---
Predecessors: [0x324]
Successors: [0x289, 0x397]
---
0x36b JUMPDEST
0x36c PUSH1 0x4
0x36e SLOAD
0x36f PUSH1 0x5
0x371 SLOAD
0x372 PUSH1 0x40
0x374 MLOAD
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d SWAP1
0x37e SWAP3
0x37f AND
0x380 SWAP2
0x381 PUSH1 0x0
0x383 DUP2
0x384 DUP2
0x385 DUP2
0x386 DUP6
0x387 DUP8
0x388 PUSH2 0x8502
0x38b GAS
0x38c SUB
0x38d CALL
0x38e SWAP3
0x38f POP
0x390 POP
0x391 POP
0x392 ISZERO
0x393 PUSH2 0x289
0x396 JUMPI
---
0x36b: JUMPDEST 
0x36c: V305 = 0x4
0x36e: V306 = S[0x4]
0x36f: V307 = 0x5
0x371: V308 = S[0x5]
0x372: V309 = 0x40
0x374: V310 = M[0x40]
0x375: V311 = 0x1
0x377: V312 = 0xa0
0x379: V313 = 0x2
0x37b: V314 = EXP 0x2 0xa0
0x37c: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37f: V316 = AND V306 0xffffffffffffffffffffffffffffffffffffffff
0x381: V317 = 0x0
0x388: V318 = 0x8502
0x38b: V319 = GAS
0x38c: V320 = SUB V319 0x8502
0x38d: V321 = CALL V320 V316 V308 V310 0x0 V310 0x0
0x392: V322 = ISZERO V321
0x393: V323 = 0x289
0x396: JUMPI 0x289 V322
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae]

================================

Block 0x397
[0x397:0x3e2]
---
Predecessors: [0x36b]
Successors: [0x2be]
---
0x397 PUSH1 0x4
0x399 SLOAD
0x39a PUSH1 0x5
0x39c SLOAD
0x39d PUSH1 0x40
0x39f DUP1
0x3a0 MLOAD
0x3a1 SWAP2
0x3a2 DUP3
0x3a3 MSTORE
0x3a4 MLOAD
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 PUSH1 0x2
0x3ab EXP
0x3ac SUB
0x3ad SWAP3
0x3ae DUP4
0x3af AND
0x3b0 SWAP3
0x3b1 CALLER
0x3b2 AND
0x3b3 SWAP2
0x3b4 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x3d5 SWAP2
0x3d6 SWAP1
0x3d7 DUP2
0x3d8 SWAP1
0x3d9 SUB
0x3da PUSH1 0x20
0x3dc ADD
0x3dd SWAP1
0x3de LOG3
0x3df PUSH2 0x2be
0x3e2 JUMP
---
0x397: V324 = 0x4
0x399: V325 = S[0x4]
0x39a: V326 = 0x5
0x39c: V327 = S[0x5]
0x39d: V328 = 0x40
0x3a0: V329 = M[0x40]
0x3a3: M[V329] = V327
0x3a4: V330 = M[0x40]
0x3a5: V331 = 0x1
0x3a7: V332 = 0xa0
0x3a9: V333 = 0x2
0x3ab: V334 = EXP 0x2 0xa0
0x3ac: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x3b1: V337 = CALLER
0x3b2: V338 = AND V337 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: V339 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x3d9: V340 = SUB V329 V330
0x3da: V341 = 0x20
0x3dc: V342 = ADD 0x20 V340
0x3de: LOG V330 V342 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V338 V336
0x3df: V343 = 0x2be
0x3e2: JUMP 0x2be
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ae]

================================

Block 0x3e3
[0x3e3:0x3f7]
---
Predecessors: [0x18e]
Successors: [0x1ae]
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0x2
0x3e6 DUP1
0x3e7 SLOAD
0x3e8 PUSH1 0x1
0x3ea PUSH1 0xa0
0x3ec PUSH1 0x2
0x3ee EXP
0x3ef SUB
0x3f0 NOT
0x3f1 AND
0x3f2 DUP3
0x3f3 OR
0x3f4 SWAP1
0x3f5 SSTORE
0x3f6 POP
0x3f7 JUMP
---
0x3e3: JUMPDEST 
0x3e4: V344 = 0x2
0x3e7: V345 = S[0x2]
0x3e8: V346 = 0x1
0x3ea: V347 = 0xa0
0x3ec: V348 = 0x2
0x3ee: V349 = EXP 0x2 0xa0
0x3ef: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f0: V351 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V352 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V345
0x3f3: V353 = OR V161 V352
0x3f5: S[0x2] = V353
0x3f7: JUMP 0x1ae
---
Entry stack: [V10, 0x1ae, V161]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x1f81ba6
Entry block: 0xb4
Exit block: 0x1ae
Body: 0xb4, 0xba, 0xd6, 0x1ae, 0x1f2, 0x1f5, 0x20c

Function 1:
Public function signature: 0x6fc3c817
Entry block: 0xda
Exit block: 0x1b0
Body: 0xda, 0xe0, 0x1b0

Function 2:
Public function signature: 0x70a08231
Entry block: 0xf1
Exit block: 0x1cc
Body: 0xf1, 0xf7, 0x114, 0x1cc, 0x217, 0x21b

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x124
Exit block: 0x1b0
Body: 0x124, 0x12a, 0x1b0

Function 4:
Public function signature: 0xa9059cbb
Entry block: 0x13b
Exit block: 0x1de
Body: 0x13b, 0x141, 0x161, 0x1de, 0x220

Function 5:
Public function signature: 0xbaa49301
Entry block: 0x165
Exit block: 0x1ae
Body: 0xb2, 0x165, 0x16b, 0x184, 0x1ae, 0x289, 0x2be, 0x2da, 0x2ec, 0x324, 0x333, 0x36b, 0x397

Function 6:
Public function signature: 0xcd5295d3
Entry block: 0x188
Exit block: 0x1ae
Body: 0x188, 0x18e, 0x1aa, 0x1ae, 0x3e3

Function 7:
Public fallback function
Entry block: 0x61
Exit block: 0x1ae
Body: 0x61, 0x67, 0x73, 0xb2, 0x1ae

