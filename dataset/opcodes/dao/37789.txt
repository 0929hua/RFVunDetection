Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xb7d796e
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xb7d796e
0x3b: V13 = EQ V11 0xb7d796e
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x98]
---
0x40 DUP1
0x41 PUSH4 0x24600fc3
0x46 EQ
0x47 PUSH2 0x98
0x4a JUMPI
---
0x41: V15 = 0x24600fc3
0x46: V16 = EQ 0x24600fc3 V11
0x47: V17 = 0x98
0x4a: JUMPI 0x98 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xad]
---
0x4b DUP1
0x4c PUSH4 0x278ecde1
0x51 EQ
0x52 PUSH2 0xad
0x55 JUMPI
---
0x4c: V18 = 0x278ecde1
0x51: V19 = EQ 0x278ecde1 V11
0x52: V20 = 0xad
0x55: JUMPI 0xad V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xb8]
---
0x56 DUP1
0x57 PUSH4 0x30ce4895
0x5c EQ
0x5d PUSH2 0xb8
0x60 JUMPI
---
0x57: V21 = 0x30ce4895
0x5c: V22 = EQ 0x30ce4895 V11
0x5d: V23 = 0xb8
0x60: JUMPI 0xb8 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xe8]
---
0x61 DUP1
0x62 PUSH4 0x35f4581b
0x67 EQ
0x68 PUSH2 0xe8
0x6b JUMPI
---
0x62: V24 = 0x35f4581b
0x67: V25 = EQ 0x35f4581b V11
0x68: V26 = 0xe8
0x6b: JUMPI 0xe8 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0xf3]
---
0x6c DUP1
0x6d PUSH4 0x41c0e1b5
0x72 EQ
0x73 PUSH2 0xf3
0x76 JUMPI
---
0x6d: V27 = 0x41c0e1b5
0x72: V28 = EQ 0x41c0e1b5 V11
0x73: V29 = 0xf3
0x76: JUMPI 0xf3 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x34c, 0x54e, 0x959, 0xa96]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, 0x84, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, S3, S2, S1, S0]

================================

Block 0x79
[0x79:0x83]
---
Predecessors: [0xd]
Successors: [0x108]
---
0x79 JUMPDEST
0x7a PUSH2 0x84
0x7d PUSH1 0x4
0x7f CALLDATALOAD
0x80 PUSH2 0x108
0x83 JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x84
0x7d: V31 = 0x4
0x7f: V32 = CALLDATALOAD 0x4
0x80: V33 = 0x108
0x83: JUMP 0x108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x84, V32]
Exit stack: [V11, 0x84, V32]

================================

Block 0x84
[0x84:0x97]
---
Predecessors: [0x2ca]
Successors: []
---
0x84 JUMPDEST
0x85 PUSH1 0x40
0x87 DUP1
0x88 MLOAD
0x89 SWAP2
0x8a ISZERO
0x8b ISZERO
0x8c DUP3
0x8d MSTORE
0x8e MLOAD
0x8f SWAP1
0x90 DUP2
0x91 SWAP1
0x92 SUB
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP1
0x97 RETURN
---
0x84: JUMPDEST 
0x85: V34 = 0x40
0x88: V35 = M[0x40]
0x8a: V36 = ISZERO {0x0, 0x1}
0x8b: V37 = ISZERO V36
0x8d: M[V35] = V37
0x8e: V38 = M[0x40]
0x92: V39 = SUB V35 V38
0x93: V40 = 0x20
0x95: V41 = ADD 0x20 V39
0x97: RETURN V38 V41
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9f]
---
Predecessors: [0x40]
Successors: [0xa0, 0xa4]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a DUP1
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x98: JUMPDEST 
0x99: V42 = CALLVALUE
0x9b: V43 = ISZERO V42
0x9c: V44 = 0xa4
0x9f: JUMPI 0xa4 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x98]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V45 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xa4
[0xa4:0xac]
---
Predecessors: [0x98]
Successors: [0x2d1]
---
0xa4 JUMPDEST
0xa5 POP
0xa6 PUSH2 0x77
0xa9 PUSH2 0x2d1
0xac JUMP
---
0xa4: JUMPDEST 
0xa6: V46 = 0x77
0xa9: V47 = 0x2d1
0xac: JUMP 0x2d1
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0x4b]
Successors: [0x34e]
---
0xad JUMPDEST
0xae PUSH2 0x77
0xb1 PUSH1 0x4
0xb3 CALLDATALOAD
0xb4 PUSH2 0x34e
0xb7 JUMP
---
0xad: JUMPDEST 
0xae: V48 = 0x77
0xb1: V49 = 0x4
0xb3: V50 = CALLDATALOAD 0x4
0xb4: V51 = 0x34e
0xb7: JUMP 0x34e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V50]
Exit stack: [V11, 0x77, V50]

================================

Block 0xb8
[0xb8:0xbf]
---
Predecessors: [0x56]
Successors: [0xc0, 0xc4]
---
0xb8 JUMPDEST
0xb9 CALLVALUE
0xba DUP1
0xbb ISZERO
0xbc PUSH2 0xc4
0xbf JUMPI
---
0xb8: JUMPDEST 
0xb9: V52 = CALLVALUE
0xbb: V53 = ISZERO V52
0xbc: V54 = 0xc4
0xbf: JUMPI 0xc4 V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V52]
Exit stack: [V11, V52]

================================

Block 0xc0
[0xc0:0xc3]
---
Predecessors: [0xb8]
Successors: []
---
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 REVERT
---
0xc0: V55 = 0x0
0xc3: REVERT 0x0 0x0
---
Entry stack: [V11, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V52]

================================

Block 0xc4
[0xc4:0xe7]
---
Predecessors: [0xb8]
Successors: [0x552]
---
0xc4 JUMPDEST
0xc5 POP
0xc6 PUSH2 0x77
0xc9 PUSH1 0x4
0xcb CALLDATALOAD
0xcc PUSH1 0x24
0xce CALLDATALOAD
0xcf PUSH1 0x44
0xd1 CALLDATALOAD
0xd2 PUSH1 0x64
0xd4 CALLDATALOAD
0xd5 PUSH1 0x84
0xd7 CALLDATALOAD
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 PUSH1 0xa4
0xe2 CALLDATALOAD
0xe3 AND
0xe4 PUSH2 0x552
0xe7 JUMP
---
0xc4: JUMPDEST 
0xc6: V56 = 0x77
0xc9: V57 = 0x4
0xcb: V58 = CALLDATALOAD 0x4
0xcc: V59 = 0x24
0xce: V60 = CALLDATALOAD 0x24
0xcf: V61 = 0x44
0xd1: V62 = CALLDATALOAD 0x44
0xd2: V63 = 0x64
0xd4: V64 = CALLDATALOAD 0x64
0xd5: V65 = 0x84
0xd7: V66 = CALLDATALOAD 0x84
0xd8: V67 = 0x1
0xda: V68 = 0xa0
0xdc: V69 = 0x2
0xde: V70 = EXP 0x2 0xa0
0xdf: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0: V72 = 0xa4
0xe2: V73 = CALLDATALOAD 0xa4
0xe3: V74 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V75 = 0x552
0xe7: JUMP 0x552
---
Entry stack: [V11, V52]
Stack pops: 1
Stack additions: [0x77, V58, V60, V62, V64, V66, V74]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74]

================================

Block 0xe8
[0xe8:0xf2]
---
Predecessors: [0x61]
Successors: [0x967]
---
0xe8 JUMPDEST
0xe9 PUSH2 0x77
0xec PUSH1 0x4
0xee CALLDATALOAD
0xef PUSH2 0x967
0xf2 JUMP
---
0xe8: JUMPDEST 
0xe9: V76 = 0x77
0xec: V77 = 0x4
0xee: V78 = CALLDATALOAD 0x4
0xef: V79 = 0x967
0xf2: JUMP 0x967
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V78]
Exit stack: [V11, 0x77, V78]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0x6c]
Successors: [0xfb, 0xff]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 DUP1
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf3: JUMPDEST 
0xf4: V80 = CALLVALUE
0xf6: V81 = ISZERO V80
0xf7: V82 = 0xff
0xfa: JUMPI 0xff V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V11, V80]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf3]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V83 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V11, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V80]

================================

Block 0xff
[0xff:0x107]
---
Predecessors: [0xf3]
Successors: [0xa9e]
---
0xff JUMPDEST
0x100 POP
0x101 PUSH2 0x77
0x104 PUSH2 0xa9e
0x107 JUMP
---
0xff: JUMPDEST 
0x101: V84 = 0x77
0x104: V85 = 0xa9e
0x107: JUMP 0xa9e
---
Entry stack: [V11, V80]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x108
[0x108:0x121]
---
Predecessors: [0x79]
Successors: [0x122, 0x173]
---
0x108 JUMPDEST
0x109 PUSH1 0x2
0x10b SLOAD
0x10c PUSH1 0x0
0x10e SWAP1
0x10f DUP2
0x110 SWAP1
0x111 DUP2
0x112 SWAP1
0x113 PUSH1 0x1
0x115 PUSH1 0xa0
0x117 PUSH1 0x2
0x119 EXP
0x11a SUB
0x11b AND
0x11c CALLER
0x11d EQ
0x11e PUSH2 0x173
0x121 JUMPI
---
0x108: JUMPDEST 
0x109: V86 = 0x2
0x10b: V87 = S[0x2]
0x10c: V88 = 0x0
0x113: V89 = 0x1
0x115: V90 = 0xa0
0x117: V91 = 0x2
0x119: V92 = EXP 0x2 0xa0
0x11a: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11b: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x11c: V95 = CALLER
0x11d: V96 = EQ V95 V94
0x11e: V97 = 0x173
0x121: JUMPI 0x173 V96
---
Entry stack: [V11, 0x84, V32]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x84, V32, 0x0, 0x0, 0x0]

================================

Block 0x122
[0x122:0x172]
---
Predecessors: [0x108]
Successors: []
---
0x122 PUSH1 0x40
0x124 DUP1
0x125 MLOAD
0x126 PUSH1 0xe5
0x128 PUSH1 0x2
0x12a EXP
0x12b PUSH3 0x461bcd
0x12f MUL
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 PUSH1 0x4
0x136 DUP3
0x137 ADD
0x138 MSTORE
0x139 PUSH1 0x26
0x13b PUSH1 0x24
0x13d DUP3
0x13e ADD
0x13f MSTORE
0x140 PUSH1 0x0
0x142 DUP1
0x143 MLOAD
0x144 PUSH1 0x20
0x146 PUSH2 0xb5a
0x149 DUP4
0x14a CODECOPY
0x14b DUP2
0x14c MLOAD
0x14d SWAP2
0x14e MSTORE
0x14f PUSH1 0x44
0x151 DUP3
0x152 ADD
0x153 MSTORE
0x154 PUSH1 0x0
0x156 DUP1
0x157 MLOAD
0x158 PUSH1 0x20
0x15a PUSH2 0xb3a
0x15d DUP4
0x15e CODECOPY
0x15f DUP2
0x160 MLOAD
0x161 SWAP2
0x162 MSTORE
0x163 PUSH1 0x64
0x165 DUP3
0x166 ADD
0x167 MSTORE
0x168 SWAP1
0x169 MLOAD
0x16a SWAP1
0x16b DUP2
0x16c SWAP1
0x16d SUB
0x16e PUSH1 0x84
0x170 ADD
0x171 SWAP1
0x172 REVERT
---
0x122: V98 = 0x40
0x125: V99 = M[0x40]
0x126: V100 = 0xe5
0x128: V101 = 0x2
0x12a: V102 = EXP 0x2 0xe5
0x12b: V103 = 0x461bcd
0x12f: V104 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x131: M[V99] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x132: V105 = 0x20
0x134: V106 = 0x4
0x137: V107 = ADD V99 0x4
0x138: M[V107] = 0x20
0x139: V108 = 0x26
0x13b: V109 = 0x24
0x13e: V110 = ADD V99 0x24
0x13f: M[V110] = 0x26
0x140: V111 = 0x0
0x143: V112 = M[0x0]
0x144: V113 = 0x20
0x146: V114 = 0xb5a
0x14a: CODECOPY 0x0 0xb5a 0x20
0x14c: V115 = M[0x0]
0x14e: M[0x0] = V112
0x14f: V116 = 0x44
0x152: V117 = ADD V99 0x44
0x153: M[V117] = V115
0x154: V118 = 0x0
0x157: V119 = M[0x0]
0x158: V120 = 0x20
0x15a: V121 = 0xb3a
0x15e: CODECOPY 0x0 0xb3a 0x20
0x160: V122 = M[0x0]
0x162: M[0x0] = V119
0x163: V123 = 0x64
0x166: V124 = ADD V99 0x64
0x167: M[V124] = V122
0x169: V125 = M[0x40]
0x16d: V126 = SUB V99 V125
0x16e: V127 = 0x84
0x170: V128 = ADD 0x84 V126
0x172: REVERT V125 V128
---
Entry stack: [V11, 0x84, V32, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V32, 0x0, 0x0, 0x0]

================================

Block 0x173
[0x173:0x1b4]
---
Predecessors: [0x108]
Successors: [0x1b5]
---
0x173 JUMPDEST
0x174 PUSH1 0x7
0x176 SLOAD
0x177 PUSH1 0x8
0x179 SLOAD
0x17a PUSH1 0x40
0x17c DUP1
0x17d MLOAD
0x17e PUSH1 0x20
0x180 DUP1
0x181 DUP3
0x182 ADD
0x183 SWAP5
0x184 SWAP1
0x185 SWAP5
0x186 MSTORE
0x187 PUSH5 0xffffffffff
0x18d SWAP1
0x18e SWAP3
0x18f AND
0x190 BLOCKHASH
0x191 DUP3
0x192 DUP3
0x193 ADD
0x194 MSTORE
0x195 DUP1
0x196 MLOAD
0x197 DUP1
0x198 DUP4
0x199 SUB
0x19a DUP3
0x19b ADD
0x19c DUP2
0x19d MSTORE
0x19e PUSH1 0x60
0x1a0 SWAP1
0x1a1 SWAP3
0x1a2 ADD
0x1a3 SWAP1
0x1a4 DUP2
0x1a5 SWAP1
0x1a6 MSTORE
0x1a7 DUP2
0x1a8 MLOAD
0x1a9 SWAP2
0x1aa SWAP3
0x1ab SWAP1
0x1ac SWAP2
0x1ad DUP3
0x1ae SWAP2
0x1af DUP5
0x1b0 ADD
0x1b1 SWAP1
0x1b2 DUP1
0x1b3 DUP4
0x1b4 DUP4
---
0x173: JUMPDEST 
0x174: V129 = 0x7
0x176: V130 = S[0x7]
0x177: V131 = 0x8
0x179: V132 = S[0x8]
0x17a: V133 = 0x40
0x17d: V134 = M[0x40]
0x17e: V135 = 0x20
0x182: V136 = ADD V134 0x20
0x186: M[V136] = V130
0x187: V137 = 0xffffffffff
0x18f: V138 = AND V132 0xffffffffff
0x190: V139 = BLOCKHASH V138
0x193: V140 = ADD 0x40 V134
0x194: M[V140] = V139
0x196: V141 = M[0x40]
0x199: V142 = SUB V134 V141
0x19b: V143 = ADD 0x40 V142
0x19d: M[V141] = V143
0x19e: V144 = 0x60
0x1a2: V145 = ADD V134 0x60
0x1a6: M[0x40] = V145
0x1a8: V146 = M[V141]
0x1b0: V147 = ADD V141 0x20
---
Entry stack: [V11, 0x84, V32, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V141, V145, V145, V147, V146, V146, V145, V147]
Exit stack: [V11, 0x84, V32, 0x0, 0x0, 0x0, V141, V145, V145, V147, V146, V146, V145, V147]

================================

Block 0x1b5
[0x1b5:0x1bd]
---
Predecessors: [0x173, 0x1be]
Successors: [0x1be, 0x1d4]
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x20
0x1b8 DUP4
0x1b9 LT
0x1ba PUSH2 0x1d4
0x1bd JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V148 = 0x20
0x1b9: V149 = LT S2 0x20
0x1ba: V150 = 0x1d4
0x1bd: JUMPI 0x1d4 V149
---
Entry stack: [V11, 0x84, V32, 0x0, 0x0, 0x0, V141, V145, V145, V147, V146, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x84, V32, 0x0, 0x0, 0x0, V141, V145, V145, V147, V146, S2, S1, S0]

================================

Block 0x1be
[0x1be:0x1d3]
---
Predecessors: [0x1b5]
Successors: [0x1b5]
---
0x1be DUP1
0x1bf MLOAD
0x1c0 DUP3
0x1c1 MSTORE
0x1c2 PUSH1 0x1f
0x1c4 NOT
0x1c5 SWAP1
0x1c6 SWAP3
0x1c7 ADD
0x1c8 SWAP2
0x1c9 PUSH1 0x20
0x1cb SWAP2
0x1cc DUP3
0x1cd ADD
0x1ce SWAP2
0x1cf ADD
0x1d0 PUSH2 0x1b5
0x1d3 JUMP
---
0x1bf: V151 = M[S0]
0x1c1: M[S1] = V151
0x1c2: V152 = 0x1f
0x1c4: V153 = NOT 0x1f
0x1c7: V154 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1c9: V155 = 0x20
0x1cd: V156 = ADD 0x20 S1
0x1cf: V157 = ADD 0x20 S0
0x1d0: V158 = 0x1b5
0x1d3: JUMP 0x1b5
---
Entry stack: [V11, 0x84, V32, 0x0, 0x0, 0x0, V141, V145, V145, V147, V146, S2, S1, S0]
Stack pops: 3
Stack additions: [V154, V156, V157]
Exit stack: [V11, 0x84, V32, 0x0, 0x0, 0x0, V141, V145, V145, V147, V146, V154, V156, V157]

================================

Block 0x1d4
[0x1d4:0x20c]
---
Predecessors: [0x1b5]
Successors: [0x20d]
---
0x1d4 JUMPDEST
0x1d5 MLOAD
0x1d6 DUP2
0x1d7 MLOAD
0x1d8 PUSH1 0x20
0x1da SWAP4
0x1db SWAP1
0x1dc SWAP4
0x1dd SUB
0x1de PUSH2 0x100
0x1e1 EXP
0x1e2 PUSH1 0x0
0x1e4 NOT
0x1e5 ADD
0x1e6 DUP1
0x1e7 NOT
0x1e8 SWAP1
0x1e9 SWAP2
0x1ea AND
0x1eb SWAP3
0x1ec AND
0x1ed SWAP2
0x1ee SWAP1
0x1ef SWAP2
0x1f0 OR
0x1f1 SWAP1
0x1f2 MSTORE
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 SWAP3
0x1f7 ADD
0x1f8 DUP3
0x1f9 SWAP1
0x1fa SUB
0x1fb SWAP1
0x1fc SWAP2
0x1fd SHA3
0x1fe SWAP5
0x1ff POP
0x200 PUSH1 0x64
0x202 SWAP3
0x203 POP
0x204 DUP5
0x205 SWAP2
0x206 POP
0x207 PUSH2 0x20d
0x20a SWAP1
0x20b POP
0x20c JUMP
---
0x1d4: JUMPDEST 
0x1d5: V159 = M[S0]
0x1d7: V160 = M[S1]
0x1d8: V161 = 0x20
0x1dd: V162 = SUB 0x20 S2
0x1de: V163 = 0x100
0x1e1: V164 = EXP 0x100 V162
0x1e2: V165 = 0x0
0x1e4: V166 = NOT 0x0
0x1e5: V167 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V164
0x1e7: V168 = NOT V167
0x1ea: V169 = AND V159 V168
0x1ec: V170 = AND V160 V167
0x1f0: V171 = OR V170 V169
0x1f2: M[S1] = V171
0x1f3: V172 = 0x40
0x1f5: V173 = M[0x40]
0x1f7: V174 = ADD V145 V146
0x1fa: V175 = SUB V174 V173
0x1fd: V176 = SHA3 V173 V175
0x200: V177 = 0x64
0x207: V178 = 0x20d
0x20c: JUMP 0x20d
---
Entry stack: [V11, 0x84, V32, 0x0, 0x0, 0x0, V141, V145, V145, V147, V146, S2, S1, S0]
Stack pops: 10
Stack additions: [V176, S8, 0x64, V176]
Exit stack: [V11, 0x84, V32, 0x0, V176, 0x0, 0x64, V176]

================================

Block 0x20d
[0x20d:0x218]
---
Predecessors: [0x1d4]
Successors: [0x219, 0x221]
---
0x20d JUMPDEST
0x20e MOD
0x20f SWAP1
0x210 POP
0x211 PUSH1 0x32
0x213 DUP2
0x214 LT
0x215 PUSH2 0x221
0x218 JUMPI
---
0x20d: JUMPDEST 
0x20e: V179 = MOD V176 0x64
0x211: V180 = 0x32
0x214: V181 = LT V179 0x32
0x215: V182 = 0x221
0x218: JUMPI 0x221 V181
---
Entry stack: [V11, 0x84, V32, 0x0, V176, 0x0, 0x64, V176]
Stack pops: 3
Stack additions: [V179]
Exit stack: [V11, 0x84, V32, 0x0, V176, V179]

================================

Block 0x219
[0x219:0x220]
---
Predecessors: [0x20d]
Successors: [0x2ca]
---
0x219 PUSH1 0x0
0x21b SWAP3
0x21c POP
0x21d PUSH2 0x2ca
0x220 JUMP
---
0x219: V183 = 0x0
0x21d: V184 = 0x2ca
0x220: JUMP 0x2ca
---
Entry stack: [V11, 0x84, V32, 0x0, V176, V179]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V11, 0x84, V32, 0x0, V176, V179]

================================

Block 0x221
[0x221:0x287]
---
Predecessors: [0x20d]
Successors: [0x288, 0x28c]
---
0x221 JUMPDEST
0x222 PUSH1 0x0
0x224 DUP1
0x225 SLOAD
0x226 PUSH1 0x7
0x228 SLOAD
0x229 PUSH1 0x40
0x22b DUP1
0x22c MLOAD
0x22d PUSH32 0xd2cbe1300000000000000000000000000000000000000000000000000000000
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x4
0x252 DUP2
0x253 ADD
0x254 SWAP3
0x255 SWAP1
0x256 SWAP3
0x257 MSTORE
0x258 PUSH1 0x1
0x25a PUSH1 0x24
0x25c DUP4
0x25d ADD
0x25e MSTORE
0x25f MLOAD
0x260 PUSH1 0x1
0x262 PUSH1 0xa0
0x264 PUSH1 0x2
0x266 EXP
0x267 SUB
0x268 SWAP1
0x269 SWAP3
0x26a AND
0x26b SWAP3
0x26c PUSH4 0xd2cbe13
0x271 SWAP3
0x272 PUSH1 0x44
0x274 DUP1
0x275 DUP5
0x276 ADD
0x277 SWAP4
0x278 DUP3
0x279 SWAP1
0x27a SUB
0x27b ADD
0x27c DUP2
0x27d DUP4
0x27e DUP8
0x27f DUP1
0x280 EXTCODESIZE
0x281 ISZERO
0x282 DUP1
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x221: JUMPDEST 
0x222: V185 = 0x0
0x225: V186 = S[0x0]
0x226: V187 = 0x7
0x228: V188 = S[0x7]
0x229: V189 = 0x40
0x22c: V190 = M[0x40]
0x22d: V191 = 0xd2cbe1300000000000000000000000000000000000000000000000000000000
0x24f: M[V190] = 0xd2cbe1300000000000000000000000000000000000000000000000000000000
0x250: V192 = 0x4
0x253: V193 = ADD V190 0x4
0x257: M[V193] = V188
0x258: V194 = 0x1
0x25a: V195 = 0x24
0x25d: V196 = ADD V190 0x24
0x25e: M[V196] = 0x1
0x25f: V197 = M[0x40]
0x260: V198 = 0x1
0x262: V199 = 0xa0
0x264: V200 = 0x2
0x266: V201 = EXP 0x2 0xa0
0x267: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26a: V203 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V204 = 0xd2cbe13
0x272: V205 = 0x44
0x276: V206 = ADD V190 0x44
0x27a: V207 = SUB V190 V197
0x27b: V208 = ADD V207 0x44
0x280: V209 = EXTCODESIZE V203
0x281: V210 = ISZERO V209
0x283: V211 = ISZERO V210
0x284: V212 = 0x28c
0x287: JUMPI 0x28c V211
---
Entry stack: [V11, 0x84, V32, 0x0, V176, V179]
Stack pops: 0
Stack additions: [V203, 0xd2cbe13, V206, 0x0, V197, V208, V197, 0x0, V203, V210]
Exit stack: [V11, 0x84, V32, 0x0, V176, V179, V203, 0xd2cbe13, V206, 0x0, V197, V208, V197, 0x0, V203, V210]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x221]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V213 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x84, V32, 0x0, V176, V179, V203, 0xd2cbe13, V206, 0x0, V197, V208, V197, 0x0, V203, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V32, 0x0, V176, V179, V203, 0xd2cbe13, V206, 0x0, V197, V208, V197, 0x0, V203, V210]

================================

Block 0x28c
[0x28c:0x296]
---
Predecessors: [0x221]
Successors: [0x297, 0x2a0]
---
0x28c JUMPDEST
0x28d POP
0x28e GAS
0x28f CALL
0x290 ISZERO
0x291 DUP1
0x292 ISZERO
0x293 PUSH2 0x2a0
0x296 JUMPI
---
0x28c: JUMPDEST 
0x28e: V214 = GAS
0x28f: V215 = CALL V214 V203 0x0 V197 V208 V197 0x0
0x290: V216 = ISZERO V215
0x292: V217 = ISZERO V216
0x293: V218 = 0x2a0
0x296: JUMPI 0x2a0 V217
---
Entry stack: [V11, 0x84, V32, 0x0, V176, V179, V203, 0xd2cbe13, V206, 0x0, V197, V208, V197, 0x0, V203, V210]
Stack pops: 7
Stack additions: [V216]
Exit stack: [V11, 0x84, V32, 0x0, V176, V179, V203, 0xd2cbe13, V206, V216]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x28c]
Successors: []
---
0x297 RETURNDATASIZE
0x298 PUSH1 0x0
0x29a DUP1
0x29b RETURNDATACOPY
0x29c RETURNDATASIZE
0x29d PUSH1 0x0
0x29f REVERT
---
0x297: V219 = RETURNDATASIZE
0x298: V220 = 0x0
0x29b: RETURNDATACOPY 0x0 0x0 V219
0x29c: V221 = RETURNDATASIZE
0x29d: V222 = 0x0
0x29f: REVERT 0x0 V221
---
Entry stack: [V11, 0x84, V32, 0x0, V176, V179, V203, 0xd2cbe13, V206, V216]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V32, 0x0, V176, V179, V203, 0xd2cbe13, V206, V216]

================================

Block 0x2a0
[0x2a0:0x2ae]
---
Predecessors: [0x28c]
Successors: [0x2af, 0x2b2]
---
0x2a0 JUMPDEST
0x2a1 POP
0x2a2 POP
0x2a3 POP
0x2a4 POP
0x2a5 DUP4
0x2a6 PUSH1 0x0
0x2a8 EQ
0x2a9 DUP1
0x2aa ISZERO
0x2ab PUSH2 0x2b2
0x2ae JUMPI
---
0x2a0: JUMPDEST 
0x2a6: V223 = 0x0
0x2a8: V224 = EQ 0x0 V32
0x2aa: V225 = ISZERO V224
0x2ab: V226 = 0x2b2
0x2ae: JUMPI 0x2b2 V225
---
Entry stack: [V11, 0x84, V32, 0x0, V176, V179, V203, 0xd2cbe13, V206, V216]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, V224]
Exit stack: [V11, 0x84, V32, 0x0, V176, V179, V224]

================================

Block 0x2af
[0x2af:0x2b1]
---
Predecessors: [0x2a0]
Successors: [0x2b2]
---
0x2af POP
0x2b0 CALLVALUE
0x2b1 ISZERO
---
0x2b0: V227 = CALLVALUE
0x2b1: V228 = ISZERO V227
---
Entry stack: [V11, 0x84, V32, 0x0, V176, V179, V224]
Stack pops: 1
Stack additions: [V228]
Exit stack: [V11, 0x84, V32, 0x0, V176, V179, V228]

================================

Block 0x2b2
[0x2b2:0x2b7]
---
Predecessors: [0x2a0, 0x2af]
Successors: [0x2b8, 0x2bc]
---
0x2b2 JUMPDEST
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V229 = ISZERO S0
0x2b4: V230 = 0x2bc
0x2b7: JUMPI 0x2bc V229
---
Entry stack: [V11, 0x84, V32, 0x0, V176, V179, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x84, V32, 0x0, V176, V179]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x2b2]
Successors: [0x2bc]
---
0x2b8 ADDRESS
0x2b9 BALANCE
0x2ba SWAP4
0x2bb POP
---
0x2b8: V231 = ADDRESS
0x2b9: V232 = BALANCE V231
---
Entry stack: [V11, 0x84, V32, 0x0, V176, V179]
Stack pops: 4
Stack additions: [V232, S2, S1, S0]
Exit stack: [V11, 0x84, V232, 0x0, V176, V179]

================================

Block 0x2bc
[0x2bc:0x2c4]
---
Predecessors: [0x2b2, 0x2b8]
Successors: [0x967]
---
0x2bc JUMPDEST
0x2bd PUSH2 0x2c5
0x2c0 DUP5
0x2c1 PUSH2 0x967
0x2c4 JUMP
---
0x2bc: JUMPDEST 
0x2bd: V233 = 0x2c5
0x2c1: V234 = 0x967
0x2c4: JUMP 0x967
---
Entry stack: [V11, 0x84, S3, 0x0, V176, V179]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x2c5, S3]
Exit stack: [V11, 0x84, S3, 0x0, V176, V179, 0x2c5, S3]

================================

Block 0x2c5
[0x2c5:0x2c9]
---
Predecessors: [0xa96]
Successors: [0x2ca]
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x1
0x2c8 SWAP3
0x2c9 POP
---
0x2c5: JUMPDEST 
0x2c6: V235 = 0x1
---
Entry stack: [V11, 0x84, S3, {0x0, 0x77}, S1, S0]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V11, 0x84, S3, 0x1, S1, S0]

================================

Block 0x2ca
[0x2ca:0x2d0]
---
Predecessors: [0x219, 0x2c5]
Successors: [0x84]
---
0x2ca JUMPDEST
0x2cb POP
0x2cc POP
0x2cd SWAP2
0x2ce SWAP1
0x2cf POP
0x2d0 JUMP
---
0x2ca: JUMPDEST 
0x2d0: JUMP 0x84
---
Entry stack: [V11, 0x84, S3, {0x0, 0x1}, S1, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x2d1
[0x2d1:0x2e3]
---
Predecessors: [0xa4]
Successors: [0x2e4, 0x335]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x2
0x2d4 SLOAD
0x2d5 PUSH1 0x1
0x2d7 PUSH1 0xa0
0x2d9 PUSH1 0x2
0x2db EXP
0x2dc SUB
0x2dd AND
0x2de CALLER
0x2df EQ
0x2e0 PUSH2 0x335
0x2e3 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V236 = 0x2
0x2d4: V237 = S[0x2]
0x2d5: V238 = 0x1
0x2d7: V239 = 0xa0
0x2d9: V240 = 0x2
0x2db: V241 = EXP 0x2 0xa0
0x2dc: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dd: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x2de: V244 = CALLER
0x2df: V245 = EQ V244 V243
0x2e0: V246 = 0x335
0x2e3: JUMPI 0x335 V245
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x2e4
[0x2e4:0x334]
---
Predecessors: [0x2d1]
Successors: []
---
0x2e4 PUSH1 0x40
0x2e6 DUP1
0x2e7 MLOAD
0x2e8 PUSH1 0xe5
0x2ea PUSH1 0x2
0x2ec EXP
0x2ed PUSH3 0x461bcd
0x2f1 MUL
0x2f2 DUP2
0x2f3 MSTORE
0x2f4 PUSH1 0x20
0x2f6 PUSH1 0x4
0x2f8 DUP3
0x2f9 ADD
0x2fa MSTORE
0x2fb PUSH1 0x26
0x2fd PUSH1 0x24
0x2ff DUP3
0x300 ADD
0x301 MSTORE
0x302 PUSH1 0x0
0x304 DUP1
0x305 MLOAD
0x306 PUSH1 0x20
0x308 PUSH2 0xb5a
0x30b DUP4
0x30c CODECOPY
0x30d DUP2
0x30e MLOAD
0x30f SWAP2
0x310 MSTORE
0x311 PUSH1 0x44
0x313 DUP3
0x314 ADD
0x315 MSTORE
0x316 PUSH1 0x0
0x318 DUP1
0x319 MLOAD
0x31a PUSH1 0x20
0x31c PUSH2 0xb3a
0x31f DUP4
0x320 CODECOPY
0x321 DUP2
0x322 MLOAD
0x323 SWAP2
0x324 MSTORE
0x325 PUSH1 0x64
0x327 DUP3
0x328 ADD
0x329 MSTORE
0x32a SWAP1
0x32b MLOAD
0x32c SWAP1
0x32d DUP2
0x32e SWAP1
0x32f SUB
0x330 PUSH1 0x84
0x332 ADD
0x333 SWAP1
0x334 REVERT
---
0x2e4: V247 = 0x40
0x2e7: V248 = M[0x40]
0x2e8: V249 = 0xe5
0x2ea: V250 = 0x2
0x2ec: V251 = EXP 0x2 0xe5
0x2ed: V252 = 0x461bcd
0x2f1: V253 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x2f3: M[V248] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2f4: V254 = 0x20
0x2f6: V255 = 0x4
0x2f9: V256 = ADD V248 0x4
0x2fa: M[V256] = 0x20
0x2fb: V257 = 0x26
0x2fd: V258 = 0x24
0x300: V259 = ADD V248 0x24
0x301: M[V259] = 0x26
0x302: V260 = 0x0
0x305: V261 = M[0x0]
0x306: V262 = 0x20
0x308: V263 = 0xb5a
0x30c: CODECOPY 0x0 0xb5a 0x20
0x30e: V264 = M[0x0]
0x310: M[0x0] = V261
0x311: V265 = 0x44
0x314: V266 = ADD V248 0x44
0x315: M[V266] = V264
0x316: V267 = 0x0
0x319: V268 = M[0x0]
0x31a: V269 = 0x20
0x31c: V270 = 0xb3a
0x320: CODECOPY 0x0 0xb3a 0x20
0x322: V271 = M[0x0]
0x324: M[0x0] = V268
0x325: V272 = 0x64
0x328: V273 = ADD V248 0x64
0x329: M[V273] = V271
0x32b: V274 = M[0x40]
0x32f: V275 = SUB V248 V274
0x330: V276 = 0x84
0x332: V277 = ADD 0x84 V275
0x334: REVERT V274 V277
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x335
[0x335:0x34b]
---
Predecessors: [0x2d1]
Successors: [0xb10]
---
0x335 JUMPDEST
0x336 PUSH1 0x2
0x338 SLOAD
0x339 PUSH2 0x34c
0x33c SWAP1
0x33d PUSH1 0x1
0x33f PUSH1 0xa0
0x341 PUSH1 0x2
0x343 EXP
0x344 SUB
0x345 AND
0x346 ADDRESS
0x347 BALANCE
0x348 PUSH2 0xb10
0x34b JUMP
---
0x335: JUMPDEST 
0x336: V278 = 0x2
0x338: V279 = S[0x2]
0x339: V280 = 0x34c
0x33d: V281 = 0x1
0x33f: V282 = 0xa0
0x341: V283 = 0x2
0x343: V284 = EXP 0x2 0xa0
0x344: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x345: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x346: V287 = ADDRESS
0x347: V288 = BALANCE V287
0x348: V289 = 0xb10
0x34b: JUMP 0xb10
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x34c, V286, V288]
Exit stack: [V11, 0x77, 0x34c, V286, V288]

================================

Block 0x34c
[0x34c:0x34d]
---
Predecessors: [0xb10]
Successors: [0x77]
---
0x34c JUMPDEST
0x34d JUMP
---
0x34c: JUMPDEST 
0x34d: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x34e
[0x34e:0x363]
---
Predecessors: [0xad]
Successors: [0x364, 0x3b5]
---
0x34e JUMPDEST
0x34f PUSH1 0x2
0x351 SLOAD
0x352 PUSH1 0x60
0x354 SWAP1
0x355 PUSH1 0x1
0x357 PUSH1 0xa0
0x359 PUSH1 0x2
0x35b EXP
0x35c SUB
0x35d AND
0x35e CALLER
0x35f EQ
0x360 PUSH2 0x3b5
0x363 JUMPI
---
0x34e: JUMPDEST 
0x34f: V290 = 0x2
0x351: V291 = S[0x2]
0x352: V292 = 0x60
0x355: V293 = 0x1
0x357: V294 = 0xa0
0x359: V295 = 0x2
0x35b: V296 = EXP 0x2 0xa0
0x35c: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35d: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x35e: V299 = CALLER
0x35f: V300 = EQ V299 V298
0x360: V301 = 0x3b5
0x363: JUMPI 0x3b5 V300
---
Entry stack: [V11, 0x77, V50]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V11, 0x77, V50, 0x60]

================================

Block 0x364
[0x364:0x3b4]
---
Predecessors: [0x34e]
Successors: []
---
0x364 PUSH1 0x40
0x366 DUP1
0x367 MLOAD
0x368 PUSH1 0xe5
0x36a PUSH1 0x2
0x36c EXP
0x36d PUSH3 0x461bcd
0x371 MUL
0x372 DUP2
0x373 MSTORE
0x374 PUSH1 0x20
0x376 PUSH1 0x4
0x378 DUP3
0x379 ADD
0x37a MSTORE
0x37b PUSH1 0x26
0x37d PUSH1 0x24
0x37f DUP3
0x380 ADD
0x381 MSTORE
0x382 PUSH1 0x0
0x384 DUP1
0x385 MLOAD
0x386 PUSH1 0x20
0x388 PUSH2 0xb5a
0x38b DUP4
0x38c CODECOPY
0x38d DUP2
0x38e MLOAD
0x38f SWAP2
0x390 MSTORE
0x391 PUSH1 0x44
0x393 DUP3
0x394 ADD
0x395 MSTORE
0x396 PUSH1 0x0
0x398 DUP1
0x399 MLOAD
0x39a PUSH1 0x20
0x39c PUSH2 0xb3a
0x39f DUP4
0x3a0 CODECOPY
0x3a1 DUP2
0x3a2 MLOAD
0x3a3 SWAP2
0x3a4 MSTORE
0x3a5 PUSH1 0x64
0x3a7 DUP3
0x3a8 ADD
0x3a9 MSTORE
0x3aa SWAP1
0x3ab MLOAD
0x3ac SWAP1
0x3ad DUP2
0x3ae SWAP1
0x3af SUB
0x3b0 PUSH1 0x84
0x3b2 ADD
0x3b3 SWAP1
0x3b4 REVERT
---
0x364: V302 = 0x40
0x367: V303 = M[0x40]
0x368: V304 = 0xe5
0x36a: V305 = 0x2
0x36c: V306 = EXP 0x2 0xe5
0x36d: V307 = 0x461bcd
0x371: V308 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x373: M[V303] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x374: V309 = 0x20
0x376: V310 = 0x4
0x379: V311 = ADD V303 0x4
0x37a: M[V311] = 0x20
0x37b: V312 = 0x26
0x37d: V313 = 0x24
0x380: V314 = ADD V303 0x24
0x381: M[V314] = 0x26
0x382: V315 = 0x0
0x385: V316 = M[0x0]
0x386: V317 = 0x20
0x388: V318 = 0xb5a
0x38c: CODECOPY 0x0 0xb5a 0x20
0x38e: V319 = M[0x0]
0x390: M[0x0] = V316
0x391: V320 = 0x44
0x394: V321 = ADD V303 0x44
0x395: M[V321] = V319
0x396: V322 = 0x0
0x399: V323 = M[0x0]
0x39a: V324 = 0x20
0x39c: V325 = 0xb3a
0x3a0: CODECOPY 0x0 0xb3a 0x20
0x3a2: V326 = M[0x0]
0x3a4: M[0x0] = V323
0x3a5: V327 = 0x64
0x3a8: V328 = ADD V303 0x64
0x3a9: M[V328] = V326
0x3ab: V329 = M[0x40]
0x3af: V330 = SUB V303 V329
0x3b0: V331 = 0x84
0x3b2: V332 = ADD 0x84 V330
0x3b4: REVERT V329 V332
---
Entry stack: [V11, 0x77, V50, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V50, 0x60]

================================

Block 0x3b5
[0x3b5:0x414]
---
Predecessors: [0x34e]
Successors: [0x415, 0x419]
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 SLOAD
0x3ba PUSH1 0x4
0x3bc DUP1
0x3bd SLOAD
0x3be PUSH1 0x40
0x3c0 DUP1
0x3c1 MLOAD
0x3c2 PUSH32 0xe1fdb4b400000000000000000000000000000000000000000000000000000000
0x3e3 DUP2
0x3e4 MSTORE
0x3e5 SWAP3
0x3e6 DUP4
0x3e7 ADD
0x3e8 SWAP2
0x3e9 SWAP1
0x3ea SWAP2
0x3eb MSTORE
0x3ec MLOAD
0x3ed PUSH1 0x1
0x3ef PUSH1 0xa0
0x3f1 PUSH1 0x2
0x3f3 EXP
0x3f4 SUB
0x3f5 SWAP1
0x3f6 SWAP3
0x3f7 AND
0x3f8 SWAP3
0x3f9 PUSH4 0xe1fdb4b4
0x3fe SWAP3
0x3ff PUSH1 0x24
0x401 DUP1
0x402 DUP5
0x403 ADD
0x404 SWAP4
0x405 DUP3
0x406 SWAP1
0x407 SUB
0x408 ADD
0x409 DUP2
0x40a DUP4
0x40b DUP8
0x40c DUP1
0x40d EXTCODESIZE
0x40e ISZERO
0x40f DUP1
0x410 ISZERO
0x411 PUSH2 0x419
0x414 JUMPI
---
0x3b5: JUMPDEST 
0x3b6: V333 = 0x0
0x3b9: V334 = S[0x0]
0x3ba: V335 = 0x4
0x3bd: V336 = S[0x4]
0x3be: V337 = 0x40
0x3c1: V338 = M[0x40]
0x3c2: V339 = 0xe1fdb4b400000000000000000000000000000000000000000000000000000000
0x3e4: M[V338] = 0xe1fdb4b400000000000000000000000000000000000000000000000000000000
0x3e7: V340 = ADD V338 0x4
0x3eb: M[V340] = V336
0x3ec: V341 = M[0x40]
0x3ed: V342 = 0x1
0x3ef: V343 = 0xa0
0x3f1: V344 = 0x2
0x3f3: V345 = EXP 0x2 0xa0
0x3f4: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f7: V347 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V348 = 0xe1fdb4b4
0x3ff: V349 = 0x24
0x403: V350 = ADD V338 0x24
0x407: V351 = SUB V338 V341
0x408: V352 = ADD V351 0x24
0x40d: V353 = EXTCODESIZE V347
0x40e: V354 = ISZERO V353
0x410: V355 = ISZERO V354
0x411: V356 = 0x419
0x414: JUMPI 0x419 V355
---
Entry stack: [V11, 0x77, V50, 0x60]
Stack pops: 0
Stack additions: [V347, 0xe1fdb4b4, V350, 0x0, V341, V352, V341, 0x0, V347, V354]
Exit stack: [V11, 0x77, V50, 0x60, V347, 0xe1fdb4b4, V350, 0x0, V341, V352, V341, 0x0, V347, V354]

================================

Block 0x415
[0x415:0x418]
---
Predecessors: [0x3b5]
Successors: []
---
0x415 PUSH1 0x0
0x417 DUP1
0x418 REVERT
---
0x415: V357 = 0x0
0x418: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V50, 0x60, V347, 0xe1fdb4b4, V350, 0x0, V341, V352, V341, 0x0, V347, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V50, 0x60, V347, 0xe1fdb4b4, V350, 0x0, V341, V352, V341, 0x0, V347, V354]

================================

Block 0x419
[0x419:0x423]
---
Predecessors: [0x3b5]
Successors: [0x424, 0x42d]
---
0x419 JUMPDEST
0x41a POP
0x41b GAS
0x41c CALL
0x41d ISZERO
0x41e DUP1
0x41f ISZERO
0x420 PUSH2 0x42d
0x423 JUMPI
---
0x419: JUMPDEST 
0x41b: V358 = GAS
0x41c: V359 = CALL V358 V347 0x0 V341 V352 V341 0x0
0x41d: V360 = ISZERO V359
0x41f: V361 = ISZERO V360
0x420: V362 = 0x42d
0x423: JUMPI 0x42d V361
---
Entry stack: [V11, 0x77, V50, 0x60, V347, 0xe1fdb4b4, V350, 0x0, V341, V352, V341, 0x0, V347, V354]
Stack pops: 7
Stack additions: [V360]
Exit stack: [V11, 0x77, V50, 0x60, V347, 0xe1fdb4b4, V350, V360]

================================

Block 0x424
[0x424:0x42c]
---
Predecessors: [0x419]
Successors: []
---
0x424 RETURNDATASIZE
0x425 PUSH1 0x0
0x427 DUP1
0x428 RETURNDATACOPY
0x429 RETURNDATASIZE
0x42a PUSH1 0x0
0x42c REVERT
---
0x424: V363 = RETURNDATASIZE
0x425: V364 = 0x0
0x428: RETURNDATACOPY 0x0 0x0 V363
0x429: V365 = RETURNDATASIZE
0x42a: V366 = 0x0
0x42c: REVERT 0x0 V365
---
Entry stack: [V11, 0x77, V50, 0x60, V347, 0xe1fdb4b4, V350, V360]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V50, 0x60, V347, 0xe1fdb4b4, V350, V360]

================================

Block 0x42d
[0x42d:0x462]
---
Predecessors: [0x419]
Successors: [0x463, 0x464]
---
0x42d JUMPDEST
0x42e POP
0x42f POP
0x430 PUSH1 0x40
0x432 DUP1
0x433 MLOAD
0x434 PUSH1 0x1
0x436 DUP1
0x437 DUP3
0x438 MSTORE
0x439 DUP2
0x43a DUP4
0x43b ADD
0x43c SWAP1
0x43d SWAP3
0x43e MSTORE
0x43f SWAP3
0x440 POP
0x441 SWAP1
0x442 POP
0x443 PUSH1 0x20
0x445 DUP1
0x446 DUP4
0x447 ADD
0x448 SWAP1
0x449 DUP1
0x44a CODESIZE
0x44b DUP4
0x44c CODECOPY
0x44d ADD
0x44e SWAP1
0x44f POP
0x450 POP
0x451 SWAP1
0x452 POP
0x453 PUSH1 0x4
0x455 SLOAD
0x456 DUP2
0x457 PUSH1 0x0
0x459 DUP2
0x45a MLOAD
0x45b DUP2
0x45c LT
0x45d ISZERO
0x45e ISZERO
0x45f PUSH2 0x464
0x462 JUMPI
---
0x42d: JUMPDEST 
0x430: V367 = 0x40
0x433: V368 = M[0x40]
0x434: V369 = 0x1
0x438: M[V368] = 0x1
0x43b: V370 = ADD 0x40 V368
0x43e: M[0x40] = V370
0x443: V371 = 0x20
0x447: V372 = ADD V368 0x20
0x44a: V373 = CODESIZE
0x44c: CODECOPY V372 V373 0x20
0x44d: V374 = ADD 0x20 V372
0x453: V375 = 0x4
0x455: V376 = S[0x4]
0x457: V377 = 0x0
0x45a: V378 = M[V368]
0x45c: V379 = LT 0x0 V378
0x45d: V380 = ISZERO V379
0x45e: V381 = ISZERO V380
0x45f: V382 = 0x464
0x462: JUMPI 0x464 V381
---
Entry stack: [V11, 0x77, V50, 0x60, V347, 0xe1fdb4b4, V350, V360]
Stack pops: 5
Stack additions: [V368, V376, V368, 0x0]
Exit stack: [V11, 0x77, V50, V368, V376, V368, 0x0]

================================

Block 0x463
[0x463:0x463]
---
Predecessors: [0x42d]
Successors: []
---
0x463 INVALID
---
0x463: INVALID 
---
Entry stack: [V11, 0x77, V50, V368, V376, V368, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V50, V368, V376, V368, 0x0]

================================

Block 0x464
[0x464:0x4d7]
---
Predecessors: [0x42d]
Successors: [0x4d8]
---
0x464 JUMPDEST
0x465 PUSH1 0x20
0x467 SWAP1
0x468 DUP2
0x469 MUL
0x46a SWAP1
0x46b SWAP2
0x46c ADD
0x46d DUP2
0x46e ADD
0x46f SWAP2
0x470 SWAP1
0x471 SWAP2
0x472 MSTORE
0x473 PUSH1 0x0
0x475 DUP1
0x476 SLOAD
0x477 PUSH1 0x40
0x479 MLOAD
0x47a PUSH32 0xef11554200000000000000000000000000000000000000000000000000000000
0x49b DUP2
0x49c MSTORE
0x49d PUSH1 0x4
0x49f DUP2
0x4a0 ADD
0x4a1 DUP5
0x4a2 DUP2
0x4a3 MSTORE
0x4a4 DUP6
0x4a5 MLOAD
0x4a6 PUSH1 0x24
0x4a8 DUP4
0x4a9 ADD
0x4aa MSTORE
0x4ab DUP6
0x4ac MLOAD
0x4ad PUSH1 0x1
0x4af PUSH1 0xa0
0x4b1 PUSH1 0x2
0x4b3 EXP
0x4b4 SUB
0x4b5 SWAP1
0x4b6 SWAP4
0x4b7 AND
0x4b8 SWAP5
0x4b9 PUSH4 0xef115542
0x4be SWAP5
0x4bf DUP8
0x4c0 SWAP5
0x4c1 SWAP3
0x4c2 SWAP4
0x4c3 DUP5
0x4c4 SWAP4
0x4c5 PUSH1 0x44
0x4c7 SWAP1
0x4c8 SWAP2
0x4c9 ADD
0x4ca SWAP3
0x4cb DUP7
0x4cc DUP2
0x4cd ADD
0x4ce SWAP3
0x4cf SWAP2
0x4d0 MUL
0x4d1 SWAP1
0x4d2 DUP2
0x4d3 SWAP1
0x4d4 DUP5
0x4d5 SWAP1
0x4d6 DUP5
0x4d7 SWAP1
---
0x464: JUMPDEST 
0x465: V383 = 0x20
0x469: V384 = MUL 0x20 0x0
0x46c: V385 = ADD V368 0x0
0x46e: V386 = ADD 0x20 V385
0x472: M[V386] = V376
0x473: V387 = 0x0
0x476: V388 = S[0x0]
0x477: V389 = 0x40
0x479: V390 = M[0x40]
0x47a: V391 = 0xef11554200000000000000000000000000000000000000000000000000000000
0x49c: M[V390] = 0xef11554200000000000000000000000000000000000000000000000000000000
0x49d: V392 = 0x4
0x4a0: V393 = ADD V390 0x4
0x4a3: M[V393] = 0x20
0x4a5: V394 = M[V368]
0x4a6: V395 = 0x24
0x4a9: V396 = ADD V390 0x24
0x4aa: M[V396] = V394
0x4ac: V397 = M[V368]
0x4ad: V398 = 0x1
0x4af: V399 = 0xa0
0x4b1: V400 = 0x2
0x4b3: V401 = EXP 0x2 0xa0
0x4b4: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b7: V403 = AND V388 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V404 = 0xef115542
0x4c5: V405 = 0x44
0x4c9: V406 = ADD V390 0x44
0x4cd: V407 = ADD 0x20 V368
0x4d0: V408 = MUL V397 0x20
---
Entry stack: [V11, 0x77, V50, V368, V376, V368, 0x0]
Stack pops: 4
Stack additions: [S3, V403, 0xef115542, S3, V393, V393, V406, V407, V408, V408, V406, V407, 0x0]
Exit stack: [V11, 0x77, V50, V368, V403, 0xef115542, V368, V393, V393, V406, V407, V408, V408, V406, V407, 0x0]

================================

Block 0x4d8
[0x4d8:0x4e0]
---
Predecessors: [0x464, 0x4e1]
Successors: [0x4e1, 0x4f0]
---
0x4d8 JUMPDEST
0x4d9 DUP4
0x4da DUP2
0x4db LT
0x4dc ISZERO
0x4dd PUSH2 0x4f0
0x4e0 JUMPI
---
0x4d8: JUMPDEST 
0x4db: V409 = LT S0 V408
0x4dc: V410 = ISZERO V409
0x4dd: V411 = 0x4f0
0x4e0: JUMPI 0x4f0 V410
---
Entry stack: [V11, 0x77, V50, V368, V403, 0xef115542, V368, V393, V393, V406, V407, V408, V408, V406, V407, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x77, V50, V368, V403, 0xef115542, V368, V393, V393, V406, V407, V408, V408, V406, V407, S0]

================================

Block 0x4e1
[0x4e1:0x4ef]
---
Predecessors: [0x4d8]
Successors: [0x4d8]
---
0x4e1 DUP2
0x4e2 DUP2
0x4e3 ADD
0x4e4 MLOAD
0x4e5 DUP4
0x4e6 DUP3
0x4e7 ADD
0x4e8 MSTORE
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec PUSH2 0x4d8
0x4ef JUMP
---
0x4e3: V412 = ADD S0 V407
0x4e4: V413 = M[V412]
0x4e7: V414 = ADD S0 V406
0x4e8: M[V414] = V413
0x4e9: V415 = 0x20
0x4eb: V416 = ADD 0x20 S0
0x4ec: V417 = 0x4d8
0x4ef: JUMP 0x4d8
---
Entry stack: [V11, 0x77, V50, V368, V403, 0xef115542, V368, V393, V393, V406, V407, V408, V408, V406, V407, S0]
Stack pops: 3
Stack additions: [S2, S1, V416]
Exit stack: [V11, 0x77, V50, V368, V403, 0xef115542, V368, V393, V393, V406, V407, V408, V408, V406, V407, V416]

================================

Block 0x4f0
[0x4f0:0x510]
---
Predecessors: [0x4d8]
Successors: [0x511, 0x515]
---
0x4f0 JUMPDEST
0x4f1 POP
0x4f2 POP
0x4f3 POP
0x4f4 POP
0x4f5 SWAP1
0x4f6 POP
0x4f7 ADD
0x4f8 SWAP3
0x4f9 POP
0x4fa POP
0x4fb POP
0x4fc PUSH1 0x0
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 DUP1
0x502 DUP4
0x503 SUB
0x504 DUP2
0x505 PUSH1 0x0
0x507 DUP8
0x508 DUP1
0x509 EXTCODESIZE
0x50a ISZERO
0x50b DUP1
0x50c ISZERO
0x50d PUSH2 0x515
0x510 JUMPI
---
0x4f0: JUMPDEST 
0x4f7: V418 = ADD V408 V406
0x4fc: V419 = 0x0
0x4fe: V420 = 0x40
0x500: V421 = M[0x40]
0x503: V422 = SUB V418 V421
0x505: V423 = 0x0
0x509: V424 = EXTCODESIZE V403
0x50a: V425 = ISZERO V424
0x50c: V426 = ISZERO V425
0x50d: V427 = 0x515
0x510: JUMPI 0x515 V426
---
Entry stack: [V11, 0x77, V50, V368, V403, 0xef115542, V368, V393, V393, V406, V407, V408, V408, V406, V407, S0]
Stack pops: 12
Stack additions: [S11, S10, V418, 0x0, V421, V422, V421, 0x0, S11, V425]
Exit stack: [V11, 0x77, V50, V368, V403, 0xef115542, V418, 0x0, V421, V422, V421, 0x0, V403, V425]

================================

Block 0x511
[0x511:0x514]
---
Predecessors: [0x4f0]
Successors: []
---
0x511 PUSH1 0x0
0x513 DUP1
0x514 REVERT
---
0x511: V428 = 0x0
0x514: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V50, V368, V403, 0xef115542, V418, 0x0, V421, V422, V421, 0x0, V403, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V50, V368, V403, 0xef115542, V418, 0x0, V421, V422, V421, 0x0, V403, V425]

================================

Block 0x515
[0x515:0x51f]
---
Predecessors: [0x4f0]
Successors: [0x520, 0x529]
---
0x515 JUMPDEST
0x516 POP
0x517 GAS
0x518 CALL
0x519 ISZERO
0x51a DUP1
0x51b ISZERO
0x51c PUSH2 0x529
0x51f JUMPI
---
0x515: JUMPDEST 
0x517: V429 = GAS
0x518: V430 = CALL V429 V403 0x0 V421 V422 V421 0x0
0x519: V431 = ISZERO V430
0x51b: V432 = ISZERO V431
0x51c: V433 = 0x529
0x51f: JUMPI 0x529 V432
---
Entry stack: [V11, 0x77, V50, V368, V403, 0xef115542, V418, 0x0, V421, V422, V421, 0x0, V403, V425]
Stack pops: 7
Stack additions: [V431]
Exit stack: [V11, 0x77, V50, V368, V403, 0xef115542, V418, V431]

================================

Block 0x520
[0x520:0x528]
---
Predecessors: [0x515]
Successors: []
---
0x520 RETURNDATASIZE
0x521 PUSH1 0x0
0x523 DUP1
0x524 RETURNDATACOPY
0x525 RETURNDATASIZE
0x526 PUSH1 0x0
0x528 REVERT
---
0x520: V434 = RETURNDATASIZE
0x521: V435 = 0x0
0x524: RETURNDATACOPY 0x0 0x0 V434
0x525: V436 = RETURNDATASIZE
0x526: V437 = 0x0
0x528: REVERT 0x0 V436
---
Entry stack: [V11, 0x77, V50, V368, V403, 0xef115542, V418, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V50, V368, V403, 0xef115542, V418, V431]

================================

Block 0x529
[0x529:0x537]
---
Predecessors: [0x515]
Successors: [0x538, 0x53b]
---
0x529 JUMPDEST
0x52a POP
0x52b POP
0x52c POP
0x52d POP
0x52e DUP2
0x52f PUSH1 0x0
0x531 EQ
0x532 DUP1
0x533 ISZERO
0x534 PUSH2 0x53b
0x537 JUMPI
---
0x529: JUMPDEST 
0x52f: V438 = 0x0
0x531: V439 = EQ 0x0 V50
0x533: V440 = ISZERO V439
0x534: V441 = 0x53b
0x537: JUMPI 0x53b V440
---
Entry stack: [V11, 0x77, V50, V368, V403, 0xef115542, V418, V431]
Stack pops: 6
Stack additions: [S5, S4, V439]
Exit stack: [V11, 0x77, V50, V368, V439]

================================

Block 0x538
[0x538:0x53a]
---
Predecessors: [0x529]
Successors: [0x53b]
---
0x538 POP
0x539 CALLVALUE
0x53a ISZERO
---
0x539: V442 = CALLVALUE
0x53a: V443 = ISZERO V442
---
Entry stack: [V11, 0x77, V50, V368, V439]
Stack pops: 1
Stack additions: [V443]
Exit stack: [V11, 0x77, V50, V368, V443]

================================

Block 0x53b
[0x53b:0x540]
---
Predecessors: [0x529, 0x538]
Successors: [0x541, 0x545]
---
0x53b JUMPDEST
0x53c ISZERO
0x53d PUSH2 0x545
0x540 JUMPI
---
0x53b: JUMPDEST 
0x53c: V444 = ISZERO S0
0x53d: V445 = 0x545
0x540: JUMPI 0x545 V444
---
Entry stack: [V11, 0x77, V50, V368, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V50, V368]

================================

Block 0x541
[0x541:0x544]
---
Predecessors: [0x53b]
Successors: [0x545]
---
0x541 ADDRESS
0x542 BALANCE
0x543 SWAP2
0x544 POP
---
0x541: V446 = ADDRESS
0x542: V447 = BALANCE V446
---
Entry stack: [V11, 0x77, V50, V368]
Stack pops: 2
Stack additions: [V447, S0]
Exit stack: [V11, 0x77, V447, V368]

================================

Block 0x545
[0x545:0x54d]
---
Predecessors: [0x53b, 0x541]
Successors: [0x967]
---
0x545 JUMPDEST
0x546 PUSH2 0x54e
0x549 DUP3
0x54a PUSH2 0x967
0x54d JUMP
---
0x545: JUMPDEST 
0x546: V448 = 0x54e
0x54a: V449 = 0x967
0x54d: JUMP 0x967
---
Entry stack: [V11, 0x77, S1, V368]
Stack pops: 2
Stack additions: [S1, S0, 0x54e, S1]
Exit stack: [V11, 0x77, S1, V368, 0x54e, S1]

================================

Block 0x54e
[0x54e:0x551]
---
Predecessors: [0xa96]
Successors: [0x77]
---
0x54e JUMPDEST
0x54f POP
0x550 POP
0x551 JUMP
---
0x54e: JUMPDEST 
0x551: JUMP {0x0, 0x77}
---
Entry stack: [V11, 0x84, S3, {0x0, 0x77}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x84, S3]

================================

Block 0x552
[0x552:0x56a]
---
Predecessors: [0xc4]
Successors: [0x56b, 0x5bc]
---
0x552 JUMPDEST
0x553 PUSH1 0x2
0x555 SLOAD
0x556 PUSH1 0x0
0x558 SWAP1
0x559 PUSH1 0x60
0x55b SWAP1
0x55c PUSH1 0x1
0x55e PUSH1 0xa0
0x560 PUSH1 0x2
0x562 EXP
0x563 SUB
0x564 AND
0x565 CALLER
0x566 EQ
0x567 PUSH2 0x5bc
0x56a JUMPI
---
0x552: JUMPDEST 
0x553: V450 = 0x2
0x555: V451 = S[0x2]
0x556: V452 = 0x0
0x559: V453 = 0x60
0x55c: V454 = 0x1
0x55e: V455 = 0xa0
0x560: V456 = 0x2
0x562: V457 = EXP 0x2 0xa0
0x563: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x564: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x565: V460 = CALLER
0x566: V461 = EQ V460 V459
0x567: V462 = 0x5bc
0x56a: JUMPI 0x5bc V461
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]

================================

Block 0x56b
[0x56b:0x5bb]
---
Predecessors: [0x552]
Successors: []
---
0x56b PUSH1 0x40
0x56d DUP1
0x56e MLOAD
0x56f PUSH1 0xe5
0x571 PUSH1 0x2
0x573 EXP
0x574 PUSH3 0x461bcd
0x578 MUL
0x579 DUP2
0x57a MSTORE
0x57b PUSH1 0x20
0x57d PUSH1 0x4
0x57f DUP3
0x580 ADD
0x581 MSTORE
0x582 PUSH1 0x26
0x584 PUSH1 0x24
0x586 DUP3
0x587 ADD
0x588 MSTORE
0x589 PUSH1 0x0
0x58b DUP1
0x58c MLOAD
0x58d PUSH1 0x20
0x58f PUSH2 0xb5a
0x592 DUP4
0x593 CODECOPY
0x594 DUP2
0x595 MLOAD
0x596 SWAP2
0x597 MSTORE
0x598 PUSH1 0x44
0x59a DUP3
0x59b ADD
0x59c MSTORE
0x59d PUSH1 0x0
0x59f DUP1
0x5a0 MLOAD
0x5a1 PUSH1 0x20
0x5a3 PUSH2 0xb3a
0x5a6 DUP4
0x5a7 CODECOPY
0x5a8 DUP2
0x5a9 MLOAD
0x5aa SWAP2
0x5ab MSTORE
0x5ac PUSH1 0x64
0x5ae DUP3
0x5af ADD
0x5b0 MSTORE
0x5b1 SWAP1
0x5b2 MLOAD
0x5b3 SWAP1
0x5b4 DUP2
0x5b5 SWAP1
0x5b6 SUB
0x5b7 PUSH1 0x84
0x5b9 ADD
0x5ba SWAP1
0x5bb REVERT
---
0x56b: V463 = 0x40
0x56e: V464 = M[0x40]
0x56f: V465 = 0xe5
0x571: V466 = 0x2
0x573: V467 = EXP 0x2 0xe5
0x574: V468 = 0x461bcd
0x578: V469 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x57a: M[V464] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x57b: V470 = 0x20
0x57d: V471 = 0x4
0x580: V472 = ADD V464 0x4
0x581: M[V472] = 0x20
0x582: V473 = 0x26
0x584: V474 = 0x24
0x587: V475 = ADD V464 0x24
0x588: M[V475] = 0x26
0x589: V476 = 0x0
0x58c: V477 = M[0x0]
0x58d: V478 = 0x20
0x58f: V479 = 0xb5a
0x593: CODECOPY 0x0 0xb5a 0x20
0x595: V480 = M[0x0]
0x597: M[0x0] = V477
0x598: V481 = 0x44
0x59b: V482 = ADD V464 0x44
0x59c: M[V482] = V480
0x59d: V483 = 0x0
0x5a0: V484 = M[0x0]
0x5a1: V485 = 0x20
0x5a3: V486 = 0xb3a
0x5a7: CODECOPY 0x0 0xb3a 0x20
0x5a9: V487 = M[0x0]
0x5ab: M[0x0] = V484
0x5ac: V488 = 0x64
0x5af: V489 = ADD V464 0x64
0x5b0: M[V489] = V487
0x5b2: V490 = M[0x40]
0x5b6: V491 = SUB V464 V490
0x5b7: V492 = 0x84
0x5b9: V493 = ADD 0x84 V491
0x5bb: REVERT V490 V493
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]

================================

Block 0x5bc
[0x5bc:0x630]
---
Predecessors: [0x552]
Successors: [0x631]
---
0x5bc JUMPDEST
0x5bd PUSH1 0x5
0x5bf DUP6
0x5c0 SWAP1
0x5c1 SSTORE
0x5c2 PUSH1 0x6
0x5c4 DUP5
0x5c5 SWAP1
0x5c6 SSTORE
0x5c7 PUSH1 0x4
0x5c9 DUP7
0x5ca SWAP1
0x5cb SSTORE
0x5cc PUSH8 0x1000000000000000
0x5d5 DUP8
0x5d6 ADD
0x5d7 PUSH1 0x3
0x5d9 SSTORE
0x5da PUSH1 0x1
0x5dc DUP1
0x5dd SLOAD
0x5de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f3 NOT
0x5f4 AND
0x5f5 PUSH1 0x1
0x5f7 PUSH1 0xa0
0x5f9 PUSH1 0x2
0x5fb EXP
0x5fc SUB
0x5fd DUP6
0x5fe AND
0x5ff OR
0x600 SWAP1
0x601 SSTORE
0x602 PUSH1 0x7
0x604 DUP9
0x605 SWAP1
0x606 SSTORE
0x607 PUSH1 0x40
0x609 DUP1
0x60a MLOAD
0x60b PUSH1 0x20
0x60d DUP1
0x60e DUP3
0x60f ADD
0x610 DUP12
0x611 SWAP1
0x612 MSTORE
0x613 DUP3
0x614 MLOAD
0x615 DUP1
0x616 DUP4
0x617 SUB
0x618 DUP3
0x619 ADD
0x61a DUP2
0x61b MSTORE
0x61c SWAP2
0x61d DUP4
0x61e ADD
0x61f SWAP3
0x620 DUP4
0x621 SWAP1
0x622 MSTORE
0x623 DUP2
0x624 MLOAD
0x625 DUP10
0x626 SWAP4
0x627 SWAP2
0x628 DUP3
0x629 SWAP2
0x62a SWAP1
0x62b DUP5
0x62c ADD
0x62d SWAP1
0x62e DUP1
0x62f DUP4
0x630 DUP4
---
0x5bc: JUMPDEST 
0x5bd: V494 = 0x5
0x5c1: S[0x5] = V64
0x5c2: V495 = 0x6
0x5c6: S[0x6] = V66
0x5c7: V496 = 0x4
0x5cb: S[0x4] = V62
0x5cc: V497 = 0x1000000000000000
0x5d6: V498 = ADD V60 0x1000000000000000
0x5d7: V499 = 0x3
0x5d9: S[0x3] = V498
0x5da: V500 = 0x1
0x5dd: V501 = S[0x1]
0x5de: V502 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f3: V503 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5f4: V504 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V501
0x5f5: V505 = 0x1
0x5f7: V506 = 0xa0
0x5f9: V507 = 0x2
0x5fb: V508 = EXP 0x2 0xa0
0x5fc: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fe: V510 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0x5ff: V511 = OR V510 V504
0x601: S[0x1] = V511
0x602: V512 = 0x7
0x606: S[0x7] = V58
0x607: V513 = 0x40
0x60a: V514 = M[0x40]
0x60b: V515 = 0x20
0x60f: V516 = ADD V514 0x20
0x612: M[V516] = V58
0x614: V517 = M[0x40]
0x617: V518 = SUB V514 V517
0x619: V519 = ADD 0x20 V518
0x61b: M[V517] = V519
0x61e: V520 = ADD 0x40 V514
0x622: M[0x40] = V520
0x624: V521 = M[V517]
0x62c: V522 = ADD V517 0x20
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, S5, V517, V520, V520, V522, V521, V521, V520, V522]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V62, V517, V520, V520, V522, V521, V521, V520, V522]

================================

Block 0x631
[0x631:0x639]
---
Predecessors: [0x5bc, 0x63a]
Successors: [0x63a, 0x650]
---
0x631 JUMPDEST
0x632 PUSH1 0x20
0x634 DUP4
0x635 LT
0x636 PUSH2 0x650
0x639 JUMPI
---
0x631: JUMPDEST 
0x632: V523 = 0x20
0x635: V524 = LT S2 0x20
0x636: V525 = 0x650
0x639: JUMPI 0x650 V524
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V62, V517, V520, V520, V522, V521, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V62, V517, V520, V520, V522, V521, S2, S1, S0]

================================

Block 0x63a
[0x63a:0x64f]
---
Predecessors: [0x631]
Successors: [0x631]
---
0x63a DUP1
0x63b MLOAD
0x63c DUP3
0x63d MSTORE
0x63e PUSH1 0x1f
0x640 NOT
0x641 SWAP1
0x642 SWAP3
0x643 ADD
0x644 SWAP2
0x645 PUSH1 0x20
0x647 SWAP2
0x648 DUP3
0x649 ADD
0x64a SWAP2
0x64b ADD
0x64c PUSH2 0x631
0x64f JUMP
---
0x63b: V526 = M[S0]
0x63d: M[S1] = V526
0x63e: V527 = 0x1f
0x640: V528 = NOT 0x1f
0x643: V529 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x645: V530 = 0x20
0x649: V531 = ADD 0x20 S1
0x64b: V532 = ADD 0x20 S0
0x64c: V533 = 0x631
0x64f: JUMP 0x631
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V62, V517, V520, V520, V522, V521, S2, S1, S0]
Stack pops: 3
Stack additions: [V529, V531, V532]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V62, V517, V520, V520, V522, V521, V529, V531, V532]

================================

Block 0x650
[0x650:0x688]
---
Predecessors: [0x631]
Successors: [0x689, 0x68d]
---
0x650 JUMPDEST
0x651 PUSH1 0x1
0x653 DUP4
0x654 PUSH1 0x20
0x656 SUB
0x657 PUSH2 0x100
0x65a EXP
0x65b SUB
0x65c DUP1
0x65d NOT
0x65e DUP3
0x65f MLOAD
0x660 AND
0x661 DUP2
0x662 DUP5
0x663 MLOAD
0x664 AND
0x665 DUP1
0x666 DUP3
0x667 OR
0x668 DUP6
0x669 MSTORE
0x66a POP
0x66b POP
0x66c POP
0x66d POP
0x66e POP
0x66f POP
0x670 SWAP1
0x671 POP
0x672 ADD
0x673 SWAP2
0x674 POP
0x675 POP
0x676 PUSH1 0x40
0x678 MLOAD
0x679 DUP1
0x67a SWAP2
0x67b SUB
0x67c SWAP1
0x67d SHA3
0x67e PUSH1 0x1
0x680 SWAP1
0x681 DIV
0x682 EQ
0x683 ISZERO
0x684 ISZERO
0x685 PUSH2 0x68d
0x688 JUMPI
---
0x650: JUMPDEST 
0x651: V534 = 0x1
0x654: V535 = 0x20
0x656: V536 = SUB 0x20 S2
0x657: V537 = 0x100
0x65a: V538 = EXP 0x100 V536
0x65b: V539 = SUB V538 0x1
0x65d: V540 = NOT V539
0x65f: V541 = M[S0]
0x660: V542 = AND V541 V540
0x663: V543 = M[S1]
0x664: V544 = AND V543 V539
0x667: V545 = OR V542 V544
0x669: M[S1] = V545
0x672: V546 = ADD V521 V520
0x676: V547 = 0x40
0x678: V548 = M[0x40]
0x67b: V549 = SUB V546 V548
0x67d: V550 = SHA3 V548 V549
0x67e: V551 = 0x1
0x681: V552 = DIV V550 0x1
0x682: V553 = EQ V552 V62
0x683: V554 = ISZERO V553
0x684: V555 = ISZERO V554
0x685: V556 = 0x68d
0x688: JUMPI 0x68d V555
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V62, V517, V520, V520, V522, V521, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]

================================

Block 0x689
[0x689:0x68c]
---
Predecessors: [0x650]
Successors: []
---
0x689 PUSH1 0x0
0x68b DUP1
0x68c REVERT
---
0x689: V557 = 0x0
0x68c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]

================================

Block 0x68d
[0x68d:0x697]
---
Predecessors: [0x650]
Successors: [0x698, 0x6e7]
---
0x68d JUMPDEST
0x68e PUSH1 0x3
0x690 SLOAD
0x691 NUMBER
0x692 GT
0x693 ISZERO
0x694 PUSH2 0x6e7
0x697 JUMPI
---
0x68d: JUMPDEST 
0x68e: V558 = 0x3
0x690: V559 = S[0x3]
0x691: V560 = NUMBER
0x692: V561 = GT V560 V559
0x693: V562 = ISZERO V561
0x694: V563 = 0x6e7
0x697: JUMPI 0x6e7 V562
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]

================================

Block 0x698
[0x698:0x6e6]
---
Predecessors: [0x68d]
Successors: []
---
0x698 PUSH1 0x40
0x69a DUP1
0x69b MLOAD
0x69c PUSH1 0xe5
0x69e PUSH1 0x2
0x6a0 EXP
0x6a1 PUSH3 0x461bcd
0x6a5 MUL
0x6a6 DUP2
0x6a7 MSTORE
0x6a8 PUSH1 0x20
0x6aa PUSH1 0x4
0x6ac DUP3
0x6ad ADD
0x6ae MSTORE
0x6af PUSH1 0x13
0x6b1 PUSH1 0x24
0x6b3 DUP3
0x6b4 ADD
0x6b5 MSTORE
0x6b6 PUSH32 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x6d7 PUSH1 0x44
0x6d9 DUP3
0x6da ADD
0x6db MSTORE
0x6dc SWAP1
0x6dd MLOAD
0x6de SWAP1
0x6df DUP2
0x6e0 SWAP1
0x6e1 SUB
0x6e2 PUSH1 0x64
0x6e4 ADD
0x6e5 SWAP1
0x6e6 REVERT
---
0x698: V564 = 0x40
0x69b: V565 = M[0x40]
0x69c: V566 = 0xe5
0x69e: V567 = 0x2
0x6a0: V568 = EXP 0x2 0xe5
0x6a1: V569 = 0x461bcd
0x6a5: V570 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x6a7: M[V565] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6a8: V571 = 0x20
0x6aa: V572 = 0x4
0x6ad: V573 = ADD V565 0x4
0x6ae: M[V573] = 0x20
0x6af: V574 = 0x13
0x6b1: V575 = 0x24
0x6b4: V576 = ADD V565 0x24
0x6b5: M[V576] = 0x13
0x6b6: V577 = 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x6d7: V578 = 0x44
0x6da: V579 = ADD V565 0x44
0x6db: M[V579] = 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x6dd: V580 = M[0x40]
0x6e1: V581 = SUB V565 V580
0x6e2: V582 = 0x64
0x6e4: V583 = ADD 0x64 V581
0x6e6: REVERT V580 V583
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]

================================

Block 0x6e7
[0x6e7:0x74e]
---
Predecessors: [0x68d]
Successors: [0x74f]
---
0x6e7 JUMPDEST
0x6e8 PUSH1 0x3
0x6ea SLOAD
0x6eb PUSH1 0x4
0x6ed SLOAD
0x6ee PUSH1 0x40
0x6f0 MLOAD
0x6f1 PUSH1 0x20
0x6f3 ADD
0x6f4 DUP1
0x6f5 DUP4
0x6f6 PUSH5 0xffffffffff
0x6fc AND
0x6fd PUSH5 0xffffffffff
0x703 AND
0x704 PUSH28 0x1000000000000000000000000000000000000000000000000000000
0x721 MUL
0x722 DUP2
0x723 MSTORE
0x724 PUSH1 0x5
0x726 ADD
0x727 DUP3
0x728 DUP2
0x729 MSTORE
0x72a PUSH1 0x20
0x72c ADD
0x72d SWAP3
0x72e POP
0x72f POP
0x730 POP
0x731 PUSH1 0x40
0x733 MLOAD
0x734 PUSH1 0x20
0x736 DUP2
0x737 DUP4
0x738 SUB
0x739 SUB
0x73a DUP2
0x73b MSTORE
0x73c SWAP1
0x73d PUSH1 0x40
0x73f MSTORE
0x740 PUSH1 0x40
0x742 MLOAD
0x743 DUP1
0x744 DUP3
0x745 DUP1
0x746 MLOAD
0x747 SWAP1
0x748 PUSH1 0x20
0x74a ADD
0x74b SWAP1
0x74c DUP1
0x74d DUP4
0x74e DUP4
---
0x6e7: JUMPDEST 
0x6e8: V584 = 0x3
0x6ea: V585 = S[0x3]
0x6eb: V586 = 0x4
0x6ed: V587 = S[0x4]
0x6ee: V588 = 0x40
0x6f0: V589 = M[0x40]
0x6f1: V590 = 0x20
0x6f3: V591 = ADD 0x20 V589
0x6f6: V592 = 0xffffffffff
0x6fc: V593 = AND 0xffffffffff V585
0x6fd: V594 = 0xffffffffff
0x703: V595 = AND 0xffffffffff V593
0x704: V596 = 0x1000000000000000000000000000000000000000000000000000000
0x721: V597 = MUL 0x1000000000000000000000000000000000000000000000000000000 V595
0x723: M[V591] = V597
0x724: V598 = 0x5
0x726: V599 = ADD 0x5 V591
0x729: M[V599] = V587
0x72a: V600 = 0x20
0x72c: V601 = ADD 0x20 V599
0x731: V602 = 0x40
0x733: V603 = M[0x40]
0x734: V604 = 0x20
0x738: V605 = SUB V601 V603
0x739: V606 = SUB V605 0x20
0x73b: M[V603] = V606
0x73d: V607 = 0x40
0x73f: M[0x40] = V601
0x740: V608 = 0x40
0x742: V609 = M[0x40]
0x746: V610 = M[V603]
0x748: V611 = 0x20
0x74a: V612 = ADD 0x20 V603
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60]
Stack pops: 0
Stack additions: [V603, V609, V609, V612, V610, V610, V609, V612]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V603, V609, V609, V612, V610, V610, V609, V612]

================================

Block 0x74f
[0x74f:0x757]
---
Predecessors: [0x6e7, 0x758]
Successors: [0x758, 0x76e]
---
0x74f JUMPDEST
0x750 PUSH1 0x20
0x752 DUP4
0x753 LT
0x754 PUSH2 0x76e
0x757 JUMPI
---
0x74f: JUMPDEST 
0x750: V613 = 0x20
0x753: V614 = LT S2 0x20
0x754: V615 = 0x76e
0x757: JUMPI 0x76e V614
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V603, V609, V609, V612, V610, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V603, V609, V609, V612, V610, S2, S1, S0]

================================

Block 0x758
[0x758:0x76d]
---
Predecessors: [0x74f]
Successors: [0x74f]
---
0x758 DUP1
0x759 MLOAD
0x75a DUP3
0x75b MSTORE
0x75c PUSH1 0x1f
0x75e NOT
0x75f SWAP1
0x760 SWAP3
0x761 ADD
0x762 SWAP2
0x763 PUSH1 0x20
0x765 SWAP2
0x766 DUP3
0x767 ADD
0x768 SWAP2
0x769 ADD
0x76a PUSH2 0x74f
0x76d JUMP
---
0x759: V616 = M[S0]
0x75b: M[S1] = V616
0x75c: V617 = 0x1f
0x75e: V618 = NOT 0x1f
0x761: V619 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x763: V620 = 0x20
0x767: V621 = ADD 0x20 S1
0x769: V622 = ADD 0x20 S0
0x76a: V623 = 0x74f
0x76d: JUMP 0x74f
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V603, V609, V609, V612, V610, S2, S1, S0]
Stack pops: 3
Stack additions: [V619, V621, V622]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V603, V609, V609, V612, V610, V619, V621, V622]

================================

Block 0x76e
[0x76e:0x7e7]
---
Predecessors: [0x74f]
Successors: [0x7e8, 0x7f1]
---
0x76e JUMPDEST
0x76f MLOAD
0x770 DUP2
0x771 MLOAD
0x772 PUSH1 0x20
0x774 SWAP4
0x775 DUP5
0x776 SUB
0x777 PUSH2 0x100
0x77a EXP
0x77b PUSH1 0x0
0x77d NOT
0x77e ADD
0x77f DUP1
0x780 NOT
0x781 SWAP1
0x782 SWAP3
0x783 AND
0x784 SWAP2
0x785 AND
0x786 OR
0x787 SWAP1
0x788 MSTORE
0x789 PUSH1 0x40
0x78b DUP1
0x78c MLOAD
0x78d SWAP3
0x78e SWAP1
0x78f SWAP5
0x790 ADD
0x791 DUP3
0x792 SWAP1
0x793 SUB
0x794 DUP3
0x795 SHA3
0x796 PUSH1 0x5
0x798 SLOAD
0x799 PUSH1 0x6
0x79b SLOAD
0x79c PUSH1 0x0
0x79e DUP1
0x79f DUP7
0x7a0 MSTORE
0x7a1 DUP6
0x7a2 DUP6
0x7a3 ADD
0x7a4 DUP1
0x7a5 DUP10
0x7a6 MSTORE
0x7a7 DUP5
0x7a8 SWAP1
0x7a9 MSTORE
0x7aa PUSH1 0x1b
0x7ac DUP7
0x7ad DUP10
0x7ae ADD
0x7af MSTORE
0x7b0 PUSH1 0x60
0x7b2 DUP7
0x7b3 ADD
0x7b4 SWAP3
0x7b5 SWAP1
0x7b6 SWAP3
0x7b7 MSTORE
0x7b8 PUSH1 0x80
0x7ba DUP6
0x7bb ADD
0x7bc MSTORE
0x7bd SWAP5
0x7be MLOAD
0x7bf SWAP1
0x7c0 SWAP9
0x7c1 POP
0x7c2 PUSH1 0x1
0x7c4 SWAP7
0x7c5 POP
0x7c6 PUSH1 0xa0
0x7c8 DUP1
0x7c9 DUP5
0x7ca ADD
0x7cb SWAP7
0x7cc POP
0x7cd SWAP2
0x7ce SWAP5
0x7cf PUSH1 0x1f
0x7d1 NOT
0x7d2 DUP3
0x7d3 ADD
0x7d4 SWAP5
0x7d5 POP
0x7d6 SWAP3
0x7d7 DUP2
0x7d8 SWAP1
0x7d9 SUB
0x7da SWAP1
0x7db SWAP2
0x7dc ADD
0x7dd SWAP2
0x7de DUP7
0x7df GAS
0x7e0 CALL
0x7e1 ISZERO
0x7e2 DUP1
0x7e3 ISZERO
0x7e4 PUSH2 0x7f1
0x7e7 JUMPI
---
0x76e: JUMPDEST 
0x76f: V624 = M[S0]
0x771: V625 = M[S1]
0x772: V626 = 0x20
0x776: V627 = SUB 0x20 S2
0x777: V628 = 0x100
0x77a: V629 = EXP 0x100 V627
0x77b: V630 = 0x0
0x77d: V631 = NOT 0x0
0x77e: V632 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V629
0x780: V633 = NOT V632
0x783: V634 = AND V624 V633
0x785: V635 = AND V632 V625
0x786: V636 = OR V635 V634
0x788: M[S1] = V636
0x789: V637 = 0x40
0x78c: V638 = M[0x40]
0x790: V639 = ADD V609 V610
0x793: V640 = SUB V639 V638
0x795: V641 = SHA3 V638 V640
0x796: V642 = 0x5
0x798: V643 = S[0x5]
0x799: V644 = 0x6
0x79b: V645 = S[0x6]
0x79c: V646 = 0x0
0x7a0: M[V638] = 0x0
0x7a3: V647 = ADD 0x20 V638
0x7a6: M[0x40] = V647
0x7a9: M[V647] = V641
0x7aa: V648 = 0x1b
0x7ae: V649 = ADD 0x40 V638
0x7af: M[V649] = 0x1b
0x7b0: V650 = 0x60
0x7b3: V651 = ADD V638 0x60
0x7b7: M[V651] = V643
0x7b8: V652 = 0x80
0x7bb: V653 = ADD V638 0x80
0x7bc: M[V653] = V645
0x7be: V654 = M[0x40]
0x7c2: V655 = 0x1
0x7c6: V656 = 0xa0
0x7ca: V657 = ADD V638 0xa0
0x7cf: V658 = 0x1f
0x7d1: V659 = NOT 0x1f
0x7d3: V660 = ADD V654 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x7d9: V661 = SUB V638 V654
0x7dc: V662 = ADD 0xa0 V661
0x7df: V663 = GAS
0x7e0: V664 = CALL V663 0x1 0x0 V654 V662 V660 0x20
0x7e1: V665 = ISZERO V664
0x7e3: V666 = ISZERO V665
0x7e4: V667 = 0x7f1
0x7e7: JUMPI 0x7f1 V666
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, 0x0, 0x60, V603, V609, V609, V612, V610, S2, S1, S0]
Stack pops: 10
Stack additions: [V641, S8, 0x1, V657, V665]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, 0x60, 0x1, V657, V665]

================================

Block 0x7e8
[0x7e8:0x7f0]
---
Predecessors: [0x76e]
Successors: []
---
0x7e8 RETURNDATASIZE
0x7e9 PUSH1 0x0
0x7eb DUP1
0x7ec RETURNDATACOPY
0x7ed RETURNDATASIZE
0x7ee PUSH1 0x0
0x7f0 REVERT
---
0x7e8: V668 = RETURNDATASIZE
0x7e9: V669 = 0x0
0x7ec: RETURNDATACOPY 0x0 0x0 V668
0x7ed: V670 = RETURNDATASIZE
0x7ee: V671 = 0x0
0x7f0: REVERT 0x0 V670
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, 0x60, 0x1, V657, V665]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, 0x60, 0x1, V657, V665]

================================

Block 0x7f1
[0x7f1:0x812]
---
Predecessors: [0x76e]
Successors: [0x813, 0x862]
---
0x7f1 JUMPDEST
0x7f2 POP
0x7f3 POP
0x7f4 PUSH1 0x40
0x7f6 MLOAD
0x7f7 PUSH1 0x1f
0x7f9 NOT
0x7fa ADD
0x7fb MLOAD
0x7fc PUSH1 0x1
0x7fe SLOAD
0x7ff PUSH1 0x1
0x801 PUSH1 0xa0
0x803 PUSH1 0x2
0x805 EXP
0x806 SUB
0x807 SWAP1
0x808 DUP2
0x809 AND
0x80a SWAP2
0x80b AND
0x80c EQ
0x80d SWAP1
0x80e POP
0x80f PUSH2 0x862
0x812 JUMPI
---
0x7f1: JUMPDEST 
0x7f4: V672 = 0x40
0x7f6: V673 = M[0x40]
0x7f7: V674 = 0x1f
0x7f9: V675 = NOT 0x1f
0x7fa: V676 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0 V673
0x7fb: V677 = M[V676]
0x7fc: V678 = 0x1
0x7fe: V679 = S[0x1]
0x7ff: V680 = 0x1
0x801: V681 = 0xa0
0x803: V682 = 0x2
0x805: V683 = EXP 0x2 0xa0
0x806: V684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x809: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0x80b: V686 = AND V677 0xffffffffffffffffffffffffffffffffffffffff
0x80c: V687 = EQ V686 V685
0x80f: V688 = 0x862
0x812: JUMPI 0x862 V687
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, 0x60, 0x1, V657, V665]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, 0x60]

================================

Block 0x813
[0x813:0x861]
---
Predecessors: [0x7f1]
Successors: []
---
0x813 PUSH1 0x40
0x815 DUP1
0x816 MLOAD
0x817 PUSH1 0xe5
0x819 PUSH1 0x2
0x81b EXP
0x81c PUSH3 0x461bcd
0x820 MUL
0x821 DUP2
0x822 MSTORE
0x823 PUSH1 0x20
0x825 PUSH1 0x4
0x827 DUP3
0x828 ADD
0x829 MSTORE
0x82a PUSH1 0x1d
0x82c PUSH1 0x24
0x82e DUP3
0x82f ADD
0x830 MSTORE
0x831 PUSH32 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x852 PUSH1 0x44
0x854 DUP3
0x855 ADD
0x856 MSTORE
0x857 SWAP1
0x858 MLOAD
0x859 SWAP1
0x85a DUP2
0x85b SWAP1
0x85c SUB
0x85d PUSH1 0x64
0x85f ADD
0x860 SWAP1
0x861 REVERT
---
0x813: V689 = 0x40
0x816: V690 = M[0x40]
0x817: V691 = 0xe5
0x819: V692 = 0x2
0x81b: V693 = EXP 0x2 0xe5
0x81c: V694 = 0x461bcd
0x820: V695 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x822: M[V690] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x823: V696 = 0x20
0x825: V697 = 0x4
0x828: V698 = ADD V690 0x4
0x829: M[V698] = 0x20
0x82a: V699 = 0x1d
0x82c: V700 = 0x24
0x82f: V701 = ADD V690 0x24
0x830: M[V701] = 0x1d
0x831: V702 = 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x852: V703 = 0x44
0x855: V704 = ADD V690 0x44
0x856: M[V704] = 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x858: V705 = M[0x40]
0x85c: V706 = SUB V690 V705
0x85d: V707 = 0x64
0x85f: V708 = ADD 0x64 V706
0x861: REVERT V705 V708
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, 0x60]

================================

Block 0x862
[0x862:0x892]
---
Predecessors: [0x7f1]
Successors: [0x893, 0x894]
---
0x862 JUMPDEST
0x863 PUSH1 0x40
0x865 DUP1
0x866 MLOAD
0x867 PUSH1 0x1
0x869 DUP1
0x86a DUP3
0x86b MSTORE
0x86c DUP2
0x86d DUP4
0x86e ADD
0x86f SWAP1
0x870 SWAP3
0x871 MSTORE
0x872 SWAP1
0x873 PUSH1 0x20
0x875 DUP1
0x876 DUP4
0x877 ADD
0x878 SWAP1
0x879 DUP1
0x87a CODESIZE
0x87b DUP4
0x87c CODECOPY
0x87d ADD
0x87e SWAP1
0x87f POP
0x880 POP
0x881 SWAP1
0x882 POP
0x883 PUSH1 0x4
0x885 SLOAD
0x886 DUP2
0x887 PUSH1 0x0
0x889 DUP2
0x88a MLOAD
0x88b DUP2
0x88c LT
0x88d ISZERO
0x88e ISZERO
0x88f PUSH2 0x894
0x892 JUMPI
---
0x862: JUMPDEST 
0x863: V709 = 0x40
0x866: V710 = M[0x40]
0x867: V711 = 0x1
0x86b: M[V710] = 0x1
0x86e: V712 = ADD 0x40 V710
0x871: M[0x40] = V712
0x873: V713 = 0x20
0x877: V714 = ADD V710 0x20
0x87a: V715 = CODESIZE
0x87c: CODECOPY V714 V715 0x20
0x87d: V716 = ADD 0x20 V714
0x883: V717 = 0x4
0x885: V718 = S[0x4]
0x887: V719 = 0x0
0x88a: V720 = M[V710]
0x88c: V721 = LT 0x0 V720
0x88d: V722 = ISZERO V721
0x88e: V723 = ISZERO V722
0x88f: V724 = 0x894
0x892: JUMPI 0x894 V723
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, 0x60]
Stack pops: 1
Stack additions: [V710, V718, V710, 0x0]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V718, V710, 0x0]

================================

Block 0x893
[0x893:0x893]
---
Predecessors: [0x862]
Successors: []
---
0x893 INVALID
---
0x893: INVALID 
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V718, V710, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V718, V710, 0x0]

================================

Block 0x894
[0x894:0x907]
---
Predecessors: [0x862]
Successors: [0x908]
---
0x894 JUMPDEST
0x895 PUSH1 0x20
0x897 SWAP1
0x898 DUP2
0x899 MUL
0x89a SWAP1
0x89b SWAP2
0x89c ADD
0x89d DUP2
0x89e ADD
0x89f SWAP2
0x8a0 SWAP1
0x8a1 SWAP2
0x8a2 MSTORE
0x8a3 PUSH1 0x0
0x8a5 DUP1
0x8a6 SLOAD
0x8a7 PUSH1 0x40
0x8a9 MLOAD
0x8aa PUSH32 0xef11554200000000000000000000000000000000000000000000000000000000
0x8cb DUP2
0x8cc MSTORE
0x8cd PUSH1 0x4
0x8cf DUP2
0x8d0 ADD
0x8d1 DUP5
0x8d2 DUP2
0x8d3 MSTORE
0x8d4 DUP6
0x8d5 MLOAD
0x8d6 PUSH1 0x24
0x8d8 DUP4
0x8d9 ADD
0x8da MSTORE
0x8db DUP6
0x8dc MLOAD
0x8dd PUSH1 0x1
0x8df PUSH1 0xa0
0x8e1 PUSH1 0x2
0x8e3 EXP
0x8e4 SUB
0x8e5 SWAP1
0x8e6 SWAP4
0x8e7 AND
0x8e8 SWAP5
0x8e9 PUSH4 0xef115542
0x8ee SWAP5
0x8ef DUP8
0x8f0 SWAP5
0x8f1 SWAP3
0x8f2 SWAP4
0x8f3 DUP5
0x8f4 SWAP4
0x8f5 PUSH1 0x44
0x8f7 SWAP1
0x8f8 SWAP2
0x8f9 ADD
0x8fa SWAP3
0x8fb DUP7
0x8fc DUP2
0x8fd ADD
0x8fe SWAP3
0x8ff SWAP2
0x900 MUL
0x901 SWAP1
0x902 DUP2
0x903 SWAP1
0x904 DUP5
0x905 SWAP1
0x906 DUP5
0x907 SWAP1
---
0x894: JUMPDEST 
0x895: V725 = 0x20
0x899: V726 = MUL 0x20 0x0
0x89c: V727 = ADD V710 0x0
0x89e: V728 = ADD 0x20 V727
0x8a2: M[V728] = V718
0x8a3: V729 = 0x0
0x8a6: V730 = S[0x0]
0x8a7: V731 = 0x40
0x8a9: V732 = M[0x40]
0x8aa: V733 = 0xef11554200000000000000000000000000000000000000000000000000000000
0x8cc: M[V732] = 0xef11554200000000000000000000000000000000000000000000000000000000
0x8cd: V734 = 0x4
0x8d0: V735 = ADD V732 0x4
0x8d3: M[V735] = 0x20
0x8d5: V736 = M[V710]
0x8d6: V737 = 0x24
0x8d9: V738 = ADD V732 0x24
0x8da: M[V738] = V736
0x8dc: V739 = M[V710]
0x8dd: V740 = 0x1
0x8df: V741 = 0xa0
0x8e1: V742 = 0x2
0x8e3: V743 = EXP 0x2 0xa0
0x8e4: V744 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e7: V745 = AND V730 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: V746 = 0xef115542
0x8f5: V747 = 0x44
0x8f9: V748 = ADD V732 0x44
0x8fd: V749 = ADD 0x20 V710
0x900: V750 = MUL V739 0x20
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V718, V710, 0x0]
Stack pops: 4
Stack additions: [S3, V745, 0xef115542, S3, V735, V735, V748, V749, V750, V750, V748, V749, 0x0]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V710, V735, V735, V748, V749, V750, V750, V748, V749, 0x0]

================================

Block 0x908
[0x908:0x910]
---
Predecessors: [0x894, 0x911]
Successors: [0x911, 0x920]
---
0x908 JUMPDEST
0x909 DUP4
0x90a DUP2
0x90b LT
0x90c ISZERO
0x90d PUSH2 0x920
0x910 JUMPI
---
0x908: JUMPDEST 
0x90b: V751 = LT S0 V750
0x90c: V752 = ISZERO V751
0x90d: V753 = 0x920
0x910: JUMPI 0x920 V752
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V710, V735, V735, V748, V749, V750, V750, V748, V749, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V710, V735, V735, V748, V749, V750, V750, V748, V749, S0]

================================

Block 0x911
[0x911:0x91f]
---
Predecessors: [0x908]
Successors: [0x908]
---
0x911 DUP2
0x912 DUP2
0x913 ADD
0x914 MLOAD
0x915 DUP4
0x916 DUP3
0x917 ADD
0x918 MSTORE
0x919 PUSH1 0x20
0x91b ADD
0x91c PUSH2 0x908
0x91f JUMP
---
0x913: V754 = ADD S0 V749
0x914: V755 = M[V754]
0x917: V756 = ADD S0 V748
0x918: M[V756] = V755
0x919: V757 = 0x20
0x91b: V758 = ADD 0x20 S0
0x91c: V759 = 0x908
0x91f: JUMP 0x908
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V710, V735, V735, V748, V749, V750, V750, V748, V749, S0]
Stack pops: 3
Stack additions: [S2, S1, V758]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V710, V735, V735, V748, V749, V750, V750, V748, V749, V758]

================================

Block 0x920
[0x920:0x940]
---
Predecessors: [0x908]
Successors: [0x941, 0x945]
---
0x920 JUMPDEST
0x921 POP
0x922 POP
0x923 POP
0x924 POP
0x925 SWAP1
0x926 POP
0x927 ADD
0x928 SWAP3
0x929 POP
0x92a POP
0x92b POP
0x92c PUSH1 0x0
0x92e PUSH1 0x40
0x930 MLOAD
0x931 DUP1
0x932 DUP4
0x933 SUB
0x934 DUP2
0x935 PUSH1 0x0
0x937 DUP8
0x938 DUP1
0x939 EXTCODESIZE
0x93a ISZERO
0x93b DUP1
0x93c ISZERO
0x93d PUSH2 0x945
0x940 JUMPI
---
0x920: JUMPDEST 
0x927: V760 = ADD V750 V748
0x92c: V761 = 0x0
0x92e: V762 = 0x40
0x930: V763 = M[0x40]
0x933: V764 = SUB V760 V763
0x935: V765 = 0x0
0x939: V766 = EXTCODESIZE V745
0x93a: V767 = ISZERO V766
0x93c: V768 = ISZERO V767
0x93d: V769 = 0x945
0x940: JUMPI 0x945 V768
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V710, V735, V735, V748, V749, V750, V750, V748, V749, S0]
Stack pops: 12
Stack additions: [S11, S10, V760, 0x0, V763, V764, V763, 0x0, S11, V767]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V760, 0x0, V763, V764, V763, 0x0, V745, V767]

================================

Block 0x941
[0x941:0x944]
---
Predecessors: [0x920]
Successors: []
---
0x941 PUSH1 0x0
0x943 DUP1
0x944 REVERT
---
0x941: V770 = 0x0
0x944: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V760, 0x0, V763, V764, V763, 0x0, V745, V767]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V760, 0x0, V763, V764, V763, 0x0, V745, V767]

================================

Block 0x945
[0x945:0x94f]
---
Predecessors: [0x920]
Successors: [0x950, 0x959]
---
0x945 JUMPDEST
0x946 POP
0x947 GAS
0x948 CALL
0x949 ISZERO
0x94a DUP1
0x94b ISZERO
0x94c PUSH2 0x959
0x94f JUMPI
---
0x945: JUMPDEST 
0x947: V771 = GAS
0x948: V772 = CALL V771 V745 0x0 V763 V764 V763 0x0
0x949: V773 = ISZERO V772
0x94b: V774 = ISZERO V773
0x94c: V775 = 0x959
0x94f: JUMPI 0x959 V774
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V760, 0x0, V763, V764, V763, 0x0, V745, V767]
Stack pops: 7
Stack additions: [V773]
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V760, V773]

================================

Block 0x950
[0x950:0x958]
---
Predecessors: [0x945]
Successors: []
---
0x950 RETURNDATASIZE
0x951 PUSH1 0x0
0x953 DUP1
0x954 RETURNDATACOPY
0x955 RETURNDATASIZE
0x956 PUSH1 0x0
0x958 REVERT
---
0x950: V776 = RETURNDATASIZE
0x951: V777 = 0x0
0x954: RETURNDATACOPY 0x0 0x0 V776
0x955: V778 = RETURNDATASIZE
0x956: V779 = 0x0
0x958: REVERT 0x0 V778
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V760, V773]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V760, V773]

================================

Block 0x959
[0x959:0x966]
---
Predecessors: [0x945]
Successors: [0x77]
---
0x959 JUMPDEST
0x95a POP
0x95b POP
0x95c POP
0x95d POP
0x95e POP
0x95f POP
0x960 POP
0x961 POP
0x962 POP
0x963 POP
0x964 POP
0x965 POP
0x966 JUMP
---
0x959: JUMPDEST 
0x966: JUMP 0x77
---
Entry stack: [V11, 0x77, V58, V60, V62, V64, V66, V74, V641, V710, V745, 0xef115542, V760, V773]
Stack pops: 13
Stack additions: []
Exit stack: [V11]

================================

Block 0x967
[0x967:0x979]
---
Predecessors: [0xe8, 0x2bc, 0x545]
Successors: [0x97a, 0x9cb]
---
0x967 JUMPDEST
0x968 PUSH1 0x2
0x96a SLOAD
0x96b PUSH1 0x1
0x96d PUSH1 0xa0
0x96f PUSH1 0x2
0x971 EXP
0x972 SUB
0x973 AND
0x974 CALLER
0x975 EQ
0x976 PUSH2 0x9cb
0x979 JUMPI
---
0x967: JUMPDEST 
0x968: V780 = 0x2
0x96a: V781 = S[0x2]
0x96b: V782 = 0x1
0x96d: V783 = 0xa0
0x96f: V784 = 0x2
0x971: V785 = EXP 0x2 0xa0
0x972: V786 = SUB 0x10000000000000000000000000000000000000000 0x1
0x973: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0x974: V788 = CALLER
0x975: V789 = EQ V788 V787
0x976: V790 = 0x9cb
0x979: JUMPI 0x9cb V789
---
Entry stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, S0]

================================

Block 0x97a
[0x97a:0x9ca]
---
Predecessors: [0x967]
Successors: []
---
0x97a PUSH1 0x40
0x97c DUP1
0x97d MLOAD
0x97e PUSH1 0xe5
0x980 PUSH1 0x2
0x982 EXP
0x983 PUSH3 0x461bcd
0x987 MUL
0x988 DUP2
0x989 MSTORE
0x98a PUSH1 0x20
0x98c PUSH1 0x4
0x98e DUP3
0x98f ADD
0x990 MSTORE
0x991 PUSH1 0x26
0x993 PUSH1 0x24
0x995 DUP3
0x996 ADD
0x997 MSTORE
0x998 PUSH1 0x0
0x99a DUP1
0x99b MLOAD
0x99c PUSH1 0x20
0x99e PUSH2 0xb5a
0x9a1 DUP4
0x9a2 CODECOPY
0x9a3 DUP2
0x9a4 MLOAD
0x9a5 SWAP2
0x9a6 MSTORE
0x9a7 PUSH1 0x44
0x9a9 DUP3
0x9aa ADD
0x9ab MSTORE
0x9ac PUSH1 0x0
0x9ae DUP1
0x9af MLOAD
0x9b0 PUSH1 0x20
0x9b2 PUSH2 0xb3a
0x9b5 DUP4
0x9b6 CODECOPY
0x9b7 DUP2
0x9b8 MLOAD
0x9b9 SWAP2
0x9ba MSTORE
0x9bb PUSH1 0x64
0x9bd DUP3
0x9be ADD
0x9bf MSTORE
0x9c0 SWAP1
0x9c1 MLOAD
0x9c2 SWAP1
0x9c3 DUP2
0x9c4 SWAP1
0x9c5 SUB
0x9c6 PUSH1 0x84
0x9c8 ADD
0x9c9 SWAP1
0x9ca REVERT
---
0x97a: V791 = 0x40
0x97d: V792 = M[0x40]
0x97e: V793 = 0xe5
0x980: V794 = 0x2
0x982: V795 = EXP 0x2 0xe5
0x983: V796 = 0x461bcd
0x987: V797 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x989: M[V792] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x98a: V798 = 0x20
0x98c: V799 = 0x4
0x98f: V800 = ADD V792 0x4
0x990: M[V800] = 0x20
0x991: V801 = 0x26
0x993: V802 = 0x24
0x996: V803 = ADD V792 0x24
0x997: M[V803] = 0x26
0x998: V804 = 0x0
0x99b: V805 = M[0x0]
0x99c: V806 = 0x20
0x99e: V807 = 0xb5a
0x9a2: CODECOPY 0x0 0xb5a 0x20
0x9a4: V808 = M[0x0]
0x9a6: M[0x0] = V805
0x9a7: V809 = 0x44
0x9aa: V810 = ADD V792 0x44
0x9ab: M[V810] = V808
0x9ac: V811 = 0x0
0x9af: V812 = M[0x0]
0x9b0: V813 = 0x20
0x9b2: V814 = 0xb3a
0x9b6: CODECOPY 0x0 0xb3a 0x20
0x9b8: V815 = M[0x0]
0x9ba: M[0x0] = V812
0x9bb: V816 = 0x64
0x9be: V817 = ADD V792 0x64
0x9bf: M[V817] = V815
0x9c1: V818 = M[0x40]
0x9c5: V819 = SUB V792 V818
0x9c6: V820 = 0x84
0x9c8: V821 = ADD 0x84 V819
0x9ca: REVERT V818 V821
---
Entry stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, S0]

================================

Block 0x9cb
[0x9cb:0x9d2]
---
Predecessors: [0x967]
Successors: [0x9d3, 0x9d5]
---
0x9cb JUMPDEST
0x9cc DUP1
0x9cd ISZERO
0x9ce ISZERO
0x9cf PUSH2 0x9d5
0x9d2 JUMPI
---
0x9cb: JUMPDEST 
0x9cd: V822 = ISZERO S0
0x9ce: V823 = ISZERO V822
0x9cf: V824 = 0x9d5
0x9d2: JUMPI 0x9d5 V823
---
Entry stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, S0]

================================

Block 0x9d3
[0x9d3:0x9d4]
---
Predecessors: [0x9cb]
Successors: [0x9d5]
---
0x9d3 POP
0x9d4 CALLVALUE
---
0x9d4: V825 = CALLVALUE
---
Entry stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, S0]
Stack pops: 1
Stack additions: [V825]
Exit stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, V825]

================================

Block 0x9d5
[0x9d5:0xa7d]
---
Predecessors: [0x9cb, 0x9d3]
Successors: [0xa7e, 0xa82]
---
0x9d5 JUMPDEST
0x9d6 PUSH1 0x8
0x9d8 DUP1
0x9d9 SLOAD
0x9da PUSH5 0xffffffffff
0x9e0 NOT
0x9e1 AND
0x9e2 NUMBER
0x9e3 PUSH5 0xffffffffff
0x9e9 AND
0x9ea OR
0x9eb SWAP1
0x9ec SSTORE
0x9ed PUSH1 0x0
0x9ef DUP1
0x9f0 SLOAD
0x9f1 PUSH1 0x3
0x9f3 SLOAD
0x9f4 PUSH1 0x4
0x9f6 DUP1
0x9f7 SLOAD
0x9f8 PUSH1 0x5
0x9fa SLOAD
0x9fb PUSH1 0x6
0x9fd SLOAD
0x9fe PUSH1 0x40
0xa00 DUP1
0xa01 MLOAD
0xa02 PUSH32 0x5e83b46300000000000000000000000000000000000000000000000000000000
0xa23 DUP2
0xa24 MSTORE
0xa25 PUSH1 0x32
0xa27 SWAP6
0xa28 DUP2
0xa29 ADD
0xa2a SWAP6
0xa2b SWAP1
0xa2c SWAP6
0xa2d MSTORE
0xa2e PUSH1 0x64
0xa30 PUSH1 0x24
0xa32 DUP7
0xa33 ADD
0xa34 DUP2
0xa35 SWAP1
0xa36 MSTORE
0xa37 PUSH1 0x44
0xa39 DUP7
0xa3a ADD
0xa3b SWAP7
0xa3c SWAP1
0xa3d SWAP7
0xa3e MSTORE
0xa3f SWAP5
0xa40 DUP5
0xa41 ADD
0xa42 SWAP3
0xa43 SWAP1
0xa44 SWAP3
0xa45 MSTORE
0xa46 PUSH1 0x84
0xa48 DUP4
0xa49 ADD
0xa4a MSTORE
0xa4b PUSH1 0xa4
0xa4d DUP3
0xa4e ADD
0xa4f MSTORE
0xa50 SWAP1
0xa51 MLOAD
0xa52 PUSH1 0x1
0xa54 PUSH1 0xa0
0xa56 PUSH1 0x2
0xa58 EXP
0xa59 SUB
0xa5a SWAP1
0xa5b SWAP3
0xa5c AND
0xa5d SWAP3
0xa5e PUSH4 0x5e83b463
0xa63 SWAP3
0xa64 DUP6
0xa65 SWAP3
0xa66 PUSH1 0xc4
0xa68 DUP1
0xa69 DUP3
0xa6a ADD
0xa6b SWAP4
0xa6c SWAP3
0xa6d SWAP2
0xa6e DUP3
0xa6f SWAP1
0xa70 SUB
0xa71 ADD
0xa72 DUP2
0xa73 DUP6
0xa74 DUP9
0xa75 DUP1
0xa76 EXTCODESIZE
0xa77 ISZERO
0xa78 DUP1
0xa79 ISZERO
0xa7a PUSH2 0xa82
0xa7d JUMPI
---
0x9d5: JUMPDEST 
0x9d6: V826 = 0x8
0x9d9: V827 = S[0x8]
0x9da: V828 = 0xffffffffff
0x9e0: V829 = NOT 0xffffffffff
0x9e1: V830 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000 V827
0x9e2: V831 = NUMBER
0x9e3: V832 = 0xffffffffff
0x9e9: V833 = AND 0xffffffffff V831
0x9ea: V834 = OR V833 V830
0x9ec: S[0x8] = V834
0x9ed: V835 = 0x0
0x9f0: V836 = S[0x0]
0x9f1: V837 = 0x3
0x9f3: V838 = S[0x3]
0x9f4: V839 = 0x4
0x9f7: V840 = S[0x4]
0x9f8: V841 = 0x5
0x9fa: V842 = S[0x5]
0x9fb: V843 = 0x6
0x9fd: V844 = S[0x6]
0x9fe: V845 = 0x40
0xa01: V846 = M[0x40]
0xa02: V847 = 0x5e83b46300000000000000000000000000000000000000000000000000000000
0xa24: M[V846] = 0x5e83b46300000000000000000000000000000000000000000000000000000000
0xa25: V848 = 0x32
0xa29: V849 = ADD V846 0x4
0xa2d: M[V849] = 0x32
0xa2e: V850 = 0x64
0xa30: V851 = 0x24
0xa33: V852 = ADD V846 0x24
0xa36: M[V852] = 0x64
0xa37: V853 = 0x44
0xa3a: V854 = ADD V846 0x44
0xa3e: M[V854] = V838
0xa41: V855 = ADD V846 0x64
0xa45: M[V855] = V840
0xa46: V856 = 0x84
0xa49: V857 = ADD V846 0x84
0xa4a: M[V857] = V842
0xa4b: V858 = 0xa4
0xa4e: V859 = ADD V846 0xa4
0xa4f: M[V859] = V844
0xa51: V860 = M[0x40]
0xa52: V861 = 0x1
0xa54: V862 = 0xa0
0xa56: V863 = 0x2
0xa58: V864 = EXP 0x2 0xa0
0xa59: V865 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5c: V866 = AND V836 0xffffffffffffffffffffffffffffffffffffffff
0xa5e: V867 = 0x5e83b463
0xa66: V868 = 0xc4
0xa6a: V869 = ADD V846 0xc4
0xa70: V870 = SUB V846 V860
0xa71: V871 = ADD V870 0xc4
0xa76: V872 = EXTCODESIZE V866
0xa77: V873 = ISZERO V872
0xa79: V874 = ISZERO V873
0xa7a: V875 = 0xa82
0xa7d: JUMPI 0xa82 V874
---
Entry stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, S0]
Stack pops: 1
Stack additions: [S0, V866, 0x5e83b463, S0, V869, 0x0, V860, V871, V860, S0, V866, V873]
Exit stack: [V11, 0x84, S5, {0x0, 0x77}, S3, S2, {0x77, 0x2c5, 0x54e}, S0, V866, 0x5e83b463, S0, V869, 0x0, V860, V871, V860, S0, V866, V873]

================================

Block 0xa7e
[0xa7e:0xa81]
---
Predecessors: [0x9d5]
Successors: []
---
0xa7e PUSH1 0x0
0xa80 DUP1
0xa81 REVERT
---
0xa7e: V876 = 0x0
0xa81: REVERT 0x0 0x0
---
Entry stack: [V11, 0x84, S16, {0x0, 0x77}, S14, S13, {0x77, 0x2c5, 0x54e}, S11, V866, 0x5e83b463, S8, V869, 0x0, V860, V871, V860, S2, V866, V873]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, S16, {0x0, 0x77}, S14, S13, {0x77, 0x2c5, 0x54e}, S11, V866, 0x5e83b463, S8, V869, 0x0, V860, V871, V860, S2, V866, V873]

================================

Block 0xa82
[0xa82:0xa8c]
---
Predecessors: [0x9d5]
Successors: [0xa8d, 0xa96]
---
0xa82 JUMPDEST
0xa83 POP
0xa84 GAS
0xa85 CALL
0xa86 ISZERO
0xa87 DUP1
0xa88 ISZERO
0xa89 PUSH2 0xa96
0xa8c JUMPI
---
0xa82: JUMPDEST 
0xa84: V877 = GAS
0xa85: V878 = CALL V877 V866 S2 V860 V871 V860 0x0
0xa86: V879 = ISZERO V878
0xa88: V880 = ISZERO V879
0xa89: V881 = 0xa96
0xa8c: JUMPI 0xa96 V880
---
Entry stack: [V11, 0x84, S16, {0x0, 0x77}, S14, S13, {0x77, 0x2c5, 0x54e}, S11, V866, 0x5e83b463, S8, V869, 0x0, V860, V871, V860, S2, V866, V873]
Stack pops: 7
Stack additions: [V879]
Exit stack: [V11, 0x84, S16, {0x0, 0x77}, S14, S13, {0x77, 0x2c5, 0x54e}, S11, V866, 0x5e83b463, S8, V869, V879]

================================

Block 0xa8d
[0xa8d:0xa95]
---
Predecessors: [0xa82]
Successors: []
---
0xa8d RETURNDATASIZE
0xa8e PUSH1 0x0
0xa90 DUP1
0xa91 RETURNDATACOPY
0xa92 RETURNDATASIZE
0xa93 PUSH1 0x0
0xa95 REVERT
---
0xa8d: V882 = RETURNDATASIZE
0xa8e: V883 = 0x0
0xa91: RETURNDATACOPY 0x0 0x0 V882
0xa92: V884 = RETURNDATASIZE
0xa93: V885 = 0x0
0xa95: REVERT 0x0 V884
---
Entry stack: [V11, 0x84, S10, {0x0, 0x77}, S8, S7, {0x77, 0x2c5, 0x54e}, S5, S4, 0x5e83b463, S2, S1, V879]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, S10, {0x0, 0x77}, S8, S7, {0x77, 0x2c5, 0x54e}, S5, S4, 0x5e83b463, S2, S1, V879]

================================

Block 0xa96
[0xa96:0xa9d]
---
Predecessors: [0xa82]
Successors: [0x77, 0x2c5, 0x54e]
---
0xa96 JUMPDEST
0xa97 POP
0xa98 POP
0xa99 POP
0xa9a POP
0xa9b POP
0xa9c POP
0xa9d JUMP
---
0xa96: JUMPDEST 
0xa9d: JUMP {0x77, 0x2c5, 0x54e}
---
Entry stack: [V11, 0x84, S10, {0x0, 0x77}, S8, S7, {0x77, 0x2c5, 0x54e}, S5, S4, 0x5e83b463, S2, S1, V879]
Stack pops: 7
Stack additions: []
Exit stack: [V11, 0x84, S10, {0x0, 0x77}, S8, S7]

================================

Block 0xa9e
[0xa9e:0xab0]
---
Predecessors: [0xff]
Successors: [0xab1, 0xb02]
---
0xa9e JUMPDEST
0xa9f PUSH1 0x2
0xaa1 SLOAD
0xaa2 PUSH1 0x1
0xaa4 PUSH1 0xa0
0xaa6 PUSH1 0x2
0xaa8 EXP
0xaa9 SUB
0xaaa AND
0xaab CALLER
0xaac EQ
0xaad PUSH2 0xb02
0xab0 JUMPI
---
0xa9e: JUMPDEST 
0xa9f: V886 = 0x2
0xaa1: V887 = S[0x2]
0xaa2: V888 = 0x1
0xaa4: V889 = 0xa0
0xaa6: V890 = 0x2
0xaa8: V891 = EXP 0x2 0xa0
0xaa9: V892 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaaa: V893 = AND 0xffffffffffffffffffffffffffffffffffffffff V887
0xaab: V894 = CALLER
0xaac: V895 = EQ V894 V893
0xaad: V896 = 0xb02
0xab0: JUMPI 0xb02 V895
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0xab1
[0xab1:0xb01]
---
Predecessors: [0xa9e]
Successors: []
---
0xab1 PUSH1 0x40
0xab3 DUP1
0xab4 MLOAD
0xab5 PUSH1 0xe5
0xab7 PUSH1 0x2
0xab9 EXP
0xaba PUSH3 0x461bcd
0xabe MUL
0xabf DUP2
0xac0 MSTORE
0xac1 PUSH1 0x20
0xac3 PUSH1 0x4
0xac5 DUP3
0xac6 ADD
0xac7 MSTORE
0xac8 PUSH1 0x26
0xaca PUSH1 0x24
0xacc DUP3
0xacd ADD
0xace MSTORE
0xacf PUSH1 0x0
0xad1 DUP1
0xad2 MLOAD
0xad3 PUSH1 0x20
0xad5 PUSH2 0xb5a
0xad8 DUP4
0xad9 CODECOPY
0xada DUP2
0xadb MLOAD
0xadc SWAP2
0xadd MSTORE
0xade PUSH1 0x44
0xae0 DUP3
0xae1 ADD
0xae2 MSTORE
0xae3 PUSH1 0x0
0xae5 DUP1
0xae6 MLOAD
0xae7 PUSH1 0x20
0xae9 PUSH2 0xb3a
0xaec DUP4
0xaed CODECOPY
0xaee DUP2
0xaef MLOAD
0xaf0 SWAP2
0xaf1 MSTORE
0xaf2 PUSH1 0x64
0xaf4 DUP3
0xaf5 ADD
0xaf6 MSTORE
0xaf7 SWAP1
0xaf8 MLOAD
0xaf9 SWAP1
0xafa DUP2
0xafb SWAP1
0xafc SUB
0xafd PUSH1 0x84
0xaff ADD
0xb00 SWAP1
0xb01 REVERT
---
0xab1: V897 = 0x40
0xab4: V898 = M[0x40]
0xab5: V899 = 0xe5
0xab7: V900 = 0x2
0xab9: V901 = EXP 0x2 0xe5
0xaba: V902 = 0x461bcd
0xabe: V903 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xac0: M[V898] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xac1: V904 = 0x20
0xac3: V905 = 0x4
0xac6: V906 = ADD V898 0x4
0xac7: M[V906] = 0x20
0xac8: V907 = 0x26
0xaca: V908 = 0x24
0xacd: V909 = ADD V898 0x24
0xace: M[V909] = 0x26
0xacf: V910 = 0x0
0xad2: V911 = M[0x0]
0xad3: V912 = 0x20
0xad5: V913 = 0xb5a
0xad9: CODECOPY 0x0 0xb5a 0x20
0xadb: V914 = M[0x0]
0xadd: M[0x0] = V911
0xade: V915 = 0x44
0xae1: V916 = ADD V898 0x44
0xae2: M[V916] = V914
0xae3: V917 = 0x0
0xae6: V918 = M[0x0]
0xae7: V919 = 0x20
0xae9: V920 = 0xb3a
0xaed: CODECOPY 0x0 0xb3a 0x20
0xaef: V921 = M[0x0]
0xaf1: M[0x0] = V918
0xaf2: V922 = 0x64
0xaf5: V923 = ADD V898 0x64
0xaf6: M[V923] = V921
0xaf8: V924 = M[0x40]
0xafc: V925 = SUB V898 V924
0xafd: V926 = 0x84
0xaff: V927 = ADD 0x84 V925
0xb01: REVERT V924 V927
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0xb02
[0xb02:0xb0f]
---
Predecessors: [0xa9e]
Successors: []
---
0xb02 JUMPDEST
0xb03 PUSH1 0x2
0xb05 SLOAD
0xb06 PUSH1 0x1
0xb08 PUSH1 0xa0
0xb0a PUSH1 0x2
0xb0c EXP
0xb0d SUB
0xb0e AND
0xb0f SELFDESTRUCT
---
0xb02: JUMPDEST 
0xb03: V928 = 0x2
0xb05: V929 = S[0x2]
0xb06: V930 = 0x1
0xb08: V931 = 0xa0
0xb0a: V932 = 0x2
0xb0c: V933 = EXP 0x2 0xa0
0xb0d: V934 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0e: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V929
0xb0f: SELFDESTRUCT V935
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0xb10
[0xb10:0xb38]
---
Predecessors: [0x335]
Successors: [0x34c]
---
0xb10 JUMPDEST
0xb11 PUSH1 0x40
0xb13 MLOAD
0xb14 PUSH1 0x1
0xb16 PUSH1 0xa0
0xb18 PUSH1 0x2
0xb1a EXP
0xb1b SUB
0xb1c DUP4
0xb1d AND
0xb1e SWAP1
0xb1f DUP3
0xb20 ISZERO
0xb21 PUSH2 0x8fc
0xb24 MUL
0xb25 SWAP1
0xb26 DUP4
0xb27 SWAP1
0xb28 PUSH1 0x0
0xb2a DUP2
0xb2b DUP2
0xb2c DUP2
0xb2d DUP6
0xb2e DUP9
0xb2f DUP9
0xb30 CALL
0xb31 POP
0xb32 POP
0xb33 POP
0xb34 POP
0xb35 POP
0xb36 POP
0xb37 POP
0xb38 JUMP
---
0xb10: JUMPDEST 
0xb11: V936 = 0x40
0xb13: V937 = M[0x40]
0xb14: V938 = 0x1
0xb16: V939 = 0xa0
0xb18: V940 = 0x2
0xb1a: V941 = EXP 0x2 0xa0
0xb1b: V942 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1d: V943 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0xb20: V944 = ISZERO V288
0xb21: V945 = 0x8fc
0xb24: V946 = MUL 0x8fc V944
0xb28: V947 = 0x0
0xb30: V948 = CALL V946 V943 V288 V937 0x0 V937 0x0
0xb38: JUMP 0x34c
---
Entry stack: [V11, 0x77, 0x34c, V286, V288]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0xb39
[0xb39:0xba5]
---
Predecessors: []
Successors: []
---
0xb39 STOP
0xb3a PUSH16 0x776e65722e0000000000000000000000
0xb4b STOP
0xb4c STOP
0xb4d STOP
0xb4e STOP
0xb4f STOP
0xb50 STOP
0xb51 STOP
0xb52 STOP
0xb53 STOP
0xb54 STOP
0xb55 STOP
0xb56 STOP
0xb57 STOP
0xb58 STOP
0xb59 STOP
0xb5a MISSING 0x4f
0xb5b PUSH15 0x6c794f776e6572206d6574686f6473
0xb6b SHA3
0xb6c PUSH4 0x616c6c65
0xb71 PUSH5 0x206279206e
0xb77 PUSH16 0x6e2da165627a7a7230582085527b2a45
0xb88 MISSING 0x1e
0xb89 SIGNEXTEND
0xb8a PUSH27 0x6db840eca298d2b7d5ce1d464757f7f8d400cb83381c40e90029
---
0xb39: STOP 
0xb3a: V949 = 0x776e65722e0000000000000000000000
0xb4b: STOP 
0xb4c: STOP 
0xb4d: STOP 
0xb4e: STOP 
0xb4f: STOP 
0xb50: STOP 
0xb51: STOP 
0xb52: STOP 
0xb53: STOP 
0xb54: STOP 
0xb55: STOP 
0xb56: STOP 
0xb57: STOP 
0xb58: STOP 
0xb59: STOP 
0xb5a: MISSING 0x4f
0xb5b: V950 = 0x6c794f776e6572206d6574686f6473
0xb6b: V951 = SHA3 0x6c794f776e6572206d6574686f6473 S0
0xb6c: V952 = 0x616c6c65
0xb71: V953 = 0x206279206e
0xb77: V954 = 0x6e2da165627a7a7230582085527b2a45
0xb88: MISSING 0x1e
0xb89: V955 = SIGNEXTEND S0 S1
0xb8a: V956 = 0x6db840eca298d2b7d5ce1d464757f7f8d400cb83381c40e90029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x776e65722e0000000000000000000000, 0x6e2da165627a7a7230582085527b2a45, 0x206279206e, 0x616c6c65, V951, 0x6db840eca298d2b7d5ce1d464757f7f8d400cb83381c40e90029, V955]
Exit stack: []

================================

Function 0:
Public function signature: 0xb7d796e
Entry block: 0x79
Exit block: 0x297
Body: 0x79, 0x84, 0x108, 0x122, 0x173, 0x1b5, 0x1be, 0x1d4, 0x20d, 0x219, 0x221, 0x288, 0x28c, 0x297, 0x2a0, 0x2af, 0x2b2, 0x2b8, 0x2bc, 0x2c5, 0x2ca

Function 1:
Public function signature: 0x24600fc3
Entry block: 0x98
Exit block: 0x77
Body: 0x77, 0x98, 0xa0, 0xa4, 0x2d1, 0x2e4, 0x335, 0x34c, 0xb10

Function 2:
Public function signature: 0x278ecde1
Entry block: 0xad
Exit block: 0x77
Body: 0x77, 0xad, 0x34e, 0x364, 0x3b5, 0x415, 0x419, 0x424, 0x42d, 0x463, 0x464, 0x4d8, 0x4e1, 0x4f0, 0x511, 0x515, 0x520, 0x529, 0x538, 0x53b, 0x541, 0x545, 0x54e

Function 3:
Public function signature: 0x30ce4895
Entry block: 0xb8
Exit block: 0x77
Body: 0x77, 0xb8, 0xc0, 0xc4, 0x552, 0x56b, 0x5bc, 0x631, 0x63a, 0x650, 0x689, 0x68d, 0x698, 0x6e7, 0x74f, 0x758, 0x76e, 0x7e8, 0x7f1, 0x813, 0x862, 0x893, 0x894, 0x908, 0x911, 0x920, 0x941, 0x945, 0x950, 0x959

Function 4:
Public function signature: 0x35f4581b
Entry block: 0xe8
Exit block: 0x77
Body: 0x77, 0xe8

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0xf3
Exit block: 0xb02
Body: 0xf3, 0xfb, 0xff, 0xa9e, 0xab1, 0xb02

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x967
Exit block: 0xa96
Body: 0x967, 0x9cb, 0x9d3, 0x9d5, 0xa82, 0xa96

