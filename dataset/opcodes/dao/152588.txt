Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x51]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x51
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x51
0xa: JUMPI 0x51 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x8f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1072cbea
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x8f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1072cbea
0x20: V14 = EQ V12 0x1072cbea
0x21: V15 = 0x8f
0x24: JUMPI 0x8f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb3]
---
0x25 DUP1
0x26 PUSH4 0x6c3b58e0
0x2b EQ
0x2c PUSH2 0xb3
0x2f JUMPI
---
0x26: V16 = 0x6c3b58e0
0x2b: V17 = EQ 0x6c3b58e0 V12
0x2c: V18 = 0xb3
0x2f: JUMPI 0xb3 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xe0]
---
0x30 DUP1
0x31 PUSH4 0x73ffd5b7
0x36 EQ
0x37 PUSH2 0xe0
0x3a JUMPI
---
0x31: V19 = 0x73ffd5b7
0x36: V20 = EQ 0x73ffd5b7 V12
0x37: V21 = 0xe0
0x3a: JUMPI 0xe0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xf8]
---
0x3b DUP1
0x3c PUSH4 0x7822ed49
0x41 EQ
0x42 PUSH2 0xf8
0x45 JUMPI
---
0x3c: V22 = 0x7822ed49
0x41: V23 = EQ 0x7822ed49 V12
0x42: V24 = 0xf8
0x45: JUMPI 0xf8 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x127]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x127
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x127
0x50: JUMPI 0x127 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x51]
---
Predecessors: [0x0, 0x46]
Successors: [0x52]
---
0x51 JUMPDEST
---
0x51: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x52
[0x52:0x5a]
---
Predecessors: [0x51]
Successors: [0x5b, 0x5f]
---
0x52 JUMPDEST
0x53 PUSH1 0x0
0x55 CALLVALUE
0x56 GT
0x57 PUSH2 0x5f
0x5a JUMPI
---
0x52: JUMPDEST 
0x53: V28 = 0x0
0x55: V29 = CALLVALUE
0x56: V30 = GT V29 0x0
0x57: V31 = 0x5f
0x5a: JUMPI 0x5f V30
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b
[0x5b:0x5e]
---
Predecessors: [0x52]
Successors: []
---
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5b: V32 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5f
[0x5f:0x8a]
---
Predecessors: [0x52]
Successors: [0x8b, 0x8c]
---
0x5f JUMPDEST
0x60 PUSH1 0x1
0x62 SLOAD
0x63 PUSH1 0x1
0x65 PUSH1 0xa0
0x67 PUSH1 0x2
0x69 EXP
0x6a SUB
0x6b AND
0x6c CALLVALUE
0x6d PUSH1 0x40
0x6f MLOAD
0x70 PUSH1 0x0
0x72 PUSH1 0x40
0x74 MLOAD
0x75 DUP1
0x76 DUP4
0x77 SUB
0x78 DUP2
0x79 DUP6
0x7a DUP8
0x7b PUSH2 0x8796
0x7e GAS
0x7f SUB
0x80 CALL
0x81 SWAP3
0x82 POP
0x83 POP
0x84 POP
0x85 ISZERO
0x86 ISZERO
0x87 PUSH2 0x8c
0x8a JUMPI
---
0x5f: JUMPDEST 
0x60: V33 = 0x1
0x62: V34 = S[0x1]
0x63: V35 = 0x1
0x65: V36 = 0xa0
0x67: V37 = 0x2
0x69: V38 = EXP 0x2 0xa0
0x6a: V39 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x6c: V41 = CALLVALUE
0x6d: V42 = 0x40
0x6f: V43 = M[0x40]
0x70: V44 = 0x0
0x72: V45 = 0x40
0x74: V46 = M[0x40]
0x77: V47 = SUB V43 V46
0x7b: V48 = 0x8796
0x7e: V49 = GAS
0x7f: V50 = SUB V49 0x8796
0x80: V51 = CALL V50 V40 V41 V46 V47 V46 0x0
0x85: V52 = ISZERO V51
0x86: V53 = ISZERO V52
0x87: V54 = 0x8c
0x8a: JUMPI 0x8c V53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x5f]
Successors: []
---
0x8b INVALID
---
0x8b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x8c]
---
Predecessors: [0x5f, 0x2a6, 0x314, 0x3a0]
Successors: [0x8d]
---
0x8c JUMPDEST
---
0x8c: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x8c]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f
[0x8f:0x95]
---
Predecessors: [0xb]
Successors: [0x96, 0x9a]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8f: JUMPDEST 
0x90: V55 = CALLVALUE
0x91: V56 = ISZERO V55
0x92: V57 = 0x9a
0x95: JUMPI 0x9a V56
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8f]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V58 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9a
[0x9a:0xb0]
---
Predecessors: [0x8f]
Successors: [0x156]
---
0x9a JUMPDEST
0x9b PUSH2 0x8c
0x9e PUSH1 0x1
0xa0 PUSH1 0xa0
0xa2 PUSH1 0x2
0xa4 EXP
0xa5 SUB
0xa6 PUSH1 0x4
0xa8 CALLDATALOAD
0xa9 AND
0xaa PUSH1 0x24
0xac CALLDATALOAD
0xad PUSH2 0x156
0xb0 JUMP
---
0x9a: JUMPDEST 
0x9b: V59 = 0x8c
0x9e: V60 = 0x1
0xa0: V61 = 0xa0
0xa2: V62 = 0x2
0xa4: V63 = EXP 0x2 0xa0
0xa5: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6: V65 = 0x4
0xa8: V66 = CALLDATALOAD 0x4
0xa9: V67 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V68 = 0x24
0xac: V69 = CALLDATALOAD 0x24
0xad: V70 = 0x156
0xb0: JUMP 0x156
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8c, V67, V69]
Exit stack: [V12, 0x8c, V67, V69]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: []
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb3
[0xb3:0xb9]
---
Predecessors: [0x25]
Successors: [0xba, 0xbe]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb3: JUMPDEST 
0xb4: V71 = CALLVALUE
0xb5: V72 = ISZERO V71
0xb6: V73 = 0xbe
0xb9: JUMPI 0xbe V72
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb3]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V74 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe
[0xbe:0xdd]
---
Predecessors: [0xb3]
Successors: [0x2ab]
---
0xbe JUMPDEST
0xbf PUSH2 0x8c
0xc2 PUSH1 0x1
0xc4 PUSH1 0xa0
0xc6 PUSH1 0x2
0xc8 EXP
0xc9 SUB
0xca PUSH1 0x4
0xcc CALLDATALOAD
0xcd AND
0xce PUSH1 0x24
0xd0 CALLDATALOAD
0xd1 PUSH1 0x44
0xd3 CALLDATALOAD
0xd4 PUSH1 0x64
0xd6 CALLDATALOAD
0xd7 PUSH1 0x84
0xd9 CALLDATALOAD
0xda PUSH2 0x2ab
0xdd JUMP
---
0xbe: JUMPDEST 
0xbf: V75 = 0x8c
0xc2: V76 = 0x1
0xc4: V77 = 0xa0
0xc6: V78 = 0x2
0xc8: V79 = EXP 0x2 0xa0
0xc9: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca: V81 = 0x4
0xcc: V82 = CALLDATALOAD 0x4
0xcd: V83 = AND V82 0xffffffffffffffffffffffffffffffffffffffff
0xce: V84 = 0x24
0xd0: V85 = CALLDATALOAD 0x24
0xd1: V86 = 0x44
0xd3: V87 = CALLDATALOAD 0x44
0xd4: V88 = 0x64
0xd6: V89 = CALLDATALOAD 0x64
0xd7: V90 = 0x84
0xd9: V91 = CALLDATALOAD 0x84
0xda: V92 = 0x2ab
0xdd: JUMP 0x2ab
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8c, V83, V85, V87, V89, V91]
Exit stack: [V12, 0x8c, V83, V85, V87, V89, V91]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: []
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x30]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V93 = CALLVALUE
0xe2: V94 = ISZERO V93
0xe3: V95 = 0xeb
0xe6: JUMPI 0xeb V94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V96 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0x31b]
---
0xeb JUMPDEST
0xec PUSH2 0x8c
0xef PUSH1 0x4
0xf1 CALLDATALOAD
0xf2 PUSH2 0x31b
0xf5 JUMP
---
0xeb: JUMPDEST 
0xec: V97 = 0x8c
0xef: V98 = 0x4
0xf1: V99 = CALLDATALOAD 0x4
0xf2: V100 = 0x31b
0xf5: JUMP 0x31b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8c, V99]
Exit stack: [V12, 0x8c, V99]

================================

Block 0xf6
[0xf6:0xf7]
---
Predecessors: []
Successors: []
---
0xf6 JUMPDEST
0xf7 STOP
---
0xf6: JUMPDEST 
0xf7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf8
[0xf8:0xfe]
---
Predecessors: [0x3b]
Successors: [0xff, 0x103]
---
0xf8 JUMPDEST
0xf9 CALLVALUE
0xfa ISZERO
0xfb PUSH2 0x103
0xfe JUMPI
---
0xf8: JUMPDEST 
0xf9: V101 = CALLVALUE
0xfa: V102 = ISZERO V101
0xfb: V103 = 0x103
0xfe: JUMPI 0x103 V102
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xff
[0xff:0x102]
---
Predecessors: [0xf8]
Successors: []
---
0xff PUSH1 0x0
0x101 DUP1
0x102 REVERT
---
0xff: V104 = 0x0
0x102: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0xf8]
Successors: [0x3a3]
---
0x103 JUMPDEST
0x104 PUSH2 0x10b
0x107 PUSH2 0x3a3
0x10a JUMP
---
0x103: JUMPDEST 
0x104: V105 = 0x10b
0x107: V106 = 0x3a3
0x10a: JUMP 0x3a3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V12, 0x10b]

================================

Block 0x10b
[0x10b:0x126]
---
Predecessors: [0x3a3, 0x3b2]
Successors: []
---
0x10b JUMPDEST
0x10c PUSH1 0x40
0x10e MLOAD
0x10f PUSH1 0x1
0x111 PUSH1 0xa0
0x113 PUSH1 0x2
0x115 EXP
0x116 SUB
0x117 SWAP1
0x118 SWAP2
0x119 AND
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP1
0x123 SWAP2
0x124 SUB
0x125 SWAP1
0x126 RETURN
---
0x10b: JUMPDEST 
0x10c: V107 = 0x40
0x10e: V108 = M[0x40]
0x10f: V109 = 0x1
0x111: V110 = 0xa0
0x113: V111 = 0x2
0x115: V112 = EXP 0x2 0xa0
0x116: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x119: V114 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x11b: M[V108] = V114
0x11c: V115 = 0x20
0x11e: V116 = ADD 0x20 V108
0x11f: V117 = 0x40
0x121: V118 = M[0x40]
0x124: V119 = SUB V116 V118
0x126: RETURN V118 V119
---
Entry stack: [V12, 0x10b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10b]

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x46]
Successors: [0x12e, 0x132]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x127: JUMPDEST 
0x128: V120 = CALLVALUE
0x129: V121 = ISZERO V120
0x12a: V122 = 0x132
0x12d: JUMPI 0x132 V121
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x127]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V123 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x132
[0x132:0x139]
---
Predecessors: [0x127]
Successors: [0x3b2]
---
0x132 JUMPDEST
0x133 PUSH2 0x10b
0x136 PUSH2 0x3b2
0x139 JUMP
---
0x132: JUMPDEST 
0x133: V124 = 0x10b
0x136: V125 = 0x3b2
0x139: JUMP 0x3b2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V12, 0x10b]

================================

Block 0x13a
[0x13a:0x155]
---
Predecessors: []
Successors: []
---
0x13a JUMPDEST
0x13b PUSH1 0x40
0x13d MLOAD
0x13e PUSH1 0x1
0x140 PUSH1 0xa0
0x142 PUSH1 0x2
0x144 EXP
0x145 SUB
0x146 SWAP1
0x147 SWAP2
0x148 AND
0x149 DUP2
0x14a MSTORE
0x14b PUSH1 0x20
0x14d ADD
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 SWAP2
0x153 SUB
0x154 SWAP1
0x155 RETURN
---
0x13a: JUMPDEST 
0x13b: V126 = 0x40
0x13d: V127 = M[0x40]
0x13e: V128 = 0x1
0x140: V129 = 0xa0
0x142: V130 = 0x2
0x144: V131 = EXP 0x2 0xa0
0x145: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x148: V133 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x14a: M[V127] = V133
0x14b: V134 = 0x20
0x14d: V135 = ADD 0x20 V127
0x14e: V136 = 0x40
0x150: V137 = M[0x40]
0x153: V138 = SUB V135 V137
0x155: RETURN V137 V138
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x156
[0x156:0x16d]
---
Predecessors: [0x9a]
Successors: [0x16e, 0x172]
---
0x156 JUMPDEST
0x157 PUSH1 0x0
0x159 DUP1
0x15a SLOAD
0x15b CALLER
0x15c PUSH1 0x1
0x15e PUSH1 0xa0
0x160 PUSH1 0x2
0x162 EXP
0x163 SUB
0x164 SWAP1
0x165 DUP2
0x166 AND
0x167 SWAP2
0x168 AND
0x169 EQ
0x16a PUSH2 0x172
0x16d JUMPI
---
0x156: JUMPDEST 
0x157: V139 = 0x0
0x15a: V140 = S[0x0]
0x15b: V141 = CALLER
0x15c: V142 = 0x1
0x15e: V143 = 0xa0
0x160: V144 = 0x2
0x162: V145 = EXP 0x2 0xa0
0x163: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x166: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x168: V148 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x169: V149 = EQ V148 V147
0x16a: V150 = 0x172
0x16d: JUMPI 0x172 V149
---
Entry stack: [V12, 0x8c, V67, V69]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x8c, V67, V69, 0x0]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x156]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V151 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V67, V69, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, 0x0]

================================

Block 0x172
[0x172:0x182]
---
Predecessors: [0x156]
Successors: [0x183, 0x184]
---
0x172 JUMPDEST
0x173 PUSH1 0x1
0x175 PUSH1 0xa0
0x177 PUSH1 0x2
0x179 EXP
0x17a SUB
0x17b DUP4
0x17c AND
0x17d ISZERO
0x17e ISZERO
0x17f PUSH2 0x184
0x182 JUMPI
---
0x172: JUMPDEST 
0x173: V152 = 0x1
0x175: V153 = 0xa0
0x177: V154 = 0x2
0x179: V155 = EXP 0x2 0xa0
0x17a: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17c: V157 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V158 = ISZERO V157
0x17e: V159 = ISZERO V158
0x17f: V160 = 0x184
0x182: JUMPI 0x184 V159
---
Entry stack: [V12, 0x8c, V67, V69, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x8c, V67, V69, 0x0]

================================

Block 0x183
[0x183:0x183]
---
Predecessors: [0x172]
Successors: []
---
0x183 INVALID
---
0x183: INVALID 
---
Entry stack: [V12, 0x8c, V67, V69, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, 0x0]

================================

Block 0x184
[0x184:0x1d6]
---
Predecessors: [0x172]
Successors: [0x1d7, 0x1db]
---
0x184 JUMPDEST
0x185 DUP3
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e AND
0x18f PUSH4 0x70a08231
0x194 ADDRESS
0x195 PUSH1 0x0
0x197 PUSH1 0x40
0x199 MLOAD
0x19a PUSH1 0x20
0x19c ADD
0x19d MSTORE
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 PUSH1 0xe0
0x1a3 PUSH1 0x2
0x1a5 EXP
0x1a6 PUSH4 0xffffffff
0x1ab DUP5
0x1ac AND
0x1ad MUL
0x1ae DUP2
0x1af MSTORE
0x1b0 PUSH1 0x1
0x1b2 PUSH1 0xa0
0x1b4 PUSH1 0x2
0x1b6 EXP
0x1b7 SUB
0x1b8 SWAP1
0x1b9 SWAP2
0x1ba AND
0x1bb PUSH1 0x4
0x1bd DUP3
0x1be ADD
0x1bf MSTORE
0x1c0 PUSH1 0x24
0x1c2 ADD
0x1c3 PUSH1 0x20
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 DUP4
0x1ca SUB
0x1cb DUP2
0x1cc PUSH1 0x0
0x1ce DUP8
0x1cf DUP1
0x1d0 EXTCODESIZE
0x1d1 ISZERO
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x184: JUMPDEST 
0x186: V161 = 0x1
0x188: V162 = 0xa0
0x18a: V163 = 0x2
0x18c: V164 = EXP 0x2 0xa0
0x18d: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x18f: V167 = 0x70a08231
0x194: V168 = ADDRESS
0x195: V169 = 0x0
0x197: V170 = 0x40
0x199: V171 = M[0x40]
0x19a: V172 = 0x20
0x19c: V173 = ADD 0x20 V171
0x19d: M[V173] = 0x0
0x19e: V174 = 0x40
0x1a0: V175 = M[0x40]
0x1a1: V176 = 0xe0
0x1a3: V177 = 0x2
0x1a5: V178 = EXP 0x2 0xe0
0x1a6: V179 = 0xffffffff
0x1ac: V180 = AND 0x70a08231 0xffffffff
0x1ad: V181 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x1af: M[V175] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1b0: V182 = 0x1
0x1b2: V183 = 0xa0
0x1b4: V184 = 0x2
0x1b6: V185 = EXP 0x2 0xa0
0x1b7: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ba: V187 = AND V168 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V188 = 0x4
0x1be: V189 = ADD V175 0x4
0x1bf: M[V189] = V187
0x1c0: V190 = 0x24
0x1c2: V191 = ADD 0x24 V175
0x1c3: V192 = 0x20
0x1c5: V193 = 0x40
0x1c7: V194 = M[0x40]
0x1ca: V195 = SUB V191 V194
0x1cc: V196 = 0x0
0x1d0: V197 = EXTCODESIZE V166
0x1d1: V198 = ISZERO V197
0x1d2: V199 = ISZERO V198
0x1d3: V200 = 0x1db
0x1d6: JUMPI 0x1db V199
---
Entry stack: [V12, 0x8c, V67, V69, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V166, 0x70a08231, V191, 0x20, V194, V195, V194, 0x0, V166]
Exit stack: [V12, 0x8c, V67, V69, 0x0, V166, 0x70a08231, V191, 0x20, V194, V195, V194, 0x0, V166]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x184]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V201 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V67, V69, 0x0, V166, 0x70a08231, V191, 0x20, V194, V195, V194, 0x0, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, 0x0, V166, 0x70a08231, V191, 0x20, V194, V195, V194, 0x0, V166]

================================

Block 0x1db
[0x1db:0x1e7]
---
Predecessors: [0x184]
Successors: [0x1e8, 0x1ec]
---
0x1db JUMPDEST
0x1dc PUSH2 0x2c6
0x1df GAS
0x1e0 SUB
0x1e1 CALL
0x1e2 ISZERO
0x1e3 ISZERO
0x1e4 PUSH2 0x1ec
0x1e7 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V202 = 0x2c6
0x1df: V203 = GAS
0x1e0: V204 = SUB V203 0x2c6
0x1e1: V205 = CALL V204 V166 0x0 V194 V195 V194 0x20
0x1e2: V206 = ISZERO V205
0x1e3: V207 = ISZERO V206
0x1e4: V208 = 0x1ec
0x1e7: JUMPI 0x1ec V207
---
Entry stack: [V12, 0x8c, V67, V69, 0x0, V166, 0x70a08231, V191, 0x20, V194, V195, V194, 0x0, V166]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, 0x0, V166, 0x70a08231, V191]

================================

Block 0x1e8
[0x1e8:0x1eb]
---
Predecessors: [0x1db]
Successors: []
---
0x1e8 PUSH1 0x0
0x1ea DUP1
0x1eb REVERT
---
0x1e8: V209 = 0x0
0x1eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V67, V69, 0x0, V166, 0x70a08231, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, 0x0, V166, 0x70a08231, V191]

================================

Block 0x1ec
[0x1ec:0x201]
---
Predecessors: [0x1db]
Successors: [0x202, 0x207]
---
0x1ec JUMPDEST
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 PUSH1 0x40
0x1f2 MLOAD
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 SWAP2
0x1f6 POP
0x1f7 POP
0x1f8 PUSH1 0x0
0x1fa DUP2
0x1fb GT
0x1fc DUP1
0x1fd ISZERO
0x1fe PUSH2 0x207
0x201 JUMPI
---
0x1ec: JUMPDEST 
0x1f0: V210 = 0x40
0x1f2: V211 = M[0x40]
0x1f4: V212 = M[V211]
0x1f8: V213 = 0x0
0x1fb: V214 = GT V212 0x0
0x1fd: V215 = ISZERO V214
0x1fe: V216 = 0x207
0x201: JUMPI 0x207 V215
---
Entry stack: [V12, 0x8c, V67, V69, 0x0, V166, 0x70a08231, V191]
Stack pops: 4
Stack additions: [V212, V214]
Exit stack: [V12, 0x8c, V67, V69, V212, V214]

================================

Block 0x202
[0x202:0x206]
---
Predecessors: [0x1ec]
Successors: [0x207]
---
0x202 POP
0x203 PUSH1 0x0
0x205 DUP3
0x206 GT
---
0x203: V217 = 0x0
0x206: V218 = GT V69 0x0
---
Entry stack: [V12, 0x8c, V67, V69, V212, V214]
Stack pops: 3
Stack additions: [S2, S1, V218]
Exit stack: [V12, 0x8c, V67, V69, V212, V218]

================================

Block 0x207
[0x207:0x20d]
---
Predecessors: [0x1ec, 0x202]
Successors: [0x20e, 0x213]
---
0x207 JUMPDEST
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x213
0x20d JUMPI
---
0x207: JUMPDEST 
0x209: V219 = ISZERO S0
0x20a: V220 = 0x213
0x20d: JUMPI 0x213 V219
---
Entry stack: [V12, 0x8c, V67, V69, V212, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8c, V67, V69, V212, S0]

================================

Block 0x20e
[0x20e:0x212]
---
Predecessors: [0x207]
Successors: [0x213]
---
0x20e POP
0x20f DUP2
0x210 DUP2
0x211 LT
0x212 ISZERO
---
0x211: V221 = LT V212 V69
0x212: V222 = ISZERO V221
---
Entry stack: [V12, 0x8c, V67, V69, V212, S0]
Stack pops: 3
Stack additions: [S2, S1, V222]
Exit stack: [V12, 0x8c, V67, V69, V212, V222]

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0x207, 0x20e]
Successors: [0x21a, 0x21e]
---
0x213 JUMPDEST
0x214 ISZERO
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V223 = ISZERO S0
0x215: V224 = ISZERO V223
0x216: V225 = 0x21e
0x219: JUMPI 0x21e V224
---
Entry stack: [V12, 0x8c, V67, V69, V212, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, V212]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x213]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V226 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V67, V69, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, V212]

================================

Block 0x21e
[0x21e:0x27c]
---
Predecessors: [0x213]
Successors: [0x27d, 0x281]
---
0x21e JUMPDEST
0x21f PUSH1 0x1
0x221 SLOAD
0x222 PUSH1 0x1
0x224 PUSH1 0xa0
0x226 PUSH1 0x2
0x228 EXP
0x229 SUB
0x22a DUP1
0x22b DUP6
0x22c AND
0x22d SWAP2
0x22e PUSH4 0xa9059cbb
0x233 SWAP2
0x234 AND
0x235 DUP5
0x236 PUSH1 0x0
0x238 PUSH1 0x40
0x23a MLOAD
0x23b PUSH1 0x20
0x23d ADD
0x23e MSTORE
0x23f PUSH1 0x40
0x241 MLOAD
0x242 PUSH1 0xe0
0x244 PUSH1 0x2
0x246 EXP
0x247 PUSH4 0xffffffff
0x24c DUP6
0x24d AND
0x24e MUL
0x24f DUP2
0x250 MSTORE
0x251 PUSH1 0x1
0x253 PUSH1 0xa0
0x255 PUSH1 0x2
0x257 EXP
0x258 SUB
0x259 SWAP1
0x25a SWAP3
0x25b AND
0x25c PUSH1 0x4
0x25e DUP4
0x25f ADD
0x260 MSTORE
0x261 PUSH1 0x24
0x263 DUP3
0x264 ADD
0x265 MSTORE
0x266 PUSH1 0x44
0x268 ADD
0x269 PUSH1 0x20
0x26b PUSH1 0x40
0x26d MLOAD
0x26e DUP1
0x26f DUP4
0x270 SUB
0x271 DUP2
0x272 PUSH1 0x0
0x274 DUP8
0x275 DUP1
0x276 EXTCODESIZE
0x277 ISZERO
0x278 ISZERO
0x279 PUSH2 0x281
0x27c JUMPI
---
0x21e: JUMPDEST 
0x21f: V227 = 0x1
0x221: V228 = S[0x1]
0x222: V229 = 0x1
0x224: V230 = 0xa0
0x226: V231 = 0x2
0x228: V232 = EXP 0x2 0xa0
0x229: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22c: V234 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V235 = 0xa9059cbb
0x234: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x236: V237 = 0x0
0x238: V238 = 0x40
0x23a: V239 = M[0x40]
0x23b: V240 = 0x20
0x23d: V241 = ADD 0x20 V239
0x23e: M[V241] = 0x0
0x23f: V242 = 0x40
0x241: V243 = M[0x40]
0x242: V244 = 0xe0
0x244: V245 = 0x2
0x246: V246 = EXP 0x2 0xe0
0x247: V247 = 0xffffffff
0x24d: V248 = AND 0xa9059cbb 0xffffffff
0x24e: V249 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x250: M[V243] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x251: V250 = 0x1
0x253: V251 = 0xa0
0x255: V252 = 0x2
0x257: V253 = EXP 0x2 0xa0
0x258: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25b: V255 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V256 = 0x4
0x25f: V257 = ADD V243 0x4
0x260: M[V257] = V255
0x261: V258 = 0x24
0x264: V259 = ADD V243 0x24
0x265: M[V259] = V69
0x266: V260 = 0x44
0x268: V261 = ADD 0x44 V243
0x269: V262 = 0x20
0x26b: V263 = 0x40
0x26d: V264 = M[0x40]
0x270: V265 = SUB V261 V264
0x272: V266 = 0x0
0x276: V267 = EXTCODESIZE V234
0x277: V268 = ISZERO V267
0x278: V269 = ISZERO V268
0x279: V270 = 0x281
0x27c: JUMPI 0x281 V269
---
Entry stack: [V12, 0x8c, V67, V69, V212]
Stack pops: 3
Stack additions: [S2, S1, S0, V234, 0xa9059cbb, V261, 0x20, V264, V265, V264, 0x0, V234]
Exit stack: [V12, 0x8c, V67, V69, V212, V234, 0xa9059cbb, V261, 0x20, V264, V265, V264, 0x0, V234]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x21e]
Successors: []
---
0x27d PUSH1 0x0
0x27f DUP1
0x280 REVERT
---
0x27d: V271 = 0x0
0x280: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V67, V69, V212, V234, 0xa9059cbb, V261, 0x20, V264, V265, V264, 0x0, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, V212, V234, 0xa9059cbb, V261, 0x20, V264, V265, V264, 0x0, V234]

================================

Block 0x281
[0x281:0x28d]
---
Predecessors: [0x21e]
Successors: [0x28e, 0x292]
---
0x281 JUMPDEST
0x282 PUSH2 0x2c6
0x285 GAS
0x286 SUB
0x287 CALL
0x288 ISZERO
0x289 ISZERO
0x28a PUSH2 0x292
0x28d JUMPI
---
0x281: JUMPDEST 
0x282: V272 = 0x2c6
0x285: V273 = GAS
0x286: V274 = SUB V273 0x2c6
0x287: V275 = CALL V274 V234 0x0 V264 V265 V264 0x20
0x288: V276 = ISZERO V275
0x289: V277 = ISZERO V276
0x28a: V278 = 0x292
0x28d: JUMPI 0x292 V277
---
Entry stack: [V12, 0x8c, V67, V69, V212, V234, 0xa9059cbb, V261, 0x20, V264, V265, V264, 0x0, V234]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, V212, V234, 0xa9059cbb, V261]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x281]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V279 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V67, V69, V212, V234, 0xa9059cbb, V261]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, V212, V234, 0xa9059cbb, V261]

================================

Block 0x292
[0x292:0x2a2]
---
Predecessors: [0x281]
Successors: [0x2a3, 0x2a4]
---
0x292 JUMPDEST
0x293 POP
0x294 POP
0x295 POP
0x296 PUSH1 0x40
0x298 MLOAD
0x299 DUP1
0x29a MLOAD
0x29b SWAP1
0x29c POP
0x29d ISZERO
0x29e ISZERO
0x29f PUSH2 0x2a4
0x2a2 JUMPI
---
0x292: JUMPDEST 
0x296: V280 = 0x40
0x298: V281 = M[0x40]
0x29a: V282 = M[V281]
0x29d: V283 = ISZERO V282
0x29e: V284 = ISZERO V283
0x29f: V285 = 0x2a4
0x2a2: JUMPI 0x2a4 V284
---
Entry stack: [V12, 0x8c, V67, V69, V212, V234, 0xa9059cbb, V261]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, V212]

================================

Block 0x2a3
[0x2a3:0x2a3]
---
Predecessors: [0x292]
Successors: []
---
0x2a3 INVALID
---
0x2a3: INVALID 
---
Entry stack: [V12, 0x8c, V67, V69, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, V212]

================================

Block 0x2a4
[0x2a4:0x2a4]
---
Predecessors: [0x292]
Successors: [0x2a5]
---
0x2a4 JUMPDEST
---
0x2a4: JUMPDEST 
---
Entry stack: [V12, 0x8c, V67, V69, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, V212]

================================

Block 0x2a5
[0x2a5:0x2a5]
---
Predecessors: [0x2a4]
Successors: [0x2a6]
---
0x2a5 JUMPDEST
---
0x2a5: JUMPDEST 
---
Entry stack: [V12, 0x8c, V67, V69, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V67, V69, V212]

================================

Block 0x2a6
[0x2a6:0x2aa]
---
Predecessors: [0x2a5]
Successors: [0x8c]
---
0x2a6 JUMPDEST
0x2a7 POP
0x2a8 POP
0x2a9 POP
0x2aa JUMP
---
0x2a6: JUMPDEST 
0x2aa: JUMP 0x8c
---
Entry stack: [V12, 0x8c, V67, V69, V212]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ab
[0x2ab:0x2c1]
---
Predecessors: [0xbe]
Successors: [0x2c2, 0x2c6]
---
0x2ab JUMPDEST
0x2ac PUSH1 0x0
0x2ae SLOAD
0x2af CALLER
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 SWAP1
0x2b9 DUP2
0x2ba AND
0x2bb SWAP2
0x2bc AND
0x2bd EQ
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V286 = 0x0
0x2ae: V287 = S[0x0]
0x2af: V288 = CALLER
0x2b0: V289 = 0x1
0x2b2: V290 = 0xa0
0x2b4: V291 = 0x2
0x2b6: V292 = EXP 0x2 0xa0
0x2b7: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ba: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x2bc: V295 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V296 = EQ V295 V294
0x2be: V297 = 0x2c6
0x2c1: JUMPI 0x2c6 V296
---
Entry stack: [V12, 0x8c, V83, V85, V87, V89, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V83, V85, V87, V89, V91]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2ab]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V298 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V83, V85, V87, V89, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V83, V85, V87, V89, V91]

================================

Block 0x2c6
[0x2c6:0x2d6]
---
Predecessors: [0x2ab]
Successors: [0x2d7, 0x2db]
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x1
0x2c9 PUSH1 0xa0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce SUB
0x2cf DUP6
0x2d0 AND
0x2d1 ISZERO
0x2d2 ISZERO
0x2d3 PUSH2 0x2db
0x2d6 JUMPI
---
0x2c6: JUMPDEST 
0x2c7: V299 = 0x1
0x2c9: V300 = 0xa0
0x2cb: V301 = 0x2
0x2cd: V302 = EXP 0x2 0xa0
0x2ce: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V304 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V305 = ISZERO V304
0x2d2: V306 = ISZERO V305
0x2d3: V307 = 0x2db
0x2d6: JUMPI 0x2db V306
---
Entry stack: [V12, 0x8c, V83, V85, V87, V89, V91]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x8c, V83, V85, V87, V89, V91]

================================

Block 0x2d7
[0x2d7:0x2da]
---
Predecessors: [0x2c6]
Successors: []
---
0x2d7 PUSH1 0x0
0x2d9 DUP1
0x2da REVERT
---
0x2d7: V308 = 0x0
0x2da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V83, V85, V87, V89, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V83, V85, V87, V89, V91]

================================

Block 0x2db
[0x2db:0x2e5]
---
Predecessors: [0x2c6]
Successors: [0x2e6, 0x2ea]
---
0x2db JUMPDEST
0x2dc DUP1
0x2dd DUP3
0x2de DUP5
0x2df DUP7
0x2e0 ADDMOD
0x2e1 EQ
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x2db: JUMPDEST 
0x2e0: V309 = ADDMOD V85 V87 V89
0x2e1: V310 = EQ V309 V91
0x2e2: V311 = 0x2ea
0x2e5: JUMPI 0x2ea V310
---
Entry stack: [V12, 0x8c, V83, V85, V87, V89, V91]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x8c, V83, V85, V87, V89, V91]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2db]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V312 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V83, V85, V87, V89, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V83, V85, V87, V89, V91]

================================

Block 0x2ea
[0x2ea:0x312]
---
Predecessors: [0x2db]
Successors: [0x313]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x1
0x2ed DUP1
0x2ee SLOAD
0x2ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x304 NOT
0x305 AND
0x306 PUSH1 0x1
0x308 PUSH1 0xa0
0x30a PUSH1 0x2
0x30c EXP
0x30d SUB
0x30e DUP8
0x30f AND
0x310 OR
0x311 SWAP1
0x312 SSTORE
---
0x2ea: JUMPDEST 
0x2eb: V313 = 0x1
0x2ee: V314 = S[0x1]
0x2ef: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x304: V316 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x305: V317 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V314
0x306: V318 = 0x1
0x308: V319 = 0xa0
0x30a: V320 = 0x2
0x30c: V321 = EXP 0x2 0xa0
0x30d: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V323 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0x310: V324 = OR V323 V317
0x312: S[0x1] = V324
---
Entry stack: [V12, 0x8c, V83, V85, V87, V89, V91]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x8c, V83, V85, V87, V89, V91]

================================

Block 0x313
[0x313:0x313]
---
Predecessors: [0x2ea]
Successors: [0x314]
---
0x313 JUMPDEST
---
0x313: JUMPDEST 
---
Entry stack: [V12, 0x8c, V83, V85, V87, V89, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V83, V85, V87, V89, V91]

================================

Block 0x314
[0x314:0x31a]
---
Predecessors: [0x313]
Successors: [0x8c]
---
0x314 JUMPDEST
0x315 POP
0x316 POP
0x317 POP
0x318 POP
0x319 POP
0x31a JUMP
---
0x314: JUMPDEST 
0x31a: JUMP 0x8c
---
Entry stack: [V12, 0x8c, V83, V85, V87, V89, V91]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x31b
[0x31b:0x331]
---
Predecessors: [0xeb]
Successors: [0x332, 0x336]
---
0x31b JUMPDEST
0x31c PUSH1 0x0
0x31e SLOAD
0x31f CALLER
0x320 PUSH1 0x1
0x322 PUSH1 0xa0
0x324 PUSH1 0x2
0x326 EXP
0x327 SUB
0x328 SWAP1
0x329 DUP2
0x32a AND
0x32b SWAP2
0x32c AND
0x32d EQ
0x32e PUSH2 0x336
0x331 JUMPI
---
0x31b: JUMPDEST 
0x31c: V325 = 0x0
0x31e: V326 = S[0x0]
0x31f: V327 = CALLER
0x320: V328 = 0x1
0x322: V329 = 0xa0
0x324: V330 = 0x2
0x326: V331 = EXP 0x2 0xa0
0x327: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32a: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x32c: V334 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V335 = EQ V334 V333
0x32e: V336 = 0x336
0x331: JUMPI 0x336 V335
---
Entry stack: [V12, 0x8c, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V99]

================================

Block 0x332
[0x332:0x335]
---
Predecessors: [0x31b]
Successors: []
---
0x332 PUSH1 0x0
0x334 DUP1
0x335 REVERT
---
0x332: V337 = 0x0
0x335: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V99]

================================

Block 0x336
[0x336:0x34a]
---
Predecessors: [0x31b]
Successors: [0x34b, 0x350]
---
0x336 JUMPDEST
0x337 PUSH1 0x0
0x339 ADDRESS
0x33a PUSH1 0x1
0x33c PUSH1 0xa0
0x33e PUSH1 0x2
0x340 EXP
0x341 SUB
0x342 AND
0x343 BALANCE
0x344 GT
0x345 DUP1
0x346 ISZERO
0x347 PUSH2 0x350
0x34a JUMPI
---
0x336: JUMPDEST 
0x337: V338 = 0x0
0x339: V339 = ADDRESS
0x33a: V340 = 0x1
0x33c: V341 = 0xa0
0x33e: V342 = 0x2
0x340: V343 = EXP 0x2 0xa0
0x341: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x342: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x343: V346 = BALANCE V345
0x344: V347 = GT V346 0x0
0x346: V348 = ISZERO V347
0x347: V349 = 0x350
0x34a: JUMPI 0x350 V348
---
Entry stack: [V12, 0x8c, V99]
Stack pops: 0
Stack additions: [V347]
Exit stack: [V12, 0x8c, V99, V347]

================================

Block 0x34b
[0x34b:0x34f]
---
Predecessors: [0x336]
Successors: [0x350]
---
0x34b POP
0x34c PUSH1 0x0
0x34e DUP2
0x34f GT
---
0x34c: V350 = 0x0
0x34f: V351 = GT V99 0x0
---
Entry stack: [V12, 0x8c, V99, V347]
Stack pops: 2
Stack additions: [S1, V351]
Exit stack: [V12, 0x8c, V99, V351]

================================

Block 0x350
[0x350:0x356]
---
Predecessors: [0x336, 0x34b]
Successors: [0x357, 0x366]
---
0x350 JUMPDEST
0x351 DUP1
0x352 ISZERO
0x353 PUSH2 0x366
0x356 JUMPI
---
0x350: JUMPDEST 
0x352: V352 = ISZERO S0
0x353: V353 = 0x366
0x356: JUMPI 0x366 V352
---
Entry stack: [V12, 0x8c, V99, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8c, V99, S0]

================================

Block 0x357
[0x357:0x365]
---
Predecessors: [0x350]
Successors: [0x366]
---
0x357 POP
0x358 DUP1
0x359 ADDRESS
0x35a PUSH1 0x1
0x35c PUSH1 0xa0
0x35e PUSH1 0x2
0x360 EXP
0x361 SUB
0x362 AND
0x363 BALANCE
0x364 LT
0x365 ISZERO
---
0x359: V354 = ADDRESS
0x35a: V355 = 0x1
0x35c: V356 = 0xa0
0x35e: V357 = 0x2
0x360: V358 = EXP 0x2 0xa0
0x361: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x362: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x363: V361 = BALANCE V360
0x364: V362 = LT V361 V99
0x365: V363 = ISZERO V362
---
Entry stack: [V12, 0x8c, V99, S0]
Stack pops: 2
Stack additions: [S1, V363]
Exit stack: [V12, 0x8c, V99, V363]

================================

Block 0x366
[0x366:0x36c]
---
Predecessors: [0x350, 0x357]
Successors: [0x36d, 0x371]
---
0x366 JUMPDEST
0x367 ISZERO
0x368 ISZERO
0x369 PUSH2 0x371
0x36c JUMPI
---
0x366: JUMPDEST 
0x367: V364 = ISZERO S0
0x368: V365 = ISZERO V364
0x369: V366 = 0x371
0x36c: JUMPI 0x371 V365
---
Entry stack: [V12, 0x8c, V99, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x8c, V99]

================================

Block 0x36d
[0x36d:0x370]
---
Predecessors: [0x366]
Successors: []
---
0x36d PUSH1 0x0
0x36f DUP1
0x370 REVERT
---
0x36d: V367 = 0x0
0x370: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V99]

================================

Block 0x371
[0x371:0x39c]
---
Predecessors: [0x366]
Successors: [0x39d, 0x39e]
---
0x371 JUMPDEST
0x372 PUSH1 0x1
0x374 SLOAD
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d AND
0x37e DUP2
0x37f PUSH1 0x40
0x381 MLOAD
0x382 PUSH1 0x0
0x384 PUSH1 0x40
0x386 MLOAD
0x387 DUP1
0x388 DUP4
0x389 SUB
0x38a DUP2
0x38b DUP6
0x38c DUP8
0x38d PUSH2 0x8796
0x390 GAS
0x391 SUB
0x392 CALL
0x393 SWAP3
0x394 POP
0x395 POP
0x396 POP
0x397 ISZERO
0x398 ISZERO
0x399 PUSH2 0x39e
0x39c JUMPI
---
0x371: JUMPDEST 
0x372: V368 = 0x1
0x374: V369 = S[0x1]
0x375: V370 = 0x1
0x377: V371 = 0xa0
0x379: V372 = 0x2
0x37b: V373 = EXP 0x2 0xa0
0x37c: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37d: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x37f: V376 = 0x40
0x381: V377 = M[0x40]
0x382: V378 = 0x0
0x384: V379 = 0x40
0x386: V380 = M[0x40]
0x389: V381 = SUB V377 V380
0x38d: V382 = 0x8796
0x390: V383 = GAS
0x391: V384 = SUB V383 0x8796
0x392: V385 = CALL V384 V375 V99 V380 V381 V380 0x0
0x397: V386 = ISZERO V385
0x398: V387 = ISZERO V386
0x399: V388 = 0x39e
0x39c: JUMPI 0x39e V387
---
Entry stack: [V12, 0x8c, V99]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8c, V99]

================================

Block 0x39d
[0x39d:0x39d]
---
Predecessors: [0x371]
Successors: []
---
0x39d INVALID
---
0x39d: INVALID 
---
Entry stack: [V12, 0x8c, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V99]

================================

Block 0x39e
[0x39e:0x39e]
---
Predecessors: [0x371]
Successors: [0x39f]
---
0x39e JUMPDEST
---
0x39e: JUMPDEST 
---
Entry stack: [V12, 0x8c, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V99]

================================

Block 0x39f
[0x39f:0x39f]
---
Predecessors: [0x39e]
Successors: [0x3a0]
---
0x39f JUMPDEST
---
0x39f: JUMPDEST 
---
Entry stack: [V12, 0x8c, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V99]

================================

Block 0x3a0
[0x3a0:0x3a2]
---
Predecessors: [0x39f]
Successors: [0x8c]
---
0x3a0 JUMPDEST
0x3a1 POP
0x3a2 JUMP
---
0x3a0: JUMPDEST 
0x3a2: JUMP 0x8c
---
Entry stack: [V12, 0x8c, V99]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a3
[0x3a3:0x3b1]
---
Predecessors: [0x103]
Successors: [0x10b]
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0x1
0x3a6 SLOAD
0x3a7 PUSH1 0x1
0x3a9 PUSH1 0xa0
0x3ab PUSH1 0x2
0x3ad EXP
0x3ae SUB
0x3af AND
0x3b0 DUP2
0x3b1 JUMP
---
0x3a3: JUMPDEST 
0x3a4: V389 = 0x1
0x3a6: V390 = S[0x1]
0x3a7: V391 = 0x1
0x3a9: V392 = 0xa0
0x3ab: V393 = 0x2
0x3ad: V394 = EXP 0x2 0xa0
0x3ae: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x3b1: JUMP 0x10b
---
Entry stack: [V12, 0x10b]
Stack pops: 1
Stack additions: [S0, V396]
Exit stack: [V12, 0x10b, V396]

================================

Block 0x3b2
[0x3b2:0x3c0]
---
Predecessors: [0x132]
Successors: [0x10b]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x0
0x3b5 SLOAD
0x3b6 PUSH1 0x1
0x3b8 PUSH1 0xa0
0x3ba PUSH1 0x2
0x3bc EXP
0x3bd SUB
0x3be AND
0x3bf DUP2
0x3c0 JUMP
---
0x3b2: JUMPDEST 
0x3b3: V397 = 0x0
0x3b5: V398 = S[0x0]
0x3b6: V399 = 0x1
0x3b8: V400 = 0xa0
0x3ba: V401 = 0x2
0x3bc: V402 = EXP 0x2 0xa0
0x3bd: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3be: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x3c0: JUMP 0x10b
---
Entry stack: [V12, 0x10b]
Stack pops: 1
Stack additions: [S0, V404]
Exit stack: [V12, 0x10b, V404]

================================

Block 0x3c1
[0x3c1:0x3f8]
---
Predecessors: []
Successors: []
---
0x3c1 STOP
0x3c2 LOG1
0x3c3 PUSH6 0x627a7a723058
0x3ca SHA3
0x3cb MISSING 0xcc
0x3cc SWAP10
0x3cd DUP1
0x3ce SWAP15
0x3cf SWAP4
0x3d0 CALLER
0x3d1 MISSING 0xf9
0x3d2 MISSING 0xe3
0x3d3 MISSING 0xca
0x3d4 DUP14
0x3d5 MISSING 0xc1
0x3d6 EXTCODECOPY
0x3d7 MISSING 0xbc
0x3d8 RETURN
0x3d9 SWAP13
0x3da MISSING 0xdc
0x3db STOP
0x3dc MISSING 0x2e
0x3dd MISSING 0x46
0x3de MISSING 0xe
0x3df PUSH3 0xbf3518
0x3e3 SWAP10
0x3e4 MISSING 0xb4
0x3e5 MISSING 0x22
0x3e6 LT
0x3e7 MISSING 0xc2
0x3e8 MISSING 0xf7
0x3e9 CALLVALUE
0x3ea PUSH14 0x29
---
0x3c1: STOP 
0x3c2: LOG S0 S1 S2
0x3c3: V405 = 0x627a7a723058
0x3ca: V406 = SHA3 0x627a7a723058 S3
0x3cb: MISSING 0xcc
0x3d0: V407 = CALLER
0x3d1: MISSING 0xf9
0x3d2: MISSING 0xe3
0x3d3: MISSING 0xca
0x3d5: MISSING 0xc1
0x3d6: EXTCODECOPY S0 S1 S2 S3
0x3d7: MISSING 0xbc
0x3d8: RETURN S0 S1
0x3da: MISSING 0xdc
0x3db: STOP 
0x3dc: MISSING 0x2e
0x3dd: MISSING 0x46
0x3de: MISSING 0xe
0x3df: V408 = 0xbf3518
0x3e4: MISSING 0xb4
0x3e5: MISSING 0x22
0x3e6: V409 = LT S0 S1
0x3e7: MISSING 0xc2
0x3e8: MISSING 0xf7
0x3e9: V410 = CALLVALUE
0x3ea: V411 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V406, V407, S3, S10, S1, S2, S14, S4, S5, S6, S7, S8, S9, S0, S11, S12, S13, S10, S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0xbf3518, V409, 0x29, V410]
Exit stack: []

================================

Function 0:
Public function signature: 0x1072cbea
Entry block: 0x8f
Exit block: 0x8d
Body: 0x8c, 0x8d, 0x8f, 0x96, 0x9a, 0x156, 0x16e, 0x172, 0x183, 0x184, 0x1d7, 0x1db, 0x1e8, 0x1ec, 0x202, 0x207, 0x20e, 0x213, 0x21a, 0x21e, 0x27d, 0x281, 0x28e, 0x292, 0x2a3, 0x2a4, 0x2a5, 0x2a6

Function 1:
Public function signature: 0x6c3b58e0
Entry block: 0xb3
Exit block: 0x8d
Body: 0x8c, 0x8d, 0xb3, 0xba, 0xbe, 0x2ab, 0x2c2, 0x2c6, 0x2d7, 0x2db, 0x2e6, 0x2ea, 0x313, 0x314

Function 2:
Public function signature: 0x73ffd5b7
Entry block: 0xe0
Exit block: 0x8d
Body: 0x8c, 0x8d, 0xe0, 0xe7, 0xeb, 0x31b, 0x332, 0x336, 0x34b, 0x350, 0x357, 0x366, 0x36d, 0x371, 0x39d, 0x39e, 0x39f, 0x3a0

Function 3:
Public function signature: 0x7822ed49
Entry block: 0xf8
Exit block: 0x10b
Body: 0xf8, 0xff, 0x103, 0x10b, 0x3a3

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x127
Exit block: 0x10b
Body: 0x10b, 0x127, 0x12e, 0x132, 0x3b2

Function 5:
Public fallback function
Entry block: 0x51
Exit block: 0x8d
Body: 0x51, 0x52, 0x5b, 0x5f, 0x8b, 0x8c, 0x8d

