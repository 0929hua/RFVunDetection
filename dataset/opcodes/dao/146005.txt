Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xec]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2e1a7d4d
0x3c EQ
0x3d PUSH2 0xec
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2e1a7d4d
0x3c: V13 = EQ 0x2e1a7d4d V11
0x3d: V14 = 0xec
0x40: JUMPI 0xec V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x119]
---
0x41 DUP1
0x42 PUSH4 0x928d81c1
0x47 EQ
0x48 PUSH2 0x119
0x4b JUMPI
---
0x42: V15 = 0x928d81c1
0x47: V16 = EQ 0x928d81c1 V11
0x48: V17 = 0x119
0x4b: JUMPI 0x119 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0xcc]
---
Predecessors: [0x0, 0x41]
Successors: [0xcd, 0xd1]
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 SWAP1
0x51 SLOAD
0x52 SWAP1
0x53 PUSH2 0x100
0x56 EXP
0x57 SWAP1
0x58 DIV
0x59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e AND
0x6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84 AND
0x85 PUSH4 0xd0e30db0
0x8a CALLVALUE
0x8b PUSH1 0x40
0x8d MLOAD
0x8e DUP3
0x8f PUSH4 0xffffffff
0x94 AND
0x95 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb3 MUL
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x4
0xb8 ADD
0xb9 PUSH1 0x0
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf DUP4
0xc0 SUB
0xc1 DUP2
0xc2 DUP6
0xc3 DUP9
0xc4 DUP1
0xc5 EXTCODESIZE
0xc6 ISZERO
0xc7 DUP1
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x51: V19 = S[0x0]
0x53: V20 = 0x100
0x56: V21 = EXP 0x100 0x0
0x58: V22 = DIV V19 0x1
0x59: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x6f: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x84: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x85: V27 = 0xd0e30db0
0x8a: V28 = CALLVALUE
0x8b: V29 = 0x40
0x8d: V30 = M[0x40]
0x8f: V31 = 0xffffffff
0x94: V32 = AND 0xffffffff 0xd0e30db0
0x95: V33 = 0x100000000000000000000000000000000000000000000000000000000
0xb3: V34 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0xb5: M[V30] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0xb6: V35 = 0x4
0xb8: V36 = ADD 0x4 V30
0xb9: V37 = 0x0
0xbb: V38 = 0x40
0xbd: V39 = M[0x40]
0xc0: V40 = SUB V36 V39
0xc5: V41 = EXTCODESIZE V26
0xc6: V42 = ISZERO V41
0xc8: V43 = ISZERO V42
0xc9: V44 = 0xd1
0xcc: JUMPI 0xd1 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V26, 0xd0e30db0, V28, V36, 0x0, V39, V40, V39, V28, V26, V42]
Exit stack: [V11, V26, 0xd0e30db0, V28, V36, 0x0, V39, V40, V39, V28, V26, V42]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0x4c]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V45 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V11, V26, 0xd0e30db0, V28, V36, 0x0, V39, V40, V39, V28, V26, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V26, 0xd0e30db0, V28, V36, 0x0, V39, V40, V39, V28, V26, V42]

================================

Block 0xd1
[0xd1:0xdb]
---
Predecessors: [0x4c]
Successors: [0xdc, 0xe5]
---
0xd1 JUMPDEST
0xd2 POP
0xd3 GAS
0xd4 CALL
0xd5 ISZERO
0xd6 DUP1
0xd7 ISZERO
0xd8 PUSH2 0xe5
0xdb JUMPI
---
0xd1: JUMPDEST 
0xd3: V46 = GAS
0xd4: V47 = CALL V46 V26 V28 V39 V40 V39 0x0
0xd5: V48 = ISZERO V47
0xd7: V49 = ISZERO V48
0xd8: V50 = 0xe5
0xdb: JUMPI 0xe5 V49
---
Entry stack: [V11, V26, 0xd0e30db0, V28, V36, 0x0, V39, V40, V39, V28, V26, V42]
Stack pops: 7
Stack additions: [V48]
Exit stack: [V11, V26, 0xd0e30db0, V28, V36, V48]

================================

Block 0xdc
[0xdc:0xe4]
---
Predecessors: [0xd1]
Successors: []
---
0xdc RETURNDATASIZE
0xdd PUSH1 0x0
0xdf DUP1
0xe0 RETURNDATACOPY
0xe1 RETURNDATASIZE
0xe2 PUSH1 0x0
0xe4 REVERT
---
0xdc: V51 = RETURNDATASIZE
0xdd: V52 = 0x0
0xe0: RETURNDATACOPY 0x0 0x0 V51
0xe1: V53 = RETURNDATASIZE
0xe2: V54 = 0x0
0xe4: REVERT 0x0 V53
---
Entry stack: [V11, V26, 0xd0e30db0, V28, V36, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V26, 0xd0e30db0, V28, V36, V48]

================================

Block 0xe5
[0xe5:0xeb]
---
Predecessors: [0xd1]
Successors: []
---
0xe5 JUMPDEST
0xe6 POP
0xe7 POP
0xe8 POP
0xe9 POP
0xea POP
0xeb STOP
---
0xe5: JUMPDEST 
0xeb: STOP 
---
Entry stack: [V11, V26, 0xd0e30db0, V28, V36, V48]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0xd]
Successors: [0xf4, 0xf8]
---
0xec JUMPDEST
0xed CALLVALUE
0xee DUP1
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xec: JUMPDEST 
0xed: V55 = CALLVALUE
0xef: V56 = ISZERO V55
0xf0: V57 = 0xf8
0xf3: JUMPI 0xf8 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xec]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V58 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V11, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55]

================================

Block 0xf8
[0xf8:0x116]
---
Predecessors: [0xec]
Successors: [0x166]
---
0xf8 JUMPDEST
0xf9 POP
0xfa PUSH2 0x117
0xfd PUSH1 0x4
0xff DUP1
0x100 CALLDATASIZE
0x101 SUB
0x102 DUP2
0x103 ADD
0x104 SWAP1
0x105 DUP1
0x106 DUP1
0x107 CALLDATALOAD
0x108 SWAP1
0x109 PUSH1 0x20
0x10b ADD
0x10c SWAP1
0x10d SWAP3
0x10e SWAP2
0x10f SWAP1
0x110 POP
0x111 POP
0x112 POP
0x113 PUSH2 0x166
0x116 JUMP
---
0xf8: JUMPDEST 
0xfa: V59 = 0x117
0xfd: V60 = 0x4
0x100: V61 = CALLDATASIZE
0x101: V62 = SUB V61 0x4
0x103: V63 = ADD 0x4 V62
0x107: V64 = CALLDATALOAD 0x4
0x109: V65 = 0x20
0x10b: V66 = ADD 0x20 0x4
0x113: V67 = 0x166
0x116: JUMP 0x166
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [0x117, V64]
Exit stack: [V11, 0x117, V64]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: [0x1ff]
Successors: []
---
0x117 JUMPDEST
0x118 STOP
---
0x117: JUMPDEST 
0x118: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x119
[0x119:0x120]
---
Predecessors: [0x41]
Successors: [0x121, 0x125]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b DUP1
0x11c ISZERO
0x11d PUSH2 0x125
0x120 JUMPI
---
0x119: JUMPDEST 
0x11a: V68 = CALLVALUE
0x11c: V69 = ISZERO V68
0x11d: V70 = 0x125
0x120: JUMPI 0x125 V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V11, V68]

================================

Block 0x121
[0x121:0x124]
---
Predecessors: [0x119]
Successors: []
---
0x121 PUSH1 0x0
0x123 DUP1
0x124 REVERT
---
0x121: V71 = 0x0
0x124: REVERT 0x0 0x0
---
Entry stack: [V11, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68]

================================

Block 0x125
[0x125:0x163]
---
Predecessors: [0x119]
Successors: [0x207]
---
0x125 JUMPDEST
0x126 POP
0x127 PUSH2 0x164
0x12a PUSH1 0x4
0x12c DUP1
0x12d CALLDATASIZE
0x12e SUB
0x12f DUP2
0x130 ADD
0x131 SWAP1
0x132 DUP1
0x133 DUP1
0x134 CALLDATALOAD
0x135 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14a AND
0x14b SWAP1
0x14c PUSH1 0x20
0x14e ADD
0x14f SWAP1
0x150 SWAP3
0x151 SWAP2
0x152 SWAP1
0x153 DUP1
0x154 CALLDATALOAD
0x155 SWAP1
0x156 PUSH1 0x20
0x158 ADD
0x159 SWAP1
0x15a SWAP3
0x15b SWAP2
0x15c SWAP1
0x15d POP
0x15e POP
0x15f POP
0x160 PUSH2 0x207
0x163 JUMP
---
0x125: JUMPDEST 
0x127: V72 = 0x164
0x12a: V73 = 0x4
0x12d: V74 = CALLDATASIZE
0x12e: V75 = SUB V74 0x4
0x130: V76 = ADD 0x4 V75
0x134: V77 = CALLDATALOAD 0x4
0x135: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x14c: V80 = 0x20
0x14e: V81 = ADD 0x20 0x4
0x154: V82 = CALLDATALOAD 0x24
0x156: V83 = 0x20
0x158: V84 = ADD 0x20 0x24
0x160: V85 = 0x207
0x163: JUMP 0x207
---
Entry stack: [V11, V68]
Stack pops: 1
Stack additions: [0x164, V79, V82]
Exit stack: [V11, 0x164, V79, V82]

================================

Block 0x164
[0x164:0x165]
---
Predecessors: [0x393]
Successors: []
---
0x164 JUMPDEST
0x165 STOP
---
0x164: JUMPDEST 
0x165: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x166
[0x166:0x1e6]
---
Predecessors: [0xf8]
Successors: [0x1e7, 0x1eb]
---
0x166 JUMPDEST
0x167 PUSH1 0x0
0x169 DUP1
0x16a SWAP1
0x16b SLOAD
0x16c SWAP1
0x16d PUSH2 0x100
0x170 EXP
0x171 SWAP1
0x172 DIV
0x173 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x188 AND
0x189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19e AND
0x19f PUSH4 0xd0e30db0
0x1a4 DUP3
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP3
0x1a9 PUSH4 0xffffffff
0x1ae AND
0x1af PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1cd MUL
0x1ce DUP2
0x1cf MSTORE
0x1d0 PUSH1 0x4
0x1d2 ADD
0x1d3 PUSH1 0x0
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 DUP1
0x1d9 DUP4
0x1da SUB
0x1db DUP2
0x1dc DUP6
0x1dd DUP9
0x1de DUP1
0x1df EXTCODESIZE
0x1e0 ISZERO
0x1e1 DUP1
0x1e2 ISZERO
0x1e3 PUSH2 0x1eb
0x1e6 JUMPI
---
0x166: JUMPDEST 
0x167: V86 = 0x0
0x16b: V87 = S[0x0]
0x16d: V88 = 0x100
0x170: V89 = EXP 0x100 0x0
0x172: V90 = DIV V87 0x1
0x173: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x188: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x189: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x19f: V95 = 0xd0e30db0
0x1a5: V96 = 0x40
0x1a7: V97 = M[0x40]
0x1a9: V98 = 0xffffffff
0x1ae: V99 = AND 0xffffffff 0xd0e30db0
0x1af: V100 = 0x100000000000000000000000000000000000000000000000000000000
0x1cd: V101 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x1cf: M[V97] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x1d0: V102 = 0x4
0x1d2: V103 = ADD 0x4 V97
0x1d3: V104 = 0x0
0x1d5: V105 = 0x40
0x1d7: V106 = M[0x40]
0x1da: V107 = SUB V103 V106
0x1df: V108 = EXTCODESIZE V94
0x1e0: V109 = ISZERO V108
0x1e2: V110 = ISZERO V109
0x1e3: V111 = 0x1eb
0x1e6: JUMPI 0x1eb V110
---
Entry stack: [V11, 0x117, V64]
Stack pops: 1
Stack additions: [S0, V94, 0xd0e30db0, S0, V103, 0x0, V106, V107, V106, S0, V94, V109]
Exit stack: [V11, 0x117, V64, V94, 0xd0e30db0, V64, V103, 0x0, V106, V107, V106, V64, V94, V109]

================================

Block 0x1e7
[0x1e7:0x1ea]
---
Predecessors: [0x166]
Successors: []
---
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea REVERT
---
0x1e7: V112 = 0x0
0x1ea: REVERT 0x0 0x0
---
Entry stack: [V11, 0x117, V64, V94, 0xd0e30db0, V64, V103, 0x0, V106, V107, V106, V64, V94, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V64, V94, 0xd0e30db0, V64, V103, 0x0, V106, V107, V106, V64, V94, V109]

================================

Block 0x1eb
[0x1eb:0x1f5]
---
Predecessors: [0x166]
Successors: [0x1f6, 0x1ff]
---
0x1eb JUMPDEST
0x1ec POP
0x1ed GAS
0x1ee CALL
0x1ef ISZERO
0x1f0 DUP1
0x1f1 ISZERO
0x1f2 PUSH2 0x1ff
0x1f5 JUMPI
---
0x1eb: JUMPDEST 
0x1ed: V113 = GAS
0x1ee: V114 = CALL V113 V94 V64 V106 V107 V106 0x0
0x1ef: V115 = ISZERO V114
0x1f1: V116 = ISZERO V115
0x1f2: V117 = 0x1ff
0x1f5: JUMPI 0x1ff V116
---
Entry stack: [V11, 0x117, V64, V94, 0xd0e30db0, V64, V103, 0x0, V106, V107, V106, V64, V94, V109]
Stack pops: 7
Stack additions: [V115]
Exit stack: [V11, 0x117, V64, V94, 0xd0e30db0, V64, V103, V115]

================================

Block 0x1f6
[0x1f6:0x1fe]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f6 RETURNDATASIZE
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa RETURNDATACOPY
0x1fb RETURNDATASIZE
0x1fc PUSH1 0x0
0x1fe REVERT
---
0x1f6: V118 = RETURNDATASIZE
0x1f7: V119 = 0x0
0x1fa: RETURNDATACOPY 0x0 0x0 V118
0x1fb: V120 = RETURNDATASIZE
0x1fc: V121 = 0x0
0x1fe: REVERT 0x0 V120
---
Entry stack: [V11, 0x117, V64, V94, 0xd0e30db0, V64, V103, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V64, V94, 0xd0e30db0, V64, V103, V115]

================================

Block 0x1ff
[0x1ff:0x206]
---
Predecessors: [0x1eb]
Successors: [0x117]
---
0x1ff JUMPDEST
0x200 POP
0x201 POP
0x202 POP
0x203 POP
0x204 POP
0x205 POP
0x206 JUMP
---
0x1ff: JUMPDEST 
0x206: JUMP 0x117
---
Entry stack: [V11, 0x117, V64, V94, 0xd0e30db0, V64, V103, V115]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x207
[0x207:0x2a3]
---
Predecessors: [0x125]
Successors: [0x2a4, 0x2a8]
---
0x207 JUMPDEST
0x208 DUP2
0x209 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21e AND
0x21f PUSH4 0xa9059cbb
0x224 PUSH1 0x0
0x226 DUP1
0x227 SWAP1
0x228 SLOAD
0x229 SWAP1
0x22a PUSH2 0x100
0x22d EXP
0x22e SWAP1
0x22f DIV
0x230 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x245 AND
0x246 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25b AND
0x25c PUSH4 0xd367c540
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP2
0x265 PUSH4 0xffffffff
0x26a AND
0x26b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x289 MUL
0x28a DUP2
0x28b MSTORE
0x28c PUSH1 0x4
0x28e ADD
0x28f PUSH1 0x20
0x291 PUSH1 0x40
0x293 MLOAD
0x294 DUP1
0x295 DUP4
0x296 SUB
0x297 DUP2
0x298 PUSH1 0x0
0x29a DUP8
0x29b DUP1
0x29c EXTCODESIZE
0x29d ISZERO
0x29e DUP1
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x207: JUMPDEST 
0x209: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x21e: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x21f: V124 = 0xa9059cbb
0x224: V125 = 0x0
0x228: V126 = S[0x0]
0x22a: V127 = 0x100
0x22d: V128 = EXP 0x100 0x0
0x22f: V129 = DIV V126 0x1
0x230: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x245: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x246: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x25b: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x25c: V134 = 0xd367c540
0x261: V135 = 0x40
0x263: V136 = M[0x40]
0x265: V137 = 0xffffffff
0x26a: V138 = AND 0xffffffff 0xd367c540
0x26b: V139 = 0x100000000000000000000000000000000000000000000000000000000
0x289: V140 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd367c540
0x28b: M[V136] = 0xd367c54000000000000000000000000000000000000000000000000000000000
0x28c: V141 = 0x4
0x28e: V142 = ADD 0x4 V136
0x28f: V143 = 0x20
0x291: V144 = 0x40
0x293: V145 = M[0x40]
0x296: V146 = SUB V142 V145
0x298: V147 = 0x0
0x29c: V148 = EXTCODESIZE V133
0x29d: V149 = ISZERO V148
0x29f: V150 = ISZERO V149
0x2a0: V151 = 0x2a8
0x2a3: JUMPI 0x2a8 V150
---
Entry stack: [V11, 0x164, V79, V82]
Stack pops: 2
Stack additions: [S1, S0, V123, 0xa9059cbb, V133, 0xd367c540, V142, 0x20, V145, V146, V145, 0x0, V133, V149]
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V133, 0xd367c540, V142, 0x20, V145, V146, V145, 0x0, V133, V149]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x207]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V152 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V133, 0xd367c540, V142, 0x20, V145, V146, V145, 0x0, V133, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V133, 0xd367c540, V142, 0x20, V145, V146, V145, 0x0, V133, V149]

================================

Block 0x2a8
[0x2a8:0x2b2]
---
Predecessors: [0x207]
Successors: [0x2b3, 0x2bc]
---
0x2a8 JUMPDEST
0x2a9 POP
0x2aa GAS
0x2ab CALL
0x2ac ISZERO
0x2ad DUP1
0x2ae ISZERO
0x2af PUSH2 0x2bc
0x2b2 JUMPI
---
0x2a8: JUMPDEST 
0x2aa: V153 = GAS
0x2ab: V154 = CALL V153 V133 0x0 V145 V146 V145 0x20
0x2ac: V155 = ISZERO V154
0x2ae: V156 = ISZERO V155
0x2af: V157 = 0x2bc
0x2b2: JUMPI 0x2bc V156
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V133, 0xd367c540, V142, 0x20, V145, V146, V145, 0x0, V133, V149]
Stack pops: 7
Stack additions: [V155]
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V133, 0xd367c540, V142, V155]

================================

Block 0x2b3
[0x2b3:0x2bb]
---
Predecessors: [0x2a8]
Successors: []
---
0x2b3 RETURNDATASIZE
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 RETURNDATACOPY
0x2b8 RETURNDATASIZE
0x2b9 PUSH1 0x0
0x2bb REVERT
---
0x2b3: V158 = RETURNDATASIZE
0x2b4: V159 = 0x0
0x2b7: RETURNDATACOPY 0x0 0x0 V158
0x2b8: V160 = RETURNDATASIZE
0x2b9: V161 = 0x0
0x2bb: REVERT 0x0 V160
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V133, 0xd367c540, V142, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V133, 0xd367c540, V142, V155]

================================

Block 0x2bc
[0x2bc:0x2cd]
---
Predecessors: [0x2a8]
Successors: [0x2ce, 0x2d2]
---
0x2bc JUMPDEST
0x2bd POP
0x2be POP
0x2bf POP
0x2c0 POP
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 RETURNDATASIZE
0x2c5 PUSH1 0x20
0x2c7 DUP2
0x2c8 LT
0x2c9 ISZERO
0x2ca PUSH2 0x2d2
0x2cd JUMPI
---
0x2bc: JUMPDEST 
0x2c1: V162 = 0x40
0x2c3: V163 = M[0x40]
0x2c4: V164 = RETURNDATASIZE
0x2c5: V165 = 0x20
0x2c8: V166 = LT V164 0x20
0x2c9: V167 = ISZERO V166
0x2ca: V168 = 0x2d2
0x2cd: JUMPI 0x2d2 V167
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V133, 0xd367c540, V142, V155]
Stack pops: 4
Stack additions: [V163, V164]
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V163, V164]

================================

Block 0x2ce
[0x2ce:0x2d1]
---
Predecessors: [0x2bc]
Successors: []
---
0x2ce PUSH1 0x0
0x2d0 DUP1
0x2d1 REVERT
---
0x2ce: V169 = 0x0
0x2d1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V163, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V163, V164]

================================

Block 0x2d2
[0x2d2:0x364]
---
Predecessors: [0x2bc]
Successors: [0x365, 0x369]
---
0x2d2 JUMPDEST
0x2d3 DUP2
0x2d4 ADD
0x2d5 SWAP1
0x2d6 DUP1
0x2d7 DUP1
0x2d8 MLOAD
0x2d9 SWAP1
0x2da PUSH1 0x20
0x2dc ADD
0x2dd SWAP1
0x2de SWAP3
0x2df SWAP2
0x2e0 SWAP1
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 DUP4
0x2e5 PUSH1 0x40
0x2e7 MLOAD
0x2e8 DUP4
0x2e9 PUSH4 0xffffffff
0x2ee AND
0x2ef PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30d MUL
0x30e DUP2
0x30f MSTORE
0x310 PUSH1 0x4
0x312 ADD
0x313 DUP1
0x314 DUP4
0x315 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32a AND
0x32b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x340 AND
0x341 DUP2
0x342 MSTORE
0x343 PUSH1 0x20
0x345 ADD
0x346 DUP3
0x347 DUP2
0x348 MSTORE
0x349 PUSH1 0x20
0x34b ADD
0x34c SWAP3
0x34d POP
0x34e POP
0x34f POP
0x350 PUSH1 0x20
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 DUP4
0x357 SUB
0x358 DUP2
0x359 PUSH1 0x0
0x35b DUP8
0x35c DUP1
0x35d EXTCODESIZE
0x35e ISZERO
0x35f DUP1
0x360 ISZERO
0x361 PUSH2 0x369
0x364 JUMPI
---
0x2d2: JUMPDEST 
0x2d4: V170 = ADD V163 V164
0x2d8: V171 = M[V163]
0x2da: V172 = 0x20
0x2dc: V173 = ADD 0x20 V163
0x2e5: V174 = 0x40
0x2e7: V175 = M[0x40]
0x2e9: V176 = 0xffffffff
0x2ee: V177 = AND 0xffffffff 0xa9059cbb
0x2ef: V178 = 0x100000000000000000000000000000000000000000000000000000000
0x30d: V179 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x30f: M[V175] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x310: V180 = 0x4
0x312: V181 = ADD 0x4 V175
0x315: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x32b: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x340: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x342: M[V181] = V185
0x343: V186 = 0x20
0x345: V187 = ADD 0x20 V181
0x348: M[V187] = V82
0x349: V188 = 0x20
0x34b: V189 = ADD 0x20 V187
0x350: V190 = 0x20
0x352: V191 = 0x40
0x354: V192 = M[0x40]
0x357: V193 = SUB V189 V192
0x359: V194 = 0x0
0x35d: V195 = EXTCODESIZE V123
0x35e: V196 = ISZERO V195
0x360: V197 = ISZERO V196
0x361: V198 = 0x369
0x364: JUMPI 0x369 V197
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V163, V164]
Stack pops: 5
Stack additions: [S4, S3, S2, V189, 0x20, V192, V193, V192, 0x0, S3, V196]
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V189, 0x20, V192, V193, V192, 0x0, V123, V196]

================================

Block 0x365
[0x365:0x368]
---
Predecessors: [0x2d2]
Successors: []
---
0x365 PUSH1 0x0
0x367 DUP1
0x368 REVERT
---
0x365: V199 = 0x0
0x368: REVERT 0x0 0x0
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V189, 0x20, V192, V193, V192, 0x0, V123, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V189, 0x20, V192, V193, V192, 0x0, V123, V196]

================================

Block 0x369
[0x369:0x373]
---
Predecessors: [0x2d2]
Successors: [0x374, 0x37d]
---
0x369 JUMPDEST
0x36a POP
0x36b GAS
0x36c CALL
0x36d ISZERO
0x36e DUP1
0x36f ISZERO
0x370 PUSH2 0x37d
0x373 JUMPI
---
0x369: JUMPDEST 
0x36b: V200 = GAS
0x36c: V201 = CALL V200 V123 0x0 V192 V193 V192 0x20
0x36d: V202 = ISZERO V201
0x36f: V203 = ISZERO V202
0x370: V204 = 0x37d
0x373: JUMPI 0x37d V203
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V189, 0x20, V192, V193, V192, 0x0, V123, V196]
Stack pops: 7
Stack additions: [V202]
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V189, V202]

================================

Block 0x374
[0x374:0x37c]
---
Predecessors: [0x369]
Successors: []
---
0x374 RETURNDATASIZE
0x375 PUSH1 0x0
0x377 DUP1
0x378 RETURNDATACOPY
0x379 RETURNDATASIZE
0x37a PUSH1 0x0
0x37c REVERT
---
0x374: V205 = RETURNDATASIZE
0x375: V206 = 0x0
0x378: RETURNDATACOPY 0x0 0x0 V205
0x379: V207 = RETURNDATASIZE
0x37a: V208 = 0x0
0x37c: REVERT 0x0 V207
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V189, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V189, V202]

================================

Block 0x37d
[0x37d:0x38e]
---
Predecessors: [0x369]
Successors: [0x38f, 0x393]
---
0x37d JUMPDEST
0x37e POP
0x37f POP
0x380 POP
0x381 POP
0x382 PUSH1 0x40
0x384 MLOAD
0x385 RETURNDATASIZE
0x386 PUSH1 0x20
0x388 DUP2
0x389 LT
0x38a ISZERO
0x38b PUSH2 0x393
0x38e JUMPI
---
0x37d: JUMPDEST 
0x382: V209 = 0x40
0x384: V210 = M[0x40]
0x385: V211 = RETURNDATASIZE
0x386: V212 = 0x20
0x389: V213 = LT V211 0x20
0x38a: V214 = ISZERO V213
0x38b: V215 = 0x393
0x38e: JUMPI 0x393 V214
---
Entry stack: [V11, 0x164, V79, V82, V123, 0xa9059cbb, V189, V202]
Stack pops: 4
Stack additions: [V210, V211]
Exit stack: [V11, 0x164, V79, V82, V210, V211]

================================

Block 0x38f
[0x38f:0x392]
---
Predecessors: [0x37d]
Successors: []
---
0x38f PUSH1 0x0
0x391 DUP1
0x392 REVERT
---
0x38f: V216 = 0x0
0x392: REVERT 0x0 0x0
---
Entry stack: [V11, 0x164, V79, V82, V210, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x164, V79, V82, V210, V211]

================================

Block 0x393
[0x393:0x3a8]
---
Predecessors: [0x37d]
Successors: [0x164]
---
0x393 JUMPDEST
0x394 DUP2
0x395 ADD
0x396 SWAP1
0x397 DUP1
0x398 DUP1
0x399 MLOAD
0x39a SWAP1
0x39b PUSH1 0x20
0x39d ADD
0x39e SWAP1
0x39f SWAP3
0x3a0 SWAP2
0x3a1 SWAP1
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 POP
0x3a6 POP
0x3a7 POP
0x3a8 JUMP
---
0x393: JUMPDEST 
0x395: V217 = ADD V210 V211
0x399: V218 = M[V210]
0x39b: V219 = 0x20
0x39d: V220 = ADD 0x20 V210
0x3a8: JUMP 0x164
---
Entry stack: [V11, 0x164, V79, V82, V210, V211]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a9
[0x3a9:0x3d4]
---
Predecessors: []
Successors: []
---
0x3a9 STOP
0x3aa LOG1
0x3ab PUSH6 0x627a7a723058
0x3b2 SHA3
0x3b3 MISSING 0xc3
0x3b4 MISSING 0xe1
0x3b5 LOG1
0x3b6 MISSING 0x5f
0x3b7 PUSH27 0xac849e11e750703016ea5722dd058b6174daf54446479b9b4409c9
0x3d3 STOP
0x3d4 MISSING 0x29
---
0x3a9: STOP 
0x3aa: LOG S0 S1 S2
0x3ab: V221 = 0x627a7a723058
0x3b2: V222 = SHA3 0x627a7a723058 S3
0x3b3: MISSING 0xc3
0x3b4: MISSING 0xe1
0x3b5: LOG S0 S1 S2
0x3b6: MISSING 0x5f
0x3b7: V223 = 0xac849e11e750703016ea5722dd058b6174daf54446479b9b4409c9
0x3d3: STOP 
0x3d4: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V222, 0xac849e11e750703016ea5722dd058b6174daf54446479b9b4409c9]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0xec
Exit block: 0x117
Body: 0xec, 0xf4, 0xf8, 0x117, 0x166, 0x1e7, 0x1eb, 0x1f6, 0x1ff

Function 1:
Public function signature: 0x928d81c1
Entry block: 0x119
Exit block: 0x164
Body: 0x119, 0x121, 0x125, 0x164, 0x207, 0x2a4, 0x2a8, 0x2b3, 0x2bc, 0x2ce, 0x2d2, 0x365, 0x369, 0x374, 0x37d, 0x38f, 0x393

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0xdc
Body: 0x4c, 0xcd, 0xd1, 0xdc, 0xe5

