Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x96]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x96
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x96
0xa: JUMPI 0x96 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x172]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x18160ddd
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x172
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x18160ddd
0x39: V12 = EQ V10 0x18160ddd
0x3a: V13 = 0x172
0x3d: JUMPI 0x172 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x197]
---
0x3e DUP1
0x3f PUSH4 0x1a39d8ef
0x44 EQ
0x45 PUSH2 0x197
0x48 JUMPI
---
0x3f: V14 = 0x1a39d8ef
0x44: V15 = EQ 0x1a39d8ef V10
0x45: V16 = 0x197
0x48: JUMPI 0x197 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1bc]
---
0x49 DUP1
0x4a PUSH4 0x3ccfd60b
0x4f EQ
0x50 PUSH2 0x1bc
0x53 JUMPI
---
0x4a: V17 = 0x3ccfd60b
0x4f: V18 = EQ 0x3ccfd60b V10
0x50: V19 = 0x1bc
0x53: JUMPI 0x1bc V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1d1]
---
0x54 DUP1
0x55 PUSH4 0x8da5cb5b
0x5a EQ
0x5b PUSH2 0x1d1
0x5e JUMPI
---
0x55: V20 = 0x8da5cb5b
0x5a: V21 = EQ 0x8da5cb5b V10
0x5b: V22 = 0x1d1
0x5e: JUMPI 0x1d1 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x200]
---
0x5f DUP1
0x60 PUSH4 0xa6f9dae1
0x65 EQ
0x66 PUSH2 0x200
0x69 JUMPI
---
0x60: V23 = 0xa6f9dae1
0x65: V24 = EQ 0xa6f9dae1 V10
0x66: V25 = 0x200
0x69: JUMPI 0x200 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x221]
---
0x6a DUP1
0x6b PUSH4 0xbd9b6d86
0x70 EQ
0x71 PUSH2 0x221
0x74 JUMPI
---
0x6b: V26 = 0xbd9b6d86
0x70: V27 = EQ 0xbd9b6d86 V10
0x71: V28 = 0x221
0x74: JUMPI 0x221 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x236]
---
0x75 DUP1
0x76 PUSH4 0xd4ee1d90
0x7b EQ
0x7c PUSH2 0x236
0x7f JUMPI
---
0x76: V29 = 0xd4ee1d90
0x7b: V30 = EQ 0xd4ee1d90 V10
0x7c: V31 = 0x236
0x7f: JUMPI 0x236 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x265]
---
0x80 DUP1
0x81 PUSH4 0xf441b1c8
0x86 EQ
0x87 PUSH2 0x265
0x8a JUMPI
---
0x81: V32 = 0xf441b1c8
0x86: V33 = EQ 0xf441b1c8 V10
0x87: V34 = 0x265
0x8a: JUMPI 0x265 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x28a]
---
0x8b DUP1
0x8c PUSH4 0xfc0c546a
0x91 EQ
0x92 PUSH2 0x28a
0x95 JUMPI
---
0x8c: V35 = 0xfc0c546a
0x91: V36 = EQ 0xfc0c546a V10
0x92: V37 = 0x28a
0x95: JUMPI 0x28a V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0x96]
---
Predecessors: [0x0, 0x8b]
Successors: [0x97]
---
0x96 JUMPDEST
---
0x96: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x97
[0x97:0xab]
---
Predecessors: [0x96]
Successors: [0x2b9]
---
0x97 JUMPDEST
0x98 PUSH1 0x4
0x9a SLOAD
0x9b CALLVALUE
0x9c SWAP1
0x9d PUSH2 0xac
0xa0 SWAP1
0xa1 DUP3
0xa2 PUSH4 0xffffffff
0xa7 PUSH2 0x2b9
0xaa AND
0xab JUMP
---
0x97: JUMPDEST 
0x98: V38 = 0x4
0x9a: V39 = S[0x4]
0x9b: V40 = CALLVALUE
0x9d: V41 = 0xac
0xa2: V42 = 0xffffffff
0xa7: V43 = 0x2b9
0xaa: V44 = AND 0x2b9 0xffffffff
0xab: JUMP 0x2b9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V40, 0xac, V39, V40]
Exit stack: [V10, V40, 0xac, V39, V40]

================================

Block 0xac
[0xac:0xc1]
---
Predecessors: [0x2cc]
Successors: [0x2b9]
---
0xac JUMPDEST
0xad PUSH1 0x4
0xaf SSTORE
0xb0 PUSH1 0x5
0xb2 SLOAD
0xb3 PUSH2 0xc2
0xb6 SWAP1
0xb7 DUP3
0xb8 PUSH4 0xffffffff
0xbd PUSH2 0x2b9
0xc0 AND
0xc1 JUMP
---
0xac: JUMPDEST 
0xad: V45 = 0x4
0xaf: S[0x4] = S0
0xb0: V46 = 0x5
0xb2: V47 = S[0x5]
0xb3: V48 = 0xc2
0xb8: V49 = 0xffffffff
0xbd: V50 = 0x2b9
0xc0: V51 = AND 0x2b9 0xffffffff
0xc1: JUMP 0x2b9
---
Entry stack: [V10, V40, S0]
Stack pops: 2
Stack additions: [S1, 0xc2, V47, S1]
Exit stack: [V10, V40, 0xc2, V47, V40]

================================

Block 0xc2
[0xc2:0xd7]
---
Predecessors: [0x2cc]
Successors: [0x2b9]
---
0xc2 JUMPDEST
0xc3 PUSH1 0x5
0xc5 SSTORE
0xc6 PUSH1 0x3
0xc8 SLOAD
0xc9 PUSH2 0xd8
0xcc SWAP1
0xcd DUP3
0xce PUSH4 0xffffffff
0xd3 PUSH2 0x2b9
0xd6 AND
0xd7 JUMP
---
0xc2: JUMPDEST 
0xc3: V52 = 0x5
0xc5: S[0x5] = S0
0xc6: V53 = 0x3
0xc8: V54 = S[0x3]
0xc9: V55 = 0xd8
0xce: V56 = 0xffffffff
0xd3: V57 = 0x2b9
0xd6: V58 = AND 0x2b9 0xffffffff
0xd7: JUMP 0x2b9
---
Entry stack: [V10, V40, S0]
Stack pops: 2
Stack additions: [S1, 0xd8, V54, S1]
Exit stack: [V10, V40, 0xd8, V54, V40]

================================

Block 0xd8
[0xd8:0x14e]
---
Predecessors: [0x2cc]
Successors: [0x14f, 0x153]
---
0xd8 JUMPDEST
0xd9 PUSH1 0x3
0xdb SSTORE
0xdc PUSH1 0x2
0xde SLOAD
0xdf PUSH1 0x1
0xe1 PUSH1 0xa0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 SUB
0xe7 AND
0xe8 PUSH4 0x40c10f19
0xed CALLER
0xee DUP4
0xef PUSH1 0x0
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 MSTORE
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x119 PUSH4 0xffffffff
0x11e DUP6
0x11f AND
0x120 MUL
0x121 DUP2
0x122 MSTORE
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b SWAP1
0x12c SWAP3
0x12d AND
0x12e PUSH1 0x4
0x130 DUP4
0x131 ADD
0x132 MSTORE
0x133 PUSH1 0x24
0x135 DUP3
0x136 ADD
0x137 MSTORE
0x138 PUSH1 0x44
0x13a ADD
0x13b PUSH1 0x20
0x13d PUSH1 0x40
0x13f MLOAD
0x140 DUP1
0x141 DUP4
0x142 SUB
0x143 DUP2
0x144 PUSH1 0x0
0x146 DUP8
0x147 DUP1
0x148 EXTCODESIZE
0x149 ISZERO
0x14a ISZERO
0x14b PUSH2 0x153
0x14e JUMPI
---
0xd8: JUMPDEST 
0xd9: V59 = 0x3
0xdb: S[0x3] = S0
0xdc: V60 = 0x2
0xde: V61 = S[0x2]
0xdf: V62 = 0x1
0xe1: V63 = 0xa0
0xe3: V64 = 0x2
0xe5: V65 = EXP 0x2 0xa0
0xe6: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xe8: V68 = 0x40c10f19
0xed: V69 = CALLER
0xef: V70 = 0x0
0xf1: V71 = 0x40
0xf3: V72 = M[0x40]
0xf4: V73 = 0x20
0xf6: V74 = ADD 0x20 V72
0xf7: M[V74] = 0x0
0xf8: V75 = 0x40
0xfa: V76 = M[0x40]
0xfb: V77 = 0x100000000000000000000000000000000000000000000000000000000
0x119: V78 = 0xffffffff
0x11f: V79 = AND 0x40c10f19 0xffffffff
0x120: V80 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x122: M[V76] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x123: V81 = 0x1
0x125: V82 = 0xa0
0x127: V83 = 0x2
0x129: V84 = EXP 0x2 0xa0
0x12a: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d: V86 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V87 = 0x4
0x131: V88 = ADD V76 0x4
0x132: M[V88] = V86
0x133: V89 = 0x24
0x136: V90 = ADD V76 0x24
0x137: M[V90] = V40
0x138: V91 = 0x44
0x13a: V92 = ADD 0x44 V76
0x13b: V93 = 0x20
0x13d: V94 = 0x40
0x13f: V95 = M[0x40]
0x142: V96 = SUB V92 V95
0x144: V97 = 0x0
0x148: V98 = EXTCODESIZE V67
0x149: V99 = ISZERO V98
0x14a: V100 = ISZERO V99
0x14b: V101 = 0x153
0x14e: JUMPI 0x153 V100
---
Entry stack: [V10, V40, S0]
Stack pops: 2
Stack additions: [S1, V67, 0x40c10f19, V92, 0x20, V95, V96, V95, 0x0, V67]
Exit stack: [V10, V40, V67, 0x40c10f19, V92, 0x20, V95, V96, V95, 0x0, V67]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0xd8]
Successors: []
---
0x14f PUSH1 0x0
0x151 DUP1
0x152 REVERT
---
0x14f: V102 = 0x0
0x152: REVERT 0x0 0x0
---
Entry stack: [V10, V40, V67, 0x40c10f19, V92, 0x20, V95, V96, V95, 0x0, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40, V67, 0x40c10f19, V92, 0x20, V95, V96, V95, 0x0, V67]

================================

Block 0x153
[0x153:0x15f]
---
Predecessors: [0xd8]
Successors: [0x160, 0x164]
---
0x153 JUMPDEST
0x154 PUSH2 0x2c6
0x157 GAS
0x158 SUB
0x159 CALL
0x15a ISZERO
0x15b ISZERO
0x15c PUSH2 0x164
0x15f JUMPI
---
0x153: JUMPDEST 
0x154: V103 = 0x2c6
0x157: V104 = GAS
0x158: V105 = SUB V104 0x2c6
0x159: V106 = CALL V105 V67 0x0 V95 V96 V95 0x20
0x15a: V107 = ISZERO V106
0x15b: V108 = ISZERO V107
0x15c: V109 = 0x164
0x15f: JUMPI 0x164 V108
---
Entry stack: [V10, V40, V67, 0x40c10f19, V92, 0x20, V95, V96, V95, 0x0, V67]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V40, V67, 0x40c10f19, V92]

================================

Block 0x160
[0x160:0x163]
---
Predecessors: [0x153]
Successors: []
---
0x160 PUSH1 0x0
0x162 DUP1
0x163 REVERT
---
0x160: V110 = 0x0
0x163: REVERT 0x0 0x0
---
Entry stack: [V10, V40, V67, 0x40c10f19, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40, V67, 0x40c10f19, V92]

================================

Block 0x164
[0x164:0x16e]
---
Predecessors: [0x153]
Successors: [0x16f]
---
0x164 JUMPDEST
0x165 POP
0x166 POP
0x167 POP
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c MLOAD
0x16d POP
0x16e POP
---
0x164: JUMPDEST 
0x168: V111 = 0x40
0x16a: V112 = M[0x40]
0x16c: V113 = M[V112]
---
Entry stack: [V10, V40, V67, 0x40c10f19, V92]
Stack pops: 3
Stack additions: []
Exit stack: [V10, V40]

================================

Block 0x16f
[0x16f:0x171]
---
Predecessors: [0x164]
Successors: []
---
0x16f JUMPDEST
0x170 POP
0x171 STOP
---
0x16f: JUMPDEST 
0x171: STOP 
---
Entry stack: [V10, V40]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x172
[0x172:0x178]
---
Predecessors: [0xb]
Successors: [0x179, 0x17d]
---
0x172 JUMPDEST
0x173 CALLVALUE
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x172: JUMPDEST 
0x173: V114 = CALLVALUE
0x174: V115 = ISZERO V114
0x175: V116 = 0x17d
0x178: JUMPI 0x17d V115
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x172]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V117 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17d
[0x17d:0x184]
---
Predecessors: [0x172]
Successors: [0x2d3]
---
0x17d JUMPDEST
0x17e PUSH2 0x185
0x181 PUSH2 0x2d3
0x184 JUMP
---
0x17d: JUMPDEST 
0x17e: V118 = 0x185
0x181: V119 = 0x2d3
0x184: JUMP 0x2d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x185]
Exit stack: [V10, 0x185]

================================

Block 0x185
[0x185:0x196]
---
Predecessors: [0x2d3, 0x2d9, 0x3ff]
Successors: []
---
0x185 JUMPDEST
0x186 PUSH1 0x40
0x188 MLOAD
0x189 SWAP1
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x20
0x18e ADD
0x18f PUSH1 0x40
0x191 MLOAD
0x192 DUP1
0x193 SWAP2
0x194 SUB
0x195 SWAP1
0x196 RETURN
---
0x185: JUMPDEST 
0x186: V120 = 0x40
0x188: V121 = M[0x40]
0x18b: M[V121] = S0
0x18c: V122 = 0x20
0x18e: V123 = ADD 0x20 V121
0x18f: V124 = 0x40
0x191: V125 = M[0x40]
0x194: V126 = SUB V123 V125
0x196: RETURN V125 V126
---
Entry stack: [V10, 0x185, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x185]

================================

Block 0x197
[0x197:0x19d]
---
Predecessors: [0x3e]
Successors: [0x19e, 0x1a2]
---
0x197 JUMPDEST
0x198 CALLVALUE
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x197: JUMPDEST 
0x198: V127 = CALLVALUE
0x199: V128 = ISZERO V127
0x19a: V129 = 0x1a2
0x19d: JUMPI 0x1a2 V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x197]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V130 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a2
[0x1a2:0x1a9]
---
Predecessors: [0x197]
Successors: [0x2d9]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x185
0x1a6 PUSH2 0x2d9
0x1a9 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V131 = 0x185
0x1a6: V132 = 0x2d9
0x1a9: JUMP 0x2d9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x185]
Exit stack: [V10, 0x185]

================================

Block 0x1aa
[0x1aa:0x1bb]
---
Predecessors: []
Successors: []
---
0x1aa JUMPDEST
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae SWAP1
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 PUSH1 0x40
0x1b6 MLOAD
0x1b7 DUP1
0x1b8 SWAP2
0x1b9 SUB
0x1ba SWAP1
0x1bb RETURN
---
0x1aa: JUMPDEST 
0x1ab: V133 = 0x40
0x1ad: V134 = M[0x40]
0x1b0: M[V134] = S0
0x1b1: V135 = 0x20
0x1b3: V136 = ADD 0x20 V134
0x1b4: V137 = 0x40
0x1b6: V138 = M[0x40]
0x1b9: V139 = SUB V136 V138
0x1bb: RETURN V138 V139
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1bc
[0x1bc:0x1c2]
---
Predecessors: [0x49]
Successors: [0x1c3, 0x1c7]
---
0x1bc JUMPDEST
0x1bd CALLVALUE
0x1be ISZERO
0x1bf PUSH2 0x1c7
0x1c2 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V140 = CALLVALUE
0x1be: V141 = ISZERO V140
0x1bf: V142 = 0x1c7
0x1c2: JUMPI 0x1c7 V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c3
[0x1c3:0x1c6]
---
Predecessors: [0x1bc]
Successors: []
---
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 REVERT
---
0x1c3: V143 = 0x0
0x1c6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0x1bc]
Successors: [0x2df]
---
0x1c7 JUMPDEST
0x1c8 PUSH2 0x1cf
0x1cb PUSH2 0x2df
0x1ce JUMP
---
0x1c7: JUMPDEST 
0x1c8: V144 = 0x1cf
0x1cb: V145 = 0x2df
0x1ce: JUMP 0x2df
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cf]
Exit stack: [V10, 0x1cf]

================================

Block 0x1cf
[0x1cf:0x1d0]
---
Predecessors: [0x332, 0x39d, 0x3ee]
Successors: []
---
0x1cf JUMPDEST
0x1d0 STOP
---
0x1cf: JUMPDEST 
0x1d0: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d1
[0x1d1:0x1d7]
---
Predecessors: [0x54]
Successors: [0x1d8, 0x1dc]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V146 = CALLVALUE
0x1d3: V147 = ISZERO V146
0x1d4: V148 = 0x1dc
0x1d7: JUMPI 0x1dc V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V149 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x1d1]
Successors: [0x334]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x1e4
0x1e0 PUSH2 0x334
0x1e3 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V150 = 0x1e4
0x1e0: V151 = 0x334
0x1e3: JUMP 0x334
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e4]
Exit stack: [V10, 0x1e4]

================================

Block 0x1e4
[0x1e4:0x1ff]
---
Predecessors: [0x334, 0x3f0, 0x405]
Successors: []
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 SWAP1
0x1f1 SWAP2
0x1f2 AND
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc SWAP2
0x1fd SUB
0x1fe SWAP1
0x1ff RETURN
---
0x1e4: JUMPDEST 
0x1e5: V152 = 0x40
0x1e7: V153 = M[0x40]
0x1e8: V154 = 0x1
0x1ea: V155 = 0xa0
0x1ec: V156 = 0x2
0x1ee: V157 = EXP 0x2 0xa0
0x1ef: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V159 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: M[V153] = V159
0x1f5: V160 = 0x20
0x1f7: V161 = ADD 0x20 V153
0x1f8: V162 = 0x40
0x1fa: V163 = M[0x40]
0x1fd: V164 = SUB V161 V163
0x1ff: RETURN V163 V164
---
Entry stack: [V10, 0x1e4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1e4]

================================

Block 0x200
[0x200:0x206]
---
Predecessors: [0x5f]
Successors: [0x207, 0x20b]
---
0x200 JUMPDEST
0x201 CALLVALUE
0x202 ISZERO
0x203 PUSH2 0x20b
0x206 JUMPI
---
0x200: JUMPDEST 
0x201: V165 = CALLVALUE
0x202: V166 = ISZERO V165
0x203: V167 = 0x20b
0x206: JUMPI 0x20b V166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x207
[0x207:0x20a]
---
Predecessors: [0x200]
Successors: []
---
0x207 PUSH1 0x0
0x209 DUP1
0x20a REVERT
---
0x207: V168 = 0x0
0x20a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20b
[0x20b:0x21e]
---
Predecessors: [0x200]
Successors: [0x343]
---
0x20b JUMPDEST
0x20c PUSH2 0x1cf
0x20f PUSH1 0x1
0x211 PUSH1 0xa0
0x213 PUSH1 0x2
0x215 EXP
0x216 SUB
0x217 PUSH1 0x4
0x219 CALLDATALOAD
0x21a AND
0x21b PUSH2 0x343
0x21e JUMP
---
0x20b: JUMPDEST 
0x20c: V169 = 0x1cf
0x20f: V170 = 0x1
0x211: V171 = 0xa0
0x213: V172 = 0x2
0x215: V173 = EXP 0x2 0xa0
0x216: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V175 = 0x4
0x219: V176 = CALLDATALOAD 0x4
0x21a: V177 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V178 = 0x343
0x21e: JUMP 0x343
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cf, V177]
Exit stack: [V10, 0x1cf, V177]

================================

Block 0x21f
[0x21f:0x220]
---
Predecessors: []
Successors: []
---
0x21f JUMPDEST
0x220 STOP
---
0x21f: JUMPDEST 
0x220: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x221
[0x221:0x227]
---
Predecessors: [0x6a]
Successors: [0x228, 0x22c]
---
0x221 JUMPDEST
0x222 CALLVALUE
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x221: JUMPDEST 
0x222: V179 = CALLVALUE
0x223: V180 = ISZERO V179
0x224: V181 = 0x22c
0x227: JUMPI 0x22c V180
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x221]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V182 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22c
[0x22c:0x233]
---
Predecessors: [0x221]
Successors: [0x3a0]
---
0x22c JUMPDEST
0x22d PUSH2 0x1cf
0x230 PUSH2 0x3a0
0x233 JUMP
---
0x22c: JUMPDEST 
0x22d: V183 = 0x1cf
0x230: V184 = 0x3a0
0x233: JUMP 0x3a0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cf]
Exit stack: [V10, 0x1cf]

================================

Block 0x234
[0x234:0x235]
---
Predecessors: []
Successors: []
---
0x234 JUMPDEST
0x235 STOP
---
0x234: JUMPDEST 
0x235: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x236
[0x236:0x23c]
---
Predecessors: [0x75]
Successors: [0x23d, 0x241]
---
0x236 JUMPDEST
0x237 CALLVALUE
0x238 ISZERO
0x239 PUSH2 0x241
0x23c JUMPI
---
0x236: JUMPDEST 
0x237: V185 = CALLVALUE
0x238: V186 = ISZERO V185
0x239: V187 = 0x241
0x23c: JUMPI 0x241 V186
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x236]
Successors: []
---
0x23d PUSH1 0x0
0x23f DUP1
0x240 REVERT
---
0x23d: V188 = 0x0
0x240: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x241
[0x241:0x248]
---
Predecessors: [0x236]
Successors: [0x3f0]
---
0x241 JUMPDEST
0x242 PUSH2 0x1e4
0x245 PUSH2 0x3f0
0x248 JUMP
---
0x241: JUMPDEST 
0x242: V189 = 0x1e4
0x245: V190 = 0x3f0
0x248: JUMP 0x3f0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e4]
Exit stack: [V10, 0x1e4]

================================

Block 0x249
[0x249:0x264]
---
Predecessors: []
Successors: []
---
0x249 JUMPDEST
0x24a PUSH1 0x40
0x24c MLOAD
0x24d PUSH1 0x1
0x24f PUSH1 0xa0
0x251 PUSH1 0x2
0x253 EXP
0x254 SUB
0x255 SWAP1
0x256 SWAP2
0x257 AND
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x20
0x25c ADD
0x25d PUSH1 0x40
0x25f MLOAD
0x260 DUP1
0x261 SWAP2
0x262 SUB
0x263 SWAP1
0x264 RETURN
---
0x249: JUMPDEST 
0x24a: V191 = 0x40
0x24c: V192 = M[0x40]
0x24d: V193 = 0x1
0x24f: V194 = 0xa0
0x251: V195 = 0x2
0x253: V196 = EXP 0x2 0xa0
0x254: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V198 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x259: M[V192] = V198
0x25a: V199 = 0x20
0x25c: V200 = ADD 0x20 V192
0x25d: V201 = 0x40
0x25f: V202 = M[0x40]
0x262: V203 = SUB V200 V202
0x264: RETURN V202 V203
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x265
[0x265:0x26b]
---
Predecessors: [0x80]
Successors: [0x26c, 0x270]
---
0x265 JUMPDEST
0x266 CALLVALUE
0x267 ISZERO
0x268 PUSH2 0x270
0x26b JUMPI
---
0x265: JUMPDEST 
0x266: V204 = CALLVALUE
0x267: V205 = ISZERO V204
0x268: V206 = 0x270
0x26b: JUMPI 0x270 V205
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0x265]
Successors: []
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f REVERT
---
0x26c: V207 = 0x0
0x26f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x270
[0x270:0x277]
---
Predecessors: [0x265]
Successors: [0x3ff]
---
0x270 JUMPDEST
0x271 PUSH2 0x185
0x274 PUSH2 0x3ff
0x277 JUMP
---
0x270: JUMPDEST 
0x271: V208 = 0x185
0x274: V209 = 0x3ff
0x277: JUMP 0x3ff
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x185]
Exit stack: [V10, 0x185]

================================

Block 0x278
[0x278:0x289]
---
Predecessors: []
Successors: []
---
0x278 JUMPDEST
0x279 PUSH1 0x40
0x27b MLOAD
0x27c SWAP1
0x27d DUP2
0x27e MSTORE
0x27f PUSH1 0x20
0x281 ADD
0x282 PUSH1 0x40
0x284 MLOAD
0x285 DUP1
0x286 SWAP2
0x287 SUB
0x288 SWAP1
0x289 RETURN
---
0x278: JUMPDEST 
0x279: V210 = 0x40
0x27b: V211 = M[0x40]
0x27e: M[V211] = S0
0x27f: V212 = 0x20
0x281: V213 = ADD 0x20 V211
0x282: V214 = 0x40
0x284: V215 = M[0x40]
0x287: V216 = SUB V213 V215
0x289: RETURN V215 V216
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28a
[0x28a:0x290]
---
Predecessors: [0x8b]
Successors: [0x291, 0x295]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x28a: JUMPDEST 
0x28b: V217 = CALLVALUE
0x28c: V218 = ISZERO V217
0x28d: V219 = 0x295
0x290: JUMPI 0x295 V218
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x28a]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V220 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x29c]
---
Predecessors: [0x28a]
Successors: [0x405]
---
0x295 JUMPDEST
0x296 PUSH2 0x1e4
0x299 PUSH2 0x405
0x29c JUMP
---
0x295: JUMPDEST 
0x296: V221 = 0x1e4
0x299: V222 = 0x405
0x29c: JUMP 0x405
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e4]
Exit stack: [V10, 0x1e4]

================================

Block 0x29d
[0x29d:0x2b8]
---
Predecessors: []
Successors: []
---
0x29d JUMPDEST
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 SWAP1
0x2aa SWAP2
0x2ab AND
0x2ac DUP2
0x2ad MSTORE
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 DUP1
0x2b5 SWAP2
0x2b6 SUB
0x2b7 SWAP1
0x2b8 RETURN
---
0x29d: JUMPDEST 
0x29e: V223 = 0x40
0x2a0: V224 = M[0x40]
0x2a1: V225 = 0x1
0x2a3: V226 = 0xa0
0x2a5: V227 = 0x2
0x2a7: V228 = EXP 0x2 0xa0
0x2a8: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ab: V230 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: M[V224] = V230
0x2ae: V231 = 0x20
0x2b0: V232 = ADD 0x20 V224
0x2b1: V233 = 0x40
0x2b3: V234 = M[0x40]
0x2b6: V235 = SUB V232 V234
0x2b8: RETURN V234 V235
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b9
[0x2b9:0x2c6]
---
Predecessors: [0x97, 0xac, 0xc2]
Successors: [0x2c7, 0x2c8]
---
0x2b9 JUMPDEST
0x2ba PUSH1 0x0
0x2bc DUP3
0x2bd DUP3
0x2be ADD
0x2bf DUP4
0x2c0 DUP2
0x2c1 LT
0x2c2 ISZERO
0x2c3 PUSH2 0x2c8
0x2c6 JUMPI
---
0x2b9: JUMPDEST 
0x2ba: V236 = 0x0
0x2be: V237 = ADD V40 S1
0x2c1: V238 = LT V237 S1
0x2c2: V239 = ISZERO V238
0x2c3: V240 = 0x2c8
0x2c6: JUMPI 0x2c8 V239
---
Entry stack: [V10, V40, {0xac, 0xc2, 0xd8}, S1, V40]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V237]
Exit stack: [V10, V40, {0xac, 0xc2, 0xd8}, S1, V40, 0x0, V237]

================================

Block 0x2c7
[0x2c7:0x2c7]
---
Predecessors: [0x2b9]
Successors: []
---
0x2c7 INVALID
---
0x2c7: INVALID 
---
Entry stack: [V10, V40, {0xac, 0xc2, 0xd8}, S3, V40, 0x0, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40, {0xac, 0xc2, 0xd8}, S3, V40, 0x0, V237]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2b9]
Successors: [0x2cc]
---
0x2c8 JUMPDEST
0x2c9 DUP1
0x2ca SWAP2
0x2cb POP
---
0x2c8: JUMPDEST 
---
Entry stack: [V10, V40, {0xac, 0xc2, 0xd8}, S3, V40, 0x0, V237]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, V40, {0xac, 0xc2, 0xd8}, S3, V40, V237, V237]

================================

Block 0x2cc
[0x2cc:0x2d2]
---
Predecessors: [0x2c8]
Successors: [0xac, 0xc2, 0xd8]
---
0x2cc JUMPDEST
0x2cd POP
0x2ce SWAP3
0x2cf SWAP2
0x2d0 POP
0x2d1 POP
0x2d2 JUMP
---
0x2cc: JUMPDEST 
0x2d2: JUMP {0xac, 0xc2, 0xd8}
---
Entry stack: [V10, V40, {0xac, 0xc2, 0xd8}, S3, V40, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, V40, S1]

================================

Block 0x2d3
[0x2d3:0x2d8]
---
Predecessors: [0x17d]
Successors: [0x185]
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x3
0x2d6 SLOAD
0x2d7 DUP2
0x2d8 JUMP
---
0x2d3: JUMPDEST 
0x2d4: V241 = 0x3
0x2d6: V242 = S[0x3]
0x2d8: JUMP 0x185
---
Entry stack: [V10, 0x185]
Stack pops: 1
Stack additions: [S0, V242]
Exit stack: [V10, 0x185, V242]

================================

Block 0x2d9
[0x2d9:0x2de]
---
Predecessors: [0x1a2]
Successors: [0x185]
---
0x2d9 JUMPDEST
0x2da PUSH1 0x4
0x2dc SLOAD
0x2dd DUP2
0x2de JUMP
---
0x2d9: JUMPDEST 
0x2da: V243 = 0x4
0x2dc: V244 = S[0x4]
0x2de: JUMP 0x185
---
Entry stack: [V10, 0x185]
Stack pops: 1
Stack additions: [S0, V244]
Exit stack: [V10, 0x185, V244]

================================

Block 0x2df
[0x2df:0x2f5]
---
Predecessors: [0x1c7]
Successors: [0x2f6, 0x2fa]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x0
0x2e2 SLOAD
0x2e3 CALLER
0x2e4 PUSH1 0x1
0x2e6 PUSH1 0xa0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb SUB
0x2ec SWAP1
0x2ed DUP2
0x2ee AND
0x2ef SWAP2
0x2f0 AND
0x2f1 EQ
0x2f2 PUSH2 0x2fa
0x2f5 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V245 = 0x0
0x2e2: V246 = S[0x0]
0x2e3: V247 = CALLER
0x2e4: V248 = 0x1
0x2e6: V249 = 0xa0
0x2e8: V250 = 0x2
0x2ea: V251 = EXP 0x2 0xa0
0x2eb: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ee: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2f0: V254 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x2f1: V255 = EQ V254 V253
0x2f2: V256 = 0x2fa
0x2f5: JUMPI 0x2fa V255
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x2f6
[0x2f6:0x2f9]
---
Predecessors: [0x2df]
Successors: []
---
0x2f6 PUSH1 0x0
0x2f8 DUP1
0x2f9 REVERT
---
0x2f6: V257 = 0x0
0x2f9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x2fa
[0x2fa:0x326]
---
Predecessors: [0x2df]
Successors: [0x327, 0x32b]
---
0x2fa JUMPDEST
0x2fb CALLER
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 AND
0x305 PUSH3 0x2dc6c0
0x309 PUSH1 0x5
0x30b SLOAD
0x30c PUSH1 0x40
0x30e MLOAD
0x30f PUSH1 0x0
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP1
0x315 DUP4
0x316 SUB
0x317 DUP2
0x318 DUP6
0x319 DUP9
0x31a DUP9
0x31b CALL
0x31c SWAP4
0x31d POP
0x31e POP
0x31f POP
0x320 POP
0x321 ISZERO
0x322 ISZERO
0x323 PUSH2 0x32b
0x326 JUMPI
---
0x2fa: JUMPDEST 
0x2fb: V258 = CALLER
0x2fc: V259 = 0x1
0x2fe: V260 = 0xa0
0x300: V261 = 0x2
0x302: V262 = EXP 0x2 0xa0
0x303: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x304: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x305: V265 = 0x2dc6c0
0x309: V266 = 0x5
0x30b: V267 = S[0x5]
0x30c: V268 = 0x40
0x30e: V269 = M[0x40]
0x30f: V270 = 0x0
0x311: V271 = 0x40
0x313: V272 = M[0x40]
0x316: V273 = SUB V269 V272
0x31b: V274 = CALL 0x2dc6c0 V264 V267 V272 V273 V272 0x0
0x321: V275 = ISZERO V274
0x322: V276 = ISZERO V275
0x323: V277 = 0x32b
0x326: JUMPI 0x32b V276
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x327
[0x327:0x32a]
---
Predecessors: [0x2fa]
Successors: []
---
0x327 PUSH1 0x0
0x329 DUP1
0x32a REVERT
---
0x327: V278 = 0x0
0x32a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x32b
[0x32b:0x330]
---
Predecessors: [0x2fa]
Successors: [0x331]
---
0x32b JUMPDEST
0x32c PUSH1 0x0
0x32e PUSH1 0x5
0x330 SSTORE
---
0x32b: JUMPDEST 
0x32c: V279 = 0x0
0x32e: V280 = 0x5
0x330: S[0x5] = 0x0
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x331
[0x331:0x331]
---
Predecessors: [0x32b]
Successors: [0x332]
---
0x331 JUMPDEST
---
0x331: JUMPDEST 
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x332
[0x332:0x333]
---
Predecessors: [0x331]
Successors: [0x1cf]
---
0x332 JUMPDEST
0x333 JUMP
---
0x332: JUMPDEST 
0x333: JUMP 0x1cf
---
Entry stack: [V10, 0x1cf]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x334
[0x334:0x342]
---
Predecessors: [0x1dc]
Successors: [0x1e4]
---
0x334 JUMPDEST
0x335 PUSH1 0x0
0x337 SLOAD
0x338 PUSH1 0x1
0x33a PUSH1 0xa0
0x33c PUSH1 0x2
0x33e EXP
0x33f SUB
0x340 AND
0x341 DUP2
0x342 JUMP
---
0x334: JUMPDEST 
0x335: V281 = 0x0
0x337: V282 = S[0x0]
0x338: V283 = 0x1
0x33a: V284 = 0xa0
0x33c: V285 = 0x2
0x33e: V286 = EXP 0x2 0xa0
0x33f: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x340: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x342: JUMP 0x1e4
---
Entry stack: [V10, 0x1e4]
Stack pops: 1
Stack additions: [S0, V288]
Exit stack: [V10, 0x1e4, V288]

================================

Block 0x343
[0x343:0x359]
---
Predecessors: [0x20b]
Successors: [0x35a, 0x35e]
---
0x343 JUMPDEST
0x344 PUSH1 0x0
0x346 SLOAD
0x347 CALLER
0x348 PUSH1 0x1
0x34a PUSH1 0xa0
0x34c PUSH1 0x2
0x34e EXP
0x34f SUB
0x350 SWAP1
0x351 DUP2
0x352 AND
0x353 SWAP2
0x354 AND
0x355 EQ
0x356 PUSH2 0x35e
0x359 JUMPI
---
0x343: JUMPDEST 
0x344: V289 = 0x0
0x346: V290 = S[0x0]
0x347: V291 = CALLER
0x348: V292 = 0x1
0x34a: V293 = 0xa0
0x34c: V294 = 0x2
0x34e: V295 = EXP 0x2 0xa0
0x34f: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x352: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x354: V298 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x355: V299 = EQ V298 V297
0x356: V300 = 0x35e
0x359: JUMPI 0x35e V299
---
Entry stack: [V10, 0x1cf, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf, V177]

================================

Block 0x35a
[0x35a:0x35d]
---
Predecessors: [0x343]
Successors: []
---
0x35a PUSH1 0x0
0x35c DUP1
0x35d REVERT
---
0x35a: V301 = 0x0
0x35d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1cf, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf, V177]

================================

Block 0x35e
[0x35e:0x36e]
---
Predecessors: [0x343]
Successors: [0x36f, 0x373]
---
0x35e JUMPDEST
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 DUP2
0x368 AND
0x369 ISZERO
0x36a ISZERO
0x36b PUSH2 0x373
0x36e JUMPI
---
0x35e: JUMPDEST 
0x35f: V302 = 0x1
0x361: V303 = 0xa0
0x363: V304 = 0x2
0x365: V305 = EXP 0x2 0xa0
0x366: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x368: V307 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x369: V308 = ISZERO V307
0x36a: V309 = ISZERO V308
0x36b: V310 = 0x373
0x36e: JUMPI 0x373 V309
---
Entry stack: [V10, 0x1cf, V177]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1cf, V177]

================================

Block 0x36f
[0x36f:0x372]
---
Predecessors: [0x35e]
Successors: []
---
0x36f PUSH1 0x0
0x371 DUP1
0x372 REVERT
---
0x36f: V311 = 0x0
0x372: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1cf, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf, V177]

================================

Block 0x373
[0x373:0x39b]
---
Predecessors: [0x35e]
Successors: [0x39c]
---
0x373 JUMPDEST
0x374 PUSH1 0x1
0x376 DUP1
0x377 SLOAD
0x378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38d NOT
0x38e AND
0x38f PUSH1 0x1
0x391 PUSH1 0xa0
0x393 PUSH1 0x2
0x395 EXP
0x396 SUB
0x397 DUP4
0x398 AND
0x399 OR
0x39a SWAP1
0x39b SSTORE
---
0x373: JUMPDEST 
0x374: V312 = 0x1
0x377: V313 = S[0x1]
0x378: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x38d: V315 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x38e: V316 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V313
0x38f: V317 = 0x1
0x391: V318 = 0xa0
0x393: V319 = 0x2
0x395: V320 = EXP 0x2 0xa0
0x396: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x398: V322 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x399: V323 = OR V322 V316
0x39b: S[0x1] = V323
---
Entry stack: [V10, 0x1cf, V177]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1cf, V177]

================================

Block 0x39c
[0x39c:0x39c]
---
Predecessors: [0x373]
Successors: [0x39d]
---
0x39c JUMPDEST
---
0x39c: JUMPDEST 
---
Entry stack: [V10, 0x1cf, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf, V177]

================================

Block 0x39d
[0x39d:0x39f]
---
Predecessors: [0x39c]
Successors: [0x1cf]
---
0x39d JUMPDEST
0x39e POP
0x39f JUMP
---
0x39d: JUMPDEST 
0x39f: JUMP 0x1cf
---
Entry stack: [V10, 0x1cf, V177]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a0
[0x3a0:0x3b6]
---
Predecessors: [0x22c]
Successors: [0x3b7, 0x3bb]
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x1
0x3a3 SLOAD
0x3a4 CALLER
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 PUSH1 0x2
0x3ab EXP
0x3ac SUB
0x3ad SWAP1
0x3ae DUP2
0x3af AND
0x3b0 SWAP2
0x3b1 AND
0x3b2 EQ
0x3b3 PUSH2 0x3bb
0x3b6 JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V324 = 0x1
0x3a3: V325 = S[0x1]
0x3a4: V326 = CALLER
0x3a5: V327 = 0x1
0x3a7: V328 = 0xa0
0x3a9: V329 = 0x2
0x3ab: V330 = EXP 0x2 0xa0
0x3ac: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x3b1: V333 = AND V325 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V334 = EQ V333 V332
0x3b3: V335 = 0x3bb
0x3b6: JUMPI 0x3bb V334
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x3b7
[0x3b7:0x3ba]
---
Predecessors: [0x3a0]
Successors: []
---
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba REVERT
---
0x3b7: V336 = 0x0
0x3ba: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x3bb
[0x3bb:0x3ed]
---
Predecessors: [0x3a0]
Successors: [0x3ee]
---
0x3bb JUMPDEST
0x3bc PUSH1 0x1
0x3be DUP1
0x3bf SLOAD
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 SLOAD
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 NOT
0x3da SWAP1
0x3db DUP2
0x3dc AND
0x3dd PUSH1 0x1
0x3df PUSH1 0xa0
0x3e1 PUSH1 0x2
0x3e3 EXP
0x3e4 SUB
0x3e5 DUP5
0x3e6 AND
0x3e7 OR
0x3e8 SWAP1
0x3e9 SWAP2
0x3ea SSTORE
0x3eb AND
0x3ec SWAP1
0x3ed SSTORE
---
0x3bb: JUMPDEST 
0x3bc: V337 = 0x1
0x3bf: V338 = S[0x1]
0x3c0: V339 = 0x0
0x3c3: V340 = S[0x0]
0x3c4: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V342 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V343 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V340
0x3dd: V344 = 0x1
0x3df: V345 = 0xa0
0x3e1: V346 = 0x2
0x3e3: V347 = EXP 0x2 0xa0
0x3e4: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e6: V349 = AND V338 0xffffffffffffffffffffffffffffffffffffffff
0x3e7: V350 = OR V349 V343
0x3ea: S[0x0] = V350
0x3eb: V351 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V338
0x3ed: S[0x1] = V351
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x3ee
[0x3ee:0x3ef]
---
Predecessors: [0x3bb]
Successors: [0x1cf]
---
0x3ee JUMPDEST
0x3ef JUMP
---
0x3ee: JUMPDEST 
0x3ef: JUMP 0x1cf
---
Entry stack: [V10, 0x1cf]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f0
[0x3f0:0x3fe]
---
Predecessors: [0x241]
Successors: [0x1e4]
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x1
0x3f3 SLOAD
0x3f4 PUSH1 0x1
0x3f6 PUSH1 0xa0
0x3f8 PUSH1 0x2
0x3fa EXP
0x3fb SUB
0x3fc AND
0x3fd DUP2
0x3fe JUMP
---
0x3f0: JUMPDEST 
0x3f1: V352 = 0x1
0x3f3: V353 = S[0x1]
0x3f4: V354 = 0x1
0x3f6: V355 = 0xa0
0x3f8: V356 = 0x2
0x3fa: V357 = EXP 0x2 0xa0
0x3fb: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fc: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x3fe: JUMP 0x1e4
---
Entry stack: [V10, 0x1e4]
Stack pops: 1
Stack additions: [S0, V359]
Exit stack: [V10, 0x1e4, V359]

================================

Block 0x3ff
[0x3ff:0x404]
---
Predecessors: [0x270]
Successors: [0x185]
---
0x3ff JUMPDEST
0x400 PUSH1 0x5
0x402 SLOAD
0x403 DUP2
0x404 JUMP
---
0x3ff: JUMPDEST 
0x400: V360 = 0x5
0x402: V361 = S[0x5]
0x404: JUMP 0x185
---
Entry stack: [V10, 0x185]
Stack pops: 1
Stack additions: [S0, V361]
Exit stack: [V10, 0x185, V361]

================================

Block 0x405
[0x405:0x413]
---
Predecessors: [0x295]
Successors: [0x1e4]
---
0x405 JUMPDEST
0x406 PUSH1 0x2
0x408 SLOAD
0x409 PUSH1 0x1
0x40b PUSH1 0xa0
0x40d PUSH1 0x2
0x40f EXP
0x410 SUB
0x411 AND
0x412 DUP2
0x413 JUMP
---
0x405: JUMPDEST 
0x406: V362 = 0x2
0x408: V363 = S[0x2]
0x409: V364 = 0x1
0x40b: V365 = 0xa0
0x40d: V366 = 0x2
0x40f: V367 = EXP 0x2 0xa0
0x410: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x413: JUMP 0x1e4
---
Entry stack: [V10, 0x1e4]
Stack pops: 1
Stack additions: [S0, V369]
Exit stack: [V10, 0x1e4, V369]

================================

Block 0x414
[0x414:0x432]
---
Predecessors: []
Successors: [0x433]
---
0x414 STOP
0x415 LOG1
0x416 PUSH6 0x627a7a723058
0x41d SHA3
0x41e MISSING 0xbc
0x41f MISSING 0xc9
0x420 RETURNDATACOPY
0x421 DUP13
0x422 MISSING 0x5f
0x423 MISSING 0xad
0x424 DUP11
0x425 MISSING 0xce
0x426 SWAP1
0x427 MISSING 0x4a
0x428 MISSING 0xb1
0x429 MISSING 0xbe
0x42a STATICCALL
0x42b MISSING 0xbe
0x42c MISSING 0xfb
0x42d ADDRESS
0x42e MISSING 0x2c
0x42f DIFFICULTY
0x430 SWAP2
0x431 MISSING 0xb9
0x432 SWAP12
---
0x414: STOP 
0x415: LOG S0 S1 S2
0x416: V370 = 0x627a7a723058
0x41d: V371 = SHA3 0x627a7a723058 S3
0x41e: MISSING 0xbc
0x41f: MISSING 0xc9
0x420: RETURNDATACOPY S0 S1 S2
0x422: MISSING 0x5f
0x423: MISSING 0xad
0x425: MISSING 0xce
0x427: MISSING 0x4a
0x428: MISSING 0xb1
0x429: MISSING 0xbe
0x42a: V372 = STATICCALL S0 S1 S2 S3 S4 S5
0x42b: MISSING 0xbe
0x42c: MISSING 0xfb
0x42d: V373 = ADDRESS
0x42e: MISSING 0x2c
0x42f: V374 = DIFFICULTY
0x431: MISSING 0xb9
0x432: NOP 
---
Entry stack: []
Stack pops: 0
Stack additions: [V371, S15, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S1, S0, V372, V373, S1, S0, V374, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0]
Exit stack: []

================================

Block 0x433
[0x433:0x449]
---
Predecessors: [0x414]
Successors: []
---
0x433 JUMPDEST
0x434 PUSH21 0xfe7275cf9b3949d2d60029
---
0x433: JUMPDEST 
0x434: V375 = 0xfe7275cf9b3949d2d60029
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xfe7275cf9b3949d2d60029]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xfe7275cf9b3949d2d60029]

================================

Function 0:
Public function signature: 0x18160ddd
Entry block: 0x172
Exit block: 0x185
Body: 0x172, 0x179, 0x17d, 0x185, 0x2d3

Function 1:
Public function signature: 0x1a39d8ef
Entry block: 0x197
Exit block: 0x185
Body: 0x185, 0x197, 0x19e, 0x1a2, 0x2d9

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x1bc
Exit block: 0x1cf
Body: 0x1bc, 0x1c3, 0x1c7, 0x1cf, 0x2df, 0x2f6, 0x2fa, 0x327, 0x32b, 0x331, 0x332

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x1d1
Exit block: 0x1e4
Body: 0x1d1, 0x1d8, 0x1dc, 0x1e4, 0x334

Function 4:
Public function signature: 0xa6f9dae1
Entry block: 0x200
Exit block: 0x1cf
Body: 0x1cf, 0x200, 0x207, 0x20b, 0x343, 0x35a, 0x35e, 0x36f, 0x373, 0x39c, 0x39d

Function 5:
Public function signature: 0xbd9b6d86
Entry block: 0x221
Exit block: 0x1cf
Body: 0x1cf, 0x221, 0x228, 0x22c, 0x3a0, 0x3b7, 0x3bb, 0x3ee

Function 6:
Public function signature: 0xd4ee1d90
Entry block: 0x236
Exit block: 0x1e4
Body: 0x1e4, 0x236, 0x23d, 0x241, 0x3f0

Function 7:
Public function signature: 0xf441b1c8
Entry block: 0x265
Exit block: 0x185
Body: 0x185, 0x265, 0x26c, 0x270, 0x3ff

Function 8:
Public function signature: 0xfc0c546a
Entry block: 0x28a
Exit block: 0x1e4
Body: 0x1e4, 0x28a, 0x291, 0x295, 0x405

Function 9:
Public fallback function
Entry block: 0x96
Exit block: 0x14f
Body: 0x96, 0x97, 0xac, 0x14f

Function 10:
Private function
Entry block: 0x2b9
Exit block: 0x2cc
Body: 0x2b9, 0x2c8, 0x2cc

