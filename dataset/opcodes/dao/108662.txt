Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x51]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x51
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x51
0xa: JUMPI 0x51 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xd3]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x82bd0b3
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xd3
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x82bd0b3
0x20: V14 = EQ V12 0x82bd0b3
0x21: V15 = 0xd3
0x24: JUMPI 0xd3 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xdd]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0xdd
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0xdd
0x2f: JUMPI 0xdd V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xef]
---
0x30 DUP1
0x31 PUSH4 0x8da5cb5b
0x36 EQ
0x37 PUSH2 0xef
0x3a JUMPI
---
0x31: V19 = 0x8da5cb5b
0x36: V20 = EQ 0x8da5cb5b V12
0x37: V21 = 0xef
0x3a: JUMPI 0xef V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x11b]
---
0x3b DUP1
0x3c PUSH4 0x93fc9fbe
0x41 EQ
0x42 PUSH2 0x11b
0x45 JUMPI
---
0x3c: V22 = 0x93fc9fbe
0x41: V23 = EQ 0x93fc9fbe V12
0x42: V24 = 0x11b
0x45: JUMPI 0x11b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x147]
---
0x46 DUP1
0x47 PUSH4 0xde82efb4
0x4c EQ
0x4d PUSH2 0x147
0x50 JUMPI
---
0x47: V25 = 0xde82efb4
0x4c: V26 = EQ 0xde82efb4 V12
0x4d: V27 = 0x147
0x50: JUMPI 0x147 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x54]
---
Predecessors: [0x0, 0x46]
Successors: [0x55]
---
0x51 JUMPDEST
0x52 PUSH2 0xd1
---
0x51: JUMPDEST 
0x52: V28 = 0xd1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V12, 0xd1]

================================

Block 0x55
[0x55:0x6a]
---
Predecessors: [0x51]
Successors: [0x6b, 0xce]
---
0x55 JUMPDEST
0x56 PUSH1 0x1
0x58 SLOAD
0x59 CALLVALUE
0x5a PUSH1 0x1
0x5c PUSH1 0xa0
0x5e PUSH1 0x2
0x60 EXP
0x61 SUB
0x62 SWAP1
0x63 SWAP2
0x64 AND
0x65 BALANCE
0x66 LT
0x67 PUSH2 0xce
0x6a JUMPI
---
0x55: JUMPDEST 
0x56: V29 = 0x1
0x58: V30 = S[0x1]
0x59: V31 = CALLVALUE
0x5a: V32 = 0x1
0x5c: V33 = 0xa0
0x5e: V34 = 0x2
0x60: V35 = EXP 0x2 0xa0
0x61: V36 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64: V37 = AND V30 0xffffffffffffffffffffffffffffffffffffffff
0x65: V38 = BALANCE V37
0x66: V39 = LT V38 V31
0x67: V40 = 0xce
0x6a: JUMPI 0xce V39
---
Entry stack: [V12, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd1]

================================

Block 0x6b
[0x6b:0xcd]
---
Predecessors: [0x55]
Successors: [0xce]
---
0x6b PUSH1 0x1
0x6d SLOAD
0x6e PUSH1 0x40
0x70 DUP1
0x71 MLOAD
0x72 PUSH1 0xd8
0x74 PUSH1 0x2
0x76 EXP
0x77 PUSH5 0x776f6e2829
0x7d MUL
0x7e DUP2
0x7f MSTORE
0x80 DUP2
0x81 MLOAD
0x82 SWAP1
0x83 DUP2
0x84 SWAP1
0x85 SUB
0x86 PUSH1 0x5
0x88 ADD
0x89 DUP2
0x8a SHA3
0x8b PUSH4 0xffffffff
0x90 PUSH1 0xe0
0x92 PUSH1 0x2
0x94 EXP
0x95 SWAP2
0x96 DUP3
0x97 SWAP1
0x98 DIV
0x99 SWAP1
0x9a DUP2
0x9b AND
0x9c SWAP1
0x9d SWAP2
0x9e MUL
0x9f DUP3
0xa0 MSTORE
0xa1 SWAP2
0xa2 MLOAD
0xa3 PUSH1 0x1
0xa5 PUSH1 0xa0
0xa7 PUSH1 0x2
0xa9 EXP
0xaa SUB
0xab SWAP1
0xac SWAP4
0xad AND
0xae SWAP3
0xaf PUSH3 0x249f0
0xb3 SWAP2
0xb4 PUSH1 0x4
0xb6 DUP1
0xb7 DUP3
0xb8 ADD
0xb9 SWAP3
0xba PUSH1 0x0
0xbc SWAP3
0xbd SWAP1
0xbe SWAP2
0xbf SWAP1
0xc0 DUP3
0xc1 SWAP1
0xc2 SUB
0xc3 ADD
0xc4 DUP2
0xc5 DUP4
0xc6 DUP9
0xc7 DUP8
0xc8 CALL
0xc9 POP
0xca POP
0xcb POP
0xcc POP
0xcd POP
---
0x6b: V41 = 0x1
0x6d: V42 = S[0x1]
0x6e: V43 = 0x40
0x71: V44 = M[0x40]
0x72: V45 = 0xd8
0x74: V46 = 0x2
0x76: V47 = EXP 0x2 0xd8
0x77: V48 = 0x776f6e2829
0x7d: V49 = MUL 0x776f6e2829 0x1000000000000000000000000000000000000000000000000000000
0x7f: M[V44] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x81: V50 = M[0x40]
0x85: V51 = SUB V44 V50
0x86: V52 = 0x5
0x88: V53 = ADD 0x5 V51
0x8a: V54 = SHA3 V50 V53
0x8b: V55 = 0xffffffff
0x90: V56 = 0xe0
0x92: V57 = 0x2
0x94: V58 = EXP 0x2 0xe0
0x98: V59 = DIV V54 0x100000000000000000000000000000000000000000000000000000000
0x9b: V60 = AND V59 0xffffffff
0x9e: V61 = MUL 0x100000000000000000000000000000000000000000000000000000000 V60
0xa0: M[V50] = V61
0xa2: V62 = M[0x40]
0xa3: V63 = 0x1
0xa5: V64 = 0xa0
0xa7: V65 = 0x2
0xa9: V66 = EXP 0x2 0xa0
0xaa: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad: V68 = AND V42 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V69 = 0x249f0
0xb4: V70 = 0x4
0xb8: V71 = ADD V50 0x4
0xba: V72 = 0x0
0xc2: V73 = SUB V50 V62
0xc3: V74 = ADD V73 0x4
0xc8: V75 = CALL 0x249f0 V68 0x0 V62 V74 V62 0x0
---
Entry stack: [V12, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd1]

================================

Block 0xce
[0xce:0xce]
---
Predecessors: [0x55, 0x6b]
Successors: [0xcf]
---
0xce JUMPDEST
---
0xce: JUMPDEST 
---
Entry stack: [V12, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd1]

================================

Block 0xcf
[0xcf:0xd0]
---
Predecessors: [0xce]
Successors: [0xd1]
---
0xcf JUMPDEST
0xd0 JUMP
---
0xcf: JUMPDEST 
0xd0: JUMP 0xd1
---
Entry stack: [V12, 0xd1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0xd2]
---
Predecessors: [0xcf, 0x1df, 0x296]
Successors: []
---
0xd1 JUMPDEST
0xd2 STOP
---
0xd1: JUMPDEST 
0xd2: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd3
[0xd3:0xda]
---
Predecessors: [0xb]
Successors: [0x151]
---
0xd3 JUMPDEST
0xd4 PUSH2 0xd1
0xd7 PUSH2 0x151
0xda JUMP
---
0xd3: JUMPDEST 
0xd4: V76 = 0xd1
0xd7: V77 = 0x151
0xda: JUMP 0x151
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V12, 0xd1]

================================

Block 0xdb
[0xdb:0xdc]
---
Predecessors: []
Successors: []
---
0xdb JUMPDEST
0xdc STOP
---
0xdb: JUMPDEST 
0xdc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdd
[0xdd:0xe3]
---
Predecessors: [0x25]
Successors: [0xe4, 0xe5]
---
0xdd JUMPDEST
0xde CALLVALUE
0xdf ISZERO
0xe0 PUSH2 0xe5
0xe3 JUMPI
---
0xdd: JUMPDEST 
0xde: V78 = CALLVALUE
0xdf: V79 = ISZERO V78
0xe0: V80 = 0xe5
0xe3: JUMPI 0xe5 V79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe4
[0xe4:0xe4]
---
Predecessors: [0xdd]
Successors: []
---
0xe4 INVALID
---
0xe4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0xdd]
Successors: [0x1e1]
---
0xe5 JUMPDEST
0xe6 PUSH2 0xd1
0xe9 PUSH2 0x1e1
0xec JUMP
---
0xe5: JUMPDEST 
0xe6: V81 = 0xd1
0xe9: V82 = 0x1e1
0xec: JUMP 0x1e1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V12, 0xd1]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: []
Successors: []
---
0xed JUMPDEST
0xee STOP
---
0xed: JUMPDEST 
0xee: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0x30]
Successors: [0xf6, 0xf7]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xf7
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V83 = CALLVALUE
0xf1: V84 = ISZERO V83
0xf2: V85 = 0xf7
0xf5: JUMPI 0xf7 V84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xf6]
---
Predecessors: [0xef]
Successors: []
---
0xf6 INVALID
---
0xf6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7
[0xf7:0xfe]
---
Predecessors: [0xef]
Successors: [0x20a]
---
0xf7 JUMPDEST
0xf8 PUSH2 0xff
0xfb PUSH2 0x20a
0xfe JUMP
---
0xf7: JUMPDEST 
0xf8: V86 = 0xff
0xfb: V87 = 0x20a
0xfe: JUMP 0x20a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xff]
Exit stack: [V12, 0xff]

================================

Block 0xff
[0xff:0x11a]
---
Predecessors: [0x20a, 0x219]
Successors: []
---
0xff JUMPDEST
0x100 PUSH1 0x40
0x102 DUP1
0x103 MLOAD
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c SWAP1
0x10d SWAP3
0x10e AND
0x10f DUP3
0x110 MSTORE
0x111 MLOAD
0x112 SWAP1
0x113 DUP2
0x114 SWAP1
0x115 SUB
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP1
0x11a RETURN
---
0xff: JUMPDEST 
0x100: V88 = 0x40
0x103: V89 = M[0x40]
0x104: V90 = 0x1
0x106: V91 = 0xa0
0x108: V92 = 0x2
0x10a: V93 = EXP 0x2 0xa0
0x10b: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e: V95 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x110: M[V89] = V95
0x111: V96 = M[0x40]
0x115: V97 = SUB V89 V96
0x116: V98 = 0x20
0x118: V99 = ADD 0x20 V97
0x11a: RETURN V96 V99
---
Entry stack: [V12, 0xff, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0x11b
[0x11b:0x121]
---
Predecessors: [0x3b]
Successors: [0x122, 0x123]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d ISZERO
0x11e PUSH2 0x123
0x121 JUMPI
---
0x11b: JUMPDEST 
0x11c: V100 = CALLVALUE
0x11d: V101 = ISZERO V100
0x11e: V102 = 0x123
0x121: JUMPI 0x123 V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x122
[0x122:0x122]
---
Predecessors: [0x11b]
Successors: []
---
0x122 INVALID
---
0x122: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x11b]
Successors: [0x219]
---
0x123 JUMPDEST
0x124 PUSH2 0xff
0x127 PUSH2 0x219
0x12a JUMP
---
0x123: JUMPDEST 
0x124: V103 = 0xff
0x127: V104 = 0x219
0x12a: JUMP 0x219
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xff]
Exit stack: [V12, 0xff]

================================

Block 0x12b
[0x12b:0x146]
---
Predecessors: []
Successors: []
---
0x12b JUMPDEST
0x12c PUSH1 0x40
0x12e DUP1
0x12f MLOAD
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 SWAP1
0x139 SWAP3
0x13a AND
0x13b DUP3
0x13c MSTORE
0x13d MLOAD
0x13e SWAP1
0x13f DUP2
0x140 SWAP1
0x141 SUB
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP1
0x146 RETURN
---
0x12b: JUMPDEST 
0x12c: V105 = 0x40
0x12f: V106 = M[0x40]
0x130: V107 = 0x1
0x132: V108 = 0xa0
0x134: V109 = 0x2
0x136: V110 = EXP 0x2 0xa0
0x137: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V112 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x13c: M[V106] = V112
0x13d: V113 = M[0x40]
0x141: V114 = SUB V106 V113
0x142: V115 = 0x20
0x144: V116 = ADD 0x20 V114
0x146: RETURN V113 V116
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x46]
Successors: [0x228]
---
0x147 JUMPDEST
0x148 PUSH2 0xd1
0x14b PUSH2 0x228
0x14e JUMP
---
0x147: JUMPDEST 
0x148: V117 = 0xd1
0x14b: V118 = 0x228
0x14e: JUMP 0x228
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V12, 0xd1]

================================

Block 0x14f
[0x14f:0x150]
---
Predecessors: []
Successors: []
---
0x14f JUMPDEST
0x150 STOP
---
0x14f: JUMPDEST 
0x150: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x151
[0x151:0x1de]
---
Predecessors: [0xd3]
Successors: [0x1df]
---
0x151 JUMPDEST
0x152 PUSH1 0x1
0x154 SLOAD
0x155 PUSH1 0x40
0x157 DUP1
0x158 MLOAD
0x159 PUSH32 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x17a DUP2
0x17b MSTORE
0x17c DUP2
0x17d MLOAD
0x17e SWAP1
0x17f DUP2
0x180 SWAP1
0x181 SUB
0x182 PUSH1 0x13
0x184 ADD
0x185 DUP2
0x186 SHA3
0x187 PUSH4 0xffffffff
0x18c PUSH1 0xe0
0x18e PUSH1 0x2
0x190 EXP
0x191 SWAP2
0x192 DUP3
0x193 SWAP1
0x194 DIV
0x195 SWAP1
0x196 DUP2
0x197 AND
0x198 SWAP1
0x199 SWAP2
0x19a MUL
0x19b DUP3
0x19c MSTORE
0x19d ADDRESS
0x19e PUSH1 0x1
0x1a0 PUSH1 0xa0
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 SUB
0x1a6 SWAP1
0x1a7 DUP2
0x1a8 AND
0x1a9 PUSH1 0x4
0x1ab DUP5
0x1ac ADD
0x1ad MSTORE
0x1ae SWAP3
0x1af MLOAD
0x1b0 SWAP3
0x1b1 SWAP1
0x1b2 SWAP4
0x1b3 AND
0x1b4 SWAP3
0x1b5 SWAP2
0x1b6 PUSH3 0x249f0
0x1ba SWAP2
0x1bb PUSH8 0xde0b6b3a7640000
0x1c4 SWAP2
0x1c5 PUSH1 0x24
0x1c7 DUP1
0x1c8 DUP4
0x1c9 ADD
0x1ca SWAP3
0x1cb PUSH1 0x0
0x1cd SWAP3
0x1ce SWAP2
0x1cf SWAP1
0x1d0 DUP3
0x1d1 SWAP1
0x1d2 SUB
0x1d3 ADD
0x1d4 DUP2
0x1d5 DUP6
0x1d6 DUP10
0x1d7 DUP9
0x1d8 CALL
0x1d9 POP
0x1da POP
0x1db POP
0x1dc POP
0x1dd POP
0x1de POP
---
0x151: JUMPDEST 
0x152: V119 = 0x1
0x154: V120 = S[0x1]
0x155: V121 = 0x40
0x158: V122 = M[0x40]
0x159: V123 = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x17b: M[V122] = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x17d: V124 = M[0x40]
0x181: V125 = SUB V122 V124
0x182: V126 = 0x13
0x184: V127 = ADD 0x13 V125
0x186: V128 = SHA3 V124 V127
0x187: V129 = 0xffffffff
0x18c: V130 = 0xe0
0x18e: V131 = 0x2
0x190: V132 = EXP 0x2 0xe0
0x194: V133 = DIV V128 0x100000000000000000000000000000000000000000000000000000000
0x197: V134 = AND V133 0xffffffff
0x19a: V135 = MUL 0x100000000000000000000000000000000000000000000000000000000 V134
0x19c: M[V124] = V135
0x19d: V136 = ADDRESS
0x19e: V137 = 0x1
0x1a0: V138 = 0xa0
0x1a2: V139 = 0x2
0x1a4: V140 = EXP 0x2 0xa0
0x1a5: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x1a9: V143 = 0x4
0x1ac: V144 = ADD V124 0x4
0x1ad: M[V144] = V142
0x1af: V145 = M[0x40]
0x1b3: V146 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V147 = 0x249f0
0x1bb: V148 = 0xde0b6b3a7640000
0x1c5: V149 = 0x24
0x1c9: V150 = ADD V124 0x24
0x1cb: V151 = 0x0
0x1d2: V152 = SUB V124 V145
0x1d3: V153 = ADD V152 0x24
0x1d8: V154 = CALL 0x249f0 V146 0xde0b6b3a7640000 V145 V153 V145 0x0
---
Entry stack: [V12, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd1]

================================

Block 0x1df
[0x1df:0x1e0]
---
Predecessors: [0x151]
Successors: [0xd1]
---
0x1df JUMPDEST
0x1e0 JUMP
---
0x1df: JUMPDEST 
0x1e0: JUMP 0xd1
---
Entry stack: [V12, 0xd1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e1
[0x1e1:0x1f7]
---
Predecessors: [0xe5]
Successors: [0x1f8, 0x1f9]
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x0
0x1e4 SLOAD
0x1e5 CALLER
0x1e6 PUSH1 0x1
0x1e8 PUSH1 0xa0
0x1ea PUSH1 0x2
0x1ec EXP
0x1ed SUB
0x1ee SWAP1
0x1ef DUP2
0x1f0 AND
0x1f1 SWAP2
0x1f2 AND
0x1f3 EQ
0x1f4 PUSH2 0x1f9
0x1f7 JUMPI
---
0x1e1: JUMPDEST 
0x1e2: V155 = 0x0
0x1e4: V156 = S[0x0]
0x1e5: V157 = CALLER
0x1e6: V158 = 0x1
0x1e8: V159 = 0xa0
0x1ea: V160 = 0x2
0x1ec: V161 = EXP 0x2 0xa0
0x1ed: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x1f2: V164 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V165 = EQ V164 V163
0x1f4: V166 = 0x1f9
0x1f7: JUMPI 0x1f9 V165
---
Entry stack: [V12, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd1]

================================

Block 0x1f8
[0x1f8:0x1f8]
---
Predecessors: [0x1e1]
Successors: []
---
0x1f8 INVALID
---
0x1f8: INVALID 
---
Entry stack: [V12, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd1]

================================

Block 0x1f9
[0x1f9:0x206]
---
Predecessors: [0x1e1]
Successors: []
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x0
0x1fc SLOAD
0x1fd PUSH1 0x1
0x1ff PUSH1 0xa0
0x201 PUSH1 0x2
0x203 EXP
0x204 SUB
0x205 AND
0x206 SELFDESTRUCT
---
0x1f9: JUMPDEST 
0x1fa: V167 = 0x0
0x1fc: V168 = S[0x0]
0x1fd: V169 = 0x1
0x1ff: V170 = 0xa0
0x201: V171 = 0x2
0x203: V172 = EXP 0x2 0xa0
0x204: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x205: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x206: SELFDESTRUCT V174
---
Entry stack: [V12, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd1]

================================

Block 0x207
[0x207:0x207]
---
Predecessors: []
Successors: [0x208]
---
0x207 JUMPDEST
---
0x207: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x208
[0x208:0x209]
---
Predecessors: [0x207]
Successors: []
Has unresolved jump.
---
0x208 JUMPDEST
0x209 JUMP
---
0x208: JUMPDEST 
0x209: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x20a
[0x20a:0x218]
---
Predecessors: [0xf7]
Successors: [0xff]
---
0x20a JUMPDEST
0x20b PUSH1 0x0
0x20d SLOAD
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 AND
0x217 DUP2
0x218 JUMP
---
0x20a: JUMPDEST 
0x20b: V175 = 0x0
0x20d: V176 = S[0x0]
0x20e: V177 = 0x1
0x210: V178 = 0xa0
0x212: V179 = 0x2
0x214: V180 = EXP 0x2 0xa0
0x215: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x218: JUMP 0xff
---
Entry stack: [V12, 0xff]
Stack pops: 1
Stack additions: [S0, V182]
Exit stack: [V12, 0xff, V182]

================================

Block 0x219
[0x219:0x227]
---
Predecessors: [0x123]
Successors: [0xff]
---
0x219 JUMPDEST
0x21a PUSH1 0x1
0x21c SLOAD
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 AND
0x226 DUP2
0x227 JUMP
---
0x219: JUMPDEST 
0x21a: V183 = 0x1
0x21c: V184 = S[0x1]
0x21d: V185 = 0x1
0x21f: V186 = 0xa0
0x221: V187 = 0x2
0x223: V188 = EXP 0x2 0xa0
0x224: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x225: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x227: JUMP 0xff
---
Entry stack: [V12, 0xff]
Stack pops: 1
Stack additions: [S0, V190]
Exit stack: [V12, 0xff, V190]

================================

Block 0x228
[0x228:0x295]
---
Predecessors: [0x147]
Successors: [0x296]
---
0x228 JUMPDEST
0x229 PUSH1 0x1
0x22b SLOAD
0x22c PUSH1 0x40
0x22e DUP1
0x22f MLOAD
0x230 PUSH1 0xd8
0x232 PUSH1 0x2
0x234 EXP
0x235 PUSH5 0x776f6e2829
0x23b MUL
0x23c DUP2
0x23d MSTORE
0x23e DUP2
0x23f MLOAD
0x240 SWAP1
0x241 DUP2
0x242 SWAP1
0x243 SUB
0x244 PUSH1 0x5
0x246 ADD
0x247 DUP2
0x248 SHA3
0x249 PUSH4 0xffffffff
0x24e PUSH1 0xe0
0x250 PUSH1 0x2
0x252 EXP
0x253 SWAP2
0x254 DUP3
0x255 SWAP1
0x256 DIV
0x257 SWAP1
0x258 DUP2
0x259 AND
0x25a SWAP1
0x25b SWAP2
0x25c MUL
0x25d DUP3
0x25e MSTORE
0x25f SWAP2
0x260 MLOAD
0x261 PUSH1 0x1
0x263 PUSH1 0xa0
0x265 PUSH1 0x2
0x267 EXP
0x268 SUB
0x269 SWAP1
0x26a SWAP4
0x26b AND
0x26c SWAP3
0x26d PUSH3 0x249f0
0x271 SWAP2
0x272 PUSH8 0xde0b6b3a7640000
0x27b SWAP2
0x27c PUSH1 0x4
0x27e DUP1
0x27f DUP4
0x280 ADD
0x281 SWAP3
0x282 PUSH1 0x0
0x284 SWAP3
0x285 SWAP2
0x286 SWAP1
0x287 DUP3
0x288 SWAP1
0x289 SUB
0x28a ADD
0x28b DUP2
0x28c DUP6
0x28d DUP10
0x28e DUP9
0x28f CALL
0x290 POP
0x291 POP
0x292 POP
0x293 POP
0x294 POP
0x295 POP
---
0x228: JUMPDEST 
0x229: V191 = 0x1
0x22b: V192 = S[0x1]
0x22c: V193 = 0x40
0x22f: V194 = M[0x40]
0x230: V195 = 0xd8
0x232: V196 = 0x2
0x234: V197 = EXP 0x2 0xd8
0x235: V198 = 0x776f6e2829
0x23b: V199 = MUL 0x776f6e2829 0x1000000000000000000000000000000000000000000000000000000
0x23d: M[V194] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x23f: V200 = M[0x40]
0x243: V201 = SUB V194 V200
0x244: V202 = 0x5
0x246: V203 = ADD 0x5 V201
0x248: V204 = SHA3 V200 V203
0x249: V205 = 0xffffffff
0x24e: V206 = 0xe0
0x250: V207 = 0x2
0x252: V208 = EXP 0x2 0xe0
0x256: V209 = DIV V204 0x100000000000000000000000000000000000000000000000000000000
0x259: V210 = AND V209 0xffffffff
0x25c: V211 = MUL 0x100000000000000000000000000000000000000000000000000000000 V210
0x25e: M[V200] = V211
0x260: V212 = M[0x40]
0x261: V213 = 0x1
0x263: V214 = 0xa0
0x265: V215 = 0x2
0x267: V216 = EXP 0x2 0xa0
0x268: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26b: V218 = AND V192 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V219 = 0x249f0
0x272: V220 = 0xde0b6b3a7640000
0x27c: V221 = 0x4
0x280: V222 = ADD V200 0x4
0x282: V223 = 0x0
0x289: V224 = SUB V200 V212
0x28a: V225 = ADD V224 0x4
0x28f: V226 = CALL 0x249f0 V218 0xde0b6b3a7640000 V212 V225 V212 0x0
---
Entry stack: [V12, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd1]

================================

Block 0x296
[0x296:0x297]
---
Predecessors: [0x228]
Successors: [0xd1]
---
0x296 JUMPDEST
0x297 JUMP
---
0x296: JUMPDEST 
0x297: JUMP 0xd1
---
Entry stack: [V12, 0xd1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x298
[0x298:0x2c3]
---
Predecessors: []
Successors: []
---
0x298 STOP
0x299 LOG1
0x29a PUSH6 0x627a7a723058
0x2a1 SHA3
0x2a2 MISSING 0xdf
0x2a3 CALLCODE
0x2a4 GAS
0x2a5 MISSING 0xe3
0x2a6 CALLDATALOAD
0x2a7 MISSING 0xae
0x2a8 LOG4
0x2a9 PUSH1 0x9e
0x2ab MISSING 0xc2
0x2ac ISZERO
0x2ad PUSH8 0x6d4ea89413b2906b
0x2b6 MISSING 0xbd
0x2b7 POP
0x2b8 MSIZE
0x2b9 SWAP9
0x2ba LOG4
0x2bb NOT
0x2bc STOP
0x2bd DUP5
0x2be DUP7
0x2bf SIGNEXTEND
0x2c0 RETURNDATASIZE
0x2c1 CREATE
0x2c2 STOP
0x2c3 MISSING 0x29
---
0x298: STOP 
0x299: LOG S0 S1 S2
0x29a: V227 = 0x627a7a723058
0x2a1: V228 = SHA3 0x627a7a723058 S3
0x2a2: MISSING 0xdf
0x2a3: V229 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x2a4: V230 = GAS
0x2a5: MISSING 0xe3
0x2a6: V231 = CALLDATALOAD S0
0x2a7: MISSING 0xae
0x2a8: LOG S0 S1 S2 S3 S4 S5
0x2a9: V232 = 0x9e
0x2ab: MISSING 0xc2
0x2ac: V233 = ISZERO S0
0x2ad: V234 = 0x6d4ea89413b2906b
0x2b6: MISSING 0xbd
0x2b8: V235 = MSIZE
0x2ba: LOG S9 S1 S2 S3 S4 S5
0x2bb: V236 = NOT S6
0x2bc: STOP 
0x2bf: V237 = SIGNEXTEND S5 S4
0x2c0: V238 = RETURNDATASIZE
0x2c1: V239 = CREATE V238 V237 S0
0x2c2: STOP 
0x2c3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V228, V230, V229, V231, 0x9e, 0x6d4ea89413b2906b, V233, V236, S7, S8, V235, V239, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x82bd0b3
Entry block: 0xd3
Exit block: 0xd1
Body: 0xd1, 0xd3, 0x151, 0x1df

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xdd
Exit block: 0x1f9
Body: 0xdd, 0xe4, 0xe5, 0x1e1, 0x1f8, 0x1f9

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xef
Exit block: 0xff
Body: 0xef, 0xf6, 0xf7, 0xff, 0x20a

Function 3:
Public function signature: 0x93fc9fbe
Entry block: 0x11b
Exit block: 0xff
Body: 0xff, 0x11b, 0x122, 0x123, 0x219

Function 4:
Public function signature: 0xde82efb4
Entry block: 0x147
Exit block: 0xd1
Body: 0xd1, 0x147, 0x228, 0x296

Function 5:
Public fallback function
Entry block: 0x51
Exit block: 0xd1
Body: 0x51, 0x55, 0x6b, 0xce, 0xcf, 0xd1

