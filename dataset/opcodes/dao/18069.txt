Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x53
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x53
0xa: JUMPI 0x53 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xaa]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x3feb1bd8
0x34 EQ
0x35 PUSH2 0xaa
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x3feb1bd8
0x34: V10 = EQ 0x3feb1bd8 V8
0x35: V11 = 0xaa
0x38: JUMPI 0xaa V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xc9]
---
0x39 DUP1
0x3a PUSH4 0x6042a760
0x3f EQ
0x40 PUSH2 0xc9
0x43 JUMPI
---
0x3a: V12 = 0x6042a760
0x3f: V13 = EQ 0x6042a760 V8
0x40: V14 = 0xc9
0x43: JUMPI 0xc9 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xee]
---
0x44 DUP1
0x45 PUSH4 0xb214faa5
0x4a EQ
0x4b PUSH2 0xee
0x4e JUMPI
---
0x45: V15 = 0xb214faa5
0x4a: V16 = EQ 0xb214faa5 V8
0x4b: V17 = 0xee
0x4e: JUMPI 0xee V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x52]
---
Predecessors: [0x44]
Successors: [0x53]
---
0x4f PUSH2 0x53
0x52 JUMP
---
0x4f: V18 = 0x53
0x52: JUMP 0x53
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: [0x0, 0x4f]
Successors: [0x57]
---
0x53 JUMPDEST
0x54 PUSH2 0xa8
---
0x53: JUMPDEST 
0x54: V19 = 0xa8
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V8, 0xa8]

================================

Block 0x57
[0x57:0xa5]
---
Predecessors: [0x53]
Successors: [0xa6]
---
0x57 JUMPDEST
0x58 CALLER
0x59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e AND
0x6f PUSH32 0xceaafb6781e240ba6b317a906047690d1c227df2d967ff3f53b44f14a62c2cab
0x90 CALLVALUE
0x91 PUSH1 0x40
0x93 MLOAD
0x94 DUP1
0x95 DUP3
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 SWAP2
0xa3 SUB
0xa4 SWAP1
0xa5 LOG2
---
0x57: JUMPDEST 
0x58: V20 = CALLER
0x59: V21 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e: V22 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x6f: V23 = 0xceaafb6781e240ba6b317a906047690d1c227df2d967ff3f53b44f14a62c2cab
0x90: V24 = CALLVALUE
0x91: V25 = 0x40
0x93: V26 = M[0x40]
0x97: M[V26] = V24
0x98: V27 = 0x20
0x9a: V28 = ADD 0x20 V26
0x9e: V29 = 0x40
0xa0: V30 = M[0x40]
0xa3: V31 = SUB V28 V30
0xa5: LOG V30 V31 0xceaafb6781e240ba6b317a906047690d1c227df2d967ff3f53b44f14a62c2cab V22
---
Entry stack: [V8, 0xa8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa8]

================================

Block 0xa6
[0xa6:0xa7]
---
Predecessors: [0x57]
Successors: [0xa8]
---
0xa6 JUMPDEST
0xa7 JUMP
---
0xa6: JUMPDEST 
0xa7: JUMP 0xa8
---
Entry stack: [V8, 0xa8]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0xa6]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xaa
[0xaa:0xc6]
---
Predecessors: [0xb]
Successors: [0x154]
---
0xaa JUMPDEST
0xab PUSH2 0xc7
0xae PUSH1 0x4
0xb0 DUP1
0xb1 CALLDATALOAD
0xb2 SWAP1
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 DUP1
0xb7 CALLDATALOAD
0xb8 SWAP1
0xb9 PUSH1 0x20
0xbb ADD
0xbc DUP1
0xbd CALLDATALOAD
0xbe SWAP1
0xbf PUSH1 0x20
0xc1 ADD
0xc2 POP
0xc3 PUSH2 0x154
0xc6 JUMP
---
0xaa: JUMPDEST 
0xab: V32 = 0xc7
0xae: V33 = 0x4
0xb1: V34 = CALLDATALOAD 0x4
0xb3: V35 = 0x20
0xb5: V36 = ADD 0x20 0x4
0xb7: V37 = CALLDATALOAD 0x24
0xb9: V38 = 0x20
0xbb: V39 = ADD 0x20 0x24
0xbd: V40 = CALLDATALOAD 0x44
0xbf: V41 = 0x20
0xc1: V42 = ADD 0x20 0x44
0xc3: V43 = 0x154
0xc6: JUMP 0x154
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xc7, V34, V37, V40]
Exit stack: [V8, 0xc7, V34, V37, V40]

================================

Block 0xc7
[0xc7:0xc8]
---
Predecessors: [0x22e]
Successors: []
---
0xc7 JUMPDEST
0xc8 STOP
---
0xc7: JUMPDEST 
0xc8: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xc9
[0xc9:0xeb]
---
Predecessors: [0x39]
Successors: [0x233]
---
0xc9 JUMPDEST
0xca PUSH2 0xec
0xcd PUSH1 0x4
0xcf DUP1
0xd0 CALLDATALOAD
0xd1 SWAP1
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 DUP1
0xd6 CALLDATALOAD
0xd7 SWAP1
0xd8 PUSH1 0x20
0xda ADD
0xdb DUP1
0xdc CALLDATALOAD
0xdd SWAP1
0xde PUSH1 0x20
0xe0 ADD
0xe1 DUP1
0xe2 CALLDATALOAD
0xe3 SWAP1
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 POP
0xe8 PUSH2 0x233
0xeb JUMP
---
0xc9: JUMPDEST 
0xca: V44 = 0xec
0xcd: V45 = 0x4
0xd0: V46 = CALLDATALOAD 0x4
0xd2: V47 = 0x20
0xd4: V48 = ADD 0x20 0x4
0xd6: V49 = CALLDATALOAD 0x24
0xd8: V50 = 0x20
0xda: V51 = ADD 0x20 0x24
0xdc: V52 = CALLDATALOAD 0x44
0xde: V53 = 0x20
0xe0: V54 = ADD 0x20 0x44
0xe2: V55 = CALLDATALOAD 0x64
0xe4: V56 = 0x20
0xe6: V57 = ADD 0x20 0x64
0xe8: V58 = 0x233
0xeb: JUMP 0x233
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xec, V46, V49, V52, V55]
Exit stack: [V8, 0xec, V46, V49, V52, V55]

================================

Block 0xec
[0xec:0xed]
---
Predecessors: [0x34c]
Successors: []
---
0xec JUMPDEST
0xed STOP
---
0xec: JUMPDEST 
0xed: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xee
[0xee:0xfe]
---
Predecessors: [0x44]
Successors: [0x101]
---
0xee JUMPDEST
0xef PUSH2 0xff
0xf2 PUSH1 0x4
0xf4 DUP1
0xf5 CALLDATALOAD
0xf6 SWAP1
0xf7 PUSH1 0x20
0xf9 ADD
0xfa POP
0xfb PUSH2 0x101
0xfe JUMP
---
0xee: JUMPDEST 
0xef: V59 = 0xff
0xf2: V60 = 0x4
0xf5: V61 = CALLDATALOAD 0x4
0xf7: V62 = 0x20
0xf9: V63 = ADD 0x20 0x4
0xfb: V64 = 0x101
0xfe: JUMP 0x101
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xff, V61]
Exit stack: [V8, 0xff, V61]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: [0x151]
Successors: []
---
0xff JUMPDEST
0x100 STOP
---
0xff: JUMPDEST 
0x100: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x101
[0x101:0x150]
---
Predecessors: [0xee]
Successors: [0x151]
---
0x101 JUMPDEST
0x102 DUP1
0x103 CALLER
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a PUSH32 0x19dacbf83c5de6658e14cbf7bcae5c15eca2eedecf1c66fbca928e4d351bea0f
0x13b CALLVALUE
0x13c PUSH1 0x40
0x13e MLOAD
0x13f DUP1
0x140 DUP3
0x141 DUP2
0x142 MSTORE
0x143 PUSH1 0x20
0x145 ADD
0x146 SWAP2
0x147 POP
0x148 POP
0x149 PUSH1 0x40
0x14b MLOAD
0x14c DUP1
0x14d SWAP2
0x14e SUB
0x14f SWAP1
0x150 LOG3
---
0x101: JUMPDEST 
0x103: V65 = CALLER
0x104: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x11a: V68 = 0x19dacbf83c5de6658e14cbf7bcae5c15eca2eedecf1c66fbca928e4d351bea0f
0x13b: V69 = CALLVALUE
0x13c: V70 = 0x40
0x13e: V71 = M[0x40]
0x142: M[V71] = V69
0x143: V72 = 0x20
0x145: V73 = ADD 0x20 V71
0x149: V74 = 0x40
0x14b: V75 = M[0x40]
0x14e: V76 = SUB V73 V75
0x150: LOG V75 V76 0x19dacbf83c5de6658e14cbf7bcae5c15eca2eedecf1c66fbca928e4d351bea0f V67 V61
---
Entry stack: [V8, 0xff, V61]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0xff, V61]

================================

Block 0x151
[0x151:0x153]
---
Predecessors: [0x101]
Successors: [0xff]
---
0x151 JUMPDEST
0x152 POP
0x153 JUMP
---
0x151: JUMPDEST 
0x153: JUMP 0xff
---
Entry stack: [V8, 0xff, V61]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x154
[0x154:0x1aa]
---
Predecessors: [0xaa]
Successors: [0x1ab, 0x22d]
---
0x154 JUMPDEST
0x155 PUSH1 0x0
0x157 PUSH1 0x0
0x159 SWAP1
0x15a SLOAD
0x15b SWAP1
0x15c PUSH2 0x100
0x15f EXP
0x160 SWAP1
0x161 DIV
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d AND
0x18e CALLER
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 EQ
0x1a6 ISZERO
0x1a7 PUSH2 0x22d
0x1aa JUMPI
---
0x154: JUMPDEST 
0x155: V77 = 0x0
0x157: V78 = 0x0
0x15a: V79 = S[0x0]
0x15c: V80 = 0x100
0x15f: V81 = EXP 0x100 0x0
0x161: V82 = DIV V79 0x1
0x162: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x178: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x18e: V87 = CALLER
0x18f: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1a5: V90 = EQ V89 V86
0x1a6: V91 = ISZERO V90
0x1a7: V92 = 0x22d
0x1aa: JUMPI 0x22d V91
---
Entry stack: [V8, 0xc7, V34, V37, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc7, V34, V37, V40]

================================

Block 0x1ab
[0x1ab:0x22c]
---
Predecessors: [0x154]
Successors: [0x22d]
---
0x1ab DUP2
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH1 0x0
0x1c4 DUP3
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP1
0x1ca POP
0x1cb PUSH1 0x0
0x1cd PUSH1 0x40
0x1cf MLOAD
0x1d0 DUP1
0x1d1 DUP4
0x1d2 SUB
0x1d3 DUP2
0x1d4 DUP6
0x1d5 DUP9
0x1d6 DUP9
0x1d7 CALL
0x1d8 SWAP4
0x1d9 POP
0x1da POP
0x1db POP
0x1dc POP
0x1dd POP
0x1de DUP2
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 DUP4
0x1f6 PUSH32 0x4c13017ee95afc4bbd8a701dd9fbc9733f1f09f5a1b5438b5b9abd48e4c92d78
0x217 DUP4
0x218 PUSH1 0x40
0x21a MLOAD
0x21b DUP1
0x21c DUP3
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP2
0x223 POP
0x224 POP
0x225 PUSH1 0x40
0x227 MLOAD
0x228 DUP1
0x229 SWAP2
0x22a SUB
0x22b SWAP1
0x22c LOG3
---
0x1ac: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x1c2: V95 = 0x0
0x1c5: V96 = 0x40
0x1c7: V97 = M[0x40]
0x1cb: V98 = 0x0
0x1cd: V99 = 0x40
0x1cf: V100 = M[0x40]
0x1d2: V101 = SUB V97 V100
0x1d7: V102 = CALL 0x0 V94 V40 V100 V101 V100 0x0
0x1df: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x1f6: V105 = 0x4c13017ee95afc4bbd8a701dd9fbc9733f1f09f5a1b5438b5b9abd48e4c92d78
0x218: V106 = 0x40
0x21a: V107 = M[0x40]
0x21e: M[V107] = V40
0x21f: V108 = 0x20
0x221: V109 = ADD 0x20 V107
0x225: V110 = 0x40
0x227: V111 = M[0x40]
0x22a: V112 = SUB V109 V111
0x22c: LOG V111 V112 0x4c13017ee95afc4bbd8a701dd9fbc9733f1f09f5a1b5438b5b9abd48e4c92d78 V34 V104
---
Entry stack: [V8, 0xc7, V34, V37, V40]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xc7, V34, V37, V40]

================================

Block 0x22d
[0x22d:0x22d]
---
Predecessors: [0x154, 0x1ab]
Successors: [0x22e]
---
0x22d JUMPDEST
---
0x22d: JUMPDEST 
---
Entry stack: [V8, 0xc7, V34, V37, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc7, V34, V37, V40]

================================

Block 0x22e
[0x22e:0x232]
---
Predecessors: [0x22d]
Successors: [0xc7]
---
0x22e JUMPDEST
0x22f POP
0x230 POP
0x231 POP
0x232 JUMP
---
0x22e: JUMPDEST 
0x232: JUMP 0xc7
---
Entry stack: [V8, 0xc7, V34, V37, V40]
Stack pops: 4
Stack additions: []
Exit stack: [V8]

================================

Block 0x233
[0x233:0x289]
---
Predecessors: [0xc9]
Successors: [0x28a, 0x34b]
---
0x233 JUMPDEST
0x234 PUSH1 0x0
0x236 PUSH1 0x0
0x238 SWAP1
0x239 SLOAD
0x23a SWAP1
0x23b PUSH2 0x100
0x23e EXP
0x23f SWAP1
0x240 DIV
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c AND
0x26d CALLER
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 EQ
0x285 ISZERO
0x286 PUSH2 0x34b
0x289 JUMPI
---
0x233: JUMPDEST 
0x234: V113 = 0x0
0x236: V114 = 0x0
0x239: V115 = S[0x0]
0x23b: V116 = 0x100
0x23e: V117 = EXP 0x100 0x0
0x240: V118 = DIV V115 0x1
0x241: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x257: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x26d: V123 = CALLER
0x26e: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x284: V126 = EQ V125 V122
0x285: V127 = ISZERO V126
0x286: V128 = 0x34b
0x289: JUMPI 0x34b V127
---
Entry stack: [V8, 0xec, V46, V49, V52, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xec, V46, V49, V52, V55]

================================

Block 0x28a
[0x28a:0x2ef]
---
Predecessors: [0x233]
Successors: [0x2f0]
---
0x28a DUP3
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 PUSH4 0xb214faa5
0x2a6 DUP3
0x2a7 DUP5
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP4
0x2ac PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2ca MUL
0x2cb DUP2
0x2cc MSTORE
0x2cd PUSH1 0x4
0x2cf ADD
0x2d0 DUP1
0x2d1 DUP3
0x2d2 DUP2
0x2d3 MSTORE
0x2d4 PUSH1 0x20
0x2d6 ADD
0x2d7 SWAP2
0x2d8 POP
0x2d9 POP
0x2da PUSH1 0x0
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 DUP4
0x2e1 SUB
0x2e2 DUP2
0x2e3 DUP6
0x2e4 DUP9
0x2e5 PUSH2 0x8502
0x2e8 GAS
0x2e9 SUB
0x2ea CALL
0x2eb ISZERO
0x2ec PUSH2 0x2
0x2ef JUMPI
---
0x28b: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x2a1: V131 = 0xb214faa5
0x2a8: V132 = 0x40
0x2aa: V133 = M[0x40]
0x2ac: V134 = 0x100000000000000000000000000000000000000000000000000000000
0x2ca: V135 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb214faa5
0x2cc: M[V133] = 0xb214faa500000000000000000000000000000000000000000000000000000000
0x2cd: V136 = 0x4
0x2cf: V137 = ADD 0x4 V133
0x2d3: M[V137] = V52
0x2d4: V138 = 0x20
0x2d6: V139 = ADD 0x20 V137
0x2da: V140 = 0x0
0x2dc: V141 = 0x40
0x2de: V142 = M[0x40]
0x2e1: V143 = SUB V139 V142
0x2e5: V144 = 0x8502
0x2e8: V145 = GAS
0x2e9: V146 = SUB V145 0x8502
0x2ea: V147 = CALL V146 V130 V55 V142 V143 V142 0x0
0x2eb: V148 = ISZERO V147
0x2ec: V149 = 0x2
0x2ef: THROWI V148
---
Entry stack: [V8, 0xec, V46, V49, V52, V55]
Stack pops: 3
Stack additions: [S2, S1, S0, V130, 0xb214faa5, S0, V139]
Exit stack: [V8, 0xec, V46, V49, V52, V55, V130, 0xb214faa5, V55, V139]

================================

Block 0x2f0
[0x2f0:0x34a]
---
Predecessors: [0x28a]
Successors: [0x34b]
---
0x2f0 POP
0x2f1 POP
0x2f2 POP
0x2f3 POP
0x2f4 DUP3
0x2f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30a AND
0x30b DUP5
0x30c PUSH32 0x260c3af1b30cb645202dd6dbf41affda680b1ffebd32d401b7f121c2b9262680
0x32d DUP5
0x32e DUP5
0x32f PUSH1 0x40
0x331 MLOAD
0x332 DUP1
0x333 DUP4
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x20
0x338 ADD
0x339 DUP3
0x33a DUP2
0x33b MSTORE
0x33c PUSH1 0x20
0x33e ADD
0x33f SWAP3
0x340 POP
0x341 POP
0x342 POP
0x343 PUSH1 0x40
0x345 MLOAD
0x346 DUP1
0x347 SWAP2
0x348 SUB
0x349 SWAP1
0x34a LOG3
---
0x2f5: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x30c: V152 = 0x260c3af1b30cb645202dd6dbf41affda680b1ffebd32d401b7f121c2b9262680
0x32f: V153 = 0x40
0x331: V154 = M[0x40]
0x335: M[V154] = V52
0x336: V155 = 0x20
0x338: V156 = ADD 0x20 V154
0x33b: M[V156] = V55
0x33c: V157 = 0x20
0x33e: V158 = ADD 0x20 V156
0x343: V159 = 0x40
0x345: V160 = M[0x40]
0x348: V161 = SUB V158 V160
0x34a: LOG V160 V161 0x260c3af1b30cb645202dd6dbf41affda680b1ffebd32d401b7f121c2b9262680 V46 V151
---
Entry stack: [V8, 0xec, V46, V49, V52, V55, V130, 0xb214faa5, V55, V139]
Stack pops: 8
Stack additions: [S7, S6, S5, S4]
Exit stack: [V8, 0xec, V46, V49, V52, V55]

================================

Block 0x34b
[0x34b:0x34b]
---
Predecessors: [0x233, 0x2f0]
Successors: [0x34c]
---
0x34b JUMPDEST
---
0x34b: JUMPDEST 
---
Entry stack: [V8, 0xec, V46, V49, V52, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xec, V46, V49, V52, V55]

================================

Block 0x34c
[0x34c:0x351]
---
Predecessors: [0x34b]
Successors: [0xec]
---
0x34c JUMPDEST
0x34d POP
0x34e POP
0x34f POP
0x350 POP
0x351 JUMP
---
0x34c: JUMPDEST 
0x351: JUMP 0xec
---
Entry stack: [V8, 0xec, V46, V49, V52, V55]
Stack pops: 5
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x3feb1bd8
Entry block: 0xaa
Exit block: 0xc7
Body: 0xaa, 0xc7, 0x154, 0x1ab, 0x22d, 0x22e

Function 1:
Public function signature: 0x6042a760
Entry block: 0xc9
Exit block: 0xec
Body: 0xc9, 0xec, 0x233, 0x28a, 0x2f0, 0x34b, 0x34c

Function 2:
Public function signature: 0xb214faa5
Entry block: 0xee
Exit block: 0xff
Body: 0xee, 0xff, 0x101, 0x151

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0xa8
Body: 0x4f, 0x53, 0x57, 0xa6, 0xa8

