Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1792b0bc
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1792b0bc
0x3b: V13 = EQ V11 0x1792b0bc
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8e]
---
0x40 DUP1
0x41 PUSH4 0x3610724e
0x46 EQ
0x47 PUSH2 0x8e
0x4a JUMPI
---
0x41: V15 = 0x3610724e
0x46: V16 = EQ 0x3610724e V11
0x47: V17 = 0x8e
0x4a: JUMPI 0x8e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa6]
---
0x4b DUP1
0x4c PUSH4 0x8d8f2adb
0x51 EQ
0x52 PUSH2 0xa6
0x55 JUMPI
---
0x4c: V18 = 0x8d8f2adb
0x51: V19 = EQ 0x8d8f2adb V11
0x52: V20 = 0xa6
0x55: JUMPI 0xa6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xbb]
---
0x56 DUP1
0x57 PUSH4 0x9904e174
0x5c EQ
0x5d PUSH2 0xbb
0x60 JUMPI
---
0x57: V21 = 0x9904e174
0x5c: V22 = EQ 0x9904e174 V11
0x5d: V23 = 0xbb
0x60: JUMPI 0xbb V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xd0]
---
0x61 DUP1
0x62 PUSH4 0xf8b2cb4f
0x67 EQ
0x68 PUSH2 0xd0
0x6b JUMPI
---
0x62: V24 = 0xf8b2cb4f
0x67: V25 = EQ 0xf8b2cb4f V11
0x68: V26 = 0xd0
0x6b: JUMPI 0xd0 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x103]
---
0x6c DUP1
0x6d PUSH4 0xfc7fcae1
0x72 EQ
0x73 PUSH2 0x103
0x76 JUMPI
---
0x6d: V27 = 0xfc7fcae1
0x72: V28 = EQ 0xfc7fcae1 V11
0x73: V29 = 0x103
0x76: JUMPI 0x103 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x213, 0x380, 0x45d, 0x5e2]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b DUP1
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x79]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x85
[0x85:0x8d]
---
Predecessors: [0x79]
Successors: [0x11b]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH2 0x77
0x8a PUSH2 0x11b
0x8d JUMP
---
0x85: JUMPDEST 
0x87: V34 = 0x77
0x8a: V35 = 0x11b
0x8d: JUMP 0x11b
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x8e
[0x8e:0x95]
---
Predecessors: [0x40]
Successors: [0x96, 0x9a]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 DUP1
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8e: JUMPDEST 
0x8f: V36 = CALLVALUE
0x91: V37 = ISZERO V36
0x92: V38 = 0x9a
0x95: JUMPI 0x9a V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8e]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V39 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x9a
[0x9a:0xa5]
---
Predecessors: [0x8e]
Successors: [0x218]
---
0x9a JUMPDEST
0x9b POP
0x9c PUSH2 0x77
0x9f PUSH1 0x4
0xa1 CALLDATALOAD
0xa2 PUSH2 0x218
0xa5 JUMP
---
0x9a: JUMPDEST 
0x9c: V40 = 0x77
0x9f: V41 = 0x4
0xa1: V42 = CALLDATALOAD 0x4
0xa2: V43 = 0x218
0xa5: JUMP 0x218
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x77, V42]
Exit stack: [V11, 0x77, V42]

================================

Block 0xa6
[0xa6:0xad]
---
Predecessors: [0x4b]
Successors: [0xae, 0xb2]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 DUP1
0xa9 ISZERO
0xaa PUSH2 0xb2
0xad JUMPI
---
0xa6: JUMPDEST 
0xa7: V44 = CALLVALUE
0xa9: V45 = ISZERO V44
0xaa: V46 = 0xb2
0xad: JUMPI 0xb2 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xae
[0xae:0xb1]
---
Predecessors: [0xa6]
Successors: []
---
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xae: V47 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xb2
[0xb2:0xba]
---
Predecessors: [0xa6]
Successors: [0x2b0]
---
0xb2 JUMPDEST
0xb3 POP
0xb4 PUSH2 0x77
0xb7 PUSH2 0x2b0
0xba JUMP
---
0xb2: JUMPDEST 
0xb4: V48 = 0x77
0xb7: V49 = 0x2b0
0xba: JUMP 0x2b0
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0x56]
Successors: [0xc3, 0xc7]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd DUP1
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbb: JUMPDEST 
0xbc: V50 = CALLVALUE
0xbe: V51 = ISZERO V50
0xbf: V52 = 0xc7
0xc2: JUMPI 0xc7 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbb]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V53 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xc7
[0xc7:0xcf]
---
Predecessors: [0xbb]
Successors: [0x386]
---
0xc7 JUMPDEST
0xc8 POP
0xc9 PUSH2 0x77
0xcc PUSH2 0x386
0xcf JUMP
---
0xc7: JUMPDEST 
0xc9: V54 = 0x77
0xcc: V55 = 0x386
0xcf: JUMP 0x386
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xd0
[0xd0:0xd7]
---
Predecessors: [0x61]
Successors: [0xd8, 0xdc]
---
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 DUP1
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xd0: JUMPDEST 
0xd1: V56 = CALLVALUE
0xd3: V57 = ISZERO V56
0xd4: V58 = 0xdc
0xd7: JUMPI 0xdc V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V11, V56]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xd0]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V59 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V11, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56]

================================

Block 0xdc
[0xdc:0xf0]
---
Predecessors: [0xd0]
Successors: [0x464]
---
0xdc JUMPDEST
0xdd POP
0xde PUSH2 0xf1
0xe1 PUSH1 0x1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SUB
0xe9 PUSH1 0x4
0xeb CALLDATALOAD
0xec AND
0xed PUSH2 0x464
0xf0 JUMP
---
0xdc: JUMPDEST 
0xde: V60 = 0xf1
0xe1: V61 = 0x1
0xe3: V62 = 0xa0
0xe5: V63 = 0x2
0xe7: V64 = EXP 0x2 0xa0
0xe8: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9: V66 = 0x4
0xeb: V67 = CALLDATALOAD 0x4
0xec: V68 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0xed: V69 = 0x464
0xf0: JUMP 0x464
---
Entry stack: [V11, V56]
Stack pops: 1
Stack additions: [0xf1, V68]
Exit stack: [V11, 0xf1, V68]

================================

Block 0xf1
[0xf1:0x102]
---
Predecessors: [0x4f9]
Successors: []
---
0xf1 JUMPDEST
0xf2 PUSH1 0x40
0xf4 DUP1
0xf5 MLOAD
0xf6 SWAP2
0xf7 DUP3
0xf8 MSTORE
0xf9 MLOAD
0xfa SWAP1
0xfb DUP2
0xfc SWAP1
0xfd SUB
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 RETURN
---
0xf1: JUMPDEST 
0xf2: V70 = 0x40
0xf5: V71 = M[0x40]
0xf8: M[V71] = V412
0xf9: V72 = M[0x40]
0xfd: V73 = SUB V71 V72
0xfe: V74 = 0x20
0x100: V75 = ADD 0x20 V73
0x102: RETURN V72 V75
---
Entry stack: [V11, 0x77, S1, V412]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, S1]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0x6c]
Successors: [0x10b, 0x10f]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 DUP1
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x103: JUMPDEST 
0x104: V76 = CALLVALUE
0x106: V77 = ISZERO V76
0x107: V78 = 0x10f
0x10a: JUMPI 0x10f V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V76]
Exit stack: [V11, V76]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x103]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V79 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V11, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V76]

================================

Block 0x10f
[0x10f:0x11a]
---
Predecessors: [0x103]
Successors: [0x501]
---
0x10f JUMPDEST
0x110 POP
0x111 PUSH2 0x77
0x114 PUSH1 0x4
0x116 CALLDATALOAD
0x117 PUSH2 0x501
0x11a JUMP
---
0x10f: JUMPDEST 
0x111: V80 = 0x77
0x114: V81 = 0x4
0x116: V82 = CALLDATALOAD 0x4
0x117: V83 = 0x501
0x11a: JUMP 0x501
---
Entry stack: [V11, V76]
Stack pops: 1
Stack additions: [0x77, V82]
Exit stack: [V11, 0x77, V82]

================================

Block 0x11b
[0x11b:0x12e]
---
Predecessors: [0x85]
Successors: [0x12f, 0x16c]
---
0x11b JUMPDEST
0x11c PUSH1 0x0
0x11e DUP1
0x11f SLOAD
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 AND
0x129 CALLER
0x12a EQ
0x12b PUSH2 0x16c
0x12e JUMPI
---
0x11b: JUMPDEST 
0x11c: V84 = 0x0
0x11f: V85 = S[0x0]
0x120: V86 = 0x1
0x122: V87 = 0xa0
0x124: V88 = 0x2
0x126: V89 = EXP 0x2 0xa0
0x127: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x129: V92 = CALLER
0x12a: V93 = EQ V92 V91
0x12b: V94 = 0x16c
0x12e: JUMPI 0x16c V93
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x77, 0x0]

================================

Block 0x12f
[0x12f:0x16b]
---
Predecessors: [0x11b]
Successors: []
---
0x12f PUSH1 0x40
0x131 DUP1
0x132 MLOAD
0x133 PUSH1 0xe5
0x135 PUSH1 0x2
0x137 EXP
0x138 PUSH3 0x461bcd
0x13c MUL
0x13d DUP2
0x13e MSTORE
0x13f PUSH1 0x20
0x141 PUSH1 0x4
0x143 DUP3
0x144 ADD
0x145 MSTORE
0x146 PUSH1 0xe
0x148 PUSH1 0x24
0x14a DUP3
0x14b ADD
0x14c MSTORE
0x14d PUSH1 0x0
0x14f DUP1
0x150 MLOAD
0x151 PUSH1 0x20
0x153 PUSH2 0x5e6
0x156 DUP4
0x157 CODECOPY
0x158 DUP2
0x159 MLOAD
0x15a SWAP2
0x15b MSTORE
0x15c PUSH1 0x44
0x15e DUP3
0x15f ADD
0x160 MSTORE
0x161 SWAP1
0x162 MLOAD
0x163 SWAP1
0x164 DUP2
0x165 SWAP1
0x166 SUB
0x167 PUSH1 0x64
0x169 ADD
0x16a SWAP1
0x16b REVERT
---
0x12f: V95 = 0x40
0x132: V96 = M[0x40]
0x133: V97 = 0xe5
0x135: V98 = 0x2
0x137: V99 = EXP 0x2 0xe5
0x138: V100 = 0x461bcd
0x13c: V101 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x13e: M[V96] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x13f: V102 = 0x20
0x141: V103 = 0x4
0x144: V104 = ADD V96 0x4
0x145: M[V104] = 0x20
0x146: V105 = 0xe
0x148: V106 = 0x24
0x14b: V107 = ADD V96 0x24
0x14c: M[V107] = 0xe
0x14d: V108 = 0x0
0x150: V109 = M[0x0]
0x151: V110 = 0x20
0x153: V111 = 0x5e6
0x157: CODECOPY 0x0 0x5e6 0x20
0x159: V112 = M[0x0]
0x15b: M[0x0] = V109
0x15c: V113 = 0x44
0x15f: V114 = ADD V96 0x44
0x160: M[V114] = V112
0x162: V115 = M[0x40]
0x166: V116 = SUB V96 V115
0x167: V117 = 0x64
0x169: V118 = ADD 0x64 V116
0x16b: REVERT V115 V118
---
Entry stack: [V11, 0x77, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x0]

================================

Block 0x16c
[0x16c:0x174]
---
Predecessors: [0x11b]
Successors: [0x464]
---
0x16c JUMPDEST
0x16d PUSH2 0x175
0x170 ADDRESS
0x171 PUSH2 0x464
0x174 JUMP
---
0x16c: JUMPDEST 
0x16d: V119 = 0x175
0x170: V120 = ADDRESS
0x171: V121 = 0x464
0x174: JUMP 0x464
---
Entry stack: [V11, 0x77, 0x0]
Stack pops: 0
Stack additions: [0x175, V120]
Exit stack: [V11, 0x77, 0x0, 0x175, V120]

================================

Block 0x175
[0x175:0x1e4]
---
Predecessors: [0x4f9]
Successors: [0x1e5, 0x1e9]
---
0x175 JUMPDEST
0x176 PUSH1 0x2
0x178 SLOAD
0x179 PUSH1 0x1
0x17b SLOAD
0x17c PUSH1 0x40
0x17e DUP1
0x17f MLOAD
0x180 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab SWAP3
0x1ac DUP4
0x1ad AND
0x1ae PUSH1 0x4
0x1b0 DUP3
0x1b1 ADD
0x1b2 MSTORE
0x1b3 PUSH1 0x24
0x1b5 DUP2
0x1b6 ADD
0x1b7 DUP6
0x1b8 SWAP1
0x1b9 MSTORE
0x1ba SWAP1
0x1bb MLOAD
0x1bc SWAP4
0x1bd SWAP5
0x1be POP
0x1bf SWAP2
0x1c0 AND
0x1c1 SWAP2
0x1c2 PUSH4 0xa9059cbb
0x1c7 SWAP2
0x1c8 PUSH1 0x44
0x1ca DUP1
0x1cb DUP3
0x1cc ADD
0x1cd SWAP3
0x1ce PUSH1 0x20
0x1d0 SWAP3
0x1d1 SWAP1
0x1d2 SWAP2
0x1d3 SWAP1
0x1d4 DUP3
0x1d5 SWAP1
0x1d6 SUB
0x1d7 ADD
0x1d8 DUP2
0x1d9 PUSH1 0x0
0x1db DUP8
0x1dc DUP1
0x1dd EXTCODESIZE
0x1de ISZERO
0x1df DUP1
0x1e0 ISZERO
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x175: JUMPDEST 
0x176: V122 = 0x2
0x178: V123 = S[0x2]
0x179: V124 = 0x1
0x17b: V125 = S[0x1]
0x17c: V126 = 0x40
0x17f: V127 = M[0x40]
0x180: V128 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1a2: M[V127] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1a3: V129 = 0x1
0x1a5: V130 = 0xa0
0x1a7: V131 = 0x2
0x1a9: V132 = EXP 0x2 0xa0
0x1aa: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1ae: V135 = 0x4
0x1b1: V136 = ADD V127 0x4
0x1b2: M[V136] = V134
0x1b3: V137 = 0x24
0x1b6: V138 = ADD V127 0x24
0x1b9: M[V138] = V412
0x1bb: V139 = M[0x40]
0x1c0: V140 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V141 = 0xa9059cbb
0x1c8: V142 = 0x44
0x1cc: V143 = ADD V127 0x44
0x1ce: V144 = 0x20
0x1d6: V145 = SUB V127 V139
0x1d7: V146 = ADD V145 0x44
0x1d9: V147 = 0x0
0x1dd: V148 = EXTCODESIZE V140
0x1de: V149 = ISZERO V148
0x1e0: V150 = ISZERO V149
0x1e1: V151 = 0x1e9
0x1e4: JUMPI 0x1e9 V150
---
Entry stack: [V11, 0x77, S1, V412]
Stack pops: 2
Stack additions: [S0, V140, 0xa9059cbb, V143, 0x20, V139, V146, V139, 0x0, V140, V149]
Exit stack: [V11, 0x77, V412, V140, 0xa9059cbb, V143, 0x20, V139, V146, V139, 0x0, V140, V149]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x175]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V152 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V412, V140, 0xa9059cbb, V143, 0x20, V139, V146, V139, 0x0, V140, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V412, V140, 0xa9059cbb, V143, 0x20, V139, V146, V139, 0x0, V140, V149]

================================

Block 0x1e9
[0x1e9:0x1f3]
---
Predecessors: [0x175]
Successors: [0x1f4, 0x1fd]
---
0x1e9 JUMPDEST
0x1ea POP
0x1eb GAS
0x1ec CALL
0x1ed ISZERO
0x1ee DUP1
0x1ef ISZERO
0x1f0 PUSH2 0x1fd
0x1f3 JUMPI
---
0x1e9: JUMPDEST 
0x1eb: V153 = GAS
0x1ec: V154 = CALL V153 V140 0x0 V139 V146 V139 0x20
0x1ed: V155 = ISZERO V154
0x1ef: V156 = ISZERO V155
0x1f0: V157 = 0x1fd
0x1f3: JUMPI 0x1fd V156
---
Entry stack: [V11, 0x77, V412, V140, 0xa9059cbb, V143, 0x20, V139, V146, V139, 0x0, V140, V149]
Stack pops: 7
Stack additions: [V155]
Exit stack: [V11, 0x77, V412, V140, 0xa9059cbb, V143, V155]

================================

Block 0x1f4
[0x1f4:0x1fc]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f4 RETURNDATASIZE
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 RETURNDATACOPY
0x1f9 RETURNDATASIZE
0x1fa PUSH1 0x0
0x1fc REVERT
---
0x1f4: V158 = RETURNDATASIZE
0x1f5: V159 = 0x0
0x1f8: RETURNDATACOPY 0x0 0x0 V158
0x1f9: V160 = RETURNDATASIZE
0x1fa: V161 = 0x0
0x1fc: REVERT 0x0 V160
---
Entry stack: [V11, 0x77, V412, V140, 0xa9059cbb, V143, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V412, V140, 0xa9059cbb, V143, V155]

================================

Block 0x1fd
[0x1fd:0x20e]
---
Predecessors: [0x1e9]
Successors: [0x20f, 0x213]
---
0x1fd JUMPDEST
0x1fe POP
0x1ff POP
0x200 POP
0x201 POP
0x202 PUSH1 0x40
0x204 MLOAD
0x205 RETURNDATASIZE
0x206 PUSH1 0x20
0x208 DUP2
0x209 LT
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x1fd: JUMPDEST 
0x202: V162 = 0x40
0x204: V163 = M[0x40]
0x205: V164 = RETURNDATASIZE
0x206: V165 = 0x20
0x209: V166 = LT V164 0x20
0x20a: V167 = ISZERO V166
0x20b: V168 = 0x213
0x20e: JUMPI 0x213 V167
---
Entry stack: [V11, 0x77, V412, V140, 0xa9059cbb, V143, V155]
Stack pops: 4
Stack additions: [V163, V164]
Exit stack: [V11, 0x77, V412, V163, V164]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x1fd]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V169 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V412, V163, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V412, V163, V164]

================================

Block 0x213
[0x213:0x217]
---
Predecessors: [0x1fd, 0x299]
Successors: [0x77]
---
0x213 JUMPDEST
0x214 POP
0x215 POP
0x216 POP
0x217 JUMP
---
0x213: JUMPDEST 
0x217: JUMP 0x77
---
Entry stack: [V11, 0x77, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x218
[0x218:0x280]
---
Predecessors: [0x9a]
Successors: [0x281, 0x285]
---
0x218 JUMPDEST
0x219 PUSH1 0x2
0x21b SLOAD
0x21c PUSH1 0x1
0x21e SLOAD
0x21f PUSH1 0x40
0x221 DUP1
0x222 MLOAD
0x223 PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x244 DUP2
0x245 MSTORE
0x246 PUSH1 0x1
0x248 PUSH1 0xa0
0x24a PUSH1 0x2
0x24c EXP
0x24d SUB
0x24e SWAP3
0x24f DUP4
0x250 AND
0x251 PUSH1 0x4
0x253 DUP3
0x254 ADD
0x255 MSTORE
0x256 SWAP1
0x257 MLOAD
0x258 SWAP2
0x259 SWAP1
0x25a SWAP3
0x25b AND
0x25c SWAP2
0x25d PUSH4 0xf088d547
0x262 SWAP2
0x263 DUP5
0x264 SWAP2
0x265 PUSH1 0x24
0x267 DUP1
0x268 DUP3
0x269 ADD
0x26a SWAP3
0x26b PUSH1 0x20
0x26d SWAP3
0x26e SWAP1
0x26f SWAP2
0x270 SWAP1
0x271 DUP3
0x272 SWAP1
0x273 SUB
0x274 ADD
0x275 DUP2
0x276 DUP6
0x277 DUP9
0x278 DUP1
0x279 EXTCODESIZE
0x27a ISZERO
0x27b DUP1
0x27c ISZERO
0x27d PUSH2 0x285
0x280 JUMPI
---
0x218: JUMPDEST 
0x219: V170 = 0x2
0x21b: V171 = S[0x2]
0x21c: V172 = 0x1
0x21e: V173 = S[0x1]
0x21f: V174 = 0x40
0x222: V175 = M[0x40]
0x223: V176 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x245: M[V175] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x246: V177 = 0x1
0x248: V178 = 0xa0
0x24a: V179 = 0x2
0x24c: V180 = EXP 0x2 0xa0
0x24d: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x250: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x251: V183 = 0x4
0x254: V184 = ADD V175 0x4
0x255: M[V184] = V182
0x257: V185 = M[0x40]
0x25b: V186 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V187 = 0xf088d547
0x265: V188 = 0x24
0x269: V189 = ADD V175 0x24
0x26b: V190 = 0x20
0x273: V191 = SUB V175 V185
0x274: V192 = ADD V191 0x24
0x279: V193 = EXTCODESIZE V186
0x27a: V194 = ISZERO V193
0x27c: V195 = ISZERO V194
0x27d: V196 = 0x285
0x280: JUMPI 0x285 V195
---
Entry stack: [V11, 0x77, V42]
Stack pops: 1
Stack additions: [S0, V186, 0xf088d547, S0, V189, 0x20, V185, V192, V185, S0, V186, V194]
Exit stack: [V11, 0x77, V42, V186, 0xf088d547, V42, V189, 0x20, V185, V192, V185, V42, V186, V194]

================================

Block 0x281
[0x281:0x284]
---
Predecessors: [0x218]
Successors: []
---
0x281 PUSH1 0x0
0x283 DUP1
0x284 REVERT
---
0x281: V197 = 0x0
0x284: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V42, V186, 0xf088d547, V42, V189, 0x20, V185, V192, V185, V42, V186, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V186, 0xf088d547, V42, V189, 0x20, V185, V192, V185, V42, V186, V194]

================================

Block 0x285
[0x285:0x28f]
---
Predecessors: [0x218]
Successors: [0x290, 0x299]
---
0x285 JUMPDEST
0x286 POP
0x287 GAS
0x288 CALL
0x289 ISZERO
0x28a DUP1
0x28b ISZERO
0x28c PUSH2 0x299
0x28f JUMPI
---
0x285: JUMPDEST 
0x287: V198 = GAS
0x288: V199 = CALL V198 V186 V42 V185 V192 V185 0x20
0x289: V200 = ISZERO V199
0x28b: V201 = ISZERO V200
0x28c: V202 = 0x299
0x28f: JUMPI 0x299 V201
---
Entry stack: [V11, 0x77, V42, V186, 0xf088d547, V42, V189, 0x20, V185, V192, V185, V42, V186, V194]
Stack pops: 7
Stack additions: [V200]
Exit stack: [V11, 0x77, V42, V186, 0xf088d547, V42, V189, V200]

================================

Block 0x290
[0x290:0x298]
---
Predecessors: [0x285]
Successors: []
---
0x290 RETURNDATASIZE
0x291 PUSH1 0x0
0x293 DUP1
0x294 RETURNDATACOPY
0x295 RETURNDATASIZE
0x296 PUSH1 0x0
0x298 REVERT
---
0x290: V203 = RETURNDATASIZE
0x291: V204 = 0x0
0x294: RETURNDATACOPY 0x0 0x0 V203
0x295: V205 = RETURNDATASIZE
0x296: V206 = 0x0
0x298: REVERT 0x0 V205
---
Entry stack: [V11, 0x77, V42, V186, 0xf088d547, V42, V189, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V186, 0xf088d547, V42, V189, V200]

================================

Block 0x299
[0x299:0x2ab]
---
Predecessors: [0x285]
Successors: [0x213, 0x2ac]
---
0x299 JUMPDEST
0x29a POP
0x29b POP
0x29c POP
0x29d POP
0x29e POP
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 RETURNDATASIZE
0x2a3 PUSH1 0x20
0x2a5 DUP2
0x2a6 LT
0x2a7 ISZERO
0x2a8 PUSH2 0x213
0x2ab JUMPI
---
0x299: JUMPDEST 
0x29f: V207 = 0x40
0x2a1: V208 = M[0x40]
0x2a2: V209 = RETURNDATASIZE
0x2a3: V210 = 0x20
0x2a6: V211 = LT V209 0x20
0x2a7: V212 = ISZERO V211
0x2a8: V213 = 0x213
0x2ab: JUMPI 0x213 V212
---
Entry stack: [V11, 0x77, V42, V186, 0xf088d547, V42, V189, V200]
Stack pops: 5
Stack additions: [V208, V209]
Exit stack: [V11, 0x77, V42, V208, V209]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x299]
Successors: []
---
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af REVERT
---
0x2ac: V214 = 0x0
0x2af: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V42, V208, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V42, V208, V209]

================================

Block 0x2b0
[0x2b0:0x2c2]
---
Predecessors: [0xb2]
Successors: [0x2c3, 0x300]
---
0x2b0 JUMPDEST
0x2b1 PUSH1 0x0
0x2b3 SLOAD
0x2b4 PUSH1 0x1
0x2b6 PUSH1 0xa0
0x2b8 PUSH1 0x2
0x2ba EXP
0x2bb SUB
0x2bc AND
0x2bd CALLER
0x2be EQ
0x2bf PUSH2 0x300
0x2c2 JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V215 = 0x0
0x2b3: V216 = S[0x0]
0x2b4: V217 = 0x1
0x2b6: V218 = 0xa0
0x2b8: V219 = 0x2
0x2ba: V220 = EXP 0x2 0xa0
0x2bb: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bc: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2bd: V223 = CALLER
0x2be: V224 = EQ V223 V222
0x2bf: V225 = 0x300
0x2c2: JUMPI 0x300 V224
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x2c3
[0x2c3:0x2ff]
---
Predecessors: [0x2b0]
Successors: []
---
0x2c3 PUSH1 0x40
0x2c5 DUP1
0x2c6 MLOAD
0x2c7 PUSH1 0xe5
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc PUSH3 0x461bcd
0x2d0 MUL
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 PUSH1 0x4
0x2d7 DUP3
0x2d8 ADD
0x2d9 MSTORE
0x2da PUSH1 0xe
0x2dc PUSH1 0x24
0x2de DUP3
0x2df ADD
0x2e0 MSTORE
0x2e1 PUSH1 0x0
0x2e3 DUP1
0x2e4 MLOAD
0x2e5 PUSH1 0x20
0x2e7 PUSH2 0x5e6
0x2ea DUP4
0x2eb CODECOPY
0x2ec DUP2
0x2ed MLOAD
0x2ee SWAP2
0x2ef MSTORE
0x2f0 PUSH1 0x44
0x2f2 DUP3
0x2f3 ADD
0x2f4 MSTORE
0x2f5 SWAP1
0x2f6 MLOAD
0x2f7 SWAP1
0x2f8 DUP2
0x2f9 SWAP1
0x2fa SUB
0x2fb PUSH1 0x64
0x2fd ADD
0x2fe SWAP1
0x2ff REVERT
---
0x2c3: V226 = 0x40
0x2c6: V227 = M[0x40]
0x2c7: V228 = 0xe5
0x2c9: V229 = 0x2
0x2cb: V230 = EXP 0x2 0xe5
0x2cc: V231 = 0x461bcd
0x2d0: V232 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x2d2: M[V227] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2d3: V233 = 0x20
0x2d5: V234 = 0x4
0x2d8: V235 = ADD V227 0x4
0x2d9: M[V235] = 0x20
0x2da: V236 = 0xe
0x2dc: V237 = 0x24
0x2df: V238 = ADD V227 0x24
0x2e0: M[V238] = 0xe
0x2e1: V239 = 0x0
0x2e4: V240 = M[0x0]
0x2e5: V241 = 0x20
0x2e7: V242 = 0x5e6
0x2eb: CODECOPY 0x0 0x5e6 0x20
0x2ed: V243 = M[0x0]
0x2ef: M[0x0] = V240
0x2f0: V244 = 0x44
0x2f3: V245 = ADD V227 0x44
0x2f4: M[V245] = V243
0x2f6: V246 = M[0x40]
0x2fa: V247 = SUB V227 V246
0x2fb: V248 = 0x64
0x2fd: V249 = ADD 0x64 V247
0x2ff: REVERT V246 V249
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x300
[0x300:0x367]
---
Predecessors: [0x2b0]
Successors: [0x368, 0x36c]
---
0x300 JUMPDEST
0x301 PUSH1 0x2
0x303 PUSH1 0x0
0x305 SWAP1
0x306 SLOAD
0x307 SWAP1
0x308 PUSH2 0x100
0x30b EXP
0x30c SWAP1
0x30d DIV
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 AND
0x317 PUSH1 0x1
0x319 PUSH1 0xa0
0x31b PUSH1 0x2
0x31d EXP
0x31e SUB
0x31f AND
0x320 PUSH4 0x3ccfd60b
0x325 PUSH1 0x40
0x327 MLOAD
0x328 DUP2
0x329 PUSH4 0xffffffff
0x32e AND
0x32f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x34d MUL
0x34e DUP2
0x34f MSTORE
0x350 PUSH1 0x4
0x352 ADD
0x353 PUSH1 0x0
0x355 PUSH1 0x40
0x357 MLOAD
0x358 DUP1
0x359 DUP4
0x35a SUB
0x35b DUP2
0x35c PUSH1 0x0
0x35e DUP8
0x35f DUP1
0x360 EXTCODESIZE
0x361 ISZERO
0x362 DUP1
0x363 ISZERO
0x364 PUSH2 0x36c
0x367 JUMPI
---
0x300: JUMPDEST 
0x301: V250 = 0x2
0x303: V251 = 0x0
0x306: V252 = S[0x2]
0x308: V253 = 0x100
0x30b: V254 = EXP 0x100 0x0
0x30d: V255 = DIV V252 0x1
0x30e: V256 = 0x1
0x310: V257 = 0xa0
0x312: V258 = 0x2
0x314: V259 = EXP 0x2 0xa0
0x315: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x316: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x317: V262 = 0x1
0x319: V263 = 0xa0
0x31b: V264 = 0x2
0x31d: V265 = EXP 0x2 0xa0
0x31e: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31f: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x320: V268 = 0x3ccfd60b
0x325: V269 = 0x40
0x327: V270 = M[0x40]
0x329: V271 = 0xffffffff
0x32e: V272 = AND 0xffffffff 0x3ccfd60b
0x32f: V273 = 0x100000000000000000000000000000000000000000000000000000000
0x34d: V274 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x34f: M[V270] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x350: V275 = 0x4
0x352: V276 = ADD 0x4 V270
0x353: V277 = 0x0
0x355: V278 = 0x40
0x357: V279 = M[0x40]
0x35a: V280 = SUB V276 V279
0x35c: V281 = 0x0
0x360: V282 = EXTCODESIZE V267
0x361: V283 = ISZERO V282
0x363: V284 = ISZERO V283
0x364: V285 = 0x36c
0x367: JUMPI 0x36c V284
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V267, 0x3ccfd60b, V276, 0x0, V279, V280, V279, 0x0, V267, V283]
Exit stack: [V11, 0x77, V267, 0x3ccfd60b, V276, 0x0, V279, V280, V279, 0x0, V267, V283]

================================

Block 0x368
[0x368:0x36b]
---
Predecessors: [0x300]
Successors: []
---
0x368 PUSH1 0x0
0x36a DUP1
0x36b REVERT
---
0x368: V286 = 0x0
0x36b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V267, 0x3ccfd60b, V276, 0x0, V279, V280, V279, 0x0, V267, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V267, 0x3ccfd60b, V276, 0x0, V279, V280, V279, 0x0, V267, V283]

================================

Block 0x36c
[0x36c:0x376]
---
Predecessors: [0x300]
Successors: [0x377, 0x380]
---
0x36c JUMPDEST
0x36d POP
0x36e GAS
0x36f CALL
0x370 ISZERO
0x371 DUP1
0x372 ISZERO
0x373 PUSH2 0x380
0x376 JUMPI
---
0x36c: JUMPDEST 
0x36e: V287 = GAS
0x36f: V288 = CALL V287 V267 0x0 V279 V280 V279 0x0
0x370: V289 = ISZERO V288
0x372: V290 = ISZERO V289
0x373: V291 = 0x380
0x376: JUMPI 0x380 V290
---
Entry stack: [V11, 0x77, V267, 0x3ccfd60b, V276, 0x0, V279, V280, V279, 0x0, V267, V283]
Stack pops: 7
Stack additions: [V289]
Exit stack: [V11, 0x77, V267, 0x3ccfd60b, V276, V289]

================================

Block 0x377
[0x377:0x37f]
---
Predecessors: [0x36c]
Successors: []
---
0x377 RETURNDATASIZE
0x378 PUSH1 0x0
0x37a DUP1
0x37b RETURNDATACOPY
0x37c RETURNDATASIZE
0x37d PUSH1 0x0
0x37f REVERT
---
0x377: V292 = RETURNDATASIZE
0x378: V293 = 0x0
0x37b: RETURNDATACOPY 0x0 0x0 V292
0x37c: V294 = RETURNDATASIZE
0x37d: V295 = 0x0
0x37f: REVERT 0x0 V294
---
Entry stack: [V11, 0x77, V267, 0x3ccfd60b, V276, V289]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V267, 0x3ccfd60b, V276, V289]

================================

Block 0x380
[0x380:0x385]
---
Predecessors: [0x36c]
Successors: [0x77]
---
0x380 JUMPDEST
0x381 POP
0x382 POP
0x383 POP
0x384 POP
0x385 JUMP
---
0x380: JUMPDEST 
0x385: JUMP 0x77
---
Entry stack: [V11, 0x77, V267, 0x3ccfd60b, V276, V289]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x386
[0x386:0x399]
---
Predecessors: [0xc7]
Successors: [0x39a, 0x3d7]
---
0x386 JUMPDEST
0x387 PUSH1 0x0
0x389 DUP1
0x38a SLOAD
0x38b PUSH1 0x1
0x38d PUSH1 0xa0
0x38f PUSH1 0x2
0x391 EXP
0x392 SUB
0x393 AND
0x394 CALLER
0x395 EQ
0x396 PUSH2 0x3d7
0x399 JUMPI
---
0x386: JUMPDEST 
0x387: V296 = 0x0
0x38a: V297 = S[0x0]
0x38b: V298 = 0x1
0x38d: V299 = 0xa0
0x38f: V300 = 0x2
0x391: V301 = EXP 0x2 0xa0
0x392: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x393: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x394: V304 = CALLER
0x395: V305 = EQ V304 V303
0x396: V306 = 0x3d7
0x399: JUMPI 0x3d7 V305
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x77, 0x0]

================================

Block 0x39a
[0x39a:0x3d6]
---
Predecessors: [0x386]
Successors: []
---
0x39a PUSH1 0x40
0x39c DUP1
0x39d MLOAD
0x39e PUSH1 0xe5
0x3a0 PUSH1 0x2
0x3a2 EXP
0x3a3 PUSH3 0x461bcd
0x3a7 MUL
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x20
0x3ac PUSH1 0x4
0x3ae DUP3
0x3af ADD
0x3b0 MSTORE
0x3b1 PUSH1 0xe
0x3b3 PUSH1 0x24
0x3b5 DUP3
0x3b6 ADD
0x3b7 MSTORE
0x3b8 PUSH1 0x0
0x3ba DUP1
0x3bb MLOAD
0x3bc PUSH1 0x20
0x3be PUSH2 0x5e6
0x3c1 DUP4
0x3c2 CODECOPY
0x3c3 DUP2
0x3c4 MLOAD
0x3c5 SWAP2
0x3c6 MSTORE
0x3c7 PUSH1 0x44
0x3c9 DUP3
0x3ca ADD
0x3cb MSTORE
0x3cc SWAP1
0x3cd MLOAD
0x3ce SWAP1
0x3cf DUP2
0x3d0 SWAP1
0x3d1 SUB
0x3d2 PUSH1 0x64
0x3d4 ADD
0x3d5 SWAP1
0x3d6 REVERT
---
0x39a: V307 = 0x40
0x39d: V308 = M[0x40]
0x39e: V309 = 0xe5
0x3a0: V310 = 0x2
0x3a2: V311 = EXP 0x2 0xe5
0x3a3: V312 = 0x461bcd
0x3a7: V313 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x3a9: M[V308] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3aa: V314 = 0x20
0x3ac: V315 = 0x4
0x3af: V316 = ADD V308 0x4
0x3b0: M[V316] = 0x20
0x3b1: V317 = 0xe
0x3b3: V318 = 0x24
0x3b6: V319 = ADD V308 0x24
0x3b7: M[V319] = 0xe
0x3b8: V320 = 0x0
0x3bb: V321 = M[0x0]
0x3bc: V322 = 0x20
0x3be: V323 = 0x5e6
0x3c2: CODECOPY 0x0 0x5e6 0x20
0x3c4: V324 = M[0x0]
0x3c6: M[0x0] = V321
0x3c7: V325 = 0x44
0x3ca: V326 = ADD V308 0x44
0x3cb: M[V326] = V324
0x3cd: V327 = M[0x40]
0x3d1: V328 = SUB V308 V327
0x3d2: V329 = 0x64
0x3d4: V330 = ADD 0x64 V328
0x3d6: REVERT V327 V330
---
Entry stack: [V11, 0x77, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x0]

================================

Block 0x3d7
[0x3d7:0x3df]
---
Predecessors: [0x386]
Successors: [0x464]
---
0x3d7 JUMPDEST
0x3d8 PUSH2 0x3e0
0x3db ADDRESS
0x3dc PUSH2 0x464
0x3df JUMP
---
0x3d7: JUMPDEST 
0x3d8: V331 = 0x3e0
0x3db: V332 = ADDRESS
0x3dc: V333 = 0x464
0x3df: JUMP 0x464
---
Entry stack: [V11, 0x77, 0x0]
Stack pops: 0
Stack additions: [0x3e0, V332]
Exit stack: [V11, 0x77, 0x0, 0x3e0, V332]

================================

Block 0x3e0
[0x3e0:0x444]
---
Predecessors: [0x4f9]
Successors: [0x445, 0x449]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x2
0x3e3 SLOAD
0x3e4 PUSH1 0x40
0x3e6 DUP1
0x3e7 MLOAD
0x3e8 PUSH32 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x409 DUP2
0x40a MSTORE
0x40b PUSH1 0x4
0x40d DUP2
0x40e ADD
0x40f DUP5
0x410 SWAP1
0x411 MSTORE
0x412 SWAP1
0x413 MLOAD
0x414 SWAP3
0x415 SWAP4
0x416 POP
0x417 PUSH1 0x1
0x419 PUSH1 0xa0
0x41b PUSH1 0x2
0x41d EXP
0x41e SUB
0x41f SWAP1
0x420 SWAP2
0x421 AND
0x422 SWAP2
0x423 PUSH4 0xe4849b32
0x428 SWAP2
0x429 PUSH1 0x24
0x42b DUP1
0x42c DUP3
0x42d ADD
0x42e SWAP3
0x42f PUSH1 0x0
0x431 SWAP3
0x432 SWAP1
0x433 SWAP2
0x434 SWAP1
0x435 DUP3
0x436 SWAP1
0x437 SUB
0x438 ADD
0x439 DUP2
0x43a DUP4
0x43b DUP8
0x43c DUP1
0x43d EXTCODESIZE
0x43e ISZERO
0x43f DUP1
0x440 ISZERO
0x441 PUSH2 0x449
0x444 JUMPI
---
0x3e0: JUMPDEST 
0x3e1: V334 = 0x2
0x3e3: V335 = S[0x2]
0x3e4: V336 = 0x40
0x3e7: V337 = M[0x40]
0x3e8: V338 = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x40a: M[V337] = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x40b: V339 = 0x4
0x40e: V340 = ADD V337 0x4
0x411: M[V340] = V412
0x413: V341 = M[0x40]
0x417: V342 = 0x1
0x419: V343 = 0xa0
0x41b: V344 = 0x2
0x41d: V345 = EXP 0x2 0xa0
0x41e: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x421: V347 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x423: V348 = 0xe4849b32
0x429: V349 = 0x24
0x42d: V350 = ADD V337 0x24
0x42f: V351 = 0x0
0x437: V352 = SUB V337 V341
0x438: V353 = ADD V352 0x24
0x43d: V354 = EXTCODESIZE V347
0x43e: V355 = ISZERO V354
0x440: V356 = ISZERO V355
0x441: V357 = 0x449
0x444: JUMPI 0x449 V356
---
Entry stack: [V11, 0x77, S1, V412]
Stack pops: 2
Stack additions: [S0, V347, 0xe4849b32, V350, 0x0, V341, V353, V341, 0x0, V347, V355]
Exit stack: [V11, 0x77, V412, V347, 0xe4849b32, V350, 0x0, V341, V353, V341, 0x0, V347, V355]

================================

Block 0x445
[0x445:0x448]
---
Predecessors: [0x3e0]
Successors: []
---
0x445 PUSH1 0x0
0x447 DUP1
0x448 REVERT
---
0x445: V358 = 0x0
0x448: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V412, V347, 0xe4849b32, V350, 0x0, V341, V353, V341, 0x0, V347, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V412, V347, 0xe4849b32, V350, 0x0, V341, V353, V341, 0x0, V347, V355]

================================

Block 0x449
[0x449:0x453]
---
Predecessors: [0x3e0]
Successors: [0x454, 0x45d]
---
0x449 JUMPDEST
0x44a POP
0x44b GAS
0x44c CALL
0x44d ISZERO
0x44e DUP1
0x44f ISZERO
0x450 PUSH2 0x45d
0x453 JUMPI
---
0x449: JUMPDEST 
0x44b: V359 = GAS
0x44c: V360 = CALL V359 V347 0x0 V341 V353 V341 0x0
0x44d: V361 = ISZERO V360
0x44f: V362 = ISZERO V361
0x450: V363 = 0x45d
0x453: JUMPI 0x45d V362
---
Entry stack: [V11, 0x77, V412, V347, 0xe4849b32, V350, 0x0, V341, V353, V341, 0x0, V347, V355]
Stack pops: 7
Stack additions: [V361]
Exit stack: [V11, 0x77, V412, V347, 0xe4849b32, V350, V361]

================================

Block 0x454
[0x454:0x45c]
---
Predecessors: [0x449]
Successors: []
---
0x454 RETURNDATASIZE
0x455 PUSH1 0x0
0x457 DUP1
0x458 RETURNDATACOPY
0x459 RETURNDATASIZE
0x45a PUSH1 0x0
0x45c REVERT
---
0x454: V364 = RETURNDATASIZE
0x455: V365 = 0x0
0x458: RETURNDATACOPY 0x0 0x0 V364
0x459: V366 = RETURNDATASIZE
0x45a: V367 = 0x0
0x45c: REVERT 0x0 V366
---
Entry stack: [V11, 0x77, V412, V347, 0xe4849b32, V350, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V412, V347, 0xe4849b32, V350, V361]

================================

Block 0x45d
[0x45d:0x463]
---
Predecessors: [0x449]
Successors: [0x77]
---
0x45d JUMPDEST
0x45e POP
0x45f POP
0x460 POP
0x461 POP
0x462 POP
0x463 JUMP
---
0x45d: JUMPDEST 
0x463: JUMP 0x77
---
Entry stack: [V11, 0x77, V412, V347, 0xe4849b32, V350, V361]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x464
[0x464:0x4ca]
---
Predecessors: [0xdc, 0x16c, 0x3d7]
Successors: [0x4cb, 0x4cf]
---
0x464 JUMPDEST
0x465 PUSH1 0x2
0x467 SLOAD
0x468 PUSH1 0x40
0x46a DUP1
0x46b MLOAD
0x46c PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x48d DUP2
0x48e MSTORE
0x48f PUSH1 0x1
0x491 PUSH1 0xa0
0x493 PUSH1 0x2
0x495 EXP
0x496 SUB
0x497 DUP5
0x498 DUP2
0x499 AND
0x49a PUSH1 0x4
0x49c DUP4
0x49d ADD
0x49e MSTORE
0x49f SWAP2
0x4a0 MLOAD
0x4a1 PUSH1 0x0
0x4a3 SWAP4
0x4a4 SWAP3
0x4a5 SWAP1
0x4a6 SWAP3
0x4a7 AND
0x4a8 SWAP2
0x4a9 PUSH4 0x70a08231
0x4ae SWAP2
0x4af PUSH1 0x24
0x4b1 DUP1
0x4b2 DUP3
0x4b3 ADD
0x4b4 SWAP3
0x4b5 PUSH1 0x20
0x4b7 SWAP3
0x4b8 SWAP1
0x4b9 SWAP2
0x4ba SWAP1
0x4bb DUP3
0x4bc SWAP1
0x4bd SUB
0x4be ADD
0x4bf DUP2
0x4c0 DUP8
0x4c1 DUP8
0x4c2 DUP1
0x4c3 EXTCODESIZE
0x4c4 ISZERO
0x4c5 DUP1
0x4c6 ISZERO
0x4c7 PUSH2 0x4cf
0x4ca JUMPI
---
0x464: JUMPDEST 
0x465: V368 = 0x2
0x467: V369 = S[0x2]
0x468: V370 = 0x40
0x46b: V371 = M[0x40]
0x46c: V372 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x48e: M[V371] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x48f: V373 = 0x1
0x491: V374 = 0xa0
0x493: V375 = 0x2
0x495: V376 = EXP 0x2 0xa0
0x496: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x499: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x49a: V379 = 0x4
0x49d: V380 = ADD V371 0x4
0x49e: M[V380] = V378
0x4a0: V381 = M[0x40]
0x4a1: V382 = 0x0
0x4a7: V383 = AND V369 0xffffffffffffffffffffffffffffffffffffffff
0x4a9: V384 = 0x70a08231
0x4af: V385 = 0x24
0x4b3: V386 = ADD V371 0x24
0x4b5: V387 = 0x20
0x4bd: V388 = SUB V371 V381
0x4be: V389 = ADD V388 0x24
0x4c3: V390 = EXTCODESIZE V383
0x4c4: V391 = ISZERO V390
0x4c6: V392 = ISZERO V391
0x4c7: V393 = 0x4cf
0x4ca: JUMPI 0x4cf V392
---
Entry stack: [V11, 0x77, S2, {0xf1, 0x175, 0x3e0}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V383, 0x70a08231, V386, 0x20, V381, V389, V381, 0x0, V383, V391]
Exit stack: [V11, 0x77, S2, {0xf1, 0x175, 0x3e0}, S0, 0x0, V383, 0x70a08231, V386, 0x20, V381, V389, V381, 0x0, V383, V391]

================================

Block 0x4cb
[0x4cb:0x4ce]
---
Predecessors: [0x464]
Successors: []
---
0x4cb PUSH1 0x0
0x4cd DUP1
0x4ce REVERT
---
0x4cb: V394 = 0x0
0x4ce: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, S13, {0xf1, 0x175, 0x3e0}, S11, 0x0, V383, 0x70a08231, V386, 0x20, V381, V389, V381, 0x0, V383, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S13, {0xf1, 0x175, 0x3e0}, S11, 0x0, V383, 0x70a08231, V386, 0x20, V381, V389, V381, 0x0, V383, V391]

================================

Block 0x4cf
[0x4cf:0x4d9]
---
Predecessors: [0x464]
Successors: [0x4da, 0x4e3]
---
0x4cf JUMPDEST
0x4d0 POP
0x4d1 GAS
0x4d2 CALL
0x4d3 ISZERO
0x4d4 DUP1
0x4d5 ISZERO
0x4d6 PUSH2 0x4e3
0x4d9 JUMPI
---
0x4cf: JUMPDEST 
0x4d1: V395 = GAS
0x4d2: V396 = CALL V395 V383 0x0 V381 V389 V381 0x20
0x4d3: V397 = ISZERO V396
0x4d5: V398 = ISZERO V397
0x4d6: V399 = 0x4e3
0x4d9: JUMPI 0x4e3 V398
---
Entry stack: [V11, 0x77, S13, {0xf1, 0x175, 0x3e0}, S11, 0x0, V383, 0x70a08231, V386, 0x20, V381, V389, V381, 0x0, V383, V391]
Stack pops: 7
Stack additions: [V397]
Exit stack: [V11, 0x77, S13, {0xf1, 0x175, 0x3e0}, S11, 0x0, V383, 0x70a08231, V386, V397]

================================

Block 0x4da
[0x4da:0x4e2]
---
Predecessors: [0x4cf]
Successors: []
---
0x4da RETURNDATASIZE
0x4db PUSH1 0x0
0x4dd DUP1
0x4de RETURNDATACOPY
0x4df RETURNDATASIZE
0x4e0 PUSH1 0x0
0x4e2 REVERT
---
0x4da: V400 = RETURNDATASIZE
0x4db: V401 = 0x0
0x4de: RETURNDATACOPY 0x0 0x0 V400
0x4df: V402 = RETURNDATASIZE
0x4e0: V403 = 0x0
0x4e2: REVERT 0x0 V402
---
Entry stack: [V11, 0x77, S7, {0xf1, 0x175, 0x3e0}, S5, 0x0, S3, 0x70a08231, S1, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S7, {0xf1, 0x175, 0x3e0}, S5, 0x0, S3, 0x70a08231, S1, V397]

================================

Block 0x4e3
[0x4e3:0x4f4]
---
Predecessors: [0x4cf]
Successors: [0x4f5, 0x4f9]
---
0x4e3 JUMPDEST
0x4e4 POP
0x4e5 POP
0x4e6 POP
0x4e7 POP
0x4e8 PUSH1 0x40
0x4ea MLOAD
0x4eb RETURNDATASIZE
0x4ec PUSH1 0x20
0x4ee DUP2
0x4ef LT
0x4f0 ISZERO
0x4f1 PUSH2 0x4f9
0x4f4 JUMPI
---
0x4e3: JUMPDEST 
0x4e8: V404 = 0x40
0x4ea: V405 = M[0x40]
0x4eb: V406 = RETURNDATASIZE
0x4ec: V407 = 0x20
0x4ef: V408 = LT V406 0x20
0x4f0: V409 = ISZERO V408
0x4f1: V410 = 0x4f9
0x4f4: JUMPI 0x4f9 V409
---
Entry stack: [V11, 0x77, S7, {0xf1, 0x175, 0x3e0}, S5, 0x0, S3, 0x70a08231, S1, V397]
Stack pops: 4
Stack additions: [V405, V406]
Exit stack: [V11, 0x77, S7, {0xf1, 0x175, 0x3e0}, S5, 0x0, V405, V406]

================================

Block 0x4f5
[0x4f5:0x4f8]
---
Predecessors: [0x4e3]
Successors: []
---
0x4f5 PUSH1 0x0
0x4f7 DUP1
0x4f8 REVERT
---
0x4f5: V411 = 0x0
0x4f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, S5, {0xf1, 0x175, 0x3e0}, S3, 0x0, V405, V406]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S5, {0xf1, 0x175, 0x3e0}, S3, 0x0, V405, V406]

================================

Block 0x4f9
[0x4f9:0x500]
---
Predecessors: [0x4e3]
Successors: [0xf1, 0x175, 0x3e0]
---
0x4f9 JUMPDEST
0x4fa POP
0x4fb MLOAD
0x4fc SWAP3
0x4fd SWAP2
0x4fe POP
0x4ff POP
0x500 JUMP
---
0x4f9: JUMPDEST 
0x4fb: V412 = M[V405]
0x500: JUMP {0xf1, 0x175, 0x3e0}
---
Entry stack: [V11, 0x77, S5, {0xf1, 0x175, 0x3e0}, S3, 0x0, V405, V406]
Stack pops: 5
Stack additions: [V412]
Exit stack: [V11, 0x77, S5, V412]

================================

Block 0x501
[0x501:0x513]
---
Predecessors: [0x10f]
Successors: [0x514, 0x551]
---
0x501 JUMPDEST
0x502 PUSH1 0x0
0x504 SLOAD
0x505 PUSH1 0x1
0x507 PUSH1 0xa0
0x509 PUSH1 0x2
0x50b EXP
0x50c SUB
0x50d AND
0x50e CALLER
0x50f EQ
0x510 PUSH2 0x551
0x513 JUMPI
---
0x501: JUMPDEST 
0x502: V413 = 0x0
0x504: V414 = S[0x0]
0x505: V415 = 0x1
0x507: V416 = 0xa0
0x509: V417 = 0x2
0x50b: V418 = EXP 0x2 0xa0
0x50c: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50d: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x50e: V421 = CALLER
0x50f: V422 = EQ V421 V420
0x510: V423 = 0x551
0x513: JUMPI 0x551 V422
---
Entry stack: [V11, 0x77, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V82]

================================

Block 0x514
[0x514:0x550]
---
Predecessors: [0x501]
Successors: []
---
0x514 PUSH1 0x40
0x516 DUP1
0x517 MLOAD
0x518 PUSH1 0xe5
0x51a PUSH1 0x2
0x51c EXP
0x51d PUSH3 0x461bcd
0x521 MUL
0x522 DUP2
0x523 MSTORE
0x524 PUSH1 0x20
0x526 PUSH1 0x4
0x528 DUP3
0x529 ADD
0x52a MSTORE
0x52b PUSH1 0xe
0x52d PUSH1 0x24
0x52f DUP3
0x530 ADD
0x531 MSTORE
0x532 PUSH1 0x0
0x534 DUP1
0x535 MLOAD
0x536 PUSH1 0x20
0x538 PUSH2 0x5e6
0x53b DUP4
0x53c CODECOPY
0x53d DUP2
0x53e MLOAD
0x53f SWAP2
0x540 MSTORE
0x541 PUSH1 0x44
0x543 DUP3
0x544 ADD
0x545 MSTORE
0x546 SWAP1
0x547 MLOAD
0x548 SWAP1
0x549 DUP2
0x54a SWAP1
0x54b SUB
0x54c PUSH1 0x64
0x54e ADD
0x54f SWAP1
0x550 REVERT
---
0x514: V424 = 0x40
0x517: V425 = M[0x40]
0x518: V426 = 0xe5
0x51a: V427 = 0x2
0x51c: V428 = EXP 0x2 0xe5
0x51d: V429 = 0x461bcd
0x521: V430 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x523: M[V425] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x524: V431 = 0x20
0x526: V432 = 0x4
0x529: V433 = ADD V425 0x4
0x52a: M[V433] = 0x20
0x52b: V434 = 0xe
0x52d: V435 = 0x24
0x530: V436 = ADD V425 0x24
0x531: M[V436] = 0xe
0x532: V437 = 0x0
0x535: V438 = M[0x0]
0x536: V439 = 0x20
0x538: V440 = 0x5e6
0x53c: CODECOPY 0x0 0x5e6 0x20
0x53e: V441 = M[0x0]
0x540: M[0x0] = V438
0x541: V442 = 0x44
0x544: V443 = ADD V425 0x44
0x545: M[V443] = V441
0x547: V444 = M[0x40]
0x54b: V445 = SUB V425 V444
0x54c: V446 = 0x64
0x54e: V447 = ADD 0x64 V445
0x550: REVERT V444 V447
---
Entry stack: [V11, 0x77, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V82]

================================

Block 0x551
[0x551:0x558]
---
Predecessors: [0x501]
Successors: [0x559, 0x599]
---
0x551 JUMPDEST
0x552 DUP1
0x553 ISZERO
0x554 ISZERO
0x555 PUSH2 0x599
0x558 JUMPI
---
0x551: JUMPDEST 
0x553: V448 = ISZERO V82
0x554: V449 = ISZERO V448
0x555: V450 = 0x599
0x558: JUMPI 0x599 V449
---
Entry stack: [V11, 0x77, V82]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V82]

================================

Block 0x559
[0x559:0x589]
---
Predecessors: [0x551]
Successors: [0x58a, 0x593]
---
0x559 PUSH1 0x0
0x55b DUP1
0x55c SLOAD
0x55d PUSH1 0x40
0x55f MLOAD
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 SWAP1
0x569 SWAP2
0x56a AND
0x56b SWAP2
0x56c ADDRESS
0x56d BALANCE
0x56e DUP1
0x56f ISZERO
0x570 PUSH2 0x8fc
0x573 MUL
0x574 SWAP3
0x575 SWAP1
0x576 SWAP2
0x577 DUP2
0x578 DUP2
0x579 DUP2
0x57a DUP6
0x57b DUP9
0x57c DUP9
0x57d CALL
0x57e SWAP4
0x57f POP
0x580 POP
0x581 POP
0x582 POP
0x583 ISZERO
0x584 DUP1
0x585 ISZERO
0x586 PUSH2 0x593
0x589 JUMPI
---
0x559: V451 = 0x0
0x55c: V452 = S[0x0]
0x55d: V453 = 0x40
0x55f: V454 = M[0x40]
0x560: V455 = 0x1
0x562: V456 = 0xa0
0x564: V457 = 0x2
0x566: V458 = EXP 0x2 0xa0
0x567: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V460 = AND V452 0xffffffffffffffffffffffffffffffffffffffff
0x56c: V461 = ADDRESS
0x56d: V462 = BALANCE V461
0x56f: V463 = ISZERO V462
0x570: V464 = 0x8fc
0x573: V465 = MUL 0x8fc V463
0x57d: V466 = CALL V465 V460 V462 V454 0x0 V454 0x0
0x583: V467 = ISZERO V466
0x585: V468 = ISZERO V467
0x586: V469 = 0x593
0x589: JUMPI 0x593 V468
---
Entry stack: [V11, 0x77, V82]
Stack pops: 0
Stack additions: [V467]
Exit stack: [V11, 0x77, V82, V467]

================================

Block 0x58a
[0x58a:0x592]
---
Predecessors: [0x559]
Successors: []
---
0x58a RETURNDATASIZE
0x58b PUSH1 0x0
0x58d DUP1
0x58e RETURNDATACOPY
0x58f RETURNDATASIZE
0x590 PUSH1 0x0
0x592 REVERT
---
0x58a: V470 = RETURNDATASIZE
0x58b: V471 = 0x0
0x58e: RETURNDATACOPY 0x0 0x0 V470
0x58f: V472 = RETURNDATASIZE
0x590: V473 = 0x0
0x592: REVERT 0x0 V472
---
Entry stack: [V11, 0x77, V82, V467]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V82, V467]

================================

Block 0x593
[0x593:0x598]
---
Predecessors: [0x559]
Successors: [0x5e2]
---
0x593 JUMPDEST
0x594 POP
0x595 PUSH2 0x5e2
0x598 JUMP
---
0x593: JUMPDEST 
0x595: V474 = 0x5e2
0x598: JUMP 0x5e2
---
Entry stack: [V11, 0x77, V82, V467]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V82]

================================

Block 0x599
[0x599:0x5a2]
---
Predecessors: [0x551]
Successors: [0x5a3, 0x5a7]
---
0x599 JUMPDEST
0x59a ADDRESS
0x59b BALANCE
0x59c DUP2
0x59d GT
0x59e ISZERO
0x59f PUSH2 0x5a7
0x5a2 JUMPI
---
0x599: JUMPDEST 
0x59a: V475 = ADDRESS
0x59b: V476 = BALANCE V475
0x59d: V477 = GT V82 V476
0x59e: V478 = ISZERO V477
0x59f: V479 = 0x5a7
0x5a2: JUMPI 0x5a7 V478
---
Entry stack: [V11, 0x77, V82]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V82]

================================

Block 0x5a3
[0x5a3:0x5a6]
---
Predecessors: [0x599]
Successors: []
---
0x5a3 PUSH1 0x0
0x5a5 DUP1
0x5a6 REVERT
---
0x5a3: V480 = 0x0
0x5a6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V82]

================================

Block 0x5a7
[0x5a7:0x5d6]
---
Predecessors: [0x599]
Successors: [0x5d7, 0x5e0]
---
0x5a7 JUMPDEST
0x5a8 PUSH1 0x0
0x5aa DUP1
0x5ab SLOAD
0x5ac PUSH1 0x40
0x5ae MLOAD
0x5af PUSH1 0x1
0x5b1 PUSH1 0xa0
0x5b3 PUSH1 0x2
0x5b5 EXP
0x5b6 SUB
0x5b7 SWAP1
0x5b8 SWAP2
0x5b9 AND
0x5ba SWAP2
0x5bb DUP4
0x5bc ISZERO
0x5bd PUSH2 0x8fc
0x5c0 MUL
0x5c1 SWAP2
0x5c2 DUP5
0x5c3 SWAP2
0x5c4 DUP2
0x5c5 DUP2
0x5c6 DUP2
0x5c7 DUP6
0x5c8 DUP9
0x5c9 DUP9
0x5ca CALL
0x5cb SWAP4
0x5cc POP
0x5cd POP
0x5ce POP
0x5cf POP
0x5d0 ISZERO
0x5d1 DUP1
0x5d2 ISZERO
0x5d3 PUSH2 0x5e0
0x5d6 JUMPI
---
0x5a7: JUMPDEST 
0x5a8: V481 = 0x0
0x5ab: V482 = S[0x0]
0x5ac: V483 = 0x40
0x5ae: V484 = M[0x40]
0x5af: V485 = 0x1
0x5b1: V486 = 0xa0
0x5b3: V487 = 0x2
0x5b5: V488 = EXP 0x2 0xa0
0x5b6: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b9: V490 = AND V482 0xffffffffffffffffffffffffffffffffffffffff
0x5bc: V491 = ISZERO V82
0x5bd: V492 = 0x8fc
0x5c0: V493 = MUL 0x8fc V491
0x5ca: V494 = CALL V493 V490 V82 V484 0x0 V484 0x0
0x5d0: V495 = ISZERO V494
0x5d2: V496 = ISZERO V495
0x5d3: V497 = 0x5e0
0x5d6: JUMPI 0x5e0 V496
---
Entry stack: [V11, 0x77, V82]
Stack pops: 1
Stack additions: [S0, V495]
Exit stack: [V11, 0x77, V82, V495]

================================

Block 0x5d7
[0x5d7:0x5df]
---
Predecessors: [0x5a7]
Successors: []
---
0x5d7 RETURNDATASIZE
0x5d8 PUSH1 0x0
0x5da DUP1
0x5db RETURNDATACOPY
0x5dc RETURNDATASIZE
0x5dd PUSH1 0x0
0x5df REVERT
---
0x5d7: V498 = RETURNDATASIZE
0x5d8: V499 = 0x0
0x5db: RETURNDATACOPY 0x0 0x0 V498
0x5dc: V500 = RETURNDATASIZE
0x5dd: V501 = 0x0
0x5df: REVERT 0x0 V500
---
Entry stack: [V11, 0x77, V82, V495]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V82, V495]

================================

Block 0x5e0
[0x5e0:0x5e1]
---
Predecessors: [0x5a7]
Successors: [0x5e2]
---
0x5e0 JUMPDEST
0x5e1 POP
---
0x5e0: JUMPDEST 
---
Entry stack: [V11, 0x77, V82, V495]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V82]

================================

Block 0x5e2
[0x5e2:0x5e4]
---
Predecessors: [0x593, 0x5e0]
Successors: [0x77]
---
0x5e2 JUMPDEST
0x5e3 POP
0x5e4 JUMP
---
0x5e2: JUMPDEST 
0x5e4: JUMP 0x77
---
Entry stack: [V11, 0x77, V82]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5e5
[0x5e5:0x63a]
---
Predecessors: []
Successors: []
---
0x5e5 STOP
0x5e6 COINBASE
0x5e7 PUSH4 0x63657373
0x5ec SHA3
0x5ed DIFFICULTY
0x5ee PUSH6 0x6e6965642100
0x5f5 STOP
0x5f6 STOP
0x5f7 STOP
0x5f8 STOP
0x5f9 STOP
0x5fa STOP
0x5fb STOP
0x5fc STOP
0x5fd STOP
0x5fe STOP
0x5ff STOP
0x600 STOP
0x601 STOP
0x602 STOP
0x603 STOP
0x604 STOP
0x605 STOP
0x606 LOG1
0x607 PUSH6 0x627a7a723058
0x60e SHA3
0x60f DUP1
0x610 DUP3
0x611 MISSING 0xbd
0x612 MISSING 0xea
0x613 EQ
0x614 MISSING 0xe1
0x615 MISSING 0xb7
0x616 MISSING 0x21
0x617 MISSING 0xc8
0x618 LOG1
0x619 MISSING 0xe5
0x61a MISSING 0x46
0x61b SWAP2
0x61c MISSING 0xcc
0x61d MISSING 0xae
0x61e MISSING 0xe6
0x61f PUSH8 0x381704160e68a05
0x628 MULMOD
0x629 PUSH17 0x1d960ea7390029
---
0x5e5: STOP 
0x5e6: V502 = COINBASE
0x5e7: V503 = 0x63657373
0x5ec: V504 = SHA3 0x63657373 V502
0x5ed: V505 = DIFFICULTY
0x5ee: V506 = 0x6e6965642100
0x5f5: STOP 
0x5f6: STOP 
0x5f7: STOP 
0x5f8: STOP 
0x5f9: STOP 
0x5fa: STOP 
0x5fb: STOP 
0x5fc: STOP 
0x5fd: STOP 
0x5fe: STOP 
0x5ff: STOP 
0x600: STOP 
0x601: STOP 
0x602: STOP 
0x603: STOP 
0x604: STOP 
0x605: STOP 
0x606: LOG S0 S1 S2
0x607: V507 = 0x627a7a723058
0x60e: V508 = SHA3 0x627a7a723058 S3
0x611: MISSING 0xbd
0x612: MISSING 0xea
0x613: V509 = EQ S0 S1
0x614: MISSING 0xe1
0x615: MISSING 0xb7
0x616: MISSING 0x21
0x617: MISSING 0xc8
0x618: LOG S0 S1 S2
0x619: MISSING 0xe5
0x61a: MISSING 0x46
0x61c: MISSING 0xcc
0x61d: MISSING 0xae
0x61e: MISSING 0xe6
0x61f: V510 = 0x381704160e68a05
0x628: V511 = MULMOD 0x381704160e68a05 S0 S1
0x629: V512 = 0x1d960ea7390029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6e6965642100, V505, V504, S4, V508, V508, S4, V509, S2, S1, S0, 0x1d960ea7390029, V511]
Exit stack: []

================================

Function 0:
Public function signature: 0x1792b0bc
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x81, 0x85, 0x11b, 0x12f, 0x16c, 0x175, 0x1e5, 0x1e9, 0x1f4, 0x1fd, 0x20f, 0x213

Function 1:
Public function signature: 0x3610724e
Entry block: 0x8e
Exit block: 0x77
Body: 0x77, 0x8e, 0x96, 0x9a, 0x213, 0x218, 0x281, 0x285, 0x290, 0x299, 0x2ac

Function 2:
Public function signature: 0x8d8f2adb
Entry block: 0xa6
Exit block: 0x77
Body: 0x77, 0xa6, 0xae, 0xb2, 0x2b0, 0x2c3, 0x300, 0x368, 0x36c, 0x377, 0x380

Function 3:
Public function signature: 0x9904e174
Entry block: 0xbb
Exit block: 0x77
Body: 0x77, 0xbb, 0xc3, 0xc7, 0x386, 0x39a, 0x3d7, 0x3e0, 0x445, 0x449, 0x454, 0x45d

Function 4:
Public function signature: 0xf8b2cb4f
Entry block: 0xd0
Exit block: 0xd8
Body: 0xd0, 0xd8, 0xdc, 0xf1

Function 5:
Public function signature: 0xfc7fcae1
Entry block: 0x103
Exit block: 0x77
Body: 0x77, 0x103, 0x10b, 0x10f, 0x501, 0x514, 0x551, 0x559, 0x58a, 0x593, 0x599, 0x5a3, 0x5a7, 0x5d7, 0x5e0, 0x5e2

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x464
Exit block: 0x4f9
Body: 0x464, 0x4cf, 0x4e3, 0x4f9

