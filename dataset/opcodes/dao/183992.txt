Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8e05b85
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8e05b85
0x3c: V13 = EQ 0x8e05b85 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x13a]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x13a
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x13a
0x4b: JUMPI 0x13a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x18f]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0x18f
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0x18f
0x56: JUMPI 0x18f V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x137]
---
Predecessors: [0xd]
Successors: [0x1c8]
---
0x5c JUMPDEST
0x5d PUSH2 0x138
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a AND
0x7b SWAP1
0x7c PUSH1 0x20
0x7e ADD
0x7f SWAP1
0x80 SWAP2
0x81 SWAP1
0x82 DUP1
0x83 CALLDATALOAD
0x84 SWAP1
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP1
0x89 SWAP2
0x8a SWAP1
0x8b DUP1
0x8c CALLDATALOAD
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 SWAP1
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 SWAP1
0xa8 SWAP2
0xa9 SWAP1
0xaa DUP1
0xab CALLDATALOAD
0xac SWAP1
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP1
0xb1 SWAP2
0xb2 SWAP1
0xb3 DUP1
0xb4 CALLDATALOAD
0xb5 SWAP1
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 SWAP1
0xba SWAP2
0xbb SWAP1
0xbc DUP1
0xbd CALLDATALOAD
0xbe SWAP1
0xbf PUSH1 0x20
0xc1 ADD
0xc2 SWAP1
0xc3 SWAP2
0xc4 SWAP1
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc AND
0xdd SWAP1
0xde PUSH1 0x20
0xe0 ADD
0xe1 SWAP1
0xe2 SWAP2
0xe3 SWAP1
0xe4 DUP1
0xe5 CALLDATALOAD
0xe6 PUSH1 0xff
0xe8 AND
0xe9 SWAP1
0xea PUSH1 0x20
0xec ADD
0xed SWAP1
0xee SWAP2
0xef SWAP1
0xf0 DUP1
0xf1 CALLDATALOAD
0xf2 PUSH1 0x0
0xf4 NOT
0xf5 AND
0xf6 SWAP1
0xf7 PUSH1 0x20
0xf9 ADD
0xfa SWAP1
0xfb SWAP2
0xfc SWAP1
0xfd DUP1
0xfe CALLDATALOAD
0xff PUSH1 0x0
0x101 NOT
0x102 AND
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 SWAP2
0x109 SWAP1
0x10a DUP1
0x10b CALLDATALOAD
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 SWAP2
0x112 SWAP1
0x113 DUP1
0x114 CALLDATALOAD
0x115 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a AND
0x12b SWAP1
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 SWAP2
0x131 SWAP1
0x132 POP
0x133 POP
0x134 PUSH2 0x1c8
0x137 JUMP
---
0x5c: JUMPDEST 
0x5d: V22 = 0x138
0x60: V23 = 0x4
0x64: V24 = CALLDATALOAD 0x4
0x65: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x7c: V27 = 0x20
0x7e: V28 = ADD 0x20 0x4
0x83: V29 = CALLDATALOAD 0x24
0x85: V30 = 0x20
0x87: V31 = ADD 0x20 0x24
0x8c: V32 = CALLDATALOAD 0x44
0x8d: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xa4: V35 = 0x20
0xa6: V36 = ADD 0x20 0x44
0xab: V37 = CALLDATALOAD 0x64
0xad: V38 = 0x20
0xaf: V39 = ADD 0x20 0x64
0xb4: V40 = CALLDATALOAD 0x84
0xb6: V41 = 0x20
0xb8: V42 = ADD 0x20 0x84
0xbd: V43 = CALLDATALOAD 0xa4
0xbf: V44 = 0x20
0xc1: V45 = ADD 0x20 0xa4
0xc6: V46 = CALLDATALOAD 0xc4
0xc7: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xde: V49 = 0x20
0xe0: V50 = ADD 0x20 0xc4
0xe5: V51 = CALLDATALOAD 0xe4
0xe6: V52 = 0xff
0xe8: V53 = AND 0xff V51
0xea: V54 = 0x20
0xec: V55 = ADD 0x20 0xe4
0xf1: V56 = CALLDATALOAD 0x104
0xf2: V57 = 0x0
0xf4: V58 = NOT 0x0
0xf5: V59 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V56
0xf7: V60 = 0x20
0xf9: V61 = ADD 0x20 0x104
0xfe: V62 = CALLDATALOAD 0x124
0xff: V63 = 0x0
0x101: V64 = NOT 0x0
0x102: V65 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V62
0x104: V66 = 0x20
0x106: V67 = ADD 0x20 0x124
0x10b: V68 = CALLDATALOAD 0x144
0x10d: V69 = 0x20
0x10f: V70 = ADD 0x20 0x144
0x114: V71 = CALLDATALOAD 0x164
0x115: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x12c: V74 = 0x20
0x12e: V75 = ADD 0x20 0x164
0x134: V76 = 0x1c8
0x137: JUMP 0x1c8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73]

================================

Block 0x138
[0x138:0x139]
---
Predecessors: [0x7f7]
Successors: []
---
0x138 JUMPDEST
0x139 STOP
---
0x138: JUMPDEST 
0x139: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13a
[0x13a:0x140]
---
Predecessors: [0x41]
Successors: [0x141, 0x145]
---
0x13a JUMPDEST
0x13b CALLVALUE
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x13a: JUMPDEST 
0x13b: V77 = CALLVALUE
0x13c: V78 = ISZERO V77
0x13d: V79 = 0x145
0x140: JUMPI 0x145 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x13a]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V80 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x145
[0x145:0x14c]
---
Predecessors: [0x13a]
Successors: [0x807]
---
0x145 JUMPDEST
0x146 PUSH2 0x14d
0x149 PUSH2 0x807
0x14c JUMP
---
0x145: JUMPDEST 
0x146: V81 = 0x14d
0x149: V82 = 0x807
0x14c: JUMP 0x807
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14d]
Exit stack: [V11, 0x14d]

================================

Block 0x14d
[0x14d:0x18e]
---
Predecessors: [0x807]
Successors: []
---
0x14d JUMPDEST
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 DUP3
0x153 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x168 AND
0x169 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17e AND
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x20
0x183 ADD
0x184 SWAP2
0x185 POP
0x186 POP
0x187 PUSH1 0x40
0x189 MLOAD
0x18a DUP1
0x18b SWAP2
0x18c SUB
0x18d SWAP1
0x18e RETURN
---
0x14d: JUMPDEST 
0x14e: V83 = 0x40
0x150: V84 = M[0x40]
0x153: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x168: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x169: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x180: M[V84] = V88
0x181: V89 = 0x20
0x183: V90 = ADD 0x20 V84
0x187: V91 = 0x40
0x189: V92 = M[0x40]
0x18c: V93 = SUB V90 V92
0x18e: RETURN V92 V93
---
Entry stack: [V11, 0x14d, V438]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14d]

================================

Block 0x18f
[0x18f:0x195]
---
Predecessors: [0x4c]
Successors: [0x196, 0x19a]
---
0x18f JUMPDEST
0x190 CALLVALUE
0x191 ISZERO
0x192 PUSH2 0x19a
0x195 JUMPI
---
0x18f: JUMPDEST 
0x190: V94 = CALLVALUE
0x191: V95 = ISZERO V94
0x192: V96 = 0x19a
0x195: JUMPI 0x19a V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x196
[0x196:0x199]
---
Predecessors: [0x18f]
Successors: []
---
0x196 PUSH1 0x0
0x198 DUP1
0x199 REVERT
---
0x196: V97 = 0x0
0x199: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19a
[0x19a:0x1c5]
---
Predecessors: [0x18f]
Successors: [0x82c]
---
0x19a JUMPDEST
0x19b PUSH2 0x1c6
0x19e PUSH1 0x4
0x1a0 DUP1
0x1a1 DUP1
0x1a2 CALLDATALOAD
0x1a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b8 AND
0x1b9 SWAP1
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd SWAP1
0x1be SWAP2
0x1bf SWAP1
0x1c0 POP
0x1c1 POP
0x1c2 PUSH2 0x82c
0x1c5 JUMP
---
0x19a: JUMPDEST 
0x19b: V98 = 0x1c6
0x19e: V99 = 0x4
0x1a2: V100 = CALLDATALOAD 0x4
0x1a3: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1ba: V103 = 0x20
0x1bc: V104 = ADD 0x20 0x4
0x1c2: V105 = 0x82c
0x1c5: JUMP 0x82c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c6, V102]
Exit stack: [V11, 0x1c6, V102]

================================

Block 0x1c6
[0x1c6:0x1c7]
---
Predecessors: [0x8c3]
Successors: []
---
0x1c6 JUMPDEST
0x1c7 STOP
---
0x1c6: JUMPDEST 
0x1c7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c8
[0x1c8:0x200]
---
Predecessors: [0x5c]
Successors: [0x201, 0x279]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc PUSH1 0x0
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 DUP15
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb EQ
0x1fc ISZERO
0x1fd PUSH2 0x279
0x200 JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V106 = 0x0
0x1cc: V107 = 0x0
0x1ce: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1e5: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x1fb: V112 = EQ V111 0x0
0x1fc: V113 = ISZERO V112
0x1fd: V114 = 0x279
0x200: JUMPI 0x279 V113
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0]

================================

Block 0x201
[0x201:0x25e]
---
Predecessors: [0x1c8]
Successors: [0x25f, 0x263]
---
0x201 DUP3
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 PUSH4 0xd0e30db0
0x21d DUP6
0x21e PUSH1 0x40
0x220 MLOAD
0x221 DUP3
0x222 PUSH4 0xffffffff
0x227 AND
0x228 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x246 MUL
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x4
0x24b ADD
0x24c PUSH1 0x0
0x24e PUSH1 0x40
0x250 MLOAD
0x251 DUP1
0x252 DUP4
0x253 SUB
0x254 DUP2
0x255 DUP6
0x256 DUP9
0x257 DUP1
0x258 EXTCODESIZE
0x259 ISZERO
0x25a ISZERO
0x25b PUSH2 0x263
0x25e JUMPI
---
0x202: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x218: V117 = 0xd0e30db0
0x21e: V118 = 0x40
0x220: V119 = M[0x40]
0x222: V120 = 0xffffffff
0x227: V121 = AND 0xffffffff 0xd0e30db0
0x228: V122 = 0x100000000000000000000000000000000000000000000000000000000
0x246: V123 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x248: M[V119] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x249: V124 = 0x4
0x24b: V125 = ADD 0x4 V119
0x24c: V126 = 0x0
0x24e: V127 = 0x40
0x250: V128 = M[0x40]
0x253: V129 = SUB V125 V128
0x258: V130 = EXTCODESIZE V116
0x259: V131 = ISZERO V130
0x25a: V132 = ISZERO V131
0x25b: V133 = 0x263
0x25e: JUMPI 0x263 V132
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V116, 0xd0e30db0, S3, V125, 0x0, V128, V129, V128, S3, V116]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V116, 0xd0e30db0, V68, V125, 0x0, V128, V129, V128, V68, V116]

================================

Block 0x25f
[0x25f:0x262]
---
Predecessors: [0x201]
Successors: []
---
0x25f PUSH1 0x0
0x261 DUP1
0x262 REVERT
---
0x25f: V134 = 0x0
0x262: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V116, 0xd0e30db0, V68, V125, 0x0, V128, V129, V128, V68, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V116, 0xd0e30db0, V68, V125, 0x0, V128, V129, V128, V68, V116]

================================

Block 0x263
[0x263:0x26b]
---
Predecessors: [0x201]
Successors: [0x26c, 0x270]
---
0x263 JUMPDEST
0x264 GAS
0x265 CALL
0x266 ISZERO
0x267 ISZERO
0x268 PUSH2 0x270
0x26b JUMPI
---
0x263: JUMPDEST 
0x264: V135 = GAS
0x265: V136 = CALL V135 V116 V68 V128 V129 V128 0x0
0x266: V137 = ISZERO V136
0x267: V138 = ISZERO V137
0x268: V139 = 0x270
0x26b: JUMPI 0x270 V138
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V116, 0xd0e30db0, V68, V125, 0x0, V128, V129, V128, V68, V116]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V116, 0xd0e30db0, V68, V125]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0x263]
Successors: []
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f REVERT
---
0x26c: V140 = 0x0
0x26f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V116, 0xd0e30db0, V68, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V116, 0xd0e30db0, V68, V125]

================================

Block 0x270
[0x270:0x278]
---
Predecessors: [0x263]
Successors: [0x32c]
---
0x270 JUMPDEST
0x271 POP
0x272 POP
0x273 POP
0x274 POP
0x275 PUSH2 0x32c
0x278 JUMP
---
0x270: JUMPDEST 
0x275: V141 = 0x32c
0x278: JUMP 0x32c
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V116, 0xd0e30db0, V68, V125]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0]

================================

Block 0x279
[0x279:0x316]
---
Predecessors: [0x1c8]
Successors: [0x317, 0x31b]
---
0x279 JUMPDEST
0x27a DUP3
0x27b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x290 AND
0x291 PUSH4 0x338b5dea
0x296 DUP16
0x297 DUP7
0x298 PUSH1 0x40
0x29a MLOAD
0x29b DUP4
0x29c PUSH4 0xffffffff
0x2a1 AND
0x2a2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c0 MUL
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x4
0x2c5 ADD
0x2c6 DUP1
0x2c7 DUP4
0x2c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dd AND
0x2de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f3 AND
0x2f4 DUP2
0x2f5 MSTORE
0x2f6 PUSH1 0x20
0x2f8 ADD
0x2f9 DUP3
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff SWAP3
0x300 POP
0x301 POP
0x302 POP
0x303 PUSH1 0x0
0x305 PUSH1 0x40
0x307 MLOAD
0x308 DUP1
0x309 DUP4
0x30a SUB
0x30b DUP2
0x30c PUSH1 0x0
0x30e DUP8
0x30f DUP1
0x310 EXTCODESIZE
0x311 ISZERO
0x312 ISZERO
0x313 PUSH2 0x31b
0x316 JUMPI
---
0x279: JUMPDEST 
0x27b: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x290: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x291: V144 = 0x338b5dea
0x298: V145 = 0x40
0x29a: V146 = M[0x40]
0x29c: V147 = 0xffffffff
0x2a1: V148 = AND 0xffffffff 0x338b5dea
0x2a2: V149 = 0x100000000000000000000000000000000000000000000000000000000
0x2c0: V150 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x338b5dea
0x2c2: M[V146] = 0x338b5dea00000000000000000000000000000000000000000000000000000000
0x2c3: V151 = 0x4
0x2c5: V152 = ADD 0x4 V146
0x2c8: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x2de: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x2f5: M[V152] = V156
0x2f6: V157 = 0x20
0x2f8: V158 = ADD 0x20 V152
0x2fb: M[V158] = V68
0x2fc: V159 = 0x20
0x2fe: V160 = ADD 0x20 V158
0x303: V161 = 0x0
0x305: V162 = 0x40
0x307: V163 = M[0x40]
0x30a: V164 = SUB V160 V163
0x30c: V165 = 0x0
0x310: V166 = EXTCODESIZE V143
0x311: V167 = ISZERO V166
0x312: V168 = ISZERO V167
0x313: V169 = 0x31b
0x316: JUMPI 0x31b V168
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V143, 0x338b5dea, V160, 0x0, V163, V164, V163, 0x0, V143]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V143, 0x338b5dea, V160, 0x0, V163, V164, V163, 0x0, V143]

================================

Block 0x317
[0x317:0x31a]
---
Predecessors: [0x279]
Successors: []
---
0x317 PUSH1 0x0
0x319 DUP1
0x31a REVERT
---
0x317: V170 = 0x0
0x31a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V143, 0x338b5dea, V160, 0x0, V163, V164, V163, 0x0, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V143, 0x338b5dea, V160, 0x0, V163, V164, V163, 0x0, V143]

================================

Block 0x31b
[0x31b:0x323]
---
Predecessors: [0x279]
Successors: [0x324, 0x328]
---
0x31b JUMPDEST
0x31c GAS
0x31d CALL
0x31e ISZERO
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x31b: JUMPDEST 
0x31c: V171 = GAS
0x31d: V172 = CALL V171 V143 0x0 V163 V164 V163 0x0
0x31e: V173 = ISZERO V172
0x31f: V174 = ISZERO V173
0x320: V175 = 0x328
0x323: JUMPI 0x328 V174
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V143, 0x338b5dea, V160, 0x0, V163, V164, V163, 0x0, V143]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V143, 0x338b5dea, V160]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x31b]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V176 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V143, 0x338b5dea, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V143, 0x338b5dea, V160]

================================

Block 0x328
[0x328:0x32b]
---
Predecessors: [0x31b]
Successors: [0x32c]
---
0x328 JUMPDEST
0x329 POP
0x32a POP
0x32b POP
---
0x328: JUMPDEST 
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V143, 0x338b5dea, V160]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0]

================================

Block 0x32c
[0x32c:0x47f]
---
Predecessors: [0x270, 0x328]
Successors: [0x480, 0x484]
---
0x32c JUMPDEST
0x32d DUP3
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 AND
0x344 PUSH4 0xa19b14a
0x349 DUP16
0x34a DUP16
0x34b DUP16
0x34c DUP16
0x34d DUP16
0x34e DUP16
0x34f DUP16
0x350 DUP16
0x351 DUP16
0x352 DUP16
0x353 DUP16
0x354 PUSH1 0x40
0x356 MLOAD
0x357 DUP13
0x358 PUSH4 0xffffffff
0x35d AND
0x35e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x37c MUL
0x37d DUP2
0x37e MSTORE
0x37f PUSH1 0x4
0x381 ADD
0x382 DUP1
0x383 DUP13
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3af AND
0x3b0 DUP2
0x3b1 MSTORE
0x3b2 PUSH1 0x20
0x3b4 ADD
0x3b5 DUP12
0x3b6 DUP2
0x3b7 MSTORE
0x3b8 PUSH1 0x20
0x3ba ADD
0x3bb DUP11
0x3bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d1 AND
0x3d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e7 AND
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed DUP10
0x3ee DUP2
0x3ef MSTORE
0x3f0 PUSH1 0x20
0x3f2 ADD
0x3f3 DUP9
0x3f4 DUP2
0x3f5 MSTORE
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 DUP8
0x3fa DUP2
0x3fb MSTORE
0x3fc PUSH1 0x20
0x3fe ADD
0x3ff DUP7
0x400 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x415 AND
0x416 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42b AND
0x42c DUP2
0x42d MSTORE
0x42e PUSH1 0x20
0x430 ADD
0x431 DUP6
0x432 PUSH1 0xff
0x434 AND
0x435 PUSH1 0xff
0x437 AND
0x438 DUP2
0x439 MSTORE
0x43a PUSH1 0x20
0x43c ADD
0x43d DUP5
0x43e PUSH1 0x0
0x440 NOT
0x441 AND
0x442 PUSH1 0x0
0x444 NOT
0x445 AND
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0x20
0x44a ADD
0x44b DUP4
0x44c PUSH1 0x0
0x44e NOT
0x44f AND
0x450 PUSH1 0x0
0x452 NOT
0x453 AND
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 DUP3
0x45a DUP2
0x45b MSTORE
0x45c PUSH1 0x20
0x45e ADD
0x45f SWAP12
0x460 POP
0x461 POP
0x462 POP
0x463 POP
0x464 POP
0x465 POP
0x466 POP
0x467 POP
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c PUSH1 0x0
0x46e PUSH1 0x40
0x470 MLOAD
0x471 DUP1
0x472 DUP4
0x473 SUB
0x474 DUP2
0x475 PUSH1 0x0
0x477 DUP8
0x478 DUP1
0x479 EXTCODESIZE
0x47a ISZERO
0x47b ISZERO
0x47c PUSH2 0x484
0x47f JUMPI
---
0x32c: JUMPDEST 
0x32e: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x344: V179 = 0xa19b14a
0x354: V180 = 0x40
0x356: V181 = M[0x40]
0x358: V182 = 0xffffffff
0x35d: V183 = AND 0xffffffff 0xa19b14a
0x35e: V184 = 0x100000000000000000000000000000000000000000000000000000000
0x37c: V185 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa19b14a
0x37e: M[V181] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x37f: V186 = 0x4
0x381: V187 = ADD 0x4 V181
0x384: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x39a: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x3af: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x3b1: M[V187] = V191
0x3b2: V192 = 0x20
0x3b4: V193 = ADD 0x20 V187
0x3b7: M[V193] = V29
0x3b8: V194 = 0x20
0x3ba: V195 = ADD 0x20 V193
0x3bc: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x3d2: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e7: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x3e9: M[V195] = V199
0x3ea: V200 = 0x20
0x3ec: V201 = ADD 0x20 V195
0x3ef: M[V201] = V37
0x3f0: V202 = 0x20
0x3f2: V203 = ADD 0x20 V201
0x3f5: M[V203] = V40
0x3f6: V204 = 0x20
0x3f8: V205 = ADD 0x20 V203
0x3fb: M[V205] = V43
0x3fc: V206 = 0x20
0x3fe: V207 = ADD 0x20 V205
0x400: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x415: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x416: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x42b: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x42d: M[V207] = V211
0x42e: V212 = 0x20
0x430: V213 = ADD 0x20 V207
0x432: V214 = 0xff
0x434: V215 = AND 0xff V53
0x435: V216 = 0xff
0x437: V217 = AND 0xff V215
0x439: M[V213] = V217
0x43a: V218 = 0x20
0x43c: V219 = ADD 0x20 V213
0x43e: V220 = 0x0
0x440: V221 = NOT 0x0
0x441: V222 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V59
0x442: V223 = 0x0
0x444: V224 = NOT 0x0
0x445: V225 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V222
0x447: M[V219] = V225
0x448: V226 = 0x20
0x44a: V227 = ADD 0x20 V219
0x44c: V228 = 0x0
0x44e: V229 = NOT 0x0
0x44f: V230 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V65
0x450: V231 = 0x0
0x452: V232 = NOT 0x0
0x453: V233 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V230
0x455: M[V227] = V233
0x456: V234 = 0x20
0x458: V235 = ADD 0x20 V227
0x45b: M[V235] = V68
0x45c: V236 = 0x20
0x45e: V237 = ADD 0x20 V235
0x46c: V238 = 0x0
0x46e: V239 = 0x40
0x470: V240 = M[0x40]
0x473: V241 = SUB V237 V240
0x475: V242 = 0x0
0x479: V243 = EXTCODESIZE V178
0x47a: V244 = ISZERO V243
0x47b: V245 = ISZERO V244
0x47c: V246 = 0x484
0x47f: JUMPI 0x484 V245
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V178, 0xa19b14a, V237, 0x0, V240, V241, V240, 0x0, V178]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V178, 0xa19b14a, V237, 0x0, V240, V241, V240, 0x0, V178]

================================

Block 0x480
[0x480:0x483]
---
Predecessors: [0x32c]
Successors: []
---
0x480 PUSH1 0x0
0x482 DUP1
0x483 REVERT
---
0x480: V247 = 0x0
0x483: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V178, 0xa19b14a, V237, 0x0, V240, V241, V240, 0x0, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V178, 0xa19b14a, V237, 0x0, V240, V241, V240, 0x0, V178]

================================

Block 0x484
[0x484:0x48c]
---
Predecessors: [0x32c]
Successors: [0x48d, 0x491]
---
0x484 JUMPDEST
0x485 GAS
0x486 CALL
0x487 ISZERO
0x488 ISZERO
0x489 PUSH2 0x491
0x48c JUMPI
---
0x484: JUMPDEST 
0x485: V248 = GAS
0x486: V249 = CALL V248 V178 0x0 V240 V241 V240 0x0
0x487: V250 = ISZERO V249
0x488: V251 = ISZERO V250
0x489: V252 = 0x491
0x48c: JUMPI 0x491 V251
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V178, 0xa19b14a, V237, 0x0, V240, V241, V240, 0x0, V178]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V178, 0xa19b14a, V237]

================================

Block 0x48d
[0x48d:0x490]
---
Predecessors: [0x484]
Successors: []
---
0x48d PUSH1 0x0
0x48f DUP1
0x490 REVERT
---
0x48d: V253 = 0x0
0x490: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V178, 0xa19b14a, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V178, 0xa19b14a, V237]

================================

Block 0x491
[0x491:0x55d]
---
Predecessors: [0x484]
Successors: [0x55e, 0x562]
---
0x491 JUMPDEST
0x492 POP
0x493 POP
0x494 POP
0x495 DUP3
0x496 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ab AND
0x4ac PUSH4 0xf7888aec
0x4b1 DUP14
0x4b2 ADDRESS
0x4b3 PUSH1 0x40
0x4b5 MLOAD
0x4b6 DUP4
0x4b7 PUSH4 0xffffffff
0x4bc AND
0x4bd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4db MUL
0x4dc DUP2
0x4dd MSTORE
0x4de PUSH1 0x4
0x4e0 ADD
0x4e1 DUP1
0x4e2 DUP4
0x4e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f8 AND
0x4f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50e AND
0x50f DUP2
0x510 MSTORE
0x511 PUSH1 0x20
0x513 ADD
0x514 DUP3
0x515 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52a AND
0x52b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x540 AND
0x541 DUP2
0x542 MSTORE
0x543 PUSH1 0x20
0x545 ADD
0x546 SWAP3
0x547 POP
0x548 POP
0x549 POP
0x54a PUSH1 0x20
0x54c PUSH1 0x40
0x54e MLOAD
0x54f DUP1
0x550 DUP4
0x551 SUB
0x552 DUP2
0x553 PUSH1 0x0
0x555 DUP8
0x556 DUP1
0x557 EXTCODESIZE
0x558 ISZERO
0x559 ISZERO
0x55a PUSH2 0x562
0x55d JUMPI
---
0x491: JUMPDEST 
0x496: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ab: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x4ac: V256 = 0xf7888aec
0x4b2: V257 = ADDRESS
0x4b3: V258 = 0x40
0x4b5: V259 = M[0x40]
0x4b7: V260 = 0xffffffff
0x4bc: V261 = AND 0xffffffff 0xf7888aec
0x4bd: V262 = 0x100000000000000000000000000000000000000000000000000000000
0x4db: V263 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf7888aec
0x4dd: M[V259] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x4de: V264 = 0x4
0x4e0: V265 = ADD 0x4 V259
0x4e3: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f8: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x4f9: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x50e: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x510: M[V265] = V269
0x511: V270 = 0x20
0x513: V271 = ADD 0x20 V265
0x515: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x52a: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x52b: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x540: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x542: M[V271] = V275
0x543: V276 = 0x20
0x545: V277 = ADD 0x20 V271
0x54a: V278 = 0x20
0x54c: V279 = 0x40
0x54e: V280 = M[0x40]
0x551: V281 = SUB V277 V280
0x553: V282 = 0x0
0x557: V283 = EXTCODESIZE V255
0x558: V284 = ISZERO V283
0x559: V285 = ISZERO V284
0x55a: V286 = 0x562
0x55d: JUMPI 0x562 V285
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V178, 0xa19b14a, V237]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V255, 0xf7888aec, V277, 0x20, V280, V281, V280, 0x0, V255]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V255, 0xf7888aec, V277, 0x20, V280, V281, V280, 0x0, V255]

================================

Block 0x55e
[0x55e:0x561]
---
Predecessors: [0x491]
Successors: []
---
0x55e PUSH1 0x0
0x560 DUP1
0x561 REVERT
---
0x55e: V287 = 0x0
0x561: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V255, 0xf7888aec, V277, 0x20, V280, V281, V280, 0x0, V255]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V255, 0xf7888aec, V277, 0x20, V280, V281, V280, 0x0, V255]

================================

Block 0x562
[0x562:0x56a]
---
Predecessors: [0x491]
Successors: [0x56b, 0x56f]
---
0x562 JUMPDEST
0x563 GAS
0x564 CALL
0x565 ISZERO
0x566 ISZERO
0x567 PUSH2 0x56f
0x56a JUMPI
---
0x562: JUMPDEST 
0x563: V288 = GAS
0x564: V289 = CALL V288 V255 0x0 V280 V281 V280 0x20
0x565: V290 = ISZERO V289
0x566: V291 = ISZERO V290
0x567: V292 = 0x56f
0x56a: JUMPI 0x56f V291
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V255, 0xf7888aec, V277, 0x20, V280, V281, V280, 0x0, V255]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V255, 0xf7888aec, V277]

================================

Block 0x56b
[0x56b:0x56e]
---
Predecessors: [0x562]
Successors: []
---
0x56b PUSH1 0x0
0x56d DUP1
0x56e REVERT
---
0x56b: V293 = 0x0
0x56e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V255, 0xf7888aec, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V255, 0xf7888aec, V277]

================================

Block 0x56f
[0x56f:0x585]
---
Predecessors: [0x562]
Successors: [0x906]
---
0x56f JUMPDEST
0x570 POP
0x571 POP
0x572 POP
0x573 PUSH1 0x40
0x575 MLOAD
0x576 DUP1
0x577 MLOAD
0x578 SWAP1
0x579 POP
0x57a SWAP2
0x57b POP
0x57c DUP13
0x57d PUSH2 0x586
0x580 DUP13
0x581 DUP7
0x582 PUSH2 0x906
0x585 JUMP
---
0x56f: JUMPDEST 
0x573: V294 = 0x40
0x575: V295 = M[0x40]
0x577: V296 = M[V295]
0x57d: V297 = 0x586
0x582: V298 = 0x906
0x585: JUMP 0x906
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, 0x0, 0x0, V255, 0xf7888aec, V277]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V296, S3, S15, 0x586, S13, S6]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68]

================================

Block 0x586
[0x586:0x58d]
---
Predecessors: [0x92f]
Successors: [0x58e, 0x58f]
---
0x586 JUMPDEST
0x587 DUP2
0x588 ISZERO
0x589 ISZERO
0x58a PUSH2 0x58f
0x58d JUMPI
---
0x586: JUMPDEST 
0x588: V299 = ISZERO V29
0x589: V300 = ISZERO V299
0x58a: V301 = 0x58f
0x58d: JUMPI 0x58f V300
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, V480]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, V480]

================================

Block 0x58e
[0x58e:0x58e]
---
Predecessors: [0x586]
Successors: []
---
0x58e INVALID
---
0x58e: INVALID 
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, V480]

================================

Block 0x58f
[0x58f:0x5c7]
---
Predecessors: [0x586]
Successors: [0x5c8, 0x68a]
---
0x58f JUMPDEST
0x590 DIV
0x591 SWAP1
0x592 POP
0x593 PUSH1 0x0
0x595 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5aa AND
0x5ab DUP13
0x5ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c1 AND
0x5c2 EQ
0x5c3 ISZERO
0x5c4 PUSH2 0x68a
0x5c7 JUMPI
---
0x58f: JUMPDEST 
0x590: V302 = DIV V480 V29
0x593: V303 = 0x0
0x595: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x5aa: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x5ac: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c1: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x5c2: V308 = EQ V307 0x0
0x5c3: V309 = ISZERO V308
0x5c4: V310 = 0x68a
0x5c7: JUMPI 0x68a V309
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, V480]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V302]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]

================================

Block 0x5c8
[0x5c8:0x630]
---
Predecessors: [0x58f]
Successors: [0x631, 0x635]
---
0x5c8 DUP3
0x5c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5de AND
0x5df PUSH4 0x2e1a7d4d
0x5e4 DUP4
0x5e5 PUSH1 0x40
0x5e7 MLOAD
0x5e8 DUP3
0x5e9 PUSH4 0xffffffff
0x5ee AND
0x5ef PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x60d MUL
0x60e DUP2
0x60f MSTORE
0x610 PUSH1 0x4
0x612 ADD
0x613 DUP1
0x614 DUP3
0x615 DUP2
0x616 MSTORE
0x617 PUSH1 0x20
0x619 ADD
0x61a SWAP2
0x61b POP
0x61c POP
0x61d PUSH1 0x0
0x61f PUSH1 0x40
0x621 MLOAD
0x622 DUP1
0x623 DUP4
0x624 SUB
0x625 DUP2
0x626 PUSH1 0x0
0x628 DUP8
0x629 DUP1
0x62a EXTCODESIZE
0x62b ISZERO
0x62c ISZERO
0x62d PUSH2 0x635
0x630 JUMPI
---
0x5c9: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x5de: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x5df: V313 = 0x2e1a7d4d
0x5e5: V314 = 0x40
0x5e7: V315 = M[0x40]
0x5e9: V316 = 0xffffffff
0x5ee: V317 = AND 0xffffffff 0x2e1a7d4d
0x5ef: V318 = 0x100000000000000000000000000000000000000000000000000000000
0x60d: V319 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0x60f: M[V315] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x610: V320 = 0x4
0x612: V321 = ADD 0x4 V315
0x616: M[V321] = V296
0x617: V322 = 0x20
0x619: V323 = ADD 0x20 V321
0x61d: V324 = 0x0
0x61f: V325 = 0x40
0x621: V326 = M[0x40]
0x624: V327 = SUB V323 V326
0x626: V328 = 0x0
0x62a: V329 = EXTCODESIZE V312
0x62b: V330 = ISZERO V329
0x62c: V331 = ISZERO V330
0x62d: V332 = 0x635
0x630: JUMPI 0x635 V331
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]
Stack pops: 3
Stack additions: [S2, S1, S0, V312, 0x2e1a7d4d, V323, 0x0, V326, V327, V326, 0x0, V312]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V312, 0x2e1a7d4d, V323, 0x0, V326, V327, V326, 0x0, V312]

================================

Block 0x631
[0x631:0x634]
---
Predecessors: [0x5c8]
Successors: []
---
0x631 PUSH1 0x0
0x633 DUP1
0x634 REVERT
---
0x631: V333 = 0x0
0x634: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V312, 0x2e1a7d4d, V323, 0x0, V326, V327, V326, 0x0, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V312, 0x2e1a7d4d, V323, 0x0, V326, V327, V326, 0x0, V312]

================================

Block 0x635
[0x635:0x63d]
---
Predecessors: [0x5c8]
Successors: [0x63e, 0x642]
---
0x635 JUMPDEST
0x636 GAS
0x637 CALL
0x638 ISZERO
0x639 ISZERO
0x63a PUSH2 0x642
0x63d JUMPI
---
0x635: JUMPDEST 
0x636: V334 = GAS
0x637: V335 = CALL V334 V312 0x0 V326 V327 V326 0x0
0x638: V336 = ISZERO V335
0x639: V337 = ISZERO V336
0x63a: V338 = 0x642
0x63d: JUMPI 0x642 V337
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V312, 0x2e1a7d4d, V323, 0x0, V326, V327, V326, 0x0, V312]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V312, 0x2e1a7d4d, V323]

================================

Block 0x63e
[0x63e:0x641]
---
Predecessors: [0x635]
Successors: []
---
0x63e PUSH1 0x0
0x640 DUP1
0x641 REVERT
---
0x63e: V339 = 0x0
0x641: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V312, 0x2e1a7d4d, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V312, 0x2e1a7d4d, V323]

================================

Block 0x642
[0x642:0x680]
---
Predecessors: [0x635]
Successors: [0x681, 0x685]
---
0x642 JUMPDEST
0x643 POP
0x644 POP
0x645 POP
0x646 CALLER
0x647 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65c AND
0x65d PUSH2 0x8fc
0x660 DUP3
0x661 SWAP1
0x662 DUP2
0x663 ISZERO
0x664 MUL
0x665 SWAP1
0x666 PUSH1 0x40
0x668 MLOAD
0x669 PUSH1 0x0
0x66b PUSH1 0x40
0x66d MLOAD
0x66e DUP1
0x66f DUP4
0x670 SUB
0x671 DUP2
0x672 DUP6
0x673 DUP9
0x674 DUP9
0x675 CALL
0x676 SWAP4
0x677 POP
0x678 POP
0x679 POP
0x67a POP
0x67b ISZERO
0x67c ISZERO
0x67d PUSH2 0x685
0x680 JUMPI
---
0x642: JUMPDEST 
0x646: V340 = CALLER
0x647: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x65d: V343 = 0x8fc
0x663: V344 = ISZERO V302
0x664: V345 = MUL V344 0x8fc
0x666: V346 = 0x40
0x668: V347 = M[0x40]
0x669: V348 = 0x0
0x66b: V349 = 0x40
0x66d: V350 = M[0x40]
0x670: V351 = SUB V347 V350
0x675: V352 = CALL V345 V342 V302 V350 V351 V350 0x0
0x67b: V353 = ISZERO V352
0x67c: V354 = ISZERO V353
0x67d: V355 = 0x685
0x680: JUMPI 0x685 V354
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V312, 0x2e1a7d4d, V323]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]

================================

Block 0x681
[0x681:0x684]
---
Predecessors: [0x642]
Successors: []
---
0x681 PUSH1 0x0
0x683 DUP1
0x684 REVERT
---
0x681: V356 = 0x0
0x684: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]

================================

Block 0x685
[0x685:0x689]
---
Predecessors: [0x642]
Successors: [0x7f7]
---
0x685 JUMPDEST
0x686 PUSH2 0x7f7
0x689 JUMP
---
0x685: JUMPDEST 
0x686: V357 = 0x7f7
0x689: JUMP 0x7f7
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]

================================

Block 0x68a
[0x68a:0x727]
---
Predecessors: [0x58f]
Successors: [0x728, 0x72c]
---
0x68a JUMPDEST
0x68b DUP3
0x68c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a1 AND
0x6a2 PUSH4 0x9e281a98
0x6a7 DUP14
0x6a8 DUP5
0x6a9 PUSH1 0x40
0x6ab MLOAD
0x6ac DUP4
0x6ad PUSH4 0xffffffff
0x6b2 AND
0x6b3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6d1 MUL
0x6d2 DUP2
0x6d3 MSTORE
0x6d4 PUSH1 0x4
0x6d6 ADD
0x6d7 DUP1
0x6d8 DUP4
0x6d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ee AND
0x6ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x704 AND
0x705 DUP2
0x706 MSTORE
0x707 PUSH1 0x20
0x709 ADD
0x70a DUP3
0x70b DUP2
0x70c MSTORE
0x70d PUSH1 0x20
0x70f ADD
0x710 SWAP3
0x711 POP
0x712 POP
0x713 POP
0x714 PUSH1 0x0
0x716 PUSH1 0x40
0x718 MLOAD
0x719 DUP1
0x71a DUP4
0x71b SUB
0x71c DUP2
0x71d PUSH1 0x0
0x71f DUP8
0x720 DUP1
0x721 EXTCODESIZE
0x722 ISZERO
0x723 ISZERO
0x724 PUSH2 0x72c
0x727 JUMPI
---
0x68a: JUMPDEST 
0x68c: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a1: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x6a2: V360 = 0x9e281a98
0x6a9: V361 = 0x40
0x6ab: V362 = M[0x40]
0x6ad: V363 = 0xffffffff
0x6b2: V364 = AND 0xffffffff 0x9e281a98
0x6b3: V365 = 0x100000000000000000000000000000000000000000000000000000000
0x6d1: V366 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x9e281a98
0x6d3: M[V362] = 0x9e281a9800000000000000000000000000000000000000000000000000000000
0x6d4: V367 = 0x4
0x6d6: V368 = ADD 0x4 V362
0x6d9: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ee: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x6ef: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x704: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x706: M[V368] = V372
0x707: V373 = 0x20
0x709: V374 = ADD 0x20 V368
0x70c: M[V374] = V296
0x70d: V375 = 0x20
0x70f: V376 = ADD 0x20 V374
0x714: V377 = 0x0
0x716: V378 = 0x40
0x718: V379 = M[0x40]
0x71b: V380 = SUB V376 V379
0x71d: V381 = 0x0
0x721: V382 = EXTCODESIZE V359
0x722: V383 = ISZERO V382
0x723: V384 = ISZERO V383
0x724: V385 = 0x72c
0x727: JUMPI 0x72c V384
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V359, 0x9e281a98, V376, 0x0, V379, V380, V379, 0x0, V359]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V359, 0x9e281a98, V376, 0x0, V379, V380, V379, 0x0, V359]

================================

Block 0x728
[0x728:0x72b]
---
Predecessors: [0x68a]
Successors: []
---
0x728 PUSH1 0x0
0x72a DUP1
0x72b REVERT
---
0x728: V386 = 0x0
0x72b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V359, 0x9e281a98, V376, 0x0, V379, V380, V379, 0x0, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V359, 0x9e281a98, V376, 0x0, V379, V380, V379, 0x0, V359]

================================

Block 0x72c
[0x72c:0x734]
---
Predecessors: [0x68a]
Successors: [0x735, 0x739]
---
0x72c JUMPDEST
0x72d GAS
0x72e CALL
0x72f ISZERO
0x730 ISZERO
0x731 PUSH2 0x739
0x734 JUMPI
---
0x72c: JUMPDEST 
0x72d: V387 = GAS
0x72e: V388 = CALL V387 V359 0x0 V379 V380 V379 0x0
0x72f: V389 = ISZERO V388
0x730: V390 = ISZERO V389
0x731: V391 = 0x739
0x734: JUMPI 0x739 V390
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V359, 0x9e281a98, V376, 0x0, V379, V380, V379, 0x0, V359]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V359, 0x9e281a98, V376]

================================

Block 0x735
[0x735:0x738]
---
Predecessors: [0x72c]
Successors: []
---
0x735 PUSH1 0x0
0x737 DUP1
0x738 REVERT
---
0x735: V392 = 0x0
0x738: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V359, 0x9e281a98, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V359, 0x9e281a98, V376]

================================

Block 0x739
[0x739:0x7d9]
---
Predecessors: [0x72c]
Successors: [0x7da, 0x7de]
---
0x739 JUMPDEST
0x73a POP
0x73b POP
0x73c POP
0x73d DUP12
0x73e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x753 AND
0x754 PUSH4 0xa9059cbb
0x759 CALLER
0x75a DUP4
0x75b PUSH1 0x40
0x75d MLOAD
0x75e DUP4
0x75f PUSH4 0xffffffff
0x764 AND
0x765 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x783 MUL
0x784 DUP2
0x785 MSTORE
0x786 PUSH1 0x4
0x788 ADD
0x789 DUP1
0x78a DUP4
0x78b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a0 AND
0x7a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b6 AND
0x7b7 DUP2
0x7b8 MSTORE
0x7b9 PUSH1 0x20
0x7bb ADD
0x7bc DUP3
0x7bd DUP2
0x7be MSTORE
0x7bf PUSH1 0x20
0x7c1 ADD
0x7c2 SWAP3
0x7c3 POP
0x7c4 POP
0x7c5 POP
0x7c6 PUSH1 0x20
0x7c8 PUSH1 0x40
0x7ca MLOAD
0x7cb DUP1
0x7cc DUP4
0x7cd SUB
0x7ce DUP2
0x7cf PUSH1 0x0
0x7d1 DUP8
0x7d2 DUP1
0x7d3 EXTCODESIZE
0x7d4 ISZERO
0x7d5 ISZERO
0x7d6 PUSH2 0x7de
0x7d9 JUMPI
---
0x739: JUMPDEST 
0x73e: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x753: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x754: V395 = 0xa9059cbb
0x759: V396 = CALLER
0x75b: V397 = 0x40
0x75d: V398 = M[0x40]
0x75f: V399 = 0xffffffff
0x764: V400 = AND 0xffffffff 0xa9059cbb
0x765: V401 = 0x100000000000000000000000000000000000000000000000000000000
0x783: V402 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x785: M[V398] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x786: V403 = 0x4
0x788: V404 = ADD 0x4 V398
0x78b: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a0: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x7a1: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b6: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x7b8: M[V404] = V408
0x7b9: V409 = 0x20
0x7bb: V410 = ADD 0x20 V404
0x7be: M[V410] = V302
0x7bf: V411 = 0x20
0x7c1: V412 = ADD 0x20 V410
0x7c6: V413 = 0x20
0x7c8: V414 = 0x40
0x7ca: V415 = M[0x40]
0x7cd: V416 = SUB V412 V415
0x7cf: V417 = 0x0
0x7d3: V418 = EXTCODESIZE V394
0x7d4: V419 = ISZERO V418
0x7d5: V420 = ISZERO V419
0x7d6: V421 = 0x7de
0x7d9: JUMPI 0x7de V420
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V359, 0x9e281a98, V376]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V394, 0xa9059cbb, V412, 0x20, V415, V416, V415, 0x0, V394]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V394, 0xa9059cbb, V412, 0x20, V415, V416, V415, 0x0, V394]

================================

Block 0x7da
[0x7da:0x7dd]
---
Predecessors: [0x739]
Successors: []
---
0x7da PUSH1 0x0
0x7dc DUP1
0x7dd REVERT
---
0x7da: V422 = 0x0
0x7dd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V394, 0xa9059cbb, V412, 0x20, V415, V416, V415, 0x0, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V394, 0xa9059cbb, V412, 0x20, V415, V416, V415, 0x0, V394]

================================

Block 0x7de
[0x7de:0x7e6]
---
Predecessors: [0x739]
Successors: [0x7e7, 0x7eb]
---
0x7de JUMPDEST
0x7df GAS
0x7e0 CALL
0x7e1 ISZERO
0x7e2 ISZERO
0x7e3 PUSH2 0x7eb
0x7e6 JUMPI
---
0x7de: JUMPDEST 
0x7df: V423 = GAS
0x7e0: V424 = CALL V423 V394 0x0 V415 V416 V415 0x20
0x7e1: V425 = ISZERO V424
0x7e2: V426 = ISZERO V425
0x7e3: V427 = 0x7eb
0x7e6: JUMPI 0x7eb V426
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V394, 0xa9059cbb, V412, 0x20, V415, V416, V415, 0x0, V394]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V394, 0xa9059cbb, V412]

================================

Block 0x7e7
[0x7e7:0x7ea]
---
Predecessors: [0x7de]
Successors: []
---
0x7e7 PUSH1 0x0
0x7e9 DUP1
0x7ea REVERT
---
0x7e7: V428 = 0x0
0x7ea: REVERT 0x0 0x0
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V394, 0xa9059cbb, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V394, 0xa9059cbb, V412]

================================

Block 0x7eb
[0x7eb:0x7f6]
---
Predecessors: [0x7de]
Successors: [0x7f7]
---
0x7eb JUMPDEST
0x7ec POP
0x7ed POP
0x7ee POP
0x7ef PUSH1 0x40
0x7f1 MLOAD
0x7f2 DUP1
0x7f3 MLOAD
0x7f4 SWAP1
0x7f5 POP
0x7f6 POP
---
0x7eb: JUMPDEST 
0x7ef: V429 = 0x40
0x7f1: V430 = M[0x40]
0x7f3: V431 = M[V430]
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302, V394, 0xa9059cbb, V412]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]

================================

Block 0x7f7
[0x7f7:0x806]
---
Predecessors: [0x685, 0x7eb]
Successors: [0x138]
---
0x7f7 JUMPDEST
0x7f8 POP
0x7f9 POP
0x7fa POP
0x7fb POP
0x7fc POP
0x7fd POP
0x7fe POP
0x7ff POP
0x800 POP
0x801 POP
0x802 POP
0x803 POP
0x804 POP
0x805 POP
0x806 JUMP
---
0x7f7: JUMPDEST 
0x806: JUMP 0x138
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, V302]
Stack pops: 15
Stack additions: []
Exit stack: [V11]

================================

Block 0x807
[0x807:0x82b]
---
Predecessors: [0x145]
Successors: [0x14d]
---
0x807 JUMPDEST
0x808 PUSH1 0x0
0x80a DUP1
0x80b SWAP1
0x80c SLOAD
0x80d SWAP1
0x80e PUSH2 0x100
0x811 EXP
0x812 SWAP1
0x813 DIV
0x814 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x829 AND
0x82a DUP2
0x82b JUMP
---
0x807: JUMPDEST 
0x808: V432 = 0x0
0x80c: V433 = S[0x0]
0x80e: V434 = 0x100
0x811: V435 = EXP 0x100 0x0
0x813: V436 = DIV V433 0x1
0x814: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x829: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x82b: JUMP 0x14d
---
Entry stack: [V11, 0x14d]
Stack pops: 1
Stack additions: [S0, V438]
Exit stack: [V11, 0x14d, V438]

================================

Block 0x82c
[0x82c:0x882]
---
Predecessors: [0x19a]
Successors: [0x883, 0x887]
---
0x82c JUMPDEST
0x82d PUSH1 0x0
0x82f DUP1
0x830 SWAP1
0x831 SLOAD
0x832 SWAP1
0x833 PUSH2 0x100
0x836 EXP
0x837 SWAP1
0x838 DIV
0x839 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84e AND
0x84f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x864 AND
0x865 CALLER
0x866 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87b AND
0x87c EQ
0x87d ISZERO
0x87e ISZERO
0x87f PUSH2 0x887
0x882 JUMPI
---
0x82c: JUMPDEST 
0x82d: V439 = 0x0
0x831: V440 = S[0x0]
0x833: V441 = 0x100
0x836: V442 = EXP 0x100 0x0
0x838: V443 = DIV V440 0x1
0x839: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x84e: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x84f: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x864: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x865: V448 = CALLER
0x866: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x87b: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x87c: V451 = EQ V450 V447
0x87d: V452 = ISZERO V451
0x87e: V453 = ISZERO V452
0x87f: V454 = 0x887
0x882: JUMPI 0x887 V453
---
Entry stack: [V11, 0x1c6, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c6, V102]

================================

Block 0x883
[0x883:0x886]
---
Predecessors: [0x82c]
Successors: []
---
0x883 PUSH1 0x0
0x885 DUP1
0x886 REVERT
---
0x883: V455 = 0x0
0x886: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c6, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c6, V102]

================================

Block 0x887
[0x887:0x8be]
---
Predecessors: [0x82c]
Successors: [0x8bf, 0x8c3]
---
0x887 JUMPDEST
0x888 PUSH1 0x0
0x88a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89f AND
0x8a0 DUP2
0x8a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b6 AND
0x8b7 EQ
0x8b8 ISZERO
0x8b9 ISZERO
0x8ba ISZERO
0x8bb PUSH2 0x8c3
0x8be JUMPI
---
0x887: JUMPDEST 
0x888: V456 = 0x0
0x88a: V457 = 0xffffffffffffffffffffffffffffffffffffffff
0x89f: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x8a1: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b6: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x8b7: V461 = EQ V460 0x0
0x8b8: V462 = ISZERO V461
0x8b9: V463 = ISZERO V462
0x8ba: V464 = ISZERO V463
0x8bb: V465 = 0x8c3
0x8be: JUMPI 0x8c3 V464
---
Entry stack: [V11, 0x1c6, V102]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1c6, V102]

================================

Block 0x8bf
[0x8bf:0x8c2]
---
Predecessors: [0x887]
Successors: []
---
0x8bf PUSH1 0x0
0x8c1 DUP1
0x8c2 REVERT
---
0x8bf: V466 = 0x0
0x8c2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c6, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c6, V102]

================================

Block 0x8c3
[0x8c3:0x905]
---
Predecessors: [0x887]
Successors: [0x1c6]
---
0x8c3 JUMPDEST
0x8c4 DUP1
0x8c5 PUSH1 0x0
0x8c7 DUP1
0x8c8 PUSH2 0x100
0x8cb EXP
0x8cc DUP2
0x8cd SLOAD
0x8ce DUP2
0x8cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e4 MUL
0x8e5 NOT
0x8e6 AND
0x8e7 SWAP1
0x8e8 DUP4
0x8e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fe AND
0x8ff MUL
0x900 OR
0x901 SWAP1
0x902 SSTORE
0x903 POP
0x904 POP
0x905 JUMP
---
0x8c3: JUMPDEST 
0x8c5: V467 = 0x0
0x8c8: V468 = 0x100
0x8cb: V469 = EXP 0x100 0x0
0x8cd: V470 = S[0x0]
0x8cf: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e4: V472 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8e5: V473 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8e6: V474 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V470
0x8e9: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fe: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x8ff: V477 = MUL V476 0x1
0x900: V478 = OR V477 V474
0x902: S[0x0] = V478
0x905: JUMP 0x1c6
---
Entry stack: [V11, 0x1c6, V102]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x906
[0x906:0x917]
---
Predecessors: [0x56f]
Successors: [0x918, 0x927]
---
0x906 JUMPDEST
0x907 PUSH1 0x0
0x909 DUP1
0x90a DUP3
0x90b DUP5
0x90c MUL
0x90d SWAP1
0x90e POP
0x90f PUSH1 0x0
0x911 DUP5
0x912 EQ
0x913 DUP1
0x914 PUSH2 0x927
0x917 JUMPI
---
0x906: JUMPDEST 
0x907: V479 = 0x0
0x90c: V480 = MUL V37 V68
0x90f: V481 = 0x0
0x912: V482 = EQ V37 0x0
0x914: V483 = 0x927
0x917: JUMPI 0x927 V482
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V480, V482]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480, V482]

================================

Block 0x918
[0x918:0x922]
---
Predecessors: [0x906]
Successors: [0x923, 0x924]
---
0x918 POP
0x919 DUP3
0x91a DUP5
0x91b DUP3
0x91c DUP2
0x91d ISZERO
0x91e ISZERO
0x91f PUSH2 0x924
0x922 JUMPI
---
0x91d: V484 = ISZERO V37
0x91e: V485 = ISZERO V484
0x91f: V486 = 0x924
0x922: JUMPI 0x924 V485
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480, V482]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480, V68, V37, V480]

================================

Block 0x923
[0x923:0x923]
---
Predecessors: [0x918]
Successors: []
---
0x923 INVALID
---
0x923: INVALID 
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480, V68, V37, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480, V68, V37, V480]

================================

Block 0x924
[0x924:0x926]
---
Predecessors: [0x918]
Successors: [0x927]
---
0x924 JUMPDEST
0x925 DIV
0x926 EQ
---
0x924: JUMPDEST 
0x925: V487 = DIV V480 V37
0x926: V488 = EQ V487 V68
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480, V68, V37, V480]
Stack pops: 3
Stack additions: [V488]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480, V488]

================================

Block 0x927
[0x927:0x92d]
---
Predecessors: [0x906, 0x924]
Successors: [0x92e, 0x92f]
---
0x927 JUMPDEST
0x928 ISZERO
0x929 ISZERO
0x92a PUSH2 0x92f
0x92d JUMPI
---
0x927: JUMPDEST 
0x928: V489 = ISZERO S0
0x929: V490 = ISZERO V489
0x92a: V491 = 0x92f
0x92d: JUMPI 0x92f V490
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480]

================================

Block 0x92e
[0x92e:0x92e]
---
Predecessors: [0x927]
Successors: []
---
0x92e INVALID
---
0x92e: INVALID 
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480]

================================

Block 0x92f
[0x92f:0x938]
---
Predecessors: [0x927]
Successors: [0x586]
---
0x92f JUMPDEST
0x930 DUP1
0x931 SWAP2
0x932 POP
0x933 POP
0x934 SWAP3
0x935 SWAP2
0x936 POP
0x937 POP
0x938 JUMP
---
0x92f: JUMPDEST 
0x938: JUMP 0x586
---
Entry stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, 0x586, V37, V68, 0x0, V480]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x138, V26, V29, V34, V37, V40, V43, V48, V53, V59, V65, V68, V73, V296, 0x0, V29, V480]

================================

Block 0x939
[0x939:0x968]
---
Predecessors: []
Successors: []
---
0x939 STOP
0x93a LOG1
0x93b PUSH6 0x627a7a723058
0x942 SHA3
0x943 SELFDESTRUCT
0x944 SLT
0x945 MISSING 0xed
0x946 PUSH8 0xf078103f83a937e1
0x94f MISSING 0xbc
0x950 MISSING 0xb8
0x951 MISSING 0xe
0x952 SWAP5
0x953 ADDRESS
0x954 MISSING 0xcb
0x955 PUSH7 0xe0bfac5c569da7
0x95d MISSING 0xc
0x95e PUSH10 0x4dad03f0029
---
0x939: STOP 
0x93a: LOG S0 S1 S2
0x93b: V492 = 0x627a7a723058
0x942: V493 = SHA3 0x627a7a723058 S3
0x943: SELFDESTRUCT V493
0x944: V494 = SLT S0 S1
0x945: MISSING 0xed
0x946: V495 = 0xf078103f83a937e1
0x94f: MISSING 0xbc
0x950: MISSING 0xb8
0x951: MISSING 0xe
0x953: V496 = ADDRESS
0x954: MISSING 0xcb
0x955: V497 = 0xe0bfac5c569da7
0x95d: MISSING 0xc
0x95e: V498 = 0x4dad03f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V494, 0xf078103f83a937e1, V496, S5, S1, S2, S3, S4, S0, 0xe0bfac5c569da7, 0x4dad03f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8e05b85
Entry block: 0x5c
Exit block: 0x138
Body: 0x5c, 0x138, 0x1c8, 0x201, 0x25f, 0x263, 0x26c, 0x270, 0x279, 0x317, 0x31b, 0x324, 0x328, 0x32c, 0x480, 0x484, 0x48d, 0x491, 0x55e, 0x562, 0x56b, 0x56f, 0x586, 0x58e, 0x58f, 0x5c8, 0x631, 0x635, 0x63e, 0x642, 0x681, 0x685, 0x68a, 0x728, 0x72c, 0x735, 0x739, 0x7da, 0x7de, 0x7e7, 0x7eb, 0x7f7, 0x906, 0x918, 0x923, 0x924, 0x927, 0x92e, 0x92f

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x13a
Exit block: 0x14d
Body: 0x13a, 0x141, 0x145, 0x14d, 0x807

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0x18f
Exit block: 0x1c6
Body: 0x18f, 0x196, 0x19a, 0x1c6, 0x82c, 0x883, 0x887, 0x8bf, 0x8c3

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

