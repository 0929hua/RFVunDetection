Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x90]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x86d1a69f
0x3c EQ
0x3d PUSH2 0x90
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x86d1a69f
0x3c: V13 = EQ 0x86d1a69f V11
0x3d: V14 = 0x90
0x40: JUMPI 0x90 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa5]
---
0x41 DUP1
0x42 PUSH4 0x8e1d16cb
0x47 EQ
0x48 PUSH2 0xa5
0x4b JUMPI
---
0x42: V15 = 0x8e1d16cb
0x47: V16 = EQ 0x8e1d16cb V11
0x48: V17 = 0xa5
0x4b: JUMPI 0xa5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xce]
---
0x4c DUP1
0x4d PUSH4 0xf7260d3e
0x52 EQ
0x53 PUSH2 0xce
0x56 JUMPI
---
0x4d: V18 = 0xf7260d3e
0x52: V19 = EQ 0xf7260d3e V11
0x53: V20 = 0xce
0x56: JUMPI 0xce V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x8f]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH32 0xbcdc7071c1beb6dcf2744621e0b29a2f2432ee20812d9ca5e3d5e8f9308d93a3
0x79 CALLVALUE
0x7a PUSH1 0x40
0x7c MLOAD
0x7d DUP1
0x7e DUP3
0x7f DUP2
0x80 MSTORE
0x81 PUSH1 0x20
0x83 ADD
0x84 SWAP2
0x85 POP
0x86 POP
0x87 PUSH1 0x40
0x89 MLOAD
0x8a DUP1
0x8b SWAP2
0x8c SUB
0x8d SWAP1
0x8e LOG1
0x8f STOP
---
0x57: JUMPDEST 
0x58: V21 = 0xbcdc7071c1beb6dcf2744621e0b29a2f2432ee20812d9ca5e3d5e8f9308d93a3
0x79: V22 = CALLVALUE
0x7a: V23 = 0x40
0x7c: V24 = M[0x40]
0x80: M[V24] = V22
0x81: V25 = 0x20
0x83: V26 = ADD 0x20 V24
0x87: V27 = 0x40
0x89: V28 = M[0x40]
0x8c: V29 = SUB V26 V28
0x8e: LOG V28 V29 0xbcdc7071c1beb6dcf2744621e0b29a2f2432ee20812d9ca5e3d5e8f9308d93a3
0x8f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90
[0x90:0x96]
---
Predecessors: [0xd]
Successors: [0x97, 0x9b]
---
0x90 JUMPDEST
0x91 CALLVALUE
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x90: JUMPDEST 
0x91: V30 = CALLVALUE
0x92: V31 = ISZERO V30
0x93: V32 = 0x9b
0x96: JUMPI 0x9b V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x90]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V33 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9b
[0x9b:0xa2]
---
Predecessors: [0x90]
Successors: [0x123]
---
0x9b JUMPDEST
0x9c PUSH2 0xa3
0x9f PUSH2 0x123
0xa2 JUMP
---
0x9b: JUMPDEST 
0x9c: V34 = 0xa3
0x9f: V35 = 0x123
0xa2: JUMP 0x123
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V11, 0xa3]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0x20d]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0x41]
Successors: [0xac, 0xb0]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V36 = CALLVALUE
0xa7: V37 = ISZERO V36
0xa8: V38 = 0xb0
0xab: JUMPI 0xb0 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa5]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V39 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xb7]
---
Predecessors: [0xa5]
Successors: [0x29c]
---
0xb0 JUMPDEST
0xb1 PUSH2 0xb8
0xb4 PUSH2 0x29c
0xb7 JUMP
---
0xb0: JUMPDEST 
0xb1: V40 = 0xb8
0xb4: V41 = 0x29c
0xb7: JUMP 0x29c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb8]
Exit stack: [V11, 0xb8]

================================

Block 0xb8
[0xb8:0xcd]
---
Predecessors: [0x29c]
Successors: []
---
0xb8 JUMPDEST
0xb9 PUSH1 0x40
0xbb MLOAD
0xbc DUP1
0xbd DUP3
0xbe DUP2
0xbf MSTORE
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 SWAP2
0xc4 POP
0xc5 POP
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 DUP1
0xca SWAP2
0xcb SUB
0xcc SWAP1
0xcd RETURN
---
0xb8: JUMPDEST 
0xb9: V42 = 0x40
0xbb: V43 = M[0x40]
0xbf: M[V43] = V145
0xc0: V44 = 0x20
0xc2: V45 = ADD 0x20 V43
0xc6: V46 = 0x40
0xc8: V47 = M[0x40]
0xcb: V48 = SUB V45 V47
0xcd: RETURN V47 V48
---
Entry stack: [V11, 0xb8, V145]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb8]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x4c]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V49 = CALLVALUE
0xd0: V50 = ISZERO V49
0xd1: V51 = 0xd9
0xd4: JUMPI 0xd9 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V52 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0xce]
Successors: [0x2a2]
---
0xd9 JUMPDEST
0xda PUSH2 0xe1
0xdd PUSH2 0x2a2
0xe0 JUMP
---
0xd9: JUMPDEST 
0xda: V53 = 0xe1
0xdd: V54 = 0x2a2
0xe0: JUMP 0x2a2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0xe1
[0xe1:0x122]
---
Predecessors: [0x2a2]
Successors: []
---
0xe1 JUMPDEST
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 DUP3
0xe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc AND
0xfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112 AND
0x113 DUP2
0x114 MSTORE
0x115 PUSH1 0x20
0x117 ADD
0x118 SWAP2
0x119 POP
0x11a POP
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f SWAP2
0x120 SUB
0x121 SWAP1
0x122 RETURN
---
0xe1: JUMPDEST 
0xe2: V55 = 0x40
0xe4: V56 = M[0x40]
0xe7: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0xfd: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x112: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x114: M[V56] = V60
0x115: V61 = 0x20
0x117: V62 = ADD 0x20 V56
0x11b: V63 = 0x40
0x11d: V64 = M[0x40]
0x120: V65 = SUB V62 V64
0x122: RETURN V64 V65
---
Entry stack: [V11, 0xe1, V152]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0x123
[0x123:0x14a]
---
Predecessors: [0x9b]
Successors: [0x14b, 0x1ab]
---
0x123 JUMPDEST
0x124 PUSH1 0x0
0x126 ADDRESS
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d BALANCE
0x13e SWAP1
0x13f POP
0x140 PUSH1 0x0
0x142 PUSH1 0x1
0x144 SLOAD
0x145 GT
0x146 ISZERO
0x147 PUSH2 0x1ab
0x14a JUMPI
---
0x123: JUMPDEST 
0x124: V66 = 0x0
0x126: V67 = ADDRESS
0x127: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x13d: V70 = BALANCE V69
0x140: V71 = 0x0
0x142: V72 = 0x1
0x144: V73 = S[0x1]
0x145: V74 = GT V73 0x0
0x146: V75 = ISZERO V74
0x147: V76 = 0x1ab
0x14a: JUMPI 0x1ab V75
---
Entry stack: [V11, 0xa3]
Stack pops: 0
Stack additions: [V70]
Exit stack: [V11, 0xa3, V70]

================================

Block 0x14b
[0x14b:0x1a1]
---
Predecessors: [0x123]
Successors: [0x1a2, 0x1a6]
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e SWAP1
0x14f SLOAD
0x150 SWAP1
0x151 PUSH2 0x100
0x154 EXP
0x155 SWAP1
0x156 DIV
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x182 AND
0x183 PUSH1 0x1
0x185 SLOAD
0x186 DUP3
0x187 PUSH1 0x40
0x189 MLOAD
0x18a PUSH1 0x0
0x18c PUSH1 0x40
0x18e MLOAD
0x18f DUP1
0x190 DUP4
0x191 SUB
0x192 DUP2
0x193 DUP6
0x194 DUP9
0x195 DUP9
0x196 CALL
0x197 SWAP4
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c ISZERO
0x19d ISZERO
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x14b: V77 = 0x0
0x14f: V78 = S[0x0]
0x151: V79 = 0x100
0x154: V80 = EXP 0x100 0x0
0x156: V81 = DIV V78 0x1
0x157: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x16d: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x182: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x183: V86 = 0x1
0x185: V87 = S[0x1]
0x187: V88 = 0x40
0x189: V89 = M[0x40]
0x18a: V90 = 0x0
0x18c: V91 = 0x40
0x18e: V92 = M[0x40]
0x191: V93 = SUB V89 V92
0x196: V94 = CALL V87 V85 V70 V92 V93 V92 0x0
0x19c: V95 = ISZERO V94
0x19d: V96 = ISZERO V95
0x19e: V97 = 0x1a6
0x1a1: JUMPI 0x1a6 V96
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa3, V70]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x14b]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V98 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V70]

================================

Block 0x1a6
[0x1a6:0x1aa]
---
Predecessors: [0x14b]
Successors: [0x20d]
---
0x1a6 JUMPDEST
0x1a7 PUSH2 0x20d
0x1aa JUMP
---
0x1a6: JUMPDEST 
0x1a7: V99 = 0x20d
0x1aa: JUMP 0x20d
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V70]

================================

Block 0x1ab
[0x1ab:0x207]
---
Predecessors: [0x123]
Successors: [0x208, 0x20c]
---
0x1ab JUMPDEST
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af SWAP1
0x1b0 SLOAD
0x1b1 SWAP1
0x1b2 PUSH2 0x100
0x1b5 EXP
0x1b6 SWAP1
0x1b7 DIV
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd AND
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 PUSH2 0x8fc
0x1e7 DUP3
0x1e8 SWAP1
0x1e9 DUP2
0x1ea ISZERO
0x1eb MUL
0x1ec SWAP1
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 PUSH1 0x0
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 DUP4
0x1f7 SUB
0x1f8 DUP2
0x1f9 DUP6
0x1fa DUP9
0x1fb DUP9
0x1fc CALL
0x1fd SWAP4
0x1fe POP
0x1ff POP
0x200 POP
0x201 POP
0x202 ISZERO
0x203 ISZERO
0x204 PUSH2 0x20c
0x207 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V100 = 0x0
0x1b0: V101 = S[0x0]
0x1b2: V102 = 0x100
0x1b5: V103 = EXP 0x100 0x0
0x1b7: V104 = DIV V101 0x1
0x1b8: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1ce: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1e4: V109 = 0x8fc
0x1ea: V110 = ISZERO V70
0x1eb: V111 = MUL V110 0x8fc
0x1ed: V112 = 0x40
0x1ef: V113 = M[0x40]
0x1f0: V114 = 0x0
0x1f2: V115 = 0x40
0x1f4: V116 = M[0x40]
0x1f7: V117 = SUB V113 V116
0x1fc: V118 = CALL V111 V108 V70 V116 V117 V116 0x0
0x202: V119 = ISZERO V118
0x203: V120 = ISZERO V119
0x204: V121 = 0x20c
0x207: JUMPI 0x20c V120
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa3, V70]

================================

Block 0x208
[0x208:0x20b]
---
Predecessors: [0x1ab]
Successors: []
---
0x208 PUSH1 0x0
0x20a DUP1
0x20b REVERT
---
0x208: V122 = 0x0
0x20b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V70]

================================

Block 0x20c
[0x20c:0x20c]
---
Predecessors: [0x1ab]
Successors: [0x20d]
---
0x20c JUMPDEST
---
0x20c: JUMPDEST 
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V70]

================================

Block 0x20d
[0x20d:0x29b]
---
Predecessors: [0x1a6, 0x20c]
Successors: [0xa3]
---
0x20d JUMPDEST
0x20e PUSH32 0x221c08a06b07a64803b3787861a3f276212fcccb51c2e6234077a9b8cb13047a
0x22f PUSH1 0x0
0x231 DUP1
0x232 SWAP1
0x233 SLOAD
0x234 SWAP1
0x235 PUSH2 0x100
0x238 EXP
0x239 SWAP1
0x23a DIV
0x23b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x250 AND
0x251 DUP3
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 DUP4
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c AND
0x26d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x282 AND
0x283 DUP2
0x284 MSTORE
0x285 PUSH1 0x20
0x287 ADD
0x288 DUP3
0x289 DUP2
0x28a MSTORE
0x28b PUSH1 0x20
0x28d ADD
0x28e SWAP3
0x28f POP
0x290 POP
0x291 POP
0x292 PUSH1 0x40
0x294 MLOAD
0x295 DUP1
0x296 SWAP2
0x297 SUB
0x298 SWAP1
0x299 LOG1
0x29a POP
0x29b JUMP
---
0x20d: JUMPDEST 
0x20e: V123 = 0x221c08a06b07a64803b3787861a3f276212fcccb51c2e6234077a9b8cb13047a
0x22f: V124 = 0x0
0x233: V125 = S[0x0]
0x235: V126 = 0x100
0x238: V127 = EXP 0x100 0x0
0x23a: V128 = DIV V125 0x1
0x23b: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x250: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x252: V131 = 0x40
0x254: V132 = M[0x40]
0x257: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x26d: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x282: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x284: M[V132] = V136
0x285: V137 = 0x20
0x287: V138 = ADD 0x20 V132
0x28a: M[V138] = V70
0x28b: V139 = 0x20
0x28d: V140 = ADD 0x20 V138
0x292: V141 = 0x40
0x294: V142 = M[0x40]
0x297: V143 = SUB V140 V142
0x299: LOG V142 V143 0x221c08a06b07a64803b3787861a3f276212fcccb51c2e6234077a9b8cb13047a
0x29b: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x29c
[0x29c:0x2a1]
---
Predecessors: [0xb0]
Successors: [0xb8]
---
0x29c JUMPDEST
0x29d PUSH1 0x1
0x29f SLOAD
0x2a0 DUP2
0x2a1 JUMP
---
0x29c: JUMPDEST 
0x29d: V144 = 0x1
0x29f: V145 = S[0x1]
0x2a1: JUMP 0xb8
---
Entry stack: [V11, 0xb8]
Stack pops: 1
Stack additions: [S0, V145]
Exit stack: [V11, 0xb8, V145]

================================

Block 0x2a2
[0x2a2:0x2c6]
---
Predecessors: [0xd9]
Successors: [0xe1]
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 SWAP1
0x2a7 SLOAD
0x2a8 SWAP1
0x2a9 PUSH2 0x100
0x2ac EXP
0x2ad SWAP1
0x2ae DIV
0x2af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c4 AND
0x2c5 DUP2
0x2c6 JUMP
---
0x2a2: JUMPDEST 
0x2a3: V146 = 0x0
0x2a7: V147 = S[0x0]
0x2a9: V148 = 0x100
0x2ac: V149 = EXP 0x100 0x0
0x2ae: V150 = DIV V147 0x1
0x2af: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c4: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2c6: JUMP 0xe1
---
Entry stack: [V11, 0xe1]
Stack pops: 1
Stack additions: [S0, V152]
Exit stack: [V11, 0xe1, V152]

================================

Block 0x2c7
[0x2c7:0x2f3]
---
Predecessors: []
Successors: []
---
0x2c7 STOP
0x2c8 LOG1
0x2c9 PUSH6 0x627a7a723058
0x2d0 SHA3
0x2d1 SGT
0x2d2 AND
0x2d3 MISSING 0xd3
0x2d4 DUP6
0x2d5 MISSING 0x4b
0x2d6 MISSING 0xd7
0x2d7 MISSING 0xbc
0x2d8 MISSING 0xa9
0x2d9 MISSING 0xe8
0x2da MISSING 0xa6
0x2db XOR
0x2dc MULMOD
0x2dd SELFDESTRUCT
0x2de MISSING 0x28
0x2df MISSING 0xa9
0x2e0 MISSING 0xa7
0x2e1 MISSING 0xd0
0x2e2 SLOAD
0x2e3 MISSING 0xeb
0x2e4 MISSING 0xad
0x2e5 PUSH4 0x715bd727
0x2ea MISSING 0x48
0x2eb PUSH8 0x7d032f952b0029
---
0x2c7: STOP 
0x2c8: LOG S0 S1 S2
0x2c9: V153 = 0x627a7a723058
0x2d0: V154 = SHA3 0x627a7a723058 S3
0x2d1: V155 = SGT V154 S4
0x2d2: V156 = AND V155 S5
0x2d3: MISSING 0xd3
0x2d5: MISSING 0x4b
0x2d6: MISSING 0xd7
0x2d7: MISSING 0xbc
0x2d8: MISSING 0xa9
0x2d9: MISSING 0xe8
0x2da: MISSING 0xa6
0x2db: V157 = XOR S0 S1
0x2dc: V158 = MULMOD V157 S2 S3
0x2dd: SELFDESTRUCT V158
0x2de: MISSING 0x28
0x2df: MISSING 0xa9
0x2e0: MISSING 0xa7
0x2e1: MISSING 0xd0
0x2e2: V159 = S[S0]
0x2e3: MISSING 0xeb
0x2e4: MISSING 0xad
0x2e5: V160 = 0x715bd727
0x2ea: MISSING 0x48
0x2eb: V161 = 0x7d032f952b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V156, S5, S0, S1, S2, S3, S4, S5, V159, 0x715bd727, 0x7d032f952b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x86d1a69f
Entry block: 0x90
Exit block: 0xa3
Body: 0x90, 0x97, 0x9b, 0xa3, 0x123, 0x14b, 0x1a2, 0x1a6, 0x1ab, 0x208, 0x20c, 0x20d

Function 1:
Public function signature: 0x8e1d16cb
Entry block: 0xa5
Exit block: 0xb8
Body: 0xa5, 0xac, 0xb0, 0xb8, 0x29c

Function 2:
Public function signature: 0xf7260d3e
Entry block: 0xce
Exit block: 0xe1
Body: 0xce, 0xd5, 0xd9, 0xe1, 0x2a2

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

