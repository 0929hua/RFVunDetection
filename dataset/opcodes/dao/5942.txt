Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5c
0xa: JUMPI 0x5c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x65]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3ccfd60b
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x65
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3ccfd60b
0x20: V14 = EQ V12 0x3ccfd60b
0x21: V15 = 0x65
0x24: JUMPI 0x65 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x7a]
---
0x25 DUP1
0x26 PUSH4 0x471efe66
0x2b EQ
0x2c PUSH2 0x7a
0x2f JUMPI
---
0x26: V16 = 0x471efe66
0x2b: V17 = EQ 0x471efe66 V12
0x2c: V18 = 0x7a
0x2f: JUMPI 0x7a V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xa1]
---
0x30 DUP1
0x31 PUSH4 0x6ad1fe02
0x36 EQ
0x37 PUSH2 0xa1
0x3a JUMPI
---
0x31: V19 = 0x6ad1fe02
0x36: V20 = EQ 0x6ad1fe02 V12
0x37: V21 = 0xa1
0x3a: JUMPI 0xa1 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xd0]
---
0x3b DUP1
0x3c PUSH4 0xa6f2ae3a
0x41 EQ
0x42 PUSH2 0xd0
0x45 JUMPI
---
0x3c: V22 = 0xa6f2ae3a
0x41: V23 = EQ 0xa6f2ae3a V12
0x42: V24 = 0xd0
0x45: JUMPI 0xd0 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xe5]
---
0x46 DUP1
0x47 PUSH4 0xca4b208b
0x4c EQ
0x4d PUSH2 0xe5
0x50 JUMPI
---
0x47: V25 = 0xca4b208b
0x4c: V26 = EQ 0xca4b208b V12
0x4d: V27 = 0xe5
0x50: JUMPI 0xe5 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x114]
---
0x51 DUP1
0x52 PUSH4 0xfc0c546a
0x57 EQ
0x58 PUSH2 0x114
0x5b JUMPI
---
0x52: V28 = 0xfc0c546a
0x57: V29 = EQ 0xfc0c546a V12
0x58: V30 = 0x114
0x5b: JUMPI 0x114 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x5f]
---
Predecessors: [0x0, 0x51]
Successors: [0x60]
---
0x5c JUMPDEST
0x5d PUSH2 0x63
---
0x5c: JUMPDEST 
0x5d: V31 = 0x63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x63]
Exit stack: [V12, 0x63]

================================

Block 0x60
[0x60:0x60]
---
Predecessors: [0x5c, 0x25f, 0x2fa]
Successors: [0x61]
---
0x60 JUMPDEST
---
0x60: JUMPDEST 
---
Entry stack: [V12, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x60]
Successors: [0x63]
---
0x61 JUMPDEST
0x62 JUMP
---
0x61: JUMPDEST 
0x62: JUMP 0x63
---
Entry stack: [V12, 0x63]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x63
[0x63:0x64]
---
Predecessors: [0x61, 0x2d0]
Successors: []
---
0x63 JUMPDEST
0x64 STOP
---
0x63: JUMPDEST 
0x64: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x65
[0x65:0x6b]
---
Predecessors: [0xb]
Successors: [0x6c, 0x70]
---
0x65 JUMPDEST
0x66 CALLVALUE
0x67 ISZERO
0x68 PUSH2 0x70
0x6b JUMPI
---
0x65: JUMPDEST 
0x66: V32 = CALLVALUE
0x67: V33 = ISZERO V32
0x68: V34 = 0x70
0x6b: JUMPI 0x70 V33
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6c
[0x6c:0x6f]
---
Predecessors: [0x65]
Successors: []
---
0x6c PUSH1 0x0
0x6e DUP1
0x6f REVERT
---
0x6c: V35 = 0x0
0x6f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x70
[0x70:0x77]
---
Predecessors: [0x65]
Successors: [0x143]
---
0x70 JUMPDEST
0x71 PUSH2 0x63
0x74 PUSH2 0x143
0x77 JUMP
---
0x70: JUMPDEST 
0x71: V36 = 0x63
0x74: V37 = 0x143
0x77: JUMP 0x143
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x63]
Exit stack: [V12, 0x63]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: []
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0x25]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V38 = CALLVALUE
0x7c: V39 = ISZERO V38
0x7d: V40 = 0x85
0x80: JUMPI 0x85 V39
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V41 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x85
[0x85:0x9e]
---
Predecessors: [0x7a]
Successors: [0x277]
---
0x85 JUMPDEST
0x86 PUSH2 0x63
0x89 PUSH1 0x1
0x8b PUSH1 0xa0
0x8d PUSH1 0x2
0x8f EXP
0x90 SUB
0x91 PUSH1 0x4
0x93 CALLDATALOAD
0x94 DUP2
0x95 AND
0x96 SWAP1
0x97 PUSH1 0x24
0x99 CALLDATALOAD
0x9a AND
0x9b PUSH2 0x277
0x9e JUMP
---
0x85: JUMPDEST 
0x86: V42 = 0x63
0x89: V43 = 0x1
0x8b: V44 = 0xa0
0x8d: V45 = 0x2
0x8f: V46 = EXP 0x2 0xa0
0x90: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91: V48 = 0x4
0x93: V49 = CALLDATALOAD 0x4
0x95: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x97: V51 = 0x24
0x99: V52 = CALLDATALOAD 0x24
0x9a: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x9b: V54 = 0x277
0x9e: JUMP 0x277
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x63, V50, V53]
Exit stack: [V12, 0x63, V50, V53]

================================

Block 0x9f
[0x9f:0xa0]
---
Predecessors: []
Successors: []
---
0x9f JUMPDEST
0xa0 STOP
---
0x9f: JUMPDEST 
0xa0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa1
[0xa1:0xa7]
---
Predecessors: [0x30]
Successors: [0xa8, 0xac]
---
0xa1 JUMPDEST
0xa2 CALLVALUE
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0xa1: JUMPDEST 
0xa2: V55 = CALLVALUE
0xa3: V56 = ISZERO V55
0xa4: V57 = 0xac
0xa7: JUMPI 0xac V56
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa1]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V58 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac
[0xac:0xb3]
---
Predecessors: [0xa1]
Successors: [0x2d4]
---
0xac JUMPDEST
0xad PUSH2 0xb4
0xb0 PUSH2 0x2d4
0xb3 JUMP
---
0xac: JUMPDEST 
0xad: V59 = 0xb4
0xb0: V60 = 0x2d4
0xb3: JUMP 0x2d4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V12, 0xb4]

================================

Block 0xb4
[0xb4:0xcf]
---
Predecessors: [0x2d4, 0x332, 0x341]
Successors: []
---
0xb4 JUMPDEST
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 PUSH1 0x1
0xba PUSH1 0xa0
0xbc PUSH1 0x2
0xbe EXP
0xbf SUB
0xc0 SWAP1
0xc1 SWAP2
0xc2 AND
0xc3 DUP2
0xc4 MSTORE
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 PUSH1 0x40
0xca MLOAD
0xcb DUP1
0xcc SWAP2
0xcd SUB
0xce SWAP1
0xcf RETURN
---
0xb4: JUMPDEST 
0xb5: V61 = 0x40
0xb7: V62 = M[0x40]
0xb8: V63 = 0x1
0xba: V64 = 0xa0
0xbc: V65 = 0x2
0xbe: V66 = EXP 0x2 0xa0
0xbf: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V68 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xc4: M[V62] = V68
0xc5: V69 = 0x20
0xc7: V70 = ADD 0x20 V62
0xc8: V71 = 0x40
0xca: V72 = M[0x40]
0xcd: V73 = SUB V70 V72
0xcf: RETURN V72 V73
---
Entry stack: [V12, 0xb4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xb4]

================================

Block 0xd0
[0xd0:0xd6]
---
Predecessors: [0x3b]
Successors: [0xd7, 0xdb]
---
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xd0: JUMPDEST 
0xd1: V74 = CALLVALUE
0xd2: V75 = ISZERO V74
0xd3: V76 = 0xdb
0xd6: JUMPI 0xdb V75
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xd0]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V77 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0xd0]
Successors: [0x2e3]
---
0xdb JUMPDEST
0xdc PUSH2 0x63
0xdf PUSH2 0x2e3
0xe2 JUMP
---
0xdb: JUMPDEST 
0xdc: V78 = 0x63
0xdf: V79 = 0x2e3
0xe2: JUMP 0x2e3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x63]
Exit stack: [V12, 0x63]

================================

Block 0xe3
[0xe3:0xe4]
---
Predecessors: []
Successors: []
---
0xe3 JUMPDEST
0xe4 STOP
---
0xe3: JUMPDEST 
0xe4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe5
[0xe5:0xeb]
---
Predecessors: [0x46]
Successors: [0xec, 0xf0]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe5: JUMPDEST 
0xe6: V80 = CALLVALUE
0xe7: V81 = ISZERO V80
0xe8: V82 = 0xf0
0xeb: JUMPI 0xf0 V81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe5]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V83 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf0
[0xf0:0xf7]
---
Predecessors: [0xe5]
Successors: [0x332]
---
0xf0 JUMPDEST
0xf1 PUSH2 0xb4
0xf4 PUSH2 0x332
0xf7 JUMP
---
0xf0: JUMPDEST 
0xf1: V84 = 0xb4
0xf4: V85 = 0x332
0xf7: JUMP 0x332
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V12, 0xb4]

================================

Block 0xf8
[0xf8:0x113]
---
Predecessors: []
Successors: []
---
0xf8 JUMPDEST
0xf9 PUSH1 0x40
0xfb MLOAD
0xfc PUSH1 0x1
0xfe PUSH1 0xa0
0x100 PUSH1 0x2
0x102 EXP
0x103 SUB
0x104 SWAP1
0x105 SWAP2
0x106 AND
0x107 DUP2
0x108 MSTORE
0x109 PUSH1 0x20
0x10b ADD
0x10c PUSH1 0x40
0x10e MLOAD
0x10f DUP1
0x110 SWAP2
0x111 SUB
0x112 SWAP1
0x113 RETURN
---
0xf8: JUMPDEST 
0xf9: V86 = 0x40
0xfb: V87 = M[0x40]
0xfc: V88 = 0x1
0xfe: V89 = 0xa0
0x100: V90 = 0x2
0x102: V91 = EXP 0x2 0xa0
0x103: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x106: V93 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x108: M[V87] = V93
0x109: V94 = 0x20
0x10b: V95 = ADD 0x20 V87
0x10c: V96 = 0x40
0x10e: V97 = M[0x40]
0x111: V98 = SUB V95 V97
0x113: RETURN V97 V98
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x51]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V99 = CALLVALUE
0x116: V100 = ISZERO V99
0x117: V101 = 0x11f
0x11a: JUMPI 0x11f V100
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V102 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11f
[0x11f:0x126]
---
Predecessors: [0x114]
Successors: [0x341]
---
0x11f JUMPDEST
0x120 PUSH2 0xb4
0x123 PUSH2 0x341
0x126 JUMP
---
0x11f: JUMPDEST 
0x120: V103 = 0xb4
0x123: V104 = 0x341
0x126: JUMP 0x341
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V12, 0xb4]

================================

Block 0x127
[0x127:0x142]
---
Predecessors: []
Successors: []
---
0x127 JUMPDEST
0x128 PUSH1 0x40
0x12a MLOAD
0x12b PUSH1 0x1
0x12d PUSH1 0xa0
0x12f PUSH1 0x2
0x131 EXP
0x132 SUB
0x133 SWAP1
0x134 SWAP2
0x135 AND
0x136 DUP2
0x137 MSTORE
0x138 PUSH1 0x20
0x13a ADD
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f SWAP2
0x140 SUB
0x141 SWAP1
0x142 RETURN
---
0x127: JUMPDEST 
0x128: V105 = 0x40
0x12a: V106 = M[0x40]
0x12b: V107 = 0x1
0x12d: V108 = 0xa0
0x12f: V109 = 0x2
0x131: V110 = EXP 0x2 0xa0
0x132: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V112 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x137: M[V106] = V112
0x138: V113 = 0x20
0x13a: V114 = ADD 0x20 V106
0x13b: V115 = 0x40
0x13d: V116 = M[0x40]
0x140: V117 = SUB V114 V116
0x142: RETURN V116 V117
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x143
[0x143:0x177]
---
Predecessors: [0x70]
Successors: [0x178, 0x17c]
---
0x143 JUMPDEST
0x144 PUSH1 0x0
0x146 SLOAD
0x147 PUSH1 0x1
0x149 PUSH1 0xa0
0x14b PUSH1 0x2
0x14d EXP
0x14e SUB
0x14f SWAP1
0x150 DUP2
0x151 AND
0x152 SWAP1
0x153 ADDRESS
0x154 AND
0x155 BALANCE
0x156 DUP1
0x157 ISZERO
0x158 PUSH2 0x8fc
0x15b MUL
0x15c SWAP1
0x15d PUSH1 0x40
0x15f MLOAD
0x160 PUSH1 0x0
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 DUP4
0x167 SUB
0x168 DUP2
0x169 DUP6
0x16a DUP9
0x16b DUP9
0x16c CALL
0x16d SWAP4
0x16e POP
0x16f POP
0x170 POP
0x171 POP
0x172 ISZERO
0x173 ISZERO
0x174 PUSH2 0x17c
0x177 JUMPI
---
0x143: JUMPDEST 
0x144: V118 = 0x0
0x146: V119 = S[0x0]
0x147: V120 = 0x1
0x149: V121 = 0xa0
0x14b: V122 = 0x2
0x14d: V123 = EXP 0x2 0xa0
0x14e: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x153: V126 = ADDRESS
0x154: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x155: V128 = BALANCE V127
0x157: V129 = ISZERO V128
0x158: V130 = 0x8fc
0x15b: V131 = MUL 0x8fc V129
0x15d: V132 = 0x40
0x15f: V133 = M[0x40]
0x160: V134 = 0x0
0x162: V135 = 0x40
0x164: V136 = M[0x40]
0x167: V137 = SUB V133 V136
0x16c: V138 = CALL V131 V125 V128 V136 V137 V136 0x0
0x172: V139 = ISZERO V138
0x173: V140 = ISZERO V139
0x174: V141 = 0x17c
0x177: JUMPI 0x17c V140
---
Entry stack: [V12, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63]

================================

Block 0x178
[0x178:0x17b]
---
Predecessors: [0x143]
Successors: []
---
0x178 PUSH1 0x0
0x17a DUP1
0x17b REVERT
---
0x178: V142 = 0x0
0x17b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63]

================================

Block 0x17c
[0x17c:0x1e2]
---
Predecessors: [0x143]
Successors: [0x1e3, 0x1e7]
---
0x17c JUMPDEST
0x17d PUSH1 0x2
0x17f SLOAD
0x180 PUSH1 0x0
0x182 DUP1
0x183 SLOAD
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c SWAP3
0x18d DUP4
0x18e AND
0x18f SWAP3
0x190 PUSH4 0xa9059cbb
0x195 SWAP3
0x196 SWAP2
0x197 AND
0x198 SWAP1
0x199 DUP4
0x19a SWAP1
0x19b PUSH4 0x70a08231
0x1a0 SWAP1
0x1a1 ADDRESS
0x1a2 SWAP1
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 PUSH1 0x20
0x1a8 ADD
0x1a9 MSTORE
0x1aa PUSH1 0x40
0x1ac MLOAD
0x1ad PUSH1 0xe0
0x1af PUSH1 0x2
0x1b1 EXP
0x1b2 PUSH4 0xffffffff
0x1b7 DUP5
0x1b8 AND
0x1b9 MUL
0x1ba DUP2
0x1bb MSTORE
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 SWAP1
0x1c5 SWAP2
0x1c6 AND
0x1c7 PUSH1 0x4
0x1c9 DUP3
0x1ca ADD
0x1cb MSTORE
0x1cc PUSH1 0x24
0x1ce ADD
0x1cf PUSH1 0x20
0x1d1 PUSH1 0x40
0x1d3 MLOAD
0x1d4 DUP1
0x1d5 DUP4
0x1d6 SUB
0x1d7 DUP2
0x1d8 PUSH1 0x0
0x1da DUP8
0x1db DUP1
0x1dc EXTCODESIZE
0x1dd ISZERO
0x1de ISZERO
0x1df PUSH2 0x1e7
0x1e2 JUMPI
---
0x17c: JUMPDEST 
0x17d: V143 = 0x2
0x17f: V144 = S[0x2]
0x180: V145 = 0x0
0x183: V146 = S[0x0]
0x184: V147 = 0x1
0x186: V148 = 0xa0
0x188: V149 = 0x2
0x18a: V150 = EXP 0x2 0xa0
0x18b: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x190: V153 = 0xa9059cbb
0x197: V154 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V155 = 0x70a08231
0x1a1: V156 = ADDRESS
0x1a3: V157 = 0x40
0x1a5: V158 = M[0x40]
0x1a6: V159 = 0x20
0x1a8: V160 = ADD 0x20 V158
0x1a9: M[V160] = 0x0
0x1aa: V161 = 0x40
0x1ac: V162 = M[0x40]
0x1ad: V163 = 0xe0
0x1af: V164 = 0x2
0x1b1: V165 = EXP 0x2 0xe0
0x1b2: V166 = 0xffffffff
0x1b8: V167 = AND 0x70a08231 0xffffffff
0x1b9: V168 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x1bb: M[V162] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1bc: V169 = 0x1
0x1be: V170 = 0xa0
0x1c0: V171 = 0x2
0x1c2: V172 = EXP 0x2 0xa0
0x1c3: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V174 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V175 = 0x4
0x1ca: V176 = ADD V162 0x4
0x1cb: M[V176] = V174
0x1cc: V177 = 0x24
0x1ce: V178 = ADD 0x24 V162
0x1cf: V179 = 0x20
0x1d1: V180 = 0x40
0x1d3: V181 = M[0x40]
0x1d6: V182 = SUB V178 V181
0x1d8: V183 = 0x0
0x1dc: V184 = EXTCODESIZE V152
0x1dd: V185 = ISZERO V184
0x1de: V186 = ISZERO V185
0x1df: V187 = 0x1e7
0x1e2: JUMPI 0x1e7 V186
---
Entry stack: [V12, 0x63]
Stack pops: 0
Stack additions: [V152, 0xa9059cbb, V154, V152, 0x70a08231, V178, 0x20, V181, V182, V181, 0x0, V152]
Exit stack: [V12, 0x63, V152, 0xa9059cbb, V154, V152, 0x70a08231, V178, 0x20, V181, V182, V181, 0x0, V152]

================================

Block 0x1e3
[0x1e3:0x1e6]
---
Predecessors: [0x17c]
Successors: []
---
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 REVERT
---
0x1e3: V188 = 0x0
0x1e6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x63, V152, 0xa9059cbb, V154, V152, 0x70a08231, V178, 0x20, V181, V182, V181, 0x0, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63, V152, 0xa9059cbb, V154, V152, 0x70a08231, V178, 0x20, V181, V182, V181, 0x0, V152]

================================

Block 0x1e7
[0x1e7:0x1f3]
---
Predecessors: [0x17c]
Successors: [0x1f4, 0x1f8]
---
0x1e7 JUMPDEST
0x1e8 PUSH2 0x2c6
0x1eb GAS
0x1ec SUB
0x1ed CALL
0x1ee ISZERO
0x1ef ISZERO
0x1f0 PUSH2 0x1f8
0x1f3 JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V189 = 0x2c6
0x1eb: V190 = GAS
0x1ec: V191 = SUB V190 0x2c6
0x1ed: V192 = CALL V191 V152 0x0 V181 V182 V181 0x20
0x1ee: V193 = ISZERO V192
0x1ef: V194 = ISZERO V193
0x1f0: V195 = 0x1f8
0x1f3: JUMPI 0x1f8 V194
---
Entry stack: [V12, 0x63, V152, 0xa9059cbb, V154, V152, 0x70a08231, V178, 0x20, V181, V182, V181, 0x0, V152]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x63, V152, 0xa9059cbb, V154, V152, 0x70a08231, V178]

================================

Block 0x1f4
[0x1f4:0x1f7]
---
Predecessors: [0x1e7]
Successors: []
---
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 REVERT
---
0x1f4: V196 = 0x0
0x1f7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x63, V152, 0xa9059cbb, V154, V152, 0x70a08231, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63, V152, 0xa9059cbb, V154, V152, 0x70a08231, V178]

================================

Block 0x1f8
[0x1f8:0x249]
---
Predecessors: [0x1e7]
Successors: [0x24a, 0x24e]
---
0x1f8 JUMPDEST
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff DUP1
0x200 MLOAD
0x201 SWAP1
0x202 POP
0x203 PUSH1 0x0
0x205 PUSH1 0x40
0x207 MLOAD
0x208 PUSH1 0x20
0x20a ADD
0x20b MSTORE
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0xe0
0x211 PUSH1 0x2
0x213 EXP
0x214 PUSH4 0xffffffff
0x219 DUP6
0x21a AND
0x21b MUL
0x21c DUP2
0x21d MSTORE
0x21e PUSH1 0x1
0x220 PUSH1 0xa0
0x222 PUSH1 0x2
0x224 EXP
0x225 SUB
0x226 SWAP1
0x227 SWAP3
0x228 AND
0x229 PUSH1 0x4
0x22b DUP4
0x22c ADD
0x22d MSTORE
0x22e PUSH1 0x24
0x230 DUP3
0x231 ADD
0x232 MSTORE
0x233 PUSH1 0x44
0x235 ADD
0x236 PUSH1 0x20
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP4
0x23d SUB
0x23e DUP2
0x23f PUSH1 0x0
0x241 DUP8
0x242 DUP1
0x243 EXTCODESIZE
0x244 ISZERO
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x1f8: JUMPDEST 
0x1fc: V197 = 0x40
0x1fe: V198 = M[0x40]
0x200: V199 = M[V198]
0x203: V200 = 0x0
0x205: V201 = 0x40
0x207: V202 = M[0x40]
0x208: V203 = 0x20
0x20a: V204 = ADD 0x20 V202
0x20b: M[V204] = 0x0
0x20c: V205 = 0x40
0x20e: V206 = M[0x40]
0x20f: V207 = 0xe0
0x211: V208 = 0x2
0x213: V209 = EXP 0x2 0xe0
0x214: V210 = 0xffffffff
0x21a: V211 = AND 0xa9059cbb 0xffffffff
0x21b: V212 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x21d: M[V206] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x21e: V213 = 0x1
0x220: V214 = 0xa0
0x222: V215 = 0x2
0x224: V216 = EXP 0x2 0xa0
0x225: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V218 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x229: V219 = 0x4
0x22c: V220 = ADD V206 0x4
0x22d: M[V220] = V218
0x22e: V221 = 0x24
0x231: V222 = ADD V206 0x24
0x232: M[V222] = V199
0x233: V223 = 0x44
0x235: V224 = ADD 0x44 V206
0x236: V225 = 0x20
0x238: V226 = 0x40
0x23a: V227 = M[0x40]
0x23d: V228 = SUB V224 V227
0x23f: V229 = 0x0
0x243: V230 = EXTCODESIZE V152
0x244: V231 = ISZERO V230
0x245: V232 = ISZERO V231
0x246: V233 = 0x24e
0x249: JUMPI 0x24e V232
---
Entry stack: [V12, 0x63, V152, 0xa9059cbb, V154, V152, 0x70a08231, V178]
Stack pops: 6
Stack additions: [S5, S4, V224, 0x20, V227, V228, V227, 0x0, S5]
Exit stack: [V12, 0x63, V152, 0xa9059cbb, V224, 0x20, V227, V228, V227, 0x0, V152]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x1f8]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V234 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x63, V152, 0xa9059cbb, V224, 0x20, V227, V228, V227, 0x0, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63, V152, 0xa9059cbb, V224, 0x20, V227, V228, V227, 0x0, V152]

================================

Block 0x24e
[0x24e:0x25a]
---
Predecessors: [0x1f8]
Successors: [0x25b, 0x25f]
---
0x24e JUMPDEST
0x24f PUSH2 0x2c6
0x252 GAS
0x253 SUB
0x254 CALL
0x255 ISZERO
0x256 ISZERO
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x24e: JUMPDEST 
0x24f: V235 = 0x2c6
0x252: V236 = GAS
0x253: V237 = SUB V236 0x2c6
0x254: V238 = CALL V237 V152 0x0 V227 V228 V227 0x20
0x255: V239 = ISZERO V238
0x256: V240 = ISZERO V239
0x257: V241 = 0x25f
0x25a: JUMPI 0x25f V240
---
Entry stack: [V12, 0x63, V152, 0xa9059cbb, V224, 0x20, V227, V228, V227, 0x0, V152]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x63, V152, 0xa9059cbb, V224]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x24e]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V242 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x63, V152, 0xa9059cbb, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63, V152, 0xa9059cbb, V224]

================================

Block 0x25f
[0x25f:0x26f]
---
Predecessors: [0x24e]
Successors: [0x60, 0x270]
---
0x25f JUMPDEST
0x260 POP
0x261 POP
0x262 POP
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 MLOAD
0x268 SWAP1
0x269 POP
0x26a ISZERO
0x26b ISZERO
0x26c PUSH2 0x60
0x26f JUMPI
---
0x25f: JUMPDEST 
0x263: V243 = 0x40
0x265: V244 = M[0x40]
0x267: V245 = M[V244]
0x26a: V246 = ISZERO V245
0x26b: V247 = ISZERO V246
0x26c: V248 = 0x60
0x26f: JUMPI 0x60 V247
---
Entry stack: [V12, 0x63, V152, 0xa9059cbb, V224]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x63]

================================

Block 0x270
[0x270:0x273]
---
Predecessors: [0x25f]
Successors: []
---
0x270 PUSH1 0x0
0x272 DUP1
0x273 REVERT
---
0x270: V249 = 0x0
0x273: REVERT 0x0 0x0
---
Entry stack: [V12, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63]

================================

Block 0x274
[0x274:0x274]
---
Predecessors: []
Successors: [0x275]
---
0x274 JUMPDEST
---
0x274: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x275
[0x275:0x276]
---
Predecessors: [0x274]
Successors: []
Has unresolved jump.
---
0x275 JUMPDEST
0x276 JUMP
---
0x275: JUMPDEST 
0x276: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x277
[0x277:0x28d]
---
Predecessors: [0x85]
Successors: [0x28e, 0x292]
---
0x277 JUMPDEST
0x278 PUSH1 0x0
0x27a SLOAD
0x27b CALLER
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 SWAP1
0x285 DUP2
0x286 AND
0x287 SWAP2
0x288 AND
0x289 EQ
0x28a PUSH2 0x292
0x28d JUMPI
---
0x277: JUMPDEST 
0x278: V250 = 0x0
0x27a: V251 = S[0x0]
0x27b: V252 = CALLER
0x27c: V253 = 0x1
0x27e: V254 = 0xa0
0x280: V255 = 0x2
0x282: V256 = EXP 0x2 0xa0
0x283: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x286: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x288: V259 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0x289: V260 = EQ V259 V258
0x28a: V261 = 0x292
0x28d: JUMPI 0x292 V260
---
Entry stack: [V12, 0x63, V50, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63, V50, V53]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x277]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V262 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V12, 0x63, V50, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63, V50, V53]

================================

Block 0x292
[0x292:0x2cf]
---
Predecessors: [0x277]
Successors: [0x2d0]
---
0x292 JUMPDEST
0x293 PUSH1 0x1
0x295 DUP1
0x296 SLOAD
0x297 PUSH1 0x1
0x299 PUSH1 0xa0
0x29b PUSH1 0x2
0x29d EXP
0x29e SUB
0x29f DUP1
0x2a0 DUP6
0x2a1 AND
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 NOT
0x2b8 SWAP3
0x2b9 DUP4
0x2ba AND
0x2bb OR
0x2bc SWAP1
0x2bd SWAP3
0x2be SSTORE
0x2bf PUSH1 0x2
0x2c1 DUP1
0x2c2 SLOAD
0x2c3 SWAP3
0x2c4 DUP5
0x2c5 AND
0x2c6 SWAP3
0x2c7 SWAP1
0x2c8 SWAP2
0x2c9 AND
0x2ca SWAP2
0x2cb SWAP1
0x2cc SWAP2
0x2cd OR
0x2ce SWAP1
0x2cf SSTORE
---
0x292: JUMPDEST 
0x293: V263 = 0x1
0x296: V264 = S[0x1]
0x297: V265 = 0x1
0x299: V266 = 0xa0
0x29b: V267 = 0x2
0x29d: V268 = EXP 0x2 0xa0
0x29e: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a1: V270 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0x2a2: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V272 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V273 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V264
0x2bb: V274 = OR V273 V270
0x2be: S[0x1] = V274
0x2bf: V275 = 0x2
0x2c2: V276 = S[0x2]
0x2c5: V277 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V278 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V276
0x2cd: V279 = OR V278 V277
0x2cf: S[0x2] = V279
---
Entry stack: [V12, 0x63, V50, V53]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x63, V50, V53]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x292]
Successors: [0x63]
---
0x2d0 JUMPDEST
0x2d1 POP
0x2d2 POP
0x2d3 JUMP
---
0x2d0: JUMPDEST 
0x2d3: JUMP 0x63
---
Entry stack: [V12, 0x63, V50, V53]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d4
[0x2d4:0x2e2]
---
Predecessors: [0xac]
Successors: [0xb4]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x1
0x2d7 SLOAD
0x2d8 PUSH1 0x1
0x2da PUSH1 0xa0
0x2dc PUSH1 0x2
0x2de EXP
0x2df SUB
0x2e0 AND
0x2e1 DUP2
0x2e2 JUMP
---
0x2d4: JUMPDEST 
0x2d5: V280 = 0x1
0x2d7: V281 = S[0x1]
0x2d8: V282 = 0x1
0x2da: V283 = 0xa0
0x2dc: V284 = 0x2
0x2de: V285 = EXP 0x2 0xa0
0x2df: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e0: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x2e2: JUMP 0xb4
---
Entry stack: [V12, 0xb4]
Stack pops: 1
Stack additions: [S0, V287]
Exit stack: [V12, 0xb4, V287]

================================

Block 0x2e3
[0x2e3:0x2f5]
---
Predecessors: [0xdb]
Successors: [0x2f6, 0x2fa]
---
0x2e3 JUMPDEST
0x2e4 PUSH1 0x1
0x2e6 SLOAD
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0xa0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee SUB
0x2ef AND
0x2f0 ISZERO
0x2f1 ISZERO
0x2f2 PUSH2 0x2fa
0x2f5 JUMPI
---
0x2e3: JUMPDEST 
0x2e4: V288 = 0x1
0x2e6: V289 = S[0x1]
0x2e7: V290 = 0x1
0x2e9: V291 = 0xa0
0x2eb: V292 = 0x2
0x2ed: V293 = EXP 0x2 0xa0
0x2ee: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ef: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x2f0: V296 = ISZERO V295
0x2f1: V297 = ISZERO V296
0x2f2: V298 = 0x2fa
0x2f5: JUMPI 0x2fa V297
---
Entry stack: [V12, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63]

================================

Block 0x2f6
[0x2f6:0x2f9]
---
Predecessors: [0x2e3]
Successors: []
---
0x2f6 PUSH1 0x0
0x2f8 DUP1
0x2f9 REVERT
---
0x2f6: V299 = 0x0
0x2f9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63]

================================

Block 0x2fa
[0x2fa:0x32a]
---
Predecessors: [0x2e3]
Successors: [0x60, 0x32b]
---
0x2fa JUMPDEST
0x2fb PUSH1 0x1
0x2fd SLOAD
0x2fe PUSH1 0x1
0x300 PUSH1 0xa0
0x302 PUSH1 0x2
0x304 EXP
0x305 SUB
0x306 SWAP1
0x307 DUP2
0x308 AND
0x309 SWAP1
0x30a ADDRESS
0x30b AND
0x30c BALANCE
0x30d PUSH1 0x40
0x30f MLOAD
0x310 PUSH1 0x0
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 DUP4
0x317 SUB
0x318 DUP2
0x319 DUP6
0x31a DUP8
0x31b PUSH2 0x8796
0x31e GAS
0x31f SUB
0x320 CALL
0x321 SWAP3
0x322 POP
0x323 POP
0x324 POP
0x325 ISZERO
0x326 ISZERO
0x327 PUSH2 0x60
0x32a JUMPI
---
0x2fa: JUMPDEST 
0x2fb: V300 = 0x1
0x2fd: V301 = S[0x1]
0x2fe: V302 = 0x1
0x300: V303 = 0xa0
0x302: V304 = 0x2
0x304: V305 = EXP 0x2 0xa0
0x305: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x30a: V308 = ADDRESS
0x30b: V309 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V310 = BALANCE V309
0x30d: V311 = 0x40
0x30f: V312 = M[0x40]
0x310: V313 = 0x0
0x312: V314 = 0x40
0x314: V315 = M[0x40]
0x317: V316 = SUB V312 V315
0x31b: V317 = 0x8796
0x31e: V318 = GAS
0x31f: V319 = SUB V318 0x8796
0x320: V320 = CALL V319 V307 V310 V315 V316 V315 0x0
0x325: V321 = ISZERO V320
0x326: V322 = ISZERO V321
0x327: V323 = 0x60
0x32a: JUMPI 0x60 V322
---
Entry stack: [V12, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63]

================================

Block 0x32b
[0x32b:0x32e]
---
Predecessors: [0x2fa]
Successors: []
---
0x32b PUSH1 0x0
0x32d DUP1
0x32e REVERT
---
0x32b: V324 = 0x0
0x32e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x63]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x63]

================================

Block 0x32f
[0x32f:0x32f]
---
Predecessors: []
Successors: [0x330]
---
0x32f JUMPDEST
---
0x32f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x330
[0x330:0x331]
---
Predecessors: [0x32f]
Successors: []
Has unresolved jump.
---
0x330 JUMPDEST
0x331 JUMP
---
0x330: JUMPDEST 
0x331: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x332
[0x332:0x340]
---
Predecessors: [0xf0]
Successors: [0xb4]
---
0x332 JUMPDEST
0x333 PUSH1 0x0
0x335 SLOAD
0x336 PUSH1 0x1
0x338 PUSH1 0xa0
0x33a PUSH1 0x2
0x33c EXP
0x33d SUB
0x33e AND
0x33f DUP2
0x340 JUMP
---
0x332: JUMPDEST 
0x333: V325 = 0x0
0x335: V326 = S[0x0]
0x336: V327 = 0x1
0x338: V328 = 0xa0
0x33a: V329 = 0x2
0x33c: V330 = EXP 0x2 0xa0
0x33d: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33e: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x340: JUMP 0xb4
---
Entry stack: [V12, 0xb4]
Stack pops: 1
Stack additions: [S0, V332]
Exit stack: [V12, 0xb4, V332]

================================

Block 0x341
[0x341:0x34f]
---
Predecessors: [0x11f]
Successors: [0xb4]
---
0x341 JUMPDEST
0x342 PUSH1 0x2
0x344 SLOAD
0x345 PUSH1 0x1
0x347 PUSH1 0xa0
0x349 PUSH1 0x2
0x34b EXP
0x34c SUB
0x34d AND
0x34e DUP2
0x34f JUMP
---
0x341: JUMPDEST 
0x342: V333 = 0x2
0x344: V334 = S[0x2]
0x345: V335 = 0x1
0x347: V336 = 0xa0
0x349: V337 = 0x2
0x34b: V338 = EXP 0x2 0xa0
0x34c: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34d: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x34f: JUMP 0xb4
---
Entry stack: [V12, 0xb4]
Stack pops: 1
Stack additions: [S0, V340]
Exit stack: [V12, 0xb4, V340]

================================

Block 0x350
[0x350:0x37e]
---
Predecessors: []
Successors: []
---
0x350 STOP
0x351 LOG1
0x352 PUSH6 0x627a7a723058
0x359 SHA3
0x35a GT
0x35b MISSING 0xa9
0x35c PUSH1 0x80
0x35e MISSING 0x22
0x35f MISSING 0xd4
0x360 MISSING 0xfc
0x361 MISSING 0xb9
0x362 SHL
0x363 MISSING 0xf6
0x364 SWAP1
0x365 EQ
0x366 MISSING 0xd0
0x367 SWAP4
0x368 MISSING 0xbb
0x369 MISSING 0x5e
0x36a MISSING 0x1e
0x36b MISSING 0x25
0x36c PUSH18 0x2070a7a0add5432f19fbcde6330029
---
0x350: STOP 
0x351: LOG S0 S1 S2
0x352: V341 = 0x627a7a723058
0x359: V342 = SHA3 0x627a7a723058 S3
0x35a: V343 = GT V342 S4
0x35b: MISSING 0xa9
0x35c: V344 = 0x80
0x35e: MISSING 0x22
0x35f: MISSING 0xd4
0x360: MISSING 0xfc
0x361: MISSING 0xb9
0x362: V345 = SHL S0 S1
0x363: MISSING 0xf6
0x365: V346 = EQ S1 S0
0x366: MISSING 0xd0
0x368: MISSING 0xbb
0x369: MISSING 0x5e
0x36a: MISSING 0x1e
0x36b: MISSING 0x25
0x36c: V347 = 0x2070a7a0add5432f19fbcde6330029
---
Entry stack: []
Stack pops: 0
Stack additions: [V343, 0x80, V345, V346, S4, S1, S2, S3, S0, 0x2070a7a0add5432f19fbcde6330029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x65
Exit block: 0x63
Body: 0x60, 0x61, 0x63, 0x65, 0x6c, 0x70, 0x143, 0x178, 0x17c, 0x1e3, 0x1e7, 0x1f4, 0x1f8, 0x24a, 0x24e, 0x25b, 0x25f, 0x270

Function 1:
Public function signature: 0x471efe66
Entry block: 0x7a
Exit block: 0x63
Body: 0x63, 0x7a, 0x81, 0x85, 0x277, 0x28e, 0x292, 0x2d0

Function 2:
Public function signature: 0x6ad1fe02
Entry block: 0xa1
Exit block: 0xb4
Body: 0xa1, 0xa8, 0xac, 0xb4, 0x2d4

Function 3:
Public function signature: 0xa6f2ae3a
Entry block: 0xd0
Exit block: 0x63
Body: 0x60, 0x61, 0x63, 0xd0, 0xd7, 0xdb, 0x2e3, 0x2f6, 0x2fa, 0x32b

Function 4:
Public function signature: 0xca4b208b
Entry block: 0xe5
Exit block: 0xb4
Body: 0xb4, 0xe5, 0xec, 0xf0, 0x332

Function 5:
Public function signature: 0xfc0c546a
Entry block: 0x114
Exit block: 0xb4
Body: 0xb4, 0x114, 0x11b, 0x11f, 0x341

Function 6:
Public fallback function
Entry block: 0x5c
Exit block: 0x63
Body: 0x5c, 0x60, 0x61, 0x63

