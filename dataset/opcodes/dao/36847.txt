Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x11b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x11b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0x11b
0x3f: JUMPI 0x11b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x1a5]
---
0x40 DUP1
0x41 PUSH4 0x10639ea0
0x46 EQ
0x47 PUSH2 0x1a5
0x4a JUMPI
---
0x41: V15 = 0x10639ea0
0x46: V16 = EQ 0x10639ea0 V11
0x47: V17 = 0x1a5
0x4a: JUMPI 0x1a5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1ce]
---
0x4b DUP1
0x4c PUSH4 0x200d2ed2
0x51 EQ
0x52 PUSH2 0x1ce
0x55 JUMPI
---
0x4c: V18 = 0x200d2ed2
0x51: V19 = EQ 0x200d2ed2 V11
0x52: V20 = 0x1ce
0x55: JUMPI 0x1ce V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x20f]
---
0x56 DUP1
0x57 PUSH4 0x66d38203
0x5c EQ
0x5d PUSH2 0x20f
0x60 JUMPI
---
0x57: V21 = 0x66d38203
0x5c: V22 = EQ 0x66d38203 V11
0x5d: V23 = 0x20f
0x60: JUMPI 0x20f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x232]
---
0x61 DUP1
0x62 PUSH4 0x88d761f2
0x67 EQ
0x68 PUSH2 0x232
0x6b JUMPI
---
0x62: V24 = 0x88d761f2
0x67: V25 = EQ 0x88d761f2 V11
0x68: V26 = 0x232
0x6b: JUMPI 0x232 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x247]
---
0x6c DUP1
0x6d PUSH4 0xa0f52da0
0x72 EQ
0x73 PUSH2 0x247
0x76 JUMPI
---
0x6d: V27 = 0xa0f52da0
0x72: V28 = EQ 0xa0f52da0 V11
0x73: V29 = 0x247
0x76: JUMPI 0x247 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x268]
---
0x77 DUP1
0x78 PUSH4 0xd0e30db0
0x7d EQ
0x7e PUSH2 0x268
0x81 JUMPI
---
0x78: V30 = 0xd0e30db0
0x7d: V31 = EQ 0xd0e30db0 V11
0x7e: V32 = 0x268
0x81: JUMPI 0x268 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0xe7]
---
Predecessors: [0x0, 0x77]
Successors: [0xe8, 0xec]
---
0x82 JUMPDEST
0x83 PUSH1 0x1
0x85 SLOAD
0x86 PUSH1 0x40
0x88 DUP1
0x89 MLOAD
0x8a PUSH32 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xab DUP2
0xac MSTORE
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP1
0xb6 SWAP3
0xb7 AND
0xb8 PUSH1 0x4
0xba DUP4
0xbb ADD
0xbc DUP2
0xbd SWAP1
0xbe MSTORE
0xbf SWAP1
0xc0 MLOAD
0xc1 SWAP1
0xc2 SWAP2
0xc3 PUSH4 0xf340fa01
0xc8 SWAP2
0xc9 ADDRESS
0xca BALANCE
0xcb SWAP2
0xcc PUSH1 0x24
0xce DUP1
0xcf DUP3
0xd0 ADD
0xd1 SWAP3
0xd2 PUSH1 0x20
0xd4 SWAP3
0xd5 SWAP1
0xd6 SWAP2
0xd7 SWAP1
0xd8 DUP3
0xd9 SWAP1
0xda SUB
0xdb ADD
0xdc DUP2
0xdd DUP6
0xde DUP9
0xdf DUP1
0xe0 EXTCODESIZE
0xe1 ISZERO
0xe2 DUP1
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0x82: JUMPDEST 
0x83: V33 = 0x1
0x85: V34 = S[0x1]
0x86: V35 = 0x40
0x89: V36 = M[0x40]
0x8a: V37 = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xac: M[V36] = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xad: V38 = 0x1
0xaf: V39 = 0xa0
0xb1: V40 = 0x2
0xb3: V41 = EXP 0x2 0xa0
0xb4: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V43 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V44 = 0x4
0xbb: V45 = ADD V36 0x4
0xbe: M[V45] = V43
0xc0: V46 = M[0x40]
0xc3: V47 = 0xf340fa01
0xc9: V48 = ADDRESS
0xca: V49 = BALANCE V48
0xcc: V50 = 0x24
0xd0: V51 = ADD V36 0x24
0xd2: V52 = 0x20
0xda: V53 = SUB V36 V46
0xdb: V54 = ADD V53 0x24
0xe0: V55 = EXTCODESIZE V43
0xe1: V56 = ISZERO V55
0xe3: V57 = ISZERO V56
0xe4: V58 = 0xec
0xe7: JUMPI 0xec V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Exit stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0x82]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V59 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]

================================

Block 0xec
[0xec:0xf6]
---
Predecessors: [0x82]
Successors: [0xf7, 0x100]
---
0xec JUMPDEST
0xed POP
0xee GAS
0xef CALL
0xf0 ISZERO
0xf1 DUP1
0xf2 ISZERO
0xf3 PUSH2 0x100
0xf6 JUMPI
---
0xec: JUMPDEST 
0xee: V60 = GAS
0xef: V61 = CALL V60 V43 V49 V46 V54 V46 0x20
0xf0: V62 = ISZERO V61
0xf2: V63 = ISZERO V62
0xf3: V64 = 0x100
0xf6: JUMPI 0x100 V63
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Stack pops: 7
Stack additions: [V62]
Exit stack: [V11, V43, 0xf340fa01, V49, V51, V62]

================================

Block 0xf7
[0xf7:0xff]
---
Predecessors: [0xec]
Successors: []
---
0xf7 RETURNDATASIZE
0xf8 PUSH1 0x0
0xfa DUP1
0xfb RETURNDATACOPY
0xfc RETURNDATASIZE
0xfd PUSH1 0x0
0xff REVERT
---
0xf7: V65 = RETURNDATASIZE
0xf8: V66 = 0x0
0xfb: RETURNDATACOPY 0x0 0x0 V65
0xfc: V67 = RETURNDATASIZE
0xfd: V68 = 0x0
0xff: REVERT 0x0 V67
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0xf340fa01, V49, V51, V62]

================================

Block 0x100
[0x100:0x112]
---
Predecessors: [0xec]
Successors: [0x113, 0x117]
---
0x100 JUMPDEST
0x101 POP
0x102 POP
0x103 POP
0x104 POP
0x105 POP
0x106 PUSH1 0x40
0x108 MLOAD
0x109 RETURNDATASIZE
0x10a PUSH1 0x20
0x10c DUP2
0x10d LT
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x100: JUMPDEST 
0x106: V69 = 0x40
0x108: V70 = M[0x40]
0x109: V71 = RETURNDATASIZE
0x10a: V72 = 0x20
0x10d: V73 = LT V71 0x20
0x10e: V74 = ISZERO V73
0x10f: V75 = 0x117
0x112: JUMPI 0x117 V74
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, V62]
Stack pops: 5
Stack additions: [V70, V71]
Exit stack: [V11, V70, V71]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x100]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V76 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V11, V70, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70, V71]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x100]
Successors: []
---
0x117 JUMPDEST
0x118 POP
0x119 POP
0x11a STOP
---
0x117: JUMPDEST 
0x11a: STOP 
---
Entry stack: [V11, V70, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0xd]
Successors: [0x123, 0x127]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d DUP1
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11b: JUMPDEST 
0x11c: V77 = CALLVALUE
0x11e: V78 = ISZERO V77
0x11f: V79 = 0x127
0x122: JUMPI 0x127 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11b]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V80 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x127
[0x127:0x12f]
---
Predecessors: [0x11b]
Successors: [0x270]
---
0x127 JUMPDEST
0x128 POP
0x129 PUSH2 0x130
0x12c PUSH2 0x270
0x12f JUMP
---
0x127: JUMPDEST 
0x129: V81 = 0x130
0x12c: V82 = 0x270
0x12f: JUMP 0x270
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x130]
Exit stack: [V11, 0x130]

================================

Block 0x130
[0x130:0x151]
---
Predecessors: [0x2f6]
Successors: [0x152]
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x20
0x137 DUP1
0x138 DUP3
0x139 MSTORE
0x13a DUP4
0x13b MLOAD
0x13c DUP2
0x13d DUP4
0x13e ADD
0x13f MSTORE
0x140 DUP4
0x141 MLOAD
0x142 SWAP2
0x143 SWAP3
0x144 DUP4
0x145 SWAP3
0x146 SWAP1
0x147 DUP4
0x148 ADD
0x149 SWAP2
0x14a DUP6
0x14b ADD
0x14c SWAP1
0x14d DUP1
0x14e DUP4
0x14f DUP4
0x150 PUSH1 0x0
---
0x130: JUMPDEST 
0x131: V83 = 0x40
0x134: V84 = M[0x40]
0x135: V85 = 0x20
0x139: M[V84] = 0x20
0x13b: V86 = M[V198]
0x13e: V87 = ADD V84 0x20
0x13f: M[V87] = V86
0x141: V88 = M[V198]
0x148: V89 = ADD V84 0x40
0x14b: V90 = ADD V198 0x20
0x150: V91 = 0x0
---
Entry stack: [V11, 0x130, V198]
Stack pops: 1
Stack additions: [S0, V84, V84, V89, V90, V88, V88, V89, V90, 0x0]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, 0x0]

================================

Block 0x152
[0x152:0x15a]
---
Predecessors: [0x130, 0x15b]
Successors: [0x15b, 0x16a]
---
0x152 JUMPDEST
0x153 DUP4
0x154 DUP2
0x155 LT
0x156 ISZERO
0x157 PUSH2 0x16a
0x15a JUMPI
---
0x152: JUMPDEST 
0x155: V92 = LT S0 V88
0x156: V93 = ISZERO V92
0x157: V94 = 0x16a
0x15a: JUMPI 0x16a V93
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]

================================

Block 0x15b
[0x15b:0x169]
---
Predecessors: [0x152]
Successors: [0x152]
---
0x15b DUP2
0x15c DUP2
0x15d ADD
0x15e MLOAD
0x15f DUP4
0x160 DUP3
0x161 ADD
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 PUSH2 0x152
0x169 JUMP
---
0x15d: V95 = ADD S0 V90
0x15e: V96 = M[V95]
0x161: V97 = ADD S0 V89
0x162: M[V97] = V96
0x163: V98 = 0x20
0x165: V99 = ADD 0x20 S0
0x166: V100 = 0x152
0x169: JUMP 0x152
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 3
Stack additions: [S2, S1, V99]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, V99]

================================

Block 0x16a
[0x16a:0x17d]
---
Predecessors: [0x152]
Successors: [0x17e, 0x197]
---
0x16a JUMPDEST
0x16b POP
0x16c POP
0x16d POP
0x16e POP
0x16f SWAP1
0x170 POP
0x171 SWAP1
0x172 DUP2
0x173 ADD
0x174 SWAP1
0x175 PUSH1 0x1f
0x177 AND
0x178 DUP1
0x179 ISZERO
0x17a PUSH2 0x197
0x17d JUMPI
---
0x16a: JUMPDEST 
0x173: V101 = ADD V88 V89
0x175: V102 = 0x1f
0x177: V103 = AND 0x1f V88
0x179: V104 = ISZERO V103
0x17a: V105 = 0x197
0x17d: JUMPI 0x197 V104
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 7
Stack additions: [V101, V103]
Exit stack: [V11, 0x130, V198, V84, V84, V101, V103]

================================

Block 0x17e
[0x17e:0x196]
---
Predecessors: [0x16a]
Successors: [0x197]
---
0x17e DUP1
0x17f DUP3
0x180 SUB
0x181 DUP1
0x182 MLOAD
0x183 PUSH1 0x1
0x185 DUP4
0x186 PUSH1 0x20
0x188 SUB
0x189 PUSH2 0x100
0x18c EXP
0x18d SUB
0x18e NOT
0x18f AND
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP2
0x196 POP
---
0x180: V106 = SUB V101 V103
0x182: V107 = M[V106]
0x183: V108 = 0x1
0x186: V109 = 0x20
0x188: V110 = SUB 0x20 V103
0x189: V111 = 0x100
0x18c: V112 = EXP 0x100 V110
0x18d: V113 = SUB V112 0x1
0x18e: V114 = NOT V113
0x18f: V115 = AND V114 V107
0x191: M[V106] = V115
0x192: V116 = 0x20
0x194: V117 = ADD 0x20 V106
---
Entry stack: [V11, 0x130, V198, V84, V84, V101, V103]
Stack pops: 2
Stack additions: [V117, S0]
Exit stack: [V11, 0x130, V198, V84, V84, V117, V103]

================================

Block 0x197
[0x197:0x1a4]
---
Predecessors: [0x16a, 0x17e]
Successors: []
---
0x197 JUMPDEST
0x198 POP
0x199 SWAP3
0x19a POP
0x19b POP
0x19c POP
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 DUP1
0x1a1 SWAP2
0x1a2 SUB
0x1a3 SWAP1
0x1a4 RETURN
---
0x197: JUMPDEST 
0x19d: V118 = 0x40
0x19f: V119 = M[0x40]
0x1a2: V120 = SUB S1 V119
0x1a4: RETURN V119 V120
---
Entry stack: [V11, 0x130, V198, V84, V84, S1, V103]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x130]

================================

Block 0x1a5
[0x1a5:0x1ac]
---
Predecessors: [0x40]
Successors: [0x1ad, 0x1b1]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 DUP1
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V121 = CALLVALUE
0x1a8: V122 = ISZERO V121
0x1a9: V123 = 0x1b1
0x1ac: JUMPI 0x1b1 V122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V121]
Exit stack: [V11, V121]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V124 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V11, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V121]

================================

Block 0x1b1
[0x1b1:0x1b9]
---
Predecessors: [0x1a5]
Successors: [0x2fe]
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x2fe
0x1b9 JUMP
---
0x1b1: JUMPDEST 
0x1b3: V125 = 0x1ba
0x1b6: V126 = 0x2fe
0x1b9: JUMP 0x2fe
---
Entry stack: [V11, V121]
Stack pops: 1
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1cd]
---
Predecessors: [0x3af, 0x5a6, 0x750, 0x94c]
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd DUP1
0x1be MLOAD
0x1bf SWAP2
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 DUP3
0x1c3 MSTORE
0x1c4 MLOAD
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 SWAP1
0x1c8 SUB
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd RETURN
---
0x1ba: JUMPDEST 
0x1bb: V127 = 0x40
0x1be: V128 = M[0x40]
0x1c0: V129 = ISZERO {0x0, 0x1}
0x1c1: V130 = ISZERO V129
0x1c3: M[V128] = V130
0x1c4: V131 = M[0x40]
0x1c8: V132 = SUB V128 V131
0x1c9: V133 = 0x20
0x1cb: V134 = ADD 0x20 V132
0x1cd: RETURN V131 V134
---
Entry stack: [V11, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x4b]
Successors: [0x1d6, 0x1da]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 DUP1
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V135 = CALLVALUE
0x1d1: V136 = ISZERO V135
0x1d2: V137 = 0x1da
0x1d5: JUMPI 0x1da V136
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V135]
Exit stack: [V11, V135]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V138 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V11, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V135]

================================

Block 0x1da
[0x1da:0x1e2]
---
Predecessors: [0x1ce]
Successors: [0x3d2]
---
0x1da JUMPDEST
0x1db POP
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x3d2
0x1e2 JUMP
---
0x1da: JUMPDEST 
0x1dc: V139 = 0x1e3
0x1df: V140 = 0x3d2
0x1e2: JUMP 0x3d2
---
Entry stack: [V11, V135]
Stack pops: 1
Stack additions: [0x1e3]
Exit stack: [V11, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x20e]
---
Predecessors: [0x3d2]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 DUP1
0x1e7 MLOAD
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 SWAP5
0x1f1 DUP6
0x1f2 AND
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 SWAP3
0x1f6 SWAP1
0x1f7 SWAP4
0x1f8 AND
0x1f9 PUSH1 0x20
0x1fb DUP4
0x1fc ADD
0x1fd MSTORE
0x1fe ISZERO
0x1ff ISZERO
0x200 DUP2
0x201 DUP4
0x202 ADD
0x203 MSTORE
0x204 SWAP1
0x205 MLOAD
0x206 SWAP1
0x207 DUP2
0x208 SWAP1
0x209 SUB
0x20a PUSH1 0x60
0x20c ADD
0x20d SWAP1
0x20e RETURN
---
0x1e3: JUMPDEST 
0x1e4: V141 = 0x40
0x1e7: V142 = M[0x40]
0x1e8: V143 = 0x1
0x1ea: V144 = 0xa0
0x1ec: V145 = 0x2
0x1ee: V146 = EXP 0x2 0xa0
0x1ef: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x1f4: M[V142] = V148
0x1f8: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x1f9: V150 = 0x20
0x1fc: V151 = ADD V142 0x20
0x1fd: M[V151] = V149
0x1fe: V152 = ISZERO V306
0x1ff: V153 = ISZERO V152
0x202: V154 = ADD 0x40 V142
0x203: M[V154] = V153
0x205: V155 = M[0x40]
0x209: V156 = SUB V142 V155
0x20a: V157 = 0x60
0x20c: V158 = ADD 0x60 V156
0x20e: RETURN V155 V158
---
Entry stack: [V11, V301, V302, V306]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x216]
---
Predecessors: [0x56]
Successors: [0x217, 0x21b]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 DUP1
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x20f: JUMPDEST 
0x210: V159 = CALLVALUE
0x212: V160 = ISZERO V159
0x213: V161 = 0x21b
0x216: JUMPI 0x21b V160
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V159]
Exit stack: [V11, V159]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x20f]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V162 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V11, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V159]

================================

Block 0x21b
[0x21b:0x22f]
---
Predecessors: [0x20f]
Successors: [0x40b]
---
0x21b JUMPDEST
0x21c POP
0x21d PUSH2 0x230
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 PUSH1 0x4
0x22a CALLDATALOAD
0x22b AND
0x22c PUSH2 0x40b
0x22f JUMP
---
0x21b: JUMPDEST 
0x21d: V163 = 0x230
0x220: V164 = 0x1
0x222: V165 = 0xa0
0x224: V166 = 0x2
0x226: V167 = EXP 0x2 0xa0
0x227: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V169 = 0x4
0x22a: V170 = CALLDATALOAD 0x4
0x22b: V171 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V172 = 0x40b
0x22f: JUMP 0x40b
---
Entry stack: [V11, V159]
Stack pops: 1
Stack additions: [0x230, V171]
Exit stack: [V11, 0x230, V171]

================================

Block 0x230
[0x230:0x231]
---
Predecessors: [0x4a8]
Successors: []
---
0x230 JUMPDEST
0x231 STOP
---
0x230: JUMPDEST 
0x231: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x232
[0x232:0x239]
---
Predecessors: [0x61]
Successors: [0x23a, 0x23e]
---
0x232 JUMPDEST
0x233 CALLVALUE
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x232: JUMPDEST 
0x233: V173 = CALLVALUE
0x235: V174 = ISZERO V173
0x236: V175 = 0x23e
0x239: JUMPI 0x23e V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V173]
Exit stack: [V11, V173]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x232]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V176 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V11, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V173]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x232]
Successors: [0x4f5]
---
0x23e JUMPDEST
0x23f POP
0x240 PUSH2 0x1ba
0x243 PUSH2 0x4f5
0x246 JUMP
---
0x23e: JUMPDEST 
0x240: V177 = 0x1ba
0x243: V178 = 0x4f5
0x246: JUMP 0x4f5
---
Entry stack: [V11, V173]
Stack pops: 1
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x6c]
Successors: [0x24f, 0x253]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x247: JUMPDEST 
0x248: V179 = CALLVALUE
0x24a: V180 = ISZERO V179
0x24b: V181 = 0x253
0x24e: JUMPI 0x253 V180
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V11, V179]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x247]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V182 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V11, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V179]

================================

Block 0x253
[0x253:0x267]
---
Predecessors: [0x247]
Successors: [0x5de]
---
0x253 JUMPDEST
0x254 POP
0x255 PUSH2 0x1ba
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 PUSH1 0x4
0x262 CALLDATALOAD
0x263 AND
0x264 PUSH2 0x5de
0x267 JUMP
---
0x253: JUMPDEST 
0x255: V183 = 0x1ba
0x258: V184 = 0x1
0x25a: V185 = 0xa0
0x25c: V186 = 0x2
0x25e: V187 = EXP 0x2 0xa0
0x25f: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x260: V189 = 0x4
0x262: V190 = CALLDATALOAD 0x4
0x263: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x264: V192 = 0x5de
0x267: JUMP 0x5de
---
Entry stack: [V11, V179]
Stack pops: 1
Stack additions: [0x1ba, V191]
Exit stack: [V11, 0x1ba, V191]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x77]
Successors: [0x755]
---
0x268 JUMPDEST
0x269 PUSH2 0x1ba
0x26c PUSH2 0x755
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V193 = 0x1ba
0x26c: V194 = 0x755
0x26f: JUMP 0x755
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x270
[0x270:0x2af]
---
Predecessors: [0x127]
Successors: [0x2b0, 0x2f6]
---
0x270 JUMPDEST
0x271 PUSH1 0x0
0x273 DUP1
0x274 SLOAD
0x275 PUSH1 0x40
0x277 DUP1
0x278 MLOAD
0x279 PUSH1 0x20
0x27b PUSH1 0x2
0x27d PUSH1 0x1
0x27f DUP6
0x280 AND
0x281 ISZERO
0x282 PUSH2 0x100
0x285 MUL
0x286 PUSH1 0x0
0x288 NOT
0x289 ADD
0x28a SWAP1
0x28b SWAP5
0x28c AND
0x28d SWAP4
0x28e SWAP1
0x28f SWAP4
0x290 DIV
0x291 PUSH1 0x1f
0x293 DUP2
0x294 ADD
0x295 DUP5
0x296 SWAP1
0x297 DIV
0x298 DUP5
0x299 MUL
0x29a DUP3
0x29b ADD
0x29c DUP5
0x29d ADD
0x29e SWAP1
0x29f SWAP3
0x2a0 MSTORE
0x2a1 DUP2
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 SWAP3
0x2a5 SWAP2
0x2a6 DUP4
0x2a7 ADD
0x2a8 DUP3
0x2a9 DUP3
0x2aa DUP1
0x2ab ISZERO
0x2ac PUSH2 0x2f6
0x2af JUMPI
---
0x270: JUMPDEST 
0x271: V195 = 0x0
0x274: V196 = S[0x0]
0x275: V197 = 0x40
0x278: V198 = M[0x40]
0x279: V199 = 0x20
0x27b: V200 = 0x2
0x27d: V201 = 0x1
0x280: V202 = AND V196 0x1
0x281: V203 = ISZERO V202
0x282: V204 = 0x100
0x285: V205 = MUL 0x100 V203
0x286: V206 = 0x0
0x288: V207 = NOT 0x0
0x289: V208 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V205
0x28c: V209 = AND V196 V208
0x290: V210 = DIV V209 0x2
0x291: V211 = 0x1f
0x294: V212 = ADD V210 0x1f
0x297: V213 = DIV V212 0x20
0x299: V214 = MUL 0x20 V213
0x29b: V215 = ADD V198 V214
0x29d: V216 = ADD 0x20 V215
0x2a0: M[0x40] = V216
0x2a3: M[V198] = V210
0x2a7: V217 = ADD V198 0x20
0x2ab: V218 = ISZERO V210
0x2ac: V219 = 0x2f6
0x2af: JUMPI 0x2f6 V218
---
Entry stack: [V11, 0x130]
Stack pops: 0
Stack additions: [V198, 0x0, V210, V217, 0x0, V210]
Exit stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]

================================

Block 0x2b0
[0x2b0:0x2b7]
---
Predecessors: [0x270]
Successors: [0x2b8, 0x2cb]
---
0x2b0 DUP1
0x2b1 PUSH1 0x1f
0x2b3 LT
0x2b4 PUSH2 0x2cb
0x2b7 JUMPI
---
0x2b1: V220 = 0x1f
0x2b3: V221 = LT 0x1f V210
0x2b4: V222 = 0x2cb
0x2b7: JUMPI 0x2cb V221
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]

================================

Block 0x2b8
[0x2b8:0x2ca]
---
Predecessors: [0x2b0]
Successors: [0x2f6]
---
0x2b8 PUSH2 0x100
0x2bb DUP1
0x2bc DUP4
0x2bd SLOAD
0x2be DIV
0x2bf MUL
0x2c0 DUP4
0x2c1 MSTORE
0x2c2 SWAP2
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 SWAP2
0x2c7 PUSH2 0x2f6
0x2ca JUMP
---
0x2b8: V223 = 0x100
0x2bd: V224 = S[0x0]
0x2be: V225 = DIV V224 0x100
0x2bf: V226 = MUL V225 0x100
0x2c1: M[V217] = V226
0x2c3: V227 = 0x20
0x2c5: V228 = ADD 0x20 V217
0x2c7: V229 = 0x2f6
0x2ca: JUMP 0x2f6
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 3
Stack additions: [V228, S1, S0]
Exit stack: [V11, 0x130, V198, 0x0, V210, V228, 0x0, V210]

================================

Block 0x2cb
[0x2cb:0x2d8]
---
Predecessors: [0x2b0]
Successors: [0x2d9]
---
0x2cb JUMPDEST
0x2cc DUP3
0x2cd ADD
0x2ce SWAP2
0x2cf SWAP1
0x2d0 PUSH1 0x0
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 PUSH1 0x0
0x2d7 SHA3
0x2d8 SWAP1
---
0x2cb: JUMPDEST 
0x2cd: V230 = ADD V217 V210
0x2d0: V231 = 0x0
0x2d2: M[0x0] = 0x0
0x2d3: V232 = 0x20
0x2d5: V233 = 0x0
0x2d7: V234 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 3
Stack additions: [V230, V234, S2]
Exit stack: [V11, 0x130, V198, 0x0, V210, V230, V234, V217]

================================

Block 0x2d9
[0x2d9:0x2ec]
---
Predecessors: [0x2cb, 0x2d9]
Successors: [0x2d9, 0x2ed]
---
0x2d9 JUMPDEST
0x2da DUP2
0x2db SLOAD
0x2dc DUP2
0x2dd MSTORE
0x2de SWAP1
0x2df PUSH1 0x1
0x2e1 ADD
0x2e2 SWAP1
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 DUP1
0x2e7 DUP4
0x2e8 GT
0x2e9 PUSH2 0x2d9
0x2ec JUMPI
---
0x2d9: JUMPDEST 
0x2db: V235 = S[S1]
0x2dd: M[S0] = V235
0x2df: V236 = 0x1
0x2e1: V237 = ADD 0x1 S1
0x2e3: V238 = 0x20
0x2e5: V239 = ADD 0x20 S0
0x2e8: V240 = GT V230 V239
0x2e9: V241 = 0x2d9
0x2ec: JUMPI 0x2d9 V240
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V230, S1, S0]
Stack pops: 3
Stack additions: [S2, V237, V239]
Exit stack: [V11, 0x130, V198, 0x0, V210, V230, V237, V239]

================================

Block 0x2ed
[0x2ed:0x2f5]
---
Predecessors: [0x2d9]
Successors: [0x2f6]
---
0x2ed DUP3
0x2ee SWAP1
0x2ef SUB
0x2f0 PUSH1 0x1f
0x2f2 AND
0x2f3 DUP3
0x2f4 ADD
0x2f5 SWAP2
---
0x2ef: V242 = SUB V239 V230
0x2f0: V243 = 0x1f
0x2f2: V244 = AND 0x1f V242
0x2f4: V245 = ADD V230 V244
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V230, V237, V239]
Stack pops: 3
Stack additions: [V245, S1, S2]
Exit stack: [V11, 0x130, V198, 0x0, V210, V245, V237, V230]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0x270, 0x2b8, 0x2ed]
Successors: [0x130]
---
0x2f6 JUMPDEST
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc DUP2
0x2fd JUMP
---
0x2f6: JUMPDEST 
0x2fd: JUMP 0x130
---
Entry stack: [V11, 0x130, V198, 0x0, V210, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x130, V198]

================================

Block 0x2fe
[0x2fe:0x313]
---
Predecessors: [0x1b1]
Successors: [0x314, 0x3af]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x1
0x301 SLOAD
0x302 PUSH1 0x0
0x304 SWAP1
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d AND
0x30e CALLER
0x30f EQ
0x310 PUSH2 0x3af
0x313 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V246 = 0x1
0x301: V247 = S[0x1]
0x302: V248 = 0x0
0x305: V249 = 0x1
0x307: V250 = 0xa0
0x309: V251 = 0x2
0x30b: V252 = EXP 0x2 0xa0
0x30c: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x30e: V255 = CALLER
0x30f: V256 = EQ V255 V254
0x310: V257 = 0x3af
0x313: JUMPI 0x3af V256
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x314
[0x314:0x3ae]
---
Predecessors: [0x2fe]
Successors: []
---
0x314 PUSH1 0x40
0x316 DUP1
0x317 MLOAD
0x318 PUSH1 0xe5
0x31a PUSH1 0x2
0x31c EXP
0x31d PUSH3 0x461bcd
0x321 MUL
0x322 DUP2
0x323 MSTORE
0x324 PUSH1 0x20
0x326 PUSH1 0x4
0x328 DUP3
0x329 ADD
0x32a MSTORE
0x32b PUSH1 0x47
0x32d PUSH1 0x24
0x32f DUP3
0x330 ADD
0x331 MSTORE
0x332 PUSH32 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x353 PUSH1 0x44
0x355 DUP3
0x356 ADD
0x357 MSTORE
0x358 PUSH32 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x379 PUSH1 0x64
0x37b DUP3
0x37c ADD
0x37d MSTORE
0x37e PUSH32 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x39f PUSH1 0x84
0x3a1 DUP3
0x3a2 ADD
0x3a3 MSTORE
0x3a4 SWAP1
0x3a5 MLOAD
0x3a6 SWAP1
0x3a7 DUP2
0x3a8 SWAP1
0x3a9 SUB
0x3aa PUSH1 0xa4
0x3ac ADD
0x3ad SWAP1
0x3ae REVERT
---
0x314: V258 = 0x40
0x317: V259 = M[0x40]
0x318: V260 = 0xe5
0x31a: V261 = 0x2
0x31c: V262 = EXP 0x2 0xe5
0x31d: V263 = 0x461bcd
0x321: V264 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x323: M[V259] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x324: V265 = 0x20
0x326: V266 = 0x4
0x329: V267 = ADD V259 0x4
0x32a: M[V267] = 0x20
0x32b: V268 = 0x47
0x32d: V269 = 0x24
0x330: V270 = ADD V259 0x24
0x331: M[V270] = 0x47
0x332: V271 = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x353: V272 = 0x44
0x356: V273 = ADD V259 0x44
0x357: M[V273] = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x358: V274 = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x379: V275 = 0x64
0x37c: V276 = ADD V259 0x64
0x37d: M[V276] = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x37e: V277 = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x39f: V278 = 0x84
0x3a2: V279 = ADD V259 0x84
0x3a3: M[V279] = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x3a5: V280 = M[0x40]
0x3a9: V281 = SUB V259 V280
0x3aa: V282 = 0xa4
0x3ac: V283 = ADD 0xa4 V281
0x3ae: REVERT V280 V283
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x3af
[0x3af:0x3d1]
---
Predecessors: [0x2fe]
Successors: [0x1ba]
---
0x3af JUMPDEST
0x3b0 POP
0x3b1 PUSH1 0x2
0x3b3 DUP1
0x3b4 SLOAD
0x3b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ca NOT
0x3cb AND
0x3cc SWAP1
0x3cd SSTORE
0x3ce PUSH1 0x1
0x3d0 SWAP1
0x3d1 JUMP
---
0x3af: JUMPDEST 
0x3b1: V284 = 0x2
0x3b4: V285 = S[0x2]
0x3b5: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ca: V287 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V288 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V285
0x3cd: S[0x2] = V288
0x3ce: V289 = 0x1
0x3d1: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x3d2
[0x3d2:0x40a]
---
Predecessors: [0x1da]
Successors: [0x1e3]
---
0x3d2 JUMPDEST
0x3d3 PUSH1 0x1
0x3d5 SLOAD
0x3d6 PUSH1 0x2
0x3d8 SLOAD
0x3d9 PUSH1 0x4
0x3db SLOAD
0x3dc PUSH1 0x1
0x3de PUSH1 0xa0
0x3e0 PUSH1 0x2
0x3e2 EXP
0x3e3 SUB
0x3e4 SWAP3
0x3e5 DUP4
0x3e6 AND
0x3e7 SWAP4
0x3e8 SWAP3
0x3e9 SWAP1
0x3ea SWAP2
0x3eb AND
0x3ec SWAP2
0x3ed PUSH21 0x10000000000000000000000000000000000000000
0x403 SWAP1
0x404 SWAP2
0x405 DIV
0x406 PUSH1 0xff
0x408 AND
0x409 SWAP1
0x40a JUMP
---
0x3d2: JUMPDEST 
0x3d3: V290 = 0x1
0x3d5: V291 = S[0x1]
0x3d6: V292 = 0x2
0x3d8: V293 = S[0x2]
0x3d9: V294 = 0x4
0x3db: V295 = S[0x4]
0x3dc: V296 = 0x1
0x3de: V297 = 0xa0
0x3e0: V298 = 0x2
0x3e2: V299 = EXP 0x2 0xa0
0x3e3: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e6: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x3eb: V302 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V303 = 0x10000000000000000000000000000000000000000
0x405: V304 = DIV V295 0x10000000000000000000000000000000000000000
0x406: V305 = 0xff
0x408: V306 = AND 0xff V304
0x40a: JUMP 0x1e3
---
Entry stack: [V11, 0x1e3]
Stack pops: 1
Stack additions: [V301, V302, V306]
Exit stack: [V11, V301, V302, V306]

================================

Block 0x40b
[0x40b:0x432]
---
Predecessors: [0x21b]
Successors: [0x433, 0x4a8]
---
0x40b JUMPDEST
0x40c PUSH1 0x4
0x40e SLOAD
0x40f PUSH21 0x10000000000000000000000000000000000000000
0x425 SWAP1
0x426 DIV
0x427 PUSH1 0xff
0x429 AND
0x42a ISZERO
0x42b ISZERO
0x42c PUSH1 0x1
0x42e EQ
0x42f PUSH2 0x4a8
0x432 JUMPI
---
0x40b: JUMPDEST 
0x40c: V307 = 0x4
0x40e: V308 = S[0x4]
0x40f: V309 = 0x10000000000000000000000000000000000000000
0x426: V310 = DIV V308 0x10000000000000000000000000000000000000000
0x427: V311 = 0xff
0x429: V312 = AND 0xff V310
0x42a: V313 = ISZERO V312
0x42b: V314 = ISZERO V313
0x42c: V315 = 0x1
0x42e: V316 = EQ 0x1 V314
0x42f: V317 = 0x4a8
0x432: JUMPI 0x4a8 V316
---
Entry stack: [V11, 0x230, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x230, V171]

================================

Block 0x433
[0x433:0x4a7]
---
Predecessors: [0x40b]
Successors: []
---
0x433 PUSH1 0x40
0x435 DUP1
0x436 MLOAD
0x437 PUSH1 0xe5
0x439 PUSH1 0x2
0x43b EXP
0x43c PUSH3 0x461bcd
0x440 MUL
0x441 DUP2
0x442 MSTORE
0x443 PUSH1 0x20
0x445 PUSH1 0x4
0x447 DUP3
0x448 ADD
0x449 MSTORE
0x44a PUSH1 0x35
0x44c PUSH1 0x24
0x44e DUP3
0x44f ADD
0x450 MSTORE
0x451 PUSH32 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x472 PUSH1 0x44
0x474 DUP3
0x475 ADD
0x476 MSTORE
0x477 PUSH32 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x498 PUSH1 0x64
0x49a DUP3
0x49b ADD
0x49c MSTORE
0x49d SWAP1
0x49e MLOAD
0x49f SWAP1
0x4a0 DUP2
0x4a1 SWAP1
0x4a2 SUB
0x4a3 PUSH1 0x84
0x4a5 ADD
0x4a6 SWAP1
0x4a7 REVERT
---
0x433: V318 = 0x40
0x436: V319 = M[0x40]
0x437: V320 = 0xe5
0x439: V321 = 0x2
0x43b: V322 = EXP 0x2 0xe5
0x43c: V323 = 0x461bcd
0x440: V324 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x442: M[V319] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x443: V325 = 0x20
0x445: V326 = 0x4
0x448: V327 = ADD V319 0x4
0x449: M[V327] = 0x20
0x44a: V328 = 0x35
0x44c: V329 = 0x24
0x44f: V330 = ADD V319 0x24
0x450: M[V330] = 0x35
0x451: V331 = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x472: V332 = 0x44
0x475: V333 = ADD V319 0x44
0x476: M[V333] = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x477: V334 = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x498: V335 = 0x64
0x49b: V336 = ADD V319 0x64
0x49c: M[V336] = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x49e: V337 = M[0x40]
0x4a2: V338 = SUB V319 V337
0x4a3: V339 = 0x84
0x4a5: V340 = ADD 0x84 V338
0x4a7: REVERT V337 V340
---
Entry stack: [V11, 0x230, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x230, V171]

================================

Block 0x4a8
[0x4a8:0x4f4]
---
Predecessors: [0x40b]
Successors: [0x230]
---
0x4a8 JUMPDEST
0x4a9 PUSH1 0x2
0x4ab DUP1
0x4ac SLOAD
0x4ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c2 NOT
0x4c3 AND
0x4c4 PUSH1 0x1
0x4c6 PUSH1 0xa0
0x4c8 PUSH1 0x2
0x4ca EXP
0x4cb SUB
0x4cc SWAP3
0x4cd SWAP1
0x4ce SWAP3
0x4cf AND
0x4d0 SWAP2
0x4d1 SWAP1
0x4d2 SWAP2
0x4d3 OR
0x4d4 SWAP1
0x4d5 SSTORE
0x4d6 PUSH1 0x4
0x4d8 DUP1
0x4d9 SLOAD
0x4da PUSH21 0xff0000000000000000000000000000000000000000
0x4f0 NOT
0x4f1 AND
0x4f2 SWAP1
0x4f3 SSTORE
0x4f4 JUMP
---
0x4a8: JUMPDEST 
0x4a9: V341 = 0x2
0x4ac: V342 = S[0x2]
0x4ad: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V344 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4c3: V345 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V342
0x4c4: V346 = 0x1
0x4c6: V347 = 0xa0
0x4c8: V348 = 0x2
0x4ca: V349 = EXP 0x2 0xa0
0x4cb: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x4d3: V352 = OR V351 V345
0x4d5: S[0x2] = V352
0x4d6: V353 = 0x4
0x4d9: V354 = S[0x4]
0x4da: V355 = 0xff0000000000000000000000000000000000000000
0x4f0: V356 = NOT 0xff0000000000000000000000000000000000000000
0x4f1: V357 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V354
0x4f3: S[0x4] = V357
0x4f4: JUMP 0x230
---
Entry stack: [V11, 0x230, V171]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4f5
[0x4f5:0x50a]
---
Predecessors: [0x23e]
Successors: [0x50b, 0x5a6]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x2
0x4f8 SLOAD
0x4f9 PUSH1 0x0
0x4fb SWAP1
0x4fc PUSH1 0x1
0x4fe PUSH1 0xa0
0x500 PUSH1 0x2
0x502 EXP
0x503 SUB
0x504 AND
0x505 CALLER
0x506 EQ
0x507 PUSH2 0x5a6
0x50a JUMPI
---
0x4f5: JUMPDEST 
0x4f6: V358 = 0x2
0x4f8: V359 = S[0x2]
0x4f9: V360 = 0x0
0x4fc: V361 = 0x1
0x4fe: V362 = 0xa0
0x500: V363 = 0x2
0x502: V364 = EXP 0x2 0xa0
0x503: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x504: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x505: V367 = CALLER
0x506: V368 = EQ V367 V366
0x507: V369 = 0x5a6
0x50a: JUMPI 0x5a6 V368
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x50b
[0x50b:0x5a5]
---
Predecessors: [0x4f5]
Successors: []
---
0x50b PUSH1 0x40
0x50d DUP1
0x50e MLOAD
0x50f PUSH1 0xe5
0x511 PUSH1 0x2
0x513 EXP
0x514 PUSH3 0x461bcd
0x518 MUL
0x519 DUP2
0x51a MSTORE
0x51b PUSH1 0x20
0x51d PUSH1 0x4
0x51f DUP3
0x520 ADD
0x521 MSTORE
0x522 PUSH1 0x43
0x524 PUSH1 0x24
0x526 DUP3
0x527 ADD
0x528 MSTORE
0x529 PUSH32 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x54a PUSH1 0x44
0x54c DUP3
0x54d ADD
0x54e MSTORE
0x54f PUSH32 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x570 PUSH1 0x64
0x572 DUP3
0x573 ADD
0x574 MSTORE
0x575 PUSH32 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x596 PUSH1 0x84
0x598 DUP3
0x599 ADD
0x59a MSTORE
0x59b SWAP1
0x59c MLOAD
0x59d SWAP1
0x59e DUP2
0x59f SWAP1
0x5a0 SUB
0x5a1 PUSH1 0xa4
0x5a3 ADD
0x5a4 SWAP1
0x5a5 REVERT
---
0x50b: V370 = 0x40
0x50e: V371 = M[0x40]
0x50f: V372 = 0xe5
0x511: V373 = 0x2
0x513: V374 = EXP 0x2 0xe5
0x514: V375 = 0x461bcd
0x518: V376 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x51a: M[V371] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x51b: V377 = 0x20
0x51d: V378 = 0x4
0x520: V379 = ADD V371 0x4
0x521: M[V379] = 0x20
0x522: V380 = 0x43
0x524: V381 = 0x24
0x527: V382 = ADD V371 0x24
0x528: M[V382] = 0x43
0x529: V383 = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x54a: V384 = 0x44
0x54d: V385 = ADD V371 0x44
0x54e: M[V385] = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x54f: V386 = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x570: V387 = 0x64
0x573: V388 = ADD V371 0x64
0x574: M[V388] = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x575: V389 = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x596: V390 = 0x84
0x599: V391 = ADD V371 0x84
0x59a: M[V391] = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x59c: V392 = M[0x40]
0x5a0: V393 = SUB V371 V392
0x5a1: V394 = 0xa4
0x5a3: V395 = ADD 0xa4 V393
0x5a5: REVERT V392 V395
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x5a6
[0x5a6:0x5dd]
---
Predecessors: [0x4f5]
Successors: [0x1ba]
---
0x5a6 JUMPDEST
0x5a7 POP
0x5a8 PUSH1 0x2
0x5aa DUP1
0x5ab SLOAD
0x5ac PUSH1 0x1
0x5ae DUP1
0x5af SLOAD
0x5b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c5 NOT
0x5c6 SWAP1
0x5c7 DUP2
0x5c8 AND
0x5c9 PUSH1 0x1
0x5cb PUSH1 0xa0
0x5cd PUSH1 0x2
0x5cf EXP
0x5d0 SUB
0x5d1 DUP5
0x5d2 AND
0x5d3 OR
0x5d4 DUP3
0x5d5 SSTORE
0x5d6 SWAP1
0x5d7 SWAP2
0x5d8 AND
0x5d9 SWAP1
0x5da SWAP2
0x5db SSTORE
0x5dc SWAP1
0x5dd JUMP
---
0x5a6: JUMPDEST 
0x5a8: V396 = 0x2
0x5ab: V397 = S[0x2]
0x5ac: V398 = 0x1
0x5af: V399 = S[0x1]
0x5b0: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c5: V401 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V402 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V399
0x5c9: V403 = 0x1
0x5cb: V404 = 0xa0
0x5cd: V405 = 0x2
0x5cf: V406 = EXP 0x2 0xa0
0x5d0: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d2: V408 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x5d3: V409 = OR V408 V402
0x5d5: S[0x1] = V409
0x5d8: V410 = AND V397 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x5db: S[0x2] = V410
0x5dd: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x5de
[0x5de:0x5f3]
---
Predecessors: [0x253]
Successors: [0x5f4, 0x68f]
---
0x5de JUMPDEST
0x5df PUSH1 0x1
0x5e1 SLOAD
0x5e2 PUSH1 0x0
0x5e4 SWAP1
0x5e5 PUSH1 0x1
0x5e7 PUSH1 0xa0
0x5e9 PUSH1 0x2
0x5eb EXP
0x5ec SUB
0x5ed AND
0x5ee CALLER
0x5ef EQ
0x5f0 PUSH2 0x68f
0x5f3 JUMPI
---
0x5de: JUMPDEST 
0x5df: V411 = 0x1
0x5e1: V412 = S[0x1]
0x5e2: V413 = 0x0
0x5e5: V414 = 0x1
0x5e7: V415 = 0xa0
0x5e9: V416 = 0x2
0x5eb: V417 = EXP 0x2 0xa0
0x5ec: V418 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ed: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x5ee: V420 = CALLER
0x5ef: V421 = EQ V420 V419
0x5f0: V422 = 0x68f
0x5f3: JUMPI 0x68f V421
---
Entry stack: [V11, 0x1ba, V191]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x5f4
[0x5f4:0x68e]
---
Predecessors: [0x5de]
Successors: []
---
0x5f4 PUSH1 0x40
0x5f6 DUP1
0x5f7 MLOAD
0x5f8 PUSH1 0xe5
0x5fa PUSH1 0x2
0x5fc EXP
0x5fd PUSH3 0x461bcd
0x601 MUL
0x602 DUP2
0x603 MSTORE
0x604 PUSH1 0x20
0x606 PUSH1 0x4
0x608 DUP3
0x609 ADD
0x60a MSTORE
0x60b PUSH1 0x46
0x60d PUSH1 0x24
0x60f DUP3
0x610 ADD
0x611 MSTORE
0x612 PUSH32 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x633 PUSH1 0x44
0x635 DUP3
0x636 ADD
0x637 MSTORE
0x638 PUSH32 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x659 PUSH1 0x64
0x65b DUP3
0x65c ADD
0x65d MSTORE
0x65e PUSH32 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x67f PUSH1 0x84
0x681 DUP3
0x682 ADD
0x683 MSTORE
0x684 SWAP1
0x685 MLOAD
0x686 SWAP1
0x687 DUP2
0x688 SWAP1
0x689 SUB
0x68a PUSH1 0xa4
0x68c ADD
0x68d SWAP1
0x68e REVERT
---
0x5f4: V423 = 0x40
0x5f7: V424 = M[0x40]
0x5f8: V425 = 0xe5
0x5fa: V426 = 0x2
0x5fc: V427 = EXP 0x2 0xe5
0x5fd: V428 = 0x461bcd
0x601: V429 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x603: M[V424] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x604: V430 = 0x20
0x606: V431 = 0x4
0x609: V432 = ADD V424 0x4
0x60a: M[V432] = 0x20
0x60b: V433 = 0x46
0x60d: V434 = 0x24
0x610: V435 = ADD V424 0x24
0x611: M[V435] = 0x46
0x612: V436 = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x633: V437 = 0x44
0x636: V438 = ADD V424 0x44
0x637: M[V438] = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x638: V439 = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x659: V440 = 0x64
0x65c: V441 = ADD V424 0x64
0x65d: M[V441] = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x65e: V442 = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x67f: V443 = 0x84
0x682: V444 = ADD V424 0x84
0x683: M[V444] = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x685: V445 = M[0x40]
0x689: V446 = SUB V424 V445
0x68a: V447 = 0xa4
0x68c: V448 = ADD 0xa4 V446
0x68e: REVERT V445 V448
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x68f
[0x68f:0x6e1]
---
Predecessors: [0x5de]
Successors: [0x6e2, 0x6e6]
---
0x68f JUMPDEST
0x690 DUP2
0x691 PUSH1 0x1
0x693 PUSH1 0xa0
0x695 PUSH1 0x2
0x697 EXP
0x698 SUB
0x699 AND
0x69a PUSH4 0x839e0fb
0x69f PUSH1 0x40
0x6a1 MLOAD
0x6a2 DUP2
0x6a3 PUSH4 0xffffffff
0x6a8 AND
0x6a9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6c7 MUL
0x6c8 DUP2
0x6c9 MSTORE
0x6ca PUSH1 0x4
0x6cc ADD
0x6cd PUSH1 0x20
0x6cf PUSH1 0x40
0x6d1 MLOAD
0x6d2 DUP1
0x6d3 DUP4
0x6d4 SUB
0x6d5 DUP2
0x6d6 PUSH1 0x0
0x6d8 DUP8
0x6d9 DUP1
0x6da EXTCODESIZE
0x6db ISZERO
0x6dc DUP1
0x6dd ISZERO
0x6de PUSH2 0x6e6
0x6e1 JUMPI
---
0x68f: JUMPDEST 
0x691: V449 = 0x1
0x693: V450 = 0xa0
0x695: V451 = 0x2
0x697: V452 = EXP 0x2 0xa0
0x698: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x699: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x69a: V455 = 0x839e0fb
0x69f: V456 = 0x40
0x6a1: V457 = M[0x40]
0x6a3: V458 = 0xffffffff
0x6a8: V459 = AND 0xffffffff 0x839e0fb
0x6a9: V460 = 0x100000000000000000000000000000000000000000000000000000000
0x6c7: V461 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x839e0fb
0x6c9: M[V457] = 0x839e0fb00000000000000000000000000000000000000000000000000000000
0x6ca: V462 = 0x4
0x6cc: V463 = ADD 0x4 V457
0x6cd: V464 = 0x20
0x6cf: V465 = 0x40
0x6d1: V466 = M[0x40]
0x6d4: V467 = SUB V463 V466
0x6d6: V468 = 0x0
0x6da: V469 = EXTCODESIZE V454
0x6db: V470 = ISZERO V469
0x6dd: V471 = ISZERO V470
0x6de: V472 = 0x6e6
0x6e1: JUMPI 0x6e6 V471
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V454, 0x839e0fb, V463, 0x20, V466, V467, V466, 0x0, V454, V470]
Exit stack: [V11, 0x1ba, V191, 0x0, V454, 0x839e0fb, V463, 0x20, V466, V467, V466, 0x0, V454, V470]

================================

Block 0x6e2
[0x6e2:0x6e5]
---
Predecessors: [0x68f]
Successors: []
---
0x6e2 PUSH1 0x0
0x6e4 DUP1
0x6e5 REVERT
---
0x6e2: V473 = 0x0
0x6e5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0, V454, 0x839e0fb, V463, 0x20, V466, V467, V466, 0x0, V454, V470]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V454, 0x839e0fb, V463, 0x20, V466, V467, V466, 0x0, V454, V470]

================================

Block 0x6e6
[0x6e6:0x6f0]
---
Predecessors: [0x68f]
Successors: [0x6f1, 0x6fa]
---
0x6e6 JUMPDEST
0x6e7 POP
0x6e8 GAS
0x6e9 CALL
0x6ea ISZERO
0x6eb DUP1
0x6ec ISZERO
0x6ed PUSH2 0x6fa
0x6f0 JUMPI
---
0x6e6: JUMPDEST 
0x6e8: V474 = GAS
0x6e9: V475 = CALL V474 V454 0x0 V466 V467 V466 0x20
0x6ea: V476 = ISZERO V475
0x6ec: V477 = ISZERO V476
0x6ed: V478 = 0x6fa
0x6f0: JUMPI 0x6fa V477
---
Entry stack: [V11, 0x1ba, V191, 0x0, V454, 0x839e0fb, V463, 0x20, V466, V467, V466, 0x0, V454, V470]
Stack pops: 7
Stack additions: [V476]
Exit stack: [V11, 0x1ba, V191, 0x0, V454, 0x839e0fb, V463, V476]

================================

Block 0x6f1
[0x6f1:0x6f9]
---
Predecessors: [0x6e6]
Successors: []
---
0x6f1 RETURNDATASIZE
0x6f2 PUSH1 0x0
0x6f4 DUP1
0x6f5 RETURNDATACOPY
0x6f6 RETURNDATASIZE
0x6f7 PUSH1 0x0
0x6f9 REVERT
---
0x6f1: V479 = RETURNDATASIZE
0x6f2: V480 = 0x0
0x6f5: RETURNDATACOPY 0x0 0x0 V479
0x6f6: V481 = RETURNDATASIZE
0x6f7: V482 = 0x0
0x6f9: REVERT 0x0 V481
---
Entry stack: [V11, 0x1ba, V191, 0x0, V454, 0x839e0fb, V463, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V454, 0x839e0fb, V463, V476]

================================

Block 0x6fa
[0x6fa:0x70b]
---
Predecessors: [0x6e6]
Successors: [0x70c, 0x710]
---
0x6fa JUMPDEST
0x6fb POP
0x6fc POP
0x6fd POP
0x6fe POP
0x6ff PUSH1 0x40
0x701 MLOAD
0x702 RETURNDATASIZE
0x703 PUSH1 0x20
0x705 DUP2
0x706 LT
0x707 ISZERO
0x708 PUSH2 0x710
0x70b JUMPI
---
0x6fa: JUMPDEST 
0x6ff: V483 = 0x40
0x701: V484 = M[0x40]
0x702: V485 = RETURNDATASIZE
0x703: V486 = 0x20
0x706: V487 = LT V485 0x20
0x707: V488 = ISZERO V487
0x708: V489 = 0x710
0x70b: JUMPI 0x710 V488
---
Entry stack: [V11, 0x1ba, V191, 0x0, V454, 0x839e0fb, V463, V476]
Stack pops: 4
Stack additions: [V484, V485]
Exit stack: [V11, 0x1ba, V191, 0x0, V484, V485]

================================

Block 0x70c
[0x70c:0x70f]
---
Predecessors: [0x6fa]
Successors: []
---
0x70c PUSH1 0x0
0x70e DUP1
0x70f REVERT
---
0x70c: V490 = 0x0
0x70f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0, V484, V485]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V484, V485]

================================

Block 0x710
[0x710:0x71c]
---
Predecessors: [0x6fa]
Successors: [0x71d, 0x74c]
---
0x710 JUMPDEST
0x711 POP
0x712 MLOAD
0x713 ISZERO
0x714 ISZERO
0x715 PUSH1 0x1
0x717 EQ
0x718 ISZERO
0x719 PUSH2 0x74c
0x71c JUMPI
---
0x710: JUMPDEST 
0x712: V491 = M[V484]
0x713: V492 = ISZERO V491
0x714: V493 = ISZERO V492
0x715: V494 = 0x1
0x717: V495 = EQ 0x1 V493
0x718: V496 = ISZERO V495
0x719: V497 = 0x74c
0x71c: JUMPI 0x74c V496
---
Entry stack: [V11, 0x1ba, V191, 0x0, V484, V485]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x71d
[0x71d:0x74b]
---
Predecessors: [0x710]
Successors: [0x750]
---
0x71d POP
0x71e PUSH1 0x2
0x720 DUP1
0x721 SLOAD
0x722 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x737 NOT
0x738 AND
0x739 PUSH1 0x1
0x73b PUSH1 0xa0
0x73d PUSH1 0x2
0x73f EXP
0x740 SUB
0x741 DUP4
0x742 AND
0x743 OR
0x744 SWAP1
0x745 SSTORE
0x746 PUSH1 0x1
0x748 PUSH2 0x750
0x74b JUMP
---
0x71e: V498 = 0x2
0x721: V499 = S[0x2]
0x722: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x737: V501 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x738: V502 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V499
0x739: V503 = 0x1
0x73b: V504 = 0xa0
0x73d: V505 = 0x2
0x73f: V506 = EXP 0x2 0xa0
0x740: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x742: V508 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x743: V509 = OR V508 V502
0x745: S[0x2] = V509
0x746: V510 = 0x1
0x748: V511 = 0x750
0x74b: JUMP 0x750
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V11, 0x1ba, V191, 0x1]

================================

Block 0x74c
[0x74c:0x74f]
---
Predecessors: [0x710]
Successors: [0x750]
---
0x74c JUMPDEST
0x74d POP
0x74e PUSH1 0x0
---
0x74c: JUMPDEST 
0x74e: V512 = 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x750
[0x750:0x754]
---
Predecessors: [0x71d, 0x74c]
Successors: [0x1ba]
---
0x750 JUMPDEST
0x751 SWAP2
0x752 SWAP1
0x753 POP
0x754 JUMP
---
0x750: JUMPDEST 
0x754: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, V191, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x755
[0x755:0x761]
---
Predecessors: [0x268]
Successors: [0x762, 0x7d7]
---
0x755 JUMPDEST
0x756 PUSH1 0x0
0x758 DUP1
0x759 DUP1
0x75a DUP1
0x75b CALLVALUE
0x75c DUP2
0x75d LT
0x75e PUSH2 0x7d7
0x761 JUMPI
---
0x755: JUMPDEST 
0x756: V513 = 0x0
0x75b: V514 = CALLVALUE
0x75d: V515 = LT 0x0 V514
0x75e: V516 = 0x7d7
0x761: JUMPI 0x7d7 V515
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x762
[0x762:0x7d6]
---
Predecessors: [0x755]
Successors: []
---
0x762 PUSH1 0x40
0x764 DUP1
0x765 MLOAD
0x766 PUSH1 0xe5
0x768 PUSH1 0x2
0x76a EXP
0x76b PUSH3 0x461bcd
0x76f MUL
0x770 DUP2
0x771 MSTORE
0x772 PUSH1 0x20
0x774 PUSH1 0x4
0x776 DUP3
0x777 ADD
0x778 MSTORE
0x779 PUSH1 0x34
0x77b PUSH1 0x24
0x77d DUP3
0x77e ADD
0x77f MSTORE
0x780 PUSH32 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0x7a1 PUSH1 0x44
0x7a3 DUP3
0x7a4 ADD
0x7a5 MSTORE
0x7a6 PUSH32 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0x7c7 PUSH1 0x64
0x7c9 DUP3
0x7ca ADD
0x7cb MSTORE
0x7cc SWAP1
0x7cd MLOAD
0x7ce SWAP1
0x7cf DUP2
0x7d0 SWAP1
0x7d1 SUB
0x7d2 PUSH1 0x84
0x7d4 ADD
0x7d5 SWAP1
0x7d6 REVERT
---
0x762: V517 = 0x40
0x765: V518 = M[0x40]
0x766: V519 = 0xe5
0x768: V520 = 0x2
0x76a: V521 = EXP 0x2 0xe5
0x76b: V522 = 0x461bcd
0x76f: V523 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x771: M[V518] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x772: V524 = 0x20
0x774: V525 = 0x4
0x777: V526 = ADD V518 0x4
0x778: M[V526] = 0x20
0x779: V527 = 0x34
0x77b: V528 = 0x24
0x77e: V529 = ADD V518 0x24
0x77f: M[V529] = 0x34
0x780: V530 = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0x7a1: V531 = 0x44
0x7a4: V532 = ADD V518 0x44
0x7a5: M[V532] = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0x7a6: V533 = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0x7c7: V534 = 0x64
0x7ca: V535 = ADD V518 0x64
0x7cb: M[V535] = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0x7cd: V536 = M[0x40]
0x7d1: V537 = SUB V518 V536
0x7d2: V538 = 0x84
0x7d4: V539 = ADD 0x84 V537
0x7d6: REVERT V536 V539
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x7d7
[0x7d7:0x7fa]
---
Predecessors: [0x755]
Successors: [0x7fb, 0x870]
---
0x7d7 JUMPDEST
0x7d8 PUSH1 0x4
0x7da SLOAD
0x7db PUSH21 0x10000000000000000000000000000000000000000
0x7f1 SWAP1
0x7f2 DIV
0x7f3 PUSH1 0xff
0x7f5 AND
0x7f6 ISZERO
0x7f7 PUSH2 0x870
0x7fa JUMPI
---
0x7d7: JUMPDEST 
0x7d8: V540 = 0x4
0x7da: V541 = S[0x4]
0x7db: V542 = 0x10000000000000000000000000000000000000000
0x7f2: V543 = DIV V541 0x10000000000000000000000000000000000000000
0x7f3: V544 = 0xff
0x7f5: V545 = AND 0xff V543
0x7f6: V546 = ISZERO V545
0x7f7: V547 = 0x870
0x7fa: JUMPI 0x870 V546
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x7fb
[0x7fb:0x86f]
---
Predecessors: [0x7d7]
Successors: []
---
0x7fb PUSH1 0x40
0x7fd DUP1
0x7fe MLOAD
0x7ff PUSH1 0xe5
0x801 PUSH1 0x2
0x803 EXP
0x804 PUSH3 0x461bcd
0x808 MUL
0x809 DUP2
0x80a MSTORE
0x80b PUSH1 0x20
0x80d PUSH1 0x4
0x80f DUP3
0x810 ADD
0x811 MSTORE
0x812 PUSH1 0x2d
0x814 PUSH1 0x24
0x816 DUP3
0x817 ADD
0x818 MSTORE
0x819 PUSH32 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x83a PUSH1 0x44
0x83c DUP3
0x83d ADD
0x83e MSTORE
0x83f PUSH32 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x860 PUSH1 0x64
0x862 DUP3
0x863 ADD
0x864 MSTORE
0x865 SWAP1
0x866 MLOAD
0x867 SWAP1
0x868 DUP2
0x869 SWAP1
0x86a SUB
0x86b PUSH1 0x84
0x86d ADD
0x86e SWAP1
0x86f REVERT
---
0x7fb: V548 = 0x40
0x7fe: V549 = M[0x40]
0x7ff: V550 = 0xe5
0x801: V551 = 0x2
0x803: V552 = EXP 0x2 0xe5
0x804: V553 = 0x461bcd
0x808: V554 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x80a: M[V549] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x80b: V555 = 0x20
0x80d: V556 = 0x4
0x810: V557 = ADD V549 0x4
0x811: M[V557] = 0x20
0x812: V558 = 0x2d
0x814: V559 = 0x24
0x817: V560 = ADD V549 0x24
0x818: M[V560] = 0x2d
0x819: V561 = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x83a: V562 = 0x44
0x83d: V563 = ADD V549 0x44
0x83e: M[V563] = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x83f: V564 = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x860: V565 = 0x64
0x863: V566 = ADD V549 0x64
0x864: M[V566] = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x866: V567 = M[0x40]
0x86a: V568 = SUB V549 V567
0x86b: V569 = 0x84
0x86d: V570 = ADD 0x84 V568
0x86f: REVERT V567 V570
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x870
[0x870:0x87a]
---
Predecessors: [0x7d7]
Successors: [0x957]
---
0x870 JUMPDEST
0x871 PUSH2 0x87b
0x874 CALLVALUE
0x875 PUSH1 0x5
0x877 PUSH2 0x957
0x87a JUMP
---
0x870: JUMPDEST 
0x871: V571 = 0x87b
0x874: V572 = CALLVALUE
0x875: V573 = 0x5
0x877: V574 = 0x957
0x87a: JUMP 0x957
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x87b, V572, 0x5]
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0, 0x87b, V572, 0x5]

================================

Block 0x87b
[0x87b:0x8ac]
---
Predecessors: [0x96c]
Successors: [0x8ad, 0x8b6]
---
0x87b JUMPDEST
0x87c PUSH1 0x2
0x87e SLOAD
0x87f PUSH1 0x40
0x881 MLOAD
0x882 SWAP2
0x883 SWAP5
0x884 POP
0x885 PUSH1 0x1
0x887 PUSH1 0xa0
0x889 PUSH1 0x2
0x88b EXP
0x88c SUB
0x88d AND
0x88e SWAP1
0x88f DUP5
0x890 ISZERO
0x891 PUSH2 0x8fc
0x894 MUL
0x895 SWAP1
0x896 DUP6
0x897 SWAP1
0x898 PUSH1 0x0
0x89a DUP2
0x89b DUP2
0x89c DUP2
0x89d DUP6
0x89e DUP9
0x89f DUP9
0x8a0 CALL
0x8a1 SWAP4
0x8a2 POP
0x8a3 POP
0x8a4 POP
0x8a5 POP
0x8a6 ISZERO
0x8a7 DUP1
0x8a8 ISZERO
0x8a9 PUSH2 0x8b6
0x8ac JUMPI
---
0x87b: JUMPDEST 
0x87c: V575 = 0x2
0x87e: V576 = S[0x2]
0x87f: V577 = 0x40
0x881: V578 = M[0x40]
0x885: V579 = 0x1
0x887: V580 = 0xa0
0x889: V581 = 0x2
0x88b: V582 = EXP 0x2 0xa0
0x88c: V583 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88d: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0x890: V585 = ISZERO S0
0x891: V586 = 0x8fc
0x894: V587 = MUL 0x8fc V585
0x898: V588 = 0x0
0x8a0: V589 = CALL V587 V584 S0 V578 0x0 V578 0x0
0x8a6: V590 = ISZERO V589
0x8a8: V591 = ISZERO V590
0x8a9: V592 = 0x8b6
0x8ac: JUMPI 0x8b6 V591
---
Entry stack: [V11, 0x1ba, 0x0, S3, 0x0, 0x0, S0]
Stack pops: 4
Stack additions: [S0, S2, S1, V590]
Exit stack: [V11, 0x1ba, 0x0, S0, 0x0, 0x0, V590]

================================

Block 0x8ad
[0x8ad:0x8b5]
---
Predecessors: [0x87b]
Successors: []
---
0x8ad RETURNDATASIZE
0x8ae PUSH1 0x0
0x8b0 DUP1
0x8b1 RETURNDATACOPY
0x8b2 RETURNDATASIZE
0x8b3 PUSH1 0x0
0x8b5 REVERT
---
0x8ad: V593 = RETURNDATASIZE
0x8ae: V594 = 0x0
0x8b1: RETURNDATACOPY 0x0 0x0 V593
0x8b2: V595 = RETURNDATASIZE
0x8b3: V596 = 0x0
0x8b5: REVERT 0x0 V595
---
Entry stack: [V11, 0x1ba, 0x0, S3, 0x0, 0x0, V590]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, S3, 0x0, 0x0, V590]

================================

Block 0x8b6
[0x8b6:0x8c1]
---
Predecessors: [0x87b]
Successors: [0x973]
---
0x8b6 JUMPDEST
0x8b7 POP
0x8b8 PUSH2 0x8c2
0x8bb DUP4
0x8bc PUSH1 0x2
0x8be PUSH2 0x973
0x8c1 JUMP
---
0x8b6: JUMPDEST 
0x8b8: V597 = 0x8c2
0x8bc: V598 = 0x2
0x8be: V599 = 0x973
0x8c1: JUMP 0x973
---
Entry stack: [V11, 0x1ba, 0x0, S3, 0x0, 0x0, V590]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x8c2, S3, 0x2]
Exit stack: [V11, 0x1ba, 0x0, S3, 0x0, 0x0, 0x8c2, S3, 0x2]

================================

Block 0x8c2
[0x8c2:0x8f3]
---
Predecessors: [0x96c, 0x99e]
Successors: [0x8f4, 0x8fd]
---
0x8c2 JUMPDEST
0x8c3 PUSH1 0x3
0x8c5 SLOAD
0x8c6 PUSH1 0x40
0x8c8 MLOAD
0x8c9 SWAP2
0x8ca SWAP4
0x8cb POP
0x8cc PUSH1 0x1
0x8ce PUSH1 0xa0
0x8d0 PUSH1 0x2
0x8d2 EXP
0x8d3 SUB
0x8d4 AND
0x8d5 SWAP1
0x8d6 DUP4
0x8d7 ISZERO
0x8d8 PUSH2 0x8fc
0x8db MUL
0x8dc SWAP1
0x8dd DUP5
0x8de SWAP1
0x8df PUSH1 0x0
0x8e1 DUP2
0x8e2 DUP2
0x8e3 DUP2
0x8e4 DUP6
0x8e5 DUP9
0x8e6 DUP9
0x8e7 CALL
0x8e8 SWAP4
0x8e9 POP
0x8ea POP
0x8eb POP
0x8ec POP
0x8ed ISZERO
0x8ee DUP1
0x8ef ISZERO
0x8f0 PUSH2 0x8fd
0x8f3 JUMPI
---
0x8c2: JUMPDEST 
0x8c3: V600 = 0x3
0x8c5: V601 = S[0x3]
0x8c6: V602 = 0x40
0x8c8: V603 = M[0x40]
0x8cc: V604 = 0x1
0x8ce: V605 = 0xa0
0x8d0: V606 = 0x2
0x8d2: V607 = EXP 0x2 0xa0
0x8d3: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d4: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V601
0x8d7: V610 = ISZERO S0
0x8d8: V611 = 0x8fc
0x8db: V612 = MUL 0x8fc V610
0x8df: V613 = 0x0
0x8e7: V614 = CALL V612 V609 S0 V603 0x0 V603 0x0
0x8ed: V615 = ISZERO V614
0x8ef: V616 = ISZERO V615
0x8f0: V617 = 0x8fd
0x8f3: JUMPI 0x8fd V616
---
Entry stack: [V11, 0x1ba, 0x0, S3, 0x0, 0x0, S0]
Stack pops: 3
Stack additions: [S0, S1, V615]
Exit stack: [V11, 0x1ba, 0x0, S3, S0, 0x0, V615]

================================

Block 0x8f4
[0x8f4:0x8fc]
---
Predecessors: [0x8c2]
Successors: []
---
0x8f4 RETURNDATASIZE
0x8f5 PUSH1 0x0
0x8f7 DUP1
0x8f8 RETURNDATACOPY
0x8f9 RETURNDATASIZE
0x8fa PUSH1 0x0
0x8fc REVERT
---
0x8f4: V618 = RETURNDATASIZE
0x8f5: V619 = 0x0
0x8f8: RETURNDATACOPY 0x0 0x0 V618
0x8f9: V620 = RETURNDATASIZE
0x8fa: V621 = 0x0
0x8fc: REVERT 0x0 V620
---
Entry stack: [V11, 0x1ba, 0x0, S3, S2, 0x0, V615]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, S3, S2, 0x0, V615]

================================

Block 0x8fd
[0x8fd:0x90a]
---
Predecessors: [0x8c2]
Successors: [0x9a5]
---
0x8fd JUMPDEST
0x8fe POP
0x8ff PUSH2 0x911
0x902 PUSH2 0x90b
0x905 CALLVALUE
0x906 DUP5
0x907 PUSH2 0x9a5
0x90a JUMP
---
0x8fd: JUMPDEST 
0x8ff: V622 = 0x911
0x902: V623 = 0x90b
0x905: V624 = CALLVALUE
0x907: V625 = 0x9a5
0x90a: JUMP 0x9a5
---
Entry stack: [V11, 0x1ba, 0x0, S3, S2, 0x0, V615]
Stack pops: 3
Stack additions: [S2, S1, 0x911, 0x90b, V624, S2]
Exit stack: [V11, 0x1ba, 0x0, S3, S2, 0x0, 0x911, 0x90b, V624, S2]

================================

Block 0x90b
[0x90b:0x910]
---
Predecessors: [0x9b1]
Successors: [0x9a5]
---
0x90b JUMPDEST
0x90c DUP5
0x90d PUSH2 0x9a5
0x910 JUMP
---
0x90b: JUMPDEST 
0x90d: V626 = 0x9a5
0x910: JUMP 0x9a5
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V672]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, V672, S4]

================================

Block 0x911
[0x911:0x942]
---
Predecessors: [0x9b1]
Successors: [0x943, 0x94c]
---
0x911 JUMPDEST
0x912 PUSH1 0x4
0x914 SLOAD
0x915 PUSH1 0x40
0x917 MLOAD
0x918 SWAP2
0x919 SWAP3
0x91a POP
0x91b PUSH1 0x1
0x91d PUSH1 0xa0
0x91f PUSH1 0x2
0x921 EXP
0x922 SUB
0x923 AND
0x924 SWAP1
0x925 DUP3
0x926 ISZERO
0x927 PUSH2 0x8fc
0x92a MUL
0x92b SWAP1
0x92c DUP4
0x92d SWAP1
0x92e PUSH1 0x0
0x930 DUP2
0x931 DUP2
0x932 DUP2
0x933 DUP6
0x934 DUP9
0x935 DUP9
0x936 CALL
0x937 SWAP4
0x938 POP
0x939 POP
0x93a POP
0x93b POP
0x93c ISZERO
0x93d DUP1
0x93e ISZERO
0x93f PUSH2 0x94c
0x942 JUMPI
---
0x911: JUMPDEST 
0x912: V627 = 0x4
0x914: V628 = S[0x4]
0x915: V629 = 0x40
0x917: V630 = M[0x40]
0x91b: V631 = 0x1
0x91d: V632 = 0xa0
0x91f: V633 = 0x2
0x921: V634 = EXP 0x2 0xa0
0x922: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x923: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0x926: V637 = ISZERO V672
0x927: V638 = 0x8fc
0x92a: V639 = MUL 0x8fc V637
0x92e: V640 = 0x0
0x936: V641 = CALL V639 V636 V672 V630 0x0 V630 0x0
0x93c: V642 = ISZERO V641
0x93e: V643 = ISZERO V642
0x93f: V644 = 0x94c
0x942: JUMPI 0x94c V643
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V672]
Stack pops: 2
Stack additions: [S0, V642]
Exit stack: [V11, S6, S5, S4, S3, S2, V672, V642]

================================

Block 0x943
[0x943:0x94b]
---
Predecessors: [0x911]
Successors: []
---
0x943 RETURNDATASIZE
0x944 PUSH1 0x0
0x946 DUP1
0x947 RETURNDATACOPY
0x948 RETURNDATASIZE
0x949 PUSH1 0x0
0x94b REVERT
---
0x943: V645 = RETURNDATASIZE
0x944: V646 = 0x0
0x947: RETURNDATACOPY 0x0 0x0 V645
0x948: V647 = RETURNDATASIZE
0x949: V648 = 0x0
0x94b: REVERT 0x0 V647
---
Entry stack: [V11, S6, S5, S4, S3, S2, V672, V642]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2, V672, V642]

================================

Block 0x94c
[0x94c:0x956]
---
Predecessors: [0x911]
Successors: [0x1ba]
---
0x94c JUMPDEST
0x94d POP
0x94e PUSH1 0x1
0x950 SWAP4
0x951 POP
0x952 POP
0x953 POP
0x954 POP
0x955 SWAP1
0x956 JUMP
---
0x94c: JUMPDEST 
0x94e: V649 = 0x1
0x956: JUMP S5
---
Entry stack: [V11, S6, S5, S4, S3, S2, V672, V642]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, S6, 0x1]

================================

Block 0x957
[0x957:0x963]
---
Predecessors: [0x870]
Successors: [0x964, 0x965]
---
0x957 JUMPDEST
0x958 PUSH1 0x0
0x95a DUP1
0x95b DUP3
0x95c DUP5
0x95d DUP2
0x95e ISZERO
0x95f ISZERO
0x960 PUSH2 0x965
0x963 JUMPI
---
0x957: JUMPDEST 
0x958: V650 = 0x0
0x95e: V651 = ISZERO 0x5
0x95f: V652 = ISZERO 0x0
0x960: V653 = 0x965
0x963: JUMPI 0x965 0x1
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0, 0x87b, V572, 0x5]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0, 0x87b, V572, 0x5, 0x0, 0x0, 0x5, V572]

================================

Block 0x964
[0x964:0x964]
---
Predecessors: [0x957]
Successors: []
---
0x964 INVALID
---
0x964: INVALID 
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0, 0x87b, V572, 0x5, 0x0, 0x0, 0x5, V572]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0, 0x87b, V572, 0x5, 0x0, 0x0, 0x5, V572]

================================

Block 0x965
[0x965:0x96b]
---
Predecessors: [0x957]
Successors: [0x96c]
---
0x965 JUMPDEST
0x966 DIV
0x967 SWAP1
0x968 POP
0x969 DUP1
0x96a SWAP2
0x96b POP
---
0x965: JUMPDEST 
0x966: V654 = DIV V572 0x5
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0, 0x87b, V572, 0x5, 0x0, 0x0, 0x5, V572]
Stack pops: 4
Stack additions: [V654, V654]
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0, 0x87b, V572, 0x5, V654, V654]

================================

Block 0x96c
[0x96c:0x972]
---
Predecessors: [0x965, 0x97e]
Successors: [0x87b, 0x8c2]
---
0x96c JUMPDEST
0x96d POP
0x96e SWAP3
0x96f SWAP2
0x970 POP
0x971 POP
0x972 JUMP
---
0x96c: JUMPDEST 
0x972: JUMP {0x87b, 0x8c2}
---
Entry stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, {0x87b, 0x8c2}, S3, {0x2, 0x5}, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, S1]

================================

Block 0x973
[0x973:0x97d]
---
Predecessors: [0x8b6]
Successors: [0x97e, 0x986]
---
0x973 JUMPDEST
0x974 PUSH1 0x0
0x976 DUP1
0x977 DUP4
0x978 ISZERO
0x979 ISZERO
0x97a PUSH2 0x986
0x97d JUMPI
---
0x973: JUMPDEST 
0x974: V655 = 0x0
0x978: V656 = ISZERO S1
0x979: V657 = ISZERO V656
0x97a: V658 = 0x986
0x97d: JUMPI 0x986 V657
---
Entry stack: [V11, 0x1ba, 0x0, S5, 0x0, 0x0, 0x8c2, S1, 0x2]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x1ba, 0x0, S5, 0x0, 0x0, 0x8c2, S1, 0x2, 0x0, 0x0]

================================

Block 0x97e
[0x97e:0x985]
---
Predecessors: [0x973]
Successors: [0x96c]
---
0x97e PUSH1 0x0
0x980 SWAP2
0x981 POP
0x982 PUSH2 0x96c
0x985 JUMP
---
0x97e: V659 = 0x0
0x982: V660 = 0x96c
0x985: JUMP 0x96c
---
Entry stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, 0x8c2, S3, 0x2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, 0x8c2, S3, 0x2, 0x0, 0x0]

================================

Block 0x986
[0x986:0x994]
---
Predecessors: [0x973]
Successors: [0x995, 0x996]
---
0x986 JUMPDEST
0x987 POP
0x988 DUP3
0x989 DUP3
0x98a MUL
0x98b DUP3
0x98c DUP5
0x98d DUP3
0x98e DUP2
0x98f ISZERO
0x990 ISZERO
0x991 PUSH2 0x996
0x994 JUMPI
---
0x986: JUMPDEST 
0x98a: V661 = MUL 0x2 S3
0x98f: V662 = ISZERO S3
0x990: V663 = ISZERO V662
0x991: V664 = 0x996
0x994: JUMPI 0x996 V663
---
Entry stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, 0x8c2, S3, 0x2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V661, S2, S3, V661]
Exit stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, 0x8c2, S3, 0x2, 0x0, V661, 0x2, S3, V661]

================================

Block 0x995
[0x995:0x995]
---
Predecessors: [0x986]
Successors: []
---
0x995 INVALID
---
0x995: INVALID 
---
Entry stack: [V11, 0x1ba, 0x0, S10, 0x0, 0x0, 0x8c2, S6, 0x2, 0x0, V661, 0x2, S1, V661]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, S10, 0x0, 0x0, 0x8c2, S6, 0x2, 0x0, V661, 0x2, S1, V661]

================================

Block 0x996
[0x996:0x99c]
---
Predecessors: [0x986]
Successors: [0x99d, 0x99e]
---
0x996 JUMPDEST
0x997 DIV
0x998 EQ
0x999 PUSH2 0x99e
0x99c JUMPI
---
0x996: JUMPDEST 
0x997: V665 = DIV V661 S1
0x998: V666 = EQ V665 0x2
0x999: V667 = 0x99e
0x99c: JUMPI 0x99e V666
---
Entry stack: [V11, 0x1ba, 0x0, S10, 0x0, 0x0, 0x8c2, S6, 0x2, 0x0, V661, 0x2, S1, V661]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, S10, 0x0, 0x0, 0x8c2, S6, 0x2, 0x0, V661]

================================

Block 0x99d
[0x99d:0x99d]
---
Predecessors: [0x996]
Successors: []
---
0x99d INVALID
---
0x99d: INVALID 
---
Entry stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, 0x8c2, S3, 0x2, 0x0, V661]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, 0x8c2, S3, 0x2, 0x0, V661]

================================

Block 0x99e
[0x99e:0x9a4]
---
Predecessors: [0x996]
Successors: [0x8c2]
---
0x99e JUMPDEST
0x99f SWAP4
0x9a0 SWAP3
0x9a1 POP
0x9a2 POP
0x9a3 POP
0x9a4 JUMP
---
0x99e: JUMPDEST 
0x9a4: JUMP 0x8c2
---
Entry stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, 0x8c2, S3, 0x2, 0x0, V661]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x1ba, 0x0, S7, 0x0, 0x0, V661]

================================

Block 0x9a5
[0x9a5:0x9af]
---
Predecessors: [0x8fd, 0x90b]
Successors: [0x9b0, 0x9b1]
---
0x9a5 JUMPDEST
0x9a6 PUSH1 0x0
0x9a8 DUP3
0x9a9 DUP3
0x9aa GT
0x9ab ISZERO
0x9ac PUSH2 0x9b1
0x9af JUMPI
---
0x9a5: JUMPDEST 
0x9a6: V668 = 0x0
0x9aa: V669 = GT S0 S1
0x9ab: V670 = ISZERO V669
0x9ac: V671 = 0x9b1
0x9af: JUMPI 0x9b1 V670
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x9b0
[0x9b0:0x9b0]
---
Predecessors: [0x9a5]
Successors: []
---
0x9b0 INVALID
---
0x9b0: INVALID 
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x9b1
[0x9b1:0x9b6]
---
Predecessors: [0x9a5]
Successors: [0x90b, 0x911]
---
0x9b1 JUMPDEST
0x9b2 POP
0x9b3 SWAP1
0x9b4 SUB
0x9b5 SWAP1
0x9b6 JUMP
---
0x9b1: JUMPDEST 
0x9b4: V672 = SUB S2 S1
0x9b6: JUMP S3
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V672]
Exit stack: [V11, S9, S8, S7, S6, S5, S4, V672]

================================

Block 0x9b7
[0x9b7:0x9e2]
---
Predecessors: []
Successors: []
---
0x9b7 STOP
0x9b8 LOG1
0x9b9 PUSH6 0x627a7a723058
0x9c0 SHA3
0x9c1 ISZERO
0x9c2 PUSH24 0x57c11cb33f3c17390b57a8bdc147b2681e390767bd6a7712
0x9db MISSING 0xb7
0x9dc MISSING 0xba
0x9dd MISSING 0x4e
0x9de SWAP11
0x9df MISSING 0x29
0x9e0 BALANCE
0x9e1 STOP
0x9e2 MISSING 0x29
---
0x9b7: STOP 
0x9b8: LOG S0 S1 S2
0x9b9: V673 = 0x627a7a723058
0x9c0: V674 = SHA3 0x627a7a723058 S3
0x9c1: V675 = ISZERO V674
0x9c2: V676 = 0x57c11cb33f3c17390b57a8bdc147b2681e390767bd6a7712
0x9db: MISSING 0xb7
0x9dc: MISSING 0xba
0x9dd: MISSING 0x4e
0x9df: MISSING 0x29
0x9e0: V677 = BALANCE S0
0x9e1: STOP 
0x9e2: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x57c11cb33f3c17390b57a8bdc147b2681e390767bd6a7712, V675, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V677]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x11b
Exit block: 0x197
Body: 0x11b, 0x123, 0x127, 0x130, 0x152, 0x15b, 0x16a, 0x17e, 0x197, 0x270, 0x2b0, 0x2b8, 0x2cb, 0x2d9, 0x2ed, 0x2f6

Function 1:
Public function signature: 0x10639ea0
Entry block: 0x1a5
Exit block: 0x1ba
Body: 0x1a5, 0x1ad, 0x1b1, 0x1ba, 0x2fe, 0x314, 0x3af

Function 2:
Public function signature: 0x200d2ed2
Entry block: 0x1ce
Exit block: 0x1e3
Body: 0x1ce, 0x1d6, 0x1da, 0x1e3, 0x3d2

Function 3:
Public function signature: 0x66d38203
Entry block: 0x20f
Exit block: 0x230
Body: 0x20f, 0x217, 0x21b, 0x230, 0x40b, 0x433, 0x4a8

Function 4:
Public function signature: 0x88d761f2
Entry block: 0x232
Exit block: 0x1ba
Body: 0x1ba, 0x232, 0x23a, 0x23e, 0x4f5, 0x50b, 0x5a6

Function 5:
Public function signature: 0xa0f52da0
Entry block: 0x247
Exit block: 0x1ba
Body: 0x1ba, 0x247, 0x24f, 0x253, 0x5de, 0x5f4, 0x68f, 0x6e2, 0x6e6, 0x6f1, 0x6fa, 0x70c, 0x710, 0x71d, 0x74c, 0x750

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x268
Exit block: 0x1ba
Body: 0x1ba, 0x268, 0x755, 0x762, 0x7d7, 0x7fb, 0x870, 0x87b, 0x8ad, 0x8b6, 0x8c2, 0x8f4, 0x8fd, 0x90b, 0x911, 0x943, 0x94c, 0x957, 0x964, 0x965, 0x96c, 0x973, 0x97e, 0x986, 0x995, 0x996, 0x99d, 0x99e, 0x9a5, 0x9b0, 0x9b1

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x113
Body: 0x82, 0xe8, 0xec, 0xf7, 0x100, 0x113, 0x117

