Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x71]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x16213755
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x71
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x16213755
0x3b: V13 = EQ V11 0x16213755
0x3c: V14 = 0x71
0x3f: JUMPI 0x71 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x88]
---
0x40 DUP1
0x41 PUSH4 0x5ebefb16
0x46 EQ
0x47 PUSH2 0x88
0x4a JUMPI
---
0x41: V15 = 0x5ebefb16
0x46: V16 = EQ 0x5ebefb16 V11
0x47: V17 = 0x88
0x4a: JUMPI 0x88 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa3]
---
0x4b DUP1
0x4c PUSH4 0x64a285fd
0x51 EQ
0x52 PUSH2 0xa3
0x55 JUMPI
---
0x4c: V18 = 0x64a285fd
0x51: V19 = EQ 0x64a285fd V11
0x52: V20 = 0xa3
0x55: JUMPI 0xa3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xab]
---
0x56 DUP1
0x57 PUSH4 0xc29ec459
0x5c EQ
0x5d PUSH2 0xab
0x60 JUMPI
---
0x57: V21 = 0xc29ec459
0x5c: V22 = EQ 0xc29ec459 V11
0x5d: V23 = 0xab
0x60: JUMPI 0xab V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xb3]
---
0x61 DUP1
0x62 PUSH4 0xddfae529
0x67 EQ
0x68 PUSH2 0xb3
0x6b JUMPI
---
0x62: V24 = 0xddfae529
0x67: V25 = EQ 0xddfae529 V11
0x68: V26 = 0xb3
0x6b: JUMPI 0xb3 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x70]
---
Predecessors: [0x0, 0x61]
Successors: []
---
0x6c JUMPDEST
0x6d PUSH1 0x0
0x6f DUP1
0x70 REVERT
---
0x6c: JUMPDEST 
0x6d: V27 = 0x0
0x70: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x78]
---
Predecessors: [0xd]
Successors: [0x79, 0x7d]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 DUP1
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x71: JUMPDEST 
0x72: V28 = CALLVALUE
0x74: V29 = ISZERO V28
0x75: V30 = 0x7d
0x78: JUMPI 0x7d V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x71]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V31 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7d
[0x7d:0x85]
---
Predecessors: [0x71]
Successors: [0xbb]
---
0x7d JUMPDEST
0x7e POP
0x7f PUSH2 0x86
0x82 PUSH2 0xbb
0x85 JUMP
---
0x7d: JUMPDEST 
0x7f: V32 = 0x86
0x82: V33 = 0xbb
0x85: JUMP 0xbb
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0x86
[0x86:0x87]
---
Predecessors: [0x102, 0x1ba, 0x1fb]
Successors: []
---
0x86 JUMPDEST
0x87 STOP
---
0x86: JUMPDEST 
0x87: STOP 
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0x40]
Successors: [0x90, 0x94]
---
0x88 JUMPDEST
0x89 CALLVALUE
0x8a DUP1
0x8b ISZERO
0x8c PUSH2 0x94
0x8f JUMPI
---
0x88: JUMPDEST 
0x89: V34 = CALLVALUE
0x8b: V35 = ISZERO V34
0x8c: V36 = 0x94
0x8f: JUMPI 0x94 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0x90
[0x90:0x93]
---
Predecessors: [0x88]
Successors: []
---
0x90 PUSH1 0x0
0x92 DUP1
0x93 REVERT
---
0x90: V37 = 0x0
0x93: REVERT 0x0 0x0
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0x94
[0x94:0xa2]
---
Predecessors: [0x88]
Successors: [0x105]
---
0x94 JUMPDEST
0x95 POP
0x96 PUSH2 0x86
0x99 PUSH1 0xff
0x9b PUSH1 0x4
0x9d CALLDATALOAD
0x9e AND
0x9f PUSH2 0x105
0xa2 JUMP
---
0x94: JUMPDEST 
0x96: V38 = 0x86
0x99: V39 = 0xff
0x9b: V40 = 0x4
0x9d: V41 = CALLDATALOAD 0x4
0x9e: V42 = AND V41 0xff
0x9f: V43 = 0x105
0xa2: JUMP 0x105
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: [0x86, V42]
Exit stack: [V11, 0x86, V42]

================================

Block 0xa3
[0xa3:0xaa]
---
Predecessors: [0x4b]
Successors: [0x1be]
---
0xa3 JUMPDEST
0xa4 PUSH2 0x86
0xa7 PUSH2 0x1be
0xaa JUMP
---
0xa3: JUMPDEST 
0xa4: V44 = 0x86
0xa7: V45 = 0x1be
0xaa: JUMP 0x1be
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0xab
[0xab:0xb2]
---
Predecessors: [0x56]
Successors: [0x1fb]
---
0xab JUMPDEST
0xac PUSH2 0x86
0xaf PUSH2 0x1fb
0xb2 JUMP
---
0xab: JUMPDEST 
0xac: V46 = 0x86
0xaf: V47 = 0x1fb
0xb2: JUMP 0x1fb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0x61]
Successors: [0x1fd]
---
0xb3 JUMPDEST
0xb4 PUSH2 0x86
0xb7 PUSH2 0x1fd
0xba JUMP
---
0xb3: JUMPDEST 
0xb4: V48 = 0x86
0xb7: V49 = 0x1fd
0xba: JUMP 0x1fd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0xbb
[0xbb:0xf8]
---
Predecessors: [0x7d]
Successors: [0xf9, 0x102]
---
0xbb JUMPDEST
0xbc PUSH1 0x40
0xbe MLOAD
0xbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4 CALLER
0xd5 DUP2
0xd6 AND
0xd7 SWAP2
0xd8 ADDRESS
0xd9 SWAP1
0xda SWAP2
0xdb AND
0xdc BALANCE
0xdd DUP1
0xde ISZERO
0xdf PUSH2 0x8fc
0xe2 MUL
0xe3 SWAP2
0xe4 PUSH1 0x0
0xe6 DUP2
0xe7 DUP2
0xe8 DUP2
0xe9 DUP6
0xea DUP9
0xeb DUP9
0xec CALL
0xed SWAP4
0xee POP
0xef POP
0xf0 POP
0xf1 POP
0xf2 ISZERO
0xf3 DUP1
0xf4 ISZERO
0xf5 PUSH2 0x102
0xf8 JUMPI
---
0xbb: JUMPDEST 
0xbc: V50 = 0x40
0xbe: V51 = M[0x40]
0xbf: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V53 = CALLER
0xd6: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xd8: V55 = ADDRESS
0xdb: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xdc: V57 = BALANCE V56
0xde: V58 = ISZERO V57
0xdf: V59 = 0x8fc
0xe2: V60 = MUL 0x8fc V58
0xe4: V61 = 0x0
0xec: V62 = CALL V60 V54 V57 V51 0x0 V51 0x0
0xf2: V63 = ISZERO V62
0xf4: V64 = ISZERO V63
0xf5: V65 = 0x102
0xf8: JUMPI 0x102 V64
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, 0x86, V63]

================================

Block 0xf9
[0xf9:0x101]
---
Predecessors: [0xbb]
Successors: []
---
0xf9 RETURNDATASIZE
0xfa PUSH1 0x0
0xfc DUP1
0xfd RETURNDATACOPY
0xfe RETURNDATASIZE
0xff PUSH1 0x0
0x101 REVERT
---
0xf9: V66 = RETURNDATASIZE
0xfa: V67 = 0x0
0xfd: RETURNDATACOPY 0x0 0x0 V66
0xfe: V68 = RETURNDATASIZE
0xff: V69 = 0x0
0x101: REVERT 0x0 V68
---
Entry stack: [V11, 0x86, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86, V63]

================================

Block 0x102
[0x102:0x104]
---
Predecessors: [0xbb]
Successors: [0x86]
---
0x102 JUMPDEST
0x103 POP
0x104 JUMP
---
0x102: JUMPDEST 
0x104: JUMP 0x86
---
Entry stack: [V11, 0x86, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x105
[0x105:0x107]
---
Predecessors: [0x94, 0x330]
Successors: [0x108]
---
0x105 JUMPDEST
0x106 PUSH1 0x0
---
0x105: JUMPDEST 
0x106: V70 = 0x0
---
Entry stack: [V11, S3, S2, {0x86, 0x1fb}, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, S3, S2, {0x86, 0x1fb}, S0, 0x0]

================================

Block 0x108
[0x108:0x116]
---
Predecessors: [0x105, 0x1a9]
Successors: [0x117, 0x1ba]
---
0x108 JUMPDEST
0x109 DUP2
0x10a PUSH1 0xff
0x10c AND
0x10d DUP2
0x10e PUSH1 0xff
0x110 AND
0x111 LT
0x112 ISZERO
0x113 PUSH2 0x1ba
0x116 JUMPI
---
0x108: JUMPDEST 
0x10a: V71 = 0xff
0x10c: V72 = AND 0xff S1
0x10e: V73 = 0xff
0x110: V74 = AND 0xff S0
0x111: V75 = LT V74 V72
0x112: V76 = ISZERO V75
0x113: V77 = 0x1ba
0x116: JUMPI 0x1ba V76
---
Entry stack: [V11, S4, S3, {0x86, 0x1fb}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S4, S3, {0x86, 0x1fb}, S1, S0]

================================

Block 0x117
[0x117:0x190]
---
Predecessors: [0x108]
Successors: [0x191, 0x195]
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a SLOAD
0x11b PUSH1 0x1
0x11d SLOAD
0x11e PUSH1 0x40
0x120 DUP1
0x121 MLOAD
0x122 PUSH32 0x7deb602500000000000000000000000000000000000000000000000000000000
0x143 DUP2
0x144 MSTORE
0x145 PUSH1 0x4
0x147 DUP2
0x148 ADD
0x149 DUP6
0x14a SWAP1
0x14b MSTORE
0x14c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161 SWAP3
0x162 DUP4
0x163 AND
0x164 PUSH1 0x24
0x166 DUP3
0x167 ADD
0x168 MSTORE
0x169 SWAP1
0x16a MLOAD
0x16b SWAP2
0x16c SWAP1
0x16d SWAP3
0x16e AND
0x16f SWAP3
0x170 PUSH4 0x7deb6025
0x175 SWAP3
0x176 PUSH2 0x2710
0x179 SWAP3
0x17a PUSH1 0x44
0x17c DUP1
0x17d DUP4
0x17e ADD
0x17f SWAP4
0x180 SWAP3
0x181 DUP3
0x182 SWAP1
0x183 SUB
0x184 ADD
0x185 DUP2
0x186 DUP6
0x187 DUP9
0x188 DUP1
0x189 EXTCODESIZE
0x18a ISZERO
0x18b DUP1
0x18c ISZERO
0x18d PUSH2 0x195
0x190 JUMPI
---
0x117: V78 = 0x0
0x11a: V79 = S[0x0]
0x11b: V80 = 0x1
0x11d: V81 = S[0x1]
0x11e: V82 = 0x40
0x121: V83 = M[0x40]
0x122: V84 = 0x7deb602500000000000000000000000000000000000000000000000000000000
0x144: M[V83] = 0x7deb602500000000000000000000000000000000000000000000000000000000
0x145: V85 = 0x4
0x148: V86 = ADD V83 0x4
0x14b: M[V86] = 0x0
0x14c: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x163: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x164: V89 = 0x24
0x167: V90 = ADD V83 0x24
0x168: M[V90] = V88
0x16a: V91 = M[0x40]
0x16e: V92 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0x170: V93 = 0x7deb6025
0x176: V94 = 0x2710
0x17a: V95 = 0x44
0x17e: V96 = ADD V83 0x44
0x183: V97 = SUB V83 V91
0x184: V98 = ADD V97 0x44
0x189: V99 = EXTCODESIZE V92
0x18a: V100 = ISZERO V99
0x18c: V101 = ISZERO V100
0x18d: V102 = 0x195
0x190: JUMPI 0x195 V101
---
Entry stack: [V11, S4, S3, {0x86, 0x1fb}, S1, S0]
Stack pops: 0
Stack additions: [V92, 0x7deb6025, 0x2710, V96, 0x0, V91, V98, V91, 0x2710, V92, V100]
Exit stack: [V11, S4, S3, {0x86, 0x1fb}, S1, S0, V92, 0x7deb6025, 0x2710, V96, 0x0, V91, V98, V91, 0x2710, V92, V100]

================================

Block 0x191
[0x191:0x194]
---
Predecessors: [0x117]
Successors: []
---
0x191 PUSH1 0x0
0x193 DUP1
0x194 REVERT
---
0x191: V103 = 0x0
0x194: REVERT 0x0 0x0
---
Entry stack: [V11, S15, S14, {0x86, 0x1fb}, S12, S11, V92, 0x7deb6025, 0x2710, V96, 0x0, V91, V98, V91, 0x2710, V92, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, S14, {0x86, 0x1fb}, S12, S11, V92, 0x7deb6025, 0x2710, V96, 0x0, V91, V98, V91, 0x2710, V92, V100]

================================

Block 0x195
[0x195:0x19f]
---
Predecessors: [0x117]
Successors: [0x1a0, 0x1a9]
---
0x195 JUMPDEST
0x196 POP
0x197 GAS
0x198 CALL
0x199 ISZERO
0x19a DUP1
0x19b ISZERO
0x19c PUSH2 0x1a9
0x19f JUMPI
---
0x195: JUMPDEST 
0x197: V104 = GAS
0x198: V105 = CALL V104 V92 0x2710 V91 V98 V91 0x0
0x199: V106 = ISZERO V105
0x19b: V107 = ISZERO V106
0x19c: V108 = 0x1a9
0x19f: JUMPI 0x1a9 V107
---
Entry stack: [V11, S15, S14, {0x86, 0x1fb}, S12, S11, V92, 0x7deb6025, 0x2710, V96, 0x0, V91, V98, V91, 0x2710, V92, V100]
Stack pops: 7
Stack additions: [V106]
Exit stack: [V11, S15, S14, {0x86, 0x1fb}, S12, S11, V92, 0x7deb6025, 0x2710, V96, V106]

================================

Block 0x1a0
[0x1a0:0x1a8]
---
Predecessors: [0x195]
Successors: []
---
0x1a0 RETURNDATASIZE
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 RETURNDATACOPY
0x1a5 RETURNDATASIZE
0x1a6 PUSH1 0x0
0x1a8 REVERT
---
0x1a0: V109 = RETURNDATASIZE
0x1a1: V110 = 0x0
0x1a4: RETURNDATACOPY 0x0 0x0 V109
0x1a5: V111 = RETURNDATASIZE
0x1a6: V112 = 0x0
0x1a8: REVERT 0x0 V111
---
Entry stack: [V11, S9, S8, {0x86, 0x1fb}, S6, S5, V92, 0x7deb6025, 0x2710, V96, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, {0x86, 0x1fb}, S6, S5, V92, 0x7deb6025, 0x2710, V96, V106]

================================

Block 0x1a9
[0x1a9:0x1b9]
---
Predecessors: [0x195]
Successors: [0x108]
---
0x1a9 JUMPDEST
0x1aa POP
0x1ab POP
0x1ac PUSH1 0x1
0x1ae SWAP1
0x1af SWAP4
0x1b0 ADD
0x1b1 SWAP3
0x1b2 POP
0x1b3 PUSH2 0x108
0x1b6 SWAP2
0x1b7 POP
0x1b8 POP
0x1b9 JUMP
---
0x1a9: JUMPDEST 
0x1ac: V113 = 0x1
0x1b0: V114 = ADD S5 0x1
0x1b3: V115 = 0x108
0x1b9: JUMP 0x108
---
Entry stack: [V11, S9, S8, {0x86, 0x1fb}, S6, S5, V92, 0x7deb6025, 0x2710, V96, V106]
Stack pops: 6
Stack additions: [V114]
Exit stack: [V11, S9, S8, {0x86, 0x1fb}, S6, V114]

================================

Block 0x1ba
[0x1ba:0x1bd]
---
Predecessors: [0x108]
Successors: [0x86, 0x1fb]
---
0x1ba JUMPDEST
0x1bb POP
0x1bc POP
0x1bd JUMP
---
0x1ba: JUMPDEST 
0x1bd: JUMP {0x86, 0x1fb}
---
Entry stack: [V11, S4, S3, {0x86, 0x1fb}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S4, S3]

================================

Block 0x1be
[0x1be:0x1fa]
---
Predecessors: [0xa3]
Successors: [0x1fd]
---
0x1be JUMPDEST
0x1bf PUSH1 0x1
0x1c1 DUP1
0x1c2 SLOAD
0x1c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d8 NOT
0x1d9 AND
0x1da CALLER
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 OR
0x1f2 SWAP1
0x1f3 SSTORE
0x1f4 PUSH2 0x1fb
0x1f7 PUSH2 0x1fd
0x1fa JUMP
---
0x1be: JUMPDEST 
0x1bf: V116 = 0x1
0x1c2: V117 = S[0x1]
0x1c3: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V119 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V120 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V117
0x1da: V121 = CALLER
0x1db: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1f1: V124 = OR V123 V120
0x1f3: S[0x1] = V124
0x1f4: V125 = 0x1fb
0x1f7: V126 = 0x1fd
0x1fa: JUMP 0x1fd
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: [0x1fb]
Exit stack: [V11, 0x86, 0x1fb]

================================

Block 0x1fb
[0x1fb:0x1fc]
---
Predecessors: [0xab, 0x1ba, 0x1fb]
Successors: [0x86, 0x1fb]
---
0x1fb JUMPDEST
0x1fc JUMP
---
0x1fb: JUMPDEST 
0x1fc: JUMP S0
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x1fd
[0x1fd:0x27d]
---
Predecessors: [0xb3, 0x1be]
Successors: [0x27e, 0x282]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x0
0x200 DUP1
0x201 SLOAD
0x202 PUSH1 0x1
0x204 SLOAD
0x205 PUSH1 0x40
0x207 DUP1
0x208 MLOAD
0x209 PUSH32 0x7deb602500000000000000000000000000000000000000000000000000000000
0x22a DUP2
0x22b MSTORE
0x22c PUSH1 0x4
0x22e DUP2
0x22f ADD
0x230 DUP6
0x231 SWAP1
0x232 MSTORE
0x233 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x248 SWAP3
0x249 DUP4
0x24a AND
0x24b PUSH1 0x24
0x24d DUP3
0x24e ADD
0x24f MSTORE
0x250 SWAP1
0x251 MLOAD
0x252 SWAP2
0x253 SWAP1
0x254 SWAP3
0x255 AND
0x256 SWAP3
0x257 PUSH4 0x7deb6025
0x25c SWAP3
0x25d PUSH8 0x16345785d8a0000
0x266 SWAP3
0x267 PUSH1 0x44
0x269 DUP1
0x26a DUP4
0x26b ADD
0x26c SWAP4
0x26d SWAP3
0x26e DUP3
0x26f SWAP1
0x270 SUB
0x271 ADD
0x272 DUP2
0x273 DUP6
0x274 DUP9
0x275 DUP1
0x276 EXTCODESIZE
0x277 ISZERO
0x278 DUP1
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V127 = 0x0
0x201: V128 = S[0x0]
0x202: V129 = 0x1
0x204: V130 = S[0x1]
0x205: V131 = 0x40
0x208: V132 = M[0x40]
0x209: V133 = 0x7deb602500000000000000000000000000000000000000000000000000000000
0x22b: M[V132] = 0x7deb602500000000000000000000000000000000000000000000000000000000
0x22c: V134 = 0x4
0x22f: V135 = ADD V132 0x4
0x232: M[V135] = 0x0
0x233: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x24b: V138 = 0x24
0x24e: V139 = ADD V132 0x24
0x24f: M[V139] = V137
0x251: V140 = M[0x40]
0x255: V141 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x257: V142 = 0x7deb6025
0x25d: V143 = 0x16345785d8a0000
0x267: V144 = 0x44
0x26b: V145 = ADD V132 0x44
0x270: V146 = SUB V132 V140
0x271: V147 = ADD V146 0x44
0x276: V148 = EXTCODESIZE V141
0x277: V149 = ISZERO V148
0x279: V150 = ISZERO V149
0x27a: V151 = 0x282
0x27d: JUMPI 0x282 V150
---
Entry stack: [V11, S1, {0x86, 0x1fb}]
Stack pops: 0
Stack additions: [V141, 0x7deb6025, 0x16345785d8a0000, V145, 0x0, V140, V147, V140, 0x16345785d8a0000, V141, V149]
Exit stack: [V11, S1, {0x86, 0x1fb}, V141, 0x7deb6025, 0x16345785d8a0000, V145, 0x0, V140, V147, V140, 0x16345785d8a0000, V141, V149]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x1fd]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V152 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V11, S12, {0x86, 0x1fb}, V141, 0x7deb6025, 0x16345785d8a0000, V145, 0x0, V140, V147, V140, 0x16345785d8a0000, V141, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, {0x86, 0x1fb}, V141, 0x7deb6025, 0x16345785d8a0000, V145, 0x0, V140, V147, V140, 0x16345785d8a0000, V141, V149]

================================

Block 0x282
[0x282:0x28c]
---
Predecessors: [0x1fd]
Successors: [0x28d, 0x296]
---
0x282 JUMPDEST
0x283 POP
0x284 GAS
0x285 CALL
0x286 ISZERO
0x287 DUP1
0x288 ISZERO
0x289 PUSH2 0x296
0x28c JUMPI
---
0x282: JUMPDEST 
0x284: V153 = GAS
0x285: V154 = CALL V153 V141 0x16345785d8a0000 V140 V147 V140 0x0
0x286: V155 = ISZERO V154
0x288: V156 = ISZERO V155
0x289: V157 = 0x296
0x28c: JUMPI 0x296 V156
---
Entry stack: [V11, S12, {0x86, 0x1fb}, V141, 0x7deb6025, 0x16345785d8a0000, V145, 0x0, V140, V147, V140, 0x16345785d8a0000, V141, V149]
Stack pops: 7
Stack additions: [V155]
Exit stack: [V11, S12, {0x86, 0x1fb}, V141, 0x7deb6025, 0x16345785d8a0000, V145, V155]

================================

Block 0x28d
[0x28d:0x295]
---
Predecessors: [0x282]
Successors: []
---
0x28d RETURNDATASIZE
0x28e PUSH1 0x0
0x290 DUP1
0x291 RETURNDATACOPY
0x292 RETURNDATASIZE
0x293 PUSH1 0x0
0x295 REVERT
---
0x28d: V158 = RETURNDATASIZE
0x28e: V159 = 0x0
0x291: RETURNDATACOPY 0x0 0x0 V158
0x292: V160 = RETURNDATASIZE
0x293: V161 = 0x0
0x295: REVERT 0x0 V160
---
Entry stack: [V11, S6, {0x86, 0x1fb}, V141, 0x7deb6025, 0x16345785d8a0000, V145, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, {0x86, 0x1fb}, V141, 0x7deb6025, 0x16345785d8a0000, V145, V155]

================================

Block 0x296
[0x296:0x317]
---
Predecessors: [0x282]
Successors: [0x318, 0x31c]
---
0x296 JUMPDEST
0x297 POP
0x298 POP
0x299 PUSH1 0x0
0x29b DUP1
0x29c SLOAD
0x29d PUSH1 0x1
0x29f SLOAD
0x2a0 PUSH1 0x40
0x2a2 DUP1
0x2a3 MLOAD
0x2a4 PUSH31 0xf714ce00000000000000000000000000000000000000000000000000000000
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH8 0xde0b6b3a7640000
0x2cf PUSH1 0x4
0x2d1 DUP3
0x2d2 ADD
0x2d3 MSTORE
0x2d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e9 SWAP3
0x2ea DUP4
0x2eb AND
0x2ec PUSH1 0x24
0x2ee DUP3
0x2ef ADD
0x2f0 MSTORE
0x2f1 SWAP1
0x2f2 MLOAD
0x2f3 SWAP2
0x2f4 SWAP1
0x2f5 SWAP3
0x2f6 AND
0x2f7 SWAP6
0x2f8 POP
0x2f9 PUSH3 0xf714ce
0x2fd SWAP5
0x2fe POP
0x2ff PUSH1 0x44
0x301 DUP1
0x302 DUP4
0x303 ADD
0x304 SWAP5
0x305 POP
0x306 SWAP1
0x307 SWAP2
0x308 DUP3
0x309 SWAP1
0x30a SUB
0x30b ADD
0x30c DUP2
0x30d DUP4
0x30e DUP8
0x30f DUP1
0x310 EXTCODESIZE
0x311 ISZERO
0x312 DUP1
0x313 ISZERO
0x314 PUSH2 0x31c
0x317 JUMPI
---
0x296: JUMPDEST 
0x299: V162 = 0x0
0x29c: V163 = S[0x0]
0x29d: V164 = 0x1
0x29f: V165 = S[0x1]
0x2a0: V166 = 0x40
0x2a3: V167 = M[0x40]
0x2a4: V168 = 0xf714ce00000000000000000000000000000000000000000000000000000000
0x2c5: M[V167] = 0xf714ce00000000000000000000000000000000000000000000000000000000
0x2c6: V169 = 0xde0b6b3a7640000
0x2cf: V170 = 0x4
0x2d2: V171 = ADD V167 0x4
0x2d3: M[V171] = 0xde0b6b3a7640000
0x2d4: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2ec: V174 = 0x24
0x2ef: V175 = ADD V167 0x24
0x2f0: M[V175] = V173
0x2f2: V176 = M[0x40]
0x2f6: V177 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V178 = 0xf714ce
0x2ff: V179 = 0x44
0x303: V180 = ADD V167 0x44
0x30a: V181 = SUB V167 V176
0x30b: V182 = ADD V181 0x44
0x310: V183 = EXTCODESIZE V177
0x311: V184 = ISZERO V183
0x313: V185 = ISZERO V184
0x314: V186 = 0x31c
0x317: JUMPI 0x31c V185
---
Entry stack: [V11, S6, {0x86, 0x1fb}, V141, 0x7deb6025, 0x16345785d8a0000, V145, V155]
Stack pops: 5
Stack additions: [V177, 0xf714ce, V180, 0x0, V176, V182, V176, 0x0, V177, V184]
Exit stack: [V11, S6, {0x86, 0x1fb}, V177, 0xf714ce, V180, 0x0, V176, V182, V176, 0x0, V177, V184]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0x296]
Successors: []
---
0x318 PUSH1 0x0
0x31a DUP1
0x31b REVERT
---
0x318: V187 = 0x0
0x31b: REVERT 0x0 0x0
---
Entry stack: [V11, S11, {0x86, 0x1fb}, V177, 0xf714ce, V180, 0x0, V176, V182, V176, 0x0, V177, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S11, {0x86, 0x1fb}, V177, 0xf714ce, V180, 0x0, V176, V182, V176, 0x0, V177, V184]

================================

Block 0x31c
[0x31c:0x326]
---
Predecessors: [0x296]
Successors: [0x327, 0x330]
---
0x31c JUMPDEST
0x31d POP
0x31e GAS
0x31f CALL
0x320 ISZERO
0x321 DUP1
0x322 ISZERO
0x323 PUSH2 0x330
0x326 JUMPI
---
0x31c: JUMPDEST 
0x31e: V188 = GAS
0x31f: V189 = CALL V188 V177 0x0 V176 V182 V176 0x0
0x320: V190 = ISZERO V189
0x322: V191 = ISZERO V190
0x323: V192 = 0x330
0x326: JUMPI 0x330 V191
---
Entry stack: [V11, S11, {0x86, 0x1fb}, V177, 0xf714ce, V180, 0x0, V176, V182, V176, 0x0, V177, V184]
Stack pops: 7
Stack additions: [V190]
Exit stack: [V11, S11, {0x86, 0x1fb}, V177, 0xf714ce, V180, V190]

================================

Block 0x327
[0x327:0x32f]
---
Predecessors: [0x31c]
Successors: []
---
0x327 RETURNDATASIZE
0x328 PUSH1 0x0
0x32a DUP1
0x32b RETURNDATACOPY
0x32c RETURNDATASIZE
0x32d PUSH1 0x0
0x32f REVERT
---
0x327: V193 = RETURNDATASIZE
0x328: V194 = 0x0
0x32b: RETURNDATACOPY 0x0 0x0 V193
0x32c: V195 = RETURNDATASIZE
0x32d: V196 = 0x0
0x32f: REVERT 0x0 V195
---
Entry stack: [V11, S5, {0x86, 0x1fb}, V177, 0xf714ce, V180, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, {0x86, 0x1fb}, V177, 0xf714ce, V180, V190]

================================

Block 0x330
[0x330:0x33d]
---
Predecessors: [0x31c]
Successors: [0x105]
---
0x330 JUMPDEST
0x331 POP
0x332 POP
0x333 POP
0x334 POP
0x335 PUSH2 0x1fb
0x338 PUSH1 0x14
0x33a PUSH2 0x105
0x33d JUMP
---
0x330: JUMPDEST 
0x335: V197 = 0x1fb
0x338: V198 = 0x14
0x33a: V199 = 0x105
0x33d: JUMP 0x105
---
Entry stack: [V11, S5, {0x86, 0x1fb}, V177, 0xf714ce, V180, V190]
Stack pops: 4
Stack additions: [0x1fb, 0x14]
Exit stack: [V11, S5, {0x86, 0x1fb}, 0x1fb, 0x14]

================================

Block 0x33e
[0x33e:0x36c]
---
Predecessors: []
Successors: []
---
0x33e STOP
0x33f LOG1
0x340 PUSH6 0x627a7a723058
0x347 SHA3
0x348 REVERT
0x349 MISSING 0xb0
0x34a DUP12
0x34b MISSING 0x4c
0x34c BYTE
0x34d PUSH5 0xb59704eecd
0x353 GT
0x354 MISSING 0x22
0x355 MISSING 0x4b
0x356 MISSING 0xe4
0x357 PUSH21 0x79955f20cd896a4853a4a2b348f77770029
---
0x33e: STOP 
0x33f: LOG S0 S1 S2
0x340: V200 = 0x627a7a723058
0x347: V201 = SHA3 0x627a7a723058 S3
0x348: REVERT V201 S4
0x349: MISSING 0xb0
0x34b: MISSING 0x4c
0x34c: V202 = BYTE S0 S1
0x34d: V203 = 0xb59704eecd
0x353: V204 = GT 0xb59704eecd V202
0x354: MISSING 0x22
0x355: MISSING 0x4b
0x356: MISSING 0xe4
0x357: V205 = 0x79955f20cd896a4853a4a2b348f77770029
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V204, 0x79955f20cd896a4853a4a2b348f77770029]
Exit stack: []

================================

Function 0:
Public function signature: 0x16213755
Entry block: 0x71
Exit block: 0x86
Body: 0x71, 0x79, 0x7d, 0x86, 0xbb, 0xf9, 0x102

Function 1:
Public function signature: 0x5ebefb16
Entry block: 0x88
Exit block: 0x90
Body: 0x86, 0x88, 0x90, 0x94

Function 2:
Public function signature: 0x64a285fd
Entry block: 0xa3
Exit block: 0x86
Body: 0x86, 0xa3, 0x1be, 0x1fb

Function 3:
Public function signature: 0xc29ec459
Entry block: 0xab
Exit block: 0x86
Body: 0x86, 0xab

Function 4:
Public function signature: 0xddfae529
Entry block: 0xb3
Exit block: 0x86
Body: 0x86, 0xb3

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0x105
Exit block: 0x1fb
Body: 0x105, 0x108, 0x117, 0x195, 0x1a9, 0x1ba

Function 7:
Private function
Entry block: 0x1fd
Exit block: 0x1fb
Body: 0x1fb, 0x1fd, 0x282, 0x296, 0x31c, 0x330

