Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x150]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x150
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x150
0xc: JUMPI 0x150 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x152]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x42cefc1
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x152
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x42cefc1
0x22: V15 = EQ V13 0x42cefc1
0x23: V16 = 0x152
0x26: JUMPI 0x152 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x179]
---
0x27 DUP1
0x28 PUSH4 0x7f67dbd
0x2d EQ
0x2e PUSH2 0x179
0x31 JUMPI
---
0x28: V17 = 0x7f67dbd
0x2d: V18 = EQ 0x7f67dbd V13
0x2e: V19 = 0x179
0x31: JUMPI 0x179 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1a0]
---
0x32 DUP1
0x33 PUSH4 0xb0db12d
0x38 EQ
0x39 PUSH2 0x1a0
0x3c JUMPI
---
0x33: V20 = 0xb0db12d
0x38: V21 = EQ 0xb0db12d V13
0x39: V22 = 0x1a0
0x3c: JUMPI 0x1a0 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x1d7]
---
0x3d DUP1
0x3e PUSH4 0x10fe6584
0x43 EQ
0x44 PUSH2 0x1d7
0x47 JUMPI
---
0x3e: V23 = 0x10fe6584
0x43: V24 = EQ 0x10fe6584 V13
0x44: V25 = 0x1d7
0x47: JUMPI 0x1d7 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x208]
---
0x48 DUP1
0x49 PUSH4 0x13af4035
0x4e EQ
0x4f PUSH2 0x208
0x52 JUMPI
---
0x49: V26 = 0x13af4035
0x4e: V27 = EQ 0x13af4035 V13
0x4f: V28 = 0x208
0x52: JUMPI 0x208 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x229]
---
0x53 DUP1
0x54 PUSH4 0x2881178b
0x59 EQ
0x5a PUSH2 0x229
0x5d JUMPI
---
0x54: V29 = 0x2881178b
0x59: V30 = EQ 0x2881178b V13
0x5a: V31 = 0x229
0x5d: JUMPI 0x229 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x250]
---
0x5e DUP1
0x5f PUSH4 0x2d8815c8
0x64 EQ
0x65 PUSH2 0x250
0x68 JUMPI
---
0x5f: V32 = 0x2d8815c8
0x64: V33 = EQ 0x2d8815c8 V13
0x65: V34 = 0x250
0x68: JUMPI 0x250 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x258]
---
0x69 DUP1
0x6a PUSH4 0x2fe6a1e6
0x6f EQ
0x70 PUSH2 0x258
0x73 JUMPI
---
0x6a: V35 = 0x2fe6a1e6
0x6f: V36 = EQ 0x2fe6a1e6 V13
0x70: V37 = 0x258
0x73: JUMPI 0x258 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x260]
---
0x74 DUP1
0x75 PUSH4 0x4cf667d9
0x7a EQ
0x7b PUSH2 0x260
0x7e JUMPI
---
0x75: V38 = 0x4cf667d9
0x7a: V39 = EQ 0x4cf667d9 V13
0x7b: V40 = 0x260
0x7e: JUMPI 0x260 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x258]
---
0x7f DUP1
0x80 PUSH4 0x5fecf62c
0x85 EQ
0x86 PUSH2 0x258
0x89 JUMPI
---
0x80: V41 = 0x5fecf62c
0x85: V42 = EQ 0x5fecf62c V13
0x86: V43 = 0x258
0x89: JUMPI 0x258 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x278]
---
0x8a DUP1
0x8b PUSH4 0x781851a7
0x90 EQ
0x91 PUSH2 0x278
0x94 JUMPI
---
0x8b: V44 = 0x781851a7
0x90: V45 = EQ 0x781851a7 V13
0x91: V46 = 0x278
0x94: JUMPI 0x278 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x306]
---
0x95 DUP1
0x96 PUSH4 0x78914887
0x9b EQ
0x9c PUSH2 0x306
0x9f JUMPI
---
0x96: V47 = 0x78914887
0x9b: V48 = EQ 0x78914887 V13
0x9c: V49 = 0x306
0x9f: JUMPI 0x306 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x327]
---
0xa0 DUP1
0xa1 PUSH4 0x798cc26a
0xa6 EQ
0xa7 PUSH2 0x327
0xaa JUMPI
---
0xa1: V50 = 0x798cc26a
0xa6: V51 = EQ 0x798cc26a V13
0xa7: V52 = 0x327
0xaa: JUMPI 0x327 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x33c]
---
0xab DUP1
0xac PUSH4 0x7db65b17
0xb1 EQ
0xb2 PUSH2 0x33c
0xb5 JUMPI
---
0xac: V53 = 0x7db65b17
0xb1: V54 = EQ 0x7db65b17 V13
0xb2: V55 = 0x33c
0xb5: JUMPI 0x33c V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x357]
---
0xb6 DUP1
0xb7 PUSH4 0x841586e0
0xbc EQ
0xbd PUSH2 0x357
0xc0 JUMPI
---
0xb7: V56 = 0x841586e0
0xbc: V57 = EQ 0x841586e0 V13
0xbd: V58 = 0x357
0xc0: JUMPI 0x357 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x36c]
---
0xc1 DUP1
0xc2 PUSH4 0x893d20e8
0xc7 EQ
0xc8 PUSH2 0x36c
0xcb JUMPI
---
0xc2: V59 = 0x893d20e8
0xc7: V60 = EQ 0x893d20e8 V13
0xc8: V61 = 0x36c
0xcb: JUMPI 0x36c V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x381]
---
0xcc DUP1
0xcd PUSH4 0x929dd1e0
0xd2 EQ
0xd3 PUSH2 0x381
0xd6 JUMPI
---
0xcd: V62 = 0x929dd1e0
0xd2: V63 = EQ 0x929dd1e0 V13
0xd3: V64 = 0x381
0xd6: JUMPI 0x381 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x389]
---
0xd7 DUP1
0xd8 PUSH4 0x9801354f
0xdd EQ
0xde PUSH2 0x389
0xe1 JUMPI
---
0xd8: V65 = 0x9801354f
0xdd: V66 = EQ 0x9801354f V13
0xde: V67 = 0x389
0xe1: JUMPI 0x389 V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed, 0x3aa]
---
0xe2 DUP1
0xe3 PUSH4 0xb00a6d92
0xe8 EQ
0xe9 PUSH2 0x3aa
0xec JUMPI
---
0xe3: V68 = 0xb00a6d92
0xe8: V69 = EQ 0xb00a6d92 V13
0xe9: V70 = 0x3aa
0xec: JUMPI 0x3aa V69
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xed
[0xed:0xf7]
---
Predecessors: [0xe2]
Successors: [0xf8, 0x3bf]
---
0xed DUP1
0xee PUSH4 0xb92e7207
0xf3 EQ
0xf4 PUSH2 0x3bf
0xf7 JUMPI
---
0xee: V71 = 0xb92e7207
0xf3: V72 = EQ 0xb92e7207 V13
0xf4: V73 = 0x3bf
0xf7: JUMPI 0x3bf V72
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0x102]
---
Predecessors: [0xed]
Successors: [0x103, 0x3da]
---
0xf8 DUP1
0xf9 PUSH4 0xcf39918e
0xfe EQ
0xff PUSH2 0x3da
0x102 JUMPI
---
0xf9: V74 = 0xcf39918e
0xfe: V75 = EQ 0xcf39918e V13
0xff: V76 = 0x3da
0x102: JUMPI 0x3da V75
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x103
[0x103:0x10d]
---
Predecessors: [0xf8]
Successors: [0x10e, 0x3f2]
---
0x103 DUP1
0x104 PUSH4 0xd1bd1d6e
0x109 EQ
0x10a PUSH2 0x3f2
0x10d JUMPI
---
0x104: V77 = 0xd1bd1d6e
0x109: V78 = EQ 0xd1bd1d6e V13
0x10a: V79 = 0x3f2
0x10d: JUMPI 0x3f2 V78
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x10e
[0x10e:0x118]
---
Predecessors: [0x103]
Successors: [0x119, 0x407]
---
0x10e DUP1
0x10f PUSH4 0xd974081f
0x114 EQ
0x115 PUSH2 0x407
0x118 JUMPI
---
0x10f: V80 = 0xd974081f
0x114: V81 = EQ 0xd974081f V13
0x115: V82 = 0x407
0x118: JUMPI 0x407 V81
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x119
[0x119:0x123]
---
Predecessors: [0x10e]
Successors: [0x124, 0x422]
---
0x119 DUP1
0x11a PUSH4 0xdf41b67c
0x11f EQ
0x120 PUSH2 0x422
0x123 JUMPI
---
0x11a: V83 = 0xdf41b67c
0x11f: V84 = EQ 0xdf41b67c V13
0x120: V85 = 0x422
0x123: JUMPI 0x422 V84
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x124
[0x124:0x12e]
---
Predecessors: [0x119]
Successors: [0x12f, 0x446]
---
0x124 DUP1
0x125 PUSH4 0xe1d1cb13
0x12a EQ
0x12b PUSH2 0x446
0x12e JUMPI
---
0x125: V86 = 0xe1d1cb13
0x12a: V87 = EQ 0xe1d1cb13 V13
0x12b: V88 = 0x446
0x12e: JUMPI 0x446 V87
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x12f
[0x12f:0x139]
---
Predecessors: [0x124]
Successors: [0x13a, 0x483]
---
0x12f DUP1
0x130 PUSH4 0xea2143c2
0x135 EQ
0x136 PUSH2 0x483
0x139 JUMPI
---
0x130: V89 = 0xea2143c2
0x135: V90 = EQ 0xea2143c2 V13
0x136: V91 = 0x483
0x139: JUMPI 0x483 V90
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x13a
[0x13a:0x144]
---
Predecessors: [0x12f]
Successors: [0x145, 0x4a4]
---
0x13a DUP1
0x13b PUSH4 0xedba7f8f
0x140 EQ
0x141 PUSH2 0x4a4
0x144 JUMPI
---
0x13b: V92 = 0xedba7f8f
0x140: V93 = EQ 0xedba7f8f V13
0x141: V94 = 0x4a4
0x144: JUMPI 0x4a4 V93
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x145
[0x145:0x14f]
---
Predecessors: [0x13a]
Successors: [0x150, 0x4bf]
---
0x145 DUP1
0x146 PUSH4 0xf7e17fe9
0x14b EQ
0x14c PUSH2 0x4bf
0x14f JUMPI
---
0x146: V95 = 0xf7e17fe9
0x14b: V96 = EQ 0xf7e17fe9 V13
0x14c: V97 = 0x4bf
0x14f: JUMPI 0x4bf V96
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x150
[0x150:0x151]
---
Predecessors: [0x0, 0x145, 0x622, 0x728, 0x7e1, 0x839, 0x853, 0x939, 0xcdf, 0xdfc, 0xf1a, 0xf57]
Successors: []
---
0x150 JUMPDEST
0x151 STOP
---
0x150: JUMPDEST 
0x151: STOP 
---
Entry stack: [V13, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S0]

================================

Block 0x152
[0x152:0x159]
---
Predecessors: [0xd]
Successors: [0x15a, 0x15e]
---
0x152 JUMPDEST
0x153 CALLVALUE
0x154 DUP1
0x155 ISZERO
0x156 PUSH2 0x15e
0x159 JUMPI
---
0x152: JUMPDEST 
0x153: V98 = CALLVALUE
0x155: V99 = ISZERO V98
0x156: V100 = 0x15e
0x159: JUMPI 0x15e V99
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V13, V98]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0x152]
Successors: []
---
0x15a PUSH1 0x0
0x15c DUP1
0x15d REVERT
---
0x15a: V101 = 0x0
0x15d: REVERT 0x0 0x0
---
Entry stack: [V13, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V98]

================================

Block 0x15e
[0x15e:0x178]
---
Predecessors: [0x152]
Successors: [0x4c7]
---
0x15e JUMPDEST
0x15f POP
0x160 PUSH2 0x150
0x163 PUSH1 0xff
0x165 PUSH1 0x4
0x167 CALLDATALOAD
0x168 AND
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 PUSH1 0x24
0x173 CALLDATALOAD
0x174 AND
0x175 PUSH2 0x4c7
0x178 JUMP
---
0x15e: JUMPDEST 
0x160: V102 = 0x150
0x163: V103 = 0xff
0x165: V104 = 0x4
0x167: V105 = CALLDATALOAD 0x4
0x168: V106 = AND V105 0xff
0x169: V107 = 0x1
0x16b: V108 = 0xa0
0x16d: V109 = 0x2
0x16f: V110 = EXP 0x2 0xa0
0x170: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V112 = 0x24
0x173: V113 = CALLDATALOAD 0x24
0x174: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x175: V115 = 0x4c7
0x178: JUMP 0x4c7
---
Entry stack: [V13, V98]
Stack pops: 1
Stack additions: [0x150, V106, V114]
Exit stack: [V13, 0x150, V106, V114]

================================

Block 0x179
[0x179:0x180]
---
Predecessors: [0x27]
Successors: [0x181, 0x185]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b DUP1
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0x179: JUMPDEST 
0x17a: V116 = CALLVALUE
0x17c: V117 = ISZERO V116
0x17d: V118 = 0x185
0x180: JUMPI 0x185 V117
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V13, V116]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x179]
Successors: []
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
---
0x181: V119 = 0x0
0x184: REVERT 0x0 0x0
---
Entry stack: [V13, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V116]

================================

Block 0x185
[0x185:0x19f]
---
Predecessors: [0x179]
Successors: [0x628]
---
0x185 JUMPDEST
0x186 POP
0x187 PUSH2 0x150
0x18a PUSH1 0xff
0x18c PUSH1 0x4
0x18e CALLDATALOAD
0x18f AND
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 PUSH1 0x24
0x19a CALLDATALOAD
0x19b AND
0x19c PUSH2 0x628
0x19f JUMP
---
0x185: JUMPDEST 
0x187: V120 = 0x150
0x18a: V121 = 0xff
0x18c: V122 = 0x4
0x18e: V123 = CALLDATALOAD 0x4
0x18f: V124 = AND V123 0xff
0x190: V125 = 0x1
0x192: V126 = 0xa0
0x194: V127 = 0x2
0x196: V128 = EXP 0x2 0xa0
0x197: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V130 = 0x24
0x19a: V131 = CALLDATALOAD 0x24
0x19b: V132 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V133 = 0x628
0x19f: JUMP 0x628
---
Entry stack: [V13, V116]
Stack pops: 1
Stack additions: [0x150, V124, V132]
Exit stack: [V13, 0x150, V124, V132]

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x32]
Successors: [0x1a8, 0x1ac]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 DUP1
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V134 = CALLVALUE
0x1a3: V135 = ISZERO V134
0x1a4: V136 = 0x1ac
0x1a7: JUMPI 0x1ac V135
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V134]
Exit stack: [V13, V134]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V137 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V13, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V134]

================================

Block 0x1ac
[0x1ac:0x1c0]
---
Predecessors: [0x1a0]
Successors: [0x75b]
---
0x1ac JUMPDEST
0x1ad POP
0x1ae PUSH2 0x1c1
0x1b1 PUSH1 0x1
0x1b3 PUSH1 0xa0
0x1b5 PUSH1 0x2
0x1b7 EXP
0x1b8 SUB
0x1b9 PUSH1 0x4
0x1bb CALLDATALOAD
0x1bc AND
0x1bd PUSH2 0x75b
0x1c0 JUMP
---
0x1ac: JUMPDEST 
0x1ae: V138 = 0x1c1
0x1b1: V139 = 0x1
0x1b3: V140 = 0xa0
0x1b5: V141 = 0x2
0x1b7: V142 = EXP 0x2 0xa0
0x1b8: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b9: V144 = 0x4
0x1bb: V145 = CALLDATALOAD 0x4
0x1bc: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V147 = 0x75b
0x1c0: JUMP 0x75b
---
Entry stack: [V13, V134]
Stack pops: 1
Stack additions: [0x1c1, V146]
Exit stack: [V13, 0x1c1, V146]

================================

Block 0x1c1
[0x1c1:0x1d6]
---
Predecessors: [0x75b]
Successors: []
---
0x1c1 JUMPDEST
0x1c2 PUSH1 0x40
0x1c4 DUP1
0x1c5 MLOAD
0x1c6 PUSH1 0xff
0x1c8 SWAP1
0x1c9 SWAP3
0x1ca AND
0x1cb DUP3
0x1cc MSTORE
0x1cd MLOAD
0x1ce SWAP1
0x1cf DUP2
0x1d0 SWAP1
0x1d1 SUB
0x1d2 PUSH1 0x20
0x1d4 ADD
0x1d5 SWAP1
0x1d6 RETURN
---
0x1c1: JUMPDEST 
0x1c2: V148 = 0x40
0x1c5: V149 = M[0x40]
0x1c6: V150 = 0xff
0x1ca: V151 = AND V660 0xff
0x1cc: M[V149] = V151
0x1cd: V152 = M[0x40]
0x1d1: V153 = SUB V149 V152
0x1d2: V154 = 0x20
0x1d4: V155 = ADD 0x20 V153
0x1d6: RETURN V152 V155
---
Entry stack: [V13, 0x1c1, V660]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1c1]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0x3d]
Successors: [0x1df, 0x1e3]
---
0x1d7 JUMPDEST
0x1d8 CALLVALUE
0x1d9 DUP1
0x1da ISZERO
0x1db PUSH2 0x1e3
0x1de JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V156 = CALLVALUE
0x1da: V157 = ISZERO V156
0x1db: V158 = 0x1e3
0x1de: JUMPI 0x1e3 V157
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V156]
Exit stack: [V13, V156]

================================

Block 0x1df
[0x1df:0x1e2]
---
Predecessors: [0x1d7]
Successors: []
---
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 REVERT
---
0x1df: V159 = 0x0
0x1e2: REVERT 0x0 0x0
---
Entry stack: [V13, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V156]

================================

Block 0x1e3
[0x1e3:0x1eb]
---
Predecessors: [0x1d7]
Successors: [0x770]
---
0x1e3 JUMPDEST
0x1e4 POP
0x1e5 PUSH2 0x1ec
0x1e8 PUSH2 0x770
0x1eb JUMP
---
0x1e3: JUMPDEST 
0x1e5: V160 = 0x1ec
0x1e8: V161 = 0x770
0x1eb: JUMP 0x770
---
Entry stack: [V13, V156]
Stack pops: 1
Stack additions: [0x1ec]
Exit stack: [V13, 0x1ec]

================================

Block 0x1ec
[0x1ec:0x207]
---
Predecessors: [0x770, 0x863, 0x93e, 0x963, 0x968, 0x98c, 0xb94, 0xb98, 0xbb9, 0xbe6, 0xbf5, 0xf3c]
Successors: []
---
0x1ec JUMPDEST
0x1ed PUSH1 0x40
0x1ef DUP1
0x1f0 MLOAD
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 SWAP1
0x1fa SWAP3
0x1fb AND
0x1fc DUP3
0x1fd MSTORE
0x1fe MLOAD
0x1ff SWAP1
0x200 DUP2
0x201 SWAP1
0x202 SUB
0x203 PUSH1 0x20
0x205 ADD
0x206 SWAP1
0x207 RETURN
---
0x1ec: JUMPDEST 
0x1ed: V162 = 0x40
0x1f0: V163 = M[0x40]
0x1f1: V164 = 0x1
0x1f3: V165 = 0xa0
0x1f5: V166 = 0x2
0x1f7: V167 = EXP 0x2 0xa0
0x1f8: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fb: V169 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: M[V163] = V169
0x1fe: V170 = M[0x40]
0x202: V171 = SUB V163 V170
0x203: V172 = 0x20
0x205: V173 = ADD 0x20 V171
0x207: RETURN V170 V173
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S2, S1]

================================

Block 0x208
[0x208:0x20f]
---
Predecessors: [0x48]
Successors: [0x210, 0x214]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a DUP1
0x20b ISZERO
0x20c PUSH2 0x214
0x20f JUMPI
---
0x208: JUMPDEST 
0x209: V174 = CALLVALUE
0x20b: V175 = ISZERO V174
0x20c: V176 = 0x214
0x20f: JUMPI 0x214 V175
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V174]
Exit stack: [V13, V174]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x208]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V177 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V13, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V174]

================================

Block 0x214
[0x214:0x228]
---
Predecessors: [0x208]
Successors: [0x77f]
---
0x214 JUMPDEST
0x215 POP
0x216 PUSH2 0x150
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 PUSH1 0x4
0x223 CALLDATALOAD
0x224 AND
0x225 PUSH2 0x77f
0x228 JUMP
---
0x214: JUMPDEST 
0x216: V178 = 0x150
0x219: V179 = 0x1
0x21b: V180 = 0xa0
0x21d: V181 = 0x2
0x21f: V182 = EXP 0x2 0xa0
0x220: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V184 = 0x4
0x223: V185 = CALLDATALOAD 0x4
0x224: V186 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x225: V187 = 0x77f
0x228: JUMP 0x77f
---
Entry stack: [V13, V174]
Stack pops: 1
Stack additions: [0x150, V186]
Exit stack: [V13, 0x150, V186]

================================

Block 0x229
[0x229:0x230]
---
Predecessors: [0x53]
Successors: [0x231, 0x235]
---
0x229 JUMPDEST
0x22a CALLVALUE
0x22b DUP1
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x229: JUMPDEST 
0x22a: V188 = CALLVALUE
0x22c: V189 = ISZERO V188
0x22d: V190 = 0x235
0x230: JUMPI 0x235 V189
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V188]
Exit stack: [V13, V188]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x229]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V191 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V13, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V188]

================================

Block 0x235
[0x235:0x23d]
---
Predecessors: [0x229]
Successors: [0x803]
---
0x235 JUMPDEST
0x236 POP
0x237 PUSH2 0x23e
0x23a PUSH2 0x803
0x23d JUMP
---
0x235: JUMPDEST 
0x237: V192 = 0x23e
0x23a: V193 = 0x803
0x23d: JUMP 0x803
---
Entry stack: [V13, V188]
Stack pops: 1
Stack additions: [0x23e]
Exit stack: [V13, 0x23e]

================================

Block 0x23e
[0x23e:0x24f]
---
Predecessors: [0x803, 0x986, 0xbb3, 0xbd4]
Successors: []
---
0x23e JUMPDEST
0x23f PUSH1 0x40
0x241 DUP1
0x242 MLOAD
0x243 SWAP2
0x244 DUP3
0x245 MSTORE
0x246 MLOAD
0x247 SWAP1
0x248 DUP2
0x249 SWAP1
0x24a SUB
0x24b PUSH1 0x20
0x24d ADD
0x24e SWAP1
0x24f RETURN
---
0x23e: JUMPDEST 
0x23f: V194 = 0x40
0x242: V195 = M[0x40]
0x245: M[V195] = S0
0x246: V196 = M[0x40]
0x24a: V197 = SUB V195 V196
0x24b: V198 = 0x20
0x24d: V199 = ADD 0x20 V197
0x24f: RETURN V196 V199
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x250
[0x250:0x257]
---
Predecessors: [0x5e]
Successors: [0x809]
---
0x250 JUMPDEST
0x251 PUSH2 0x150
0x254 PUSH2 0x809
0x257 JUMP
---
0x250: JUMPDEST 
0x251: V200 = 0x150
0x254: V201 = 0x809
0x257: JUMP 0x809
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V13, 0x150]

================================

Block 0x258
[0x258:0x25f]
---
Predecessors: [0x69, 0x7f]
Successors: [0x853]
---
0x258 JUMPDEST
0x259 PUSH2 0x150
0x25c PUSH2 0x853
0x25f JUMP
---
0x258: JUMPDEST 
0x259: V202 = 0x150
0x25c: V203 = 0x853
0x25f: JUMP 0x853
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V13, 0x150]

================================

Block 0x260
[0x260:0x267]
---
Predecessors: [0x74]
Successors: [0x268, 0x26c]
---
0x260 JUMPDEST
0x261 CALLVALUE
0x262 DUP1
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x260: JUMPDEST 
0x261: V204 = CALLVALUE
0x263: V205 = ISZERO V204
0x264: V206 = 0x26c
0x267: JUMPI 0x26c V205
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V204]
Exit stack: [V13, V204]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x260]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V207 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V13, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V204]

================================

Block 0x26c
[0x26c:0x277]
---
Predecessors: [0x260]
Successors: [0x855]
---
0x26c JUMPDEST
0x26d POP
0x26e PUSH2 0x1ec
0x271 PUSH1 0x4
0x273 CALLDATALOAD
0x274 PUSH2 0x855
0x277 JUMP
---
0x26c: JUMPDEST 
0x26e: V208 = 0x1ec
0x271: V209 = 0x4
0x273: V210 = CALLDATALOAD 0x4
0x274: V211 = 0x855
0x277: JUMP 0x855
---
Entry stack: [V13, V204]
Stack pops: 1
Stack additions: [0x1ec, V210]
Exit stack: [V13, 0x1ec, V210]

================================

Block 0x278
[0x278:0x27f]
---
Predecessors: [0x8a]
Successors: [0x280, 0x284]
---
0x278 JUMPDEST
0x279 CALLVALUE
0x27a DUP1
0x27b ISZERO
0x27c PUSH2 0x284
0x27f JUMPI
---
0x278: JUMPDEST 
0x279: V212 = CALLVALUE
0x27b: V213 = ISZERO V212
0x27c: V214 = 0x284
0x27f: JUMPI 0x284 V213
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V212]
Exit stack: [V13, V212]

================================

Block 0x280
[0x280:0x283]
---
Predecessors: [0x278]
Successors: []
---
0x280 PUSH1 0x0
0x282 DUP1
0x283 REVERT
---
0x280: V215 = 0x0
0x283: REVERT 0x0 0x0
---
Entry stack: [V13, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V212]

================================

Block 0x284
[0x284:0x305]
---
Predecessors: [0x278]
Successors: [0x87d]
---
0x284 JUMPDEST
0x285 POP
0x286 PUSH1 0x40
0x288 DUP1
0x289 MLOAD
0x28a PUSH1 0x20
0x28c PUSH1 0x4
0x28e DUP1
0x28f CALLDATALOAD
0x290 DUP1
0x291 DUP3
0x292 ADD
0x293 CALLDATALOAD
0x294 DUP4
0x295 DUP2
0x296 MUL
0x297 DUP1
0x298 DUP7
0x299 ADD
0x29a DUP6
0x29b ADD
0x29c SWAP1
0x29d SWAP7
0x29e MSTORE
0x29f DUP1
0x2a0 DUP6
0x2a1 MSTORE
0x2a2 PUSH2 0x150
0x2a5 SWAP6
0x2a6 CALLDATASIZE
0x2a7 SWAP6
0x2a8 SWAP4
0x2a9 SWAP5
0x2aa PUSH1 0x24
0x2ac SWAP5
0x2ad SWAP4
0x2ae DUP6
0x2af ADD
0x2b0 SWAP3
0x2b1 SWAP2
0x2b2 DUP3
0x2b3 SWAP2
0x2b4 DUP6
0x2b5 ADD
0x2b6 SWAP1
0x2b7 DUP5
0x2b8 SWAP1
0x2b9 DUP1
0x2ba DUP3
0x2bb DUP5
0x2bc CALLDATACOPY
0x2bd POP
0x2be POP
0x2bf PUSH1 0x40
0x2c1 DUP1
0x2c2 MLOAD
0x2c3 DUP8
0x2c4 CALLDATALOAD
0x2c5 DUP10
0x2c6 ADD
0x2c7 DUP1
0x2c8 CALLDATALOAD
0x2c9 PUSH1 0x20
0x2cb DUP2
0x2cc DUP2
0x2cd MUL
0x2ce DUP5
0x2cf DUP2
0x2d0 ADD
0x2d1 DUP3
0x2d2 ADD
0x2d3 SWAP1
0x2d4 SWAP6
0x2d5 MSTORE
0x2d6 DUP2
0x2d7 DUP5
0x2d8 MSTORE
0x2d9 SWAP9
0x2da SWAP12
0x2db SWAP11
0x2dc SWAP10
0x2dd DUP10
0x2de ADD
0x2df SWAP9
0x2e0 SWAP3
0x2e1 SWAP8
0x2e2 POP
0x2e3 SWAP1
0x2e4 DUP3
0x2e5 ADD
0x2e6 SWAP6
0x2e7 POP
0x2e8 SWAP4
0x2e9 POP
0x2ea DUP4
0x2eb SWAP3
0x2ec POP
0x2ed DUP6
0x2ee ADD
0x2ef SWAP1
0x2f0 DUP5
0x2f1 SWAP1
0x2f2 DUP1
0x2f3 DUP3
0x2f4 DUP5
0x2f5 CALLDATACOPY
0x2f6 POP
0x2f7 SWAP5
0x2f8 SWAP8
0x2f9 POP
0x2fa PUSH2 0x87d
0x2fd SWAP7
0x2fe POP
0x2ff POP
0x300 POP
0x301 POP
0x302 POP
0x303 POP
0x304 POP
0x305 JUMP
---
0x284: JUMPDEST 
0x286: V216 = 0x40
0x289: V217 = M[0x40]
0x28a: V218 = 0x20
0x28c: V219 = 0x4
0x28f: V220 = CALLDATALOAD 0x4
0x292: V221 = ADD 0x4 V220
0x293: V222 = CALLDATALOAD V221
0x296: V223 = MUL V222 0x20
0x299: V224 = ADD V217 V223
0x29b: V225 = ADD 0x20 V224
0x29e: M[0x40] = V225
0x2a1: M[V217] = V222
0x2a2: V226 = 0x150
0x2a6: V227 = CALLDATASIZE
0x2aa: V228 = 0x24
0x2af: V229 = ADD 0x24 V220
0x2b5: V230 = ADD V217 0x20
0x2bc: CALLDATACOPY V230 V229 V223
0x2bf: V231 = 0x40
0x2c2: V232 = M[0x40]
0x2c4: V233 = CALLDATALOAD 0x24
0x2c6: V234 = ADD 0x4 V233
0x2c8: V235 = CALLDATALOAD V234
0x2c9: V236 = 0x20
0x2cd: V237 = MUL 0x20 V235
0x2d0: V238 = ADD V237 V232
0x2d2: V239 = ADD 0x20 V238
0x2d5: M[0x40] = V239
0x2d8: M[V232] = V235
0x2de: V240 = ADD 0x20 0x24
0x2e5: V241 = ADD 0x20 V234
0x2ee: V242 = ADD V232 0x20
0x2f5: CALLDATACOPY V242 V241 V237
0x2fa: V243 = 0x87d
0x305: JUMP 0x87d
---
Entry stack: [V13, V212]
Stack pops: 1
Stack additions: [0x150, V217, V232]
Exit stack: [V13, 0x150, V217, V232]

================================

Block 0x306
[0x306:0x30d]
---
Predecessors: [0x95]
Successors: [0x30e, 0x312]
---
0x306 JUMPDEST
0x307 CALLVALUE
0x308 DUP1
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x306: JUMPDEST 
0x307: V244 = CALLVALUE
0x309: V245 = ISZERO V244
0x30a: V246 = 0x312
0x30d: JUMPI 0x312 V245
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V244]
Exit stack: [V13, V244]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x306]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V247 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V13, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V244]

================================

Block 0x312
[0x312:0x326]
---
Predecessors: [0x306]
Successors: [0x93e]
---
0x312 JUMPDEST
0x313 POP
0x314 PUSH2 0x1ec
0x317 PUSH1 0x1
0x319 PUSH1 0xa0
0x31b PUSH1 0x2
0x31d EXP
0x31e SUB
0x31f PUSH1 0x4
0x321 CALLDATALOAD
0x322 AND
0x323 PUSH2 0x93e
0x326 JUMP
---
0x312: JUMPDEST 
0x314: V248 = 0x1ec
0x317: V249 = 0x1
0x319: V250 = 0xa0
0x31b: V251 = 0x2
0x31d: V252 = EXP 0x2 0xa0
0x31e: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31f: V254 = 0x4
0x321: V255 = CALLDATALOAD 0x4
0x322: V256 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x323: V257 = 0x93e
0x326: JUMP 0x93e
---
Entry stack: [V13, V244]
Stack pops: 1
Stack additions: [0x1ec, V256]
Exit stack: [V13, 0x1ec, V256]

================================

Block 0x327
[0x327:0x32e]
---
Predecessors: [0xa0]
Successors: [0x32f, 0x333]
---
0x327 JUMPDEST
0x328 CALLVALUE
0x329 DUP1
0x32a ISZERO
0x32b PUSH2 0x333
0x32e JUMPI
---
0x327: JUMPDEST 
0x328: V258 = CALLVALUE
0x32a: V259 = ISZERO V258
0x32b: V260 = 0x333
0x32e: JUMPI 0x333 V259
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V258]
Exit stack: [V13, V258]

================================

Block 0x32f
[0x32f:0x332]
---
Predecessors: [0x327]
Successors: []
---
0x32f PUSH1 0x0
0x331 DUP1
0x332 REVERT
---
0x32f: V261 = 0x0
0x332: REVERT 0x0 0x0
---
Entry stack: [V13, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V258]

================================

Block 0x333
[0x333:0x33b]
---
Predecessors: [0x327]
Successors: [0x959]
---
0x333 JUMPDEST
0x334 POP
0x335 PUSH2 0x1ec
0x338 PUSH2 0x959
0x33b JUMP
---
0x333: JUMPDEST 
0x335: V262 = 0x1ec
0x338: V263 = 0x959
0x33b: JUMP 0x959
---
Entry stack: [V13, V258]
Stack pops: 1
Stack additions: [0x1ec]
Exit stack: [V13, 0x1ec]

================================

Block 0x33c
[0x33c:0x343]
---
Predecessors: [0xab]
Successors: [0x344, 0x348]
---
0x33c JUMPDEST
0x33d CALLVALUE
0x33e DUP1
0x33f ISZERO
0x340 PUSH2 0x348
0x343 JUMPI
---
0x33c: JUMPDEST 
0x33d: V264 = CALLVALUE
0x33f: V265 = ISZERO V264
0x340: V266 = 0x348
0x343: JUMPI 0x348 V265
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V264]
Exit stack: [V13, V264]

================================

Block 0x344
[0x344:0x347]
---
Predecessors: [0x33c]
Successors: []
---
0x344 PUSH1 0x0
0x346 DUP1
0x347 REVERT
---
0x344: V267 = 0x0
0x347: REVERT 0x0 0x0
---
Entry stack: [V13, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V264]

================================

Block 0x348
[0x348:0x356]
---
Predecessors: [0x33c]
Successors: [0x968]
---
0x348 JUMPDEST
0x349 POP
0x34a PUSH2 0x1ec
0x34d PUSH1 0xff
0x34f PUSH1 0x4
0x351 CALLDATALOAD
0x352 AND
0x353 PUSH2 0x968
0x356 JUMP
---
0x348: JUMPDEST 
0x34a: V268 = 0x1ec
0x34d: V269 = 0xff
0x34f: V270 = 0x4
0x351: V271 = CALLDATALOAD 0x4
0x352: V272 = AND V271 0xff
0x353: V273 = 0x968
0x356: JUMP 0x968
---
Entry stack: [V13, V264]
Stack pops: 1
Stack additions: [0x1ec, V272]
Exit stack: [V13, 0x1ec, V272]

================================

Block 0x357
[0x357:0x35e]
---
Predecessors: [0xb6]
Successors: [0x35f, 0x363]
---
0x357 JUMPDEST
0x358 CALLVALUE
0x359 DUP1
0x35a ISZERO
0x35b PUSH2 0x363
0x35e JUMPI
---
0x357: JUMPDEST 
0x358: V274 = CALLVALUE
0x35a: V275 = ISZERO V274
0x35b: V276 = 0x363
0x35e: JUMPI 0x363 V275
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V274]
Exit stack: [V13, V274]

================================

Block 0x35f
[0x35f:0x362]
---
Predecessors: [0x357]
Successors: []
---
0x35f PUSH1 0x0
0x361 DUP1
0x362 REVERT
---
0x35f: V277 = 0x0
0x362: REVERT 0x0 0x0
---
Entry stack: [V13, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V274]

================================

Block 0x363
[0x363:0x36b]
---
Predecessors: [0x357]
Successors: [0x986]
---
0x363 JUMPDEST
0x364 POP
0x365 PUSH2 0x23e
0x368 PUSH2 0x986
0x36b JUMP
---
0x363: JUMPDEST 
0x365: V278 = 0x23e
0x368: V279 = 0x986
0x36b: JUMP 0x986
---
Entry stack: [V13, V274]
Stack pops: 1
Stack additions: [0x23e]
Exit stack: [V13, 0x23e]

================================

Block 0x36c
[0x36c:0x373]
---
Predecessors: [0xc1]
Successors: [0x374, 0x378]
---
0x36c JUMPDEST
0x36d CALLVALUE
0x36e DUP1
0x36f ISZERO
0x370 PUSH2 0x378
0x373 JUMPI
---
0x36c: JUMPDEST 
0x36d: V280 = CALLVALUE
0x36f: V281 = ISZERO V280
0x370: V282 = 0x378
0x373: JUMPI 0x378 V281
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V280]
Exit stack: [V13, V280]

================================

Block 0x374
[0x374:0x377]
---
Predecessors: [0x36c]
Successors: []
---
0x374 PUSH1 0x0
0x376 DUP1
0x377 REVERT
---
0x374: V283 = 0x0
0x377: REVERT 0x0 0x0
---
Entry stack: [V13, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V280]

================================

Block 0x378
[0x378:0x380]
---
Predecessors: [0x36c]
Successors: [0x98c]
---
0x378 JUMPDEST
0x379 POP
0x37a PUSH2 0x1ec
0x37d PUSH2 0x98c
0x380 JUMP
---
0x378: JUMPDEST 
0x37a: V284 = 0x1ec
0x37d: V285 = 0x98c
0x380: JUMP 0x98c
---
Entry stack: [V13, V280]
Stack pops: 1
Stack additions: [0x1ec]
Exit stack: [V13, 0x1ec]

================================

Block 0x381
[0x381:0x388]
---
Predecessors: [0xcc]
Successors: [0x99b]
---
0x381 JUMPDEST
0x382 PUSH2 0x1ec
0x385 PUSH2 0x99b
0x388 JUMP
---
0x381: JUMPDEST 
0x382: V286 = 0x1ec
0x385: V287 = 0x99b
0x388: JUMP 0x99b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ec]
Exit stack: [V13, 0x1ec]

================================

Block 0x389
[0x389:0x390]
---
Predecessors: [0xd7]
Successors: [0x391, 0x395]
---
0x389 JUMPDEST
0x38a CALLVALUE
0x38b DUP1
0x38c ISZERO
0x38d PUSH2 0x395
0x390 JUMPI
---
0x389: JUMPDEST 
0x38a: V288 = CALLVALUE
0x38c: V289 = ISZERO V288
0x38d: V290 = 0x395
0x390: JUMPI 0x395 V289
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V288]
Exit stack: [V13, V288]

================================

Block 0x391
[0x391:0x394]
---
Predecessors: [0x389]
Successors: []
---
0x391 PUSH1 0x0
0x393 DUP1
0x394 REVERT
---
0x391: V291 = 0x0
0x394: REVERT 0x0 0x0
---
Entry stack: [V13, V288]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V288]

================================

Block 0x395
[0x395:0x3a9]
---
Predecessors: [0x389]
Successors: [0xb98]
---
0x395 JUMPDEST
0x396 POP
0x397 PUSH2 0x1ec
0x39a PUSH1 0x1
0x39c PUSH1 0xa0
0x39e PUSH1 0x2
0x3a0 EXP
0x3a1 SUB
0x3a2 PUSH1 0x4
0x3a4 CALLDATALOAD
0x3a5 AND
0x3a6 PUSH2 0xb98
0x3a9 JUMP
---
0x395: JUMPDEST 
0x397: V292 = 0x1ec
0x39a: V293 = 0x1
0x39c: V294 = 0xa0
0x39e: V295 = 0x2
0x3a0: V296 = EXP 0x2 0xa0
0x3a1: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V298 = 0x4
0x3a4: V299 = CALLDATALOAD 0x4
0x3a5: V300 = AND V299 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V301 = 0xb98
0x3a9: JUMP 0xb98
---
Entry stack: [V13, V288]
Stack pops: 1
Stack additions: [0x1ec, V300]
Exit stack: [V13, 0x1ec, V300]

================================

Block 0x3aa
[0x3aa:0x3b1]
---
Predecessors: [0xe2]
Successors: [0x3b2, 0x3b6]
---
0x3aa JUMPDEST
0x3ab CALLVALUE
0x3ac DUP1
0x3ad ISZERO
0x3ae PUSH2 0x3b6
0x3b1 JUMPI
---
0x3aa: JUMPDEST 
0x3ab: V302 = CALLVALUE
0x3ad: V303 = ISZERO V302
0x3ae: V304 = 0x3b6
0x3b1: JUMPI 0x3b6 V303
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V302]
Exit stack: [V13, V302]

================================

Block 0x3b2
[0x3b2:0x3b5]
---
Predecessors: [0x3aa]
Successors: []
---
0x3b2 PUSH1 0x0
0x3b4 DUP1
0x3b5 REVERT
---
0x3b2: V305 = 0x0
0x3b5: REVERT 0x0 0x0
---
Entry stack: [V13, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V302]

================================

Block 0x3b6
[0x3b6:0x3be]
---
Predecessors: [0x3aa]
Successors: [0xbb3]
---
0x3b6 JUMPDEST
0x3b7 POP
0x3b8 PUSH2 0x23e
0x3bb PUSH2 0xbb3
0x3be JUMP
---
0x3b6: JUMPDEST 
0x3b8: V306 = 0x23e
0x3bb: V307 = 0xbb3
0x3be: JUMP 0xbb3
---
Entry stack: [V13, V302]
Stack pops: 1
Stack additions: [0x23e]
Exit stack: [V13, 0x23e]

================================

Block 0x3bf
[0x3bf:0x3c6]
---
Predecessors: [0xed]
Successors: [0x3c7, 0x3cb]
---
0x3bf JUMPDEST
0x3c0 CALLVALUE
0x3c1 DUP1
0x3c2 ISZERO
0x3c3 PUSH2 0x3cb
0x3c6 JUMPI
---
0x3bf: JUMPDEST 
0x3c0: V308 = CALLVALUE
0x3c2: V309 = ISZERO V308
0x3c3: V310 = 0x3cb
0x3c6: JUMPI 0x3cb V309
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V308]
Exit stack: [V13, V308]

================================

Block 0x3c7
[0x3c7:0x3ca]
---
Predecessors: [0x3bf]
Successors: []
---
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca REVERT
---
0x3c7: V311 = 0x0
0x3ca: REVERT 0x0 0x0
---
Entry stack: [V13, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V308]

================================

Block 0x3cb
[0x3cb:0x3d9]
---
Predecessors: [0x3bf]
Successors: [0xbb9]
---
0x3cb JUMPDEST
0x3cc POP
0x3cd PUSH2 0x1ec
0x3d0 PUSH1 0xff
0x3d2 PUSH1 0x4
0x3d4 CALLDATALOAD
0x3d5 AND
0x3d6 PUSH2 0xbb9
0x3d9 JUMP
---
0x3cb: JUMPDEST 
0x3cd: V312 = 0x1ec
0x3d0: V313 = 0xff
0x3d2: V314 = 0x4
0x3d4: V315 = CALLDATALOAD 0x4
0x3d5: V316 = AND V315 0xff
0x3d6: V317 = 0xbb9
0x3d9: JUMP 0xbb9
---
Entry stack: [V13, V308]
Stack pops: 1
Stack additions: [0x1ec, V316]
Exit stack: [V13, 0x1ec, V316]

================================

Block 0x3da
[0x3da:0x3e1]
---
Predecessors: [0xf8]
Successors: [0x3e2, 0x3e6]
---
0x3da JUMPDEST
0x3db CALLVALUE
0x3dc DUP1
0x3dd ISZERO
0x3de PUSH2 0x3e6
0x3e1 JUMPI
---
0x3da: JUMPDEST 
0x3db: V318 = CALLVALUE
0x3dd: V319 = ISZERO V318
0x3de: V320 = 0x3e6
0x3e1: JUMPI 0x3e6 V319
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V318]
Exit stack: [V13, V318]

================================

Block 0x3e2
[0x3e2:0x3e5]
---
Predecessors: [0x3da]
Successors: []
---
0x3e2 PUSH1 0x0
0x3e4 DUP1
0x3e5 REVERT
---
0x3e2: V321 = 0x0
0x3e5: REVERT 0x0 0x0
---
Entry stack: [V13, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V318]

================================

Block 0x3e6
[0x3e6:0x3f1]
---
Predecessors: [0x3da]
Successors: [0xbd4]
---
0x3e6 JUMPDEST
0x3e7 POP
0x3e8 PUSH2 0x23e
0x3eb PUSH1 0x4
0x3ed CALLDATALOAD
0x3ee PUSH2 0xbd4
0x3f1 JUMP
---
0x3e6: JUMPDEST 
0x3e8: V322 = 0x23e
0x3eb: V323 = 0x4
0x3ed: V324 = CALLDATALOAD 0x4
0x3ee: V325 = 0xbd4
0x3f1: JUMP 0xbd4
---
Entry stack: [V13, V318]
Stack pops: 1
Stack additions: [0x23e, V324]
Exit stack: [V13, 0x23e, V324]

================================

Block 0x3f2
[0x3f2:0x3f9]
---
Predecessors: [0x103]
Successors: [0x3fa, 0x3fe]
---
0x3f2 JUMPDEST
0x3f3 CALLVALUE
0x3f4 DUP1
0x3f5 ISZERO
0x3f6 PUSH2 0x3fe
0x3f9 JUMPI
---
0x3f2: JUMPDEST 
0x3f3: V326 = CALLVALUE
0x3f5: V327 = ISZERO V326
0x3f6: V328 = 0x3fe
0x3f9: JUMPI 0x3fe V327
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V326]
Exit stack: [V13, V326]

================================

Block 0x3fa
[0x3fa:0x3fd]
---
Predecessors: [0x3f2]
Successors: []
---
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd REVERT
---
0x3fa: V329 = 0x0
0x3fd: REVERT 0x0 0x0
---
Entry stack: [V13, V326]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V326]

================================

Block 0x3fe
[0x3fe:0x406]
---
Predecessors: [0x3f2]
Successors: [0xbe6]
---
0x3fe JUMPDEST
0x3ff POP
0x400 PUSH2 0x1ec
0x403 PUSH2 0xbe6
0x406 JUMP
---
0x3fe: JUMPDEST 
0x400: V330 = 0x1ec
0x403: V331 = 0xbe6
0x406: JUMP 0xbe6
---
Entry stack: [V13, V326]
Stack pops: 1
Stack additions: [0x1ec]
Exit stack: [V13, 0x1ec]

================================

Block 0x407
[0x407:0x40e]
---
Predecessors: [0x10e]
Successors: [0x40f, 0x413]
---
0x407 JUMPDEST
0x408 CALLVALUE
0x409 DUP1
0x40a ISZERO
0x40b PUSH2 0x413
0x40e JUMPI
---
0x407: JUMPDEST 
0x408: V332 = CALLVALUE
0x40a: V333 = ISZERO V332
0x40b: V334 = 0x413
0x40e: JUMPI 0x413 V333
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V332]
Exit stack: [V13, V332]

================================

Block 0x40f
[0x40f:0x412]
---
Predecessors: [0x407]
Successors: []
---
0x40f PUSH1 0x0
0x411 DUP1
0x412 REVERT
---
0x40f: V335 = 0x0
0x412: REVERT 0x0 0x0
---
Entry stack: [V13, V332]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V332]

================================

Block 0x413
[0x413:0x421]
---
Predecessors: [0x407]
Successors: [0xbf5]
---
0x413 JUMPDEST
0x414 POP
0x415 PUSH2 0x1ec
0x418 PUSH1 0xff
0x41a PUSH1 0x4
0x41c CALLDATALOAD
0x41d AND
0x41e PUSH2 0xbf5
0x421 JUMP
---
0x413: JUMPDEST 
0x415: V336 = 0x1ec
0x418: V337 = 0xff
0x41a: V338 = 0x4
0x41c: V339 = CALLDATALOAD 0x4
0x41d: V340 = AND V339 0xff
0x41e: V341 = 0xbf5
0x421: JUMP 0xbf5
---
Entry stack: [V13, V332]
Stack pops: 1
Stack additions: [0x1ec, V340]
Exit stack: [V13, 0x1ec, V340]

================================

Block 0x422
[0x422:0x429]
---
Predecessors: [0x119]
Successors: [0x42a, 0x42e]
---
0x422 JUMPDEST
0x423 CALLVALUE
0x424 DUP1
0x425 ISZERO
0x426 PUSH2 0x42e
0x429 JUMPI
---
0x422: JUMPDEST 
0x423: V342 = CALLVALUE
0x425: V343 = ISZERO V342
0x426: V344 = 0x42e
0x429: JUMPI 0x42e V343
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V342]
Exit stack: [V13, V342]

================================

Block 0x42a
[0x42a:0x42d]
---
Predecessors: [0x422]
Successors: []
---
0x42a PUSH1 0x0
0x42c DUP1
0x42d REVERT
---
0x42a: V345 = 0x0
0x42d: REVERT 0x0 0x0
---
Entry stack: [V13, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V342]

================================

Block 0x42e
[0x42e:0x445]
---
Predecessors: [0x422]
Successors: [0xc13]
---
0x42e JUMPDEST
0x42f POP
0x430 PUSH2 0x150
0x433 PUSH1 0x1
0x435 PUSH1 0xa0
0x437 PUSH1 0x2
0x439 EXP
0x43a SUB
0x43b PUSH1 0x4
0x43d CALLDATALOAD
0x43e AND
0x43f PUSH1 0x24
0x441 CALLDATALOAD
0x442 PUSH2 0xc13
0x445 JUMP
---
0x42e: JUMPDEST 
0x430: V346 = 0x150
0x433: V347 = 0x1
0x435: V348 = 0xa0
0x437: V349 = 0x2
0x439: V350 = EXP 0x2 0xa0
0x43a: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43b: V352 = 0x4
0x43d: V353 = CALLDATALOAD 0x4
0x43e: V354 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V355 = 0x24
0x441: V356 = CALLDATALOAD 0x24
0x442: V357 = 0xc13
0x445: JUMP 0xc13
---
Entry stack: [V13, V342]
Stack pops: 1
Stack additions: [0x150, V354, V356]
Exit stack: [V13, 0x150, V354, V356]

================================

Block 0x446
[0x446:0x44d]
---
Predecessors: [0x124]
Successors: [0x44e, 0x452]
---
0x446 JUMPDEST
0x447 CALLVALUE
0x448 DUP1
0x449 ISZERO
0x44a PUSH2 0x452
0x44d JUMPI
---
0x446: JUMPDEST 
0x447: V358 = CALLVALUE
0x449: V359 = ISZERO V358
0x44a: V360 = 0x452
0x44d: JUMPI 0x452 V359
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V358]
Exit stack: [V13, V358]

================================

Block 0x44e
[0x44e:0x451]
---
Predecessors: [0x446]
Successors: []
---
0x44e PUSH1 0x0
0x450 DUP1
0x451 REVERT
---
0x44e: V361 = 0x0
0x451: REVERT 0x0 0x0
---
Entry stack: [V13, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V358]

================================

Block 0x452
[0x452:0x482]
---
Predecessors: [0x446]
Successors: [0xce3]
---
0x452 JUMPDEST
0x453 POP
0x454 PUSH2 0x150
0x457 PUSH1 0x4
0x459 DUP1
0x45a CALLDATALOAD
0x45b PUSH1 0x1
0x45d PUSH1 0xa0
0x45f PUSH1 0x2
0x461 EXP
0x462 SUB
0x463 AND
0x464 SWAP1
0x465 PUSH1 0x24
0x467 DUP1
0x468 CALLDATALOAD
0x469 SWAP2
0x46a PUSH1 0x44
0x46c CALLDATALOAD
0x46d DUP1
0x46e DUP4
0x46f ADD
0x470 SWAP3
0x471 SWAP1
0x472 DUP3
0x473 ADD
0x474 CALLDATALOAD
0x475 SWAP2
0x476 PUSH1 0x64
0x478 CALLDATALOAD
0x479 SWAP2
0x47a DUP3
0x47b ADD
0x47c SWAP2
0x47d ADD
0x47e CALLDATALOAD
0x47f PUSH2 0xce3
0x482 JUMP
---
0x452: JUMPDEST 
0x454: V362 = 0x150
0x457: V363 = 0x4
0x45a: V364 = CALLDATALOAD 0x4
0x45b: V365 = 0x1
0x45d: V366 = 0xa0
0x45f: V367 = 0x2
0x461: V368 = EXP 0x2 0xa0
0x462: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x463: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x465: V371 = 0x24
0x468: V372 = CALLDATALOAD 0x24
0x46a: V373 = 0x44
0x46c: V374 = CALLDATALOAD 0x44
0x46f: V375 = ADD 0x24 V374
0x473: V376 = ADD 0x4 V374
0x474: V377 = CALLDATALOAD V376
0x476: V378 = 0x64
0x478: V379 = CALLDATALOAD 0x64
0x47b: V380 = ADD V379 0x24
0x47d: V381 = ADD V379 0x4
0x47e: V382 = CALLDATALOAD V381
0x47f: V383 = 0xce3
0x482: JUMP 0xce3
---
Entry stack: [V13, V358]
Stack pops: 1
Stack additions: [0x150, V370, V372, V375, V377, V380, V382]
Exit stack: [V13, 0x150, V370, V372, V375, V377, V380, V382]

================================

Block 0x483
[0x483:0x48a]
---
Predecessors: [0x12f]
Successors: [0x48b, 0x48f]
---
0x483 JUMPDEST
0x484 CALLVALUE
0x485 DUP1
0x486 ISZERO
0x487 PUSH2 0x48f
0x48a JUMPI
---
0x483: JUMPDEST 
0x484: V384 = CALLVALUE
0x486: V385 = ISZERO V384
0x487: V386 = 0x48f
0x48a: JUMPI 0x48f V385
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V384]
Exit stack: [V13, V384]

================================

Block 0x48b
[0x48b:0x48e]
---
Predecessors: [0x483]
Successors: []
---
0x48b PUSH1 0x0
0x48d DUP1
0x48e REVERT
---
0x48b: V387 = 0x0
0x48e: REVERT 0x0 0x0
---
Entry stack: [V13, V384]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V384]

================================

Block 0x48f
[0x48f:0x4a3]
---
Predecessors: [0x483]
Successors: [0xe0d]
---
0x48f JUMPDEST
0x490 POP
0x491 PUSH2 0x150
0x494 PUSH1 0x1
0x496 PUSH1 0xa0
0x498 PUSH1 0x2
0x49a EXP
0x49b SUB
0x49c PUSH1 0x4
0x49e CALLDATALOAD
0x49f AND
0x4a0 PUSH2 0xe0d
0x4a3 JUMP
---
0x48f: JUMPDEST 
0x491: V388 = 0x150
0x494: V389 = 0x1
0x496: V390 = 0xa0
0x498: V391 = 0x2
0x49a: V392 = EXP 0x2 0xa0
0x49b: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49c: V394 = 0x4
0x49e: V395 = CALLDATALOAD 0x4
0x49f: V396 = AND V395 0xffffffffffffffffffffffffffffffffffffffff
0x4a0: V397 = 0xe0d
0x4a3: JUMP 0xe0d
---
Entry stack: [V13, V384]
Stack pops: 1
Stack additions: [0x150, V396]
Exit stack: [V13, 0x150, V396]

================================

Block 0x4a4
[0x4a4:0x4ab]
---
Predecessors: [0x13a]
Successors: [0x4ac, 0x4b0]
---
0x4a4 JUMPDEST
0x4a5 CALLVALUE
0x4a6 DUP1
0x4a7 ISZERO
0x4a8 PUSH2 0x4b0
0x4ab JUMPI
---
0x4a4: JUMPDEST 
0x4a5: V398 = CALLVALUE
0x4a7: V399 = ISZERO V398
0x4a8: V400 = 0x4b0
0x4ab: JUMPI 0x4b0 V399
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V398]
Exit stack: [V13, V398]

================================

Block 0x4ac
[0x4ac:0x4af]
---
Predecessors: [0x4a4]
Successors: []
---
0x4ac PUSH1 0x0
0x4ae DUP1
0x4af REVERT
---
0x4ac: V401 = 0x0
0x4af: REVERT 0x0 0x0
---
Entry stack: [V13, V398]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V398]

================================

Block 0x4b0
[0x4b0:0x4be]
---
Predecessors: [0x4a4]
Successors: [0xf3c]
---
0x4b0 JUMPDEST
0x4b1 POP
0x4b2 PUSH2 0x1ec
0x4b5 PUSH1 0xff
0x4b7 PUSH1 0x4
0x4b9 CALLDATALOAD
0x4ba AND
0x4bb PUSH2 0xf3c
0x4be JUMP
---
0x4b0: JUMPDEST 
0x4b2: V402 = 0x1ec
0x4b5: V403 = 0xff
0x4b7: V404 = 0x4
0x4b9: V405 = CALLDATALOAD 0x4
0x4ba: V406 = AND V405 0xff
0x4bb: V407 = 0xf3c
0x4be: JUMP 0xf3c
---
Entry stack: [V13, V398]
Stack pops: 1
Stack additions: [0x1ec, V406]
Exit stack: [V13, 0x1ec, V406]

================================

Block 0x4bf
[0x4bf:0x4c6]
---
Predecessors: [0x145]
Successors: [0xf57]
---
0x4bf JUMPDEST
0x4c0 PUSH2 0x150
0x4c3 PUSH2 0xf57
0x4c6 JUMP
---
0x4bf: JUMPDEST 
0x4c0: V408 = 0x150
0x4c3: V409 = 0xf57
0x4c6: JUMP 0xf57
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V13, 0x150]

================================

Block 0x4c7
[0x4c7:0x4ca]
---
Predecessors: [0x15e]
Successors: [0x4cb]
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x0
0x4ca DUP1
---
0x4c7: JUMPDEST 
0x4c8: V410 = 0x0
---
Entry stack: [V13, 0x150, V106, V114]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x150, V106, V114, 0x0, 0x0]

================================

Block 0x4cb
[0x4cb:0x4d5]
---
Predecessors: [0x4c7, 0x506]
Successors: [0x4d6, 0x50e]
---
0x4cb JUMPDEST
0x4cc PUSH1 0xc
0x4ce SLOAD
0x4cf DUP2
0x4d0 LT
0x4d1 ISZERO
0x4d2 PUSH2 0x50e
0x4d5 JUMPI
---
0x4cb: JUMPDEST 
0x4cc: V411 = 0xc
0x4ce: V412 = S[0xc]
0x4d0: V413 = LT S0 V412
0x4d1: V414 = ISZERO V413
0x4d2: V415 = 0x50e
0x4d5: JUMPI 0x50e V414
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0]

================================

Block 0x4d6
[0x4d6:0x4e4]
---
Predecessors: [0x4cb]
Successors: [0x4e5, 0x4e6]
---
0x4d6 PUSH1 0xc
0x4d8 DUP1
0x4d9 SLOAD
0x4da CALLER
0x4db SWAP2
0x4dc SWAP1
0x4dd DUP4
0x4de SWAP1
0x4df DUP2
0x4e0 LT
0x4e1 PUSH2 0x4e6
0x4e4 JUMPI
---
0x4d6: V416 = 0xc
0x4d9: V417 = S[0xc]
0x4da: V418 = CALLER
0x4e0: V419 = LT S0 V417
0x4e1: V420 = 0x4e6
0x4e4: JUMPI 0x4e6 V419
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0, V418, 0xc, S0]
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0, V418, 0xc, S0]

================================

Block 0x4e5
[0x4e5:0x4e5]
---
Predecessors: [0x4d6]
Successors: []
---
0x4e5 INVALID
---
0x4e5: INVALID 
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S3, V418, 0xc, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S3, V418, 0xc, S0]

================================

Block 0x4e6
[0x4e6:0x501]
---
Predecessors: [0x4d6]
Successors: [0x502, 0x506]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x0
0x4e9 SWAP2
0x4ea DUP3
0x4eb MSTORE
0x4ec PUSH1 0x20
0x4ee SWAP1
0x4ef SWAP2
0x4f0 SHA3
0x4f1 ADD
0x4f2 SLOAD
0x4f3 PUSH1 0x1
0x4f5 PUSH1 0xa0
0x4f7 PUSH1 0x2
0x4f9 EXP
0x4fa SUB
0x4fb AND
0x4fc EQ
0x4fd ISZERO
0x4fe PUSH2 0x506
0x501 JUMPI
---
0x4e6: JUMPDEST 
0x4e7: V421 = 0x0
0x4eb: M[0x0] = 0xc
0x4ec: V422 = 0x20
0x4f0: V423 = SHA3 0x0 0x20
0x4f1: V424 = ADD V423 S0
0x4f2: V425 = S[V424]
0x4f3: V426 = 0x1
0x4f5: V427 = 0xa0
0x4f7: V428 = 0x2
0x4f9: V429 = EXP 0x2 0xa0
0x4fa: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fb: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4fc: V432 = EQ V431 V418
0x4fd: V433 = ISZERO V432
0x4fe: V434 = 0x506
0x501: JUMPI 0x506 V433
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S3, V418, 0xc, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S3]

================================

Block 0x502
[0x502:0x505]
---
Predecessors: [0x4e6]
Successors: [0x506]
---
0x502 PUSH1 0x1
0x504 SWAP2
0x505 POP
---
0x502: V435 = 0x1
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V13, 0x150, V106, V114, 0x1, S0]

================================

Block 0x506
[0x506:0x50d]
---
Predecessors: [0x4e6, 0x502]
Successors: [0x4cb]
---
0x506 JUMPDEST
0x507 PUSH1 0x1
0x509 ADD
0x50a PUSH2 0x4cb
0x50d JUMP
---
0x506: JUMPDEST 
0x507: V436 = 0x1
0x509: V437 = ADD 0x1 S0
0x50a: V438 = 0x4cb
0x50d: JUMP 0x4cb
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [V437]
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, V437]

================================

Block 0x50e
[0x50e:0x51a]
---
Predecessors: [0x4cb]
Successors: [0x51b, 0x522]
---
0x50e JUMPDEST
0x50f PUSH1 0xc
0x511 SLOAD
0x512 PUSH1 0x0
0x514 LT
0x515 DUP1
0x516 ISZERO
0x517 PUSH2 0x522
0x51a JUMPI
---
0x50e: JUMPDEST 
0x50f: V439 = 0xc
0x511: V440 = S[0xc]
0x512: V441 = 0x0
0x514: V442 = LT 0x0 V440
0x516: V443 = ISZERO V442
0x517: V444 = 0x522
0x51a: JUMPI 0x522 V443
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: [V442]
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0, V442]

================================

Block 0x51b
[0x51b:0x521]
---
Predecessors: [0x50e]
Successors: [0x522]
---
0x51b POP
0x51c PUSH1 0x1
0x51e DUP3
0x51f ISZERO
0x520 ISZERO
0x521 EQ
---
0x51c: V445 = 0x1
0x51f: V446 = ISZERO {0x0, 0x1}
0x520: V447 = ISZERO V446
0x521: V448 = EQ V447 0x1
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S1, V442]
Stack pops: 3
Stack additions: [S2, S1, V448]
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S1, V448]

================================

Block 0x522
[0x522:0x528]
---
Predecessors: [0x50e, 0x51b]
Successors: [0x529, 0x578]
---
0x522 JUMPDEST
0x523 ISZERO
0x524 ISZERO
0x525 PUSH2 0x578
0x528 JUMPI
---
0x522: JUMPDEST 
0x523: V449 = ISZERO S0
0x524: V450 = ISZERO V449
0x525: V451 = 0x578
0x528: JUMPI 0x578 V450
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S1]

================================

Block 0x529
[0x529:0x577]
---
Predecessors: [0x522]
Successors: []
---
0x529 PUSH1 0x40
0x52b DUP1
0x52c MLOAD
0x52d PUSH1 0xe5
0x52f PUSH1 0x2
0x531 EXP
0x532 PUSH3 0x461bcd
0x536 MUL
0x537 DUP2
0x538 MSTORE
0x539 PUSH1 0x20
0x53b PUSH1 0x4
0x53d DUP3
0x53e ADD
0x53f MSTORE
0x540 PUSH1 0x1
0x542 PUSH1 0x24
0x544 DUP3
0x545 ADD
0x546 MSTORE
0x547 PUSH32 0x3800000000000000000000000000000000000000000000000000000000000000
0x568 PUSH1 0x44
0x56a DUP3
0x56b ADD
0x56c MSTORE
0x56d SWAP1
0x56e MLOAD
0x56f SWAP1
0x570 DUP2
0x571 SWAP1
0x572 SUB
0x573 PUSH1 0x64
0x575 ADD
0x576 SWAP1
0x577 REVERT
---
0x529: V452 = 0x40
0x52c: V453 = M[0x40]
0x52d: V454 = 0xe5
0x52f: V455 = 0x2
0x531: V456 = EXP 0x2 0xe5
0x532: V457 = 0x461bcd
0x536: V458 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x538: M[V453] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x539: V459 = 0x20
0x53b: V460 = 0x4
0x53e: V461 = ADD V453 0x4
0x53f: M[V461] = 0x20
0x540: V462 = 0x1
0x542: V463 = 0x24
0x545: V464 = ADD V453 0x24
0x546: M[V464] = 0x1
0x547: V465 = 0x3800000000000000000000000000000000000000000000000000000000000000
0x568: V466 = 0x44
0x56b: V467 = ADD V453 0x44
0x56c: M[V467] = 0x3800000000000000000000000000000000000000000000000000000000000000
0x56e: V468 = M[0x40]
0x572: V469 = SUB V453 V468
0x573: V470 = 0x64
0x575: V471 = ADD 0x64 V469
0x577: REVERT V468 V471
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0]

================================

Block 0x578
[0x578:0x5b9]
---
Predecessors: [0x522]
Successors: [0xf61]
---
0x578 JUMPDEST
0x579 PUSH1 0xff
0x57b DUP5
0x57c DUP2
0x57d AND
0x57e ADD
0x57f PUSH1 0x0
0x581 DUP2
0x582 DUP2
0x583 MSTORE
0x584 PUSH1 0xb
0x586 PUSH1 0x20
0x588 SWAP1
0x589 DUP2
0x58a MSTORE
0x58b PUSH1 0x40
0x58d DUP1
0x58e DUP4
0x58f SHA3
0x590 CALLER
0x591 DUP5
0x592 MSTORE
0x593 SWAP1
0x594 SWAP2
0x595 MSTORE
0x596 SWAP1
0x597 SHA3
0x598 DUP1
0x599 SLOAD
0x59a PUSH1 0x1
0x59c PUSH1 0xa0
0x59e PUSH1 0x2
0x5a0 EXP
0x5a1 SUB
0x5a2 NOT
0x5a3 AND
0x5a4 PUSH1 0x1
0x5a6 PUSH1 0xa0
0x5a8 PUSH1 0x2
0x5aa EXP
0x5ab SUB
0x5ac DUP7
0x5ad AND
0x5ae OR
0x5af SWAP1
0x5b0 SSTORE
0x5b1 PUSH2 0x5ba
0x5b4 SWAP1
0x5b5 DUP5
0x5b6 PUSH2 0xf61
0x5b9 JUMP
---
0x578: JUMPDEST 
0x579: V472 = 0xff
0x57d: V473 = AND 0xff V106
0x57e: V474 = ADD V473 0xff
0x57f: V475 = 0x0
0x583: M[0x0] = V474
0x584: V476 = 0xb
0x586: V477 = 0x20
0x58a: M[0x20] = 0xb
0x58b: V478 = 0x40
0x58f: V479 = SHA3 0x0 0x40
0x590: V480 = CALLER
0x592: M[0x0] = V480
0x595: M[0x20] = V479
0x597: V481 = SHA3 0x0 0x40
0x599: V482 = S[V481]
0x59a: V483 = 0x1
0x59c: V484 = 0xa0
0x59e: V485 = 0x2
0x5a0: V486 = EXP 0x2 0xa0
0x5a1: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a2: V488 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5a3: V489 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V482
0x5a4: V490 = 0x1
0x5a6: V491 = 0xa0
0x5a8: V492 = 0x2
0x5aa: V493 = EXP 0x2 0xa0
0x5ab: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ad: V495 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x5ae: V496 = OR V495 V489
0x5b0: S[V481] = V496
0x5b1: V497 = 0x5ba
0x5b6: V498 = 0xf61
0x5b9: JUMP 0xf61
---
Entry stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x5ba, V474, S2]
Exit stack: [V13, 0x150, V106, V114, {0x0, 0x1}, S0, 0x5ba, V474, V114]

================================

Block 0x5ba
[0x5ba:0x5c0]
---
Predecessors: [0xfef]
Successors: [0x5c1, 0x5c5]
---
0x5ba JUMPDEST
0x5bb ISZERO
0x5bc ISZERO
0x5bd PUSH2 0x5c5
0x5c0 JUMPI
---
0x5ba: JUMPDEST 
0x5bb: V499 = ISZERO {0x0, 0x1}
0x5bc: V500 = ISZERO V499
0x5bd: V501 = 0x5c5
0x5c0: JUMPI 0x5c5 V500
---
Entry stack: [V13, S5, S4, S3, {0x0, 0x1}, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S5, S4, S3, {0x0, 0x1}, S1]

================================

Block 0x5c1
[0x5c1:0x5c4]
---
Predecessors: [0x5ba]
Successors: [0x622]
---
0x5c1 PUSH2 0x622
0x5c4 JUMP
---
0x5c1: V502 = 0x622
0x5c4: JUMP 0x622
---
Entry stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]

================================

Block 0x5c5
[0x5c5:0x621]
---
Predecessors: [0x5ba]
Successors: [0x622]
---
0x5c5 JUMPDEST
0x5c6 PUSH1 0xff
0x5c8 DUP5
0x5c9 AND
0x5ca PUSH1 0x0
0x5cc DUP2
0x5cd DUP2
0x5ce MSTORE
0x5cf PUSH1 0x3
0x5d1 PUSH1 0x20
0x5d3 SWAP1
0x5d4 DUP2
0x5d5 MSTORE
0x5d6 PUSH1 0x40
0x5d8 DUP1
0x5d9 DUP4
0x5da SHA3
0x5db DUP1
0x5dc SLOAD
0x5dd PUSH1 0x1
0x5df PUSH1 0xa0
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 SUB
0x5e5 SWAP1
0x5e6 DUP2
0x5e7 AND
0x5e8 DUP6
0x5e9 MSTORE
0x5ea PUSH1 0x4
0x5ec SWAP1
0x5ed SWAP4
0x5ee MSTORE
0x5ef DUP2
0x5f0 DUP5
0x5f1 SHA3
0x5f2 DUP1
0x5f3 SLOAD
0x5f4 PUSH1 0xff
0x5f6 NOT
0x5f7 SWAP1
0x5f8 DUP2
0x5f9 AND
0x5fa SWAP1
0x5fb SWAP2
0x5fc SSTORE
0x5fd DUP2
0x5fe SLOAD
0x5ff PUSH1 0x1
0x601 PUSH1 0xa0
0x603 PUSH1 0x2
0x605 EXP
0x606 SUB
0x607 NOT
0x608 AND
0x609 SWAP4
0x60a DUP10
0x60b AND
0x60c SWAP4
0x60d DUP5
0x60e OR
0x60f SWAP1
0x610 SWAP2
0x611 SSTORE
0x612 SWAP2
0x613 DUP4
0x614 MSTORE
0x615 SWAP1
0x616 SWAP2
0x617 SHA3
0x618 DUP1
0x619 SLOAD
0x61a SWAP1
0x61b SWAP2
0x61c AND
0x61d SWAP1
0x61e SWAP2
0x61f OR
0x620 SWAP1
0x621 SSTORE
---
0x5c5: JUMPDEST 
0x5c6: V503 = 0xff
0x5c9: V504 = AND S3 0xff
0x5ca: V505 = 0x0
0x5ce: M[0x0] = V504
0x5cf: V506 = 0x3
0x5d1: V507 = 0x20
0x5d5: M[0x20] = 0x3
0x5d6: V508 = 0x40
0x5da: V509 = SHA3 0x0 0x40
0x5dc: V510 = S[V509]
0x5dd: V511 = 0x1
0x5df: V512 = 0xa0
0x5e1: V513 = 0x2
0x5e3: V514 = EXP 0x2 0xa0
0x5e4: V515 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e7: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x5e9: M[0x0] = V516
0x5ea: V517 = 0x4
0x5ee: M[0x20] = 0x4
0x5f1: V518 = SHA3 0x0 0x40
0x5f3: V519 = S[V518]
0x5f4: V520 = 0xff
0x5f6: V521 = NOT 0xff
0x5f9: V522 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V519
0x5fc: S[V518] = V522
0x5fe: V523 = S[V509]
0x5ff: V524 = 0x1
0x601: V525 = 0xa0
0x603: V526 = 0x2
0x605: V527 = EXP 0x2 0xa0
0x606: V528 = SUB 0x10000000000000000000000000000000000000000 0x1
0x607: V529 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x608: V530 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V523
0x60b: V531 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x60e: V532 = OR V531 V530
0x611: S[V509] = V532
0x614: M[0x0] = V531
0x617: V533 = SHA3 0x0 0x40
0x619: V534 = S[V533]
0x61c: V535 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V534
0x61f: V536 = OR V504 V535
0x621: S[V533] = V536
---
Entry stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]

================================

Block 0x622
[0x622:0x627]
---
Predecessors: [0x5c1, 0x5c5, 0x724]
Successors: [0x150]
---
0x622 JUMPDEST
0x623 POP
0x624 POP
0x625 POP
0x626 POP
0x627 JUMP
---
0x622: JUMPDEST 
0x627: JUMP S4
---
Entry stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x628
[0x628:0x62b]
---
Predecessors: [0x185]
Successors: [0x62c]
---
0x628 JUMPDEST
0x629 PUSH1 0x0
0x62b DUP1
---
0x628: JUMPDEST 
0x629: V537 = 0x0
---
Entry stack: [V13, 0x150, V124, V132]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x150, V124, V132, 0x0, 0x0]

================================

Block 0x62c
[0x62c:0x636]
---
Predecessors: [0x628, 0x667]
Successors: [0x637, 0x66f]
---
0x62c JUMPDEST
0x62d PUSH1 0xc
0x62f SLOAD
0x630 DUP2
0x631 LT
0x632 ISZERO
0x633 PUSH2 0x66f
0x636 JUMPI
---
0x62c: JUMPDEST 
0x62d: V538 = 0xc
0x62f: V539 = S[0xc]
0x631: V540 = LT S0 V539
0x632: V541 = ISZERO V540
0x633: V542 = 0x66f
0x636: JUMPI 0x66f V541
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0]

================================

Block 0x637
[0x637:0x645]
---
Predecessors: [0x62c]
Successors: [0x646, 0x647]
---
0x637 PUSH1 0xc
0x639 DUP1
0x63a SLOAD
0x63b CALLER
0x63c SWAP2
0x63d SWAP1
0x63e DUP4
0x63f SWAP1
0x640 DUP2
0x641 LT
0x642 PUSH2 0x647
0x645 JUMPI
---
0x637: V543 = 0xc
0x63a: V544 = S[0xc]
0x63b: V545 = CALLER
0x641: V546 = LT S0 V544
0x642: V547 = 0x647
0x645: JUMPI 0x647 V546
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0, V545, 0xc, S0]
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0, V545, 0xc, S0]

================================

Block 0x646
[0x646:0x646]
---
Predecessors: [0x637]
Successors: []
---
0x646 INVALID
---
0x646: INVALID 
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S3, V545, 0xc, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S3, V545, 0xc, S0]

================================

Block 0x647
[0x647:0x662]
---
Predecessors: [0x637]
Successors: [0x663, 0x667]
---
0x647 JUMPDEST
0x648 PUSH1 0x0
0x64a SWAP2
0x64b DUP3
0x64c MSTORE
0x64d PUSH1 0x20
0x64f SWAP1
0x650 SWAP2
0x651 SHA3
0x652 ADD
0x653 SLOAD
0x654 PUSH1 0x1
0x656 PUSH1 0xa0
0x658 PUSH1 0x2
0x65a EXP
0x65b SUB
0x65c AND
0x65d EQ
0x65e ISZERO
0x65f PUSH2 0x667
0x662 JUMPI
---
0x647: JUMPDEST 
0x648: V548 = 0x0
0x64c: M[0x0] = 0xc
0x64d: V549 = 0x20
0x651: V550 = SHA3 0x0 0x20
0x652: V551 = ADD V550 S0
0x653: V552 = S[V551]
0x654: V553 = 0x1
0x656: V554 = 0xa0
0x658: V555 = 0x2
0x65a: V556 = EXP 0x2 0xa0
0x65b: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65c: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x65d: V559 = EQ V558 V545
0x65e: V560 = ISZERO V559
0x65f: V561 = 0x667
0x662: JUMPI 0x667 V560
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S3, V545, 0xc, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S3]

================================

Block 0x663
[0x663:0x666]
---
Predecessors: [0x647]
Successors: [0x667]
---
0x663 PUSH1 0x1
0x665 SWAP2
0x666 POP
---
0x663: V562 = 0x1
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V13, 0x150, V124, V132, 0x1, S0]

================================

Block 0x667
[0x667:0x66e]
---
Predecessors: [0x647, 0x663]
Successors: [0x62c]
---
0x667 JUMPDEST
0x668 PUSH1 0x1
0x66a ADD
0x66b PUSH2 0x62c
0x66e JUMP
---
0x667: JUMPDEST 
0x668: V563 = 0x1
0x66a: V564 = ADD 0x1 S0
0x66b: V565 = 0x62c
0x66e: JUMP 0x62c
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [V564]
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, V564]

================================

Block 0x66f
[0x66f:0x67b]
---
Predecessors: [0x62c]
Successors: [0x67c, 0x683]
---
0x66f JUMPDEST
0x670 PUSH1 0xc
0x672 SLOAD
0x673 PUSH1 0x0
0x675 LT
0x676 DUP1
0x677 ISZERO
0x678 PUSH2 0x683
0x67b JUMPI
---
0x66f: JUMPDEST 
0x670: V566 = 0xc
0x672: V567 = S[0xc]
0x673: V568 = 0x0
0x675: V569 = LT 0x0 V567
0x677: V570 = ISZERO V569
0x678: V571 = 0x683
0x67b: JUMPI 0x683 V570
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: [V569]
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0, V569]

================================

Block 0x67c
[0x67c:0x682]
---
Predecessors: [0x66f]
Successors: [0x683]
---
0x67c POP
0x67d PUSH1 0x1
0x67f DUP3
0x680 ISZERO
0x681 ISZERO
0x682 EQ
---
0x67d: V572 = 0x1
0x680: V573 = ISZERO {0x0, 0x1}
0x681: V574 = ISZERO V573
0x682: V575 = EQ V574 0x1
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S1, V569]
Stack pops: 3
Stack additions: [S2, S1, V575]
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S1, V575]

================================

Block 0x683
[0x683:0x689]
---
Predecessors: [0x66f, 0x67c]
Successors: [0x68a, 0x6d9]
---
0x683 JUMPDEST
0x684 ISZERO
0x685 ISZERO
0x686 PUSH2 0x6d9
0x689 JUMPI
---
0x683: JUMPDEST 
0x684: V576 = ISZERO S0
0x685: V577 = ISZERO V576
0x686: V578 = 0x6d9
0x689: JUMPI 0x6d9 V577
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S1]

================================

Block 0x68a
[0x68a:0x6d8]
---
Predecessors: [0x683]
Successors: []
---
0x68a PUSH1 0x40
0x68c DUP1
0x68d MLOAD
0x68e PUSH1 0xe5
0x690 PUSH1 0x2
0x692 EXP
0x693 PUSH3 0x461bcd
0x697 MUL
0x698 DUP2
0x699 MSTORE
0x69a PUSH1 0x20
0x69c PUSH1 0x4
0x69e DUP3
0x69f ADD
0x6a0 MSTORE
0x6a1 PUSH1 0x1
0x6a3 PUSH1 0x24
0x6a5 DUP3
0x6a6 ADD
0x6a7 MSTORE
0x6a8 PUSH32 0x3800000000000000000000000000000000000000000000000000000000000000
0x6c9 PUSH1 0x44
0x6cb DUP3
0x6cc ADD
0x6cd MSTORE
0x6ce SWAP1
0x6cf MLOAD
0x6d0 SWAP1
0x6d1 DUP2
0x6d2 SWAP1
0x6d3 SUB
0x6d4 PUSH1 0x64
0x6d6 ADD
0x6d7 SWAP1
0x6d8 REVERT
---
0x68a: V579 = 0x40
0x68d: V580 = M[0x40]
0x68e: V581 = 0xe5
0x690: V582 = 0x2
0x692: V583 = EXP 0x2 0xe5
0x693: V584 = 0x461bcd
0x697: V585 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x699: M[V580] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x69a: V586 = 0x20
0x69c: V587 = 0x4
0x69f: V588 = ADD V580 0x4
0x6a0: M[V588] = 0x20
0x6a1: V589 = 0x1
0x6a3: V590 = 0x24
0x6a6: V591 = ADD V580 0x24
0x6a7: M[V591] = 0x1
0x6a8: V592 = 0x3800000000000000000000000000000000000000000000000000000000000000
0x6c9: V593 = 0x44
0x6cc: V594 = ADD V580 0x44
0x6cd: M[V594] = 0x3800000000000000000000000000000000000000000000000000000000000000
0x6cf: V595 = M[0x40]
0x6d3: V596 = SUB V580 V595
0x6d4: V597 = 0x64
0x6d6: V598 = ADD 0x64 V596
0x6d8: REVERT V595 V598
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0]

================================

Block 0x6d9
[0x6d9:0x71c]
---
Predecessors: [0x683]
Successors: [0xf61]
---
0x6d9 JUMPDEST
0x6da PUSH1 0xff
0x6dc DUP5
0x6dd AND
0x6de PUSH2 0x1fe
0x6e1 ADD
0x6e2 PUSH1 0x0
0x6e4 DUP2
0x6e5 DUP2
0x6e6 MSTORE
0x6e7 PUSH1 0xb
0x6e9 PUSH1 0x20
0x6eb SWAP1
0x6ec DUP2
0x6ed MSTORE
0x6ee PUSH1 0x40
0x6f0 DUP1
0x6f1 DUP4
0x6f2 SHA3
0x6f3 CALLER
0x6f4 DUP5
0x6f5 MSTORE
0x6f6 SWAP1
0x6f7 SWAP2
0x6f8 MSTORE
0x6f9 SWAP1
0x6fa SHA3
0x6fb DUP1
0x6fc SLOAD
0x6fd PUSH1 0x1
0x6ff PUSH1 0xa0
0x701 PUSH1 0x2
0x703 EXP
0x704 SUB
0x705 NOT
0x706 AND
0x707 PUSH1 0x1
0x709 PUSH1 0xa0
0x70b PUSH1 0x2
0x70d EXP
0x70e SUB
0x70f DUP7
0x710 AND
0x711 OR
0x712 SWAP1
0x713 SSTORE
0x714 PUSH2 0x71d
0x717 SWAP1
0x718 DUP5
0x719 PUSH2 0xf61
0x71c JUMP
---
0x6d9: JUMPDEST 
0x6da: V599 = 0xff
0x6dd: V600 = AND V124 0xff
0x6de: V601 = 0x1fe
0x6e1: V602 = ADD 0x1fe V600
0x6e2: V603 = 0x0
0x6e6: M[0x0] = V602
0x6e7: V604 = 0xb
0x6e9: V605 = 0x20
0x6ed: M[0x20] = 0xb
0x6ee: V606 = 0x40
0x6f2: V607 = SHA3 0x0 0x40
0x6f3: V608 = CALLER
0x6f5: M[0x0] = V608
0x6f8: M[0x20] = V607
0x6fa: V609 = SHA3 0x0 0x40
0x6fc: V610 = S[V609]
0x6fd: V611 = 0x1
0x6ff: V612 = 0xa0
0x701: V613 = 0x2
0x703: V614 = EXP 0x2 0xa0
0x704: V615 = SUB 0x10000000000000000000000000000000000000000 0x1
0x705: V616 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x706: V617 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V610
0x707: V618 = 0x1
0x709: V619 = 0xa0
0x70b: V620 = 0x2
0x70d: V621 = EXP 0x2 0xa0
0x70e: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x710: V623 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x711: V624 = OR V623 V617
0x713: S[V609] = V624
0x714: V625 = 0x71d
0x719: V626 = 0xf61
0x71c: JUMP 0xf61
---
Entry stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x71d, V602, S2]
Exit stack: [V13, 0x150, V124, V132, {0x0, 0x1}, S0, 0x71d, V602, V132]

================================

Block 0x71d
[0x71d:0x723]
---
Predecessors: [0xfef]
Successors: [0x724, 0x728]
---
0x71d JUMPDEST
0x71e ISZERO
0x71f ISZERO
0x720 PUSH2 0x728
0x723 JUMPI
---
0x71d: JUMPDEST 
0x71e: V627 = ISZERO {0x0, 0x1}
0x71f: V628 = ISZERO V627
0x720: V629 = 0x728
0x723: JUMPI 0x728 V628
---
Entry stack: [V13, S5, S4, S3, {0x0, 0x1}, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S5, S4, S3, {0x0, 0x1}, S1]

================================

Block 0x724
[0x724:0x727]
---
Predecessors: [0x71d]
Successors: [0x622]
---
0x724 PUSH2 0x622
0x727 JUMP
---
0x724: V630 = 0x622
0x727: JUMP 0x622
---
Entry stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]

================================

Block 0x728
[0x728:0x75a]
---
Predecessors: [0x71d]
Successors: [0x150]
---
0x728 JUMPDEST
0x729 PUSH1 0xff
0x72b DUP5
0x72c AND
0x72d PUSH1 0x0
0x72f SWAP1
0x730 DUP2
0x731 MSTORE
0x732 PUSH1 0x5
0x734 PUSH1 0x20
0x736 MSTORE
0x737 PUSH1 0x40
0x739 SWAP1
0x73a SHA3
0x73b DUP1
0x73c SLOAD
0x73d PUSH1 0x1
0x73f PUSH1 0xa0
0x741 PUSH1 0x2
0x743 EXP
0x744 SUB
0x745 DUP6
0x746 AND
0x747 PUSH1 0x1
0x749 PUSH1 0xa0
0x74b PUSH1 0x2
0x74d EXP
0x74e SUB
0x74f NOT
0x750 SWAP1
0x751 SWAP2
0x752 AND
0x753 OR
0x754 SWAP1
0x755 SSTORE
0x756 POP
0x757 POP
0x758 POP
0x759 POP
0x75a JUMP
---
0x728: JUMPDEST 
0x729: V631 = 0xff
0x72c: V632 = AND S3 0xff
0x72d: V633 = 0x0
0x731: M[0x0] = V632
0x732: V634 = 0x5
0x734: V635 = 0x20
0x736: M[0x20] = 0x5
0x737: V636 = 0x40
0x73a: V637 = SHA3 0x0 0x40
0x73c: V638 = S[V637]
0x73d: V639 = 0x1
0x73f: V640 = 0xa0
0x741: V641 = 0x2
0x743: V642 = EXP 0x2 0xa0
0x744: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x746: V644 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x747: V645 = 0x1
0x749: V646 = 0xa0
0x74b: V647 = 0x2
0x74d: V648 = EXP 0x2 0xa0
0x74e: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74f: V650 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x752: V651 = AND V638 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x753: V652 = OR V651 V644
0x755: S[V637] = V652
0x75a: JUMP S4
---
Entry stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x75b
[0x75b:0x76f]
---
Predecessors: [0x1ac]
Successors: [0x1c1]
---
0x75b JUMPDEST
0x75c PUSH1 0x4
0x75e PUSH1 0x20
0x760 MSTORE
0x761 PUSH1 0x0
0x763 SWAP1
0x764 DUP2
0x765 MSTORE
0x766 PUSH1 0x40
0x768 SWAP1
0x769 SHA3
0x76a SLOAD
0x76b PUSH1 0xff
0x76d AND
0x76e DUP2
0x76f JUMP
---
0x75b: JUMPDEST 
0x75c: V653 = 0x4
0x75e: V654 = 0x20
0x760: M[0x20] = 0x4
0x761: V655 = 0x0
0x765: M[0x0] = V146
0x766: V656 = 0x40
0x769: V657 = SHA3 0x0 0x40
0x76a: V658 = S[V657]
0x76b: V659 = 0xff
0x76d: V660 = AND 0xff V658
0x76f: JUMP 0x1c1
---
Entry stack: [V13, 0x1c1, V146]
Stack pops: 2
Stack additions: [S1, V660]
Exit stack: [V13, 0x1c1, V660]

================================

Block 0x770
[0x770:0x77e]
---
Predecessors: [0x1e3]
Successors: [0x1ec]
---
0x770 JUMPDEST
0x771 PUSH1 0x1
0x773 SLOAD
0x774 PUSH1 0x1
0x776 PUSH1 0xa0
0x778 PUSH1 0x2
0x77a EXP
0x77b SUB
0x77c AND
0x77d DUP2
0x77e JUMP
---
0x770: JUMPDEST 
0x771: V661 = 0x1
0x773: V662 = S[0x1]
0x774: V663 = 0x1
0x776: V664 = 0xa0
0x778: V665 = 0x2
0x77a: V666 = EXP 0x2 0xa0
0x77b: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77c: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x77e: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec]
Stack pops: 1
Stack additions: [S0, V668]
Exit stack: [V13, 0x1ec, V668]

================================

Block 0x77f
[0x77f:0x791]
---
Predecessors: [0x214]
Successors: [0x792, 0x7e1]
---
0x77f JUMPDEST
0x780 PUSH1 0x0
0x782 SLOAD
0x783 PUSH1 0x1
0x785 PUSH1 0xa0
0x787 PUSH1 0x2
0x789 EXP
0x78a SUB
0x78b AND
0x78c CALLER
0x78d EQ
0x78e PUSH2 0x7e1
0x791 JUMPI
---
0x77f: JUMPDEST 
0x780: V669 = 0x0
0x782: V670 = S[0x0]
0x783: V671 = 0x1
0x785: V672 = 0xa0
0x787: V673 = 0x2
0x789: V674 = EXP 0x2 0xa0
0x78a: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78b: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V670
0x78c: V677 = CALLER
0x78d: V678 = EQ V677 V676
0x78e: V679 = 0x7e1
0x791: JUMPI 0x7e1 V678
---
Entry stack: [V13, 0x150, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V186]

================================

Block 0x792
[0x792:0x7e0]
---
Predecessors: [0x77f]
Successors: []
---
0x792 PUSH1 0x40
0x794 DUP1
0x795 MLOAD
0x796 PUSH1 0xe5
0x798 PUSH1 0x2
0x79a EXP
0x79b PUSH3 0x461bcd
0x79f MUL
0x7a0 DUP2
0x7a1 MSTORE
0x7a2 PUSH1 0x20
0x7a4 PUSH1 0x4
0x7a6 DUP3
0x7a7 ADD
0x7a8 MSTORE
0x7a9 PUSH1 0x1
0x7ab PUSH1 0x24
0x7ad DUP3
0x7ae ADD
0x7af MSTORE
0x7b0 PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000
0x7d1 PUSH1 0x44
0x7d3 DUP3
0x7d4 ADD
0x7d5 MSTORE
0x7d6 SWAP1
0x7d7 MLOAD
0x7d8 SWAP1
0x7d9 DUP2
0x7da SWAP1
0x7db SUB
0x7dc PUSH1 0x64
0x7de ADD
0x7df SWAP1
0x7e0 REVERT
---
0x792: V680 = 0x40
0x795: V681 = M[0x40]
0x796: V682 = 0xe5
0x798: V683 = 0x2
0x79a: V684 = EXP 0x2 0xe5
0x79b: V685 = 0x461bcd
0x79f: V686 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x7a1: M[V681] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7a2: V687 = 0x20
0x7a4: V688 = 0x4
0x7a7: V689 = ADD V681 0x4
0x7a8: M[V689] = 0x20
0x7a9: V690 = 0x1
0x7ab: V691 = 0x24
0x7ae: V692 = ADD V681 0x24
0x7af: M[V692] = 0x1
0x7b0: V693 = 0x3100000000000000000000000000000000000000000000000000000000000000
0x7d1: V694 = 0x44
0x7d4: V695 = ADD V681 0x44
0x7d5: M[V695] = 0x3100000000000000000000000000000000000000000000000000000000000000
0x7d7: V696 = M[0x40]
0x7db: V697 = SUB V681 V696
0x7dc: V698 = 0x64
0x7de: V699 = ADD 0x64 V697
0x7e0: REVERT V696 V699
---
Entry stack: [V13, 0x150, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V186]

================================

Block 0x7e1
[0x7e1:0x802]
---
Predecessors: [0x77f]
Successors: [0x150]
---
0x7e1 JUMPDEST
0x7e2 PUSH1 0x0
0x7e4 DUP1
0x7e5 SLOAD
0x7e6 PUSH1 0x1
0x7e8 PUSH1 0xa0
0x7ea PUSH1 0x2
0x7ec EXP
0x7ed SUB
0x7ee NOT
0x7ef AND
0x7f0 PUSH1 0x1
0x7f2 PUSH1 0xa0
0x7f4 PUSH1 0x2
0x7f6 EXP
0x7f7 SUB
0x7f8 SWAP3
0x7f9 SWAP1
0x7fa SWAP3
0x7fb AND
0x7fc SWAP2
0x7fd SWAP1
0x7fe SWAP2
0x7ff OR
0x800 SWAP1
0x801 SSTORE
0x802 JUMP
---
0x7e1: JUMPDEST 
0x7e2: V700 = 0x0
0x7e5: V701 = S[0x0]
0x7e6: V702 = 0x1
0x7e8: V703 = 0xa0
0x7ea: V704 = 0x2
0x7ec: V705 = EXP 0x2 0xa0
0x7ed: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ee: V707 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7ef: V708 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V701
0x7f0: V709 = 0x1
0x7f2: V710 = 0xa0
0x7f4: V711 = 0x2
0x7f6: V712 = EXP 0x2 0xa0
0x7f7: V713 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fb: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x7ff: V715 = OR V714 V708
0x801: S[0x0] = V715
0x802: JUMP 0x150
---
Entry stack: [V13, 0x150, V186]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x803
[0x803:0x808]
---
Predecessors: [0x235]
Successors: [0x23e]
---
0x803 JUMPDEST
0x804 PUSH1 0xa
0x806 SLOAD
0x807 DUP2
0x808 JUMP
---
0x803: JUMPDEST 
0x804: V716 = 0xa
0x806: V717 = S[0xa]
0x808: JUMP 0x23e
---
Entry stack: [V13, 0x23e]
Stack pops: 1
Stack additions: [S0, V717]
Exit stack: [V13, 0x23e, V717]

================================

Block 0x809
[0x809:0x838]
---
Predecessors: [0x250]
Successors: [0x839]
---
0x809 JUMPDEST
0x80a PUSH1 0x2
0x80c DUP1
0x80d SLOAD
0x80e PUSH1 0x1
0x810 PUSH1 0xa0
0x812 PUSH1 0x2
0x814 EXP
0x815 SUB
0x816 AND
0x817 SWAP1
0x818 CALLVALUE
0x819 DIV
0x81a GAS
0x81b PUSH1 0x40
0x81d MLOAD
0x81e SWAP1
0x81f SWAP2
0x820 SWAP1
0x821 PUSH1 0x0
0x823 DUP2
0x824 DUP2
0x825 DUP2
0x826 DUP6
0x827 DUP9
0x828 DUP9
0x829 CALL
0x82a POP
0x82b PUSH1 0x2
0x82d SWAP4
0x82e POP
0x82f CALLVALUE
0x830 SWAP3
0x831 POP
0x832 PUSH2 0x839
0x835 SWAP2
0x836 POP
0x837 POP
0x838 JUMP
---
0x809: JUMPDEST 
0x80a: V718 = 0x2
0x80d: V719 = S[0x2]
0x80e: V720 = 0x1
0x810: V721 = 0xa0
0x812: V722 = 0x2
0x814: V723 = EXP 0x2 0xa0
0x815: V724 = SUB 0x10000000000000000000000000000000000000000 0x1
0x816: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V719
0x818: V726 = CALLVALUE
0x819: V727 = DIV V726 0x2
0x81a: V728 = GAS
0x81b: V729 = 0x40
0x81d: V730 = M[0x40]
0x821: V731 = 0x0
0x829: V732 = CALL V728 V725 V727 V730 0x0 V730 0x0
0x82b: V733 = 0x2
0x82f: V734 = CALLVALUE
0x832: V735 = 0x839
0x838: JUMP 0x839
---
Entry stack: [V13, 0x150]
Stack pops: 0
Stack additions: [0x2, V734]
Exit stack: [V13, 0x150, 0x2, V734]

================================

Block 0x839
[0x839:0x852]
---
Predecessors: [0x809]
Successors: [0x150]
---
0x839 JUMPDEST
0x83a PUSH1 0x9
0x83c DUP1
0x83d SLOAD
0x83e SWAP3
0x83f SWAP1
0x840 SWAP2
0x841 DIV
0x842 SWAP1
0x843 SWAP2
0x844 ADD
0x845 SWAP1
0x846 SSTORE
0x847 PUSH1 0xa
0x849 DUP1
0x84a SLOAD
0x84b PUSH1 0x2
0x84d CALLVALUE
0x84e DIV
0x84f ADD
0x850 SWAP1
0x851 SSTORE
0x852 JUMP
---
0x839: JUMPDEST 
0x83a: V736 = 0x9
0x83d: V737 = S[0x9]
0x841: V738 = DIV V734 0x2
0x844: V739 = ADD V737 V738
0x846: S[0x9] = V739
0x847: V740 = 0xa
0x84a: V741 = S[0xa]
0x84b: V742 = 0x2
0x84d: V743 = CALLVALUE
0x84e: V744 = DIV V743 0x2
0x84f: V745 = ADD V744 V741
0x851: S[0xa] = V745
0x852: JUMP 0x150
---
Entry stack: [V13, 0x150, 0x2, V734]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x853
[0x853:0x854]
---
Predecessors: [0x258]
Successors: [0x150]
---
0x853 JUMPDEST
0x854 JUMP
---
0x853: JUMPDEST 
0x854: JUMP 0x150
---
Entry stack: [V13, 0x150]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x855
[0x855:0x861]
---
Predecessors: [0x26c]
Successors: [0x862, 0x863]
---
0x855 JUMPDEST
0x856 PUSH1 0x8
0x858 DUP1
0x859 SLOAD
0x85a DUP3
0x85b SWAP1
0x85c DUP2
0x85d LT
0x85e PUSH2 0x863
0x861 JUMPI
---
0x855: JUMPDEST 
0x856: V746 = 0x8
0x859: V747 = S[0x8]
0x85d: V748 = LT V210 V747
0x85e: V749 = 0x863
0x861: JUMPI 0x863 V748
---
Entry stack: [V13, 0x1ec, V210]
Stack pops: 1
Stack additions: [S0, 0x8, S0]
Exit stack: [V13, 0x1ec, V210, 0x8, V210]

================================

Block 0x862
[0x862:0x862]
---
Predecessors: [0x855]
Successors: []
---
0x862 INVALID
---
0x862: INVALID 
---
Entry stack: [V13, 0x1ec, V210, 0x8, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, V210, 0x8, V210]

================================

Block 0x863
[0x863:0x87c]
---
Predecessors: [0x855]
Successors: [0x1ec]
---
0x863 JUMPDEST
0x864 PUSH1 0x0
0x866 SWAP2
0x867 DUP3
0x868 MSTORE
0x869 PUSH1 0x20
0x86b SWAP1
0x86c SWAP2
0x86d SHA3
0x86e ADD
0x86f SLOAD
0x870 PUSH1 0x1
0x872 PUSH1 0xa0
0x874 PUSH1 0x2
0x876 EXP
0x877 SUB
0x878 AND
0x879 SWAP1
0x87a POP
0x87b DUP2
0x87c JUMP
---
0x863: JUMPDEST 
0x864: V750 = 0x0
0x868: M[0x0] = 0x8
0x869: V751 = 0x20
0x86d: V752 = SHA3 0x0 0x20
0x86e: V753 = ADD V752 V210
0x86f: V754 = S[V753]
0x870: V755 = 0x1
0x872: V756 = 0xa0
0x874: V757 = 0x2
0x876: V758 = EXP 0x2 0xa0
0x877: V759 = SUB 0x10000000000000000000000000000000000000000 0x1
0x878: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0x87c: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, V210, 0x8, V210]
Stack pops: 4
Stack additions: [S3, V760]
Exit stack: [V13, 0x1ec, V760]

================================

Block 0x87d
[0x87d:0x890]
---
Predecessors: [0x284]
Successors: [0x891, 0x8e0]
---
0x87d JUMPDEST
0x87e PUSH1 0x0
0x880 DUP1
0x881 SLOAD
0x882 PUSH1 0x1
0x884 PUSH1 0xa0
0x886 PUSH1 0x2
0x888 EXP
0x889 SUB
0x88a AND
0x88b CALLER
0x88c EQ
0x88d PUSH2 0x8e0
0x890 JUMPI
---
0x87d: JUMPDEST 
0x87e: V761 = 0x0
0x881: V762 = S[0x0]
0x882: V763 = 0x1
0x884: V764 = 0xa0
0x886: V765 = 0x2
0x888: V766 = EXP 0x2 0xa0
0x889: V767 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88a: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0x88b: V769 = CALLER
0x88c: V770 = EQ V769 V768
0x88d: V771 = 0x8e0
0x890: JUMPI 0x8e0 V770
---
Entry stack: [V13, 0x150, V217, V232]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x150, V217, V232, 0x0]

================================

Block 0x891
[0x891:0x8df]
---
Predecessors: [0x87d]
Successors: []
---
0x891 PUSH1 0x40
0x893 DUP1
0x894 MLOAD
0x895 PUSH1 0xe5
0x897 PUSH1 0x2
0x899 EXP
0x89a PUSH3 0x461bcd
0x89e MUL
0x89f DUP2
0x8a0 MSTORE
0x8a1 PUSH1 0x20
0x8a3 PUSH1 0x4
0x8a5 DUP3
0x8a6 ADD
0x8a7 MSTORE
0x8a8 PUSH1 0x1
0x8aa PUSH1 0x24
0x8ac DUP3
0x8ad ADD
0x8ae MSTORE
0x8af PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000
0x8d0 PUSH1 0x44
0x8d2 DUP3
0x8d3 ADD
0x8d4 MSTORE
0x8d5 SWAP1
0x8d6 MLOAD
0x8d7 SWAP1
0x8d8 DUP2
0x8d9 SWAP1
0x8da SUB
0x8db PUSH1 0x64
0x8dd ADD
0x8de SWAP1
0x8df REVERT
---
0x891: V772 = 0x40
0x894: V773 = M[0x40]
0x895: V774 = 0xe5
0x897: V775 = 0x2
0x899: V776 = EXP 0x2 0xe5
0x89a: V777 = 0x461bcd
0x89e: V778 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x8a0: M[V773] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8a1: V779 = 0x20
0x8a3: V780 = 0x4
0x8a6: V781 = ADD V773 0x4
0x8a7: M[V781] = 0x20
0x8a8: V782 = 0x1
0x8aa: V783 = 0x24
0x8ad: V784 = ADD V773 0x24
0x8ae: M[V784] = 0x1
0x8af: V785 = 0x3100000000000000000000000000000000000000000000000000000000000000
0x8d0: V786 = 0x44
0x8d3: V787 = ADD V773 0x44
0x8d4: M[V787] = 0x3100000000000000000000000000000000000000000000000000000000000000
0x8d6: V788 = M[0x40]
0x8da: V789 = SUB V773 V788
0x8db: V790 = 0x64
0x8dd: V791 = ADD 0x64 V789
0x8df: REVERT V788 V791
---
Entry stack: [V13, 0x150, V217, V232, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V217, V232, 0x0]

================================

Block 0x8e0
[0x8e0:0x8e3]
---
Predecessors: [0x87d]
Successors: [0x8e4]
---
0x8e0 JUMPDEST
0x8e1 POP
0x8e2 PUSH1 0x0
---
0x8e0: JUMPDEST 
0x8e2: V792 = 0x0
---
Entry stack: [V13, 0x150, V217, V232, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x150, V217, V232, 0x0]

================================

Block 0x8e4
[0x8e4:0x8ed]
---
Predecessors: [0x8e0, 0x917]
Successors: [0x8ee, 0x939]
---
0x8e4 JUMPDEST
0x8e5 DUP3
0x8e6 MLOAD
0x8e7 DUP2
0x8e8 LT
0x8e9 ISZERO
0x8ea PUSH2 0x939
0x8ed JUMPI
---
0x8e4: JUMPDEST 
0x8e6: V793 = M[V217]
0x8e8: V794 = LT S0 V793
0x8e9: V795 = ISZERO V794
0x8ea: V796 = 0x939
0x8ed: JUMPI 0x939 V795
---
Entry stack: [V13, 0x150, V217, V232, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x150, V217, V232, S0]

================================

Block 0x8ee
[0x8ee:0x8f9]
---
Predecessors: [0x8e4]
Successors: [0x8fa, 0x8fb]
---
0x8ee DUP2
0x8ef DUP2
0x8f0 DUP2
0x8f1 MLOAD
0x8f2 DUP2
0x8f3 LT
0x8f4 ISZERO
0x8f5 ISZERO
0x8f6 PUSH2 0x8fb
0x8f9 JUMPI
---
0x8f1: V797 = M[V232]
0x8f3: V798 = LT S0 V797
0x8f4: V799 = ISZERO V798
0x8f5: V800 = ISZERO V799
0x8f6: V801 = 0x8fb
0x8f9: JUMPI 0x8fb V800
---
Entry stack: [V13, 0x150, V217, V232, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, S0]
Exit stack: [V13, 0x150, V217, V232, S0, V232, S0]

================================

Block 0x8fa
[0x8fa:0x8fa]
---
Predecessors: [0x8ee]
Successors: []
---
0x8fa INVALID
---
0x8fa: INVALID 
---
Entry stack: [V13, 0x150, V217, V232, S2, V232, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V217, V232, S2, V232, S0]

================================

Block 0x8fb
[0x8fb:0x915]
---
Predecessors: [0x8ee]
Successors: [0x916, 0x917]
---
0x8fb JUMPDEST
0x8fc SWAP1
0x8fd PUSH1 0x20
0x8ff ADD
0x900 SWAP1
0x901 PUSH1 0x20
0x903 MUL
0x904 ADD
0x905 MLOAD
0x906 PUSH1 0xd
0x908 PUSH1 0x0
0x90a DUP6
0x90b DUP5
0x90c DUP2
0x90d MLOAD
0x90e DUP2
0x90f LT
0x910 ISZERO
0x911 ISZERO
0x912 PUSH2 0x917
0x915 JUMPI
---
0x8fb: JUMPDEST 
0x8fd: V802 = 0x20
0x8ff: V803 = ADD 0x20 V232
0x901: V804 = 0x20
0x903: V805 = MUL 0x20 S0
0x904: V806 = ADD V805 V803
0x905: V807 = M[V806]
0x906: V808 = 0xd
0x908: V809 = 0x0
0x90d: V810 = M[V217]
0x90f: V811 = LT S2 V810
0x910: V812 = ISZERO V811
0x911: V813 = ISZERO V812
0x912: V814 = 0x917
0x915: JUMPI 0x917 V813
---
Entry stack: [V13, 0x150, V217, V232, S2, V232, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V807, 0xd, 0x0, S4, S2]
Exit stack: [V13, 0x150, V217, V232, S2, V807, 0xd, 0x0, V217, S2]

================================

Block 0x916
[0x916:0x916]
---
Predecessors: [0x8fb]
Successors: []
---
0x916 INVALID
---
0x916: INVALID 
---
Entry stack: [V13, 0x150, V217, V232, S5, V807, 0xd, 0x0, V217, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V217, V232, S5, V807, 0xd, 0x0, V217, S0]

================================

Block 0x917
[0x917:0x938]
---
Predecessors: [0x8fb]
Successors: [0x8e4]
---
0x917 JUMPDEST
0x918 PUSH1 0x20
0x91a SWAP1
0x91b DUP2
0x91c MUL
0x91d SWAP1
0x91e SWAP2
0x91f ADD
0x920 DUP2
0x921 ADD
0x922 MLOAD
0x923 DUP3
0x924 MSTORE
0x925 DUP2
0x926 ADD
0x927 SWAP2
0x928 SWAP1
0x929 SWAP2
0x92a MSTORE
0x92b PUSH1 0x40
0x92d ADD
0x92e PUSH1 0x0
0x930 SHA3
0x931 SSTORE
0x932 PUSH1 0x1
0x934 ADD
0x935 PUSH2 0x8e4
0x938 JUMP
---
0x917: JUMPDEST 
0x918: V815 = 0x20
0x91c: V816 = MUL 0x20 S0
0x91f: V817 = ADD V217 V816
0x921: V818 = ADD 0x20 V817
0x922: V819 = M[V818]
0x924: M[0x0] = V819
0x926: V820 = ADD 0x0 0x20
0x92a: M[0x20] = 0xd
0x92b: V821 = 0x40
0x92d: V822 = ADD 0x40 0x0
0x92e: V823 = 0x0
0x930: V824 = SHA3 0x0 0x40
0x931: S[V824] = V807
0x932: V825 = 0x1
0x934: V826 = ADD 0x1 S5
0x935: V827 = 0x8e4
0x938: JUMP 0x8e4
---
Entry stack: [V13, 0x150, V217, V232, S5, V807, 0xd, 0x0, V217, S0]
Stack pops: 6
Stack additions: [V826]
Exit stack: [V13, 0x150, V217, V232, V826]

================================

Block 0x939
[0x939:0x93d]
---
Predecessors: [0x8e4, 0xf16]
Successors: [0x150]
---
0x939 JUMPDEST
0x93a POP
0x93b POP
0x93c POP
0x93d JUMP
---
0x939: JUMPDEST 
0x93d: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S4]

================================

Block 0x93e
[0x93e:0x958]
---
Predecessors: [0x312]
Successors: [0x1ec]
---
0x93e JUMPDEST
0x93f PUSH1 0x6
0x941 PUSH1 0x20
0x943 MSTORE
0x944 PUSH1 0x0
0x946 SWAP1
0x947 DUP2
0x948 MSTORE
0x949 PUSH1 0x40
0x94b SWAP1
0x94c SHA3
0x94d SLOAD
0x94e PUSH1 0x1
0x950 PUSH1 0xa0
0x952 PUSH1 0x2
0x954 EXP
0x955 SUB
0x956 AND
0x957 DUP2
0x958 JUMP
---
0x93e: JUMPDEST 
0x93f: V828 = 0x6
0x941: V829 = 0x20
0x943: M[0x20] = 0x6
0x944: V830 = 0x0
0x948: M[0x0] = V256
0x949: V831 = 0x40
0x94c: V832 = SHA3 0x0 0x40
0x94d: V833 = S[V832]
0x94e: V834 = 0x1
0x950: V835 = 0xa0
0x952: V836 = 0x2
0x954: V837 = EXP 0x2 0xa0
0x955: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0x956: V839 = AND 0xffffffffffffffffffffffffffffffffffffffff V833
0x958: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, V256]
Stack pops: 2
Stack additions: [S1, V839]
Exit stack: [V13, 0x1ec, V839]

================================

Block 0x959
[0x959:0x962]
---
Predecessors: [0x333]
Successors: [0x98c]
---
0x959 JUMPDEST
0x95a PUSH1 0x0
0x95c PUSH2 0x963
0x95f PUSH2 0x98c
0x962 JUMP
---
0x959: JUMPDEST 
0x95a: V840 = 0x0
0x95c: V841 = 0x963
0x95f: V842 = 0x98c
0x962: JUMP 0x98c
---
Entry stack: [V13, 0x1ec]
Stack pops: 0
Stack additions: [0x0, 0x963]
Exit stack: [V13, 0x1ec, 0x0, 0x963]

================================

Block 0x963
[0x963:0x967]
---
Predecessors: [0x98c]
Successors: [0x1ec]
---
0x963 JUMPDEST
0x964 SWAP1
0x965 POP
0x966 SWAP1
0x967 JUMP
---
0x963: JUMPDEST 
0x967: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, S1, V866]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V13, V866]

================================

Block 0x968
[0x968:0x985]
---
Predecessors: [0x348]
Successors: [0x1ec]
---
0x968 JUMPDEST
0x969 PUSH1 0xff
0x96b AND
0x96c PUSH1 0x0
0x96e SWAP1
0x96f DUP2
0x970 MSTORE
0x971 PUSH1 0x3
0x973 PUSH1 0x20
0x975 MSTORE
0x976 PUSH1 0x40
0x978 SWAP1
0x979 SHA3
0x97a SLOAD
0x97b PUSH1 0x1
0x97d PUSH1 0xa0
0x97f PUSH1 0x2
0x981 EXP
0x982 SUB
0x983 AND
0x984 SWAP1
0x985 JUMP
---
0x968: JUMPDEST 
0x969: V843 = 0xff
0x96b: V844 = AND 0xff V272
0x96c: V845 = 0x0
0x970: M[0x0] = V844
0x971: V846 = 0x3
0x973: V847 = 0x20
0x975: M[0x20] = 0x3
0x976: V848 = 0x40
0x979: V849 = SHA3 0x0 0x40
0x97a: V850 = S[V849]
0x97b: V851 = 0x1
0x97d: V852 = 0xa0
0x97f: V853 = 0x2
0x981: V854 = EXP 0x2 0xa0
0x982: V855 = SUB 0x10000000000000000000000000000000000000000 0x1
0x983: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff V850
0x985: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, V272]
Stack pops: 2
Stack additions: [V856]
Exit stack: [V13, V856]

================================

Block 0x986
[0x986:0x98b]
---
Predecessors: [0x363]
Successors: [0x23e]
---
0x986 JUMPDEST
0x987 PUSH1 0x8
0x989 SLOAD
0x98a SWAP1
0x98b JUMP
---
0x986: JUMPDEST 
0x987: V857 = 0x8
0x989: V858 = S[0x8]
0x98b: JUMP 0x23e
---
Entry stack: [V13, 0x23e]
Stack pops: 1
Stack additions: [V858]
Exit stack: [V13, V858]

================================

Block 0x98c
[0x98c:0x99a]
---
Predecessors: [0x378, 0x959]
Successors: [0x1ec, 0x963]
---
0x98c JUMPDEST
0x98d PUSH1 0x0
0x98f SLOAD
0x990 PUSH1 0x1
0x992 PUSH1 0xa0
0x994 PUSH1 0x2
0x996 EXP
0x997 SUB
0x998 AND
0x999 SWAP1
0x99a JUMP
---
0x98c: JUMPDEST 
0x98d: V859 = 0x0
0x98f: V860 = S[0x0]
0x990: V861 = 0x1
0x992: V862 = 0xa0
0x994: V863 = 0x2
0x996: V864 = EXP 0x2 0xa0
0x997: V865 = SUB 0x10000000000000000000000000000000000000000 0x1
0x998: V866 = AND 0xffffffffffffffffffffffffffffffffffffffff V860
0x99a: JUMP {0x1ec, 0x963}
---
Entry stack: [V13, 0x1ec, S1, {0x1ec, 0x963}]
Stack pops: 1
Stack additions: [V866]
Exit stack: [V13, 0x1ec, S1, V866]

================================

Block 0x99b
[0x99b:0x9bc]
---
Predecessors: [0x381]
Successors: [0x9bd, 0xb1e]
---
0x99b JUMPDEST
0x99c CALLER
0x99d PUSH1 0x0
0x99f SWAP1
0x9a0 DUP2
0x9a1 MSTORE
0x9a2 PUSH1 0x6
0x9a4 PUSH1 0x20
0x9a6 MSTORE
0x9a7 PUSH1 0x40
0x9a9 DUP2
0x9aa SHA3
0x9ab SLOAD
0x9ac DUP2
0x9ad SWAP1
0x9ae PUSH1 0x1
0x9b0 PUSH1 0xa0
0x9b2 PUSH1 0x2
0x9b4 EXP
0x9b5 SUB
0x9b6 AND
0x9b7 ISZERO
0x9b8 ISZERO
0x9b9 PUSH2 0xb1e
0x9bc JUMPI
---
0x99b: JUMPDEST 
0x99c: V867 = CALLER
0x99d: V868 = 0x0
0x9a1: M[0x0] = V867
0x9a2: V869 = 0x6
0x9a4: V870 = 0x20
0x9a6: M[0x20] = 0x6
0x9a7: V871 = 0x40
0x9aa: V872 = SHA3 0x0 0x40
0x9ab: V873 = S[V872]
0x9ae: V874 = 0x1
0x9b0: V875 = 0xa0
0x9b2: V876 = 0x2
0x9b4: V877 = EXP 0x2 0xa0
0x9b5: V878 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b6: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0x9b7: V880 = ISZERO V879
0x9b8: V881 = ISZERO V880
0x9b9: V882 = 0xb1e
0x9bc: JUMPI 0xb1e V881
---
Entry stack: [V13, 0x1ec]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x1ec, 0x0, 0x0]

================================

Block 0x9bd
[0x9bd:0xa1d]
---
Predecessors: [0x99b]
Successors: [0xa1e, 0xa22]
---
0x9bd PUSH1 0x1
0x9bf SLOAD
0x9c0 PUSH1 0x40
0x9c2 DUP1
0x9c3 MLOAD
0x9c4 PUSH32 0x8f0196d600000000000000000000000000000000000000000000000000000000
0x9e5 DUP2
0x9e6 MSTORE
0x9e7 CALLER
0x9e8 PUSH1 0x4
0x9ea DUP3
0x9eb ADD
0x9ec MSTORE
0x9ed SWAP1
0x9ee MLOAD
0x9ef PUSH1 0x1
0x9f1 PUSH1 0xa0
0x9f3 PUSH1 0x2
0x9f5 EXP
0x9f6 SUB
0x9f7 SWAP1
0x9f8 SWAP3
0x9f9 AND
0x9fa SWAP2
0x9fb PUSH4 0x8f0196d6
0xa00 SWAP2
0xa01 PUSH1 0x24
0xa03 DUP1
0xa04 DUP3
0xa05 ADD
0xa06 SWAP3
0xa07 PUSH1 0x20
0xa09 SWAP3
0xa0a SWAP1
0xa0b SWAP2
0xa0c SWAP1
0xa0d DUP3
0xa0e SWAP1
0xa0f SUB
0xa10 ADD
0xa11 DUP2
0xa12 PUSH1 0x0
0xa14 DUP8
0xa15 DUP1
0xa16 EXTCODESIZE
0xa17 ISZERO
0xa18 DUP1
0xa19 ISZERO
0xa1a PUSH2 0xa22
0xa1d JUMPI
---
0x9bd: V883 = 0x1
0x9bf: V884 = S[0x1]
0x9c0: V885 = 0x40
0x9c3: V886 = M[0x40]
0x9c4: V887 = 0x8f0196d600000000000000000000000000000000000000000000000000000000
0x9e6: M[V886] = 0x8f0196d600000000000000000000000000000000000000000000000000000000
0x9e7: V888 = CALLER
0x9e8: V889 = 0x4
0x9eb: V890 = ADD V886 0x4
0x9ec: M[V890] = V888
0x9ee: V891 = M[0x40]
0x9ef: V892 = 0x1
0x9f1: V893 = 0xa0
0x9f3: V894 = 0x2
0x9f5: V895 = EXP 0x2 0xa0
0x9f6: V896 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f9: V897 = AND V884 0xffffffffffffffffffffffffffffffffffffffff
0x9fb: V898 = 0x8f0196d6
0xa01: V899 = 0x24
0xa05: V900 = ADD V886 0x24
0xa07: V901 = 0x20
0xa0f: V902 = SUB V886 V891
0xa10: V903 = ADD V902 0x24
0xa12: V904 = 0x0
0xa16: V905 = EXTCODESIZE V897
0xa17: V906 = ISZERO V905
0xa19: V907 = ISZERO V906
0xa1a: V908 = 0xa22
0xa1d: JUMPI 0xa22 V907
---
Entry stack: [V13, 0x1ec, 0x0, 0x0]
Stack pops: 0
Stack additions: [V897, 0x8f0196d6, V900, 0x20, V891, V903, V891, 0x0, V897, V906]
Exit stack: [V13, 0x1ec, 0x0, 0x0, V897, 0x8f0196d6, V900, 0x20, V891, V903, V891, 0x0, V897, V906]

================================

Block 0xa1e
[0xa1e:0xa21]
---
Predecessors: [0x9bd]
Successors: []
---
0xa1e PUSH1 0x0
0xa20 DUP1
0xa21 REVERT
---
0xa1e: V909 = 0x0
0xa21: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ec, 0x0, 0x0, V897, 0x8f0196d6, V900, 0x20, V891, V903, V891, 0x0, V897, V906]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, 0x0, 0x0, V897, 0x8f0196d6, V900, 0x20, V891, V903, V891, 0x0, V897, V906]

================================

Block 0xa22
[0xa22:0xa2c]
---
Predecessors: [0x9bd]
Successors: [0xa2d, 0xa36]
---
0xa22 JUMPDEST
0xa23 POP
0xa24 GAS
0xa25 CALL
0xa26 ISZERO
0xa27 DUP1
0xa28 ISZERO
0xa29 PUSH2 0xa36
0xa2c JUMPI
---
0xa22: JUMPDEST 
0xa24: V910 = GAS
0xa25: V911 = CALL V910 V897 0x0 V891 V903 V891 0x20
0xa26: V912 = ISZERO V911
0xa28: V913 = ISZERO V912
0xa29: V914 = 0xa36
0xa2c: JUMPI 0xa36 V913
---
Entry stack: [V13, 0x1ec, 0x0, 0x0, V897, 0x8f0196d6, V900, 0x20, V891, V903, V891, 0x0, V897, V906]
Stack pops: 7
Stack additions: [V912]
Exit stack: [V13, 0x1ec, 0x0, 0x0, V897, 0x8f0196d6, V900, V912]

================================

Block 0xa2d
[0xa2d:0xa35]
---
Predecessors: [0xa22]
Successors: []
---
0xa2d RETURNDATASIZE
0xa2e PUSH1 0x0
0xa30 DUP1
0xa31 RETURNDATACOPY
0xa32 RETURNDATASIZE
0xa33 PUSH1 0x0
0xa35 REVERT
---
0xa2d: V915 = RETURNDATASIZE
0xa2e: V916 = 0x0
0xa31: RETURNDATACOPY 0x0 0x0 V915
0xa32: V917 = RETURNDATASIZE
0xa33: V918 = 0x0
0xa35: REVERT 0x0 V917
---
Entry stack: [V13, 0x1ec, 0x0, 0x0, V897, 0x8f0196d6, V900, V912]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, 0x0, 0x0, V897, 0x8f0196d6, V900, V912]

================================

Block 0xa36
[0xa36:0xa47]
---
Predecessors: [0xa22]
Successors: [0xa48, 0xa4c]
---
0xa36 JUMPDEST
0xa37 POP
0xa38 POP
0xa39 POP
0xa3a POP
0xa3b PUSH1 0x40
0xa3d MLOAD
0xa3e RETURNDATASIZE
0xa3f PUSH1 0x20
0xa41 DUP2
0xa42 LT
0xa43 ISZERO
0xa44 PUSH2 0xa4c
0xa47 JUMPI
---
0xa36: JUMPDEST 
0xa3b: V919 = 0x40
0xa3d: V920 = M[0x40]
0xa3e: V921 = RETURNDATASIZE
0xa3f: V922 = 0x20
0xa42: V923 = LT V921 0x20
0xa43: V924 = ISZERO V923
0xa44: V925 = 0xa4c
0xa47: JUMPI 0xa4c V924
---
Entry stack: [V13, 0x1ec, 0x0, 0x0, V897, 0x8f0196d6, V900, V912]
Stack pops: 4
Stack additions: [V920, V921]
Exit stack: [V13, 0x1ec, 0x0, 0x0, V920, V921]

================================

Block 0xa48
[0xa48:0xa4b]
---
Predecessors: [0xa36]
Successors: []
---
0xa48 PUSH1 0x0
0xa4a DUP1
0xa4b REVERT
---
0xa48: V926 = 0x0
0xa4b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ec, 0x0, 0x0, V920, V921]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, 0x0, 0x0, V920, V921]

================================

Block 0xa4c
[0xa4c:0xb1d]
---
Predecessors: [0xa36]
Successors: [0xb94]
---
0xa4c JUMPDEST
0xa4d POP
0xa4e MLOAD
0xa4f CALLER
0xa50 PUSH1 0x0
0xa52 DUP2
0xa53 DUP2
0xa54 MSTORE
0xa55 PUSH1 0x6
0xa57 PUSH1 0x20
0xa59 SWAP1
0xa5a DUP2
0xa5b MSTORE
0xa5c PUSH1 0x40
0xa5e DUP1
0xa5f DUP4
0xa60 SHA3
0xa61 DUP1
0xa62 SLOAD
0xa63 PUSH1 0x1
0xa65 PUSH1 0xa0
0xa67 PUSH1 0x2
0xa69 EXP
0xa6a SUB
0xa6b DUP8
0xa6c AND
0xa6d PUSH1 0x1
0xa6f PUSH1 0xa0
0xa71 PUSH1 0x2
0xa73 EXP
0xa74 SUB
0xa75 NOT
0xa76 SWAP2
0xa77 DUP3
0xa78 AND
0xa79 DUP2
0xa7a OR
0xa7b SWAP1
0xa7c SWAP3
0xa7d SSTORE
0xa7e DUP2
0xa7f DUP6
0xa80 MSTORE
0xa81 PUSH1 0x7
0xa83 SWAP1
0xa84 SWAP4
0xa85 MSTORE
0xa86 SWAP1
0xa87 DUP4
0xa88 SHA3
0xa89 DUP1
0xa8a SLOAD
0xa8b DUP4
0xa8c AND
0xa8d SWAP1
0xa8e SWAP5
0xa8f OR
0xa90 SWAP1
0xa91 SWAP4
0xa92 SSTORE
0xa93 PUSH1 0x8
0xa95 DUP1
0xa96 SLOAD
0xa97 PUSH1 0x1
0xa99 DUP2
0xa9a ADD
0xa9b DUP3
0xa9c SSTORE
0xa9d SWAP3
0xa9e MSTORE
0xa9f PUSH32 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3
0xac0 SWAP1
0xac1 SWAP2
0xac2 ADD
0xac3 DUP1
0xac4 SLOAD
0xac5 SWAP1
0xac6 SWAP2
0xac7 AND
0xac8 SWAP1
0xac9 SWAP2
0xaca OR
0xacb SWAP1
0xacc SSTORE
0xacd SWAP1
0xace POP
0xacf PUSH1 0x40
0xad1 DUP1
0xad2 MLOAD
0xad3 CALLER
0xad4 DUP2
0xad5 MSTORE
0xad6 PUSH1 0x1
0xad8 PUSH1 0xa0
0xada PUSH1 0x2
0xadc EXP
0xadd SUB
0xade DUP4
0xadf AND
0xae0 PUSH1 0x20
0xae2 DUP3
0xae3 ADD
0xae4 MSTORE
0xae5 PUSH1 0x1
0xae7 DUP2
0xae8 DUP4
0xae9 ADD
0xaea MSTORE
0xaeb SWAP1
0xaec MLOAD
0xaed PUSH32 0x7236594322aab90f407967e6828be3ead286c47eb670fb55cf27a16189dc64f0
0xb0e SWAP2
0xb0f DUP2
0xb10 SWAP1
0xb11 SUB
0xb12 PUSH1 0x60
0xb14 ADD
0xb15 SWAP1
0xb16 LOG1
0xb17 DUP1
0xb18 SWAP2
0xb19 POP
0xb1a PUSH2 0xb94
0xb1d JUMP
---
0xa4c: JUMPDEST 
0xa4e: V927 = M[V920]
0xa4f: V928 = CALLER
0xa50: V929 = 0x0
0xa54: M[0x0] = V928
0xa55: V930 = 0x6
0xa57: V931 = 0x20
0xa5b: M[0x20] = 0x6
0xa5c: V932 = 0x40
0xa60: V933 = SHA3 0x0 0x40
0xa62: V934 = S[V933]
0xa63: V935 = 0x1
0xa65: V936 = 0xa0
0xa67: V937 = 0x2
0xa69: V938 = EXP 0x2 0xa0
0xa6a: V939 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6c: V940 = AND V927 0xffffffffffffffffffffffffffffffffffffffff
0xa6d: V941 = 0x1
0xa6f: V942 = 0xa0
0xa71: V943 = 0x2
0xa73: V944 = EXP 0x2 0xa0
0xa74: V945 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa75: V946 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa78: V947 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V934
0xa7a: V948 = OR V940 V947
0xa7d: S[V933] = V948
0xa80: M[0x0] = V940
0xa81: V949 = 0x7
0xa85: M[0x20] = 0x7
0xa88: V950 = SHA3 0x0 0x40
0xa8a: V951 = S[V950]
0xa8c: V952 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V951
0xa8f: V953 = OR V928 V952
0xa92: S[V950] = V953
0xa93: V954 = 0x8
0xa96: V955 = S[0x8]
0xa97: V956 = 0x1
0xa9a: V957 = ADD V955 0x1
0xa9c: S[0x8] = V957
0xa9e: M[0x0] = 0x8
0xa9f: V958 = 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3
0xac2: V959 = ADD V955 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3
0xac4: V960 = S[V959]
0xac7: V961 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V960
0xaca: V962 = OR V940 V961
0xacc: S[V959] = V962
0xacf: V963 = 0x40
0xad2: V964 = M[0x40]
0xad3: V965 = CALLER
0xad5: M[V964] = V965
0xad6: V966 = 0x1
0xad8: V967 = 0xa0
0xada: V968 = 0x2
0xadc: V969 = EXP 0x2 0xa0
0xadd: V970 = SUB 0x10000000000000000000000000000000000000000 0x1
0xadf: V971 = AND V927 0xffffffffffffffffffffffffffffffffffffffff
0xae0: V972 = 0x20
0xae3: V973 = ADD V964 0x20
0xae4: M[V973] = V971
0xae5: V974 = 0x1
0xae9: V975 = ADD 0x40 V964
0xaea: M[V975] = 0x1
0xaec: V976 = M[0x40]
0xaed: V977 = 0x7236594322aab90f407967e6828be3ead286c47eb670fb55cf27a16189dc64f0
0xb11: V978 = SUB V964 V976
0xb12: V979 = 0x60
0xb14: V980 = ADD 0x60 V978
0xb16: LOG V976 V980 0x7236594322aab90f407967e6828be3ead286c47eb670fb55cf27a16189dc64f0
0xb1a: V981 = 0xb94
0xb1d: JUMP 0xb94
---
Entry stack: [V13, 0x1ec, 0x0, 0x0, V920, V921]
Stack pops: 4
Stack additions: [V927, V927]
Exit stack: [V13, 0x1ec, V927, V927]

================================

Block 0xb1e
[0xb1e:0xb93]
---
Predecessors: [0x99b]
Successors: [0xb94]
---
0xb1e JUMPDEST
0xb1f CALLER
0xb20 PUSH1 0x0
0xb22 DUP2
0xb23 DUP2
0xb24 MSTORE
0xb25 PUSH1 0x6
0xb27 PUSH1 0x20
0xb29 SWAP1
0xb2a DUP2
0xb2b MSTORE
0xb2c PUSH1 0x40
0xb2e DUP1
0xb2f DUP4
0xb30 SHA3
0xb31 SLOAD
0xb32 DUP2
0xb33 MLOAD
0xb34 SWAP5
0xb35 DUP6
0xb36 MSTORE
0xb37 PUSH1 0x1
0xb39 PUSH1 0xa0
0xb3b PUSH1 0x2
0xb3d EXP
0xb3e SUB
0xb3f AND
0xb40 SWAP2
0xb41 DUP5
0xb42 ADD
0xb43 SWAP2
0xb44 SWAP1
0xb45 SWAP2
0xb46 MSTORE
0xb47 DUP3
0xb48 DUP2
0xb49 ADD
0xb4a SWAP2
0xb4b SWAP1
0xb4c SWAP2
0xb4d MSTORE
0xb4e MLOAD
0xb4f PUSH32 0x7236594322aab90f407967e6828be3ead286c47eb670fb55cf27a16189dc64f0
0xb70 SWAP2
0xb71 DUP2
0xb72 SWAP1
0xb73 SUB
0xb74 PUSH1 0x60
0xb76 ADD
0xb77 SWAP1
0xb78 LOG1
0xb79 CALLER
0xb7a PUSH1 0x0
0xb7c SWAP1
0xb7d DUP2
0xb7e MSTORE
0xb7f PUSH1 0x6
0xb81 PUSH1 0x20
0xb83 MSTORE
0xb84 PUSH1 0x40
0xb86 SWAP1
0xb87 SHA3
0xb88 SLOAD
0xb89 PUSH1 0x1
0xb8b PUSH1 0xa0
0xb8d PUSH1 0x2
0xb8f EXP
0xb90 SUB
0xb91 AND
0xb92 SWAP2
0xb93 POP
---
0xb1e: JUMPDEST 
0xb1f: V982 = CALLER
0xb20: V983 = 0x0
0xb24: M[0x0] = V982
0xb25: V984 = 0x6
0xb27: V985 = 0x20
0xb2b: M[0x20] = 0x6
0xb2c: V986 = 0x40
0xb30: V987 = SHA3 0x0 0x40
0xb31: V988 = S[V987]
0xb33: V989 = M[0x40]
0xb36: M[V989] = V982
0xb37: V990 = 0x1
0xb39: V991 = 0xa0
0xb3b: V992 = 0x2
0xb3d: V993 = EXP 0x2 0xa0
0xb3e: V994 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3f: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V988
0xb42: V996 = ADD V989 0x20
0xb46: M[V996] = V995
0xb49: V997 = ADD 0x40 V989
0xb4d: M[V997] = 0x0
0xb4e: V998 = M[0x40]
0xb4f: V999 = 0x7236594322aab90f407967e6828be3ead286c47eb670fb55cf27a16189dc64f0
0xb73: V1000 = SUB V989 V998
0xb74: V1001 = 0x60
0xb76: V1002 = ADD 0x60 V1000
0xb78: LOG V998 V1002 0x7236594322aab90f407967e6828be3ead286c47eb670fb55cf27a16189dc64f0
0xb79: V1003 = CALLER
0xb7a: V1004 = 0x0
0xb7e: M[0x0] = V1003
0xb7f: V1005 = 0x6
0xb81: V1006 = 0x20
0xb83: M[0x20] = 0x6
0xb84: V1007 = 0x40
0xb87: V1008 = SHA3 0x0 0x40
0xb88: V1009 = S[V1008]
0xb89: V1010 = 0x1
0xb8b: V1011 = 0xa0
0xb8d: V1012 = 0x2
0xb8f: V1013 = EXP 0x2 0xa0
0xb90: V1014 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb91: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff V1009
---
Entry stack: [V13, 0x1ec, 0x0, 0x0]
Stack pops: 2
Stack additions: [V1015, S0]
Exit stack: [V13, 0x1ec, V1015, 0x0]

================================

Block 0xb94
[0xb94:0xb97]
---
Predecessors: [0xa4c, 0xb1e]
Successors: [0x1ec]
---
0xb94 JUMPDEST
0xb95 POP
0xb96 SWAP1
0xb97 JUMP
---
0xb94: JUMPDEST 
0xb97: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V13, S1]

================================

Block 0xb98
[0xb98:0xbb2]
---
Predecessors: [0x395]
Successors: [0x1ec]
---
0xb98 JUMPDEST
0xb99 PUSH1 0x7
0xb9b PUSH1 0x20
0xb9d MSTORE
0xb9e PUSH1 0x0
0xba0 SWAP1
0xba1 DUP2
0xba2 MSTORE
0xba3 PUSH1 0x40
0xba5 SWAP1
0xba6 SHA3
0xba7 SLOAD
0xba8 PUSH1 0x1
0xbaa PUSH1 0xa0
0xbac PUSH1 0x2
0xbae EXP
0xbaf SUB
0xbb0 AND
0xbb1 DUP2
0xbb2 JUMP
---
0xb98: JUMPDEST 
0xb99: V1016 = 0x7
0xb9b: V1017 = 0x20
0xb9d: M[0x20] = 0x7
0xb9e: V1018 = 0x0
0xba2: M[0x0] = V300
0xba3: V1019 = 0x40
0xba6: V1020 = SHA3 0x0 0x40
0xba7: V1021 = S[V1020]
0xba8: V1022 = 0x1
0xbaa: V1023 = 0xa0
0xbac: V1024 = 0x2
0xbae: V1025 = EXP 0x2 0xa0
0xbaf: V1026 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb0: V1027 = AND 0xffffffffffffffffffffffffffffffffffffffff V1021
0xbb2: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, V300]
Stack pops: 2
Stack additions: [S1, V1027]
Exit stack: [V13, 0x1ec, V1027]

================================

Block 0xbb3
[0xbb3:0xbb8]
---
Predecessors: [0x3b6]
Successors: [0x23e]
---
0xbb3 JUMPDEST
0xbb4 PUSH1 0x9
0xbb6 SLOAD
0xbb7 DUP2
0xbb8 JUMP
---
0xbb3: JUMPDEST 
0xbb4: V1028 = 0x9
0xbb6: V1029 = S[0x9]
0xbb8: JUMP 0x23e
---
Entry stack: [V13, 0x23e]
Stack pops: 1
Stack additions: [S0, V1029]
Exit stack: [V13, 0x23e, V1029]

================================

Block 0xbb9
[0xbb9:0xbd3]
---
Predecessors: [0x3cb]
Successors: [0x1ec]
---
0xbb9 JUMPDEST
0xbba PUSH1 0x3
0xbbc PUSH1 0x20
0xbbe MSTORE
0xbbf PUSH1 0x0
0xbc1 SWAP1
0xbc2 DUP2
0xbc3 MSTORE
0xbc4 PUSH1 0x40
0xbc6 SWAP1
0xbc7 SHA3
0xbc8 SLOAD
0xbc9 PUSH1 0x1
0xbcb PUSH1 0xa0
0xbcd PUSH1 0x2
0xbcf EXP
0xbd0 SUB
0xbd1 AND
0xbd2 DUP2
0xbd3 JUMP
---
0xbb9: JUMPDEST 
0xbba: V1030 = 0x3
0xbbc: V1031 = 0x20
0xbbe: M[0x20] = 0x3
0xbbf: V1032 = 0x0
0xbc3: M[0x0] = V316
0xbc4: V1033 = 0x40
0xbc7: V1034 = SHA3 0x0 0x40
0xbc8: V1035 = S[V1034]
0xbc9: V1036 = 0x1
0xbcb: V1037 = 0xa0
0xbcd: V1038 = 0x2
0xbcf: V1039 = EXP 0x2 0xa0
0xbd0: V1040 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd1: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff V1035
0xbd3: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, V316]
Stack pops: 2
Stack additions: [S1, V1041]
Exit stack: [V13, 0x1ec, V1041]

================================

Block 0xbd4
[0xbd4:0xbe5]
---
Predecessors: [0x3e6]
Successors: [0x23e]
---
0xbd4 JUMPDEST
0xbd5 PUSH1 0x0
0xbd7 SWAP1
0xbd8 DUP2
0xbd9 MSTORE
0xbda PUSH1 0xd
0xbdc PUSH1 0x20
0xbde MSTORE
0xbdf PUSH1 0x40
0xbe1 SWAP1
0xbe2 SHA3
0xbe3 SLOAD
0xbe4 SWAP1
0xbe5 JUMP
---
0xbd4: JUMPDEST 
0xbd5: V1042 = 0x0
0xbd9: M[0x0] = V324
0xbda: V1043 = 0xd
0xbdc: V1044 = 0x20
0xbde: M[0x20] = 0xd
0xbdf: V1045 = 0x40
0xbe2: V1046 = SHA3 0x0 0x40
0xbe3: V1047 = S[V1046]
0xbe5: JUMP 0x23e
---
Entry stack: [V13, 0x23e, V324]
Stack pops: 2
Stack additions: [V1047]
Exit stack: [V13, V1047]

================================

Block 0xbe6
[0xbe6:0xbf4]
---
Predecessors: [0x3fe]
Successors: [0x1ec]
---
0xbe6 JUMPDEST
0xbe7 PUSH1 0x2
0xbe9 SLOAD
0xbea PUSH1 0x1
0xbec PUSH1 0xa0
0xbee PUSH1 0x2
0xbf0 EXP
0xbf1 SUB
0xbf2 AND
0xbf3 DUP2
0xbf4 JUMP
---
0xbe6: JUMPDEST 
0xbe7: V1048 = 0x2
0xbe9: V1049 = S[0x2]
0xbea: V1050 = 0x1
0xbec: V1051 = 0xa0
0xbee: V1052 = 0x2
0xbf0: V1053 = EXP 0x2 0xa0
0xbf1: V1054 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf2: V1055 = AND 0xffffffffffffffffffffffffffffffffffffffff V1049
0xbf4: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec]
Stack pops: 1
Stack additions: [S0, V1055]
Exit stack: [V13, 0x1ec, V1055]

================================

Block 0xbf5
[0xbf5:0xc12]
---
Predecessors: [0x413]
Successors: [0x1ec]
---
0xbf5 JUMPDEST
0xbf6 PUSH1 0xff
0xbf8 AND
0xbf9 PUSH1 0x0
0xbfb SWAP1
0xbfc DUP2
0xbfd MSTORE
0xbfe PUSH1 0x5
0xc00 PUSH1 0x20
0xc02 MSTORE
0xc03 PUSH1 0x40
0xc05 SWAP1
0xc06 SHA3
0xc07 SLOAD
0xc08 PUSH1 0x1
0xc0a PUSH1 0xa0
0xc0c PUSH1 0x2
0xc0e EXP
0xc0f SUB
0xc10 AND
0xc11 SWAP1
0xc12 JUMP
---
0xbf5: JUMPDEST 
0xbf6: V1056 = 0xff
0xbf8: V1057 = AND 0xff V340
0xbf9: V1058 = 0x0
0xbfd: M[0x0] = V1057
0xbfe: V1059 = 0x5
0xc00: V1060 = 0x20
0xc02: M[0x20] = 0x5
0xc03: V1061 = 0x40
0xc06: V1062 = SHA3 0x0 0x40
0xc07: V1063 = S[V1062]
0xc08: V1064 = 0x1
0xc0a: V1065 = 0xa0
0xc0c: V1066 = 0x2
0xc0e: V1067 = EXP 0x2 0xa0
0xc0f: V1068 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc10: V1069 = AND 0xffffffffffffffffffffffffffffffffffffffff V1063
0xc12: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, V340]
Stack pops: 2
Stack additions: [V1069]
Exit stack: [V13, V1069]

================================

Block 0xc13
[0xc13:0xc2b]
---
Predecessors: [0x42e]
Successors: [0xc2c, 0xc7b]
---
0xc13 JUMPDEST
0xc14 CALLER
0xc15 PUSH1 0x0
0xc17 SWAP1
0xc18 DUP2
0xc19 MSTORE
0xc1a PUSH1 0x4
0xc1c PUSH1 0x20
0xc1e MSTORE
0xc1f PUSH1 0x40
0xc21 DUP2
0xc22 SHA3
0xc23 SLOAD
0xc24 PUSH1 0xff
0xc26 AND
0xc27 GT
0xc28 PUSH2 0xc7b
0xc2b JUMPI
---
0xc13: JUMPDEST 
0xc14: V1070 = CALLER
0xc15: V1071 = 0x0
0xc19: M[0x0] = V1070
0xc1a: V1072 = 0x4
0xc1c: V1073 = 0x20
0xc1e: M[0x20] = 0x4
0xc1f: V1074 = 0x40
0xc22: V1075 = SHA3 0x0 0x40
0xc23: V1076 = S[V1075]
0xc24: V1077 = 0xff
0xc26: V1078 = AND 0xff V1076
0xc27: V1079 = GT V1078 0x0
0xc28: V1080 = 0xc7b
0xc2b: JUMPI 0xc7b V1079
---
Entry stack: [V13, 0x150, V354, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V354, V356]

================================

Block 0xc2c
[0xc2c:0xc7a]
---
Predecessors: [0xc13]
Successors: []
---
0xc2c PUSH1 0x40
0xc2e DUP1
0xc2f MLOAD
0xc30 PUSH1 0xe5
0xc32 PUSH1 0x2
0xc34 EXP
0xc35 PUSH3 0x461bcd
0xc39 MUL
0xc3a DUP2
0xc3b MSTORE
0xc3c PUSH1 0x20
0xc3e PUSH1 0x4
0xc40 DUP3
0xc41 ADD
0xc42 MSTORE
0xc43 PUSH1 0x1
0xc45 PUSH1 0x24
0xc47 DUP3
0xc48 ADD
0xc49 MSTORE
0xc4a PUSH32 0x3900000000000000000000000000000000000000000000000000000000000000
0xc6b PUSH1 0x44
0xc6d DUP3
0xc6e ADD
0xc6f MSTORE
0xc70 SWAP1
0xc71 MLOAD
0xc72 SWAP1
0xc73 DUP2
0xc74 SWAP1
0xc75 SUB
0xc76 PUSH1 0x64
0xc78 ADD
0xc79 SWAP1
0xc7a REVERT
---
0xc2c: V1081 = 0x40
0xc2f: V1082 = M[0x40]
0xc30: V1083 = 0xe5
0xc32: V1084 = 0x2
0xc34: V1085 = EXP 0x2 0xe5
0xc35: V1086 = 0x461bcd
0xc39: V1087 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xc3b: M[V1082] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc3c: V1088 = 0x20
0xc3e: V1089 = 0x4
0xc41: V1090 = ADD V1082 0x4
0xc42: M[V1090] = 0x20
0xc43: V1091 = 0x1
0xc45: V1092 = 0x24
0xc48: V1093 = ADD V1082 0x24
0xc49: M[V1093] = 0x1
0xc4a: V1094 = 0x3900000000000000000000000000000000000000000000000000000000000000
0xc6b: V1095 = 0x44
0xc6e: V1096 = ADD V1082 0x44
0xc6f: M[V1096] = 0x3900000000000000000000000000000000000000000000000000000000000000
0xc71: V1097 = M[0x40]
0xc75: V1098 = SUB V1082 V1097
0xc76: V1099 = 0x64
0xc78: V1100 = ADD 0x64 V1098
0xc7a: REVERT V1097 V1100
---
Entry stack: [V13, 0x150, V354, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V354, V356]

================================

Block 0xc7b
[0xc7b:0xc82]
---
Predecessors: [0xc13]
Successors: [0xc83, 0xc87]
---
0xc7b JUMPDEST
0xc7c DUP1
0xc7d ISZERO
0xc7e ISZERO
0xc7f PUSH2 0xc87
0xc82 JUMPI
---
0xc7b: JUMPDEST 
0xc7d: V1101 = ISZERO V356
0xc7e: V1102 = ISZERO V1101
0xc7f: V1103 = 0xc87
0xc82: JUMPI 0xc87 V1102
---
Entry stack: [V13, 0x150, V354, V356]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x150, V354, V356]

================================

Block 0xc83
[0xc83:0xc86]
---
Predecessors: [0xc7b]
Successors: [0xcdf]
---
0xc83 PUSH2 0xcdf
0xc86 JUMP
---
0xc83: V1104 = 0xcdf
0xc86: JUMP 0xcdf
---
Entry stack: [V13, 0x150, V354, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V354, V356]

================================

Block 0xc87
[0xc87:0xcc0]
---
Predecessors: [0xc7b]
Successors: [0xcc1, 0xcc5]
---
0xc87 JUMPDEST
0xc88 DUP2
0xc89 PUSH1 0x1
0xc8b PUSH1 0xa0
0xc8d PUSH1 0x2
0xc8f EXP
0xc90 SUB
0xc91 AND
0xc92 PUSH4 0x5b7ce8c9
0xc97 DUP3
0xc98 PUSH1 0x40
0xc9a MLOAD
0xc9b DUP3
0xc9c PUSH4 0xffffffff
0xca1 AND
0xca2 PUSH1 0xe0
0xca4 PUSH1 0x2
0xca6 EXP
0xca7 MUL
0xca8 DUP2
0xca9 MSTORE
0xcaa PUSH1 0x4
0xcac ADD
0xcad PUSH1 0x0
0xcaf PUSH1 0x40
0xcb1 MLOAD
0xcb2 DUP1
0xcb3 DUP4
0xcb4 SUB
0xcb5 DUP2
0xcb6 DUP6
0xcb7 DUP9
0xcb8 DUP1
0xcb9 EXTCODESIZE
0xcba ISZERO
0xcbb DUP1
0xcbc ISZERO
0xcbd PUSH2 0xcc5
0xcc0 JUMPI
---
0xc87: JUMPDEST 
0xc89: V1105 = 0x1
0xc8b: V1106 = 0xa0
0xc8d: V1107 = 0x2
0xc8f: V1108 = EXP 0x2 0xa0
0xc90: V1109 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc91: V1110 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0xc92: V1111 = 0x5b7ce8c9
0xc98: V1112 = 0x40
0xc9a: V1113 = M[0x40]
0xc9c: V1114 = 0xffffffff
0xca1: V1115 = AND 0xffffffff 0x5b7ce8c9
0xca2: V1116 = 0xe0
0xca4: V1117 = 0x2
0xca6: V1118 = EXP 0x2 0xe0
0xca7: V1119 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x5b7ce8c9
0xca9: M[V1113] = 0x5b7ce8c900000000000000000000000000000000000000000000000000000000
0xcaa: V1120 = 0x4
0xcac: V1121 = ADD 0x4 V1113
0xcad: V1122 = 0x0
0xcaf: V1123 = 0x40
0xcb1: V1124 = M[0x40]
0xcb4: V1125 = SUB V1121 V1124
0xcb9: V1126 = EXTCODESIZE V1110
0xcba: V1127 = ISZERO V1126
0xcbc: V1128 = ISZERO V1127
0xcbd: V1129 = 0xcc5
0xcc0: JUMPI 0xcc5 V1128
---
Entry stack: [V13, 0x150, V354, V356]
Stack pops: 2
Stack additions: [S1, S0, V1110, 0x5b7ce8c9, S0, V1121, 0x0, V1124, V1125, V1124, S0, V1110, V1127]
Exit stack: [V13, 0x150, V354, V356, V1110, 0x5b7ce8c9, V356, V1121, 0x0, V1124, V1125, V1124, V356, V1110, V1127]

================================

Block 0xcc1
[0xcc1:0xcc4]
---
Predecessors: [0xc87]
Successors: []
---
0xcc1 PUSH1 0x0
0xcc3 DUP1
0xcc4 REVERT
---
0xcc1: V1130 = 0x0
0xcc4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x150, V354, V356, V1110, 0x5b7ce8c9, V356, V1121, 0x0, V1124, V1125, V1124, V356, V1110, V1127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V354, V356, V1110, 0x5b7ce8c9, V356, V1121, 0x0, V1124, V1125, V1124, V356, V1110, V1127]

================================

Block 0xcc5
[0xcc5:0xccf]
---
Predecessors: [0xc87]
Successors: [0xcd0, 0xcd9]
---
0xcc5 JUMPDEST
0xcc6 POP
0xcc7 GAS
0xcc8 CALL
0xcc9 ISZERO
0xcca DUP1
0xccb ISZERO
0xccc PUSH2 0xcd9
0xccf JUMPI
---
0xcc5: JUMPDEST 
0xcc7: V1131 = GAS
0xcc8: V1132 = CALL V1131 V1110 V356 V1124 V1125 V1124 0x0
0xcc9: V1133 = ISZERO V1132
0xccb: V1134 = ISZERO V1133
0xccc: V1135 = 0xcd9
0xccf: JUMPI 0xcd9 V1134
---
Entry stack: [V13, 0x150, V354, V356, V1110, 0x5b7ce8c9, V356, V1121, 0x0, V1124, V1125, V1124, V356, V1110, V1127]
Stack pops: 7
Stack additions: [V1133]
Exit stack: [V13, 0x150, V354, V356, V1110, 0x5b7ce8c9, V356, V1121, V1133]

================================

Block 0xcd0
[0xcd0:0xcd8]
---
Predecessors: [0xcc5]
Successors: []
---
0xcd0 RETURNDATASIZE
0xcd1 PUSH1 0x0
0xcd3 DUP1
0xcd4 RETURNDATACOPY
0xcd5 RETURNDATASIZE
0xcd6 PUSH1 0x0
0xcd8 REVERT
---
0xcd0: V1136 = RETURNDATASIZE
0xcd1: V1137 = 0x0
0xcd4: RETURNDATACOPY 0x0 0x0 V1136
0xcd5: V1138 = RETURNDATASIZE
0xcd6: V1139 = 0x0
0xcd8: REVERT 0x0 V1138
---
Entry stack: [V13, 0x150, V354, V356, V1110, 0x5b7ce8c9, V356, V1121, V1133]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V354, V356, V1110, 0x5b7ce8c9, V356, V1121, V1133]

================================

Block 0xcd9
[0xcd9:0xcde]
---
Predecessors: [0xcc5, 0xdee]
Successors: [0xcdf]
---
0xcd9 JUMPDEST
0xcda POP
0xcdb POP
0xcdc POP
0xcdd POP
0xcde POP
---
0xcd9: JUMPDEST 
---
Entry stack: [V13, 0x150, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x150, S6, S5]

================================

Block 0xcdf
[0xcdf:0xce2]
---
Predecessors: [0xc83, 0xcd9]
Successors: [0x150]
---
0xcdf JUMPDEST
0xce0 POP
0xce1 POP
0xce2 JUMP
---
0xcdf: JUMPDEST 
0xce2: JUMP 0x150
---
Entry stack: [V13, 0x150, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0xce3
[0xce3:0xcf6]
---
Predecessors: [0x452]
Successors: [0xcf7, 0xd46]
---
0xce3 JUMPDEST
0xce4 PUSH1 0x0
0xce6 DUP1
0xce7 SLOAD
0xce8 PUSH1 0x1
0xcea PUSH1 0xa0
0xcec PUSH1 0x2
0xcee EXP
0xcef SUB
0xcf0 AND
0xcf1 CALLER
0xcf2 EQ
0xcf3 PUSH2 0xd46
0xcf6 JUMPI
---
0xce3: JUMPDEST 
0xce4: V1140 = 0x0
0xce7: V1141 = S[0x0]
0xce8: V1142 = 0x1
0xcea: V1143 = 0xa0
0xcec: V1144 = 0x2
0xcee: V1145 = EXP 0x2 0xa0
0xcef: V1146 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf0: V1147 = AND 0xffffffffffffffffffffffffffffffffffffffff V1141
0xcf1: V1148 = CALLER
0xcf2: V1149 = EQ V1148 V1147
0xcf3: V1150 = 0xd46
0xcf6: JUMPI 0xd46 V1149
---
Entry stack: [V13, 0x150, V370, V372, V375, V377, V380, V382]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, 0x0]

================================

Block 0xcf7
[0xcf7:0xd45]
---
Predecessors: [0xce3]
Successors: []
---
0xcf7 PUSH1 0x40
0xcf9 DUP1
0xcfa MLOAD
0xcfb PUSH1 0xe5
0xcfd PUSH1 0x2
0xcff EXP
0xd00 PUSH3 0x461bcd
0xd04 MUL
0xd05 DUP2
0xd06 MSTORE
0xd07 PUSH1 0x20
0xd09 PUSH1 0x4
0xd0b DUP3
0xd0c ADD
0xd0d MSTORE
0xd0e PUSH1 0x1
0xd10 PUSH1 0x24
0xd12 DUP3
0xd13 ADD
0xd14 MSTORE
0xd15 PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000
0xd36 PUSH1 0x44
0xd38 DUP3
0xd39 ADD
0xd3a MSTORE
0xd3b SWAP1
0xd3c MLOAD
0xd3d SWAP1
0xd3e DUP2
0xd3f SWAP1
0xd40 SUB
0xd41 PUSH1 0x64
0xd43 ADD
0xd44 SWAP1
0xd45 REVERT
---
0xcf7: V1151 = 0x40
0xcfa: V1152 = M[0x40]
0xcfb: V1153 = 0xe5
0xcfd: V1154 = 0x2
0xcff: V1155 = EXP 0x2 0xe5
0xd00: V1156 = 0x461bcd
0xd04: V1157 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xd06: M[V1152] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd07: V1158 = 0x20
0xd09: V1159 = 0x4
0xd0c: V1160 = ADD V1152 0x4
0xd0d: M[V1160] = 0x20
0xd0e: V1161 = 0x1
0xd10: V1162 = 0x24
0xd13: V1163 = ADD V1152 0x24
0xd14: M[V1163] = 0x1
0xd15: V1164 = 0x3100000000000000000000000000000000000000000000000000000000000000
0xd36: V1165 = 0x44
0xd39: V1166 = ADD V1152 0x44
0xd3a: M[V1166] = 0x3100000000000000000000000000000000000000000000000000000000000000
0xd3c: V1167 = M[0x40]
0xd40: V1168 = SUB V1152 V1167
0xd41: V1169 = 0x64
0xd43: V1170 = ADD 0x64 V1168
0xd45: REVERT V1167 V1170
---
Entry stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, 0x0]

================================

Block 0xd46
[0xd46:0xdd5]
---
Predecessors: [0xce3]
Successors: [0xdd6, 0xdda]
---
0xd46 JUMPDEST
0xd47 DUP7
0xd48 SWAP1
0xd49 POP
0xd4a DUP1
0xd4b PUSH1 0x1
0xd4d PUSH1 0xa0
0xd4f PUSH1 0x2
0xd51 EXP
0xd52 SUB
0xd53 AND
0xd54 PUSH4 0xca6eb973
0xd59 DUP8
0xd5a DUP8
0xd5b DUP8
0xd5c DUP8
0xd5d DUP8
0xd5e PUSH1 0x40
0xd60 MLOAD
0xd61 DUP7
0xd62 PUSH4 0xffffffff
0xd67 AND
0xd68 PUSH1 0xe0
0xd6a PUSH1 0x2
0xd6c EXP
0xd6d MUL
0xd6e DUP2
0xd6f MSTORE
0xd70 PUSH1 0x4
0xd72 ADD
0xd73 DUP1
0xd74 DUP7
0xd75 DUP2
0xd76 MSTORE
0xd77 PUSH1 0x20
0xd79 ADD
0xd7a DUP1
0xd7b PUSH1 0x20
0xd7d ADD
0xd7e DUP1
0xd7f PUSH1 0x20
0xd81 ADD
0xd82 DUP4
0xd83 DUP2
0xd84 SUB
0xd85 DUP4
0xd86 MSTORE
0xd87 DUP8
0xd88 DUP8
0xd89 DUP3
0xd8a DUP2
0xd8b DUP2
0xd8c MSTORE
0xd8d PUSH1 0x20
0xd8f ADD
0xd90 SWAP3
0xd91 POP
0xd92 PUSH1 0x20
0xd94 MUL
0xd95 DUP1
0xd96 DUP3
0xd97 DUP5
0xd98 CALLDATACOPY
0xd99 SWAP1
0xd9a SWAP2
0xd9b ADD
0xd9c DUP5
0xd9d DUP2
0xd9e SUB
0xd9f DUP4
0xda0 MSTORE
0xda1 DUP6
0xda2 DUP2
0xda3 MSTORE
0xda4 PUSH1 0x20
0xda6 SWAP1
0xda7 DUP2
0xda8 ADD
0xda9 SWAP2
0xdaa POP
0xdab DUP7
0xdac SWAP1
0xdad DUP7
0xdae MUL
0xdaf DUP1
0xdb0 DUP3
0xdb1 DUP5
0xdb2 CALLDATACOPY
0xdb3 DUP3
0xdb4 ADD
0xdb5 SWAP2
0xdb6 POP
0xdb7 POP
0xdb8 SWAP8
0xdb9 POP
0xdba POP
0xdbb POP
0xdbc POP
0xdbd POP
0xdbe POP
0xdbf POP
0xdc0 POP
0xdc1 PUSH1 0x0
0xdc3 PUSH1 0x40
0xdc5 MLOAD
0xdc6 DUP1
0xdc7 DUP4
0xdc8 SUB
0xdc9 DUP2
0xdca PUSH1 0x0
0xdcc DUP8
0xdcd DUP1
0xdce EXTCODESIZE
0xdcf ISZERO
0xdd0 DUP1
0xdd1 ISZERO
0xdd2 PUSH2 0xdda
0xdd5 JUMPI
---
0xd46: JUMPDEST 
0xd4b: V1171 = 0x1
0xd4d: V1172 = 0xa0
0xd4f: V1173 = 0x2
0xd51: V1174 = EXP 0x2 0xa0
0xd52: V1175 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd53: V1176 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0xd54: V1177 = 0xca6eb973
0xd5e: V1178 = 0x40
0xd60: V1179 = M[0x40]
0xd62: V1180 = 0xffffffff
0xd67: V1181 = AND 0xffffffff 0xca6eb973
0xd68: V1182 = 0xe0
0xd6a: V1183 = 0x2
0xd6c: V1184 = EXP 0x2 0xe0
0xd6d: V1185 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xca6eb973
0xd6f: M[V1179] = 0xca6eb97300000000000000000000000000000000000000000000000000000000
0xd70: V1186 = 0x4
0xd72: V1187 = ADD 0x4 V1179
0xd76: M[V1187] = V372
0xd77: V1188 = 0x20
0xd79: V1189 = ADD 0x20 V1187
0xd7b: V1190 = 0x20
0xd7d: V1191 = ADD 0x20 V1189
0xd7f: V1192 = 0x20
0xd81: V1193 = ADD 0x20 V1191
0xd84: V1194 = SUB V1193 V1187
0xd86: M[V1189] = V1194
0xd8c: M[V1193] = V377
0xd8d: V1195 = 0x20
0xd8f: V1196 = ADD 0x20 V1193
0xd92: V1197 = 0x20
0xd94: V1198 = MUL 0x20 V377
0xd98: CALLDATACOPY V1196 V375 V1198
0xd9b: V1199 = ADD V1196 V1198
0xd9e: V1200 = SUB V1199 V1187
0xda0: M[V1191] = V1200
0xda3: M[V1199] = V382
0xda4: V1201 = 0x20
0xda8: V1202 = ADD 0x20 V1199
0xdae: V1203 = MUL V382 0x20
0xdb2: CALLDATACOPY V1202 V380 V1203
0xdb4: V1204 = ADD V1202 V1203
0xdc1: V1205 = 0x0
0xdc3: V1206 = 0x40
0xdc5: V1207 = M[0x40]
0xdc8: V1208 = SUB V1204 V1207
0xdca: V1209 = 0x0
0xdce: V1210 = EXTCODESIZE V1176
0xdcf: V1211 = ISZERO V1210
0xdd1: V1212 = ISZERO V1211
0xdd2: V1213 = 0xdda
0xdd5: JUMPI 0xdda V1212
---
Entry stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S6, V1176, 0xca6eb973, V1204, 0x0, V1207, V1208, V1207, 0x0, V1176, V1211]
Exit stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370, V1176, 0xca6eb973, V1204, 0x0, V1207, V1208, V1207, 0x0, V1176, V1211]

================================

Block 0xdd6
[0xdd6:0xdd9]
---
Predecessors: [0xd46]
Successors: []
---
0xdd6 PUSH1 0x0
0xdd8 DUP1
0xdd9 REVERT
---
0xdd6: V1214 = 0x0
0xdd9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370, V1176, 0xca6eb973, V1204, 0x0, V1207, V1208, V1207, 0x0, V1176, V1211]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370, V1176, 0xca6eb973, V1204, 0x0, V1207, V1208, V1207, 0x0, V1176, V1211]

================================

Block 0xdda
[0xdda:0xde4]
---
Predecessors: [0xd46]
Successors: [0xde5, 0xdee]
---
0xdda JUMPDEST
0xddb POP
0xddc GAS
0xddd CALL
0xdde ISZERO
0xddf DUP1
0xde0 ISZERO
0xde1 PUSH2 0xdee
0xde4 JUMPI
---
0xdda: JUMPDEST 
0xddc: V1215 = GAS
0xddd: V1216 = CALL V1215 V1176 0x0 V1207 V1208 V1207 0x0
0xdde: V1217 = ISZERO V1216
0xde0: V1218 = ISZERO V1217
0xde1: V1219 = 0xdee
0xde4: JUMPI 0xdee V1218
---
Entry stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370, V1176, 0xca6eb973, V1204, 0x0, V1207, V1208, V1207, 0x0, V1176, V1211]
Stack pops: 7
Stack additions: [V1217]
Exit stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370, V1176, 0xca6eb973, V1204, V1217]

================================

Block 0xde5
[0xde5:0xded]
---
Predecessors: [0xdda]
Successors: []
---
0xde5 RETURNDATASIZE
0xde6 PUSH1 0x0
0xde8 DUP1
0xde9 RETURNDATACOPY
0xdea RETURNDATASIZE
0xdeb PUSH1 0x0
0xded REVERT
---
0xde5: V1220 = RETURNDATASIZE
0xde6: V1221 = 0x0
0xde9: RETURNDATACOPY 0x0 0x0 V1220
0xdea: V1222 = RETURNDATASIZE
0xdeb: V1223 = 0x0
0xded: REVERT 0x0 V1222
---
Entry stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370, V1176, 0xca6eb973, V1204, V1217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370, V1176, 0xca6eb973, V1204, V1217]

================================

Block 0xdee
[0xdee:0xdfb]
---
Predecessors: [0xdda]
Successors: [0xcd9, 0xdfc]
---
0xdee JUMPDEST
0xdef POP
0xdf0 POP
0xdf1 POP
0xdf2 POP
0xdf3 PUSH1 0x0
0xdf5 DUP7
0xdf6 SLT
0xdf7 ISZERO
0xdf8 PUSH2 0xcd9
0xdfb JUMPI
---
0xdee: JUMPDEST 
0xdf3: V1224 = 0x0
0xdf6: V1225 = SLT V372 0x0
0xdf7: V1226 = ISZERO V1225
0xdf8: V1227 = 0xcd9
0xdfb: JUMPI 0xcd9 V1226
---
Entry stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370, V1176, 0xca6eb973, V1204, V1217]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4]
Exit stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370]

================================

Block 0xdfc
[0xdfc:0xe0c]
---
Predecessors: [0xdee]
Successors: [0x150]
---
0xdfc PUSH1 0xa
0xdfe DUP1
0xdff SLOAD
0xe00 DUP8
0xe01 SWAP1
0xe02 SUB
0xe03 SWAP1
0xe04 SSTORE
0xe05 POP
0xe06 POP
0xe07 POP
0xe08 POP
0xe09 POP
0xe0a POP
0xe0b POP
0xe0c JUMP
---
0xdfc: V1228 = 0xa
0xdff: V1229 = S[0xa]
0xe02: V1230 = SUB V1229 V372
0xe04: S[0xa] = V1230
0xe0c: JUMP 0x150
---
Entry stack: [V13, 0x150, V370, V372, V375, V377, V380, V382, V370]
Stack pops: 8
Stack additions: []
Exit stack: [V13]

================================

Block 0xe0d
[0xe0d:0xe10]
---
Predecessors: [0x48f]
Successors: [0xe11]
---
0xe0d JUMPDEST
0xe0e PUSH1 0x0
0xe10 DUP1
---
0xe0d: JUMPDEST 
0xe0e: V1231 = 0x0
---
Entry stack: [V13, 0x150, V396]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x150, V396, 0x0, 0x0]

================================

Block 0xe11
[0xe11:0xe1b]
---
Predecessors: [0xe0d, 0xe4c]
Successors: [0xe1c, 0xe54]
---
0xe11 JUMPDEST
0xe12 PUSH1 0xc
0xe14 SLOAD
0xe15 DUP2
0xe16 LT
0xe17 ISZERO
0xe18 PUSH2 0xe54
0xe1b JUMPI
---
0xe11: JUMPDEST 
0xe12: V1232 = 0xc
0xe14: V1233 = S[0xc]
0xe16: V1234 = LT S0 V1233
0xe17: V1235 = ISZERO V1234
0xe18: V1236 = 0xe54
0xe1b: JUMPI 0xe54 V1235
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, S0]

================================

Block 0xe1c
[0xe1c:0xe2a]
---
Predecessors: [0xe11]
Successors: [0xe2b, 0xe2c]
---
0xe1c PUSH1 0xc
0xe1e DUP1
0xe1f SLOAD
0xe20 CALLER
0xe21 SWAP2
0xe22 SWAP1
0xe23 DUP4
0xe24 SWAP1
0xe25 DUP2
0xe26 LT
0xe27 PUSH2 0xe2c
0xe2a JUMPI
---
0xe1c: V1237 = 0xc
0xe1f: V1238 = S[0xc]
0xe20: V1239 = CALLER
0xe26: V1240 = LT S0 V1238
0xe27: V1241 = 0xe2c
0xe2a: JUMPI 0xe2c V1240
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0, V1239, 0xc, S0]
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, S0, V1239, 0xc, S0]

================================

Block 0xe2b
[0xe2b:0xe2b]
---
Predecessors: [0xe1c]
Successors: []
---
0xe2b INVALID
---
0xe2b: INVALID 
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S3, V1239, 0xc, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, S3, V1239, 0xc, S0]

================================

Block 0xe2c
[0xe2c:0xe47]
---
Predecessors: [0xe1c]
Successors: [0xe48, 0xe4c]
---
0xe2c JUMPDEST
0xe2d PUSH1 0x0
0xe2f SWAP2
0xe30 DUP3
0xe31 MSTORE
0xe32 PUSH1 0x20
0xe34 SWAP1
0xe35 SWAP2
0xe36 SHA3
0xe37 ADD
0xe38 SLOAD
0xe39 PUSH1 0x1
0xe3b PUSH1 0xa0
0xe3d PUSH1 0x2
0xe3f EXP
0xe40 SUB
0xe41 AND
0xe42 EQ
0xe43 ISZERO
0xe44 PUSH2 0xe4c
0xe47 JUMPI
---
0xe2c: JUMPDEST 
0xe2d: V1242 = 0x0
0xe31: M[0x0] = 0xc
0xe32: V1243 = 0x20
0xe36: V1244 = SHA3 0x0 0x20
0xe37: V1245 = ADD V1244 S0
0xe38: V1246 = S[V1245]
0xe39: V1247 = 0x1
0xe3b: V1248 = 0xa0
0xe3d: V1249 = 0x2
0xe3f: V1250 = EXP 0x2 0xa0
0xe40: V1251 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe41: V1252 = AND 0xffffffffffffffffffffffffffffffffffffffff V1246
0xe42: V1253 = EQ V1252 V1239
0xe43: V1254 = ISZERO V1253
0xe44: V1255 = 0xe4c
0xe47: JUMPI 0xe4c V1254
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S3, V1239, 0xc, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, S3]

================================

Block 0xe48
[0xe48:0xe4b]
---
Predecessors: [0xe2c]
Successors: [0xe4c]
---
0xe48 PUSH1 0x1
0xe4a SWAP2
0xe4b POP
---
0xe48: V1256 = 0x1
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V13, 0x150, V396, 0x1, S0]

================================

Block 0xe4c
[0xe4c:0xe53]
---
Predecessors: [0xe2c, 0xe48]
Successors: [0xe11]
---
0xe4c JUMPDEST
0xe4d PUSH1 0x1
0xe4f ADD
0xe50 PUSH2 0xe11
0xe53 JUMP
---
0xe4c: JUMPDEST 
0xe4d: V1257 = 0x1
0xe4f: V1258 = ADD 0x1 S0
0xe50: V1259 = 0xe11
0xe53: JUMP 0xe11
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [V1258]
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, V1258]

================================

Block 0xe54
[0xe54:0xe60]
---
Predecessors: [0xe11]
Successors: [0xe61, 0xe68]
---
0xe54 JUMPDEST
0xe55 PUSH1 0xc
0xe57 SLOAD
0xe58 PUSH1 0x0
0xe5a LT
0xe5b DUP1
0xe5c ISZERO
0xe5d PUSH2 0xe68
0xe60 JUMPI
---
0xe54: JUMPDEST 
0xe55: V1260 = 0xc
0xe57: V1261 = S[0xc]
0xe58: V1262 = 0x0
0xe5a: V1263 = LT 0x0 V1261
0xe5c: V1264 = ISZERO V1263
0xe5d: V1265 = 0xe68
0xe60: JUMPI 0xe68 V1264
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: [V1263]
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, S0, V1263]

================================

Block 0xe61
[0xe61:0xe67]
---
Predecessors: [0xe54]
Successors: [0xe68]
---
0xe61 POP
0xe62 PUSH1 0x1
0xe64 DUP3
0xe65 ISZERO
0xe66 ISZERO
0xe67 EQ
---
0xe62: V1266 = 0x1
0xe65: V1267 = ISZERO {0x0, 0x1}
0xe66: V1268 = ISZERO V1267
0xe67: V1269 = EQ V1268 0x1
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S1, V1263]
Stack pops: 3
Stack additions: [S2, S1, V1269]
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, S1, V1269]

================================

Block 0xe68
[0xe68:0xe6e]
---
Predecessors: [0xe54, 0xe61]
Successors: [0xe6f, 0xebe]
---
0xe68 JUMPDEST
0xe69 ISZERO
0xe6a ISZERO
0xe6b PUSH2 0xebe
0xe6e JUMPI
---
0xe68: JUMPDEST 
0xe69: V1270 = ISZERO S0
0xe6a: V1271 = ISZERO V1270
0xe6b: V1272 = 0xebe
0xe6e: JUMPI 0xebe V1271
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, S1]

================================

Block 0xe6f
[0xe6f:0xebd]
---
Predecessors: [0xe68]
Successors: []
---
0xe6f PUSH1 0x40
0xe71 DUP1
0xe72 MLOAD
0xe73 PUSH1 0xe5
0xe75 PUSH1 0x2
0xe77 EXP
0xe78 PUSH3 0x461bcd
0xe7c MUL
0xe7d DUP2
0xe7e MSTORE
0xe7f PUSH1 0x20
0xe81 PUSH1 0x4
0xe83 DUP3
0xe84 ADD
0xe85 MSTORE
0xe86 PUSH1 0x1
0xe88 PUSH1 0x24
0xe8a DUP3
0xe8b ADD
0xe8c MSTORE
0xe8d PUSH32 0x3800000000000000000000000000000000000000000000000000000000000000
0xeae PUSH1 0x44
0xeb0 DUP3
0xeb1 ADD
0xeb2 MSTORE
0xeb3 SWAP1
0xeb4 MLOAD
0xeb5 SWAP1
0xeb6 DUP2
0xeb7 SWAP1
0xeb8 SUB
0xeb9 PUSH1 0x64
0xebb ADD
0xebc SWAP1
0xebd REVERT
---
0xe6f: V1273 = 0x40
0xe72: V1274 = M[0x40]
0xe73: V1275 = 0xe5
0xe75: V1276 = 0x2
0xe77: V1277 = EXP 0x2 0xe5
0xe78: V1278 = 0x461bcd
0xe7c: V1279 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xe7e: M[V1274] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe7f: V1280 = 0x20
0xe81: V1281 = 0x4
0xe84: V1282 = ADD V1274 0x4
0xe85: M[V1282] = 0x20
0xe86: V1283 = 0x1
0xe88: V1284 = 0x24
0xe8b: V1285 = ADD V1274 0x24
0xe8c: M[V1285] = 0x1
0xe8d: V1286 = 0x3800000000000000000000000000000000000000000000000000000000000000
0xeae: V1287 = 0x44
0xeb1: V1288 = ADD V1274 0x44
0xeb2: M[V1288] = 0x3800000000000000000000000000000000000000000000000000000000000000
0xeb4: V1289 = M[0x40]
0xeb8: V1290 = SUB V1274 V1289
0xeb9: V1291 = 0x64
0xebb: V1292 = ADD 0x64 V1290
0xebd: REVERT V1289 V1292
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, S0]

================================

Block 0xebe
[0xebe:0xf0e]
---
Predecessors: [0xe68]
Successors: [0xf61]
---
0xebe JUMPDEST
0xebf CALLER
0xec0 PUSH1 0x0
0xec2 SWAP1
0xec3 DUP2
0xec4 MSTORE
0xec5 PUSH32 0xdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76
0xee6 PUSH1 0x20
0xee8 MSTORE
0xee9 PUSH1 0x40
0xeeb DUP2
0xeec SHA3
0xeed DUP1
0xeee SLOAD
0xeef PUSH1 0x1
0xef1 PUSH1 0xa0
0xef3 PUSH1 0x2
0xef5 EXP
0xef6 SUB
0xef7 NOT
0xef8 AND
0xef9 PUSH1 0x1
0xefb PUSH1 0xa0
0xefd PUSH1 0x2
0xeff EXP
0xf00 SUB
0xf01 DUP7
0xf02 AND
0xf03 OR
0xf04 SWAP1
0xf05 SSTORE
0xf06 PUSH2 0xf0f
0xf09 SWAP1
0xf0a DUP5
0xf0b PUSH2 0xf61
0xf0e JUMP
---
0xebe: JUMPDEST 
0xebf: V1293 = CALLER
0xec0: V1294 = 0x0
0xec4: M[0x0] = V1293
0xec5: V1295 = 0xdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76
0xee6: V1296 = 0x20
0xee8: M[0x20] = 0xdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76
0xee9: V1297 = 0x40
0xeec: V1298 = SHA3 0x0 0x40
0xeee: V1299 = S[V1298]
0xeef: V1300 = 0x1
0xef1: V1301 = 0xa0
0xef3: V1302 = 0x2
0xef5: V1303 = EXP 0x2 0xa0
0xef6: V1304 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef7: V1305 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xef8: V1306 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1299
0xef9: V1307 = 0x1
0xefb: V1308 = 0xa0
0xefd: V1309 = 0x2
0xeff: V1310 = EXP 0x2 0xa0
0xf00: V1311 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf02: V1312 = AND V396 0xffffffffffffffffffffffffffffffffffffffff
0xf03: V1313 = OR V1312 V1306
0xf05: S[V1298] = V1313
0xf06: V1314 = 0xf0f
0xf0b: V1315 = 0xf61
0xf0e: JUMP 0xf61
---
Entry stack: [V13, 0x150, V396, {0x0, 0x1}, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xf0f, 0x0, S2]
Exit stack: [V13, 0x150, V396, {0x0, 0x1}, S0, 0xf0f, 0x0, V396]

================================

Block 0xf0f
[0xf0f:0xf15]
---
Predecessors: [0xfef]
Successors: [0xf16, 0xf1a]
---
0xf0f JUMPDEST
0xf10 ISZERO
0xf11 ISZERO
0xf12 PUSH2 0xf1a
0xf15 JUMPI
---
0xf0f: JUMPDEST 
0xf10: V1316 = ISZERO {0x0, 0x1}
0xf11: V1317 = ISZERO V1316
0xf12: V1318 = 0xf1a
0xf15: JUMPI 0xf1a V1317
---
Entry stack: [V13, S5, S4, S3, {0x0, 0x1}, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S5, S4, S3, {0x0, 0x1}, S1]

================================

Block 0xf16
[0xf16:0xf19]
---
Predecessors: [0xf0f]
Successors: [0x939]
---
0xf16 PUSH2 0x939
0xf19 JUMP
---
0xf16: V1319 = 0x939
0xf19: JUMP 0x939
---
Entry stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]

================================

Block 0xf1a
[0xf1a:0xf3b]
---
Predecessors: [0xf0f]
Successors: [0x150]
---
0xf1a JUMPDEST
0xf1b PUSH1 0x1
0xf1d DUP1
0xf1e SLOAD
0xf1f PUSH1 0x1
0xf21 PUSH1 0xa0
0xf23 PUSH1 0x2
0xf25 EXP
0xf26 SUB
0xf27 DUP6
0xf28 AND
0xf29 PUSH1 0x1
0xf2b PUSH1 0xa0
0xf2d PUSH1 0x2
0xf2f EXP
0xf30 SUB
0xf31 NOT
0xf32 SWAP1
0xf33 SWAP2
0xf34 AND
0xf35 OR
0xf36 SWAP1
0xf37 SSTORE
0xf38 POP
0xf39 POP
0xf3a POP
0xf3b JUMP
---
0xf1a: JUMPDEST 
0xf1b: V1320 = 0x1
0xf1e: V1321 = S[0x1]
0xf1f: V1322 = 0x1
0xf21: V1323 = 0xa0
0xf23: V1324 = 0x2
0xf25: V1325 = EXP 0x2 0xa0
0xf26: V1326 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf28: V1327 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xf29: V1328 = 0x1
0xf2b: V1329 = 0xa0
0xf2d: V1330 = 0x2
0xf2f: V1331 = EXP 0x2 0xa0
0xf30: V1332 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf31: V1333 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf34: V1334 = AND V1321 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xf35: V1335 = OR V1334 V1327
0xf37: S[0x1] = V1335
0xf3b: JUMP S3
---
Entry stack: [V13, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S4]

================================

Block 0xf3c
[0xf3c:0xf56]
---
Predecessors: [0x4b0]
Successors: [0x1ec]
---
0xf3c JUMPDEST
0xf3d PUSH1 0x5
0xf3f PUSH1 0x20
0xf41 MSTORE
0xf42 PUSH1 0x0
0xf44 SWAP1
0xf45 DUP2
0xf46 MSTORE
0xf47 PUSH1 0x40
0xf49 SWAP1
0xf4a SHA3
0xf4b SLOAD
0xf4c PUSH1 0x1
0xf4e PUSH1 0xa0
0xf50 PUSH1 0x2
0xf52 EXP
0xf53 SUB
0xf54 AND
0xf55 DUP2
0xf56 JUMP
---
0xf3c: JUMPDEST 
0xf3d: V1336 = 0x5
0xf3f: V1337 = 0x20
0xf41: M[0x20] = 0x5
0xf42: V1338 = 0x0
0xf46: M[0x0] = V406
0xf47: V1339 = 0x40
0xf4a: V1340 = SHA3 0x0 0x40
0xf4b: V1341 = S[V1340]
0xf4c: V1342 = 0x1
0xf4e: V1343 = 0xa0
0xf50: V1344 = 0x2
0xf52: V1345 = EXP 0x2 0xa0
0xf53: V1346 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf54: V1347 = AND 0xffffffffffffffffffffffffffffffffffffffff V1341
0xf56: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, V406]
Stack pops: 2
Stack additions: [S1, V1347]
Exit stack: [V13, 0x1ec, V1347]

================================

Block 0xf57
[0xf57:0xf60]
---
Predecessors: [0x4bf]
Successors: [0x150]
---
0xf57 JUMPDEST
0xf58 PUSH1 0xa
0xf5a DUP1
0xf5b SLOAD
0xf5c CALLVALUE
0xf5d ADD
0xf5e SWAP1
0xf5f SSTORE
0xf60 JUMP
---
0xf57: JUMPDEST 
0xf58: V1348 = 0xa
0xf5b: V1349 = S[0xa]
0xf5c: V1350 = CALLVALUE
0xf5d: V1351 = ADD V1350 V1349
0xf5f: S[0xa] = V1351
0xf60: JUMP 0x150
---
Entry stack: [V13, 0x150]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xf61
[0xf61:0xf65]
---
Predecessors: [0x578, 0x6d9, 0xebe]
Successors: [0xf66]
---
0xf61 JUMPDEST
0xf62 PUSH1 0x0
0xf64 DUP1
0xf65 DUP1
---
0xf61: JUMPDEST 
0xf62: V1352 = 0x0
---
Entry stack: [V13, S7, S6, S5, {0x0, 0x1}, S3, {0x5ba, 0x71d, 0xf0f}, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, S7, S6, S5, {0x0, 0x1}, S3, {0x5ba, 0x71d, 0xf0f}, S1, S0, 0x0, 0x0, 0x0]

================================

Block 0xf66
[0xf66:0xf70]
---
Predecessors: [0xf61, 0xfd1]
Successors: [0xf71, 0xfd9]
---
0xf66 JUMPDEST
0xf67 PUSH1 0xc
0xf69 SLOAD
0xf6a DUP2
0xf6b LT
0xf6c ISZERO
0xf6d PUSH2 0xfd9
0xf70 JUMPI
---
0xf66: JUMPDEST 
0xf67: V1353 = 0xc
0xf69: V1354 = S[0xc]
0xf6b: V1355 = LT S0 V1354
0xf6c: V1356 = ISZERO V1355
0xf6d: V1357 = 0xfd9
0xf70: JUMPI 0xfd9 V1356
---
Entry stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0]

================================

Block 0xf71
[0xf71:0xf97]
---
Predecessors: [0xf66]
Successors: [0xf98, 0xf99]
---
0xf71 PUSH1 0x0
0xf73 DUP6
0xf74 DUP2
0xf75 MSTORE
0xf76 PUSH1 0xb
0xf78 PUSH1 0x20
0xf7a MSTORE
0xf7b PUSH1 0x40
0xf7d DUP2
0xf7e SHA3
0xf7f PUSH1 0xc
0xf81 DUP1
0xf82 SLOAD
0xf83 PUSH1 0x1
0xf85 PUSH1 0xa0
0xf87 PUSH1 0x2
0xf89 EXP
0xf8a SUB
0xf8b DUP9
0xf8c AND
0xf8d SWAP4
0xf8e SWAP2
0xf8f SWAP1
0xf90 DUP6
0xf91 SWAP1
0xf92 DUP2
0xf93 LT
0xf94 PUSH2 0xf99
0xf97 JUMPI
---
0xf71: V1358 = 0x0
0xf75: M[0x0] = S4
0xf76: V1359 = 0xb
0xf78: V1360 = 0x20
0xf7a: M[0x20] = 0xb
0xf7b: V1361 = 0x40
0xf7e: V1362 = SHA3 0x0 0x40
0xf7f: V1363 = 0xc
0xf82: V1364 = S[0xc]
0xf83: V1365 = 0x1
0xf85: V1366 = 0xa0
0xf87: V1367 = 0x2
0xf89: V1368 = EXP 0x2 0xa0
0xf8a: V1369 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8c: V1370 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xf93: V1371 = LT S0 V1364
0xf94: V1372 = 0xf99
0xf97: JUMPI 0xf99 V1371
---
Entry stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V1370, V1362, 0x0, 0xc, S0]
Exit stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0, V1370, V1362, 0x0, 0xc, S0]

================================

Block 0xf98
[0xf98:0xf98]
---
Predecessors: [0xf71]
Successors: []
---
0xf98 INVALID
---
0xf98: INVALID 
---
Entry stack: [V13, S15, S14, S13, {0x0, 0x1}, S11, {0x5ba, 0x71d, 0xf0f}, S9, S8, S7, S6, S5, V1370, V1362, 0x0, 0xc, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, {0x0, 0x1}, S11, {0x5ba, 0x71d, 0xf0f}, S9, S8, S7, S6, S5, V1370, V1362, 0x0, 0xc, S0]

================================

Block 0xf99
[0xf99:0xfca]
---
Predecessors: [0xf71]
Successors: [0xfcb, 0xfd1]
---
0xf99 JUMPDEST
0xf9a PUSH1 0x0
0xf9c SWAP2
0xf9d DUP3
0xf9e MSTORE
0xf9f PUSH1 0x20
0xfa1 DUP1
0xfa2 DUP4
0xfa3 SHA3
0xfa4 SWAP1
0xfa5 SWAP2
0xfa6 ADD
0xfa7 SLOAD
0xfa8 PUSH1 0x1
0xfaa PUSH1 0xa0
0xfac PUSH1 0x2
0xfae EXP
0xfaf SUB
0xfb0 SWAP1
0xfb1 DUP2
0xfb2 AND
0xfb3 DUP5
0xfb4 MSTORE
0xfb5 SWAP1
0xfb6 DUP4
0xfb7 ADD
0xfb8 SWAP4
0xfb9 SWAP1
0xfba SWAP4
0xfbb MSTORE
0xfbc PUSH1 0x40
0xfbe SWAP1
0xfbf SWAP2
0xfc0 ADD
0xfc1 SWAP1
0xfc2 SHA3
0xfc3 SLOAD
0xfc4 AND
0xfc5 EQ
0xfc6 ISZERO
0xfc7 PUSH2 0xfd1
0xfca JUMPI
---
0xf99: JUMPDEST 
0xf9a: V1373 = 0x0
0xf9e: M[0x0] = 0xc
0xf9f: V1374 = 0x20
0xfa3: V1375 = SHA3 0x0 0x20
0xfa6: V1376 = ADD S0 V1375
0xfa7: V1377 = S[V1376]
0xfa8: V1378 = 0x1
0xfaa: V1379 = 0xa0
0xfac: V1380 = 0x2
0xfae: V1381 = EXP 0x2 0xa0
0xfaf: V1382 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb2: V1383 = AND 0xffffffffffffffffffffffffffffffffffffffff V1377
0xfb4: M[0x0] = V1383
0xfb7: V1384 = ADD 0x0 0x20
0xfbb: M[0x20] = V1362
0xfbc: V1385 = 0x40
0xfc0: V1386 = ADD 0x0 0x40
0xfc2: V1387 = SHA3 0x0 0x40
0xfc3: V1388 = S[V1387]
0xfc4: V1389 = AND V1388 0xffffffffffffffffffffffffffffffffffffffff
0xfc5: V1390 = EQ V1389 V1370
0xfc6: V1391 = ISZERO V1390
0xfc7: V1392 = 0xfd1
0xfca: JUMPI 0xfd1 V1391
---
Entry stack: [V13, S15, S14, S13, {0x0, 0x1}, S11, {0x5ba, 0x71d, 0xf0f}, S9, S8, S7, S6, S5, V1370, V1362, 0x0, 0xc, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, S15, S14, S13, {0x0, 0x1}, S11, {0x5ba, 0x71d, 0xf0f}, S9, S8, S7, S6, S5]

================================

Block 0xfcb
[0xfcb:0xfd0]
---
Predecessors: [0xf99]
Successors: [0xfd1]
---
0xfcb PUSH1 0x1
0xfcd SWAP1
0xfce SWAP2
0xfcf ADD
0xfd0 SWAP1
---
0xfcb: V1393 = 0x1
0xfcf: V1394 = ADD S1 0x1
---
Entry stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V1394, S0]
Exit stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, V1394, S0]

================================

Block 0xfd1
[0xfd1:0xfd8]
---
Predecessors: [0xf99, 0xfcb]
Successors: [0xf66]
---
0xfd1 JUMPDEST
0xfd2 PUSH1 0x1
0xfd4 ADD
0xfd5 PUSH2 0xf66
0xfd8 JUMP
---
0xfd1: JUMPDEST 
0xfd2: V1395 = 0x1
0xfd4: V1396 = ADD 0x1 S0
0xfd5: V1397 = 0xf66
0xfd8: JUMP 0xf66
---
Entry stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V1396]
Exit stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, V1396]

================================

Block 0xfd9
[0xfd9:0xfe1]
---
Predecessors: [0xf66]
Successors: [0xfe2, 0xfea]
---
0xfd9 JUMPDEST
0xfda PUSH1 0x3
0xfdc DUP3
0xfdd SLT
0xfde PUSH2 0xfea
0xfe1 JUMPI
---
0xfd9: JUMPDEST 
0xfda: V1398 = 0x3
0xfdd: V1399 = SLT S1 0x3
0xfde: V1400 = 0xfea
0xfe1: JUMPI 0xfea V1399
---
Entry stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0]

================================

Block 0xfe2
[0xfe2:0xfe9]
---
Predecessors: [0xfd9]
Successors: [0xfef]
---
0xfe2 PUSH1 0x1
0xfe4 SWAP3
0xfe5 POP
0xfe6 PUSH2 0xfef
0xfe9 JUMP
---
0xfe2: V1401 = 0x1
0xfe6: V1402 = 0xfef
0xfe9: JUMP 0xfef
---
Entry stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, 0x1, S1, S0]

================================

Block 0xfea
[0xfea:0xfee]
---
Predecessors: [0xfd9]
Successors: [0xfef]
---
0xfea JUMPDEST
0xfeb PUSH1 0x0
0xfed SWAP3
0xfee POP
---
0xfea: JUMPDEST 
0xfeb: V1403 = 0x0
---
Entry stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, 0x0, S1, S0]

================================

Block 0xfef
[0xfef:0xff6]
---
Predecessors: [0xfe2, 0xfea]
Successors: [0x5ba, 0x71d, 0xf0f]
---
0xfef JUMPDEST
0xff0 POP
0xff1 POP
0xff2 SWAP3
0xff3 SWAP2
0xff4 POP
0xff5 POP
0xff6 JUMP
---
0xfef: JUMPDEST 
0xff6: JUMP {0x5ba, 0x71d, 0xf0f}
---
Entry stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x5ba, 0x71d, 0xf0f}, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V13, S10, S9, S8, {0x0, 0x1}, S6, {0x0, 0x1}]

================================

Block 0xff7
[0xff7:0x1036]
---
Predecessors: []
Successors: []
---
0xff7 STOP
0xff8 LOG1
0xff9 PUSH6 0x627a7a723058
0x1000 SHA3
0x1001 SWAP12
0x1002 MISSING 0xf8
0x1003 MISSING 0x23
0x1004 LOG4
0x1005 RETURN
0x1006 LOG2
0x1007 SHA3
0x1008 MISSING 0x2f
0x1009 CREATE
0x100a DUP11
0x100b ORIGIN
0x100c GASPRICE
0x100d PUSH5 0xd23fbb9439
0x1013 MISSING 0x5d
0x1014 MISSING 0xb5
0x1015 DUP15
0x1016 CALLDATASIZE
0x1017 BYTE
0x1018 MISSING 0xb7
0x1019 MISSING 0xaa
0x101a MISSING 0xdc
0x101b TIMESTAMP
0x101c PUSH26 0x799371910029
---
0xff7: STOP 
0xff8: LOG S0 S1 S2
0xff9: V1404 = 0x627a7a723058
0x1000: V1405 = SHA3 0x627a7a723058 S3
0x1002: MISSING 0xf8
0x1003: MISSING 0x23
0x1004: LOG S0 S1 S2 S3 S4 S5
0x1005: RETURN S6 S7
0x1006: LOG S0 S1 S2 S3
0x1007: V1406 = SHA3 S4 S5
0x1008: MISSING 0x2f
0x1009: V1407 = CREATE S0 S1 S2
0x100b: V1408 = ORIGIN
0x100c: V1409 = GASPRICE
0x100d: V1410 = 0xd23fbb9439
0x1013: MISSING 0x5d
0x1014: MISSING 0xb5
0x1016: V1411 = CALLDATASIZE
0x1017: V1412 = BYTE V1411 S14
0x1018: MISSING 0xb7
0x1019: MISSING 0xaa
0x101a: MISSING 0xdc
0x101b: V1413 = TIMESTAMP
0x101c: V1414 = 0x799371910029
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V1405, V1406, 0xd23fbb9439, V1409, V1408, S12, V1407, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V1412, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0x799371910029, V1413]
Exit stack: []

================================

Function 0:
Public function signature: 0x42cefc1
Entry block: 0x152
Exit block: 0x150
Body: 0x150, 0x152, 0x15a, 0x15e, 0x4c7, 0x4cb, 0x4d6, 0x4e5, 0x4e6, 0x502, 0x506, 0x50e, 0x51b, 0x522, 0x529, 0x578, 0x5ba, 0x5c1, 0x5c5, 0x622

Function 1:
Public function signature: 0x7f67dbd
Entry block: 0x179
Exit block: 0x150
Body: 0x150, 0x179, 0x181, 0x185, 0x622, 0x628, 0x62c, 0x637, 0x646, 0x647, 0x663, 0x667, 0x66f, 0x67c, 0x683, 0x68a, 0x6d9, 0x71d, 0x724, 0x728

Function 2:
Public function signature: 0xb0db12d
Entry block: 0x1a0
Exit block: 0x1c1
Body: 0x1a0, 0x1a8, 0x1ac, 0x1c1, 0x75b

Function 3:
Public function signature: 0x10fe6584
Entry block: 0x1d7
Exit block: 0x1ec
Body: 0x1d7, 0x1df, 0x1e3, 0x1ec, 0x770

Function 4:
Public function signature: 0x13af4035
Entry block: 0x208
Exit block: 0x150
Body: 0x150, 0x208, 0x210, 0x214, 0x77f, 0x792, 0x7e1

Function 5:
Public function signature: 0x2881178b
Entry block: 0x229
Exit block: 0x23e
Body: 0x229, 0x231, 0x235, 0x23e, 0x803

Function 6:
Public function signature: 0x2d8815c8
Entry block: 0x250
Exit block: 0x150
Body: 0x150, 0x250, 0x809, 0x839

Function 7:
Public function signature: 0x2fe6a1e6
Entry block: 0x258
Exit block: 0x150
Body: 0x150, 0x258, 0x853

Function 8:
Public function signature: 0x4cf667d9
Entry block: 0x260
Exit block: 0x1ec
Body: 0x1ec, 0x260, 0x268, 0x26c, 0x855, 0x862, 0x863

Function 9:
Public function signature: 0x5fecf62c
Entry block: 0x258
Exit block: 0x150
Body: 0x150, 0x258, 0x853

Function 10:
Public function signature: 0x781851a7
Entry block: 0x278
Exit block: 0x916
Body: 0x150, 0x278, 0x280, 0x284, 0x87d, 0x891, 0x8e0, 0x8e4, 0x8ee, 0x8fa, 0x8fb, 0x916, 0x917, 0x939

Function 11:
Public function signature: 0x78914887
Entry block: 0x306
Exit block: 0x1ec
Body: 0x1ec, 0x306, 0x30e, 0x312, 0x93e

Function 12:
Public function signature: 0x798cc26a
Entry block: 0x327
Exit block: 0x1ec
Body: 0x1ec, 0x327, 0x32f, 0x333, 0x959, 0x963

Function 13:
Public function signature: 0x7db65b17
Entry block: 0x33c
Exit block: 0x1ec
Body: 0x1ec, 0x33c, 0x344, 0x348, 0x968

Function 14:
Public function signature: 0x841586e0
Entry block: 0x357
Exit block: 0x23e
Body: 0x23e, 0x357, 0x35f, 0x363, 0x986

Function 15:
Public function signature: 0x893d20e8
Entry block: 0x36c
Exit block: 0x374
Body: 0x1ec, 0x36c, 0x374, 0x378

Function 16:
Public function signature: 0x929dd1e0
Entry block: 0x381
Exit block: 0xa48
Body: 0x1ec, 0x381, 0x99b, 0x9bd, 0xa1e, 0xa22, 0xa2d, 0xa36, 0xa48, 0xa4c, 0xb1e, 0xb94

Function 17:
Public function signature: 0x9801354f
Entry block: 0x389
Exit block: 0x1ec
Body: 0x1ec, 0x389, 0x391, 0x395, 0xb98

Function 18:
Public function signature: 0xb00a6d92
Entry block: 0x3aa
Exit block: 0x23e
Body: 0x23e, 0x3aa, 0x3b2, 0x3b6, 0xbb3

Function 19:
Public function signature: 0xb92e7207
Entry block: 0x3bf
Exit block: 0x1ec
Body: 0x1ec, 0x3bf, 0x3c7, 0x3cb, 0xbb9

Function 20:
Public function signature: 0xcf39918e
Entry block: 0x3da
Exit block: 0x23e
Body: 0x23e, 0x3da, 0x3e2, 0x3e6, 0xbd4

Function 21:
Public function signature: 0xd1bd1d6e
Entry block: 0x3f2
Exit block: 0x1ec
Body: 0x1ec, 0x3f2, 0x3fa, 0x3fe, 0xbe6

Function 22:
Public function signature: 0xd974081f
Entry block: 0x407
Exit block: 0x1ec
Body: 0x1ec, 0x407, 0x40f, 0x413, 0xbf5

Function 23:
Public function signature: 0xdf41b67c
Entry block: 0x422
Exit block: 0xcd0
Body: 0x150, 0x422, 0x42a, 0x42e, 0xc13, 0xc2c, 0xc7b, 0xc83, 0xc87, 0xcc1, 0xcc5, 0xcd0, 0xcd9, 0xcdf

Function 24:
Public function signature: 0xe1d1cb13
Entry block: 0x446
Exit block: 0x150
Body: 0x150, 0x446, 0x44e, 0x452, 0xcd9, 0xcdf, 0xce3, 0xcf7, 0xd46, 0xdd6, 0xdda, 0xde5, 0xdee, 0xdfc

Function 25:
Public function signature: 0xea2143c2
Entry block: 0x483
Exit block: 0x150
Body: 0x150, 0x483, 0x48b, 0x48f, 0x939, 0xe0d, 0xe11, 0xe1c, 0xe2b, 0xe2c, 0xe48, 0xe4c, 0xe54, 0xe61, 0xe68, 0xe6f, 0xebe, 0xf0f, 0xf16, 0xf1a

Function 26:
Public function signature: 0xedba7f8f
Entry block: 0x4a4
Exit block: 0x1ec
Body: 0x1ec, 0x4a4, 0x4ac, 0x4b0, 0xf3c

Function 27:
Public function signature: 0xf7e17fe9
Entry block: 0x4bf
Exit block: 0x150
Body: 0x150, 0x4bf, 0xf57

Function 28:
Public fallback function
Entry block: 0x150
Exit block: 0x150
Body: 0x150

Function 29:
Private function
Entry block: 0xf61
Exit block: 0xfef
Body: 0xf61, 0xf66, 0xf71, 0xf99, 0xfcb, 0xfd1, 0xfd9, 0xfe2, 0xfea, 0xfef

