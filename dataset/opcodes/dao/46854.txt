Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xcd]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xcd
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xcd
0xa: JUMPI 0xcd V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xd6]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x3710668
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xd6
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x3710668
0x39: V12 = EQ V10 0x3710668
0x3a: V13 = 0xd6
0x3d: JUMPI 0xd6 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x112]
---
0x3e DUP1
0x3f PUSH4 0x3beb26c4
0x44 EQ
0x45 PUSH2 0x112
0x48 JUMPI
---
0x3f: V14 = 0x3beb26c4
0x44: V15 = EQ 0x3beb26c4 V10
0x45: V16 = 0x112
0x48: JUMPI 0x112 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x139]
---
0x49 DUP1
0x4a PUSH4 0x4efdac37
0x4f EQ
0x50 PUSH2 0x139
0x53 JUMPI
---
0x4a: V17 = 0x4efdac37
0x4f: V18 = EQ 0x4efdac37 V10
0x50: V19 = 0x139
0x53: JUMPI 0x139 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x15d]
---
0x54 DUP1
0x55 PUSH4 0x5629d258
0x5a EQ
0x5b PUSH2 0x15d
0x5e JUMPI
---
0x55: V20 = 0x5629d258
0x5a: V21 = EQ 0x5629d258 V10
0x5b: V22 = 0x15d
0x5e: JUMPI 0x15d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x18d]
---
0x5f DUP1
0x60 PUSH4 0x5d452201
0x65 EQ
0x66 PUSH2 0x18d
0x69 JUMPI
---
0x60: V23 = 0x5d452201
0x65: V24 = EQ 0x5d452201 V10
0x66: V25 = 0x18d
0x69: JUMPI 0x18d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x1b9]
---
0x6a DUP1
0x6b PUSH4 0x83b8511d
0x70 EQ
0x71 PUSH2 0x1b9
0x74 JUMPI
---
0x6b: V26 = 0x83b8511d
0x70: V27 = EQ 0x83b8511d V10
0x71: V28 = 0x1b9
0x74: JUMPI 0x1b9 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1db]
---
0x75 DUP1
0x76 PUSH4 0x87cea3ae
0x7b EQ
0x7c PUSH2 0x1db
0x7f JUMPI
---
0x76: V29 = 0x87cea3ae
0x7b: V30 = EQ 0x87cea3ae V10
0x7c: V31 = 0x1db
0x7f: JUMPI 0x1db V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x202]
---
0x80 DUP1
0x81 PUSH4 0x8da5cb5b
0x86 EQ
0x87 PUSH2 0x202
0x8a JUMPI
---
0x81: V32 = 0x8da5cb5b
0x86: V33 = EQ 0x8da5cb5b V10
0x87: V34 = 0x202
0x8a: JUMPI 0x202 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x22e]
---
0x8b DUP1
0x8c PUSH4 0x91cca3db
0x91 EQ
0x92 PUSH2 0x22e
0x95 JUMPI
---
0x8c: V35 = 0x91cca3db
0x91: V36 = EQ 0x91cca3db V10
0x92: V37 = 0x22e
0x95: JUMPI 0x22e V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x25a]
---
0x96 DUP1
0x97 PUSH4 0x9e281a98
0x9c EQ
0x9d PUSH2 0x25a
0xa0 JUMPI
---
0x97: V38 = 0x9e281a98
0x9c: V39 = EQ 0x9e281a98 V10
0x9d: V40 = 0x25a
0xa0: JUMPI 0x25a V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x28d]
---
0xa1 DUP1
0xa2 PUSH4 0xb6f50c29
0xa7 EQ
0xa8 PUSH2 0x28d
0xab JUMPI
---
0xa2: V41 = 0xb6f50c29
0xa7: V42 = EQ 0xb6f50c29 V10
0xa8: V43 = 0x28d
0xab: JUMPI 0x28d V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x2bd]
---
0xac DUP1
0xad PUSH4 0xcfbbe427
0xb2 EQ
0xb3 PUSH2 0x2bd
0xb6 JUMPI
---
0xad: V44 = 0xcfbbe427
0xb2: V45 = EQ 0xcfbbe427 V10
0xb3: V46 = 0x2bd
0xb6: JUMPI 0x2bd V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x2e1]
---
0xb7 DUP1
0xb8 PUSH4 0xe088d322
0xbd EQ
0xbe PUSH2 0x2e1
0xc1 JUMPI
---
0xb8: V47 = 0xe088d322
0xbd: V48 = EQ 0xe088d322 V10
0xbe: V49 = 0x2e1
0xc1: JUMPI 0x2e1 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x314]
---
0xc2 DUP1
0xc3 PUSH4 0xfb6acf56
0xc8 EQ
0xc9 PUSH2 0x314
0xcc JUMPI
---
0xc3: V50 = 0xfb6acf56
0xc8: V51 = EQ 0xfb6acf56 V10
0xc9: V52 = 0x314
0xcc: JUMPI 0x314 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0x0, 0xc2]
Successors: [0xd1]
---
0xcd JUMPDEST
0xce PUSH2 0xd4
---
0xcd: JUMPDEST 
0xce: V53 = 0xd4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V10, 0xd4]

================================

Block 0xd1
[0xd1:0xd1]
---
Predecessors: [0xcd]
Successors: [0xd2]
---
0xd1 JUMPDEST
---
0xd1: JUMPDEST 
---
Entry stack: [V10, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd4]

================================

Block 0xd2
[0xd2:0xd3]
---
Predecessors: [0xd1]
Successors: [0xd4]
---
0xd2 JUMPDEST
0xd3 JUMP
---
0xd2: JUMPDEST 
0xd3: JUMP 0xd4
---
Entry stack: [V10, 0xd4]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xd4
[0xd4:0xd5]
---
Predecessors: [0xd2]
Successors: []
---
0xd4 JUMPDEST
0xd5 STOP
---
0xd4: JUMPDEST 
0xd5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0xb]
Successors: [0xdd, 0xde]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xde
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V54 = CALLVALUE
0xd8: V55 = ISZERO V54
0xd9: V56 = 0xde
0xdc: JUMPI 0xde V55
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdd
[0xdd:0xdd]
---
Predecessors: [0xd6]
Successors: []
---
0xdd INVALID
---
0xdd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xde
[0xde:0xfd]
---
Predecessors: [0xd6]
Successors: [0x336]
---
0xde JUMPDEST
0xdf PUSH2 0xfe
0xe2 PUSH1 0x4
0xe4 DUP1
0xe5 CALLDATALOAD
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee AND
0xef SWAP1
0xf0 PUSH1 0x24
0xf2 DUP1
0xf3 CALLDATALOAD
0xf4 SWAP1
0xf5 DUP2
0xf6 ADD
0xf7 SWAP2
0xf8 ADD
0xf9 CALLDATALOAD
0xfa PUSH2 0x336
0xfd JUMP
---
0xde: JUMPDEST 
0xdf: V57 = 0xfe
0xe2: V58 = 0x4
0xe5: V59 = CALLDATALOAD 0x4
0xe6: V60 = 0x1
0xe8: V61 = 0xa0
0xea: V62 = 0x2
0xec: V63 = EXP 0x2 0xa0
0xed: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xf0: V66 = 0x24
0xf3: V67 = CALLDATALOAD 0x24
0xf6: V68 = ADD V67 0x24
0xf8: V69 = ADD 0x4 V67
0xf9: V70 = CALLDATALOAD V69
0xfa: V71 = 0x336
0xfd: JUMP 0x336
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe, V65, V68, V70]
Exit stack: [V10, 0xfe, V65, V68, V70]

================================

Block 0xfe
[0xfe:0x111]
---
Predecessors: [0x38a, 0x3b9, 0x415, 0x555, 0x599, 0x669, 0x6b9, 0x728, 0x7ab]
Successors: []
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 DUP1
0x102 MLOAD
0x103 SWAP2
0x104 ISZERO
0x105 ISZERO
0x106 DUP3
0x107 MSTORE
0x108 MLOAD
0x109 SWAP1
0x10a DUP2
0x10b SWAP1
0x10c SUB
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 RETURN
---
0xfe: JUMPDEST 
0xff: V72 = 0x40
0x102: V73 = M[0x40]
0x104: V74 = ISZERO S0
0x105: V75 = ISZERO V74
0x107: M[V73] = V75
0x108: V76 = M[0x40]
0x10c: V77 = SUB V73 V76
0x10d: V78 = 0x20
0x10f: V79 = ADD 0x20 V77
0x111: RETURN V76 V79
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x112
[0x112:0x118]
---
Predecessors: [0x3e]
Successors: [0x119, 0x11a]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 ISZERO
0x115 PUSH2 0x11a
0x118 JUMPI
---
0x112: JUMPDEST 
0x113: V80 = CALLVALUE
0x114: V81 = ISZERO V80
0x115: V82 = 0x11a
0x118: JUMPI 0x11a V81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x119
[0x119:0x119]
---
Predecessors: [0x112]
Successors: []
---
0x119 INVALID
---
0x119: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11a
[0x11a:0x124]
---
Predecessors: [0x112]
Successors: [0x391]
---
0x11a JUMPDEST
0x11b PUSH2 0xfe
0x11e PUSH1 0x4
0x120 CALLDATALOAD
0x121 PUSH2 0x391
0x124 JUMP
---
0x11a: JUMPDEST 
0x11b: V83 = 0xfe
0x11e: V84 = 0x4
0x120: V85 = CALLDATALOAD 0x4
0x121: V86 = 0x391
0x124: JUMP 0x391
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe, V85]
Exit stack: [V10, 0xfe, V85]

================================

Block 0x125
[0x125:0x138]
---
Predecessors: []
Successors: []
---
0x125 JUMPDEST
0x126 PUSH1 0x40
0x128 DUP1
0x129 MLOAD
0x12a SWAP2
0x12b ISZERO
0x12c ISZERO
0x12d DUP3
0x12e MSTORE
0x12f MLOAD
0x130 SWAP1
0x131 DUP2
0x132 SWAP1
0x133 SUB
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP1
0x138 RETURN
---
0x125: JUMPDEST 
0x126: V87 = 0x40
0x129: V88 = M[0x40]
0x12b: V89 = ISZERO S0
0x12c: V90 = ISZERO V89
0x12e: M[V88] = V90
0x12f: V91 = M[0x40]
0x133: V92 = SUB V88 V91
0x134: V93 = 0x20
0x136: V94 = ADD 0x20 V92
0x138: RETURN V91 V94
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x49]
Successors: [0x140, 0x141]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x141
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V95 = CALLVALUE
0x13b: V96 = ISZERO V95
0x13c: V97 = 0x141
0x13f: JUMPI 0x141 V96
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x140
[0x140:0x140]
---
Predecessors: [0x139]
Successors: []
---
0x140 INVALID
---
0x140: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x141
[0x141:0x148]
---
Predecessors: [0x139]
Successors: [0x3be]
---
0x141 JUMPDEST
0x142 PUSH2 0xfe
0x145 PUSH2 0x3be
0x148 JUMP
---
0x141: JUMPDEST 
0x142: V98 = 0xfe
0x145: V99 = 0x3be
0x148: JUMP 0x3be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe]
Exit stack: [V10, 0xfe]

================================

Block 0x149
[0x149:0x15c]
---
Predecessors: []
Successors: []
---
0x149 JUMPDEST
0x14a PUSH1 0x40
0x14c DUP1
0x14d MLOAD
0x14e SWAP2
0x14f ISZERO
0x150 ISZERO
0x151 DUP3
0x152 MSTORE
0x153 MLOAD
0x154 SWAP1
0x155 DUP2
0x156 SWAP1
0x157 SUB
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP1
0x15c RETURN
---
0x149: JUMPDEST 
0x14a: V100 = 0x40
0x14d: V101 = M[0x40]
0x14f: V102 = ISZERO S0
0x150: V103 = ISZERO V102
0x152: M[V101] = V103
0x153: V104 = M[0x40]
0x157: V105 = SUB V101 V104
0x158: V106 = 0x20
0x15a: V107 = ADD 0x20 V105
0x15c: RETURN V104 V107
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x15d
[0x15d:0x163]
---
Predecessors: [0x54]
Successors: [0x164, 0x165]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f ISZERO
0x160 PUSH2 0x165
0x163 JUMPI
---
0x15d: JUMPDEST 
0x15e: V108 = CALLVALUE
0x15f: V109 = ISZERO V108
0x160: V110 = 0x165
0x163: JUMPI 0x165 V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x15d]
Successors: []
---
0x164 INVALID
---
0x164: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0x15d]
Successors: [0x418]
---
0x165 JUMPDEST
0x166 PUSH2 0xfe
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 PUSH1 0x4
0x173 CALLDATALOAD
0x174 AND
0x175 PUSH2 0x418
0x178 JUMP
---
0x165: JUMPDEST 
0x166: V111 = 0xfe
0x169: V112 = 0x1
0x16b: V113 = 0xa0
0x16d: V114 = 0x2
0x16f: V115 = EXP 0x2 0xa0
0x170: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V117 = 0x4
0x173: V118 = CALLDATALOAD 0x4
0x174: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x175: V120 = 0x418
0x178: JUMP 0x418
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe, V119]
Exit stack: [V10, 0xfe, V119]

================================

Block 0x179
[0x179:0x18c]
---
Predecessors: []
Successors: []
---
0x179 JUMPDEST
0x17a PUSH1 0x40
0x17c DUP1
0x17d MLOAD
0x17e SWAP2
0x17f ISZERO
0x180 ISZERO
0x181 DUP3
0x182 MSTORE
0x183 MLOAD
0x184 SWAP1
0x185 DUP2
0x186 SWAP1
0x187 SUB
0x188 PUSH1 0x20
0x18a ADD
0x18b SWAP1
0x18c RETURN
---
0x179: JUMPDEST 
0x17a: V121 = 0x40
0x17d: V122 = M[0x40]
0x17f: V123 = ISZERO S0
0x180: V124 = ISZERO V123
0x182: M[V122] = V124
0x183: V125 = M[0x40]
0x187: V126 = SUB V122 V125
0x188: V127 = 0x20
0x18a: V128 = ADD 0x20 V126
0x18c: RETURN V125 V128
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x18d
[0x18d:0x193]
---
Predecessors: [0x5f]
Successors: [0x194, 0x195]
---
0x18d JUMPDEST
0x18e CALLVALUE
0x18f ISZERO
0x190 PUSH2 0x195
0x193 JUMPI
---
0x18d: JUMPDEST 
0x18e: V129 = CALLVALUE
0x18f: V130 = ISZERO V129
0x190: V131 = 0x195
0x193: JUMPI 0x195 V130
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x194
[0x194:0x194]
---
Predecessors: [0x18d]
Successors: []
---
0x194 INVALID
---
0x194: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x195
[0x195:0x19c]
---
Predecessors: [0x18d]
Successors: [0x55c]
---
0x195 JUMPDEST
0x196 PUSH2 0x19d
0x199 PUSH2 0x55c
0x19c JUMP
---
0x195: JUMPDEST 
0x196: V132 = 0x19d
0x199: V133 = 0x55c
0x19c: JUMP 0x55c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x19d]
Exit stack: [V10, 0x19d]

================================

Block 0x19d
[0x19d:0x1b8]
---
Predecessors: [0x55c, 0x59e, 0x5ad]
Successors: []
---
0x19d JUMPDEST
0x19e PUSH1 0x40
0x1a0 DUP1
0x1a1 MLOAD
0x1a2 PUSH1 0x1
0x1a4 PUSH1 0xa0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SUB
0x1aa SWAP1
0x1ab SWAP3
0x1ac AND
0x1ad DUP3
0x1ae MSTORE
0x1af MLOAD
0x1b0 SWAP1
0x1b1 DUP2
0x1b2 SWAP1
0x1b3 SUB
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 SWAP1
0x1b8 RETURN
---
0x19d: JUMPDEST 
0x19e: V134 = 0x40
0x1a1: V135 = M[0x40]
0x1a2: V136 = 0x1
0x1a4: V137 = 0xa0
0x1a6: V138 = 0x2
0x1a8: V139 = EXP 0x2 0xa0
0x1a9: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ac: V141 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: M[V135] = V141
0x1af: V142 = M[0x40]
0x1b3: V143 = SUB V135 V142
0x1b4: V144 = 0x20
0x1b6: V145 = ADD 0x20 V143
0x1b8: RETURN V142 V145
---
Entry stack: [V10, 0x19d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x19d]

================================

Block 0x1b9
[0x1b9:0x1bf]
---
Predecessors: [0x6a]
Successors: [0x1c0, 0x1c1]
---
0x1b9 JUMPDEST
0x1ba CALLVALUE
0x1bb ISZERO
0x1bc PUSH2 0x1c1
0x1bf JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V146 = CALLVALUE
0x1bb: V147 = ISZERO V146
0x1bc: V148 = 0x1c1
0x1bf: JUMPI 0x1c1 V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c0
[0x1c0:0x1c0]
---
Predecessors: [0x1b9]
Successors: []
---
0x1c0 INVALID
---
0x1c0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c1
[0x1c1:0x1c8]
---
Predecessors: [0x1b9]
Successors: [0x56b]
---
0x1c1 JUMPDEST
0x1c2 PUSH2 0x1c9
0x1c5 PUSH2 0x56b
0x1c8 JUMP
---
0x1c1: JUMPDEST 
0x1c2: V149 = 0x1c9
0x1c5: V150 = 0x56b
0x1c8: JUMP 0x56b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c9]
Exit stack: [V10, 0x1c9]

================================

Block 0x1c9
[0x1c9:0x1da]
---
Predecessors: [0x56b, 0x7b2]
Successors: []
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x40
0x1cc DUP1
0x1cd MLOAD
0x1ce SWAP2
0x1cf DUP3
0x1d0 MSTORE
0x1d1 MLOAD
0x1d2 SWAP1
0x1d3 DUP2
0x1d4 SWAP1
0x1d5 SUB
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP1
0x1da RETURN
---
0x1c9: JUMPDEST 
0x1ca: V151 = 0x40
0x1cd: V152 = M[0x40]
0x1d0: M[V152] = S0
0x1d1: V153 = M[0x40]
0x1d5: V154 = SUB V152 V153
0x1d6: V155 = 0x20
0x1d8: V156 = ADD 0x20 V154
0x1da: RETURN V153 V156
---
Entry stack: [V10, 0x1c9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1c9]

================================

Block 0x1db
[0x1db:0x1e1]
---
Predecessors: [0x75]
Successors: [0x1e2, 0x1e3]
---
0x1db JUMPDEST
0x1dc CALLVALUE
0x1dd ISZERO
0x1de PUSH2 0x1e3
0x1e1 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V157 = CALLVALUE
0x1dd: V158 = ISZERO V157
0x1de: V159 = 0x1e3
0x1e1: JUMPI 0x1e3 V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e2
[0x1e2:0x1e2]
---
Predecessors: [0x1db]
Successors: []
---
0x1e2 INVALID
---
0x1e2: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e3
[0x1e3:0x1ed]
---
Predecessors: [0x1db]
Successors: [0x571]
---
0x1e3 JUMPDEST
0x1e4 PUSH2 0xfe
0x1e7 PUSH1 0x4
0x1e9 CALLDATALOAD
0x1ea PUSH2 0x571
0x1ed JUMP
---
0x1e3: JUMPDEST 
0x1e4: V160 = 0xfe
0x1e7: V161 = 0x4
0x1e9: V162 = CALLDATALOAD 0x4
0x1ea: V163 = 0x571
0x1ed: JUMP 0x571
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe, V162]
Exit stack: [V10, 0xfe, V162]

================================

Block 0x1ee
[0x1ee:0x201]
---
Predecessors: []
Successors: []
---
0x1ee JUMPDEST
0x1ef PUSH1 0x40
0x1f1 DUP1
0x1f2 MLOAD
0x1f3 SWAP2
0x1f4 ISZERO
0x1f5 ISZERO
0x1f6 DUP3
0x1f7 MSTORE
0x1f8 MLOAD
0x1f9 SWAP1
0x1fa DUP2
0x1fb SWAP1
0x1fc SUB
0x1fd PUSH1 0x20
0x1ff ADD
0x200 SWAP1
0x201 RETURN
---
0x1ee: JUMPDEST 
0x1ef: V164 = 0x40
0x1f2: V165 = M[0x40]
0x1f4: V166 = ISZERO S0
0x1f5: V167 = ISZERO V166
0x1f7: M[V165] = V167
0x1f8: V168 = M[0x40]
0x1fc: V169 = SUB V165 V168
0x1fd: V170 = 0x20
0x1ff: V171 = ADD 0x20 V169
0x201: RETURN V168 V171
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x202
[0x202:0x208]
---
Predecessors: [0x80]
Successors: [0x209, 0x20a]
---
0x202 JUMPDEST
0x203 CALLVALUE
0x204 ISZERO
0x205 PUSH2 0x20a
0x208 JUMPI
---
0x202: JUMPDEST 
0x203: V172 = CALLVALUE
0x204: V173 = ISZERO V172
0x205: V174 = 0x20a
0x208: JUMPI 0x20a V173
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x209
[0x209:0x209]
---
Predecessors: [0x202]
Successors: []
---
0x209 INVALID
---
0x209: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20a
[0x20a:0x211]
---
Predecessors: [0x202]
Successors: [0x59e]
---
0x20a JUMPDEST
0x20b PUSH2 0x19d
0x20e PUSH2 0x59e
0x211 JUMP
---
0x20a: JUMPDEST 
0x20b: V175 = 0x19d
0x20e: V176 = 0x59e
0x211: JUMP 0x59e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x19d]
Exit stack: [V10, 0x19d]

================================

Block 0x212
[0x212:0x22d]
---
Predecessors: []
Successors: []
---
0x212 JUMPDEST
0x213 PUSH1 0x40
0x215 DUP1
0x216 MLOAD
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f SWAP1
0x220 SWAP3
0x221 AND
0x222 DUP3
0x223 MSTORE
0x224 MLOAD
0x225 SWAP1
0x226 DUP2
0x227 SWAP1
0x228 SUB
0x229 PUSH1 0x20
0x22b ADD
0x22c SWAP1
0x22d RETURN
---
0x212: JUMPDEST 
0x213: V177 = 0x40
0x216: V178 = M[0x40]
0x217: V179 = 0x1
0x219: V180 = 0xa0
0x21b: V181 = 0x2
0x21d: V182 = EXP 0x2 0xa0
0x21e: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V184 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x223: M[V178] = V184
0x224: V185 = M[0x40]
0x228: V186 = SUB V178 V185
0x229: V187 = 0x20
0x22b: V188 = ADD 0x20 V186
0x22d: RETURN V185 V188
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22e
[0x22e:0x234]
---
Predecessors: [0x8b]
Successors: [0x235, 0x236]
---
0x22e JUMPDEST
0x22f CALLVALUE
0x230 ISZERO
0x231 PUSH2 0x236
0x234 JUMPI
---
0x22e: JUMPDEST 
0x22f: V189 = CALLVALUE
0x230: V190 = ISZERO V189
0x231: V191 = 0x236
0x234: JUMPI 0x236 V190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x235
[0x235:0x235]
---
Predecessors: [0x22e]
Successors: []
---
0x235 INVALID
---
0x235: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x236
[0x236:0x23d]
---
Predecessors: [0x22e]
Successors: [0x5ad]
---
0x236 JUMPDEST
0x237 PUSH2 0x19d
0x23a PUSH2 0x5ad
0x23d JUMP
---
0x236: JUMPDEST 
0x237: V192 = 0x19d
0x23a: V193 = 0x5ad
0x23d: JUMP 0x5ad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x19d]
Exit stack: [V10, 0x19d]

================================

Block 0x23e
[0x23e:0x259]
---
Predecessors: []
Successors: []
---
0x23e JUMPDEST
0x23f PUSH1 0x40
0x241 DUP1
0x242 MLOAD
0x243 PUSH1 0x1
0x245 PUSH1 0xa0
0x247 PUSH1 0x2
0x249 EXP
0x24a SUB
0x24b SWAP1
0x24c SWAP3
0x24d AND
0x24e DUP3
0x24f MSTORE
0x250 MLOAD
0x251 SWAP1
0x252 DUP2
0x253 SWAP1
0x254 SUB
0x255 PUSH1 0x20
0x257 ADD
0x258 SWAP1
0x259 RETURN
---
0x23e: JUMPDEST 
0x23f: V194 = 0x40
0x242: V195 = M[0x40]
0x243: V196 = 0x1
0x245: V197 = 0xa0
0x247: V198 = 0x2
0x249: V199 = EXP 0x2 0xa0
0x24a: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24d: V201 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x24f: M[V195] = V201
0x250: V202 = M[0x40]
0x254: V203 = SUB V195 V202
0x255: V204 = 0x20
0x257: V205 = ADD 0x20 V203
0x259: RETURN V202 V205
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25a
[0x25a:0x260]
---
Predecessors: [0x96]
Successors: [0x261, 0x262]
---
0x25a JUMPDEST
0x25b CALLVALUE
0x25c ISZERO
0x25d PUSH2 0x262
0x260 JUMPI
---
0x25a: JUMPDEST 
0x25b: V206 = CALLVALUE
0x25c: V207 = ISZERO V206
0x25d: V208 = 0x262
0x260: JUMPI 0x262 V207
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x261
[0x261:0x261]
---
Predecessors: [0x25a]
Successors: []
---
0x261 INVALID
---
0x261: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x262
[0x262:0x278]
---
Predecessors: [0x25a]
Successors: [0x5bc]
---
0x262 JUMPDEST
0x263 PUSH2 0xfe
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e PUSH1 0x4
0x270 CALLDATALOAD
0x271 AND
0x272 PUSH1 0x24
0x274 CALLDATALOAD
0x275 PUSH2 0x5bc
0x278 JUMP
---
0x262: JUMPDEST 
0x263: V209 = 0xfe
0x266: V210 = 0x1
0x268: V211 = 0xa0
0x26a: V212 = 0x2
0x26c: V213 = EXP 0x2 0xa0
0x26d: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26e: V215 = 0x4
0x270: V216 = CALLDATALOAD 0x4
0x271: V217 = AND V216 0xffffffffffffffffffffffffffffffffffffffff
0x272: V218 = 0x24
0x274: V219 = CALLDATALOAD 0x24
0x275: V220 = 0x5bc
0x278: JUMP 0x5bc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe, V217, V219]
Exit stack: [V10, 0xfe, V217, V219]

================================

Block 0x279
[0x279:0x28c]
---
Predecessors: []
Successors: []
---
0x279 JUMPDEST
0x27a PUSH1 0x40
0x27c DUP1
0x27d MLOAD
0x27e SWAP2
0x27f ISZERO
0x280 ISZERO
0x281 DUP3
0x282 MSTORE
0x283 MLOAD
0x284 SWAP1
0x285 DUP2
0x286 SWAP1
0x287 SUB
0x288 PUSH1 0x20
0x28a ADD
0x28b SWAP1
0x28c RETURN
---
0x279: JUMPDEST 
0x27a: V221 = 0x40
0x27d: V222 = M[0x40]
0x27f: V223 = ISZERO S0
0x280: V224 = ISZERO V223
0x282: M[V222] = V224
0x283: V225 = M[0x40]
0x287: V226 = SUB V222 V225
0x288: V227 = 0x20
0x28a: V228 = ADD 0x20 V226
0x28c: RETURN V225 V228
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28d
[0x28d:0x293]
---
Predecessors: [0xa1]
Successors: [0x294, 0x295]
---
0x28d JUMPDEST
0x28e CALLVALUE
0x28f ISZERO
0x290 PUSH2 0x295
0x293 JUMPI
---
0x28d: JUMPDEST 
0x28e: V229 = CALLVALUE
0x28f: V230 = ISZERO V229
0x290: V231 = 0x295
0x293: JUMPI 0x295 V230
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x294
[0x294:0x294]
---
Predecessors: [0x28d]
Successors: []
---
0x294 INVALID
---
0x294: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x2a8]
---
Predecessors: [0x28d]
Successors: [0x670]
---
0x295 JUMPDEST
0x296 PUSH2 0xfe
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 PUSH1 0x4
0x2a3 CALLDATALOAD
0x2a4 AND
0x2a5 PUSH2 0x670
0x2a8 JUMP
---
0x295: JUMPDEST 
0x296: V232 = 0xfe
0x299: V233 = 0x1
0x29b: V234 = 0xa0
0x29d: V235 = 0x2
0x29f: V236 = EXP 0x2 0xa0
0x2a0: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a1: V238 = 0x4
0x2a3: V239 = CALLDATALOAD 0x4
0x2a4: V240 = AND V239 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V241 = 0x670
0x2a8: JUMP 0x670
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe, V240]
Exit stack: [V10, 0xfe, V240]

================================

Block 0x2a9
[0x2a9:0x2bc]
---
Predecessors: []
Successors: []
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x40
0x2ac DUP1
0x2ad MLOAD
0x2ae SWAP2
0x2af ISZERO
0x2b0 ISZERO
0x2b1 DUP3
0x2b2 MSTORE
0x2b3 MLOAD
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 SWAP1
0x2b7 SUB
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb SWAP1
0x2bc RETURN
---
0x2a9: JUMPDEST 
0x2aa: V242 = 0x40
0x2ad: V243 = M[0x40]
0x2af: V244 = ISZERO S0
0x2b0: V245 = ISZERO V244
0x2b2: M[V243] = V245
0x2b3: V246 = M[0x40]
0x2b7: V247 = SUB V243 V246
0x2b8: V248 = 0x20
0x2ba: V249 = ADD 0x20 V247
0x2bc: RETURN V246 V249
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2bd
[0x2bd:0x2c3]
---
Predecessors: [0xac]
Successors: [0x2c4, 0x2c5]
---
0x2bd JUMPDEST
0x2be CALLVALUE
0x2bf ISZERO
0x2c0 PUSH2 0x2c5
0x2c3 JUMPI
---
0x2bd: JUMPDEST 
0x2be: V250 = CALLVALUE
0x2bf: V251 = ISZERO V250
0x2c0: V252 = 0x2c5
0x2c3: JUMPI 0x2c5 V251
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c4
[0x2c4:0x2c4]
---
Predecessors: [0x2bd]
Successors: []
---
0x2c4 INVALID
---
0x2c4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c5
[0x2c5:0x2cc]
---
Predecessors: [0x2bd]
Successors: [0x6be]
---
0x2c5 JUMPDEST
0x2c6 PUSH2 0xfe
0x2c9 PUSH2 0x6be
0x2cc JUMP
---
0x2c5: JUMPDEST 
0x2c6: V253 = 0xfe
0x2c9: V254 = 0x6be
0x2cc: JUMP 0x6be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe]
Exit stack: [V10, 0xfe]

================================

Block 0x2cd
[0x2cd:0x2e0]
---
Predecessors: []
Successors: []
---
0x2cd JUMPDEST
0x2ce PUSH1 0x40
0x2d0 DUP1
0x2d1 MLOAD
0x2d2 SWAP2
0x2d3 ISZERO
0x2d4 ISZERO
0x2d5 DUP3
0x2d6 MSTORE
0x2d7 MLOAD
0x2d8 SWAP1
0x2d9 DUP2
0x2da SWAP1
0x2db SUB
0x2dc PUSH1 0x20
0x2de ADD
0x2df SWAP1
0x2e0 RETURN
---
0x2cd: JUMPDEST 
0x2ce: V255 = 0x40
0x2d1: V256 = M[0x40]
0x2d3: V257 = ISZERO S0
0x2d4: V258 = ISZERO V257
0x2d6: M[V256] = V258
0x2d7: V259 = M[0x40]
0x2db: V260 = SUB V256 V259
0x2dc: V261 = 0x20
0x2de: V262 = ADD 0x20 V260
0x2e0: RETURN V259 V262
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e1
[0x2e1:0x2e7]
---
Predecessors: [0xb7]
Successors: [0x2e8, 0x2e9]
---
0x2e1 JUMPDEST
0x2e2 CALLVALUE
0x2e3 ISZERO
0x2e4 PUSH2 0x2e9
0x2e7 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V263 = CALLVALUE
0x2e3: V264 = ISZERO V263
0x2e4: V265 = 0x2e9
0x2e7: JUMPI 0x2e9 V264
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e8
[0x2e8:0x2e8]
---
Predecessors: [0x2e1]
Successors: []
---
0x2e8 INVALID
---
0x2e8: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e9
[0x2e9:0x2ff]
---
Predecessors: [0x2e1]
Successors: [0x72b]
---
0x2e9 JUMPDEST
0x2ea PUSH2 0xfe
0x2ed PUSH1 0x4
0x2ef DUP1
0x2f0 CALLDATALOAD
0x2f1 SWAP1
0x2f2 PUSH1 0x24
0x2f4 DUP1
0x2f5 CALLDATALOAD
0x2f6 SWAP1
0x2f7 DUP2
0x2f8 ADD
0x2f9 SWAP2
0x2fa ADD
0x2fb CALLDATALOAD
0x2fc PUSH2 0x72b
0x2ff JUMP
---
0x2e9: JUMPDEST 
0x2ea: V266 = 0xfe
0x2ed: V267 = 0x4
0x2f0: V268 = CALLDATALOAD 0x4
0x2f2: V269 = 0x24
0x2f5: V270 = CALLDATALOAD 0x24
0x2f8: V271 = ADD V270 0x24
0x2fa: V272 = ADD 0x4 V270
0x2fb: V273 = CALLDATALOAD V272
0x2fc: V274 = 0x72b
0x2ff: JUMP 0x72b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe, V268, V271, V273]
Exit stack: [V10, 0xfe, V268, V271, V273]

================================

Block 0x300
[0x300:0x313]
---
Predecessors: []
Successors: []
---
0x300 JUMPDEST
0x301 PUSH1 0x40
0x303 DUP1
0x304 MLOAD
0x305 SWAP2
0x306 ISZERO
0x307 ISZERO
0x308 DUP3
0x309 MSTORE
0x30a MLOAD
0x30b SWAP1
0x30c DUP2
0x30d SWAP1
0x30e SUB
0x30f PUSH1 0x20
0x311 ADD
0x312 SWAP1
0x313 RETURN
---
0x300: JUMPDEST 
0x301: V275 = 0x40
0x304: V276 = M[0x40]
0x306: V277 = ISZERO S0
0x307: V278 = ISZERO V277
0x309: M[V276] = V278
0x30a: V279 = M[0x40]
0x30e: V280 = SUB V276 V279
0x30f: V281 = 0x20
0x311: V282 = ADD 0x20 V280
0x313: RETURN V279 V282
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x314
[0x314:0x31a]
---
Predecessors: [0xc2]
Successors: [0x31b, 0x31c]
---
0x314 JUMPDEST
0x315 CALLVALUE
0x316 ISZERO
0x317 PUSH2 0x31c
0x31a JUMPI
---
0x314: JUMPDEST 
0x315: V283 = CALLVALUE
0x316: V284 = ISZERO V283
0x317: V285 = 0x31c
0x31a: JUMPI 0x31c V284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31b
[0x31b:0x31b]
---
Predecessors: [0x314]
Successors: []
---
0x31b INVALID
---
0x31b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31c
[0x31c:0x323]
---
Predecessors: [0x314]
Successors: [0x7b2]
---
0x31c JUMPDEST
0x31d PUSH2 0x1c9
0x320 PUSH2 0x7b2
0x323 JUMP
---
0x31c: JUMPDEST 
0x31d: V286 = 0x1c9
0x320: V287 = 0x7b2
0x323: JUMP 0x7b2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c9]
Exit stack: [V10, 0x1c9]

================================

Block 0x324
[0x324:0x335]
---
Predecessors: []
Successors: []
---
0x324 JUMPDEST
0x325 PUSH1 0x40
0x327 DUP1
0x328 MLOAD
0x329 SWAP2
0x32a DUP3
0x32b MSTORE
0x32c MLOAD
0x32d SWAP1
0x32e DUP2
0x32f SWAP1
0x330 SUB
0x331 PUSH1 0x20
0x333 ADD
0x334 SWAP1
0x335 RETURN
---
0x324: JUMPDEST 
0x325: V288 = 0x40
0x328: V289 = M[0x40]
0x32b: M[V289] = S0
0x32c: V290 = M[0x40]
0x330: V291 = SUB V289 V290
0x331: V292 = 0x20
0x333: V293 = ADD 0x20 V291
0x335: RETURN V290 V293
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x336
[0x336:0x34d]
---
Predecessors: [0xde]
Successors: [0x34e, 0x353]
---
0x336 JUMPDEST
0x337 PUSH1 0x0
0x339 DUP1
0x33a SLOAD
0x33b CALLER
0x33c PUSH1 0x1
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 SUB
0x344 SWAP1
0x345 DUP2
0x346 AND
0x347 SWAP2
0x348 AND
0x349 EQ
0x34a PUSH2 0x353
0x34d JUMPI
---
0x336: JUMPDEST 
0x337: V294 = 0x0
0x33a: V295 = S[0x0]
0x33b: V296 = CALLER
0x33c: V297 = 0x1
0x33e: V298 = 0xa0
0x340: V299 = 0x2
0x342: V300 = EXP 0x2 0xa0
0x343: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x346: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x348: V303 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x349: V304 = EQ V303 V302
0x34a: V305 = 0x353
0x34d: JUMPI 0x353 V304
---
Entry stack: [V10, 0xfe, V65, V68, V70]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xfe, V65, V68, V70, 0x0]

================================

Block 0x34e
[0x34e:0x352]
---
Predecessors: [0x336]
Successors: []
---
0x34e PUSH1 0x0
0x350 PUSH1 0x0
0x352 REVERT
---
0x34e: V306 = 0x0
0x350: V307 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V10, 0xfe, V65, V68, V70, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V65, V68, V70, 0x0]

================================

Block 0x353
[0x353:0x389]
---
Predecessors: [0x336]
Successors: [0x38a]
---
0x353 JUMPDEST
0x354 DUP4
0x355 PUSH1 0x1
0x357 PUSH1 0xa0
0x359 PUSH1 0x2
0x35b EXP
0x35c SUB
0x35d AND
0x35e CALLVALUE
0x35f DUP5
0x360 DUP5
0x361 PUSH1 0x40
0x363 MLOAD
0x364 DUP1
0x365 DUP4
0x366 DUP4
0x367 DUP1
0x368 DUP3
0x369 DUP5
0x36a CALLDATACOPY
0x36b DUP3
0x36c ADD
0x36d SWAP2
0x36e POP
0x36f POP
0x370 SWAP3
0x371 POP
0x372 POP
0x373 POP
0x374 PUSH1 0x0
0x376 PUSH1 0x40
0x378 MLOAD
0x379 DUP1
0x37a DUP4
0x37b SUB
0x37c DUP2
0x37d DUP6
0x37e DUP8
0x37f PUSH2 0x8796
0x382 GAS
0x383 SUB
0x384 CALL
0x385 SWAP4
0x386 POP
0x387 POP
0x388 POP
0x389 POP
---
0x353: JUMPDEST 
0x355: V308 = 0x1
0x357: V309 = 0xa0
0x359: V310 = 0x2
0x35b: V311 = EXP 0x2 0xa0
0x35c: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35d: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x35e: V314 = CALLVALUE
0x361: V315 = 0x40
0x363: V316 = M[0x40]
0x36a: CALLDATACOPY V316 V68 V70
0x36c: V317 = ADD V316 V70
0x374: V318 = 0x0
0x376: V319 = 0x40
0x378: V320 = M[0x40]
0x37b: V321 = SUB V317 V320
0x37f: V322 = 0x8796
0x382: V323 = GAS
0x383: V324 = SUB V323 0x8796
0x384: V325 = CALL V324 V313 V314 V320 V321 V320 0x0
---
Entry stack: [V10, 0xfe, V65, V68, V70, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V325]
Exit stack: [V10, 0xfe, V65, V68, V70, V325]

================================

Block 0x38a
[0x38a:0x390]
---
Predecessors: [0x353, 0x741, 0x753, 0x765]
Successors: [0xfe]
---
0x38a JUMPDEST
0x38b SWAP4
0x38c SWAP3
0x38d POP
0x38e POP
0x38f POP
0x390 JUMP
---
0x38a: JUMPDEST 
0x390: JUMP 0xfe
---
Entry stack: [V10, 0xfe, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x391
[0x391:0x3aa]
---
Predecessors: [0x11a]
Successors: [0x3ab, 0x3b0]
---
0x391 JUMPDEST
0x392 PUSH1 0x1
0x394 SLOAD
0x395 PUSH1 0x0
0x397 SWAP1
0x398 CALLER
0x399 PUSH1 0x1
0x39b PUSH1 0xa0
0x39d PUSH1 0x2
0x39f EXP
0x3a0 SUB
0x3a1 SWAP1
0x3a2 DUP2
0x3a3 AND
0x3a4 SWAP2
0x3a5 AND
0x3a6 EQ
0x3a7 PUSH2 0x3b0
0x3aa JUMPI
---
0x391: JUMPDEST 
0x392: V326 = 0x1
0x394: V327 = S[0x1]
0x395: V328 = 0x0
0x398: V329 = CALLER
0x399: V330 = 0x1
0x39b: V331 = 0xa0
0x39d: V332 = 0x2
0x39f: V333 = EXP 0x2 0xa0
0x3a0: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a3: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x3a5: V336 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V337 = EQ V336 V335
0x3a7: V338 = 0x3b0
0x3aa: JUMPI 0x3b0 V337
---
Entry stack: [V10, 0xfe, V85]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xfe, V85, 0x0]

================================

Block 0x3ab
[0x3ab:0x3af]
---
Predecessors: [0x391]
Successors: []
---
0x3ab PUSH1 0x0
0x3ad PUSH1 0x0
0x3af REVERT
---
0x3ab: V339 = 0x0
0x3ad: V340 = 0x0
0x3af: REVERT 0x0 0x0
---
Entry stack: [V10, 0xfe, V85, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V85, 0x0]

================================

Block 0x3b0
[0x3b0:0x3b8]
---
Predecessors: [0x391]
Successors: [0x3b9]
---
0x3b0 JUMPDEST
0x3b1 POP
0x3b2 PUSH1 0x4
0x3b4 DUP2
0x3b5 SWAP1
0x3b6 SSTORE
0x3b7 PUSH1 0x1
---
0x3b0: JUMPDEST 
0x3b2: V341 = 0x4
0x3b6: S[0x4] = V85
0x3b7: V342 = 0x1
---
Entry stack: [V10, 0xfe, V85, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0xfe, V85, 0x1]

================================

Block 0x3b9
[0x3b9:0x3bd]
---
Predecessors: [0x3b0]
Successors: [0xfe]
---
0x3b9 JUMPDEST
0x3ba SWAP2
0x3bb SWAP1
0x3bc POP
0x3bd JUMP
---
0x3b9: JUMPDEST 
0x3bd: JUMP 0xfe
---
Entry stack: [V10, 0xfe, V85, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x3be
[0x3be:0x3d5]
---
Predecessors: [0x141]
Successors: [0x3d6, 0x3db]
---
0x3be JUMPDEST
0x3bf PUSH1 0x0
0x3c1 DUP1
0x3c2 SLOAD
0x3c3 CALLER
0x3c4 PUSH1 0x1
0x3c6 PUSH1 0xa0
0x3c8 PUSH1 0x2
0x3ca EXP
0x3cb SUB
0x3cc SWAP1
0x3cd DUP2
0x3ce AND
0x3cf SWAP2
0x3d0 AND
0x3d1 EQ
0x3d2 PUSH2 0x3db
0x3d5 JUMPI
---
0x3be: JUMPDEST 
0x3bf: V343 = 0x0
0x3c2: V344 = S[0x0]
0x3c3: V345 = CALLER
0x3c4: V346 = 0x1
0x3c6: V347 = 0xa0
0x3c8: V348 = 0x2
0x3ca: V349 = EXP 0x2 0xa0
0x3cb: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ce: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x3d0: V352 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V353 = EQ V352 V351
0x3d2: V354 = 0x3db
0x3d5: JUMPI 0x3db V353
---
Entry stack: [V10, 0xfe]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x3d6
[0x3d6:0x3da]
---
Predecessors: [0x3be]
Successors: []
---
0x3d6 PUSH1 0x0
0x3d8 PUSH1 0x0
0x3da REVERT
---
0x3d6: V355 = 0x0
0x3d8: V356 = 0x0
0x3da: REVERT 0x0 0x0
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x3db
[0x3db:0x40f]
---
Predecessors: [0x3be]
Successors: [0x410, 0x411]
---
0x3db JUMPDEST
0x3dc PUSH1 0x0
0x3de DUP1
0x3df SLOAD
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb SWAP2
0x3ec DUP3
0x3ed AND
0x3ee SWAP3
0x3ef ADDRESS
0x3f0 SWAP1
0x3f1 SWAP3
0x3f2 AND
0x3f3 BALANCE
0x3f4 DUP1
0x3f5 ISZERO
0x3f6 PUSH2 0x8fc
0x3f9 MUL
0x3fa SWAP3
0x3fb SWAP1
0x3fc SWAP2
0x3fd SWAP1
0x3fe DUP2
0x3ff DUP2
0x400 DUP2
0x401 DUP6
0x402 DUP9
0x403 DUP9
0x404 CALL
0x405 SWAP4
0x406 POP
0x407 POP
0x408 POP
0x409 POP
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x411
0x40f JUMPI
---
0x3db: JUMPDEST 
0x3dc: V357 = 0x0
0x3df: V358 = S[0x0]
0x3e0: V359 = 0x40
0x3e2: V360 = M[0x40]
0x3e3: V361 = 0x1
0x3e5: V362 = 0xa0
0x3e7: V363 = 0x2
0x3e9: V364 = EXP 0x2 0xa0
0x3ea: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ed: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x3ef: V367 = ADDRESS
0x3f2: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x3f3: V369 = BALANCE V368
0x3f5: V370 = ISZERO V369
0x3f6: V371 = 0x8fc
0x3f9: V372 = MUL 0x8fc V370
0x404: V373 = CALL V372 V366 V369 V360 0x0 V360 0x0
0x40a: V374 = ISZERO V373
0x40b: V375 = ISZERO V374
0x40c: V376 = 0x411
0x40f: JUMPI 0x411 V375
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x410
[0x410:0x410]
---
Predecessors: [0x3db]
Successors: []
---
0x410 INVALID
---
0x410: INVALID 
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x411
[0x411:0x414]
---
Predecessors: [0x3db]
Successors: [0x415]
---
0x411 JUMPDEST
0x412 POP
0x413 PUSH1 0x1
---
0x411: JUMPDEST 
0x413: V377 = 0x1
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0xfe, 0x1]

================================

Block 0x415
[0x415:0x417]
---
Predecessors: [0x411, 0x6d4, 0x6e6, 0x6f8]
Successors: [0xfe]
---
0x415 JUMPDEST
0x416 SWAP1
0x417 JUMP
---
0x415: JUMPDEST 
0x417: JUMP 0xfe
---
Entry stack: [V10, 0xfe, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x418
[0x418:0x433]
---
Predecessors: [0x165]
Successors: [0x434, 0x439]
---
0x418 JUMPDEST
0x419 PUSH1 0x0
0x41b DUP1
0x41c SLOAD
0x41d DUP2
0x41e SWAP1
0x41f DUP2
0x420 SWAP1
0x421 CALLER
0x422 PUSH1 0x1
0x424 PUSH1 0xa0
0x426 PUSH1 0x2
0x428 EXP
0x429 SUB
0x42a SWAP1
0x42b DUP2
0x42c AND
0x42d SWAP2
0x42e AND
0x42f EQ
0x430 PUSH2 0x439
0x433 JUMPI
---
0x418: JUMPDEST 
0x419: V378 = 0x0
0x41c: V379 = S[0x0]
0x421: V380 = CALLER
0x422: V381 = 0x1
0x424: V382 = 0xa0
0x426: V383 = 0x2
0x428: V384 = EXP 0x2 0xa0
0x429: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42c: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x42e: V387 = AND V379 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V388 = EQ V387 V386
0x430: V389 = 0x439
0x433: JUMPI 0x439 V388
---
Entry stack: [V10, 0xfe, V119]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0xfe, V119, 0x0, 0x0, 0x0]

================================

Block 0x434
[0x434:0x438]
---
Predecessors: [0x418]
Successors: []
---
0x434 PUSH1 0x0
0x436 PUSH1 0x0
0x438 REVERT
---
0x434: V390 = 0x0
0x436: V391 = 0x0
0x438: REVERT 0x0 0x0
---
Entry stack: [V10, 0xfe, V119, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V119, 0x0, 0x0, 0x0]

================================

Block 0x439
[0x439:0x4b3]
---
Predecessors: [0x418]
Successors: [0x4b4, 0x4b5]
---
0x439 JUMPDEST
0x43a DUP4
0x43b SWAP2
0x43c POP
0x43d DUP2
0x43e PUSH1 0x1
0x440 PUSH1 0xa0
0x442 PUSH1 0x2
0x444 EXP
0x445 SUB
0x446 AND
0x447 PUSH4 0x70a08231
0x44c ADDRESS
0x44d PUSH1 0x0
0x44f PUSH1 0x40
0x451 MLOAD
0x452 PUSH1 0x20
0x454 ADD
0x455 MSTORE
0x456 PUSH1 0x40
0x458 MLOAD
0x459 DUP3
0x45a PUSH4 0xffffffff
0x45f AND
0x460 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x47e MUL
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x4
0x483 ADD
0x484 DUP1
0x485 DUP3
0x486 PUSH1 0x1
0x488 PUSH1 0xa0
0x48a PUSH1 0x2
0x48c EXP
0x48d SUB
0x48e AND
0x48f PUSH1 0x1
0x491 PUSH1 0xa0
0x493 PUSH1 0x2
0x495 EXP
0x496 SUB
0x497 AND
0x498 DUP2
0x499 MSTORE
0x49a PUSH1 0x20
0x49c ADD
0x49d SWAP2
0x49e POP
0x49f POP
0x4a0 PUSH1 0x20
0x4a2 PUSH1 0x40
0x4a4 MLOAD
0x4a5 DUP1
0x4a6 DUP4
0x4a7 SUB
0x4a8 DUP2
0x4a9 PUSH1 0x0
0x4ab DUP8
0x4ac DUP1
0x4ad EXTCODESIZE
0x4ae ISZERO
0x4af ISZERO
0x4b0 PUSH2 0x4b5
0x4b3 JUMPI
---
0x439: JUMPDEST 
0x43e: V392 = 0x1
0x440: V393 = 0xa0
0x442: V394 = 0x2
0x444: V395 = EXP 0x2 0xa0
0x445: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x447: V398 = 0x70a08231
0x44c: V399 = ADDRESS
0x44d: V400 = 0x0
0x44f: V401 = 0x40
0x451: V402 = M[0x40]
0x452: V403 = 0x20
0x454: V404 = ADD 0x20 V402
0x455: M[V404] = 0x0
0x456: V405 = 0x40
0x458: V406 = M[0x40]
0x45a: V407 = 0xffffffff
0x45f: V408 = AND 0xffffffff 0x70a08231
0x460: V409 = 0x100000000000000000000000000000000000000000000000000000000
0x47e: V410 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x480: M[V406] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x481: V411 = 0x4
0x483: V412 = ADD 0x4 V406
0x486: V413 = 0x1
0x488: V414 = 0xa0
0x48a: V415 = 0x2
0x48c: V416 = EXP 0x2 0xa0
0x48d: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48e: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x48f: V419 = 0x1
0x491: V420 = 0xa0
0x493: V421 = 0x2
0x495: V422 = EXP 0x2 0xa0
0x496: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x497: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x499: M[V412] = V424
0x49a: V425 = 0x20
0x49c: V426 = ADD 0x20 V412
0x4a0: V427 = 0x20
0x4a2: V428 = 0x40
0x4a4: V429 = M[0x40]
0x4a7: V430 = SUB V426 V429
0x4a9: V431 = 0x0
0x4ad: V432 = EXTCODESIZE V397
0x4ae: V433 = ISZERO V432
0x4af: V434 = ISZERO V433
0x4b0: V435 = 0x4b5
0x4b3: JUMPI 0x4b5 V434
---
Entry stack: [V10, 0xfe, V119, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V397, 0x70a08231, V426, 0x20, V429, V430, V429, 0x0, V397]
Exit stack: [V10, 0xfe, V119, 0x0, V119, 0x0, V397, 0x70a08231, V426, 0x20, V429, V430, V429, 0x0, V397]

================================

Block 0x4b4
[0x4b4:0x4b4]
---
Predecessors: [0x439]
Successors: []
---
0x4b4 INVALID
---
0x4b4: INVALID 
---
Entry stack: [V10, 0xfe, V119, 0x0, V119, 0x0, V397, 0x70a08231, V426, 0x20, V429, V430, V429, 0x0, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V119, 0x0, V119, 0x0, V397, 0x70a08231, V426, 0x20, V429, V430, V429, 0x0, V397]

================================

Block 0x4b5
[0x4b5:0x4c1]
---
Predecessors: [0x439]
Successors: [0x4c2, 0x4c3]
---
0x4b5 JUMPDEST
0x4b6 PUSH2 0x2c6
0x4b9 GAS
0x4ba SUB
0x4bb CALL
0x4bc ISZERO
0x4bd ISZERO
0x4be PUSH2 0x4c3
0x4c1 JUMPI
---
0x4b5: JUMPDEST 
0x4b6: V436 = 0x2c6
0x4b9: V437 = GAS
0x4ba: V438 = SUB V437 0x2c6
0x4bb: V439 = CALL V438 V397 0x0 V429 V430 V429 0x20
0x4bc: V440 = ISZERO V439
0x4bd: V441 = ISZERO V440
0x4be: V442 = 0x4c3
0x4c1: JUMPI 0x4c3 V441
---
Entry stack: [V10, 0xfe, V119, 0x0, V119, 0x0, V397, 0x70a08231, V426, 0x20, V429, V430, V429, 0x0, V397]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xfe, V119, 0x0, V119, 0x0, V397, 0x70a08231, V426]

================================

Block 0x4c2
[0x4c2:0x4c2]
---
Predecessors: [0x4b5]
Successors: []
---
0x4c2 INVALID
---
0x4c2: INVALID 
---
Entry stack: [V10, 0xfe, V119, 0x0, V119, 0x0, V397, 0x70a08231, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V119, 0x0, V119, 0x0, V397, 0x70a08231, V426]

================================

Block 0x4c3
[0x4c3:0x53b]
---
Predecessors: [0x4b5]
Successors: [0x53c, 0x53d]
---
0x4c3 JUMPDEST
0x4c4 POP
0x4c5 POP
0x4c6 PUSH1 0x40
0x4c8 DUP1
0x4c9 MLOAD
0x4ca DUP1
0x4cb MLOAD
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf SLOAD
0x4d0 PUSH1 0x20
0x4d2 SWAP4
0x4d3 DUP5
0x4d4 ADD
0x4d5 DUP3
0x4d6 SWAP1
0x4d7 MSTORE
0x4d8 DUP5
0x4d9 MLOAD
0x4da PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4fb DUP2
0x4fc MSTORE
0x4fd PUSH1 0x1
0x4ff PUSH1 0xa0
0x501 PUSH1 0x2
0x503 EXP
0x504 SUB
0x505 SWAP2
0x506 DUP3
0x507 AND
0x508 PUSH1 0x4
0x50a DUP3
0x50b ADD
0x50c MSTORE
0x50d PUSH1 0x24
0x50f DUP2
0x510 ADD
0x511 DUP5
0x512 SWAP1
0x513 MSTORE
0x514 SWAP5
0x515 MLOAD
0x516 SWAP3
0x517 SWAP7
0x518 POP
0x519 DUP8
0x51a AND
0x51b SWAP5
0x51c POP
0x51d PUSH4 0xa9059cbb
0x522 SWAP4
0x523 PUSH1 0x44
0x525 DUP1
0x526 DUP3
0x527 ADD
0x528 SWAP5
0x529 SWAP4
0x52a SWAP3
0x52b SWAP2
0x52c DUP4
0x52d SWAP1
0x52e SUB
0x52f ADD
0x530 SWAP1
0x531 DUP3
0x532 SWAP1
0x533 DUP8
0x534 DUP1
0x535 EXTCODESIZE
0x536 ISZERO
0x537 ISZERO
0x538 PUSH2 0x53d
0x53b JUMPI
---
0x4c3: JUMPDEST 
0x4c6: V443 = 0x40
0x4c9: V444 = M[0x40]
0x4cb: V445 = M[V444]
0x4cc: V446 = 0x0
0x4cf: V447 = S[0x0]
0x4d0: V448 = 0x20
0x4d4: V449 = ADD 0x20 V444
0x4d7: M[V449] = 0x0
0x4d9: V450 = M[0x40]
0x4da: V451 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4fc: M[V450] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4fd: V452 = 0x1
0x4ff: V453 = 0xa0
0x501: V454 = 0x2
0x503: V455 = EXP 0x2 0xa0
0x504: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x507: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x508: V458 = 0x4
0x50b: V459 = ADD V450 0x4
0x50c: M[V459] = V457
0x50d: V460 = 0x24
0x510: V461 = ADD V450 0x24
0x513: M[V461] = V445
0x515: V462 = M[0x40]
0x51a: V463 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x51d: V464 = 0xa9059cbb
0x523: V465 = 0x44
0x527: V466 = ADD V450 0x44
0x52e: V467 = SUB V450 V462
0x52f: V468 = ADD V467 0x44
0x535: V469 = EXTCODESIZE V463
0x536: V470 = ISZERO V469
0x537: V471 = ISZERO V470
0x538: V472 = 0x53d
0x53b: JUMPI 0x53d V471
---
Entry stack: [V10, 0xfe, V119, 0x0, V119, 0x0, V397, 0x70a08231, V426]
Stack pops: 5
Stack additions: [S4, V445, V463, 0xa9059cbb, V466, 0x20, V462, V468, V462, 0x0, V463]
Exit stack: [V10, 0xfe, V119, 0x0, V119, V445, V463, 0xa9059cbb, V466, 0x20, V462, V468, V462, 0x0, V463]

================================

Block 0x53c
[0x53c:0x53c]
---
Predecessors: [0x4c3]
Successors: []
---
0x53c INVALID
---
0x53c: INVALID 
---
Entry stack: [V10, 0xfe, V119, 0x0, V119, V445, V463, 0xa9059cbb, V466, 0x20, V462, V468, V462, 0x0, V463]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V119, 0x0, V119, V445, V463, 0xa9059cbb, V466, 0x20, V462, V468, V462, 0x0, V463]

================================

Block 0x53d
[0x53d:0x549]
---
Predecessors: [0x4c3]
Successors: [0x54a, 0x54b]
---
0x53d JUMPDEST
0x53e PUSH2 0x2c6
0x541 GAS
0x542 SUB
0x543 CALL
0x544 ISZERO
0x545 ISZERO
0x546 PUSH2 0x54b
0x549 JUMPI
---
0x53d: JUMPDEST 
0x53e: V473 = 0x2c6
0x541: V474 = GAS
0x542: V475 = SUB V474 0x2c6
0x543: V476 = CALL V475 V463 0x0 V462 V468 V462 0x20
0x544: V477 = ISZERO V476
0x545: V478 = ISZERO V477
0x546: V479 = 0x54b
0x549: JUMPI 0x54b V478
---
Entry stack: [V10, 0xfe, V119, 0x0, V119, V445, V463, 0xa9059cbb, V466, 0x20, V462, V468, V462, 0x0, V463]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xfe, V119, 0x0, V119, V445, V463, 0xa9059cbb, V466]

================================

Block 0x54a
[0x54a:0x54a]
---
Predecessors: [0x53d]
Successors: []
---
0x54a INVALID
---
0x54a: INVALID 
---
Entry stack: [V10, 0xfe, V119, 0x0, V119, V445, V463, 0xa9059cbb, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V119, 0x0, V119, V445, V463, 0xa9059cbb, V466]

================================

Block 0x54b
[0x54b:0x554]
---
Predecessors: [0x53d]
Successors: [0x555]
---
0x54b JUMPDEST
0x54c POP
0x54d POP
0x54e PUSH1 0x40
0x550 MLOAD
0x551 MLOAD
0x552 SWAP4
0x553 POP
0x554 POP
---
0x54b: JUMPDEST 
0x54e: V480 = 0x40
0x550: V481 = M[0x40]
0x551: V482 = M[V481]
---
Entry stack: [V10, 0xfe, V119, 0x0, V119, V445, V463, 0xa9059cbb, V466]
Stack pops: 6
Stack additions: [V482, S4, S3]
Exit stack: [V10, 0xfe, V119, V482, V119, V445]

================================

Block 0x555
[0x555:0x55b]
---
Predecessors: [0x54b]
Successors: [0xfe]
---
0x555 JUMPDEST
0x556 POP
0x557 POP
0x558 SWAP2
0x559 SWAP1
0x55a POP
0x55b JUMP
---
0x555: JUMPDEST 
0x55b: JUMP 0xfe
---
Entry stack: [V10, 0xfe, V119, V482, V119, V445]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, V482]

================================

Block 0x55c
[0x55c:0x56a]
---
Predecessors: [0x195]
Successors: [0x19d]
---
0x55c JUMPDEST
0x55d PUSH1 0x2
0x55f SLOAD
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 AND
0x569 DUP2
0x56a JUMP
---
0x55c: JUMPDEST 
0x55d: V483 = 0x2
0x55f: V484 = S[0x2]
0x560: V485 = 0x1
0x562: V486 = 0xa0
0x564: V487 = 0x2
0x566: V488 = EXP 0x2 0xa0
0x567: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x568: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x56a: JUMP 0x19d
---
Entry stack: [V10, 0x19d]
Stack pops: 1
Stack additions: [S0, V490]
Exit stack: [V10, 0x19d, V490]

================================

Block 0x56b
[0x56b:0x570]
---
Predecessors: [0x1c1]
Successors: [0x1c9]
---
0x56b JUMPDEST
0x56c PUSH1 0x4
0x56e SLOAD
0x56f DUP2
0x570 JUMP
---
0x56b: JUMPDEST 
0x56c: V491 = 0x4
0x56e: V492 = S[0x4]
0x570: JUMP 0x1c9
---
Entry stack: [V10, 0x1c9]
Stack pops: 1
Stack additions: [S0, V492]
Exit stack: [V10, 0x1c9, V492]

================================

Block 0x571
[0x571:0x58a]
---
Predecessors: [0x1e3]
Successors: [0x58b, 0x590]
---
0x571 JUMPDEST
0x572 PUSH1 0x1
0x574 SLOAD
0x575 PUSH1 0x0
0x577 SWAP1
0x578 CALLER
0x579 PUSH1 0x1
0x57b PUSH1 0xa0
0x57d PUSH1 0x2
0x57f EXP
0x580 SUB
0x581 SWAP1
0x582 DUP2
0x583 AND
0x584 SWAP2
0x585 AND
0x586 EQ
0x587 PUSH2 0x590
0x58a JUMPI
---
0x571: JUMPDEST 
0x572: V493 = 0x1
0x574: V494 = S[0x1]
0x575: V495 = 0x0
0x578: V496 = CALLER
0x579: V497 = 0x1
0x57b: V498 = 0xa0
0x57d: V499 = 0x2
0x57f: V500 = EXP 0x2 0xa0
0x580: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x583: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x585: V503 = AND V494 0xffffffffffffffffffffffffffffffffffffffff
0x586: V504 = EQ V503 V502
0x587: V505 = 0x590
0x58a: JUMPI 0x590 V504
---
Entry stack: [V10, 0xfe, V162]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xfe, V162, 0x0]

================================

Block 0x58b
[0x58b:0x58f]
---
Predecessors: [0x571]
Successors: []
---
0x58b PUSH1 0x0
0x58d PUSH1 0x0
0x58f REVERT
---
0x58b: V506 = 0x0
0x58d: V507 = 0x0
0x58f: REVERT 0x0 0x0
---
Entry stack: [V10, 0xfe, V162, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V162, 0x0]

================================

Block 0x590
[0x590:0x598]
---
Predecessors: [0x571]
Successors: [0x599]
---
0x590 JUMPDEST
0x591 POP
0x592 PUSH1 0x3
0x594 DUP2
0x595 SWAP1
0x596 SSTORE
0x597 PUSH1 0x1
---
0x590: JUMPDEST 
0x592: V508 = 0x3
0x596: S[0x3] = V162
0x597: V509 = 0x1
---
Entry stack: [V10, 0xfe, V162, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0xfe, V162, 0x1]

================================

Block 0x599
[0x599:0x59d]
---
Predecessors: [0x590]
Successors: [0xfe]
---
0x599 JUMPDEST
0x59a SWAP2
0x59b SWAP1
0x59c POP
0x59d JUMP
---
0x599: JUMPDEST 
0x59d: JUMP 0xfe
---
Entry stack: [V10, 0xfe, V162, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x59e
[0x59e:0x5ac]
---
Predecessors: [0x20a]
Successors: [0x19d]
---
0x59e JUMPDEST
0x59f PUSH1 0x0
0x5a1 SLOAD
0x5a2 PUSH1 0x1
0x5a4 PUSH1 0xa0
0x5a6 PUSH1 0x2
0x5a8 EXP
0x5a9 SUB
0x5aa AND
0x5ab DUP2
0x5ac JUMP
---
0x59e: JUMPDEST 
0x59f: V510 = 0x0
0x5a1: V511 = S[0x0]
0x5a2: V512 = 0x1
0x5a4: V513 = 0xa0
0x5a6: V514 = 0x2
0x5a8: V515 = EXP 0x2 0xa0
0x5a9: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5aa: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x5ac: JUMP 0x19d
---
Entry stack: [V10, 0x19d]
Stack pops: 1
Stack additions: [S0, V517]
Exit stack: [V10, 0x19d, V517]

================================

Block 0x5ad
[0x5ad:0x5bb]
---
Predecessors: [0x236]
Successors: [0x19d]
---
0x5ad JUMPDEST
0x5ae PUSH1 0x1
0x5b0 SLOAD
0x5b1 PUSH1 0x1
0x5b3 PUSH1 0xa0
0x5b5 PUSH1 0x2
0x5b7 EXP
0x5b8 SUB
0x5b9 AND
0x5ba DUP2
0x5bb JUMP
---
0x5ad: JUMPDEST 
0x5ae: V518 = 0x1
0x5b0: V519 = S[0x1]
0x5b1: V520 = 0x1
0x5b3: V521 = 0xa0
0x5b5: V522 = 0x2
0x5b7: V523 = EXP 0x2 0xa0
0x5b8: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b9: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x5bb: JUMP 0x19d
---
Entry stack: [V10, 0x19d]
Stack pops: 1
Stack additions: [S0, V525]
Exit stack: [V10, 0x19d, V525]

================================

Block 0x5bc
[0x5bc:0x5d5]
---
Predecessors: [0x262]
Successors: [0x5d6, 0x5db]
---
0x5bc JUMPDEST
0x5bd PUSH1 0x0
0x5bf DUP1
0x5c0 SLOAD
0x5c1 DUP2
0x5c2 SWAP1
0x5c3 CALLER
0x5c4 PUSH1 0x1
0x5c6 PUSH1 0xa0
0x5c8 PUSH1 0x2
0x5ca EXP
0x5cb SUB
0x5cc SWAP1
0x5cd DUP2
0x5ce AND
0x5cf SWAP2
0x5d0 AND
0x5d1 EQ
0x5d2 PUSH2 0x5db
0x5d5 JUMPI
---
0x5bc: JUMPDEST 
0x5bd: V526 = 0x0
0x5c0: V527 = S[0x0]
0x5c3: V528 = CALLER
0x5c4: V529 = 0x1
0x5c6: V530 = 0xa0
0x5c8: V531 = 0x2
0x5ca: V532 = EXP 0x2 0xa0
0x5cb: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ce: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x5d0: V535 = AND V527 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V536 = EQ V535 V534
0x5d2: V537 = 0x5db
0x5d5: JUMPI 0x5db V536
---
Entry stack: [V10, 0xfe, V217, V219]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xfe, V217, V219, 0x0, 0x0]

================================

Block 0x5d6
[0x5d6:0x5da]
---
Predecessors: [0x5bc]
Successors: []
---
0x5d6 PUSH1 0x0
0x5d8 PUSH1 0x0
0x5da REVERT
---
0x5d6: V538 = 0x0
0x5d8: V539 = 0x0
0x5da: REVERT 0x0 0x0
---
Entry stack: [V10, 0xfe, V217, V219, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V217, V219, 0x0, 0x0]

================================

Block 0x5db
[0x5db:0x64f]
---
Predecessors: [0x5bc]
Successors: [0x650, 0x651]
---
0x5db JUMPDEST
0x5dc POP
0x5dd PUSH1 0x0
0x5df DUP1
0x5e0 SLOAD
0x5e1 PUSH1 0x40
0x5e3 DUP1
0x5e4 MLOAD
0x5e5 PUSH1 0x20
0x5e7 SWAP1
0x5e8 DUP2
0x5e9 ADD
0x5ea DUP5
0x5eb SWAP1
0x5ec MSTORE
0x5ed DUP2
0x5ee MLOAD
0x5ef PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x610 DUP2
0x611 MSTORE
0x612 PUSH1 0x1
0x614 PUSH1 0xa0
0x616 PUSH1 0x2
0x618 EXP
0x619 SUB
0x61a SWAP4
0x61b DUP5
0x61c AND
0x61d PUSH1 0x4
0x61f DUP3
0x620 ADD
0x621 MSTORE
0x622 PUSH1 0x24
0x624 DUP2
0x625 ADD
0x626 DUP8
0x627 SWAP1
0x628 MSTORE
0x629 SWAP2
0x62a MLOAD
0x62b DUP8
0x62c SWAP5
0x62d SWAP4
0x62e DUP6
0x62f AND
0x630 SWAP4
0x631 PUSH4 0xa9059cbb
0x636 SWAP4
0x637 PUSH1 0x44
0x639 DUP1
0x63a DUP3
0x63b ADD
0x63c SWAP5
0x63d SWAP4
0x63e SWAP3
0x63f SWAP2
0x640 DUP4
0x641 SWAP1
0x642 SUB
0x643 ADD
0x644 SWAP1
0x645 DUP3
0x646 SWAP1
0x647 DUP8
0x648 DUP1
0x649 EXTCODESIZE
0x64a ISZERO
0x64b ISZERO
0x64c PUSH2 0x651
0x64f JUMPI
---
0x5db: JUMPDEST 
0x5dd: V540 = 0x0
0x5e0: V541 = S[0x0]
0x5e1: V542 = 0x40
0x5e4: V543 = M[0x40]
0x5e5: V544 = 0x20
0x5e9: V545 = ADD 0x20 V543
0x5ec: M[V545] = 0x0
0x5ee: V546 = M[0x40]
0x5ef: V547 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x611: M[V546] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x612: V548 = 0x1
0x614: V549 = 0xa0
0x616: V550 = 0x2
0x618: V551 = EXP 0x2 0xa0
0x619: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61c: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x61d: V554 = 0x4
0x620: V555 = ADD V546 0x4
0x621: M[V555] = V553
0x622: V556 = 0x24
0x625: V557 = ADD V546 0x24
0x628: M[V557] = V219
0x62a: V558 = M[0x40]
0x62f: V559 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x631: V560 = 0xa9059cbb
0x637: V561 = 0x44
0x63b: V562 = ADD V546 0x44
0x642: V563 = SUB V546 V558
0x643: V564 = ADD V563 0x44
0x649: V565 = EXTCODESIZE V559
0x64a: V566 = ISZERO V565
0x64b: V567 = ISZERO V566
0x64c: V568 = 0x651
0x64f: JUMPI 0x651 V567
---
Entry stack: [V10, 0xfe, V217, V219, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, V559, 0xa9059cbb, V562, 0x20, V558, V564, V558, 0x0, V559]
Exit stack: [V10, 0xfe, V217, V219, 0x0, V217, V559, 0xa9059cbb, V562, 0x20, V558, V564, V558, 0x0, V559]

================================

Block 0x650
[0x650:0x650]
---
Predecessors: [0x5db]
Successors: []
---
0x650 INVALID
---
0x650: INVALID 
---
Entry stack: [V10, 0xfe, V217, V219, 0x0, V217, V559, 0xa9059cbb, V562, 0x20, V558, V564, V558, 0x0, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V217, V219, 0x0, V217, V559, 0xa9059cbb, V562, 0x20, V558, V564, V558, 0x0, V559]

================================

Block 0x651
[0x651:0x65d]
---
Predecessors: [0x5db]
Successors: [0x65e, 0x65f]
---
0x651 JUMPDEST
0x652 PUSH2 0x2c6
0x655 GAS
0x656 SUB
0x657 CALL
0x658 ISZERO
0x659 ISZERO
0x65a PUSH2 0x65f
0x65d JUMPI
---
0x651: JUMPDEST 
0x652: V569 = 0x2c6
0x655: V570 = GAS
0x656: V571 = SUB V570 0x2c6
0x657: V572 = CALL V571 V559 0x0 V558 V564 V558 0x20
0x658: V573 = ISZERO V572
0x659: V574 = ISZERO V573
0x65a: V575 = 0x65f
0x65d: JUMPI 0x65f V574
---
Entry stack: [V10, 0xfe, V217, V219, 0x0, V217, V559, 0xa9059cbb, V562, 0x20, V558, V564, V558, 0x0, V559]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xfe, V217, V219, 0x0, V217, V559, 0xa9059cbb, V562]

================================

Block 0x65e
[0x65e:0x65e]
---
Predecessors: [0x651]
Successors: []
---
0x65e INVALID
---
0x65e: INVALID 
---
Entry stack: [V10, 0xfe, V217, V219, 0x0, V217, V559, 0xa9059cbb, V562]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V217, V219, 0x0, V217, V559, 0xa9059cbb, V562]

================================

Block 0x65f
[0x65f:0x668]
---
Predecessors: [0x651]
Successors: [0x669]
---
0x65f JUMPDEST
0x660 POP
0x661 POP
0x662 PUSH1 0x40
0x664 MLOAD
0x665 MLOAD
0x666 SWAP3
0x667 POP
0x668 POP
---
0x65f: JUMPDEST 
0x662: V576 = 0x40
0x664: V577 = M[0x40]
0x665: V578 = M[V577]
---
Entry stack: [V10, 0xfe, V217, V219, 0x0, V217, V559, 0xa9059cbb, V562]
Stack pops: 5
Stack additions: [V578, S3]
Exit stack: [V10, 0xfe, V217, V219, V578, V217]

================================

Block 0x669
[0x669:0x66f]
---
Predecessors: [0x65f]
Successors: [0xfe]
---
0x669 JUMPDEST
0x66a POP
0x66b SWAP3
0x66c SWAP2
0x66d POP
0x66e POP
0x66f JUMP
---
0x669: JUMPDEST 
0x66f: JUMP 0xfe
---
Entry stack: [V10, 0xfe, V217, V219, V578, V217]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, V578]

================================

Block 0x670
[0x670:0x687]
---
Predecessors: [0x295]
Successors: [0x688, 0x68d]
---
0x670 JUMPDEST
0x671 PUSH1 0x0
0x673 DUP1
0x674 SLOAD
0x675 CALLER
0x676 PUSH1 0x1
0x678 PUSH1 0xa0
0x67a PUSH1 0x2
0x67c EXP
0x67d SUB
0x67e SWAP1
0x67f DUP2
0x680 AND
0x681 SWAP2
0x682 AND
0x683 EQ
0x684 PUSH2 0x68d
0x687 JUMPI
---
0x670: JUMPDEST 
0x671: V579 = 0x0
0x674: V580 = S[0x0]
0x675: V581 = CALLER
0x676: V582 = 0x1
0x678: V583 = 0xa0
0x67a: V584 = 0x2
0x67c: V585 = EXP 0x2 0xa0
0x67d: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x680: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x682: V588 = AND V580 0xffffffffffffffffffffffffffffffffffffffff
0x683: V589 = EQ V588 V587
0x684: V590 = 0x68d
0x687: JUMPI 0x68d V589
---
Entry stack: [V10, 0xfe, V240]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xfe, V240, 0x0]

================================

Block 0x688
[0x688:0x68c]
---
Predecessors: [0x670]
Successors: []
---
0x688 PUSH1 0x0
0x68a PUSH1 0x0
0x68c REVERT
---
0x688: V591 = 0x0
0x68a: V592 = 0x0
0x68c: REVERT 0x0 0x0
---
Entry stack: [V10, 0xfe, V240, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V240, 0x0]

================================

Block 0x68d
[0x68d:0x6b8]
---
Predecessors: [0x670]
Successors: [0x6b9]
---
0x68d JUMPDEST
0x68e POP
0x68f PUSH1 0x2
0x691 DUP1
0x692 SLOAD
0x693 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a8 NOT
0x6a9 AND
0x6aa PUSH1 0x1
0x6ac PUSH1 0xa0
0x6ae PUSH1 0x2
0x6b0 EXP
0x6b1 SUB
0x6b2 DUP4
0x6b3 AND
0x6b4 OR
0x6b5 SWAP1
0x6b6 SSTORE
0x6b7 PUSH1 0x1
---
0x68d: JUMPDEST 
0x68f: V593 = 0x2
0x692: V594 = S[0x2]
0x693: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a8: V596 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6a9: V597 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V594
0x6aa: V598 = 0x1
0x6ac: V599 = 0xa0
0x6ae: V600 = 0x2
0x6b0: V601 = EXP 0x2 0xa0
0x6b1: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b3: V603 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x6b4: V604 = OR V603 V597
0x6b6: S[0x2] = V604
0x6b7: V605 = 0x1
---
Entry stack: [V10, 0xfe, V240, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0xfe, V240, 0x1]

================================

Block 0x6b9
[0x6b9:0x6bd]
---
Predecessors: [0x68d]
Successors: [0xfe]
---
0x6b9 JUMPDEST
0x6ba SWAP2
0x6bb SWAP1
0x6bc POP
0x6bd JUMP
---
0x6b9: JUMPDEST 
0x6bd: JUMP 0xfe
---
Entry stack: [V10, 0xfe, V240, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x6be
[0x6be:0x6d3]
---
Predecessors: [0x2c5]
Successors: [0x6d4, 0x6db]
---
0x6be JUMPDEST
0x6bf PUSH1 0x2
0x6c1 SLOAD
0x6c2 PUSH1 0x0
0x6c4 SWAP1
0x6c5 PUSH1 0x1
0x6c7 PUSH1 0xa0
0x6c9 PUSH1 0x2
0x6cb EXP
0x6cc SUB
0x6cd AND
0x6ce ISZERO
0x6cf ISZERO
0x6d0 PUSH2 0x6db
0x6d3 JUMPI
---
0x6be: JUMPDEST 
0x6bf: V606 = 0x2
0x6c1: V607 = S[0x2]
0x6c2: V608 = 0x0
0x6c5: V609 = 0x1
0x6c7: V610 = 0xa0
0x6c9: V611 = 0x2
0x6cb: V612 = EXP 0x2 0xa0
0x6cc: V613 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cd: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x6ce: V615 = ISZERO V614
0x6cf: V616 = ISZERO V615
0x6d0: V617 = 0x6db
0x6d3: JUMPI 0x6db V616
---
Entry stack: [V10, 0xfe]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x6d4
[0x6d4:0x6da]
---
Predecessors: [0x6be]
Successors: [0x415]
---
0x6d4 POP
0x6d5 PUSH1 0x0
0x6d7 PUSH2 0x415
0x6da JUMP
---
0x6d5: V618 = 0x0
0x6d7: V619 = 0x415
0x6da: JUMP 0x415
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x6db
[0x6db:0x6e5]
---
Predecessors: [0x6be]
Successors: [0x6e6, 0x6ed]
---
0x6db JUMPDEST
0x6dc PUSH1 0x4
0x6de SLOAD
0x6df TIMESTAMP
0x6e0 LT
0x6e1 ISZERO
0x6e2 PUSH2 0x6ed
0x6e5 JUMPI
---
0x6db: JUMPDEST 
0x6dc: V620 = 0x4
0x6de: V621 = S[0x4]
0x6df: V622 = TIMESTAMP
0x6e0: V623 = LT V622 V621
0x6e1: V624 = ISZERO V623
0x6e2: V625 = 0x6ed
0x6e5: JUMPI 0x6ed V624
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x6e6
[0x6e6:0x6ec]
---
Predecessors: [0x6db]
Successors: [0x415]
---
0x6e6 POP
0x6e7 PUSH1 0x0
0x6e9 PUSH2 0x415
0x6ec JUMP
---
0x6e7: V626 = 0x0
0x6e9: V627 = 0x415
0x6ec: JUMP 0x415
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x6ed
[0x6ed:0x6f7]
---
Predecessors: [0x6db]
Successors: [0x6f8, 0x6ff]
---
0x6ed JUMPDEST
0x6ee PUSH1 0x3
0x6f0 SLOAD
0x6f1 NUMBER
0x6f2 LT
0x6f3 ISZERO
0x6f4 PUSH2 0x6ff
0x6f7 JUMPI
---
0x6ed: JUMPDEST 
0x6ee: V628 = 0x3
0x6f0: V629 = S[0x3]
0x6f1: V630 = NUMBER
0x6f2: V631 = LT V630 V629
0x6f3: V632 = ISZERO V631
0x6f4: V633 = 0x6ff
0x6f7: JUMPI 0x6ff V632
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x6f8
[0x6f8:0x6fe]
---
Predecessors: [0x6ed]
Successors: [0x415]
---
0x6f8 POP
0x6f9 PUSH1 0x0
0x6fb PUSH2 0x415
0x6fe JUMP
---
0x6f9: V634 = 0x0
0x6fb: V635 = 0x415
0x6fe: JUMP 0x415
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0xfe, 0x0]

================================

Block 0x6ff
[0x6ff:0x727]
---
Predecessors: [0x6ed]
Successors: [0x728]
---
0x6ff JUMPDEST
0x700 PUSH1 0x2
0x702 SLOAD
0x703 PUSH1 0x40
0x705 MLOAD
0x706 PUSH1 0x1
0x708 PUSH1 0xa0
0x70a PUSH1 0x2
0x70c EXP
0x70d SUB
0x70e SWAP2
0x70f DUP3
0x710 AND
0x711 SWAP2
0x712 ADDRESS
0x713 AND
0x714 BALANCE
0x715 SWAP1
0x716 PUSH1 0x0
0x718 DUP2
0x719 DUP2
0x71a DUP2
0x71b DUP6
0x71c DUP8
0x71d PUSH2 0x8796
0x720 GAS
0x721 SUB
0x722 CALL
0x723 SWAP4
0x724 POP
0x725 POP
0x726 POP
0x727 POP
---
0x6ff: JUMPDEST 
0x700: V636 = 0x2
0x702: V637 = S[0x2]
0x703: V638 = 0x40
0x705: V639 = M[0x40]
0x706: V640 = 0x1
0x708: V641 = 0xa0
0x70a: V642 = 0x2
0x70c: V643 = EXP 0x2 0xa0
0x70d: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x710: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x712: V646 = ADDRESS
0x713: V647 = AND V646 0xffffffffffffffffffffffffffffffffffffffff
0x714: V648 = BALANCE V647
0x716: V649 = 0x0
0x71d: V650 = 0x8796
0x720: V651 = GAS
0x721: V652 = SUB V651 0x8796
0x722: V653 = CALL V652 V645 V648 V639 0x0 V639 0x0
---
Entry stack: [V10, 0xfe, 0x0]
Stack pops: 1
Stack additions: [V653]
Exit stack: [V10, 0xfe, V653]

================================

Block 0x728
[0x728:0x72a]
---
Predecessors: [0x6ff]
Successors: [0xfe]
---
0x728 JUMPDEST
0x729 SWAP1
0x72a JUMP
---
0x728: JUMPDEST 
0x72a: JUMP 0xfe
---
Entry stack: [V10, 0xfe, V653]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V653]

================================

Block 0x72b
[0x72b:0x740]
---
Predecessors: [0x2e9]
Successors: [0x741, 0x748]
---
0x72b JUMPDEST
0x72c PUSH1 0x2
0x72e SLOAD
0x72f PUSH1 0x0
0x731 SWAP1
0x732 PUSH1 0x1
0x734 PUSH1 0xa0
0x736 PUSH1 0x2
0x738 EXP
0x739 SUB
0x73a AND
0x73b ISZERO
0x73c ISZERO
0x73d PUSH2 0x748
0x740 JUMPI
---
0x72b: JUMPDEST 
0x72c: V654 = 0x2
0x72e: V655 = S[0x2]
0x72f: V656 = 0x0
0x732: V657 = 0x1
0x734: V658 = 0xa0
0x736: V659 = 0x2
0x738: V660 = EXP 0x2 0xa0
0x739: V661 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73a: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x73b: V663 = ISZERO V662
0x73c: V664 = ISZERO V663
0x73d: V665 = 0x748
0x740: JUMPI 0x748 V664
---
Entry stack: [V10, 0xfe, V268, V271, V273]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xfe, V268, V271, V273, 0x0]

================================

Block 0x741
[0x741:0x747]
---
Predecessors: [0x72b]
Successors: [0x38a]
---
0x741 POP
0x742 PUSH1 0x0
0x744 PUSH2 0x38a
0x747 JUMP
---
0x742: V666 = 0x0
0x744: V667 = 0x38a
0x747: JUMP 0x38a
---
Entry stack: [V10, 0xfe, V268, V271, V273, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0xfe, V268, V271, V273, 0x0]

================================

Block 0x748
[0x748:0x752]
---
Predecessors: [0x72b]
Successors: [0x753, 0x75a]
---
0x748 JUMPDEST
0x749 PUSH1 0x4
0x74b SLOAD
0x74c TIMESTAMP
0x74d LT
0x74e ISZERO
0x74f PUSH2 0x75a
0x752 JUMPI
---
0x748: JUMPDEST 
0x749: V668 = 0x4
0x74b: V669 = S[0x4]
0x74c: V670 = TIMESTAMP
0x74d: V671 = LT V670 V669
0x74e: V672 = ISZERO V671
0x74f: V673 = 0x75a
0x752: JUMPI 0x75a V672
---
Entry stack: [V10, 0xfe, V268, V271, V273, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V268, V271, V273, 0x0]

================================

Block 0x753
[0x753:0x759]
---
Predecessors: [0x748]
Successors: [0x38a]
---
0x753 POP
0x754 PUSH1 0x0
0x756 PUSH2 0x38a
0x759 JUMP
---
0x754: V674 = 0x0
0x756: V675 = 0x38a
0x759: JUMP 0x38a
---
Entry stack: [V10, 0xfe, V268, V271, V273, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0xfe, V268, V271, V273, 0x0]

================================

Block 0x75a
[0x75a:0x764]
---
Predecessors: [0x748]
Successors: [0x765, 0x76c]
---
0x75a JUMPDEST
0x75b PUSH1 0x3
0x75d SLOAD
0x75e NUMBER
0x75f LT
0x760 ISZERO
0x761 PUSH2 0x76c
0x764 JUMPI
---
0x75a: JUMPDEST 
0x75b: V676 = 0x3
0x75d: V677 = S[0x3]
0x75e: V678 = NUMBER
0x75f: V679 = LT V678 V677
0x760: V680 = ISZERO V679
0x761: V681 = 0x76c
0x764: JUMPI 0x76c V680
---
Entry stack: [V10, 0xfe, V268, V271, V273, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe, V268, V271, V273, 0x0]

================================

Block 0x765
[0x765:0x76b]
---
Predecessors: [0x75a]
Successors: [0x38a]
---
0x765 POP
0x766 PUSH1 0x0
0x768 PUSH2 0x38a
0x76b JUMP
---
0x766: V682 = 0x0
0x768: V683 = 0x38a
0x76b: JUMP 0x38a
---
Entry stack: [V10, 0xfe, V268, V271, V273, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0xfe, V268, V271, V273, 0x0]

================================

Block 0x76c
[0x76c:0x7aa]
---
Predecessors: [0x75a]
Successors: [0x7ab]
---
0x76c JUMPDEST
0x76d PUSH1 0x2
0x76f SLOAD
0x770 PUSH1 0x40
0x772 MLOAD
0x773 PUSH1 0x1
0x775 PUSH1 0xa0
0x777 PUSH1 0x2
0x779 EXP
0x77a SUB
0x77b SWAP1
0x77c SWAP2
0x77d AND
0x77e SWAP1
0x77f DUP6
0x780 SWAP1
0x781 DUP6
0x782 SWAP1
0x783 DUP6
0x784 SWAP1
0x785 DUP1
0x786 DUP4
0x787 DUP4
0x788 DUP1
0x789 DUP3
0x78a DUP5
0x78b CALLDATACOPY
0x78c DUP3
0x78d ADD
0x78e SWAP2
0x78f POP
0x790 POP
0x791 SWAP3
0x792 POP
0x793 POP
0x794 POP
0x795 PUSH1 0x0
0x797 PUSH1 0x40
0x799 MLOAD
0x79a DUP1
0x79b DUP4
0x79c SUB
0x79d DUP2
0x79e DUP6
0x79f DUP8
0x7a0 PUSH2 0x8796
0x7a3 GAS
0x7a4 SUB
0x7a5 CALL
0x7a6 SWAP4
0x7a7 POP
0x7a8 POP
0x7a9 POP
0x7aa POP
---
0x76c: JUMPDEST 
0x76d: V684 = 0x2
0x76f: V685 = S[0x2]
0x770: V686 = 0x40
0x772: V687 = M[0x40]
0x773: V688 = 0x1
0x775: V689 = 0xa0
0x777: V690 = 0x2
0x779: V691 = EXP 0x2 0xa0
0x77a: V692 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77d: V693 = AND V685 0xffffffffffffffffffffffffffffffffffffffff
0x78b: CALLDATACOPY V687 V271 V273
0x78d: V694 = ADD V687 V273
0x795: V695 = 0x0
0x797: V696 = 0x40
0x799: V697 = M[0x40]
0x79c: V698 = SUB V694 V697
0x7a0: V699 = 0x8796
0x7a3: V700 = GAS
0x7a4: V701 = SUB V700 0x8796
0x7a5: V702 = CALL V701 V693 V268 V697 V698 V697 0x0
---
Entry stack: [V10, 0xfe, V268, V271, V273, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V702]
Exit stack: [V10, 0xfe, V268, V271, V273, V702]

================================

Block 0x7ab
[0x7ab:0x7b1]
---
Predecessors: [0x76c]
Successors: [0xfe]
---
0x7ab JUMPDEST
0x7ac SWAP4
0x7ad SWAP3
0x7ae POP
0x7af POP
0x7b0 POP
0x7b1 JUMP
---
0x7ab: JUMPDEST 
0x7b1: JUMP 0xfe
---
Entry stack: [V10, 0xfe, V268, V271, V273, V702]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, V702]

================================

Block 0x7b2
[0x7b2:0x7b7]
---
Predecessors: [0x31c]
Successors: [0x1c9]
---
0x7b2 JUMPDEST
0x7b3 PUSH1 0x3
0x7b5 SLOAD
0x7b6 DUP2
0x7b7 JUMP
---
0x7b2: JUMPDEST 
0x7b3: V703 = 0x3
0x7b5: V704 = S[0x3]
0x7b7: JUMP 0x1c9
---
Entry stack: [V10, 0x1c9]
Stack pops: 1
Stack additions: [S0, V704]
Exit stack: [V10, 0x1c9, V704]

================================

Block 0x7b8
[0x7b8:0x7e6]
---
Predecessors: []
Successors: []
---
0x7b8 STOP
0x7b9 LOG1
0x7ba PUSH6 0x627a7a723058
0x7c1 SHA3
0x7c2 MISSING 0xad
0x7c3 CREATE
0x7c4 MISSING 0xfc
0x7c5 MISSING 0x2a
0x7c6 MISSING 0xc2
0x7c7 PUSH31 0x722819dfae976f5ff30aa1a20ae5ce8bd702df9ad8a3bb801bd30029
---
0x7b8: STOP 
0x7b9: LOG S0 S1 S2
0x7ba: V705 = 0x627a7a723058
0x7c1: V706 = SHA3 0x627a7a723058 S3
0x7c2: MISSING 0xad
0x7c3: V707 = CREATE S0 S1 S2
0x7c4: MISSING 0xfc
0x7c5: MISSING 0x2a
0x7c6: MISSING 0xc2
0x7c7: V708 = 0x722819dfae976f5ff30aa1a20ae5ce8bd702df9ad8a3bb801bd30029
---
Entry stack: []
Stack pops: 0
Stack additions: [V706, V707, 0x722819dfae976f5ff30aa1a20ae5ce8bd702df9ad8a3bb801bd30029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3710668
Entry block: 0xd6
Exit block: 0xfe
Body: 0xd6, 0xdd, 0xde, 0xfe, 0x336, 0x34e, 0x353, 0x38a

Function 1:
Public function signature: 0x3beb26c4
Entry block: 0x112
Exit block: 0xfe
Body: 0xfe, 0x112, 0x119, 0x11a, 0x391, 0x3ab, 0x3b0, 0x3b9

Function 2:
Public function signature: 0x4efdac37
Entry block: 0x139
Exit block: 0xfe
Body: 0xfe, 0x139, 0x140, 0x141, 0x3be, 0x3d6, 0x3db, 0x410, 0x411, 0x415

Function 3:
Public function signature: 0x5629d258
Entry block: 0x15d
Exit block: 0xfe
Body: 0xfe, 0x15d, 0x164, 0x165, 0x418, 0x434, 0x439, 0x4b4, 0x4b5, 0x4c2, 0x4c3, 0x53c, 0x53d, 0x54a, 0x54b, 0x555

Function 4:
Public function signature: 0x5d452201
Entry block: 0x18d
Exit block: 0x19d
Body: 0x18d, 0x194, 0x195, 0x19d, 0x55c

Function 5:
Public function signature: 0x83b8511d
Entry block: 0x1b9
Exit block: 0x1c9
Body: 0x1b9, 0x1c0, 0x1c1, 0x1c9, 0x56b

Function 6:
Public function signature: 0x87cea3ae
Entry block: 0x1db
Exit block: 0xfe
Body: 0xfe, 0x1db, 0x1e2, 0x1e3, 0x571, 0x58b, 0x590, 0x599

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x202
Exit block: 0x19d
Body: 0x19d, 0x202, 0x209, 0x20a, 0x59e

Function 8:
Public function signature: 0x91cca3db
Entry block: 0x22e
Exit block: 0x19d
Body: 0x19d, 0x22e, 0x235, 0x236, 0x5ad

Function 9:
Public function signature: 0x9e281a98
Entry block: 0x25a
Exit block: 0xfe
Body: 0xfe, 0x25a, 0x261, 0x262, 0x5bc, 0x5d6, 0x5db, 0x650, 0x651, 0x65e, 0x65f, 0x669

Function 10:
Public function signature: 0xb6f50c29
Entry block: 0x28d
Exit block: 0xfe
Body: 0xfe, 0x28d, 0x294, 0x295, 0x670, 0x688, 0x68d, 0x6b9

Function 11:
Public function signature: 0xcfbbe427
Entry block: 0x2bd
Exit block: 0xfe
Body: 0xfe, 0x2bd, 0x2c4, 0x2c5, 0x415, 0x6be, 0x6d4, 0x6db, 0x6e6, 0x6ed, 0x6f8, 0x6ff, 0x728

Function 12:
Public function signature: 0xe088d322
Entry block: 0x2e1
Exit block: 0xfe
Body: 0xfe, 0x2e1, 0x2e8, 0x2e9, 0x38a, 0x72b, 0x741, 0x748, 0x753, 0x75a, 0x765, 0x76c, 0x7ab

Function 13:
Public function signature: 0xfb6acf56
Entry block: 0x314
Exit block: 0x1c9
Body: 0x1c9, 0x314, 0x31b, 0x31c, 0x7b2

Function 14:
Public fallback function
Entry block: 0xcd
Exit block: 0xd4
Body: 0xcd, 0xd1, 0xd2, 0xd4

