Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x70d1abe1
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x70d1abe1
0x3c: V13 = EQ 0x70d1abe1 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x96]
---
0x41 DUP1
0x42 PUSH4 0xb69ef8a8
0x47 EQ
0x48 PUSH2 0x96
0x4b JUMPI
---
0x42: V15 = 0xb69ef8a8
0x47: V16 = EQ 0xb69ef8a8 V11
0x48: V17 = 0x96
0x4b: JUMPI 0x96 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x7b]
---
Predecessors: [0x51]
Successors: [0xc1]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x7c
0x62 PUSH1 0x4
0x64 DUP1
0x65 CALLDATASIZE
0x66 SUB
0x67 DUP2
0x68 ADD
0x69 SWAP1
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d SWAP1
0x6e PUSH1 0x20
0x70 ADD
0x71 SWAP1
0x72 SWAP3
0x73 SWAP2
0x74 SWAP1
0x75 POP
0x76 POP
0x77 POP
0x78 PUSH2 0xc1
0x7b JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x7c
0x62: V24 = 0x4
0x65: V25 = CALLDATASIZE
0x66: V26 = SUB V25 0x4
0x68: V27 = ADD 0x4 V26
0x6c: V28 = CALLDATALOAD 0x4
0x6e: V29 = 0x20
0x70: V30 = ADD 0x20 0x4
0x78: V31 = 0xc1
0x7b: JUMP 0xc1
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x7c, V28]
Exit stack: [V11, 0x7c, V28]

================================

Block 0x7c
[0x7c:0x95]
---
Predecessors: [0x31a]
Successors: []
---
0x7c JUMPDEST
0x7d PUSH1 0x40
0x7f MLOAD
0x80 DUP1
0x81 DUP3
0x82 ISZERO
0x83 ISZERO
0x84 ISZERO
0x85 ISZERO
0x86 DUP2
0x87 MSTORE
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP2
0x8c POP
0x8d POP
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 SWAP2
0x93 SUB
0x94 SWAP1
0x95 RETURN
---
0x7c: JUMPDEST 
0x7d: V32 = 0x40
0x7f: V33 = M[0x40]
0x82: V34 = ISZERO {0x0, 0x1}
0x83: V35 = ISZERO V34
0x84: V36 = ISZERO V35
0x85: V37 = ISZERO V36
0x87: M[V33] = V37
0x88: V38 = 0x20
0x8a: V39 = ADD 0x20 V33
0x8e: V40 = 0x40
0x90: V41 = M[0x40]
0x93: V42 = SUB V39 V41
0x95: RETURN V41 V42
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x96
[0x96:0x9d]
---
Predecessors: [0x41]
Successors: [0x9e, 0xa2]
---
0x96 JUMPDEST
0x97 CALLVALUE
0x98 DUP1
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x96: JUMPDEST 
0x97: V43 = CALLVALUE
0x99: V44 = ISZERO V43
0x9a: V45 = 0xa2
0x9d: JUMPI 0xa2 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x96]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V46 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xa2
[0xa2:0xaa]
---
Predecessors: [0x96]
Successors: [0x320]
---
0xa2 JUMPDEST
0xa3 POP
0xa4 PUSH2 0xab
0xa7 PUSH2 0x320
0xaa JUMP
---
0xa2: JUMPDEST 
0xa4: V47 = 0xab
0xa7: V48 = 0x320
0xaa: JUMP 0x320
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xab]
Exit stack: [V11, 0xab]

================================

Block 0xab
[0xab:0xc0]
---
Predecessors: [0x320]
Successors: []
---
0xab JUMPDEST
0xac PUSH1 0x40
0xae MLOAD
0xaf DUP1
0xb0 DUP3
0xb1 DUP2
0xb2 MSTORE
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 SWAP2
0xb7 POP
0xb8 POP
0xb9 PUSH1 0x40
0xbb MLOAD
0xbc DUP1
0xbd SWAP2
0xbe SUB
0xbf SWAP1
0xc0 RETURN
---
0xab: JUMPDEST 
0xac: V49 = 0x40
0xae: V50 = M[0x40]
0xb2: M[V50] = V189
0xb3: V51 = 0x20
0xb5: V52 = ADD 0x20 V50
0xb9: V53 = 0x40
0xbb: V54 = M[0x40]
0xbe: V55 = SUB V52 V54
0xc0: RETURN V54 V55
---
Entry stack: [V11, V189]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc1
[0xc1:0x11a]
---
Predecessors: [0x5d]
Successors: [0x11b, 0x11f]
---
0xc1 JUMPDEST
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 SWAP1
0xc9 SLOAD
0xca SWAP1
0xcb PUSH2 0x100
0xce EXP
0xcf SWAP1
0xd0 DIV
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 AND
0xe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc AND
0xfd CALLER
0xfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113 AND
0x114 EQ
0x115 ISZERO
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0xc1: JUMPDEST 
0xc2: V56 = 0x0
0xc5: V57 = 0x0
0xc9: V58 = S[0x0]
0xcb: V59 = 0x100
0xce: V60 = EXP 0x100 0x0
0xd0: V61 = DIV V58 0x1
0xd1: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xe7: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xfd: V66 = CALLER
0xfe: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x113: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x114: V69 = EQ V68 V65
0x115: V70 = ISZERO V69
0x116: V71 = ISZERO V70
0x117: V72 = 0x11f
0x11a: JUMPI 0x11f V71
---
Entry stack: [V11, 0x7c, V28]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x7c, V28, 0x0, 0x0]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0xc1]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V73 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7c, V28, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c, V28, 0x0, 0x0]

================================

Block 0x11f
[0x11f:0x253]
---
Predecessors: [0xc1]
Successors: [0x254]
---
0x11f JUMPDEST
0x120 PUSH1 0xd6
0x122 PUSH1 0x94
0x124 ADDRESS
0x125 DUP6
0x126 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x147 MUL
0x148 PUSH1 0x40
0x14a MLOAD
0x14b PUSH1 0x20
0x14d ADD
0x14e DUP1
0x14f DUP6
0x150 PUSH1 0xff
0x152 AND
0x153 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x174 MUL
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x1
0x179 ADD
0x17a DUP5
0x17b PUSH1 0xff
0x17d AND
0x17e PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x19f MUL
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 PUSH1 0x1
0x1a4 ADD
0x1a5 DUP4
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb AND
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 PUSH13 0x1000000000000000000000000
0x1e0 MUL
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x14
0x1e5 ADD
0x1e6 DUP3
0x1e7 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x207 NOT
0x208 AND
0x209 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x229 NOT
0x22a AND
0x22b DUP2
0x22c MSTORE
0x22d PUSH1 0x1
0x22f ADD
0x230 SWAP5
0x231 POP
0x232 POP
0x233 POP
0x234 POP
0x235 POP
0x236 PUSH1 0x40
0x238 MLOAD
0x239 PUSH1 0x20
0x23b DUP2
0x23c DUP4
0x23d SUB
0x23e SUB
0x23f DUP2
0x240 MSTORE
0x241 SWAP1
0x242 PUSH1 0x40
0x244 MSTORE
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 DUP3
0x24a DUP1
0x24b MLOAD
0x24c SWAP1
0x24d PUSH1 0x20
0x24f ADD
0x250 SWAP1
0x251 DUP1
0x252 DUP4
0x253 DUP4
---
0x11f: JUMPDEST 
0x120: V74 = 0xd6
0x122: V75 = 0x94
0x124: V76 = ADDRESS
0x126: V77 = 0x100000000000000000000000000000000000000000000000000000000000000
0x147: V78 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V28
0x148: V79 = 0x40
0x14a: V80 = M[0x40]
0x14b: V81 = 0x20
0x14d: V82 = ADD 0x20 V80
0x150: V83 = 0xff
0x152: V84 = AND 0xff 0xd6
0x153: V85 = 0x100000000000000000000000000000000000000000000000000000000000000
0x174: V86 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd6
0x176: M[V82] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x177: V87 = 0x1
0x179: V88 = ADD 0x1 V82
0x17b: V89 = 0xff
0x17d: V90 = AND 0xff 0x94
0x17e: V91 = 0x100000000000000000000000000000000000000000000000000000000000000
0x19f: V92 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x1a1: M[V88] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x1a2: V93 = 0x1
0x1a4: V94 = ADD 0x1 V88
0x1a6: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x1bc: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1d2: V99 = 0x1000000000000000000000000
0x1e0: V100 = MUL 0x1000000000000000000000000 V98
0x1e2: M[V94] = V100
0x1e3: V101 = 0x14
0x1e5: V102 = ADD 0x14 V94
0x1e7: V103 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x207: V104 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x208: V105 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V78
0x209: V106 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x229: V107 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x22a: V108 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V105
0x22c: M[V102] = V108
0x22d: V109 = 0x1
0x22f: V110 = ADD 0x1 V102
0x236: V111 = 0x40
0x238: V112 = M[0x40]
0x239: V113 = 0x20
0x23d: V114 = SUB V110 V112
0x23e: V115 = SUB V114 0x20
0x240: M[V112] = V115
0x242: V116 = 0x40
0x244: M[0x40] = V110
0x245: V117 = 0x40
0x247: V118 = M[0x40]
0x24b: V119 = M[V112]
0x24d: V120 = 0x20
0x24f: V121 = ADD 0x20 V112
---
Entry stack: [V11, 0x7c, V28, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V112, V118, V118, V121, V119, V119, V118, V121]
Exit stack: [V11, 0x7c, V28, 0x0, 0x0, V112, V118, V118, V121, V119, V119, V118, V121]

================================

Block 0x254
[0x254:0x25e]
---
Predecessors: [0x11f, 0x25f]
Successors: [0x25f, 0x279]
---
0x254 JUMPDEST
0x255 PUSH1 0x20
0x257 DUP4
0x258 LT
0x259 ISZERO
0x25a ISZERO
0x25b PUSH2 0x279
0x25e JUMPI
---
0x254: JUMPDEST 
0x255: V122 = 0x20
0x258: V123 = LT S2 0x20
0x259: V124 = ISZERO V123
0x25a: V125 = ISZERO V124
0x25b: V126 = 0x279
0x25e: JUMPI 0x279 V125
---
Entry stack: [V11, 0x7c, V28, 0x0, 0x0, V112, V118, V118, V121, V119, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7c, V28, 0x0, 0x0, V112, V118, V118, V121, V119, S2, S1, S0]

================================

Block 0x25f
[0x25f:0x278]
---
Predecessors: [0x254]
Successors: [0x254]
---
0x25f DUP1
0x260 MLOAD
0x261 DUP3
0x262 MSTORE
0x263 PUSH1 0x20
0x265 DUP3
0x266 ADD
0x267 SWAP2
0x268 POP
0x269 PUSH1 0x20
0x26b DUP2
0x26c ADD
0x26d SWAP1
0x26e POP
0x26f PUSH1 0x20
0x271 DUP4
0x272 SUB
0x273 SWAP3
0x274 POP
0x275 PUSH2 0x254
0x278 JUMP
---
0x260: V127 = M[S0]
0x262: M[S1] = V127
0x263: V128 = 0x20
0x266: V129 = ADD S1 0x20
0x269: V130 = 0x20
0x26c: V131 = ADD S0 0x20
0x26f: V132 = 0x20
0x272: V133 = SUB S2 0x20
0x275: V134 = 0x254
0x278: JUMP 0x254
---
Entry stack: [V11, 0x7c, V28, 0x0, 0x0, V112, V118, V118, V121, V119, S2, S1, S0]
Stack pops: 3
Stack additions: [V133, V129, V131]
Exit stack: [V11, 0x7c, V28, 0x0, 0x0, V112, V118, V118, V121, V119, V133, V129, V131]

================================

Block 0x279
[0x279:0x2e6]
---
Predecessors: [0x254]
Successors: [0x2e7, 0x315]
---
0x279 JUMPDEST
0x27a PUSH1 0x1
0x27c DUP4
0x27d PUSH1 0x20
0x27f SUB
0x280 PUSH2 0x100
0x283 EXP
0x284 SUB
0x285 DUP1
0x286 NOT
0x287 DUP3
0x288 MLOAD
0x289 AND
0x28a DUP2
0x28b DUP5
0x28c MLOAD
0x28d AND
0x28e DUP1
0x28f DUP3
0x290 OR
0x291 DUP6
0x292 MSTORE
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 POP
0x298 POP
0x299 SWAP1
0x29a POP
0x29b ADD
0x29c SWAP2
0x29d POP
0x29e POP
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 SWAP2
0x2a4 SUB
0x2a5 SWAP1
0x2a6 SHA3
0x2a7 PUSH1 0x1
0x2a9 SWAP1
0x2aa DIV
0x2ab SWAP1
0x2ac POP
0x2ad DUP1
0x2ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c3 AND
0x2c4 PUSH8 0x16345785d8a0000
0x2cd PUSH1 0x40
0x2cf MLOAD
0x2d0 PUSH1 0x0
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 DUP1
0x2d6 DUP4
0x2d7 SUB
0x2d8 DUP2
0x2d9 DUP6
0x2da DUP8
0x2db GAS
0x2dc CALL
0x2dd SWAP3
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 ISZERO
0x2e2 ISZERO
0x2e3 PUSH2 0x315
0x2e6 JUMPI
---
0x279: JUMPDEST 
0x27a: V135 = 0x1
0x27d: V136 = 0x20
0x27f: V137 = SUB 0x20 S2
0x280: V138 = 0x100
0x283: V139 = EXP 0x100 V137
0x284: V140 = SUB V139 0x1
0x286: V141 = NOT V140
0x288: V142 = M[S0]
0x289: V143 = AND V142 V141
0x28c: V144 = M[S1]
0x28d: V145 = AND V144 V140
0x290: V146 = OR V143 V145
0x292: M[S1] = V146
0x29b: V147 = ADD V119 V118
0x29f: V148 = 0x40
0x2a1: V149 = M[0x40]
0x2a4: V150 = SUB V147 V149
0x2a6: V151 = SHA3 V149 V150
0x2a7: V152 = 0x1
0x2aa: V153 = DIV V151 0x1
0x2ae: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2c4: V156 = 0x16345785d8a0000
0x2cd: V157 = 0x40
0x2cf: V158 = M[0x40]
0x2d0: V159 = 0x0
0x2d2: V160 = 0x40
0x2d4: V161 = M[0x40]
0x2d7: V162 = SUB V158 V161
0x2db: V163 = GAS
0x2dc: V164 = CALL V163 V155 0x16345785d8a0000 V161 V162 V161 0x0
0x2e1: V165 = ISZERO V164
0x2e2: V166 = ISZERO V165
0x2e3: V167 = 0x315
0x2e6: JUMPI 0x315 V166
---
Entry stack: [V11, 0x7c, V28, 0x0, 0x0, V112, V118, V118, V121, V119, S2, S1, S0]
Stack pops: 9
Stack additions: [V153]
Exit stack: [V11, 0x7c, V28, 0x0, V153]

================================

Block 0x2e7
[0x2e7:0x2ed]
---
Predecessors: [0x279]
Successors: [0x33f]
---
0x2e7 PUSH2 0x2ee
0x2ea PUSH2 0x33f
0x2ed JUMP
---
0x2e7: V168 = 0x2ee
0x2ea: V169 = 0x33f
0x2ed: JUMP 0x33f
---
Entry stack: [V11, 0x7c, V28, 0x0, V153]
Stack pops: 0
Stack additions: [0x2ee]
Exit stack: [V11, 0x7c, V28, 0x0, V153, 0x2ee]

================================

Block 0x2ee
[0x2ee:0x300]
---
Predecessors: [0x33f]
Successors: [0x301, 0x30a]
---
0x2ee JUMPDEST
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 DUP1
0x2f3 SWAP2
0x2f4 SUB
0x2f5 SWAP1
0x2f6 PUSH1 0x0
0x2f8 CREATE
0x2f9 DUP1
0x2fa ISZERO
0x2fb DUP1
0x2fc ISZERO
0x2fd PUSH2 0x30a
0x300 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V170 = 0x40
0x2f1: V171 = M[0x40]
0x2f4: V172 = SUB V194 V171
0x2f6: V173 = 0x0
0x2f8: V174 = CREATE 0x0 V171 V172
0x2fa: V175 = ISZERO V174
0x2fc: V176 = ISZERO V175
0x2fd: V177 = 0x30a
0x300: JUMPI 0x30a V176
---
Entry stack: [V11, 0x7c, V28, 0x0, V153, V194]
Stack pops: 1
Stack additions: [V174, V175]
Exit stack: [V11, 0x7c, V28, 0x0, V153, V174, V175]

================================

Block 0x301
[0x301:0x309]
---
Predecessors: [0x2ee]
Successors: []
---
0x301 RETURNDATASIZE
0x302 PUSH1 0x0
0x304 DUP1
0x305 RETURNDATACOPY
0x306 RETURNDATASIZE
0x307 PUSH1 0x0
0x309 REVERT
---
0x301: V178 = RETURNDATASIZE
0x302: V179 = 0x0
0x305: RETURNDATACOPY 0x0 0x0 V178
0x306: V180 = RETURNDATASIZE
0x307: V181 = 0x0
0x309: REVERT 0x0 V180
---
Entry stack: [V11, 0x7c, V28, 0x0, V153, V174, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c, V28, 0x0, V153, V174, V175]

================================

Block 0x30a
[0x30a:0x314]
---
Predecessors: [0x2ee]
Successors: [0x31a]
---
0x30a JUMPDEST
0x30b POP
0x30c POP
0x30d PUSH1 0x1
0x30f SWAP2
0x310 POP
0x311 PUSH2 0x31a
0x314 JUMP
---
0x30a: JUMPDEST 
0x30d: V182 = 0x1
0x311: V183 = 0x31a
0x314: JUMP 0x31a
---
Entry stack: [V11, 0x7c, V28, 0x0, V153, V174, V175]
Stack pops: 4
Stack additions: [0x1, S2]
Exit stack: [V11, 0x7c, V28, 0x1, V153]

================================

Block 0x315
[0x315:0x319]
---
Predecessors: [0x279]
Successors: [0x31a]
---
0x315 JUMPDEST
0x316 PUSH1 0x0
0x318 SWAP2
0x319 POP
---
0x315: JUMPDEST 
0x316: V184 = 0x0
---
Entry stack: [V11, 0x7c, V28, 0x0, V153]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x7c, V28, 0x0, V153]

================================

Block 0x31a
[0x31a:0x31f]
---
Predecessors: [0x30a, 0x315]
Successors: [0x7c]
---
0x31a JUMPDEST
0x31b POP
0x31c SWAP2
0x31d SWAP1
0x31e POP
0x31f JUMP
---
0x31a: JUMPDEST 
0x31f: JUMP 0x7c
---
Entry stack: [V11, 0x7c, V28, {0x0, 0x1}, V153]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x320
[0x320:0x33e]
---
Predecessors: [0xa2]
Successors: [0xab]
---
0x320 JUMPDEST
0x321 PUSH1 0x0
0x323 ADDRESS
0x324 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x339 AND
0x33a BALANCE
0x33b SWAP1
0x33c POP
0x33d SWAP1
0x33e JUMP
---
0x320: JUMPDEST 
0x321: V185 = 0x0
0x323: V186 = ADDRESS
0x324: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x339: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x33a: V189 = BALANCE V188
0x33e: JUMP 0xab
---
Entry stack: [V11, 0xab]
Stack pops: 1
Stack additions: [V189]
Exit stack: [V11, V189]

================================

Block 0x33f
[0x33f:0x34e]
---
Predecessors: [0x2e7]
Successors: [0x2ee]
---
0x33f JUMPDEST
0x340 PUSH1 0x40
0x342 MLOAD
0x343 PUSH2 0x1b9
0x346 DUP1
0x347 PUSH2 0x350
0x34a DUP4
0x34b CODECOPY
0x34c ADD
0x34d SWAP1
0x34e JUMP
---
0x33f: JUMPDEST 
0x340: V190 = 0x40
0x342: V191 = M[0x40]
0x343: V192 = 0x1b9
0x347: V193 = 0x350
0x34b: CODECOPY V191 0x350 0x1b9
0x34c: V194 = ADD 0x1b9 V191
0x34e: JUMP 0x2ee
---
Entry stack: [V11, 0x7c, V28, 0x0, V153, 0x2ee]
Stack pops: 1
Stack additions: [V194]
Exit stack: [V11, 0x7c, V28, 0x0, V153, V194]

================================

Block 0x34f
[0x34f:0x3af]
---
Predecessors: []
Successors: [0x3b0]
---
0x34f STOP
0x350 PUSH1 0x80
0x352 PUSH1 0x40
0x354 MSTORE
0x355 PUSH20 0x29488e24cfdaa52a0b837217926c0c0853db7962
0x36a PUSH1 0x0
0x36c DUP1
0x36d PUSH2 0x100
0x370 EXP
0x371 DUP2
0x372 SLOAD
0x373 DUP2
0x374 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x389 MUL
0x38a NOT
0x38b AND
0x38c SWAP1
0x38d DUP4
0x38e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a3 AND
0x3a4 MUL
0x3a5 OR
0x3a6 SWAP1
0x3a7 SSTORE
0x3a8 POP
0x3a9 CALLVALUE
0x3aa DUP1
0x3ab ISZERO
0x3ac PUSH2 0x64
0x3af JUMPI
---
0x34f: STOP 
0x350: V195 = 0x80
0x352: V196 = 0x40
0x354: M[0x40] = 0x80
0x355: V197 = 0x29488e24cfdaa52a0b837217926c0c0853db7962
0x36a: V198 = 0x0
0x36d: V199 = 0x100
0x370: V200 = EXP 0x100 0x0
0x372: V201 = S[0x0]
0x374: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x389: V203 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x38a: V204 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V205 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V201
0x38e: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a3: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x29488e24cfdaa52a0b837217926c0c0853db7962
0x3a4: V208 = MUL 0x29488e24cfdaa52a0b837217926c0c0853db7962 0x1
0x3a5: V209 = OR 0x29488e24cfdaa52a0b837217926c0c0853db7962 V205
0x3a7: S[0x0] = V209
0x3a9: V210 = CALLVALUE
0x3ab: V211 = ISZERO V210
0x3ac: V212 = 0x64
0x3af: THROWI V211
---
Entry stack: []
Stack pops: 0
Stack additions: [V210]
Exit stack: []

================================

Block 0x3b0
[0x3b0:0x410]
---
Predecessors: [0x34f]
Successors: [0x411]
---
0x3b0 PUSH1 0x0
0x3b2 DUP1
0x3b3 REVERT
0x3b4 JUMPDEST
0x3b5 POP
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 SWAP1
0x3ba SLOAD
0x3bb SWAP1
0x3bc PUSH2 0x100
0x3bf EXP
0x3c0 SWAP1
0x3c1 DIV
0x3c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d7 AND
0x3d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ed AND
0x3ee PUSH8 0x16345785d8a0000
0x3f7 PUSH1 0x40
0x3f9 MLOAD
0x3fa PUSH1 0x0
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff DUP1
0x400 DUP4
0x401 SUB
0x402 DUP2
0x403 DUP6
0x404 DUP8
0x405 GAS
0x406 CALL
0x407 SWAP3
0x408 POP
0x409 POP
0x40a POP
0x40b ISZERO
0x40c ISZERO
0x40d PUSH2 0x176
0x410 JUMPI
---
0x3b0: V213 = 0x0
0x3b3: REVERT 0x0 0x0
0x3b4: JUMPDEST 
0x3b6: V214 = 0x0
0x3ba: V215 = S[0x0]
0x3bc: V216 = 0x100
0x3bf: V217 = EXP 0x100 0x0
0x3c1: V218 = DIV V215 0x1
0x3c2: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d7: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3d8: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x3ee: V223 = 0x16345785d8a0000
0x3f7: V224 = 0x40
0x3f9: V225 = M[0x40]
0x3fa: V226 = 0x0
0x3fc: V227 = 0x40
0x3fe: V228 = M[0x40]
0x401: V229 = SUB V225 V228
0x405: V230 = GAS
0x406: V231 = CALL V230 V222 0x16345785d8a0000 V228 V229 V228 0x0
0x40b: V232 = ISZERO V231
0x40c: V233 = ISZERO V232
0x40d: V234 = 0x176
0x410: THROWI V233
---
Entry stack: [V210]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x411
[0x411:0x490]
---
Predecessors: [0x3b0]
Successors: [0x491]
---
0x411 PUSH1 0x0
0x413 DUP1
0x414 SWAP1
0x415 SLOAD
0x416 SWAP1
0x417 PUSH2 0x100
0x41a EXP
0x41b SWAP1
0x41c DIV
0x41d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x432 AND
0x433 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x448 AND
0x449 PUSH4 0x3ccfd60b
0x44e PUSH1 0x40
0x450 MLOAD
0x451 DUP2
0x452 PUSH4 0xffffffff
0x457 AND
0x458 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x476 MUL
0x477 DUP2
0x478 MSTORE
0x479 PUSH1 0x4
0x47b ADD
0x47c PUSH1 0x0
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP1
0x482 DUP4
0x483 SUB
0x484 DUP2
0x485 PUSH1 0x0
0x487 DUP8
0x488 DUP1
0x489 EXTCODESIZE
0x48a ISZERO
0x48b DUP1
0x48c ISZERO
0x48d PUSH2 0x145
0x490 JUMPI
---
0x411: V235 = 0x0
0x415: V236 = S[0x0]
0x417: V237 = 0x100
0x41a: V238 = EXP 0x100 0x0
0x41c: V239 = DIV V236 0x1
0x41d: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x432: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x433: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x448: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x449: V244 = 0x3ccfd60b
0x44e: V245 = 0x40
0x450: V246 = M[0x40]
0x452: V247 = 0xffffffff
0x457: V248 = AND 0xffffffff 0x3ccfd60b
0x458: V249 = 0x100000000000000000000000000000000000000000000000000000000
0x476: V250 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x478: M[V246] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x479: V251 = 0x4
0x47b: V252 = ADD 0x4 V246
0x47c: V253 = 0x0
0x47e: V254 = 0x40
0x480: V255 = M[0x40]
0x483: V256 = SUB V252 V255
0x485: V257 = 0x0
0x489: V258 = EXTCODESIZE V243
0x48a: V259 = ISZERO V258
0x48c: V260 = ISZERO V259
0x48d: V261 = 0x145
0x490: THROWI V260
---
Entry stack: []
Stack pops: 0
Stack additions: [V243, 0x3ccfd60b, V252, 0x0, V255, V256, V255, 0x0, V243, V259]
Exit stack: [V243, 0x3ccfd60b, V252, 0x0, V255, V256, V255, 0x0, V243, V259]

================================

Block 0x491
[0x491:0x49f]
---
Predecessors: [0x411]
Successors: [0x4a0]
---
0x491 PUSH1 0x0
0x493 DUP1
0x494 REVERT
0x495 JUMPDEST
0x496 POP
0x497 GAS
0x498 CALL
0x499 ISZERO
0x49a DUP1
0x49b ISZERO
0x49c PUSH2 0x159
0x49f JUMPI
---
0x491: V262 = 0x0
0x494: REVERT 0x0 0x0
0x495: JUMPDEST 
0x497: V263 = GAS
0x498: V264 = CALL V263 S1 S2 S3 S4 S5 S6
0x499: V265 = ISZERO V264
0x49b: V266 = ISZERO V265
0x49c: V267 = 0x159
0x49f: THROWI V266
---
Entry stack: [V243, 0x3ccfd60b, V252, 0x0, V255, V256, V255, 0x0, V243, V259]
Stack pops: 0
Stack additions: [V265]
Exit stack: []

================================

Block 0x4a0
[0x4a0:0x544]
---
Predecessors: [0x491]
Successors: []
---
0x4a0 RETURNDATASIZE
0x4a1 PUSH1 0x0
0x4a3 DUP1
0x4a4 RETURNDATACOPY
0x4a5 RETURNDATASIZE
0x4a6 PUSH1 0x0
0x4a8 REVERT
0x4a9 JUMPDEST
0x4aa POP
0x4ab POP
0x4ac POP
0x4ad POP
0x4ae CALLER
0x4af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c4 AND
0x4c5 SELFDESTRUCT
0x4c6 JUMPDEST
0x4c7 PUSH1 0x35
0x4c9 DUP1
0x4ca PUSH2 0x184
0x4cd PUSH1 0x0
0x4cf CODECOPY
0x4d0 PUSH1 0x0
0x4d2 RETURN
0x4d3 STOP
0x4d4 PUSH1 0x80
0x4d6 PUSH1 0x40
0x4d8 MSTORE
0x4d9 PUSH1 0x0
0x4db DUP1
0x4dc REVERT
0x4dd STOP
0x4de LOG1
0x4df PUSH6 0x627a7a723058
0x4e6 SHA3
0x4e7 DUP2
0x4e8 MISSING 0xd4
0x4e9 MISSING 0xc
0x4ea MISSING 0xd3
0x4eb PUSH6 0x48801cda08fc
0x4f2 LT
0x4f3 MISSING 0x46
0x4f4 CALLER
0x4f5 MISSING 0xe9
0x4f6 SWAP14
0x4f7 PUSH20 0xd281af2037596cb4b5f18b68cd643d0029a16562
0x50c PUSH27 0x7a72305820120640af93ae4b768fff7db1eee2fa9e1b4e108c526b
0x528 MISSING 0xbf
0x529 MISSING 0xd7
0x52a PUSH26 0x6f9373456465ba0029
---
0x4a0: V268 = RETURNDATASIZE
0x4a1: V269 = 0x0
0x4a4: RETURNDATACOPY 0x0 0x0 V268
0x4a5: V270 = RETURNDATASIZE
0x4a6: V271 = 0x0
0x4a8: REVERT 0x0 V270
0x4a9: JUMPDEST 
0x4ae: V272 = CALLER
0x4af: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c4: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x4c5: SELFDESTRUCT V274
0x4c6: JUMPDEST 
0x4c7: V275 = 0x35
0x4ca: V276 = 0x184
0x4cd: V277 = 0x0
0x4cf: CODECOPY 0x0 0x184 0x35
0x4d0: V278 = 0x0
0x4d2: RETURN 0x0 0x35
0x4d3: STOP 
0x4d4: V279 = 0x80
0x4d6: V280 = 0x40
0x4d8: M[0x40] = 0x80
0x4d9: V281 = 0x0
0x4dc: REVERT 0x0 0x0
0x4dd: STOP 
0x4de: LOG S0 S1 S2
0x4df: V282 = 0x627a7a723058
0x4e6: V283 = SHA3 0x627a7a723058 S3
0x4e8: MISSING 0xd4
0x4e9: MISSING 0xc
0x4ea: MISSING 0xd3
0x4eb: V284 = 0x48801cda08fc
0x4f2: V285 = LT 0x48801cda08fc S0
0x4f3: MISSING 0x46
0x4f4: V286 = CALLER
0x4f5: MISSING 0xe9
0x4f7: V287 = 0xd281af2037596cb4b5f18b68cd643d0029a16562
0x50c: V288 = 0x7a72305820120640af93ae4b768fff7db1eee2fa9e1b4e108c526b
0x528: MISSING 0xbf
0x529: MISSING 0xd7
0x52a: V289 = 0x6f9373456465ba0029
---
Entry stack: [V265]
Stack pops: 0
Stack additions: [S4, V283, S4, V285, V286, 0x7a72305820120640af93ae4b768fff7db1eee2fa9e1b4e108c526b, 0xd281af2037596cb4b5f18b68cd643d0029a16562, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, 0x6f9373456465ba0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x70d1abe1
Entry block: 0x51
Exit block: 0x301
Body: 0x51, 0x59, 0x5d, 0x7c, 0xc1, 0x11b, 0x11f, 0x254, 0x25f, 0x279, 0x2e7, 0x2ee, 0x301, 0x30a, 0x315, 0x31a, 0x33f

Function 1:
Public function signature: 0xb69ef8a8
Entry block: 0x96
Exit block: 0xab
Body: 0x96, 0x9e, 0xa2, 0xab, 0x320

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

