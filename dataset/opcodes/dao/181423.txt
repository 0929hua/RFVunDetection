Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x266c2132
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x266c2132
0x3c: V13 = EQ 0x266c2132 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x85]
---
0x41 DUP1
0x42 PUSH4 0x2d5cb5d5
0x47 EQ
0x48 PUSH2 0x85
0x4b JUMPI
---
0x42: V15 = 0x2d5cb5d5
0x47: V16 = EQ 0x2d5cb5d5 V11
0x48: V17 = 0x85
0x4b: JUMPI 0x85 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xda]
---
0x4c DUP1
0x4d PUSH4 0x9890220b
0x52 EQ
0x53 PUSH2 0xda
0x56 JUMPI
---
0x4d: V18 = 0x9890220b
0x52: V19 = EQ 0x9890220b V11
0x53: V20 = 0xda
0x56: JUMPI 0xda V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0xe4]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0xe4
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0xe4
0x6e: JUMP 0xe4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0x84]
---
Predecessors: [0x17f]
Successors: []
---
0x6f JUMPDEST
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 DUP3
0x75 DUP2
0x76 MSTORE
0x77 PUSH1 0x20
0x79 ADD
0x7a SWAP2
0x7b POP
0x7c POP
0x7d PUSH1 0x40
0x7f MLOAD
0x80 DUP1
0x81 SWAP2
0x82 SUB
0x83 SWAP1
0x84 RETURN
---
0x6f: JUMPDEST 
0x70: V28 = 0x40
0x72: V29 = M[0x40]
0x76: M[V29] = V125
0x77: V30 = 0x20
0x79: V31 = ADD 0x20 V29
0x7d: V32 = 0x40
0x7f: V33 = M[0x40]
0x82: V34 = SUB V31 V33
0x84: RETURN V33 V34
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S1, V125]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S1]

================================

Block 0x85
[0x85:0x8b]
---
Predecessors: [0x41]
Successors: [0x8c, 0x90]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x85: JUMPDEST 
0x86: V35 = CALLVALUE
0x87: V36 = ISZERO V35
0x88: V37 = 0x90
0x8b: JUMPI 0x90 V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x85]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V38 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90
[0x90:0x97]
---
Predecessors: [0x85]
Successors: [0x227]
---
0x90 JUMPDEST
0x91 PUSH2 0x98
0x94 PUSH2 0x227
0x97 JUMP
---
0x90: JUMPDEST 
0x91: V39 = 0x98
0x94: V40 = 0x227
0x97: JUMP 0x227
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V11, 0x98]

================================

Block 0x98
[0x98:0xd9]
---
Predecessors: [0x227]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d DUP3
0x9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3 AND
0xb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9 AND
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf SWAP2
0xd0 POP
0xd1 POP
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 DUP1
0xd6 SWAP2
0xd7 SUB
0xd8 SWAP1
0xd9 RETURN
---
0x98: JUMPDEST 
0x99: V41 = 0x40
0x9b: V42 = M[0x40]
0x9e: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0xb4: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xcb: M[V42] = V46
0xcc: V47 = 0x20
0xce: V48 = ADD 0x20 V42
0xd2: V49 = 0x40
0xd4: V50 = M[0x40]
0xd7: V51 = SUB V48 V50
0xd9: RETURN V50 V51
---
Entry stack: [V11, 0x98, V135]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x98]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0x4c]
Successors: [0x24d]
---
0xda JUMPDEST
0xdb PUSH2 0xe2
0xde PUSH2 0x24d
0xe1 JUMP
---
0xda: JUMPDEST 
0xdb: V52 = 0xe2
0xde: V53 = 0x24d
0xe1: JUMP 0x24d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0xe3]
---
Predecessors: [0x44b]
Successors: []
---
0xe2 JUMPDEST
0xe3 STOP
---
0xe2: JUMPDEST 
0xe3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0x16d]
---
Predecessors: [0x67, 0x31f]
Successors: [0x16e, 0x172]
---
0xe4 JUMPDEST
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 PUSH1 0x0
0xea DUP1
0xeb PUSH1 0x0
0xed DUP1
0xee PUSH1 0x5
0xf0 PUSH1 0x0
0xf2 SWAP1
0xf3 SLOAD
0xf4 SWAP1
0xf5 PUSH2 0x100
0xf8 EXP
0xf9 SWAP1
0xfa DIV
0xfb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x110 AND
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 PUSH4 0x5b9fdc30
0x12c PUSH1 0x40
0x12e MLOAD
0x12f DUP2
0x130 PUSH4 0xffffffff
0x135 AND
0x136 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x154 MUL
0x155 DUP2
0x156 MSTORE
0x157 PUSH1 0x4
0x159 ADD
0x15a PUSH1 0x20
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 DUP4
0x161 SUB
0x162 DUP2
0x163 PUSH1 0x0
0x165 DUP8
0x166 DUP1
0x167 EXTCODESIZE
0x168 ISZERO
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0xe4: JUMPDEST 
0xe5: V54 = 0x0
0xe8: V55 = 0x0
0xeb: V56 = 0x0
0xee: V57 = 0x5
0xf0: V58 = 0x0
0xf3: V59 = S[0x5]
0xf5: V60 = 0x100
0xf8: V61 = EXP 0x100 0x0
0xfa: V62 = DIV V59 0x1
0xfb: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x110: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x111: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x127: V67 = 0x5b9fdc30
0x12c: V68 = 0x40
0x12e: V69 = M[0x40]
0x130: V70 = 0xffffffff
0x135: V71 = AND 0xffffffff 0x5b9fdc30
0x136: V72 = 0x100000000000000000000000000000000000000000000000000000000
0x154: V73 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x5b9fdc30
0x156: M[V69] = 0x5b9fdc3000000000000000000000000000000000000000000000000000000000
0x157: V74 = 0x4
0x159: V75 = ADD 0x4 V69
0x15a: V76 = 0x20
0x15c: V77 = 0x40
0x15e: V78 = M[0x40]
0x161: V79 = SUB V75 V78
0x163: V80 = 0x0
0x167: V81 = EXTCODESIZE V66
0x168: V82 = ISZERO V81
0x169: V83 = ISZERO V82
0x16a: V84 = 0x172
0x16d: JUMPI 0x172 V83
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S1, {0x6f, 0x371}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V66, 0x5b9fdc30, V75, 0x20, V78, V79, V78, 0x0, V66]
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S1, {0x6f, 0x371}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V66, 0x5b9fdc30, V75, 0x20, V78, V79, V78, 0x0, V66]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0xe4]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V85 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S16, {0x6f, 0x371}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V66, 0x5b9fdc30, V75, 0x20, V78, V79, V78, 0x0, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S16, {0x6f, 0x371}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V66, 0x5b9fdc30, V75, 0x20, V78, V79, V78, 0x0, V66]

================================

Block 0x172
[0x172:0x17a]
---
Predecessors: [0xe4]
Successors: [0x17b, 0x17f]
---
0x172 JUMPDEST
0x173 GAS
0x174 CALL
0x175 ISZERO
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x172: JUMPDEST 
0x173: V86 = GAS
0x174: V87 = CALL V86 V66 0x0 V78 V79 V78 0x20
0x175: V88 = ISZERO V87
0x176: V89 = ISZERO V88
0x177: V90 = 0x17f
0x17a: JUMPI 0x17f V89
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S16, {0x6f, 0x371}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V66, 0x5b9fdc30, V75, 0x20, V78, V79, V78, 0x0, V66]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S16, {0x6f, 0x371}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V66, 0x5b9fdc30, V75]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x172]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V91 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S10, {0x6f, 0x371}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x5b9fdc30, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S10, {0x6f, 0x371}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x5b9fdc30, S0]

================================

Block 0x17f
[0x17f:0x226]
---
Predecessors: [0x172]
Successors: [0x6f, 0x371]
---
0x17f JUMPDEST
0x180 POP
0x181 POP
0x182 POP
0x183 PUSH1 0x40
0x185 MLOAD
0x186 DUP1
0x187 MLOAD
0x188 SWAP1
0x189 POP
0x18a SWAP5
0x18b POP
0x18c COINBASE
0x18d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a2 AND
0x1a3 SWAP4
0x1a4 POP
0x1a5 TIMESTAMP
0x1a6 SWAP3
0x1a7 POP
0x1a8 PUSH1 0x2
0x1aa PUSH1 0x0
0x1ac SWAP1
0x1ad SLOAD
0x1ae SWAP1
0x1af PUSH2 0x100
0x1b2 EXP
0x1b3 SWAP1
0x1b4 DIV
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 BALANCE
0x1e2 SWAP2
0x1e3 POP
0x1e4 DUP5
0x1e5 DUP5
0x1e6 DUP5
0x1e7 DUP5
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec DUP6
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 DUP5
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 DUP4
0x1f9 DUP2
0x1fa MSTORE
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe DUP3
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 SWAP5
0x205 POP
0x206 POP
0x207 POP
0x208 POP
0x209 POP
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e SWAP2
0x20f SUB
0x210 SWAP1
0x211 SHA3
0x212 PUSH1 0x1
0x214 SWAP1
0x215 DIV
0x216 SWAP1
0x217 POP
0x218 PUSH1 0x3
0x21a SLOAD
0x21b SWAP5
0x21c POP
0x21d DUP1
0x21e SWAP6
0x21f POP
0x220 POP
0x221 POP
0x222 POP
0x223 POP
0x224 POP
0x225 SWAP1
0x226 JUMP
---
0x17f: JUMPDEST 
0x183: V92 = 0x40
0x185: V93 = M[0x40]
0x187: V94 = M[V93]
0x18c: V95 = COINBASE
0x18d: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a2: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1a5: V98 = TIMESTAMP
0x1a8: V99 = 0x2
0x1aa: V100 = 0x0
0x1ad: V101 = S[0x2]
0x1af: V102 = 0x100
0x1b2: V103 = EXP 0x100 0x0
0x1b4: V104 = DIV V101 0x1
0x1b5: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1cb: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1e1: V109 = BALANCE V108
0x1e8: V110 = 0x40
0x1ea: V111 = M[0x40]
0x1ee: M[V111] = V94
0x1ef: V112 = 0x20
0x1f1: V113 = ADD 0x20 V111
0x1f4: M[V113] = V97
0x1f5: V114 = 0x20
0x1f7: V115 = ADD 0x20 V113
0x1fa: M[V115] = V98
0x1fb: V116 = 0x20
0x1fd: V117 = ADD 0x20 V115
0x200: M[V117] = V109
0x201: V118 = 0x20
0x203: V119 = ADD 0x20 V117
0x20a: V120 = 0x40
0x20c: V121 = M[0x40]
0x20f: V122 = SUB V119 V121
0x211: V123 = SHA3 V121 V122
0x212: V124 = 0x1
0x215: V125 = DIV V123 0x1
0x218: V126 = 0x3
0x21a: V127 = S[0x3]
0x226: JUMP {0x6f, 0x371}
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S10, {0x6f, 0x371}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x5b9fdc30, S0]
Stack pops: 10
Stack additions: [V125]
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S10, V125]

================================

Block 0x227
[0x227:0x24c]
---
Predecessors: [0x90]
Successors: [0x98]
---
0x227 JUMPDEST
0x228 PUSH1 0x2
0x22a PUSH1 0x0
0x22c SWAP1
0x22d SLOAD
0x22e SWAP1
0x22f PUSH2 0x100
0x232 EXP
0x233 SWAP1
0x234 DIV
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b DUP2
0x24c JUMP
---
0x227: JUMPDEST 
0x228: V128 = 0x2
0x22a: V129 = 0x0
0x22d: V130 = S[0x2]
0x22f: V131 = 0x100
0x232: V132 = EXP 0x100 0x0
0x234: V133 = DIV V130 0x1
0x235: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x24c: JUMP 0x98
---
Entry stack: [V11, 0x98]
Stack pops: 1
Stack additions: [S0, V135]
Exit stack: [V11, 0x98, V135]

================================

Block 0x24d
[0x24d:0x30d]
---
Predecessors: [0xda]
Successors: [0x30e, 0x312]
---
0x24d JUMPDEST
0x24e PUSH1 0x1
0x250 PUSH1 0x0
0x252 SWAP1
0x253 SLOAD
0x254 SWAP1
0x255 PUSH2 0x100
0x258 EXP
0x259 SWAP1
0x25a DIV
0x25b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x270 AND
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 PUSH4 0x4a5db3b5
0x28c PUSH7 0x38d7ea4c68000
0x294 CALLVALUE
0x295 SUB
0x296 ADDRESS
0x297 PUSH1 0x40
0x299 MLOAD
0x29a DUP4
0x29b PUSH4 0xffffffff
0x2a0 AND
0x2a1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2bf MUL
0x2c0 DUP2
0x2c1 MSTORE
0x2c2 PUSH1 0x4
0x2c4 ADD
0x2c5 DUP1
0x2c6 DUP3
0x2c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dc AND
0x2dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f2 AND
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 SWAP2
0x2f9 POP
0x2fa POP
0x2fb PUSH1 0x0
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 DUP1
0x301 DUP4
0x302 SUB
0x303 DUP2
0x304 DUP6
0x305 DUP9
0x306 DUP1
0x307 EXTCODESIZE
0x308 ISZERO
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x24d: JUMPDEST 
0x24e: V136 = 0x1
0x250: V137 = 0x0
0x253: V138 = S[0x1]
0x255: V139 = 0x100
0x258: V140 = EXP 0x100 0x0
0x25a: V141 = DIV V138 0x1
0x25b: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x270: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x271: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x287: V146 = 0x4a5db3b5
0x28c: V147 = 0x38d7ea4c68000
0x294: V148 = CALLVALUE
0x295: V149 = SUB V148 0x38d7ea4c68000
0x296: V150 = ADDRESS
0x297: V151 = 0x40
0x299: V152 = M[0x40]
0x29b: V153 = 0xffffffff
0x2a0: V154 = AND 0xffffffff 0x4a5db3b5
0x2a1: V155 = 0x100000000000000000000000000000000000000000000000000000000
0x2bf: V156 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4a5db3b5
0x2c1: M[V152] = 0x4a5db3b500000000000000000000000000000000000000000000000000000000
0x2c2: V157 = 0x4
0x2c4: V158 = ADD 0x4 V152
0x2c7: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2dd: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f2: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x2f4: M[V158] = V162
0x2f5: V163 = 0x20
0x2f7: V164 = ADD 0x20 V158
0x2fb: V165 = 0x0
0x2fd: V166 = 0x40
0x2ff: V167 = M[0x40]
0x302: V168 = SUB V164 V167
0x307: V169 = EXTCODESIZE V145
0x308: V170 = ISZERO V169
0x309: V171 = ISZERO V170
0x30a: V172 = 0x312
0x30d: JUMPI 0x312 V171
---
Entry stack: [V11, 0xe2]
Stack pops: 0
Stack additions: [V145, 0x4a5db3b5, V149, V164, 0x0, V167, V168, V167, V149, V145]
Exit stack: [V11, 0xe2, V145, 0x4a5db3b5, V149, V164, 0x0, V167, V168, V167, V149, V145]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x24d]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V173 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V145, 0x4a5db3b5, V149, V164, 0x0, V167, V168, V167, V149, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V145, 0x4a5db3b5, V149, V164, 0x0, V167, V168, V167, V149, V145]

================================

Block 0x312
[0x312:0x31a]
---
Predecessors: [0x24d]
Successors: [0x31b, 0x31f]
---
0x312 JUMPDEST
0x313 GAS
0x314 CALL
0x315 ISZERO
0x316 ISZERO
0x317 PUSH2 0x31f
0x31a JUMPI
---
0x312: JUMPDEST 
0x313: V174 = GAS
0x314: V175 = CALL V174 V145 V149 V167 V168 V167 0x0
0x315: V176 = ISZERO V175
0x316: V177 = ISZERO V176
0x317: V178 = 0x31f
0x31a: JUMPI 0x31f V177
---
Entry stack: [V11, 0xe2, V145, 0x4a5db3b5, V149, V164, 0x0, V167, V168, V167, V149, V145]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xe2, V145, 0x4a5db3b5, V149, V164]

================================

Block 0x31b
[0x31b:0x31e]
---
Predecessors: [0x312]
Successors: []
---
0x31b PUSH1 0x0
0x31d DUP1
0x31e REVERT
---
0x31b: V179 = 0x0
0x31e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V145, 0x4a5db3b5, V149, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V145, 0x4a5db3b5, V149, V164]

================================

Block 0x31f
[0x31f:0x370]
---
Predecessors: [0x312]
Successors: [0xe4]
---
0x31f JUMPDEST
0x320 POP
0x321 POP
0x322 POP
0x323 POP
0x324 PUSH1 0x1
0x326 PUSH1 0x0
0x328 SWAP1
0x329 SLOAD
0x32a SWAP1
0x32b PUSH2 0x100
0x32e EXP
0x32f SWAP1
0x330 DIV
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 AND
0x347 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35c AND
0x35d PUSH4 0x7f09ad64
0x362 PUSH7 0x38d7ea4c68000
0x36a PUSH2 0x371
0x36d PUSH2 0xe4
0x370 JUMP
---
0x31f: JUMPDEST 
0x324: V180 = 0x1
0x326: V181 = 0x0
0x329: V182 = S[0x1]
0x32b: V183 = 0x100
0x32e: V184 = EXP 0x100 0x0
0x330: V185 = DIV V182 0x1
0x331: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x347: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x35d: V190 = 0x7f09ad64
0x362: V191 = 0x38d7ea4c68000
0x36a: V192 = 0x371
0x36d: V193 = 0xe4
0x370: JUMP 0xe4
---
Entry stack: [V11, 0xe2, V145, 0x4a5db3b5, V149, V164]
Stack pops: 4
Stack additions: [V189, 0x7f09ad64, 0x38d7ea4c68000, 0x371]
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, 0x38d7ea4c68000, 0x371]

================================

Block 0x371
[0x371:0x3bc]
---
Predecessors: [0x17f]
Successors: [0x3bd, 0x3c1]
---
0x371 JUMPDEST
0x372 PUSH1 0x40
0x374 MLOAD
0x375 DUP4
0x376 PUSH4 0xffffffff
0x37b AND
0x37c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x39a MUL
0x39b DUP2
0x39c MSTORE
0x39d PUSH1 0x4
0x39f ADD
0x3a0 DUP1
0x3a1 DUP3
0x3a2 DUP2
0x3a3 MSTORE
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 SWAP2
0x3a8 POP
0x3a9 POP
0x3aa PUSH1 0x0
0x3ac PUSH1 0x40
0x3ae MLOAD
0x3af DUP1
0x3b0 DUP4
0x3b1 SUB
0x3b2 DUP2
0x3b3 DUP6
0x3b4 DUP9
0x3b5 DUP1
0x3b6 EXTCODESIZE
0x3b7 ISZERO
0x3b8 ISZERO
0x3b9 PUSH2 0x3c1
0x3bc JUMPI
---
0x371: JUMPDEST 
0x372: V194 = 0x40
0x374: V195 = M[0x40]
0x376: V196 = 0xffffffff
0x37b: V197 = AND 0xffffffff 0x7f09ad64
0x37c: V198 = 0x100000000000000000000000000000000000000000000000000000000
0x39a: V199 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7f09ad64
0x39c: M[V195] = 0x7f09ad6400000000000000000000000000000000000000000000000000000000
0x39d: V200 = 0x4
0x39f: V201 = ADD 0x4 V195
0x3a3: M[V201] = V125
0x3a4: V202 = 0x20
0x3a6: V203 = ADD 0x20 V201
0x3aa: V204 = 0x0
0x3ac: V205 = 0x40
0x3ae: V206 = M[0x40]
0x3b1: V207 = SUB V203 V206
0x3b6: V208 = EXTCODESIZE V189
0x3b7: V209 = ISZERO V208
0x3b8: V210 = ISZERO V209
0x3b9: V211 = 0x3c1
0x3bc: JUMPI 0x3c1 V210
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S1, V125]
Stack pops: 4
Stack additions: [S3, S2, S1, V203, 0x0, V206, V207, V206, S1, S3]
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S1, V203, 0x0, V206, V207, V206, S1, V189]

================================

Block 0x3bd
[0x3bd:0x3c0]
---
Predecessors: [0x371]
Successors: []
---
0x3bd PUSH1 0x0
0x3bf DUP1
0x3c0 REVERT
---
0x3bd: V212 = 0x0
0x3c0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S7, V203, 0x0, V206, V207, V206, S1, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S7, V203, 0x0, V206, V207, V206, S1, V189]

================================

Block 0x3c1
[0x3c1:0x3c9]
---
Predecessors: [0x371]
Successors: [0x3ca, 0x3ce]
---
0x3c1 JUMPDEST
0x3c2 GAS
0x3c3 CALL
0x3c4 ISZERO
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V213 = GAS
0x3c3: V214 = CALL V213 V189 S1 V206 V207 V206 0x0
0x3c4: V215 = ISZERO V214
0x3c5: V216 = ISZERO V215
0x3c6: V217 = 0x3ce
0x3c9: JUMPI 0x3ce V216
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S7, V203, 0x0, V206, V207, V206, S1, V189]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S7, V203]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3c1]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V218 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S1, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V189, 0x7f09ad64, S1, V203]

================================

Block 0x3ce
[0x3ce:0x446]
---
Predecessors: [0x3c1]
Successors: [0x447, 0x44b]
---
0x3ce JUMPDEST
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 PUSH1 0x4
0x3d5 PUSH1 0x0
0x3d7 SWAP1
0x3d8 SLOAD
0x3d9 SWAP1
0x3da PUSH2 0x100
0x3dd EXP
0x3de SWAP1
0x3df DIV
0x3e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f5 AND
0x3f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40b AND
0x40c PUSH2 0x8fc
0x40f ADDRESS
0x410 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x425 AND
0x426 BALANCE
0x427 SWAP1
0x428 DUP2
0x429 ISZERO
0x42a MUL
0x42b SWAP1
0x42c PUSH1 0x40
0x42e MLOAD
0x42f PUSH1 0x0
0x431 PUSH1 0x40
0x433 MLOAD
0x434 DUP1
0x435 DUP4
0x436 SUB
0x437 DUP2
0x438 DUP6
0x439 DUP9
0x43a DUP9
0x43b CALL
0x43c SWAP4
0x43d POP
0x43e POP
0x43f POP
0x440 POP
0x441 ISZERO
0x442 ISZERO
0x443 PUSH2 0x44b
0x446 JUMPI
---
0x3ce: JUMPDEST 
0x3d3: V219 = 0x4
0x3d5: V220 = 0x0
0x3d8: V221 = S[0x4]
0x3da: V222 = 0x100
0x3dd: V223 = EXP 0x100 0x0
0x3df: V224 = DIV V221 0x1
0x3e0: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3f6: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x40c: V229 = 0x8fc
0x40f: V230 = ADDRESS
0x410: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x425: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x426: V233 = BALANCE V232
0x429: V234 = ISZERO V233
0x42a: V235 = MUL V234 0x8fc
0x42c: V236 = 0x40
0x42e: V237 = M[0x40]
0x42f: V238 = 0x0
0x431: V239 = 0x40
0x433: V240 = M[0x40]
0x436: V241 = SUB V237 V240
0x43b: V242 = CALL V235 V228 V233 V240 V241 V240 0x0
0x441: V243 = ISZERO V242
0x442: V244 = ISZERO V243
0x443: V245 = 0x44b
0x446: JUMPI 0x44b V244
---
Entry stack: [V11, 0xe2, V189, 0x7f09ad64, S1, V203]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0x447
[0x447:0x44a]
---
Predecessors: [0x3ce]
Successors: []
---
0x447 PUSH1 0x0
0x449 DUP1
0x44a REVERT
---
0x447: V246 = 0x0
0x44a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0x44b
[0x44b:0x44c]
---
Predecessors: [0x3ce]
Successors: [0xe2]
---
0x44b JUMPDEST
0x44c JUMP
---
0x44b: JUMPDEST 
0x44c: JUMP 0xe2
---
Entry stack: [V11, 0xe2]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x44d
[0x44d:0x485]
---
Predecessors: []
Successors: []
---
0x44d STOP
0x44e LOG1
0x44f PUSH6 0x627a7a723058
0x456 SHA3
0x457 LOG2
0x458 MISSING 0x1e
0x459 SWAP13
0x45a MISSING 0xcd
0x45b MISSING 0xcb
0x45c MISSING 0xe9
0x45d MULMOD
0x45e MISSING 0xbb
0x45f MSIZE
0x460 PUSH5 0x52fb51d898
0x466 PUSH12 0x60c9fdeeac49f099f1144131
0x473 PUSH18 0xb8431b0029
---
0x44d: STOP 
0x44e: LOG S0 S1 S2
0x44f: V247 = 0x627a7a723058
0x456: V248 = SHA3 0x627a7a723058 S3
0x457: LOG V248 S4 S5 S6
0x458: MISSING 0x1e
0x45a: MISSING 0xcd
0x45b: MISSING 0xcb
0x45c: MISSING 0xe9
0x45d: V249 = MULMOD S0 S1 S2
0x45e: MISSING 0xbb
0x45f: V250 = MSIZE
0x460: V251 = 0x52fb51d898
0x466: V252 = 0x60c9fdeeac49f099f1144131
0x473: V253 = 0xb8431b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, V249, 0xb8431b0029, 0x60c9fdeeac49f099f1144131, 0x52fb51d898, V250]
Exit stack: []

================================

Function 0:
Public function signature: 0x266c2132
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f

Function 1:
Public function signature: 0x2d5cb5d5
Entry block: 0x85
Exit block: 0x98
Body: 0x85, 0x8c, 0x90, 0x98, 0x227

Function 2:
Public function signature: 0x9890220b
Entry block: 0xda
Exit block: 0xe2
Body: 0xda, 0xe2, 0x24d, 0x30e, 0x312, 0x31b, 0x31f, 0x371, 0x3bd, 0x3c1, 0x3ca, 0x3ce, 0x447, 0x44b

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

Function 4:
Private function
Entry block: 0xe4
Exit block: 0x17f
Body: 0xe4, 0x172, 0x17f

