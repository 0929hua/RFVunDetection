Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd5
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd5
0xa: JUMPI 0xd5 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x15e]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xdc1819f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x15e
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xdc1819f
0x20: V14 = EQ V12 0xdc1819f
0x21: V15 = 0x15e
0x24: JUMPI 0x15e V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x173]
---
0x25 DUP1
0x26 PUSH4 0x12f53950
0x2b EQ
0x2c PUSH2 0x173
0x2f JUMPI
---
0x26: V16 = 0x12f53950
0x2b: V17 = EQ 0x12f53950 V12
0x2c: V18 = 0x173
0x2f: JUMPI 0x173 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x19a]
---
0x30 DUP1
0x31 PUSH4 0x27e235e3
0x36 EQ
0x37 PUSH2 0x19a
0x3a JUMPI
---
0x31: V19 = 0x27e235e3
0x36: V20 = EQ 0x27e235e3 V12
0x37: V21 = 0x19a
0x3a: JUMPI 0x19a V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1cb]
---
0x3b DUP1
0x3c PUSH4 0x6360fc3f
0x41 EQ
0x42 PUSH2 0x1cb
0x45 JUMPI
---
0x3c: V22 = 0x6360fc3f
0x41: V23 = EQ 0x6360fc3f V12
0x42: V24 = 0x1cb
0x45: JUMPI 0x1cb V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1f2]
---
0x46 DUP1
0x47 PUSH4 0x6ad1fe02
0x4c EQ
0x4d PUSH2 0x1f2
0x50 JUMPI
---
0x47: V25 = 0x6ad1fe02
0x4c: V26 = EQ 0x6ad1fe02 V12
0x4d: V27 = 0x1f2
0x50: JUMPI 0x1f2 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x221]
---
0x51 DUP1
0x52 PUSH4 0x8a7e30a1
0x57 EQ
0x58 PUSH2 0x221
0x5b JUMPI
---
0x52: V28 = 0x8a7e30a1
0x57: V29 = EQ 0x8a7e30a1 V12
0x58: V30 = 0x221
0x5b: JUMPI 0x221 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x248]
---
0x5c DUP1
0x5d PUSH4 0x8e4cb2a9
0x62 EQ
0x63 PUSH2 0x248
0x66 JUMPI
---
0x5d: V31 = 0x8e4cb2a9
0x62: V32 = EQ 0x8e4cb2a9 V12
0x63: V33 = 0x248
0x66: JUMPI 0x248 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x279]
---
0x67 DUP1
0x68 PUSH4 0x9cd3cb5d
0x6d EQ
0x6e PUSH2 0x279
0x71 JUMPI
---
0x68: V34 = 0x9cd3cb5d
0x6d: V35 = EQ 0x9cd3cb5d V12
0x6e: V36 = 0x279
0x71: JUMPI 0x279 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x29a]
---
0x72 DUP1
0x73 PUSH4 0xa089feea
0x78 EQ
0x79 PUSH2 0x29a
0x7c JUMPI
---
0x73: V37 = 0xa089feea
0x78: V38 = EQ 0xa089feea V12
0x79: V39 = 0x29a
0x7c: JUMPI 0x29a V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2c1]
---
0x7d DUP1
0x7e PUSH4 0xa5c860ba
0x83 EQ
0x84 PUSH2 0x2c1
0x87 JUMPI
---
0x7e: V40 = 0xa5c860ba
0x83: V41 = EQ 0xa5c860ba V12
0x84: V42 = 0x2c1
0x87: JUMPI 0x2c1 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2e6]
---
0x88 DUP1
0x89 PUSH4 0xbbf59a41
0x8e EQ
0x8f PUSH2 0x2e6
0x92 JUMPI
---
0x89: V43 = 0xbbf59a41
0x8e: V44 = EQ 0xbbf59a41 V12
0x8f: V45 = 0x2e6
0x92: JUMPI 0x2e6 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2fb]
---
0x93 DUP1
0x94 PUSH4 0xc42bb1e4
0x99 EQ
0x9a PUSH2 0x2fb
0x9d JUMPI
---
0x94: V46 = 0xc42bb1e4
0x99: V47 = EQ 0xc42bb1e4 V12
0x9a: V48 = 0x2fb
0x9d: JUMPI 0x2fb V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x320]
---
0x9e DUP1
0x9f PUSH4 0xca4b208b
0xa4 EQ
0xa5 PUSH2 0x320
0xa8 JUMPI
---
0x9f: V49 = 0xca4b208b
0xa4: V50 = EQ 0xca4b208b V12
0xa5: V51 = 0x320
0xa8: JUMPI 0x320 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x34f]
---
0xa9 DUP1
0xaa PUSH4 0xcc63a3c9
0xaf EQ
0xb0 PUSH2 0x34f
0xb3 JUMPI
---
0xaa: V52 = 0xcc63a3c9
0xaf: V53 = EQ 0xcc63a3c9 V12
0xb0: V54 = 0x34f
0xb3: JUMPI 0x34f V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x370]
---
0xb4 DUP1
0xb5 PUSH4 0xce7ab6a7
0xba EQ
0xbb PUSH2 0x370
0xbe JUMPI
---
0xb5: V55 = 0xce7ab6a7
0xba: V56 = EQ 0xce7ab6a7 V12
0xbb: V57 = 0x370
0xbe: JUMPI 0x370 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x38a]
---
0xbf DUP1
0xc0 PUSH4 0xd4701c35
0xc5 EQ
0xc6 PUSH2 0x38a
0xc9 JUMPI
---
0xc0: V58 = 0xd4701c35
0xc5: V59 = EQ 0xd4701c35 V12
0xc6: V60 = 0x38a
0xc9: JUMPI 0x38a V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3dd]
---
0xca DUP1
0xcb PUSH4 0xfc0c546a
0xd0 EQ
0xd1 PUSH2 0x3dd
0xd4 JUMPI
---
0xcb: V61 = 0xfc0c546a
0xd0: V62 = EQ 0xfc0c546a V12
0xd1: V63 = 0x3dd
0xd4: JUMPI 0x3dd V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xd5]
---
Predecessors: [0x0, 0xca]
Successors: [0xd6]
---
0xd5 JUMPDEST
---
0xd5: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd6
[0xd6:0xe2]
---
Predecessors: [0xd5]
Successors: [0xe3, 0x105]
---
0xd6 JUMPDEST
0xd7 PUSH1 0x2
0xd9 SLOAD
0xda PUSH1 0xff
0xdc AND
0xdd ISZERO
0xde ISZERO
0xdf PUSH2 0x105
0xe2 JUMPI
---
0xd6: JUMPDEST 
0xd7: V64 = 0x2
0xd9: V65 = S[0x2]
0xda: V66 = 0xff
0xdc: V67 = AND 0xff V65
0xdd: V68 = ISZERO V67
0xde: V69 = ISZERO V68
0xdf: V70 = 0x105
0xe2: JUMPI 0x105 V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe3
[0xe3:0x104]
---
Predecessors: [0xd6]
Successors: [0x15a]
---
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb CALLER
0xec AND
0xed PUSH1 0x0
0xef SWAP1
0xf0 DUP2
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 DUP2
0xf5 SWAP1
0xf6 MSTORE
0xf7 PUSH1 0x40
0xf9 SWAP1
0xfa SHA3
0xfb DUP1
0xfc SLOAD
0xfd CALLVALUE
0xfe ADD
0xff SWAP1
0x100 SSTORE
0x101 PUSH2 0x15a
0x104 JUMP
---
0xe3: V71 = 0x1
0xe5: V72 = 0xa0
0xe7: V73 = 0x2
0xe9: V74 = EXP 0x2 0xa0
0xea: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb: V76 = CALLER
0xec: V77 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0xed: V78 = 0x0
0xf1: M[0x0] = V77
0xf2: V79 = 0x20
0xf6: M[0x20] = 0x0
0xf7: V80 = 0x40
0xfa: V81 = SHA3 0x0 0x40
0xfc: V82 = S[V81]
0xfd: V83 = CALLVALUE
0xfe: V84 = ADD V83 V82
0x100: S[V81] = V84
0x101: V85 = 0x15a
0x104: JUMP 0x15a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x105
[0x105:0x131]
---
Predecessors: [0xd6]
Successors: [0x132, 0x143]
---
0x105 JUMPDEST
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e CALLER
0x10f DUP2
0x110 AND
0x111 PUSH1 0x0
0x113 DUP2
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x1
0x118 PUSH1 0x20
0x11a MSTORE
0x11b PUSH1 0x40
0x11d SWAP1
0x11e SHA3
0x11f DUP1
0x120 SLOAD
0x121 CALLVALUE
0x122 ADD
0x123 SWAP1
0x124 SSTORE
0x125 PUSH1 0x7
0x127 SLOAD
0x128 SWAP1
0x129 SWAP2
0x12a AND
0x12b EQ
0x12c DUP1
0x12d ISZERO
0x12e PUSH2 0x143
0x131 JUMPI
---
0x105: JUMPDEST 
0x106: V86 = 0x1
0x108: V87 = 0xa0
0x10a: V88 = 0x2
0x10c: V89 = EXP 0x2 0xa0
0x10d: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e: V91 = CALLER
0x110: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x111: V93 = 0x0
0x115: M[0x0] = V92
0x116: V94 = 0x1
0x118: V95 = 0x20
0x11a: M[0x20] = 0x1
0x11b: V96 = 0x40
0x11e: V97 = SHA3 0x0 0x40
0x120: V98 = S[V97]
0x121: V99 = CALLVALUE
0x122: V100 = ADD V99 V98
0x124: S[V97] = V100
0x125: V101 = 0x7
0x127: V102 = S[0x7]
0x12a: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x12b: V104 = EQ V103 V92
0x12d: V105 = ISZERO V104
0x12e: V106 = 0x143
0x131: JUMPI 0x143 V105
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V12, V104]

================================

Block 0x132
[0x132:0x142]
---
Predecessors: [0x105]
Successors: [0x143]
---
0x132 POP
0x133 PUSH1 0x3
0x135 SLOAD
0x136 ADDRESS
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f AND
0x140 BALANCE
0x141 LT
0x142 ISZERO
---
0x133: V107 = 0x3
0x135: V108 = S[0x3]
0x136: V109 = ADDRESS
0x137: V110 = 0x1
0x139: V111 = 0xa0
0x13b: V112 = 0x2
0x13d: V113 = EXP 0x2 0xa0
0x13e: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x140: V116 = BALANCE V115
0x141: V117 = LT V116 V108
0x142: V118 = ISZERO V117
---
Entry stack: [V12, V104]
Stack pops: 1
Stack additions: [V118]
Exit stack: [V12, V118]

================================

Block 0x143
[0x143:0x148]
---
Predecessors: [0x105, 0x132]
Successors: [0x149, 0x15a]
---
0x143 JUMPDEST
0x144 ISZERO
0x145 PUSH2 0x15a
0x148 JUMPI
---
0x143: JUMPDEST 
0x144: V119 = ISZERO S0
0x145: V120 = 0x15a
0x148: JUMPI 0x15a V119
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x149
[0x149:0x159]
---
Predecessors: [0x143]
Successors: [0x15a]
---
0x149 PUSH1 0x2
0x14b DUP1
0x14c SLOAD
0x14d PUSH3 0xff0000
0x151 NOT
0x152 AND
0x153 PUSH3 0x10000
0x157 OR
0x158 SWAP1
0x159 SSTORE
---
0x149: V121 = 0x2
0x14c: V122 = S[0x2]
0x14d: V123 = 0xff0000
0x151: V124 = NOT 0xff0000
0x152: V125 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V122
0x153: V126 = 0x10000
0x157: V127 = OR 0x10000 V125
0x159: S[0x2] = V127
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15a
[0x15a:0x15a]
---
Predecessors: [0xe3, 0x143, 0x149, 0x4c5, 0x843, 0xb99, 0xc0a, 0xc3e, 0xcd5]
Successors: [0x15b]
---
0x15a JUMPDEST
---
0x15a: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15b
[0x15b:0x15b]
---
Predecessors: [0x15a]
Successors: [0x15c]
---
0x15b JUMPDEST
---
0x15b: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15c
[0x15c:0x15d]
---
Predecessors: [0x15b]
Successors: []
---
0x15c JUMPDEST
0x15d STOP
---
0x15c: JUMPDEST 
0x15d: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15e
[0x15e:0x164]
---
Predecessors: [0xb]
Successors: [0x165, 0x169]
---
0x15e JUMPDEST
0x15f CALLVALUE
0x160 ISZERO
0x161 PUSH2 0x169
0x164 JUMPI
---
0x15e: JUMPDEST 
0x15f: V128 = CALLVALUE
0x160: V129 = ISZERO V128
0x161: V130 = 0x169
0x164: JUMPI 0x169 V129
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x168]
---
Predecessors: [0x15e]
Successors: []
---
0x165 PUSH1 0x0
0x167 DUP1
0x168 REVERT
---
0x165: V131 = 0x0
0x168: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x169
[0x169:0x170]
---
Predecessors: [0x15e]
Successors: [0x40c]
---
0x169 JUMPDEST
0x16a PUSH2 0x15a
0x16d PUSH2 0x40c
0x170 JUMP
---
0x169: JUMPDEST 
0x16a: V132 = 0x15a
0x16d: V133 = 0x40c
0x170: JUMP 0x40c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V12, 0x15a]

================================

Block 0x171
[0x171:0x172]
---
Predecessors: []
Successors: []
---
0x171 JUMPDEST
0x172 STOP
---
0x171: JUMPDEST 
0x172: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x173
[0x173:0x179]
---
Predecessors: [0x25]
Successors: [0x17a, 0x17e]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 ISZERO
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x173: JUMPDEST 
0x174: V134 = CALLVALUE
0x175: V135 = ISZERO V134
0x176: V136 = 0x17e
0x179: JUMPI 0x17e V135
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x173]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V137 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x173]
Successors: [0x4c7]
---
0x17e JUMPDEST
0x17f PUSH2 0x186
0x182 PUSH2 0x4c7
0x185 JUMP
---
0x17e: JUMPDEST 
0x17f: V138 = 0x186
0x182: V139 = 0x4c7
0x185: JUMP 0x4c7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x186
[0x186:0x199]
---
Predecessors: [0x4c7, 0x4e8, 0x500, 0x84c]
Successors: []
---
0x186 JUMPDEST
0x187 PUSH1 0x40
0x189 MLOAD
0x18a SWAP1
0x18b ISZERO
0x18c ISZERO
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x20
0x191 ADD
0x192 PUSH1 0x40
0x194 MLOAD
0x195 DUP1
0x196 SWAP2
0x197 SUB
0x198 SWAP1
0x199 RETURN
---
0x186: JUMPDEST 
0x187: V140 = 0x40
0x189: V141 = M[0x40]
0x18b: V142 = ISZERO S0
0x18c: V143 = ISZERO V142
0x18e: M[V141] = V143
0x18f: V144 = 0x20
0x191: V145 = ADD 0x20 V141
0x192: V146 = 0x40
0x194: V147 = M[0x40]
0x197: V148 = SUB V145 V147
0x199: RETURN V147 V148
---
Entry stack: [V12, 0x186, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x186]

================================

Block 0x19a
[0x19a:0x1a0]
---
Predecessors: [0x30]
Successors: [0x1a1, 0x1a5]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c ISZERO
0x19d PUSH2 0x1a5
0x1a0 JUMPI
---
0x19a: JUMPDEST 
0x19b: V149 = CALLVALUE
0x19c: V150 = ISZERO V149
0x19d: V151 = 0x1a5
0x1a0: JUMPI 0x1a5 V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a1
[0x1a1:0x1a4]
---
Predecessors: [0x19a]
Successors: []
---
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 REVERT
---
0x1a1: V152 = 0x0
0x1a4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a5
[0x1a5:0x1b8]
---
Predecessors: [0x19a]
Successors: [0x4d6]
---
0x1a5 JUMPDEST
0x1a6 PUSH2 0x1b9
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 PUSH1 0x4
0x1b3 CALLDATALOAD
0x1b4 AND
0x1b5 PUSH2 0x4d6
0x1b8 JUMP
---
0x1a5: JUMPDEST 
0x1a6: V153 = 0x1b9
0x1a9: V154 = 0x1
0x1ab: V155 = 0xa0
0x1ad: V156 = 0x2
0x1af: V157 = EXP 0x2 0xa0
0x1b0: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V159 = 0x4
0x1b3: V160 = CALLDATALOAD 0x4
0x1b4: V161 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V162 = 0x4d6
0x1b8: JUMP 0x4d6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b9, V161]
Exit stack: [V12, 0x1b9, V161]

================================

Block 0x1b9
[0x1b9:0x1ca]
---
Predecessors: [0x4d6, 0x50e, 0x855, 0xba0]
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd SWAP1
0x1be DUP2
0x1bf MSTORE
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x1b9: JUMPDEST 
0x1ba: V163 = 0x40
0x1bc: V164 = M[0x40]
0x1bf: M[V164] = S0
0x1c0: V165 = 0x20
0x1c2: V166 = ADD 0x20 V164
0x1c3: V167 = 0x40
0x1c5: V168 = M[0x40]
0x1c8: V169 = SUB V166 V168
0x1ca: RETURN V168 V169
---
Entry stack: [V12, 0x1b9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b9]

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x3b]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V170 = CALLVALUE
0x1cd: V171 = ISZERO V170
0x1ce: V172 = 0x1d6
0x1d1: JUMPI 0x1d6 V171
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V173 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x1cb]
Successors: [0x4e8]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x186
0x1da PUSH2 0x4e8
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V174 = 0x186
0x1da: V175 = 0x4e8
0x1dd: JUMP 0x4e8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x1de
[0x1de:0x1f1]
---
Predecessors: []
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 ISZERO
0x1e4 ISZERO
0x1e5 DUP2
0x1e6 MSTORE
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee SWAP2
0x1ef SUB
0x1f0 SWAP1
0x1f1 RETURN
---
0x1de: JUMPDEST 
0x1df: V176 = 0x40
0x1e1: V177 = M[0x40]
0x1e3: V178 = ISZERO S0
0x1e4: V179 = ISZERO V178
0x1e6: M[V177] = V179
0x1e7: V180 = 0x20
0x1e9: V181 = ADD 0x20 V177
0x1ea: V182 = 0x40
0x1ec: V183 = M[0x40]
0x1ef: V184 = SUB V181 V183
0x1f1: RETURN V183 V184
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x46]
Successors: [0x1f9, 0x1fd]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V185 = CALLVALUE
0x1f4: V186 = ISZERO V185
0x1f5: V187 = 0x1fd
0x1f8: JUMPI 0x1fd V186
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V188 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x1f2]
Successors: [0x4f1]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x205
0x201 PUSH2 0x4f1
0x204 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V189 = 0x205
0x201: V190 = 0x4f1
0x204: JUMP 0x4f1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x205]
Exit stack: [V12, 0x205]

================================

Block 0x205
[0x205:0x220]
---
Predecessors: [0x4f1, 0xba6, 0xcd8]
Successors: []
---
0x205 JUMPDEST
0x206 PUSH1 0x40
0x208 MLOAD
0x209 PUSH1 0x1
0x20b PUSH1 0xa0
0x20d PUSH1 0x2
0x20f EXP
0x210 SUB
0x211 SWAP1
0x212 SWAP2
0x213 AND
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 PUSH1 0x40
0x21b MLOAD
0x21c DUP1
0x21d SWAP2
0x21e SUB
0x21f SWAP1
0x220 RETURN
---
0x205: JUMPDEST 
0x206: V191 = 0x40
0x208: V192 = M[0x40]
0x209: V193 = 0x1
0x20b: V194 = 0xa0
0x20d: V195 = 0x2
0x20f: V196 = EXP 0x2 0xa0
0x210: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x213: V198 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x215: M[V192] = V198
0x216: V199 = 0x20
0x218: V200 = ADD 0x20 V192
0x219: V201 = 0x40
0x21b: V202 = M[0x40]
0x21e: V203 = SUB V200 V202
0x220: RETURN V202 V203
---
Entry stack: [V12, 0x205, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x205]

================================

Block 0x221
[0x221:0x227]
---
Predecessors: [0x51]
Successors: [0x228, 0x22c]
---
0x221 JUMPDEST
0x222 CALLVALUE
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x221: JUMPDEST 
0x222: V204 = CALLVALUE
0x223: V205 = ISZERO V204
0x224: V206 = 0x22c
0x227: JUMPI 0x22c V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x221]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V207 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x233]
---
Predecessors: [0x221]
Successors: [0x500]
---
0x22c JUMPDEST
0x22d PUSH2 0x186
0x230 PUSH2 0x500
0x233 JUMP
---
0x22c: JUMPDEST 
0x22d: V208 = 0x186
0x230: V209 = 0x500
0x233: JUMP 0x500
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x234
[0x234:0x247]
---
Predecessors: []
Successors: []
---
0x234 JUMPDEST
0x235 PUSH1 0x40
0x237 MLOAD
0x238 SWAP1
0x239 ISZERO
0x23a ISZERO
0x23b DUP2
0x23c MSTORE
0x23d PUSH1 0x20
0x23f ADD
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 SWAP2
0x245 SUB
0x246 SWAP1
0x247 RETURN
---
0x234: JUMPDEST 
0x235: V210 = 0x40
0x237: V211 = M[0x40]
0x239: V212 = ISZERO S0
0x23a: V213 = ISZERO V212
0x23c: M[V211] = V213
0x23d: V214 = 0x20
0x23f: V215 = ADD 0x20 V211
0x240: V216 = 0x40
0x242: V217 = M[0x40]
0x245: V218 = SUB V215 V217
0x247: RETURN V217 V218
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x248
[0x248:0x24e]
---
Predecessors: [0x5c]
Successors: [0x24f, 0x253]
---
0x248 JUMPDEST
0x249 CALLVALUE
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x248: JUMPDEST 
0x249: V219 = CALLVALUE
0x24a: V220 = ISZERO V219
0x24b: V221 = 0x253
0x24e: JUMPI 0x253 V220
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x248]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V222 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x253
[0x253:0x266]
---
Predecessors: [0x248]
Successors: [0x50e]
---
0x253 JUMPDEST
0x254 PUSH2 0x1b9
0x257 PUSH1 0x1
0x259 PUSH1 0xa0
0x25b PUSH1 0x2
0x25d EXP
0x25e SUB
0x25f PUSH1 0x4
0x261 CALLDATALOAD
0x262 AND
0x263 PUSH2 0x50e
0x266 JUMP
---
0x253: JUMPDEST 
0x254: V223 = 0x1b9
0x257: V224 = 0x1
0x259: V225 = 0xa0
0x25b: V226 = 0x2
0x25d: V227 = EXP 0x2 0xa0
0x25e: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25f: V229 = 0x4
0x261: V230 = CALLDATALOAD 0x4
0x262: V231 = AND V230 0xffffffffffffffffffffffffffffffffffffffff
0x263: V232 = 0x50e
0x266: JUMP 0x50e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b9, V231]
Exit stack: [V12, 0x1b9, V231]

================================

Block 0x267
[0x267:0x278]
---
Predecessors: []
Successors: []
---
0x267 JUMPDEST
0x268 PUSH1 0x40
0x26a MLOAD
0x26b SWAP1
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 PUSH1 0x40
0x273 MLOAD
0x274 DUP1
0x275 SWAP2
0x276 SUB
0x277 SWAP1
0x278 RETURN
---
0x267: JUMPDEST 
0x268: V233 = 0x40
0x26a: V234 = M[0x40]
0x26d: M[V234] = S0
0x26e: V235 = 0x20
0x270: V236 = ADD 0x20 V234
0x271: V237 = 0x40
0x273: V238 = M[0x40]
0x276: V239 = SUB V236 V238
0x278: RETURN V238 V239
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x279
[0x279:0x27f]
---
Predecessors: [0x67]
Successors: [0x280, 0x284]
---
0x279 JUMPDEST
0x27a CALLVALUE
0x27b ISZERO
0x27c PUSH2 0x284
0x27f JUMPI
---
0x279: JUMPDEST 
0x27a: V240 = CALLVALUE
0x27b: V241 = ISZERO V240
0x27c: V242 = 0x284
0x27f: JUMPI 0x284 V241
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x280
[0x280:0x283]
---
Predecessors: [0x279]
Successors: []
---
0x280 PUSH1 0x0
0x282 DUP1
0x283 REVERT
---
0x280: V243 = 0x0
0x283: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x284
[0x284:0x297]
---
Predecessors: [0x279]
Successors: [0x520]
---
0x284 JUMPDEST
0x285 PUSH2 0x15a
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 PUSH1 0x4
0x292 CALLDATALOAD
0x293 AND
0x294 PUSH2 0x520
0x297 JUMP
---
0x284: JUMPDEST 
0x285: V244 = 0x15a
0x288: V245 = 0x1
0x28a: V246 = 0xa0
0x28c: V247 = 0x2
0x28e: V248 = EXP 0x2 0xa0
0x28f: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V250 = 0x4
0x292: V251 = CALLDATALOAD 0x4
0x293: V252 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0x294: V253 = 0x520
0x297: JUMP 0x520
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V252]
Exit stack: [V12, 0x15a, V252]

================================

Block 0x298
[0x298:0x299]
---
Predecessors: []
Successors: []
---
0x298 JUMPDEST
0x299 STOP
---
0x298: JUMPDEST 
0x299: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29a
[0x29a:0x2a0]
---
Predecessors: [0x72]
Successors: [0x2a1, 0x2a5]
---
0x29a JUMPDEST
0x29b CALLVALUE
0x29c ISZERO
0x29d PUSH2 0x2a5
0x2a0 JUMPI
---
0x29a: JUMPDEST 
0x29b: V254 = CALLVALUE
0x29c: V255 = ISZERO V254
0x29d: V256 = 0x2a5
0x2a0: JUMPI 0x2a5 V255
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x29a]
Successors: []
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
---
0x2a1: V257 = 0x0
0x2a4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a5
[0x2a5:0x2ac]
---
Predecessors: [0x29a]
Successors: [0x84c]
---
0x2a5 JUMPDEST
0x2a6 PUSH2 0x186
0x2a9 PUSH2 0x84c
0x2ac JUMP
---
0x2a5: JUMPDEST 
0x2a6: V258 = 0x186
0x2a9: V259 = 0x84c
0x2ac: JUMP 0x84c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x2ad
[0x2ad:0x2c0]
---
Predecessors: []
Successors: []
---
0x2ad JUMPDEST
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 SWAP1
0x2b2 ISZERO
0x2b3 ISZERO
0x2b4 DUP2
0x2b5 MSTORE
0x2b6 PUSH1 0x20
0x2b8 ADD
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd SWAP2
0x2be SUB
0x2bf SWAP1
0x2c0 RETURN
---
0x2ad: JUMPDEST 
0x2ae: V260 = 0x40
0x2b0: V261 = M[0x40]
0x2b2: V262 = ISZERO S0
0x2b3: V263 = ISZERO V262
0x2b5: M[V261] = V263
0x2b6: V264 = 0x20
0x2b8: V265 = ADD 0x20 V261
0x2b9: V266 = 0x40
0x2bb: V267 = M[0x40]
0x2be: V268 = SUB V265 V267
0x2c0: RETURN V267 V268
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0x7d]
Successors: [0x2c8, 0x2cc]
---
0x2c1 JUMPDEST
0x2c2 CALLVALUE
0x2c3 ISZERO
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V269 = CALLVALUE
0x2c3: V270 = ISZERO V269
0x2c4: V271 = 0x2cc
0x2c7: JUMPI 0x2cc V270
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2c1]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V272 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cc
[0x2cc:0x2d3]
---
Predecessors: [0x2c1]
Successors: [0x855]
---
0x2cc JUMPDEST
0x2cd PUSH2 0x1b9
0x2d0 PUSH2 0x855
0x2d3 JUMP
---
0x2cc: JUMPDEST 
0x2cd: V273 = 0x1b9
0x2d0: V274 = 0x855
0x2d3: JUMP 0x855
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b9]
Exit stack: [V12, 0x1b9]

================================

Block 0x2d4
[0x2d4:0x2e5]
---
Predecessors: []
Successors: []
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 SWAP1
0x2d9 DUP2
0x2da MSTORE
0x2db PUSH1 0x20
0x2dd ADD
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 DUP1
0x2e2 SWAP2
0x2e3 SUB
0x2e4 SWAP1
0x2e5 RETURN
---
0x2d4: JUMPDEST 
0x2d5: V275 = 0x40
0x2d7: V276 = M[0x40]
0x2da: M[V276] = S0
0x2db: V277 = 0x20
0x2dd: V278 = ADD 0x20 V276
0x2de: V279 = 0x40
0x2e0: V280 = M[0x40]
0x2e3: V281 = SUB V278 V280
0x2e5: RETURN V280 V281
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e6
[0x2e6:0x2ec]
---
Predecessors: [0x88]
Successors: [0x2ed, 0x2f1]
---
0x2e6 JUMPDEST
0x2e7 CALLVALUE
0x2e8 ISZERO
0x2e9 PUSH2 0x2f1
0x2ec JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V282 = CALLVALUE
0x2e8: V283 = ISZERO V282
0x2e9: V284 = 0x2f1
0x2ec: JUMPI 0x2f1 V283
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ed
[0x2ed:0x2f0]
---
Predecessors: [0x2e6]
Successors: []
---
0x2ed PUSH1 0x0
0x2ef DUP1
0x2f0 REVERT
---
0x2ed: V285 = 0x0
0x2f0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f1
[0x2f1:0x2f8]
---
Predecessors: [0x2e6]
Successors: [0x85b]
---
0x2f1 JUMPDEST
0x2f2 PUSH2 0x15a
0x2f5 PUSH2 0x85b
0x2f8 JUMP
---
0x2f1: JUMPDEST 
0x2f2: V286 = 0x15a
0x2f5: V287 = 0x85b
0x2f8: JUMP 0x85b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V12, 0x15a]

================================

Block 0x2f9
[0x2f9:0x2fa]
---
Predecessors: []
Successors: []
---
0x2f9 JUMPDEST
0x2fa STOP
---
0x2f9: JUMPDEST 
0x2fa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2fb
[0x2fb:0x301]
---
Predecessors: [0x93]
Successors: [0x302, 0x306]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V288 = CALLVALUE
0x2fd: V289 = ISZERO V288
0x2fe: V290 = 0x306
0x301: JUMPI 0x306 V289
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2fb]
Successors: []
---
0x302 PUSH1 0x0
0x304 DUP1
0x305 REVERT
---
0x302: V291 = 0x0
0x305: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x306
[0x306:0x30d]
---
Predecessors: [0x2fb]
Successors: [0xba0]
---
0x306 JUMPDEST
0x307 PUSH2 0x1b9
0x30a PUSH2 0xba0
0x30d JUMP
---
0x306: JUMPDEST 
0x307: V292 = 0x1b9
0x30a: V293 = 0xba0
0x30d: JUMP 0xba0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b9]
Exit stack: [V12, 0x1b9]

================================

Block 0x30e
[0x30e:0x31f]
---
Predecessors: []
Successors: []
---
0x30e JUMPDEST
0x30f PUSH1 0x40
0x311 MLOAD
0x312 SWAP1
0x313 DUP2
0x314 MSTORE
0x315 PUSH1 0x20
0x317 ADD
0x318 PUSH1 0x40
0x31a MLOAD
0x31b DUP1
0x31c SWAP2
0x31d SUB
0x31e SWAP1
0x31f RETURN
---
0x30e: JUMPDEST 
0x30f: V294 = 0x40
0x311: V295 = M[0x40]
0x314: M[V295] = S0
0x315: V296 = 0x20
0x317: V297 = ADD 0x20 V295
0x318: V298 = 0x40
0x31a: V299 = M[0x40]
0x31d: V300 = SUB V297 V299
0x31f: RETURN V299 V300
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x320
[0x320:0x326]
---
Predecessors: [0x9e]
Successors: [0x327, 0x32b]
---
0x320 JUMPDEST
0x321 CALLVALUE
0x322 ISZERO
0x323 PUSH2 0x32b
0x326 JUMPI
---
0x320: JUMPDEST 
0x321: V301 = CALLVALUE
0x322: V302 = ISZERO V301
0x323: V303 = 0x32b
0x326: JUMPI 0x32b V302
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x327
[0x327:0x32a]
---
Predecessors: [0x320]
Successors: []
---
0x327 PUSH1 0x0
0x329 DUP1
0x32a REVERT
---
0x327: V304 = 0x0
0x32a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32b
[0x32b:0x332]
---
Predecessors: [0x320]
Successors: [0xba6]
---
0x32b JUMPDEST
0x32c PUSH2 0x205
0x32f PUSH2 0xba6
0x332 JUMP
---
0x32b: JUMPDEST 
0x32c: V305 = 0x205
0x32f: V306 = 0xba6
0x332: JUMP 0xba6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x205]
Exit stack: [V12, 0x205]

================================

Block 0x333
[0x333:0x34e]
---
Predecessors: []
Successors: []
---
0x333 JUMPDEST
0x334 PUSH1 0x40
0x336 MLOAD
0x337 PUSH1 0x1
0x339 PUSH1 0xa0
0x33b PUSH1 0x2
0x33d EXP
0x33e SUB
0x33f SWAP1
0x340 SWAP2
0x341 AND
0x342 DUP2
0x343 MSTORE
0x344 PUSH1 0x20
0x346 ADD
0x347 PUSH1 0x40
0x349 MLOAD
0x34a DUP1
0x34b SWAP2
0x34c SUB
0x34d SWAP1
0x34e RETURN
---
0x333: JUMPDEST 
0x334: V307 = 0x40
0x336: V308 = M[0x40]
0x337: V309 = 0x1
0x339: V310 = 0xa0
0x33b: V311 = 0x2
0x33d: V312 = EXP 0x2 0xa0
0x33e: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x341: V314 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x343: M[V308] = V314
0x344: V315 = 0x20
0x346: V316 = ADD 0x20 V308
0x347: V317 = 0x40
0x349: V318 = M[0x40]
0x34c: V319 = SUB V316 V318
0x34e: RETURN V318 V319
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x34f
[0x34f:0x355]
---
Predecessors: [0xa9]
Successors: [0x356, 0x35a]
---
0x34f JUMPDEST
0x350 CALLVALUE
0x351 ISZERO
0x352 PUSH2 0x35a
0x355 JUMPI
---
0x34f: JUMPDEST 
0x350: V320 = CALLVALUE
0x351: V321 = ISZERO V320
0x352: V322 = 0x35a
0x355: JUMPI 0x35a V321
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x356
[0x356:0x359]
---
Predecessors: [0x34f]
Successors: []
---
0x356 PUSH1 0x0
0x358 DUP1
0x359 REVERT
---
0x356: V323 = 0x0
0x359: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35a
[0x35a:0x36d]
---
Predecessors: [0x34f]
Successors: [0xbb5]
---
0x35a JUMPDEST
0x35b PUSH2 0x15a
0x35e PUSH1 0x1
0x360 PUSH1 0xa0
0x362 PUSH1 0x2
0x364 EXP
0x365 SUB
0x366 PUSH1 0x4
0x368 CALLDATALOAD
0x369 AND
0x36a PUSH2 0xbb5
0x36d JUMP
---
0x35a: JUMPDEST 
0x35b: V324 = 0x15a
0x35e: V325 = 0x1
0x360: V326 = 0xa0
0x362: V327 = 0x2
0x364: V328 = EXP 0x2 0xa0
0x365: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x366: V330 = 0x4
0x368: V331 = CALLDATALOAD 0x4
0x369: V332 = AND V331 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V333 = 0xbb5
0x36d: JUMP 0xbb5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V332]
Exit stack: [V12, 0x15a, V332]

================================

Block 0x36e
[0x36e:0x36f]
---
Predecessors: []
Successors: []
---
0x36e JUMPDEST
0x36f STOP
---
0x36e: JUMPDEST 
0x36f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x370
[0x370:0x376]
---
Predecessors: [0xb4]
Successors: [0x377, 0x37b]
---
0x370 JUMPDEST
0x371 CALLVALUE
0x372 ISZERO
0x373 PUSH2 0x37b
0x376 JUMPI
---
0x370: JUMPDEST 
0x371: V334 = CALLVALUE
0x372: V335 = ISZERO V334
0x373: V336 = 0x37b
0x376: JUMPI 0x37b V335
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x377
[0x377:0x37a]
---
Predecessors: [0x370]
Successors: []
---
0x377 PUSH1 0x0
0x379 DUP1
0x37a REVERT
---
0x377: V337 = 0x0
0x37a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37b
[0x37b:0x387]
---
Predecessors: [0x370]
Successors: [0xc0d]
---
0x37b JUMPDEST
0x37c PUSH2 0x15a
0x37f PUSH1 0x4
0x381 CALLDATALOAD
0x382 ISZERO
0x383 ISZERO
0x384 PUSH2 0xc0d
0x387 JUMP
---
0x37b: JUMPDEST 
0x37c: V338 = 0x15a
0x37f: V339 = 0x4
0x381: V340 = CALLDATALOAD 0x4
0x382: V341 = ISZERO V340
0x383: V342 = ISZERO V341
0x384: V343 = 0xc0d
0x387: JUMP 0xc0d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V342]
Exit stack: [V12, 0x15a, V342]

================================

Block 0x388
[0x388:0x389]
---
Predecessors: []
Successors: []
---
0x388 JUMPDEST
0x389 STOP
---
0x388: JUMPDEST 
0x389: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x38a
[0x38a:0x390]
---
Predecessors: [0xbf]
Successors: [0x391, 0x395]
---
0x38a JUMPDEST
0x38b CALLVALUE
0x38c ISZERO
0x38d PUSH2 0x395
0x390 JUMPI
---
0x38a: JUMPDEST 
0x38b: V344 = CALLVALUE
0x38c: V345 = ISZERO V344
0x38d: V346 = 0x395
0x390: JUMPI 0x395 V345
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x391
[0x391:0x394]
---
Predecessors: [0x38a]
Successors: []
---
0x391 PUSH1 0x0
0x393 DUP1
0x394 REVERT
---
0x391: V347 = 0x0
0x394: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x395
[0x395:0x3da]
---
Predecessors: [0x38a]
Successors: [0xc41]
---
0x395 JUMPDEST
0x396 PUSH2 0x15a
0x399 PUSH1 0x4
0x39b PUSH1 0x24
0x39d DUP2
0x39e CALLDATALOAD
0x39f DUP2
0x3a0 DUP2
0x3a1 ADD
0x3a2 SWAP1
0x3a3 DUP4
0x3a4 ADD
0x3a5 CALLDATALOAD
0x3a6 DUP1
0x3a7 PUSH1 0x20
0x3a9 PUSH1 0x1f
0x3ab DUP3
0x3ac ADD
0x3ad DUP2
0x3ae SWAP1
0x3af DIV
0x3b0 DUP2
0x3b1 MUL
0x3b2 ADD
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 SWAP1
0x3b7 DUP2
0x3b8 ADD
0x3b9 PUSH1 0x40
0x3bb MSTORE
0x3bc DUP2
0x3bd DUP2
0x3be MSTORE
0x3bf SWAP3
0x3c0 SWAP2
0x3c1 SWAP1
0x3c2 PUSH1 0x20
0x3c4 DUP5
0x3c5 ADD
0x3c6 DUP4
0x3c7 DUP4
0x3c8 DUP1
0x3c9 DUP3
0x3ca DUP5
0x3cb CALLDATACOPY
0x3cc POP
0x3cd SWAP5
0x3ce SWAP7
0x3cf POP
0x3d0 PUSH2 0xc41
0x3d3 SWAP6
0x3d4 POP
0x3d5 POP
0x3d6 POP
0x3d7 POP
0x3d8 POP
0x3d9 POP
0x3da JUMP
---
0x395: JUMPDEST 
0x396: V348 = 0x15a
0x399: V349 = 0x4
0x39b: V350 = 0x24
0x39e: V351 = CALLDATALOAD 0x4
0x3a1: V352 = ADD V351 0x24
0x3a4: V353 = ADD 0x4 V351
0x3a5: V354 = CALLDATALOAD V353
0x3a7: V355 = 0x20
0x3a9: V356 = 0x1f
0x3ac: V357 = ADD V354 0x1f
0x3af: V358 = DIV V357 0x20
0x3b1: V359 = MUL 0x20 V358
0x3b2: V360 = ADD V359 0x20
0x3b3: V361 = 0x40
0x3b5: V362 = M[0x40]
0x3b8: V363 = ADD V362 V360
0x3b9: V364 = 0x40
0x3bb: M[0x40] = V363
0x3be: M[V362] = V354
0x3c2: V365 = 0x20
0x3c5: V366 = ADD V362 0x20
0x3cb: CALLDATACOPY V366 V352 V354
0x3d0: V367 = 0xc41
0x3da: JUMP 0xc41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V362]
Exit stack: [V12, 0x15a, V362]

================================

Block 0x3db
[0x3db:0x3dc]
---
Predecessors: []
Successors: []
---
0x3db JUMPDEST
0x3dc STOP
---
0x3db: JUMPDEST 
0x3dc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3dd
[0x3dd:0x3e3]
---
Predecessors: [0xca]
Successors: [0x3e4, 0x3e8]
---
0x3dd JUMPDEST
0x3de CALLVALUE
0x3df ISZERO
0x3e0 PUSH2 0x3e8
0x3e3 JUMPI
---
0x3dd: JUMPDEST 
0x3de: V368 = CALLVALUE
0x3df: V369 = ISZERO V368
0x3e0: V370 = 0x3e8
0x3e3: JUMPI 0x3e8 V369
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e4
[0x3e4:0x3e7]
---
Predecessors: [0x3dd]
Successors: []
---
0x3e4 PUSH1 0x0
0x3e6 DUP1
0x3e7 REVERT
---
0x3e4: V371 = 0x0
0x3e7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e8
[0x3e8:0x3ef]
---
Predecessors: [0x3dd]
Successors: [0xcd8]
---
0x3e8 JUMPDEST
0x3e9 PUSH2 0x205
0x3ec PUSH2 0xcd8
0x3ef JUMP
---
0x3e8: JUMPDEST 
0x3e9: V372 = 0x205
0x3ec: V373 = 0xcd8
0x3ef: JUMP 0xcd8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x205]
Exit stack: [V12, 0x205]

================================

Block 0x3f0
[0x3f0:0x40b]
---
Predecessors: []
Successors: []
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x40
0x3f3 MLOAD
0x3f4 PUSH1 0x1
0x3f6 PUSH1 0xa0
0x3f8 PUSH1 0x2
0x3fa EXP
0x3fb SUB
0x3fc SWAP1
0x3fd SWAP2
0x3fe AND
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 ADD
0x404 PUSH1 0x40
0x406 MLOAD
0x407 DUP1
0x408 SWAP2
0x409 SUB
0x40a SWAP1
0x40b RETURN
---
0x3f0: JUMPDEST 
0x3f1: V374 = 0x40
0x3f3: V375 = M[0x40]
0x3f4: V376 = 0x1
0x3f6: V377 = 0xa0
0x3f8: V378 = 0x2
0x3fa: V379 = EXP 0x2 0xa0
0x3fb: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fe: V381 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x400: M[V375] = V381
0x401: V382 = 0x20
0x403: V383 = ADD 0x20 V375
0x404: V384 = 0x40
0x406: V385 = M[0x40]
0x409: V386 = SUB V383 V385
0x40b: RETURN V385 V386
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x40c
[0x40c:0x422]
---
Predecessors: [0x169]
Successors: [0x423, 0x427]
---
0x40c JUMPDEST
0x40d PUSH1 0x6
0x40f SLOAD
0x410 CALLER
0x411 PUSH1 0x1
0x413 PUSH1 0xa0
0x415 PUSH1 0x2
0x417 EXP
0x418 SUB
0x419 SWAP1
0x41a DUP2
0x41b AND
0x41c SWAP2
0x41d AND
0x41e EQ
0x41f PUSH2 0x427
0x422 JUMPI
---
0x40c: JUMPDEST 
0x40d: V387 = 0x6
0x40f: V388 = S[0x6]
0x410: V389 = CALLER
0x411: V390 = 0x1
0x413: V391 = 0xa0
0x415: V392 = 0x2
0x417: V393 = EXP 0x2 0xa0
0x418: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41b: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x41d: V396 = AND V388 0xffffffffffffffffffffffffffffffffffffffff
0x41e: V397 = EQ V396 V395
0x41f: V398 = 0x427
0x422: JUMPI 0x427 V397
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x423
[0x423:0x426]
---
Predecessors: [0x40c]
Successors: []
---
0x423 PUSH1 0x0
0x425 DUP1
0x426 REVERT
---
0x423: V399 = 0x0
0x426: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x427
[0x427:0x43b]
---
Predecessors: [0x40c]
Successors: [0x43c, 0x440]
---
0x427 JUMPDEST
0x428 PUSH1 0x9
0x42a SLOAD
0x42b ADDRESS
0x42c PUSH1 0x1
0x42e PUSH1 0xa0
0x430 PUSH1 0x2
0x432 EXP
0x433 SUB
0x434 AND
0x435 BALANCE
0x436 LT
0x437 ISZERO
0x438 PUSH2 0x440
0x43b JUMPI
---
0x427: JUMPDEST 
0x428: V400 = 0x9
0x42a: V401 = S[0x9]
0x42b: V402 = ADDRESS
0x42c: V403 = 0x1
0x42e: V404 = 0xa0
0x430: V405 = 0x2
0x432: V406 = EXP 0x2 0xa0
0x433: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x434: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x435: V409 = BALANCE V408
0x436: V410 = LT V409 V401
0x437: V411 = ISZERO V410
0x438: V412 = 0x440
0x43b: JUMPI 0x440 V411
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x43c
[0x43c:0x43f]
---
Predecessors: [0x427]
Successors: [0x4c4]
---
0x43c PUSH2 0x4c4
0x43f JUMP
---
0x43c: V413 = 0x4c4
0x43f: JUMP 0x4c4
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x440
[0x440:0x44b]
---
Predecessors: [0x427]
Successors: [0x44c, 0x450]
---
0x440 JUMPDEST
0x441 PUSH1 0x4
0x443 SLOAD
0x444 PUSH1 0xff
0x446 AND
0x447 ISZERO
0x448 PUSH2 0x450
0x44b JUMPI
---
0x440: JUMPDEST 
0x441: V414 = 0x4
0x443: V415 = S[0x4]
0x444: V416 = 0xff
0x446: V417 = AND 0xff V415
0x447: V418 = ISZERO V417
0x448: V419 = 0x450
0x44b: JUMPI 0x450 V418
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x44c
[0x44c:0x44f]
---
Predecessors: [0x440]
Successors: [0x4c4]
---
0x44c PUSH2 0x4c4
0x44f JUMP
---
0x44c: V420 = 0x4c4
0x44f: JUMP 0x4c4
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x450
[0x450:0x462]
---
Predecessors: [0x440]
Successors: [0x463, 0x467]
---
0x450 JUMPDEST
0x451 PUSH1 0x7
0x453 SLOAD
0x454 PUSH1 0x1
0x456 PUSH1 0xa0
0x458 PUSH1 0x2
0x45a EXP
0x45b SUB
0x45c AND
0x45d ISZERO
0x45e ISZERO
0x45f PUSH2 0x467
0x462 JUMPI
---
0x450: JUMPDEST 
0x451: V421 = 0x7
0x453: V422 = S[0x7]
0x454: V423 = 0x1
0x456: V424 = 0xa0
0x458: V425 = 0x2
0x45a: V426 = EXP 0x2 0xa0
0x45b: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45c: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x45d: V429 = ISZERO V428
0x45e: V430 = ISZERO V429
0x45f: V431 = 0x467
0x462: JUMPI 0x467 V430
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x450]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V432 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x467
[0x467:0x4aa]
---
Predecessors: [0x450]
Successors: [0x4ab, 0x4af]
---
0x467 JUMPDEST
0x468 PUSH1 0x2
0x46a DUP1
0x46b SLOAD
0x46c PUSH1 0xff
0x46e NOT
0x46f AND
0x470 PUSH1 0x1
0x472 OR
0x473 SWAP1
0x474 SSTORE
0x475 PUSH1 0x1
0x477 PUSH1 0xa0
0x479 PUSH1 0x2
0x47b EXP
0x47c SUB
0x47d ADDRESS
0x47e DUP2
0x47f AND
0x480 BALANCE
0x481 PUSH1 0x3
0x483 DUP2
0x484 SWAP1
0x485 SSTORE
0x486 PUSH1 0x7
0x488 SLOAD
0x489 SWAP1
0x48a SWAP2
0x48b AND
0x48c SWAP1
0x48d PUSH1 0x40
0x48f MLOAD
0x490 PUSH1 0x0
0x492 PUSH1 0x40
0x494 MLOAD
0x495 DUP1
0x496 DUP4
0x497 SUB
0x498 DUP2
0x499 DUP6
0x49a DUP8
0x49b PUSH2 0x8796
0x49e GAS
0x49f SUB
0x4a0 CALL
0x4a1 SWAP3
0x4a2 POP
0x4a3 POP
0x4a4 POP
0x4a5 ISZERO
0x4a6 ISZERO
0x4a7 PUSH2 0x4af
0x4aa JUMPI
---
0x467: JUMPDEST 
0x468: V433 = 0x2
0x46b: V434 = S[0x2]
0x46c: V435 = 0xff
0x46e: V436 = NOT 0xff
0x46f: V437 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V434
0x470: V438 = 0x1
0x472: V439 = OR 0x1 V437
0x474: S[0x2] = V439
0x475: V440 = 0x1
0x477: V441 = 0xa0
0x479: V442 = 0x2
0x47b: V443 = EXP 0x2 0xa0
0x47c: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47d: V445 = ADDRESS
0x47f: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x480: V447 = BALANCE V446
0x481: V448 = 0x3
0x485: S[0x3] = V447
0x486: V449 = 0x7
0x488: V450 = S[0x7]
0x48b: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x48d: V452 = 0x40
0x48f: V453 = M[0x40]
0x490: V454 = 0x0
0x492: V455 = 0x40
0x494: V456 = M[0x40]
0x497: V457 = SUB V453 V456
0x49b: V458 = 0x8796
0x49e: V459 = GAS
0x49f: V460 = SUB V459 0x8796
0x4a0: V461 = CALL V460 V451 V447 V456 V457 V456 0x0
0x4a5: V462 = ISZERO V461
0x4a6: V463 = ISZERO V462
0x4a7: V464 = 0x4af
0x4aa: JUMPI 0x4af V463
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x4ab
[0x4ab:0x4ae]
---
Predecessors: [0x467]
Successors: []
---
0x4ab PUSH1 0x0
0x4ad DUP1
0x4ae REVERT
---
0x4ab: V465 = 0x0
0x4ae: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x4af
[0x4af:0x4bf]
---
Predecessors: [0x467]
Successors: [0x4c0, 0x4c4]
---
0x4af JUMPDEST
0x4b0 PUSH1 0x1
0x4b2 PUSH1 0xa0
0x4b4 PUSH1 0x2
0x4b6 EXP
0x4b7 SUB
0x4b8 ADDRESS
0x4b9 AND
0x4ba BALANCE
0x4bb ISZERO
0x4bc PUSH2 0x4c4
0x4bf JUMPI
---
0x4af: JUMPDEST 
0x4b0: V466 = 0x1
0x4b2: V467 = 0xa0
0x4b4: V468 = 0x2
0x4b6: V469 = EXP 0x2 0xa0
0x4b7: V470 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b8: V471 = ADDRESS
0x4b9: V472 = AND V471 0xffffffffffffffffffffffffffffffffffffffff
0x4ba: V473 = BALANCE V472
0x4bb: V474 = ISZERO V473
0x4bc: V475 = 0x4c4
0x4bf: JUMPI 0x4c4 V474
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x4c0
[0x4c0:0x4c3]
---
Predecessors: [0x4af]
Successors: []
---
0x4c0 PUSH1 0x0
0x4c2 DUP1
0x4c3 REVERT
---
0x4c0: V476 = 0x0
0x4c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x4c4
[0x4c4:0x4c4]
---
Predecessors: [0x43c, 0x44c, 0x4af]
Successors: [0x4c5]
---
0x4c4 JUMPDEST
---
0x4c4: JUMPDEST 
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a]

================================

Block 0x4c5
[0x4c5:0x4c6]
---
Predecessors: [0x4c4]
Successors: [0x15a]
---
0x4c5 JUMPDEST
0x4c6 JUMP
---
0x4c5: JUMPDEST 
0x4c6: JUMP 0x15a
---
Entry stack: [V12, 0x15a]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c7
[0x4c7:0x4d5]
---
Predecessors: [0x17e]
Successors: [0x186]
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x2
0x4ca SLOAD
0x4cb PUSH3 0x10000
0x4cf SWAP1
0x4d0 DIV
0x4d1 PUSH1 0xff
0x4d3 AND
0x4d4 DUP2
0x4d5 JUMP
---
0x4c7: JUMPDEST 
0x4c8: V477 = 0x2
0x4ca: V478 = S[0x2]
0x4cb: V479 = 0x10000
0x4d0: V480 = DIV V478 0x10000
0x4d1: V481 = 0xff
0x4d3: V482 = AND 0xff V480
0x4d5: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V482]
Exit stack: [V12, 0x186, V482]

================================

Block 0x4d6
[0x4d6:0x4e7]
---
Predecessors: [0x1a5]
Successors: [0x1b9]
---
0x4d6 JUMPDEST
0x4d7 PUSH1 0x0
0x4d9 PUSH1 0x20
0x4db DUP2
0x4dc SWAP1
0x4dd MSTORE
0x4de SWAP1
0x4df DUP2
0x4e0 MSTORE
0x4e1 PUSH1 0x40
0x4e3 SWAP1
0x4e4 SHA3
0x4e5 SLOAD
0x4e6 DUP2
0x4e7 JUMP
---
0x4d6: JUMPDEST 
0x4d7: V483 = 0x0
0x4d9: V484 = 0x20
0x4dd: M[0x20] = 0x0
0x4e0: M[0x0] = V161
0x4e1: V485 = 0x40
0x4e4: V486 = SHA3 0x0 0x40
0x4e5: V487 = S[V486]
0x4e7: JUMP 0x1b9
---
Entry stack: [V12, 0x1b9, V161]
Stack pops: 2
Stack additions: [S1, V487]
Exit stack: [V12, 0x1b9, V487]

================================

Block 0x4e8
[0x4e8:0x4f0]
---
Predecessors: [0x1d6]
Successors: [0x186]
---
0x4e8 JUMPDEST
0x4e9 PUSH1 0x2
0x4eb SLOAD
0x4ec PUSH1 0xff
0x4ee AND
0x4ef DUP2
0x4f0 JUMP
---
0x4e8: JUMPDEST 
0x4e9: V488 = 0x2
0x4eb: V489 = S[0x2]
0x4ec: V490 = 0xff
0x4ee: V491 = AND 0xff V489
0x4f0: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V491]
Exit stack: [V12, 0x186, V491]

================================

Block 0x4f1
[0x4f1:0x4ff]
---
Predecessors: [0x1fd]
Successors: [0x205]
---
0x4f1 JUMPDEST
0x4f2 PUSH1 0x7
0x4f4 SLOAD
0x4f5 PUSH1 0x1
0x4f7 PUSH1 0xa0
0x4f9 PUSH1 0x2
0x4fb EXP
0x4fc SUB
0x4fd AND
0x4fe DUP2
0x4ff JUMP
---
0x4f1: JUMPDEST 
0x4f2: V492 = 0x7
0x4f4: V493 = S[0x7]
0x4f5: V494 = 0x1
0x4f7: V495 = 0xa0
0x4f9: V496 = 0x2
0x4fb: V497 = EXP 0x2 0xa0
0x4fc: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x4ff: JUMP 0x205
---
Entry stack: [V12, 0x205]
Stack pops: 1
Stack additions: [S0, V499]
Exit stack: [V12, 0x205, V499]

================================

Block 0x500
[0x500:0x50d]
---
Predecessors: [0x22c]
Successors: [0x186]
---
0x500 JUMPDEST
0x501 PUSH1 0x2
0x503 SLOAD
0x504 PUSH2 0x100
0x507 SWAP1
0x508 DIV
0x509 PUSH1 0xff
0x50b AND
0x50c DUP2
0x50d JUMP
---
0x500: JUMPDEST 
0x501: V500 = 0x2
0x503: V501 = S[0x2]
0x504: V502 = 0x100
0x508: V503 = DIV V501 0x100
0x509: V504 = 0xff
0x50b: V505 = AND 0xff V503
0x50d: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V505]
Exit stack: [V12, 0x186, V505]

================================

Block 0x50e
[0x50e:0x51f]
---
Predecessors: [0x253]
Successors: [0x1b9]
---
0x50e JUMPDEST
0x50f PUSH1 0x1
0x511 PUSH1 0x20
0x513 MSTORE
0x514 PUSH1 0x0
0x516 SWAP1
0x517 DUP2
0x518 MSTORE
0x519 PUSH1 0x40
0x51b SWAP1
0x51c SHA3
0x51d SLOAD
0x51e DUP2
0x51f JUMP
---
0x50e: JUMPDEST 
0x50f: V506 = 0x1
0x511: V507 = 0x20
0x513: M[0x20] = 0x1
0x514: V508 = 0x0
0x518: M[0x0] = V231
0x519: V509 = 0x40
0x51c: V510 = SHA3 0x0 0x40
0x51d: V511 = S[V510]
0x51f: JUMP 0x1b9
---
Entry stack: [V12, 0x1b9, V231]
Stack pops: 2
Stack additions: [S1, V511]
Exit stack: [V12, 0x1b9, V511]

================================

Block 0x520
[0x520:0x54d]
---
Predecessors: [0x284]
Successors: [0x54e, 0x562]
---
0x520 JUMPDEST
0x521 PUSH1 0x1
0x523 PUSH1 0xa0
0x525 PUSH1 0x2
0x527 EXP
0x528 SUB
0x529 CALLER
0x52a AND
0x52b PUSH1 0x0
0x52d SWAP1
0x52e DUP2
0x52f MSTORE
0x530 PUSH1 0x1
0x532 PUSH1 0x20
0x534 MSTORE
0x535 PUSH1 0x40
0x537 DUP2
0x538 SHA3
0x539 SLOAD
0x53a DUP3
0x53b SWAP2
0x53c SWAP1
0x53d DUP2
0x53e SWAP1
0x53f DUP2
0x540 SWAP1
0x541 DUP2
0x542 SWAP1
0x543 DUP2
0x544 SWAP1
0x545 DUP2
0x546 SWAP1
0x547 GT
0x548 DUP1
0x549 ISZERO
0x54a PUSH2 0x562
0x54d JUMPI
---
0x520: JUMPDEST 
0x521: V512 = 0x1
0x523: V513 = 0xa0
0x525: V514 = 0x2
0x527: V515 = EXP 0x2 0xa0
0x528: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x529: V517 = CALLER
0x52a: V518 = AND V517 0xffffffffffffffffffffffffffffffffffffffff
0x52b: V519 = 0x0
0x52f: M[0x0] = V518
0x530: V520 = 0x1
0x532: V521 = 0x20
0x534: M[0x20] = 0x1
0x535: V522 = 0x40
0x538: V523 = SHA3 0x0 0x40
0x539: V524 = S[V523]
0x547: V525 = GT V524 0x0
0x549: V526 = ISZERO V525
0x54a: V527 = 0x562
0x54d: JUMPI 0x562 V526
---
Entry stack: [V12, 0x15a, V252]
Stack pops: 1
Stack additions: [S0, S0, 0x0, 0x0, 0x0, 0x0, 0x0, V525]
Exit stack: [V12, 0x15a, V252, V252, 0x0, 0x0, 0x0, 0x0, 0x0, V525]

================================

Block 0x54e
[0x54e:0x561]
---
Predecessors: [0x520]
Successors: [0x562]
---
0x54e POP
0x54f PUSH1 0x7
0x551 SLOAD
0x552 CALLER
0x553 PUSH1 0x1
0x555 PUSH1 0xa0
0x557 PUSH1 0x2
0x559 EXP
0x55a SUB
0x55b SWAP1
0x55c DUP2
0x55d AND
0x55e SWAP2
0x55f AND
0x560 EQ
0x561 ISZERO
---
0x54f: V528 = 0x7
0x551: V529 = S[0x7]
0x552: V530 = CALLER
0x553: V531 = 0x1
0x555: V532 = 0xa0
0x557: V533 = 0x2
0x559: V534 = EXP 0x2 0xa0
0x55a: V535 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55d: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x55f: V537 = AND V529 0xffffffffffffffffffffffffffffffffffffffff
0x560: V538 = EQ V537 V536
0x561: V539 = ISZERO V538
---
Entry stack: [V12, 0x15a, V252, V252, 0x0, 0x0, 0x0, 0x0, 0x0, V525]
Stack pops: 1
Stack additions: [V539]
Exit stack: [V12, 0x15a, V252, V252, 0x0, 0x0, 0x0, 0x0, 0x0, V539]

================================

Block 0x562
[0x562:0x567]
---
Predecessors: [0x520, 0x54e]
Successors: [0x568, 0x5af]
---
0x562 JUMPDEST
0x563 ISZERO
0x564 PUSH2 0x5af
0x567 JUMPI
---
0x562: JUMPDEST 
0x563: V540 = ISZERO S0
0x564: V541 = 0x5af
0x567: JUMPI 0x5af V540
---
Entry stack: [V12, 0x15a, V252, V252, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x568
[0x568:0x5aa]
---
Predecessors: [0x562]
Successors: [0x5ab, 0x5af]
---
0x568 PUSH1 0x1
0x56a PUSH1 0xa0
0x56c PUSH1 0x2
0x56e EXP
0x56f SUB
0x570 CALLER
0x571 AND
0x572 PUSH1 0x0
0x574 DUP2
0x575 DUP2
0x576 MSTORE
0x577 PUSH1 0x1
0x579 PUSH1 0x20
0x57b MSTORE
0x57c PUSH1 0x40
0x57e DUP1
0x57f DUP3
0x580 SHA3
0x581 DUP1
0x582 SLOAD
0x583 SWAP3
0x584 SWAP1
0x585 SSTORE
0x586 SWAP1
0x587 SWAP7
0x588 POP
0x589 DUP7
0x58a ISZERO
0x58b PUSH2 0x8fc
0x58e MUL
0x58f SWAP1
0x590 DUP8
0x591 SWAP1
0x592 MLOAD
0x593 PUSH1 0x0
0x595 PUSH1 0x40
0x597 MLOAD
0x598 DUP1
0x599 DUP4
0x59a SUB
0x59b DUP2
0x59c DUP6
0x59d DUP9
0x59e DUP9
0x59f CALL
0x5a0 SWAP4
0x5a1 POP
0x5a2 POP
0x5a3 POP
0x5a4 POP
0x5a5 ISZERO
0x5a6 ISZERO
0x5a7 PUSH2 0x5af
0x5aa JUMPI
---
0x568: V542 = 0x1
0x56a: V543 = 0xa0
0x56c: V544 = 0x2
0x56e: V545 = EXP 0x2 0xa0
0x56f: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x570: V547 = CALLER
0x571: V548 = AND V547 0xffffffffffffffffffffffffffffffffffffffff
0x572: V549 = 0x0
0x576: M[0x0] = V548
0x577: V550 = 0x1
0x579: V551 = 0x20
0x57b: M[0x20] = 0x1
0x57c: V552 = 0x40
0x580: V553 = SHA3 0x0 0x40
0x582: V554 = S[V553]
0x585: S[V553] = 0x0
0x58a: V555 = ISZERO V554
0x58b: V556 = 0x8fc
0x58e: V557 = MUL 0x8fc V555
0x592: V558 = M[0x40]
0x593: V559 = 0x0
0x595: V560 = 0x40
0x597: V561 = M[0x40]
0x59a: V562 = SUB V558 V561
0x59f: V563 = CALL V557 V548 V554 V561 V562 V561 0x0
0x5a5: V564 = ISZERO V563
0x5a6: V565 = ISZERO V564
0x5a7: V566 = 0x5af
0x5aa: JUMPI 0x5af V565
---
Entry stack: [V12, 0x15a, V252, V252, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [V554, S3, S2, S1, S0]
Exit stack: [V12, 0x15a, V252, V252, V554, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5ab
[0x5ab:0x5ae]
---
Predecessors: [0x568]
Successors: []
---
0x5ab PUSH1 0x0
0x5ad DUP1
0x5ae REVERT
---
0x5ab: V567 = 0x0
0x5ae: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, V554, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, V554, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5af
[0x5af:0x5af]
---
Predecessors: [0x562, 0x568]
Successors: [0x5b0]
---
0x5af JUMPDEST
---
0x5af: JUMPDEST 
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5b0
[0x5b0:0x5cf]
---
Predecessors: [0x5af]
Successors: [0x5d0, 0x5d4]
---
0x5b0 JUMPDEST
0x5b1 PUSH1 0x1
0x5b3 PUSH1 0xa0
0x5b5 PUSH1 0x2
0x5b7 EXP
0x5b8 SUB
0x5b9 CALLER
0x5ba AND
0x5bb PUSH1 0x0
0x5bd SWAP1
0x5be DUP2
0x5bf MSTORE
0x5c0 PUSH1 0x20
0x5c2 DUP2
0x5c3 SWAP1
0x5c4 MSTORE
0x5c5 PUSH1 0x40
0x5c7 SWAP1
0x5c8 SHA3
0x5c9 SLOAD
0x5ca ISZERO
0x5cb ISZERO
0x5cc PUSH2 0x5d4
0x5cf JUMPI
---
0x5b0: JUMPDEST 
0x5b1: V568 = 0x1
0x5b3: V569 = 0xa0
0x5b5: V570 = 0x2
0x5b7: V571 = EXP 0x2 0xa0
0x5b8: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b9: V573 = CALLER
0x5ba: V574 = AND V573 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V575 = 0x0
0x5bf: M[0x0] = V574
0x5c0: V576 = 0x20
0x5c4: M[0x20] = 0x0
0x5c5: V577 = 0x40
0x5c8: V578 = SHA3 0x0 0x40
0x5c9: V579 = S[V578]
0x5ca: V580 = ISZERO V579
0x5cb: V581 = ISZERO V580
0x5cc: V582 = 0x5d4
0x5cf: JUMPI 0x5d4 V581
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5d0
[0x5d0:0x5d3]
---
Predecessors: [0x5b0]
Successors: [0x841]
---
0x5d0 PUSH2 0x841
0x5d3 JUMP
---
0x5d0: V583 = 0x841
0x5d3: JUMP 0x841
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5d4
[0x5d4:0x5eb]
---
Predecessors: [0x5b0]
Successors: [0x5ec, 0x5f0]
---
0x5d4 JUMPDEST
0x5d5 PUSH1 0x7
0x5d7 SLOAD
0x5d8 CALLER
0x5d9 PUSH1 0x1
0x5db PUSH1 0xa0
0x5dd PUSH1 0x2
0x5df EXP
0x5e0 SUB
0x5e1 SWAP1
0x5e2 DUP2
0x5e3 AND
0x5e4 SWAP2
0x5e5 AND
0x5e6 EQ
0x5e7 ISZERO
0x5e8 PUSH2 0x5f0
0x5eb JUMPI
---
0x5d4: JUMPDEST 
0x5d5: V584 = 0x7
0x5d7: V585 = S[0x7]
0x5d8: V586 = CALLER
0x5d9: V587 = 0x1
0x5db: V588 = 0xa0
0x5dd: V589 = 0x2
0x5df: V590 = EXP 0x2 0xa0
0x5e0: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e3: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x5e5: V593 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x5e6: V594 = EQ V593 V592
0x5e7: V595 = ISZERO V594
0x5e8: V596 = 0x5f0
0x5eb: JUMPI 0x5f0 V595
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5ec
[0x5ec:0x5ef]
---
Predecessors: [0x5d4]
Successors: []
---
0x5ec PUSH1 0x0
0x5ee DUP1
0x5ef REVERT
---
0x5ec: V597 = 0x0
0x5ef: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5f0
[0x5f0:0x5fc]
---
Predecessors: [0x5d4]
Successors: [0x5fd, 0x60a]
---
0x5f0 JUMPDEST
0x5f1 PUSH1 0x2
0x5f3 SLOAD
0x5f4 PUSH1 0xff
0x5f6 AND
0x5f7 ISZERO
0x5f8 DUP1
0x5f9 PUSH2 0x60a
0x5fc JUMPI
---
0x5f0: JUMPDEST 
0x5f1: V598 = 0x2
0x5f3: V599 = S[0x2]
0x5f4: V600 = 0xff
0x5f6: V601 = AND 0xff V599
0x5f7: V602 = ISZERO V601
0x5f9: V603 = 0x60a
0x5fc: JUMPI 0x60a V602
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V602]
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0, V602]

================================

Block 0x5fd
[0x5fd:0x609]
---
Predecessors: [0x5f0]
Successors: [0x60a]
---
0x5fd POP
0x5fe PUSH1 0x2
0x600 SLOAD
0x601 PUSH3 0x10000
0x605 SWAP1
0x606 DIV
0x607 PUSH1 0xff
0x609 AND
---
0x5fe: V604 = 0x2
0x600: V605 = S[0x2]
0x601: V606 = 0x10000
0x606: V607 = DIV V605 0x10000
0x607: V608 = 0xff
0x609: V609 = AND 0xff V607
---
Entry stack: [V12, 0x15a, V252, V252, S5, 0x0, 0x0, 0x0, 0x0, V602]
Stack pops: 1
Stack additions: [V609]
Exit stack: [V12, 0x15a, V252, V252, S5, 0x0, 0x0, 0x0, 0x0, V609]

================================

Block 0x60a
[0x60a:0x60f]
---
Predecessors: [0x5f0, 0x5fd]
Successors: [0x610, 0x65c]
---
0x60a JUMPDEST
0x60b ISZERO
0x60c PUSH2 0x65c
0x60f JUMPI
---
0x60a: JUMPDEST 
0x60b: V610 = ISZERO S0
0x60c: V611 = 0x65c
0x60f: JUMPI 0x65c V610
---
Entry stack: [V12, 0x15a, V252, V252, S5, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S5, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x610
[0x610:0x652]
---
Predecessors: [0x60a]
Successors: [0x653, 0x657]
---
0x610 PUSH1 0x1
0x612 PUSH1 0xa0
0x614 PUSH1 0x2
0x616 EXP
0x617 SUB
0x618 CALLER
0x619 AND
0x61a PUSH1 0x0
0x61c DUP2
0x61d DUP2
0x61e MSTORE
0x61f PUSH1 0x20
0x621 DUP2
0x622 SWAP1
0x623 MSTORE
0x624 PUSH1 0x40
0x626 DUP1
0x627 DUP3
0x628 SHA3
0x629 DUP1
0x62a SLOAD
0x62b SWAP3
0x62c SWAP1
0x62d SSTORE
0x62e SWAP1
0x62f SWAP6
0x630 POP
0x631 DUP6
0x632 ISZERO
0x633 PUSH2 0x8fc
0x636 MUL
0x637 SWAP1
0x638 DUP7
0x639 SWAP1
0x63a MLOAD
0x63b PUSH1 0x0
0x63d PUSH1 0x40
0x63f MLOAD
0x640 DUP1
0x641 DUP4
0x642 SUB
0x643 DUP2
0x644 DUP6
0x645 DUP9
0x646 DUP9
0x647 CALL
0x648 SWAP4
0x649 POP
0x64a POP
0x64b POP
0x64c POP
0x64d ISZERO
0x64e ISZERO
0x64f PUSH2 0x657
0x652 JUMPI
---
0x610: V612 = 0x1
0x612: V613 = 0xa0
0x614: V614 = 0x2
0x616: V615 = EXP 0x2 0xa0
0x617: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x618: V617 = CALLER
0x619: V618 = AND V617 0xffffffffffffffffffffffffffffffffffffffff
0x61a: V619 = 0x0
0x61e: M[0x0] = V618
0x61f: V620 = 0x20
0x623: M[0x20] = 0x0
0x624: V621 = 0x40
0x628: V622 = SHA3 0x0 0x40
0x62a: V623 = S[V622]
0x62d: S[V622] = 0x0
0x632: V624 = ISZERO V623
0x633: V625 = 0x8fc
0x636: V626 = MUL 0x8fc V624
0x63a: V627 = M[0x40]
0x63b: V628 = 0x0
0x63d: V629 = 0x40
0x63f: V630 = M[0x40]
0x642: V631 = SUB V627 V630
0x647: V632 = CALL V626 V618 V623 V630 V631 V630 0x0
0x64d: V633 = ISZERO V632
0x64e: V634 = ISZERO V633
0x64f: V635 = 0x657
0x652: JUMPI 0x657 V634
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V623, S2, S1, S0]
Exit stack: [V12, 0x15a, V252, V252, S4, V623, 0x0, 0x0, 0x0]

================================

Block 0x653
[0x653:0x656]
---
Predecessors: [0x610]
Successors: []
---
0x653 PUSH1 0x0
0x655 DUP1
0x656 REVERT
---
0x653: V636 = 0x0
0x656: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S4, V623, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, V623, 0x0, 0x0, 0x0]

================================

Block 0x657
[0x657:0x65b]
---
Predecessors: [0x610]
Successors: [0x841]
---
0x657 JUMPDEST
0x658 PUSH2 0x841
0x65b JUMP
---
0x657: JUMPDEST 
0x658: V637 = 0x841
0x65b: JUMP 0x841
---
Entry stack: [V12, 0x15a, V252, V252, S4, V623, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, V623, 0x0, 0x0, 0x0]

================================

Block 0x65c
[0x65c:0x6ae]
---
Predecessors: [0x60a]
Successors: [0x6af, 0x6b3]
---
0x65c JUMPDEST
0x65d DUP6
0x65e PUSH1 0x1
0x660 PUSH1 0xa0
0x662 PUSH1 0x2
0x664 EXP
0x665 SUB
0x666 AND
0x667 PUSH4 0x70a08231
0x66c ADDRESS
0x66d PUSH1 0x0
0x66f PUSH1 0x40
0x671 MLOAD
0x672 PUSH1 0x20
0x674 ADD
0x675 MSTORE
0x676 PUSH1 0x40
0x678 MLOAD
0x679 PUSH1 0xe0
0x67b PUSH1 0x2
0x67d EXP
0x67e PUSH4 0xffffffff
0x683 DUP5
0x684 AND
0x685 MUL
0x686 DUP2
0x687 MSTORE
0x688 PUSH1 0x1
0x68a PUSH1 0xa0
0x68c PUSH1 0x2
0x68e EXP
0x68f SUB
0x690 SWAP1
0x691 SWAP2
0x692 AND
0x693 PUSH1 0x4
0x695 DUP3
0x696 ADD
0x697 MSTORE
0x698 PUSH1 0x24
0x69a ADD
0x69b PUSH1 0x20
0x69d PUSH1 0x40
0x69f MLOAD
0x6a0 DUP1
0x6a1 DUP4
0x6a2 SUB
0x6a3 DUP2
0x6a4 PUSH1 0x0
0x6a6 DUP8
0x6a7 DUP1
0x6a8 EXTCODESIZE
0x6a9 ISZERO
0x6aa ISZERO
0x6ab PUSH2 0x6b3
0x6ae JUMPI
---
0x65c: JUMPDEST 
0x65e: V638 = 0x1
0x660: V639 = 0xa0
0x662: V640 = 0x2
0x664: V641 = EXP 0x2 0xa0
0x665: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x666: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x667: V644 = 0x70a08231
0x66c: V645 = ADDRESS
0x66d: V646 = 0x0
0x66f: V647 = 0x40
0x671: V648 = M[0x40]
0x672: V649 = 0x20
0x674: V650 = ADD 0x20 V648
0x675: M[V650] = 0x0
0x676: V651 = 0x40
0x678: V652 = M[0x40]
0x679: V653 = 0xe0
0x67b: V654 = 0x2
0x67d: V655 = EXP 0x2 0xe0
0x67e: V656 = 0xffffffff
0x684: V657 = AND 0x70a08231 0xffffffff
0x685: V658 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x687: M[V652] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x688: V659 = 0x1
0x68a: V660 = 0xa0
0x68c: V661 = 0x2
0x68e: V662 = EXP 0x2 0xa0
0x68f: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x692: V664 = AND V645 0xffffffffffffffffffffffffffffffffffffffff
0x693: V665 = 0x4
0x696: V666 = ADD V652 0x4
0x697: M[V666] = V664
0x698: V667 = 0x24
0x69a: V668 = ADD 0x24 V652
0x69b: V669 = 0x20
0x69d: V670 = 0x40
0x69f: V671 = M[0x40]
0x6a2: V672 = SUB V668 V671
0x6a4: V673 = 0x0
0x6a8: V674 = EXTCODESIZE V643
0x6a9: V675 = ISZERO V674
0x6aa: V676 = ISZERO V675
0x6ab: V677 = 0x6b3
0x6ae: JUMPI 0x6b3 V676
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V643, 0x70a08231, V668, 0x20, V671, V672, V671, 0x0, V643]
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, 0x0, 0x0, 0x0, V643, 0x70a08231, V668, 0x20, V671, V672, V671, 0x0, V643]

================================

Block 0x6af
[0x6af:0x6b2]
---
Predecessors: [0x65c]
Successors: []
---
0x6af PUSH1 0x0
0x6b1 DUP1
0x6b2 REVERT
---
0x6af: V678 = 0x0
0x6b2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S13, 0x0, 0x0, 0x0, 0x0, V643, 0x70a08231, V668, 0x20, V671, V672, V671, 0x0, V643]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S13, 0x0, 0x0, 0x0, 0x0, V643, 0x70a08231, V668, 0x20, V671, V672, V671, 0x0, V643]

================================

Block 0x6b3
[0x6b3:0x6bf]
---
Predecessors: [0x65c]
Successors: [0x6c0, 0x6c4]
---
0x6b3 JUMPDEST
0x6b4 PUSH2 0x2c6
0x6b7 GAS
0x6b8 SUB
0x6b9 CALL
0x6ba ISZERO
0x6bb ISZERO
0x6bc PUSH2 0x6c4
0x6bf JUMPI
---
0x6b3: JUMPDEST 
0x6b4: V679 = 0x2c6
0x6b7: V680 = GAS
0x6b8: V681 = SUB V680 0x2c6
0x6b9: V682 = CALL V681 V643 0x0 V671 V672 V671 0x20
0x6ba: V683 = ISZERO V682
0x6bb: V684 = ISZERO V683
0x6bc: V685 = 0x6c4
0x6bf: JUMPI 0x6c4 V684
---
Entry stack: [V12, 0x15a, V252, V252, S13, 0x0, 0x0, 0x0, 0x0, V643, 0x70a08231, V668, 0x20, V671, V672, V671, 0x0, V643]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S13, 0x0, 0x0, 0x0, 0x0, V643, 0x70a08231, V668]

================================

Block 0x6c0
[0x6c0:0x6c3]
---
Predecessors: [0x6b3]
Successors: []
---
0x6c0 PUSH1 0x0
0x6c2 DUP1
0x6c3 REVERT
---
0x6c0: V686 = 0x0
0x6c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S7, 0x0, 0x0, 0x0, 0x0, V643, 0x70a08231, V668]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S7, 0x0, 0x0, 0x0, 0x0, V643, 0x70a08231, V668]

================================

Block 0x6c4
[0x6c4:0x6d6]
---
Predecessors: [0x6b3]
Successors: [0x6d7, 0x6db]
---
0x6c4 JUMPDEST
0x6c5 POP
0x6c6 POP
0x6c7 POP
0x6c8 PUSH1 0x40
0x6ca MLOAD
0x6cb DUP1
0x6cc MLOAD
0x6cd SWAP4
0x6ce POP
0x6cf POP
0x6d0 DUP3
0x6d1 ISZERO
0x6d2 ISZERO
0x6d3 PUSH2 0x6db
0x6d6 JUMPI
---
0x6c4: JUMPDEST 
0x6c8: V687 = 0x40
0x6ca: V688 = M[0x40]
0x6cc: V689 = M[V688]
0x6d1: V690 = ISZERO V689
0x6d2: V691 = ISZERO V690
0x6d3: V692 = 0x6db
0x6d6: JUMPI 0x6db V691
---
Entry stack: [V12, 0x15a, V252, V252, S7, 0x0, 0x0, 0x0, 0x0, V643, 0x70a08231, V668]
Stack pops: 6
Stack additions: [V689, S4, S3]
Exit stack: [V12, 0x15a, V252, V252, S7, 0x0, V689, 0x0, 0x0]

================================

Block 0x6d7
[0x6d7:0x6da]
---
Predecessors: [0x6c4]
Successors: []
---
0x6d7 PUSH1 0x0
0x6d9 DUP1
0x6da REVERT
---
0x6d7: V693 = 0x0
0x6da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, 0x0, 0x0]

================================

Block 0x6db
[0x6db:0x700]
---
Predecessors: [0x6c4]
Successors: [0x701, 0x702]
---
0x6db JUMPDEST
0x6dc PUSH1 0x3
0x6de SLOAD
0x6df PUSH1 0x1
0x6e1 PUSH1 0xa0
0x6e3 PUSH1 0x2
0x6e5 EXP
0x6e6 SUB
0x6e7 CALLER
0x6e8 AND
0x6e9 PUSH1 0x0
0x6eb SWAP1
0x6ec DUP2
0x6ed MSTORE
0x6ee PUSH1 0x20
0x6f0 DUP2
0x6f1 SWAP1
0x6f2 MSTORE
0x6f3 PUSH1 0x40
0x6f5 SWAP1
0x6f6 SHA3
0x6f7 SLOAD
0x6f8 DUP5
0x6f9 MUL
0x6fa DUP2
0x6fb ISZERO
0x6fc ISZERO
0x6fd PUSH2 0x702
0x700 JUMPI
---
0x6db: JUMPDEST 
0x6dc: V694 = 0x3
0x6de: V695 = S[0x3]
0x6df: V696 = 0x1
0x6e1: V697 = 0xa0
0x6e3: V698 = 0x2
0x6e5: V699 = EXP 0x2 0xa0
0x6e6: V700 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e7: V701 = CALLER
0x6e8: V702 = AND V701 0xffffffffffffffffffffffffffffffffffffffff
0x6e9: V703 = 0x0
0x6ed: M[0x0] = V702
0x6ee: V704 = 0x20
0x6f2: M[0x20] = 0x0
0x6f3: V705 = 0x40
0x6f6: V706 = SHA3 0x0 0x40
0x6f7: V707 = S[V706]
0x6f9: V708 = MUL V689 V707
0x6fb: V709 = ISZERO V695
0x6fc: V710 = ISZERO V709
0x6fd: V711 = 0x702
0x700: JUMPI 0x702 V710
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V695, V708]
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, 0x0, 0x0, V695, V708]

================================

Block 0x701
[0x701:0x701]
---
Predecessors: [0x6db]
Successors: []
---
0x701 INVALID
---
0x701: INVALID 
---
Entry stack: [V12, 0x15a, V252, V252, S6, 0x0, V689, 0x0, 0x0, V695, V708]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S6, 0x0, V689, 0x0, 0x0, V695, V708]

================================

Block 0x702
[0x702:0x72d]
---
Predecessors: [0x6db]
Successors: [0x72e]
---
0x702 JUMPDEST
0x703 PUSH1 0x1
0x705 PUSH1 0xa0
0x707 PUSH1 0x2
0x709 EXP
0x70a SUB
0x70b CALLER
0x70c AND
0x70d PUSH1 0x0
0x70f SWAP1
0x710 DUP2
0x711 MSTORE
0x712 PUSH1 0x20
0x714 DUP2
0x715 SWAP1
0x716 MSTORE
0x717 PUSH1 0x40
0x719 DUP2
0x71a SHA3
0x71b DUP1
0x71c SLOAD
0x71d PUSH1 0x3
0x71f DUP1
0x720 SLOAD
0x721 SWAP2
0x722 SWAP1
0x723 SWAP2
0x724 SUB
0x725 SWAP1
0x726 SSTORE
0x727 SSTORE
0x728 DIV
0x729 SWAP2
0x72a POP
0x72b PUSH1 0x64
0x72d DUP3
---
0x702: JUMPDEST 
0x703: V712 = 0x1
0x705: V713 = 0xa0
0x707: V714 = 0x2
0x709: V715 = EXP 0x2 0xa0
0x70a: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70b: V717 = CALLER
0x70c: V718 = AND V717 0xffffffffffffffffffffffffffffffffffffffff
0x70d: V719 = 0x0
0x711: M[0x0] = V718
0x712: V720 = 0x20
0x716: M[0x20] = 0x0
0x717: V721 = 0x40
0x71a: V722 = SHA3 0x0 0x40
0x71c: V723 = S[V722]
0x71d: V724 = 0x3
0x720: V725 = S[0x3]
0x724: V726 = SUB V725 V723
0x726: S[0x3] = V726
0x727: S[V722] = 0x0
0x728: V727 = DIV V708 V695
0x72b: V728 = 0x64
---
Entry stack: [V12, 0x15a, V252, V252, S6, 0x0, V689, 0x0, 0x0, V695, V708]
Stack pops: 4
Stack additions: [V727, S2, 0x64, V727]
Exit stack: [V12, 0x15a, V252, V252, S6, 0x0, V689, V727, 0x0, 0x64, V727]

================================

Block 0x72e
[0x72e:0x791]
---
Predecessors: [0x702]
Successors: [0x792, 0x796]
---
0x72e JUMPDEST
0x72f PUSH1 0x6
0x731 SLOAD
0x732 SWAP2
0x733 SWAP1
0x734 DIV
0x735 SWAP2
0x736 POP
0x737 PUSH1 0x1
0x739 PUSH1 0xa0
0x73b PUSH1 0x2
0x73d EXP
0x73e SUB
0x73f DUP1
0x740 DUP9
0x741 AND
0x742 SWAP2
0x743 PUSH4 0xa9059cbb
0x748 SWAP2
0x749 AND
0x74a DUP4
0x74b PUSH1 0x0
0x74d PUSH1 0x40
0x74f MLOAD
0x750 PUSH1 0x20
0x752 ADD
0x753 MSTORE
0x754 PUSH1 0x40
0x756 MLOAD
0x757 PUSH1 0xe0
0x759 PUSH1 0x2
0x75b EXP
0x75c PUSH4 0xffffffff
0x761 DUP6
0x762 AND
0x763 MUL
0x764 DUP2
0x765 MSTORE
0x766 PUSH1 0x1
0x768 PUSH1 0xa0
0x76a PUSH1 0x2
0x76c EXP
0x76d SUB
0x76e SWAP1
0x76f SWAP3
0x770 AND
0x771 PUSH1 0x4
0x773 DUP4
0x774 ADD
0x775 MSTORE
0x776 PUSH1 0x24
0x778 DUP3
0x779 ADD
0x77a MSTORE
0x77b PUSH1 0x44
0x77d ADD
0x77e PUSH1 0x20
0x780 PUSH1 0x40
0x782 MLOAD
0x783 DUP1
0x784 DUP4
0x785 SUB
0x786 DUP2
0x787 PUSH1 0x0
0x789 DUP8
0x78a DUP1
0x78b EXTCODESIZE
0x78c ISZERO
0x78d ISZERO
0x78e PUSH2 0x796
0x791 JUMPI
---
0x72e: JUMPDEST 
0x72f: V729 = 0x6
0x731: V730 = S[0x6]
0x734: V731 = DIV V727 0x64
0x737: V732 = 0x1
0x739: V733 = 0xa0
0x73b: V734 = 0x2
0x73d: V735 = EXP 0x2 0xa0
0x73e: V736 = SUB 0x10000000000000000000000000000000000000000 0x1
0x741: V737 = AND V252 0xffffffffffffffffffffffffffffffffffffffff
0x743: V738 = 0xa9059cbb
0x749: V739 = AND 0xffffffffffffffffffffffffffffffffffffffff V730
0x74b: V740 = 0x0
0x74d: V741 = 0x40
0x74f: V742 = M[0x40]
0x750: V743 = 0x20
0x752: V744 = ADD 0x20 V742
0x753: M[V744] = 0x0
0x754: V745 = 0x40
0x756: V746 = M[0x40]
0x757: V747 = 0xe0
0x759: V748 = 0x2
0x75b: V749 = EXP 0x2 0xe0
0x75c: V750 = 0xffffffff
0x762: V751 = AND 0xa9059cbb 0xffffffff
0x763: V752 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x765: M[V746] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x766: V753 = 0x1
0x768: V754 = 0xa0
0x76a: V755 = 0x2
0x76c: V756 = EXP 0x2 0xa0
0x76d: V757 = SUB 0x10000000000000000000000000000000000000000 0x1
0x770: V758 = AND V739 0xffffffffffffffffffffffffffffffffffffffff
0x771: V759 = 0x4
0x774: V760 = ADD V746 0x4
0x775: M[V760] = V758
0x776: V761 = 0x24
0x779: V762 = ADD V746 0x24
0x77a: M[V762] = V731
0x77b: V763 = 0x44
0x77d: V764 = ADD 0x44 V746
0x77e: V765 = 0x20
0x780: V766 = 0x40
0x782: V767 = M[0x40]
0x785: V768 = SUB V764 V767
0x787: V769 = 0x0
0x78b: V770 = EXTCODESIZE V737
0x78c: V771 = ISZERO V770
0x78d: V772 = ISZERO V771
0x78e: V773 = 0x796
0x791: JUMPI 0x796 V772
---
Entry stack: [V12, 0x15a, V252, V252, S6, 0x0, V689, V727, 0x0, 0x64, V727]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V731, V737, 0xa9059cbb, V764, 0x20, V767, V768, V767, 0x0, V737]
Exit stack: [V12, 0x15a, V252, V252, S6, 0x0, V689, V727, V731, V737, 0xa9059cbb, V764, 0x20, V767, V768, V767, 0x0, V737]

================================

Block 0x792
[0x792:0x795]
---
Predecessors: [0x72e]
Successors: []
---
0x792 PUSH1 0x0
0x794 DUP1
0x795 REVERT
---
0x792: V774 = 0x0
0x795: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S13, 0x0, V689, V727, V731, V737, 0xa9059cbb, V764, 0x20, V767, V768, V767, 0x0, V737]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S13, 0x0, V689, V727, V731, V737, 0xa9059cbb, V764, 0x20, V767, V768, V767, 0x0, V737]

================================

Block 0x796
[0x796:0x7a2]
---
Predecessors: [0x72e]
Successors: [0x7a3, 0x7a7]
---
0x796 JUMPDEST
0x797 PUSH2 0x2c6
0x79a GAS
0x79b SUB
0x79c CALL
0x79d ISZERO
0x79e ISZERO
0x79f PUSH2 0x7a7
0x7a2 JUMPI
---
0x796: JUMPDEST 
0x797: V775 = 0x2c6
0x79a: V776 = GAS
0x79b: V777 = SUB V776 0x2c6
0x79c: V778 = CALL V777 V737 0x0 V767 V768 V767 0x20
0x79d: V779 = ISZERO V778
0x79e: V780 = ISZERO V779
0x79f: V781 = 0x7a7
0x7a2: JUMPI 0x7a7 V780
---
Entry stack: [V12, 0x15a, V252, V252, S13, 0x0, V689, V727, V731, V737, 0xa9059cbb, V764, 0x20, V767, V768, V767, 0x0, V737]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S13, 0x0, V689, V727, V731, V737, 0xa9059cbb, V764]

================================

Block 0x7a3
[0x7a3:0x7a6]
---
Predecessors: [0x796]
Successors: []
---
0x7a3 PUSH1 0x0
0x7a5 DUP1
0x7a6 REVERT
---
0x7a3: V782 = 0x0
0x7a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S7, 0x0, V689, V727, V731, V737, 0xa9059cbb, V764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S7, 0x0, V689, V727, V731, V737, 0xa9059cbb, V764]

================================

Block 0x7a7
[0x7a7:0x7b7]
---
Predecessors: [0x796]
Successors: [0x7b8, 0x7bc]
---
0x7a7 JUMPDEST
0x7a8 POP
0x7a9 POP
0x7aa POP
0x7ab PUSH1 0x40
0x7ad MLOAD
0x7ae DUP1
0x7af MLOAD
0x7b0 SWAP1
0x7b1 POP
0x7b2 ISZERO
0x7b3 ISZERO
0x7b4 PUSH2 0x7bc
0x7b7 JUMPI
---
0x7a7: JUMPDEST 
0x7ab: V783 = 0x40
0x7ad: V784 = M[0x40]
0x7af: V785 = M[V784]
0x7b2: V786 = ISZERO V785
0x7b3: V787 = ISZERO V786
0x7b4: V788 = 0x7bc
0x7b7: JUMPI 0x7bc V787
---
Entry stack: [V12, 0x15a, V252, V252, S7, 0x0, V689, V727, V731, V737, 0xa9059cbb, V764]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S7, 0x0, V689, V727, V731]

================================

Block 0x7b8
[0x7b8:0x7bb]
---
Predecessors: [0x7a7]
Successors: []
---
0x7b8 PUSH1 0x0
0x7ba DUP1
0x7bb REVERT
---
0x7b8: V789 = 0x0
0x7bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, V727, V731]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, V727, V731]

================================

Block 0x7bc
[0x7bc:0x816]
---
Predecessors: [0x7a7]
Successors: [0x817, 0x81b]
---
0x7bc JUMPDEST
0x7bd DUP6
0x7be PUSH1 0x1
0x7c0 PUSH1 0xa0
0x7c2 PUSH1 0x2
0x7c4 EXP
0x7c5 SUB
0x7c6 AND
0x7c7 PUSH4 0xa9059cbb
0x7cc CALLER
0x7cd DUP4
0x7ce DUP6
0x7cf SUB
0x7d0 PUSH1 0x0
0x7d2 PUSH1 0x40
0x7d4 MLOAD
0x7d5 PUSH1 0x20
0x7d7 ADD
0x7d8 MSTORE
0x7d9 PUSH1 0x40
0x7db MLOAD
0x7dc PUSH1 0xe0
0x7de PUSH1 0x2
0x7e0 EXP
0x7e1 PUSH4 0xffffffff
0x7e6 DUP6
0x7e7 AND
0x7e8 MUL
0x7e9 DUP2
0x7ea MSTORE
0x7eb PUSH1 0x1
0x7ed PUSH1 0xa0
0x7ef PUSH1 0x2
0x7f1 EXP
0x7f2 SUB
0x7f3 SWAP1
0x7f4 SWAP3
0x7f5 AND
0x7f6 PUSH1 0x4
0x7f8 DUP4
0x7f9 ADD
0x7fa MSTORE
0x7fb PUSH1 0x24
0x7fd DUP3
0x7fe ADD
0x7ff MSTORE
0x800 PUSH1 0x44
0x802 ADD
0x803 PUSH1 0x20
0x805 PUSH1 0x40
0x807 MLOAD
0x808 DUP1
0x809 DUP4
0x80a SUB
0x80b DUP2
0x80c PUSH1 0x0
0x80e DUP8
0x80f DUP1
0x810 EXTCODESIZE
0x811 ISZERO
0x812 ISZERO
0x813 PUSH2 0x81b
0x816 JUMPI
---
0x7bc: JUMPDEST 
0x7be: V790 = 0x1
0x7c0: V791 = 0xa0
0x7c2: V792 = 0x2
0x7c4: V793 = EXP 0x2 0xa0
0x7c5: V794 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c6: V795 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x7c7: V796 = 0xa9059cbb
0x7cc: V797 = CALLER
0x7cf: V798 = SUB V727 V731
0x7d0: V799 = 0x0
0x7d2: V800 = 0x40
0x7d4: V801 = M[0x40]
0x7d5: V802 = 0x20
0x7d7: V803 = ADD 0x20 V801
0x7d8: M[V803] = 0x0
0x7d9: V804 = 0x40
0x7db: V805 = M[0x40]
0x7dc: V806 = 0xe0
0x7de: V807 = 0x2
0x7e0: V808 = EXP 0x2 0xe0
0x7e1: V809 = 0xffffffff
0x7e7: V810 = AND 0xa9059cbb 0xffffffff
0x7e8: V811 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x7ea: M[V805] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7eb: V812 = 0x1
0x7ed: V813 = 0xa0
0x7ef: V814 = 0x2
0x7f1: V815 = EXP 0x2 0xa0
0x7f2: V816 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f5: V817 = AND V797 0xffffffffffffffffffffffffffffffffffffffff
0x7f6: V818 = 0x4
0x7f9: V819 = ADD V805 0x4
0x7fa: M[V819] = V817
0x7fb: V820 = 0x24
0x7fe: V821 = ADD V805 0x24
0x7ff: M[V821] = V798
0x800: V822 = 0x44
0x802: V823 = ADD 0x44 V805
0x803: V824 = 0x20
0x805: V825 = 0x40
0x807: V826 = M[0x40]
0x80a: V827 = SUB V823 V826
0x80c: V828 = 0x0
0x810: V829 = EXTCODESIZE V795
0x811: V830 = ISZERO V829
0x812: V831 = ISZERO V830
0x813: V832 = 0x81b
0x816: JUMPI 0x81b V831
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, V727, V731]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V795, 0xa9059cbb, V823, 0x20, V826, V827, V826, 0x0, V795]
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, V727, V731, V795, 0xa9059cbb, V823, 0x20, V826, V827, V826, 0x0, V795]

================================

Block 0x817
[0x817:0x81a]
---
Predecessors: [0x7bc]
Successors: []
---
0x817 PUSH1 0x0
0x819 DUP1
0x81a REVERT
---
0x817: V833 = 0x0
0x81a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S13, 0x0, V689, V727, V731, V795, 0xa9059cbb, V823, 0x20, V826, V827, V826, 0x0, V795]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S13, 0x0, V689, V727, V731, V795, 0xa9059cbb, V823, 0x20, V826, V827, V826, 0x0, V795]

================================

Block 0x81b
[0x81b:0x827]
---
Predecessors: [0x7bc]
Successors: [0x828, 0x82c]
---
0x81b JUMPDEST
0x81c PUSH2 0x2c6
0x81f GAS
0x820 SUB
0x821 CALL
0x822 ISZERO
0x823 ISZERO
0x824 PUSH2 0x82c
0x827 JUMPI
---
0x81b: JUMPDEST 
0x81c: V834 = 0x2c6
0x81f: V835 = GAS
0x820: V836 = SUB V835 0x2c6
0x821: V837 = CALL V836 V795 0x0 V826 V827 V826 0x20
0x822: V838 = ISZERO V837
0x823: V839 = ISZERO V838
0x824: V840 = 0x82c
0x827: JUMPI 0x82c V839
---
Entry stack: [V12, 0x15a, V252, V252, S13, 0x0, V689, V727, V731, V795, 0xa9059cbb, V823, 0x20, V826, V827, V826, 0x0, V795]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S13, 0x0, V689, V727, V731, V795, 0xa9059cbb, V823]

================================

Block 0x828
[0x828:0x82b]
---
Predecessors: [0x81b]
Successors: []
---
0x828 PUSH1 0x0
0x82a DUP1
0x82b REVERT
---
0x828: V841 = 0x0
0x82b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S7, 0x0, V689, V727, V731, V795, 0xa9059cbb, V823]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S7, 0x0, V689, V727, V731, V795, 0xa9059cbb, V823]

================================

Block 0x82c
[0x82c:0x83c]
---
Predecessors: [0x81b]
Successors: [0x83d, 0x841]
---
0x82c JUMPDEST
0x82d POP
0x82e POP
0x82f POP
0x830 PUSH1 0x40
0x832 MLOAD
0x833 DUP1
0x834 MLOAD
0x835 SWAP1
0x836 POP
0x837 ISZERO
0x838 ISZERO
0x839 PUSH2 0x841
0x83c JUMPI
---
0x82c: JUMPDEST 
0x830: V842 = 0x40
0x832: V843 = M[0x40]
0x834: V844 = M[V843]
0x837: V845 = ISZERO V844
0x838: V846 = ISZERO V845
0x839: V847 = 0x841
0x83c: JUMPI 0x841 V846
---
Entry stack: [V12, 0x15a, V252, V252, S7, 0x0, V689, V727, V731, V795, 0xa9059cbb, V823]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S7, 0x0, V689, V727, V731]

================================

Block 0x83d
[0x83d:0x840]
---
Predecessors: [0x82c]
Successors: []
---
0x83d PUSH1 0x0
0x83f DUP1
0x840 REVERT
---
0x83d: V848 = 0x0
0x840: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, V727, V731]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, 0x0, V689, V727, V731]

================================

Block 0x841
[0x841:0x841]
---
Predecessors: [0x5d0, 0x657, 0x82c]
Successors: [0x842]
---
0x841 JUMPDEST
---
0x841: JUMPDEST 
---
Entry stack: [V12, 0x15a, V252, V252, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, S3, S2, S1, S0]

================================

Block 0x842
[0x842:0x842]
---
Predecessors: [0x841]
Successors: [0x843]
---
0x842 JUMPDEST
---
0x842: JUMPDEST 
---
Entry stack: [V12, 0x15a, V252, V252, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V252, V252, S4, S3, S2, S1, S0]

================================

Block 0x843
[0x843:0x84b]
---
Predecessors: [0x842]
Successors: [0x15a]
---
0x843 JUMPDEST
0x844 POP
0x845 POP
0x846 POP
0x847 POP
0x848 POP
0x849 POP
0x84a POP
0x84b JUMP
---
0x843: JUMPDEST 
0x84b: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V252, V252, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V12]

================================

Block 0x84c
[0x84c:0x854]
---
Predecessors: [0x2a5]
Successors: [0x186]
---
0x84c JUMPDEST
0x84d PUSH1 0x4
0x84f SLOAD
0x850 PUSH1 0xff
0x852 AND
0x853 DUP2
0x854 JUMP
---
0x84c: JUMPDEST 
0x84d: V849 = 0x4
0x84f: V850 = S[0x4]
0x850: V851 = 0xff
0x852: V852 = AND 0xff V850
0x854: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V852]
Exit stack: [V12, 0x186, V852]

================================

Block 0x855
[0x855:0x85a]
---
Predecessors: [0x2cc]
Successors: [0x1b9]
---
0x855 JUMPDEST
0x856 PUSH1 0x9
0x858 SLOAD
0x859 DUP2
0x85a JUMP
---
0x855: JUMPDEST 
0x856: V853 = 0x9
0x858: V854 = S[0x9]
0x85a: JUMP 0x1b9
---
Entry stack: [V12, 0x1b9]
Stack pops: 1
Stack additions: [S0, V854]
Exit stack: [V12, 0x1b9, V854]

================================

Block 0x85b
[0x85b:0x885]
---
Predecessors: [0x2f1]
Successors: [0x886, 0x89a]
---
0x85b JUMPDEST
0x85c PUSH1 0x1
0x85e PUSH1 0xa0
0x860 PUSH1 0x2
0x862 EXP
0x863 SUB
0x864 CALLER
0x865 AND
0x866 PUSH1 0x0
0x868 SWAP1
0x869 DUP2
0x86a MSTORE
0x86b PUSH1 0x1
0x86d PUSH1 0x20
0x86f MSTORE
0x870 PUSH1 0x40
0x872 DUP2
0x873 SHA3
0x874 SLOAD
0x875 DUP2
0x876 SWAP1
0x877 DUP2
0x878 SWAP1
0x879 DUP2
0x87a SWAP1
0x87b DUP2
0x87c SWAP1
0x87d DUP2
0x87e SWAP1
0x87f GT
0x880 DUP1
0x881 ISZERO
0x882 PUSH2 0x89a
0x885 JUMPI
---
0x85b: JUMPDEST 
0x85c: V855 = 0x1
0x85e: V856 = 0xa0
0x860: V857 = 0x2
0x862: V858 = EXP 0x2 0xa0
0x863: V859 = SUB 0x10000000000000000000000000000000000000000 0x1
0x864: V860 = CALLER
0x865: V861 = AND V860 0xffffffffffffffffffffffffffffffffffffffff
0x866: V862 = 0x0
0x86a: M[0x0] = V861
0x86b: V863 = 0x1
0x86d: V864 = 0x20
0x86f: M[0x20] = 0x1
0x870: V865 = 0x40
0x873: V866 = SHA3 0x0 0x40
0x874: V867 = S[V866]
0x87f: V868 = GT V867 0x0
0x881: V869 = ISZERO V868
0x882: V870 = 0x89a
0x885: JUMPI 0x89a V869
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, V868]
Exit stack: [V12, 0x15a, 0x0, 0x0, 0x0, 0x0, 0x0, V868]

================================

Block 0x886
[0x886:0x899]
---
Predecessors: [0x85b]
Successors: [0x89a]
---
0x886 POP
0x887 PUSH1 0x7
0x889 SLOAD
0x88a CALLER
0x88b PUSH1 0x1
0x88d PUSH1 0xa0
0x88f PUSH1 0x2
0x891 EXP
0x892 SUB
0x893 SWAP1
0x894 DUP2
0x895 AND
0x896 SWAP2
0x897 AND
0x898 EQ
0x899 ISZERO
---
0x887: V871 = 0x7
0x889: V872 = S[0x7]
0x88a: V873 = CALLER
0x88b: V874 = 0x1
0x88d: V875 = 0xa0
0x88f: V876 = 0x2
0x891: V877 = EXP 0x2 0xa0
0x892: V878 = SUB 0x10000000000000000000000000000000000000000 0x1
0x895: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0x897: V880 = AND V872 0xffffffffffffffffffffffffffffffffffffffff
0x898: V881 = EQ V880 V879
0x899: V882 = ISZERO V881
---
Entry stack: [V12, 0x15a, 0x0, 0x0, 0x0, 0x0, 0x0, V868]
Stack pops: 1
Stack additions: [V882]
Exit stack: [V12, 0x15a, 0x0, 0x0, 0x0, 0x0, 0x0, V882]

================================

Block 0x89a
[0x89a:0x89f]
---
Predecessors: [0x85b, 0x886]
Successors: [0x8a0, 0x8e7]
---
0x89a JUMPDEST
0x89b ISZERO
0x89c PUSH2 0x8e7
0x89f JUMPI
---
0x89a: JUMPDEST 
0x89b: V883 = ISZERO S0
0x89c: V884 = 0x8e7
0x89f: JUMPI 0x8e7 V883
---
Entry stack: [V12, 0x15a, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8a0
[0x8a0:0x8e2]
---
Predecessors: [0x89a]
Successors: [0x8e3, 0x8e7]
---
0x8a0 PUSH1 0x1
0x8a2 PUSH1 0xa0
0x8a4 PUSH1 0x2
0x8a6 EXP
0x8a7 SUB
0x8a8 CALLER
0x8a9 AND
0x8aa PUSH1 0x0
0x8ac DUP2
0x8ad DUP2
0x8ae MSTORE
0x8af PUSH1 0x1
0x8b1 PUSH1 0x20
0x8b3 MSTORE
0x8b4 PUSH1 0x40
0x8b6 DUP1
0x8b7 DUP3
0x8b8 SHA3
0x8b9 DUP1
0x8ba SLOAD
0x8bb SWAP3
0x8bc SWAP1
0x8bd SSTORE
0x8be SWAP1
0x8bf SWAP7
0x8c0 POP
0x8c1 DUP7
0x8c2 ISZERO
0x8c3 PUSH2 0x8fc
0x8c6 MUL
0x8c7 SWAP1
0x8c8 DUP8
0x8c9 SWAP1
0x8ca MLOAD
0x8cb PUSH1 0x0
0x8cd PUSH1 0x40
0x8cf MLOAD
0x8d0 DUP1
0x8d1 DUP4
0x8d2 SUB
0x8d3 DUP2
0x8d4 DUP6
0x8d5 DUP9
0x8d6 DUP9
0x8d7 CALL
0x8d8 SWAP4
0x8d9 POP
0x8da POP
0x8db POP
0x8dc POP
0x8dd ISZERO
0x8de ISZERO
0x8df PUSH2 0x8e7
0x8e2 JUMPI
---
0x8a0: V885 = 0x1
0x8a2: V886 = 0xa0
0x8a4: V887 = 0x2
0x8a6: V888 = EXP 0x2 0xa0
0x8a7: V889 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a8: V890 = CALLER
0x8a9: V891 = AND V890 0xffffffffffffffffffffffffffffffffffffffff
0x8aa: V892 = 0x0
0x8ae: M[0x0] = V891
0x8af: V893 = 0x1
0x8b1: V894 = 0x20
0x8b3: M[0x20] = 0x1
0x8b4: V895 = 0x40
0x8b8: V896 = SHA3 0x0 0x40
0x8ba: V897 = S[V896]
0x8bd: S[V896] = 0x0
0x8c2: V898 = ISZERO V897
0x8c3: V899 = 0x8fc
0x8c6: V900 = MUL 0x8fc V898
0x8ca: V901 = M[0x40]
0x8cb: V902 = 0x0
0x8cd: V903 = 0x40
0x8cf: V904 = M[0x40]
0x8d2: V905 = SUB V901 V904
0x8d7: V906 = CALL V900 V891 V897 V904 V905 V904 0x0
0x8dd: V907 = ISZERO V906
0x8de: V908 = ISZERO V907
0x8df: V909 = 0x8e7
0x8e2: JUMPI 0x8e7 V908
---
Entry stack: [V12, 0x15a, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [V897, S3, S2, S1, S0]
Exit stack: [V12, 0x15a, V897, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8e3
[0x8e3:0x8e6]
---
Predecessors: [0x8a0]
Successors: []
---
0x8e3 PUSH1 0x0
0x8e5 DUP1
0x8e6 REVERT
---
0x8e3: V910 = 0x0
0x8e6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V897, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V897, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8e7
[0x8e7:0x8e7]
---
Predecessors: [0x89a, 0x8a0]
Successors: [0x8e8]
---
0x8e7 JUMPDEST
---
0x8e7: JUMPDEST 
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8e8
[0x8e8:0x907]
---
Predecessors: [0x8e7]
Successors: [0x908, 0x90c]
---
0x8e8 JUMPDEST
0x8e9 PUSH1 0x1
0x8eb PUSH1 0xa0
0x8ed PUSH1 0x2
0x8ef EXP
0x8f0 SUB
0x8f1 CALLER
0x8f2 AND
0x8f3 PUSH1 0x0
0x8f5 SWAP1
0x8f6 DUP2
0x8f7 MSTORE
0x8f8 PUSH1 0x20
0x8fa DUP2
0x8fb SWAP1
0x8fc MSTORE
0x8fd PUSH1 0x40
0x8ff SWAP1
0x900 SHA3
0x901 SLOAD
0x902 ISZERO
0x903 ISZERO
0x904 PUSH2 0x90c
0x907 JUMPI
---
0x8e8: JUMPDEST 
0x8e9: V911 = 0x1
0x8eb: V912 = 0xa0
0x8ed: V913 = 0x2
0x8ef: V914 = EXP 0x2 0xa0
0x8f0: V915 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f1: V916 = CALLER
0x8f2: V917 = AND V916 0xffffffffffffffffffffffffffffffffffffffff
0x8f3: V918 = 0x0
0x8f7: M[0x0] = V917
0x8f8: V919 = 0x20
0x8fc: M[0x20] = 0x0
0x8fd: V920 = 0x40
0x900: V921 = SHA3 0x0 0x40
0x901: V922 = S[V921]
0x902: V923 = ISZERO V922
0x903: V924 = ISZERO V923
0x904: V925 = 0x90c
0x907: JUMPI 0x90c V924
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x908
[0x908:0x90b]
---
Predecessors: [0x8e8]
Successors: [0xb97]
---
0x908 PUSH2 0xb97
0x90b JUMP
---
0x908: V926 = 0xb97
0x90b: JUMP 0xb97
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x90c
[0x90c:0x923]
---
Predecessors: [0x8e8]
Successors: [0x924, 0x928]
---
0x90c JUMPDEST
0x90d PUSH1 0x7
0x90f SLOAD
0x910 CALLER
0x911 PUSH1 0x1
0x913 PUSH1 0xa0
0x915 PUSH1 0x2
0x917 EXP
0x918 SUB
0x919 SWAP1
0x91a DUP2
0x91b AND
0x91c SWAP2
0x91d AND
0x91e EQ
0x91f ISZERO
0x920 PUSH2 0x928
0x923 JUMPI
---
0x90c: JUMPDEST 
0x90d: V927 = 0x7
0x90f: V928 = S[0x7]
0x910: V929 = CALLER
0x911: V930 = 0x1
0x913: V931 = 0xa0
0x915: V932 = 0x2
0x917: V933 = EXP 0x2 0xa0
0x918: V934 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91b: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V929
0x91d: V936 = AND V928 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V937 = EQ V936 V935
0x91f: V938 = ISZERO V937
0x920: V939 = 0x928
0x923: JUMPI 0x928 V938
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x924
[0x924:0x927]
---
Predecessors: [0x90c]
Successors: []
---
0x924 PUSH1 0x0
0x926 DUP1
0x927 REVERT
---
0x924: V940 = 0x0
0x927: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x928
[0x928:0x934]
---
Predecessors: [0x90c]
Successors: [0x935, 0x942]
---
0x928 JUMPDEST
0x929 PUSH1 0x2
0x92b SLOAD
0x92c PUSH1 0xff
0x92e AND
0x92f ISZERO
0x930 DUP1
0x931 PUSH2 0x942
0x934 JUMPI
---
0x928: JUMPDEST 
0x929: V941 = 0x2
0x92b: V942 = S[0x2]
0x92c: V943 = 0xff
0x92e: V944 = AND 0xff V942
0x92f: V945 = ISZERO V944
0x931: V946 = 0x942
0x934: JUMPI 0x942 V945
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V945]
Exit stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0, V945]

================================

Block 0x935
[0x935:0x941]
---
Predecessors: [0x928]
Successors: [0x942]
---
0x935 POP
0x936 PUSH1 0x2
0x938 SLOAD
0x939 PUSH3 0x10000
0x93d SWAP1
0x93e DIV
0x93f PUSH1 0xff
0x941 AND
---
0x936: V947 = 0x2
0x938: V948 = S[0x2]
0x939: V949 = 0x10000
0x93e: V950 = DIV V948 0x10000
0x93f: V951 = 0xff
0x941: V952 = AND 0xff V950
---
Entry stack: [V12, 0x15a, S5, 0x0, 0x0, 0x0, 0x0, V945]
Stack pops: 1
Stack additions: [V952]
Exit stack: [V12, 0x15a, S5, 0x0, 0x0, 0x0, 0x0, V952]

================================

Block 0x942
[0x942:0x947]
---
Predecessors: [0x928, 0x935]
Successors: [0x948, 0x994]
---
0x942 JUMPDEST
0x943 ISZERO
0x944 PUSH2 0x994
0x947 JUMPI
---
0x942: JUMPDEST 
0x943: V953 = ISZERO S0
0x944: V954 = 0x994
0x947: JUMPI 0x994 V953
---
Entry stack: [V12, 0x15a, S5, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, S5, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x948
[0x948:0x98a]
---
Predecessors: [0x942]
Successors: [0x98b, 0x98f]
---
0x948 PUSH1 0x1
0x94a PUSH1 0xa0
0x94c PUSH1 0x2
0x94e EXP
0x94f SUB
0x950 CALLER
0x951 AND
0x952 PUSH1 0x0
0x954 DUP2
0x955 DUP2
0x956 MSTORE
0x957 PUSH1 0x20
0x959 DUP2
0x95a SWAP1
0x95b MSTORE
0x95c PUSH1 0x40
0x95e DUP1
0x95f DUP3
0x960 SHA3
0x961 DUP1
0x962 SLOAD
0x963 SWAP3
0x964 SWAP1
0x965 SSTORE
0x966 SWAP1
0x967 SWAP6
0x968 POP
0x969 DUP6
0x96a ISZERO
0x96b PUSH2 0x8fc
0x96e MUL
0x96f SWAP1
0x970 DUP7
0x971 SWAP1
0x972 MLOAD
0x973 PUSH1 0x0
0x975 PUSH1 0x40
0x977 MLOAD
0x978 DUP1
0x979 DUP4
0x97a SUB
0x97b DUP2
0x97c DUP6
0x97d DUP9
0x97e DUP9
0x97f CALL
0x980 SWAP4
0x981 POP
0x982 POP
0x983 POP
0x984 POP
0x985 ISZERO
0x986 ISZERO
0x987 PUSH2 0x98f
0x98a JUMPI
---
0x948: V955 = 0x1
0x94a: V956 = 0xa0
0x94c: V957 = 0x2
0x94e: V958 = EXP 0x2 0xa0
0x94f: V959 = SUB 0x10000000000000000000000000000000000000000 0x1
0x950: V960 = CALLER
0x951: V961 = AND V960 0xffffffffffffffffffffffffffffffffffffffff
0x952: V962 = 0x0
0x956: M[0x0] = V961
0x957: V963 = 0x20
0x95b: M[0x20] = 0x0
0x95c: V964 = 0x40
0x960: V965 = SHA3 0x0 0x40
0x962: V966 = S[V965]
0x965: S[V965] = 0x0
0x96a: V967 = ISZERO V966
0x96b: V968 = 0x8fc
0x96e: V969 = MUL 0x8fc V967
0x972: V970 = M[0x40]
0x973: V971 = 0x0
0x975: V972 = 0x40
0x977: V973 = M[0x40]
0x97a: V974 = SUB V970 V973
0x97f: V975 = CALL V969 V961 V966 V973 V974 V973 0x0
0x985: V976 = ISZERO V975
0x986: V977 = ISZERO V976
0x987: V978 = 0x98f
0x98a: JUMPI 0x98f V977
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V966, S2, S1, S0]
Exit stack: [V12, 0x15a, S4, V966, 0x0, 0x0, 0x0]

================================

Block 0x98b
[0x98b:0x98e]
---
Predecessors: [0x948]
Successors: []
---
0x98b PUSH1 0x0
0x98d DUP1
0x98e REVERT
---
0x98b: V979 = 0x0
0x98e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S4, V966, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, V966, 0x0, 0x0, 0x0]

================================

Block 0x98f
[0x98f:0x993]
---
Predecessors: [0x948]
Successors: [0xb97]
---
0x98f JUMPDEST
0x990 PUSH2 0xb97
0x993 JUMP
---
0x98f: JUMPDEST 
0x990: V980 = 0xb97
0x993: JUMP 0xb97
---
Entry stack: [V12, 0x15a, S4, V966, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, V966, 0x0, 0x0, 0x0]

================================

Block 0x994
[0x994:0x9a5]
---
Predecessors: [0x942]
Successors: [0x9a6, 0x9aa]
---
0x994 JUMPDEST
0x995 PUSH1 0x2
0x997 SLOAD
0x998 PUSH2 0x100
0x99b SWAP1
0x99c DIV
0x99d PUSH1 0xff
0x99f AND
0x9a0 ISZERO
0x9a1 ISZERO
0x9a2 PUSH2 0x9aa
0x9a5 JUMPI
---
0x994: JUMPDEST 
0x995: V981 = 0x2
0x997: V982 = S[0x2]
0x998: V983 = 0x100
0x99c: V984 = DIV V982 0x100
0x99d: V985 = 0xff
0x99f: V986 = AND 0xff V984
0x9a0: V987 = ISZERO V986
0x9a1: V988 = ISZERO V987
0x9a2: V989 = 0x9aa
0x9a5: JUMPI 0x9aa V988
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9a6
[0x9a6:0x9a9]
---
Predecessors: [0x994]
Successors: []
---
0x9a6 PUSH1 0x0
0x9a8 DUP1
0x9a9 REVERT
---
0x9a6: V990 = 0x0
0x9a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9aa
[0x9aa:0x9fe]
---
Predecessors: [0x994]
Successors: [0x9ff, 0xa03]
---
0x9aa JUMPDEST
0x9ab PUSH1 0x8
0x9ad SLOAD
0x9ae PUSH1 0x1
0x9b0 PUSH1 0xa0
0x9b2 PUSH1 0x2
0x9b4 EXP
0x9b5 SUB
0x9b6 AND
0x9b7 PUSH4 0x70a08231
0x9bc ADDRESS
0x9bd PUSH1 0x0
0x9bf PUSH1 0x40
0x9c1 MLOAD
0x9c2 PUSH1 0x20
0x9c4 ADD
0x9c5 MSTORE
0x9c6 PUSH1 0x40
0x9c8 MLOAD
0x9c9 PUSH1 0xe0
0x9cb PUSH1 0x2
0x9cd EXP
0x9ce PUSH4 0xffffffff
0x9d3 DUP5
0x9d4 AND
0x9d5 MUL
0x9d6 DUP2
0x9d7 MSTORE
0x9d8 PUSH1 0x1
0x9da PUSH1 0xa0
0x9dc PUSH1 0x2
0x9de EXP
0x9df SUB
0x9e0 SWAP1
0x9e1 SWAP2
0x9e2 AND
0x9e3 PUSH1 0x4
0x9e5 DUP3
0x9e6 ADD
0x9e7 MSTORE
0x9e8 PUSH1 0x24
0x9ea ADD
0x9eb PUSH1 0x20
0x9ed PUSH1 0x40
0x9ef MLOAD
0x9f0 DUP1
0x9f1 DUP4
0x9f2 SUB
0x9f3 DUP2
0x9f4 PUSH1 0x0
0x9f6 DUP8
0x9f7 DUP1
0x9f8 EXTCODESIZE
0x9f9 ISZERO
0x9fa ISZERO
0x9fb PUSH2 0xa03
0x9fe JUMPI
---
0x9aa: JUMPDEST 
0x9ab: V991 = 0x8
0x9ad: V992 = S[0x8]
0x9ae: V993 = 0x1
0x9b0: V994 = 0xa0
0x9b2: V995 = 0x2
0x9b4: V996 = EXP 0x2 0xa0
0x9b5: V997 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b6: V998 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0x9b7: V999 = 0x70a08231
0x9bc: V1000 = ADDRESS
0x9bd: V1001 = 0x0
0x9bf: V1002 = 0x40
0x9c1: V1003 = M[0x40]
0x9c2: V1004 = 0x20
0x9c4: V1005 = ADD 0x20 V1003
0x9c5: M[V1005] = 0x0
0x9c6: V1006 = 0x40
0x9c8: V1007 = M[0x40]
0x9c9: V1008 = 0xe0
0x9cb: V1009 = 0x2
0x9cd: V1010 = EXP 0x2 0xe0
0x9ce: V1011 = 0xffffffff
0x9d4: V1012 = AND 0x70a08231 0xffffffff
0x9d5: V1013 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x9d7: M[V1007] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9d8: V1014 = 0x1
0x9da: V1015 = 0xa0
0x9dc: V1016 = 0x2
0x9de: V1017 = EXP 0x2 0xa0
0x9df: V1018 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e2: V1019 = AND V1000 0xffffffffffffffffffffffffffffffffffffffff
0x9e3: V1020 = 0x4
0x9e6: V1021 = ADD V1007 0x4
0x9e7: M[V1021] = V1019
0x9e8: V1022 = 0x24
0x9ea: V1023 = ADD 0x24 V1007
0x9eb: V1024 = 0x20
0x9ed: V1025 = 0x40
0x9ef: V1026 = M[0x40]
0x9f2: V1027 = SUB V1023 V1026
0x9f4: V1028 = 0x0
0x9f8: V1029 = EXTCODESIZE V998
0x9f9: V1030 = ISZERO V1029
0x9fa: V1031 = ISZERO V1030
0x9fb: V1032 = 0xa03
0x9fe: JUMPI 0xa03 V1031
---
Entry stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V998, 0x70a08231, V1023, 0x20, V1026, V1027, V1026, 0x0, V998]
Exit stack: [V12, 0x15a, S4, 0x0, 0x0, 0x0, 0x0, V998, 0x70a08231, V1023, 0x20, V1026, V1027, V1026, 0x0, V998]

================================

Block 0x9ff
[0x9ff:0xa02]
---
Predecessors: [0x9aa]
Successors: []
---
0x9ff PUSH1 0x0
0xa01 DUP1
0xa02 REVERT
---
0x9ff: V1033 = 0x0
0xa02: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S13, 0x0, 0x0, 0x0, 0x0, V998, 0x70a08231, V1023, 0x20, V1026, V1027, V1026, 0x0, V998]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S13, 0x0, 0x0, 0x0, 0x0, V998, 0x70a08231, V1023, 0x20, V1026, V1027, V1026, 0x0, V998]

================================

Block 0xa03
[0xa03:0xa0f]
---
Predecessors: [0x9aa]
Successors: [0xa10, 0xa14]
---
0xa03 JUMPDEST
0xa04 PUSH2 0x2c6
0xa07 GAS
0xa08 SUB
0xa09 CALL
0xa0a ISZERO
0xa0b ISZERO
0xa0c PUSH2 0xa14
0xa0f JUMPI
---
0xa03: JUMPDEST 
0xa04: V1034 = 0x2c6
0xa07: V1035 = GAS
0xa08: V1036 = SUB V1035 0x2c6
0xa09: V1037 = CALL V1036 V998 0x0 V1026 V1027 V1026 0x20
0xa0a: V1038 = ISZERO V1037
0xa0b: V1039 = ISZERO V1038
0xa0c: V1040 = 0xa14
0xa0f: JUMPI 0xa14 V1039
---
Entry stack: [V12, 0x15a, S13, 0x0, 0x0, 0x0, 0x0, V998, 0x70a08231, V1023, 0x20, V1026, V1027, V1026, 0x0, V998]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, S13, 0x0, 0x0, 0x0, 0x0, V998, 0x70a08231, V1023]

================================

Block 0xa10
[0xa10:0xa13]
---
Predecessors: [0xa03]
Successors: []
---
0xa10 PUSH1 0x0
0xa12 DUP1
0xa13 REVERT
---
0xa10: V1041 = 0x0
0xa13: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S7, 0x0, 0x0, 0x0, 0x0, V998, 0x70a08231, V1023]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S7, 0x0, 0x0, 0x0, 0x0, V998, 0x70a08231, V1023]

================================

Block 0xa14
[0xa14:0xa26]
---
Predecessors: [0xa03]
Successors: [0xa27, 0xa2b]
---
0xa14 JUMPDEST
0xa15 POP
0xa16 POP
0xa17 POP
0xa18 PUSH1 0x40
0xa1a MLOAD
0xa1b DUP1
0xa1c MLOAD
0xa1d SWAP4
0xa1e POP
0xa1f POP
0xa20 DUP3
0xa21 ISZERO
0xa22 ISZERO
0xa23 PUSH2 0xa2b
0xa26 JUMPI
---
0xa14: JUMPDEST 
0xa18: V1042 = 0x40
0xa1a: V1043 = M[0x40]
0xa1c: V1044 = M[V1043]
0xa21: V1045 = ISZERO V1044
0xa22: V1046 = ISZERO V1045
0xa23: V1047 = 0xa2b
0xa26: JUMPI 0xa2b V1046
---
Entry stack: [V12, 0x15a, S7, 0x0, 0x0, 0x0, 0x0, V998, 0x70a08231, V1023]
Stack pops: 6
Stack additions: [V1044, S4, S3]
Exit stack: [V12, 0x15a, S7, 0x0, V1044, 0x0, 0x0]

================================

Block 0xa27
[0xa27:0xa2a]
---
Predecessors: [0xa14]
Successors: []
---
0xa27 PUSH1 0x0
0xa29 DUP1
0xa2a REVERT
---
0xa27: V1048 = 0x0
0xa2a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S4, 0x0, V1044, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, V1044, 0x0, 0x0]

================================

Block 0xa2b
[0xa2b:0xa50]
---
Predecessors: [0xa14]
Successors: [0xa51, 0xa52]
---
0xa2b JUMPDEST
0xa2c PUSH1 0x3
0xa2e SLOAD
0xa2f PUSH1 0x1
0xa31 PUSH1 0xa0
0xa33 PUSH1 0x2
0xa35 EXP
0xa36 SUB
0xa37 CALLER
0xa38 AND
0xa39 PUSH1 0x0
0xa3b SWAP1
0xa3c DUP2
0xa3d MSTORE
0xa3e PUSH1 0x20
0xa40 DUP2
0xa41 SWAP1
0xa42 MSTORE
0xa43 PUSH1 0x40
0xa45 SWAP1
0xa46 SHA3
0xa47 SLOAD
0xa48 DUP5
0xa49 MUL
0xa4a DUP2
0xa4b ISZERO
0xa4c ISZERO
0xa4d PUSH2 0xa52
0xa50 JUMPI
---
0xa2b: JUMPDEST 
0xa2c: V1049 = 0x3
0xa2e: V1050 = S[0x3]
0xa2f: V1051 = 0x1
0xa31: V1052 = 0xa0
0xa33: V1053 = 0x2
0xa35: V1054 = EXP 0x2 0xa0
0xa36: V1055 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa37: V1056 = CALLER
0xa38: V1057 = AND V1056 0xffffffffffffffffffffffffffffffffffffffff
0xa39: V1058 = 0x0
0xa3d: M[0x0] = V1057
0xa3e: V1059 = 0x20
0xa42: M[0x20] = 0x0
0xa43: V1060 = 0x40
0xa46: V1061 = SHA3 0x0 0x40
0xa47: V1062 = S[V1061]
0xa49: V1063 = MUL V1044 V1062
0xa4b: V1064 = ISZERO V1050
0xa4c: V1065 = ISZERO V1064
0xa4d: V1066 = 0xa52
0xa50: JUMPI 0xa52 V1065
---
Entry stack: [V12, 0x15a, S4, 0x0, V1044, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1050, V1063]
Exit stack: [V12, 0x15a, S4, 0x0, V1044, 0x0, 0x0, V1050, V1063]

================================

Block 0xa51
[0xa51:0xa51]
---
Predecessors: [0xa2b]
Successors: []
---
0xa51 INVALID
---
0xa51: INVALID 
---
Entry stack: [V12, 0x15a, S6, 0x0, V1044, 0x0, 0x0, V1050, V1063]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S6, 0x0, V1044, 0x0, 0x0, V1050, V1063]

================================

Block 0xa52
[0xa52:0xa7d]
---
Predecessors: [0xa2b]
Successors: [0xa7e]
---
0xa52 JUMPDEST
0xa53 PUSH1 0x1
0xa55 PUSH1 0xa0
0xa57 PUSH1 0x2
0xa59 EXP
0xa5a SUB
0xa5b CALLER
0xa5c AND
0xa5d PUSH1 0x0
0xa5f SWAP1
0xa60 DUP2
0xa61 MSTORE
0xa62 PUSH1 0x20
0xa64 DUP2
0xa65 SWAP1
0xa66 MSTORE
0xa67 PUSH1 0x40
0xa69 DUP2
0xa6a SHA3
0xa6b DUP1
0xa6c SLOAD
0xa6d PUSH1 0x3
0xa6f DUP1
0xa70 SLOAD
0xa71 SWAP2
0xa72 SWAP1
0xa73 SWAP2
0xa74 SUB
0xa75 SWAP1
0xa76 SSTORE
0xa77 SSTORE
0xa78 DIV
0xa79 SWAP2
0xa7a POP
0xa7b PUSH1 0x64
0xa7d DUP3
---
0xa52: JUMPDEST 
0xa53: V1067 = 0x1
0xa55: V1068 = 0xa0
0xa57: V1069 = 0x2
0xa59: V1070 = EXP 0x2 0xa0
0xa5a: V1071 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5b: V1072 = CALLER
0xa5c: V1073 = AND V1072 0xffffffffffffffffffffffffffffffffffffffff
0xa5d: V1074 = 0x0
0xa61: M[0x0] = V1073
0xa62: V1075 = 0x20
0xa66: M[0x20] = 0x0
0xa67: V1076 = 0x40
0xa6a: V1077 = SHA3 0x0 0x40
0xa6c: V1078 = S[V1077]
0xa6d: V1079 = 0x3
0xa70: V1080 = S[0x3]
0xa74: V1081 = SUB V1080 V1078
0xa76: S[0x3] = V1081
0xa77: S[V1077] = 0x0
0xa78: V1082 = DIV V1063 V1050
0xa7b: V1083 = 0x64
---
Entry stack: [V12, 0x15a, S6, 0x0, V1044, 0x0, 0x0, V1050, V1063]
Stack pops: 4
Stack additions: [V1082, S2, 0x64, V1082]
Exit stack: [V12, 0x15a, S6, 0x0, V1044, V1082, 0x0, 0x64, V1082]

================================

Block 0xa7e
[0xa7e:0xae5]
---
Predecessors: [0xa52]
Successors: [0xae6, 0xaea]
---
0xa7e JUMPDEST
0xa7f PUSH1 0x8
0xa81 SLOAD
0xa82 PUSH1 0x6
0xa84 SLOAD
0xa85 SWAP3
0xa86 SWAP1
0xa87 SWAP2
0xa88 DIV
0xa89 SWAP3
0xa8a POP
0xa8b PUSH1 0x1
0xa8d PUSH1 0xa0
0xa8f PUSH1 0x2
0xa91 EXP
0xa92 SUB
0xa93 SWAP1
0xa94 DUP2
0xa95 AND
0xa96 SWAP2
0xa97 PUSH4 0xa9059cbb
0xa9c SWAP2
0xa9d AND
0xa9e DUP4
0xa9f PUSH1 0x0
0xaa1 PUSH1 0x40
0xaa3 MLOAD
0xaa4 PUSH1 0x20
0xaa6 ADD
0xaa7 MSTORE
0xaa8 PUSH1 0x40
0xaaa MLOAD
0xaab PUSH1 0xe0
0xaad PUSH1 0x2
0xaaf EXP
0xab0 PUSH4 0xffffffff
0xab5 DUP6
0xab6 AND
0xab7 MUL
0xab8 DUP2
0xab9 MSTORE
0xaba PUSH1 0x1
0xabc PUSH1 0xa0
0xabe PUSH1 0x2
0xac0 EXP
0xac1 SUB
0xac2 SWAP1
0xac3 SWAP3
0xac4 AND
0xac5 PUSH1 0x4
0xac7 DUP4
0xac8 ADD
0xac9 MSTORE
0xaca PUSH1 0x24
0xacc DUP3
0xacd ADD
0xace MSTORE
0xacf PUSH1 0x44
0xad1 ADD
0xad2 PUSH1 0x20
0xad4 PUSH1 0x40
0xad6 MLOAD
0xad7 DUP1
0xad8 DUP4
0xad9 SUB
0xada DUP2
0xadb PUSH1 0x0
0xadd DUP8
0xade DUP1
0xadf EXTCODESIZE
0xae0 ISZERO
0xae1 ISZERO
0xae2 PUSH2 0xaea
0xae5 JUMPI
---
0xa7e: JUMPDEST 
0xa7f: V1084 = 0x8
0xa81: V1085 = S[0x8]
0xa82: V1086 = 0x6
0xa84: V1087 = S[0x6]
0xa88: V1088 = DIV V1082 0x64
0xa8b: V1089 = 0x1
0xa8d: V1090 = 0xa0
0xa8f: V1091 = 0x2
0xa91: V1092 = EXP 0x2 0xa0
0xa92: V1093 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa95: V1094 = AND 0xffffffffffffffffffffffffffffffffffffffff V1085
0xa97: V1095 = 0xa9059cbb
0xa9d: V1096 = AND 0xffffffffffffffffffffffffffffffffffffffff V1087
0xa9f: V1097 = 0x0
0xaa1: V1098 = 0x40
0xaa3: V1099 = M[0x40]
0xaa4: V1100 = 0x20
0xaa6: V1101 = ADD 0x20 V1099
0xaa7: M[V1101] = 0x0
0xaa8: V1102 = 0x40
0xaaa: V1103 = M[0x40]
0xaab: V1104 = 0xe0
0xaad: V1105 = 0x2
0xaaf: V1106 = EXP 0x2 0xe0
0xab0: V1107 = 0xffffffff
0xab6: V1108 = AND 0xa9059cbb 0xffffffff
0xab7: V1109 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xab9: M[V1103] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xaba: V1110 = 0x1
0xabc: V1111 = 0xa0
0xabe: V1112 = 0x2
0xac0: V1113 = EXP 0x2 0xa0
0xac1: V1114 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac4: V1115 = AND V1096 0xffffffffffffffffffffffffffffffffffffffff
0xac5: V1116 = 0x4
0xac8: V1117 = ADD V1103 0x4
0xac9: M[V1117] = V1115
0xaca: V1118 = 0x24
0xacd: V1119 = ADD V1103 0x24
0xace: M[V1119] = V1088
0xacf: V1120 = 0x44
0xad1: V1121 = ADD 0x44 V1103
0xad2: V1122 = 0x20
0xad4: V1123 = 0x40
0xad6: V1124 = M[0x40]
0xad9: V1125 = SUB V1121 V1124
0xadb: V1126 = 0x0
0xadf: V1127 = EXTCODESIZE V1094
0xae0: V1128 = ISZERO V1127
0xae1: V1129 = ISZERO V1128
0xae2: V1130 = 0xaea
0xae5: JUMPI 0xaea V1129
---
Entry stack: [V12, 0x15a, S6, 0x0, V1044, V1082, 0x0, 0x64, V1082]
Stack pops: 3
Stack additions: [V1088, V1094, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1094]
Exit stack: [V12, 0x15a, S6, 0x0, V1044, V1082, V1088, V1094, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1094]

================================

Block 0xae6
[0xae6:0xae9]
---
Predecessors: [0xa7e]
Successors: []
---
0xae6 PUSH1 0x0
0xae8 DUP1
0xae9 REVERT
---
0xae6: V1131 = 0x0
0xae9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S13, 0x0, V1044, V1082, V1088, V1094, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1094]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S13, 0x0, V1044, V1082, V1088, V1094, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1094]

================================

Block 0xaea
[0xaea:0xaf6]
---
Predecessors: [0xa7e]
Successors: [0xaf7, 0xafb]
---
0xaea JUMPDEST
0xaeb PUSH2 0x2c6
0xaee GAS
0xaef SUB
0xaf0 CALL
0xaf1 ISZERO
0xaf2 ISZERO
0xaf3 PUSH2 0xafb
0xaf6 JUMPI
---
0xaea: JUMPDEST 
0xaeb: V1132 = 0x2c6
0xaee: V1133 = GAS
0xaef: V1134 = SUB V1133 0x2c6
0xaf0: V1135 = CALL V1134 V1094 0x0 V1124 V1125 V1124 0x20
0xaf1: V1136 = ISZERO V1135
0xaf2: V1137 = ISZERO V1136
0xaf3: V1138 = 0xafb
0xaf6: JUMPI 0xafb V1137
---
Entry stack: [V12, 0x15a, S13, 0x0, V1044, V1082, V1088, V1094, 0xa9059cbb, V1121, 0x20, V1124, V1125, V1124, 0x0, V1094]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, S13, 0x0, V1044, V1082, V1088, V1094, 0xa9059cbb, V1121]

================================

Block 0xaf7
[0xaf7:0xafa]
---
Predecessors: [0xaea]
Successors: []
---
0xaf7 PUSH1 0x0
0xaf9 DUP1
0xafa REVERT
---
0xaf7: V1139 = 0x0
0xafa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S7, 0x0, V1044, V1082, V1088, V1094, 0xa9059cbb, V1121]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S7, 0x0, V1044, V1082, V1088, V1094, 0xa9059cbb, V1121]

================================

Block 0xafb
[0xafb:0xb0b]
---
Predecessors: [0xaea]
Successors: [0xb0c, 0xb10]
---
0xafb JUMPDEST
0xafc POP
0xafd POP
0xafe POP
0xaff PUSH1 0x40
0xb01 MLOAD
0xb02 DUP1
0xb03 MLOAD
0xb04 SWAP1
0xb05 POP
0xb06 ISZERO
0xb07 ISZERO
0xb08 PUSH2 0xb10
0xb0b JUMPI
---
0xafb: JUMPDEST 
0xaff: V1140 = 0x40
0xb01: V1141 = M[0x40]
0xb03: V1142 = M[V1141]
0xb06: V1143 = ISZERO V1142
0xb07: V1144 = ISZERO V1143
0xb08: V1145 = 0xb10
0xb0b: JUMPI 0xb10 V1144
---
Entry stack: [V12, 0x15a, S7, 0x0, V1044, V1082, V1088, V1094, 0xa9059cbb, V1121]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x15a, S7, 0x0, V1044, V1082, V1088]

================================

Block 0xb0c
[0xb0c:0xb0f]
---
Predecessors: [0xafb]
Successors: []
---
0xb0c PUSH1 0x0
0xb0e DUP1
0xb0f REVERT
---
0xb0c: V1146 = 0x0
0xb0f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S4, 0x0, V1044, V1082, V1088]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, V1044, V1082, V1088]

================================

Block 0xb10
[0xb10:0xb6c]
---
Predecessors: [0xafb]
Successors: [0xb6d, 0xb71]
---
0xb10 JUMPDEST
0xb11 PUSH1 0x8
0xb13 SLOAD
0xb14 PUSH1 0x1
0xb16 PUSH1 0xa0
0xb18 PUSH1 0x2
0xb1a EXP
0xb1b SUB
0xb1c AND
0xb1d PUSH4 0xa9059cbb
0xb22 CALLER
0xb23 DUP4
0xb24 DUP6
0xb25 SUB
0xb26 PUSH1 0x0
0xb28 PUSH1 0x40
0xb2a MLOAD
0xb2b PUSH1 0x20
0xb2d ADD
0xb2e MSTORE
0xb2f PUSH1 0x40
0xb31 MLOAD
0xb32 PUSH1 0xe0
0xb34 PUSH1 0x2
0xb36 EXP
0xb37 PUSH4 0xffffffff
0xb3c DUP6
0xb3d AND
0xb3e MUL
0xb3f DUP2
0xb40 MSTORE
0xb41 PUSH1 0x1
0xb43 PUSH1 0xa0
0xb45 PUSH1 0x2
0xb47 EXP
0xb48 SUB
0xb49 SWAP1
0xb4a SWAP3
0xb4b AND
0xb4c PUSH1 0x4
0xb4e DUP4
0xb4f ADD
0xb50 MSTORE
0xb51 PUSH1 0x24
0xb53 DUP3
0xb54 ADD
0xb55 MSTORE
0xb56 PUSH1 0x44
0xb58 ADD
0xb59 PUSH1 0x20
0xb5b PUSH1 0x40
0xb5d MLOAD
0xb5e DUP1
0xb5f DUP4
0xb60 SUB
0xb61 DUP2
0xb62 PUSH1 0x0
0xb64 DUP8
0xb65 DUP1
0xb66 EXTCODESIZE
0xb67 ISZERO
0xb68 ISZERO
0xb69 PUSH2 0xb71
0xb6c JUMPI
---
0xb10: JUMPDEST 
0xb11: V1147 = 0x8
0xb13: V1148 = S[0x8]
0xb14: V1149 = 0x1
0xb16: V1150 = 0xa0
0xb18: V1151 = 0x2
0xb1a: V1152 = EXP 0x2 0xa0
0xb1b: V1153 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1c: V1154 = AND 0xffffffffffffffffffffffffffffffffffffffff V1148
0xb1d: V1155 = 0xa9059cbb
0xb22: V1156 = CALLER
0xb25: V1157 = SUB V1082 V1088
0xb26: V1158 = 0x0
0xb28: V1159 = 0x40
0xb2a: V1160 = M[0x40]
0xb2b: V1161 = 0x20
0xb2d: V1162 = ADD 0x20 V1160
0xb2e: M[V1162] = 0x0
0xb2f: V1163 = 0x40
0xb31: V1164 = M[0x40]
0xb32: V1165 = 0xe0
0xb34: V1166 = 0x2
0xb36: V1167 = EXP 0x2 0xe0
0xb37: V1168 = 0xffffffff
0xb3d: V1169 = AND 0xa9059cbb 0xffffffff
0xb3e: V1170 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb40: M[V1164] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb41: V1171 = 0x1
0xb43: V1172 = 0xa0
0xb45: V1173 = 0x2
0xb47: V1174 = EXP 0x2 0xa0
0xb48: V1175 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4b: V1176 = AND V1156 0xffffffffffffffffffffffffffffffffffffffff
0xb4c: V1177 = 0x4
0xb4f: V1178 = ADD V1164 0x4
0xb50: M[V1178] = V1176
0xb51: V1179 = 0x24
0xb54: V1180 = ADD V1164 0x24
0xb55: M[V1180] = V1157
0xb56: V1181 = 0x44
0xb58: V1182 = ADD 0x44 V1164
0xb59: V1183 = 0x20
0xb5b: V1184 = 0x40
0xb5d: V1185 = M[0x40]
0xb60: V1186 = SUB V1182 V1185
0xb62: V1187 = 0x0
0xb66: V1188 = EXTCODESIZE V1154
0xb67: V1189 = ISZERO V1188
0xb68: V1190 = ISZERO V1189
0xb69: V1191 = 0xb71
0xb6c: JUMPI 0xb71 V1190
---
Entry stack: [V12, 0x15a, S4, 0x0, V1044, V1082, V1088]
Stack pops: 2
Stack additions: [S1, S0, V1154, 0xa9059cbb, V1182, 0x20, V1185, V1186, V1185, 0x0, V1154]
Exit stack: [V12, 0x15a, S4, 0x0, V1044, V1082, V1088, V1154, 0xa9059cbb, V1182, 0x20, V1185, V1186, V1185, 0x0, V1154]

================================

Block 0xb6d
[0xb6d:0xb70]
---
Predecessors: [0xb10]
Successors: []
---
0xb6d PUSH1 0x0
0xb6f DUP1
0xb70 REVERT
---
0xb6d: V1192 = 0x0
0xb70: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S13, 0x0, V1044, V1082, V1088, V1154, 0xa9059cbb, V1182, 0x20, V1185, V1186, V1185, 0x0, V1154]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S13, 0x0, V1044, V1082, V1088, V1154, 0xa9059cbb, V1182, 0x20, V1185, V1186, V1185, 0x0, V1154]

================================

Block 0xb71
[0xb71:0xb7d]
---
Predecessors: [0xb10]
Successors: [0xb7e, 0xb82]
---
0xb71 JUMPDEST
0xb72 PUSH2 0x2c6
0xb75 GAS
0xb76 SUB
0xb77 CALL
0xb78 ISZERO
0xb79 ISZERO
0xb7a PUSH2 0xb82
0xb7d JUMPI
---
0xb71: JUMPDEST 
0xb72: V1193 = 0x2c6
0xb75: V1194 = GAS
0xb76: V1195 = SUB V1194 0x2c6
0xb77: V1196 = CALL V1195 V1154 0x0 V1185 V1186 V1185 0x20
0xb78: V1197 = ISZERO V1196
0xb79: V1198 = ISZERO V1197
0xb7a: V1199 = 0xb82
0xb7d: JUMPI 0xb82 V1198
---
Entry stack: [V12, 0x15a, S13, 0x0, V1044, V1082, V1088, V1154, 0xa9059cbb, V1182, 0x20, V1185, V1186, V1185, 0x0, V1154]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, S13, 0x0, V1044, V1082, V1088, V1154, 0xa9059cbb, V1182]

================================

Block 0xb7e
[0xb7e:0xb81]
---
Predecessors: [0xb71]
Successors: []
---
0xb7e PUSH1 0x0
0xb80 DUP1
0xb81 REVERT
---
0xb7e: V1200 = 0x0
0xb81: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S7, 0x0, V1044, V1082, V1088, V1154, 0xa9059cbb, V1182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S7, 0x0, V1044, V1082, V1088, V1154, 0xa9059cbb, V1182]

================================

Block 0xb82
[0xb82:0xb92]
---
Predecessors: [0xb71]
Successors: [0xb93, 0xb97]
---
0xb82 JUMPDEST
0xb83 POP
0xb84 POP
0xb85 POP
0xb86 PUSH1 0x40
0xb88 MLOAD
0xb89 DUP1
0xb8a MLOAD
0xb8b SWAP1
0xb8c POP
0xb8d ISZERO
0xb8e ISZERO
0xb8f PUSH2 0xb97
0xb92 JUMPI
---
0xb82: JUMPDEST 
0xb86: V1201 = 0x40
0xb88: V1202 = M[0x40]
0xb8a: V1203 = M[V1202]
0xb8d: V1204 = ISZERO V1203
0xb8e: V1205 = ISZERO V1204
0xb8f: V1206 = 0xb97
0xb92: JUMPI 0xb97 V1205
---
Entry stack: [V12, 0x15a, S7, 0x0, V1044, V1082, V1088, V1154, 0xa9059cbb, V1182]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x15a, S7, 0x0, V1044, V1082, V1088]

================================

Block 0xb93
[0xb93:0xb96]
---
Predecessors: [0xb82]
Successors: []
---
0xb93 PUSH1 0x0
0xb95 DUP1
0xb96 REVERT
---
0xb93: V1207 = 0x0
0xb96: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, S4, 0x0, V1044, V1082, V1088]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, 0x0, V1044, V1082, V1088]

================================

Block 0xb97
[0xb97:0xb97]
---
Predecessors: [0x908, 0x98f, 0xb82]
Successors: [0xb98]
---
0xb97 JUMPDEST
---
0xb97: JUMPDEST 
---
Entry stack: [V12, 0x15a, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, S3, S2, S1, S0]

================================

Block 0xb98
[0xb98:0xb98]
---
Predecessors: [0xb97]
Successors: [0xb99]
---
0xb98 JUMPDEST
---
0xb98: JUMPDEST 
---
Entry stack: [V12, 0x15a, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, S4, S3, S2, S1, S0]

================================

Block 0xb99
[0xb99:0xb9f]
---
Predecessors: [0xb98]
Successors: [0x15a]
---
0xb99 JUMPDEST
0xb9a POP
0xb9b POP
0xb9c POP
0xb9d POP
0xb9e POP
0xb9f JUMP
---
0xb99: JUMPDEST 
0xb9f: JUMP 0x15a
---
Entry stack: [V12, 0x15a, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0xba0
[0xba0:0xba5]
---
Predecessors: [0x306]
Successors: [0x1b9]
---
0xba0 JUMPDEST
0xba1 PUSH1 0x3
0xba3 SLOAD
0xba4 DUP2
0xba5 JUMP
---
0xba0: JUMPDEST 
0xba1: V1208 = 0x3
0xba3: V1209 = S[0x3]
0xba5: JUMP 0x1b9
---
Entry stack: [V12, 0x1b9]
Stack pops: 1
Stack additions: [S0, V1209]
Exit stack: [V12, 0x1b9, V1209]

================================

Block 0xba6
[0xba6:0xbb4]
---
Predecessors: [0x32b]
Successors: [0x205]
---
0xba6 JUMPDEST
0xba7 PUSH1 0x6
0xba9 SLOAD
0xbaa PUSH1 0x1
0xbac PUSH1 0xa0
0xbae PUSH1 0x2
0xbb0 EXP
0xbb1 SUB
0xbb2 AND
0xbb3 DUP2
0xbb4 JUMP
---
0xba6: JUMPDEST 
0xba7: V1210 = 0x6
0xba9: V1211 = S[0x6]
0xbaa: V1212 = 0x1
0xbac: V1213 = 0xa0
0xbae: V1214 = 0x2
0xbb0: V1215 = EXP 0x2 0xa0
0xbb1: V1216 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb2: V1217 = AND 0xffffffffffffffffffffffffffffffffffffffff V1211
0xbb4: JUMP 0x205
---
Entry stack: [V12, 0x205]
Stack pops: 1
Stack additions: [S0, V1217]
Exit stack: [V12, 0x205, V1217]

================================

Block 0xbb5
[0xbb5:0xbcb]
---
Predecessors: [0x35a]
Successors: [0xbcc, 0xbd0]
---
0xbb5 JUMPDEST
0xbb6 PUSH1 0x6
0xbb8 SLOAD
0xbb9 CALLER
0xbba PUSH1 0x1
0xbbc PUSH1 0xa0
0xbbe PUSH1 0x2
0xbc0 EXP
0xbc1 SUB
0xbc2 SWAP1
0xbc3 DUP2
0xbc4 AND
0xbc5 SWAP2
0xbc6 AND
0xbc7 EQ
0xbc8 PUSH2 0xbd0
0xbcb JUMPI
---
0xbb5: JUMPDEST 
0xbb6: V1218 = 0x6
0xbb8: V1219 = S[0x6]
0xbb9: V1220 = CALLER
0xbba: V1221 = 0x1
0xbbc: V1222 = 0xa0
0xbbe: V1223 = 0x2
0xbc0: V1224 = EXP 0x2 0xa0
0xbc1: V1225 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc4: V1226 = AND 0xffffffffffffffffffffffffffffffffffffffff V1220
0xbc6: V1227 = AND V1219 0xffffffffffffffffffffffffffffffffffffffff
0xbc7: V1228 = EQ V1227 V1226
0xbc8: V1229 = 0xbd0
0xbcb: JUMPI 0xbd0 V1228
---
Entry stack: [V12, 0x15a, V332]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V332]

================================

Block 0xbcc
[0xbcc:0xbcf]
---
Predecessors: [0xbb5]
Successors: []
---
0xbcc PUSH1 0x0
0xbce DUP1
0xbcf REVERT
---
0xbcc: V1230 = 0x0
0xbcf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V332]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V332]

================================

Block 0xbd0
[0xbd0:0xc09]
---
Predecessors: [0xbb5]
Successors: [0xc0a]
---
0xbd0 JUMPDEST
0xbd1 PUSH1 0x8
0xbd3 DUP1
0xbd4 SLOAD
0xbd5 PUSH1 0x1
0xbd7 PUSH1 0xa0
0xbd9 PUSH1 0x2
0xbdb EXP
0xbdc SUB
0xbdd DUP4
0xbde AND
0xbdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf4 NOT
0xbf5 SWAP1
0xbf6 SWAP2
0xbf7 AND
0xbf8 OR
0xbf9 SWAP1
0xbfa SSTORE
0xbfb PUSH1 0x2
0xbfd DUP1
0xbfe SLOAD
0xbff PUSH2 0xff00
0xc02 NOT
0xc03 AND
0xc04 PUSH2 0x100
0xc07 OR
0xc08 SWAP1
0xc09 SSTORE
---
0xbd0: JUMPDEST 
0xbd1: V1231 = 0x8
0xbd4: V1232 = S[0x8]
0xbd5: V1233 = 0x1
0xbd7: V1234 = 0xa0
0xbd9: V1235 = 0x2
0xbdb: V1236 = EXP 0x2 0xa0
0xbdc: V1237 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbde: V1238 = AND V332 0xffffffffffffffffffffffffffffffffffffffff
0xbdf: V1239 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf4: V1240 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbf7: V1241 = AND V1232 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xbf8: V1242 = OR V1241 V1238
0xbfa: S[0x8] = V1242
0xbfb: V1243 = 0x2
0xbfe: V1244 = S[0x2]
0xbff: V1245 = 0xff00
0xc02: V1246 = NOT 0xff00
0xc03: V1247 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1244
0xc04: V1248 = 0x100
0xc07: V1249 = OR 0x100 V1247
0xc09: S[0x2] = V1249
---
Entry stack: [V12, 0x15a, V332]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, V332]

================================

Block 0xc0a
[0xc0a:0xc0c]
---
Predecessors: [0xbd0]
Successors: [0x15a]
---
0xc0a JUMPDEST
0xc0b POP
0xc0c JUMP
---
0xc0a: JUMPDEST 
0xc0c: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V332]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xc0d
[0xc0d:0xc23]
---
Predecessors: [0x37b]
Successors: [0xc24, 0xc28]
---
0xc0d JUMPDEST
0xc0e PUSH1 0x6
0xc10 SLOAD
0xc11 CALLER
0xc12 PUSH1 0x1
0xc14 PUSH1 0xa0
0xc16 PUSH1 0x2
0xc18 EXP
0xc19 SUB
0xc1a SWAP1
0xc1b DUP2
0xc1c AND
0xc1d SWAP2
0xc1e AND
0xc1f EQ
0xc20 PUSH2 0xc28
0xc23 JUMPI
---
0xc0d: JUMPDEST 
0xc0e: V1250 = 0x6
0xc10: V1251 = S[0x6]
0xc11: V1252 = CALLER
0xc12: V1253 = 0x1
0xc14: V1254 = 0xa0
0xc16: V1255 = 0x2
0xc18: V1256 = EXP 0x2 0xa0
0xc19: V1257 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1c: V1258 = AND 0xffffffffffffffffffffffffffffffffffffffff V1252
0xc1e: V1259 = AND V1251 0xffffffffffffffffffffffffffffffffffffffff
0xc1f: V1260 = EQ V1259 V1258
0xc20: V1261 = 0xc28
0xc23: JUMPI 0xc28 V1260
---
Entry stack: [V12, 0x15a, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V342]

================================

Block 0xc24
[0xc24:0xc27]
---
Predecessors: [0xc0d]
Successors: []
---
0xc24 PUSH1 0x0
0xc26 DUP1
0xc27 REVERT
---
0xc24: V1262 = 0x0
0xc27: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V342]

================================

Block 0xc28
[0xc28:0xc3d]
---
Predecessors: [0xc0d]
Successors: [0xc3e]
---
0xc28 JUMPDEST
0xc29 PUSH1 0x2
0xc2b DUP1
0xc2c SLOAD
0xc2d PUSH3 0xff0000
0xc31 NOT
0xc32 AND
0xc33 PUSH3 0x10000
0xc37 DUP4
0xc38 ISZERO
0xc39 ISZERO
0xc3a MUL
0xc3b OR
0xc3c SWAP1
0xc3d SSTORE
---
0xc28: JUMPDEST 
0xc29: V1263 = 0x2
0xc2c: V1264 = S[0x2]
0xc2d: V1265 = 0xff0000
0xc31: V1266 = NOT 0xff0000
0xc32: V1267 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1264
0xc33: V1268 = 0x10000
0xc38: V1269 = ISZERO V342
0xc39: V1270 = ISZERO V1269
0xc3a: V1271 = MUL V1270 0x10000
0xc3b: V1272 = OR V1271 V1267
0xc3d: S[0x2] = V1272
---
Entry stack: [V12, 0x15a, V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15a, V342]

================================

Block 0xc3e
[0xc3e:0xc40]
---
Predecessors: [0xc28]
Successors: [0x15a]
---
0xc3e JUMPDEST
0xc3f POP
0xc40 JUMP
---
0xc3e: JUMPDEST 
0xc40: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V342]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xc41
[0xc41:0xc58]
---
Predecessors: [0x395]
Successors: [0xc59, 0xcbc]
---
0xc41 JUMPDEST
0xc42 PUSH1 0x6
0xc44 SLOAD
0xc45 CALLER
0xc46 PUSH1 0x1
0xc48 PUSH1 0xa0
0xc4a PUSH1 0x2
0xc4c EXP
0xc4d SUB
0xc4e SWAP1
0xc4f DUP2
0xc50 AND
0xc51 SWAP2
0xc52 AND
0xc53 EQ
0xc54 DUP1
0xc55 PUSH2 0xcbc
0xc58 JUMPI
---
0xc41: JUMPDEST 
0xc42: V1273 = 0x6
0xc44: V1274 = S[0x6]
0xc45: V1275 = CALLER
0xc46: V1276 = 0x1
0xc48: V1277 = 0xa0
0xc4a: V1278 = 0x2
0xc4c: V1279 = EXP 0x2 0xa0
0xc4d: V1280 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc50: V1281 = AND 0xffffffffffffffffffffffffffffffffffffffff V1275
0xc52: V1282 = AND V1274 0xffffffffffffffffffffffffffffffffffffffff
0xc53: V1283 = EQ V1282 V1281
0xc55: V1284 = 0xcbc
0xc58: JUMPI 0xcbc V1283
---
Entry stack: [V12, 0x15a, V362]
Stack pops: 0
Stack additions: [V1283]
Exit stack: [V12, 0x15a, V362, V1283]

================================

Block 0xc59
[0xc59:0xc6c]
---
Predecessors: [0xc41]
Successors: [0xc6d]
---
0xc59 POP
0xc5a PUSH1 0x5
0xc5c SLOAD
0xc5d DUP2
0xc5e PUSH1 0x40
0xc60 MLOAD
0xc61 DUP1
0xc62 DUP3
0xc63 DUP1
0xc64 MLOAD
0xc65 SWAP1
0xc66 PUSH1 0x20
0xc68 ADD
0xc69 SWAP1
0xc6a DUP1
0xc6b DUP4
0xc6c DUP4
---
0xc5a: V1285 = 0x5
0xc5c: V1286 = S[0x5]
0xc5e: V1287 = 0x40
0xc60: V1288 = M[0x40]
0xc64: V1289 = M[V362]
0xc66: V1290 = 0x20
0xc68: V1291 = ADD 0x20 V362
---
Entry stack: [V12, 0x15a, V362, V1283]
Stack pops: 2
Stack additions: [S1, V1286, S1, V1288, V1288, V1291, V1289, V1289, V1288, V1291]
Exit stack: [V12, 0x15a, V362, V1286, V362, V1288, V1288, V1291, V1289, V1289, V1288, V1291]

================================

Block 0xc6d
[0xc6d:0xc75]
---
Predecessors: [0xc59, 0xc7a]
Successors: [0xc76, 0xc8d]
---
0xc6d JUMPDEST
0xc6e PUSH1 0x20
0xc70 DUP4
0xc71 LT
0xc72 PUSH2 0xc8d
0xc75 JUMPI
---
0xc6d: JUMPDEST 
0xc6e: V1292 = 0x20
0xc71: V1293 = LT S2 0x20
0xc72: V1294 = 0xc8d
0xc75: JUMPI 0xc8d V1293
---
Entry stack: [V12, 0x15a, V362, V1286, V362, V1288, V1288, V1291, V1289, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x15a, V362, V1286, V362, V1288, V1288, V1291, V1289, S2, S1, S0]

================================

Block 0xc76
[0xc76:0xc79]
---
Predecessors: [0xc6d]
Successors: [0xc7a]
---
0xc76 DUP1
0xc77 MLOAD
0xc78 DUP3
0xc79 MSTORE
---
0xc77: V1295 = M[S0]
0xc79: M[S1] = V1295
---
Entry stack: [V12, 0x15a, V362, V1286, V362, V1288, V1288, V1291, V1289, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x15a, V362, V1286, V362, V1288, V1288, V1291, V1289, S2, S1, S0]

================================

Block 0xc7a
[0xc7a:0xc8c]
---
Predecessors: [0xc76]
Successors: [0xc6d]
---
0xc7a JUMPDEST
0xc7b PUSH1 0x1f
0xc7d NOT
0xc7e SWAP1
0xc7f SWAP3
0xc80 ADD
0xc81 SWAP2
0xc82 PUSH1 0x20
0xc84 SWAP2
0xc85 DUP3
0xc86 ADD
0xc87 SWAP2
0xc88 ADD
0xc89 PUSH2 0xc6d
0xc8c JUMP
---
0xc7a: JUMPDEST 
0xc7b: V1296 = 0x1f
0xc7d: V1297 = NOT 0x1f
0xc80: V1298 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xc82: V1299 = 0x20
0xc86: V1300 = ADD 0x20 S1
0xc88: V1301 = ADD 0x20 S0
0xc89: V1302 = 0xc6d
0xc8c: JUMP 0xc6d
---
Entry stack: [V12, 0x15a, V362, V1286, V362, V1288, V1288, V1291, V1289, S2, S1, S0]
Stack pops: 3
Stack additions: [V1298, V1300, V1301]
Exit stack: [V12, 0x15a, V362, V1286, V362, V1288, V1288, V1291, V1289, V1298, V1300, V1301]

================================

Block 0xc8d
[0xc8d:0xcbb]
---
Predecessors: [0xc6d]
Successors: [0xcbc]
---
0xc8d JUMPDEST
0xc8e PUSH1 0x1
0xc90 DUP4
0xc91 PUSH1 0x20
0xc93 SUB
0xc94 PUSH2 0x100
0xc97 EXP
0xc98 SUB
0xc99 DUP1
0xc9a NOT
0xc9b DUP3
0xc9c MLOAD
0xc9d AND
0xc9e DUP2
0xc9f DUP5
0xca0 MLOAD
0xca1 AND
0xca2 OR
0xca3 SWAP1
0xca4 SWAP3
0xca5 MSTORE
0xca6 POP
0xca7 POP
0xca8 POP
0xca9 SWAP2
0xcaa SWAP1
0xcab SWAP2
0xcac ADD
0xcad SWAP3
0xcae POP
0xcaf PUSH1 0x40
0xcb1 SWAP2
0xcb2 POP
0xcb3 POP
0xcb4 MLOAD
0xcb5 SWAP1
0xcb6 DUP2
0xcb7 SWAP1
0xcb8 SUB
0xcb9 SWAP1
0xcba SHA3
0xcbb EQ
---
0xc8d: JUMPDEST 
0xc8e: V1303 = 0x1
0xc91: V1304 = 0x20
0xc93: V1305 = SUB 0x20 S2
0xc94: V1306 = 0x100
0xc97: V1307 = EXP 0x100 V1305
0xc98: V1308 = SUB V1307 0x1
0xc9a: V1309 = NOT V1308
0xc9c: V1310 = M[S0]
0xc9d: V1311 = AND V1310 V1309
0xca0: V1312 = M[S1]
0xca1: V1313 = AND V1312 V1308
0xca2: V1314 = OR V1313 V1311
0xca5: M[S1] = V1314
0xcac: V1315 = ADD V1289 V1288
0xcaf: V1316 = 0x40
0xcb4: V1317 = M[0x40]
0xcb8: V1318 = SUB V1315 V1317
0xcba: V1319 = SHA3 V1317 V1318
0xcbb: V1320 = EQ V1319 V1286
---
Entry stack: [V12, 0x15a, V362, V1286, V362, V1288, V1288, V1291, V1289, S2, S1, S0]
Stack pops: 9
Stack additions: [V1320]
Exit stack: [V12, 0x15a, V362, V1320]

================================

Block 0xcbc
[0xcbc:0xcc2]
---
Predecessors: [0xc41, 0xc8d]
Successors: [0xcc3, 0xcc7]
---
0xcbc JUMPDEST
0xcbd ISZERO
0xcbe ISZERO
0xcbf PUSH2 0xcc7
0xcc2 JUMPI
---
0xcbc: JUMPDEST 
0xcbd: V1321 = ISZERO S0
0xcbe: V1322 = ISZERO V1321
0xcbf: V1323 = 0xcc7
0xcc2: JUMPI 0xcc7 V1322
---
Entry stack: [V12, 0x15a, V362, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V362]

================================

Block 0xcc3
[0xcc3:0xcc6]
---
Predecessors: [0xcbc]
Successors: []
---
0xcc3 PUSH1 0x0
0xcc5 DUP1
0xcc6 REVERT
---
0xcc3: V1324 = 0x0
0xcc6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V362]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V362]

================================

Block 0xcc7
[0xcc7:0xcd4]
---
Predecessors: [0xcbc]
Successors: [0xcd5]
---
0xcc7 JUMPDEST
0xcc8 PUSH1 0x4
0xcca DUP1
0xccb SLOAD
0xccc PUSH1 0xff
0xcce NOT
0xccf AND
0xcd0 PUSH1 0x1
0xcd2 OR
0xcd3 SWAP1
0xcd4 SSTORE
---
0xcc7: JUMPDEST 
0xcc8: V1325 = 0x4
0xccb: V1326 = S[0x4]
0xccc: V1327 = 0xff
0xcce: V1328 = NOT 0xff
0xccf: V1329 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1326
0xcd0: V1330 = 0x1
0xcd2: V1331 = OR 0x1 V1329
0xcd4: S[0x4] = V1331
---
Entry stack: [V12, 0x15a, V362]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V362]

================================

Block 0xcd5
[0xcd5:0xcd7]
---
Predecessors: [0xcc7]
Successors: [0x15a]
---
0xcd5 JUMPDEST
0xcd6 POP
0xcd7 JUMP
---
0xcd5: JUMPDEST 
0xcd7: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V362]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd8
[0xcd8:0xce6]
---
Predecessors: [0x3e8]
Successors: [0x205]
---
0xcd8 JUMPDEST
0xcd9 PUSH1 0x8
0xcdb SLOAD
0xcdc PUSH1 0x1
0xcde PUSH1 0xa0
0xce0 PUSH1 0x2
0xce2 EXP
0xce3 SUB
0xce4 AND
0xce5 DUP2
0xce6 JUMP
---
0xcd8: JUMPDEST 
0xcd9: V1332 = 0x8
0xcdb: V1333 = S[0x8]
0xcdc: V1334 = 0x1
0xcde: V1335 = 0xa0
0xce0: V1336 = 0x2
0xce2: V1337 = EXP 0x2 0xa0
0xce3: V1338 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce4: V1339 = AND 0xffffffffffffffffffffffffffffffffffffffff V1333
0xce6: JUMP 0x205
---
Entry stack: [V12, 0x205]
Stack pops: 1
Stack additions: [S0, V1339]
Exit stack: [V12, 0x205, V1339]

================================

Block 0xce7
[0xce7:0xd12]
---
Predecessors: []
Successors: []
---
0xce7 STOP
0xce8 LOG1
0xce9 PUSH6 0x627a7a723058
0xcf0 SHA3
0xcf1 MISSING 0xdd
0xcf2 OR
0xcf3 MOD
0xcf4 SWAP11
0xcf5 MISSING 0xed
0xcf6 MISSING 0xa6
0xcf7 PUSH23 0x83030cedd28dba1799390b30ea6e8efd98df36dbb0d91
0xd0f LOG3
0xd10 MISSING 0x22
0xd11 STOP
0xd12 MISSING 0x29
---
0xce7: STOP 
0xce8: LOG S0 S1 S2
0xce9: V1340 = 0x627a7a723058
0xcf0: V1341 = SHA3 0x627a7a723058 S3
0xcf1: MISSING 0xdd
0xcf2: V1342 = OR S0 S1
0xcf3: V1343 = MOD V1342 S2
0xcf5: MISSING 0xed
0xcf6: MISSING 0xa6
0xcf7: V1344 = 0x83030cedd28dba1799390b30ea6e8efd98df36dbb0d91
0xd0f: LOG 0x83030cedd28dba1799390b30ea6e8efd98df36dbb0d91 S0 S1 S2 S3
0xd10: MISSING 0x22
0xd11: STOP 
0xd12: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1341, S13, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V1343]
Exit stack: []

================================

Function 0:
Public function signature: 0xdc1819f
Entry block: 0x15e
Exit block: 0x15c
Body: 0x15a, 0x15b, 0x15c, 0x15e, 0x165, 0x169, 0x40c, 0x423, 0x427, 0x43c, 0x440, 0x44c, 0x450, 0x463, 0x467, 0x4ab, 0x4af, 0x4c0, 0x4c4, 0x4c5

Function 1:
Public function signature: 0x12f53950
Entry block: 0x173
Exit block: 0x186
Body: 0x173, 0x17a, 0x17e, 0x186, 0x4c7

Function 2:
Public function signature: 0x27e235e3
Entry block: 0x19a
Exit block: 0x1b9
Body: 0x19a, 0x1a1, 0x1a5, 0x1b9, 0x4d6

Function 3:
Public function signature: 0x6360fc3f
Entry block: 0x1cb
Exit block: 0x186
Body: 0x186, 0x1cb, 0x1d2, 0x1d6, 0x4e8

Function 4:
Public function signature: 0x6ad1fe02
Entry block: 0x1f2
Exit block: 0x205
Body: 0x1f2, 0x1f9, 0x1fd, 0x205, 0x4f1

Function 5:
Public function signature: 0x8a7e30a1
Entry block: 0x221
Exit block: 0x186
Body: 0x186, 0x221, 0x228, 0x22c, 0x500

Function 6:
Public function signature: 0x8e4cb2a9
Entry block: 0x248
Exit block: 0x1b9
Body: 0x1b9, 0x248, 0x24f, 0x253, 0x50e

Function 7:
Public function signature: 0x9cd3cb5d
Entry block: 0x279
Exit block: 0x83d
Body: 0x15a, 0x15b, 0x15c, 0x279, 0x280, 0x284, 0x520, 0x54e, 0x562, 0x568, 0x5ab, 0x5af, 0x5b0, 0x5d0, 0x5d4, 0x5ec, 0x5f0, 0x5fd, 0x60a, 0x610, 0x653, 0x657, 0x65c, 0x6af, 0x6b3, 0x6c0, 0x6c4, 0x6d7, 0x6db, 0x701, 0x702, 0x72e, 0x792, 0x796, 0x7a3, 0x7a7, 0x7b8, 0x7bc, 0x817, 0x81b, 0x828, 0x82c, 0x83d, 0x841, 0x842, 0x843

Function 8:
Public function signature: 0xa089feea
Entry block: 0x29a
Exit block: 0x186
Body: 0x186, 0x29a, 0x2a1, 0x2a5, 0x84c

Function 9:
Public function signature: 0xa5c860ba
Entry block: 0x2c1
Exit block: 0x1b9
Body: 0x1b9, 0x2c1, 0x2c8, 0x2cc, 0x855

Function 10:
Public function signature: 0xbbf59a41
Entry block: 0x2e6
Exit block: 0xb93
Body: 0x15a, 0x15b, 0x15c, 0x2e6, 0x2ed, 0x2f1, 0x85b, 0x886, 0x89a, 0x8a0, 0x8e3, 0x8e7, 0x8e8, 0x908, 0x90c, 0x924, 0x928, 0x935, 0x942, 0x948, 0x98b, 0x98f, 0x994, 0x9a6, 0x9aa, 0x9ff, 0xa03, 0xa10, 0xa14, 0xa27, 0xa2b, 0xa51, 0xa52, 0xa7e, 0xae6, 0xaea, 0xaf7, 0xafb, 0xb0c, 0xb10, 0xb6d, 0xb71, 0xb7e, 0xb82, 0xb93, 0xb97, 0xb98, 0xb99

Function 11:
Public function signature: 0xc42bb1e4
Entry block: 0x2fb
Exit block: 0x1b9
Body: 0x1b9, 0x2fb, 0x302, 0x306, 0xba0

Function 12:
Public function signature: 0xca4b208b
Entry block: 0x320
Exit block: 0x205
Body: 0x205, 0x320, 0x327, 0x32b, 0xba6

Function 13:
Public function signature: 0xcc63a3c9
Entry block: 0x34f
Exit block: 0x15c
Body: 0x15a, 0x15b, 0x15c, 0x34f, 0x356, 0x35a, 0xbb5, 0xbcc, 0xbd0, 0xc0a

Function 14:
Public function signature: 0xce7ab6a7
Entry block: 0x370
Exit block: 0x15c
Body: 0x15a, 0x15b, 0x15c, 0x370, 0x377, 0x37b, 0xc0d, 0xc24, 0xc28, 0xc3e

Function 15:
Public function signature: 0xd4701c35
Entry block: 0x38a
Exit block: 0x15c
Body: 0x15a, 0x15b, 0x15c, 0x38a, 0x391, 0x395, 0xc41, 0xc59, 0xc6d, 0xc76, 0xc7a, 0xc8d, 0xcbc, 0xcc3, 0xcc7, 0xcd5

Function 16:
Public function signature: 0xfc0c546a
Entry block: 0x3dd
Exit block: 0x205
Body: 0x205, 0x3dd, 0x3e4, 0x3e8, 0xcd8

Function 17:
Public fallback function
Entry block: 0xd5
Exit block: 0x15c
Body: 0xd5, 0xd6, 0xe3, 0x105, 0x132, 0x143, 0x149, 0x15a, 0x15b, 0x15c

