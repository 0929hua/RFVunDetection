Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x42]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xfec16d6c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x42
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xfec16d6c
0x3b: V13 = EQ V11 0xfec16d6c
0x3c: V14 = 0x42
0x3f: JUMPI 0x42 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x41]
---
Predecessors: [0x0, 0xd, 0x217]
Successors: []
---
0x40 JUMPDEST
0x41 STOP
---
0x40: JUMPDEST 
0x41: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x42
[0x42:0x49]
---
Predecessors: [0xd]
Successors: [0x4a, 0x4e]
---
0x42 JUMPDEST
0x43 CALLVALUE
0x44 DUP1
0x45 ISZERO
0x46 PUSH2 0x4e
0x49 JUMPI
---
0x42: JUMPDEST 
0x43: V15 = CALLVALUE
0x45: V16 = ISZERO V15
0x46: V17 = 0x4e
0x49: JUMPI 0x4e V16
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V15]
Exit stack: [V11, V15]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x42]
Successors: []
---
0x4a PUSH1 0x0
0x4c DUP1
0x4d REVERT
---
0x4a: V18 = 0x0
0x4d: REVERT 0x0 0x0
---
Entry stack: [V11, V15]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V15]

================================

Block 0x4e
[0x4e:0x14c]
---
Predecessors: [0x42]
Successors: [0x14d]
---
0x4e JUMPDEST
0x4f POP
0x50 PUSH2 0x40
0x53 PUSH1 0x4
0x55 CALLDATALOAD
0x56 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b PUSH1 0x24
0x6d CALLDATALOAD
0x6e DUP2
0x6f AND
0x70 SWAP1
0x71 PUSH1 0x44
0x73 CALLDATALOAD
0x74 AND
0x75 PUSH1 0x64
0x77 CALLDATALOAD
0x78 PUSH1 0x40
0x7a DUP1
0x7b MLOAD
0x7c PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x9d PUSH1 0x20
0x9f DUP1
0xa0 DUP4
0xa1 ADD
0xa2 SWAP2
0xa3 SWAP1
0xa4 SWAP2
0xa5 MSTORE
0xa6 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0xc7 PUSH1 0x21
0xc9 DUP4
0xca ADD
0xcb MSTORE
0xcc PUSH13 0x1000000000000000000000000
0xda ADDRESS
0xdb MUL
0xdc PUSH1 0x22
0xde DUP4
0xdf ADD
0xe0 MSTORE
0xe1 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x102 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x123 DUP9
0x124 MUL
0x125 AND
0x126 PUSH1 0x36
0x128 DUP4
0x129 ADD
0x12a MSTORE
0x12b DUP3
0x12c MLOAD
0x12d PUSH1 0x17
0x12f DUP2
0x130 DUP5
0x131 SUB
0x132 ADD
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x37
0x137 SWAP1
0x138 SWAP3
0x139 ADD
0x13a SWAP3
0x13b DUP4
0x13c SWAP1
0x13d MSTORE
0x13e DUP2
0x13f MLOAD
0x140 PUSH1 0x0
0x142 SWAP4
0x143 SWAP2
0x144 DUP3
0x145 SWAP2
0x146 SWAP1
0x147 DUP5
0x148 ADD
0x149 SWAP1
0x14a DUP1
0x14b DUP4
0x14c DUP4
---
0x4e: JUMPDEST 
0x50: V19 = 0x40
0x53: V20 = 0x4
0x55: V21 = CALLDATALOAD 0x4
0x56: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b: V23 = 0x24
0x6d: V24 = CALLDATALOAD 0x24
0x6f: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x71: V26 = 0x44
0x73: V27 = CALLDATALOAD 0x44
0x74: V28 = AND V27 0xffffffffffffffffffffffffffffffffffffffff
0x75: V29 = 0x64
0x77: V30 = CALLDATALOAD 0x64
0x78: V31 = 0x40
0x7b: V32 = M[0x40]
0x7c: V33 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x9d: V34 = 0x20
0xa1: V35 = ADD V32 0x20
0xa5: M[V35] = 0xd600000000000000000000000000000000000000000000000000000000000000
0xa6: V36 = 0x9400000000000000000000000000000000000000000000000000000000000000
0xc7: V37 = 0x21
0xca: V38 = ADD V32 0x21
0xcb: M[V38] = 0x9400000000000000000000000000000000000000000000000000000000000000
0xcc: V39 = 0x1000000000000000000000000
0xda: V40 = ADDRESS
0xdb: V41 = MUL V40 0x1000000000000000000000000
0xdc: V42 = 0x22
0xdf: V43 = ADD V32 0x22
0xe0: M[V43] = V41
0xe1: V44 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x102: V45 = 0x100000000000000000000000000000000000000000000000000000000000000
0x124: V46 = MUL V21 0x100000000000000000000000000000000000000000000000000000000000000
0x125: V47 = AND V46 0xff00000000000000000000000000000000000000000000000000000000000000
0x126: V48 = 0x36
0x129: V49 = ADD V32 0x36
0x12a: M[V49] = V47
0x12c: V50 = M[0x40]
0x12d: V51 = 0x17
0x131: V52 = SUB V32 V50
0x132: V53 = ADD V52 0x17
0x134: M[V50] = V53
0x135: V54 = 0x37
0x139: V55 = ADD V32 0x37
0x13d: M[0x40] = V55
0x13f: V56 = M[V50]
0x140: V57 = 0x0
0x148: V58 = ADD V50 0x20
---
Entry stack: [V11, V15]
Stack pops: 1
Stack additions: [0x40, V21, V25, V28, V30, 0x0, V50, V55, V55, V58, V56, V56, V55, V58]
Exit stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V50, V55, V55, V58, V56, V56, V55, V58]

================================

Block 0x14d
[0x14d:0x155]
---
Predecessors: [0x4e, 0x156]
Successors: [0x156, 0x16c]
---
0x14d JUMPDEST
0x14e PUSH1 0x20
0x150 DUP4
0x151 LT
0x152 PUSH2 0x16c
0x155 JUMPI
---
0x14d: JUMPDEST 
0x14e: V59 = 0x20
0x151: V60 = LT S2 0x20
0x152: V61 = 0x16c
0x155: JUMPI 0x16c V60
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V50, V55, V55, V58, V56, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V50, V55, V55, V58, V56, S2, S1, S0]

================================

Block 0x156
[0x156:0x16b]
---
Predecessors: [0x14d]
Successors: [0x14d]
---
0x156 DUP1
0x157 MLOAD
0x158 DUP3
0x159 MSTORE
0x15a PUSH1 0x1f
0x15c NOT
0x15d SWAP1
0x15e SWAP3
0x15f ADD
0x160 SWAP2
0x161 PUSH1 0x20
0x163 SWAP2
0x164 DUP3
0x165 ADD
0x166 SWAP2
0x167 ADD
0x168 PUSH2 0x14d
0x16b JUMP
---
0x157: V62 = M[S0]
0x159: M[S1] = V62
0x15a: V63 = 0x1f
0x15c: V64 = NOT 0x1f
0x15f: V65 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x161: V66 = 0x20
0x165: V67 = ADD 0x20 S1
0x167: V68 = ADD 0x20 S0
0x168: V69 = 0x14d
0x16b: JUMP 0x14d
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V50, V55, V55, V58, V56, S2, S1, S0]
Stack pops: 3
Stack additions: [V65, V67, V68]
Exit stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V50, V55, V55, V58, V56, V65, V67, V68]

================================

Block 0x16c
[0x16c:0x1cb]
---
Predecessors: [0x14d]
Successors: [0x220]
---
0x16c JUMPDEST
0x16d MLOAD
0x16e DUP2
0x16f MLOAD
0x170 PUSH1 0x20
0x172 SWAP4
0x173 SWAP1
0x174 SWAP4
0x175 SUB
0x176 PUSH2 0x100
0x179 EXP
0x17a PUSH1 0x0
0x17c NOT
0x17d ADD
0x17e DUP1
0x17f NOT
0x180 SWAP1
0x181 SWAP2
0x182 AND
0x183 SWAP3
0x184 AND
0x185 SWAP2
0x186 SWAP1
0x187 SWAP2
0x188 OR
0x189 SWAP1
0x18a MSTORE
0x18b PUSH1 0x40
0x18d MLOAD
0x18e SWAP3
0x18f ADD
0x190 DUP3
0x191 SWAP1
0x192 SUB
0x193 DUP3
0x194 SHA3
0x195 SWAP5
0x196 POP
0x197 POP
0x198 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ad DUP5
0x1ae AND
0x1af SWAP3
0x1b0 POP
0x1b1 DUP5
0x1b2 SWAP2
0x1b3 POP
0x1b4 PUSH1 0x0
0x1b6 DUP2
0x1b7 DUP2
0x1b8 DUP2
0x1b9 DUP6
0x1ba DUP8
0x1bb GAS
0x1bc CALL
0x1bd SWAP3
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 POP
0x1c2 DUP4
0x1c3 DUP4
0x1c4 DUP4
0x1c5 PUSH2 0x1cc
0x1c8 PUSH2 0x220
0x1cb JUMP
---
0x16c: JUMPDEST 
0x16d: V70 = M[S0]
0x16f: V71 = M[S1]
0x170: V72 = 0x20
0x175: V73 = SUB 0x20 S2
0x176: V74 = 0x100
0x179: V75 = EXP 0x100 V73
0x17a: V76 = 0x0
0x17c: V77 = NOT 0x0
0x17d: V78 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V75
0x17f: V79 = NOT V78
0x182: V80 = AND V70 V79
0x184: V81 = AND V71 V78
0x188: V82 = OR V81 V80
0x18a: M[S1] = V82
0x18b: V83 = 0x40
0x18d: V84 = M[0x40]
0x18f: V85 = ADD V55 V56
0x192: V86 = SUB V85 V84
0x194: V87 = SHA3 V84 V86
0x198: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V89 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V90 = 0x0
0x1bb: V91 = GAS
0x1bc: V92 = CALL V91 V89 V30 V84 0x0 V84 0x0
0x1c5: V93 = 0x1cc
0x1c8: V94 = 0x220
0x1cb: JUMP 0x220
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V50, V55, V55, V58, V56, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, V87, S11, S10, S9, 0x1cc]
Exit stack: [V11, 0x40, V21, V25, V28, V30, V87, V25, V28, V30, 0x1cc]

================================

Block 0x1cc
[0x1cc:0x20d]
---
Predecessors: [0x220]
Successors: [0x20e, 0x217]
---
0x1cc JUMPDEST
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 SWAP4
0x1e3 DUP5
0x1e4 AND
0x1e5 DUP2
0x1e6 MSTORE
0x1e7 SWAP2
0x1e8 SWAP1
0x1e9 SWAP3
0x1ea AND
0x1eb PUSH1 0x20
0x1ed DUP3
0x1ee ADD
0x1ef MSTORE
0x1f0 PUSH1 0x40
0x1f2 DUP1
0x1f3 DUP3
0x1f4 ADD
0x1f5 SWAP3
0x1f6 SWAP1
0x1f7 SWAP3
0x1f8 MSTORE
0x1f9 SWAP1
0x1fa MLOAD
0x1fb SWAP1
0x1fc DUP2
0x1fd SWAP1
0x1fe SUB
0x1ff PUSH1 0x60
0x201 ADD
0x202 SWAP1
0x203 PUSH1 0x0
0x205 CREATE
0x206 DUP1
0x207 ISZERO
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x217
0x20d JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x1e6: M[V119] = V96
0x1ea: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x1eb: V98 = 0x20
0x1ee: V99 = ADD V119 0x20
0x1ef: M[V99] = V97
0x1f0: V100 = 0x40
0x1f4: V101 = ADD V119 0x40
0x1f8: M[V101] = V30
0x1fa: V102 = M[0x40]
0x1fe: V103 = SUB V119 V102
0x1ff: V104 = 0x60
0x201: V105 = ADD 0x60 V103
0x203: V106 = 0x0
0x205: V107 = CREATE 0x0 V102 V105
0x207: V108 = ISZERO V107
0x209: V109 = ISZERO V108
0x20a: V110 = 0x217
0x20d: JUMPI 0x217 V109
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, V87, V25, V28, V30, V119]
Stack pops: 4
Stack additions: [V107, V108]
Exit stack: [V11, 0x40, V21, V25, V28, V30, V87, V107, V108]

================================

Block 0x20e
[0x20e:0x216]
---
Predecessors: [0x1cc]
Successors: []
---
0x20e RETURNDATASIZE
0x20f PUSH1 0x0
0x211 DUP1
0x212 RETURNDATACOPY
0x213 RETURNDATASIZE
0x214 PUSH1 0x0
0x216 REVERT
---
0x20e: V111 = RETURNDATASIZE
0x20f: V112 = 0x0
0x212: RETURNDATACOPY 0x0 0x0 V111
0x213: V113 = RETURNDATASIZE
0x214: V114 = 0x0
0x216: REVERT 0x0 V113
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, V87, V107, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x40, V21, V25, V28, V30, V87, V107, V108]

================================

Block 0x217
[0x217:0x21f]
---
Predecessors: [0x1cc]
Successors: [0x40]
---
0x217 JUMPDEST
0x218 POP
0x219 POP
0x21a POP
0x21b POP
0x21c POP
0x21d POP
0x21e POP
0x21f JUMP
---
0x217: JUMPDEST 
0x21f: JUMP 0x40
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, V87, V107, V108]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x220
[0x220:0x22e]
---
Predecessors: [0x16c]
Successors: [0x1cc]
---
0x220 JUMPDEST
0x221 PUSH1 0x40
0x223 MLOAD
0x224 PUSH1 0xe0
0x226 DUP1
0x227 PUSH2 0x230
0x22a DUP4
0x22b CODECOPY
0x22c ADD
0x22d SWAP1
0x22e JUMP
---
0x220: JUMPDEST 
0x221: V115 = 0x40
0x223: V116 = M[0x40]
0x224: V117 = 0xe0
0x227: V118 = 0x230
0x22b: CODECOPY V116 0x230 0xe0
0x22c: V119 = ADD 0xe0 V116
0x22e: JUMP 0x1cc
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, V87, V25, V28, V30, 0x1cc]
Stack pops: 1
Stack additions: [V119]
Exit stack: [V11, 0x40, V21, V25, V28, V30, V87, V25, V28, V30, V119]

================================

Block 0x22f
[0x22f:0x23a]
---
Predecessors: []
Successors: [0x23b]
---
0x22f STOP
0x230 PUSH1 0x80
0x232 PUSH1 0x40
0x234 MSTORE
0x235 CALLVALUE
0x236 DUP1
0x237 ISZERO
0x238 PUSH1 0xf
0x23a JUMPI
---
0x22f: STOP 
0x230: V120 = 0x80
0x232: V121 = 0x40
0x234: M[0x40] = 0x80
0x235: V122 = CALLVALUE
0x237: V123 = ISZERO V122
0x238: V124 = 0xf
0x23a: THROWI V123
---
Entry stack: []
Stack pops: 0
Stack additions: [V122]
Exit stack: []

================================

Block 0x23b
[0x23b:0x2e7]
---
Predecessors: [0x22f]
Successors: [0x2e8]
---
0x23b PUSH1 0x0
0x23d DUP1
0x23e REVERT
0x23f JUMPDEST
0x240 POP
0x241 PUSH1 0x40
0x243 MLOAD
0x244 PUSH1 0x60
0x246 DUP1
0x247 PUSH2 0xe0
0x24a DUP4
0x24b CODECOPY
0x24c DUP2
0x24d ADD
0x24e PUSH1 0x40
0x250 DUP2
0x251 DUP2
0x252 MSTORE
0x253 DUP3
0x254 MLOAD
0x255 PUSH1 0x20
0x257 DUP5
0x258 ADD
0x259 MLOAD
0x25a SWAP2
0x25b SWAP1
0x25c SWAP4
0x25d ADD
0x25e MLOAD
0x25f PUSH1 0x0
0x261 DUP1
0x262 SLOAD
0x263 PUSH1 0x1
0x265 PUSH1 0xa0
0x267 PUSH1 0x2
0x269 EXP
0x26a SUB
0x26b NOT
0x26c AND
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 DUP1
0x276 DUP8
0x277 AND
0x278 SWAP2
0x279 SWAP1
0x27a SWAP2
0x27b OR
0x27c DUP1
0x27d DUP4
0x27e SSTORE
0x27f SWAP4
0x280 SWAP5
0x281 SWAP3
0x282 SWAP4
0x283 AND
0x284 SWAP2
0x285 DUP4
0x286 SWAP2
0x287 DUP2
0x288 DUP2
0x289 DUP2
0x28a DUP6
0x28b DUP8
0x28c GAS
0x28d CALL
0x28e POP
0x28f POP
0x290 PUSH1 0x0
0x292 DUP1
0x293 SLOAD
0x294 PUSH1 0x40
0x296 DUP1
0x297 MLOAD
0x298 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2b9 DUP2
0x2ba MSTORE
0x2bb SWAP1
0x2bc MLOAD
0x2bd PUSH1 0x1
0x2bf PUSH1 0xa0
0x2c1 PUSH1 0x2
0x2c3 EXP
0x2c4 SUB
0x2c5 SWAP1
0x2c6 SWAP3
0x2c7 AND
0x2c8 SWAP5
0x2c9 POP
0x2ca PUSH4 0x3ccfd60b
0x2cf SWAP4
0x2d0 POP
0x2d1 PUSH1 0x4
0x2d3 DUP1
0x2d4 DUP3
0x2d5 ADD
0x2d6 SWAP4
0x2d7 SWAP3
0x2d8 SWAP2
0x2d9 DUP3
0x2da SWAP1
0x2db SUB
0x2dc ADD
0x2dd DUP2
0x2de DUP4
0x2df DUP8
0x2e0 DUP1
0x2e1 EXTCODESIZE
0x2e2 ISZERO
0x2e3 DUP1
0x2e4 ISZERO
0x2e5 PUSH1 0xbc
0x2e7 JUMPI
---
0x23b: V125 = 0x0
0x23e: REVERT 0x0 0x0
0x23f: JUMPDEST 
0x241: V126 = 0x40
0x243: V127 = M[0x40]
0x244: V128 = 0x60
0x247: V129 = 0xe0
0x24b: CODECOPY V127 0xe0 0x60
0x24d: V130 = ADD V127 0x60
0x24e: V131 = 0x40
0x252: M[0x40] = V130
0x254: V132 = M[V127]
0x255: V133 = 0x20
0x258: V134 = ADD V127 0x20
0x259: V135 = M[V134]
0x25d: V136 = ADD V127 0x40
0x25e: V137 = M[V136]
0x25f: V138 = 0x0
0x262: V139 = S[0x0]
0x263: V140 = 0x1
0x265: V141 = 0xa0
0x267: V142 = 0x2
0x269: V143 = EXP 0x2 0xa0
0x26a: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26b: V145 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V146 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V139
0x26d: V147 = 0x1
0x26f: V148 = 0xa0
0x271: V149 = 0x2
0x273: V150 = EXP 0x2 0xa0
0x274: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V152 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V153 = OR V152 V146
0x27e: S[0x0] = V153
0x283: V154 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V155 = GAS
0x28d: V156 = CALL V155 V154 V137 V130 0x0 V130 0x0
0x290: V157 = 0x0
0x293: V158 = S[0x0]
0x294: V159 = 0x40
0x297: V160 = M[0x40]
0x298: V161 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2ba: M[V160] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2bc: V162 = M[0x40]
0x2bd: V163 = 0x1
0x2bf: V164 = 0xa0
0x2c1: V165 = 0x2
0x2c3: V166 = EXP 0x2 0xa0
0x2c4: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c7: V168 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V169 = 0x3ccfd60b
0x2d1: V170 = 0x4
0x2d5: V171 = ADD V160 0x4
0x2db: V172 = SUB V160 V162
0x2dc: V173 = ADD V172 0x4
0x2e1: V174 = EXTCODESIZE V168
0x2e2: V175 = ISZERO V174
0x2e4: V176 = ISZERO V175
0x2e5: V177 = 0xbc
0x2e7: THROWI V176
---
Entry stack: [V122]
Stack pops: 0
Stack additions: [V175, V168, 0x0, V162, V173, V162, 0x0, V171, 0x3ccfd60b, V168, V137, V135, V132]
Exit stack: []

================================

Block 0x2e8
[0x2e8:0x2f5]
---
Predecessors: [0x23b]
Successors: [0x2f6]
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
0x2ec JUMPDEST
0x2ed POP
0x2ee GAS
0x2ef CALL
0x2f0 ISZERO
0x2f1 DUP1
0x2f2 ISZERO
0x2f3 PUSH1 0xcf
0x2f5 JUMPI
---
0x2e8: V178 = 0x0
0x2eb: REVERT 0x0 0x0
0x2ec: JUMPDEST 
0x2ee: V179 = GAS
0x2ef: V180 = CALL V179 S1 S2 S3 S4 S5 S6
0x2f0: V181 = ISZERO V180
0x2f2: V182 = ISZERO V181
0x2f3: V183 = 0xcf
0x2f5: THROWI V182
---
Entry stack: [V132, V135, V137, V168, 0x3ccfd60b, V171, 0x0, V162, V173, V162, 0x0, V168, V175]
Stack pops: 0
Stack additions: [V181]
Exit stack: []

================================

Block 0x2f6
[0x2f6:0x34c]
---
Predecessors: [0x2e8]
Successors: []
---
0x2f6 RETURNDATASIZE
0x2f7 PUSH1 0x0
0x2f9 DUP1
0x2fa RETURNDATACOPY
0x2fb RETURNDATASIZE
0x2fc PUSH1 0x0
0x2fe REVERT
0x2ff JUMPDEST
0x300 POP
0x301 POP
0x302 POP
0x303 POP
0x304 DUP2
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d AND
0x30e SELFDESTRUCT
0x30f STOP
0x310 LOG1
0x311 PUSH6 0x627a7a723058
0x318 SHA3
0x319 MISSING 0x1f
0x31a MISSING 0xda
0x31b GAS
0x31c MISSING 0xb8
0x31d PUSH4 0x50c534c4
0x322 SLT
0x323 MISSING 0xc9
0x324 MISSING 0xb1
0x325 PUSH5 0x9210c473c7
0x32b SIGNEXTEND
0x32c PUSH32 0x353bf8f7e5b548f3614b94700029
---
0x2f6: V184 = RETURNDATASIZE
0x2f7: V185 = 0x0
0x2fa: RETURNDATACOPY 0x0 0x0 V184
0x2fb: V186 = RETURNDATASIZE
0x2fc: V187 = 0x0
0x2fe: REVERT 0x0 V186
0x2ff: JUMPDEST 
0x305: V188 = 0x1
0x307: V189 = 0xa0
0x309: V190 = 0x2
0x30b: V191 = EXP 0x2 0xa0
0x30c: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x30e: SELFDESTRUCT V193
0x30f: STOP 
0x310: LOG S0 S1 S2
0x311: V194 = 0x627a7a723058
0x318: V195 = SHA3 0x627a7a723058 S3
0x319: MISSING 0x1f
0x31a: MISSING 0xda
0x31b: V196 = GAS
0x31c: MISSING 0xb8
0x31d: V197 = 0x50c534c4
0x322: V198 = SLT 0x50c534c4 S0
0x323: MISSING 0xc9
0x324: MISSING 0xb1
0x325: V199 = 0x9210c473c7
0x32b: V200 = SIGNEXTEND 0x9210c473c7 S0
0x32c: V201 = 0x353bf8f7e5b548f3614b94700029
---
Entry stack: [V181]
Stack pops: 0
Stack additions: [S4, S5, V195, V196, V198, 0x353bf8f7e5b548f3614b94700029, V200]
Exit stack: []

================================

Function 0:
Public function signature: 0xfec16d6c
Entry block: 0x42
Exit block: 0x40
Body: 0x40, 0x42, 0x4a, 0x4e, 0x14d, 0x156, 0x16c, 0x1cc, 0x20e, 0x217, 0x220

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0x40
Body: 0x40

