Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xfc]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xfc
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xfc
0xc: JUMPI 0xfc V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xfe]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xab3577e
0x3c EQ
0x3d PUSH2 0xfe
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xab3577e
0x3c: V13 = EQ 0xab3577e V11
0x3d: V14 = 0xfe
0x40: JUMPI 0xfe V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x141]
---
0x41 DUP1
0x42 PUSH4 0x11894232
0x47 EQ
0x48 PUSH2 0x141
0x4b JUMPI
---
0x42: V15 = 0x11894232
0x47: V16 = EQ 0x11894232 V11
0x48: V17 = 0x141
0x4b: JUMPI 0x141 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x16c]
---
0x4c DUP1
0x4d PUSH4 0x11eed2c7
0x52 EQ
0x53 PUSH2 0x16c
0x56 JUMPI
---
0x4d: V18 = 0x11eed2c7
0x52: V19 = EQ 0x11eed2c7 V11
0x53: V20 = 0x16c
0x56: JUMPI 0x16c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1c3]
---
0x57 DUP1
0x58 PUSH4 0x26a4e8d2
0x5d EQ
0x5e PUSH2 0x1c3
0x61 JUMPI
---
0x58: V21 = 0x26a4e8d2
0x5d: V22 = EQ 0x26a4e8d2 V11
0x5e: V23 = 0x1c3
0x61: JUMPI 0x1c3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x206]
---
0x62 DUP1
0x63 PUSH4 0x27aae6d9
0x68 EQ
0x69 PUSH2 0x206
0x6c JUMPI
---
0x63: V24 = 0x27aae6d9
0x68: V25 = EQ 0x27aae6d9 V11
0x69: V26 = 0x206
0x6c: JUMPI 0x206 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x247]
---
0x6d DUP1
0x6e PUSH4 0x36ee6e80
0x73 EQ
0x74 PUSH2 0x247
0x77 JUMPI
---
0x6e: V27 = 0x36ee6e80
0x73: V28 = EQ 0x36ee6e80 V11
0x74: V29 = 0x247
0x77: JUMPI 0x247 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x288]
---
0x78 DUP1
0x79 PUSH4 0x3b52bab7
0x7e EQ
0x7f PUSH2 0x288
0x82 JUMPI
---
0x79: V30 = 0x3b52bab7
0x7e: V31 = EQ 0x3b52bab7 V11
0x7f: V32 = 0x288
0x82: JUMPI 0x288 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2db]
---
0x83 DUP1
0x84 PUSH4 0x59498a1c
0x89 EQ
0x8a PUSH2 0x2db
0x8d JUMPI
---
0x84: V33 = 0x59498a1c
0x89: V34 = EQ 0x59498a1c V11
0x8a: V35 = 0x2db
0x8d: JUMPI 0x2db V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x31c]
---
0x8e DUP1
0x8f PUSH4 0x59859974
0x94 EQ
0x95 PUSH2 0x31c
0x98 JUMPI
---
0x8f: V36 = 0x59859974
0x94: V37 = EQ 0x59859974 V11
0x95: V38 = 0x31c
0x98: JUMPI 0x31c V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x349]
---
0x99 DUP1
0x9a PUSH4 0x5e73ff93
0x9f EQ
0xa0 PUSH2 0x349
0xa3 JUMPI
---
0x9a: V39 = 0x5e73ff93
0x9f: V40 = EQ 0x5e73ff93 V11
0xa0: V41 = 0x349
0xa3: JUMPI 0x349 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x38a]
---
0xa4 DUP1
0xa5 PUSH4 0x715018a6
0xaa EQ
0xab PUSH2 0x38a
0xae JUMPI
---
0xa5: V42 = 0x715018a6
0xaa: V43 = EQ 0x715018a6 V11
0xab: V44 = 0x38a
0xae: JUMPI 0x38a V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x3a1]
---
0xaf DUP1
0xb0 PUSH4 0x884731c1
0xb5 EQ
0xb6 PUSH2 0x3a1
0xb9 JUMPI
---
0xb0: V45 = 0x884731c1
0xb5: V46 = EQ 0x884731c1 V11
0xb6: V47 = 0x3a1
0xb9: JUMPI 0x3a1 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x3ce]
---
0xba DUP1
0xbb PUSH4 0x8da5cb5b
0xc0 EQ
0xc1 PUSH2 0x3ce
0xc4 JUMPI
---
0xbb: V48 = 0x8da5cb5b
0xc0: V49 = EQ 0x8da5cb5b V11
0xc1: V50 = 0x3ce
0xc4: JUMPI 0x3ce V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0x425]
---
0xc5 DUP1
0xc6 PUSH4 0x8f32d59b
0xcb EQ
0xcc PUSH2 0x425
0xcf JUMPI
---
0xc6: V51 = 0x8f32d59b
0xcb: V52 = EQ 0x8f32d59b V11
0xcc: V53 = 0x425
0xcf: JUMPI 0x425 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0xc5]
Successors: [0xdb, 0x454]
---
0xd0 DUP1
0xd1 PUSH4 0x9d76ea58
0xd6 EQ
0xd7 PUSH2 0x454
0xda JUMPI
---
0xd1: V54 = 0x9d76ea58
0xd6: V55 = EQ 0x9d76ea58 V11
0xd7: V56 = 0x454
0xda: JUMPI 0x454 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xe5]
---
Predecessors: [0xd0]
Successors: [0xe6, 0x4ab]
---
0xdb DUP1
0xdc PUSH4 0xd23508d4
0xe1 EQ
0xe2 PUSH2 0x4ab
0xe5 JUMPI
---
0xdc: V57 = 0xd23508d4
0xe1: V58 = EQ 0xd23508d4 V11
0xe2: V59 = 0x4ab
0xe5: JUMPI 0x4ab V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe6
[0xe6:0xf0]
---
Predecessors: [0xdb]
Successors: [0xf1, 0x4d8]
---
0xe6 DUP1
0xe7 PUSH4 0xf2fde38b
0xec EQ
0xed PUSH2 0x4d8
0xf0 JUMPI
---
0xe7: V60 = 0xf2fde38b
0xec: V61 = EQ 0xf2fde38b V11
0xed: V62 = 0x4d8
0xf0: JUMPI 0x4d8 V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf1
[0xf1:0xfb]
---
Predecessors: [0xe6]
Successors: [0xfc, 0x51b]
---
0xf1 DUP1
0xf2 PUSH4 0xfd075615
0xf7 EQ
0xf8 PUSH2 0x51b
0xfb JUMPI
---
0xf2: V63 = 0xfd075615
0xf7: V64 = EQ 0xfd075615 V11
0xf8: V65 = 0x51b
0xfb: JUMPI 0x51b V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfc
[0xfc:0xfd]
---
Predecessors: [0x0, 0xf1]
Successors: []
---
0xfc JUMPDEST
0xfd STOP
---
0xfc: JUMPDEST 
0xfd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfe
[0xfe:0x105]
---
Predecessors: [0xd]
Successors: [0x106, 0x10a]
---
0xfe JUMPDEST
0xff CALLVALUE
0x100 DUP1
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xfe: JUMPDEST 
0xff: V66 = CALLVALUE
0x101: V67 = ISZERO V66
0x102: V68 = 0x10a
0x105: JUMPI 0x10a V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V11, V66]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xfe]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V69 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V11, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66]

================================

Block 0x10a
[0x10a:0x13e]
---
Predecessors: [0xfe]
Successors: [0x532]
---
0x10a JUMPDEST
0x10b POP
0x10c PUSH2 0x13f
0x10f PUSH1 0x4
0x111 DUP1
0x112 CALLDATASIZE
0x113 SUB
0x114 DUP2
0x115 ADD
0x116 SWAP1
0x117 DUP1
0x118 DUP1
0x119 CALLDATALOAD
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 SWAP1
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP1
0x135 SWAP3
0x136 SWAP2
0x137 SWAP1
0x138 POP
0x139 POP
0x13a POP
0x13b PUSH2 0x532
0x13e JUMP
---
0x10a: JUMPDEST 
0x10c: V70 = 0x13f
0x10f: V71 = 0x4
0x112: V72 = CALLDATASIZE
0x113: V73 = SUB V72 0x4
0x115: V74 = ADD 0x4 V73
0x119: V75 = CALLDATALOAD 0x4
0x11a: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x131: V78 = 0x20
0x133: V79 = ADD 0x20 0x4
0x13b: V80 = 0x532
0x13e: JUMP 0x532
---
Entry stack: [V11, V66]
Stack pops: 1
Stack additions: [0x13f, V77]
Exit stack: [V11, 0x13f, V77]

================================

Block 0x13f
[0x13f:0x140]
---
Predecessors: [0x545, 0x609, 0x1068, 0x1128, 0x114e]
Successors: []
---
0x13f JUMPDEST
0x140 STOP
---
0x13f: JUMPDEST 
0x140: STOP 
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, S0]

================================

Block 0x141
[0x141:0x148]
---
Predecessors: [0x41]
Successors: [0x149, 0x14d]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 DUP1
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x141: JUMPDEST 
0x142: V81 = CALLVALUE
0x144: V82 = ISZERO V81
0x145: V83 = 0x14d
0x148: JUMPI 0x14d V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V11, V81]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x141]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V84 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V11, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V81]

================================

Block 0x14d
[0x14d:0x155]
---
Predecessors: [0x141]
Successors: [0x5ca]
---
0x14d JUMPDEST
0x14e POP
0x14f PUSH2 0x156
0x152 PUSH2 0x5ca
0x155 JUMP
---
0x14d: JUMPDEST 
0x14f: V85 = 0x156
0x152: V86 = 0x5ca
0x155: JUMP 0x5ca
---
Entry stack: [V11, V81]
Stack pops: 1
Stack additions: [0x156]
Exit stack: [V11, 0x156]

================================

Block 0x156
[0x156:0x16b]
---
Predecessors: [0x5ca]
Successors: []
---
0x156 JUMPDEST
0x157 PUSH1 0x40
0x159 MLOAD
0x15a DUP1
0x15b DUP3
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP2
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x156: JUMPDEST 
0x157: V87 = 0x40
0x159: V88 = M[0x40]
0x15d: M[V88] = V381
0x15e: V89 = 0x20
0x160: V90 = ADD 0x20 V88
0x164: V91 = 0x40
0x166: V92 = M[0x40]
0x169: V93 = SUB V90 V92
0x16b: RETURN V92 V93
---
Entry stack: [V11, 0x156, V381]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x156]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x4c]
Successors: [0x174, 0x178]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e DUP1
0x16f ISZERO
0x170 PUSH2 0x178
0x173 JUMPI
---
0x16c: JUMPDEST 
0x16d: V94 = CALLVALUE
0x16f: V95 = ISZERO V94
0x170: V96 = 0x178
0x173: JUMPI 0x178 V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V11, V94]

================================

Block 0x174
[0x174:0x177]
---
Predecessors: [0x16c]
Successors: []
---
0x174 PUSH1 0x0
0x176 DUP1
0x177 REVERT
---
0x174: V97 = 0x0
0x177: REVERT 0x0 0x0
---
Entry stack: [V11, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V94]

================================

Block 0x178
[0x178:0x180]
---
Predecessors: [0x16c]
Successors: [0x5d0]
---
0x178 JUMPDEST
0x179 POP
0x17a PUSH2 0x181
0x17d PUSH2 0x5d0
0x180 JUMP
---
0x178: JUMPDEST 
0x17a: V98 = 0x181
0x17d: V99 = 0x5d0
0x180: JUMP 0x5d0
---
Entry stack: [V11, V94]
Stack pops: 1
Stack additions: [0x181]
Exit stack: [V11, 0x181]

================================

Block 0x181
[0x181:0x1c2]
---
Predecessors: [0x5d0]
Successors: []
---
0x181 JUMPDEST
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 DUP3
0x187 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19c AND
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP2
0x1b9 POP
0x1ba POP
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be DUP1
0x1bf SWAP2
0x1c0 SUB
0x1c1 SWAP1
0x1c2 RETURN
---
0x181: JUMPDEST 
0x182: V100 = 0x40
0x184: V101 = M[0x40]
0x187: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x19d: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1b4: M[V101] = V105
0x1b5: V106 = 0x20
0x1b7: V107 = ADD 0x20 V101
0x1bb: V108 = 0x40
0x1bd: V109 = M[0x40]
0x1c0: V110 = SUB V107 V109
0x1c2: RETURN V109 V110
---
Entry stack: [V11, 0x181, V389]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x181]

================================

Block 0x1c3
[0x1c3:0x1ca]
---
Predecessors: [0x57]
Successors: [0x1cb, 0x1cf]
---
0x1c3 JUMPDEST
0x1c4 CALLVALUE
0x1c5 DUP1
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V111 = CALLVALUE
0x1c6: V112 = ISZERO V111
0x1c7: V113 = 0x1cf
0x1ca: JUMPI 0x1cf V112
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V111]
Exit stack: [V11, V111]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c3]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V114 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V11, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V111]

================================

Block 0x1cf
[0x1cf:0x203]
---
Predecessors: [0x1c3]
Successors: [0x5f6]
---
0x1cf JUMPDEST
0x1d0 POP
0x1d1 PUSH2 0x204
0x1d4 PUSH1 0x4
0x1d6 DUP1
0x1d7 CALLDATASIZE
0x1d8 SUB
0x1d9 DUP2
0x1da ADD
0x1db SWAP1
0x1dc DUP1
0x1dd DUP1
0x1de CALLDATALOAD
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 SWAP1
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 SWAP1
0x1fa SWAP3
0x1fb SWAP2
0x1fc SWAP1
0x1fd POP
0x1fe POP
0x1ff POP
0x200 PUSH2 0x5f6
0x203 JUMP
---
0x1cf: JUMPDEST 
0x1d1: V115 = 0x204
0x1d4: V116 = 0x4
0x1d7: V117 = CALLDATASIZE
0x1d8: V118 = SUB V117 0x4
0x1da: V119 = ADD 0x4 V118
0x1de: V120 = CALLDATALOAD 0x4
0x1df: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1f6: V123 = 0x20
0x1f8: V124 = ADD 0x20 0x4
0x200: V125 = 0x5f6
0x203: JUMP 0x5f6
---
Entry stack: [V11, V111]
Stack pops: 1
Stack additions: [0x204, V122]
Exit stack: [V11, 0x204, V122]

================================

Block 0x204
[0x204:0x205]
---
Predecessors: [0x545, 0x609, 0x1068, 0x1128, 0x114e]
Successors: []
---
0x204 JUMPDEST
0x205 STOP
---
0x204: JUMPDEST 
0x205: STOP 
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, S0]

================================

Block 0x206
[0x206:0x20d]
---
Predecessors: [0x62]
Successors: [0x20e, 0x212]
---
0x206 JUMPDEST
0x207 CALLVALUE
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x206: JUMPDEST 
0x207: V126 = CALLVALUE
0x209: V127 = ISZERO V126
0x20a: V128 = 0x212
0x20d: JUMPI 0x212 V127
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V11, V126]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x206]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V129 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V11, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V126]

================================

Block 0x212
[0x212:0x230]
---
Predecessors: [0x206]
Successors: [0x68e]
---
0x212 JUMPDEST
0x213 POP
0x214 PUSH2 0x231
0x217 PUSH1 0x4
0x219 DUP1
0x21a CALLDATASIZE
0x21b SUB
0x21c DUP2
0x21d ADD
0x21e SWAP1
0x21f DUP1
0x220 DUP1
0x221 CALLDATALOAD
0x222 SWAP1
0x223 PUSH1 0x20
0x225 ADD
0x226 SWAP1
0x227 SWAP3
0x228 SWAP2
0x229 SWAP1
0x22a POP
0x22b POP
0x22c POP
0x22d PUSH2 0x68e
0x230 JUMP
---
0x212: JUMPDEST 
0x214: V130 = 0x231
0x217: V131 = 0x4
0x21a: V132 = CALLDATASIZE
0x21b: V133 = SUB V132 0x4
0x21d: V134 = ADD 0x4 V133
0x221: V135 = CALLDATALOAD 0x4
0x223: V136 = 0x20
0x225: V137 = ADD 0x20 0x4
0x22d: V138 = 0x68e
0x230: JUMP 0x68e
---
Entry stack: [V11, V126]
Stack pops: 1
Stack additions: [0x231, V135]
Exit stack: [V11, 0x231, V135]

================================

Block 0x231
[0x231:0x246]
---
Predecessors: [0x757]
Successors: []
---
0x231 JUMPDEST
0x232 PUSH1 0x40
0x234 MLOAD
0x235 DUP1
0x236 DUP3
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP2
0x23d POP
0x23e POP
0x23f PUSH1 0x40
0x241 MLOAD
0x242 DUP1
0x243 SWAP2
0x244 SUB
0x245 SWAP1
0x246 RETURN
---
0x231: JUMPDEST 
0x232: V139 = 0x40
0x234: V140 = M[0x40]
0x238: M[V140] = V484
0x239: V141 = 0x20
0x23b: V142 = ADD 0x20 V140
0x23f: V143 = 0x40
0x241: V144 = M[0x40]
0x244: V145 = SUB V142 V144
0x246: RETURN V144 V145
---
Entry stack: [V11, V484]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x6d]
Successors: [0x24f, 0x253]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x247: JUMPDEST 
0x248: V146 = CALLVALUE
0x24a: V147 = ISZERO V146
0x24b: V148 = 0x253
0x24e: JUMPI 0x253 V147
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V146]
Exit stack: [V11, V146]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x247]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V149 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V11, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V146]

================================

Block 0x253
[0x253:0x271]
---
Predecessors: [0x247]
Successors: [0x782]
---
0x253 JUMPDEST
0x254 POP
0x255 PUSH2 0x272
0x258 PUSH1 0x4
0x25a DUP1
0x25b CALLDATASIZE
0x25c SUB
0x25d DUP2
0x25e ADD
0x25f SWAP1
0x260 DUP1
0x261 DUP1
0x262 CALLDATALOAD
0x263 SWAP1
0x264 PUSH1 0x20
0x266 ADD
0x267 SWAP1
0x268 SWAP3
0x269 SWAP2
0x26a SWAP1
0x26b POP
0x26c POP
0x26d POP
0x26e PUSH2 0x782
0x271 JUMP
---
0x253: JUMPDEST 
0x255: V150 = 0x272
0x258: V151 = 0x4
0x25b: V152 = CALLDATASIZE
0x25c: V153 = SUB V152 0x4
0x25e: V154 = ADD 0x4 V153
0x262: V155 = CALLDATALOAD 0x4
0x264: V156 = 0x20
0x266: V157 = ADD 0x20 0x4
0x26e: V158 = 0x782
0x271: JUMP 0x782
---
Entry stack: [V11, V146]
Stack pops: 1
Stack additions: [0x272, V155]
Exit stack: [V11, 0x272, V155]

================================

Block 0x272
[0x272:0x287]
---
Predecessors: [0x84b]
Successors: []
---
0x272 JUMPDEST
0x273 PUSH1 0x40
0x275 MLOAD
0x276 DUP1
0x277 DUP3
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c ADD
0x27d SWAP2
0x27e POP
0x27f POP
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 SWAP2
0x285 SUB
0x286 SWAP1
0x287 RETURN
---
0x272: JUMPDEST 
0x273: V159 = 0x40
0x275: V160 = M[0x40]
0x279: M[V160] = V547
0x27a: V161 = 0x20
0x27c: V162 = ADD 0x20 V160
0x280: V163 = 0x40
0x282: V164 = M[0x40]
0x285: V165 = SUB V162 V164
0x287: RETURN V164 V165
---
Entry stack: [V11, 0x347, V220, V734, 0x0, S1, V547]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x347, V220, V734, 0x0, S1]

================================

Block 0x288
[0x288:0x28f]
---
Predecessors: [0x78]
Successors: [0x290, 0x294]
---
0x288 JUMPDEST
0x289 CALLVALUE
0x28a DUP1
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x288: JUMPDEST 
0x289: V166 = CALLVALUE
0x28b: V167 = ISZERO V166
0x28c: V168 = 0x294
0x28f: JUMPI 0x294 V167
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V11, V166]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x288]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V169 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V11, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V166]

================================

Block 0x294
[0x294:0x2d8]
---
Predecessors: [0x288]
Successors: [0x876]
---
0x294 JUMPDEST
0x295 POP
0x296 PUSH2 0x2d9
0x299 PUSH1 0x4
0x29b DUP1
0x29c CALLDATASIZE
0x29d SUB
0x29e DUP2
0x29f ADD
0x2a0 SWAP1
0x2a1 DUP1
0x2a2 DUP1
0x2a3 CALLDATALOAD
0x2a4 PUSH4 0xffffffff
0x2a9 AND
0x2aa SWAP1
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae SWAP1
0x2af SWAP3
0x2b0 SWAP2
0x2b1 SWAP1
0x2b2 DUP1
0x2b3 CALLDATALOAD
0x2b4 PUSH4 0xffffffff
0x2b9 AND
0x2ba SWAP1
0x2bb PUSH1 0x20
0x2bd ADD
0x2be SWAP1
0x2bf SWAP3
0x2c0 SWAP2
0x2c1 SWAP1
0x2c2 DUP1
0x2c3 CALLDATALOAD
0x2c4 PUSH4 0xffffffff
0x2c9 AND
0x2ca SWAP1
0x2cb PUSH1 0x20
0x2cd ADD
0x2ce SWAP1
0x2cf SWAP3
0x2d0 SWAP2
0x2d1 SWAP1
0x2d2 POP
0x2d3 POP
0x2d4 POP
0x2d5 PUSH2 0x876
0x2d8 JUMP
---
0x294: JUMPDEST 
0x296: V170 = 0x2d9
0x299: V171 = 0x4
0x29c: V172 = CALLDATASIZE
0x29d: V173 = SUB V172 0x4
0x29f: V174 = ADD 0x4 V173
0x2a3: V175 = CALLDATALOAD 0x4
0x2a4: V176 = 0xffffffff
0x2a9: V177 = AND 0xffffffff V175
0x2ab: V178 = 0x20
0x2ad: V179 = ADD 0x20 0x4
0x2b3: V180 = CALLDATALOAD 0x24
0x2b4: V181 = 0xffffffff
0x2b9: V182 = AND 0xffffffff V180
0x2bb: V183 = 0x20
0x2bd: V184 = ADD 0x20 0x24
0x2c3: V185 = CALLDATALOAD 0x44
0x2c4: V186 = 0xffffffff
0x2c9: V187 = AND 0xffffffff V185
0x2cb: V188 = 0x20
0x2cd: V189 = ADD 0x20 0x44
0x2d5: V190 = 0x876
0x2d8: JUMP 0x876
---
Entry stack: [V11, V166]
Stack pops: 1
Stack additions: [0x2d9, V177, V182, V187]
Exit stack: [V11, 0x2d9, V177, V182, V187]

================================

Block 0x2d9
[0x2d9:0x2da]
---
Predecessors: [0x964]
Successors: []
---
0x2d9 JUMPDEST
0x2da STOP
---
0x2d9: JUMPDEST 
0x2da: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x2db
[0x2db:0x2e2]
---
Predecessors: [0x83]
Successors: [0x2e3, 0x2e7]
---
0x2db JUMPDEST
0x2dc CALLVALUE
0x2dd DUP1
0x2de ISZERO
0x2df PUSH2 0x2e7
0x2e2 JUMPI
---
0x2db: JUMPDEST 
0x2dc: V191 = CALLVALUE
0x2de: V192 = ISZERO V191
0x2df: V193 = 0x2e7
0x2e2: JUMPI 0x2e7 V192
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V11, V191]

================================

Block 0x2e3
[0x2e3:0x2e6]
---
Predecessors: [0x2db]
Successors: []
---
0x2e3 PUSH1 0x0
0x2e5 DUP1
0x2e6 REVERT
---
0x2e3: V194 = 0x0
0x2e6: REVERT 0x0 0x0
---
Entry stack: [V11, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V191]

================================

Block 0x2e7
[0x2e7:0x305]
---
Predecessors: [0x2db]
Successors: [0x96e]
---
0x2e7 JUMPDEST
0x2e8 POP
0x2e9 PUSH2 0x306
0x2ec PUSH1 0x4
0x2ee DUP1
0x2ef CALLDATASIZE
0x2f0 SUB
0x2f1 DUP2
0x2f2 ADD
0x2f3 SWAP1
0x2f4 DUP1
0x2f5 DUP1
0x2f6 CALLDATALOAD
0x2f7 SWAP1
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP1
0x2fc SWAP3
0x2fd SWAP2
0x2fe SWAP1
0x2ff POP
0x300 POP
0x301 POP
0x302 PUSH2 0x96e
0x305 JUMP
---
0x2e7: JUMPDEST 
0x2e9: V195 = 0x306
0x2ec: V196 = 0x4
0x2ef: V197 = CALLDATASIZE
0x2f0: V198 = SUB V197 0x4
0x2f2: V199 = ADD 0x4 V198
0x2f6: V200 = CALLDATALOAD 0x4
0x2f8: V201 = 0x20
0x2fa: V202 = ADD 0x20 0x4
0x302: V203 = 0x96e
0x305: JUMP 0x96e
---
Entry stack: [V11, V191]
Stack pops: 1
Stack additions: [0x306, V200]
Exit stack: [V11, 0x306, V200]

================================

Block 0x306
[0x306:0x31b]
---
Predecessors: [0xa61]
Successors: []
---
0x306 JUMPDEST
0x307 PUSH1 0x40
0x309 MLOAD
0x30a DUP1
0x30b DUP3
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP2
0x312 POP
0x313 POP
0x314 PUSH1 0x40
0x316 MLOAD
0x317 DUP1
0x318 SWAP2
0x319 SUB
0x31a SWAP1
0x31b RETURN
---
0x306: JUMPDEST 
0x307: V204 = 0x40
0x309: V205 = M[0x40]
0x30d: M[V205] = V678
0x30e: V206 = 0x20
0x310: V207 = ADD 0x20 V205
0x314: V208 = 0x40
0x316: V209 = M[0x40]
0x319: V210 = SUB V207 V209
0x31b: RETURN V209 V210
---
Entry stack: [V11, V678]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x31c
[0x31c:0x323]
---
Predecessors: [0x8e]
Successors: [0x324, 0x328]
---
0x31c JUMPDEST
0x31d CALLVALUE
0x31e DUP1
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x31c: JUMPDEST 
0x31d: V211 = CALLVALUE
0x31f: V212 = ISZERO V211
0x320: V213 = 0x328
0x323: JUMPI 0x328 V212
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V211]
Exit stack: [V11, V211]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x31c]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V214 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V11, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V211]

================================

Block 0x328
[0x328:0x346]
---
Predecessors: [0x31c]
Successors: [0xa6e]
---
0x328 JUMPDEST
0x329 POP
0x32a PUSH2 0x347
0x32d PUSH1 0x4
0x32f DUP1
0x330 CALLDATASIZE
0x331 SUB
0x332 DUP2
0x333 ADD
0x334 SWAP1
0x335 DUP1
0x336 DUP1
0x337 CALLDATALOAD
0x338 SWAP1
0x339 PUSH1 0x20
0x33b ADD
0x33c SWAP1
0x33d SWAP3
0x33e SWAP2
0x33f SWAP1
0x340 POP
0x341 POP
0x342 POP
0x343 PUSH2 0xa6e
0x346 JUMP
---
0x328: JUMPDEST 
0x32a: V215 = 0x347
0x32d: V216 = 0x4
0x330: V217 = CALLDATASIZE
0x331: V218 = SUB V217 0x4
0x333: V219 = ADD 0x4 V218
0x337: V220 = CALLDATALOAD 0x4
0x339: V221 = 0x20
0x33b: V222 = ADD 0x20 0x4
0x343: V223 = 0xa6e
0x346: JUMP 0xa6e
---
Entry stack: [V11, V211]
Stack pops: 1
Stack additions: [0x347, V220]
Exit stack: [V11, 0x347, V220]

================================

Block 0x347
[0x347:0x348]
---
Predecessors: [0xd3f]
Successors: []
---
0x347 JUMPDEST
0x348 STOP
---
0x347: JUMPDEST 
0x348: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x349
[0x349:0x350]
---
Predecessors: [0x99]
Successors: [0x351, 0x355]
---
0x349 JUMPDEST
0x34a CALLVALUE
0x34b DUP1
0x34c ISZERO
0x34d PUSH2 0x355
0x350 JUMPI
---
0x349: JUMPDEST 
0x34a: V224 = CALLVALUE
0x34c: V225 = ISZERO V224
0x34d: V226 = 0x355
0x350: JUMPI 0x355 V225
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V224]
Exit stack: [V11, V224]

================================

Block 0x351
[0x351:0x354]
---
Predecessors: [0x349]
Successors: []
---
0x351 PUSH1 0x0
0x353 DUP1
0x354 REVERT
---
0x351: V227 = 0x0
0x354: REVERT 0x0 0x0
---
Entry stack: [V11, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V224]

================================

Block 0x355
[0x355:0x373]
---
Predecessors: [0x349]
Successors: [0xd45]
---
0x355 JUMPDEST
0x356 POP
0x357 PUSH2 0x374
0x35a PUSH1 0x4
0x35c DUP1
0x35d CALLDATASIZE
0x35e SUB
0x35f DUP2
0x360 ADD
0x361 SWAP1
0x362 DUP1
0x363 DUP1
0x364 CALLDATALOAD
0x365 SWAP1
0x366 PUSH1 0x20
0x368 ADD
0x369 SWAP1
0x36a SWAP3
0x36b SWAP2
0x36c SWAP1
0x36d POP
0x36e POP
0x36f POP
0x370 PUSH2 0xd45
0x373 JUMP
---
0x355: JUMPDEST 
0x357: V228 = 0x374
0x35a: V229 = 0x4
0x35d: V230 = CALLDATASIZE
0x35e: V231 = SUB V230 0x4
0x360: V232 = ADD 0x4 V231
0x364: V233 = CALLDATALOAD 0x4
0x366: V234 = 0x20
0x368: V235 = ADD 0x20 0x4
0x370: V236 = 0xd45
0x373: JUMP 0xd45
---
Entry stack: [V11, V224]
Stack pops: 1
Stack additions: [0x374, V233]
Exit stack: [V11, 0x374, V233]

================================

Block 0x374
[0x374:0x389]
---
Predecessors: [0xe0e]
Successors: []
---
0x374 JUMPDEST
0x375 PUSH1 0x40
0x377 MLOAD
0x378 DUP1
0x379 DUP3
0x37a DUP2
0x37b MSTORE
0x37c PUSH1 0x20
0x37e ADD
0x37f SWAP2
0x380 POP
0x381 POP
0x382 PUSH1 0x40
0x384 MLOAD
0x385 DUP1
0x386 SWAP2
0x387 SUB
0x388 SWAP1
0x389 RETURN
---
0x374: JUMPDEST 
0x375: V237 = 0x40
0x377: V238 = M[0x40]
0x37b: M[V238] = V914
0x37c: V239 = 0x20
0x37e: V240 = ADD 0x20 V238
0x382: V241 = 0x40
0x384: V242 = M[0x40]
0x387: V243 = SUB V240 V242
0x389: RETURN V242 V243
---
Entry stack: [V11, V914]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x38a
[0x38a:0x391]
---
Predecessors: [0xa4]
Successors: [0x392, 0x396]
---
0x38a JUMPDEST
0x38b CALLVALUE
0x38c DUP1
0x38d ISZERO
0x38e PUSH2 0x396
0x391 JUMPI
---
0x38a: JUMPDEST 
0x38b: V244 = CALLVALUE
0x38d: V245 = ISZERO V244
0x38e: V246 = 0x396
0x391: JUMPI 0x396 V245
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V244]
Exit stack: [V11, V244]

================================

Block 0x392
[0x392:0x395]
---
Predecessors: [0x38a]
Successors: []
---
0x392 PUSH1 0x0
0x394 DUP1
0x395 REVERT
---
0x392: V247 = 0x0
0x395: REVERT 0x0 0x0
---
Entry stack: [V11, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V244]

================================

Block 0x396
[0x396:0x39e]
---
Predecessors: [0x38a]
Successors: [0xe39]
---
0x396 JUMPDEST
0x397 POP
0x398 PUSH2 0x39f
0x39b PUSH2 0xe39
0x39e JUMP
---
0x396: JUMPDEST 
0x398: V248 = 0x39f
0x39b: V249 = 0xe39
0x39e: JUMP 0xe39
---
Entry stack: [V11, V244]
Stack pops: 1
Stack additions: [0x39f]
Exit stack: [V11, 0x39f]

================================

Block 0x39f
[0x39f:0x3a0]
---
Predecessors: [0xe4c, 0x11c1]
Successors: []
---
0x39f JUMPDEST
0x3a0 STOP
---
0x39f: JUMPDEST 
0x3a0: STOP 
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S3, S2, S1, S0]

================================

Block 0x3a1
[0x3a1:0x3a8]
---
Predecessors: [0xaf]
Successors: [0x3a9, 0x3ad]
---
0x3a1 JUMPDEST
0x3a2 CALLVALUE
0x3a3 DUP1
0x3a4 ISZERO
0x3a5 PUSH2 0x3ad
0x3a8 JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V250 = CALLVALUE
0x3a4: V251 = ISZERO V250
0x3a5: V252 = 0x3ad
0x3a8: JUMPI 0x3ad V251
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V250]
Exit stack: [V11, V250]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: [0x3a1]
Successors: []
---
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac REVERT
---
0x3a9: V253 = 0x0
0x3ac: REVERT 0x0 0x0
---
Entry stack: [V11, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V250]

================================

Block 0x3ad
[0x3ad:0x3cb]
---
Predecessors: [0x3a1]
Successors: [0xf48]
---
0x3ad JUMPDEST
0x3ae POP
0x3af PUSH2 0x3cc
0x3b2 PUSH1 0x4
0x3b4 DUP1
0x3b5 CALLDATASIZE
0x3b6 SUB
0x3b7 DUP2
0x3b8 ADD
0x3b9 SWAP1
0x3ba DUP1
0x3bb DUP1
0x3bc CALLDATALOAD
0x3bd SWAP1
0x3be PUSH1 0x20
0x3c0 ADD
0x3c1 SWAP1
0x3c2 SWAP3
0x3c3 SWAP2
0x3c4 SWAP1
0x3c5 POP
0x3c6 POP
0x3c7 POP
0x3c8 PUSH2 0xf48
0x3cb JUMP
---
0x3ad: JUMPDEST 
0x3af: V254 = 0x3cc
0x3b2: V255 = 0x4
0x3b5: V256 = CALLDATASIZE
0x3b6: V257 = SUB V256 0x4
0x3b8: V258 = ADD 0x4 V257
0x3bc: V259 = CALLDATALOAD 0x4
0x3be: V260 = 0x20
0x3c0: V261 = ADD 0x20 0x4
0x3c8: V262 = 0xf48
0x3cb: JUMP 0xf48
---
Entry stack: [V11, V250]
Stack pops: 1
Stack additions: [0x3cc, V259]
Exit stack: [V11, 0x3cc, V259]

================================

Block 0x3cc
[0x3cc:0x3cd]
---
Predecessors: [0x545, 0x609, 0x1068, 0x1128, 0x114e]
Successors: []
---
0x3cc JUMPDEST
0x3cd STOP
---
0x3cc: JUMPDEST 
0x3cd: STOP 
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, S0]

================================

Block 0x3ce
[0x3ce:0x3d5]
---
Predecessors: [0xba]
Successors: [0x3d6, 0x3da]
---
0x3ce JUMPDEST
0x3cf CALLVALUE
0x3d0 DUP1
0x3d1 ISZERO
0x3d2 PUSH2 0x3da
0x3d5 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V263 = CALLVALUE
0x3d1: V264 = ISZERO V263
0x3d2: V265 = 0x3da
0x3d5: JUMPI 0x3da V264
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V263]
Exit stack: [V11, V263]

================================

Block 0x3d6
[0x3d6:0x3d9]
---
Predecessors: [0x3ce]
Successors: []
---
0x3d6 PUSH1 0x0
0x3d8 DUP1
0x3d9 REVERT
---
0x3d6: V266 = 0x0
0x3d9: REVERT 0x0 0x0
---
Entry stack: [V11, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V263]

================================

Block 0x3da
[0x3da:0x3e2]
---
Predecessors: [0x3ce]
Successors: [0x106f]
---
0x3da JUMPDEST
0x3db POP
0x3dc PUSH2 0x3e3
0x3df PUSH2 0x106f
0x3e2 JUMP
---
0x3da: JUMPDEST 
0x3dc: V267 = 0x3e3
0x3df: V268 = 0x106f
0x3e2: JUMP 0x106f
---
Entry stack: [V11, V263]
Stack pops: 1
Stack additions: [0x3e3]
Exit stack: [V11, 0x3e3]

================================

Block 0x3e3
[0x3e3:0x424]
---
Predecessors: [0x106f]
Successors: []
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0x40
0x3e6 MLOAD
0x3e7 DUP1
0x3e8 DUP3
0x3e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fe AND
0x3ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x414 AND
0x415 DUP2
0x416 MSTORE
0x417 PUSH1 0x20
0x419 ADD
0x41a SWAP2
0x41b POP
0x41c POP
0x41d PUSH1 0x40
0x41f MLOAD
0x420 DUP1
0x421 SWAP2
0x422 SUB
0x423 SWAP1
0x424 RETURN
---
0x3e3: JUMPDEST 
0x3e4: V269 = 0x40
0x3e6: V270 = M[0x40]
0x3e9: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V1027
0x3ff: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x414: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x416: M[V270] = V274
0x417: V275 = 0x20
0x419: V276 = ADD 0x20 V270
0x41d: V277 = 0x40
0x41f: V278 = M[0x40]
0x422: V279 = SUB V276 V278
0x424: RETURN V278 V279
---
Entry stack: [V11, V1027]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x425
[0x425:0x42c]
---
Predecessors: [0xc5]
Successors: [0x42d, 0x431]
---
0x425 JUMPDEST
0x426 CALLVALUE
0x427 DUP1
0x428 ISZERO
0x429 PUSH2 0x431
0x42c JUMPI
---
0x425: JUMPDEST 
0x426: V280 = CALLVALUE
0x428: V281 = ISZERO V280
0x429: V282 = 0x431
0x42c: JUMPI 0x431 V281
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V280]
Exit stack: [V11, V280]

================================

Block 0x42d
[0x42d:0x430]
---
Predecessors: [0x425]
Successors: []
---
0x42d PUSH1 0x0
0x42f DUP1
0x430 REVERT
---
0x42d: V283 = 0x0
0x430: REVERT 0x0 0x0
---
Entry stack: [V11, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V280]

================================

Block 0x431
[0x431:0x439]
---
Predecessors: [0x425]
Successors: [0x1098]
---
0x431 JUMPDEST
0x432 POP
0x433 PUSH2 0x43a
0x436 PUSH2 0x1098
0x439 JUMP
---
0x431: JUMPDEST 
0x433: V284 = 0x43a
0x436: V285 = 0x1098
0x439: JUMP 0x1098
---
Entry stack: [V11, V280]
Stack pops: 1
Stack additions: [0x43a]
Exit stack: [V11, 0x43a]

================================

Block 0x43a
[0x43a:0x453]
---
Predecessors: [0x1098]
Successors: []
---
0x43a JUMPDEST
0x43b PUSH1 0x40
0x43d MLOAD
0x43e DUP1
0x43f DUP3
0x440 ISZERO
0x441 ISZERO
0x442 ISZERO
0x443 ISZERO
0x444 DUP2
0x445 MSTORE
0x446 PUSH1 0x20
0x448 ADD
0x449 SWAP2
0x44a POP
0x44b POP
0x44c PUSH1 0x40
0x44e MLOAD
0x44f DUP1
0x450 SWAP2
0x451 SUB
0x452 SWAP1
0x453 RETURN
---
0x43a: JUMPDEST 
0x43b: V286 = 0x40
0x43d: V287 = M[0x40]
0x440: V288 = ISZERO V1041
0x441: V289 = ISZERO V288
0x442: V290 = ISZERO V289
0x443: V291 = ISZERO V290
0x445: M[V287] = V291
0x446: V292 = 0x20
0x448: V293 = ADD 0x20 V287
0x44c: V294 = 0x40
0x44e: V295 = M[0x40]
0x451: V296 = SUB V293 V295
0x453: RETURN V295 V296
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0x454
[0x454:0x45b]
---
Predecessors: [0xd0]
Successors: [0x45c, 0x460]
---
0x454 JUMPDEST
0x455 CALLVALUE
0x456 DUP1
0x457 ISZERO
0x458 PUSH2 0x460
0x45b JUMPI
---
0x454: JUMPDEST 
0x455: V297 = CALLVALUE
0x457: V298 = ISZERO V297
0x458: V299 = 0x460
0x45b: JUMPI 0x460 V298
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V297]
Exit stack: [V11, V297]

================================

Block 0x45c
[0x45c:0x45f]
---
Predecessors: [0x454]
Successors: []
---
0x45c PUSH1 0x0
0x45e DUP1
0x45f REVERT
---
0x45c: V300 = 0x0
0x45f: REVERT 0x0 0x0
---
Entry stack: [V11, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V297]

================================

Block 0x460
[0x460:0x468]
---
Predecessors: [0x454]
Successors: [0x10ef]
---
0x460 JUMPDEST
0x461 POP
0x462 PUSH2 0x469
0x465 PUSH2 0x10ef
0x468 JUMP
---
0x460: JUMPDEST 
0x462: V301 = 0x469
0x465: V302 = 0x10ef
0x468: JUMP 0x10ef
---
Entry stack: [V11, V297]
Stack pops: 1
Stack additions: [0x469]
Exit stack: [V11, 0x469]

================================

Block 0x469
[0x469:0x4aa]
---
Predecessors: [0x10ef]
Successors: []
---
0x469 JUMPDEST
0x46a PUSH1 0x40
0x46c MLOAD
0x46d DUP1
0x46e DUP3
0x46f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x484 AND
0x485 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49a AND
0x49b DUP2
0x49c MSTORE
0x49d PUSH1 0x20
0x49f ADD
0x4a0 SWAP2
0x4a1 POP
0x4a2 POP
0x4a3 PUSH1 0x40
0x4a5 MLOAD
0x4a6 DUP1
0x4a7 SWAP2
0x4a8 SUB
0x4a9 SWAP1
0x4aa RETURN
---
0x469: JUMPDEST 
0x46a: V303 = 0x40
0x46c: V304 = M[0x40]
0x46f: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x484: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V1049
0x485: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x49a: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x49c: M[V304] = V308
0x49d: V309 = 0x20
0x49f: V310 = ADD 0x20 V304
0x4a3: V311 = 0x40
0x4a5: V312 = M[0x40]
0x4a8: V313 = SUB V310 V312
0x4aa: RETURN V312 V313
---
Entry stack: [V11, 0x469, V1049]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x469]

================================

Block 0x4ab
[0x4ab:0x4b2]
---
Predecessors: [0xdb]
Successors: [0x4b3, 0x4b7]
---
0x4ab JUMPDEST
0x4ac CALLVALUE
0x4ad DUP1
0x4ae ISZERO
0x4af PUSH2 0x4b7
0x4b2 JUMPI
---
0x4ab: JUMPDEST 
0x4ac: V314 = CALLVALUE
0x4ae: V315 = ISZERO V314
0x4af: V316 = 0x4b7
0x4b2: JUMPI 0x4b7 V315
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V314]
Exit stack: [V11, V314]

================================

Block 0x4b3
[0x4b3:0x4b6]
---
Predecessors: [0x4ab]
Successors: []
---
0x4b3 PUSH1 0x0
0x4b5 DUP1
0x4b6 REVERT
---
0x4b3: V317 = 0x0
0x4b6: REVERT 0x0 0x0
---
Entry stack: [V11, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V314]

================================

Block 0x4b7
[0x4b7:0x4d5]
---
Predecessors: [0x4ab]
Successors: [0x1115]
---
0x4b7 JUMPDEST
0x4b8 POP
0x4b9 PUSH2 0x4d6
0x4bc PUSH1 0x4
0x4be DUP1
0x4bf CALLDATASIZE
0x4c0 SUB
0x4c1 DUP2
0x4c2 ADD
0x4c3 SWAP1
0x4c4 DUP1
0x4c5 DUP1
0x4c6 CALLDATALOAD
0x4c7 SWAP1
0x4c8 PUSH1 0x20
0x4ca ADD
0x4cb SWAP1
0x4cc SWAP3
0x4cd SWAP2
0x4ce SWAP1
0x4cf POP
0x4d0 POP
0x4d1 POP
0x4d2 PUSH2 0x1115
0x4d5 JUMP
---
0x4b7: JUMPDEST 
0x4b9: V318 = 0x4d6
0x4bc: V319 = 0x4
0x4bf: V320 = CALLDATASIZE
0x4c0: V321 = SUB V320 0x4
0x4c2: V322 = ADD 0x4 V321
0x4c6: V323 = CALLDATALOAD 0x4
0x4c8: V324 = 0x20
0x4ca: V325 = ADD 0x20 0x4
0x4d2: V326 = 0x1115
0x4d5: JUMP 0x1115
---
Entry stack: [V11, V314]
Stack pops: 1
Stack additions: [0x4d6, V323]
Exit stack: [V11, 0x4d6, V323]

================================

Block 0x4d6
[0x4d6:0x4d7]
---
Predecessors: [0x545, 0x609, 0x1068, 0x1128, 0x114e]
Successors: []
---
0x4d6 JUMPDEST
0x4d7 STOP
---
0x4d6: JUMPDEST 
0x4d7: STOP 
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, S0]

================================

Block 0x4d8
[0x4d8:0x4df]
---
Predecessors: [0xe6]
Successors: [0x4e0, 0x4e4]
---
0x4d8 JUMPDEST
0x4d9 CALLVALUE
0x4da DUP1
0x4db ISZERO
0x4dc PUSH2 0x4e4
0x4df JUMPI
---
0x4d8: JUMPDEST 
0x4d9: V327 = CALLVALUE
0x4db: V328 = ISZERO V327
0x4dc: V329 = 0x4e4
0x4df: JUMPI 0x4e4 V328
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V327]
Exit stack: [V11, V327]

================================

Block 0x4e0
[0x4e0:0x4e3]
---
Predecessors: [0x4d8]
Successors: []
---
0x4e0 PUSH1 0x0
0x4e2 DUP1
0x4e3 REVERT
---
0x4e0: V330 = 0x0
0x4e3: REVERT 0x0 0x0
---
Entry stack: [V11, V327]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V327]

================================

Block 0x4e4
[0x4e4:0x518]
---
Predecessors: [0x4d8]
Successors: [0x1132]
---
0x4e4 JUMPDEST
0x4e5 POP
0x4e6 PUSH2 0x519
0x4e9 PUSH1 0x4
0x4eb DUP1
0x4ec CALLDATASIZE
0x4ed SUB
0x4ee DUP2
0x4ef ADD
0x4f0 SWAP1
0x4f1 DUP1
0x4f2 DUP1
0x4f3 CALLDATALOAD
0x4f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x509 AND
0x50a SWAP1
0x50b PUSH1 0x20
0x50d ADD
0x50e SWAP1
0x50f SWAP3
0x510 SWAP2
0x511 SWAP1
0x512 POP
0x513 POP
0x514 POP
0x515 PUSH2 0x1132
0x518 JUMP
---
0x4e4: JUMPDEST 
0x4e6: V331 = 0x519
0x4e9: V332 = 0x4
0x4ec: V333 = CALLDATASIZE
0x4ed: V334 = SUB V333 0x4
0x4ef: V335 = ADD 0x4 V334
0x4f3: V336 = CALLDATALOAD 0x4
0x4f4: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x509: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x50b: V339 = 0x20
0x50d: V340 = ADD 0x20 0x4
0x515: V341 = 0x1132
0x518: JUMP 0x1132
---
Entry stack: [V11, V327]
Stack pops: 1
Stack additions: [0x519, V338]
Exit stack: [V11, 0x519, V338]

================================

Block 0x519
[0x519:0x51a]
---
Predecessors: [0x545, 0x609, 0x1068, 0x1128, 0x114e]
Successors: []
---
0x519 JUMPDEST
0x51a STOP
---
0x519: JUMPDEST 
0x51a: STOP 
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, S0]

================================

Block 0x51b
[0x51b:0x522]
---
Predecessors: [0xf1]
Successors: [0x523, 0x527]
---
0x51b JUMPDEST
0x51c CALLVALUE
0x51d DUP1
0x51e ISZERO
0x51f PUSH2 0x527
0x522 JUMPI
---
0x51b: JUMPDEST 
0x51c: V342 = CALLVALUE
0x51e: V343 = ISZERO V342
0x51f: V344 = 0x527
0x522: JUMPI 0x527 V343
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V342]
Exit stack: [V11, V342]

================================

Block 0x523
[0x523:0x526]
---
Predecessors: [0x51b]
Successors: []
---
0x523 PUSH1 0x0
0x525 DUP1
0x526 REVERT
---
0x523: V345 = 0x0
0x526: REVERT 0x0 0x0
---
Entry stack: [V11, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V342]

================================

Block 0x527
[0x527:0x52f]
---
Predecessors: [0x51b]
Successors: [0x1151]
---
0x527 JUMPDEST
0x528 POP
0x529 PUSH2 0x530
0x52c PUSH2 0x1151
0x52f JUMP
---
0x527: JUMPDEST 
0x529: V346 = 0x530
0x52c: V347 = 0x1151
0x52f: JUMP 0x1151
---
Entry stack: [V11, V342]
Stack pops: 1
Stack additions: [0x530]
Exit stack: [V11, 0x530]

================================

Block 0x530
[0x530:0x531]
---
Predecessors: [0xe4c, 0x11c1]
Successors: []
---
0x530 JUMPDEST
0x531 STOP
---
0x530: JUMPDEST 
0x531: STOP 
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S3, S2, S1, S0]

================================

Block 0x532
[0x532:0x539]
---
Predecessors: [0x10a]
Successors: [0x1098]
---
0x532 JUMPDEST
0x533 PUSH2 0x53a
0x536 PUSH2 0x1098
0x539 JUMP
---
0x532: JUMPDEST 
0x533: V348 = 0x53a
0x536: V349 = 0x1098
0x539: JUMP 0x1098
---
Entry stack: [V11, 0x13f, V77]
Stack pops: 0
Stack additions: [0x53a]
Exit stack: [V11, 0x13f, V77, 0x53a]

================================

Block 0x53a
[0x53a:0x540]
---
Predecessors: [0x1098]
Successors: [0x541, 0x545]
---
0x53a JUMPDEST
0x53b ISZERO
0x53c ISZERO
0x53d PUSH2 0x545
0x540 JUMPI
---
0x53a: JUMPDEST 
0x53b: V350 = ISZERO V1041
0x53c: V351 = ISZERO V350
0x53d: V352 = 0x545
0x540: JUMPI 0x545 V351
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0x541
[0x541:0x544]
---
Predecessors: [0x53a]
Successors: []
---
0x541 PUSH1 0x0
0x543 DUP1
0x544 REVERT
---
0x541: V353 = 0x0
0x544: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x545
[0x545:0x5c9]
---
Predecessors: [0x53a]
Successors: [0x13f, 0x204, 0x3cc, 0x4d6, 0x519]
---
0x545 JUMPDEST
0x546 DUP1
0x547 PUSH1 0x1
0x549 PUSH1 0x0
0x54b PUSH2 0x100
0x54e EXP
0x54f DUP2
0x550 SLOAD
0x551 DUP2
0x552 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x567 MUL
0x568 NOT
0x569 AND
0x56a SWAP1
0x56b DUP4
0x56c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x581 AND
0x582 MUL
0x583 OR
0x584 SWAP1
0x585 SSTORE
0x586 POP
0x587 DUP1
0x588 PUSH1 0x2
0x58a PUSH1 0x0
0x58c PUSH2 0x100
0x58f EXP
0x590 DUP2
0x591 SLOAD
0x592 DUP2
0x593 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a8 MUL
0x5a9 NOT
0x5aa AND
0x5ab SWAP1
0x5ac DUP4
0x5ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c2 AND
0x5c3 MUL
0x5c4 OR
0x5c5 SWAP1
0x5c6 SSTORE
0x5c7 POP
0x5c8 POP
0x5c9 JUMP
---
0x545: JUMPDEST 
0x547: V354 = 0x1
0x549: V355 = 0x0
0x54b: V356 = 0x100
0x54e: V357 = EXP 0x100 0x0
0x550: V358 = S[0x1]
0x552: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x567: V360 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x568: V361 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x569: V362 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V358
0x56c: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x581: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x582: V365 = MUL V364 0x1
0x583: V366 = OR V365 V362
0x585: S[0x1] = V366
0x588: V367 = 0x2
0x58a: V368 = 0x0
0x58c: V369 = 0x100
0x58f: V370 = EXP 0x100 0x0
0x591: V371 = S[0x2]
0x593: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V373 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5a9: V374 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5aa: V375 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V371
0x5ad: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5c3: V378 = MUL V377 0x1
0x5c4: V379 = OR V378 V375
0x5c6: S[0x2] = V379
0x5c9: JUMP S1
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S4, S3, S2]

================================

Block 0x5ca
[0x5ca:0x5cf]
---
Predecessors: [0x14d]
Successors: [0x156]
---
0x5ca JUMPDEST
0x5cb PUSH1 0x5
0x5cd SLOAD
0x5ce DUP2
0x5cf JUMP
---
0x5ca: JUMPDEST 
0x5cb: V380 = 0x5
0x5cd: V381 = S[0x5]
0x5cf: JUMP 0x156
---
Entry stack: [V11, 0x156]
Stack pops: 1
Stack additions: [S0, V381]
Exit stack: [V11, 0x156, V381]

================================

Block 0x5d0
[0x5d0:0x5f5]
---
Predecessors: [0x178]
Successors: [0x181]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x1
0x5d3 PUSH1 0x0
0x5d5 SWAP1
0x5d6 SLOAD
0x5d7 SWAP1
0x5d8 PUSH2 0x100
0x5db EXP
0x5dc SWAP1
0x5dd DIV
0x5de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f3 AND
0x5f4 DUP2
0x5f5 JUMP
---
0x5d0: JUMPDEST 
0x5d1: V382 = 0x1
0x5d3: V383 = 0x0
0x5d6: V384 = S[0x1]
0x5d8: V385 = 0x100
0x5db: V386 = EXP 0x100 0x0
0x5dd: V387 = DIV V384 0x1
0x5de: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f3: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x5f5: JUMP 0x181
---
Entry stack: [V11, 0x181]
Stack pops: 1
Stack additions: [S0, V389]
Exit stack: [V11, 0x181, V389]

================================

Block 0x5f6
[0x5f6:0x5fd]
---
Predecessors: [0x1cf]
Successors: [0x1098]
---
0x5f6 JUMPDEST
0x5f7 PUSH2 0x5fe
0x5fa PUSH2 0x1098
0x5fd JUMP
---
0x5f6: JUMPDEST 
0x5f7: V390 = 0x5fe
0x5fa: V391 = 0x1098
0x5fd: JUMP 0x1098
---
Entry stack: [V11, 0x204, V122]
Stack pops: 0
Stack additions: [0x5fe]
Exit stack: [V11, 0x204, V122, 0x5fe]

================================

Block 0x5fe
[0x5fe:0x604]
---
Predecessors: [0x1098]
Successors: [0x605, 0x609]
---
0x5fe JUMPDEST
0x5ff ISZERO
0x600 ISZERO
0x601 PUSH2 0x609
0x604 JUMPI
---
0x5fe: JUMPDEST 
0x5ff: V392 = ISZERO V1041
0x600: V393 = ISZERO V392
0x601: V394 = 0x609
0x604: JUMPI 0x609 V393
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0x605
[0x605:0x608]
---
Predecessors: [0x5fe]
Successors: []
---
0x605 PUSH1 0x0
0x607 DUP1
0x608 REVERT
---
0x605: V395 = 0x0
0x608: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x609
[0x609:0x68d]
---
Predecessors: [0x5fe]
Successors: [0x13f, 0x204, 0x3cc, 0x4d6, 0x519]
---
0x609 JUMPDEST
0x60a DUP1
0x60b PUSH1 0x3
0x60d PUSH1 0x0
0x60f PUSH2 0x100
0x612 EXP
0x613 DUP2
0x614 SLOAD
0x615 DUP2
0x616 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62b MUL
0x62c NOT
0x62d AND
0x62e SWAP1
0x62f DUP4
0x630 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x645 AND
0x646 MUL
0x647 OR
0x648 SWAP1
0x649 SSTORE
0x64a POP
0x64b DUP1
0x64c PUSH1 0x4
0x64e PUSH1 0x0
0x650 PUSH2 0x100
0x653 EXP
0x654 DUP2
0x655 SLOAD
0x656 DUP2
0x657 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66c MUL
0x66d NOT
0x66e AND
0x66f SWAP1
0x670 DUP4
0x671 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x686 AND
0x687 MUL
0x688 OR
0x689 SWAP1
0x68a SSTORE
0x68b POP
0x68c POP
0x68d JUMP
---
0x609: JUMPDEST 
0x60b: V396 = 0x3
0x60d: V397 = 0x0
0x60f: V398 = 0x100
0x612: V399 = EXP 0x100 0x0
0x614: V400 = S[0x3]
0x616: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x62b: V402 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x62c: V403 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x62d: V404 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V400
0x630: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x645: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x646: V407 = MUL V406 0x1
0x647: V408 = OR V407 V404
0x649: S[0x3] = V408
0x64c: V409 = 0x4
0x64e: V410 = 0x0
0x650: V411 = 0x100
0x653: V412 = EXP 0x100 0x0
0x655: V413 = S[0x4]
0x657: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x66c: V415 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x66d: V416 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V417 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V413
0x671: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x686: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x687: V420 = MUL V419 0x1
0x688: V421 = OR V420 V417
0x68a: S[0x4] = V421
0x68d: JUMP S1
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S4, S3, S2]

================================

Block 0x68e
[0x68e:0x728]
---
Predecessors: [0x212]
Successors: [0x729, 0x72d]
---
0x68e JUMPDEST
0x68f PUSH1 0x0
0x691 DUP1
0x692 PUSH1 0x0
0x694 PUSH1 0x4
0x696 PUSH1 0x0
0x698 SWAP1
0x699 SLOAD
0x69a SWAP1
0x69b PUSH2 0x100
0x69e EXP
0x69f SWAP1
0x6a0 DIV
0x6a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b6 AND
0x6b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cc AND
0x6cd PUSH4 0x4e4fe306
0x6d2 DUP6
0x6d3 PUSH1 0x0
0x6d5 PUSH1 0x40
0x6d7 MLOAD
0x6d8 DUP4
0x6d9 PUSH4 0xffffffff
0x6de AND
0x6df PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6fd MUL
0x6fe DUP2
0x6ff MSTORE
0x700 PUSH1 0x4
0x702 ADD
0x703 DUP1
0x704 DUP4
0x705 DUP2
0x706 MSTORE
0x707 PUSH1 0x20
0x709 ADD
0x70a DUP3
0x70b DUP2
0x70c MSTORE
0x70d PUSH1 0x20
0x70f ADD
0x710 SWAP3
0x711 POP
0x712 POP
0x713 POP
0x714 PUSH1 0x20
0x716 PUSH1 0x40
0x718 MLOAD
0x719 DUP1
0x71a DUP4
0x71b SUB
0x71c DUP2
0x71d PUSH1 0x0
0x71f DUP8
0x720 DUP1
0x721 EXTCODESIZE
0x722 ISZERO
0x723 DUP1
0x724 ISZERO
0x725 PUSH2 0x72d
0x728 JUMPI
---
0x68e: JUMPDEST 
0x68f: V422 = 0x0
0x692: V423 = 0x0
0x694: V424 = 0x4
0x696: V425 = 0x0
0x699: V426 = S[0x4]
0x69b: V427 = 0x100
0x69e: V428 = EXP 0x100 0x0
0x6a0: V429 = DIV V426 0x1
0x6a1: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x6b7: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cc: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x6cd: V434 = 0x4e4fe306
0x6d3: V435 = 0x0
0x6d5: V436 = 0x40
0x6d7: V437 = M[0x40]
0x6d9: V438 = 0xffffffff
0x6de: V439 = AND 0xffffffff 0x4e4fe306
0x6df: V440 = 0x100000000000000000000000000000000000000000000000000000000
0x6fd: V441 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4e4fe306
0x6ff: M[V437] = 0x4e4fe30600000000000000000000000000000000000000000000000000000000
0x700: V442 = 0x4
0x702: V443 = ADD 0x4 V437
0x706: M[V443] = V135
0x707: V444 = 0x20
0x709: V445 = ADD 0x20 V443
0x70c: M[V445] = 0x0
0x70d: V446 = 0x20
0x70f: V447 = ADD 0x20 V445
0x714: V448 = 0x20
0x716: V449 = 0x40
0x718: V450 = M[0x40]
0x71b: V451 = SUB V447 V450
0x71d: V452 = 0x0
0x721: V453 = EXTCODESIZE V433
0x722: V454 = ISZERO V453
0x724: V455 = ISZERO V454
0x725: V456 = 0x72d
0x728: JUMPI 0x72d V455
---
Entry stack: [V11, 0x231, V135]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, V433, 0x4e4fe306, V447, 0x20, V450, V451, V450, 0x0, V433, V454]
Exit stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V433, 0x4e4fe306, V447, 0x20, V450, V451, V450, 0x0, V433, V454]

================================

Block 0x729
[0x729:0x72c]
---
Predecessors: [0x68e]
Successors: []
---
0x729 PUSH1 0x0
0x72b DUP1
0x72c REVERT
---
0x729: V457 = 0x0
0x72c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V433, 0x4e4fe306, V447, 0x20, V450, V451, V450, 0x0, V433, V454]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V433, 0x4e4fe306, V447, 0x20, V450, V451, V450, 0x0, V433, V454]

================================

Block 0x72d
[0x72d:0x737]
---
Predecessors: [0x68e]
Successors: [0x738, 0x741]
---
0x72d JUMPDEST
0x72e POP
0x72f GAS
0x730 CALL
0x731 ISZERO
0x732 DUP1
0x733 ISZERO
0x734 PUSH2 0x741
0x737 JUMPI
---
0x72d: JUMPDEST 
0x72f: V458 = GAS
0x730: V459 = CALL V458 V433 0x0 V450 V451 V450 0x20
0x731: V460 = ISZERO V459
0x733: V461 = ISZERO V460
0x734: V462 = 0x741
0x737: JUMPI 0x741 V461
---
Entry stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V433, 0x4e4fe306, V447, 0x20, V450, V451, V450, 0x0, V433, V454]
Stack pops: 7
Stack additions: [V460]
Exit stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V433, 0x4e4fe306, V447, V460]

================================

Block 0x738
[0x738:0x740]
---
Predecessors: [0x72d]
Successors: []
---
0x738 RETURNDATASIZE
0x739 PUSH1 0x0
0x73b DUP1
0x73c RETURNDATACOPY
0x73d RETURNDATASIZE
0x73e PUSH1 0x0
0x740 REVERT
---
0x738: V463 = RETURNDATASIZE
0x739: V464 = 0x0
0x73c: RETURNDATACOPY 0x0 0x0 V463
0x73d: V465 = RETURNDATASIZE
0x73e: V466 = 0x0
0x740: REVERT 0x0 V465
---
Entry stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V433, 0x4e4fe306, V447, V460]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V433, 0x4e4fe306, V447, V460]

================================

Block 0x741
[0x741:0x752]
---
Predecessors: [0x72d]
Successors: [0x753, 0x757]
---
0x741 JUMPDEST
0x742 POP
0x743 POP
0x744 POP
0x745 POP
0x746 PUSH1 0x40
0x748 MLOAD
0x749 RETURNDATASIZE
0x74a PUSH1 0x20
0x74c DUP2
0x74d LT
0x74e ISZERO
0x74f PUSH2 0x757
0x752 JUMPI
---
0x741: JUMPDEST 
0x746: V467 = 0x40
0x748: V468 = M[0x40]
0x749: V469 = RETURNDATASIZE
0x74a: V470 = 0x20
0x74d: V471 = LT V469 0x20
0x74e: V472 = ISZERO V471
0x74f: V473 = 0x757
0x752: JUMPI 0x757 V472
---
Entry stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V433, 0x4e4fe306, V447, V460]
Stack pops: 4
Stack additions: [V468, V469]
Exit stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V468, V469]

================================

Block 0x753
[0x753:0x756]
---
Predecessors: [0x741]
Successors: []
---
0x753 PUSH1 0x0
0x755 DUP1
0x756 REVERT
---
0x753: V474 = 0x0
0x756: REVERT 0x0 0x0
---
Entry stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V468, V469]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V468, V469]

================================

Block 0x757
[0x757:0x781]
---
Predecessors: [0x741]
Successors: [0x231]
---
0x757 JUMPDEST
0x758 DUP2
0x759 ADD
0x75a SWAP1
0x75b DUP1
0x75c DUP1
0x75d MLOAD
0x75e SWAP1
0x75f PUSH1 0x20
0x761 ADD
0x762 SWAP1
0x763 SWAP3
0x764 SWAP2
0x765 SWAP1
0x766 POP
0x767 POP
0x768 POP
0x769 SWAP2
0x76a POP
0x76b PUSH1 0xff
0x76d PUSH1 0xf8
0x76f DUP4
0x770 SWAP1
0x771 PUSH1 0x2
0x773 EXP
0x774 SWAP1
0x775 DIV
0x776 AND
0x777 SWAP1
0x778 POP
0x779 DUP1
0x77a SWAP3
0x77b POP
0x77c POP
0x77d POP
0x77e SWAP2
0x77f SWAP1
0x780 POP
0x781 JUMP
---
0x757: JUMPDEST 
0x759: V475 = ADD V468 V469
0x75d: V476 = M[V468]
0x75f: V477 = 0x20
0x761: V478 = ADD 0x20 V468
0x76b: V479 = 0xff
0x76d: V480 = 0xf8
0x771: V481 = 0x2
0x773: V482 = EXP 0x2 0xf8
0x775: V483 = DIV V476 0x100000000000000000000000000000000000000000000000000000000000000
0x776: V484 = AND V483 0xff
0x781: JUMP 0x231
---
Entry stack: [V11, 0x231, V135, 0x0, 0x0, 0x0, V468, V469]
Stack pops: 7
Stack additions: [V484]
Exit stack: [V11, V484]

================================

Block 0x782
[0x782:0x81c]
---
Predecessors: [0x253, 0xbe3]
Successors: [0x81d, 0x821]
---
0x782 JUMPDEST
0x783 PUSH1 0x0
0x785 DUP1
0x786 PUSH1 0x0
0x788 PUSH1 0x4
0x78a PUSH1 0x0
0x78c SWAP1
0x78d SLOAD
0x78e SWAP1
0x78f PUSH2 0x100
0x792 EXP
0x793 SWAP1
0x794 DIV
0x795 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7aa AND
0x7ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c0 AND
0x7c1 PUSH4 0x4e4fe306
0x7c6 DUP6
0x7c7 PUSH1 0x0
0x7c9 PUSH1 0x40
0x7cb MLOAD
0x7cc DUP4
0x7cd PUSH4 0xffffffff
0x7d2 AND
0x7d3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7f1 MUL
0x7f2 DUP2
0x7f3 MSTORE
0x7f4 PUSH1 0x4
0x7f6 ADD
0x7f7 DUP1
0x7f8 DUP4
0x7f9 DUP2
0x7fa MSTORE
0x7fb PUSH1 0x20
0x7fd ADD
0x7fe DUP3
0x7ff DUP2
0x800 MSTORE
0x801 PUSH1 0x20
0x803 ADD
0x804 SWAP3
0x805 POP
0x806 POP
0x807 POP
0x808 PUSH1 0x20
0x80a PUSH1 0x40
0x80c MLOAD
0x80d DUP1
0x80e DUP4
0x80f SUB
0x810 DUP2
0x811 PUSH1 0x0
0x813 DUP8
0x814 DUP1
0x815 EXTCODESIZE
0x816 ISZERO
0x817 DUP1
0x818 ISZERO
0x819 PUSH2 0x821
0x81c JUMPI
---
0x782: JUMPDEST 
0x783: V485 = 0x0
0x786: V486 = 0x0
0x788: V487 = 0x4
0x78a: V488 = 0x0
0x78d: V489 = S[0x4]
0x78f: V490 = 0x100
0x792: V491 = EXP 0x100 0x0
0x794: V492 = DIV V489 0x1
0x795: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x7aa: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x7ab: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c0: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x7c1: V497 = 0x4e4fe306
0x7c7: V498 = 0x0
0x7c9: V499 = 0x40
0x7cb: V500 = M[0x40]
0x7cd: V501 = 0xffffffff
0x7d2: V502 = AND 0xffffffff 0x4e4fe306
0x7d3: V503 = 0x100000000000000000000000000000000000000000000000000000000
0x7f1: V504 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4e4fe306
0x7f3: M[V500] = 0x4e4fe30600000000000000000000000000000000000000000000000000000000
0x7f4: V505 = 0x4
0x7f6: V506 = ADD 0x4 V500
0x7fa: M[V506] = S0
0x7fb: V507 = 0x20
0x7fd: V508 = ADD 0x20 V506
0x800: M[V508] = 0x0
0x801: V509 = 0x20
0x803: V510 = ADD 0x20 V508
0x808: V511 = 0x20
0x80a: V512 = 0x40
0x80c: V513 = M[0x40]
0x80f: V514 = SUB V510 V513
0x811: V515 = 0x0
0x815: V516 = EXTCODESIZE V496
0x816: V517 = ISZERO V516
0x818: V518 = ISZERO V517
0x819: V519 = 0x821
0x81c: JUMPI 0x821 V518
---
Entry stack: [V11, S6, S5, V734, S3, S2, {0x272, 0xbf0}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, V496, 0x4e4fe306, V510, 0x20, V513, V514, V513, 0x0, V496, V517]
Exit stack: [V11, S6, S5, V734, S3, S2, {0x272, 0xbf0}, S0, 0x0, 0x0, 0x0, V496, 0x4e4fe306, V510, 0x20, V513, V514, V513, 0x0, V496, V517]

================================

Block 0x81d
[0x81d:0x820]
---
Predecessors: [0x782]
Successors: []
---
0x81d PUSH1 0x0
0x81f DUP1
0x820 REVERT
---
0x81d: V520 = 0x0
0x820: REVERT 0x0 0x0
---
Entry stack: [V11, S19, S18, V734, S16, S15, {0x272, 0xbf0}, S13, 0x0, 0x0, 0x0, V496, 0x4e4fe306, V510, 0x20, V513, V514, V513, 0x0, V496, V517]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S19, S18, V734, S16, S15, {0x272, 0xbf0}, S13, 0x0, 0x0, 0x0, V496, 0x4e4fe306, V510, 0x20, V513, V514, V513, 0x0, V496, V517]

================================

Block 0x821
[0x821:0x82b]
---
Predecessors: [0x782]
Successors: [0x82c, 0x835]
---
0x821 JUMPDEST
0x822 POP
0x823 GAS
0x824 CALL
0x825 ISZERO
0x826 DUP1
0x827 ISZERO
0x828 PUSH2 0x835
0x82b JUMPI
---
0x821: JUMPDEST 
0x823: V521 = GAS
0x824: V522 = CALL V521 V496 0x0 V513 V514 V513 0x20
0x825: V523 = ISZERO V522
0x827: V524 = ISZERO V523
0x828: V525 = 0x835
0x82b: JUMPI 0x835 V524
---
Entry stack: [V11, S19, S18, V734, S16, S15, {0x272, 0xbf0}, S13, 0x0, 0x0, 0x0, V496, 0x4e4fe306, V510, 0x20, V513, V514, V513, 0x0, V496, V517]
Stack pops: 7
Stack additions: [V523]
Exit stack: [V11, S19, S18, V734, S16, S15, {0x272, 0xbf0}, S13, 0x0, 0x0, 0x0, V496, 0x4e4fe306, V510, V523]

================================

Block 0x82c
[0x82c:0x834]
---
Predecessors: [0x821]
Successors: []
---
0x82c RETURNDATASIZE
0x82d PUSH1 0x0
0x82f DUP1
0x830 RETURNDATACOPY
0x831 RETURNDATASIZE
0x832 PUSH1 0x0
0x834 REVERT
---
0x82c: V526 = RETURNDATASIZE
0x82d: V527 = 0x0
0x830: RETURNDATACOPY 0x0 0x0 V526
0x831: V528 = RETURNDATASIZE
0x832: V529 = 0x0
0x834: REVERT 0x0 V528
---
Entry stack: [V11, 0x347, V220, V734, 0x0, S9, {0x272, 0xbf0}, S7, 0x0, 0x0, 0x0, S3, 0x4e4fe306, S1, V523]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x347, V220, V734, 0x0, S9, {0x272, 0xbf0}, S7, 0x0, 0x0, 0x0, S3, 0x4e4fe306, S1, V523]

================================

Block 0x835
[0x835:0x846]
---
Predecessors: [0x821]
Successors: [0x847, 0x84b]
---
0x835 JUMPDEST
0x836 POP
0x837 POP
0x838 POP
0x839 POP
0x83a PUSH1 0x40
0x83c MLOAD
0x83d RETURNDATASIZE
0x83e PUSH1 0x20
0x840 DUP2
0x841 LT
0x842 ISZERO
0x843 PUSH2 0x84b
0x846 JUMPI
---
0x835: JUMPDEST 
0x83a: V530 = 0x40
0x83c: V531 = M[0x40]
0x83d: V532 = RETURNDATASIZE
0x83e: V533 = 0x20
0x841: V534 = LT V532 0x20
0x842: V535 = ISZERO V534
0x843: V536 = 0x84b
0x846: JUMPI 0x84b V535
---
Entry stack: [V11, 0x347, V220, V734, 0x0, S9, {0x272, 0xbf0}, S7, 0x0, 0x0, 0x0, S3, 0x4e4fe306, S1, V523]
Stack pops: 4
Stack additions: [V531, V532]
Exit stack: [V11, 0x347, V220, V734, 0x0, S9, {0x272, 0xbf0}, S7, 0x0, 0x0, 0x0, V531, V532]

================================

Block 0x847
[0x847:0x84a]
---
Predecessors: [0x835]
Successors: []
---
0x847 PUSH1 0x0
0x849 DUP1
0x84a REVERT
---
0x847: V537 = 0x0
0x84a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x347, V220, V734, 0x0, S7, {0x272, 0xbf0}, S5, 0x0, 0x0, 0x0, V531, V532]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x347, V220, V734, 0x0, S7, {0x272, 0xbf0}, S5, 0x0, 0x0, 0x0, V531, V532]

================================

Block 0x84b
[0x84b:0x875]
---
Predecessors: [0x835]
Successors: [0x272, 0xbf0]
---
0x84b JUMPDEST
0x84c DUP2
0x84d ADD
0x84e SWAP1
0x84f DUP1
0x850 DUP1
0x851 MLOAD
0x852 SWAP1
0x853 PUSH1 0x20
0x855 ADD
0x856 SWAP1
0x857 SWAP3
0x858 SWAP2
0x859 SWAP1
0x85a POP
0x85b POP
0x85c POP
0x85d SWAP2
0x85e POP
0x85f PUSH1 0xf
0x861 PUSH1 0xd8
0x863 DUP4
0x864 SWAP1
0x865 PUSH1 0x2
0x867 EXP
0x868 SWAP1
0x869 DIV
0x86a AND
0x86b SWAP1
0x86c POP
0x86d DUP1
0x86e SWAP3
0x86f POP
0x870 POP
0x871 POP
0x872 SWAP2
0x873 SWAP1
0x874 POP
0x875 JUMP
---
0x84b: JUMPDEST 
0x84d: V538 = ADD V531 V532
0x851: V539 = M[V531]
0x853: V540 = 0x20
0x855: V541 = ADD 0x20 V531
0x85f: V542 = 0xf
0x861: V543 = 0xd8
0x865: V544 = 0x2
0x867: V545 = EXP 0x2 0xd8
0x869: V546 = DIV V539 0x1000000000000000000000000000000000000000000000000000000
0x86a: V547 = AND V546 0xf
0x875: JUMP {0x272, 0xbf0}
---
Entry stack: [V11, 0x347, V220, V734, 0x0, S7, {0x272, 0xbf0}, S5, 0x0, 0x0, 0x0, V531, V532]
Stack pops: 7
Stack additions: [V547]
Exit stack: [V11, 0x347, V220, V734, 0x0, S7, V547]

================================

Block 0x876
[0x876:0x87d]
---
Predecessors: [0x294]
Successors: [0x1098]
---
0x876 JUMPDEST
0x877 PUSH2 0x87e
0x87a PUSH2 0x1098
0x87d JUMP
---
0x876: JUMPDEST 
0x877: V548 = 0x87e
0x87a: V549 = 0x1098
0x87d: JUMP 0x1098
---
Entry stack: [V11, 0x2d9, V177, V182, V187]
Stack pops: 0
Stack additions: [0x87e]
Exit stack: [V11, 0x2d9, V177, V182, V187, 0x87e]

================================

Block 0x87e
[0x87e:0x884]
---
Predecessors: [0x1098]
Successors: [0x885, 0x889]
---
0x87e JUMPDEST
0x87f ISZERO
0x880 ISZERO
0x881 PUSH2 0x889
0x884 JUMPI
---
0x87e: JUMPDEST 
0x87f: V550 = ISZERO V1041
0x880: V551 = ISZERO V550
0x881: V552 = 0x889
0x884: JUMPI 0x889 V551
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0x885
[0x885:0x888]
---
Predecessors: [0x87e]
Successors: []
---
0x885 PUSH1 0x0
0x887 DUP1
0x888 REVERT
---
0x885: V553 = 0x0
0x888: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x889
[0x889:0x94b]
---
Predecessors: [0x87e]
Successors: [0x94c, 0x950]
---
0x889 JUMPDEST
0x88a PUSH1 0x2
0x88c PUSH1 0x0
0x88e SWAP1
0x88f SLOAD
0x890 SWAP1
0x891 PUSH2 0x100
0x894 EXP
0x895 SWAP1
0x896 DIV
0x897 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ac AND
0x8ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c2 AND
0x8c3 PUSH4 0x6040e918
0x8c8 PUSH1 0x5
0x8ca SLOAD
0x8cb DUP6
0x8cc DUP6
0x8cd DUP6
0x8ce PUSH1 0x40
0x8d0 MLOAD
0x8d1 DUP6
0x8d2 PUSH4 0xffffffff
0x8d7 AND
0x8d8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8f6 MUL
0x8f7 DUP2
0x8f8 MSTORE
0x8f9 PUSH1 0x4
0x8fb ADD
0x8fc DUP1
0x8fd DUP5
0x8fe PUSH4 0xffffffff
0x903 AND
0x904 PUSH4 0xffffffff
0x909 AND
0x90a DUP2
0x90b MSTORE
0x90c PUSH1 0x20
0x90e ADD
0x90f DUP4
0x910 PUSH4 0xffffffff
0x915 AND
0x916 PUSH4 0xffffffff
0x91b AND
0x91c DUP2
0x91d MSTORE
0x91e PUSH1 0x20
0x920 ADD
0x921 DUP3
0x922 PUSH4 0xffffffff
0x927 AND
0x928 PUSH4 0xffffffff
0x92d AND
0x92e DUP2
0x92f MSTORE
0x930 PUSH1 0x20
0x932 ADD
0x933 SWAP4
0x934 POP
0x935 POP
0x936 POP
0x937 POP
0x938 PUSH1 0x0
0x93a PUSH1 0x40
0x93c MLOAD
0x93d DUP1
0x93e DUP4
0x93f SUB
0x940 DUP2
0x941 DUP6
0x942 DUP9
0x943 DUP1
0x944 EXTCODESIZE
0x945 ISZERO
0x946 DUP1
0x947 ISZERO
0x948 PUSH2 0x950
0x94b JUMPI
---
0x889: JUMPDEST 
0x88a: V554 = 0x2
0x88c: V555 = 0x0
0x88f: V556 = S[0x2]
0x891: V557 = 0x100
0x894: V558 = EXP 0x100 0x0
0x896: V559 = DIV V556 0x1
0x897: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ac: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x8ad: V562 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c2: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0x8c3: V564 = 0x6040e918
0x8c8: V565 = 0x5
0x8ca: V566 = S[0x5]
0x8ce: V567 = 0x40
0x8d0: V568 = M[0x40]
0x8d2: V569 = 0xffffffff
0x8d7: V570 = AND 0xffffffff 0x6040e918
0x8d8: V571 = 0x100000000000000000000000000000000000000000000000000000000
0x8f6: V572 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6040e918
0x8f8: M[V568] = 0x6040e91800000000000000000000000000000000000000000000000000000000
0x8f9: V573 = 0x4
0x8fb: V574 = ADD 0x4 V568
0x8fe: V575 = 0xffffffff
0x903: V576 = AND 0xffffffff S2
0x904: V577 = 0xffffffff
0x909: V578 = AND 0xffffffff V576
0x90b: M[V574] = V578
0x90c: V579 = 0x20
0x90e: V580 = ADD 0x20 V574
0x910: V581 = 0xffffffff
0x915: V582 = AND 0xffffffff S1
0x916: V583 = 0xffffffff
0x91b: V584 = AND 0xffffffff V582
0x91d: M[V580] = V584
0x91e: V585 = 0x20
0x920: V586 = ADD 0x20 V580
0x922: V587 = 0xffffffff
0x927: V588 = AND 0xffffffff S0
0x928: V589 = 0xffffffff
0x92d: V590 = AND 0xffffffff V588
0x92f: M[V586] = V590
0x930: V591 = 0x20
0x932: V592 = ADD 0x20 V586
0x938: V593 = 0x0
0x93a: V594 = 0x40
0x93c: V595 = M[0x40]
0x93f: V596 = SUB V592 V595
0x944: V597 = EXTCODESIZE V563
0x945: V598 = ISZERO V597
0x947: V599 = ISZERO V598
0x948: V600 = 0x950
0x94b: JUMPI 0x950 V599
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V563, 0x6040e918, V566, V592, 0x0, V595, V596, V595, V566, V563, V598]
Exit stack: [V11, S4, S3, S2, S1, S0, V563, 0x6040e918, V566, V592, 0x0, V595, V596, V595, V566, V563, V598]

================================

Block 0x94c
[0x94c:0x94f]
---
Predecessors: [0x889]
Successors: []
---
0x94c PUSH1 0x0
0x94e DUP1
0x94f REVERT
---
0x94c: V601 = 0x0
0x94f: REVERT 0x0 0x0
---
Entry stack: [V11, S15, S14, S13, S12, S11, V563, 0x6040e918, V566, V592, 0x0, V595, V596, V595, V566, V563, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, S14, S13, S12, S11, V563, 0x6040e918, V566, V592, 0x0, V595, V596, V595, V566, V563, V598]

================================

Block 0x950
[0x950:0x95a]
---
Predecessors: [0x889]
Successors: [0x95b, 0x964]
---
0x950 JUMPDEST
0x951 POP
0x952 GAS
0x953 CALL
0x954 ISZERO
0x955 DUP1
0x956 ISZERO
0x957 PUSH2 0x964
0x95a JUMPI
---
0x950: JUMPDEST 
0x952: V602 = GAS
0x953: V603 = CALL V602 V563 V566 V595 V596 V595 0x0
0x954: V604 = ISZERO V603
0x956: V605 = ISZERO V604
0x957: V606 = 0x964
0x95a: JUMPI 0x964 V605
---
Entry stack: [V11, S15, S14, S13, S12, S11, V563, 0x6040e918, V566, V592, 0x0, V595, V596, V595, V566, V563, V598]
Stack pops: 7
Stack additions: [V604]
Exit stack: [V11, S15, S14, S13, S12, S11, V563, 0x6040e918, V566, V592, V604]

================================

Block 0x95b
[0x95b:0x963]
---
Predecessors: [0x950]
Successors: []
---
0x95b RETURNDATASIZE
0x95c PUSH1 0x0
0x95e DUP1
0x95f RETURNDATACOPY
0x960 RETURNDATASIZE
0x961 PUSH1 0x0
0x963 REVERT
---
0x95b: V607 = RETURNDATASIZE
0x95c: V608 = 0x0
0x95f: RETURNDATACOPY 0x0 0x0 V607
0x960: V609 = RETURNDATASIZE
0x961: V610 = 0x0
0x963: REVERT 0x0 V609
---
Entry stack: [V11, S9, S8, S7, S6, S5, V563, 0x6040e918, V566, V592, V604]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, V563, 0x6040e918, V566, V592, V604]

================================

Block 0x964
[0x964:0x96d]
---
Predecessors: [0x950]
Successors: [0x2d9]
---
0x964 JUMPDEST
0x965 POP
0x966 POP
0x967 POP
0x968 POP
0x969 POP
0x96a POP
0x96b POP
0x96c POP
0x96d JUMP
---
0x964: JUMPDEST 
0x96d: JUMP S8
---
Entry stack: [V11, S9, S8, S7, S6, S5, V563, 0x6040e918, V566, V592, V604]
Stack pops: 9
Stack additions: []
Exit stack: [V11, S9]

================================

Block 0x96e
[0x96e:0xa08]
---
Predecessors: [0x2e7]
Successors: [0xa09, 0xa0d]
---
0x96e JUMPDEST
0x96f PUSH1 0x0
0x971 DUP1
0x972 PUSH1 0x0
0x974 PUSH1 0x4
0x976 PUSH1 0x0
0x978 SWAP1
0x979 SLOAD
0x97a SWAP1
0x97b PUSH2 0x100
0x97e EXP
0x97f SWAP1
0x980 DIV
0x981 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x996 AND
0x997 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ac AND
0x9ad PUSH4 0x4e4fe306
0x9b2 DUP6
0x9b3 PUSH1 0x0
0x9b5 PUSH1 0x40
0x9b7 MLOAD
0x9b8 DUP4
0x9b9 PUSH4 0xffffffff
0x9be AND
0x9bf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9dd MUL
0x9de DUP2
0x9df MSTORE
0x9e0 PUSH1 0x4
0x9e2 ADD
0x9e3 DUP1
0x9e4 DUP4
0x9e5 DUP2
0x9e6 MSTORE
0x9e7 PUSH1 0x20
0x9e9 ADD
0x9ea DUP3
0x9eb DUP2
0x9ec MSTORE
0x9ed PUSH1 0x20
0x9ef ADD
0x9f0 SWAP3
0x9f1 POP
0x9f2 POP
0x9f3 POP
0x9f4 PUSH1 0x20
0x9f6 PUSH1 0x40
0x9f8 MLOAD
0x9f9 DUP1
0x9fa DUP4
0x9fb SUB
0x9fc DUP2
0x9fd PUSH1 0x0
0x9ff DUP8
0xa00 DUP1
0xa01 EXTCODESIZE
0xa02 ISZERO
0xa03 DUP1
0xa04 ISZERO
0xa05 PUSH2 0xa0d
0xa08 JUMPI
---
0x96e: JUMPDEST 
0x96f: V611 = 0x0
0x972: V612 = 0x0
0x974: V613 = 0x4
0x976: V614 = 0x0
0x979: V615 = S[0x4]
0x97b: V616 = 0x100
0x97e: V617 = EXP 0x100 0x0
0x980: V618 = DIV V615 0x1
0x981: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0x996: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0x997: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ac: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x9ad: V623 = 0x4e4fe306
0x9b3: V624 = 0x0
0x9b5: V625 = 0x40
0x9b7: V626 = M[0x40]
0x9b9: V627 = 0xffffffff
0x9be: V628 = AND 0xffffffff 0x4e4fe306
0x9bf: V629 = 0x100000000000000000000000000000000000000000000000000000000
0x9dd: V630 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4e4fe306
0x9df: M[V626] = 0x4e4fe30600000000000000000000000000000000000000000000000000000000
0x9e0: V631 = 0x4
0x9e2: V632 = ADD 0x4 V626
0x9e6: M[V632] = V200
0x9e7: V633 = 0x20
0x9e9: V634 = ADD 0x20 V632
0x9ec: M[V634] = 0x0
0x9ed: V635 = 0x20
0x9ef: V636 = ADD 0x20 V634
0x9f4: V637 = 0x20
0x9f6: V638 = 0x40
0x9f8: V639 = M[0x40]
0x9fb: V640 = SUB V636 V639
0x9fd: V641 = 0x0
0xa01: V642 = EXTCODESIZE V622
0xa02: V643 = ISZERO V642
0xa04: V644 = ISZERO V643
0xa05: V645 = 0xa0d
0xa08: JUMPI 0xa0d V644
---
Entry stack: [V11, 0x306, V200]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, V622, 0x4e4fe306, V636, 0x20, V639, V640, V639, 0x0, V622, V643]
Exit stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V622, 0x4e4fe306, V636, 0x20, V639, V640, V639, 0x0, V622, V643]

================================

Block 0xa09
[0xa09:0xa0c]
---
Predecessors: [0x96e]
Successors: []
---
0xa09 PUSH1 0x0
0xa0b DUP1
0xa0c REVERT
---
0xa09: V646 = 0x0
0xa0c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V622, 0x4e4fe306, V636, 0x20, V639, V640, V639, 0x0, V622, V643]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V622, 0x4e4fe306, V636, 0x20, V639, V640, V639, 0x0, V622, V643]

================================

Block 0xa0d
[0xa0d:0xa17]
---
Predecessors: [0x96e]
Successors: [0xa18, 0xa21]
---
0xa0d JUMPDEST
0xa0e POP
0xa0f GAS
0xa10 CALL
0xa11 ISZERO
0xa12 DUP1
0xa13 ISZERO
0xa14 PUSH2 0xa21
0xa17 JUMPI
---
0xa0d: JUMPDEST 
0xa0f: V647 = GAS
0xa10: V648 = CALL V647 V622 0x0 V639 V640 V639 0x20
0xa11: V649 = ISZERO V648
0xa13: V650 = ISZERO V649
0xa14: V651 = 0xa21
0xa17: JUMPI 0xa21 V650
---
Entry stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V622, 0x4e4fe306, V636, 0x20, V639, V640, V639, 0x0, V622, V643]
Stack pops: 7
Stack additions: [V649]
Exit stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V622, 0x4e4fe306, V636, V649]

================================

Block 0xa18
[0xa18:0xa20]
---
Predecessors: [0xa0d]
Successors: []
---
0xa18 RETURNDATASIZE
0xa19 PUSH1 0x0
0xa1b DUP1
0xa1c RETURNDATACOPY
0xa1d RETURNDATASIZE
0xa1e PUSH1 0x0
0xa20 REVERT
---
0xa18: V652 = RETURNDATASIZE
0xa19: V653 = 0x0
0xa1c: RETURNDATACOPY 0x0 0x0 V652
0xa1d: V654 = RETURNDATASIZE
0xa1e: V655 = 0x0
0xa20: REVERT 0x0 V654
---
Entry stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V622, 0x4e4fe306, V636, V649]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V622, 0x4e4fe306, V636, V649]

================================

Block 0xa21
[0xa21:0xa32]
---
Predecessors: [0xa0d]
Successors: [0xa33, 0xa37]
---
0xa21 JUMPDEST
0xa22 POP
0xa23 POP
0xa24 POP
0xa25 POP
0xa26 PUSH1 0x40
0xa28 MLOAD
0xa29 RETURNDATASIZE
0xa2a PUSH1 0x20
0xa2c DUP2
0xa2d LT
0xa2e ISZERO
0xa2f PUSH2 0xa37
0xa32 JUMPI
---
0xa21: JUMPDEST 
0xa26: V656 = 0x40
0xa28: V657 = M[0x40]
0xa29: V658 = RETURNDATASIZE
0xa2a: V659 = 0x20
0xa2d: V660 = LT V658 0x20
0xa2e: V661 = ISZERO V660
0xa2f: V662 = 0xa37
0xa32: JUMPI 0xa37 V661
---
Entry stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V622, 0x4e4fe306, V636, V649]
Stack pops: 4
Stack additions: [V657, V658]
Exit stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V657, V658]

================================

Block 0xa33
[0xa33:0xa36]
---
Predecessors: [0xa21]
Successors: []
---
0xa33 PUSH1 0x0
0xa35 DUP1
0xa36 REVERT
---
0xa33: V663 = 0x0
0xa36: REVERT 0x0 0x0
---
Entry stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V657, V658]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V657, V658]

================================

Block 0xa37
[0xa37:0xa5f]
---
Predecessors: [0xa21]
Successors: [0xa60, 0xa61]
---
0xa37 JUMPDEST
0xa38 DUP2
0xa39 ADD
0xa3a SWAP1
0xa3b DUP1
0xa3c DUP1
0xa3d MLOAD
0xa3e SWAP1
0xa3f PUSH1 0x20
0xa41 ADD
0xa42 SWAP1
0xa43 SWAP3
0xa44 SWAP2
0xa45 SWAP1
0xa46 POP
0xa47 POP
0xa48 POP
0xa49 SWAP2
0xa4a POP
0xa4b PUSH1 0x6
0xa4d PUSH1 0xff
0xa4f PUSH1 0xf8
0xa51 DUP5
0xa52 SWAP1
0xa53 PUSH1 0x2
0xa55 EXP
0xa56 SWAP1
0xa57 DIV
0xa58 AND
0xa59 DUP2
0xa5a ISZERO
0xa5b ISZERO
0xa5c PUSH2 0xa61
0xa5f JUMPI
---
0xa37: JUMPDEST 
0xa39: V664 = ADD V657 V658
0xa3d: V665 = M[V657]
0xa3f: V666 = 0x20
0xa41: V667 = ADD 0x20 V657
0xa4b: V668 = 0x6
0xa4d: V669 = 0xff
0xa4f: V670 = 0xf8
0xa53: V671 = 0x2
0xa55: V672 = EXP 0x2 0xf8
0xa57: V673 = DIV V665 0x100000000000000000000000000000000000000000000000000000000000000
0xa58: V674 = AND V673 0xff
0xa5a: V675 = ISZERO 0x6
0xa5b: V676 = ISZERO 0x0
0xa5c: V677 = 0xa61
0xa5f: JUMPI 0xa61 0x1
---
Entry stack: [V11, 0x306, V200, 0x0, 0x0, 0x0, V657, V658]
Stack pops: 4
Stack additions: [V665, S2, 0x6, V674]
Exit stack: [V11, 0x306, V200, 0x0, V665, 0x0, 0x6, V674]

================================

Block 0xa60
[0xa60:0xa60]
---
Predecessors: [0xa37]
Successors: []
---
0xa60 INVALID
---
0xa60: INVALID 
---
Entry stack: [V11, 0x306, V200, 0x0, V665, 0x0, 0x6, V674]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x306, V200, 0x0, V665, 0x0, 0x6, V674]

================================

Block 0xa61
[0xa61:0xa6d]
---
Predecessors: [0xa37]
Successors: [0x306]
---
0xa61 JUMPDEST
0xa62 DIV
0xa63 SWAP1
0xa64 POP
0xa65 DUP1
0xa66 SWAP3
0xa67 POP
0xa68 POP
0xa69 POP
0xa6a SWAP2
0xa6b SWAP1
0xa6c POP
0xa6d JUMP
---
0xa61: JUMPDEST 
0xa62: V678 = DIV V674 0x6
0xa6d: JUMP 0x306
---
Entry stack: [V11, 0x306, V200, 0x0, V665, 0x0, 0x6, V674]
Stack pops: 7
Stack additions: [V678]
Exit stack: [V11, V678]

================================

Block 0xa6e
[0xa6e:0xa7a]
---
Predecessors: [0x328]
Successors: [0x1098]
---
0xa6e JUMPDEST
0xa6f PUSH1 0x0
0xa71 DUP1
0xa72 PUSH1 0x0
0xa74 PUSH2 0xa7b
0xa77 PUSH2 0x1098
0xa7a JUMP
---
0xa6e: JUMPDEST 
0xa6f: V679 = 0x0
0xa72: V680 = 0x0
0xa74: V681 = 0xa7b
0xa77: V682 = 0x1098
0xa7a: JUMP 0x1098
---
Entry stack: [V11, 0x347, V220]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0xa7b]
Exit stack: [V11, 0x347, V220, 0x0, 0x0, 0x0, 0xa7b]

================================

Block 0xa7b
[0xa7b:0xa81]
---
Predecessors: [0x1098]
Successors: [0xa82, 0xa86]
---
0xa7b JUMPDEST
0xa7c ISZERO
0xa7d ISZERO
0xa7e PUSH2 0xa86
0xa81 JUMPI
---
0xa7b: JUMPDEST 
0xa7c: V683 = ISZERO V1041
0xa7d: V684 = ISZERO V683
0xa7e: V685 = 0xa86
0xa81: JUMPI 0xa86 V684
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0xa82
[0xa82:0xa85]
---
Predecessors: [0xa7b]
Successors: []
---
0xa82 PUSH1 0x0
0xa84 DUP1
0xa85 REVERT
---
0xa82: V686 = 0x0
0xa85: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0xa86
[0xa86:0xb07]
---
Predecessors: [0xa7b]
Successors: [0xb08, 0xb0c]
---
0xa86 JUMPDEST
0xa87 PUSH1 0x4
0xa89 PUSH1 0x0
0xa8b SWAP1
0xa8c SLOAD
0xa8d SWAP1
0xa8e PUSH2 0x100
0xa91 EXP
0xa92 SWAP1
0xa93 DIV
0xa94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa9 AND
0xaaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xabf AND
0xac0 PUSH4 0xcaa0f92a
0xac5 PUSH1 0x40
0xac7 MLOAD
0xac8 DUP2
0xac9 PUSH4 0xffffffff
0xace AND
0xacf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xaed MUL
0xaee DUP2
0xaef MSTORE
0xaf0 PUSH1 0x4
0xaf2 ADD
0xaf3 PUSH1 0x20
0xaf5 PUSH1 0x40
0xaf7 MLOAD
0xaf8 DUP1
0xaf9 DUP4
0xafa SUB
0xafb DUP2
0xafc PUSH1 0x0
0xafe DUP8
0xaff DUP1
0xb00 EXTCODESIZE
0xb01 ISZERO
0xb02 DUP1
0xb03 ISZERO
0xb04 PUSH2 0xb0c
0xb07 JUMPI
---
0xa86: JUMPDEST 
0xa87: V687 = 0x4
0xa89: V688 = 0x0
0xa8c: V689 = S[0x4]
0xa8e: V690 = 0x100
0xa91: V691 = EXP 0x100 0x0
0xa93: V692 = DIV V689 0x1
0xa94: V693 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa9: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0xaaa: V695 = 0xffffffffffffffffffffffffffffffffffffffff
0xabf: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V694
0xac0: V697 = 0xcaa0f92a
0xac5: V698 = 0x40
0xac7: V699 = M[0x40]
0xac9: V700 = 0xffffffff
0xace: V701 = AND 0xffffffff 0xcaa0f92a
0xacf: V702 = 0x100000000000000000000000000000000000000000000000000000000
0xaed: V703 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xcaa0f92a
0xaef: M[V699] = 0xcaa0f92a00000000000000000000000000000000000000000000000000000000
0xaf0: V704 = 0x4
0xaf2: V705 = ADD 0x4 V699
0xaf3: V706 = 0x20
0xaf5: V707 = 0x40
0xaf7: V708 = M[0x40]
0xafa: V709 = SUB V705 V708
0xafc: V710 = 0x0
0xb00: V711 = EXTCODESIZE V696
0xb01: V712 = ISZERO V711
0xb03: V713 = ISZERO V712
0xb04: V714 = 0xb0c
0xb07: JUMPI 0xb0c V713
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V696, 0xcaa0f92a, V705, 0x20, V708, V709, V708, 0x0, V696, V712]
Exit stack: [V11, S4, S3, S2, S1, S0, V696, 0xcaa0f92a, V705, 0x20, V708, V709, V708, 0x0, V696, V712]

================================

Block 0xb08
[0xb08:0xb0b]
---
Predecessors: [0xa86]
Successors: []
---
0xb08 PUSH1 0x0
0xb0a DUP1
0xb0b REVERT
---
0xb08: V715 = 0x0
0xb0b: REVERT 0x0 0x0
---
Entry stack: [V11, S14, S13, S12, S11, S10, V696, 0xcaa0f92a, V705, 0x20, V708, V709, V708, 0x0, V696, V712]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, V696, 0xcaa0f92a, V705, 0x20, V708, V709, V708, 0x0, V696, V712]

================================

Block 0xb0c
[0xb0c:0xb16]
---
Predecessors: [0xa86]
Successors: [0xb17, 0xb20]
---
0xb0c JUMPDEST
0xb0d POP
0xb0e GAS
0xb0f CALL
0xb10 ISZERO
0xb11 DUP1
0xb12 ISZERO
0xb13 PUSH2 0xb20
0xb16 JUMPI
---
0xb0c: JUMPDEST 
0xb0e: V716 = GAS
0xb0f: V717 = CALL V716 V696 0x0 V708 V709 V708 0x20
0xb10: V718 = ISZERO V717
0xb12: V719 = ISZERO V718
0xb13: V720 = 0xb20
0xb16: JUMPI 0xb20 V719
---
Entry stack: [V11, S14, S13, S12, S11, S10, V696, 0xcaa0f92a, V705, 0x20, V708, V709, V708, 0x0, V696, V712]
Stack pops: 7
Stack additions: [V718]
Exit stack: [V11, S14, S13, S12, S11, S10, V696, 0xcaa0f92a, V705, V718]

================================

Block 0xb17
[0xb17:0xb1f]
---
Predecessors: [0xb0c]
Successors: []
---
0xb17 RETURNDATASIZE
0xb18 PUSH1 0x0
0xb1a DUP1
0xb1b RETURNDATACOPY
0xb1c RETURNDATASIZE
0xb1d PUSH1 0x0
0xb1f REVERT
---
0xb17: V721 = RETURNDATASIZE
0xb18: V722 = 0x0
0xb1b: RETURNDATACOPY 0x0 0x0 V721
0xb1c: V723 = RETURNDATASIZE
0xb1d: V724 = 0x0
0xb1f: REVERT 0x0 V723
---
Entry stack: [V11, S8, S7, S6, S5, S4, V696, 0xcaa0f92a, V705, V718]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, V696, 0xcaa0f92a, V705, V718]

================================

Block 0xb20
[0xb20:0xb31]
---
Predecessors: [0xb0c]
Successors: [0xb32, 0xb36]
---
0xb20 JUMPDEST
0xb21 POP
0xb22 POP
0xb23 POP
0xb24 POP
0xb25 PUSH1 0x40
0xb27 MLOAD
0xb28 RETURNDATASIZE
0xb29 PUSH1 0x20
0xb2b DUP2
0xb2c LT
0xb2d ISZERO
0xb2e PUSH2 0xb36
0xb31 JUMPI
---
0xb20: JUMPDEST 
0xb25: V725 = 0x40
0xb27: V726 = M[0x40]
0xb28: V727 = RETURNDATASIZE
0xb29: V728 = 0x20
0xb2c: V729 = LT V727 0x20
0xb2d: V730 = ISZERO V729
0xb2e: V731 = 0xb36
0xb31: JUMPI 0xb36 V730
---
Entry stack: [V11, S8, S7, S6, S5, S4, V696, 0xcaa0f92a, V705, V718]
Stack pops: 4
Stack additions: [V726, V727]
Exit stack: [V11, S8, S7, S6, S5, S4, V726, V727]

================================

Block 0xb32
[0xb32:0xb35]
---
Predecessors: [0xb20]
Successors: []
---
0xb32 PUSH1 0x0
0xb34 DUP1
0xb35 REVERT
---
0xb32: V732 = 0x0
0xb35: REVERT 0x0 0x0
---
Entry stack: [V11, S6, S5, S4, S3, S2, V726, V727]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2, V726, V727]

================================

Block 0xb36
[0xb36:0xbca]
---
Predecessors: [0xb20]
Successors: [0xbcb, 0xbcf]
---
0xb36 JUMPDEST
0xb37 DUP2
0xb38 ADD
0xb39 SWAP1
0xb3a DUP1
0xb3b DUP1
0xb3c MLOAD
0xb3d SWAP1
0xb3e PUSH1 0x20
0xb40 ADD
0xb41 SWAP1
0xb42 SWAP3
0xb43 SWAP2
0xb44 SWAP1
0xb45 POP
0xb46 POP
0xb47 POP
0xb48 SWAP3
0xb49 POP
0xb4a PUSH1 0x2
0xb4c PUSH1 0x0
0xb4e SWAP1
0xb4f SLOAD
0xb50 SWAP1
0xb51 PUSH2 0x100
0xb54 EXP
0xb55 SWAP1
0xb56 DIV
0xb57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6c AND
0xb6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb82 AND
0xb83 PUSH4 0xd26920cf
0xb88 PUSH1 0x40
0xb8a MLOAD
0xb8b DUP2
0xb8c PUSH4 0xffffffff
0xb91 AND
0xb92 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbb0 MUL
0xbb1 DUP2
0xbb2 MSTORE
0xbb3 PUSH1 0x4
0xbb5 ADD
0xbb6 PUSH1 0x0
0xbb8 PUSH1 0x40
0xbba MLOAD
0xbbb DUP1
0xbbc DUP4
0xbbd SUB
0xbbe DUP2
0xbbf PUSH1 0x0
0xbc1 DUP8
0xbc2 DUP1
0xbc3 EXTCODESIZE
0xbc4 ISZERO
0xbc5 DUP1
0xbc6 ISZERO
0xbc7 PUSH2 0xbcf
0xbca JUMPI
---
0xb36: JUMPDEST 
0xb38: V733 = ADD V726 V727
0xb3c: V734 = M[V726]
0xb3e: V735 = 0x20
0xb40: V736 = ADD 0x20 V726
0xb4a: V737 = 0x2
0xb4c: V738 = 0x0
0xb4f: V739 = S[0x2]
0xb51: V740 = 0x100
0xb54: V741 = EXP 0x100 0x0
0xb56: V742 = DIV V739 0x1
0xb57: V743 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6c: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V742
0xb6d: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xb82: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V744
0xb83: V747 = 0xd26920cf
0xb88: V748 = 0x40
0xb8a: V749 = M[0x40]
0xb8c: V750 = 0xffffffff
0xb91: V751 = AND 0xffffffff 0xd26920cf
0xb92: V752 = 0x100000000000000000000000000000000000000000000000000000000
0xbb0: V753 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd26920cf
0xbb2: M[V749] = 0xd26920cf00000000000000000000000000000000000000000000000000000000
0xbb3: V754 = 0x4
0xbb5: V755 = ADD 0x4 V749
0xbb6: V756 = 0x0
0xbb8: V757 = 0x40
0xbba: V758 = M[0x40]
0xbbd: V759 = SUB V755 V758
0xbbf: V760 = 0x0
0xbc3: V761 = EXTCODESIZE V746
0xbc4: V762 = ISZERO V761
0xbc6: V763 = ISZERO V762
0xbc7: V764 = 0xbcf
0xbca: JUMPI 0xbcf V763
---
Entry stack: [V11, S6, S5, S4, S3, S2, V726, V727]
Stack pops: 5
Stack additions: [V734, S3, S2, V746, 0xd26920cf, V755, 0x0, V758, V759, V758, 0x0, V746, V762]
Exit stack: [V11, S6, S5, V734, S3, S2, V746, 0xd26920cf, V755, 0x0, V758, V759, V758, 0x0, V746, V762]

================================

Block 0xbcb
[0xbcb:0xbce]
---
Predecessors: [0xb36]
Successors: []
---
0xbcb PUSH1 0x0
0xbcd DUP1
0xbce REVERT
---
0xbcb: V765 = 0x0
0xbce: REVERT 0x0 0x0
---
Entry stack: [V11, S14, S13, V734, S11, S10, V746, 0xd26920cf, V755, 0x0, V758, V759, V758, 0x0, V746, V762]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, V734, S11, S10, V746, 0xd26920cf, V755, 0x0, V758, V759, V758, 0x0, V746, V762]

================================

Block 0xbcf
[0xbcf:0xbd9]
---
Predecessors: [0xb36]
Successors: [0xbda, 0xbe3]
---
0xbcf JUMPDEST
0xbd0 POP
0xbd1 GAS
0xbd2 CALL
0xbd3 ISZERO
0xbd4 DUP1
0xbd5 ISZERO
0xbd6 PUSH2 0xbe3
0xbd9 JUMPI
---
0xbcf: JUMPDEST 
0xbd1: V766 = GAS
0xbd2: V767 = CALL V766 V746 0x0 V758 V759 V758 0x0
0xbd3: V768 = ISZERO V767
0xbd5: V769 = ISZERO V768
0xbd6: V770 = 0xbe3
0xbd9: JUMPI 0xbe3 V769
---
Entry stack: [V11, S14, S13, V734, S11, S10, V746, 0xd26920cf, V755, 0x0, V758, V759, V758, 0x0, V746, V762]
Stack pops: 7
Stack additions: [V768]
Exit stack: [V11, S14, S13, V734, S11, S10, V746, 0xd26920cf, V755, V768]

================================

Block 0xbda
[0xbda:0xbe2]
---
Predecessors: [0xbcf]
Successors: []
---
0xbda RETURNDATASIZE
0xbdb PUSH1 0x0
0xbdd DUP1
0xbde RETURNDATACOPY
0xbdf RETURNDATASIZE
0xbe0 PUSH1 0x0
0xbe2 REVERT
---
0xbda: V771 = RETURNDATASIZE
0xbdb: V772 = 0x0
0xbde: RETURNDATACOPY 0x0 0x0 V771
0xbdf: V773 = RETURNDATASIZE
0xbe0: V774 = 0x0
0xbe2: REVERT 0x0 V773
---
Entry stack: [V11, S8, S7, V734, S5, S4, V746, 0xd26920cf, V755, V768]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, V734, S5, S4, V746, 0xd26920cf, V755, V768]

================================

Block 0xbe3
[0xbe3:0xbef]
---
Predecessors: [0xbcf]
Successors: [0x782]
---
0xbe3 JUMPDEST
0xbe4 POP
0xbe5 POP
0xbe6 POP
0xbe7 POP
0xbe8 PUSH2 0xbf0
0xbeb DUP4
0xbec PUSH2 0x782
0xbef JUMP
---
0xbe3: JUMPDEST 
0xbe8: V775 = 0xbf0
0xbec: V776 = 0x782
0xbef: JUMP 0x782
---
Entry stack: [V11, S8, S7, V734, S5, S4, V746, 0xd26920cf, V755, V768]
Stack pops: 7
Stack additions: [S6, S5, S4, 0xbf0, S6]
Exit stack: [V11, S8, S7, V734, S5, S4, 0xbf0, V734]

================================

Block 0xbf0
[0xbf0:0xbfc]
---
Predecessors: [0x84b]
Successors: [0xbfd, 0xc01]
---
0xbf0 JUMPDEST
0xbf1 SWAP2
0xbf2 POP
0xbf3 DUP4
0xbf4 DUP3
0xbf5 LT
0xbf6 ISZERO
0xbf7 ISZERO
0xbf8 ISZERO
0xbf9 PUSH2 0xc01
0xbfc JUMPI
---
0xbf0: JUMPDEST 
0xbf5: V777 = LT V547 V220
0xbf6: V778 = ISZERO V777
0xbf7: V779 = ISZERO V778
0xbf8: V780 = ISZERO V779
0xbf9: V781 = 0xc01
0xbfc: JUMPI 0xc01 V780
---
Entry stack: [V11, 0x347, V220, V734, 0x0, S1, V547]
Stack pops: 5
Stack additions: [S4, S3, S0, S1]
Exit stack: [V11, 0x347, V220, V734, V547, S1]

================================

Block 0xbfd
[0xbfd:0xc00]
---
Predecessors: [0xbf0]
Successors: []
---
0xbfd PUSH1 0x0
0xbff DUP1
0xc00 REVERT
---
0xbfd: V782 = 0x0
0xc00: REVERT 0x0 0x0
---
Entry stack: [V11, 0x347, V220, V734, V547, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x347, V220, V734, V547, S0]

================================

Block 0xc01
[0xc01:0xc8d]
---
Predecessors: [0xbf0]
Successors: [0xc8e, 0xc92]
---
0xc01 JUMPDEST
0xc02 PUSH1 0x4
0xc04 PUSH1 0x0
0xc06 SWAP1
0xc07 SLOAD
0xc08 SWAP1
0xc09 PUSH2 0x100
0xc0c EXP
0xc0d SWAP1
0xc0e DIV
0xc0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc24 AND
0xc25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3a AND
0xc3b PUSH4 0x6352211e
0xc40 DUP5
0xc41 PUSH1 0x40
0xc43 MLOAD
0xc44 DUP3
0xc45 PUSH4 0xffffffff
0xc4a AND
0xc4b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc69 MUL
0xc6a DUP2
0xc6b MSTORE
0xc6c PUSH1 0x4
0xc6e ADD
0xc6f DUP1
0xc70 DUP3
0xc71 DUP2
0xc72 MSTORE
0xc73 PUSH1 0x20
0xc75 ADD
0xc76 SWAP2
0xc77 POP
0xc78 POP
0xc79 PUSH1 0x20
0xc7b PUSH1 0x40
0xc7d MLOAD
0xc7e DUP1
0xc7f DUP4
0xc80 SUB
0xc81 DUP2
0xc82 PUSH1 0x0
0xc84 DUP8
0xc85 DUP1
0xc86 EXTCODESIZE
0xc87 ISZERO
0xc88 DUP1
0xc89 ISZERO
0xc8a PUSH2 0xc92
0xc8d JUMPI
---
0xc01: JUMPDEST 
0xc02: V783 = 0x4
0xc04: V784 = 0x0
0xc07: V785 = S[0x4]
0xc09: V786 = 0x100
0xc0c: V787 = EXP 0x100 0x0
0xc0e: V788 = DIV V785 0x1
0xc0f: V789 = 0xffffffffffffffffffffffffffffffffffffffff
0xc24: V790 = AND 0xffffffffffffffffffffffffffffffffffffffff V788
0xc25: V791 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3a: V792 = AND 0xffffffffffffffffffffffffffffffffffffffff V790
0xc3b: V793 = 0x6352211e
0xc41: V794 = 0x40
0xc43: V795 = M[0x40]
0xc45: V796 = 0xffffffff
0xc4a: V797 = AND 0xffffffff 0x6352211e
0xc4b: V798 = 0x100000000000000000000000000000000000000000000000000000000
0xc69: V799 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6352211e
0xc6b: M[V795] = 0x6352211e00000000000000000000000000000000000000000000000000000000
0xc6c: V800 = 0x4
0xc6e: V801 = ADD 0x4 V795
0xc72: M[V801] = V734
0xc73: V802 = 0x20
0xc75: V803 = ADD 0x20 V801
0xc79: V804 = 0x20
0xc7b: V805 = 0x40
0xc7d: V806 = M[0x40]
0xc80: V807 = SUB V803 V806
0xc82: V808 = 0x0
0xc86: V809 = EXTCODESIZE V792
0xc87: V810 = ISZERO V809
0xc89: V811 = ISZERO V810
0xc8a: V812 = 0xc92
0xc8d: JUMPI 0xc92 V811
---
Entry stack: [V11, 0x347, V220, V734, V547, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V792, 0x6352211e, V803, 0x20, V806, V807, V806, 0x0, V792, V810]
Exit stack: [V11, 0x347, V220, V734, V547, S0, V792, 0x6352211e, V803, 0x20, V806, V807, V806, 0x0, V792, V810]

================================

Block 0xc8e
[0xc8e:0xc91]
---
Predecessors: [0xc01]
Successors: []
---
0xc8e PUSH1 0x0
0xc90 DUP1
0xc91 REVERT
---
0xc8e: V813 = 0x0
0xc91: REVERT 0x0 0x0
---
Entry stack: [V11, 0x347, V220, V734, V547, S10, V792, 0x6352211e, V803, 0x20, V806, V807, V806, 0x0, V792, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x347, V220, V734, V547, S10, V792, 0x6352211e, V803, 0x20, V806, V807, V806, 0x0, V792, V810]

================================

Block 0xc92
[0xc92:0xc9c]
---
Predecessors: [0xc01]
Successors: [0xc9d, 0xca6]
---
0xc92 JUMPDEST
0xc93 POP
0xc94 GAS
0xc95 CALL
0xc96 ISZERO
0xc97 DUP1
0xc98 ISZERO
0xc99 PUSH2 0xca6
0xc9c JUMPI
---
0xc92: JUMPDEST 
0xc94: V814 = GAS
0xc95: V815 = CALL V814 V792 0x0 V806 V807 V806 0x20
0xc96: V816 = ISZERO V815
0xc98: V817 = ISZERO V816
0xc99: V818 = 0xca6
0xc9c: JUMPI 0xca6 V817
---
Entry stack: [V11, 0x347, V220, V734, V547, S10, V792, 0x6352211e, V803, 0x20, V806, V807, V806, 0x0, V792, V810]
Stack pops: 7
Stack additions: [V816]
Exit stack: [V11, 0x347, V220, V734, V547, S10, V792, 0x6352211e, V803, V816]

================================

Block 0xc9d
[0xc9d:0xca5]
---
Predecessors: [0xc92]
Successors: []
---
0xc9d RETURNDATASIZE
0xc9e PUSH1 0x0
0xca0 DUP1
0xca1 RETURNDATACOPY
0xca2 RETURNDATASIZE
0xca3 PUSH1 0x0
0xca5 REVERT
---
0xc9d: V819 = RETURNDATASIZE
0xc9e: V820 = 0x0
0xca1: RETURNDATACOPY 0x0 0x0 V819
0xca2: V821 = RETURNDATASIZE
0xca3: V822 = 0x0
0xca5: REVERT 0x0 V821
---
Entry stack: [V11, 0x347, V220, V734, V547, S4, V792, 0x6352211e, V803, V816]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x347, V220, V734, V547, S4, V792, 0x6352211e, V803, V816]

================================

Block 0xca6
[0xca6:0xcb7]
---
Predecessors: [0xc92]
Successors: [0xcb8, 0xcbc]
---
0xca6 JUMPDEST
0xca7 POP
0xca8 POP
0xca9 POP
0xcaa POP
0xcab PUSH1 0x40
0xcad MLOAD
0xcae RETURNDATASIZE
0xcaf PUSH1 0x20
0xcb1 DUP2
0xcb2 LT
0xcb3 ISZERO
0xcb4 PUSH2 0xcbc
0xcb7 JUMPI
---
0xca6: JUMPDEST 
0xcab: V823 = 0x40
0xcad: V824 = M[0x40]
0xcae: V825 = RETURNDATASIZE
0xcaf: V826 = 0x20
0xcb2: V827 = LT V825 0x20
0xcb3: V828 = ISZERO V827
0xcb4: V829 = 0xcbc
0xcb7: JUMPI 0xcbc V828
---
Entry stack: [V11, 0x347, V220, V734, V547, S4, V792, 0x6352211e, V803, V816]
Stack pops: 4
Stack additions: [V824, V825]
Exit stack: [V11, 0x347, V220, V734, V547, S4, V824, V825]

================================

Block 0xcb8
[0xcb8:0xcbb]
---
Predecessors: [0xca6]
Successors: []
---
0xcb8 PUSH1 0x0
0xcba DUP1
0xcbb REVERT
---
0xcb8: V830 = 0x0
0xcbb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x347, V220, V734, V547, S2, V824, V825]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x347, V220, V734, V547, S2, V824, V825]

================================

Block 0xcbc
[0xcbc:0xd03]
---
Predecessors: [0xca6]
Successors: [0xd04, 0xd34]
---
0xcbc JUMPDEST
0xcbd DUP2
0xcbe ADD
0xcbf SWAP1
0xcc0 DUP1
0xcc1 DUP1
0xcc2 MLOAD
0xcc3 SWAP1
0xcc4 PUSH1 0x20
0xcc6 ADD
0xcc7 SWAP1
0xcc8 SWAP3
0xcc9 SWAP2
0xcca SWAP1
0xccb POP
0xccc POP
0xccd POP
0xcce SWAP1
0xccf POP
0xcd0 ADDRESS
0xcd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce6 AND
0xce7 DUP2
0xce8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcfd AND
0xcfe EQ
0xcff DUP1
0xd00 PUSH2 0xd34
0xd03 JUMPI
---
0xcbc: JUMPDEST 
0xcbe: V831 = ADD V824 V825
0xcc2: V832 = M[V824]
0xcc4: V833 = 0x20
0xcc6: V834 = ADD 0x20 V824
0xcd0: V835 = ADDRESS
0xcd1: V836 = 0xffffffffffffffffffffffffffffffffffffffff
0xce6: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff V835
0xce8: V838 = 0xffffffffffffffffffffffffffffffffffffffff
0xcfd: V839 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0xcfe: V840 = EQ V839 V837
0xd00: V841 = 0xd34
0xd03: JUMPI 0xd34 V840
---
Entry stack: [V11, 0x347, V220, V734, V547, S2, V824, V825]
Stack pops: 3
Stack additions: [V832, V840]
Exit stack: [V11, 0x347, V220, V734, V547, V832, V840]

================================

Block 0xd04
[0xd04:0xd33]
---
Predecessors: [0xcbc]
Successors: [0xd34]
---
0xd04 POP
0xd05 CALLER
0xd06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1b AND
0xd1c DUP2
0xd1d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd32 AND
0xd33 EQ
---
0xd05: V842 = CALLER
0xd06: V843 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1b: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V842
0xd1d: V845 = 0xffffffffffffffffffffffffffffffffffffffff
0xd32: V846 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0xd33: V847 = EQ V846 V844
---
Entry stack: [V11, 0x347, V220, V734, V547, V832, V840]
Stack pops: 2
Stack additions: [S1, V847]
Exit stack: [V11, 0x347, V220, V734, V547, V832, V847]

================================

Block 0xd34
[0xd34:0xd3a]
---
Predecessors: [0xcbc, 0xd04]
Successors: [0xd3b, 0xd3f]
---
0xd34 JUMPDEST
0xd35 ISZERO
0xd36 ISZERO
0xd37 PUSH2 0xd3f
0xd3a JUMPI
---
0xd34: JUMPDEST 
0xd35: V848 = ISZERO S0
0xd36: V849 = ISZERO V848
0xd37: V850 = 0xd3f
0xd3a: JUMPI 0xd3f V849
---
Entry stack: [V11, 0x347, V220, V734, V547, V832, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x347, V220, V734, V547, V832]

================================

Block 0xd3b
[0xd3b:0xd3e]
---
Predecessors: [0xd34]
Successors: []
---
0xd3b PUSH1 0x0
0xd3d DUP1
0xd3e REVERT
---
0xd3b: V851 = 0x0
0xd3e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x347, V220, V734, S1, V832]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x347, V220, V734, S1, V832]

================================

Block 0xd3f
[0xd3f:0xd44]
---
Predecessors: [0xd34]
Successors: [0x347]
---
0xd3f JUMPDEST
0xd40 POP
0xd41 POP
0xd42 POP
0xd43 POP
0xd44 JUMP
---
0xd3f: JUMPDEST 
0xd44: JUMP 0x347
---
Entry stack: [V11, 0x347, V220, V734, S1, V832]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xd45
[0xd45:0xddf]
---
Predecessors: [0x355]
Successors: [0xde0, 0xde4]
---
0xd45 JUMPDEST
0xd46 PUSH1 0x0
0xd48 DUP1
0xd49 PUSH1 0x0
0xd4b PUSH1 0x4
0xd4d PUSH1 0x0
0xd4f SWAP1
0xd50 SLOAD
0xd51 SWAP1
0xd52 PUSH2 0x100
0xd55 EXP
0xd56 SWAP1
0xd57 DIV
0xd58 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6d AND
0xd6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd83 AND
0xd84 PUSH4 0x4e4fe306
0xd89 DUP6
0xd8a PUSH1 0x0
0xd8c PUSH1 0x40
0xd8e MLOAD
0xd8f DUP4
0xd90 PUSH4 0xffffffff
0xd95 AND
0xd96 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xdb4 MUL
0xdb5 DUP2
0xdb6 MSTORE
0xdb7 PUSH1 0x4
0xdb9 ADD
0xdba DUP1
0xdbb DUP4
0xdbc DUP2
0xdbd MSTORE
0xdbe PUSH1 0x20
0xdc0 ADD
0xdc1 DUP3
0xdc2 DUP2
0xdc3 MSTORE
0xdc4 PUSH1 0x20
0xdc6 ADD
0xdc7 SWAP3
0xdc8 POP
0xdc9 POP
0xdca POP
0xdcb PUSH1 0x20
0xdcd PUSH1 0x40
0xdcf MLOAD
0xdd0 DUP1
0xdd1 DUP4
0xdd2 SUB
0xdd3 DUP2
0xdd4 PUSH1 0x0
0xdd6 DUP8
0xdd7 DUP1
0xdd8 EXTCODESIZE
0xdd9 ISZERO
0xdda DUP1
0xddb ISZERO
0xddc PUSH2 0xde4
0xddf JUMPI
---
0xd45: JUMPDEST 
0xd46: V852 = 0x0
0xd49: V853 = 0x0
0xd4b: V854 = 0x4
0xd4d: V855 = 0x0
0xd50: V856 = S[0x4]
0xd52: V857 = 0x100
0xd55: V858 = EXP 0x100 0x0
0xd57: V859 = DIV V856 0x1
0xd58: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6d: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0xd6e: V862 = 0xffffffffffffffffffffffffffffffffffffffff
0xd83: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0xd84: V864 = 0x4e4fe306
0xd8a: V865 = 0x0
0xd8c: V866 = 0x40
0xd8e: V867 = M[0x40]
0xd90: V868 = 0xffffffff
0xd95: V869 = AND 0xffffffff 0x4e4fe306
0xd96: V870 = 0x100000000000000000000000000000000000000000000000000000000
0xdb4: V871 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4e4fe306
0xdb6: M[V867] = 0x4e4fe30600000000000000000000000000000000000000000000000000000000
0xdb7: V872 = 0x4
0xdb9: V873 = ADD 0x4 V867
0xdbd: M[V873] = V233
0xdbe: V874 = 0x20
0xdc0: V875 = ADD 0x20 V873
0xdc3: M[V875] = 0x0
0xdc4: V876 = 0x20
0xdc6: V877 = ADD 0x20 V875
0xdcb: V878 = 0x20
0xdcd: V879 = 0x40
0xdcf: V880 = M[0x40]
0xdd2: V881 = SUB V877 V880
0xdd4: V882 = 0x0
0xdd8: V883 = EXTCODESIZE V863
0xdd9: V884 = ISZERO V883
0xddb: V885 = ISZERO V884
0xddc: V886 = 0xde4
0xddf: JUMPI 0xde4 V885
---
Entry stack: [V11, 0x374, V233]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, V863, 0x4e4fe306, V877, 0x20, V880, V881, V880, 0x0, V863, V884]
Exit stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V863, 0x4e4fe306, V877, 0x20, V880, V881, V880, 0x0, V863, V884]

================================

Block 0xde0
[0xde0:0xde3]
---
Predecessors: [0xd45]
Successors: []
---
0xde0 PUSH1 0x0
0xde2 DUP1
0xde3 REVERT
---
0xde0: V887 = 0x0
0xde3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V863, 0x4e4fe306, V877, 0x20, V880, V881, V880, 0x0, V863, V884]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V863, 0x4e4fe306, V877, 0x20, V880, V881, V880, 0x0, V863, V884]

================================

Block 0xde4
[0xde4:0xdee]
---
Predecessors: [0xd45]
Successors: [0xdef, 0xdf8]
---
0xde4 JUMPDEST
0xde5 POP
0xde6 GAS
0xde7 CALL
0xde8 ISZERO
0xde9 DUP1
0xdea ISZERO
0xdeb PUSH2 0xdf8
0xdee JUMPI
---
0xde4: JUMPDEST 
0xde6: V888 = GAS
0xde7: V889 = CALL V888 V863 0x0 V880 V881 V880 0x20
0xde8: V890 = ISZERO V889
0xdea: V891 = ISZERO V890
0xdeb: V892 = 0xdf8
0xdee: JUMPI 0xdf8 V891
---
Entry stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V863, 0x4e4fe306, V877, 0x20, V880, V881, V880, 0x0, V863, V884]
Stack pops: 7
Stack additions: [V890]
Exit stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V863, 0x4e4fe306, V877, V890]

================================

Block 0xdef
[0xdef:0xdf7]
---
Predecessors: [0xde4]
Successors: []
---
0xdef RETURNDATASIZE
0xdf0 PUSH1 0x0
0xdf2 DUP1
0xdf3 RETURNDATACOPY
0xdf4 RETURNDATASIZE
0xdf5 PUSH1 0x0
0xdf7 REVERT
---
0xdef: V893 = RETURNDATASIZE
0xdf0: V894 = 0x0
0xdf3: RETURNDATACOPY 0x0 0x0 V893
0xdf4: V895 = RETURNDATASIZE
0xdf5: V896 = 0x0
0xdf7: REVERT 0x0 V895
---
Entry stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V863, 0x4e4fe306, V877, V890]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V863, 0x4e4fe306, V877, V890]

================================

Block 0xdf8
[0xdf8:0xe09]
---
Predecessors: [0xde4]
Successors: [0xe0a, 0xe0e]
---
0xdf8 JUMPDEST
0xdf9 POP
0xdfa POP
0xdfb POP
0xdfc POP
0xdfd PUSH1 0x40
0xdff MLOAD
0xe00 RETURNDATASIZE
0xe01 PUSH1 0x20
0xe03 DUP2
0xe04 LT
0xe05 ISZERO
0xe06 PUSH2 0xe0e
0xe09 JUMPI
---
0xdf8: JUMPDEST 
0xdfd: V897 = 0x40
0xdff: V898 = M[0x40]
0xe00: V899 = RETURNDATASIZE
0xe01: V900 = 0x20
0xe04: V901 = LT V899 0x20
0xe05: V902 = ISZERO V901
0xe06: V903 = 0xe0e
0xe09: JUMPI 0xe0e V902
---
Entry stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V863, 0x4e4fe306, V877, V890]
Stack pops: 4
Stack additions: [V898, V899]
Exit stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V898, V899]

================================

Block 0xe0a
[0xe0a:0xe0d]
---
Predecessors: [0xdf8]
Successors: []
---
0xe0a PUSH1 0x0
0xe0c DUP1
0xe0d REVERT
---
0xe0a: V904 = 0x0
0xe0d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V898, V899]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V898, V899]

================================

Block 0xe0e
[0xe0e:0xe38]
---
Predecessors: [0xdf8]
Successors: [0x374]
---
0xe0e JUMPDEST
0xe0f DUP2
0xe10 ADD
0xe11 SWAP1
0xe12 DUP1
0xe13 DUP1
0xe14 MLOAD
0xe15 SWAP1
0xe16 PUSH1 0x20
0xe18 ADD
0xe19 SWAP1
0xe1a SWAP3
0xe1b SWAP2
0xe1c SWAP1
0xe1d POP
0xe1e POP
0xe1f POP
0xe20 SWAP2
0xe21 POP
0xe22 PUSH1 0xf
0xe24 PUSH1 0xf4
0xe26 DUP4
0xe27 SWAP1
0xe28 PUSH1 0x2
0xe2a EXP
0xe2b SWAP1
0xe2c DIV
0xe2d AND
0xe2e SWAP1
0xe2f POP
0xe30 DUP1
0xe31 SWAP3
0xe32 POP
0xe33 POP
0xe34 POP
0xe35 SWAP2
0xe36 SWAP1
0xe37 POP
0xe38 JUMP
---
0xe0e: JUMPDEST 
0xe10: V905 = ADD V898 V899
0xe14: V906 = M[V898]
0xe16: V907 = 0x20
0xe18: V908 = ADD 0x20 V898
0xe22: V909 = 0xf
0xe24: V910 = 0xf4
0xe28: V911 = 0x2
0xe2a: V912 = EXP 0x2 0xf4
0xe2c: V913 = DIV V906 0x10000000000000000000000000000000000000000000000000000000000000
0xe2d: V914 = AND V913 0xf
0xe38: JUMP 0x374
---
Entry stack: [V11, 0x374, V233, 0x0, 0x0, 0x0, V898, V899]
Stack pops: 7
Stack additions: [V914]
Exit stack: [V11, V914]

================================

Block 0xe39
[0xe39:0xe40]
---
Predecessors: [0x396]
Successors: [0x1098]
---
0xe39 JUMPDEST
0xe3a PUSH2 0xe41
0xe3d PUSH2 0x1098
0xe40 JUMP
---
0xe39: JUMPDEST 
0xe3a: V915 = 0xe41
0xe3d: V916 = 0x1098
0xe40: JUMP 0x1098
---
Entry stack: [V11, 0x39f]
Stack pops: 0
Stack additions: [0xe41]
Exit stack: [V11, 0x39f, 0xe41]

================================

Block 0xe41
[0xe41:0xe47]
---
Predecessors: [0x1098]
Successors: [0xe48, 0xe4c]
---
0xe41 JUMPDEST
0xe42 ISZERO
0xe43 ISZERO
0xe44 PUSH2 0xe4c
0xe47 JUMPI
---
0xe41: JUMPDEST 
0xe42: V917 = ISZERO V1041
0xe43: V918 = ISZERO V917
0xe44: V919 = 0xe4c
0xe47: JUMPI 0xe4c V918
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0xe48
[0xe48:0xe4b]
---
Predecessors: [0xe41]
Successors: []
---
0xe48 PUSH1 0x0
0xe4a DUP1
0xe4b REVERT
---
0xe48: V920 = 0x0
0xe4b: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0xe4c
[0xe4c:0xf47]
---
Predecessors: [0xe41]
Successors: [0x39f, 0x530]
---
0xe4c JUMPDEST
0xe4d PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe6e PUSH1 0x0
0xe70 DUP1
0xe71 SWAP1
0xe72 SLOAD
0xe73 SWAP1
0xe74 PUSH2 0x100
0xe77 EXP
0xe78 SWAP1
0xe79 DIV
0xe7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8f AND
0xe90 PUSH1 0x0
0xe92 PUSH1 0x40
0xe94 MLOAD
0xe95 DUP1
0xe96 DUP4
0xe97 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeac AND
0xead PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec2 AND
0xec3 DUP2
0xec4 MSTORE
0xec5 PUSH1 0x20
0xec7 ADD
0xec8 DUP3
0xec9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xede AND
0xedf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef4 AND
0xef5 DUP2
0xef6 MSTORE
0xef7 PUSH1 0x20
0xef9 ADD
0xefa SWAP3
0xefb POP
0xefc POP
0xefd POP
0xefe PUSH1 0x40
0xf00 MLOAD
0xf01 DUP1
0xf02 SWAP2
0xf03 SUB
0xf04 SWAP1
0xf05 LOG1
0xf06 PUSH1 0x0
0xf08 DUP1
0xf09 PUSH1 0x0
0xf0b PUSH2 0x100
0xf0e EXP
0xf0f DUP2
0xf10 SLOAD
0xf11 DUP2
0xf12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf27 MUL
0xf28 NOT
0xf29 AND
0xf2a SWAP1
0xf2b DUP4
0xf2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf41 AND
0xf42 MUL
0xf43 OR
0xf44 SWAP1
0xf45 SSTORE
0xf46 POP
0xf47 JUMP
---
0xe4c: JUMPDEST 
0xe4d: V921 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe6e: V922 = 0x0
0xe72: V923 = S[0x0]
0xe74: V924 = 0x100
0xe77: V925 = EXP 0x100 0x0
0xe79: V926 = DIV V923 0x1
0xe7a: V927 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8f: V928 = AND 0xffffffffffffffffffffffffffffffffffffffff V926
0xe90: V929 = 0x0
0xe92: V930 = 0x40
0xe94: V931 = M[0x40]
0xe97: V932 = 0xffffffffffffffffffffffffffffffffffffffff
0xeac: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff V928
0xead: V934 = 0xffffffffffffffffffffffffffffffffffffffff
0xec2: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V933
0xec4: M[V931] = V935
0xec5: V936 = 0x20
0xec7: V937 = ADD 0x20 V931
0xec9: V938 = 0xffffffffffffffffffffffffffffffffffffffff
0xede: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xedf: V940 = 0xffffffffffffffffffffffffffffffffffffffff
0xef4: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xef6: M[V937] = 0x0
0xef7: V942 = 0x20
0xef9: V943 = ADD 0x20 V937
0xefe: V944 = 0x40
0xf00: V945 = M[0x40]
0xf03: V946 = SUB V943 V945
0xf05: LOG V945 V946 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xf06: V947 = 0x0
0xf09: V948 = 0x0
0xf0b: V949 = 0x100
0xf0e: V950 = EXP 0x100 0x0
0xf10: V951 = S[0x0]
0xf12: V952 = 0xffffffffffffffffffffffffffffffffffffffff
0xf27: V953 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf28: V954 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf29: V955 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V951
0xf2c: V956 = 0xffffffffffffffffffffffffffffffffffffffff
0xf41: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xf42: V958 = MUL 0x0 0x1
0xf43: V959 = OR 0x0 V955
0xf45: S[0x0] = V959
0xf47: JUMP S0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1]

================================

Block 0xf48
[0xf48:0xf4f]
---
Predecessors: [0x3ad]
Successors: [0x1098]
---
0xf48 JUMPDEST
0xf49 PUSH2 0xf50
0xf4c PUSH2 0x1098
0xf4f JUMP
---
0xf48: JUMPDEST 
0xf49: V960 = 0xf50
0xf4c: V961 = 0x1098
0xf4f: JUMP 0x1098
---
Entry stack: [V11, 0x3cc, V259]
Stack pops: 0
Stack additions: [0xf50]
Exit stack: [V11, 0x3cc, V259, 0xf50]

================================

Block 0xf50
[0xf50:0xf56]
---
Predecessors: [0x1098]
Successors: [0xf57, 0xf5b]
---
0xf50 JUMPDEST
0xf51 ISZERO
0xf52 ISZERO
0xf53 PUSH2 0xf5b
0xf56 JUMPI
---
0xf50: JUMPDEST 
0xf51: V962 = ISZERO V1041
0xf52: V963 = ISZERO V962
0xf53: V964 = 0xf5b
0xf56: JUMPI 0xf5b V963
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0xf57
[0xf57:0xf5a]
---
Predecessors: [0xf50]
Successors: []
---
0xf57 PUSH1 0x0
0xf59 DUP1
0xf5a REVERT
---
0xf57: V965 = 0x0
0xf5a: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0xf5b
[0xf5b:0x104f]
---
Predecessors: [0xf50]
Successors: [0x1050, 0x1054]
---
0xf5b JUMPDEST
0xf5c PUSH1 0x4
0xf5e PUSH1 0x0
0xf60 SWAP1
0xf61 SLOAD
0xf62 SWAP1
0xf63 PUSH2 0x100
0xf66 EXP
0xf67 SWAP1
0xf68 DIV
0xf69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7e AND
0xf7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf94 AND
0xf95 PUSH4 0x23b872dd
0xf9a ADDRESS
0xf9b CALLER
0xf9c DUP5
0xf9d PUSH1 0x40
0xf9f MLOAD
0xfa0 DUP5
0xfa1 PUSH4 0xffffffff
0xfa6 AND
0xfa7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xfc5 MUL
0xfc6 DUP2
0xfc7 MSTORE
0xfc8 PUSH1 0x4
0xfca ADD
0xfcb DUP1
0xfcc DUP5
0xfcd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe2 AND
0xfe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff8 AND
0xff9 DUP2
0xffa MSTORE
0xffb PUSH1 0x20
0xffd ADD
0xffe DUP4
0xfff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1014 AND
0x1015 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102a AND
0x102b DUP2
0x102c MSTORE
0x102d PUSH1 0x20
0x102f ADD
0x1030 DUP3
0x1031 DUP2
0x1032 MSTORE
0x1033 PUSH1 0x20
0x1035 ADD
0x1036 SWAP4
0x1037 POP
0x1038 POP
0x1039 POP
0x103a POP
0x103b PUSH1 0x0
0x103d PUSH1 0x40
0x103f MLOAD
0x1040 DUP1
0x1041 DUP4
0x1042 SUB
0x1043 DUP2
0x1044 PUSH1 0x0
0x1046 DUP8
0x1047 DUP1
0x1048 EXTCODESIZE
0x1049 ISZERO
0x104a DUP1
0x104b ISZERO
0x104c PUSH2 0x1054
0x104f JUMPI
---
0xf5b: JUMPDEST 
0xf5c: V966 = 0x4
0xf5e: V967 = 0x0
0xf61: V968 = S[0x4]
0xf63: V969 = 0x100
0xf66: V970 = EXP 0x100 0x0
0xf68: V971 = DIV V968 0x1
0xf69: V972 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7e: V973 = AND 0xffffffffffffffffffffffffffffffffffffffff V971
0xf7f: V974 = 0xffffffffffffffffffffffffffffffffffffffff
0xf94: V975 = AND 0xffffffffffffffffffffffffffffffffffffffff V973
0xf95: V976 = 0x23b872dd
0xf9a: V977 = ADDRESS
0xf9b: V978 = CALLER
0xf9d: V979 = 0x40
0xf9f: V980 = M[0x40]
0xfa1: V981 = 0xffffffff
0xfa6: V982 = AND 0xffffffff 0x23b872dd
0xfa7: V983 = 0x100000000000000000000000000000000000000000000000000000000
0xfc5: V984 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0xfc7: M[V980] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xfc8: V985 = 0x4
0xfca: V986 = ADD 0x4 V980
0xfcd: V987 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe2: V988 = AND 0xffffffffffffffffffffffffffffffffffffffff V977
0xfe3: V989 = 0xffffffffffffffffffffffffffffffffffffffff
0xff8: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V988
0xffa: M[V986] = V990
0xffb: V991 = 0x20
0xffd: V992 = ADD 0x20 V986
0xfff: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0x1014: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V978
0x1015: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0x102a: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V994
0x102c: M[V992] = V996
0x102d: V997 = 0x20
0x102f: V998 = ADD 0x20 V992
0x1032: M[V998] = S0
0x1033: V999 = 0x20
0x1035: V1000 = ADD 0x20 V998
0x103b: V1001 = 0x0
0x103d: V1002 = 0x40
0x103f: V1003 = M[0x40]
0x1042: V1004 = SUB V1000 V1003
0x1044: V1005 = 0x0
0x1048: V1006 = EXTCODESIZE V975
0x1049: V1007 = ISZERO V1006
0x104b: V1008 = ISZERO V1007
0x104c: V1009 = 0x1054
0x104f: JUMPI 0x1054 V1008
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V975, 0x23b872dd, V1000, 0x0, V1003, V1004, V1003, 0x0, V975, V1007]
Exit stack: [V11, S4, S3, S2, S1, S0, V975, 0x23b872dd, V1000, 0x0, V1003, V1004, V1003, 0x0, V975, V1007]

================================

Block 0x1050
[0x1050:0x1053]
---
Predecessors: [0xf5b]
Successors: []
---
0x1050 PUSH1 0x0
0x1052 DUP1
0x1053 REVERT
---
0x1050: V1010 = 0x0
0x1053: REVERT 0x0 0x0
---
Entry stack: [V11, S14, S13, S12, S11, S10, V975, 0x23b872dd, V1000, 0x0, V1003, V1004, V1003, 0x0, V975, V1007]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, V975, 0x23b872dd, V1000, 0x0, V1003, V1004, V1003, 0x0, V975, V1007]

================================

Block 0x1054
[0x1054:0x105e]
---
Predecessors: [0xf5b]
Successors: [0x105f, 0x1068]
---
0x1054 JUMPDEST
0x1055 POP
0x1056 GAS
0x1057 CALL
0x1058 ISZERO
0x1059 DUP1
0x105a ISZERO
0x105b PUSH2 0x1068
0x105e JUMPI
---
0x1054: JUMPDEST 
0x1056: V1011 = GAS
0x1057: V1012 = CALL V1011 V975 0x0 V1003 V1004 V1003 0x0
0x1058: V1013 = ISZERO V1012
0x105a: V1014 = ISZERO V1013
0x105b: V1015 = 0x1068
0x105e: JUMPI 0x1068 V1014
---
Entry stack: [V11, S14, S13, S12, S11, S10, V975, 0x23b872dd, V1000, 0x0, V1003, V1004, V1003, 0x0, V975, V1007]
Stack pops: 7
Stack additions: [V1013]
Exit stack: [V11, S14, S13, S12, S11, S10, V975, 0x23b872dd, V1000, V1013]

================================

Block 0x105f
[0x105f:0x1067]
---
Predecessors: [0x1054]
Successors: []
---
0x105f RETURNDATASIZE
0x1060 PUSH1 0x0
0x1062 DUP1
0x1063 RETURNDATACOPY
0x1064 RETURNDATASIZE
0x1065 PUSH1 0x0
0x1067 REVERT
---
0x105f: V1016 = RETURNDATASIZE
0x1060: V1017 = 0x0
0x1063: RETURNDATACOPY 0x0 0x0 V1016
0x1064: V1018 = RETURNDATASIZE
0x1065: V1019 = 0x0
0x1067: REVERT 0x0 V1018
---
Entry stack: [V11, S8, S7, S6, S5, S4, V975, 0x23b872dd, V1000, V1013]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, V975, 0x23b872dd, V1000, V1013]

================================

Block 0x1068
[0x1068:0x106e]
---
Predecessors: [0x1054]
Successors: [0x13f, 0x204, 0x3cc, 0x4d6, 0x519]
---
0x1068 JUMPDEST
0x1069 POP
0x106a POP
0x106b POP
0x106c POP
0x106d POP
0x106e JUMP
---
0x1068: JUMPDEST 
0x106e: JUMP S5
---
Entry stack: [V11, S8, S7, S6, S5, S4, V975, 0x23b872dd, V1000, V1013]
Stack pops: 6
Stack additions: []
Exit stack: [V11, S8, S7, S6]

================================

Block 0x106f
[0x106f:0x1097]
---
Predecessors: [0x3da]
Successors: [0x3e3]
---
0x106f JUMPDEST
0x1070 PUSH1 0x0
0x1072 DUP1
0x1073 PUSH1 0x0
0x1075 SWAP1
0x1076 SLOAD
0x1077 SWAP1
0x1078 PUSH2 0x100
0x107b EXP
0x107c SWAP1
0x107d DIV
0x107e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1093 AND
0x1094 SWAP1
0x1095 POP
0x1096 SWAP1
0x1097 JUMP
---
0x106f: JUMPDEST 
0x1070: V1020 = 0x0
0x1073: V1021 = 0x0
0x1076: V1022 = S[0x0]
0x1078: V1023 = 0x100
0x107b: V1024 = EXP 0x100 0x0
0x107d: V1025 = DIV V1022 0x1
0x107e: V1026 = 0xffffffffffffffffffffffffffffffffffffffff
0x1093: V1027 = AND 0xffffffffffffffffffffffffffffffffffffffff V1025
0x1097: JUMP 0x3e3
---
Entry stack: [V11, 0x3e3]
Stack pops: 1
Stack additions: [V1027]
Exit stack: [V11, V1027]

================================

Block 0x1098
[0x1098:0x10ee]
---
Predecessors: [0x431, 0x532, 0x5f6, 0x876, 0xa6e, 0xe39, 0xf48, 0x1115, 0x1132, 0x1151]
Successors: [0x43a, 0x53a, 0x5fe, 0x87e, 0xa7b, 0xe41, 0xf50, 0x111d, 0x113a, 0x1159]
---
0x1098 JUMPDEST
0x1099 PUSH1 0x0
0x109b DUP1
0x109c PUSH1 0x0
0x109e SWAP1
0x109f SLOAD
0x10a0 SWAP1
0x10a1 PUSH2 0x100
0x10a4 EXP
0x10a5 SWAP1
0x10a6 DIV
0x10a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10bc AND
0x10bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d2 AND
0x10d3 CALLER
0x10d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e9 AND
0x10ea EQ
0x10eb SWAP1
0x10ec POP
0x10ed SWAP1
0x10ee JUMP
---
0x1098: JUMPDEST 
0x1099: V1028 = 0x0
0x109c: V1029 = 0x0
0x109f: V1030 = S[0x0]
0x10a1: V1031 = 0x100
0x10a4: V1032 = EXP 0x100 0x0
0x10a6: V1033 = DIV V1030 0x1
0x10a7: V1034 = 0xffffffffffffffffffffffffffffffffffffffff
0x10bc: V1035 = AND 0xffffffffffffffffffffffffffffffffffffffff V1033
0x10bd: V1036 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d2: V1037 = AND 0xffffffffffffffffffffffffffffffffffffffff V1035
0x10d3: V1038 = CALLER
0x10d4: V1039 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e9: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1038
0x10ea: V1041 = EQ V1040 V1037
0x10ee: JUMP {0x43a, 0x53a, 0x5fe, 0x87e, 0xa7b, 0xe41, 0xf50, 0x111d, 0x113a, 0x1159}
---
Entry stack: [V11, S5, S4, S3, S2, S1, {0x43a, 0x53a, 0x5fe, 0x87e, 0xa7b, 0xe41, 0xf50, 0x111d, 0x113a, 0x1159}]
Stack pops: 1
Stack additions: [V1041]
Exit stack: [V11, S5, S4, S3, S2, S1, V1041]

================================

Block 0x10ef
[0x10ef:0x1114]
---
Predecessors: [0x460]
Successors: [0x469]
---
0x10ef JUMPDEST
0x10f0 PUSH1 0x3
0x10f2 PUSH1 0x0
0x10f4 SWAP1
0x10f5 SLOAD
0x10f6 SWAP1
0x10f7 PUSH2 0x100
0x10fa EXP
0x10fb SWAP1
0x10fc DIV
0x10fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1112 AND
0x1113 DUP2
0x1114 JUMP
---
0x10ef: JUMPDEST 
0x10f0: V1042 = 0x3
0x10f2: V1043 = 0x0
0x10f5: V1044 = S[0x3]
0x10f7: V1045 = 0x100
0x10fa: V1046 = EXP 0x100 0x0
0x10fc: V1047 = DIV V1044 0x1
0x10fd: V1048 = 0xffffffffffffffffffffffffffffffffffffffff
0x1112: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff V1047
0x1114: JUMP 0x469
---
Entry stack: [V11, 0x469]
Stack pops: 1
Stack additions: [S0, V1049]
Exit stack: [V11, 0x469, V1049]

================================

Block 0x1115
[0x1115:0x111c]
---
Predecessors: [0x4b7]
Successors: [0x1098]
---
0x1115 JUMPDEST
0x1116 PUSH2 0x111d
0x1119 PUSH2 0x1098
0x111c JUMP
---
0x1115: JUMPDEST 
0x1116: V1050 = 0x111d
0x1119: V1051 = 0x1098
0x111c: JUMP 0x1098
---
Entry stack: [V11, 0x4d6, V323]
Stack pops: 0
Stack additions: [0x111d]
Exit stack: [V11, 0x4d6, V323, 0x111d]

================================

Block 0x111d
[0x111d:0x1123]
---
Predecessors: [0x1098]
Successors: [0x1124, 0x1128]
---
0x111d JUMPDEST
0x111e ISZERO
0x111f ISZERO
0x1120 PUSH2 0x1128
0x1123 JUMPI
---
0x111d: JUMPDEST 
0x111e: V1052 = ISZERO V1041
0x111f: V1053 = ISZERO V1052
0x1120: V1054 = 0x1128
0x1123: JUMPI 0x1128 V1053
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0x1124
[0x1124:0x1127]
---
Predecessors: [0x111d]
Successors: []
---
0x1124 PUSH1 0x0
0x1126 DUP1
0x1127 REVERT
---
0x1124: V1055 = 0x0
0x1127: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x1128
[0x1128:0x1131]
---
Predecessors: [0x111d]
Successors: [0x13f, 0x204, 0x3cc, 0x4d6, 0x519]
---
0x1128 JUMPDEST
0x1129 DUP1
0x112a PUSH1 0x5
0x112c DUP2
0x112d SWAP1
0x112e SSTORE
0x112f POP
0x1130 POP
0x1131 JUMP
---
0x1128: JUMPDEST 
0x112a: V1056 = 0x5
0x112e: S[0x5] = S0
0x1131: JUMP S1
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S4, S3, S2]

================================

Block 0x1132
[0x1132:0x1139]
---
Predecessors: [0x4e4]
Successors: [0x1098]
---
0x1132 JUMPDEST
0x1133 PUSH2 0x113a
0x1136 PUSH2 0x1098
0x1139 JUMP
---
0x1132: JUMPDEST 
0x1133: V1057 = 0x113a
0x1136: V1058 = 0x1098
0x1139: JUMP 0x1098
---
Entry stack: [V11, 0x519, V338]
Stack pops: 0
Stack additions: [0x113a]
Exit stack: [V11, 0x519, V338, 0x113a]

================================

Block 0x113a
[0x113a:0x1140]
---
Predecessors: [0x1098]
Successors: [0x1141, 0x1145]
---
0x113a JUMPDEST
0x113b ISZERO
0x113c ISZERO
0x113d PUSH2 0x1145
0x1140 JUMPI
---
0x113a: JUMPDEST 
0x113b: V1059 = ISZERO V1041
0x113c: V1060 = ISZERO V1059
0x113d: V1061 = 0x1145
0x1140: JUMPI 0x1145 V1060
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0x1141
[0x1141:0x1144]
---
Predecessors: [0x113a]
Successors: []
---
0x1141 PUSH1 0x0
0x1143 DUP1
0x1144 REVERT
---
0x1141: V1062 = 0x0
0x1144: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x1145
[0x1145:0x114d]
---
Predecessors: [0x113a]
Successors: [0x11c4]
---
0x1145 JUMPDEST
0x1146 PUSH2 0x114e
0x1149 DUP2
0x114a PUSH2 0x11c4
0x114d JUMP
---
0x1145: JUMPDEST 
0x1146: V1063 = 0x114e
0x114a: V1064 = 0x11c4
0x114d: JUMP 0x11c4
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x114e, S0]
Exit stack: [V11, S4, S3, S2, S1, S0, 0x114e, S0]

================================

Block 0x114e
[0x114e:0x1150]
---
Predecessors: [0x1200]
Successors: [0x13f, 0x204, 0x3cc, 0x4d6, 0x519]
---
0x114e JUMPDEST
0x114f POP
0x1150 JUMP
---
0x114e: JUMPDEST 
0x1150: JUMP S1
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S4, S3, S2]

================================

Block 0x1151
[0x1151:0x1158]
---
Predecessors: [0x527]
Successors: [0x1098]
---
0x1151 JUMPDEST
0x1152 PUSH2 0x1159
0x1155 PUSH2 0x1098
0x1158 JUMP
---
0x1151: JUMPDEST 
0x1152: V1065 = 0x1159
0x1155: V1066 = 0x1098
0x1158: JUMP 0x1098
---
Entry stack: [V11, 0x530]
Stack pops: 0
Stack additions: [0x1159]
Exit stack: [V11, 0x530, 0x1159]

================================

Block 0x1159
[0x1159:0x115f]
---
Predecessors: [0x1098]
Successors: [0x1160, 0x1164]
---
0x1159 JUMPDEST
0x115a ISZERO
0x115b ISZERO
0x115c PUSH2 0x1164
0x115f JUMPI
---
0x1159: JUMPDEST 
0x115a: V1067 = ISZERO V1041
0x115b: V1068 = ISZERO V1067
0x115c: V1069 = 0x1164
0x115f: JUMPI 0x1164 V1068
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1]

================================

Block 0x1160
[0x1160:0x1163]
---
Predecessors: [0x1159]
Successors: []
---
0x1160 PUSH1 0x0
0x1162 DUP1
0x1163 REVERT
---
0x1160: V1070 = 0x0
0x1163: REVERT 0x0 0x0
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x1164
[0x1164:0x11b7]
---
Predecessors: [0x1159]
Successors: [0x11b8, 0x11c1]
---
0x1164 JUMPDEST
0x1165 CALLER
0x1166 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x117b AND
0x117c PUSH2 0x8fc
0x117f ADDRESS
0x1180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1195 AND
0x1196 BALANCE
0x1197 SWAP1
0x1198 DUP2
0x1199 ISZERO
0x119a MUL
0x119b SWAP1
0x119c PUSH1 0x40
0x119e MLOAD
0x119f PUSH1 0x0
0x11a1 PUSH1 0x40
0x11a3 MLOAD
0x11a4 DUP1
0x11a5 DUP4
0x11a6 SUB
0x11a7 DUP2
0x11a8 DUP6
0x11a9 DUP9
0x11aa DUP9
0x11ab CALL
0x11ac SWAP4
0x11ad POP
0x11ae POP
0x11af POP
0x11b0 POP
0x11b1 ISZERO
0x11b2 DUP1
0x11b3 ISZERO
0x11b4 PUSH2 0x11c1
0x11b7 JUMPI
---
0x1164: JUMPDEST 
0x1165: V1071 = CALLER
0x1166: V1072 = 0xffffffffffffffffffffffffffffffffffffffff
0x117b: V1073 = AND 0xffffffffffffffffffffffffffffffffffffffff V1071
0x117c: V1074 = 0x8fc
0x117f: V1075 = ADDRESS
0x1180: V1076 = 0xffffffffffffffffffffffffffffffffffffffff
0x1195: V1077 = AND 0xffffffffffffffffffffffffffffffffffffffff V1075
0x1196: V1078 = BALANCE V1077
0x1199: V1079 = ISZERO V1078
0x119a: V1080 = MUL V1079 0x8fc
0x119c: V1081 = 0x40
0x119e: V1082 = M[0x40]
0x119f: V1083 = 0x0
0x11a1: V1084 = 0x40
0x11a3: V1085 = M[0x40]
0x11a6: V1086 = SUB V1082 V1085
0x11ab: V1087 = CALL V1080 V1073 V1078 V1085 V1086 V1085 0x0
0x11b1: V1088 = ISZERO V1087
0x11b3: V1089 = ISZERO V1088
0x11b4: V1090 = 0x11c1
0x11b7: JUMPI 0x11c1 V1089
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V1088]
Exit stack: [V11, S4, S3, S2, S1, S0, V1088]

================================

Block 0x11b8
[0x11b8:0x11c0]
---
Predecessors: [0x1164]
Successors: []
---
0x11b8 RETURNDATASIZE
0x11b9 PUSH1 0x0
0x11bb DUP1
0x11bc RETURNDATACOPY
0x11bd RETURNDATASIZE
0x11be PUSH1 0x0
0x11c0 REVERT
---
0x11b8: V1091 = RETURNDATASIZE
0x11b9: V1092 = 0x0
0x11bc: RETURNDATACOPY 0x0 0x0 V1091
0x11bd: V1093 = RETURNDATASIZE
0x11be: V1094 = 0x0
0x11c0: REVERT 0x0 V1093
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1088]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, S1, V1088]

================================

Block 0x11c1
[0x11c1:0x11c3]
---
Predecessors: [0x1164]
Successors: [0x39f, 0x530]
---
0x11c1 JUMPDEST
0x11c2 POP
0x11c3 JUMP
---
0x11c1: JUMPDEST 
0x11c3: JUMP S1
---
Entry stack: [V11, S5, S4, S3, S2, S1, V1088]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2]

================================

Block 0x11c4
[0x11c4:0x11fb]
---
Predecessors: [0x1145]
Successors: [0x11fc, 0x1200]
---
0x11c4 JUMPDEST
0x11c5 PUSH1 0x0
0x11c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11dc AND
0x11dd DUP2
0x11de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f3 AND
0x11f4 EQ
0x11f5 ISZERO
0x11f6 ISZERO
0x11f7 ISZERO
0x11f8 PUSH2 0x1200
0x11fb JUMPI
---
0x11c4: JUMPDEST 
0x11c5: V1095 = 0x0
0x11c7: V1096 = 0xffffffffffffffffffffffffffffffffffffffff
0x11dc: V1097 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x11de: V1098 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f3: V1099 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x11f4: V1100 = EQ V1099 0x0
0x11f5: V1101 = ISZERO V1100
0x11f6: V1102 = ISZERO V1101
0x11f7: V1103 = ISZERO V1102
0x11f8: V1104 = 0x1200
0x11fb: JUMPI 0x1200 V1103
---
Entry stack: [V11, S6, S5, S4, S3, S2, 0x114e, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S6, S5, S4, S3, S2, 0x114e, S0]

================================

Block 0x11fc
[0x11fc:0x11ff]
---
Predecessors: [0x11c4]
Successors: []
---
0x11fc PUSH1 0x0
0x11fe DUP1
0x11ff REVERT
---
0x11fc: V1105 = 0x0
0x11ff: REVERT 0x0 0x0
---
Entry stack: [V11, S6, S5, S4, S3, S2, 0x114e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2, 0x114e, S0]

================================

Block 0x1200
[0x1200:0x12fa]
---
Predecessors: [0x11c4]
Successors: [0x114e]
---
0x1200 JUMPDEST
0x1201 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1222 PUSH1 0x0
0x1224 DUP1
0x1225 SWAP1
0x1226 SLOAD
0x1227 SWAP1
0x1228 PUSH2 0x100
0x122b EXP
0x122c SWAP1
0x122d DIV
0x122e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1243 AND
0x1244 DUP3
0x1245 PUSH1 0x40
0x1247 MLOAD
0x1248 DUP1
0x1249 DUP4
0x124a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x125f AND
0x1260 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1275 AND
0x1276 DUP2
0x1277 MSTORE
0x1278 PUSH1 0x20
0x127a ADD
0x127b DUP3
0x127c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1291 AND
0x1292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a7 AND
0x12a8 DUP2
0x12a9 MSTORE
0x12aa PUSH1 0x20
0x12ac ADD
0x12ad SWAP3
0x12ae POP
0x12af POP
0x12b0 POP
0x12b1 PUSH1 0x40
0x12b3 MLOAD
0x12b4 DUP1
0x12b5 SWAP2
0x12b6 SUB
0x12b7 SWAP1
0x12b8 LOG1
0x12b9 DUP1
0x12ba PUSH1 0x0
0x12bc DUP1
0x12bd PUSH2 0x100
0x12c0 EXP
0x12c1 DUP2
0x12c2 SLOAD
0x12c3 DUP2
0x12c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12d9 MUL
0x12da NOT
0x12db AND
0x12dc SWAP1
0x12dd DUP4
0x12de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f3 AND
0x12f4 MUL
0x12f5 OR
0x12f6 SWAP1
0x12f7 SSTORE
0x12f8 POP
0x12f9 POP
0x12fa JUMP
---
0x1200: JUMPDEST 
0x1201: V1106 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1222: V1107 = 0x0
0x1226: V1108 = S[0x0]
0x1228: V1109 = 0x100
0x122b: V1110 = EXP 0x100 0x0
0x122d: V1111 = DIV V1108 0x1
0x122e: V1112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1243: V1113 = AND 0xffffffffffffffffffffffffffffffffffffffff V1111
0x1245: V1114 = 0x40
0x1247: V1115 = M[0x40]
0x124a: V1116 = 0xffffffffffffffffffffffffffffffffffffffff
0x125f: V1117 = AND 0xffffffffffffffffffffffffffffffffffffffff V1113
0x1260: V1118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1275: V1119 = AND 0xffffffffffffffffffffffffffffffffffffffff V1117
0x1277: M[V1115] = V1119
0x1278: V1120 = 0x20
0x127a: V1121 = ADD 0x20 V1115
0x127c: V1122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1291: V1123 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1292: V1124 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a7: V1125 = AND 0xffffffffffffffffffffffffffffffffffffffff V1123
0x12a9: M[V1121] = V1125
0x12aa: V1126 = 0x20
0x12ac: V1127 = ADD 0x20 V1121
0x12b1: V1128 = 0x40
0x12b3: V1129 = M[0x40]
0x12b6: V1130 = SUB V1127 V1129
0x12b8: LOG V1129 V1130 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x12ba: V1131 = 0x0
0x12bd: V1132 = 0x100
0x12c0: V1133 = EXP 0x100 0x0
0x12c2: V1134 = S[0x0]
0x12c4: V1135 = 0xffffffffffffffffffffffffffffffffffffffff
0x12d9: V1136 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x12da: V1137 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x12db: V1138 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1134
0x12de: V1139 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f3: V1140 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x12f4: V1141 = MUL V1140 0x1
0x12f5: V1142 = OR V1141 V1138
0x12f7: S[0x0] = V1142
0x12fa: JUMP 0x114e
---
Entry stack: [V11, S6, S5, S4, S3, S2, 0x114e, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2]

================================

Block 0x12fb
[0x12fb:0x1327]
---
Predecessors: []
Successors: []
---
0x12fb STOP
0x12fc LOG1
0x12fd PUSH6 0x627a7a723058
0x1304 SHA3
0x1305 MISSING 0x5d
0x1306 MISSING 0xf8
0x1307 MULMOD
0x1308 MISSING 0xaa
0x1309 PUSH6 0x95701029160b
0x1310 DUP3
0x1311 MISSING 0x48
0x1312 MISSING 0xc8
0x1313 SWAP14
0x1314 MISSING 0xb2
0x1315 MISSING 0x2a
0x1316 CALLDATASIZE
0x1317 SWAP1
0x1318 MISSING 0x4a
0x1319 MISSING 0xb4
0x131a PUSH13 0x4d883740c1a65822585c0029
---
0x12fb: STOP 
0x12fc: LOG S0 S1 S2
0x12fd: V1143 = 0x627a7a723058
0x1304: V1144 = SHA3 0x627a7a723058 S3
0x1305: MISSING 0x5d
0x1306: MISSING 0xf8
0x1307: V1145 = MULMOD S0 S1 S2
0x1308: MISSING 0xaa
0x1309: V1146 = 0x95701029160b
0x1311: MISSING 0x48
0x1312: MISSING 0xc8
0x1314: MISSING 0xb2
0x1315: MISSING 0x2a
0x1316: V1147 = CALLDATASIZE
0x1318: MISSING 0x4a
0x1319: MISSING 0xb4
0x131a: V1148 = 0x4d883740c1a65822585c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1144, V1145, S1, 0x95701029160b, S0, S1, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S0, V1147, 0x4d883740c1a65822585c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xab3577e
Entry block: 0xfe
Exit block: 0x519
Body: 0xfe, 0x106, 0x10a, 0x13f, 0x204, 0x3cc, 0x4d6, 0x519, 0x532, 0x53a, 0x541, 0x545

Function 1:
Public function signature: 0x11894232
Entry block: 0x141
Exit block: 0x156
Body: 0x141, 0x149, 0x14d, 0x156, 0x5ca

Function 2:
Public function signature: 0x11eed2c7
Entry block: 0x16c
Exit block: 0x181
Body: 0x16c, 0x174, 0x178, 0x181, 0x5d0

Function 3:
Public function signature: 0x26a4e8d2
Entry block: 0x1c3
Exit block: 0x519
Body: 0x13f, 0x1c3, 0x1cb, 0x1cf, 0x204, 0x3cc, 0x4d6, 0x519, 0x5f6, 0x5fe, 0x605, 0x609

Function 4:
Public function signature: 0x27aae6d9
Entry block: 0x206
Exit block: 0x231
Body: 0x206, 0x20e, 0x212, 0x231, 0x68e, 0x729, 0x72d, 0x738, 0x741, 0x753, 0x757

Function 5:
Public function signature: 0x36ee6e80
Entry block: 0x247
Exit block: 0x24f
Body: 0x247, 0x24f, 0x253, 0x272

Function 6:
Public function signature: 0x3b52bab7
Entry block: 0x288
Exit block: 0x2d9
Body: 0x288, 0x290, 0x294, 0x2d9, 0x876, 0x87e, 0x885, 0x889, 0x94c, 0x950, 0x95b, 0x964

Function 7:
Public function signature: 0x59498a1c
Entry block: 0x2db
Exit block: 0x306
Body: 0x2db, 0x2e3, 0x2e7, 0x306, 0x96e, 0xa09, 0xa0d, 0xa18, 0xa21, 0xa33, 0xa37, 0xa60, 0xa61

Function 8:
Public function signature: 0x59859974
Entry block: 0x31c
Exit block: 0x347
Body: 0x31c, 0x324, 0x328, 0x347, 0xa6e, 0xa7b, 0xa82, 0xa86, 0xb08, 0xb0c, 0xb17, 0xb20, 0xb32, 0xb36, 0xbcb, 0xbcf, 0xbda, 0xbe3, 0xbf0, 0xbfd, 0xc01, 0xc8e, 0xc92, 0xc9d, 0xca6, 0xcb8, 0xcbc, 0xd04, 0xd34, 0xd3b, 0xd3f

Function 9:
Public function signature: 0x5e73ff93
Entry block: 0x349
Exit block: 0x374
Body: 0x349, 0x351, 0x355, 0x374, 0xd45, 0xde0, 0xde4, 0xdef, 0xdf8, 0xe0a, 0xe0e

Function 10:
Public function signature: 0x715018a6
Entry block: 0x38a
Exit block: 0x530
Body: 0x38a, 0x392, 0x396, 0x39f, 0x530, 0xe39, 0xe41, 0xe48, 0xe4c

Function 11:
Public function signature: 0x884731c1
Entry block: 0x3a1
Exit block: 0x13f
Body: 0x13f, 0x204, 0x3a1, 0x3a9, 0x3ad, 0x3cc, 0x4d6, 0x519, 0xf48, 0xf50, 0xf57, 0xf5b, 0x1050, 0x1054, 0x105f, 0x1068

Function 12:
Public function signature: 0x8da5cb5b
Entry block: 0x3ce
Exit block: 0x3e3
Body: 0x3ce, 0x3d6, 0x3da, 0x3e3, 0x106f

Function 13:
Public function signature: 0x8f32d59b
Entry block: 0x425
Exit block: 0x43a
Body: 0x425, 0x42d, 0x431, 0x43a

Function 14:
Public function signature: 0x9d76ea58
Entry block: 0x454
Exit block: 0x469
Body: 0x454, 0x45c, 0x460, 0x469, 0x10ef

Function 15:
Public function signature: 0xd23508d4
Entry block: 0x4ab
Exit block: 0x13f
Body: 0x13f, 0x204, 0x3cc, 0x4ab, 0x4b3, 0x4b7, 0x4d6, 0x519, 0x1115, 0x111d, 0x1124, 0x1128

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x4d8
Exit block: 0x13f
Body: 0x13f, 0x204, 0x3cc, 0x4d6, 0x4d8, 0x4e0, 0x4e4, 0x519, 0x1132, 0x113a, 0x1141, 0x1145, 0x114e, 0x11c4, 0x11fc, 0x1200

Function 17:
Public function signature: 0xfd075615
Entry block: 0x51b
Exit block: 0x39f
Body: 0x39f, 0x51b, 0x523, 0x527, 0x530, 0x1151, 0x1159, 0x1160, 0x1164, 0x11b8, 0x11c1

Function 18:
Public fallback function
Entry block: 0xfc
Exit block: 0xfc
Body: 0xfc

Function 19:
Private function
Entry block: 0x782
Exit block: 0x84b
Body: 0x782, 0x821, 0x835, 0x84b

