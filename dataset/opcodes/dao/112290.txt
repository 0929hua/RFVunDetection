Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x40]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x40
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x40
0xa: JUMPI 0x40 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x4d]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x221038a
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x4d
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x221038a
0x1a: V12 = EQ V10 0x221038a
0x1b: V13 = 0x4d
0x1e: JUMPI 0x4d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xaa]
---
0x1f DUP1
0x20 PUSH4 0x18bdc79a
0x25 EQ
0x26 PUSH2 0xaa
0x29 JUMPI
---
0x20: V14 = 0x18bdc79a
0x25: V15 = EQ 0x18bdc79a V10
0x26: V16 = 0xaa
0x29: JUMPI 0xaa V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xbe]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0xbe
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0xbe
0x34: JUMPI 0xbe V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xd0]
---
0x35 DUP1
0x36 PUSH4 0xd2cc718f
0x3b EQ
0x3c PUSH2 0xd0
0x3f JUMPI
---
0x36: V20 = 0xd2cc718f
0x3b: V21 = EQ 0xd2cc718f V10
0x3c: V22 = 0xd0
0x3f: JUMPI 0xd0 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4c]
---
Predecessors: [0x0, 0x35]
Successors: [0xd9]
---
0x40 JUMPDEST
0x41 PUSH2 0xd9
0x44 PUSH1 0x1
0x46 DUP1
0x47 SLOAD
0x48 CALLVALUE
0x49 ADD
0x4a SWAP1
0x4b SSTORE
0x4c JUMP
---
0x40: JUMPDEST 
0x41: V23 = 0xd9
0x44: V24 = 0x1
0x47: V25 = S[0x1]
0x48: V26 = CALLVALUE
0x49: V27 = ADD V26 V25
0x4b: S[0x1] = V27
0x4c: JUMP 0xd9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4d
[0x4d:0x6f]
---
Predecessors: [0xb]
Successors: [0x70, 0x75]
---
0x4d JUMPDEST
0x4e PUSH2 0xdb
0x51 PUSH1 0x4
0x53 CALLDATALOAD
0x54 PUSH1 0x24
0x56 CALLDATALOAD
0x57 PUSH1 0x0
0x59 DUP1
0x5a SLOAD
0x5b CALLER
0x5c PUSH1 0x1
0x5e PUSH1 0xa0
0x60 PUSH1 0x2
0x62 EXP
0x63 SUB
0x64 SWAP1
0x65 DUP2
0x66 AND
0x67 SWAP2
0x68 AND
0x69 EQ
0x6a ISZERO
0x6b DUP1
0x6c PUSH2 0x75
0x6f JUMPI
---
0x4d: JUMPDEST 
0x4e: V28 = 0xdb
0x51: V29 = 0x4
0x53: V30 = CALLDATALOAD 0x4
0x54: V31 = 0x24
0x56: V32 = CALLDATALOAD 0x24
0x57: V33 = 0x0
0x5a: V34 = S[0x0]
0x5b: V35 = CALLER
0x5c: V36 = 0x1
0x5e: V37 = 0xa0
0x60: V38 = 0x2
0x62: V39 = EXP 0x2 0xa0
0x63: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x68: V42 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x69: V43 = EQ V42 V41
0x6a: V44 = ISZERO V43
0x6c: V45 = 0x75
0x6f: JUMPI 0x75 V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xdb, V30, V32, 0x0, V44]
Exit stack: [V10, 0xdb, V30, V32, 0x0, V44]

================================

Block 0x70
[0x70:0x74]
---
Predecessors: [0x4d]
Successors: [0x75]
---
0x70 POP
0x71 PUSH1 0x0
0x73 CALLVALUE
0x74 GT
---
0x71: V46 = 0x0
0x73: V47 = CALLVALUE
0x74: V48 = GT V47 0x0
---
Entry stack: [V10, 0xdb, V30, V32, 0x0, V44]
Stack pops: 1
Stack additions: [V48]
Exit stack: [V10, 0xdb, V30, V32, 0x0, V48]

================================

Block 0x75
[0x75:0x7a]
---
Predecessors: [0x4d, 0x70]
Successors: [0x7b, 0xa0]
---
0x75 JUMPDEST
0x76 DUP1
0x77 PUSH2 0xa0
0x7a JUMPI
---
0x75: JUMPDEST 
0x77: V49 = 0xa0
0x7a: JUMPI 0xa0 S0
---
Entry stack: [V10, 0xdb, V30, V32, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xdb, V30, V32, 0x0, S0]

================================

Block 0x7b
[0x7b:0x8d]
---
Predecessors: [0x75]
Successors: [0x8e, 0xa0]
---
0x7b POP
0x7c DUP1
0x7d SLOAD
0x7e PUSH1 0xa0
0x80 PUSH1 0x2
0x82 EXP
0x83 SWAP1
0x84 DIV
0x85 PUSH1 0xff
0x87 AND
0x88 DUP1
0x89 ISZERO
0x8a PUSH2 0xa0
0x8d JUMPI
---
0x7d: V50 = S[0x0]
0x7e: V51 = 0xa0
0x80: V52 = 0x2
0x82: V53 = EXP 0x2 0xa0
0x84: V54 = DIV V50 0x10000000000000000000000000000000000000000
0x85: V55 = 0xff
0x87: V56 = AND 0xff V54
0x89: V57 = ISZERO V56
0x8a: V58 = 0xa0
0x8d: JUMPI 0xa0 V57
---
Entry stack: [V10, 0xdb, V30, V32, 0x0, S0]
Stack pops: 2
Stack additions: [S1, V56]
Exit stack: [V10, 0xdb, V30, V32, 0x0, V56]

================================

Block 0x8e
[0x8e:0x9f]
---
Predecessors: [0x7b]
Successors: [0xa0]
---
0x8e POP
0x8f DUP1
0x90 SLOAD
0x91 PUSH1 0x1
0x93 PUSH1 0xa0
0x95 PUSH1 0x2
0x97 EXP
0x98 SUB
0x99 DUP5
0x9a DUP2
0x9b AND
0x9c SWAP2
0x9d AND
0x9e EQ
0x9f ISZERO
---
0x90: V59 = S[0x0]
0x91: V60 = 0x1
0x93: V61 = 0xa0
0x95: V62 = 0x2
0x97: V63 = EXP 0x2 0xa0
0x98: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x9d: V66 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0x9e: V67 = EQ V66 V65
0x9f: V68 = ISZERO V67
---
Entry stack: [V10, 0xdb, V30, V32, 0x0, V56]
Stack pops: 4
Stack additions: [S3, S2, S1, V68]
Exit stack: [V10, 0xdb, V30, V32, 0x0, V68]

================================

Block 0xa0
[0xa0:0xa5]
---
Predecessors: [0x75, 0x7b, 0x8e]
Successors: [0xa6, 0xf7]
---
0xa0 JUMPDEST
0xa1 ISZERO
0xa2 PUSH2 0xf7
0xa5 JUMPI
---
0xa0: JUMPDEST 
0xa1: V69 = ISZERO S0
0xa2: V70 = 0xf7
0xa5: JUMPI 0xf7 V69
---
Entry stack: [V10, 0xdb, V30, V32, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xdb, V30, V32, 0x0]

================================

Block 0xa6
[0xa6:0xa9]
---
Predecessors: [0xa0]
Successors: []
---
0xa6 PUSH2 0x2
0xa9 JUMP
---
0xa6: V71 = 0x2
0xa9: THROW 
---
Entry stack: [V10, 0xdb, V30, V32, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xdb, V30, V32, 0x0]

================================

Block 0xaa
[0xaa:0xbd]
---
Predecessors: [0x1f]
Successors: [0xdb]
---
0xaa JUMPDEST
0xab PUSH2 0xdb
0xae PUSH1 0x0
0xb0 SLOAD
0xb1 PUSH1 0xff
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SWAP1
0xb9 SWAP2
0xba DIV
0xbb AND
0xbc DUP2
0xbd JUMP
---
0xaa: JUMPDEST 
0xab: V72 = 0xdb
0xae: V73 = 0x0
0xb0: V74 = S[0x0]
0xb1: V75 = 0xff
0xb3: V76 = 0xa0
0xb5: V77 = 0x2
0xb7: V78 = EXP 0x2 0xa0
0xba: V79 = DIV V74 0x10000000000000000000000000000000000000000
0xbb: V80 = AND V79 0xff
0xbd: JUMP 0xdb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xdb, V80]
Exit stack: [V10, 0xdb, V80]

================================

Block 0xbe
[0xbe:0xcf]
---
Predecessors: [0x2a]
Successors: [0xed]
---
0xbe JUMPDEST
0xbf PUSH2 0xed
0xc2 PUSH1 0x0
0xc4 SLOAD
0xc5 PUSH1 0x1
0xc7 PUSH1 0xa0
0xc9 PUSH1 0x2
0xcb EXP
0xcc SUB
0xcd AND
0xce DUP2
0xcf JUMP
---
0xbe: JUMPDEST 
0xbf: V81 = 0xed
0xc2: V82 = 0x0
0xc4: V83 = S[0x0]
0xc5: V84 = 0x1
0xc7: V85 = 0xa0
0xc9: V86 = 0x2
0xcb: V87 = EXP 0x2 0xa0
0xcc: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0xcf: JUMP 0xed
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xed, V89]
Exit stack: [V10, 0xed, V89]

================================

Block 0xd0
[0xd0:0xd8]
---
Predecessors: [0x35]
Successors: [0xdb]
---
0xd0 JUMPDEST
0xd1 PUSH2 0xdb
0xd4 PUSH1 0x1
0xd6 SLOAD
0xd7 DUP2
0xd8 JUMP
---
0xd0: JUMPDEST 
0xd1: V90 = 0xdb
0xd4: V91 = 0x1
0xd6: V92 = S[0x1]
0xd8: JUMP 0xdb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xdb, V92]
Exit stack: [V10, 0xdb, V92]

================================

Block 0xd9
[0xd9:0xda]
---
Predecessors: [0x40]
Successors: []
---
0xd9 JUMPDEST
0xda STOP
---
0xd9: JUMPDEST 
0xda: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdb
[0xdb:0xec]
---
Predecessors: [0xaa, 0xd0, 0x15c]
Successors: []
---
0xdb JUMPDEST
0xdc PUSH1 0x40
0xde DUP1
0xdf MLOAD
0xe0 SWAP2
0xe1 DUP3
0xe2 MSTORE
0xe3 MLOAD
0xe4 SWAP1
0xe5 DUP2
0xe6 SWAP1
0xe7 SUB
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP1
0xec RETURN
---
0xdb: JUMPDEST 
0xdc: V93 = 0x40
0xdf: V94 = M[0x40]
0xe2: M[V94] = S0
0xe3: V95 = M[0x40]
0xe7: V96 = SUB V94 V95
0xe8: V97 = 0x20
0xea: V98 = ADD 0x20 V96
0xec: RETURN V95 V98
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0xed
[0xed:0xf6]
---
Predecessors: [0xbe]
Successors: []
---
0xed JUMPDEST
0xee PUSH1 0x60
0xf0 SWAP1
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 SWAP1
0xf6 RETURN
---
0xed: JUMPDEST 
0xee: V99 = 0x60
0xf2: M[0x60] = V89
0xf3: V100 = 0x20
0xf6: RETURN 0x60 0x20
---
Entry stack: [V10, 0xed, V89]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xed]

================================

Block 0xf7
[0xf7:0x119]
---
Predecessors: [0xa0]
Successors: [0x11a, 0x15c]
---
0xf7 JUMPDEST
0xf8 PUSH1 0x1
0xfa PUSH1 0xa0
0xfc PUSH1 0x2
0xfe EXP
0xff SUB
0x100 DUP4
0x101 AND
0x102 DUP3
0x103 PUSH1 0x60
0x105 DUP4
0x106 DUP2
0x107 DUP2
0x108 DUP2
0x109 DUP6
0x10a DUP8
0x10b PUSH2 0x8502
0x10e GAS
0x10f SUB
0x110 CALL
0x111 SWAP3
0x112 POP
0x113 POP
0x114 POP
0x115 ISZERO
0x116 PUSH2 0x15c
0x119 JUMPI
---
0xf7: JUMPDEST 
0xf8: V101 = 0x1
0xfa: V102 = 0xa0
0xfc: V103 = 0x2
0xfe: V104 = EXP 0x2 0xa0
0xff: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x101: V106 = AND V30 0xffffffffffffffffffffffffffffffffffffffff
0x103: V107 = 0x60
0x10b: V108 = 0x8502
0x10e: V109 = GAS
0x10f: V110 = SUB V109 0x8502
0x110: V111 = CALL V110 V106 V32 0x60 0x0 0x60 0x0
0x115: V112 = ISZERO V111
0x116: V113 = 0x15c
0x119: JUMPI 0x15c V112
---
Entry stack: [V10, 0xdb, V30, V32, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xdb, V30, V32, 0x0]

================================

Block 0x11a
[0x11a:0x15b]
---
Predecessors: [0xf7]
Successors: [0x15c]
---
0x11a PUSH1 0x40
0x11c DUP1
0x11d MLOAD
0x11e DUP4
0x11f DUP2
0x120 MSTORE
0x121 SWAP1
0x122 MLOAD
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b DUP6
0x12c AND
0x12d SWAP2
0x12e PUSH32 0x9735b0cb909f3d21d5c16bbcccd272d85fa11446f6d679f6ecb170d2dabfecfc
0x14f SWAP2
0x150 SWAP1
0x151 DUP2
0x152 SWAP1
0x153 SUB
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP1
0x158 LOG2
0x159 POP
0x15a PUSH1 0x1
---
0x11a: V114 = 0x40
0x11d: V115 = M[0x40]
0x120: M[V115] = V32
0x122: V116 = M[0x40]
0x123: V117 = 0x1
0x125: V118 = 0xa0
0x127: V119 = 0x2
0x129: V120 = EXP 0x2 0xa0
0x12a: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12c: V122 = AND V30 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V123 = 0x9735b0cb909f3d21d5c16bbcccd272d85fa11446f6d679f6ecb170d2dabfecfc
0x153: V124 = SUB V115 V116
0x154: V125 = 0x20
0x156: V126 = ADD 0x20 V124
0x158: LOG V116 V126 0x9735b0cb909f3d21d5c16bbcccd272d85fa11446f6d679f6ecb170d2dabfecfc V122
0x15a: V127 = 0x1
---
Entry stack: [V10, 0xdb, V30, V32, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0xdb, V30, V32, 0x1]

================================

Block 0x15c
[0x15c:0x161]
---
Predecessors: [0xf7, 0x11a]
Successors: [0xdb]
---
0x15c JUMPDEST
0x15d SWAP3
0x15e SWAP2
0x15f POP
0x160 POP
0x161 JUMP
---
0x15c: JUMPDEST 
0x161: JUMP 0xdb
---
Entry stack: [V10, 0xdb, V30, V32, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Function 0:
Public function signature: 0x221038a
Entry block: 0x4d
Exit block: 0xdb
Body: 0x4d, 0x70, 0x75, 0x7b, 0x8e, 0xa0, 0xa6, 0xdb, 0xf7, 0x11a, 0x15c

Function 1:
Public function signature: 0x18bdc79a
Entry block: 0xaa
Exit block: 0xdb
Body: 0xaa, 0xdb

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xbe
Exit block: 0xed
Body: 0xbe, 0xed

Function 3:
Public function signature: 0xd2cc718f
Entry block: 0xd0
Exit block: 0xdb
Body: 0xd0, 0xdb

Function 4:
Public fallback function
Entry block: 0x40
Exit block: 0xd9
Body: 0x40, 0xd9

