Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x86]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2cf2c0af
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x86
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2cf2c0af
0x20: V14 = EQ V12 0x2cf2c0af
0x21: V15 = 0x86
0x24: JUMPI 0x86 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x9e]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0x9e
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0x9e
0x2f: JUMPI 0x9e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb6]
---
0x30 DUP1
0x31 PUSH4 0x43d726d6
0x36 EQ
0x37 PUSH2 0xb6
0x3a JUMPI
---
0x31: V19 = 0x43d726d6
0x36: V20 = EQ 0x43d726d6 V12
0x37: V21 = 0xb6
0x3a: JUMPI 0xb6 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xcb]
---
0x3b DUP1
0x3c PUSH4 0x5c73dcea
0x41 EQ
0x42 PUSH2 0xcb
0x45 JUMPI
---
0x3c: V22 = 0x5c73dcea
0x41: V23 = EQ 0x5c73dcea V12
0x42: V24 = 0xcb
0x45: JUMPI 0xcb V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x12c]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x12c
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x12c
0x50: JUMPI 0x12c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x15d]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x15d
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x15d
0x5b: JUMPI 0x15d V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x18c]
---
0x5c DUP1
0x5d PUSH4 0x9c04aefb
0x62 EQ
0x63 PUSH2 0x18c
0x66 JUMPI
---
0x5d: V31 = 0x9c04aefb
0x62: V32 = EQ 0x9c04aefb V12
0x63: V33 = 0x18c
0x66: JUMPI 0x18c V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1db]
---
0x67 DUP1
0x68 PUSH4 0xd0e30db0
0x6d EQ
0x6e PUSH2 0x1db
0x71 JUMPI
---
0x68: V34 = 0xd0e30db0
0x6d: V35 = EQ 0xd0e30db0 V12
0x6e: V36 = 0x1db
0x71: JUMPI 0x1db V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1e5]
---
0x72 DUP1
0x73 PUSH4 0xf1b83630
0x78 EQ
0x79 PUSH2 0x1e5
0x7c JUMPI
---
0x73: V37 = 0xf1b83630
0x78: V38 = EQ 0xf1b83630 V12
0x79: V39 = 0x1e5
0x7c: JUMPI 0x1e5 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x0, 0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x84
---
0x7d: JUMPDEST 
0x7e: V40 = 0x84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0x81
[0x81:0x81]
---
Predecessors: [0x7d, 0x1db]
Successors: [0x82]
---
0x81 JUMPDEST
---
0x81: JUMPDEST 
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x81]
Successors: [0x84]
---
0x82 JUMPDEST
0x83 JUMP
---
0x82: JUMPDEST 
0x83: JUMP 0x84
---
Entry stack: [V12, 0x84]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x82, 0x271, 0x2c5, 0x69a, 0x727]
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86
[0x86:0x8c]
---
Predecessors: [0xb]
Successors: [0x8d, 0x91]
---
0x86 JUMPDEST
0x87 CALLVALUE
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x86: JUMPDEST 
0x87: V41 = CALLVALUE
0x88: V42 = ISZERO V41
0x89: V43 = 0x91
0x8c: JUMPI 0x91 V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x86]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V44 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91
[0x91:0x9b]
---
Predecessors: [0x86]
Successors: [0x1fd]
---
0x91 JUMPDEST
0x92 PUSH2 0x84
0x95 PUSH1 0x4
0x97 CALLDATALOAD
0x98 PUSH2 0x1fd
0x9b JUMP
---
0x91: JUMPDEST 
0x92: V45 = 0x84
0x95: V46 = 0x4
0x97: V47 = CALLDATALOAD 0x4
0x98: V48 = 0x1fd
0x9b: JUMP 0x1fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V47]
Exit stack: [V12, 0x84, V47]

================================

Block 0x9c
[0x9c:0x9d]
---
Predecessors: []
Successors: []
---
0x9c JUMPDEST
0x9d STOP
---
0x9c: JUMPDEST 
0x9d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9e
[0x9e:0xa4]
---
Predecessors: [0x25]
Successors: [0xa5, 0xa9]
---
0x9e JUMPDEST
0x9f CALLVALUE
0xa0 ISZERO
0xa1 PUSH2 0xa9
0xa4 JUMPI
---
0x9e: JUMPDEST 
0x9f: V49 = CALLVALUE
0xa0: V50 = ISZERO V49
0xa1: V51 = 0xa9
0xa4: JUMPI 0xa9 V50
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa5
[0xa5:0xa8]
---
Predecessors: [0x9e]
Successors: []
---
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 REVERT
---
0xa5: V52 = 0x0
0xa8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0x275]
---
0xa9 JUMPDEST
0xaa PUSH2 0x84
0xad PUSH1 0x4
0xaf CALLDATALOAD
0xb0 PUSH2 0x275
0xb3 JUMP
---
0xa9: JUMPDEST 
0xaa: V53 = 0x84
0xad: V54 = 0x4
0xaf: V55 = CALLDATALOAD 0x4
0xb0: V56 = 0x275
0xb3: JUMP 0x275
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V55]
Exit stack: [V12, 0x84, V55]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: []
Successors: []
---
0xb4 JUMPDEST
0xb5 STOP
---
0xb4: JUMPDEST 
0xb5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6
[0xb6:0xbc]
---
Predecessors: [0x30]
Successors: [0xbd, 0xc1]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb6: JUMPDEST 
0xb7: V57 = CALLVALUE
0xb8: V58 = ISZERO V57
0xb9: V59 = 0xc1
0xbc: JUMPI 0xc1 V58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb6]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V60 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc1
[0xc1:0xc8]
---
Predecessors: [0xb6]
Successors: [0x2c8]
---
0xc1 JUMPDEST
0xc2 PUSH2 0x84
0xc5 PUSH2 0x2c8
0xc8 JUMP
---
0xc1: JUMPDEST 
0xc2: V61 = 0x84
0xc5: V62 = 0x2c8
0xc8: JUMP 0x2c8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0xc9
[0xc9:0xca]
---
Predecessors: []
Successors: []
---
0xc9 JUMPDEST
0xca STOP
---
0xc9: JUMPDEST 
0xca: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcb
[0xcb:0xd1]
---
Predecessors: [0x3b]
Successors: [0xd2, 0xd6]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd ISZERO
0xce PUSH2 0xd6
0xd1 JUMPI
---
0xcb: JUMPDEST 
0xcc: V63 = CALLVALUE
0xcd: V64 = ISZERO V63
0xce: V65 = 0xd6
0xd1: JUMPI 0xd6 V64
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xcb]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 REVERT
---
0xd2: V66 = 0x0
0xd5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd6
[0xd6:0x117]
---
Predecessors: [0xcb]
Successors: [0x2f4]
---
0xd6 JUMPDEST
0xd7 PUSH2 0x118
0xda PUSH1 0x1
0xdc PUSH1 0xa0
0xde PUSH1 0x2
0xe0 EXP
0xe1 SUB
0xe2 PUSH1 0x4
0xe4 CALLDATALOAD
0xe5 DUP2
0xe6 AND
0xe7 SWAP1
0xe8 PUSH1 0x24
0xea CALLDATALOAD
0xeb SWAP1
0xec PUSH1 0x44
0xee CALLDATALOAD
0xef DUP2
0xf0 AND
0xf1 SWAP1
0xf2 PUSH1 0x64
0xf4 CALLDATALOAD
0xf5 SWAP1
0xf6 PUSH1 0x84
0xf8 CALLDATALOAD
0xf9 SWAP1
0xfa PUSH1 0xa4
0xfc CALLDATALOAD
0xfd SWAP1
0xfe PUSH1 0xc4
0x100 CALLDATALOAD
0x101 AND
0x102 PUSH1 0xff
0x104 PUSH1 0xe4
0x106 CALLDATALOAD
0x107 AND
0x108 PUSH2 0x104
0x10b CALLDATALOAD
0x10c PUSH2 0x124
0x10f CALLDATALOAD
0x110 PUSH2 0x144
0x113 CALLDATALOAD
0x114 PUSH2 0x2f4
0x117 JUMP
---
0xd6: JUMPDEST 
0xd7: V67 = 0x118
0xda: V68 = 0x1
0xdc: V69 = 0xa0
0xde: V70 = 0x2
0xe0: V71 = EXP 0x2 0xa0
0xe1: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V73 = 0x4
0xe4: V74 = CALLDATALOAD 0x4
0xe6: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xe8: V76 = 0x24
0xea: V77 = CALLDATALOAD 0x24
0xec: V78 = 0x44
0xee: V79 = CALLDATALOAD 0x44
0xf0: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0xf2: V81 = 0x64
0xf4: V82 = CALLDATALOAD 0x64
0xf6: V83 = 0x84
0xf8: V84 = CALLDATALOAD 0x84
0xfa: V85 = 0xa4
0xfc: V86 = CALLDATALOAD 0xa4
0xfe: V87 = 0xc4
0x100: V88 = CALLDATALOAD 0xc4
0x101: V89 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x102: V90 = 0xff
0x104: V91 = 0xe4
0x106: V92 = CALLDATALOAD 0xe4
0x107: V93 = AND V92 0xff
0x108: V94 = 0x104
0x10b: V95 = CALLDATALOAD 0x104
0x10c: V96 = 0x124
0x10f: V97 = CALLDATALOAD 0x124
0x110: V98 = 0x144
0x113: V99 = CALLDATALOAD 0x144
0x114: V100 = 0x2f4
0x117: JUMP 0x2f4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99]
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99]

================================

Block 0x118
[0x118:0x12b]
---
Predecessors: [0x3cc]
Successors: []
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b MLOAD
0x11c SWAP1
0x11d ISZERO
0x11e ISZERO
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 SWAP2
0x129 SUB
0x12a SWAP1
0x12b RETURN
---
0x118: JUMPDEST 
0x119: V101 = 0x40
0x11b: V102 = M[0x40]
0x11d: V103 = ISZERO V383
0x11e: V104 = ISZERO V103
0x120: M[V102] = V104
0x121: V105 = 0x20
0x123: V106 = ADD 0x20 V102
0x124: V107 = 0x40
0x126: V108 = M[0x40]
0x129: V109 = SUB V106 V108
0x12b: RETURN V108 V109
---
Entry stack: [V12, V383]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x12c
[0x12c:0x132]
---
Predecessors: [0x46]
Successors: [0x133, 0x137]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e ISZERO
0x12f PUSH2 0x137
0x132 JUMPI
---
0x12c: JUMPDEST 
0x12d: V110 = CALLVALUE
0x12e: V111 = ISZERO V110
0x12f: V112 = 0x137
0x132: JUMPI 0x137 V111
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x133
[0x133:0x136]
---
Predecessors: [0x12c]
Successors: []
---
0x133 PUSH1 0x0
0x135 DUP1
0x136 REVERT
---
0x133: V113 = 0x0
0x136: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x137
[0x137:0x14a]
---
Predecessors: [0x12c]
Successors: [0x3dc]
---
0x137 JUMPDEST
0x138 PUSH2 0x14b
0x13b PUSH1 0x1
0x13d PUSH1 0xa0
0x13f PUSH1 0x2
0x141 EXP
0x142 SUB
0x143 PUSH1 0x4
0x145 CALLDATALOAD
0x146 AND
0x147 PUSH2 0x3dc
0x14a JUMP
---
0x137: JUMPDEST 
0x138: V114 = 0x14b
0x13b: V115 = 0x1
0x13d: V116 = 0xa0
0x13f: V117 = 0x2
0x141: V118 = EXP 0x2 0xa0
0x142: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V120 = 0x4
0x145: V121 = CALLDATALOAD 0x4
0x146: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x147: V123 = 0x3dc
0x14a: JUMP 0x3dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V122]
Exit stack: [V12, 0x14b, V122]

================================

Block 0x14b
[0x14b:0x15c]
---
Predecessors: [0x45d]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x40
0x14e MLOAD
0x14f SWAP1
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 PUSH1 0x40
0x157 MLOAD
0x158 DUP1
0x159 SWAP2
0x15a SUB
0x15b SWAP1
0x15c RETURN
---
0x14b: JUMPDEST 
0x14c: V124 = 0x40
0x14e: V125 = M[0x40]
0x151: M[V125] = V440
0x152: V126 = 0x20
0x154: V127 = ADD 0x20 V125
0x155: V128 = 0x40
0x157: V129 = M[0x40]
0x15a: V130 = SUB V127 V129
0x15c: RETURN V129 V130
---
Entry stack: [V12, V440]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x15d
[0x15d:0x163]
---
Predecessors: [0x51]
Successors: [0x164, 0x168]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x15d: JUMPDEST 
0x15e: V131 = CALLVALUE
0x15f: V132 = ISZERO V131
0x160: V133 = 0x168
0x163: JUMPI 0x168 V132
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x15d]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V134 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x168
[0x168:0x16f]
---
Predecessors: [0x15d]
Successors: [0x463]
---
0x168 JUMPDEST
0x169 PUSH2 0x170
0x16c PUSH2 0x463
0x16f JUMP
---
0x168: JUMPDEST 
0x169: V135 = 0x170
0x16c: V136 = 0x463
0x16f: JUMP 0x463
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x170]
Exit stack: [V12, 0x170]

================================

Block 0x170
[0x170:0x18b]
---
Predecessors: [0x463]
Successors: []
---
0x170 JUMPDEST
0x171 PUSH1 0x40
0x173 MLOAD
0x174 PUSH1 0x1
0x176 PUSH1 0xa0
0x178 PUSH1 0x2
0x17a EXP
0x17b SUB
0x17c SWAP1
0x17d SWAP2
0x17e AND
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x20
0x183 ADD
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 SWAP2
0x189 SUB
0x18a SWAP1
0x18b RETURN
---
0x170: JUMPDEST 
0x171: V137 = 0x40
0x173: V138 = M[0x40]
0x174: V139 = 0x1
0x176: V140 = 0xa0
0x178: V141 = 0x2
0x17a: V142 = EXP 0x2 0xa0
0x17b: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17e: V144 = AND V448 0xffffffffffffffffffffffffffffffffffffffff
0x180: M[V138] = V144
0x181: V145 = 0x20
0x183: V146 = ADD 0x20 V138
0x184: V147 = 0x40
0x186: V148 = M[0x40]
0x189: V149 = SUB V146 V148
0x18b: RETURN V148 V149
---
Entry stack: [V12, 0x170, V448]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x170]

================================

Block 0x18c
[0x18c:0x192]
---
Predecessors: [0x5c]
Successors: [0x193, 0x197]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18c: JUMPDEST 
0x18d: V150 = CALLVALUE
0x18e: V151 = ISZERO V150
0x18f: V152 = 0x197
0x192: JUMPI 0x197 V151
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18c]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V153 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x197
[0x197:0x1d8]
---
Predecessors: [0x18c]
Successors: [0x472]
---
0x197 JUMPDEST
0x198 PUSH2 0x84
0x19b PUSH1 0x1
0x19d PUSH1 0xa0
0x19f PUSH1 0x2
0x1a1 EXP
0x1a2 SUB
0x1a3 PUSH1 0x4
0x1a5 CALLDATALOAD
0x1a6 DUP2
0x1a7 AND
0x1a8 SWAP1
0x1a9 PUSH1 0x24
0x1ab CALLDATALOAD
0x1ac SWAP1
0x1ad PUSH1 0x44
0x1af CALLDATALOAD
0x1b0 DUP2
0x1b1 AND
0x1b2 SWAP1
0x1b3 PUSH1 0x64
0x1b5 CALLDATALOAD
0x1b6 SWAP1
0x1b7 PUSH1 0x84
0x1b9 CALLDATALOAD
0x1ba SWAP1
0x1bb PUSH1 0xa4
0x1bd CALLDATALOAD
0x1be SWAP1
0x1bf PUSH1 0xc4
0x1c1 CALLDATALOAD
0x1c2 AND
0x1c3 PUSH1 0xff
0x1c5 PUSH1 0xe4
0x1c7 CALLDATALOAD
0x1c8 AND
0x1c9 PUSH2 0x104
0x1cc CALLDATALOAD
0x1cd PUSH2 0x124
0x1d0 CALLDATALOAD
0x1d1 PUSH2 0x144
0x1d4 CALLDATALOAD
0x1d5 PUSH2 0x472
0x1d8 JUMP
---
0x197: JUMPDEST 
0x198: V154 = 0x84
0x19b: V155 = 0x1
0x19d: V156 = 0xa0
0x19f: V157 = 0x2
0x1a1: V158 = EXP 0x2 0xa0
0x1a2: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a3: V160 = 0x4
0x1a5: V161 = CALLDATALOAD 0x4
0x1a7: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1a9: V163 = 0x24
0x1ab: V164 = CALLDATALOAD 0x24
0x1ad: V165 = 0x44
0x1af: V166 = CALLDATALOAD 0x44
0x1b1: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1b3: V168 = 0x64
0x1b5: V169 = CALLDATALOAD 0x64
0x1b7: V170 = 0x84
0x1b9: V171 = CALLDATALOAD 0x84
0x1bb: V172 = 0xa4
0x1bd: V173 = CALLDATALOAD 0xa4
0x1bf: V174 = 0xc4
0x1c1: V175 = CALLDATALOAD 0xc4
0x1c2: V176 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V177 = 0xff
0x1c5: V178 = 0xe4
0x1c7: V179 = CALLDATALOAD 0xe4
0x1c8: V180 = AND V179 0xff
0x1c9: V181 = 0x104
0x1cc: V182 = CALLDATALOAD 0x104
0x1cd: V183 = 0x124
0x1d0: V184 = CALLDATALOAD 0x124
0x1d1: V185 = 0x144
0x1d4: V186 = CALLDATALOAD 0x144
0x1d5: V187 = 0x472
0x1d8: JUMP 0x472
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186]
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186]

================================

Block 0x1d9
[0x1d9:0x1da]
---
Predecessors: []
Successors: []
---
0x1d9 JUMPDEST
0x1da STOP
---
0x1d9: JUMPDEST 
0x1da: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x67]
Successors: [0x81]
---
0x1db JUMPDEST
0x1dc PUSH2 0x84
0x1df PUSH2 0x81
0x1e2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V188 = 0x84
0x1df: V189 = 0x81
0x1e2: JUMP 0x81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0x1e3
[0x1e3:0x1e4]
---
Predecessors: []
Successors: []
---
0x1e3 JUMPDEST
0x1e4 STOP
---
0x1e3: JUMPDEST 
0x1e4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e5
[0x1e5:0x1eb]
---
Predecessors: [0x72]
Successors: [0x1ec, 0x1f0]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 ISZERO
0x1e8 PUSH2 0x1f0
0x1eb JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V190 = CALLVALUE
0x1e7: V191 = ISZERO V190
0x1e8: V192 = 0x1f0
0x1eb: JUMPI 0x1f0 V191
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ec
[0x1ec:0x1ef]
---
Predecessors: [0x1e5]
Successors: []
---
0x1ec PUSH1 0x0
0x1ee DUP1
0x1ef REVERT
---
0x1ec: V193 = 0x0
0x1ef: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f0
[0x1f0:0x1fa]
---
Predecessors: [0x1e5]
Successors: [0x6ab]
---
0x1f0 JUMPDEST
0x1f1 PUSH2 0x84
0x1f4 PUSH1 0x4
0x1f6 CALLDATALOAD
0x1f7 PUSH2 0x6ab
0x1fa JUMP
---
0x1f0: JUMPDEST 
0x1f1: V194 = 0x84
0x1f4: V195 = 0x4
0x1f6: V196 = CALLDATALOAD 0x4
0x1f7: V197 = 0x6ab
0x1fa: JUMP 0x6ab
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V196]
Exit stack: [V12, 0x84, V196]

================================

Block 0x1fb
[0x1fb:0x1fc]
---
Predecessors: []
Successors: []
---
0x1fb JUMPDEST
0x1fc STOP
---
0x1fb: JUMPDEST 
0x1fc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1fd
[0x1fd:0x214]
---
Predecessors: [0x91]
Successors: [0x215, 0x219]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x0
0x200 DUP1
0x201 SLOAD
0x202 CALLER
0x203 PUSH1 0x1
0x205 PUSH1 0xa0
0x207 PUSH1 0x2
0x209 EXP
0x20a SUB
0x20b SWAP1
0x20c DUP2
0x20d AND
0x20e SWAP2
0x20f AND
0x210 EQ
0x211 PUSH2 0x219
0x214 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V198 = 0x0
0x201: V199 = S[0x0]
0x202: V200 = CALLER
0x203: V201 = 0x1
0x205: V202 = 0xa0
0x207: V203 = 0x2
0x209: V204 = EXP 0x2 0xa0
0x20a: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20d: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x20f: V207 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x210: V208 = EQ V207 V206
0x211: V209 = 0x219
0x214: JUMPI 0x219 V208
---
Entry stack: [V12, 0x84, V47]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x84, V47, 0x0]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x1fd]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V210 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V47, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V47, 0x0]

================================

Block 0x219
[0x219:0x255]
---
Predecessors: [0x1fd]
Successors: [0x256, 0x25a]
---
0x219 JUMPDEST
0x21a POP
0x21b PUSH1 0x1
0x21d SLOAD
0x21e PUSH1 0x1
0x220 PUSH1 0xa0
0x222 PUSH1 0x2
0x224 EXP
0x225 SUB
0x226 AND
0x227 DUP1
0x228 PUSH4 0xd0e30db0
0x22d DUP4
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP3
0x232 PUSH4 0xffffffff
0x237 AND
0x238 PUSH1 0xe0
0x23a PUSH1 0x2
0x23c EXP
0x23d MUL
0x23e DUP2
0x23f MSTORE
0x240 PUSH1 0x4
0x242 ADD
0x243 PUSH1 0x0
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 DUP4
0x24a SUB
0x24b DUP2
0x24c DUP6
0x24d DUP9
0x24e DUP1
0x24f EXTCODESIZE
0x250 ISZERO
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x219: JUMPDEST 
0x21b: V211 = 0x1
0x21d: V212 = S[0x1]
0x21e: V213 = 0x1
0x220: V214 = 0xa0
0x222: V215 = 0x2
0x224: V216 = EXP 0x2 0xa0
0x225: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x226: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x228: V219 = 0xd0e30db0
0x22e: V220 = 0x40
0x230: V221 = M[0x40]
0x232: V222 = 0xffffffff
0x237: V223 = AND 0xffffffff 0xd0e30db0
0x238: V224 = 0xe0
0x23a: V225 = 0x2
0x23c: V226 = EXP 0x2 0xe0
0x23d: V227 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x23f: M[V221] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x240: V228 = 0x4
0x242: V229 = ADD 0x4 V221
0x243: V230 = 0x0
0x245: V231 = 0x40
0x247: V232 = M[0x40]
0x24a: V233 = SUB V229 V232
0x24f: V234 = EXTCODESIZE V218
0x250: V235 = ISZERO V234
0x251: V236 = ISZERO V235
0x252: V237 = 0x25a
0x255: JUMPI 0x25a V236
---
Entry stack: [V12, 0x84, V47, 0x0]
Stack pops: 2
Stack additions: [S1, V218, V218, 0xd0e30db0, S1, V229, 0x0, V232, V233, V232, S1, V218]
Exit stack: [V12, 0x84, V47, V218, V218, 0xd0e30db0, V47, V229, 0x0, V232, V233, V232, V47, V218]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x219]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V238 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V47, V218, V218, 0xd0e30db0, V47, V229, 0x0, V232, V233, V232, V47, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V47, V218, V218, 0xd0e30db0, V47, V229, 0x0, V232, V233, V232, V47, V218]

================================

Block 0x25a
[0x25a:0x266]
---
Predecessors: [0x219]
Successors: [0x267, 0x26b]
---
0x25a JUMPDEST
0x25b PUSH2 0x25ee
0x25e GAS
0x25f SUB
0x260 CALL
0x261 ISZERO
0x262 ISZERO
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x25a: JUMPDEST 
0x25b: V239 = 0x25ee
0x25e: V240 = GAS
0x25f: V241 = SUB V240 0x25ee
0x260: V242 = CALL V241 V218 V47 V232 V233 V232 0x0
0x261: V243 = ISZERO V242
0x262: V244 = ISZERO V243
0x263: V245 = 0x26b
0x266: JUMPI 0x26b V244
---
Entry stack: [V12, 0x84, V47, V218, V218, 0xd0e30db0, V47, V229, 0x0, V232, V233, V232, V47, V218]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, V47, V218, V218, 0xd0e30db0, V47, V229]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x25a]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V246 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V47, V218, V218, 0xd0e30db0, V47, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V47, V218, V218, 0xd0e30db0, V47, V229]

================================

Block 0x26b
[0x26b:0x26f]
---
Predecessors: [0x25a]
Successors: [0x270]
---
0x26b JUMPDEST
0x26c POP
0x26d POP
0x26e POP
0x26f POP
---
0x26b: JUMPDEST 
---
Entry stack: [V12, 0x84, V47, V218, V218, 0xd0e30db0, V47, V229]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x84, V47, V218]

================================

Block 0x270
[0x270:0x270]
---
Predecessors: [0x26b]
Successors: [0x271]
---
0x270 JUMPDEST
---
0x270: JUMPDEST 
---
Entry stack: [V12, 0x84, V47, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V47, V218]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x270]
Successors: [0x84]
---
0x271 JUMPDEST
0x272 POP
0x273 POP
0x274 JUMP
---
0x271: JUMPDEST 
0x274: JUMP 0x84
---
Entry stack: [V12, 0x84, V47, V218]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x275
[0x275:0x28b]
---
Predecessors: [0xa9]
Successors: [0x28c, 0x290]
---
0x275 JUMPDEST
0x276 PUSH1 0x0
0x278 SLOAD
0x279 CALLER
0x27a PUSH1 0x1
0x27c PUSH1 0xa0
0x27e PUSH1 0x2
0x280 EXP
0x281 SUB
0x282 SWAP1
0x283 DUP2
0x284 AND
0x285 SWAP2
0x286 AND
0x287 EQ
0x288 PUSH2 0x290
0x28b JUMPI
---
0x275: JUMPDEST 
0x276: V247 = 0x0
0x278: V248 = S[0x0]
0x279: V249 = CALLER
0x27a: V250 = 0x1
0x27c: V251 = 0xa0
0x27e: V252 = 0x2
0x280: V253 = EXP 0x2 0xa0
0x281: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x286: V256 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x287: V257 = EQ V256 V255
0x288: V258 = 0x290
0x28b: JUMPI 0x290 V257
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x275]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V259 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x290
[0x290:0x2be]
---
Predecessors: [0x275]
Successors: [0x2bf, 0x2c3]
---
0x290 JUMPDEST
0x291 PUSH1 0x0
0x293 SLOAD
0x294 PUSH1 0x1
0x296 PUSH1 0xa0
0x298 PUSH1 0x2
0x29a EXP
0x29b SUB
0x29c AND
0x29d DUP2
0x29e ISZERO
0x29f PUSH2 0x8fc
0x2a2 MUL
0x2a3 DUP3
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 PUSH1 0x0
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP1
0x2ad DUP4
0x2ae SUB
0x2af DUP2
0x2b0 DUP6
0x2b1 DUP9
0x2b2 DUP9
0x2b3 CALL
0x2b4 SWAP4
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 POP
0x2b9 ISZERO
0x2ba ISZERO
0x2bb PUSH2 0x2c3
0x2be JUMPI
---
0x290: JUMPDEST 
0x291: V260 = 0x0
0x293: V261 = S[0x0]
0x294: V262 = 0x1
0x296: V263 = 0xa0
0x298: V264 = 0x2
0x29a: V265 = EXP 0x2 0xa0
0x29b: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x29e: V268 = ISZERO V55
0x29f: V269 = 0x8fc
0x2a2: V270 = MUL 0x8fc V268
0x2a4: V271 = 0x40
0x2a6: V272 = M[0x40]
0x2a7: V273 = 0x0
0x2a9: V274 = 0x40
0x2ab: V275 = M[0x40]
0x2ae: V276 = SUB V272 V275
0x2b3: V277 = CALL V270 V267 V55 V275 V276 V275 0x0
0x2b9: V278 = ISZERO V277
0x2ba: V279 = ISZERO V278
0x2bb: V280 = 0x2c3
0x2be: JUMPI 0x2c3 V279
---
Entry stack: [V12, 0x84, V55]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x84, V55]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x290]
Successors: []
---
0x2bf PUSH1 0x0
0x2c1 DUP1
0x2c2 REVERT
---
0x2bf: V281 = 0x0
0x2c2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x2c3
[0x2c3:0x2c3]
---
Predecessors: [0x290]
Successors: [0x2c4]
---
0x2c3 JUMPDEST
---
0x2c3: JUMPDEST 
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x2c4
[0x2c4:0x2c4]
---
Predecessors: [0x2c3]
Successors: [0x2c5]
---
0x2c4 JUMPDEST
---
0x2c4: JUMPDEST 
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x2c5
[0x2c5:0x2c7]
---
Predecessors: [0x2c4]
Successors: [0x84]
---
0x2c5 JUMPDEST
0x2c6 POP
0x2c7 JUMP
---
0x2c5: JUMPDEST 
0x2c7: JUMP 0x84
---
Entry stack: [V12, 0x84, V55]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2de]
---
Predecessors: [0xc1]
Successors: [0x2df, 0x2e3]
---
0x2c8 JUMPDEST
0x2c9 PUSH1 0x0
0x2cb SLOAD
0x2cc CALLER
0x2cd PUSH1 0x1
0x2cf PUSH1 0xa0
0x2d1 PUSH1 0x2
0x2d3 EXP
0x2d4 SUB
0x2d5 SWAP1
0x2d6 DUP2
0x2d7 AND
0x2d8 SWAP2
0x2d9 AND
0x2da EQ
0x2db PUSH2 0x2e3
0x2de JUMPI
---
0x2c8: JUMPDEST 
0x2c9: V282 = 0x0
0x2cb: V283 = S[0x0]
0x2cc: V284 = CALLER
0x2cd: V285 = 0x1
0x2cf: V286 = 0xa0
0x2d1: V287 = 0x2
0x2d3: V288 = EXP 0x2 0xa0
0x2d4: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x2d9: V291 = AND V283 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V292 = EQ V291 V290
0x2db: V293 = 0x2e3
0x2de: JUMPI 0x2e3 V292
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x2df
[0x2df:0x2e2]
---
Predecessors: [0x2c8]
Successors: []
---
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 REVERT
---
0x2df: V294 = 0x0
0x2e2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x2e3
[0x2e3:0x2f0]
---
Predecessors: [0x2c8]
Successors: []
---
0x2e3 JUMPDEST
0x2e4 PUSH1 0x0
0x2e6 SLOAD
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0xa0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee SUB
0x2ef AND
0x2f0 SELFDESTRUCT
---
0x2e3: JUMPDEST 
0x2e4: V295 = 0x0
0x2e6: V296 = S[0x0]
0x2e7: V297 = 0x1
0x2e9: V298 = 0xa0
0x2eb: V299 = 0x2
0x2ed: V300 = EXP 0x2 0xa0
0x2ee: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ef: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x2f0: SELFDESTRUCT V302
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x2f1
[0x2f1:0x2f1]
---
Predecessors: []
Successors: [0x2f2]
---
0x2f1 JUMPDEST
---
0x2f1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f2
[0x2f2:0x2f3]
---
Predecessors: [0x2f1]
Successors: []
Has unresolved jump.
---
0x2f2 JUMPDEST
0x2f3 JUMP
---
0x2f2: JUMPDEST 
0x2f3: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f4
[0x2f4:0x3aa]
---
Predecessors: [0xd6]
Successors: [0x3ab, 0x3af]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x1
0x2f7 SLOAD
0x2f8 PUSH1 0x0
0x2fa SWAP1
0x2fb PUSH1 0x1
0x2fd PUSH1 0xa0
0x2ff PUSH1 0x2
0x301 EXP
0x302 SUB
0x303 AND
0x304 DUP1
0x305 PUSH4 0x6c86888b
0x30a DUP15
0x30b DUP15
0x30c DUP15
0x30d DUP15
0x30e DUP15
0x30f DUP15
0x310 DUP15
0x311 DUP15
0x312 DUP15
0x313 DUP15
0x314 DUP15
0x315 ADDRESS
0x316 DUP16
0x317 PUSH1 0x40
0x319 MLOAD
0x31a PUSH1 0x20
0x31c ADD
0x31d MSTORE
0x31e PUSH1 0x40
0x320 MLOAD
0x321 PUSH1 0xe0
0x323 PUSH1 0x2
0x325 EXP
0x326 PUSH4 0xffffffff
0x32b DUP16
0x32c AND
0x32d MUL
0x32e DUP2
0x32f MSTORE
0x330 PUSH1 0x1
0x332 PUSH1 0xa0
0x334 PUSH1 0x2
0x336 EXP
0x337 SUB
0x338 SWAP13
0x339 DUP14
0x33a AND
0x33b PUSH1 0x4
0x33d DUP3
0x33e ADD
0x33f MSTORE
0x340 PUSH1 0x24
0x342 DUP2
0x343 ADD
0x344 SWAP12
0x345 SWAP1
0x346 SWAP12
0x347 MSTORE
0x348 SWAP9
0x349 DUP12
0x34a AND
0x34b PUSH1 0x44
0x34d DUP12
0x34e ADD
0x34f MSTORE
0x350 PUSH1 0x64
0x352 DUP11
0x353 ADD
0x354 SWAP8
0x355 SWAP1
0x356 SWAP8
0x357 MSTORE
0x358 PUSH1 0x84
0x35a DUP10
0x35b ADD
0x35c SWAP6
0x35d SWAP1
0x35e SWAP6
0x35f MSTORE
0x360 PUSH1 0xa4
0x362 DUP9
0x363 ADD
0x364 SWAP4
0x365 SWAP1
0x366 SWAP4
0x367 MSTORE
0x368 SWAP1
0x369 DUP8
0x36a AND
0x36b PUSH1 0xc4
0x36d DUP8
0x36e ADD
0x36f MSTORE
0x370 PUSH1 0xff
0x372 AND
0x373 PUSH1 0xe4
0x375 DUP7
0x376 ADD
0x377 MSTORE
0x378 PUSH2 0x104
0x37b DUP6
0x37c ADD
0x37d MSTORE
0x37e PUSH2 0x124
0x381 DUP5
0x382 ADD
0x383 MSTORE
0x384 PUSH2 0x144
0x387 DUP4
0x388 ADD
0x389 MSTORE
0x38a SWAP1
0x38b SWAP2
0x38c AND
0x38d PUSH2 0x164
0x390 DUP3
0x391 ADD
0x392 MSTORE
0x393 PUSH2 0x184
0x396 ADD
0x397 PUSH1 0x20
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d DUP4
0x39e SUB
0x39f DUP2
0x3a0 PUSH1 0x0
0x3a2 DUP8
0x3a3 DUP1
0x3a4 EXTCODESIZE
0x3a5 ISZERO
0x3a6 ISZERO
0x3a7 PUSH2 0x3af
0x3aa JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V303 = 0x1
0x2f7: V304 = S[0x1]
0x2f8: V305 = 0x0
0x2fb: V306 = 0x1
0x2fd: V307 = 0xa0
0x2ff: V308 = 0x2
0x301: V309 = EXP 0x2 0xa0
0x302: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x303: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x305: V312 = 0x6c86888b
0x315: V313 = ADDRESS
0x317: V314 = 0x40
0x319: V315 = M[0x40]
0x31a: V316 = 0x20
0x31c: V317 = ADD 0x20 V315
0x31d: M[V317] = 0x0
0x31e: V318 = 0x40
0x320: V319 = M[0x40]
0x321: V320 = 0xe0
0x323: V321 = 0x2
0x325: V322 = EXP 0x2 0xe0
0x326: V323 = 0xffffffff
0x32c: V324 = AND 0x6c86888b 0xffffffff
0x32d: V325 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x32f: M[V319] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x330: V326 = 0x1
0x332: V327 = 0xa0
0x334: V328 = 0x2
0x336: V329 = EXP 0x2 0xa0
0x337: V330 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33a: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x33b: V332 = 0x4
0x33e: V333 = ADD V319 0x4
0x33f: M[V333] = V331
0x340: V334 = 0x24
0x343: V335 = ADD V319 0x24
0x347: M[V335] = V77
0x34a: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x34b: V337 = 0x44
0x34e: V338 = ADD V319 0x44
0x34f: M[V338] = V336
0x350: V339 = 0x64
0x353: V340 = ADD V319 0x64
0x357: M[V340] = V82
0x358: V341 = 0x84
0x35b: V342 = ADD V319 0x84
0x35f: M[V342] = V84
0x360: V343 = 0xa4
0x363: V344 = ADD V319 0xa4
0x367: M[V344] = V86
0x36a: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x36b: V346 = 0xc4
0x36e: V347 = ADD V319 0xc4
0x36f: M[V347] = V345
0x370: V348 = 0xff
0x372: V349 = AND 0xff V93
0x373: V350 = 0xe4
0x376: V351 = ADD V319 0xe4
0x377: M[V351] = V349
0x378: V352 = 0x104
0x37c: V353 = ADD V319 0x104
0x37d: M[V353] = V95
0x37e: V354 = 0x124
0x382: V355 = ADD V319 0x124
0x383: M[V355] = V97
0x384: V356 = 0x144
0x388: V357 = ADD V319 0x144
0x389: M[V357] = V99
0x38c: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x38d: V359 = 0x164
0x391: V360 = ADD V319 0x164
0x392: M[V360] = V358
0x393: V361 = 0x184
0x396: V362 = ADD 0x184 V319
0x397: V363 = 0x20
0x399: V364 = 0x40
0x39b: V365 = M[0x40]
0x39e: V366 = SUB V362 V365
0x3a0: V367 = 0x0
0x3a4: V368 = EXTCODESIZE V311
0x3a5: V369 = ISZERO V368
0x3a6: V370 = ISZERO V369
0x3a7: V371 = 0x3af
0x3aa: JUMPI 0x3af V370
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V311, V311, 0x6c86888b, V362, 0x20, V365, V366, V365, 0x0, V311]
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V311, V311, 0x6c86888b, V362, 0x20, V365, V366, V365, 0x0, V311]

================================

Block 0x3ab
[0x3ab:0x3ae]
---
Predecessors: [0x2f4]
Successors: []
---
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae REVERT
---
0x3ab: V372 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V311, V311, 0x6c86888b, V362, 0x20, V365, V366, V365, 0x0, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V311, V311, 0x6c86888b, V362, 0x20, V365, V366, V365, 0x0, V311]

================================

Block 0x3af
[0x3af:0x3bb]
---
Predecessors: [0x2f4]
Successors: [0x3bc, 0x3c0]
---
0x3af JUMPDEST
0x3b0 PUSH2 0x2c6
0x3b3 GAS
0x3b4 SUB
0x3b5 CALL
0x3b6 ISZERO
0x3b7 ISZERO
0x3b8 PUSH2 0x3c0
0x3bb JUMPI
---
0x3af: JUMPDEST 
0x3b0: V373 = 0x2c6
0x3b3: V374 = GAS
0x3b4: V375 = SUB V374 0x2c6
0x3b5: V376 = CALL V375 V311 0x0 V365 V366 V365 0x20
0x3b6: V377 = ISZERO V376
0x3b7: V378 = ISZERO V377
0x3b8: V379 = 0x3c0
0x3bb: JUMPI 0x3c0 V378
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V311, V311, 0x6c86888b, V362, 0x20, V365, V366, V365, 0x0, V311]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V311, V311, 0x6c86888b, V362]

================================

Block 0x3bc
[0x3bc:0x3bf]
---
Predecessors: [0x3af]
Successors: []
---
0x3bc PUSH1 0x0
0x3be DUP1
0x3bf REVERT
---
0x3bc: V380 = 0x0
0x3bf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V311, V311, 0x6c86888b, V362]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V311, V311, 0x6c86888b, V362]

================================

Block 0x3c0
[0x3c0:0x3cb]
---
Predecessors: [0x3af]
Successors: [0x3cc]
---
0x3c0 JUMPDEST
0x3c1 POP
0x3c2 POP
0x3c3 POP
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 DUP1
0x3c8 MLOAD
0x3c9 SWAP3
0x3ca POP
0x3cb POP
---
0x3c0: JUMPDEST 
0x3c4: V381 = 0x40
0x3c6: V382 = M[0x40]
0x3c8: V383 = M[V382]
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V311, V311, 0x6c86888b, V362]
Stack pops: 5
Stack additions: [V383, S3]
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, V383, V311]

================================

Block 0x3cc
[0x3cc:0x3db]
---
Predecessors: [0x3c0]
Successors: [0x118]
---
0x3cc JUMPDEST
0x3cd POP
0x3ce SWAP12
0x3cf SWAP11
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 POP
0x3d5 POP
0x3d6 POP
0x3d7 POP
0x3d8 POP
0x3d9 POP
0x3da POP
0x3db JUMP
---
0x3cc: JUMPDEST 
0x3db: JUMP 0x118
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, V383, V311]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V383]

================================

Block 0x3dc
[0x3dc:0x43b]
---
Predecessors: [0x137]
Successors: [0x43c, 0x440]
---
0x3dc JUMPDEST
0x3dd PUSH1 0x1
0x3df SLOAD
0x3e0 PUSH1 0x0
0x3e2 SWAP1
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb AND
0x3ec DUP1
0x3ed PUSH4 0xf7888aec
0x3f2 DUP5
0x3f3 ADDRESS
0x3f4 DUP6
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 PUSH1 0x20
0x3fa ADD
0x3fb MSTORE
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff PUSH1 0xe0
0x401 PUSH1 0x2
0x403 EXP
0x404 PUSH4 0xffffffff
0x409 DUP6
0x40a AND
0x40b MUL
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x1
0x410 PUSH1 0xa0
0x412 PUSH1 0x2
0x414 EXP
0x415 SUB
0x416 SWAP3
0x417 DUP4
0x418 AND
0x419 PUSH1 0x4
0x41b DUP3
0x41c ADD
0x41d MSTORE
0x41e SWAP2
0x41f AND
0x420 PUSH1 0x24
0x422 DUP3
0x423 ADD
0x424 MSTORE
0x425 PUSH1 0x44
0x427 ADD
0x428 PUSH1 0x20
0x42a PUSH1 0x40
0x42c MLOAD
0x42d DUP1
0x42e DUP4
0x42f SUB
0x430 DUP2
0x431 PUSH1 0x0
0x433 DUP8
0x434 DUP1
0x435 EXTCODESIZE
0x436 ISZERO
0x437 ISZERO
0x438 PUSH2 0x440
0x43b JUMPI
---
0x3dc: JUMPDEST 
0x3dd: V384 = 0x1
0x3df: V385 = S[0x1]
0x3e0: V386 = 0x0
0x3e3: V387 = 0x1
0x3e5: V388 = 0xa0
0x3e7: V389 = 0x2
0x3e9: V390 = EXP 0x2 0xa0
0x3ea: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3eb: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x3ed: V393 = 0xf7888aec
0x3f3: V394 = ADDRESS
0x3f5: V395 = 0x40
0x3f7: V396 = M[0x40]
0x3f8: V397 = 0x20
0x3fa: V398 = ADD 0x20 V396
0x3fb: M[V398] = 0x0
0x3fc: V399 = 0x40
0x3fe: V400 = M[0x40]
0x3ff: V401 = 0xe0
0x401: V402 = 0x2
0x403: V403 = EXP 0x2 0xe0
0x404: V404 = 0xffffffff
0x40a: V405 = AND 0xf7888aec 0xffffffff
0x40b: V406 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x40d: M[V400] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x40e: V407 = 0x1
0x410: V408 = 0xa0
0x412: V409 = 0x2
0x414: V410 = EXP 0x2 0xa0
0x415: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x418: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x419: V413 = 0x4
0x41c: V414 = ADD V400 0x4
0x41d: M[V414] = V412
0x41f: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x420: V416 = 0x24
0x423: V417 = ADD V400 0x24
0x424: M[V417] = V415
0x425: V418 = 0x44
0x427: V419 = ADD 0x44 V400
0x428: V420 = 0x20
0x42a: V421 = 0x40
0x42c: V422 = M[0x40]
0x42f: V423 = SUB V419 V422
0x431: V424 = 0x0
0x435: V425 = EXTCODESIZE V392
0x436: V426 = ISZERO V425
0x437: V427 = ISZERO V426
0x438: V428 = 0x440
0x43b: JUMPI 0x440 V427
---
Entry stack: [V12, 0x14b, V122]
Stack pops: 1
Stack additions: [S0, 0x0, V392, V392, 0xf7888aec, V419, 0x20, V422, V423, V422, 0x0, V392]
Exit stack: [V12, 0x14b, V122, 0x0, V392, V392, 0xf7888aec, V419, 0x20, V422, V423, V422, 0x0, V392]

================================

Block 0x43c
[0x43c:0x43f]
---
Predecessors: [0x3dc]
Successors: []
---
0x43c PUSH1 0x0
0x43e DUP1
0x43f REVERT
---
0x43c: V429 = 0x0
0x43f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V122, 0x0, V392, V392, 0xf7888aec, V419, 0x20, V422, V423, V422, 0x0, V392]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V122, 0x0, V392, V392, 0xf7888aec, V419, 0x20, V422, V423, V422, 0x0, V392]

================================

Block 0x440
[0x440:0x44c]
---
Predecessors: [0x3dc]
Successors: [0x44d, 0x451]
---
0x440 JUMPDEST
0x441 PUSH2 0x2c6
0x444 GAS
0x445 SUB
0x446 CALL
0x447 ISZERO
0x448 ISZERO
0x449 PUSH2 0x451
0x44c JUMPI
---
0x440: JUMPDEST 
0x441: V430 = 0x2c6
0x444: V431 = GAS
0x445: V432 = SUB V431 0x2c6
0x446: V433 = CALL V432 V392 0x0 V422 V423 V422 0x20
0x447: V434 = ISZERO V433
0x448: V435 = ISZERO V434
0x449: V436 = 0x451
0x44c: JUMPI 0x451 V435
---
Entry stack: [V12, 0x14b, V122, 0x0, V392, V392, 0xf7888aec, V419, 0x20, V422, V423, V422, 0x0, V392]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x14b, V122, 0x0, V392, V392, 0xf7888aec, V419]

================================

Block 0x44d
[0x44d:0x450]
---
Predecessors: [0x440]
Successors: []
---
0x44d PUSH1 0x0
0x44f DUP1
0x450 REVERT
---
0x44d: V437 = 0x0
0x450: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V122, 0x0, V392, V392, 0xf7888aec, V419]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V122, 0x0, V392, V392, 0xf7888aec, V419]

================================

Block 0x451
[0x451:0x45c]
---
Predecessors: [0x440]
Successors: [0x45d]
---
0x451 JUMPDEST
0x452 POP
0x453 POP
0x454 POP
0x455 PUSH1 0x40
0x457 MLOAD
0x458 DUP1
0x459 MLOAD
0x45a SWAP3
0x45b POP
0x45c POP
---
0x451: JUMPDEST 
0x455: V438 = 0x40
0x457: V439 = M[0x40]
0x459: V440 = M[V439]
---
Entry stack: [V12, 0x14b, V122, 0x0, V392, V392, 0xf7888aec, V419]
Stack pops: 5
Stack additions: [V440, S3]
Exit stack: [V12, 0x14b, V122, V440, V392]

================================

Block 0x45d
[0x45d:0x462]
---
Predecessors: [0x451]
Successors: [0x14b]
---
0x45d JUMPDEST
0x45e POP
0x45f SWAP2
0x460 SWAP1
0x461 POP
0x462 JUMP
---
0x45d: JUMPDEST 
0x462: JUMP 0x14b
---
Entry stack: [V12, 0x14b, V122, V440, V392]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V440]

================================

Block 0x463
[0x463:0x471]
---
Predecessors: [0x168]
Successors: [0x170]
---
0x463 JUMPDEST
0x464 PUSH1 0x0
0x466 SLOAD
0x467 PUSH1 0x1
0x469 PUSH1 0xa0
0x46b PUSH1 0x2
0x46d EXP
0x46e SUB
0x46f AND
0x470 DUP2
0x471 JUMP
---
0x463: JUMPDEST 
0x464: V441 = 0x0
0x466: V442 = S[0x0]
0x467: V443 = 0x1
0x469: V444 = 0xa0
0x46b: V445 = 0x2
0x46d: V446 = EXP 0x2 0xa0
0x46e: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46f: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x471: JUMP 0x170
---
Entry stack: [V12, 0x170]
Stack pops: 1
Stack additions: [S0, V448]
Exit stack: [V12, 0x170, V448]

================================

Block 0x472
[0x472:0x489]
---
Predecessors: [0x197]
Successors: [0x48a, 0x48e]
---
0x472 JUMPDEST
0x473 PUSH1 0x0
0x475 DUP1
0x476 SLOAD
0x477 CALLER
0x478 PUSH1 0x1
0x47a PUSH1 0xa0
0x47c PUSH1 0x2
0x47e EXP
0x47f SUB
0x480 SWAP1
0x481 DUP2
0x482 AND
0x483 SWAP2
0x484 AND
0x485 EQ
0x486 PUSH2 0x48e
0x489 JUMPI
---
0x472: JUMPDEST 
0x473: V449 = 0x0
0x476: V450 = S[0x0]
0x477: V451 = CALLER
0x478: V452 = 0x1
0x47a: V453 = 0xa0
0x47c: V454 = 0x2
0x47e: V455 = EXP 0x2 0xa0
0x47f: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x482: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x484: V458 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0x485: V459 = EQ V458 V457
0x486: V460 = 0x48e
0x489: JUMPI 0x48e V459
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, 0x0]

================================

Block 0x48a
[0x48a:0x48d]
---
Predecessors: [0x472]
Successors: []
---
0x48a PUSH1 0x0
0x48c DUP1
0x48d REVERT
---
0x48a: V461 = 0x0
0x48d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, 0x0]

================================

Block 0x48e
[0x48e:0x543]
---
Predecessors: [0x472]
Successors: [0x544, 0x548]
---
0x48e JUMPDEST
0x48f POP
0x490 PUSH1 0x1
0x492 SLOAD
0x493 PUSH1 0x1
0x495 PUSH1 0xa0
0x497 PUSH1 0x2
0x499 EXP
0x49a SUB
0x49b AND
0x49c DUP1
0x49d PUSH4 0x6c86888b
0x4a2 DUP14
0x4a3 DUP14
0x4a4 DUP14
0x4a5 DUP14
0x4a6 DUP14
0x4a7 DUP14
0x4a8 DUP14
0x4a9 DUP14
0x4aa DUP14
0x4ab DUP14
0x4ac DUP14
0x4ad ADDRESS
0x4ae PUSH1 0x0
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 PUSH1 0x20
0x4b5 ADD
0x4b6 MSTORE
0x4b7 PUSH1 0x40
0x4b9 MLOAD
0x4ba PUSH1 0xe0
0x4bc PUSH1 0x2
0x4be EXP
0x4bf PUSH4 0xffffffff
0x4c4 DUP16
0x4c5 AND
0x4c6 MUL
0x4c7 DUP2
0x4c8 MSTORE
0x4c9 PUSH1 0x1
0x4cb PUSH1 0xa0
0x4cd PUSH1 0x2
0x4cf EXP
0x4d0 SUB
0x4d1 SWAP13
0x4d2 DUP14
0x4d3 AND
0x4d4 PUSH1 0x4
0x4d6 DUP3
0x4d7 ADD
0x4d8 MSTORE
0x4d9 PUSH1 0x24
0x4db DUP2
0x4dc ADD
0x4dd SWAP12
0x4de SWAP1
0x4df SWAP12
0x4e0 MSTORE
0x4e1 SWAP9
0x4e2 DUP12
0x4e3 AND
0x4e4 PUSH1 0x44
0x4e6 DUP12
0x4e7 ADD
0x4e8 MSTORE
0x4e9 PUSH1 0x64
0x4eb DUP11
0x4ec ADD
0x4ed SWAP8
0x4ee SWAP1
0x4ef SWAP8
0x4f0 MSTORE
0x4f1 PUSH1 0x84
0x4f3 DUP10
0x4f4 ADD
0x4f5 SWAP6
0x4f6 SWAP1
0x4f7 SWAP6
0x4f8 MSTORE
0x4f9 PUSH1 0xa4
0x4fb DUP9
0x4fc ADD
0x4fd SWAP4
0x4fe SWAP1
0x4ff SWAP4
0x500 MSTORE
0x501 SWAP1
0x502 DUP8
0x503 AND
0x504 PUSH1 0xc4
0x506 DUP8
0x507 ADD
0x508 MSTORE
0x509 PUSH1 0xff
0x50b AND
0x50c PUSH1 0xe4
0x50e DUP7
0x50f ADD
0x510 MSTORE
0x511 PUSH2 0x104
0x514 DUP6
0x515 ADD
0x516 MSTORE
0x517 PUSH2 0x124
0x51a DUP5
0x51b ADD
0x51c MSTORE
0x51d PUSH2 0x144
0x520 DUP4
0x521 ADD
0x522 MSTORE
0x523 SWAP1
0x524 SWAP2
0x525 AND
0x526 PUSH2 0x164
0x529 DUP3
0x52a ADD
0x52b MSTORE
0x52c PUSH2 0x184
0x52f ADD
0x530 PUSH1 0x20
0x532 PUSH1 0x40
0x534 MLOAD
0x535 DUP1
0x536 DUP4
0x537 SUB
0x538 DUP2
0x539 PUSH1 0x0
0x53b DUP8
0x53c DUP1
0x53d EXTCODESIZE
0x53e ISZERO
0x53f ISZERO
0x540 PUSH2 0x548
0x543 JUMPI
---
0x48e: JUMPDEST 
0x490: V462 = 0x1
0x492: V463 = S[0x1]
0x493: V464 = 0x1
0x495: V465 = 0xa0
0x497: V466 = 0x2
0x499: V467 = EXP 0x2 0xa0
0x49a: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49b: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V463
0x49d: V470 = 0x6c86888b
0x4ad: V471 = ADDRESS
0x4ae: V472 = 0x0
0x4b0: V473 = 0x40
0x4b2: V474 = M[0x40]
0x4b3: V475 = 0x20
0x4b5: V476 = ADD 0x20 V474
0x4b6: M[V476] = 0x0
0x4b7: V477 = 0x40
0x4b9: V478 = M[0x40]
0x4ba: V479 = 0xe0
0x4bc: V480 = 0x2
0x4be: V481 = EXP 0x2 0xe0
0x4bf: V482 = 0xffffffff
0x4c5: V483 = AND 0x6c86888b 0xffffffff
0x4c6: V484 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x4c8: M[V478] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x4c9: V485 = 0x1
0x4cb: V486 = 0xa0
0x4cd: V487 = 0x2
0x4cf: V488 = EXP 0x2 0xa0
0x4d0: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d3: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x4d4: V491 = 0x4
0x4d7: V492 = ADD V478 0x4
0x4d8: M[V492] = V490
0x4d9: V493 = 0x24
0x4dc: V494 = ADD V478 0x24
0x4e0: M[V494] = V164
0x4e3: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x4e4: V496 = 0x44
0x4e7: V497 = ADD V478 0x44
0x4e8: M[V497] = V495
0x4e9: V498 = 0x64
0x4ec: V499 = ADD V478 0x64
0x4f0: M[V499] = V169
0x4f1: V500 = 0x84
0x4f4: V501 = ADD V478 0x84
0x4f8: M[V501] = V171
0x4f9: V502 = 0xa4
0x4fc: V503 = ADD V478 0xa4
0x500: M[V503] = V173
0x503: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x504: V505 = 0xc4
0x507: V506 = ADD V478 0xc4
0x508: M[V506] = V504
0x509: V507 = 0xff
0x50b: V508 = AND 0xff V180
0x50c: V509 = 0xe4
0x50f: V510 = ADD V478 0xe4
0x510: M[V510] = V508
0x511: V511 = 0x104
0x515: V512 = ADD V478 0x104
0x516: M[V512] = V182
0x517: V513 = 0x124
0x51b: V514 = ADD V478 0x124
0x51c: M[V514] = V184
0x51d: V515 = 0x144
0x521: V516 = ADD V478 0x144
0x522: M[V516] = V186
0x525: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x526: V518 = 0x164
0x52a: V519 = ADD V478 0x164
0x52b: M[V519] = V517
0x52c: V520 = 0x184
0x52f: V521 = ADD 0x184 V478
0x530: V522 = 0x20
0x532: V523 = 0x40
0x534: V524 = M[0x40]
0x537: V525 = SUB V521 V524
0x539: V526 = 0x0
0x53d: V527 = EXTCODESIZE V469
0x53e: V528 = ISZERO V527
0x53f: V529 = ISZERO V528
0x540: V530 = 0x548
0x543: JUMPI 0x548 V529
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V469, V469, 0x6c86888b, V521, 0x20, V524, V525, V524, 0x0, V469]
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V469, 0x6c86888b, V521, 0x20, V524, V525, V524, 0x0, V469]

================================

Block 0x544
[0x544:0x547]
---
Predecessors: [0x48e]
Successors: []
---
0x544 PUSH1 0x0
0x546 DUP1
0x547 REVERT
---
0x544: V531 = 0x0
0x547: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V469, 0x6c86888b, V521, 0x20, V524, V525, V524, 0x0, V469]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V469, 0x6c86888b, V521, 0x20, V524, V525, V524, 0x0, V469]

================================

Block 0x548
[0x548:0x554]
---
Predecessors: [0x48e]
Successors: [0x555, 0x559]
---
0x548 JUMPDEST
0x549 PUSH2 0x2c6
0x54c GAS
0x54d SUB
0x54e CALL
0x54f ISZERO
0x550 ISZERO
0x551 PUSH2 0x559
0x554 JUMPI
---
0x548: JUMPDEST 
0x549: V532 = 0x2c6
0x54c: V533 = GAS
0x54d: V534 = SUB V533 0x2c6
0x54e: V535 = CALL V534 V469 0x0 V524 V525 V524 0x20
0x54f: V536 = ISZERO V535
0x550: V537 = ISZERO V536
0x551: V538 = 0x559
0x554: JUMPI 0x559 V537
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V469, 0x6c86888b, V521, 0x20, V524, V525, V524, 0x0, V469]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V469, 0x6c86888b, V521]

================================

Block 0x555
[0x555:0x558]
---
Predecessors: [0x548]
Successors: []
---
0x555 PUSH1 0x0
0x557 DUP1
0x558 REVERT
---
0x555: V539 = 0x0
0x558: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V469, 0x6c86888b, V521]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V469, 0x6c86888b, V521]

================================

Block 0x559
[0x559:0x568]
---
Predecessors: [0x548]
Successors: [0x569, 0x663]
---
0x559 JUMPDEST
0x55a POP
0x55b POP
0x55c POP
0x55d PUSH1 0x40
0x55f MLOAD
0x560 DUP1
0x561 MLOAD
0x562 SWAP1
0x563 POP
0x564 ISZERO
0x565 PUSH2 0x663
0x568 JUMPI
---
0x559: JUMPDEST 
0x55d: V540 = 0x40
0x55f: V541 = M[0x40]
0x561: V542 = M[V541]
0x564: V543 = ISZERO V542
0x565: V544 = 0x663
0x568: JUMPI 0x663 V543
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V469, 0x6c86888b, V521]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]

================================

Block 0x569
[0x569:0x645]
---
Predecessors: [0x559]
Successors: [0x646, 0x64a]
---
0x569 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x58a PUSH1 0x0
0x58c PUSH1 0x40
0x58e MLOAD
0x58f SWAP1
0x590 DUP2
0x591 MSTORE
0x592 PUSH1 0x20
0x594 ADD
0x595 PUSH1 0x40
0x597 MLOAD
0x598 DUP1
0x599 SWAP2
0x59a SUB
0x59b SWAP1
0x59c LOG1
0x59d DUP1
0x59e PUSH1 0x1
0x5a0 PUSH1 0xa0
0x5a2 PUSH1 0x2
0x5a4 EXP
0x5a5 SUB
0x5a6 AND
0x5a7 PUSH4 0xa19b14a
0x5ac DUP14
0x5ad DUP14
0x5ae DUP14
0x5af DUP14
0x5b0 DUP14
0x5b1 DUP14
0x5b2 DUP14
0x5b3 DUP14
0x5b4 DUP14
0x5b5 DUP14
0x5b6 DUP14
0x5b7 PUSH1 0x40
0x5b9 MLOAD
0x5ba PUSH1 0xe0
0x5bc PUSH1 0x2
0x5be EXP
0x5bf PUSH4 0xffffffff
0x5c4 DUP15
0x5c5 AND
0x5c6 MUL
0x5c7 DUP2
0x5c8 MSTORE
0x5c9 PUSH1 0x1
0x5cb PUSH1 0xa0
0x5cd PUSH1 0x2
0x5cf EXP
0x5d0 SUB
0x5d1 SWAP12
0x5d2 DUP13
0x5d3 AND
0x5d4 PUSH1 0x4
0x5d6 DUP3
0x5d7 ADD
0x5d8 MSTORE
0x5d9 PUSH1 0x24
0x5db DUP2
0x5dc ADD
0x5dd SWAP11
0x5de SWAP1
0x5df SWAP11
0x5e0 MSTORE
0x5e1 SWAP8
0x5e2 DUP11
0x5e3 AND
0x5e4 PUSH1 0x44
0x5e6 DUP11
0x5e7 ADD
0x5e8 MSTORE
0x5e9 PUSH1 0x64
0x5eb DUP10
0x5ec ADD
0x5ed SWAP7
0x5ee SWAP1
0x5ef SWAP7
0x5f0 MSTORE
0x5f1 PUSH1 0x84
0x5f3 DUP9
0x5f4 ADD
0x5f5 SWAP5
0x5f6 SWAP1
0x5f7 SWAP5
0x5f8 MSTORE
0x5f9 PUSH1 0xa4
0x5fb DUP8
0x5fc ADD
0x5fd SWAP3
0x5fe SWAP1
0x5ff SWAP3
0x600 MSTORE
0x601 SWAP1
0x602 SWAP6
0x603 AND
0x604 PUSH1 0xc4
0x606 DUP6
0x607 ADD
0x608 MSTORE
0x609 PUSH1 0xff
0x60b SWAP1
0x60c SWAP5
0x60d AND
0x60e PUSH1 0xe4
0x610 DUP5
0x611 ADD
0x612 MSTORE
0x613 PUSH2 0x104
0x616 DUP4
0x617 ADD
0x618 SWAP4
0x619 SWAP1
0x61a SWAP4
0x61b MSTORE
0x61c PUSH2 0x124
0x61f DUP3
0x620 ADD
0x621 SWAP3
0x622 SWAP1
0x623 SWAP3
0x624 MSTORE
0x625 PUSH2 0x144
0x628 DUP2
0x629 ADD
0x62a SWAP2
0x62b SWAP1
0x62c SWAP2
0x62d MSTORE
0x62e PUSH2 0x164
0x631 ADD
0x632 PUSH1 0x0
0x634 PUSH1 0x40
0x636 MLOAD
0x637 DUP1
0x638 DUP4
0x639 SUB
0x63a DUP2
0x63b PUSH1 0x0
0x63d DUP8
0x63e DUP1
0x63f EXTCODESIZE
0x640 ISZERO
0x641 ISZERO
0x642 PUSH2 0x64a
0x645 JUMPI
---
0x569: V545 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x58a: V546 = 0x0
0x58c: V547 = 0x40
0x58e: V548 = M[0x40]
0x591: M[V548] = 0x0
0x592: V549 = 0x20
0x594: V550 = ADD 0x20 V548
0x595: V551 = 0x40
0x597: V552 = M[0x40]
0x59a: V553 = SUB V550 V552
0x59c: LOG V552 V553 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x59e: V554 = 0x1
0x5a0: V555 = 0xa0
0x5a2: V556 = 0x2
0x5a4: V557 = EXP 0x2 0xa0
0x5a5: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a6: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x5a7: V560 = 0xa19b14a
0x5b7: V561 = 0x40
0x5b9: V562 = M[0x40]
0x5ba: V563 = 0xe0
0x5bc: V564 = 0x2
0x5be: V565 = EXP 0x2 0xe0
0x5bf: V566 = 0xffffffff
0x5c5: V567 = AND 0xa19b14a 0xffffffff
0x5c6: V568 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x5c8: M[V562] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x5c9: V569 = 0x1
0x5cb: V570 = 0xa0
0x5cd: V571 = 0x2
0x5cf: V572 = EXP 0x2 0xa0
0x5d0: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d3: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x5d4: V575 = 0x4
0x5d7: V576 = ADD V562 0x4
0x5d8: M[V576] = V574
0x5d9: V577 = 0x24
0x5dc: V578 = ADD V562 0x24
0x5e0: M[V578] = V164
0x5e3: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x5e4: V580 = 0x44
0x5e7: V581 = ADD V562 0x44
0x5e8: M[V581] = V579
0x5e9: V582 = 0x64
0x5ec: V583 = ADD V562 0x64
0x5f0: M[V583] = V169
0x5f1: V584 = 0x84
0x5f4: V585 = ADD V562 0x84
0x5f8: M[V585] = V171
0x5f9: V586 = 0xa4
0x5fc: V587 = ADD V562 0xa4
0x600: M[V587] = V173
0x603: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x604: V589 = 0xc4
0x607: V590 = ADD V562 0xc4
0x608: M[V590] = V588
0x609: V591 = 0xff
0x60d: V592 = AND V180 0xff
0x60e: V593 = 0xe4
0x611: V594 = ADD V562 0xe4
0x612: M[V594] = V592
0x613: V595 = 0x104
0x617: V596 = ADD V562 0x104
0x61b: M[V596] = V182
0x61c: V597 = 0x124
0x620: V598 = ADD V562 0x124
0x624: M[V598] = V184
0x625: V599 = 0x144
0x629: V600 = ADD V562 0x144
0x62d: M[V600] = V186
0x62e: V601 = 0x164
0x631: V602 = ADD 0x164 V562
0x632: V603 = 0x0
0x634: V604 = 0x40
0x636: V605 = M[0x40]
0x639: V606 = SUB V602 V605
0x63b: V607 = 0x0
0x63f: V608 = EXTCODESIZE V559
0x640: V609 = ISZERO V608
0x641: V610 = ISZERO V609
0x642: V611 = 0x64a
0x645: JUMPI 0x64a V610
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V559, 0xa19b14a, V602, 0x0, V605, V606, V605, 0x0, V559]
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V559, 0xa19b14a, V602, 0x0, V605, V606, V605, 0x0, V559]

================================

Block 0x646
[0x646:0x649]
---
Predecessors: [0x569]
Successors: []
---
0x646 PUSH1 0x0
0x648 DUP1
0x649 REVERT
---
0x646: V612 = 0x0
0x649: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V559, 0xa19b14a, V602, 0x0, V605, V606, V605, 0x0, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V559, 0xa19b14a, V602, 0x0, V605, V606, V605, 0x0, V559]

================================

Block 0x64a
[0x64a:0x656]
---
Predecessors: [0x569]
Successors: [0x657, 0x65b]
---
0x64a JUMPDEST
0x64b PUSH2 0x2c6
0x64e GAS
0x64f SUB
0x650 CALL
0x651 ISZERO
0x652 ISZERO
0x653 PUSH2 0x65b
0x656 JUMPI
---
0x64a: JUMPDEST 
0x64b: V613 = 0x2c6
0x64e: V614 = GAS
0x64f: V615 = SUB V614 0x2c6
0x650: V616 = CALL V615 V559 0x0 V605 V606 V605 0x0
0x651: V617 = ISZERO V616
0x652: V618 = ISZERO V617
0x653: V619 = 0x65b
0x656: JUMPI 0x65b V618
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V559, 0xa19b14a, V602, 0x0, V605, V606, V605, 0x0, V559]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V559, 0xa19b14a, V602]

================================

Block 0x657
[0x657:0x65a]
---
Predecessors: [0x64a]
Successors: []
---
0x657 PUSH1 0x0
0x659 DUP1
0x65a REVERT
---
0x657: V620 = 0x0
0x65a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V559, 0xa19b14a, V602]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V559, 0xa19b14a, V602]

================================

Block 0x65b
[0x65b:0x662]
---
Predecessors: [0x64a]
Successors: [0x698]
---
0x65b JUMPDEST
0x65c POP
0x65d POP
0x65e POP
0x65f PUSH2 0x698
0x662 JUMP
---
0x65b: JUMPDEST 
0x65f: V621 = 0x698
0x662: JUMP 0x698
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469, V559, 0xa19b14a, V602]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]

================================

Block 0x663
[0x663:0x697]
---
Predecessors: [0x559]
Successors: [0x698]
---
0x663 JUMPDEST
0x664 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x685 PUSH1 0x1
0x687 PUSH1 0x40
0x689 MLOAD
0x68a SWAP1
0x68b DUP2
0x68c MSTORE
0x68d PUSH1 0x20
0x68f ADD
0x690 PUSH1 0x40
0x692 MLOAD
0x693 DUP1
0x694 SWAP2
0x695 SUB
0x696 SWAP1
0x697 LOG1
---
0x663: JUMPDEST 
0x664: V622 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x685: V623 = 0x1
0x687: V624 = 0x40
0x689: V625 = M[0x40]
0x68c: M[V625] = 0x1
0x68d: V626 = 0x20
0x68f: V627 = ADD 0x20 V625
0x690: V628 = 0x40
0x692: V629 = M[0x40]
0x695: V630 = SUB V627 V629
0x697: LOG V629 V630 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]

================================

Block 0x698
[0x698:0x698]
---
Predecessors: [0x65b, 0x663]
Successors: [0x699]
---
0x698 JUMPDEST
---
0x698: JUMPDEST 
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]

================================

Block 0x699
[0x699:0x699]
---
Predecessors: [0x698]
Successors: [0x69a]
---
0x699 JUMPDEST
---
0x699: JUMPDEST 
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]

================================

Block 0x69a
[0x69a:0x6a7]
---
Predecessors: [0x699]
Successors: [0x84]
---
0x69a JUMPDEST
0x69b POP
0x69c POP
0x69d POP
0x69e POP
0x69f POP
0x6a0 POP
0x6a1 POP
0x6a2 POP
0x6a3 POP
0x6a4 POP
0x6a5 POP
0x6a6 POP
0x6a7 JUMP
---
0x69a: JUMPDEST 
0x6a7: JUMP 0x84
---
Entry stack: [V12, 0x84, V162, V164, V167, V169, V171, V173, V176, V180, V182, V184, V186, V469]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x6a8
[0x6a8:0x6a8]
---
Predecessors: []
Successors: [0x6a9]
---
0x6a8 JUMPDEST
---
0x6a8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6a9
[0x6a9:0x6aa]
---
Predecessors: [0x6a8]
Successors: []
Has unresolved jump.
---
0x6a9 JUMPDEST
0x6aa JUMP
---
0x6a9: JUMPDEST 
0x6aa: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6ab
[0x6ab:0x6c2]
---
Predecessors: [0x1f0]
Successors: [0x6c3, 0x6c7]
---
0x6ab JUMPDEST
0x6ac PUSH1 0x0
0x6ae DUP1
0x6af SLOAD
0x6b0 CALLER
0x6b1 PUSH1 0x1
0x6b3 PUSH1 0xa0
0x6b5 PUSH1 0x2
0x6b7 EXP
0x6b8 SUB
0x6b9 SWAP1
0x6ba DUP2
0x6bb AND
0x6bc SWAP2
0x6bd AND
0x6be EQ
0x6bf PUSH2 0x6c7
0x6c2 JUMPI
---
0x6ab: JUMPDEST 
0x6ac: V631 = 0x0
0x6af: V632 = S[0x0]
0x6b0: V633 = CALLER
0x6b1: V634 = 0x1
0x6b3: V635 = 0xa0
0x6b5: V636 = 0x2
0x6b7: V637 = EXP 0x2 0xa0
0x6b8: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bb: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V633
0x6bd: V640 = AND V632 0xffffffffffffffffffffffffffffffffffffffff
0x6be: V641 = EQ V640 V639
0x6bf: V642 = 0x6c7
0x6c2: JUMPI 0x6c7 V641
---
Entry stack: [V12, 0x84, V196]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x84, V196, 0x0]

================================

Block 0x6c3
[0x6c3:0x6c6]
---
Predecessors: [0x6ab]
Successors: []
---
0x6c3 PUSH1 0x0
0x6c5 DUP1
0x6c6 REVERT
---
0x6c3: V643 = 0x0
0x6c6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V196, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V196, 0x0]

================================

Block 0x6c7
[0x6c7:0x70c]
---
Predecessors: [0x6ab]
Successors: [0x70d, 0x711]
---
0x6c7 JUMPDEST
0x6c8 POP
0x6c9 PUSH1 0x1
0x6cb SLOAD
0x6cc PUSH1 0x1
0x6ce PUSH1 0xa0
0x6d0 PUSH1 0x2
0x6d2 EXP
0x6d3 SUB
0x6d4 AND
0x6d5 DUP1
0x6d6 PUSH4 0x2e1a7d4d
0x6db DUP4
0x6dc PUSH1 0x40
0x6de MLOAD
0x6df PUSH1 0xe0
0x6e1 PUSH1 0x2
0x6e3 EXP
0x6e4 PUSH4 0xffffffff
0x6e9 DUP5
0x6ea AND
0x6eb MUL
0x6ec DUP2
0x6ed MSTORE
0x6ee PUSH1 0x4
0x6f0 DUP2
0x6f1 ADD
0x6f2 SWAP2
0x6f3 SWAP1
0x6f4 SWAP2
0x6f5 MSTORE
0x6f6 PUSH1 0x24
0x6f8 ADD
0x6f9 PUSH1 0x0
0x6fb PUSH1 0x40
0x6fd MLOAD
0x6fe DUP1
0x6ff DUP4
0x700 SUB
0x701 DUP2
0x702 PUSH1 0x0
0x704 DUP8
0x705 DUP1
0x706 EXTCODESIZE
0x707 ISZERO
0x708 ISZERO
0x709 PUSH2 0x711
0x70c JUMPI
---
0x6c7: JUMPDEST 
0x6c9: V644 = 0x1
0x6cb: V645 = S[0x1]
0x6cc: V646 = 0x1
0x6ce: V647 = 0xa0
0x6d0: V648 = 0x2
0x6d2: V649 = EXP 0x2 0xa0
0x6d3: V650 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d4: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
0x6d6: V652 = 0x2e1a7d4d
0x6dc: V653 = 0x40
0x6de: V654 = M[0x40]
0x6df: V655 = 0xe0
0x6e1: V656 = 0x2
0x6e3: V657 = EXP 0x2 0xe0
0x6e4: V658 = 0xffffffff
0x6ea: V659 = AND 0x2e1a7d4d 0xffffffff
0x6eb: V660 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x6ed: M[V654] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x6ee: V661 = 0x4
0x6f1: V662 = ADD V654 0x4
0x6f5: M[V662] = V196
0x6f6: V663 = 0x24
0x6f8: V664 = ADD 0x24 V654
0x6f9: V665 = 0x0
0x6fb: V666 = 0x40
0x6fd: V667 = M[0x40]
0x700: V668 = SUB V664 V667
0x702: V669 = 0x0
0x706: V670 = EXTCODESIZE V651
0x707: V671 = ISZERO V670
0x708: V672 = ISZERO V671
0x709: V673 = 0x711
0x70c: JUMPI 0x711 V672
---
Entry stack: [V12, 0x84, V196, 0x0]
Stack pops: 2
Stack additions: [S1, V651, V651, 0x2e1a7d4d, V664, 0x0, V667, V668, V667, 0x0, V651]
Exit stack: [V12, 0x84, V196, V651, V651, 0x2e1a7d4d, V664, 0x0, V667, V668, V667, 0x0, V651]

================================

Block 0x70d
[0x70d:0x710]
---
Predecessors: [0x6c7]
Successors: []
---
0x70d PUSH1 0x0
0x70f DUP1
0x710 REVERT
---
0x70d: V674 = 0x0
0x710: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V196, V651, V651, 0x2e1a7d4d, V664, 0x0, V667, V668, V667, 0x0, V651]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V196, V651, V651, 0x2e1a7d4d, V664, 0x0, V667, V668, V667, 0x0, V651]

================================

Block 0x711
[0x711:0x71d]
---
Predecessors: [0x6c7]
Successors: [0x71e, 0x722]
---
0x711 JUMPDEST
0x712 PUSH2 0x2c6
0x715 GAS
0x716 SUB
0x717 CALL
0x718 ISZERO
0x719 ISZERO
0x71a PUSH2 0x722
0x71d JUMPI
---
0x711: JUMPDEST 
0x712: V675 = 0x2c6
0x715: V676 = GAS
0x716: V677 = SUB V676 0x2c6
0x717: V678 = CALL V677 V651 0x0 V667 V668 V667 0x0
0x718: V679 = ISZERO V678
0x719: V680 = ISZERO V679
0x71a: V681 = 0x722
0x71d: JUMPI 0x722 V680
---
Entry stack: [V12, 0x84, V196, V651, V651, 0x2e1a7d4d, V664, 0x0, V667, V668, V667, 0x0, V651]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, V196, V651, V651, 0x2e1a7d4d, V664]

================================

Block 0x71e
[0x71e:0x721]
---
Predecessors: [0x711]
Successors: []
---
0x71e PUSH1 0x0
0x720 DUP1
0x721 REVERT
---
0x71e: V682 = 0x0
0x721: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V196, V651, V651, 0x2e1a7d4d, V664]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V196, V651, V651, 0x2e1a7d4d, V664]

================================

Block 0x722
[0x722:0x725]
---
Predecessors: [0x711]
Successors: [0x726]
---
0x722 JUMPDEST
0x723 POP
0x724 POP
0x725 POP
---
0x722: JUMPDEST 
---
Entry stack: [V12, 0x84, V196, V651, V651, 0x2e1a7d4d, V664]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x84, V196, V651]

================================

Block 0x726
[0x726:0x726]
---
Predecessors: [0x722]
Successors: [0x727]
---
0x726 JUMPDEST
---
0x726: JUMPDEST 
---
Entry stack: [V12, 0x84, V196, V651]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V196, V651]

================================

Block 0x727
[0x727:0x72a]
---
Predecessors: [0x726]
Successors: [0x84]
---
0x727 JUMPDEST
0x728 POP
0x729 POP
0x72a JUMP
---
0x727: JUMPDEST 
0x72a: JUMP 0x84
---
Entry stack: [V12, 0x84, V196, V651]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x72b
[0x72b:0x758]
---
Predecessors: []
Successors: []
---
0x72b STOP
0x72c LOG1
0x72d PUSH6 0x627a7a723058
0x734 SHA3
0x735 MISSING 0xd2
0x736 MISSING 0xce
0x737 PUSH6 0xc16ebfaf5ee5
0x73e MISSING 0xab
0x73f NUMBER
0x740 OR
0x741 DELEGATECALL
0x742 MISSING 0x46
0x743 PUSH21 0x386cc4b0ff08b3d002b62d2df77c3c52a60029
---
0x72b: STOP 
0x72c: LOG S0 S1 S2
0x72d: V683 = 0x627a7a723058
0x734: V684 = SHA3 0x627a7a723058 S3
0x735: MISSING 0xd2
0x736: MISSING 0xce
0x737: V685 = 0xc16ebfaf5ee5
0x73e: MISSING 0xab
0x73f: V686 = NUMBER
0x740: V687 = OR V686 S0
0x741: V688 = DELEGATECALL V687 S1 S2 S3 S4 S5
0x742: MISSING 0x46
0x743: V689 = 0x386cc4b0ff08b3d002b62d2df77c3c52a60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V684, 0xc16ebfaf5ee5, V688, 0x386cc4b0ff08b3d002b62d2df77c3c52a60029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2cf2c0af
Entry block: 0x86
Exit block: 0x84
Body: 0x84, 0x86, 0x8d, 0x91, 0x1fd, 0x215, 0x219, 0x256, 0x25a, 0x267, 0x26b, 0x270, 0x271

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x9e
Exit block: 0x84
Body: 0x84, 0x9e, 0xa5, 0xa9, 0x275, 0x28c, 0x290, 0x2bf, 0x2c3, 0x2c4, 0x2c5

Function 2:
Public function signature: 0x43d726d6
Entry block: 0xb6
Exit block: 0x2df
Body: 0xb6, 0xbd, 0xc1, 0x2c8, 0x2df, 0x2e3

Function 3:
Public function signature: 0x5c73dcea
Entry block: 0xcb
Exit block: 0x118
Body: 0xcb, 0xd2, 0xd6, 0x118, 0x2f4, 0x3ab, 0x3af, 0x3bc, 0x3c0, 0x3cc

Function 4:
Public function signature: 0x70a08231
Entry block: 0x12c
Exit block: 0x14b
Body: 0x12c, 0x133, 0x137, 0x14b, 0x3dc, 0x43c, 0x440, 0x44d, 0x451, 0x45d

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x15d
Exit block: 0x170
Body: 0x15d, 0x164, 0x168, 0x170, 0x463

Function 6:
Public function signature: 0x9c04aefb
Entry block: 0x18c
Exit block: 0x84
Body: 0x84, 0x18c, 0x193, 0x197, 0x472, 0x48a, 0x48e, 0x544, 0x548, 0x555, 0x559, 0x569, 0x646, 0x64a, 0x657, 0x65b, 0x663, 0x698, 0x699, 0x69a

Function 7:
Public function signature: 0xd0e30db0
Entry block: 0x1db
Exit block: 0x84
Body: 0x81, 0x82, 0x84, 0x1db

Function 8:
Public function signature: 0xf1b83630
Entry block: 0x1e5
Exit block: 0x84
Body: 0x84, 0x1e5, 0x1ec, 0x1f0, 0x6ab, 0x6c3, 0x6c7, 0x70d, 0x711, 0x71e, 0x722, 0x726, 0x727

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x84
Body: 0x7d, 0x81, 0x82, 0x84

