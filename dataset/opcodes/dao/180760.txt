Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x86]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x18ac2df6
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x86
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x18ac2df6
0x20: V14 = EQ V12 0x18ac2df6
0x21: V15 = 0x86
0x24: JUMPI 0x86 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd1]
---
0x25 DUP1
0x26 PUSH4 0x2cf2c0af
0x2b EQ
0x2c PUSH2 0xd1
0x2f JUMPI
---
0x26: V16 = 0x2cf2c0af
0x2b: V17 = EQ 0x2cf2c0af V12
0x2c: V18 = 0xd1
0x2f: JUMPI 0xd1 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xe9]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0xe9
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0xe9
0x3a: JUMPI 0xe9 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x101]
---
0x3b DUP1
0x3c PUSH4 0x43d726d6
0x41 EQ
0x42 PUSH2 0x101
0x45 JUMPI
---
0x3c: V22 = 0x43d726d6
0x41: V23 = EQ 0x43d726d6 V12
0x42: V24 = 0x101
0x45: JUMPI 0x101 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x116]
---
0x46 DUP1
0x47 PUSH4 0x5c73dcea
0x4c EQ
0x4d PUSH2 0x116
0x50 JUMPI
---
0x47: V25 = 0x5c73dcea
0x4c: V26 = EQ 0x5c73dcea V12
0x4d: V27 = 0x116
0x50: JUMPI 0x116 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x177]
---
0x51 DUP1
0x52 PUSH4 0x70a08231
0x57 EQ
0x58 PUSH2 0x177
0x5b JUMPI
---
0x52: V28 = 0x70a08231
0x57: V29 = EQ 0x70a08231 V12
0x58: V30 = 0x177
0x5b: JUMPI 0x177 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a8]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x1a8
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x1a8
0x66: JUMPI 0x1a8 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d7]
---
0x67 DUP1
0x68 PUSH4 0xd0e30db0
0x6d EQ
0x6e PUSH2 0x1d7
0x71 JUMPI
---
0x68: V34 = 0xd0e30db0
0x6d: V35 = EQ 0xd0e30db0 V12
0x6e: V36 = 0x1d7
0x71: JUMPI 0x1d7 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1e1]
---
0x72 DUP1
0x73 PUSH4 0xf1b83630
0x78 EQ
0x79 PUSH2 0x1e1
0x7c JUMPI
---
0x73: V37 = 0xf1b83630
0x78: V38 = EQ 0xf1b83630 V12
0x79: V39 = 0x1e1
0x7c: JUMPI 0x1e1 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x0, 0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x84
---
0x7d: JUMPDEST 
0x7e: V40 = 0x84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0x81
[0x81:0x81]
---
Predecessors: [0x7d]
Successors: [0x82]
---
0x81 JUMPDEST
---
0x81: JUMPDEST 
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x81]
Successors: [0x84]
---
0x82 JUMPDEST
0x83 JUMP
---
0x82: JUMPDEST 
0x83: JUMP 0x84
---
Entry stack: [V12, 0x84]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x82, 0x471, 0x4f5, 0x549, 0x771, 0x7ef]
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S2, S1, S0]

================================

Block 0x86
[0x86:0x8c]
---
Predecessors: [0xb]
Successors: [0x8d, 0x91]
---
0x86 JUMPDEST
0x87 CALLVALUE
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x86: JUMPDEST 
0x87: V41 = CALLVALUE
0x88: V42 = ISZERO V41
0x89: V43 = 0x91
0x8c: JUMPI 0x91 V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x86]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V44 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91
[0x91:0xce]
---
Predecessors: [0x86]
Successors: [0x1f9]
---
0x91 JUMPDEST
0x92 PUSH2 0x84
0x95 PUSH1 0x1
0x97 PUSH1 0xa0
0x99 PUSH1 0x2
0x9b EXP
0x9c SUB
0x9d PUSH1 0x4
0x9f CALLDATALOAD
0xa0 DUP2
0xa1 AND
0xa2 SWAP1
0xa3 PUSH1 0x24
0xa5 CALLDATALOAD
0xa6 DUP2
0xa7 AND
0xa8 SWAP1
0xa9 PUSH1 0x44
0xab CALLDATALOAD
0xac AND
0xad PUSH1 0x64
0xaf CALLDATALOAD
0xb0 PUSH1 0x84
0xb2 CALLDATALOAD
0xb3 PUSH1 0xa4
0xb5 CALLDATALOAD
0xb6 PUSH1 0xc4
0xb8 CALLDATALOAD
0xb9 PUSH1 0xe4
0xbb CALLDATALOAD
0xbc PUSH1 0xff
0xbe PUSH2 0x104
0xc1 CALLDATALOAD
0xc2 AND
0xc3 PUSH2 0x124
0xc6 CALLDATALOAD
0xc7 PUSH2 0x144
0xca CALLDATALOAD
0xcb PUSH2 0x1f9
0xce JUMP
---
0x91: JUMPDEST 
0x92: V45 = 0x84
0x95: V46 = 0x1
0x97: V47 = 0xa0
0x99: V48 = 0x2
0x9b: V49 = EXP 0x2 0xa0
0x9c: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d: V51 = 0x4
0x9f: V52 = CALLDATALOAD 0x4
0xa1: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xa3: V54 = 0x24
0xa5: V55 = CALLDATALOAD 0x24
0xa7: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xa9: V57 = 0x44
0xab: V58 = CALLDATALOAD 0x44
0xac: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0xad: V60 = 0x64
0xaf: V61 = CALLDATALOAD 0x64
0xb0: V62 = 0x84
0xb2: V63 = CALLDATALOAD 0x84
0xb3: V64 = 0xa4
0xb5: V65 = CALLDATALOAD 0xa4
0xb6: V66 = 0xc4
0xb8: V67 = CALLDATALOAD 0xc4
0xb9: V68 = 0xe4
0xbb: V69 = CALLDATALOAD 0xe4
0xbc: V70 = 0xff
0xbe: V71 = 0x104
0xc1: V72 = CALLDATALOAD 0x104
0xc2: V73 = AND V72 0xff
0xc3: V74 = 0x124
0xc6: V75 = CALLDATALOAD 0x124
0xc7: V76 = 0x144
0xca: V77 = CALLDATALOAD 0x144
0xcb: V78 = 0x1f9
0xce: JUMP 0x1f9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77]
Exit stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77]

================================

Block 0xcf
[0xcf:0xd0]
---
Predecessors: []
Successors: []
---
0xcf JUMPDEST
0xd0 STOP
---
0xcf: JUMPDEST 
0xd0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd1
[0xd1:0xd7]
---
Predecessors: [0x25]
Successors: [0xd8, 0xdc]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xd1: JUMPDEST 
0xd2: V79 = CALLVALUE
0xd3: V80 = ISZERO V79
0xd4: V81 = 0xdc
0xd7: JUMPI 0xdc V80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xd1]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V82 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdc
[0xdc:0xe6]
---
Predecessors: [0xd1]
Successors: [0x481]
---
0xdc JUMPDEST
0xdd PUSH2 0x84
0xe0 PUSH1 0x4
0xe2 CALLDATALOAD
0xe3 PUSH2 0x481
0xe6 JUMP
---
0xdc: JUMPDEST 
0xdd: V83 = 0x84
0xe0: V84 = 0x4
0xe2: V85 = CALLDATALOAD 0x4
0xe3: V86 = 0x481
0xe6: JUMP 0x481
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V85]
Exit stack: [V12, 0x84, V85]

================================

Block 0xe7
[0xe7:0xe8]
---
Predecessors: []
Successors: []
---
0xe7 JUMPDEST
0xe8 STOP
---
0xe7: JUMPDEST 
0xe8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe9
[0xe9:0xef]
---
Predecessors: [0x30]
Successors: [0xf0, 0xf4]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb ISZERO
0xec PUSH2 0xf4
0xef JUMPI
---
0xe9: JUMPDEST 
0xea: V87 = CALLVALUE
0xeb: V88 = ISZERO V87
0xec: V89 = 0xf4
0xef: JUMPI 0xf4 V88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf0
[0xf0:0xf3]
---
Predecessors: [0xe9]
Successors: []
---
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 REVERT
---
0xf0: V90 = 0x0
0xf3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf4
[0xf4:0xfe]
---
Predecessors: [0xe9]
Successors: [0x4f9]
---
0xf4 JUMPDEST
0xf5 PUSH2 0x84
0xf8 PUSH1 0x4
0xfa CALLDATALOAD
0xfb PUSH2 0x4f9
0xfe JUMP
---
0xf4: JUMPDEST 
0xf5: V91 = 0x84
0xf8: V92 = 0x4
0xfa: V93 = CALLDATALOAD 0x4
0xfb: V94 = 0x4f9
0xfe: JUMP 0x4f9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V93]
Exit stack: [V12, 0x84, V93]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: []
Successors: []
---
0xff JUMPDEST
0x100 STOP
---
0xff: JUMPDEST 
0x100: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x101
[0x101:0x107]
---
Predecessors: [0x3b]
Successors: [0x108, 0x10c]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 ISZERO
0x104 PUSH2 0x10c
0x107 JUMPI
---
0x101: JUMPDEST 
0x102: V95 = CALLVALUE
0x103: V96 = ISZERO V95
0x104: V97 = 0x10c
0x107: JUMPI 0x10c V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x108
[0x108:0x10b]
---
Predecessors: [0x101]
Successors: []
---
0x108 PUSH1 0x0
0x10a DUP1
0x10b REVERT
---
0x108: V98 = 0x0
0x10b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x113]
---
Predecessors: [0x101]
Successors: [0x54c]
---
0x10c JUMPDEST
0x10d PUSH2 0x84
0x110 PUSH2 0x54c
0x113 JUMP
---
0x10c: JUMPDEST 
0x10d: V99 = 0x84
0x110: V100 = 0x54c
0x113: JUMP 0x54c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0x114
[0x114:0x115]
---
Predecessors: []
Successors: []
---
0x114 JUMPDEST
0x115 STOP
---
0x114: JUMPDEST 
0x115: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x116
[0x116:0x11c]
---
Predecessors: [0x46]
Successors: [0x11d, 0x121]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 ISZERO
0x119 PUSH2 0x121
0x11c JUMPI
---
0x116: JUMPDEST 
0x117: V101 = CALLVALUE
0x118: V102 = ISZERO V101
0x119: V103 = 0x121
0x11c: JUMPI 0x121 V102
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11d
[0x11d:0x120]
---
Predecessors: [0x116]
Successors: []
---
0x11d PUSH1 0x0
0x11f DUP1
0x120 REVERT
---
0x11d: V104 = 0x0
0x120: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x121
[0x121:0x162]
---
Predecessors: [0x116]
Successors: [0x578]
---
0x121 JUMPDEST
0x122 PUSH2 0x163
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d PUSH1 0x4
0x12f CALLDATALOAD
0x130 DUP2
0x131 AND
0x132 SWAP1
0x133 PUSH1 0x24
0x135 CALLDATALOAD
0x136 SWAP1
0x137 PUSH1 0x44
0x139 CALLDATALOAD
0x13a DUP2
0x13b AND
0x13c SWAP1
0x13d PUSH1 0x64
0x13f CALLDATALOAD
0x140 SWAP1
0x141 PUSH1 0x84
0x143 CALLDATALOAD
0x144 SWAP1
0x145 PUSH1 0xa4
0x147 CALLDATALOAD
0x148 SWAP1
0x149 PUSH1 0xc4
0x14b CALLDATALOAD
0x14c AND
0x14d PUSH1 0xff
0x14f PUSH1 0xe4
0x151 CALLDATALOAD
0x152 AND
0x153 PUSH2 0x104
0x156 CALLDATALOAD
0x157 PUSH2 0x124
0x15a CALLDATALOAD
0x15b PUSH2 0x144
0x15e CALLDATALOAD
0x15f PUSH2 0x578
0x162 JUMP
---
0x121: JUMPDEST 
0x122: V105 = 0x163
0x125: V106 = 0x1
0x127: V107 = 0xa0
0x129: V108 = 0x2
0x12b: V109 = EXP 0x2 0xa0
0x12c: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d: V111 = 0x4
0x12f: V112 = CALLDATALOAD 0x4
0x131: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x133: V114 = 0x24
0x135: V115 = CALLDATALOAD 0x24
0x137: V116 = 0x44
0x139: V117 = CALLDATALOAD 0x44
0x13b: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x13d: V119 = 0x64
0x13f: V120 = CALLDATALOAD 0x64
0x141: V121 = 0x84
0x143: V122 = CALLDATALOAD 0x84
0x145: V123 = 0xa4
0x147: V124 = CALLDATALOAD 0xa4
0x149: V125 = 0xc4
0x14b: V126 = CALLDATALOAD 0xc4
0x14c: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V128 = 0xff
0x14f: V129 = 0xe4
0x151: V130 = CALLDATALOAD 0xe4
0x152: V131 = AND V130 0xff
0x153: V132 = 0x104
0x156: V133 = CALLDATALOAD 0x104
0x157: V134 = 0x124
0x15a: V135 = CALLDATALOAD 0x124
0x15b: V136 = 0x144
0x15e: V137 = CALLDATALOAD 0x144
0x15f: V138 = 0x578
0x162: JUMP 0x578
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137]
Exit stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137]

================================

Block 0x163
[0x163:0x176]
---
Predecessors: [0x650]
Successors: []
---
0x163 JUMPDEST
0x164 PUSH1 0x40
0x166 MLOAD
0x167 SWAP1
0x168 ISZERO
0x169 ISZERO
0x16a DUP2
0x16b MSTORE
0x16c PUSH1 0x20
0x16e ADD
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP1
0x173 SWAP2
0x174 SUB
0x175 SWAP1
0x176 RETURN
---
0x163: JUMPDEST 
0x164: V139 = 0x40
0x166: V140 = M[0x40]
0x168: V141 = ISZERO V591
0x169: V142 = ISZERO V141
0x16b: M[V140] = V142
0x16c: V143 = 0x20
0x16e: V144 = ADD 0x20 V140
0x16f: V145 = 0x40
0x171: V146 = M[0x40]
0x174: V147 = SUB V144 V146
0x176: RETURN V146 V147
---
Entry stack: [V12, V591]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x177
[0x177:0x17d]
---
Predecessors: [0x51]
Successors: [0x17e, 0x182]
---
0x177 JUMPDEST
0x178 CALLVALUE
0x179 ISZERO
0x17a PUSH2 0x182
0x17d JUMPI
---
0x177: JUMPDEST 
0x178: V148 = CALLVALUE
0x179: V149 = ISZERO V148
0x17a: V150 = 0x182
0x17d: JUMPI 0x182 V149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17e
[0x17e:0x181]
---
Predecessors: [0x177]
Successors: []
---
0x17e PUSH1 0x0
0x180 DUP1
0x181 REVERT
---
0x17e: V151 = 0x0
0x181: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x182
[0x182:0x195]
---
Predecessors: [0x177]
Successors: [0x660]
---
0x182 JUMPDEST
0x183 PUSH2 0x196
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e PUSH1 0x4
0x190 CALLDATALOAD
0x191 AND
0x192 PUSH2 0x660
0x195 JUMP
---
0x182: JUMPDEST 
0x183: V152 = 0x196
0x186: V153 = 0x1
0x188: V154 = 0xa0
0x18a: V155 = 0x2
0x18c: V156 = EXP 0x2 0xa0
0x18d: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V158 = 0x4
0x190: V159 = CALLDATALOAD 0x4
0x191: V160 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x192: V161 = 0x660
0x195: JUMP 0x660
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x196, V160]
Exit stack: [V12, 0x196, V160]

================================

Block 0x196
[0x196:0x1a7]
---
Predecessors: [0x6e1]
Successors: []
---
0x196 JUMPDEST
0x197 PUSH1 0x40
0x199 MLOAD
0x19a SWAP1
0x19b DUP2
0x19c MSTORE
0x19d PUSH1 0x20
0x19f ADD
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 DUP1
0x1a4 SWAP2
0x1a5 SUB
0x1a6 SWAP1
0x1a7 RETURN
---
0x196: JUMPDEST 
0x197: V162 = 0x40
0x199: V163 = M[0x40]
0x19c: M[V163] = V648
0x19d: V164 = 0x20
0x19f: V165 = ADD 0x20 V163
0x1a0: V166 = 0x40
0x1a2: V167 = M[0x40]
0x1a5: V168 = SUB V165 V167
0x1a7: RETURN V167 V168
---
Entry stack: [V12, V648]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a8
[0x1a8:0x1ae]
---
Predecessors: [0x5c]
Successors: [0x1af, 0x1b3]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V169 = CALLVALUE
0x1aa: V170 = ISZERO V169
0x1ab: V171 = 0x1b3
0x1ae: JUMPI 0x1b3 V170
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x1a8]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V172 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b3
[0x1b3:0x1ba]
---
Predecessors: [0x1a8]
Successors: [0x6e7]
---
0x1b3 JUMPDEST
0x1b4 PUSH2 0x1bb
0x1b7 PUSH2 0x6e7
0x1ba JUMP
---
0x1b3: JUMPDEST 
0x1b4: V173 = 0x1bb
0x1b7: V174 = 0x6e7
0x1ba: JUMP 0x6e7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1bb]
Exit stack: [V12, 0x1bb]

================================

Block 0x1bb
[0x1bb:0x1d6]
---
Predecessors: [0x6e7]
Successors: []
---
0x1bb JUMPDEST
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf PUSH1 0x1
0x1c1 PUSH1 0xa0
0x1c3 PUSH1 0x2
0x1c5 EXP
0x1c6 SUB
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 AND
0x1ca DUP2
0x1cb MSTORE
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 SWAP2
0x1d4 SUB
0x1d5 SWAP1
0x1d6 RETURN
---
0x1bb: JUMPDEST 
0x1bc: V175 = 0x40
0x1be: V176 = M[0x40]
0x1bf: V177 = 0x1
0x1c1: V178 = 0xa0
0x1c3: V179 = 0x2
0x1c5: V180 = EXP 0x2 0xa0
0x1c6: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c9: V182 = AND V656 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: M[V176] = V182
0x1cc: V183 = 0x20
0x1ce: V184 = ADD 0x20 V176
0x1cf: V185 = 0x40
0x1d1: V186 = M[0x40]
0x1d4: V187 = SUB V184 V186
0x1d6: RETURN V186 V187
---
Entry stack: [V12, 0x1bb, V656]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1bb]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0x67]
Successors: [0x6f6]
---
0x1d7 JUMPDEST
0x1d8 PUSH2 0x84
0x1db PUSH2 0x6f6
0x1de JUMP
---
0x1d7: JUMPDEST 
0x1d8: V188 = 0x84
0x1db: V189 = 0x6f6
0x1de: JUMP 0x6f6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0x1df
[0x1df:0x1e0]
---
Predecessors: []
Successors: []
---
0x1df JUMPDEST
0x1e0 STOP
---
0x1df: JUMPDEST 
0x1e0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e1
[0x1e1:0x1e7]
---
Predecessors: [0x72]
Successors: [0x1e8, 0x1ec]
---
0x1e1 JUMPDEST
0x1e2 CALLVALUE
0x1e3 ISZERO
0x1e4 PUSH2 0x1ec
0x1e7 JUMPI
---
0x1e1: JUMPDEST 
0x1e2: V190 = CALLVALUE
0x1e3: V191 = ISZERO V190
0x1e4: V192 = 0x1ec
0x1e7: JUMPI 0x1ec V191
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e8
[0x1e8:0x1eb]
---
Predecessors: [0x1e1]
Successors: []
---
0x1e8 PUSH1 0x0
0x1ea DUP1
0x1eb REVERT
---
0x1e8: V193 = 0x0
0x1eb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ec
[0x1ec:0x1f6]
---
Predecessors: [0x1e1]
Successors: [0x773]
---
0x1ec JUMPDEST
0x1ed PUSH2 0x84
0x1f0 PUSH1 0x4
0x1f2 CALLDATALOAD
0x1f3 PUSH2 0x773
0x1f6 JUMP
---
0x1ec: JUMPDEST 
0x1ed: V194 = 0x84
0x1f0: V195 = 0x4
0x1f2: V196 = CALLDATALOAD 0x4
0x1f3: V197 = 0x773
0x1f6: JUMP 0x773
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V196]
Exit stack: [V12, 0x84, V196]

================================

Block 0x1f7
[0x1f7:0x1f8]
---
Predecessors: []
Successors: []
---
0x1f7 JUMPDEST
0x1f8 STOP
---
0x1f7: JUMPDEST 
0x1f8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f9
[0x1f9:0x200]
---
Predecessors: [0x91]
Successors: [0xd2a]
---
0x1f9 JUMPDEST
0x1fa PUSH2 0x201
0x1fd PUSH2 0xd2a
0x200 JUMP
---
0x1f9: JUMPDEST 
0x1fa: V198 = 0x201
0x1fd: V199 = 0xd2a
0x200: JUMP 0xd2a
---
Entry stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, 0x201]

================================

Block 0x201
[0x201:0x20a]
---
Predecessors: [0xd2a]
Successors: [0xd2a]
---
0x201 JUMPDEST
0x202 PUSH1 0x0
0x204 PUSH2 0x20b
0x207 PUSH2 0xd2a
0x20a JUMP
---
0x201: JUMPDEST 
0x202: V200 = 0x0
0x204: V201 = 0x20b
0x207: V202 = 0xd2a
0x20a: JUMP 0xd2a
---
Entry stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1188]
Stack pops: 0
Stack additions: [0x0, 0x20b]
Exit stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1188, 0x0, 0x20b]

================================

Block 0x20b
[0x20b:0x221]
---
Predecessors: [0xd2a]
Successors: [0x222, 0x226]
---
0x20b JUMPDEST
0x20c PUSH1 0x0
0x20e SLOAD
0x20f CALLER
0x210 PUSH1 0x1
0x212 PUSH1 0xa0
0x214 PUSH1 0x2
0x216 EXP
0x217 SUB
0x218 SWAP1
0x219 DUP2
0x21a AND
0x21b SWAP2
0x21c AND
0x21d EQ
0x21e PUSH2 0x226
0x221 JUMPI
---
0x20b: JUMPDEST 
0x20c: V203 = 0x0
0x20e: V204 = S[0x0]
0x20f: V205 = CALLER
0x210: V206 = 0x1
0x212: V207 = 0xa0
0x214: V208 = 0x2
0x216: V209 = EXP 0x2 0xa0
0x217: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21a: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x21c: V212 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V213 = EQ V212 V211
0x21e: V214 = 0x226
0x221: JUMPI 0x226 V213
---
Entry stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1188]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1188]

================================

Block 0x222
[0x222:0x225]
---
Predecessors: [0x20b]
Successors: []
---
0x222 PUSH1 0x0
0x224 DUP1
0x225 REVERT
---
0x222: V215 = 0x0
0x225: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1188]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1188]

================================

Block 0x226
[0x226:0x2d3]
---
Predecessors: [0x20b]
Successors: [0x2d4, 0x2d6]
---
0x226 JUMPDEST
0x227 PUSH32 0x2c984d9d4de30c706475c464a5f455df9a7a498ca736aed6f3bf24061b26eacc
0x248 PUSH1 0x1
0x24a DUP16
0x24b DUP16
0x24c DUP16
0x24d DUP16
0x24e DUP16
0x24f DUP16
0x250 DUP16
0x251 DUP16
0x252 DUP16
0x253 DUP16
0x254 DUP16
0x255 PUSH1 0x40
0x257 MLOAD
0x258 SWAP12
0x259 DUP13
0x25a MSTORE
0x25b PUSH1 0x1
0x25d PUSH1 0xa0
0x25f PUSH1 0x2
0x261 EXP
0x262 SUB
0x263 SWAP11
0x264 DUP12
0x265 AND
0x266 PUSH1 0x20
0x268 DUP14
0x269 ADD
0x26a MSTORE
0x26b SWAP9
0x26c DUP11
0x26d AND
0x26e PUSH1 0x40
0x270 DUP1
0x271 DUP14
0x272 ADD
0x273 SWAP2
0x274 SWAP1
0x275 SWAP2
0x276 MSTORE
0x277 SWAP8
0x278 SWAP1
0x279 SWAP10
0x27a AND
0x27b PUSH1 0x60
0x27d DUP12
0x27e ADD
0x27f MSTORE
0x280 PUSH1 0x80
0x282 DUP11
0x283 ADD
0x284 SWAP6
0x285 SWAP1
0x286 SWAP6
0x287 MSTORE
0x288 PUSH1 0xa0
0x28a DUP10
0x28b ADD
0x28c SWAP4
0x28d SWAP1
0x28e SWAP4
0x28f MSTORE
0x290 PUSH1 0xc0
0x292 DUP9
0x293 ADD
0x294 SWAP2
0x295 SWAP1
0x296 SWAP2
0x297 MSTORE
0x298 PUSH1 0xe0
0x29a DUP8
0x29b ADD
0x29c MSTORE
0x29d PUSH2 0x100
0x2a0 DUP7
0x2a1 ADD
0x2a2 MSTORE
0x2a3 PUSH1 0xff
0x2a5 AND
0x2a6 PUSH2 0x120
0x2a9 DUP6
0x2aa ADD
0x2ab MSTORE
0x2ac PUSH2 0x140
0x2af DUP5
0x2b0 ADD
0x2b1 SWAP3
0x2b2 SWAP1
0x2b3 SWAP3
0x2b4 MSTORE
0x2b5 PUSH2 0x160
0x2b8 DUP4
0x2b9 ADD
0x2ba MSTORE
0x2bb PUSH2 0x180
0x2be SWAP1
0x2bf SWAP2
0x2c0 ADD
0x2c1 SWAP1
0x2c2 MLOAD
0x2c3 DUP1
0x2c4 SWAP2
0x2c5 SUB
0x2c6 SWAP1
0x2c7 LOG1
0x2c8 PUSH1 0x6
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd DUP1
0x2ce MSIZE
0x2cf LT
0x2d0 PUSH2 0x2d6
0x2d3 JUMPI
---
0x226: JUMPDEST 
0x227: V216 = 0x2c984d9d4de30c706475c464a5f455df9a7a498ca736aed6f3bf24061b26eacc
0x248: V217 = 0x1
0x255: V218 = 0x40
0x257: V219 = M[0x40]
0x25a: M[V219] = 0x1
0x25b: V220 = 0x1
0x25d: V221 = 0xa0
0x25f: V222 = 0x2
0x261: V223 = EXP 0x2 0xa0
0x262: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff S13
0x266: V226 = 0x20
0x269: V227 = ADD V219 0x20
0x26a: M[V227] = V225
0x26d: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff S12
0x26e: V229 = 0x40
0x272: V230 = ADD V219 0x40
0x276: M[V230] = V228
0x27a: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x27b: V232 = 0x60
0x27e: V233 = ADD V219 0x60
0x27f: M[V233] = V231
0x280: V234 = 0x80
0x283: V235 = ADD V219 0x80
0x287: M[V235] = S10
0x288: V236 = 0xa0
0x28b: V237 = ADD V219 0xa0
0x28f: M[V237] = S9
0x290: V238 = 0xc0
0x293: V239 = ADD V219 0xc0
0x297: M[V239] = S8
0x298: V240 = 0xe0
0x29b: V241 = ADD V219 0xe0
0x29c: M[V241] = S7
0x29d: V242 = 0x100
0x2a1: V243 = ADD V219 0x100
0x2a2: M[V243] = S6
0x2a3: V244 = 0xff
0x2a5: V245 = AND 0xff S5
0x2a6: V246 = 0x120
0x2aa: V247 = ADD V219 0x120
0x2ab: M[V247] = V245
0x2ac: V248 = 0x140
0x2b0: V249 = ADD V219 0x140
0x2b4: M[V249] = S4
0x2b5: V250 = 0x160
0x2b9: V251 = ADD V219 0x160
0x2ba: M[V251] = S3
0x2bb: V252 = 0x180
0x2c0: V253 = ADD V219 0x180
0x2c2: V254 = M[0x40]
0x2c5: V255 = SUB V253 V254
0x2c7: LOG V254 V255 0x2c984d9d4de30c706475c464a5f455df9a7a498ca736aed6f3bf24061b26eacc
0x2c8: V256 = 0x6
0x2ca: V257 = 0x40
0x2cc: V258 = M[0x40]
0x2ce: V259 = MSIZE
0x2cf: V260 = LT V259 V258
0x2d0: V261 = 0x2d6
0x2d3: JUMPI 0x2d6 V260
---
Entry stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1188]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x6, V258]
Exit stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1188, 0x6, V258]

================================

Block 0x2d4
[0x2d4:0x2d5]
---
Predecessors: [0x226]
Successors: [0x2d6]
---
0x2d4 POP
0x2d5 MSIZE
---
0x2d5: V262 = MSIZE
---
Entry stack: [V12, 0x84, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1188, 0x6, V258]
Stack pops: 1
Stack additions: [V262]
Exit stack: [V12, 0x84, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1188, 0x6, V262]

================================

Block 0x2d6
[0x2d6:0x2e6]
---
Predecessors: [0x226, 0x2d4]
Successors: [0x2e7]
---
0x2d6 JUMPDEST
0x2d7 SWAP1
0x2d8 DUP1
0x2d9 DUP3
0x2da MSTORE
0x2db DUP1
0x2dc PUSH1 0x20
0x2de MUL
0x2df PUSH1 0x20
0x2e1 ADD
0x2e2 DUP3
0x2e3 ADD
0x2e4 PUSH1 0x40
0x2e6 MSTORE
---
0x2d6: JUMPDEST 
0x2da: M[S0] = 0x6
0x2dc: V263 = 0x20
0x2de: V264 = MUL 0x20 0x6
0x2df: V265 = 0x20
0x2e1: V266 = ADD 0x20 0xc0
0x2e3: V267 = ADD S0 0xe0
0x2e4: V268 = 0x40
0x2e6: M[0x40] = V267
---
Entry stack: [V12, 0x84, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1188, 0x6, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x84, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1188, S0, 0x6]

================================

Block 0x2e7
[0x2e7:0x2f6]
---
Predecessors: [0x2d6]
Successors: [0x2f7, 0x2f8]
---
0x2e7 JUMPDEST
0x2e8 POP
0x2e9 SWAP3
0x2ea POP
0x2eb DUP11
0x2ec DUP4
0x2ed PUSH1 0x0
0x2ef DUP2
0x2f0 MLOAD
0x2f1 DUP2
0x2f2 LT
0x2f3 PUSH2 0x2f8
0x2f6 JUMPI
---
0x2e7: JUMPDEST 
0x2ed: V269 = 0x0
0x2f0: V270 = M[S1]
0x2f2: V271 = LT 0x0 V270
0x2f3: V272 = 0x2f8
0x2f6: JUMPI 0x2f8 V271
---
Entry stack: [V12, 0x84, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1188, S1, 0x6]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S1, S3, S2, S12, S1, 0x0]
Exit stack: [S17, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1, S3, S2, S12, S1, 0x0]

================================

Block 0x2f7
[0x2f7:0x2f7]
---
Predecessors: [0x2e7]
Successors: []
---
0x2f7 INVALID
---
0x2f7: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x2f8
[0x2f8:0x30e]
---
Predecessors: [0x2e7]
Successors: [0x30f, 0x310]
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x20
0x2fb SWAP1
0x2fc DUP2
0x2fd MUL
0x2fe SWAP1
0x2ff SWAP2
0x300 ADD
0x301 ADD
0x302 MSTORE
0x303 DUP10
0x304 DUP4
0x305 PUSH1 0x1
0x307 DUP2
0x308 MLOAD
0x309 DUP2
0x30a LT
0x30b PUSH2 0x310
0x30e JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V273 = 0x20
0x2fd: V274 = MUL 0x20 0x0
0x300: V275 = ADD S1 0x0
0x301: V276 = ADD V275 0x20
0x302: M[V276] = S2
0x305: V277 = 0x1
0x308: V278 = M[S5]
0x30a: V279 = LT 0x1 V278
0x30b: V280 = 0x310
0x30e: JUMPI 0x310 V279
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S12, S5, 0x1]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S12, S5, 0x1]

================================

Block 0x30f
[0x30f:0x30f]
---
Predecessors: [0x2f8]
Successors: []
---
0x30f INVALID
---
0x30f: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x310
[0x310:0x326]
---
Predecessors: [0x2f8]
Successors: [0x327, 0x328]
---
0x310 JUMPDEST
0x311 PUSH1 0x20
0x313 SWAP1
0x314 DUP2
0x315 MUL
0x316 SWAP1
0x317 SWAP2
0x318 ADD
0x319 ADD
0x31a MSTORE
0x31b DUP9
0x31c DUP4
0x31d PUSH1 0x2
0x31f DUP2
0x320 MLOAD
0x321 DUP2
0x322 LT
0x323 PUSH2 0x328
0x326 JUMPI
---
0x310: JUMPDEST 
0x311: V281 = 0x20
0x315: V282 = MUL 0x20 0x1
0x318: V283 = ADD S1 0x20
0x319: V284 = ADD V283 0x20
0x31a: M[V284] = S2
0x31d: V285 = 0x2
0x320: V286 = M[S5]
0x322: V287 = LT 0x2 V286
0x323: V288 = 0x328
0x326: JUMPI 0x328 V287
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S11, S5, 0x2]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S11, S5, 0x2]

================================

Block 0x327
[0x327:0x327]
---
Predecessors: [0x310]
Successors: []
---
0x327 INVALID
---
0x327: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]

================================

Block 0x328
[0x328:0x33e]
---
Predecessors: [0x310]
Successors: [0x33f, 0x340]
---
0x328 JUMPDEST
0x329 PUSH1 0x20
0x32b SWAP1
0x32c DUP2
0x32d MUL
0x32e SWAP1
0x32f SWAP2
0x330 ADD
0x331 ADD
0x332 MSTORE
0x333 DUP8
0x334 DUP4
0x335 PUSH1 0x3
0x337 DUP2
0x338 MLOAD
0x339 DUP2
0x33a LT
0x33b PUSH2 0x340
0x33e JUMPI
---
0x328: JUMPDEST 
0x329: V289 = 0x20
0x32d: V290 = MUL 0x20 0x2
0x330: V291 = ADD S1 0x40
0x331: V292 = ADD V291 0x20
0x332: M[V292] = S2
0x335: V293 = 0x3
0x338: V294 = M[S5]
0x33a: V295 = LT 0x3 V294
0x33b: V296 = 0x340
0x33e: JUMPI 0x340 V295
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S10, S5, 0x3]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S10, S5, 0x3]

================================

Block 0x33f
[0x33f:0x33f]
---
Predecessors: [0x328]
Successors: []
---
0x33f INVALID
---
0x33f: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x340
[0x340:0x356]
---
Predecessors: [0x328]
Successors: [0x357, 0x358]
---
0x340 JUMPDEST
0x341 PUSH1 0x20
0x343 SWAP1
0x344 DUP2
0x345 MUL
0x346 SWAP1
0x347 SWAP2
0x348 ADD
0x349 ADD
0x34a MSTORE
0x34b DUP7
0x34c DUP4
0x34d PUSH1 0x4
0x34f DUP2
0x350 MLOAD
0x351 DUP2
0x352 LT
0x353 PUSH2 0x358
0x356 JUMPI
---
0x340: JUMPDEST 
0x341: V297 = 0x20
0x345: V298 = MUL 0x20 0x3
0x348: V299 = ADD S1 0x60
0x349: V300 = ADD V299 0x20
0x34a: M[V300] = S2
0x34d: V301 = 0x4
0x350: V302 = M[S5]
0x352: V303 = LT 0x4 V302
0x353: V304 = 0x358
0x356: JUMPI 0x358 V303
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S9, S5, 0x4]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S9, S5, 0x4]

================================

Block 0x357
[0x357:0x357]
---
Predecessors: [0x340]
Successors: []
---
0x357 INVALID
---
0x357: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]

================================

Block 0x358
[0x358:0x371]
---
Predecessors: [0x340]
Successors: [0x372, 0x373]
---
0x358 JUMPDEST
0x359 PUSH1 0x20
0x35b SWAP1
0x35c DUP2
0x35d MUL
0x35e SWAP1
0x35f SWAP2
0x360 ADD
0x361 ADD
0x362 MSTORE
0x363 PUSH1 0xff
0x365 DUP7
0x366 AND
0x367 DUP4
0x368 PUSH1 0x5
0x36a DUP2
0x36b MLOAD
0x36c DUP2
0x36d LT
0x36e PUSH2 0x373
0x371 JUMPI
---
0x358: JUMPDEST 
0x359: V305 = 0x20
0x35d: V306 = MUL 0x20 0x4
0x360: V307 = ADD S1 0x80
0x361: V308 = ADD V307 0x20
0x362: M[V308] = S2
0x363: V309 = 0xff
0x366: V310 = AND S8 0xff
0x368: V311 = 0x5
0x36b: V312 = M[S5]
0x36d: V313 = LT 0x5 V312
0x36e: V314 = 0x373
0x371: JUMPI 0x373 V313
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V310, S5, 0x5]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V310, S5, 0x5]

================================

Block 0x372
[0x372:0x372]
---
Predecessors: [0x358]
Successors: []
---
0x372 INVALID
---
0x372: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V310, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V310, S1, 0x5]

================================

Block 0x373
[0x373:0x381]
---
Predecessors: [0x358]
Successors: [0x382]
---
0x373 JUMPDEST
0x374 PUSH1 0x20
0x376 SWAP1
0x377 DUP2
0x378 MUL
0x379 SWAP1
0x37a SWAP2
0x37b ADD
0x37c ADD
0x37d MSTORE
0x37e PUSH1 0x0
0x380 SWAP2
0x381 POP
---
0x373: JUMPDEST 
0x374: V315 = 0x20
0x378: V316 = MUL 0x20 0x5
0x37b: V317 = ADD S1 0xa0
0x37c: V318 = ADD V317 0x20
0x37d: M[V318] = V310
0x37e: V319 = 0x0
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V310, S1, 0x5]
Stack pops: 5
Stack additions: [0x0, S3]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3]

================================

Block 0x382
[0x382:0x38b]
---
Predecessors: [0x373, 0x3c6]
Successors: [0x38c, 0x3d1]
---
0x382 JUMPDEST
0x383 PUSH1 0x6
0x385 DUP3
0x386 LT
0x387 ISZERO
0x388 PUSH2 0x3d1
0x38b JUMPI
---
0x382: JUMPDEST 
0x383: V320 = 0x6
0x386: V321 = LT S1 0x6
0x387: V322 = ISZERO V321
0x388: V323 = 0x3d1
0x38b: JUMPI 0x3d1 V322
---
Entry stack: [V12, 0x84, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x84, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x38c
[0x38c:0x399]
---
Predecessors: [0x382]
Successors: [0x39a, 0x39b]
---
0x38c DUP2
0x38d PUSH1 0xd
0x38f ADD
0x390 DUP4
0x391 DUP4
0x392 DUP2
0x393 MLOAD
0x394 DUP2
0x395 LT
0x396 PUSH2 0x39b
0x399 JUMPI
---
0x38d: V324 = 0xd
0x38f: V325 = ADD 0xd S1
0x393: V326 = M[S2]
0x395: V327 = LT S1 V326
0x396: V328 = 0x39b
0x399: JUMPI 0x39b V327
---
Entry stack: [V12, 0x84, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V325, S2, S1]
Exit stack: [V12, 0x84, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V325, S2, S1]

================================

Block 0x39a
[0x39a:0x39a]
---
Predecessors: [0x38c]
Successors: []
---
0x39a INVALID
---
0x39a: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V325, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V325, S1, S0]

================================

Block 0x39b
[0x39b:0x3ac]
---
Predecessors: [0x38c]
Successors: [0x3ad, 0x3ae]
---
0x39b JUMPDEST
0x39c SWAP1
0x39d PUSH1 0x20
0x39f ADD
0x3a0 SWAP1
0x3a1 PUSH1 0x20
0x3a3 MUL
0x3a4 ADD
0x3a5 MLOAD
0x3a6 DUP2
0x3a7 ISZERO
0x3a8 ISZERO
0x3a9 PUSH2 0x3ae
0x3ac JUMPI
---
0x39b: JUMPDEST 
0x39d: V329 = 0x20
0x39f: V330 = ADD 0x20 S1
0x3a1: V331 = 0x20
0x3a3: V332 = MUL 0x20 S0
0x3a4: V333 = ADD V332 V330
0x3a5: V334 = M[V333]
0x3a7: V335 = ISZERO V325
0x3a8: V336 = ISZERO V335
0x3a9: V337 = 0x3ae
0x3ac: JUMPI 0x3ae V336
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V325, S1, S0]
Stack pops: 3
Stack additions: [S2, V334]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V325, V334]

================================

Block 0x3ad
[0x3ad:0x3ad]
---
Predecessors: [0x39b]
Successors: []
---
0x3ad INVALID
---
0x3ad: INVALID 
---
Entry stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V325, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V325, V334]

================================

Block 0x3ae
[0x3ae:0x3b9]
---
Predecessors: [0x39b]
Successors: [0x3ba, 0x3bb]
---
0x3ae JUMPDEST
0x3af DIV
0x3b0 DUP4
0x3b1 DUP4
0x3b2 DUP2
0x3b3 MLOAD
0x3b4 DUP2
0x3b5 LT
0x3b6 PUSH2 0x3bb
0x3b9 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V338 = DIV V334 V325
0x3b3: V339 = M[S4]
0x3b5: V340 = LT S3 V339
0x3b6: V341 = 0x3bb
0x3b9: JUMPI 0x3bb V340
---
Entry stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V325, V334]
Stack pops: 5
Stack additions: [S4, S3, S2, V338, S4, S3]
Exit stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V338, S4, S3]

================================

Block 0x3ba
[0x3ba:0x3ba]
---
Predecessors: [0x3ae]
Successors: []
---
0x3ba INVALID
---
0x3ba: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V338, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V338, S1, S0]

================================

Block 0x3bb
[0x3bb:0x3c5]
---
Predecessors: [0x3ae]
Successors: [0x3c6]
---
0x3bb JUMPDEST
0x3bc PUSH1 0x20
0x3be SWAP1
0x3bf DUP2
0x3c0 MUL
0x3c1 SWAP1
0x3c2 SWAP2
0x3c3 ADD
0x3c4 ADD
0x3c5 MSTORE
---
0x3bb: JUMPDEST 
0x3bc: V342 = 0x20
0x3c0: V343 = MUL 0x20 S0
0x3c3: V344 = ADD S1 V343
0x3c4: V345 = ADD V344 0x20
0x3c5: M[V345] = V338
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V338, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x3c6
[0x3c6:0x3d0]
---
Predecessors: [0x3bb]
Successors: [0x382]
---
0x3c6 JUMPDEST
0x3c7 PUSH1 0x1
0x3c9 SWAP1
0x3ca SWAP2
0x3cb ADD
0x3cc SWAP1
0x3cd PUSH2 0x382
0x3d0 JUMP
---
0x3c6: JUMPDEST 
0x3c7: V346 = 0x1
0x3cb: V347 = ADD S1 0x1
0x3cd: V348 = 0x382
0x3d0: JUMP 0x382
---
Entry stack: [V12, 0x84, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V347, S0]
Exit stack: [V12, 0x84, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V347, S0]

================================

Block 0x3d1
[0x3d1:0x3dd]
---
Predecessors: [0x382]
Successors: [0x3de, 0x3e0]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x3
0x3d4 PUSH1 0x40
0x3d6 MLOAD
0x3d7 DUP1
0x3d8 MSIZE
0x3d9 LT
0x3da PUSH2 0x3e0
0x3dd JUMPI
---
0x3d1: JUMPDEST 
0x3d2: V349 = 0x3
0x3d4: V350 = 0x40
0x3d6: V351 = M[0x40]
0x3d8: V352 = MSIZE
0x3d9: V353 = LT V352 V351
0x3da: V354 = 0x3e0
0x3dd: JUMPI 0x3e0 V353
---
Entry stack: [V12, 0x84, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3, V351]
Exit stack: [V12, 0x84, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3, V351]

================================

Block 0x3de
[0x3de:0x3df]
---
Predecessors: [0x3d1]
Successors: [0x3e0]
---
0x3de POP
0x3df MSIZE
---
0x3df: V355 = MSIZE
---
Entry stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, V351]
Stack pops: 1
Stack additions: [V355]
Exit stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, V355]

================================

Block 0x3e0
[0x3e0:0x3f0]
---
Predecessors: [0x3d1, 0x3de]
Successors: [0x3f1]
---
0x3e0 JUMPDEST
0x3e1 SWAP1
0x3e2 DUP1
0x3e3 DUP3
0x3e4 MSTORE
0x3e5 DUP1
0x3e6 PUSH1 0x20
0x3e8 MUL
0x3e9 PUSH1 0x20
0x3eb ADD
0x3ec DUP3
0x3ed ADD
0x3ee PUSH1 0x40
0x3f0 MSTORE
---
0x3e0: JUMPDEST 
0x3e4: M[S0] = 0x3
0x3e6: V356 = 0x20
0x3e8: V357 = MUL 0x20 0x3
0x3e9: V358 = 0x20
0x3eb: V359 = ADD 0x20 0x60
0x3ed: V360 = ADD S0 0x80
0x3ee: V361 = 0x40
0x3f0: M[0x40] = V360
---
Entry stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, 0x3]

================================

Block 0x3f1
[0x3f1:0x400]
---
Predecessors: [0x3e0]
Successors: [0x401, 0x402]
---
0x3f1 JUMPDEST
0x3f2 POP
0x3f3 SWAP1
0x3f4 POP
0x3f5 DUP14
0x3f6 DUP2
0x3f7 PUSH1 0x0
0x3f9 DUP2
0x3fa MLOAD
0x3fb DUP2
0x3fc LT
0x3fd PUSH2 0x402
0x400 JUMPI
---
0x3f1: JUMPDEST 
0x3f7: V362 = 0x0
0x3fa: V363 = M[S1]
0x3fc: V364 = LT 0x0 V363
0x3fd: V365 = 0x402
0x400: JUMPI 0x402 V364
---
Entry stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1, S15, S1, 0x0]
Exit stack: [V12, 0x84, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1, S15, S1, 0x0]

================================

Block 0x401
[0x401:0x401]
---
Predecessors: [0x3f1]
Successors: []
---
0x401 INVALID
---
0x401: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x402
[0x402:0x425]
---
Predecessors: [0x3f1]
Successors: [0x426, 0x427]
---
0x402 JUMPDEST
0x403 PUSH1 0x1
0x405 PUSH1 0xa0
0x407 PUSH1 0x2
0x409 EXP
0x40a SUB
0x40b SWAP1
0x40c SWAP3
0x40d AND
0x40e PUSH1 0x20
0x410 SWAP3
0x411 DUP4
0x412 MUL
0x413 SWAP1
0x414 SWAP2
0x415 ADD
0x416 SWAP1
0x417 SWAP2
0x418 ADD
0x419 MSTORE
0x41a DUP13
0x41b DUP2
0x41c PUSH1 0x1
0x41e DUP2
0x41f MLOAD
0x420 DUP2
0x421 LT
0x422 PUSH2 0x427
0x425 JUMPI
---
0x402: JUMPDEST 
0x403: V366 = 0x1
0x405: V367 = 0xa0
0x407: V368 = 0x2
0x409: V369 = EXP 0x2 0xa0
0x40a: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40d: V371 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V372 = 0x20
0x412: V373 = MUL 0x20 0x0
0x415: V374 = ADD S1 0x0
0x418: V375 = ADD 0x20 V374
0x419: M[V375] = V371
0x41c: V376 = 0x1
0x41f: V377 = M[S3]
0x421: V378 = LT 0x1 V377
0x422: V379 = 0x427
0x425: JUMPI 0x427 V378
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S15, S3, 0x1]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S15, S3, 0x1]

================================

Block 0x426
[0x426:0x426]
---
Predecessors: [0x402]
Successors: []
---
0x426 INVALID
---
0x426: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x427
[0x427:0x44a]
---
Predecessors: [0x402]
Successors: [0x44b, 0x44c]
---
0x427 JUMPDEST
0x428 PUSH1 0x1
0x42a PUSH1 0xa0
0x42c PUSH1 0x2
0x42e EXP
0x42f SUB
0x430 SWAP1
0x431 SWAP3
0x432 AND
0x433 PUSH1 0x20
0x435 SWAP3
0x436 DUP4
0x437 MUL
0x438 SWAP1
0x439 SWAP2
0x43a ADD
0x43b SWAP1
0x43c SWAP2
0x43d ADD
0x43e MSTORE
0x43f DUP12
0x440 DUP2
0x441 PUSH1 0x2
0x443 DUP2
0x444 MLOAD
0x445 DUP2
0x446 LT
0x447 PUSH2 0x44c
0x44a JUMPI
---
0x427: JUMPDEST 
0x428: V380 = 0x1
0x42a: V381 = 0xa0
0x42c: V382 = 0x2
0x42e: V383 = EXP 0x2 0xa0
0x42f: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x432: V385 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x433: V386 = 0x20
0x437: V387 = MUL 0x20 0x1
0x43a: V388 = ADD S1 0x20
0x43d: V389 = ADD 0x20 V388
0x43e: M[V389] = V385
0x441: V390 = 0x2
0x444: V391 = M[S3]
0x446: V392 = LT 0x2 V391
0x447: V393 = 0x44c
0x44a: JUMPI 0x44c V392
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S14, S3, 0x2]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S14, S3, 0x2]

================================

Block 0x44b
[0x44b:0x44b]
---
Predecessors: [0x427]
Successors: []
---
0x44b INVALID
---
0x44b: INVALID 
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]

================================

Block 0x44c
[0x44c:0x46e]
---
Predecessors: [0x427]
Successors: [0x7f3]
---
0x44c JUMPDEST
0x44d PUSH1 0x1
0x44f PUSH1 0xa0
0x451 PUSH1 0x2
0x453 EXP
0x454 SUB
0x455 SWAP1
0x456 SWAP3
0x457 AND
0x458 PUSH1 0x20
0x45a SWAP3
0x45b DUP4
0x45c MUL
0x45d SWAP1
0x45e SWAP2
0x45f ADD
0x460 SWAP1
0x461 SWAP2
0x462 ADD
0x463 MSTORE
0x464 PUSH2 0x46f
0x467 DUP2
0x468 DUP5
0x469 DUP8
0x46a DUP8
0x46b PUSH2 0x7f3
0x46e JUMP
---
0x44c: JUMPDEST 
0x44d: V394 = 0x1
0x44f: V395 = 0xa0
0x451: V396 = 0x2
0x453: V397 = EXP 0x2 0xa0
0x454: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V399 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x458: V400 = 0x20
0x45c: V401 = MUL 0x20 0x2
0x45f: V402 = ADD S1 0x40
0x462: V403 = ADD 0x20 V402
0x463: M[V403] = V399
0x464: V404 = 0x46f
0x46b: V405 = 0x7f3
0x46e: JUMP 0x7f3
---
Entry stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, 0x46f, S3, S5, S7, S6]
Exit stack: [V12, 0x84, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x46f, S3, S5, S7, S6]

================================

Block 0x46f
[0x46f:0x46f]
---
Predecessors: [0x7ef]
Successors: [0x470]
---
0x46f JUMPDEST
---
0x46f: JUMPDEST 
---
Entry stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S2, S1, S0]

================================

Block 0x470
[0x470:0x470]
---
Predecessors: [0x46f]
Successors: [0x471]
---
0x470 JUMPDEST
---
0x470: JUMPDEST 
---
Entry stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S2, S1, S0]

================================

Block 0x471
[0x471:0x480]
---
Predecessors: [0x470]
Successors: [0x84]
---
0x471 JUMPDEST
0x472 POP
0x473 POP
0x474 POP
0x475 POP
0x476 POP
0x477 POP
0x478 POP
0x479 POP
0x47a POP
0x47b POP
0x47c POP
0x47d POP
0x47e POP
0x47f POP
0x480 JUMP
---
0x471: JUMPDEST 
0x480: JUMP 0x84
---
Entry stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S2, S1, S0]
Stack pops: 15
Stack additions: []
Exit stack: [V12]

================================

Block 0x481
[0x481:0x498]
---
Predecessors: [0xdc]
Successors: [0x499, 0x49d]
---
0x481 JUMPDEST
0x482 PUSH1 0x0
0x484 DUP1
0x485 SLOAD
0x486 CALLER
0x487 PUSH1 0x1
0x489 PUSH1 0xa0
0x48b PUSH1 0x2
0x48d EXP
0x48e SUB
0x48f SWAP1
0x490 DUP2
0x491 AND
0x492 SWAP2
0x493 AND
0x494 EQ
0x495 PUSH2 0x49d
0x498 JUMPI
---
0x481: JUMPDEST 
0x482: V406 = 0x0
0x485: V407 = S[0x0]
0x486: V408 = CALLER
0x487: V409 = 0x1
0x489: V410 = 0xa0
0x48b: V411 = 0x2
0x48d: V412 = EXP 0x2 0xa0
0x48e: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x491: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x493: V415 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x494: V416 = EQ V415 V414
0x495: V417 = 0x49d
0x498: JUMPI 0x49d V416
---
Entry stack: [V12, 0x84, V85]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x84, V85, 0x0]

================================

Block 0x499
[0x499:0x49c]
---
Predecessors: [0x481]
Successors: []
---
0x499 PUSH1 0x0
0x49b DUP1
0x49c REVERT
---
0x499: V418 = 0x0
0x49c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V85, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V85, 0x0]

================================

Block 0x49d
[0x49d:0x4d9]
---
Predecessors: [0x481]
Successors: [0x4da, 0x4de]
---
0x49d JUMPDEST
0x49e POP
0x49f PUSH1 0x1
0x4a1 SLOAD
0x4a2 PUSH1 0x1
0x4a4 PUSH1 0xa0
0x4a6 PUSH1 0x2
0x4a8 EXP
0x4a9 SUB
0x4aa AND
0x4ab DUP1
0x4ac PUSH4 0xd0e30db0
0x4b1 DUP4
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 DUP3
0x4b6 PUSH4 0xffffffff
0x4bb AND
0x4bc PUSH1 0xe0
0x4be PUSH1 0x2
0x4c0 EXP
0x4c1 MUL
0x4c2 DUP2
0x4c3 MSTORE
0x4c4 PUSH1 0x4
0x4c6 ADD
0x4c7 PUSH1 0x0
0x4c9 PUSH1 0x40
0x4cb MLOAD
0x4cc DUP1
0x4cd DUP4
0x4ce SUB
0x4cf DUP2
0x4d0 DUP6
0x4d1 DUP9
0x4d2 DUP1
0x4d3 EXTCODESIZE
0x4d4 ISZERO
0x4d5 ISZERO
0x4d6 PUSH2 0x4de
0x4d9 JUMPI
---
0x49d: JUMPDEST 
0x49f: V419 = 0x1
0x4a1: V420 = S[0x1]
0x4a2: V421 = 0x1
0x4a4: V422 = 0xa0
0x4a6: V423 = 0x2
0x4a8: V424 = EXP 0x2 0xa0
0x4a9: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x4ac: V427 = 0xd0e30db0
0x4b2: V428 = 0x40
0x4b4: V429 = M[0x40]
0x4b6: V430 = 0xffffffff
0x4bb: V431 = AND 0xffffffff 0xd0e30db0
0x4bc: V432 = 0xe0
0x4be: V433 = 0x2
0x4c0: V434 = EXP 0x2 0xe0
0x4c1: V435 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x4c3: M[V429] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x4c4: V436 = 0x4
0x4c6: V437 = ADD 0x4 V429
0x4c7: V438 = 0x0
0x4c9: V439 = 0x40
0x4cb: V440 = M[0x40]
0x4ce: V441 = SUB V437 V440
0x4d3: V442 = EXTCODESIZE V426
0x4d4: V443 = ISZERO V442
0x4d5: V444 = ISZERO V443
0x4d6: V445 = 0x4de
0x4d9: JUMPI 0x4de V444
---
Entry stack: [V12, 0x84, V85, 0x0]
Stack pops: 2
Stack additions: [S1, V426, V426, 0xd0e30db0, S1, V437, 0x0, V440, V441, V440, S1, V426]
Exit stack: [V12, 0x84, V85, V426, V426, 0xd0e30db0, V85, V437, 0x0, V440, V441, V440, V85, V426]

================================

Block 0x4da
[0x4da:0x4dd]
---
Predecessors: [0x49d]
Successors: []
---
0x4da PUSH1 0x0
0x4dc DUP1
0x4dd REVERT
---
0x4da: V446 = 0x0
0x4dd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V85, V426, V426, 0xd0e30db0, V85, V437, 0x0, V440, V441, V440, V85, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V85, V426, V426, 0xd0e30db0, V85, V437, 0x0, V440, V441, V440, V85, V426]

================================

Block 0x4de
[0x4de:0x4ea]
---
Predecessors: [0x49d]
Successors: [0x4eb, 0x4ef]
---
0x4de JUMPDEST
0x4df PUSH2 0x25ee
0x4e2 GAS
0x4e3 SUB
0x4e4 CALL
0x4e5 ISZERO
0x4e6 ISZERO
0x4e7 PUSH2 0x4ef
0x4ea JUMPI
---
0x4de: JUMPDEST 
0x4df: V447 = 0x25ee
0x4e2: V448 = GAS
0x4e3: V449 = SUB V448 0x25ee
0x4e4: V450 = CALL V449 V426 V85 V440 V441 V440 0x0
0x4e5: V451 = ISZERO V450
0x4e6: V452 = ISZERO V451
0x4e7: V453 = 0x4ef
0x4ea: JUMPI 0x4ef V452
---
Entry stack: [V12, 0x84, V85, V426, V426, 0xd0e30db0, V85, V437, 0x0, V440, V441, V440, V85, V426]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, V85, V426, V426, 0xd0e30db0, V85, V437]

================================

Block 0x4eb
[0x4eb:0x4ee]
---
Predecessors: [0x4de]
Successors: []
---
0x4eb PUSH1 0x0
0x4ed DUP1
0x4ee REVERT
---
0x4eb: V454 = 0x0
0x4ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V85, V426, V426, 0xd0e30db0, V85, V437]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V85, V426, V426, 0xd0e30db0, V85, V437]

================================

Block 0x4ef
[0x4ef:0x4f3]
---
Predecessors: [0x4de]
Successors: [0x4f4]
---
0x4ef JUMPDEST
0x4f0 POP
0x4f1 POP
0x4f2 POP
0x4f3 POP
---
0x4ef: JUMPDEST 
---
Entry stack: [V12, 0x84, V85, V426, V426, 0xd0e30db0, V85, V437]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x84, V85, V426]

================================

Block 0x4f4
[0x4f4:0x4f4]
---
Predecessors: [0x4ef]
Successors: [0x4f5]
---
0x4f4 JUMPDEST
---
0x4f4: JUMPDEST 
---
Entry stack: [V12, 0x84, V85, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V85, V426]

================================

Block 0x4f5
[0x4f5:0x4f8]
---
Predecessors: [0x4f4]
Successors: [0x84]
---
0x4f5 JUMPDEST
0x4f6 POP
0x4f7 POP
0x4f8 JUMP
---
0x4f5: JUMPDEST 
0x4f8: JUMP 0x84
---
Entry stack: [V12, 0x84, V85, V426]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f9
[0x4f9:0x50f]
---
Predecessors: [0xf4]
Successors: [0x510, 0x514]
---
0x4f9 JUMPDEST
0x4fa PUSH1 0x0
0x4fc SLOAD
0x4fd CALLER
0x4fe PUSH1 0x1
0x500 PUSH1 0xa0
0x502 PUSH1 0x2
0x504 EXP
0x505 SUB
0x506 SWAP1
0x507 DUP2
0x508 AND
0x509 SWAP2
0x50a AND
0x50b EQ
0x50c PUSH2 0x514
0x50f JUMPI
---
0x4f9: JUMPDEST 
0x4fa: V455 = 0x0
0x4fc: V456 = S[0x0]
0x4fd: V457 = CALLER
0x4fe: V458 = 0x1
0x500: V459 = 0xa0
0x502: V460 = 0x2
0x504: V461 = EXP 0x2 0xa0
0x505: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x508: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x50a: V464 = AND V456 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V465 = EQ V464 V463
0x50c: V466 = 0x514
0x50f: JUMPI 0x514 V465
---
Entry stack: [V12, 0x84, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V93]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x4f9]
Successors: []
---
0x510 PUSH1 0x0
0x512 DUP1
0x513 REVERT
---
0x510: V467 = 0x0
0x513: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V93]

================================

Block 0x514
[0x514:0x542]
---
Predecessors: [0x4f9]
Successors: [0x543, 0x547]
---
0x514 JUMPDEST
0x515 PUSH1 0x0
0x517 SLOAD
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 AND
0x521 DUP2
0x522 ISZERO
0x523 PUSH2 0x8fc
0x526 MUL
0x527 DUP3
0x528 PUSH1 0x40
0x52a MLOAD
0x52b PUSH1 0x0
0x52d PUSH1 0x40
0x52f MLOAD
0x530 DUP1
0x531 DUP4
0x532 SUB
0x533 DUP2
0x534 DUP6
0x535 DUP9
0x536 DUP9
0x537 CALL
0x538 SWAP4
0x539 POP
0x53a POP
0x53b POP
0x53c POP
0x53d ISZERO
0x53e ISZERO
0x53f PUSH2 0x547
0x542 JUMPI
---
0x514: JUMPDEST 
0x515: V468 = 0x0
0x517: V469 = S[0x0]
0x518: V470 = 0x1
0x51a: V471 = 0xa0
0x51c: V472 = 0x2
0x51e: V473 = EXP 0x2 0xa0
0x51f: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x520: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x522: V476 = ISZERO V93
0x523: V477 = 0x8fc
0x526: V478 = MUL 0x8fc V476
0x528: V479 = 0x40
0x52a: V480 = M[0x40]
0x52b: V481 = 0x0
0x52d: V482 = 0x40
0x52f: V483 = M[0x40]
0x532: V484 = SUB V480 V483
0x537: V485 = CALL V478 V475 V93 V483 V484 V483 0x0
0x53d: V486 = ISZERO V485
0x53e: V487 = ISZERO V486
0x53f: V488 = 0x547
0x542: JUMPI 0x547 V487
---
Entry stack: [V12, 0x84, V93]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x84, V93]

================================

Block 0x543
[0x543:0x546]
---
Predecessors: [0x514]
Successors: []
---
0x543 PUSH1 0x0
0x545 DUP1
0x546 REVERT
---
0x543: V489 = 0x0
0x546: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V93]

================================

Block 0x547
[0x547:0x547]
---
Predecessors: [0x514]
Successors: [0x548]
---
0x547 JUMPDEST
---
0x547: JUMPDEST 
---
Entry stack: [V12, 0x84, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V93]

================================

Block 0x548
[0x548:0x548]
---
Predecessors: [0x547]
Successors: [0x549]
---
0x548 JUMPDEST
---
0x548: JUMPDEST 
---
Entry stack: [V12, 0x84, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V93]

================================

Block 0x549
[0x549:0x54b]
---
Predecessors: [0x548]
Successors: [0x84]
---
0x549 JUMPDEST
0x54a POP
0x54b JUMP
---
0x549: JUMPDEST 
0x54b: JUMP 0x84
---
Entry stack: [V12, 0x84, V93]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x54c
[0x54c:0x562]
---
Predecessors: [0x10c]
Successors: [0x563, 0x567]
---
0x54c JUMPDEST
0x54d PUSH1 0x0
0x54f SLOAD
0x550 CALLER
0x551 PUSH1 0x1
0x553 PUSH1 0xa0
0x555 PUSH1 0x2
0x557 EXP
0x558 SUB
0x559 SWAP1
0x55a DUP2
0x55b AND
0x55c SWAP2
0x55d AND
0x55e EQ
0x55f PUSH2 0x567
0x562 JUMPI
---
0x54c: JUMPDEST 
0x54d: V490 = 0x0
0x54f: V491 = S[0x0]
0x550: V492 = CALLER
0x551: V493 = 0x1
0x553: V494 = 0xa0
0x555: V495 = 0x2
0x557: V496 = EXP 0x2 0xa0
0x558: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55b: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x55d: V499 = AND V491 0xffffffffffffffffffffffffffffffffffffffff
0x55e: V500 = EQ V499 V498
0x55f: V501 = 0x567
0x562: JUMPI 0x567 V500
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x563
[0x563:0x566]
---
Predecessors: [0x54c]
Successors: []
---
0x563 PUSH1 0x0
0x565 DUP1
0x566 REVERT
---
0x563: V502 = 0x0
0x566: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x567
[0x567:0x574]
---
Predecessors: [0x54c]
Successors: []
---
0x567 JUMPDEST
0x568 PUSH1 0x0
0x56a SLOAD
0x56b PUSH1 0x1
0x56d PUSH1 0xa0
0x56f PUSH1 0x2
0x571 EXP
0x572 SUB
0x573 AND
0x574 SELFDESTRUCT
---
0x567: JUMPDEST 
0x568: V503 = 0x0
0x56a: V504 = S[0x0]
0x56b: V505 = 0x1
0x56d: V506 = 0xa0
0x56f: V507 = 0x2
0x571: V508 = EXP 0x2 0xa0
0x572: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x573: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x574: SELFDESTRUCT V510
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x575
[0x575:0x575]
---
Predecessors: []
Successors: [0x576]
---
0x575 JUMPDEST
---
0x575: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x576
[0x576:0x577]
---
Predecessors: [0x575]
Successors: []
Has unresolved jump.
---
0x576 JUMPDEST
0x577 JUMP
---
0x576: JUMPDEST 
0x577: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x578
[0x578:0x62e]
---
Predecessors: [0x121]
Successors: [0x62f, 0x633]
---
0x578 JUMPDEST
0x579 PUSH1 0x1
0x57b SLOAD
0x57c PUSH1 0x0
0x57e SWAP1
0x57f PUSH1 0x1
0x581 PUSH1 0xa0
0x583 PUSH1 0x2
0x585 EXP
0x586 SUB
0x587 AND
0x588 DUP1
0x589 PUSH4 0x6c86888b
0x58e DUP15
0x58f DUP15
0x590 DUP15
0x591 DUP15
0x592 DUP15
0x593 DUP15
0x594 DUP15
0x595 DUP15
0x596 DUP15
0x597 DUP15
0x598 DUP15
0x599 ADDRESS
0x59a DUP16
0x59b PUSH1 0x40
0x59d MLOAD
0x59e PUSH1 0x20
0x5a0 ADD
0x5a1 MSTORE
0x5a2 PUSH1 0x40
0x5a4 MLOAD
0x5a5 PUSH1 0xe0
0x5a7 PUSH1 0x2
0x5a9 EXP
0x5aa PUSH4 0xffffffff
0x5af DUP16
0x5b0 AND
0x5b1 MUL
0x5b2 DUP2
0x5b3 MSTORE
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc SWAP13
0x5bd DUP14
0x5be AND
0x5bf PUSH1 0x4
0x5c1 DUP3
0x5c2 ADD
0x5c3 MSTORE
0x5c4 PUSH1 0x24
0x5c6 DUP2
0x5c7 ADD
0x5c8 SWAP12
0x5c9 SWAP1
0x5ca SWAP12
0x5cb MSTORE
0x5cc SWAP9
0x5cd DUP12
0x5ce AND
0x5cf PUSH1 0x44
0x5d1 DUP12
0x5d2 ADD
0x5d3 MSTORE
0x5d4 PUSH1 0x64
0x5d6 DUP11
0x5d7 ADD
0x5d8 SWAP8
0x5d9 SWAP1
0x5da SWAP8
0x5db MSTORE
0x5dc PUSH1 0x84
0x5de DUP10
0x5df ADD
0x5e0 SWAP6
0x5e1 SWAP1
0x5e2 SWAP6
0x5e3 MSTORE
0x5e4 PUSH1 0xa4
0x5e6 DUP9
0x5e7 ADD
0x5e8 SWAP4
0x5e9 SWAP1
0x5ea SWAP4
0x5eb MSTORE
0x5ec SWAP1
0x5ed DUP8
0x5ee AND
0x5ef PUSH1 0xc4
0x5f1 DUP8
0x5f2 ADD
0x5f3 MSTORE
0x5f4 PUSH1 0xff
0x5f6 AND
0x5f7 PUSH1 0xe4
0x5f9 DUP7
0x5fa ADD
0x5fb MSTORE
0x5fc PUSH2 0x104
0x5ff DUP6
0x600 ADD
0x601 MSTORE
0x602 PUSH2 0x124
0x605 DUP5
0x606 ADD
0x607 MSTORE
0x608 PUSH2 0x144
0x60b DUP4
0x60c ADD
0x60d MSTORE
0x60e SWAP1
0x60f SWAP2
0x610 AND
0x611 PUSH2 0x164
0x614 DUP3
0x615 ADD
0x616 MSTORE
0x617 PUSH2 0x184
0x61a ADD
0x61b PUSH1 0x20
0x61d PUSH1 0x40
0x61f MLOAD
0x620 DUP1
0x621 DUP4
0x622 SUB
0x623 DUP2
0x624 PUSH1 0x0
0x626 DUP8
0x627 DUP1
0x628 EXTCODESIZE
0x629 ISZERO
0x62a ISZERO
0x62b PUSH2 0x633
0x62e JUMPI
---
0x578: JUMPDEST 
0x579: V511 = 0x1
0x57b: V512 = S[0x1]
0x57c: V513 = 0x0
0x57f: V514 = 0x1
0x581: V515 = 0xa0
0x583: V516 = 0x2
0x585: V517 = EXP 0x2 0xa0
0x586: V518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x587: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V512
0x589: V520 = 0x6c86888b
0x599: V521 = ADDRESS
0x59b: V522 = 0x40
0x59d: V523 = M[0x40]
0x59e: V524 = 0x20
0x5a0: V525 = ADD 0x20 V523
0x5a1: M[V525] = 0x0
0x5a2: V526 = 0x40
0x5a4: V527 = M[0x40]
0x5a5: V528 = 0xe0
0x5a7: V529 = 0x2
0x5a9: V530 = EXP 0x2 0xe0
0x5aa: V531 = 0xffffffff
0x5b0: V532 = AND 0x6c86888b 0xffffffff
0x5b1: V533 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x5b3: M[V527] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x5b4: V534 = 0x1
0x5b6: V535 = 0xa0
0x5b8: V536 = 0x2
0x5ba: V537 = EXP 0x2 0xa0
0x5bb: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5be: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x5bf: V540 = 0x4
0x5c2: V541 = ADD V527 0x4
0x5c3: M[V541] = V539
0x5c4: V542 = 0x24
0x5c7: V543 = ADD V527 0x24
0x5cb: M[V543] = V115
0x5ce: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x5cf: V545 = 0x44
0x5d2: V546 = ADD V527 0x44
0x5d3: M[V546] = V544
0x5d4: V547 = 0x64
0x5d7: V548 = ADD V527 0x64
0x5db: M[V548] = V120
0x5dc: V549 = 0x84
0x5df: V550 = ADD V527 0x84
0x5e3: M[V550] = V122
0x5e4: V551 = 0xa4
0x5e7: V552 = ADD V527 0xa4
0x5eb: M[V552] = V124
0x5ee: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x5ef: V554 = 0xc4
0x5f2: V555 = ADD V527 0xc4
0x5f3: M[V555] = V553
0x5f4: V556 = 0xff
0x5f6: V557 = AND 0xff V131
0x5f7: V558 = 0xe4
0x5fa: V559 = ADD V527 0xe4
0x5fb: M[V559] = V557
0x5fc: V560 = 0x104
0x600: V561 = ADD V527 0x104
0x601: M[V561] = V133
0x602: V562 = 0x124
0x606: V563 = ADD V527 0x124
0x607: M[V563] = V135
0x608: V564 = 0x144
0x60c: V565 = ADD V527 0x144
0x60d: M[V565] = V137
0x610: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x611: V567 = 0x164
0x615: V568 = ADD V527 0x164
0x616: M[V568] = V566
0x617: V569 = 0x184
0x61a: V570 = ADD 0x184 V527
0x61b: V571 = 0x20
0x61d: V572 = 0x40
0x61f: V573 = M[0x40]
0x622: V574 = SUB V570 V573
0x624: V575 = 0x0
0x628: V576 = EXTCODESIZE V519
0x629: V577 = ISZERO V576
0x62a: V578 = ISZERO V577
0x62b: V579 = 0x633
0x62e: JUMPI 0x633 V578
---
Entry stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V519, V519, 0x6c86888b, V570, 0x20, V573, V574, V573, 0x0, V519]
Exit stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, 0x0, V519, V519, 0x6c86888b, V570, 0x20, V573, V574, V573, 0x0, V519]

================================

Block 0x62f
[0x62f:0x632]
---
Predecessors: [0x578]
Successors: []
---
0x62f PUSH1 0x0
0x631 DUP1
0x632 REVERT
---
0x62f: V580 = 0x0
0x632: REVERT 0x0 0x0
---
Entry stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, 0x0, V519, V519, 0x6c86888b, V570, 0x20, V573, V574, V573, 0x0, V519]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, 0x0, V519, V519, 0x6c86888b, V570, 0x20, V573, V574, V573, 0x0, V519]

================================

Block 0x633
[0x633:0x63f]
---
Predecessors: [0x578]
Successors: [0x640, 0x644]
---
0x633 JUMPDEST
0x634 PUSH2 0x2c6
0x637 GAS
0x638 SUB
0x639 CALL
0x63a ISZERO
0x63b ISZERO
0x63c PUSH2 0x644
0x63f JUMPI
---
0x633: JUMPDEST 
0x634: V581 = 0x2c6
0x637: V582 = GAS
0x638: V583 = SUB V582 0x2c6
0x639: V584 = CALL V583 V519 0x0 V573 V574 V573 0x20
0x63a: V585 = ISZERO V584
0x63b: V586 = ISZERO V585
0x63c: V587 = 0x644
0x63f: JUMPI 0x644 V586
---
Entry stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, 0x0, V519, V519, 0x6c86888b, V570, 0x20, V573, V574, V573, 0x0, V519]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, 0x0, V519, V519, 0x6c86888b, V570]

================================

Block 0x640
[0x640:0x643]
---
Predecessors: [0x633]
Successors: []
---
0x640 PUSH1 0x0
0x642 DUP1
0x643 REVERT
---
0x640: V588 = 0x0
0x643: REVERT 0x0 0x0
---
Entry stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, 0x0, V519, V519, 0x6c86888b, V570]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, 0x0, V519, V519, 0x6c86888b, V570]

================================

Block 0x644
[0x644:0x64f]
---
Predecessors: [0x633]
Successors: [0x650]
---
0x644 JUMPDEST
0x645 POP
0x646 POP
0x647 POP
0x648 PUSH1 0x40
0x64a MLOAD
0x64b DUP1
0x64c MLOAD
0x64d SWAP3
0x64e POP
0x64f POP
---
0x644: JUMPDEST 
0x648: V589 = 0x40
0x64a: V590 = M[0x40]
0x64c: V591 = M[V590]
---
Entry stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, 0x0, V519, V519, 0x6c86888b, V570]
Stack pops: 5
Stack additions: [V591, S3]
Exit stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, V591, V519]

================================

Block 0x650
[0x650:0x65f]
---
Predecessors: [0x644]
Successors: [0x163]
---
0x650 JUMPDEST
0x651 POP
0x652 SWAP12
0x653 SWAP11
0x654 POP
0x655 POP
0x656 POP
0x657 POP
0x658 POP
0x659 POP
0x65a POP
0x65b POP
0x65c POP
0x65d POP
0x65e POP
0x65f JUMP
---
0x650: JUMPDEST 
0x65f: JUMP 0x163
---
Entry stack: [V12, 0x163, V113, V115, V118, V120, V122, V124, V127, V131, V133, V135, V137, V591, V519]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V591]

================================

Block 0x660
[0x660:0x6bf]
---
Predecessors: [0x182]
Successors: [0x6c0, 0x6c4]
---
0x660 JUMPDEST
0x661 PUSH1 0x1
0x663 SLOAD
0x664 PUSH1 0x0
0x666 SWAP1
0x667 PUSH1 0x1
0x669 PUSH1 0xa0
0x66b PUSH1 0x2
0x66d EXP
0x66e SUB
0x66f AND
0x670 DUP1
0x671 PUSH4 0xf7888aec
0x676 DUP5
0x677 ADDRESS
0x678 DUP6
0x679 PUSH1 0x40
0x67b MLOAD
0x67c PUSH1 0x20
0x67e ADD
0x67f MSTORE
0x680 PUSH1 0x40
0x682 MLOAD
0x683 PUSH1 0xe0
0x685 PUSH1 0x2
0x687 EXP
0x688 PUSH4 0xffffffff
0x68d DUP6
0x68e AND
0x68f MUL
0x690 DUP2
0x691 MSTORE
0x692 PUSH1 0x1
0x694 PUSH1 0xa0
0x696 PUSH1 0x2
0x698 EXP
0x699 SUB
0x69a SWAP3
0x69b DUP4
0x69c AND
0x69d PUSH1 0x4
0x69f DUP3
0x6a0 ADD
0x6a1 MSTORE
0x6a2 SWAP2
0x6a3 AND
0x6a4 PUSH1 0x24
0x6a6 DUP3
0x6a7 ADD
0x6a8 MSTORE
0x6a9 PUSH1 0x44
0x6ab ADD
0x6ac PUSH1 0x20
0x6ae PUSH1 0x40
0x6b0 MLOAD
0x6b1 DUP1
0x6b2 DUP4
0x6b3 SUB
0x6b4 DUP2
0x6b5 PUSH1 0x0
0x6b7 DUP8
0x6b8 DUP1
0x6b9 EXTCODESIZE
0x6ba ISZERO
0x6bb ISZERO
0x6bc PUSH2 0x6c4
0x6bf JUMPI
---
0x660: JUMPDEST 
0x661: V592 = 0x1
0x663: V593 = S[0x1]
0x664: V594 = 0x0
0x667: V595 = 0x1
0x669: V596 = 0xa0
0x66b: V597 = 0x2
0x66d: V598 = EXP 0x2 0xa0
0x66e: V599 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66f: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x671: V601 = 0xf7888aec
0x677: V602 = ADDRESS
0x679: V603 = 0x40
0x67b: V604 = M[0x40]
0x67c: V605 = 0x20
0x67e: V606 = ADD 0x20 V604
0x67f: M[V606] = 0x0
0x680: V607 = 0x40
0x682: V608 = M[0x40]
0x683: V609 = 0xe0
0x685: V610 = 0x2
0x687: V611 = EXP 0x2 0xe0
0x688: V612 = 0xffffffff
0x68e: V613 = AND 0xf7888aec 0xffffffff
0x68f: V614 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x691: M[V608] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x692: V615 = 0x1
0x694: V616 = 0xa0
0x696: V617 = 0x2
0x698: V618 = EXP 0x2 0xa0
0x699: V619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69c: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x69d: V621 = 0x4
0x6a0: V622 = ADD V608 0x4
0x6a1: M[V622] = V620
0x6a3: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0x6a4: V624 = 0x24
0x6a7: V625 = ADD V608 0x24
0x6a8: M[V625] = V623
0x6a9: V626 = 0x44
0x6ab: V627 = ADD 0x44 V608
0x6ac: V628 = 0x20
0x6ae: V629 = 0x40
0x6b0: V630 = M[0x40]
0x6b3: V631 = SUB V627 V630
0x6b5: V632 = 0x0
0x6b9: V633 = EXTCODESIZE V600
0x6ba: V634 = ISZERO V633
0x6bb: V635 = ISZERO V634
0x6bc: V636 = 0x6c4
0x6bf: JUMPI 0x6c4 V635
---
Entry stack: [V12, 0x196, V160]
Stack pops: 1
Stack additions: [S0, 0x0, V600, V600, 0xf7888aec, V627, 0x20, V630, V631, V630, 0x0, V600]
Exit stack: [V12, 0x196, V160, 0x0, V600, V600, 0xf7888aec, V627, 0x20, V630, V631, V630, 0x0, V600]

================================

Block 0x6c0
[0x6c0:0x6c3]
---
Predecessors: [0x660]
Successors: []
---
0x6c0 PUSH1 0x0
0x6c2 DUP1
0x6c3 REVERT
---
0x6c0: V637 = 0x0
0x6c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x196, V160, 0x0, V600, V600, 0xf7888aec, V627, 0x20, V630, V631, V630, 0x0, V600]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x196, V160, 0x0, V600, V600, 0xf7888aec, V627, 0x20, V630, V631, V630, 0x0, V600]

================================

Block 0x6c4
[0x6c4:0x6d0]
---
Predecessors: [0x660]
Successors: [0x6d1, 0x6d5]
---
0x6c4 JUMPDEST
0x6c5 PUSH2 0x2c6
0x6c8 GAS
0x6c9 SUB
0x6ca CALL
0x6cb ISZERO
0x6cc ISZERO
0x6cd PUSH2 0x6d5
0x6d0 JUMPI
---
0x6c4: JUMPDEST 
0x6c5: V638 = 0x2c6
0x6c8: V639 = GAS
0x6c9: V640 = SUB V639 0x2c6
0x6ca: V641 = CALL V640 V600 0x0 V630 V631 V630 0x20
0x6cb: V642 = ISZERO V641
0x6cc: V643 = ISZERO V642
0x6cd: V644 = 0x6d5
0x6d0: JUMPI 0x6d5 V643
---
Entry stack: [V12, 0x196, V160, 0x0, V600, V600, 0xf7888aec, V627, 0x20, V630, V631, V630, 0x0, V600]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x196, V160, 0x0, V600, V600, 0xf7888aec, V627]

================================

Block 0x6d1
[0x6d1:0x6d4]
---
Predecessors: [0x6c4]
Successors: []
---
0x6d1 PUSH1 0x0
0x6d3 DUP1
0x6d4 REVERT
---
0x6d1: V645 = 0x0
0x6d4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x196, V160, 0x0, V600, V600, 0xf7888aec, V627]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x196, V160, 0x0, V600, V600, 0xf7888aec, V627]

================================

Block 0x6d5
[0x6d5:0x6e0]
---
Predecessors: [0x6c4]
Successors: [0x6e1]
---
0x6d5 JUMPDEST
0x6d6 POP
0x6d7 POP
0x6d8 POP
0x6d9 PUSH1 0x40
0x6db MLOAD
0x6dc DUP1
0x6dd MLOAD
0x6de SWAP3
0x6df POP
0x6e0 POP
---
0x6d5: JUMPDEST 
0x6d9: V646 = 0x40
0x6db: V647 = M[0x40]
0x6dd: V648 = M[V647]
---
Entry stack: [V12, 0x196, V160, 0x0, V600, V600, 0xf7888aec, V627]
Stack pops: 5
Stack additions: [V648, S3]
Exit stack: [V12, 0x196, V160, V648, V600]

================================

Block 0x6e1
[0x6e1:0x6e6]
---
Predecessors: [0x6d5]
Successors: [0x196]
---
0x6e1 JUMPDEST
0x6e2 POP
0x6e3 SWAP2
0x6e4 SWAP1
0x6e5 POP
0x6e6 JUMP
---
0x6e1: JUMPDEST 
0x6e6: JUMP 0x196
---
Entry stack: [V12, 0x196, V160, V648, V600]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V648]

================================

Block 0x6e7
[0x6e7:0x6f5]
---
Predecessors: [0x1b3]
Successors: [0x1bb]
---
0x6e7 JUMPDEST
0x6e8 PUSH1 0x0
0x6ea SLOAD
0x6eb PUSH1 0x1
0x6ed PUSH1 0xa0
0x6ef PUSH1 0x2
0x6f1 EXP
0x6f2 SUB
0x6f3 AND
0x6f4 DUP2
0x6f5 JUMP
---
0x6e7: JUMPDEST 
0x6e8: V649 = 0x0
0x6ea: V650 = S[0x0]
0x6eb: V651 = 0x1
0x6ed: V652 = 0xa0
0x6ef: V653 = 0x2
0x6f1: V654 = EXP 0x2 0xa0
0x6f2: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f3: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x6f5: JUMP 0x1bb
---
Entry stack: [V12, 0x1bb]
Stack pops: 1
Stack additions: [S0, V656]
Exit stack: [V12, 0x1bb, V656]

================================

Block 0x6f6
[0x6f6:0x770]
---
Predecessors: [0x1d7]
Successors: [0x771]
---
0x6f6 JUMPDEST
0x6f7 PUSH32 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0x718 ADDRESS
0x719 PUSH1 0x40
0x71b MLOAD
0x71c PUSH1 0x1
0x71e PUSH1 0xa0
0x720 PUSH1 0x2
0x722 EXP
0x723 SUB
0x724 SWAP1
0x725 SWAP2
0x726 AND
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0x20
0x72b ADD
0x72c PUSH1 0x40
0x72e MLOAD
0x72f DUP1
0x730 SWAP2
0x731 SUB
0x732 SWAP1
0x733 LOG1
0x734 PUSH32 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0x755 ADDRESS
0x756 PUSH1 0x40
0x758 MLOAD
0x759 PUSH1 0x1
0x75b PUSH1 0xa0
0x75d PUSH1 0x2
0x75f EXP
0x760 SUB
0x761 SWAP1
0x762 SWAP2
0x763 AND
0x764 DUP2
0x765 MSTORE
0x766 PUSH1 0x20
0x768 ADD
0x769 PUSH1 0x40
0x76b MLOAD
0x76c DUP1
0x76d SWAP2
0x76e SUB
0x76f SWAP1
0x770 LOG1
---
0x6f6: JUMPDEST 
0x6f7: V657 = 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0x718: V658 = ADDRESS
0x719: V659 = 0x40
0x71b: V660 = M[0x40]
0x71c: V661 = 0x1
0x71e: V662 = 0xa0
0x720: V663 = 0x2
0x722: V664 = EXP 0x2 0xa0
0x723: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x726: V666 = AND V658 0xffffffffffffffffffffffffffffffffffffffff
0x728: M[V660] = V666
0x729: V667 = 0x20
0x72b: V668 = ADD 0x20 V660
0x72c: V669 = 0x40
0x72e: V670 = M[0x40]
0x731: V671 = SUB V668 V670
0x733: LOG V670 V671 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0x734: V672 = 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0x755: V673 = ADDRESS
0x756: V674 = 0x40
0x758: V675 = M[0x40]
0x759: V676 = 0x1
0x75b: V677 = 0xa0
0x75d: V678 = 0x2
0x75f: V679 = EXP 0x2 0xa0
0x760: V680 = SUB 0x10000000000000000000000000000000000000000 0x1
0x763: V681 = AND V673 0xffffffffffffffffffffffffffffffffffffffff
0x765: M[V675] = V681
0x766: V682 = 0x20
0x768: V683 = ADD 0x20 V675
0x769: V684 = 0x40
0x76b: V685 = M[0x40]
0x76e: V686 = SUB V683 V685
0x770: LOG V685 V686 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x771
[0x771:0x772]
---
Predecessors: [0x6f6]
Successors: [0x84]
---
0x771 JUMPDEST
0x772 JUMP
---
0x771: JUMPDEST 
0x772: JUMP 0x84
---
Entry stack: [V12, 0x84]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x773
[0x773:0x78a]
---
Predecessors: [0x1ec]
Successors: [0x78b, 0x78f]
---
0x773 JUMPDEST
0x774 PUSH1 0x0
0x776 DUP1
0x777 SLOAD
0x778 CALLER
0x779 PUSH1 0x1
0x77b PUSH1 0xa0
0x77d PUSH1 0x2
0x77f EXP
0x780 SUB
0x781 SWAP1
0x782 DUP2
0x783 AND
0x784 SWAP2
0x785 AND
0x786 EQ
0x787 PUSH2 0x78f
0x78a JUMPI
---
0x773: JUMPDEST 
0x774: V687 = 0x0
0x777: V688 = S[0x0]
0x778: V689 = CALLER
0x779: V690 = 0x1
0x77b: V691 = 0xa0
0x77d: V692 = 0x2
0x77f: V693 = EXP 0x2 0xa0
0x780: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x783: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0x785: V696 = AND V688 0xffffffffffffffffffffffffffffffffffffffff
0x786: V697 = EQ V696 V695
0x787: V698 = 0x78f
0x78a: JUMPI 0x78f V697
---
Entry stack: [V12, 0x84, V196]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x84, V196, 0x0]

================================

Block 0x78b
[0x78b:0x78e]
---
Predecessors: [0x773]
Successors: []
---
0x78b PUSH1 0x0
0x78d DUP1
0x78e REVERT
---
0x78b: V699 = 0x0
0x78e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V196, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V196, 0x0]

================================

Block 0x78f
[0x78f:0x7d4]
---
Predecessors: [0x773]
Successors: [0x7d5, 0x7d9]
---
0x78f JUMPDEST
0x790 POP
0x791 PUSH1 0x1
0x793 SLOAD
0x794 PUSH1 0x1
0x796 PUSH1 0xa0
0x798 PUSH1 0x2
0x79a EXP
0x79b SUB
0x79c AND
0x79d DUP1
0x79e PUSH4 0x2e1a7d4d
0x7a3 DUP4
0x7a4 PUSH1 0x40
0x7a6 MLOAD
0x7a7 PUSH1 0xe0
0x7a9 PUSH1 0x2
0x7ab EXP
0x7ac PUSH4 0xffffffff
0x7b1 DUP5
0x7b2 AND
0x7b3 MUL
0x7b4 DUP2
0x7b5 MSTORE
0x7b6 PUSH1 0x4
0x7b8 DUP2
0x7b9 ADD
0x7ba SWAP2
0x7bb SWAP1
0x7bc SWAP2
0x7bd MSTORE
0x7be PUSH1 0x24
0x7c0 ADD
0x7c1 PUSH1 0x0
0x7c3 PUSH1 0x40
0x7c5 MLOAD
0x7c6 DUP1
0x7c7 DUP4
0x7c8 SUB
0x7c9 DUP2
0x7ca PUSH1 0x0
0x7cc DUP8
0x7cd DUP1
0x7ce EXTCODESIZE
0x7cf ISZERO
0x7d0 ISZERO
0x7d1 PUSH2 0x7d9
0x7d4 JUMPI
---
0x78f: JUMPDEST 
0x791: V700 = 0x1
0x793: V701 = S[0x1]
0x794: V702 = 0x1
0x796: V703 = 0xa0
0x798: V704 = 0x2
0x79a: V705 = EXP 0x2 0xa0
0x79b: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79c: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0x79e: V708 = 0x2e1a7d4d
0x7a4: V709 = 0x40
0x7a6: V710 = M[0x40]
0x7a7: V711 = 0xe0
0x7a9: V712 = 0x2
0x7ab: V713 = EXP 0x2 0xe0
0x7ac: V714 = 0xffffffff
0x7b2: V715 = AND 0x2e1a7d4d 0xffffffff
0x7b3: V716 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x7b5: M[V710] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x7b6: V717 = 0x4
0x7b9: V718 = ADD V710 0x4
0x7bd: M[V718] = V196
0x7be: V719 = 0x24
0x7c0: V720 = ADD 0x24 V710
0x7c1: V721 = 0x0
0x7c3: V722 = 0x40
0x7c5: V723 = M[0x40]
0x7c8: V724 = SUB V720 V723
0x7ca: V725 = 0x0
0x7ce: V726 = EXTCODESIZE V707
0x7cf: V727 = ISZERO V726
0x7d0: V728 = ISZERO V727
0x7d1: V729 = 0x7d9
0x7d4: JUMPI 0x7d9 V728
---
Entry stack: [V12, 0x84, V196, 0x0]
Stack pops: 2
Stack additions: [S1, V707, V707, 0x2e1a7d4d, V720, 0x0, V723, V724, V723, 0x0, V707]
Exit stack: [V12, 0x84, V196, V707, V707, 0x2e1a7d4d, V720, 0x0, V723, V724, V723, 0x0, V707]

================================

Block 0x7d5
[0x7d5:0x7d8]
---
Predecessors: [0x78f]
Successors: []
---
0x7d5 PUSH1 0x0
0x7d7 DUP1
0x7d8 REVERT
---
0x7d5: V730 = 0x0
0x7d8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V196, V707, V707, 0x2e1a7d4d, V720, 0x0, V723, V724, V723, 0x0, V707]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V196, V707, V707, 0x2e1a7d4d, V720, 0x0, V723, V724, V723, 0x0, V707]

================================

Block 0x7d9
[0x7d9:0x7e5]
---
Predecessors: [0x78f]
Successors: [0x7e6, 0x7ea]
---
0x7d9 JUMPDEST
0x7da PUSH2 0x2c6
0x7dd GAS
0x7de SUB
0x7df CALL
0x7e0 ISZERO
0x7e1 ISZERO
0x7e2 PUSH2 0x7ea
0x7e5 JUMPI
---
0x7d9: JUMPDEST 
0x7da: V731 = 0x2c6
0x7dd: V732 = GAS
0x7de: V733 = SUB V732 0x2c6
0x7df: V734 = CALL V733 V707 0x0 V723 V724 V723 0x0
0x7e0: V735 = ISZERO V734
0x7e1: V736 = ISZERO V735
0x7e2: V737 = 0x7ea
0x7e5: JUMPI 0x7ea V736
---
Entry stack: [V12, 0x84, V196, V707, V707, 0x2e1a7d4d, V720, 0x0, V723, V724, V723, 0x0, V707]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, V196, V707, V707, 0x2e1a7d4d, V720]

================================

Block 0x7e6
[0x7e6:0x7e9]
---
Predecessors: [0x7d9]
Successors: []
---
0x7e6 PUSH1 0x0
0x7e8 DUP1
0x7e9 REVERT
---
0x7e6: V738 = 0x0
0x7e9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V196, V707, V707, 0x2e1a7d4d, V720]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V196, V707, V707, 0x2e1a7d4d, V720]

================================

Block 0x7ea
[0x7ea:0x7ed]
---
Predecessors: [0x7d9, 0xd1c]
Successors: [0x7ee]
---
0x7ea JUMPDEST
0x7eb POP
0x7ec POP
0x7ed POP
---
0x7ea: JUMPDEST 
---
Entry stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S8, S7, S6, {0x84, 0x46f}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S8, S7, S6, {0x84, 0x46f}, S4, S3]

================================

Block 0x7ee
[0x7ee:0x7ee]
---
Predecessors: [0x7ea]
Successors: [0x7ef]
---
0x7ee JUMPDEST
---
0x7ee: JUMPDEST 
---
Entry stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S5, S4, S3, {0x84, 0x46f}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S5, S4, S3, {0x84, 0x46f}, S1, S0]

================================

Block 0x7ef
[0x7ef:0x7f2]
---
Predecessors: [0x7ee]
Successors: [0x84, 0x46f]
---
0x7ef JUMPDEST
0x7f0 POP
0x7f1 POP
0x7f2 JUMP
---
0x7ef: JUMPDEST 
0x7f2: JUMP {0x84, 0x46f}
---
Entry stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S5, S4, S3, {0x84, 0x46f}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S5, S4, S3]

================================

Block 0x7f3
[0x7f3:0x80a]
---
Predecessors: [0x44c]
Successors: [0x80b, 0x80f]
---
0x7f3 JUMPDEST
0x7f4 PUSH1 0x0
0x7f6 DUP1
0x7f7 SLOAD
0x7f8 CALLER
0x7f9 PUSH1 0x1
0x7fb PUSH1 0xa0
0x7fd PUSH1 0x2
0x7ff EXP
0x800 SUB
0x801 SWAP1
0x802 DUP2
0x803 AND
0x804 SWAP2
0x805 AND
0x806 EQ
0x807 PUSH2 0x80f
0x80a JUMPI
---
0x7f3: JUMPDEST 
0x7f4: V739 = 0x0
0x7f7: V740 = S[0x0]
0x7f8: V741 = CALLER
0x7f9: V742 = 0x1
0x7fb: V743 = 0xa0
0x7fd: V744 = 0x2
0x7ff: V745 = EXP 0x2 0xa0
0x800: V746 = SUB 0x10000000000000000000000000000000000000000 0x1
0x803: V747 = AND 0xffffffffffffffffffffffffffffffffffffffff V741
0x805: V748 = AND V740 0xffffffffffffffffffffffffffffffffffffffff
0x806: V749 = EQ V748 V747
0x807: V750 = 0x80f
0x80a: JUMPI 0x80f V749
---
Entry stack: [V12, 0x84, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x46f, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x84, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x46f, S3, S2, S1, S0, 0x0]

================================

Block 0x80b
[0x80b:0x80e]
---
Predecessors: [0x7f3]
Successors: []
---
0x80b PUSH1 0x0
0x80d DUP1
0x80e REVERT
---
0x80b: V751 = 0x0
0x80e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x46f, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x46f, S4, S3, S2, S1, 0x0]

================================

Block 0x80f
[0x80f:0x81a]
---
Predecessors: [0x7f3]
Successors: [0x81b, 0x81c]
---
0x80f JUMPDEST
0x810 DUP4
0x811 PUSH1 0x5
0x813 DUP2
0x814 MLOAD
0x815 DUP2
0x816 LT
0x817 PUSH2 0x81c
0x81a JUMPI
---
0x80f: JUMPDEST 
0x811: V752 = 0x5
0x814: V753 = M[S3]
0x816: V754 = LT 0x5 V753
0x817: V755 = 0x81c
0x81a: JUMPI 0x81c V754
---
Entry stack: [V12, 0x84, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x46f, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x5]
Exit stack: [V12, 0x84, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x46f, S4, S3, S2, S1, 0x0, S3, 0x5]

================================

Block 0x81b
[0x81b:0x81b]
---
Predecessors: [0x80f]
Successors: []
---
0x81b INVALID
---
0x81b: INVALID 
---
Entry stack: [V12, 0x84, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x46f, S6, S5, S4, S3, 0x0, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x46f, S6, S5, S4, S3, 0x0, S1, 0x5]

================================

Block 0x81c
[0x81c:0x856]
---
Predecessors: [0x80f]
Successors: [0x857, 0x858]
---
0x81c JUMPDEST
0x81d SWAP1
0x81e PUSH1 0x20
0x820 ADD
0x821 SWAP1
0x822 PUSH1 0x20
0x824 MUL
0x825 ADD
0x826 MLOAD
0x827 SWAP1
0x828 POP
0x829 PUSH32 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979
0x84a PUSH1 0x2
0x84c DUP7
0x84d PUSH1 0x0
0x84f DUP2
0x850 MLOAD
0x851 DUP2
0x852 LT
0x853 PUSH2 0x858
0x856 JUMPI
---
0x81c: JUMPDEST 
0x81e: V756 = 0x20
0x820: V757 = ADD 0x20 S1
0x822: V758 = 0x20
0x824: V759 = MUL 0x20 0x5
0x825: V760 = ADD 0xa0 V757
0x826: V761 = M[V760]
0x829: V762 = 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979
0x84a: V763 = 0x2
0x84d: V764 = 0x0
0x850: V765 = M[S6]
0x852: V766 = LT 0x0 V765
0x853: V767 = 0x858
0x856: JUMPI 0x858 V766
---
Entry stack: [V12, 0x84, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x46f, S6, S5, S4, S3, 0x0, S1, 0x5]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, S6, 0x0]
Exit stack: [V12, 0x84, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x46f, S6, S5, S4, S3, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, S6, 0x0]

================================

Block 0x857
[0x857:0x857]
---
Predecessors: [0x81c]
Successors: []
---
0x857 INVALID
---
0x857: INVALID 
---
Entry stack: [V12, 0x84, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x46f, S8, S7, S6, S5, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x46f, S8, S7, S6, S5, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, S1, 0x0]

================================

Block 0x858
[0x858:0x86d]
---
Predecessors: [0x81c]
Successors: [0x86e, 0x86f]
---
0x858 JUMPDEST
0x859 SWAP1
0x85a PUSH1 0x20
0x85c ADD
0x85d SWAP1
0x85e PUSH1 0x20
0x860 MUL
0x861 ADD
0x862 MLOAD
0x863 DUP7
0x864 PUSH1 0x0
0x866 DUP2
0x867 MLOAD
0x868 DUP2
0x869 LT
0x86a PUSH2 0x86f
0x86d JUMPI
---
0x858: JUMPDEST 
0x85a: V768 = 0x20
0x85c: V769 = ADD 0x20 S1
0x85e: V770 = 0x20
0x860: V771 = MUL 0x20 0x0
0x861: V772 = ADD 0x0 V769
0x862: V773 = M[V772]
0x864: V774 = 0x0
0x867: V775 = M[S7]
0x869: V776 = LT 0x0 V775
0x86a: V777 = 0x86f
0x86d: JUMPI 0x86f V776
---
Entry stack: [V12, 0x84, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x46f, S8, S7, S6, S5, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, S1, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V773, S7, 0x0]
Exit stack: [V12, 0x84, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x46f, S8, S7, S6, S5, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, S7, 0x0]

================================

Block 0x86e
[0x86e:0x86e]
---
Predecessors: [0x858]
Successors: []
---
0x86e INVALID
---
0x86e: INVALID 
---
Entry stack: [V12, 0x84, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x46f, S9, S8, S7, S6, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x46f, S9, S8, S7, S6, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, S1, 0x0]

================================

Block 0x86f
[0x86f:0x884]
---
Predecessors: [0x858]
Successors: [0x885, 0x886]
---
0x86f JUMPDEST
0x870 SWAP1
0x871 PUSH1 0x20
0x873 ADD
0x874 SWAP1
0x875 PUSH1 0x20
0x877 MUL
0x878 ADD
0x879 MLOAD
0x87a DUP9
0x87b PUSH1 0x1
0x87d DUP2
0x87e MLOAD
0x87f DUP2
0x880 LT
0x881 PUSH2 0x886
0x884 JUMPI
---
0x86f: JUMPDEST 
0x871: V778 = 0x20
0x873: V779 = ADD 0x20 S1
0x875: V780 = 0x20
0x877: V781 = MUL 0x20 0x0
0x878: V782 = ADD 0x0 V779
0x879: V783 = M[V782]
0x87b: V784 = 0x1
0x87e: V785 = M[S9]
0x880: V786 = LT 0x1 V785
0x881: V787 = 0x886
0x884: JUMPI 0x886 V786
---
Entry stack: [V12, 0x84, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x46f, S9, S8, S7, S6, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, S1, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V783, S9, 0x1]
Exit stack: [V12, 0x84, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x46f, S9, S8, S7, S6, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, S9, 0x1]

================================

Block 0x885
[0x885:0x885]
---
Predecessors: [0x86f]
Successors: []
---
0x885 INVALID
---
0x885: INVALID 
---
Entry stack: [V12, 0x84, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x46f, S10, S9, S8, S7, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x46f, S10, S9, S8, S7, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, S1, 0x1]

================================

Block 0x886
[0x886:0x89b]
---
Predecessors: [0x86f]
Successors: [0x89c, 0x89d]
---
0x886 JUMPDEST
0x887 SWAP1
0x888 PUSH1 0x20
0x88a ADD
0x88b SWAP1
0x88c PUSH1 0x20
0x88e MUL
0x88f ADD
0x890 MLOAD
0x891 DUP9
0x892 PUSH1 0x1
0x894 DUP2
0x895 MLOAD
0x896 DUP2
0x897 LT
0x898 PUSH2 0x89d
0x89b JUMPI
---
0x886: JUMPDEST 
0x888: V788 = 0x20
0x88a: V789 = ADD 0x20 S1
0x88c: V790 = 0x20
0x88e: V791 = MUL 0x20 0x1
0x88f: V792 = ADD 0x20 V789
0x890: V793 = M[V792]
0x892: V794 = 0x1
0x895: V795 = M[S9]
0x897: V796 = LT 0x1 V795
0x898: V797 = 0x89d
0x89b: JUMPI 0x89d V796
---
Entry stack: [V12, 0x84, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x46f, S10, S9, S8, S7, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, S1, 0x1]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V793, S9, 0x1]
Exit stack: [V12, 0x84, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x46f, S10, S9, S8, S7, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, S9, 0x1]

================================

Block 0x89c
[0x89c:0x89c]
---
Predecessors: [0x886]
Successors: []
---
0x89c INVALID
---
0x89c: INVALID 
---
Entry stack: [V12, 0x84, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x46f, S11, S10, S9, S8, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x46f, S11, S10, S9, S8, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, S1, 0x1]

================================

Block 0x89d
[0x89d:0x8b2]
---
Predecessors: [0x886]
Successors: [0x8b3, 0x8b4]
---
0x89d JUMPDEST
0x89e SWAP1
0x89f PUSH1 0x20
0x8a1 ADD
0x8a2 SWAP1
0x8a3 PUSH1 0x20
0x8a5 MUL
0x8a6 ADD
0x8a7 MLOAD
0x8a8 DUP10
0x8a9 PUSH1 0x3
0x8ab DUP2
0x8ac MLOAD
0x8ad DUP2
0x8ae LT
0x8af PUSH2 0x8b4
0x8b2 JUMPI
---
0x89d: JUMPDEST 
0x89f: V798 = 0x20
0x8a1: V799 = ADD 0x20 S1
0x8a3: V800 = 0x20
0x8a5: V801 = MUL 0x20 0x1
0x8a6: V802 = ADD 0x20 V799
0x8a7: V803 = M[V802]
0x8a9: V804 = 0x3
0x8ac: V805 = M[S10]
0x8ae: V806 = LT 0x3 V805
0x8af: V807 = 0x8b4
0x8b2: JUMPI 0x8b4 V806
---
Entry stack: [V12, 0x84, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x46f, S11, S10, S9, S8, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, S1, 0x1]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V803, S10, 0x3]
Exit stack: [V12, 0x84, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x46f, S11, S10, S9, S8, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, S10, 0x3]

================================

Block 0x8b3
[0x8b3:0x8b3]
---
Predecessors: [0x89d]
Successors: []
---
0x8b3 INVALID
---
0x8b3: INVALID 
---
Entry stack: [V12, 0x84, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x46f, S12, S11, S10, S9, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x46f, S12, S11, S10, S9, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, S1, 0x3]

================================

Block 0x8b4
[0x8b4:0x8c9]
---
Predecessors: [0x89d]
Successors: [0x8ca, 0x8cb]
---
0x8b4 JUMPDEST
0x8b5 SWAP1
0x8b6 PUSH1 0x20
0x8b8 ADD
0x8b9 SWAP1
0x8ba PUSH1 0x20
0x8bc MUL
0x8bd ADD
0x8be MLOAD
0x8bf DUP11
0x8c0 PUSH1 0x4
0x8c2 DUP2
0x8c3 MLOAD
0x8c4 DUP2
0x8c5 LT
0x8c6 PUSH2 0x8cb
0x8c9 JUMPI
---
0x8b4: JUMPDEST 
0x8b6: V808 = 0x20
0x8b8: V809 = ADD 0x20 S1
0x8ba: V810 = 0x20
0x8bc: V811 = MUL 0x20 0x3
0x8bd: V812 = ADD 0x60 V809
0x8be: V813 = M[V812]
0x8c0: V814 = 0x4
0x8c3: V815 = M[S11]
0x8c5: V816 = LT 0x4 V815
0x8c6: V817 = 0x8cb
0x8c9: JUMPI 0x8cb V816
---
Entry stack: [V12, 0x84, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x46f, S12, S11, S10, S9, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, S1, 0x3]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V813, S11, 0x4]
Exit stack: [V12, 0x84, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x46f, S12, S11, S10, S9, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, S11, 0x4]

================================

Block 0x8ca
[0x8ca:0x8ca]
---
Predecessors: [0x8b4]
Successors: []
---
0x8ca INVALID
---
0x8ca: INVALID 
---
Entry stack: [V12, 0x84, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x46f, S13, S12, S11, S10, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x46f, S13, S12, S11, S10, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, S1, 0x4]

================================

Block 0x8cb
[0x8cb:0x8e0]
---
Predecessors: [0x8b4]
Successors: [0x8e1, 0x8e2]
---
0x8cb JUMPDEST
0x8cc SWAP1
0x8cd PUSH1 0x20
0x8cf ADD
0x8d0 SWAP1
0x8d1 PUSH1 0x20
0x8d3 MUL
0x8d4 ADD
0x8d5 MLOAD
0x8d6 DUP13
0x8d7 PUSH1 0x2
0x8d9 DUP2
0x8da MLOAD
0x8db DUP2
0x8dc LT
0x8dd PUSH2 0x8e2
0x8e0 JUMPI
---
0x8cb: JUMPDEST 
0x8cd: V818 = 0x20
0x8cf: V819 = ADD 0x20 S1
0x8d1: V820 = 0x20
0x8d3: V821 = MUL 0x20 0x4
0x8d4: V822 = ADD 0x80 V819
0x8d5: V823 = M[V822]
0x8d7: V824 = 0x2
0x8da: V825 = M[S13]
0x8dc: V826 = LT 0x2 V825
0x8dd: V827 = 0x8e2
0x8e0: JUMPI 0x8e2 V826
---
Entry stack: [V12, 0x84, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x46f, S13, S12, S11, S10, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, S1, 0x4]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V823, S13, 0x2]
Exit stack: [V12, 0x84, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x46f, S13, S12, S11, S10, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, V823, S13, 0x2]

================================

Block 0x8e1
[0x8e1:0x8e1]
---
Predecessors: [0x8cb]
Successors: []
---
0x8e1 INVALID
---
0x8e1: INVALID 
---
Entry stack: [V12, 0x84, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x46f, S14, S13, S12, S11, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, V823, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x46f, S14, S13, S12, S11, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, V823, S1, 0x2]

================================

Block 0x8e2
[0x8e2:0x8fa]
---
Predecessors: [0x8cb]
Successors: [0x8fb, 0x8fc]
---
0x8e2 JUMPDEST
0x8e3 SWAP1
0x8e4 PUSH1 0x20
0x8e6 ADD
0x8e7 SWAP1
0x8e8 PUSH1 0x20
0x8ea MUL
0x8eb ADD
0x8ec MLOAD
0x8ed DUP10
0x8ee DUP13
0x8ef DUP13
0x8f0 DUP16
0x8f1 PUSH1 0x2
0x8f3 DUP2
0x8f4 MLOAD
0x8f5 DUP2
0x8f6 LT
0x8f7 PUSH2 0x8fc
0x8fa JUMPI
---
0x8e2: JUMPDEST 
0x8e4: V828 = 0x20
0x8e6: V829 = ADD 0x20 S1
0x8e8: V830 = 0x20
0x8ea: V831 = MUL 0x20 0x2
0x8eb: V832 = ADD 0x40 V829
0x8ec: V833 = M[V832]
0x8f1: V834 = 0x2
0x8f4: V835 = M[S13]
0x8f6: V836 = LT 0x2 V835
0x8f7: V837 = 0x8fc
0x8fa: JUMPI 0x8fc V836
---
Entry stack: [V12, 0x84, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x46f, S14, S13, S12, S11, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, V823, S1, 0x2]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V833, S10, S12, S11, S13, 0x2]
Exit stack: [V12, 0x84, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x46f, S14, S13, S12, S11, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, V823, V833, V761, S12, S11, S13, 0x2]

================================

Block 0x8fb
[0x8fb:0x8fb]
---
Predecessors: [0x8e2]
Successors: []
---
0x8fb INVALID
---
0x8fb: INVALID 
---
Entry stack: [V12, 0x84, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x46f, S18, S17, S16, S15, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, V823, V833, V761, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x46f, S18, S17, S16, S15, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, V823, V833, V761, S3, S2, S1, 0x2]

================================

Block 0x8fc
[0x8fc:0x98e]
---
Predecessors: [0x8e2]
Successors: [0x98f, 0x990]
---
0x8fc JUMPDEST
0x8fd SWAP1
0x8fe PUSH1 0x20
0x900 ADD
0x901 SWAP1
0x902 PUSH1 0x20
0x904 MUL
0x905 ADD
0x906 MLOAD
0x907 PUSH1 0x40
0x909 MLOAD
0x90a SWAP12
0x90b DUP13
0x90c MSTORE
0x90d PUSH1 0x1
0x90f PUSH1 0xa0
0x911 PUSH1 0x2
0x913 EXP
0x914 SUB
0x915 SWAP11
0x916 DUP12
0x917 AND
0x918 PUSH1 0x20
0x91a DUP14
0x91b ADD
0x91c MSTORE
0x91d PUSH1 0x40
0x91f DUP1
0x920 DUP14
0x921 ADD
0x922 SWAP11
0x923 SWAP1
0x924 SWAP11
0x925 MSTORE
0x926 SWAP8
0x927 DUP11
0x928 AND
0x929 PUSH1 0x60
0x92b DUP13
0x92c ADD
0x92d MSTORE
0x92e PUSH1 0x80
0x930 DUP12
0x931 ADD
0x932 SWAP7
0x933 SWAP1
0x934 SWAP7
0x935 MSTORE
0x936 PUSH1 0xa0
0x938 DUP11
0x939 ADD
0x93a SWAP5
0x93b SWAP1
0x93c SWAP5
0x93d MSTORE
0x93e PUSH1 0xc0
0x940 DUP10
0x941 ADD
0x942 SWAP3
0x943 SWAP1
0x944 SWAP3
0x945 MSTORE
0x946 SWAP1
0x947 SWAP6
0x948 AND
0x949 PUSH1 0xe0
0x94b DUP8
0x94c ADD
0x94d MSTORE
0x94e PUSH1 0xff
0x950 SWAP1
0x951 SWAP5
0x952 AND
0x953 PUSH2 0x100
0x956 DUP7
0x957 ADD
0x958 MSTORE
0x959 PUSH2 0x120
0x95c DUP6
0x95d ADD
0x95e SWAP4
0x95f SWAP1
0x960 SWAP4
0x961 MSTORE
0x962 PUSH2 0x140
0x965 DUP5
0x966 ADD
0x967 SWAP3
0x968 SWAP1
0x969 SWAP3
0x96a MSTORE
0x96b PUSH2 0x160
0x96e DUP4
0x96f ADD
0x970 SWAP2
0x971 SWAP1
0x972 SWAP2
0x973 MSTORE
0x974 PUSH2 0x180
0x977 SWAP1
0x978 SWAP2
0x979 ADD
0x97a SWAP1
0x97b MLOAD
0x97c DUP1
0x97d SWAP2
0x97e SUB
0x97f SWAP1
0x980 LOG1
0x981 PUSH2 0x7ea
0x984 DUP6
0x985 PUSH1 0x0
0x987 DUP2
0x988 MLOAD
0x989 DUP2
0x98a LT
0x98b PUSH2 0x990
0x98e JUMPI
---
0x8fc: JUMPDEST 
0x8fe: V838 = 0x20
0x900: V839 = ADD 0x20 S1
0x902: V840 = 0x20
0x904: V841 = MUL 0x20 0x2
0x905: V842 = ADD 0x40 V839
0x906: V843 = M[V842]
0x907: V844 = 0x40
0x909: V845 = M[0x40]
0x90c: M[V845] = 0x2
0x90d: V846 = 0x1
0x90f: V847 = 0xa0
0x911: V848 = 0x2
0x913: V849 = EXP 0x2 0xa0
0x914: V850 = SUB 0x10000000000000000000000000000000000000000 0x1
0x917: V851 = AND 0xffffffffffffffffffffffffffffffffffffffff V773
0x918: V852 = 0x20
0x91b: V853 = ADD V845 0x20
0x91c: M[V853] = V851
0x91d: V854 = 0x40
0x921: V855 = ADD V845 0x40
0x925: M[V855] = V783
0x928: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff V793
0x929: V857 = 0x60
0x92c: V858 = ADD V845 0x60
0x92d: M[V858] = V856
0x92e: V859 = 0x80
0x931: V860 = ADD V845 0x80
0x935: M[V860] = V803
0x936: V861 = 0xa0
0x939: V862 = ADD V845 0xa0
0x93d: M[V862] = V813
0x93e: V863 = 0xc0
0x941: V864 = ADD V845 0xc0
0x945: M[V864] = V823
0x948: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff V833
0x949: V866 = 0xe0
0x94c: V867 = ADD V845 0xe0
0x94d: M[V867] = V865
0x94e: V868 = 0xff
0x952: V869 = AND V761 0xff
0x953: V870 = 0x100
0x957: V871 = ADD V845 0x100
0x958: M[V871] = V869
0x959: V872 = 0x120
0x95d: V873 = ADD V845 0x120
0x961: M[V873] = S3
0x962: V874 = 0x140
0x966: V875 = ADD V845 0x140
0x96a: M[V875] = S2
0x96b: V876 = 0x160
0x96f: V877 = ADD V845 0x160
0x973: M[V877] = V843
0x974: V878 = 0x180
0x979: V879 = ADD V845 0x180
0x97b: V880 = M[0x40]
0x97e: V881 = SUB V879 V880
0x980: LOG V880 V881 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979
0x981: V882 = 0x7ea
0x985: V883 = 0x0
0x988: V884 = M[S18]
0x98a: V885 = LT 0x0 V884
0x98b: V886 = 0x990
0x98e: JUMPI 0x990 V885
---
Entry stack: [V12, 0x84, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x46f, S18, S17, S16, S15, V761, 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979, 0x2, V773, V783, V793, V803, V813, V823, V833, V761, S3, S2, S1, 0x2]
Stack pops: 19
Stack additions: [S18, S17, S16, S15, S14, 0x7ea, S18, 0x0]
Exit stack: [V12, 0x84, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x46f, S18, S17, S16, S15, V761, 0x7ea, S18, 0x0]

================================

Block 0x98f
[0x98f:0x98f]
---
Predecessors: [0x8fc]
Successors: []
---
0x98f INVALID
---
0x98f: INVALID 
---
Entry stack: [V12, 0x84, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x46f, S7, S6, S5, S4, V761, 0x7ea, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x46f, S7, S6, S5, S4, V761, 0x7ea, S1, 0x0]

================================

Block 0x990
[0x990:0x9a5]
---
Predecessors: [0x8fc]
Successors: [0x9a6, 0x9a7]
---
0x990 JUMPDEST
0x991 SWAP1
0x992 PUSH1 0x20
0x994 ADD
0x995 SWAP1
0x996 PUSH1 0x20
0x998 MUL
0x999 ADD
0x99a MLOAD
0x99b DUP6
0x99c PUSH1 0x0
0x99e DUP2
0x99f MLOAD
0x9a0 DUP2
0x9a1 LT
0x9a2 PUSH2 0x9a7
0x9a5 JUMPI
---
0x990: JUMPDEST 
0x992: V887 = 0x20
0x994: V888 = ADD 0x20 S1
0x996: V889 = 0x20
0x998: V890 = MUL 0x20 0x0
0x999: V891 = ADD 0x0 V888
0x99a: V892 = M[V891]
0x99c: V893 = 0x0
0x99f: V894 = M[S6]
0x9a1: V895 = LT 0x0 V894
0x9a2: V896 = 0x9a7
0x9a5: JUMPI 0x9a7 V895
---
Entry stack: [V12, 0x84, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x46f, S7, S6, S5, S4, V761, 0x7ea, S1, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V892, S6, 0x0]
Exit stack: [V12, 0x84, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x46f, S7, S6, S5, S4, V761, 0x7ea, V892, S6, 0x0]

================================

Block 0x9a6
[0x9a6:0x9a6]
---
Predecessors: [0x990]
Successors: []
---
0x9a6 INVALID
---
0x9a6: INVALID 
---
Entry stack: [V12, 0x84, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x46f, S8, S7, S6, S5, V761, 0x7ea, V892, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x46f, S8, S7, S6, S5, V761, 0x7ea, V892, S1, 0x0]

================================

Block 0x9a7
[0x9a7:0x9bc]
---
Predecessors: [0x990]
Successors: [0x9bd, 0x9be]
---
0x9a7 JUMPDEST
0x9a8 SWAP1
0x9a9 PUSH1 0x20
0x9ab ADD
0x9ac SWAP1
0x9ad PUSH1 0x20
0x9af MUL
0x9b0 ADD
0x9b1 MLOAD
0x9b2 DUP8
0x9b3 PUSH1 0x1
0x9b5 DUP2
0x9b6 MLOAD
0x9b7 DUP2
0x9b8 LT
0x9b9 PUSH2 0x9be
0x9bc JUMPI
---
0x9a7: JUMPDEST 
0x9a9: V897 = 0x20
0x9ab: V898 = ADD 0x20 S1
0x9ad: V899 = 0x20
0x9af: V900 = MUL 0x20 0x0
0x9b0: V901 = ADD 0x0 V898
0x9b1: V902 = M[V901]
0x9b3: V903 = 0x1
0x9b6: V904 = M[S8]
0x9b8: V905 = LT 0x1 V904
0x9b9: V906 = 0x9be
0x9bc: JUMPI 0x9be V905
---
Entry stack: [V12, 0x84, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x46f, S8, S7, S6, S5, V761, 0x7ea, V892, S1, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V902, S8, 0x1]
Exit stack: [V12, 0x84, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x46f, S8, S7, S6, S5, V761, 0x7ea, V892, V902, S8, 0x1]

================================

Block 0x9bd
[0x9bd:0x9bd]
---
Predecessors: [0x9a7]
Successors: []
---
0x9bd INVALID
---
0x9bd: INVALID 
---
Entry stack: [V12, 0x84, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x46f, S9, S8, S7, S6, V761, 0x7ea, V892, V902, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x46f, S9, S8, S7, S6, V761, 0x7ea, V892, V902, S1, 0x1]

================================

Block 0x9be
[0x9be:0x9d3]
---
Predecessors: [0x9a7]
Successors: [0x9d4, 0x9d5]
---
0x9be JUMPDEST
0x9bf SWAP1
0x9c0 PUSH1 0x20
0x9c2 ADD
0x9c3 SWAP1
0x9c4 PUSH1 0x20
0x9c6 MUL
0x9c7 ADD
0x9c8 MLOAD
0x9c9 DUP8
0x9ca PUSH1 0x1
0x9cc DUP2
0x9cd MLOAD
0x9ce DUP2
0x9cf LT
0x9d0 PUSH2 0x9d5
0x9d3 JUMPI
---
0x9be: JUMPDEST 
0x9c0: V907 = 0x20
0x9c2: V908 = ADD 0x20 S1
0x9c4: V909 = 0x20
0x9c6: V910 = MUL 0x20 0x1
0x9c7: V911 = ADD 0x20 V908
0x9c8: V912 = M[V911]
0x9ca: V913 = 0x1
0x9cd: V914 = M[S8]
0x9cf: V915 = LT 0x1 V914
0x9d0: V916 = 0x9d5
0x9d3: JUMPI 0x9d5 V915
---
Entry stack: [V12, 0x84, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x46f, S9, S8, S7, S6, V761, 0x7ea, V892, V902, S1, 0x1]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V912, S8, 0x1]
Exit stack: [V12, 0x84, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x46f, S9, S8, S7, S6, V761, 0x7ea, V892, V902, V912, S8, 0x1]

================================

Block 0x9d4
[0x9d4:0x9d4]
---
Predecessors: [0x9be]
Successors: []
---
0x9d4 INVALID
---
0x9d4: INVALID 
---
Entry stack: [V12, 0x84, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x46f, S10, S9, S8, S7, V761, 0x7ea, V892, V902, V912, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x46f, S10, S9, S8, S7, V761, 0x7ea, V892, V902, V912, S1, 0x1]

================================

Block 0x9d5
[0x9d5:0x9ea]
---
Predecessors: [0x9be]
Successors: [0x9eb, 0x9ec]
---
0x9d5 JUMPDEST
0x9d6 SWAP1
0x9d7 PUSH1 0x20
0x9d9 ADD
0x9da SWAP1
0x9db PUSH1 0x20
0x9dd MUL
0x9de ADD
0x9df MLOAD
0x9e0 DUP9
0x9e1 PUSH1 0x3
0x9e3 DUP2
0x9e4 MLOAD
0x9e5 DUP2
0x9e6 LT
0x9e7 PUSH2 0x9ec
0x9ea JUMPI
---
0x9d5: JUMPDEST 
0x9d7: V917 = 0x20
0x9d9: V918 = ADD 0x20 S1
0x9db: V919 = 0x20
0x9dd: V920 = MUL 0x20 0x1
0x9de: V921 = ADD 0x20 V918
0x9df: V922 = M[V921]
0x9e1: V923 = 0x3
0x9e4: V924 = M[S9]
0x9e6: V925 = LT 0x3 V924
0x9e7: V926 = 0x9ec
0x9ea: JUMPI 0x9ec V925
---
Entry stack: [V12, 0x84, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x46f, S10, S9, S8, S7, V761, 0x7ea, V892, V902, V912, S1, 0x1]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V922, S9, 0x3]
Exit stack: [V12, 0x84, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x46f, S10, S9, S8, S7, V761, 0x7ea, V892, V902, V912, V922, S9, 0x3]

================================

Block 0x9eb
[0x9eb:0x9eb]
---
Predecessors: [0x9d5]
Successors: []
---
0x9eb INVALID
---
0x9eb: INVALID 
---
Entry stack: [V12, 0x84, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x46f, S11, S10, S9, S8, V761, 0x7ea, V892, V902, V912, V922, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x46f, S11, S10, S9, S8, V761, 0x7ea, V892, V902, V912, V922, S1, 0x3]

================================

Block 0x9ec
[0x9ec:0xa01]
---
Predecessors: [0x9d5]
Successors: [0xa02, 0xa03]
---
0x9ec JUMPDEST
0x9ed SWAP1
0x9ee PUSH1 0x20
0x9f0 ADD
0x9f1 SWAP1
0x9f2 PUSH1 0x20
0x9f4 MUL
0x9f5 ADD
0x9f6 MLOAD
0x9f7 DUP10
0x9f8 PUSH1 0x4
0x9fa DUP2
0x9fb MLOAD
0x9fc DUP2
0x9fd LT
0x9fe PUSH2 0xa03
0xa01 JUMPI
---
0x9ec: JUMPDEST 
0x9ee: V927 = 0x20
0x9f0: V928 = ADD 0x20 S1
0x9f2: V929 = 0x20
0x9f4: V930 = MUL 0x20 0x3
0x9f5: V931 = ADD 0x60 V928
0x9f6: V932 = M[V931]
0x9f8: V933 = 0x4
0x9fb: V934 = M[S10]
0x9fd: V935 = LT 0x4 V934
0x9fe: V936 = 0xa03
0xa01: JUMPI 0xa03 V935
---
Entry stack: [V12, 0x84, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x46f, S11, S10, S9, S8, V761, 0x7ea, V892, V902, V912, V922, S1, 0x3]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V932, S10, 0x4]
Exit stack: [V12, 0x84, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x46f, S11, S10, S9, S8, V761, 0x7ea, V892, V902, V912, V922, V932, S10, 0x4]

================================

Block 0xa02
[0xa02:0xa02]
---
Predecessors: [0x9ec]
Successors: []
---
0xa02 INVALID
---
0xa02: INVALID 
---
Entry stack: [V12, 0x84, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x46f, S12, S11, S10, S9, V761, 0x7ea, V892, V902, V912, V922, V932, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x46f, S12, S11, S10, S9, V761, 0x7ea, V892, V902, V912, V922, V932, S1, 0x4]

================================

Block 0xa03
[0xa03:0xa18]
---
Predecessors: [0x9ec]
Successors: [0xa19, 0xa1a]
---
0xa03 JUMPDEST
0xa04 SWAP1
0xa05 PUSH1 0x20
0xa07 ADD
0xa08 SWAP1
0xa09 PUSH1 0x20
0xa0b MUL
0xa0c ADD
0xa0d MLOAD
0xa0e DUP12
0xa0f PUSH1 0x2
0xa11 DUP2
0xa12 MLOAD
0xa13 DUP2
0xa14 LT
0xa15 PUSH2 0xa1a
0xa18 JUMPI
---
0xa03: JUMPDEST 
0xa05: V937 = 0x20
0xa07: V938 = ADD 0x20 S1
0xa09: V939 = 0x20
0xa0b: V940 = MUL 0x20 0x4
0xa0c: V941 = ADD 0x80 V938
0xa0d: V942 = M[V941]
0xa0f: V943 = 0x2
0xa12: V944 = M[S12]
0xa14: V945 = LT 0x2 V944
0xa15: V946 = 0xa1a
0xa18: JUMPI 0xa1a V945
---
Entry stack: [V12, 0x84, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x46f, S12, S11, S10, S9, V761, 0x7ea, V892, V902, V912, V922, V932, S1, 0x4]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V942, S12, 0x2]
Exit stack: [V12, 0x84, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x46f, S12, S11, S10, S9, V761, 0x7ea, V892, V902, V912, V922, V932, V942, S12, 0x2]

================================

Block 0xa19
[0xa19:0xa19]
---
Predecessors: [0xa03]
Successors: []
---
0xa19 INVALID
---
0xa19: INVALID 
---
Entry stack: [V12, 0x84, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x46f, S13, S12, S11, S10, V761, 0x7ea, V892, V902, V912, V922, V932, V942, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x46f, S13, S12, S11, S10, V761, 0x7ea, V892, V902, V912, V922, V932, V942, S1, 0x2]

================================

Block 0xa1a
[0xa1a:0xa32]
---
Predecessors: [0xa03]
Successors: [0xa33, 0xa34]
---
0xa1a JUMPDEST
0xa1b SWAP1
0xa1c PUSH1 0x20
0xa1e ADD
0xa1f SWAP1
0xa20 PUSH1 0x20
0xa22 MUL
0xa23 ADD
0xa24 MLOAD
0xa25 DUP9
0xa26 DUP12
0xa27 DUP12
0xa28 DUP15
0xa29 PUSH1 0x2
0xa2b DUP2
0xa2c MLOAD
0xa2d DUP2
0xa2e LT
0xa2f PUSH2 0xa34
0xa32 JUMPI
---
0xa1a: JUMPDEST 
0xa1c: V947 = 0x20
0xa1e: V948 = ADD 0x20 S1
0xa20: V949 = 0x20
0xa22: V950 = MUL 0x20 0x2
0xa23: V951 = ADD 0x40 V948
0xa24: V952 = M[V951]
0xa29: V953 = 0x2
0xa2c: V954 = M[S12]
0xa2e: V955 = LT 0x2 V954
0xa2f: V956 = 0xa34
0xa32: JUMPI 0xa34 V955
---
Entry stack: [V12, 0x84, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x46f, S13, S12, S11, S10, V761, 0x7ea, V892, V902, V912, V922, V932, V942, S1, 0x2]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V952, S9, S11, S10, S12, 0x2]
Exit stack: [V12, 0x84, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x46f, S13, S12, S11, S10, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S11, S10, S12, 0x2]

================================

Block 0xa33
[0xa33:0xa33]
---
Predecessors: [0xa1a]
Successors: []
---
0xa33 INVALID
---
0xa33: INVALID 
---
Entry stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, S1, 0x2]

================================

Block 0xa34
[0xa34:0xa42]
---
Predecessors: [0xa1a]
Successors: [0xa4c]
---
0xa34 JUMPDEST
0xa35 SWAP1
0xa36 PUSH1 0x20
0xa38 ADD
0xa39 SWAP1
0xa3a PUSH1 0x20
0xa3c MUL
0xa3d ADD
0xa3e MLOAD
0xa3f PUSH2 0xa4c
0xa42 JUMP
---
0xa34: JUMPDEST 
0xa36: V957 = 0x20
0xa38: V958 = ADD 0x20 S1
0xa3a: V959 = 0x20
0xa3c: V960 = MUL 0x20 0x2
0xa3d: V961 = ADD 0x40 V958
0xa3e: V962 = M[V961]
0xa3f: V963 = 0xa4c
0xa42: JUMP 0xa4c
---
Entry stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, S1, 0x2]
Stack pops: 2
Stack additions: [V962]
Exit stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962]

================================

Block 0xa43
[0xa43:0xa43]
---
Predecessors: []
Successors: [0xa44]
---
0xa43 JUMPDEST
---
0xa43: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa44
[0xa44:0xa44]
---
Predecessors: [0xa43]
Successors: [0xa45]
---
0xa44 JUMPDEST
---
0xa44: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa45
[0xa45:0xa4b]
---
Predecessors: [0xa44]
Successors: []
Has unresolved jump.
---
0xa45 JUMPDEST
0xa46 POP
0xa47 POP
0xa48 POP
0xa49 POP
0xa4a POP
0xa4b JUMP
---
0xa45: JUMPDEST 
0xa4b: JUMP S5
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xa4c
[0xa4c:0xa63]
---
Predecessors: [0xa34]
Successors: [0xa64, 0xa68]
---
0xa4c JUMPDEST
0xa4d PUSH1 0x0
0xa4f DUP1
0xa50 SLOAD
0xa51 CALLER
0xa52 PUSH1 0x1
0xa54 PUSH1 0xa0
0xa56 PUSH1 0x2
0xa58 EXP
0xa59 SUB
0xa5a SWAP1
0xa5b DUP2
0xa5c AND
0xa5d SWAP2
0xa5e AND
0xa5f EQ
0xa60 PUSH2 0xa68
0xa63 JUMPI
---
0xa4c: JUMPDEST 
0xa4d: V964 = 0x0
0xa50: V965 = S[0x0]
0xa51: V966 = CALLER
0xa52: V967 = 0x1
0xa54: V968 = 0xa0
0xa56: V969 = 0x2
0xa58: V970 = EXP 0x2 0xa0
0xa59: V971 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5c: V972 = AND 0xffffffffffffffffffffffffffffffffffffffff V966
0xa5e: V973 = AND V965 0xffffffffffffffffffffffffffffffffffffffff
0xa5f: V974 = EQ V973 V972
0xa60: V975 = 0xa68
0xa63: JUMPI 0xa68 V974
---
Entry stack: [V12, 0x84, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0x46f, S16, S15, S14, S13, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S2, S1, V962]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x84, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0x46f, S16, S15, S14, S13, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S2, S1, V962, 0x0]

================================

Block 0xa64
[0xa64:0xa67]
---
Predecessors: [0xa4c]
Successors: []
---
0xa64 PUSH1 0x0
0xa66 DUP1
0xa67 REVERT
---
0xa64: V976 = 0x0
0xa67: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, 0x0]

================================

Block 0xa68
[0xa68:0xbc5]
---
Predecessors: [0xa4c]
Successors: [0xbc6, 0xbca]
---
0xa68 JUMPDEST
0xa69 PUSH32 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979
0xa8a PUSH1 0x3
0xa8c DUP14
0xa8d DUP14
0xa8e DUP14
0xa8f DUP14
0xa90 DUP14
0xa91 DUP14
0xa92 DUP14
0xa93 DUP14
0xa94 DUP14
0xa95 DUP14
0xa96 DUP14
0xa97 PUSH1 0x40
0xa99 MLOAD
0xa9a SWAP12
0xa9b DUP13
0xa9c MSTORE
0xa9d PUSH1 0x1
0xa9f PUSH1 0xa0
0xaa1 PUSH1 0x2
0xaa3 EXP
0xaa4 SUB
0xaa5 SWAP11
0xaa6 DUP12
0xaa7 AND
0xaa8 PUSH1 0x20
0xaaa DUP14
0xaab ADD
0xaac MSTORE
0xaad PUSH1 0x40
0xaaf DUP1
0xab0 DUP14
0xab1 ADD
0xab2 SWAP11
0xab3 SWAP1
0xab4 SWAP11
0xab5 MSTORE
0xab6 SWAP8
0xab7 DUP11
0xab8 AND
0xab9 PUSH1 0x60
0xabb DUP13
0xabc ADD
0xabd MSTORE
0xabe PUSH1 0x80
0xac0 DUP12
0xac1 ADD
0xac2 SWAP7
0xac3 SWAP1
0xac4 SWAP7
0xac5 MSTORE
0xac6 PUSH1 0xa0
0xac8 DUP11
0xac9 ADD
0xaca SWAP5
0xacb SWAP1
0xacc SWAP5
0xacd MSTORE
0xace PUSH1 0xc0
0xad0 DUP10
0xad1 ADD
0xad2 SWAP3
0xad3 SWAP1
0xad4 SWAP3
0xad5 MSTORE
0xad6 SWAP1
0xad7 SWAP6
0xad8 AND
0xad9 PUSH1 0xe0
0xadb DUP8
0xadc ADD
0xadd MSTORE
0xade PUSH1 0xff
0xae0 SWAP1
0xae1 SWAP5
0xae2 AND
0xae3 PUSH2 0x100
0xae6 DUP7
0xae7 ADD
0xae8 MSTORE
0xae9 PUSH2 0x120
0xaec DUP6
0xaed ADD
0xaee SWAP4
0xaef SWAP1
0xaf0 SWAP4
0xaf1 MSTORE
0xaf2 PUSH2 0x140
0xaf5 DUP5
0xaf6 ADD
0xaf7 SWAP3
0xaf8 SWAP1
0xaf9 SWAP3
0xafa MSTORE
0xafb PUSH2 0x160
0xafe DUP4
0xaff ADD
0xb00 SWAP2
0xb01 SWAP1
0xb02 SWAP2
0xb03 MSTORE
0xb04 PUSH2 0x180
0xb07 SWAP1
0xb08 SWAP2
0xb09 ADD
0xb0a SWAP1
0xb0b MLOAD
0xb0c DUP1
0xb0d SWAP2
0xb0e SUB
0xb0f SWAP1
0xb10 LOG1
0xb11 POP
0xb12 PUSH1 0x1
0xb14 SLOAD
0xb15 PUSH1 0x1
0xb17 PUSH1 0xa0
0xb19 PUSH1 0x2
0xb1b EXP
0xb1c SUB
0xb1d AND
0xb1e DUP1
0xb1f PUSH4 0x6c86888b
0xb24 DUP14
0xb25 DUP14
0xb26 DUP14
0xb27 DUP14
0xb28 DUP14
0xb29 DUP14
0xb2a DUP14
0xb2b DUP14
0xb2c DUP14
0xb2d DUP14
0xb2e DUP14
0xb2f ADDRESS
0xb30 PUSH1 0x0
0xb32 PUSH1 0x40
0xb34 MLOAD
0xb35 PUSH1 0x20
0xb37 ADD
0xb38 MSTORE
0xb39 PUSH1 0x40
0xb3b MLOAD
0xb3c PUSH1 0xe0
0xb3e PUSH1 0x2
0xb40 EXP
0xb41 PUSH4 0xffffffff
0xb46 DUP16
0xb47 AND
0xb48 MUL
0xb49 DUP2
0xb4a MSTORE
0xb4b PUSH1 0x1
0xb4d PUSH1 0xa0
0xb4f PUSH1 0x2
0xb51 EXP
0xb52 SUB
0xb53 SWAP13
0xb54 DUP14
0xb55 AND
0xb56 PUSH1 0x4
0xb58 DUP3
0xb59 ADD
0xb5a MSTORE
0xb5b PUSH1 0x24
0xb5d DUP2
0xb5e ADD
0xb5f SWAP12
0xb60 SWAP1
0xb61 SWAP12
0xb62 MSTORE
0xb63 SWAP9
0xb64 DUP12
0xb65 AND
0xb66 PUSH1 0x44
0xb68 DUP12
0xb69 ADD
0xb6a MSTORE
0xb6b PUSH1 0x64
0xb6d DUP11
0xb6e ADD
0xb6f SWAP8
0xb70 SWAP1
0xb71 SWAP8
0xb72 MSTORE
0xb73 PUSH1 0x84
0xb75 DUP10
0xb76 ADD
0xb77 SWAP6
0xb78 SWAP1
0xb79 SWAP6
0xb7a MSTORE
0xb7b PUSH1 0xa4
0xb7d DUP9
0xb7e ADD
0xb7f SWAP4
0xb80 SWAP1
0xb81 SWAP4
0xb82 MSTORE
0xb83 SWAP1
0xb84 DUP8
0xb85 AND
0xb86 PUSH1 0xc4
0xb88 DUP8
0xb89 ADD
0xb8a MSTORE
0xb8b PUSH1 0xff
0xb8d AND
0xb8e PUSH1 0xe4
0xb90 DUP7
0xb91 ADD
0xb92 MSTORE
0xb93 PUSH2 0x104
0xb96 DUP6
0xb97 ADD
0xb98 MSTORE
0xb99 PUSH2 0x124
0xb9c DUP5
0xb9d ADD
0xb9e MSTORE
0xb9f PUSH2 0x144
0xba2 DUP4
0xba3 ADD
0xba4 MSTORE
0xba5 SWAP1
0xba6 SWAP2
0xba7 AND
0xba8 PUSH2 0x164
0xbab DUP3
0xbac ADD
0xbad MSTORE
0xbae PUSH2 0x184
0xbb1 ADD
0xbb2 PUSH1 0x20
0xbb4 PUSH1 0x40
0xbb6 MLOAD
0xbb7 DUP1
0xbb8 DUP4
0xbb9 SUB
0xbba DUP2
0xbbb PUSH1 0x0
0xbbd DUP8
0xbbe DUP1
0xbbf EXTCODESIZE
0xbc0 ISZERO
0xbc1 ISZERO
0xbc2 PUSH2 0xbca
0xbc5 JUMPI
---
0xa68: JUMPDEST 
0xa69: V977 = 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979
0xa8a: V978 = 0x3
0xa97: V979 = 0x40
0xa99: V980 = M[0x40]
0xa9c: M[V980] = 0x3
0xa9d: V981 = 0x1
0xa9f: V982 = 0xa0
0xaa1: V983 = 0x2
0xaa3: V984 = EXP 0x2 0xa0
0xaa4: V985 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa7: V986 = AND 0xffffffffffffffffffffffffffffffffffffffff V892
0xaa8: V987 = 0x20
0xaab: V988 = ADD V980 0x20
0xaac: M[V988] = V986
0xaad: V989 = 0x40
0xab1: V990 = ADD V980 0x40
0xab5: M[V990] = V902
0xab8: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0xab9: V992 = 0x60
0xabc: V993 = ADD V980 0x60
0xabd: M[V993] = V991
0xabe: V994 = 0x80
0xac1: V995 = ADD V980 0x80
0xac5: M[V995] = V922
0xac6: V996 = 0xa0
0xac9: V997 = ADD V980 0xa0
0xacd: M[V997] = V932
0xace: V998 = 0xc0
0xad1: V999 = ADD V980 0xc0
0xad5: M[V999] = V942
0xad8: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffff V952
0xad9: V1001 = 0xe0
0xadc: V1002 = ADD V980 0xe0
0xadd: M[V1002] = V1000
0xade: V1003 = 0xff
0xae2: V1004 = AND V761 0xff
0xae3: V1005 = 0x100
0xae7: V1006 = ADD V980 0x100
0xae8: M[V1006] = V1004
0xae9: V1007 = 0x120
0xaed: V1008 = ADD V980 0x120
0xaf1: M[V1008] = S3
0xaf2: V1009 = 0x140
0xaf6: V1010 = ADD V980 0x140
0xafa: M[V1010] = S2
0xafb: V1011 = 0x160
0xaff: V1012 = ADD V980 0x160
0xb03: M[V1012] = V962
0xb04: V1013 = 0x180
0xb09: V1014 = ADD V980 0x180
0xb0b: V1015 = M[0x40]
0xb0e: V1016 = SUB V1014 V1015
0xb10: LOG V1015 V1016 0xc870c873fd0bc17db6eeab5db9c288c761c90caa94729a6bb8914f5808442979
0xb12: V1017 = 0x1
0xb14: V1018 = S[0x1]
0xb15: V1019 = 0x1
0xb17: V1020 = 0xa0
0xb19: V1021 = 0x2
0xb1b: V1022 = EXP 0x2 0xa0
0xb1c: V1023 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1d: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1018
0xb1f: V1025 = 0x6c86888b
0xb2f: V1026 = ADDRESS
0xb30: V1027 = 0x0
0xb32: V1028 = 0x40
0xb34: V1029 = M[0x40]
0xb35: V1030 = 0x20
0xb37: V1031 = ADD 0x20 V1029
0xb38: M[V1031] = 0x0
0xb39: V1032 = 0x40
0xb3b: V1033 = M[0x40]
0xb3c: V1034 = 0xe0
0xb3e: V1035 = 0x2
0xb40: V1036 = EXP 0x2 0xe0
0xb41: V1037 = 0xffffffff
0xb47: V1038 = AND 0x6c86888b 0xffffffff
0xb48: V1039 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0xb4a: M[V1033] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0xb4b: V1040 = 0x1
0xb4d: V1041 = 0xa0
0xb4f: V1042 = 0x2
0xb51: V1043 = EXP 0x2 0xa0
0xb52: V1044 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb55: V1045 = AND 0xffffffffffffffffffffffffffffffffffffffff V892
0xb56: V1046 = 0x4
0xb59: V1047 = ADD V1033 0x4
0xb5a: M[V1047] = V1045
0xb5b: V1048 = 0x24
0xb5e: V1049 = ADD V1033 0x24
0xb62: M[V1049] = V902
0xb65: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0xb66: V1051 = 0x44
0xb69: V1052 = ADD V1033 0x44
0xb6a: M[V1052] = V1050
0xb6b: V1053 = 0x64
0xb6e: V1054 = ADD V1033 0x64
0xb72: M[V1054] = V922
0xb73: V1055 = 0x84
0xb76: V1056 = ADD V1033 0x84
0xb7a: M[V1056] = V932
0xb7b: V1057 = 0xa4
0xb7e: V1058 = ADD V1033 0xa4
0xb82: M[V1058] = V942
0xb85: V1059 = AND 0xffffffffffffffffffffffffffffffffffffffff V952
0xb86: V1060 = 0xc4
0xb89: V1061 = ADD V1033 0xc4
0xb8a: M[V1061] = V1059
0xb8b: V1062 = 0xff
0xb8d: V1063 = AND 0xff V761
0xb8e: V1064 = 0xe4
0xb91: V1065 = ADD V1033 0xe4
0xb92: M[V1065] = V1063
0xb93: V1066 = 0x104
0xb97: V1067 = ADD V1033 0x104
0xb98: M[V1067] = S3
0xb99: V1068 = 0x124
0xb9d: V1069 = ADD V1033 0x124
0xb9e: M[V1069] = S2
0xb9f: V1070 = 0x144
0xba3: V1071 = ADD V1033 0x144
0xba4: M[V1071] = V962
0xba7: V1072 = AND 0xffffffffffffffffffffffffffffffffffffffff V1026
0xba8: V1073 = 0x164
0xbac: V1074 = ADD V1033 0x164
0xbad: M[V1074] = V1072
0xbae: V1075 = 0x184
0xbb1: V1076 = ADD 0x184 V1033
0xbb2: V1077 = 0x20
0xbb4: V1078 = 0x40
0xbb6: V1079 = M[0x40]
0xbb9: V1080 = SUB V1076 V1079
0xbbb: V1081 = 0x0
0xbbf: V1082 = EXTCODESIZE V1024
0xbc0: V1083 = ISZERO V1082
0xbc1: V1084 = ISZERO V1083
0xbc2: V1085 = 0xbca
0xbc5: JUMPI 0xbca V1084
---
Entry stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1024, V1024, 0x6c86888b, V1076, 0x20, V1079, V1080, V1079, 0x0, V1024]
Exit stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, V1024, V1024, 0x6c86888b, V1076, 0x20, V1079, V1080, V1079, 0x0, V1024]

================================

Block 0xbc6
[0xbc6:0xbc9]
---
Predecessors: [0xa68]
Successors: []
---
0xbc6 PUSH1 0x0
0xbc8 DUP1
0xbc9 REVERT
---
0xbc6: V1086 = 0x0
0xbc9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x46f, S26, S25, S24, S23, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S12, S11, V962, V1024, V1024, 0x6c86888b, V1076, 0x20, V1079, V1080, V1079, 0x0, V1024]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x46f, S26, S25, S24, S23, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S12, S11, V962, V1024, V1024, 0x6c86888b, V1076, 0x20, V1079, V1080, V1079, 0x0, V1024]

================================

Block 0xbca
[0xbca:0xbd6]
---
Predecessors: [0xa68]
Successors: [0xbd7, 0xbdb]
---
0xbca JUMPDEST
0xbcb PUSH2 0x2c6
0xbce GAS
0xbcf SUB
0xbd0 CALL
0xbd1 ISZERO
0xbd2 ISZERO
0xbd3 PUSH2 0xbdb
0xbd6 JUMPI
---
0xbca: JUMPDEST 
0xbcb: V1087 = 0x2c6
0xbce: V1088 = GAS
0xbcf: V1089 = SUB V1088 0x2c6
0xbd0: V1090 = CALL V1089 V1024 0x0 V1079 V1080 V1079 0x20
0xbd1: V1091 = ISZERO V1090
0xbd2: V1092 = ISZERO V1091
0xbd3: V1093 = 0xbdb
0xbd6: JUMPI 0xbdb V1092
---
Entry stack: [V12, 0x84, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x46f, S26, S25, S24, S23, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S12, S11, V962, V1024, V1024, 0x6c86888b, V1076, 0x20, V1079, V1080, V1079, 0x0, V1024]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x46f, S26, S25, S24, S23, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S12, S11, V962, V1024, V1024, 0x6c86888b, V1076]

================================

Block 0xbd7
[0xbd7:0xbda]
---
Predecessors: [0xbca]
Successors: []
---
0xbd7 PUSH1 0x0
0xbd9 DUP1
0xbda REVERT
---
0xbd7: V1094 = 0x0
0xbda: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x46f, S20, S19, S18, S17, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S6, S5, V962, V1024, V1024, 0x6c86888b, V1076]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x46f, S20, S19, S18, S17, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S6, S5, V962, V1024, V1024, 0x6c86888b, V1076]

================================

Block 0xbdb
[0xbdb:0xbea]
---
Predecessors: [0xbca]
Successors: [0xbeb, 0xce5]
---
0xbdb JUMPDEST
0xbdc POP
0xbdd POP
0xbde POP
0xbdf PUSH1 0x40
0xbe1 MLOAD
0xbe2 DUP1
0xbe3 MLOAD
0xbe4 SWAP1
0xbe5 POP
0xbe6 ISZERO
0xbe7 PUSH2 0xce5
0xbea JUMPI
---
0xbdb: JUMPDEST 
0xbdf: V1095 = 0x40
0xbe1: V1096 = M[0x40]
0xbe3: V1097 = M[V1096]
0xbe6: V1098 = ISZERO V1097
0xbe7: V1099 = 0xce5
0xbea: JUMPI 0xce5 V1098
---
Entry stack: [V12, 0x84, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x46f, S20, S19, S18, S17, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S6, S5, V962, V1024, V1024, 0x6c86888b, V1076]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x84, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x46f, S20, S19, S18, S17, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S6, S5, V962, V1024]

================================

Block 0xbeb
[0xbeb:0xcc7]
---
Predecessors: [0xbdb]
Successors: [0xcc8, 0xccc]
---
0xbeb PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xc0c PUSH1 0x14
0xc0e PUSH1 0x40
0xc10 MLOAD
0xc11 SWAP1
0xc12 DUP2
0xc13 MSTORE
0xc14 PUSH1 0x20
0xc16 ADD
0xc17 PUSH1 0x40
0xc19 MLOAD
0xc1a DUP1
0xc1b SWAP2
0xc1c SUB
0xc1d SWAP1
0xc1e LOG1
0xc1f DUP1
0xc20 PUSH1 0x1
0xc22 PUSH1 0xa0
0xc24 PUSH1 0x2
0xc26 EXP
0xc27 SUB
0xc28 AND
0xc29 PUSH4 0xa19b14a
0xc2e DUP14
0xc2f DUP14
0xc30 DUP14
0xc31 DUP14
0xc32 DUP14
0xc33 DUP14
0xc34 DUP14
0xc35 DUP14
0xc36 DUP14
0xc37 DUP14
0xc38 DUP14
0xc39 PUSH1 0x40
0xc3b MLOAD
0xc3c PUSH1 0xe0
0xc3e PUSH1 0x2
0xc40 EXP
0xc41 PUSH4 0xffffffff
0xc46 DUP15
0xc47 AND
0xc48 MUL
0xc49 DUP2
0xc4a MSTORE
0xc4b PUSH1 0x1
0xc4d PUSH1 0xa0
0xc4f PUSH1 0x2
0xc51 EXP
0xc52 SUB
0xc53 SWAP12
0xc54 DUP13
0xc55 AND
0xc56 PUSH1 0x4
0xc58 DUP3
0xc59 ADD
0xc5a MSTORE
0xc5b PUSH1 0x24
0xc5d DUP2
0xc5e ADD
0xc5f SWAP11
0xc60 SWAP1
0xc61 SWAP11
0xc62 MSTORE
0xc63 SWAP8
0xc64 DUP11
0xc65 AND
0xc66 PUSH1 0x44
0xc68 DUP11
0xc69 ADD
0xc6a MSTORE
0xc6b PUSH1 0x64
0xc6d DUP10
0xc6e ADD
0xc6f SWAP7
0xc70 SWAP1
0xc71 SWAP7
0xc72 MSTORE
0xc73 PUSH1 0x84
0xc75 DUP9
0xc76 ADD
0xc77 SWAP5
0xc78 SWAP1
0xc79 SWAP5
0xc7a MSTORE
0xc7b PUSH1 0xa4
0xc7d DUP8
0xc7e ADD
0xc7f SWAP3
0xc80 SWAP1
0xc81 SWAP3
0xc82 MSTORE
0xc83 SWAP1
0xc84 SWAP6
0xc85 AND
0xc86 PUSH1 0xc4
0xc88 DUP6
0xc89 ADD
0xc8a MSTORE
0xc8b PUSH1 0xff
0xc8d SWAP1
0xc8e SWAP5
0xc8f AND
0xc90 PUSH1 0xe4
0xc92 DUP5
0xc93 ADD
0xc94 MSTORE
0xc95 PUSH2 0x104
0xc98 DUP4
0xc99 ADD
0xc9a SWAP4
0xc9b SWAP1
0xc9c SWAP4
0xc9d MSTORE
0xc9e PUSH2 0x124
0xca1 DUP3
0xca2 ADD
0xca3 SWAP3
0xca4 SWAP1
0xca5 SWAP3
0xca6 MSTORE
0xca7 PUSH2 0x144
0xcaa DUP2
0xcab ADD
0xcac SWAP2
0xcad SWAP1
0xcae SWAP2
0xcaf MSTORE
0xcb0 PUSH2 0x164
0xcb3 ADD
0xcb4 PUSH1 0x0
0xcb6 PUSH1 0x40
0xcb8 MLOAD
0xcb9 DUP1
0xcba DUP4
0xcbb SUB
0xcbc DUP2
0xcbd PUSH1 0x0
0xcbf DUP8
0xcc0 DUP1
0xcc1 EXTCODESIZE
0xcc2 ISZERO
0xcc3 ISZERO
0xcc4 PUSH2 0xccc
0xcc7 JUMPI
---
0xbeb: V1100 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xc0c: V1101 = 0x14
0xc0e: V1102 = 0x40
0xc10: V1103 = M[0x40]
0xc13: M[V1103] = 0x14
0xc14: V1104 = 0x20
0xc16: V1105 = ADD 0x20 V1103
0xc17: V1106 = 0x40
0xc19: V1107 = M[0x40]
0xc1c: V1108 = SUB V1105 V1107
0xc1e: LOG V1107 V1108 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xc20: V1109 = 0x1
0xc22: V1110 = 0xa0
0xc24: V1111 = 0x2
0xc26: V1112 = EXP 0x2 0xa0
0xc27: V1113 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc28: V1114 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0xc29: V1115 = 0xa19b14a
0xc39: V1116 = 0x40
0xc3b: V1117 = M[0x40]
0xc3c: V1118 = 0xe0
0xc3e: V1119 = 0x2
0xc40: V1120 = EXP 0x2 0xe0
0xc41: V1121 = 0xffffffff
0xc47: V1122 = AND 0xa19b14a 0xffffffff
0xc48: V1123 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0xc4a: M[V1117] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0xc4b: V1124 = 0x1
0xc4d: V1125 = 0xa0
0xc4f: V1126 = 0x2
0xc51: V1127 = EXP 0x2 0xa0
0xc52: V1128 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc55: V1129 = AND 0xffffffffffffffffffffffffffffffffffffffff V892
0xc56: V1130 = 0x4
0xc59: V1131 = ADD V1117 0x4
0xc5a: M[V1131] = V1129
0xc5b: V1132 = 0x24
0xc5e: V1133 = ADD V1117 0x24
0xc62: M[V1133] = V902
0xc65: V1134 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0xc66: V1135 = 0x44
0xc69: V1136 = ADD V1117 0x44
0xc6a: M[V1136] = V1134
0xc6b: V1137 = 0x64
0xc6e: V1138 = ADD V1117 0x64
0xc72: M[V1138] = V922
0xc73: V1139 = 0x84
0xc76: V1140 = ADD V1117 0x84
0xc7a: M[V1140] = V932
0xc7b: V1141 = 0xa4
0xc7e: V1142 = ADD V1117 0xa4
0xc82: M[V1142] = V942
0xc85: V1143 = AND 0xffffffffffffffffffffffffffffffffffffffff V952
0xc86: V1144 = 0xc4
0xc89: V1145 = ADD V1117 0xc4
0xc8a: M[V1145] = V1143
0xc8b: V1146 = 0xff
0xc8f: V1147 = AND V761 0xff
0xc90: V1148 = 0xe4
0xc93: V1149 = ADD V1117 0xe4
0xc94: M[V1149] = V1147
0xc95: V1150 = 0x104
0xc99: V1151 = ADD V1117 0x104
0xc9d: M[V1151] = S3
0xc9e: V1152 = 0x124
0xca2: V1153 = ADD V1117 0x124
0xca6: M[V1153] = S2
0xca7: V1154 = 0x144
0xcab: V1155 = ADD V1117 0x144
0xcaf: M[V1155] = V962
0xcb0: V1156 = 0x164
0xcb3: V1157 = ADD 0x164 V1117
0xcb4: V1158 = 0x0
0xcb6: V1159 = 0x40
0xcb8: V1160 = M[0x40]
0xcbb: V1161 = SUB V1157 V1160
0xcbd: V1162 = 0x0
0xcc1: V1163 = EXTCODESIZE V1114
0xcc2: V1164 = ISZERO V1163
0xcc3: V1165 = ISZERO V1164
0xcc4: V1166 = 0xccc
0xcc7: JUMPI 0xccc V1165
---
Entry stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, V1024]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1114, 0xa19b14a, V1157, 0x0, V1160, V1161, V1160, 0x0, V1114]
Exit stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, V1024, V1114, 0xa19b14a, V1157, 0x0, V1160, V1161, V1160, 0x0, V1114]

================================

Block 0xcc8
[0xcc8:0xccb]
---
Predecessors: [0xbeb]
Successors: []
---
0xcc8 PUSH1 0x0
0xcca DUP1
0xccb REVERT
---
0xcc8: V1167 = 0x0
0xccb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x46f, S26, S25, S24, S23, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S12, S11, V962, V1024, V1114, 0xa19b14a, V1157, 0x0, V1160, V1161, V1160, 0x0, V1114]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x46f, S26, S25, S24, S23, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S12, S11, V962, V1024, V1114, 0xa19b14a, V1157, 0x0, V1160, V1161, V1160, 0x0, V1114]

================================

Block 0xccc
[0xccc:0xcd8]
---
Predecessors: [0xbeb]
Successors: [0xcd9, 0xcdd]
---
0xccc JUMPDEST
0xccd PUSH2 0x2c6
0xcd0 GAS
0xcd1 SUB
0xcd2 CALL
0xcd3 ISZERO
0xcd4 ISZERO
0xcd5 PUSH2 0xcdd
0xcd8 JUMPI
---
0xccc: JUMPDEST 
0xccd: V1168 = 0x2c6
0xcd0: V1169 = GAS
0xcd1: V1170 = SUB V1169 0x2c6
0xcd2: V1171 = CALL V1170 V1114 0x0 V1160 V1161 V1160 0x0
0xcd3: V1172 = ISZERO V1171
0xcd4: V1173 = ISZERO V1172
0xcd5: V1174 = 0xcdd
0xcd8: JUMPI 0xcdd V1173
---
Entry stack: [V12, 0x84, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x46f, S26, S25, S24, S23, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S12, S11, V962, V1024, V1114, 0xa19b14a, V1157, 0x0, V1160, V1161, V1160, 0x0, V1114]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x46f, S26, S25, S24, S23, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S12, S11, V962, V1024, V1114, 0xa19b14a, V1157]

================================

Block 0xcd9
[0xcd9:0xcdc]
---
Predecessors: [0xccc]
Successors: []
---
0xcd9 PUSH1 0x0
0xcdb DUP1
0xcdc REVERT
---
0xcd9: V1175 = 0x0
0xcdc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x46f, S20, S19, S18, S17, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S6, S5, V962, V1024, V1114, 0xa19b14a, V1157]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x46f, S20, S19, S18, S17, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S6, S5, V962, V1024, V1114, 0xa19b14a, V1157]

================================

Block 0xcdd
[0xcdd:0xce4]
---
Predecessors: [0xccc]
Successors: [0xd1a]
---
0xcdd JUMPDEST
0xcde POP
0xcdf POP
0xce0 POP
0xce1 PUSH2 0xd1a
0xce4 JUMP
---
0xcdd: JUMPDEST 
0xce1: V1176 = 0xd1a
0xce4: JUMP 0xd1a
---
Entry stack: [V12, 0x84, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x46f, S20, S19, S18, S17, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S6, S5, V962, V1024, V1114, 0xa19b14a, V1157]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x84, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x46f, S20, S19, S18, S17, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S6, S5, V962, V1024]

================================

Block 0xce5
[0xce5:0xd19]
---
Predecessors: [0xbdb]
Successors: [0xd1a]
---
0xce5 JUMPDEST
0xce6 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xd07 PUSH1 0x15
0xd09 PUSH1 0x40
0xd0b MLOAD
0xd0c SWAP1
0xd0d DUP2
0xd0e MSTORE
0xd0f PUSH1 0x20
0xd11 ADD
0xd12 PUSH1 0x40
0xd14 MLOAD
0xd15 DUP1
0xd16 SWAP2
0xd17 SUB
0xd18 SWAP1
0xd19 LOG1
---
0xce5: JUMPDEST 
0xce6: V1177 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xd07: V1178 = 0x15
0xd09: V1179 = 0x40
0xd0b: V1180 = M[0x40]
0xd0e: M[V1180] = 0x15
0xd0f: V1181 = 0x20
0xd11: V1182 = ADD 0x20 V1180
0xd12: V1183 = 0x40
0xd14: V1184 = M[0x40]
0xd17: V1185 = SUB V1182 V1184
0xd19: LOG V1184 V1185 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, V1024]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, V1024]

================================

Block 0xd1a
[0xd1a:0xd1a]
---
Predecessors: [0xcdd, 0xce5]
Successors: [0xd1b]
---
0xd1a JUMPDEST
---
0xd1a: JUMPDEST 
---
Entry stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, V1024]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, V1024]

================================

Block 0xd1b
[0xd1b:0xd1b]
---
Predecessors: [0xd1a]
Successors: [0xd1c]
---
0xd1b JUMPDEST
---
0xd1b: JUMPDEST 
---
Entry stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, V1024]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x46f, S17, S16, S15, S14, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, S3, S2, V962, V1024]

================================

Block 0xd1c
[0xd1c:0xd29]
---
Predecessors: [0xd1b]
Successors: [0x7ea]
---
0xd1c JUMPDEST
0xd1d POP
0xd1e POP
0xd1f POP
0xd20 POP
0xd21 POP
0xd22 POP
0xd23 POP
0xd24 POP
0xd25 POP
0xd26 POP
0xd27 POP
0xd28 POP
0xd29 JUMP
---
0xd1c: JUMPDEST 
0xd29: JUMP 0x7ea
---
Entry stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S21, S20, S19, 0x46f, S17, S16, V75, V77, V761, 0x7ea, V892, V902, V912, V922, V932, V942, V952, V761, V75, V77, V962, V1024]
Stack pops: 13
Stack additions: []
Exit stack: [V12, 0x84, V53, V56, V59, V61, V63, V65, V67, V69, V73, V75, V77, S21, S20, S19, 0x46f, S17, S16, V75, V77, V761]

================================

Block 0xd2a
[0xd2a:0xd3b]
---
Predecessors: [0x1f9, 0x201]
Successors: [0x201, 0x20b]
---
0xd2a JUMPDEST
0xd2b PUSH1 0x20
0xd2d PUSH1 0x40
0xd2f MLOAD
0xd30 SWAP1
0xd31 DUP2
0xd32 ADD
0xd33 PUSH1 0x40
0xd35 MSTORE
0xd36 PUSH1 0x0
0xd38 DUP2
0xd39 MSTORE
0xd3a SWAP1
0xd3b JUMP
---
0xd2a: JUMPDEST 
0xd2b: V1186 = 0x20
0xd2d: V1187 = 0x40
0xd2f: V1188 = M[0x40]
0xd32: V1189 = ADD V1188 0x20
0xd33: V1190 = 0x40
0xd35: M[0x40] = V1189
0xd36: V1191 = 0x0
0xd39: M[V1188] = 0x0
0xd3b: JUMP {0x201, 0x20b}
---
Entry stack: [V12, 0x84, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x201, 0x20b}]
Stack pops: 1
Stack additions: [V1188]
Exit stack: [V12, 0x84, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1188]

================================

Block 0xd3c
[0xd3c:0xd8c]
---
Predecessors: []
Successors: []
---
0xd3c JUMPDEST
0xd3d PUSH1 0x20
0xd3f PUSH1 0x40
0xd41 MLOAD
0xd42 SWAP1
0xd43 DUP2
0xd44 ADD
0xd45 PUSH1 0x40
0xd47 MSTORE
0xd48 PUSH1 0x0
0xd4a DUP2
0xd4b MSTORE
0xd4c SWAP1
0xd4d JUMP
0xd4e STOP
0xd4f LOG1
0xd50 PUSH6 0x627a7a723058
0xd57 SHA3
0xd58 EXTCODEHASH
0xd59 LOG2
0xd5a DUP14
0xd5b PUSH8 0x73b3a1697bf078c1
0xd64 SWAP1
0xd65 TIMESTAMP
0xd66 MISSING 0x2c
0xd67 MISSING 0xe6
0xd68 LOG4
0xd69 SWAP14
0xd6a CREATE2
0xd6b MSTORE
0xd6c PUSH32 0xc3b4c534cf1d48a40e565e0029
---
0xd3c: JUMPDEST 
0xd3d: V1192 = 0x20
0xd3f: V1193 = 0x40
0xd41: V1194 = M[0x40]
0xd44: V1195 = ADD V1194 0x20
0xd45: V1196 = 0x40
0xd47: M[0x40] = V1195
0xd48: V1197 = 0x0
0xd4b: M[V1194] = 0x0
0xd4d: JUMP S0
0xd4e: STOP 
0xd4f: LOG S0 S1 S2
0xd50: V1198 = 0x627a7a723058
0xd57: V1199 = SHA3 0x627a7a723058 S3
0xd58: V1200 = EXTCODEHASH V1199
0xd59: LOG V1200 S4 S5 S6
0xd5b: V1201 = 0x73b3a1697bf078c1
0xd65: V1202 = TIMESTAMP
0xd66: MISSING 0x2c
0xd67: MISSING 0xe6
0xd68: LOG S0 S1 S2 S3 S4 S5
0xd6a: V1203 = CREATE2 S20 S7 S8 S9
0xd6b: M[V1203] = S10
0xd6c: V1204 = 0xc3b4c534cf1d48a40e565e0029
---
Entry stack: []
Stack pops: 2
Stack additions: [V1202, S20, 0x73b3a1697bf078c1, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, 0xc3b4c534cf1d48a40e565e0029, S11, S12, S13, S14, S15, S16, S17, S18, S19, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x18ac2df6
Entry block: 0x86
Exit block: 0x84
Body: 0x84, 0x86, 0x8d, 0x91, 0x1f9, 0x201, 0x20b, 0x222, 0x226, 0x2d4, 0x2d6, 0x2e7, 0x2f7, 0x2f8, 0x30f, 0x310, 0x327, 0x328, 0x33f, 0x340, 0x357, 0x358, 0x372, 0x373, 0x382, 0x38c, 0x39a, 0x39b, 0x3ad, 0x3ae, 0x3ba, 0x3bb, 0x3c6, 0x3d1, 0x3de, 0x3e0, 0x3f1, 0x401, 0x402, 0x426, 0x427, 0x44b, 0x44c, 0x46f, 0x470, 0x471, 0x7ea, 0x7ee, 0x7ef, 0x7f3, 0x80b, 0x80f, 0x81b, 0x81c, 0x857, 0x858, 0x86e, 0x86f, 0x885, 0x886, 0x89c, 0x89d, 0x8b3, 0x8b4, 0x8ca, 0x8cb, 0x8e1, 0x8e2, 0x8fb, 0x8fc, 0x98f, 0x990, 0x9a6, 0x9a7, 0x9bd, 0x9be, 0x9d4, 0x9d5, 0x9eb, 0x9ec, 0xa02, 0xa03, 0xa19, 0xa1a, 0xa33, 0xa34, 0xa4c, 0xa64, 0xa68, 0xbc6, 0xbca, 0xbd7, 0xbdb, 0xbeb, 0xcc8, 0xccc, 0xcd9, 0xcdd, 0xce5, 0xd1a, 0xd1b, 0xd1c, 0xd2a

Function 1:
Public function signature: 0x2cf2c0af
Entry block: 0xd1
Exit block: 0x84
Body: 0x84, 0xd1, 0xd8, 0xdc, 0x481, 0x499, 0x49d, 0x4da, 0x4de, 0x4eb, 0x4ef, 0x4f4, 0x4f5

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0xe9
Exit block: 0x84
Body: 0x84, 0xe9, 0xf0, 0xf4, 0x4f9, 0x510, 0x514, 0x543, 0x547, 0x548, 0x549

Function 3:
Public function signature: 0x43d726d6
Entry block: 0x101
Exit block: 0x567
Body: 0x101, 0x108, 0x10c, 0x54c, 0x563, 0x567

Function 4:
Public function signature: 0x5c73dcea
Entry block: 0x116
Exit block: 0x163
Body: 0x116, 0x11d, 0x121, 0x163, 0x578, 0x62f, 0x633, 0x640, 0x644, 0x650

Function 5:
Public function signature: 0x70a08231
Entry block: 0x177
Exit block: 0x196
Body: 0x177, 0x17e, 0x182, 0x196, 0x660, 0x6c0, 0x6c4, 0x6d1, 0x6d5, 0x6e1

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x1a8
Exit block: 0x1bb
Body: 0x1a8, 0x1af, 0x1b3, 0x1bb, 0x6e7

Function 7:
Public function signature: 0xd0e30db0
Entry block: 0x1d7
Exit block: 0x84
Body: 0x84, 0x1d7, 0x6f6, 0x771

Function 8:
Public function signature: 0xf1b83630
Entry block: 0x1e1
Exit block: 0x84
Body: 0x84, 0x1e1, 0x1e8, 0x1ec, 0x46f, 0x470, 0x471, 0x773, 0x78b, 0x78f, 0x7d5, 0x7d9, 0x7e6, 0x7ea, 0x7ee, 0x7ef

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x84
Body: 0x7d, 0x81, 0x82, 0x84

