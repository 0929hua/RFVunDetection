Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x124]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x124
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x124
0xc: JUMPI 0x124 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x126]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0xa44b9cf
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x126
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0xa44b9cf
0x22: V15 = EQ V13 0xa44b9cf
0x23: V16 = 0x126
0x26: JUMPI 0x126 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x14d]
---
0x27 DUP1
0x28 PUSH4 0x1b3ed722
0x2d EQ
0x2e PUSH2 0x14d
0x31 JUMPI
---
0x28: V17 = 0x1b3ed722
0x2d: V18 = EQ 0x1b3ed722 V13
0x2e: V19 = 0x14d
0x31: JUMPI 0x14d V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x162]
---
0x32 DUP1
0x33 PUSH4 0x2ca8cbd0
0x38 EQ
0x39 PUSH2 0x162
0x3c JUMPI
---
0x33: V20 = 0x2ca8cbd0
0x38: V21 = EQ 0x2ca8cbd0 V13
0x39: V22 = 0x162
0x3c: JUMPI 0x162 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x177]
---
0x3d DUP1
0x3e PUSH4 0x3151ecfc
0x43 EQ
0x44 PUSH2 0x177
0x47 JUMPI
---
0x3e: V23 = 0x3151ecfc
0x43: V24 = EQ 0x3151ecfc V13
0x44: V25 = 0x177
0x47: JUMPI 0x177 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x18c]
---
0x48 DUP1
0x49 PUSH4 0x35c1d349
0x4e EQ
0x4f PUSH2 0x18c
0x52 JUMPI
---
0x49: V26 = 0x35c1d349
0x4e: V27 = EQ 0x35c1d349 V13
0x4f: V28 = 0x18c
0x52: JUMPI 0x18c V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x1c7]
---
0x53 DUP1
0x54 PUSH4 0x39af0513
0x59 EQ
0x5a PUSH2 0x1c7
0x5d JUMPI
---
0x54: V29 = 0x39af0513
0x59: V30 = EQ 0x39af0513 V13
0x5a: V31 = 0x1c7
0x5d: JUMPI 0x1c7 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1dc]
---
0x5e DUP1
0x5f PUSH4 0x3ccfd60b
0x64 EQ
0x65 PUSH2 0x1dc
0x68 JUMPI
---
0x5f: V32 = 0x3ccfd60b
0x64: V33 = EQ 0x3ccfd60b V13
0x65: V34 = 0x1dc
0x68: JUMPI 0x1dc V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1f1]
---
0x69 DUP1
0x6a PUSH4 0x3febb070
0x6f EQ
0x70 PUSH2 0x1f1
0x73 JUMPI
---
0x6a: V35 = 0x3febb070
0x6f: V36 = EQ 0x3febb070 V13
0x70: V37 = 0x1f1
0x73: JUMPI 0x1f1 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x206]
---
0x74 DUP1
0x75 PUSH4 0x5f504a82
0x7a EQ
0x7b PUSH2 0x206
0x7e JUMPI
---
0x75: V38 = 0x5f504a82
0x7a: V39 = EQ 0x5f504a82 V13
0x7b: V40 = 0x206
0x7e: JUMPI 0x206 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x237]
---
0x7f DUP1
0x80 PUSH4 0x63bd1d4a
0x85 EQ
0x86 PUSH2 0x237
0x89 JUMPI
---
0x80: V41 = 0x63bd1d4a
0x85: V42 = EQ 0x63bd1d4a V13
0x86: V43 = 0x237
0x89: JUMPI 0x237 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x24c]
---
0x8a DUP1
0x8b PUSH4 0x6cff6f9d
0x90 EQ
0x91 PUSH2 0x24c
0x94 JUMPI
---
0x8b: V44 = 0x6cff6f9d
0x90: V45 = EQ 0x6cff6f9d V13
0x91: V46 = 0x24c
0x94: JUMPI 0x24c V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x261]
---
0x95 DUP1
0x96 PUSH4 0x79ba5097
0x9b EQ
0x9c PUSH2 0x261
0x9f JUMPI
---
0x96: V47 = 0x79ba5097
0x9b: V48 = EQ 0x79ba5097 V13
0x9c: V49 = 0x261
0x9f: JUMPI 0x261 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x276]
---
0xa0 DUP1
0xa1 PUSH4 0x8da5cb5b
0xa6 EQ
0xa7 PUSH2 0x276
0xaa JUMPI
---
0xa1: V50 = 0x8da5cb5b
0xa6: V51 = EQ 0x8da5cb5b V13
0xa7: V52 = 0x276
0xaa: JUMPI 0x276 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x28b]
---
0xab DUP1
0xac PUSH4 0x949e8acd
0xb1 EQ
0xb2 PUSH2 0x28b
0xb5 JUMPI
---
0xac: V53 = 0x949e8acd
0xb1: V54 = EQ 0x949e8acd V13
0xb2: V55 = 0x28b
0xb5: JUMPI 0x28b V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x2a0]
---
0xb6 DUP1
0xb7 PUSH4 0x997664d7
0xbc EQ
0xbd PUSH2 0x2a0
0xc0 JUMPI
---
0xb7: V56 = 0x997664d7
0xbc: V57 = EQ 0x997664d7 V13
0xbd: V58 = 0x2a0
0xc0: JUMPI 0x2a0 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x2b5]
---
0xc1 DUP1
0xc2 PUSH4 0xa0ca0a57
0xc7 EQ
0xc8 PUSH2 0x2b5
0xcb JUMPI
---
0xc2: V59 = 0xa0ca0a57
0xc7: V60 = EQ 0xa0ca0a57 V13
0xc8: V61 = 0x2b5
0xcb: JUMPI 0x2b5 V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x2ca]
---
0xcc DUP1
0xcd PUSH4 0xa26dbf26
0xd2 EQ
0xd3 PUSH2 0x2ca
0xd6 JUMPI
---
0xcd: V62 = 0xa26dbf26
0xd2: V63 = EQ 0xa26dbf26 V13
0xd3: V64 = 0x2ca
0xd6: JUMPI 0x2ca V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x2df]
---
0xd7 DUP1
0xd8 PUSH4 0xa6f9dae1
0xdd EQ
0xde PUSH2 0x2df
0xe1 JUMPI
---
0xd8: V65 = 0xa6f9dae1
0xdd: V66 = EQ 0xa6f9dae1 V13
0xde: V67 = 0x2df
0xe1: JUMPI 0x2df V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed, 0x300]
---
0xe2 DUP1
0xe3 PUSH4 0xd0e30db0
0xe8 EQ
0xe9 PUSH2 0x300
0xec JUMPI
---
0xe3: V68 = 0xd0e30db0
0xe8: V69 = EQ 0xd0e30db0 V13
0xe9: V70 = 0x300
0xec: JUMPI 0x300 V69
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xed
[0xed:0xf7]
---
Predecessors: [0xe2]
Successors: [0xf8, 0x308]
---
0xed DUP1
0xee PUSH4 0xd493b9ac
0xf3 EQ
0xf4 PUSH2 0x308
0xf7 JUMPI
---
0xee: V71 = 0xd493b9ac
0xf3: V72 = EQ 0xd493b9ac V13
0xf4: V73 = 0x308
0xf7: JUMPI 0x308 V72
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0x102]
---
Predecessors: [0xed]
Successors: [0x103, 0x346]
---
0xf8 DUP1
0xf9 PUSH4 0xe5cf2297
0xfe EQ
0xff PUSH2 0x346
0x102 JUMPI
---
0xf9: V74 = 0xe5cf2297
0xfe: V75 = EQ 0xe5cf2297 V13
0xff: V76 = 0x346
0x102: JUMPI 0x346 V75
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x103
[0x103:0x10d]
---
Predecessors: [0xf8]
Successors: [0x10e, 0x367]
---
0x103 DUP1
0x104 PUSH4 0xed88c68e
0x109 EQ
0x10a PUSH2 0x367
0x10d JUMPI
---
0x104: V77 = 0xed88c68e
0x109: V78 = EQ 0xed88c68e V13
0x10a: V79 = 0x367
0x10d: JUMPI 0x367 V78
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x10e
[0x10e:0x118]
---
Predecessors: [0x103]
Successors: [0x119, 0x36f]
---
0x10e DUP1
0x10f PUSH4 0xfb346eab
0x114 EQ
0x115 PUSH2 0x36f
0x118 JUMPI
---
0x10f: V80 = 0xfb346eab
0x114: V81 = EQ 0xfb346eab V13
0x115: V82 = 0x36f
0x118: JUMPI 0x36f V81
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x119
[0x119:0x123]
---
Predecessors: [0x10e]
Successors: [0x124, 0x384]
---
0x119 DUP1
0x11a PUSH4 0xff5d18ca
0x11f EQ
0x120 PUSH2 0x384
0x123 JUMPI
---
0x11a: V83 = 0xff5d18ca
0x11f: V84 = EQ 0xff5d18ca V13
0x120: V85 = 0x384
0x123: JUMPI 0x384 V84
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x124
[0x124:0x125]
---
Predecessors: [0x0, 0x119, 0x441, 0x59d, 0x8af, 0x8d5, 0x9a5, 0xb07, 0xbf6]
Successors: []
---
0x124 JUMPDEST
0x125 STOP
---
0x124: JUMPDEST 
0x125: STOP 
---
Entry stack: [V13, 0x124, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S0]

================================

Block 0x126
[0x126:0x12d]
---
Predecessors: [0xd]
Successors: [0x12e, 0x132]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 DUP1
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x126: JUMPDEST 
0x127: V86 = CALLVALUE
0x129: V87 = ISZERO V86
0x12a: V88 = 0x132
0x12d: JUMPI 0x132 V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V13, V86]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x126]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V89 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V13, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V86]

================================

Block 0x132
[0x132:0x13a]
---
Predecessors: [0x126]
Successors: [0x3a5]
---
0x132 JUMPDEST
0x133 POP
0x134 PUSH2 0x13b
0x137 PUSH2 0x3a5
0x13a JUMP
---
0x132: JUMPDEST 
0x134: V90 = 0x13b
0x137: V91 = 0x3a5
0x13a: JUMP 0x3a5
---
Entry stack: [V13, V86]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x13b
[0x13b:0x14c]
---
Predecessors: [0x3b0, 0x3b5, 0x4dd, 0x51a, 0x5f5, 0x8b4, 0x974, 0x97a, 0x984, 0xbdb, 0xc3b, 0xc41]
Successors: []
---
0x13b JUMPDEST
0x13c PUSH1 0x40
0x13e DUP1
0x13f MLOAD
0x140 SWAP2
0x141 DUP3
0x142 MSTORE
0x143 MLOAD
0x144 SWAP1
0x145 DUP2
0x146 SWAP1
0x147 SUB
0x148 PUSH1 0x20
0x14a ADD
0x14b SWAP1
0x14c RETURN
---
0x13b: JUMPDEST 
0x13c: V92 = 0x40
0x13f: V93 = M[0x40]
0x142: M[V93] = S0
0x143: V94 = M[0x40]
0x147: V95 = SUB V93 V94
0x148: V96 = 0x20
0x14a: V97 = ADD 0x20 V95
0x14c: RETURN V94 V97
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S3, S2, S1]

================================

Block 0x14d
[0x14d:0x154]
---
Predecessors: [0x27]
Successors: [0x155, 0x159]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f DUP1
0x150 ISZERO
0x151 PUSH2 0x159
0x154 JUMPI
---
0x14d: JUMPDEST 
0x14e: V98 = CALLVALUE
0x150: V99 = ISZERO V98
0x151: V100 = 0x159
0x154: JUMPI 0x159 V99
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V13, V98]

================================

Block 0x155
[0x155:0x158]
---
Predecessors: [0x14d]
Successors: []
---
0x155 PUSH1 0x0
0x157 DUP1
0x158 REVERT
---
0x155: V101 = 0x0
0x158: REVERT 0x0 0x0
---
Entry stack: [V13, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V98]

================================

Block 0x159
[0x159:0x161]
---
Predecessors: [0x14d]
Successors: [0x3b5]
---
0x159 JUMPDEST
0x15a POP
0x15b PUSH2 0x13b
0x15e PUSH2 0x3b5
0x161 JUMP
---
0x159: JUMPDEST 
0x15b: V102 = 0x13b
0x15e: V103 = 0x3b5
0x161: JUMP 0x3b5
---
Entry stack: [V13, V98]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x32]
Successors: [0x16a, 0x16e]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 DUP1
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x162: JUMPDEST 
0x163: V104 = CALLVALUE
0x165: V105 = ISZERO V104
0x166: V106 = 0x16e
0x169: JUMPI 0x16e V105
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V13, V104]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x162]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V107 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V13, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V104]

================================

Block 0x16e
[0x16e:0x176]
---
Predecessors: [0x162]
Successors: [0x3bb]
---
0x16e JUMPDEST
0x16f POP
0x170 PUSH2 0x124
0x173 PUSH2 0x3bb
0x176 JUMP
---
0x16e: JUMPDEST 
0x170: V108 = 0x124
0x173: V109 = 0x3bb
0x176: JUMP 0x3bb
---
Entry stack: [V13, V104]
Stack pops: 1
Stack additions: [0x124]
Exit stack: [V13, 0x124]

================================

Block 0x177
[0x177:0x17e]
---
Predecessors: [0x3d]
Successors: [0x17f, 0x183]
---
0x177 JUMPDEST
0x178 CALLVALUE
0x179 DUP1
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x177: JUMPDEST 
0x178: V110 = CALLVALUE
0x17a: V111 = ISZERO V110
0x17b: V112 = 0x183
0x17e: JUMPI 0x183 V111
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V13, V110]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x177]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V113 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V13, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V110]

================================

Block 0x183
[0x183:0x18b]
---
Predecessors: [0x177]
Successors: [0x448]
---
0x183 JUMPDEST
0x184 POP
0x185 PUSH2 0x13b
0x188 PUSH2 0x448
0x18b JUMP
---
0x183: JUMPDEST 
0x185: V114 = 0x13b
0x188: V115 = 0x448
0x18b: JUMP 0x448
---
Entry stack: [V13, V110]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x18c
[0x18c:0x193]
---
Predecessors: [0x48]
Successors: [0x194, 0x198]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e DUP1
0x18f ISZERO
0x190 PUSH2 0x198
0x193 JUMPI
---
0x18c: JUMPDEST 
0x18d: V116 = CALLVALUE
0x18f: V117 = ISZERO V116
0x190: V118 = 0x198
0x193: JUMPI 0x198 V117
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V13, V116]

================================

Block 0x194
[0x194:0x197]
---
Predecessors: [0x18c]
Successors: []
---
0x194 PUSH1 0x0
0x196 DUP1
0x197 REVERT
---
0x194: V119 = 0x0
0x197: REVERT 0x0 0x0
---
Entry stack: [V13, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V116]

================================

Block 0x198
[0x198:0x1a3]
---
Predecessors: [0x18c]
Successors: [0x4e4]
---
0x198 JUMPDEST
0x199 POP
0x19a PUSH2 0x1a4
0x19d PUSH1 0x4
0x19f CALLDATALOAD
0x1a0 PUSH2 0x4e4
0x1a3 JUMP
---
0x198: JUMPDEST 
0x19a: V120 = 0x1a4
0x19d: V121 = 0x4
0x19f: V122 = CALLDATALOAD 0x4
0x1a0: V123 = 0x4e4
0x1a3: JUMP 0x4e4
---
Entry stack: [V13, V116]
Stack pops: 1
Stack additions: [0x1a4, V122]
Exit stack: [V13, 0x1a4, V122]

================================

Block 0x1a4
[0x1a4:0x1c6]
---
Predecessors: [0x4f2]
Successors: []
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x40
0x1a7 DUP1
0x1a8 MLOAD
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 SWAP1
0x1b2 SWAP4
0x1b3 AND
0x1b4 DUP4
0x1b5 MSTORE
0x1b6 PUSH1 0x20
0x1b8 DUP4
0x1b9 ADD
0x1ba SWAP2
0x1bb SWAP1
0x1bc SWAP2
0x1bd MSTORE
0x1be DUP1
0x1bf MLOAD
0x1c0 SWAP2
0x1c1 DUP3
0x1c2 SWAP1
0x1c3 SUB
0x1c4 ADD
0x1c5 SWAP1
0x1c6 RETURN
---
0x1a4: JUMPDEST 
0x1a5: V124 = 0x40
0x1a8: V125 = M[0x40]
0x1a9: V126 = 0x1
0x1ab: V127 = 0xa0
0x1ad: V128 = 0x2
0x1af: V129 = EXP 0x2 0xa0
0x1b0: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b3: V131 = AND V432 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: M[V125] = V131
0x1b6: V132 = 0x20
0x1b9: V133 = ADD V125 0x20
0x1bd: M[V133] = V426
0x1bf: V134 = M[0x40]
0x1c3: V135 = SUB V125 V134
0x1c4: V136 = ADD V135 0x40
0x1c6: RETURN V134 V136
---
Entry stack: [V13, 0x1a4, V432, V426]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x1a4]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0x53]
Successors: [0x1cf, 0x1d3]
---
0x1c7 JUMPDEST
0x1c8 CALLVALUE
0x1c9 DUP1
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V137 = CALLVALUE
0x1ca: V138 = ISZERO V137
0x1cb: V139 = 0x1d3
0x1ce: JUMPI 0x1d3 V138
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V137]
Exit stack: [V13, V137]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c7]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V140 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V13, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V137]

================================

Block 0x1d3
[0x1d3:0x1db]
---
Predecessors: [0x1c7]
Successors: [0x51a]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 PUSH2 0x13b
0x1d8 PUSH2 0x51a
0x1db JUMP
---
0x1d3: JUMPDEST 
0x1d5: V141 = 0x13b
0x1d8: V142 = 0x51a
0x1db: JUMP 0x51a
---
Entry stack: [V13, V137]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x5e]
Successors: [0x1e4, 0x1e8]
---
0x1dc JUMPDEST
0x1dd CALLVALUE
0x1de DUP1
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V143 = CALLVALUE
0x1df: V144 = ISZERO V143
0x1e0: V145 = 0x1e8
0x1e3: JUMPI 0x1e8 V144
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V143]
Exit stack: [V13, V143]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1dc]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V146 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V13, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V143]

================================

Block 0x1e8
[0x1e8:0x1f0]
---
Predecessors: [0x1dc]
Successors: [0x520]
---
0x1e8 JUMPDEST
0x1e9 POP
0x1ea PUSH2 0x124
0x1ed PUSH2 0x520
0x1f0 JUMP
---
0x1e8: JUMPDEST 
0x1ea: V147 = 0x124
0x1ed: V148 = 0x520
0x1f0: JUMP 0x520
---
Entry stack: [V13, V143]
Stack pops: 1
Stack additions: [0x124]
Exit stack: [V13, 0x124]

================================

Block 0x1f1
[0x1f1:0x1f8]
---
Predecessors: [0x69]
Successors: [0x1f9, 0x1fd]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 DUP1
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V149 = CALLVALUE
0x1f4: V150 = ISZERO V149
0x1f5: V151 = 0x1fd
0x1f8: JUMPI 0x1fd V150
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V13, V149]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V152 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V13, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V149]

================================

Block 0x1fd
[0x1fd:0x205]
---
Predecessors: [0x1f1]
Successors: [0x5f5]
---
0x1fd JUMPDEST
0x1fe POP
0x1ff PUSH2 0x13b
0x202 PUSH2 0x5f5
0x205 JUMP
---
0x1fd: JUMPDEST 
0x1ff: V153 = 0x13b
0x202: V154 = 0x5f5
0x205: JUMP 0x5f5
---
Entry stack: [V13, V149]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x206
[0x206:0x20d]
---
Predecessors: [0x74]
Successors: [0x20e, 0x212]
---
0x206 JUMPDEST
0x207 CALLVALUE
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x206: JUMPDEST 
0x207: V155 = CALLVALUE
0x209: V156 = ISZERO V155
0x20a: V157 = 0x212
0x20d: JUMPI 0x212 V156
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V155]
Exit stack: [V13, V155]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x206]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V158 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V13, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V155]

================================

Block 0x212
[0x212:0x21a]
---
Predecessors: [0x206]
Successors: [0x5fb]
---
0x212 JUMPDEST
0x213 POP
0x214 PUSH2 0x21b
0x217 PUSH2 0x5fb
0x21a JUMP
---
0x212: JUMPDEST 
0x214: V159 = 0x21b
0x217: V160 = 0x5fb
0x21a: JUMP 0x5fb
---
Entry stack: [V13, V155]
Stack pops: 1
Stack additions: [0x21b]
Exit stack: [V13, 0x21b]

================================

Block 0x21b
[0x21b:0x236]
---
Predecessors: [0x5fb, 0x906]
Successors: []
---
0x21b JUMPDEST
0x21c PUSH1 0x40
0x21e DUP1
0x21f MLOAD
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 SWAP1
0x229 SWAP3
0x22a AND
0x22b DUP3
0x22c MSTORE
0x22d MLOAD
0x22e SWAP1
0x22f DUP2
0x230 SWAP1
0x231 SUB
0x232 PUSH1 0x20
0x234 ADD
0x235 SWAP1
0x236 RETURN
---
0x21b: JUMPDEST 
0x21c: V161 = 0x40
0x21f: V162 = M[0x40]
0x220: V163 = 0x1
0x222: V164 = 0xa0
0x224: V165 = 0x2
0x226: V166 = EXP 0x2 0xa0
0x227: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V168 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x22c: M[V162] = V168
0x22d: V169 = M[0x40]
0x231: V170 = SUB V162 V169
0x232: V171 = 0x20
0x234: V172 = ADD 0x20 V170
0x236: RETURN V169 V172
---
Entry stack: [V13, 0x21b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x21b]

================================

Block 0x237
[0x237:0x23e]
---
Predecessors: [0x7f]
Successors: [0x23f, 0x243]
---
0x237 JUMPDEST
0x238 CALLVALUE
0x239 DUP1
0x23a ISZERO
0x23b PUSH2 0x243
0x23e JUMPI
---
0x237: JUMPDEST 
0x238: V173 = CALLVALUE
0x23a: V174 = ISZERO V173
0x23b: V175 = 0x243
0x23e: JUMPI 0x243 V174
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V173]
Exit stack: [V13, V173]

================================

Block 0x23f
[0x23f:0x242]
---
Predecessors: [0x237]
Successors: []
---
0x23f PUSH1 0x0
0x241 DUP1
0x242 REVERT
---
0x23f: V176 = 0x0
0x242: REVERT 0x0 0x0
---
Entry stack: [V13, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V173]

================================

Block 0x243
[0x243:0x24b]
---
Predecessors: [0x237]
Successors: [0x60a]
---
0x243 JUMPDEST
0x244 POP
0x245 PUSH2 0x124
0x248 PUSH2 0x60a
0x24b JUMP
---
0x243: JUMPDEST 
0x245: V177 = 0x124
0x248: V178 = 0x60a
0x24b: JUMP 0x60a
---
Entry stack: [V13, V173]
Stack pops: 1
Stack additions: [0x124]
Exit stack: [V13, 0x124]

================================

Block 0x24c
[0x24c:0x253]
---
Predecessors: [0x8a]
Successors: [0x254, 0x258]
---
0x24c JUMPDEST
0x24d CALLVALUE
0x24e DUP1
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x24c: JUMPDEST 
0x24d: V179 = CALLVALUE
0x24f: V180 = ISZERO V179
0x250: V181 = 0x258
0x253: JUMPI 0x258 V180
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V13, V179]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x24c]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V182 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V13, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V179]

================================

Block 0x258
[0x258:0x260]
---
Predecessors: [0x24c]
Successors: [0x8b4]
---
0x258 JUMPDEST
0x259 POP
0x25a PUSH2 0x13b
0x25d PUSH2 0x8b4
0x260 JUMP
---
0x258: JUMPDEST 
0x25a: V183 = 0x13b
0x25d: V184 = 0x8b4
0x260: JUMP 0x8b4
---
Entry stack: [V13, V179]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x261
[0x261:0x268]
---
Predecessors: [0x95]
Successors: [0x269, 0x26d]
---
0x261 JUMPDEST
0x262 CALLVALUE
0x263 DUP1
0x264 ISZERO
0x265 PUSH2 0x26d
0x268 JUMPI
---
0x261: JUMPDEST 
0x262: V185 = CALLVALUE
0x264: V186 = ISZERO V185
0x265: V187 = 0x26d
0x268: JUMPI 0x26d V186
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V185]
Exit stack: [V13, V185]

================================

Block 0x269
[0x269:0x26c]
---
Predecessors: [0x261]
Successors: []
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
---
0x269: V188 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V13, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V185]

================================

Block 0x26d
[0x26d:0x275]
---
Predecessors: [0x261]
Successors: [0x8ba]
---
0x26d JUMPDEST
0x26e POP
0x26f PUSH2 0x124
0x272 PUSH2 0x8ba
0x275 JUMP
---
0x26d: JUMPDEST 
0x26f: V189 = 0x124
0x272: V190 = 0x8ba
0x275: JUMP 0x8ba
---
Entry stack: [V13, V185]
Stack pops: 1
Stack additions: [0x124]
Exit stack: [V13, 0x124]

================================

Block 0x276
[0x276:0x27d]
---
Predecessors: [0xa0]
Successors: [0x27e, 0x282]
---
0x276 JUMPDEST
0x277 CALLVALUE
0x278 DUP1
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x276: JUMPDEST 
0x277: V191 = CALLVALUE
0x279: V192 = ISZERO V191
0x27a: V193 = 0x282
0x27d: JUMPI 0x282 V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V13, V191]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x276]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V194 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V13, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V191]

================================

Block 0x282
[0x282:0x28a]
---
Predecessors: [0x276]
Successors: [0x906]
---
0x282 JUMPDEST
0x283 POP
0x284 PUSH2 0x21b
0x287 PUSH2 0x906
0x28a JUMP
---
0x282: JUMPDEST 
0x284: V195 = 0x21b
0x287: V196 = 0x906
0x28a: JUMP 0x906
---
Entry stack: [V13, V191]
Stack pops: 1
Stack additions: [0x21b]
Exit stack: [V13, 0x21b]

================================

Block 0x28b
[0x28b:0x292]
---
Predecessors: [0xab]
Successors: [0x293, 0x297]
---
0x28b JUMPDEST
0x28c CALLVALUE
0x28d DUP1
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x28b: JUMPDEST 
0x28c: V197 = CALLVALUE
0x28e: V198 = ISZERO V197
0x28f: V199 = 0x297
0x292: JUMPI 0x297 V198
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V197]
Exit stack: [V13, V197]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x28b]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V200 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V13, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V197]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x28b]
Successors: [0x915]
---
0x297 JUMPDEST
0x298 POP
0x299 PUSH2 0x13b
0x29c PUSH2 0x915
0x29f JUMP
---
0x297: JUMPDEST 
0x299: V201 = 0x13b
0x29c: V202 = 0x915
0x29f: JUMP 0x915
---
Entry stack: [V13, V197]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0xb6]
Successors: [0x2a8, 0x2ac]
---
0x2a0 JUMPDEST
0x2a1 CALLVALUE
0x2a2 DUP1
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V203 = CALLVALUE
0x2a3: V204 = ISZERO V203
0x2a4: V205 = 0x2ac
0x2a7: JUMPI 0x2ac V204
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V203]
Exit stack: [V13, V203]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a0]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V206 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V13, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V203]

================================

Block 0x2ac
[0x2ac:0x2b4]
---
Predecessors: [0x2a0]
Successors: [0x974]
---
0x2ac JUMPDEST
0x2ad POP
0x2ae PUSH2 0x13b
0x2b1 PUSH2 0x974
0x2b4 JUMP
---
0x2ac: JUMPDEST 
0x2ae: V207 = 0x13b
0x2b1: V208 = 0x974
0x2b4: JUMP 0x974
---
Entry stack: [V13, V203]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x2b5
[0x2b5:0x2bc]
---
Predecessors: [0xc1]
Successors: [0x2bd, 0x2c1]
---
0x2b5 JUMPDEST
0x2b6 CALLVALUE
0x2b7 DUP1
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V209 = CALLVALUE
0x2b8: V210 = ISZERO V209
0x2b9: V211 = 0x2c1
0x2bc: JUMPI 0x2c1 V210
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V209]
Exit stack: [V13, V209]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2b5]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V212 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V13, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V209]

================================

Block 0x2c1
[0x2c1:0x2c9]
---
Predecessors: [0x2b5]
Successors: [0x97a]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 PUSH2 0x13b
0x2c6 PUSH2 0x97a
0x2c9 JUMP
---
0x2c1: JUMPDEST 
0x2c3: V213 = 0x13b
0x2c6: V214 = 0x97a
0x2c9: JUMP 0x97a
---
Entry stack: [V13, V209]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x2ca
[0x2ca:0x2d1]
---
Predecessors: [0xcc]
Successors: [0x2d2, 0x2d6]
---
0x2ca JUMPDEST
0x2cb CALLVALUE
0x2cc DUP1
0x2cd ISZERO
0x2ce PUSH2 0x2d6
0x2d1 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V215 = CALLVALUE
0x2cd: V216 = ISZERO V215
0x2ce: V217 = 0x2d6
0x2d1: JUMPI 0x2d6 V216
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V215]
Exit stack: [V13, V215]

================================

Block 0x2d2
[0x2d2:0x2d5]
---
Predecessors: [0x2ca]
Successors: []
---
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 REVERT
---
0x2d2: V218 = 0x0
0x2d5: REVERT 0x0 0x0
---
Entry stack: [V13, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V215]

================================

Block 0x2d6
[0x2d6:0x2de]
---
Predecessors: [0x2ca]
Successors: [0x984]
---
0x2d6 JUMPDEST
0x2d7 POP
0x2d8 PUSH2 0x13b
0x2db PUSH2 0x984
0x2de JUMP
---
0x2d6: JUMPDEST 
0x2d8: V219 = 0x13b
0x2db: V220 = 0x984
0x2de: JUMP 0x984
---
Entry stack: [V13, V215]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x2df
[0x2df:0x2e6]
---
Predecessors: [0xd7]
Successors: [0x2e7, 0x2eb]
---
0x2df JUMPDEST
0x2e0 CALLVALUE
0x2e1 DUP1
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V221 = CALLVALUE
0x2e2: V222 = ISZERO V221
0x2e3: V223 = 0x2eb
0x2e6: JUMPI 0x2eb V222
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V221]
Exit stack: [V13, V221]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2df]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V224 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V13, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V221]

================================

Block 0x2eb
[0x2eb:0x2ff]
---
Predecessors: [0x2df]
Successors: [0x98a]
---
0x2eb JUMPDEST
0x2ec POP
0x2ed PUSH2 0x124
0x2f0 PUSH1 0x1
0x2f2 PUSH1 0xa0
0x2f4 PUSH1 0x2
0x2f6 EXP
0x2f7 SUB
0x2f8 PUSH1 0x4
0x2fa CALLDATALOAD
0x2fb AND
0x2fc PUSH2 0x98a
0x2ff JUMP
---
0x2eb: JUMPDEST 
0x2ed: V225 = 0x124
0x2f0: V226 = 0x1
0x2f2: V227 = 0xa0
0x2f4: V228 = 0x2
0x2f6: V229 = EXP 0x2 0xa0
0x2f7: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f8: V231 = 0x4
0x2fa: V232 = CALLDATALOAD 0x4
0x2fb: V233 = AND V232 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V234 = 0x98a
0x2ff: JUMP 0x98a
---
Entry stack: [V13, V221]
Stack pops: 1
Stack additions: [0x124, V233]
Exit stack: [V13, 0x124, V233]

================================

Block 0x300
[0x300:0x307]
---
Predecessors: [0xe2]
Successors: [0x9d4]
---
0x300 JUMPDEST
0x301 PUSH2 0x124
0x304 PUSH2 0x9d4
0x307 JUMP
---
0x300: JUMPDEST 
0x301: V235 = 0x124
0x304: V236 = 0x9d4
0x307: JUMP 0x9d4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V13, 0x124]

================================

Block 0x308
[0x308:0x30f]
---
Predecessors: [0xed]
Successors: [0x310, 0x314]
---
0x308 JUMPDEST
0x309 CALLVALUE
0x30a DUP1
0x30b ISZERO
0x30c PUSH2 0x314
0x30f JUMPI
---
0x308: JUMPDEST 
0x309: V237 = CALLVALUE
0x30b: V238 = ISZERO V237
0x30c: V239 = 0x314
0x30f: JUMPI 0x314 V238
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V237]
Exit stack: [V13, V237]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x308]
Successors: []
---
0x310 PUSH1 0x0
0x312 DUP1
0x313 REVERT
---
0x310: V240 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V13, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V237]

================================

Block 0x314
[0x314:0x331]
---
Predecessors: [0x308]
Successors: [0xb0a]
---
0x314 JUMPDEST
0x315 POP
0x316 PUSH2 0x332
0x319 PUSH1 0x1
0x31b PUSH1 0xa0
0x31d PUSH1 0x2
0x31f EXP
0x320 SUB
0x321 PUSH1 0x4
0x323 CALLDATALOAD
0x324 DUP2
0x325 AND
0x326 SWAP1
0x327 PUSH1 0x24
0x329 CALLDATALOAD
0x32a AND
0x32b PUSH1 0x44
0x32d CALLDATALOAD
0x32e PUSH2 0xb0a
0x331 JUMP
---
0x314: JUMPDEST 
0x316: V241 = 0x332
0x319: V242 = 0x1
0x31b: V243 = 0xa0
0x31d: V244 = 0x2
0x31f: V245 = EXP 0x2 0xa0
0x320: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x321: V247 = 0x4
0x323: V248 = CALLDATALOAD 0x4
0x325: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x327: V250 = 0x24
0x329: V251 = CALLDATALOAD 0x24
0x32a: V252 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V253 = 0x44
0x32d: V254 = CALLDATALOAD 0x44
0x32e: V255 = 0xb0a
0x331: JUMP 0xb0a
---
Entry stack: [V13, V237]
Stack pops: 1
Stack additions: [0x332, V249, V252, V254]
Exit stack: [V13, 0x332, V249, V252, V254]

================================

Block 0x332
[0x332:0x345]
---
Predecessors: [0xbd0]
Successors: []
---
0x332 JUMPDEST
0x333 PUSH1 0x40
0x335 DUP1
0x336 MLOAD
0x337 SWAP2
0x338 ISZERO
0x339 ISZERO
0x33a DUP3
0x33b MSTORE
0x33c MLOAD
0x33d SWAP1
0x33e DUP2
0x33f SWAP1
0x340 SUB
0x341 PUSH1 0x20
0x343 ADD
0x344 SWAP1
0x345 RETURN
---
0x332: JUMPDEST 
0x333: V256 = 0x40
0x336: V257 = M[0x40]
0x338: V258 = ISZERO V994
0x339: V259 = ISZERO V258
0x33b: M[V257] = V259
0x33c: V260 = M[0x40]
0x340: V261 = SUB V257 V260
0x341: V262 = 0x20
0x343: V263 = ADD 0x20 V261
0x345: RETURN V260 V263
---
Entry stack: [V13, V994]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x346
[0x346:0x34d]
---
Predecessors: [0xf8]
Successors: [0x34e, 0x352]
---
0x346 JUMPDEST
0x347 CALLVALUE
0x348 DUP1
0x349 ISZERO
0x34a PUSH2 0x352
0x34d JUMPI
---
0x346: JUMPDEST 
0x347: V264 = CALLVALUE
0x349: V265 = ISZERO V264
0x34a: V266 = 0x352
0x34d: JUMPI 0x352 V265
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V264]
Exit stack: [V13, V264]

================================

Block 0x34e
[0x34e:0x351]
---
Predecessors: [0x346]
Successors: []
---
0x34e PUSH1 0x0
0x350 DUP1
0x351 REVERT
---
0x34e: V267 = 0x0
0x351: REVERT 0x0 0x0
---
Entry stack: [V13, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V264]

================================

Block 0x352
[0x352:0x366]
---
Predecessors: [0x346]
Successors: [0xbdb]
---
0x352 JUMPDEST
0x353 POP
0x354 PUSH2 0x13b
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f PUSH1 0x4
0x361 CALLDATALOAD
0x362 AND
0x363 PUSH2 0xbdb
0x366 JUMP
---
0x352: JUMPDEST 
0x354: V268 = 0x13b
0x357: V269 = 0x1
0x359: V270 = 0xa0
0x35b: V271 = 0x2
0x35d: V272 = EXP 0x2 0xa0
0x35e: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V274 = 0x4
0x361: V275 = CALLDATALOAD 0x4
0x362: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x363: V277 = 0xbdb
0x366: JUMP 0xbdb
---
Entry stack: [V13, V264]
Stack pops: 1
Stack additions: [0x13b, V276]
Exit stack: [V13, 0x13b, V276]

================================

Block 0x367
[0x367:0x36e]
---
Predecessors: [0x103]
Successors: [0xbf6]
---
0x367 JUMPDEST
0x368 PUSH2 0x124
0x36b PUSH2 0xbf6
0x36e JUMP
---
0x367: JUMPDEST 
0x368: V278 = 0x124
0x36b: V279 = 0xbf6
0x36e: JUMP 0xbf6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V13, 0x124]

================================

Block 0x36f
[0x36f:0x376]
---
Predecessors: [0x10e]
Successors: [0x377, 0x37b]
---
0x36f JUMPDEST
0x370 CALLVALUE
0x371 DUP1
0x372 ISZERO
0x373 PUSH2 0x37b
0x376 JUMPI
---
0x36f: JUMPDEST 
0x370: V280 = CALLVALUE
0x372: V281 = ISZERO V280
0x373: V282 = 0x37b
0x376: JUMPI 0x37b V281
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V280]
Exit stack: [V13, V280]

================================

Block 0x377
[0x377:0x37a]
---
Predecessors: [0x36f]
Successors: []
---
0x377 PUSH1 0x0
0x379 DUP1
0x37a REVERT
---
0x377: V283 = 0x0
0x37a: REVERT 0x0 0x0
---
Entry stack: [V13, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V280]

================================

Block 0x37b
[0x37b:0x383]
---
Predecessors: [0x36f]
Successors: [0xc3b]
---
0x37b JUMPDEST
0x37c POP
0x37d PUSH2 0x13b
0x380 PUSH2 0xc3b
0x383 JUMP
---
0x37b: JUMPDEST 
0x37d: V284 = 0x13b
0x380: V285 = 0xc3b
0x383: JUMP 0xc3b
---
Entry stack: [V13, V280]
Stack pops: 1
Stack additions: [0x13b]
Exit stack: [V13, 0x13b]

================================

Block 0x384
[0x384:0x38b]
---
Predecessors: [0x119]
Successors: [0x38c, 0x390]
---
0x384 JUMPDEST
0x385 CALLVALUE
0x386 DUP1
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x384: JUMPDEST 
0x385: V286 = CALLVALUE
0x387: V287 = ISZERO V286
0x388: V288 = 0x390
0x38b: JUMPI 0x390 V287
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V286]
Exit stack: [V13, V286]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x384]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V289 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V13, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V286]

================================

Block 0x390
[0x390:0x3a4]
---
Predecessors: [0x384]
Successors: [0xc41]
---
0x390 JUMPDEST
0x391 POP
0x392 PUSH2 0x13b
0x395 PUSH1 0x1
0x397 PUSH1 0xa0
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d PUSH1 0x4
0x39f CALLDATALOAD
0x3a0 AND
0x3a1 PUSH2 0xc41
0x3a4 JUMP
---
0x390: JUMPDEST 
0x392: V290 = 0x13b
0x395: V291 = 0x1
0x397: V292 = 0xa0
0x399: V293 = 0x2
0x39b: V294 = EXP 0x2 0xa0
0x39c: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39d: V296 = 0x4
0x39f: V297 = CALLDATALOAD 0x4
0x3a0: V298 = AND V297 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V299 = 0xc41
0x3a4: JUMP 0xc41
---
Entry stack: [V13, V286]
Stack pops: 1
Stack additions: [0x13b, V298]
Exit stack: [V13, 0x13b, V298]

================================

Block 0x3a5
[0x3a5:0x3af]
---
Predecessors: [0x132]
Successors: [0xbdb]
---
0x3a5 JUMPDEST
0x3a6 PUSH1 0x0
0x3a8 PUSH2 0x3b0
0x3ab CALLER
0x3ac PUSH2 0xbdb
0x3af JUMP
---
0x3a5: JUMPDEST 
0x3a6: V300 = 0x0
0x3a8: V301 = 0x3b0
0x3ab: V302 = CALLER
0x3ac: V303 = 0xbdb
0x3af: JUMP 0xbdb
---
Entry stack: [V13, 0x13b]
Stack pops: 0
Stack additions: [0x0, 0x3b0, V302]
Exit stack: [V13, 0x13b, 0x0, 0x3b0, V302]

================================

Block 0x3b0
[0x3b0:0x3b4]
---
Predecessors: [0xbdb]
Successors: [0x13b]
---
0x3b0 JUMPDEST
0x3b1 SWAP1
0x3b2 POP
0x3b3 SWAP1
0x3b4 JUMP
---
0x3b0: JUMPDEST 
0x3b4: JUMP 0x13b
---
Entry stack: [V13, 0x13b, S1, V1006]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V13, V1006]

================================

Block 0x3b5
[0x3b5:0x3ba]
---
Predecessors: [0x159]
Successors: [0x13b]
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0x5
0x3b8 SLOAD
0x3b9 DUP2
0x3ba JUMP
---
0x3b5: JUMPDEST 
0x3b6: V304 = 0x5
0x3b8: V305 = S[0x5]
0x3ba: JUMP 0x13b
---
Entry stack: [V13, 0x13b]
Stack pops: 1
Stack additions: [S0, V305]
Exit stack: [V13, 0x13b, V305]

================================

Block 0x3bb
[0x3bb:0x3d1]
---
Predecessors: [0x16e]
Successors: [0x3d2, 0x3d6]
---
0x3bb JUMPDEST
0x3bc PUSH1 0x0
0x3be SLOAD
0x3bf CALLER
0x3c0 PUSH1 0x1
0x3c2 PUSH1 0xa0
0x3c4 PUSH1 0x2
0x3c6 EXP
0x3c7 SUB
0x3c8 SWAP1
0x3c9 DUP2
0x3ca AND
0x3cb SWAP2
0x3cc AND
0x3cd EQ
0x3ce PUSH2 0x3d6
0x3d1 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V306 = 0x0
0x3be: V307 = S[0x0]
0x3bf: V308 = CALLER
0x3c0: V309 = 0x1
0x3c2: V310 = 0xa0
0x3c4: V311 = 0x2
0x3c6: V312 = EXP 0x2 0xa0
0x3c7: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ca: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x3cc: V315 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V316 = EQ V315 V314
0x3ce: V317 = 0x3d6
0x3d1: JUMPI 0x3d6 V316
---
Entry stack: [V13, 0x124]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124]

================================

Block 0x3d2
[0x3d2:0x3d5]
---
Predecessors: [0x3bb]
Successors: []
---
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 REVERT
---
0x3d2: V318 = 0x0
0x3d5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x124]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124]

================================

Block 0x3d6
[0x3d6:0x428]
---
Predecessors: [0x3bb]
Successors: [0x429, 0x42d]
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0xb
0x3d9 PUSH1 0x0
0x3db SWAP1
0x3dc SLOAD
0x3dd SWAP1
0x3de PUSH2 0x100
0x3e1 EXP
0x3e2 SWAP1
0x3e3 DIV
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xa0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb SUB
0x3ec AND
0x3ed PUSH1 0x1
0x3ef PUSH1 0xa0
0x3f1 PUSH1 0x2
0x3f3 EXP
0x3f4 SUB
0x3f5 AND
0x3f6 PUSH4 0x99f4b251
0x3fb PUSH3 0xf4240
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP3
0x403 PUSH4 0xffffffff
0x408 AND
0x409 PUSH1 0xe0
0x40b PUSH1 0x2
0x40d EXP
0x40e MUL
0x40f DUP2
0x410 MSTORE
0x411 PUSH1 0x4
0x413 ADD
0x414 PUSH1 0x0
0x416 PUSH1 0x40
0x418 MLOAD
0x419 DUP1
0x41a DUP4
0x41b SUB
0x41c DUP2
0x41d PUSH1 0x0
0x41f DUP9
0x420 DUP1
0x421 EXTCODESIZE
0x422 ISZERO
0x423 DUP1
0x424 ISZERO
0x425 PUSH2 0x42d
0x428 JUMPI
---
0x3d6: JUMPDEST 
0x3d7: V319 = 0xb
0x3d9: V320 = 0x0
0x3dc: V321 = S[0xb]
0x3de: V322 = 0x100
0x3e1: V323 = EXP 0x100 0x0
0x3e3: V324 = DIV V321 0x1
0x3e4: V325 = 0x1
0x3e6: V326 = 0xa0
0x3e8: V327 = 0x2
0x3ea: V328 = EXP 0x2 0xa0
0x3eb: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ec: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x3ed: V331 = 0x1
0x3ef: V332 = 0xa0
0x3f1: V333 = 0x2
0x3f3: V334 = EXP 0x2 0xa0
0x3f4: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x3f6: V337 = 0x99f4b251
0x3fb: V338 = 0xf4240
0x3ff: V339 = 0x40
0x401: V340 = M[0x40]
0x403: V341 = 0xffffffff
0x408: V342 = AND 0xffffffff 0x99f4b251
0x409: V343 = 0xe0
0x40b: V344 = 0x2
0x40d: V345 = EXP 0x2 0xe0
0x40e: V346 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x99f4b251
0x410: M[V340] = 0x99f4b25100000000000000000000000000000000000000000000000000000000
0x411: V347 = 0x4
0x413: V348 = ADD 0x4 V340
0x414: V349 = 0x0
0x416: V350 = 0x40
0x418: V351 = M[0x40]
0x41b: V352 = SUB V348 V351
0x41d: V353 = 0x0
0x421: V354 = EXTCODESIZE V336
0x422: V355 = ISZERO V354
0x424: V356 = ISZERO V355
0x425: V357 = 0x42d
0x428: JUMPI 0x42d V356
---
Entry stack: [V13, 0x124]
Stack pops: 0
Stack additions: [V336, 0x99f4b251, 0xf4240, V348, 0x0, V351, V352, V351, 0x0, V336, V355]
Exit stack: [V13, 0x124, V336, 0x99f4b251, 0xf4240, V348, 0x0, V351, V352, V351, 0x0, V336, V355]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x3d6]
Successors: []
---
0x429 PUSH1 0x0
0x42b DUP1
0x42c REVERT
---
0x429: V358 = 0x0
0x42c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x124, V336, 0x99f4b251, 0xf4240, V348, 0x0, V351, V352, V351, 0x0, V336, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, V336, 0x99f4b251, 0xf4240, V348, 0x0, V351, V352, V351, 0x0, V336, V355]

================================

Block 0x42d
[0x42d:0x437]
---
Predecessors: [0x3d6]
Successors: [0x438, 0x441]
---
0x42d JUMPDEST
0x42e POP
0x42f DUP8
0x430 CALL
0x431 ISZERO
0x432 DUP1
0x433 ISZERO
0x434 PUSH2 0x441
0x437 JUMPI
---
0x42d: JUMPDEST 
0x430: V359 = CALL 0xf4240 V336 0x0 V351 V352 V351 0x0
0x431: V360 = ISZERO V359
0x433: V361 = ISZERO V360
0x434: V362 = 0x441
0x437: JUMPI 0x441 V361
---
Entry stack: [V13, 0x124, V336, 0x99f4b251, 0xf4240, V348, 0x0, V351, V352, V351, 0x0, V336, V355]
Stack pops: 9
Stack additions: [S8, S7, V360]
Exit stack: [V13, 0x124, V336, 0x99f4b251, 0xf4240, V348, V360]

================================

Block 0x438
[0x438:0x440]
---
Predecessors: [0x42d]
Successors: []
---
0x438 RETURNDATASIZE
0x439 PUSH1 0x0
0x43b DUP1
0x43c RETURNDATACOPY
0x43d RETURNDATASIZE
0x43e PUSH1 0x0
0x440 REVERT
---
0x438: V363 = RETURNDATASIZE
0x439: V364 = 0x0
0x43c: RETURNDATACOPY 0x0 0x0 V363
0x43d: V365 = RETURNDATASIZE
0x43e: V366 = 0x0
0x440: REVERT 0x0 V365
---
Entry stack: [V13, 0x124, V336, 0x99f4b251, 0xf4240, V348, V360]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, V336, 0x99f4b251, 0xf4240, V348, V360]

================================

Block 0x441
[0x441:0x447]
---
Predecessors: [0x42d]
Successors: [0x124]
---
0x441 JUMPDEST
0x442 POP
0x443 POP
0x444 POP
0x445 POP
0x446 POP
0x447 JUMP
---
0x441: JUMPDEST 
0x447: JUMP 0x124
---
Entry stack: [V13, 0x124, V336, 0x99f4b251, 0xf4240, V348, V360]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x448
[0x448:0x4ae]
---
Predecessors: [0x183, 0x9e5]
Successors: [0x4af, 0x4b3]
---
0x448 JUMPDEST
0x449 PUSH1 0xa
0x44b SLOAD
0x44c PUSH1 0x40
0x44e DUP1
0x44f MLOAD
0x450 PUSH32 0x68306e4300000000000000000000000000000000000000000000000000000000
0x471 DUP2
0x472 MSTORE
0x473 PUSH1 0x1
0x475 PUSH1 0xa0
0x477 PUSH1 0x2
0x479 EXP
0x47a SUB
0x47b ADDRESS
0x47c DUP2
0x47d AND
0x47e PUSH1 0x4
0x480 DUP4
0x481 ADD
0x482 MSTORE
0x483 SWAP2
0x484 MLOAD
0x485 PUSH1 0x0
0x487 SWAP4
0x488 SWAP3
0x489 SWAP1
0x48a SWAP3
0x48b AND
0x48c SWAP2
0x48d PUSH4 0x68306e43
0x492 SWAP2
0x493 PUSH1 0x24
0x495 DUP1
0x496 DUP3
0x497 ADD
0x498 SWAP3
0x499 PUSH1 0x20
0x49b SWAP3
0x49c SWAP1
0x49d SWAP2
0x49e SWAP1
0x49f DUP3
0x4a0 SWAP1
0x4a1 SUB
0x4a2 ADD
0x4a3 DUP2
0x4a4 DUP8
0x4a5 DUP8
0x4a6 DUP1
0x4a7 EXTCODESIZE
0x4a8 ISZERO
0x4a9 DUP1
0x4aa ISZERO
0x4ab PUSH2 0x4b3
0x4ae JUMPI
---
0x448: JUMPDEST 
0x449: V367 = 0xa
0x44b: V368 = S[0xa]
0x44c: V369 = 0x40
0x44f: V370 = M[0x40]
0x450: V371 = 0x68306e4300000000000000000000000000000000000000000000000000000000
0x472: M[V370] = 0x68306e4300000000000000000000000000000000000000000000000000000000
0x473: V372 = 0x1
0x475: V373 = 0xa0
0x477: V374 = 0x2
0x479: V375 = EXP 0x2 0xa0
0x47a: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47b: V377 = ADDRESS
0x47d: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x47e: V379 = 0x4
0x481: V380 = ADD V370 0x4
0x482: M[V380] = V378
0x484: V381 = M[0x40]
0x485: V382 = 0x0
0x48b: V383 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x48d: V384 = 0x68306e43
0x493: V385 = 0x24
0x497: V386 = ADD V370 0x24
0x499: V387 = 0x20
0x4a1: V388 = SUB V370 V381
0x4a2: V389 = ADD V388 0x24
0x4a7: V390 = EXTCODESIZE V383
0x4a8: V391 = ISZERO V390
0x4aa: V392 = ISZERO V391
0x4ab: V393 = 0x4b3
0x4ae: JUMPI 0x4b3 V392
---
Entry stack: [V13, 0x124, V862, S1, {0x13b, 0xaf1}]
Stack pops: 0
Stack additions: [0x0, V383, 0x68306e43, V386, 0x20, V381, V389, V381, 0x0, V383, V391]
Exit stack: [V13, 0x124, V862, S1, {0x13b, 0xaf1}, 0x0, V383, 0x68306e43, V386, 0x20, V381, V389, V381, 0x0, V383, V391]

================================

Block 0x4af
[0x4af:0x4b2]
---
Predecessors: [0x448]
Successors: []
---
0x4af PUSH1 0x0
0x4b1 DUP1
0x4b2 REVERT
---
0x4af: V394 = 0x0
0x4b2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x124, V862, S12, {0x13b, 0xaf1}, 0x0, V383, 0x68306e43, V386, 0x20, V381, V389, V381, 0x0, V383, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, V862, S12, {0x13b, 0xaf1}, 0x0, V383, 0x68306e43, V386, 0x20, V381, V389, V381, 0x0, V383, V391]

================================

Block 0x4b3
[0x4b3:0x4bd]
---
Predecessors: [0x448, 0x915]
Successors: [0x4be, 0x4c7]
---
0x4b3 JUMPDEST
0x4b4 POP
0x4b5 GAS
0x4b6 CALL
0x4b7 ISZERO
0x4b8 DUP1
0x4b9 ISZERO
0x4ba PUSH2 0x4c7
0x4bd JUMPI
---
0x4b3: JUMPDEST 
0x4b5: V395 = GAS
0x4b6: V396 = CALL V395 S1 0x0 S3 S4 S5 0x20
0x4b7: V397 = ISZERO V396
0x4b9: V398 = ISZERO V397
0x4ba: V399 = 0x4c7
0x4bd: JUMPI 0x4c7 V398
---
Entry stack: [V13, 0x124, V862, S12, {0x13b, 0xaf1}, 0x0, S9, {0x68306e43, 0x722713f7}, S7, 0x20, S5, S4, S3, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V397]
Exit stack: [V13, 0x124, V862, S12, {0x13b, 0xaf1}, 0x0, S9, {0x68306e43, 0x722713f7}, S7, V397]

================================

Block 0x4be
[0x4be:0x4c6]
---
Predecessors: [0x4b3]
Successors: []
---
0x4be RETURNDATASIZE
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 RETURNDATACOPY
0x4c3 RETURNDATASIZE
0x4c4 PUSH1 0x0
0x4c6 REVERT
---
0x4be: V400 = RETURNDATASIZE
0x4bf: V401 = 0x0
0x4c2: RETURNDATACOPY 0x0 0x0 V400
0x4c3: V402 = RETURNDATASIZE
0x4c4: V403 = 0x0
0x4c6: REVERT 0x0 V402
---
Entry stack: [V13, 0x124, V862, S6, {0x13b, 0xaf1}, 0x0, S3, {0x68306e43, 0x722713f7}, S1, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, V862, S6, {0x13b, 0xaf1}, 0x0, S3, {0x68306e43, 0x722713f7}, S1, V397]

================================

Block 0x4c7
[0x4c7:0x4d8]
---
Predecessors: [0x4b3]
Successors: [0x4d9, 0x4dd]
---
0x4c7 JUMPDEST
0x4c8 POP
0x4c9 POP
0x4ca POP
0x4cb POP
0x4cc PUSH1 0x40
0x4ce MLOAD
0x4cf RETURNDATASIZE
0x4d0 PUSH1 0x20
0x4d2 DUP2
0x4d3 LT
0x4d4 ISZERO
0x4d5 PUSH2 0x4dd
0x4d8 JUMPI
---
0x4c7: JUMPDEST 
0x4cc: V404 = 0x40
0x4ce: V405 = M[0x40]
0x4cf: V406 = RETURNDATASIZE
0x4d0: V407 = 0x20
0x4d3: V408 = LT V406 0x20
0x4d4: V409 = ISZERO V408
0x4d5: V410 = 0x4dd
0x4d8: JUMPI 0x4dd V409
---
Entry stack: [V13, 0x124, V862, S6, {0x13b, 0xaf1}, 0x0, S3, {0x68306e43, 0x722713f7}, S1, V397]
Stack pops: 4
Stack additions: [V405, V406]
Exit stack: [V13, 0x124, V862, S6, {0x13b, 0xaf1}, 0x0, V405, V406]

================================

Block 0x4d9
[0x4d9:0x4dc]
---
Predecessors: [0x4c7]
Successors: []
---
0x4d9 PUSH1 0x0
0x4db DUP1
0x4dc REVERT
---
0x4d9: V411 = 0x0
0x4dc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x124, V862, S4, {0x13b, 0xaf1}, 0x0, V405, V406]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, V862, S4, {0x13b, 0xaf1}, 0x0, V405, V406]

================================

Block 0x4dd
[0x4dd:0x4e3]
---
Predecessors: [0x4c7]
Successors: [0x13b, 0xaf1]
---
0x4dd JUMPDEST
0x4de POP
0x4df MLOAD
0x4e0 SWAP1
0x4e1 POP
0x4e2 SWAP1
0x4e3 JUMP
---
0x4dd: JUMPDEST 
0x4df: V412 = M[V405]
0x4e3: JUMP {0x13b, 0xaf1}
---
Entry stack: [V13, 0x124, V862, S4, {0x13b, 0xaf1}, 0x0, V405, V406]
Stack pops: 4
Stack additions: [V412]
Exit stack: [V13, 0x124, V862, S4, V412]

================================

Block 0x4e4
[0x4e4:0x4f0]
---
Predecessors: [0x198]
Successors: [0x4f1, 0x4f2]
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x8
0x4e7 DUP1
0x4e8 SLOAD
0x4e9 DUP3
0x4ea SWAP1
0x4eb DUP2
0x4ec LT
0x4ed PUSH2 0x4f2
0x4f0 JUMPI
---
0x4e4: JUMPDEST 
0x4e5: V413 = 0x8
0x4e8: V414 = S[0x8]
0x4ec: V415 = LT V122 V414
0x4ed: V416 = 0x4f2
0x4f0: JUMPI 0x4f2 V415
---
Entry stack: [V13, 0x1a4, V122]
Stack pops: 1
Stack additions: [S0, 0x8, S0]
Exit stack: [V13, 0x1a4, V122, 0x8, V122]

================================

Block 0x4f1
[0x4f1:0x4f1]
---
Predecessors: [0x4e4]
Successors: []
---
0x4f1 INVALID
---
0x4f1: INVALID 
---
Entry stack: [V13, 0x1a4, V122, 0x8, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a4, V122, 0x8, V122]

================================

Block 0x4f2
[0x4f2:0x519]
---
Predecessors: [0x4e4]
Successors: [0x1a4]
---
0x4f2 JUMPDEST
0x4f3 PUSH1 0x0
0x4f5 SWAP2
0x4f6 DUP3
0x4f7 MSTORE
0x4f8 PUSH1 0x20
0x4fa SWAP1
0x4fb SWAP2
0x4fc SHA3
0x4fd PUSH1 0x2
0x4ff SWAP1
0x500 SWAP2
0x501 MUL
0x502 ADD
0x503 DUP1
0x504 SLOAD
0x505 PUSH1 0x1
0x507 SWAP1
0x508 SWAP2
0x509 ADD
0x50a SLOAD
0x50b PUSH1 0x1
0x50d PUSH1 0xa0
0x50f PUSH1 0x2
0x511 EXP
0x512 SUB
0x513 SWAP1
0x514 SWAP2
0x515 AND
0x516 SWAP2
0x517 POP
0x518 DUP3
0x519 JUMP
---
0x4f2: JUMPDEST 
0x4f3: V417 = 0x0
0x4f7: M[0x0] = 0x8
0x4f8: V418 = 0x20
0x4fc: V419 = SHA3 0x0 0x20
0x4fd: V420 = 0x2
0x501: V421 = MUL V122 0x2
0x502: V422 = ADD V421 V419
0x504: V423 = S[V422]
0x505: V424 = 0x1
0x509: V425 = ADD V422 0x1
0x50a: V426 = S[V425]
0x50b: V427 = 0x1
0x50d: V428 = 0xa0
0x50f: V429 = 0x2
0x511: V430 = EXP 0x2 0xa0
0x512: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x515: V432 = AND V423 0xffffffffffffffffffffffffffffffffffffffff
0x519: JUMP 0x1a4
---
Entry stack: [V13, 0x1a4, V122, 0x8, V122]
Stack pops: 4
Stack additions: [S3, V432, V426]
Exit stack: [V13, 0x1a4, V432, V426]

================================

Block 0x51a
[0x51a:0x51f]
---
Predecessors: [0x1d3]
Successors: [0x13b]
---
0x51a JUMPDEST
0x51b PUSH1 0x7
0x51d SLOAD
0x51e DUP2
0x51f JUMP
---
0x51a: JUMPDEST 
0x51b: V433 = 0x7
0x51d: V434 = S[0x7]
0x51f: JUMP 0x13b
---
Entry stack: [V13, 0x13b]
Stack pops: 1
Stack additions: [S0, V434]
Exit stack: [V13, 0x13b, V434]

================================

Block 0x520
[0x520:0x584]
---
Predecessors: [0x1e8, 0xaf8]
Successors: [0x585, 0x589]
---
0x520 JUMPDEST
0x521 PUSH1 0xa
0x523 SLOAD
0x524 PUSH1 0x40
0x526 DUP1
0x527 MLOAD
0x528 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x549 DUP2
0x54a MSTORE
0x54b SWAP1
0x54c MLOAD
0x54d PUSH1 0x1
0x54f PUSH1 0xa0
0x551 PUSH1 0x2
0x553 EXP
0x554 SUB
0x555 ADDRESS
0x556 DUP2
0x557 AND
0x558 BALANCE
0x559 SWAP4
0x55a PUSH1 0x0
0x55c SWAP4
0x55d SWAP2
0x55e AND
0x55f SWAP2
0x560 PUSH4 0x3ccfd60b
0x565 SWAP2
0x566 PUSH3 0xf4240
0x56a SWAP2
0x56b PUSH1 0x4
0x56d DUP1
0x56e DUP4
0x56f ADD
0x570 SWAP3
0x571 DUP8
0x572 SWAP3
0x573 SWAP2
0x574 SWAP1
0x575 DUP3
0x576 SWAP1
0x577 SUB
0x578 ADD
0x579 DUP2
0x57a DUP4
0x57b DUP9
0x57c DUP1
0x57d EXTCODESIZE
0x57e ISZERO
0x57f DUP1
0x580 ISZERO
0x581 PUSH2 0x589
0x584 JUMPI
---
0x520: JUMPDEST 
0x521: V435 = 0xa
0x523: V436 = S[0xa]
0x524: V437 = 0x40
0x527: V438 = M[0x40]
0x528: V439 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x54a: M[V438] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x54c: V440 = M[0x40]
0x54d: V441 = 0x1
0x54f: V442 = 0xa0
0x551: V443 = 0x2
0x553: V444 = EXP 0x2 0xa0
0x554: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x555: V446 = ADDRESS
0x557: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x558: V448 = BALANCE V447
0x55a: V449 = 0x0
0x55e: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x560: V451 = 0x3ccfd60b
0x566: V452 = 0xf4240
0x56b: V453 = 0x4
0x56f: V454 = ADD V438 0x4
0x577: V455 = SUB V438 V440
0x578: V456 = ADD V455 0x4
0x57d: V457 = EXTCODESIZE V450
0x57e: V458 = ISZERO V457
0x580: V459 = ISZERO V458
0x581: V460 = 0x589
0x584: JUMPI 0x589 V459
---
Entry stack: [V13, 0x124, S1, {0x124, 0xaff}]
Stack pops: 0
Stack additions: [V448, 0x0, V450, 0x3ccfd60b, 0xf4240, V454, 0x0, V440, V456, V440, 0x0, V450, V458]
Exit stack: [V13, 0x124, S1, {0x124, 0xaff}, V448, 0x0, V450, 0x3ccfd60b, 0xf4240, V454, 0x0, V440, V456, V440, 0x0, V450, V458]

================================

Block 0x585
[0x585:0x588]
---
Predecessors: [0x520]
Successors: []
---
0x585 PUSH1 0x0
0x587 DUP1
0x588 REVERT
---
0x585: V461 = 0x0
0x588: REVERT 0x0 0x0
---
Entry stack: [V13, 0x124, S14, {0x124, 0xaff}, V448, 0x0, V450, 0x3ccfd60b, 0xf4240, V454, 0x0, V440, V456, V440, 0x0, V450, V458]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S14, {0x124, 0xaff}, V448, 0x0, V450, 0x3ccfd60b, 0xf4240, V454, 0x0, V440, V456, V440, 0x0, V450, V458]

================================

Block 0x589
[0x589:0x593]
---
Predecessors: [0x520]
Successors: [0x594, 0x59d]
---
0x589 JUMPDEST
0x58a POP
0x58b DUP8
0x58c CALL
0x58d ISZERO
0x58e DUP1
0x58f ISZERO
0x590 PUSH2 0x59d
0x593 JUMPI
---
0x589: JUMPDEST 
0x58c: V462 = CALL 0xf4240 V450 0x0 V440 V456 V440 0x0
0x58d: V463 = ISZERO V462
0x58f: V464 = ISZERO V463
0x590: V465 = 0x59d
0x593: JUMPI 0x59d V464
---
Entry stack: [V13, 0x124, S14, {0x124, 0xaff}, V448, 0x0, V450, 0x3ccfd60b, 0xf4240, V454, 0x0, V440, V456, V440, 0x0, V450, V458]
Stack pops: 9
Stack additions: [S8, S7, V463]
Exit stack: [V13, 0x124, S14, {0x124, 0xaff}, V448, 0x0, V450, 0x3ccfd60b, 0xf4240, V454, V463]

================================

Block 0x594
[0x594:0x59c]
---
Predecessors: [0x589]
Successors: []
---
0x594 RETURNDATASIZE
0x595 PUSH1 0x0
0x597 DUP1
0x598 RETURNDATACOPY
0x599 RETURNDATASIZE
0x59a PUSH1 0x0
0x59c REVERT
---
0x594: V466 = RETURNDATASIZE
0x595: V467 = 0x0
0x598: RETURNDATACOPY 0x0 0x0 V466
0x599: V468 = RETURNDATASIZE
0x59a: V469 = 0x0
0x59c: REVERT 0x0 V468
---
Entry stack: [V13, 0x124, S8, {0x124, 0xaff}, S6, 0x0, S4, 0x3ccfd60b, 0xf4240, S1, V463]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S8, {0x124, 0xaff}, S6, 0x0, S4, 0x3ccfd60b, 0xf4240, S1, V463]

================================

Block 0x59d
[0x59d:0x5f4]
---
Predecessors: [0x589]
Successors: [0x124, 0xaff]
---
0x59d JUMPDEST
0x59e POP
0x59f POP
0x5a0 PUSH1 0x4
0x5a2 DUP1
0x5a3 SLOAD
0x5a4 PUSH1 0x1
0x5a6 PUSH1 0xa0
0x5a8 PUSH1 0x2
0x5aa EXP
0x5ab SUB
0x5ac ADDRESS
0x5ad AND
0x5ae BALANCE
0x5af DUP8
0x5b0 SWAP1
0x5b1 SUB
0x5b2 SWAP1
0x5b3 DUP2
0x5b4 ADD
0x5b5 SWAP1
0x5b6 SWAP2
0x5b7 SSTORE
0x5b8 PUSH1 0x40
0x5ba DUP1
0x5bb MLOAD
0x5bc DUP3
0x5bd DUP2
0x5be MSTORE
0x5bf SWAP1
0x5c0 MLOAD
0x5c1 SWAP2
0x5c2 SWAP6
0x5c3 POP
0x5c4 PUSH32 0xd7cefab74b4b11d01e168f9d1e2a28e7bf8263c3acf9b9fdb802fa666a49455b
0x5e5 SWAP5
0x5e6 POP
0x5e7 DUP2
0x5e8 SWAP1
0x5e9 SUB
0x5ea PUSH1 0x20
0x5ec ADD
0x5ed SWAP3
0x5ee POP
0x5ef SWAP1
0x5f0 POP
0x5f1 LOG1
0x5f2 POP
0x5f3 POP
0x5f4 JUMP
---
0x59d: JUMPDEST 
0x5a0: V470 = 0x4
0x5a3: V471 = S[0x4]
0x5a4: V472 = 0x1
0x5a6: V473 = 0xa0
0x5a8: V474 = 0x2
0x5aa: V475 = EXP 0x2 0xa0
0x5ab: V476 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ac: V477 = ADDRESS
0x5ad: V478 = AND V477 0xffffffffffffffffffffffffffffffffffffffff
0x5ae: V479 = BALANCE V478
0x5b1: V480 = SUB V479 S6
0x5b4: V481 = ADD V480 V471
0x5b7: S[0x4] = V481
0x5b8: V482 = 0x40
0x5bb: V483 = M[0x40]
0x5be: M[V483] = V480
0x5c0: V484 = M[0x40]
0x5c4: V485 = 0xd7cefab74b4b11d01e168f9d1e2a28e7bf8263c3acf9b9fdb802fa666a49455b
0x5e9: V486 = SUB V483 V484
0x5ea: V487 = 0x20
0x5ec: V488 = ADD 0x20 V486
0x5f1: LOG V484 V488 0xd7cefab74b4b11d01e168f9d1e2a28e7bf8263c3acf9b9fdb802fa666a49455b
0x5f4: JUMP {0x124, 0xaff}
---
Entry stack: [V13, 0x124, S8, {0x124, 0xaff}, S6, 0x0, S4, 0x3ccfd60b, 0xf4240, S1, V463]
Stack pops: 8
Stack additions: []
Exit stack: [V13, 0x124, S8]

================================

Block 0x5f5
[0x5f5:0x5fa]
---
Predecessors: [0x1fd]
Successors: [0x13b]
---
0x5f5 JUMPDEST
0x5f6 PUSH1 0x7
0x5f8 SLOAD
0x5f9 SWAP1
0x5fa JUMP
---
0x5f5: JUMPDEST 
0x5f6: V489 = 0x7
0x5f8: V490 = S[0x7]
0x5fa: JUMP 0x13b
---
Entry stack: [V13, 0x13b]
Stack pops: 1
Stack additions: [V490]
Exit stack: [V13, V490]

================================

Block 0x5fb
[0x5fb:0x609]
---
Predecessors: [0x212]
Successors: [0x21b]
---
0x5fb JUMPDEST
0x5fc PUSH1 0x1
0x5fe SLOAD
0x5ff PUSH1 0x1
0x601 PUSH1 0xa0
0x603 PUSH1 0x2
0x605 EXP
0x606 SUB
0x607 AND
0x608 DUP2
0x609 JUMP
---
0x5fb: JUMPDEST 
0x5fc: V491 = 0x1
0x5fe: V492 = S[0x1]
0x5ff: V493 = 0x1
0x601: V494 = 0xa0
0x603: V495 = 0x2
0x605: V496 = EXP 0x2 0xa0
0x606: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x607: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x609: JUMP 0x21b
---
Entry stack: [V13, 0x21b]
Stack pops: 1
Stack additions: [S0, V498]
Exit stack: [V13, 0x21b, V498]

================================

Block 0x60a
[0x60a:0x620]
---
Predecessors: [0x243, 0xaff]
Successors: [0x621, 0x625]
---
0x60a JUMPDEST
0x60b PUSH1 0x1
0x60d PUSH1 0xa0
0x60f PUSH1 0x2
0x611 EXP
0x612 SUB
0x613 ADDRESS
0x614 AND
0x615 BALANCE
0x616 PUSH1 0x0
0x618 DUP1
0x619 PUSH1 0x1
0x61b DUP4
0x61c GT
0x61d PUSH2 0x625
0x620 JUMPI
---
0x60a: JUMPDEST 
0x60b: V499 = 0x1
0x60d: V500 = 0xa0
0x60f: V501 = 0x2
0x611: V502 = EXP 0x2 0xa0
0x612: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x613: V504 = ADDRESS
0x614: V505 = AND V504 0xffffffffffffffffffffffffffffffffffffffff
0x615: V506 = BALANCE V505
0x616: V507 = 0x0
0x619: V508 = 0x1
0x61c: V509 = GT V506 0x1
0x61d: V510 = 0x625
0x620: JUMPI 0x625 V509
---
Entry stack: [V13, 0x124, S1, {0x124, 0xb07}]
Stack pops: 0
Stack additions: [V506, 0x0, 0x0]
Exit stack: [V13, 0x124, S1, {0x124, 0xb07}, V506, 0x0, 0x0]

================================

Block 0x621
[0x621:0x624]
---
Predecessors: [0x60a]
Successors: []
---
0x621 PUSH1 0x0
0x623 DUP1
0x624 REVERT
---
0x621: V511 = 0x0
0x624: REVERT 0x0 0x0
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, V506, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, V506, 0x0, 0x0]

================================

Block 0x625
[0x625:0x65f]
---
Predecessors: [0x60a]
Successors: [0x660]
---
0x625 JUMPDEST
0x626 PUSH1 0x3
0x628 DUP1
0x629 SLOAD
0x62a DUP5
0x62b ADD
0x62c SWAP1
0x62d SSTORE
0x62e PUSH1 0xa
0x630 SLOAD
0x631 PUSH1 0x40
0x633 MLOAD
0x634 PUSH1 0x2
0x636 DUP6
0x637 DIV
0x638 SWAP5
0x639 DUP6
0x63a SWAP1
0x63b SUB
0x63c SWAP5
0x63d SWAP4
0x63e POP
0x63f PUSH1 0x1
0x641 PUSH1 0xa0
0x643 PUSH1 0x2
0x645 EXP
0x646 SUB
0x647 SWAP1
0x648 SWAP2
0x649 AND
0x64a SWAP1
0x64b PUSH3 0xf4240
0x64f SWAP1
0x650 DUP5
0x651 SWAP1
0x652 PUSH1 0x0
0x654 DUP2
0x655 DUP2
0x656 DUP2
0x657 DUP6
0x658 DUP9
0x659 DUP9
0x65a CALL
0x65b POP
0x65c POP
0x65d POP
0x65e POP
0x65f POP
---
0x625: JUMPDEST 
0x626: V512 = 0x3
0x629: V513 = S[0x3]
0x62b: V514 = ADD V506 V513
0x62d: S[0x3] = V514
0x62e: V515 = 0xa
0x630: V516 = S[0xa]
0x631: V517 = 0x40
0x633: V518 = M[0x40]
0x634: V519 = 0x2
0x637: V520 = DIV V506 0x2
0x63b: V521 = SUB V506 V520
0x63f: V522 = 0x1
0x641: V523 = 0xa0
0x643: V524 = 0x2
0x645: V525 = EXP 0x2 0xa0
0x646: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x649: V527 = AND V516 0xffffffffffffffffffffffffffffffffffffffff
0x64b: V528 = 0xf4240
0x652: V529 = 0x0
0x65a: V530 = CALL 0xf4240 V527 V520 V518 0x0 V518 0x0
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, V506, 0x0, 0x0]
Stack pops: 3
Stack additions: [V521, V520, S0]
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, V521, V520, 0x0]

================================

Block 0x660
[0x660:0x669]
---
Predecessors: [0x625, 0x8aa]
Successors: [0x66a, 0x8af]
---
0x660 JUMPDEST
0x661 PUSH1 0x0
0x663 DUP4
0x664 GT
0x665 ISZERO
0x666 PUSH2 0x8af
0x669 JUMPI
---
0x660: JUMPDEST 
0x661: V531 = 0x0
0x664: V532 = GT S2 0x0
0x665: V533 = ISZERO V532
0x666: V534 = 0x8af
0x669: JUMPI 0x8af V533
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]

================================

Block 0x66a
[0x66a:0x678]
---
Predecessors: [0x660]
Successors: [0x679, 0x67a]
---
0x66a PUSH1 0x8
0x66c PUSH1 0x6
0x66e SLOAD
0x66f DUP2
0x670 SLOAD
0x671 DUP2
0x672 LT
0x673 ISZERO
0x674 ISZERO
0x675 PUSH2 0x67a
0x678 JUMPI
---
0x66a: V535 = 0x8
0x66c: V536 = 0x6
0x66e: V537 = S[0x6]
0x670: V538 = S[0x8]
0x672: V539 = LT V537 V538
0x673: V540 = ISZERO V539
0x674: V541 = ISZERO V540
0x675: V542 = 0x67a
0x678: JUMPI 0x67a V541
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 0
Stack additions: [0x8, V537]
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0, 0x8, V537]

================================

Block 0x679
[0x679:0x679]
---
Predecessors: [0x66a]
Successors: []
---
0x679 INVALID
---
0x679: INVALID 
---
Entry stack: [V13, 0x124, S6, {0x124, 0xb07}, S4, S3, S2, 0x8, V537]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S6, {0x124, 0xb07}, S4, S3, S2, 0x8, V537]

================================

Block 0x67a
[0x67a:0x692]
---
Predecessors: [0x66a]
Successors: [0x693, 0x6ba]
---
0x67a JUMPDEST
0x67b SWAP1
0x67c PUSH1 0x0
0x67e MSTORE
0x67f PUSH1 0x20
0x681 PUSH1 0x0
0x683 SHA3
0x684 SWAP1
0x685 PUSH1 0x2
0x687 MUL
0x688 ADD
0x689 PUSH1 0x1
0x68b ADD
0x68c SLOAD
0x68d DUP4
0x68e LT
0x68f PUSH2 0x6ba
0x692 JUMPI
---
0x67a: JUMPDEST 
0x67c: V543 = 0x0
0x67e: M[0x0] = 0x8
0x67f: V544 = 0x20
0x681: V545 = 0x0
0x683: V546 = SHA3 0x0 0x20
0x685: V547 = 0x2
0x687: V548 = MUL 0x2 V537
0x688: V549 = ADD V548 V546
0x689: V550 = 0x1
0x68b: V551 = ADD 0x1 V549
0x68c: V552 = S[V551]
0x68e: V553 = LT S4 V552
0x68f: V554 = 0x6ba
0x692: JUMPI 0x6ba V553
---
Entry stack: [V13, 0x124, S6, {0x124, 0xb07}, S4, S3, S2, 0x8, V537]
Stack pops: 5
Stack additions: [S4, S3, S2]
Exit stack: [V13, 0x124, S6, {0x124, 0xb07}, S4, S3, S2]

================================

Block 0x693
[0x693:0x6a1]
---
Predecessors: [0x67a]
Successors: [0x6a2, 0x6a3]
---
0x693 PUSH1 0x8
0x695 PUSH1 0x6
0x697 SLOAD
0x698 DUP2
0x699 SLOAD
0x69a DUP2
0x69b LT
0x69c ISZERO
0x69d ISZERO
0x69e PUSH2 0x6a3
0x6a1 JUMPI
---
0x693: V555 = 0x8
0x695: V556 = 0x6
0x697: V557 = S[0x6]
0x699: V558 = S[0x8]
0x69b: V559 = LT V557 V558
0x69c: V560 = ISZERO V559
0x69d: V561 = ISZERO V560
0x69e: V562 = 0x6a3
0x6a1: JUMPI 0x6a3 V561
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 0
Stack additions: [0x8, V557]
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0, 0x8, V557]

================================

Block 0x6a2
[0x6a2:0x6a2]
---
Predecessors: [0x693]
Successors: []
---
0x6a2 INVALID
---
0x6a2: INVALID 
---
Entry stack: [V13, 0x124, S6, {0x124, 0xb07}, S4, S3, S2, 0x8, V557]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S6, {0x124, 0xb07}, S4, S3, S2, 0x8, V557]

================================

Block 0x6a3
[0x6a3:0x6b9]
---
Predecessors: [0x693]
Successors: [0x6bc]
---
0x6a3 JUMPDEST
0x6a4 SWAP1
0x6a5 PUSH1 0x0
0x6a7 MSTORE
0x6a8 PUSH1 0x20
0x6aa PUSH1 0x0
0x6ac SHA3
0x6ad SWAP1
0x6ae PUSH1 0x2
0x6b0 MUL
0x6b1 ADD
0x6b2 PUSH1 0x1
0x6b4 ADD
0x6b5 SLOAD
0x6b6 PUSH2 0x6bc
0x6b9 JUMP
---
0x6a3: JUMPDEST 
0x6a5: V563 = 0x0
0x6a7: M[0x0] = 0x8
0x6a8: V564 = 0x20
0x6aa: V565 = 0x0
0x6ac: V566 = SHA3 0x0 0x20
0x6ae: V567 = 0x2
0x6b0: V568 = MUL 0x2 V557
0x6b1: V569 = ADD V568 V566
0x6b2: V570 = 0x1
0x6b4: V571 = ADD 0x1 V569
0x6b5: V572 = S[V571]
0x6b6: V573 = 0x6bc
0x6b9: JUMP 0x6bc
---
Entry stack: [V13, 0x124, S6, {0x124, 0xb07}, S4, S3, S2, 0x8, V557]
Stack pops: 2
Stack additions: [V572]
Exit stack: [V13, 0x124, S6, {0x124, 0xb07}, S4, S3, S2, V572]

================================

Block 0x6ba
[0x6ba:0x6bb]
---
Predecessors: [0x67a]
Successors: [0x6bc]
---
0x6ba JUMPDEST
0x6bb DUP3
---
0x6ba: JUMPDEST 
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0, S2]

================================

Block 0x6bc
[0x6bc:0x6c7]
---
Predecessors: [0x6a3, 0x6ba]
Successors: [0x6c8, 0x887]
---
0x6bc JUMPDEST
0x6bd SWAP1
0x6be POP
0x6bf PUSH1 0x0
0x6c1 DUP2
0x6c2 GT
0x6c3 ISZERO
0x6c4 PUSH2 0x887
0x6c7 JUMPI
---
0x6bc: JUMPDEST 
0x6bf: V574 = 0x0
0x6c2: V575 = GT S0 0x0
0x6c3: V576 = ISZERO V575
0x6c4: V577 = 0x887
0x6c7: JUMPI 0x887 V576
---
Entry stack: [V13, 0x124, S5, {0x124, 0xb07}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, 0x124, S5, {0x124, 0xb07}, S3, S2, S0]

================================

Block 0x6c8
[0x6c8:0x6ed]
---
Predecessors: [0x6bc]
Successors: [0x6ee, 0x6ef]
---
0x6c8 PUSH1 0x7
0x6ca DUP1
0x6cb SLOAD
0x6cc DUP3
0x6cd SWAP1
0x6ce SUB
0x6cf SWAP1
0x6d0 SSTORE
0x6d1 PUSH1 0x6
0x6d3 SLOAD
0x6d4 PUSH1 0x8
0x6d6 DUP1
0x6d7 SLOAD
0x6d8 SWAP5
0x6d9 DUP4
0x6da SWAP1
0x6db SUB
0x6dc SWAP5
0x6dd DUP4
0x6de SWAP3
0x6df PUSH1 0x9
0x6e1 SWAP3
0x6e2 PUSH1 0x0
0x6e4 SWAP3
0x6e5 SWAP1
0x6e6 SWAP2
0x6e7 SWAP1
0x6e8 DUP2
0x6e9 LT
0x6ea PUSH2 0x6ef
0x6ed JUMPI
---
0x6c8: V578 = 0x7
0x6cb: V579 = S[0x7]
0x6ce: V580 = SUB V579 S0
0x6d0: S[0x7] = V580
0x6d1: V581 = 0x6
0x6d3: V582 = S[0x6]
0x6d4: V583 = 0x8
0x6d7: V584 = S[0x8]
0x6db: V585 = SUB S2 S0
0x6df: V586 = 0x9
0x6e2: V587 = 0x0
0x6e9: V588 = LT V582 V584
0x6ea: V589 = 0x6ef
0x6ed: JUMPI 0x6ef V588
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 3
Stack additions: [V585, S1, S0, S0, 0x9, 0x0, 0x8, V582]
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, V585, S1, S0, S0, 0x9, 0x0, 0x8, V582]

================================

Block 0x6ee
[0x6ee:0x6ee]
---
Predecessors: [0x6c8]
Successors: []
---
0x6ee INVALID
---
0x6ee: INVALID 
---
Entry stack: [V13, 0x124, S9, {0x124, 0xb07}, V585, S6, S5, S4, 0x9, 0x0, 0x8, V582]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S9, {0x124, 0xb07}, V585, S6, S5, S4, 0x9, 0x0, 0x8, V582]

================================

Block 0x6ef
[0x6ef:0x730]
---
Predecessors: [0x6c8]
Successors: [0x731, 0x732]
---
0x6ef JUMPDEST
0x6f0 PUSH1 0x0
0x6f2 SWAP2
0x6f3 DUP3
0x6f4 MSTORE
0x6f5 PUSH1 0x20
0x6f7 DUP1
0x6f8 DUP4
0x6f9 SHA3
0x6fa PUSH1 0x2
0x6fc SWAP1
0x6fd SWAP3
0x6fe MUL
0x6ff SWAP1
0x700 SWAP2
0x701 ADD
0x702 SLOAD
0x703 PUSH1 0x1
0x705 PUSH1 0xa0
0x707 PUSH1 0x2
0x709 EXP
0x70a SUB
0x70b AND
0x70c DUP4
0x70d MSTORE
0x70e DUP3
0x70f ADD
0x710 SWAP3
0x711 SWAP1
0x712 SWAP3
0x713 MSTORE
0x714 PUSH1 0x40
0x716 ADD
0x717 SWAP1
0x718 SHA3
0x719 DUP1
0x71a SLOAD
0x71b SWAP2
0x71c SWAP1
0x71d SWAP2
0x71e SUB
0x71f SWAP1
0x720 SSTORE
0x721 PUSH1 0x6
0x723 SLOAD
0x724 PUSH1 0x8
0x726 DUP1
0x727 SLOAD
0x728 DUP4
0x729 SWAP3
0x72a SWAP1
0x72b DUP2
0x72c LT
0x72d PUSH2 0x732
0x730 JUMPI
---
0x6ef: JUMPDEST 
0x6f0: V590 = 0x0
0x6f4: M[0x0] = 0x8
0x6f5: V591 = 0x20
0x6f9: V592 = SHA3 0x0 0x20
0x6fa: V593 = 0x2
0x6fe: V594 = MUL V582 0x2
0x701: V595 = ADD V592 V594
0x702: V596 = S[V595]
0x703: V597 = 0x1
0x705: V598 = 0xa0
0x707: V599 = 0x2
0x709: V600 = EXP 0x2 0xa0
0x70a: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70b: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x70d: M[0x0] = V602
0x70f: V603 = ADD 0x0 0x20
0x713: M[0x20] = 0x9
0x714: V604 = 0x40
0x716: V605 = ADD 0x40 0x0
0x718: V606 = SHA3 0x0 0x40
0x71a: V607 = S[V606]
0x71e: V608 = SUB V607 S4
0x720: S[V606] = V608
0x721: V609 = 0x6
0x723: V610 = S[0x6]
0x724: V611 = 0x8
0x727: V612 = S[0x8]
0x72c: V613 = LT V610 V612
0x72d: V614 = 0x732
0x730: JUMPI 0x732 V613
---
Entry stack: [V13, 0x124, S9, {0x124, 0xb07}, V585, S6, S5, S4, 0x9, 0x0, 0x8, V582]
Stack pops: 6
Stack additions: [S5, S5, 0x8, V610]
Exit stack: [V13, 0x124, S9, {0x124, 0xb07}, V585, S6, S5, S5, 0x8, V610]

================================

Block 0x731
[0x731:0x731]
---
Predecessors: [0x6ef]
Successors: []
---
0x731 INVALID
---
0x731: INVALID 
---
Entry stack: [V13, 0x124, S7, {0x124, 0xb07}, V585, S4, S3, S2, 0x8, V610]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S7, {0x124, 0xb07}, V585, S4, S3, S2, 0x8, V610]

================================

Block 0x732
[0x732:0x75f]
---
Predecessors: [0x6ef]
Successors: [0x760, 0x761]
---
0x732 JUMPDEST
0x733 SWAP1
0x734 PUSH1 0x0
0x736 MSTORE
0x737 PUSH1 0x20
0x739 PUSH1 0x0
0x73b SHA3
0x73c SWAP1
0x73d PUSH1 0x2
0x73f MUL
0x740 ADD
0x741 PUSH1 0x1
0x743 ADD
0x744 PUSH1 0x0
0x746 DUP3
0x747 DUP3
0x748 SLOAD
0x749 SUB
0x74a SWAP3
0x74b POP
0x74c POP
0x74d DUP2
0x74e SWAP1
0x74f SSTORE
0x750 POP
0x751 PUSH1 0x8
0x753 PUSH1 0x6
0x755 SLOAD
0x756 DUP2
0x757 SLOAD
0x758 DUP2
0x759 LT
0x75a ISZERO
0x75b ISZERO
0x75c PUSH2 0x761
0x75f JUMPI
---
0x732: JUMPDEST 
0x734: V615 = 0x0
0x736: M[0x0] = 0x8
0x737: V616 = 0x20
0x739: V617 = 0x0
0x73b: V618 = SHA3 0x0 0x20
0x73d: V619 = 0x2
0x73f: V620 = MUL 0x2 V610
0x740: V621 = ADD V620 V618
0x741: V622 = 0x1
0x743: V623 = ADD 0x1 V621
0x744: V624 = 0x0
0x748: V625 = S[V623]
0x749: V626 = SUB V625 S2
0x74f: S[V623] = V626
0x751: V627 = 0x8
0x753: V628 = 0x6
0x755: V629 = S[0x6]
0x757: V630 = S[0x8]
0x759: V631 = LT V629 V630
0x75a: V632 = ISZERO V631
0x75b: V633 = ISZERO V632
0x75c: V634 = 0x761
0x75f: JUMPI 0x761 V633
---
Entry stack: [V13, 0x124, S7, {0x124, 0xb07}, V585, S4, S3, S2, 0x8, V610]
Stack pops: 3
Stack additions: [0x8, V629]
Exit stack: [V13, 0x124, S7, {0x124, 0xb07}, V585, S4, S3, 0x8, V629]

================================

Block 0x760
[0x760:0x760]
---
Predecessors: [0x732]
Successors: []
---
0x760 INVALID
---
0x760: INVALID 
---
Entry stack: [V13, 0x124, S6, {0x124, 0xb07}, V585, S3, S2, 0x8, V629]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S6, {0x124, 0xb07}, V585, S3, S2, 0x8, V629]

================================

Block 0x761
[0x761:0x798]
---
Predecessors: [0x732]
Successors: [0x799, 0x804]
---
0x761 JUMPDEST
0x762 PUSH1 0x0
0x764 SWAP2
0x765 DUP3
0x766 MSTORE
0x767 PUSH1 0x20
0x769 DUP3
0x76a SHA3
0x76b PUSH1 0x2
0x76d SWAP1
0x76e SWAP2
0x76f MUL
0x770 ADD
0x771 SLOAD
0x772 PUSH1 0x40
0x774 MLOAD
0x775 PUSH1 0x1
0x777 PUSH1 0xa0
0x779 PUSH1 0x2
0x77b EXP
0x77c SUB
0x77d SWAP1
0x77e SWAP2
0x77f AND
0x780 SWAP2
0x781 PUSH3 0xf4240
0x785 SWAP2
0x786 DUP5
0x787 SWAP2
0x788 DUP2
0x789 DUP2
0x78a DUP2
0x78b DUP6
0x78c DUP9
0x78d DUP9
0x78e CALL
0x78f SWAP4
0x790 POP
0x791 POP
0x792 POP
0x793 POP
0x794 ISZERO
0x795 PUSH2 0x804
0x798 JUMPI
---
0x761: JUMPDEST 
0x762: V635 = 0x0
0x766: M[0x0] = 0x8
0x767: V636 = 0x20
0x76a: V637 = SHA3 0x0 0x20
0x76b: V638 = 0x2
0x76f: V639 = MUL V629 0x2
0x770: V640 = ADD V639 V637
0x771: V641 = S[V640]
0x772: V642 = 0x40
0x774: V643 = M[0x40]
0x775: V644 = 0x1
0x777: V645 = 0xa0
0x779: V646 = 0x2
0x77b: V647 = EXP 0x2 0xa0
0x77c: V648 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77f: V649 = AND V641 0xffffffffffffffffffffffffffffffffffffffff
0x781: V650 = 0xf4240
0x78e: V651 = CALL 0xf4240 V649 S2 V643 0x0 V643 0x0
0x794: V652 = ISZERO V651
0x795: V653 = 0x804
0x798: JUMPI 0x804 V652
---
Entry stack: [V13, 0x124, S6, {0x124, 0xb07}, V585, S3, S2, 0x8, V629]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V13, 0x124, S6, {0x124, 0xb07}, V585, S3, S2]

================================

Block 0x799
[0x799:0x7c9]
---
Predecessors: [0x761]
Successors: [0x7ca, 0x7cb]
---
0x799 PUSH32 0x9b5d1a613fa5f0790b36b13103706e31fca06b229d87e9915b29fc20c1d76490
0x7ba DUP2
0x7bb PUSH1 0x8
0x7bd PUSH1 0x6
0x7bf SLOAD
0x7c0 DUP2
0x7c1 SLOAD
0x7c2 DUP2
0x7c3 LT
0x7c4 ISZERO
0x7c5 ISZERO
0x7c6 PUSH2 0x7cb
0x7c9 JUMPI
---
0x799: V654 = 0x9b5d1a613fa5f0790b36b13103706e31fca06b229d87e9915b29fc20c1d76490
0x7bb: V655 = 0x8
0x7bd: V656 = 0x6
0x7bf: V657 = S[0x6]
0x7c1: V658 = S[0x8]
0x7c3: V659 = LT V657 V658
0x7c4: V660 = ISZERO V659
0x7c5: V661 = ISZERO V660
0x7c6: V662 = 0x7cb
0x7c9: JUMPI 0x7cb V661
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, V585, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x9b5d1a613fa5f0790b36b13103706e31fca06b229d87e9915b29fc20c1d76490, S0, 0x8, V657]
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, V585, S1, S0, 0x9b5d1a613fa5f0790b36b13103706e31fca06b229d87e9915b29fc20c1d76490, S0, 0x8, V657]

================================

Block 0x7ca
[0x7ca:0x7ca]
---
Predecessors: [0x799]
Successors: []
---
0x7ca INVALID
---
0x7ca: INVALID 
---
Entry stack: [V13, 0x124, S8, {0x124, 0xb07}, V585, S5, S4, 0x9b5d1a613fa5f0790b36b13103706e31fca06b229d87e9915b29fc20c1d76490, S2, 0x8, V657]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S8, {0x124, 0xb07}, V585, S5, S4, 0x9b5d1a613fa5f0790b36b13103706e31fca06b229d87e9915b29fc20c1d76490, S2, 0x8, V657]

================================

Block 0x7cb
[0x7cb:0x803]
---
Predecessors: [0x799]
Successors: [0x887]
---
0x7cb JUMPDEST
0x7cc PUSH1 0x0
0x7ce SWAP2
0x7cf DUP3
0x7d0 MSTORE
0x7d1 PUSH1 0x20
0x7d3 SWAP2
0x7d4 DUP3
0x7d5 SWAP1
0x7d6 SHA3
0x7d7 PUSH1 0x2
0x7d9 SWAP1
0x7da SWAP2
0x7db MUL
0x7dc ADD
0x7dd SLOAD
0x7de PUSH1 0x40
0x7e0 DUP1
0x7e1 MLOAD
0x7e2 SWAP4
0x7e3 DUP5
0x7e4 MSTORE
0x7e5 PUSH1 0x1
0x7e7 PUSH1 0xa0
0x7e9 PUSH1 0x2
0x7eb EXP
0x7ec SUB
0x7ed SWAP1
0x7ee SWAP2
0x7ef AND
0x7f0 SWAP2
0x7f1 DUP4
0x7f2 ADD
0x7f3 SWAP2
0x7f4 SWAP1
0x7f5 SWAP2
0x7f6 MSTORE
0x7f7 DUP1
0x7f8 MLOAD
0x7f9 SWAP2
0x7fa DUP3
0x7fb SWAP1
0x7fc SUB
0x7fd ADD
0x7fe SWAP1
0x7ff LOG1
0x800 PUSH2 0x887
0x803 JUMP
---
0x7cb: JUMPDEST 
0x7cc: V663 = 0x0
0x7d0: M[0x0] = 0x8
0x7d1: V664 = 0x20
0x7d6: V665 = SHA3 0x0 0x20
0x7d7: V666 = 0x2
0x7db: V667 = MUL V657 0x2
0x7dc: V668 = ADD V667 V665
0x7dd: V669 = S[V668]
0x7de: V670 = 0x40
0x7e1: V671 = M[0x40]
0x7e4: M[V671] = S2
0x7e5: V672 = 0x1
0x7e7: V673 = 0xa0
0x7e9: V674 = 0x2
0x7eb: V675 = EXP 0x2 0xa0
0x7ec: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ef: V677 = AND V669 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V678 = ADD V671 0x20
0x7f6: M[V678] = V677
0x7f8: V679 = M[0x40]
0x7fc: V680 = SUB V671 V679
0x7fd: V681 = ADD V680 0x40
0x7ff: LOG V679 V681 0x9b5d1a613fa5f0790b36b13103706e31fca06b229d87e9915b29fc20c1d76490
0x800: V682 = 0x887
0x803: JUMP 0x887
---
Entry stack: [V13, 0x124, S8, {0x124, 0xb07}, V585, S5, S4, 0x9b5d1a613fa5f0790b36b13103706e31fca06b229d87e9915b29fc20c1d76490, S2, 0x8, V657]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x124, S8, {0x124, 0xb07}, V585, S5, S4]

================================

Block 0x804
[0x804:0x828]
---
Predecessors: [0x761]
Successors: [0x829, 0x82a]
---
0x804 JUMPDEST
0x805 PUSH1 0x7
0x807 DUP1
0x808 SLOAD
0x809 DUP3
0x80a ADD
0x80b SWAP1
0x80c SSTORE
0x80d PUSH1 0x6
0x80f SLOAD
0x810 PUSH1 0x8
0x812 DUP1
0x813 SLOAD
0x814 SWAP5
0x815 DUP4
0x816 ADD
0x817 SWAP5
0x818 DUP4
0x819 SWAP3
0x81a PUSH1 0x9
0x81c SWAP3
0x81d PUSH1 0x0
0x81f SWAP3
0x820 SWAP1
0x821 SWAP2
0x822 SWAP1
0x823 DUP2
0x824 LT
0x825 PUSH2 0x82a
0x828 JUMPI
---
0x804: JUMPDEST 
0x805: V683 = 0x7
0x808: V684 = S[0x7]
0x80a: V685 = ADD S0 V684
0x80c: S[0x7] = V685
0x80d: V686 = 0x6
0x80f: V687 = S[0x6]
0x810: V688 = 0x8
0x813: V689 = S[0x8]
0x816: V690 = ADD S0 V585
0x81a: V691 = 0x9
0x81d: V692 = 0x0
0x824: V693 = LT V687 V689
0x825: V694 = 0x82a
0x828: JUMPI 0x82a V693
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, V585, S1, S0]
Stack pops: 3
Stack additions: [V690, S1, S0, S0, 0x9, 0x0, 0x8, V687]
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, V690, S1, S0, S0, 0x9, 0x0, 0x8, V687]

================================

Block 0x829
[0x829:0x829]
---
Predecessors: [0x804]
Successors: []
---
0x829 INVALID
---
0x829: INVALID 
---
Entry stack: [V13, 0x124, S9, {0x124, 0xb07}, V690, S6, S5, S4, 0x9, 0x0, 0x8, V687]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S9, {0x124, 0xb07}, V690, S6, S5, S4, 0x9, 0x0, 0x8, V687]

================================

Block 0x82a
[0x82a:0x86a]
---
Predecessors: [0x804]
Successors: [0x86b, 0x86c]
---
0x82a JUMPDEST
0x82b PUSH1 0x0
0x82d SWAP2
0x82e DUP3
0x82f MSTORE
0x830 PUSH1 0x20
0x832 DUP1
0x833 DUP4
0x834 SHA3
0x835 PUSH1 0x2
0x837 SWAP1
0x838 SWAP3
0x839 MUL
0x83a SWAP1
0x83b SWAP2
0x83c ADD
0x83d SLOAD
0x83e PUSH1 0x1
0x840 PUSH1 0xa0
0x842 PUSH1 0x2
0x844 EXP
0x845 SUB
0x846 AND
0x847 DUP4
0x848 MSTORE
0x849 DUP3
0x84a ADD
0x84b SWAP3
0x84c SWAP1
0x84d SWAP3
0x84e MSTORE
0x84f PUSH1 0x40
0x851 ADD
0x852 SWAP1
0x853 SHA3
0x854 DUP1
0x855 SLOAD
0x856 SWAP1
0x857 SWAP2
0x858 ADD
0x859 SWAP1
0x85a SSTORE
0x85b PUSH1 0x6
0x85d SLOAD
0x85e PUSH1 0x8
0x860 DUP1
0x861 SLOAD
0x862 DUP4
0x863 SWAP3
0x864 SWAP1
0x865 DUP2
0x866 LT
0x867 PUSH2 0x86c
0x86a JUMPI
---
0x82a: JUMPDEST 
0x82b: V695 = 0x0
0x82f: M[0x0] = 0x8
0x830: V696 = 0x20
0x834: V697 = SHA3 0x0 0x20
0x835: V698 = 0x2
0x839: V699 = MUL V687 0x2
0x83c: V700 = ADD V697 V699
0x83d: V701 = S[V700]
0x83e: V702 = 0x1
0x840: V703 = 0xa0
0x842: V704 = 0x2
0x844: V705 = EXP 0x2 0xa0
0x845: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x846: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0x848: M[0x0] = V707
0x84a: V708 = ADD 0x0 0x20
0x84e: M[0x20] = 0x9
0x84f: V709 = 0x40
0x851: V710 = ADD 0x40 0x0
0x853: V711 = SHA3 0x0 0x40
0x855: V712 = S[V711]
0x858: V713 = ADD S4 V712
0x85a: S[V711] = V713
0x85b: V714 = 0x6
0x85d: V715 = S[0x6]
0x85e: V716 = 0x8
0x861: V717 = S[0x8]
0x866: V718 = LT V715 V717
0x867: V719 = 0x86c
0x86a: JUMPI 0x86c V718
---
Entry stack: [V13, 0x124, S9, {0x124, 0xb07}, V690, S6, S5, S4, 0x9, 0x0, 0x8, V687]
Stack pops: 6
Stack additions: [S5, S5, 0x8, V715]
Exit stack: [V13, 0x124, S9, {0x124, 0xb07}, V690, S6, S5, S5, 0x8, V715]

================================

Block 0x86b
[0x86b:0x86b]
---
Predecessors: [0x82a]
Successors: []
---
0x86b INVALID
---
0x86b: INVALID 
---
Entry stack: [V13, 0x124, S7, {0x124, 0xb07}, V690, S4, S3, S2, 0x8, V715]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S7, {0x124, 0xb07}, V690, S4, S3, S2, 0x8, V715]

================================

Block 0x86c
[0x86c:0x886]
---
Predecessors: [0x82a]
Successors: [0x887]
---
0x86c JUMPDEST
0x86d PUSH1 0x0
0x86f SWAP2
0x870 DUP3
0x871 MSTORE
0x872 PUSH1 0x20
0x874 SWAP1
0x875 SWAP2
0x876 SHA3
0x877 PUSH1 0x1
0x879 PUSH1 0x2
0x87b SWAP1
0x87c SWAP3
0x87d MUL
0x87e ADD
0x87f ADD
0x880 DUP1
0x881 SLOAD
0x882 SWAP1
0x883 SWAP2
0x884 ADD
0x885 SWAP1
0x886 SSTORE
---
0x86c: JUMPDEST 
0x86d: V720 = 0x0
0x871: M[0x0] = 0x8
0x872: V721 = 0x20
0x876: V722 = SHA3 0x0 0x20
0x877: V723 = 0x1
0x879: V724 = 0x2
0x87d: V725 = MUL V715 0x2
0x87e: V726 = ADD V725 V722
0x87f: V727 = ADD V726 0x1
0x881: V728 = S[V727]
0x884: V729 = ADD S2 V728
0x886: S[V727] = V729
---
Entry stack: [V13, 0x124, S7, {0x124, 0xb07}, V690, S4, S3, S2, 0x8, V715]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x124, S7, {0x124, 0xb07}, V690, S4, S3]

================================

Block 0x887
[0x887:0x890]
---
Predecessors: [0x6bc, 0x7cb, 0x86c]
Successors: [0x891, 0x89a]
---
0x887 JUMPDEST
0x888 PUSH1 0x0
0x88a DUP4
0x88b GT
0x88c ISZERO
0x88d PUSH2 0x89a
0x890 JUMPI
---
0x887: JUMPDEST 
0x888: V730 = 0x0
0x88b: V731 = GT S2 0x0
0x88c: V732 = ISZERO V731
0x88d: V733 = 0x89a
0x890: JUMPI 0x89a V732
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]

================================

Block 0x891
[0x891:0x899]
---
Predecessors: [0x887]
Successors: [0x89a]
---
0x891 PUSH1 0x6
0x893 DUP1
0x894 SLOAD
0x895 PUSH1 0x1
0x897 ADD
0x898 SWAP1
0x899 SSTORE
---
0x891: V734 = 0x6
0x894: V735 = S[0x6]
0x895: V736 = 0x1
0x897: V737 = ADD 0x1 V735
0x899: S[0x6] = V737
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]

================================

Block 0x89a
[0x89a:0x8a5]
---
Predecessors: [0x887, 0x891]
Successors: [0x8a6, 0x8aa]
---
0x89a JUMPDEST
0x89b PUSH1 0x8
0x89d SLOAD
0x89e PUSH1 0x6
0x8a0 SLOAD
0x8a1 LT
0x8a2 PUSH2 0x8aa
0x8a5 JUMPI
---
0x89a: JUMPDEST 
0x89b: V738 = 0x8
0x89d: V739 = S[0x8]
0x89e: V740 = 0x6
0x8a0: V741 = S[0x6]
0x8a1: V742 = LT V741 V739
0x8a2: V743 = 0x8aa
0x8a5: JUMPI 0x8aa V742
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]

================================

Block 0x8a6
[0x8a6:0x8a9]
---
Predecessors: [0x89a]
Successors: [0x8af]
---
0x8a6 PUSH2 0x8af
0x8a9 JUMP
---
0x8a6: V744 = 0x8af
0x8a9: JUMP 0x8af
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]

================================

Block 0x8aa
[0x8aa:0x8ae]
---
Predecessors: [0x89a]
Successors: [0x660]
---
0x8aa JUMPDEST
0x8ab PUSH2 0x660
0x8ae JUMP
---
0x8aa: JUMPDEST 
0x8ab: V745 = 0x660
0x8ae: JUMP 0x660
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]

================================

Block 0x8af
[0x8af:0x8b3]
---
Predecessors: [0x660, 0x8a6]
Successors: [0x124, 0xb07]
---
0x8af JUMPDEST
0x8b0 POP
0x8b1 POP
0x8b2 POP
0x8b3 JUMP
---
0x8af: JUMPDEST 
0x8b3: JUMP {0x124, 0xb07}
---
Entry stack: [V13, 0x124, S4, {0x124, 0xb07}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x124, S4]

================================

Block 0x8b4
[0x8b4:0x8b9]
---
Predecessors: [0x258]
Successors: [0x13b]
---
0x8b4 JUMPDEST
0x8b5 PUSH1 0x6
0x8b7 SLOAD
0x8b8 DUP2
0x8b9 JUMP
---
0x8b4: JUMPDEST 
0x8b5: V746 = 0x6
0x8b7: V747 = S[0x6]
0x8b9: JUMP 0x13b
---
Entry stack: [V13, 0x13b]
Stack pops: 1
Stack additions: [S0, V747]
Exit stack: [V13, 0x13b, V747]

================================

Block 0x8ba
[0x8ba:0x8d0]
---
Predecessors: [0x26d]
Successors: [0x8d1, 0x8d5]
---
0x8ba JUMPDEST
0x8bb PUSH1 0x1
0x8bd SLOAD
0x8be CALLER
0x8bf PUSH1 0x1
0x8c1 PUSH1 0xa0
0x8c3 PUSH1 0x2
0x8c5 EXP
0x8c6 SUB
0x8c7 SWAP1
0x8c8 DUP2
0x8c9 AND
0x8ca SWAP2
0x8cb AND
0x8cc EQ
0x8cd PUSH2 0x8d5
0x8d0 JUMPI
---
0x8ba: JUMPDEST 
0x8bb: V748 = 0x1
0x8bd: V749 = S[0x1]
0x8be: V750 = CALLER
0x8bf: V751 = 0x1
0x8c1: V752 = 0xa0
0x8c3: V753 = 0x2
0x8c5: V754 = EXP 0x2 0xa0
0x8c6: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c9: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0x8cb: V757 = AND V749 0xffffffffffffffffffffffffffffffffffffffff
0x8cc: V758 = EQ V757 V756
0x8cd: V759 = 0x8d5
0x8d0: JUMPI 0x8d5 V758
---
Entry stack: [V13, 0x124]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124]

================================

Block 0x8d1
[0x8d1:0x8d4]
---
Predecessors: [0x8ba]
Successors: []
---
0x8d1 PUSH1 0x0
0x8d3 DUP1
0x8d4 REVERT
---
0x8d1: V760 = 0x0
0x8d4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x124]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124]

================================

Block 0x8d5
[0x8d5:0x905]
---
Predecessors: [0x8ba]
Successors: [0x124]
---
0x8d5 JUMPDEST
0x8d6 PUSH1 0x1
0x8d8 SLOAD
0x8d9 PUSH1 0x0
0x8db DUP1
0x8dc SLOAD
0x8dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f2 NOT
0x8f3 AND
0x8f4 PUSH1 0x1
0x8f6 PUSH1 0xa0
0x8f8 PUSH1 0x2
0x8fa EXP
0x8fb SUB
0x8fc SWAP1
0x8fd SWAP3
0x8fe AND
0x8ff SWAP2
0x900 SWAP1
0x901 SWAP2
0x902 OR
0x903 SWAP1
0x904 SSTORE
0x905 JUMP
---
0x8d5: JUMPDEST 
0x8d6: V761 = 0x1
0x8d8: V762 = S[0x1]
0x8d9: V763 = 0x0
0x8dc: V764 = S[0x0]
0x8dd: V765 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f2: V766 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8f3: V767 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V764
0x8f4: V768 = 0x1
0x8f6: V769 = 0xa0
0x8f8: V770 = 0x2
0x8fa: V771 = EXP 0x2 0xa0
0x8fb: V772 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fe: V773 = AND V762 0xffffffffffffffffffffffffffffffffffffffff
0x902: V774 = OR V773 V767
0x904: S[0x0] = V774
0x905: JUMP 0x124
---
Entry stack: [V13, 0x124]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x906
[0x906:0x914]
---
Predecessors: [0x282]
Successors: [0x21b]
---
0x906 JUMPDEST
0x907 PUSH1 0x0
0x909 SLOAD
0x90a PUSH1 0x1
0x90c PUSH1 0xa0
0x90e PUSH1 0x2
0x910 EXP
0x911 SUB
0x912 AND
0x913 DUP2
0x914 JUMP
---
0x906: JUMPDEST 
0x907: V775 = 0x0
0x909: V776 = S[0x0]
0x90a: V777 = 0x1
0x90c: V778 = 0xa0
0x90e: V779 = 0x2
0x910: V780 = EXP 0x2 0xa0
0x911: V781 = SUB 0x10000000000000000000000000000000000000000 0x1
0x912: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V776
0x914: JUMP 0x21b
---
Entry stack: [V13, 0x21b]
Stack pops: 1
Stack additions: [S0, V782]
Exit stack: [V13, 0x21b, V782]

================================

Block 0x915
[0x915:0x96f]
---
Predecessors: [0x297]
Successors: [0x4b3, 0x970]
---
0x915 JUMPDEST
0x916 PUSH1 0xa
0x918 SLOAD
0x919 PUSH1 0x40
0x91b DUP1
0x91c MLOAD
0x91d PUSH32 0x722713f700000000000000000000000000000000000000000000000000000000
0x93e DUP2
0x93f MSTORE
0x940 SWAP1
0x941 MLOAD
0x942 PUSH1 0x0
0x944 SWAP3
0x945 PUSH1 0x1
0x947 PUSH1 0xa0
0x949 PUSH1 0x2
0x94b EXP
0x94c SUB
0x94d AND
0x94e SWAP2
0x94f PUSH4 0x722713f7
0x954 SWAP2
0x955 PUSH1 0x4
0x957 DUP1
0x958 DUP4
0x959 ADD
0x95a SWAP3
0x95b PUSH1 0x20
0x95d SWAP3
0x95e SWAP2
0x95f SWAP1
0x960 DUP3
0x961 SWAP1
0x962 SUB
0x963 ADD
0x964 DUP2
0x965 DUP8
0x966 DUP8
0x967 DUP1
0x968 EXTCODESIZE
0x969 ISZERO
0x96a DUP1
0x96b ISZERO
0x96c PUSH2 0x4b3
0x96f JUMPI
---
0x915: JUMPDEST 
0x916: V783 = 0xa
0x918: V784 = S[0xa]
0x919: V785 = 0x40
0x91c: V786 = M[0x40]
0x91d: V787 = 0x722713f700000000000000000000000000000000000000000000000000000000
0x93f: M[V786] = 0x722713f700000000000000000000000000000000000000000000000000000000
0x941: V788 = M[0x40]
0x942: V789 = 0x0
0x945: V790 = 0x1
0x947: V791 = 0xa0
0x949: V792 = 0x2
0x94b: V793 = EXP 0x2 0xa0
0x94c: V794 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94d: V795 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0x94f: V796 = 0x722713f7
0x955: V797 = 0x4
0x959: V798 = ADD V786 0x4
0x95b: V799 = 0x20
0x962: V800 = SUB V786 V788
0x963: V801 = ADD V800 0x4
0x968: V802 = EXTCODESIZE V795
0x969: V803 = ISZERO V802
0x96b: V804 = ISZERO V803
0x96c: V805 = 0x4b3
0x96f: JUMPI 0x4b3 V804
---
Entry stack: [V13, 0x13b]
Stack pops: 0
Stack additions: [0x0, V795, 0x722713f7, V798, 0x20, V788, V801, V788, 0x0, V795, V803]
Exit stack: [V13, 0x13b, 0x0, V795, 0x722713f7, V798, 0x20, V788, V801, V788, 0x0, V795, V803]

================================

Block 0x970
[0x970:0x973]
---
Predecessors: [0x915]
Successors: []
---
0x970 PUSH1 0x0
0x972 DUP1
0x973 REVERT
---
0x970: V806 = 0x0
0x973: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13b, 0x0, V795, 0x722713f7, V798, 0x20, V788, V801, V788, 0x0, V795, V803]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13b, 0x0, V795, 0x722713f7, V798, 0x20, V788, V801, V788, 0x0, V795, V803]

================================

Block 0x974
[0x974:0x979]
---
Predecessors: [0x2ac]
Successors: [0x13b]
---
0x974 JUMPDEST
0x975 PUSH1 0x4
0x977 SLOAD
0x978 SWAP1
0x979 JUMP
---
0x974: JUMPDEST 
0x975: V807 = 0x4
0x977: V808 = S[0x4]
0x979: JUMP 0x13b
---
Entry stack: [V13, 0x13b]
Stack pops: 1
Stack additions: [V808]
Exit stack: [V13, V808]

================================

Block 0x97a
[0x97a:0x983]
---
Predecessors: [0x2c1]
Successors: [0x13b]
---
0x97a JUMPDEST
0x97b PUSH1 0x6
0x97d SLOAD
0x97e PUSH1 0x8
0x980 SLOAD
0x981 SUB
0x982 SWAP1
0x983 JUMP
---
0x97a: JUMPDEST 
0x97b: V809 = 0x6
0x97d: V810 = S[0x6]
0x97e: V811 = 0x8
0x980: V812 = S[0x8]
0x981: V813 = SUB V812 V810
0x983: JUMP 0x13b
---
Entry stack: [V13, 0x13b]
Stack pops: 1
Stack additions: [V813]
Exit stack: [V13, V813]

================================

Block 0x984
[0x984:0x989]
---
Predecessors: [0x2d6]
Successors: [0x13b]
---
0x984 JUMPDEST
0x985 PUSH1 0x8
0x987 SLOAD
0x988 SWAP1
0x989 JUMP
---
0x984: JUMPDEST 
0x985: V814 = 0x8
0x987: V815 = S[0x8]
0x989: JUMP 0x13b
---
Entry stack: [V13, 0x13b]
Stack pops: 1
Stack additions: [V815]
Exit stack: [V13, V815]

================================

Block 0x98a
[0x98a:0x9a0]
---
Predecessors: [0x2eb]
Successors: [0x9a1, 0x9a5]
---
0x98a JUMPDEST
0x98b PUSH1 0x0
0x98d SLOAD
0x98e CALLER
0x98f PUSH1 0x1
0x991 PUSH1 0xa0
0x993 PUSH1 0x2
0x995 EXP
0x996 SUB
0x997 SWAP1
0x998 DUP2
0x999 AND
0x99a SWAP2
0x99b AND
0x99c EQ
0x99d PUSH2 0x9a5
0x9a0 JUMPI
---
0x98a: JUMPDEST 
0x98b: V816 = 0x0
0x98d: V817 = S[0x0]
0x98e: V818 = CALLER
0x98f: V819 = 0x1
0x991: V820 = 0xa0
0x993: V821 = 0x2
0x995: V822 = EXP 0x2 0xa0
0x996: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0x999: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff V818
0x99b: V825 = AND V817 0xffffffffffffffffffffffffffffffffffffffff
0x99c: V826 = EQ V825 V824
0x99d: V827 = 0x9a5
0x9a0: JUMPI 0x9a5 V826
---
Entry stack: [V13, 0x124, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, V233]

================================

Block 0x9a1
[0x9a1:0x9a4]
---
Predecessors: [0x98a]
Successors: []
---
0x9a1 PUSH1 0x0
0x9a3 DUP1
0x9a4 REVERT
---
0x9a1: V828 = 0x0
0x9a4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x124, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, V233]

================================

Block 0x9a5
[0x9a5:0x9d3]
---
Predecessors: [0x98a]
Successors: [0x124]
---
0x9a5 JUMPDEST
0x9a6 PUSH1 0x1
0x9a8 DUP1
0x9a9 SLOAD
0x9aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bf NOT
0x9c0 AND
0x9c1 PUSH1 0x1
0x9c3 PUSH1 0xa0
0x9c5 PUSH1 0x2
0x9c7 EXP
0x9c8 SUB
0x9c9 SWAP3
0x9ca SWAP1
0x9cb SWAP3
0x9cc AND
0x9cd SWAP2
0x9ce SWAP1
0x9cf SWAP2
0x9d0 OR
0x9d1 SWAP1
0x9d2 SSTORE
0x9d3 JUMP
---
0x9a5: JUMPDEST 
0x9a6: V829 = 0x1
0x9a9: V830 = S[0x1]
0x9aa: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bf: V832 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9c0: V833 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V830
0x9c1: V834 = 0x1
0x9c3: V835 = 0xa0
0x9c5: V836 = 0x2
0x9c7: V837 = EXP 0x2 0xa0
0x9c8: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cc: V839 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x9d0: V840 = OR V839 V833
0x9d2: S[0x1] = V840
0x9d3: JUMP 0x124
---
Entry stack: [V13, 0x124, V233]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x9d4
[0x9d4:0x9e0]
---
Predecessors: [0x300]
Successors: [0x9e1, 0x9e5]
---
0x9d4 JUMPDEST
0x9d5 PUSH1 0x0
0x9d7 PUSH3 0xf4240
0x9db CALLVALUE
0x9dc GT
0x9dd PUSH2 0x9e5
0x9e0 JUMPI
---
0x9d4: JUMPDEST 
0x9d5: V841 = 0x0
0x9d7: V842 = 0xf4240
0x9db: V843 = CALLVALUE
0x9dc: V844 = GT V843 0xf4240
0x9dd: V845 = 0x9e5
0x9e0: JUMPI 0x9e5 V844
---
Entry stack: [V13, 0x124]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x124, 0x0]

================================

Block 0x9e1
[0x9e1:0x9e4]
---
Predecessors: [0x9d4]
Successors: []
---
0x9e1 PUSH1 0x0
0x9e3 DUP1
0x9e4 REVERT
---
0x9e1: V846 = 0x0
0x9e4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x124, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x124, 0x0]

================================

Block 0x9e5
[0x9e5:0xaf0]
---
Predecessors: [0x9d4]
Successors: [0x448]
---
0x9e5 JUMPDEST
0x9e6 PUSH1 0x5
0x9e8 SLOAD
0x9e9 PUSH1 0x64
0x9eb SWAP1
0x9ec CALLVALUE
0x9ed MUL
0x9ee PUSH1 0x40
0x9f0 DUP1
0x9f1 MLOAD
0x9f2 DUP1
0x9f3 DUP3
0x9f4 ADD
0x9f5 DUP3
0x9f6 MSTORE
0x9f7 CALLER
0x9f8 PUSH1 0x1
0x9fa PUSH1 0xa0
0x9fc PUSH1 0x2
0x9fe EXP
0x9ff SUB
0xa00 SWAP1
0xa01 DUP2
0xa02 AND
0xa03 DUP1
0xa04 DUP4
0xa05 MSTORE
0xa06 SWAP5
0xa07 SWAP1
0xa08 SWAP4
0xa09 DIV
0xa0a PUSH1 0x20
0xa0c DUP1
0xa0d DUP4
0xa0e ADD
0xa0f DUP3
0xa10 DUP2
0xa11 MSTORE
0xa12 PUSH1 0x8
0xa14 DUP1
0xa15 SLOAD
0xa16 PUSH1 0x1
0xa18 DUP2
0xa19 ADD
0xa1a DUP3
0xa1b SSTORE
0xa1c PUSH1 0x0
0xa1e SWAP2
0xa1f DUP3
0xa20 MSTORE
0xa21 SWAP5
0xa22 MLOAD
0xa23 PUSH32 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3
0xa44 PUSH1 0x2
0xa46 SWAP1
0xa47 SWAP7
0xa48 MUL
0xa49 SWAP6
0xa4a DUP7
0xa4b ADD
0xa4c DUP1
0xa4d SLOAD
0xa4e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa63 NOT
0xa64 AND
0xa65 SWAP2
0xa66 SWAP1
0xa67 SWAP9
0xa68 AND
0xa69 OR
0xa6a SWAP1
0xa6b SWAP7
0xa6c SSTORE
0xa6d MLOAD
0xa6e PUSH32 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0xa8f SWAP1
0xa90 SWAP4
0xa91 ADD
0xa92 SWAP3
0xa93 SWAP1
0xa94 SWAP3
0xa95 SSTORE
0xa96 PUSH1 0x7
0xa98 DUP1
0xa99 SLOAD
0xa9a DUP3
0xa9b ADD
0xa9c SWAP1
0xa9d SSTORE
0xa9e DUP5
0xa9f DUP5
0xaa0 MSTORE
0xaa1 PUSH1 0x9
0xaa3 DUP3
0xaa4 MSTORE
0xaa5 SWAP3
0xaa6 DUP3
0xaa7 SWAP1
0xaa8 SHA3
0xaa9 DUP1
0xaaa SLOAD
0xaab DUP5
0xaac ADD
0xaad SWAP1
0xaae SSTORE
0xaaf DUP2
0xab0 MLOAD
0xab1 CALLVALUE
0xab2 DUP2
0xab3 MSTORE
0xab4 SWAP1
0xab5 DUP2
0xab6 ADD
0xab7 SWAP4
0xab8 SWAP1
0xab9 SWAP4
0xaba MSTORE
0xabb DUP1
0xabc MLOAD
0xabd SWAP2
0xabe SWAP4
0xabf POP
0xac0 PUSH32 0x4bcc17093cdf51079c755de089be5a85e70fa374ec656c194480fbdcda224a53
0xae1 SWAP3
0xae2 DUP3
0xae3 SWAP1
0xae4 SUB
0xae5 ADD
0xae6 SWAP1
0xae7 LOG1
0xae8 PUSH1 0x0
0xaea PUSH2 0xaf1
0xaed PUSH2 0x448
0xaf0 JUMP
---
0x9e5: JUMPDEST 
0x9e6: V847 = 0x5
0x9e8: V848 = S[0x5]
0x9e9: V849 = 0x64
0x9ec: V850 = CALLVALUE
0x9ed: V851 = MUL V850 V848
0x9ee: V852 = 0x40
0x9f1: V853 = M[0x40]
0x9f4: V854 = ADD 0x40 V853
0x9f6: M[0x40] = V854
0x9f7: V855 = CALLER
0x9f8: V856 = 0x1
0x9fa: V857 = 0xa0
0x9fc: V858 = 0x2
0x9fe: V859 = EXP 0x2 0xa0
0x9ff: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa02: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V855
0xa05: M[V853] = V861
0xa09: V862 = DIV V851 0x64
0xa0a: V863 = 0x20
0xa0e: V864 = ADD V853 0x20
0xa11: M[V864] = V862
0xa12: V865 = 0x8
0xa15: V866 = S[0x8]
0xa16: V867 = 0x1
0xa19: V868 = ADD V866 0x1
0xa1b: S[0x8] = V868
0xa1c: V869 = 0x0
0xa20: M[0x0] = 0x8
0xa22: V870 = M[V853]
0xa23: V871 = 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3
0xa44: V872 = 0x2
0xa48: V873 = MUL V866 0x2
0xa4b: V874 = ADD V873 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3
0xa4d: V875 = S[V874]
0xa4e: V876 = 0xffffffffffffffffffffffffffffffffffffffff
0xa63: V877 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa64: V878 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V875
0xa68: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V870
0xa69: V880 = OR V879 V878
0xa6c: S[V874] = V880
0xa6d: V881 = M[V864]
0xa6e: V882 = 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0xa91: V883 = ADD V873 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0xa95: S[V883] = V881
0xa96: V884 = 0x7
0xa99: V885 = S[0x7]
0xa9b: V886 = ADD V862 V885
0xa9d: S[0x7] = V886
0xaa0: M[0x0] = V861
0xaa1: V887 = 0x9
0xaa4: M[0x20] = 0x9
0xaa8: V888 = SHA3 0x0 0x40
0xaaa: V889 = S[V888]
0xaac: V890 = ADD V862 V889
0xaae: S[V888] = V890
0xab0: V891 = M[0x40]
0xab1: V892 = CALLVALUE
0xab3: M[V891] = V892
0xab6: V893 = ADD V891 0x20
0xaba: M[V893] = V861
0xabc: V894 = M[0x40]
0xac0: V895 = 0x4bcc17093cdf51079c755de089be5a85e70fa374ec656c194480fbdcda224a53
0xae4: V896 = SUB V891 V894
0xae5: V897 = ADD V896 0x40
0xae7: LOG V894 V897 0x4bcc17093cdf51079c755de089be5a85e70fa374ec656c194480fbdcda224a53
0xae8: V898 = 0x0
0xaea: V899 = 0xaf1
0xaed: V900 = 0x448
0xaf0: JUMP 0x448
---
Entry stack: [V13, 0x124, 0x0]
Stack pops: 1
Stack additions: [V862, 0x0, 0xaf1]
Exit stack: [V13, 0x124, V862, 0x0, 0xaf1]

================================

Block 0xaf1
[0xaf1:0xaf7]
---
Predecessors: [0x4dd]
Successors: [0xaf8, 0xaff]
---
0xaf1 JUMPDEST
0xaf2 GT
0xaf3 ISZERO
0xaf4 PUSH2 0xaff
0xaf7 JUMPI
---
0xaf1: JUMPDEST 
0xaf2: V901 = GT V412 S1
0xaf3: V902 = ISZERO V901
0xaf4: V903 = 0xaff
0xaf7: JUMPI 0xaff V902
---
Entry stack: [V13, 0x124, V862, S1, V412]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x124, V862]

================================

Block 0xaf8
[0xaf8:0xafe]
---
Predecessors: [0xaf1]
Successors: [0x520]
---
0xaf8 PUSH2 0xaff
0xafb PUSH2 0x520
0xafe JUMP
---
0xaf8: V904 = 0xaff
0xafb: V905 = 0x520
0xafe: JUMP 0x520
---
Entry stack: [V13, 0x124, V862]
Stack pops: 0
Stack additions: [0xaff]
Exit stack: [V13, 0x124, V862, 0xaff]

================================

Block 0xaff
[0xaff:0xb06]
---
Predecessors: [0x59d, 0xaf1]
Successors: [0x60a]
---
0xaff JUMPDEST
0xb00 PUSH2 0xb07
0xb03 PUSH2 0x60a
0xb06 JUMP
---
0xaff: JUMPDEST 
0xb00: V906 = 0xb07
0xb03: V907 = 0x60a
0xb06: JUMP 0x60a
---
Entry stack: [V13, 0x124, S0]
Stack pops: 0
Stack additions: [0xb07]
Exit stack: [V13, 0x124, S0, 0xb07]

================================

Block 0xb07
[0xb07:0xb09]
---
Predecessors: [0x8af]
Successors: [0x124]
---
0xb07 JUMPDEST
0xb08 POP
0xb09 JUMP
---
0xb07: JUMPDEST 
0xb09: JUMP 0x124
---
Entry stack: [V13, 0x124, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xb0a
[0xb0a:0xb21]
---
Predecessors: [0x314]
Successors: [0xb22, 0xb26]
---
0xb0a JUMPDEST
0xb0b PUSH1 0x0
0xb0d DUP1
0xb0e SLOAD
0xb0f CALLER
0xb10 PUSH1 0x1
0xb12 PUSH1 0xa0
0xb14 PUSH1 0x2
0xb16 EXP
0xb17 SUB
0xb18 SWAP1
0xb19 DUP2
0xb1a AND
0xb1b SWAP2
0xb1c AND
0xb1d EQ
0xb1e PUSH2 0xb26
0xb21 JUMPI
---
0xb0a: JUMPDEST 
0xb0b: V908 = 0x0
0xb0e: V909 = S[0x0]
0xb0f: V910 = CALLER
0xb10: V911 = 0x1
0xb12: V912 = 0xa0
0xb14: V913 = 0x2
0xb16: V914 = EXP 0x2 0xa0
0xb17: V915 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1a: V916 = AND 0xffffffffffffffffffffffffffffffffffffffff V910
0xb1c: V917 = AND V909 0xffffffffffffffffffffffffffffffffffffffff
0xb1d: V918 = EQ V917 V916
0xb1e: V919 = 0xb26
0xb21: JUMPI 0xb26 V918
---
Entry stack: [V13, 0x332, V249, V252, V254]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x332, V249, V252, V254, 0x0]

================================

Block 0xb22
[0xb22:0xb25]
---
Predecessors: [0xb0a]
Successors: []
---
0xb22 PUSH1 0x0
0xb24 DUP1
0xb25 REVERT
---
0xb22: V920 = 0x0
0xb25: REVERT 0x0 0x0
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x332, V249, V252, V254, 0x0]

================================

Block 0xb26
[0xb26:0xb3e]
---
Predecessors: [0xb0a]
Successors: [0xb3f, 0xb43]
---
0xb26 JUMPDEST
0xb27 PUSH1 0xa
0xb29 SLOAD
0xb2a DUP5
0xb2b SWAP1
0xb2c PUSH1 0x1
0xb2e PUSH1 0xa0
0xb30 PUSH1 0x2
0xb32 EXP
0xb33 SUB
0xb34 DUP1
0xb35 DUP4
0xb36 AND
0xb37 SWAP2
0xb38 AND
0xb39 EQ
0xb3a ISZERO
0xb3b PUSH2 0xb43
0xb3e JUMPI
---
0xb26: JUMPDEST 
0xb27: V921 = 0xa
0xb29: V922 = S[0xa]
0xb2c: V923 = 0x1
0xb2e: V924 = 0xa0
0xb30: V925 = 0x2
0xb32: V926 = EXP 0x2 0xa0
0xb33: V927 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb36: V928 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0xb38: V929 = AND V922 0xffffffffffffffffffffffffffffffffffffffff
0xb39: V930 = EQ V929 V928
0xb3a: V931 = ISZERO V930
0xb3b: V932 = 0xb43
0xb3e: JUMPI 0xb43 V931
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3]
Exit stack: [V13, 0x332, V249, V252, V254, 0x0, V249]

================================

Block 0xb3f
[0xb3f:0xb42]
---
Predecessors: [0xb26]
Successors: []
---
0xb3f PUSH1 0x0
0xb41 DUP1
0xb42 REVERT
---
0xb3f: V933 = 0x0
0xb42: REVERT 0x0 0x0
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x332, V249, V252, V254, 0x0, V249]

================================

Block 0xb43
[0xb43:0xba1]
---
Predecessors: [0xb26]
Successors: [0xba2, 0xba6]
---
0xb43 JUMPDEST
0xb44 DUP5
0xb45 PUSH1 0x1
0xb47 PUSH1 0xa0
0xb49 PUSH1 0x2
0xb4b EXP
0xb4c SUB
0xb4d AND
0xb4e PUSH4 0xa9059cbb
0xb53 DUP6
0xb54 DUP6
0xb55 PUSH1 0x40
0xb57 MLOAD
0xb58 DUP4
0xb59 PUSH4 0xffffffff
0xb5e AND
0xb5f PUSH1 0xe0
0xb61 PUSH1 0x2
0xb63 EXP
0xb64 MUL
0xb65 DUP2
0xb66 MSTORE
0xb67 PUSH1 0x4
0xb69 ADD
0xb6a DUP1
0xb6b DUP4
0xb6c PUSH1 0x1
0xb6e PUSH1 0xa0
0xb70 PUSH1 0x2
0xb72 EXP
0xb73 SUB
0xb74 AND
0xb75 PUSH1 0x1
0xb77 PUSH1 0xa0
0xb79 PUSH1 0x2
0xb7b EXP
0xb7c SUB
0xb7d AND
0xb7e DUP2
0xb7f MSTORE
0xb80 PUSH1 0x20
0xb82 ADD
0xb83 DUP3
0xb84 DUP2
0xb85 MSTORE
0xb86 PUSH1 0x20
0xb88 ADD
0xb89 SWAP3
0xb8a POP
0xb8b POP
0xb8c POP
0xb8d PUSH1 0x20
0xb8f PUSH1 0x40
0xb91 MLOAD
0xb92 DUP1
0xb93 DUP4
0xb94 SUB
0xb95 DUP2
0xb96 PUSH1 0x0
0xb98 DUP8
0xb99 DUP1
0xb9a EXTCODESIZE
0xb9b ISZERO
0xb9c DUP1
0xb9d ISZERO
0xb9e PUSH2 0xba6
0xba1 JUMPI
---
0xb43: JUMPDEST 
0xb45: V934 = 0x1
0xb47: V935 = 0xa0
0xb49: V936 = 0x2
0xb4b: V937 = EXP 0x2 0xa0
0xb4c: V938 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4d: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0xb4e: V940 = 0xa9059cbb
0xb55: V941 = 0x40
0xb57: V942 = M[0x40]
0xb59: V943 = 0xffffffff
0xb5e: V944 = AND 0xffffffff 0xa9059cbb
0xb5f: V945 = 0xe0
0xb61: V946 = 0x2
0xb63: V947 = EXP 0x2 0xe0
0xb64: V948 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xb66: M[V942] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb67: V949 = 0x4
0xb69: V950 = ADD 0x4 V942
0xb6c: V951 = 0x1
0xb6e: V952 = 0xa0
0xb70: V953 = 0x2
0xb72: V954 = EXP 0x2 0xa0
0xb73: V955 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb74: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0xb75: V957 = 0x1
0xb77: V958 = 0xa0
0xb79: V959 = 0x2
0xb7b: V960 = EXP 0x2 0xa0
0xb7c: V961 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7d: V962 = AND 0xffffffffffffffffffffffffffffffffffffffff V956
0xb7f: M[V950] = V962
0xb80: V963 = 0x20
0xb82: V964 = ADD 0x20 V950
0xb85: M[V964] = V254
0xb86: V965 = 0x20
0xb88: V966 = ADD 0x20 V964
0xb8d: V967 = 0x20
0xb8f: V968 = 0x40
0xb91: V969 = M[0x40]
0xb94: V970 = SUB V966 V969
0xb96: V971 = 0x0
0xb9a: V972 = EXTCODESIZE V939
0xb9b: V973 = ISZERO V972
0xb9d: V974 = ISZERO V973
0xb9e: V975 = 0xba6
0xba1: JUMPI 0xba6 V974
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0, V249]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V939, 0xa9059cbb, V966, 0x20, V969, V970, V969, 0x0, V939, V973]
Exit stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V939, 0xa9059cbb, V966, 0x20, V969, V970, V969, 0x0, V939, V973]

================================

Block 0xba2
[0xba2:0xba5]
---
Predecessors: [0xb43]
Successors: []
---
0xba2 PUSH1 0x0
0xba4 DUP1
0xba5 REVERT
---
0xba2: V976 = 0x0
0xba5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V939, 0xa9059cbb, V966, 0x20, V969, V970, V969, 0x0, V939, V973]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V939, 0xa9059cbb, V966, 0x20, V969, V970, V969, 0x0, V939, V973]

================================

Block 0xba6
[0xba6:0xbb0]
---
Predecessors: [0xb43]
Successors: [0xbb1, 0xbba]
---
0xba6 JUMPDEST
0xba7 POP
0xba8 GAS
0xba9 CALL
0xbaa ISZERO
0xbab DUP1
0xbac ISZERO
0xbad PUSH2 0xbba
0xbb0 JUMPI
---
0xba6: JUMPDEST 
0xba8: V977 = GAS
0xba9: V978 = CALL V977 V939 0x0 V969 V970 V969 0x20
0xbaa: V979 = ISZERO V978
0xbac: V980 = ISZERO V979
0xbad: V981 = 0xbba
0xbb0: JUMPI 0xbba V980
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V939, 0xa9059cbb, V966, 0x20, V969, V970, V969, 0x0, V939, V973]
Stack pops: 7
Stack additions: [V979]
Exit stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V939, 0xa9059cbb, V966, V979]

================================

Block 0xbb1
[0xbb1:0xbb9]
---
Predecessors: [0xba6]
Successors: []
---
0xbb1 RETURNDATASIZE
0xbb2 PUSH1 0x0
0xbb4 DUP1
0xbb5 RETURNDATACOPY
0xbb6 RETURNDATASIZE
0xbb7 PUSH1 0x0
0xbb9 REVERT
---
0xbb1: V982 = RETURNDATASIZE
0xbb2: V983 = 0x0
0xbb5: RETURNDATACOPY 0x0 0x0 V982
0xbb6: V984 = RETURNDATASIZE
0xbb7: V985 = 0x0
0xbb9: REVERT 0x0 V984
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V939, 0xa9059cbb, V966, V979]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V939, 0xa9059cbb, V966, V979]

================================

Block 0xbba
[0xbba:0xbcb]
---
Predecessors: [0xba6]
Successors: [0xbcc, 0xbd0]
---
0xbba JUMPDEST
0xbbb POP
0xbbc POP
0xbbd POP
0xbbe POP
0xbbf PUSH1 0x40
0xbc1 MLOAD
0xbc2 RETURNDATASIZE
0xbc3 PUSH1 0x20
0xbc5 DUP2
0xbc6 LT
0xbc7 ISZERO
0xbc8 PUSH2 0xbd0
0xbcb JUMPI
---
0xbba: JUMPDEST 
0xbbf: V986 = 0x40
0xbc1: V987 = M[0x40]
0xbc2: V988 = RETURNDATASIZE
0xbc3: V989 = 0x20
0xbc6: V990 = LT V988 0x20
0xbc7: V991 = ISZERO V990
0xbc8: V992 = 0xbd0
0xbcb: JUMPI 0xbd0 V991
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V939, 0xa9059cbb, V966, V979]
Stack pops: 4
Stack additions: [V987, V988]
Exit stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V987, V988]

================================

Block 0xbcc
[0xbcc:0xbcf]
---
Predecessors: [0xbba]
Successors: []
---
0xbcc PUSH1 0x0
0xbce DUP1
0xbcf REVERT
---
0xbcc: V993 = 0x0
0xbcf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V987, V988]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V987, V988]

================================

Block 0xbd0
[0xbd0:0xbda]
---
Predecessors: [0xbba]
Successors: [0x332]
---
0xbd0 JUMPDEST
0xbd1 POP
0xbd2 MLOAD
0xbd3 SWAP6
0xbd4 SWAP5
0xbd5 POP
0xbd6 POP
0xbd7 POP
0xbd8 POP
0xbd9 POP
0xbda JUMP
---
0xbd0: JUMPDEST 
0xbd2: V994 = M[V987]
0xbda: JUMP 0x332
---
Entry stack: [V13, 0x332, V249, V252, V254, 0x0, V249, V987, V988]
Stack pops: 8
Stack additions: [V994]
Exit stack: [V13, V994]

================================

Block 0xbdb
[0xbdb:0xbf5]
---
Predecessors: [0x352, 0x3a5]
Successors: [0x13b, 0x3b0]
---
0xbdb JUMPDEST
0xbdc PUSH1 0x1
0xbde PUSH1 0xa0
0xbe0 PUSH1 0x2
0xbe2 EXP
0xbe3 SUB
0xbe4 AND
0xbe5 PUSH1 0x0
0xbe7 SWAP1
0xbe8 DUP2
0xbe9 MSTORE
0xbea PUSH1 0x9
0xbec PUSH1 0x20
0xbee MSTORE
0xbef PUSH1 0x40
0xbf1 SWAP1
0xbf2 SHA3
0xbf3 SLOAD
0xbf4 SWAP1
0xbf5 JUMP
---
0xbdb: JUMPDEST 
0xbdc: V995 = 0x1
0xbde: V996 = 0xa0
0xbe0: V997 = 0x2
0xbe2: V998 = EXP 0x2 0xa0
0xbe3: V999 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe4: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbe5: V1001 = 0x0
0xbe9: M[0x0] = V1000
0xbea: V1002 = 0x9
0xbec: V1003 = 0x20
0xbee: M[0x20] = 0x9
0xbef: V1004 = 0x40
0xbf2: V1005 = SHA3 0x0 0x40
0xbf3: V1006 = S[V1005]
0xbf5: JUMP {0x13b, 0x3b0}
---
Entry stack: [V13, 0x13b, S2, {0x13b, 0x3b0}, S0]
Stack pops: 2
Stack additions: [V1006]
Exit stack: [V13, 0x13b, S2, V1006]

================================

Block 0xbf6
[0xbf6:0xc3a]
---
Predecessors: [0x367]
Successors: [0x124]
---
0xbf6 JUMPDEST
0xbf7 PUSH1 0x40
0xbf9 DUP1
0xbfa MLOAD
0xbfb CALLVALUE
0xbfc DUP2
0xbfd MSTORE
0xbfe PUSH1 0x1
0xc00 PUSH1 0xa0
0xc02 PUSH1 0x2
0xc04 EXP
0xc05 SUB
0xc06 CALLER
0xc07 AND
0xc08 PUSH1 0x20
0xc0a DUP3
0xc0b ADD
0xc0c MSTORE
0xc0d DUP2
0xc0e MLOAD
0xc0f PUSH32 0x82add2011d2b1a1fad8fc5ffd954181c064e8f5198c9fcd5caa9749911ed18b9
0xc30 SWAP3
0xc31 SWAP2
0xc32 DUP2
0xc33 SWAP1
0xc34 SUB
0xc35 SWAP1
0xc36 SWAP2
0xc37 ADD
0xc38 SWAP1
0xc39 LOG1
0xc3a JUMP
---
0xbf6: JUMPDEST 
0xbf7: V1007 = 0x40
0xbfa: V1008 = M[0x40]
0xbfb: V1009 = CALLVALUE
0xbfd: M[V1008] = V1009
0xbfe: V1010 = 0x1
0xc00: V1011 = 0xa0
0xc02: V1012 = 0x2
0xc04: V1013 = EXP 0x2 0xa0
0xc05: V1014 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc06: V1015 = CALLER
0xc07: V1016 = AND V1015 0xffffffffffffffffffffffffffffffffffffffff
0xc08: V1017 = 0x20
0xc0b: V1018 = ADD V1008 0x20
0xc0c: M[V1018] = V1016
0xc0e: V1019 = M[0x40]
0xc0f: V1020 = 0x82add2011d2b1a1fad8fc5ffd954181c064e8f5198c9fcd5caa9749911ed18b9
0xc34: V1021 = SUB V1008 V1019
0xc37: V1022 = ADD 0x40 V1021
0xc39: LOG V1019 V1022 0x82add2011d2b1a1fad8fc5ffd954181c064e8f5198c9fcd5caa9749911ed18b9
0xc3a: JUMP 0x124
---
Entry stack: [V13, 0x124]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xc3b
[0xc3b:0xc40]
---
Predecessors: [0x37b]
Successors: [0x13b]
---
0xc3b JUMPDEST
0xc3c PUSH1 0x3
0xc3e SLOAD
0xc3f SWAP1
0xc40 JUMP
---
0xc3b: JUMPDEST 
0xc3c: V1023 = 0x3
0xc3e: V1024 = S[0x3]
0xc40: JUMP 0x13b
---
Entry stack: [V13, 0x13b]
Stack pops: 1
Stack additions: [V1024]
Exit stack: [V13, V1024]

================================

Block 0xc41
[0xc41:0xc52]
---
Predecessors: [0x390]
Successors: [0x13b]
---
0xc41 JUMPDEST
0xc42 PUSH1 0x9
0xc44 PUSH1 0x20
0xc46 MSTORE
0xc47 PUSH1 0x0
0xc49 SWAP1
0xc4a DUP2
0xc4b MSTORE
0xc4c PUSH1 0x40
0xc4e SWAP1
0xc4f SHA3
0xc50 SLOAD
0xc51 DUP2
0xc52 JUMP
---
0xc41: JUMPDEST 
0xc42: V1025 = 0x9
0xc44: V1026 = 0x20
0xc46: M[0x20] = 0x9
0xc47: V1027 = 0x0
0xc4b: M[0x0] = V298
0xc4c: V1028 = 0x40
0xc4f: V1029 = SHA3 0x0 0x40
0xc50: V1030 = S[V1029]
0xc52: JUMP 0x13b
---
Entry stack: [V13, 0x13b, V298]
Stack pops: 2
Stack additions: [S1, V1030]
Exit stack: [V13, 0x13b, V1030]

================================

Block 0xc53
[0xc53:0xc8d]
---
Predecessors: []
Successors: []
---
0xc53 STOP
0xc54 LOG1
0xc55 PUSH6 0x627a7a723058
0xc5c SHA3
0xc5d DIV
0xc5e CREATE2
0xc5f DUP2
0xc60 INVALID
0xc61 MSTORE8
0xc62 CALLCODE
0xc63 MISSING 0xfc
0xc64 SHR
0xc65 SWAP12
0xc66 MISSING 0xd
0xc67 PUSH1 0xcb
0xc69 XOR
0xc6a MUL
0xc6b MISSING 0xec
0xc6c JUMP
0xc6d SWAP10
0xc6e MISSING 0xcf
0xc6f MISSING 0xb3
0xc70 MISSING 0xb5
0xc71 PUSH28 0xffd25dbd167999d7ce073e0029
---
0xc53: STOP 
0xc54: LOG S0 S1 S2
0xc55: V1031 = 0x627a7a723058
0xc5c: V1032 = SHA3 0x627a7a723058 S3
0xc5d: V1033 = DIV V1032 S4
0xc5e: V1034 = CREATE2 V1033 S5 S6 S7
0xc60: INVALID 
0xc61: M8[S0] = S1
0xc62: V1035 = CALLCODE S2 S3 S4 S5 S6 S7 S8
0xc63: MISSING 0xfc
0xc64: V1036 = SHR S0 S1
0xc66: MISSING 0xd
0xc67: V1037 = 0xcb
0xc69: V1038 = XOR 0xcb S0
0xc6a: V1039 = MUL V1038 S1
0xc6b: MISSING 0xec
0xc6c: JUMP S0
0xc6e: MISSING 0xcf
0xc6f: MISSING 0xb3
0xc70: MISSING 0xb5
0xc71: V1040 = 0xffd25dbd167999d7ce073e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S8, V1034, S8, V1035, S13, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V1036, V1039, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, 0xffd25dbd167999d7ce073e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa44b9cf
Entry block: 0x126
Exit block: 0x13b
Body: 0x126, 0x12e, 0x132, 0x13b, 0x3a5, 0x3b0

Function 1:
Public function signature: 0x1b3ed722
Entry block: 0x14d
Exit block: 0x13b
Body: 0x13b, 0x14d, 0x155, 0x159, 0x3b5

Function 2:
Public function signature: 0x2ca8cbd0
Entry block: 0x162
Exit block: 0x124
Body: 0x124, 0x162, 0x16a, 0x16e, 0x3bb, 0x3d2, 0x3d6, 0x429, 0x42d, 0x438, 0x441

Function 3:
Public function signature: 0x3151ecfc
Entry block: 0x177
Exit block: 0x17f
Body: 0x13b, 0x177, 0x17f, 0x183

Function 4:
Public function signature: 0x35c1d349
Entry block: 0x18c
Exit block: 0x1a4
Body: 0x18c, 0x194, 0x198, 0x1a4, 0x4e4, 0x4f1, 0x4f2

Function 5:
Public function signature: 0x39af0513
Entry block: 0x1c7
Exit block: 0x13b
Body: 0x13b, 0x1c7, 0x1cf, 0x1d3, 0x51a

Function 6:
Public function signature: 0x3ccfd60b
Entry block: 0x1dc
Exit block: 0x1e4
Body: 0x124, 0x1dc, 0x1e4, 0x1e8

Function 7:
Public function signature: 0x3febb070
Entry block: 0x1f1
Exit block: 0x13b
Body: 0x13b, 0x1f1, 0x1f9, 0x1fd, 0x5f5

Function 8:
Public function signature: 0x5f504a82
Entry block: 0x206
Exit block: 0x21b
Body: 0x206, 0x20e, 0x212, 0x21b, 0x5fb

Function 9:
Public function signature: 0x63bd1d4a
Entry block: 0x237
Exit block: 0x124
Body: 0x124, 0x237, 0x23f, 0x243

Function 10:
Public function signature: 0x6cff6f9d
Entry block: 0x24c
Exit block: 0x13b
Body: 0x13b, 0x24c, 0x254, 0x258, 0x8b4

Function 11:
Public function signature: 0x79ba5097
Entry block: 0x261
Exit block: 0x124
Body: 0x124, 0x261, 0x269, 0x26d, 0x8ba, 0x8d1, 0x8d5

Function 12:
Public function signature: 0x8da5cb5b
Entry block: 0x276
Exit block: 0x21b
Body: 0x21b, 0x276, 0x27e, 0x282, 0x906

Function 13:
Public function signature: 0x949e8acd
Entry block: 0x28b
Exit block: 0x124
Body: 0x124, 0x28b, 0x293, 0x297, 0x915, 0x970

Function 14:
Public function signature: 0x997664d7
Entry block: 0x2a0
Exit block: 0x13b
Body: 0x13b, 0x2a0, 0x2a8, 0x2ac, 0x974

Function 15:
Public function signature: 0xa0ca0a57
Entry block: 0x2b5
Exit block: 0x13b
Body: 0x13b, 0x2b5, 0x2bd, 0x2c1, 0x97a

Function 16:
Public function signature: 0xa26dbf26
Entry block: 0x2ca
Exit block: 0x13b
Body: 0x13b, 0x2ca, 0x2d2, 0x2d6, 0x984

Function 17:
Public function signature: 0xa6f9dae1
Entry block: 0x2df
Exit block: 0x124
Body: 0x124, 0x2df, 0x2e7, 0x2eb, 0x98a, 0x9a1, 0x9a5

Function 18:
Public function signature: 0xd0e30db0
Entry block: 0x300
Exit block: 0x124
Body: 0x124, 0x300, 0x9d4, 0x9e1, 0x9e5, 0xaf1, 0xaf8, 0xaff, 0xb07

Function 19:
Public function signature: 0xd493b9ac
Entry block: 0x308
Exit block: 0x332
Body: 0x308, 0x310, 0x314, 0x332, 0xb0a, 0xb22, 0xb26, 0xb3f, 0xb43, 0xba2, 0xba6, 0xbb1, 0xbba, 0xbcc, 0xbd0

Function 20:
Public function signature: 0xe5cf2297
Entry block: 0x346
Exit block: 0x34e
Body: 0x13b, 0x346, 0x34e, 0x352

Function 21:
Public function signature: 0xed88c68e
Entry block: 0x367
Exit block: 0x124
Body: 0x124, 0x367, 0xbf6

Function 22:
Public function signature: 0xfb346eab
Entry block: 0x36f
Exit block: 0x13b
Body: 0x13b, 0x36f, 0x377, 0x37b, 0xc3b

Function 23:
Public function signature: 0xff5d18ca
Entry block: 0x384
Exit block: 0x13b
Body: 0x13b, 0x384, 0x38c, 0x390, 0xc41

Function 24:
Public fallback function
Entry block: 0x124
Exit block: 0x124
Body: 0x124

Function 25:
Private function
Entry block: 0x60a
Exit block: 0x8af
Body: 0x60a, 0x625, 0x660, 0x66a, 0x67a, 0x693, 0x6a3, 0x6ba, 0x6bc, 0x6c8, 0x6ef, 0x732, 0x761, 0x799, 0x7cb, 0x804, 0x82a, 0x86c, 0x887, 0x891, 0x89a, 0x8a6, 0x8aa, 0x8af

Function 26:
Private function
Entry block: 0x448
Exit block: 0x4dd
Body: 0x448, 0x4b3, 0x4c7, 0x4dd

Function 27:
Private function
Entry block: 0x520
Exit block: 0x59d
Body: 0x520, 0x589, 0x59d

