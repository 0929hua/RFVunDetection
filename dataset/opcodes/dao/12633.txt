Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x45]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xb95460f8
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x45
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xb95460f8
0x3b: V13 = EQ V11 0xb95460f8
0x3c: V14 = 0x45
0x3f: JUMPI 0x45 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x44]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x40 JUMPDEST
0x41 PUSH1 0x0
0x43 DUP1
0x44 REVERT
---
0x40: JUMPDEST 
0x41: V15 = 0x0
0x44: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x45
[0x45:0x65]
---
Predecessors: [0xd]
Successors: [0x68]
---
0x45 JUMPDEST
0x46 PUSH2 0x66
0x49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e PUSH1 0x4
0x60 CALLDATALOAD
0x61 AND
0x62 PUSH2 0x68
0x65 JUMP
---
0x45: JUMPDEST 
0x46: V16 = 0x66
0x49: V17 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e: V18 = 0x4
0x60: V19 = CALLDATALOAD 0x4
0x61: V20 = AND V19 0xffffffffffffffffffffffffffffffffffffffff
0x62: V21 = 0x68
0x65: JUMP 0x68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x66, V20]
Exit stack: [V11, 0x66, V20]

================================

Block 0x66
[0x66:0x67]
---
Predecessors: [0xab]
Successors: []
---
0x66 JUMPDEST
0x67 STOP
---
0x66: JUMPDEST 
0x67: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x68
[0x68:0x71]
---
Predecessors: [0x45]
Successors: [0xc6]
---
0x68 JUMPDEST
0x69 CALLVALUE
0x6a DUP2
0x6b PUSH2 0x72
0x6e PUSH2 0xc6
0x71 JUMP
---
0x68: JUMPDEST 
0x69: V22 = CALLVALUE
0x6b: V23 = 0x72
0x6e: V24 = 0xc6
0x71: JUMP 0xc6
---
Entry stack: [V11, 0x66, V20]
Stack pops: 1
Stack additions: [S0, V22, S0, 0x72]
Exit stack: [V11, 0x66, V20, V22, V20, 0x72]

================================

Block 0x72
[0x72:0xa1]
---
Predecessors: [0xc6]
Successors: [0xa2, 0xab]
---
0x72 JUMPDEST
0x73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88 SWAP1
0x89 SWAP2
0x8a AND
0x8b DUP2
0x8c MSTORE
0x8d PUSH1 0x40
0x8f MLOAD
0x90 SWAP1
0x91 DUP2
0x92 SWAP1
0x93 SUB
0x94 PUSH1 0x20
0x96 ADD
0x97 SWAP1
0x98 DUP3
0x99 CREATE
0x9a DUP1
0x9b ISZERO
0x9c DUP1
0x9d ISZERO
0x9e PUSH2 0xab
0xa1 JUMPI
---
0x72: JUMPDEST 
0x73: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V26 = AND V20 0xffffffffffffffffffffffffffffffffffffffff
0x8c: M[V52] = V26
0x8d: V27 = 0x40
0x8f: V28 = M[0x40]
0x93: V29 = SUB V52 V28
0x94: V30 = 0x20
0x96: V31 = ADD 0x20 V29
0x99: V32 = CREATE V22 V28 V31
0x9b: V33 = ISZERO V32
0x9d: V34 = ISZERO V33
0x9e: V35 = 0xab
0xa1: JUMPI 0xab V34
---
Entry stack: [V11, 0x66, V20, V22, V20, V52]
Stack pops: 3
Stack additions: [S2, V32, V33]
Exit stack: [V11, 0x66, V20, V22, V32, V33]

================================

Block 0xa2
[0xa2:0xaa]
---
Predecessors: [0x72]
Successors: []
---
0xa2 RETURNDATASIZE
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 RETURNDATACOPY
0xa7 RETURNDATASIZE
0xa8 PUSH1 0x0
0xaa REVERT
---
0xa2: V36 = RETURNDATASIZE
0xa3: V37 = 0x0
0xa6: RETURNDATACOPY 0x0 0x0 V36
0xa7: V38 = RETURNDATASIZE
0xa8: V39 = 0x0
0xaa: REVERT 0x0 V38
---
Entry stack: [V11, 0x66, V20, V22, V32, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, V20, V22, V32, V33]

================================

Block 0xab
[0xab:0xc5]
---
Predecessors: [0x72]
Successors: [0x66]
---
0xab JUMPDEST
0xac POP
0xad POP
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 CALLER
0xb2 SWAP2
0xb3 POP
0xb4 ADDRESS
0xb5 BALANCE
0xb6 SWAP1
0xb7 PUSH1 0x0
0xb9 DUP2
0xba DUP2
0xbb DUP2
0xbc DUP6
0xbd DUP8
0xbe GAS
0xbf CALL
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 POP
0xc5 JUMP
---
0xab: JUMPDEST 
0xae: V40 = 0x40
0xb0: V41 = M[0x40]
0xb1: V42 = CALLER
0xb4: V43 = ADDRESS
0xb5: V44 = BALANCE V43
0xb7: V45 = 0x0
0xbe: V46 = GAS
0xbf: V47 = CALL V46 V42 V44 V41 0x0 V41 0x0
0xc5: JUMP 0x66
---
Entry stack: [V11, 0x66, V20, V22, V32, V33]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xd4]
---
Predecessors: [0x68]
Successors: [0x72]
---
0xc6 JUMPDEST
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca PUSH1 0xa7
0xcc DUP1
0xcd PUSH2 0xd6
0xd0 DUP4
0xd1 CODECOPY
0xd2 ADD
0xd3 SWAP1
0xd4 JUMP
---
0xc6: JUMPDEST 
0xc7: V48 = 0x40
0xc9: V49 = M[0x40]
0xca: V50 = 0xa7
0xcd: V51 = 0xd6
0xd1: CODECOPY V49 0xd6 0xa7
0xd2: V52 = ADD 0xa7 V49
0xd4: JUMP 0x72
---
Entry stack: [V11, 0x66, V20, V22, V20, 0x72]
Stack pops: 1
Stack additions: [V52]
Exit stack: [V11, 0x66, V20, V22, V20, V52]

================================

Block 0xd5
[0xd5:0x15c]
---
Predecessors: []
Successors: [0x15d]
---
0xd5 STOP
0xd6 PUSH1 0x80
0xd8 PUSH1 0x40
0xda MSTORE
0xdb PUSH1 0x40
0xdd MLOAD
0xde PUSH1 0x20
0xe0 DUP1
0xe1 PUSH1 0xa7
0xe3 DUP4
0xe4 CODECOPY
0xe5 DUP2
0xe6 ADD
0xe7 PUSH1 0x40
0xe9 DUP2
0xea SWAP1
0xeb MSTORE
0xec SWAP1
0xed MLOAD
0xee SWAP1
0xef DUP2
0xf0 SWAP1
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 DUP3
0xfa AND
0xfb SWAP1
0xfc CALLVALUE
0xfd SWAP1
0xfe PUSH1 0x0
0x100 DUP2
0x101 DUP2
0x102 DUP2
0x103 DUP6
0x104 DUP8
0x105 GAS
0x106 CALL
0x107 SWAP3
0x108 POP
0x109 POP
0x10a POP
0x10b POP
0x10c DUP1
0x10d PUSH1 0x1
0x10f PUSH1 0xa0
0x111 PUSH1 0x2
0x113 EXP
0x114 SUB
0x115 AND
0x116 PUSH4 0x3ccfd60b
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP2
0x11f PUSH4 0xffffffff
0x124 AND
0x125 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x143 MUL
0x144 DUP2
0x145 MSTORE
0x146 PUSH1 0x4
0x148 ADD
0x149 PUSH1 0x0
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f DUP4
0x150 SUB
0x151 DUP2
0x152 PUSH1 0x0
0x154 DUP8
0x155 DUP1
0x156 EXTCODESIZE
0x157 ISZERO
0x158 DUP1
0x159 ISZERO
0x15a PUSH1 0x8b
0x15c JUMPI
---
0xd5: STOP 
0xd6: V53 = 0x80
0xd8: V54 = 0x40
0xda: M[0x40] = 0x80
0xdb: V55 = 0x40
0xdd: V56 = M[0x40]
0xde: V57 = 0x20
0xe1: V58 = 0xa7
0xe4: CODECOPY V56 0xa7 0x20
0xe6: V59 = ADD V56 0x20
0xe7: V60 = 0x40
0xeb: M[0x40] = V59
0xed: V61 = M[V56]
0xf1: V62 = 0x1
0xf3: V63 = 0xa0
0xf5: V64 = 0x2
0xf7: V65 = EXP 0x2 0xa0
0xf8: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa: V67 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V68 = CALLVALUE
0xfe: V69 = 0x0
0x105: V70 = GAS
0x106: V71 = CALL V70 V67 V68 V59 0x0 V59 0x0
0x10d: V72 = 0x1
0x10f: V73 = 0xa0
0x111: V74 = 0x2
0x113: V75 = EXP 0x2 0xa0
0x114: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0x115: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x116: V78 = 0x3ccfd60b
0x11b: V79 = 0x40
0x11d: V80 = M[0x40]
0x11f: V81 = 0xffffffff
0x124: V82 = AND 0xffffffff 0x3ccfd60b
0x125: V83 = 0x100000000000000000000000000000000000000000000000000000000
0x143: V84 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x145: M[V80] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x146: V85 = 0x4
0x148: V86 = ADD 0x4 V80
0x149: V87 = 0x0
0x14b: V88 = 0x40
0x14d: V89 = M[0x40]
0x150: V90 = SUB V86 V89
0x152: V91 = 0x0
0x156: V92 = EXTCODESIZE V77
0x157: V93 = ISZERO V92
0x159: V94 = ISZERO V93
0x15a: V95 = 0x8b
0x15c: THROWI V94
---
Entry stack: []
Stack pops: 0
Stack additions: [V93, V77, 0x0, V89, V90, V89, 0x0, V86, 0x3ccfd60b, V77, V61, V61]
Exit stack: []

================================

Block 0x15d
[0x15d:0x16a]
---
Predecessors: [0xd5]
Successors: [0x16b]
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
0x161 JUMPDEST
0x162 POP
0x163 GAS
0x164 CALL
0x165 ISZERO
0x166 DUP1
0x167 ISZERO
0x168 PUSH1 0x9e
0x16a JUMPI
---
0x15d: V96 = 0x0
0x160: REVERT 0x0 0x0
0x161: JUMPDEST 
0x163: V97 = GAS
0x164: V98 = CALL V97 S1 S2 S3 S4 S5 S6
0x165: V99 = ISZERO V98
0x167: V100 = ISZERO V99
0x168: V101 = 0x9e
0x16a: THROWI V100
---
Entry stack: [V61, V61, V77, 0x3ccfd60b, V86, 0x0, V89, V90, V89, 0x0, V77, V93]
Stack pops: 0
Stack additions: [V99]
Exit stack: []

================================

Block 0x16b
[0x16b:0x1b3]
---
Predecessors: [0x15d]
Successors: []
---
0x16b RETURNDATASIZE
0x16c PUSH1 0x0
0x16e DUP1
0x16f RETURNDATACOPY
0x170 RETURNDATASIZE
0x171 PUSH1 0x0
0x173 REVERT
0x174 JUMPDEST
0x175 POP
0x176 CALLER
0x177 SWAP3
0x178 POP
0x179 POP
0x17a POP
0x17b SELFDESTRUCT
0x17c STOP
0x17d LOG1
0x17e PUSH6 0x627a7a723058
0x185 SHA3
0x186 MISSING 0xb8
0x187 SUB
0x188 PUSH21 0x4fb036fd2a28e88382516a3d1376c3f4a884373bd0
0x19e MISSING 0xf8
0x19f PUSH20 0x185e6b7652c60029
---
0x16b: V102 = RETURNDATASIZE
0x16c: V103 = 0x0
0x16f: RETURNDATACOPY 0x0 0x0 V102
0x170: V104 = RETURNDATASIZE
0x171: V105 = 0x0
0x173: REVERT 0x0 V104
0x174: JUMPDEST 
0x176: V106 = CALLER
0x17b: SELFDESTRUCT V106
0x17c: STOP 
0x17d: LOG S0 S1 S2
0x17e: V107 = 0x627a7a723058
0x185: V108 = SHA3 0x627a7a723058 S3
0x186: MISSING 0xb8
0x187: V109 = SUB S0 S1
0x188: V110 = 0x4fb036fd2a28e88382516a3d1376c3f4a884373bd0
0x19e: MISSING 0xf8
0x19f: V111 = 0x185e6b7652c60029
---
Entry stack: [V99]
Stack pops: 0
Stack additions: [V108, 0x4fb036fd2a28e88382516a3d1376c3f4a884373bd0, V109, 0x185e6b7652c60029]
Exit stack: []

================================

Function 0:
Public function signature: 0xb95460f8
Entry block: 0x45
Exit block: 0x66
Body: 0x45, 0x66, 0x68, 0x72, 0xa2, 0xab, 0xc6

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0x40
Body: 0x40

