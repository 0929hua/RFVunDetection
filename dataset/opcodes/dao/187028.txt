Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x76]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2e1a7d4d
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x76
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2e1a7d4d
0x3b: V13 = EQ V11 0x2e1a7d4d
0x3c: V14 = 0x76
0x3f: JUMPI 0x76 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x90]
---
0x40 DUP1
0x41 PUSH4 0x4506e935
0x46 EQ
0x47 PUSH2 0x90
0x4a JUMPI
---
0x41: V15 = 0x4506e935
0x46: V16 = EQ 0x4506e935 V11
0x47: V17 = 0x90
0x4a: JUMPI 0x90 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xb7]
---
0x4b DUP1
0x4c PUSH4 0x853828b6
0x51 EQ
0x52 PUSH2 0xb7
0x55 JUMPI
---
0x4c: V18 = 0x853828b6
0x51: V19 = EQ 0x853828b6 V11
0x52: V20 = 0xb7
0x55: JUMPI 0xb7 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xcc]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0xcc
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0xcc
0x60: JUMPI 0xcc V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xfd]
---
0x61 DUP1
0x62 PUSH4 0xee4ae2c9
0x67 EQ
0x68 PUSH2 0xfd
0x6b JUMPI
---
0x62: V24 = 0xee4ae2c9
0x67: V25 = EQ 0xee4ae2c9 V11
0x68: V26 = 0xfd
0x6b: JUMPI 0xfd V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x75]
---
Predecessors: [0x0, 0x61]
Successors: []
---
0x6c JUMPDEST
0x6d PUSH1 0x1
0x6f DUP1
0x70 SLOAD
0x71 DUP2
0x72 ADD
0x73 SWAP1
0x74 SSTORE
0x75 STOP
---
0x6c: JUMPDEST 
0x6d: V27 = 0x1
0x70: V28 = S[0x1]
0x72: V29 = ADD 0x1 V28
0x74: S[0x1] = V29
0x75: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x7d]
---
Predecessors: [0xd]
Successors: [0x7e, 0x82]
---
0x76 JUMPDEST
0x77 CALLVALUE
0x78 DUP1
0x79 ISZERO
0x7a PUSH2 0x82
0x7d JUMPI
---
0x76: JUMPDEST 
0x77: V30 = CALLVALUE
0x79: V31 = ISZERO V30
0x7a: V32 = 0x82
0x7d: JUMPI 0x82 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x76]
Successors: []
---
0x7e PUSH1 0x0
0x80 DUP1
0x81 REVERT
---
0x7e: V33 = 0x0
0x81: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x82
[0x82:0x8d]
---
Predecessors: [0x76]
Successors: [0x121]
---
0x82 JUMPDEST
0x83 POP
0x84 PUSH2 0x8e
0x87 PUSH1 0x4
0x89 CALLDATALOAD
0x8a PUSH2 0x121
0x8d JUMP
---
0x82: JUMPDEST 
0x84: V34 = 0x8e
0x87: V35 = 0x4
0x89: V36 = CALLDATALOAD 0x4
0x8a: V37 = 0x121
0x8d: JUMP 0x121
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x8e, V36]
Exit stack: [V11, 0x8e, V36]

================================

Block 0x8e
[0x8e:0x8f]
---
Predecessors: [0x165, 0x190, 0x1b8]
Successors: []
---
0x8e JUMPDEST
0x8f STOP
---
0x8e: JUMPDEST 
0x8f: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x90
[0x90:0x97]
---
Predecessors: [0x40]
Successors: [0x98, 0x9c]
---
0x90 JUMPDEST
0x91 CALLVALUE
0x92 DUP1
0x93 ISZERO
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x90: JUMPDEST 
0x91: V38 = CALLVALUE
0x93: V39 = ISZERO V38
0x94: V40 = 0x9c
0x97: JUMPI 0x9c V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V11, V38]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x90]
Successors: []
---
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x98: V41 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V11, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V38]

================================

Block 0x9c
[0x9c:0xa4]
---
Predecessors: [0x90]
Successors: [0x169]
---
0x9c JUMPDEST
0x9d POP
0x9e PUSH2 0xa5
0xa1 PUSH2 0x169
0xa4 JUMP
---
0x9c: JUMPDEST 
0x9e: V42 = 0xa5
0xa1: V43 = 0x169
0xa4: JUMP 0x169
---
Entry stack: [V11, V38]
Stack pops: 1
Stack additions: [0xa5]
Exit stack: [V11, 0xa5]

================================

Block 0xa5
[0xa5:0xb6]
---
Predecessors: [0x169]
Successors: []
---
0xa5 JUMPDEST
0xa6 PUSH1 0x40
0xa8 DUP1
0xa9 MLOAD
0xaa SWAP2
0xab DUP3
0xac MSTORE
0xad MLOAD
0xae SWAP1
0xaf DUP2
0xb0 SWAP1
0xb1 SUB
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 SWAP1
0xb6 RETURN
---
0xa5: JUMPDEST 
0xa6: V44 = 0x40
0xa9: V45 = M[0x40]
0xac: M[V45] = V118
0xad: V46 = M[0x40]
0xb1: V47 = SUB V45 V46
0xb2: V48 = 0x20
0xb4: V49 = ADD 0x20 V47
0xb6: RETURN V46 V49
---
Entry stack: [V11, 0xa5, V118]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa5]

================================

Block 0xb7
[0xb7:0xbe]
---
Predecessors: [0x4b]
Successors: [0xbf, 0xc3]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 DUP1
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb7: JUMPDEST 
0xb8: V50 = CALLVALUE
0xba: V51 = ISZERO V50
0xbb: V52 = 0xc3
0xbe: JUMPI 0xc3 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb7]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V53 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xc3
[0xc3:0xcb]
---
Predecessors: [0xb7]
Successors: [0x16f]
---
0xc3 JUMPDEST
0xc4 POP
0xc5 PUSH2 0x8e
0xc8 PUSH2 0x16f
0xcb JUMP
---
0xc3: JUMPDEST 
0xc5: V54 = 0x8e
0xc8: V55 = 0x16f
0xcb: JUMP 0x16f
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0x8e]
Exit stack: [V11, 0x8e]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0x56]
Successors: [0xd4, 0xd8]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce DUP1
0xcf ISZERO
0xd0 PUSH2 0xd8
0xd3 JUMPI
---
0xcc: JUMPDEST 
0xcd: V56 = CALLVALUE
0xcf: V57 = ISZERO V56
0xd0: V58 = 0xd8
0xd3: JUMPI 0xd8 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V11, V56]

================================

Block 0xd4
[0xd4:0xd7]
---
Predecessors: [0xcc]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
---
0xd4: V59 = 0x0
0xd7: REVERT 0x0 0x0
---
Entry stack: [V11, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56]

================================

Block 0xd8
[0xd8:0xe0]
---
Predecessors: [0xcc]
Successors: [0x192]
---
0xd8 JUMPDEST
0xd9 POP
0xda PUSH2 0xe1
0xdd PUSH2 0x192
0xe0 JUMP
---
0xd8: JUMPDEST 
0xda: V60 = 0xe1
0xdd: V61 = 0x192
0xe0: JUMP 0x192
---
Entry stack: [V11, V56]
Stack pops: 1
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0xe1
[0xe1:0xfc]
---
Predecessors: [0x192]
Successors: []
---
0xe1 JUMPDEST
0xe2 PUSH1 0x40
0xe4 DUP1
0xe5 MLOAD
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee SWAP1
0xef SWAP3
0xf0 AND
0xf1 DUP3
0xf2 MSTORE
0xf3 MLOAD
0xf4 SWAP1
0xf5 DUP2
0xf6 SWAP1
0xf7 SUB
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP1
0xfc RETURN
---
0xe1: JUMPDEST 
0xe2: V62 = 0x40
0xe5: V63 = M[0x40]
0xe6: V64 = 0x1
0xe8: V65 = 0xa0
0xea: V66 = 0x2
0xec: V67 = EXP 0x2 0xa0
0xed: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V69 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0xf2: M[V63] = V69
0xf3: V70 = M[0x40]
0xf7: V71 = SUB V63 V70
0xf8: V72 = 0x20
0xfa: V73 = ADD 0x20 V71
0xfc: RETURN V70 V73
---
Entry stack: [V11, 0xe1, V142]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0xfd
[0xfd:0x104]
---
Predecessors: [0x61]
Successors: [0x105, 0x109]
---
0xfd JUMPDEST
0xfe CALLVALUE
0xff DUP1
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xfd: JUMPDEST 
0xfe: V74 = CALLVALUE
0x100: V75 = ISZERO V74
0x101: V76 = 0x109
0x104: JUMPI 0x109 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V74]
Exit stack: [V11, V74]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xfd]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V77 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V11, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V74]

================================

Block 0x109
[0x109:0x120]
---
Predecessors: [0xfd]
Successors: [0x1a1]
---
0x109 JUMPDEST
0x10a POP
0x10b PUSH2 0x8e
0x10e PUSH1 0x1
0x110 PUSH1 0xa0
0x112 PUSH1 0x2
0x114 EXP
0x115 SUB
0x116 PUSH1 0x4
0x118 CALLDATALOAD
0x119 AND
0x11a PUSH1 0x24
0x11c CALLDATALOAD
0x11d PUSH2 0x1a1
0x120 JUMP
---
0x109: JUMPDEST 
0x10b: V78 = 0x8e
0x10e: V79 = 0x1
0x110: V80 = 0xa0
0x112: V81 = 0x2
0x114: V82 = EXP 0x2 0xa0
0x115: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0x116: V84 = 0x4
0x118: V85 = CALLDATALOAD 0x4
0x119: V86 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0x11a: V87 = 0x24
0x11c: V88 = CALLDATALOAD 0x24
0x11d: V89 = 0x1a1
0x120: JUMP 0x1a1
---
Entry stack: [V11, V74]
Stack pops: 1
Stack additions: [0x8e, V86, V88]
Exit stack: [V11, 0x8e, V86, V88]

================================

Block 0x121
[0x121:0x133]
---
Predecessors: [0x82, 0x186]
Successors: [0x134, 0x138]
---
0x121 JUMPDEST
0x122 PUSH1 0x0
0x124 SLOAD
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d AND
0x12e CALLER
0x12f EQ
0x130 PUSH2 0x138
0x133 JUMPI
---
0x121: JUMPDEST 
0x122: V90 = 0x0
0x124: V91 = S[0x0]
0x125: V92 = 0x1
0x127: V93 = 0xa0
0x129: V94 = 0x2
0x12b: V95 = EXP 0x2 0xa0
0x12c: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x12e: V98 = CALLER
0x12f: V99 = EQ V98 V97
0x130: V100 = 0x138
0x133: JUMPI 0x138 V99
---
Entry stack: [V11, S2, {0x8e, 0x190}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, {0x8e, 0x190}, S0]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x121]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V101 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V11, S2, {0x8e, 0x190}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, {0x8e, 0x190}, S0]

================================

Block 0x138
[0x138:0x15b]
---
Predecessors: [0x121]
Successors: [0x15c, 0x165]
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c CALLER
0x13d SWAP1
0x13e DUP3
0x13f ISZERO
0x140 PUSH2 0x8fc
0x143 MUL
0x144 SWAP1
0x145 DUP4
0x146 SWAP1
0x147 PUSH1 0x0
0x149 DUP2
0x14a DUP2
0x14b DUP2
0x14c DUP6
0x14d DUP9
0x14e DUP9
0x14f CALL
0x150 SWAP4
0x151 POP
0x152 POP
0x153 POP
0x154 POP
0x155 ISZERO
0x156 DUP1
0x157 ISZERO
0x158 PUSH2 0x165
0x15b JUMPI
---
0x138: JUMPDEST 
0x139: V102 = 0x40
0x13b: V103 = M[0x40]
0x13c: V104 = CALLER
0x13f: V105 = ISZERO S0
0x140: V106 = 0x8fc
0x143: V107 = MUL 0x8fc V105
0x147: V108 = 0x0
0x14f: V109 = CALL V107 V104 S0 V103 0x0 V103 0x0
0x155: V110 = ISZERO V109
0x157: V111 = ISZERO V110
0x158: V112 = 0x165
0x15b: JUMPI 0x165 V111
---
Entry stack: [V11, S2, {0x8e, 0x190}, S0]
Stack pops: 1
Stack additions: [S0, V110]
Exit stack: [V11, S2, {0x8e, 0x190}, S0, V110]

================================

Block 0x15c
[0x15c:0x164]
---
Predecessors: [0x138]
Successors: []
---
0x15c RETURNDATASIZE
0x15d PUSH1 0x0
0x15f DUP1
0x160 RETURNDATACOPY
0x161 RETURNDATASIZE
0x162 PUSH1 0x0
0x164 REVERT
---
0x15c: V113 = RETURNDATASIZE
0x15d: V114 = 0x0
0x160: RETURNDATACOPY 0x0 0x0 V113
0x161: V115 = RETURNDATASIZE
0x162: V116 = 0x0
0x164: REVERT 0x0 V115
---
Entry stack: [V11, S3, {0x8e, 0x190}, S1, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S3, {0x8e, 0x190}, S1, V110]

================================

Block 0x165
[0x165:0x168]
---
Predecessors: [0x138]
Successors: [0x8e, 0x190]
---
0x165 JUMPDEST
0x166 POP
0x167 POP
0x168 JUMP
---
0x165: JUMPDEST 
0x168: JUMP {0x8e, 0x190}
---
Entry stack: [V11, S3, {0x8e, 0x190}, S1, V110]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S3]

================================

Block 0x169
[0x169:0x16e]
---
Predecessors: [0x9c]
Successors: [0xa5]
---
0x169 JUMPDEST
0x16a PUSH1 0x1
0x16c SLOAD
0x16d DUP2
0x16e JUMP
---
0x169: JUMPDEST 
0x16a: V117 = 0x1
0x16c: V118 = S[0x1]
0x16e: JUMP 0xa5
---
Entry stack: [V11, 0xa5]
Stack pops: 1
Stack additions: [S0, V118]
Exit stack: [V11, 0xa5, V118]

================================

Block 0x16f
[0x16f:0x181]
---
Predecessors: [0xc3]
Successors: [0x182, 0x186]
---
0x16f JUMPDEST
0x170 PUSH1 0x0
0x172 SLOAD
0x173 PUSH1 0x1
0x175 PUSH1 0xa0
0x177 PUSH1 0x2
0x179 EXP
0x17a SUB
0x17b AND
0x17c CALLER
0x17d EQ
0x17e PUSH2 0x186
0x181 JUMPI
---
0x16f: JUMPDEST 
0x170: V119 = 0x0
0x172: V120 = S[0x0]
0x173: V121 = 0x1
0x175: V122 = 0xa0
0x177: V123 = 0x2
0x179: V124 = EXP 0x2 0xa0
0x17a: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x17c: V127 = CALLER
0x17d: V128 = EQ V127 V126
0x17e: V129 = 0x186
0x181: JUMPI 0x186 V128
---
Entry stack: [V11, 0x8e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e]

================================

Block 0x182
[0x182:0x185]
---
Predecessors: [0x16f]
Successors: []
---
0x182 PUSH1 0x0
0x184 DUP1
0x185 REVERT
---
0x182: V130 = 0x0
0x185: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e]

================================

Block 0x186
[0x186:0x18f]
---
Predecessors: [0x16f]
Successors: [0x121]
---
0x186 JUMPDEST
0x187 PUSH2 0x190
0x18a ADDRESS
0x18b BALANCE
0x18c PUSH2 0x121
0x18f JUMP
---
0x186: JUMPDEST 
0x187: V131 = 0x190
0x18a: V132 = ADDRESS
0x18b: V133 = BALANCE V132
0x18c: V134 = 0x121
0x18f: JUMP 0x121
---
Entry stack: [V11, 0x8e]
Stack pops: 0
Stack additions: [0x190, V133]
Exit stack: [V11, 0x8e, 0x190, V133]

================================

Block 0x190
[0x190:0x191]
---
Predecessors: [0x165]
Successors: [0x8e]
---
0x190 JUMPDEST
0x191 JUMP
---
0x190: JUMPDEST 
0x191: JUMP S0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x192
[0x192:0x1a0]
---
Predecessors: [0xd8]
Successors: [0xe1]
---
0x192 JUMPDEST
0x193 PUSH1 0x0
0x195 SLOAD
0x196 PUSH1 0x1
0x198 PUSH1 0xa0
0x19a PUSH1 0x2
0x19c EXP
0x19d SUB
0x19e AND
0x19f DUP2
0x1a0 JUMP
---
0x192: JUMPDEST 
0x193: V135 = 0x0
0x195: V136 = S[0x0]
0x196: V137 = 0x1
0x198: V138 = 0xa0
0x19a: V139 = 0x2
0x19c: V140 = EXP 0x2 0xa0
0x19d: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19e: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x1a0: JUMP 0xe1
---
Entry stack: [V11, 0xe1]
Stack pops: 1
Stack additions: [S0, V142]
Exit stack: [V11, 0xe1, V142]

================================

Block 0x1a1
[0x1a1:0x1b3]
---
Predecessors: [0x109]
Successors: [0x1b4, 0x1b8]
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x0
0x1a4 SLOAD
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0xa0
0x1a9 PUSH1 0x2
0x1ab EXP
0x1ac SUB
0x1ad AND
0x1ae CALLER
0x1af EQ
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V143 = 0x0
0x1a4: V144 = S[0x0]
0x1a5: V145 = 0x1
0x1a7: V146 = 0xa0
0x1a9: V147 = 0x2
0x1ab: V148 = EXP 0x2 0xa0
0x1ac: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x1ae: V151 = CALLER
0x1af: V152 = EQ V151 V150
0x1b0: V153 = 0x1b8
0x1b3: JUMPI 0x1b8 V152
---
Entry stack: [V11, 0x8e, V86, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e, V86, V88]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1a1]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V154 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8e, V86, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e, V86, V88]

================================

Block 0x1b8
[0x1b8:0x1d8]
---
Predecessors: [0x1a1]
Successors: [0x8e]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 DUP4
0x1c5 AND
0x1c6 SWAP1
0x1c7 DUP3
0x1c8 SWAP1
0x1c9 PUSH1 0x0
0x1cb DUP2
0x1cc DUP2
0x1cd DUP2
0x1ce DUP6
0x1cf DUP8
0x1d0 GAS
0x1d1 CALL
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 JUMP
---
0x1b8: JUMPDEST 
0x1b9: V155 = 0x40
0x1bb: V156 = M[0x40]
0x1bc: V157 = 0x1
0x1be: V158 = 0xa0
0x1c0: V159 = 0x2
0x1c2: V160 = EXP 0x2 0xa0
0x1c3: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V162 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x1c9: V163 = 0x0
0x1d0: V164 = GAS
0x1d1: V165 = CALL V164 V162 V88 V156 0x0 V156 0x0
0x1d8: JUMP 0x8e
---
Entry stack: [V11, 0x8e, V86, V88]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d9
[0x1d9:0x204]
---
Predecessors: []
Successors: []
---
0x1d9 STOP
0x1da LOG1
0x1db PUSH6 0x627a7a723058
0x1e2 SHA3
0x1e3 NUMBER
0x1e4 MISSING 0x4f
0x1e5 SWAP8
0x1e6 MISSING 0x28
0x1e7 MISSING 0xd9
0x1e8 MISSING 0xda
0x1e9 MISSING 0xe0
0x1ea MISSING 0xb9
0x1eb MISSING 0x4a
0x1ec BALANCE
0x1ed GASPRICE
0x1ee DELEGATECALL
0x1ef SWAP1
0x1f0 MISSING 0xe3
0x1f1 MISSING 0xb0
0x1f2 LT
0x1f3 RETURNDATACOPY
0x1f4 MISSING 0xab
0x1f5 MISSING 0xf9
0x1f6 DUP10
0x1f7 MISSING 0xeb
0x1f8 MISSING 0x4e
0x1f9 DUP13
0x1fa CREATE2
0x1fb MISSING 0xd3
0x1fc MISSING 0xbf
0x1fd MISSING 0xe
0x1fe MISSING 0xb5
0x1ff MISSING 0xab
0x200 MISSING 0xf7
0x201 CREATE2
0x202 BALANCE
0x203 STOP
0x204 MISSING 0x29
---
0x1d9: STOP 
0x1da: LOG S0 S1 S2
0x1db: V166 = 0x627a7a723058
0x1e2: V167 = SHA3 0x627a7a723058 S3
0x1e3: V168 = NUMBER
0x1e4: MISSING 0x4f
0x1e6: MISSING 0x28
0x1e7: MISSING 0xd9
0x1e8: MISSING 0xda
0x1e9: MISSING 0xe0
0x1ea: MISSING 0xb9
0x1eb: MISSING 0x4a
0x1ec: V169 = BALANCE S0
0x1ed: V170 = GASPRICE
0x1ee: V171 = DELEGATECALL V170 V169 S1 S2 S3 S4
0x1f0: MISSING 0xe3
0x1f1: MISSING 0xb0
0x1f2: V172 = LT S0 S1
0x1f3: RETURNDATACOPY V172 S2 S3
0x1f4: MISSING 0xab
0x1f5: MISSING 0xf9
0x1f7: MISSING 0xeb
0x1f8: MISSING 0x4e
0x1fa: V173 = CREATE2 S12 S0 S1 S2
0x1fb: MISSING 0xd3
0x1fc: MISSING 0xbf
0x1fd: MISSING 0xe
0x1fe: MISSING 0xb5
0x1ff: MISSING 0xab
0x200: MISSING 0xf7
0x201: V174 = CREATE2 S0 S1 S2 S3
0x202: V175 = BALANCE V174
0x203: STOP 
0x204: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V168, V167, S8, S1, S2, S3, S4, S5, S6, S7, S0, S5, V171, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V173, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V175]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x76
Exit block: 0x8e
Body: 0x76, 0x7e, 0x82, 0x8e

Function 1:
Public function signature: 0x4506e935
Entry block: 0x90
Exit block: 0xa5
Body: 0x90, 0x98, 0x9c, 0xa5, 0x169

Function 2:
Public function signature: 0x853828b6
Entry block: 0xb7
Exit block: 0x8e
Body: 0x8e, 0xb7, 0xbf, 0xc3, 0x16f, 0x182, 0x186, 0x190

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xcc
Exit block: 0xe1
Body: 0xcc, 0xd4, 0xd8, 0xe1, 0x192

Function 4:
Public function signature: 0xee4ae2c9
Entry block: 0xfd
Exit block: 0x8e
Body: 0x8e, 0xfd, 0x105, 0x109, 0x1a1, 0x1b4, 0x1b8

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0x121
Exit block: 0x165
Body: 0x121, 0x138, 0x165

