Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x42]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xfec16d6c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x42
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xfec16d6c
0x3b: V13 = EQ V11 0xfec16d6c
0x3c: V14 = 0x42
0x3f: JUMPI 0x42 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x41]
---
Predecessors: [0x0, 0xd, 0x23a]
Successors: []
---
0x40 JUMPDEST
0x41 STOP
---
0x40: JUMPDEST 
0x41: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x42
[0x42:0x49]
---
Predecessors: [0xd]
Successors: [0x4a, 0x4e]
---
0x42 JUMPDEST
0x43 CALLVALUE
0x44 DUP1
0x45 ISZERO
0x46 PUSH2 0x4e
0x49 JUMPI
---
0x42: JUMPDEST 
0x43: V15 = CALLVALUE
0x45: V16 = ISZERO V15
0x46: V17 = 0x4e
0x49: JUMPI 0x4e V16
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V15]
Exit stack: [V11, V15]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x42]
Successors: []
---
0x4a PUSH1 0x0
0x4c DUP1
0x4d REVERT
---
0x4a: V18 = 0x0
0x4d: REVERT 0x0 0x0
---
Entry stack: [V11, V15]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V15]

================================

Block 0x4e
[0x4e:0x97]
---
Predecessors: [0x42]
Successors: [0x98, 0x9c]
---
0x4e JUMPDEST
0x4f POP
0x50 PUSH2 0x40
0x53 PUSH1 0x4
0x55 CALLDATALOAD
0x56 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b PUSH1 0x24
0x6d CALLDATALOAD
0x6e DUP2
0x6f AND
0x70 SWAP1
0x71 PUSH1 0x44
0x73 CALLDATALOAD
0x74 AND
0x75 PUSH1 0x64
0x77 CALLDATALOAD
0x78 PUSH1 0x0
0x7a DUP1
0x7b SLOAD
0x7c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91 AND
0x92 CALLER
0x93 EQ
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x4e: JUMPDEST 
0x50: V19 = 0x40
0x53: V20 = 0x4
0x55: V21 = CALLDATALOAD 0x4
0x56: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b: V23 = 0x24
0x6d: V24 = CALLDATALOAD 0x24
0x6f: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x71: V26 = 0x44
0x73: V27 = CALLDATALOAD 0x44
0x74: V28 = AND V27 0xffffffffffffffffffffffffffffffffffffffff
0x75: V29 = 0x64
0x77: V30 = CALLDATALOAD 0x64
0x78: V31 = 0x0
0x7b: V32 = S[0x0]
0x7c: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0x91: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x92: V35 = CALLER
0x93: V36 = EQ V35 V34
0x94: V37 = 0x9c
0x97: JUMPI 0x9c V36
---
Entry stack: [V11, V15]
Stack pops: 1
Stack additions: [0x40, V21, V25, V28, V30, 0x0]
Exit stack: [V11, 0x40, V21, V25, V28, V30, 0x0]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x4e]
Successors: []
---
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x98: V38 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x40, V21, V25, V28, V30, 0x0]

================================

Block 0x9c
[0x9c:0x16f]
---
Predecessors: [0x4e]
Successors: [0x170]
---
0x9c JUMPDEST
0x9d PUSH1 0x40
0x9f DUP1
0xa0 MLOAD
0xa1 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0xc2 PUSH1 0x20
0xc4 DUP1
0xc5 DUP4
0xc6 ADD
0xc7 SWAP2
0xc8 SWAP1
0xc9 SWAP2
0xca MSTORE
0xcb PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0xec PUSH1 0x21
0xee DUP4
0xef ADD
0xf0 MSTORE
0xf1 PUSH13 0x1000000000000000000000000
0xff ADDRESS
0x100 MUL
0x101 PUSH1 0x22
0x103 DUP4
0x104 ADD
0x105 MSTORE
0x106 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x127 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x148 DUP10
0x149 MUL
0x14a AND
0x14b PUSH1 0x36
0x14d DUP4
0x14e ADD
0x14f MSTORE
0x150 DUP3
0x151 MLOAD
0x152 PUSH1 0x17
0x154 DUP2
0x155 DUP5
0x156 SUB
0x157 ADD
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x37
0x15c SWAP1
0x15d SWAP3
0x15e ADD
0x15f SWAP3
0x160 DUP4
0x161 SWAP1
0x162 MSTORE
0x163 DUP2
0x164 MLOAD
0x165 SWAP2
0x166 SWAP3
0x167 SWAP2
0x168 DUP3
0x169 SWAP2
0x16a DUP5
0x16b ADD
0x16c SWAP1
0x16d DUP1
0x16e DUP4
0x16f DUP4
---
0x9c: JUMPDEST 
0x9d: V39 = 0x40
0xa0: V40 = M[0x40]
0xa1: V41 = 0xd600000000000000000000000000000000000000000000000000000000000000
0xc2: V42 = 0x20
0xc6: V43 = ADD V40 0x20
0xca: M[V43] = 0xd600000000000000000000000000000000000000000000000000000000000000
0xcb: V44 = 0x9400000000000000000000000000000000000000000000000000000000000000
0xec: V45 = 0x21
0xef: V46 = ADD V40 0x21
0xf0: M[V46] = 0x9400000000000000000000000000000000000000000000000000000000000000
0xf1: V47 = 0x1000000000000000000000000
0xff: V48 = ADDRESS
0x100: V49 = MUL V48 0x1000000000000000000000000
0x101: V50 = 0x22
0x104: V51 = ADD V40 0x22
0x105: M[V51] = V49
0x106: V52 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x127: V53 = 0x100000000000000000000000000000000000000000000000000000000000000
0x149: V54 = MUL V21 0x100000000000000000000000000000000000000000000000000000000000000
0x14a: V55 = AND V54 0xff00000000000000000000000000000000000000000000000000000000000000
0x14b: V56 = 0x36
0x14e: V57 = ADD V40 0x36
0x14f: M[V57] = V55
0x151: V58 = M[0x40]
0x152: V59 = 0x17
0x156: V60 = SUB V40 V58
0x157: V61 = ADD V60 0x17
0x159: M[V58] = V61
0x15a: V62 = 0x37
0x15e: V63 = ADD V40 0x37
0x162: M[0x40] = V63
0x164: V64 = M[V58]
0x16b: V65 = ADD V58 0x20
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V58, V63, V63, V65, V64, V64, V63, V65]
Exit stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V58, V63, V63, V65, V64, V64, V63, V65]

================================

Block 0x170
[0x170:0x178]
---
Predecessors: [0x9c, 0x179]
Successors: [0x179, 0x18f]
---
0x170 JUMPDEST
0x171 PUSH1 0x20
0x173 DUP4
0x174 LT
0x175 PUSH2 0x18f
0x178 JUMPI
---
0x170: JUMPDEST 
0x171: V66 = 0x20
0x174: V67 = LT S2 0x20
0x175: V68 = 0x18f
0x178: JUMPI 0x18f V67
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V58, V63, V63, V65, V64, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V58, V63, V63, V65, V64, S2, S1, S0]

================================

Block 0x179
[0x179:0x18e]
---
Predecessors: [0x170]
Successors: [0x170]
---
0x179 DUP1
0x17a MLOAD
0x17b DUP3
0x17c MSTORE
0x17d PUSH1 0x1f
0x17f NOT
0x180 SWAP1
0x181 SWAP3
0x182 ADD
0x183 SWAP2
0x184 PUSH1 0x20
0x186 SWAP2
0x187 DUP3
0x188 ADD
0x189 SWAP2
0x18a ADD
0x18b PUSH2 0x170
0x18e JUMP
---
0x17a: V69 = M[S0]
0x17c: M[S1] = V69
0x17d: V70 = 0x1f
0x17f: V71 = NOT 0x1f
0x182: V72 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x184: V73 = 0x20
0x188: V74 = ADD 0x20 S1
0x18a: V75 = ADD 0x20 S0
0x18b: V76 = 0x170
0x18e: JUMP 0x170
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V58, V63, V63, V65, V64, S2, S1, S0]
Stack pops: 3
Stack additions: [V72, V74, V75]
Exit stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V58, V63, V63, V65, V64, V72, V74, V75]

================================

Block 0x18f
[0x18f:0x1ee]
---
Predecessors: [0x170]
Successors: [0x243]
---
0x18f JUMPDEST
0x190 MLOAD
0x191 DUP2
0x192 MLOAD
0x193 PUSH1 0x20
0x195 SWAP4
0x196 SWAP1
0x197 SWAP4
0x198 SUB
0x199 PUSH2 0x100
0x19c EXP
0x19d PUSH1 0x0
0x19f NOT
0x1a0 ADD
0x1a1 DUP1
0x1a2 NOT
0x1a3 SWAP1
0x1a4 SWAP2
0x1a5 AND
0x1a6 SWAP3
0x1a7 AND
0x1a8 SWAP2
0x1a9 SWAP1
0x1aa SWAP2
0x1ab OR
0x1ac SWAP1
0x1ad MSTORE
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 SWAP3
0x1b2 ADD
0x1b3 DUP3
0x1b4 SWAP1
0x1b5 SUB
0x1b6 DUP3
0x1b7 SHA3
0x1b8 SWAP5
0x1b9 POP
0x1ba POP
0x1bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d0 DUP5
0x1d1 AND
0x1d2 SWAP3
0x1d3 POP
0x1d4 DUP5
0x1d5 SWAP2
0x1d6 POP
0x1d7 PUSH1 0x0
0x1d9 DUP2
0x1da DUP2
0x1db DUP2
0x1dc DUP6
0x1dd DUP8
0x1de GAS
0x1df CALL
0x1e0 SWAP3
0x1e1 POP
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 DUP4
0x1e6 DUP4
0x1e7 DUP4
0x1e8 PUSH2 0x1ef
0x1eb PUSH2 0x243
0x1ee JUMP
---
0x18f: JUMPDEST 
0x190: V77 = M[S0]
0x192: V78 = M[S1]
0x193: V79 = 0x20
0x198: V80 = SUB 0x20 S2
0x199: V81 = 0x100
0x19c: V82 = EXP 0x100 V80
0x19d: V83 = 0x0
0x19f: V84 = NOT 0x0
0x1a0: V85 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V82
0x1a2: V86 = NOT V85
0x1a5: V87 = AND V77 V86
0x1a7: V88 = AND V78 V85
0x1ab: V89 = OR V88 V87
0x1ad: M[S1] = V89
0x1ae: V90 = 0x40
0x1b0: V91 = M[0x40]
0x1b2: V92 = ADD V63 V64
0x1b5: V93 = SUB V92 V91
0x1b7: V94 = SHA3 V91 V93
0x1bb: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V96 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V97 = 0x0
0x1de: V98 = GAS
0x1df: V99 = CALL V98 V96 V30 V91 0x0 V91 0x0
0x1e8: V100 = 0x1ef
0x1eb: V101 = 0x243
0x1ee: JUMP 0x243
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, 0x0, V58, V63, V63, V65, V64, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, V94, S11, S10, S9, 0x1ef]
Exit stack: [V11, 0x40, V21, V25, V28, V30, V94, V25, V28, V30, 0x1ef]

================================

Block 0x1ef
[0x1ef:0x230]
---
Predecessors: [0x243]
Successors: [0x231, 0x23a]
---
0x1ef JUMPDEST
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 SWAP4
0x206 DUP5
0x207 AND
0x208 DUP2
0x209 MSTORE
0x20a SWAP2
0x20b SWAP1
0x20c SWAP3
0x20d AND
0x20e PUSH1 0x20
0x210 DUP3
0x211 ADD
0x212 MSTORE
0x213 PUSH1 0x40
0x215 DUP1
0x216 DUP3
0x217 ADD
0x218 SWAP3
0x219 SWAP1
0x21a SWAP3
0x21b MSTORE
0x21c SWAP1
0x21d MLOAD
0x21e SWAP1
0x21f DUP2
0x220 SWAP1
0x221 SUB
0x222 PUSH1 0x60
0x224 ADD
0x225 SWAP1
0x226 PUSH1 0x0
0x228 CREATE
0x229 DUP1
0x22a ISZERO
0x22b DUP1
0x22c ISZERO
0x22d PUSH2 0x23a
0x230 JUMPI
---
0x1ef: JUMPDEST 
0x1f0: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x207: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x209: M[V126] = V103
0x20d: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x20e: V105 = 0x20
0x211: V106 = ADD V126 0x20
0x212: M[V106] = V104
0x213: V107 = 0x40
0x217: V108 = ADD V126 0x40
0x21b: M[V108] = V30
0x21d: V109 = M[0x40]
0x221: V110 = SUB V126 V109
0x222: V111 = 0x60
0x224: V112 = ADD 0x60 V110
0x226: V113 = 0x0
0x228: V114 = CREATE 0x0 V109 V112
0x22a: V115 = ISZERO V114
0x22c: V116 = ISZERO V115
0x22d: V117 = 0x23a
0x230: JUMPI 0x23a V116
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, V94, V25, V28, V30, V126]
Stack pops: 4
Stack additions: [V114, V115]
Exit stack: [V11, 0x40, V21, V25, V28, V30, V94, V114, V115]

================================

Block 0x231
[0x231:0x239]
---
Predecessors: [0x1ef]
Successors: []
---
0x231 RETURNDATASIZE
0x232 PUSH1 0x0
0x234 DUP1
0x235 RETURNDATACOPY
0x236 RETURNDATASIZE
0x237 PUSH1 0x0
0x239 REVERT
---
0x231: V118 = RETURNDATASIZE
0x232: V119 = 0x0
0x235: RETURNDATACOPY 0x0 0x0 V118
0x236: V120 = RETURNDATASIZE
0x237: V121 = 0x0
0x239: REVERT 0x0 V120
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, V94, V114, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x40, V21, V25, V28, V30, V94, V114, V115]

================================

Block 0x23a
[0x23a:0x242]
---
Predecessors: [0x1ef]
Successors: [0x40]
---
0x23a JUMPDEST
0x23b POP
0x23c POP
0x23d POP
0x23e POP
0x23f POP
0x240 POP
0x241 POP
0x242 JUMP
---
0x23a: JUMPDEST 
0x242: JUMP 0x40
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, V94, V114, V115]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x243
[0x243:0x251]
---
Predecessors: [0x18f]
Successors: [0x1ef]
---
0x243 JUMPDEST
0x244 PUSH1 0x40
0x246 MLOAD
0x247 PUSH1 0xe0
0x249 DUP1
0x24a PUSH2 0x253
0x24d DUP4
0x24e CODECOPY
0x24f ADD
0x250 SWAP1
0x251 JUMP
---
0x243: JUMPDEST 
0x244: V122 = 0x40
0x246: V123 = M[0x40]
0x247: V124 = 0xe0
0x24a: V125 = 0x253
0x24e: CODECOPY V123 0x253 0xe0
0x24f: V126 = ADD 0xe0 V123
0x251: JUMP 0x1ef
---
Entry stack: [V11, 0x40, V21, V25, V28, V30, V94, V25, V28, V30, 0x1ef]
Stack pops: 1
Stack additions: [V126]
Exit stack: [V11, 0x40, V21, V25, V28, V30, V94, V25, V28, V30, V126]

================================

Block 0x252
[0x252:0x25d]
---
Predecessors: []
Successors: [0x25e]
---
0x252 STOP
0x253 PUSH1 0x80
0x255 PUSH1 0x40
0x257 MSTORE
0x258 CALLVALUE
0x259 DUP1
0x25a ISZERO
0x25b PUSH1 0xf
0x25d JUMPI
---
0x252: STOP 
0x253: V127 = 0x80
0x255: V128 = 0x40
0x257: M[0x40] = 0x80
0x258: V129 = CALLVALUE
0x25a: V130 = ISZERO V129
0x25b: V131 = 0xf
0x25d: THROWI V130
---
Entry stack: []
Stack pops: 0
Stack additions: [V129]
Exit stack: []

================================

Block 0x25e
[0x25e:0x30a]
---
Predecessors: [0x252]
Successors: [0x30b]
---
0x25e PUSH1 0x0
0x260 DUP1
0x261 REVERT
0x262 JUMPDEST
0x263 POP
0x264 PUSH1 0x40
0x266 MLOAD
0x267 PUSH1 0x60
0x269 DUP1
0x26a PUSH2 0xe0
0x26d DUP4
0x26e CODECOPY
0x26f DUP2
0x270 ADD
0x271 PUSH1 0x40
0x273 DUP2
0x274 DUP2
0x275 MSTORE
0x276 DUP3
0x277 MLOAD
0x278 PUSH1 0x20
0x27a DUP5
0x27b ADD
0x27c MLOAD
0x27d SWAP2
0x27e SWAP1
0x27f SWAP4
0x280 ADD
0x281 MLOAD
0x282 PUSH1 0x0
0x284 DUP1
0x285 SLOAD
0x286 PUSH1 0x1
0x288 PUSH1 0xa0
0x28a PUSH1 0x2
0x28c EXP
0x28d SUB
0x28e NOT
0x28f AND
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 DUP1
0x299 DUP8
0x29a AND
0x29b SWAP2
0x29c SWAP1
0x29d SWAP2
0x29e OR
0x29f DUP1
0x2a0 DUP4
0x2a1 SSTORE
0x2a2 SWAP4
0x2a3 SWAP5
0x2a4 SWAP3
0x2a5 SWAP4
0x2a6 AND
0x2a7 SWAP2
0x2a8 DUP4
0x2a9 SWAP2
0x2aa DUP2
0x2ab DUP2
0x2ac DUP2
0x2ad DUP6
0x2ae DUP8
0x2af GAS
0x2b0 CALL
0x2b1 POP
0x2b2 POP
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 SLOAD
0x2b7 PUSH1 0x40
0x2b9 DUP1
0x2ba MLOAD
0x2bb PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2dc DUP2
0x2dd MSTORE
0x2de SWAP1
0x2df MLOAD
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 SWAP1
0x2e9 SWAP3
0x2ea AND
0x2eb SWAP5
0x2ec POP
0x2ed PUSH4 0x3ccfd60b
0x2f2 SWAP4
0x2f3 POP
0x2f4 PUSH1 0x4
0x2f6 DUP1
0x2f7 DUP3
0x2f8 ADD
0x2f9 SWAP4
0x2fa SWAP3
0x2fb SWAP2
0x2fc DUP3
0x2fd SWAP1
0x2fe SUB
0x2ff ADD
0x300 DUP2
0x301 DUP4
0x302 DUP8
0x303 DUP1
0x304 EXTCODESIZE
0x305 ISZERO
0x306 DUP1
0x307 ISZERO
0x308 PUSH1 0xbc
0x30a JUMPI
---
0x25e: V132 = 0x0
0x261: REVERT 0x0 0x0
0x262: JUMPDEST 
0x264: V133 = 0x40
0x266: V134 = M[0x40]
0x267: V135 = 0x60
0x26a: V136 = 0xe0
0x26e: CODECOPY V134 0xe0 0x60
0x270: V137 = ADD V134 0x60
0x271: V138 = 0x40
0x275: M[0x40] = V137
0x277: V139 = M[V134]
0x278: V140 = 0x20
0x27b: V141 = ADD V134 0x20
0x27c: V142 = M[V141]
0x280: V143 = ADD V134 0x40
0x281: V144 = M[V143]
0x282: V145 = 0x0
0x285: V146 = S[0x0]
0x286: V147 = 0x1
0x288: V148 = 0xa0
0x28a: V149 = 0x2
0x28c: V150 = EXP 0x2 0xa0
0x28d: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28e: V152 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V153 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V146
0x290: V154 = 0x1
0x292: V155 = 0xa0
0x294: V156 = 0x2
0x296: V157 = EXP 0x2 0xa0
0x297: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29a: V159 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x29e: V160 = OR V159 V153
0x2a1: S[0x0] = V160
0x2a6: V161 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V162 = GAS
0x2b0: V163 = CALL V162 V161 V144 V137 0x0 V137 0x0
0x2b3: V164 = 0x0
0x2b6: V165 = S[0x0]
0x2b7: V166 = 0x40
0x2ba: V167 = M[0x40]
0x2bb: V168 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2dd: M[V167] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2df: V169 = M[0x40]
0x2e0: V170 = 0x1
0x2e2: V171 = 0xa0
0x2e4: V172 = 0x2
0x2e6: V173 = EXP 0x2 0xa0
0x2e7: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V175 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: V176 = 0x3ccfd60b
0x2f4: V177 = 0x4
0x2f8: V178 = ADD V167 0x4
0x2fe: V179 = SUB V167 V169
0x2ff: V180 = ADD V179 0x4
0x304: V181 = EXTCODESIZE V175
0x305: V182 = ISZERO V181
0x307: V183 = ISZERO V182
0x308: V184 = 0xbc
0x30a: THROWI V183
---
Entry stack: [V129]
Stack pops: 0
Stack additions: [V182, V175, 0x0, V169, V180, V169, 0x0, V178, 0x3ccfd60b, V175, V144, V142, V139]
Exit stack: []

================================

Block 0x30b
[0x30b:0x318]
---
Predecessors: [0x25e]
Successors: [0x319]
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
0x30f JUMPDEST
0x310 POP
0x311 GAS
0x312 CALL
0x313 ISZERO
0x314 DUP1
0x315 ISZERO
0x316 PUSH1 0xcf
0x318 JUMPI
---
0x30b: V185 = 0x0
0x30e: REVERT 0x0 0x0
0x30f: JUMPDEST 
0x311: V186 = GAS
0x312: V187 = CALL V186 S1 S2 S3 S4 S5 S6
0x313: V188 = ISZERO V187
0x315: V189 = ISZERO V188
0x316: V190 = 0xcf
0x318: THROWI V189
---
Entry stack: [V139, V142, V144, V175, 0x3ccfd60b, V178, 0x0, V169, V180, V169, 0x0, V175, V182]
Stack pops: 0
Stack additions: [V188]
Exit stack: []

================================

Block 0x319
[0x319:0x361]
---
Predecessors: [0x30b]
Successors: []
---
0x319 RETURNDATASIZE
0x31a PUSH1 0x0
0x31c DUP1
0x31d RETURNDATACOPY
0x31e RETURNDATASIZE
0x31f PUSH1 0x0
0x321 REVERT
0x322 JUMPDEST
0x323 POP
0x324 POP
0x325 POP
0x326 POP
0x327 DUP2
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 AND
0x331 SELFDESTRUCT
0x332 STOP
0x333 LOG1
0x334 PUSH6 0x627a7a723058
0x33b SHA3
0x33c MISSING 0xe
0x33d MISSING 0xaa
0x33e SWAP13
0x33f MISSING 0xdf
0x340 GASLIMIT
0x341 MISSING 0xd9
0x342 PUSH31 0x37c7aadbf0963e763ad1d0fa26249e818873aaa4a9d250611b0029
---
0x319: V191 = RETURNDATASIZE
0x31a: V192 = 0x0
0x31d: RETURNDATACOPY 0x0 0x0 V191
0x31e: V193 = RETURNDATASIZE
0x31f: V194 = 0x0
0x321: REVERT 0x0 V193
0x322: JUMPDEST 
0x328: V195 = 0x1
0x32a: V196 = 0xa0
0x32c: V197 = 0x2
0x32e: V198 = EXP 0x2 0xa0
0x32f: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x331: SELFDESTRUCT V200
0x332: STOP 
0x333: LOG S0 S1 S2
0x334: V201 = 0x627a7a723058
0x33b: V202 = SHA3 0x627a7a723058 S3
0x33c: MISSING 0xe
0x33d: MISSING 0xaa
0x33f: MISSING 0xdf
0x340: V203 = GASLIMIT
0x341: MISSING 0xd9
0x342: V204 = 0x37c7aadbf0963e763ad1d0fa26249e818873aaa4a9d250611b0029
---
Entry stack: [V188]
Stack pops: 0
Stack additions: [S4, S5, V202, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, V203, 0x37c7aadbf0963e763ad1d0fa26249e818873aaa4a9d250611b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xfec16d6c
Entry block: 0x42
Exit block: 0x40
Body: 0x40, 0x42, 0x4a, 0x4e, 0x98, 0x9c, 0x170, 0x179, 0x18f, 0x1ef, 0x231, 0x23a, 0x243

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0x40
Body: 0x40

