Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x51]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x51
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x51
0xa: JUMPI 0x51 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xd0]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x41c0e1b5
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xd0
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x41c0e1b5
0x20: V14 = EQ V12 0x41c0e1b5
0x21: V15 = 0xd0
0x24: JUMPI 0xd0 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xe2]
---
0x25 DUP1
0x26 PUSH4 0x5cecee36
0x2b EQ
0x2c PUSH2 0xe2
0x2f JUMPI
---
0x26: V16 = 0x5cecee36
0x2b: V17 = EQ 0x5cecee36 V12
0x2c: V18 = 0xe2
0x2f: JUMPI 0xe2 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xef]
---
0x30 DUP1
0x31 PUSH4 0x8da5cb5b
0x36 EQ
0x37 PUSH2 0xef
0x3a JUMPI
---
0x31: V19 = 0x8da5cb5b
0x36: V20 = EQ 0x8da5cb5b V12
0x37: V21 = 0xef
0x3a: JUMPI 0xef V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x11b]
---
0x3b DUP1
0x3c PUSH4 0x93fc9fbe
0x41 EQ
0x42 PUSH2 0x11b
0x45 JUMPI
---
0x3c: V22 = 0x93fc9fbe
0x41: V23 = EQ 0x93fc9fbe V12
0x42: V24 = 0x11b
0x45: JUMPI 0x11b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x147]
---
0x46 DUP1
0x47 PUSH4 0xde82efb4
0x4c EQ
0x4d PUSH2 0x147
0x50 JUMPI
---
0x47: V25 = 0xde82efb4
0x4c: V26 = EQ 0xde82efb4 V12
0x4d: V27 = 0x147
0x50: JUMPI 0x147 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x54]
---
Predecessors: [0x0, 0x46]
Successors: [0x55]
---
0x51 JUMPDEST
0x52 PUSH2 0xce
---
0x51: JUMPDEST 
0x52: V28 = 0xce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V12, 0xce]

================================

Block 0x55
[0x55:0x6a]
---
Predecessors: [0x51]
Successors: [0x6b, 0xcb]
---
0x55 JUMPDEST
0x56 PUSH1 0x1
0x58 SLOAD
0x59 CALLVALUE
0x5a PUSH1 0x1
0x5c PUSH1 0xa0
0x5e PUSH1 0x2
0x60 EXP
0x61 SUB
0x62 SWAP1
0x63 SWAP2
0x64 AND
0x65 BALANCE
0x66 LT
0x67 PUSH2 0xcb
0x6a JUMPI
---
0x55: JUMPDEST 
0x56: V29 = 0x1
0x58: V30 = S[0x1]
0x59: V31 = CALLVALUE
0x5a: V32 = 0x1
0x5c: V33 = 0xa0
0x5e: V34 = 0x2
0x60: V35 = EXP 0x2 0xa0
0x61: V36 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64: V37 = AND V30 0xffffffffffffffffffffffffffffffffffffffff
0x65: V38 = BALANCE V37
0x66: V39 = LT V38 V31
0x67: V40 = 0xcb
0x6a: JUMPI 0xcb V39
---
Entry stack: [V12, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xce]

================================

Block 0x6b
[0x6b:0xca]
---
Predecessors: [0x55]
Successors: [0xcb]
---
0x6b PUSH1 0x1
0x6d SLOAD
0x6e PUSH1 0x40
0x70 DUP1
0x71 MLOAD
0x72 PUSH1 0xd8
0x74 PUSH1 0x2
0x76 EXP
0x77 PUSH5 0x776f6e2829
0x7d MUL
0x7e DUP2
0x7f MSTORE
0x80 DUP2
0x81 MLOAD
0x82 SWAP1
0x83 DUP2
0x84 SWAP1
0x85 SUB
0x86 PUSH1 0x5
0x88 ADD
0x89 DUP2
0x8a SHA3
0x8b PUSH4 0xffffffff
0x90 PUSH1 0xe0
0x92 PUSH1 0x2
0x94 EXP
0x95 SWAP2
0x96 DUP3
0x97 SWAP1
0x98 DIV
0x99 SWAP1
0x9a DUP2
0x9b AND
0x9c SWAP1
0x9d SWAP2
0x9e MUL
0x9f DUP3
0xa0 MSTORE
0xa1 SWAP2
0xa2 MLOAD
0xa3 PUSH1 0x1
0xa5 PUSH1 0xa0
0xa7 PUSH1 0x2
0xa9 EXP
0xaa SUB
0xab SWAP1
0xac SWAP4
0xad AND
0xae SWAP3
0xaf PUSH1 0x4
0xb1 DUP1
0xb2 DUP4
0xb3 ADD
0xb4 SWAP3
0xb5 PUSH1 0x0
0xb7 SWAP3
0xb8 SWAP2
0xb9 SWAP1
0xba DUP3
0xbb SWAP1
0xbc SUB
0xbd ADD
0xbe DUP2
0xbf DUP4
0xc0 DUP8
0xc1 PUSH2 0x61da
0xc4 GAS
0xc5 SUB
0xc6 CALL
0xc7 POP
0xc8 POP
0xc9 POP
0xca POP
---
0x6b: V41 = 0x1
0x6d: V42 = S[0x1]
0x6e: V43 = 0x40
0x71: V44 = M[0x40]
0x72: V45 = 0xd8
0x74: V46 = 0x2
0x76: V47 = EXP 0x2 0xd8
0x77: V48 = 0x776f6e2829
0x7d: V49 = MUL 0x776f6e2829 0x1000000000000000000000000000000000000000000000000000000
0x7f: M[V44] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x81: V50 = M[0x40]
0x85: V51 = SUB V44 V50
0x86: V52 = 0x5
0x88: V53 = ADD 0x5 V51
0x8a: V54 = SHA3 V50 V53
0x8b: V55 = 0xffffffff
0x90: V56 = 0xe0
0x92: V57 = 0x2
0x94: V58 = EXP 0x2 0xe0
0x98: V59 = DIV V54 0x100000000000000000000000000000000000000000000000000000000
0x9b: V60 = AND V59 0xffffffff
0x9e: V61 = MUL 0x100000000000000000000000000000000000000000000000000000000 V60
0xa0: M[V50] = V61
0xa2: V62 = M[0x40]
0xa3: V63 = 0x1
0xa5: V64 = 0xa0
0xa7: V65 = 0x2
0xa9: V66 = EXP 0x2 0xa0
0xaa: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad: V68 = AND V42 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V69 = 0x4
0xb3: V70 = ADD V50 0x4
0xb5: V71 = 0x0
0xbc: V72 = SUB V50 V62
0xbd: V73 = ADD V72 0x4
0xc1: V74 = 0x61da
0xc4: V75 = GAS
0xc5: V76 = SUB V75 0x61da
0xc6: V77 = CALL V76 V68 0x0 V62 V73 V62 0x0
---
Entry stack: [V12, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xce]

================================

Block 0xcb
[0xcb:0xcb]
---
Predecessors: [0x55, 0x6b]
Successors: [0xcc]
---
0xcb JUMPDEST
---
0xcb: JUMPDEST 
---
Entry stack: [V12, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xce]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: [0xcb]
Successors: [0xce]
---
0xcc JUMPDEST
0xcd JUMP
---
0xcc: JUMPDEST 
0xcd: JUMP 0xce
---
Entry stack: [V12, 0xce]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xce
[0xce:0xcf]
---
Predecessors: [0xcc, 0x1e6, 0x273]
Successors: []
---
0xce JUMPDEST
0xcf STOP
---
0xce: JUMPDEST 
0xcf: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd0
[0xd0:0xd6]
---
Predecessors: [0xb]
Successors: [0xd7, 0xd8]
---
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 ISZERO
0xd3 PUSH2 0xd8
0xd6 JUMPI
---
0xd0: JUMPDEST 
0xd1: V78 = CALLVALUE
0xd2: V79 = ISZERO V78
0xd3: V80 = 0xd8
0xd6: JUMPI 0xd8 V79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd7
[0xd7:0xd7]
---
Predecessors: [0xd0]
Successors: []
---
0xd7 INVALID
---
0xd7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd8
[0xd8:0xdf]
---
Predecessors: [0xd0]
Successors: [0x151]
---
0xd8 JUMPDEST
0xd9 PUSH2 0xce
0xdc PUSH2 0x151
0xdf JUMP
---
0xd8: JUMPDEST 
0xd9: V81 = 0xce
0xdc: V82 = 0x151
0xdf: JUMP 0x151
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V12, 0xce]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: []
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0x25]
Successors: [0x161]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xce
0xe6 PUSH1 0x4
0xe8 CALLDATALOAD
0xe9 PUSH2 0x161
0xec JUMP
---
0xe2: JUMPDEST 
0xe3: V83 = 0xce
0xe6: V84 = 0x4
0xe8: V85 = CALLDATALOAD 0x4
0xe9: V86 = 0x161
0xec: JUMP 0x161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xce, V85]
Exit stack: [V12, 0xce, V85]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: []
Successors: []
---
0xed JUMPDEST
0xee STOP
---
0xed: JUMPDEST 
0xee: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0x30]
Successors: [0xf6, 0xf7]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xf7
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V87 = CALLVALUE
0xf1: V88 = ISZERO V87
0xf2: V89 = 0xf7
0xf5: JUMPI 0xf7 V88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xf6]
---
Predecessors: [0xef]
Successors: []
---
0xf6 INVALID
---
0xf6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7
[0xf7:0xfe]
---
Predecessors: [0xef]
Successors: [0x1e9]
---
0xf7 JUMPDEST
0xf8 PUSH2 0xff
0xfb PUSH2 0x1e9
0xfe JUMP
---
0xf7: JUMPDEST 
0xf8: V90 = 0xff
0xfb: V91 = 0x1e9
0xfe: JUMP 0x1e9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xff]
Exit stack: [V12, 0xff]

================================

Block 0xff
[0xff:0x11a]
---
Predecessors: [0x1e9, 0x1f8]
Successors: []
---
0xff JUMPDEST
0x100 PUSH1 0x40
0x102 DUP1
0x103 MLOAD
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c SWAP1
0x10d SWAP3
0x10e AND
0x10f DUP3
0x110 MSTORE
0x111 MLOAD
0x112 SWAP1
0x113 DUP2
0x114 SWAP1
0x115 SUB
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP1
0x11a RETURN
---
0xff: JUMPDEST 
0x100: V92 = 0x40
0x103: V93 = M[0x40]
0x104: V94 = 0x1
0x106: V95 = 0xa0
0x108: V96 = 0x2
0x10a: V97 = EXP 0x2 0xa0
0x10b: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e: V99 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x110: M[V93] = V99
0x111: V100 = M[0x40]
0x115: V101 = SUB V93 V100
0x116: V102 = 0x20
0x118: V103 = ADD 0x20 V101
0x11a: RETURN V100 V103
---
Entry stack: [V12, 0xff, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xff]

================================

Block 0x11b
[0x11b:0x121]
---
Predecessors: [0x3b]
Successors: [0x122, 0x123]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d ISZERO
0x11e PUSH2 0x123
0x121 JUMPI
---
0x11b: JUMPDEST 
0x11c: V104 = CALLVALUE
0x11d: V105 = ISZERO V104
0x11e: V106 = 0x123
0x121: JUMPI 0x123 V105
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x122
[0x122:0x122]
---
Predecessors: [0x11b]
Successors: []
---
0x122 INVALID
---
0x122: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x11b]
Successors: [0x1f8]
---
0x123 JUMPDEST
0x124 PUSH2 0xff
0x127 PUSH2 0x1f8
0x12a JUMP
---
0x123: JUMPDEST 
0x124: V107 = 0xff
0x127: V108 = 0x1f8
0x12a: JUMP 0x1f8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xff]
Exit stack: [V12, 0xff]

================================

Block 0x12b
[0x12b:0x146]
---
Predecessors: []
Successors: []
---
0x12b JUMPDEST
0x12c PUSH1 0x40
0x12e DUP1
0x12f MLOAD
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 SWAP1
0x139 SWAP3
0x13a AND
0x13b DUP3
0x13c MSTORE
0x13d MLOAD
0x13e SWAP1
0x13f DUP2
0x140 SWAP1
0x141 SUB
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP1
0x146 RETURN
---
0x12b: JUMPDEST 
0x12c: V109 = 0x40
0x12f: V110 = M[0x40]
0x130: V111 = 0x1
0x132: V112 = 0xa0
0x134: V113 = 0x2
0x136: V114 = EXP 0x2 0xa0
0x137: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V116 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x13c: M[V110] = V116
0x13d: V117 = M[0x40]
0x141: V118 = SUB V110 V117
0x142: V119 = 0x20
0x144: V120 = ADD 0x20 V118
0x146: RETURN V117 V120
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x46]
Successors: [0x207]
---
0x147 JUMPDEST
0x148 PUSH2 0xce
0x14b PUSH2 0x207
0x14e JUMP
---
0x147: JUMPDEST 
0x148: V121 = 0xce
0x14b: V122 = 0x207
0x14e: JUMP 0x207
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V12, 0xce]

================================

Block 0x14f
[0x14f:0x150]
---
Predecessors: []
Successors: []
---
0x14f JUMPDEST
0x150 STOP
---
0x14f: JUMPDEST 
0x150: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x151
[0x151:0x15e]
---
Predecessors: [0xd8]
Successors: []
---
0x151 JUMPDEST
0x152 PUSH1 0x0
0x154 SLOAD
0x155 PUSH1 0x1
0x157 PUSH1 0xa0
0x159 PUSH1 0x2
0x15b EXP
0x15c SUB
0x15d AND
0x15e SELFDESTRUCT
---
0x151: JUMPDEST 
0x152: V123 = 0x0
0x154: V124 = S[0x0]
0x155: V125 = 0x1
0x157: V126 = 0xa0
0x159: V127 = 0x2
0x15b: V128 = EXP 0x2 0xa0
0x15c: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x15e: SELFDESTRUCT V130
---
Entry stack: [V12, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xce]

================================

Block 0x15f
[0x15f:0x160]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x15f JUMPDEST
0x160 JUMP
---
0x15f: JUMPDEST 
0x160: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x161
[0x161:0x1e5]
---
Predecessors: [0xe2]
Successors: [0x1e6]
---
0x161 JUMPDEST
0x162 PUSH1 0x1
0x164 SLOAD
0x165 PUSH1 0x40
0x167 DUP1
0x168 MLOAD
0x169 PUSH32 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x18a DUP2
0x18b MSTORE
0x18c DUP2
0x18d MLOAD
0x18e SWAP1
0x18f DUP2
0x190 SWAP1
0x191 SUB
0x192 PUSH1 0x13
0x194 ADD
0x195 DUP2
0x196 SHA3
0x197 PUSH4 0xffffffff
0x19c PUSH1 0xe0
0x19e PUSH1 0x2
0x1a0 EXP
0x1a1 SWAP2
0x1a2 DUP3
0x1a3 SWAP1
0x1a4 DIV
0x1a5 SWAP1
0x1a6 DUP2
0x1a7 AND
0x1a8 SWAP1
0x1a9 SWAP2
0x1aa MUL
0x1ab DUP3
0x1ac MSTORE
0x1ad ADDRESS
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 SWAP1
0x1b7 DUP2
0x1b8 AND
0x1b9 PUSH1 0x4
0x1bb DUP5
0x1bc ADD
0x1bd MSTORE
0x1be SWAP3
0x1bf MLOAD
0x1c0 SWAP3
0x1c1 SWAP1
0x1c2 SWAP4
0x1c3 AND
0x1c4 SWAP3
0x1c5 SWAP2
0x1c6 DUP5
0x1c7 SWAP2
0x1c8 PUSH1 0x24
0x1ca DUP1
0x1cb DUP3
0x1cc ADD
0x1cd SWAP3
0x1ce PUSH1 0x0
0x1d0 SWAP3
0x1d1 SWAP1
0x1d2 SWAP2
0x1d3 SWAP1
0x1d4 DUP3
0x1d5 SWAP1
0x1d6 SUB
0x1d7 ADD
0x1d8 DUP2
0x1d9 DUP6
0x1da DUP9
0x1db PUSH2 0x8502
0x1de GAS
0x1df SUB
0x1e0 CALL
0x1e1 POP
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 POP
---
0x161: JUMPDEST 
0x162: V131 = 0x1
0x164: V132 = S[0x1]
0x165: V133 = 0x40
0x168: V134 = M[0x40]
0x169: V135 = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x18b: M[V134] = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x18d: V136 = M[0x40]
0x191: V137 = SUB V134 V136
0x192: V138 = 0x13
0x194: V139 = ADD 0x13 V137
0x196: V140 = SHA3 V136 V139
0x197: V141 = 0xffffffff
0x19c: V142 = 0xe0
0x19e: V143 = 0x2
0x1a0: V144 = EXP 0x2 0xe0
0x1a4: V145 = DIV V140 0x100000000000000000000000000000000000000000000000000000000
0x1a7: V146 = AND V145 0xffffffff
0x1aa: V147 = MUL 0x100000000000000000000000000000000000000000000000000000000 V146
0x1ac: M[V136] = V147
0x1ad: V148 = ADDRESS
0x1ae: V149 = 0x1
0x1b0: V150 = 0xa0
0x1b2: V151 = 0x2
0x1b4: V152 = EXP 0x2 0xa0
0x1b5: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1b9: V155 = 0x4
0x1bc: V156 = ADD V136 0x4
0x1bd: M[V156] = V154
0x1bf: V157 = M[0x40]
0x1c3: V158 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V159 = 0x24
0x1cc: V160 = ADD V136 0x24
0x1ce: V161 = 0x0
0x1d6: V162 = SUB V136 V157
0x1d7: V163 = ADD V162 0x24
0x1db: V164 = 0x8502
0x1de: V165 = GAS
0x1df: V166 = SUB V165 0x8502
0x1e0: V167 = CALL V166 V158 V85 V157 V163 V157 0x0
---
Entry stack: [V12, 0xce, V85]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xce, V85]

================================

Block 0x1e6
[0x1e6:0x1e8]
---
Predecessors: [0x161]
Successors: [0xce]
---
0x1e6 JUMPDEST
0x1e7 POP
0x1e8 JUMP
---
0x1e6: JUMPDEST 
0x1e8: JUMP 0xce
---
Entry stack: [V12, 0xce, V85]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e9
[0x1e9:0x1f7]
---
Predecessors: [0xf7]
Successors: [0xff]
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x0
0x1ec SLOAD
0x1ed PUSH1 0x1
0x1ef PUSH1 0xa0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 SUB
0x1f5 AND
0x1f6 DUP2
0x1f7 JUMP
---
0x1e9: JUMPDEST 
0x1ea: V168 = 0x0
0x1ec: V169 = S[0x0]
0x1ed: V170 = 0x1
0x1ef: V171 = 0xa0
0x1f1: V172 = 0x2
0x1f3: V173 = EXP 0x2 0xa0
0x1f4: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1f7: JUMP 0xff
---
Entry stack: [V12, 0xff]
Stack pops: 1
Stack additions: [S0, V175]
Exit stack: [V12, 0xff, V175]

================================

Block 0x1f8
[0x1f8:0x206]
---
Predecessors: [0x123]
Successors: [0xff]
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x1
0x1fb SLOAD
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 AND
0x205 DUP2
0x206 JUMP
---
0x1f8: JUMPDEST 
0x1f9: V176 = 0x1
0x1fb: V177 = S[0x1]
0x1fc: V178 = 0x1
0x1fe: V179 = 0xa0
0x200: V180 = 0x2
0x202: V181 = EXP 0x2 0xa0
0x203: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x204: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x206: JUMP 0xff
---
Entry stack: [V12, 0xff]
Stack pops: 1
Stack additions: [S0, V183]
Exit stack: [V12, 0xff, V183]

================================

Block 0x207
[0x207:0x272]
---
Predecessors: [0x147]
Successors: [0x273]
---
0x207 JUMPDEST
0x208 PUSH1 0x1
0x20a SLOAD
0x20b PUSH1 0x40
0x20d DUP1
0x20e MLOAD
0x20f PUSH1 0xd8
0x211 PUSH1 0x2
0x213 EXP
0x214 PUSH5 0x776f6e2829
0x21a MUL
0x21b DUP2
0x21c MSTORE
0x21d DUP2
0x21e MLOAD
0x21f SWAP1
0x220 DUP2
0x221 SWAP1
0x222 SUB
0x223 PUSH1 0x5
0x225 ADD
0x226 DUP2
0x227 SHA3
0x228 PUSH4 0xffffffff
0x22d PUSH1 0xe0
0x22f PUSH1 0x2
0x231 EXP
0x232 SWAP2
0x233 DUP3
0x234 SWAP1
0x235 DIV
0x236 SWAP1
0x237 DUP2
0x238 AND
0x239 SWAP1
0x23a SWAP2
0x23b MUL
0x23c DUP3
0x23d MSTORE
0x23e SWAP2
0x23f MLOAD
0x240 PUSH1 0x1
0x242 PUSH1 0xa0
0x244 PUSH1 0x2
0x246 EXP
0x247 SUB
0x248 SWAP1
0x249 SWAP4
0x24a AND
0x24b SWAP3
0x24c PUSH7 0x38d7ea4c68000
0x254 SWAP2
0x255 PUSH1 0x4
0x257 DUP1
0x258 DUP3
0x259 ADD
0x25a SWAP3
0x25b PUSH1 0x0
0x25d SWAP3
0x25e SWAP1
0x25f SWAP2
0x260 SWAP1
0x261 DUP3
0x262 SWAP1
0x263 SUB
0x264 ADD
0x265 DUP2
0x266 DUP6
0x267 DUP9
0x268 PUSH2 0x8502
0x26b GAS
0x26c SUB
0x26d CALL
0x26e POP
0x26f POP
0x270 POP
0x271 POP
0x272 POP
---
0x207: JUMPDEST 
0x208: V184 = 0x1
0x20a: V185 = S[0x1]
0x20b: V186 = 0x40
0x20e: V187 = M[0x40]
0x20f: V188 = 0xd8
0x211: V189 = 0x2
0x213: V190 = EXP 0x2 0xd8
0x214: V191 = 0x776f6e2829
0x21a: V192 = MUL 0x776f6e2829 0x1000000000000000000000000000000000000000000000000000000
0x21c: M[V187] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x21e: V193 = M[0x40]
0x222: V194 = SUB V187 V193
0x223: V195 = 0x5
0x225: V196 = ADD 0x5 V194
0x227: V197 = SHA3 V193 V196
0x228: V198 = 0xffffffff
0x22d: V199 = 0xe0
0x22f: V200 = 0x2
0x231: V201 = EXP 0x2 0xe0
0x235: V202 = DIV V197 0x100000000000000000000000000000000000000000000000000000000
0x238: V203 = AND V202 0xffffffff
0x23b: V204 = MUL 0x100000000000000000000000000000000000000000000000000000000 V203
0x23d: M[V193] = V204
0x23f: V205 = M[0x40]
0x240: V206 = 0x1
0x242: V207 = 0xa0
0x244: V208 = 0x2
0x246: V209 = EXP 0x2 0xa0
0x247: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24a: V211 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V212 = 0x38d7ea4c68000
0x255: V213 = 0x4
0x259: V214 = ADD V193 0x4
0x25b: V215 = 0x0
0x263: V216 = SUB V193 V205
0x264: V217 = ADD V216 0x4
0x268: V218 = 0x8502
0x26b: V219 = GAS
0x26c: V220 = SUB V219 0x8502
0x26d: V221 = CALL V220 V211 0x38d7ea4c68000 V205 V217 V205 0x0
---
Entry stack: [V12, 0xce]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xce]

================================

Block 0x273
[0x273:0x274]
---
Predecessors: [0x207]
Successors: [0xce]
---
0x273 JUMPDEST
0x274 JUMP
---
0x273: JUMPDEST 
0x274: JUMP 0xce
---
Entry stack: [V12, 0xce]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x275
[0x275:0x2b8]
---
Predecessors: []
Successors: []
---
0x275 STOP
0x276 LOG1
0x277 PUSH6 0x627a7a723058
0x27e SHA3
0x27f PUSH14 0x138ec9b5ec4a0df3d0c5f57ed6ef
0x28e MISSING 0xbf
0x28f MISSING 0xcb
0x290 MULMOD
0x291 MSTORE
0x292 LOG0
0x293 PUSH4 0x38a4e829
0x298 MISSING 0xb4
0x299 MISSING 0xb0
0x29a SELFDESTRUCT
0x29b PUSH29 0x29bdef0029
---
0x275: STOP 
0x276: LOG S0 S1 S2
0x277: V222 = 0x627a7a723058
0x27e: V223 = SHA3 0x627a7a723058 S3
0x27f: V224 = 0x138ec9b5ec4a0df3d0c5f57ed6ef
0x28e: MISSING 0xbf
0x28f: MISSING 0xcb
0x290: V225 = MULMOD S0 S1 S2
0x291: M[V225] = S3
0x292: LOG S4 S5
0x293: V226 = 0x38a4e829
0x298: MISSING 0xb4
0x299: MISSING 0xb0
0x29a: SELFDESTRUCT S0
0x29b: V227 = 0x29bdef0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x138ec9b5ec4a0df3d0c5f57ed6ef, V223, 0x38a4e829, 0x29bdef0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0xd0
Exit block: 0x151
Body: 0xd0, 0xd7, 0xd8, 0x151

Function 1:
Public function signature: 0x5cecee36
Entry block: 0xe2
Exit block: 0xce
Body: 0xce, 0xe2, 0x161, 0x1e6

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xef
Exit block: 0xff
Body: 0xef, 0xf6, 0xf7, 0xff, 0x1e9

Function 3:
Public function signature: 0x93fc9fbe
Entry block: 0x11b
Exit block: 0xff
Body: 0xff, 0x11b, 0x122, 0x123, 0x1f8

Function 4:
Public function signature: 0xde82efb4
Entry block: 0x147
Exit block: 0xce
Body: 0xce, 0x147, 0x207, 0x273

Function 5:
Public fallback function
Entry block: 0x51
Exit block: 0xce
Body: 0x51, 0x55, 0x6b, 0xcb, 0xcc, 0xce

