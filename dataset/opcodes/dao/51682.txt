Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xbc]
---
0x41 DUP1
0x42 PUSH4 0xa9059cbb
0x47 EQ
0x48 PUSH2 0xbc
0x4b JUMPI
---
0x42: V15 = 0xa9059cbb
0x47: V16 = EQ 0xa9059cbb V11
0x48: V17 = 0xbc
0x4b: JUMPI 0xbc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xfe]
---
0x4c DUP1
0x4d PUSH4 0xc595ce94
0x52 EQ
0x53 PUSH2 0xfe
0x56 JUMPI
---
0x4d: V18 = 0xc595ce94
0x52: V19 = EQ 0xc595ce94 V11
0x53: V20 = 0xfe
0x56: JUMPI 0xfe V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x11f]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x11f
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0x11f
0x61: JUMPI 0x11f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x67]
Successors: [0x158]
---
0x72 JUMPDEST
0x73 PUSH2 0x7a
0x76 PUSH2 0x158
0x79 JUMP
---
0x72: JUMPDEST 
0x73: V29 = 0x7a
0x76: V30 = 0x158
0x79: JUMP 0x158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V11, 0x7a]

================================

Block 0x7a
[0x7a:0xbb]
---
Predecessors: [0x158]
Successors: []
---
0x7a JUMPDEST
0x7b PUSH1 0x40
0x7d MLOAD
0x7e DUP1
0x7f DUP3
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab AND
0xac DUP2
0xad MSTORE
0xae PUSH1 0x20
0xb0 ADD
0xb1 SWAP2
0xb2 POP
0xb3 POP
0xb4 PUSH1 0x40
0xb6 MLOAD
0xb7 DUP1
0xb8 SWAP2
0xb9 SUB
0xba SWAP1
0xbb RETURN
---
0x7a: JUMPDEST 
0x7b: V31 = 0x40
0x7d: V32 = M[0x40]
0x80: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x96: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xab: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0xad: M[V32] = V36
0xae: V37 = 0x20
0xb0: V38 = ADD 0x20 V32
0xb4: V39 = 0x40
0xb6: V40 = M[0x40]
0xb9: V41 = SUB V38 V40
0xbb: RETURN V40 V41
---
Entry stack: [V11, 0x7a, V84]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x41]
Successors: [0xc3, 0xc7]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V42 = CALLVALUE
0xbe: V43 = ISZERO V42
0xbf: V44 = 0xc7
0xc2: JUMPI 0xc7 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V45 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc7
[0xc7:0xfb]
---
Predecessors: [0xbc]
Successors: [0x17d]
---
0xc7 JUMPDEST
0xc8 PUSH2 0xfc
0xcb PUSH1 0x4
0xcd DUP1
0xce DUP1
0xcf CALLDATALOAD
0xd0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5 AND
0xe6 SWAP1
0xe7 PUSH1 0x20
0xe9 ADD
0xea SWAP1
0xeb SWAP2
0xec SWAP1
0xed DUP1
0xee CALLDATALOAD
0xef SWAP1
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP1
0xf4 SWAP2
0xf5 SWAP1
0xf6 POP
0xf7 POP
0xf8 PUSH2 0x17d
0xfb JUMP
---
0xc7: JUMPDEST 
0xc8: V46 = 0xfc
0xcb: V47 = 0x4
0xcf: V48 = CALLDATALOAD 0x4
0xd0: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xe7: V51 = 0x20
0xe9: V52 = ADD 0x20 0x4
0xee: V53 = CALLDATALOAD 0x24
0xf0: V54 = 0x20
0xf2: V55 = ADD 0x20 0x24
0xf8: V56 = 0x17d
0xfb: JUMP 0x17d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfc, V50, V53]
Exit stack: [V11, 0xfc, V50, V53]

================================

Block 0xfc
[0xfc:0xfd]
---
Predecessors: [0x2ad]
Successors: []
---
0xfc JUMPDEST
0xfd STOP
---
0xfc: JUMPDEST 
0xfd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfe
[0xfe:0x11c]
---
Predecessors: [0x4c]
Successors: [0x2b4]
---
0xfe JUMPDEST
0xff PUSH2 0x11d
0x102 PUSH1 0x4
0x104 DUP1
0x105 DUP1
0x106 CALLDATALOAD
0x107 SWAP1
0x108 PUSH1 0x20
0x10a ADD
0x10b SWAP1
0x10c SWAP2
0x10d SWAP1
0x10e DUP1
0x10f CALLDATALOAD
0x110 SWAP1
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP1
0x115 SWAP2
0x116 SWAP1
0x117 POP
0x118 POP
0x119 PUSH2 0x2b4
0x11c JUMP
---
0xfe: JUMPDEST 
0xff: V57 = 0x11d
0x102: V58 = 0x4
0x106: V59 = CALLDATALOAD 0x4
0x108: V60 = 0x20
0x10a: V61 = ADD 0x20 0x4
0x10f: V62 = CALLDATALOAD 0x24
0x111: V63 = 0x20
0x113: V64 = ADD 0x20 0x24
0x119: V65 = 0x2b4
0x11c: JUMP 0x2b4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x11d, V59, V62]
Exit stack: [V11, 0x11d, V59, V62]

================================

Block 0x11d
[0x11d:0x11e]
---
Predecessors: [0x355]
Successors: []
---
0x11d JUMPDEST
0x11e STOP
---
0x11d: JUMPDEST 
0x11e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11f
[0x11f:0x125]
---
Predecessors: [0x57]
Successors: [0x126, 0x12a]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 ISZERO
0x122 PUSH2 0x12a
0x125 JUMPI
---
0x11f: JUMPDEST 
0x120: V66 = CALLVALUE
0x121: V67 = ISZERO V66
0x122: V68 = 0x12a
0x125: JUMPI 0x12a V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x11f]
Successors: []
---
0x126 PUSH1 0x0
0x128 DUP1
0x129 REVERT
---
0x126: V69 = 0x0
0x129: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12a
[0x12a:0x155]
---
Predecessors: [0x11f]
Successors: [0x35d]
---
0x12a JUMPDEST
0x12b PUSH2 0x156
0x12e PUSH1 0x4
0x130 DUP1
0x131 DUP1
0x132 CALLDATALOAD
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 SWAP1
0x14a PUSH1 0x20
0x14c ADD
0x14d SWAP1
0x14e SWAP2
0x14f SWAP1
0x150 POP
0x151 POP
0x152 PUSH2 0x35d
0x155 JUMP
---
0x12a: JUMPDEST 
0x12b: V70 = 0x156
0x12e: V71 = 0x4
0x132: V72 = CALLDATALOAD 0x4
0x133: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x14a: V75 = 0x20
0x14c: V76 = ADD 0x20 0x4
0x152: V77 = 0x35d
0x155: JUMP 0x35d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x156, V74]
Exit stack: [V11, 0x156, V74]

================================

Block 0x156
[0x156:0x157]
---
Predecessors: [0x3f4]
Successors: []
---
0x156 JUMPDEST
0x157 STOP
---
0x156: JUMPDEST 
0x157: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x158
[0x158:0x17c]
---
Predecessors: [0x72]
Successors: [0x7a]
---
0x158 JUMPDEST
0x159 PUSH1 0x0
0x15b DUP1
0x15c SWAP1
0x15d SLOAD
0x15e SWAP1
0x15f PUSH2 0x100
0x162 EXP
0x163 SWAP1
0x164 DIV
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b DUP2
0x17c JUMP
---
0x158: JUMPDEST 
0x159: V78 = 0x0
0x15d: V79 = S[0x0]
0x15f: V80 = 0x100
0x162: V81 = EXP 0x100 0x0
0x164: V82 = DIV V79 0x1
0x165: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x17c: JUMP 0x7a
---
Entry stack: [V11, 0x7a]
Stack pops: 1
Stack additions: [S0, V84]
Exit stack: [V11, 0x7a, V84]

================================

Block 0x17d
[0x17d:0x1d3]
---
Predecessors: [0xc7]
Successors: [0x1d4, 0x1d8]
---
0x17d JUMPDEST
0x17e PUSH1 0x0
0x180 DUP1
0x181 SWAP1
0x182 SLOAD
0x183 SWAP1
0x184 PUSH2 0x100
0x187 EXP
0x188 SWAP1
0x189 DIV
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b5 AND
0x1b6 CALLER
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd EQ
0x1ce ISZERO
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x17d: JUMPDEST 
0x17e: V85 = 0x0
0x182: V86 = S[0x0]
0x184: V87 = 0x100
0x187: V88 = EXP 0x100 0x0
0x189: V89 = DIV V86 0x1
0x18a: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1a0: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1b6: V94 = CALLER
0x1b7: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1cd: V97 = EQ V96 V93
0x1ce: V98 = ISZERO V97
0x1cf: V99 = ISZERO V98
0x1d0: V100 = 0x1d8
0x1d3: JUMPI 0x1d8 V99
---
Entry stack: [V11, 0xfc, V50, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfc, V50, V53]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x17d]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V101 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfc, V50, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfc, V50, V53]

================================

Block 0x1d8
[0x1d8:0x297]
---
Predecessors: [0x17d]
Successors: [0x298, 0x29c]
---
0x1d8 JUMPDEST
0x1d9 PUSH1 0x1
0x1db PUSH1 0x0
0x1dd SWAP1
0x1de SLOAD
0x1df SWAP1
0x1e0 PUSH2 0x100
0x1e3 EXP
0x1e4 SWAP1
0x1e5 DIV
0x1e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fb AND
0x1fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x211 AND
0x212 PUSH4 0xa9059cbb
0x217 DUP4
0x218 DUP4
0x219 PUSH1 0x40
0x21b MLOAD
0x21c DUP4
0x21d PUSH4 0xffffffff
0x222 AND
0x223 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x241 MUL
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x4
0x246 ADD
0x247 DUP1
0x248 DUP4
0x249 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25e AND
0x25f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x274 AND
0x275 DUP2
0x276 MSTORE
0x277 PUSH1 0x20
0x279 ADD
0x27a DUP3
0x27b DUP2
0x27c MSTORE
0x27d PUSH1 0x20
0x27f ADD
0x280 SWAP3
0x281 POP
0x282 POP
0x283 POP
0x284 PUSH1 0x0
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a DUP4
0x28b SUB
0x28c DUP2
0x28d PUSH1 0x0
0x28f DUP8
0x290 DUP1
0x291 EXTCODESIZE
0x292 ISZERO
0x293 ISZERO
0x294 PUSH2 0x29c
0x297 JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V102 = 0x1
0x1db: V103 = 0x0
0x1de: V104 = S[0x1]
0x1e0: V105 = 0x100
0x1e3: V106 = EXP 0x100 0x0
0x1e5: V107 = DIV V104 0x1
0x1e6: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1fc: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x211: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x212: V112 = 0xa9059cbb
0x219: V113 = 0x40
0x21b: V114 = M[0x40]
0x21d: V115 = 0xffffffff
0x222: V116 = AND 0xffffffff 0xa9059cbb
0x223: V117 = 0x100000000000000000000000000000000000000000000000000000000
0x241: V118 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x243: M[V114] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x244: V119 = 0x4
0x246: V120 = ADD 0x4 V114
0x249: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x25e: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x25f: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x274: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x276: M[V120] = V124
0x277: V125 = 0x20
0x279: V126 = ADD 0x20 V120
0x27c: M[V126] = V53
0x27d: V127 = 0x20
0x27f: V128 = ADD 0x20 V126
0x284: V129 = 0x0
0x286: V130 = 0x40
0x288: V131 = M[0x40]
0x28b: V132 = SUB V128 V131
0x28d: V133 = 0x0
0x291: V134 = EXTCODESIZE V111
0x292: V135 = ISZERO V134
0x293: V136 = ISZERO V135
0x294: V137 = 0x29c
0x297: JUMPI 0x29c V136
---
Entry stack: [V11, 0xfc, V50, V53]
Stack pops: 2
Stack additions: [S1, S0, V111, 0xa9059cbb, V128, 0x0, V131, V132, V131, 0x0, V111]
Exit stack: [V11, 0xfc, V50, V53, V111, 0xa9059cbb, V128, 0x0, V131, V132, V131, 0x0, V111]

================================

Block 0x298
[0x298:0x29b]
---
Predecessors: [0x1d8]
Successors: []
---
0x298 PUSH1 0x0
0x29a DUP1
0x29b REVERT
---
0x298: V138 = 0x0
0x29b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfc, V50, V53, V111, 0xa9059cbb, V128, 0x0, V131, V132, V131, 0x0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfc, V50, V53, V111, 0xa9059cbb, V128, 0x0, V131, V132, V131, 0x0, V111]

================================

Block 0x29c
[0x29c:0x2a8]
---
Predecessors: [0x1d8]
Successors: [0x2a9, 0x2ad]
---
0x29c JUMPDEST
0x29d PUSH2 0x2c6
0x2a0 GAS
0x2a1 SUB
0x2a2 CALL
0x2a3 ISZERO
0x2a4 ISZERO
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x29c: JUMPDEST 
0x29d: V139 = 0x2c6
0x2a0: V140 = GAS
0x2a1: V141 = SUB V140 0x2c6
0x2a2: V142 = CALL V141 V111 0x0 V131 V132 V131 0x0
0x2a3: V143 = ISZERO V142
0x2a4: V144 = ISZERO V143
0x2a5: V145 = 0x2ad
0x2a8: JUMPI 0x2ad V144
---
Entry stack: [V11, 0xfc, V50, V53, V111, 0xa9059cbb, V128, 0x0, V131, V132, V131, 0x0, V111]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xfc, V50, V53, V111, 0xa9059cbb, V128]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x29c]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V146 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfc, V50, V53, V111, 0xa9059cbb, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfc, V50, V53, V111, 0xa9059cbb, V128]

================================

Block 0x2ad
[0x2ad:0x2b3]
---
Predecessors: [0x29c]
Successors: [0xfc]
---
0x2ad JUMPDEST
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 JUMP
---
0x2ad: JUMPDEST 
0x2b3: JUMP 0xfc
---
Entry stack: [V11, 0xfc, V50, V53, V111, 0xa9059cbb, V128]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b4
[0x2b4:0x33f]
---
Predecessors: [0xfe]
Successors: [0x340, 0x344]
---
0x2b4 JUMPDEST
0x2b5 PUSH1 0x1
0x2b7 PUSH1 0x0
0x2b9 SWAP1
0x2ba SLOAD
0x2bb SWAP1
0x2bc PUSH2 0x100
0x2bf EXP
0x2c0 SWAP1
0x2c1 DIV
0x2c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d7 AND
0x2d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ed AND
0x2ee PUSH4 0xefef39a1
0x2f3 DUP3
0x2f4 DUP5
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 DUP4
0x2f9 PUSH4 0xffffffff
0x2fe AND
0x2ff PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x31d MUL
0x31e DUP2
0x31f MSTORE
0x320 PUSH1 0x4
0x322 ADD
0x323 DUP1
0x324 DUP3
0x325 DUP2
0x326 MSTORE
0x327 PUSH1 0x20
0x329 ADD
0x32a SWAP2
0x32b POP
0x32c POP
0x32d PUSH1 0x0
0x32f PUSH1 0x40
0x331 MLOAD
0x332 DUP1
0x333 DUP4
0x334 SUB
0x335 DUP2
0x336 DUP6
0x337 DUP9
0x338 DUP1
0x339 EXTCODESIZE
0x33a ISZERO
0x33b ISZERO
0x33c PUSH2 0x344
0x33f JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V147 = 0x1
0x2b7: V148 = 0x0
0x2ba: V149 = S[0x1]
0x2bc: V150 = 0x100
0x2bf: V151 = EXP 0x100 0x0
0x2c1: V152 = DIV V149 0x1
0x2c2: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2d8: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x2ee: V157 = 0xefef39a1
0x2f5: V158 = 0x40
0x2f7: V159 = M[0x40]
0x2f9: V160 = 0xffffffff
0x2fe: V161 = AND 0xffffffff 0xefef39a1
0x2ff: V162 = 0x100000000000000000000000000000000000000000000000000000000
0x31d: V163 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xefef39a1
0x31f: M[V159] = 0xefef39a100000000000000000000000000000000000000000000000000000000
0x320: V164 = 0x4
0x322: V165 = ADD 0x4 V159
0x326: M[V165] = V59
0x327: V166 = 0x20
0x329: V167 = ADD 0x20 V165
0x32d: V168 = 0x0
0x32f: V169 = 0x40
0x331: V170 = M[0x40]
0x334: V171 = SUB V167 V170
0x339: V172 = EXTCODESIZE V156
0x33a: V173 = ISZERO V172
0x33b: V174 = ISZERO V173
0x33c: V175 = 0x344
0x33f: JUMPI 0x344 V174
---
Entry stack: [V11, 0x11d, V59, V62]
Stack pops: 2
Stack additions: [S1, S0, V156, 0xefef39a1, S0, V167, 0x0, V170, V171, V170, S0, V156]
Exit stack: [V11, 0x11d, V59, V62, V156, 0xefef39a1, V62, V167, 0x0, V170, V171, V170, V62, V156]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x2b4]
Successors: []
---
0x340 PUSH1 0x0
0x342 DUP1
0x343 REVERT
---
0x340: V176 = 0x0
0x343: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11d, V59, V62, V156, 0xefef39a1, V62, V167, 0x0, V170, V171, V170, V62, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11d, V59, V62, V156, 0xefef39a1, V62, V167, 0x0, V170, V171, V170, V62, V156]

================================

Block 0x344
[0x344:0x350]
---
Predecessors: [0x2b4]
Successors: [0x351, 0x355]
---
0x344 JUMPDEST
0x345 PUSH2 0x25ee
0x348 GAS
0x349 SUB
0x34a CALL
0x34b ISZERO
0x34c ISZERO
0x34d PUSH2 0x355
0x350 JUMPI
---
0x344: JUMPDEST 
0x345: V177 = 0x25ee
0x348: V178 = GAS
0x349: V179 = SUB V178 0x25ee
0x34a: V180 = CALL V179 V156 V62 V170 V171 V170 0x0
0x34b: V181 = ISZERO V180
0x34c: V182 = ISZERO V181
0x34d: V183 = 0x355
0x350: JUMPI 0x355 V182
---
Entry stack: [V11, 0x11d, V59, V62, V156, 0xefef39a1, V62, V167, 0x0, V170, V171, V170, V62, V156]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x11d, V59, V62, V156, 0xefef39a1, V62, V167]

================================

Block 0x351
[0x351:0x354]
---
Predecessors: [0x344]
Successors: []
---
0x351 PUSH1 0x0
0x353 DUP1
0x354 REVERT
---
0x351: V184 = 0x0
0x354: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11d, V59, V62, V156, 0xefef39a1, V62, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11d, V59, V62, V156, 0xefef39a1, V62, V167]

================================

Block 0x355
[0x355:0x35c]
---
Predecessors: [0x344]
Successors: [0x11d]
---
0x355 JUMPDEST
0x356 POP
0x357 POP
0x358 POP
0x359 POP
0x35a POP
0x35b POP
0x35c JUMP
---
0x355: JUMPDEST 
0x35c: JUMP 0x11d
---
Entry stack: [V11, 0x11d, V59, V62, V156, 0xefef39a1, V62, V167]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x35d
[0x35d:0x3b3]
---
Predecessors: [0x12a]
Successors: [0x3b4, 0x3b8]
---
0x35d JUMPDEST
0x35e PUSH1 0x0
0x360 DUP1
0x361 SWAP1
0x362 SLOAD
0x363 SWAP1
0x364 PUSH2 0x100
0x367 EXP
0x368 SWAP1
0x369 DIV
0x36a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37f AND
0x380 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x395 AND
0x396 CALLER
0x397 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ac AND
0x3ad EQ
0x3ae ISZERO
0x3af ISZERO
0x3b0 PUSH2 0x3b8
0x3b3 JUMPI
---
0x35d: JUMPDEST 
0x35e: V185 = 0x0
0x362: V186 = S[0x0]
0x364: V187 = 0x100
0x367: V188 = EXP 0x100 0x0
0x369: V189 = DIV V186 0x1
0x36a: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x380: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x395: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x396: V194 = CALLER
0x397: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x3ad: V197 = EQ V196 V193
0x3ae: V198 = ISZERO V197
0x3af: V199 = ISZERO V198
0x3b0: V200 = 0x3b8
0x3b3: JUMPI 0x3b8 V199
---
Entry stack: [V11, 0x156, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x156, V74]

================================

Block 0x3b4
[0x3b4:0x3b7]
---
Predecessors: [0x35d]
Successors: []
---
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 REVERT
---
0x3b4: V201 = 0x0
0x3b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x156, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x156, V74]

================================

Block 0x3b8
[0x3b8:0x3ef]
---
Predecessors: [0x35d]
Successors: [0x3f0, 0x3f4]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x0
0x3bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d0 AND
0x3d1 DUP2
0x3d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e7 AND
0x3e8 EQ
0x3e9 ISZERO
0x3ea ISZERO
0x3eb ISZERO
0x3ec PUSH2 0x3f4
0x3ef JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V202 = 0x0
0x3bb: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3d2: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e7: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x3e8: V207 = EQ V206 0x0
0x3e9: V208 = ISZERO V207
0x3ea: V209 = ISZERO V208
0x3eb: V210 = ISZERO V209
0x3ec: V211 = 0x3f4
0x3ef: JUMPI 0x3f4 V210
---
Entry stack: [V11, 0x156, V74]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x156, V74]

================================

Block 0x3f0
[0x3f0:0x3f3]
---
Predecessors: [0x3b8]
Successors: []
---
0x3f0 PUSH1 0x0
0x3f2 DUP1
0x3f3 REVERT
---
0x3f0: V212 = 0x0
0x3f3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x156, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x156, V74]

================================

Block 0x3f4
[0x3f4:0x4b1]
---
Predecessors: [0x3b8]
Successors: [0x156]
---
0x3f4 JUMPDEST
0x3f5 DUP1
0x3f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40b AND
0x40c PUSH1 0x0
0x40e DUP1
0x40f SWAP1
0x410 SLOAD
0x411 SWAP1
0x412 PUSH2 0x100
0x415 EXP
0x416 SWAP1
0x417 DIV
0x418 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42d AND
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x465 PUSH1 0x40
0x467 MLOAD
0x468 PUSH1 0x40
0x46a MLOAD
0x46b DUP1
0x46c SWAP2
0x46d SUB
0x46e SWAP1
0x46f LOG3
0x470 DUP1
0x471 PUSH1 0x0
0x473 DUP1
0x474 PUSH2 0x100
0x477 EXP
0x478 DUP2
0x479 SLOAD
0x47a DUP2
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 MUL
0x491 NOT
0x492 AND
0x493 SWAP1
0x494 DUP4
0x495 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4aa AND
0x4ab MUL
0x4ac OR
0x4ad SWAP1
0x4ae SSTORE
0x4af POP
0x4b0 POP
0x4b1 JUMP
---
0x3f4: JUMPDEST 
0x3f6: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x40c: V215 = 0x0
0x410: V216 = S[0x0]
0x412: V217 = 0x100
0x415: V218 = EXP 0x100 0x0
0x417: V219 = DIV V216 0x1
0x418: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x42e: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x444: V224 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x465: V225 = 0x40
0x467: V226 = M[0x40]
0x468: V227 = 0x40
0x46a: V228 = M[0x40]
0x46d: V229 = SUB V226 V228
0x46f: LOG V228 V229 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V223 V214
0x471: V230 = 0x0
0x474: V231 = 0x100
0x477: V232 = EXP 0x100 0x0
0x479: V233 = S[0x0]
0x47b: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V235 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x491: V236 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x492: V237 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V233
0x495: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x4aa: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x4ab: V240 = MUL V239 0x1
0x4ac: V241 = OR V240 V237
0x4ae: S[0x0] = V241
0x4b1: JUMP 0x156
---
Entry stack: [V11, 0x156, V74]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b2
[0x4b2:0x4ed]
---
Predecessors: []
Successors: []
---
0x4b2 STOP
0x4b3 LOG1
0x4b4 PUSH6 0x627a7a723058
0x4bb SHA3
0x4bc STATICCALL
0x4bd INVALID
0x4be AND
0x4bf MISSING 0xc7
0x4c0 SWAP4
0x4c1 CALLVALUE
0x4c2 MISSING 0xbd
0x4c3 MISSING 0xd6
0x4c4 MISSING 0xaa
0x4c5 MISSING 0xb5
0x4c6 SSTORE
0x4c7 SDIV
0x4c8 MISSING 0xd7
0x4c9 MISSING 0xad
0x4ca LT
0x4cb MISSING 0xc7
0x4cc MISSING 0xd2
0x4cd DUP5
0x4ce BYTE
0x4cf MISSING 0xc
0x4d0 REVERT
0x4d1 MISSING 0xd9
0x4d2 MISSING 0xc6
0x4d3 CALLDATACOPY
0x4d4 MISSING 0xe7
0x4d5 MISSING 0xe1
0x4d6 EXTCODESIZE
0x4d7 PUSH22 0x8c7383f10029
---
0x4b2: STOP 
0x4b3: LOG S0 S1 S2
0x4b4: V242 = 0x627a7a723058
0x4bb: V243 = SHA3 0x627a7a723058 S3
0x4bc: V244 = STATICCALL V243 S4 S5 S6 S7 S8
0x4bd: INVALID 
0x4be: V245 = AND S0 S1
0x4bf: MISSING 0xc7
0x4c1: V246 = CALLVALUE
0x4c2: MISSING 0xbd
0x4c3: MISSING 0xd6
0x4c4: MISSING 0xaa
0x4c5: MISSING 0xb5
0x4c6: S[S0] = S1
0x4c7: V247 = SDIV S2 S3
0x4c8: MISSING 0xd7
0x4c9: MISSING 0xad
0x4ca: V248 = LT S0 S1
0x4cb: MISSING 0xc7
0x4cc: MISSING 0xd2
0x4ce: V249 = BYTE S4 S0
0x4cf: MISSING 0xc
0x4d0: REVERT S0 S1
0x4d1: MISSING 0xd9
0x4d2: MISSING 0xc6
0x4d3: CALLDATACOPY S0 S1 S2
0x4d4: MISSING 0xe7
0x4d5: MISSING 0xe1
0x4d6: V250 = EXTCODESIZE S0
0x4d7: V251 = 0x8c7383f10029
---
Entry stack: []
Stack pops: 0
Stack additions: [V244, V245, V246, S4, S1, S2, S3, S0, V247, V248, V249, S1, S2, S3, S4, 0x8c7383f10029, V250]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x67
Exit block: 0x7a
Body: 0x67, 0x6e, 0x72, 0x7a, 0x158

Function 1:
Public function signature: 0xa9059cbb
Entry block: 0xbc
Exit block: 0xfc
Body: 0xbc, 0xc3, 0xc7, 0xfc, 0x17d, 0x1d4, 0x1d8, 0x298, 0x29c, 0x2a9, 0x2ad

Function 2:
Public function signature: 0xc595ce94
Entry block: 0xfe
Exit block: 0x11d
Body: 0xfe, 0x11d, 0x2b4, 0x340, 0x344, 0x351, 0x355

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x11f
Exit block: 0x156
Body: 0x11f, 0x126, 0x12a, 0x156, 0x35d, 0x3b4, 0x3b8, 0x3f0, 0x3f4

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

