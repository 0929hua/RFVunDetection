Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x11b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x11b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0x11b
0x3f: JUMPI 0x11b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x1a5]
---
0x40 DUP1
0x41 PUSH4 0x10639ea0
0x46 EQ
0x47 PUSH2 0x1a5
0x4a JUMPI
---
0x41: V15 = 0x10639ea0
0x46: V16 = EQ 0x10639ea0 V11
0x47: V17 = 0x1a5
0x4a: JUMPI 0x1a5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1ce]
---
0x4b DUP1
0x4c PUSH4 0x200d2ed2
0x51 EQ
0x52 PUSH2 0x1ce
0x55 JUMPI
---
0x4c: V18 = 0x200d2ed2
0x51: V19 = EQ 0x200d2ed2 V11
0x52: V20 = 0x1ce
0x55: JUMPI 0x1ce V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x20f]
---
0x56 DUP1
0x57 PUSH4 0x66d38203
0x5c EQ
0x5d PUSH2 0x20f
0x60 JUMPI
---
0x57: V21 = 0x66d38203
0x5c: V22 = EQ 0x66d38203 V11
0x5d: V23 = 0x20f
0x60: JUMPI 0x20f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x232]
---
0x61 DUP1
0x62 PUSH4 0x88d761f2
0x67 EQ
0x68 PUSH2 0x232
0x6b JUMPI
---
0x62: V24 = 0x88d761f2
0x67: V25 = EQ 0x88d761f2 V11
0x68: V26 = 0x232
0x6b: JUMPI 0x232 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x247]
---
0x6c DUP1
0x6d PUSH4 0xa0f52da0
0x72 EQ
0x73 PUSH2 0x247
0x76 JUMPI
---
0x6d: V27 = 0xa0f52da0
0x72: V28 = EQ 0xa0f52da0 V11
0x73: V29 = 0x247
0x76: JUMPI 0x247 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x268]
---
0x77 DUP1
0x78 PUSH4 0xd0e30db0
0x7d EQ
0x7e PUSH2 0x268
0x81 JUMPI
---
0x78: V30 = 0xd0e30db0
0x7d: V31 = EQ 0xd0e30db0 V11
0x7e: V32 = 0x268
0x81: JUMPI 0x268 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0xe7]
---
Predecessors: [0x0, 0x77]
Successors: [0xe8, 0xec]
---
0x82 JUMPDEST
0x83 PUSH1 0x1
0x85 SLOAD
0x86 PUSH1 0x40
0x88 DUP1
0x89 MLOAD
0x8a PUSH32 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xab DUP2
0xac MSTORE
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP1
0xb6 SWAP3
0xb7 AND
0xb8 PUSH1 0x4
0xba DUP4
0xbb ADD
0xbc DUP2
0xbd SWAP1
0xbe MSTORE
0xbf SWAP1
0xc0 MLOAD
0xc1 SWAP1
0xc2 SWAP2
0xc3 PUSH4 0xf340fa01
0xc8 SWAP2
0xc9 ADDRESS
0xca BALANCE
0xcb SWAP2
0xcc PUSH1 0x24
0xce DUP1
0xcf DUP3
0xd0 ADD
0xd1 SWAP3
0xd2 PUSH1 0x20
0xd4 SWAP3
0xd5 SWAP1
0xd6 SWAP2
0xd7 SWAP1
0xd8 DUP3
0xd9 SWAP1
0xda SUB
0xdb ADD
0xdc DUP2
0xdd DUP6
0xde DUP9
0xdf DUP1
0xe0 EXTCODESIZE
0xe1 ISZERO
0xe2 DUP1
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0x82: JUMPDEST 
0x83: V33 = 0x1
0x85: V34 = S[0x1]
0x86: V35 = 0x40
0x89: V36 = M[0x40]
0x8a: V37 = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xac: M[V36] = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xad: V38 = 0x1
0xaf: V39 = 0xa0
0xb1: V40 = 0x2
0xb3: V41 = EXP 0x2 0xa0
0xb4: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V43 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V44 = 0x4
0xbb: V45 = ADD V36 0x4
0xbe: M[V45] = V43
0xc0: V46 = M[0x40]
0xc3: V47 = 0xf340fa01
0xc9: V48 = ADDRESS
0xca: V49 = BALANCE V48
0xcc: V50 = 0x24
0xd0: V51 = ADD V36 0x24
0xd2: V52 = 0x20
0xda: V53 = SUB V36 V46
0xdb: V54 = ADD V53 0x24
0xe0: V55 = EXTCODESIZE V43
0xe1: V56 = ISZERO V55
0xe3: V57 = ISZERO V56
0xe4: V58 = 0xec
0xe7: JUMPI 0xec V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Exit stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0x82]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V59 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]

================================

Block 0xec
[0xec:0xf6]
---
Predecessors: [0x82]
Successors: [0xf7, 0x100]
---
0xec JUMPDEST
0xed POP
0xee GAS
0xef CALL
0xf0 ISZERO
0xf1 DUP1
0xf2 ISZERO
0xf3 PUSH2 0x100
0xf6 JUMPI
---
0xec: JUMPDEST 
0xee: V60 = GAS
0xef: V61 = CALL V60 V43 V49 V46 V54 V46 0x20
0xf0: V62 = ISZERO V61
0xf2: V63 = ISZERO V62
0xf3: V64 = 0x100
0xf6: JUMPI 0x100 V63
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Stack pops: 7
Stack additions: [V62]
Exit stack: [V11, V43, 0xf340fa01, V49, V51, V62]

================================

Block 0xf7
[0xf7:0xff]
---
Predecessors: [0xec]
Successors: []
---
0xf7 RETURNDATASIZE
0xf8 PUSH1 0x0
0xfa DUP1
0xfb RETURNDATACOPY
0xfc RETURNDATASIZE
0xfd PUSH1 0x0
0xff REVERT
---
0xf7: V65 = RETURNDATASIZE
0xf8: V66 = 0x0
0xfb: RETURNDATACOPY 0x0 0x0 V65
0xfc: V67 = RETURNDATASIZE
0xfd: V68 = 0x0
0xff: REVERT 0x0 V67
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0xf340fa01, V49, V51, V62]

================================

Block 0x100
[0x100:0x112]
---
Predecessors: [0xec]
Successors: [0x113, 0x117]
---
0x100 JUMPDEST
0x101 POP
0x102 POP
0x103 POP
0x104 POP
0x105 POP
0x106 PUSH1 0x40
0x108 MLOAD
0x109 RETURNDATASIZE
0x10a PUSH1 0x20
0x10c DUP2
0x10d LT
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x100: JUMPDEST 
0x106: V69 = 0x40
0x108: V70 = M[0x40]
0x109: V71 = RETURNDATASIZE
0x10a: V72 = 0x20
0x10d: V73 = LT V71 0x20
0x10e: V74 = ISZERO V73
0x10f: V75 = 0x117
0x112: JUMPI 0x117 V74
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, V62]
Stack pops: 5
Stack additions: [V70, V71]
Exit stack: [V11, V70, V71]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x100]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V76 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V11, V70, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70, V71]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x100]
Successors: []
---
0x117 JUMPDEST
0x118 POP
0x119 POP
0x11a STOP
---
0x117: JUMPDEST 
0x11a: STOP 
---
Entry stack: [V11, V70, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0xd]
Successors: [0x123, 0x127]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d DUP1
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11b: JUMPDEST 
0x11c: V77 = CALLVALUE
0x11e: V78 = ISZERO V77
0x11f: V79 = 0x127
0x122: JUMPI 0x127 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11b]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V80 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x127
[0x127:0x12f]
---
Predecessors: [0x11b]
Successors: [0x270]
---
0x127 JUMPDEST
0x128 POP
0x129 PUSH2 0x130
0x12c PUSH2 0x270
0x12f JUMP
---
0x127: JUMPDEST 
0x129: V81 = 0x130
0x12c: V82 = 0x270
0x12f: JUMP 0x270
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x130]
Exit stack: [V11, 0x130]

================================

Block 0x130
[0x130:0x151]
---
Predecessors: [0x2f6]
Successors: [0x152]
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x20
0x137 DUP1
0x138 DUP3
0x139 MSTORE
0x13a DUP4
0x13b MLOAD
0x13c DUP2
0x13d DUP4
0x13e ADD
0x13f MSTORE
0x140 DUP4
0x141 MLOAD
0x142 SWAP2
0x143 SWAP3
0x144 DUP4
0x145 SWAP3
0x146 SWAP1
0x147 DUP4
0x148 ADD
0x149 SWAP2
0x14a DUP6
0x14b ADD
0x14c SWAP1
0x14d DUP1
0x14e DUP4
0x14f DUP4
0x150 PUSH1 0x0
---
0x130: JUMPDEST 
0x131: V83 = 0x40
0x134: V84 = M[0x40]
0x135: V85 = 0x20
0x139: M[V84] = 0x20
0x13b: V86 = M[V198]
0x13e: V87 = ADD V84 0x20
0x13f: M[V87] = V86
0x141: V88 = M[V198]
0x148: V89 = ADD V84 0x40
0x14b: V90 = ADD V198 0x20
0x150: V91 = 0x0
---
Entry stack: [V11, 0x130, V198]
Stack pops: 1
Stack additions: [S0, V84, V84, V89, V90, V88, V88, V89, V90, 0x0]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, 0x0]

================================

Block 0x152
[0x152:0x15a]
---
Predecessors: [0x130, 0x15b]
Successors: [0x15b, 0x16a]
---
0x152 JUMPDEST
0x153 DUP4
0x154 DUP2
0x155 LT
0x156 ISZERO
0x157 PUSH2 0x16a
0x15a JUMPI
---
0x152: JUMPDEST 
0x155: V92 = LT S0 V88
0x156: V93 = ISZERO V92
0x157: V94 = 0x16a
0x15a: JUMPI 0x16a V93
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]

================================

Block 0x15b
[0x15b:0x169]
---
Predecessors: [0x152]
Successors: [0x152]
---
0x15b DUP2
0x15c DUP2
0x15d ADD
0x15e MLOAD
0x15f DUP4
0x160 DUP3
0x161 ADD
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 PUSH2 0x152
0x169 JUMP
---
0x15d: V95 = ADD S0 V90
0x15e: V96 = M[V95]
0x161: V97 = ADD S0 V89
0x162: M[V97] = V96
0x163: V98 = 0x20
0x165: V99 = ADD 0x20 S0
0x166: V100 = 0x152
0x169: JUMP 0x152
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 3
Stack additions: [S2, S1, V99]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, V99]

================================

Block 0x16a
[0x16a:0x17d]
---
Predecessors: [0x152]
Successors: [0x17e, 0x197]
---
0x16a JUMPDEST
0x16b POP
0x16c POP
0x16d POP
0x16e POP
0x16f SWAP1
0x170 POP
0x171 SWAP1
0x172 DUP2
0x173 ADD
0x174 SWAP1
0x175 PUSH1 0x1f
0x177 AND
0x178 DUP1
0x179 ISZERO
0x17a PUSH2 0x197
0x17d JUMPI
---
0x16a: JUMPDEST 
0x173: V101 = ADD V88 V89
0x175: V102 = 0x1f
0x177: V103 = AND 0x1f V88
0x179: V104 = ISZERO V103
0x17a: V105 = 0x197
0x17d: JUMPI 0x197 V104
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 7
Stack additions: [V101, V103]
Exit stack: [V11, 0x130, V198, V84, V84, V101, V103]

================================

Block 0x17e
[0x17e:0x196]
---
Predecessors: [0x16a]
Successors: [0x197]
---
0x17e DUP1
0x17f DUP3
0x180 SUB
0x181 DUP1
0x182 MLOAD
0x183 PUSH1 0x1
0x185 DUP4
0x186 PUSH1 0x20
0x188 SUB
0x189 PUSH2 0x100
0x18c EXP
0x18d SUB
0x18e NOT
0x18f AND
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP2
0x196 POP
---
0x180: V106 = SUB V101 V103
0x182: V107 = M[V106]
0x183: V108 = 0x1
0x186: V109 = 0x20
0x188: V110 = SUB 0x20 V103
0x189: V111 = 0x100
0x18c: V112 = EXP 0x100 V110
0x18d: V113 = SUB V112 0x1
0x18e: V114 = NOT V113
0x18f: V115 = AND V114 V107
0x191: M[V106] = V115
0x192: V116 = 0x20
0x194: V117 = ADD 0x20 V106
---
Entry stack: [V11, 0x130, V198, V84, V84, V101, V103]
Stack pops: 2
Stack additions: [V117, S0]
Exit stack: [V11, 0x130, V198, V84, V84, V117, V103]

================================

Block 0x197
[0x197:0x1a4]
---
Predecessors: [0x16a, 0x17e]
Successors: []
---
0x197 JUMPDEST
0x198 POP
0x199 SWAP3
0x19a POP
0x19b POP
0x19c POP
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 DUP1
0x1a1 SWAP2
0x1a2 SUB
0x1a3 SWAP1
0x1a4 RETURN
---
0x197: JUMPDEST 
0x19d: V118 = 0x40
0x19f: V119 = M[0x40]
0x1a2: V120 = SUB S1 V119
0x1a4: RETURN V119 V120
---
Entry stack: [V11, 0x130, V198, V84, V84, S1, V103]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x130]

================================

Block 0x1a5
[0x1a5:0x1ac]
---
Predecessors: [0x40]
Successors: [0x1ad, 0x1b1]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 DUP1
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V121 = CALLVALUE
0x1a8: V122 = ISZERO V121
0x1a9: V123 = 0x1b1
0x1ac: JUMPI 0x1b1 V122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V121]
Exit stack: [V11, V121]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V124 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V11, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V121]

================================

Block 0x1b1
[0x1b1:0x1b9]
---
Predecessors: [0x1a5]
Successors: [0x2fe]
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x2fe
0x1b9 JUMP
---
0x1b1: JUMPDEST 
0x1b3: V125 = 0x1ba
0x1b6: V126 = 0x2fe
0x1b9: JUMP 0x2fe
---
Entry stack: [V11, V121]
Stack pops: 1
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1cd]
---
Predecessors: [0x3af, 0x5a0, 0x74a, 0x946]
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd DUP1
0x1be MLOAD
0x1bf SWAP2
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 DUP3
0x1c3 MSTORE
0x1c4 MLOAD
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 SWAP1
0x1c8 SUB
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd RETURN
---
0x1ba: JUMPDEST 
0x1bb: V127 = 0x40
0x1be: V128 = M[0x40]
0x1c0: V129 = ISZERO {0x0, 0x1}
0x1c1: V130 = ISZERO V129
0x1c3: M[V128] = V130
0x1c4: V131 = M[0x40]
0x1c8: V132 = SUB V128 V131
0x1c9: V133 = 0x20
0x1cb: V134 = ADD 0x20 V132
0x1cd: RETURN V131 V134
---
Entry stack: [V11, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x4b]
Successors: [0x1d6, 0x1da]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 DUP1
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V135 = CALLVALUE
0x1d1: V136 = ISZERO V135
0x1d2: V137 = 0x1da
0x1d5: JUMPI 0x1da V136
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V135]
Exit stack: [V11, V135]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V138 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V11, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V135]

================================

Block 0x1da
[0x1da:0x1e2]
---
Predecessors: [0x1ce]
Successors: [0x3d2]
---
0x1da JUMPDEST
0x1db POP
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x3d2
0x1e2 JUMP
---
0x1da: JUMPDEST 
0x1dc: V139 = 0x1e3
0x1df: V140 = 0x3d2
0x1e2: JUMP 0x3d2
---
Entry stack: [V11, V135]
Stack pops: 1
Stack additions: [0x1e3]
Exit stack: [V11, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x20e]
---
Predecessors: [0x3d2]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 DUP1
0x1e7 MLOAD
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 SWAP5
0x1f1 DUP6
0x1f2 AND
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 SWAP3
0x1f6 SWAP1
0x1f7 SWAP4
0x1f8 AND
0x1f9 PUSH1 0x20
0x1fb DUP4
0x1fc ADD
0x1fd MSTORE
0x1fe ISZERO
0x1ff ISZERO
0x200 DUP2
0x201 DUP4
0x202 ADD
0x203 MSTORE
0x204 SWAP1
0x205 MLOAD
0x206 SWAP1
0x207 DUP2
0x208 SWAP1
0x209 SUB
0x20a PUSH1 0x60
0x20c ADD
0x20d SWAP1
0x20e RETURN
---
0x1e3: JUMPDEST 
0x1e4: V141 = 0x40
0x1e7: V142 = M[0x40]
0x1e8: V143 = 0x1
0x1ea: V144 = 0xa0
0x1ec: V145 = 0x2
0x1ee: V146 = EXP 0x2 0xa0
0x1ef: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x1f4: M[V142] = V148
0x1f8: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x1f9: V150 = 0x20
0x1fc: V151 = ADD V142 0x20
0x1fd: M[V151] = V149
0x1fe: V152 = ISZERO V304
0x1ff: V153 = ISZERO V152
0x202: V154 = ADD 0x40 V142
0x203: M[V154] = V153
0x205: V155 = M[0x40]
0x209: V156 = SUB V142 V155
0x20a: V157 = 0x60
0x20c: V158 = ADD 0x60 V156
0x20e: RETURN V155 V158
---
Entry stack: [V11, V299, V300, V304]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x216]
---
Predecessors: [0x56]
Successors: [0x217, 0x21b]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 DUP1
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x20f: JUMPDEST 
0x210: V159 = CALLVALUE
0x212: V160 = ISZERO V159
0x213: V161 = 0x21b
0x216: JUMPI 0x21b V160
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V159]
Exit stack: [V11, V159]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x20f]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V162 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V11, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V159]

================================

Block 0x21b
[0x21b:0x22f]
---
Predecessors: [0x20f]
Successors: [0x405]
---
0x21b JUMPDEST
0x21c POP
0x21d PUSH2 0x230
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 PUSH1 0x4
0x22a CALLDATALOAD
0x22b AND
0x22c PUSH2 0x405
0x22f JUMP
---
0x21b: JUMPDEST 
0x21d: V163 = 0x230
0x220: V164 = 0x1
0x222: V165 = 0xa0
0x224: V166 = 0x2
0x226: V167 = EXP 0x2 0xa0
0x227: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V169 = 0x4
0x22a: V170 = CALLDATALOAD 0x4
0x22b: V171 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V172 = 0x405
0x22f: JUMP 0x405
---
Entry stack: [V11, V159]
Stack pops: 1
Stack additions: [0x230, V171]
Exit stack: [V11, 0x230, V171]

================================

Block 0x230
[0x230:0x231]
---
Predecessors: [0x4a2]
Successors: []
---
0x230 JUMPDEST
0x231 STOP
---
0x230: JUMPDEST 
0x231: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x232
[0x232:0x239]
---
Predecessors: [0x61]
Successors: [0x23a, 0x23e]
---
0x232 JUMPDEST
0x233 CALLVALUE
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x232: JUMPDEST 
0x233: V173 = CALLVALUE
0x235: V174 = ISZERO V173
0x236: V175 = 0x23e
0x239: JUMPI 0x23e V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V173]
Exit stack: [V11, V173]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x232]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V176 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V11, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V173]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x232]
Successors: [0x4ef]
---
0x23e JUMPDEST
0x23f POP
0x240 PUSH2 0x1ba
0x243 PUSH2 0x4ef
0x246 JUMP
---
0x23e: JUMPDEST 
0x240: V177 = 0x1ba
0x243: V178 = 0x4ef
0x246: JUMP 0x4ef
---
Entry stack: [V11, V173]
Stack pops: 1
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x6c]
Successors: [0x24f, 0x253]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x247: JUMPDEST 
0x248: V179 = CALLVALUE
0x24a: V180 = ISZERO V179
0x24b: V181 = 0x253
0x24e: JUMPI 0x253 V180
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V11, V179]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x247]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V182 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V11, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V179]

================================

Block 0x253
[0x253:0x267]
---
Predecessors: [0x247]
Successors: [0x5d8]
---
0x253 JUMPDEST
0x254 POP
0x255 PUSH2 0x1ba
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 PUSH1 0x4
0x262 CALLDATALOAD
0x263 AND
0x264 PUSH2 0x5d8
0x267 JUMP
---
0x253: JUMPDEST 
0x255: V183 = 0x1ba
0x258: V184 = 0x1
0x25a: V185 = 0xa0
0x25c: V186 = 0x2
0x25e: V187 = EXP 0x2 0xa0
0x25f: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x260: V189 = 0x4
0x262: V190 = CALLDATALOAD 0x4
0x263: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x264: V192 = 0x5d8
0x267: JUMP 0x5d8
---
Entry stack: [V11, V179]
Stack pops: 1
Stack additions: [0x1ba, V191]
Exit stack: [V11, 0x1ba, V191]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x77]
Successors: [0x74f]
---
0x268 JUMPDEST
0x269 PUSH2 0x1ba
0x26c PUSH2 0x74f
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V193 = 0x1ba
0x26c: V194 = 0x74f
0x26f: JUMP 0x74f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x270
[0x270:0x2af]
---
Predecessors: [0x127]
Successors: [0x2b0, 0x2f6]
---
0x270 JUMPDEST
0x271 PUSH1 0x0
0x273 DUP1
0x274 SLOAD
0x275 PUSH1 0x40
0x277 DUP1
0x278 MLOAD
0x279 PUSH1 0x20
0x27b PUSH1 0x2
0x27d PUSH1 0x1
0x27f DUP6
0x280 AND
0x281 ISZERO
0x282 PUSH2 0x100
0x285 MUL
0x286 PUSH1 0x0
0x288 NOT
0x289 ADD
0x28a SWAP1
0x28b SWAP5
0x28c AND
0x28d SWAP4
0x28e SWAP1
0x28f SWAP4
0x290 DIV
0x291 PUSH1 0x1f
0x293 DUP2
0x294 ADD
0x295 DUP5
0x296 SWAP1
0x297 DIV
0x298 DUP5
0x299 MUL
0x29a DUP3
0x29b ADD
0x29c DUP5
0x29d ADD
0x29e SWAP1
0x29f SWAP3
0x2a0 MSTORE
0x2a1 DUP2
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 SWAP3
0x2a5 SWAP2
0x2a6 DUP4
0x2a7 ADD
0x2a8 DUP3
0x2a9 DUP3
0x2aa DUP1
0x2ab ISZERO
0x2ac PUSH2 0x2f6
0x2af JUMPI
---
0x270: JUMPDEST 
0x271: V195 = 0x0
0x274: V196 = S[0x0]
0x275: V197 = 0x40
0x278: V198 = M[0x40]
0x279: V199 = 0x20
0x27b: V200 = 0x2
0x27d: V201 = 0x1
0x280: V202 = AND V196 0x1
0x281: V203 = ISZERO V202
0x282: V204 = 0x100
0x285: V205 = MUL 0x100 V203
0x286: V206 = 0x0
0x288: V207 = NOT 0x0
0x289: V208 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V205
0x28c: V209 = AND V196 V208
0x290: V210 = DIV V209 0x2
0x291: V211 = 0x1f
0x294: V212 = ADD V210 0x1f
0x297: V213 = DIV V212 0x20
0x299: V214 = MUL 0x20 V213
0x29b: V215 = ADD V198 V214
0x29d: V216 = ADD 0x20 V215
0x2a0: M[0x40] = V216
0x2a3: M[V198] = V210
0x2a7: V217 = ADD V198 0x20
0x2ab: V218 = ISZERO V210
0x2ac: V219 = 0x2f6
0x2af: JUMPI 0x2f6 V218
---
Entry stack: [V11, 0x130]
Stack pops: 0
Stack additions: [V198, 0x0, V210, V217, 0x0, V210]
Exit stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]

================================

Block 0x2b0
[0x2b0:0x2b7]
---
Predecessors: [0x270]
Successors: [0x2b8, 0x2cb]
---
0x2b0 DUP1
0x2b1 PUSH1 0x1f
0x2b3 LT
0x2b4 PUSH2 0x2cb
0x2b7 JUMPI
---
0x2b1: V220 = 0x1f
0x2b3: V221 = LT 0x1f V210
0x2b4: V222 = 0x2cb
0x2b7: JUMPI 0x2cb V221
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]

================================

Block 0x2b8
[0x2b8:0x2ca]
---
Predecessors: [0x2b0]
Successors: [0x2f6]
---
0x2b8 PUSH2 0x100
0x2bb DUP1
0x2bc DUP4
0x2bd SLOAD
0x2be DIV
0x2bf MUL
0x2c0 DUP4
0x2c1 MSTORE
0x2c2 SWAP2
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 SWAP2
0x2c7 PUSH2 0x2f6
0x2ca JUMP
---
0x2b8: V223 = 0x100
0x2bd: V224 = S[0x0]
0x2be: V225 = DIV V224 0x100
0x2bf: V226 = MUL V225 0x100
0x2c1: M[V217] = V226
0x2c3: V227 = 0x20
0x2c5: V228 = ADD 0x20 V217
0x2c7: V229 = 0x2f6
0x2ca: JUMP 0x2f6
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 3
Stack additions: [V228, S1, S0]
Exit stack: [V11, 0x130, V198, 0x0, V210, V228, 0x0, V210]

================================

Block 0x2cb
[0x2cb:0x2d8]
---
Predecessors: [0x2b0]
Successors: [0x2d9]
---
0x2cb JUMPDEST
0x2cc DUP3
0x2cd ADD
0x2ce SWAP2
0x2cf SWAP1
0x2d0 PUSH1 0x0
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 PUSH1 0x0
0x2d7 SHA3
0x2d8 SWAP1
---
0x2cb: JUMPDEST 
0x2cd: V230 = ADD V217 V210
0x2d0: V231 = 0x0
0x2d2: M[0x0] = 0x0
0x2d3: V232 = 0x20
0x2d5: V233 = 0x0
0x2d7: V234 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 3
Stack additions: [V230, V234, S2]
Exit stack: [V11, 0x130, V198, 0x0, V210, V230, V234, V217]

================================

Block 0x2d9
[0x2d9:0x2ec]
---
Predecessors: [0x2cb, 0x2d9]
Successors: [0x2d9, 0x2ed]
---
0x2d9 JUMPDEST
0x2da DUP2
0x2db SLOAD
0x2dc DUP2
0x2dd MSTORE
0x2de SWAP1
0x2df PUSH1 0x1
0x2e1 ADD
0x2e2 SWAP1
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 DUP1
0x2e7 DUP4
0x2e8 GT
0x2e9 PUSH2 0x2d9
0x2ec JUMPI
---
0x2d9: JUMPDEST 
0x2db: V235 = S[S1]
0x2dd: M[S0] = V235
0x2df: V236 = 0x1
0x2e1: V237 = ADD 0x1 S1
0x2e3: V238 = 0x20
0x2e5: V239 = ADD 0x20 S0
0x2e8: V240 = GT V230 V239
0x2e9: V241 = 0x2d9
0x2ec: JUMPI 0x2d9 V240
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V230, S1, S0]
Stack pops: 3
Stack additions: [S2, V237, V239]
Exit stack: [V11, 0x130, V198, 0x0, V210, V230, V237, V239]

================================

Block 0x2ed
[0x2ed:0x2f5]
---
Predecessors: [0x2d9]
Successors: [0x2f6]
---
0x2ed DUP3
0x2ee SWAP1
0x2ef SUB
0x2f0 PUSH1 0x1f
0x2f2 AND
0x2f3 DUP3
0x2f4 ADD
0x2f5 SWAP2
---
0x2ef: V242 = SUB V239 V230
0x2f0: V243 = 0x1f
0x2f2: V244 = AND 0x1f V242
0x2f4: V245 = ADD V230 V244
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V230, V237, V239]
Stack pops: 3
Stack additions: [V245, S1, S2]
Exit stack: [V11, 0x130, V198, 0x0, V210, V245, V237, V230]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0x270, 0x2b8, 0x2ed]
Successors: [0x130]
---
0x2f6 JUMPDEST
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc DUP2
0x2fd JUMP
---
0x2f6: JUMPDEST 
0x2fd: JUMP 0x130
---
Entry stack: [V11, 0x130, V198, 0x0, V210, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x130, V198]

================================

Block 0x2fe
[0x2fe:0x313]
---
Predecessors: [0x1b1]
Successors: [0x314, 0x3af]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x1
0x301 SLOAD
0x302 PUSH1 0x0
0x304 SWAP1
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d AND
0x30e CALLER
0x30f EQ
0x310 PUSH2 0x3af
0x313 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V246 = 0x1
0x301: V247 = S[0x1]
0x302: V248 = 0x0
0x305: V249 = 0x1
0x307: V250 = 0xa0
0x309: V251 = 0x2
0x30b: V252 = EXP 0x2 0xa0
0x30c: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x30e: V255 = CALLER
0x30f: V256 = EQ V255 V254
0x310: V257 = 0x3af
0x313: JUMPI 0x3af V256
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x314
[0x314:0x3ae]
---
Predecessors: [0x2fe]
Successors: []
---
0x314 PUSH1 0x40
0x316 DUP1
0x317 MLOAD
0x318 PUSH1 0xe5
0x31a PUSH1 0x2
0x31c EXP
0x31d PUSH3 0x461bcd
0x321 MUL
0x322 DUP2
0x323 MSTORE
0x324 PUSH1 0x20
0x326 PUSH1 0x4
0x328 DUP3
0x329 ADD
0x32a MSTORE
0x32b PUSH1 0x47
0x32d PUSH1 0x24
0x32f DUP3
0x330 ADD
0x331 MSTORE
0x332 PUSH32 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x353 PUSH1 0x44
0x355 DUP3
0x356 ADD
0x357 MSTORE
0x358 PUSH32 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x379 PUSH1 0x64
0x37b DUP3
0x37c ADD
0x37d MSTORE
0x37e PUSH32 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x39f PUSH1 0x84
0x3a1 DUP3
0x3a2 ADD
0x3a3 MSTORE
0x3a4 SWAP1
0x3a5 MLOAD
0x3a6 SWAP1
0x3a7 DUP2
0x3a8 SWAP1
0x3a9 SUB
0x3aa PUSH1 0xa4
0x3ac ADD
0x3ad SWAP1
0x3ae REVERT
---
0x314: V258 = 0x40
0x317: V259 = M[0x40]
0x318: V260 = 0xe5
0x31a: V261 = 0x2
0x31c: V262 = EXP 0x2 0xe5
0x31d: V263 = 0x461bcd
0x321: V264 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x323: M[V259] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x324: V265 = 0x20
0x326: V266 = 0x4
0x329: V267 = ADD V259 0x4
0x32a: M[V267] = 0x20
0x32b: V268 = 0x47
0x32d: V269 = 0x24
0x330: V270 = ADD V259 0x24
0x331: M[V270] = 0x47
0x332: V271 = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x353: V272 = 0x44
0x356: V273 = ADD V259 0x44
0x357: M[V273] = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x358: V274 = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x379: V275 = 0x64
0x37c: V276 = ADD V259 0x64
0x37d: M[V276] = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x37e: V277 = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x39f: V278 = 0x84
0x3a2: V279 = ADD V259 0x84
0x3a3: M[V279] = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x3a5: V280 = M[0x40]
0x3a9: V281 = SUB V259 V280
0x3aa: V282 = 0xa4
0x3ac: V283 = ADD 0xa4 V281
0x3ae: REVERT V280 V283
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x3af
[0x3af:0x3d1]
---
Predecessors: [0x2fe]
Successors: [0x1ba]
---
0x3af JUMPDEST
0x3b0 POP
0x3b1 PUSH1 0x2
0x3b3 DUP1
0x3b4 SLOAD
0x3b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ca NOT
0x3cb AND
0x3cc SWAP1
0x3cd SSTORE
0x3ce PUSH1 0x1
0x3d0 SWAP1
0x3d1 JUMP
---
0x3af: JUMPDEST 
0x3b1: V284 = 0x2
0x3b4: V285 = S[0x2]
0x3b5: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ca: V287 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V288 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V285
0x3cd: S[0x2] = V288
0x3ce: V289 = 0x1
0x3d1: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x3d2
[0x3d2:0x404]
---
Predecessors: [0x1da]
Successors: [0x1e3]
---
0x3d2 JUMPDEST
0x3d3 PUSH1 0x4
0x3d5 SLOAD
0x3d6 PUSH1 0x2
0x3d8 SLOAD
0x3d9 PUSH1 0x1
0x3db PUSH1 0xa0
0x3dd PUSH1 0x2
0x3df EXP
0x3e0 SUB
0x3e1 DUP1
0x3e2 DUP4
0x3e3 AND
0x3e4 SWAP4
0x3e5 SWAP2
0x3e6 AND
0x3e7 SWAP2
0x3e8 PUSH21 0x10000000000000000000000000000000000000000
0x3fe SWAP1
0x3ff DIV
0x400 PUSH1 0xff
0x402 AND
0x403 SWAP1
0x404 JUMP
---
0x3d2: JUMPDEST 
0x3d3: V290 = 0x4
0x3d5: V291 = S[0x4]
0x3d6: V292 = 0x2
0x3d8: V293 = S[0x2]
0x3d9: V294 = 0x1
0x3db: V295 = 0xa0
0x3dd: V296 = 0x2
0x3df: V297 = EXP 0x2 0xa0
0x3e0: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e3: V299 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V300 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x3e8: V301 = 0x10000000000000000000000000000000000000000
0x3ff: V302 = DIV V291 0x10000000000000000000000000000000000000000
0x400: V303 = 0xff
0x402: V304 = AND 0xff V302
0x404: JUMP 0x1e3
---
Entry stack: [V11, 0x1e3]
Stack pops: 1
Stack additions: [V299, V300, V304]
Exit stack: [V11, V299, V300, V304]

================================

Block 0x405
[0x405:0x42c]
---
Predecessors: [0x21b]
Successors: [0x42d, 0x4a2]
---
0x405 JUMPDEST
0x406 PUSH1 0x4
0x408 SLOAD
0x409 PUSH21 0x10000000000000000000000000000000000000000
0x41f SWAP1
0x420 DIV
0x421 PUSH1 0xff
0x423 AND
0x424 ISZERO
0x425 ISZERO
0x426 PUSH1 0x1
0x428 EQ
0x429 PUSH2 0x4a2
0x42c JUMPI
---
0x405: JUMPDEST 
0x406: V305 = 0x4
0x408: V306 = S[0x4]
0x409: V307 = 0x10000000000000000000000000000000000000000
0x420: V308 = DIV V306 0x10000000000000000000000000000000000000000
0x421: V309 = 0xff
0x423: V310 = AND 0xff V308
0x424: V311 = ISZERO V310
0x425: V312 = ISZERO V311
0x426: V313 = 0x1
0x428: V314 = EQ 0x1 V312
0x429: V315 = 0x4a2
0x42c: JUMPI 0x4a2 V314
---
Entry stack: [V11, 0x230, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x230, V171]

================================

Block 0x42d
[0x42d:0x4a1]
---
Predecessors: [0x405]
Successors: []
---
0x42d PUSH1 0x40
0x42f DUP1
0x430 MLOAD
0x431 PUSH1 0xe5
0x433 PUSH1 0x2
0x435 EXP
0x436 PUSH3 0x461bcd
0x43a MUL
0x43b DUP2
0x43c MSTORE
0x43d PUSH1 0x20
0x43f PUSH1 0x4
0x441 DUP3
0x442 ADD
0x443 MSTORE
0x444 PUSH1 0x35
0x446 PUSH1 0x24
0x448 DUP3
0x449 ADD
0x44a MSTORE
0x44b PUSH32 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x46c PUSH1 0x44
0x46e DUP3
0x46f ADD
0x470 MSTORE
0x471 PUSH32 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x492 PUSH1 0x64
0x494 DUP3
0x495 ADD
0x496 MSTORE
0x497 SWAP1
0x498 MLOAD
0x499 SWAP1
0x49a DUP2
0x49b SWAP1
0x49c SUB
0x49d PUSH1 0x84
0x49f ADD
0x4a0 SWAP1
0x4a1 REVERT
---
0x42d: V316 = 0x40
0x430: V317 = M[0x40]
0x431: V318 = 0xe5
0x433: V319 = 0x2
0x435: V320 = EXP 0x2 0xe5
0x436: V321 = 0x461bcd
0x43a: V322 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x43c: M[V317] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x43d: V323 = 0x20
0x43f: V324 = 0x4
0x442: V325 = ADD V317 0x4
0x443: M[V325] = 0x20
0x444: V326 = 0x35
0x446: V327 = 0x24
0x449: V328 = ADD V317 0x24
0x44a: M[V328] = 0x35
0x44b: V329 = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x46c: V330 = 0x44
0x46f: V331 = ADD V317 0x44
0x470: M[V331] = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x471: V332 = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x492: V333 = 0x64
0x495: V334 = ADD V317 0x64
0x496: M[V334] = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x498: V335 = M[0x40]
0x49c: V336 = SUB V317 V335
0x49d: V337 = 0x84
0x49f: V338 = ADD 0x84 V336
0x4a1: REVERT V335 V338
---
Entry stack: [V11, 0x230, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x230, V171]

================================

Block 0x4a2
[0x4a2:0x4ee]
---
Predecessors: [0x405]
Successors: [0x230]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x2
0x4a5 DUP1
0x4a6 SLOAD
0x4a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bc NOT
0x4bd AND
0x4be PUSH1 0x1
0x4c0 PUSH1 0xa0
0x4c2 PUSH1 0x2
0x4c4 EXP
0x4c5 SUB
0x4c6 SWAP3
0x4c7 SWAP1
0x4c8 SWAP3
0x4c9 AND
0x4ca SWAP2
0x4cb SWAP1
0x4cc SWAP2
0x4cd OR
0x4ce SWAP1
0x4cf SSTORE
0x4d0 PUSH1 0x4
0x4d2 DUP1
0x4d3 SLOAD
0x4d4 PUSH21 0xff0000000000000000000000000000000000000000
0x4ea NOT
0x4eb AND
0x4ec SWAP1
0x4ed SSTORE
0x4ee JUMP
---
0x4a2: JUMPDEST 
0x4a3: V339 = 0x2
0x4a6: V340 = S[0x2]
0x4a7: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bc: V342 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4bd: V343 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V340
0x4be: V344 = 0x1
0x4c0: V345 = 0xa0
0x4c2: V346 = 0x2
0x4c4: V347 = EXP 0x2 0xa0
0x4c5: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c9: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x4cd: V350 = OR V349 V343
0x4cf: S[0x2] = V350
0x4d0: V351 = 0x4
0x4d3: V352 = S[0x4]
0x4d4: V353 = 0xff0000000000000000000000000000000000000000
0x4ea: V354 = NOT 0xff0000000000000000000000000000000000000000
0x4eb: V355 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V352
0x4ed: S[0x4] = V355
0x4ee: JUMP 0x230
---
Entry stack: [V11, 0x230, V171]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ef
[0x4ef:0x504]
---
Predecessors: [0x23e]
Successors: [0x505, 0x5a0]
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x2
0x4f2 SLOAD
0x4f3 PUSH1 0x0
0x4f5 SWAP1
0x4f6 PUSH1 0x1
0x4f8 PUSH1 0xa0
0x4fa PUSH1 0x2
0x4fc EXP
0x4fd SUB
0x4fe AND
0x4ff CALLER
0x500 EQ
0x501 PUSH2 0x5a0
0x504 JUMPI
---
0x4ef: JUMPDEST 
0x4f0: V356 = 0x2
0x4f2: V357 = S[0x2]
0x4f3: V358 = 0x0
0x4f6: V359 = 0x1
0x4f8: V360 = 0xa0
0x4fa: V361 = 0x2
0x4fc: V362 = EXP 0x2 0xa0
0x4fd: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fe: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x4ff: V365 = CALLER
0x500: V366 = EQ V365 V364
0x501: V367 = 0x5a0
0x504: JUMPI 0x5a0 V366
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x505
[0x505:0x59f]
---
Predecessors: [0x4ef]
Successors: []
---
0x505 PUSH1 0x40
0x507 DUP1
0x508 MLOAD
0x509 PUSH1 0xe5
0x50b PUSH1 0x2
0x50d EXP
0x50e PUSH3 0x461bcd
0x512 MUL
0x513 DUP2
0x514 MSTORE
0x515 PUSH1 0x20
0x517 PUSH1 0x4
0x519 DUP3
0x51a ADD
0x51b MSTORE
0x51c PUSH1 0x43
0x51e PUSH1 0x24
0x520 DUP3
0x521 ADD
0x522 MSTORE
0x523 PUSH32 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x544 PUSH1 0x44
0x546 DUP3
0x547 ADD
0x548 MSTORE
0x549 PUSH32 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x56a PUSH1 0x64
0x56c DUP3
0x56d ADD
0x56e MSTORE
0x56f PUSH32 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x590 PUSH1 0x84
0x592 DUP3
0x593 ADD
0x594 MSTORE
0x595 SWAP1
0x596 MLOAD
0x597 SWAP1
0x598 DUP2
0x599 SWAP1
0x59a SUB
0x59b PUSH1 0xa4
0x59d ADD
0x59e SWAP1
0x59f REVERT
---
0x505: V368 = 0x40
0x508: V369 = M[0x40]
0x509: V370 = 0xe5
0x50b: V371 = 0x2
0x50d: V372 = EXP 0x2 0xe5
0x50e: V373 = 0x461bcd
0x512: V374 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x514: M[V369] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x515: V375 = 0x20
0x517: V376 = 0x4
0x51a: V377 = ADD V369 0x4
0x51b: M[V377] = 0x20
0x51c: V378 = 0x43
0x51e: V379 = 0x24
0x521: V380 = ADD V369 0x24
0x522: M[V380] = 0x43
0x523: V381 = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x544: V382 = 0x44
0x547: V383 = ADD V369 0x44
0x548: M[V383] = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x549: V384 = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x56a: V385 = 0x64
0x56d: V386 = ADD V369 0x64
0x56e: M[V386] = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x56f: V387 = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x590: V388 = 0x84
0x593: V389 = ADD V369 0x84
0x594: M[V389] = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x596: V390 = M[0x40]
0x59a: V391 = SUB V369 V390
0x59b: V392 = 0xa4
0x59d: V393 = ADD 0xa4 V391
0x59f: REVERT V390 V393
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x5a0
[0x5a0:0x5d7]
---
Predecessors: [0x4ef]
Successors: [0x1ba]
---
0x5a0 JUMPDEST
0x5a1 POP
0x5a2 PUSH1 0x2
0x5a4 DUP1
0x5a5 SLOAD
0x5a6 PUSH1 0x1
0x5a8 DUP1
0x5a9 SLOAD
0x5aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bf NOT
0x5c0 SWAP1
0x5c1 DUP2
0x5c2 AND
0x5c3 PUSH1 0x1
0x5c5 PUSH1 0xa0
0x5c7 PUSH1 0x2
0x5c9 EXP
0x5ca SUB
0x5cb DUP5
0x5cc AND
0x5cd OR
0x5ce DUP3
0x5cf SSTORE
0x5d0 SWAP1
0x5d1 SWAP2
0x5d2 AND
0x5d3 SWAP1
0x5d4 SWAP2
0x5d5 SSTORE
0x5d6 SWAP1
0x5d7 JUMP
---
0x5a0: JUMPDEST 
0x5a2: V394 = 0x2
0x5a5: V395 = S[0x2]
0x5a6: V396 = 0x1
0x5a9: V397 = S[0x1]
0x5aa: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bf: V399 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V400 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V397
0x5c3: V401 = 0x1
0x5c5: V402 = 0xa0
0x5c7: V403 = 0x2
0x5c9: V404 = EXP 0x2 0xa0
0x5ca: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cc: V406 = AND V395 0xffffffffffffffffffffffffffffffffffffffff
0x5cd: V407 = OR V406 V400
0x5cf: S[0x1] = V407
0x5d2: V408 = AND V395 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x5d5: S[0x2] = V408
0x5d7: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x5d8
[0x5d8:0x5ed]
---
Predecessors: [0x253]
Successors: [0x5ee, 0x689]
---
0x5d8 JUMPDEST
0x5d9 PUSH1 0x1
0x5db SLOAD
0x5dc PUSH1 0x0
0x5de SWAP1
0x5df PUSH1 0x1
0x5e1 PUSH1 0xa0
0x5e3 PUSH1 0x2
0x5e5 EXP
0x5e6 SUB
0x5e7 AND
0x5e8 CALLER
0x5e9 EQ
0x5ea PUSH2 0x689
0x5ed JUMPI
---
0x5d8: JUMPDEST 
0x5d9: V409 = 0x1
0x5db: V410 = S[0x1]
0x5dc: V411 = 0x0
0x5df: V412 = 0x1
0x5e1: V413 = 0xa0
0x5e3: V414 = 0x2
0x5e5: V415 = EXP 0x2 0xa0
0x5e6: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e7: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x5e8: V418 = CALLER
0x5e9: V419 = EQ V418 V417
0x5ea: V420 = 0x689
0x5ed: JUMPI 0x689 V419
---
Entry stack: [V11, 0x1ba, V191]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x5ee
[0x5ee:0x688]
---
Predecessors: [0x5d8]
Successors: []
---
0x5ee PUSH1 0x40
0x5f0 DUP1
0x5f1 MLOAD
0x5f2 PUSH1 0xe5
0x5f4 PUSH1 0x2
0x5f6 EXP
0x5f7 PUSH3 0x461bcd
0x5fb MUL
0x5fc DUP2
0x5fd MSTORE
0x5fe PUSH1 0x20
0x600 PUSH1 0x4
0x602 DUP3
0x603 ADD
0x604 MSTORE
0x605 PUSH1 0x46
0x607 PUSH1 0x24
0x609 DUP3
0x60a ADD
0x60b MSTORE
0x60c PUSH32 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x62d PUSH1 0x44
0x62f DUP3
0x630 ADD
0x631 MSTORE
0x632 PUSH32 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x653 PUSH1 0x64
0x655 DUP3
0x656 ADD
0x657 MSTORE
0x658 PUSH32 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x679 PUSH1 0x84
0x67b DUP3
0x67c ADD
0x67d MSTORE
0x67e SWAP1
0x67f MLOAD
0x680 SWAP1
0x681 DUP2
0x682 SWAP1
0x683 SUB
0x684 PUSH1 0xa4
0x686 ADD
0x687 SWAP1
0x688 REVERT
---
0x5ee: V421 = 0x40
0x5f1: V422 = M[0x40]
0x5f2: V423 = 0xe5
0x5f4: V424 = 0x2
0x5f6: V425 = EXP 0x2 0xe5
0x5f7: V426 = 0x461bcd
0x5fb: V427 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5fd: M[V422] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5fe: V428 = 0x20
0x600: V429 = 0x4
0x603: V430 = ADD V422 0x4
0x604: M[V430] = 0x20
0x605: V431 = 0x46
0x607: V432 = 0x24
0x60a: V433 = ADD V422 0x24
0x60b: M[V433] = 0x46
0x60c: V434 = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x62d: V435 = 0x44
0x630: V436 = ADD V422 0x44
0x631: M[V436] = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x632: V437 = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x653: V438 = 0x64
0x656: V439 = ADD V422 0x64
0x657: M[V439] = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x658: V440 = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x679: V441 = 0x84
0x67c: V442 = ADD V422 0x84
0x67d: M[V442] = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x67f: V443 = M[0x40]
0x683: V444 = SUB V422 V443
0x684: V445 = 0xa4
0x686: V446 = ADD 0xa4 V444
0x688: REVERT V443 V446
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x689
[0x689:0x6db]
---
Predecessors: [0x5d8]
Successors: [0x6dc, 0x6e0]
---
0x689 JUMPDEST
0x68a DUP2
0x68b PUSH1 0x1
0x68d PUSH1 0xa0
0x68f PUSH1 0x2
0x691 EXP
0x692 SUB
0x693 AND
0x694 PUSH4 0x839e0fb
0x699 PUSH1 0x40
0x69b MLOAD
0x69c DUP2
0x69d PUSH4 0xffffffff
0x6a2 AND
0x6a3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6c1 MUL
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x4
0x6c6 ADD
0x6c7 PUSH1 0x20
0x6c9 PUSH1 0x40
0x6cb MLOAD
0x6cc DUP1
0x6cd DUP4
0x6ce SUB
0x6cf DUP2
0x6d0 PUSH1 0x0
0x6d2 DUP8
0x6d3 DUP1
0x6d4 EXTCODESIZE
0x6d5 ISZERO
0x6d6 DUP1
0x6d7 ISZERO
0x6d8 PUSH2 0x6e0
0x6db JUMPI
---
0x689: JUMPDEST 
0x68b: V447 = 0x1
0x68d: V448 = 0xa0
0x68f: V449 = 0x2
0x691: V450 = EXP 0x2 0xa0
0x692: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x693: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x694: V453 = 0x839e0fb
0x699: V454 = 0x40
0x69b: V455 = M[0x40]
0x69d: V456 = 0xffffffff
0x6a2: V457 = AND 0xffffffff 0x839e0fb
0x6a3: V458 = 0x100000000000000000000000000000000000000000000000000000000
0x6c1: V459 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x839e0fb
0x6c3: M[V455] = 0x839e0fb00000000000000000000000000000000000000000000000000000000
0x6c4: V460 = 0x4
0x6c6: V461 = ADD 0x4 V455
0x6c7: V462 = 0x20
0x6c9: V463 = 0x40
0x6cb: V464 = M[0x40]
0x6ce: V465 = SUB V461 V464
0x6d0: V466 = 0x0
0x6d4: V467 = EXTCODESIZE V452
0x6d5: V468 = ISZERO V467
0x6d7: V469 = ISZERO V468
0x6d8: V470 = 0x6e0
0x6db: JUMPI 0x6e0 V469
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V452, 0x839e0fb, V461, 0x20, V464, V465, V464, 0x0, V452, V468]
Exit stack: [V11, 0x1ba, V191, 0x0, V452, 0x839e0fb, V461, 0x20, V464, V465, V464, 0x0, V452, V468]

================================

Block 0x6dc
[0x6dc:0x6df]
---
Predecessors: [0x689]
Successors: []
---
0x6dc PUSH1 0x0
0x6de DUP1
0x6df REVERT
---
0x6dc: V471 = 0x0
0x6df: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0, V452, 0x839e0fb, V461, 0x20, V464, V465, V464, 0x0, V452, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V452, 0x839e0fb, V461, 0x20, V464, V465, V464, 0x0, V452, V468]

================================

Block 0x6e0
[0x6e0:0x6ea]
---
Predecessors: [0x689]
Successors: [0x6eb, 0x6f4]
---
0x6e0 JUMPDEST
0x6e1 POP
0x6e2 GAS
0x6e3 CALL
0x6e4 ISZERO
0x6e5 DUP1
0x6e6 ISZERO
0x6e7 PUSH2 0x6f4
0x6ea JUMPI
---
0x6e0: JUMPDEST 
0x6e2: V472 = GAS
0x6e3: V473 = CALL V472 V452 0x0 V464 V465 V464 0x20
0x6e4: V474 = ISZERO V473
0x6e6: V475 = ISZERO V474
0x6e7: V476 = 0x6f4
0x6ea: JUMPI 0x6f4 V475
---
Entry stack: [V11, 0x1ba, V191, 0x0, V452, 0x839e0fb, V461, 0x20, V464, V465, V464, 0x0, V452, V468]
Stack pops: 7
Stack additions: [V474]
Exit stack: [V11, 0x1ba, V191, 0x0, V452, 0x839e0fb, V461, V474]

================================

Block 0x6eb
[0x6eb:0x6f3]
---
Predecessors: [0x6e0]
Successors: []
---
0x6eb RETURNDATASIZE
0x6ec PUSH1 0x0
0x6ee DUP1
0x6ef RETURNDATACOPY
0x6f0 RETURNDATASIZE
0x6f1 PUSH1 0x0
0x6f3 REVERT
---
0x6eb: V477 = RETURNDATASIZE
0x6ec: V478 = 0x0
0x6ef: RETURNDATACOPY 0x0 0x0 V477
0x6f0: V479 = RETURNDATASIZE
0x6f1: V480 = 0x0
0x6f3: REVERT 0x0 V479
---
Entry stack: [V11, 0x1ba, V191, 0x0, V452, 0x839e0fb, V461, V474]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V452, 0x839e0fb, V461, V474]

================================

Block 0x6f4
[0x6f4:0x705]
---
Predecessors: [0x6e0]
Successors: [0x706, 0x70a]
---
0x6f4 JUMPDEST
0x6f5 POP
0x6f6 POP
0x6f7 POP
0x6f8 POP
0x6f9 PUSH1 0x40
0x6fb MLOAD
0x6fc RETURNDATASIZE
0x6fd PUSH1 0x20
0x6ff DUP2
0x700 LT
0x701 ISZERO
0x702 PUSH2 0x70a
0x705 JUMPI
---
0x6f4: JUMPDEST 
0x6f9: V481 = 0x40
0x6fb: V482 = M[0x40]
0x6fc: V483 = RETURNDATASIZE
0x6fd: V484 = 0x20
0x700: V485 = LT V483 0x20
0x701: V486 = ISZERO V485
0x702: V487 = 0x70a
0x705: JUMPI 0x70a V486
---
Entry stack: [V11, 0x1ba, V191, 0x0, V452, 0x839e0fb, V461, V474]
Stack pops: 4
Stack additions: [V482, V483]
Exit stack: [V11, 0x1ba, V191, 0x0, V482, V483]

================================

Block 0x706
[0x706:0x709]
---
Predecessors: [0x6f4]
Successors: []
---
0x706 PUSH1 0x0
0x708 DUP1
0x709 REVERT
---
0x706: V488 = 0x0
0x709: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0, V482, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V482, V483]

================================

Block 0x70a
[0x70a:0x716]
---
Predecessors: [0x6f4]
Successors: [0x717, 0x746]
---
0x70a JUMPDEST
0x70b POP
0x70c MLOAD
0x70d ISZERO
0x70e ISZERO
0x70f PUSH1 0x1
0x711 EQ
0x712 ISZERO
0x713 PUSH2 0x746
0x716 JUMPI
---
0x70a: JUMPDEST 
0x70c: V489 = M[V482]
0x70d: V490 = ISZERO V489
0x70e: V491 = ISZERO V490
0x70f: V492 = 0x1
0x711: V493 = EQ 0x1 V491
0x712: V494 = ISZERO V493
0x713: V495 = 0x746
0x716: JUMPI 0x746 V494
---
Entry stack: [V11, 0x1ba, V191, 0x0, V482, V483]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x717
[0x717:0x745]
---
Predecessors: [0x70a]
Successors: [0x74a]
---
0x717 POP
0x718 PUSH1 0x2
0x71a DUP1
0x71b SLOAD
0x71c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x731 NOT
0x732 AND
0x733 PUSH1 0x1
0x735 PUSH1 0xa0
0x737 PUSH1 0x2
0x739 EXP
0x73a SUB
0x73b DUP4
0x73c AND
0x73d OR
0x73e SWAP1
0x73f SSTORE
0x740 PUSH1 0x1
0x742 PUSH2 0x74a
0x745 JUMP
---
0x718: V496 = 0x2
0x71b: V497 = S[0x2]
0x71c: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x731: V499 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x732: V500 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V497
0x733: V501 = 0x1
0x735: V502 = 0xa0
0x737: V503 = 0x2
0x739: V504 = EXP 0x2 0xa0
0x73a: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73c: V506 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x73d: V507 = OR V506 V500
0x73f: S[0x2] = V507
0x740: V508 = 0x1
0x742: V509 = 0x74a
0x745: JUMP 0x74a
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V11, 0x1ba, V191, 0x1]

================================

Block 0x746
[0x746:0x749]
---
Predecessors: [0x70a]
Successors: [0x74a]
---
0x746 JUMPDEST
0x747 POP
0x748 PUSH1 0x0
---
0x746: JUMPDEST 
0x748: V510 = 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x74a
[0x74a:0x74e]
---
Predecessors: [0x717, 0x746]
Successors: [0x1ba]
---
0x74a JUMPDEST
0x74b SWAP2
0x74c SWAP1
0x74d POP
0x74e JUMP
---
0x74a: JUMPDEST 
0x74e: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, V191, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x74f
[0x74f:0x75b]
---
Predecessors: [0x268]
Successors: [0x75c, 0x7d1]
---
0x74f JUMPDEST
0x750 PUSH1 0x0
0x752 DUP1
0x753 DUP1
0x754 DUP1
0x755 CALLVALUE
0x756 DUP2
0x757 LT
0x758 PUSH2 0x7d1
0x75b JUMPI
---
0x74f: JUMPDEST 
0x750: V511 = 0x0
0x755: V512 = CALLVALUE
0x757: V513 = LT 0x0 V512
0x758: V514 = 0x7d1
0x75b: JUMPI 0x7d1 V513
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x75c
[0x75c:0x7d0]
---
Predecessors: [0x74f]
Successors: []
---
0x75c PUSH1 0x40
0x75e DUP1
0x75f MLOAD
0x760 PUSH1 0xe5
0x762 PUSH1 0x2
0x764 EXP
0x765 PUSH3 0x461bcd
0x769 MUL
0x76a DUP2
0x76b MSTORE
0x76c PUSH1 0x20
0x76e PUSH1 0x4
0x770 DUP3
0x771 ADD
0x772 MSTORE
0x773 PUSH1 0x34
0x775 PUSH1 0x24
0x777 DUP3
0x778 ADD
0x779 MSTORE
0x77a PUSH32 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0x79b PUSH1 0x44
0x79d DUP3
0x79e ADD
0x79f MSTORE
0x7a0 PUSH32 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0x7c1 PUSH1 0x64
0x7c3 DUP3
0x7c4 ADD
0x7c5 MSTORE
0x7c6 SWAP1
0x7c7 MLOAD
0x7c8 SWAP1
0x7c9 DUP2
0x7ca SWAP1
0x7cb SUB
0x7cc PUSH1 0x84
0x7ce ADD
0x7cf SWAP1
0x7d0 REVERT
---
0x75c: V515 = 0x40
0x75f: V516 = M[0x40]
0x760: V517 = 0xe5
0x762: V518 = 0x2
0x764: V519 = EXP 0x2 0xe5
0x765: V520 = 0x461bcd
0x769: V521 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x76b: M[V516] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x76c: V522 = 0x20
0x76e: V523 = 0x4
0x771: V524 = ADD V516 0x4
0x772: M[V524] = 0x20
0x773: V525 = 0x34
0x775: V526 = 0x24
0x778: V527 = ADD V516 0x24
0x779: M[V527] = 0x34
0x77a: V528 = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0x79b: V529 = 0x44
0x79e: V530 = ADD V516 0x44
0x79f: M[V530] = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0x7a0: V531 = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0x7c1: V532 = 0x64
0x7c4: V533 = ADD V516 0x64
0x7c5: M[V533] = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0x7c7: V534 = M[0x40]
0x7cb: V535 = SUB V516 V534
0x7cc: V536 = 0x84
0x7ce: V537 = ADD 0x84 V535
0x7d0: REVERT V534 V537
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x7d1
[0x7d1:0x7f4]
---
Predecessors: [0x74f]
Successors: [0x7f5, 0x86a]
---
0x7d1 JUMPDEST
0x7d2 PUSH1 0x4
0x7d4 SLOAD
0x7d5 PUSH21 0x10000000000000000000000000000000000000000
0x7eb SWAP1
0x7ec DIV
0x7ed PUSH1 0xff
0x7ef AND
0x7f0 ISZERO
0x7f1 PUSH2 0x86a
0x7f4 JUMPI
---
0x7d1: JUMPDEST 
0x7d2: V538 = 0x4
0x7d4: V539 = S[0x4]
0x7d5: V540 = 0x10000000000000000000000000000000000000000
0x7ec: V541 = DIV V539 0x10000000000000000000000000000000000000000
0x7ed: V542 = 0xff
0x7ef: V543 = AND 0xff V541
0x7f0: V544 = ISZERO V543
0x7f1: V545 = 0x86a
0x7f4: JUMPI 0x86a V544
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x7f5
[0x7f5:0x869]
---
Predecessors: [0x7d1]
Successors: []
---
0x7f5 PUSH1 0x40
0x7f7 DUP1
0x7f8 MLOAD
0x7f9 PUSH1 0xe5
0x7fb PUSH1 0x2
0x7fd EXP
0x7fe PUSH3 0x461bcd
0x802 MUL
0x803 DUP2
0x804 MSTORE
0x805 PUSH1 0x20
0x807 PUSH1 0x4
0x809 DUP3
0x80a ADD
0x80b MSTORE
0x80c PUSH1 0x2d
0x80e PUSH1 0x24
0x810 DUP3
0x811 ADD
0x812 MSTORE
0x813 PUSH32 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x834 PUSH1 0x44
0x836 DUP3
0x837 ADD
0x838 MSTORE
0x839 PUSH32 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x85a PUSH1 0x64
0x85c DUP3
0x85d ADD
0x85e MSTORE
0x85f SWAP1
0x860 MLOAD
0x861 SWAP1
0x862 DUP2
0x863 SWAP1
0x864 SUB
0x865 PUSH1 0x84
0x867 ADD
0x868 SWAP1
0x869 REVERT
---
0x7f5: V546 = 0x40
0x7f8: V547 = M[0x40]
0x7f9: V548 = 0xe5
0x7fb: V549 = 0x2
0x7fd: V550 = EXP 0x2 0xe5
0x7fe: V551 = 0x461bcd
0x802: V552 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x804: M[V547] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x805: V553 = 0x20
0x807: V554 = 0x4
0x80a: V555 = ADD V547 0x4
0x80b: M[V555] = 0x20
0x80c: V556 = 0x2d
0x80e: V557 = 0x24
0x811: V558 = ADD V547 0x24
0x812: M[V558] = 0x2d
0x813: V559 = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x834: V560 = 0x44
0x837: V561 = ADD V547 0x44
0x838: M[V561] = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x839: V562 = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x85a: V563 = 0x64
0x85d: V564 = ADD V547 0x64
0x85e: M[V564] = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x860: V565 = M[0x40]
0x864: V566 = SUB V547 V565
0x865: V567 = 0x84
0x867: V568 = ADD 0x84 V566
0x869: REVERT V565 V568
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x86a
[0x86a:0x874]
---
Predecessors: [0x7d1]
Successors: [0x951]
---
0x86a JUMPDEST
0x86b PUSH2 0x875
0x86e CALLVALUE
0x86f PUSH1 0x5
0x871 PUSH2 0x951
0x874 JUMP
---
0x86a: JUMPDEST 
0x86b: V569 = 0x875
0x86e: V570 = CALLVALUE
0x86f: V571 = 0x5
0x871: V572 = 0x951
0x874: JUMP 0x951
---
Entry stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x875, V570, 0x5]
Exit stack: [V11, 0x1ba, 0x0, 0x0, 0x0, 0x0, 0x875, V570, 0x5]

================================

Block 0x875
[0x875:0x8a6]
---
Predecessors: [0x95f]
Successors: [0x8a7, 0x8b0]
---
0x875 JUMPDEST
0x876 PUSH1 0x2
0x878 SLOAD
0x879 PUSH1 0x40
0x87b MLOAD
0x87c SWAP2
0x87d SWAP5
0x87e POP
0x87f PUSH1 0x1
0x881 PUSH1 0xa0
0x883 PUSH1 0x2
0x885 EXP
0x886 SUB
0x887 AND
0x888 SWAP1
0x889 DUP5
0x88a ISZERO
0x88b PUSH2 0x8fc
0x88e MUL
0x88f SWAP1
0x890 DUP6
0x891 SWAP1
0x892 PUSH1 0x0
0x894 DUP2
0x895 DUP2
0x896 DUP2
0x897 DUP6
0x898 DUP9
0x899 DUP9
0x89a CALL
0x89b SWAP4
0x89c POP
0x89d POP
0x89e POP
0x89f POP
0x8a0 ISZERO
0x8a1 DUP1
0x8a2 ISZERO
0x8a3 PUSH2 0x8b0
0x8a6 JUMPI
---
0x875: JUMPDEST 
0x876: V573 = 0x2
0x878: V574 = S[0x2]
0x879: V575 = 0x40
0x87b: V576 = M[0x40]
0x87f: V577 = 0x1
0x881: V578 = 0xa0
0x883: V579 = 0x2
0x885: V580 = EXP 0x2 0xa0
0x886: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x887: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x88a: V583 = ISZERO V653
0x88b: V584 = 0x8fc
0x88e: V585 = MUL 0x8fc V583
0x892: V586 = 0x0
0x89a: V587 = CALL V585 V582 V653 V576 0x0 V576 0x0
0x8a0: V588 = ISZERO V587
0x8a2: V589 = ISZERO V588
0x8a3: V590 = 0x8b0
0x8a6: JUMPI 0x8b0 V589
---
Entry stack: [V11, 0x1ba, 0x0, S3, 0x0, 0x0, V653]
Stack pops: 4
Stack additions: [S0, S2, S1, V588]
Exit stack: [V11, 0x1ba, 0x0, V653, 0x0, 0x0, V588]

================================

Block 0x8a7
[0x8a7:0x8af]
---
Predecessors: [0x875]
Successors: []
---
0x8a7 RETURNDATASIZE
0x8a8 PUSH1 0x0
0x8aa DUP1
0x8ab RETURNDATACOPY
0x8ac RETURNDATASIZE
0x8ad PUSH1 0x0
0x8af REVERT
---
0x8a7: V591 = RETURNDATASIZE
0x8a8: V592 = 0x0
0x8ab: RETURNDATACOPY 0x0 0x0 V591
0x8ac: V593 = RETURNDATASIZE
0x8ad: V594 = 0x0
0x8af: REVERT 0x0 V593
---
Entry stack: [V11, 0x1ba, 0x0, V653, 0x0, 0x0, V588]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, V653, 0x0, 0x0, V588]

================================

Block 0x8b0
[0x8b0:0x8bb]
---
Predecessors: [0x875]
Successors: [0x951]
---
0x8b0 JUMPDEST
0x8b1 POP
0x8b2 PUSH2 0x8bc
0x8b5 CALLVALUE
0x8b6 PUSH1 0x5
0x8b8 PUSH2 0x951
0x8bb JUMP
---
0x8b0: JUMPDEST 
0x8b2: V595 = 0x8bc
0x8b5: V596 = CALLVALUE
0x8b6: V597 = 0x5
0x8b8: V598 = 0x951
0x8bb: JUMP 0x951
---
Entry stack: [V11, 0x1ba, 0x0, V653, 0x0, 0x0, V588]
Stack pops: 1
Stack additions: [0x8bc, V596, 0x5]
Exit stack: [V11, 0x1ba, 0x0, V653, 0x0, 0x0, 0x8bc, V596, 0x5]

================================

Block 0x8bc
[0x8bc:0x8ed]
---
Predecessors: [0x95f]
Successors: [0x8ee, 0x8f7]
---
0x8bc JUMPDEST
0x8bd PUSH1 0x3
0x8bf SLOAD
0x8c0 PUSH1 0x40
0x8c2 MLOAD
0x8c3 SWAP2
0x8c4 SWAP4
0x8c5 POP
0x8c6 PUSH1 0x1
0x8c8 PUSH1 0xa0
0x8ca PUSH1 0x2
0x8cc EXP
0x8cd SUB
0x8ce AND
0x8cf SWAP1
0x8d0 DUP4
0x8d1 ISZERO
0x8d2 PUSH2 0x8fc
0x8d5 MUL
0x8d6 SWAP1
0x8d7 DUP5
0x8d8 SWAP1
0x8d9 PUSH1 0x0
0x8db DUP2
0x8dc DUP2
0x8dd DUP2
0x8de DUP6
0x8df DUP9
0x8e0 DUP9
0x8e1 CALL
0x8e2 SWAP4
0x8e3 POP
0x8e4 POP
0x8e5 POP
0x8e6 POP
0x8e7 ISZERO
0x8e8 DUP1
0x8e9 ISZERO
0x8ea PUSH2 0x8f7
0x8ed JUMPI
---
0x8bc: JUMPDEST 
0x8bd: V599 = 0x3
0x8bf: V600 = S[0x3]
0x8c0: V601 = 0x40
0x8c2: V602 = M[0x40]
0x8c6: V603 = 0x1
0x8c8: V604 = 0xa0
0x8ca: V605 = 0x2
0x8cc: V606 = EXP 0x2 0xa0
0x8cd: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ce: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0x8d1: V609 = ISZERO V653
0x8d2: V610 = 0x8fc
0x8d5: V611 = MUL 0x8fc V609
0x8d9: V612 = 0x0
0x8e1: V613 = CALL V611 V608 V653 V602 0x0 V602 0x0
0x8e7: V614 = ISZERO V613
0x8e9: V615 = ISZERO V614
0x8ea: V616 = 0x8f7
0x8ed: JUMPI 0x8f7 V615
---
Entry stack: [V11, 0x1ba, 0x0, S3, 0x0, 0x0, V653]
Stack pops: 3
Stack additions: [S0, S1, V614]
Exit stack: [V11, 0x1ba, 0x0, S3, V653, 0x0, V614]

================================

Block 0x8ee
[0x8ee:0x8f6]
---
Predecessors: [0x8bc]
Successors: []
---
0x8ee RETURNDATASIZE
0x8ef PUSH1 0x0
0x8f1 DUP1
0x8f2 RETURNDATACOPY
0x8f3 RETURNDATASIZE
0x8f4 PUSH1 0x0
0x8f6 REVERT
---
0x8ee: V617 = RETURNDATASIZE
0x8ef: V618 = 0x0
0x8f2: RETURNDATACOPY 0x0 0x0 V617
0x8f3: V619 = RETURNDATASIZE
0x8f4: V620 = 0x0
0x8f6: REVERT 0x0 V619
---
Entry stack: [V11, 0x1ba, 0x0, S3, V653, 0x0, V614]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, S3, V653, 0x0, V614]

================================

Block 0x8f7
[0x8f7:0x904]
---
Predecessors: [0x8bc]
Successors: [0x968]
---
0x8f7 JUMPDEST
0x8f8 POP
0x8f9 PUSH2 0x90b
0x8fc PUSH2 0x905
0x8ff CALLVALUE
0x900 DUP5
0x901 PUSH2 0x968
0x904 JUMP
---
0x8f7: JUMPDEST 
0x8f9: V621 = 0x90b
0x8fc: V622 = 0x905
0x8ff: V623 = CALLVALUE
0x901: V624 = 0x968
0x904: JUMP 0x968
---
Entry stack: [V11, 0x1ba, 0x0, S3, V653, 0x0, V614]
Stack pops: 3
Stack additions: [S2, S1, 0x90b, 0x905, V623, S2]
Exit stack: [V11, 0x1ba, 0x0, S3, V653, 0x0, 0x90b, 0x905, V623, V653]

================================

Block 0x905
[0x905:0x90a]
---
Predecessors: [0x974]
Successors: [0x968]
---
0x905 JUMPDEST
0x906 DUP5
0x907 PUSH2 0x968
0x90a JUMP
---
0x905: JUMPDEST 
0x907: V625 = 0x968
0x90a: JUMP 0x968
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V658]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, V658, S4]

================================

Block 0x90b
[0x90b:0x93c]
---
Predecessors: [0x974]
Successors: [0x93d, 0x946]
---
0x90b JUMPDEST
0x90c PUSH1 0x4
0x90e SLOAD
0x90f PUSH1 0x40
0x911 MLOAD
0x912 SWAP2
0x913 SWAP3
0x914 POP
0x915 PUSH1 0x1
0x917 PUSH1 0xa0
0x919 PUSH1 0x2
0x91b EXP
0x91c SUB
0x91d AND
0x91e SWAP1
0x91f DUP3
0x920 ISZERO
0x921 PUSH2 0x8fc
0x924 MUL
0x925 SWAP1
0x926 DUP4
0x927 SWAP1
0x928 PUSH1 0x0
0x92a DUP2
0x92b DUP2
0x92c DUP2
0x92d DUP6
0x92e DUP9
0x92f DUP9
0x930 CALL
0x931 SWAP4
0x932 POP
0x933 POP
0x934 POP
0x935 POP
0x936 ISZERO
0x937 DUP1
0x938 ISZERO
0x939 PUSH2 0x946
0x93c JUMPI
---
0x90b: JUMPDEST 
0x90c: V626 = 0x4
0x90e: V627 = S[0x4]
0x90f: V628 = 0x40
0x911: V629 = M[0x40]
0x915: V630 = 0x1
0x917: V631 = 0xa0
0x919: V632 = 0x2
0x91b: V633 = EXP 0x2 0xa0
0x91c: V634 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91d: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0x920: V636 = ISZERO V658
0x921: V637 = 0x8fc
0x924: V638 = MUL 0x8fc V636
0x928: V639 = 0x0
0x930: V640 = CALL V638 V635 V658 V629 0x0 V629 0x0
0x936: V641 = ISZERO V640
0x938: V642 = ISZERO V641
0x939: V643 = 0x946
0x93c: JUMPI 0x946 V642
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V658]
Stack pops: 2
Stack additions: [S0, V641]
Exit stack: [V11, S6, S5, S4, S3, S2, V658, V641]

================================

Block 0x93d
[0x93d:0x945]
---
Predecessors: [0x90b]
Successors: []
---
0x93d RETURNDATASIZE
0x93e PUSH1 0x0
0x940 DUP1
0x941 RETURNDATACOPY
0x942 RETURNDATASIZE
0x943 PUSH1 0x0
0x945 REVERT
---
0x93d: V644 = RETURNDATASIZE
0x93e: V645 = 0x0
0x941: RETURNDATACOPY 0x0 0x0 V644
0x942: V646 = RETURNDATASIZE
0x943: V647 = 0x0
0x945: REVERT 0x0 V646
---
Entry stack: [V11, S6, S5, S4, S3, S2, V658, V641]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2, V658, V641]

================================

Block 0x946
[0x946:0x950]
---
Predecessors: [0x90b]
Successors: [0x1ba]
---
0x946 JUMPDEST
0x947 POP
0x948 PUSH1 0x1
0x94a SWAP4
0x94b POP
0x94c POP
0x94d POP
0x94e POP
0x94f SWAP1
0x950 JUMP
---
0x946: JUMPDEST 
0x948: V648 = 0x1
0x950: JUMP S5
---
Entry stack: [V11, S6, S5, S4, S3, S2, V658, V641]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, S6, 0x1]

================================

Block 0x951
[0x951:0x95d]
---
Predecessors: [0x86a, 0x8b0]
Successors: [0x95e, 0x95f]
---
0x951 JUMPDEST
0x952 PUSH1 0x0
0x954 DUP1
0x955 DUP3
0x956 DUP5
0x957 DUP2
0x958 ISZERO
0x959 ISZERO
0x95a PUSH2 0x95f
0x95d JUMPI
---
0x951: JUMPDEST 
0x952: V649 = 0x0
0x958: V650 = ISZERO 0x5
0x959: V651 = ISZERO 0x0
0x95a: V652 = 0x95f
0x95d: JUMPI 0x95f 0x1
---
Entry stack: [V11, 0x1ba, 0x0, S5, 0x0, 0x0, {0x875, 0x8bc}, S1, 0x5]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, 0x1ba, 0x0, S5, 0x0, 0x0, {0x875, 0x8bc}, S1, 0x5, 0x0, 0x0, 0x5, S1]

================================

Block 0x95e
[0x95e:0x95e]
---
Predecessors: [0x951]
Successors: []
---
0x95e INVALID
---
0x95e: INVALID 
---
Entry stack: [V11, 0x1ba, 0x0, S9, 0x0, 0x0, {0x875, 0x8bc}, S5, 0x5, 0x0, 0x0, 0x5, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, S9, 0x0, 0x0, {0x875, 0x8bc}, S5, 0x5, 0x0, 0x0, 0x5, S0]

================================

Block 0x95f
[0x95f:0x967]
---
Predecessors: [0x951]
Successors: [0x875, 0x8bc]
---
0x95f JUMPDEST
0x960 DIV
0x961 SWAP5
0x962 SWAP4
0x963 POP
0x964 POP
0x965 POP
0x966 POP
0x967 JUMP
---
0x95f: JUMPDEST 
0x960: V653 = DIV S0 0x5
0x967: JUMP {0x875, 0x8bc}
---
Entry stack: [V11, 0x1ba, 0x0, S9, 0x0, 0x0, {0x875, 0x8bc}, S5, 0x5, 0x0, 0x0, 0x5, S0]
Stack pops: 7
Stack additions: [V653]
Exit stack: [V11, 0x1ba, 0x0, S9, 0x0, 0x0, V653]

================================

Block 0x968
[0x968:0x972]
---
Predecessors: [0x8f7, 0x905]
Successors: [0x973, 0x974]
---
0x968 JUMPDEST
0x969 PUSH1 0x0
0x96b DUP3
0x96c DUP3
0x96d GT
0x96e ISZERO
0x96f PUSH2 0x974
0x972 JUMPI
---
0x968: JUMPDEST 
0x969: V654 = 0x0
0x96d: V655 = GT S0 S1
0x96e: V656 = ISZERO V655
0x96f: V657 = 0x974
0x972: JUMPI 0x974 V656
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x973
[0x973:0x973]
---
Predecessors: [0x968]
Successors: []
---
0x973 INVALID
---
0x973: INVALID 
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x974
[0x974:0x979]
---
Predecessors: [0x968]
Successors: [0x905, 0x90b]
---
0x974 JUMPDEST
0x975 POP
0x976 SWAP1
0x977 SUB
0x978 SWAP1
0x979 JUMP
---
0x974: JUMPDEST 
0x977: V658 = SUB S2 S1
0x979: JUMP S3
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V658]
Exit stack: [V11, S9, S8, S7, S6, S5, S4, V658]

================================

Block 0x97a
[0x97a:0x9ac]
---
Predecessors: []
Successors: []
---
0x97a STOP
0x97b LOG1
0x97c PUSH6 0x627a7a723058
0x983 SHA3
0x984 MISSING 0x25
0x985 MISSING 0xef
0x986 MISSING 0x4a
0x987 MSTORE8
0x988 PUSH4 0x73350d70
0x98d SAR
0x98e MISSING 0xe4
0x98f SGT
0x990 PUSH28 0xed4714dc5dc4caa20b1f0358e0ec77ae31bb7c0029
---
0x97a: STOP 
0x97b: LOG S0 S1 S2
0x97c: V659 = 0x627a7a723058
0x983: V660 = SHA3 0x627a7a723058 S3
0x984: MISSING 0x25
0x985: MISSING 0xef
0x986: MISSING 0x4a
0x987: M8[S0] = S1
0x988: V661 = 0x73350d70
0x98d: V662 = SAR 0x73350d70 S2
0x98e: MISSING 0xe4
0x98f: V663 = SGT S0 S1
0x990: V664 = 0xed4714dc5dc4caa20b1f0358e0ec77ae31bb7c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V660, V662, 0xed4714dc5dc4caa20b1f0358e0ec77ae31bb7c0029, V663]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x11b
Exit block: 0x197
Body: 0x11b, 0x123, 0x127, 0x130, 0x152, 0x15b, 0x16a, 0x17e, 0x197, 0x270, 0x2b0, 0x2b8, 0x2cb, 0x2d9, 0x2ed, 0x2f6

Function 1:
Public function signature: 0x10639ea0
Entry block: 0x1a5
Exit block: 0x1ba
Body: 0x1a5, 0x1ad, 0x1b1, 0x1ba, 0x2fe, 0x314, 0x3af

Function 2:
Public function signature: 0x200d2ed2
Entry block: 0x1ce
Exit block: 0x1e3
Body: 0x1ce, 0x1d6, 0x1da, 0x1e3, 0x3d2

Function 3:
Public function signature: 0x66d38203
Entry block: 0x20f
Exit block: 0x230
Body: 0x20f, 0x217, 0x21b, 0x230, 0x405, 0x42d, 0x4a2

Function 4:
Public function signature: 0x88d761f2
Entry block: 0x232
Exit block: 0x1ba
Body: 0x1ba, 0x232, 0x23a, 0x23e, 0x4ef, 0x505, 0x5a0

Function 5:
Public function signature: 0xa0f52da0
Entry block: 0x247
Exit block: 0x1ba
Body: 0x1ba, 0x247, 0x24f, 0x253, 0x5d8, 0x5ee, 0x689, 0x6dc, 0x6e0, 0x6eb, 0x6f4, 0x706, 0x70a, 0x717, 0x746, 0x74a

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x268
Exit block: 0x1ba
Body: 0x1ba, 0x268, 0x74f, 0x75c, 0x7d1, 0x7f5, 0x86a, 0x875, 0x8a7, 0x8b0, 0x8bc, 0x8ee, 0x8f7, 0x905, 0x90b, 0x93d, 0x946, 0x968, 0x973, 0x974

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x113
Body: 0x82, 0xe8, 0xec, 0xf7, 0x100, 0x113, 0x117

Function 8:
Private function
Entry block: 0x951
Exit block: 0x95f
Body: 0x951, 0x95f

