Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x74]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x74
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x74
0xc: JUMPI 0x74 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x76]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x7973ccf
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x76
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x7973ccf
0x22: V15 = EQ V13 0x7973ccf
0x23: V16 = 0x76
0x26: JUMPI 0x76 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x9d]
---
0x27 DUP1
0x28 PUSH4 0x19854110
0x2d EQ
0x2e PUSH2 0x9d
0x31 JUMPI
---
0x28: V17 = 0x19854110
0x2d: V18 = EQ 0x19854110 V13
0x2e: V19 = 0x9d
0x31: JUMPI 0x9d V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xb2]
---
0x32 DUP1
0x33 PUSH4 0x2482960a
0x38 EQ
0x39 PUSH2 0xb2
0x3c JUMPI
---
0x33: V20 = 0x2482960a
0x38: V21 = EQ 0x2482960a V13
0x39: V22 = 0xb2
0x3c: JUMPI 0xb2 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xe3]
---
0x3d DUP1
0x3e PUSH4 0x2687a4f9
0x43 EQ
0x44 PUSH2 0xe3
0x47 JUMPI
---
0x3e: V23 = 0x2687a4f9
0x43: V24 = EQ 0x2687a4f9 V13
0x44: V25 = 0xe3
0x47: JUMPI 0xe3 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x104]
---
0x48 DUP1
0x49 PUSH4 0x85a09f6f
0x4e EQ
0x4f PUSH2 0x104
0x52 JUMPI
---
0x49: V26 = 0x85a09f6f
0x4e: V27 = EQ 0x85a09f6f V13
0x4f: V28 = 0x104
0x52: JUMPI 0x104 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x119]
---
0x53 DUP1
0x54 PUSH4 0x8da5cb5b
0x59 EQ
0x5a PUSH2 0x119
0x5d JUMPI
---
0x54: V29 = 0x8da5cb5b
0x59: V30 = EQ 0x8da5cb5b V13
0x5a: V31 = 0x119
0x5d: JUMPI 0x119 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x12e]
---
0x5e DUP1
0x5f PUSH4 0xd3286dde
0x64 EQ
0x65 PUSH2 0x12e
0x68 JUMPI
---
0x5f: V32 = 0xd3286dde
0x64: V33 = EQ 0xd3286dde V13
0x65: V34 = 0x12e
0x68: JUMPI 0x12e V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x136]
---
0x69 DUP1
0x6a PUSH4 0xd767aee0
0x6f EQ
0x70 PUSH2 0x136
0x73 JUMPI
---
0x6a: V35 = 0xd767aee0
0x6f: V36 = EQ 0xd767aee0 V13
0x70: V37 = 0x136
0x73: JUMPI 0x136 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x75]
---
Predecessors: [0x0, 0x69, 0x168, 0x21c, 0x293, 0x4ec]
Successors: []
---
0x74 JUMPDEST
0x75 STOP
---
0x74: JUMPDEST 
0x75: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x76
[0x76:0x7d]
---
Predecessors: [0xd]
Successors: [0x7e, 0x82]
---
0x76 JUMPDEST
0x77 CALLVALUE
0x78 DUP1
0x79 ISZERO
0x7a PUSH2 0x82
0x7d JUMPI
---
0x76: JUMPDEST 
0x77: V38 = CALLVALUE
0x79: V39 = ISZERO V38
0x7a: V40 = 0x82
0x7d: JUMPI 0x82 V39
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V13, V38]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x76]
Successors: []
---
0x7e PUSH1 0x0
0x80 DUP1
0x81 REVERT
---
0x7e: V41 = 0x0
0x81: REVERT 0x0 0x0
---
Entry stack: [V13, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V38]

================================

Block 0x82
[0x82:0x8a]
---
Predecessors: [0x76]
Successors: [0x14b]
---
0x82 JUMPDEST
0x83 POP
0x84 PUSH2 0x8b
0x87 PUSH2 0x14b
0x8a JUMP
---
0x82: JUMPDEST 
0x84: V42 = 0x8b
0x87: V43 = 0x14b
0x8a: JUMP 0x14b
---
Entry stack: [V13, V38]
Stack pops: 1
Stack additions: [0x8b]
Exit stack: [V13, 0x8b]

================================

Block 0x8b
[0x8b:0x9c]
---
Predecessors: [0x14b, 0x508]
Successors: []
---
0x8b JUMPDEST
0x8c PUSH1 0x40
0x8e DUP1
0x8f MLOAD
0x90 SWAP2
0x91 DUP3
0x92 MSTORE
0x93 MLOAD
0x94 SWAP1
0x95 DUP2
0x96 SWAP1
0x97 SUB
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP1
0x9c RETURN
---
0x8b: JUMPDEST 
0x8c: V44 = 0x40
0x8f: V45 = M[0x40]
0x92: M[V45] = S0
0x93: V46 = M[0x40]
0x97: V47 = SUB V45 V46
0x98: V48 = 0x20
0x9a: V49 = ADD 0x20 V47
0x9c: RETURN V46 V49
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x9d
[0x9d:0xa4]
---
Predecessors: [0x27]
Successors: [0xa5, 0xa9]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f DUP1
0xa0 ISZERO
0xa1 PUSH2 0xa9
0xa4 JUMPI
---
0x9d: JUMPDEST 
0x9e: V50 = CALLVALUE
0xa0: V51 = ISZERO V50
0xa1: V52 = 0xa9
0xa4: JUMPI 0xa9 V51
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V13, V50]

================================

Block 0xa5
[0xa5:0xa8]
---
Predecessors: [0x9d]
Successors: []
---
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 REVERT
---
0xa5: V53 = 0x0
0xa8: REVERT 0x0 0x0
---
Entry stack: [V13, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50]

================================

Block 0xa9
[0xa9:0xb1]
---
Predecessors: [0x9d]
Successors: [0x151]
---
0xa9 JUMPDEST
0xaa POP
0xab PUSH2 0x74
0xae PUSH2 0x151
0xb1 JUMP
---
0xa9: JUMPDEST 
0xab: V54 = 0x74
0xae: V55 = 0x151
0xb1: JUMP 0x151
---
Entry stack: [V13, V50]
Stack pops: 1
Stack additions: [0x74]
Exit stack: [V13, 0x74]

================================

Block 0xb2
[0xb2:0xb9]
---
Predecessors: [0x32]
Successors: [0xba, 0xbe]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 DUP1
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb2: JUMPDEST 
0xb3: V56 = CALLVALUE
0xb5: V57 = ISZERO V56
0xb6: V58 = 0xbe
0xb9: JUMPI 0xbe V57
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V13, V56]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb2]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V59 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V13, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V56]

================================

Block 0xbe
[0xbe:0xc6]
---
Predecessors: [0xb2]
Successors: [0x1f6]
---
0xbe JUMPDEST
0xbf POP
0xc0 PUSH2 0xc7
0xc3 PUSH2 0x1f6
0xc6 JUMP
---
0xbe: JUMPDEST 
0xc0: V60 = 0xc7
0xc3: V61 = 0x1f6
0xc6: JUMP 0x1f6
---
Entry stack: [V13, V56]
Stack pops: 1
Stack additions: [0xc7]
Exit stack: [V13, 0xc7]

================================

Block 0xc7
[0xc7:0xe2]
---
Predecessors: [0x1f6, 0x296]
Successors: []
---
0xc7 JUMPDEST
0xc8 PUSH1 0x40
0xca DUP1
0xcb MLOAD
0xcc PUSH1 0x1
0xce PUSH1 0xa0
0xd0 PUSH1 0x2
0xd2 EXP
0xd3 SUB
0xd4 SWAP1
0xd5 SWAP3
0xd6 AND
0xd7 DUP3
0xd8 MSTORE
0xd9 MLOAD
0xda SWAP1
0xdb DUP2
0xdc SWAP1
0xdd SUB
0xde PUSH1 0x20
0xe0 ADD
0xe1 SWAP1
0xe2 RETURN
---
0xc7: JUMPDEST 
0xc8: V62 = 0x40
0xcb: V63 = M[0x40]
0xcc: V64 = 0x1
0xce: V65 = 0xa0
0xd0: V66 = 0x2
0xd2: V67 = EXP 0x2 0xa0
0xd3: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6: V69 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd8: M[V63] = V69
0xd9: V70 = M[0x40]
0xdd: V71 = SUB V63 V70
0xde: V72 = 0x20
0xe0: V73 = ADD 0x20 V71
0xe2: RETURN V70 V73
---
Entry stack: [V13, 0xc7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc7]

================================

Block 0xe3
[0xe3:0xea]
---
Predecessors: [0x3d]
Successors: [0xeb, 0xef]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 DUP1
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xe3: JUMPDEST 
0xe4: V74 = CALLVALUE
0xe6: V75 = ISZERO V74
0xe7: V76 = 0xef
0xea: JUMPI 0xef V75
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V74]
Exit stack: [V13, V74]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xe3]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V77 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V13, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V74]

================================

Block 0xef
[0xef:0x103]
---
Predecessors: [0xe3]
Successors: [0x205]
---
0xef JUMPDEST
0xf0 POP
0xf1 PUSH2 0x74
0xf4 PUSH1 0x1
0xf6 PUSH1 0xa0
0xf8 PUSH1 0x2
0xfa EXP
0xfb SUB
0xfc PUSH1 0x4
0xfe CALLDATALOAD
0xff AND
0x100 PUSH2 0x205
0x103 JUMP
---
0xef: JUMPDEST 
0xf1: V78 = 0x74
0xf4: V79 = 0x1
0xf6: V80 = 0xa0
0xf8: V81 = 0x2
0xfa: V82 = EXP 0x2 0xa0
0xfb: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V84 = 0x4
0xfe: V85 = CALLDATALOAD 0x4
0xff: V86 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0x100: V87 = 0x205
0x103: JUMP 0x205
---
Entry stack: [V13, V74]
Stack pops: 1
Stack additions: [0x74, V86]
Exit stack: [V13, 0x74, V86]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0x48]
Successors: [0x10c, 0x110]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 DUP1
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x104: JUMPDEST 
0x105: V88 = CALLVALUE
0x107: V89 = ISZERO V88
0x108: V90 = 0x110
0x10b: JUMPI 0x110 V89
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V13, V88]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x104]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V91 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V13, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88]

================================

Block 0x110
[0x110:0x118]
---
Predecessors: [0x104]
Successors: [0x258]
---
0x110 JUMPDEST
0x111 POP
0x112 PUSH2 0x74
0x115 PUSH2 0x258
0x118 JUMP
---
0x110: JUMPDEST 
0x112: V92 = 0x74
0x115: V93 = 0x258
0x118: JUMP 0x258
---
Entry stack: [V13, V88]
Stack pops: 1
Stack additions: [0x74]
Exit stack: [V13, 0x74]

================================

Block 0x119
[0x119:0x120]
---
Predecessors: [0x53]
Successors: [0x121, 0x125]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b DUP1
0x11c ISZERO
0x11d PUSH2 0x125
0x120 JUMPI
---
0x119: JUMPDEST 
0x11a: V94 = CALLVALUE
0x11c: V95 = ISZERO V94
0x11d: V96 = 0x125
0x120: JUMPI 0x125 V95
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V13, V94]

================================

Block 0x121
[0x121:0x124]
---
Predecessors: [0x119]
Successors: []
---
0x121 PUSH1 0x0
0x123 DUP1
0x124 REVERT
---
0x121: V97 = 0x0
0x124: REVERT 0x0 0x0
---
Entry stack: [V13, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V94]

================================

Block 0x125
[0x125:0x12d]
---
Predecessors: [0x119]
Successors: [0x296]
---
0x125 JUMPDEST
0x126 POP
0x127 PUSH2 0xc7
0x12a PUSH2 0x296
0x12d JUMP
---
0x125: JUMPDEST 
0x127: V98 = 0xc7
0x12a: V99 = 0x296
0x12d: JUMP 0x296
---
Entry stack: [V13, V94]
Stack pops: 1
Stack additions: [0xc7]
Exit stack: [V13, 0xc7]

================================

Block 0x12e
[0x12e:0x135]
---
Predecessors: [0x5e]
Successors: [0x2a5]
---
0x12e JUMPDEST
0x12f PUSH2 0x74
0x132 PUSH2 0x2a5
0x135 JUMP
---
0x12e: JUMPDEST 
0x12f: V100 = 0x74
0x132: V101 = 0x2a5
0x135: JUMP 0x2a5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x74]
Exit stack: [V13, 0x74]

================================

Block 0x136
[0x136:0x13d]
---
Predecessors: [0x69]
Successors: [0x13e, 0x142]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 DUP1
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x136: JUMPDEST 
0x137: V102 = CALLVALUE
0x139: V103 = ISZERO V102
0x13a: V104 = 0x142
0x13d: JUMPI 0x142 V103
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V13, V102]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x136]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V105 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V13, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V102]

================================

Block 0x142
[0x142:0x14a]
---
Predecessors: [0x136]
Successors: [0x4f0]
---
0x142 JUMPDEST
0x143 POP
0x144 PUSH2 0x8b
0x147 PUSH2 0x4f0
0x14a JUMP
---
0x142: JUMPDEST 
0x144: V106 = 0x8b
0x147: V107 = 0x4f0
0x14a: JUMP 0x4f0
---
Entry stack: [V13, V102]
Stack pops: 1
Stack additions: [0x8b]
Exit stack: [V13, 0x8b]

================================

Block 0x14b
[0x14b:0x150]
---
Predecessors: [0x82]
Successors: [0x8b]
---
0x14b JUMPDEST
0x14c PUSH1 0x1
0x14e SLOAD
0x14f DUP2
0x150 JUMP
---
0x14b: JUMPDEST 
0x14c: V108 = 0x1
0x14e: V109 = S[0x1]
0x150: JUMP 0x8b
---
Entry stack: [V13, 0x8b]
Stack pops: 1
Stack additions: [S0, V109]
Exit stack: [V13, 0x8b, V109]

================================

Block 0x151
[0x151:0x163]
---
Predecessors: [0xa9]
Successors: [0x164, 0x168]
---
0x151 JUMPDEST
0x152 PUSH1 0x0
0x154 SLOAD
0x155 PUSH1 0x1
0x157 PUSH1 0xa0
0x159 PUSH1 0x2
0x15b EXP
0x15c SUB
0x15d AND
0x15e CALLER
0x15f EQ
0x160 PUSH2 0x168
0x163 JUMPI
---
0x151: JUMPDEST 
0x152: V110 = 0x0
0x154: V111 = S[0x0]
0x155: V112 = 0x1
0x157: V113 = 0xa0
0x159: V114 = 0x2
0x15b: V115 = EXP 0x2 0xa0
0x15c: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x15e: V118 = CALLER
0x15f: V119 = EQ V118 V117
0x160: V120 = 0x168
0x163: JUMPI 0x168 V119
---
Entry stack: [V13, 0x74]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x151]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V121 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V13, 0x74]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74]

================================

Block 0x168
[0x168:0x1f5]
---
Predecessors: [0x151]
Successors: [0x74]
---
0x168 JUMPDEST
0x169 PUSH1 0x4
0x16b DUP1
0x16c SLOAD
0x16d PUSH1 0x40
0x16f DUP1
0x170 MLOAD
0x171 PUSH32 0x6372656174654265742875696e74290000000000000000000000000000000000
0x192 DUP2
0x193 MSTORE
0x194 DUP2
0x195 MLOAD
0x196 SWAP1
0x197 DUP2
0x198 SWAP1
0x199 SUB
0x19a PUSH1 0xf
0x19c ADD
0x19d DUP2
0x19e SHA3
0x19f PUSH4 0xffffffff
0x1a4 PUSH1 0xe0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SWAP2
0x1aa DUP3
0x1ab SWAP1
0x1ac DIV
0x1ad SWAP1
0x1ae DUP2
0x1af AND
0x1b0 SWAP1
0x1b1 SWAP2
0x1b2 MUL
0x1b3 DUP3
0x1b4 MSTORE
0x1b5 PUSH1 0x1
0x1b7 SWAP5
0x1b8 DUP3
0x1b9 ADD
0x1ba SWAP5
0x1bb SWAP1
0x1bc SWAP5
0x1bd MSTORE
0x1be SWAP1
0x1bf MLOAD
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 SWAP1
0x1c9 SWAP3
0x1ca AND
0x1cb SWAP3
0x1cc SWAP2
0x1cd PUSH3 0x493e0
0x1d1 SWAP2
0x1d2 PUSH7 0x2386f26fc10000
0x1da SWAP2
0x1db PUSH1 0x24
0x1dd DUP1
0x1de DUP4
0x1df ADD
0x1e0 SWAP3
0x1e1 PUSH1 0x0
0x1e3 SWAP3
0x1e4 SWAP2
0x1e5 SWAP1
0x1e6 DUP3
0x1e7 SWAP1
0x1e8 SUB
0x1e9 ADD
0x1ea DUP2
0x1eb DUP6
0x1ec DUP10
0x1ed DUP9
0x1ee CALL
0x1ef POP
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 JUMP
---
0x168: JUMPDEST 
0x169: V122 = 0x4
0x16c: V123 = S[0x4]
0x16d: V124 = 0x40
0x170: V125 = M[0x40]
0x171: V126 = 0x6372656174654265742875696e74290000000000000000000000000000000000
0x193: M[V125] = 0x6372656174654265742875696e74290000000000000000000000000000000000
0x195: V127 = M[0x40]
0x199: V128 = SUB V125 V127
0x19a: V129 = 0xf
0x19c: V130 = ADD 0xf V128
0x19e: V131 = SHA3 V127 V130
0x19f: V132 = 0xffffffff
0x1a4: V133 = 0xe0
0x1a6: V134 = 0x2
0x1a8: V135 = EXP 0x2 0xe0
0x1ac: V136 = DIV V131 0x100000000000000000000000000000000000000000000000000000000
0x1af: V137 = AND V136 0xffffffff
0x1b2: V138 = MUL 0x100000000000000000000000000000000000000000000000000000000 V137
0x1b4: M[V127] = V138
0x1b5: V139 = 0x1
0x1b9: V140 = ADD V127 0x4
0x1bd: M[V140] = 0x1
0x1bf: V141 = M[0x40]
0x1c0: V142 = 0x1
0x1c2: V143 = 0xa0
0x1c4: V144 = 0x2
0x1c6: V145 = EXP 0x2 0xa0
0x1c7: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ca: V147 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V148 = 0x493e0
0x1d2: V149 = 0x2386f26fc10000
0x1db: V150 = 0x24
0x1df: V151 = ADD V127 0x24
0x1e1: V152 = 0x0
0x1e8: V153 = SUB V127 V141
0x1e9: V154 = ADD V153 0x24
0x1ee: V155 = CALL 0x493e0 V147 0x2386f26fc10000 V141 V154 V141 0x0
0x1f5: JUMP 0x74
---
Entry stack: [V13, 0x74]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f6
[0x1f6:0x204]
---
Predecessors: [0xbe]
Successors: [0xc7]
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x4
0x1f9 SLOAD
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 AND
0x203 DUP2
0x204 JUMP
---
0x1f6: JUMPDEST 
0x1f7: V156 = 0x4
0x1f9: V157 = S[0x4]
0x1fa: V158 = 0x1
0x1fc: V159 = 0xa0
0x1fe: V160 = 0x2
0x200: V161 = EXP 0x2 0xa0
0x201: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x204: JUMP 0xc7
---
Entry stack: [V13, 0xc7]
Stack pops: 1
Stack additions: [S0, V163]
Exit stack: [V13, 0xc7, V163]

================================

Block 0x205
[0x205:0x217]
---
Predecessors: [0xef]
Successors: [0x218, 0x21c]
---
0x205 JUMPDEST
0x206 PUSH1 0x0
0x208 SLOAD
0x209 PUSH1 0x1
0x20b PUSH1 0xa0
0x20d PUSH1 0x2
0x20f EXP
0x210 SUB
0x211 AND
0x212 CALLER
0x213 EQ
0x214 PUSH2 0x21c
0x217 JUMPI
---
0x205: JUMPDEST 
0x206: V164 = 0x0
0x208: V165 = S[0x0]
0x209: V166 = 0x1
0x20b: V167 = 0xa0
0x20d: V168 = 0x2
0x20f: V169 = EXP 0x2 0xa0
0x210: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x211: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x212: V172 = CALLER
0x213: V173 = EQ V172 V171
0x214: V174 = 0x21c
0x217: JUMPI 0x21c V173
---
Entry stack: [V13, 0x74, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, V86]

================================

Block 0x218
[0x218:0x21b]
---
Predecessors: [0x205]
Successors: []
---
0x218 PUSH1 0x0
0x21a DUP1
0x21b REVERT
---
0x218: V175 = 0x0
0x21b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x74, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, V86]

================================

Block 0x21c
[0x21c:0x257]
---
Predecessors: [0x205]
Successors: [0x74]
---
0x21c JUMPDEST
0x21d PUSH1 0x4
0x21f DUP1
0x220 SLOAD
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 NOT
0x237 SWAP1
0x238 DUP2
0x239 AND
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 SWAP4
0x243 DUP5
0x244 AND
0x245 OR
0x246 SWAP2
0x247 DUP3
0x248 SWAP1
0x249 SSTORE
0x24a PUSH1 0x5
0x24c DUP1
0x24d SLOAD
0x24e SWAP3
0x24f SWAP1
0x250 SWAP4
0x251 AND
0x252 SWAP2
0x253 AND
0x254 OR
0x255 SWAP1
0x256 SSTORE
0x257 JUMP
---
0x21c: JUMPDEST 
0x21d: V176 = 0x4
0x220: V177 = S[0x4]
0x221: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V179 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x239: V180 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V177
0x23a: V181 = 0x1
0x23c: V182 = 0xa0
0x23e: V183 = 0x2
0x240: V184 = EXP 0x2 0xa0
0x241: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x245: V187 = OR V186 V180
0x249: S[0x4] = V187
0x24a: V188 = 0x5
0x24d: V189 = S[0x5]
0x251: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x253: V191 = AND V189 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x254: V192 = OR V191 V190
0x256: S[0x5] = V192
0x257: JUMP 0x74
---
Entry stack: [V13, 0x74, V86]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x258
[0x258:0x289]
---
Predecessors: [0x110]
Successors: [0x28a, 0x293]
---
0x258 JUMPDEST
0x259 PUSH1 0x0
0x25b DUP1
0x25c SLOAD
0x25d PUSH1 0x40
0x25f MLOAD
0x260 PUSH1 0x1
0x262 PUSH1 0xa0
0x264 PUSH1 0x2
0x266 EXP
0x267 SUB
0x268 SWAP1
0x269 SWAP2
0x26a AND
0x26b SWAP2
0x26c ADDRESS
0x26d BALANCE
0x26e DUP1
0x26f ISZERO
0x270 PUSH2 0x8fc
0x273 MUL
0x274 SWAP3
0x275 SWAP1
0x276 SWAP2
0x277 DUP2
0x278 DUP2
0x279 DUP2
0x27a DUP6
0x27b DUP9
0x27c DUP9
0x27d CALL
0x27e SWAP4
0x27f POP
0x280 POP
0x281 POP
0x282 POP
0x283 ISZERO
0x284 DUP1
0x285 ISZERO
0x286 PUSH2 0x293
0x289 JUMPI
---
0x258: JUMPDEST 
0x259: V193 = 0x0
0x25c: V194 = S[0x0]
0x25d: V195 = 0x40
0x25f: V196 = M[0x40]
0x260: V197 = 0x1
0x262: V198 = 0xa0
0x264: V199 = 0x2
0x266: V200 = EXP 0x2 0xa0
0x267: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26a: V202 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V203 = ADDRESS
0x26d: V204 = BALANCE V203
0x26f: V205 = ISZERO V204
0x270: V206 = 0x8fc
0x273: V207 = MUL 0x8fc V205
0x27d: V208 = CALL V207 V202 V204 V196 0x0 V196 0x0
0x283: V209 = ISZERO V208
0x285: V210 = ISZERO V209
0x286: V211 = 0x293
0x289: JUMPI 0x293 V210
---
Entry stack: [V13, 0x74]
Stack pops: 0
Stack additions: [V209]
Exit stack: [V13, 0x74, V209]

================================

Block 0x28a
[0x28a:0x292]
---
Predecessors: [0x258]
Successors: []
---
0x28a RETURNDATASIZE
0x28b PUSH1 0x0
0x28d DUP1
0x28e RETURNDATACOPY
0x28f RETURNDATASIZE
0x290 PUSH1 0x0
0x292 REVERT
---
0x28a: V212 = RETURNDATASIZE
0x28b: V213 = 0x0
0x28e: RETURNDATACOPY 0x0 0x0 V212
0x28f: V214 = RETURNDATASIZE
0x290: V215 = 0x0
0x292: REVERT 0x0 V214
---
Entry stack: [V13, 0x74, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, V209]

================================

Block 0x293
[0x293:0x295]
---
Predecessors: [0x258]
Successors: [0x74]
---
0x293 JUMPDEST
0x294 POP
0x295 JUMP
---
0x293: JUMPDEST 
0x295: JUMP 0x74
---
Entry stack: [V13, 0x74, V209]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x296
[0x296:0x2a4]
---
Predecessors: [0x125]
Successors: [0xc7]
---
0x296 JUMPDEST
0x297 PUSH1 0x0
0x299 SLOAD
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 SUB
0x2a2 AND
0x2a3 DUP2
0x2a4 JUMP
---
0x296: JUMPDEST 
0x297: V216 = 0x0
0x299: V217 = S[0x0]
0x29a: V218 = 0x1
0x29c: V219 = 0xa0
0x29e: V220 = 0x2
0x2a0: V221 = EXP 0x2 0xa0
0x2a1: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a2: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x2a4: JUMP 0xc7
---
Entry stack: [V13, 0xc7]
Stack pops: 1
Stack additions: [S0, V223]
Exit stack: [V13, 0xc7, V223]

================================

Block 0x2a5
[0x2a5:0x2ba]
---
Predecessors: [0x12e]
Successors: [0x2bb, 0x2bf]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 SLOAD
0x2aa DUP2
0x2ab SWAP1
0x2ac PUSH1 0x1
0x2ae PUSH1 0xa0
0x2b0 PUSH1 0x2
0x2b2 EXP
0x2b3 SUB
0x2b4 AND
0x2b5 CALLER
0x2b6 EQ
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V224 = 0x0
0x2a9: V225 = S[0x0]
0x2ac: V226 = 0x1
0x2ae: V227 = 0xa0
0x2b0: V228 = 0x2
0x2b2: V229 = EXP 0x2 0xa0
0x2b3: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b4: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x2b5: V232 = CALLER
0x2b6: V233 = EQ V232 V231
0x2b7: V234 = 0x2bf
0x2ba: JUMPI 0x2bf V233
---
Entry stack: [V13, 0x74]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x74, 0x0, 0x0]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2a5]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V235 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V13, 0x74, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0]

================================

Block 0x2bf
[0x2bf:0x2ca]
---
Predecessors: [0x2a5]
Successors: [0x2cb, 0x333]
---
0x2bf JUMPDEST
0x2c0 PUSH4 0x5b985700
0x2c5 TIMESTAMP
0x2c6 GT
0x2c7 PUSH2 0x333
0x2ca JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V236 = 0x5b985700
0x2c5: V237 = TIMESTAMP
0x2c6: V238 = GT V237 0x5b985700
0x2c7: V239 = 0x333
0x2ca: JUMPI 0x333 V238
---
Entry stack: [V13, 0x74, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0]

================================

Block 0x2cb
[0x2cb:0x332]
---
Predecessors: [0x2bf]
Successors: []
---
0x2cb PUSH1 0x40
0x2cd DUP1
0x2ce MLOAD
0x2cf PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2f0 DUP2
0x2f1 MSTORE
0x2f2 PUSH1 0x20
0x2f4 PUSH1 0x4
0x2f6 DUP1
0x2f7 DUP4
0x2f8 ADD
0x2f9 SWAP2
0x2fa SWAP1
0x2fb SWAP2
0x2fc MSTORE
0x2fd PUSH1 0x24
0x2ff DUP3
0x300 ADD
0x301 MSTORE
0x302 PUSH32 0x73746f7000000000000000000000000000000000000000000000000000000000
0x323 PUSH1 0x44
0x325 DUP3
0x326 ADD
0x327 MSTORE
0x328 SWAP1
0x329 MLOAD
0x32a SWAP1
0x32b DUP2
0x32c SWAP1
0x32d SUB
0x32e PUSH1 0x64
0x330 ADD
0x331 SWAP1
0x332 REVERT
---
0x2cb: V240 = 0x40
0x2ce: V241 = M[0x40]
0x2cf: V242 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2f1: M[V241] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2f2: V243 = 0x20
0x2f4: V244 = 0x4
0x2f8: V245 = ADD V241 0x4
0x2fc: M[V245] = 0x20
0x2fd: V246 = 0x24
0x300: V247 = ADD V241 0x24
0x301: M[V247] = 0x4
0x302: V248 = 0x73746f7000000000000000000000000000000000000000000000000000000000
0x323: V249 = 0x44
0x326: V250 = ADD V241 0x44
0x327: M[V250] = 0x73746f7000000000000000000000000000000000000000000000000000000000
0x329: V251 = M[0x40]
0x32d: V252 = SUB V241 V251
0x32e: V253 = 0x64
0x330: V254 = ADD 0x64 V252
0x332: REVERT V251 V254
---
Entry stack: [V13, 0x74, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0]

================================

Block 0x333
[0x333:0x381]
---
Predecessors: [0x2bf]
Successors: [0x382, 0x386]
---
0x333 JUMPDEST
0x334 PUSH1 0x5
0x336 PUSH1 0x0
0x338 SWAP1
0x339 SLOAD
0x33a SWAP1
0x33b PUSH2 0x100
0x33e EXP
0x33f SWAP1
0x340 DIV
0x341 PUSH1 0x1
0x343 PUSH1 0xa0
0x345 PUSH1 0x2
0x347 EXP
0x348 SUB
0x349 AND
0x34a PUSH1 0x1
0x34c PUSH1 0xa0
0x34e PUSH1 0x2
0x350 EXP
0x351 SUB
0x352 AND
0x353 PUSH4 0xa5f9b5c2
0x358 PUSH1 0x40
0x35a MLOAD
0x35b DUP2
0x35c PUSH4 0xffffffff
0x361 AND
0x362 PUSH1 0xe0
0x364 PUSH1 0x2
0x366 EXP
0x367 MUL
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x4
0x36c ADD
0x36d PUSH1 0x20
0x36f PUSH1 0x40
0x371 MLOAD
0x372 DUP1
0x373 DUP4
0x374 SUB
0x375 DUP2
0x376 PUSH1 0x0
0x378 DUP8
0x379 DUP1
0x37a EXTCODESIZE
0x37b ISZERO
0x37c DUP1
0x37d ISZERO
0x37e PUSH2 0x386
0x381 JUMPI
---
0x333: JUMPDEST 
0x334: V255 = 0x5
0x336: V256 = 0x0
0x339: V257 = S[0x5]
0x33b: V258 = 0x100
0x33e: V259 = EXP 0x100 0x0
0x340: V260 = DIV V257 0x1
0x341: V261 = 0x1
0x343: V262 = 0xa0
0x345: V263 = 0x2
0x347: V264 = EXP 0x2 0xa0
0x348: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x349: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x34a: V267 = 0x1
0x34c: V268 = 0xa0
0x34e: V269 = 0x2
0x350: V270 = EXP 0x2 0xa0
0x351: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x352: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x353: V273 = 0xa5f9b5c2
0x358: V274 = 0x40
0x35a: V275 = M[0x40]
0x35c: V276 = 0xffffffff
0x361: V277 = AND 0xffffffff 0xa5f9b5c2
0x362: V278 = 0xe0
0x364: V279 = 0x2
0x366: V280 = EXP 0x2 0xe0
0x367: V281 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa5f9b5c2
0x369: M[V275] = 0xa5f9b5c200000000000000000000000000000000000000000000000000000000
0x36a: V282 = 0x4
0x36c: V283 = ADD 0x4 V275
0x36d: V284 = 0x20
0x36f: V285 = 0x40
0x371: V286 = M[0x40]
0x374: V287 = SUB V283 V286
0x376: V288 = 0x0
0x37a: V289 = EXTCODESIZE V272
0x37b: V290 = ISZERO V289
0x37d: V291 = ISZERO V290
0x37e: V292 = 0x386
0x381: JUMPI 0x386 V291
---
Entry stack: [V13, 0x74, 0x0, 0x0]
Stack pops: 0
Stack additions: [V272, 0xa5f9b5c2, V283, 0x20, V286, V287, V286, 0x0, V272, V290]
Exit stack: [V13, 0x74, 0x0, 0x0, V272, 0xa5f9b5c2, V283, 0x20, V286, V287, V286, 0x0, V272, V290]

================================

Block 0x382
[0x382:0x385]
---
Predecessors: [0x333]
Successors: []
---
0x382 PUSH1 0x0
0x384 DUP1
0x385 REVERT
---
0x382: V293 = 0x0
0x385: REVERT 0x0 0x0
---
Entry stack: [V13, 0x74, 0x0, 0x0, V272, 0xa5f9b5c2, V283, 0x20, V286, V287, V286, 0x0, V272, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0, V272, 0xa5f9b5c2, V283, 0x20, V286, V287, V286, 0x0, V272, V290]

================================

Block 0x386
[0x386:0x390]
---
Predecessors: [0x333]
Successors: [0x391, 0x39a]
---
0x386 JUMPDEST
0x387 POP
0x388 GAS
0x389 CALL
0x38a ISZERO
0x38b DUP1
0x38c ISZERO
0x38d PUSH2 0x39a
0x390 JUMPI
---
0x386: JUMPDEST 
0x388: V294 = GAS
0x389: V295 = CALL V294 V272 0x0 V286 V287 V286 0x20
0x38a: V296 = ISZERO V295
0x38c: V297 = ISZERO V296
0x38d: V298 = 0x39a
0x390: JUMPI 0x39a V297
---
Entry stack: [V13, 0x74, 0x0, 0x0, V272, 0xa5f9b5c2, V283, 0x20, V286, V287, V286, 0x0, V272, V290]
Stack pops: 7
Stack additions: [V296]
Exit stack: [V13, 0x74, 0x0, 0x0, V272, 0xa5f9b5c2, V283, V296]

================================

Block 0x391
[0x391:0x399]
---
Predecessors: [0x386]
Successors: []
---
0x391 RETURNDATASIZE
0x392 PUSH1 0x0
0x394 DUP1
0x395 RETURNDATACOPY
0x396 RETURNDATASIZE
0x397 PUSH1 0x0
0x399 REVERT
---
0x391: V299 = RETURNDATASIZE
0x392: V300 = 0x0
0x395: RETURNDATACOPY 0x0 0x0 V299
0x396: V301 = RETURNDATASIZE
0x397: V302 = 0x0
0x399: REVERT 0x0 V301
---
Entry stack: [V13, 0x74, 0x0, 0x0, V272, 0xa5f9b5c2, V283, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0, V272, 0xa5f9b5c2, V283, V296]

================================

Block 0x39a
[0x39a:0x3ab]
---
Predecessors: [0x386]
Successors: [0x3ac, 0x3b0]
---
0x39a JUMPDEST
0x39b POP
0x39c POP
0x39d POP
0x39e POP
0x39f PUSH1 0x40
0x3a1 MLOAD
0x3a2 RETURNDATASIZE
0x3a3 PUSH1 0x20
0x3a5 DUP2
0x3a6 LT
0x3a7 ISZERO
0x3a8 PUSH2 0x3b0
0x3ab JUMPI
---
0x39a: JUMPDEST 
0x39f: V303 = 0x40
0x3a1: V304 = M[0x40]
0x3a2: V305 = RETURNDATASIZE
0x3a3: V306 = 0x20
0x3a6: V307 = LT V305 0x20
0x3a7: V308 = ISZERO V307
0x3a8: V309 = 0x3b0
0x3ab: JUMPI 0x3b0 V308
---
Entry stack: [V13, 0x74, 0x0, 0x0, V272, 0xa5f9b5c2, V283, V296]
Stack pops: 4
Stack additions: [V304, V305]
Exit stack: [V13, 0x74, 0x0, 0x0, V304, V305]

================================

Block 0x3ac
[0x3ac:0x3af]
---
Predecessors: [0x39a]
Successors: []
---
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af REVERT
---
0x3ac: V310 = 0x0
0x3af: REVERT 0x0 0x0
---
Entry stack: [V13, 0x74, 0x0, 0x0, V304, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0, V304, V305]

================================

Block 0x3b0
[0x3b0:0x3ba]
---
Predecessors: [0x39a]
Successors: [0x3bb, 0x421]
---
0x3b0 JUMPDEST
0x3b1 POP
0x3b2 MLOAD
0x3b3 PUSH1 0x2
0x3b5 EQ
0x3b6 ISZERO
0x3b7 PUSH2 0x421
0x3ba JUMPI
---
0x3b0: JUMPDEST 
0x3b2: V311 = M[V304]
0x3b3: V312 = 0x2
0x3b5: V313 = EQ 0x2 V311
0x3b6: V314 = ISZERO V313
0x3b7: V315 = 0x421
0x3ba: JUMPI 0x421 V314
---
Entry stack: [V13, 0x74, 0x0, 0x0, V304, V305]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0]

================================

Block 0x3bb
[0x3bb:0x420]
---
Predecessors: [0x3b0]
Successors: []
---
0x3bb PUSH1 0x40
0x3bd DUP1
0x3be MLOAD
0x3bf PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3e0 DUP2
0x3e1 MSTORE
0x3e2 PUSH1 0x20
0x3e4 PUSH1 0x4
0x3e6 DUP3
0x3e7 ADD
0x3e8 MSTORE
0x3e9 PUSH1 0x7
0x3eb PUSH1 0x24
0x3ed DUP3
0x3ee ADD
0x3ef MSTORE
0x3f0 PUSH32 0x757073203a2d2900000000000000000000000000000000000000000000000000
0x411 PUSH1 0x44
0x413 DUP3
0x414 ADD
0x415 MSTORE
0x416 SWAP1
0x417 MLOAD
0x418 SWAP1
0x419 DUP2
0x41a SWAP1
0x41b SUB
0x41c PUSH1 0x64
0x41e ADD
0x41f SWAP1
0x420 REVERT
---
0x3bb: V316 = 0x40
0x3be: V317 = M[0x40]
0x3bf: V318 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3e1: M[V317] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3e2: V319 = 0x20
0x3e4: V320 = 0x4
0x3e7: V321 = ADD V317 0x4
0x3e8: M[V321] = 0x20
0x3e9: V322 = 0x7
0x3eb: V323 = 0x24
0x3ee: V324 = ADD V317 0x24
0x3ef: M[V324] = 0x7
0x3f0: V325 = 0x757073203a2d2900000000000000000000000000000000000000000000000000
0x411: V326 = 0x44
0x414: V327 = ADD V317 0x44
0x415: M[V327] = 0x757073203a2d2900000000000000000000000000000000000000000000000000
0x417: V328 = M[0x40]
0x41b: V329 = SUB V317 V328
0x41c: V330 = 0x64
0x41e: V331 = ADD 0x64 V329
0x420: REVERT V328 V331
---
Entry stack: [V13, 0x74, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0]

================================

Block 0x421
[0x421:0x431]
---
Predecessors: [0x3b0]
Successors: [0x432, 0x461]
---
0x421 JUMPDEST
0x422 PUSH1 0x2
0x424 SLOAD
0x425 PUSH1 0xff
0x427 AND
0x428 ISZERO
0x429 ISZERO
0x42a PUSH1 0x1
0x42c EQ
0x42d ISZERO
0x42e PUSH2 0x461
0x431 JUMPI
---
0x421: JUMPDEST 
0x422: V332 = 0x2
0x424: V333 = S[0x2]
0x425: V334 = 0xff
0x427: V335 = AND 0xff V333
0x428: V336 = ISZERO V335
0x429: V337 = ISZERO V336
0x42a: V338 = 0x1
0x42c: V339 = EQ 0x1 V337
0x42d: V340 = ISZERO V339
0x42e: V341 = 0x461
0x431: JUMPI 0x461 V340
---
Entry stack: [V13, 0x74, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0]

================================

Block 0x432
[0x432:0x460]
---
Predecessors: [0x421]
Successors: [0x461]
---
0x432 PUSH1 0x4
0x434 SLOAD
0x435 PUSH1 0x40
0x437 MLOAD
0x438 PUSH1 0x1
0x43a PUSH1 0xa0
0x43c PUSH1 0x2
0x43e EXP
0x43f SUB
0x440 SWAP1
0x441 SWAP2
0x442 AND
0x443 SWAP1
0x444 PUSH3 0x493e0
0x448 SWAP1
0x449 PUSH8 0x3782dace9d900000
0x452 SWAP1
0x453 PUSH1 0x0
0x455 DUP2
0x456 DUP2
0x457 DUP2
0x458 DUP6
0x459 DUP9
0x45a DUP9
0x45b CALL
0x45c POP
0x45d POP
0x45e POP
0x45f POP
0x460 POP
---
0x432: V342 = 0x4
0x434: V343 = S[0x4]
0x435: V344 = 0x40
0x437: V345 = M[0x40]
0x438: V346 = 0x1
0x43a: V347 = 0xa0
0x43c: V348 = 0x2
0x43e: V349 = EXP 0x2 0xa0
0x43f: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x442: V351 = AND V343 0xffffffffffffffffffffffffffffffffffffffff
0x444: V352 = 0x493e0
0x449: V353 = 0x3782dace9d900000
0x453: V354 = 0x0
0x45b: V355 = CALL 0x493e0 V351 0x3782dace9d900000 V345 0x0 V345 0x0
---
Entry stack: [V13, 0x74, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, 0x0, 0x0]

================================

Block 0x461
[0x461:0x465]
---
Predecessors: [0x421, 0x432]
Successors: [0x466]
---
0x461 JUMPDEST
0x462 PUSH1 0x1
0x464 SWAP2
0x465 POP
---
0x461: JUMPDEST 
0x462: V356 = 0x1
---
Entry stack: [V13, 0x74, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V13, 0x74, 0x1, 0x0]

================================

Block 0x466
[0x466:0x46e]
---
Predecessors: [0x461, 0x4c0]
Successors: [0x46f, 0x4cb]
---
0x466 JUMPDEST
0x467 PUSH1 0xa
0x469 DUP3
0x46a GT
0x46b PUSH2 0x4cb
0x46e JUMPI
---
0x466: JUMPDEST 
0x467: V357 = 0xa
0x46a: V358 = GT S1 0xa
0x46b: V359 = 0x4cb
0x46e: JUMPI 0x4cb V358
---
Entry stack: [V13, 0x74, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x74, S1, S0]

================================

Block 0x46f
[0x46f:0x4ab]
---
Predecessors: [0x466]
Successors: [0x4ac, 0x4b0]
---
0x46f ADDRESS
0x470 BALANCE
0x471 PUSH1 0x3
0x473 SSTORE
0x474 PUSH1 0x4
0x476 SLOAD
0x477 PUSH1 0x40
0x479 MLOAD
0x47a PUSH1 0x1
0x47c PUSH1 0xa0
0x47e PUSH1 0x2
0x480 EXP
0x481 SUB
0x482 SWAP1
0x483 SWAP2
0x484 AND
0x485 SWAP1
0x486 PUSH3 0x493e0
0x48a SWAP1
0x48b PUSH7 0x2386f26fc10000
0x493 SWAP1
0x494 PUSH1 0x0
0x496 DUP2
0x497 DUP2
0x498 DUP2
0x499 DUP6
0x49a DUP9
0x49b DUP9
0x49c CALL
0x49d SWAP5
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 DUP3
0x4a2 ISZERO
0x4a3 ISZERO
0x4a4 SWAP2
0x4a5 POP
0x4a6 PUSH2 0x4b0
0x4a9 SWAP1
0x4aa POP
0x4ab JUMPI
---
0x46f: V360 = ADDRESS
0x470: V361 = BALANCE V360
0x471: V362 = 0x3
0x473: S[0x3] = V361
0x474: V363 = 0x4
0x476: V364 = S[0x4]
0x477: V365 = 0x40
0x479: V366 = M[0x40]
0x47a: V367 = 0x1
0x47c: V368 = 0xa0
0x47e: V369 = 0x2
0x480: V370 = EXP 0x2 0xa0
0x481: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x484: V372 = AND V364 0xffffffffffffffffffffffffffffffffffffffff
0x486: V373 = 0x493e0
0x48b: V374 = 0x2386f26fc10000
0x494: V375 = 0x0
0x49c: V376 = CALL 0x493e0 V372 0x2386f26fc10000 V366 0x0 V366 0x0
0x4a2: V377 = ISZERO V376
0x4a3: V378 = ISZERO V377
0x4a6: V379 = 0x4b0
0x4ab: JUMPI 0x4b0 V378
---
Entry stack: [V13, 0x74, S1, S0]
Stack pops: 1
Stack additions: [V376]
Exit stack: [V13, 0x74, S1, V376]

================================

Block 0x4ac
[0x4ac:0x4af]
---
Predecessors: [0x46f]
Successors: [0x4cb]
---
0x4ac PUSH2 0x4cb
0x4af JUMP
---
0x4ac: V380 = 0x4cb
0x4af: JUMP 0x4cb
---
Entry stack: [V13, 0x74, S1, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, S1, V376]

================================

Block 0x4b0
[0x4b0:0x4bb]
---
Predecessors: [0x46f]
Successors: [0x4bc, 0x4c0]
---
0x4b0 JUMPDEST
0x4b1 PUSH1 0x3
0x4b3 SLOAD
0x4b4 ADDRESS
0x4b5 BALANCE
0x4b6 LT
0x4b7 ISZERO
0x4b8 PUSH2 0x4c0
0x4bb JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V381 = 0x3
0x4b3: V382 = S[0x3]
0x4b4: V383 = ADDRESS
0x4b5: V384 = BALANCE V383
0x4b6: V385 = LT V384 V382
0x4b7: V386 = ISZERO V385
0x4b8: V387 = 0x4c0
0x4bb: JUMPI 0x4c0 V386
---
Entry stack: [V13, 0x74, S1, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, S1, V376]

================================

Block 0x4bc
[0x4bc:0x4bf]
---
Predecessors: [0x4b0]
Successors: [0x4cb]
---
0x4bc PUSH2 0x4cb
0x4bf JUMP
---
0x4bc: V388 = 0x4cb
0x4bf: JUMP 0x4cb
---
Entry stack: [V13, 0x74, S1, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, S1, V376]

================================

Block 0x4c0
[0x4c0:0x4ca]
---
Predecessors: [0x4b0]
Successors: [0x466]
---
0x4c0 JUMPDEST
0x4c1 PUSH1 0x1
0x4c3 SWAP1
0x4c4 SWAP2
0x4c5 ADD
0x4c6 SWAP1
0x4c7 PUSH2 0x466
0x4ca JUMP
---
0x4c0: JUMPDEST 
0x4c1: V389 = 0x1
0x4c5: V390 = ADD S1 0x1
0x4c7: V391 = 0x466
0x4ca: JUMP 0x466
---
Entry stack: [V13, 0x74, S1, V376]
Stack pops: 2
Stack additions: [V390, S0]
Exit stack: [V13, 0x74, V390, V376]

================================

Block 0x4cb
[0x4cb:0x4dc]
---
Predecessors: [0x466, 0x4ac, 0x4bc]
Successors: [0x4dd, 0x4e1]
---
0x4cb JUMPDEST
0x4cc PUSH8 0x3782dace9d900000
0x4d5 ADDRESS
0x4d6 BALANCE
0x4d7 LT
0x4d8 ISZERO
0x4d9 PUSH2 0x4e1
0x4dc JUMPI
---
0x4cb: JUMPDEST 
0x4cc: V392 = 0x3782dace9d900000
0x4d5: V393 = ADDRESS
0x4d6: V394 = BALANCE V393
0x4d7: V395 = LT V394 0x3782dace9d900000
0x4d8: V396 = ISZERO V395
0x4d9: V397 = 0x4e1
0x4dc: JUMPI 0x4e1 V396
---
Entry stack: [V13, 0x74, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, S1, S0]

================================

Block 0x4dd
[0x4dd:0x4e0]
---
Predecessors: [0x4cb]
Successors: [0x4ec]
---
0x4dd PUSH2 0x4ec
0x4e0 JUMP
---
0x4dd: V398 = 0x4ec
0x4e0: JUMP 0x4ec
---
Entry stack: [V13, 0x74, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, S1, S0]

================================

Block 0x4e1
[0x4e1:0x4eb]
---
Predecessors: [0x4cb]
Successors: [0x4ec]
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0x2
0x4e4 DUP1
0x4e5 SLOAD
0x4e6 PUSH1 0xff
0x4e8 NOT
0x4e9 AND
0x4ea SWAP1
0x4eb SSTORE
---
0x4e1: JUMPDEST 
0x4e2: V399 = 0x2
0x4e5: V400 = S[0x2]
0x4e6: V401 = 0xff
0x4e8: V402 = NOT 0xff
0x4e9: V403 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V400
0x4eb: S[0x2] = V403
---
Entry stack: [V13, 0x74, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x74, S1, S0]

================================

Block 0x4ec
[0x4ec:0x4ef]
---
Predecessors: [0x4dd, 0x4e1]
Successors: [0x74]
---
0x4ec JUMPDEST
0x4ed POP
0x4ee POP
0x4ef JUMP
---
0x4ec: JUMPDEST 
0x4ef: JUMP 0x74
---
Entry stack: [V13, 0x74, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x4f0
[0x4f0:0x503]
---
Predecessors: [0x142]
Successors: [0x504, 0x508]
---
0x4f0 JUMPDEST
0x4f1 PUSH1 0x0
0x4f3 DUP1
0x4f4 SLOAD
0x4f5 PUSH1 0x1
0x4f7 PUSH1 0xa0
0x4f9 PUSH1 0x2
0x4fb EXP
0x4fc SUB
0x4fd AND
0x4fe CALLER
0x4ff EQ
0x500 PUSH2 0x508
0x503 JUMPI
---
0x4f0: JUMPDEST 
0x4f1: V404 = 0x0
0x4f4: V405 = S[0x0]
0x4f5: V406 = 0x1
0x4f7: V407 = 0xa0
0x4f9: V408 = 0x2
0x4fb: V409 = EXP 0x2 0xa0
0x4fc: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x4fe: V412 = CALLER
0x4ff: V413 = EQ V412 V411
0x500: V414 = 0x508
0x503: JUMPI 0x508 V413
---
Entry stack: [V13, 0x8b]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x8b, 0x0]

================================

Block 0x504
[0x504:0x507]
---
Predecessors: [0x4f0]
Successors: []
---
0x504 PUSH1 0x0
0x506 DUP1
0x507 REVERT
---
0x504: V415 = 0x0
0x507: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8b, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8b, 0x0]

================================

Block 0x508
[0x508:0x50d]
---
Predecessors: [0x4f0]
Successors: [0x8b]
---
0x508 JUMPDEST
0x509 POP
0x50a ADDRESS
0x50b BALANCE
0x50c SWAP1
0x50d JUMP
---
0x508: JUMPDEST 
0x50a: V416 = ADDRESS
0x50b: V417 = BALANCE V416
0x50d: JUMP 0x8b
---
Entry stack: [V13, 0x8b, 0x0]
Stack pops: 2
Stack additions: [V417]
Exit stack: [V13, V417]

================================

Block 0x50e
[0x50e:0x551]
---
Predecessors: []
Successors: []
---
0x50e STOP
0x50f LOG1
0x510 PUSH6 0x627a7a723058
0x517 SHA3
0x518 SWAP10
0x519 MISSING 0xe6
0x51a MISSING 0xd4
0x51b LT
0x51c MISSING 0xdc
0x51d MISSING 0xbd
0x51e MISSING 0xb1
0x51f SWAP6
0x520 MISSING 0xc2
0x521 MISSING 0xed
0x522 ISZERO
0x523 DUP9
0x524 PUSH12 0x8f46dea0a8d6fc90e291b163
0x531 MISSING 0xd0
0x532 DUP6
0x533 MISSING 0x26
0x534 MISSING 0xb7
0x535 PUSH28 0xe4b90029
---
0x50e: STOP 
0x50f: LOG S0 S1 S2
0x510: V418 = 0x627a7a723058
0x517: V419 = SHA3 0x627a7a723058 S3
0x519: MISSING 0xe6
0x51a: MISSING 0xd4
0x51b: V420 = LT S0 S1
0x51c: MISSING 0xdc
0x51d: MISSING 0xbd
0x51e: MISSING 0xb1
0x520: MISSING 0xc2
0x521: MISSING 0xed
0x522: V421 = ISZERO S0
0x524: V422 = 0x8f46dea0a8d6fc90e291b163
0x531: MISSING 0xd0
0x533: MISSING 0x26
0x534: MISSING 0xb7
0x535: V423 = 0xe4b90029
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, S4, S5, S6, S7, S8, S9, S10, S11, S12, V419, V420, S6, S1, S2, S3, S4, S5, S0, 0x8f46dea0a8d6fc90e291b163, S8, V421, S1, S2, S3, S4, S5, S6, S7, S8, S5, S0, S1, S2, S3, S4, S5, 0xe4b90029]
Exit stack: []

================================

Function 0:
Public function signature: 0x7973ccf
Entry block: 0x76
Exit block: 0x8b
Body: 0x76, 0x7e, 0x82, 0x8b, 0x14b

Function 1:
Public function signature: 0x19854110
Entry block: 0x9d
Exit block: 0x74
Body: 0x74, 0x9d, 0xa5, 0xa9, 0x151, 0x164, 0x168

Function 2:
Public function signature: 0x2482960a
Entry block: 0xb2
Exit block: 0xc7
Body: 0xb2, 0xba, 0xbe, 0xc7, 0x1f6

Function 3:
Public function signature: 0x2687a4f9
Entry block: 0xe3
Exit block: 0x74
Body: 0x74, 0xe3, 0xeb, 0xef, 0x205, 0x218, 0x21c

Function 4:
Public function signature: 0x85a09f6f
Entry block: 0x104
Exit block: 0x74
Body: 0x74, 0x104, 0x10c, 0x110, 0x258, 0x28a, 0x293

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x119
Exit block: 0xc7
Body: 0xc7, 0x119, 0x121, 0x125, 0x296

Function 6:
Public function signature: 0xd3286dde
Entry block: 0x12e
Exit block: 0x74
Body: 0x74, 0x12e, 0x2a5, 0x2bb, 0x2bf, 0x2cb, 0x333, 0x382, 0x386, 0x391, 0x39a, 0x3ac, 0x3b0, 0x3bb, 0x421, 0x432, 0x461, 0x466, 0x46f, 0x4ac, 0x4b0, 0x4bc, 0x4c0, 0x4cb, 0x4dd, 0x4e1, 0x4ec

Function 7:
Public function signature: 0xd767aee0
Entry block: 0x136
Exit block: 0x8b
Body: 0x8b, 0x136, 0x13e, 0x142, 0x4f0, 0x504, 0x508

Function 8:
Public fallback function
Entry block: 0x74
Exit block: 0x74
Body: 0x74

