Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11bcd830
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11bcd830
0x3c: V13 = EQ 0x11bcd830 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x98]
---
0x41 DUP1
0x42 PUSH4 0x27e235e3
0x47 EQ
0x48 PUSH2 0x98
0x4b JUMPI
---
0x42: V15 = 0x27e235e3
0x47: V16 = EQ 0x27e235e3 V11
0x48: V17 = 0x98
0x4b: JUMPI 0x98 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xe5]
---
0x4c DUP1
0x4d PUSH4 0x9ffa0711
0x52 EQ
0x53 PUSH2 0xe5
0x56 JUMPI
---
0x4d: V18 = 0x9ffa0711
0x52: V19 = EQ 0x9ffa0711 V11
0x53: V20 = 0xe5
0x56: JUMPI 0xe5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x108]
---
0x57 DUP1
0x58 PUSH4 0xebe7413c
0x5d EQ
0x5e PUSH2 0x108
0x61 JUMPI
---
0x58: V21 = 0xebe7413c
0x5d: V22 = EQ 0xebe7413c V11
0x5e: V23 = 0x108
0x61: JUMPI 0x108 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x141]
---
0x62 DUP1
0x63 PUSH4 0xed21248c
0x68 EQ
0x69 PUSH2 0x141
0x6c JUMPI
---
0x63: V24 = 0xed21248c
0x68: V25 = EQ 0xed21248c V11
0x69: V26 = 0x141
0x6c: JUMPI 0x141 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x75]
---
Predecessors: [0xd]
Successors: [0x76, 0x7a]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x71: V28 = ISZERO V27
0x72: V29 = 0x7a
0x75: JUMPI 0x7a V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6f]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V30 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x81]
---
Predecessors: [0x6f]
Successors: [0x14b]
---
0x7a JUMPDEST
0x7b PUSH2 0x82
0x7e PUSH2 0x14b
0x81 JUMP
---
0x7a: JUMPDEST 
0x7b: V31 = 0x82
0x7e: V32 = 0x14b
0x81: JUMP 0x14b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x82
[0x82:0x97]
---
Predecessors: [0x14b]
Successors: []
---
0x82 JUMPDEST
0x83 PUSH1 0x40
0x85 MLOAD
0x86 DUP1
0x87 DUP3
0x88 DUP2
0x89 MSTORE
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP2
0x8e POP
0x8f POP
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 SWAP2
0x95 SUB
0x96 SWAP1
0x97 RETURN
---
0x82: JUMPDEST 
0x83: V33 = 0x40
0x85: V34 = M[0x40]
0x89: M[V34] = V84
0x8a: V35 = 0x20
0x8c: V36 = ADD 0x20 V34
0x90: V37 = 0x40
0x92: V38 = M[0x40]
0x95: V39 = SUB V36 V38
0x97: RETURN V38 V39
---
Entry stack: [V11, 0x82, V84]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x98
[0x98:0x9e]
---
Predecessors: [0x41]
Successors: [0x9f, 0xa3]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a ISZERO
0x9b PUSH2 0xa3
0x9e JUMPI
---
0x98: JUMPDEST 
0x99: V40 = CALLVALUE
0x9a: V41 = ISZERO V40
0x9b: V42 = 0xa3
0x9e: JUMPI 0xa3 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xa2]
---
Predecessors: [0x98]
Successors: []
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9f: V43 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xce]
---
Predecessors: [0x98]
Successors: [0x151]
---
0xa3 JUMPDEST
0xa4 PUSH2 0xcf
0xa7 PUSH1 0x4
0xa9 DUP1
0xaa DUP1
0xab CALLDATALOAD
0xac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1 AND
0xc2 SWAP1
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP1
0xc7 SWAP2
0xc8 SWAP1
0xc9 POP
0xca POP
0xcb PUSH2 0x151
0xce JUMP
---
0xa3: JUMPDEST 
0xa4: V44 = 0xcf
0xa7: V45 = 0x4
0xab: V46 = CALLDATALOAD 0x4
0xac: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xc3: V49 = 0x20
0xc5: V50 = ADD 0x20 0x4
0xcb: V51 = 0x151
0xce: JUMP 0x151
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf, V48]
Exit stack: [V11, 0xcf, V48]

================================

Block 0xcf
[0xcf:0xe4]
---
Predecessors: [0x151]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 DUP3
0xd5 DUP2
0xd6 MSTORE
0xd7 PUSH1 0x20
0xd9 ADD
0xda SWAP2
0xdb POP
0xdc POP
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 SWAP2
0xe2 SUB
0xe3 SWAP1
0xe4 RETURN
---
0xcf: JUMPDEST 
0xd0: V52 = 0x40
0xd2: V53 = M[0x40]
0xd6: M[V53] = V92
0xd7: V54 = 0x20
0xd9: V55 = ADD 0x20 V53
0xdd: V56 = 0x40
0xdf: V57 = M[0x40]
0xe2: V58 = SUB V55 V57
0xe4: RETURN V57 V58
---
Entry stack: [V11, 0xcf, V92]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf]

================================

Block 0xe5
[0xe5:0xeb]
---
Predecessors: [0x4c]
Successors: [0xec, 0xf0]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe5: JUMPDEST 
0xe6: V59 = CALLVALUE
0xe7: V60 = ISZERO V59
0xe8: V61 = 0xf0
0xeb: JUMPI 0xf0 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe5]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V62 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0x105]
---
Predecessors: [0xe5]
Successors: [0x169]
---
0xf0 JUMPDEST
0xf1 PUSH2 0x106
0xf4 PUSH1 0x4
0xf6 DUP1
0xf7 DUP1
0xf8 CALLDATALOAD
0xf9 SWAP1
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP1
0xfe SWAP2
0xff SWAP1
0x100 POP
0x101 POP
0x102 PUSH2 0x169
0x105 JUMP
---
0xf0: JUMPDEST 
0xf1: V63 = 0x106
0xf4: V64 = 0x4
0xf8: V65 = CALLDATALOAD 0x4
0xfa: V66 = 0x20
0xfc: V67 = ADD 0x20 0x4
0x102: V68 = 0x169
0x105: JUMP 0x169
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x106, V65]
Exit stack: [V11, 0x106, V65]

================================

Block 0x106
[0x106:0x107]
---
Predecessors: [0x344]
Successors: []
---
0x106 JUMPDEST
0x107 STOP
---
0x106: JUMPDEST 
0x107: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x57]
Successors: [0x10f, 0x113]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V69 = CALLVALUE
0x10a: V70 = ISZERO V69
0x10b: V71 = 0x113
0x10e: JUMPI 0x113 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x108]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V72 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x113
[0x113:0x13e]
---
Predecessors: [0x108]
Successors: [0x347]
---
0x113 JUMPDEST
0x114 PUSH2 0x13f
0x117 PUSH1 0x4
0x119 DUP1
0x11a DUP1
0x11b CALLDATALOAD
0x11c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131 AND
0x132 SWAP1
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP1
0x137 SWAP2
0x138 SWAP1
0x139 POP
0x13a POP
0x13b PUSH2 0x347
0x13e JUMP
---
0x113: JUMPDEST 
0x114: V73 = 0x13f
0x117: V74 = 0x4
0x11b: V75 = CALLDATALOAD 0x4
0x11c: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x131: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x133: V78 = 0x20
0x135: V79 = ADD 0x20 0x4
0x13b: V80 = 0x347
0x13e: JUMP 0x347
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13f, V77]
Exit stack: [V11, 0x13f, V77]

================================

Block 0x13f
[0x13f:0x140]
---
Predecessors: [0x347]
Successors: []
---
0x13f JUMPDEST
0x140 STOP
---
0x13f: JUMPDEST 
0x140: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x141
[0x141:0x148]
---
Predecessors: [0x62]
Successors: [0x38b]
---
0x141 JUMPDEST
0x142 PUSH2 0x149
0x145 PUSH2 0x38b
0x148 JUMP
---
0x141: JUMPDEST 
0x142: V81 = 0x149
0x145: V82 = 0x38b
0x148: JUMP 0x38b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x149]
Exit stack: [V11, 0x149]

================================

Block 0x149
[0x149:0x14a]
---
Predecessors: [0x4f4]
Successors: []
---
0x149 JUMPDEST
0x14a STOP
---
0x149: JUMPDEST 
0x14a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14b
[0x14b:0x150]
---
Predecessors: [0x7a]
Successors: [0x82]
---
0x14b JUMPDEST
0x14c PUSH1 0x1
0x14e SLOAD
0x14f DUP2
0x150 JUMP
---
0x14b: JUMPDEST 
0x14c: V83 = 0x1
0x14e: V84 = S[0x1]
0x150: JUMP 0x82
---
Entry stack: [V11, 0x82]
Stack pops: 1
Stack additions: [S0, V84]
Exit stack: [V11, 0x82, V84]

================================

Block 0x151
[0x151:0x168]
---
Predecessors: [0xa3]
Successors: [0xcf]
---
0x151 JUMPDEST
0x152 PUSH1 0x0
0x154 PUSH1 0x20
0x156 MSTORE
0x157 DUP1
0x158 PUSH1 0x0
0x15a MSTORE
0x15b PUSH1 0x40
0x15d PUSH1 0x0
0x15f SHA3
0x160 PUSH1 0x0
0x162 SWAP2
0x163 POP
0x164 SWAP1
0x165 POP
0x166 SLOAD
0x167 DUP2
0x168 JUMP
---
0x151: JUMPDEST 
0x152: V85 = 0x0
0x154: V86 = 0x20
0x156: M[0x20] = 0x0
0x158: V87 = 0x0
0x15a: M[0x0] = V48
0x15b: V88 = 0x40
0x15d: V89 = 0x0
0x15f: V90 = SHA3 0x0 0x40
0x160: V91 = 0x0
0x166: V92 = S[V90]
0x168: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V48]
Stack pops: 2
Stack additions: [S1, V92]
Exit stack: [V11, 0xcf, V92]

================================

Block 0x169
[0x169:0x1b0]
---
Predecessors: [0xf0]
Successors: [0x1b1, 0x344]
---
0x169 JUMPDEST
0x16a PUSH1 0x0
0x16c DUP1
0x16d CALLER
0x16e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x183 AND
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP1
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 PUSH1 0x0
0x1a7 SHA3
0x1a8 SLOAD
0x1a9 DUP2
0x1aa GT
0x1ab ISZERO
0x1ac ISZERO
0x1ad PUSH2 0x344
0x1b0 JUMPI
---
0x169: JUMPDEST 
0x16a: V93 = 0x0
0x16d: V94 = CALLER
0x16e: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x183: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x184: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x19b: M[0x0] = V98
0x19c: V99 = 0x20
0x19e: V100 = ADD 0x20 0x0
0x1a1: M[0x20] = 0x0
0x1a2: V101 = 0x20
0x1a4: V102 = ADD 0x20 0x20
0x1a5: V103 = 0x0
0x1a7: V104 = SHA3 0x0 0x40
0x1a8: V105 = S[V104]
0x1aa: V106 = GT V65 V105
0x1ab: V107 = ISZERO V106
0x1ac: V108 = ISZERO V107
0x1ad: V109 = 0x344
0x1b0: JUMPI 0x344 V108
---
Entry stack: [V11, 0x106, V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x106, V65]

================================

Block 0x1b1
[0x1b1:0x1e5]
---
Predecessors: [0x169]
Successors: [0x1e6, 0x343]
---
0x1b1 CALLER
0x1b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c7 AND
0x1c8 DUP2
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc PUSH1 0x0
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 DUP1
0x1d2 DUP4
0x1d3 SUB
0x1d4 DUP2
0x1d5 DUP6
0x1d6 DUP8
0x1d7 PUSH2 0x8796
0x1da GAS
0x1db SUB
0x1dc CALL
0x1dd SWAP3
0x1de POP
0x1df POP
0x1e0 POP
0x1e1 ISZERO
0x1e2 PUSH2 0x343
0x1e5 JUMPI
---
0x1b1: V110 = CALLER
0x1b2: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1c9: V113 = 0x40
0x1cb: V114 = M[0x40]
0x1cc: V115 = 0x0
0x1ce: V116 = 0x40
0x1d0: V117 = M[0x40]
0x1d3: V118 = SUB V114 V117
0x1d7: V119 = 0x8796
0x1da: V120 = GAS
0x1db: V121 = SUB V120 0x8796
0x1dc: V122 = CALL V121 V112 V65 V117 V118 V117 0x0
0x1e1: V123 = ISZERO V122
0x1e2: V124 = 0x343
0x1e5: JUMPI 0x343 V123
---
Entry stack: [V11, 0x106, V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x106, V65]

================================

Block 0x1e6
[0x1e6:0x329]
---
Predecessors: [0x1b1]
Successors: [0x32a, 0x32e]
---
0x1e6 DUP1
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea CALLER
0x1eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x200 AND
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP1
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 PUSH1 0x0
0x224 SHA3
0x225 PUSH1 0x0
0x227 DUP3
0x228 DUP3
0x229 SLOAD
0x22a SUB
0x22b SWAP3
0x22c POP
0x22d POP
0x22e DUP2
0x22f SWAP1
0x230 SSTORE
0x231 POP
0x232 PUSH1 0x2
0x234 PUSH1 0x0
0x236 SWAP1
0x237 SLOAD
0x238 SWAP1
0x239 PUSH2 0x100
0x23c EXP
0x23d SWAP1
0x23e DIV
0x23f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x254 AND
0x255 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26a AND
0x26b PUSH4 0x4c2f04a4
0x270 CALLER
0x271 DUP4
0x272 PUSH1 0x40
0x274 MLOAD
0x275 DUP4
0x276 PUSH4 0xffffffff
0x27b AND
0x27c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x29a MUL
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x4
0x29f ADD
0x2a0 DUP1
0x2a1 DUP4
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 AND
0x2b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cd AND
0x2ce DUP2
0x2cf MSTORE
0x2d0 PUSH1 0x20
0x2d2 ADD
0x2d3 DUP3
0x2d4 DUP2
0x2d5 MSTORE
0x2d6 PUSH1 0x20
0x2d8 ADD
0x2d9 DUP1
0x2da PUSH1 0x20
0x2dc ADD
0x2dd DUP3
0x2de DUP2
0x2df SUB
0x2e0 DUP3
0x2e1 MSTORE
0x2e2 PUSH1 0x7
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 DUP1
0x2ea PUSH32 0x436173684f757400000000000000000000000000000000000000000000000000
0x30b DUP2
0x30c MSTORE
0x30d POP
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP4
0x312 POP
0x313 POP
0x314 POP
0x315 POP
0x316 PUSH1 0x0
0x318 PUSH1 0x40
0x31a MLOAD
0x31b DUP1
0x31c DUP4
0x31d SUB
0x31e DUP2
0x31f PUSH1 0x0
0x321 DUP8
0x322 DUP1
0x323 EXTCODESIZE
0x324 ISZERO
0x325 ISZERO
0x326 PUSH2 0x32e
0x329 JUMPI
---
0x1e7: V125 = 0x0
0x1ea: V126 = CALLER
0x1eb: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x200: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x201: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x218: M[0x0] = V130
0x219: V131 = 0x20
0x21b: V132 = ADD 0x20 0x0
0x21e: M[0x20] = 0x0
0x21f: V133 = 0x20
0x221: V134 = ADD 0x20 0x20
0x222: V135 = 0x0
0x224: V136 = SHA3 0x0 0x40
0x225: V137 = 0x0
0x229: V138 = S[V136]
0x22a: V139 = SUB V138 V65
0x230: S[V136] = V139
0x232: V140 = 0x2
0x234: V141 = 0x0
0x237: V142 = S[0x2]
0x239: V143 = 0x100
0x23c: V144 = EXP 0x100 0x0
0x23e: V145 = DIV V142 0x1
0x23f: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x254: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x255: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x26b: V150 = 0x4c2f04a4
0x270: V151 = CALLER
0x272: V152 = 0x40
0x274: V153 = M[0x40]
0x276: V154 = 0xffffffff
0x27b: V155 = AND 0xffffffff 0x4c2f04a4
0x27c: V156 = 0x100000000000000000000000000000000000000000000000000000000
0x29a: V157 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x29c: M[V153] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x29d: V158 = 0x4
0x29f: V159 = ADD 0x4 V153
0x2a2: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x2b8: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cd: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2cf: M[V159] = V163
0x2d0: V164 = 0x20
0x2d2: V165 = ADD 0x20 V159
0x2d5: M[V165] = V65
0x2d6: V166 = 0x20
0x2d8: V167 = ADD 0x20 V165
0x2da: V168 = 0x20
0x2dc: V169 = ADD 0x20 V167
0x2df: V170 = SUB V169 V159
0x2e1: M[V167] = V170
0x2e2: V171 = 0x7
0x2e5: M[V169] = 0x7
0x2e6: V172 = 0x20
0x2e8: V173 = ADD 0x20 V169
0x2ea: V174 = 0x436173684f757400000000000000000000000000000000000000000000000000
0x30c: M[V173] = 0x436173684f757400000000000000000000000000000000000000000000000000
0x30e: V175 = 0x20
0x310: V176 = ADD 0x20 V173
0x316: V177 = 0x0
0x318: V178 = 0x40
0x31a: V179 = M[0x40]
0x31d: V180 = SUB V176 V179
0x31f: V181 = 0x0
0x323: V182 = EXTCODESIZE V149
0x324: V183 = ISZERO V182
0x325: V184 = ISZERO V183
0x326: V185 = 0x32e
0x329: JUMPI 0x32e V184
---
Entry stack: [V11, 0x106, V65]
Stack pops: 1
Stack additions: [S0, V149, 0x4c2f04a4, V176, 0x0, V179, V180, V179, 0x0, V149]
Exit stack: [V11, 0x106, V65, V149, 0x4c2f04a4, V176, 0x0, V179, V180, V179, 0x0, V149]

================================

Block 0x32a
[0x32a:0x32d]
---
Predecessors: [0x1e6]
Successors: []
---
0x32a PUSH1 0x0
0x32c DUP1
0x32d REVERT
---
0x32a: V186 = 0x0
0x32d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106, V65, V149, 0x4c2f04a4, V176, 0x0, V179, V180, V179, 0x0, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106, V65, V149, 0x4c2f04a4, V176, 0x0, V179, V180, V179, 0x0, V149]

================================

Block 0x32e
[0x32e:0x33a]
---
Predecessors: [0x1e6]
Successors: [0x33b, 0x33f]
---
0x32e JUMPDEST
0x32f PUSH2 0x2c6
0x332 GAS
0x333 SUB
0x334 CALL
0x335 ISZERO
0x336 ISZERO
0x337 PUSH2 0x33f
0x33a JUMPI
---
0x32e: JUMPDEST 
0x32f: V187 = 0x2c6
0x332: V188 = GAS
0x333: V189 = SUB V188 0x2c6
0x334: V190 = CALL V189 V149 0x0 V179 V180 V179 0x0
0x335: V191 = ISZERO V190
0x336: V192 = ISZERO V191
0x337: V193 = 0x33f
0x33a: JUMPI 0x33f V192
---
Entry stack: [V11, 0x106, V65, V149, 0x4c2f04a4, V176, 0x0, V179, V180, V179, 0x0, V149]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x106, V65, V149, 0x4c2f04a4, V176]

================================

Block 0x33b
[0x33b:0x33e]
---
Predecessors: [0x32e]
Successors: []
---
0x33b PUSH1 0x0
0x33d DUP1
0x33e REVERT
---
0x33b: V194 = 0x0
0x33e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106, V65, V149, 0x4c2f04a4, V176]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106, V65, V149, 0x4c2f04a4, V176]

================================

Block 0x33f
[0x33f:0x342]
---
Predecessors: [0x32e]
Successors: [0x343]
---
0x33f JUMPDEST
0x340 POP
0x341 POP
0x342 POP
---
0x33f: JUMPDEST 
---
Entry stack: [V11, 0x106, V65, V149, 0x4c2f04a4, V176]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x106, V65]

================================

Block 0x343
[0x343:0x343]
---
Predecessors: [0x1b1, 0x33f]
Successors: [0x344]
---
0x343 JUMPDEST
---
0x343: JUMPDEST 
---
Entry stack: [V11, 0x106, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106, V65]

================================

Block 0x344
[0x344:0x346]
---
Predecessors: [0x169, 0x343]
Successors: [0x106]
---
0x344 JUMPDEST
0x345 POP
0x346 JUMP
---
0x344: JUMPDEST 
0x346: JUMP 0x106
---
Entry stack: [V11, 0x106, V65]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x347
[0x347:0x38a]
---
Predecessors: [0x113]
Successors: [0x13f]
---
0x347 JUMPDEST
0x348 DUP1
0x349 PUSH1 0x2
0x34b PUSH1 0x0
0x34d PUSH2 0x100
0x350 EXP
0x351 DUP2
0x352 SLOAD
0x353 DUP2
0x354 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x369 MUL
0x36a NOT
0x36b AND
0x36c SWAP1
0x36d DUP4
0x36e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x383 AND
0x384 MUL
0x385 OR
0x386 SWAP1
0x387 SSTORE
0x388 POP
0x389 POP
0x38a JUMP
---
0x347: JUMPDEST 
0x349: V195 = 0x2
0x34b: V196 = 0x0
0x34d: V197 = 0x100
0x350: V198 = EXP 0x100 0x0
0x352: V199 = S[0x2]
0x354: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x369: V201 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x36a: V202 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V203 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V199
0x36e: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x383: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x384: V206 = MUL V205 0x1
0x385: V207 = OR V206 V203
0x387: S[0x2] = V207
0x38a: JUMP 0x13f
---
Entry stack: [V11, 0x13f, V77]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x38b
[0x38b:0x396]
---
Predecessors: [0x141]
Successors: [0x397, 0x4f4]
---
0x38b JUMPDEST
0x38c PUSH1 0x1
0x38e SLOAD
0x38f CALLVALUE
0x390 LT
0x391 ISZERO
0x392 ISZERO
0x393 PUSH2 0x4f4
0x396 JUMPI
---
0x38b: JUMPDEST 
0x38c: V208 = 0x1
0x38e: V209 = S[0x1]
0x38f: V210 = CALLVALUE
0x390: V211 = LT V210 V209
0x391: V212 = ISZERO V211
0x392: V213 = ISZERO V212
0x393: V214 = 0x4f4
0x396: JUMPI 0x4f4 V213
---
Entry stack: [V11, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x149]

================================

Block 0x397
[0x397:0x4da]
---
Predecessors: [0x38b]
Successors: [0x4db, 0x4df]
---
0x397 CALLVALUE
0x398 PUSH1 0x0
0x39a DUP1
0x39b CALLER
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 AND
0x3b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c7 AND
0x3c8 DUP2
0x3c9 MSTORE
0x3ca PUSH1 0x20
0x3cc ADD
0x3cd SWAP1
0x3ce DUP2
0x3cf MSTORE
0x3d0 PUSH1 0x20
0x3d2 ADD
0x3d3 PUSH1 0x0
0x3d5 SHA3
0x3d6 PUSH1 0x0
0x3d8 DUP3
0x3d9 DUP3
0x3da SLOAD
0x3db ADD
0x3dc SWAP3
0x3dd POP
0x3de POP
0x3df DUP2
0x3e0 SWAP1
0x3e1 SSTORE
0x3e2 POP
0x3e3 PUSH1 0x2
0x3e5 PUSH1 0x0
0x3e7 SWAP1
0x3e8 SLOAD
0x3e9 SWAP1
0x3ea PUSH2 0x100
0x3ed EXP
0x3ee SWAP1
0x3ef DIV
0x3f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x405 AND
0x406 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41b AND
0x41c PUSH4 0x4c2f04a4
0x421 CALLER
0x422 CALLVALUE
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP4
0x427 PUSH4 0xffffffff
0x42c AND
0x42d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x44b MUL
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x4
0x450 ADD
0x451 DUP1
0x452 DUP4
0x453 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x468 AND
0x469 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47e AND
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x20
0x483 ADD
0x484 DUP3
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x20
0x489 ADD
0x48a DUP1
0x48b PUSH1 0x20
0x48d ADD
0x48e DUP3
0x48f DUP2
0x490 SUB
0x491 DUP3
0x492 MSTORE
0x493 PUSH1 0x7
0x495 DUP2
0x496 MSTORE
0x497 PUSH1 0x20
0x499 ADD
0x49a DUP1
0x49b PUSH32 0x4465706f73697400000000000000000000000000000000000000000000000000
0x4bc DUP2
0x4bd MSTORE
0x4be POP
0x4bf PUSH1 0x20
0x4c1 ADD
0x4c2 SWAP4
0x4c3 POP
0x4c4 POP
0x4c5 POP
0x4c6 POP
0x4c7 PUSH1 0x0
0x4c9 PUSH1 0x40
0x4cb MLOAD
0x4cc DUP1
0x4cd DUP4
0x4ce SUB
0x4cf DUP2
0x4d0 PUSH1 0x0
0x4d2 DUP8
0x4d3 DUP1
0x4d4 EXTCODESIZE
0x4d5 ISZERO
0x4d6 ISZERO
0x4d7 PUSH2 0x4df
0x4da JUMPI
---
0x397: V215 = CALLVALUE
0x398: V216 = 0x0
0x39b: V217 = CALLER
0x39c: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x3b2: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3c9: M[0x0] = V221
0x3ca: V222 = 0x20
0x3cc: V223 = ADD 0x20 0x0
0x3cf: M[0x20] = 0x0
0x3d0: V224 = 0x20
0x3d2: V225 = ADD 0x20 0x20
0x3d3: V226 = 0x0
0x3d5: V227 = SHA3 0x0 0x40
0x3d6: V228 = 0x0
0x3da: V229 = S[V227]
0x3db: V230 = ADD V229 V215
0x3e1: S[V227] = V230
0x3e3: V231 = 0x2
0x3e5: V232 = 0x0
0x3e8: V233 = S[0x2]
0x3ea: V234 = 0x100
0x3ed: V235 = EXP 0x100 0x0
0x3ef: V236 = DIV V233 0x1
0x3f0: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x405: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x406: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x41b: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x41c: V241 = 0x4c2f04a4
0x421: V242 = CALLER
0x422: V243 = CALLVALUE
0x423: V244 = 0x40
0x425: V245 = M[0x40]
0x427: V246 = 0xffffffff
0x42c: V247 = AND 0xffffffff 0x4c2f04a4
0x42d: V248 = 0x100000000000000000000000000000000000000000000000000000000
0x44b: V249 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x44d: M[V245] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x44e: V250 = 0x4
0x450: V251 = ADD 0x4 V245
0x453: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x468: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x469: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x480: M[V251] = V255
0x481: V256 = 0x20
0x483: V257 = ADD 0x20 V251
0x486: M[V257] = V243
0x487: V258 = 0x20
0x489: V259 = ADD 0x20 V257
0x48b: V260 = 0x20
0x48d: V261 = ADD 0x20 V259
0x490: V262 = SUB V261 V251
0x492: M[V259] = V262
0x493: V263 = 0x7
0x496: M[V261] = 0x7
0x497: V264 = 0x20
0x499: V265 = ADD 0x20 V261
0x49b: V266 = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x4bd: M[V265] = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x4bf: V267 = 0x20
0x4c1: V268 = ADD 0x20 V265
0x4c7: V269 = 0x0
0x4c9: V270 = 0x40
0x4cb: V271 = M[0x40]
0x4ce: V272 = SUB V268 V271
0x4d0: V273 = 0x0
0x4d4: V274 = EXTCODESIZE V240
0x4d5: V275 = ISZERO V274
0x4d6: V276 = ISZERO V275
0x4d7: V277 = 0x4df
0x4da: JUMPI 0x4df V276
---
Entry stack: [V11, 0x149]
Stack pops: 0
Stack additions: [V240, 0x4c2f04a4, V268, 0x0, V271, V272, V271, 0x0, V240]
Exit stack: [V11, 0x149, V240, 0x4c2f04a4, V268, 0x0, V271, V272, V271, 0x0, V240]

================================

Block 0x4db
[0x4db:0x4de]
---
Predecessors: [0x397]
Successors: []
---
0x4db PUSH1 0x0
0x4dd DUP1
0x4de REVERT
---
0x4db: V278 = 0x0
0x4de: REVERT 0x0 0x0
---
Entry stack: [V11, 0x149, V240, 0x4c2f04a4, V268, 0x0, V271, V272, V271, 0x0, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x149, V240, 0x4c2f04a4, V268, 0x0, V271, V272, V271, 0x0, V240]

================================

Block 0x4df
[0x4df:0x4eb]
---
Predecessors: [0x397]
Successors: [0x4ec, 0x4f0]
---
0x4df JUMPDEST
0x4e0 PUSH2 0x2c6
0x4e3 GAS
0x4e4 SUB
0x4e5 CALL
0x4e6 ISZERO
0x4e7 ISZERO
0x4e8 PUSH2 0x4f0
0x4eb JUMPI
---
0x4df: JUMPDEST 
0x4e0: V279 = 0x2c6
0x4e3: V280 = GAS
0x4e4: V281 = SUB V280 0x2c6
0x4e5: V282 = CALL V281 V240 0x0 V271 V272 V271 0x0
0x4e6: V283 = ISZERO V282
0x4e7: V284 = ISZERO V283
0x4e8: V285 = 0x4f0
0x4eb: JUMPI 0x4f0 V284
---
Entry stack: [V11, 0x149, V240, 0x4c2f04a4, V268, 0x0, V271, V272, V271, 0x0, V240]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x149, V240, 0x4c2f04a4, V268]

================================

Block 0x4ec
[0x4ec:0x4ef]
---
Predecessors: [0x4df]
Successors: []
---
0x4ec PUSH1 0x0
0x4ee DUP1
0x4ef REVERT
---
0x4ec: V286 = 0x0
0x4ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x149, V240, 0x4c2f04a4, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x149, V240, 0x4c2f04a4, V268]

================================

Block 0x4f0
[0x4f0:0x4f3]
---
Predecessors: [0x4df]
Successors: [0x4f4]
---
0x4f0 JUMPDEST
0x4f1 POP
0x4f2 POP
0x4f3 POP
---
0x4f0: JUMPDEST 
---
Entry stack: [V11, 0x149, V240, 0x4c2f04a4, V268]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x149]

================================

Block 0x4f4
[0x4f4:0x4f5]
---
Predecessors: [0x38b, 0x4f0]
Successors: [0x149]
---
0x4f4 JUMPDEST
0x4f5 JUMP
---
0x4f4: JUMPDEST 
0x4f5: JUMP 0x149
---
Entry stack: [V11, 0x149]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4f6
[0x4f6:0x521]
---
Predecessors: []
Successors: []
---
0x4f6 STOP
0x4f7 LOG1
0x4f8 PUSH6 0x627a7a723058
0x4ff SHA3
0x500 PUSH2 0xd21a
0x503 PUSH23 0xec6142a2ea64e3b67ad250c4da4b806a408b03d2a3c284
0x51b SSTORE
0x51c CREATE2
0x51d MISSING 0x5f
0x51e SHL
0x51f MISSING 0xc5
0x520 STOP
0x521 MISSING 0x29
---
0x4f6: STOP 
0x4f7: LOG S0 S1 S2
0x4f8: V287 = 0x627a7a723058
0x4ff: V288 = SHA3 0x627a7a723058 S3
0x500: V289 = 0xd21a
0x503: V290 = 0xec6142a2ea64e3b67ad250c4da4b806a408b03d2a3c284
0x51b: S[0xec6142a2ea64e3b67ad250c4da4b806a408b03d2a3c284] = 0xd21a
0x51c: V291 = CREATE2 V288 S4 S5 S6
0x51d: MISSING 0x5f
0x51e: V292 = SHL S0 S1
0x51f: MISSING 0xc5
0x520: STOP 
0x521: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V291, V292]
Exit stack: []

================================

Function 0:
Public function signature: 0x11bcd830
Entry block: 0x6f
Exit block: 0x82
Body: 0x6f, 0x76, 0x7a, 0x82, 0x14b

Function 1:
Public function signature: 0x27e235e3
Entry block: 0x98
Exit block: 0xcf
Body: 0x98, 0x9f, 0xa3, 0xcf, 0x151

Function 2:
Public function signature: 0x9ffa0711
Entry block: 0xe5
Exit block: 0x33b
Body: 0xe5, 0xec, 0xf0, 0x106, 0x169, 0x1b1, 0x1e6, 0x32a, 0x32e, 0x33b, 0x33f, 0x343, 0x344

Function 3:
Public function signature: 0xebe7413c
Entry block: 0x108
Exit block: 0x13f
Body: 0x108, 0x10f, 0x113, 0x13f, 0x347

Function 4:
Public function signature: 0xed21248c
Entry block: 0x141
Exit block: 0x4ec
Body: 0x141, 0x149, 0x38b, 0x397, 0x4db, 0x4df, 0x4ec, 0x4f0, 0x4f4

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

