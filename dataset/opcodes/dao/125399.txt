Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x99]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x99
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x99
0xc: JUMPI 0x99 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x1b6]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3d79d1c8
0x3c EQ
0x3d PUSH2 0x1b6
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3d79d1c8
0x3c: V13 = EQ 0x3d79d1c8 V11
0x3d: V14 = 0x1b6
0x40: JUMPI 0x1b6 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x1df]
---
0x41 DUP1
0x42 PUSH4 0x4b906714
0x47 EQ
0x48 PUSH2 0x1df
0x4b JUMPI
---
0x42: V15 = 0x4b906714
0x47: V16 = EQ 0x4b906714 V11
0x48: V17 = 0x1df
0x4b: JUMPI 0x1df V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x259]
---
0x4c DUP1
0x4d PUSH4 0x4fe6f55f
0x52 EQ
0x53 PUSH2 0x259
0x56 JUMPI
---
0x4d: V18 = 0x4fe6f55f
0x52: V19 = EQ 0x4fe6f55f V11
0x53: V20 = 0x259
0x56: JUMPI 0x259 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x2ae]
---
0x57 DUP1
0x58 PUSH4 0x529334a1
0x5d EQ
0x5e PUSH2 0x2ae
0x61 JUMPI
---
0x58: V21 = 0x529334a1
0x5d: V22 = EQ 0x529334a1 V11
0x5e: V23 = 0x2ae
0x61: JUMPI 0x2ae V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x2e7]
---
0x62 DUP1
0x63 PUSH4 0x89977cdf
0x68 EQ
0x69 PUSH2 0x2e7
0x6c JUMPI
---
0x63: V24 = 0x89977cdf
0x68: V25 = EQ 0x89977cdf V11
0x69: V26 = 0x2e7
0x6c: JUMPI 0x2e7 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x33c]
---
0x6d DUP1
0x6e PUSH4 0x8a7cf7f5
0x73 EQ
0x74 PUSH2 0x33c
0x77 JUMPI
---
0x6e: V27 = 0x8a7cf7f5
0x73: V28 = EQ 0x8a7cf7f5 V11
0x74: V29 = 0x33c
0x77: JUMPI 0x33c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x346]
---
0x78 DUP1
0x79 PUSH4 0x9003e39a
0x7e EQ
0x7f PUSH2 0x346
0x82 JUMPI
---
0x79: V30 = 0x9003e39a
0x7e: V31 = EQ 0x9003e39a V11
0x7f: V32 = 0x346
0x82: JUMPI 0x346 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x3b7]
---
0x83 DUP1
0x84 PUSH4 0xc144811f
0x89 EQ
0x8a PUSH2 0x3b7
0x8d JUMPI
---
0x84: V33 = 0xc144811f
0x89: V34 = EQ 0xc144811f V11
0x8a: V35 = 0x3b7
0x8d: JUMPI 0x3b7 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x3c1]
---
0x8e DUP1
0x8f PUSH4 0xeb5c3a36
0x94 EQ
0x95 PUSH2 0x3c1
0x98 JUMPI
---
0x8f: V36 = 0xeb5c3a36
0x94: V37 = EQ 0xeb5c3a36 V11
0x95: V38 = 0x3c1
0x98: JUMPI 0x3c1 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xb5]
---
Predecessors: [0x0, 0x8e]
Successors: [0xb6, 0x1b4]
---
0x99 JUMPDEST
0x9a PUSH1 0x1
0x9c ISZERO
0x9d ISZERO
0x9e PUSH1 0x1
0xa0 PUSH1 0x14
0xa2 SWAP1
0xa3 SLOAD
0xa4 SWAP1
0xa5 PUSH2 0x100
0xa8 EXP
0xa9 SWAP1
0xaa DIV
0xab PUSH1 0xff
0xad AND
0xae ISZERO
0xaf ISZERO
0xb0 EQ
0xb1 ISZERO
0xb2 PUSH2 0x1b4
0xb5 JUMPI
---
0x99: JUMPDEST 
0x9a: V39 = 0x1
0x9c: V40 = ISZERO 0x1
0x9d: V41 = ISZERO 0x0
0x9e: V42 = 0x1
0xa0: V43 = 0x14
0xa3: V44 = S[0x1]
0xa5: V45 = 0x100
0xa8: V46 = EXP 0x100 0x14
0xaa: V47 = DIV V44 0x10000000000000000000000000000000000000000
0xab: V48 = 0xff
0xad: V49 = AND 0xff V47
0xae: V50 = ISZERO V49
0xaf: V51 = ISZERO V50
0xb0: V52 = EQ V51 0x1
0xb1: V53 = ISZERO V52
0xb2: V54 = 0x1b4
0xb5: JUMPI 0x1b4 V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb6
[0xb6:0x1b3]
---
Predecessors: [0x99]
Successors: [0x1b4]
---
0xb6 PUSH1 0x0
0xb8 PUSH1 0x1
0xba PUSH1 0x14
0xbc PUSH2 0x100
0xbf EXP
0xc0 DUP2
0xc1 SLOAD
0xc2 DUP2
0xc3 PUSH1 0xff
0xc5 MUL
0xc6 NOT
0xc7 AND
0xc8 SWAP1
0xc9 DUP4
0xca ISZERO
0xcb ISZERO
0xcc MUL
0xcd OR
0xce SWAP1
0xcf SSTORE
0xd0 POP
0xd1 PUSH1 0x1
0xd3 PUSH1 0x0
0xd5 SWAP1
0xd6 SLOAD
0xd7 SWAP1
0xd8 PUSH2 0x100
0xdb EXP
0xdc SWAP1
0xdd DIV
0xde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3 AND
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e DUP1
0x10f PUSH32 0x436173684f75742875696e743235362900000000000000000000000000000000
0x130 DUP2
0x131 MSTORE
0x132 POP
0x133 PUSH1 0x10
0x135 ADD
0x136 SWAP1
0x137 POP
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c SWAP2
0x13d SUB
0x13e SWAP1
0x13f SHA3
0x140 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x15e SWAP1
0x15f DIV
0x160 PUSH1 0x1
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP3
0x166 PUSH4 0xffffffff
0x16b AND
0x16c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x18a MUL
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0x4
0x18f ADD
0x190 DUP1
0x191 DUP3
0x192 PUSH1 0xff
0x194 AND
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a SWAP2
0x19b POP
0x19c POP
0x19d PUSH1 0x0
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 DUP1
0x1a3 DUP4
0x1a4 SUB
0x1a5 DUP2
0x1a6 PUSH1 0x0
0x1a8 DUP8
0x1a9 PUSH2 0x646e
0x1ac GAS
0x1ad SUB
0x1ae CALL
0x1af SWAP3
0x1b0 POP
0x1b1 POP
0x1b2 POP
0x1b3 POP
---
0xb6: V55 = 0x0
0xb8: V56 = 0x1
0xba: V57 = 0x14
0xbc: V58 = 0x100
0xbf: V59 = EXP 0x100 0x14
0xc1: V60 = S[0x1]
0xc3: V61 = 0xff
0xc5: V62 = MUL 0xff 0x10000000000000000000000000000000000000000
0xc6: V63 = NOT 0xff0000000000000000000000000000000000000000
0xc7: V64 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V60
0xca: V65 = ISZERO 0x0
0xcb: V66 = ISZERO 0x1
0xcc: V67 = MUL 0x0 0x10000000000000000000000000000000000000000
0xcd: V68 = OR 0x0 V64
0xcf: S[0x1] = V68
0xd1: V69 = 0x1
0xd3: V70 = 0x0
0xd6: V71 = S[0x1]
0xd8: V72 = 0x100
0xdb: V73 = EXP 0x100 0x0
0xdd: V74 = DIV V71 0x1
0xde: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xf4: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x10a: V79 = 0x40
0x10c: V80 = M[0x40]
0x10f: V81 = 0x436173684f75742875696e743235362900000000000000000000000000000000
0x131: M[V80] = 0x436173684f75742875696e743235362900000000000000000000000000000000
0x133: V82 = 0x10
0x135: V83 = ADD 0x10 V80
0x138: V84 = 0x40
0x13a: V85 = M[0x40]
0x13d: V86 = SUB V83 V85
0x13f: V87 = SHA3 V85 V86
0x140: V88 = 0x100000000000000000000000000000000000000000000000000000000
0x15f: V89 = DIV V87 0x100000000000000000000000000000000000000000000000000000000
0x160: V90 = 0x1
0x162: V91 = 0x40
0x164: V92 = M[0x40]
0x166: V93 = 0xffffffff
0x16b: V94 = AND 0xffffffff V89
0x16c: V95 = 0x100000000000000000000000000000000000000000000000000000000
0x18a: V96 = MUL 0x100000000000000000000000000000000000000000000000000000000 V94
0x18c: M[V92] = V96
0x18d: V97 = 0x4
0x18f: V98 = ADD 0x4 V92
0x192: V99 = 0xff
0x194: V100 = AND 0xff 0x1
0x196: M[V98] = 0x1
0x197: V101 = 0x20
0x199: V102 = ADD 0x20 V98
0x19d: V103 = 0x0
0x19f: V104 = 0x40
0x1a1: V105 = M[0x40]
0x1a4: V106 = SUB V102 V105
0x1a6: V107 = 0x0
0x1a9: V108 = 0x646e
0x1ac: V109 = GAS
0x1ad: V110 = SUB V109 0x646e
0x1ae: V111 = CALL V110 V78 0x0 V105 V106 V105 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b4
[0x1b4:0x1b5]
---
Predecessors: [0x99, 0xb6]
Successors: []
---
0x1b4 JUMPDEST
0x1b5 STOP
---
0x1b4: JUMPDEST 
0x1b5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b6
[0x1b6:0x1bc]
---
Predecessors: [0xd]
Successors: [0x1bd, 0x1c1]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 ISZERO
0x1b9 PUSH2 0x1c1
0x1bc JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V112 = CALLVALUE
0x1b8: V113 = ISZERO V112
0x1b9: V114 = 0x1c1
0x1bc: JUMPI 0x1c1 V113
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bd
[0x1bd:0x1c0]
---
Predecessors: [0x1b6]
Successors: []
---
0x1bd PUSH1 0x0
0x1bf DUP1
0x1c0 REVERT
---
0x1bd: V115 = 0x0
0x1c0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c1
[0x1c1:0x1c8]
---
Predecessors: [0x1b6]
Successors: [0x3ee]
---
0x1c1 JUMPDEST
0x1c2 PUSH2 0x1c9
0x1c5 PUSH2 0x3ee
0x1c8 JUMP
---
0x1c1: JUMPDEST 
0x1c2: V116 = 0x1c9
0x1c5: V117 = 0x3ee
0x1c8: JUMP 0x3ee
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c9]
Exit stack: [V11, 0x1c9]

================================

Block 0x1c9
[0x1c9:0x1de]
---
Predecessors: [0x3ee]
Successors: []
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd DUP1
0x1ce DUP3
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP2
0x1d5 POP
0x1d6 POP
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP1
0x1db SWAP2
0x1dc SUB
0x1dd SWAP1
0x1de RETURN
---
0x1c9: JUMPDEST 
0x1ca: V118 = 0x40
0x1cc: V119 = M[0x40]
0x1d0: M[V119] = V257
0x1d1: V120 = 0x20
0x1d3: V121 = ADD 0x20 V119
0x1d7: V122 = 0x40
0x1d9: V123 = M[0x40]
0x1dc: V124 = SUB V121 V123
0x1de: RETURN V123 V124
---
Entry stack: [V11, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1df
[0x1df:0x256]
---
Predecessors: [0x41]
Successors: [0x40d]
---
0x1df JUMPDEST
0x1e0 PUSH2 0x257
0x1e3 PUSH1 0x4
0x1e5 DUP1
0x1e6 DUP1
0x1e7 CALLDATALOAD
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe SWAP1
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP1
0x203 SWAP2
0x204 SWAP1
0x205 DUP1
0x206 CALLDATALOAD
0x207 SWAP1
0x208 PUSH1 0x20
0x20a ADD
0x20b SWAP1
0x20c SWAP2
0x20d SWAP1
0x20e DUP1
0x20f CALLDATALOAD
0x210 SWAP1
0x211 PUSH1 0x20
0x213 ADD
0x214 SWAP1
0x215 DUP3
0x216 ADD
0x217 DUP1
0x218 CALLDATALOAD
0x219 SWAP1
0x21a PUSH1 0x20
0x21c ADD
0x21d SWAP1
0x21e DUP1
0x21f DUP1
0x220 PUSH1 0x1f
0x222 ADD
0x223 PUSH1 0x20
0x225 DUP1
0x226 SWAP2
0x227 DIV
0x228 MUL
0x229 PUSH1 0x20
0x22b ADD
0x22c PUSH1 0x40
0x22e MLOAD
0x22f SWAP1
0x230 DUP2
0x231 ADD
0x232 PUSH1 0x40
0x234 MSTORE
0x235 DUP1
0x236 SWAP4
0x237 SWAP3
0x238 SWAP2
0x239 SWAP1
0x23a DUP2
0x23b DUP2
0x23c MSTORE
0x23d PUSH1 0x20
0x23f ADD
0x240 DUP4
0x241 DUP4
0x242 DUP1
0x243 DUP3
0x244 DUP5
0x245 CALLDATACOPY
0x246 DUP3
0x247 ADD
0x248 SWAP2
0x249 POP
0x24a POP
0x24b POP
0x24c POP
0x24d POP
0x24e POP
0x24f SWAP2
0x250 SWAP1
0x251 POP
0x252 POP
0x253 PUSH2 0x40d
0x256 JUMP
---
0x1df: JUMPDEST 
0x1e0: V125 = 0x257
0x1e3: V126 = 0x4
0x1e7: V127 = CALLDATALOAD 0x4
0x1e8: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x1ff: V130 = 0x20
0x201: V131 = ADD 0x20 0x4
0x206: V132 = CALLDATALOAD 0x24
0x208: V133 = 0x20
0x20a: V134 = ADD 0x20 0x24
0x20f: V135 = CALLDATALOAD 0x44
0x211: V136 = 0x20
0x213: V137 = ADD 0x20 0x44
0x216: V138 = ADD 0x4 V135
0x218: V139 = CALLDATALOAD V138
0x21a: V140 = 0x20
0x21c: V141 = ADD 0x20 V138
0x220: V142 = 0x1f
0x222: V143 = ADD 0x1f V139
0x223: V144 = 0x20
0x227: V145 = DIV V143 0x20
0x228: V146 = MUL V145 0x20
0x229: V147 = 0x20
0x22b: V148 = ADD 0x20 V146
0x22c: V149 = 0x40
0x22e: V150 = M[0x40]
0x231: V151 = ADD V150 V148
0x232: V152 = 0x40
0x234: M[0x40] = V151
0x23c: M[V150] = V139
0x23d: V153 = 0x20
0x23f: V154 = ADD 0x20 V150
0x245: CALLDATACOPY V154 V141 V139
0x247: V155 = ADD V154 V139
0x253: V156 = 0x40d
0x256: JUMP 0x40d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x257, V129, V132, V150]
Exit stack: [V11, 0x257, V129, V132, V150]

================================

Block 0x257
[0x257:0x258]
---
Predecessors: [0x4ff]
Successors: []
---
0x257 JUMPDEST
0x258 STOP
---
0x257: JUMPDEST 
0x258: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x259
[0x259:0x25f]
---
Predecessors: [0x4c]
Successors: [0x260, 0x264]
---
0x259 JUMPDEST
0x25a CALLVALUE
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x259: JUMPDEST 
0x25a: V157 = CALLVALUE
0x25b: V158 = ISZERO V157
0x25c: V159 = 0x264
0x25f: JUMPI 0x264 V158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x259]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V160 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x264
[0x264:0x26b]
---
Predecessors: [0x259]
Successors: [0x504]
---
0x264 JUMPDEST
0x265 PUSH2 0x26c
0x268 PUSH2 0x504
0x26b JUMP
---
0x264: JUMPDEST 
0x265: V161 = 0x26c
0x268: V162 = 0x504
0x26b: JUMP 0x504
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x26c]
Exit stack: [V11, 0x26c]

================================

Block 0x26c
[0x26c:0x2ad]
---
Predecessors: [0x504]
Successors: []
---
0x26c JUMPDEST
0x26d PUSH1 0x40
0x26f MLOAD
0x270 DUP1
0x271 DUP3
0x272 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x287 AND
0x288 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29d AND
0x29e DUP2
0x29f MSTORE
0x2a0 PUSH1 0x20
0x2a2 ADD
0x2a3 SWAP2
0x2a4 POP
0x2a5 POP
0x2a6 PUSH1 0x40
0x2a8 MLOAD
0x2a9 DUP1
0x2aa SWAP2
0x2ab SUB
0x2ac SWAP1
0x2ad RETURN
---
0x26c: JUMPDEST 
0x26d: V163 = 0x40
0x26f: V164 = M[0x40]
0x272: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x287: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x288: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x29f: M[V164] = V168
0x2a0: V169 = 0x20
0x2a2: V170 = ADD 0x20 V164
0x2a6: V171 = 0x40
0x2a8: V172 = M[0x40]
0x2ab: V173 = SUB V170 V172
0x2ad: RETURN V172 V173
---
Entry stack: [V11, 0x26c, V328]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x26c]

================================

Block 0x2ae
[0x2ae:0x2b4]
---
Predecessors: [0x57]
Successors: [0x2b5, 0x2b9]
---
0x2ae JUMPDEST
0x2af CALLVALUE
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2ae: JUMPDEST 
0x2af: V174 = CALLVALUE
0x2b0: V175 = ISZERO V174
0x2b1: V176 = 0x2b9
0x2b4: JUMPI 0x2b9 V175
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2ae]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V177 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b9
[0x2b9:0x2e4]
---
Predecessors: [0x2ae]
Successors: [0x52a]
---
0x2b9 JUMPDEST
0x2ba PUSH2 0x2e5
0x2bd PUSH1 0x4
0x2bf DUP1
0x2c0 DUP1
0x2c1 CALLDATALOAD
0x2c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d7 AND
0x2d8 SWAP1
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc SWAP1
0x2dd SWAP2
0x2de SWAP1
0x2df POP
0x2e0 POP
0x2e1 PUSH2 0x52a
0x2e4 JUMP
---
0x2b9: JUMPDEST 
0x2ba: V178 = 0x2e5
0x2bd: V179 = 0x4
0x2c1: V180 = CALLDATALOAD 0x4
0x2c2: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x2d9: V183 = 0x20
0x2db: V184 = ADD 0x20 0x4
0x2e1: V185 = 0x52a
0x2e4: JUMP 0x52a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2e5, V182]
Exit stack: [V11, 0x2e5, V182]

================================

Block 0x2e5
[0x2e5:0x2e6]
---
Predecessors: [0x52a]
Successors: []
---
0x2e5 JUMPDEST
0x2e6 STOP
---
0x2e5: JUMPDEST 
0x2e6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e7
[0x2e7:0x2ed]
---
Predecessors: [0x62]
Successors: [0x2ee, 0x2f2]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V186 = CALLVALUE
0x2e9: V187 = ISZERO V186
0x2ea: V188 = 0x2f2
0x2ed: JUMPI 0x2f2 V187
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V189 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f2
[0x2f2:0x2f9]
---
Predecessors: [0x2e7]
Successors: [0x56e]
---
0x2f2 JUMPDEST
0x2f3 PUSH2 0x2fa
0x2f6 PUSH2 0x56e
0x2f9 JUMP
---
0x2f2: JUMPDEST 
0x2f3: V190 = 0x2fa
0x2f6: V191 = 0x56e
0x2f9: JUMP 0x56e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2fa]
Exit stack: [V11, 0x2fa]

================================

Block 0x2fa
[0x2fa:0x33b]
---
Predecessors: [0x56e]
Successors: []
---
0x2fa JUMPDEST
0x2fb PUSH1 0x40
0x2fd MLOAD
0x2fe DUP1
0x2ff DUP3
0x300 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x315 AND
0x316 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32b AND
0x32c DUP2
0x32d MSTORE
0x32e PUSH1 0x20
0x330 ADD
0x331 SWAP2
0x332 POP
0x333 POP
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 SWAP2
0x339 SUB
0x33a SWAP1
0x33b RETURN
---
0x2fa: JUMPDEST 
0x2fb: V192 = 0x40
0x2fd: V193 = M[0x40]
0x300: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x315: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x316: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x32d: M[V193] = V197
0x32e: V198 = 0x20
0x330: V199 = ADD 0x20 V193
0x334: V200 = 0x40
0x336: V201 = M[0x40]
0x339: V202 = SUB V199 V201
0x33b: RETURN V201 V202
---
Entry stack: [V11, 0x2fa, V348]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2fa]

================================

Block 0x33c
[0x33c:0x343]
---
Predecessors: [0x6d]
Successors: [0x593]
---
0x33c JUMPDEST
0x33d PUSH2 0x344
0x340 PUSH2 0x593
0x343 JUMP
---
0x33c: JUMPDEST 
0x33d: V203 = 0x344
0x340: V204 = 0x593
0x343: JUMP 0x593
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x344]
Exit stack: [V11, 0x344]

================================

Block 0x344
[0x344:0x345]
---
Predecessors: [0x8f1]
Successors: []
---
0x344 JUMPDEST
0x345 STOP
---
0x344: JUMPDEST 
0x345: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x346
[0x346:0x3b4]
---
Predecessors: [0x78]
Successors: [0x8f4]
---
0x346 JUMPDEST
0x347 PUSH2 0x3b5
0x34a PUSH1 0x4
0x34c DUP1
0x34d DUP1
0x34e CALLDATALOAD
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 SWAP1
0x366 PUSH1 0x20
0x368 ADD
0x369 SWAP1
0x36a SWAP2
0x36b SWAP1
0x36c DUP1
0x36d CALLDATALOAD
0x36e SWAP1
0x36f PUSH1 0x20
0x371 ADD
0x372 SWAP1
0x373 DUP3
0x374 ADD
0x375 DUP1
0x376 CALLDATALOAD
0x377 SWAP1
0x378 PUSH1 0x20
0x37a ADD
0x37b SWAP1
0x37c DUP1
0x37d DUP1
0x37e PUSH1 0x1f
0x380 ADD
0x381 PUSH1 0x20
0x383 DUP1
0x384 SWAP2
0x385 DIV
0x386 MUL
0x387 PUSH1 0x20
0x389 ADD
0x38a PUSH1 0x40
0x38c MLOAD
0x38d SWAP1
0x38e DUP2
0x38f ADD
0x390 PUSH1 0x40
0x392 MSTORE
0x393 DUP1
0x394 SWAP4
0x395 SWAP3
0x396 SWAP2
0x397 SWAP1
0x398 DUP2
0x399 DUP2
0x39a MSTORE
0x39b PUSH1 0x20
0x39d ADD
0x39e DUP4
0x39f DUP4
0x3a0 DUP1
0x3a1 DUP3
0x3a2 DUP5
0x3a3 CALLDATACOPY
0x3a4 DUP3
0x3a5 ADD
0x3a6 SWAP2
0x3a7 POP
0x3a8 POP
0x3a9 POP
0x3aa POP
0x3ab POP
0x3ac POP
0x3ad SWAP2
0x3ae SWAP1
0x3af POP
0x3b0 POP
0x3b1 PUSH2 0x8f4
0x3b4 JUMP
---
0x346: JUMPDEST 
0x347: V205 = 0x3b5
0x34a: V206 = 0x4
0x34e: V207 = CALLDATALOAD 0x4
0x34f: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x366: V210 = 0x20
0x368: V211 = ADD 0x20 0x4
0x36d: V212 = CALLDATALOAD 0x24
0x36f: V213 = 0x20
0x371: V214 = ADD 0x20 0x24
0x374: V215 = ADD 0x4 V212
0x376: V216 = CALLDATALOAD V215
0x378: V217 = 0x20
0x37a: V218 = ADD 0x20 V215
0x37e: V219 = 0x1f
0x380: V220 = ADD 0x1f V216
0x381: V221 = 0x20
0x385: V222 = DIV V220 0x20
0x386: V223 = MUL V222 0x20
0x387: V224 = 0x20
0x389: V225 = ADD 0x20 V223
0x38a: V226 = 0x40
0x38c: V227 = M[0x40]
0x38f: V228 = ADD V227 V225
0x390: V229 = 0x40
0x392: M[0x40] = V228
0x39a: M[V227] = V216
0x39b: V230 = 0x20
0x39d: V231 = ADD 0x20 V227
0x3a3: CALLDATACOPY V231 V218 V216
0x3a5: V232 = ADD V231 V216
0x3b1: V233 = 0x8f4
0x3b4: JUMP 0x8f4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3b5, V209, V227]
Exit stack: [V11, 0x3b5, V209, V227]

================================

Block 0x3b5
[0x3b5:0x3b6]
---
Predecessors: [0x9e3]
Successors: []
---
0x3b5 JUMPDEST
0x3b6 STOP
---
0x3b5: JUMPDEST 
0x3b6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b7
[0x3b7:0x3be]
---
Predecessors: [0x83]
Successors: [0x9e7]
---
0x3b7 JUMPDEST
0x3b8 PUSH2 0x3bf
0x3bb PUSH2 0x9e7
0x3be JUMP
---
0x3b7: JUMPDEST 
0x3b8: V234 = 0x3bf
0x3bb: V235 = 0x9e7
0x3be: JUMP 0x9e7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3bf]
Exit stack: [V11, 0x3bf]

================================

Block 0x3bf
[0x3bf:0x3c0]
---
Predecessors: [0xa99]
Successors: []
---
0x3bf JUMPDEST
0x3c0 STOP
---
0x3bf: JUMPDEST 
0x3c0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c1
[0x3c1:0x3c7]
---
Predecessors: [0x8e]
Successors: [0x3c8, 0x3cc]
---
0x3c1 JUMPDEST
0x3c2 CALLVALUE
0x3c3 ISZERO
0x3c4 PUSH2 0x3cc
0x3c7 JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V236 = CALLVALUE
0x3c3: V237 = ISZERO V236
0x3c4: V238 = 0x3cc
0x3c7: JUMPI 0x3cc V237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c8
[0x3c8:0x3cb]
---
Predecessors: [0x3c1]
Successors: []
---
0x3c8 PUSH1 0x0
0x3ca DUP1
0x3cb REVERT
---
0x3c8: V239 = 0x0
0x3cb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cc
[0x3cc:0x3d3]
---
Predecessors: [0x3c1]
Successors: [0xa9b]
---
0x3cc JUMPDEST
0x3cd PUSH2 0x3d4
0x3d0 PUSH2 0xa9b
0x3d3 JUMP
---
0x3cc: JUMPDEST 
0x3cd: V240 = 0x3d4
0x3d0: V241 = 0xa9b
0x3d3: JUMP 0xa9b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3d4]
Exit stack: [V11, 0x3d4]

================================

Block 0x3d4
[0x3d4:0x3ed]
---
Predecessors: [0xa9b]
Successors: []
---
0x3d4 JUMPDEST
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 DUP1
0x3d9 DUP3
0x3da ISZERO
0x3db ISZERO
0x3dc ISZERO
0x3dd ISZERO
0x3de DUP2
0x3df MSTORE
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 SWAP2
0x3e4 POP
0x3e5 POP
0x3e6 PUSH1 0x40
0x3e8 MLOAD
0x3e9 DUP1
0x3ea SWAP2
0x3eb SUB
0x3ec SWAP1
0x3ed RETURN
---
0x3d4: JUMPDEST 
0x3d5: V242 = 0x40
0x3d7: V243 = M[0x40]
0x3da: V244 = ISZERO V631
0x3db: V245 = ISZERO V244
0x3dc: V246 = ISZERO V245
0x3dd: V247 = ISZERO V246
0x3df: M[V243] = V247
0x3e0: V248 = 0x20
0x3e2: V249 = ADD 0x20 V243
0x3e6: V250 = 0x40
0x3e8: V251 = M[0x40]
0x3eb: V252 = SUB V249 V251
0x3ed: RETURN V251 V252
---
Entry stack: [V11, 0x3d4, V631]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3d4]

================================

Block 0x3ee
[0x3ee:0x40c]
---
Predecessors: [0x1c1]
Successors: [0x1c9]
---
0x3ee JUMPDEST
0x3ef PUSH1 0x0
0x3f1 ADDRESS
0x3f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x407 AND
0x408 BALANCE
0x409 SWAP1
0x40a POP
0x40b SWAP1
0x40c JUMP
---
0x3ee: JUMPDEST 
0x3ef: V253 = 0x0
0x3f1: V254 = ADDRESS
0x3f2: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x407: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x408: V257 = BALANCE V256
0x40c: JUMP 0x1c9
---
Entry stack: [V11, 0x1c9]
Stack pops: 1
Stack additions: [V257]
Exit stack: [V11, V257]

================================

Block 0x40d
[0x40d:0x463]
---
Predecessors: [0x1df]
Successors: [0x464, 0x468]
---
0x40d JUMPDEST
0x40e PUSH1 0x0
0x410 DUP1
0x411 SWAP1
0x412 SLOAD
0x413 SWAP1
0x414 PUSH2 0x100
0x417 EXP
0x418 SWAP1
0x419 DIV
0x41a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42f AND
0x430 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x445 AND
0x446 CALLER
0x447 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45c AND
0x45d EQ
0x45e ISZERO
0x45f ISZERO
0x460 PUSH2 0x468
0x463 JUMPI
---
0x40d: JUMPDEST 
0x40e: V258 = 0x0
0x412: V259 = S[0x0]
0x414: V260 = 0x100
0x417: V261 = EXP 0x100 0x0
0x419: V262 = DIV V259 0x1
0x41a: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x430: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x445: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x446: V267 = CALLER
0x447: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x45c: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x45d: V270 = EQ V269 V266
0x45e: V271 = ISZERO V270
0x45f: V272 = ISZERO V271
0x460: V273 = 0x468
0x463: JUMPI 0x468 V272
---
Entry stack: [V11, 0x257, V129, V132, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x257, V129, V132, V150]

================================

Block 0x464
[0x464:0x467]
---
Predecessors: [0x40d]
Successors: []
---
0x464 PUSH1 0x0
0x466 DUP1
0x467 REVERT
---
0x464: V274 = 0x0
0x467: REVERT 0x0 0x0
---
Entry stack: [V11, 0x257, V129, V132, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x257, V129, V132, V150]

================================

Block 0x468
[0x468:0x492]
---
Predecessors: [0x40d]
Successors: [0x493]
---
0x468 JUMPDEST
0x469 DUP3
0x46a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47f AND
0x480 DUP3
0x481 DUP3
0x482 PUSH1 0x40
0x484 MLOAD
0x485 DUP1
0x486 DUP3
0x487 DUP1
0x488 MLOAD
0x489 SWAP1
0x48a PUSH1 0x20
0x48c ADD
0x48d SWAP1
0x48e DUP1
0x48f DUP4
0x490 DUP4
0x491 PUSH1 0x0
---
0x468: JUMPDEST 
0x46a: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x482: V277 = 0x40
0x484: V278 = M[0x40]
0x488: V279 = M[V150]
0x48a: V280 = 0x20
0x48c: V281 = ADD 0x20 V150
0x491: V282 = 0x0
---
Entry stack: [V11, 0x257, V129, V132, V150]
Stack pops: 3
Stack additions: [S2, S1, S0, V276, S1, S0, V278, V278, V281, V279, V279, V278, V281, 0x0]
Exit stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, V278, V281, V279, V279, V278, V281, 0x0]

================================

Block 0x493
[0x493:0x49b]
---
Predecessors: [0x468, 0x49c]
Successors: [0x49c, 0x4ae]
---
0x493 JUMPDEST
0x494 DUP4
0x495 DUP2
0x496 LT
0x497 ISZERO
0x498 PUSH2 0x4ae
0x49b JUMPI
---
0x493: JUMPDEST 
0x496: V283 = LT S0 V279
0x497: V284 = ISZERO V283
0x498: V285 = 0x4ae
0x49b: JUMPI 0x4ae V284
---
Entry stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, V278, V281, V279, V279, V278, V281, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, V278, V281, V279, V279, V278, V281, S0]

================================

Block 0x49c
[0x49c:0x4ad]
---
Predecessors: [0x493]
Successors: [0x493]
---
0x49c DUP1
0x49d DUP3
0x49e ADD
0x49f MLOAD
0x4a0 DUP2
0x4a1 DUP5
0x4a2 ADD
0x4a3 MSTORE
0x4a4 PUSH1 0x20
0x4a6 DUP2
0x4a7 ADD
0x4a8 SWAP1
0x4a9 POP
0x4aa PUSH2 0x493
0x4ad JUMP
---
0x49e: V286 = ADD V281 S0
0x49f: V287 = M[V286]
0x4a2: V288 = ADD V278 S0
0x4a3: M[V288] = V287
0x4a4: V289 = 0x20
0x4a7: V290 = ADD S0 0x20
0x4aa: V291 = 0x493
0x4ad: JUMP 0x493
---
Entry stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, V278, V281, V279, V279, V278, V281, S0]
Stack pops: 3
Stack additions: [S2, S1, V290]
Exit stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, V278, V281, V279, V279, V278, V281, V290]

================================

Block 0x4ae
[0x4ae:0x4c1]
---
Predecessors: [0x493]
Successors: [0x4c2, 0x4db]
---
0x4ae JUMPDEST
0x4af POP
0x4b0 POP
0x4b1 POP
0x4b2 POP
0x4b3 SWAP1
0x4b4 POP
0x4b5 SWAP1
0x4b6 DUP2
0x4b7 ADD
0x4b8 SWAP1
0x4b9 PUSH1 0x1f
0x4bb AND
0x4bc DUP1
0x4bd ISZERO
0x4be PUSH2 0x4db
0x4c1 JUMPI
---
0x4ae: JUMPDEST 
0x4b7: V292 = ADD V279 V278
0x4b9: V293 = 0x1f
0x4bb: V294 = AND 0x1f V279
0x4bd: V295 = ISZERO V294
0x4be: V296 = 0x4db
0x4c1: JUMPI 0x4db V295
---
Entry stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, V278, V281, V279, V279, V278, V281, S0]
Stack pops: 7
Stack additions: [V292, V294]
Exit stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, V292, V294]

================================

Block 0x4c2
[0x4c2:0x4da]
---
Predecessors: [0x4ae]
Successors: [0x4db]
---
0x4c2 DUP1
0x4c3 DUP3
0x4c4 SUB
0x4c5 DUP1
0x4c6 MLOAD
0x4c7 PUSH1 0x1
0x4c9 DUP4
0x4ca PUSH1 0x20
0x4cc SUB
0x4cd PUSH2 0x100
0x4d0 EXP
0x4d1 SUB
0x4d2 NOT
0x4d3 AND
0x4d4 DUP2
0x4d5 MSTORE
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 SWAP2
0x4da POP
---
0x4c4: V297 = SUB V292 V294
0x4c6: V298 = M[V297]
0x4c7: V299 = 0x1
0x4ca: V300 = 0x20
0x4cc: V301 = SUB 0x20 V294
0x4cd: V302 = 0x100
0x4d0: V303 = EXP 0x100 V301
0x4d1: V304 = SUB V303 0x1
0x4d2: V305 = NOT V304
0x4d3: V306 = AND V305 V298
0x4d5: M[V297] = V306
0x4d6: V307 = 0x20
0x4d8: V308 = ADD 0x20 V297
---
Entry stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, V292, V294]
Stack pops: 2
Stack additions: [V308, S0]
Exit stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, V308, V294]

================================

Block 0x4db
[0x4db:0x4fa]
---
Predecessors: [0x4ae, 0x4c2]
Successors: [0x4fb, 0x4ff]
---
0x4db JUMPDEST
0x4dc POP
0x4dd SWAP2
0x4de POP
0x4df POP
0x4e0 PUSH1 0x0
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 DUP1
0x4e6 DUP4
0x4e7 SUB
0x4e8 DUP2
0x4e9 DUP6
0x4ea DUP8
0x4eb PUSH2 0x8796
0x4ee GAS
0x4ef SUB
0x4f0 CALL
0x4f1 SWAP3
0x4f2 POP
0x4f3 POP
0x4f4 POP
0x4f5 ISZERO
0x4f6 ISZERO
0x4f7 PUSH2 0x4ff
0x4fa JUMPI
---
0x4db: JUMPDEST 
0x4e0: V309 = 0x0
0x4e2: V310 = 0x40
0x4e4: V311 = M[0x40]
0x4e7: V312 = SUB S1 V311
0x4eb: V313 = 0x8796
0x4ee: V314 = GAS
0x4ef: V315 = SUB V314 0x8796
0x4f0: V316 = CALL V315 V276 V132 V311 V312 V311 0x0
0x4f5: V317 = ISZERO V316
0x4f6: V318 = ISZERO V317
0x4f7: V319 = 0x4ff
0x4fa: JUMPI 0x4ff V318
---
Entry stack: [V11, 0x257, V129, V132, V150, V276, V132, V150, V278, S1, V294]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x257, V129, V132, V150]

================================

Block 0x4fb
[0x4fb:0x4fe]
---
Predecessors: [0x4db]
Successors: []
---
0x4fb PUSH1 0x0
0x4fd DUP1
0x4fe REVERT
---
0x4fb: V320 = 0x0
0x4fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0x257, V129, V132, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x257, V129, V132, V150]

================================

Block 0x4ff
[0x4ff:0x503]
---
Predecessors: [0x4db]
Successors: [0x257]
---
0x4ff JUMPDEST
0x500 POP
0x501 POP
0x502 POP
0x503 JUMP
---
0x4ff: JUMPDEST 
0x503: JUMP 0x257
---
Entry stack: [V11, 0x257, V129, V132, V150]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x504
[0x504:0x529]
---
Predecessors: [0x264]
Successors: [0x26c]
---
0x504 JUMPDEST
0x505 PUSH1 0x1
0x507 PUSH1 0x0
0x509 SWAP1
0x50a SLOAD
0x50b SWAP1
0x50c PUSH2 0x100
0x50f EXP
0x510 SWAP1
0x511 DIV
0x512 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x527 AND
0x528 DUP2
0x529 JUMP
---
0x504: JUMPDEST 
0x505: V321 = 0x1
0x507: V322 = 0x0
0x50a: V323 = S[0x1]
0x50c: V324 = 0x100
0x50f: V325 = EXP 0x100 0x0
0x511: V326 = DIV V323 0x1
0x512: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x527: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x529: JUMP 0x26c
---
Entry stack: [V11, 0x26c]
Stack pops: 1
Stack additions: [S0, V328]
Exit stack: [V11, 0x26c, V328]

================================

Block 0x52a
[0x52a:0x56d]
---
Predecessors: [0x2b9]
Successors: [0x2e5]
---
0x52a JUMPDEST
0x52b DUP1
0x52c PUSH1 0x1
0x52e PUSH1 0x0
0x530 PUSH2 0x100
0x533 EXP
0x534 DUP2
0x535 SLOAD
0x536 DUP2
0x537 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54c MUL
0x54d NOT
0x54e AND
0x54f SWAP1
0x550 DUP4
0x551 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x566 AND
0x567 MUL
0x568 OR
0x569 SWAP1
0x56a SSTORE
0x56b POP
0x56c POP
0x56d JUMP
---
0x52a: JUMPDEST 
0x52c: V329 = 0x1
0x52e: V330 = 0x0
0x530: V331 = 0x100
0x533: V332 = EXP 0x100 0x0
0x535: V333 = S[0x1]
0x537: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V335 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x54d: V336 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x54e: V337 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V333
0x551: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x566: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x567: V340 = MUL V339 0x1
0x568: V341 = OR V340 V337
0x56a: S[0x1] = V341
0x56d: JUMP 0x2e5
---
Entry stack: [V11, 0x2e5, V182]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x56e
[0x56e:0x592]
---
Predecessors: [0x2f2]
Successors: [0x2fa]
---
0x56e JUMPDEST
0x56f PUSH1 0x0
0x571 DUP1
0x572 SWAP1
0x573 SLOAD
0x574 SWAP1
0x575 PUSH2 0x100
0x578 EXP
0x579 SWAP1
0x57a DIV
0x57b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x590 AND
0x591 DUP2
0x592 JUMP
---
0x56e: JUMPDEST 
0x56f: V342 = 0x0
0x573: V343 = S[0x0]
0x575: V344 = 0x100
0x578: V345 = EXP 0x100 0x0
0x57a: V346 = DIV V343 0x1
0x57b: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x590: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x592: JUMP 0x2fa
---
Entry stack: [V11, 0x2fa]
Stack pops: 1
Stack additions: [S0, V348]
Exit stack: [V11, 0x2fa, V348]

================================

Block 0x593
[0x593:0x8ec]
---
Predecessors: [0x33c]
Successors: [0x8ed, 0x8f1]
---
0x593 JUMPDEST
0x594 PUSH1 0x0
0x596 ADDRESS
0x597 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ac AND
0x5ad BALANCE
0x5ae SWAP1
0x5af POP
0x5b0 PUSH1 0x0
0x5b2 PUSH1 0x1
0x5b4 PUSH1 0x14
0x5b6 PUSH2 0x100
0x5b9 EXP
0x5ba DUP2
0x5bb SLOAD
0x5bc DUP2
0x5bd PUSH1 0xff
0x5bf MUL
0x5c0 NOT
0x5c1 AND
0x5c2 SWAP1
0x5c3 DUP4
0x5c4 ISZERO
0x5c5 ISZERO
0x5c6 MUL
0x5c7 OR
0x5c8 SWAP1
0x5c9 SSTORE
0x5ca POP
0x5cb PUSH1 0x1
0x5cd PUSH1 0x0
0x5cf SWAP1
0x5d0 SLOAD
0x5d1 SWAP1
0x5d2 PUSH2 0x100
0x5d5 EXP
0x5d6 SWAP1
0x5d7 DIV
0x5d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ed AND
0x5ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x603 AND
0x604 PUSH8 0xde0b6b3a7640000
0x60d PUSH1 0x40
0x60f MLOAD
0x610 DUP1
0x611 DUP1
0x612 PUSH32 0x4465706f73697428290000000000000000000000000000000000000000000000
0x633 DUP2
0x634 MSTORE
0x635 POP
0x636 PUSH1 0x9
0x638 ADD
0x639 SWAP1
0x63a POP
0x63b PUSH1 0x40
0x63d MLOAD
0x63e DUP1
0x63f SWAP2
0x640 SUB
0x641 SWAP1
0x642 SHA3
0x643 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x661 SWAP1
0x662 DIV
0x663 SWAP1
0x664 PUSH1 0x40
0x666 MLOAD
0x667 DUP3
0x668 PUSH4 0xffffffff
0x66d AND
0x66e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x68c MUL
0x68d DUP2
0x68e MSTORE
0x68f PUSH1 0x4
0x691 ADD
0x692 PUSH1 0x0
0x694 PUSH1 0x40
0x696 MLOAD
0x697 DUP1
0x698 DUP4
0x699 SUB
0x69a DUP2
0x69b DUP6
0x69c DUP9
0x69d PUSH2 0x8796
0x6a0 GAS
0x6a1 SUB
0x6a2 CALL
0x6a3 SWAP4
0x6a4 POP
0x6a5 POP
0x6a6 POP
0x6a7 POP
0x6a8 POP
0x6a9 PUSH1 0x1
0x6ab DUP1
0x6ac PUSH1 0x14
0x6ae PUSH2 0x100
0x6b1 EXP
0x6b2 DUP2
0x6b3 SLOAD
0x6b4 DUP2
0x6b5 PUSH1 0xff
0x6b7 MUL
0x6b8 NOT
0x6b9 AND
0x6ba SWAP1
0x6bb DUP4
0x6bc ISZERO
0x6bd ISZERO
0x6be MUL
0x6bf OR
0x6c0 SWAP1
0x6c1 SSTORE
0x6c2 POP
0x6c3 PUSH1 0x1
0x6c5 PUSH1 0x0
0x6c7 SWAP1
0x6c8 SLOAD
0x6c9 SWAP1
0x6ca PUSH2 0x100
0x6cd EXP
0x6ce SWAP1
0x6cf DIV
0x6d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e5 AND
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc PUSH1 0x40
0x6fe MLOAD
0x6ff DUP1
0x700 DUP1
0x701 PUSH32 0x436173684f75742875696e743235362900000000000000000000000000000000
0x722 DUP2
0x723 MSTORE
0x724 POP
0x725 PUSH1 0x10
0x727 ADD
0x728 SWAP1
0x729 POP
0x72a PUSH1 0x40
0x72c MLOAD
0x72d DUP1
0x72e SWAP2
0x72f SUB
0x730 SWAP1
0x731 SHA3
0x732 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x750 SWAP1
0x751 DIV
0x752 PUSH8 0xde0b6b3a7640000
0x75b PUSH1 0x40
0x75d MLOAD
0x75e DUP3
0x75f PUSH4 0xffffffff
0x764 AND
0x765 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x783 MUL
0x784 DUP2
0x785 MSTORE
0x786 PUSH1 0x4
0x788 ADD
0x789 DUP1
0x78a DUP3
0x78b PUSH8 0xffffffffffffffff
0x794 AND
0x795 DUP2
0x796 MSTORE
0x797 PUSH1 0x20
0x799 ADD
0x79a SWAP2
0x79b POP
0x79c POP
0x79d PUSH1 0x0
0x79f PUSH1 0x40
0x7a1 MLOAD
0x7a2 DUP1
0x7a3 DUP4
0x7a4 SUB
0x7a5 DUP2
0x7a6 PUSH1 0x0
0x7a8 DUP8
0x7a9 PUSH2 0x646e
0x7ac GAS
0x7ad SUB
0x7ae CALL
0x7af SWAP3
0x7b0 POP
0x7b1 POP
0x7b2 POP
0x7b3 POP
0x7b4 PUSH1 0x1
0x7b6 PUSH1 0x0
0x7b8 SWAP1
0x7b9 SLOAD
0x7ba SWAP1
0x7bb PUSH2 0x100
0x7be EXP
0x7bf SWAP1
0x7c0 DIV
0x7c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d6 AND
0x7d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ec AND
0x7ed PUSH1 0x40
0x7ef MLOAD
0x7f0 DUP1
0x7f1 DUP1
0x7f2 PUSH32 0x436173684f75742875696e743235362900000000000000000000000000000000
0x813 DUP2
0x814 MSTORE
0x815 POP
0x816 PUSH1 0x10
0x818 ADD
0x819 SWAP1
0x81a POP
0x81b PUSH1 0x40
0x81d MLOAD
0x81e DUP1
0x81f SWAP2
0x820 SUB
0x821 SWAP1
0x822 SHA3
0x823 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x841 SWAP1
0x842 DIV
0x843 PUSH1 0x1
0x845 PUSH1 0x0
0x847 SWAP1
0x848 SLOAD
0x849 SWAP1
0x84a PUSH2 0x100
0x84d EXP
0x84e SWAP1
0x84f DIV
0x850 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x865 AND
0x866 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87b AND
0x87c BALANCE
0x87d PUSH1 0x40
0x87f MLOAD
0x880 DUP3
0x881 PUSH4 0xffffffff
0x886 AND
0x887 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8a5 MUL
0x8a6 DUP2
0x8a7 MSTORE
0x8a8 PUSH1 0x4
0x8aa ADD
0x8ab DUP1
0x8ac DUP3
0x8ad DUP2
0x8ae MSTORE
0x8af PUSH1 0x20
0x8b1 ADD
0x8b2 SWAP2
0x8b3 POP
0x8b4 POP
0x8b5 PUSH1 0x0
0x8b7 PUSH1 0x40
0x8b9 MLOAD
0x8ba DUP1
0x8bb DUP4
0x8bc SUB
0x8bd DUP2
0x8be PUSH1 0x0
0x8c0 DUP8
0x8c1 PUSH2 0x646e
0x8c4 GAS
0x8c5 SUB
0x8c6 CALL
0x8c7 SWAP3
0x8c8 POP
0x8c9 POP
0x8ca POP
0x8cb POP
0x8cc DUP1
0x8cd ADDRESS
0x8ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e3 AND
0x8e4 BALANCE
0x8e5 LT
0x8e6 ISZERO
0x8e7 ISZERO
0x8e8 ISZERO
0x8e9 PUSH2 0x8f1
0x8ec JUMPI
---
0x593: JUMPDEST 
0x594: V349 = 0x0
0x596: V350 = ADDRESS
0x597: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x5ad: V353 = BALANCE V352
0x5b0: V354 = 0x0
0x5b2: V355 = 0x1
0x5b4: V356 = 0x14
0x5b6: V357 = 0x100
0x5b9: V358 = EXP 0x100 0x14
0x5bb: V359 = S[0x1]
0x5bd: V360 = 0xff
0x5bf: V361 = MUL 0xff 0x10000000000000000000000000000000000000000
0x5c0: V362 = NOT 0xff0000000000000000000000000000000000000000
0x5c1: V363 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V359
0x5c4: V364 = ISZERO 0x0
0x5c5: V365 = ISZERO 0x1
0x5c6: V366 = MUL 0x0 0x10000000000000000000000000000000000000000
0x5c7: V367 = OR 0x0 V363
0x5c9: S[0x1] = V367
0x5cb: V368 = 0x1
0x5cd: V369 = 0x0
0x5d0: V370 = S[0x1]
0x5d2: V371 = 0x100
0x5d5: V372 = EXP 0x100 0x0
0x5d7: V373 = DIV V370 0x1
0x5d8: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ed: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x5ee: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x603: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x604: V378 = 0xde0b6b3a7640000
0x60d: V379 = 0x40
0x60f: V380 = M[0x40]
0x612: V381 = 0x4465706f73697428290000000000000000000000000000000000000000000000
0x634: M[V380] = 0x4465706f73697428290000000000000000000000000000000000000000000000
0x636: V382 = 0x9
0x638: V383 = ADD 0x9 V380
0x63b: V384 = 0x40
0x63d: V385 = M[0x40]
0x640: V386 = SUB V383 V385
0x642: V387 = SHA3 V385 V386
0x643: V388 = 0x100000000000000000000000000000000000000000000000000000000
0x662: V389 = DIV V387 0x100000000000000000000000000000000000000000000000000000000
0x664: V390 = 0x40
0x666: V391 = M[0x40]
0x668: V392 = 0xffffffff
0x66d: V393 = AND 0xffffffff V389
0x66e: V394 = 0x100000000000000000000000000000000000000000000000000000000
0x68c: V395 = MUL 0x100000000000000000000000000000000000000000000000000000000 V393
0x68e: M[V391] = V395
0x68f: V396 = 0x4
0x691: V397 = ADD 0x4 V391
0x692: V398 = 0x0
0x694: V399 = 0x40
0x696: V400 = M[0x40]
0x699: V401 = SUB V397 V400
0x69d: V402 = 0x8796
0x6a0: V403 = GAS
0x6a1: V404 = SUB V403 0x8796
0x6a2: V405 = CALL V404 V377 0xde0b6b3a7640000 V400 V401 V400 0x0
0x6a9: V406 = 0x1
0x6ac: V407 = 0x14
0x6ae: V408 = 0x100
0x6b1: V409 = EXP 0x100 0x14
0x6b3: V410 = S[0x1]
0x6b5: V411 = 0xff
0x6b7: V412 = MUL 0xff 0x10000000000000000000000000000000000000000
0x6b8: V413 = NOT 0xff0000000000000000000000000000000000000000
0x6b9: V414 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V410
0x6bc: V415 = ISZERO 0x1
0x6bd: V416 = ISZERO 0x0
0x6be: V417 = MUL 0x1 0x10000000000000000000000000000000000000000
0x6bf: V418 = OR 0x10000000000000000000000000000000000000000 V414
0x6c1: S[0x1] = V418
0x6c3: V419 = 0x1
0x6c5: V420 = 0x0
0x6c8: V421 = S[0x1]
0x6ca: V422 = 0x100
0x6cd: V423 = EXP 0x100 0x0
0x6cf: V424 = DIV V421 0x1
0x6d0: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e5: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x6e6: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x6fc: V429 = 0x40
0x6fe: V430 = M[0x40]
0x701: V431 = 0x436173684f75742875696e743235362900000000000000000000000000000000
0x723: M[V430] = 0x436173684f75742875696e743235362900000000000000000000000000000000
0x725: V432 = 0x10
0x727: V433 = ADD 0x10 V430
0x72a: V434 = 0x40
0x72c: V435 = M[0x40]
0x72f: V436 = SUB V433 V435
0x731: V437 = SHA3 V435 V436
0x732: V438 = 0x100000000000000000000000000000000000000000000000000000000
0x751: V439 = DIV V437 0x100000000000000000000000000000000000000000000000000000000
0x752: V440 = 0xde0b6b3a7640000
0x75b: V441 = 0x40
0x75d: V442 = M[0x40]
0x75f: V443 = 0xffffffff
0x764: V444 = AND 0xffffffff V439
0x765: V445 = 0x100000000000000000000000000000000000000000000000000000000
0x783: V446 = MUL 0x100000000000000000000000000000000000000000000000000000000 V444
0x785: M[V442] = V446
0x786: V447 = 0x4
0x788: V448 = ADD 0x4 V442
0x78b: V449 = 0xffffffffffffffff
0x794: V450 = AND 0xffffffffffffffff 0xde0b6b3a7640000
0x796: M[V448] = 0xde0b6b3a7640000
0x797: V451 = 0x20
0x799: V452 = ADD 0x20 V448
0x79d: V453 = 0x0
0x79f: V454 = 0x40
0x7a1: V455 = M[0x40]
0x7a4: V456 = SUB V452 V455
0x7a6: V457 = 0x0
0x7a9: V458 = 0x646e
0x7ac: V459 = GAS
0x7ad: V460 = SUB V459 0x646e
0x7ae: V461 = CALL V460 V428 0x0 V455 V456 V455 0x0
0x7b4: V462 = 0x1
0x7b6: V463 = 0x0
0x7b9: V464 = S[0x1]
0x7bb: V465 = 0x100
0x7be: V466 = EXP 0x100 0x0
0x7c0: V467 = DIV V464 0x1
0x7c1: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d6: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x7d7: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ec: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x7ed: V472 = 0x40
0x7ef: V473 = M[0x40]
0x7f2: V474 = 0x436173684f75742875696e743235362900000000000000000000000000000000
0x814: M[V473] = 0x436173684f75742875696e743235362900000000000000000000000000000000
0x816: V475 = 0x10
0x818: V476 = ADD 0x10 V473
0x81b: V477 = 0x40
0x81d: V478 = M[0x40]
0x820: V479 = SUB V476 V478
0x822: V480 = SHA3 V478 V479
0x823: V481 = 0x100000000000000000000000000000000000000000000000000000000
0x842: V482 = DIV V480 0x100000000000000000000000000000000000000000000000000000000
0x843: V483 = 0x1
0x845: V484 = 0x0
0x848: V485 = S[0x1]
0x84a: V486 = 0x100
0x84d: V487 = EXP 0x100 0x0
0x84f: V488 = DIV V485 0x1
0x850: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x865: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x866: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x87b: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x87c: V493 = BALANCE V492
0x87d: V494 = 0x40
0x87f: V495 = M[0x40]
0x881: V496 = 0xffffffff
0x886: V497 = AND 0xffffffff V482
0x887: V498 = 0x100000000000000000000000000000000000000000000000000000000
0x8a5: V499 = MUL 0x100000000000000000000000000000000000000000000000000000000 V497
0x8a7: M[V495] = V499
0x8a8: V500 = 0x4
0x8aa: V501 = ADD 0x4 V495
0x8ae: M[V501] = V493
0x8af: V502 = 0x20
0x8b1: V503 = ADD 0x20 V501
0x8b5: V504 = 0x0
0x8b7: V505 = 0x40
0x8b9: V506 = M[0x40]
0x8bc: V507 = SUB V503 V506
0x8be: V508 = 0x0
0x8c1: V509 = 0x646e
0x8c4: V510 = GAS
0x8c5: V511 = SUB V510 0x646e
0x8c6: V512 = CALL V511 V471 0x0 V506 V507 V506 0x0
0x8cd: V513 = ADDRESS
0x8ce: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e3: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x8e4: V516 = BALANCE V515
0x8e5: V517 = LT V516 V353
0x8e6: V518 = ISZERO V517
0x8e7: V519 = ISZERO V518
0x8e8: V520 = ISZERO V519
0x8e9: V521 = 0x8f1
0x8ec: JUMPI 0x8f1 V520
---
Entry stack: [V11, 0x344]
Stack pops: 0
Stack additions: [V353]
Exit stack: [V11, 0x344, V353]

================================

Block 0x8ed
[0x8ed:0x8f0]
---
Predecessors: [0x593]
Successors: []
---
0x8ed PUSH1 0x0
0x8ef DUP1
0x8f0 REVERT
---
0x8ed: V522 = 0x0
0x8f0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x344, V353]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x344, V353]

================================

Block 0x8f1
[0x8f1:0x8f3]
---
Predecessors: [0x593]
Successors: [0x344]
---
0x8f1 JUMPDEST
0x8f2 POP
0x8f3 JUMP
---
0x8f1: JUMPDEST 
0x8f3: JUMP 0x344
---
Entry stack: [V11, 0x344, V353]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f4
[0x8f4:0x94a]
---
Predecessors: [0x346]
Successors: [0x94b, 0x94f]
---
0x8f4 JUMPDEST
0x8f5 PUSH1 0x0
0x8f7 DUP1
0x8f8 SWAP1
0x8f9 SLOAD
0x8fa SWAP1
0x8fb PUSH2 0x100
0x8fe EXP
0x8ff SWAP1
0x900 DIV
0x901 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x916 AND
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c AND
0x92d CALLER
0x92e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x943 AND
0x944 EQ
0x945 ISZERO
0x946 ISZERO
0x947 PUSH2 0x94f
0x94a JUMPI
---
0x8f4: JUMPDEST 
0x8f5: V523 = 0x0
0x8f9: V524 = S[0x0]
0x8fb: V525 = 0x100
0x8fe: V526 = EXP 0x100 0x0
0x900: V527 = DIV V524 0x1
0x901: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x916: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x917: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x92d: V532 = CALLER
0x92e: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x943: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x944: V535 = EQ V534 V531
0x945: V536 = ISZERO V535
0x946: V537 = ISZERO V536
0x947: V538 = 0x94f
0x94a: JUMPI 0x94f V537
---
Entry stack: [V11, 0x3b5, V209, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b5, V209, V227]

================================

Block 0x94b
[0x94b:0x94e]
---
Predecessors: [0x8f4]
Successors: []
---
0x94b PUSH1 0x0
0x94d DUP1
0x94e REVERT
---
0x94b: V539 = 0x0
0x94e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3b5, V209, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b5, V209, V227]

================================

Block 0x94f
[0x94f:0x978]
---
Predecessors: [0x8f4]
Successors: [0x979]
---
0x94f JUMPDEST
0x950 DUP2
0x951 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x966 AND
0x967 DUP2
0x968 PUSH1 0x40
0x96a MLOAD
0x96b DUP1
0x96c DUP3
0x96d DUP1
0x96e MLOAD
0x96f SWAP1
0x970 PUSH1 0x20
0x972 ADD
0x973 SWAP1
0x974 DUP1
0x975 DUP4
0x976 DUP4
0x977 PUSH1 0x0
---
0x94f: JUMPDEST 
0x951: V540 = 0xffffffffffffffffffffffffffffffffffffffff
0x966: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x968: V542 = 0x40
0x96a: V543 = M[0x40]
0x96e: V544 = M[V227]
0x970: V545 = 0x20
0x972: V546 = ADD 0x20 V227
0x977: V547 = 0x0
---
Entry stack: [V11, 0x3b5, V209, V227]
Stack pops: 2
Stack additions: [S1, S0, V541, S0, V543, V543, V546, V544, V544, V543, V546, 0x0]
Exit stack: [V11, 0x3b5, V209, V227, V541, V227, V543, V543, V546, V544, V544, V543, V546, 0x0]

================================

Block 0x979
[0x979:0x981]
---
Predecessors: [0x94f, 0x982]
Successors: [0x982, 0x994]
---
0x979 JUMPDEST
0x97a DUP4
0x97b DUP2
0x97c LT
0x97d ISZERO
0x97e PUSH2 0x994
0x981 JUMPI
---
0x979: JUMPDEST 
0x97c: V548 = LT S0 V544
0x97d: V549 = ISZERO V548
0x97e: V550 = 0x994
0x981: JUMPI 0x994 V549
---
Entry stack: [V11, 0x3b5, V209, V227, V541, V227, V543, V543, V546, V544, V544, V543, V546, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x3b5, V209, V227, V541, V227, V543, V543, V546, V544, V544, V543, V546, S0]

================================

Block 0x982
[0x982:0x993]
---
Predecessors: [0x979]
Successors: [0x979]
---
0x982 DUP1
0x983 DUP3
0x984 ADD
0x985 MLOAD
0x986 DUP2
0x987 DUP5
0x988 ADD
0x989 MSTORE
0x98a PUSH1 0x20
0x98c DUP2
0x98d ADD
0x98e SWAP1
0x98f POP
0x990 PUSH2 0x979
0x993 JUMP
---
0x984: V551 = ADD V546 S0
0x985: V552 = M[V551]
0x988: V553 = ADD V543 S0
0x989: M[V553] = V552
0x98a: V554 = 0x20
0x98d: V555 = ADD S0 0x20
0x990: V556 = 0x979
0x993: JUMP 0x979
---
Entry stack: [V11, 0x3b5, V209, V227, V541, V227, V543, V543, V546, V544, V544, V543, V546, S0]
Stack pops: 3
Stack additions: [S2, S1, V555]
Exit stack: [V11, 0x3b5, V209, V227, V541, V227, V543, V543, V546, V544, V544, V543, V546, V555]

================================

Block 0x994
[0x994:0x9a7]
---
Predecessors: [0x979]
Successors: [0x9a8, 0x9c1]
---
0x994 JUMPDEST
0x995 POP
0x996 POP
0x997 POP
0x998 POP
0x999 SWAP1
0x99a POP
0x99b SWAP1
0x99c DUP2
0x99d ADD
0x99e SWAP1
0x99f PUSH1 0x1f
0x9a1 AND
0x9a2 DUP1
0x9a3 ISZERO
0x9a4 PUSH2 0x9c1
0x9a7 JUMPI
---
0x994: JUMPDEST 
0x99d: V557 = ADD V544 V543
0x99f: V558 = 0x1f
0x9a1: V559 = AND 0x1f V544
0x9a3: V560 = ISZERO V559
0x9a4: V561 = 0x9c1
0x9a7: JUMPI 0x9c1 V560
---
Entry stack: [V11, 0x3b5, V209, V227, V541, V227, V543, V543, V546, V544, V544, V543, V546, S0]
Stack pops: 7
Stack additions: [V557, V559]
Exit stack: [V11, 0x3b5, V209, V227, V541, V227, V543, V557, V559]

================================

Block 0x9a8
[0x9a8:0x9c0]
---
Predecessors: [0x994]
Successors: [0x9c1]
---
0x9a8 DUP1
0x9a9 DUP3
0x9aa SUB
0x9ab DUP1
0x9ac MLOAD
0x9ad PUSH1 0x1
0x9af DUP4
0x9b0 PUSH1 0x20
0x9b2 SUB
0x9b3 PUSH2 0x100
0x9b6 EXP
0x9b7 SUB
0x9b8 NOT
0x9b9 AND
0x9ba DUP2
0x9bb MSTORE
0x9bc PUSH1 0x20
0x9be ADD
0x9bf SWAP2
0x9c0 POP
---
0x9aa: V562 = SUB V557 V559
0x9ac: V563 = M[V562]
0x9ad: V564 = 0x1
0x9b0: V565 = 0x20
0x9b2: V566 = SUB 0x20 V559
0x9b3: V567 = 0x100
0x9b6: V568 = EXP 0x100 V566
0x9b7: V569 = SUB V568 0x1
0x9b8: V570 = NOT V569
0x9b9: V571 = AND V570 V563
0x9bb: M[V562] = V571
0x9bc: V572 = 0x20
0x9be: V573 = ADD 0x20 V562
---
Entry stack: [V11, 0x3b5, V209, V227, V541, V227, V543, V557, V559]
Stack pops: 2
Stack additions: [V573, S0]
Exit stack: [V11, 0x3b5, V209, V227, V541, V227, V543, V573, V559]

================================

Block 0x9c1
[0x9c1:0x9de]
---
Predecessors: [0x994, 0x9a8]
Successors: [0x9df, 0x9e3]
---
0x9c1 JUMPDEST
0x9c2 POP
0x9c3 SWAP2
0x9c4 POP
0x9c5 POP
0x9c6 PUSH1 0x0
0x9c8 PUSH1 0x40
0x9ca MLOAD
0x9cb DUP1
0x9cc DUP4
0x9cd SUB
0x9ce DUP2
0x9cf DUP6
0x9d0 PUSH2 0x646e
0x9d3 GAS
0x9d4 SUB
0x9d5 DELEGATECALL
0x9d6 SWAP2
0x9d7 POP
0x9d8 POP
0x9d9 ISZERO
0x9da ISZERO
0x9db PUSH2 0x9e3
0x9de JUMPI
---
0x9c1: JUMPDEST 
0x9c6: V574 = 0x0
0x9c8: V575 = 0x40
0x9ca: V576 = M[0x40]
0x9cd: V577 = SUB S1 V576
0x9d0: V578 = 0x646e
0x9d3: V579 = GAS
0x9d4: V580 = SUB V579 0x646e
0x9d5: V581 = DELEGATECALL V580 V541 V576 V577 V576 0x0
0x9d9: V582 = ISZERO V581
0x9da: V583 = ISZERO V582
0x9db: V584 = 0x9e3
0x9de: JUMPI 0x9e3 V583
---
Entry stack: [V11, 0x3b5, V209, V227, V541, V227, V543, S1, V559]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x3b5, V209, V227]

================================

Block 0x9df
[0x9df:0x9e2]
---
Predecessors: [0x9c1]
Successors: []
---
0x9df PUSH1 0x0
0x9e1 DUP1
0x9e2 REVERT
---
0x9df: V585 = 0x0
0x9e2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3b5, V209, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b5, V209, V227]

================================

Block 0x9e3
[0x9e3:0x9e6]
---
Predecessors: [0x9c1]
Successors: [0x3b5]
---
0x9e3 JUMPDEST
0x9e4 POP
0x9e5 POP
0x9e6 JUMP
---
0x9e3: JUMPDEST 
0x9e6: JUMP 0x3b5
---
Entry stack: [V11, 0x3b5, V209, V227]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e7
[0x9e7:0xa3d]
---
Predecessors: [0x3b7]
Successors: [0xa3e, 0xa42]
---
0x9e7 JUMPDEST
0x9e8 PUSH1 0x0
0x9ea DUP1
0x9eb SWAP1
0x9ec SLOAD
0x9ed SWAP1
0x9ee PUSH2 0x100
0x9f1 EXP
0x9f2 SWAP1
0x9f3 DIV
0x9f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa09 AND
0xa0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1f AND
0xa20 CALLER
0xa21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa36 AND
0xa37 EQ
0xa38 ISZERO
0xa39 ISZERO
0xa3a PUSH2 0xa42
0xa3d JUMPI
---
0x9e7: JUMPDEST 
0x9e8: V586 = 0x0
0x9ec: V587 = S[0x0]
0x9ee: V588 = 0x100
0x9f1: V589 = EXP 0x100 0x0
0x9f3: V590 = DIV V587 0x1
0x9f4: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0xa09: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0xa0a: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V592
0xa20: V595 = CALLER
0xa21: V596 = 0xffffffffffffffffffffffffffffffffffffffff
0xa36: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V595
0xa37: V598 = EQ V597 V594
0xa38: V599 = ISZERO V598
0xa39: V600 = ISZERO V599
0xa3a: V601 = 0xa42
0xa3d: JUMPI 0xa42 V600
---
Entry stack: [V11, 0x3bf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3bf]

================================

Block 0xa3e
[0xa3e:0xa41]
---
Predecessors: [0x9e7]
Successors: []
---
0xa3e PUSH1 0x0
0xa40 DUP1
0xa41 REVERT
---
0xa3e: V602 = 0x0
0xa41: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3bf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3bf]

================================

Block 0xa42
[0xa42:0xa94]
---
Predecessors: [0x9e7]
Successors: [0xa95, 0xa99]
---
0xa42 JUMPDEST
0xa43 CALLER
0xa44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa59 AND
0xa5a PUSH2 0x8fc
0xa5d ADDRESS
0xa5e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa73 AND
0xa74 BALANCE
0xa75 SWAP1
0xa76 DUP2
0xa77 ISZERO
0xa78 MUL
0xa79 SWAP1
0xa7a PUSH1 0x40
0xa7c MLOAD
0xa7d PUSH1 0x0
0xa7f PUSH1 0x40
0xa81 MLOAD
0xa82 DUP1
0xa83 DUP4
0xa84 SUB
0xa85 DUP2
0xa86 DUP6
0xa87 DUP9
0xa88 DUP9
0xa89 CALL
0xa8a SWAP4
0xa8b POP
0xa8c POP
0xa8d POP
0xa8e POP
0xa8f ISZERO
0xa90 ISZERO
0xa91 PUSH2 0xa99
0xa94 JUMPI
---
0xa42: JUMPDEST 
0xa43: V603 = CALLER
0xa44: V604 = 0xffffffffffffffffffffffffffffffffffffffff
0xa59: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0xa5a: V606 = 0x8fc
0xa5d: V607 = ADDRESS
0xa5e: V608 = 0xffffffffffffffffffffffffffffffffffffffff
0xa73: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0xa74: V610 = BALANCE V609
0xa77: V611 = ISZERO V610
0xa78: V612 = MUL V611 0x8fc
0xa7a: V613 = 0x40
0xa7c: V614 = M[0x40]
0xa7d: V615 = 0x0
0xa7f: V616 = 0x40
0xa81: V617 = M[0x40]
0xa84: V618 = SUB V614 V617
0xa89: V619 = CALL V612 V605 V610 V617 V618 V617 0x0
0xa8f: V620 = ISZERO V619
0xa90: V621 = ISZERO V620
0xa91: V622 = 0xa99
0xa94: JUMPI 0xa99 V621
---
Entry stack: [V11, 0x3bf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3bf]

================================

Block 0xa95
[0xa95:0xa98]
---
Predecessors: [0xa42]
Successors: []
---
0xa95 PUSH1 0x0
0xa97 DUP1
0xa98 REVERT
---
0xa95: V623 = 0x0
0xa98: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3bf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3bf]

================================

Block 0xa99
[0xa99:0xa9a]
---
Predecessors: [0xa42]
Successors: [0x3bf]
---
0xa99 JUMPDEST
0xa9a JUMP
---
0xa99: JUMPDEST 
0xa9a: JUMP 0x3bf
---
Entry stack: [V11, 0x3bf]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa9b
[0xa9b:0xaad]
---
Predecessors: [0x3cc]
Successors: [0x3d4]
---
0xa9b JUMPDEST
0xa9c PUSH1 0x1
0xa9e PUSH1 0x14
0xaa0 SWAP1
0xaa1 SLOAD
0xaa2 SWAP1
0xaa3 PUSH2 0x100
0xaa6 EXP
0xaa7 SWAP1
0xaa8 DIV
0xaa9 PUSH1 0xff
0xaab AND
0xaac DUP2
0xaad JUMP
---
0xa9b: JUMPDEST 
0xa9c: V624 = 0x1
0xa9e: V625 = 0x14
0xaa1: V626 = S[0x1]
0xaa3: V627 = 0x100
0xaa6: V628 = EXP 0x100 0x14
0xaa8: V629 = DIV V626 0x10000000000000000000000000000000000000000
0xaa9: V630 = 0xff
0xaab: V631 = AND 0xff V629
0xaad: JUMP 0x3d4
---
Entry stack: [V11, 0x3d4]
Stack pops: 1
Stack additions: [S0, V631]
Exit stack: [V11, 0x3d4, V631]

================================

Block 0xaae
[0xaae:0xada]
---
Predecessors: []
Successors: []
---
0xaae STOP
0xaaf LOG1
0xab0 PUSH6 0x627a7a723058
0xab7 SHA3
0xab8 MISSING 0xcb
0xab9 DUP2
0xaba MISSING 0xa6
0xabb SHA3
0xabc PUSH30 0x3b82cdff3947ed1c38514ff8a0a36cecbc903eda171edb9c09667b0029
---
0xaae: STOP 
0xaaf: LOG S0 S1 S2
0xab0: V632 = 0x627a7a723058
0xab7: V633 = SHA3 0x627a7a723058 S3
0xab8: MISSING 0xcb
0xaba: MISSING 0xa6
0xabb: V634 = SHA3 S0 S1
0xabc: V635 = 0x3b82cdff3947ed1c38514ff8a0a36cecbc903eda171edb9c09667b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V633, S1, S0, S1, 0x3b82cdff3947ed1c38514ff8a0a36cecbc903eda171edb9c09667b0029, V634]
Exit stack: []

================================

Function 0:
Public function signature: 0x3d79d1c8
Entry block: 0x1b6
Exit block: 0x1c9
Body: 0x1b6, 0x1bd, 0x1c1, 0x1c9, 0x3ee

Function 1:
Public function signature: 0x4b906714
Entry block: 0x1df
Exit block: 0x257
Body: 0x1df, 0x257, 0x40d, 0x464, 0x468, 0x493, 0x49c, 0x4ae, 0x4c2, 0x4db, 0x4fb, 0x4ff

Function 2:
Public function signature: 0x4fe6f55f
Entry block: 0x259
Exit block: 0x26c
Body: 0x259, 0x260, 0x264, 0x26c, 0x504

Function 3:
Public function signature: 0x529334a1
Entry block: 0x2ae
Exit block: 0x2e5
Body: 0x2ae, 0x2b5, 0x2b9, 0x2e5, 0x52a

Function 4:
Public function signature: 0x89977cdf
Entry block: 0x2e7
Exit block: 0x2fa
Body: 0x2e7, 0x2ee, 0x2f2, 0x2fa, 0x56e

Function 5:
Public function signature: 0x8a7cf7f5
Entry block: 0x33c
Exit block: 0x344
Body: 0x33c, 0x344, 0x593, 0x8ed, 0x8f1

Function 6:
Public function signature: 0x9003e39a
Entry block: 0x346
Exit block: 0x3b5
Body: 0x346, 0x3b5, 0x8f4, 0x94b, 0x94f, 0x979, 0x982, 0x994, 0x9a8, 0x9c1, 0x9df, 0x9e3

Function 7:
Public function signature: 0xc144811f
Entry block: 0x3b7
Exit block: 0x3bf
Body: 0x3b7, 0x3bf, 0x9e7, 0xa3e, 0xa42, 0xa95, 0xa99

Function 8:
Public function signature: 0xeb5c3a36
Entry block: 0x3c1
Exit block: 0x3d4
Body: 0x3c1, 0x3c8, 0x3cc, 0x3d4, 0xa9b

Function 9:
Public fallback function
Entry block: 0x99
Exit block: 0x1b4
Body: 0x99, 0xb6, 0x1b4

