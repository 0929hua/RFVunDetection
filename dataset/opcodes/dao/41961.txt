Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xef]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2b68b9c6
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xef
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2b68b9c6
0x20: V14 = EQ V12 0x2b68b9c6
0x21: V15 = 0xef
0x24: JUMPI 0xef V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x104]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0x104
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0x104
0x2f: JUMPI 0x104 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x11c]
---
0x30 DUP1
0x31 PUSH4 0x704b6c02
0x36 EQ
0x37 PUSH2 0x11c
0x3a JUMPI
---
0x31: V19 = 0x704b6c02
0x36: V20 = EQ 0x704b6c02 V12
0x37: V21 = 0x11c
0x3a: JUMPI 0x11c V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x13d]
---
0x3b DUP1
0x3c PUSH4 0x7826bfa8
0x41 EQ
0x42 PUSH2 0x13d
0x45 JUMPI
---
0x3c: V22 = 0x7826bfa8
0x41: V23 = EQ 0x7826bfa8 V12
0x42: V24 = 0x13d
0x45: JUMPI 0x13d V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x16c]
---
0x46 DUP1
0x47 PUSH4 0x79ba5097
0x4c EQ
0x4d PUSH2 0x16c
0x50 JUMPI
---
0x47: V25 = 0x79ba5097
0x4c: V26 = EQ 0x79ba5097 V12
0x4d: V27 = 0x16c
0x50: JUMPI 0x16c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x181]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x181
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x181
0x5b: JUMPI 0x181 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1b0]
---
0x5c DUP1
0x5d PUSH4 0x94081387
0x62 EQ
0x63 PUSH2 0x1b0
0x66 JUMPI
---
0x5d: V31 = 0x94081387
0x62: V32 = EQ 0x94081387 V12
0x63: V33 = 0x1b0
0x66: JUMPI 0x1b0 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1c8]
---
0x67 DUP1
0x68 PUSH4 0xb105126f
0x6d EQ
0x6e PUSH2 0x1c8
0x71 JUMPI
---
0x68: V34 = 0xb105126f
0x6d: V35 = EQ 0xb105126f V12
0x6e: V36 = 0x1c8
0x71: JUMPI 0x1c8 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1e9]
---
0x72 DUP1
0x73 PUSH4 0xb5ed298a
0x78 EQ
0x79 PUSH2 0x1e9
0x7c JUMPI
---
0x73: V37 = 0xb5ed298a
0x78: V38 = EQ 0xb5ed298a V12
0x79: V39 = 0x1e9
0x7c: JUMPI 0x1e9 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x20a]
---
0x7d DUP1
0x7e PUSH4 0xd153b60c
0x83 EQ
0x84 PUSH2 0x20a
0x87 JUMPI
---
0x7e: V40 = 0xd153b60c
0x83: V41 = EQ 0xd153b60c V12
0x84: V42 = 0x20a
0x87: JUMPI 0x20a V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x239]
---
0x88 DUP1
0x89 PUSH4 0xe1a27ad3
0x8e EQ
0x8f PUSH2 0x239
0x92 JUMPI
---
0x89: V43 = 0xe1a27ad3
0x8e: V44 = EQ 0xe1a27ad3 V12
0x8f: V45 = 0x239
0x92: JUMPI 0x239 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x260]
---
0x93 DUP1
0x94 PUSH4 0xf298083b
0x99 EQ
0x9a PUSH2 0x260
0x9d JUMPI
---
0x94: V46 = 0xf298083b
0x99: V47 = EQ 0xf298083b V12
0x9a: V48 = 0x260
0x9d: JUMPI 0x260 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x281]
---
0x9e DUP1
0x9f PUSH4 0xf851a440
0xa4 EQ
0xa5 PUSH2 0x281
0xa8 JUMPI
---
0x9f: V49 = 0xf851a440
0xa4: V50 = EQ 0xf851a440 V12
0xa5: V51 = 0x281
0xa8: JUMPI 0x281 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0x0, 0x9e]
Successors: [0xad]
---
0xa9 JUMPDEST
0xaa PUSH2 0xed
---
0xa9: JUMPDEST 
0xaa: V52 = 0xed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V12, 0xed]

================================

Block 0xad
[0xad:0xea]
---
Predecessors: [0xa9]
Successors: [0xeb]
---
0xad JUMPDEST
0xae CALLER
0xaf PUSH1 0x1
0xb1 PUSH1 0xa0
0xb3 PUSH1 0x2
0xb5 EXP
0xb6 SUB
0xb7 AND
0xb8 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xd9 CALLVALUE
0xda PUSH1 0x40
0xdc MLOAD
0xdd SWAP1
0xde DUP2
0xdf MSTORE
0xe0 PUSH1 0x20
0xe2 ADD
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 SWAP2
0xe8 SUB
0xe9 SWAP1
0xea LOG2
---
0xad: JUMPDEST 
0xae: V53 = CALLER
0xaf: V54 = 0x1
0xb1: V55 = 0xa0
0xb3: V56 = 0x2
0xb5: V57 = EXP 0x2 0xa0
0xb6: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xb8: V60 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xd9: V61 = CALLVALUE
0xda: V62 = 0x40
0xdc: V63 = M[0x40]
0xdf: M[V63] = V61
0xe0: V64 = 0x20
0xe2: V65 = ADD 0x20 V63
0xe3: V66 = 0x40
0xe5: V67 = M[0x40]
0xe8: V68 = SUB V65 V67
0xea: LOG V67 V68 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V59
---
Entry stack: [V12, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed]

================================

Block 0xeb
[0xeb:0xec]
---
Predecessors: [0xad]
Successors: [0xed]
---
0xeb JUMPDEST
0xec JUMP
---
0xeb: JUMPDEST 
0xec: JUMP 0xed
---
Entry stack: [V12, 0xed]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: [0xeb, 0x32c, 0x367, 0x3ce, 0x43c, 0x4e9, 0x527, 0x65a]
Successors: []
---
0xed JUMPDEST
0xee STOP
---
0xed: JUMPDEST 
0xee: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0xb]
Successors: [0xf6, 0xfa]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V69 = CALLVALUE
0xf1: V70 = ISZERO V69
0xf2: V71 = 0xfa
0xf5: JUMPI 0xfa V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xef]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V72 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0xef]
Successors: [0x2b0]
---
0xfa JUMPDEST
0xfb PUSH2 0xed
0xfe PUSH2 0x2b0
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V73 = 0xed
0xfe: V74 = 0x2b0
0x101: JUMP 0x2b0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V12, 0xed]

================================

Block 0x102
[0x102:0x103]
---
Predecessors: []
Successors: []
---
0x102 JUMPDEST
0x103 STOP
---
0x102: JUMPDEST 
0x103: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x104
[0x104:0x10a]
---
Predecessors: [0x25]
Successors: [0x10b, 0x10f]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x104: JUMPDEST 
0x105: V75 = CALLVALUE
0x106: V76 = ISZERO V75
0x107: V77 = 0x10f
0x10a: JUMPI 0x10f V76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x104]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V78 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10f
[0x10f:0x119]
---
Predecessors: [0x104]
Successors: [0x2dc]
---
0x10f JUMPDEST
0x110 PUSH2 0xed
0x113 PUSH1 0x4
0x115 CALLDATALOAD
0x116 PUSH2 0x2dc
0x119 JUMP
---
0x10f: JUMPDEST 
0x110: V79 = 0xed
0x113: V80 = 0x4
0x115: V81 = CALLDATALOAD 0x4
0x116: V82 = 0x2dc
0x119: JUMP 0x2dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xed, V81]
Exit stack: [V12, 0xed, V81]

================================

Block 0x11a
[0x11a:0x11b]
---
Predecessors: []
Successors: []
---
0x11a JUMPDEST
0x11b STOP
---
0x11a: JUMPDEST 
0x11b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11c
[0x11c:0x122]
---
Predecessors: [0x30]
Successors: [0x123, 0x127]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11c: JUMPDEST 
0x11d: V83 = CALLVALUE
0x11e: V84 = ISZERO V83
0x11f: V85 = 0x127
0x122: JUMPI 0x127 V84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11c]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V86 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x127
[0x127:0x13a]
---
Predecessors: [0x11c]
Successors: [0x32f]
---
0x127 JUMPDEST
0x128 PUSH2 0xed
0x12b PUSH1 0x1
0x12d PUSH1 0xa0
0x12f PUSH1 0x2
0x131 EXP
0x132 SUB
0x133 PUSH1 0x4
0x135 CALLDATALOAD
0x136 AND
0x137 PUSH2 0x32f
0x13a JUMP
---
0x127: JUMPDEST 
0x128: V87 = 0xed
0x12b: V88 = 0x1
0x12d: V89 = 0xa0
0x12f: V90 = 0x2
0x131: V91 = EXP 0x2 0xa0
0x132: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x133: V93 = 0x4
0x135: V94 = CALLDATALOAD 0x4
0x136: V95 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x137: V96 = 0x32f
0x13a: JUMP 0x32f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xed, V95]
Exit stack: [V12, 0xed, V95]

================================

Block 0x13b
[0x13b:0x13c]
---
Predecessors: []
Successors: []
---
0x13b JUMPDEST
0x13c STOP
---
0x13b: JUMPDEST 
0x13c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x3b]
Successors: [0x144, 0x148]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V97 = CALLVALUE
0x13f: V98 = ISZERO V97
0x140: V99 = 0x148
0x143: JUMPI 0x148 V98
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13d]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V100 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x13d]
Successors: [0x36a]
---
0x148 JUMPDEST
0x149 PUSH2 0x150
0x14c PUSH2 0x36a
0x14f JUMP
---
0x148: JUMPDEST 
0x149: V101 = 0x150
0x14c: V102 = 0x36a
0x14f: JUMP 0x36a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x150
[0x150:0x16b]
---
Predecessors: [0x36a, 0x3d0, 0x52a, 0x65d]
Successors: []
---
0x150 JUMPDEST
0x151 PUSH1 0x40
0x153 MLOAD
0x154 PUSH1 0x1
0x156 PUSH1 0xa0
0x158 PUSH1 0x2
0x15a EXP
0x15b SUB
0x15c SWAP1
0x15d SWAP2
0x15e AND
0x15f DUP2
0x160 MSTORE
0x161 PUSH1 0x20
0x163 ADD
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x150: JUMPDEST 
0x151: V103 = 0x40
0x153: V104 = M[0x40]
0x154: V105 = 0x1
0x156: V106 = 0xa0
0x158: V107 = 0x2
0x15a: V108 = EXP 0x2 0xa0
0x15b: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15e: V110 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x160: M[V104] = V110
0x161: V111 = 0x20
0x163: V112 = ADD 0x20 V104
0x164: V113 = 0x40
0x166: V114 = M[0x40]
0x169: V115 = SUB V112 V114
0x16b: RETURN V114 V115
---
Entry stack: [V12, 0x150, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x150]

================================

Block 0x16c
[0x16c:0x172]
---
Predecessors: [0x46]
Successors: [0x173, 0x177]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x16c: JUMPDEST 
0x16d: V116 = CALLVALUE
0x16e: V117 = ISZERO V116
0x16f: V118 = 0x177
0x172: JUMPI 0x177 V117
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x16c]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V119 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x177
[0x177:0x17e]
---
Predecessors: [0x16c]
Successors: [0x379]
---
0x177 JUMPDEST
0x178 PUSH2 0xed
0x17b PUSH2 0x379
0x17e JUMP
---
0x177: JUMPDEST 
0x178: V120 = 0xed
0x17b: V121 = 0x379
0x17e: JUMP 0x379
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V12, 0xed]

================================

Block 0x17f
[0x17f:0x180]
---
Predecessors: []
Successors: []
---
0x17f JUMPDEST
0x180 STOP
---
0x17f: JUMPDEST 
0x180: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x181
[0x181:0x187]
---
Predecessors: [0x51]
Successors: [0x188, 0x18c]
---
0x181 JUMPDEST
0x182 CALLVALUE
0x183 ISZERO
0x184 PUSH2 0x18c
0x187 JUMPI
---
0x181: JUMPDEST 
0x182: V122 = CALLVALUE
0x183: V123 = ISZERO V122
0x184: V124 = 0x18c
0x187: JUMPI 0x18c V123
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x188
[0x188:0x18b]
---
Predecessors: [0x181]
Successors: []
---
0x188 PUSH1 0x0
0x18a DUP1
0x18b REVERT
---
0x188: V125 = 0x0
0x18b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18c
[0x18c:0x193]
---
Predecessors: [0x181]
Successors: [0x3d0]
---
0x18c JUMPDEST
0x18d PUSH2 0x150
0x190 PUSH2 0x3d0
0x193 JUMP
---
0x18c: JUMPDEST 
0x18d: V126 = 0x150
0x190: V127 = 0x3d0
0x193: JUMP 0x3d0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x194
[0x194:0x1af]
---
Predecessors: []
Successors: []
---
0x194 JUMPDEST
0x195 PUSH1 0x40
0x197 MLOAD
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 SWAP1
0x1a1 SWAP2
0x1a2 AND
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 PUSH1 0x40
0x1aa MLOAD
0x1ab DUP1
0x1ac SWAP2
0x1ad SUB
0x1ae SWAP1
0x1af RETURN
---
0x194: JUMPDEST 
0x195: V128 = 0x40
0x197: V129 = M[0x40]
0x198: V130 = 0x1
0x19a: V131 = 0xa0
0x19c: V132 = 0x2
0x19e: V133 = EXP 0x2 0xa0
0x19f: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a2: V135 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: M[V129] = V135
0x1a5: V136 = 0x20
0x1a7: V137 = ADD 0x20 V129
0x1a8: V138 = 0x40
0x1aa: V139 = M[0x40]
0x1ad: V140 = SUB V137 V139
0x1af: RETURN V139 V140
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b0
[0x1b0:0x1b6]
---
Predecessors: [0x5c]
Successors: [0x1b7, 0x1bb]
---
0x1b0 JUMPDEST
0x1b1 CALLVALUE
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0x1b0: JUMPDEST 
0x1b1: V141 = CALLVALUE
0x1b2: V142 = ISZERO V141
0x1b3: V143 = 0x1bb
0x1b6: JUMPI 0x1bb V142
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0x1b0]
Successors: []
---
0x1b7 PUSH1 0x0
0x1b9 DUP1
0x1ba REVERT
---
0x1b7: V144 = 0x0
0x1ba: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bb
[0x1bb:0x1c5]
---
Predecessors: [0x1b0]
Successors: [0x3df]
---
0x1bb JUMPDEST
0x1bc PUSH2 0xed
0x1bf PUSH1 0x4
0x1c1 CALLDATALOAD
0x1c2 PUSH2 0x3df
0x1c5 JUMP
---
0x1bb: JUMPDEST 
0x1bc: V145 = 0xed
0x1bf: V146 = 0x4
0x1c1: V147 = CALLDATALOAD 0x4
0x1c2: V148 = 0x3df
0x1c5: JUMP 0x3df
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xed, V147]
Exit stack: [V12, 0xed, V147]

================================

Block 0x1c6
[0x1c6:0x1c7]
---
Predecessors: []
Successors: []
---
0x1c6 JUMPDEST
0x1c7 STOP
---
0x1c6: JUMPDEST 
0x1c7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c8
[0x1c8:0x1ce]
---
Predecessors: [0x67]
Successors: [0x1cf, 0x1d3]
---
0x1c8 JUMPDEST
0x1c9 CALLVALUE
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V149 = CALLVALUE
0x1ca: V150 = ISZERO V149
0x1cb: V151 = 0x1d3
0x1ce: JUMPI 0x1d3 V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c8]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V152 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d3
[0x1d3:0x1e6]
---
Predecessors: [0x1c8]
Successors: [0x43f]
---
0x1d3 JUMPDEST
0x1d4 PUSH2 0xed
0x1d7 PUSH1 0x4
0x1d9 CALLDATALOAD
0x1da PUSH1 0x24
0x1dc CALLDATALOAD
0x1dd PUSH1 0x44
0x1df CALLDATALOAD
0x1e0 PUSH1 0x64
0x1e2 CALLDATALOAD
0x1e3 PUSH2 0x43f
0x1e6 JUMP
---
0x1d3: JUMPDEST 
0x1d4: V153 = 0xed
0x1d7: V154 = 0x4
0x1d9: V155 = CALLDATALOAD 0x4
0x1da: V156 = 0x24
0x1dc: V157 = CALLDATALOAD 0x24
0x1dd: V158 = 0x44
0x1df: V159 = CALLDATALOAD 0x44
0x1e0: V160 = 0x64
0x1e2: V161 = CALLDATALOAD 0x64
0x1e3: V162 = 0x43f
0x1e6: JUMP 0x43f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xed, V155, V157, V159, V161]
Exit stack: [V12, 0xed, V155, V157, V159, V161]

================================

Block 0x1e7
[0x1e7:0x1e8]
---
Predecessors: []
Successors: []
---
0x1e7 JUMPDEST
0x1e8 STOP
---
0x1e7: JUMPDEST 
0x1e8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0x72]
Successors: [0x1f0, 0x1f4]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f4
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V163 = CALLVALUE
0x1eb: V164 = ISZERO V163
0x1ec: V165 = 0x1f4
0x1ef: JUMPI 0x1f4 V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f0
[0x1f0:0x1f3]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 REVERT
---
0x1f0: V166 = 0x0
0x1f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f4
[0x1f4:0x207]
---
Predecessors: [0x1e9]
Successors: [0x4ef]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0xed
0x1f8 PUSH1 0x1
0x1fa PUSH1 0xa0
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff SUB
0x200 PUSH1 0x4
0x202 CALLDATALOAD
0x203 AND
0x204 PUSH2 0x4ef
0x207 JUMP
---
0x1f4: JUMPDEST 
0x1f5: V167 = 0xed
0x1f8: V168 = 0x1
0x1fa: V169 = 0xa0
0x1fc: V170 = 0x2
0x1fe: V171 = EXP 0x2 0xa0
0x1ff: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V173 = 0x4
0x202: V174 = CALLDATALOAD 0x4
0x203: V175 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x204: V176 = 0x4ef
0x207: JUMP 0x4ef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xed, V175]
Exit stack: [V12, 0xed, V175]

================================

Block 0x208
[0x208:0x209]
---
Predecessors: []
Successors: []
---
0x208 JUMPDEST
0x209 STOP
---
0x208: JUMPDEST 
0x209: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20a
[0x20a:0x210]
---
Predecessors: [0x7d]
Successors: [0x211, 0x215]
---
0x20a JUMPDEST
0x20b CALLVALUE
0x20c ISZERO
0x20d PUSH2 0x215
0x210 JUMPI
---
0x20a: JUMPDEST 
0x20b: V177 = CALLVALUE
0x20c: V178 = ISZERO V177
0x20d: V179 = 0x215
0x210: JUMPI 0x215 V178
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x211
[0x211:0x214]
---
Predecessors: [0x20a]
Successors: []
---
0x211 PUSH1 0x0
0x213 DUP1
0x214 REVERT
---
0x211: V180 = 0x0
0x214: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x215
[0x215:0x21c]
---
Predecessors: [0x20a]
Successors: [0x52a]
---
0x215 JUMPDEST
0x216 PUSH2 0x150
0x219 PUSH2 0x52a
0x21c JUMP
---
0x215: JUMPDEST 
0x216: V181 = 0x150
0x219: V182 = 0x52a
0x21c: JUMP 0x52a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x21d
[0x21d:0x238]
---
Predecessors: []
Successors: []
---
0x21d JUMPDEST
0x21e PUSH1 0x40
0x220 MLOAD
0x221 PUSH1 0x1
0x223 PUSH1 0xa0
0x225 PUSH1 0x2
0x227 EXP
0x228 SUB
0x229 SWAP1
0x22a SWAP2
0x22b AND
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 PUSH1 0x40
0x233 MLOAD
0x234 DUP1
0x235 SWAP2
0x236 SUB
0x237 SWAP1
0x238 RETURN
---
0x21d: JUMPDEST 
0x21e: V183 = 0x40
0x220: V184 = M[0x40]
0x221: V185 = 0x1
0x223: V186 = 0xa0
0x225: V187 = 0x2
0x227: V188 = EXP 0x2 0xa0
0x228: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22b: V190 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x22d: M[V184] = V190
0x22e: V191 = 0x20
0x230: V192 = ADD 0x20 V184
0x231: V193 = 0x40
0x233: V194 = M[0x40]
0x236: V195 = SUB V192 V194
0x238: RETURN V194 V195
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x239
[0x239:0x23f]
---
Predecessors: [0x88]
Successors: [0x240, 0x244]
---
0x239 JUMPDEST
0x23a CALLVALUE
0x23b ISZERO
0x23c PUSH2 0x244
0x23f JUMPI
---
0x239: JUMPDEST 
0x23a: V196 = CALLVALUE
0x23b: V197 = ISZERO V196
0x23c: V198 = 0x244
0x23f: JUMPI 0x244 V197
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x239]
Successors: []
---
0x240 PUSH1 0x0
0x242 DUP1
0x243 REVERT
---
0x240: V199 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x244
[0x244:0x24b]
---
Predecessors: [0x239]
Successors: [0x539]
---
0x244 JUMPDEST
0x245 PUSH2 0x24c
0x248 PUSH2 0x539
0x24b JUMP
---
0x244: JUMPDEST 
0x245: V200 = 0x24c
0x248: V201 = 0x539
0x24b: JUMP 0x539
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x24c]
Exit stack: [V12, 0x24c]

================================

Block 0x24c
[0x24c:0x25f]
---
Predecessors: [0x61f]
Successors: []
---
0x24c JUMPDEST
0x24d PUSH1 0x40
0x24f MLOAD
0x250 SWAP1
0x251 ISZERO
0x252 ISZERO
0x253 DUP2
0x254 MSTORE
0x255 PUSH1 0x20
0x257 ADD
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c SWAP2
0x25d SUB
0x25e SWAP1
0x25f RETURN
---
0x24c: JUMPDEST 
0x24d: V202 = 0x40
0x24f: V203 = M[0x40]
0x251: V204 = ISZERO S0
0x252: V205 = ISZERO V204
0x254: M[V203] = V205
0x255: V206 = 0x20
0x257: V207 = ADD 0x20 V203
0x258: V208 = 0x40
0x25a: V209 = M[0x40]
0x25d: V210 = SUB V207 V209
0x25f: RETURN V209 V210
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x260
[0x260:0x266]
---
Predecessors: [0x93]
Successors: [0x267, 0x26b]
---
0x260 JUMPDEST
0x261 CALLVALUE
0x262 ISZERO
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x260: JUMPDEST 
0x261: V211 = CALLVALUE
0x262: V212 = ISZERO V211
0x263: V213 = 0x26b
0x266: JUMPI 0x26b V212
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x260]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V214 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26b
[0x26b:0x27e]
---
Predecessors: [0x260]
Successors: [0x622]
---
0x26b JUMPDEST
0x26c PUSH2 0xed
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 PUSH1 0x4
0x279 CALLDATALOAD
0x27a AND
0x27b PUSH2 0x622
0x27e JUMP
---
0x26b: JUMPDEST 
0x26c: V215 = 0xed
0x26f: V216 = 0x1
0x271: V217 = 0xa0
0x273: V218 = 0x2
0x275: V219 = EXP 0x2 0xa0
0x276: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V221 = 0x4
0x279: V222 = CALLDATALOAD 0x4
0x27a: V223 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V224 = 0x622
0x27e: JUMP 0x622
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xed, V223]
Exit stack: [V12, 0xed, V223]

================================

Block 0x27f
[0x27f:0x280]
---
Predecessors: []
Successors: []
---
0x27f JUMPDEST
0x280 STOP
---
0x27f: JUMPDEST 
0x280: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x281
[0x281:0x287]
---
Predecessors: [0x9e]
Successors: [0x288, 0x28c]
---
0x281 JUMPDEST
0x282 CALLVALUE
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x281: JUMPDEST 
0x282: V225 = CALLVALUE
0x283: V226 = ISZERO V225
0x284: V227 = 0x28c
0x287: JUMPI 0x28c V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x281]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V228 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28c
[0x28c:0x293]
---
Predecessors: [0x281]
Successors: [0x65d]
---
0x28c JUMPDEST
0x28d PUSH2 0x150
0x290 PUSH2 0x65d
0x293 JUMP
---
0x28c: JUMPDEST 
0x28d: V229 = 0x150
0x290: V230 = 0x65d
0x293: JUMP 0x65d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x294
[0x294:0x2af]
---
Predecessors: []
Successors: []
---
0x294 JUMPDEST
0x295 PUSH1 0x40
0x297 MLOAD
0x298 PUSH1 0x1
0x29a PUSH1 0xa0
0x29c PUSH1 0x2
0x29e EXP
0x29f SUB
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 AND
0x2a3 DUP2
0x2a4 MSTORE
0x2a5 PUSH1 0x20
0x2a7 ADD
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP1
0x2ac SWAP2
0x2ad SUB
0x2ae SWAP1
0x2af RETURN
---
0x294: JUMPDEST 
0x295: V231 = 0x40
0x297: V232 = M[0x40]
0x298: V233 = 0x1
0x29a: V234 = 0xa0
0x29c: V235 = 0x2
0x29e: V236 = EXP 0x2 0xa0
0x29f: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a2: V238 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2a4: M[V232] = V238
0x2a5: V239 = 0x20
0x2a7: V240 = ADD 0x20 V232
0x2a8: V241 = 0x40
0x2aa: V242 = M[0x40]
0x2ad: V243 = SUB V240 V242
0x2af: RETURN V242 V243
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b0
[0x2b0:0x2c6]
---
Predecessors: [0xfa]
Successors: [0x2c7, 0x2cb]
---
0x2b0 JUMPDEST
0x2b1 PUSH1 0x0
0x2b3 SLOAD
0x2b4 CALLER
0x2b5 PUSH1 0x1
0x2b7 PUSH1 0xa0
0x2b9 PUSH1 0x2
0x2bb EXP
0x2bc SUB
0x2bd SWAP1
0x2be DUP2
0x2bf AND
0x2c0 SWAP2
0x2c1 AND
0x2c2 EQ
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V244 = 0x0
0x2b3: V245 = S[0x0]
0x2b4: V246 = CALLER
0x2b5: V247 = 0x1
0x2b7: V248 = 0xa0
0x2b9: V249 = 0x2
0x2bb: V250 = EXP 0x2 0xa0
0x2bc: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bf: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x2c1: V253 = AND V245 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V254 = EQ V253 V252
0x2c3: V255 = 0x2cb
0x2c6: JUMPI 0x2cb V254
---
Entry stack: [V12, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2b0]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V256 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed]

================================

Block 0x2cb
[0x2cb:0x2d8]
---
Predecessors: [0x2b0]
Successors: []
---
0x2cb JUMPDEST
0x2cc PUSH1 0x0
0x2ce SLOAD
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 AND
0x2d8 SELFDESTRUCT
---
0x2cb: JUMPDEST 
0x2cc: V257 = 0x0
0x2ce: V258 = S[0x0]
0x2cf: V259 = 0x1
0x2d1: V260 = 0xa0
0x2d3: V261 = 0x2
0x2d5: V262 = EXP 0x2 0xa0
0x2d6: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x2d8: SELFDESTRUCT V264
---
Entry stack: [V12, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed]

================================

Block 0x2d9
[0x2d9:0x2d9]
---
Predecessors: []
Successors: [0x2da]
---
0x2d9 JUMPDEST
---
0x2d9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2da
[0x2da:0x2db]
---
Predecessors: [0x2d9]
Successors: []
Has unresolved jump.
---
0x2da JUMPDEST
0x2db JUMP
---
0x2da: JUMPDEST 
0x2db: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2dc
[0x2dc:0x2f2]
---
Predecessors: [0x10f]
Successors: [0x2f3, 0x2f7]
---
0x2dc JUMPDEST
0x2dd PUSH1 0x0
0x2df SLOAD
0x2e0 CALLER
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 SWAP1
0x2ea DUP2
0x2eb AND
0x2ec SWAP2
0x2ed AND
0x2ee EQ
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x2dc: JUMPDEST 
0x2dd: V265 = 0x0
0x2df: V266 = S[0x0]
0x2e0: V267 = CALLER
0x2e1: V268 = 0x1
0x2e3: V269 = 0xa0
0x2e5: V270 = 0x2
0x2e7: V271 = EXP 0x2 0xa0
0x2e8: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x2ed: V274 = AND V266 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V275 = EQ V274 V273
0x2ef: V276 = 0x2f7
0x2f2: JUMPI 0x2f7 V275
---
Entry stack: [V12, 0xed, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V81]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2dc]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V277 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V81]

================================

Block 0x2f7
[0x2f7:0x325]
---
Predecessors: [0x2dc]
Successors: [0x326, 0x32a]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x0
0x2fa SLOAD
0x2fb PUSH1 0x1
0x2fd PUSH1 0xa0
0x2ff PUSH1 0x2
0x301 EXP
0x302 SUB
0x303 AND
0x304 DUP2
0x305 ISZERO
0x306 PUSH2 0x8fc
0x309 MUL
0x30a DUP3
0x30b PUSH1 0x40
0x30d MLOAD
0x30e PUSH1 0x0
0x310 PUSH1 0x40
0x312 MLOAD
0x313 DUP1
0x314 DUP4
0x315 SUB
0x316 DUP2
0x317 DUP6
0x318 DUP9
0x319 DUP9
0x31a CALL
0x31b SWAP4
0x31c POP
0x31d POP
0x31e POP
0x31f POP
0x320 ISZERO
0x321 ISZERO
0x322 PUSH2 0x32a
0x325 JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V278 = 0x0
0x2fa: V279 = S[0x0]
0x2fb: V280 = 0x1
0x2fd: V281 = 0xa0
0x2ff: V282 = 0x2
0x301: V283 = EXP 0x2 0xa0
0x302: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x303: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x305: V286 = ISZERO V81
0x306: V287 = 0x8fc
0x309: V288 = MUL 0x8fc V286
0x30b: V289 = 0x40
0x30d: V290 = M[0x40]
0x30e: V291 = 0x0
0x310: V292 = 0x40
0x312: V293 = M[0x40]
0x315: V294 = SUB V290 V293
0x31a: V295 = CALL V288 V285 V81 V293 V294 V293 0x0
0x320: V296 = ISZERO V295
0x321: V297 = ISZERO V296
0x322: V298 = 0x32a
0x325: JUMPI 0x32a V297
---
Entry stack: [V12, 0xed, V81]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xed, V81]

================================

Block 0x326
[0x326:0x329]
---
Predecessors: [0x2f7]
Successors: []
---
0x326 PUSH1 0x0
0x328 DUP1
0x329 REVERT
---
0x326: V299 = 0x0
0x329: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V81]

================================

Block 0x32a
[0x32a:0x32a]
---
Predecessors: [0x2f7]
Successors: [0x32b]
---
0x32a JUMPDEST
---
0x32a: JUMPDEST 
---
Entry stack: [V12, 0xed, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V81]

================================

Block 0x32b
[0x32b:0x32b]
---
Predecessors: [0x32a]
Successors: [0x32c]
---
0x32b JUMPDEST
---
0x32b: JUMPDEST 
---
Entry stack: [V12, 0xed, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V81]

================================

Block 0x32c
[0x32c:0x32e]
---
Predecessors: [0x32b]
Successors: [0xed]
---
0x32c JUMPDEST
0x32d POP
0x32e JUMP
---
0x32c: JUMPDEST 
0x32e: JUMP 0xed
---
Entry stack: [V12, 0xed, V81]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x32f
[0x32f:0x345]
---
Predecessors: [0x127]
Successors: [0x346, 0x34a]
---
0x32f JUMPDEST
0x330 PUSH1 0x0
0x332 SLOAD
0x333 CALLER
0x334 PUSH1 0x1
0x336 PUSH1 0xa0
0x338 PUSH1 0x2
0x33a EXP
0x33b SUB
0x33c SWAP1
0x33d DUP2
0x33e AND
0x33f SWAP2
0x340 AND
0x341 EQ
0x342 PUSH2 0x34a
0x345 JUMPI
---
0x32f: JUMPDEST 
0x330: V300 = 0x0
0x332: V301 = S[0x0]
0x333: V302 = CALLER
0x334: V303 = 0x1
0x336: V304 = 0xa0
0x338: V305 = 0x2
0x33a: V306 = EXP 0x2 0xa0
0x33b: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33e: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x340: V309 = AND V301 0xffffffffffffffffffffffffffffffffffffffff
0x341: V310 = EQ V309 V308
0x342: V311 = 0x34a
0x345: JUMPI 0x34a V310
---
Entry stack: [V12, 0xed, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V95]

================================

Block 0x346
[0x346:0x349]
---
Predecessors: [0x32f]
Successors: []
---
0x346 PUSH1 0x0
0x348 DUP1
0x349 REVERT
---
0x346: V312 = 0x0
0x349: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V95]

================================

Block 0x34a
[0x34a:0x365]
---
Predecessors: [0x32f]
Successors: [0x366]
---
0x34a JUMPDEST
0x34b PUSH1 0x1
0x34d DUP1
0x34e SLOAD
0x34f PUSH1 0x1
0x351 PUSH1 0xa0
0x353 PUSH1 0x2
0x355 EXP
0x356 SUB
0x357 NOT
0x358 AND
0x359 PUSH1 0x1
0x35b PUSH1 0xa0
0x35d PUSH1 0x2
0x35f EXP
0x360 SUB
0x361 DUP4
0x362 AND
0x363 OR
0x364 SWAP1
0x365 SSTORE
---
0x34a: JUMPDEST 
0x34b: V313 = 0x1
0x34e: V314 = S[0x1]
0x34f: V315 = 0x1
0x351: V316 = 0xa0
0x353: V317 = 0x2
0x355: V318 = EXP 0x2 0xa0
0x356: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x357: V320 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x358: V321 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V314
0x359: V322 = 0x1
0x35b: V323 = 0xa0
0x35d: V324 = 0x2
0x35f: V325 = EXP 0x2 0xa0
0x360: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x362: V327 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x363: V328 = OR V327 V321
0x365: S[0x1] = V328
---
Entry stack: [V12, 0xed, V95]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xed, V95]

================================

Block 0x366
[0x366:0x366]
---
Predecessors: [0x34a]
Successors: [0x367]
---
0x366 JUMPDEST
---
0x366: JUMPDEST 
---
Entry stack: [V12, 0xed, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V95]

================================

Block 0x367
[0x367:0x369]
---
Predecessors: [0x366]
Successors: [0xed]
---
0x367 JUMPDEST
0x368 POP
0x369 JUMP
---
0x367: JUMPDEST 
0x369: JUMP 0xed
---
Entry stack: [V12, 0xed, V95]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x36a
[0x36a:0x378]
---
Predecessors: [0x148]
Successors: [0x150]
---
0x36a JUMPDEST
0x36b PUSH1 0x3
0x36d SLOAD
0x36e PUSH1 0x1
0x370 PUSH1 0xa0
0x372 PUSH1 0x2
0x374 EXP
0x375 SUB
0x376 AND
0x377 DUP2
0x378 JUMP
---
0x36a: JUMPDEST 
0x36b: V329 = 0x3
0x36d: V330 = S[0x3]
0x36e: V331 = 0x1
0x370: V332 = 0xa0
0x372: V333 = 0x2
0x374: V334 = EXP 0x2 0xa0
0x375: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x376: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x378: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V336]
Exit stack: [V12, 0x150, V336]

================================

Block 0x379
[0x379:0x38b]
---
Predecessors: [0x177]
Successors: [0x38c, 0x390]
---
0x379 JUMPDEST
0x37a PUSH1 0x2
0x37c SLOAD
0x37d PUSH1 0x1
0x37f PUSH1 0xa0
0x381 PUSH1 0x2
0x383 EXP
0x384 SUB
0x385 AND
0x386 ISZERO
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x379: JUMPDEST 
0x37a: V337 = 0x2
0x37c: V338 = S[0x2]
0x37d: V339 = 0x1
0x37f: V340 = 0xa0
0x381: V341 = 0x2
0x383: V342 = EXP 0x2 0xa0
0x384: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x385: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x386: V345 = ISZERO V344
0x387: V346 = ISZERO V345
0x388: V347 = 0x390
0x38b: JUMPI 0x390 V346
---
Entry stack: [V12, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x379]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V348 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed]

================================

Block 0x390
[0x390:0x3a6]
---
Predecessors: [0x379]
Successors: [0x3a7, 0x3ab]
---
0x390 JUMPDEST
0x391 PUSH1 0x2
0x393 SLOAD
0x394 CALLER
0x395 PUSH1 0x1
0x397 PUSH1 0xa0
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d SWAP1
0x39e DUP2
0x39f AND
0x3a0 SWAP2
0x3a1 AND
0x3a2 EQ
0x3a3 PUSH2 0x3ab
0x3a6 JUMPI
---
0x390: JUMPDEST 
0x391: V349 = 0x2
0x393: V350 = S[0x2]
0x394: V351 = CALLER
0x395: V352 = 0x1
0x397: V353 = 0xa0
0x399: V354 = 0x2
0x39b: V355 = EXP 0x2 0xa0
0x39c: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39f: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x3a1: V358 = AND V350 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V359 = EQ V358 V357
0x3a3: V360 = 0x3ab
0x3a6: JUMPI 0x3ab V359
---
Entry stack: [V12, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed]

================================

Block 0x3a7
[0x3a7:0x3aa]
---
Predecessors: [0x390]
Successors: []
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
---
0x3a7: V361 = 0x0
0x3aa: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed]

================================

Block 0x3ab
[0x3ab:0x3cd]
---
Predecessors: [0x390]
Successors: [0x3ce]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x2
0x3ae SLOAD
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 SLOAD
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb NOT
0x3bc AND
0x3bd PUSH1 0x1
0x3bf PUSH1 0xa0
0x3c1 PUSH1 0x2
0x3c3 EXP
0x3c4 SUB
0x3c5 SWAP1
0x3c6 SWAP3
0x3c7 AND
0x3c8 SWAP2
0x3c9 SWAP1
0x3ca SWAP2
0x3cb OR
0x3cc SWAP1
0x3cd SSTORE
---
0x3ab: JUMPDEST 
0x3ac: V362 = 0x2
0x3ae: V363 = S[0x2]
0x3af: V364 = 0x0
0x3b2: V365 = S[0x0]
0x3b3: V366 = 0x1
0x3b5: V367 = 0xa0
0x3b7: V368 = 0x2
0x3b9: V369 = EXP 0x2 0xa0
0x3ba: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bb: V371 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3bc: V372 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V365
0x3bd: V373 = 0x1
0x3bf: V374 = 0xa0
0x3c1: V375 = 0x2
0x3c3: V376 = EXP 0x2 0xa0
0x3c4: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c7: V378 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V379 = OR V378 V372
0x3cd: S[0x0] = V379
---
Entry stack: [V12, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed]

================================

Block 0x3ce
[0x3ce:0x3cf]
---
Predecessors: [0x3ab]
Successors: [0xed]
---
0x3ce JUMPDEST
0x3cf JUMP
---
0x3ce: JUMPDEST 
0x3cf: JUMP 0xed
---
Entry stack: [V12, 0xed]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d0
[0x3d0:0x3de]
---
Predecessors: [0x18c]
Successors: [0x150]
---
0x3d0 JUMPDEST
0x3d1 PUSH1 0x0
0x3d3 SLOAD
0x3d4 PUSH1 0x1
0x3d6 PUSH1 0xa0
0x3d8 PUSH1 0x2
0x3da EXP
0x3db SUB
0x3dc AND
0x3dd DUP2
0x3de JUMP
---
0x3d0: JUMPDEST 
0x3d1: V380 = 0x0
0x3d3: V381 = S[0x0]
0x3d4: V382 = 0x1
0x3d6: V383 = 0xa0
0x3d8: V384 = 0x2
0x3da: V385 = EXP 0x2 0xa0
0x3db: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dc: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x3de: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V387]
Exit stack: [V12, 0x150, V387]

================================

Block 0x3df
[0x3df:0x422]
---
Predecessors: [0x1bb]
Successors: [0x423, 0x427]
---
0x3df JUMPDEST
0x3e0 PUSH1 0x3
0x3e2 SLOAD
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb AND
0x3ec PUSH4 0xea7f7a59
0x3f1 DUP3
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 PUSH1 0xe0
0x3f7 PUSH1 0x2
0x3f9 EXP
0x3fa PUSH4 0xffffffff
0x3ff DUP5
0x400 AND
0x401 MUL
0x402 DUP2
0x403 MSTORE
0x404 PUSH1 0x4
0x406 DUP2
0x407 ADD
0x408 SWAP2
0x409 SWAP1
0x40a SWAP2
0x40b MSTORE
0x40c PUSH1 0x24
0x40e ADD
0x40f PUSH1 0x0
0x411 PUSH1 0x40
0x413 MLOAD
0x414 DUP1
0x415 DUP4
0x416 SUB
0x417 DUP2
0x418 PUSH1 0x0
0x41a DUP8
0x41b DUP1
0x41c EXTCODESIZE
0x41d ISZERO
0x41e ISZERO
0x41f PUSH2 0x427
0x422 JUMPI
---
0x3df: JUMPDEST 
0x3e0: V388 = 0x3
0x3e2: V389 = S[0x3]
0x3e3: V390 = 0x1
0x3e5: V391 = 0xa0
0x3e7: V392 = 0x2
0x3e9: V393 = EXP 0x2 0xa0
0x3ea: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3eb: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x3ec: V396 = 0xea7f7a59
0x3f2: V397 = 0x40
0x3f4: V398 = M[0x40]
0x3f5: V399 = 0xe0
0x3f7: V400 = 0x2
0x3f9: V401 = EXP 0x2 0xe0
0x3fa: V402 = 0xffffffff
0x400: V403 = AND 0xea7f7a59 0xffffffff
0x401: V404 = MUL 0xea7f7a59 0x100000000000000000000000000000000000000000000000000000000
0x403: M[V398] = 0xea7f7a5900000000000000000000000000000000000000000000000000000000
0x404: V405 = 0x4
0x407: V406 = ADD V398 0x4
0x40b: M[V406] = V147
0x40c: V407 = 0x24
0x40e: V408 = ADD 0x24 V398
0x40f: V409 = 0x0
0x411: V410 = 0x40
0x413: V411 = M[0x40]
0x416: V412 = SUB V408 V411
0x418: V413 = 0x0
0x41c: V414 = EXTCODESIZE V395
0x41d: V415 = ISZERO V414
0x41e: V416 = ISZERO V415
0x41f: V417 = 0x427
0x422: JUMPI 0x427 V416
---
Entry stack: [V12, 0xed, V147]
Stack pops: 1
Stack additions: [S0, V395, 0xea7f7a59, V408, 0x0, V411, V412, V411, 0x0, V395]
Exit stack: [V12, 0xed, V147, V395, 0xea7f7a59, V408, 0x0, V411, V412, V411, 0x0, V395]

================================

Block 0x423
[0x423:0x426]
---
Predecessors: [0x3df]
Successors: []
---
0x423 PUSH1 0x0
0x425 DUP1
0x426 REVERT
---
0x423: V418 = 0x0
0x426: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V147, V395, 0xea7f7a59, V408, 0x0, V411, V412, V411, 0x0, V395]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V147, V395, 0xea7f7a59, V408, 0x0, V411, V412, V411, 0x0, V395]

================================

Block 0x427
[0x427:0x433]
---
Predecessors: [0x3df]
Successors: [0x434, 0x438]
---
0x427 JUMPDEST
0x428 PUSH2 0x2c6
0x42b GAS
0x42c SUB
0x42d CALL
0x42e ISZERO
0x42f ISZERO
0x430 PUSH2 0x438
0x433 JUMPI
---
0x427: JUMPDEST 
0x428: V419 = 0x2c6
0x42b: V420 = GAS
0x42c: V421 = SUB V420 0x2c6
0x42d: V422 = CALL V421 V395 0x0 V411 V412 V411 0x0
0x42e: V423 = ISZERO V422
0x42f: V424 = ISZERO V423
0x430: V425 = 0x438
0x433: JUMPI 0x438 V424
---
Entry stack: [V12, 0xed, V147, V395, 0xea7f7a59, V408, 0x0, V411, V412, V411, 0x0, V395]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xed, V147, V395, 0xea7f7a59, V408]

================================

Block 0x434
[0x434:0x437]
---
Predecessors: [0x427]
Successors: []
---
0x434 PUSH1 0x0
0x436 DUP1
0x437 REVERT
---
0x434: V426 = 0x0
0x437: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V147, V395, 0xea7f7a59, V408]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V147, V395, 0xea7f7a59, V408]

================================

Block 0x438
[0x438:0x43b]
---
Predecessors: [0x427]
Successors: [0x43c]
---
0x438 JUMPDEST
0x439 POP
0x43a POP
0x43b POP
---
0x438: JUMPDEST 
---
Entry stack: [V12, 0xed, V147, V395, 0xea7f7a59, V408]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xed, V147]

================================

Block 0x43c
[0x43c:0x43e]
---
Predecessors: [0x438]
Successors: [0xed]
---
0x43c JUMPDEST
0x43d POP
0x43e JUMP
---
0x43c: JUMPDEST 
0x43e: JUMP 0xed
---
Entry stack: [V12, 0xed, V147]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x43f
[0x43f:0x456]
---
Predecessors: [0x1d3]
Successors: [0x457, 0x46a]
---
0x43f JUMPDEST
0x440 PUSH1 0x0
0x442 SLOAD
0x443 CALLER
0x444 PUSH1 0x1
0x446 PUSH1 0xa0
0x448 PUSH1 0x2
0x44a EXP
0x44b SUB
0x44c SWAP1
0x44d DUP2
0x44e AND
0x44f SWAP2
0x450 AND
0x451 EQ
0x452 DUP1
0x453 PUSH2 0x46a
0x456 JUMPI
---
0x43f: JUMPDEST 
0x440: V427 = 0x0
0x442: V428 = S[0x0]
0x443: V429 = CALLER
0x444: V430 = 0x1
0x446: V431 = 0xa0
0x448: V432 = 0x2
0x44a: V433 = EXP 0x2 0xa0
0x44b: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44e: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x450: V436 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x451: V437 = EQ V436 V435
0x453: V438 = 0x46a
0x456: JUMPI 0x46a V437
---
Entry stack: [V12, 0xed, V155, V157, V159, V161]
Stack pops: 0
Stack additions: [V437]
Exit stack: [V12, 0xed, V155, V157, V159, V161, V437]

================================

Block 0x457
[0x457:0x469]
---
Predecessors: [0x43f]
Successors: [0x46a]
---
0x457 POP
0x458 PUSH1 0x1
0x45a SLOAD
0x45b CALLER
0x45c PUSH1 0x1
0x45e PUSH1 0xa0
0x460 PUSH1 0x2
0x462 EXP
0x463 SUB
0x464 SWAP1
0x465 DUP2
0x466 AND
0x467 SWAP2
0x468 AND
0x469 EQ
---
0x458: V439 = 0x1
0x45a: V440 = S[0x1]
0x45b: V441 = CALLER
0x45c: V442 = 0x1
0x45e: V443 = 0xa0
0x460: V444 = 0x2
0x462: V445 = EXP 0x2 0xa0
0x463: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x466: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x468: V448 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x469: V449 = EQ V448 V447
---
Entry stack: [V12, 0xed, V155, V157, V159, V161, V437]
Stack pops: 1
Stack additions: [V449]
Exit stack: [V12, 0xed, V155, V157, V159, V161, V449]

================================

Block 0x46a
[0x46a:0x470]
---
Predecessors: [0x43f, 0x457]
Successors: [0x471, 0x475]
---
0x46a JUMPDEST
0x46b ISZERO
0x46c ISZERO
0x46d PUSH2 0x475
0x470 JUMPI
---
0x46a: JUMPDEST 
0x46b: V450 = ISZERO S0
0x46c: V451 = ISZERO V450
0x46d: V452 = 0x475
0x470: JUMPI 0x475 V451
---
Entry stack: [V12, 0xed, V155, V157, V159, V161, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xed, V155, V157, V159, V161]

================================

Block 0x471
[0x471:0x474]
---
Predecessors: [0x46a]
Successors: []
---
0x471 PUSH1 0x0
0x473 DUP1
0x474 REVERT
---
0x471: V453 = 0x0
0x474: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V155, V157, V159, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V155, V157, V159, V161]

================================

Block 0x475
[0x475:0x4cd]
---
Predecessors: [0x46a]
Successors: [0x4ce, 0x4d2]
---
0x475 JUMPDEST
0x476 PUSH1 0x3
0x478 SLOAD
0x479 PUSH1 0x1
0x47b PUSH1 0xa0
0x47d PUSH1 0x2
0x47f EXP
0x480 SUB
0x481 AND
0x482 PUSH4 0xb105126f
0x487 DUP6
0x488 DUP1
0x489 DUP7
0x48a DUP7
0x48b DUP7
0x48c PUSH1 0x40
0x48e MLOAD
0x48f PUSH1 0xe0
0x491 PUSH1 0x2
0x493 EXP
0x494 PUSH4 0xffffffff
0x499 DUP9
0x49a AND
0x49b MUL
0x49c DUP2
0x49d MSTORE
0x49e PUSH1 0x4
0x4a0 DUP2
0x4a1 ADD
0x4a2 SWAP5
0x4a3 SWAP1
0x4a4 SWAP5
0x4a5 MSTORE
0x4a6 PUSH1 0x24
0x4a8 DUP5
0x4a9 ADD
0x4aa SWAP3
0x4ab SWAP1
0x4ac SWAP3
0x4ad MSTORE
0x4ae PUSH1 0x44
0x4b0 DUP4
0x4b1 ADD
0x4b2 MSTORE
0x4b3 PUSH1 0x64
0x4b5 DUP3
0x4b6 ADD
0x4b7 MSTORE
0x4b8 PUSH1 0x84
0x4ba ADD
0x4bb PUSH1 0x0
0x4bd PUSH1 0x40
0x4bf MLOAD
0x4c0 DUP1
0x4c1 DUP4
0x4c2 SUB
0x4c3 DUP2
0x4c4 DUP6
0x4c5 DUP9
0x4c6 DUP1
0x4c7 EXTCODESIZE
0x4c8 ISZERO
0x4c9 ISZERO
0x4ca PUSH2 0x4d2
0x4cd JUMPI
---
0x475: JUMPDEST 
0x476: V454 = 0x3
0x478: V455 = S[0x3]
0x479: V456 = 0x1
0x47b: V457 = 0xa0
0x47d: V458 = 0x2
0x47f: V459 = EXP 0x2 0xa0
0x480: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x481: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x482: V462 = 0xb105126f
0x48c: V463 = 0x40
0x48e: V464 = M[0x40]
0x48f: V465 = 0xe0
0x491: V466 = 0x2
0x493: V467 = EXP 0x2 0xe0
0x494: V468 = 0xffffffff
0x49a: V469 = AND 0xb105126f 0xffffffff
0x49b: V470 = MUL 0xb105126f 0x100000000000000000000000000000000000000000000000000000000
0x49d: M[V464] = 0xb105126f00000000000000000000000000000000000000000000000000000000
0x49e: V471 = 0x4
0x4a1: V472 = ADD V464 0x4
0x4a5: M[V472] = V155
0x4a6: V473 = 0x24
0x4a9: V474 = ADD V464 0x24
0x4ad: M[V474] = V157
0x4ae: V475 = 0x44
0x4b1: V476 = ADD V464 0x44
0x4b2: M[V476] = V159
0x4b3: V477 = 0x64
0x4b6: V478 = ADD V464 0x64
0x4b7: M[V478] = V161
0x4b8: V479 = 0x84
0x4ba: V480 = ADD 0x84 V464
0x4bb: V481 = 0x0
0x4bd: V482 = 0x40
0x4bf: V483 = M[0x40]
0x4c2: V484 = SUB V480 V483
0x4c7: V485 = EXTCODESIZE V461
0x4c8: V486 = ISZERO V485
0x4c9: V487 = ISZERO V486
0x4ca: V488 = 0x4d2
0x4cd: JUMPI 0x4d2 V487
---
Entry stack: [V12, 0xed, V155, V157, V159, V161]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V461, 0xb105126f, S3, V480, 0x0, V483, V484, V483, S3, V461]
Exit stack: [V12, 0xed, V155, V157, V159, V161, V461, 0xb105126f, V155, V480, 0x0, V483, V484, V483, V155, V461]

================================

Block 0x4ce
[0x4ce:0x4d1]
---
Predecessors: [0x475]
Successors: []
---
0x4ce PUSH1 0x0
0x4d0 DUP1
0x4d1 REVERT
---
0x4ce: V489 = 0x0
0x4d1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V155, V157, V159, V161, V461, 0xb105126f, V155, V480, 0x0, V483, V484, V483, V155, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V155, V157, V159, V161, V461, 0xb105126f, V155, V480, 0x0, V483, V484, V483, V155, V461]

================================

Block 0x4d2
[0x4d2:0x4de]
---
Predecessors: [0x475]
Successors: [0x4df, 0x4e3]
---
0x4d2 JUMPDEST
0x4d3 PUSH2 0x25ee
0x4d6 GAS
0x4d7 SUB
0x4d8 CALL
0x4d9 ISZERO
0x4da ISZERO
0x4db PUSH2 0x4e3
0x4de JUMPI
---
0x4d2: JUMPDEST 
0x4d3: V490 = 0x25ee
0x4d6: V491 = GAS
0x4d7: V492 = SUB V491 0x25ee
0x4d8: V493 = CALL V492 V461 V155 V483 V484 V483 0x0
0x4d9: V494 = ISZERO V493
0x4da: V495 = ISZERO V494
0x4db: V496 = 0x4e3
0x4de: JUMPI 0x4e3 V495
---
Entry stack: [V12, 0xed, V155, V157, V159, V161, V461, 0xb105126f, V155, V480, 0x0, V483, V484, V483, V155, V461]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xed, V155, V157, V159, V161, V461, 0xb105126f, V155, V480]

================================

Block 0x4df
[0x4df:0x4e2]
---
Predecessors: [0x4d2]
Successors: []
---
0x4df PUSH1 0x0
0x4e1 DUP1
0x4e2 REVERT
---
0x4df: V497 = 0x0
0x4e2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V155, V157, V159, V161, V461, 0xb105126f, V155, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V155, V157, V159, V161, V461, 0xb105126f, V155, V480]

================================

Block 0x4e3
[0x4e3:0x4e7]
---
Predecessors: [0x4d2]
Successors: [0x4e8]
---
0x4e3 JUMPDEST
0x4e4 POP
0x4e5 POP
0x4e6 POP
0x4e7 POP
---
0x4e3: JUMPDEST 
---
Entry stack: [V12, 0xed, V155, V157, V159, V161, V461, 0xb105126f, V155, V480]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xed, V155, V157, V159, V161]

================================

Block 0x4e8
[0x4e8:0x4e8]
---
Predecessors: [0x4e3]
Successors: [0x4e9]
---
0x4e8 JUMPDEST
---
0x4e8: JUMPDEST 
---
Entry stack: [V12, 0xed, V155, V157, V159, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V155, V157, V159, V161]

================================

Block 0x4e9
[0x4e9:0x4ee]
---
Predecessors: [0x4e8]
Successors: [0xed]
---
0x4e9 JUMPDEST
0x4ea POP
0x4eb POP
0x4ec POP
0x4ed POP
0x4ee JUMP
---
0x4e9: JUMPDEST 
0x4ee: JUMP 0xed
---
Entry stack: [V12, 0xed, V155, V157, V159, V161]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ef
[0x4ef:0x505]
---
Predecessors: [0x1f4]
Successors: [0x506, 0x50a]
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x0
0x4f2 SLOAD
0x4f3 CALLER
0x4f4 PUSH1 0x1
0x4f6 PUSH1 0xa0
0x4f8 PUSH1 0x2
0x4fa EXP
0x4fb SUB
0x4fc SWAP1
0x4fd DUP2
0x4fe AND
0x4ff SWAP2
0x500 AND
0x501 EQ
0x502 PUSH2 0x50a
0x505 JUMPI
---
0x4ef: JUMPDEST 
0x4f0: V498 = 0x0
0x4f2: V499 = S[0x0]
0x4f3: V500 = CALLER
0x4f4: V501 = 0x1
0x4f6: V502 = 0xa0
0x4f8: V503 = 0x2
0x4fa: V504 = EXP 0x2 0xa0
0x4fb: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fe: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x500: V507 = AND V499 0xffffffffffffffffffffffffffffffffffffffff
0x501: V508 = EQ V507 V506
0x502: V509 = 0x50a
0x505: JUMPI 0x50a V508
---
Entry stack: [V12, 0xed, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V175]

================================

Block 0x506
[0x506:0x509]
---
Predecessors: [0x4ef]
Successors: []
---
0x506 PUSH1 0x0
0x508 DUP1
0x509 REVERT
---
0x506: V510 = 0x0
0x509: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V175]

================================

Block 0x50a
[0x50a:0x525]
---
Predecessors: [0x4ef]
Successors: [0x526]
---
0x50a JUMPDEST
0x50b PUSH1 0x2
0x50d DUP1
0x50e SLOAD
0x50f PUSH1 0x1
0x511 PUSH1 0xa0
0x513 PUSH1 0x2
0x515 EXP
0x516 SUB
0x517 NOT
0x518 AND
0x519 PUSH1 0x1
0x51b PUSH1 0xa0
0x51d PUSH1 0x2
0x51f EXP
0x520 SUB
0x521 DUP4
0x522 AND
0x523 OR
0x524 SWAP1
0x525 SSTORE
---
0x50a: JUMPDEST 
0x50b: V511 = 0x2
0x50e: V512 = S[0x2]
0x50f: V513 = 0x1
0x511: V514 = 0xa0
0x513: V515 = 0x2
0x515: V516 = EXP 0x2 0xa0
0x516: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V518 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x518: V519 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V512
0x519: V520 = 0x1
0x51b: V521 = 0xa0
0x51d: V522 = 0x2
0x51f: V523 = EXP 0x2 0xa0
0x520: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x522: V525 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x523: V526 = OR V525 V519
0x525: S[0x2] = V526
---
Entry stack: [V12, 0xed, V175]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xed, V175]

================================

Block 0x526
[0x526:0x526]
---
Predecessors: [0x50a]
Successors: [0x527]
---
0x526 JUMPDEST
---
0x526: JUMPDEST 
---
Entry stack: [V12, 0xed, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V175]

================================

Block 0x527
[0x527:0x529]
---
Predecessors: [0x526]
Successors: [0xed]
---
0x527 JUMPDEST
0x528 POP
0x529 JUMP
---
0x527: JUMPDEST 
0x529: JUMP 0xed
---
Entry stack: [V12, 0xed, V175]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x52a
[0x52a:0x538]
---
Predecessors: [0x215]
Successors: [0x150]
---
0x52a JUMPDEST
0x52b PUSH1 0x2
0x52d SLOAD
0x52e PUSH1 0x1
0x530 PUSH1 0xa0
0x532 PUSH1 0x2
0x534 EXP
0x535 SUB
0x536 AND
0x537 DUP2
0x538 JUMP
---
0x52a: JUMPDEST 
0x52b: V527 = 0x2
0x52d: V528 = S[0x2]
0x52e: V529 = 0x1
0x530: V530 = 0xa0
0x532: V531 = 0x2
0x534: V532 = EXP 0x2 0xa0
0x535: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x536: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x538: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V534]
Exit stack: [V12, 0x150, V534]

================================

Block 0x539
[0x539:0x582]
---
Predecessors: [0x244]
Successors: [0x583, 0x587]
---
0x539 JUMPDEST
0x53a PUSH1 0x3
0x53c SLOAD
0x53d PUSH1 0x0
0x53f SWAP1
0x540 PUSH1 0x1
0x542 PUSH1 0xa0
0x544 PUSH1 0x2
0x546 EXP
0x547 SUB
0x548 ADDRESS
0x549 DUP2
0x54a AND
0x54b SWAP2
0x54c AND
0x54d PUSH4 0xf851a440
0x552 DUP4
0x553 PUSH1 0x40
0x555 MLOAD
0x556 PUSH1 0x20
0x558 ADD
0x559 MSTORE
0x55a PUSH1 0x40
0x55c MLOAD
0x55d DUP2
0x55e PUSH4 0xffffffff
0x563 AND
0x564 PUSH1 0xe0
0x566 PUSH1 0x2
0x568 EXP
0x569 MUL
0x56a DUP2
0x56b MSTORE
0x56c PUSH1 0x4
0x56e ADD
0x56f PUSH1 0x20
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 DUP4
0x576 SUB
0x577 DUP2
0x578 PUSH1 0x0
0x57a DUP8
0x57b DUP1
0x57c EXTCODESIZE
0x57d ISZERO
0x57e ISZERO
0x57f PUSH2 0x587
0x582 JUMPI
---
0x539: JUMPDEST 
0x53a: V535 = 0x3
0x53c: V536 = S[0x3]
0x53d: V537 = 0x0
0x540: V538 = 0x1
0x542: V539 = 0xa0
0x544: V540 = 0x2
0x546: V541 = EXP 0x2 0xa0
0x547: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x548: V543 = ADDRESS
0x54a: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V543
0x54c: V545 = AND V536 0xffffffffffffffffffffffffffffffffffffffff
0x54d: V546 = 0xf851a440
0x553: V547 = 0x40
0x555: V548 = M[0x40]
0x556: V549 = 0x20
0x558: V550 = ADD 0x20 V548
0x559: M[V550] = 0x0
0x55a: V551 = 0x40
0x55c: V552 = M[0x40]
0x55e: V553 = 0xffffffff
0x563: V554 = AND 0xffffffff 0xf851a440
0x564: V555 = 0xe0
0x566: V556 = 0x2
0x568: V557 = EXP 0x2 0xe0
0x569: V558 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf851a440
0x56b: M[V552] = 0xf851a44000000000000000000000000000000000000000000000000000000000
0x56c: V559 = 0x4
0x56e: V560 = ADD 0x4 V552
0x56f: V561 = 0x20
0x571: V562 = 0x40
0x573: V563 = M[0x40]
0x576: V564 = SUB V560 V563
0x578: V565 = 0x0
0x57c: V566 = EXTCODESIZE V545
0x57d: V567 = ISZERO V566
0x57e: V568 = ISZERO V567
0x57f: V569 = 0x587
0x582: JUMPI 0x587 V568
---
Entry stack: [V12, 0x24c]
Stack pops: 0
Stack additions: [0x0, V544, V545, 0xf851a440, V560, 0x20, V563, V564, V563, 0x0, V545]
Exit stack: [V12, 0x24c, 0x0, V544, V545, 0xf851a440, V560, 0x20, V563, V564, V563, 0x0, V545]

================================

Block 0x583
[0x583:0x586]
---
Predecessors: [0x539]
Successors: []
---
0x583 PUSH1 0x0
0x585 DUP1
0x586 REVERT
---
0x583: V570 = 0x0
0x586: REVERT 0x0 0x0
---
Entry stack: [V12, 0x24c, 0x0, V544, V545, 0xf851a440, V560, 0x20, V563, V564, V563, 0x0, V545]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x24c, 0x0, V544, V545, 0xf851a440, V560, 0x20, V563, V564, V563, 0x0, V545]

================================

Block 0x587
[0x587:0x593]
---
Predecessors: [0x539]
Successors: [0x594, 0x598]
---
0x587 JUMPDEST
0x588 PUSH2 0x2c6
0x58b GAS
0x58c SUB
0x58d CALL
0x58e ISZERO
0x58f ISZERO
0x590 PUSH2 0x598
0x593 JUMPI
---
0x587: JUMPDEST 
0x588: V571 = 0x2c6
0x58b: V572 = GAS
0x58c: V573 = SUB V572 0x2c6
0x58d: V574 = CALL V573 V545 0x0 V563 V564 V563 0x20
0x58e: V575 = ISZERO V574
0x58f: V576 = ISZERO V575
0x590: V577 = 0x598
0x593: JUMPI 0x598 V576
---
Entry stack: [V12, 0x24c, 0x0, V544, V545, 0xf851a440, V560, 0x20, V563, V564, V563, 0x0, V545]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x24c, 0x0, V544, V545, 0xf851a440, V560]

================================

Block 0x594
[0x594:0x597]
---
Predecessors: [0x587]
Successors: []
---
0x594 PUSH1 0x0
0x596 DUP1
0x597 REVERT
---
0x594: V578 = 0x0
0x597: REVERT 0x0 0x0
---
Entry stack: [V12, 0x24c, 0x0, V544, V545, 0xf851a440, V560]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x24c, 0x0, V544, V545, 0xf851a440, V560]

================================

Block 0x598
[0x598:0x5b2]
---
Predecessors: [0x587]
Successors: [0x5b3, 0x5ba]
---
0x598 JUMPDEST
0x599 POP
0x59a POP
0x59b POP
0x59c PUSH1 0x40
0x59e MLOAD
0x59f DUP1
0x5a0 MLOAD
0x5a1 SWAP1
0x5a2 POP
0x5a3 PUSH1 0x1
0x5a5 PUSH1 0xa0
0x5a7 PUSH1 0x2
0x5a9 EXP
0x5aa SUB
0x5ab AND
0x5ac EQ
0x5ad ISZERO
0x5ae ISZERO
0x5af PUSH2 0x5ba
0x5b2 JUMPI
---
0x598: JUMPDEST 
0x59c: V579 = 0x40
0x59e: V580 = M[0x40]
0x5a0: V581 = M[V580]
0x5a3: V582 = 0x1
0x5a5: V583 = 0xa0
0x5a7: V584 = 0x2
0x5a9: V585 = EXP 0x2 0xa0
0x5aa: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ab: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x5ac: V588 = EQ V587 V544
0x5ad: V589 = ISZERO V588
0x5ae: V590 = ISZERO V589
0x5af: V591 = 0x5ba
0x5b2: JUMPI 0x5ba V590
---
Entry stack: [V12, 0x24c, 0x0, V544, V545, 0xf851a440, V560]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x24c, 0x0]

================================

Block 0x5b3
[0x5b3:0x5b9]
---
Predecessors: [0x598]
Successors: [0x61f]
---
0x5b3 POP
0x5b4 PUSH1 0x0
0x5b6 PUSH2 0x61f
0x5b9 JUMP
---
0x5b4: V592 = 0x0
0x5b6: V593 = 0x61f
0x5b9: JUMP 0x61f
---
Entry stack: [V12, 0x24c, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x24c, 0x0]

================================

Block 0x5ba
[0x5ba:0x5fd]
---
Predecessors: [0x598]
Successors: [0x5fe, 0x602]
---
0x5ba JUMPDEST
0x5bb PUSH1 0x3
0x5bd SLOAD
0x5be PUSH1 0x1
0x5c0 PUSH1 0xa0
0x5c2 PUSH1 0x2
0x5c4 EXP
0x5c5 SUB
0x5c6 AND
0x5c7 PUSH4 0xbca7e96b
0x5cc PUSH1 0x0
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 MSTORE
0x5d5 PUSH1 0x40
0x5d7 MLOAD
0x5d8 DUP2
0x5d9 PUSH4 0xffffffff
0x5de AND
0x5df PUSH1 0xe0
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 MUL
0x5e5 DUP2
0x5e6 MSTORE
0x5e7 PUSH1 0x4
0x5e9 ADD
0x5ea PUSH1 0x20
0x5ec PUSH1 0x40
0x5ee MLOAD
0x5ef DUP1
0x5f0 DUP4
0x5f1 SUB
0x5f2 DUP2
0x5f3 PUSH1 0x0
0x5f5 DUP8
0x5f6 DUP1
0x5f7 EXTCODESIZE
0x5f8 ISZERO
0x5f9 ISZERO
0x5fa PUSH2 0x602
0x5fd JUMPI
---
0x5ba: JUMPDEST 
0x5bb: V594 = 0x3
0x5bd: V595 = S[0x3]
0x5be: V596 = 0x1
0x5c0: V597 = 0xa0
0x5c2: V598 = 0x2
0x5c4: V599 = EXP 0x2 0xa0
0x5c5: V600 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c6: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V595
0x5c7: V602 = 0xbca7e96b
0x5cc: V603 = 0x0
0x5ce: V604 = 0x40
0x5d0: V605 = M[0x40]
0x5d1: V606 = 0x20
0x5d3: V607 = ADD 0x20 V605
0x5d4: M[V607] = 0x0
0x5d5: V608 = 0x40
0x5d7: V609 = M[0x40]
0x5d9: V610 = 0xffffffff
0x5de: V611 = AND 0xffffffff 0xbca7e96b
0x5df: V612 = 0xe0
0x5e1: V613 = 0x2
0x5e3: V614 = EXP 0x2 0xe0
0x5e4: V615 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xbca7e96b
0x5e6: M[V609] = 0xbca7e96b00000000000000000000000000000000000000000000000000000000
0x5e7: V616 = 0x4
0x5e9: V617 = ADD 0x4 V609
0x5ea: V618 = 0x20
0x5ec: V619 = 0x40
0x5ee: V620 = M[0x40]
0x5f1: V621 = SUB V617 V620
0x5f3: V622 = 0x0
0x5f7: V623 = EXTCODESIZE V601
0x5f8: V624 = ISZERO V623
0x5f9: V625 = ISZERO V624
0x5fa: V626 = 0x602
0x5fd: JUMPI 0x602 V625
---
Entry stack: [V12, 0x24c, 0x0]
Stack pops: 0
Stack additions: [V601, 0xbca7e96b, V617, 0x20, V620, V621, V620, 0x0, V601]
Exit stack: [V12, 0x24c, 0x0, V601, 0xbca7e96b, V617, 0x20, V620, V621, V620, 0x0, V601]

================================

Block 0x5fe
[0x5fe:0x601]
---
Predecessors: [0x5ba]
Successors: []
---
0x5fe PUSH1 0x0
0x600 DUP1
0x601 REVERT
---
0x5fe: V627 = 0x0
0x601: REVERT 0x0 0x0
---
Entry stack: [V12, 0x24c, 0x0, V601, 0xbca7e96b, V617, 0x20, V620, V621, V620, 0x0, V601]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x24c, 0x0, V601, 0xbca7e96b, V617, 0x20, V620, V621, V620, 0x0, V601]

================================

Block 0x602
[0x602:0x60e]
---
Predecessors: [0x5ba]
Successors: [0x60f, 0x613]
---
0x602 JUMPDEST
0x603 PUSH2 0x2c6
0x606 GAS
0x607 SUB
0x608 CALL
0x609 ISZERO
0x60a ISZERO
0x60b PUSH2 0x613
0x60e JUMPI
---
0x602: JUMPDEST 
0x603: V628 = 0x2c6
0x606: V629 = GAS
0x607: V630 = SUB V629 0x2c6
0x608: V631 = CALL V630 V601 0x0 V620 V621 V620 0x20
0x609: V632 = ISZERO V631
0x60a: V633 = ISZERO V632
0x60b: V634 = 0x613
0x60e: JUMPI 0x613 V633
---
Entry stack: [V12, 0x24c, 0x0, V601, 0xbca7e96b, V617, 0x20, V620, V621, V620, 0x0, V601]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x24c, 0x0, V601, 0xbca7e96b, V617]

================================

Block 0x60f
[0x60f:0x612]
---
Predecessors: [0x602]
Successors: []
---
0x60f PUSH1 0x0
0x611 DUP1
0x612 REVERT
---
0x60f: V635 = 0x0
0x612: REVERT 0x0 0x0
---
Entry stack: [V12, 0x24c, 0x0, V601, 0xbca7e96b, V617]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x24c, 0x0, V601, 0xbca7e96b, V617]

================================

Block 0x613
[0x613:0x61e]
---
Predecessors: [0x602]
Successors: [0x61f]
---
0x613 JUMPDEST
0x614 POP
0x615 POP
0x616 POP
0x617 PUSH1 0x40
0x619 MLOAD
0x61a DUP1
0x61b MLOAD
0x61c SWAP2
0x61d POP
0x61e POP
---
0x613: JUMPDEST 
0x617: V636 = 0x40
0x619: V637 = M[0x40]
0x61b: V638 = M[V637]
---
Entry stack: [V12, 0x24c, 0x0, V601, 0xbca7e96b, V617]
Stack pops: 4
Stack additions: [V638]
Exit stack: [V12, 0x24c, V638]

================================

Block 0x61f
[0x61f:0x621]
---
Predecessors: [0x5b3, 0x613]
Successors: [0x24c]
---
0x61f JUMPDEST
0x620 SWAP1
0x621 JUMP
---
0x61f: JUMPDEST 
0x621: JUMP 0x24c
---
Entry stack: [V12, 0x24c, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x622
[0x622:0x638]
---
Predecessors: [0x26b]
Successors: [0x639, 0x63d]
---
0x622 JUMPDEST
0x623 PUSH1 0x0
0x625 SLOAD
0x626 CALLER
0x627 PUSH1 0x1
0x629 PUSH1 0xa0
0x62b PUSH1 0x2
0x62d EXP
0x62e SUB
0x62f SWAP1
0x630 DUP2
0x631 AND
0x632 SWAP2
0x633 AND
0x634 EQ
0x635 PUSH2 0x63d
0x638 JUMPI
---
0x622: JUMPDEST 
0x623: V639 = 0x0
0x625: V640 = S[0x0]
0x626: V641 = CALLER
0x627: V642 = 0x1
0x629: V643 = 0xa0
0x62b: V644 = 0x2
0x62d: V645 = EXP 0x2 0xa0
0x62e: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x631: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x633: V648 = AND V640 0xffffffffffffffffffffffffffffffffffffffff
0x634: V649 = EQ V648 V647
0x635: V650 = 0x63d
0x638: JUMPI 0x63d V649
---
Entry stack: [V12, 0xed, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V223]

================================

Block 0x639
[0x639:0x63c]
---
Predecessors: [0x622]
Successors: []
---
0x639 PUSH1 0x0
0x63b DUP1
0x63c REVERT
---
0x639: V651 = 0x0
0x63c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xed, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V223]

================================

Block 0x63d
[0x63d:0x658]
---
Predecessors: [0x622]
Successors: [0x659]
---
0x63d JUMPDEST
0x63e PUSH1 0x3
0x640 DUP1
0x641 SLOAD
0x642 PUSH1 0x1
0x644 PUSH1 0xa0
0x646 PUSH1 0x2
0x648 EXP
0x649 SUB
0x64a NOT
0x64b AND
0x64c PUSH1 0x1
0x64e PUSH1 0xa0
0x650 PUSH1 0x2
0x652 EXP
0x653 SUB
0x654 DUP4
0x655 AND
0x656 OR
0x657 SWAP1
0x658 SSTORE
---
0x63d: JUMPDEST 
0x63e: V652 = 0x3
0x641: V653 = S[0x3]
0x642: V654 = 0x1
0x644: V655 = 0xa0
0x646: V656 = 0x2
0x648: V657 = EXP 0x2 0xa0
0x649: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64a: V659 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x64b: V660 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V653
0x64c: V661 = 0x1
0x64e: V662 = 0xa0
0x650: V663 = 0x2
0x652: V664 = EXP 0x2 0xa0
0x653: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x655: V666 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x656: V667 = OR V666 V660
0x658: S[0x3] = V667
---
Entry stack: [V12, 0xed, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xed, V223]

================================

Block 0x659
[0x659:0x659]
---
Predecessors: [0x63d]
Successors: [0x65a]
---
0x659 JUMPDEST
---
0x659: JUMPDEST 
---
Entry stack: [V12, 0xed, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xed, V223]

================================

Block 0x65a
[0x65a:0x65c]
---
Predecessors: [0x659]
Successors: [0xed]
---
0x65a JUMPDEST
0x65b POP
0x65c JUMP
---
0x65a: JUMPDEST 
0x65c: JUMP 0xed
---
Entry stack: [V12, 0xed, V223]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x65d
[0x65d:0x66b]
---
Predecessors: [0x28c]
Successors: [0x150]
---
0x65d JUMPDEST
0x65e PUSH1 0x1
0x660 SLOAD
0x661 PUSH1 0x1
0x663 PUSH1 0xa0
0x665 PUSH1 0x2
0x667 EXP
0x668 SUB
0x669 AND
0x66a DUP2
0x66b JUMP
---
0x65d: JUMPDEST 
0x65e: V668 = 0x1
0x660: V669 = S[0x1]
0x661: V670 = 0x1
0x663: V671 = 0xa0
0x665: V672 = 0x2
0x667: V673 = EXP 0x2 0xa0
0x668: V674 = SUB 0x10000000000000000000000000000000000000000 0x1
0x669: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0x66b: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V675]
Exit stack: [V12, 0x150, V675]

================================

Block 0x66c
[0x66c:0x6a0]
---
Predecessors: []
Successors: []
---
0x66c STOP
0x66d LOG1
0x66e PUSH6 0x627a7a723058
0x675 SHA3
0x676 RETURNDATACOPY
0x677 MISSING 0x2e
0x678 DUP5
0x679 SWAP11
0x67a ISZERO
0x67b MISSING 0xb7
0x67c MISSING 0xaf
0x67d XOR
0x67e SWAP9
0x67f MISSING 0xbf
0x680 POP
0x681 MISSING 0x27
0x682 DUP2
0x683 MISSING 0xd3
0x684 MISSING 0x22
0x685 MISSING 0xaf
0x686 MISSING 0xab
0x687 MISSING 0x2d
0x688 PUSH24 0x8b2072a49d7e110a47c31ccf0a0029
---
0x66c: STOP 
0x66d: LOG S0 S1 S2
0x66e: V676 = 0x627a7a723058
0x675: V677 = SHA3 0x627a7a723058 S3
0x676: RETURNDATACOPY V677 S4 S5
0x677: MISSING 0x2e
0x67a: V678 = ISZERO S10
0x67b: MISSING 0xb7
0x67c: MISSING 0xaf
0x67d: V679 = XOR S0 S1
0x67f: MISSING 0xbf
0x681: MISSING 0x27
0x683: MISSING 0xd3
0x684: MISSING 0x22
0x685: MISSING 0xaf
0x686: MISSING 0xab
0x687: MISSING 0x2d
0x688: V680 = 0x8b2072a49d7e110a47c31ccf0a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V678, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S4, S10, S2, S3, S4, S5, S6, S7, S8, S9, V679, S1, S0, S1, 0x8b2072a49d7e110a47c31ccf0a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2b68b9c6
Entry block: 0xef
Exit block: 0x2c7
Body: 0xef, 0xf6, 0xfa, 0x2b0, 0x2c7, 0x2cb

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x104
Exit block: 0xed
Body: 0xed, 0x104, 0x10b, 0x10f, 0x2dc, 0x2f3, 0x2f7, 0x326, 0x32a, 0x32b, 0x32c

Function 2:
Public function signature: 0x704b6c02
Entry block: 0x11c
Exit block: 0xed
Body: 0xed, 0x11c, 0x123, 0x127, 0x32f, 0x346, 0x34a, 0x366, 0x367

Function 3:
Public function signature: 0x7826bfa8
Entry block: 0x13d
Exit block: 0x150
Body: 0x13d, 0x144, 0x148, 0x150, 0x36a

Function 4:
Public function signature: 0x79ba5097
Entry block: 0x16c
Exit block: 0xed
Body: 0xed, 0x16c, 0x173, 0x177, 0x379, 0x38c, 0x390, 0x3a7, 0x3ab, 0x3ce

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x181
Exit block: 0x150
Body: 0x150, 0x181, 0x188, 0x18c, 0x3d0

Function 6:
Public function signature: 0x94081387
Entry block: 0x1b0
Exit block: 0xed
Body: 0xed, 0x1b0, 0x1b7, 0x1bb, 0x3df, 0x423, 0x427, 0x434, 0x438, 0x43c

Function 7:
Public function signature: 0xb105126f
Entry block: 0x1c8
Exit block: 0xed
Body: 0xed, 0x1c8, 0x1cf, 0x1d3, 0x43f, 0x457, 0x46a, 0x471, 0x475, 0x4ce, 0x4d2, 0x4df, 0x4e3, 0x4e8, 0x4e9

Function 8:
Public function signature: 0xb5ed298a
Entry block: 0x1e9
Exit block: 0xed
Body: 0xed, 0x1e9, 0x1f0, 0x1f4, 0x4ef, 0x506, 0x50a, 0x526, 0x527

Function 9:
Public function signature: 0xd153b60c
Entry block: 0x20a
Exit block: 0x150
Body: 0x150, 0x20a, 0x211, 0x215, 0x52a

Function 10:
Public function signature: 0xe1a27ad3
Entry block: 0x239
Exit block: 0x60f
Body: 0x239, 0x240, 0x244, 0x24c, 0x539, 0x583, 0x587, 0x594, 0x598, 0x5b3, 0x5ba, 0x5fe, 0x602, 0x60f, 0x613, 0x61f

Function 11:
Public function signature: 0xf298083b
Entry block: 0x260
Exit block: 0xed
Body: 0xed, 0x260, 0x267, 0x26b, 0x622, 0x639, 0x63d, 0x659, 0x65a

Function 12:
Public function signature: 0xf851a440
Entry block: 0x281
Exit block: 0x150
Body: 0x150, 0x281, 0x288, 0x28c, 0x65d

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0xed
Body: 0xa9, 0xad, 0xeb, 0xed

