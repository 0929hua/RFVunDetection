Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2e1a7d4d
0x3c EQ
0x3d PUSH2 0x7f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2e1a7d4d
0x3c: V13 = EQ 0x2e1a7d4d V11
0x3d: V14 = 0x7f
0x40: JUMPI 0x7f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xac]
---
0x41 DUP1
0x42 PUSH4 0x93e84cd9
0x47 EQ
0x48 PUSH2 0xac
0x4b JUMPI
---
0x42: V15 = 0x93e84cd9
0x47: V16 = EQ 0x93e84cd9 V11
0x48: V17 = 0xac
0x4b: JUMPI 0xac V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb6]
---
0x4c DUP1
0x4d PUSH4 0xa767a2db
0x52 EQ
0x53 PUSH2 0xb6
0x56 JUMPI
---
0x4d: V18 = 0xa767a2db
0x52: V19 = EQ 0xa767a2db V11
0x53: V20 = 0xb6
0x56: JUMPI 0xb6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe5]
---
0x57 DUP1
0x58 PUSH4 0xd56b2889
0x5d EQ
0x5e PUSH2 0xe5
0x61 JUMPI
---
0x58: V21 = 0xd56b2889
0x5d: V22 = EQ 0xd56b2889 V11
0x5e: V23 = 0xe5
0x61: JUMPI 0xe5 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x78]
---
Predecessors: [0x0, 0x57]
Successors: [0x79, 0x7d]
---
0x62 JUMPDEST
0x63 PUSH1 0x1
0x65 PUSH1 0x14
0x67 SWAP1
0x68 SLOAD
0x69 SWAP1
0x6a PUSH2 0x100
0x6d EXP
0x6e SWAP1
0x6f DIV
0x70 PUSH1 0xff
0x72 AND
0x73 ISZERO
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x62: JUMPDEST 
0x63: V24 = 0x1
0x65: V25 = 0x14
0x68: V26 = S[0x1]
0x6a: V27 = 0x100
0x6d: V28 = EXP 0x100 0x14
0x6f: V29 = DIV V26 0x10000000000000000000000000000000000000000
0x70: V30 = 0xff
0x72: V31 = AND 0xff V29
0x73: V32 = ISZERO V31
0x74: V33 = ISZERO V32
0x75: V34 = 0x7d
0x78: JUMPI 0x7d V33
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x62]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V35 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x62]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f
[0x7f:0x86]
---
Predecessors: [0xd]
Successors: [0x87, 0x8b]
---
0x7f JUMPDEST
0x80 CALLVALUE
0x81 DUP1
0x82 ISZERO
0x83 PUSH2 0x8b
0x86 JUMPI
---
0x7f: JUMPDEST 
0x80: V36 = CALLVALUE
0x82: V37 = ISZERO V36
0x83: V38 = 0x8b
0x86: JUMPI 0x8b V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x87
[0x87:0x8a]
---
Predecessors: [0x7f]
Successors: []
---
0x87 PUSH1 0x0
0x89 DUP1
0x8a REVERT
---
0x87: V39 = 0x0
0x8a: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x8b
[0x8b:0xa9]
---
Predecessors: [0x7f]
Successors: [0xfc]
---
0x8b JUMPDEST
0x8c POP
0x8d PUSH2 0xaa
0x90 PUSH1 0x4
0x92 DUP1
0x93 CALLDATASIZE
0x94 SUB
0x95 DUP2
0x96 ADD
0x97 SWAP1
0x98 DUP1
0x99 DUP1
0x9a CALLDATALOAD
0x9b SWAP1
0x9c PUSH1 0x20
0x9e ADD
0x9f SWAP1
0xa0 SWAP3
0xa1 SWAP2
0xa2 SWAP1
0xa3 POP
0xa4 POP
0xa5 POP
0xa6 PUSH2 0xfc
0xa9 JUMP
---
0x8b: JUMPDEST 
0x8d: V40 = 0xaa
0x90: V41 = 0x4
0x93: V42 = CALLDATASIZE
0x94: V43 = SUB V42 0x4
0x96: V44 = ADD 0x4 V43
0x9a: V45 = CALLDATALOAD 0x4
0x9c: V46 = 0x20
0x9e: V47 = ADD 0x20 0x4
0xa6: V48 = 0xfc
0xa9: JUMP 0xfc
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0xaa, V45]
Exit stack: [V11, 0xaa, V45]

================================

Block 0xaa
[0xaa:0xab]
---
Predecessors: [0x1b4]
Successors: []
---
0xaa JUMPDEST
0xab STOP
---
0xaa: JUMPDEST 
0xab: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xac
[0xac:0xb3]
---
Predecessors: [0x41]
Successors: [0x1b8]
---
0xac JUMPDEST
0xad PUSH2 0xb4
0xb0 PUSH2 0x1b8
0xb3 JUMP
---
0xac: JUMPDEST 
0xad: V49 = 0xb4
0xb0: V50 = 0x1b8
0xb3: JUMP 0x1b8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V11, 0xb4]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: [0x274]
Successors: []
---
0xb4 JUMPDEST
0xb5 STOP
---
0xb4: JUMPDEST 
0xb5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb6
[0xb6:0xbd]
---
Predecessors: [0x4c]
Successors: [0xbe, 0xc2]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 DUP1
0xb9 ISZERO
0xba PUSH2 0xc2
0xbd JUMPI
---
0xb6: JUMPDEST 
0xb7: V51 = CALLVALUE
0xb9: V52 = ISZERO V51
0xba: V53 = 0xc2
0xbd: JUMPI 0xc2 V52
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V51]
Exit stack: [V11, V51]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xb6]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V54 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V11, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V51]

================================

Block 0xc2
[0xc2:0xe2]
---
Predecessors: [0xb6]
Successors: [0x27b]
---
0xc2 JUMPDEST
0xc3 POP
0xc4 PUSH2 0xe3
0xc7 PUSH1 0x4
0xc9 DUP1
0xca CALLDATASIZE
0xcb SUB
0xcc DUP2
0xcd ADD
0xce SWAP1
0xcf DUP1
0xd0 DUP1
0xd1 CALLDATALOAD
0xd2 ISZERO
0xd3 ISZERO
0xd4 SWAP1
0xd5 PUSH1 0x20
0xd7 ADD
0xd8 SWAP1
0xd9 SWAP3
0xda SWAP2
0xdb SWAP1
0xdc POP
0xdd POP
0xde POP
0xdf PUSH2 0x27b
0xe2 JUMP
---
0xc2: JUMPDEST 
0xc4: V55 = 0xe3
0xc7: V56 = 0x4
0xca: V57 = CALLDATASIZE
0xcb: V58 = SUB V57 0x4
0xcd: V59 = ADD 0x4 V58
0xd1: V60 = CALLDATALOAD 0x4
0xd2: V61 = ISZERO V60
0xd3: V62 = ISZERO V61
0xd5: V63 = 0x20
0xd7: V64 = ADD 0x20 0x4
0xdf: V65 = 0x27b
0xe2: JUMP 0x27b
---
Entry stack: [V11, V51]
Stack pops: 1
Stack additions: [0xe3, V62]
Exit stack: [V11, 0xe3, V62]

================================

Block 0xe3
[0xe3:0xe4]
---
Predecessors: [0x2d7]
Successors: []
---
0xe3 JUMPDEST
0xe4 STOP
---
0xe3: JUMPDEST 
0xe4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0x57]
Successors: [0xed, 0xf1]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 DUP1
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe5: JUMPDEST 
0xe6: V66 = CALLVALUE
0xe8: V67 = ISZERO V66
0xe9: V68 = 0xf1
0xec: JUMPI 0xf1 V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V11, V66]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe5]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V69 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V11, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66]

================================

Block 0xf1
[0xf1:0xf9]
---
Predecessors: [0xe5]
Successors: [0x2f4]
---
0xf1 JUMPDEST
0xf2 POP
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x2f4
0xf9 JUMP
---
0xf1: JUMPDEST 
0xf3: V70 = 0xfa
0xf6: V71 = 0x2f4
0xf9: JUMP 0x2f4
---
Entry stack: [V11, V66]
Stack pops: 1
Stack additions: [0xfa]
Exit stack: [V11, 0xfa]

================================

Block 0xfa
[0xfa:0xfb]
---
Predecessors: [0x373]
Successors: []
---
0xfa JUMPDEST
0xfb STOP
---
0xfa: JUMPDEST 
0xfb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfc
[0xfc:0x101]
---
Predecessors: [0x8b]
Successors: [0x102]
---
0xfc JUMPDEST
0xfd PUSH1 0x0
0xff DUP1
0x100 SWAP1
0x101 POP
---
0xfc: JUMPDEST 
0xfd: V72 = 0x0
---
Entry stack: [V11, 0xaa, V45]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xaa, V45, 0x0]

================================

Block 0x102
[0x102:0x10a]
---
Predecessors: [0xfc, 0x1a3]
Successors: [0x10b, 0x1b4]
---
0x102 JUMPDEST
0x103 DUP2
0x104 DUP2
0x105 LT
0x106 ISZERO
0x107 PUSH2 0x1b4
0x10a JUMPI
---
0x102: JUMPDEST 
0x105: V73 = LT S0 V45
0x106: V74 = ISZERO V73
0x107: V75 = 0x1b4
0x10a: JUMPI 0x1b4 V74
---
Entry stack: [V11, 0xaa, V45, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xaa, V45, S0]

================================

Block 0x10b
[0x10b:0x18a]
---
Predecessors: [0x102]
Successors: [0x18b, 0x18f]
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e SWAP1
0x10f SLOAD
0x110 SWAP1
0x111 PUSH2 0x100
0x114 EXP
0x115 SWAP1
0x116 DIV
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x142 AND
0x143 PUSH4 0xa5f4af33
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP2
0x14c PUSH4 0xffffffff
0x151 AND
0x152 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x170 MUL
0x171 DUP2
0x172 MSTORE
0x173 PUSH1 0x4
0x175 ADD
0x176 PUSH1 0x0
0x178 PUSH1 0x40
0x17a MLOAD
0x17b DUP1
0x17c DUP4
0x17d SUB
0x17e DUP2
0x17f PUSH1 0x0
0x181 DUP8
0x182 DUP1
0x183 EXTCODESIZE
0x184 ISZERO
0x185 DUP1
0x186 ISZERO
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x10b: V76 = 0x0
0x10f: V77 = S[0x0]
0x111: V78 = 0x100
0x114: V79 = EXP 0x100 0x0
0x116: V80 = DIV V77 0x1
0x117: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x12d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x142: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x143: V85 = 0xa5f4af33
0x148: V86 = 0x40
0x14a: V87 = M[0x40]
0x14c: V88 = 0xffffffff
0x151: V89 = AND 0xffffffff 0xa5f4af33
0x152: V90 = 0x100000000000000000000000000000000000000000000000000000000
0x170: V91 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa5f4af33
0x172: M[V87] = 0xa5f4af3300000000000000000000000000000000000000000000000000000000
0x173: V92 = 0x4
0x175: V93 = ADD 0x4 V87
0x176: V94 = 0x0
0x178: V95 = 0x40
0x17a: V96 = M[0x40]
0x17d: V97 = SUB V93 V96
0x17f: V98 = 0x0
0x183: V99 = EXTCODESIZE V84
0x184: V100 = ISZERO V99
0x186: V101 = ISZERO V100
0x187: V102 = 0x18f
0x18a: JUMPI 0x18f V101
---
Entry stack: [V11, 0xaa, V45, S0]
Stack pops: 0
Stack additions: [V84, 0xa5f4af33, V93, 0x0, V96, V97, V96, 0x0, V84, V100]
Exit stack: [V11, 0xaa, V45, S0, V84, 0xa5f4af33, V93, 0x0, V96, V97, V96, 0x0, V84, V100]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x10b]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V103 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xaa, V45, S10, V84, 0xa5f4af33, V93, 0x0, V96, V97, V96, 0x0, V84, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaa, V45, S10, V84, 0xa5f4af33, V93, 0x0, V96, V97, V96, 0x0, V84, V100]

================================

Block 0x18f
[0x18f:0x199]
---
Predecessors: [0x10b]
Successors: [0x19a, 0x1a3]
---
0x18f JUMPDEST
0x190 POP
0x191 GAS
0x192 CALL
0x193 ISZERO
0x194 DUP1
0x195 ISZERO
0x196 PUSH2 0x1a3
0x199 JUMPI
---
0x18f: JUMPDEST 
0x191: V104 = GAS
0x192: V105 = CALL V104 V84 0x0 V96 V97 V96 0x0
0x193: V106 = ISZERO V105
0x195: V107 = ISZERO V106
0x196: V108 = 0x1a3
0x199: JUMPI 0x1a3 V107
---
Entry stack: [V11, 0xaa, V45, S10, V84, 0xa5f4af33, V93, 0x0, V96, V97, V96, 0x0, V84, V100]
Stack pops: 7
Stack additions: [V106]
Exit stack: [V11, 0xaa, V45, S10, V84, 0xa5f4af33, V93, V106]

================================

Block 0x19a
[0x19a:0x1a2]
---
Predecessors: [0x18f]
Successors: []
---
0x19a RETURNDATASIZE
0x19b PUSH1 0x0
0x19d DUP1
0x19e RETURNDATACOPY
0x19f RETURNDATASIZE
0x1a0 PUSH1 0x0
0x1a2 REVERT
---
0x19a: V109 = RETURNDATASIZE
0x19b: V110 = 0x0
0x19e: RETURNDATACOPY 0x0 0x0 V109
0x19f: V111 = RETURNDATASIZE
0x1a0: V112 = 0x0
0x1a2: REVERT 0x0 V111
---
Entry stack: [V11, 0xaa, V45, S4, V84, 0xa5f4af33, V93, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaa, V45, S4, V84, 0xa5f4af33, V93, V106]

================================

Block 0x1a3
[0x1a3:0x1b3]
---
Predecessors: [0x18f]
Successors: [0x102]
---
0x1a3 JUMPDEST
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 POP
0x1a8 DUP1
0x1a9 DUP1
0x1aa PUSH1 0x1
0x1ac ADD
0x1ad SWAP2
0x1ae POP
0x1af POP
0x1b0 PUSH2 0x102
0x1b3 JUMP
---
0x1a3: JUMPDEST 
0x1aa: V113 = 0x1
0x1ac: V114 = ADD 0x1 S4
0x1b0: V115 = 0x102
0x1b3: JUMP 0x102
---
Entry stack: [V11, 0xaa, V45, S4, V84, 0xa5f4af33, V93, V106]
Stack pops: 5
Stack additions: [V114]
Exit stack: [V11, 0xaa, V45, V114]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x102]
Successors: [0xaa]
---
0x1b4 JUMPDEST
0x1b5 POP
0x1b6 POP
0x1b7 JUMP
---
0x1b4: JUMPDEST 
0x1b7: JUMP 0xaa
---
Entry stack: [V11, 0xaa, V45, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b8
[0x1b8:0x25b]
---
Predecessors: [0xac]
Successors: [0x25c, 0x260]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x0
0x1bb DUP1
0x1bc SWAP1
0x1bd SLOAD
0x1be SWAP1
0x1bf PUSH2 0x100
0x1c2 EXP
0x1c3 SWAP1
0x1c4 DIV
0x1c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1da AND
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 PUSH4 0xdc6dd152
0x1f6 ADDRESS
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d BALANCE
0x20e PUSH1 0x2d
0x210 PUSH1 0x40
0x212 MLOAD
0x213 DUP4
0x214 PUSH4 0xffffffff
0x219 AND
0x21a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x238 MUL
0x239 DUP2
0x23a MSTORE
0x23b PUSH1 0x4
0x23d ADD
0x23e DUP1
0x23f DUP3
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x20
0x244 ADD
0x245 SWAP2
0x246 POP
0x247 POP
0x248 PUSH1 0x0
0x24a PUSH1 0x40
0x24c MLOAD
0x24d DUP1
0x24e DUP4
0x24f SUB
0x250 DUP2
0x251 DUP6
0x252 DUP9
0x253 DUP1
0x254 EXTCODESIZE
0x255 ISZERO
0x256 DUP1
0x257 ISZERO
0x258 PUSH2 0x260
0x25b JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V116 = 0x0
0x1bd: V117 = S[0x0]
0x1bf: V118 = 0x100
0x1c2: V119 = EXP 0x100 0x0
0x1c4: V120 = DIV V117 0x1
0x1c5: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1db: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x1f1: V125 = 0xdc6dd152
0x1f6: V126 = ADDRESS
0x1f7: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x20d: V129 = BALANCE V128
0x20e: V130 = 0x2d
0x210: V131 = 0x40
0x212: V132 = M[0x40]
0x214: V133 = 0xffffffff
0x219: V134 = AND 0xffffffff 0xdc6dd152
0x21a: V135 = 0x100000000000000000000000000000000000000000000000000000000
0x238: V136 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xdc6dd152
0x23a: M[V132] = 0xdc6dd15200000000000000000000000000000000000000000000000000000000
0x23b: V137 = 0x4
0x23d: V138 = ADD 0x4 V132
0x241: M[V138] = 0x2d
0x242: V139 = 0x20
0x244: V140 = ADD 0x20 V138
0x248: V141 = 0x0
0x24a: V142 = 0x40
0x24c: V143 = M[0x40]
0x24f: V144 = SUB V140 V143
0x254: V145 = EXTCODESIZE V124
0x255: V146 = ISZERO V145
0x257: V147 = ISZERO V146
0x258: V148 = 0x260
0x25b: JUMPI 0x260 V147
---
Entry stack: [V11, 0xb4]
Stack pops: 0
Stack additions: [V124, 0xdc6dd152, V129, V140, 0x0, V143, V144, V143, V129, V124, V146]
Exit stack: [V11, 0xb4, V124, 0xdc6dd152, V129, V140, 0x0, V143, V144, V143, V129, V124, V146]

================================

Block 0x25c
[0x25c:0x25f]
---
Predecessors: [0x1b8]
Successors: []
---
0x25c PUSH1 0x0
0x25e DUP1
0x25f REVERT
---
0x25c: V149 = 0x0
0x25f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb4, V124, 0xdc6dd152, V129, V140, 0x0, V143, V144, V143, V129, V124, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb4, V124, 0xdc6dd152, V129, V140, 0x0, V143, V144, V143, V129, V124, V146]

================================

Block 0x260
[0x260:0x26a]
---
Predecessors: [0x1b8]
Successors: [0x26b, 0x274]
---
0x260 JUMPDEST
0x261 POP
0x262 GAS
0x263 CALL
0x264 ISZERO
0x265 DUP1
0x266 ISZERO
0x267 PUSH2 0x274
0x26a JUMPI
---
0x260: JUMPDEST 
0x262: V150 = GAS
0x263: V151 = CALL V150 V124 V129 V143 V144 V143 0x0
0x264: V152 = ISZERO V151
0x266: V153 = ISZERO V152
0x267: V154 = 0x274
0x26a: JUMPI 0x274 V153
---
Entry stack: [V11, 0xb4, V124, 0xdc6dd152, V129, V140, 0x0, V143, V144, V143, V129, V124, V146]
Stack pops: 7
Stack additions: [V152]
Exit stack: [V11, 0xb4, V124, 0xdc6dd152, V129, V140, V152]

================================

Block 0x26b
[0x26b:0x273]
---
Predecessors: [0x260]
Successors: []
---
0x26b RETURNDATASIZE
0x26c PUSH1 0x0
0x26e DUP1
0x26f RETURNDATACOPY
0x270 RETURNDATASIZE
0x271 PUSH1 0x0
0x273 REVERT
---
0x26b: V155 = RETURNDATASIZE
0x26c: V156 = 0x0
0x26f: RETURNDATACOPY 0x0 0x0 V155
0x270: V157 = RETURNDATASIZE
0x271: V158 = 0x0
0x273: REVERT 0x0 V157
---
Entry stack: [V11, 0xb4, V124, 0xdc6dd152, V129, V140, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb4, V124, 0xdc6dd152, V129, V140, V152]

================================

Block 0x274
[0x274:0x27a]
---
Predecessors: [0x260]
Successors: [0xb4]
---
0x274 JUMPDEST
0x275 POP
0x276 POP
0x277 POP
0x278 POP
0x279 POP
0x27a JUMP
---
0x274: JUMPDEST 
0x27a: JUMP 0xb4
---
Entry stack: [V11, 0xb4, V124, 0xdc6dd152, V129, V140, V152]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x27b
[0x27b:0x2d2]
---
Predecessors: [0xc2]
Successors: [0x2d3, 0x2d7]
---
0x27b JUMPDEST
0x27c CALLER
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 PUSH1 0x1
0x295 PUSH1 0x0
0x297 SWAP1
0x298 SLOAD
0x299 SWAP1
0x29a PUSH2 0x100
0x29d EXP
0x29e SWAP1
0x29f DIV
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cb AND
0x2cc EQ
0x2cd ISZERO
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x27b: JUMPDEST 
0x27c: V159 = CALLER
0x27d: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x293: V162 = 0x1
0x295: V163 = 0x0
0x298: V164 = S[0x1]
0x29a: V165 = 0x100
0x29d: V166 = EXP 0x100 0x0
0x29f: V167 = DIV V164 0x1
0x2a0: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2b6: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cb: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2cc: V172 = EQ V171 V161
0x2cd: V173 = ISZERO V172
0x2ce: V174 = ISZERO V173
0x2cf: V175 = 0x2d7
0x2d2: JUMPI 0x2d7 V174
---
Entry stack: [V11, 0xe3, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V62]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x27b]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V176 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe3, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, V62]

================================

Block 0x2d7
[0x2d7:0x2f3]
---
Predecessors: [0x27b]
Successors: [0xe3]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x1
0x2da DUP1
0x2db PUSH1 0x14
0x2dd PUSH2 0x100
0x2e0 EXP
0x2e1 DUP2
0x2e2 SLOAD
0x2e3 DUP2
0x2e4 PUSH1 0xff
0x2e6 MUL
0x2e7 NOT
0x2e8 AND
0x2e9 SWAP1
0x2ea DUP4
0x2eb ISZERO
0x2ec ISZERO
0x2ed MUL
0x2ee OR
0x2ef SWAP1
0x2f0 SSTORE
0x2f1 POP
0x2f2 POP
0x2f3 JUMP
---
0x2d7: JUMPDEST 
0x2d8: V177 = 0x1
0x2db: V178 = 0x14
0x2dd: V179 = 0x100
0x2e0: V180 = EXP 0x100 0x14
0x2e2: V181 = S[0x1]
0x2e4: V182 = 0xff
0x2e6: V183 = MUL 0xff 0x10000000000000000000000000000000000000000
0x2e7: V184 = NOT 0xff0000000000000000000000000000000000000000
0x2e8: V185 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V181
0x2eb: V186 = ISZERO 0x1
0x2ec: V187 = ISZERO 0x0
0x2ed: V188 = MUL 0x1 0x10000000000000000000000000000000000000000
0x2ee: V189 = OR 0x10000000000000000000000000000000000000000 V185
0x2f0: S[0x1] = V189
0x2f3: JUMP 0xe3
---
Entry stack: [V11, 0xe3, V62]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f4
[0x2f4:0x369]
---
Predecessors: [0xf1]
Successors: [0x36a, 0x373]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0x0
0x2f9 SWAP1
0x2fa SLOAD
0x2fb SWAP1
0x2fc PUSH2 0x100
0x2ff EXP
0x300 SWAP1
0x301 DIV
0x302 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x317 AND
0x318 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32d AND
0x32e PUSH2 0x8fc
0x331 ADDRESS
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 BALANCE
0x349 SWAP1
0x34a DUP2
0x34b ISZERO
0x34c MUL
0x34d SWAP1
0x34e PUSH1 0x40
0x350 MLOAD
0x351 PUSH1 0x0
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 DUP4
0x358 SUB
0x359 DUP2
0x35a DUP6
0x35b DUP9
0x35c DUP9
0x35d CALL
0x35e SWAP4
0x35f POP
0x360 POP
0x361 POP
0x362 POP
0x363 ISZERO
0x364 DUP1
0x365 ISZERO
0x366 PUSH2 0x373
0x369 JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V190 = 0x1
0x2f7: V191 = 0x0
0x2fa: V192 = S[0x1]
0x2fc: V193 = 0x100
0x2ff: V194 = EXP 0x100 0x0
0x301: V195 = DIV V192 0x1
0x302: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x317: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x318: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x32e: V200 = 0x8fc
0x331: V201 = ADDRESS
0x332: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x348: V204 = BALANCE V203
0x34b: V205 = ISZERO V204
0x34c: V206 = MUL V205 0x8fc
0x34e: V207 = 0x40
0x350: V208 = M[0x40]
0x351: V209 = 0x0
0x353: V210 = 0x40
0x355: V211 = M[0x40]
0x358: V212 = SUB V208 V211
0x35d: V213 = CALL V206 V199 V204 V211 V212 V211 0x0
0x363: V214 = ISZERO V213
0x365: V215 = ISZERO V214
0x366: V216 = 0x373
0x369: JUMPI 0x373 V215
---
Entry stack: [V11, 0xfa]
Stack pops: 0
Stack additions: [V214]
Exit stack: [V11, 0xfa, V214]

================================

Block 0x36a
[0x36a:0x372]
---
Predecessors: [0x2f4]
Successors: []
---
0x36a RETURNDATASIZE
0x36b PUSH1 0x0
0x36d DUP1
0x36e RETURNDATACOPY
0x36f RETURNDATASIZE
0x370 PUSH1 0x0
0x372 REVERT
---
0x36a: V217 = RETURNDATASIZE
0x36b: V218 = 0x0
0x36e: RETURNDATACOPY 0x0 0x0 V217
0x36f: V219 = RETURNDATASIZE
0x370: V220 = 0x0
0x372: REVERT 0x0 V219
---
Entry stack: [V11, 0xfa, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfa, V214]

================================

Block 0x373
[0x373:0x375]
---
Predecessors: [0x2f4]
Successors: [0xfa]
---
0x373 JUMPDEST
0x374 POP
0x375 JUMP
---
0x373: JUMPDEST 
0x375: JUMP 0xfa
---
Entry stack: [V11, 0xfa, V214]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x376
[0x376:0x3a1]
---
Predecessors: []
Successors: []
---
0x376 STOP
0x377 LOG1
0x378 PUSH6 0x627a7a723058
0x37f SHA3
0x380 PUSH27 0xb940d6aecf30b5595d227bf9176e49c20de7c977ca86b7cd11da3b
0x39c MSTORE
0x39d MISSING 0xcb
0x39e MISSING 0x4e
0x39f RETURN
0x3a0 STOP
0x3a1 MISSING 0x29
---
0x376: STOP 
0x377: LOG S0 S1 S2
0x378: V221 = 0x627a7a723058
0x37f: V222 = SHA3 0x627a7a723058 S3
0x380: V223 = 0xb940d6aecf30b5595d227bf9176e49c20de7c977ca86b7cd11da3b
0x39c: M[0xb940d6aecf30b5595d227bf9176e49c20de7c977ca86b7cd11da3b] = V222
0x39d: MISSING 0xcb
0x39e: MISSING 0x4e
0x39f: RETURN S0 S1
0x3a0: STOP 
0x3a1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x7f
Exit block: 0x19a
Body: 0x7f, 0x87, 0x8b, 0xaa, 0xfc, 0x102, 0x10b, 0x18b, 0x18f, 0x19a, 0x1a3, 0x1b4

Function 1:
Public function signature: 0x93e84cd9
Entry block: 0xac
Exit block: 0xb4
Body: 0xac, 0xb4, 0x1b8, 0x25c, 0x260, 0x26b, 0x274

Function 2:
Public function signature: 0xa767a2db
Entry block: 0xb6
Exit block: 0xe3
Body: 0xb6, 0xbe, 0xc2, 0xe3, 0x27b, 0x2d3, 0x2d7

Function 3:
Public function signature: 0xd56b2889
Entry block: 0xe5
Exit block: 0xfa
Body: 0xe5, 0xed, 0xf1, 0xfa, 0x2f4, 0x36a, 0x373

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x79
Body: 0x62, 0x79, 0x7d

