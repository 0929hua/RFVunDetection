Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe0
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe0
0xa: JUMPI 0xe0 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xf1]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2170ebf7
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xf1
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2170ebf7
0x20: V14 = EQ V12 0x2170ebf7
0x21: V15 = 0xf1
0x24: JUMPI 0xf1 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x118]
---
0x25 DUP1
0x26 PUSH4 0x38d52e0f
0x2b EQ
0x2c PUSH2 0x118
0x2f JUMPI
---
0x26: V16 = 0x38d52e0f
0x2b: V17 = EQ 0x38d52e0f V12
0x2c: V18 = 0x118
0x2f: JUMPI 0x118 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x144]
---
0x30 DUP1
0x31 PUSH4 0x4b750334
0x36 EQ
0x37 PUSH2 0x144
0x3a JUMPI
---
0x31: V19 = 0x4b750334
0x36: V20 = EQ 0x4b750334 V12
0x37: V21 = 0x144
0x3a: JUMPI 0x144 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x166]
---
0x3b DUP1
0x3c PUSH4 0x4ca50f59
0x41 EQ
0x42 PUSH2 0x166
0x45 JUMPI
---
0x3c: V22 = 0x4ca50f59
0x41: V23 = EQ 0x4ca50f59 V12
0x42: V24 = 0x166
0x45: JUMPI 0x166 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x18a]
---
0x46 DUP1
0x47 PUSH4 0x52954e5a
0x4c EQ
0x4d PUSH2 0x18a
0x50 JUMPI
---
0x47: V25 = 0x52954e5a
0x4c: V26 = EQ 0x52954e5a V12
0x4d: V27 = 0x18a
0x50: JUMPI 0x18a V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1bd]
---
0x51 DUP1
0x52 PUSH4 0x8620410b
0x57 EQ
0x58 PUSH2 0x1bd
0x5b JUMPI
---
0x52: V28 = 0x8620410b
0x57: V29 = EQ 0x8620410b V12
0x58: V30 = 0x1bd
0x5b: JUMPI 0x1bd V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1df]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x1df
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x1df
0x66: JUMPI 0x1df V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x20b]
---
0x67 DUP1
0x68 PUSH4 0x919f8cfc
0x6d EQ
0x6e PUSH2 0x20b
0x71 JUMPI
---
0x68: V34 = 0x919f8cfc
0x6d: V35 = EQ 0x919f8cfc V12
0x6e: V36 = 0x20b
0x71: JUMPI 0x20b V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x215]
---
0x72 DUP1
0x73 PUSH4 0x976a8435
0x78 EQ
0x79 PUSH2 0x215
0x7c JUMPI
---
0x73: V37 = 0x976a8435
0x78: V38 = EQ 0x976a8435 V12
0x79: V39 = 0x215
0x7c: JUMPI 0x215 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x237]
---
0x7d DUP1
0x7e PUSH4 0xa7abc124
0x83 EQ
0x84 PUSH2 0x237
0x87 JUMPI
---
0x7e: V40 = 0xa7abc124
0x83: V41 = EQ 0xa7abc124 V12
0x84: V42 = 0x237
0x87: JUMPI 0x237 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x253]
---
0x88 DUP1
0x89 PUSH4 0xb1099347
0x8e EQ
0x8f PUSH2 0x253
0x92 JUMPI
---
0x89: V43 = 0xb1099347
0x8e: V44 = EQ 0xb1099347 V12
0x8f: V45 = 0x253
0x92: JUMPI 0x253 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x277]
---
0x93 DUP1
0x94 PUSH4 0xbe86d5a7
0x99 EQ
0x9a PUSH2 0x277
0x9d JUMPI
---
0x94: V46 = 0xbe86d5a7
0x99: V47 = EQ 0xbe86d5a7 V12
0x9a: V48 = 0x277
0x9d: JUMPI 0x277 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x298]
---
0x9e DUP1
0x9f PUSH4 0xc21c7712
0xa4 EQ
0xa5 PUSH2 0x298
0xa8 JUMPI
---
0x9f: V49 = 0xc21c7712
0xa4: V50 = EQ 0xc21c7712 V12
0xa5: V51 = 0x298
0xa8: JUMPI 0x298 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2b0]
---
0xa9 DUP1
0xaa PUSH4 0xc34764cf
0xaf EQ
0xb0 PUSH2 0x2b0
0xb3 JUMPI
---
0xaa: V52 = 0xc34764cf
0xaf: V53 = EQ 0xc34764cf V12
0xb0: V54 = 0x2b0
0xb3: JUMPI 0x2b0 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2e3]
---
0xb4 DUP1
0xb5 PUSH4 0xc60ccb0e
0xba EQ
0xbb PUSH2 0x2e3
0xbe JUMPI
---
0xb5: V55 = 0xc60ccb0e
0xba: V56 = EQ 0xc60ccb0e V12
0xbb: V57 = 0x2e3
0xbe: JUMPI 0x2e3 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x2ed]
---
0xbf DUP1
0xc0 PUSH4 0xcd53a3b7
0xc5 EQ
0xc6 PUSH2 0x2ed
0xc9 JUMPI
---
0xc0: V58 = 0xcd53a3b7
0xc5: V59 = EQ 0xcd53a3b7 V12
0xc6: V60 = 0x2ed
0xc9: JUMPI 0x2ed V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x314]
---
0xca DUP1
0xcb PUSH4 0xeff883bd
0xd0 EQ
0xd1 PUSH2 0x314
0xd4 JUMPI
---
0xcb: V61 = 0xeff883bd
0xd0: V62 = EQ 0xeff883bd V12
0xd1: V63 = 0x314
0xd4: JUMPI 0x314 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x329]
---
0xd5 DUP1
0xd6 PUSH4 0xf2fde38b
0xdb EQ
0xdc PUSH2 0x329
0xdf JUMPI
---
0xd6: V64 = 0xf2fde38b
0xdb: V65 = EQ 0xf2fde38b V12
0xdc: V66 = 0x329
0xdf: JUMPI 0x329 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0x0, 0xd5]
Successors: [0xe4]
---
0xe0 JUMPDEST
0xe1 PUSH2 0xef
---
0xe0: JUMPDEST 
0xe1: V67 = 0xef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0xe4
[0xe4:0xeb]
---
Predecessors: [0xe0]
Successors: [0x347]
---
0xe4 JUMPDEST
0xe5 PUSH2 0xec
0xe8 PUSH2 0x347
0xeb JUMP
---
0xe4: JUMPDEST 
0xe5: V68 = 0xec
0xe8: V69 = 0x347
0xeb: JUMP 0x347
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: [0xec]
Exit stack: [V12, 0xef, 0xec]

================================

Block 0xec
[0xec:0xec]
---
Predecessors: [0x5b0]
Successors: [0xed]
---
0xec JUMPDEST
---
0xec: JUMPDEST 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: [0xec]
Successors: [0xef]
---
0xed JUMPDEST
0xee JUMP
---
0xed: JUMPDEST 
0xee: JUMP S0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: [0xed, 0x5b0, 0x946, 0x9d4, 0xb93, 0xc06, 0xf79, 0xffd]
Successors: []
---
0xef JUMPDEST
0xf0 STOP
---
0xef: JUMPDEST 
0xf0: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0xb]
Successors: [0xf8, 0xf9]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xf9
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V70 = CALLVALUE
0xf3: V71 = ISZERO V70
0xf4: V72 = 0xf9
0xf7: JUMPI 0xf9 V71
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xf8]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 INVALID
---
0xf8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xf1]
Successors: [0x5b5]
---
0xf9 JUMPDEST
0xfa PUSH2 0x104
0xfd PUSH1 0x4
0xff CALLDATALOAD
0x100 PUSH2 0x5b5
0x103 JUMP
---
0xf9: JUMPDEST 
0xfa: V73 = 0x104
0xfd: V74 = 0x4
0xff: V75 = CALLDATALOAD 0x4
0x100: V76 = 0x5b5
0x103: JUMP 0x5b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104, V75]
Exit stack: [V12, 0x104, V75]

================================

Block 0x104
[0x104:0x117]
---
Predecessors: [0x643, 0x65d, 0x848, 0x9d8, 0xddc]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 DUP1
0x108 MLOAD
0x109 SWAP2
0x10a ISZERO
0x10b ISZERO
0x10c DUP3
0x10d MSTORE
0x10e MLOAD
0x10f SWAP1
0x110 DUP2
0x111 SWAP1
0x112 SUB
0x113 PUSH1 0x20
0x115 ADD
0x116 SWAP1
0x117 RETURN
---
0x104: JUMPDEST 
0x105: V77 = 0x40
0x108: V78 = M[0x40]
0x10a: V79 = ISZERO S0
0x10b: V80 = ISZERO V79
0x10d: M[V78] = V80
0x10e: V81 = M[0x40]
0x112: V82 = SUB V78 V81
0x113: V83 = 0x20
0x115: V84 = ADD 0x20 V82
0x117: RETURN V81 V84
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x118
[0x118:0x11e]
---
Predecessors: [0x25]
Successors: [0x11f, 0x120]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a ISZERO
0x11b PUSH2 0x120
0x11e JUMPI
---
0x118: JUMPDEST 
0x119: V85 = CALLVALUE
0x11a: V86 = ISZERO V85
0x11b: V87 = 0x120
0x11e: JUMPI 0x120 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11f
[0x11f:0x11f]
---
Predecessors: [0x118]
Successors: []
---
0x11f INVALID
---
0x11f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x118]
Successors: [0x648]
---
0x120 JUMPDEST
0x121 PUSH2 0x128
0x124 PUSH2 0x648
0x127 JUMP
---
0x120: JUMPDEST 
0x121: V88 = 0x128
0x124: V89 = 0x648
0x127: JUMP 0x648
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x128]
Exit stack: [V12, 0x128]

================================

Block 0x128
[0x128:0x143]
---
Predecessors: [0x648, 0x854]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b DUP1
0x12c MLOAD
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 SWAP1
0x136 SWAP3
0x137 AND
0x138 DUP3
0x139 MSTORE
0x13a MLOAD
0x13b SWAP1
0x13c DUP2
0x13d SWAP1
0x13e SUB
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 RETURN
---
0x128: JUMPDEST 
0x129: V90 = 0x40
0x12c: V91 = M[0x40]
0x12d: V92 = 0x1
0x12f: V93 = 0xa0
0x131: V94 = 0x2
0x133: V95 = EXP 0x2 0xa0
0x134: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x137: V97 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x139: M[V91] = V97
0x13a: V98 = M[0x40]
0x13e: V99 = SUB V91 V98
0x13f: V100 = 0x20
0x141: V101 = ADD 0x20 V99
0x143: RETURN V98 V101
---
Entry stack: [V12, 0x128, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x128]

================================

Block 0x144
[0x144:0x14a]
---
Predecessors: [0x30]
Successors: [0x14b, 0x14c]
---
0x144 JUMPDEST
0x145 CALLVALUE
0x146 ISZERO
0x147 PUSH2 0x14c
0x14a JUMPI
---
0x144: JUMPDEST 
0x145: V102 = CALLVALUE
0x146: V103 = ISZERO V102
0x147: V104 = 0x14c
0x14a: JUMPI 0x14c V103
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14b
[0x14b:0x14b]
---
Predecessors: [0x144]
Successors: []
---
0x14b INVALID
---
0x14b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14c
[0x14c:0x153]
---
Predecessors: [0x144]
Successors: [0x657]
---
0x14c JUMPDEST
0x14d PUSH2 0x154
0x150 PUSH2 0x657
0x153 JUMP
---
0x14c: JUMPDEST 
0x14d: V105 = 0x154
0x150: V106 = 0x657
0x153: JUMP 0x657
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x154]
Exit stack: [V12, 0x154]

================================

Block 0x154
[0x154:0x165]
---
Predecessors: [0x657, 0x84e, 0x948]
Successors: []
---
0x154 JUMPDEST
0x155 PUSH1 0x40
0x157 DUP1
0x158 MLOAD
0x159 SWAP2
0x15a DUP3
0x15b MSTORE
0x15c MLOAD
0x15d SWAP1
0x15e DUP2
0x15f SWAP1
0x160 SUB
0x161 PUSH1 0x20
0x163 ADD
0x164 SWAP1
0x165 RETURN
---
0x154: JUMPDEST 
0x155: V107 = 0x40
0x158: V108 = M[0x40]
0x15b: M[V108] = S0
0x15c: V109 = M[0x40]
0x160: V110 = SUB V108 V109
0x161: V111 = 0x20
0x163: V112 = ADD 0x20 V110
0x165: RETURN V109 V112
---
Entry stack: [V12, 0x154, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x154]

================================

Block 0x166
[0x166:0x16c]
---
Predecessors: [0x3b]
Successors: [0x16d, 0x16e]
---
0x166 JUMPDEST
0x167 CALLVALUE
0x168 ISZERO
0x169 PUSH2 0x16e
0x16c JUMPI
---
0x166: JUMPDEST 
0x167: V113 = CALLVALUE
0x168: V114 = ISZERO V113
0x169: V115 = 0x16e
0x16c: JUMPI 0x16e V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16d
[0x16d:0x16d]
---
Predecessors: [0x166]
Successors: []
---
0x16d INVALID
---
0x16d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16e
[0x16e:0x175]
---
Predecessors: [0x166]
Successors: [0x65d]
---
0x16e JUMPDEST
0x16f PUSH2 0x104
0x172 PUSH2 0x65d
0x175 JUMP
---
0x16e: JUMPDEST 
0x16f: V116 = 0x104
0x172: V117 = 0x65d
0x175: JUMP 0x65d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x176
[0x176:0x189]
---
Predecessors: []
Successors: []
---
0x176 JUMPDEST
0x177 PUSH1 0x40
0x179 DUP1
0x17a MLOAD
0x17b SWAP2
0x17c ISZERO
0x17d ISZERO
0x17e DUP3
0x17f MSTORE
0x180 MLOAD
0x181 SWAP1
0x182 DUP2
0x183 SWAP1
0x184 SUB
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP1
0x189 RETURN
---
0x176: JUMPDEST 
0x177: V118 = 0x40
0x17a: V119 = M[0x40]
0x17c: V120 = ISZERO S0
0x17d: V121 = ISZERO V120
0x17f: M[V119] = V121
0x180: V122 = M[0x40]
0x184: V123 = SUB V119 V122
0x185: V124 = 0x20
0x187: V125 = ADD 0x20 V123
0x189: RETURN V122 V125
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x18a
[0x18a:0x190]
---
Predecessors: [0x46]
Successors: [0x191, 0x192]
---
0x18a JUMPDEST
0x18b CALLVALUE
0x18c ISZERO
0x18d PUSH2 0x192
0x190 JUMPI
---
0x18a: JUMPDEST 
0x18b: V126 = CALLVALUE
0x18c: V127 = ISZERO V126
0x18d: V128 = 0x192
0x190: JUMPI 0x192 V127
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x191
[0x191:0x191]
---
Predecessors: [0x18a]
Successors: []
---
0x191 INVALID
---
0x191: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x192
[0x192:0x1a8]
---
Predecessors: [0x18a]
Successors: [0x66b]
---
0x192 JUMPDEST
0x193 PUSH2 0x104
0x196 PUSH1 0x1
0x198 PUSH1 0xa0
0x19a PUSH1 0x2
0x19c EXP
0x19d SUB
0x19e PUSH1 0x4
0x1a0 CALLDATALOAD
0x1a1 AND
0x1a2 PUSH1 0x24
0x1a4 CALLDATALOAD
0x1a5 PUSH2 0x66b
0x1a8 JUMP
---
0x192: JUMPDEST 
0x193: V129 = 0x104
0x196: V130 = 0x1
0x198: V131 = 0xa0
0x19a: V132 = 0x2
0x19c: V133 = EXP 0x2 0xa0
0x19d: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19e: V135 = 0x4
0x1a0: V136 = CALLDATALOAD 0x4
0x1a1: V137 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x1a2: V138 = 0x24
0x1a4: V139 = CALLDATALOAD 0x24
0x1a5: V140 = 0x66b
0x1a8: JUMP 0x66b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104, V137, V139]
Exit stack: [V12, 0x104, V137, V139]

================================

Block 0x1a9
[0x1a9:0x1bc]
---
Predecessors: []
Successors: []
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x40
0x1ac DUP1
0x1ad MLOAD
0x1ae SWAP2
0x1af ISZERO
0x1b0 ISZERO
0x1b1 DUP3
0x1b2 MSTORE
0x1b3 MLOAD
0x1b4 SWAP1
0x1b5 DUP2
0x1b6 SWAP1
0x1b7 SUB
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb SWAP1
0x1bc RETURN
---
0x1a9: JUMPDEST 
0x1aa: V141 = 0x40
0x1ad: V142 = M[0x40]
0x1af: V143 = ISZERO S0
0x1b0: V144 = ISZERO V143
0x1b2: M[V142] = V144
0x1b3: V145 = M[0x40]
0x1b7: V146 = SUB V142 V145
0x1b8: V147 = 0x20
0x1ba: V148 = ADD 0x20 V146
0x1bc: RETURN V145 V148
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1bd
[0x1bd:0x1c3]
---
Predecessors: [0x51]
Successors: [0x1c4, 0x1c5]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf ISZERO
0x1c0 PUSH2 0x1c5
0x1c3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V149 = CALLVALUE
0x1bf: V150 = ISZERO V149
0x1c0: V151 = 0x1c5
0x1c3: JUMPI 0x1c5 V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c4
[0x1c4:0x1c4]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c4 INVALID
---
0x1c4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c5
[0x1c5:0x1cc]
---
Predecessors: [0x1bd]
Successors: [0x84e]
---
0x1c5 JUMPDEST
0x1c6 PUSH2 0x154
0x1c9 PUSH2 0x84e
0x1cc JUMP
---
0x1c5: JUMPDEST 
0x1c6: V152 = 0x154
0x1c9: V153 = 0x84e
0x1cc: JUMP 0x84e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x154]
Exit stack: [V12, 0x154]

================================

Block 0x1cd
[0x1cd:0x1de]
---
Predecessors: []
Successors: []
---
0x1cd JUMPDEST
0x1ce PUSH1 0x40
0x1d0 DUP1
0x1d1 MLOAD
0x1d2 SWAP2
0x1d3 DUP3
0x1d4 MSTORE
0x1d5 MLOAD
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 SWAP1
0x1d9 SUB
0x1da PUSH1 0x20
0x1dc ADD
0x1dd SWAP1
0x1de RETURN
---
0x1cd: JUMPDEST 
0x1ce: V154 = 0x40
0x1d1: V155 = M[0x40]
0x1d4: M[V155] = S0
0x1d5: V156 = M[0x40]
0x1d9: V157 = SUB V155 V156
0x1da: V158 = 0x20
0x1dc: V159 = ADD 0x20 V157
0x1de: RETURN V156 V159
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x5c]
Successors: [0x1e6, 0x1e7]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1e7
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V160 = CALLVALUE
0x1e1: V161 = ISZERO V160
0x1e2: V162 = 0x1e7
0x1e5: JUMPI 0x1e7 V161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e6
[0x1e6:0x1e6]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 INVALID
---
0x1e6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e7
[0x1e7:0x1ee]
---
Predecessors: [0x1df]
Successors: [0x854]
---
0x1e7 JUMPDEST
0x1e8 PUSH2 0x128
0x1eb PUSH2 0x854
0x1ee JUMP
---
0x1e7: JUMPDEST 
0x1e8: V163 = 0x128
0x1eb: V164 = 0x854
0x1ee: JUMP 0x854
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x128]
Exit stack: [V12, 0x128]

================================

Block 0x1ef
[0x1ef:0x20a]
---
Predecessors: []
Successors: []
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x40
0x1f2 DUP1
0x1f3 MLOAD
0x1f4 PUSH1 0x1
0x1f6 PUSH1 0xa0
0x1f8 PUSH1 0x2
0x1fa EXP
0x1fb SUB
0x1fc SWAP1
0x1fd SWAP3
0x1fe AND
0x1ff DUP3
0x200 MSTORE
0x201 MLOAD
0x202 SWAP1
0x203 DUP2
0x204 SWAP1
0x205 SUB
0x206 PUSH1 0x20
0x208 ADD
0x209 SWAP1
0x20a RETURN
---
0x1ef: JUMPDEST 
0x1f0: V165 = 0x40
0x1f3: V166 = M[0x40]
0x1f4: V167 = 0x1
0x1f6: V168 = 0xa0
0x1f8: V169 = 0x2
0x1fa: V170 = EXP 0x2 0xa0
0x1fb: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fe: V172 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x200: M[V166] = V172
0x201: V173 = M[0x40]
0x205: V174 = SUB V166 V173
0x206: V175 = 0x20
0x208: V176 = ADD 0x20 V174
0x20a: RETURN V173 V176
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x20b
[0x20b:0x212]
---
Predecessors: [0x67]
Successors: [0x863]
---
0x20b JUMPDEST
0x20c PUSH2 0xef
0x20f PUSH2 0x863
0x212 JUMP
---
0x20b: JUMPDEST 
0x20c: V177 = 0xef
0x20f: V178 = 0x863
0x212: JUMP 0x863
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0x213
[0x213:0x214]
---
Predecessors: []
Successors: []
---
0x213 JUMPDEST
0x214 STOP
---
0x213: JUMPDEST 
0x214: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x215
[0x215:0x21b]
---
Predecessors: [0x72]
Successors: [0x21c, 0x21d]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 ISZERO
0x218 PUSH2 0x21d
0x21b JUMPI
---
0x215: JUMPDEST 
0x216: V179 = CALLVALUE
0x217: V180 = ISZERO V179
0x218: V181 = 0x21d
0x21b: JUMPI 0x21d V180
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21c
[0x21c:0x21c]
---
Predecessors: [0x215]
Successors: []
---
0x21c INVALID
---
0x21c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21d
[0x21d:0x224]
---
Predecessors: [0x215]
Successors: [0x948]
---
0x21d JUMPDEST
0x21e PUSH2 0x154
0x221 PUSH2 0x948
0x224 JUMP
---
0x21d: JUMPDEST 
0x21e: V182 = 0x154
0x221: V183 = 0x948
0x224: JUMP 0x948
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x154]
Exit stack: [V12, 0x154]

================================

Block 0x225
[0x225:0x236]
---
Predecessors: []
Successors: []
---
0x225 JUMPDEST
0x226 PUSH1 0x40
0x228 DUP1
0x229 MLOAD
0x22a SWAP2
0x22b DUP3
0x22c MSTORE
0x22d MLOAD
0x22e SWAP1
0x22f DUP2
0x230 SWAP1
0x231 SUB
0x232 PUSH1 0x20
0x234 ADD
0x235 SWAP1
0x236 RETURN
---
0x225: JUMPDEST 
0x226: V184 = 0x40
0x229: V185 = M[0x40]
0x22c: M[V185] = S0
0x22d: V186 = M[0x40]
0x231: V187 = SUB V185 V186
0x232: V188 = 0x20
0x234: V189 = ADD 0x20 V187
0x236: RETURN V186 V189
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x237
[0x237:0x23d]
---
Predecessors: [0x7d]
Successors: [0x23e, 0x23f]
---
0x237 JUMPDEST
0x238 CALLVALUE
0x239 ISZERO
0x23a PUSH2 0x23f
0x23d JUMPI
---
0x237: JUMPDEST 
0x238: V190 = CALLVALUE
0x239: V191 = ISZERO V190
0x23a: V192 = 0x23f
0x23d: JUMPI 0x23f V191
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23e
[0x23e:0x23e]
---
Predecessors: [0x237]
Successors: []
---
0x23e INVALID
---
0x23e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23f
[0x23f:0x250]
---
Predecessors: [0x237]
Successors: [0x94e]
---
0x23f JUMPDEST
0x240 PUSH2 0xef
0x243 PUSH1 0x4
0x245 CALLDATALOAD
0x246 ISZERO
0x247 ISZERO
0x248 PUSH1 0x24
0x24a CALLDATALOAD
0x24b ISZERO
0x24c ISZERO
0x24d PUSH2 0x94e
0x250 JUMP
---
0x23f: JUMPDEST 
0x240: V193 = 0xef
0x243: V194 = 0x4
0x245: V195 = CALLDATALOAD 0x4
0x246: V196 = ISZERO V195
0x247: V197 = ISZERO V196
0x248: V198 = 0x24
0x24a: V199 = CALLDATALOAD 0x24
0x24b: V200 = ISZERO V199
0x24c: V201 = ISZERO V200
0x24d: V202 = 0x94e
0x250: JUMP 0x94e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V197, V201]
Exit stack: [V12, 0xef, V197, V201]

================================

Block 0x251
[0x251:0x252]
---
Predecessors: []
Successors: []
---
0x251 JUMPDEST
0x252 STOP
---
0x251: JUMPDEST 
0x252: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x253
[0x253:0x259]
---
Predecessors: [0x88]
Successors: [0x25a, 0x25b]
---
0x253 JUMPDEST
0x254 CALLVALUE
0x255 ISZERO
0x256 PUSH2 0x25b
0x259 JUMPI
---
0x253: JUMPDEST 
0x254: V203 = CALLVALUE
0x255: V204 = ISZERO V203
0x256: V205 = 0x25b
0x259: JUMPI 0x25b V204
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25a
[0x25a:0x25a]
---
Predecessors: [0x253]
Successors: []
---
0x25a INVALID
---
0x25a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25b
[0x25b:0x262]
---
Predecessors: [0x253]
Successors: [0x9d8]
---
0x25b JUMPDEST
0x25c PUSH2 0x104
0x25f PUSH2 0x9d8
0x262 JUMP
---
0x25b: JUMPDEST 
0x25c: V206 = 0x104
0x25f: V207 = 0x9d8
0x262: JUMP 0x9d8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x263
[0x263:0x276]
---
Predecessors: []
Successors: []
---
0x263 JUMPDEST
0x264 PUSH1 0x40
0x266 DUP1
0x267 MLOAD
0x268 SWAP2
0x269 ISZERO
0x26a ISZERO
0x26b DUP3
0x26c MSTORE
0x26d MLOAD
0x26e SWAP1
0x26f DUP2
0x270 SWAP1
0x271 SUB
0x272 PUSH1 0x20
0x274 ADD
0x275 SWAP1
0x276 RETURN
---
0x263: JUMPDEST 
0x264: V208 = 0x40
0x267: V209 = M[0x40]
0x269: V210 = ISZERO S0
0x26a: V211 = ISZERO V210
0x26c: M[V209] = V211
0x26d: V212 = M[0x40]
0x271: V213 = SUB V209 V212
0x272: V214 = 0x20
0x274: V215 = ADD 0x20 V213
0x276: RETURN V212 V215
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0x93]
Successors: [0x27e, 0x27f]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x27f
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V216 = CALLVALUE
0x279: V217 = ISZERO V216
0x27a: V218 = 0x27f
0x27d: JUMPI 0x27f V217
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27e
[0x27e:0x27e]
---
Predecessors: [0x277]
Successors: []
---
0x27e INVALID
---
0x27e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27f
[0x27f:0x295]
---
Predecessors: [0x277]
Successors: [0x9e1]
---
0x27f JUMPDEST
0x280 PUSH2 0xef
0x283 PUSH1 0x1
0x285 PUSH1 0xa0
0x287 PUSH1 0x2
0x289 EXP
0x28a SUB
0x28b PUSH1 0x4
0x28d CALLDATALOAD
0x28e AND
0x28f PUSH1 0x24
0x291 CALLDATALOAD
0x292 PUSH2 0x9e1
0x295 JUMP
---
0x27f: JUMPDEST 
0x280: V219 = 0xef
0x283: V220 = 0x1
0x285: V221 = 0xa0
0x287: V222 = 0x2
0x289: V223 = EXP 0x2 0xa0
0x28a: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28b: V225 = 0x4
0x28d: V226 = CALLDATALOAD 0x4
0x28e: V227 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V228 = 0x24
0x291: V229 = CALLDATALOAD 0x24
0x292: V230 = 0x9e1
0x295: JUMP 0x9e1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V227, V229]
Exit stack: [V12, 0xef, V227, V229]

================================

Block 0x296
[0x296:0x297]
---
Predecessors: []
Successors: []
---
0x296 JUMPDEST
0x297 STOP
---
0x296: JUMPDEST 
0x297: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x298
[0x298:0x29e]
---
Predecessors: [0x9e]
Successors: [0x29f, 0x2a0]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a ISZERO
0x29b PUSH2 0x2a0
0x29e JUMPI
---
0x298: JUMPDEST 
0x299: V231 = CALLVALUE
0x29a: V232 = ISZERO V231
0x29b: V233 = 0x2a0
0x29e: JUMPI 0x2a0 V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29f
[0x29f:0x29f]
---
Predecessors: [0x298]
Successors: []
---
0x29f INVALID
---
0x29f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2ad]
---
Predecessors: [0x298]
Successors: [0xb97]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0xef
0x2a4 PUSH1 0x4
0x2a6 CALLDATALOAD
0x2a7 PUSH1 0x24
0x2a9 CALLDATALOAD
0x2aa PUSH2 0xb97
0x2ad JUMP
---
0x2a0: JUMPDEST 
0x2a1: V234 = 0xef
0x2a4: V235 = 0x4
0x2a6: V236 = CALLDATALOAD 0x4
0x2a7: V237 = 0x24
0x2a9: V238 = CALLDATALOAD 0x24
0x2aa: V239 = 0xb97
0x2ad: JUMP 0xb97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V236, V238]
Exit stack: [V12, 0xef, V236, V238]

================================

Block 0x2ae
[0x2ae:0x2af]
---
Predecessors: []
Successors: []
---
0x2ae JUMPDEST
0x2af STOP
---
0x2ae: JUMPDEST 
0x2af: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b0
[0x2b0:0x2b6]
---
Predecessors: [0xa9]
Successors: [0x2b7, 0x2b8]
---
0x2b0 JUMPDEST
0x2b1 CALLVALUE
0x2b2 ISZERO
0x2b3 PUSH2 0x2b8
0x2b6 JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V240 = CALLVALUE
0x2b2: V241 = ISZERO V240
0x2b3: V242 = 0x2b8
0x2b6: JUMPI 0x2b8 V241
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b7
[0x2b7:0x2b7]
---
Predecessors: [0x2b0]
Successors: []
---
0x2b7 INVALID
---
0x2b7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b8
[0x2b8:0x2ce]
---
Predecessors: [0x2b0]
Successors: [0xc0a]
---
0x2b8 JUMPDEST
0x2b9 PUSH2 0x104
0x2bc PUSH1 0x1
0x2be PUSH1 0xa0
0x2c0 PUSH1 0x2
0x2c2 EXP
0x2c3 SUB
0x2c4 PUSH1 0x4
0x2c6 CALLDATALOAD
0x2c7 AND
0x2c8 PUSH1 0x24
0x2ca CALLDATALOAD
0x2cb PUSH2 0xc0a
0x2ce JUMP
---
0x2b8: JUMPDEST 
0x2b9: V243 = 0x104
0x2bc: V244 = 0x1
0x2be: V245 = 0xa0
0x2c0: V246 = 0x2
0x2c2: V247 = EXP 0x2 0xa0
0x2c3: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c4: V249 = 0x4
0x2c6: V250 = CALLDATALOAD 0x4
0x2c7: V251 = AND V250 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V252 = 0x24
0x2ca: V253 = CALLDATALOAD 0x24
0x2cb: V254 = 0xc0a
0x2ce: JUMP 0xc0a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104, V251, V253]
Exit stack: [V12, 0x104, V251, V253]

================================

Block 0x2cf
[0x2cf:0x2e2]
---
Predecessors: []
Successors: []
---
0x2cf JUMPDEST
0x2d0 PUSH1 0x40
0x2d2 DUP1
0x2d3 MLOAD
0x2d4 SWAP2
0x2d5 ISZERO
0x2d6 ISZERO
0x2d7 DUP3
0x2d8 MSTORE
0x2d9 MLOAD
0x2da SWAP1
0x2db DUP2
0x2dc SWAP1
0x2dd SUB
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 SWAP1
0x2e2 RETURN
---
0x2cf: JUMPDEST 
0x2d0: V255 = 0x40
0x2d3: V256 = M[0x40]
0x2d5: V257 = ISZERO S0
0x2d6: V258 = ISZERO V257
0x2d8: M[V256] = V258
0x2d9: V259 = M[0x40]
0x2dd: V260 = SUB V256 V259
0x2de: V261 = 0x20
0x2e0: V262 = ADD 0x20 V260
0x2e2: RETURN V259 V262
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e3
[0x2e3:0x2ea]
---
Predecessors: [0xb4]
Successors: [0x347]
---
0x2e3 JUMPDEST
0x2e4 PUSH2 0xef
0x2e7 PUSH2 0x347
0x2ea JUMP
---
0x2e3: JUMPDEST 
0x2e4: V263 = 0xef
0x2e7: V264 = 0x347
0x2ea: JUMP 0x347
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0x2eb
[0x2eb:0x2ec]
---
Predecessors: []
Successors: []
---
0x2eb JUMPDEST
0x2ec STOP
---
0x2eb: JUMPDEST 
0x2ec: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ed
[0x2ed:0x2f3]
---
Predecessors: [0xbf]
Successors: [0x2f4, 0x2f5]
---
0x2ed JUMPDEST
0x2ee CALLVALUE
0x2ef ISZERO
0x2f0 PUSH2 0x2f5
0x2f3 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V265 = CALLVALUE
0x2ef: V266 = ISZERO V265
0x2f0: V267 = 0x2f5
0x2f3: JUMPI 0x2f5 V266
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f4
[0x2f4:0x2f4]
---
Predecessors: [0x2ed]
Successors: []
---
0x2f4 INVALID
---
0x2f4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f5
[0x2f5:0x2ff]
---
Predecessors: [0x2ed]
Successors: [0xcfd]
---
0x2f5 JUMPDEST
0x2f6 PUSH2 0x104
0x2f9 PUSH1 0x4
0x2fb CALLDATALOAD
0x2fc PUSH2 0xcfd
0x2ff JUMP
---
0x2f5: JUMPDEST 
0x2f6: V268 = 0x104
0x2f9: V269 = 0x4
0x2fb: V270 = CALLDATALOAD 0x4
0x2fc: V271 = 0xcfd
0x2ff: JUMP 0xcfd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104, V270]
Exit stack: [V12, 0x104, V270]

================================

Block 0x300
[0x300:0x313]
---
Predecessors: []
Successors: []
---
0x300 JUMPDEST
0x301 PUSH1 0x40
0x303 DUP1
0x304 MLOAD
0x305 SWAP2
0x306 ISZERO
0x307 ISZERO
0x308 DUP3
0x309 MSTORE
0x30a MLOAD
0x30b SWAP1
0x30c DUP2
0x30d SWAP1
0x30e SUB
0x30f PUSH1 0x20
0x311 ADD
0x312 SWAP1
0x313 RETURN
---
0x300: JUMPDEST 
0x301: V272 = 0x40
0x304: V273 = M[0x40]
0x306: V274 = ISZERO S0
0x307: V275 = ISZERO V274
0x309: M[V273] = V275
0x30a: V276 = M[0x40]
0x30e: V277 = SUB V273 V276
0x30f: V278 = 0x20
0x311: V279 = ADD 0x20 V277
0x313: RETURN V276 V279
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x314
[0x314:0x31a]
---
Predecessors: [0xca]
Successors: [0x31b, 0x31c]
---
0x314 JUMPDEST
0x315 CALLVALUE
0x316 ISZERO
0x317 PUSH2 0x31c
0x31a JUMPI
---
0x314: JUMPDEST 
0x315: V280 = CALLVALUE
0x316: V281 = ISZERO V280
0x317: V282 = 0x31c
0x31a: JUMPI 0x31c V281
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31b
[0x31b:0x31b]
---
Predecessors: [0x314]
Successors: []
---
0x31b INVALID
---
0x31b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31c
[0x31c:0x326]
---
Predecessors: [0x314]
Successors: [0xde1]
---
0x31c JUMPDEST
0x31d PUSH2 0xef
0x320 PUSH1 0x4
0x322 CALLDATALOAD
0x323 PUSH2 0xde1
0x326 JUMP
---
0x31c: JUMPDEST 
0x31d: V283 = 0xef
0x320: V284 = 0x4
0x322: V285 = CALLDATALOAD 0x4
0x323: V286 = 0xde1
0x326: JUMP 0xde1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V285]
Exit stack: [V12, 0xef, V285]

================================

Block 0x327
[0x327:0x328]
---
Predecessors: []
Successors: []
---
0x327 JUMPDEST
0x328 STOP
---
0x327: JUMPDEST 
0x328: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x329
[0x329:0x32f]
---
Predecessors: [0xd5]
Successors: [0x330, 0x331]
---
0x329 JUMPDEST
0x32a CALLVALUE
0x32b ISZERO
0x32c PUSH2 0x331
0x32f JUMPI
---
0x329: JUMPDEST 
0x32a: V287 = CALLVALUE
0x32b: V288 = ISZERO V287
0x32c: V289 = 0x331
0x32f: JUMPI 0x331 V288
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x330
[0x330:0x330]
---
Predecessors: [0x329]
Successors: []
---
0x330 INVALID
---
0x330: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x331
[0x331:0x344]
---
Predecessors: [0x329]
Successors: [0xf7e]
---
0x331 JUMPDEST
0x332 PUSH2 0xef
0x335 PUSH1 0x1
0x337 PUSH1 0xa0
0x339 PUSH1 0x2
0x33b EXP
0x33c SUB
0x33d PUSH1 0x4
0x33f CALLDATALOAD
0x340 AND
0x341 PUSH2 0xf7e
0x344 JUMP
---
0x331: JUMPDEST 
0x332: V290 = 0xef
0x335: V291 = 0x1
0x337: V292 = 0xa0
0x339: V293 = 0x2
0x33b: V294 = EXP 0x2 0xa0
0x33c: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33d: V296 = 0x4
0x33f: V297 = CALLDATALOAD 0x4
0x340: V298 = AND V297 0xffffffffffffffffffffffffffffffffffffffff
0x341: V299 = 0xf7e
0x344: JUMP 0xf7e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V298]
Exit stack: [V12, 0xef, V298]

================================

Block 0x345
[0x345:0x346]
---
Predecessors: []
Successors: []
---
0x345 JUMPDEST
0x346 STOP
---
0x345: JUMPDEST 
0x346: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x347
[0x347:0x362]
---
Predecessors: [0xe4, 0x2e3]
Successors: [0x363, 0x376]
---
0x347 JUMPDEST
0x348 PUSH1 0x0
0x34a PUSH1 0x0
0x34c PUSH1 0x0
0x34e PUSH1 0x5
0x350 PUSH1 0x1
0x352 SWAP1
0x353 SLOAD
0x354 SWAP1
0x355 PUSH2 0x100
0x358 EXP
0x359 SWAP1
0x35a DIV
0x35b PUSH1 0xff
0x35d AND
0x35e DUP1
0x35f PUSH2 0x376
0x362 JUMPI
---
0x347: JUMPDEST 
0x348: V300 = 0x0
0x34a: V301 = 0x0
0x34c: V302 = 0x0
0x34e: V303 = 0x5
0x350: V304 = 0x1
0x353: V305 = S[0x5]
0x355: V306 = 0x100
0x358: V307 = EXP 0x100 0x1
0x35a: V308 = DIV V305 0x100
0x35b: V309 = 0xff
0x35d: V310 = AND 0xff V308
0x35f: V311 = 0x376
0x362: JUMPI 0x376 V310
---
Entry stack: [V12, S1, {0xec, 0xef}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V310]
Exit stack: [V12, S1, {0xec, 0xef}, 0x0, 0x0, 0x0, V310]

================================

Block 0x363
[0x363:0x375]
---
Predecessors: [0x347]
Successors: [0x376]
---
0x363 POP
0x364 PUSH1 0x0
0x366 SLOAD
0x367 CALLER
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 SWAP1
0x371 DUP2
0x372 AND
0x373 SWAP2
0x374 AND
0x375 EQ
---
0x364: V312 = 0x0
0x366: V313 = S[0x0]
0x367: V314 = CALLER
0x368: V315 = 0x1
0x36a: V316 = 0xa0
0x36c: V317 = 0x2
0x36e: V318 = EXP 0x2 0xa0
0x36f: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x372: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x374: V321 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x375: V322 = EQ V321 V320
---
Entry stack: [V12, S5, {0xec, 0xef}, 0x0, 0x0, 0x0, V310]
Stack pops: 1
Stack additions: [V322]
Exit stack: [V12, S5, {0xec, 0xef}, 0x0, 0x0, 0x0, V322]

================================

Block 0x376
[0x376:0x37b]
---
Predecessors: [0x347, 0x363]
Successors: [0x37c, 0x57e]
---
0x376 JUMPDEST
0x377 ISZERO
0x378 PUSH2 0x57e
0x37b JUMPI
---
0x376: JUMPDEST 
0x377: V323 = ISZERO S0
0x378: V324 = 0x57e
0x37b: JUMPI 0x57e V323
---
Entry stack: [V12, S5, {0xec, 0xef}, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S5, {0xec, 0xef}, 0x0, 0x0, 0x0]

================================

Block 0x37c
[0x37c:0x386]
---
Predecessors: [0x376]
Successors: [0x387, 0x388]
---
0x37c PUSH1 0x3
0x37e SLOAD
0x37f CALLVALUE
0x380 DUP2
0x381 ISZERO
0x382 ISZERO
0x383 PUSH2 0x388
0x386 JUMPI
---
0x37c: V325 = 0x3
0x37e: V326 = S[0x3]
0x37f: V327 = CALLVALUE
0x381: V328 = ISZERO V326
0x382: V329 = ISZERO V328
0x383: V330 = 0x388
0x386: JUMPI 0x388 V329
---
Entry stack: [V12, S4, {0xec, 0xef}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V326, V327]
Exit stack: [V12, S4, {0xec, 0xef}, 0x0, 0x0, 0x0, V326, V327]

================================

Block 0x387
[0x387:0x387]
---
Predecessors: [0x37c]
Successors: []
---
0x387 INVALID
---
0x387: INVALID 
---
Entry stack: [V12, S6, {0xec, 0xef}, 0x0, 0x0, 0x0, V326, V327]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0xec, 0xef}, 0x0, 0x0, 0x0, V326, V327]

================================

Block 0x388
[0x388:0x401]
---
Predecessors: [0x37c]
Successors: [0x402, 0x403]
---
0x388 JUMPDEST
0x389 DIV
0x38a SWAP3
0x38b POP
0x38c PUSH1 0x4
0x38e SLOAD
0x38f PUSH1 0x1
0x391 PUSH1 0x0
0x393 SWAP1
0x394 SLOAD
0x395 SWAP1
0x396 PUSH2 0x100
0x399 EXP
0x39a SWAP1
0x39b DIV
0x39c PUSH1 0x1
0x39e PUSH1 0xa0
0x3a0 PUSH1 0x2
0x3a2 EXP
0x3a3 SUB
0x3a4 AND
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 PUSH1 0x2
0x3ab EXP
0x3ac SUB
0x3ad AND
0x3ae PUSH4 0x70a08231
0x3b3 ADDRESS
0x3b4 PUSH1 0x0
0x3b6 PUSH1 0x40
0x3b8 MLOAD
0x3b9 PUSH1 0x20
0x3bb ADD
0x3bc MSTORE
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 DUP3
0x3c1 PUSH4 0xffffffff
0x3c6 AND
0x3c7 PUSH1 0xe0
0x3c9 PUSH1 0x2
0x3cb EXP
0x3cc MUL
0x3cd DUP2
0x3ce MSTORE
0x3cf PUSH1 0x4
0x3d1 ADD
0x3d2 DUP1
0x3d3 DUP3
0x3d4 PUSH1 0x1
0x3d6 PUSH1 0xa0
0x3d8 PUSH1 0x2
0x3da EXP
0x3db SUB
0x3dc AND
0x3dd PUSH1 0x1
0x3df PUSH1 0xa0
0x3e1 PUSH1 0x2
0x3e3 EXP
0x3e4 SUB
0x3e5 AND
0x3e6 DUP2
0x3e7 MSTORE
0x3e8 PUSH1 0x20
0x3ea ADD
0x3eb SWAP2
0x3ec POP
0x3ed POP
0x3ee PUSH1 0x20
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 DUP4
0x3f5 SUB
0x3f6 DUP2
0x3f7 PUSH1 0x0
0x3f9 DUP8
0x3fa DUP1
0x3fb EXTCODESIZE
0x3fc ISZERO
0x3fd ISZERO
0x3fe PUSH2 0x403
0x401 JUMPI
---
0x388: JUMPDEST 
0x389: V331 = DIV V327 V326
0x38c: V332 = 0x4
0x38e: V333 = S[0x4]
0x38f: V334 = 0x1
0x391: V335 = 0x0
0x394: V336 = S[0x1]
0x396: V337 = 0x100
0x399: V338 = EXP 0x100 0x0
0x39b: V339 = DIV V336 0x1
0x39c: V340 = 0x1
0x39e: V341 = 0xa0
0x3a0: V342 = 0x2
0x3a2: V343 = EXP 0x2 0xa0
0x3a3: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a4: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x3a5: V346 = 0x1
0x3a7: V347 = 0xa0
0x3a9: V348 = 0x2
0x3ab: V349 = EXP 0x2 0xa0
0x3ac: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ad: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x3ae: V352 = 0x70a08231
0x3b3: V353 = ADDRESS
0x3b4: V354 = 0x0
0x3b6: V355 = 0x40
0x3b8: V356 = M[0x40]
0x3b9: V357 = 0x20
0x3bb: V358 = ADD 0x20 V356
0x3bc: M[V358] = 0x0
0x3bd: V359 = 0x40
0x3bf: V360 = M[0x40]
0x3c1: V361 = 0xffffffff
0x3c6: V362 = AND 0xffffffff 0x70a08231
0x3c7: V363 = 0xe0
0x3c9: V364 = 0x2
0x3cb: V365 = EXP 0x2 0xe0
0x3cc: V366 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x3ce: M[V360] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3cf: V367 = 0x4
0x3d1: V368 = ADD 0x4 V360
0x3d4: V369 = 0x1
0x3d6: V370 = 0xa0
0x3d8: V371 = 0x2
0x3da: V372 = EXP 0x2 0xa0
0x3db: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dc: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x3dd: V375 = 0x1
0x3df: V376 = 0xa0
0x3e1: V377 = 0x2
0x3e3: V378 = EXP 0x2 0xa0
0x3e4: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e5: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x3e7: M[V368] = V380
0x3e8: V381 = 0x20
0x3ea: V382 = ADD 0x20 V368
0x3ee: V383 = 0x20
0x3f0: V384 = 0x40
0x3f2: V385 = M[0x40]
0x3f5: V386 = SUB V382 V385
0x3f7: V387 = 0x0
0x3fb: V388 = EXTCODESIZE V351
0x3fc: V389 = ISZERO V388
0x3fd: V390 = ISZERO V389
0x3fe: V391 = 0x403
0x401: JUMPI 0x403 V390
---
Entry stack: [V12, S6, {0xec, 0xef}, 0x0, 0x0, 0x0, V326, V327]
Stack pops: 5
Stack additions: [V331, S3, S2, V333, V351, 0x70a08231, V382, 0x20, V385, V386, V385, 0x0, V351]
Exit stack: [V12, S6, {0xec, 0xef}, V331, 0x0, 0x0, V333, V351, 0x70a08231, V382, 0x20, V385, V386, V385, 0x0, V351]

================================

Block 0x402
[0x402:0x402]
---
Predecessors: [0x388]
Successors: []
---
0x402 INVALID
---
0x402: INVALID 
---
Entry stack: [V12, S14, {0xec, 0xef}, V331, 0x0, 0x0, V333, V351, 0x70a08231, V382, 0x20, V385, V386, V385, 0x0, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, {0xec, 0xef}, V331, 0x0, 0x0, V333, V351, 0x70a08231, V382, 0x20, V385, V386, V385, 0x0, V351]

================================

Block 0x403
[0x403:0x40f]
---
Predecessors: [0x388]
Successors: [0x410, 0x411]
---
0x403 JUMPDEST
0x404 PUSH2 0x2c6
0x407 GAS
0x408 SUB
0x409 CALL
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x411
0x40f JUMPI
---
0x403: JUMPDEST 
0x404: V392 = 0x2c6
0x407: V393 = GAS
0x408: V394 = SUB V393 0x2c6
0x409: V395 = CALL V394 V351 0x0 V385 V386 V385 0x20
0x40a: V396 = ISZERO V395
0x40b: V397 = ISZERO V396
0x40c: V398 = 0x411
0x40f: JUMPI 0x411 V397
---
Entry stack: [V12, S14, {0xec, 0xef}, V331, 0x0, 0x0, V333, V351, 0x70a08231, V382, 0x20, V385, V386, V385, 0x0, V351]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, {0xec, 0xef}, V331, 0x0, 0x0, V333, V351, 0x70a08231, V382]

================================

Block 0x410
[0x410:0x410]
---
Predecessors: [0x403]
Successors: []
---
0x410 INVALID
---
0x410: INVALID 
---
Entry stack: [V12, S8, {0xec, 0xef}, V331, 0x0, 0x0, V333, V351, 0x70a08231, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, {0xec, 0xef}, V331, 0x0, 0x0, V333, V351, 0x70a08231, V382]

================================

Block 0x411
[0x411:0x420]
---
Predecessors: [0x403]
Successors: [0x421, 0x422]
---
0x411 JUMPDEST
0x412 POP
0x413 POP
0x414 PUSH1 0x40
0x416 MLOAD
0x417 MLOAD
0x418 SWAP1
0x419 POP
0x41a DUP2
0x41b ISZERO
0x41c ISZERO
0x41d PUSH2 0x422
0x420 JUMPI
---
0x411: JUMPDEST 
0x414: V399 = 0x40
0x416: V400 = M[0x40]
0x417: V401 = M[V400]
0x41b: V402 = ISZERO V333
0x41c: V403 = ISZERO V402
0x41d: V404 = 0x422
0x420: JUMPI 0x422 V403
---
Entry stack: [V12, S8, {0xec, 0xef}, V331, 0x0, 0x0, V333, V351, 0x70a08231, V382]
Stack pops: 4
Stack additions: [S3, V401]
Exit stack: [V12, S8, {0xec, 0xef}, V331, 0x0, 0x0, V333, V401]

================================

Block 0x421
[0x421:0x421]
---
Predecessors: [0x411]
Successors: []
---
0x421 INVALID
---
0x421: INVALID 
---
Entry stack: [V12, S6, {0xec, 0xef}, V331, 0x0, 0x0, V333, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0xec, 0xef}, V331, 0x0, 0x0, V333, V401]

================================

Block 0x422
[0x422:0x435]
---
Predecessors: [0x411]
Successors: [0x436, 0x442]
---
0x422 JUMPDEST
0x423 DIV
0x424 SWAP2
0x425 POP
0x426 PUSH1 0x0
0x428 SWAP1
0x429 POP
0x42a PUSH1 0x3
0x42c SLOAD
0x42d DUP3
0x42e MUL
0x42f CALLVALUE
0x430 GT
0x431 ISZERO
0x432 PUSH2 0x442
0x435 JUMPI
---
0x422: JUMPDEST 
0x423: V405 = DIV V401 V333
0x426: V406 = 0x0
0x42a: V407 = 0x3
0x42c: V408 = S[0x3]
0x42e: V409 = MUL V405 V408
0x42f: V410 = CALLVALUE
0x430: V411 = GT V410 V409
0x431: V412 = ISZERO V411
0x432: V413 = 0x442
0x435: JUMPI 0x442 V412
---
Entry stack: [V12, S6, {0xec, 0xef}, V331, 0x0, 0x0, V333, V401]
Stack pops: 4
Stack additions: [V405, 0x0]
Exit stack: [V12, S6, {0xec, 0xef}, V331, V405, 0x0]

================================

Block 0x436
[0x436:0x441]
---
Predecessors: [0x422]
Successors: [0x442]
---
0x436 PUSH1 0x3
0x438 SLOAD
0x439 DUP3
0x43a MUL
0x43b CALLVALUE
0x43c SUB
0x43d SWAP1
0x43e POP
0x43f DUP2
0x440 SWAP3
0x441 POP
---
0x436: V414 = 0x3
0x438: V415 = S[0x3]
0x43a: V416 = MUL V405 V415
0x43b: V417 = CALLVALUE
0x43c: V418 = SUB V417 V416
---
Entry stack: [V12, S4, {0xec, 0xef}, V331, V405, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V418]
Exit stack: [V12, S4, {0xec, 0xef}, V405, V405, V418]

================================

Block 0x442
[0x442:0x44b]
---
Predecessors: [0x422, 0x436]
Successors: [0x44c, 0x47c]
---
0x442 JUMPDEST
0x443 PUSH1 0x0
0x445 DUP2
0x446 GT
0x447 ISZERO
0x448 PUSH2 0x47c
0x44b JUMPI
---
0x442: JUMPDEST 
0x443: V419 = 0x0
0x446: V420 = GT S0 0x0
0x447: V421 = ISZERO V420
0x448: V422 = 0x47c
0x44b: JUMPI 0x47c V421
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]

================================

Block 0x44c
[0x44c:0x476]
---
Predecessors: [0x442]
Successors: [0x477, 0x47c]
---
0x44c PUSH1 0x40
0x44e MLOAD
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 CALLER
0x458 AND
0x459 SWAP1
0x45a DUP3
0x45b ISZERO
0x45c PUSH2 0x8fc
0x45f MUL
0x460 SWAP1
0x461 DUP4
0x462 SWAP1
0x463 PUSH1 0x0
0x465 DUP2
0x466 DUP2
0x467 DUP2
0x468 DUP6
0x469 DUP9
0x46a DUP9
0x46b CALL
0x46c SWAP4
0x46d POP
0x46e POP
0x46f POP
0x470 POP
0x471 ISZERO
0x472 ISZERO
0x473 PUSH2 0x47c
0x476 JUMPI
---
0x44c: V423 = 0x40
0x44e: V424 = M[0x40]
0x44f: V425 = 0x1
0x451: V426 = 0xa0
0x453: V427 = 0x2
0x455: V428 = EXP 0x2 0xa0
0x456: V429 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V430 = CALLER
0x458: V431 = AND V430 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V432 = ISZERO S0
0x45c: V433 = 0x8fc
0x45f: V434 = MUL 0x8fc V432
0x463: V435 = 0x0
0x46b: V436 = CALL V434 V431 S0 V424 0x0 V424 0x0
0x471: V437 = ISZERO V436
0x472: V438 = ISZERO V437
0x473: V439 = 0x47c
0x476: JUMPI 0x47c V438
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]

================================

Block 0x477
[0x477:0x47b]
---
Predecessors: [0x44c]
Successors: []
---
0x477 PUSH1 0x0
0x479 PUSH1 0x0
0x47b REVERT
---
0x477: V440 = 0x0
0x479: V441 = 0x0
0x47b: REVERT 0x0 0x0
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]

================================

Block 0x47c
[0x47c:0x47c]
---
Predecessors: [0x442, 0x44c]
Successors: [0x47d]
---
0x47c JUMPDEST
---
0x47c: JUMPDEST 
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]

================================

Block 0x47d
[0x47d:0x486]
---
Predecessors: [0x47c]
Successors: [0x487, 0x529]
---
0x47d JUMPDEST
0x47e PUSH1 0x0
0x480 DUP4
0x481 GT
0x482 ISZERO
0x483 PUSH2 0x529
0x486 JUMPI
---
0x47d: JUMPDEST 
0x47e: V442 = 0x0
0x481: V443 = GT S2 0x0
0x482: V444 = ISZERO V443
0x483: V445 = 0x529
0x486: JUMPI 0x529 V444
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]

================================

Block 0x487
[0x487:0x505]
---
Predecessors: [0x47d]
Successors: [0x506, 0x507]
---
0x487 PUSH1 0x1
0x489 PUSH1 0x0
0x48b SWAP1
0x48c SLOAD
0x48d SWAP1
0x48e PUSH2 0x100
0x491 EXP
0x492 SWAP1
0x493 DIV
0x494 PUSH1 0x1
0x496 PUSH1 0xa0
0x498 PUSH1 0x2
0x49a EXP
0x49b SUB
0x49c AND
0x49d PUSH1 0x1
0x49f PUSH1 0xa0
0x4a1 PUSH1 0x2
0x4a3 EXP
0x4a4 SUB
0x4a5 AND
0x4a6 PUSH4 0xa9059cbb
0x4ab CALLER
0x4ac PUSH1 0x4
0x4ae SLOAD
0x4af DUP7
0x4b0 MUL
0x4b1 PUSH1 0x0
0x4b3 PUSH1 0x40
0x4b5 MLOAD
0x4b6 PUSH1 0x20
0x4b8 ADD
0x4b9 MSTORE
0x4ba PUSH1 0x40
0x4bc MLOAD
0x4bd DUP4
0x4be PUSH4 0xffffffff
0x4c3 AND
0x4c4 PUSH1 0xe0
0x4c6 PUSH1 0x2
0x4c8 EXP
0x4c9 MUL
0x4ca DUP2
0x4cb MSTORE
0x4cc PUSH1 0x4
0x4ce ADD
0x4cf DUP1
0x4d0 DUP4
0x4d1 PUSH1 0x1
0x4d3 PUSH1 0xa0
0x4d5 PUSH1 0x2
0x4d7 EXP
0x4d8 SUB
0x4d9 AND
0x4da PUSH1 0x1
0x4dc PUSH1 0xa0
0x4de PUSH1 0x2
0x4e0 EXP
0x4e1 SUB
0x4e2 AND
0x4e3 DUP2
0x4e4 MSTORE
0x4e5 PUSH1 0x20
0x4e7 ADD
0x4e8 DUP3
0x4e9 DUP2
0x4ea MSTORE
0x4eb PUSH1 0x20
0x4ed ADD
0x4ee SWAP3
0x4ef POP
0x4f0 POP
0x4f1 POP
0x4f2 PUSH1 0x20
0x4f4 PUSH1 0x40
0x4f6 MLOAD
0x4f7 DUP1
0x4f8 DUP4
0x4f9 SUB
0x4fa DUP2
0x4fb PUSH1 0x0
0x4fd DUP8
0x4fe DUP1
0x4ff EXTCODESIZE
0x500 ISZERO
0x501 ISZERO
0x502 PUSH2 0x507
0x505 JUMPI
---
0x487: V446 = 0x1
0x489: V447 = 0x0
0x48c: V448 = S[0x1]
0x48e: V449 = 0x100
0x491: V450 = EXP 0x100 0x0
0x493: V451 = DIV V448 0x1
0x494: V452 = 0x1
0x496: V453 = 0xa0
0x498: V454 = 0x2
0x49a: V455 = EXP 0x2 0xa0
0x49b: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49c: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x49d: V458 = 0x1
0x49f: V459 = 0xa0
0x4a1: V460 = 0x2
0x4a3: V461 = EXP 0x2 0xa0
0x4a4: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a5: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x4a6: V464 = 0xa9059cbb
0x4ab: V465 = CALLER
0x4ac: V466 = 0x4
0x4ae: V467 = S[0x4]
0x4b0: V468 = MUL S2 V467
0x4b1: V469 = 0x0
0x4b3: V470 = 0x40
0x4b5: V471 = M[0x40]
0x4b6: V472 = 0x20
0x4b8: V473 = ADD 0x20 V471
0x4b9: M[V473] = 0x0
0x4ba: V474 = 0x40
0x4bc: V475 = M[0x40]
0x4be: V476 = 0xffffffff
0x4c3: V477 = AND 0xffffffff 0xa9059cbb
0x4c4: V478 = 0xe0
0x4c6: V479 = 0x2
0x4c8: V480 = EXP 0x2 0xe0
0x4c9: V481 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x4cb: M[V475] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4cc: V482 = 0x4
0x4ce: V483 = ADD 0x4 V475
0x4d1: V484 = 0x1
0x4d3: V485 = 0xa0
0x4d5: V486 = 0x2
0x4d7: V487 = EXP 0x2 0xa0
0x4d8: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d9: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x4da: V490 = 0x1
0x4dc: V491 = 0xa0
0x4de: V492 = 0x2
0x4e0: V493 = EXP 0x2 0xa0
0x4e1: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e2: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x4e4: M[V483] = V495
0x4e5: V496 = 0x20
0x4e7: V497 = ADD 0x20 V483
0x4ea: M[V497] = V468
0x4eb: V498 = 0x20
0x4ed: V499 = ADD 0x20 V497
0x4f2: V500 = 0x20
0x4f4: V501 = 0x40
0x4f6: V502 = M[0x40]
0x4f9: V503 = SUB V499 V502
0x4fb: V504 = 0x0
0x4ff: V505 = EXTCODESIZE V463
0x500: V506 = ISZERO V505
0x501: V507 = ISZERO V506
0x502: V508 = 0x507
0x505: JUMPI 0x507 V507
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V463, 0xa9059cbb, V499, 0x20, V502, V503, V502, 0x0, V463]
Exit stack: [V12, S4, {0xec, 0xef}, S2, V405, S0, V463, 0xa9059cbb, V499, 0x20, V502, V503, V502, 0x0, V463]

================================

Block 0x506
[0x506:0x506]
---
Predecessors: [0x487]
Successors: []
---
0x506 INVALID
---
0x506: INVALID 
---
Entry stack: [V12, S13, {0xec, 0xef}, S11, V405, S9, V463, 0xa9059cbb, V499, 0x20, V502, V503, V502, 0x0, V463]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, {0xec, 0xef}, S11, V405, S9, V463, 0xa9059cbb, V499, 0x20, V502, V503, V502, 0x0, V463]

================================

Block 0x507
[0x507:0x513]
---
Predecessors: [0x487]
Successors: [0x514, 0x515]
---
0x507 JUMPDEST
0x508 PUSH2 0x2c6
0x50b GAS
0x50c SUB
0x50d CALL
0x50e ISZERO
0x50f ISZERO
0x510 PUSH2 0x515
0x513 JUMPI
---
0x507: JUMPDEST 
0x508: V509 = 0x2c6
0x50b: V510 = GAS
0x50c: V511 = SUB V510 0x2c6
0x50d: V512 = CALL V511 V463 0x0 V502 V503 V502 0x20
0x50e: V513 = ISZERO V512
0x50f: V514 = ISZERO V513
0x510: V515 = 0x515
0x513: JUMPI 0x515 V514
---
Entry stack: [V12, S13, {0xec, 0xef}, S11, V405, S9, V463, 0xa9059cbb, V499, 0x20, V502, V503, V502, 0x0, V463]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S13, {0xec, 0xef}, S11, V405, S9, V463, 0xa9059cbb, V499]

================================

Block 0x514
[0x514:0x514]
---
Predecessors: [0x507]
Successors: []
---
0x514 INVALID
---
0x514: INVALID 
---
Entry stack: [V12, S7, {0xec, 0xef}, S5, V405, S3, V463, 0xa9059cbb, V499]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0xec, 0xef}, S5, V405, S3, V463, 0xa9059cbb, V499]

================================

Block 0x515
[0x515:0x523]
---
Predecessors: [0x507]
Successors: [0x524, 0x529]
---
0x515 JUMPDEST
0x516 POP
0x517 POP
0x518 PUSH1 0x40
0x51a MLOAD
0x51b MLOAD
0x51c ISZERO
0x51d ISZERO
0x51e SWAP1
0x51f POP
0x520 PUSH2 0x529
0x523 JUMPI
---
0x515: JUMPDEST 
0x518: V516 = 0x40
0x51a: V517 = M[0x40]
0x51b: V518 = M[V517]
0x51c: V519 = ISZERO V518
0x51d: V520 = ISZERO V519
0x520: V521 = 0x529
0x523: JUMPI 0x529 V520
---
Entry stack: [V12, S7, {0xec, 0xef}, S5, V405, S3, V463, 0xa9059cbb, V499]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S7, {0xec, 0xef}, S5, V405, S3]

================================

Block 0x524
[0x524:0x528]
---
Predecessors: [0x515]
Successors: []
---
0x524 PUSH1 0x0
0x526 PUSH1 0x0
0x528 REVERT
---
0x524: V522 = 0x0
0x526: V523 = 0x0
0x528: REVERT 0x0 0x0
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]

================================

Block 0x529
[0x529:0x529]
---
Predecessors: [0x47d, 0x515]
Successors: [0x52a]
---
0x529 JUMPDEST
---
0x529: JUMPDEST 
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]

================================

Block 0x52a
[0x52a:0x57d]
---
Predecessors: [0x529]
Successors: [0x5ae]
---
0x52a JUMPDEST
0x52b PUSH1 0x4
0x52d SLOAD
0x52e PUSH1 0x40
0x530 DUP1
0x531 MLOAD
0x532 CALLVALUE
0x533 DUP2
0x534 MSTORE
0x535 PUSH1 0x20
0x537 DUP2
0x538 ADD
0x539 DUP5
0x53a SWAP1
0x53b MSTORE
0x53c SWAP2
0x53d DUP6
0x53e MUL
0x53f DUP3
0x540 DUP3
0x541 ADD
0x542 MSTORE
0x543 MLOAD
0x544 PUSH1 0x1
0x546 PUSH1 0xa0
0x548 PUSH1 0x2
0x54a EXP
0x54b SUB
0x54c CALLER
0x54d AND
0x54e SWAP2
0x54f PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x570 SWAP2
0x571 SWAP1
0x572 DUP2
0x573 SWAP1
0x574 SUB
0x575 PUSH1 0x60
0x577 ADD
0x578 SWAP1
0x579 LOG2
0x57a PUSH2 0x5ae
0x57d JUMP
---
0x52a: JUMPDEST 
0x52b: V524 = 0x4
0x52d: V525 = S[0x4]
0x52e: V526 = 0x40
0x531: V527 = M[0x40]
0x532: V528 = CALLVALUE
0x534: M[V527] = V528
0x535: V529 = 0x20
0x538: V530 = ADD V527 0x20
0x53b: M[V530] = S0
0x53e: V531 = MUL S2 V525
0x541: V532 = ADD 0x40 V527
0x542: M[V532] = V531
0x543: V533 = M[0x40]
0x544: V534 = 0x1
0x546: V535 = 0xa0
0x548: V536 = 0x2
0x54a: V537 = EXP 0x2 0xa0
0x54b: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54c: V539 = CALLER
0x54d: V540 = AND V539 0xffffffffffffffffffffffffffffffffffffffff
0x54f: V541 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x574: V542 = SUB V527 V533
0x575: V543 = 0x60
0x577: V544 = ADD 0x60 V542
0x579: LOG V533 V544 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V540
0x57a: V545 = 0x5ae
0x57d: JUMP 0x5ae
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S4, {0xec, 0xef}, S2, V405, S0]

================================

Block 0x57e
[0x57e:0x5a8]
---
Predecessors: [0x376]
Successors: [0x5a9, 0x5ae]
---
0x57e JUMPDEST
0x57f PUSH1 0x40
0x581 MLOAD
0x582 PUSH1 0x1
0x584 PUSH1 0xa0
0x586 PUSH1 0x2
0x588 EXP
0x589 SUB
0x58a CALLER
0x58b AND
0x58c SWAP1
0x58d CALLVALUE
0x58e DUP1
0x58f ISZERO
0x590 PUSH2 0x8fc
0x593 MUL
0x594 SWAP2
0x595 PUSH1 0x0
0x597 DUP2
0x598 DUP2
0x599 DUP2
0x59a DUP6
0x59b DUP9
0x59c DUP9
0x59d CALL
0x59e SWAP4
0x59f POP
0x5a0 POP
0x5a1 POP
0x5a2 POP
0x5a3 ISZERO
0x5a4 ISZERO
0x5a5 PUSH2 0x5ae
0x5a8 JUMPI
---
0x57e: JUMPDEST 
0x57f: V546 = 0x40
0x581: V547 = M[0x40]
0x582: V548 = 0x1
0x584: V549 = 0xa0
0x586: V550 = 0x2
0x588: V551 = EXP 0x2 0xa0
0x589: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58a: V553 = CALLER
0x58b: V554 = AND V553 0xffffffffffffffffffffffffffffffffffffffff
0x58d: V555 = CALLVALUE
0x58f: V556 = ISZERO V555
0x590: V557 = 0x8fc
0x593: V558 = MUL 0x8fc V556
0x595: V559 = 0x0
0x59d: V560 = CALL V558 V554 V555 V547 0x0 V547 0x0
0x5a3: V561 = ISZERO V560
0x5a4: V562 = ISZERO V561
0x5a5: V563 = 0x5ae
0x5a8: JUMPI 0x5ae V562
---
Entry stack: [V12, S4, {0xec, 0xef}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xec, 0xef}, 0x0, 0x0, 0x0]

================================

Block 0x5a9
[0x5a9:0x5ad]
---
Predecessors: [0x57e]
Successors: []
---
0x5a9 PUSH1 0x0
0x5ab PUSH1 0x0
0x5ad REVERT
---
0x5a9: V564 = 0x0
0x5ab: V565 = 0x0
0x5ad: REVERT 0x0 0x0
---
Entry stack: [V12, S4, {0xec, 0xef}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xec, 0xef}, 0x0, 0x0, 0x0]

================================

Block 0x5ae
[0x5ae:0x5ae]
---
Predecessors: [0x52a, 0x57e, 0xe05]
Successors: [0x5af]
---
0x5ae JUMPDEST
---
0x5ae: JUMPDEST 
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xec, 0xef}, S2, S1, S0]

================================

Block 0x5af
[0x5af:0x5af]
---
Predecessors: [0x5ae]
Successors: [0x5b0]
---
0x5af JUMPDEST
---
0x5af: JUMPDEST 
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0xec, 0xef}, S2, S1, S0]

================================

Block 0x5b0
[0x5b0:0x5b4]
---
Predecessors: [0x5af]
Successors: [0xec, 0xef]
---
0x5b0 JUMPDEST
0x5b1 POP
0x5b2 POP
0x5b3 POP
0x5b4 JUMP
---
0x5b0: JUMPDEST 
0x5b4: JUMP {0xec, 0xef}
---
Entry stack: [V12, S4, {0xec, 0xef}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S4]

================================

Block 0x5b5
[0x5b5:0x5cc]
---
Predecessors: [0xf9]
Successors: [0x5cd, 0x5d2]
---
0x5b5 JUMPDEST
0x5b6 PUSH1 0x0
0x5b8 DUP1
0x5b9 SLOAD
0x5ba CALLER
0x5bb PUSH1 0x1
0x5bd PUSH1 0xa0
0x5bf PUSH1 0x2
0x5c1 EXP
0x5c2 SUB
0x5c3 SWAP1
0x5c4 DUP2
0x5c5 AND
0x5c6 SWAP2
0x5c7 AND
0x5c8 EQ
0x5c9 PUSH2 0x5d2
0x5cc JUMPI
---
0x5b5: JUMPDEST 
0x5b6: V566 = 0x0
0x5b9: V567 = S[0x0]
0x5ba: V568 = CALLER
0x5bb: V569 = 0x1
0x5bd: V570 = 0xa0
0x5bf: V571 = 0x2
0x5c1: V572 = EXP 0x2 0xa0
0x5c2: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c5: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V568
0x5c7: V575 = AND V567 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V576 = EQ V575 V574
0x5c9: V577 = 0x5d2
0x5cc: JUMPI 0x5d2 V576
---
Entry stack: [V12, 0x104, V75]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x104, V75, 0x0]

================================

Block 0x5cd
[0x5cd:0x5d1]
---
Predecessors: [0x5b5]
Successors: []
---
0x5cd PUSH1 0x0
0x5cf PUSH1 0x0
0x5d1 REVERT
---
0x5cd: V578 = 0x0
0x5cf: V579 = 0x0
0x5d1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x104, V75, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V75, 0x0]

================================

Block 0x5d2
[0x5d2:0x5e4]
---
Predecessors: [0x5b5]
Successors: [0x5e5, 0x641]
---
0x5d2 JUMPDEST
0x5d3 PUSH1 0x1
0x5d5 PUSH1 0xa0
0x5d7 PUSH1 0x2
0x5d9 EXP
0x5da SUB
0x5db ADDRESS
0x5dc AND
0x5dd BALANCE
0x5de DUP3
0x5df SWAP1
0x5e0 LT
0x5e1 PUSH2 0x641
0x5e4 JUMPI
---
0x5d2: JUMPDEST 
0x5d3: V580 = 0x1
0x5d5: V581 = 0xa0
0x5d7: V582 = 0x2
0x5d9: V583 = EXP 0x2 0xa0
0x5da: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5db: V585 = ADDRESS
0x5dc: V586 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V587 = BALANCE V586
0x5e0: V588 = LT V587 V75
0x5e1: V589 = 0x641
0x5e4: JUMPI 0x641 V588
---
Entry stack: [V12, 0x104, V75, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x104, V75, 0x0]

================================

Block 0x5e5
[0x5e5:0x640]
---
Predecessors: [0x5d2]
Successors: [0x641]
---
0x5e5 PUSH1 0x40
0x5e7 DUP1
0x5e8 MLOAD
0x5e9 DUP4
0x5ea DUP2
0x5eb MSTORE
0x5ec SWAP1
0x5ed MLOAD
0x5ee PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x60f SWAP2
0x610 DUP2
0x611 SWAP1
0x612 SUB
0x613 PUSH1 0x20
0x615 ADD
0x616 SWAP1
0x617 LOG1
0x618 PUSH1 0x0
0x61a DUP1
0x61b SLOAD
0x61c PUSH1 0x40
0x61e MLOAD
0x61f PUSH1 0x1
0x621 PUSH1 0xa0
0x623 PUSH1 0x2
0x625 EXP
0x626 SUB
0x627 SWAP1
0x628 SWAP2
0x629 AND
0x62a SWAP2
0x62b DUP5
0x62c ISZERO
0x62d PUSH2 0x8fc
0x630 MUL
0x631 SWAP2
0x632 DUP6
0x633 SWAP2
0x634 DUP2
0x635 DUP2
0x636 DUP2
0x637 DUP6
0x638 DUP9
0x639 DUP9
0x63a CALL
0x63b SWAP5
0x63c POP
0x63d POP
0x63e POP
0x63f POP
0x640 POP
---
0x5e5: V590 = 0x40
0x5e8: V591 = M[0x40]
0x5eb: M[V591] = V75
0x5ed: V592 = M[0x40]
0x5ee: V593 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x612: V594 = SUB V591 V592
0x613: V595 = 0x20
0x615: V596 = ADD 0x20 V594
0x617: LOG V592 V596 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x618: V597 = 0x0
0x61b: V598 = S[0x0]
0x61c: V599 = 0x40
0x61e: V600 = M[0x40]
0x61f: V601 = 0x1
0x621: V602 = 0xa0
0x623: V603 = 0x2
0x625: V604 = EXP 0x2 0xa0
0x626: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x629: V606 = AND V598 0xffffffffffffffffffffffffffffffffffffffff
0x62c: V607 = ISZERO V75
0x62d: V608 = 0x8fc
0x630: V609 = MUL 0x8fc V607
0x63a: V610 = CALL V609 V606 V75 V600 0x0 V600 0x0
---
Entry stack: [V12, 0x104, V75, 0x0]
Stack pops: 2
Stack additions: [S1, V610]
Exit stack: [V12, 0x104, V75, V610]

================================

Block 0x641
[0x641:0x641]
---
Predecessors: [0x5d2, 0x5e5]
Successors: [0x642]
---
0x641 JUMPDEST
---
0x641: JUMPDEST 
---
Entry stack: [V12, 0x104, V75, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V75, S0]

================================

Block 0x642
[0x642:0x642]
---
Predecessors: [0x641]
Successors: [0x643]
---
0x642 JUMPDEST
---
0x642: JUMPDEST 
---
Entry stack: [V12, 0x104, V75, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V75, S0]

================================

Block 0x643
[0x643:0x647]
---
Predecessors: [0x642]
Successors: [0x104]
---
0x643 JUMPDEST
0x644 SWAP2
0x645 SWAP1
0x646 POP
0x647 JUMP
---
0x643: JUMPDEST 
0x647: JUMP 0x104
---
Entry stack: [V12, 0x104, V75, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x648
[0x648:0x656]
---
Predecessors: [0x120]
Successors: [0x128]
---
0x648 JUMPDEST
0x649 PUSH1 0x1
0x64b SLOAD
0x64c PUSH1 0x1
0x64e PUSH1 0xa0
0x650 PUSH1 0x2
0x652 EXP
0x653 SUB
0x654 AND
0x655 DUP2
0x656 JUMP
---
0x648: JUMPDEST 
0x649: V611 = 0x1
0x64b: V612 = S[0x1]
0x64c: V613 = 0x1
0x64e: V614 = 0xa0
0x650: V615 = 0x2
0x652: V616 = EXP 0x2 0xa0
0x653: V617 = SUB 0x10000000000000000000000000000000000000000 0x1
0x654: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0x656: JUMP 0x128
---
Entry stack: [V12, 0x128]
Stack pops: 1
Stack additions: [S0, V618]
Exit stack: [V12, 0x128, V618]

================================

Block 0x657
[0x657:0x65c]
---
Predecessors: [0x14c]
Successors: [0x154]
---
0x657 JUMPDEST
0x658 PUSH1 0x3
0x65a SLOAD
0x65b DUP2
0x65c JUMP
---
0x657: JUMPDEST 
0x658: V619 = 0x3
0x65a: V620 = S[0x3]
0x65c: JUMP 0x154
---
Entry stack: [V12, 0x154]
Stack pops: 1
Stack additions: [S0, V620]
Exit stack: [V12, 0x154, V620]

================================

Block 0x65d
[0x65d:0x66a]
---
Predecessors: [0x16e]
Successors: [0x104]
---
0x65d JUMPDEST
0x65e PUSH1 0x5
0x660 SLOAD
0x661 PUSH2 0x100
0x664 SWAP1
0x665 DIV
0x666 PUSH1 0xff
0x668 AND
0x669 DUP2
0x66a JUMP
---
0x65d: JUMPDEST 
0x65e: V621 = 0x5
0x660: V622 = S[0x5]
0x661: V623 = 0x100
0x665: V624 = DIV V622 0x100
0x666: V625 = 0xff
0x668: V626 = AND 0xff V624
0x66a: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V626]
Exit stack: [V12, 0x104, V626]

================================

Block 0x66b
[0x66b:0x682]
---
Predecessors: [0x192]
Successors: [0x683, 0x688]
---
0x66b JUMPDEST
0x66c PUSH1 0x0
0x66e DUP1
0x66f SLOAD
0x670 CALLER
0x671 PUSH1 0x1
0x673 PUSH1 0xa0
0x675 PUSH1 0x2
0x677 EXP
0x678 SUB
0x679 SWAP1
0x67a DUP2
0x67b AND
0x67c SWAP2
0x67d AND
0x67e EQ
0x67f PUSH2 0x688
0x682 JUMPI
---
0x66b: JUMPDEST 
0x66c: V627 = 0x0
0x66f: V628 = S[0x0]
0x670: V629 = CALLER
0x671: V630 = 0x1
0x673: V631 = 0xa0
0x675: V632 = 0x2
0x677: V633 = EXP 0x2 0xa0
0x678: V634 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67b: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0x67d: V636 = AND V628 0xffffffffffffffffffffffffffffffffffffffff
0x67e: V637 = EQ V636 V635
0x67f: V638 = 0x688
0x682: JUMPI 0x688 V637
---
Entry stack: [V12, 0x104, V137, V139]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x104, V137, V139, 0x0]

================================

Block 0x683
[0x683:0x687]
---
Predecessors: [0x66b]
Successors: []
---
0x683 PUSH1 0x0
0x685 PUSH1 0x0
0x687 REVERT
---
0x683: V639 = 0x0
0x685: V640 = 0x0
0x687: REVERT 0x0 0x0
---
Entry stack: [V12, 0x104, V137, V139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0]

================================

Block 0x688
[0x688:0x6cc]
---
Predecessors: [0x66b]
Successors: [0x6cd, 0x6ce]
---
0x688 JUMPDEST
0x689 DUP3
0x68a PUSH1 0x1
0x68c PUSH1 0xa0
0x68e PUSH1 0x2
0x690 EXP
0x691 SUB
0x692 AND
0x693 PUSH4 0x8da5cb5b
0x698 PUSH1 0x0
0x69a PUSH1 0x40
0x69c MLOAD
0x69d PUSH1 0x20
0x69f ADD
0x6a0 MSTORE
0x6a1 PUSH1 0x40
0x6a3 MLOAD
0x6a4 DUP2
0x6a5 PUSH4 0xffffffff
0x6aa AND
0x6ab PUSH1 0xe0
0x6ad PUSH1 0x2
0x6af EXP
0x6b0 MUL
0x6b1 DUP2
0x6b2 MSTORE
0x6b3 PUSH1 0x4
0x6b5 ADD
0x6b6 DUP1
0x6b7 SWAP1
0x6b8 POP
0x6b9 PUSH1 0x20
0x6bb PUSH1 0x40
0x6bd MLOAD
0x6be DUP1
0x6bf DUP4
0x6c0 SUB
0x6c1 DUP2
0x6c2 PUSH1 0x0
0x6c4 DUP8
0x6c5 DUP1
0x6c6 EXTCODESIZE
0x6c7 ISZERO
0x6c8 ISZERO
0x6c9 PUSH2 0x6ce
0x6cc JUMPI
---
0x688: JUMPDEST 
0x68a: V641 = 0x1
0x68c: V642 = 0xa0
0x68e: V643 = 0x2
0x690: V644 = EXP 0x2 0xa0
0x691: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x692: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x693: V647 = 0x8da5cb5b
0x698: V648 = 0x0
0x69a: V649 = 0x40
0x69c: V650 = M[0x40]
0x69d: V651 = 0x20
0x69f: V652 = ADD 0x20 V650
0x6a0: M[V652] = 0x0
0x6a1: V653 = 0x40
0x6a3: V654 = M[0x40]
0x6a5: V655 = 0xffffffff
0x6aa: V656 = AND 0xffffffff 0x8da5cb5b
0x6ab: V657 = 0xe0
0x6ad: V658 = 0x2
0x6af: V659 = EXP 0x2 0xe0
0x6b0: V660 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x6b2: M[V654] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x6b3: V661 = 0x4
0x6b5: V662 = ADD 0x4 V654
0x6b9: V663 = 0x20
0x6bb: V664 = 0x40
0x6bd: V665 = M[0x40]
0x6c0: V666 = SUB V662 V665
0x6c2: V667 = 0x0
0x6c6: V668 = EXTCODESIZE V646
0x6c7: V669 = ISZERO V668
0x6c8: V670 = ISZERO V669
0x6c9: V671 = 0x6ce
0x6cc: JUMPI 0x6ce V670
---
Entry stack: [V12, 0x104, V137, V139, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V646, 0x8da5cb5b, V662, 0x20, V665, V666, V665, 0x0, V646]
Exit stack: [V12, 0x104, V137, V139, 0x0, V646, 0x8da5cb5b, V662, 0x20, V665, V666, V665, 0x0, V646]

================================

Block 0x6cd
[0x6cd:0x6cd]
---
Predecessors: [0x688]
Successors: []
---
0x6cd INVALID
---
0x6cd: INVALID 
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V646, 0x8da5cb5b, V662, 0x20, V665, V666, V665, 0x0, V646]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0, V646, 0x8da5cb5b, V662, 0x20, V665, V666, V665, 0x0, V646]

================================

Block 0x6ce
[0x6ce:0x6da]
---
Predecessors: [0x688]
Successors: [0x6db, 0x6dc]
---
0x6ce JUMPDEST
0x6cf PUSH2 0x2c6
0x6d2 GAS
0x6d3 SUB
0x6d4 CALL
0x6d5 ISZERO
0x6d6 ISZERO
0x6d7 PUSH2 0x6dc
0x6da JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V672 = 0x2c6
0x6d2: V673 = GAS
0x6d3: V674 = SUB V673 0x2c6
0x6d4: V675 = CALL V674 V646 0x0 V665 V666 V665 0x20
0x6d5: V676 = ISZERO V675
0x6d6: V677 = ISZERO V676
0x6d7: V678 = 0x6dc
0x6da: JUMPI 0x6dc V677
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V646, 0x8da5cb5b, V662, 0x20, V665, V666, V665, 0x0, V646]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0, V646, 0x8da5cb5b, V662]

================================

Block 0x6db
[0x6db:0x6db]
---
Predecessors: [0x6ce]
Successors: []
---
0x6db INVALID
---
0x6db: INVALID 
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V646, 0x8da5cb5b, V662]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0, V646, 0x8da5cb5b, V662]

================================

Block 0x6dc
[0x6dc:0x6fb]
---
Predecessors: [0x6ce]
Successors: [0x6fc, 0x76b]
---
0x6dc JUMPDEST
0x6dd POP
0x6de POP
0x6df PUSH1 0x40
0x6e1 MLOAD
0x6e2 MLOAD
0x6e3 PUSH1 0x0
0x6e5 SLOAD
0x6e6 PUSH1 0x1
0x6e8 PUSH1 0xa0
0x6ea PUSH1 0x2
0x6ec EXP
0x6ed SUB
0x6ee SWAP1
0x6ef DUP2
0x6f0 AND
0x6f1 SWAP2
0x6f2 AND
0x6f3 EQ
0x6f4 ISZERO
0x6f5 SWAP1
0x6f6 POP
0x6f7 DUP1
0x6f8 PUSH2 0x76b
0x6fb JUMPI
---
0x6dc: JUMPDEST 
0x6df: V679 = 0x40
0x6e1: V680 = M[0x40]
0x6e2: V681 = M[V680]
0x6e3: V682 = 0x0
0x6e5: V683 = S[0x0]
0x6e6: V684 = 0x1
0x6e8: V685 = 0xa0
0x6ea: V686 = 0x2
0x6ec: V687 = EXP 0x2 0xa0
0x6ed: V688 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f0: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0x6f2: V690 = AND V681 0xffffffffffffffffffffffffffffffffffffffff
0x6f3: V691 = EQ V690 V689
0x6f4: V692 = ISZERO V691
0x6f8: V693 = 0x76b
0x6fb: JUMPI 0x76b V692
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V646, 0x8da5cb5b, V662]
Stack pops: 3
Stack additions: [V692]
Exit stack: [V12, 0x104, V137, V139, 0x0, V692]

================================

Block 0x6fc
[0x6fc:0x740]
---
Predecessors: [0x6dc]
Successors: [0x741, 0x742]
---
0x6fc POP
0x6fd DUP3
0x6fe PUSH1 0x1
0x700 PUSH1 0xa0
0x702 PUSH1 0x2
0x704 EXP
0x705 SUB
0x706 AND
0x707 PUSH4 0x38d52e0f
0x70c PUSH1 0x0
0x70e PUSH1 0x40
0x710 MLOAD
0x711 PUSH1 0x20
0x713 ADD
0x714 MSTORE
0x715 PUSH1 0x40
0x717 MLOAD
0x718 DUP2
0x719 PUSH4 0xffffffff
0x71e AND
0x71f PUSH1 0xe0
0x721 PUSH1 0x2
0x723 EXP
0x724 MUL
0x725 DUP2
0x726 MSTORE
0x727 PUSH1 0x4
0x729 ADD
0x72a DUP1
0x72b SWAP1
0x72c POP
0x72d PUSH1 0x20
0x72f PUSH1 0x40
0x731 MLOAD
0x732 DUP1
0x733 DUP4
0x734 SUB
0x735 DUP2
0x736 PUSH1 0x0
0x738 DUP8
0x739 DUP1
0x73a EXTCODESIZE
0x73b ISZERO
0x73c ISZERO
0x73d PUSH2 0x742
0x740 JUMPI
---
0x6fe: V694 = 0x1
0x700: V695 = 0xa0
0x702: V696 = 0x2
0x704: V697 = EXP 0x2 0xa0
0x705: V698 = SUB 0x10000000000000000000000000000000000000000 0x1
0x706: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x707: V700 = 0x38d52e0f
0x70c: V701 = 0x0
0x70e: V702 = 0x40
0x710: V703 = M[0x40]
0x711: V704 = 0x20
0x713: V705 = ADD 0x20 V703
0x714: M[V705] = 0x0
0x715: V706 = 0x40
0x717: V707 = M[0x40]
0x719: V708 = 0xffffffff
0x71e: V709 = AND 0xffffffff 0x38d52e0f
0x71f: V710 = 0xe0
0x721: V711 = 0x2
0x723: V712 = EXP 0x2 0xe0
0x724: V713 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x726: M[V707] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x727: V714 = 0x4
0x729: V715 = ADD 0x4 V707
0x72d: V716 = 0x20
0x72f: V717 = 0x40
0x731: V718 = M[0x40]
0x734: V719 = SUB V715 V718
0x736: V720 = 0x0
0x73a: V721 = EXTCODESIZE V699
0x73b: V722 = ISZERO V721
0x73c: V723 = ISZERO V722
0x73d: V724 = 0x742
0x740: JUMPI 0x742 V723
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V692]
Stack pops: 4
Stack additions: [S3, S2, S1, V699, 0x38d52e0f, V715, 0x20, V718, V719, V718, 0x0, V699]
Exit stack: [V12, 0x104, V137, V139, 0x0, V699, 0x38d52e0f, V715, 0x20, V718, V719, V718, 0x0, V699]

================================

Block 0x741
[0x741:0x741]
---
Predecessors: [0x6fc]
Successors: []
---
0x741 INVALID
---
0x741: INVALID 
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V699, 0x38d52e0f, V715, 0x20, V718, V719, V718, 0x0, V699]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0, V699, 0x38d52e0f, V715, 0x20, V718, V719, V718, 0x0, V699]

================================

Block 0x742
[0x742:0x74e]
---
Predecessors: [0x6fc]
Successors: [0x74f, 0x750]
---
0x742 JUMPDEST
0x743 PUSH2 0x2c6
0x746 GAS
0x747 SUB
0x748 CALL
0x749 ISZERO
0x74a ISZERO
0x74b PUSH2 0x750
0x74e JUMPI
---
0x742: JUMPDEST 
0x743: V725 = 0x2c6
0x746: V726 = GAS
0x747: V727 = SUB V726 0x2c6
0x748: V728 = CALL V727 V699 0x0 V718 V719 V718 0x20
0x749: V729 = ISZERO V728
0x74a: V730 = ISZERO V729
0x74b: V731 = 0x750
0x74e: JUMPI 0x750 V730
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V699, 0x38d52e0f, V715, 0x20, V718, V719, V718, 0x0, V699]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0, V699, 0x38d52e0f, V715]

================================

Block 0x74f
[0x74f:0x74f]
---
Predecessors: [0x742]
Successors: []
---
0x74f INVALID
---
0x74f: INVALID 
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V699, 0x38d52e0f, V715]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0, V699, 0x38d52e0f, V715]

================================

Block 0x750
[0x750:0x76a]
---
Predecessors: [0x742]
Successors: [0x76b]
---
0x750 JUMPDEST
0x751 POP
0x752 POP
0x753 PUSH1 0x40
0x755 MLOAD
0x756 MLOAD
0x757 PUSH1 0x1
0x759 SLOAD
0x75a PUSH1 0x1
0x75c PUSH1 0xa0
0x75e PUSH1 0x2
0x760 EXP
0x761 SUB
0x762 SWAP1
0x763 DUP2
0x764 AND
0x765 SWAP2
0x766 AND
0x767 EQ
0x768 ISZERO
0x769 SWAP1
0x76a POP
---
0x750: JUMPDEST 
0x753: V732 = 0x40
0x755: V733 = M[0x40]
0x756: V734 = M[V733]
0x757: V735 = 0x1
0x759: V736 = S[0x1]
0x75a: V737 = 0x1
0x75c: V738 = 0xa0
0x75e: V739 = 0x2
0x760: V740 = EXP 0x2 0xa0
0x761: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x764: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x766: V743 = AND V734 0xffffffffffffffffffffffffffffffffffffffff
0x767: V744 = EQ V743 V742
0x768: V745 = ISZERO V744
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V699, 0x38d52e0f, V715]
Stack pops: 3
Stack additions: [V745]
Exit stack: [V12, 0x104, V137, V139, 0x0, V745]

================================

Block 0x76b
[0x76b:0x770]
---
Predecessors: [0x6dc, 0x750]
Successors: [0x771, 0x776]
---
0x76b JUMPDEST
0x76c ISZERO
0x76d PUSH2 0x776
0x770 JUMPI
---
0x76b: JUMPDEST 
0x76c: V746 = ISZERO S0
0x76d: V747 = 0x776
0x770: JUMPI 0x776 V746
---
Entry stack: [V12, 0x104, V137, V139, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0]

================================

Block 0x771
[0x771:0x775]
---
Predecessors: [0x76b]
Successors: []
---
0x771 PUSH1 0x0
0x773 PUSH1 0x0
0x775 REVERT
---
0x771: V748 = 0x0
0x773: V749 = 0x0
0x775: REVERT 0x0 0x0
---
Entry stack: [V12, 0x104, V137, V139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0]

================================

Block 0x776
[0x776:0x82d]
---
Predecessors: [0x76b]
Successors: [0x82e, 0x82f]
---
0x776 JUMPDEST
0x777 PUSH1 0x40
0x779 DUP1
0x77a MLOAD
0x77b PUSH1 0x1
0x77d PUSH1 0xa0
0x77f PUSH1 0x2
0x781 EXP
0x782 SUB
0x783 DUP6
0x784 AND
0x785 DUP2
0x786 MSTORE
0x787 PUSH1 0x20
0x789 DUP2
0x78a ADD
0x78b DUP5
0x78c SWAP1
0x78d MSTORE
0x78e DUP2
0x78f MLOAD
0x790 PUSH32 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x7b1 SWAP3
0x7b2 SWAP2
0x7b3 DUP2
0x7b4 SWAP1
0x7b5 SUB
0x7b6 SWAP1
0x7b7 SWAP2
0x7b8 ADD
0x7b9 SWAP1
0x7ba LOG1
0x7bb PUSH1 0x1
0x7bd SLOAD
0x7be PUSH1 0x40
0x7c0 DUP1
0x7c1 MLOAD
0x7c2 PUSH1 0x0
0x7c4 PUSH1 0x20
0x7c6 SWAP2
0x7c7 DUP3
0x7c8 ADD
0x7c9 DUP2
0x7ca SWAP1
0x7cb MSTORE
0x7cc DUP3
0x7cd MLOAD
0x7ce PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7ef DUP2
0x7f0 MSTORE
0x7f1 PUSH1 0x1
0x7f3 PUSH1 0xa0
0x7f5 PUSH1 0x2
0x7f7 EXP
0x7f8 SUB
0x7f9 DUP9
0x7fa DUP2
0x7fb AND
0x7fc PUSH1 0x4
0x7fe DUP4
0x7ff ADD
0x800 MSTORE
0x801 PUSH1 0x24
0x803 DUP3
0x804 ADD
0x805 DUP9
0x806 SWAP1
0x807 MSTORE
0x808 SWAP4
0x809 MLOAD
0x80a SWAP4
0x80b SWAP1
0x80c SWAP5
0x80d AND
0x80e SWAP4
0x80f PUSH4 0xa9059cbb
0x814 SWAP4
0x815 PUSH1 0x44
0x817 DUP1
0x818 DUP4
0x819 ADD
0x81a SWAP5
0x81b SWAP4
0x81c SWAP2
0x81d SWAP3
0x81e DUP4
0x81f SWAP1
0x820 SUB
0x821 ADD
0x822 SWAP1
0x823 DUP3
0x824 SWAP1
0x825 DUP8
0x826 DUP1
0x827 EXTCODESIZE
0x828 ISZERO
0x829 ISZERO
0x82a PUSH2 0x82f
0x82d JUMPI
---
0x776: JUMPDEST 
0x777: V750 = 0x40
0x77a: V751 = M[0x40]
0x77b: V752 = 0x1
0x77d: V753 = 0xa0
0x77f: V754 = 0x2
0x781: V755 = EXP 0x2 0xa0
0x782: V756 = SUB 0x10000000000000000000000000000000000000000 0x1
0x784: V757 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x786: M[V751] = V757
0x787: V758 = 0x20
0x78a: V759 = ADD V751 0x20
0x78d: M[V759] = V139
0x78f: V760 = M[0x40]
0x790: V761 = 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x7b5: V762 = SUB V751 V760
0x7b8: V763 = ADD 0x40 V762
0x7ba: LOG V760 V763 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x7bb: V764 = 0x1
0x7bd: V765 = S[0x1]
0x7be: V766 = 0x40
0x7c1: V767 = M[0x40]
0x7c2: V768 = 0x0
0x7c4: V769 = 0x20
0x7c8: V770 = ADD 0x20 V767
0x7cb: M[V770] = 0x0
0x7cd: V771 = M[0x40]
0x7ce: V772 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7f0: M[V771] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7f1: V773 = 0x1
0x7f3: V774 = 0xa0
0x7f5: V775 = 0x2
0x7f7: V776 = EXP 0x2 0xa0
0x7f8: V777 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fb: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x7fc: V779 = 0x4
0x7ff: V780 = ADD V771 0x4
0x800: M[V780] = V778
0x801: V781 = 0x24
0x804: V782 = ADD V771 0x24
0x807: M[V782] = V139
0x809: V783 = M[0x40]
0x80d: V784 = AND V765 0xffffffffffffffffffffffffffffffffffffffff
0x80f: V785 = 0xa9059cbb
0x815: V786 = 0x44
0x819: V787 = ADD V771 0x44
0x820: V788 = SUB V771 V783
0x821: V789 = ADD V788 0x44
0x827: V790 = EXTCODESIZE V784
0x828: V791 = ISZERO V790
0x829: V792 = ISZERO V791
0x82a: V793 = 0x82f
0x82d: JUMPI 0x82f V792
---
Entry stack: [V12, 0x104, V137, V139, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V784, 0xa9059cbb, V787, 0x20, V783, V789, V783, 0x0, V784]
Exit stack: [V12, 0x104, V137, V139, 0x0, V784, 0xa9059cbb, V787, 0x20, V783, V789, V783, 0x0, V784]

================================

Block 0x82e
[0x82e:0x82e]
---
Predecessors: [0x776]
Successors: []
---
0x82e INVALID
---
0x82e: INVALID 
---
Entry stack: [V12, 0x104, V137, V139, 0x0, V784, 0xa9059cbb, V787, 0x20, V783, V789, V783, 0x0, V784]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V137, V139, 0x0, V784, 0xa9059cbb, V787, 0x20, V783, V789, V783, 0x0, V784]

================================

Block 0x82f
[0x82f:0x83b]
---
Predecessors: [0x776, 0xc27]
Successors: [0x83c, 0x83d]
---
0x82f JUMPDEST
0x830 PUSH2 0x2c6
0x833 GAS
0x834 SUB
0x835 CALL
0x836 ISZERO
0x837 ISZERO
0x838 PUSH2 0x83d
0x83b JUMPI
---
0x82f: JUMPDEST 
0x830: V794 = 0x2c6
0x833: V795 = GAS
0x834: V796 = SUB V795 0x2c6
0x835: V797 = CALL V796 S0 0x0 S2 S3 S4 0x20
0x836: V798 = ISZERO V797
0x837: V799 = ISZERO V798
0x838: V800 = 0x83d
0x83b: JUMPI 0x83d V799
---
Entry stack: [V12, 0x104, S11, S10, 0x0, S8, 0xa9059cbb, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x104, S11, S10, 0x0, S8, 0xa9059cbb, S6]

================================

Block 0x83c
[0x83c:0x83c]
---
Predecessors: [0x82f]
Successors: []
---
0x83c INVALID
---
0x83c: INVALID 
---
Entry stack: [V12, 0x104, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, S5, S4, 0x0, S2, 0xa9059cbb, S0]

================================

Block 0x83d
[0x83d:0x846]
---
Predecessors: [0x82f, 0xcde]
Successors: [0x847]
---
0x83d JUMPDEST
0x83e POP
0x83f POP
0x840 PUSH1 0x40
0x842 MLOAD
0x843 MLOAD
0x844 SWAP2
0x845 POP
0x846 POP
---
0x83d: JUMPDEST 
0x840: V801 = 0x40
0x842: V802 = M[0x40]
0x843: V803 = M[V802]
---
Entry stack: [V12, 0x104, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 4
Stack additions: [V803]
Exit stack: [V12, 0x104, S5, S4, V803]

================================

Block 0x847
[0x847:0x847]
---
Predecessors: [0x83d]
Successors: [0x848]
---
0x847 JUMPDEST
---
0x847: JUMPDEST 
---
Entry stack: [V12, 0x104, S2, S1, V803]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, S2, S1, V803]

================================

Block 0x848
[0x848:0x84d]
---
Predecessors: [0x847]
Successors: [0x104]
---
0x848 JUMPDEST
0x849 SWAP3
0x84a SWAP2
0x84b POP
0x84c POP
0x84d JUMP
---
0x848: JUMPDEST 
0x84d: JUMP 0x104
---
Entry stack: [V12, 0x104, S2, S1, V803]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V803]

================================

Block 0x84e
[0x84e:0x853]
---
Predecessors: [0x1c5]
Successors: [0x154]
---
0x84e JUMPDEST
0x84f PUSH1 0x2
0x851 SLOAD
0x852 DUP2
0x853 JUMP
---
0x84e: JUMPDEST 
0x84f: V804 = 0x2
0x851: V805 = S[0x2]
0x853: JUMP 0x154
---
Entry stack: [V12, 0x154]
Stack pops: 1
Stack additions: [S0, V805]
Exit stack: [V12, 0x154, V805]

================================

Block 0x854
[0x854:0x862]
---
Predecessors: [0x1e7]
Successors: [0x128]
---
0x854 JUMPDEST
0x855 PUSH1 0x0
0x857 SLOAD
0x858 PUSH1 0x1
0x85a PUSH1 0xa0
0x85c PUSH1 0x2
0x85e EXP
0x85f SUB
0x860 AND
0x861 DUP2
0x862 JUMP
---
0x854: JUMPDEST 
0x855: V806 = 0x0
0x857: V807 = S[0x0]
0x858: V808 = 0x1
0x85a: V809 = 0xa0
0x85c: V810 = 0x2
0x85e: V811 = EXP 0x2 0xa0
0x85f: V812 = SUB 0x10000000000000000000000000000000000000000 0x1
0x860: V813 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0x862: JUMP 0x128
---
Entry stack: [V12, 0x128]
Stack pops: 1
Stack additions: [S0, V813]
Exit stack: [V12, 0x128, V813]

================================

Block 0x863
[0x863:0x87c]
---
Predecessors: [0x20b]
Successors: [0x87d, 0x906]
---
0x863 JUMPDEST
0x864 PUSH1 0x0
0x866 SLOAD
0x867 CALLER
0x868 PUSH1 0x1
0x86a PUSH1 0xa0
0x86c PUSH1 0x2
0x86e EXP
0x86f SUB
0x870 SWAP1
0x871 DUP2
0x872 AND
0x873 SWAP2
0x874 AND
0x875 EQ
0x876 DUP1
0x877 ISZERO
0x878 SWAP1
0x879 PUSH2 0x906
0x87c JUMPI
---
0x863: JUMPDEST 
0x864: V814 = 0x0
0x866: V815 = S[0x0]
0x867: V816 = CALLER
0x868: V817 = 0x1
0x86a: V818 = 0xa0
0x86c: V819 = 0x2
0x86e: V820 = EXP 0x2 0xa0
0x86f: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x872: V822 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0x874: V823 = AND V815 0xffffffffffffffffffffffffffffffffffffffff
0x875: V824 = EQ V823 V822
0x877: V825 = ISZERO V824
0x879: V826 = 0x906
0x87c: JUMPI 0x906 V824
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: [V825]
Exit stack: [V12, 0xef, V825]

================================

Block 0x87d
[0x87d:0x8e0]
---
Predecessors: [0x863]
Successors: [0x8e1, 0x8e2]
---
0x87d POP
0x87e PUSH1 0x0
0x880 PUSH1 0x0
0x882 SWAP1
0x883 SLOAD
0x884 SWAP1
0x885 PUSH2 0x100
0x888 EXP
0x889 SWAP1
0x88a DIV
0x88b PUSH1 0x1
0x88d PUSH1 0xa0
0x88f PUSH1 0x2
0x891 EXP
0x892 SUB
0x893 AND
0x894 PUSH1 0x1
0x896 PUSH1 0xa0
0x898 PUSH1 0x2
0x89a EXP
0x89b SUB
0x89c AND
0x89d CALLER
0x89e PUSH1 0x1
0x8a0 PUSH1 0xa0
0x8a2 PUSH1 0x2
0x8a4 EXP
0x8a5 SUB
0x8a6 AND
0x8a7 PUSH4 0x8da5cb5b
0x8ac PUSH1 0x0
0x8ae PUSH1 0x40
0x8b0 MLOAD
0x8b1 PUSH1 0x20
0x8b3 ADD
0x8b4 MSTORE
0x8b5 PUSH1 0x40
0x8b7 MLOAD
0x8b8 DUP2
0x8b9 PUSH4 0xffffffff
0x8be AND
0x8bf PUSH1 0xe0
0x8c1 PUSH1 0x2
0x8c3 EXP
0x8c4 MUL
0x8c5 DUP2
0x8c6 MSTORE
0x8c7 PUSH1 0x4
0x8c9 ADD
0x8ca DUP1
0x8cb SWAP1
0x8cc POP
0x8cd PUSH1 0x20
0x8cf PUSH1 0x40
0x8d1 MLOAD
0x8d2 DUP1
0x8d3 DUP4
0x8d4 SUB
0x8d5 DUP2
0x8d6 PUSH1 0x0
0x8d8 DUP8
0x8d9 DUP1
0x8da EXTCODESIZE
0x8db ISZERO
0x8dc ISZERO
0x8dd PUSH2 0x8e2
0x8e0 JUMPI
---
0x87e: V827 = 0x0
0x880: V828 = 0x0
0x883: V829 = S[0x0]
0x885: V830 = 0x100
0x888: V831 = EXP 0x100 0x0
0x88a: V832 = DIV V829 0x1
0x88b: V833 = 0x1
0x88d: V834 = 0xa0
0x88f: V835 = 0x2
0x891: V836 = EXP 0x2 0xa0
0x892: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0x893: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0x894: V839 = 0x1
0x896: V840 = 0xa0
0x898: V841 = 0x2
0x89a: V842 = EXP 0x2 0xa0
0x89b: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89c: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0x89d: V845 = CALLER
0x89e: V846 = 0x1
0x8a0: V847 = 0xa0
0x8a2: V848 = 0x2
0x8a4: V849 = EXP 0x2 0xa0
0x8a5: V850 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a6: V851 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0x8a7: V852 = 0x8da5cb5b
0x8ac: V853 = 0x0
0x8ae: V854 = 0x40
0x8b0: V855 = M[0x40]
0x8b1: V856 = 0x20
0x8b3: V857 = ADD 0x20 V855
0x8b4: M[V857] = 0x0
0x8b5: V858 = 0x40
0x8b7: V859 = M[0x40]
0x8b9: V860 = 0xffffffff
0x8be: V861 = AND 0xffffffff 0x8da5cb5b
0x8bf: V862 = 0xe0
0x8c1: V863 = 0x2
0x8c3: V864 = EXP 0x2 0xe0
0x8c4: V865 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x8c6: M[V859] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x8c7: V866 = 0x4
0x8c9: V867 = ADD 0x4 V859
0x8cd: V868 = 0x20
0x8cf: V869 = 0x40
0x8d1: V870 = M[0x40]
0x8d4: V871 = SUB V867 V870
0x8d6: V872 = 0x0
0x8da: V873 = EXTCODESIZE V851
0x8db: V874 = ISZERO V873
0x8dc: V875 = ISZERO V874
0x8dd: V876 = 0x8e2
0x8e0: JUMPI 0x8e2 V875
---
Entry stack: [V12, 0xef, V825]
Stack pops: 1
Stack additions: [V844, V851, 0x8da5cb5b, V867, 0x20, V870, V871, V870, 0x0, V851]
Exit stack: [V12, 0xef, V844, V851, 0x8da5cb5b, V867, 0x20, V870, V871, V870, 0x0, V851]

================================

Block 0x8e1
[0x8e1:0x8e1]
---
Predecessors: [0x87d]
Successors: []
---
0x8e1 INVALID
---
0x8e1: INVALID 
---
Entry stack: [V12, 0xef, V844, V851, 0x8da5cb5b, V867, 0x20, V870, V871, V870, 0x0, V851]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V844, V851, 0x8da5cb5b, V867, 0x20, V870, V871, V870, 0x0, V851]

================================

Block 0x8e2
[0x8e2:0x8ee]
---
Predecessors: [0x87d]
Successors: [0x8ef, 0x8f0]
---
0x8e2 JUMPDEST
0x8e3 PUSH2 0x2c6
0x8e6 GAS
0x8e7 SUB
0x8e8 CALL
0x8e9 ISZERO
0x8ea ISZERO
0x8eb PUSH2 0x8f0
0x8ee JUMPI
---
0x8e2: JUMPDEST 
0x8e3: V877 = 0x2c6
0x8e6: V878 = GAS
0x8e7: V879 = SUB V878 0x2c6
0x8e8: V880 = CALL V879 V851 0x0 V870 V871 V870 0x20
0x8e9: V881 = ISZERO V880
0x8ea: V882 = ISZERO V881
0x8eb: V883 = 0x8f0
0x8ee: JUMPI 0x8f0 V882
---
Entry stack: [V12, 0xef, V844, V851, 0x8da5cb5b, V867, 0x20, V870, V871, V870, 0x0, V851]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V844, V851, 0x8da5cb5b, V867]

================================

Block 0x8ef
[0x8ef:0x8ef]
---
Predecessors: [0x8e2]
Successors: []
---
0x8ef INVALID
---
0x8ef: INVALID 
---
Entry stack: [V12, 0xef, V844, V851, 0x8da5cb5b, V867]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V844, V851, 0x8da5cb5b, V867]

================================

Block 0x8f0
[0x8f0:0x905]
---
Predecessors: [0x8e2]
Successors: [0x906]
---
0x8f0 JUMPDEST
0x8f1 POP
0x8f2 POP
0x8f3 POP
0x8f4 PUSH1 0x40
0x8f6 MLOAD
0x8f7 DUP1
0x8f8 MLOAD
0x8f9 SWAP1
0x8fa POP
0x8fb PUSH1 0x1
0x8fd PUSH1 0xa0
0x8ff PUSH1 0x2
0x901 EXP
0x902 SUB
0x903 AND
0x904 EQ
0x905 ISZERO
---
0x8f0: JUMPDEST 
0x8f4: V884 = 0x40
0x8f6: V885 = M[0x40]
0x8f8: V886 = M[V885]
0x8fb: V887 = 0x1
0x8fd: V888 = 0xa0
0x8ff: V889 = 0x2
0x901: V890 = EXP 0x2 0xa0
0x902: V891 = SUB 0x10000000000000000000000000000000000000000 0x1
0x903: V892 = AND 0xffffffffffffffffffffffffffffffffffffffff V886
0x904: V893 = EQ V892 V844
0x905: V894 = ISZERO V893
---
Entry stack: [V12, 0xef, V844, V851, 0x8da5cb5b, V867]
Stack pops: 4
Stack additions: [V894]
Exit stack: [V12, 0xef, V894]

================================

Block 0x906
[0x906:0x90b]
---
Predecessors: [0x863, 0x8f0]
Successors: [0x90c, 0x911]
---
0x906 JUMPDEST
0x907 ISZERO
0x908 PUSH2 0x911
0x90b JUMPI
---
0x906: JUMPDEST 
0x907: V895 = ISZERO S0
0x908: V896 = 0x911
0x90b: JUMPI 0x911 V895
---
Entry stack: [V12, 0xef, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x90c
[0x90c:0x910]
---
Predecessors: [0x906]
Successors: []
---
0x90c PUSH1 0x0
0x90e PUSH1 0x0
0x910 REVERT
---
0x90c: V897 = 0x0
0x90e: V898 = 0x0
0x910: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x911
[0x911:0x944]
---
Predecessors: [0x906]
Successors: [0x945]
---
0x911 JUMPDEST
0x912 PUSH1 0x40
0x914 DUP1
0x915 MLOAD
0x916 CALLVALUE
0x917 DUP2
0x918 MSTORE
0x919 SWAP1
0x91a MLOAD
0x91b PUSH32 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0x93c SWAP2
0x93d DUP2
0x93e SWAP1
0x93f SUB
0x940 PUSH1 0x20
0x942 ADD
0x943 SWAP1
0x944 LOG1
---
0x911: JUMPDEST 
0x912: V899 = 0x40
0x915: V900 = M[0x40]
0x916: V901 = CALLVALUE
0x918: M[V900] = V901
0x91a: V902 = M[0x40]
0x91b: V903 = 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0x93f: V904 = SUB V900 V902
0x940: V905 = 0x20
0x942: V906 = ADD 0x20 V904
0x944: LOG V902 V906 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x945
[0x945:0x945]
---
Predecessors: [0x911]
Successors: [0x946]
---
0x945 JUMPDEST
---
0x945: JUMPDEST 
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x946
[0x946:0x947]
---
Predecessors: [0x945]
Successors: [0xef]
---
0x946 JUMPDEST
0x947 JUMP
---
0x946: JUMPDEST 
0x947: JUMP 0xef
---
Entry stack: [V12, 0xef]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x948
[0x948:0x94d]
---
Predecessors: [0x21d]
Successors: [0x154]
---
0x948 JUMPDEST
0x949 PUSH1 0x4
0x94b SLOAD
0x94c DUP2
0x94d JUMP
---
0x948: JUMPDEST 
0x949: V907 = 0x4
0x94b: V908 = S[0x4]
0x94d: JUMP 0x154
---
Entry stack: [V12, 0x154]
Stack pops: 1
Stack additions: [S0, V908]
Exit stack: [V12, 0x154, V908]

================================

Block 0x94e
[0x94e:0x964]
---
Predecessors: [0x23f]
Successors: [0x965, 0x96a]
---
0x94e JUMPDEST
0x94f PUSH1 0x0
0x951 SLOAD
0x952 CALLER
0x953 PUSH1 0x1
0x955 PUSH1 0xa0
0x957 PUSH1 0x2
0x959 EXP
0x95a SUB
0x95b SWAP1
0x95c DUP2
0x95d AND
0x95e SWAP2
0x95f AND
0x960 EQ
0x961 PUSH2 0x96a
0x964 JUMPI
---
0x94e: JUMPDEST 
0x94f: V909 = 0x0
0x951: V910 = S[0x0]
0x952: V911 = CALLER
0x953: V912 = 0x1
0x955: V913 = 0xa0
0x957: V914 = 0x2
0x959: V915 = EXP 0x2 0xa0
0x95a: V916 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95d: V917 = AND 0xffffffffffffffffffffffffffffffffffffffff V911
0x95f: V918 = AND V910 0xffffffffffffffffffffffffffffffffffffffff
0x960: V919 = EQ V918 V917
0x961: V920 = 0x96a
0x964: JUMPI 0x96a V919
---
Entry stack: [V12, 0xef, V197, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V197, V201]

================================

Block 0x965
[0x965:0x969]
---
Predecessors: [0x94e]
Successors: []
---
0x965 PUSH1 0x0
0x967 PUSH1 0x0
0x969 REVERT
---
0x965: V921 = 0x0
0x967: V922 = 0x0
0x969: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V197, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V197, V201]

================================

Block 0x96a
[0x96a:0x9d2]
---
Predecessors: [0x94e]
Successors: [0x9d3]
---
0x96a JUMPDEST
0x96b PUSH1 0x5
0x96d DUP1
0x96e SLOAD
0x96f PUSH1 0xff
0x971 NOT
0x972 AND
0x973 DUP4
0x974 ISZERO
0x975 ISZERO
0x976 OR
0x977 PUSH2 0xff00
0x97a NOT
0x97b AND
0x97c PUSH2 0x100
0x97f DUP4
0x980 ISZERO
0x981 ISZERO
0x982 DUP2
0x983 MUL
0x984 SWAP2
0x985 SWAP1
0x986 SWAP2
0x987 OR
0x988 SWAP2
0x989 DUP3
0x98a SWAP1
0x98b SSTORE
0x98c PUSH1 0x40
0x98e DUP1
0x98f MLOAD
0x990 PUSH1 0xff
0x992 DUP1
0x993 DUP6
0x994 AND
0x995 ISZERO
0x996 ISZERO
0x997 DUP3
0x998 MSTORE
0x999 SWAP3
0x99a SWAP1
0x99b SWAP4
0x99c DIV
0x99d SWAP1
0x99e SWAP2
0x99f AND
0x9a0 ISZERO
0x9a1 ISZERO
0x9a2 PUSH1 0x20
0x9a4 DUP4
0x9a5 ADD
0x9a6 MSTORE
0x9a7 DUP1
0x9a8 MLOAD
0x9a9 PUSH32 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x9ca SWAP3
0x9cb DUP2
0x9cc SWAP1
0x9cd SUB
0x9ce SWAP1
0x9cf SWAP2
0x9d0 ADD
0x9d1 SWAP1
0x9d2 LOG1
---
0x96a: JUMPDEST 
0x96b: V923 = 0x5
0x96e: V924 = S[0x5]
0x96f: V925 = 0xff
0x971: V926 = NOT 0xff
0x972: V927 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V924
0x974: V928 = ISZERO V197
0x975: V929 = ISZERO V928
0x976: V930 = OR V929 V927
0x977: V931 = 0xff00
0x97a: V932 = NOT 0xff00
0x97b: V933 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V930
0x97c: V934 = 0x100
0x980: V935 = ISZERO V201
0x981: V936 = ISZERO V935
0x983: V937 = MUL 0x100 V936
0x987: V938 = OR V937 V933
0x98b: S[0x5] = V938
0x98c: V939 = 0x40
0x98f: V940 = M[0x40]
0x990: V941 = 0xff
0x994: V942 = AND V938 0xff
0x995: V943 = ISZERO V942
0x996: V944 = ISZERO V943
0x998: M[V940] = V944
0x99c: V945 = DIV V938 0x100
0x99f: V946 = AND 0xff V945
0x9a0: V947 = ISZERO V946
0x9a1: V948 = ISZERO V947
0x9a2: V949 = 0x20
0x9a5: V950 = ADD V940 0x20
0x9a6: M[V950] = V948
0x9a8: V951 = M[0x40]
0x9a9: V952 = 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x9cd: V953 = SUB V940 V951
0x9d0: V954 = ADD 0x40 V953
0x9d2: LOG V951 V954 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
---
Entry stack: [V12, 0xef, V197, V201]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xef, V197, V201]

================================

Block 0x9d3
[0x9d3:0x9d3]
---
Predecessors: [0x96a, 0xaeb]
Successors: [0x9d4]
---
0x9d3 JUMPDEST
---
0x9d3: JUMPDEST 
---
Entry stack: [V12, 0xef, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, S1, S0]

================================

Block 0x9d4
[0x9d4:0x9d7]
---
Predecessors: [0x9d3]
Successors: [0xef]
---
0x9d4 JUMPDEST
0x9d5 POP
0x9d6 POP
0x9d7 JUMP
---
0x9d4: JUMPDEST 
0x9d7: JUMP 0xef
---
Entry stack: [V12, 0xef, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d8
[0x9d8:0x9e0]
---
Predecessors: [0x25b]
Successors: [0x104]
---
0x9d8 JUMPDEST
0x9d9 PUSH1 0x5
0x9db SLOAD
0x9dc PUSH1 0xff
0x9de AND
0x9df DUP2
0x9e0 JUMP
---
0x9d8: JUMPDEST 
0x9d9: V955 = 0x5
0x9db: V956 = S[0x5]
0x9dc: V957 = 0xff
0x9de: V958 = AND 0xff V956
0x9e0: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V958]
Exit stack: [V12, 0x104, V958]

================================

Block 0x9e1
[0x9e1:0x9f7]
---
Predecessors: [0x27f]
Successors: [0x9f8, 0x9fd]
---
0x9e1 JUMPDEST
0x9e2 PUSH1 0x0
0x9e4 SLOAD
0x9e5 CALLER
0x9e6 PUSH1 0x1
0x9e8 PUSH1 0xa0
0x9ea PUSH1 0x2
0x9ec EXP
0x9ed SUB
0x9ee SWAP1
0x9ef DUP2
0x9f0 AND
0x9f1 SWAP2
0x9f2 AND
0x9f3 EQ
0x9f4 PUSH2 0x9fd
0x9f7 JUMPI
---
0x9e1: JUMPDEST 
0x9e2: V959 = 0x0
0x9e4: V960 = S[0x0]
0x9e5: V961 = CALLER
0x9e6: V962 = 0x1
0x9e8: V963 = 0xa0
0x9ea: V964 = 0x2
0x9ec: V965 = EXP 0x2 0xa0
0x9ed: V966 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f0: V967 = AND 0xffffffffffffffffffffffffffffffffffffffff V961
0x9f2: V968 = AND V960 0xffffffffffffffffffffffffffffffffffffffff
0x9f3: V969 = EQ V968 V967
0x9f4: V970 = 0x9fd
0x9f7: JUMPI 0x9fd V969
---
Entry stack: [V12, 0xef, V227, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229]

================================

Block 0x9f8
[0x9f8:0x9fc]
---
Predecessors: [0x9e1]
Successors: []
---
0x9f8 PUSH1 0x0
0x9fa PUSH1 0x0
0x9fc REVERT
---
0x9f8: V971 = 0x0
0x9fa: V972 = 0x0
0x9fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V227, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229]

================================

Block 0x9fd
[0x9fd:0xa41]
---
Predecessors: [0x9e1]
Successors: [0xa42, 0xa43]
---
0x9fd JUMPDEST
0x9fe DUP2
0x9ff PUSH1 0x1
0xa01 PUSH1 0xa0
0xa03 PUSH1 0x2
0xa05 EXP
0xa06 SUB
0xa07 AND
0xa08 PUSH4 0x8da5cb5b
0xa0d PUSH1 0x0
0xa0f PUSH1 0x40
0xa11 MLOAD
0xa12 PUSH1 0x20
0xa14 ADD
0xa15 MSTORE
0xa16 PUSH1 0x40
0xa18 MLOAD
0xa19 DUP2
0xa1a PUSH4 0xffffffff
0xa1f AND
0xa20 PUSH1 0xe0
0xa22 PUSH1 0x2
0xa24 EXP
0xa25 MUL
0xa26 DUP2
0xa27 MSTORE
0xa28 PUSH1 0x4
0xa2a ADD
0xa2b DUP1
0xa2c SWAP1
0xa2d POP
0xa2e PUSH1 0x20
0xa30 PUSH1 0x40
0xa32 MLOAD
0xa33 DUP1
0xa34 DUP4
0xa35 SUB
0xa36 DUP2
0xa37 PUSH1 0x0
0xa39 DUP8
0xa3a DUP1
0xa3b EXTCODESIZE
0xa3c ISZERO
0xa3d ISZERO
0xa3e PUSH2 0xa43
0xa41 JUMPI
---
0x9fd: JUMPDEST 
0x9ff: V973 = 0x1
0xa01: V974 = 0xa0
0xa03: V975 = 0x2
0xa05: V976 = EXP 0x2 0xa0
0xa06: V977 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa07: V978 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0xa08: V979 = 0x8da5cb5b
0xa0d: V980 = 0x0
0xa0f: V981 = 0x40
0xa11: V982 = M[0x40]
0xa12: V983 = 0x20
0xa14: V984 = ADD 0x20 V982
0xa15: M[V984] = 0x0
0xa16: V985 = 0x40
0xa18: V986 = M[0x40]
0xa1a: V987 = 0xffffffff
0xa1f: V988 = AND 0xffffffff 0x8da5cb5b
0xa20: V989 = 0xe0
0xa22: V990 = 0x2
0xa24: V991 = EXP 0x2 0xe0
0xa25: V992 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xa27: M[V986] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xa28: V993 = 0x4
0xa2a: V994 = ADD 0x4 V986
0xa2e: V995 = 0x20
0xa30: V996 = 0x40
0xa32: V997 = M[0x40]
0xa35: V998 = SUB V994 V997
0xa37: V999 = 0x0
0xa3b: V1000 = EXTCODESIZE V978
0xa3c: V1001 = ISZERO V1000
0xa3d: V1002 = ISZERO V1001
0xa3e: V1003 = 0xa43
0xa41: JUMPI 0xa43 V1002
---
Entry stack: [V12, 0xef, V227, V229]
Stack pops: 2
Stack additions: [S1, S0, V978, 0x8da5cb5b, V994, 0x20, V997, V998, V997, 0x0, V978]
Exit stack: [V12, 0xef, V227, V229, V978, 0x8da5cb5b, V994, 0x20, V997, V998, V997, 0x0, V978]

================================

Block 0xa42
[0xa42:0xa42]
---
Predecessors: [0x9fd]
Successors: []
---
0xa42 INVALID
---
0xa42: INVALID 
---
Entry stack: [V12, 0xef, V227, V229, V978, 0x8da5cb5b, V994, 0x20, V997, V998, V997, 0x0, V978]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229, V978, 0x8da5cb5b, V994, 0x20, V997, V998, V997, 0x0, V978]

================================

Block 0xa43
[0xa43:0xa4f]
---
Predecessors: [0x9fd]
Successors: [0xa50, 0xa51]
---
0xa43 JUMPDEST
0xa44 PUSH2 0x2c6
0xa47 GAS
0xa48 SUB
0xa49 CALL
0xa4a ISZERO
0xa4b ISZERO
0xa4c PUSH2 0xa51
0xa4f JUMPI
---
0xa43: JUMPDEST 
0xa44: V1004 = 0x2c6
0xa47: V1005 = GAS
0xa48: V1006 = SUB V1005 0x2c6
0xa49: V1007 = CALL V1006 V978 0x0 V997 V998 V997 0x20
0xa4a: V1008 = ISZERO V1007
0xa4b: V1009 = ISZERO V1008
0xa4c: V1010 = 0xa51
0xa4f: JUMPI 0xa51 V1009
---
Entry stack: [V12, 0xef, V227, V229, V978, 0x8da5cb5b, V994, 0x20, V997, V998, V997, 0x0, V978]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V227, V229, V978, 0x8da5cb5b, V994]

================================

Block 0xa50
[0xa50:0xa50]
---
Predecessors: [0xa43]
Successors: []
---
0xa50 INVALID
---
0xa50: INVALID 
---
Entry stack: [V12, 0xef, V227, V229, V978, 0x8da5cb5b, V994]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229, V978, 0x8da5cb5b, V994]

================================

Block 0xa51
[0xa51:0xa70]
---
Predecessors: [0xa43]
Successors: [0xa71, 0xae0]
---
0xa51 JUMPDEST
0xa52 POP
0xa53 POP
0xa54 PUSH1 0x40
0xa56 MLOAD
0xa57 MLOAD
0xa58 PUSH1 0x0
0xa5a SLOAD
0xa5b PUSH1 0x1
0xa5d PUSH1 0xa0
0xa5f PUSH1 0x2
0xa61 EXP
0xa62 SUB
0xa63 SWAP1
0xa64 DUP2
0xa65 AND
0xa66 SWAP2
0xa67 AND
0xa68 EQ
0xa69 ISZERO
0xa6a SWAP1
0xa6b POP
0xa6c DUP1
0xa6d PUSH2 0xae0
0xa70 JUMPI
---
0xa51: JUMPDEST 
0xa54: V1011 = 0x40
0xa56: V1012 = M[0x40]
0xa57: V1013 = M[V1012]
0xa58: V1014 = 0x0
0xa5a: V1015 = S[0x0]
0xa5b: V1016 = 0x1
0xa5d: V1017 = 0xa0
0xa5f: V1018 = 0x2
0xa61: V1019 = EXP 0x2 0xa0
0xa62: V1020 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa65: V1021 = AND 0xffffffffffffffffffffffffffffffffffffffff V1015
0xa67: V1022 = AND V1013 0xffffffffffffffffffffffffffffffffffffffff
0xa68: V1023 = EQ V1022 V1021
0xa69: V1024 = ISZERO V1023
0xa6d: V1025 = 0xae0
0xa70: JUMPI 0xae0 V1024
---
Entry stack: [V12, 0xef, V227, V229, V978, 0x8da5cb5b, V994]
Stack pops: 3
Stack additions: [V1024]
Exit stack: [V12, 0xef, V227, V229, V1024]

================================

Block 0xa71
[0xa71:0xab5]
---
Predecessors: [0xa51]
Successors: [0xab6, 0xab7]
---
0xa71 POP
0xa72 DUP2
0xa73 PUSH1 0x1
0xa75 PUSH1 0xa0
0xa77 PUSH1 0x2
0xa79 EXP
0xa7a SUB
0xa7b AND
0xa7c PUSH4 0x38d52e0f
0xa81 PUSH1 0x0
0xa83 PUSH1 0x40
0xa85 MLOAD
0xa86 PUSH1 0x20
0xa88 ADD
0xa89 MSTORE
0xa8a PUSH1 0x40
0xa8c MLOAD
0xa8d DUP2
0xa8e PUSH4 0xffffffff
0xa93 AND
0xa94 PUSH1 0xe0
0xa96 PUSH1 0x2
0xa98 EXP
0xa99 MUL
0xa9a DUP2
0xa9b MSTORE
0xa9c PUSH1 0x4
0xa9e ADD
0xa9f DUP1
0xaa0 SWAP1
0xaa1 POP
0xaa2 PUSH1 0x20
0xaa4 PUSH1 0x40
0xaa6 MLOAD
0xaa7 DUP1
0xaa8 DUP4
0xaa9 SUB
0xaaa DUP2
0xaab PUSH1 0x0
0xaad DUP8
0xaae DUP1
0xaaf EXTCODESIZE
0xab0 ISZERO
0xab1 ISZERO
0xab2 PUSH2 0xab7
0xab5 JUMPI
---
0xa73: V1026 = 0x1
0xa75: V1027 = 0xa0
0xa77: V1028 = 0x2
0xa79: V1029 = EXP 0x2 0xa0
0xa7a: V1030 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7b: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0xa7c: V1032 = 0x38d52e0f
0xa81: V1033 = 0x0
0xa83: V1034 = 0x40
0xa85: V1035 = M[0x40]
0xa86: V1036 = 0x20
0xa88: V1037 = ADD 0x20 V1035
0xa89: M[V1037] = 0x0
0xa8a: V1038 = 0x40
0xa8c: V1039 = M[0x40]
0xa8e: V1040 = 0xffffffff
0xa93: V1041 = AND 0xffffffff 0x38d52e0f
0xa94: V1042 = 0xe0
0xa96: V1043 = 0x2
0xa98: V1044 = EXP 0x2 0xe0
0xa99: V1045 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0xa9b: M[V1039] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0xa9c: V1046 = 0x4
0xa9e: V1047 = ADD 0x4 V1039
0xaa2: V1048 = 0x20
0xaa4: V1049 = 0x40
0xaa6: V1050 = M[0x40]
0xaa9: V1051 = SUB V1047 V1050
0xaab: V1052 = 0x0
0xaaf: V1053 = EXTCODESIZE V1031
0xab0: V1054 = ISZERO V1053
0xab1: V1055 = ISZERO V1054
0xab2: V1056 = 0xab7
0xab5: JUMPI 0xab7 V1055
---
Entry stack: [V12, 0xef, V227, V229, V1024]
Stack pops: 3
Stack additions: [S2, S1, V1031, 0x38d52e0f, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]
Exit stack: [V12, 0xef, V227, V229, V1031, 0x38d52e0f, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]

================================

Block 0xab6
[0xab6:0xab6]
---
Predecessors: [0xa71]
Successors: []
---
0xab6 INVALID
---
0xab6: INVALID 
---
Entry stack: [V12, 0xef, V227, V229, V1031, 0x38d52e0f, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229, V1031, 0x38d52e0f, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]

================================

Block 0xab7
[0xab7:0xac3]
---
Predecessors: [0xa71]
Successors: [0xac4, 0xac5]
---
0xab7 JUMPDEST
0xab8 PUSH2 0x2c6
0xabb GAS
0xabc SUB
0xabd CALL
0xabe ISZERO
0xabf ISZERO
0xac0 PUSH2 0xac5
0xac3 JUMPI
---
0xab7: JUMPDEST 
0xab8: V1057 = 0x2c6
0xabb: V1058 = GAS
0xabc: V1059 = SUB V1058 0x2c6
0xabd: V1060 = CALL V1059 V1031 0x0 V1050 V1051 V1050 0x20
0xabe: V1061 = ISZERO V1060
0xabf: V1062 = ISZERO V1061
0xac0: V1063 = 0xac5
0xac3: JUMPI 0xac5 V1062
---
Entry stack: [V12, 0xef, V227, V229, V1031, 0x38d52e0f, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V227, V229, V1031, 0x38d52e0f, V1047]

================================

Block 0xac4
[0xac4:0xac4]
---
Predecessors: [0xab7]
Successors: []
---
0xac4 INVALID
---
0xac4: INVALID 
---
Entry stack: [V12, 0xef, V227, V229, V1031, 0x38d52e0f, V1047]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229, V1031, 0x38d52e0f, V1047]

================================

Block 0xac5
[0xac5:0xadf]
---
Predecessors: [0xab7]
Successors: [0xae0]
---
0xac5 JUMPDEST
0xac6 POP
0xac7 POP
0xac8 PUSH1 0x40
0xaca MLOAD
0xacb MLOAD
0xacc PUSH1 0x1
0xace SLOAD
0xacf PUSH1 0x1
0xad1 PUSH1 0xa0
0xad3 PUSH1 0x2
0xad5 EXP
0xad6 SUB
0xad7 SWAP1
0xad8 DUP2
0xad9 AND
0xada SWAP2
0xadb AND
0xadc EQ
0xadd ISZERO
0xade SWAP1
0xadf POP
---
0xac5: JUMPDEST 
0xac8: V1064 = 0x40
0xaca: V1065 = M[0x40]
0xacb: V1066 = M[V1065]
0xacc: V1067 = 0x1
0xace: V1068 = S[0x1]
0xacf: V1069 = 0x1
0xad1: V1070 = 0xa0
0xad3: V1071 = 0x2
0xad5: V1072 = EXP 0x2 0xa0
0xad6: V1073 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad9: V1074 = AND 0xffffffffffffffffffffffffffffffffffffffff V1068
0xadb: V1075 = AND V1066 0xffffffffffffffffffffffffffffffffffffffff
0xadc: V1076 = EQ V1075 V1074
0xadd: V1077 = ISZERO V1076
---
Entry stack: [V12, 0xef, V227, V229, V1031, 0x38d52e0f, V1047]
Stack pops: 3
Stack additions: [V1077]
Exit stack: [V12, 0xef, V227, V229, V1077]

================================

Block 0xae0
[0xae0:0xae5]
---
Predecessors: [0xa51, 0xac5]
Successors: [0xae6, 0xaeb]
---
0xae0 JUMPDEST
0xae1 ISZERO
0xae2 PUSH2 0xaeb
0xae5 JUMPI
---
0xae0: JUMPDEST 
0xae1: V1078 = ISZERO S0
0xae2: V1079 = 0xaeb
0xae5: JUMPI 0xaeb V1078
---
Entry stack: [V12, 0xef, V227, V229, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, V227, V229]

================================

Block 0xae6
[0xae6:0xaea]
---
Predecessors: [0xae0]
Successors: []
---
0xae6 PUSH1 0x0
0xae8 PUSH1 0x0
0xaea REVERT
---
0xae6: V1080 = 0x0
0xae8: V1081 = 0x0
0xaea: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V227, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229]

================================

Block 0xaeb
[0xaeb:0xafd]
---
Predecessors: [0xae0]
Successors: [0x9d3, 0xafe]
---
0xaeb JUMPDEST
0xaec PUSH1 0x1
0xaee PUSH1 0xa0
0xaf0 PUSH1 0x2
0xaf2 EXP
0xaf3 SUB
0xaf4 ADDRESS
0xaf5 AND
0xaf6 BALANCE
0xaf7 DUP2
0xaf8 SWAP1
0xaf9 LT
0xafa PUSH2 0x9d3
0xafd JUMPI
---
0xaeb: JUMPDEST 
0xaec: V1082 = 0x1
0xaee: V1083 = 0xa0
0xaf0: V1084 = 0x2
0xaf2: V1085 = EXP 0x2 0xa0
0xaf3: V1086 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf4: V1087 = ADDRESS
0xaf5: V1088 = AND V1087 0xffffffffffffffffffffffffffffffffffffffff
0xaf6: V1089 = BALANCE V1088
0xaf9: V1090 = LT V1089 V229
0xafa: V1091 = 0x9d3
0xafd: JUMPI 0x9d3 V1090
---
Entry stack: [V12, 0xef, V227, V229]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V227, V229]

================================

Block 0xafe
[0xafe:0xb7c]
---
Predecessors: [0xaeb]
Successors: [0xb7d, 0xb7e]
---
0xafe PUSH1 0x40
0xb00 DUP1
0xb01 MLOAD
0xb02 PUSH1 0x1
0xb04 PUSH1 0xa0
0xb06 PUSH1 0x2
0xb08 EXP
0xb09 SUB
0xb0a DUP5
0xb0b AND
0xb0c DUP2
0xb0d MSTORE
0xb0e PUSH1 0x20
0xb10 DUP2
0xb11 ADD
0xb12 DUP4
0xb13 SWAP1
0xb14 MSTORE
0xb15 DUP2
0xb16 MLOAD
0xb17 PUSH32 0x714b446590efbc5b722abe34b4c0cacf4b1f5607fbf924f957646590ce66c4ad
0xb38 SWAP3
0xb39 SWAP2
0xb3a DUP2
0xb3b SWAP1
0xb3c SUB
0xb3d SWAP1
0xb3e SWAP2
0xb3f ADD
0xb40 SWAP1
0xb41 LOG1
0xb42 DUP2
0xb43 PUSH1 0x1
0xb45 PUSH1 0xa0
0xb47 PUSH1 0x2
0xb49 EXP
0xb4a SUB
0xb4b AND
0xb4c PUSH4 0x919f8cfc
0xb51 DUP3
0xb52 PUSH1 0x40
0xb54 MLOAD
0xb55 DUP3
0xb56 PUSH4 0xffffffff
0xb5b AND
0xb5c PUSH1 0xe0
0xb5e PUSH1 0x2
0xb60 EXP
0xb61 MUL
0xb62 DUP2
0xb63 MSTORE
0xb64 PUSH1 0x4
0xb66 ADD
0xb67 DUP1
0xb68 SWAP1
0xb69 POP
0xb6a PUSH1 0x0
0xb6c PUSH1 0x40
0xb6e MLOAD
0xb6f DUP1
0xb70 DUP4
0xb71 SUB
0xb72 DUP2
0xb73 DUP6
0xb74 DUP9
0xb75 DUP1
0xb76 EXTCODESIZE
0xb77 ISZERO
0xb78 ISZERO
0xb79 PUSH2 0xb7e
0xb7c JUMPI
---
0xafe: V1092 = 0x40
0xb01: V1093 = M[0x40]
0xb02: V1094 = 0x1
0xb04: V1095 = 0xa0
0xb06: V1096 = 0x2
0xb08: V1097 = EXP 0x2 0xa0
0xb09: V1098 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0b: V1099 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0xb0d: M[V1093] = V1099
0xb0e: V1100 = 0x20
0xb11: V1101 = ADD V1093 0x20
0xb14: M[V1101] = V229
0xb16: V1102 = M[0x40]
0xb17: V1103 = 0x714b446590efbc5b722abe34b4c0cacf4b1f5607fbf924f957646590ce66c4ad
0xb3c: V1104 = SUB V1093 V1102
0xb3f: V1105 = ADD 0x40 V1104
0xb41: LOG V1102 V1105 0x714b446590efbc5b722abe34b4c0cacf4b1f5607fbf924f957646590ce66c4ad
0xb43: V1106 = 0x1
0xb45: V1107 = 0xa0
0xb47: V1108 = 0x2
0xb49: V1109 = EXP 0x2 0xa0
0xb4a: V1110 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4b: V1111 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0xb4c: V1112 = 0x919f8cfc
0xb52: V1113 = 0x40
0xb54: V1114 = M[0x40]
0xb56: V1115 = 0xffffffff
0xb5b: V1116 = AND 0xffffffff 0x919f8cfc
0xb5c: V1117 = 0xe0
0xb5e: V1118 = 0x2
0xb60: V1119 = EXP 0x2 0xe0
0xb61: V1120 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x919f8cfc
0xb63: M[V1114] = 0x919f8cfc00000000000000000000000000000000000000000000000000000000
0xb64: V1121 = 0x4
0xb66: V1122 = ADD 0x4 V1114
0xb6a: V1123 = 0x0
0xb6c: V1124 = 0x40
0xb6e: V1125 = M[0x40]
0xb71: V1126 = SUB V1122 V1125
0xb76: V1127 = EXTCODESIZE V1111
0xb77: V1128 = ISZERO V1127
0xb78: V1129 = ISZERO V1128
0xb79: V1130 = 0xb7e
0xb7c: JUMPI 0xb7e V1129
---
Entry stack: [V12, 0xef, V227, V229]
Stack pops: 2
Stack additions: [S1, S0, V1111, 0x919f8cfc, S0, V1122, 0x0, V1125, V1126, V1125, S0, V1111]
Exit stack: [V12, 0xef, V227, V229, V1111, 0x919f8cfc, V229, V1122, 0x0, V1125, V1126, V1125, V229, V1111]

================================

Block 0xb7d
[0xb7d:0xb7d]
---
Predecessors: [0xafe]
Successors: []
---
0xb7d INVALID
---
0xb7d: INVALID 
---
Entry stack: [V12, 0xef, V227, V229, V1111, 0x919f8cfc, V229, V1122, 0x0, V1125, V1126, V1125, V229, V1111]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229, V1111, 0x919f8cfc, V229, V1122, 0x0, V1125, V1126, V1125, V229, V1111]

================================

Block 0xb7e
[0xb7e:0xb8a]
---
Predecessors: [0xafe]
Successors: [0xb8b, 0xb8c]
---
0xb7e JUMPDEST
0xb7f PUSH2 0x25ee
0xb82 GAS
0xb83 SUB
0xb84 CALL
0xb85 ISZERO
0xb86 ISZERO
0xb87 PUSH2 0xb8c
0xb8a JUMPI
---
0xb7e: JUMPDEST 
0xb7f: V1131 = 0x25ee
0xb82: V1132 = GAS
0xb83: V1133 = SUB V1132 0x25ee
0xb84: V1134 = CALL V1133 V1111 V229 V1125 V1126 V1125 0x0
0xb85: V1135 = ISZERO V1134
0xb86: V1136 = ISZERO V1135
0xb87: V1137 = 0xb8c
0xb8a: JUMPI 0xb8c V1136
---
Entry stack: [V12, 0xef, V227, V229, V1111, 0x919f8cfc, V229, V1122, 0x0, V1125, V1126, V1125, V229, V1111]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V227, V229, V1111, 0x919f8cfc, V229, V1122]

================================

Block 0xb8b
[0xb8b:0xb8b]
---
Predecessors: [0xb7e]
Successors: []
---
0xb8b INVALID
---
0xb8b: INVALID 
---
Entry stack: [V12, 0xef, V227, V229, V1111, 0x919f8cfc, V229, V1122]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229, V1111, 0x919f8cfc, V229, V1122]

================================

Block 0xb8c
[0xb8c:0xb90]
---
Predecessors: [0xb7e]
Successors: [0xb91]
---
0xb8c JUMPDEST
0xb8d POP
0xb8e POP
0xb8f POP
0xb90 POP
---
0xb8c: JUMPDEST 
---
Entry stack: [V12, 0xef, V227, V229, V1111, 0x919f8cfc, V229, V1122]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xef, V227, V229]

================================

Block 0xb91
[0xb91:0xb91]
---
Predecessors: [0xb8c]
Successors: [0xb92]
---
0xb91 JUMPDEST
---
0xb91: JUMPDEST 
---
Entry stack: [V12, 0xef, V227, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229]

================================

Block 0xb92
[0xb92:0xb92]
---
Predecessors: [0xb91]
Successors: [0xb93]
---
0xb92 JUMPDEST
---
0xb92: JUMPDEST 
---
Entry stack: [V12, 0xef, V227, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V227, V229]

================================

Block 0xb93
[0xb93:0xb96]
---
Predecessors: [0xb92]
Successors: [0xef]
---
0xb93 JUMPDEST
0xb94 POP
0xb95 POP
0xb96 JUMP
---
0xb93: JUMPDEST 
0xb96: JUMP 0xef
---
Entry stack: [V12, 0xef, V227, V229]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xb97
[0xb97:0xbad]
---
Predecessors: [0x2a0]
Successors: [0xbae, 0xbb3]
---
0xb97 JUMPDEST
0xb98 PUSH1 0x0
0xb9a SLOAD
0xb9b CALLER
0xb9c PUSH1 0x1
0xb9e PUSH1 0xa0
0xba0 PUSH1 0x2
0xba2 EXP
0xba3 SUB
0xba4 SWAP1
0xba5 DUP2
0xba6 AND
0xba7 SWAP2
0xba8 AND
0xba9 EQ
0xbaa PUSH2 0xbb3
0xbad JUMPI
---
0xb97: JUMPDEST 
0xb98: V1138 = 0x0
0xb9a: V1139 = S[0x0]
0xb9b: V1140 = CALLER
0xb9c: V1141 = 0x1
0xb9e: V1142 = 0xa0
0xba0: V1143 = 0x2
0xba2: V1144 = EXP 0x2 0xa0
0xba3: V1145 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba6: V1146 = AND 0xffffffffffffffffffffffffffffffffffffffff V1140
0xba8: V1147 = AND V1139 0xffffffffffffffffffffffffffffffffffffffff
0xba9: V1148 = EQ V1147 V1146
0xbaa: V1149 = 0xbb3
0xbad: JUMPI 0xbb3 V1148
---
Entry stack: [V12, 0xef, V236, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V236, V238]

================================

Block 0xbae
[0xbae:0xbb2]
---
Predecessors: [0xb97]
Successors: []
---
0xbae PUSH1 0x0
0xbb0 PUSH1 0x0
0xbb2 REVERT
---
0xbae: V1150 = 0x0
0xbb0: V1151 = 0x0
0xbb2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V236, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V236, V238]

================================

Block 0xbb3
[0xbb3:0xc04]
---
Predecessors: [0xb97]
Successors: [0xc05]
---
0xbb3 JUMPDEST
0xbb4 PUSH5 0xe8d4a51000
0xbba DUP1
0xbbb DUP4
0xbbc MUL
0xbbd PUSH1 0x2
0xbbf DUP2
0xbc0 SWAP1
0xbc1 SSTORE
0xbc2 SWAP1
0xbc3 DUP3
0xbc4 MUL
0xbc5 PUSH1 0x3
0xbc7 DUP2
0xbc8 SWAP1
0xbc9 SSTORE
0xbca PUSH1 0x40
0xbcc DUP1
0xbcd MLOAD
0xbce SWAP3
0xbcf DUP4
0xbd0 MSTORE
0xbd1 PUSH1 0x20
0xbd3 DUP4
0xbd4 ADD
0xbd5 SWAP2
0xbd6 SWAP1
0xbd7 SWAP2
0xbd8 MSTORE
0xbd9 DUP1
0xbda MLOAD
0xbdb PUSH32 0x7b3292b7ea01b5232d50910bc8ca2b7382edfdba2d57c7b160e7775e6441807
0xbfc SWAP3
0xbfd DUP2
0xbfe SWAP1
0xbff SUB
0xc00 SWAP1
0xc01 SWAP2
0xc02 ADD
0xc03 SWAP1
0xc04 LOG1
---
0xbb3: JUMPDEST 
0xbb4: V1152 = 0xe8d4a51000
0xbbc: V1153 = MUL V236 0xe8d4a51000
0xbbd: V1154 = 0x2
0xbc1: S[0x2] = V1153
0xbc4: V1155 = MUL V238 0xe8d4a51000
0xbc5: V1156 = 0x3
0xbc9: S[0x3] = V1155
0xbca: V1157 = 0x40
0xbcd: V1158 = M[0x40]
0xbd0: M[V1158] = V1153
0xbd1: V1159 = 0x20
0xbd4: V1160 = ADD V1158 0x20
0xbd8: M[V1160] = V1155
0xbda: V1161 = M[0x40]
0xbdb: V1162 = 0x7b3292b7ea01b5232d50910bc8ca2b7382edfdba2d57c7b160e7775e6441807
0xbff: V1163 = SUB V1158 V1161
0xc02: V1164 = ADD 0x40 V1163
0xc04: LOG V1161 V1164 0x7b3292b7ea01b5232d50910bc8ca2b7382edfdba2d57c7b160e7775e6441807
---
Entry stack: [V12, 0xef, V236, V238]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xef, V236, V238]

================================

Block 0xc05
[0xc05:0xc05]
---
Predecessors: [0xbb3]
Successors: [0xc06]
---
0xc05 JUMPDEST
---
0xc05: JUMPDEST 
---
Entry stack: [V12, 0xef, V236, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V236, V238]

================================

Block 0xc06
[0xc06:0xc09]
---
Predecessors: [0xc05]
Successors: [0xef]
---
0xc06 JUMPDEST
0xc07 POP
0xc08 POP
0xc09 JUMP
---
0xc06: JUMPDEST 
0xc09: JUMP 0xef
---
Entry stack: [V12, 0xef, V236, V238]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xc0a
[0xc0a:0xc21]
---
Predecessors: [0x2b8]
Successors: [0xc22, 0xc27]
---
0xc0a JUMPDEST
0xc0b PUSH1 0x0
0xc0d DUP1
0xc0e SLOAD
0xc0f CALLER
0xc10 PUSH1 0x1
0xc12 PUSH1 0xa0
0xc14 PUSH1 0x2
0xc16 EXP
0xc17 SUB
0xc18 SWAP1
0xc19 DUP2
0xc1a AND
0xc1b SWAP2
0xc1c AND
0xc1d EQ
0xc1e PUSH2 0xc27
0xc21 JUMPI
---
0xc0a: JUMPDEST 
0xc0b: V1165 = 0x0
0xc0e: V1166 = S[0x0]
0xc0f: V1167 = CALLER
0xc10: V1168 = 0x1
0xc12: V1169 = 0xa0
0xc14: V1170 = 0x2
0xc16: V1171 = EXP 0x2 0xa0
0xc17: V1172 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1a: V1173 = AND 0xffffffffffffffffffffffffffffffffffffffff V1167
0xc1c: V1174 = AND V1166 0xffffffffffffffffffffffffffffffffffffffff
0xc1d: V1175 = EQ V1174 V1173
0xc1e: V1176 = 0xc27
0xc21: JUMPI 0xc27 V1175
---
Entry stack: [V12, 0x104, V251, V253]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x104, V251, V253, 0x0]

================================

Block 0xc22
[0xc22:0xc26]
---
Predecessors: [0xc0a]
Successors: []
---
0xc22 PUSH1 0x0
0xc24 PUSH1 0x0
0xc26 REVERT
---
0xc22: V1177 = 0x0
0xc24: V1178 = 0x0
0xc26: REVERT 0x0 0x0
---
Entry stack: [V12, 0x104, V251, V253, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V251, V253, 0x0]

================================

Block 0xc27
[0xc27:0xcdc]
---
Predecessors: [0xc0a]
Successors: [0x82f, 0xcdd]
---
0xc27 JUMPDEST
0xc28 PUSH1 0x40
0xc2a DUP1
0xc2b MLOAD
0xc2c PUSH1 0x1
0xc2e PUSH1 0xa0
0xc30 PUSH1 0x2
0xc32 EXP
0xc33 SUB
0xc34 DUP6
0xc35 AND
0xc36 DUP2
0xc37 MSTORE
0xc38 PUSH1 0x20
0xc3a DUP2
0xc3b ADD
0xc3c DUP5
0xc3d SWAP1
0xc3e MSTORE
0xc3f DUP2
0xc40 MLOAD
0xc41 PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xc62 SWAP3
0xc63 SWAP2
0xc64 DUP2
0xc65 SWAP1
0xc66 SUB
0xc67 SWAP1
0xc68 SWAP2
0xc69 ADD
0xc6a SWAP1
0xc6b LOG1
0xc6c PUSH1 0x0
0xc6e DUP1
0xc6f SLOAD
0xc70 PUSH1 0x40
0xc72 DUP1
0xc73 MLOAD
0xc74 PUSH1 0x20
0xc76 SWAP1
0xc77 DUP2
0xc78 ADD
0xc79 DUP5
0xc7a SWAP1
0xc7b MSTORE
0xc7c DUP2
0xc7d MLOAD
0xc7e PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc9f DUP2
0xca0 MSTORE
0xca1 PUSH1 0x1
0xca3 PUSH1 0xa0
0xca5 PUSH1 0x2
0xca7 EXP
0xca8 SUB
0xca9 SWAP4
0xcaa DUP5
0xcab AND
0xcac PUSH1 0x4
0xcae DUP3
0xcaf ADD
0xcb0 MSTORE
0xcb1 PUSH1 0x24
0xcb3 DUP2
0xcb4 ADD
0xcb5 DUP8
0xcb6 SWAP1
0xcb7 MSTORE
0xcb8 SWAP2
0xcb9 MLOAD
0xcba SWAP3
0xcbb DUP8
0xcbc AND
0xcbd SWAP4
0xcbe PUSH4 0xa9059cbb
0xcc3 SWAP4
0xcc4 PUSH1 0x44
0xcc6 DUP1
0xcc7 DUP6
0xcc8 ADD
0xcc9 SWAP5
0xcca SWAP2
0xccb SWAP3
0xccc SWAP2
0xccd DUP4
0xcce SWAP1
0xccf SUB
0xcd0 ADD
0xcd1 SWAP1
0xcd2 DUP3
0xcd3 SWAP1
0xcd4 DUP8
0xcd5 DUP1
0xcd6 EXTCODESIZE
0xcd7 ISZERO
0xcd8 ISZERO
0xcd9 PUSH2 0x82f
0xcdc JUMPI
---
0xc27: JUMPDEST 
0xc28: V1179 = 0x40
0xc2b: V1180 = M[0x40]
0xc2c: V1181 = 0x1
0xc2e: V1182 = 0xa0
0xc30: V1183 = 0x2
0xc32: V1184 = EXP 0x2 0xa0
0xc33: V1185 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc35: V1186 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0xc37: M[V1180] = V1186
0xc38: V1187 = 0x20
0xc3b: V1188 = ADD V1180 0x20
0xc3e: M[V1188] = V253
0xc40: V1189 = M[0x40]
0xc41: V1190 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xc66: V1191 = SUB V1180 V1189
0xc69: V1192 = ADD 0x40 V1191
0xc6b: LOG V1189 V1192 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xc6c: V1193 = 0x0
0xc6f: V1194 = S[0x0]
0xc70: V1195 = 0x40
0xc73: V1196 = M[0x40]
0xc74: V1197 = 0x20
0xc78: V1198 = ADD 0x20 V1196
0xc7b: M[V1198] = 0x0
0xc7d: V1199 = M[0x40]
0xc7e: V1200 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xca0: M[V1199] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xca1: V1201 = 0x1
0xca3: V1202 = 0xa0
0xca5: V1203 = 0x2
0xca7: V1204 = EXP 0x2 0xa0
0xca8: V1205 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcab: V1206 = AND 0xffffffffffffffffffffffffffffffffffffffff V1194
0xcac: V1207 = 0x4
0xcaf: V1208 = ADD V1199 0x4
0xcb0: M[V1208] = V1206
0xcb1: V1209 = 0x24
0xcb4: V1210 = ADD V1199 0x24
0xcb7: M[V1210] = V253
0xcb9: V1211 = M[0x40]
0xcbc: V1212 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0xcbe: V1213 = 0xa9059cbb
0xcc4: V1214 = 0x44
0xcc8: V1215 = ADD V1199 0x44
0xccf: V1216 = SUB V1199 V1211
0xcd0: V1217 = ADD V1216 0x44
0xcd6: V1218 = EXTCODESIZE V1212
0xcd7: V1219 = ISZERO V1218
0xcd8: V1220 = ISZERO V1219
0xcd9: V1221 = 0x82f
0xcdc: JUMPI 0x82f V1220
---
Entry stack: [V12, 0x104, V251, V253, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1212, 0xa9059cbb, V1215, 0x20, V1211, V1217, V1211, 0x0, V1212]
Exit stack: [V12, 0x104, V251, V253, 0x0, V1212, 0xa9059cbb, V1215, 0x20, V1211, V1217, V1211, 0x0, V1212]

================================

Block 0xcdd
[0xcdd:0xcdd]
---
Predecessors: [0xc27]
Successors: []
---
0xcdd INVALID
---
0xcdd: INVALID 
---
Entry stack: [V12, 0x104, V251, V253, 0x0, V1212, 0xa9059cbb, V1215, 0x20, V1211, V1217, V1211, 0x0, V1212]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V251, V253, 0x0, V1212, 0xa9059cbb, V1215, 0x20, V1211, V1217, V1211, 0x0, V1212]

================================

Block 0xcde
[0xcde:0xcea]
---
Predecessors: []
Successors: [0x83d, 0xceb]
---
0xcde JUMPDEST
0xcdf PUSH2 0x2c6
0xce2 GAS
0xce3 SUB
0xce4 CALL
0xce5 ISZERO
0xce6 ISZERO
0xce7 PUSH2 0x83d
0xcea JUMPI
---
0xcde: JUMPDEST 
0xcdf: V1222 = 0x2c6
0xce2: V1223 = GAS
0xce3: V1224 = SUB V1223 0x2c6
0xce4: V1225 = CALL V1224 S0 S1 S2 S3 S4 S5
0xce5: V1226 = ISZERO V1225
0xce6: V1227 = ISZERO V1226
0xce7: V1228 = 0x83d
0xcea: JUMPI 0x83d V1227
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xceb
[0xceb:0xcf5]
---
Predecessors: [0xcde]
Successors: [0xcf6]
---
0xceb INVALID
0xcec JUMPDEST
0xced POP
0xcee POP
0xcef PUSH1 0x40
0xcf1 MLOAD
0xcf2 MLOAD
0xcf3 SWAP2
0xcf4 POP
0xcf5 POP
---
0xceb: INVALID 
0xcec: JUMPDEST 
0xcef: V1229 = 0x40
0xcf1: V1230 = M[0x40]
0xcf2: V1231 = M[V1230]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1231]
Exit stack: []

================================

Block 0xcf6
[0xcf6:0xcf6]
---
Predecessors: [0xceb]
Successors: [0xcf7]
---
0xcf6 JUMPDEST
---
0xcf6: JUMPDEST 
---
Entry stack: [V1231]
Stack pops: 0
Stack additions: []
Exit stack: [V1231]

================================

Block 0xcf7
[0xcf7:0xcfc]
---
Predecessors: [0xcf6]
Successors: []
Has unresolved jump.
---
0xcf7 JUMPDEST
0xcf8 SWAP3
0xcf9 SWAP2
0xcfa POP
0xcfb POP
0xcfc JUMP
---
0xcf7: JUMPDEST 
0xcfc: JUMP S3
---
Entry stack: [V1231]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V1231]

================================

Block 0xcfd
[0xcfd:0xd14]
---
Predecessors: [0x2f5]
Successors: [0xd15, 0xd1a]
---
0xcfd JUMPDEST
0xcfe PUSH1 0x0
0xd00 DUP1
0xd01 SLOAD
0xd02 CALLER
0xd03 PUSH1 0x1
0xd05 PUSH1 0xa0
0xd07 PUSH1 0x2
0xd09 EXP
0xd0a SUB
0xd0b SWAP1
0xd0c DUP2
0xd0d AND
0xd0e SWAP2
0xd0f AND
0xd10 EQ
0xd11 PUSH2 0xd1a
0xd14 JUMPI
---
0xcfd: JUMPDEST 
0xcfe: V1232 = 0x0
0xd01: V1233 = S[0x0]
0xd02: V1234 = CALLER
0xd03: V1235 = 0x1
0xd05: V1236 = 0xa0
0xd07: V1237 = 0x2
0xd09: V1238 = EXP 0x2 0xa0
0xd0a: V1239 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0d: V1240 = AND 0xffffffffffffffffffffffffffffffffffffffff V1234
0xd0f: V1241 = AND V1233 0xffffffffffffffffffffffffffffffffffffffff
0xd10: V1242 = EQ V1241 V1240
0xd11: V1243 = 0xd1a
0xd14: JUMPI 0xd1a V1242
---
Entry stack: [V12, 0x104, V270]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x104, V270, 0x0]

================================

Block 0xd15
[0xd15:0xd19]
---
Predecessors: [0xcfd]
Successors: []
---
0xd15 PUSH1 0x0
0xd17 PUSH1 0x0
0xd19 REVERT
---
0xd15: V1244 = 0x0
0xd17: V1245 = 0x0
0xd19: REVERT 0x0 0x0
---
Entry stack: [V12, 0x104, V270, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V270, 0x0]

================================

Block 0xd1a
[0xd1a:0xdc1]
---
Predecessors: [0xcfd]
Successors: [0xdc2, 0xdc3]
---
0xd1a JUMPDEST
0xd1b PUSH1 0x40
0xd1d DUP1
0xd1e MLOAD
0xd1f DUP4
0xd20 DUP2
0xd21 MSTORE
0xd22 SWAP1
0xd23 MLOAD
0xd24 PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xd45 SWAP2
0xd46 DUP2
0xd47 SWAP1
0xd48 SUB
0xd49 PUSH1 0x20
0xd4b ADD
0xd4c SWAP1
0xd4d LOG1
0xd4e PUSH1 0x1
0xd50 SLOAD
0xd51 PUSH1 0x0
0xd53 DUP1
0xd54 SLOAD
0xd55 PUSH1 0x40
0xd57 DUP1
0xd58 MLOAD
0xd59 PUSH1 0x20
0xd5b SWAP1
0xd5c DUP2
0xd5d ADD
0xd5e DUP5
0xd5f SWAP1
0xd60 MSTORE
0xd61 DUP2
0xd62 MLOAD
0xd63 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd84 DUP2
0xd85 MSTORE
0xd86 PUSH1 0x1
0xd88 PUSH1 0xa0
0xd8a PUSH1 0x2
0xd8c EXP
0xd8d SUB
0xd8e SWAP4
0xd8f DUP5
0xd90 AND
0xd91 PUSH1 0x4
0xd93 DUP3
0xd94 ADD
0xd95 MSTORE
0xd96 PUSH1 0x24
0xd98 DUP2
0xd99 ADD
0xd9a DUP9
0xd9b SWAP1
0xd9c MSTORE
0xd9d SWAP2
0xd9e MLOAD
0xd9f SWAP3
0xda0 SWAP1
0xda1 SWAP5
0xda2 AND
0xda3 SWAP4
0xda4 PUSH4 0xa9059cbb
0xda9 SWAP4
0xdaa PUSH1 0x44
0xdac DUP1
0xdad DUP5
0xdae ADD
0xdaf SWAP5
0xdb0 SWAP3
0xdb1 SWAP4
0xdb2 DUP4
0xdb3 SWAP1
0xdb4 SUB
0xdb5 ADD
0xdb6 SWAP1
0xdb7 DUP3
0xdb8 SWAP1
0xdb9 DUP8
0xdba DUP1
0xdbb EXTCODESIZE
0xdbc ISZERO
0xdbd ISZERO
0xdbe PUSH2 0xdc3
0xdc1 JUMPI
---
0xd1a: JUMPDEST 
0xd1b: V1246 = 0x40
0xd1e: V1247 = M[0x40]
0xd21: M[V1247] = V270
0xd23: V1248 = M[0x40]
0xd24: V1249 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xd48: V1250 = SUB V1247 V1248
0xd49: V1251 = 0x20
0xd4b: V1252 = ADD 0x20 V1250
0xd4d: LOG V1248 V1252 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xd4e: V1253 = 0x1
0xd50: V1254 = S[0x1]
0xd51: V1255 = 0x0
0xd54: V1256 = S[0x0]
0xd55: V1257 = 0x40
0xd58: V1258 = M[0x40]
0xd59: V1259 = 0x20
0xd5d: V1260 = ADD 0x20 V1258
0xd60: M[V1260] = 0x0
0xd62: V1261 = M[0x40]
0xd63: V1262 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd85: M[V1261] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd86: V1263 = 0x1
0xd88: V1264 = 0xa0
0xd8a: V1265 = 0x2
0xd8c: V1266 = EXP 0x2 0xa0
0xd8d: V1267 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd90: V1268 = AND 0xffffffffffffffffffffffffffffffffffffffff V1256
0xd91: V1269 = 0x4
0xd94: V1270 = ADD V1261 0x4
0xd95: M[V1270] = V1268
0xd96: V1271 = 0x24
0xd99: V1272 = ADD V1261 0x24
0xd9c: M[V1272] = V270
0xd9e: V1273 = M[0x40]
0xda2: V1274 = AND V1254 0xffffffffffffffffffffffffffffffffffffffff
0xda4: V1275 = 0xa9059cbb
0xdaa: V1276 = 0x44
0xdae: V1277 = ADD V1261 0x44
0xdb4: V1278 = SUB V1261 V1273
0xdb5: V1279 = ADD V1278 0x44
0xdbb: V1280 = EXTCODESIZE V1274
0xdbc: V1281 = ISZERO V1280
0xdbd: V1282 = ISZERO V1281
0xdbe: V1283 = 0xdc3
0xdc1: JUMPI 0xdc3 V1282
---
Entry stack: [V12, 0x104, V270, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V1274, 0xa9059cbb, V1277, 0x20, V1273, V1279, V1273, 0x0, V1274]
Exit stack: [V12, 0x104, V270, 0x0, V1274, 0xa9059cbb, V1277, 0x20, V1273, V1279, V1273, 0x0, V1274]

================================

Block 0xdc2
[0xdc2:0xdc2]
---
Predecessors: [0xd1a]
Successors: []
---
0xdc2 INVALID
---
0xdc2: INVALID 
---
Entry stack: [V12, 0x104, V270, 0x0, V1274, 0xa9059cbb, V1277, 0x20, V1273, V1279, V1273, 0x0, V1274]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V270, 0x0, V1274, 0xa9059cbb, V1277, 0x20, V1273, V1279, V1273, 0x0, V1274]

================================

Block 0xdc3
[0xdc3:0xdcf]
---
Predecessors: [0xd1a]
Successors: [0xdd0, 0xdd1]
---
0xdc3 JUMPDEST
0xdc4 PUSH2 0x2c6
0xdc7 GAS
0xdc8 SUB
0xdc9 CALL
0xdca ISZERO
0xdcb ISZERO
0xdcc PUSH2 0xdd1
0xdcf JUMPI
---
0xdc3: JUMPDEST 
0xdc4: V1284 = 0x2c6
0xdc7: V1285 = GAS
0xdc8: V1286 = SUB V1285 0x2c6
0xdc9: V1287 = CALL V1286 V1274 0x0 V1273 V1279 V1273 0x20
0xdca: V1288 = ISZERO V1287
0xdcb: V1289 = ISZERO V1288
0xdcc: V1290 = 0xdd1
0xdcf: JUMPI 0xdd1 V1289
---
Entry stack: [V12, 0x104, V270, 0x0, V1274, 0xa9059cbb, V1277, 0x20, V1273, V1279, V1273, 0x0, V1274]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x104, V270, 0x0, V1274, 0xa9059cbb, V1277]

================================

Block 0xdd0
[0xdd0:0xdd0]
---
Predecessors: [0xdc3]
Successors: []
---
0xdd0 INVALID
---
0xdd0: INVALID 
---
Entry stack: [V12, 0x104, V270, 0x0, V1274, 0xa9059cbb, V1277]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V270, 0x0, V1274, 0xa9059cbb, V1277]

================================

Block 0xdd1
[0xdd1:0xdda]
---
Predecessors: [0xdc3]
Successors: [0xddb]
---
0xdd1 JUMPDEST
0xdd2 POP
0xdd3 POP
0xdd4 PUSH1 0x40
0xdd6 MLOAD
0xdd7 MLOAD
0xdd8 SWAP2
0xdd9 POP
0xdda POP
---
0xdd1: JUMPDEST 
0xdd4: V1291 = 0x40
0xdd6: V1292 = M[0x40]
0xdd7: V1293 = M[V1292]
---
Entry stack: [V12, 0x104, V270, 0x0, V1274, 0xa9059cbb, V1277]
Stack pops: 4
Stack additions: [V1293]
Exit stack: [V12, 0x104, V270, V1293]

================================

Block 0xddb
[0xddb:0xddb]
---
Predecessors: [0xdd1]
Successors: [0xddc]
---
0xddb JUMPDEST
---
0xddb: JUMPDEST 
---
Entry stack: [V12, 0x104, V270, V1293]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, V270, V1293]

================================

Block 0xddc
[0xddc:0xde0]
---
Predecessors: [0xddb]
Successors: [0x104]
---
0xddc JUMPDEST
0xddd SWAP2
0xdde SWAP1
0xddf POP
0xde0 JUMP
---
0xddc: JUMPDEST 
0xde0: JUMP 0x104
---
Entry stack: [V12, 0x104, V270, V1293]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V1293]

================================

Block 0xde1
[0xde1:0xdf1]
---
Predecessors: [0x31c]
Successors: [0xdf2, 0xe05]
---
0xde1 JUMPDEST
0xde2 PUSH1 0x5
0xde4 SLOAD
0xde5 PUSH1 0x0
0xde7 SWAP1
0xde8 DUP2
0xde9 SWAP1
0xdea PUSH1 0xff
0xdec AND
0xded DUP1
0xdee PUSH2 0xe05
0xdf1 JUMPI
---
0xde1: JUMPDEST 
0xde2: V1294 = 0x5
0xde4: V1295 = S[0x5]
0xde5: V1296 = 0x0
0xdea: V1297 = 0xff
0xdec: V1298 = AND 0xff V1295
0xdee: V1299 = 0xe05
0xdf1: JUMPI 0xe05 V1298
---
Entry stack: [V12, 0xef, V285]
Stack pops: 0
Stack additions: [0x0, 0x0, V1298]
Exit stack: [V12, 0xef, V285, 0x0, 0x0, V1298]

================================

Block 0xdf2
[0xdf2:0xe04]
---
Predecessors: [0xde1]
Successors: [0xe05]
---
0xdf2 POP
0xdf3 PUSH1 0x0
0xdf5 SLOAD
0xdf6 CALLER
0xdf7 PUSH1 0x1
0xdf9 PUSH1 0xa0
0xdfb PUSH1 0x2
0xdfd EXP
0xdfe SUB
0xdff SWAP1
0xe00 DUP2
0xe01 AND
0xe02 SWAP2
0xe03 AND
0xe04 EQ
---
0xdf3: V1300 = 0x0
0xdf5: V1301 = S[0x0]
0xdf6: V1302 = CALLER
0xdf7: V1303 = 0x1
0xdf9: V1304 = 0xa0
0xdfb: V1305 = 0x2
0xdfd: V1306 = EXP 0x2 0xa0
0xdfe: V1307 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe01: V1308 = AND 0xffffffffffffffffffffffffffffffffffffffff V1302
0xe03: V1309 = AND V1301 0xffffffffffffffffffffffffffffffffffffffff
0xe04: V1310 = EQ V1309 V1308
---
Entry stack: [V12, 0xef, V285, 0x0, 0x0, V1298]
Stack pops: 1
Stack additions: [V1310]
Exit stack: [V12, 0xef, V285, 0x0, 0x0, V1310]

================================

Block 0xe05
[0xe05:0xe0a]
---
Predecessors: [0xde1, 0xdf2]
Successors: [0x5ae, 0xe0b]
---
0xe05 JUMPDEST
0xe06 ISZERO
0xe07 PUSH2 0x5ae
0xe0a JUMPI
---
0xe05: JUMPDEST 
0xe06: V1311 = ISZERO S0
0xe07: V1312 = 0x5ae
0xe0a: JUMPI 0x5ae V1311
---
Entry stack: [V12, 0xef, V285, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, V285, 0x0, 0x0]

================================

Block 0xe0b
[0xe0b:0xe1f]
---
Predecessors: [0xe05]
Successors: [0xe20, 0xe21]
---
0xe0b PUSH1 0x2
0xe0d SLOAD
0xe0e ADDRESS
0xe0f PUSH1 0x1
0xe11 PUSH1 0xa0
0xe13 PUSH1 0x2
0xe15 EXP
0xe16 SUB
0xe17 AND
0xe18 BALANCE
0xe19 DUP2
0xe1a ISZERO
0xe1b ISZERO
0xe1c PUSH2 0xe21
0xe1f JUMPI
---
0xe0b: V1313 = 0x2
0xe0d: V1314 = S[0x2]
0xe0e: V1315 = ADDRESS
0xe0f: V1316 = 0x1
0xe11: V1317 = 0xa0
0xe13: V1318 = 0x2
0xe15: V1319 = EXP 0x2 0xa0
0xe16: V1320 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe17: V1321 = AND 0xffffffffffffffffffffffffffffffffffffffff V1315
0xe18: V1322 = BALANCE V1321
0xe1a: V1323 = ISZERO V1314
0xe1b: V1324 = ISZERO V1323
0xe1c: V1325 = 0xe21
0xe1f: JUMPI 0xe21 V1324
---
Entry stack: [V12, 0xef, V285, 0x0, 0x0]
Stack pops: 0
Stack additions: [V1314, V1322]
Exit stack: [V12, 0xef, V285, 0x0, 0x0, V1314, V1322]

================================

Block 0xe20
[0xe20:0xe20]
---
Predecessors: [0xe0b]
Successors: []
---
0xe20 INVALID
---
0xe20: INVALID 
---
Entry stack: [V12, 0xef, V285, 0x0, 0x0, V1314, V1322]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V285, 0x0, 0x0, V1314, V1322]

================================

Block 0xe21
[0xe21:0xe2f]
---
Predecessors: [0xe0b]
Successors: [0xe30, 0xe31]
---
0xe21 JUMPDEST
0xe22 DIV
0xe23 SWAP2
0xe24 POP
0xe25 PUSH1 0x4
0xe27 SLOAD
0xe28 DUP4
0xe29 DUP2
0xe2a ISZERO
0xe2b ISZERO
0xe2c PUSH2 0xe31
0xe2f JUMPI
---
0xe21: JUMPDEST 
0xe22: V1326 = DIV V1322 V1314
0xe25: V1327 = 0x4
0xe27: V1328 = S[0x4]
0xe2a: V1329 = ISZERO V1328
0xe2b: V1330 = ISZERO V1329
0xe2c: V1331 = 0xe31
0xe2f: JUMPI 0xe31 V1330
---
Entry stack: [V12, 0xef, V285, 0x0, 0x0, V1314, V1322]
Stack pops: 5
Stack additions: [S4, V1326, S2, V1328, S4]
Exit stack: [V12, 0xef, V285, V1326, 0x0, V1328, V285]

================================

Block 0xe30
[0xe30:0xe30]
---
Predecessors: [0xe21]
Successors: []
---
0xe30 INVALID
---
0xe30: INVALID 
---
Entry stack: [V12, 0xef, V285, V1326, 0x0, V1328, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V285, V1326, 0x0, V1328, V285]

================================

Block 0xe31
[0xe31:0xe3c]
---
Predecessors: [0xe21]
Successors: [0xe3d, 0xe3f]
---
0xe31 JUMPDEST
0xe32 DIV
0xe33 SWAP1
0xe34 POP
0xe35 DUP2
0xe36 DUP2
0xe37 GT
0xe38 ISZERO
0xe39 PUSH2 0xe3f
0xe3c JUMPI
---
0xe31: JUMPDEST 
0xe32: V1332 = DIV V285 V1328
0xe37: V1333 = GT V1332 V1326
0xe38: V1334 = ISZERO V1333
0xe39: V1335 = 0xe3f
0xe3c: JUMPI 0xe3f V1334
---
Entry stack: [V12, 0xef, V285, V1326, 0x0, V1328, V285]
Stack pops: 4
Stack additions: [S3, V1332]
Exit stack: [V12, 0xef, V285, V1326, V1332]

================================

Block 0xe3d
[0xe3d:0xe3e]
---
Predecessors: [0xe31]
Successors: [0xe3f]
---
0xe3d POP
0xe3e DUP1
---
0xe3d: NOP 
---
Entry stack: [V12, 0xef, V285, V1326, V1332]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V12, 0xef, V285, V1326, V1326]

================================

Block 0xe3f
[0xe3f:0xe48]
---
Predecessors: [0xe31, 0xe3d]
Successors: [0xe49, 0xf23]
---
0xe3f JUMPDEST
0xe40 PUSH1 0x0
0xe42 DUP2
0xe43 GT
0xe44 ISZERO
0xe45 PUSH2 0xf23
0xe48 JUMPI
---
0xe3f: JUMPDEST 
0xe40: V1336 = 0x0
0xe43: V1337 = GT S0 0x0
0xe44: V1338 = ISZERO V1337
0xe45: V1339 = 0xf23
0xe48: JUMPI 0xf23 V1338
---
Entry stack: [V12, 0xef, V285, V1326, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V285, V1326, S0]

================================

Block 0xe49
[0xe49:0xecb]
---
Predecessors: [0xe3f]
Successors: [0xecc, 0xecd]
---
0xe49 PUSH1 0x1
0xe4b SLOAD
0xe4c PUSH1 0x4
0xe4e DUP1
0xe4f SLOAD
0xe50 PUSH1 0x40
0xe52 DUP1
0xe53 MLOAD
0xe54 PUSH1 0x0
0xe56 PUSH1 0x20
0xe58 SWAP2
0xe59 DUP3
0xe5a ADD
0xe5b DUP2
0xe5c SWAP1
0xe5d MSTORE
0xe5e DUP3
0xe5f MLOAD
0xe60 PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xe81 DUP2
0xe82 MSTORE
0xe83 PUSH1 0x1
0xe85 PUSH1 0xa0
0xe87 PUSH1 0x2
0xe89 EXP
0xe8a SUB
0xe8b CALLER
0xe8c DUP2
0xe8d AND
0xe8e SWAP7
0xe8f DUP3
0xe90 ADD
0xe91 SWAP7
0xe92 SWAP1
0xe93 SWAP7
0xe94 MSTORE
0xe95 ADDRESS
0xe96 DUP7
0xe97 AND
0xe98 PUSH1 0x24
0xe9a DUP3
0xe9b ADD
0xe9c MSTORE
0xe9d SWAP4
0xe9e DUP8
0xe9f MUL
0xea0 PUSH1 0x44
0xea2 DUP6
0xea3 ADD
0xea4 MSTORE
0xea5 SWAP2
0xea6 MLOAD
0xea7 SWAP4
0xea8 SWAP1
0xea9 SWAP5
0xeaa AND
0xeab SWAP4
0xeac PUSH4 0x23b872dd
0xeb1 SWAP4
0xeb2 PUSH1 0x64
0xeb4 DUP1
0xeb5 DUP6
0xeb6 ADD
0xeb7 SWAP5
0xeb8 SWAP3
0xeb9 SWAP4
0xeba SWAP2
0xebb SWAP3
0xebc DUP4
0xebd SWAP1
0xebe SUB
0xebf ADD
0xec0 SWAP1
0xec1 DUP3
0xec2 SWAP1
0xec3 DUP8
0xec4 DUP1
0xec5 EXTCODESIZE
0xec6 ISZERO
0xec7 ISZERO
0xec8 PUSH2 0xecd
0xecb JUMPI
---
0xe49: V1340 = 0x1
0xe4b: V1341 = S[0x1]
0xe4c: V1342 = 0x4
0xe4f: V1343 = S[0x4]
0xe50: V1344 = 0x40
0xe53: V1345 = M[0x40]
0xe54: V1346 = 0x0
0xe56: V1347 = 0x20
0xe5a: V1348 = ADD 0x20 V1345
0xe5d: M[V1348] = 0x0
0xe5f: V1349 = M[0x40]
0xe60: V1350 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xe82: M[V1349] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xe83: V1351 = 0x1
0xe85: V1352 = 0xa0
0xe87: V1353 = 0x2
0xe89: V1354 = EXP 0x2 0xa0
0xe8a: V1355 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe8b: V1356 = CALLER
0xe8d: V1357 = AND 0xffffffffffffffffffffffffffffffffffffffff V1356
0xe90: V1358 = ADD V1349 0x4
0xe94: M[V1358] = V1357
0xe95: V1359 = ADDRESS
0xe97: V1360 = AND 0xffffffffffffffffffffffffffffffffffffffff V1359
0xe98: V1361 = 0x24
0xe9b: V1362 = ADD V1349 0x24
0xe9c: M[V1362] = V1360
0xe9f: V1363 = MUL S0 V1343
0xea0: V1364 = 0x44
0xea3: V1365 = ADD V1349 0x44
0xea4: M[V1365] = V1363
0xea6: V1366 = M[0x40]
0xeaa: V1367 = AND V1341 0xffffffffffffffffffffffffffffffffffffffff
0xeac: V1368 = 0x23b872dd
0xeb2: V1369 = 0x64
0xeb6: V1370 = ADD V1349 0x64
0xebe: V1371 = SUB V1349 V1366
0xebf: V1372 = ADD V1371 0x64
0xec5: V1373 = EXTCODESIZE V1367
0xec6: V1374 = ISZERO V1373
0xec7: V1375 = ISZERO V1374
0xec8: V1376 = 0xecd
0xecb: JUMPI 0xecd V1375
---
Entry stack: [V12, 0xef, V285, V1326, S0]
Stack pops: 1
Stack additions: [S0, V1367, 0x23b872dd, V1370, 0x20, V1366, V1372, V1366, 0x0, V1367]
Exit stack: [V12, 0xef, V285, V1326, S0, V1367, 0x23b872dd, V1370, 0x20, V1366, V1372, V1366, 0x0, V1367]

================================

Block 0xecc
[0xecc:0xecc]
---
Predecessors: [0xe49]
Successors: []
---
0xecc INVALID
---
0xecc: INVALID 
---
Entry stack: [V12, 0xef, V285, V1326, S9, V1367, 0x23b872dd, V1370, 0x20, V1366, V1372, V1366, 0x0, V1367]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V285, V1326, S9, V1367, 0x23b872dd, V1370, 0x20, V1366, V1372, V1366, 0x0, V1367]

================================

Block 0xecd
[0xecd:0xed9]
---
Predecessors: [0xe49]
Successors: [0xeda, 0xedb]
---
0xecd JUMPDEST
0xece PUSH2 0x2c6
0xed1 GAS
0xed2 SUB
0xed3 CALL
0xed4 ISZERO
0xed5 ISZERO
0xed6 PUSH2 0xedb
0xed9 JUMPI
---
0xecd: JUMPDEST 
0xece: V1377 = 0x2c6
0xed1: V1378 = GAS
0xed2: V1379 = SUB V1378 0x2c6
0xed3: V1380 = CALL V1379 V1367 0x0 V1366 V1372 V1366 0x20
0xed4: V1381 = ISZERO V1380
0xed5: V1382 = ISZERO V1381
0xed6: V1383 = 0xedb
0xed9: JUMPI 0xedb V1382
---
Entry stack: [V12, 0xef, V285, V1326, S9, V1367, 0x23b872dd, V1370, 0x20, V1366, V1372, V1366, 0x0, V1367]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V285, V1326, S9, V1367, 0x23b872dd, V1370]

================================

Block 0xeda
[0xeda:0xeda]
---
Predecessors: [0xecd]
Successors: []
---
0xeda INVALID
---
0xeda: INVALID 
---
Entry stack: [V12, 0xef, V285, V1326, S3, V1367, 0x23b872dd, V1370]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V285, V1326, S3, V1367, 0x23b872dd, V1370]

================================

Block 0xedb
[0xedb:0xee9]
---
Predecessors: [0xecd]
Successors: [0xeea, 0xeef]
---
0xedb JUMPDEST
0xedc POP
0xedd POP
0xede PUSH1 0x40
0xee0 MLOAD
0xee1 MLOAD
0xee2 ISZERO
0xee3 ISZERO
0xee4 SWAP1
0xee5 POP
0xee6 PUSH2 0xeef
0xee9 JUMPI
---
0xedb: JUMPDEST 
0xede: V1384 = 0x40
0xee0: V1385 = M[0x40]
0xee1: V1386 = M[V1385]
0xee2: V1387 = ISZERO V1386
0xee3: V1388 = ISZERO V1387
0xee6: V1389 = 0xeef
0xee9: JUMPI 0xeef V1388
---
Entry stack: [V12, 0xef, V285, V1326, S3, V1367, 0x23b872dd, V1370]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xef, V285, V1326, S3]

================================

Block 0xeea
[0xeea:0xeee]
---
Predecessors: [0xedb]
Successors: []
---
0xeea PUSH1 0x0
0xeec PUSH1 0x0
0xeee REVERT
---
0xeea: V1390 = 0x0
0xeec: V1391 = 0x0
0xeee: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V285, V1326, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V285, V1326, S0]

================================

Block 0xeef
[0xeef:0xf1d]
---
Predecessors: [0xedb]
Successors: [0xf1e, 0xf23]
---
0xeef JUMPDEST
0xef0 PUSH1 0x2
0xef2 SLOAD
0xef3 PUSH1 0x40
0xef5 MLOAD
0xef6 PUSH1 0x1
0xef8 PUSH1 0xa0
0xefa PUSH1 0x2
0xefc EXP
0xefd SUB
0xefe CALLER
0xeff AND
0xf00 SWAP2
0xf01 DUP4
0xf02 MUL
0xf03 DUP1
0xf04 ISZERO
0xf05 PUSH2 0x8fc
0xf08 MUL
0xf09 SWAP2
0xf0a PUSH1 0x0
0xf0c DUP2
0xf0d DUP2
0xf0e DUP2
0xf0f DUP6
0xf10 DUP9
0xf11 DUP9
0xf12 CALL
0xf13 SWAP4
0xf14 POP
0xf15 POP
0xf16 POP
0xf17 POP
0xf18 ISZERO
0xf19 ISZERO
0xf1a PUSH2 0xf23
0xf1d JUMPI
---
0xeef: JUMPDEST 
0xef0: V1392 = 0x2
0xef2: V1393 = S[0x2]
0xef3: V1394 = 0x40
0xef5: V1395 = M[0x40]
0xef6: V1396 = 0x1
0xef8: V1397 = 0xa0
0xefa: V1398 = 0x2
0xefc: V1399 = EXP 0x2 0xa0
0xefd: V1400 = SUB 0x10000000000000000000000000000000000000000 0x1
0xefe: V1401 = CALLER
0xeff: V1402 = AND V1401 0xffffffffffffffffffffffffffffffffffffffff
0xf02: V1403 = MUL S0 V1393
0xf04: V1404 = ISZERO V1403
0xf05: V1405 = 0x8fc
0xf08: V1406 = MUL 0x8fc V1404
0xf0a: V1407 = 0x0
0xf12: V1408 = CALL V1406 V1402 V1403 V1395 0x0 V1395 0x0
0xf18: V1409 = ISZERO V1408
0xf19: V1410 = ISZERO V1409
0xf1a: V1411 = 0xf23
0xf1d: JUMPI 0xf23 V1410
---
Entry stack: [V12, 0xef, V285, V1326, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V285, V1326, S0]

================================

Block 0xf1e
[0xf1e:0xf22]
---
Predecessors: [0xeef]
Successors: []
---
0xf1e PUSH1 0x0
0xf20 PUSH1 0x0
0xf22 REVERT
---
0xf1e: V1412 = 0x0
0xf20: V1413 = 0x0
0xf22: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V285, V1326, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V285, V1326, S0]

================================

Block 0xf23
[0xf23:0xf23]
---
Predecessors: [0xe3f, 0xeef]
Successors: [0xf24]
---
0xf23 JUMPDEST
---
0xf23: JUMPDEST 
---
Entry stack: [V12, 0xef, V285, V1326, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V285, V1326, S0]

================================

Block 0xf24
[0xf24:0xf77]
---
Predecessors: [0xf23]
Successors: [0xf78]
---
0xf24 JUMPDEST
0xf25 PUSH1 0x4
0xf27 SLOAD
0xf28 PUSH1 0x2
0xf2a SLOAD
0xf2b PUSH1 0x40
0xf2d DUP1
0xf2e MLOAD
0xf2f DUP7
0xf30 DUP2
0xf31 MSTORE
0xf32 SWAP3
0xf33 DUP5
0xf34 MUL
0xf35 PUSH1 0x20
0xf37 DUP5
0xf38 ADD
0xf39 MSTORE
0xf3a SWAP1
0xf3b DUP4
0xf3c MUL
0xf3d DUP3
0xf3e DUP3
0xf3f ADD
0xf40 MSTORE
0xf41 MLOAD
0xf42 PUSH1 0x1
0xf44 PUSH1 0xa0
0xf46 PUSH1 0x2
0xf48 EXP
0xf49 SUB
0xf4a CALLER
0xf4b AND
0xf4c SWAP2
0xf4d PUSH32 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0xf6e SWAP2
0xf6f SWAP1
0xf70 DUP2
0xf71 SWAP1
0xf72 SUB
0xf73 PUSH1 0x60
0xf75 ADD
0xf76 SWAP1
0xf77 LOG2
---
0xf24: JUMPDEST 
0xf25: V1414 = 0x4
0xf27: V1415 = S[0x4]
0xf28: V1416 = 0x2
0xf2a: V1417 = S[0x2]
0xf2b: V1418 = 0x40
0xf2e: V1419 = M[0x40]
0xf31: M[V1419] = V285
0xf34: V1420 = MUL S0 V1415
0xf35: V1421 = 0x20
0xf38: V1422 = ADD V1419 0x20
0xf39: M[V1422] = V1420
0xf3c: V1423 = MUL S0 V1417
0xf3f: V1424 = ADD 0x40 V1419
0xf40: M[V1424] = V1423
0xf41: V1425 = M[0x40]
0xf42: V1426 = 0x1
0xf44: V1427 = 0xa0
0xf46: V1428 = 0x2
0xf48: V1429 = EXP 0x2 0xa0
0xf49: V1430 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4a: V1431 = CALLER
0xf4b: V1432 = AND V1431 0xffffffffffffffffffffffffffffffffffffffff
0xf4d: V1433 = 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0xf72: V1434 = SUB V1419 V1425
0xf73: V1435 = 0x60
0xf75: V1436 = ADD 0x60 V1434
0xf77: LOG V1425 V1436 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683 V1432
---
Entry stack: [V12, 0xef, V285, V1326, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xef, V285, V1326, S0]

================================

Block 0xf78
[0xf78:0xf78]
---
Predecessors: [0xf24]
Successors: [0xf79]
---
0xf78 JUMPDEST
---
0xf78: JUMPDEST 
---
Entry stack: [V12, 0xef, V285, V1326, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V285, V1326, S0]

================================

Block 0xf79
[0xf79:0xf7d]
---
Predecessors: [0xf78]
Successors: [0xef]
---
0xf79 JUMPDEST
0xf7a POP
0xf7b POP
0xf7c POP
0xf7d JUMP
---
0xf79: JUMPDEST 
0xf7d: JUMP 0xef
---
Entry stack: [V12, 0xef, V285, V1326, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7e
[0xf7e:0xf94]
---
Predecessors: [0x331]
Successors: [0xf95, 0xf9a]
---
0xf7e JUMPDEST
0xf7f PUSH1 0x0
0xf81 SLOAD
0xf82 CALLER
0xf83 PUSH1 0x1
0xf85 PUSH1 0xa0
0xf87 PUSH1 0x2
0xf89 EXP
0xf8a SUB
0xf8b SWAP1
0xf8c DUP2
0xf8d AND
0xf8e SWAP2
0xf8f AND
0xf90 EQ
0xf91 PUSH2 0xf9a
0xf94 JUMPI
---
0xf7e: JUMPDEST 
0xf7f: V1437 = 0x0
0xf81: V1438 = S[0x0]
0xf82: V1439 = CALLER
0xf83: V1440 = 0x1
0xf85: V1441 = 0xa0
0xf87: V1442 = 0x2
0xf89: V1443 = EXP 0x2 0xa0
0xf8a: V1444 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8d: V1445 = AND 0xffffffffffffffffffffffffffffffffffffffff V1439
0xf8f: V1446 = AND V1438 0xffffffffffffffffffffffffffffffffffffffff
0xf90: V1447 = EQ V1446 V1445
0xf91: V1448 = 0xf9a
0xf94: JUMPI 0xf9a V1447
---
Entry stack: [V12, 0xef, V298]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V298]

================================

Block 0xf95
[0xf95:0xf99]
---
Predecessors: [0xf7e]
Successors: []
---
0xf95 PUSH1 0x0
0xf97 PUSH1 0x0
0xf99 REVERT
---
0xf95: V1449 = 0x0
0xf97: V1450 = 0x0
0xf99: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V298]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V298]

================================

Block 0xf9a
[0xf9a:0xffb]
---
Predecessors: [0xf7e]
Successors: [0xffc]
---
0xf9a JUMPDEST
0xf9b PUSH1 0x0
0xf9d DUP1
0xf9e SLOAD
0xf9f PUSH1 0x40
0xfa1 MLOAD
0xfa2 PUSH1 0x1
0xfa4 PUSH1 0xa0
0xfa6 PUSH1 0x2
0xfa8 EXP
0xfa9 SUB
0xfaa DUP1
0xfab DUP6
0xfac AND
0xfad SWAP4
0xfae SWAP3
0xfaf AND
0xfb0 SWAP2
0xfb1 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xfd2 SWAP2
0xfd3 LOG3
0xfd4 PUSH1 0x0
0xfd6 DUP1
0xfd7 SLOAD
0xfd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfed NOT
0xfee AND
0xfef PUSH1 0x1
0xff1 PUSH1 0xa0
0xff3 PUSH1 0x2
0xff5 EXP
0xff6 SUB
0xff7 DUP4
0xff8 AND
0xff9 OR
0xffa SWAP1
0xffb SSTORE
---
0xf9a: JUMPDEST 
0xf9b: V1451 = 0x0
0xf9e: V1452 = S[0x0]
0xf9f: V1453 = 0x40
0xfa1: V1454 = M[0x40]
0xfa2: V1455 = 0x1
0xfa4: V1456 = 0xa0
0xfa6: V1457 = 0x2
0xfa8: V1458 = EXP 0x2 0xa0
0xfa9: V1459 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfac: V1460 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0xfaf: V1461 = AND V1452 0xffffffffffffffffffffffffffffffffffffffff
0xfb1: V1462 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xfd3: LOG V1454 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1461 V1460
0xfd4: V1463 = 0x0
0xfd7: V1464 = S[0x0]
0xfd8: V1465 = 0xffffffffffffffffffffffffffffffffffffffff
0xfed: V1466 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfee: V1467 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1464
0xfef: V1468 = 0x1
0xff1: V1469 = 0xa0
0xff3: V1470 = 0x2
0xff5: V1471 = EXP 0x2 0xa0
0xff6: V1472 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff8: V1473 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0xff9: V1474 = OR V1473 V1467
0xffb: S[0x0] = V1474
---
Entry stack: [V12, 0xef, V298]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V298]

================================

Block 0xffc
[0xffc:0xffc]
---
Predecessors: [0xf9a]
Successors: [0xffd]
---
0xffc JUMPDEST
---
0xffc: JUMPDEST 
---
Entry stack: [V12, 0xef, V298]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V298]

================================

Block 0xffd
[0xffd:0xfff]
---
Predecessors: [0xffc]
Successors: [0xef]
---
0xffd JUMPDEST
0xffe POP
0xfff JUMP
---
0xffd: JUMPDEST 
0xfff: JUMP 0xef
---
Entry stack: [V12, 0xef, V298]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1000
[0x1000:0x1043]
---
Predecessors: []
Successors: []
---
0x1000 STOP
0x1001 LOG1
0x1002 PUSH6 0x627a7a723058
0x1009 SHA3
0x100a MISSING 0x2b
0x100b NOT
0x100c MISSING 0xbd
0x100d MISSING 0xb3
0x100e NOT
0x100f MISSING 0x4e
0x1010 MISSING 0x46
0x1011 MISSING 0xd9
0x1012 MISSING 0x27
0x1013 MISSING 0xba
0x1014 MISSING 0xab
0x1015 MISSING 0xd2
0x1016 PUSH16 0x803b60ff54ee18bbaf246e17fdfe498a
0x1027 MISSING 0xab
0x1028 MISSING 0x24
0x1029 PUSH26 0x29
---
0x1000: STOP 
0x1001: LOG S0 S1 S2
0x1002: V1475 = 0x627a7a723058
0x1009: V1476 = SHA3 0x627a7a723058 S3
0x100a: MISSING 0x2b
0x100b: V1477 = NOT S0
0x100c: MISSING 0xbd
0x100d: MISSING 0xb3
0x100e: V1478 = NOT S0
0x100f: MISSING 0x4e
0x1010: MISSING 0x46
0x1011: MISSING 0xd9
0x1012: MISSING 0x27
0x1013: MISSING 0xba
0x1014: MISSING 0xab
0x1015: MISSING 0xd2
0x1016: V1479 = 0x803b60ff54ee18bbaf246e17fdfe498a
0x1027: MISSING 0xab
0x1028: MISSING 0x24
0x1029: V1480 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1476, V1477, V1478, 0x803b60ff54ee18bbaf246e17fdfe498a, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x2170ebf7
Entry block: 0xf1
Exit block: 0x104
Body: 0xf1, 0xf8, 0xf9, 0x104, 0x5b5, 0x5cd, 0x5d2, 0x5e5, 0x641, 0x642, 0x643

Function 1:
Public function signature: 0x38d52e0f
Entry block: 0x118
Exit block: 0x128
Body: 0x118, 0x11f, 0x120, 0x128, 0x648

Function 2:
Public function signature: 0x4b750334
Entry block: 0x144
Exit block: 0x154
Body: 0x144, 0x14b, 0x14c, 0x154, 0x657

Function 3:
Public function signature: 0x4ca50f59
Entry block: 0x166
Exit block: 0x104
Body: 0x104, 0x166, 0x16d, 0x16e, 0x65d

Function 4:
Public function signature: 0x52954e5a
Entry block: 0x18a
Exit block: 0x104
Body: 0x104, 0x18a, 0x191, 0x192, 0x66b, 0x683, 0x688, 0x6cd, 0x6ce, 0x6db, 0x6dc, 0x6fc, 0x741, 0x742, 0x74f, 0x750, 0x76b, 0x771, 0x776, 0x82e, 0x82f, 0x83c, 0x83d, 0x847, 0x848

Function 5:
Public function signature: 0x8620410b
Entry block: 0x1bd
Exit block: 0x154
Body: 0x154, 0x1bd, 0x1c4, 0x1c5, 0x84e

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x1df
Exit block: 0x128
Body: 0x128, 0x1df, 0x1e6, 0x1e7, 0x854

Function 7:
Public function signature: 0x919f8cfc
Entry block: 0x20b
Exit block: 0xef
Body: 0xef, 0x20b, 0x863, 0x87d, 0x8e1, 0x8e2, 0x8ef, 0x8f0, 0x906, 0x90c, 0x911, 0x945, 0x946

Function 8:
Public function signature: 0x976a8435
Entry block: 0x215
Exit block: 0x154
Body: 0x154, 0x215, 0x21c, 0x21d, 0x948

Function 9:
Public function signature: 0xa7abc124
Entry block: 0x237
Exit block: 0xef
Body: 0xef, 0x237, 0x23e, 0x23f, 0x94e, 0x965, 0x96a, 0x9d3, 0x9d4

Function 10:
Public function signature: 0xb1099347
Entry block: 0x253
Exit block: 0x104
Body: 0x104, 0x253, 0x25a, 0x25b, 0x9d8

Function 11:
Public function signature: 0xbe86d5a7
Entry block: 0x277
Exit block: 0xef
Body: 0xef, 0x277, 0x27e, 0x27f, 0x9d3, 0x9d4, 0x9e1, 0x9f8, 0x9fd, 0xa42, 0xa43, 0xa50, 0xa51, 0xa71, 0xab6, 0xab7, 0xac4, 0xac5, 0xae0, 0xae6, 0xaeb, 0xafe, 0xb7d, 0xb7e, 0xb8b, 0xb8c, 0xb91, 0xb92, 0xb93

Function 12:
Public function signature: 0xc21c7712
Entry block: 0x298
Exit block: 0xef
Body: 0xef, 0x298, 0x29f, 0x2a0, 0xb97, 0xbae, 0xbb3, 0xc05, 0xc06

Function 13:
Public function signature: 0xc34764cf
Entry block: 0x2b0
Exit block: 0x104
Body: 0x104, 0x2b0, 0x2b7, 0x2b8, 0x82f, 0x83c, 0x83d, 0x847, 0x848, 0xc0a, 0xc22, 0xc27, 0xcdd

Function 14:
Public function signature: 0xc60ccb0e
Entry block: 0x2e3
Exit block: 0xef
Body: 0xef, 0x2e3

Function 15:
Public function signature: 0xcd53a3b7
Entry block: 0x2ed
Exit block: 0x104
Body: 0x104, 0x2ed, 0x2f4, 0x2f5, 0xcfd, 0xd15, 0xd1a, 0xdc2, 0xdc3, 0xdd0, 0xdd1, 0xddb, 0xddc

Function 16:
Public function signature: 0xeff883bd
Entry block: 0x314
Exit block: 0xef
Body: 0xef, 0x314, 0x31b, 0x31c, 0xde1, 0xdf2, 0xe05, 0xe0b, 0xe20, 0xe21, 0xe30, 0xe31, 0xe3d, 0xe3f, 0xe49, 0xecc, 0xecd, 0xeda, 0xedb, 0xeea, 0xeef, 0xf1e, 0xf23, 0xf24, 0xf78, 0xf79

Function 17:
Public function signature: 0xf2fde38b
Entry block: 0x329
Exit block: 0xef
Body: 0xef, 0x329, 0x330, 0x331, 0xf7e, 0xf95, 0xf9a, 0xffc, 0xffd

Function 18:
Public fallback function
Entry block: 0xe0
Exit block: 0xef
Body: 0xe0, 0xe4, 0xec, 0xed, 0xef

Function 19:
Private function
Entry block: 0x347
Exit block: 0x5b0
Body: 0x347, 0x363, 0x376, 0x37c, 0x388, 0x403, 0x411, 0x422, 0x436, 0x442, 0x44c, 0x47c, 0x47d, 0x487, 0x507, 0x515, 0x529, 0x52a, 0x57e, 0x5ae, 0x5af, 0x5b0

