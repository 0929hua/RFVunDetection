Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x1d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x1d
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x1d
0x9: JUMPI 0x1d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x1c]
---
Predecessors: [0x0]
Successors: [0x1d, 0x52]
---
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 PUSH4 0xca325469
0x18 DUP2
0x19 EQ
0x1a PUSH1 0x52
0x1c JUMPI
---
0xa: V5 = 0xe0
0xc: V6 = 0x2
0xe: V7 = EXP 0x2 0xe0
0xf: V8 = 0x0
0x11: V9 = CALLDATALOAD 0x0
0x12: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x13: V11 = 0xca325469
0x19: V12 = EQ V10 0xca325469
0x1a: V13 = 0x52
0x1c: JUMPI 0x52 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1d
[0x1d:0x21]
---
Predecessors: [0x0, 0xa]
Successors: [0x22]
---
0x1d JUMPDEST
0x1e CALLVALUE
0x1f PUSH1 0x2
0x21 JUMPI
---
0x1d: JUMPDEST 
0x1e: V14 = CALLVALUE
0x1f: V15 = 0x2
0x21: THROWI V14
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22
[0x22:0x4e]
---
Predecessors: [0x1d]
Successors: [0x4f, 0x69]
---
0x22 PUSH1 0x67
0x24 PUSH1 0x40
0x26 MLOAD
0x27 PUSH1 0x1
0x29 PUSH1 0xa0
0x2b PUSH1 0x2
0x2d EXP
0x2e SUB
0x2f CALLER
0x30 DUP2
0x31 AND
0x32 SWAP2
0x33 ADDRESS
0x34 SWAP1
0x35 SWAP2
0x36 AND
0x37 BALANCE
0x38 SWAP1
0x39 PUSH1 0x0
0x3b DUP2
0x3c DUP2
0x3d DUP2
0x3e DUP6
0x3f DUP8
0x40 PUSH2 0x8502
0x43 GAS
0x44 SUB
0x45 CALL
0x46 SWAP3
0x47 POP
0x48 POP
0x49 POP
0x4a ISZERO
0x4b ISZERO
0x4c PUSH1 0x69
0x4e JUMPI
---
0x22: V16 = 0x67
0x24: V17 = 0x40
0x26: V18 = M[0x40]
0x27: V19 = 0x1
0x29: V20 = 0xa0
0x2b: V21 = 0x2
0x2d: V22 = EXP 0x2 0xa0
0x2e: V23 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f: V24 = CALLER
0x31: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x33: V26 = ADDRESS
0x36: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x37: V28 = BALANCE V27
0x39: V29 = 0x0
0x40: V30 = 0x8502
0x43: V31 = GAS
0x44: V32 = SUB V31 0x8502
0x45: V33 = CALL V32 V25 V28 V18 0x0 V18 0x0
0x4a: V34 = ISZERO V33
0x4b: V35 = ISZERO V34
0x4c: V36 = 0x69
0x4e: JUMPI 0x69 V35
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x67]
Exit stack: [V10, 0x67]

================================

Block 0x4f
[0x4f:0x51]
---
Predecessors: [0x22]
Successors: []
---
0x4f PUSH1 0x2
0x51 JUMP
---
0x4f: V37 = 0x2
0x51: THROW 
---
Entry stack: [V10, 0x67]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x67]

================================

Block 0x52
[0x52:0x56]
---
Predecessors: [0xa]
Successors: [0x57]
---
0x52 JUMPDEST
0x53 CALLVALUE
0x54 PUSH1 0x2
0x56 JUMPI
---
0x52: JUMPDEST 
0x53: V38 = CALLVALUE
0x54: V39 = 0x2
0x56: THROWI V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x57
[0x57:0x66]
---
Predecessors: [0x52]
Successors: [0x6b]
---
0x57 PUSH1 0x6b
0x59 PUSH1 0x0
0x5b SLOAD
0x5c PUSH1 0x1
0x5e PUSH1 0xa0
0x60 PUSH1 0x2
0x62 EXP
0x63 SUB
0x64 AND
0x65 DUP2
0x66 JUMP
---
0x57: V40 = 0x6b
0x59: V41 = 0x0
0x5b: V42 = S[0x0]
0x5c: V43 = 0x1
0x5e: V44 = 0xa0
0x60: V45 = 0x2
0x62: V46 = EXP 0x2 0xa0
0x63: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x66: JUMP 0x6b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6b, V48]
Exit stack: [V10, 0x6b, V48]

================================

Block 0x67
[0x67:0x68]
---
Predecessors: [0x69]
Successors: []
---
0x67 JUMPDEST
0x68 STOP
---
0x67: JUMPDEST 
0x68: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x69
[0x69:0x6a]
---
Predecessors: [0x22]
Successors: [0x67]
---
0x69 JUMPDEST
0x6a JUMP
---
0x69: JUMPDEST 
0x6a: JUMP 0x67
---
Entry stack: [V10, 0x67]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x87]
---
Predecessors: [0x57]
Successors: []
---
0x6b JUMPDEST
0x6c PUSH1 0x40
0x6e DUP1
0x6f MLOAD
0x70 PUSH1 0x1
0x72 PUSH1 0xa0
0x74 PUSH1 0x2
0x76 EXP
0x77 SUB
0x78 SWAP3
0x79 SWAP1
0x7a SWAP3
0x7b AND
0x7c DUP3
0x7d MSTORE
0x7e MLOAD
0x7f SWAP1
0x80 DUP2
0x81 SWAP1
0x82 SUB
0x83 PUSH1 0x20
0x85 ADD
0x86 SWAP1
0x87 RETURN
---
0x6b: JUMPDEST 
0x6c: V49 = 0x40
0x6f: V50 = M[0x40]
0x70: V51 = 0x1
0x72: V52 = 0xa0
0x74: V53 = 0x2
0x76: V54 = EXP 0x2 0xa0
0x77: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x7d: M[V50] = V56
0x7e: V57 = M[0x40]
0x82: V58 = SUB V50 V57
0x83: V59 = 0x20
0x85: V60 = ADD 0x20 V58
0x87: RETURN V57 V60
---
Entry stack: [V10, 0x6b, V48]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x6b]

================================

Function 0:
Public function signature: 0xca325469
Entry block: 0x52
Exit block: 0x6b
Body: 0x52, 0x57, 0x6b

Function 1:
Public fallback function
Entry block: 0x1d
Exit block: 0x67
Body: 0x1d, 0x22, 0x4f, 0x67, 0x69

