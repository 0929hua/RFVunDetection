Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe3
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe3
0xa: JUMPI 0xe3 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x109]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x3c83302
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x109
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x3c83302
0x39: V12 = EQ V10 0x3c83302
0x3a: V13 = 0x109
0x3d: JUMPI 0x109 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x113]
---
0x3e DUP1
0x3f PUSH4 0xb6826ca
0x44 EQ
0x45 PUSH2 0x113
0x48 JUMPI
---
0x3f: V14 = 0xb6826ca
0x44: V15 = EQ 0xb6826ca V10
0x45: V16 = 0x113
0x48: JUMPI 0x113 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x125]
---
0x49 DUP1
0x4a PUSH4 0xf24f5c8
0x4f EQ
0x50 PUSH2 0x125
0x53 JUMPI
---
0x4a: V17 = 0xf24f5c8
0x4f: V18 = EQ 0xf24f5c8 V10
0x50: V19 = 0x125
0x53: JUMPI 0x125 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x146]
---
0x54 DUP1
0x55 PUSH4 0x36746413
0x5a EQ
0x5b PUSH2 0x146
0x5e JUMPI
---
0x55: V20 = 0x36746413
0x5a: V21 = EQ 0x36746413 V10
0x5b: V22 = 0x146
0x5e: JUMPI 0x146 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x158]
---
0x5f DUP1
0x60 PUSH4 0x45cf093a
0x65 EQ
0x66 PUSH2 0x158
0x69 JUMPI
---
0x60: V23 = 0x45cf093a
0x65: V24 = EQ 0x45cf093a V10
0x66: V25 = 0x158
0x69: JUMPI 0x158 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x17a]
---
0x6a DUP1
0x6b PUSH4 0x6046d718
0x70 EQ
0x71 PUSH2 0x17a
0x74 JUMPI
---
0x6b: V26 = 0x6046d718
0x70: V27 = EQ 0x6046d718 V10
0x71: V28 = 0x17a
0x74: JUMPI 0x17a V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1a4]
---
0x75 DUP1
0x76 PUSH4 0x797d8b85
0x7b EQ
0x7c PUSH2 0x1a4
0x7f JUMPI
---
0x76: V29 = 0x797d8b85
0x7b: V30 = EQ 0x797d8b85 V10
0x7c: V31 = 0x1a4
0x7f: JUMPI 0x1a4 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1c6]
---
0x80 DUP1
0x81 PUSH4 0x83197ef0
0x86 EQ
0x87 PUSH2 0x1c6
0x8a JUMPI
---
0x81: V32 = 0x83197ef0
0x86: V33 = EQ 0x83197ef0 V10
0x87: V34 = 0x1c6
0x8a: JUMPI 0x1c6 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x1d8]
---
0x8b DUP1
0x8c PUSH4 0x8ac2c680
0x91 EQ
0x92 PUSH2 0x1d8
0x95 JUMPI
---
0x8c: V35 = 0x8ac2c680
0x91: V36 = EQ 0x8ac2c680 V10
0x92: V37 = 0x1d8
0x95: JUMPI 0x1d8 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x1fa]
---
0x96 DUP1
0x97 PUSH4 0x8ca17995
0x9c EQ
0x9d PUSH2 0x1fa
0xa0 JUMPI
---
0x97: V38 = 0x8ca17995
0x9c: V39 = EQ 0x8ca17995 V10
0x9d: V40 = 0x1fa
0xa0: JUMPI 0x1fa V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x20f]
---
0xa1 DUP1
0xa2 PUSH4 0x8da5cb5b
0xa7 EQ
0xa8 PUSH2 0x20f
0xab JUMPI
---
0xa2: V41 = 0x8da5cb5b
0xa7: V42 = EQ 0x8da5cb5b V10
0xa8: V43 = 0x20f
0xab: JUMPI 0x20f V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x23b]
---
0xac DUP1
0xad PUSH4 0xa442414f
0xb2 EQ
0xb3 PUSH2 0x23b
0xb6 JUMPI
---
0xad: V44 = 0xa442414f
0xb2: V45 = EQ 0xa442414f V10
0xb3: V46 = 0x23b
0xb6: JUMPI 0x23b V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x25d]
---
0xb7 DUP1
0xb8 PUSH4 0xba7ed2ff
0xbd EQ
0xbe PUSH2 0x25d
0xc1 JUMPI
---
0xb8: V47 = 0xba7ed2ff
0xbd: V48 = EQ 0xba7ed2ff V10
0xbe: V49 = 0x25d
0xc1: JUMPI 0x25d V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x272]
---
0xc2 DUP1
0xc3 PUSH4 0xc3f1a710
0xc8 EQ
0xc9 PUSH2 0x272
0xcc JUMPI
---
0xc3: V50 = 0xc3f1a710
0xc8: V51 = EQ 0xc3f1a710 V10
0xc9: V52 = 0x272
0xcc: JUMPI 0x272 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x294]
---
0xcd DUP1
0xce PUSH4 0xe8b5e51f
0xd3 EQ
0xd4 PUSH2 0x294
0xd7 JUMPI
---
0xce: V53 = 0xe8b5e51f
0xd3: V54 = EQ 0xe8b5e51f V10
0xd4: V55 = 0x294
0xd7: JUMPI 0x294 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x29e]
---
0xd8 DUP1
0xd9 PUSH4 0xf2fde38b
0xde EQ
0xdf PUSH2 0x29e
0xe2 JUMPI
---
0xd9: V56 = 0xf2fde38b
0xde: V57 = EQ 0xf2fde38b V10
0xdf: V58 = 0x29e
0xe2: JUMPI 0x29e V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0x0, 0xd8]
Successors: [0xe7]
---
0xe3 JUMPDEST
0xe4 PUSH2 0x107
---
0xe3: JUMPDEST 
0xe4: V59 = 0x107
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V10, 0x107]

================================

Block 0xe7
[0xe7:0xfd]
---
Predecessors: [0xe3]
Successors: [0xfe, 0x103]
---
0xe7 JUMPDEST
0xe8 PUSH1 0x0
0xea SLOAD
0xeb CALLER
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 SWAP1
0xf5 DUP2
0xf6 AND
0xf7 SWAP2
0xf8 AND
0xf9 EQ
0xfa PUSH2 0x103
0xfd JUMPI
---
0xe7: JUMPDEST 
0xe8: V60 = 0x0
0xea: V61 = S[0x0]
0xeb: V62 = CALLER
0xec: V63 = 0x1
0xee: V64 = 0xa0
0xf0: V65 = 0x2
0xf2: V66 = EXP 0x2 0xa0
0xf3: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf6: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xf8: V69 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xf9: V70 = EQ V69 V68
0xfa: V71 = 0x103
0xfd: JUMPI 0x103 V70
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0xfe
[0xfe:0x102]
---
Predecessors: [0xe7]
Successors: []
---
0xfe PUSH1 0x0
0x100 PUSH1 0x0
0x102 REVERT
---
0xfe: V72 = 0x0
0x100: V73 = 0x0
0x102: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x103
[0x103:0x103]
---
Predecessors: [0xe7, 0x6fd]
Successors: [0x104]
---
0x103 JUMPDEST
---
0x103: JUMPDEST 
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x104
[0x104:0x104]
---
Predecessors: [0x103]
Successors: [0x105]
---
0x104 JUMPDEST
---
0x104: JUMPDEST 
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x105
[0x105:0x106]
---
Predecessors: [0x104]
Successors: [0x107]
---
0x105 JUMPDEST
0x106 JUMP
---
0x105: JUMPDEST 
0x106: JUMP 0x107
---
Entry stack: [V10, 0x107]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: [0x105, 0x2e2, 0x3bf, 0x485, 0x496, 0x53e, 0x6dd, 0x73a, 0x798]
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0xb]
Successors: [0x2bc]
---
0x109 JUMPDEST
0x10a PUSH2 0x107
0x10d PUSH2 0x2bc
0x110 JUMP
---
0x109: JUMPDEST 
0x10a: V74 = 0x107
0x10d: V75 = 0x2bc
0x110: JUMP 0x2bc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V10, 0x107]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: []
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x3e]
Successors: [0x11a, 0x11b]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11b
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V76 = CALLVALUE
0x115: V77 = ISZERO V76
0x116: V78 = 0x11b
0x119: JUMPI 0x11b V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11a
[0x11a:0x11a]
---
Predecessors: [0x113]
Successors: []
---
0x11a INVALID
---
0x11a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x113]
Successors: [0x2e4]
---
0x11b JUMPDEST
0x11c PUSH2 0x107
0x11f PUSH2 0x2e4
0x122 JUMP
---
0x11b: JUMPDEST 
0x11c: V79 = 0x107
0x11f: V80 = 0x2e4
0x122: JUMP 0x2e4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V10, 0x107]

================================

Block 0x123
[0x123:0x124]
---
Predecessors: []
Successors: []
---
0x123 JUMPDEST
0x124 STOP
---
0x123: JUMPDEST 
0x124: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x125
[0x125:0x12b]
---
Predecessors: [0x49]
Successors: [0x12c, 0x12d]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 ISZERO
0x128 PUSH2 0x12d
0x12b JUMPI
---
0x125: JUMPDEST 
0x126: V81 = CALLVALUE
0x127: V82 = ISZERO V81
0x128: V83 = 0x12d
0x12b: JUMPI 0x12d V82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12c
[0x12c:0x12c]
---
Predecessors: [0x125]
Successors: []
---
0x12c INVALID
---
0x12c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12d
[0x12d:0x143]
---
Predecessors: [0x125]
Successors: [0x3c2]
---
0x12d JUMPDEST
0x12e PUSH2 0x107
0x131 PUSH1 0x1
0x133 PUSH1 0xa0
0x135 PUSH1 0x2
0x137 EXP
0x138 SUB
0x139 PUSH1 0x4
0x13b CALLDATALOAD
0x13c AND
0x13d PUSH1 0x24
0x13f CALLDATALOAD
0x140 PUSH2 0x3c2
0x143 JUMP
---
0x12d: JUMPDEST 
0x12e: V84 = 0x107
0x131: V85 = 0x1
0x133: V86 = 0xa0
0x135: V87 = 0x2
0x137: V88 = EXP 0x2 0xa0
0x138: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V90 = 0x4
0x13b: V91 = CALLDATALOAD 0x4
0x13c: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x13d: V93 = 0x24
0x13f: V94 = CALLDATALOAD 0x24
0x140: V95 = 0x3c2
0x143: JUMP 0x3c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107, V92, V94]
Exit stack: [V10, 0x107, V92, V94]

================================

Block 0x144
[0x144:0x145]
---
Predecessors: []
Successors: []
---
0x144 JUMPDEST
0x145 STOP
---
0x144: JUMPDEST 
0x145: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x146
[0x146:0x14c]
---
Predecessors: [0x54]
Successors: [0x14d, 0x14e]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 ISZERO
0x149 PUSH2 0x14e
0x14c JUMPI
---
0x146: JUMPDEST 
0x147: V96 = CALLVALUE
0x148: V97 = ISZERO V96
0x149: V98 = 0x14e
0x14c: JUMPI 0x14e V97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14d
[0x14d:0x14d]
---
Predecessors: [0x146]
Successors: []
---
0x14d INVALID
---
0x14d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x146]
Successors: [0x489]
---
0x14e JUMPDEST
0x14f PUSH2 0x107
0x152 PUSH2 0x489
0x155 JUMP
---
0x14e: JUMPDEST 
0x14f: V99 = 0x107
0x152: V100 = 0x489
0x155: JUMP 0x489
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V10, 0x107]

================================

Block 0x156
[0x156:0x157]
---
Predecessors: []
Successors: []
---
0x156 JUMPDEST
0x157 STOP
---
0x156: JUMPDEST 
0x157: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x158
[0x158:0x15e]
---
Predecessors: [0x5f]
Successors: [0x15f, 0x160]
---
0x158 JUMPDEST
0x159 CALLVALUE
0x15a ISZERO
0x15b PUSH2 0x160
0x15e JUMPI
---
0x158: JUMPDEST 
0x159: V101 = CALLVALUE
0x15a: V102 = ISZERO V101
0x15b: V103 = 0x160
0x15e: JUMPI 0x160 V102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15f
[0x15f:0x15f]
---
Predecessors: [0x158]
Successors: []
---
0x15f INVALID
---
0x15f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x160
[0x160:0x167]
---
Predecessors: [0x158]
Successors: [0x498]
---
0x160 JUMPDEST
0x161 PUSH2 0x168
0x164 PUSH2 0x498
0x167 JUMP
---
0x160: JUMPDEST 
0x161: V104 = 0x168
0x164: V105 = 0x498
0x167: JUMP 0x498
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V10, 0x168]

================================

Block 0x168
[0x168:0x179]
---
Predecessors: [0x498, 0x5a1, 0x5d0, 0x6b4, 0x6fa]
Successors: []
---
0x168 JUMPDEST
0x169 PUSH1 0x40
0x16b DUP1
0x16c MLOAD
0x16d SWAP2
0x16e DUP3
0x16f MSTORE
0x170 MLOAD
0x171 SWAP1
0x172 DUP2
0x173 SWAP1
0x174 SUB
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP1
0x179 RETURN
---
0x168: JUMPDEST 
0x169: V106 = 0x40
0x16c: V107 = M[0x40]
0x16f: M[V107] = S0
0x170: V108 = M[0x40]
0x174: V109 = SUB V107 V108
0x175: V110 = 0x20
0x177: V111 = ADD 0x20 V109
0x179: RETURN V108 V111
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x17a
[0x17a:0x180]
---
Predecessors: [0x6a]
Successors: [0x181, 0x182]
---
0x17a JUMPDEST
0x17b CALLVALUE
0x17c ISZERO
0x17d PUSH2 0x182
0x180 JUMPI
---
0x17a: JUMPDEST 
0x17b: V112 = CALLVALUE
0x17c: V113 = ISZERO V112
0x17d: V114 = 0x182
0x180: JUMPI 0x182 V113
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x181
[0x181:0x181]
---
Predecessors: [0x17a]
Successors: []
---
0x181 INVALID
---
0x181: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x182
[0x182:0x1a1]
---
Predecessors: [0x17a]
Successors: [0x49e]
---
0x182 JUMPDEST
0x183 PUSH2 0x107
0x186 PUSH1 0x4
0x188 CALLDATALOAD
0x189 PUSH1 0x24
0x18b CALLDATALOAD
0x18c PUSH1 0x1
0x18e PUSH1 0xa0
0x190 PUSH1 0x2
0x192 EXP
0x193 SUB
0x194 PUSH1 0x44
0x196 CALLDATALOAD
0x197 DUP2
0x198 AND
0x199 SWAP1
0x19a PUSH1 0x64
0x19c CALLDATALOAD
0x19d AND
0x19e PUSH2 0x49e
0x1a1 JUMP
---
0x182: JUMPDEST 
0x183: V115 = 0x107
0x186: V116 = 0x4
0x188: V117 = CALLDATALOAD 0x4
0x189: V118 = 0x24
0x18b: V119 = CALLDATALOAD 0x24
0x18c: V120 = 0x1
0x18e: V121 = 0xa0
0x190: V122 = 0x2
0x192: V123 = EXP 0x2 0xa0
0x193: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V125 = 0x44
0x196: V126 = CALLDATALOAD 0x44
0x198: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x19a: V128 = 0x64
0x19c: V129 = CALLDATALOAD 0x64
0x19d: V130 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V131 = 0x49e
0x1a1: JUMP 0x49e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107, V117, V119, V127, V130]
Exit stack: [V10, 0x107, V117, V119, V127, V130]

================================

Block 0x1a2
[0x1a2:0x1a3]
---
Predecessors: []
Successors: []
---
0x1a2 JUMPDEST
0x1a3 STOP
---
0x1a2: JUMPDEST 
0x1a3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x75]
Successors: [0x1ab, 0x1ac]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1ac
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V132 = CALLVALUE
0x1a6: V133 = ISZERO V132
0x1a7: V134 = 0x1ac
0x1aa: JUMPI 0x1ac V133
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ab
[0x1ab:0x1ab]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab INVALID
---
0x1ab: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ac
[0x1ac:0x1b3]
---
Predecessors: [0x1a4]
Successors: [0x544]
---
0x1ac JUMPDEST
0x1ad PUSH2 0x168
0x1b0 PUSH2 0x544
0x1b3 JUMP
---
0x1ac: JUMPDEST 
0x1ad: V135 = 0x168
0x1b0: V136 = 0x544
0x1b3: JUMP 0x544
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V10, 0x168]

================================

Block 0x1b4
[0x1b4:0x1c5]
---
Predecessors: []
Successors: []
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x40
0x1b7 DUP1
0x1b8 MLOAD
0x1b9 SWAP2
0x1ba DUP3
0x1bb MSTORE
0x1bc MLOAD
0x1bd SWAP1
0x1be DUP2
0x1bf SWAP1
0x1c0 SUB
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP1
0x1c5 RETURN
---
0x1b4: JUMPDEST 
0x1b5: V137 = 0x40
0x1b8: V138 = M[0x40]
0x1bb: M[V138] = S0
0x1bc: V139 = M[0x40]
0x1c0: V140 = SUB V138 V139
0x1c1: V141 = 0x20
0x1c3: V142 = ADD 0x20 V140
0x1c5: RETURN V139 V142
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1c6
[0x1c6:0x1cc]
---
Predecessors: [0x80]
Successors: [0x1cd, 0x1ce]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 ISZERO
0x1c9 PUSH2 0x1ce
0x1cc JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V143 = CALLVALUE
0x1c8: V144 = ISZERO V143
0x1c9: V145 = 0x1ce
0x1cc: JUMPI 0x1ce V144
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cd
[0x1cd:0x1cd]
---
Predecessors: [0x1c6]
Successors: []
---
0x1cd INVALID
---
0x1cd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x1c6]
Successors: [0x5a5]
---
0x1ce JUMPDEST
0x1cf PUSH2 0x107
0x1d2 PUSH2 0x5a5
0x1d5 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V146 = 0x107
0x1d2: V147 = 0x5a5
0x1d5: JUMP 0x5a5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V10, 0x107]

================================

Block 0x1d6
[0x1d6:0x1d7]
---
Predecessors: []
Successors: []
---
0x1d6 JUMPDEST
0x1d7 STOP
---
0x1d6: JUMPDEST 
0x1d7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d8
[0x1d8:0x1de]
---
Predecessors: [0x8b]
Successors: [0x1df, 0x1e0]
---
0x1d8 JUMPDEST
0x1d9 CALLVALUE
0x1da ISZERO
0x1db PUSH2 0x1e0
0x1de JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V148 = CALLVALUE
0x1da: V149 = ISZERO V148
0x1db: V150 = 0x1e0
0x1de: JUMPI 0x1e0 V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1df
[0x1df:0x1df]
---
Predecessors: [0x1d8]
Successors: []
---
0x1df INVALID
---
0x1df: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e0
[0x1e0:0x1e7]
---
Predecessors: [0x1d8]
Successors: [0x5d0]
---
0x1e0 JUMPDEST
0x1e1 PUSH2 0x168
0x1e4 PUSH2 0x5d0
0x1e7 JUMP
---
0x1e0: JUMPDEST 
0x1e1: V151 = 0x168
0x1e4: V152 = 0x5d0
0x1e7: JUMP 0x5d0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V10, 0x168]

================================

Block 0x1e8
[0x1e8:0x1f9]
---
Predecessors: []
Successors: []
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x40
0x1eb DUP1
0x1ec MLOAD
0x1ed SWAP2
0x1ee DUP3
0x1ef MSTORE
0x1f0 MLOAD
0x1f1 SWAP1
0x1f2 DUP2
0x1f3 SWAP1
0x1f4 SUB
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 SWAP1
0x1f9 RETURN
---
0x1e8: JUMPDEST 
0x1e9: V153 = 0x40
0x1ec: V154 = M[0x40]
0x1ef: M[V154] = S0
0x1f0: V155 = M[0x40]
0x1f4: V156 = SUB V154 V155
0x1f5: V157 = 0x20
0x1f7: V158 = ADD 0x20 V156
0x1f9: RETURN V155 V158
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1fa
[0x1fa:0x200]
---
Predecessors: [0x96]
Successors: [0x201, 0x202]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0x202
0x200 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V159 = CALLVALUE
0x1fc: V160 = ISZERO V159
0x1fd: V161 = 0x202
0x200: JUMPI 0x202 V160
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x201
[0x201:0x201]
---
Predecessors: [0x1fa]
Successors: []
---
0x201 INVALID
---
0x201: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x202
[0x202:0x20c]
---
Predecessors: [0x1fa]
Successors: [0x5d6]
---
0x202 JUMPDEST
0x203 PUSH2 0x107
0x206 PUSH1 0x4
0x208 CALLDATALOAD
0x209 PUSH2 0x5d6
0x20c JUMP
---
0x202: JUMPDEST 
0x203: V162 = 0x107
0x206: V163 = 0x4
0x208: V164 = CALLDATALOAD 0x4
0x209: V165 = 0x5d6
0x20c: JUMP 0x5d6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107, V164]
Exit stack: [V10, 0x107, V164]

================================

Block 0x20d
[0x20d:0x20e]
---
Predecessors: []
Successors: []
---
0x20d JUMPDEST
0x20e STOP
---
0x20d: JUMPDEST 
0x20e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20f
[0x20f:0x215]
---
Predecessors: [0xa1]
Successors: [0x216, 0x217]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 ISZERO
0x212 PUSH2 0x217
0x215 JUMPI
---
0x20f: JUMPDEST 
0x210: V166 = CALLVALUE
0x211: V167 = ISZERO V166
0x212: V168 = 0x217
0x215: JUMPI 0x217 V167
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x216
[0x216:0x216]
---
Predecessors: [0x20f]
Successors: []
---
0x216 INVALID
---
0x216: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x217
[0x217:0x21e]
---
Predecessors: [0x20f]
Successors: [0x6a5]
---
0x217 JUMPDEST
0x218 PUSH2 0x21f
0x21b PUSH2 0x6a5
0x21e JUMP
---
0x217: JUMPDEST 
0x218: V169 = 0x21f
0x21b: V170 = 0x6a5
0x21e: JUMP 0x6a5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x21f]
Exit stack: [V10, 0x21f]

================================

Block 0x21f
[0x21f:0x23a]
---
Predecessors: [0x6a5]
Successors: []
---
0x21f JUMPDEST
0x220 PUSH1 0x40
0x222 DUP1
0x223 MLOAD
0x224 PUSH1 0x1
0x226 PUSH1 0xa0
0x228 PUSH1 0x2
0x22a EXP
0x22b SUB
0x22c SWAP1
0x22d SWAP3
0x22e AND
0x22f DUP3
0x230 MSTORE
0x231 MLOAD
0x232 SWAP1
0x233 DUP2
0x234 SWAP1
0x235 SUB
0x236 PUSH1 0x20
0x238 ADD
0x239 SWAP1
0x23a RETURN
---
0x21f: JUMPDEST 
0x220: V171 = 0x40
0x223: V172 = M[0x40]
0x224: V173 = 0x1
0x226: V174 = 0xa0
0x228: V175 = 0x2
0x22a: V176 = EXP 0x2 0xa0
0x22b: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V178 = AND V554 0xffffffffffffffffffffffffffffffffffffffff
0x230: M[V172] = V178
0x231: V179 = M[0x40]
0x235: V180 = SUB V172 V179
0x236: V181 = 0x20
0x238: V182 = ADD 0x20 V180
0x23a: RETURN V179 V182
---
Entry stack: [V10, 0x21f, V554]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x21f]

================================

Block 0x23b
[0x23b:0x241]
---
Predecessors: [0xac]
Successors: [0x242, 0x243]
---
0x23b JUMPDEST
0x23c CALLVALUE
0x23d ISZERO
0x23e PUSH2 0x243
0x241 JUMPI
---
0x23b: JUMPDEST 
0x23c: V183 = CALLVALUE
0x23d: V184 = ISZERO V183
0x23e: V185 = 0x243
0x241: JUMPI 0x243 V184
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x242
[0x242:0x242]
---
Predecessors: [0x23b]
Successors: []
---
0x242 INVALID
---
0x242: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x243
[0x243:0x24a]
---
Predecessors: [0x23b]
Successors: [0x6b4]
---
0x243 JUMPDEST
0x244 PUSH2 0x168
0x247 PUSH2 0x6b4
0x24a JUMP
---
0x243: JUMPDEST 
0x244: V186 = 0x168
0x247: V187 = 0x6b4
0x24a: JUMP 0x6b4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V10, 0x168]

================================

Block 0x24b
[0x24b:0x25c]
---
Predecessors: []
Successors: []
---
0x24b JUMPDEST
0x24c PUSH1 0x40
0x24e DUP1
0x24f MLOAD
0x250 SWAP2
0x251 DUP3
0x252 MSTORE
0x253 MLOAD
0x254 SWAP1
0x255 DUP2
0x256 SWAP1
0x257 SUB
0x258 PUSH1 0x20
0x25a ADD
0x25b SWAP1
0x25c RETURN
---
0x24b: JUMPDEST 
0x24c: V188 = 0x40
0x24f: V189 = M[0x40]
0x252: M[V189] = S0
0x253: V190 = M[0x40]
0x257: V191 = SUB V189 V190
0x258: V192 = 0x20
0x25a: V193 = ADD 0x20 V191
0x25c: RETURN V190 V193
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25d
[0x25d:0x263]
---
Predecessors: [0xb7]
Successors: [0x264, 0x265]
---
0x25d JUMPDEST
0x25e CALLVALUE
0x25f ISZERO
0x260 PUSH2 0x265
0x263 JUMPI
---
0x25d: JUMPDEST 
0x25e: V194 = CALLVALUE
0x25f: V195 = ISZERO V194
0x260: V196 = 0x265
0x263: JUMPI 0x265 V195
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x264
[0x264:0x264]
---
Predecessors: [0x25d]
Successors: []
---
0x264 INVALID
---
0x264: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x265
[0x265:0x26f]
---
Predecessors: [0x25d]
Successors: [0x6ba]
---
0x265 JUMPDEST
0x266 PUSH2 0x107
0x269 PUSH1 0x4
0x26b CALLDATALOAD
0x26c PUSH2 0x6ba
0x26f JUMP
---
0x265: JUMPDEST 
0x266: V197 = 0x107
0x269: V198 = 0x4
0x26b: V199 = CALLDATALOAD 0x4
0x26c: V200 = 0x6ba
0x26f: JUMP 0x6ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107, V199]
Exit stack: [V10, 0x107, V199]

================================

Block 0x270
[0x270:0x271]
---
Predecessors: []
Successors: []
---
0x270 JUMPDEST
0x271 STOP
---
0x270: JUMPDEST 
0x271: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0xc2]
Successors: [0x279, 0x27a]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 PUSH2 0x27a
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V201 = CALLVALUE
0x274: V202 = ISZERO V201
0x275: V203 = 0x27a
0x278: JUMPI 0x27a V202
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x279
[0x279:0x279]
---
Predecessors: [0x272]
Successors: []
---
0x279 INVALID
---
0x279: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27a
[0x27a:0x281]
---
Predecessors: [0x272]
Successors: [0x6e0]
---
0x27a JUMPDEST
0x27b PUSH2 0x168
0x27e PUSH2 0x6e0
0x281 JUMP
---
0x27a: JUMPDEST 
0x27b: V204 = 0x168
0x27e: V205 = 0x6e0
0x281: JUMP 0x6e0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V10, 0x168]

================================

Block 0x282
[0x282:0x293]
---
Predecessors: []
Successors: []
---
0x282 JUMPDEST
0x283 PUSH1 0x40
0x285 DUP1
0x286 MLOAD
0x287 SWAP2
0x288 DUP3
0x289 MSTORE
0x28a MLOAD
0x28b SWAP1
0x28c DUP2
0x28d SWAP1
0x28e SUB
0x28f PUSH1 0x20
0x291 ADD
0x292 SWAP1
0x293 RETURN
---
0x282: JUMPDEST 
0x283: V206 = 0x40
0x286: V207 = M[0x40]
0x289: M[V207] = S0
0x28a: V208 = M[0x40]
0x28e: V209 = SUB V207 V208
0x28f: V210 = 0x20
0x291: V211 = ADD 0x20 V209
0x293: RETURN V208 V211
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0xcd]
Successors: [0x6fd]
---
0x294 JUMPDEST
0x295 PUSH2 0x107
0x298 PUSH2 0x6fd
0x29b JUMP
---
0x294: JUMPDEST 
0x295: V212 = 0x107
0x298: V213 = 0x6fd
0x29b: JUMP 0x6fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V10, 0x107]

================================

Block 0x29c
[0x29c:0x29d]
---
Predecessors: []
Successors: []
---
0x29c JUMPDEST
0x29d STOP
---
0x29c: JUMPDEST 
0x29d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29e
[0x29e:0x2a4]
---
Predecessors: [0xd8]
Successors: [0x2a5, 0x2a6]
---
0x29e JUMPDEST
0x29f CALLVALUE
0x2a0 ISZERO
0x2a1 PUSH2 0x2a6
0x2a4 JUMPI
---
0x29e: JUMPDEST 
0x29f: V214 = CALLVALUE
0x2a0: V215 = ISZERO V214
0x2a1: V216 = 0x2a6
0x2a4: JUMPI 0x2a6 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a5
[0x2a5:0x2a5]
---
Predecessors: [0x29e]
Successors: []
---
0x2a5 INVALID
---
0x2a5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a6
[0x2a6:0x2b9]
---
Predecessors: [0x29e]
Successors: [0x73c]
---
0x2a6 JUMPDEST
0x2a7 PUSH2 0x107
0x2aa PUSH1 0x1
0x2ac PUSH1 0xa0
0x2ae PUSH1 0x2
0x2b0 EXP
0x2b1 SUB
0x2b2 PUSH1 0x4
0x2b4 CALLDATALOAD
0x2b5 AND
0x2b6 PUSH2 0x73c
0x2b9 JUMP
---
0x2a6: JUMPDEST 
0x2a7: V217 = 0x107
0x2aa: V218 = 0x1
0x2ac: V219 = 0xa0
0x2ae: V220 = 0x2
0x2b0: V221 = EXP 0x2 0xa0
0x2b1: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b2: V223 = 0x4
0x2b4: V224 = CALLDATALOAD 0x4
0x2b5: V225 = AND V224 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V226 = 0x73c
0x2b9: JUMP 0x73c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107, V225]
Exit stack: [V10, 0x107, V225]

================================

Block 0x2ba
[0x2ba:0x2bb]
---
Predecessors: []
Successors: []
---
0x2ba JUMPDEST
0x2bb STOP
---
0x2ba: JUMPDEST 
0x2bb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2bc
[0x2bc:0x2d2]
---
Predecessors: [0x109]
Successors: [0x2d3, 0x2d8]
---
0x2bc JUMPDEST
0x2bd PUSH1 0x0
0x2bf SLOAD
0x2c0 CALLER
0x2c1 PUSH1 0x1
0x2c3 PUSH1 0xa0
0x2c5 PUSH1 0x2
0x2c7 EXP
0x2c8 SUB
0x2c9 SWAP1
0x2ca DUP2
0x2cb AND
0x2cc SWAP2
0x2cd AND
0x2ce EQ
0x2cf PUSH2 0x2d8
0x2d2 JUMPI
---
0x2bc: JUMPDEST 
0x2bd: V227 = 0x0
0x2bf: V228 = S[0x0]
0x2c0: V229 = CALLER
0x2c1: V230 = 0x1
0x2c3: V231 = 0xa0
0x2c5: V232 = 0x2
0x2c7: V233 = EXP 0x2 0xa0
0x2c8: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cb: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x2cd: V236 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V237 = EQ V236 V235
0x2cf: V238 = 0x2d8
0x2d2: JUMPI 0x2d8 V237
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x2d3
[0x2d3:0x2d7]
---
Predecessors: [0x2bc]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 PUSH1 0x0
0x2d7 REVERT
---
0x2d3: V239 = 0x0
0x2d5: V240 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x2d8
[0x2d8:0x2e0]
---
Predecessors: [0x2bc]
Successors: [0x2e1]
---
0x2d8 JUMPDEST
0x2d9 PUSH1 0x4
0x2db DUP1
0x2dc SLOAD
0x2dd CALLVALUE
0x2de ADD
0x2df SWAP1
0x2e0 SSTORE
---
0x2d8: JUMPDEST 
0x2d9: V241 = 0x4
0x2dc: V242 = S[0x4]
0x2dd: V243 = CALLVALUE
0x2de: V244 = ADD V243 V242
0x2e0: S[0x4] = V244
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x2e1
[0x2e1:0x2e1]
---
Predecessors: [0x2d8]
Successors: [0x2e2]
---
0x2e1 JUMPDEST
---
0x2e1: JUMPDEST 
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x2e2
[0x2e2:0x2e3]
---
Predecessors: [0x2e1]
Successors: [0x107]
---
0x2e2 JUMPDEST
0x2e3 JUMP
---
0x2e2: JUMPDEST 
0x2e3: JUMP 0x107
---
Entry stack: [V10, 0x107]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e4
[0x2e4:0x2ed]
---
Predecessors: [0x11b]
Successors: [0x544]
---
0x2e4 JUMPDEST
0x2e5 PUSH1 0x0
0x2e7 PUSH2 0x2ee
0x2ea PUSH2 0x544
0x2ed JUMP
---
0x2e4: JUMPDEST 
0x2e5: V245 = 0x0
0x2e7: V246 = 0x2ee
0x2ea: V247 = 0x544
0x2ed: JUMP 0x544
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: [0x0, 0x2ee]
Exit stack: [V10, 0x107, 0x0, 0x2ee]

================================

Block 0x2ee
[0x2ee:0x2f7]
---
Predecessors: [0x5a1]
Successors: [0x2f8, 0x2fd]
---
0x2ee JUMPDEST
0x2ef SWAP1
0x2f0 POP
0x2f1 DUP1
0x2f2 ISZERO
0x2f3 ISZERO
0x2f4 PUSH2 0x2fd
0x2f7 JUMPI
---
0x2ee: JUMPDEST 
0x2f2: V248 = ISZERO S0
0x2f3: V249 = ISZERO V248
0x2f4: V250 = 0x2fd
0x2f7: JUMPI 0x2fd V249
---
Entry stack: [V10, 0x107, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x107, S0]

================================

Block 0x2f8
[0x2f8:0x2fc]
---
Predecessors: [0x2ee]
Successors: []
---
0x2f8 PUSH1 0x0
0x2fa PUSH1 0x0
0x2fc REVERT
---
0x2f8: V251 = 0x0
0x2fa: V252 = 0x0
0x2fc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S0]

================================

Block 0x2fd
[0x2fd:0x3ab]
---
Predecessors: [0x2ee]
Successors: [0x3ac, 0x3ad]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x4
0x300 DUP1
0x301 SLOAD
0x302 PUSH1 0x1
0x304 PUSH1 0xa0
0x306 PUSH1 0x2
0x308 EXP
0x309 SUB
0x30a CALLER
0x30b DUP2
0x30c AND
0x30d PUSH1 0x0
0x30f DUP2
0x310 DUP2
0x311 MSTORE
0x312 PUSH1 0x1
0x314 PUSH1 0x20
0x316 DUP2
0x317 SWAP1
0x318 MSTORE
0x319 PUSH1 0x40
0x31b DUP1
0x31c DUP4
0x31d SHA3
0x31e SWAP1
0x31f SWAP2
0x320 ADD
0x321 SWAP5
0x322 SWAP1
0x323 SWAP5
0x324 SSTORE
0x325 DUP1
0x326 SLOAD
0x327 DUP5
0x328 MLOAD
0x329 PUSH32 0x6046d71800000000000000000000000000000000000000000000000000000000
0x34a DUP2
0x34b MSTORE
0x34c SWAP6
0x34d DUP7
0x34e ADD
0x34f DUP8
0x350 SWAP1
0x351 MSTORE
0x352 PUSH32 0x4469766964656e64207061796d656e7400000000000000000000000000000000
0x373 PUSH1 0x24
0x375 DUP8
0x376 ADD
0x377 MSTORE
0x378 PUSH1 0x44
0x37a DUP7
0x37b ADD
0x37c SWAP3
0x37d SWAP1
0x37e SWAP3
0x37f MSTORE
0x380 SWAP1
0x381 DUP3
0x382 AND
0x383 PUSH1 0x64
0x385 DUP6
0x386 ADD
0x387 MSTORE
0x388 SWAP2
0x389 MLOAD
0x38a ADDRESS
0x38b SWAP1
0x38c SWAP2
0x38d AND
0x38e SWAP3
0x38f PUSH4 0x6046d718
0x394 SWAP3
0x395 PUSH1 0x84
0x397 DUP1
0x398 DUP4
0x399 ADD
0x39a SWAP4
0x39b SWAP2
0x39c SWAP3
0x39d DUP3
0x39e SWAP1
0x39f SUB
0x3a0 ADD
0x3a1 DUP2
0x3a2 DUP4
0x3a3 DUP8
0x3a4 DUP1
0x3a5 EXTCODESIZE
0x3a6 ISZERO
0x3a7 ISZERO
0x3a8 PUSH2 0x3ad
0x3ab JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V253 = 0x4
0x301: V254 = S[0x4]
0x302: V255 = 0x1
0x304: V256 = 0xa0
0x306: V257 = 0x2
0x308: V258 = EXP 0x2 0xa0
0x309: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30a: V260 = CALLER
0x30c: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x30d: V262 = 0x0
0x311: M[0x0] = V261
0x312: V263 = 0x1
0x314: V264 = 0x20
0x318: M[0x20] = 0x1
0x319: V265 = 0x40
0x31d: V266 = SHA3 0x0 0x40
0x320: V267 = ADD 0x1 V266
0x324: S[V267] = V254
0x326: V268 = S[0x0]
0x328: V269 = M[0x40]
0x329: V270 = 0x6046d71800000000000000000000000000000000000000000000000000000000
0x34b: M[V269] = 0x6046d71800000000000000000000000000000000000000000000000000000000
0x34e: V271 = ADD V269 0x4
0x351: M[V271] = S0
0x352: V272 = 0x4469766964656e64207061796d656e7400000000000000000000000000000000
0x373: V273 = 0x24
0x376: V274 = ADD V269 0x24
0x377: M[V274] = 0x4469766964656e64207061796d656e7400000000000000000000000000000000
0x378: V275 = 0x44
0x37b: V276 = ADD V269 0x44
0x37f: M[V276] = V261
0x382: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x383: V278 = 0x64
0x386: V279 = ADD V269 0x64
0x387: M[V279] = V277
0x389: V280 = M[0x40]
0x38a: V281 = ADDRESS
0x38d: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x38f: V283 = 0x6046d718
0x395: V284 = 0x84
0x399: V285 = ADD V269 0x84
0x39f: V286 = SUB V269 V280
0x3a0: V287 = ADD V286 0x84
0x3a5: V288 = EXTCODESIZE V282
0x3a6: V289 = ISZERO V288
0x3a7: V290 = ISZERO V289
0x3a8: V291 = 0x3ad
0x3ab: JUMPI 0x3ad V290
---
Entry stack: [V10, 0x107, S0]
Stack pops: 1
Stack additions: [S0, V282, 0x6046d718, V285, 0x0, V280, V287, V280, 0x0, V282]
Exit stack: [V10, 0x107, S0, V282, 0x6046d718, V285, 0x0, V280, V287, V280, 0x0, V282]

================================

Block 0x3ac
[0x3ac:0x3ac]
---
Predecessors: [0x2fd]
Successors: []
---
0x3ac INVALID
---
0x3ac: INVALID 
---
Entry stack: [V10, 0x107, S9, V282, 0x6046d718, V285, 0x0, V280, V287, V280, 0x0, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S9, V282, 0x6046d718, V285, 0x0, V280, V287, V280, 0x0, V282]

================================

Block 0x3ad
[0x3ad:0x3b9]
---
Predecessors: [0x2fd, 0x604]
Successors: [0x3ba, 0x3bb]
---
0x3ad JUMPDEST
0x3ae PUSH2 0x2c6
0x3b1 GAS
0x3b2 SUB
0x3b3 CALL
0x3b4 ISZERO
0x3b5 ISZERO
0x3b6 PUSH2 0x3bb
0x3b9 JUMPI
---
0x3ad: JUMPDEST 
0x3ae: V292 = 0x2c6
0x3b1: V293 = GAS
0x3b2: V294 = SUB V293 0x2c6
0x3b3: V295 = CALL V294 S0 0x0 S2 S3 S4 0x0
0x3b4: V296 = ISZERO V295
0x3b5: V297 = ISZERO V296
0x3b6: V298 = 0x3bb
0x3b9: JUMPI 0x3bb V297
---
Entry stack: [V10, 0x107, S9, S8, 0x6046d718, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x107, S9, S8, 0x6046d718, S6]

================================

Block 0x3ba
[0x3ba:0x3ba]
---
Predecessors: [0x3ad]
Successors: []
---
0x3ba INVALID
---
0x3ba: INVALID 
---
Entry stack: [V10, 0x107, S3, S2, 0x6046d718, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S3, S2, 0x6046d718, S0]

================================

Block 0x3bb
[0x3bb:0x3be]
---
Predecessors: [0x3ad, 0x690]
Successors: [0x3bf]
---
0x3bb JUMPDEST
0x3bc POP
0x3bd POP
0x3be POP
---
0x3bb: JUMPDEST 
---
Entry stack: [V10, 0x107, S3, S2, 0x6046d718, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x107, S3]

================================

Block 0x3bf
[0x3bf:0x3c1]
---
Predecessors: [0x3bb]
Successors: [0x107]
---
0x3bf JUMPDEST
0x3c0 POP
0x3c1 JUMP
---
0x3bf: JUMPDEST 
0x3c1: JUMP 0x107
---
Entry stack: [V10, 0x107, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c2
[0x3c2:0x3d8]
---
Predecessors: [0x12d]
Successors: [0x3d9, 0x3de]
---
0x3c2 JUMPDEST
0x3c3 PUSH1 0x0
0x3c5 SLOAD
0x3c6 CALLER
0x3c7 PUSH1 0x1
0x3c9 PUSH1 0xa0
0x3cb PUSH1 0x2
0x3cd EXP
0x3ce SUB
0x3cf SWAP1
0x3d0 DUP2
0x3d1 AND
0x3d2 SWAP2
0x3d3 AND
0x3d4 EQ
0x3d5 PUSH2 0x3de
0x3d8 JUMPI
---
0x3c2: JUMPDEST 
0x3c3: V299 = 0x0
0x3c5: V300 = S[0x0]
0x3c6: V301 = CALLER
0x3c7: V302 = 0x1
0x3c9: V303 = 0xa0
0x3cb: V304 = 0x2
0x3cd: V305 = EXP 0x2 0xa0
0x3ce: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d1: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x3d3: V308 = AND V300 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V309 = EQ V308 V307
0x3d5: V310 = 0x3de
0x3d8: JUMPI 0x3de V309
---
Entry stack: [V10, 0x107, V92, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V92, V94]

================================

Block 0x3d9
[0x3d9:0x3dd]
---
Predecessors: [0x3c2]
Successors: []
---
0x3d9 PUSH1 0x0
0x3db PUSH1 0x0
0x3dd REVERT
---
0x3d9: V311 = 0x0
0x3db: V312 = 0x0
0x3dd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107, V92, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V92, V94]

================================

Block 0x3de
[0x3de:0x470]
---
Predecessors: [0x3c2]
Successors: [0x471, 0x472]
---
0x3de JUMPDEST
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 SLOAD
0x3e3 PUSH1 0x40
0x3e5 DUP1
0x3e6 MLOAD
0x3e7 PUSH32 0x6046d71800000000000000000000000000000000000000000000000000000000
0x408 DUP2
0x409 MSTORE
0x40a PUSH1 0x4
0x40c DUP2
0x40d ADD
0x40e DUP6
0x40f SWAP1
0x410 MSTORE
0x411 PUSH32 0x4f776e6572207472616e73666572000000000000000000000000000000000000
0x432 PUSH1 0x24
0x434 DUP3
0x435 ADD
0x436 MSTORE
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f DUP7
0x440 DUP2
0x441 AND
0x442 PUSH1 0x44
0x444 DUP4
0x445 ADD
0x446 MSTORE
0x447 SWAP3
0x448 DUP4
0x449 AND
0x44a PUSH1 0x64
0x44c DUP3
0x44d ADD
0x44e MSTORE
0x44f SWAP1
0x450 MLOAD
0x451 ADDRESS
0x452 SWAP1
0x453 SWAP3
0x454 AND
0x455 SWAP3
0x456 PUSH4 0x6046d718
0x45b SWAP3
0x45c PUSH1 0x84
0x45e DUP1
0x45f DUP5
0x460 ADD
0x461 SWAP4
0x462 DUP3
0x463 SWAP1
0x464 SUB
0x465 ADD
0x466 DUP2
0x467 DUP4
0x468 DUP8
0x469 DUP1
0x46a EXTCODESIZE
0x46b ISZERO
0x46c ISZERO
0x46d PUSH2 0x472
0x470 JUMPI
---
0x3de: JUMPDEST 
0x3df: V313 = 0x0
0x3e2: V314 = S[0x0]
0x3e3: V315 = 0x40
0x3e6: V316 = M[0x40]
0x3e7: V317 = 0x6046d71800000000000000000000000000000000000000000000000000000000
0x409: M[V316] = 0x6046d71800000000000000000000000000000000000000000000000000000000
0x40a: V318 = 0x4
0x40d: V319 = ADD V316 0x4
0x410: M[V319] = V94
0x411: V320 = 0x4f776e6572207472616e73666572000000000000000000000000000000000000
0x432: V321 = 0x24
0x435: V322 = ADD V316 0x24
0x436: M[V322] = 0x4f776e6572207472616e73666572000000000000000000000000000000000000
0x437: V323 = 0x1
0x439: V324 = 0xa0
0x43b: V325 = 0x2
0x43d: V326 = EXP 0x2 0xa0
0x43e: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x442: V329 = 0x44
0x445: V330 = ADD V316 0x44
0x446: M[V330] = V328
0x449: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x44a: V332 = 0x64
0x44d: V333 = ADD V316 0x64
0x44e: M[V333] = V331
0x450: V334 = M[0x40]
0x451: V335 = ADDRESS
0x454: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x456: V337 = 0x6046d718
0x45c: V338 = 0x84
0x460: V339 = ADD V316 0x84
0x464: V340 = SUB V316 V334
0x465: V341 = ADD V340 0x84
0x46a: V342 = EXTCODESIZE V336
0x46b: V343 = ISZERO V342
0x46c: V344 = ISZERO V343
0x46d: V345 = 0x472
0x470: JUMPI 0x472 V344
---
Entry stack: [V10, 0x107, V92, V94]
Stack pops: 2
Stack additions: [S1, S0, V336, 0x6046d718, V339, 0x0, V334, V341, V334, 0x0, V336]
Exit stack: [V10, 0x107, V92, V94, V336, 0x6046d718, V339, 0x0, V334, V341, V334, 0x0, V336]

================================

Block 0x471
[0x471:0x471]
---
Predecessors: [0x3de]
Successors: []
---
0x471 INVALID
---
0x471: INVALID 
---
Entry stack: [V10, 0x107, V92, V94, V336, 0x6046d718, V339, 0x0, V334, V341, V334, 0x0, V336]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V92, V94, V336, 0x6046d718, V339, 0x0, V334, V341, V334, 0x0, V336]

================================

Block 0x472
[0x472:0x47e]
---
Predecessors: [0x3de]
Successors: [0x47f, 0x480]
---
0x472 JUMPDEST
0x473 PUSH2 0x2c6
0x476 GAS
0x477 SUB
0x478 CALL
0x479 ISZERO
0x47a ISZERO
0x47b PUSH2 0x480
0x47e JUMPI
---
0x472: JUMPDEST 
0x473: V346 = 0x2c6
0x476: V347 = GAS
0x477: V348 = SUB V347 0x2c6
0x478: V349 = CALL V348 V336 0x0 V334 V341 V334 0x0
0x479: V350 = ISZERO V349
0x47a: V351 = ISZERO V350
0x47b: V352 = 0x480
0x47e: JUMPI 0x480 V351
---
Entry stack: [V10, 0x107, V92, V94, V336, 0x6046d718, V339, 0x0, V334, V341, V334, 0x0, V336]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x107, V92, V94, V336, 0x6046d718, V339]

================================

Block 0x47f
[0x47f:0x47f]
---
Predecessors: [0x472]
Successors: []
---
0x47f INVALID
---
0x47f: INVALID 
---
Entry stack: [V10, 0x107, V92, V94, V336, 0x6046d718, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V92, V94, V336, 0x6046d718, V339]

================================

Block 0x480
[0x480:0x483]
---
Predecessors: [0x472]
Successors: [0x484]
---
0x480 JUMPDEST
0x481 POP
0x482 POP
0x483 POP
---
0x480: JUMPDEST 
---
Entry stack: [V10, 0x107, V92, V94, V336, 0x6046d718, V339]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x107, V92, V94]

================================

Block 0x484
[0x484:0x484]
---
Predecessors: [0x480]
Successors: [0x485]
---
0x484 JUMPDEST
---
0x484: JUMPDEST 
---
Entry stack: [V10, 0x107, V92, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V92, V94]

================================

Block 0x485
[0x485:0x488]
---
Predecessors: [0x484]
Successors: [0x107]
---
0x485 JUMPDEST
0x486 POP
0x487 POP
0x488 JUMP
---
0x485: JUMPDEST 
0x488: JUMP 0x107
---
Entry stack: [V10, 0x107, V92, V94]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x489
[0x489:0x495]
---
Predecessors: [0x14e]
Successors: [0x496]
---
0x489 JUMPDEST
0x48a PUSH8 0x58d15e176280000
0x493 PUSH1 0x2
0x495 SSTORE
---
0x489: JUMPDEST 
0x48a: V353 = 0x58d15e176280000
0x493: V354 = 0x2
0x495: S[0x2] = 0x58d15e176280000
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x496
[0x496:0x497]
---
Predecessors: [0x489]
Successors: [0x107]
---
0x496 JUMPDEST
0x497 JUMP
---
0x496: JUMPDEST 
0x497: JUMP 0x107
---
Entry stack: [V10, 0x107]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x498
[0x498:0x49d]
---
Predecessors: [0x160]
Successors: [0x168]
---
0x498 JUMPDEST
0x499 PUSH1 0x4
0x49b SLOAD
0x49c DUP2
0x49d JUMP
---
0x498: JUMPDEST 
0x499: V355 = 0x4
0x49b: V356 = S[0x4]
0x49d: JUMP 0x168
---
Entry stack: [V10, 0x168]
Stack pops: 1
Stack additions: [S0, V356]
Exit stack: [V10, 0x168, V356]

================================

Block 0x49e
[0x49e:0x4b9]
---
Predecessors: [0x182]
Successors: [0x4ba, 0x4bf]
---
0x49e JUMPDEST
0x49f ADDRESS
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 AND
0x4a9 CALLER
0x4aa PUSH1 0x1
0x4ac PUSH1 0xa0
0x4ae PUSH1 0x2
0x4b0 EXP
0x4b1 SUB
0x4b2 AND
0x4b3 EQ
0x4b4 ISZERO
0x4b5 ISZERO
0x4b6 PUSH2 0x4bf
0x4b9 JUMPI
---
0x49e: JUMPDEST 
0x49f: V357 = ADDRESS
0x4a0: V358 = 0x1
0x4a2: V359 = 0xa0
0x4a4: V360 = 0x2
0x4a6: V361 = EXP 0x2 0xa0
0x4a7: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a8: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x4a9: V364 = CALLER
0x4aa: V365 = 0x1
0x4ac: V366 = 0xa0
0x4ae: V367 = 0x2
0x4b0: V368 = EXP 0x2 0xa0
0x4b1: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b2: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x4b3: V371 = EQ V370 V363
0x4b4: V372 = ISZERO V371
0x4b5: V373 = ISZERO V372
0x4b6: V374 = 0x4bf
0x4b9: JUMPI 0x4bf V373
---
Entry stack: [V10, 0x107, V117, V119, V127, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V117, V119, V127, V130]

================================

Block 0x4ba
[0x4ba:0x4be]
---
Predecessors: [0x49e]
Successors: []
---
0x4ba PUSH1 0x0
0x4bc PUSH1 0x0
0x4be REVERT
---
0x4ba: V375 = 0x0
0x4bc: V376 = 0x0
0x4be: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107, V117, V119, V127, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V117, V119, V127, V130]

================================

Block 0x4bf
[0x4bf:0x4e6]
---
Predecessors: [0x49e]
Successors: [0x4e7, 0x4ec]
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 PUSH1 0x1
0x4c5 PUSH1 0xa0
0x4c7 PUSH1 0x2
0x4c9 EXP
0x4ca SUB
0x4cb DUP4
0x4cc AND
0x4cd SWAP1
0x4ce DUP6
0x4cf SWAP1
0x4d0 PUSH1 0x0
0x4d2 DUP2
0x4d3 DUP2
0x4d4 DUP2
0x4d5 DUP6
0x4d6 DUP8
0x4d7 PUSH2 0x8796
0x4da GAS
0x4db SUB
0x4dc CALL
0x4dd SWAP3
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 ISZERO
0x4e2 ISZERO
0x4e3 PUSH2 0x4ec
0x4e6 JUMPI
---
0x4bf: JUMPDEST 
0x4c0: V377 = 0x40
0x4c2: V378 = M[0x40]
0x4c3: V379 = 0x1
0x4c5: V380 = 0xa0
0x4c7: V381 = 0x2
0x4c9: V382 = EXP 0x2 0xa0
0x4ca: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V384 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V385 = 0x0
0x4d7: V386 = 0x8796
0x4da: V387 = GAS
0x4db: V388 = SUB V387 0x8796
0x4dc: V389 = CALL V388 V384 V117 V378 0x0 V378 0x0
0x4e1: V390 = ISZERO V389
0x4e2: V391 = ISZERO V390
0x4e3: V392 = 0x4ec
0x4e6: JUMPI 0x4ec V391
---
Entry stack: [V10, 0x107, V117, V119, V127, V130]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x107, V117, V119, V127, V130]

================================

Block 0x4e7
[0x4e7:0x4eb]
---
Predecessors: [0x4bf]
Successors: []
---
0x4e7 PUSH1 0x0
0x4e9 PUSH1 0x0
0x4eb REVERT
---
0x4e7: V393 = 0x0
0x4e9: V394 = 0x0
0x4eb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107, V117, V119, V127, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V117, V119, V127, V130]

================================

Block 0x4ec
[0x4ec:0x53c]
---
Predecessors: [0x4bf]
Successors: [0x53d]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x40
0x4ef DUP1
0x4f0 MLOAD
0x4f1 DUP6
0x4f2 DUP2
0x4f3 MSTORE
0x4f4 PUSH1 0x20
0x4f6 DUP2
0x4f7 ADD
0x4f8 DUP6
0x4f9 SWAP1
0x4fa MSTORE
0x4fb PUSH1 0x1
0x4fd PUSH1 0xa0
0x4ff PUSH1 0x2
0x501 EXP
0x502 SUB
0x503 DUP1
0x504 DUP6
0x505 AND
0x506 DUP3
0x507 DUP5
0x508 ADD
0x509 MSTORE
0x50a DUP4
0x50b AND
0x50c PUSH1 0x60
0x50e DUP3
0x50f ADD
0x510 MSTORE
0x511 SWAP1
0x512 MLOAD
0x513 PUSH32 0xd96be9506f4f0aa501f724a2582d2bfd7649cc73e9fc7c2917fb4f5a60bee431
0x534 SWAP2
0x535 DUP2
0x536 SWAP1
0x537 SUB
0x538 PUSH1 0x80
0x53a ADD
0x53b SWAP1
0x53c LOG1
---
0x4ec: JUMPDEST 
0x4ed: V395 = 0x40
0x4f0: V396 = M[0x40]
0x4f3: M[V396] = V117
0x4f4: V397 = 0x20
0x4f7: V398 = ADD V396 0x20
0x4fa: M[V398] = V119
0x4fb: V399 = 0x1
0x4fd: V400 = 0xa0
0x4ff: V401 = 0x2
0x501: V402 = EXP 0x2 0xa0
0x502: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x505: V404 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x508: V405 = ADD 0x40 V396
0x509: M[V405] = V404
0x50b: V406 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x50c: V407 = 0x60
0x50f: V408 = ADD V396 0x60
0x510: M[V408] = V406
0x512: V409 = M[0x40]
0x513: V410 = 0xd96be9506f4f0aa501f724a2582d2bfd7649cc73e9fc7c2917fb4f5a60bee431
0x537: V411 = SUB V396 V409
0x538: V412 = 0x80
0x53a: V413 = ADD 0x80 V411
0x53c: LOG V409 V413 0xd96be9506f4f0aa501f724a2582d2bfd7649cc73e9fc7c2917fb4f5a60bee431
---
Entry stack: [V10, 0x107, V117, V119, V127, V130]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x107, V117, V119, V127, V130]

================================

Block 0x53d
[0x53d:0x53d]
---
Predecessors: [0x4ec]
Successors: [0x53e]
---
0x53d JUMPDEST
---
0x53d: JUMPDEST 
---
Entry stack: [V10, 0x107, V117, V119, V127, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V117, V119, V127, V130]

================================

Block 0x53e
[0x53e:0x543]
---
Predecessors: [0x53d]
Successors: [0x107]
---
0x53e JUMPDEST
0x53f POP
0x540 POP
0x541 POP
0x542 POP
0x543 JUMP
---
0x53e: JUMPDEST 
0x543: JUMP 0x107
---
Entry stack: [V10, 0x107, V117, V119, V127, V130]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x544
[0x544:0x56b]
---
Predecessors: [0x1ac, 0x2e4]
Successors: [0x56c, 0x571]
---
0x544 JUMPDEST
0x545 PUSH1 0x1
0x547 PUSH1 0xa0
0x549 PUSH1 0x2
0x54b EXP
0x54c SUB
0x54d CALLER
0x54e AND
0x54f PUSH1 0x0
0x551 SWAP1
0x552 DUP2
0x553 MSTORE
0x554 PUSH1 0x1
0x556 PUSH1 0x20
0x558 DUP2
0x559 SWAP1
0x55a MSTORE
0x55b PUSH1 0x40
0x55d DUP3
0x55e SHA3
0x55f ADD
0x560 SLOAD
0x561 PUSH1 0x4
0x563 SLOAD
0x564 DUP2
0x565 SWAP1
0x566 GT
0x567 ISZERO
0x568 PUSH2 0x571
0x56b JUMPI
---
0x544: JUMPDEST 
0x545: V414 = 0x1
0x547: V415 = 0xa0
0x549: V416 = 0x2
0x54b: V417 = EXP 0x2 0xa0
0x54c: V418 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54d: V419 = CALLER
0x54e: V420 = AND V419 0xffffffffffffffffffffffffffffffffffffffff
0x54f: V421 = 0x0
0x553: M[0x0] = V420
0x554: V422 = 0x1
0x556: V423 = 0x20
0x55a: M[0x20] = 0x1
0x55b: V424 = 0x40
0x55e: V425 = SHA3 0x0 0x40
0x55f: V426 = ADD V425 0x1
0x560: V427 = S[V426]
0x561: V428 = 0x4
0x563: V429 = S[0x4]
0x566: V430 = GT V429 V427
0x567: V431 = ISZERO V430
0x568: V432 = 0x571
0x56b: JUMPI 0x571 V431
---
Entry stack: [V10, 0x107, S1, {0x168, 0x2ee}]
Stack pops: 0
Stack additions: [0x0, V427]
Exit stack: [V10, 0x107, S1, {0x168, 0x2ee}, 0x0, V427]

================================

Block 0x56c
[0x56c:0x570]
---
Predecessors: [0x544]
Successors: []
---
0x56c PUSH1 0x0
0x56e PUSH1 0x0
0x570 REVERT
---
0x56c: V433 = 0x0
0x56e: V434 = 0x0
0x570: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107, S3, {0x168, 0x2ee}, 0x0, V427]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S3, {0x168, 0x2ee}, 0x0, V427]

================================

Block 0x571
[0x571:0x59b]
---
Predecessors: [0x544]
Successors: [0x59c, 0x59d]
---
0x571 JUMPDEST
0x572 PUSH1 0x3
0x574 SLOAD
0x575 PUSH1 0x1
0x577 PUSH1 0xa0
0x579 PUSH1 0x2
0x57b EXP
0x57c SUB
0x57d CALLER
0x57e AND
0x57f PUSH1 0x0
0x581 SWAP1
0x582 DUP2
0x583 MSTORE
0x584 PUSH1 0x1
0x586 PUSH1 0x20
0x588 MSTORE
0x589 PUSH1 0x40
0x58b SWAP1
0x58c SHA3
0x58d SLOAD
0x58e PUSH1 0x4
0x590 SLOAD
0x591 DUP4
0x592 SWAP1
0x593 SUB
0x594 MUL
0x595 DUP2
0x596 ISZERO
0x597 ISZERO
0x598 PUSH2 0x59d
0x59b JUMPI
---
0x571: JUMPDEST 
0x572: V435 = 0x3
0x574: V436 = S[0x3]
0x575: V437 = 0x1
0x577: V438 = 0xa0
0x579: V439 = 0x2
0x57b: V440 = EXP 0x2 0xa0
0x57c: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57d: V442 = CALLER
0x57e: V443 = AND V442 0xffffffffffffffffffffffffffffffffffffffff
0x57f: V444 = 0x0
0x583: M[0x0] = V443
0x584: V445 = 0x1
0x586: V446 = 0x20
0x588: M[0x20] = 0x1
0x589: V447 = 0x40
0x58c: V448 = SHA3 0x0 0x40
0x58d: V449 = S[V448]
0x58e: V450 = 0x4
0x590: V451 = S[0x4]
0x593: V452 = SUB V451 V427
0x594: V453 = MUL V452 V449
0x596: V454 = ISZERO V436
0x597: V455 = ISZERO V454
0x598: V456 = 0x59d
0x59b: JUMPI 0x59d V455
---
Entry stack: [V10, 0x107, S3, {0x168, 0x2ee}, 0x0, V427]
Stack pops: 1
Stack additions: [S0, V436, V453]
Exit stack: [V10, 0x107, S3, {0x168, 0x2ee}, 0x0, V427, V436, V453]

================================

Block 0x59c
[0x59c:0x59c]
---
Predecessors: [0x571]
Successors: []
---
0x59c INVALID
---
0x59c: INVALID 
---
Entry stack: [V10, 0x107, S5, {0x168, 0x2ee}, 0x0, S2, V436, V453]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S5, {0x168, 0x2ee}, 0x0, S2, V436, V453]

================================

Block 0x59d
[0x59d:0x5a0]
---
Predecessors: [0x571]
Successors: [0x5a1]
---
0x59d JUMPDEST
0x59e DIV
0x59f SWAP2
0x5a0 POP
---
0x59d: JUMPDEST 
0x59e: V457 = DIV V453 V436
---
Entry stack: [V10, 0x107, S5, {0x168, 0x2ee}, 0x0, S2, V436, V453]
Stack pops: 4
Stack additions: [V457, S2]
Exit stack: [V10, 0x107, S5, {0x168, 0x2ee}, V457, S2]

================================

Block 0x5a1
[0x5a1:0x5a4]
---
Predecessors: [0x59d]
Successors: [0x168, 0x2ee]
---
0x5a1 JUMPDEST
0x5a2 POP
0x5a3 SWAP1
0x5a4 JUMP
---
0x5a1: JUMPDEST 
0x5a4: JUMP {0x168, 0x2ee}
---
Entry stack: [V10, 0x107, S3, {0x168, 0x2ee}, V457, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x107, S3, V457]

================================

Block 0x5a5
[0x5a5:0x5bb]
---
Predecessors: [0x1ce]
Successors: [0x5bc, 0x5c1]
---
0x5a5 JUMPDEST
0x5a6 PUSH1 0x0
0x5a8 SLOAD
0x5a9 CALLER
0x5aa PUSH1 0x1
0x5ac PUSH1 0xa0
0x5ae PUSH1 0x2
0x5b0 EXP
0x5b1 SUB
0x5b2 SWAP1
0x5b3 DUP2
0x5b4 AND
0x5b5 SWAP2
0x5b6 AND
0x5b7 EQ
0x5b8 PUSH2 0x5c1
0x5bb JUMPI
---
0x5a5: JUMPDEST 
0x5a6: V458 = 0x0
0x5a8: V459 = S[0x0]
0x5a9: V460 = CALLER
0x5aa: V461 = 0x1
0x5ac: V462 = 0xa0
0x5ae: V463 = 0x2
0x5b0: V464 = EXP 0x2 0xa0
0x5b1: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b4: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x5b6: V467 = AND V459 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V468 = EQ V467 V466
0x5b8: V469 = 0x5c1
0x5bb: JUMPI 0x5c1 V468
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x5bc
[0x5bc:0x5c0]
---
Predecessors: [0x5a5]
Successors: []
---
0x5bc PUSH1 0x0
0x5be PUSH1 0x0
0x5c0 REVERT
---
0x5bc: V470 = 0x0
0x5be: V471 = 0x0
0x5c0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x5c1
[0x5c1:0x5cc]
---
Predecessors: [0x5a5]
Successors: []
---
0x5c1 JUMPDEST
0x5c2 CALLER
0x5c3 PUSH1 0x1
0x5c5 PUSH1 0xa0
0x5c7 PUSH1 0x2
0x5c9 EXP
0x5ca SUB
0x5cb AND
0x5cc SELFDESTRUCT
---
0x5c1: JUMPDEST 
0x5c2: V472 = CALLER
0x5c3: V473 = 0x1
0x5c5: V474 = 0xa0
0x5c7: V475 = 0x2
0x5c9: V476 = EXP 0x2 0xa0
0x5ca: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cb: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x5cc: SELFDESTRUCT V478
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x5cd
[0x5cd:0x5cd]
---
Predecessors: []
Successors: [0x5ce]
---
0x5cd JUMPDEST
---
0x5cd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5ce
[0x5ce:0x5cf]
---
Predecessors: [0x5cd]
Successors: []
Has unresolved jump.
---
0x5ce JUMPDEST
0x5cf JUMP
---
0x5ce: JUMPDEST 
0x5cf: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5d0
[0x5d0:0x5d5]
---
Predecessors: [0x1e0]
Successors: [0x168]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x2
0x5d3 SLOAD
0x5d4 DUP2
0x5d5 JUMP
---
0x5d0: JUMPDEST 
0x5d1: V479 = 0x2
0x5d3: V480 = S[0x2]
0x5d5: JUMP 0x168
---
Entry stack: [V10, 0x168]
Stack pops: 1
Stack additions: [S0, V480]
Exit stack: [V10, 0x168, V480]

================================

Block 0x5d6
[0x5d6:0x5f5]
---
Predecessors: [0x202]
Successors: [0x5f6, 0x5f9]
---
0x5d6 JUMPDEST
0x5d7 PUSH1 0x1
0x5d9 PUSH1 0xa0
0x5db PUSH1 0x2
0x5dd EXP
0x5de SUB
0x5df CALLER
0x5e0 AND
0x5e1 PUSH1 0x0
0x5e3 SWAP1
0x5e4 DUP2
0x5e5 MSTORE
0x5e6 PUSH1 0x1
0x5e8 PUSH1 0x20
0x5ea MSTORE
0x5eb PUSH1 0x40
0x5ed SWAP1
0x5ee SHA3
0x5ef SLOAD
0x5f0 ISZERO
0x5f1 DUP1
0x5f2 PUSH2 0x5f9
0x5f5 JUMPI
---
0x5d6: JUMPDEST 
0x5d7: V481 = 0x1
0x5d9: V482 = 0xa0
0x5db: V483 = 0x2
0x5dd: V484 = EXP 0x2 0xa0
0x5de: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5df: V486 = CALLER
0x5e0: V487 = AND V486 0xffffffffffffffffffffffffffffffffffffffff
0x5e1: V488 = 0x0
0x5e5: M[0x0] = V487
0x5e6: V489 = 0x1
0x5e8: V490 = 0x20
0x5ea: M[0x20] = 0x1
0x5eb: V491 = 0x40
0x5ee: V492 = SHA3 0x0 0x40
0x5ef: V493 = S[V492]
0x5f0: V494 = ISZERO V493
0x5f2: V495 = 0x5f9
0x5f5: JUMPI 0x5f9 V494
---
Entry stack: [V10, 0x107, V164]
Stack pops: 0
Stack additions: [V494]
Exit stack: [V10, 0x107, V164, V494]

================================

Block 0x5f6
[0x5f6:0x5f8]
---
Predecessors: [0x5d6]
Successors: [0x5f9]
---
0x5f6 POP
0x5f7 DUP1
0x5f8 ISZERO
---
0x5f8: V496 = ISZERO V164
---
Entry stack: [V10, 0x107, V164, V494]
Stack pops: 2
Stack additions: [S1, V496]
Exit stack: [V10, 0x107, V164, V496]

================================

Block 0x5f9
[0x5f9:0x5fe]
---
Predecessors: [0x5d6, 0x5f6]
Successors: [0x5ff, 0x604]
---
0x5f9 JUMPDEST
0x5fa ISZERO
0x5fb PUSH2 0x604
0x5fe JUMPI
---
0x5f9: JUMPDEST 
0x5fa: V497 = ISZERO S0
0x5fb: V498 = 0x604
0x5fe: JUMPI 0x604 V497
---
Entry stack: [V10, 0x107, V164, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x107, V164]

================================

Block 0x5ff
[0x5ff:0x603]
---
Predecessors: [0x5f9]
Successors: []
---
0x5ff PUSH1 0x0
0x601 PUSH1 0x0
0x603 REVERT
---
0x5ff: V499 = 0x0
0x601: V500 = 0x0
0x603: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V164]

================================

Block 0x604
[0x604:0x68e]
---
Predecessors: [0x5f9]
Successors: [0x3ad, 0x68f]
---
0x604 JUMPDEST
0x605 PUSH1 0x1
0x607 PUSH1 0xa0
0x609 PUSH1 0x2
0x60b EXP
0x60c SUB
0x60d CALLER
0x60e DUP2
0x60f AND
0x610 PUSH1 0x0
0x612 DUP2
0x613 DUP2
0x614 MSTORE
0x615 PUSH1 0x1
0x617 PUSH1 0x20
0x619 MSTORE
0x61a PUSH1 0x40
0x61c DUP1
0x61d DUP3
0x61e SHA3
0x61f DUP1
0x620 SLOAD
0x621 DUP7
0x622 SWAP1
0x623 SUB
0x624 SWAP1
0x625 SSTORE
0x626 PUSH1 0x3
0x628 DUP1
0x629 SLOAD
0x62a DUP7
0x62b SWAP1
0x62c SUB
0x62d SWAP1
0x62e SSTORE
0x62f DUP2
0x630 SLOAD
0x631 DUP2
0x632 MLOAD
0x633 PUSH32 0x6046d71800000000000000000000000000000000000000000000000000000000
0x654 DUP2
0x655 MSTORE
0x656 PUSH1 0x4
0x658 DUP2
0x659 ADD
0x65a DUP8
0x65b SWAP1
0x65c MSTORE
0x65d PUSH1 0x24
0x65f DUP2
0x660 ADD
0x661 SWAP5
0x662 SWAP1
0x663 SWAP5
0x664 MSTORE
0x665 DUP5
0x666 AND
0x667 PUSH1 0x44
0x669 DUP5
0x66a ADD
0x66b MSTORE
0x66c MLOAD
0x66d ADDRESS
0x66e SWAP1
0x66f SWAP4
0x670 AND
0x671 SWAP3
0x672 PUSH4 0x6046d718
0x677 SWAP3
0x678 PUSH1 0x64
0x67a DUP1
0x67b DUP3
0x67c ADD
0x67d SWAP4
0x67e SWAP3
0x67f SWAP2
0x680 DUP3
0x681 SWAP1
0x682 SUB
0x683 ADD
0x684 DUP2
0x685 DUP4
0x686 DUP8
0x687 DUP1
0x688 EXTCODESIZE
0x689 ISZERO
0x68a ISZERO
0x68b PUSH2 0x3ad
0x68e JUMPI
---
0x604: JUMPDEST 
0x605: V501 = 0x1
0x607: V502 = 0xa0
0x609: V503 = 0x2
0x60b: V504 = EXP 0x2 0xa0
0x60c: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60d: V506 = CALLER
0x60f: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x610: V508 = 0x0
0x614: M[0x0] = V507
0x615: V509 = 0x1
0x617: V510 = 0x20
0x619: M[0x20] = 0x1
0x61a: V511 = 0x40
0x61e: V512 = SHA3 0x0 0x40
0x620: V513 = S[V512]
0x623: V514 = SUB V513 V164
0x625: S[V512] = V514
0x626: V515 = 0x3
0x629: V516 = S[0x3]
0x62c: V517 = SUB V516 V164
0x62e: S[0x3] = V517
0x630: V518 = S[0x0]
0x632: V519 = M[0x40]
0x633: V520 = 0x6046d71800000000000000000000000000000000000000000000000000000000
0x655: M[V519] = 0x6046d71800000000000000000000000000000000000000000000000000000000
0x656: V521 = 0x4
0x659: V522 = ADD V519 0x4
0x65c: M[V522] = V164
0x65d: V523 = 0x24
0x660: V524 = ADD V519 0x24
0x664: M[V524] = V507
0x666: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x667: V526 = 0x44
0x66a: V527 = ADD V519 0x44
0x66b: M[V527] = V525
0x66c: V528 = M[0x40]
0x66d: V529 = ADDRESS
0x670: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x672: V531 = 0x6046d718
0x678: V532 = 0x64
0x67c: V533 = ADD V519 0x64
0x682: V534 = SUB V519 V528
0x683: V535 = ADD V534 0x64
0x688: V536 = EXTCODESIZE V530
0x689: V537 = ISZERO V536
0x68a: V538 = ISZERO V537
0x68b: V539 = 0x3ad
0x68e: JUMPI 0x3ad V538
---
Entry stack: [V10, 0x107, V164]
Stack pops: 1
Stack additions: [S0, V530, 0x6046d718, V533, 0x0, V528, V535, V528, 0x0, V530]
Exit stack: [V10, 0x107, V164, V530, 0x6046d718, V533, 0x0, V528, V535, V528, 0x0, V530]

================================

Block 0x68f
[0x68f:0x68f]
---
Predecessors: [0x604]
Successors: []
---
0x68f INVALID
---
0x68f: INVALID 
---
Entry stack: [V10, 0x107, V164, V530, 0x6046d718, V533, 0x0, V528, V535, V528, 0x0, V530]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V164, V530, 0x6046d718, V533, 0x0, V528, V535, V528, 0x0, V530]

================================

Block 0x690
[0x690:0x69c]
---
Predecessors: []
Successors: [0x3bb, 0x69d]
---
0x690 JUMPDEST
0x691 PUSH2 0x2c6
0x694 GAS
0x695 SUB
0x696 CALL
0x697 ISZERO
0x698 ISZERO
0x699 PUSH2 0x3bb
0x69c JUMPI
---
0x690: JUMPDEST 
0x691: V540 = 0x2c6
0x694: V541 = GAS
0x695: V542 = SUB V541 0x2c6
0x696: V543 = CALL V542 S0 S1 S2 S3 S4 S5
0x697: V544 = ISZERO V543
0x698: V545 = ISZERO V544
0x699: V546 = 0x3bb
0x69c: JUMPI 0x3bb V545
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x69d
[0x69d:0x6a1]
---
Predecessors: [0x690]
Successors: [0x6a2]
---
0x69d INVALID
0x69e JUMPDEST
0x69f POP
0x6a0 POP
0x6a1 POP
---
0x69d: INVALID 
0x69e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6a2
[0x6a2:0x6a4]
---
Predecessors: [0x69d]
Successors: []
Has unresolved jump.
---
0x6a2 JUMPDEST
0x6a3 POP
0x6a4 JUMP
---
0x6a2: JUMPDEST 
0x6a4: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x6a5
[0x6a5:0x6b3]
---
Predecessors: [0x217]
Successors: [0x21f]
---
0x6a5 JUMPDEST
0x6a6 PUSH1 0x0
0x6a8 SLOAD
0x6a9 PUSH1 0x1
0x6ab PUSH1 0xa0
0x6ad PUSH1 0x2
0x6af EXP
0x6b0 SUB
0x6b1 AND
0x6b2 DUP2
0x6b3 JUMP
---
0x6a5: JUMPDEST 
0x6a6: V547 = 0x0
0x6a8: V548 = S[0x0]
0x6a9: V549 = 0x1
0x6ab: V550 = 0xa0
0x6ad: V551 = 0x2
0x6af: V552 = EXP 0x2 0xa0
0x6b0: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b1: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x6b3: JUMP 0x21f
---
Entry stack: [V10, 0x21f]
Stack pops: 1
Stack additions: [S0, V554]
Exit stack: [V10, 0x21f, V554]

================================

Block 0x6b4
[0x6b4:0x6b9]
---
Predecessors: [0x243]
Successors: [0x168]
---
0x6b4 JUMPDEST
0x6b5 PUSH1 0x3
0x6b7 SLOAD
0x6b8 DUP2
0x6b9 JUMP
---
0x6b4: JUMPDEST 
0x6b5: V555 = 0x3
0x6b7: V556 = S[0x3]
0x6b9: JUMP 0x168
---
Entry stack: [V10, 0x168]
Stack pops: 1
Stack additions: [S0, V556]
Exit stack: [V10, 0x168, V556]

================================

Block 0x6ba
[0x6ba:0x6d0]
---
Predecessors: [0x265]
Successors: [0x6d1, 0x6d6]
---
0x6ba JUMPDEST
0x6bb PUSH1 0x0
0x6bd SLOAD
0x6be CALLER
0x6bf PUSH1 0x1
0x6c1 PUSH1 0xa0
0x6c3 PUSH1 0x2
0x6c5 EXP
0x6c6 SUB
0x6c7 SWAP1
0x6c8 DUP2
0x6c9 AND
0x6ca SWAP2
0x6cb AND
0x6cc EQ
0x6cd PUSH2 0x6d6
0x6d0 JUMPI
---
0x6ba: JUMPDEST 
0x6bb: V557 = 0x0
0x6bd: V558 = S[0x0]
0x6be: V559 = CALLER
0x6bf: V560 = 0x1
0x6c1: V561 = 0xa0
0x6c3: V562 = 0x2
0x6c5: V563 = EXP 0x2 0xa0
0x6c6: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c9: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x6cb: V566 = AND V558 0xffffffffffffffffffffffffffffffffffffffff
0x6cc: V567 = EQ V566 V565
0x6cd: V568 = 0x6d6
0x6d0: JUMPI 0x6d6 V567
---
Entry stack: [V10, 0x107, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V199]

================================

Block 0x6d1
[0x6d1:0x6d5]
---
Predecessors: [0x6ba]
Successors: []
---
0x6d1 PUSH1 0x0
0x6d3 PUSH1 0x0
0x6d5 REVERT
---
0x6d1: V569 = 0x0
0x6d3: V570 = 0x0
0x6d5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V199]

================================

Block 0x6d6
[0x6d6:0x6db]
---
Predecessors: [0x6ba]
Successors: [0x6dc]
---
0x6d6 JUMPDEST
0x6d7 PUSH1 0x2
0x6d9 DUP2
0x6da SWAP1
0x6db SSTORE
---
0x6d6: JUMPDEST 
0x6d7: V571 = 0x2
0x6db: S[0x2] = V199
---
Entry stack: [V10, 0x107, V199]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x107, V199]

================================

Block 0x6dc
[0x6dc:0x6dc]
---
Predecessors: [0x6d6]
Successors: [0x6dd]
---
0x6dc JUMPDEST
---
0x6dc: JUMPDEST 
---
Entry stack: [V10, 0x107, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V199]

================================

Block 0x6dd
[0x6dd:0x6df]
---
Predecessors: [0x6dc]
Successors: [0x107]
---
0x6dd JUMPDEST
0x6de POP
0x6df JUMP
---
0x6dd: JUMPDEST 
0x6df: JUMP 0x107
---
Entry stack: [V10, 0x107, V199]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x6e0
[0x6e0:0x6f9]
---
Predecessors: [0x27a]
Successors: [0x6fa]
---
0x6e0 JUMPDEST
0x6e1 PUSH1 0x1
0x6e3 PUSH1 0xa0
0x6e5 PUSH1 0x2
0x6e7 EXP
0x6e8 SUB
0x6e9 CALLER
0x6ea AND
0x6eb PUSH1 0x0
0x6ed SWAP1
0x6ee DUP2
0x6ef MSTORE
0x6f0 PUSH1 0x1
0x6f2 PUSH1 0x20
0x6f4 MSTORE
0x6f5 PUSH1 0x40
0x6f7 SWAP1
0x6f8 SHA3
0x6f9 SLOAD
---
0x6e0: JUMPDEST 
0x6e1: V572 = 0x1
0x6e3: V573 = 0xa0
0x6e5: V574 = 0x2
0x6e7: V575 = EXP 0x2 0xa0
0x6e8: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e9: V577 = CALLER
0x6ea: V578 = AND V577 0xffffffffffffffffffffffffffffffffffffffff
0x6eb: V579 = 0x0
0x6ef: M[0x0] = V578
0x6f0: V580 = 0x1
0x6f2: V581 = 0x20
0x6f4: M[0x20] = 0x1
0x6f5: V582 = 0x40
0x6f8: V583 = SHA3 0x0 0x40
0x6f9: V584 = S[V583]
---
Entry stack: [V10, 0x168]
Stack pops: 0
Stack additions: [V584]
Exit stack: [V10, 0x168, V584]

================================

Block 0x6fa
[0x6fa:0x6fc]
---
Predecessors: [0x6e0]
Successors: [0x168]
---
0x6fa JUMPDEST
0x6fb SWAP1
0x6fc JUMP
---
0x6fa: JUMPDEST 
0x6fc: JUMP 0x168
---
Entry stack: [V10, 0x168, V584]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V584]

================================

Block 0x6fd
[0x6fd:0x706]
---
Predecessors: [0x294]
Successors: [0x103, 0x707]
---
0x6fd JUMPDEST
0x6fe PUSH1 0x2
0x700 SLOAD
0x701 CALLVALUE
0x702 LT
0x703 PUSH2 0x103
0x706 JUMPI
---
0x6fd: JUMPDEST 
0x6fe: V585 = 0x2
0x700: V586 = S[0x2]
0x701: V587 = CALLVALUE
0x702: V588 = LT V587 V586
0x703: V589 = 0x103
0x706: JUMPI 0x103 V588
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x707
[0x707:0x738]
---
Predecessors: [0x6fd]
Successors: [0x739]
---
0x707 PUSH1 0x1
0x709 PUSH1 0xa0
0x70b PUSH1 0x2
0x70d EXP
0x70e SUB
0x70f CALLER
0x710 AND
0x711 PUSH1 0x0
0x713 SWAP1
0x714 DUP2
0x715 MSTORE
0x716 PUSH1 0x1
0x718 PUSH1 0x20
0x71a DUP2
0x71b SWAP1
0x71c MSTORE
0x71d PUSH1 0x40
0x71f SWAP1
0x720 SWAP2
0x721 SHA3
0x722 DUP1
0x723 SLOAD
0x724 CALLVALUE
0x725 SWAP1
0x726 DUP2
0x727 ADD
0x728 DUP3
0x729 SSTORE
0x72a PUSH1 0x3
0x72c DUP1
0x72d SLOAD
0x72e SWAP1
0x72f SWAP2
0x730 ADD
0x731 SWAP1
0x732 SSTORE
0x733 PUSH1 0x4
0x735 SLOAD
0x736 SWAP2
0x737 ADD
0x738 SSTORE
---
0x707: V590 = 0x1
0x709: V591 = 0xa0
0x70b: V592 = 0x2
0x70d: V593 = EXP 0x2 0xa0
0x70e: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70f: V595 = CALLER
0x710: V596 = AND V595 0xffffffffffffffffffffffffffffffffffffffff
0x711: V597 = 0x0
0x715: M[0x0] = V596
0x716: V598 = 0x1
0x718: V599 = 0x20
0x71c: M[0x20] = 0x1
0x71d: V600 = 0x40
0x721: V601 = SHA3 0x0 0x40
0x723: V602 = S[V601]
0x724: V603 = CALLVALUE
0x727: V604 = ADD V603 V602
0x729: S[V601] = V604
0x72a: V605 = 0x3
0x72d: V606 = S[0x3]
0x730: V607 = ADD V603 V606
0x732: S[0x3] = V607
0x733: V608 = 0x4
0x735: V609 = S[0x4]
0x737: V610 = ADD 0x1 V601
0x738: S[V610] = V609
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x739
[0x739:0x739]
---
Predecessors: [0x707]
Successors: [0x73a]
---
0x739 JUMPDEST
---
0x739: JUMPDEST 
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x73a
[0x73a:0x73b]
---
Predecessors: [0x739]
Successors: [0x107]
---
0x73a JUMPDEST
0x73b JUMP
---
0x73a: JUMPDEST 
0x73b: JUMP 0x107
---
Entry stack: [V10, 0x107]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x73c
[0x73c:0x752]
---
Predecessors: [0x2a6]
Successors: [0x753, 0x758]
---
0x73c JUMPDEST
0x73d PUSH1 0x0
0x73f SLOAD
0x740 CALLER
0x741 PUSH1 0x1
0x743 PUSH1 0xa0
0x745 PUSH1 0x2
0x747 EXP
0x748 SUB
0x749 SWAP1
0x74a DUP2
0x74b AND
0x74c SWAP2
0x74d AND
0x74e EQ
0x74f PUSH2 0x758
0x752 JUMPI
---
0x73c: JUMPDEST 
0x73d: V611 = 0x0
0x73f: V612 = S[0x0]
0x740: V613 = CALLER
0x741: V614 = 0x1
0x743: V615 = 0xa0
0x745: V616 = 0x2
0x747: V617 = EXP 0x2 0xa0
0x748: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74b: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0x74d: V620 = AND V612 0xffffffffffffffffffffffffffffffffffffffff
0x74e: V621 = EQ V620 V619
0x74f: V622 = 0x758
0x752: JUMPI 0x758 V621
---
Entry stack: [V10, 0x107, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V225]

================================

Block 0x753
[0x753:0x757]
---
Predecessors: [0x73c]
Successors: []
---
0x753 PUSH1 0x0
0x755 PUSH1 0x0
0x757 REVERT
---
0x753: V623 = 0x0
0x755: V624 = 0x0
0x757: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V225]

================================

Block 0x758
[0x758:0x768]
---
Predecessors: [0x73c]
Successors: [0x769, 0x76e]
---
0x758 JUMPDEST
0x759 PUSH1 0x1
0x75b PUSH1 0xa0
0x75d PUSH1 0x2
0x75f EXP
0x760 SUB
0x761 DUP2
0x762 AND
0x763 ISZERO
0x764 ISZERO
0x765 PUSH2 0x76e
0x768 JUMPI
---
0x758: JUMPDEST 
0x759: V625 = 0x1
0x75b: V626 = 0xa0
0x75d: V627 = 0x2
0x75f: V628 = EXP 0x2 0xa0
0x760: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x762: V630 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x763: V631 = ISZERO V630
0x764: V632 = ISZERO V631
0x765: V633 = 0x76e
0x768: JUMPI 0x76e V632
---
Entry stack: [V10, 0x107, V225]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x107, V225]

================================

Block 0x769
[0x769:0x76d]
---
Predecessors: [0x758]
Successors: []
---
0x769 PUSH1 0x0
0x76b PUSH1 0x0
0x76d REVERT
---
0x769: V634 = 0x0
0x76b: V635 = 0x0
0x76d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x107, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V225]

================================

Block 0x76e
[0x76e:0x796]
---
Predecessors: [0x758]
Successors: [0x797]
---
0x76e JUMPDEST
0x76f PUSH1 0x0
0x771 DUP1
0x772 SLOAD
0x773 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x788 NOT
0x789 AND
0x78a PUSH1 0x1
0x78c PUSH1 0xa0
0x78e PUSH1 0x2
0x790 EXP
0x791 SUB
0x792 DUP4
0x793 AND
0x794 OR
0x795 SWAP1
0x796 SSTORE
---
0x76e: JUMPDEST 
0x76f: V636 = 0x0
0x772: V637 = S[0x0]
0x773: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x788: V639 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x789: V640 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V637
0x78a: V641 = 0x1
0x78c: V642 = 0xa0
0x78e: V643 = 0x2
0x790: V644 = EXP 0x2 0xa0
0x791: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x793: V646 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x794: V647 = OR V646 V640
0x796: S[0x0] = V647
---
Entry stack: [V10, 0x107, V225]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x107, V225]

================================

Block 0x797
[0x797:0x797]
---
Predecessors: [0x76e]
Successors: [0x798]
---
0x797 JUMPDEST
---
0x797: JUMPDEST 
---
Entry stack: [V10, 0x107, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, V225]

================================

Block 0x798
[0x798:0x79a]
---
Predecessors: [0x797]
Successors: [0x107]
---
0x798 JUMPDEST
0x799 POP
0x79a JUMP
---
0x798: JUMPDEST 
0x79a: JUMP 0x107
---
Entry stack: [V10, 0x107, V225]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x79b
[0x79b:0x7c6]
---
Predecessors: []
Successors: []
---
0x79b STOP
0x79c LOG1
0x79d PUSH6 0x627a7a723058
0x7a4 SHA3
0x7a5 PUSH29 0x49ccf57297723f1baad3141e21ffca86e6b49c1bb379672c0f22705819
0x7c3 ORIGIN
0x7c4 MISSING 0x4f
0x7c5 STOP
0x7c6 MISSING 0x29
---
0x79b: STOP 
0x79c: LOG S0 S1 S2
0x79d: V648 = 0x627a7a723058
0x7a4: V649 = SHA3 0x627a7a723058 S3
0x7a5: V650 = 0x49ccf57297723f1baad3141e21ffca86e6b49c1bb379672c0f22705819
0x7c3: V651 = ORIGIN
0x7c4: MISSING 0x4f
0x7c5: STOP 
0x7c6: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V651, 0x49ccf57297723f1baad3141e21ffca86e6b49c1bb379672c0f22705819, V649]
Exit stack: []

================================

Function 0:
Public function signature: 0x3c83302
Entry block: 0x109
Exit block: 0x107
Body: 0x107, 0x109, 0x2bc, 0x2d3, 0x2d8, 0x2e1, 0x2e2

Function 1:
Public function signature: 0xb6826ca
Entry block: 0x113
Exit block: 0x107
Body: 0x107, 0x113, 0x11a, 0x11b, 0x2e4, 0x2ee, 0x2f8, 0x2fd, 0x3ac, 0x3ad, 0x3ba, 0x3bb, 0x3bf

Function 2:
Public function signature: 0xf24f5c8
Entry block: 0x125
Exit block: 0x107
Body: 0x107, 0x125, 0x12c, 0x12d, 0x3c2, 0x3d9, 0x3de, 0x471, 0x472, 0x47f, 0x480, 0x484, 0x485

Function 3:
Public function signature: 0x36746413
Entry block: 0x146
Exit block: 0x107
Body: 0x107, 0x146, 0x14d, 0x14e, 0x489, 0x496

Function 4:
Public function signature: 0x45cf093a
Entry block: 0x158
Exit block: 0x168
Body: 0x158, 0x15f, 0x160, 0x168, 0x498

Function 5:
Public function signature: 0x6046d718
Entry block: 0x17a
Exit block: 0x107
Body: 0x107, 0x17a, 0x181, 0x182, 0x49e, 0x4ba, 0x4bf, 0x4e7, 0x4ec, 0x53d, 0x53e

Function 6:
Public function signature: 0x797d8b85
Entry block: 0x1a4
Exit block: 0x168
Body: 0x168, 0x1a4, 0x1ab, 0x1ac

Function 7:
Public function signature: 0x83197ef0
Entry block: 0x1c6
Exit block: 0x5c1
Body: 0x1c6, 0x1cd, 0x1ce, 0x5a5, 0x5bc, 0x5c1

Function 8:
Public function signature: 0x8ac2c680
Entry block: 0x1d8
Exit block: 0x168
Body: 0x168, 0x1d8, 0x1df, 0x1e0, 0x5d0

Function 9:
Public function signature: 0x8ca17995
Entry block: 0x1fa
Exit block: 0x107
Body: 0x107, 0x1fa, 0x201, 0x202, 0x3ad, 0x3ba, 0x3bb, 0x3bf, 0x5d6, 0x5f6, 0x5f9, 0x5ff, 0x604, 0x68f

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x20f
Exit block: 0x21f
Body: 0x20f, 0x216, 0x217, 0x21f, 0x6a5

Function 11:
Public function signature: 0xa442414f
Entry block: 0x23b
Exit block: 0x168
Body: 0x168, 0x23b, 0x242, 0x243, 0x6b4

Function 12:
Public function signature: 0xba7ed2ff
Entry block: 0x25d
Exit block: 0x107
Body: 0x107, 0x25d, 0x264, 0x265, 0x6ba, 0x6d1, 0x6d6, 0x6dc, 0x6dd

Function 13:
Public function signature: 0xc3f1a710
Entry block: 0x272
Exit block: 0x168
Body: 0x168, 0x272, 0x279, 0x27a, 0x6e0, 0x6fa

Function 14:
Public function signature: 0xe8b5e51f
Entry block: 0x294
Exit block: 0x107
Body: 0x103, 0x104, 0x105, 0x107, 0x294, 0x6fd, 0x707, 0x739, 0x73a

Function 15:
Public function signature: 0xf2fde38b
Entry block: 0x29e
Exit block: 0x107
Body: 0x107, 0x29e, 0x2a5, 0x2a6, 0x73c, 0x753, 0x758, 0x769, 0x76e, 0x797, 0x798

Function 16:
Public fallback function
Entry block: 0xe3
Exit block: 0x107
Body: 0xe3, 0xe7, 0xfe, 0x103, 0x104, 0x105, 0x107

Function 17:
Private function
Entry block: 0x544
Exit block: 0x5a1
Body: 0x544, 0x571, 0x59d, 0x5a1

