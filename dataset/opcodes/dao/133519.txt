Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4b
0xa: JUMPI 0x4b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x7a]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x51fa7efd
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x7a
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x51fa7efd
0x1a: V12 = EQ V10 0x51fa7efd
0x1b: V13 = 0x7a
0x1e: JUMPI 0x7a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x1a5]
---
0x1f DUP1
0x20 PUSH4 0x8da5cb5b
0x25 EQ
0x26 PUSH2 0x1a5
0x29 JUMPI
---
0x20: V14 = 0x8da5cb5b
0x25: V15 = EQ 0x8da5cb5b V10
0x26: V16 = 0x1a5
0x29: JUMPI 0x1a5 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x1bc]
---
0x2a DUP1
0x2b PUSH4 0xb1a8b25a
0x30 EQ
0x31 PUSH2 0x1bc
0x34 JUMPI
---
0x2b: V17 = 0xb1a8b25a
0x30: V18 = EQ 0xb1a8b25a V10
0x31: V19 = 0x1bc
0x34: JUMPI 0x1bc V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x1fd]
---
0x35 DUP1
0x36 PUSH4 0xb656e9f4
0x3b EQ
0x3c PUSH2 0x1fd
0x3f JUMPI
---
0x36: V20 = 0xb656e9f4
0x3b: V21 = EQ 0xb656e9f4 V10
0x3c: V22 = 0x1fd
0x3f: JUMPI 0x1fd V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x209]
---
0x40 DUP1
0x41 PUSH4 0xfc44fd28
0x46 EQ
0x47 PUSH2 0x209
0x4a JUMPI
---
0x41: V23 = 0xfc44fd28
0x46: V24 = EQ 0xfc44fd28 V10
0x47: V25 = 0x209
0x4a: JUMPI 0x209 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x75]
---
Predecessors: [0x0, 0x40]
Successors: [0x76, 0x25a]
---
0x4b JUMPDEST
0x4c PUSH2 0x246
0x4f PUSH1 0x0
0x51 DUP1
0x52 SLOAD
0x53 PUSH1 0xff
0x55 PUSH22 0x1000000000000000000000000000000000000000000
0x6c SWAP1
0x6d SWAP2
0x6e DIV
0x6f AND
0x70 ISZERO
0x71 ISZERO
0x72 PUSH2 0x25a
0x75 JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = 0x246
0x4f: V27 = 0x0
0x52: V28 = S[0x0]
0x53: V29 = 0xff
0x55: V30 = 0x1000000000000000000000000000000000000000000
0x6e: V31 = DIV V28 0x1000000000000000000000000000000000000000000
0x6f: V32 = AND V31 0xff
0x70: V33 = ISZERO V32
0x71: V34 = ISZERO V33
0x72: V35 = 0x25a
0x75: JUMPI 0x25a V34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x246, 0x0]
Exit stack: [V10, 0x246, 0x0]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x4b]
Successors: []
---
0x76 PUSH2 0x2
0x79 JUMP
---
0x76: V36 = 0x2
0x79: THROW 
---
Entry stack: [V10, 0x246, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x246, 0x0]

================================

Block 0x7a
[0x7a:0x96]
---
Predecessors: [0xb]
Successors: [0x97]
---
0x7a JUMPDEST
0x7b PUSH2 0x260
0x7e PUSH1 0x4
0x80 CALLDATALOAD
0x81 PUSH1 0x0
0x83 SLOAD
0x84 PUSH2 0x27f
0x87 SWAP1
0x88 PUSH2 0x100
0x8b SWAP1
0x8c DIV
0x8d PUSH1 0x1
0x8f PUSH1 0xa0
0x91 PUSH1 0x2
0x93 EXP
0x94 SUB
0x95 AND
0x96 DUP3
---
0x7a: JUMPDEST 
0x7b: V37 = 0x260
0x7e: V38 = 0x4
0x80: V39 = CALLDATALOAD 0x4
0x81: V40 = 0x0
0x83: V41 = S[0x0]
0x84: V42 = 0x27f
0x88: V43 = 0x100
0x8c: V44 = DIV V41 0x100
0x8d: V45 = 0x1
0x8f: V46 = 0xa0
0x91: V47 = 0x2
0x93: V48 = EXP 0x2 0xa0
0x94: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x260, V39, 0x27f, V50, V39]
Exit stack: [V10, 0x260, V39, 0x27f, V50, V39]

================================

Block 0x97
[0x97:0xb3]
---
Predecessors: [0x7a, 0x1bc, 0x209]
Successors: [0xb4, 0x2d7]
---
0x97 JUMPDEST
0x98 PUSH1 0x0
0x9a SLOAD
0x9b PUSH2 0x100
0x9e SWAP1
0x9f DIV
0xa0 PUSH1 0x1
0xa2 PUSH1 0xa0
0xa4 PUSH1 0x2
0xa6 EXP
0xa7 SUB
0xa8 SWAP1
0xa9 DUP2
0xaa AND
0xab CALLER
0xac SWAP1
0xad SWAP2
0xae AND
0xaf EQ
0xb0 PUSH2 0x2d7
0xb3 JUMPI
---
0x97: JUMPDEST 
0x98: V51 = 0x0
0x9a: V52 = S[0x0]
0x9b: V53 = 0x100
0x9f: V54 = DIV V52 0x100
0xa0: V55 = 0x1
0xa2: V56 = 0xa0
0xa4: V57 = 0x2
0xa6: V58 = EXP 0x2 0xa0
0xa7: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xab: V61 = CALLER
0xae: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xaf: V63 = EQ V62 V60
0xb0: V64 = 0x2d7
0xb3: JUMPI 0x2d7 V63
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]

================================

Block 0xb4
[0xb4:0xeb]
---
Predecessors: [0x97]
Successors: [0xec]
---
0xb4 PUSH1 0x40
0xb6 DUP1
0xb7 MLOAD
0xb8 DUP1
0xb9 DUP3
0xba ADD
0xbb SWAP1
0xbc SWAP2
0xbd MSTORE
0xbe PUSH1 0x9
0xc0 DUP2
0xc1 MSTORE
0xc2 PUSH32 0x6f6e6c794f776e65720000000000000000000000000000000000000000000000
0xe3 PUSH1 0x20
0xe5 DUP3
0xe6 ADD
0xe7 MSTORE
0xe8 PUSH2 0x31d
0xeb SWAP1
---
0xb4: V65 = 0x40
0xb7: V66 = M[0x40]
0xba: V67 = ADD 0x40 V66
0xbd: M[0x40] = V67
0xbe: V68 = 0x9
0xc1: M[V66] = 0x9
0xc2: V69 = 0x6f6e6c794f776e65720000000000000000000000000000000000000000000000
0xe3: V70 = 0x20
0xe6: V71 = ADD V66 0x20
0xe7: M[V71] = 0x6f6e6c794f776e65720000000000000000000000000000000000000000000000
0xe8: V72 = 0x31d
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 0
Stack additions: [0x31d, V66]
Exit stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0, 0x31d, V66]

================================

Block 0xec
[0xec:0x16b]
---
Predecessors: [0xb4, 0x2e1, 0x34a]
Successors: [0x16c, 0x185]
---
0xec JUMPDEST
0xed PUSH32 0xe9c64ad7aacefe9ed905822d2a5a6ca63ffdc82b257709dc05a534d60d92f910
0x10e CALLER
0x10f CALLVALUE
0x110 DUP4
0x111 PUSH1 0x40
0x113 MLOAD
0x114 DUP1
0x115 DUP5
0x116 PUSH1 0x1
0x118 PUSH1 0xa0
0x11a PUSH1 0x2
0x11c EXP
0x11d SUB
0x11e AND
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 DUP4
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a DUP1
0x12b PUSH1 0x20
0x12d ADD
0x12e DUP3
0x12f DUP2
0x130 SUB
0x131 DUP3
0x132 MSTORE
0x133 DUP4
0x134 DUP2
0x135 DUP2
0x136 MLOAD
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP2
0x13d POP
0x13e DUP1
0x13f MLOAD
0x140 SWAP1
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP1
0x145 DUP1
0x146 DUP4
0x147 DUP4
0x148 DUP3
0x149 SWAP1
0x14a PUSH1 0x0
0x14c PUSH1 0x4
0x14e PUSH1 0x20
0x150 DUP5
0x151 PUSH1 0x1f
0x153 ADD
0x154 DIV
0x155 PUSH1 0xf
0x157 MUL
0x158 PUSH1 0x3
0x15a ADD
0x15b CALL
0x15c POP
0x15d SWAP1
0x15e POP
0x15f SWAP1
0x160 DUP2
0x161 ADD
0x162 SWAP1
0x163 PUSH1 0x1f
0x165 AND
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x185
0x16b JUMPI
---
0xec: JUMPDEST 
0xed: V73 = 0xe9c64ad7aacefe9ed905822d2a5a6ca63ffdc82b257709dc05a534d60d92f910
0x10e: V74 = CALLER
0x10f: V75 = CALLVALUE
0x111: V76 = 0x40
0x113: V77 = M[0x40]
0x116: V78 = 0x1
0x118: V79 = 0xa0
0x11a: V80 = 0x2
0x11c: V81 = EXP 0x2 0xa0
0x11d: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x120: M[V77] = V83
0x121: V84 = 0x20
0x123: V85 = ADD 0x20 V77
0x126: M[V85] = V75
0x127: V86 = 0x20
0x129: V87 = ADD 0x20 V85
0x12b: V88 = 0x20
0x12d: V89 = ADD 0x20 V87
0x130: V90 = SUB V89 V77
0x132: M[V87] = V90
0x136: V91 = M[S0]
0x138: M[V89] = V91
0x139: V92 = 0x20
0x13b: V93 = ADD 0x20 V89
0x13f: V94 = M[S0]
0x141: V95 = 0x20
0x143: V96 = ADD 0x20 S0
0x14a: V97 = 0x0
0x14c: V98 = 0x4
0x14e: V99 = 0x20
0x151: V100 = 0x1f
0x153: V101 = ADD 0x1f V94
0x154: V102 = DIV V101 0x20
0x155: V103 = 0xf
0x157: V104 = MUL 0xf V102
0x158: V105 = 0x3
0x15a: V106 = ADD 0x3 V104
0x15b: V107 = CALL V106 0x4 0x0 V96 V94 V93 V94
0x161: V108 = ADD V94 V93
0x163: V109 = 0x1f
0x165: V110 = AND 0x1f V94
0x167: V111 = ISZERO V110
0x168: V112 = 0x185
0x16b: JUMPI 0x185 V111
---
Entry stack: [V10, S6, S5, {0x27f, 0x282}, S3, S2, 0x31d, S0]
Stack pops: 1
Stack additions: [S0, 0xe9c64ad7aacefe9ed905822d2a5a6ca63ffdc82b257709dc05a534d60d92f910, V74, V75, S0, V77, V87, V108, V110]
Exit stack: [V10, S6, S5, {0x27f, 0x282}, S3, S2, 0x31d, S0, 0xe9c64ad7aacefe9ed905822d2a5a6ca63ffdc82b257709dc05a534d60d92f910, V74, V75, S0, V77, V87, V108, V110]

================================

Block 0x16c
[0x16c:0x184]
---
Predecessors: [0xec]
Successors: [0x185]
---
0x16c DUP1
0x16d DUP3
0x16e SUB
0x16f DUP1
0x170 MLOAD
0x171 PUSH1 0x1
0x173 DUP4
0x174 PUSH1 0x20
0x176 SUB
0x177 PUSH2 0x100
0x17a EXP
0x17b SUB
0x17c NOT
0x17d AND
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP2
0x184 POP
---
0x16e: V113 = SUB V108 V110
0x170: V114 = M[V113]
0x171: V115 = 0x1
0x174: V116 = 0x20
0x176: V117 = SUB 0x20 V110
0x177: V118 = 0x100
0x17a: V119 = EXP 0x100 V117
0x17b: V120 = SUB V119 0x1
0x17c: V121 = NOT V120
0x17d: V122 = AND V121 V114
0x17f: M[V113] = V122
0x180: V123 = 0x20
0x182: V124 = ADD 0x20 V113
---
Entry stack: [V10, S14, S13, {0x27f, 0x282}, S11, S10, 0x31d, S8, 0xe9c64ad7aacefe9ed905822d2a5a6ca63ffdc82b257709dc05a534d60d92f910, V74, V75, S4, V77, V87, V108, V110]
Stack pops: 2
Stack additions: [V124, S0]
Exit stack: [V10, S14, S13, {0x27f, 0x282}, S11, S10, 0x31d, S8, 0xe9c64ad7aacefe9ed905822d2a5a6ca63ffdc82b257709dc05a534d60d92f910, V74, V75, S4, V77, V87, V124, V110]

================================

Block 0x185
[0x185:0x1a0]
---
Predecessors: [0xec, 0x16c]
Successors: [0x1a1, 0x27f]
---
0x185 JUMPDEST
0x186 POP
0x187 SWAP5
0x188 POP
0x189 POP
0x18a POP
0x18b POP
0x18c POP
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 SWAP2
0x192 SUB
0x193 SWAP1
0x194 LOG1
0x195 PUSH1 0x0
0x197 SLOAD
0x198 PUSH1 0xff
0x19a AND
0x19b ISZERO
0x19c ISZERO
0x19d PUSH2 0x27f
0x1a0 JUMPI
---
0x185: JUMPDEST 
0x18d: V125 = 0x40
0x18f: V126 = M[0x40]
0x192: V127 = SUB S1 V126
0x194: LOG V126 V127 0xe9c64ad7aacefe9ed905822d2a5a6ca63ffdc82b257709dc05a534d60d92f910
0x195: V128 = 0x0
0x197: V129 = S[0x0]
0x198: V130 = 0xff
0x19a: V131 = AND 0xff V129
0x19b: V132 = ISZERO V131
0x19c: V133 = ISZERO V132
0x19d: V134 = 0x27f
0x1a0: JUMPI 0x27f V133
---
Entry stack: [V10, S14, S13, {0x27f, 0x282}, S11, S10, 0x31d, S8, 0xe9c64ad7aacefe9ed905822d2a5a6ca63ffdc82b257709dc05a534d60d92f910, V74, V75, S4, V77, V87, S1, V110]
Stack pops: 8
Stack additions: []
Exit stack: [V10, S14, S13, {0x27f, 0x282}, S11, S10, 0x31d, S8]

================================

Block 0x1a1
[0x1a1:0x1a4]
---
Predecessors: [0x185]
Successors: []
---
0x1a1 PUSH2 0x2
0x1a4 JUMP
---
0x1a1: V135 = 0x2
0x1a4: THROW 
---
Entry stack: [V10, S6, S5, {0x27f, 0x282}, S3, S2, 0x31d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, S5, {0x27f, 0x282}, S3, S2, 0x31d, S0]

================================

Block 0x1a5
[0x1a5:0x1bb]
---
Predecessors: [0x1f]
Successors: [0x262]
---
0x1a5 JUMPDEST
0x1a6 PUSH2 0x262
0x1a9 PUSH1 0x0
0x1ab SLOAD
0x1ac PUSH2 0x100
0x1af SWAP1
0x1b0 DIV
0x1b1 PUSH1 0x1
0x1b3 PUSH1 0xa0
0x1b5 PUSH1 0x2
0x1b7 EXP
0x1b8 SUB
0x1b9 AND
0x1ba DUP2
0x1bb JUMP
---
0x1a5: JUMPDEST 
0x1a6: V136 = 0x262
0x1a9: V137 = 0x0
0x1ab: V138 = S[0x0]
0x1ac: V139 = 0x100
0x1b0: V140 = DIV V138 0x100
0x1b1: V141 = 0x1
0x1b3: V142 = 0xa0
0x1b5: V143 = 0x2
0x1b7: V144 = EXP 0x2 0xa0
0x1b8: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b9: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1bb: JUMP 0x262
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x262, V146]
Exit stack: [V10, 0x262, V146]

================================

Block 0x1bc
[0x1bc:0x1fc]
---
Predecessors: [0x2a]
Successors: [0x97]
---
0x1bc JUMPDEST
0x1bd PUSH2 0x260
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 SLOAD
0x1c4 PUSH22 0xff000000000000000000000000000000000000000000
0x1db NOT
0x1dc AND
0x1dd SWAP1
0x1de DUP2
0x1df SWAP1
0x1e0 SSTORE
0x1e1 PUSH2 0x282
0x1e4 SWAP1
0x1e5 PUSH2 0x100
0x1e8 SWAP1
0x1e9 DIV
0x1ea PUSH1 0x1
0x1ec PUSH1 0xa0
0x1ee PUSH1 0x2
0x1f0 EXP
0x1f1 SUB
0x1f2 SWAP1
0x1f3 DUP2
0x1f4 AND
0x1f5 SWAP1
0x1f6 ADDRESS
0x1f7 AND
0x1f8 BALANCE
0x1f9 PUSH2 0x97
0x1fc JUMP
---
0x1bc: JUMPDEST 
0x1bd: V147 = 0x260
0x1c0: V148 = 0x0
0x1c3: V149 = S[0x0]
0x1c4: V150 = 0xff000000000000000000000000000000000000000000
0x1db: V151 = NOT 0xff000000000000000000000000000000000000000000
0x1dc: V152 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V149
0x1e0: S[0x0] = V152
0x1e1: V153 = 0x282
0x1e5: V154 = 0x100
0x1e9: V155 = DIV V152 0x100
0x1ea: V156 = 0x1
0x1ec: V157 = 0xa0
0x1ee: V158 = 0x2
0x1f0: V159 = EXP 0x2 0xa0
0x1f1: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x1f6: V162 = ADDRESS
0x1f7: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V164 = BALANCE V163
0x1f9: V165 = 0x97
0x1fc: JUMP 0x97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x260, 0x282, V161, V164]
Exit stack: [V10, 0x260, 0x282, V161, V164]

================================

Block 0x1fd
[0x1fd:0x208]
---
Predecessors: [0x35]
Successors: [0x246]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x246
0x201 PUSH1 0x0
0x203 SLOAD
0x204 PUSH1 0xff
0x206 AND
0x207 DUP2
0x208 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V166 = 0x246
0x201: V167 = 0x0
0x203: V168 = S[0x0]
0x204: V169 = 0xff
0x206: V170 = AND 0xff V168
0x208: JUMP 0x246
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x246, V170]
Exit stack: [V10, 0x246, V170]

================================

Block 0x209
[0x209:0x245]
---
Predecessors: [0x40]
Successors: [0x97]
---
0x209 JUMPDEST
0x20a PUSH2 0x260
0x20d PUSH1 0x0
0x20f DUP1
0x210 SLOAD
0x211 PUSH22 0xff000000000000000000000000000000000000000000
0x228 NOT
0x229 AND
0x22a SWAP1
0x22b SSTORE
0x22c PUSH1 0x1
0x22e SLOAD
0x22f PUSH2 0x282
0x232 SWAP1
0x233 PUSH1 0x1
0x235 PUSH1 0xa0
0x237 PUSH1 0x2
0x239 EXP
0x23a SUB
0x23b SWAP1
0x23c DUP2
0x23d AND
0x23e SWAP1
0x23f ADDRESS
0x240 AND
0x241 BALANCE
0x242 PUSH2 0x97
0x245 JUMP
---
0x209: JUMPDEST 
0x20a: V171 = 0x260
0x20d: V172 = 0x0
0x210: V173 = S[0x0]
0x211: V174 = 0xff000000000000000000000000000000000000000000
0x228: V175 = NOT 0xff000000000000000000000000000000000000000000
0x229: V176 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V173
0x22b: S[0x0] = V176
0x22c: V177 = 0x1
0x22e: V178 = S[0x1]
0x22f: V179 = 0x282
0x233: V180 = 0x1
0x235: V181 = 0xa0
0x237: V182 = 0x2
0x239: V183 = EXP 0x2 0xa0
0x23a: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23d: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x23f: V186 = ADDRESS
0x240: V187 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x241: V188 = BALANCE V187
0x242: V189 = 0x97
0x245: JUMP 0x97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x260, 0x282, V185, V188]
Exit stack: [V10, 0x260, 0x282, V185, V188]

================================

Block 0x246
[0x246:0x259]
---
Predecessors: [0x1fd, 0x25a]
Successors: []
---
0x246 JUMPDEST
0x247 PUSH1 0x40
0x249 DUP1
0x24a MLOAD
0x24b SWAP2
0x24c ISZERO
0x24d ISZERO
0x24e DUP3
0x24f MSTORE
0x250 MLOAD
0x251 SWAP1
0x252 DUP2
0x253 SWAP1
0x254 SUB
0x255 PUSH1 0x20
0x257 ADD
0x258 SWAP1
0x259 RETURN
---
0x246: JUMPDEST 
0x247: V190 = 0x40
0x24a: V191 = M[0x40]
0x24c: V192 = ISZERO S0
0x24d: V193 = ISZERO V192
0x24f: M[V191] = V193
0x250: V194 = M[0x40]
0x254: V195 = SUB V191 V194
0x255: V196 = 0x20
0x257: V197 = ADD 0x20 V195
0x259: RETURN V194 V197
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x25a
[0x25a:0x25f]
---
Predecessors: [0x4b]
Successors: [0x246]
---
0x25a JUMPDEST
0x25b POP
0x25c PUSH1 0x1
0x25e SWAP1
0x25f JUMP
---
0x25a: JUMPDEST 
0x25c: V198 = 0x1
0x25f: JUMP 0x246
---
Entry stack: [V10, 0x246, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x260
[0x260:0x261]
---
Predecessors: [0x27f, 0x282]
Successors: []
---
0x260 JUMPDEST
0x261 STOP
---
0x260: JUMPDEST 
0x261: STOP 
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]

================================

Block 0x262
[0x262:0x27e]
---
Predecessors: [0x1a5]
Successors: []
---
0x262 JUMPDEST
0x263 PUSH1 0x40
0x265 DUP1
0x266 MLOAD
0x267 PUSH1 0x1
0x269 PUSH1 0xa0
0x26b PUSH1 0x2
0x26d EXP
0x26e SUB
0x26f SWAP3
0x270 SWAP1
0x271 SWAP3
0x272 AND
0x273 DUP3
0x274 MSTORE
0x275 MLOAD
0x276 SWAP1
0x277 DUP2
0x278 SWAP1
0x279 SUB
0x27a PUSH1 0x20
0x27c ADD
0x27d SWAP1
0x27e RETURN
---
0x262: JUMPDEST 
0x263: V199 = 0x40
0x266: V200 = M[0x40]
0x267: V201 = 0x1
0x269: V202 = 0xa0
0x26b: V203 = 0x2
0x26d: V204 = EXP 0x2 0xa0
0x26e: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x272: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x274: M[V200] = V206
0x275: V207 = M[0x40]
0x279: V208 = SUB V200 V207
0x27a: V209 = 0x20
0x27c: V210 = ADD 0x20 V208
0x27e: RETURN V207 V210
---
Entry stack: [V10, 0x262, V146]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x262]

================================

Block 0x27f
[0x27f:0x281]
---
Predecessors: [0x185, 0x2d3]
Successors: [0x260, 0x31d]
---
0x27f JUMPDEST
0x280 POP
0x281 JUMP
---
0x27f: JUMPDEST 
0x281: JUMP S1
---
Entry stack: [V10, S6, S5, {0x27f, 0x282}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S6, S5, {0x27f, 0x282}, S3, S2]

================================

Block 0x282
[0x282:0x283]
---
Predecessors: [0x2d3]
Successors: [0x260]
---
0x282 JUMPDEST
0x283 JUMP
---
0x282: JUMPDEST 
0x283: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x284
[0x284:0x2d2]
---
Predecessors: [0x322]
Successors: [0x2d3]
---
0x284 JUMPDEST
0x285 PUSH1 0x40
0x287 DUP1
0x288 MLOAD
0x289 CALLER
0x28a PUSH1 0x1
0x28c PUSH1 0xa0
0x28e PUSH1 0x2
0x290 EXP
0x291 SUB
0x292 SWAP1
0x293 DUP2
0x294 AND
0x295 DUP3
0x296 MSTORE
0x297 CALLVALUE
0x298 PUSH1 0x20
0x29a DUP4
0x29b ADD
0x29c MSTORE
0x29d DUP2
0x29e DUP4
0x29f ADD
0x2a0 DUP5
0x2a1 SWAP1
0x2a2 MSTORE
0x2a3 SWAP2
0x2a4 MLOAD
0x2a5 SWAP2
0x2a6 DUP5
0x2a7 AND
0x2a8 SWAP2
0x2a9 PUSH32 0x660c325e06928b5007bda0b9f8b5ce13ff32f2ccabf94c004b1b1994cb718605
0x2ca SWAP2
0x2cb DUP2
0x2cc SWAP1
0x2cd SUB
0x2ce PUSH1 0x60
0x2d0 ADD
0x2d1 SWAP1
0x2d2 LOG2
---
0x284: JUMPDEST 
0x285: V211 = 0x40
0x288: V212 = M[0x40]
0x289: V213 = CALLER
0x28a: V214 = 0x1
0x28c: V215 = 0xa0
0x28e: V216 = 0x2
0x290: V217 = EXP 0x2 0xa0
0x291: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x296: M[V212] = V219
0x297: V220 = CALLVALUE
0x298: V221 = 0x20
0x29b: V222 = ADD V212 0x20
0x29c: M[V222] = V220
0x29f: V223 = ADD 0x40 V212
0x2a2: M[V223] = S0
0x2a4: V224 = M[0x40]
0x2a7: V225 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V226 = 0x660c325e06928b5007bda0b9f8b5ce13ff32f2ccabf94c004b1b1994cb718605
0x2cd: V227 = SUB V212 V224
0x2ce: V228 = 0x60
0x2d0: V229 = ADD 0x60 V227
0x2d2: LOG V224 V229 0x660c325e06928b5007bda0b9f8b5ce13ff32f2ccabf94c004b1b1994cb718605 V225
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x284, 0x31d]
Successors: [0x27f, 0x282]
---
0x2d3 JUMPDEST
0x2d4 POP
0x2d5 POP
0x2d6 JUMP
---
0x2d3: JUMPDEST 
0x2d6: JUMP {0x27f, 0x282}
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S4, S3]

================================

Block 0x2d7
[0x2d7:0x2e0]
---
Predecessors: [0x97]
Successors: [0x2e1, 0x322]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x0
0x2da CALLVALUE
0x2db GT
0x2dc ISZERO
0x2dd PUSH2 0x322
0x2e0 JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V230 = 0x0
0x2da: V231 = CALLVALUE
0x2db: V232 = GT V231 0x0
0x2dc: V233 = ISZERO V232
0x2dd: V234 = 0x322
0x2e0: JUMPI 0x322 V233
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]

================================

Block 0x2e1
[0x2e1:0x31c]
---
Predecessors: [0x2d7]
Successors: [0xec]
---
0x2e1 PUSH1 0x40
0x2e3 DUP1
0x2e4 MLOAD
0x2e5 DUP1
0x2e6 DUP3
0x2e7 ADD
0x2e8 SWAP1
0x2e9 SWAP2
0x2ea MSTORE
0x2eb PUSH1 0x7
0x2ed DUP2
0x2ee MSTORE
0x2ef PUSH32 0x6e6f457468657200000000000000000000000000000000000000000000000000
0x310 PUSH1 0x20
0x312 DUP3
0x313 ADD
0x314 MSTORE
0x315 PUSH2 0x31d
0x318 SWAP1
0x319 PUSH2 0xec
0x31c JUMP
---
0x2e1: V235 = 0x40
0x2e4: V236 = M[0x40]
0x2e7: V237 = ADD 0x40 V236
0x2ea: M[0x40] = V237
0x2eb: V238 = 0x7
0x2ee: M[V236] = 0x7
0x2ef: V239 = 0x6e6f457468657200000000000000000000000000000000000000000000000000
0x310: V240 = 0x20
0x313: V241 = ADD V236 0x20
0x314: M[V241] = 0x6e6f457468657200000000000000000000000000000000000000000000000000
0x315: V242 = 0x31d
0x319: V243 = 0xec
0x31c: JUMP 0xec
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 0
Stack additions: [0x31d, V236]
Exit stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0, 0x31d, V236]

================================

Block 0x31d
[0x31d:0x321]
---
Predecessors: [0x27f]
Successors: [0x2d3]
---
0x31d JUMPDEST
0x31e PUSH2 0x2d3
0x321 JUMP
---
0x31d: JUMPDEST 
0x31e: V244 = 0x2d3
0x321: JUMP 0x2d3
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]

================================

Block 0x322
[0x322:0x349]
---
Predecessors: [0x2d7]
Successors: [0x284, 0x34a]
---
0x322 JUMPDEST
0x323 PUSH1 0x40
0x325 MLOAD
0x326 PUSH1 0x1
0x328 PUSH1 0xa0
0x32a PUSH1 0x2
0x32c EXP
0x32d SUB
0x32e DUP4
0x32f AND
0x330 SWAP1
0x331 DUP3
0x332 SWAP1
0x333 PUSH1 0x0
0x335 DUP2
0x336 DUP2
0x337 DUP2
0x338 DUP6
0x339 DUP8
0x33a PUSH2 0x8502
0x33d GAS
0x33e SUB
0x33f CALL
0x340 SWAP3
0x341 POP
0x342 POP
0x343 POP
0x344 ISZERO
0x345 ISZERO
0x346 PUSH2 0x284
0x349 JUMPI
---
0x322: JUMPDEST 
0x323: V245 = 0x40
0x325: V246 = M[0x40]
0x326: V247 = 0x1
0x328: V248 = 0xa0
0x32a: V249 = 0x2
0x32c: V250 = EXP 0x2 0xa0
0x32d: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32f: V252 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x333: V253 = 0x0
0x33a: V254 = 0x8502
0x33d: V255 = GAS
0x33e: V256 = SUB V255 0x8502
0x33f: V257 = CALL V256 V252 S0 V246 0x0 V246 0x0
0x344: V258 = ISZERO V257
0x345: V259 = ISZERO V258
0x346: V260 = 0x284
0x349: JUMPI 0x284 V259
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]

================================

Block 0x34a
[0x34a:0x385]
---
Predecessors: [0x322]
Successors: [0xec]
---
0x34a PUSH1 0x40
0x34c DUP1
0x34d MLOAD
0x34e DUP1
0x34f DUP3
0x350 ADD
0x351 SWAP1
0x352 SWAP2
0x353 MSTORE
0x354 PUSH1 0x11
0x356 DUP2
0x357 MSTORE
0x358 PUSH32 0x7061794f75743a73656e644661696c6564000000000000000000000000000000
0x379 PUSH1 0x20
0x37b DUP3
0x37c ADD
0x37d MSTORE
0x37e PUSH2 0x31d
0x381 SWAP1
0x382 PUSH2 0xec
0x385 JUMP
---
0x34a: V261 = 0x40
0x34d: V262 = M[0x40]
0x350: V263 = ADD 0x40 V262
0x353: M[0x40] = V263
0x354: V264 = 0x11
0x357: M[V262] = 0x11
0x358: V265 = 0x7061794f75743a73656e644661696c6564000000000000000000000000000000
0x379: V266 = 0x20
0x37c: V267 = ADD V262 0x20
0x37d: M[V267] = 0x7061794f75743a73656e644661696c6564000000000000000000000000000000
0x37e: V268 = 0x31d
0x382: V269 = 0xec
0x385: JUMP 0xec
---
Entry stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0]
Stack pops: 0
Stack additions: [0x31d, V262]
Exit stack: [V10, S4, S3, {0x27f, 0x282}, S1, S0, 0x31d, V262]

================================

Function 0:
Public function signature: 0x51fa7efd
Entry block: 0x7a
Exit block: 0x260
Body: 0x7a, 0x260, 0x27f

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x1a5
Exit block: 0x262
Body: 0x1a5, 0x262

Function 2:
Public function signature: 0xb1a8b25a
Entry block: 0x1bc
Exit block: 0x260
Body: 0x1bc, 0x260, 0x282

Function 3:
Public function signature: 0xb656e9f4
Entry block: 0x1fd
Exit block: 0x246
Body: 0x1fd, 0x246

Function 4:
Public function signature: 0xfc44fd28
Entry block: 0x209
Exit block: 0x260
Body: 0x209, 0x260, 0x282

Function 5:
Public fallback function
Entry block: 0x4b
Exit block: 0x246
Body: 0x4b, 0x76, 0x246, 0x25a

Function 6:
Private function
Entry block: 0x97
Exit block: 0x2d3
Body: 0x97, 0xb4, 0x284, 0x2d3, 0x2d7, 0x2e1, 0x31d, 0x322, 0x34a

Function 7:
Private function
Entry block: 0xec
Exit block: 0x27f
Body: 0xec, 0x16c, 0x185, 0x27f

