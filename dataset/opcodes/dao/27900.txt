Block 0x0
[0x0:0x4d]
---
Predecessors: []
Successors: [0x4e, 0xcd]
---
0x0 PUSH1 0x0
0x2 PUSH2 0x47f
0x5 MSTORE8
0x6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x24 PUSH1 0x0
0x26 CALLDATALOAD
0x27 DIV
0x28 PUSH3 0x391263
0x2c PUSH1 0x20
0x2e MSTORE
0x2f PUSH7 0x38d7ea4c68000
0x37 PUSH1 0x40
0x39 MSTORE
0x3a PUSH4 0x1e13380
0x3f PUSH1 0x60
0x41 MSTORE
0x42 PUSH4 0xdf83284d
0x47 DUP2
0x48 EQ
0x49 ISZERO
0x4a PUSH2 0xcd
0x4d JUMPI
---
0x0: V0 = 0x0
0x2: V1 = 0x47f
0x5: M8[0x47f] = 0x0
0x6: V2 = 0x100000000000000000000000000000000000000000000000000000000
0x24: V3 = 0x0
0x26: V4 = CALLDATALOAD 0x0
0x27: V5 = DIV V4 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0x391263
0x2c: V7 = 0x20
0x2e: M[0x20] = 0x391263
0x2f: V8 = 0x38d7ea4c68000
0x37: V9 = 0x40
0x39: M[0x40] = 0x38d7ea4c68000
0x3a: V10 = 0x1e13380
0x3f: V11 = 0x60
0x41: M[0x60] = 0x1e13380
0x42: V12 = 0xdf83284d
0x48: V13 = EQ V5 0xdf83284d
0x49: V14 = ISZERO V13
0x4a: V15 = 0xcd
0x4d: JUMPI 0xcd V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x4e
[0x4e:0x59]
---
Predecessors: [0x0]
Successors: [0x5a]
---
0x4e PUSH1 0x4
0x50 CALLDATALOAD
0x51 PUSH1 0xa0
0x53 MSTORE
0x54 PUSH1 0x24
0x56 CALLDATALOAD
0x57 PUSH1 0xc0
0x59 MSTORE
---
0x4e: V16 = 0x4
0x50: V17 = CALLDATALOAD 0x4
0x51: V18 = 0xa0
0x53: M[0xa0] = V17
0x54: V19 = 0x24
0x56: V20 = CALLDATALOAD 0x24
0x57: V21 = 0xc0
0x59: M[0xc0] = V20
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x5a
[0x5a:0x69]
---
Predecessors: [0x4e, 0x6a]
Successors: [0x6a, 0x8b]
---
0x5a JUMPDEST
0x5b PUSH1 0x2
0x5d PUSH1 0x20
0x5f MLOAD
0x60 SDIV
0x61 PUSH1 0xc0
0x63 MLOAD
0x64 SGT
0x65 ISZERO
0x66 PUSH2 0x8b
0x69 JUMPI
---
0x5a: JUMPDEST 
0x5b: V22 = 0x2
0x5d: V23 = 0x20
0x5f: V24 = M[0x20]
0x60: V25 = SDIV V24 0x2
0x61: V26 = 0xc0
0x63: V27 = M[0xc0]
0x64: V28 = SGT V27 V25
0x65: V29 = ISZERO V28
0x66: V30 = 0x8b
0x69: JUMPI 0x8b V29
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x6a
[0x6a:0x8a]
---
Predecessors: [0x5a]
Successors: [0x5a]
---
0x6a PUSH3 0x989680
0x6e PUSH3 0x5c8c9a
0x72 PUSH1 0xa0
0x74 MLOAD
0x75 MUL
0x76 SDIV
0x77 PUSH1 0xa0
0x79 MSTORE
0x7a PUSH1 0x2
0x7c PUSH1 0x20
0x7e MLOAD
0x7f SDIV
0x80 PUSH1 0xc0
0x82 MLOAD
0x83 SUB
0x84 PUSH1 0xc0
0x86 MSTORE
0x87 PUSH2 0x5a
0x8a JUMP
---
0x6a: V31 = 0x989680
0x6e: V32 = 0x5c8c9a
0x72: V33 = 0xa0
0x74: V34 = M[0xa0]
0x75: V35 = MUL V34 0x5c8c9a
0x76: V36 = SDIV V35 0x989680
0x77: V37 = 0xa0
0x79: M[0xa0] = V36
0x7a: V38 = 0x2
0x7c: V39 = 0x20
0x7e: V40 = M[0x20]
0x7f: V41 = SDIV V40 0x2
0x80: V42 = 0xc0
0x82: V43 = M[0xc0]
0x83: V44 = SUB V43 V41
0x84: V45 = 0xc0
0x86: M[0xc0] = V44
0x87: V46 = 0x5a
0x8a: JUMP 0x5a
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x8b
[0x8b:0xcc]
---
Predecessors: [0x5a]
Successors: []
---
0x8b JUMPDEST
0x8c PUSH1 0x6
0x8e PUSH1 0x3
0x90 PUSH1 0x20
0x92 MLOAD
0x93 EXP
0x94 PUSH1 0x3
0x96 PUSH1 0xc0
0x98 MLOAD
0x99 EXP
0x9a PUSH1 0xa0
0x9c MLOAD
0x9d MUL
0x9e SDIV
0x9f SDIV
0xa0 PUSH1 0x2
0xa2 PUSH1 0x2
0xa4 PUSH1 0x20
0xa6 MLOAD
0xa7 EXP
0xa8 PUSH1 0x2
0xaa PUSH1 0xc0
0xac MLOAD
0xad EXP
0xae PUSH1 0xa0
0xb0 MLOAD
0xb1 MUL
0xb2 SDIV
0xb3 SDIV
0xb4 PUSH1 0x20
0xb6 MLOAD
0xb7 PUSH1 0xc0
0xb9 MLOAD
0xba PUSH1 0xa0
0xbc MLOAD
0xbd MUL
0xbe SDIV
0xbf PUSH1 0xa0
0xc1 MLOAD
0xc2 SUB
0xc3 ADD
0xc4 SUB
0xc5 PUSH1 0xe0
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca PUSH1 0xe0
0xcc RETURN
---
0x8b: JUMPDEST 
0x8c: V47 = 0x6
0x8e: V48 = 0x3
0x90: V49 = 0x20
0x92: V50 = M[0x20]
0x93: V51 = EXP V50 0x3
0x94: V52 = 0x3
0x96: V53 = 0xc0
0x98: V54 = M[0xc0]
0x99: V55 = EXP V54 0x3
0x9a: V56 = 0xa0
0x9c: V57 = M[0xa0]
0x9d: V58 = MUL V57 V55
0x9e: V59 = SDIV V58 V51
0x9f: V60 = SDIV V59 0x6
0xa0: V61 = 0x2
0xa2: V62 = 0x2
0xa4: V63 = 0x20
0xa6: V64 = M[0x20]
0xa7: V65 = EXP V64 0x2
0xa8: V66 = 0x2
0xaa: V67 = 0xc0
0xac: V68 = M[0xc0]
0xad: V69 = EXP V68 0x2
0xae: V70 = 0xa0
0xb0: V71 = M[0xa0]
0xb1: V72 = MUL V71 V69
0xb2: V73 = SDIV V72 V65
0xb3: V74 = SDIV V73 0x2
0xb4: V75 = 0x20
0xb6: V76 = M[0x20]
0xb7: V77 = 0xc0
0xb9: V78 = M[0xc0]
0xba: V79 = 0xa0
0xbc: V80 = M[0xa0]
0xbd: V81 = MUL V80 V78
0xbe: V82 = SDIV V81 V76
0xbf: V83 = 0xa0
0xc1: V84 = M[0xa0]
0xc2: V85 = SUB V84 V82
0xc3: V86 = ADD V85 V74
0xc4: V87 = SUB V86 V60
0xc5: V88 = 0xe0
0xc7: M[0xe0] = V87
0xc8: V89 = 0x20
0xca: V90 = 0xe0
0xcc: RETURN 0xe0 0x20
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0xcd
[0xcd:0xd9]
---
Predecessors: [0x0]
Successors: [0xda, 0x2a0]
---
0xcd JUMPDEST
0xce PUSH4 0x1aa3a008
0xd3 DUP2
0xd4 EQ
0xd5 ISZERO
0xd6 PUSH2 0x2a0
0xd9 JUMPI
---
0xcd: JUMPDEST 
0xce: V91 = 0x1aa3a008
0xd4: V92 = EQ V5 0x1aa3a008
0xd5: V93 = ISZERO V92
0xd6: V94 = 0x2a0
0xd9: JUMPI 0x2a0 V93
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0xda
[0xda:0xe9]
---
Predecessors: [0xcd]
Successors: [0xea, 0x105]
---
0xda PUSH1 0x40
0xdc MLOAD
0xdd CALLVALUE
0xde PUSH1 0xc
0xe0 CALLER
0xe1 MUL
0xe2 SLOAD
0xe3 ADD
0xe4 SLT
0xe5 ISZERO
0xe6 PUSH2 0x105
0xe9 JUMPI
---
0xda: V95 = 0x40
0xdc: V96 = M[0x40]
0xdd: V97 = CALLVALUE
0xde: V98 = 0xc
0xe0: V99 = CALLER
0xe1: V100 = MUL V99 0xc
0xe2: V101 = S[V100]
0xe3: V102 = ADD V101 V97
0xe4: V103 = SLT V102 V96
0xe5: V104 = ISZERO V103
0xe6: V105 = 0x105
0xe9: JUMPI 0x105 V104
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0xea
[0xea:0x104]
---
Predecessors: [0xda]
Successors: []
---
0xea PUSH1 0x0
0xec PUSH1 0x0
0xee PUSH1 0x0
0xf0 PUSH1 0x0
0xf2 CALLVALUE
0xf3 CALLER
0xf4 PUSH2 0x1388
0xf7 CALL
0xf8 POP
0xf9 PUSH1 0x0
0xfb PUSH2 0x100
0xfe MSTORE
0xff PUSH1 0x20
0x101 PUSH2 0x100
0x104 RETURN
---
0xea: V106 = 0x0
0xec: V107 = 0x0
0xee: V108 = 0x0
0xf0: V109 = 0x0
0xf2: V110 = CALLVALUE
0xf3: V111 = CALLER
0xf4: V112 = 0x1388
0xf7: V113 = CALL 0x1388 V111 V110 0x0 0x0 0x0 0x0
0xf9: V114 = 0x0
0xfb: V115 = 0x100
0xfe: M[0x100] = 0x0
0xff: V116 = 0x20
0x101: V117 = 0x100
0x104: RETURN 0x100 0x20
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x105
[0x105:0x112]
---
Predecessors: [0xda]
Successors: [0x113, 0x1f2]
---
0x105 JUMPDEST
0x106 PUSH1 0x0
0x108 PUSH1 0xc
0x10a CALLER
0x10b MUL
0x10c SLOAD
0x10d EQ
0x10e ISZERO
0x10f PUSH2 0x1f2
0x112 JUMPI
---
0x105: JUMPDEST 
0x106: V118 = 0x0
0x108: V119 = 0xc
0x10a: V120 = CALLER
0x10b: V121 = MUL V120 0xc
0x10c: V122 = S[V121]
0x10d: V123 = EQ V122 0x0
0x10e: V124 = ISZERO V123
0x10f: V125 = 0x1f2
0x112: JUMPI 0x1f2 V124
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x113
[0x113:0x1f1]
---
Predecessors: [0x105]
Successors: [0x28a]
---
0x113 CALLER
0x114 PUSH21 0xc0000000000000010000000000000000000000000
0x12a SLOAD
0x12b PUSH21 0xc0000000000000000000000000000000000000000
0x141 ADD
0x142 SSTORE
0x143 PUSH1 0x1
0x145 PUSH21 0xc0000000000000010000000000000000000000000
0x15b SLOAD
0x15c ADD
0x15d PUSH21 0xc0000000000000010000000000000000000000000
0x173 SSTORE
0x174 CALLVALUE
0x175 PUSH1 0xc
0x177 CALLER
0x178 MUL
0x179 SSTORE
0x17a PUSH1 0x1c
0x17c PUSH1 0x40
0x17e MSIZE
0x17f SWAP1
0x180 MSIZE
0x181 ADD
0x182 PUSH1 0x0
0x184 SWAP1
0x185 MSTORE
0x186 ADD
0x187 CALLVALUE
0x188 DUP2
0x189 MSTORE
0x18a CALLER
0x18b PUSH32 0x17af63cbc1fd2f415358d4edda52ede90159c09397285dcedaecb33c5a6d5e02
0x1ac PUSH1 0x20
0x1ae DUP4
0x1af LOG2
0x1b0 POP
0x1b1 PUSH1 0x1c
0x1b3 PUSH1 0x60
0x1b5 MSIZE
0x1b6 SWAP1
0x1b7 MSIZE
0x1b8 ADD
0x1b9 PUSH1 0x0
0x1bb SWAP1
0x1bc MSTORE
0x1bd ADD
0x1be CALLVALUE
0x1bf DUP2
0x1c0 MSTORE
0x1c1 CALLVALUE
0x1c2 PUSH1 0x20
0x1c4 DUP3
0x1c5 ADD
0x1c6 MSTORE
0x1c7 CALLER
0x1c8 PUSH32 0x82add6dcb5f515082d024c78eb6496fd6d7e1a037e33403f23188b6c568336e8
0x1e9 PUSH1 0x40
0x1eb DUP4
0x1ec LOG2
0x1ed POP
0x1ee PUSH2 0x28a
0x1f1 JUMP
---
0x113: V126 = CALLER
0x114: V127 = 0xc0000000000000010000000000000000000000000
0x12a: V128 = S[0xc0000000000000010000000000000000000000000]
0x12b: V129 = 0xc0000000000000000000000000000000000000000
0x141: V130 = ADD 0xc0000000000000000000000000000000000000000 V128
0x142: S[V130] = V126
0x143: V131 = 0x1
0x145: V132 = 0xc0000000000000010000000000000000000000000
0x15b: V133 = S[0xc0000000000000010000000000000000000000000]
0x15c: V134 = ADD V133 0x1
0x15d: V135 = 0xc0000000000000010000000000000000000000000
0x173: S[0xc0000000000000010000000000000000000000000] = V134
0x174: V136 = CALLVALUE
0x175: V137 = 0xc
0x177: V138 = CALLER
0x178: V139 = MUL V138 0xc
0x179: S[V139] = V136
0x17a: V140 = 0x1c
0x17c: V141 = 0x40
0x17e: V142 = MSIZE
0x180: V143 = MSIZE
0x181: V144 = ADD V143 0x40
0x182: V145 = 0x0
0x185: M[V144] = 0x0
0x186: V146 = ADD V142 0x1c
0x187: V147 = CALLVALUE
0x189: M[V146] = V147
0x18a: V148 = CALLER
0x18b: V149 = 0x17af63cbc1fd2f415358d4edda52ede90159c09397285dcedaecb33c5a6d5e02
0x1ac: V150 = 0x20
0x1af: LOG V146 0x20 0x17af63cbc1fd2f415358d4edda52ede90159c09397285dcedaecb33c5a6d5e02 V148
0x1b1: V151 = 0x1c
0x1b3: V152 = 0x60
0x1b5: V153 = MSIZE
0x1b7: V154 = MSIZE
0x1b8: V155 = ADD V154 0x60
0x1b9: V156 = 0x0
0x1bc: M[V155] = 0x0
0x1bd: V157 = ADD V153 0x1c
0x1be: V158 = CALLVALUE
0x1c0: M[V157] = V158
0x1c1: V159 = CALLVALUE
0x1c2: V160 = 0x20
0x1c5: V161 = ADD V157 0x20
0x1c6: M[V161] = V159
0x1c7: V162 = CALLER
0x1c8: V163 = 0x82add6dcb5f515082d024c78eb6496fd6d7e1a037e33403f23188b6c568336e8
0x1e9: V164 = 0x40
0x1ec: LOG V157 0x40 0x82add6dcb5f515082d024c78eb6496fd6d7e1a037e33403f23188b6c568336e8 V162
0x1ee: V165 = 0x28a
0x1f1: JUMP 0x28a
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x1f2
[0x1f2:0x289]
---
Predecessors: [0x105]
Successors: [0x28a]
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0xc
0x1f5 CALLER
0x1f6 MUL
0x1f7 PUSH1 0x1
0x1f9 ADD
0x1fa SLOAD
0x1fb TIMESTAMP
0x1fc SUB
0x1fd PUSH2 0x140
0x200 MSTORE
0x201 CALLVALUE
0x202 PUSH1 0x1c
0x204 PUSH1 0x64
0x206 MSIZE
0x207 SWAP1
0x208 MSIZE
0x209 ADD
0x20a PUSH1 0x0
0x20c SWAP1
0x20d MSTORE
0x20e ADD
0x20f PUSH4 0xdf83284d
0x214 PUSH1 0x1c
0x216 DUP3
0x217 SUB
0x218 MSTORE
0x219 PUSH1 0xc
0x21b CALLER
0x21c MUL
0x21d SLOAD
0x21e PUSH1 0x4
0x220 DUP3
0x221 ADD
0x222 MSTORE
0x223 PUSH2 0x140
0x226 MLOAD
0x227 PUSH1 0x24
0x229 DUP3
0x22a ADD
0x22b MSTORE
0x22c PUSH1 0x20
0x22e PUSH2 0x160
0x231 PUSH1 0x44
0x233 DUP4
0x234 PUSH1 0x0
0x236 ADDRESS
0x237 PUSH1 0x2d
0x239 GAS
0x23a SUB
0x23b CALL
0x23c POP
0x23d PUSH2 0x160
0x240 MLOAD
0x241 SWAP1
0x242 POP
0x243 ADD
0x244 PUSH1 0xc
0x246 CALLER
0x247 MUL
0x248 SSTORE
0x249 PUSH1 0x1c
0x24b PUSH1 0x60
0x24d MSIZE
0x24e SWAP1
0x24f MSIZE
0x250 ADD
0x251 PUSH1 0x0
0x253 SWAP1
0x254 MSTORE
0x255 ADD
0x256 CALLVALUE
0x257 DUP2
0x258 MSTORE
0x259 PUSH1 0xc
0x25b CALLER
0x25c MUL
0x25d SLOAD
0x25e PUSH1 0x20
0x260 DUP3
0x261 ADD
0x262 MSTORE
0x263 CALLER
0x264 PUSH32 0x82add6dcb5f515082d024c78eb6496fd6d7e1a037e33403f23188b6c568336e8
0x285 PUSH1 0x40
0x287 DUP4
0x288 LOG2
0x289 POP
---
0x1f2: JUMPDEST 
0x1f3: V166 = 0xc
0x1f5: V167 = CALLER
0x1f6: V168 = MUL V167 0xc
0x1f7: V169 = 0x1
0x1f9: V170 = ADD 0x1 V168
0x1fa: V171 = S[V170]
0x1fb: V172 = TIMESTAMP
0x1fc: V173 = SUB V172 V171
0x1fd: V174 = 0x140
0x200: M[0x140] = V173
0x201: V175 = CALLVALUE
0x202: V176 = 0x1c
0x204: V177 = 0x64
0x206: V178 = MSIZE
0x208: V179 = MSIZE
0x209: V180 = ADD V179 0x64
0x20a: V181 = 0x0
0x20d: M[V180] = 0x0
0x20e: V182 = ADD V178 0x1c
0x20f: V183 = 0xdf83284d
0x214: V184 = 0x1c
0x217: V185 = SUB V182 0x1c
0x218: M[V185] = 0xdf83284d
0x219: V186 = 0xc
0x21b: V187 = CALLER
0x21c: V188 = MUL V187 0xc
0x21d: V189 = S[V188]
0x21e: V190 = 0x4
0x221: V191 = ADD V182 0x4
0x222: M[V191] = V189
0x223: V192 = 0x140
0x226: V193 = M[0x140]
0x227: V194 = 0x24
0x22a: V195 = ADD V182 0x24
0x22b: M[V195] = V193
0x22c: V196 = 0x20
0x22e: V197 = 0x160
0x231: V198 = 0x44
0x234: V199 = 0x0
0x236: V200 = ADDRESS
0x237: V201 = 0x2d
0x239: V202 = GAS
0x23a: V203 = SUB V202 0x2d
0x23b: V204 = CALL V203 V200 0x0 V182 0x44 0x160 0x20
0x23d: V205 = 0x160
0x240: V206 = M[0x160]
0x243: V207 = ADD V206 V175
0x244: V208 = 0xc
0x246: V209 = CALLER
0x247: V210 = MUL V209 0xc
0x248: S[V210] = V207
0x249: V211 = 0x1c
0x24b: V212 = 0x60
0x24d: V213 = MSIZE
0x24f: V214 = MSIZE
0x250: V215 = ADD V214 0x60
0x251: V216 = 0x0
0x254: M[V215] = 0x0
0x255: V217 = ADD V213 0x1c
0x256: V218 = CALLVALUE
0x258: M[V217] = V218
0x259: V219 = 0xc
0x25b: V220 = CALLER
0x25c: V221 = MUL V220 0xc
0x25d: V222 = S[V221]
0x25e: V223 = 0x20
0x261: V224 = ADD V217 0x20
0x262: M[V224] = V222
0x263: V225 = CALLER
0x264: V226 = 0x82add6dcb5f515082d024c78eb6496fd6d7e1a037e33403f23188b6c568336e8
0x285: V227 = 0x40
0x288: LOG V217 0x40 0x82add6dcb5f515082d024c78eb6496fd6d7e1a037e33403f23188b6c568336e8 V225
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x28a
[0x28a:0x29f]
---
Predecessors: [0x113, 0x1f2]
Successors: []
---
0x28a JUMPDEST
0x28b TIMESTAMP
0x28c PUSH1 0xc
0x28e CALLER
0x28f MUL
0x290 PUSH1 0x1
0x292 ADD
0x293 SSTORE
0x294 PUSH1 0x1
0x296 PUSH2 0x180
0x299 MSTORE
0x29a PUSH1 0x20
0x29c PUSH2 0x180
0x29f RETURN
---
0x28a: JUMPDEST 
0x28b: V228 = TIMESTAMP
0x28c: V229 = 0xc
0x28e: V230 = CALLER
0x28f: V231 = MUL V230 0xc
0x290: V232 = 0x1
0x292: V233 = ADD 0x1 V231
0x293: S[V233] = V228
0x294: V234 = 0x1
0x296: V235 = 0x180
0x299: M[0x180] = 0x1
0x29a: V236 = 0x20
0x29c: V237 = 0x180
0x29f: RETURN 0x180 0x20
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x2a0
[0x2a0:0x2ac]
---
Predecessors: [0xcd]
Successors: [0x2ad, 0x40f]
---
0x2a0 JUMPDEST
0x2a1 PUSH4 0x32193f9
0x2a6 DUP2
0x2a7 EQ
0x2a8 ISZERO
0x2a9 PUSH2 0x40f
0x2ac JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V238 = 0x32193f9
0x2a7: V239 = EQ V5 0x32193f9
0x2a8: V240 = ISZERO V239
0x2a9: V241 = 0x40f
0x2ac: JUMPI 0x40f V240
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x2ad
[0x2ad:0x2d9]
---
Predecessors: [0x2a0]
Successors: [0x2da, 0x2df]
---
0x2ad CALLDATASIZE
0x2ae MSIZE
0x2af SWAP1
0x2b0 MSIZE
0x2b1 ADD
0x2b2 PUSH1 0x0
0x2b4 SWAP1
0x2b5 MSTORE
0x2b6 CALLDATASIZE
0x2b7 PUSH1 0x4
0x2b9 DUP3
0x2ba CALLDATACOPY
0x2bb PUSH1 0x4
0x2bd CALLDATALOAD
0x2be PUSH1 0x20
0x2c0 DUP3
0x2c1 ADD
0x2c2 ADD
0x2c3 PUSH2 0x1c0
0x2c6 MSTORE
0x2c7 POP
0x2c8 PUSH2 0x120
0x2cb PUSH1 0x20
0x2cd PUSH2 0x1c0
0x2d0 MLOAD
0x2d1 SUB
0x2d2 MLOAD
0x2d3 SGT
0x2d4 DUP1
0x2d5 ISZERO
0x2d6 PUSH2 0x2df
0x2d9 JUMPI
---
0x2ad: V242 = CALLDATASIZE
0x2ae: V243 = MSIZE
0x2b0: V244 = MSIZE
0x2b1: V245 = ADD V244 V242
0x2b2: V246 = 0x0
0x2b5: M[V245] = 0x0
0x2b6: V247 = CALLDATASIZE
0x2b7: V248 = 0x4
0x2ba: CALLDATACOPY V243 0x4 V247
0x2bb: V249 = 0x4
0x2bd: V250 = CALLDATALOAD 0x4
0x2be: V251 = 0x20
0x2c1: V252 = ADD V243 0x20
0x2c2: V253 = ADD V252 V250
0x2c3: V254 = 0x1c0
0x2c6: M[0x1c0] = V253
0x2c8: V255 = 0x120
0x2cb: V256 = 0x20
0x2cd: V257 = 0x1c0
0x2d0: V258 = M[0x1c0]
0x2d1: V259 = SUB V258 0x20
0x2d2: V260 = M[V259]
0x2d3: V261 = SGT V260 0x120
0x2d5: V262 = ISZERO V261
0x2d6: V263 = 0x2df
0x2d9: JUMPI 0x2df V262
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [V261]
Exit stack: [V5, V261]

================================

Block 0x2da
[0x2da:0x2de]
---
Predecessors: [0x2ad]
Successors: [0x2e6]
---
0x2da DUP1
0x2db PUSH2 0x2e6
0x2de JUMP
---
0x2db: V264 = 0x2e6
0x2de: JUMP 0x2e6
---
Entry stack: [V5, V261]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V5, V261, V261]

================================

Block 0x2df
[0x2df:0x2e5]
---
Predecessors: [0x2ad]
Successors: [0x2e6]
---
0x2df JUMPDEST
0x2e0 PUSH1 0xc
0x2e2 CALLER
0x2e3 MUL
0x2e4 SLOAD
0x2e5 ISZERO
---
0x2df: JUMPDEST 
0x2e0: V265 = 0xc
0x2e2: V266 = CALLER
0x2e3: V267 = MUL V266 0xc
0x2e4: V268 = S[V267]
0x2e5: V269 = ISZERO V268
---
Entry stack: [V5, V261]
Stack pops: 0
Stack additions: [V269]
Exit stack: [V5, V261, V269]

================================

Block 0x2e6
[0x2e6:0x2ed]
---
Predecessors: [0x2da, 0x2df]
Successors: [0x2ee, 0x2fa]
---
0x2e6 JUMPDEST
0x2e7 SWAP1
0x2e8 POP
0x2e9 ISZERO
0x2ea PUSH2 0x2fa
0x2ed JUMPI
---
0x2e6: JUMPDEST 
0x2e9: V270 = ISZERO S0
0x2ea: V271 = 0x2fa
0x2ed: JUMPI 0x2fa V270
---
Entry stack: [V5, V261, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x2ee
[0x2ee:0x2f9]
---
Predecessors: [0x2e6]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 PUSH2 0x200
0x2f3 MSTORE
0x2f4 PUSH1 0x20
0x2f6 PUSH2 0x200
0x2f9 RETURN
---
0x2ee: V272 = 0x0
0x2f0: V273 = 0x200
0x2f3: M[0x200] = 0x0
0x2f4: V274 = 0x20
0x2f6: V275 = 0x200
0x2f9: RETURN 0x200 0x20
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x2fa
[0x2fa:0x30f]
---
Predecessors: [0x2e6]
Successors: [0x310]
---
0x2fa JUMPDEST
0x2fb PUSH1 0x20
0x2fd PUSH2 0x1c0
0x300 MLOAD
0x301 SUB
0x302 MLOAD
0x303 PUSH1 0xc
0x305 CALLER
0x306 MUL
0x307 PUSH1 0x2
0x309 ADD
0x30a SSTORE
0x30b PUSH1 0x0
0x30d PUSH1 0xc0
0x30f MSTORE
---
0x2fa: JUMPDEST 
0x2fb: V276 = 0x20
0x2fd: V277 = 0x1c0
0x300: V278 = M[0x1c0]
0x301: V279 = SUB V278 0x20
0x302: V280 = M[V279]
0x303: V281 = 0xc
0x305: V282 = CALLER
0x306: V283 = MUL V282 0xc
0x307: V284 = 0x2
0x309: V285 = ADD 0x2 V283
0x30a: S[V285] = V280
0x30b: V286 = 0x0
0x30d: V287 = 0xc0
0x30f: M[0xc0] = 0x0
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x310
[0x310:0x324]
---
Predecessors: [0x2fa, 0x325]
Successors: [0x325, 0x34d]
---
0x310 JUMPDEST
0x311 PUSH1 0x20
0x313 PUSH2 0x1c0
0x316 MLOAD
0x317 SUB
0x318 MLOAD
0x319 PUSH1 0x20
0x31b PUSH1 0xc0
0x31d MLOAD
0x31e MUL
0x31f SLT
0x320 ISZERO
0x321 PUSH2 0x34d
0x324 JUMPI
---
0x310: JUMPDEST 
0x311: V288 = 0x20
0x313: V289 = 0x1c0
0x316: V290 = M[0x1c0]
0x317: V291 = SUB V290 0x20
0x318: V292 = M[V291]
0x319: V293 = 0x20
0x31b: V294 = 0xc0
0x31d: V295 = M[0xc0]
0x31e: V296 = MUL V295 0x20
0x31f: V297 = SLT V296 V292
0x320: V298 = ISZERO V297
0x321: V299 = 0x34d
0x324: JUMPI 0x34d V298
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x325
[0x325:0x34c]
---
Predecessors: [0x310]
Successors: [0x310]
---
0x325 PUSH1 0xc0
0x327 MLOAD
0x328 PUSH1 0x20
0x32a MUL
0x32b PUSH2 0x1c0
0x32e MLOAD
0x32f ADD
0x330 MLOAD
0x331 PUSH1 0x1
0x333 PUSH1 0xc0
0x335 MLOAD
0x336 ADD
0x337 PUSH1 0xc
0x339 CALLER
0x33a MUL
0x33b PUSH1 0x2
0x33d ADD
0x33e ADD
0x33f SSTORE
0x340 PUSH1 0x1
0x342 PUSH1 0xc0
0x344 MLOAD
0x345 ADD
0x346 PUSH1 0xc0
0x348 MSTORE
0x349 PUSH2 0x310
0x34c JUMP
---
0x325: V300 = 0xc0
0x327: V301 = M[0xc0]
0x328: V302 = 0x20
0x32a: V303 = MUL 0x20 V301
0x32b: V304 = 0x1c0
0x32e: V305 = M[0x1c0]
0x32f: V306 = ADD V305 V303
0x330: V307 = M[V306]
0x331: V308 = 0x1
0x333: V309 = 0xc0
0x335: V310 = M[0xc0]
0x336: V311 = ADD V310 0x1
0x337: V312 = 0xc
0x339: V313 = CALLER
0x33a: V314 = MUL V313 0xc
0x33b: V315 = 0x2
0x33d: V316 = ADD 0x2 V314
0x33e: V317 = ADD V316 V311
0x33f: S[V317] = V307
0x340: V318 = 0x1
0x342: V319 = 0xc0
0x344: V320 = M[0xc0]
0x345: V321 = ADD V320 0x1
0x346: V322 = 0xc0
0x348: M[0xc0] = V321
0x349: V323 = 0x310
0x34c: JUMP 0x310
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x34d
[0x34d:0x3a7]
---
Predecessors: [0x310]
Successors: [0x3a8, 0x3a9]
---
0x34d JUMPDEST
0x34e PUSH1 0x20
0x350 PUSH1 0x1c
0x352 PUSH1 0x80
0x354 MSIZE
0x355 SWAP1
0x356 MSIZE
0x357 ADD
0x358 PUSH1 0x0
0x35a SWAP1
0x35b MSTORE
0x35c ADD
0x35d PUSH2 0x1c0
0x360 MLOAD
0x361 PUSH1 0x20
0x363 PUSH1 0x1f
0x365 PUSH1 0x20
0x367 DUP4
0x368 SUB
0x369 MLOAD
0x36a ADD
0x36b DIV
0x36c PUSH1 0x20
0x36e MUL
0x36f PUSH1 0x20
0x371 ADD
0x372 DUP4
0x373 DUP4
0x374 MSTORE
0x375 PUSH1 0x20
0x377 DUP3
0x378 SUB
0x379 PUSH1 0x20
0x37b DUP5
0x37c ADD
0x37d MSTORE
0x37e DUP1
0x37f PUSH1 0x40
0x381 DUP5
0x382 ADD
0x383 MSTORE
0x384 DUP1
0x385 DUP5
0x386 ADD
0x387 SWAP4
0x388 POP
0x389 POP
0x38a POP
0x38b DUP2
0x38c PUSH1 0x4
0x38e ADD
0x38f MSIZE
0x390 SWAP1
0x391 MSIZE
0x392 ADD
0x393 PUSH1 0x0
0x395 SWAP1
0x396 MSTORE
0x397 PUSH1 0x20
0x399 DUP2
0x39a PUSH1 0x20
0x39c DUP5
0x39d PUSH1 0x0
0x39f PUSH1 0x4
0x3a1 PUSH1 0x15
0x3a3 CALL
0x3a4 PUSH2 0x3a9
0x3a7 JUMPI
---
0x34d: JUMPDEST 
0x34e: V324 = 0x20
0x350: V325 = 0x1c
0x352: V326 = 0x80
0x354: V327 = MSIZE
0x356: V328 = MSIZE
0x357: V329 = ADD V328 0x80
0x358: V330 = 0x0
0x35b: M[V329] = 0x0
0x35c: V331 = ADD V327 0x1c
0x35d: V332 = 0x1c0
0x360: V333 = M[0x1c0]
0x361: V334 = 0x20
0x363: V335 = 0x1f
0x365: V336 = 0x20
0x368: V337 = SUB V333 0x20
0x369: V338 = M[V337]
0x36a: V339 = ADD V338 0x1f
0x36b: V340 = DIV V339 0x20
0x36c: V341 = 0x20
0x36e: V342 = MUL 0x20 V340
0x36f: V343 = 0x20
0x371: V344 = ADD 0x20 V342
0x374: M[V331] = 0x20
0x375: V345 = 0x20
0x378: V346 = SUB V333 0x20
0x379: V347 = 0x20
0x37c: V348 = ADD V331 0x20
0x37d: M[V348] = V346
0x37f: V349 = 0x40
0x382: V350 = ADD V331 0x40
0x383: M[V350] = V344
0x386: V351 = ADD 0x20 V344
0x38c: V352 = 0x4
0x38e: V353 = ADD 0x4 V351
0x38f: V354 = MSIZE
0x391: V355 = MSIZE
0x392: V356 = ADD V355 V353
0x393: V357 = 0x0
0x396: M[V356] = 0x0
0x397: V358 = 0x20
0x39a: V359 = 0x20
0x39d: V360 = 0x0
0x39f: V361 = 0x4
0x3a1: V362 = 0x15
0x3a3: V363 = CALL 0x15 0x4 0x0 V331 0x20 V354 0x20
0x3a4: V364 = 0x3a9
0x3a7: JUMPI 0x3a9 V363
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [V351, V331, V354]
Exit stack: [V5, V351, V331, V354]

================================

Block 0x3a8
[0x3a8:0x3a8]
---
Predecessors: [0x34d]
Successors: []
---
0x3a8 INVALID
---
0x3a8: INVALID 
---
Entry stack: [V5, V351, V331, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V5, V351, V331, V354]

================================

Block 0x3a9
[0x3a9:0x3cd]
---
Predecessors: [0x34d]
Successors: [0x3ce, 0x3cf]
---
0x3a9 JUMPDEST
0x3aa PUSH1 0x20
0x3ac DUP2
0x3ad ADD
0x3ae SWAP3
0x3af POP
0x3b0 PUSH1 0x40
0x3b2 DUP3
0x3b3 ADD
0x3b4 MLOAD
0x3b5 DUP1
0x3b6 DUP1
0x3b7 DUP6
0x3b8 DUP3
0x3b9 PUSH1 0x20
0x3bb DUP8
0x3bc ADD
0x3bd MLOAD
0x3be PUSH1 0x0
0x3c0 PUSH1 0x4
0x3c2 PUSH1 0xa
0x3c4 DUP8
0x3c5 SDIV
0x3c6 PUSH1 0x12
0x3c8 ADD
0x3c9 CALL
0x3ca PUSH2 0x3cf
0x3cd JUMPI
---
0x3a9: JUMPDEST 
0x3aa: V365 = 0x20
0x3ad: V366 = ADD V354 0x20
0x3b0: V367 = 0x40
0x3b3: V368 = ADD V331 0x40
0x3b4: V369 = M[V368]
0x3b9: V370 = 0x20
0x3bc: V371 = ADD V331 0x20
0x3bd: V372 = M[V371]
0x3be: V373 = 0x0
0x3c0: V374 = 0x4
0x3c2: V375 = 0xa
0x3c5: V376 = SDIV V369 0xa
0x3c6: V377 = 0x12
0x3c8: V378 = ADD 0x12 V376
0x3c9: V379 = CALL V378 0x4 0x0 V372 V369 V366 V369
0x3ca: V380 = 0x3cf
0x3cd: JUMPI 0x3cf V379
---
Entry stack: [V5, V351, V331, V354]
Stack pops: 3
Stack additions: [V366, S1, S0, V369, V369]
Exit stack: [V5, V366, V331, V354, V369, V369]

================================

Block 0x3ce
[0x3ce:0x3ce]
---
Predecessors: [0x3a9]
Successors: []
---
0x3ce INVALID
---
0x3ce: INVALID 
---
Entry stack: [V5, V366, V331, V354, V369, V369]
Stack pops: 0
Stack additions: []
Exit stack: [V5, V366, V331, V354, V369, V369]

================================

Block 0x3cf
[0x3cf:0x40e]
---
Predecessors: [0x3a9]
Successors: []
---
0x3cf JUMPDEST
0x3d0 POP
0x3d1 DUP1
0x3d2 DUP5
0x3d3 ADD
0x3d4 SWAP4
0x3d5 POP
0x3d6 POP
0x3d7 DUP1
0x3d8 DUP4
0x3d9 SUB
0x3da CALLER
0x3db PUSH32 0xc0c8fdc5261cd471b4cf986e1dc55c83e67bab22ff35c3a1e32ab700b8b7eef7
0x3fc DUP3
0x3fd DUP5
0x3fe LOG2
0x3ff POP
0x400 POP
0x401 POP
0x402 POP
0x403 PUSH1 0x1
0x405 PUSH2 0x2c0
0x408 MSTORE
0x409 PUSH1 0x20
0x40b PUSH2 0x2c0
0x40e RETURN
---
0x3cf: JUMPDEST 
0x3d3: V381 = ADD V366 V369
0x3d9: V382 = SUB V381 V354
0x3da: V383 = CALLER
0x3db: V384 = 0xc0c8fdc5261cd471b4cf986e1dc55c83e67bab22ff35c3a1e32ab700b8b7eef7
0x3fe: LOG V354 V382 0xc0c8fdc5261cd471b4cf986e1dc55c83e67bab22ff35c3a1e32ab700b8b7eef7 V383
0x403: V385 = 0x1
0x405: V386 = 0x2c0
0x408: M[0x2c0] = 0x1
0x409: V387 = 0x20
0x40b: V388 = 0x2c0
0x40e: RETURN 0x2c0 0x20
---
Entry stack: [V5, V366, V331, V354, V369, V369]
Stack pops: 5
Stack additions: []
Exit stack: [V5]

================================

Block 0x40f
[0x40f:0x41b]
---
Predecessors: [0x2a0]
Successors: [0x41c, 0x4ab]
---
0x40f JUMPDEST
0x410 PUSH4 0x5b6ceb8e
0x415 DUP2
0x416 EQ
0x417 ISZERO
0x418 PUSH2 0x4ab
0x41b JUMPI
---
0x40f: JUMPDEST 
0x410: V389 = 0x5b6ceb8e
0x416: V390 = EQ V5 0x5b6ceb8e
0x417: V391 = ISZERO V390
0x418: V392 = 0x4ab
0x41b: JUMPI 0x4ab V391
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x41c
[0x41c:0x44f]
---
Predecessors: [0x40f]
Successors: [0x450, 0x45c]
---
0x41c CALLDATASIZE
0x41d MSIZE
0x41e SWAP1
0x41f MSIZE
0x420 ADD
0x421 PUSH1 0x0
0x423 SWAP1
0x424 MSTORE
0x425 CALLDATASIZE
0x426 PUSH1 0x4
0x428 DUP3
0x429 CALLDATACOPY
0x42a PUSH1 0x4
0x42c CALLDATALOAD
0x42d PUSH2 0x2e0
0x430 MSTORE
0x431 POP
0x432 PUSH1 0xc
0x434 PUSH2 0x2e0
0x437 MLOAD
0x438 MUL
0x439 PUSH1 0x1
0x43b ADD
0x43c SLOAD
0x43d TIMESTAMP
0x43e SUB
0x43f PUSH2 0x300
0x442 MSTORE
0x443 PUSH1 0x60
0x445 MLOAD
0x446 PUSH2 0x300
0x449 MLOAD
0x44a SGT
0x44b ISZERO
0x44c PUSH2 0x45c
0x44f JUMPI
---
0x41c: V393 = CALLDATASIZE
0x41d: V394 = MSIZE
0x41f: V395 = MSIZE
0x420: V396 = ADD V395 V393
0x421: V397 = 0x0
0x424: M[V396] = 0x0
0x425: V398 = CALLDATASIZE
0x426: V399 = 0x4
0x429: CALLDATACOPY V394 0x4 V398
0x42a: V400 = 0x4
0x42c: V401 = CALLDATALOAD 0x4
0x42d: V402 = 0x2e0
0x430: M[0x2e0] = V401
0x432: V403 = 0xc
0x434: V404 = 0x2e0
0x437: V405 = M[0x2e0]
0x438: V406 = MUL V405 0xc
0x439: V407 = 0x1
0x43b: V408 = ADD 0x1 V406
0x43c: V409 = S[V408]
0x43d: V410 = TIMESTAMP
0x43e: V411 = SUB V410 V409
0x43f: V412 = 0x300
0x442: M[0x300] = V411
0x443: V413 = 0x60
0x445: V414 = M[0x60]
0x446: V415 = 0x300
0x449: V416 = M[0x300]
0x44a: V417 = SGT V416 V414
0x44b: V418 = ISZERO V417
0x44c: V419 = 0x45c
0x44f: JUMPI 0x45c V418
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x450
[0x450:0x45b]
---
Predecessors: [0x41c]
Successors: []
---
0x450 PUSH1 0x0
0x452 PUSH2 0x320
0x455 MSTORE
0x456 PUSH1 0x20
0x458 PUSH2 0x320
0x45b RETURN
---
0x450: V420 = 0x0
0x452: V421 = 0x320
0x455: M[0x320] = 0x0
0x456: V422 = 0x20
0x458: V423 = 0x320
0x45b: RETURN 0x320 0x20
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x45c
[0x45c:0x4aa]
---
Predecessors: [0x41c]
Successors: []
---
0x45c JUMPDEST
0x45d PUSH1 0x1c
0x45f PUSH1 0x64
0x461 MSIZE
0x462 SWAP1
0x463 MSIZE
0x464 ADD
0x465 PUSH1 0x0
0x467 SWAP1
0x468 MSTORE
0x469 ADD
0x46a PUSH4 0xdf83284d
0x46f PUSH1 0x1c
0x471 DUP3
0x472 SUB
0x473 MSTORE
0x474 PUSH1 0xc
0x476 PUSH2 0x2e0
0x479 MLOAD
0x47a MUL
0x47b SLOAD
0x47c PUSH1 0x4
0x47e DUP3
0x47f ADD
0x480 MSTORE
0x481 PUSH2 0x300
0x484 MLOAD
0x485 PUSH1 0x24
0x487 DUP3
0x488 ADD
0x489 MSTORE
0x48a PUSH1 0x20
0x48c PUSH2 0x360
0x48f PUSH1 0x44
0x491 DUP4
0x492 PUSH1 0x0
0x494 ADDRESS
0x495 PUSH1 0x2d
0x497 GAS
0x498 SUB
0x499 CALL
0x49a POP
0x49b PUSH2 0x360
0x49e MLOAD
0x49f SWAP1
0x4a0 POP
0x4a1 PUSH2 0x340
0x4a4 MSTORE
0x4a5 PUSH1 0x20
0x4a7 PUSH2 0x340
0x4aa RETURN
---
0x45c: JUMPDEST 
0x45d: V424 = 0x1c
0x45f: V425 = 0x64
0x461: V426 = MSIZE
0x463: V427 = MSIZE
0x464: V428 = ADD V427 0x64
0x465: V429 = 0x0
0x468: M[V428] = 0x0
0x469: V430 = ADD V426 0x1c
0x46a: V431 = 0xdf83284d
0x46f: V432 = 0x1c
0x472: V433 = SUB V430 0x1c
0x473: M[V433] = 0xdf83284d
0x474: V434 = 0xc
0x476: V435 = 0x2e0
0x479: V436 = M[0x2e0]
0x47a: V437 = MUL V436 0xc
0x47b: V438 = S[V437]
0x47c: V439 = 0x4
0x47f: V440 = ADD V430 0x4
0x480: M[V440] = V438
0x481: V441 = 0x300
0x484: V442 = M[0x300]
0x485: V443 = 0x24
0x488: V444 = ADD V430 0x24
0x489: M[V444] = V442
0x48a: V445 = 0x20
0x48c: V446 = 0x360
0x48f: V447 = 0x44
0x492: V448 = 0x0
0x494: V449 = ADDRESS
0x495: V450 = 0x2d
0x497: V451 = GAS
0x498: V452 = SUB V451 0x2d
0x499: V453 = CALL V452 V449 0x0 V430 0x44 0x360 0x20
0x49b: V454 = 0x360
0x49e: V455 = M[0x360]
0x4a1: V456 = 0x340
0x4a4: M[0x340] = V455
0x4a5: V457 = 0x20
0x4a7: V458 = 0x340
0x4aa: RETURN 0x340 0x20
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4ab
[0x4ab:0x4b7]
---
Predecessors: [0x40f]
Successors: [0x4b8, 0x558]
---
0x4ab JUMPDEST
0x4ac PUSH4 0xccee5fcd
0x4b1 DUP2
0x4b2 EQ
0x4b3 ISZERO
0x4b4 PUSH2 0x558
0x4b7 JUMPI
---
0x4ab: JUMPDEST 
0x4ac: V459 = 0xccee5fcd
0x4b2: V460 = EQ V5 0xccee5fcd
0x4b3: V461 = ISZERO V460
0x4b4: V462 = 0x558
0x4b7: JUMPI 0x558 V461
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x4b8
[0x4b8:0x4f1]
---
Predecessors: [0x4ab]
Successors: [0x4f2]
---
0x4b8 CALLDATASIZE
0x4b9 MSIZE
0x4ba SWAP1
0x4bb MSIZE
0x4bc ADD
0x4bd PUSH1 0x0
0x4bf SWAP1
0x4c0 MSTORE
0x4c1 CALLDATASIZE
0x4c2 PUSH1 0x4
0x4c4 DUP3
0x4c5 CALLDATACOPY
0x4c6 PUSH1 0x4
0x4c8 CALLDATALOAD
0x4c9 PUSH2 0x2e0
0x4cc MSTORE
0x4cd POP
0x4ce PUSH2 0x140
0x4d1 MSIZE
0x4d2 SWAP1
0x4d3 MSIZE
0x4d4 ADD
0x4d5 PUSH1 0x0
0x4d7 SWAP1
0x4d8 MSTORE
0x4d9 PUSH2 0x380
0x4dc MSTORE
0x4dd PUSH1 0x0
0x4df PUSH1 0xc0
0x4e1 MSTORE
0x4e2 PUSH1 0xc
0x4e4 PUSH2 0x2e0
0x4e7 MLOAD
0x4e8 MUL
0x4e9 PUSH1 0x2
0x4eb ADD
0x4ec SLOAD
0x4ed PUSH2 0x380
0x4f0 MLOAD
0x4f1 MSTORE
---
0x4b8: V463 = CALLDATASIZE
0x4b9: V464 = MSIZE
0x4bb: V465 = MSIZE
0x4bc: V466 = ADD V465 V463
0x4bd: V467 = 0x0
0x4c0: M[V466] = 0x0
0x4c1: V468 = CALLDATASIZE
0x4c2: V469 = 0x4
0x4c5: CALLDATACOPY V464 0x4 V468
0x4c6: V470 = 0x4
0x4c8: V471 = CALLDATALOAD 0x4
0x4c9: V472 = 0x2e0
0x4cc: M[0x2e0] = V471
0x4ce: V473 = 0x140
0x4d1: V474 = MSIZE
0x4d3: V475 = MSIZE
0x4d4: V476 = ADD V475 0x140
0x4d5: V477 = 0x0
0x4d8: M[V476] = 0x0
0x4d9: V478 = 0x380
0x4dc: M[0x380] = V474
0x4dd: V479 = 0x0
0x4df: V480 = 0xc0
0x4e1: M[0xc0] = 0x0
0x4e2: V481 = 0xc
0x4e4: V482 = 0x2e0
0x4e7: V483 = M[0x2e0]
0x4e8: V484 = MUL V483 0xc
0x4e9: V485 = 0x2
0x4eb: V486 = ADD 0x2 V484
0x4ec: V487 = S[V486]
0x4ed: V488 = 0x380
0x4f0: V489 = M[0x380]
0x4f1: M[V489] = V487
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4f2
[0x4f2:0x503]
---
Predecessors: [0x4b8, 0x504]
Successors: [0x504, 0x532]
---
0x4f2 JUMPDEST
0x4f3 PUSH2 0x380
0x4f6 MLOAD
0x4f7 MLOAD
0x4f8 PUSH1 0x20
0x4fa PUSH1 0xc0
0x4fc MLOAD
0x4fd MUL
0x4fe SLT
0x4ff ISZERO
0x500 PUSH2 0x532
0x503 JUMPI
---
0x4f2: JUMPDEST 
0x4f3: V490 = 0x380
0x4f6: V491 = M[0x380]
0x4f7: V492 = M[V491]
0x4f8: V493 = 0x20
0x4fa: V494 = 0xc0
0x4fc: V495 = M[0xc0]
0x4fd: V496 = MUL V495 0x20
0x4fe: V497 = SLT V496 V492
0x4ff: V498 = ISZERO V497
0x500: V499 = 0x532
0x503: JUMPI 0x532 V498
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x504
[0x504:0x531]
---
Predecessors: [0x4f2]
Successors: [0x4f2]
---
0x504 PUSH1 0x1
0x506 PUSH1 0xc0
0x508 MLOAD
0x509 ADD
0x50a PUSH1 0xc
0x50c PUSH2 0x2e0
0x50f MLOAD
0x510 MUL
0x511 PUSH1 0x2
0x513 ADD
0x514 ADD
0x515 SLOAD
0x516 PUSH1 0x1
0x518 PUSH1 0xc0
0x51a MLOAD
0x51b ADD
0x51c PUSH1 0x20
0x51e MUL
0x51f PUSH2 0x380
0x522 MLOAD
0x523 ADD
0x524 MSTORE
0x525 PUSH1 0x1
0x527 PUSH1 0xc0
0x529 MLOAD
0x52a ADD
0x52b PUSH1 0xc0
0x52d MSTORE
0x52e PUSH2 0x4f2
0x531 JUMP
---
0x504: V500 = 0x1
0x506: V501 = 0xc0
0x508: V502 = M[0xc0]
0x509: V503 = ADD V502 0x1
0x50a: V504 = 0xc
0x50c: V505 = 0x2e0
0x50f: V506 = M[0x2e0]
0x510: V507 = MUL V506 0xc
0x511: V508 = 0x2
0x513: V509 = ADD 0x2 V507
0x514: V510 = ADD V509 V503
0x515: V511 = S[V510]
0x516: V512 = 0x1
0x518: V513 = 0xc0
0x51a: V514 = M[0xc0]
0x51b: V515 = ADD V514 0x1
0x51c: V516 = 0x20
0x51e: V517 = MUL 0x20 V515
0x51f: V518 = 0x380
0x522: V519 = M[0x380]
0x523: V520 = ADD V519 V517
0x524: M[V520] = V511
0x525: V521 = 0x1
0x527: V522 = 0xc0
0x529: V523 = M[0xc0]
0x52a: V524 = ADD V523 0x1
0x52b: V525 = 0xc0
0x52d: M[0xc0] = V524
0x52e: V526 = 0x4f2
0x531: JUMP 0x4f2
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x532
[0x532:0x556]
---
Predecessors: [0x4f2]
Successors: []
---
0x532 JUMPDEST
0x533 PUSH1 0x20
0x535 PUSH2 0x380
0x538 MLOAD
0x539 ADD
0x53a PUSH1 0x20
0x53c PUSH1 0x40
0x53e DUP3
0x53f SUB
0x540 MSTORE
0x541 PUSH1 0x20
0x543 PUSH1 0x1f
0x545 PUSH1 0x20
0x547 DUP4
0x548 SUB
0x549 MLOAD
0x54a PUSH1 0x40
0x54c ADD
0x54d ADD
0x54e DIV
0x54f PUSH1 0x20
0x551 MUL
0x552 PUSH1 0x40
0x554 DUP3
0x555 SUB
0x556 RETURN
---
0x532: JUMPDEST 
0x533: V527 = 0x20
0x535: V528 = 0x380
0x538: V529 = M[0x380]
0x539: V530 = ADD V529 0x20
0x53a: V531 = 0x20
0x53c: V532 = 0x40
0x53f: V533 = SUB V530 0x40
0x540: M[V533] = 0x20
0x541: V534 = 0x20
0x543: V535 = 0x1f
0x545: V536 = 0x20
0x548: V537 = SUB V530 0x20
0x549: V538 = M[V537]
0x54a: V539 = 0x40
0x54c: V540 = ADD 0x40 V538
0x54d: V541 = ADD V540 0x1f
0x54e: V542 = DIV V541 0x20
0x54f: V543 = 0x20
0x551: V544 = MUL 0x20 V542
0x552: V545 = 0x40
0x555: V546 = SUB V530 0x40
0x556: RETURN V546 V544
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [V530]
Exit stack: [V5, V530]

================================

Block 0x557
[0x557:0x557]
---
Predecessors: []
Successors: [0x558]
---
0x557 POP
---
0x557: NOP 
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x558
[0x558:0x564]
---
Predecessors: [0x4ab, 0x557]
Successors: [0x565, 0x633]
---
0x558 JUMPDEST
0x559 PUSH4 0x769556e7
0x55e DUP2
0x55f EQ
0x560 ISZERO
0x561 PUSH2 0x633
0x564 JUMPI
---
0x558: JUMPDEST 
0x559: V547 = 0x769556e7
0x55f: V548 = EQ V5 0x769556e7
0x560: V549 = ISZERO V548
0x561: V550 = 0x633
0x564: JUMPI 0x633 V549
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x565
[0x565:0x5ae]
---
Predecessors: [0x558]
Successors: [0x5af, 0x5b4]
---
0x565 PUSH1 0x4
0x567 CALLDATALOAD
0x568 PUSH2 0x3c0
0x56b MSTORE
0x56c PUSH2 0x660
0x56f MSIZE
0x570 SWAP1
0x571 MSIZE
0x572 ADD
0x573 PUSH1 0x0
0x575 SWAP1
0x576 MSTORE
0x577 PUSH1 0x32
0x579 DUP2
0x57a MSTORE
0x57b PUSH1 0x20
0x57d DUP2
0x57e ADD
0x57f SWAP1
0x580 POP
0x581 PUSH2 0x3e0
0x584 MSTORE
0x585 PUSH1 0x0
0x587 PUSH1 0xc0
0x589 MSTORE
0x58a PUSH2 0x3c0
0x58d MLOAD
0x58e PUSH21 0xc0000000000000010000000000000000000000000
0x5a4 SLOAD
0x5a5 SUB
0x5a6 PUSH1 0x32
0x5a8 DUP2
0x5a9 SLT
0x5aa ISZERO
0x5ab PUSH2 0x5b4
0x5ae JUMPI
---
0x565: V551 = 0x4
0x567: V552 = CALLDATALOAD 0x4
0x568: V553 = 0x3c0
0x56b: M[0x3c0] = V552
0x56c: V554 = 0x660
0x56f: V555 = MSIZE
0x571: V556 = MSIZE
0x572: V557 = ADD V556 0x660
0x573: V558 = 0x0
0x576: M[V557] = 0x0
0x577: V559 = 0x32
0x57a: M[V555] = 0x32
0x57b: V560 = 0x20
0x57e: V561 = ADD V555 0x20
0x581: V562 = 0x3e0
0x584: M[0x3e0] = V561
0x585: V563 = 0x0
0x587: V564 = 0xc0
0x589: M[0xc0] = 0x0
0x58a: V565 = 0x3c0
0x58d: V566 = M[0x3c0]
0x58e: V567 = 0xc0000000000000010000000000000000000000000
0x5a4: V568 = S[0xc0000000000000010000000000000000000000000]
0x5a5: V569 = SUB V568 V566
0x5a6: V570 = 0x32
0x5a9: V571 = SLT V569 0x32
0x5aa: V572 = ISZERO V571
0x5ab: V573 = 0x5b4
0x5ae: JUMPI 0x5b4 V572
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [V569]
Exit stack: [V5, V569]

================================

Block 0x5af
[0x5af:0x5b3]
---
Predecessors: [0x565]
Successors: [0x5b7]
---
0x5af DUP1
0x5b0 PUSH2 0x5b7
0x5b3 JUMP
---
0x5b0: V574 = 0x5b7
0x5b3: JUMP 0x5b7
---
Entry stack: [V5, V569]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V5, V569, V569]

================================

Block 0x5b4
[0x5b4:0x5b6]
---
Predecessors: [0x565]
Successors: [0x5b7]
---
0x5b4 JUMPDEST
0x5b5 PUSH1 0x32
---
0x5b4: JUMPDEST 
0x5b5: V575 = 0x32
---
Entry stack: [V5, V569]
Stack pops: 0
Stack additions: [0x32]
Exit stack: [V5, V569, 0x32]

================================

Block 0x5b7
[0x5b7:0x5bd]
---
Predecessors: [0x5af, 0x5b4]
Successors: [0x5be]
---
0x5b7 JUMPDEST
0x5b8 SWAP1
0x5b9 POP
0x5ba PUSH2 0x420
0x5bd MSTORE
---
0x5b7: JUMPDEST 
0x5ba: V576 = 0x420
0x5bd: M[0x420] = S0
---
Entry stack: [V5, V569, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x5be
[0x5be:0x5cb]
---
Predecessors: [0x5b7, 0x5cc]
Successors: [0x5cc, 0x605]
---
0x5be JUMPDEST
0x5bf PUSH2 0x420
0x5c2 MLOAD
0x5c3 PUSH1 0xc0
0x5c5 MLOAD
0x5c6 SLT
0x5c7 ISZERO
0x5c8 PUSH2 0x605
0x5cb JUMPI
---
0x5be: JUMPDEST 
0x5bf: V577 = 0x420
0x5c2: V578 = M[0x420]
0x5c3: V579 = 0xc0
0x5c5: V580 = M[0xc0]
0x5c6: V581 = SLT V580 V578
0x5c7: V582 = ISZERO V581
0x5c8: V583 = 0x605
0x5cb: JUMPI 0x605 V582
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x5cc
[0x5cc:0x604]
---
Predecessors: [0x5be]
Successors: [0x5be]
---
0x5cc PUSH1 0xc0
0x5ce MLOAD
0x5cf PUSH2 0x3c0
0x5d2 MLOAD
0x5d3 ADD
0x5d4 PUSH21 0xc0000000000000000000000000000000000000000
0x5ea ADD
0x5eb SLOAD
0x5ec PUSH1 0xc0
0x5ee MLOAD
0x5ef PUSH1 0x20
0x5f1 MUL
0x5f2 PUSH2 0x3e0
0x5f5 MLOAD
0x5f6 ADD
0x5f7 MSTORE
0x5f8 PUSH1 0x1
0x5fa PUSH1 0xc0
0x5fc MLOAD
0x5fd ADD
0x5fe PUSH1 0xc0
0x600 MSTORE
0x601 PUSH2 0x5be
0x604 JUMP
---
0x5cc: V584 = 0xc0
0x5ce: V585 = M[0xc0]
0x5cf: V586 = 0x3c0
0x5d2: V587 = M[0x3c0]
0x5d3: V588 = ADD V587 V585
0x5d4: V589 = 0xc0000000000000000000000000000000000000000
0x5ea: V590 = ADD 0xc0000000000000000000000000000000000000000 V588
0x5eb: V591 = S[V590]
0x5ec: V592 = 0xc0
0x5ee: V593 = M[0xc0]
0x5ef: V594 = 0x20
0x5f1: V595 = MUL 0x20 V593
0x5f2: V596 = 0x3e0
0x5f5: V597 = M[0x3e0]
0x5f6: V598 = ADD V597 V595
0x5f7: M[V598] = V591
0x5f8: V599 = 0x1
0x5fa: V600 = 0xc0
0x5fc: V601 = M[0xc0]
0x5fd: V602 = ADD V601 0x1
0x5fe: V603 = 0xc0
0x600: M[0xc0] = V602
0x601: V604 = 0x5be
0x604: JUMP 0x5be
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x605
[0x605:0x631]
---
Predecessors: [0x5be]
Successors: []
---
0x605 JUMPDEST
0x606 PUSH1 0xc0
0x608 MLOAD
0x609 PUSH1 0x1
0x60b PUSH1 0x0
0x60d SUB
0x60e PUSH1 0x20
0x610 MUL
0x611 PUSH2 0x3e0
0x614 MLOAD
0x615 ADD
0x616 MSTORE
0x617 PUSH2 0x3e0
0x61a MLOAD
0x61b PUSH1 0x20
0x61d PUSH1 0x40
0x61f DUP3
0x620 SUB
0x621 MSTORE
0x622 PUSH1 0x20
0x624 PUSH1 0x20
0x626 DUP3
0x627 SUB
0x628 MLOAD
0x629 MUL
0x62a PUSH1 0x40
0x62c ADD
0x62d PUSH1 0x40
0x62f DUP3
0x630 SUB
0x631 RETURN
---
0x605: JUMPDEST 
0x606: V605 = 0xc0
0x608: V606 = M[0xc0]
0x609: V607 = 0x1
0x60b: V608 = 0x0
0x60d: V609 = SUB 0x0 0x1
0x60e: V610 = 0x20
0x610: V611 = MUL 0x20 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x611: V612 = 0x3e0
0x614: V613 = M[0x3e0]
0x615: V614 = ADD V613 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x616: M[V614] = V606
0x617: V615 = 0x3e0
0x61a: V616 = M[0x3e0]
0x61b: V617 = 0x20
0x61d: V618 = 0x40
0x620: V619 = SUB V616 0x40
0x621: M[V619] = 0x20
0x622: V620 = 0x20
0x624: V621 = 0x20
0x627: V622 = SUB V616 0x20
0x628: V623 = M[V622]
0x629: V624 = MUL V623 0x20
0x62a: V625 = 0x40
0x62c: V626 = ADD 0x40 V624
0x62d: V627 = 0x40
0x630: V628 = SUB V616 0x40
0x631: RETURN V628 V626
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [V616]
Exit stack: [V5, V616]

================================

Block 0x632
[0x632:0x632]
---
Predecessors: []
Successors: [0x633]
---
0x632 POP
---
0x632: NOP 
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x633
[0x633:0x63f]
---
Predecessors: [0x558, 0x632]
Successors: [0x640, 0x664]
---
0x633 JUMPDEST
0x634 PUSH4 0x3ccfd60b
0x639 DUP2
0x63a EQ
0x63b ISZERO
0x63c PUSH2 0x664
0x63f JUMPI
---
0x633: JUMPDEST 
0x634: V629 = 0x3ccfd60b
0x63a: V630 = EQ V5 0x3ccfd60b
0x63b: V631 = ISZERO V630
0x63c: V632 = 0x664
0x63f: JUMPI 0x664 V631
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x640
[0x640:0x663]
---
Predecessors: [0x633]
Successors: [0x664]
---
0x640 PUSH1 0x0
0x642 PUSH1 0x0
0x644 PUSH1 0x0
0x646 PUSH1 0x0
0x648 ADDRESS
0x649 BALANCE
0x64a PUSH20 0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae
0x65f PUSH2 0x1388
0x662 CALL
0x663 POP
---
0x640: V633 = 0x0
0x642: V634 = 0x0
0x644: V635 = 0x0
0x646: V636 = 0x0
0x648: V637 = ADDRESS
0x649: V638 = BALANCE V637
0x64a: V639 = 0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae
0x65f: V640 = 0x1388
0x662: V641 = CALL 0x1388 0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae V638 0x0 0x0 0x0 0x0
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x664
[0x664:0x665]
---
Predecessors: [0x633, 0x640]
Successors: []
---
0x664 JUMPDEST
0x665 POP
---
0x664: JUMPDEST 
---
Entry stack: [V5]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0xdf83284d
Entry block: 0xcd
Exit block: 0x3ce
Body: 0xcd, 0xda, 0xea, 0x105, 0x113, 0x1f2, 0x28a, 0x2a0, 0x2ad, 0x2da, 0x2df, 0x2e6, 0x2ee, 0x2fa, 0x310, 0x325, 0x34d, 0x3a8, 0x3a9, 0x3ce, 0x3cf, 0x40f, 0x41c, 0x450, 0x45c, 0x4ab, 0x4b8, 0x4f2, 0x504, 0x532, 0x558, 0x565, 0x5af, 0x5b4, 0x5b7, 0x5be, 0x5cc, 0x605, 0x633, 0x640, 0x664

Function 1:
Public function signature: 0x1aa3a008
Entry block: 0x2a0
Exit block: 0x3ce
Body: 0x2a0, 0x2ad, 0x2da, 0x2df, 0x2e6, 0x2ee, 0x2fa, 0x310, 0x325, 0x34d, 0x3a8, 0x3a9, 0x3ce, 0x3cf, 0x40f, 0x41c, 0x450, 0x45c, 0x4ab, 0x4b8, 0x4f2, 0x504, 0x532, 0x558, 0x565, 0x5af, 0x5b4, 0x5b7, 0x5be, 0x5cc, 0x605, 0x633, 0x640, 0x664

Function 2:
Public function signature: 0x32193f9
Entry block: 0x40f
Exit block: 0x605
Body: 0x40f, 0x41c, 0x450, 0x45c, 0x4ab, 0x4b8, 0x4f2, 0x504, 0x532, 0x558, 0x565, 0x5af, 0x5b4, 0x5b7, 0x5be, 0x5cc, 0x605, 0x633, 0x640, 0x664

Function 3:
Public function signature: 0x5b6ceb8e
Entry block: 0x4ab
Exit block: 0x605
Body: 0x4ab, 0x4b8, 0x4f2, 0x504, 0x532, 0x558, 0x565, 0x5af, 0x5b4, 0x5b7, 0x5be, 0x5cc, 0x605, 0x633, 0x640, 0x664

Function 4:
Public function signature: 0xccee5fcd
Entry block: 0x558
Exit block: 0x605
Body: 0x558, 0x565, 0x5af, 0x5b4, 0x5b7, 0x5be, 0x5cc, 0x605, 0x633, 0x640, 0x664

Function 5:
Public function signature: 0x769556e7
Entry block: 0x633
Exit block: 0x664
Body: 0x633, 0x640, 0x664

Function 6:
Public function signature: 0x3ccfd60b
Entry block: 0x664
Exit block: 0x664
Body: 0x664

Function 7:
Public fallback function
Entry block: 0x640
Exit block: 0x664
Body: 0x640, 0x664

