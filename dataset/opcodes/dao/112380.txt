Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x25]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x25
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x25
0xa: JUMPI 0x25 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xaf]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x4ab296f6
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xaf
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x4ab296f6
0x20: V14 = EQ V12 0x4ab296f6
0x21: V15 = 0xaf
0x24: JUMPI 0xaf V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x28]
---
Predecessors: [0x0, 0xb]
Successors: [0x29]
---
0x25 JUMPDEST
0x26 PUSH2 0xad
---
0x25: JUMPDEST 
0x26: V16 = 0xad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V12, 0xad]

================================

Block 0x29
[0x29:0x3b]
---
Predecessors: [0x25]
Successors: [0x3c, 0xaa]
---
0x29 JUMPDEST
0x2a PUSH1 0x0
0x2c SLOAD
0x2d PUSH1 0xa0
0x2f PUSH1 0x2
0x31 EXP
0x32 SWAP1
0x33 DIV
0x34 PUSH1 0xff
0x36 AND
0x37 ISZERO
0x38 PUSH2 0xaa
0x3b JUMPI
---
0x29: JUMPDEST 
0x2a: V17 = 0x0
0x2c: V18 = S[0x0]
0x2d: V19 = 0xa0
0x2f: V20 = 0x2
0x31: V21 = EXP 0x2 0xa0
0x33: V22 = DIV V18 0x10000000000000000000000000000000000000000
0x34: V23 = 0xff
0x36: V24 = AND 0xff V22
0x37: V25 = ISZERO V24
0x38: V26 = 0xaa
0x3b: JUMPI 0xaa V25
---
Entry stack: [V12, 0xad]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad]

================================

Block 0x3c
[0x3c:0x90]
---
Predecessors: [0x29]
Successors: [0x91, 0x95]
---
0x3c PUSH1 0x0
0x3e DUP1
0x3f SLOAD
0x40 PUSH1 0xa0
0x42 PUSH1 0x2
0x44 EXP
0x45 PUSH1 0xff
0x47 MUL
0x48 NOT
0x49 AND
0x4a SWAP1
0x4b SSTORE
0x4c PUSH1 0x1
0x4e DUP1
0x4f SLOAD
0x50 PUSH1 0x1
0x52 PUSH1 0xa0
0x54 PUSH1 0x2
0x56 EXP
0x57 SUB
0x58 AND
0x59 SWAP1
0x5a PUSH4 0xe4849b32
0x5f SWAP1
0x60 PUSH1 0x40
0x62 MLOAD
0x63 PUSH1 0xe0
0x65 PUSH1 0x2
0x67 EXP
0x68 PUSH4 0xffffffff
0x6d DUP5
0x6e AND
0x6f MUL
0x70 DUP2
0x71 MSTORE
0x72 PUSH1 0x4
0x74 DUP2
0x75 ADD
0x76 SWAP2
0x77 SWAP1
0x78 SWAP2
0x79 MSTORE
0x7a PUSH1 0x24
0x7c ADD
0x7d PUSH1 0x0
0x7f PUSH1 0x40
0x81 MLOAD
0x82 DUP1
0x83 DUP4
0x84 SUB
0x85 DUP2
0x86 PUSH1 0x0
0x88 DUP8
0x89 DUP1
0x8a EXTCODESIZE
0x8b ISZERO
0x8c ISZERO
0x8d PUSH2 0x95
0x90 JUMPI
---
0x3c: V27 = 0x0
0x3f: V28 = S[0x0]
0x40: V29 = 0xa0
0x42: V30 = 0x2
0x44: V31 = EXP 0x2 0xa0
0x45: V32 = 0xff
0x47: V33 = MUL 0xff 0x10000000000000000000000000000000000000000
0x48: V34 = NOT 0xff0000000000000000000000000000000000000000
0x49: V35 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V28
0x4b: S[0x0] = V35
0x4c: V36 = 0x1
0x4f: V37 = S[0x1]
0x50: V38 = 0x1
0x52: V39 = 0xa0
0x54: V40 = 0x2
0x56: V41 = EXP 0x2 0xa0
0x57: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x5a: V44 = 0xe4849b32
0x60: V45 = 0x40
0x62: V46 = M[0x40]
0x63: V47 = 0xe0
0x65: V48 = 0x2
0x67: V49 = EXP 0x2 0xe0
0x68: V50 = 0xffffffff
0x6e: V51 = AND 0xe4849b32 0xffffffff
0x6f: V52 = MUL 0xe4849b32 0x100000000000000000000000000000000000000000000000000000000
0x71: M[V46] = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x72: V53 = 0x4
0x75: V54 = ADD V46 0x4
0x79: M[V54] = 0x1
0x7a: V55 = 0x24
0x7c: V56 = ADD 0x24 V46
0x7d: V57 = 0x0
0x7f: V58 = 0x40
0x81: V59 = M[0x40]
0x84: V60 = SUB V56 V59
0x86: V61 = 0x0
0x8a: V62 = EXTCODESIZE V43
0x8b: V63 = ISZERO V62
0x8c: V64 = ISZERO V63
0x8d: V65 = 0x95
0x90: JUMPI 0x95 V64
---
Entry stack: [V12, 0xad]
Stack pops: 0
Stack additions: [V43, 0xe4849b32, V56, 0x0, V59, V60, V59, 0x0, V43]
Exit stack: [V12, 0xad, V43, 0xe4849b32, V56, 0x0, V59, V60, V59, 0x0, V43]

================================

Block 0x91
[0x91:0x94]
---
Predecessors: [0x3c]
Successors: []
---
0x91 PUSH1 0x0
0x93 DUP1
0x94 REVERT
---
0x91: V66 = 0x0
0x94: REVERT 0x0 0x0
---
Entry stack: [V12, 0xad, V43, 0xe4849b32, V56, 0x0, V59, V60, V59, 0x0, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad, V43, 0xe4849b32, V56, 0x0, V59, V60, V59, 0x0, V43]

================================

Block 0x95
[0x95:0xa1]
---
Predecessors: [0x3c, 0xc4]
Successors: [0xa2, 0xa6]
---
0x95 JUMPDEST
0x96 PUSH2 0x2c6
0x99 GAS
0x9a SUB
0x9b CALL
0x9c ISZERO
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x95: JUMPDEST 
0x96: V67 = 0x2c6
0x99: V68 = GAS
0x9a: V69 = SUB V68 0x2c6
0x9b: V70 = CALL V69 S0 0x0 S2 S3 S4 0x0
0x9c: V71 = ISZERO V70
0x9d: V72 = ISZERO V71
0x9e: V73 = 0xa6
0xa1: JUMPI 0xa6 V72
---
Entry stack: [V12, 0xad, S8, 0xe4849b32, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xad, S8, 0xe4849b32, S6]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x95]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V74 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V12, 0xad, S2, 0xe4849b32, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad, S2, 0xe4849b32, S0]

================================

Block 0xa6
[0xa6:0xa9]
---
Predecessors: [0x95, 0x14a]
Successors: [0xaa]
---
0xa6 JUMPDEST
0xa7 POP
0xa8 POP
0xa9 POP
---
0xa6: JUMPDEST 
---
Entry stack: [V12, 0xad, S2, 0xe4849b32, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xad]

================================

Block 0xaa
[0xaa:0xaa]
---
Predecessors: [0x29, 0xa6]
Successors: [0xab]
---
0xaa JUMPDEST
---
0xaa: JUMPDEST 
---
Entry stack: [V12, 0xad]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0xaa]
Successors: [0xad]
---
0xab JUMPDEST
0xac JUMP
---
0xab: JUMPDEST 
0xac: JUMP 0xad
---
Entry stack: [V12, 0xad]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0xab]
Successors: []
---
0xad JUMPDEST
0xae STOP
---
0xad: JUMPDEST 
0xae: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaf
[0xaf:0xb5]
---
Predecessors: [0xb]
Successors: [0xb6, 0xba]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 ISZERO
0xb2 PUSH2 0xba
0xb5 JUMPI
---
0xaf: JUMPDEST 
0xb0: V75 = CALLVALUE
0xb1: V76 = ISZERO V75
0xb2: V77 = 0xba
0xb5: JUMPI 0xba V76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb6
[0xb6:0xb9]
---
Predecessors: [0xaf]
Successors: []
---
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 REVERT
---
0xb6: V78 = 0x0
0xb9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xba
[0xba:0xc1]
---
Predecessors: [0xaf]
Successors: [0xc4]
---
0xba JUMPDEST
0xbb PUSH2 0xad
0xbe PUSH2 0xc4
0xc1 JUMP
---
0xba: JUMPDEST 
0xbb: V79 = 0xad
0xbe: V80 = 0xc4
0xc1: JUMP 0xc4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V12, 0xad]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: []
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc4
[0xc4:0x145]
---
Predecessors: [0xba]
Successors: [0x95, 0x146]
---
0xc4 JUMPDEST
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 SLOAD
0xc9 PUSH1 0xa0
0xcb PUSH1 0x2
0xcd EXP
0xce PUSH1 0xff
0xd0 MUL
0xd1 NOT
0xd2 AND
0xd3 PUSH1 0xa0
0xd5 PUSH1 0x2
0xd7 EXP
0xd8 OR
0xd9 SWAP1
0xda SSTORE
0xdb PUSH1 0x1
0xdd DUP1
0xde SLOAD
0xdf PUSH1 0x1
0xe1 PUSH1 0xa0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 SUB
0xe7 AND
0xe8 SWAP1
0xe9 PUSH1 0x40
0xeb MLOAD
0xec PUSH1 0x0
0xee PUSH1 0x40
0xf0 MLOAD
0xf1 DUP1
0xf2 DUP4
0xf3 SUB
0xf4 DUP2
0xf5 DUP6
0xf6 DUP8
0xf7 PUSH2 0x8796
0xfa GAS
0xfb SUB
0xfc CALL
0xfd POP
0xfe POP
0xff PUSH1 0x1
0x101 DUP1
0x102 SLOAD
0x103 PUSH1 0x1
0x105 PUSH1 0xa0
0x107 PUSH1 0x2
0x109 EXP
0x10a SUB
0x10b AND
0x10c SWAP3
0x10d POP
0x10e PUSH4 0xe4849b32
0x113 SWAP2
0x114 POP
0x115 PUSH1 0x40
0x117 MLOAD
0x118 PUSH1 0xe0
0x11a PUSH1 0x2
0x11c EXP
0x11d PUSH4 0xffffffff
0x122 DUP5
0x123 AND
0x124 MUL
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x4
0x129 DUP2
0x12a ADD
0x12b SWAP2
0x12c SWAP1
0x12d SWAP2
0x12e MSTORE
0x12f PUSH1 0x24
0x131 ADD
0x132 PUSH1 0x0
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 DUP4
0x139 SUB
0x13a DUP2
0x13b PUSH1 0x0
0x13d DUP8
0x13e DUP1
0x13f EXTCODESIZE
0x140 ISZERO
0x141 ISZERO
0x142 PUSH2 0x95
0x145 JUMPI
---
0xc4: JUMPDEST 
0xc5: V81 = 0x0
0xc8: V82 = S[0x0]
0xc9: V83 = 0xa0
0xcb: V84 = 0x2
0xcd: V85 = EXP 0x2 0xa0
0xce: V86 = 0xff
0xd0: V87 = MUL 0xff 0x10000000000000000000000000000000000000000
0xd1: V88 = NOT 0xff0000000000000000000000000000000000000000
0xd2: V89 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V82
0xd3: V90 = 0xa0
0xd5: V91 = 0x2
0xd7: V92 = EXP 0x2 0xa0
0xd8: V93 = OR 0x10000000000000000000000000000000000000000 V89
0xda: S[0x0] = V93
0xdb: V94 = 0x1
0xde: V95 = S[0x1]
0xdf: V96 = 0x1
0xe1: V97 = 0xa0
0xe3: V98 = 0x2
0xe5: V99 = EXP 0x2 0xa0
0xe6: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0xe9: V102 = 0x40
0xeb: V103 = M[0x40]
0xec: V104 = 0x0
0xee: V105 = 0x40
0xf0: V106 = M[0x40]
0xf3: V107 = SUB V103 V106
0xf7: V108 = 0x8796
0xfa: V109 = GAS
0xfb: V110 = SUB V109 0x8796
0xfc: V111 = CALL V110 V101 0x1 V106 V107 V106 0x0
0xff: V112 = 0x1
0x102: V113 = S[0x1]
0x103: V114 = 0x1
0x105: V115 = 0xa0
0x107: V116 = 0x2
0x109: V117 = EXP 0x2 0xa0
0x10a: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x10e: V120 = 0xe4849b32
0x115: V121 = 0x40
0x117: V122 = M[0x40]
0x118: V123 = 0xe0
0x11a: V124 = 0x2
0x11c: V125 = EXP 0x2 0xe0
0x11d: V126 = 0xffffffff
0x123: V127 = AND 0xe4849b32 0xffffffff
0x124: V128 = MUL 0xe4849b32 0x100000000000000000000000000000000000000000000000000000000
0x126: M[V122] = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x127: V129 = 0x4
0x12a: V130 = ADD V122 0x4
0x12e: M[V130] = 0x1
0x12f: V131 = 0x24
0x131: V132 = ADD 0x24 V122
0x132: V133 = 0x0
0x134: V134 = 0x40
0x136: V135 = M[0x40]
0x139: V136 = SUB V132 V135
0x13b: V137 = 0x0
0x13f: V138 = EXTCODESIZE V119
0x140: V139 = ISZERO V138
0x141: V140 = ISZERO V139
0x142: V141 = 0x95
0x145: JUMPI 0x95 V140
---
Entry stack: [V12, 0xad]
Stack pops: 0
Stack additions: [V119, 0xe4849b32, V132, 0x0, V135, V136, V135, 0x0, V119]
Exit stack: [V12, 0xad, V119, 0xe4849b32, V132, 0x0, V135, V136, V135, 0x0, V119]

================================

Block 0x146
[0x146:0x149]
---
Predecessors: [0xc4]
Successors: []
---
0x146 PUSH1 0x0
0x148 DUP1
0x149 REVERT
---
0x146: V142 = 0x0
0x149: REVERT 0x0 0x0
---
Entry stack: [V12, 0xad, V119, 0xe4849b32, V132, 0x0, V135, V136, V135, 0x0, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xad, V119, 0xe4849b32, V132, 0x0, V135, V136, V135, 0x0, V119]

================================

Block 0x14a
[0x14a:0x156]
---
Predecessors: []
Successors: [0xa6, 0x157]
---
0x14a JUMPDEST
0x14b PUSH2 0x2c6
0x14e GAS
0x14f SUB
0x150 CALL
0x151 ISZERO
0x152 ISZERO
0x153 PUSH2 0xa6
0x156 JUMPI
---
0x14a: JUMPDEST 
0x14b: V143 = 0x2c6
0x14e: V144 = GAS
0x14f: V145 = SUB V144 0x2c6
0x150: V146 = CALL V145 S0 S1 S2 S3 S4 S5
0x151: V147 = ISZERO V146
0x152: V148 = ISZERO V147
0x153: V149 = 0xa6
0x156: JUMPI 0xa6 V148
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x157
[0x157:0x15e]
---
Predecessors: [0x14a]
Successors: [0x15f]
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
0x15b JUMPDEST
0x15c POP
0x15d POP
0x15e POP
---
0x157: V150 = 0x0
0x15a: REVERT 0x0 0x0
0x15b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15f
[0x15f:0x198]
---
Predecessors: [0x157]
Successors: []
---
0x15f JUMPDEST
0x160 JUMP
0x161 STOP
0x162 LOG1
0x163 PUSH6 0x627a7a723058
0x16a SHA3
0x16b EQ
0x16c CALLER
0x16d RETURNDATACOPY
0x16e SHR
0x16f REVERT
0x170 CODESIZE
0x171 EXTCODESIZE
0x172 MISSING 0xd8
0x173 GASPRICE
0x174 LOG4
0x175 MISSING 0xef
0x176 MISSING 0xd1
0x177 MISSING 0xbc
0x178 RETURN
0x179 EXTCODECOPY
0x17a COINBASE
0x17b MISSING 0xbc
0x17c STATICCALL
0x17d MISSING 0xa8
0x17e MISSING 0xf8
0x17f CREATE2
0x180 SLT
0x181 MISSING 0xc9
0x182 ISZERO
0x183 SWAP13
0x184 MISSING 0x22
0x185 SWAP9
0x186 OR
0x187 MISSING 0xf6
0x188 MISSING 0xd6
0x189 PUSH15 0x230029
---
0x15f: JUMPDEST 
0x160: JUMP S0
0x161: STOP 
0x162: LOG S0 S1 S2
0x163: V151 = 0x627a7a723058
0x16a: V152 = SHA3 0x627a7a723058 S3
0x16b: V153 = EQ V152 S4
0x16c: V154 = CALLER
0x16d: RETURNDATACOPY V154 V153 S5
0x16e: V155 = SHR S6 S7
0x16f: REVERT V155 S8
0x170: V156 = CODESIZE
0x171: V157 = EXTCODESIZE V156
0x172: MISSING 0xd8
0x173: V158 = GASPRICE
0x174: LOG V158 S0 S1 S2 S3 S4
0x175: MISSING 0xef
0x176: MISSING 0xd1
0x177: MISSING 0xbc
0x178: RETURN S0 S1
0x179: EXTCODECOPY S0 S1 S2 S3
0x17a: V159 = COINBASE
0x17b: MISSING 0xbc
0x17c: V160 = STATICCALL S0 S1 S2 S3 S4 S5
0x17d: MISSING 0xa8
0x17e: MISSING 0xf8
0x17f: V161 = CREATE2 S0 S1 S2 S3
0x180: V162 = SLT V161 S4
0x181: MISSING 0xc9
0x182: V163 = ISZERO S0
0x184: MISSING 0x22
0x186: V164 = OR S9 S1
0x187: MISSING 0xf6
0x188: MISSING 0xd6
0x189: V165 = 0x230029
---
Entry stack: []
Stack pops: 30542
Stack additions: [0x230029]
Exit stack: []

================================

Function 0:
Public function signature: 0x4ab296f6
Entry block: 0xaf
Exit block: 0xad
Body: 0x95, 0xa2, 0xa6, 0xaa, 0xab, 0xad, 0xaf, 0xb6, 0xba, 0xc4, 0x146

Function 1:
Public fallback function
Entry block: 0x25
Exit block: 0xad
Body: 0x25, 0x29, 0x3c, 0x91, 0x95, 0xa2, 0xa6, 0xaa, 0xab, 0xad

