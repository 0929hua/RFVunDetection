Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xf8]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xca325469
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xf8
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xca325469
0x3b: V13 = EQ V11 0xca325469
0x3c: V14 = 0xf8
0x3f: JUMPI 0xf8 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0xbc]
---
Predecessors: [0x0, 0xd]
Successors: [0xbd, 0xf6]
---
0x40 JUMPDEST
0x41 PUSH1 0x0
0x43 SLOAD
0x44 PUSH1 0x40
0x46 DUP1
0x47 MLOAD
0x48 CALLVALUE
0x49 DUP2
0x4a MSTORE
0x4b TIMESTAMP
0x4c PUSH1 0x20
0x4e DUP3
0x4f ADD
0x50 MSTORE
0x51 CALLER
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 SWAP1
0x68 SWAP4
0x69 AND
0x6a DUP4
0x6b EQ
0x6c ISZERO
0x6d DUP2
0x6e DUP4
0x6f ADD
0x70 MSTORE
0x71 SWAP1
0x72 MLOAD
0x73 PUSH32 0x2aaccc1d0cee2c12a6c6eaa4af3caba4b056a7ef158e4d981a392c5729394cb5
0x94 SWAP2
0x95 PUSH1 0x60
0x97 SWAP1
0x98 DUP3
0x99 SWAP1
0x9a SUB
0x9b ADD
0x9c SWAP1
0x9d LOG2
0x9e PUSH1 0x0
0xa0 SLOAD
0xa1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6 AND
0xb7 CALLER
0xb8 EQ
0xb9 PUSH2 0xf6
0xbc JUMPI
---
0x40: JUMPDEST 
0x41: V15 = 0x0
0x43: V16 = S[0x0]
0x44: V17 = 0x40
0x47: V18 = M[0x40]
0x48: V19 = CALLVALUE
0x4a: M[V18] = V19
0x4b: V20 = TIMESTAMP
0x4c: V21 = 0x20
0x4f: V22 = ADD V18 0x20
0x50: M[V22] = V20
0x51: V23 = CALLER
0x52: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x69: V25 = AND V16 0xffffffffffffffffffffffffffffffffffffffff
0x6b: V26 = EQ V23 V25
0x6c: V27 = ISZERO V26
0x6f: V28 = ADD 0x40 V18
0x70: M[V28] = V27
0x72: V29 = M[0x40]
0x73: V30 = 0x2aaccc1d0cee2c12a6c6eaa4af3caba4b056a7ef158e4d981a392c5729394cb5
0x95: V31 = 0x60
0x9a: V32 = SUB V18 V29
0x9b: V33 = ADD V32 0x60
0x9d: LOG V29 V33 0x2aaccc1d0cee2c12a6c6eaa4af3caba4b056a7ef158e4d981a392c5729394cb5 V23
0x9e: V34 = 0x0
0xa0: V35 = S[0x0]
0xa1: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0xb7: V38 = CALLER
0xb8: V39 = EQ V38 V37
0xb9: V40 = 0xf6
0xbc: JUMPI 0xf6 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbd
[0xbd:0xf1]
---
Predecessors: [0x40]
Successors: [0xf2, 0xf6]
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 SLOAD
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 SWAP1
0xda SWAP2
0xdb AND
0xdc SWAP2
0xdd ADDRESS
0xde BALANCE
0xdf SWAP2
0xe0 SWAP1
0xe1 DUP2
0xe2 DUP2
0xe3 DUP2
0xe4 DUP6
0xe5 DUP8
0xe6 GAS
0xe7 CALL
0xe8 SWAP3
0xe9 POP
0xea POP
0xeb POP
0xec ISZERO
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xbd: V41 = 0x0
0xc0: V42 = S[0x0]
0xc1: V43 = 0x40
0xc3: V44 = M[0x40]
0xc4: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V46 = AND V42 0xffffffffffffffffffffffffffffffffffffffff
0xdd: V47 = ADDRESS
0xde: V48 = BALANCE V47
0xe6: V49 = GAS
0xe7: V50 = CALL V49 V46 V48 V44 0x0 V44 0x0
0xec: V51 = ISZERO V50
0xed: V52 = ISZERO V51
0xee: V53 = 0xf6
0xf1: JUMPI 0xf6 V52
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xbd]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V54 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0xf7]
---
Predecessors: [0x40, 0xbd]
Successors: []
---
0xf6 JUMPDEST
0xf7 STOP
---
0xf6: JUMPDEST 
0xf7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xd]
Successors: [0x100, 0x104]
---
0xf8 JUMPDEST
0xf9 CALLVALUE
0xfa DUP1
0xfb ISZERO
0xfc PUSH2 0x104
0xff JUMPI
---
0xf8: JUMPDEST 
0xf9: V55 = CALLVALUE
0xfb: V56 = ISZERO V55
0xfc: V57 = 0x104
0xff: JUMPI 0x104 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0x100
[0x100:0x103]
---
Predecessors: [0xf8]
Successors: []
---
0x100 PUSH1 0x0
0x102 DUP1
0x103 REVERT
---
0x100: V58 = 0x0
0x103: REVERT 0x0 0x0
---
Entry stack: [V11, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55]

================================

Block 0x104
[0x104:0x10c]
---
Predecessors: [0xf8]
Successors: [0x136]
---
0x104 JUMPDEST
0x105 POP
0x106 PUSH2 0x10d
0x109 PUSH2 0x136
0x10c JUMP
---
0x104: JUMPDEST 
0x106: V59 = 0x10d
0x109: V60 = 0x136
0x10c: JUMP 0x136
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [0x10d]
Exit stack: [V11, 0x10d]

================================

Block 0x10d
[0x10d:0x135]
---
Predecessors: [0x136]
Successors: []
---
0x10d JUMPDEST
0x10e PUSH1 0x40
0x110 DUP1
0x111 MLOAD
0x112 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x127 SWAP1
0x128 SWAP3
0x129 AND
0x12a DUP3
0x12b MSTORE
0x12c MLOAD
0x12d SWAP1
0x12e DUP2
0x12f SWAP1
0x130 SUB
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP1
0x135 RETURN
---
0x10d: JUMPDEST 
0x10e: V61 = 0x40
0x111: V62 = M[0x40]
0x112: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x129: V64 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0x12b: M[V62] = V64
0x12c: V65 = M[0x40]
0x130: V66 = SUB V62 V65
0x131: V67 = 0x20
0x133: V68 = ADD 0x20 V66
0x135: RETURN V65 V68
---
Entry stack: [V11, 0x10d, V72]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x10d]

================================

Block 0x136
[0x136:0x151]
---
Predecessors: [0x104]
Successors: [0x10d]
---
0x136 JUMPDEST
0x137 PUSH1 0x0
0x139 SLOAD
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 DUP2
0x151 JUMP
---
0x136: JUMPDEST 
0x137: V69 = 0x0
0x139: V70 = S[0x0]
0x13a: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x151: JUMP 0x10d
---
Entry stack: [V11, 0x10d]
Stack pops: 1
Stack additions: [S0, V72]
Exit stack: [V11, 0x10d, V72]

================================

Block 0x152
[0x152:0x187]
---
Predecessors: []
Successors: []
---
0x152 STOP
0x153 LOG1
0x154 PUSH6 0x627a7a723058
0x15b SHA3
0x15c GASLIMIT
0x15d MISSING 0xc
0x15e MISSING 0xe9
0x15f MISSING 0xd3
0x160 CODECOPY
0x161 SWAP5
0x162 MISSING 0xcb
0x163 EXTCODECOPY
0x164 MISSING 0x29
0x165 MISSING 0xeb
0x166 JUMP
0x167 PUSH5 0xf8295db4ec
0x16d LOG4
0x16e SHA3
0x16f SLT
0x170 SDIV
0x171 MISSING 0xd9
0x172 RETURNDATASIZE
0x173 MISSING 0xbd
0x174 MISSING 0xdb
0x175 SLOAD
0x176 MISSING 0x28
0x177 MISSING 0xcc
0x178 DUP6
0x179 PUSH14 0x6d40029
---
0x152: STOP 
0x153: LOG S0 S1 S2
0x154: V73 = 0x627a7a723058
0x15b: V74 = SHA3 0x627a7a723058 S3
0x15c: V75 = GASLIMIT
0x15d: MISSING 0xc
0x15e: MISSING 0xe9
0x15f: MISSING 0xd3
0x160: CODECOPY S0 S1 S2
0x162: MISSING 0xcb
0x163: EXTCODECOPY S0 S1 S2 S3
0x164: MISSING 0x29
0x165: MISSING 0xeb
0x166: JUMP S0
0x167: V76 = 0xf8295db4ec
0x16d: LOG 0xf8295db4ec S0 S1 S2 S3 S4
0x16e: V77 = SHA3 S5 S6
0x16f: V78 = SLT V77 S7
0x170: V79 = SDIV V78 S8
0x171: MISSING 0xd9
0x172: V80 = RETURNDATASIZE
0x173: MISSING 0xbd
0x174: MISSING 0xdb
0x175: V81 = S[S0]
0x176: MISSING 0x28
0x177: MISSING 0xcc
0x179: V82 = 0x6d40029
---
Entry stack: []
Stack pops: 0
Stack additions: [V75, V74, S8, S4, S5, S6, S7, S3, V79, V80, V81, 0x6d40029, S5, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0xca325469
Entry block: 0xf8
Exit block: 0x10d
Body: 0xf8, 0x100, 0x104, 0x10d, 0x136

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0xf2
Body: 0x40, 0xbd, 0xf2, 0xf6

