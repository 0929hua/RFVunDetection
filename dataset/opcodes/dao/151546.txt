Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x49]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x49
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x49
0xa: JUMPI 0x49 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xdf]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6b9f96ea
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xdf
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6b9f96ea
0x39: V12 = EQ V10 0x6b9f96ea
0x3a: V13 = 0xdf
0x3d: JUMPI 0xdf V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xf1]
---
0x3e DUP1
0x3f PUSH4 0xca325469
0x44 EQ
0x45 PUSH2 0xf1
0x48 JUMPI
---
0x3f: V14 = 0xca325469
0x44: V15 = EQ 0xca325469 V10
0x45: V16 = 0xf1
0x48: JUMPI 0xf1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x0, 0x3e]
Successors: [0x4d]
---
0x49 JUMPDEST
0x4a PUSH2 0xdd
---
0x49: JUMPDEST 
0x4a: V17 = 0xdd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V10, 0xdd]

================================

Block 0x4d
[0x4d:0xda]
---
Predecessors: [0x49]
Successors: [0xdb]
---
0x4d JUMPDEST
0x4e PUSH32 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
0x6f CALLER
0x70 CALLVALUE
0x71 PUSH1 0x0
0x73 CALLDATASIZE
0x74 PUSH1 0x40
0x76 MLOAD
0x77 DUP1
0x78 DUP6
0x79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e AND
0x8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4 AND
0xa5 DUP2
0xa6 MSTORE
0xa7 PUSH1 0x20
0xa9 ADD
0xaa DUP5
0xab DUP2
0xac MSTORE
0xad PUSH1 0x20
0xaf ADD
0xb0 DUP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 DUP3
0xb5 DUP2
0xb6 SUB
0xb7 DUP3
0xb8 MSTORE
0xb9 DUP5
0xba DUP5
0xbb DUP3
0xbc DUP2
0xbd DUP2
0xbe MSTORE
0xbf PUSH1 0x20
0xc1 ADD
0xc2 SWAP3
0xc3 POP
0xc4 DUP1
0xc5 DUP3
0xc6 DUP5
0xc7 CALLDATACOPY
0xc8 PUSH1 0x40
0xca MLOAD
0xcb SWAP3
0xcc ADD
0xcd DUP3
0xce SWAP1
0xcf SUB
0xd0 SWAP8
0xd1 POP
0xd2 SWAP1
0xd3 SWAP6
0xd4 POP
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 POP
0xda LOG1
---
0x4d: JUMPDEST 
0x4e: V18 = 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
0x6f: V19 = CALLER
0x70: V20 = CALLVALUE
0x71: V21 = 0x0
0x73: V22 = CALLDATASIZE
0x74: V23 = 0x40
0x76: V24 = M[0x40]
0x79: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V19
0x8f: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0xa6: M[V24] = V28
0xa7: V29 = 0x20
0xa9: V30 = ADD 0x20 V24
0xac: M[V30] = V20
0xad: V31 = 0x20
0xaf: V32 = ADD 0x20 V30
0xb1: V33 = 0x20
0xb3: V34 = ADD 0x20 V32
0xb6: V35 = SUB V34 V24
0xb8: M[V32] = V35
0xbe: M[V34] = V22
0xbf: V36 = 0x20
0xc1: V37 = ADD 0x20 V34
0xc7: CALLDATACOPY V37 0x0 V22
0xc8: V38 = 0x40
0xca: V39 = M[0x40]
0xcc: V40 = ADD V37 V22
0xcf: V41 = SUB V40 V39
0xda: LOG V39 V41 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
---
Entry stack: [V10, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xdd]

================================

Block 0xdb
[0xdb:0xdc]
---
Predecessors: [0x4d, 0x12a]
Successors: [0xdd]
---
0xdb JUMPDEST
0xdc JUMP
---
0xdb: JUMPDEST 
0xdc: JUMP 0xdd
---
Entry stack: [V10, 0xdd]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0xdb]
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdf
[0xdf:0xe5]
---
Predecessors: [0xb]
Successors: [0xe6, 0xe7]
---
0xdf JUMPDEST
0xe0 CALLVALUE
0xe1 ISZERO
0xe2 PUSH2 0xe7
0xe5 JUMPI
---
0xdf: JUMPDEST 
0xe0: V42 = CALLVALUE
0xe1: V43 = ISZERO V42
0xe2: V44 = 0xe7
0xe5: JUMPI 0xe7 V43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe6
[0xe6:0xe6]
---
Predecessors: [0xdf]
Successors: []
---
0xe6 INVALID
---
0xe6: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xdf]
Successors: [0x12a]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xdd
0xeb PUSH2 0x12a
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V45 = 0xdd
0xeb: V46 = 0x12a
0xee: JUMP 0x12a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V10, 0xdd]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: []
Successors: []
---
0xef JUMPDEST
0xf0 STOP
---
0xef: JUMPDEST 
0xf0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x3e]
Successors: [0xf8, 0xf9]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xf9
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V47 = CALLVALUE
0xf3: V48 = ISZERO V47
0xf4: V49 = 0xf9
0xf7: JUMPI 0xf9 V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf8
[0xf8:0xf8]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 INVALID
---
0xf8: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xf1]
Successors: [0x16e]
---
0xf9 JUMPDEST
0xfa PUSH2 0x101
0xfd PUSH2 0x16e
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V50 = 0x101
0xfd: V51 = 0x16e
0x100: JUMP 0x16e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V10, 0x101]

================================

Block 0x101
[0x101:0x129]
---
Predecessors: [0x16e]
Successors: []
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 DUP1
0x105 MLOAD
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b SWAP1
0x11c SWAP3
0x11d AND
0x11e DUP3
0x11f MSTORE
0x120 MLOAD
0x121 SWAP1
0x122 DUP2
0x123 SWAP1
0x124 SUB
0x125 PUSH1 0x20
0x127 ADD
0x128 SWAP1
0x129 RETURN
---
0x101: JUMPDEST 
0x102: V52 = 0x40
0x105: V53 = M[0x40]
0x106: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d: V55 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x11f: M[V53] = V55
0x120: V56 = M[0x40]
0x124: V57 = SUB V53 V56
0x125: V58 = 0x20
0x127: V59 = ADD 0x20 V57
0x129: RETURN V56 V59
---
Entry stack: [V10, 0x101, V81]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x101]

================================

Block 0x12a
[0x12a:0x165]
---
Predecessors: [0xe7]
Successors: [0xdb, 0x166]
---
0x12a JUMPDEST
0x12b PUSH1 0x0
0x12d DUP1
0x12e SLOAD
0x12f PUSH1 0x40
0x131 MLOAD
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 SWAP2
0x148 DUP3
0x149 AND
0x14a SWAP3
0x14b ADDRESS
0x14c SWAP1
0x14d SWAP3
0x14e AND
0x14f BALANCE
0x150 SWAP2
0x151 DUP2
0x152 DUP2
0x153 DUP2
0x154 DUP6
0x155 DUP8
0x156 PUSH2 0x8796
0x159 GAS
0x15a SUB
0x15b CALL
0x15c SWAP3
0x15d POP
0x15e POP
0x15f POP
0x160 ISZERO
0x161 ISZERO
0x162 PUSH2 0xdb
0x165 JUMPI
---
0x12a: JUMPDEST 
0x12b: V60 = 0x0
0x12e: V61 = S[0x0]
0x12f: V62 = 0x40
0x131: V63 = M[0x40]
0x132: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x14b: V66 = ADDRESS
0x14e: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x14f: V68 = BALANCE V67
0x156: V69 = 0x8796
0x159: V70 = GAS
0x15a: V71 = SUB V70 0x8796
0x15b: V72 = CALL V71 V65 V68 V63 0x0 V63 0x0
0x160: V73 = ISZERO V72
0x161: V74 = ISZERO V73
0x162: V75 = 0xdb
0x165: JUMPI 0xdb V74
---
Entry stack: [V10, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xdd]

================================

Block 0x166
[0x166:0x16a]
---
Predecessors: [0x12a]
Successors: []
---
0x166 PUSH1 0x0
0x168 PUSH1 0x0
0x16a REVERT
---
0x166: V76 = 0x0
0x168: V77 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V10, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xdd]

================================

Block 0x16b
[0x16b:0x16b]
---
Predecessors: []
Successors: [0x16c]
---
0x16b JUMPDEST
---
0x16b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x16c
[0x16c:0x16d]
---
Predecessors: [0x16b]
Successors: []
Has unresolved jump.
---
0x16c JUMPDEST
0x16d JUMP
---
0x16c: JUMPDEST 
0x16d: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x16e
[0x16e:0x189]
---
Predecessors: [0xf9]
Successors: [0x101]
---
0x16e JUMPDEST
0x16f PUSH1 0x0
0x171 SLOAD
0x172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187 AND
0x188 DUP2
0x189 JUMP
---
0x16e: JUMPDEST 
0x16f: V78 = 0x0
0x171: V79 = S[0x0]
0x172: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x187: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x189: JUMP 0x101
---
Entry stack: [V10, 0x101]
Stack pops: 1
Stack additions: [S0, V81]
Exit stack: [V10, 0x101, V81]

================================

Block 0x18a
[0x18a:0x199]
---
Predecessors: []
Successors: [0x19a]
Has unresolved jump.
---
0x18a STOP
0x18b LOG1
0x18c PUSH6 0x627a7a723058
0x193 SHA3
0x194 LT
0x195 EXTCODEHASH
0x196 MUL
0x197 MISSING 0xba
0x198 MISSING 0xd
0x199 JUMPI
---
0x18a: STOP 
0x18b: LOG S0 S1 S2
0x18c: V82 = 0x627a7a723058
0x193: V83 = SHA3 0x627a7a723058 S3
0x194: V84 = LT V83 S4
0x195: V85 = EXTCODEHASH V84
0x196: V86 = MUL V85 S5
0x197: MISSING 0xba
0x198: MISSING 0xd
0x199: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V86]
Exit stack: []

================================

Block 0x19a
[0x19a:0x1b6]
---
Predecessors: [0x18a]
Successors: []
---
0x19a MLOAD
0x19b RETURNDATACOPY
0x19c DUP2
0x19d MISSING 0x27
0x19e MISSING 0xdf
0x19f SAR
0x1a0 MISSING 0xca
0x1a1 SWAP6
0x1a2 GASPRICE
0x1a3 MISSING 0x29
0x1a4 MISSING 0xd
0x1a5 MISSING 0xa7
0x1a6 BALANCE
0x1a7 LT
0x1a8 MISSING 0xcc
0x1a9 MISSING 0xd6
0x1aa SIGNEXTEND
0x1ab COINBASE
0x1ac DUP7
0x1ad SMOD
0x1ae DUP10
0x1af PUSH7 0xbbf5523a0029
---
0x19a: V87 = M[S0]
0x19b: RETURNDATACOPY V87 S1 S2
0x19d: MISSING 0x27
0x19e: MISSING 0xdf
0x19f: V88 = SAR S0 S1
0x1a0: MISSING 0xca
0x1a2: V89 = GASPRICE
0x1a3: MISSING 0x29
0x1a4: MISSING 0xd
0x1a5: MISSING 0xa7
0x1a6: V90 = BALANCE S0
0x1a7: V91 = LT V90 S1
0x1a8: MISSING 0xcc
0x1a9: MISSING 0xd6
0x1aa: V92 = SIGNEXTEND S0 S1
0x1ab: V93 = COINBASE
0x1ad: V94 = SMOD S6 V93
0x1af: V95 = 0xbbf5523a0029
---
Entry stack: []
Stack pops: 734
Stack additions: [0xbbf5523a0029, S9, V94, V92, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0x6b9f96ea
Entry block: 0xdf
Exit block: 0xdd
Body: 0xdb, 0xdd, 0xdf, 0xe6, 0xe7, 0x12a, 0x166

Function 1:
Public function signature: 0xca325469
Entry block: 0xf1
Exit block: 0x101
Body: 0xf1, 0xf8, 0xf9, 0x101, 0x16e

Function 2:
Public fallback function
Entry block: 0x49
Exit block: 0xdd
Body: 0x49, 0x4d, 0xdb, 0xdd

