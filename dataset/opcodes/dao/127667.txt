Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x54
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x54
0xa: JUMPI 0x54 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x155]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH3 0x821de3
0x39 EQ
0x3a PUSH2 0x155
0x3d JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x821de3
0x39: V12 = EQ 0x821de3 V10
0x3a: V13 = 0x155
0x3d: JUMPI 0x155 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1aa]
---
0x3e DUP1
0x3f PUSH4 0x3ef13367
0x44 EQ
0x45 PUSH2 0x1aa
0x48 JUMPI
---
0x3f: V14 = 0x3ef13367
0x44: V15 = EQ 0x3ef13367 V10
0x45: V16 = 0x1aa
0x48: JUMPI 0x1aa V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1e3]
---
0x49 DUP1
0x4a PUSH4 0x6b9f96ea
0x4f EQ
0x50 PUSH2 0x1e3
0x53 JUMPI
---
0x4a: V17 = 0x6b9f96ea
0x4f: V18 = EQ 0x6b9f96ea V10
0x50: V19 = 0x1e3
0x53: JUMPI 0x1e3 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x54]
---
Predecessors: [0x0, 0x49]
Successors: [0x55]
---
0x54 JUMPDEST
---
0x54: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x55
[0x55:0xbf]
---
Predecessors: [0x54]
Successors: [0xc0, 0xc4]
---
0x55 JUMPDEST
0x56 PUSH1 0x0
0x58 DUP1
0x59 SWAP1
0x5a SLOAD
0x5b SWAP1
0x5c PUSH2 0x100
0x5f EXP
0x60 SWAP1
0x61 DIV
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e CALLVALUE
0x8f PUSH1 0x0
0x91 CALLDATASIZE
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 DUP4
0x97 DUP4
0x98 DUP1
0x99 DUP3
0x9a DUP5
0x9b CALLDATACOPY
0x9c DUP3
0x9d ADD
0x9e SWAP2
0x9f POP
0xa0 POP
0xa1 SWAP3
0xa2 POP
0xa3 POP
0xa4 POP
0xa5 PUSH1 0x0
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP1
0xab DUP4
0xac SUB
0xad DUP2
0xae DUP6
0xaf DUP8
0xb0 PUSH2 0x8796
0xb3 GAS
0xb4 SUB
0xb5 CALL
0xb6 SWAP3
0xb7 POP
0xb8 POP
0xb9 POP
0xba ISZERO
0xbb ISZERO
0xbc PUSH2 0xc4
0xbf JUMPI
---
0x55: JUMPDEST 
0x56: V20 = 0x0
0x5a: V21 = S[0x0]
0x5c: V22 = 0x100
0x5f: V23 = EXP 0x100 0x0
0x61: V24 = DIV V21 0x1
0x62: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x78: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x8e: V29 = CALLVALUE
0x8f: V30 = 0x0
0x91: V31 = CALLDATASIZE
0x92: V32 = 0x40
0x94: V33 = M[0x40]
0x9b: CALLDATACOPY V33 0x0 V31
0x9d: V34 = ADD V33 V31
0xa5: V35 = 0x0
0xa7: V36 = 0x40
0xa9: V37 = M[0x40]
0xac: V38 = SUB V34 V37
0xb0: V39 = 0x8796
0xb3: V40 = GAS
0xb4: V41 = SUB V40 0x8796
0xb5: V42 = CALL V41 V28 V29 V37 V38 V37 0x0
0xba: V43 = ISZERO V42
0xbb: V44 = ISZERO V43
0xbc: V45 = 0xc4
0xbf: JUMPI 0xc4 V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc0
[0xc0:0xc3]
---
Predecessors: [0x55]
Successors: []
---
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 REVERT
---
0xc0: V46 = 0x0
0xc3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0x152]
---
Predecessors: [0x55]
Successors: [0x153]
---
0xc4 JUMPDEST
0xc5 PUSH32 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xe6 CALLER
0xe7 CALLVALUE
0xe8 PUSH1 0x0
0xea CALLDATASIZE
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP6
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b AND
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x20
0x120 ADD
0x121 DUP5
0x122 DUP2
0x123 MSTORE
0x124 PUSH1 0x20
0x126 ADD
0x127 DUP1
0x128 PUSH1 0x20
0x12a ADD
0x12b DUP3
0x12c DUP2
0x12d SUB
0x12e DUP3
0x12f MSTORE
0x130 DUP5
0x131 DUP5
0x132 DUP3
0x133 DUP2
0x134 DUP2
0x135 MSTORE
0x136 PUSH1 0x20
0x138 ADD
0x139 SWAP3
0x13a POP
0x13b DUP1
0x13c DUP3
0x13d DUP5
0x13e CALLDATACOPY
0x13f DUP3
0x140 ADD
0x141 SWAP2
0x142 POP
0x143 POP
0x144 SWAP6
0x145 POP
0x146 POP
0x147 POP
0x148 POP
0x149 POP
0x14a POP
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f SWAP2
0x150 SUB
0x151 SWAP1
0x152 LOG1
---
0xc4: JUMPDEST 
0xc5: V47 = 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xe6: V48 = CALLER
0xe7: V49 = CALLVALUE
0xe8: V50 = 0x0
0xea: V51 = CALLDATASIZE
0xeb: V52 = 0x40
0xed: V53 = M[0x40]
0xf0: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x106: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x11d: M[V53] = V57
0x11e: V58 = 0x20
0x120: V59 = ADD 0x20 V53
0x123: M[V59] = V49
0x124: V60 = 0x20
0x126: V61 = ADD 0x20 V59
0x128: V62 = 0x20
0x12a: V63 = ADD 0x20 V61
0x12d: V64 = SUB V63 V53
0x12f: M[V61] = V64
0x135: M[V63] = V51
0x136: V65 = 0x20
0x138: V66 = ADD 0x20 V63
0x13e: CALLDATACOPY V66 0x0 V51
0x140: V67 = ADD V66 V51
0x14b: V68 = 0x40
0x14d: V69 = M[0x40]
0x150: V70 = SUB V67 V69
0x152: LOG V69 V70 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x153
[0x153:0x154]
---
Predecessors: [0xc4]
Successors: []
---
0x153 JUMPDEST
0x154 STOP
---
0x153: JUMPDEST 
0x154: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x155
[0x155:0x15b]
---
Predecessors: [0xb]
Successors: [0x15c, 0x160]
---
0x155 JUMPDEST
0x156 CALLVALUE
0x157 ISZERO
0x158 PUSH2 0x160
0x15b JUMPI
---
0x155: JUMPDEST 
0x156: V71 = CALLVALUE
0x157: V72 = ISZERO V71
0x158: V73 = 0x160
0x15b: JUMPI 0x160 V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15c
[0x15c:0x15f]
---
Predecessors: [0x155]
Successors: []
---
0x15c PUSH1 0x0
0x15e DUP1
0x15f REVERT
---
0x15c: V74 = 0x0
0x15f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x160
[0x160:0x167]
---
Predecessors: [0x155]
Successors: [0x1f8]
---
0x160 JUMPDEST
0x161 PUSH2 0x168
0x164 PUSH2 0x1f8
0x167 JUMP
---
0x160: JUMPDEST 
0x161: V75 = 0x168
0x164: V76 = 0x1f8
0x167: JUMP 0x1f8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V10, 0x168]

================================

Block 0x168
[0x168:0x1a9]
---
Predecessors: [0x1f8]
Successors: []
---
0x168 JUMPDEST
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d DUP3
0x16e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x183 AND
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP2
0x1a0 POP
0x1a1 POP
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 SWAP2
0x1a7 SUB
0x1a8 SWAP1
0x1a9 RETURN
---
0x168: JUMPDEST 
0x169: V77 = 0x40
0x16b: V78 = M[0x40]
0x16e: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x183: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x184: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x19b: M[V78] = V82
0x19c: V83 = 0x20
0x19e: V84 = ADD 0x20 V78
0x1a2: V85 = 0x40
0x1a4: V86 = M[0x40]
0x1a7: V87 = SUB V84 V86
0x1a9: RETURN V86 V87
---
Entry stack: [V10, 0x168, V112]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x168]

================================

Block 0x1aa
[0x1aa:0x1b0]
---
Predecessors: [0x3e]
Successors: [0x1b1, 0x1b5]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac ISZERO
0x1ad PUSH2 0x1b5
0x1b0 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V88 = CALLVALUE
0x1ac: V89 = ISZERO V88
0x1ad: V90 = 0x1b5
0x1b0: JUMPI 0x1b5 V89
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b1
[0x1b1:0x1b4]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b1 PUSH1 0x0
0x1b3 DUP1
0x1b4 REVERT
---
0x1b1: V91 = 0x0
0x1b4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b5
[0x1b5:0x1e0]
---
Predecessors: [0x1aa]
Successors: [0x21d]
---
0x1b5 JUMPDEST
0x1b6 PUSH2 0x1e1
0x1b9 PUSH1 0x4
0x1bb DUP1
0x1bc DUP1
0x1bd CALLDATALOAD
0x1be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d3 AND
0x1d4 SWAP1
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 SWAP1
0x1d9 SWAP2
0x1da SWAP1
0x1db POP
0x1dc POP
0x1dd PUSH2 0x21d
0x1e0 JUMP
---
0x1b5: JUMPDEST 
0x1b6: V92 = 0x1e1
0x1b9: V93 = 0x4
0x1bd: V94 = CALLDATALOAD 0x4
0x1be: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1d5: V97 = 0x20
0x1d7: V98 = ADD 0x20 0x4
0x1dd: V99 = 0x21d
0x1e0: JUMP 0x21d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e1, V96]
Exit stack: [V10, 0x1e1, V96]

================================

Block 0x1e1
[0x1e1:0x1e2]
---
Predecessors: [0x4b0]
Successors: []
---
0x1e1 JUMPDEST
0x1e2 STOP
---
0x1e1: JUMPDEST 
0x1e2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e3
[0x1e3:0x1e9]
---
Predecessors: [0x49]
Successors: [0x1ea, 0x1ee]
---
0x1e3 JUMPDEST
0x1e4 CALLVALUE
0x1e5 ISZERO
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V100 = CALLVALUE
0x1e5: V101 = ISZERO V100
0x1e6: V102 = 0x1ee
0x1e9: JUMPI 0x1ee V101
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x1e3]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V103 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ee
[0x1ee:0x1f5]
---
Predecessors: [0x1e3]
Successors: [0x4b6]
---
0x1ee JUMPDEST
0x1ef PUSH2 0x1f6
0x1f2 PUSH2 0x4b6
0x1f5 JUMP
---
0x1ee: JUMPDEST 
0x1ef: V104 = 0x1f6
0x1f2: V105 = 0x4b6
0x1f5: JUMP 0x4b6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f6]
Exit stack: [V10, 0x1f6]

================================

Block 0x1f6
[0x1f6:0x1f7]
---
Predecessors: [0x52a]
Successors: []
---
0x1f6 JUMPDEST
0x1f7 STOP
---
0x1f6: JUMPDEST 
0x1f7: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f8
[0x1f8:0x21c]
---
Predecessors: [0x160]
Successors: [0x168]
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc SWAP1
0x1fd SLOAD
0x1fe SWAP1
0x1ff PUSH2 0x100
0x202 EXP
0x203 SWAP1
0x204 DIV
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b DUP2
0x21c JUMP
---
0x1f8: JUMPDEST 
0x1f9: V106 = 0x0
0x1fd: V107 = S[0x0]
0x1ff: V108 = 0x100
0x202: V109 = EXP 0x100 0x0
0x204: V110 = DIV V107 0x1
0x205: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x21c: JUMP 0x168
---
Entry stack: [V10, 0x168]
Stack pops: 1
Stack additions: [S0, V112]
Exit stack: [V10, 0x168, V112]

================================

Block 0x21d
[0x21d:0x278]
---
Predecessors: [0x1b5]
Successors: [0x279, 0x27d]
---
0x21d JUMPDEST
0x21e PUSH1 0x0
0x220 DUP1
0x221 PUSH1 0x0
0x223 DUP1
0x224 PUSH1 0x0
0x226 SWAP1
0x227 SLOAD
0x228 SWAP1
0x229 PUSH2 0x100
0x22c EXP
0x22d SWAP1
0x22e DIV
0x22f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x244 AND
0x245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25a AND
0x25b CALLER
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 AND
0x272 EQ
0x273 ISZERO
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x21d: JUMPDEST 
0x21e: V113 = 0x0
0x221: V114 = 0x0
0x224: V115 = 0x0
0x227: V116 = S[0x0]
0x229: V117 = 0x100
0x22c: V118 = EXP 0x100 0x0
0x22e: V119 = DIV V116 0x1
0x22f: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x244: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x245: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x25b: V124 = CALLER
0x25c: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x272: V127 = EQ V126 V123
0x273: V128 = ISZERO V127
0x274: V129 = ISZERO V128
0x275: V130 = 0x27d
0x278: JUMPI 0x27d V129
---
Entry stack: [V10, 0x1e1, V96]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x1e1, V96, 0x0, 0x0, 0x0]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x21d]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V131 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e1, V96, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, V96, 0x0, 0x0, 0x0]

================================

Block 0x27d
[0x27d:0x321]
---
Predecessors: [0x21d]
Successors: [0x322, 0x326]
---
0x27d JUMPDEST
0x27e DUP4
0x27f SWAP3
0x280 POP
0x281 ADDRESS
0x282 SWAP2
0x283 POP
0x284 DUP3
0x285 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29a AND
0x29b PUSH4 0x70a08231
0x2a0 DUP4
0x2a1 PUSH1 0x0
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 MSTORE
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP3
0x2ae PUSH4 0xffffffff
0x2b3 AND
0x2b4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d2 MUL
0x2d3 DUP2
0x2d4 MSTORE
0x2d5 PUSH1 0x4
0x2d7 ADD
0x2d8 DUP1
0x2d9 DUP3
0x2da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ef AND
0x2f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x305 AND
0x306 DUP2
0x307 MSTORE
0x308 PUSH1 0x20
0x30a ADD
0x30b SWAP2
0x30c POP
0x30d POP
0x30e PUSH1 0x20
0x310 PUSH1 0x40
0x312 MLOAD
0x313 DUP1
0x314 DUP4
0x315 SUB
0x316 DUP2
0x317 PUSH1 0x0
0x319 DUP8
0x31a DUP1
0x31b EXTCODESIZE
0x31c ISZERO
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x27d: JUMPDEST 
0x281: V132 = ADDRESS
0x285: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x29b: V135 = 0x70a08231
0x2a1: V136 = 0x0
0x2a3: V137 = 0x40
0x2a5: V138 = M[0x40]
0x2a6: V139 = 0x20
0x2a8: V140 = ADD 0x20 V138
0x2a9: M[V140] = 0x0
0x2aa: V141 = 0x40
0x2ac: V142 = M[0x40]
0x2ae: V143 = 0xffffffff
0x2b3: V144 = AND 0xffffffff 0x70a08231
0x2b4: V145 = 0x100000000000000000000000000000000000000000000000000000000
0x2d2: V146 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x2d4: M[V142] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2d5: V147 = 0x4
0x2d7: V148 = ADD 0x4 V142
0x2da: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ef: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x2f0: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x305: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x307: M[V148] = V152
0x308: V153 = 0x20
0x30a: V154 = ADD 0x20 V148
0x30e: V155 = 0x20
0x310: V156 = 0x40
0x312: V157 = M[0x40]
0x315: V158 = SUB V154 V157
0x317: V159 = 0x0
0x31b: V160 = EXTCODESIZE V134
0x31c: V161 = ISZERO V160
0x31d: V162 = ISZERO V161
0x31e: V163 = 0x326
0x321: JUMPI 0x326 V162
---
Entry stack: [V10, 0x1e1, V96, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, V132, S0, V134, 0x70a08231, V154, 0x20, V157, V158, V157, 0x0, V134]
Exit stack: [V10, 0x1e1, V96, V96, V132, 0x0, V134, 0x70a08231, V154, 0x20, V157, V158, V157, 0x0, V134]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x27d]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V164 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e1, V96, V96, V132, 0x0, V134, 0x70a08231, V154, 0x20, V157, V158, V157, 0x0, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, 0x0, V134, 0x70a08231, V154, 0x20, V157, V158, V157, 0x0, V134]

================================

Block 0x326
[0x326:0x332]
---
Predecessors: [0x27d]
Successors: [0x333, 0x337]
---
0x326 JUMPDEST
0x327 PUSH2 0x2c6
0x32a GAS
0x32b SUB
0x32c CALL
0x32d ISZERO
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x326: JUMPDEST 
0x327: V165 = 0x2c6
0x32a: V166 = GAS
0x32b: V167 = SUB V166 0x2c6
0x32c: V168 = CALL V167 V134 0x0 V157 V158 V157 0x20
0x32d: V169 = ISZERO V168
0x32e: V170 = ISZERO V169
0x32f: V171 = 0x337
0x332: JUMPI 0x337 V170
---
Entry stack: [V10, 0x1e1, V96, V96, V132, 0x0, V134, 0x70a08231, V154, 0x20, V157, V158, V157, 0x0, V134]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, 0x0, V134, 0x70a08231, V154]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x326]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V172 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e1, V96, V96, V132, 0x0, V134, 0x70a08231, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, 0x0, V134, 0x70a08231, V154]

================================

Block 0x337
[0x337:0x34c]
---
Predecessors: [0x326]
Successors: [0x34d, 0x351]
---
0x337 JUMPDEST
0x338 POP
0x339 POP
0x33a POP
0x33b PUSH1 0x40
0x33d MLOAD
0x33e DUP1
0x33f MLOAD
0x340 SWAP1
0x341 POP
0x342 SWAP1
0x343 POP
0x344 PUSH1 0x0
0x346 DUP2
0x347 EQ
0x348 ISZERO
0x349 PUSH2 0x351
0x34c JUMPI
---
0x337: JUMPDEST 
0x33b: V173 = 0x40
0x33d: V174 = M[0x40]
0x33f: V175 = M[V174]
0x344: V176 = 0x0
0x347: V177 = EQ V175 0x0
0x348: V178 = ISZERO V177
0x349: V179 = 0x351
0x34c: JUMPI 0x351 V178
---
Entry stack: [V10, 0x1e1, V96, V96, V132, 0x0, V134, 0x70a08231, V154]
Stack pops: 4
Stack additions: [V175]
Exit stack: [V10, 0x1e1, V96, V96, V132, V175]

================================

Block 0x34d
[0x34d:0x350]
---
Predecessors: [0x337]
Successors: [0x4af]
---
0x34d PUSH2 0x4af
0x350 JUMP
---
0x34d: V180 = 0x4af
0x350: JUMP 0x4af
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, V175]

================================

Block 0x351
[0x351:0x418]
---
Predecessors: [0x337]
Successors: [0x419, 0x41d]
---
0x351 JUMPDEST
0x352 DUP3
0x353 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x368 AND
0x369 PUSH4 0xa9059cbb
0x36e PUSH1 0x0
0x370 DUP1
0x371 SWAP1
0x372 SLOAD
0x373 SWAP1
0x374 PUSH2 0x100
0x377 EXP
0x378 SWAP1
0x379 DIV
0x37a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38f AND
0x390 DUP4
0x391 PUSH1 0x0
0x393 PUSH1 0x40
0x395 MLOAD
0x396 PUSH1 0x20
0x398 ADD
0x399 MSTORE
0x39a PUSH1 0x40
0x39c MLOAD
0x39d DUP4
0x39e PUSH4 0xffffffff
0x3a3 AND
0x3a4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3c2 MUL
0x3c3 DUP2
0x3c4 MSTORE
0x3c5 PUSH1 0x4
0x3c7 ADD
0x3c8 DUP1
0x3c9 DUP4
0x3ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3df AND
0x3e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f5 AND
0x3f6 DUP2
0x3f7 MSTORE
0x3f8 PUSH1 0x20
0x3fa ADD
0x3fb DUP3
0x3fc DUP2
0x3fd MSTORE
0x3fe PUSH1 0x20
0x400 ADD
0x401 SWAP3
0x402 POP
0x403 POP
0x404 POP
0x405 PUSH1 0x20
0x407 PUSH1 0x40
0x409 MLOAD
0x40a DUP1
0x40b DUP4
0x40c SUB
0x40d DUP2
0x40e PUSH1 0x0
0x410 DUP8
0x411 DUP1
0x412 EXTCODESIZE
0x413 ISZERO
0x414 ISZERO
0x415 PUSH2 0x41d
0x418 JUMPI
---
0x351: JUMPDEST 
0x353: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x368: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x369: V183 = 0xa9059cbb
0x36e: V184 = 0x0
0x372: V185 = S[0x0]
0x374: V186 = 0x100
0x377: V187 = EXP 0x100 0x0
0x379: V188 = DIV V185 0x1
0x37a: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x38f: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x391: V191 = 0x0
0x393: V192 = 0x40
0x395: V193 = M[0x40]
0x396: V194 = 0x20
0x398: V195 = ADD 0x20 V193
0x399: M[V195] = 0x0
0x39a: V196 = 0x40
0x39c: V197 = M[0x40]
0x39e: V198 = 0xffffffff
0x3a3: V199 = AND 0xffffffff 0xa9059cbb
0x3a4: V200 = 0x100000000000000000000000000000000000000000000000000000000
0x3c2: V201 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3c4: M[V197] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3c5: V202 = 0x4
0x3c7: V203 = ADD 0x4 V197
0x3ca: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x3e0: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x3f7: M[V203] = V207
0x3f8: V208 = 0x20
0x3fa: V209 = ADD 0x20 V203
0x3fd: M[V209] = V175
0x3fe: V210 = 0x20
0x400: V211 = ADD 0x20 V209
0x405: V212 = 0x20
0x407: V213 = 0x40
0x409: V214 = M[0x40]
0x40c: V215 = SUB V211 V214
0x40e: V216 = 0x0
0x412: V217 = EXTCODESIZE V182
0x413: V218 = ISZERO V217
0x414: V219 = ISZERO V218
0x415: V220 = 0x41d
0x418: JUMPI 0x41d V219
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175]
Stack pops: 3
Stack additions: [S2, S1, S0, V182, 0xa9059cbb, V211, 0x20, V214, V215, V214, 0x0, V182]
Exit stack: [V10, 0x1e1, V96, V96, V132, V175, V182, 0xa9059cbb, V211, 0x20, V214, V215, V214, 0x0, V182]

================================

Block 0x419
[0x419:0x41c]
---
Predecessors: [0x351]
Successors: []
---
0x419 PUSH1 0x0
0x41b DUP1
0x41c REVERT
---
0x419: V221 = 0x0
0x41c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175, V182, 0xa9059cbb, V211, 0x20, V214, V215, V214, 0x0, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, V175, V182, 0xa9059cbb, V211, 0x20, V214, V215, V214, 0x0, V182]

================================

Block 0x41d
[0x41d:0x429]
---
Predecessors: [0x351]
Successors: [0x42a, 0x42e]
---
0x41d JUMPDEST
0x41e PUSH2 0x2c6
0x421 GAS
0x422 SUB
0x423 CALL
0x424 ISZERO
0x425 ISZERO
0x426 PUSH2 0x42e
0x429 JUMPI
---
0x41d: JUMPDEST 
0x41e: V222 = 0x2c6
0x421: V223 = GAS
0x422: V224 = SUB V223 0x2c6
0x423: V225 = CALL V224 V182 0x0 V214 V215 V214 0x20
0x424: V226 = ISZERO V225
0x425: V227 = ISZERO V226
0x426: V228 = 0x42e
0x429: JUMPI 0x42e V227
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175, V182, 0xa9059cbb, V211, 0x20, V214, V215, V214, 0x0, V182]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, V175, V182, 0xa9059cbb, V211]

================================

Block 0x42a
[0x42a:0x42d]
---
Predecessors: [0x41d]
Successors: []
---
0x42a PUSH1 0x0
0x42c DUP1
0x42d REVERT
---
0x42a: V229 = 0x0
0x42d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175, V182, 0xa9059cbb, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, V175, V182, 0xa9059cbb, V211]

================================

Block 0x42e
[0x42e:0x43e]
---
Predecessors: [0x41d]
Successors: [0x43f, 0x443]
---
0x42e JUMPDEST
0x42f POP
0x430 POP
0x431 POP
0x432 PUSH1 0x40
0x434 MLOAD
0x435 DUP1
0x436 MLOAD
0x437 SWAP1
0x438 POP
0x439 ISZERO
0x43a ISZERO
0x43b PUSH2 0x443
0x43e JUMPI
---
0x42e: JUMPDEST 
0x432: V230 = 0x40
0x434: V231 = M[0x40]
0x436: V232 = M[V231]
0x439: V233 = ISZERO V232
0x43a: V234 = ISZERO V233
0x43b: V235 = 0x443
0x43e: JUMPI 0x443 V234
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175, V182, 0xa9059cbb, V211]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, V175]

================================

Block 0x43f
[0x43f:0x442]
---
Predecessors: [0x42e]
Successors: []
---
0x43f PUSH1 0x0
0x441 DUP1
0x442 REVERT
---
0x43f: V236 = 0x0
0x442: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, V175]

================================

Block 0x443
[0x443:0x4ae]
---
Predecessors: [0x42e]
Successors: [0x4af]
---
0x443 JUMPDEST
0x444 PUSH32 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
0x465 DUP5
0x466 DUP3
0x467 PUSH1 0x40
0x469 MLOAD
0x46a DUP1
0x46b DUP4
0x46c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x481 AND
0x482 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x497 AND
0x498 DUP2
0x499 MSTORE
0x49a PUSH1 0x20
0x49c ADD
0x49d DUP3
0x49e DUP2
0x49f MSTORE
0x4a0 PUSH1 0x20
0x4a2 ADD
0x4a3 SWAP3
0x4a4 POP
0x4a5 POP
0x4a6 POP
0x4a7 PUSH1 0x40
0x4a9 MLOAD
0x4aa DUP1
0x4ab SWAP2
0x4ac SUB
0x4ad SWAP1
0x4ae LOG1
---
0x443: JUMPDEST 
0x444: V237 = 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
0x467: V238 = 0x40
0x469: V239 = M[0x40]
0x46c: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x481: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x482: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x497: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x499: M[V239] = V243
0x49a: V244 = 0x20
0x49c: V245 = ADD 0x20 V239
0x49f: M[V245] = V175
0x4a0: V246 = 0x20
0x4a2: V247 = ADD 0x20 V245
0x4a7: V248 = 0x40
0x4a9: V249 = M[0x40]
0x4ac: V250 = SUB V247 V249
0x4ae: LOG V249 V250 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x1e1, V96, V96, V132, V175]

================================

Block 0x4af
[0x4af:0x4af]
---
Predecessors: [0x34d, 0x443]
Successors: [0x4b0]
---
0x4af JUMPDEST
---
0x4af: JUMPDEST 
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e1, V96, V96, V132, V175]

================================

Block 0x4b0
[0x4b0:0x4b5]
---
Predecessors: [0x4af]
Successors: [0x1e1]
---
0x4b0 JUMPDEST
0x4b1 POP
0x4b2 POP
0x4b3 POP
0x4b4 POP
0x4b5 JUMP
---
0x4b0: JUMPDEST 
0x4b5: JUMP 0x1e1
---
Entry stack: [V10, 0x1e1, V96, V96, V132, V175]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b6
[0x4b6:0x524]
---
Predecessors: [0x1ee]
Successors: [0x525, 0x529]
---
0x4b6 JUMPDEST
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba SWAP1
0x4bb SLOAD
0x4bc SWAP1
0x4bd PUSH2 0x100
0x4c0 EXP
0x4c1 SWAP1
0x4c2 DIV
0x4c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d8 AND
0x4d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ee AND
0x4ef ADDRESS
0x4f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x505 AND
0x506 BALANCE
0x507 PUSH1 0x40
0x509 MLOAD
0x50a PUSH1 0x0
0x50c PUSH1 0x40
0x50e MLOAD
0x50f DUP1
0x510 DUP4
0x511 SUB
0x512 DUP2
0x513 DUP6
0x514 DUP8
0x515 PUSH2 0x8796
0x518 GAS
0x519 SUB
0x51a CALL
0x51b SWAP3
0x51c POP
0x51d POP
0x51e POP
0x51f ISZERO
0x520 ISZERO
0x521 PUSH2 0x529
0x524 JUMPI
---
0x4b6: JUMPDEST 
0x4b7: V251 = 0x0
0x4bb: V252 = S[0x0]
0x4bd: V253 = 0x100
0x4c0: V254 = EXP 0x100 0x0
0x4c2: V255 = DIV V252 0x1
0x4c3: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d8: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x4d9: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x4ef: V260 = ADDRESS
0x4f0: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x505: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x506: V263 = BALANCE V262
0x507: V264 = 0x40
0x509: V265 = M[0x40]
0x50a: V266 = 0x0
0x50c: V267 = 0x40
0x50e: V268 = M[0x40]
0x511: V269 = SUB V265 V268
0x515: V270 = 0x8796
0x518: V271 = GAS
0x519: V272 = SUB V271 0x8796
0x51a: V273 = CALL V272 V259 V263 V268 V269 V268 0x0
0x51f: V274 = ISZERO V273
0x520: V275 = ISZERO V274
0x521: V276 = 0x529
0x524: JUMPI 0x529 V275
---
Entry stack: [V10, 0x1f6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f6]

================================

Block 0x525
[0x525:0x528]
---
Predecessors: [0x4b6]
Successors: []
---
0x525 PUSH1 0x0
0x527 DUP1
0x528 REVERT
---
0x525: V277 = 0x0
0x528: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1f6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f6]

================================

Block 0x529
[0x529:0x529]
---
Predecessors: [0x4b6]
Successors: [0x52a]
---
0x529 JUMPDEST
---
0x529: JUMPDEST 
---
Entry stack: [V10, 0x1f6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f6]

================================

Block 0x52a
[0x52a:0x52b]
---
Predecessors: [0x529]
Successors: [0x1f6]
---
0x52a JUMPDEST
0x52b JUMP
---
0x52a: JUMPDEST 
0x52b: JUMP 0x1f6
---
Entry stack: [V10, 0x1f6]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x52c
[0x52c:0x562]
---
Predecessors: []
Successors: []
---
0x52c STOP
0x52d LOG1
0x52e PUSH6 0x627a7a723058
0x535 SHA3
0x536 BLOCKHASH
0x537 MISSING 0x2b
0x538 SWAP11
0x539 MISSING 0x2b
0x53a NUMBER
0x53b DUP11
0x53c SMOD
0x53d MISSING 0xba
0x53e MISSING 0x25
0x53f MISSING 0x47
0x540 MISSING 0xdd
0x541 MSTORE8
0x542 PUSH7 0xe1090af5d29058
0x54a PUSH24 0x881c8a0655d17202cb22850029
---
0x52c: STOP 
0x52d: LOG S0 S1 S2
0x52e: V278 = 0x627a7a723058
0x535: V279 = SHA3 0x627a7a723058 S3
0x536: V280 = BLOCKHASH V279
0x537: MISSING 0x2b
0x539: MISSING 0x2b
0x53a: V281 = NUMBER
0x53c: V282 = SMOD S9 V281
0x53d: MISSING 0xba
0x53e: MISSING 0x25
0x53f: MISSING 0x47
0x540: MISSING 0xdd
0x541: M8[S0] = S1
0x542: V283 = 0xe1090af5d29058
0x54a: V284 = 0x881c8a0655d17202cb22850029
---
Entry stack: []
Stack pops: 0
Stack additions: [V280, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V282, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0x881c8a0655d17202cb22850029, 0xe1090af5d29058]
Exit stack: []

================================

Function 0:
Public function signature: 0x821de3
Entry block: 0x155
Exit block: 0x168
Body: 0x155, 0x15c, 0x160, 0x168, 0x1f8

Function 1:
Public function signature: 0x3ef13367
Entry block: 0x1aa
Exit block: 0x1e1
Body: 0x1aa, 0x1b1, 0x1b5, 0x1e1, 0x21d, 0x279, 0x27d, 0x322, 0x326, 0x333, 0x337, 0x34d, 0x351, 0x419, 0x41d, 0x42a, 0x42e, 0x43f, 0x443, 0x4af, 0x4b0

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0x1e3
Exit block: 0x1f6
Body: 0x1e3, 0x1ea, 0x1ee, 0x1f6, 0x4b6, 0x525, 0x529, 0x52a

Function 3:
Public fallback function
Entry block: 0x54
Exit block: 0x153
Body: 0x54, 0x55, 0xc0, 0xc4, 0x153

