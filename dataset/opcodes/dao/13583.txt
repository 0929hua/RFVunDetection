Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x81]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2cf2c0af
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x81
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2cf2c0af
0x20: V14 = EQ V12 0x2cf2c0af
0x21: V15 = 0x81
0x24: JUMPI 0x81 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x99]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0x99
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0x99
0x2f: JUMPI 0x99 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb1]
---
0x30 DUP1
0x31 PUSH4 0x43d726d6
0x36 EQ
0x37 PUSH2 0xb1
0x3a JUMPI
---
0x31: V19 = 0x43d726d6
0x36: V20 = EQ 0x43d726d6 V12
0x37: V21 = 0xb1
0x3a: JUMPI 0xb1 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xc6]
---
0x3b DUP1
0x3c PUSH4 0x57a8955a
0x41 EQ
0x42 PUSH2 0xc6
0x45 JUMPI
---
0x3c: V22 = 0x57a8955a
0x41: V23 = EQ 0x57a8955a V12
0x42: V24 = 0xc6
0x45: JUMPI 0xc6 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x114]
---
0x46 DUP1
0x47 PUSH4 0x5c73dcea
0x4c EQ
0x4d PUSH2 0x114
0x50 JUMPI
---
0x47: V25 = 0x5c73dcea
0x4c: V26 = EQ 0x5c73dcea V12
0x4d: V27 = 0x114
0x50: JUMPI 0x114 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x175]
---
0x51 DUP1
0x52 PUSH4 0x70a08231
0x57 EQ
0x58 PUSH2 0x175
0x5b JUMPI
---
0x52: V28 = 0x70a08231
0x57: V29 = EQ 0x70a08231 V12
0x58: V30 = 0x175
0x5b: JUMPI 0x175 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a6]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x1a6
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x1a6
0x66: JUMPI 0x1a6 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d5]
---
0x67 DUP1
0x68 PUSH4 0xd0e30db0
0x6d EQ
0x6e PUSH2 0x1d5
0x71 JUMPI
---
0x68: V34 = 0xd0e30db0
0x6d: V35 = EQ 0xd0e30db0 V12
0x6e: V36 = 0x1d5
0x71: JUMPI 0x1d5 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1df]
---
0x72 DUP1
0x73 PUSH4 0xf1b83630
0x78 EQ
0x79 PUSH2 0x1df
0x7c JUMPI
---
0x73: V37 = 0xf1b83630
0x78: V38 = EQ 0xf1b83630 V12
0x79: V39 = 0x1df
0x7c: JUMPI 0x1df V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x0, 0x72, 0x26b, 0x2bf, 0x2ec, 0x516, 0x721]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x7d]
Successors: [0x7f]
---
0x7e JUMPDEST
---
0x7e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x7e]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x87]
---
Predecessors: [0xb]
Successors: [0x88, 0x8c]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x81: JUMPDEST 
0x82: V40 = CALLVALUE
0x83: V41 = ISZERO V40
0x84: V42 = 0x8c
0x87: JUMPI 0x8c V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x81]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V43 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x1f7]
---
0x8c JUMPDEST
0x8d PUSH2 0x7d
0x90 PUSH1 0x4
0x92 CALLDATALOAD
0x93 PUSH2 0x1f7
0x96 JUMP
---
0x8c: JUMPDEST 
0x8d: V44 = 0x7d
0x90: V45 = 0x4
0x92: V46 = CALLDATALOAD 0x4
0x93: V47 = 0x1f7
0x96: JUMP 0x1f7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V46]
Exit stack: [V12, 0x7d, V46]

================================

Block 0x97
[0x97:0x98]
---
Predecessors: []
Successors: []
---
0x97 JUMPDEST
0x98 STOP
---
0x97: JUMPDEST 
0x98: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x99
[0x99:0x9f]
---
Predecessors: [0x25]
Successors: [0xa0, 0xa4]
---
0x99 JUMPDEST
0x9a CALLVALUE
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x99: JUMPDEST 
0x9a: V48 = CALLVALUE
0x9b: V49 = ISZERO V48
0x9c: V50 = 0xa4
0x9f: JUMPI 0xa4 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x99]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V51 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0x26f]
---
0xa4 JUMPDEST
0xa5 PUSH2 0x7d
0xa8 PUSH1 0x4
0xaa CALLDATALOAD
0xab PUSH2 0x26f
0xae JUMP
---
0xa4: JUMPDEST 
0xa5: V52 = 0x7d
0xa8: V53 = 0x4
0xaa: V54 = CALLDATALOAD 0x4
0xab: V55 = 0x26f
0xae: JUMP 0x26f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V54]
Exit stack: [V12, 0x7d, V54]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: []
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x30]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V56 = CALLVALUE
0xb3: V57 = ISZERO V56
0xb4: V58 = 0xbc
0xb7: JUMPI 0xbc V57
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V59 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb1]
Successors: [0x2c2]
---
0xbc JUMPDEST
0xbd PUSH2 0x7d
0xc0 PUSH2 0x2c2
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V60 = 0x7d
0xc0: V61 = 0x2c2
0xc3: JUMP 0x2c2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: []
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0x3b]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V62 = CALLVALUE
0xc8: V63 = ISZERO V62
0xc9: V64 = 0xd1
0xcc: JUMPI 0xd1 V63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V65 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0x111]
---
Predecessors: [0xc6]
Successors: [0x2ee]
---
0xd1 JUMPDEST
0xd2 PUSH2 0x7d
0xd5 PUSH1 0x4
0xd7 CALLDATALOAD
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 PUSH1 0x24
0xe2 CALLDATALOAD
0xe3 DUP2
0xe4 AND
0xe5 SWAP1
0xe6 PUSH1 0x44
0xe8 CALLDATALOAD
0xe9 DUP2
0xea AND
0xeb SWAP1
0xec PUSH1 0x64
0xee CALLDATALOAD
0xef SWAP1
0xf0 PUSH1 0x84
0xf2 CALLDATALOAD
0xf3 SWAP1
0xf4 PUSH1 0xa4
0xf6 CALLDATALOAD
0xf7 SWAP1
0xf8 PUSH1 0xc4
0xfa CALLDATALOAD
0xfb AND
0xfc PUSH1 0xe4
0xfe CALLDATALOAD
0xff PUSH2 0x104
0x102 CALLDATALOAD
0x103 PUSH1 0xff
0x105 PUSH2 0x124
0x108 CALLDATALOAD
0x109 AND
0x10a PUSH2 0x144
0x10d CALLDATALOAD
0x10e PUSH2 0x2ee
0x111 JUMP
---
0xd1: JUMPDEST 
0xd2: V66 = 0x7d
0xd5: V67 = 0x4
0xd7: V68 = CALLDATALOAD 0x4
0xd8: V69 = 0x1
0xda: V70 = 0xa0
0xdc: V71 = 0x2
0xde: V72 = EXP 0x2 0xa0
0xdf: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0: V74 = 0x24
0xe2: V75 = CALLDATALOAD 0x24
0xe4: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xe6: V77 = 0x44
0xe8: V78 = CALLDATALOAD 0x44
0xea: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0xec: V80 = 0x64
0xee: V81 = CALLDATALOAD 0x64
0xf0: V82 = 0x84
0xf2: V83 = CALLDATALOAD 0x84
0xf4: V84 = 0xa4
0xf6: V85 = CALLDATALOAD 0xa4
0xf8: V86 = 0xc4
0xfa: V87 = CALLDATALOAD 0xc4
0xfb: V88 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V89 = 0xe4
0xfe: V90 = CALLDATALOAD 0xe4
0xff: V91 = 0x104
0x102: V92 = CALLDATALOAD 0x104
0x103: V93 = 0xff
0x105: V94 = 0x124
0x108: V95 = CALLDATALOAD 0x124
0x109: V96 = AND V95 0xff
0x10a: V97 = 0x144
0x10d: V98 = CALLDATALOAD 0x144
0x10e: V99 = 0x2ee
0x111: JUMP 0x2ee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98]
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98]

================================

Block 0x112
[0x112:0x113]
---
Predecessors: []
Successors: []
---
0x112 JUMPDEST
0x113 STOP
---
0x112: JUMPDEST 
0x113: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x46]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V100 = CALLVALUE
0x116: V101 = ISZERO V100
0x117: V102 = 0x11f
0x11a: JUMPI 0x11f V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V103 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11f
[0x11f:0x160]
---
Predecessors: [0x114]
Successors: [0x524]
---
0x11f JUMPDEST
0x120 PUSH2 0x161
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b PUSH1 0x4
0x12d CALLDATALOAD
0x12e DUP2
0x12f AND
0x130 SWAP1
0x131 PUSH1 0x24
0x133 CALLDATALOAD
0x134 SWAP1
0x135 PUSH1 0x44
0x137 CALLDATALOAD
0x138 DUP2
0x139 AND
0x13a SWAP1
0x13b PUSH1 0x64
0x13d CALLDATALOAD
0x13e SWAP1
0x13f PUSH1 0x84
0x141 CALLDATALOAD
0x142 SWAP1
0x143 PUSH1 0xa4
0x145 CALLDATALOAD
0x146 SWAP1
0x147 PUSH1 0xc4
0x149 CALLDATALOAD
0x14a AND
0x14b PUSH1 0xff
0x14d PUSH1 0xe4
0x14f CALLDATALOAD
0x150 AND
0x151 PUSH2 0x104
0x154 CALLDATALOAD
0x155 PUSH2 0x124
0x158 CALLDATALOAD
0x159 PUSH2 0x144
0x15c CALLDATALOAD
0x15d PUSH2 0x524
0x160 JUMP
---
0x11f: JUMPDEST 
0x120: V104 = 0x161
0x123: V105 = 0x1
0x125: V106 = 0xa0
0x127: V107 = 0x2
0x129: V108 = EXP 0x2 0xa0
0x12a: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12b: V110 = 0x4
0x12d: V111 = CALLDATALOAD 0x4
0x12f: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x131: V113 = 0x24
0x133: V114 = CALLDATALOAD 0x24
0x135: V115 = 0x44
0x137: V116 = CALLDATALOAD 0x44
0x139: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x13b: V118 = 0x64
0x13d: V119 = CALLDATALOAD 0x64
0x13f: V120 = 0x84
0x141: V121 = CALLDATALOAD 0x84
0x143: V122 = 0xa4
0x145: V123 = CALLDATALOAD 0xa4
0x147: V124 = 0xc4
0x149: V125 = CALLDATALOAD 0xc4
0x14a: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V127 = 0xff
0x14d: V128 = 0xe4
0x14f: V129 = CALLDATALOAD 0xe4
0x150: V130 = AND V129 0xff
0x151: V131 = 0x104
0x154: V132 = CALLDATALOAD 0x104
0x155: V133 = 0x124
0x158: V134 = CALLDATALOAD 0x124
0x159: V135 = 0x144
0x15c: V136 = CALLDATALOAD 0x144
0x15d: V137 = 0x524
0x160: JUMP 0x524
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136]
Exit stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136]

================================

Block 0x161
[0x161:0x174]
---
Predecessors: [0x5fc]
Successors: []
---
0x161 JUMPDEST
0x162 PUSH1 0x40
0x164 MLOAD
0x165 SWAP1
0x166 ISZERO
0x167 ISZERO
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x20
0x16c ADD
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 SWAP2
0x172 SUB
0x173 SWAP1
0x174 RETURN
---
0x161: JUMPDEST 
0x162: V138 = 0x40
0x164: V139 = M[0x40]
0x166: V140 = ISZERO V564
0x167: V141 = ISZERO V140
0x169: M[V139] = V141
0x16a: V142 = 0x20
0x16c: V143 = ADD 0x20 V139
0x16d: V144 = 0x40
0x16f: V145 = M[0x40]
0x172: V146 = SUB V143 V145
0x174: RETURN V145 V146
---
Entry stack: [V12, V564]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x175
[0x175:0x17b]
---
Predecessors: [0x51]
Successors: [0x17c, 0x180]
---
0x175 JUMPDEST
0x176 CALLVALUE
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x175: JUMPDEST 
0x176: V147 = CALLVALUE
0x177: V148 = ISZERO V147
0x178: V149 = 0x180
0x17b: JUMPI 0x180 V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x175]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V150 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x180
[0x180:0x193]
---
Predecessors: [0x175]
Successors: [0x60c]
---
0x180 JUMPDEST
0x181 PUSH2 0x194
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c PUSH1 0x4
0x18e CALLDATALOAD
0x18f AND
0x190 PUSH2 0x60c
0x193 JUMP
---
0x180: JUMPDEST 
0x181: V151 = 0x194
0x184: V152 = 0x1
0x186: V153 = 0xa0
0x188: V154 = 0x2
0x18a: V155 = EXP 0x2 0xa0
0x18b: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18c: V157 = 0x4
0x18e: V158 = CALLDATALOAD 0x4
0x18f: V159 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x190: V160 = 0x60c
0x193: JUMP 0x60c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x194, V159]
Exit stack: [V12, 0x194, V159]

================================

Block 0x194
[0x194:0x1a5]
---
Predecessors: [0x68d]
Successors: []
---
0x194 JUMPDEST
0x195 PUSH1 0x40
0x197 MLOAD
0x198 SWAP1
0x199 DUP2
0x19a MSTORE
0x19b PUSH1 0x20
0x19d ADD
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 SWAP2
0x1a3 SUB
0x1a4 SWAP1
0x1a5 RETURN
---
0x194: JUMPDEST 
0x195: V161 = 0x40
0x197: V162 = M[0x40]
0x19a: M[V162] = V621
0x19b: V163 = 0x20
0x19d: V164 = ADD 0x20 V162
0x19e: V165 = 0x40
0x1a0: V166 = M[0x40]
0x1a3: V167 = SUB V164 V166
0x1a5: RETURN V166 V167
---
Entry stack: [V12, V621]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a6
[0x1a6:0x1ac]
---
Predecessors: [0x5c]
Successors: [0x1ad, 0x1b1]
---
0x1a6 JUMPDEST
0x1a7 CALLVALUE
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V168 = CALLVALUE
0x1a8: V169 = ISZERO V168
0x1a9: V170 = 0x1b1
0x1ac: JUMPI 0x1b1 V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a6]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V171 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b1
[0x1b1:0x1b8]
---
Predecessors: [0x1a6]
Successors: [0x693]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x1b9
0x1b5 PUSH2 0x693
0x1b8 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V172 = 0x1b9
0x1b5: V173 = 0x693
0x1b8: JUMP 0x693
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b9]
Exit stack: [V12, 0x1b9]

================================

Block 0x1b9
[0x1b9:0x1d4]
---
Predecessors: [0x693]
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 SWAP1
0x1c6 SWAP2
0x1c7 AND
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd PUSH1 0x40
0x1cf MLOAD
0x1d0 DUP1
0x1d1 SWAP2
0x1d2 SUB
0x1d3 SWAP1
0x1d4 RETURN
---
0x1b9: JUMPDEST 
0x1ba: V174 = 0x40
0x1bc: V175 = M[0x40]
0x1bd: V176 = 0x1
0x1bf: V177 = 0xa0
0x1c1: V178 = 0x2
0x1c3: V179 = EXP 0x2 0xa0
0x1c4: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c7: V181 = AND V629 0xffffffffffffffffffffffffffffffffffffffff
0x1c9: M[V175] = V181
0x1ca: V182 = 0x20
0x1cc: V183 = ADD 0x20 V175
0x1cd: V184 = 0x40
0x1cf: V185 = M[0x40]
0x1d2: V186 = SUB V183 V185
0x1d4: RETURN V185 V186
---
Entry stack: [V12, 0x1b9, V629]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b9]

================================

Block 0x1d5
[0x1d5:0x1dc]
---
Predecessors: [0x67]
Successors: [0x2eb]
---
0x1d5 JUMPDEST
0x1d6 PUSH2 0x7d
0x1d9 PUSH2 0x2eb
0x1dc JUMP
---
0x1d5: JUMPDEST 
0x1d6: V187 = 0x7d
0x1d9: V188 = 0x2eb
0x1dc: JUMP 0x2eb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x1dd
[0x1dd:0x1de]
---
Predecessors: []
Successors: []
---
0x1dd JUMPDEST
0x1de STOP
---
0x1dd: JUMPDEST 
0x1de: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x72]
Successors: [0x1e6, 0x1ea]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V189 = CALLVALUE
0x1e1: V190 = ISZERO V189
0x1e2: V191 = 0x1ea
0x1e5: JUMPI 0x1ea V190
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V192 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ea
[0x1ea:0x1f4]
---
Predecessors: [0x1df]
Successors: [0x6a5]
---
0x1ea JUMPDEST
0x1eb PUSH2 0x7d
0x1ee PUSH1 0x4
0x1f0 CALLDATALOAD
0x1f1 PUSH2 0x6a5
0x1f4 JUMP
---
0x1ea: JUMPDEST 
0x1eb: V193 = 0x7d
0x1ee: V194 = 0x4
0x1f0: V195 = CALLDATALOAD 0x4
0x1f1: V196 = 0x6a5
0x1f4: JUMP 0x6a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V195]
Exit stack: [V12, 0x7d, V195]

================================

Block 0x1f5
[0x1f5:0x1f6]
---
Predecessors: []
Successors: []
---
0x1f5 JUMPDEST
0x1f6 STOP
---
0x1f5: JUMPDEST 
0x1f6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f7
[0x1f7:0x20e]
---
Predecessors: [0x8c]
Successors: [0x20f, 0x213]
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb SLOAD
0x1fc CALLER
0x1fd PUSH1 0x1
0x1ff PUSH1 0xa0
0x201 PUSH1 0x2
0x203 EXP
0x204 SUB
0x205 SWAP1
0x206 DUP2
0x207 AND
0x208 SWAP2
0x209 AND
0x20a EQ
0x20b PUSH2 0x213
0x20e JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V197 = 0x0
0x1fb: V198 = S[0x0]
0x1fc: V199 = CALLER
0x1fd: V200 = 0x1
0x1ff: V201 = 0xa0
0x201: V202 = 0x2
0x203: V203 = EXP 0x2 0xa0
0x204: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x207: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x209: V206 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V207 = EQ V206 V205
0x20b: V208 = 0x213
0x20e: JUMPI 0x213 V207
---
Entry stack: [V12, 0x7d, V46]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V46, 0x0]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x1f7]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V209 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, 0x0]

================================

Block 0x213
[0x213:0x24f]
---
Predecessors: [0x1f7]
Successors: [0x250, 0x254]
---
0x213 JUMPDEST
0x214 POP
0x215 PUSH1 0x1
0x217 SLOAD
0x218 PUSH1 0x1
0x21a PUSH1 0xa0
0x21c PUSH1 0x2
0x21e EXP
0x21f SUB
0x220 AND
0x221 DUP1
0x222 PUSH4 0xd0e30db0
0x227 DUP4
0x228 PUSH1 0x40
0x22a MLOAD
0x22b DUP3
0x22c PUSH4 0xffffffff
0x231 AND
0x232 PUSH1 0xe0
0x234 PUSH1 0x2
0x236 EXP
0x237 MUL
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x4
0x23c ADD
0x23d PUSH1 0x0
0x23f PUSH1 0x40
0x241 MLOAD
0x242 DUP1
0x243 DUP4
0x244 SUB
0x245 DUP2
0x246 DUP6
0x247 DUP9
0x248 DUP1
0x249 EXTCODESIZE
0x24a ISZERO
0x24b ISZERO
0x24c PUSH2 0x254
0x24f JUMPI
---
0x213: JUMPDEST 
0x215: V210 = 0x1
0x217: V211 = S[0x1]
0x218: V212 = 0x1
0x21a: V213 = 0xa0
0x21c: V214 = 0x2
0x21e: V215 = EXP 0x2 0xa0
0x21f: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x222: V218 = 0xd0e30db0
0x228: V219 = 0x40
0x22a: V220 = M[0x40]
0x22c: V221 = 0xffffffff
0x231: V222 = AND 0xffffffff 0xd0e30db0
0x232: V223 = 0xe0
0x234: V224 = 0x2
0x236: V225 = EXP 0x2 0xe0
0x237: V226 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x239: M[V220] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x23a: V227 = 0x4
0x23c: V228 = ADD 0x4 V220
0x23d: V229 = 0x0
0x23f: V230 = 0x40
0x241: V231 = M[0x40]
0x244: V232 = SUB V228 V231
0x249: V233 = EXTCODESIZE V217
0x24a: V234 = ISZERO V233
0x24b: V235 = ISZERO V234
0x24c: V236 = 0x254
0x24f: JUMPI 0x254 V235
---
Entry stack: [V12, 0x7d, V46, 0x0]
Stack pops: 2
Stack additions: [S1, V217, V217, 0xd0e30db0, S1, V228, 0x0, V231, V232, V231, S1, V217]
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]

================================

Block 0x250
[0x250:0x253]
---
Predecessors: [0x213]
Successors: []
---
0x250 PUSH1 0x0
0x252 DUP1
0x253 REVERT
---
0x250: V237 = 0x0
0x253: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]

================================

Block 0x254
[0x254:0x260]
---
Predecessors: [0x213]
Successors: [0x261, 0x265]
---
0x254 JUMPDEST
0x255 PUSH2 0x25ee
0x258 GAS
0x259 SUB
0x25a CALL
0x25b ISZERO
0x25c ISZERO
0x25d PUSH2 0x265
0x260 JUMPI
---
0x254: JUMPDEST 
0x255: V238 = 0x25ee
0x258: V239 = GAS
0x259: V240 = SUB V239 0x25ee
0x25a: V241 = CALL V240 V217 V46 V231 V232 V231 0x0
0x25b: V242 = ISZERO V241
0x25c: V243 = ISZERO V242
0x25d: V244 = 0x265
0x260: JUMPI 0x265 V243
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x254]
Successors: []
---
0x261 PUSH1 0x0
0x263 DUP1
0x264 REVERT
---
0x261: V245 = 0x0
0x264: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]

================================

Block 0x265
[0x265:0x269]
---
Predecessors: [0x254]
Successors: [0x26a]
---
0x265 JUMPDEST
0x266 POP
0x267 POP
0x268 POP
0x269 POP
---
0x265: JUMPDEST 
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217]

================================

Block 0x26a
[0x26a:0x26a]
---
Predecessors: [0x265]
Successors: [0x26b]
---
0x26a JUMPDEST
---
0x26a: JUMPDEST 
---
Entry stack: [V12, 0x7d, V46, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217]

================================

Block 0x26b
[0x26b:0x26e]
---
Predecessors: [0x26a]
Successors: [0x7d]
---
0x26b JUMPDEST
0x26c POP
0x26d POP
0x26e JUMP
---
0x26b: JUMPDEST 
0x26e: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V46, V217]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x26f
[0x26f:0x285]
---
Predecessors: [0xa4]
Successors: [0x286, 0x28a]
---
0x26f JUMPDEST
0x270 PUSH1 0x0
0x272 SLOAD
0x273 CALLER
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c SWAP1
0x27d DUP2
0x27e AND
0x27f SWAP2
0x280 AND
0x281 EQ
0x282 PUSH2 0x28a
0x285 JUMPI
---
0x26f: JUMPDEST 
0x270: V246 = 0x0
0x272: V247 = S[0x0]
0x273: V248 = CALLER
0x274: V249 = 0x1
0x276: V250 = 0xa0
0x278: V251 = 0x2
0x27a: V252 = EXP 0x2 0xa0
0x27b: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x280: V255 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x281: V256 = EQ V255 V254
0x282: V257 = 0x28a
0x285: JUMPI 0x28a V256
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x286
[0x286:0x289]
---
Predecessors: [0x26f]
Successors: []
---
0x286 PUSH1 0x0
0x288 DUP1
0x289 REVERT
---
0x286: V258 = 0x0
0x289: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x28a
[0x28a:0x2b8]
---
Predecessors: [0x26f]
Successors: [0x2b9, 0x2bd]
---
0x28a JUMPDEST
0x28b PUSH1 0x0
0x28d SLOAD
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 AND
0x297 DUP2
0x298 ISZERO
0x299 PUSH2 0x8fc
0x29c MUL
0x29d DUP3
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 PUSH1 0x0
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 DUP1
0x2a7 DUP4
0x2a8 SUB
0x2a9 DUP2
0x2aa DUP6
0x2ab DUP9
0x2ac DUP9
0x2ad CALL
0x2ae SWAP4
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 ISZERO
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x28a: JUMPDEST 
0x28b: V259 = 0x0
0x28d: V260 = S[0x0]
0x28e: V261 = 0x1
0x290: V262 = 0xa0
0x292: V263 = 0x2
0x294: V264 = EXP 0x2 0xa0
0x295: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x296: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x298: V267 = ISZERO V54
0x299: V268 = 0x8fc
0x29c: V269 = MUL 0x8fc V267
0x29e: V270 = 0x40
0x2a0: V271 = M[0x40]
0x2a1: V272 = 0x0
0x2a3: V273 = 0x40
0x2a5: V274 = M[0x40]
0x2a8: V275 = SUB V271 V274
0x2ad: V276 = CALL V269 V266 V54 V274 V275 V274 0x0
0x2b3: V277 = ISZERO V276
0x2b4: V278 = ISZERO V277
0x2b5: V279 = 0x2bd
0x2b8: JUMPI 0x2bd V278
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x28a]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V280 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2bd
[0x2bd:0x2bd]
---
Predecessors: [0x28a]
Successors: [0x2be]
---
0x2bd JUMPDEST
---
0x2bd: JUMPDEST 
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2be
[0x2be:0x2be]
---
Predecessors: [0x2bd]
Successors: [0x2bf]
---
0x2be JUMPDEST
---
0x2be: JUMPDEST 
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2bf
[0x2bf:0x2c1]
---
Predecessors: [0x2be]
Successors: [0x7d]
---
0x2bf JUMPDEST
0x2c0 POP
0x2c1 JUMP
---
0x2bf: JUMPDEST 
0x2c1: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c2
[0x2c2:0x2d8]
---
Predecessors: [0xbc]
Successors: [0x2d9, 0x2dd]
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x0
0x2c5 SLOAD
0x2c6 CALLER
0x2c7 PUSH1 0x1
0x2c9 PUSH1 0xa0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce SUB
0x2cf SWAP1
0x2d0 DUP2
0x2d1 AND
0x2d2 SWAP2
0x2d3 AND
0x2d4 EQ
0x2d5 PUSH2 0x2dd
0x2d8 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V281 = 0x0
0x2c5: V282 = S[0x0]
0x2c6: V283 = CALLER
0x2c7: V284 = 0x1
0x2c9: V285 = 0xa0
0x2cb: V286 = 0x2
0x2cd: V287 = EXP 0x2 0xa0
0x2ce: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d1: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x2d3: V290 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V291 = EQ V290 V289
0x2d5: V292 = 0x2dd
0x2d8: JUMPI 0x2dd V291
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2d9
[0x2d9:0x2dc]
---
Predecessors: [0x2c2]
Successors: []
---
0x2d9 PUSH1 0x0
0x2db DUP1
0x2dc REVERT
---
0x2d9: V293 = 0x0
0x2dc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2dd
[0x2dd:0x2ea]
---
Predecessors: [0x2c2]
Successors: []
---
0x2dd JUMPDEST
0x2de PUSH1 0x0
0x2e0 SLOAD
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 AND
0x2ea SELFDESTRUCT
---
0x2dd: JUMPDEST 
0x2de: V294 = 0x0
0x2e0: V295 = S[0x0]
0x2e1: V296 = 0x1
0x2e3: V297 = 0xa0
0x2e5: V298 = 0x2
0x2e7: V299 = EXP 0x2 0xa0
0x2e8: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e9: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x2ea: SELFDESTRUCT V301
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2eb
[0x2eb:0x2eb]
---
Predecessors: [0x1d5]
Successors: [0x2ec]
---
0x2eb JUMPDEST
---
0x2eb: JUMPDEST 
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2ec
[0x2ec:0x2ed]
---
Predecessors: [0x2eb]
Successors: [0x7d]
---
0x2ec JUMPDEST
0x2ed JUMP
---
0x2ec: JUMPDEST 
0x2ed: JUMP 0x7d
---
Entry stack: [V12, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ee
[0x2ee:0x305]
---
Predecessors: [0xd1]
Successors: [0x306, 0x30a]
---
0x2ee JUMPDEST
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 SLOAD
0x2f3 CALLER
0x2f4 PUSH1 0x1
0x2f6 PUSH1 0xa0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb SUB
0x2fc SWAP1
0x2fd DUP2
0x2fe AND
0x2ff SWAP2
0x300 AND
0x301 EQ
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V302 = 0x0
0x2f2: V303 = S[0x0]
0x2f3: V304 = CALLER
0x2f4: V305 = 0x1
0x2f6: V306 = 0xa0
0x2f8: V307 = 0x2
0x2fa: V308 = EXP 0x2 0xa0
0x2fb: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x300: V311 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0x301: V312 = EQ V311 V310
0x302: V313 = 0x30a
0x305: JUMPI 0x30a V312
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, 0x0]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2ee]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V314 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, 0x0]

================================

Block 0x30a
[0x30a:0x3bf]
---
Predecessors: [0x2ee]
Successors: [0x3c0, 0x3c4]
---
0x30a JUMPDEST
0x30b POP
0x30c PUSH1 0x1
0x30e SLOAD
0x30f PUSH1 0x1
0x311 PUSH1 0xa0
0x313 PUSH1 0x2
0x315 EXP
0x316 SUB
0x317 AND
0x318 DUP1
0x319 PUSH4 0x6c86888b
0x31e DUP12
0x31f DUP15
0x320 DUP15
0x321 DUP14
0x322 DUP13
0x323 DUP15
0x324 DUP14
0x325 DUP12
0x326 DUP14
0x327 DUP16
0x328 DUP14
0x329 ADDRESS
0x32a PUSH1 0x0
0x32c PUSH1 0x40
0x32e MLOAD
0x32f PUSH1 0x20
0x331 ADD
0x332 MSTORE
0x333 PUSH1 0x40
0x335 MLOAD
0x336 PUSH1 0xe0
0x338 PUSH1 0x2
0x33a EXP
0x33b PUSH4 0xffffffff
0x340 DUP16
0x341 AND
0x342 MUL
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x1
0x347 PUSH1 0xa0
0x349 PUSH1 0x2
0x34b EXP
0x34c SUB
0x34d SWAP13
0x34e DUP14
0x34f AND
0x350 PUSH1 0x4
0x352 DUP3
0x353 ADD
0x354 MSTORE
0x355 PUSH1 0x24
0x357 DUP2
0x358 ADD
0x359 SWAP12
0x35a SWAP1
0x35b SWAP12
0x35c MSTORE
0x35d SWAP9
0x35e DUP12
0x35f AND
0x360 PUSH1 0x44
0x362 DUP12
0x363 ADD
0x364 MSTORE
0x365 PUSH1 0x64
0x367 DUP11
0x368 ADD
0x369 SWAP8
0x36a SWAP1
0x36b SWAP8
0x36c MSTORE
0x36d PUSH1 0x84
0x36f DUP10
0x370 ADD
0x371 SWAP6
0x372 SWAP1
0x373 SWAP6
0x374 MSTORE
0x375 PUSH1 0xa4
0x377 DUP9
0x378 ADD
0x379 SWAP4
0x37a SWAP1
0x37b SWAP4
0x37c MSTORE
0x37d SWAP1
0x37e DUP8
0x37f AND
0x380 PUSH1 0xc4
0x382 DUP8
0x383 ADD
0x384 MSTORE
0x385 PUSH1 0xff
0x387 AND
0x388 PUSH1 0xe4
0x38a DUP7
0x38b ADD
0x38c MSTORE
0x38d PUSH2 0x104
0x390 DUP6
0x391 ADD
0x392 MSTORE
0x393 PUSH2 0x124
0x396 DUP5
0x397 ADD
0x398 MSTORE
0x399 PUSH2 0x144
0x39c DUP4
0x39d ADD
0x39e MSTORE
0x39f SWAP1
0x3a0 SWAP2
0x3a1 AND
0x3a2 PUSH2 0x164
0x3a5 DUP3
0x3a6 ADD
0x3a7 MSTORE
0x3a8 PUSH2 0x184
0x3ab ADD
0x3ac PUSH1 0x20
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 DUP4
0x3b3 SUB
0x3b4 DUP2
0x3b5 PUSH1 0x0
0x3b7 DUP8
0x3b8 DUP1
0x3b9 EXTCODESIZE
0x3ba ISZERO
0x3bb ISZERO
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x30a: JUMPDEST 
0x30c: V315 = 0x1
0x30e: V316 = S[0x1]
0x30f: V317 = 0x1
0x311: V318 = 0xa0
0x313: V319 = 0x2
0x315: V320 = EXP 0x2 0xa0
0x316: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x317: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x319: V323 = 0x6c86888b
0x329: V324 = ADDRESS
0x32a: V325 = 0x0
0x32c: V326 = 0x40
0x32e: V327 = M[0x40]
0x32f: V328 = 0x20
0x331: V329 = ADD 0x20 V327
0x332: M[V329] = 0x0
0x333: V330 = 0x40
0x335: V331 = M[0x40]
0x336: V332 = 0xe0
0x338: V333 = 0x2
0x33a: V334 = EXP 0x2 0xe0
0x33b: V335 = 0xffffffff
0x341: V336 = AND 0x6c86888b 0xffffffff
0x342: V337 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x344: M[V331] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x345: V338 = 0x1
0x347: V339 = 0xa0
0x349: V340 = 0x2
0x34b: V341 = EXP 0x2 0xa0
0x34c: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34f: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x350: V344 = 0x4
0x353: V345 = ADD V331 0x4
0x354: M[V345] = V343
0x355: V346 = 0x24
0x358: V347 = ADD V331 0x24
0x35c: M[V347] = V68
0x35f: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x360: V349 = 0x44
0x363: V350 = ADD V331 0x44
0x364: M[V350] = V348
0x365: V351 = 0x64
0x368: V352 = ADD V331 0x64
0x36c: M[V352] = V81
0x36d: V353 = 0x84
0x370: V354 = ADD V331 0x84
0x374: M[V354] = V85
0x375: V355 = 0xa4
0x378: V356 = ADD V331 0xa4
0x37c: M[V356] = V83
0x37f: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x380: V358 = 0xc4
0x383: V359 = ADD V331 0xc4
0x384: M[V359] = V357
0x385: V360 = 0xff
0x387: V361 = AND 0xff V96
0x388: V362 = 0xe4
0x38b: V363 = ADD V331 0xe4
0x38c: M[V363] = V361
0x38d: V364 = 0x104
0x391: V365 = ADD V331 0x104
0x392: M[V365] = V92
0x393: V366 = 0x124
0x397: V367 = ADD V331 0x124
0x398: M[V367] = V90
0x399: V368 = 0x144
0x39d: V369 = ADD V331 0x144
0x39e: M[V369] = V98
0x3a1: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x3a2: V371 = 0x164
0x3a6: V372 = ADD V331 0x164
0x3a7: M[V372] = V370
0x3a8: V373 = 0x184
0x3ab: V374 = ADD 0x184 V331
0x3ac: V375 = 0x20
0x3ae: V376 = 0x40
0x3b0: V377 = M[0x40]
0x3b3: V378 = SUB V374 V377
0x3b5: V379 = 0x0
0x3b9: V380 = EXTCODESIZE V322
0x3ba: V381 = ISZERO V380
0x3bb: V382 = ISZERO V381
0x3bc: V383 = 0x3c4
0x3bf: JUMPI 0x3c4 V382
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V322, V322, 0x6c86888b, V374, 0x20, V377, V378, V377, 0x0, V322]
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V322, 0x6c86888b, V374, 0x20, V377, V378, V377, 0x0, V322]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x30a]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V384 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V322, 0x6c86888b, V374, 0x20, V377, V378, V377, 0x0, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V322, 0x6c86888b, V374, 0x20, V377, V378, V377, 0x0, V322]

================================

Block 0x3c4
[0x3c4:0x3d0]
---
Predecessors: [0x30a]
Successors: [0x3d1, 0x3d5]
---
0x3c4 JUMPDEST
0x3c5 PUSH2 0x2c6
0x3c8 GAS
0x3c9 SUB
0x3ca CALL
0x3cb ISZERO
0x3cc ISZERO
0x3cd PUSH2 0x3d5
0x3d0 JUMPI
---
0x3c4: JUMPDEST 
0x3c5: V385 = 0x2c6
0x3c8: V386 = GAS
0x3c9: V387 = SUB V386 0x2c6
0x3ca: V388 = CALL V387 V322 0x0 V377 V378 V377 0x20
0x3cb: V389 = ISZERO V388
0x3cc: V390 = ISZERO V389
0x3cd: V391 = 0x3d5
0x3d0: JUMPI 0x3d5 V390
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V322, 0x6c86888b, V374, 0x20, V377, V378, V377, 0x0, V322]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V322, 0x6c86888b, V374]

================================

Block 0x3d1
[0x3d1:0x3d4]
---
Predecessors: [0x3c4]
Successors: []
---
0x3d1 PUSH1 0x0
0x3d3 DUP1
0x3d4 REVERT
---
0x3d1: V392 = 0x0
0x3d4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V322, 0x6c86888b, V374]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V322, 0x6c86888b, V374]

================================

Block 0x3d5
[0x3d5:0x3e4]
---
Predecessors: [0x3c4]
Successors: [0x3e5, 0x4df]
---
0x3d5 JUMPDEST
0x3d6 POP
0x3d7 POP
0x3d8 POP
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd MLOAD
0x3de SWAP1
0x3df POP
0x3e0 ISZERO
0x3e1 PUSH2 0x4df
0x3e4 JUMPI
---
0x3d5: JUMPDEST 
0x3d9: V393 = 0x40
0x3db: V394 = M[0x40]
0x3dd: V395 = M[V394]
0x3e0: V396 = ISZERO V395
0x3e1: V397 = 0x4df
0x3e4: JUMPI 0x4df V396
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V322, 0x6c86888b, V374]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]

================================

Block 0x3e5
[0x3e5:0x4c1]
---
Predecessors: [0x3d5]
Successors: [0x4c2, 0x4c6]
---
0x3e5 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x406 PUSH1 0x0
0x408 PUSH1 0x40
0x40a MLOAD
0x40b SWAP1
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x20
0x410 ADD
0x411 PUSH1 0x40
0x413 MLOAD
0x414 DUP1
0x415 SWAP2
0x416 SUB
0x417 SWAP1
0x418 LOG1
0x419 DUP1
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 AND
0x423 PUSH4 0xa19b14a
0x428 DUP12
0x429 DUP15
0x42a DUP15
0x42b DUP14
0x42c DUP13
0x42d DUP15
0x42e DUP14
0x42f DUP12
0x430 DUP14
0x431 DUP16
0x432 DUP14
0x433 PUSH1 0x40
0x435 MLOAD
0x436 PUSH1 0xe0
0x438 PUSH1 0x2
0x43a EXP
0x43b PUSH4 0xffffffff
0x440 DUP15
0x441 AND
0x442 MUL
0x443 DUP2
0x444 MSTORE
0x445 PUSH1 0x1
0x447 PUSH1 0xa0
0x449 PUSH1 0x2
0x44b EXP
0x44c SUB
0x44d SWAP12
0x44e DUP13
0x44f AND
0x450 PUSH1 0x4
0x452 DUP3
0x453 ADD
0x454 MSTORE
0x455 PUSH1 0x24
0x457 DUP2
0x458 ADD
0x459 SWAP11
0x45a SWAP1
0x45b SWAP11
0x45c MSTORE
0x45d SWAP8
0x45e DUP11
0x45f AND
0x460 PUSH1 0x44
0x462 DUP11
0x463 ADD
0x464 MSTORE
0x465 PUSH1 0x64
0x467 DUP10
0x468 ADD
0x469 SWAP7
0x46a SWAP1
0x46b SWAP7
0x46c MSTORE
0x46d PUSH1 0x84
0x46f DUP9
0x470 ADD
0x471 SWAP5
0x472 SWAP1
0x473 SWAP5
0x474 MSTORE
0x475 PUSH1 0xa4
0x477 DUP8
0x478 ADD
0x479 SWAP3
0x47a SWAP1
0x47b SWAP3
0x47c MSTORE
0x47d SWAP1
0x47e SWAP6
0x47f AND
0x480 PUSH1 0xc4
0x482 DUP6
0x483 ADD
0x484 MSTORE
0x485 PUSH1 0xff
0x487 SWAP1
0x488 SWAP5
0x489 AND
0x48a PUSH1 0xe4
0x48c DUP5
0x48d ADD
0x48e MSTORE
0x48f PUSH2 0x104
0x492 DUP4
0x493 ADD
0x494 SWAP4
0x495 SWAP1
0x496 SWAP4
0x497 MSTORE
0x498 PUSH2 0x124
0x49b DUP3
0x49c ADD
0x49d SWAP3
0x49e SWAP1
0x49f SWAP3
0x4a0 MSTORE
0x4a1 PUSH2 0x144
0x4a4 DUP2
0x4a5 ADD
0x4a6 SWAP2
0x4a7 SWAP1
0x4a8 SWAP2
0x4a9 MSTORE
0x4aa PUSH2 0x164
0x4ad ADD
0x4ae PUSH1 0x0
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 DUP1
0x4b4 DUP4
0x4b5 SUB
0x4b6 DUP2
0x4b7 PUSH1 0x0
0x4b9 DUP8
0x4ba DUP1
0x4bb EXTCODESIZE
0x4bc ISZERO
0x4bd ISZERO
0x4be PUSH2 0x4c6
0x4c1 JUMPI
---
0x3e5: V398 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x406: V399 = 0x0
0x408: V400 = 0x40
0x40a: V401 = M[0x40]
0x40d: M[V401] = 0x0
0x40e: V402 = 0x20
0x410: V403 = ADD 0x20 V401
0x411: V404 = 0x40
0x413: V405 = M[0x40]
0x416: V406 = SUB V403 V405
0x418: LOG V405 V406 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x41a: V407 = 0x1
0x41c: V408 = 0xa0
0x41e: V409 = 0x2
0x420: V410 = EXP 0x2 0xa0
0x421: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x423: V413 = 0xa19b14a
0x433: V414 = 0x40
0x435: V415 = M[0x40]
0x436: V416 = 0xe0
0x438: V417 = 0x2
0x43a: V418 = EXP 0x2 0xe0
0x43b: V419 = 0xffffffff
0x441: V420 = AND 0xa19b14a 0xffffffff
0x442: V421 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x444: M[V415] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x445: V422 = 0x1
0x447: V423 = 0xa0
0x449: V424 = 0x2
0x44b: V425 = EXP 0x2 0xa0
0x44c: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44f: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x450: V428 = 0x4
0x453: V429 = ADD V415 0x4
0x454: M[V429] = V427
0x455: V430 = 0x24
0x458: V431 = ADD V415 0x24
0x45c: M[V431] = V68
0x45f: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x460: V433 = 0x44
0x463: V434 = ADD V415 0x44
0x464: M[V434] = V432
0x465: V435 = 0x64
0x468: V436 = ADD V415 0x64
0x46c: M[V436] = V81
0x46d: V437 = 0x84
0x470: V438 = ADD V415 0x84
0x474: M[V438] = V85
0x475: V439 = 0xa4
0x478: V440 = ADD V415 0xa4
0x47c: M[V440] = V83
0x47f: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x480: V442 = 0xc4
0x483: V443 = ADD V415 0xc4
0x484: M[V443] = V441
0x485: V444 = 0xff
0x489: V445 = AND V96 0xff
0x48a: V446 = 0xe4
0x48d: V447 = ADD V415 0xe4
0x48e: M[V447] = V445
0x48f: V448 = 0x104
0x493: V449 = ADD V415 0x104
0x497: M[V449] = V92
0x498: V450 = 0x124
0x49c: V451 = ADD V415 0x124
0x4a0: M[V451] = V90
0x4a1: V452 = 0x144
0x4a5: V453 = ADD V415 0x144
0x4a9: M[V453] = V98
0x4aa: V454 = 0x164
0x4ad: V455 = ADD 0x164 V415
0x4ae: V456 = 0x0
0x4b0: V457 = 0x40
0x4b2: V458 = M[0x40]
0x4b5: V459 = SUB V455 V458
0x4b7: V460 = 0x0
0x4bb: V461 = EXTCODESIZE V412
0x4bc: V462 = ISZERO V461
0x4bd: V463 = ISZERO V462
0x4be: V464 = 0x4c6
0x4c1: JUMPI 0x4c6 V463
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V412, 0xa19b14a, V455, 0x0, V458, V459, V458, 0x0, V412]
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V412, 0xa19b14a, V455, 0x0, V458, V459, V458, 0x0, V412]

================================

Block 0x4c2
[0x4c2:0x4c5]
---
Predecessors: [0x3e5]
Successors: []
---
0x4c2 PUSH1 0x0
0x4c4 DUP1
0x4c5 REVERT
---
0x4c2: V465 = 0x0
0x4c5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V412, 0xa19b14a, V455, 0x0, V458, V459, V458, 0x0, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V412, 0xa19b14a, V455, 0x0, V458, V459, V458, 0x0, V412]

================================

Block 0x4c6
[0x4c6:0x4d2]
---
Predecessors: [0x3e5]
Successors: [0x4d3, 0x4d7]
---
0x4c6 JUMPDEST
0x4c7 PUSH2 0x2c6
0x4ca GAS
0x4cb SUB
0x4cc CALL
0x4cd ISZERO
0x4ce ISZERO
0x4cf PUSH2 0x4d7
0x4d2 JUMPI
---
0x4c6: JUMPDEST 
0x4c7: V466 = 0x2c6
0x4ca: V467 = GAS
0x4cb: V468 = SUB V467 0x2c6
0x4cc: V469 = CALL V468 V412 0x0 V458 V459 V458 0x0
0x4cd: V470 = ISZERO V469
0x4ce: V471 = ISZERO V470
0x4cf: V472 = 0x4d7
0x4d2: JUMPI 0x4d7 V471
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V412, 0xa19b14a, V455, 0x0, V458, V459, V458, 0x0, V412]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V412, 0xa19b14a, V455]

================================

Block 0x4d3
[0x4d3:0x4d6]
---
Predecessors: [0x4c6]
Successors: []
---
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 REVERT
---
0x4d3: V473 = 0x0
0x4d6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V412, 0xa19b14a, V455]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V412, 0xa19b14a, V455]

================================

Block 0x4d7
[0x4d7:0x4de]
---
Predecessors: [0x4c6]
Successors: [0x514]
---
0x4d7 JUMPDEST
0x4d8 POP
0x4d9 POP
0x4da POP
0x4db PUSH2 0x514
0x4de JUMP
---
0x4d7: JUMPDEST 
0x4db: V474 = 0x514
0x4de: JUMP 0x514
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322, V412, 0xa19b14a, V455]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]

================================

Block 0x4df
[0x4df:0x513]
---
Predecessors: [0x3d5]
Successors: [0x514]
---
0x4df JUMPDEST
0x4e0 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x501 PUSH1 0x1
0x503 PUSH1 0x40
0x505 MLOAD
0x506 SWAP1
0x507 DUP2
0x508 MSTORE
0x509 PUSH1 0x20
0x50b ADD
0x50c PUSH1 0x40
0x50e MLOAD
0x50f DUP1
0x510 SWAP2
0x511 SUB
0x512 SWAP1
0x513 LOG1
---
0x4df: JUMPDEST 
0x4e0: V475 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x501: V476 = 0x1
0x503: V477 = 0x40
0x505: V478 = M[0x40]
0x508: M[V478] = 0x1
0x509: V479 = 0x20
0x50b: V480 = ADD 0x20 V478
0x50c: V481 = 0x40
0x50e: V482 = M[0x40]
0x511: V483 = SUB V480 V482
0x513: LOG V482 V483 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]

================================

Block 0x514
[0x514:0x514]
---
Predecessors: [0x4d7, 0x4df]
Successors: [0x515]
---
0x514 JUMPDEST
---
0x514: JUMPDEST 
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]

================================

Block 0x515
[0x515:0x515]
---
Predecessors: [0x514]
Successors: [0x516]
---
0x515 JUMPDEST
---
0x515: JUMPDEST 
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]

================================

Block 0x516
[0x516:0x523]
---
Predecessors: [0x515]
Successors: [0x7d]
---
0x516 JUMPDEST
0x517 POP
0x518 POP
0x519 POP
0x51a POP
0x51b POP
0x51c POP
0x51d POP
0x51e POP
0x51f POP
0x520 POP
0x521 POP
0x522 POP
0x523 JUMP
---
0x516: JUMPDEST 
0x523: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V68, V76, V79, V81, V83, V85, V88, V90, V92, V96, V98, V322]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x524
[0x524:0x5da]
---
Predecessors: [0x11f]
Successors: [0x5db, 0x5df]
---
0x524 JUMPDEST
0x525 PUSH1 0x1
0x527 SLOAD
0x528 PUSH1 0x0
0x52a SWAP1
0x52b PUSH1 0x1
0x52d PUSH1 0xa0
0x52f PUSH1 0x2
0x531 EXP
0x532 SUB
0x533 AND
0x534 DUP1
0x535 PUSH4 0x6c86888b
0x53a DUP15
0x53b DUP15
0x53c DUP15
0x53d DUP15
0x53e DUP15
0x53f DUP15
0x540 DUP15
0x541 DUP15
0x542 DUP15
0x543 DUP15
0x544 DUP15
0x545 ADDRESS
0x546 DUP16
0x547 PUSH1 0x40
0x549 MLOAD
0x54a PUSH1 0x20
0x54c ADD
0x54d MSTORE
0x54e PUSH1 0x40
0x550 MLOAD
0x551 PUSH1 0xe0
0x553 PUSH1 0x2
0x555 EXP
0x556 PUSH4 0xffffffff
0x55b DUP16
0x55c AND
0x55d MUL
0x55e DUP2
0x55f MSTORE
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 SWAP13
0x569 DUP14
0x56a AND
0x56b PUSH1 0x4
0x56d DUP3
0x56e ADD
0x56f MSTORE
0x570 PUSH1 0x24
0x572 DUP2
0x573 ADD
0x574 SWAP12
0x575 SWAP1
0x576 SWAP12
0x577 MSTORE
0x578 SWAP9
0x579 DUP12
0x57a AND
0x57b PUSH1 0x44
0x57d DUP12
0x57e ADD
0x57f MSTORE
0x580 PUSH1 0x64
0x582 DUP11
0x583 ADD
0x584 SWAP8
0x585 SWAP1
0x586 SWAP8
0x587 MSTORE
0x588 PUSH1 0x84
0x58a DUP10
0x58b ADD
0x58c SWAP6
0x58d SWAP1
0x58e SWAP6
0x58f MSTORE
0x590 PUSH1 0xa4
0x592 DUP9
0x593 ADD
0x594 SWAP4
0x595 SWAP1
0x596 SWAP4
0x597 MSTORE
0x598 SWAP1
0x599 DUP8
0x59a AND
0x59b PUSH1 0xc4
0x59d DUP8
0x59e ADD
0x59f MSTORE
0x5a0 PUSH1 0xff
0x5a2 AND
0x5a3 PUSH1 0xe4
0x5a5 DUP7
0x5a6 ADD
0x5a7 MSTORE
0x5a8 PUSH2 0x104
0x5ab DUP6
0x5ac ADD
0x5ad MSTORE
0x5ae PUSH2 0x124
0x5b1 DUP5
0x5b2 ADD
0x5b3 MSTORE
0x5b4 PUSH2 0x144
0x5b7 DUP4
0x5b8 ADD
0x5b9 MSTORE
0x5ba SWAP1
0x5bb SWAP2
0x5bc AND
0x5bd PUSH2 0x164
0x5c0 DUP3
0x5c1 ADD
0x5c2 MSTORE
0x5c3 PUSH2 0x184
0x5c6 ADD
0x5c7 PUSH1 0x20
0x5c9 PUSH1 0x40
0x5cb MLOAD
0x5cc DUP1
0x5cd DUP4
0x5ce SUB
0x5cf DUP2
0x5d0 PUSH1 0x0
0x5d2 DUP8
0x5d3 DUP1
0x5d4 EXTCODESIZE
0x5d5 ISZERO
0x5d6 ISZERO
0x5d7 PUSH2 0x5df
0x5da JUMPI
---
0x524: JUMPDEST 
0x525: V484 = 0x1
0x527: V485 = S[0x1]
0x528: V486 = 0x0
0x52b: V487 = 0x1
0x52d: V488 = 0xa0
0x52f: V489 = 0x2
0x531: V490 = EXP 0x2 0xa0
0x532: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x533: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x535: V493 = 0x6c86888b
0x545: V494 = ADDRESS
0x547: V495 = 0x40
0x549: V496 = M[0x40]
0x54a: V497 = 0x20
0x54c: V498 = ADD 0x20 V496
0x54d: M[V498] = 0x0
0x54e: V499 = 0x40
0x550: V500 = M[0x40]
0x551: V501 = 0xe0
0x553: V502 = 0x2
0x555: V503 = EXP 0x2 0xe0
0x556: V504 = 0xffffffff
0x55c: V505 = AND 0x6c86888b 0xffffffff
0x55d: V506 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x55f: M[V500] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x560: V507 = 0x1
0x562: V508 = 0xa0
0x564: V509 = 0x2
0x566: V510 = EXP 0x2 0xa0
0x567: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x56b: V513 = 0x4
0x56e: V514 = ADD V500 0x4
0x56f: M[V514] = V512
0x570: V515 = 0x24
0x573: V516 = ADD V500 0x24
0x577: M[V516] = V114
0x57a: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x57b: V518 = 0x44
0x57e: V519 = ADD V500 0x44
0x57f: M[V519] = V517
0x580: V520 = 0x64
0x583: V521 = ADD V500 0x64
0x587: M[V521] = V119
0x588: V522 = 0x84
0x58b: V523 = ADD V500 0x84
0x58f: M[V523] = V121
0x590: V524 = 0xa4
0x593: V525 = ADD V500 0xa4
0x597: M[V525] = V123
0x59a: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x59b: V527 = 0xc4
0x59e: V528 = ADD V500 0xc4
0x59f: M[V528] = V526
0x5a0: V529 = 0xff
0x5a2: V530 = AND 0xff V130
0x5a3: V531 = 0xe4
0x5a6: V532 = ADD V500 0xe4
0x5a7: M[V532] = V530
0x5a8: V533 = 0x104
0x5ac: V534 = ADD V500 0x104
0x5ad: M[V534] = V132
0x5ae: V535 = 0x124
0x5b2: V536 = ADD V500 0x124
0x5b3: M[V536] = V134
0x5b4: V537 = 0x144
0x5b8: V538 = ADD V500 0x144
0x5b9: M[V538] = V136
0x5bc: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x5bd: V540 = 0x164
0x5c1: V541 = ADD V500 0x164
0x5c2: M[V541] = V539
0x5c3: V542 = 0x184
0x5c6: V543 = ADD 0x184 V500
0x5c7: V544 = 0x20
0x5c9: V545 = 0x40
0x5cb: V546 = M[0x40]
0x5ce: V547 = SUB V543 V546
0x5d0: V548 = 0x0
0x5d4: V549 = EXTCODESIZE V492
0x5d5: V550 = ISZERO V549
0x5d6: V551 = ISZERO V550
0x5d7: V552 = 0x5df
0x5da: JUMPI 0x5df V551
---
Entry stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]
Exit stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]

================================

Block 0x5db
[0x5db:0x5de]
---
Predecessors: [0x524]
Successors: []
---
0x5db PUSH1 0x0
0x5dd DUP1
0x5de REVERT
---
0x5db: V553 = 0x0
0x5de: REVERT 0x0 0x0
---
Entry stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]

================================

Block 0x5df
[0x5df:0x5eb]
---
Predecessors: [0x524]
Successors: [0x5ec, 0x5f0]
---
0x5df JUMPDEST
0x5e0 PUSH2 0x2c6
0x5e3 GAS
0x5e4 SUB
0x5e5 CALL
0x5e6 ISZERO
0x5e7 ISZERO
0x5e8 PUSH2 0x5f0
0x5eb JUMPI
---
0x5df: JUMPDEST 
0x5e0: V554 = 0x2c6
0x5e3: V555 = GAS
0x5e4: V556 = SUB V555 0x2c6
0x5e5: V557 = CALL V556 V492 0x0 V546 V547 V546 0x20
0x5e6: V558 = ISZERO V557
0x5e7: V559 = ISZERO V558
0x5e8: V560 = 0x5f0
0x5eb: JUMPI 0x5f0 V559
---
Entry stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543]

================================

Block 0x5ec
[0x5ec:0x5ef]
---
Predecessors: [0x5df]
Successors: []
---
0x5ec PUSH1 0x0
0x5ee DUP1
0x5ef REVERT
---
0x5ec: V561 = 0x0
0x5ef: REVERT 0x0 0x0
---
Entry stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543]

================================

Block 0x5f0
[0x5f0:0x5fb]
---
Predecessors: [0x5df]
Successors: [0x5fc]
---
0x5f0 JUMPDEST
0x5f1 POP
0x5f2 POP
0x5f3 POP
0x5f4 PUSH1 0x40
0x5f6 MLOAD
0x5f7 DUP1
0x5f8 MLOAD
0x5f9 SWAP3
0x5fa POP
0x5fb POP
---
0x5f0: JUMPDEST 
0x5f4: V562 = 0x40
0x5f6: V563 = M[0x40]
0x5f8: V564 = M[V563]
---
Entry stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543]
Stack pops: 5
Stack additions: [V564, S3]
Exit stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V564, V492]

================================

Block 0x5fc
[0x5fc:0x60b]
---
Predecessors: [0x5f0]
Successors: [0x161]
---
0x5fc JUMPDEST
0x5fd POP
0x5fe SWAP12
0x5ff SWAP11
0x600 POP
0x601 POP
0x602 POP
0x603 POP
0x604 POP
0x605 POP
0x606 POP
0x607 POP
0x608 POP
0x609 POP
0x60a POP
0x60b JUMP
---
0x5fc: JUMPDEST 
0x60b: JUMP 0x161
---
Entry stack: [V12, 0x161, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V564, V492]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V564]

================================

Block 0x60c
[0x60c:0x66b]
---
Predecessors: [0x180]
Successors: [0x66c, 0x670]
---
0x60c JUMPDEST
0x60d PUSH1 0x1
0x60f SLOAD
0x610 PUSH1 0x0
0x612 SWAP1
0x613 PUSH1 0x1
0x615 PUSH1 0xa0
0x617 PUSH1 0x2
0x619 EXP
0x61a SUB
0x61b AND
0x61c DUP1
0x61d PUSH4 0xf7888aec
0x622 DUP5
0x623 ADDRESS
0x624 DUP6
0x625 PUSH1 0x40
0x627 MLOAD
0x628 PUSH1 0x20
0x62a ADD
0x62b MSTORE
0x62c PUSH1 0x40
0x62e MLOAD
0x62f PUSH1 0xe0
0x631 PUSH1 0x2
0x633 EXP
0x634 PUSH4 0xffffffff
0x639 DUP6
0x63a AND
0x63b MUL
0x63c DUP2
0x63d MSTORE
0x63e PUSH1 0x1
0x640 PUSH1 0xa0
0x642 PUSH1 0x2
0x644 EXP
0x645 SUB
0x646 SWAP3
0x647 DUP4
0x648 AND
0x649 PUSH1 0x4
0x64b DUP3
0x64c ADD
0x64d MSTORE
0x64e SWAP2
0x64f AND
0x650 PUSH1 0x24
0x652 DUP3
0x653 ADD
0x654 MSTORE
0x655 PUSH1 0x44
0x657 ADD
0x658 PUSH1 0x20
0x65a PUSH1 0x40
0x65c MLOAD
0x65d DUP1
0x65e DUP4
0x65f SUB
0x660 DUP2
0x661 PUSH1 0x0
0x663 DUP8
0x664 DUP1
0x665 EXTCODESIZE
0x666 ISZERO
0x667 ISZERO
0x668 PUSH2 0x670
0x66b JUMPI
---
0x60c: JUMPDEST 
0x60d: V565 = 0x1
0x60f: V566 = S[0x1]
0x610: V567 = 0x0
0x613: V568 = 0x1
0x615: V569 = 0xa0
0x617: V570 = 0x2
0x619: V571 = EXP 0x2 0xa0
0x61a: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61b: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x61d: V574 = 0xf7888aec
0x623: V575 = ADDRESS
0x625: V576 = 0x40
0x627: V577 = M[0x40]
0x628: V578 = 0x20
0x62a: V579 = ADD 0x20 V577
0x62b: M[V579] = 0x0
0x62c: V580 = 0x40
0x62e: V581 = M[0x40]
0x62f: V582 = 0xe0
0x631: V583 = 0x2
0x633: V584 = EXP 0x2 0xe0
0x634: V585 = 0xffffffff
0x63a: V586 = AND 0xf7888aec 0xffffffff
0x63b: V587 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x63d: M[V581] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x63e: V588 = 0x1
0x640: V589 = 0xa0
0x642: V590 = 0x2
0x644: V591 = EXP 0x2 0xa0
0x645: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x648: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x649: V594 = 0x4
0x64c: V595 = ADD V581 0x4
0x64d: M[V595] = V593
0x64f: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0x650: V597 = 0x24
0x653: V598 = ADD V581 0x24
0x654: M[V598] = V596
0x655: V599 = 0x44
0x657: V600 = ADD 0x44 V581
0x658: V601 = 0x20
0x65a: V602 = 0x40
0x65c: V603 = M[0x40]
0x65f: V604 = SUB V600 V603
0x661: V605 = 0x0
0x665: V606 = EXTCODESIZE V573
0x666: V607 = ISZERO V606
0x667: V608 = ISZERO V607
0x668: V609 = 0x670
0x66b: JUMPI 0x670 V608
---
Entry stack: [V12, 0x194, V159]
Stack pops: 1
Stack additions: [S0, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]
Exit stack: [V12, 0x194, V159, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]

================================

Block 0x66c
[0x66c:0x66f]
---
Predecessors: [0x60c]
Successors: []
---
0x66c PUSH1 0x0
0x66e DUP1
0x66f REVERT
---
0x66c: V610 = 0x0
0x66f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x194, V159, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x194, V159, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]

================================

Block 0x670
[0x670:0x67c]
---
Predecessors: [0x60c]
Successors: [0x67d, 0x681]
---
0x670 JUMPDEST
0x671 PUSH2 0x2c6
0x674 GAS
0x675 SUB
0x676 CALL
0x677 ISZERO
0x678 ISZERO
0x679 PUSH2 0x681
0x67c JUMPI
---
0x670: JUMPDEST 
0x671: V611 = 0x2c6
0x674: V612 = GAS
0x675: V613 = SUB V612 0x2c6
0x676: V614 = CALL V613 V573 0x0 V603 V604 V603 0x20
0x677: V615 = ISZERO V614
0x678: V616 = ISZERO V615
0x679: V617 = 0x681
0x67c: JUMPI 0x681 V616
---
Entry stack: [V12, 0x194, V159, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x194, V159, 0x0, V573, V573, 0xf7888aec, V600]

================================

Block 0x67d
[0x67d:0x680]
---
Predecessors: [0x670]
Successors: []
---
0x67d PUSH1 0x0
0x67f DUP1
0x680 REVERT
---
0x67d: V618 = 0x0
0x680: REVERT 0x0 0x0
---
Entry stack: [V12, 0x194, V159, 0x0, V573, V573, 0xf7888aec, V600]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x194, V159, 0x0, V573, V573, 0xf7888aec, V600]

================================

Block 0x681
[0x681:0x68c]
---
Predecessors: [0x670]
Successors: [0x68d]
---
0x681 JUMPDEST
0x682 POP
0x683 POP
0x684 POP
0x685 PUSH1 0x40
0x687 MLOAD
0x688 DUP1
0x689 MLOAD
0x68a SWAP3
0x68b POP
0x68c POP
---
0x681: JUMPDEST 
0x685: V619 = 0x40
0x687: V620 = M[0x40]
0x689: V621 = M[V620]
---
Entry stack: [V12, 0x194, V159, 0x0, V573, V573, 0xf7888aec, V600]
Stack pops: 5
Stack additions: [V621, S3]
Exit stack: [V12, 0x194, V159, V621, V573]

================================

Block 0x68d
[0x68d:0x692]
---
Predecessors: [0x681]
Successors: [0x194]
---
0x68d JUMPDEST
0x68e POP
0x68f SWAP2
0x690 SWAP1
0x691 POP
0x692 JUMP
---
0x68d: JUMPDEST 
0x692: JUMP 0x194
---
Entry stack: [V12, 0x194, V159, V621, V573]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V621]

================================

Block 0x693
[0x693:0x6a1]
---
Predecessors: [0x1b1]
Successors: [0x1b9]
---
0x693 JUMPDEST
0x694 PUSH1 0x0
0x696 SLOAD
0x697 PUSH1 0x1
0x699 PUSH1 0xa0
0x69b PUSH1 0x2
0x69d EXP
0x69e SUB
0x69f AND
0x6a0 DUP2
0x6a1 JUMP
---
0x693: JUMPDEST 
0x694: V622 = 0x0
0x696: V623 = S[0x0]
0x697: V624 = 0x1
0x699: V625 = 0xa0
0x69b: V626 = 0x2
0x69d: V627 = EXP 0x2 0xa0
0x69e: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69f: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x6a1: JUMP 0x1b9
---
Entry stack: [V12, 0x1b9]
Stack pops: 1
Stack additions: [S0, V629]
Exit stack: [V12, 0x1b9, V629]

================================

Block 0x6a2
[0x6a2:0x6a2]
---
Predecessors: []
Successors: [0x6a3]
---
0x6a2 JUMPDEST
---
0x6a2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6a3
[0x6a3:0x6a4]
---
Predecessors: [0x6a2]
Successors: []
Has unresolved jump.
---
0x6a3 JUMPDEST
0x6a4 JUMP
---
0x6a3: JUMPDEST 
0x6a4: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6a5
[0x6a5:0x6bc]
---
Predecessors: [0x1ea]
Successors: [0x6bd, 0x6c1]
---
0x6a5 JUMPDEST
0x6a6 PUSH1 0x0
0x6a8 DUP1
0x6a9 SLOAD
0x6aa CALLER
0x6ab PUSH1 0x1
0x6ad PUSH1 0xa0
0x6af PUSH1 0x2
0x6b1 EXP
0x6b2 SUB
0x6b3 SWAP1
0x6b4 DUP2
0x6b5 AND
0x6b6 SWAP2
0x6b7 AND
0x6b8 EQ
0x6b9 PUSH2 0x6c1
0x6bc JUMPI
---
0x6a5: JUMPDEST 
0x6a6: V630 = 0x0
0x6a9: V631 = S[0x0]
0x6aa: V632 = CALLER
0x6ab: V633 = 0x1
0x6ad: V634 = 0xa0
0x6af: V635 = 0x2
0x6b1: V636 = EXP 0x2 0xa0
0x6b2: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b5: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x6b7: V639 = AND V631 0xffffffffffffffffffffffffffffffffffffffff
0x6b8: V640 = EQ V639 V638
0x6b9: V641 = 0x6c1
0x6bc: JUMPI 0x6c1 V640
---
Entry stack: [V12, 0x7d, V195]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V195, 0x0]

================================

Block 0x6bd
[0x6bd:0x6c0]
---
Predecessors: [0x6a5]
Successors: []
---
0x6bd PUSH1 0x0
0x6bf DUP1
0x6c0 REVERT
---
0x6bd: V642 = 0x0
0x6c0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, 0x0]

================================

Block 0x6c1
[0x6c1:0x706]
---
Predecessors: [0x6a5]
Successors: [0x707, 0x70b]
---
0x6c1 JUMPDEST
0x6c2 POP
0x6c3 PUSH1 0x1
0x6c5 SLOAD
0x6c6 PUSH1 0x1
0x6c8 PUSH1 0xa0
0x6ca PUSH1 0x2
0x6cc EXP
0x6cd SUB
0x6ce AND
0x6cf DUP1
0x6d0 PUSH4 0x2e1a7d4d
0x6d5 DUP4
0x6d6 PUSH1 0x40
0x6d8 MLOAD
0x6d9 PUSH1 0xe0
0x6db PUSH1 0x2
0x6dd EXP
0x6de PUSH4 0xffffffff
0x6e3 DUP5
0x6e4 AND
0x6e5 MUL
0x6e6 DUP2
0x6e7 MSTORE
0x6e8 PUSH1 0x4
0x6ea DUP2
0x6eb ADD
0x6ec SWAP2
0x6ed SWAP1
0x6ee SWAP2
0x6ef MSTORE
0x6f0 PUSH1 0x24
0x6f2 ADD
0x6f3 PUSH1 0x0
0x6f5 PUSH1 0x40
0x6f7 MLOAD
0x6f8 DUP1
0x6f9 DUP4
0x6fa SUB
0x6fb DUP2
0x6fc PUSH1 0x0
0x6fe DUP8
0x6ff DUP1
0x700 EXTCODESIZE
0x701 ISZERO
0x702 ISZERO
0x703 PUSH2 0x70b
0x706 JUMPI
---
0x6c1: JUMPDEST 
0x6c3: V643 = 0x1
0x6c5: V644 = S[0x1]
0x6c6: V645 = 0x1
0x6c8: V646 = 0xa0
0x6ca: V647 = 0x2
0x6cc: V648 = EXP 0x2 0xa0
0x6cd: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ce: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x6d0: V651 = 0x2e1a7d4d
0x6d6: V652 = 0x40
0x6d8: V653 = M[0x40]
0x6d9: V654 = 0xe0
0x6db: V655 = 0x2
0x6dd: V656 = EXP 0x2 0xe0
0x6de: V657 = 0xffffffff
0x6e4: V658 = AND 0x2e1a7d4d 0xffffffff
0x6e5: V659 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x6e7: M[V653] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x6e8: V660 = 0x4
0x6eb: V661 = ADD V653 0x4
0x6ef: M[V661] = V195
0x6f0: V662 = 0x24
0x6f2: V663 = ADD 0x24 V653
0x6f3: V664 = 0x0
0x6f5: V665 = 0x40
0x6f7: V666 = M[0x40]
0x6fa: V667 = SUB V663 V666
0x6fc: V668 = 0x0
0x700: V669 = EXTCODESIZE V650
0x701: V670 = ISZERO V669
0x702: V671 = ISZERO V670
0x703: V672 = 0x70b
0x706: JUMPI 0x70b V671
---
Entry stack: [V12, 0x7d, V195, 0x0]
Stack pops: 2
Stack additions: [S1, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x707
[0x707:0x70a]
---
Predecessors: [0x6c1]
Successors: []
---
0x707 PUSH1 0x0
0x709 DUP1
0x70a REVERT
---
0x707: V673 = 0x0
0x70a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x70b
[0x70b:0x717]
---
Predecessors: [0x6c1]
Successors: [0x718, 0x71c]
---
0x70b JUMPDEST
0x70c PUSH2 0x2c6
0x70f GAS
0x710 SUB
0x711 CALL
0x712 ISZERO
0x713 ISZERO
0x714 PUSH2 0x71c
0x717 JUMPI
---
0x70b: JUMPDEST 
0x70c: V674 = 0x2c6
0x70f: V675 = GAS
0x710: V676 = SUB V675 0x2c6
0x711: V677 = CALL V676 V650 0x0 V666 V667 V666 0x0
0x712: V678 = ISZERO V677
0x713: V679 = ISZERO V678
0x714: V680 = 0x71c
0x717: JUMPI 0x71c V679
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x718
[0x718:0x71b]
---
Predecessors: [0x70b]
Successors: []
---
0x718 PUSH1 0x0
0x71a DUP1
0x71b REVERT
---
0x718: V681 = 0x0
0x71b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x71c
[0x71c:0x71f]
---
Predecessors: [0x70b]
Successors: [0x720]
---
0x71c JUMPDEST
0x71d POP
0x71e POP
0x71f POP
---
0x71c: JUMPDEST 
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650]

================================

Block 0x720
[0x720:0x720]
---
Predecessors: [0x71c]
Successors: [0x721]
---
0x720 JUMPDEST
---
0x720: JUMPDEST 
---
Entry stack: [V12, 0x7d, V195, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650]

================================

Block 0x721
[0x721:0x724]
---
Predecessors: [0x720]
Successors: [0x7d]
---
0x721 JUMPDEST
0x722 POP
0x723 POP
0x724 JUMP
---
0x721: JUMPDEST 
0x724: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V195, V650]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x725
[0x725:0x761]
---
Predecessors: []
Successors: []
---
0x725 STOP
0x726 LOG1
0x727 PUSH6 0x627a7a723058
0x72e SHA3
0x72f ADDRESS
0x730 DIV
0x731 MISSING 0xe7
0x732 PUSH14 0x66731995f93bb37d8f3b4924982a
0x741 MISSING 0xdf
0x742 MISSING 0xe0
0x743 PUSH30 0xed0e7de0122f199c86ea410029
---
0x725: STOP 
0x726: LOG S0 S1 S2
0x727: V682 = 0x627a7a723058
0x72e: V683 = SHA3 0x627a7a723058 S3
0x72f: V684 = ADDRESS
0x730: V685 = DIV V684 V683
0x731: MISSING 0xe7
0x732: V686 = 0x66731995f93bb37d8f3b4924982a
0x741: MISSING 0xdf
0x742: MISSING 0xe0
0x743: V687 = 0xed0e7de0122f199c86ea410029
---
Entry stack: []
Stack pops: 0
Stack additions: [V685, 0x66731995f93bb37d8f3b4924982a, 0xed0e7de0122f199c86ea410029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2cf2c0af
Entry block: 0x81
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x81, 0x88, 0x8c, 0x1f7, 0x20f, 0x213, 0x250, 0x254, 0x261, 0x265, 0x26a, 0x26b

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x99
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x99, 0xa0, 0xa4, 0x26f, 0x286, 0x28a, 0x2b9, 0x2bd, 0x2be, 0x2bf

Function 2:
Public function signature: 0x43d726d6
Entry block: 0xb1
Exit block: 0x2dd
Body: 0xb1, 0xb8, 0xbc, 0x2c2, 0x2d9, 0x2dd

Function 3:
Public function signature: 0x57a8955a
Entry block: 0xc6
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0xc6, 0xcd, 0xd1, 0x2ee, 0x306, 0x30a, 0x3c0, 0x3c4, 0x3d1, 0x3d5, 0x3e5, 0x4c2, 0x4c6, 0x4d3, 0x4d7, 0x4df, 0x514, 0x515, 0x516

Function 4:
Public function signature: 0x5c73dcea
Entry block: 0x114
Exit block: 0x161
Body: 0x114, 0x11b, 0x11f, 0x161, 0x524, 0x5db, 0x5df, 0x5ec, 0x5f0, 0x5fc

Function 5:
Public function signature: 0x70a08231
Entry block: 0x175
Exit block: 0x194
Body: 0x175, 0x17c, 0x180, 0x194, 0x60c, 0x66c, 0x670, 0x67d, 0x681, 0x68d

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x1a6
Exit block: 0x1b9
Body: 0x1a6, 0x1ad, 0x1b1, 0x1b9, 0x693

Function 7:
Public function signature: 0xd0e30db0
Entry block: 0x1d5
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1d5, 0x2eb, 0x2ec

Function 8:
Public function signature: 0xf1b83630
Entry block: 0x1df
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1df, 0x1e6, 0x1ea, 0x6a5, 0x6bd, 0x6c1, 0x707, 0x70b, 0x718, 0x71c, 0x720, 0x721

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f

