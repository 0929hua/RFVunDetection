Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3d
0xa: JUMPI 0x3d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x18a]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xff7ccfe0
0x34 EQ
0x35 PUSH2 0x18a
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xff7ccfe0
0x34: V10 = EQ 0xff7ccfe0 V8
0x35: V11 = 0x18a
0x38: JUMPI 0x18a V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x3c]
---
Predecessors: [0xb]
Successors: [0x3d]
---
0x39 PUSH2 0x3d
0x3c JUMP
---
0x39: V12 = 0x3d
0x3c: JUMP 0x3d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x3d
[0x3d:0x40]
---
Predecessors: [0x0, 0x39]
Successors: [0x41]
---
0x3d JUMPDEST
0x3e PUSH2 0x188
---
0x3d: JUMPDEST 
0x3e: V13 = 0x188
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x188]
Exit stack: [V8, 0x188]

================================

Block 0x41
[0x41:0x4c]
---
Predecessors: [0x3d]
Successors: [0x4d, 0xab]
---
0x41 JUMPDEST
0x42 PUSH3 0x7a120
0x46 NUMBER
0x47 GT
0x48 ISZERO
0x49 PUSH2 0xab
0x4c JUMPI
---
0x41: JUMPDEST 
0x42: V14 = 0x7a120
0x46: V15 = NUMBER
0x47: V16 = GT V15 0x7a120
0x48: V17 = ISZERO V16
0x49: V18 = 0xab
0x4c: JUMPI 0xab V17
---
Entry stack: [V8, 0x188]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x188]

================================

Block 0x4d
[0x4d:0xaa]
---
Predecessors: [0x41]
Successors: [0xab]
---
0x4d PUSH20 0x227ca79e7b445f12032e295a64afe0451269bcc3
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 PUSH1 0x0
0x7a ADDRESS
0x7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90 AND
0x91 BALANCE
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 SWAP1
0x97 POP
0x98 PUSH1 0x0
0x9a PUSH1 0x40
0x9c MLOAD
0x9d DUP1
0x9e DUP4
0x9f SUB
0xa0 DUP2
0xa1 DUP6
0xa2 DUP9
0xa3 DUP9
0xa4 CALL
0xa5 SWAP4
0xa6 POP
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
---
0x4d: V19 = 0x227ca79e7b445f12032e295a64afe0451269bcc3
0x62: V20 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x227ca79e7b445f12032e295a64afe0451269bcc3
0x78: V22 = 0x0
0x7a: V23 = ADDRESS
0x7b: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x90: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x91: V26 = BALANCE V25
0x92: V27 = 0x40
0x94: V28 = M[0x40]
0x98: V29 = 0x0
0x9a: V30 = 0x40
0x9c: V31 = M[0x40]
0x9f: V32 = SUB V28 V31
0xa4: V33 = CALL 0x0 0x227ca79e7b445f12032e295a64afe0451269bcc3 V26 V31 V32 V31 0x0
---
Entry stack: [V8, 0x188]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x188]

================================

Block 0xab
[0xab:0xb7]
---
Predecessors: [0x41, 0x4d]
Successors: [0xb8, 0xe0]
---
0xab JUMPDEST
0xac PUSH3 0x7a120
0xb0 NUMBER
0xb1 LT
0xb2 DUP1
0xb3 ISZERO
0xb4 PUSH2 0xe0
0xb7 JUMPI
---
0xab: JUMPDEST 
0xac: V34 = 0x7a120
0xb0: V35 = NUMBER
0xb1: V36 = LT V35 0x7a120
0xb3: V37 = ISZERO V36
0xb4: V38 = 0xe0
0xb7: JUMPI 0xe0 V37
---
Entry stack: [V8, 0x188]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V8, 0x188, V36]

================================

Block 0xb8
[0xb8:0xdf]
---
Predecessors: [0xab]
Successors: [0xe0]
---
0xb8 POP
0xb9 NUMBER
0xba PUSH2 0xbb8
0xbd PUSH1 0x0
0xbf PUSH1 0x0
0xc1 SWAP1
0xc2 SLOAD
0xc3 SWAP1
0xc4 PUSH2 0x100
0xc7 EXP
0xc8 SWAP1
0xc9 DIV
0xca PUSH8 0xffffffffffffffff
0xd3 AND
0xd4 ADD
0xd5 PUSH8 0xffffffffffffffff
0xde AND
0xdf LT
---
0xb9: V39 = NUMBER
0xba: V40 = 0xbb8
0xbd: V41 = 0x0
0xbf: V42 = 0x0
0xc2: V43 = S[0x0]
0xc4: V44 = 0x100
0xc7: V45 = EXP 0x100 0x0
0xc9: V46 = DIV V43 0x1
0xca: V47 = 0xffffffffffffffff
0xd3: V48 = AND 0xffffffffffffffff V46
0xd4: V49 = ADD V48 0xbb8
0xd5: V50 = 0xffffffffffffffff
0xde: V51 = AND 0xffffffffffffffff V49
0xdf: V52 = LT V51 V39
---
Entry stack: [V8, 0x188, V36]
Stack pops: 1
Stack additions: [V52]
Exit stack: [V8, 0x188, V52]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0xab, 0xb8]
Successors: [0xe7, 0x10b]
---
0xe0 JUMPDEST
0xe1 DUP1
0xe2 ISZERO
0xe3 PUSH2 0x10b
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe2: V53 = ISZERO S0
0xe3: V54 = 0x10b
0xe6: JUMPI 0x10b V53
---
Entry stack: [V8, 0x188, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x188, S0]

================================

Block 0xe7
[0xe7:0x10a]
---
Predecessors: [0xe0]
Successors: [0x10b]
---
0xe7 POP
0xe8 PUSH8 0x8ac7230489e80000
0xf1 ADDRESS
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 BALANCE
0x109 LT
0x10a ISZERO
---
0xe8: V55 = 0x8ac7230489e80000
0xf1: V56 = ADDRESS
0xf2: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x108: V59 = BALANCE V58
0x109: V60 = LT V59 0x8ac7230489e80000
0x10a: V61 = ISZERO V60
---
Entry stack: [V8, 0x188, S0]
Stack pops: 1
Stack additions: [V61]
Exit stack: [V8, 0x188, V61]

================================

Block 0x10b
[0x10b:0x110]
---
Predecessors: [0xe0, 0xe7]
Successors: [0x111, 0x185]
---
0x10b JUMPDEST
0x10c ISZERO
0x10d PUSH2 0x185
0x110 JUMPI
---
0x10b: JUMPDEST 
0x10c: V62 = ISZERO S0
0x10d: V63 = 0x185
0x110: JUMPI 0x185 V62
---
Entry stack: [V8, 0x188, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x188]

================================

Block 0x111
[0x111:0x164]
---
Predecessors: [0x10b]
Successors: [0x165, 0x184]
---
0x111 PUSH20 0xc2ac6849aec3938fb8c9b36f1c07be76f766637e
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c PUSH8 0x8ac7230489e80000
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 SWAP1
0x14a POP
0x14b PUSH1 0x0
0x14d PUSH1 0x40
0x14f MLOAD
0x150 DUP1
0x151 DUP4
0x152 SUB
0x153 DUP2
0x154 DUP6
0x155 DUP8
0x156 PUSH2 0x8502
0x159 GAS
0x15a SUB
0x15b CALL
0x15c SWAP3
0x15d POP
0x15e POP
0x15f POP
0x160 ISZERO
0x161 PUSH2 0x184
0x164 JUMPI
---
0x111: V64 = 0xc2ac6849aec3938fb8c9b36f1c07be76f766637e
0x126: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xc2ac6849aec3938fb8c9b36f1c07be76f766637e
0x13c: V67 = 0x8ac7230489e80000
0x145: V68 = 0x40
0x147: V69 = M[0x40]
0x14b: V70 = 0x0
0x14d: V71 = 0x40
0x14f: V72 = M[0x40]
0x152: V73 = SUB V69 V72
0x156: V74 = 0x8502
0x159: V75 = GAS
0x15a: V76 = SUB V75 0x8502
0x15b: V77 = CALL V76 0xc2ac6849aec3938fb8c9b36f1c07be76f766637e 0x8ac7230489e80000 V72 V73 V72 0x0
0x160: V78 = ISZERO V77
0x161: V79 = 0x184
0x164: JUMPI 0x184 V78
---
Entry stack: [V8, 0x188]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x188]

================================

Block 0x165
[0x165:0x183]
---
Predecessors: [0x111]
Successors: [0x184]
---
0x165 NUMBER
0x166 PUSH1 0x0
0x168 PUSH1 0x0
0x16a PUSH2 0x100
0x16d EXP
0x16e DUP2
0x16f SLOAD
0x170 DUP2
0x171 PUSH8 0xffffffffffffffff
0x17a MUL
0x17b NOT
0x17c AND
0x17d SWAP1
0x17e DUP4
0x17f MUL
0x180 OR
0x181 SWAP1
0x182 SSTORE
0x183 POP
---
0x165: V80 = NUMBER
0x166: V81 = 0x0
0x168: V82 = 0x0
0x16a: V83 = 0x100
0x16d: V84 = EXP 0x100 0x0
0x16f: V85 = S[0x0]
0x171: V86 = 0xffffffffffffffff
0x17a: V87 = MUL 0xffffffffffffffff 0x1
0x17b: V88 = NOT 0xffffffffffffffff
0x17c: V89 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 V85
0x17f: V90 = MUL V80 0x1
0x180: V91 = OR V90 V89
0x182: S[0x0] = V91
---
Entry stack: [V8, 0x188]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x188]

================================

Block 0x184
[0x184:0x184]
---
Predecessors: [0x111, 0x165]
Successors: [0x185]
---
0x184 JUMPDEST
---
0x184: JUMPDEST 
---
Entry stack: [V8, 0x188]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x188]

================================

Block 0x185
[0x185:0x185]
---
Predecessors: [0x10b, 0x184]
Successors: [0x186]
---
0x185 JUMPDEST
---
0x185: JUMPDEST 
---
Entry stack: [V8, 0x188]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x188]

================================

Block 0x186
[0x186:0x187]
---
Predecessors: [0x185]
Successors: [0x188]
---
0x186 JUMPDEST
0x187 JUMP
---
0x186: JUMPDEST 
0x187: JUMP 0x188
---
Entry stack: [V8, 0x188]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x188
[0x188:0x189]
---
Predecessors: [0x186]
Successors: []
---
0x188 JUMPDEST
0x189 STOP
---
0x188: JUMPDEST 
0x189: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x18a
[0x18a:0x194]
---
Predecessors: [0xb]
Successors: [0x1b5]
---
0x18a JUMPDEST
0x18b PUSH2 0x195
0x18e PUSH1 0x4
0x190 POP
0x191 PUSH2 0x1b5
0x194 JUMP
---
0x18a: JUMPDEST 
0x18b: V92 = 0x195
0x18e: V93 = 0x4
0x191: V94 = 0x1b5
0x194: JUMP 0x1b5
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x195]
Exit stack: [V8, 0x195]

================================

Block 0x195
[0x195:0x1b4]
---
Predecessors: [0x1b5]
Successors: []
---
0x195 JUMPDEST
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a DUP3
0x19b PUSH8 0xffffffffffffffff
0x1a4 AND
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP2
0x1ab POP
0x1ac POP
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 SWAP2
0x1b2 SUB
0x1b3 SWAP1
0x1b4 RETURN
---
0x195: JUMPDEST 
0x196: V95 = 0x40
0x198: V96 = M[0x40]
0x19b: V97 = 0xffffffffffffffff
0x1a4: V98 = AND 0xffffffffffffffff V111
0x1a6: M[V96] = V98
0x1a7: V99 = 0x20
0x1a9: V100 = ADD 0x20 V96
0x1ad: V101 = 0x40
0x1af: V102 = M[0x40]
0x1b2: V103 = SUB V100 V102
0x1b4: RETURN V102 V103
---
Entry stack: [V8, 0x195, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x195]

================================

Block 0x1b5
[0x1b5:0x1ce]
---
Predecessors: [0x18a]
Successors: [0x195]
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x0
0x1b8 PUSH1 0x0
0x1ba SWAP1
0x1bb SLOAD
0x1bc SWAP1
0x1bd PUSH2 0x100
0x1c0 EXP
0x1c1 SWAP1
0x1c2 DIV
0x1c3 PUSH8 0xffffffffffffffff
0x1cc AND
0x1cd DUP2
0x1ce JUMP
---
0x1b5: JUMPDEST 
0x1b6: V104 = 0x0
0x1b8: V105 = 0x0
0x1bb: V106 = S[0x0]
0x1bd: V107 = 0x100
0x1c0: V108 = EXP 0x100 0x0
0x1c2: V109 = DIV V106 0x1
0x1c3: V110 = 0xffffffffffffffff
0x1cc: V111 = AND 0xffffffffffffffff V109
0x1ce: JUMP 0x195
---
Entry stack: [V8, 0x195]
Stack pops: 1
Stack additions: [S0, V111]
Exit stack: [V8, 0x195, V111]

================================

Function 0:
Public function signature: 0xff7ccfe0
Entry block: 0x18a
Exit block: 0x195
Body: 0x18a, 0x195, 0x1b5

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x188
Body: 0x39, 0x3d, 0x41, 0x4d, 0xab, 0xb8, 0xe0, 0xe7, 0x10b, 0x111, 0x165, 0x184, 0x185, 0x186, 0x188

