Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x76]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x76
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x76
0xa: JUMPI 0x76 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x7a]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x7546172
0x3a EQ
0x3b PUSH2 0x7a
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x7546172
0x3a: V12 = EQ 0x7546172 V10
0x3b: V13 = 0x7a
0x3e: JUMPI 0x7a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xcf]
---
0x3f DUP1
0x40 PUSH4 0xa19b14a
0x45 EQ
0x46 PUSH2 0xcf
0x49 JUMPI
---
0x40: V14 = 0xa19b14a
0x45: V15 = EQ 0xa19b14a V10
0x46: V16 = 0xcf
0x49: JUMPI 0xcf V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x199]
---
0x4a DUP1
0x4b PUSH4 0x2e1a7d4d
0x50 EQ
0x51 PUSH2 0x199
0x54 JUMPI
---
0x4b: V17 = 0x2e1a7d4d
0x50: V18 = EQ 0x2e1a7d4d V10
0x51: V19 = 0x199
0x54: JUMPI 0x199 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1bc]
---
0x55 DUP1
0x56 PUSH4 0x84054d3d
0x5b EQ
0x5c PUSH2 0x1bc
0x5f JUMPI
---
0x56: V20 = 0x84054d3d
0x5b: V21 = EQ 0x84054d3d V10
0x5c: V22 = 0x1bc
0x5f: JUMPI 0x1bc V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1d1]
---
0x60 DUP1
0x61 PUSH4 0xb7c68dc9
0x66 EQ
0x67 PUSH2 0x1d1
0x6a JUMPI
---
0x61: V23 = 0xb7c68dc9
0x66: V24 = EQ 0xb7c68dc9 V10
0x67: V25 = 0x1d1
0x6a: JUMPI 0x1d1 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x226]
---
0x6b DUP1
0x6c PUSH4 0xd0e30db0
0x71 EQ
0x72 PUSH2 0x226
0x75 JUMPI
---
0x6c: V26 = 0xd0e30db0
0x71: V27 = EQ 0xd0e30db0 V10
0x72: V28 = 0x226
0x75: JUMPI 0x226 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x76]
---
Predecessors: [0x0, 0x6b]
Successors: [0x77]
---
0x76 JUMPDEST
---
0x76: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x77
[0x77:0x77]
---
Predecessors: [0x76]
Successors: [0x78]
---
0x77 JUMPDEST
---
0x77: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x77]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xb]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V29 = CALLVALUE
0x7c: V30 = ISZERO V29
0x7d: V31 = 0x85
0x80: JUMPI 0x85 V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V32 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x7a]
Successors: [0x23b]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x23b
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V33 = 0x8d
0x89: V34 = 0x23b
0x8c: JUMP 0x23b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V10, 0x8d]

================================

Block 0x8d
[0x8d:0xce]
---
Predecessors: [0x23b]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 DUP3
0x93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8 AND
0xa9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe AND
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 SWAP2
0xc5 POP
0xc6 POP
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb SWAP2
0xcc SUB
0xcd SWAP1
0xce RETURN
---
0x8d: JUMPDEST 
0x8e: V35 = 0x40
0x90: V36 = M[0x40]
0x93: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0xa9: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xc0: M[V36] = V40
0xc1: V41 = 0x20
0xc3: V42 = ADD 0x20 V36
0xc7: V43 = 0x40
0xc9: V44 = M[0x40]
0xcc: V45 = SUB V42 V44
0xce: RETURN V44 V45
---
Entry stack: [V10, 0x8d, V145]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x8d]

================================

Block 0xcf
[0xcf:0xd5]
---
Predecessors: [0x3f]
Successors: [0xd6, 0xda]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xcf: JUMPDEST 
0xd0: V46 = CALLVALUE
0xd1: V47 = ISZERO V46
0xd2: V48 = 0xda
0xd5: JUMPI 0xda V47
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xcf]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V49 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xda
[0xda:0x196]
---
Predecessors: [0xcf]
Successors: [0x260]
---
0xda JUMPDEST
0xdb PUSH2 0x197
0xde PUSH1 0x4
0xe0 DUP1
0xe1 DUP1
0xe2 CALLDATALOAD
0xe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8 AND
0xf9 SWAP1
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP1
0xfe SWAP2
0xff SWAP1
0x100 DUP1
0x101 CALLDATALOAD
0x102 SWAP1
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP1
0x107 SWAP2
0x108 SWAP1
0x109 DUP1
0x10a CALLDATALOAD
0x10b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x120 AND
0x121 SWAP1
0x122 PUSH1 0x20
0x124 ADD
0x125 SWAP1
0x126 SWAP2
0x127 SWAP1
0x128 DUP1
0x129 CALLDATALOAD
0x12a SWAP1
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP1
0x12f SWAP2
0x130 SWAP1
0x131 DUP1
0x132 CALLDATALOAD
0x133 SWAP1
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP1
0x138 SWAP2
0x139 SWAP1
0x13a DUP1
0x13b CALLDATALOAD
0x13c SWAP1
0x13d PUSH1 0x20
0x13f ADD
0x140 SWAP1
0x141 SWAP2
0x142 SWAP1
0x143 DUP1
0x144 CALLDATALOAD
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b SWAP1
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP1
0x160 SWAP2
0x161 SWAP1
0x162 DUP1
0x163 CALLDATALOAD
0x164 PUSH1 0xff
0x166 AND
0x167 SWAP1
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP1
0x16c SWAP2
0x16d SWAP1
0x16e DUP1
0x16f CALLDATALOAD
0x170 PUSH1 0x0
0x172 NOT
0x173 AND
0x174 SWAP1
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP1
0x179 SWAP2
0x17a SWAP1
0x17b DUP1
0x17c CALLDATALOAD
0x17d PUSH1 0x0
0x17f NOT
0x180 AND
0x181 SWAP1
0x182 PUSH1 0x20
0x184 ADD
0x185 SWAP1
0x186 SWAP2
0x187 SWAP1
0x188 DUP1
0x189 CALLDATALOAD
0x18a SWAP1
0x18b PUSH1 0x20
0x18d ADD
0x18e SWAP1
0x18f SWAP2
0x190 SWAP1
0x191 POP
0x192 POP
0x193 PUSH2 0x260
0x196 JUMP
---
0xda: JUMPDEST 
0xdb: V50 = 0x197
0xde: V51 = 0x4
0xe2: V52 = CALLDATALOAD 0x4
0xe3: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xfa: V55 = 0x20
0xfc: V56 = ADD 0x20 0x4
0x101: V57 = CALLDATALOAD 0x24
0x103: V58 = 0x20
0x105: V59 = ADD 0x20 0x24
0x10a: V60 = CALLDATALOAD 0x44
0x10b: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x120: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x122: V63 = 0x20
0x124: V64 = ADD 0x20 0x44
0x129: V65 = CALLDATALOAD 0x64
0x12b: V66 = 0x20
0x12d: V67 = ADD 0x20 0x64
0x132: V68 = CALLDATALOAD 0x84
0x134: V69 = 0x20
0x136: V70 = ADD 0x20 0x84
0x13b: V71 = CALLDATALOAD 0xa4
0x13d: V72 = 0x20
0x13f: V73 = ADD 0x20 0xa4
0x144: V74 = CALLDATALOAD 0xc4
0x145: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x15c: V77 = 0x20
0x15e: V78 = ADD 0x20 0xc4
0x163: V79 = CALLDATALOAD 0xe4
0x164: V80 = 0xff
0x166: V81 = AND 0xff V79
0x168: V82 = 0x20
0x16a: V83 = ADD 0x20 0xe4
0x16f: V84 = CALLDATALOAD 0x104
0x170: V85 = 0x0
0x172: V86 = NOT 0x0
0x173: V87 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V84
0x175: V88 = 0x20
0x177: V89 = ADD 0x20 0x104
0x17c: V90 = CALLDATALOAD 0x124
0x17d: V91 = 0x0
0x17f: V92 = NOT 0x0
0x180: V93 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V90
0x182: V94 = 0x20
0x184: V95 = ADD 0x20 0x124
0x189: V96 = CALLDATALOAD 0x144
0x18b: V97 = 0x20
0x18d: V98 = ADD 0x20 0x144
0x193: V99 = 0x260
0x196: JUMP 0x260
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x197, V54, V57, V62, V65, V68, V71, V76, V81, V87, V93, V96]
Exit stack: [V10, 0x197, V54, V57, V62, V65, V68, V71, V76, V81, V87, V93, V96]

================================

Block 0x197
[0x197:0x198]
---
Predecessors: [0x4d3]
Successors: []
---
0x197 JUMPDEST
0x198 STOP
---
0x197: JUMPDEST 
0x198: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x199
[0x199:0x19f]
---
Predecessors: [0x4a]
Successors: [0x1a0, 0x1a4]
---
0x199 JUMPDEST
0x19a CALLVALUE
0x19b ISZERO
0x19c PUSH2 0x1a4
0x19f JUMPI
---
0x199: JUMPDEST 
0x19a: V100 = CALLVALUE
0x19b: V101 = ISZERO V100
0x19c: V102 = 0x1a4
0x19f: JUMPI 0x1a4 V101
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a0
[0x1a0:0x1a3]
---
Predecessors: [0x199]
Successors: []
---
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 REVERT
---
0x1a0: V103 = 0x0
0x1a3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a4
[0x1a4:0x1b9]
---
Predecessors: [0x199]
Successors: [0x4e0]
---
0x1a4 JUMPDEST
0x1a5 PUSH2 0x1ba
0x1a8 PUSH1 0x4
0x1aa DUP1
0x1ab DUP1
0x1ac CALLDATALOAD
0x1ad SWAP1
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 SWAP1
0x1b2 SWAP2
0x1b3 SWAP1
0x1b4 POP
0x1b5 POP
0x1b6 PUSH2 0x4e0
0x1b9 JUMP
---
0x1a4: JUMPDEST 
0x1a5: V104 = 0x1ba
0x1a8: V105 = 0x4
0x1ac: V106 = CALLDATALOAD 0x4
0x1ae: V107 = 0x20
0x1b0: V108 = ADD 0x20 0x4
0x1b6: V109 = 0x4e0
0x1b9: JUMP 0x4e0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ba, V106]
Exit stack: [V10, 0x1ba, V106]

================================

Block 0x1ba
[0x1ba:0x1bb]
---
Predecessors: [0x61b]
Successors: []
---
0x1ba JUMPDEST
0x1bb STOP
---
0x1ba: JUMPDEST 
0x1bb: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bc
[0x1bc:0x1c2]
---
Predecessors: [0x55]
Successors: [0x1c3, 0x1c7]
---
0x1bc JUMPDEST
0x1bd CALLVALUE
0x1be ISZERO
0x1bf PUSH2 0x1c7
0x1c2 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V110 = CALLVALUE
0x1be: V111 = ISZERO V110
0x1bf: V112 = 0x1c7
0x1c2: JUMPI 0x1c7 V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c3
[0x1c3:0x1c6]
---
Predecessors: [0x1bc]
Successors: []
---
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 REVERT
---
0x1c3: V113 = 0x0
0x1c6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0x1bc]
Successors: [0x61e]
---
0x1c7 JUMPDEST
0x1c8 PUSH2 0x1cf
0x1cb PUSH2 0x61e
0x1ce JUMP
---
0x1c7: JUMPDEST 
0x1c8: V114 = 0x1cf
0x1cb: V115 = 0x61e
0x1ce: JUMP 0x61e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cf]
Exit stack: [V10, 0x1cf]

================================

Block 0x1cf
[0x1cf:0x1d0]
---
Predecessors: [0x6f2]
Successors: []
---
0x1cf JUMPDEST
0x1d0 STOP
---
0x1cf: JUMPDEST 
0x1d0: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d1
[0x1d1:0x1d7]
---
Predecessors: [0x60]
Successors: [0x1d8, 0x1dc]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V116 = CALLVALUE
0x1d3: V117 = ISZERO V116
0x1d4: V118 = 0x1dc
0x1d7: JUMPI 0x1dc V117
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V119 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x1d1]
Successors: [0x6f4]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x1e4
0x1e0 PUSH2 0x6f4
0x1e3 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V120 = 0x1e4
0x1e0: V121 = 0x6f4
0x1e3: JUMP 0x6f4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e4]
Exit stack: [V10, 0x1e4]

================================

Block 0x1e4
[0x1e4:0x225]
---
Predecessors: [0x6f4]
Successors: []
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 DUP3
0x1ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ff AND
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 DUP2
0x217 MSTORE
0x218 PUSH1 0x20
0x21a ADD
0x21b SWAP2
0x21c POP
0x21d POP
0x21e PUSH1 0x40
0x220 MLOAD
0x221 DUP1
0x222 SWAP2
0x223 SUB
0x224 SWAP1
0x225 RETURN
---
0x1e4: JUMPDEST 
0x1e5: V122 = 0x40
0x1e7: V123 = M[0x40]
0x1ea: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x200: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x217: M[V123] = V127
0x218: V128 = 0x20
0x21a: V129 = ADD 0x20 V123
0x21e: V130 = 0x40
0x220: V131 = M[0x40]
0x223: V132 = SUB V129 V131
0x225: RETURN V131 V132
---
Entry stack: [V10, 0x1e4, V363]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1e4]

================================

Block 0x226
[0x226:0x22c]
---
Predecessors: [0x6b]
Successors: [0x22d, 0x231]
---
0x226 JUMPDEST
0x227 CALLVALUE
0x228 ISZERO
0x229 PUSH2 0x231
0x22c JUMPI
---
0x226: JUMPDEST 
0x227: V133 = CALLVALUE
0x228: V134 = ISZERO V133
0x229: V135 = 0x231
0x22c: JUMPI 0x231 V134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22d
[0x22d:0x230]
---
Predecessors: [0x226]
Successors: []
---
0x22d PUSH1 0x0
0x22f DUP1
0x230 REVERT
---
0x22d: V136 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x231
[0x231:0x238]
---
Predecessors: [0x226]
Successors: [0x71a]
---
0x231 JUMPDEST
0x232 PUSH2 0x239
0x235 PUSH2 0x71a
0x238 JUMP
---
0x231: JUMPDEST 
0x232: V137 = 0x239
0x235: V138 = 0x71a
0x238: JUMP 0x71a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x239]
Exit stack: [V10, 0x239]

================================

Block 0x239
[0x239:0x23a]
---
Predecessors: [0x863]
Successors: []
---
0x239 JUMPDEST
0x23a STOP
---
0x239: JUMPDEST 
0x23a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23b
[0x23b:0x25f]
---
Predecessors: [0x85]
Successors: [0x8d]
---
0x23b JUMPDEST
0x23c PUSH1 0x0
0x23e DUP1
0x23f SWAP1
0x240 SLOAD
0x241 SWAP1
0x242 PUSH2 0x100
0x245 EXP
0x246 SWAP1
0x247 DIV
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e DUP2
0x25f JUMP
---
0x23b: JUMPDEST 
0x23c: V139 = 0x0
0x240: V140 = S[0x0]
0x242: V141 = 0x100
0x245: V142 = EXP 0x100 0x0
0x247: V143 = DIV V140 0x1
0x248: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x25f: JUMP 0x8d
---
Entry stack: [V10, 0x8d]
Stack pops: 1
Stack additions: [S0, V145]
Exit stack: [V10, 0x8d, V145]

================================

Block 0x260
[0x260:0x2b6]
---
Predecessors: [0xda]
Successors: [0x2b7, 0x2bb]
---
0x260 JUMPDEST
0x261 PUSH1 0x0
0x263 DUP1
0x264 SWAP1
0x265 SLOAD
0x266 SWAP1
0x267 PUSH2 0x100
0x26a EXP
0x26b SWAP1
0x26c DIV
0x26d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x282 AND
0x283 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x298 AND
0x299 CALLER
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 EQ
0x2b1 ISZERO
0x2b2 ISZERO
0x2b3 PUSH2 0x2bb
0x2b6 JUMPI
---
0x260: JUMPDEST 
0x261: V146 = 0x0
0x265: V147 = S[0x0]
0x267: V148 = 0x100
0x26a: V149 = EXP 0x100 0x0
0x26c: V150 = DIV V147 0x1
0x26d: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x282: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x283: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x298: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x299: V155 = CALLER
0x29a: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2b0: V158 = EQ V157 V154
0x2b1: V159 = ISZERO V158
0x2b2: V160 = ISZERO V159
0x2b3: V161 = 0x2bb
0x2b6: JUMPI 0x2bb V160
---
Entry stack: [V10, 0x197, V54, V57, V62, V65, V68, V71, V76, V81, V87, V93, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x197, V54, V57, V62, V65, V68, V71, V76, V81, V87, V93, V96]

================================

Block 0x2b7
[0x2b7:0x2ba]
---
Predecessors: [0x260]
Successors: []
---
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba REVERT
---
0x2b7: V162 = 0x0
0x2ba: REVERT 0x0 0x0
---
Entry stack: [V10, 0x197, V54, V57, V62, V65, V68, V71, V76, V81, V87, V93, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x197, V54, V57, V62, V65, V68, V71, V76, V81, V87, V93, V96]

================================

Block 0x2bb
[0x2bb:0x4d2]
---
Predecessors: [0x260]
Successors: [0x4d3]
---
0x2bb JUMPDEST
0x2bc PUSH1 0x1
0x2be PUSH1 0x0
0x2c0 SWAP1
0x2c1 SLOAD
0x2c2 SWAP1
0x2c3 PUSH2 0x100
0x2c6 EXP
0x2c7 SWAP1
0x2c8 DIV
0x2c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2de AND
0x2df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f4 AND
0x2f5 PUSH3 0x1e848
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd DUP1
0x2fe PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x31f DUP2
0x320 MSTORE
0x321 PUSH1 0x20
0x323 ADD
0x324 PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x345 DUP2
0x346 MSTORE
0x347 PUSH1 0x20
0x349 ADD
0x34a PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x36b DUP2
0x36c MSTORE
0x36d POP
0x36e PUSH1 0x5c
0x370 ADD
0x371 SWAP1
0x372 POP
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 SWAP2
0x378 SUB
0x379 SWAP1
0x37a SHA3
0x37b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x399 SWAP1
0x39a DIV
0x39b SWAP1
0x39c DUP14
0x39d DUP14
0x39e DUP14
0x39f DUP14
0x3a0 DUP14
0x3a1 DUP14
0x3a2 DUP14
0x3a3 DUP14
0x3a4 DUP14
0x3a5 DUP14
0x3a6 DUP14
0x3a7 PUSH1 0x40
0x3a9 MLOAD
0x3aa DUP14
0x3ab PUSH4 0xffffffff
0x3b0 AND
0x3b1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3cf MUL
0x3d0 DUP2
0x3d1 MSTORE
0x3d2 PUSH1 0x4
0x3d4 ADD
0x3d5 DUP1
0x3d6 DUP13
0x3d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ec AND
0x3ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x402 AND
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x20
0x407 ADD
0x408 DUP12
0x409 DUP2
0x40a MSTORE
0x40b PUSH1 0x20
0x40d ADD
0x40e DUP11
0x40f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x424 AND
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b DUP2
0x43c MSTORE
0x43d PUSH1 0x20
0x43f ADD
0x440 DUP10
0x441 DUP2
0x442 MSTORE
0x443 PUSH1 0x20
0x445 ADD
0x446 DUP9
0x447 DUP2
0x448 MSTORE
0x449 PUSH1 0x20
0x44b ADD
0x44c DUP8
0x44d DUP2
0x44e MSTORE
0x44f PUSH1 0x20
0x451 ADD
0x452 DUP7
0x453 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x468 AND
0x469 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47e AND
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x20
0x483 ADD
0x484 DUP6
0x485 PUSH1 0xff
0x487 AND
0x488 PUSH1 0xff
0x48a AND
0x48b DUP2
0x48c MSTORE
0x48d PUSH1 0x20
0x48f ADD
0x490 DUP5
0x491 PUSH1 0x0
0x493 NOT
0x494 AND
0x495 PUSH1 0x0
0x497 NOT
0x498 AND
0x499 DUP2
0x49a MSTORE
0x49b PUSH1 0x20
0x49d ADD
0x49e DUP4
0x49f PUSH1 0x0
0x4a1 NOT
0x4a2 AND
0x4a3 PUSH1 0x0
0x4a5 NOT
0x4a6 AND
0x4a7 DUP2
0x4a8 MSTORE
0x4a9 PUSH1 0x20
0x4ab ADD
0x4ac DUP3
0x4ad DUP2
0x4ae MSTORE
0x4af PUSH1 0x20
0x4b1 ADD
0x4b2 SWAP12
0x4b3 POP
0x4b4 POP
0x4b5 POP
0x4b6 POP
0x4b7 POP
0x4b8 POP
0x4b9 POP
0x4ba POP
0x4bb POP
0x4bc POP
0x4bd POP
0x4be POP
0x4bf PUSH1 0x0
0x4c1 PUSH1 0x40
0x4c3 MLOAD
0x4c4 DUP1
0x4c5 DUP4
0x4c6 SUB
0x4c7 DUP2
0x4c8 PUSH1 0x0
0x4ca DUP9
0x4cb DUP8
0x4cc CALL
0x4cd SWAP4
0x4ce POP
0x4cf POP
0x4d0 POP
0x4d1 POP
0x4d2 POP
---
0x2bb: JUMPDEST 
0x2bc: V163 = 0x1
0x2be: V164 = 0x0
0x2c1: V165 = S[0x1]
0x2c3: V166 = 0x100
0x2c6: V167 = EXP 0x100 0x0
0x2c8: V168 = DIV V165 0x1
0x2c9: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2df: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2f5: V173 = 0x1e848
0x2f9: V174 = 0x40
0x2fb: V175 = M[0x40]
0x2fe: V176 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x320: M[V175] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x321: V177 = 0x20
0x323: V178 = ADD 0x20 V175
0x324: V179 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x346: M[V178] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x347: V180 = 0x20
0x349: V181 = ADD 0x20 V178
0x34a: V182 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x36c: M[V181] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x36e: V183 = 0x5c
0x370: V184 = ADD 0x5c V175
0x373: V185 = 0x40
0x375: V186 = M[0x40]
0x378: V187 = SUB V184 V186
0x37a: V188 = SHA3 V186 V187
0x37b: V189 = 0x100000000000000000000000000000000000000000000000000000000
0x39a: V190 = DIV V188 0x100000000000000000000000000000000000000000000000000000000
0x3a7: V191 = 0x40
0x3a9: V192 = M[0x40]
0x3ab: V193 = 0xffffffff
0x3b0: V194 = AND 0xffffffff V190
0x3b1: V195 = 0x100000000000000000000000000000000000000000000000000000000
0x3cf: V196 = MUL 0x100000000000000000000000000000000000000000000000000000000 V194
0x3d1: M[V192] = V196
0x3d2: V197 = 0x4
0x3d4: V198 = ADD 0x4 V192
0x3d7: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x3ed: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x402: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x404: M[V198] = V202
0x405: V203 = 0x20
0x407: V204 = ADD 0x20 V198
0x40a: M[V204] = V57
0x40b: V205 = 0x20
0x40d: V206 = ADD 0x20 V204
0x40f: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x424: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x425: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x43c: M[V206] = V210
0x43d: V211 = 0x20
0x43f: V212 = ADD 0x20 V206
0x442: M[V212] = V65
0x443: V213 = 0x20
0x445: V214 = ADD 0x20 V212
0x448: M[V214] = V68
0x449: V215 = 0x20
0x44b: V216 = ADD 0x20 V214
0x44e: M[V216] = V71
0x44f: V217 = 0x20
0x451: V218 = ADD 0x20 V216
0x453: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x468: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x469: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x480: M[V218] = V222
0x481: V223 = 0x20
0x483: V224 = ADD 0x20 V218
0x485: V225 = 0xff
0x487: V226 = AND 0xff V81
0x488: V227 = 0xff
0x48a: V228 = AND 0xff V226
0x48c: M[V224] = V228
0x48d: V229 = 0x20
0x48f: V230 = ADD 0x20 V224
0x491: V231 = 0x0
0x493: V232 = NOT 0x0
0x494: V233 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V87
0x495: V234 = 0x0
0x497: V235 = NOT 0x0
0x498: V236 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V233
0x49a: M[V230] = V236
0x49b: V237 = 0x20
0x49d: V238 = ADD 0x20 V230
0x49f: V239 = 0x0
0x4a1: V240 = NOT 0x0
0x4a2: V241 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V93
0x4a3: V242 = 0x0
0x4a5: V243 = NOT 0x0
0x4a6: V244 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V241
0x4a8: M[V238] = V244
0x4a9: V245 = 0x20
0x4ab: V246 = ADD 0x20 V238
0x4ae: M[V246] = V96
0x4af: V247 = 0x20
0x4b1: V248 = ADD 0x20 V246
0x4bf: V249 = 0x0
0x4c1: V250 = 0x40
0x4c3: V251 = M[0x40]
0x4c6: V252 = SUB V248 V251
0x4c8: V253 = 0x0
0x4cc: V254 = CALL 0x1e848 V172 0x0 V251 V252 V251 0x0
---
Entry stack: [V10, 0x197, V54, V57, V62, V65, V68, V71, V76, V81, V87, V93, V96]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x197, V54, V57, V62, V65, V68, V71, V76, V81, V87, V93, V96]

================================

Block 0x4d3
[0x4d3:0x4df]
---
Predecessors: [0x2bb]
Successors: [0x197]
---
0x4d3 JUMPDEST
0x4d4 POP
0x4d5 POP
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da POP
0x4db POP
0x4dc POP
0x4dd POP
0x4de POP
0x4df JUMP
---
0x4d3: JUMPDEST 
0x4df: JUMP 0x197
---
Entry stack: [V10, 0x197, V54, V57, V62, V65, V68, V71, V76, V81, V87, V93, V96]
Stack pops: 12
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e0
[0x4e0:0x536]
---
Predecessors: [0x1a4]
Successors: [0x537, 0x53b]
---
0x4e0 JUMPDEST
0x4e1 PUSH1 0x0
0x4e3 DUP1
0x4e4 SWAP1
0x4e5 SLOAD
0x4e6 SWAP1
0x4e7 PUSH2 0x100
0x4ea EXP
0x4eb SWAP1
0x4ec DIV
0x4ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x502 AND
0x503 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x518 AND
0x519 CALLER
0x51a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52f AND
0x530 EQ
0x531 ISZERO
0x532 ISZERO
0x533 PUSH2 0x53b
0x536 JUMPI
---
0x4e0: JUMPDEST 
0x4e1: V255 = 0x0
0x4e5: V256 = S[0x0]
0x4e7: V257 = 0x100
0x4ea: V258 = EXP 0x100 0x0
0x4ec: V259 = DIV V256 0x1
0x4ed: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x502: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x503: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x518: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x519: V264 = CALLER
0x51a: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x52f: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x530: V267 = EQ V266 V263
0x531: V268 = ISZERO V267
0x532: V269 = ISZERO V268
0x533: V270 = 0x53b
0x536: JUMPI 0x53b V269
---
Entry stack: [V10, 0x1ba, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ba, V106]

================================

Block 0x537
[0x537:0x53a]
---
Predecessors: [0x4e0]
Successors: []
---
0x537 PUSH1 0x0
0x539 DUP1
0x53a REVERT
---
0x537: V271 = 0x0
0x53a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ba, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ba, V106]

================================

Block 0x53b
[0x53b:0x61a]
---
Predecessors: [0x4e0]
Successors: [0x61b]
---
0x53b JUMPDEST
0x53c PUSH1 0x1
0x53e PUSH1 0x0
0x540 SWAP1
0x541 SLOAD
0x542 SWAP1
0x543 PUSH2 0x100
0x546 EXP
0x547 SWAP1
0x548 DIV
0x549 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55e AND
0x55f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x574 AND
0x575 PUSH1 0x40
0x577 MLOAD
0x578 DUP1
0x579 DUP1
0x57a PUSH32 0x77697468647261772875696e7432353629000000000000000000000000000000
0x59b DUP2
0x59c MSTORE
0x59d POP
0x59e PUSH1 0x11
0x5a0 ADD
0x5a1 SWAP1
0x5a2 POP
0x5a3 PUSH1 0x40
0x5a5 MLOAD
0x5a6 DUP1
0x5a7 SWAP2
0x5a8 SUB
0x5a9 SWAP1
0x5aa SHA3
0x5ab PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5c9 SWAP1
0x5ca DIV
0x5cb DUP3
0x5cc PUSH1 0x40
0x5ce MLOAD
0x5cf DUP3
0x5d0 PUSH4 0xffffffff
0x5d5 AND
0x5d6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5f4 MUL
0x5f5 DUP2
0x5f6 MSTORE
0x5f7 PUSH1 0x4
0x5f9 ADD
0x5fa DUP1
0x5fb DUP3
0x5fc DUP2
0x5fd MSTORE
0x5fe PUSH1 0x20
0x600 ADD
0x601 SWAP2
0x602 POP
0x603 POP
0x604 PUSH1 0x0
0x606 PUSH1 0x40
0x608 MLOAD
0x609 DUP1
0x60a DUP4
0x60b SUB
0x60c DUP2
0x60d PUSH1 0x0
0x60f DUP8
0x610 PUSH2 0x646e
0x613 GAS
0x614 SUB
0x615 CALL
0x616 SWAP3
0x617 POP
0x618 POP
0x619 POP
0x61a POP
---
0x53b: JUMPDEST 
0x53c: V272 = 0x1
0x53e: V273 = 0x0
0x541: V274 = S[0x1]
0x543: V275 = 0x100
0x546: V276 = EXP 0x100 0x0
0x548: V277 = DIV V274 0x1
0x549: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x55e: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x55f: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x574: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x575: V282 = 0x40
0x577: V283 = M[0x40]
0x57a: V284 = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x59c: M[V283] = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x59e: V285 = 0x11
0x5a0: V286 = ADD 0x11 V283
0x5a3: V287 = 0x40
0x5a5: V288 = M[0x40]
0x5a8: V289 = SUB V286 V288
0x5aa: V290 = SHA3 V288 V289
0x5ab: V291 = 0x100000000000000000000000000000000000000000000000000000000
0x5ca: V292 = DIV V290 0x100000000000000000000000000000000000000000000000000000000
0x5cc: V293 = 0x40
0x5ce: V294 = M[0x40]
0x5d0: V295 = 0xffffffff
0x5d5: V296 = AND 0xffffffff V292
0x5d6: V297 = 0x100000000000000000000000000000000000000000000000000000000
0x5f4: V298 = MUL 0x100000000000000000000000000000000000000000000000000000000 V296
0x5f6: M[V294] = V298
0x5f7: V299 = 0x4
0x5f9: V300 = ADD 0x4 V294
0x5fd: M[V300] = V106
0x5fe: V301 = 0x20
0x600: V302 = ADD 0x20 V300
0x604: V303 = 0x0
0x606: V304 = 0x40
0x608: V305 = M[0x40]
0x60b: V306 = SUB V302 V305
0x60d: V307 = 0x0
0x610: V308 = 0x646e
0x613: V309 = GAS
0x614: V310 = SUB V309 0x646e
0x615: V311 = CALL V310 V281 0x0 V305 V306 V305 0x0
---
Entry stack: [V10, 0x1ba, V106]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1ba, V106]

================================

Block 0x61b
[0x61b:0x61d]
---
Predecessors: [0x53b]
Successors: [0x1ba]
---
0x61b JUMPDEST
0x61c POP
0x61d JUMP
---
0x61b: JUMPDEST 
0x61d: JUMP 0x1ba
---
Entry stack: [V10, 0x1ba, V106]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x61e
[0x61e:0x674]
---
Predecessors: [0x1c7]
Successors: [0x675, 0x679]
---
0x61e JUMPDEST
0x61f PUSH1 0x0
0x621 DUP1
0x622 SWAP1
0x623 SLOAD
0x624 SWAP1
0x625 PUSH2 0x100
0x628 EXP
0x629 SWAP1
0x62a DIV
0x62b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x640 AND
0x641 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x656 AND
0x657 CALLER
0x658 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66d AND
0x66e EQ
0x66f ISZERO
0x670 ISZERO
0x671 PUSH2 0x679
0x674 JUMPI
---
0x61e: JUMPDEST 
0x61f: V312 = 0x0
0x623: V313 = S[0x0]
0x625: V314 = 0x100
0x628: V315 = EXP 0x100 0x0
0x62a: V316 = DIV V313 0x1
0x62b: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x640: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x641: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x656: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x657: V321 = CALLER
0x658: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x66d: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x66e: V324 = EQ V323 V320
0x66f: V325 = ISZERO V324
0x670: V326 = ISZERO V325
0x671: V327 = 0x679
0x674: JUMPI 0x679 V326
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x675
[0x675:0x678]
---
Predecessors: [0x61e]
Successors: []
---
0x675 PUSH1 0x0
0x677 DUP1
0x678 REVERT
---
0x675: V328 = 0x0
0x678: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x679
[0x679:0x6ec]
---
Predecessors: [0x61e]
Successors: [0x6ed, 0x6f1]
---
0x679 JUMPDEST
0x67a PUSH1 0x0
0x67c DUP1
0x67d SWAP1
0x67e SLOAD
0x67f SWAP1
0x680 PUSH2 0x100
0x683 EXP
0x684 SWAP1
0x685 DIV
0x686 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69b AND
0x69c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b1 AND
0x6b2 PUSH2 0x8fc
0x6b5 ADDRESS
0x6b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cb AND
0x6cc BALANCE
0x6cd SWAP1
0x6ce DUP2
0x6cf ISZERO
0x6d0 MUL
0x6d1 SWAP1
0x6d2 PUSH1 0x40
0x6d4 MLOAD
0x6d5 PUSH1 0x0
0x6d7 PUSH1 0x40
0x6d9 MLOAD
0x6da DUP1
0x6db DUP4
0x6dc SUB
0x6dd DUP2
0x6de DUP6
0x6df DUP9
0x6e0 DUP9
0x6e1 CALL
0x6e2 SWAP4
0x6e3 POP
0x6e4 POP
0x6e5 POP
0x6e6 POP
0x6e7 ISZERO
0x6e8 ISZERO
0x6e9 PUSH2 0x6f1
0x6ec JUMPI
---
0x679: JUMPDEST 
0x67a: V329 = 0x0
0x67e: V330 = S[0x0]
0x680: V331 = 0x100
0x683: V332 = EXP 0x100 0x0
0x685: V333 = DIV V330 0x1
0x686: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x69b: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x69c: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x6b2: V338 = 0x8fc
0x6b5: V339 = ADDRESS
0x6b6: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cb: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x6cc: V342 = BALANCE V341
0x6cf: V343 = ISZERO V342
0x6d0: V344 = MUL V343 0x8fc
0x6d2: V345 = 0x40
0x6d4: V346 = M[0x40]
0x6d5: V347 = 0x0
0x6d7: V348 = 0x40
0x6d9: V349 = M[0x40]
0x6dc: V350 = SUB V346 V349
0x6e1: V351 = CALL V344 V337 V342 V349 V350 V349 0x0
0x6e7: V352 = ISZERO V351
0x6e8: V353 = ISZERO V352
0x6e9: V354 = 0x6f1
0x6ec: JUMPI 0x6f1 V353
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x6ed
[0x6ed:0x6f0]
---
Predecessors: [0x679]
Successors: []
---
0x6ed PUSH1 0x0
0x6ef DUP1
0x6f0 REVERT
---
0x6ed: V355 = 0x0
0x6f0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x6f1
[0x6f1:0x6f1]
---
Predecessors: [0x679]
Successors: [0x6f2]
---
0x6f1 JUMPDEST
---
0x6f1: JUMPDEST 
---
Entry stack: [V10, 0x1cf]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1cf]

================================

Block 0x6f2
[0x6f2:0x6f3]
---
Predecessors: [0x6f1]
Successors: [0x1cf]
---
0x6f2 JUMPDEST
0x6f3 JUMP
---
0x6f2: JUMPDEST 
0x6f3: JUMP 0x1cf
---
Entry stack: [V10, 0x1cf]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x6f4
[0x6f4:0x719]
---
Predecessors: [0x1dc]
Successors: [0x1e4]
---
0x6f4 JUMPDEST
0x6f5 PUSH1 0x1
0x6f7 PUSH1 0x0
0x6f9 SWAP1
0x6fa SLOAD
0x6fb SWAP1
0x6fc PUSH2 0x100
0x6ff EXP
0x700 SWAP1
0x701 DIV
0x702 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x717 AND
0x718 DUP2
0x719 JUMP
---
0x6f4: JUMPDEST 
0x6f5: V356 = 0x1
0x6f7: V357 = 0x0
0x6fa: V358 = S[0x1]
0x6fc: V359 = 0x100
0x6ff: V360 = EXP 0x100 0x0
0x701: V361 = DIV V358 0x1
0x702: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x717: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x719: JUMP 0x1e4
---
Entry stack: [V10, 0x1e4]
Stack pops: 1
Stack additions: [S0, V363]
Exit stack: [V10, 0x1e4, V363]

================================

Block 0x71a
[0x71a:0x770]
---
Predecessors: [0x231]
Successors: [0x771, 0x775]
---
0x71a JUMPDEST
0x71b PUSH1 0x0
0x71d DUP1
0x71e SWAP1
0x71f SLOAD
0x720 SWAP1
0x721 PUSH2 0x100
0x724 EXP
0x725 SWAP1
0x726 DIV
0x727 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73c AND
0x73d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x752 AND
0x753 CALLER
0x754 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x769 AND
0x76a EQ
0x76b ISZERO
0x76c ISZERO
0x76d PUSH2 0x775
0x770 JUMPI
---
0x71a: JUMPDEST 
0x71b: V364 = 0x0
0x71f: V365 = S[0x0]
0x721: V366 = 0x100
0x724: V367 = EXP 0x100 0x0
0x726: V368 = DIV V365 0x1
0x727: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x73c: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x73d: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x752: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x753: V373 = CALLER
0x754: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x769: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x76a: V376 = EQ V375 V372
0x76b: V377 = ISZERO V376
0x76c: V378 = ISZERO V377
0x76d: V379 = 0x775
0x770: JUMPI 0x775 V378
---
Entry stack: [V10, 0x239]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x239]

================================

Block 0x771
[0x771:0x774]
---
Predecessors: [0x71a]
Successors: []
---
0x771 PUSH1 0x0
0x773 DUP1
0x774 REVERT
---
0x771: V380 = 0x0
0x774: REVERT 0x0 0x0
---
Entry stack: [V10, 0x239]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x239]

================================

Block 0x775
[0x775:0x862]
---
Predecessors: [0x71a]
Successors: [0x863]
---
0x775 JUMPDEST
0x776 PUSH1 0x1
0x778 PUSH1 0x0
0x77a SWAP1
0x77b SLOAD
0x77c SWAP1
0x77d PUSH2 0x100
0x780 EXP
0x781 SWAP1
0x782 DIV
0x783 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x798 AND
0x799 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ae AND
0x7af ADDRESS
0x7b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c5 AND
0x7c6 BALANCE
0x7c7 PUSH1 0x40
0x7c9 MLOAD
0x7ca DUP1
0x7cb DUP1
0x7cc PUSH32 0x6465706f73697428290000000000000000000000000000000000000000000000
0x7ed DUP2
0x7ee MSTORE
0x7ef POP
0x7f0 PUSH1 0x9
0x7f2 ADD
0x7f3 SWAP1
0x7f4 POP
0x7f5 PUSH1 0x40
0x7f7 MLOAD
0x7f8 DUP1
0x7f9 SWAP2
0x7fa SUB
0x7fb SWAP1
0x7fc SHA3
0x7fd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x81b SWAP1
0x81c DIV
0x81d SWAP1
0x81e PUSH1 0x40
0x820 MLOAD
0x821 DUP3
0x822 PUSH4 0xffffffff
0x827 AND
0x828 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x846 MUL
0x847 DUP2
0x848 MSTORE
0x849 PUSH1 0x4
0x84b ADD
0x84c PUSH1 0x0
0x84e PUSH1 0x40
0x850 MLOAD
0x851 DUP1
0x852 DUP4
0x853 SUB
0x854 DUP2
0x855 DUP6
0x856 DUP9
0x857 PUSH2 0x8796
0x85a GAS
0x85b SUB
0x85c CALL
0x85d SWAP4
0x85e POP
0x85f POP
0x860 POP
0x861 POP
0x862 POP
---
0x775: JUMPDEST 
0x776: V381 = 0x1
0x778: V382 = 0x0
0x77b: V383 = S[0x1]
0x77d: V384 = 0x100
0x780: V385 = EXP 0x100 0x0
0x782: V386 = DIV V383 0x1
0x783: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x798: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x799: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ae: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x7af: V391 = ADDRESS
0x7b0: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c5: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x7c6: V394 = BALANCE V393
0x7c7: V395 = 0x40
0x7c9: V396 = M[0x40]
0x7cc: V397 = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x7ee: M[V396] = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x7f0: V398 = 0x9
0x7f2: V399 = ADD 0x9 V396
0x7f5: V400 = 0x40
0x7f7: V401 = M[0x40]
0x7fa: V402 = SUB V399 V401
0x7fc: V403 = SHA3 V401 V402
0x7fd: V404 = 0x100000000000000000000000000000000000000000000000000000000
0x81c: V405 = DIV V403 0x100000000000000000000000000000000000000000000000000000000
0x81e: V406 = 0x40
0x820: V407 = M[0x40]
0x822: V408 = 0xffffffff
0x827: V409 = AND 0xffffffff V405
0x828: V410 = 0x100000000000000000000000000000000000000000000000000000000
0x846: V411 = MUL 0x100000000000000000000000000000000000000000000000000000000 V409
0x848: M[V407] = V411
0x849: V412 = 0x4
0x84b: V413 = ADD 0x4 V407
0x84c: V414 = 0x0
0x84e: V415 = 0x40
0x850: V416 = M[0x40]
0x853: V417 = SUB V413 V416
0x857: V418 = 0x8796
0x85a: V419 = GAS
0x85b: V420 = SUB V419 0x8796
0x85c: V421 = CALL V420 V390 V394 V416 V417 V416 0x0
---
Entry stack: [V10, 0x239]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x239]

================================

Block 0x863
[0x863:0x864]
---
Predecessors: [0x775]
Successors: [0x239]
---
0x863 JUMPDEST
0x864 JUMP
---
0x863: JUMPDEST 
0x864: JUMP 0x239
---
Entry stack: [V10, 0x239]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x865
[0x865:0x893]
---
Predecessors: []
Successors: []
---
0x865 STOP
0x866 LOG1
0x867 PUSH6 0x627a7a723058
0x86e SHA3
0x86f PUSH8 0xaab1baa74af1f90
0x878 PUSH27 0xec5966ff1e7504b4b1d0e500524130049aa99eb325be0029
---
0x865: STOP 
0x866: LOG S0 S1 S2
0x867: V422 = 0x627a7a723058
0x86e: V423 = SHA3 0x627a7a723058 S3
0x86f: V424 = 0xaab1baa74af1f90
0x878: V425 = 0xec5966ff1e7504b4b1d0e500524130049aa99eb325be0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xec5966ff1e7504b4b1d0e500524130049aa99eb325be0029, 0xaab1baa74af1f90, V423]
Exit stack: []

================================

Function 0:
Public function signature: 0x7546172
Entry block: 0x7a
Exit block: 0x8d
Body: 0x7a, 0x81, 0x85, 0x8d, 0x23b

Function 1:
Public function signature: 0xa19b14a
Entry block: 0xcf
Exit block: 0x197
Body: 0xcf, 0xd6, 0xda, 0x197, 0x260, 0x2b7, 0x2bb, 0x4d3

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0x199
Exit block: 0x1ba
Body: 0x199, 0x1a0, 0x1a4, 0x1ba, 0x4e0, 0x537, 0x53b, 0x61b

Function 3:
Public function signature: 0x84054d3d
Entry block: 0x1bc
Exit block: 0x1cf
Body: 0x1bc, 0x1c3, 0x1c7, 0x1cf, 0x61e, 0x675, 0x679, 0x6ed, 0x6f1, 0x6f2

Function 4:
Public function signature: 0xb7c68dc9
Entry block: 0x1d1
Exit block: 0x1e4
Body: 0x1d1, 0x1d8, 0x1dc, 0x1e4, 0x6f4

Function 5:
Public function signature: 0xd0e30db0
Entry block: 0x226
Exit block: 0x239
Body: 0x226, 0x22d, 0x231, 0x239, 0x71a, 0x771, 0x775, 0x863

Function 6:
Public fallback function
Entry block: 0x76
Exit block: 0x78
Body: 0x76, 0x77, 0x78

