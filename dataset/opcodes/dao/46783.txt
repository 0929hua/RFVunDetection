Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x9890220b
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x9890220b
0x3c: V13 = EQ 0x9890220b V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0x4d]
---
Predecessors: [0xd]
Successors: [0x50]
---
0x46 JUMPDEST
0x47 PUSH2 0x4e
0x4a PUSH2 0x50
0x4d JUMP
---
0x46: JUMPDEST 
0x47: V16 = 0x4e
0x4a: V17 = 0x50
0x4d: JUMP 0x50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4e]
Exit stack: [V11, 0x4e]

================================

Block 0x4e
[0x4e:0x4f]
---
Predecessors: [0x2db]
Successors: []
---
0x4e JUMPDEST
0x4f STOP
---
0x4e: JUMPDEST 
0x4f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x50
[0x50:0x10c]
---
Predecessors: [0x46]
Successors: [0x10d, 0x111]
---
0x50 JUMPDEST
0x51 PUSH1 0x0
0x53 PUSH1 0x1
0x55 PUSH1 0x0
0x57 SWAP1
0x58 SLOAD
0x59 SWAP1
0x5a PUSH2 0x100
0x5d EXP
0x5e SWAP1
0x5f DIV
0x60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75 AND
0x76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b AND
0x8c PUSH4 0x4a5db3b5
0x91 PUSH1 0x1
0x93 CALLVALUE
0x94 SUB
0x95 ADDRESS
0x96 PUSH1 0x40
0x98 MLOAD
0x99 DUP4
0x9a PUSH4 0xffffffff
0x9f AND
0xa0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbe MUL
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x4
0xc3 ADD
0xc4 DUP1
0xc5 DUP3
0xc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb AND
0xdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1 AND
0xf2 DUP2
0xf3 MSTORE
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP2
0xf8 POP
0xf9 POP
0xfa PUSH1 0x0
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 DUP4
0x101 SUB
0x102 DUP2
0x103 DUP6
0x104 DUP9
0x105 DUP1
0x106 EXTCODESIZE
0x107 ISZERO
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x50: JUMPDEST 
0x51: V18 = 0x0
0x53: V19 = 0x1
0x55: V20 = 0x0
0x58: V21 = S[0x1]
0x5a: V22 = 0x100
0x5d: V23 = EXP 0x100 0x0
0x5f: V24 = DIV V21 0x1
0x60: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x75: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x76: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x8c: V29 = 0x4a5db3b5
0x91: V30 = 0x1
0x93: V31 = CALLVALUE
0x94: V32 = SUB V31 0x1
0x95: V33 = ADDRESS
0x96: V34 = 0x40
0x98: V35 = M[0x40]
0x9a: V36 = 0xffffffff
0x9f: V37 = AND 0xffffffff 0x4a5db3b5
0xa0: V38 = 0x100000000000000000000000000000000000000000000000000000000
0xbe: V39 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4a5db3b5
0xc0: M[V35] = 0x4a5db3b500000000000000000000000000000000000000000000000000000000
0xc1: V40 = 0x4
0xc3: V41 = ADD 0x4 V35
0xc6: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xdc: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xf3: M[V41] = V45
0xf4: V46 = 0x20
0xf6: V47 = ADD 0x20 V41
0xfa: V48 = 0x0
0xfc: V49 = 0x40
0xfe: V50 = M[0x40]
0x101: V51 = SUB V47 V50
0x106: V52 = EXTCODESIZE V28
0x107: V53 = ISZERO V52
0x108: V54 = ISZERO V53
0x109: V55 = 0x111
0x10c: JUMPI 0x111 V54
---
Entry stack: [V11, 0x4e]
Stack pops: 0
Stack additions: [0x0, V28, 0x4a5db3b5, V32, V47, 0x0, V50, V51, V50, V32, V28]
Exit stack: [V11, 0x4e, 0x0, V28, 0x4a5db3b5, V32, V47, 0x0, V50, V51, V50, V32, V28]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x50]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V56 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e, 0x0, V28, 0x4a5db3b5, V32, V47, 0x0, V50, V51, V50, V32, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e, 0x0, V28, 0x4a5db3b5, V32, V47, 0x0, V50, V51, V50, V32, V28]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0x50]
Successors: [0x11a, 0x11e]
---
0x111 JUMPDEST
0x112 GAS
0x113 CALL
0x114 ISZERO
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x111: JUMPDEST 
0x112: V57 = GAS
0x113: V58 = CALL V57 V28 V32 V50 V51 V50 0x0
0x114: V59 = ISZERO V58
0x115: V60 = ISZERO V59
0x116: V61 = 0x11e
0x119: JUMPI 0x11e V60
---
Entry stack: [V11, 0x4e, 0x0, V28, 0x4a5db3b5, V32, V47, 0x0, V50, V51, V50, V32, V28]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x4e, 0x0, V28, 0x4a5db3b5, V32, V47]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x111]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V62 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e, 0x0, V28, 0x4a5db3b5, V32, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e, 0x0, V28, 0x4a5db3b5, V32, V47]

================================

Block 0x11e
[0x11e:0x1a2]
---
Predecessors: [0x111]
Successors: [0x1a3, 0x1a7]
---
0x11e JUMPDEST
0x11f POP
0x120 POP
0x121 POP
0x122 POP
0x123 PUSH1 0x1
0x125 PUSH1 0x0
0x127 SWAP1
0x128 SLOAD
0x129 SWAP1
0x12a PUSH2 0x100
0x12d EXP
0x12e SWAP1
0x12f DIV
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c PUSH4 0x266c2132
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP2
0x165 PUSH4 0xffffffff
0x16a AND
0x16b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x189 MUL
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x4
0x18e ADD
0x18f PUSH1 0x20
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 DUP4
0x196 SUB
0x197 DUP2
0x198 PUSH1 0x0
0x19a DUP8
0x19b DUP1
0x19c EXTCODESIZE
0x19d ISZERO
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x11e: JUMPDEST 
0x123: V63 = 0x1
0x125: V64 = 0x0
0x128: V65 = S[0x1]
0x12a: V66 = 0x100
0x12d: V67 = EXP 0x100 0x0
0x12f: V68 = DIV V65 0x1
0x130: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x146: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x15c: V73 = 0x266c2132
0x161: V74 = 0x40
0x163: V75 = M[0x40]
0x165: V76 = 0xffffffff
0x16a: V77 = AND 0xffffffff 0x266c2132
0x16b: V78 = 0x100000000000000000000000000000000000000000000000000000000
0x189: V79 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x266c2132
0x18b: M[V75] = 0x266c213200000000000000000000000000000000000000000000000000000000
0x18c: V80 = 0x4
0x18e: V81 = ADD 0x4 V75
0x18f: V82 = 0x20
0x191: V83 = 0x40
0x193: V84 = M[0x40]
0x196: V85 = SUB V81 V84
0x198: V86 = 0x0
0x19c: V87 = EXTCODESIZE V72
0x19d: V88 = ISZERO V87
0x19e: V89 = ISZERO V88
0x19f: V90 = 0x1a7
0x1a2: JUMPI 0x1a7 V89
---
Entry stack: [V11, 0x4e, 0x0, V28, 0x4a5db3b5, V32, V47]
Stack pops: 4
Stack additions: [V72, 0x266c2132, V81, 0x20, V84, V85, V84, 0x0, V72]
Exit stack: [V11, 0x4e, 0x0, V72, 0x266c2132, V81, 0x20, V84, V85, V84, 0x0, V72]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x11e]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V91 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e, 0x0, V72, 0x266c2132, V81, 0x20, V84, V85, V84, 0x0, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e, 0x0, V72, 0x266c2132, V81, 0x20, V84, V85, V84, 0x0, V72]

================================

Block 0x1a7
[0x1a7:0x1af]
---
Predecessors: [0x11e]
Successors: [0x1b0, 0x1b4]
---
0x1a7 JUMPDEST
0x1a8 GAS
0x1a9 CALL
0x1aa ISZERO
0x1ab ISZERO
0x1ac PUSH2 0x1b4
0x1af JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V92 = GAS
0x1a9: V93 = CALL V92 V72 0x0 V84 V85 V84 0x20
0x1aa: V94 = ISZERO V93
0x1ab: V95 = ISZERO V94
0x1ac: V96 = 0x1b4
0x1af: JUMPI 0x1b4 V95
---
Entry stack: [V11, 0x4e, 0x0, V72, 0x266c2132, V81, 0x20, V84, V85, V84, 0x0, V72]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x4e, 0x0, V72, 0x266c2132, V81]

================================

Block 0x1b0
[0x1b0:0x1b3]
---
Predecessors: [0x1a7]
Successors: []
---
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 REVERT
---
0x1b0: V97 = 0x0
0x1b3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e, 0x0, V72, 0x266c2132, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e, 0x0, V72, 0x266c2132, V81]

================================

Block 0x1b4
[0x1b4:0x24c]
---
Predecessors: [0x1a7]
Successors: [0x24d, 0x251]
---
0x1b4 JUMPDEST
0x1b5 POP
0x1b6 POP
0x1b7 POP
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb DUP1
0x1bc MLOAD
0x1bd SWAP1
0x1be POP
0x1bf SWAP1
0x1c0 POP
0x1c1 PUSH1 0x1
0x1c3 PUSH1 0x0
0x1c5 SWAP1
0x1c6 SLOAD
0x1c7 SWAP1
0x1c8 PUSH2 0x100
0x1cb EXP
0x1cc SWAP1
0x1cd DIV
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa PUSH4 0x7f09ad64
0x1ff PUSH1 0x1
0x201 DUP4
0x202 PUSH1 0x40
0x204 MLOAD
0x205 DUP4
0x206 PUSH4 0xffffffff
0x20b AND
0x20c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x22a MUL
0x22b DUP2
0x22c MSTORE
0x22d PUSH1 0x4
0x22f ADD
0x230 DUP1
0x231 DUP3
0x232 DUP2
0x233 MSTORE
0x234 PUSH1 0x20
0x236 ADD
0x237 SWAP2
0x238 POP
0x239 POP
0x23a PUSH1 0x0
0x23c PUSH1 0x40
0x23e MLOAD
0x23f DUP1
0x240 DUP4
0x241 SUB
0x242 DUP2
0x243 DUP6
0x244 DUP9
0x245 DUP1
0x246 EXTCODESIZE
0x247 ISZERO
0x248 ISZERO
0x249 PUSH2 0x251
0x24c JUMPI
---
0x1b4: JUMPDEST 
0x1b8: V98 = 0x40
0x1ba: V99 = M[0x40]
0x1bc: V100 = M[V99]
0x1c1: V101 = 0x1
0x1c3: V102 = 0x0
0x1c6: V103 = S[0x1]
0x1c8: V104 = 0x100
0x1cb: V105 = EXP 0x100 0x0
0x1cd: V106 = DIV V103 0x1
0x1ce: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1e4: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1fa: V111 = 0x7f09ad64
0x1ff: V112 = 0x1
0x202: V113 = 0x40
0x204: V114 = M[0x40]
0x206: V115 = 0xffffffff
0x20b: V116 = AND 0xffffffff 0x7f09ad64
0x20c: V117 = 0x100000000000000000000000000000000000000000000000000000000
0x22a: V118 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7f09ad64
0x22c: M[V114] = 0x7f09ad6400000000000000000000000000000000000000000000000000000000
0x22d: V119 = 0x4
0x22f: V120 = ADD 0x4 V114
0x233: M[V120] = V100
0x234: V121 = 0x20
0x236: V122 = ADD 0x20 V120
0x23a: V123 = 0x0
0x23c: V124 = 0x40
0x23e: V125 = M[0x40]
0x241: V126 = SUB V122 V125
0x246: V127 = EXTCODESIZE V110
0x247: V128 = ISZERO V127
0x248: V129 = ISZERO V128
0x249: V130 = 0x251
0x24c: JUMPI 0x251 V129
---
Entry stack: [V11, 0x4e, 0x0, V72, 0x266c2132, V81]
Stack pops: 4
Stack additions: [V100, V110, 0x7f09ad64, 0x1, V122, 0x0, V125, V126, V125, 0x1, V110]
Exit stack: [V11, 0x4e, V100, V110, 0x7f09ad64, 0x1, V122, 0x0, V125, V126, V125, 0x1, V110]

================================

Block 0x24d
[0x24d:0x250]
---
Predecessors: [0x1b4]
Successors: []
---
0x24d PUSH1 0x0
0x24f DUP1
0x250 REVERT
---
0x24d: V131 = 0x0
0x250: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e, V100, V110, 0x7f09ad64, 0x1, V122, 0x0, V125, V126, V125, 0x1, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e, V100, V110, 0x7f09ad64, 0x1, V122, 0x0, V125, V126, V125, 0x1, V110]

================================

Block 0x251
[0x251:0x259]
---
Predecessors: [0x1b4]
Successors: [0x25a, 0x25e]
---
0x251 JUMPDEST
0x252 GAS
0x253 CALL
0x254 ISZERO
0x255 ISZERO
0x256 PUSH2 0x25e
0x259 JUMPI
---
0x251: JUMPDEST 
0x252: V132 = GAS
0x253: V133 = CALL V132 V110 0x1 V125 V126 V125 0x0
0x254: V134 = ISZERO V133
0x255: V135 = ISZERO V134
0x256: V136 = 0x25e
0x259: JUMPI 0x25e V135
---
Entry stack: [V11, 0x4e, V100, V110, 0x7f09ad64, 0x1, V122, 0x0, V125, V126, V125, 0x1, V110]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x4e, V100, V110, 0x7f09ad64, 0x1, V122]

================================

Block 0x25a
[0x25a:0x25d]
---
Predecessors: [0x251]
Successors: []
---
0x25a PUSH1 0x0
0x25c DUP1
0x25d REVERT
---
0x25a: V137 = 0x0
0x25d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e, V100, V110, 0x7f09ad64, 0x1, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e, V100, V110, 0x7f09ad64, 0x1, V122]

================================

Block 0x25e
[0x25e:0x2d6]
---
Predecessors: [0x251]
Successors: [0x2d7, 0x2db]
---
0x25e JUMPDEST
0x25f POP
0x260 POP
0x261 POP
0x262 POP
0x263 PUSH1 0x2
0x265 PUSH1 0x0
0x267 SWAP1
0x268 SLOAD
0x269 SWAP1
0x26a PUSH2 0x100
0x26d EXP
0x26e SWAP1
0x26f DIV
0x270 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x285 AND
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b AND
0x29c PUSH2 0x8fc
0x29f ADDRESS
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 BALANCE
0x2b7 SWAP1
0x2b8 DUP2
0x2b9 ISZERO
0x2ba MUL
0x2bb SWAP1
0x2bc PUSH1 0x40
0x2be MLOAD
0x2bf PUSH1 0x0
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP1
0x2c5 DUP4
0x2c6 SUB
0x2c7 DUP2
0x2c8 DUP6
0x2c9 DUP9
0x2ca DUP9
0x2cb CALL
0x2cc SWAP4
0x2cd POP
0x2ce POP
0x2cf POP
0x2d0 POP
0x2d1 ISZERO
0x2d2 ISZERO
0x2d3 PUSH2 0x2db
0x2d6 JUMPI
---
0x25e: JUMPDEST 
0x263: V138 = 0x2
0x265: V139 = 0x0
0x268: V140 = S[0x2]
0x26a: V141 = 0x100
0x26d: V142 = EXP 0x100 0x0
0x26f: V143 = DIV V140 0x1
0x270: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x285: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x286: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x29c: V148 = 0x8fc
0x29f: V149 = ADDRESS
0x2a0: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2b6: V152 = BALANCE V151
0x2b9: V153 = ISZERO V152
0x2ba: V154 = MUL V153 0x8fc
0x2bc: V155 = 0x40
0x2be: V156 = M[0x40]
0x2bf: V157 = 0x0
0x2c1: V158 = 0x40
0x2c3: V159 = M[0x40]
0x2c6: V160 = SUB V156 V159
0x2cb: V161 = CALL V154 V147 V152 V159 V160 V159 0x0
0x2d1: V162 = ISZERO V161
0x2d2: V163 = ISZERO V162
0x2d3: V164 = 0x2db
0x2d6: JUMPI 0x2db V163
---
Entry stack: [V11, 0x4e, V100, V110, 0x7f09ad64, 0x1, V122]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x4e, V100]

================================

Block 0x2d7
[0x2d7:0x2da]
---
Predecessors: [0x25e]
Successors: []
---
0x2d7 PUSH1 0x0
0x2d9 DUP1
0x2da REVERT
---
0x2d7: V165 = 0x0
0x2da: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e, V100]

================================

Block 0x2db
[0x2db:0x2dd]
---
Predecessors: [0x25e]
Successors: [0x4e]
---
0x2db JUMPDEST
0x2dc POP
0x2dd JUMP
---
0x2db: JUMPDEST 
0x2dd: JUMP 0x4e
---
Entry stack: [V11, 0x4e, V100]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2de
[0x2de:0x318]
---
Predecessors: []
Successors: []
---
0x2de STOP
0x2df LOG1
0x2e0 PUSH6 0x627a7a723058
0x2e7 SHA3
0x2e8 REVERT
0x2e9 MISSING 0xda
0x2ea MISSING 0x5c
0x2eb MISSING 0x5d
0x2ec DUP15
0x2ed MISSING 0xb9
0x2ee MISSING 0xfb
0x2ef CODECOPY
0x2f0 MISSING 0xa8
0x2f1 CALLCODE
0x2f2 STATICCALL
0x2f3 MISSING 0xd8
0x2f4 BYTE
0x2f5 SMOD
0x2f6 SWAP7
0x2f7 POP
0x2f8 MISSING 0x2d
0x2f9 MISSING 0x4c
0x2fa EXP
0x2fb CALLDATALOAD
0x2fc MISSING 0xe0
0x2fd SWAP12
0x2fe SAR
0x2ff PUSH4 0x923c3b2c
0x304 CALLER
0x305 PUSH19 0x68000029
---
0x2de: STOP 
0x2df: LOG S0 S1 S2
0x2e0: V166 = 0x627a7a723058
0x2e7: V167 = SHA3 0x627a7a723058 S3
0x2e8: REVERT V167 S4
0x2e9: MISSING 0xda
0x2ea: MISSING 0x5c
0x2eb: MISSING 0x5d
0x2ed: MISSING 0xb9
0x2ee: MISSING 0xfb
0x2ef: CODECOPY S0 S1 S2
0x2f0: MISSING 0xa8
0x2f1: V168 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x2f2: V169 = STATICCALL V168 S7 S8 S9 S10 S11
0x2f3: MISSING 0xd8
0x2f4: V170 = BYTE S0 S1
0x2f5: V171 = SMOD V170 S2
0x2f8: MISSING 0x2d
0x2f9: MISSING 0x4c
0x2fa: V172 = EXP S0 S1
0x2fb: V173 = CALLDATALOAD V172
0x2fc: MISSING 0xe0
0x2fe: V174 = SAR S12 S1
0x2ff: V175 = 0x923c3b2c
0x304: V176 = CALLER
0x305: V177 = 0x68000029
---
Entry stack: []
Stack pops: 0
Stack additions: [S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V169, S3, S4, S5, S6, S7, S8, V171, V173, 0x68000029, V176, 0x923c3b2c, V174, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x9890220b
Entry block: 0x46
Exit block: 0x4e
Body: 0x46, 0x4e, 0x50, 0x10d, 0x111, 0x11a, 0x11e, 0x1a3, 0x1a7, 0x1b0, 0x1b4, 0x24d, 0x251, 0x25a, 0x25e, 0x2d7, 0x2db

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

