Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x3b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x3b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3b
0xc: JUMPI 0x3b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3a]
---
Predecessors: [0x0]
Successors: [0x3b, 0x138]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 DUP1
0x31 PUSH4 0x3ccfd60b
0x36 EQ
0x37 PUSH2 0x138
0x3a JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x31: V10 = 0x3ccfd60b
0x36: V11 = EQ 0x3ccfd60b V9
0x37: V12 = 0x138
0x3a: JUMPI 0x138 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3b
[0x3b:0x60]
---
Predecessors: [0x0, 0xd]
Successors: [0x61, 0x10f]
---
0x3b JUMPDEST
0x3c PUSH1 0x0
0x3e ADDRESS
0x3f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54 AND
0x55 BALANCE
0x56 SWAP1
0x57 POP
0x58 PUSH1 0x0
0x5a CALLVALUE
0x5b EQ
0x5c ISZERO
0x5d PUSH2 0x10f
0x60 JUMPI
---
0x3b: JUMPDEST 
0x3c: V13 = 0x0
0x3e: V14 = ADDRESS
0x3f: V15 = 0xffffffffffffffffffffffffffffffffffffffff
0x54: V16 = AND 0xffffffffffffffffffffffffffffffffffffffff V14
0x55: V17 = BALANCE V16
0x58: V18 = 0x0
0x5a: V19 = CALLVALUE
0x5b: V20 = EQ V19 0x0
0x5c: V21 = ISZERO V20
0x5d: V22 = 0x10f
0x60: JUMPI 0x10f V21
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V17]
Exit stack: [V9, V17]

================================

Block 0x61
[0x61:0xe4]
---
Predecessors: [0x3b]
Successors: [0xe5, 0x106]
---
0x61 PUSH1 0x1
0x63 PUSH1 0x0
0x65 SWAP1
0x66 SLOAD
0x67 SWAP1
0x68 PUSH2 0x100
0x6b EXP
0x6c SWAP1
0x6d DIV
0x6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83 AND
0x84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99 AND
0x9a ADDRESS
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 BALANCE
0xb2 PUSH1 0x0
0xb4 CALLDATASIZE
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 DUP1
0xb9 DUP4
0xba DUP4
0xbb DUP1
0xbc DUP3
0xbd DUP5
0xbe CALLDATACOPY
0xbf DUP1
0xc0 DUP4
0xc1 ADD
0xc2 SWAP3
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 SWAP3
0xc7 POP
0xc8 POP
0xc9 POP
0xca PUSH1 0x0
0xcc PUSH1 0x40
0xce MLOAD
0xcf DUP1
0xd0 DUP4
0xd1 SUB
0xd2 DUP2
0xd3 DUP6
0xd4 DUP8
0xd5 GAS
0xd6 CALL
0xd7 SWAP3
0xd8 POP
0xd9 POP
0xda POP
0xdb RETURNDATASIZE
0xdc DUP1
0xdd PUSH1 0x0
0xdf DUP2
0xe0 EQ
0xe1 PUSH2 0x106
0xe4 JUMPI
---
0x61: V23 = 0x1
0x63: V24 = 0x0
0x66: V25 = S[0x1]
0x68: V26 = 0x100
0x6b: V27 = EXP 0x100 0x0
0x6d: V28 = DIV V25 0x1
0x6e: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x83: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x84: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x99: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x9a: V33 = ADDRESS
0x9b: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xb1: V36 = BALANCE V35
0xb2: V37 = 0x0
0xb4: V38 = CALLDATASIZE
0xb5: V39 = 0x40
0xb7: V40 = M[0x40]
0xbe: CALLDATACOPY V40 0x0 V38
0xc1: V41 = ADD V40 V38
0xca: V42 = 0x0
0xcc: V43 = 0x40
0xce: V44 = M[0x40]
0xd1: V45 = SUB V41 V44
0xd5: V46 = GAS
0xd6: V47 = CALL V46 V32 V36 V44 V45 V44 0x0
0xdb: V48 = RETURNDATASIZE
0xdd: V49 = 0x0
0xe0: V50 = EQ V48 0x0
0xe1: V51 = 0x106
0xe4: JUMPI 0x106 V50
---
Entry stack: [V9, V17]
Stack pops: 0
Stack additions: [V47, V48, V48]
Exit stack: [V9, V17, V47, V48, V48]

================================

Block 0xe5
[0xe5:0x105]
---
Predecessors: [0x61]
Successors: [0x10b]
---
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 SWAP2
0xe9 POP
0xea PUSH1 0x1f
0xec NOT
0xed PUSH1 0x3f
0xef RETURNDATASIZE
0xf0 ADD
0xf1 AND
0xf2 DUP3
0xf3 ADD
0xf4 PUSH1 0x40
0xf6 MSTORE
0xf7 RETURNDATASIZE
0xf8 DUP3
0xf9 MSTORE
0xfa RETURNDATASIZE
0xfb PUSH1 0x0
0xfd PUSH1 0x20
0xff DUP5
0x100 ADD
0x101 RETURNDATACOPY
0x102 PUSH2 0x10b
0x105 JUMP
---
0xe5: V52 = 0x40
0xe7: V53 = M[0x40]
0xea: V54 = 0x1f
0xec: V55 = NOT 0x1f
0xed: V56 = 0x3f
0xef: V57 = RETURNDATASIZE
0xf0: V58 = ADD V57 0x3f
0xf1: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xf3: V60 = ADD V53 V59
0xf4: V61 = 0x40
0xf6: M[0x40] = V60
0xf7: V62 = RETURNDATASIZE
0xf9: M[V53] = V62
0xfa: V63 = RETURNDATASIZE
0xfb: V64 = 0x0
0xfd: V65 = 0x20
0x100: V66 = ADD V53 0x20
0x101: RETURNDATACOPY V66 0x0 V63
0x102: V67 = 0x10b
0x105: JUMP 0x10b
---
Entry stack: [V9, V17, V47, V48, V48]
Stack pops: 2
Stack additions: [V53, S0]
Exit stack: [V9, V17, V47, V53, V48]

================================

Block 0x106
[0x106:0x10a]
---
Predecessors: [0x61]
Successors: [0x10b]
---
0x106 JUMPDEST
0x107 PUSH1 0x60
0x109 SWAP2
0x10a POP
---
0x106: JUMPDEST 
0x107: V68 = 0x60
---
Entry stack: [V9, V17, V47, V48, V48]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, V17, V47, 0x60, V48]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0xe5, 0x106]
Successors: [0x10f]
---
0x10b JUMPDEST
0x10c POP
0x10d POP
0x10e POP
---
0x10b: JUMPDEST 
---
Entry stack: [V9, V17, V47, S1, V48]
Stack pops: 3
Stack additions: []
Exit stack: [V9, V17]

================================

Block 0x10f
[0x10f:0x130]
---
Predecessors: [0x3b, 0x10b]
Successors: [0x131, 0x135]
---
0x10f JUMPDEST
0x110 DUP1
0x111 ADDRESS
0x112 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x127 AND
0x128 BALANCE
0x129 LT
0x12a ISZERO
0x12b ISZERO
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0x10f: JUMPDEST 
0x111: V69 = ADDRESS
0x112: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x127: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x128: V72 = BALANCE V71
0x129: V73 = LT V72 V17
0x12a: V74 = ISZERO V73
0x12b: V75 = ISZERO V74
0x12c: V76 = ISZERO V75
0x12d: V77 = 0x135
0x130: JUMPI 0x135 V76
---
Entry stack: [V9, V17]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, V17]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x10f]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V78 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V9, V17]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V17]

================================

Block 0x135
[0x135:0x137]
---
Predecessors: [0x10f]
Successors: []
---
0x135 JUMPDEST
0x136 POP
0x137 STOP
---
0x135: JUMPDEST 
0x137: STOP 
---
Entry stack: [V9, V17]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0xd]
Successors: [0x140, 0x144]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a DUP1
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x138: JUMPDEST 
0x139: V79 = CALLVALUE
0x13b: V80 = ISZERO V79
0x13c: V81 = 0x144
0x13f: JUMPI 0x144 V80
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V9, V79]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x138]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V82 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V9, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V79]

================================

Block 0x144
[0x144:0x14c]
---
Predecessors: [0x138]
Successors: [0x14f]
---
0x144 JUMPDEST
0x145 POP
0x146 PUSH2 0x14d
0x149 PUSH2 0x14f
0x14c JUMP
---
0x144: JUMPDEST 
0x146: V83 = 0x14d
0x149: V84 = 0x14f
0x14c: JUMP 0x14f
---
Entry stack: [V9, V79]
Stack pops: 1
Stack additions: [0x14d]
Exit stack: [V9, 0x14d]

================================

Block 0x14d
[0x14d:0x14e]
---
Predecessors: [0x207]
Successors: []
---
0x14d JUMPDEST
0x14e STOP
---
0x14d: JUMPDEST 
0x14e: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x14f
[0x14f:0x1a5]
---
Predecessors: [0x144]
Successors: [0x1a6, 0x1aa]
---
0x14f JUMPDEST
0x150 PUSH1 0x0
0x152 DUP1
0x153 SWAP1
0x154 SLOAD
0x155 SWAP1
0x156 PUSH2 0x100
0x159 EXP
0x15a SWAP1
0x15b DIV
0x15c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171 AND
0x172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187 AND
0x188 CALLER
0x189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19e AND
0x19f EQ
0x1a0 ISZERO
0x1a1 ISZERO
0x1a2 PUSH2 0x1aa
0x1a5 JUMPI
---
0x14f: JUMPDEST 
0x150: V85 = 0x0
0x154: V86 = S[0x0]
0x156: V87 = 0x100
0x159: V88 = EXP 0x100 0x0
0x15b: V89 = DIV V86 0x1
0x15c: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x171: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x172: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x187: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x188: V94 = CALLER
0x189: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x19f: V97 = EQ V96 V93
0x1a0: V98 = ISZERO V97
0x1a1: V99 = ISZERO V98
0x1a2: V100 = 0x1aa
0x1a5: JUMPI 0x1aa V99
---
Entry stack: [V9, 0x14d]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x14d]

================================

Block 0x1a6
[0x1a6:0x1a9]
---
Predecessors: [0x14f]
Successors: []
---
0x1a6 PUSH1 0x0
0x1a8 DUP1
0x1a9 REVERT
---
0x1a6: V101 = 0x0
0x1a9: REVERT 0x0 0x0
---
Entry stack: [V9, 0x14d]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x14d]

================================

Block 0x1aa
[0x1aa:0x1fd]
---
Predecessors: [0x14f]
Successors: [0x1fe, 0x207]
---
0x1aa JUMPDEST
0x1ab CALLER
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH2 0x8fc
0x1c5 ADDRESS
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc BALANCE
0x1dd SWAP1
0x1de DUP2
0x1df ISZERO
0x1e0 MUL
0x1e1 SWAP1
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 PUSH1 0x0
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea DUP1
0x1eb DUP4
0x1ec SUB
0x1ed DUP2
0x1ee DUP6
0x1ef DUP9
0x1f0 DUP9
0x1f1 CALL
0x1f2 SWAP4
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 ISZERO
0x1f8 DUP1
0x1f9 ISZERO
0x1fa PUSH2 0x207
0x1fd JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V102 = CALLER
0x1ac: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1c2: V105 = 0x8fc
0x1c5: V106 = ADDRESS
0x1c6: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1dc: V109 = BALANCE V108
0x1df: V110 = ISZERO V109
0x1e0: V111 = MUL V110 0x8fc
0x1e2: V112 = 0x40
0x1e4: V113 = M[0x40]
0x1e5: V114 = 0x0
0x1e7: V115 = 0x40
0x1e9: V116 = M[0x40]
0x1ec: V117 = SUB V113 V116
0x1f1: V118 = CALL V111 V104 V109 V116 V117 V116 0x0
0x1f7: V119 = ISZERO V118
0x1f9: V120 = ISZERO V119
0x1fa: V121 = 0x207
0x1fd: JUMPI 0x207 V120
---
Entry stack: [V9, 0x14d]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V9, 0x14d, V119]

================================

Block 0x1fe
[0x1fe:0x206]
---
Predecessors: [0x1aa]
Successors: []
---
0x1fe RETURNDATASIZE
0x1ff PUSH1 0x0
0x201 DUP1
0x202 RETURNDATACOPY
0x203 RETURNDATASIZE
0x204 PUSH1 0x0
0x206 REVERT
---
0x1fe: V122 = RETURNDATASIZE
0x1ff: V123 = 0x0
0x202: RETURNDATACOPY 0x0 0x0 V122
0x203: V124 = RETURNDATASIZE
0x204: V125 = 0x0
0x206: REVERT 0x0 V124
---
Entry stack: [V9, 0x14d, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x14d, V119]

================================

Block 0x207
[0x207:0x209]
---
Predecessors: [0x1aa]
Successors: [0x14d]
---
0x207 JUMPDEST
0x208 POP
0x209 JUMP
---
0x207: JUMPDEST 
0x209: JUMP 0x14d
---
Entry stack: [V9, 0x14d, V119]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x20a
[0x20a:0x235]
---
Predecessors: []
Successors: []
---
0x20a INVALID
0x20b LOG1
0x20c PUSH6 0x627a7a723058
0x213 SHA3
0x214 MISSING 0xe3
0x215 SLT
0x216 PUSH10 0x9cacc1d061a68ef7f354
0x221 PUSH19 0xdfb5704c8889983ad1ece5185b102472188800
0x235 MISSING 0x29
---
0x20a: INVALID 
0x20b: LOG S0 S1 S2
0x20c: V126 = 0x627a7a723058
0x213: V127 = SHA3 0x627a7a723058 S3
0x214: MISSING 0xe3
0x215: V128 = SLT S0 S1
0x216: V129 = 0x9cacc1d061a68ef7f354
0x221: V130 = 0xdfb5704c8889983ad1ece5185b102472188800
0x235: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V127, 0xdfb5704c8889983ad1ece5185b102472188800, 0x9cacc1d061a68ef7f354, V128]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x138
Exit block: 0x14d
Body: 0x138, 0x140, 0x144, 0x14d, 0x14f, 0x1a6, 0x1aa, 0x1fe, 0x207

Function 1:
Public fallback function
Entry block: 0x3b
Exit block: 0x131
Body: 0x3b, 0x61, 0xe5, 0x106, 0x10b, 0x10f, 0x131, 0x135

