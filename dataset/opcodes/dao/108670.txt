Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xee]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x146901db
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xee
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x146901db
0x20: V14 = EQ V12 0x146901db
0x21: V15 = 0xee
0x24: JUMPI 0xee V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x100]
---
0x25 DUP1
0x26 PUSH4 0x1e0018d6
0x2b EQ
0x2c PUSH2 0x100
0x2f JUMPI
---
0x26: V16 = 0x1e0018d6
0x2b: V17 = EQ 0x1e0018d6 V12
0x2c: V18 = 0x100
0x2f: JUMPI 0x100 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x12c]
---
0x30 DUP1
0x31 PUSH4 0x3ccfd60b
0x36 EQ
0x37 PUSH2 0x12c
0x3a JUMPI
---
0x31: V19 = 0x3ccfd60b
0x36: V20 = EQ 0x3ccfd60b V12
0x37: V21 = 0x12c
0x3a: JUMPI 0x12c V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x13e]
---
0x3b DUP1
0x3c PUSH4 0x64ae4451
0x41 EQ
0x42 PUSH2 0x13e
0x45 JUMPI
---
0x3c: V22 = 0x64ae4451
0x41: V23 = EQ 0x64ae4451 V12
0x42: V24 = 0x13e
0x45: JUMPI 0x13e V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x168]
---
0x46 DUP1
0x47 PUSH4 0x73ad468a
0x4c EQ
0x4d PUSH2 0x168
0x50 JUMPI
---
0x47: V25 = 0x73ad468a
0x4c: V26 = EQ 0x73ad468a V12
0x4d: V27 = 0x168
0x50: JUMPI 0x168 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x18a]
---
0x51 DUP1
0x52 PUSH4 0x773041ce
0x57 EQ
0x58 PUSH2 0x18a
0x5b JUMPI
---
0x52: V28 = 0x773041ce
0x57: V29 = EQ 0x773041ce V12
0x58: V30 = 0x18a
0x5b: JUMPI 0x18a V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a8]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x1a8
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x1a8
0x66: JUMPI 0x1a8 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d4]
---
0x67 DUP1
0x68 PUSH4 0xc19d93fb
0x6d EQ
0x6e PUSH2 0x1d4
0x71 JUMPI
---
0x68: V34 = 0xc19d93fb
0x6d: V35 = EQ 0xc19d93fb V12
0x6e: V36 = 0x1d4
0x71: JUMPI 0x1d4 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x208]
---
0x72 DUP1
0x73 PUSH4 0xec8ac4d8
0x78 EQ
0x79 PUSH2 0x208
0x7c JUMPI
---
0x73: V37 = 0xec8ac4d8
0x78: V38 = EQ 0xec8ac4d8 V12
0x79: V39 = 0x208
0x7c: JUMPI 0x208 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x226]
---
0x7d DUP1
0x7e PUSH4 0xf2fde38b
0x83 EQ
0x84 PUSH2 0x226
0x87 JUMPI
---
0x7e: V40 = 0xf2fde38b
0x83: V41 = EQ 0xf2fde38b V12
0x84: V42 = 0x226
0x87: JUMPI 0x226 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x0, 0x7d]
Successors: [0x8c]
---
0x88 JUMPDEST
0x89 PUSH2 0xec
---
0x88: JUMPDEST 
0x89: V43 = 0xec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xec]
Exit stack: [V12, 0xec]

================================

Block 0x8c
[0x8c:0xa0]
---
Predecessors: [0x88]
Successors: [0xa1, 0xa6]
---
0x8c JUMPDEST
0x8d PUSH1 0x2
0x8f SLOAD
0x90 ADDRESS
0x91 PUSH1 0x1
0x93 PUSH1 0xa0
0x95 PUSH1 0x2
0x97 EXP
0x98 SUB
0x99 AND
0x9a BALANCE
0x9b GT
0x9c ISZERO
0x9d PUSH2 0xa6
0xa0 JUMPI
---
0x8c: JUMPDEST 
0x8d: V44 = 0x2
0x8f: V45 = S[0x2]
0x90: V46 = ADDRESS
0x91: V47 = 0x1
0x93: V48 = 0xa0
0x95: V49 = 0x2
0x97: V50 = EXP 0x2 0xa0
0x98: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0x9a: V53 = BALANCE V52
0x9b: V54 = GT V53 V45
0x9c: V55 = ISZERO V54
0x9d: V56 = 0xa6
0xa0: JUMPI 0xa6 V55
---
Entry stack: [V12, 0xec]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec]

================================

Block 0xa1
[0xa1:0xa5]
---
Predecessors: [0x8c]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 PUSH1 0x0
0xa5 REVERT
---
0xa1: V57 = 0x0
0xa3: V58 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec]

================================

Block 0xa6
[0xa6:0xe9]
---
Predecessors: [0x8c]
Successors: [0xea]
---
0xa6 JUMPDEST
0xa7 PUSH1 0x40
0xa9 DUP1
0xaa MLOAD
0xab CALLVALUE
0xac DUP2
0xad MSTORE
0xae PUSH1 0x1
0xb0 PUSH1 0xa0
0xb2 PUSH1 0x2
0xb4 EXP
0xb5 SUB
0xb6 CALLER
0xb7 AND
0xb8 PUSH1 0x20
0xba DUP3
0xbb ADD
0xbc MSTORE
0xbd DUP2
0xbe MLOAD
0xbf PUSH32 0x33e36c5037a4834b94e805648de1a58578badec436cfbd0679b82ca91603f40d
0xe0 SWAP3
0xe1 SWAP2
0xe2 DUP2
0xe3 SWAP1
0xe4 SUB
0xe5 SWAP1
0xe6 SWAP2
0xe7 ADD
0xe8 SWAP1
0xe9 LOG1
---
0xa6: JUMPDEST 
0xa7: V59 = 0x40
0xaa: V60 = M[0x40]
0xab: V61 = CALLVALUE
0xad: M[V60] = V61
0xae: V62 = 0x1
0xb0: V63 = 0xa0
0xb2: V64 = 0x2
0xb4: V65 = EXP 0x2 0xa0
0xb5: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6: V67 = CALLER
0xb7: V68 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V69 = 0x20
0xbb: V70 = ADD V60 0x20
0xbc: M[V70] = V68
0xbe: V71 = M[0x40]
0xbf: V72 = 0x33e36c5037a4834b94e805648de1a58578badec436cfbd0679b82ca91603f40d
0xe4: V73 = SUB V60 V71
0xe7: V74 = ADD 0x40 V73
0xe9: LOG V71 V74 0x33e36c5037a4834b94e805648de1a58578badec436cfbd0679b82ca91603f40d
---
Entry stack: [V12, 0xec]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec]

================================

Block 0xea
[0xea:0xeb]
---
Predecessors: [0xa6]
Successors: [0xec]
---
0xea JUMPDEST
0xeb JUMP
---
0xea: JUMPDEST 
0xeb: JUMP 0xec
---
Entry stack: [V12, 0xec]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xec
[0xec:0xed]
---
Predecessors: [0xea, 0x2a0, 0x362, 0x414, 0x50f, 0x55c]
Successors: []
---
0xec JUMPDEST
0xed STOP
---
0xec: JUMPDEST 
0xed: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0xb]
Successors: [0xf5, 0xf6]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 ISZERO
0xf1 PUSH2 0xf6
0xf4 JUMPI
---
0xee: JUMPDEST 
0xef: V75 = CALLVALUE
0xf0: V76 = ISZERO V75
0xf1: V77 = 0xf6
0xf4: JUMPI 0xf6 V76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf5
[0xf5:0xf5]
---
Predecessors: [0xee]
Successors: []
---
0xf5 INVALID
---
0xf5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0xee]
Successors: [0x244]
---
0xf6 JUMPDEST
0xf7 PUSH2 0xec
0xfa PUSH2 0x244
0xfd JUMP
---
0xf6: JUMPDEST 
0xf7: V78 = 0xec
0xfa: V79 = 0x244
0xfd: JUMP 0x244
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xec]
Exit stack: [V12, 0xec]

================================

Block 0xfe
[0xfe:0xff]
---
Predecessors: []
Successors: []
---
0xfe JUMPDEST
0xff STOP
---
0xfe: JUMPDEST 
0xff: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x25]
Successors: [0x107, 0x108]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x108
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V80 = CALLVALUE
0x102: V81 = ISZERO V80
0x103: V82 = 0x108
0x106: JUMPI 0x108 V81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x107
[0x107:0x107]
---
Predecessors: [0x100]
Successors: []
---
0x107 INVALID
---
0x107: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x108
[0x108:0x10f]
---
Predecessors: [0x100]
Successors: [0x2a2]
---
0x108 JUMPDEST
0x109 PUSH2 0x110
0x10c PUSH2 0x2a2
0x10f JUMP
---
0x108: JUMPDEST 
0x109: V83 = 0x110
0x10c: V84 = 0x2a2
0x10f: JUMP 0x2a2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x110]
Exit stack: [V12, 0x110]

================================

Block 0x110
[0x110:0x12b]
---
Predecessors: [0x2a2, 0x417]
Successors: []
---
0x110 JUMPDEST
0x111 PUSH1 0x40
0x113 DUP1
0x114 MLOAD
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d SWAP1
0x11e SWAP3
0x11f AND
0x120 DUP3
0x121 MSTORE
0x122 MLOAD
0x123 SWAP1
0x124 DUP2
0x125 SWAP1
0x126 SUB
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP1
0x12b RETURN
---
0x110: JUMPDEST 
0x111: V85 = 0x40
0x114: V86 = M[0x40]
0x115: V87 = 0x1
0x117: V88 = 0xa0
0x119: V89 = 0x2
0x11b: V90 = EXP 0x2 0xa0
0x11c: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11f: V92 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x121: M[V86] = V92
0x122: V93 = M[0x40]
0x126: V94 = SUB V86 V93
0x127: V95 = 0x20
0x129: V96 = ADD 0x20 V94
0x12b: RETURN V93 V96
---
Entry stack: [V12, 0x110, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x110]

================================

Block 0x12c
[0x12c:0x132]
---
Predecessors: [0x30]
Successors: [0x133, 0x134]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e ISZERO
0x12f PUSH2 0x134
0x132 JUMPI
---
0x12c: JUMPDEST 
0x12d: V97 = CALLVALUE
0x12e: V98 = ISZERO V97
0x12f: V99 = 0x134
0x132: JUMPI 0x134 V98
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x133
[0x133:0x133]
---
Predecessors: [0x12c]
Successors: []
---
0x133 INVALID
---
0x133: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x134
[0x134:0x13b]
---
Predecessors: [0x12c]
Successors: [0x2b1]
---
0x134 JUMPDEST
0x135 PUSH2 0xec
0x138 PUSH2 0x2b1
0x13b JUMP
---
0x134: JUMPDEST 
0x135: V100 = 0xec
0x138: V101 = 0x2b1
0x13b: JUMP 0x2b1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xec]
Exit stack: [V12, 0xec]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: []
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x3b]
Successors: [0x145, 0x146]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x146
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V102 = CALLVALUE
0x140: V103 = ISZERO V102
0x141: V104 = 0x146
0x144: JUMPI 0x146 V103
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x145
[0x145:0x145]
---
Predecessors: [0x13e]
Successors: []
---
0x145 INVALID
---
0x145: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x153]
---
Predecessors: [0x13e]
Successors: [0x365]
---
0x146 JUMPDEST
0x147 PUSH2 0x154
0x14a PUSH1 0xff
0x14c PUSH1 0x4
0x14e CALLDATALOAD
0x14f AND
0x150 PUSH2 0x365
0x153 JUMP
---
0x146: JUMPDEST 
0x147: V105 = 0x154
0x14a: V106 = 0xff
0x14c: V107 = 0x4
0x14e: V108 = CALLDATALOAD 0x4
0x14f: V109 = AND V108 0xff
0x150: V110 = 0x365
0x153: JUMP 0x365
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x154, V109]
Exit stack: [V12, 0x154, V109]

================================

Block 0x154
[0x154:0x167]
---
Predecessors: [0x388]
Successors: []
---
0x154 JUMPDEST
0x155 PUSH1 0x40
0x157 DUP1
0x158 MLOAD
0x159 SWAP2
0x15a ISZERO
0x15b ISZERO
0x15c DUP3
0x15d MSTORE
0x15e MLOAD
0x15f SWAP1
0x160 DUP2
0x161 SWAP1
0x162 SUB
0x163 PUSH1 0x20
0x165 ADD
0x166 SWAP1
0x167 RETURN
---
0x154: JUMPDEST 
0x155: V111 = 0x40
0x158: V112 = M[0x40]
0x15a: V113 = ISZERO V310
0x15b: V114 = ISZERO V113
0x15d: M[V112] = V114
0x15e: V115 = M[0x40]
0x162: V116 = SUB V112 V115
0x163: V117 = 0x20
0x165: V118 = ADD 0x20 V116
0x167: RETURN V115 V118
---
Entry stack: [V12, V310]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x46]
Successors: [0x16f, 0x170]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x170
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V119 = CALLVALUE
0x16a: V120 = ISZERO V119
0x16b: V121 = 0x170
0x16e: JUMPI 0x170 V120
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16f
[0x16f:0x16f]
---
Predecessors: [0x168]
Successors: []
---
0x16f INVALID
---
0x16f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x170
[0x170:0x177]
---
Predecessors: [0x168]
Successors: [0x38d]
---
0x170 JUMPDEST
0x171 PUSH2 0x178
0x174 PUSH2 0x38d
0x177 JUMP
---
0x170: JUMPDEST 
0x171: V122 = 0x178
0x174: V123 = 0x38d
0x177: JUMP 0x38d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V12, 0x178]

================================

Block 0x178
[0x178:0x189]
---
Predecessors: [0x38d]
Successors: []
---
0x178 JUMPDEST
0x179 PUSH1 0x40
0x17b DUP1
0x17c MLOAD
0x17d SWAP2
0x17e DUP3
0x17f MSTORE
0x180 MLOAD
0x181 SWAP1
0x182 DUP2
0x183 SWAP1
0x184 SUB
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP1
0x189 RETURN
---
0x178: JUMPDEST 
0x179: V124 = 0x40
0x17c: V125 = M[0x40]
0x17f: M[V125] = V312
0x180: V126 = M[0x40]
0x184: V127 = SUB V125 V126
0x185: V128 = 0x20
0x187: V129 = ADD 0x20 V127
0x189: RETURN V126 V129
---
Entry stack: [V12, 0x178, V312]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x178]

================================

Block 0x18a
[0x18a:0x190]
---
Predecessors: [0x51]
Successors: [0x191, 0x192]
---
0x18a JUMPDEST
0x18b CALLVALUE
0x18c ISZERO
0x18d PUSH2 0x192
0x190 JUMPI
---
0x18a: JUMPDEST 
0x18b: V130 = CALLVALUE
0x18c: V131 = ISZERO V130
0x18d: V132 = 0x192
0x190: JUMPI 0x192 V131
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x191
[0x191:0x191]
---
Predecessors: [0x18a]
Successors: []
---
0x191 INVALID
---
0x191: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x192
[0x192:0x1a5]
---
Predecessors: [0x18a]
Successors: [0x393]
---
0x192 JUMPDEST
0x193 PUSH2 0xec
0x196 PUSH1 0x1
0x198 PUSH1 0xa0
0x19a PUSH1 0x2
0x19c EXP
0x19d SUB
0x19e PUSH1 0x4
0x1a0 CALLDATALOAD
0x1a1 AND
0x1a2 PUSH2 0x393
0x1a5 JUMP
---
0x192: JUMPDEST 
0x193: V133 = 0xec
0x196: V134 = 0x1
0x198: V135 = 0xa0
0x19a: V136 = 0x2
0x19c: V137 = EXP 0x2 0xa0
0x19d: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19e: V139 = 0x4
0x1a0: V140 = CALLDATALOAD 0x4
0x1a1: V141 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x1a2: V142 = 0x393
0x1a5: JUMP 0x393
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xec, V141]
Exit stack: [V12, 0xec, V141]

================================

Block 0x1a6
[0x1a6:0x1a7]
---
Predecessors: []
Successors: []
---
0x1a6 JUMPDEST
0x1a7 STOP
---
0x1a6: JUMPDEST 
0x1a7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a8
[0x1a8:0x1ae]
---
Predecessors: [0x5c]
Successors: [0x1af, 0x1b0]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa ISZERO
0x1ab PUSH2 0x1b0
0x1ae JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V143 = CALLVALUE
0x1aa: V144 = ISZERO V143
0x1ab: V145 = 0x1b0
0x1ae: JUMPI 0x1b0 V144
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1af]
---
Predecessors: [0x1a8]
Successors: []
---
0x1af INVALID
---
0x1af: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1b7]
---
Predecessors: [0x1a8]
Successors: [0x417]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0x110
0x1b4 PUSH2 0x417
0x1b7 JUMP
---
0x1b0: JUMPDEST 
0x1b1: V146 = 0x110
0x1b4: V147 = 0x417
0x1b7: JUMP 0x417
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x110]
Exit stack: [V12, 0x110]

================================

Block 0x1b8
[0x1b8:0x1d3]
---
Predecessors: []
Successors: []
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x40
0x1bb DUP1
0x1bc MLOAD
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 SWAP1
0x1c6 SWAP3
0x1c7 AND
0x1c8 DUP3
0x1c9 MSTORE
0x1ca MLOAD
0x1cb SWAP1
0x1cc DUP2
0x1cd SWAP1
0x1ce SUB
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 SWAP1
0x1d3 RETURN
---
0x1b8: JUMPDEST 
0x1b9: V148 = 0x40
0x1bc: V149 = M[0x40]
0x1bd: V150 = 0x1
0x1bf: V151 = 0xa0
0x1c1: V152 = 0x2
0x1c3: V153 = EXP 0x2 0xa0
0x1c4: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c7: V155 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c9: M[V149] = V155
0x1ca: V156 = M[0x40]
0x1ce: V157 = SUB V149 V156
0x1cf: V158 = 0x20
0x1d1: V159 = ADD 0x20 V157
0x1d3: RETURN V156 V159
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d4
[0x1d4:0x1da]
---
Predecessors: [0x67]
Successors: [0x1db, 0x1dc]
---
0x1d4 JUMPDEST
0x1d5 CALLVALUE
0x1d6 ISZERO
0x1d7 PUSH2 0x1dc
0x1da JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V160 = CALLVALUE
0x1d6: V161 = ISZERO V160
0x1d7: V162 = 0x1dc
0x1da: JUMPI 0x1dc V161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1db
[0x1db:0x1db]
---
Predecessors: [0x1d4]
Successors: []
---
0x1db INVALID
---
0x1db: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x1d4]
Successors: [0x426]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x1e4
0x1e0 PUSH2 0x426
0x1e3 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V163 = 0x1e4
0x1e0: V164 = 0x426
0x1e3: JUMP 0x426
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e4]
Exit stack: [V12, 0x1e4]

================================

Block 0x1e4
[0x1e4:0x1f2]
---
Predecessors: [0x426]
Successors: [0x1f3, 0x1f4]
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 DUP3
0x1ea PUSH1 0x2
0x1ec DUP2
0x1ed GT
0x1ee ISZERO
0x1ef PUSH2 0x1f4
0x1f2 JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V165 = 0x40
0x1e7: V166 = M[0x40]
0x1ea: V167 = 0x2
0x1ed: V168 = GT V371 0x2
0x1ee: V169 = ISZERO V168
0x1ef: V170 = 0x1f4
0x1f2: JUMPI 0x1f4 V169
---
Entry stack: [V12, 0x1e4, V371]
Stack pops: 1
Stack additions: [S0, V166, V166, S0]
Exit stack: [V12, 0x1e4, V371, V166, V166, V371]

================================

Block 0x1f3
[0x1f3:0x1f3]
---
Predecessors: [0x1e4]
Successors: []
---
0x1f3 INVALID
---
0x1f3: INVALID 
---
Entry stack: [V12, 0x1e4, V371, V166, V166, V371]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e4, V371, V166, V166, V371]

================================

Block 0x1f4
[0x1f4:0x207]
---
Predecessors: [0x1e4]
Successors: []
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0xff
0x1f7 AND
0x1f8 DUP2
0x1f9 MSTORE
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP2
0x1fe POP
0x1ff POP
0x200 PUSH1 0x40
0x202 MLOAD
0x203 DUP1
0x204 SWAP2
0x205 SUB
0x206 SWAP1
0x207 RETURN
---
0x1f4: JUMPDEST 
0x1f5: V171 = 0xff
0x1f7: V172 = AND 0xff V371
0x1f9: M[V166] = V172
0x1fa: V173 = 0x20
0x1fc: V174 = ADD 0x20 V166
0x200: V175 = 0x40
0x202: V176 = M[0x40]
0x205: V177 = SUB V174 V176
0x207: RETURN V176 V177
---
Entry stack: [V12, 0x1e4, V371, V166, V166, V371]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x1e4]

================================

Block 0x208
[0x208:0x20e]
---
Predecessors: [0x72]
Successors: [0x20f, 0x210]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a ISZERO
0x20b PUSH2 0x210
0x20e JUMPI
---
0x208: JUMPDEST 
0x209: V178 = CALLVALUE
0x20a: V179 = ISZERO V178
0x20b: V180 = 0x210
0x20e: JUMPI 0x210 V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20f
[0x20f:0x20f]
---
Predecessors: [0x208]
Successors: []
---
0x20f INVALID
---
0x20f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x223]
---
Predecessors: [0x208]
Successors: [0x42f]
---
0x210 JUMPDEST
0x211 PUSH2 0xec
0x214 PUSH1 0x1
0x216 PUSH1 0xa0
0x218 PUSH1 0x2
0x21a EXP
0x21b SUB
0x21c PUSH1 0x4
0x21e CALLDATALOAD
0x21f AND
0x220 PUSH2 0x42f
0x223 JUMP
---
0x210: JUMPDEST 
0x211: V181 = 0xec
0x214: V182 = 0x1
0x216: V183 = 0xa0
0x218: V184 = 0x2
0x21a: V185 = EXP 0x2 0xa0
0x21b: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21c: V187 = 0x4
0x21e: V188 = CALLDATALOAD 0x4
0x21f: V189 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x220: V190 = 0x42f
0x223: JUMP 0x42f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xec, V189]
Exit stack: [V12, 0xec, V189]

================================

Block 0x224
[0x224:0x225]
---
Predecessors: []
Successors: []
---
0x224 JUMPDEST
0x225 STOP
---
0x224: JUMPDEST 
0x225: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x226
[0x226:0x22c]
---
Predecessors: [0x7d]
Successors: [0x22d, 0x22e]
---
0x226 JUMPDEST
0x227 CALLVALUE
0x228 ISZERO
0x229 PUSH2 0x22e
0x22c JUMPI
---
0x226: JUMPDEST 
0x227: V191 = CALLVALUE
0x228: V192 = ISZERO V191
0x229: V193 = 0x22e
0x22c: JUMPI 0x22e V192
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x22d]
---
Predecessors: [0x226]
Successors: []
---
0x22d INVALID
---
0x22d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22e
[0x22e:0x241]
---
Predecessors: [0x226]
Successors: [0x513]
---
0x22e JUMPDEST
0x22f PUSH2 0xec
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a PUSH1 0x4
0x23c CALLDATALOAD
0x23d AND
0x23e PUSH2 0x513
0x241 JUMP
---
0x22e: JUMPDEST 
0x22f: V194 = 0xec
0x232: V195 = 0x1
0x234: V196 = 0xa0
0x236: V197 = 0x2
0x238: V198 = EXP 0x2 0xa0
0x239: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V200 = 0x4
0x23c: V201 = CALLDATALOAD 0x4
0x23d: V202 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V203 = 0x513
0x241: JUMP 0x513
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xec, V202]
Exit stack: [V12, 0xec, V202]

================================

Block 0x242
[0x242:0x243]
---
Predecessors: []
Successors: []
---
0x242 JUMPDEST
0x243 STOP
---
0x242: JUMPDEST 
0x243: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x244
[0x244:0x25a]
---
Predecessors: [0xf6]
Successors: [0x25b, 0x260]
---
0x244 JUMPDEST
0x245 PUSH1 0x0
0x247 SLOAD
0x248 CALLER
0x249 PUSH1 0x1
0x24b PUSH1 0xa0
0x24d PUSH1 0x2
0x24f EXP
0x250 SUB
0x251 SWAP1
0x252 DUP2
0x253 AND
0x254 SWAP2
0x255 AND
0x256 EQ
0x257 PUSH2 0x260
0x25a JUMPI
---
0x244: JUMPDEST 
0x245: V204 = 0x0
0x247: V205 = S[0x0]
0x248: V206 = CALLER
0x249: V207 = 0x1
0x24b: V208 = 0xa0
0x24d: V209 = 0x2
0x24f: V210 = EXP 0x2 0xa0
0x250: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x253: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x255: V213 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x256: V214 = EQ V213 V212
0x257: V215 = 0x260
0x25a: JUMPI 0x260 V214
---
Entry stack: [V12, 0xec]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec]

================================

Block 0x25b
[0x25b:0x25f]
---
Predecessors: [0x244]
Successors: []
---
0x25b PUSH1 0x0
0x25d PUSH1 0x0
0x25f REVERT
---
0x25b: V216 = 0x0
0x25d: V217 = 0x0
0x25f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec]

================================

Block 0x260
[0x260:0x26f]
---
Predecessors: [0x244]
Successors: [0x270]
---
0x260 JUMPDEST
0x261 PUSH1 0x3
0x263 DUP1
0x264 SLOAD
0x265 PUSH1 0x2
0x267 SWAP2
0x268 SWAP1
0x269 PUSH1 0xff
0x26b NOT
0x26c AND
0x26d PUSH1 0x1
0x26f DUP4
---
0x260: JUMPDEST 
0x261: V218 = 0x3
0x264: V219 = S[0x3]
0x265: V220 = 0x2
0x269: V221 = 0xff
0x26b: V222 = NOT 0xff
0x26c: V223 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V219
0x26d: V224 = 0x1
---
Entry stack: [V12, 0xec]
Stack pops: 0
Stack additions: [0x2, 0x3, V223, 0x1, 0x2]
Exit stack: [V12, 0xec, 0x2, 0x3, V223, 0x1, 0x2]

================================

Block 0x270
[0x270:0x29e]
---
Predecessors: [0x260]
Successors: [0x29f]
---
0x270 JUMPDEST
0x271 MUL
0x272 OR
0x273 SWAP1
0x274 SSTORE
0x275 POP
0x276 PUSH1 0x40
0x278 MLOAD
0x279 PUSH32 0x1b0ba14d0d88ac936babe67c6ed402959bc2a548d8521436f4f27a29be3f619a
0x29a SWAP1
0x29b PUSH1 0x0
0x29d SWAP1
0x29e LOG1
---
0x270: JUMPDEST 
0x271: V225 = MUL 0x2 0x1
0x272: V226 = OR 0x2 V223
0x274: S[0x3] = V226
0x276: V227 = 0x40
0x278: V228 = M[0x40]
0x279: V229 = 0x1b0ba14d0d88ac936babe67c6ed402959bc2a548d8521436f4f27a29be3f619a
0x29b: V230 = 0x0
0x29e: LOG V228 0x0 0x1b0ba14d0d88ac936babe67c6ed402959bc2a548d8521436f4f27a29be3f619a
---
Entry stack: [V12, 0xec, 0x2, 0x3, V223, 0x1, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0xec]

================================

Block 0x29f
[0x29f:0x29f]
---
Predecessors: [0x270]
Successors: [0x2a0]
---
0x29f JUMPDEST
---
0x29f: JUMPDEST 
---
Entry stack: [V12, 0xec]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec]

================================

Block 0x2a0
[0x2a0:0x2a1]
---
Predecessors: [0x29f]
Successors: [0xec]
---
0x2a0 JUMPDEST
0x2a1 JUMP
---
0x2a0: JUMPDEST 
0x2a1: JUMP 0xec
---
Entry stack: [V12, 0xec]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a2
[0x2a2:0x2b0]
---
Predecessors: [0x108]
Successors: [0x110]
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x1
0x2a5 SLOAD
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad SUB
0x2ae AND
0x2af DUP2
0x2b0 JUMP
---
0x2a2: JUMPDEST 
0x2a3: V231 = 0x1
0x2a5: V232 = S[0x1]
0x2a6: V233 = 0x1
0x2a8: V234 = 0xa0
0x2aa: V235 = 0x2
0x2ac: V236 = EXP 0x2 0xa0
0x2ad: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ae: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x2b0: JUMP 0x110
---
Entry stack: [V12, 0x110]
Stack pops: 1
Stack additions: [S0, V238]
Exit stack: [V12, 0x110, V238]

================================

Block 0x2b1
[0x2b1:0x2c8]
---
Predecessors: [0x134]
Successors: [0x2c9, 0x2ce]
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x0
0x2b4 DUP1
0x2b5 SLOAD
0x2b6 CALLER
0x2b7 PUSH1 0x1
0x2b9 PUSH1 0xa0
0x2bb PUSH1 0x2
0x2bd EXP
0x2be SUB
0x2bf SWAP1
0x2c0 DUP2
0x2c1 AND
0x2c2 SWAP2
0x2c3 AND
0x2c4 EQ
0x2c5 PUSH2 0x2ce
0x2c8 JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V239 = 0x0
0x2b5: V240 = S[0x0]
0x2b6: V241 = CALLER
0x2b7: V242 = 0x1
0x2b9: V243 = 0xa0
0x2bb: V244 = 0x2
0x2bd: V245 = EXP 0x2 0xa0
0x2be: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c1: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x2c3: V248 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x2c4: V249 = EQ V248 V247
0x2c5: V250 = 0x2ce
0x2c8: JUMPI 0x2ce V249
---
Entry stack: [V12, 0xec]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xec, 0x0]

================================

Block 0x2c9
[0x2c9:0x2cd]
---
Predecessors: [0x2b1]
Successors: []
---
0x2c9 PUSH1 0x0
0x2cb PUSH1 0x0
0x2cd REVERT
---
0x2c9: V251 = 0x0
0x2cb: V252 = 0x0
0x2cd: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, 0x0]

================================

Block 0x2ce
[0x2ce:0x2d1]
---
Predecessors: [0x2b1]
Successors: [0x2d2]
---
0x2ce JUMPDEST
0x2cf PUSH1 0x1
0x2d1 DUP1
---
0x2ce: JUMPDEST 
0x2cf: V253 = 0x1
---
Entry stack: [V12, 0xec, 0x0]
Stack pops: 0
Stack additions: [0x1, 0x1]
Exit stack: [V12, 0xec, 0x0, 0x1, 0x1]

================================

Block 0x2d2
[0x2d2:0x2e1]
---
Predecessors: [0x2ce]
Successors: [0x2e2, 0x2e3]
---
0x2d2 JUMPDEST
0x2d3 PUSH1 0x3
0x2d5 SLOAD
0x2d6 PUSH1 0xff
0x2d8 AND
0x2d9 PUSH1 0x2
0x2db DUP2
0x2dc GT
0x2dd ISZERO
0x2de PUSH2 0x2e3
0x2e1 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V254 = 0x3
0x2d5: V255 = S[0x3]
0x2d6: V256 = 0xff
0x2d8: V257 = AND 0xff V255
0x2d9: V258 = 0x2
0x2dc: V259 = GT V257 0x2
0x2dd: V260 = ISZERO V259
0x2de: V261 = 0x2e3
0x2e1: JUMPI 0x2e3 V260
---
Entry stack: [V12, 0xec, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [V257]
Exit stack: [V12, 0xec, 0x0, 0x1, 0x1, V257]

================================

Block 0x2e2
[0x2e2:0x2e2]
---
Predecessors: [0x2d2]
Successors: []
---
0x2e2 INVALID
---
0x2e2: INVALID 
---
Entry stack: [V12, 0xec, 0x0, 0x1, 0x1, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, 0x0, 0x1, 0x1, V257]

================================

Block 0x2e3
[0x2e3:0x2e9]
---
Predecessors: [0x2d2]
Successors: [0x2ea, 0x2ef]
---
0x2e3 JUMPDEST
0x2e4 EQ
0x2e5 ISZERO
0x2e6 PUSH2 0x2ef
0x2e9 JUMPI
---
0x2e3: JUMPDEST 
0x2e4: V262 = EQ V257 0x1
0x2e5: V263 = ISZERO V262
0x2e6: V264 = 0x2ef
0x2e9: JUMPI 0x2ef V263
---
Entry stack: [V12, 0xec, 0x0, 0x1, 0x1, V257]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xec, 0x0, 0x1]

================================

Block 0x2ea
[0x2ea:0x2ee]
---
Predecessors: [0x2e3]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec PUSH1 0x0
0x2ee REVERT
---
0x2ea: V265 = 0x0
0x2ec: V266 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, 0x0, 0x1]

================================

Block 0x2ef
[0x2ef:0x325]
---
Predecessors: [0x2e3]
Successors: [0x326, 0x32b]
---
0x2ef JUMPDEST
0x2f0 PUSH1 0x1
0x2f2 SLOAD
0x2f3 PUSH1 0x40
0x2f5 MLOAD
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe ADDRESS
0x2ff DUP2
0x300 AND
0x301 BALANCE
0x302 SWAP5
0x303 POP
0x304 SWAP2
0x305 SWAP1
0x306 SWAP2
0x307 AND
0x308 SWAP1
0x309 DUP4
0x30a ISZERO
0x30b PUSH2 0x8fc
0x30e MUL
0x30f SWAP1
0x310 DUP5
0x311 SWAP1
0x312 PUSH1 0x0
0x314 DUP2
0x315 DUP2
0x316 DUP2
0x317 DUP6
0x318 DUP9
0x319 DUP9
0x31a CALL
0x31b SWAP4
0x31c POP
0x31d POP
0x31e POP
0x31f POP
0x320 ISZERO
0x321 ISZERO
0x322 PUSH2 0x32b
0x325 JUMPI
---
0x2ef: JUMPDEST 
0x2f0: V267 = 0x1
0x2f2: V268 = S[0x1]
0x2f3: V269 = 0x40
0x2f5: V270 = M[0x40]
0x2f6: V271 = 0x1
0x2f8: V272 = 0xa0
0x2fa: V273 = 0x2
0x2fc: V274 = EXP 0x2 0xa0
0x2fd: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V276 = ADDRESS
0x300: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x301: V278 = BALANCE V277
0x307: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x30a: V280 = ISZERO V278
0x30b: V281 = 0x8fc
0x30e: V282 = MUL 0x8fc V280
0x312: V283 = 0x0
0x31a: V284 = CALL V282 V279 V278 V270 0x0 V270 0x0
0x320: V285 = ISZERO V284
0x321: V286 = ISZERO V285
0x322: V287 = 0x32b
0x325: JUMPI 0x32b V286
---
Entry stack: [V12, 0xec, 0x0, 0x1]
Stack pops: 2
Stack additions: [V278, S0]
Exit stack: [V12, 0xec, V278, 0x1]

================================

Block 0x326
[0x326:0x32a]
---
Predecessors: [0x2ef]
Successors: []
---
0x326 PUSH1 0x0
0x328 PUSH1 0x0
0x32a REVERT
---
0x326: V288 = 0x0
0x328: V289 = 0x0
0x32a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec, V278, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V278, 0x1]

================================

Block 0x32b
[0x32b:0x35e]
---
Predecessors: [0x2ef]
Successors: [0x35f]
---
0x32b JUMPDEST
0x32c PUSH1 0x40
0x32e DUP1
0x32f MLOAD
0x330 DUP4
0x331 DUP2
0x332 MSTORE
0x333 SWAP1
0x334 MLOAD
0x335 PUSH32 0xca4bd5135a11e3fc146ac22d75f0d2eae9b6c61b6fa3eb6724a456b311ad72d3
0x356 SWAP2
0x357 DUP2
0x358 SWAP1
0x359 SUB
0x35a PUSH1 0x20
0x35c ADD
0x35d SWAP1
0x35e LOG1
---
0x32b: JUMPDEST 
0x32c: V290 = 0x40
0x32f: V291 = M[0x40]
0x332: M[V291] = V278
0x334: V292 = M[0x40]
0x335: V293 = 0xca4bd5135a11e3fc146ac22d75f0d2eae9b6c61b6fa3eb6724a456b311ad72d3
0x359: V294 = SUB V291 V292
0x35a: V295 = 0x20
0x35c: V296 = ADD 0x20 V294
0x35e: LOG V292 V296 0xca4bd5135a11e3fc146ac22d75f0d2eae9b6c61b6fa3eb6724a456b311ad72d3
---
Entry stack: [V12, 0xec, V278, 0x1]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xec, V278, 0x1]

================================

Block 0x35f
[0x35f:0x35f]
---
Predecessors: [0x32b]
Successors: [0x360]
---
0x35f JUMPDEST
---
0x35f: JUMPDEST 
---
Entry stack: [V12, 0xec, V278, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V278, 0x1]

================================

Block 0x360
[0x360:0x361]
---
Predecessors: [0x35f]
Successors: [0x362]
---
0x360 JUMPDEST
0x361 POP
---
0x360: JUMPDEST 
---
Entry stack: [V12, 0xec, V278, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xec, V278]

================================

Block 0x362
[0x362:0x364]
---
Predecessors: [0x360, 0x52f]
Successors: [0xec]
---
0x362 JUMPDEST
0x363 POP
0x364 JUMP
---
0x362: JUMPDEST 
0x364: JUMP 0xec
---
Entry stack: [V12, 0xec, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x365
[0x365:0x371]
---
Predecessors: [0x146]
Successors: [0x372, 0x373]
---
0x365 JUMPDEST
0x366 PUSH1 0x0
0x368 DUP2
0x369 PUSH1 0x2
0x36b DUP2
0x36c GT
0x36d ISZERO
0x36e PUSH2 0x373
0x371 JUMPI
---
0x365: JUMPDEST 
0x366: V297 = 0x0
0x369: V298 = 0x2
0x36c: V299 = GT V109 0x2
0x36d: V300 = ISZERO V299
0x36e: V301 = 0x373
0x371: JUMPI 0x373 V300
---
Entry stack: [V12, 0x154, V109]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V12, 0x154, V109, 0x0, V109]

================================

Block 0x372
[0x372:0x372]
---
Predecessors: [0x365]
Successors: []
---
0x372 INVALID
---
0x372: INVALID 
---
Entry stack: [V12, 0x154, V109, 0x0, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x154, V109, 0x0, V109]

================================

Block 0x373
[0x373:0x382]
---
Predecessors: [0x365]
Successors: [0x383, 0x384]
---
0x373 JUMPDEST
0x374 PUSH1 0x3
0x376 SLOAD
0x377 PUSH1 0xff
0x379 AND
0x37a PUSH1 0x2
0x37c DUP2
0x37d GT
0x37e ISZERO
0x37f PUSH2 0x384
0x382 JUMPI
---
0x373: JUMPDEST 
0x374: V302 = 0x3
0x376: V303 = S[0x3]
0x377: V304 = 0xff
0x379: V305 = AND 0xff V303
0x37a: V306 = 0x2
0x37d: V307 = GT V305 0x2
0x37e: V308 = ISZERO V307
0x37f: V309 = 0x384
0x382: JUMPI 0x384 V308
---
Entry stack: [V12, 0x154, V109, 0x0, V109]
Stack pops: 0
Stack additions: [V305]
Exit stack: [V12, 0x154, V109, 0x0, V109, V305]

================================

Block 0x383
[0x383:0x383]
---
Predecessors: [0x373]
Successors: []
---
0x383 INVALID
---
0x383: INVALID 
---
Entry stack: [V12, 0x154, V109, 0x0, V109, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x154, V109, 0x0, V109, V305]

================================

Block 0x384
[0x384:0x387]
---
Predecessors: [0x373]
Successors: [0x388]
---
0x384 JUMPDEST
0x385 EQ
0x386 SWAP1
0x387 POP
---
0x384: JUMPDEST 
0x385: V310 = EQ V305 V109
---
Entry stack: [V12, 0x154, V109, 0x0, V109, V305]
Stack pops: 3
Stack additions: [V310]
Exit stack: [V12, 0x154, V109, V310]

================================

Block 0x388
[0x388:0x38c]
---
Predecessors: [0x384]
Successors: [0x154]
---
0x388 JUMPDEST
0x389 SWAP2
0x38a SWAP1
0x38b POP
0x38c JUMP
---
0x388: JUMPDEST 
0x38c: JUMP 0x154
---
Entry stack: [V12, 0x154, V109, V310]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V310]

================================

Block 0x38d
[0x38d:0x392]
---
Predecessors: [0x170]
Successors: [0x178]
---
0x38d JUMPDEST
0x38e PUSH1 0x2
0x390 SLOAD
0x391 DUP2
0x392 JUMP
---
0x38d: JUMPDEST 
0x38e: V311 = 0x2
0x390: V312 = S[0x2]
0x392: JUMP 0x178
---
Entry stack: [V12, 0x178]
Stack pops: 1
Stack additions: [S0, V312]
Exit stack: [V12, 0x178, V312]

================================

Block 0x393
[0x393:0x3a9]
---
Predecessors: [0x192]
Successors: [0x3aa, 0x3af]
---
0x393 JUMPDEST
0x394 PUSH1 0x0
0x396 SLOAD
0x397 CALLER
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 SWAP1
0x3a1 DUP2
0x3a2 AND
0x3a3 SWAP2
0x3a4 AND
0x3a5 EQ
0x3a6 PUSH2 0x3af
0x3a9 JUMPI
---
0x393: JUMPDEST 
0x394: V313 = 0x0
0x396: V314 = S[0x0]
0x397: V315 = CALLER
0x398: V316 = 0x1
0x39a: V317 = 0xa0
0x39c: V318 = 0x2
0x39e: V319 = EXP 0x2 0xa0
0x39f: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x3a4: V322 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V323 = EQ V322 V321
0x3a6: V324 = 0x3af
0x3a9: JUMPI 0x3af V323
---
Entry stack: [V12, 0xec, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V141]

================================

Block 0x3aa
[0x3aa:0x3ae]
---
Predecessors: [0x393]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac PUSH1 0x0
0x3ae REVERT
---
0x3aa: V325 = 0x0
0x3ac: V326 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V141]

================================

Block 0x3af
[0x3af:0x412]
---
Predecessors: [0x393]
Successors: [0x413]
---
0x3af JUMPDEST
0x3b0 PUSH1 0x1
0x3b2 SLOAD
0x3b3 PUSH1 0x40
0x3b5 DUP1
0x3b6 MLOAD
0x3b7 PUSH1 0x1
0x3b9 PUSH1 0xa0
0x3bb PUSH1 0x2
0x3bd EXP
0x3be SUB
0x3bf SWAP3
0x3c0 DUP4
0x3c1 AND
0x3c2 DUP2
0x3c3 MSTORE
0x3c4 SWAP2
0x3c5 DUP4
0x3c6 AND
0x3c7 PUSH1 0x20
0x3c9 DUP4
0x3ca ADD
0x3cb MSTORE
0x3cc DUP1
0x3cd MLOAD
0x3ce PUSH32 0xc204b28865760f18aa0ef147ee25573d2dba9f208385c8aa65fb79150978fb6d
0x3ef SWAP3
0x3f0 DUP2
0x3f1 SWAP1
0x3f2 SUB
0x3f3 SWAP1
0x3f4 SWAP2
0x3f5 ADD
0x3f6 SWAP1
0x3f7 LOG1
0x3f8 PUSH1 0x1
0x3fa DUP1
0x3fb SLOAD
0x3fc PUSH1 0x1
0x3fe PUSH1 0xa0
0x400 PUSH1 0x2
0x402 EXP
0x403 SUB
0x404 NOT
0x405 AND
0x406 PUSH1 0x1
0x408 PUSH1 0xa0
0x40a PUSH1 0x2
0x40c EXP
0x40d SUB
0x40e DUP4
0x40f AND
0x410 OR
0x411 SWAP1
0x412 SSTORE
---
0x3af: JUMPDEST 
0x3b0: V327 = 0x1
0x3b2: V328 = S[0x1]
0x3b3: V329 = 0x40
0x3b6: V330 = M[0x40]
0x3b7: V331 = 0x1
0x3b9: V332 = 0xa0
0x3bb: V333 = 0x2
0x3bd: V334 = EXP 0x2 0xa0
0x3be: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c1: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x3c3: M[V330] = V336
0x3c6: V337 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V338 = 0x20
0x3ca: V339 = ADD V330 0x20
0x3cb: M[V339] = V337
0x3cd: V340 = M[0x40]
0x3ce: V341 = 0xc204b28865760f18aa0ef147ee25573d2dba9f208385c8aa65fb79150978fb6d
0x3f2: V342 = SUB V330 V340
0x3f5: V343 = ADD 0x40 V342
0x3f7: LOG V340 V343 0xc204b28865760f18aa0ef147ee25573d2dba9f208385c8aa65fb79150978fb6d
0x3f8: V344 = 0x1
0x3fb: V345 = S[0x1]
0x3fc: V346 = 0x1
0x3fe: V347 = 0xa0
0x400: V348 = 0x2
0x402: V349 = EXP 0x2 0xa0
0x403: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x404: V351 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x405: V352 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V345
0x406: V353 = 0x1
0x408: V354 = 0xa0
0x40a: V355 = 0x2
0x40c: V356 = EXP 0x2 0xa0
0x40d: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40f: V358 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x410: V359 = OR V358 V352
0x412: S[0x1] = V359
---
Entry stack: [V12, 0xec, V141]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xec, V141]

================================

Block 0x413
[0x413:0x413]
---
Predecessors: [0x3af]
Successors: [0x414]
---
0x413 JUMPDEST
---
0x413: JUMPDEST 
---
Entry stack: [V12, 0xec, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V141]

================================

Block 0x414
[0x414:0x416]
---
Predecessors: [0x413]
Successors: [0xec]
---
0x414 JUMPDEST
0x415 POP
0x416 JUMP
---
0x414: JUMPDEST 
0x416: JUMP 0xec
---
Entry stack: [V12, 0xec, V141]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x417
[0x417:0x425]
---
Predecessors: [0x1b0]
Successors: [0x110]
---
0x417 JUMPDEST
0x418 PUSH1 0x0
0x41a SLOAD
0x41b PUSH1 0x1
0x41d PUSH1 0xa0
0x41f PUSH1 0x2
0x421 EXP
0x422 SUB
0x423 AND
0x424 DUP2
0x425 JUMP
---
0x417: JUMPDEST 
0x418: V360 = 0x0
0x41a: V361 = S[0x0]
0x41b: V362 = 0x1
0x41d: V363 = 0xa0
0x41f: V364 = 0x2
0x421: V365 = EXP 0x2 0xa0
0x422: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x423: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x425: JUMP 0x110
---
Entry stack: [V12, 0x110]
Stack pops: 1
Stack additions: [S0, V367]
Exit stack: [V12, 0x110, V367]

================================

Block 0x426
[0x426:0x42e]
---
Predecessors: [0x1dc]
Successors: [0x1e4]
---
0x426 JUMPDEST
0x427 PUSH1 0x3
0x429 SLOAD
0x42a PUSH1 0xff
0x42c AND
0x42d DUP2
0x42e JUMP
---
0x426: JUMPDEST 
0x427: V368 = 0x3
0x429: V369 = S[0x3]
0x42a: V370 = 0xff
0x42c: V371 = AND 0xff V369
0x42e: JUMP 0x1e4
---
Entry stack: [V12, 0x1e4]
Stack pops: 1
Stack additions: [S0, V371]
Exit stack: [V12, 0x1e4, V371]

================================

Block 0x42f
[0x42f:0x446]
---
Predecessors: [0x210]
Successors: [0x447, 0x44c]
---
0x42f JUMPDEST
0x430 PUSH1 0x0
0x432 DUP1
0x433 SLOAD
0x434 CALLER
0x435 PUSH1 0x1
0x437 PUSH1 0xa0
0x439 PUSH1 0x2
0x43b EXP
0x43c SUB
0x43d SWAP1
0x43e DUP2
0x43f AND
0x440 SWAP2
0x441 AND
0x442 EQ
0x443 PUSH2 0x44c
0x446 JUMPI
---
0x42f: JUMPDEST 
0x430: V372 = 0x0
0x433: V373 = S[0x0]
0x434: V374 = CALLER
0x435: V375 = 0x1
0x437: V376 = 0xa0
0x439: V377 = 0x2
0x43b: V378 = EXP 0x2 0xa0
0x43c: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43f: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x441: V381 = AND V373 0xffffffffffffffffffffffffffffffffffffffff
0x442: V382 = EQ V381 V380
0x443: V383 = 0x44c
0x446: JUMPI 0x44c V382
---
Entry stack: [V12, 0xec, V189]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xec, V189, 0x0]

================================

Block 0x447
[0x447:0x44b]
---
Predecessors: [0x42f]
Successors: []
---
0x447 PUSH1 0x0
0x449 PUSH1 0x0
0x44b REVERT
---
0x447: V384 = 0x0
0x449: V385 = 0x0
0x44b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec, V189, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V189, 0x0]

================================

Block 0x44c
[0x44c:0x461]
---
Predecessors: [0x42f]
Successors: [0x55f]
---
0x44c JUMPDEST
0x44d PUSH2 0x462
0x450 ADDRESS
0x451 PUSH1 0x1
0x453 PUSH1 0xa0
0x455 PUSH1 0x2
0x457 EXP
0x458 SUB
0x459 AND
0x45a BALANCE
0x45b PUSH1 0x2
0x45d SLOAD
0x45e PUSH2 0x55f
0x461 JUMP
---
0x44c: JUMPDEST 
0x44d: V386 = 0x462
0x450: V387 = ADDRESS
0x451: V388 = 0x1
0x453: V389 = 0xa0
0x455: V390 = 0x2
0x457: V391 = EXP 0x2 0xa0
0x458: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x459: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x45a: V394 = BALANCE V393
0x45b: V395 = 0x2
0x45d: V396 = S[0x2]
0x45e: V397 = 0x55f
0x461: JUMP 0x55f
---
Entry stack: [V12, 0xec, V189, 0x0]
Stack pops: 0
Stack additions: [0x462, V394, V396]
Exit stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396]

================================

Block 0x462
[0x462:0x4b1]
---
Predecessors: [0x573]
Successors: [0x4b2, 0x4b3]
---
0x462 JUMPDEST
0x463 PUSH1 0x1
0x465 SLOAD
0x466 PUSH1 0x40
0x468 DUP1
0x469 MLOAD
0x46a PUSH1 0xe3
0x46c PUSH1 0x2
0x46e EXP
0x46f PUSH4 0x1d91589b
0x474 MUL
0x475 DUP2
0x476 MSTORE
0x477 PUSH1 0x1
0x479 PUSH1 0xa0
0x47b PUSH1 0x2
0x47d EXP
0x47e SUB
0x47f SWAP3
0x480 DUP4
0x481 AND
0x482 PUSH1 0x4
0x484 DUP3
0x485 ADD
0x486 MSTORE
0x487 SWAP1
0x488 MLOAD
0x489 SWAP3
0x48a SWAP4
0x48b POP
0x48c SWAP1
0x48d DUP5
0x48e AND
0x48f SWAP2
0x490 PUSH4 0xec8ac4d8
0x495 SWAP2
0x496 DUP5
0x497 SWAP2
0x498 PUSH1 0x24
0x49a DUP1
0x49b DUP4
0x49c ADD
0x49d SWAP3
0x49e PUSH1 0x0
0x4a0 SWAP3
0x4a1 SWAP2
0x4a2 SWAP1
0x4a3 DUP3
0x4a4 SWAP1
0x4a5 SUB
0x4a6 ADD
0x4a7 DUP2
0x4a8 DUP6
0x4a9 DUP9
0x4aa DUP1
0x4ab EXTCODESIZE
0x4ac ISZERO
0x4ad ISZERO
0x4ae PUSH2 0x4b3
0x4b1 JUMPI
---
0x462: JUMPDEST 
0x463: V398 = 0x1
0x465: V399 = S[0x1]
0x466: V400 = 0x40
0x469: V401 = M[0x40]
0x46a: V402 = 0xe3
0x46c: V403 = 0x2
0x46e: V404 = EXP 0x2 0xe3
0x46f: V405 = 0x1d91589b
0x474: V406 = MUL 0x1d91589b 0x800000000000000000000000000000000000000000000000000000000
0x476: M[V401] = 0xec8ac4d800000000000000000000000000000000000000000000000000000000
0x477: V407 = 0x1
0x479: V408 = 0xa0
0x47b: V409 = 0x2
0x47d: V410 = EXP 0x2 0xa0
0x47e: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x481: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x482: V413 = 0x4
0x485: V414 = ADD V401 0x4
0x486: M[V414] = V412
0x488: V415 = M[0x40]
0x48e: V416 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x490: V417 = 0xec8ac4d8
0x498: V418 = 0x24
0x49c: V419 = ADD V401 0x24
0x49e: V420 = 0x0
0x4a5: V421 = SUB V401 V415
0x4a6: V422 = ADD V421 0x24
0x4ab: V423 = EXTCODESIZE V416
0x4ac: V424 = ISZERO V423
0x4ad: V425 = ISZERO V424
0x4ae: V426 = 0x4b3
0x4b1: JUMPI 0x4b3 V425
---
Entry stack: [V12, 0xec, V189, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S0, V416, 0xec8ac4d8, S0, V419, 0x0, V415, V422, V415, S0, V416]
Exit stack: [V12, 0xec, V189, S0, V416, 0xec8ac4d8, S0, V419, 0x0, V415, V422, V415, S0, V416]

================================

Block 0x4b2
[0x4b2:0x4b2]
---
Predecessors: [0x462]
Successors: []
---
0x4b2 INVALID
---
0x4b2: INVALID 
---
Entry stack: [V12, 0xec, V189, S10, V416, 0xec8ac4d8, S7, V419, 0x0, V415, V422, V415, S1, V416]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V189, S10, V416, 0xec8ac4d8, S7, V419, 0x0, V415, V422, V415, S1, V416]

================================

Block 0x4b3
[0x4b3:0x4bf]
---
Predecessors: [0x462]
Successors: [0x4c0, 0x4c1]
---
0x4b3 JUMPDEST
0x4b4 PUSH2 0x25ee
0x4b7 GAS
0x4b8 SUB
0x4b9 CALL
0x4ba ISZERO
0x4bb ISZERO
0x4bc PUSH2 0x4c1
0x4bf JUMPI
---
0x4b3: JUMPDEST 
0x4b4: V427 = 0x25ee
0x4b7: V428 = GAS
0x4b8: V429 = SUB V428 0x25ee
0x4b9: V430 = CALL V429 V416 S1 V415 V422 V415 0x0
0x4ba: V431 = ISZERO V430
0x4bb: V432 = ISZERO V431
0x4bc: V433 = 0x4c1
0x4bf: JUMPI 0x4c1 V432
---
Entry stack: [V12, 0xec, V189, S10, V416, 0xec8ac4d8, S7, V419, 0x0, V415, V422, V415, S1, V416]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xec, V189, S10, V416, 0xec8ac4d8, S7, V419]

================================

Block 0x4c0
[0x4c0:0x4c0]
---
Predecessors: [0x4b3]
Successors: []
---
0x4c0 INVALID
---
0x4c0: INVALID 
---
Entry stack: [V12, 0xec, V189, S4, V416, 0xec8ac4d8, S1, V419]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V189, S4, V416, 0xec8ac4d8, S1, V419]

================================

Block 0x4c1
[0x4c1:0x4d4]
---
Predecessors: [0x4b3]
Successors: [0x4d5]
---
0x4c1 JUMPDEST
0x4c2 POP
0x4c3 POP
0x4c4 PUSH1 0x3
0x4c6 DUP1
0x4c7 SLOAD
0x4c8 PUSH1 0x1
0x4ca SWAP4
0x4cb POP
0x4cc SWAP1
0x4cd SWAP2
0x4ce POP
0x4cf PUSH1 0xff
0x4d1 NOT
0x4d2 AND
0x4d3 DUP3
0x4d4 DUP1
---
0x4c1: JUMPDEST 
0x4c4: V434 = 0x3
0x4c7: V435 = S[0x3]
0x4c8: V436 = 0x1
0x4cf: V437 = 0xff
0x4d1: V438 = NOT 0xff
0x4d2: V439 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V435
---
Entry stack: [V12, 0xec, V189, S4, V416, 0xec8ac4d8, S1, V419]
Stack pops: 4
Stack additions: [0x1, 0x3, V439, 0x1, 0x1]
Exit stack: [V12, 0xec, V189, S4, 0x1, 0x3, V439, 0x1, 0x1]

================================

Block 0x4d5
[0x4d5:0x50d]
---
Predecessors: [0x4c1]
Successors: [0x50e]
---
0x4d5 JUMPDEST
0x4d6 MUL
0x4d7 OR
0x4d8 SWAP1
0x4d9 SSTORE
0x4da POP
0x4db PUSH1 0x40
0x4dd DUP1
0x4de MLOAD
0x4df DUP3
0x4e0 DUP2
0x4e1 MSTORE
0x4e2 SWAP1
0x4e3 MLOAD
0x4e4 PUSH32 0x9237e61b939e9e5141705f9a758c9804d596ad248ce04d74983b3b76b27a6156
0x505 SWAP2
0x506 DUP2
0x507 SWAP1
0x508 SUB
0x509 PUSH1 0x20
0x50b ADD
0x50c SWAP1
0x50d LOG1
---
0x4d5: JUMPDEST 
0x4d6: V440 = MUL 0x1 0x1
0x4d7: V441 = OR 0x1 V439
0x4d9: S[0x3] = V441
0x4db: V442 = 0x40
0x4de: V443 = M[0x40]
0x4e1: M[V443] = S5
0x4e3: V444 = M[0x40]
0x4e4: V445 = 0x9237e61b939e9e5141705f9a758c9804d596ad248ce04d74983b3b76b27a6156
0x508: V446 = SUB V443 V444
0x509: V447 = 0x20
0x50b: V448 = ADD 0x20 V446
0x50d: LOG V444 V448 0x9237e61b939e9e5141705f9a758c9804d596ad248ce04d74983b3b76b27a6156
---
Entry stack: [V12, 0xec, V189, S5, 0x1, 0x3, V439, 0x1, 0x1]
Stack pops: 6
Stack additions: [S5]
Exit stack: [V12, 0xec, V189, S5]

================================

Block 0x50e
[0x50e:0x50e]
---
Predecessors: [0x4d5]
Successors: [0x50f]
---
0x50e JUMPDEST
---
0x50e: JUMPDEST 
---
Entry stack: [V12, 0xec, V189, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V189, S0]

================================

Block 0x50f
[0x50f:0x512]
---
Predecessors: [0x50e]
Successors: [0xec]
---
0x50f JUMPDEST
0x510 POP
0x511 POP
0x512 JUMP
---
0x50f: JUMPDEST 
0x512: JUMP 0xec
---
Entry stack: [V12, 0xec, V189, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x513
[0x513:0x529]
---
Predecessors: [0x22e]
Successors: [0x52a, 0x52f]
---
0x513 JUMPDEST
0x514 PUSH1 0x0
0x516 SLOAD
0x517 CALLER
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 SWAP1
0x521 DUP2
0x522 AND
0x523 SWAP2
0x524 AND
0x525 EQ
0x526 PUSH2 0x52f
0x529 JUMPI
---
0x513: JUMPDEST 
0x514: V449 = 0x0
0x516: V450 = S[0x0]
0x517: V451 = CALLER
0x518: V452 = 0x1
0x51a: V453 = 0xa0
0x51c: V454 = 0x2
0x51e: V455 = EXP 0x2 0xa0
0x51f: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x522: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x524: V458 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0x525: V459 = EQ V458 V457
0x526: V460 = 0x52f
0x529: JUMPI 0x52f V459
---
Entry stack: [V12, 0xec, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V202]

================================

Block 0x52a
[0x52a:0x52e]
---
Predecessors: [0x513]
Successors: []
---
0x52a PUSH1 0x0
0x52c PUSH1 0x0
0x52e REVERT
---
0x52a: V461 = 0x0
0x52c: V462 = 0x0
0x52e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xec, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V202]

================================

Block 0x52f
[0x52f:0x53e]
---
Predecessors: [0x513]
Successors: [0x362, 0x53f]
---
0x52f JUMPDEST
0x530 PUSH1 0x1
0x532 PUSH1 0xa0
0x534 PUSH1 0x2
0x536 EXP
0x537 SUB
0x538 DUP2
0x539 AND
0x53a ISZERO
0x53b PUSH2 0x362
0x53e JUMPI
---
0x52f: JUMPDEST 
0x530: V463 = 0x1
0x532: V464 = 0xa0
0x534: V465 = 0x2
0x536: V466 = EXP 0x2 0xa0
0x537: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x539: V468 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V469 = ISZERO V468
0x53b: V470 = 0x362
0x53e: JUMPI 0x362 V469
---
Entry stack: [V12, 0xec, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xec, V202]

================================

Block 0x53f
[0x53f:0x559]
---
Predecessors: [0x52f]
Successors: [0x55a]
---
0x53f PUSH1 0x0
0x541 DUP1
0x542 SLOAD
0x543 PUSH1 0x1
0x545 PUSH1 0xa0
0x547 PUSH1 0x2
0x549 EXP
0x54a SUB
0x54b NOT
0x54c AND
0x54d PUSH1 0x1
0x54f PUSH1 0xa0
0x551 PUSH1 0x2
0x553 EXP
0x554 SUB
0x555 DUP4
0x556 AND
0x557 OR
0x558 SWAP1
0x559 SSTORE
---
0x53f: V471 = 0x0
0x542: V472 = S[0x0]
0x543: V473 = 0x1
0x545: V474 = 0xa0
0x547: V475 = 0x2
0x549: V476 = EXP 0x2 0xa0
0x54a: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54b: V478 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V479 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V472
0x54d: V480 = 0x1
0x54f: V481 = 0xa0
0x551: V482 = 0x2
0x553: V483 = EXP 0x2 0xa0
0x554: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x556: V485 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x557: V486 = OR V485 V479
0x559: S[0x0] = V486
---
Entry stack: [V12, 0xec, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xec, V202]

================================

Block 0x55a
[0x55a:0x55a]
---
Predecessors: [0x53f]
Successors: [0x55b]
---
0x55a JUMPDEST
---
0x55a: JUMPDEST 
---
Entry stack: [V12, 0xec, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V202]

================================

Block 0x55b
[0x55b:0x55b]
---
Predecessors: [0x55a]
Successors: [0x55c]
---
0x55b JUMPDEST
---
0x55b: JUMPDEST 
---
Entry stack: [V12, 0xec, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xec, V202]

================================

Block 0x55c
[0x55c:0x55e]
---
Predecessors: [0x55b]
Successors: [0xec]
---
0x55c JUMPDEST
0x55d POP
0x55e JUMP
---
0x55c: JUMPDEST 
0x55e: JUMP 0xec
---
Entry stack: [V12, 0xec, V202]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x55f
[0x55f:0x568]
---
Predecessors: [0x44c]
Successors: [0x569, 0x56e]
---
0x55f JUMPDEST
0x560 PUSH1 0x0
0x562 DUP2
0x563 DUP4
0x564 LT
0x565 PUSH2 0x56e
0x568 JUMPI
---
0x55f: JUMPDEST 
0x560: V487 = 0x0
0x564: V488 = LT V394 V396
0x565: V489 = 0x56e
0x568: JUMPI 0x56e V488
---
Entry stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396, 0x0]

================================

Block 0x569
[0x569:0x56d]
---
Predecessors: [0x55f]
Successors: [0x570]
---
0x569 DUP2
0x56a PUSH2 0x570
0x56d JUMP
---
0x56a: V490 = 0x570
0x56d: JUMP 0x570
---
Entry stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396, 0x0, V396]

================================

Block 0x56e
[0x56e:0x56f]
---
Predecessors: [0x55f]
Successors: [0x570]
---
0x56e JUMPDEST
0x56f DUP3
---
0x56e: JUMPDEST 
---
Entry stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396, 0x0, V394]

================================

Block 0x570
[0x570:0x572]
---
Predecessors: [0x569, 0x56e]
Successors: [0x573]
---
0x570 JUMPDEST
0x571 SWAP1
0x572 POP
---
0x570: JUMPDEST 
---
Entry stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396, S0]

================================

Block 0x573
[0x573:0x578]
---
Predecessors: [0x570]
Successors: [0x462]
---
0x573 JUMPDEST
0x574 SWAP3
0x575 SWAP2
0x576 POP
0x577 POP
0x578 JUMP
---
0x573: JUMPDEST 
0x578: JUMP 0x462
---
Entry stack: [V12, 0xec, V189, 0x0, 0x462, V394, V396, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0xec, V189, 0x0, S0]

================================

Block 0x579
[0x579:0x5b0]
---
Predecessors: []
Successors: []
---
0x579 STOP
0x57a LOG1
0x57b PUSH6 0x627a7a723058
0x582 SHA3
0x583 ORIGIN
0x584 MISSING 0xec
0x585 EXTCODESIZE
0x586 SWAP10
0x587 DUP6
0x588 MISSING 0x46
0x589 MISSING 0x2f
0x58a MISSING 0x4c
0x58b MISSING 0xac
0x58c LT
0x58d MISSING 0xe5
0x58e MISSING 0x1f
0x58f MISSING 0xe1
0x590 MISSING 0xa9
0x591 MISSING 0xb9
0x592 MISSING 0xcb
0x593 PUSH29 0x1471afd1f26bf20dd104fc261c0b9d0029
---
0x579: STOP 
0x57a: LOG S0 S1 S2
0x57b: V491 = 0x627a7a723058
0x582: V492 = SHA3 0x627a7a723058 S3
0x583: V493 = ORIGIN
0x584: MISSING 0xec
0x585: V494 = EXTCODESIZE S0
0x588: MISSING 0x46
0x589: MISSING 0x2f
0x58a: MISSING 0x4c
0x58b: MISSING 0xac
0x58c: V495 = LT S0 S1
0x58d: MISSING 0xe5
0x58e: MISSING 0x1f
0x58f: MISSING 0xe1
0x590: MISSING 0xa9
0x591: MISSING 0xb9
0x592: MISSING 0xcb
0x593: V496 = 0x1471afd1f26bf20dd104fc261c0b9d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V493, V492, S5, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, V494, V495, 0x1471afd1f26bf20dd104fc261c0b9d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x146901db
Entry block: 0xee
Exit block: 0xec
Body: 0xec, 0xee, 0xf5, 0xf6, 0x244, 0x25b, 0x260, 0x270, 0x29f, 0x2a0

Function 1:
Public function signature: 0x1e0018d6
Entry block: 0x100
Exit block: 0x110
Body: 0x100, 0x107, 0x108, 0x110, 0x2a2

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x12c
Exit block: 0xec
Body: 0xec, 0x12c, 0x133, 0x134, 0x2b1, 0x2c9, 0x2ce, 0x2d2, 0x2e2, 0x2e3, 0x2ea, 0x2ef, 0x326, 0x32b, 0x35f, 0x360, 0x362

Function 3:
Public function signature: 0x64ae4451
Entry block: 0x13e
Exit block: 0x154
Body: 0x13e, 0x145, 0x146, 0x154, 0x365, 0x372, 0x373, 0x383, 0x384, 0x388

Function 4:
Public function signature: 0x73ad468a
Entry block: 0x168
Exit block: 0x178
Body: 0x168, 0x16f, 0x170, 0x178, 0x38d

Function 5:
Public function signature: 0x773041ce
Entry block: 0x18a
Exit block: 0xec
Body: 0xec, 0x18a, 0x191, 0x192, 0x393, 0x3aa, 0x3af, 0x413, 0x414

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x1a8
Exit block: 0x110
Body: 0x110, 0x1a8, 0x1af, 0x1b0, 0x417

Function 7:
Public function signature: 0xc19d93fb
Entry block: 0x1d4
Exit block: 0x1f3
Body: 0x1d4, 0x1db, 0x1dc, 0x1e4, 0x1f3, 0x1f4, 0x426

Function 8:
Public function signature: 0xec8ac4d8
Entry block: 0x208
Exit block: 0xec
Body: 0xec, 0x208, 0x20f, 0x210, 0x42f, 0x447, 0x44c, 0x462, 0x4b2, 0x4b3, 0x4c0, 0x4c1, 0x4d5, 0x50e, 0x50f, 0x55f, 0x569, 0x56e, 0x570, 0x573

Function 9:
Public function signature: 0xf2fde38b
Entry block: 0x226
Exit block: 0xec
Body: 0xec, 0x226, 0x22d, 0x22e, 0x362, 0x513, 0x52a, 0x52f, 0x53f, 0x55a, 0x55b, 0x55c

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0xec
Body: 0x88, 0x8c, 0xa1, 0xa6, 0xea, 0xec

