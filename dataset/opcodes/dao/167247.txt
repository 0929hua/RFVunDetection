Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2d5cb5d5
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2d5cb5d5
0x3c: V13 = EQ 0x2d5cb5d5 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb1]
---
0x41 DUP1
0x42 PUSH4 0x6baae8e5
0x47 EQ
0x48 PUSH2 0xb1
0x4b JUMPI
---
0x42: V15 = 0x6baae8e5
0x47: V16 = EQ 0x6baae8e5 V11
0x48: V17 = 0xb1
0x4b: JUMPI 0xb1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xe8]
---
0x4c DUP1
0x4d PUSH4 0xf6b19c74
0x52 EQ
0x53 PUSH2 0xe8
0x56 JUMPI
---
0x4d: V18 = 0xf6b19c74
0x52: V19 = EQ 0xf6b19c74 V11
0x53: V20 = 0xe8
0x56: JUMPI 0xe8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0x100]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x100
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0x100
0x6e: JUMP 0x100
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0xb0]
---
Predecessors: [0x100]
Successors: []
---
0x6f JUMPDEST
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 DUP3
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad SWAP2
0xae SUB
0xaf SWAP1
0xb0 RETURN
---
0x6f: JUMPDEST 
0x70: V28 = 0x40
0x72: V29 = M[0x40]
0x75: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x8b: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xa2: M[V29] = V33
0xa3: V34 = 0x20
0xa5: V35 = ADD 0x20 V29
0xa9: V36 = 0x40
0xab: V37 = M[0x40]
0xae: V38 = SUB V35 V37
0xb0: RETURN V37 V38
---
Entry stack: [V11, 0x6f, V69]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x41]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V39 = CALLVALUE
0xb3: V40 = ISZERO V39
0xb4: V41 = 0xbc
0xb7: JUMPI 0xbc V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V42 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xd1]
---
Predecessors: [0xb1]
Successors: [0x126]
---
0xbc JUMPDEST
0xbd PUSH2 0xd2
0xc0 PUSH1 0x4
0xc2 DUP1
0xc3 DUP1
0xc4 CALLDATALOAD
0xc5 SWAP1
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP1
0xca SWAP2
0xcb SWAP1
0xcc POP
0xcd POP
0xce PUSH2 0x126
0xd1 JUMP
---
0xbc: JUMPDEST 
0xbd: V43 = 0xd2
0xc0: V44 = 0x4
0xc4: V45 = CALLDATALOAD 0x4
0xc6: V46 = 0x20
0xc8: V47 = ADD 0x20 0x4
0xce: V48 = 0x126
0xd1: JUMP 0x126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd2, V45]
Exit stack: [V11, 0xd2, V45]

================================

Block 0xd2
[0xd2:0xe7]
---
Predecessors: [0x126]
Successors: []
---
0xd2 JUMPDEST
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 DUP1
0xd7 DUP3
0xd8 DUP2
0xd9 MSTORE
0xda PUSH1 0x20
0xdc ADD
0xdd SWAP2
0xde POP
0xdf POP
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 DUP1
0xe4 SWAP2
0xe5 SUB
0xe6 SWAP1
0xe7 RETURN
---
0xd2: JUMPDEST 
0xd3: V49 = 0x40
0xd5: V50 = M[0x40]
0xd9: M[V50] = V103
0xda: V51 = 0x20
0xdc: V52 = ADD 0x20 V50
0xe0: V53 = 0x40
0xe2: V54 = M[0x40]
0xe5: V55 = SUB V52 V54
0xe7: RETURN V54 V55
---
Entry stack: [V11, 0xfe, V58, S4, V165, 0x7f09ad64, S1, V103]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xfe, V58, S4, V165, 0x7f09ad64, S1]

================================

Block 0xe8
[0xe8:0xfd]
---
Predecessors: [0x4c]
Successors: [0x1d0]
---
0xe8 JUMPDEST
0xe9 PUSH2 0xfe
0xec PUSH1 0x4
0xee DUP1
0xef DUP1
0xf0 CALLDATALOAD
0xf1 SWAP1
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 SWAP1
0xf6 SWAP2
0xf7 SWAP1
0xf8 POP
0xf9 POP
0xfa PUSH2 0x1d0
0xfd JUMP
---
0xe8: JUMPDEST 
0xe9: V56 = 0xfe
0xec: V57 = 0x4
0xf0: V58 = CALLDATALOAD 0x4
0xf2: V59 = 0x20
0xf4: V60 = ADD 0x20 0x4
0xfa: V61 = 0x1d0
0xfd: JUMP 0x1d0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfe, V58]
Exit stack: [V11, 0xfe, V58]

================================

Block 0xfe
[0xfe:0xff]
---
Predecessors: [0x438]
Successors: []
---
0xfe JUMPDEST
0xff STOP
---
0xfe: JUMPDEST 
0xff: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x100
[0x100:0x125]
---
Predecessors: [0x67]
Successors: [0x6f]
---
0x100 JUMPDEST
0x101 PUSH1 0x2
0x103 PUSH1 0x0
0x105 SWAP1
0x106 SLOAD
0x107 SWAP1
0x108 PUSH2 0x100
0x10b EXP
0x10c SWAP1
0x10d DIV
0x10e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123 AND
0x124 DUP2
0x125 JUMP
---
0x100: JUMPDEST 
0x101: V62 = 0x2
0x103: V63 = 0x0
0x106: V64 = S[0x2]
0x108: V65 = 0x100
0x10b: V66 = EXP 0x100 0x0
0x10d: V67 = DIV V64 0x1
0x10e: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x123: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x125: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: [S0, V69]
Exit stack: [V11, 0x6f, V69]

================================

Block 0x126
[0x126:0x1cf]
---
Predecessors: [0xbc, 0x2b8]
Successors: [0xd2, 0x306]
---
0x126 JUMPDEST
0x127 PUSH1 0x0
0x129 DUP1
0x12a PUSH1 0x0
0x12c DUP1
0x12d PUSH1 0x0
0x12f DUP1
0x130 DUP7
0x131 SWAP5
0x132 POP
0x133 COINBASE
0x134 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149 AND
0x14a SWAP4
0x14b POP
0x14c TIMESTAMP
0x14d SWAP3
0x14e POP
0x14f PUSH1 0x2
0x151 PUSH1 0x0
0x153 SWAP1
0x154 SLOAD
0x155 SWAP1
0x156 PUSH2 0x100
0x159 EXP
0x15a SWAP1
0x15b DIV
0x15c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171 AND
0x172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187 AND
0x188 BALANCE
0x189 SWAP2
0x18a POP
0x18b DUP5
0x18c DUP5
0x18d DUP5
0x18e DUP5
0x18f PUSH1 0x40
0x191 MLOAD
0x192 DUP1
0x193 DUP6
0x194 DUP2
0x195 MSTORE
0x196 PUSH1 0x20
0x198 ADD
0x199 DUP5
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e ADD
0x19f DUP4
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 DUP3
0x1a6 DUP2
0x1a7 MSTORE
0x1a8 PUSH1 0x20
0x1aa ADD
0x1ab SWAP5
0x1ac POP
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 DUP1
0x1b5 SWAP2
0x1b6 SUB
0x1b7 SWAP1
0x1b8 SHA3
0x1b9 PUSH1 0x1
0x1bb SWAP1
0x1bc DIV
0x1bd SWAP1
0x1be POP
0x1bf PUSH1 0x3
0x1c1 SLOAD
0x1c2 SWAP5
0x1c3 POP
0x1c4 DUP1
0x1c5 SWAP6
0x1c6 POP
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb POP
0x1cc SWAP2
0x1cd SWAP1
0x1ce POP
0x1cf JUMP
---
0x126: JUMPDEST 
0x127: V70 = 0x0
0x12a: V71 = 0x0
0x12d: V72 = 0x0
0x133: V73 = COINBASE
0x134: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x14c: V76 = TIMESTAMP
0x14f: V77 = 0x2
0x151: V78 = 0x0
0x154: V79 = S[0x2]
0x156: V80 = 0x100
0x159: V81 = EXP 0x100 0x0
0x15b: V82 = DIV V79 0x1
0x15c: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x171: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x172: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x187: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x188: V87 = BALANCE V86
0x18f: V88 = 0x40
0x191: V89 = M[0x40]
0x195: M[V89] = S0
0x196: V90 = 0x20
0x198: V91 = ADD 0x20 V89
0x19b: M[V91] = V75
0x19c: V92 = 0x20
0x19e: V93 = ADD 0x20 V91
0x1a1: M[V93] = V76
0x1a2: V94 = 0x20
0x1a4: V95 = ADD 0x20 V93
0x1a7: M[V95] = V87
0x1a8: V96 = 0x20
0x1aa: V97 = ADD 0x20 V95
0x1b1: V98 = 0x40
0x1b3: V99 = M[0x40]
0x1b6: V100 = SUB V97 V99
0x1b8: V101 = SHA3 V99 V100
0x1b9: V102 = 0x1
0x1bc: V103 = DIV V101 0x1
0x1bf: V104 = 0x3
0x1c1: V105 = S[0x3]
0x1cf: JUMP {0xd2, 0x306}
---
Entry stack: [V11, 0xfe, V58, S5, V165, 0x7f09ad64, S2, {0xd2, 0x306}, S0]
Stack pops: 2
Stack additions: [V103]
Exit stack: [V11, 0xfe, V58, S5, V165, 0x7f09ad64, S2, V103]

================================

Block 0x1d0
[0x1d0:0x292]
---
Predecessors: [0xe8]
Successors: [0x293, 0x297]
---
0x1d0 JUMPDEST
0x1d1 PUSH1 0x0
0x1d3 PUSH1 0x1
0x1d5 PUSH1 0x0
0x1d7 SWAP1
0x1d8 SLOAD
0x1d9 SWAP1
0x1da PUSH2 0x100
0x1dd EXP
0x1de SWAP1
0x1df DIV
0x1e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f5 AND
0x1f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20b AND
0x20c PUSH4 0x4a5db3b5
0x211 PUSH7 0x2386f26fc10000
0x219 CALLVALUE
0x21a SUB
0x21b ADDRESS
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP4
0x220 PUSH4 0xffffffff
0x225 AND
0x226 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x244 MUL
0x245 DUP2
0x246 MSTORE
0x247 PUSH1 0x4
0x249 ADD
0x24a DUP1
0x24b DUP3
0x24c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x261 AND
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 AND
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c ADD
0x27d SWAP2
0x27e POP
0x27f POP
0x280 PUSH1 0x0
0x282 PUSH1 0x40
0x284 MLOAD
0x285 DUP1
0x286 DUP4
0x287 SUB
0x288 DUP2
0x289 DUP6
0x28a DUP9
0x28b DUP1
0x28c EXTCODESIZE
0x28d ISZERO
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V106 = 0x0
0x1d3: V107 = 0x1
0x1d5: V108 = 0x0
0x1d8: V109 = S[0x1]
0x1da: V110 = 0x100
0x1dd: V111 = EXP 0x100 0x0
0x1df: V112 = DIV V109 0x1
0x1e0: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f5: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1f6: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x20c: V117 = 0x4a5db3b5
0x211: V118 = 0x2386f26fc10000
0x219: V119 = CALLVALUE
0x21a: V120 = SUB V119 0x2386f26fc10000
0x21b: V121 = ADDRESS
0x21c: V122 = 0x40
0x21e: V123 = M[0x40]
0x220: V124 = 0xffffffff
0x225: V125 = AND 0xffffffff 0x4a5db3b5
0x226: V126 = 0x100000000000000000000000000000000000000000000000000000000
0x244: V127 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4a5db3b5
0x246: M[V123] = 0x4a5db3b500000000000000000000000000000000000000000000000000000000
0x247: V128 = 0x4
0x249: V129 = ADD 0x4 V123
0x24c: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x261: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x262: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x279: M[V129] = V133
0x27a: V134 = 0x20
0x27c: V135 = ADD 0x20 V129
0x280: V136 = 0x0
0x282: V137 = 0x40
0x284: V138 = M[0x40]
0x287: V139 = SUB V135 V138
0x28c: V140 = EXTCODESIZE V116
0x28d: V141 = ISZERO V140
0x28e: V142 = ISZERO V141
0x28f: V143 = 0x297
0x292: JUMPI 0x297 V142
---
Entry stack: [V11, 0xfe, V58]
Stack pops: 0
Stack additions: [0x0, V116, 0x4a5db3b5, V120, V135, 0x0, V138, V139, V138, V120, V116]
Exit stack: [V11, 0xfe, V58, 0x0, V116, 0x4a5db3b5, V120, V135, 0x0, V138, V139, V138, V120, V116]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x1d0]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V144 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfe, V58, 0x0, V116, 0x4a5db3b5, V120, V135, 0x0, V138, V139, V138, V120, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, V58, 0x0, V116, 0x4a5db3b5, V120, V135, 0x0, V138, V139, V138, V120, V116]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x1d0]
Successors: [0x2a0, 0x2a4]
---
0x297 JUMPDEST
0x298 GAS
0x299 CALL
0x29a ISZERO
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x297: JUMPDEST 
0x298: V145 = GAS
0x299: V146 = CALL V145 V116 V120 V138 V139 V138 0x0
0x29a: V147 = ISZERO V146
0x29b: V148 = ISZERO V147
0x29c: V149 = 0x2a4
0x29f: JUMPI 0x2a4 V148
---
Entry stack: [V11, 0xfe, V58, 0x0, V116, 0x4a5db3b5, V120, V135, 0x0, V138, V139, V138, V120, V116]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xfe, V58, 0x0, V116, 0x4a5db3b5, V120, V135]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x297]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V150 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfe, V58, 0x0, V116, 0x4a5db3b5, V120, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, V58, 0x0, V116, 0x4a5db3b5, V120, V135]

================================

Block 0x2a4
[0x2a4:0x2ab]
---
Predecessors: [0x297]
Successors: [0x2ac]
---
0x2a4 JUMPDEST
0x2a5 POP
0x2a6 POP
0x2a7 POP
0x2a8 POP
0x2a9 DUP2
0x2aa SWAP1
0x2ab POP
---
0x2a4: JUMPDEST 
---
Entry stack: [V11, 0xfe, V58, 0x0, V116, 0x4a5db3b5, V120, V135]
Stack pops: 6
Stack additions: [S5, S5]
Exit stack: [V11, 0xfe, V58, V58]

================================

Block 0x2ac
[0x2ac:0x2b7]
---
Predecessors: [0x2a4, 0x38c]
Successors: [0x2b8, 0x399]
---
0x2ac JUMPDEST
0x2ad PUSH1 0xa
0x2af DUP3
0x2b0 ADD
0x2b1 DUP2
0x2b2 LT
0x2b3 ISZERO
0x2b4 PUSH2 0x399
0x2b7 JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V151 = 0xa
0x2b0: V152 = ADD V58 0xa
0x2b2: V153 = LT S0 V152
0x2b3: V154 = ISZERO V153
0x2b4: V155 = 0x399
0x2b7: JUMPI 0x399 V154
---
Entry stack: [V11, 0xfe, V58, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xfe, V58, S0]

================================

Block 0x2b8
[0x2b8:0x305]
---
Predecessors: [0x2ac]
Successors: [0x126]
---
0x2b8 PUSH1 0x1
0x2ba PUSH1 0x0
0x2bc SWAP1
0x2bd SLOAD
0x2be SWAP1
0x2bf PUSH2 0x100
0x2c2 EXP
0x2c3 SWAP1
0x2c4 DIV
0x2c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2da AND
0x2db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f0 AND
0x2f1 PUSH4 0x7f09ad64
0x2f6 PUSH7 0x38d7ea4c68000
0x2fe PUSH2 0x306
0x301 DUP5
0x302 PUSH2 0x126
0x305 JUMP
---
0x2b8: V156 = 0x1
0x2ba: V157 = 0x0
0x2bd: V158 = S[0x1]
0x2bf: V159 = 0x100
0x2c2: V160 = EXP 0x100 0x0
0x2c4: V161 = DIV V158 0x1
0x2c5: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2db: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f0: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2f1: V166 = 0x7f09ad64
0x2f6: V167 = 0x38d7ea4c68000
0x2fe: V168 = 0x306
0x302: V169 = 0x126
0x305: JUMP 0x126
---
Entry stack: [V11, 0xfe, V58, S0]
Stack pops: 1
Stack additions: [S0, V165, 0x7f09ad64, 0x38d7ea4c68000, 0x306, S0]
Exit stack: [V11, 0xfe, V58, S0, V165, 0x7f09ad64, 0x38d7ea4c68000, 0x306, S0]

================================

Block 0x306
[0x306:0x351]
---
Predecessors: [0x126]
Successors: [0x352, 0x356]
---
0x306 JUMPDEST
0x307 PUSH1 0x40
0x309 MLOAD
0x30a DUP4
0x30b PUSH4 0xffffffff
0x310 AND
0x311 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x32f MUL
0x330 DUP2
0x331 MSTORE
0x332 PUSH1 0x4
0x334 ADD
0x335 DUP1
0x336 DUP3
0x337 DUP2
0x338 MSTORE
0x339 PUSH1 0x20
0x33b ADD
0x33c SWAP2
0x33d POP
0x33e POP
0x33f PUSH1 0x0
0x341 PUSH1 0x40
0x343 MLOAD
0x344 DUP1
0x345 DUP4
0x346 SUB
0x347 DUP2
0x348 DUP6
0x349 DUP9
0x34a DUP1
0x34b EXTCODESIZE
0x34c ISZERO
0x34d ISZERO
0x34e PUSH2 0x356
0x351 JUMPI
---
0x306: JUMPDEST 
0x307: V170 = 0x40
0x309: V171 = M[0x40]
0x30b: V172 = 0xffffffff
0x310: V173 = AND 0xffffffff 0x7f09ad64
0x311: V174 = 0x100000000000000000000000000000000000000000000000000000000
0x32f: V175 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7f09ad64
0x331: M[V171] = 0x7f09ad6400000000000000000000000000000000000000000000000000000000
0x332: V176 = 0x4
0x334: V177 = ADD 0x4 V171
0x338: M[V177] = V103
0x339: V178 = 0x20
0x33b: V179 = ADD 0x20 V177
0x33f: V180 = 0x0
0x341: V181 = 0x40
0x343: V182 = M[0x40]
0x346: V183 = SUB V179 V182
0x34b: V184 = EXTCODESIZE V165
0x34c: V185 = ISZERO V184
0x34d: V186 = ISZERO V185
0x34e: V187 = 0x356
0x351: JUMPI 0x356 V186
---
Entry stack: [V11, 0xfe, V58, S4, V165, 0x7f09ad64, S1, V103]
Stack pops: 4
Stack additions: [S3, S2, S1, V179, 0x0, V182, V183, V182, S1, S3]
Exit stack: [V11, 0xfe, V58, S4, V165, 0x7f09ad64, S1, V179, 0x0, V182, V183, V182, S1, V165]

================================

Block 0x352
[0x352:0x355]
---
Predecessors: [0x306]
Successors: []
---
0x352 PUSH1 0x0
0x354 DUP1
0x355 REVERT
---
0x352: V188 = 0x0
0x355: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfe, V58, S10, V165, 0x7f09ad64, S7, V179, 0x0, V182, V183, V182, S1, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, V58, S10, V165, 0x7f09ad64, S7, V179, 0x0, V182, V183, V182, S1, V165]

================================

Block 0x356
[0x356:0x35e]
---
Predecessors: [0x306]
Successors: [0x35f, 0x363]
---
0x356 JUMPDEST
0x357 GAS
0x358 CALL
0x359 ISZERO
0x35a ISZERO
0x35b PUSH2 0x363
0x35e JUMPI
---
0x356: JUMPDEST 
0x357: V189 = GAS
0x358: V190 = CALL V189 V165 S1 V182 V183 V182 0x0
0x359: V191 = ISZERO V190
0x35a: V192 = ISZERO V191
0x35b: V193 = 0x363
0x35e: JUMPI 0x363 V192
---
Entry stack: [V11, 0xfe, V58, S10, V165, 0x7f09ad64, S7, V179, 0x0, V182, V183, V182, S1, V165]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xfe, V58, S10, V165, 0x7f09ad64, S7, V179]

================================

Block 0x35f
[0x35f:0x362]
---
Predecessors: [0x356]
Successors: []
---
0x35f PUSH1 0x0
0x361 DUP1
0x362 REVERT
---
0x35f: V194 = 0x0
0x362: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfe, V58, S4, V165, 0x7f09ad64, S1, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, V58, S4, V165, 0x7f09ad64, S1, V179]

================================

Block 0x363
[0x363:0x387]
---
Predecessors: [0x356]
Successors: [0x388, 0x38c]
---
0x363 JUMPDEST
0x364 POP
0x365 POP
0x366 POP
0x367 POP
0x368 PUSH1 0x0
0x36a ADDRESS
0x36b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x380 AND
0x381 BALANCE
0x382 GT
0x383 ISZERO
0x384 PUSH2 0x38c
0x387 JUMPI
---
0x363: JUMPDEST 
0x368: V195 = 0x0
0x36a: V196 = ADDRESS
0x36b: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x380: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x381: V199 = BALANCE V198
0x382: V200 = GT V199 0x0
0x383: V201 = ISZERO V200
0x384: V202 = 0x38c
0x387: JUMPI 0x38c V201
---
Entry stack: [V11, 0xfe, V58, S4, V165, 0x7f09ad64, S1, V179]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xfe, V58, S4]

================================

Block 0x388
[0x388:0x38b]
---
Predecessors: [0x363]
Successors: [0x399]
---
0x388 PUSH2 0x399
0x38b JUMP
---
0x388: V203 = 0x399
0x38b: JUMP 0x399
---
Entry stack: [V11, 0xfe, V58, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, V58, S0]

================================

Block 0x38c
[0x38c:0x398]
---
Predecessors: [0x363]
Successors: [0x2ac]
---
0x38c JUMPDEST
0x38d DUP1
0x38e DUP1
0x38f PUSH1 0x1
0x391 ADD
0x392 SWAP2
0x393 POP
0x394 POP
0x395 PUSH2 0x2ac
0x398 JUMP
---
0x38c: JUMPDEST 
0x38f: V204 = 0x1
0x391: V205 = ADD 0x1 S0
0x395: V206 = 0x2ac
0x398: JUMP 0x2ac
---
Entry stack: [V11, 0xfe, V58, S0]
Stack pops: 1
Stack additions: [V205]
Exit stack: [V11, 0xfe, V58, V205]

================================

Block 0x399
[0x399:0x3ba]
---
Predecessors: [0x2ac, 0x388]
Successors: [0x3bb, 0x3bf]
---
0x399 JUMPDEST
0x39a PUSH1 0x0
0x39c ADDRESS
0x39d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b2 AND
0x3b3 BALANCE
0x3b4 GT
0x3b5 ISZERO
0x3b6 ISZERO
0x3b7 PUSH2 0x3bf
0x3ba JUMPI
---
0x399: JUMPDEST 
0x39a: V207 = 0x0
0x39c: V208 = ADDRESS
0x39d: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x3b3: V211 = BALANCE V210
0x3b4: V212 = GT V211 0x0
0x3b5: V213 = ISZERO V212
0x3b6: V214 = ISZERO V213
0x3b7: V215 = 0x3bf
0x3ba: JUMPI 0x3bf V214
---
Entry stack: [V11, 0xfe, V58, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, V58, S0]

================================

Block 0x3bb
[0x3bb:0x3be]
---
Predecessors: [0x399]
Successors: []
---
0x3bb PUSH1 0x0
0x3bd DUP1
0x3be REVERT
---
0x3bb: V216 = 0x0
0x3be: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfe, V58, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, V58, S0]

================================

Block 0x3bf
[0x3bf:0x433]
---
Predecessors: [0x399]
Successors: [0x434, 0x438]
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x4
0x3c2 PUSH1 0x0
0x3c4 SWAP1
0x3c5 SLOAD
0x3c6 SWAP1
0x3c7 PUSH2 0x100
0x3ca EXP
0x3cb SWAP1
0x3cc DIV
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 PUSH2 0x8fc
0x3fc ADDRESS
0x3fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x412 AND
0x413 BALANCE
0x414 SWAP1
0x415 DUP2
0x416 ISZERO
0x417 MUL
0x418 SWAP1
0x419 PUSH1 0x40
0x41b MLOAD
0x41c PUSH1 0x0
0x41e PUSH1 0x40
0x420 MLOAD
0x421 DUP1
0x422 DUP4
0x423 SUB
0x424 DUP2
0x425 DUP6
0x426 DUP9
0x427 DUP9
0x428 CALL
0x429 SWAP4
0x42a POP
0x42b POP
0x42c POP
0x42d POP
0x42e ISZERO
0x42f ISZERO
0x430 PUSH2 0x438
0x433 JUMPI
---
0x3bf: JUMPDEST 
0x3c0: V217 = 0x4
0x3c2: V218 = 0x0
0x3c5: V219 = S[0x4]
0x3c7: V220 = 0x100
0x3ca: V221 = EXP 0x100 0x0
0x3cc: V222 = DIV V219 0x1
0x3cd: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3e3: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3f9: V227 = 0x8fc
0x3fc: V228 = ADDRESS
0x3fd: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x412: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x413: V231 = BALANCE V230
0x416: V232 = ISZERO V231
0x417: V233 = MUL V232 0x8fc
0x419: V234 = 0x40
0x41b: V235 = M[0x40]
0x41c: V236 = 0x0
0x41e: V237 = 0x40
0x420: V238 = M[0x40]
0x423: V239 = SUB V235 V238
0x428: V240 = CALL V233 V226 V231 V238 V239 V238 0x0
0x42e: V241 = ISZERO V240
0x42f: V242 = ISZERO V241
0x430: V243 = 0x438
0x433: JUMPI 0x438 V242
---
Entry stack: [V11, 0xfe, V58, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, V58, S0]

================================

Block 0x434
[0x434:0x437]
---
Predecessors: [0x3bf]
Successors: []
---
0x434 PUSH1 0x0
0x436 DUP1
0x437 REVERT
---
0x434: V244 = 0x0
0x437: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfe, V58, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe, V58, S0]

================================

Block 0x438
[0x438:0x43b]
---
Predecessors: [0x3bf]
Successors: [0xfe]
---
0x438 JUMPDEST
0x439 POP
0x43a POP
0x43b JUMP
---
0x438: JUMPDEST 
0x43b: JUMP 0xfe
---
Entry stack: [V11, 0xfe, V58, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x43c
[0x43c:0x47c]
---
Predecessors: []
Successors: []
---
0x43c STOP
0x43d LOG1
0x43e PUSH6 0x627a7a723058
0x445 SHA3
0x446 MISSING 0xd8
0x447 DUP1
0x448 PUSH19 0x4ec4e3cd9d441aef0429286217e3a70279597
0x45c MISSING 0xf
0x45d MISSING 0x4f
0x45e MISSING 0x4f
0x45f SELFDESTRUCT
0x460 SWAP3
0x461 JUMP
0x462 EXTCODESIZE
0x463 MISSING 0xe
0x464 PUSH24 0x20029
---
0x43c: STOP 
0x43d: LOG S0 S1 S2
0x43e: V245 = 0x627a7a723058
0x445: V246 = SHA3 0x627a7a723058 S3
0x446: MISSING 0xd8
0x448: V247 = 0x4ec4e3cd9d441aef0429286217e3a70279597
0x45c: MISSING 0xf
0x45d: MISSING 0x4f
0x45e: MISSING 0x4f
0x45f: SELFDESTRUCT S0
0x461: JUMP S3
0x462: V248 = EXTCODESIZE S0
0x463: MISSING 0xe
0x464: V249 = 0x20029
---
Entry stack: []
Stack pops: 0
Stack additions: [V246, 0x4ec4e3cd9d441aef0429286217e3a70279597, S0, S0, S1, S2, S0, V248, 0x20029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d5cb5d5
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0x100

Function 1:
Public function signature: 0x6baae8e5
Entry block: 0xb1
Exit block: 0xd2
Body: 0xb1, 0xb8, 0xbc, 0xd2

Function 2:
Public function signature: 0xf6b19c74
Entry block: 0xe8
Exit block: 0xfe
Body: 0xe8, 0xfe, 0x1d0, 0x293, 0x297, 0x2a0, 0x2a4, 0x2ac, 0x2b8, 0x306, 0x352, 0x356, 0x35f, 0x363, 0x388, 0x38c, 0x399, 0x3bb, 0x3bf, 0x434, 0x438

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

