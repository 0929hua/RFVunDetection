Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11bcd830
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11bcd830
0x3c: V13 = EQ 0x11bcd830 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8f]
---
0x41 DUP1
0x42 PUSH4 0x27e235e3
0x47 EQ
0x48 PUSH2 0x8f
0x4b JUMPI
---
0x42: V15 = 0x27e235e3
0x47: V16 = EQ 0x27e235e3 V11
0x48: V17 = 0x8f
0x4b: JUMPI 0x8f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xe6]
---
0x4c DUP1
0x4d PUSH4 0x9ffa0711
0x52 EQ
0x53 PUSH2 0xe6
0x56 JUMPI
---
0x4d: V18 = 0x9ffa0711
0x52: V19 = EQ 0x9ffa0711 V11
0x53: V20 = 0xe6
0x56: JUMPI 0xe6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x113]
---
0x57 DUP1
0x58 PUSH4 0xed21248c
0x5d EQ
0x5e PUSH2 0x113
0x61 JUMPI
---
0x58: V21 = 0xed21248c
0x5d: V22 = EQ 0xed21248c V11
0x5e: V23 = 0x113
0x61: JUMPI 0x113 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x6c, 0x70]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 DUP1
0x67 ISZERO
0x68 PUSH2 0x70
0x6b JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x67: V25 = ISZERO V24
0x68: V26 = 0x70
0x6b: JUMPI 0x70 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6c
[0x6c:0x6f]
---
Predecessors: [0x64]
Successors: []
---
0x6c PUSH1 0x0
0x6e DUP1
0x6f REVERT
---
0x6c: V27 = 0x0
0x6f: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x70
[0x70:0x78]
---
Predecessors: [0x64]
Successors: [0x11d]
---
0x70 JUMPDEST
0x71 POP
0x72 PUSH2 0x79
0x75 PUSH2 0x11d
0x78 JUMP
---
0x70: JUMPDEST 
0x72: V28 = 0x79
0x75: V29 = 0x11d
0x78: JUMP 0x11d
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x79]
Exit stack: [V11, 0x79]

================================

Block 0x79
[0x79:0x8e]
---
Predecessors: [0x11d]
Successors: []
---
0x79 JUMPDEST
0x7a PUSH1 0x40
0x7c MLOAD
0x7d DUP1
0x7e DUP3
0x7f DUP2
0x80 MSTORE
0x81 PUSH1 0x20
0x83 ADD
0x84 SWAP2
0x85 POP
0x86 POP
0x87 PUSH1 0x40
0x89 MLOAD
0x8a DUP1
0x8b SWAP2
0x8c SUB
0x8d SWAP1
0x8e RETURN
---
0x79: JUMPDEST 
0x7a: V30 = 0x40
0x7c: V31 = M[0x40]
0x80: M[V31] = V75
0x81: V32 = 0x20
0x83: V33 = ADD 0x20 V31
0x87: V34 = 0x40
0x89: V35 = M[0x40]
0x8c: V36 = SUB V33 V35
0x8e: RETURN V35 V36
---
Entry stack: [V11, 0x79, V75]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x79]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0x41]
Successors: [0x97, 0x9b]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 DUP1
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x8f: JUMPDEST 
0x90: V37 = CALLVALUE
0x92: V38 = ISZERO V37
0x93: V39 = 0x9b
0x96: JUMPI 0x9b V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x8f]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V40 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0x9b
[0x9b:0xcf]
---
Predecessors: [0x8f]
Successors: [0x123]
---
0x9b JUMPDEST
0x9c POP
0x9d PUSH2 0xd0
0xa0 PUSH1 0x4
0xa2 DUP1
0xa3 CALLDATASIZE
0xa4 SUB
0xa5 DUP2
0xa6 ADD
0xa7 SWAP1
0xa8 DUP1
0xa9 DUP1
0xaa CALLDATALOAD
0xab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0 AND
0xc1 SWAP1
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 SWAP1
0xc6 SWAP3
0xc7 SWAP2
0xc8 SWAP1
0xc9 POP
0xca POP
0xcb POP
0xcc PUSH2 0x123
0xcf JUMP
---
0x9b: JUMPDEST 
0x9d: V41 = 0xd0
0xa0: V42 = 0x4
0xa3: V43 = CALLDATASIZE
0xa4: V44 = SUB V43 0x4
0xa6: V45 = ADD 0x4 V44
0xaa: V46 = CALLDATALOAD 0x4
0xab: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xc2: V49 = 0x20
0xc4: V50 = ADD 0x20 0x4
0xcc: V51 = 0x123
0xcf: JUMP 0x123
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0xd0, V48]
Exit stack: [V11, 0xd0, V48]

================================

Block 0xd0
[0xd0:0xe5]
---
Predecessors: [0x123]
Successors: []
---
0xd0 JUMPDEST
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 DUP3
0xd6 DUP2
0xd7 MSTORE
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP2
0xdc POP
0xdd POP
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 SWAP2
0xe3 SUB
0xe4 SWAP1
0xe5 RETURN
---
0xd0: JUMPDEST 
0xd1: V52 = 0x40
0xd3: V53 = M[0x40]
0xd7: M[V53] = V83
0xd8: V54 = 0x20
0xda: V55 = ADD 0x20 V53
0xde: V56 = 0x40
0xe0: V57 = M[0x40]
0xe3: V58 = SUB V55 V57
0xe5: RETURN V57 V58
---
Entry stack: [V11, 0xd0, V83]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd0]

================================

Block 0xe6
[0xe6:0xed]
---
Predecessors: [0x4c]
Successors: [0xee, 0xf2]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 DUP1
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe6: JUMPDEST 
0xe7: V59 = CALLVALUE
0xe9: V60 = ISZERO V59
0xea: V61 = 0xf2
0xed: JUMPI 0xf2 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V59]
Exit stack: [V11, V59]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe6]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V62 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V11, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V59]

================================

Block 0xf2
[0xf2:0x110]
---
Predecessors: [0xe6]
Successors: [0x13b]
---
0xf2 JUMPDEST
0xf3 POP
0xf4 PUSH2 0x111
0xf7 PUSH1 0x4
0xf9 DUP1
0xfa CALLDATASIZE
0xfb SUB
0xfc DUP2
0xfd ADD
0xfe SWAP1
0xff DUP1
0x100 DUP1
0x101 CALLDATALOAD
0x102 SWAP1
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP1
0x107 SWAP3
0x108 SWAP2
0x109 SWAP1
0x10a POP
0x10b POP
0x10c POP
0x10d PUSH2 0x13b
0x110 JUMP
---
0xf2: JUMPDEST 
0xf4: V63 = 0x111
0xf7: V64 = 0x4
0xfa: V65 = CALLDATASIZE
0xfb: V66 = SUB V65 0x4
0xfd: V67 = ADD 0x4 V66
0x101: V68 = CALLDATALOAD 0x4
0x103: V69 = 0x20
0x105: V70 = ADD 0x20 0x4
0x10d: V71 = 0x13b
0x110: JUMP 0x13b
---
Entry stack: [V11, V59]
Stack pops: 1
Stack additions: [0x111, V68]
Exit stack: [V11, 0x111, V68]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: [0x317]
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x57]
Successors: [0x31a]
---
0x113 JUMPDEST
0x114 PUSH2 0x11b
0x117 PUSH2 0x31a
0x11a JUMP
---
0x113: JUMPDEST 
0x114: V72 = 0x11b
0x117: V73 = 0x31a
0x11a: JUMP 0x31a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x11b
[0x11b:0x11c]
---
Predecessors: [0x478]
Successors: []
---
0x11b JUMPDEST
0x11c STOP
---
0x11b: JUMPDEST 
0x11c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11d
[0x11d:0x122]
---
Predecessors: [0x70]
Successors: [0x79]
---
0x11d JUMPDEST
0x11e PUSH1 0x1
0x120 SLOAD
0x121 DUP2
0x122 JUMP
---
0x11d: JUMPDEST 
0x11e: V74 = 0x1
0x120: V75 = S[0x1]
0x122: JUMP 0x79
---
Entry stack: [V11, 0x79]
Stack pops: 1
Stack additions: [S0, V75]
Exit stack: [V11, 0x79, V75]

================================

Block 0x123
[0x123:0x13a]
---
Predecessors: [0x9b]
Successors: [0xd0]
---
0x123 JUMPDEST
0x124 PUSH1 0x0
0x126 PUSH1 0x20
0x128 MSTORE
0x129 DUP1
0x12a PUSH1 0x0
0x12c MSTORE
0x12d PUSH1 0x40
0x12f PUSH1 0x0
0x131 SHA3
0x132 PUSH1 0x0
0x134 SWAP2
0x135 POP
0x136 SWAP1
0x137 POP
0x138 SLOAD
0x139 DUP2
0x13a JUMP
---
0x123: JUMPDEST 
0x124: V76 = 0x0
0x126: V77 = 0x20
0x128: M[0x20] = 0x0
0x12a: V78 = 0x0
0x12c: M[0x0] = V48
0x12d: V79 = 0x40
0x12f: V80 = 0x0
0x131: V81 = SHA3 0x0 0x40
0x132: V82 = 0x0
0x138: V83 = S[V81]
0x13a: JUMP 0xd0
---
Entry stack: [V11, 0xd0, V48]
Stack pops: 2
Stack additions: [S1, V83]
Exit stack: [V11, 0xd0, V83]

================================

Block 0x13b
[0x13b:0x182]
---
Predecessors: [0xf2]
Successors: [0x183, 0x317]
---
0x13b JUMPDEST
0x13c PUSH1 0x0
0x13e DUP1
0x13f CALLER
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP1
0x172 DUP2
0x173 MSTORE
0x174 PUSH1 0x20
0x176 ADD
0x177 PUSH1 0x0
0x179 SHA3
0x17a SLOAD
0x17b DUP2
0x17c GT
0x17d ISZERO
0x17e ISZERO
0x17f PUSH2 0x317
0x182 JUMPI
---
0x13b: JUMPDEST 
0x13c: V84 = 0x0
0x13f: V85 = CALLER
0x140: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x156: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x16d: M[0x0] = V89
0x16e: V90 = 0x20
0x170: V91 = ADD 0x20 0x0
0x173: M[0x20] = 0x0
0x174: V92 = 0x20
0x176: V93 = ADD 0x20 0x20
0x177: V94 = 0x0
0x179: V95 = SHA3 0x0 0x40
0x17a: V96 = S[V95]
0x17c: V97 = GT V68 V96
0x17d: V98 = ISZERO V97
0x17e: V99 = ISZERO V98
0x17f: V100 = 0x317
0x182: JUMPI 0x317 V99
---
Entry stack: [V11, 0x111, V68]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x111, V68]

================================

Block 0x183
[0x183:0x1b3]
---
Predecessors: [0x13b]
Successors: [0x1b4, 0x316]
---
0x183 CALLER
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a DUP2
0x19b PUSH1 0x40
0x19d MLOAD
0x19e PUSH1 0x0
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 DUP1
0x1a4 DUP4
0x1a5 SUB
0x1a6 DUP2
0x1a7 DUP6
0x1a8 DUP8
0x1a9 GAS
0x1aa CALL
0x1ab SWAP3
0x1ac POP
0x1ad POP
0x1ae POP
0x1af ISZERO
0x1b0 PUSH2 0x316
0x1b3 JUMPI
---
0x183: V101 = CALLER
0x184: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x19b: V104 = 0x40
0x19d: V105 = M[0x40]
0x19e: V106 = 0x0
0x1a0: V107 = 0x40
0x1a2: V108 = M[0x40]
0x1a5: V109 = SUB V105 V108
0x1a9: V110 = GAS
0x1aa: V111 = CALL V110 V103 V68 V108 V109 V108 0x0
0x1af: V112 = ISZERO V111
0x1b0: V113 = 0x316
0x1b3: JUMPI 0x316 V112
---
Entry stack: [V11, 0x111, V68]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x111, V68]

================================

Block 0x1b4
[0x1b4:0x2f8]
---
Predecessors: [0x183]
Successors: [0x2f9, 0x2fd]
---
0x1b4 DUP1
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 CALLER
0x1b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ce AND
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 AND
0x1e5 DUP2
0x1e6 MSTORE
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea SWAP1
0x1eb DUP2
0x1ec MSTORE
0x1ed PUSH1 0x20
0x1ef ADD
0x1f0 PUSH1 0x0
0x1f2 SHA3
0x1f3 PUSH1 0x0
0x1f5 DUP3
0x1f6 DUP3
0x1f7 SLOAD
0x1f8 SUB
0x1f9 SWAP3
0x1fa POP
0x1fb POP
0x1fc DUP2
0x1fd SWAP1
0x1fe SSTORE
0x1ff POP
0x200 PUSH1 0x2
0x202 PUSH1 0x0
0x204 SWAP1
0x205 SLOAD
0x206 SWAP1
0x207 PUSH2 0x100
0x20a EXP
0x20b SWAP1
0x20c DIV
0x20d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x222 AND
0x223 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x238 AND
0x239 PUSH4 0x4c2f04a4
0x23e CALLER
0x23f DUP4
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP4
0x244 PUSH4 0xffffffff
0x249 AND
0x24a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x268 MUL
0x269 DUP2
0x26a MSTORE
0x26b PUSH1 0x4
0x26d ADD
0x26e DUP1
0x26f DUP4
0x270 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x285 AND
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b AND
0x29c DUP2
0x29d MSTORE
0x29e PUSH1 0x20
0x2a0 ADD
0x2a1 DUP3
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 DUP1
0x2a8 PUSH1 0x20
0x2aa ADD
0x2ab DUP3
0x2ac DUP2
0x2ad SUB
0x2ae DUP3
0x2af MSTORE
0x2b0 PUSH1 0x7
0x2b2 DUP2
0x2b3 MSTORE
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 DUP1
0x2b8 PUSH32 0x436173684f757400000000000000000000000000000000000000000000000000
0x2d9 DUP2
0x2da MSTORE
0x2db POP
0x2dc PUSH1 0x20
0x2de ADD
0x2df SWAP4
0x2e0 POP
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 PUSH1 0x0
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 DUP1
0x2ea DUP4
0x2eb SUB
0x2ec DUP2
0x2ed PUSH1 0x0
0x2ef DUP8
0x2f0 DUP1
0x2f1 EXTCODESIZE
0x2f2 ISZERO
0x2f3 DUP1
0x2f4 ISZERO
0x2f5 PUSH2 0x2fd
0x2f8 JUMPI
---
0x1b5: V114 = 0x0
0x1b8: V115 = CALLER
0x1b9: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1cf: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1e6: M[0x0] = V119
0x1e7: V120 = 0x20
0x1e9: V121 = ADD 0x20 0x0
0x1ec: M[0x20] = 0x0
0x1ed: V122 = 0x20
0x1ef: V123 = ADD 0x20 0x20
0x1f0: V124 = 0x0
0x1f2: V125 = SHA3 0x0 0x40
0x1f3: V126 = 0x0
0x1f7: V127 = S[V125]
0x1f8: V128 = SUB V127 V68
0x1fe: S[V125] = V128
0x200: V129 = 0x2
0x202: V130 = 0x0
0x205: V131 = S[0x2]
0x207: V132 = 0x100
0x20a: V133 = EXP 0x100 0x0
0x20c: V134 = DIV V131 0x1
0x20d: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x222: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x223: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x238: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x239: V139 = 0x4c2f04a4
0x23e: V140 = CALLER
0x240: V141 = 0x40
0x242: V142 = M[0x40]
0x244: V143 = 0xffffffff
0x249: V144 = AND 0xffffffff 0x4c2f04a4
0x24a: V145 = 0x100000000000000000000000000000000000000000000000000000000
0x268: V146 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x26a: M[V142] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x26b: V147 = 0x4
0x26d: V148 = ADD 0x4 V142
0x270: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x285: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x286: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x29d: M[V148] = V152
0x29e: V153 = 0x20
0x2a0: V154 = ADD 0x20 V148
0x2a3: M[V154] = V68
0x2a4: V155 = 0x20
0x2a6: V156 = ADD 0x20 V154
0x2a8: V157 = 0x20
0x2aa: V158 = ADD 0x20 V156
0x2ad: V159 = SUB V158 V148
0x2af: M[V156] = V159
0x2b0: V160 = 0x7
0x2b3: M[V158] = 0x7
0x2b4: V161 = 0x20
0x2b6: V162 = ADD 0x20 V158
0x2b8: V163 = 0x436173684f757400000000000000000000000000000000000000000000000000
0x2da: M[V162] = 0x436173684f757400000000000000000000000000000000000000000000000000
0x2dc: V164 = 0x20
0x2de: V165 = ADD 0x20 V162
0x2e4: V166 = 0x0
0x2e6: V167 = 0x40
0x2e8: V168 = M[0x40]
0x2eb: V169 = SUB V165 V168
0x2ed: V170 = 0x0
0x2f1: V171 = EXTCODESIZE V138
0x2f2: V172 = ISZERO V171
0x2f4: V173 = ISZERO V172
0x2f5: V174 = 0x2fd
0x2f8: JUMPI 0x2fd V173
---
Entry stack: [V11, 0x111, V68]
Stack pops: 1
Stack additions: [S0, V138, 0x4c2f04a4, V165, 0x0, V168, V169, V168, 0x0, V138, V172]
Exit stack: [V11, 0x111, V68, V138, 0x4c2f04a4, V165, 0x0, V168, V169, V168, 0x0, V138, V172]

================================

Block 0x2f9
[0x2f9:0x2fc]
---
Predecessors: [0x1b4]
Successors: []
---
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc REVERT
---
0x2f9: V175 = 0x0
0x2fc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V68, V138, 0x4c2f04a4, V165, 0x0, V168, V169, V168, 0x0, V138, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V68, V138, 0x4c2f04a4, V165, 0x0, V168, V169, V168, 0x0, V138, V172]

================================

Block 0x2fd
[0x2fd:0x307]
---
Predecessors: [0x1b4]
Successors: [0x308, 0x311]
---
0x2fd JUMPDEST
0x2fe POP
0x2ff GAS
0x300 CALL
0x301 ISZERO
0x302 DUP1
0x303 ISZERO
0x304 PUSH2 0x311
0x307 JUMPI
---
0x2fd: JUMPDEST 
0x2ff: V176 = GAS
0x300: V177 = CALL V176 V138 0x0 V168 V169 V168 0x0
0x301: V178 = ISZERO V177
0x303: V179 = ISZERO V178
0x304: V180 = 0x311
0x307: JUMPI 0x311 V179
---
Entry stack: [V11, 0x111, V68, V138, 0x4c2f04a4, V165, 0x0, V168, V169, V168, 0x0, V138, V172]
Stack pops: 7
Stack additions: [V178]
Exit stack: [V11, 0x111, V68, V138, 0x4c2f04a4, V165, V178]

================================

Block 0x308
[0x308:0x310]
---
Predecessors: [0x2fd]
Successors: []
---
0x308 RETURNDATASIZE
0x309 PUSH1 0x0
0x30b DUP1
0x30c RETURNDATACOPY
0x30d RETURNDATASIZE
0x30e PUSH1 0x0
0x310 REVERT
---
0x308: V181 = RETURNDATASIZE
0x309: V182 = 0x0
0x30c: RETURNDATACOPY 0x0 0x0 V181
0x30d: V183 = RETURNDATASIZE
0x30e: V184 = 0x0
0x310: REVERT 0x0 V183
---
Entry stack: [V11, 0x111, V68, V138, 0x4c2f04a4, V165, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V68, V138, 0x4c2f04a4, V165, V178]

================================

Block 0x311
[0x311:0x315]
---
Predecessors: [0x2fd]
Successors: [0x316]
---
0x311 JUMPDEST
0x312 POP
0x313 POP
0x314 POP
0x315 POP
---
0x311: JUMPDEST 
---
Entry stack: [V11, 0x111, V68, V138, 0x4c2f04a4, V165, V178]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x111, V68]

================================

Block 0x316
[0x316:0x316]
---
Predecessors: [0x183, 0x311]
Successors: [0x317]
---
0x316 JUMPDEST
---
0x316: JUMPDEST 
---
Entry stack: [V11, 0x111, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V68]

================================

Block 0x317
[0x317:0x319]
---
Predecessors: [0x13b, 0x316]
Successors: [0x111]
---
0x317 JUMPDEST
0x318 POP
0x319 JUMP
---
0x317: JUMPDEST 
0x319: JUMP 0x111
---
Entry stack: [V11, 0x111, V68]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x31a
[0x31a:0x45f]
---
Predecessors: [0x113]
Successors: [0x460, 0x464]
---
0x31a JUMPDEST
0x31b CALLVALUE
0x31c PUSH1 0x0
0x31e DUP1
0x31f CALLER
0x320 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x335 AND
0x336 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34b AND
0x34c DUP2
0x34d MSTORE
0x34e PUSH1 0x20
0x350 ADD
0x351 SWAP1
0x352 DUP2
0x353 MSTORE
0x354 PUSH1 0x20
0x356 ADD
0x357 PUSH1 0x0
0x359 SHA3
0x35a PUSH1 0x0
0x35c DUP3
0x35d DUP3
0x35e SLOAD
0x35f ADD
0x360 SWAP3
0x361 POP
0x362 POP
0x363 DUP2
0x364 SWAP1
0x365 SSTORE
0x366 POP
0x367 PUSH1 0x2
0x369 PUSH1 0x0
0x36b SWAP1
0x36c SLOAD
0x36d SWAP1
0x36e PUSH2 0x100
0x371 EXP
0x372 SWAP1
0x373 DIV
0x374 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x389 AND
0x38a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39f AND
0x3a0 PUSH4 0x4c2f04a4
0x3a5 CALLER
0x3a6 CALLVALUE
0x3a7 PUSH1 0x40
0x3a9 MLOAD
0x3aa DUP4
0x3ab PUSH4 0xffffffff
0x3b0 AND
0x3b1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3cf MUL
0x3d0 DUP2
0x3d1 MSTORE
0x3d2 PUSH1 0x4
0x3d4 ADD
0x3d5 DUP1
0x3d6 DUP4
0x3d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ec AND
0x3ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x402 AND
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x20
0x407 ADD
0x408 DUP3
0x409 DUP2
0x40a MSTORE
0x40b PUSH1 0x20
0x40d ADD
0x40e DUP1
0x40f PUSH1 0x20
0x411 ADD
0x412 DUP3
0x413 DUP2
0x414 SUB
0x415 DUP3
0x416 MSTORE
0x417 PUSH1 0x7
0x419 DUP2
0x41a MSTORE
0x41b PUSH1 0x20
0x41d ADD
0x41e DUP1
0x41f PUSH32 0x4465706f73697400000000000000000000000000000000000000000000000000
0x440 DUP2
0x441 MSTORE
0x442 POP
0x443 PUSH1 0x20
0x445 ADD
0x446 SWAP4
0x447 POP
0x448 POP
0x449 POP
0x44a POP
0x44b PUSH1 0x0
0x44d PUSH1 0x40
0x44f MLOAD
0x450 DUP1
0x451 DUP4
0x452 SUB
0x453 DUP2
0x454 PUSH1 0x0
0x456 DUP8
0x457 DUP1
0x458 EXTCODESIZE
0x459 ISZERO
0x45a DUP1
0x45b ISZERO
0x45c PUSH2 0x464
0x45f JUMPI
---
0x31a: JUMPDEST 
0x31b: V185 = CALLVALUE
0x31c: V186 = 0x0
0x31f: V187 = CALLER
0x320: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x335: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x336: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x34b: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x34d: M[0x0] = V191
0x34e: V192 = 0x20
0x350: V193 = ADD 0x20 0x0
0x353: M[0x20] = 0x0
0x354: V194 = 0x20
0x356: V195 = ADD 0x20 0x20
0x357: V196 = 0x0
0x359: V197 = SHA3 0x0 0x40
0x35a: V198 = 0x0
0x35e: V199 = S[V197]
0x35f: V200 = ADD V199 V185
0x365: S[V197] = V200
0x367: V201 = 0x2
0x369: V202 = 0x0
0x36c: V203 = S[0x2]
0x36e: V204 = 0x100
0x371: V205 = EXP 0x100 0x0
0x373: V206 = DIV V203 0x1
0x374: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x389: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x38a: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x3a0: V211 = 0x4c2f04a4
0x3a5: V212 = CALLER
0x3a6: V213 = CALLVALUE
0x3a7: V214 = 0x40
0x3a9: V215 = M[0x40]
0x3ab: V216 = 0xffffffff
0x3b0: V217 = AND 0xffffffff 0x4c2f04a4
0x3b1: V218 = 0x100000000000000000000000000000000000000000000000000000000
0x3cf: V219 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x3d1: M[V215] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x3d2: V220 = 0x4
0x3d4: V221 = ADD 0x4 V215
0x3d7: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x3ed: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x402: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x404: M[V221] = V225
0x405: V226 = 0x20
0x407: V227 = ADD 0x20 V221
0x40a: M[V227] = V213
0x40b: V228 = 0x20
0x40d: V229 = ADD 0x20 V227
0x40f: V230 = 0x20
0x411: V231 = ADD 0x20 V229
0x414: V232 = SUB V231 V221
0x416: M[V229] = V232
0x417: V233 = 0x7
0x41a: M[V231] = 0x7
0x41b: V234 = 0x20
0x41d: V235 = ADD 0x20 V231
0x41f: V236 = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x441: M[V235] = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x443: V237 = 0x20
0x445: V238 = ADD 0x20 V235
0x44b: V239 = 0x0
0x44d: V240 = 0x40
0x44f: V241 = M[0x40]
0x452: V242 = SUB V238 V241
0x454: V243 = 0x0
0x458: V244 = EXTCODESIZE V210
0x459: V245 = ISZERO V244
0x45b: V246 = ISZERO V245
0x45c: V247 = 0x464
0x45f: JUMPI 0x464 V246
---
Entry stack: [V11, 0x11b]
Stack pops: 0
Stack additions: [V210, 0x4c2f04a4, V238, 0x0, V241, V242, V241, 0x0, V210, V245]
Exit stack: [V11, 0x11b, V210, 0x4c2f04a4, V238, 0x0, V241, V242, V241, 0x0, V210, V245]

================================

Block 0x460
[0x460:0x463]
---
Predecessors: [0x31a]
Successors: []
---
0x460 PUSH1 0x0
0x462 DUP1
0x463 REVERT
---
0x460: V248 = 0x0
0x463: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11b, V210, 0x4c2f04a4, V238, 0x0, V241, V242, V241, 0x0, V210, V245]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11b, V210, 0x4c2f04a4, V238, 0x0, V241, V242, V241, 0x0, V210, V245]

================================

Block 0x464
[0x464:0x46e]
---
Predecessors: [0x31a]
Successors: [0x46f, 0x478]
---
0x464 JUMPDEST
0x465 POP
0x466 GAS
0x467 CALL
0x468 ISZERO
0x469 DUP1
0x46a ISZERO
0x46b PUSH2 0x478
0x46e JUMPI
---
0x464: JUMPDEST 
0x466: V249 = GAS
0x467: V250 = CALL V249 V210 0x0 V241 V242 V241 0x0
0x468: V251 = ISZERO V250
0x46a: V252 = ISZERO V251
0x46b: V253 = 0x478
0x46e: JUMPI 0x478 V252
---
Entry stack: [V11, 0x11b, V210, 0x4c2f04a4, V238, 0x0, V241, V242, V241, 0x0, V210, V245]
Stack pops: 7
Stack additions: [V251]
Exit stack: [V11, 0x11b, V210, 0x4c2f04a4, V238, V251]

================================

Block 0x46f
[0x46f:0x477]
---
Predecessors: [0x464]
Successors: []
---
0x46f RETURNDATASIZE
0x470 PUSH1 0x0
0x472 DUP1
0x473 RETURNDATACOPY
0x474 RETURNDATASIZE
0x475 PUSH1 0x0
0x477 REVERT
---
0x46f: V254 = RETURNDATASIZE
0x470: V255 = 0x0
0x473: RETURNDATACOPY 0x0 0x0 V254
0x474: V256 = RETURNDATASIZE
0x475: V257 = 0x0
0x477: REVERT 0x0 V256
---
Entry stack: [V11, 0x11b, V210, 0x4c2f04a4, V238, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11b, V210, 0x4c2f04a4, V238, V251]

================================

Block 0x478
[0x478:0x47d]
---
Predecessors: [0x464]
Successors: [0x11b]
---
0x478 JUMPDEST
0x479 POP
0x47a POP
0x47b POP
0x47c POP
0x47d JUMP
---
0x478: JUMPDEST 
0x47d: JUMP 0x11b
---
Entry stack: [V11, 0x11b, V210, 0x4c2f04a4, V238, V251]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x47e
[0x47e:0x4a9]
---
Predecessors: []
Successors: []
---
0x47e STOP
0x47f LOG1
0x480 PUSH6 0x627a7a723058
0x487 SHA3
0x488 MISSING 0xe3
0x489 SWAP11
0x48a MISSING 0xec
0x48b MUL
0x48c MISSING 0xa7
0x48d BALANCE
0x48e MISSING 0xd
0x48f MISSING 0xce
0x490 LOG4
0x491 MSTORE8
0x492 PC
0x493 OR
0x494 AND
0x495 PUSH18 0xad2e08c17e1e3854086f3c25afe6a481371f
0x4a8 STOP
0x4a9 MISSING 0x29
---
0x47e: STOP 
0x47f: LOG S0 S1 S2
0x480: V258 = 0x627a7a723058
0x487: V259 = SHA3 0x627a7a723058 S3
0x488: MISSING 0xe3
0x48a: MISSING 0xec
0x48b: V260 = MUL S0 S1
0x48c: MISSING 0xa7
0x48d: V261 = BALANCE S0
0x48e: MISSING 0xd
0x48f: MISSING 0xce
0x490: LOG S0 S1 S2 S3 S4 S5
0x491: M8[S6] = S7
0x492: V262 = PC
0x493: V263 = OR V262 S8
0x494: V264 = AND V263 S9
0x495: V265 = 0xad2e08c17e1e3854086f3c25afe6a481371f
0x4a8: STOP 
0x4a9: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V259, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V260, V261, 0xad2e08c17e1e3854086f3c25afe6a481371f, V264]
Exit stack: []

================================

Function 0:
Public function signature: 0x11bcd830
Entry block: 0x64
Exit block: 0x79
Body: 0x64, 0x6c, 0x70, 0x79, 0x11d

Function 1:
Public function signature: 0x27e235e3
Entry block: 0x8f
Exit block: 0xd0
Body: 0x8f, 0x97, 0x9b, 0xd0, 0x123

Function 2:
Public function signature: 0x9ffa0711
Entry block: 0xe6
Exit block: 0x308
Body: 0xe6, 0xee, 0xf2, 0x111, 0x13b, 0x183, 0x1b4, 0x2f9, 0x2fd, 0x308, 0x311, 0x316, 0x317

Function 3:
Public function signature: 0xed21248c
Entry block: 0x113
Exit block: 0x11b
Body: 0x113, 0x11b, 0x31a, 0x460, 0x464, 0x46f, 0x478

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

