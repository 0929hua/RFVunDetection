Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x47]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x121b93f
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x47
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x121b93f
0x14: V9 = EQ V7 0x121b93f
0x15: V10 = 0x47
0x18: JUMPI 0x47 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x8d]
---
0x19 DUP1
0x1a PUSH4 0x2da8f764
0x1f EQ
0x20 PUSH2 0x8d
0x23 JUMPI
---
0x1a: V11 = 0x2da8f764
0x1f: V12 = EQ 0x2da8f764 V7
0x20: V13 = 0x8d
0x23: JUMPI 0x8d V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x1a2]
---
0x24 DUP1
0x25 PUSH4 0x41c0e1b5
0x2a EQ
0x2b PUSH2 0x1a2
0x2e JUMPI
---
0x25: V14 = 0x41c0e1b5
0x2a: V15 = EQ 0x41c0e1b5 V7
0x2b: V16 = 0x1a2
0x2e: JUMPI 0x1a2 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x1ca]
---
0x2f DUP1
0x30 PUSH4 0xe6821bf5
0x35 EQ
0x36 PUSH2 0x1ca
0x39 JUMPI
---
0x30: V17 = 0xe6821bf5
0x35: V18 = EQ 0xe6821bf5 V7
0x36: V19 = 0x1ca
0x39: JUMPI 0x1ca V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0x1ed]
---
0x3a DUP1
0x3b PUSH4 0xebec7352
0x40 EQ
0x41 PUSH2 0x1ed
0x44 JUMPI
---
0x3b: V20 = 0xebec7352
0x40: V21 = EQ 0xebec7352 V7
0x41: V22 = 0x1ed
0x44: JUMPI 0x1ed V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x45
[0x45:0x46]
---
Predecessors: [0x3a, 0x47, 0x3f5]
Successors: []
---
0x45 JUMPDEST
0x46 STOP
---
0x45: JUMPDEST 
0x46: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x47
[0x47:0x8c]
---
Predecessors: [0x0]
Successors: [0x45]
---
0x47 JUMPDEST
0x48 PUSH2 0x45
0x4b PUSH1 0x4
0x4d CALLDATALOAD
0x4e PUSH1 0x0
0x50 DUP2
0x51 DUP2
0x52 MSTORE
0x53 PUSH1 0x2
0x55 PUSH1 0x20
0x57 DUP2
0x58 SWAP1
0x59 MSTORE
0x5a PUSH1 0x40
0x5c DUP1
0x5d DUP4
0x5e SHA3
0x5f DUP3
0x60 ADD
0x61 DUP1
0x62 SLOAD
0x63 CALLVALUE
0x64 SWAP1
0x65 DUP2
0x66 ADD
0x67 SWAP1
0x68 SWAP2
0x69 SSTORE
0x6a SWAP1
0x6b MLOAD
0x6c CALLER
0x6d PUSH1 0x1
0x6f PUSH1 0xa0
0x71 PUSH1 0x2
0x73 EXP
0x74 SUB
0x75 AND
0x76 SWAP4
0x77 PUSH2 0x2710
0x7a SWAP4
0x7b SWAP1
0x7c SWAP3
0x7d DIV
0x7e SWAP2
0x7f DUP2
0x80 DUP2
0x81 DUP2
0x82 DUP6
0x83 DUP9
0x84 DUP9
0x85 CALL
0x86 POP
0x87 POP
0x88 POP
0x89 POP
0x8a POP
0x8b POP
0x8c JUMP
---
0x47: JUMPDEST 
0x48: V23 = 0x45
0x4b: V24 = 0x4
0x4d: V25 = CALLDATALOAD 0x4
0x4e: V26 = 0x0
0x52: M[0x0] = V25
0x53: V27 = 0x2
0x55: V28 = 0x20
0x59: M[0x20] = 0x2
0x5a: V29 = 0x40
0x5e: V30 = SHA3 0x0 0x40
0x60: V31 = ADD 0x2 V30
0x62: V32 = S[V31]
0x63: V33 = CALLVALUE
0x66: V34 = ADD V33 V32
0x69: S[V31] = V34
0x6b: V35 = M[0x40]
0x6c: V36 = CALLER
0x6d: V37 = 0x1
0x6f: V38 = 0xa0
0x71: V39 = 0x2
0x73: V40 = EXP 0x2 0xa0
0x74: V41 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x77: V43 = 0x2710
0x7d: V44 = DIV V33 0x2
0x85: V45 = CALL 0x2710 V42 V44 V35 0x0 V35 0x0
0x8c: JUMP 0x45
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x8d
[0x8d:0x179]
---
Predecessors: [0x19]
Successors: [0x17a, 0x332]
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 DUP1
0x91 MLOAD
0x92 PUSH1 0x20
0x94 PUSH1 0x4
0x96 DUP1
0x97 CALLDATALOAD
0x98 DUP1
0x99 DUP3
0x9a ADD
0x9b CALLDATALOAD
0x9c PUSH1 0x1f
0x9e DUP2
0x9f ADD
0xa0 DUP5
0xa1 SWAP1
0xa2 DIV
0xa3 DUP5
0xa4 MUL
0xa5 DUP6
0xa6 ADD
0xa7 DUP5
0xa8 ADD
0xa9 SWAP1
0xaa SWAP6
0xab MSTORE
0xac DUP5
0xad DUP5
0xae MSTORE
0xaf PUSH2 0x1f6
0xb2 SWAP5
0xb3 SWAP2
0xb4 SWAP4
0xb5 PUSH1 0x24
0xb7 SWAP4
0xb8 SWAP1
0xb9 SWAP3
0xba SWAP2
0xbb DUP5
0xbc ADD
0xbd SWAP2
0xbe SWAP1
0xbf DUP2
0xc0 SWAP1
0xc1 DUP5
0xc2 ADD
0xc3 DUP4
0xc4 DUP3
0xc5 DUP1
0xc6 DUP3
0xc7 DUP5
0xc8 CALLDATACOPY
0xc9 POP
0xca POP
0xcb PUSH1 0x40
0xcd DUP1
0xce MLOAD
0xcf PUSH1 0x20
0xd1 DUP9
0xd2 CALLDATALOAD
0xd3 DUP1
0xd4 DUP12
0xd5 ADD
0xd6 CALLDATALOAD
0xd7 PUSH1 0x1f
0xd9 DUP2
0xda ADD
0xdb DUP4
0xdc SWAP1
0xdd DIV
0xde DUP4
0xdf MUL
0xe0 DUP5
0xe1 ADD
0xe2 DUP4
0xe3 ADD
0xe4 SWAP1
0xe5 SWAP5
0xe6 MSTORE
0xe7 DUP4
0xe8 DUP4
0xe9 MSTORE
0xea SWAP8
0xeb SWAP10
0xec SWAP9
0xed PUSH1 0x44
0xef SWAP9
0xf0 SWAP3
0xf1 SWAP8
0xf2 POP
0xf3 SWAP2
0xf4 SWAP1
0xf5 SWAP2
0xf6 ADD
0xf7 SWAP5
0xf8 POP
0xf9 SWAP1
0xfa SWAP3
0xfb POP
0xfc DUP3
0xfd SWAP2
0xfe POP
0xff DUP5
0x100 ADD
0x101 DUP4
0x102 DUP3
0x103 DUP1
0x104 DUP3
0x105 DUP5
0x106 CALLDATACOPY
0x107 POP
0x108 SWAP5
0x109 SWAP7
0x10a POP
0x10b POP
0x10c POP
0x10d POP
0x10e POP
0x10f POP
0x110 POP
0x111 PUSH1 0x1
0x113 DUP1
0x114 SLOAD
0x115 PUSH1 0x40
0x117 DUP1
0x118 MLOAD
0x119 PUSH1 0x60
0x11b DUP2
0x11c ADD
0x11d DUP3
0x11e MSTORE
0x11f DUP6
0x120 DUP2
0x121 MSTORE
0x122 PUSH1 0x20
0x124 DUP2
0x125 DUP2
0x126 ADD
0x127 DUP7
0x128 SWAP1
0x129 MSTORE
0x12a CALLVALUE
0x12b DUP3
0x12c DUP5
0x12d ADD
0x12e MSTORE
0x12f PUSH1 0x0
0x131 DUP5
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x2
0x136 DUP1
0x137 DUP4
0x138 MSTORE
0x139 SWAP4
0x13a DUP2
0x13b SHA3
0x13c DUP4
0x13d MLOAD
0x13e DUP1
0x13f MLOAD
0x140 DUP3
0x141 SLOAD
0x142 DUP4
0x143 DUP6
0x144 MSTORE
0x145 SWAP4
0x146 DUP6
0x147 SWAP1
0x148 SHA3
0x149 SWAP8
0x14a SWAP9
0x14b SWAP6
0x14c SWAP8
0x14d SWAP3
0x14e SWAP7
0x14f DUP8
0x150 SWAP7
0x151 DUP6
0x152 AND
0x153 ISZERO
0x154 PUSH2 0x100
0x157 MUL
0x158 PUSH1 0x0
0x15a NOT
0x15b ADD
0x15c SWAP1
0x15d SWAP5
0x15e AND
0x15f SWAP4
0x160 SWAP1
0x161 SWAP4
0x162 DIV
0x163 PUSH1 0x1f
0x165 SWAP1
0x166 DUP2
0x167 ADD
0x168 DUP6
0x169 SWAP1
0x16a DIV
0x16b DUP4
0x16c ADD
0x16d SWAP5
0x16e SWAP2
0x16f SWAP1
0x170 SWAP2
0x171 ADD
0x172 SWAP1
0x173 DUP4
0x174 SWAP1
0x175 LT
0x176 PUSH2 0x332
0x179 JUMPI
---
0x8d: JUMPDEST 
0x8e: V46 = 0x40
0x91: V47 = M[0x40]
0x92: V48 = 0x20
0x94: V49 = 0x4
0x97: V50 = CALLDATALOAD 0x4
0x9a: V51 = ADD 0x4 V50
0x9b: V52 = CALLDATALOAD V51
0x9c: V53 = 0x1f
0x9f: V54 = ADD V52 0x1f
0xa2: V55 = DIV V54 0x20
0xa4: V56 = MUL 0x20 V55
0xa6: V57 = ADD V47 V56
0xa8: V58 = ADD 0x20 V57
0xab: M[0x40] = V58
0xae: M[V47] = V52
0xaf: V59 = 0x1f6
0xb5: V60 = 0x24
0xbc: V61 = ADD 0x24 V50
0xc2: V62 = ADD V47 0x20
0xc8: CALLDATACOPY V62 V61 V52
0xcb: V63 = 0x40
0xce: V64 = M[0x40]
0xcf: V65 = 0x20
0xd2: V66 = CALLDATALOAD 0x24
0xd5: V67 = ADD 0x4 V66
0xd6: V68 = CALLDATALOAD V67
0xd7: V69 = 0x1f
0xda: V70 = ADD V68 0x1f
0xdd: V71 = DIV V70 0x20
0xdf: V72 = MUL 0x20 V71
0xe1: V73 = ADD V64 V72
0xe3: V74 = ADD 0x20 V73
0xe6: M[0x40] = V74
0xe9: M[V64] = V68
0xed: V75 = 0x44
0xf6: V76 = ADD 0x24 V66
0x100: V77 = ADD V64 0x20
0x106: CALLDATACOPY V77 V76 V68
0x111: V78 = 0x1
0x114: V79 = S[0x1]
0x115: V80 = 0x40
0x118: V81 = M[0x40]
0x119: V82 = 0x60
0x11c: V83 = ADD V81 0x60
0x11e: M[0x40] = V83
0x121: M[V81] = V47
0x122: V84 = 0x20
0x126: V85 = ADD 0x20 V81
0x129: M[V85] = V64
0x12a: V86 = CALLVALUE
0x12d: V87 = ADD 0x40 V81
0x12e: M[V87] = V86
0x12f: V88 = 0x0
0x133: M[0x0] = V79
0x134: V89 = 0x2
0x138: M[0x20] = 0x2
0x13b: V90 = SHA3 0x0 0x40
0x13d: V91 = M[V81]
0x13f: V92 = M[V91]
0x141: V93 = S[V90]
0x144: M[0x0] = V90
0x148: V94 = SHA3 0x0 0x20
0x152: V95 = AND V93 0x1
0x153: V96 = ISZERO V95
0x154: V97 = 0x100
0x157: V98 = MUL 0x100 V96
0x158: V99 = 0x0
0x15a: V100 = NOT 0x0
0x15b: V101 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V98
0x15e: V102 = AND V93 V101
0x162: V103 = DIV V102 0x2
0x163: V104 = 0x1f
0x167: V105 = ADD 0x1f V103
0x16a: V106 = DIV V105 0x20
0x16c: V107 = ADD V94 V106
0x171: V108 = ADD 0x20 V91
0x175: V109 = LT 0x1f V92
0x176: V110 = 0x332
0x179: JUMPI 0x332 V109
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x1f6, V47, V64, V79, V81, V90, V90, V107, V92, V94, V108]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, V92, V94, V108]

================================

Block 0x17a
[0x17a:0x185]
---
Predecessors: [0x8d]
Successors: [0x186]
---
0x17a DUP1
0x17b MLOAD
0x17c PUSH1 0xff
0x17e NOT
0x17f AND
0x180 DUP4
0x181 DUP1
0x182 ADD
0x183 OR
0x184 DUP6
0x185 SSTORE
---
0x17b: V111 = M[V108]
0x17c: V112 = 0xff
0x17e: V113 = NOT 0xff
0x17f: V114 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V111
0x182: V115 = ADD V92 V92
0x183: V116 = OR V115 V114
0x185: S[V90] = V116
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, V92, V94, V108]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, V92, V94, V108]

================================

Block 0x186
[0x186:0x18d]
---
Predecessors: [0x17a, 0x332, 0x344]
Successors: [0x18e]
---
0x186 JUMPDEST
0x187 POP
0x188 PUSH2 0x362
0x18b SWAP3
0x18c SWAP2
0x18d POP
---
0x186: JUMPDEST 
0x188: V117 = 0x362
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, S2, S1, S0]
Stack pops: 4
Stack additions: [0x362, S3, S1]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, 0x362, V107, S1]

================================

Block 0x18e
[0x18e:0x196]
---
Predecessors: [0x186, 0x197, 0x3b5]
Successors: [0x197, 0x3c1]
---
0x18e JUMPDEST
0x18f DUP1
0x190 DUP3
0x191 GT
0x192 ISZERO
0x193 PUSH2 0x3c1
0x196 JUMPI
---
0x18e: JUMPDEST 
0x191: V118 = GT S1 S0
0x192: V119 = ISZERO V118
0x193: V120 = 0x3c1
0x196: JUMPI 0x3c1 V119
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, S3, {0x314, 0x362}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, S3, {0x314, 0x362}, S1, S0]

================================

Block 0x197
[0x197:0x1a1]
---
Predecessors: [0x18e]
Successors: [0x18e]
---
0x197 PUSH1 0x0
0x199 DUP2
0x19a SSTORE
0x19b PUSH1 0x1
0x19d ADD
0x19e PUSH2 0x18e
0x1a1 JUMP
---
0x197: V121 = 0x0
0x19a: S[S0] = 0x0
0x19b: V122 = 0x1
0x19d: V123 = ADD 0x1 S0
0x19e: V124 = 0x18e
0x1a1: JUMP 0x18e
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, S3, {0x314, 0x362}, S1, S0]
Stack pops: 1
Stack additions: [V123]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, S3, {0x314, 0x362}, S1, V123]

================================

Block 0x1a2
[0x1a2:0x1bc]
---
Predecessors: [0x24]
Successors: [0x1bd, 0x3f5]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x45
0x1a6 PUSH1 0x0
0x1a8 SLOAD
0x1a9 CALLER
0x1aa PUSH1 0x1
0x1ac PUSH1 0xa0
0x1ae PUSH1 0x2
0x1b0 EXP
0x1b1 SUB
0x1b2 SWAP1
0x1b3 DUP2
0x1b4 AND
0x1b5 SWAP2
0x1b6 AND
0x1b7 EQ
0x1b8 ISZERO
0x1b9 PUSH2 0x3f5
0x1bc JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V125 = 0x45
0x1a6: V126 = 0x0
0x1a8: V127 = S[0x0]
0x1a9: V128 = CALLER
0x1aa: V129 = 0x1
0x1ac: V130 = 0xa0
0x1ae: V131 = 0x2
0x1b0: V132 = EXP 0x2 0xa0
0x1b1: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b4: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1b6: V135 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x1b7: V136 = EQ V135 V134
0x1b8: V137 = ISZERO V136
0x1b9: V138 = 0x3f5
0x1bc: JUMPI 0x3f5 V137
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45]
Exit stack: [V7, 0x45]

================================

Block 0x1bd
[0x1bd:0x1c9]
---
Predecessors: [0x1a2]
Successors: []
---
0x1bd PUSH1 0x0
0x1bf SLOAD
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 AND
0x1c9 SELFDESTRUCT
---
0x1bd: V139 = 0x0
0x1bf: V140 = S[0x0]
0x1c0: V141 = 0x1
0x1c2: V142 = 0xa0
0x1c4: V143 = 0x2
0x1c6: V144 = EXP 0x2 0xa0
0x1c7: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1c9: SELFDESTRUCT V146
---
Entry stack: [V7, 0x45]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45]

================================

Block 0x1ca
[0x1ca:0x1ec]
---
Predecessors: [0x2f]
Successors: [0x208]
---
0x1ca JUMPDEST
0x1cb PUSH2 0x208
0x1ce PUSH1 0x4
0x1d0 CALLDATALOAD
0x1d1 PUSH1 0x2
0x1d3 PUSH1 0x20
0x1d5 DUP2
0x1d6 SWAP1
0x1d7 MSTORE
0x1d8 PUSH1 0x0
0x1da SWAP2
0x1db DUP3
0x1dc MSTORE
0x1dd PUSH1 0x40
0x1df SWAP1
0x1e0 SWAP2
0x1e1 SHA3
0x1e2 SWAP1
0x1e3 DUP2
0x1e4 ADD
0x1e5 SLOAD
0x1e6 PUSH1 0x1
0x1e8 DUP3
0x1e9 ADD
0x1ea SWAP1
0x1eb DUP4
0x1ec JUMP
---
0x1ca: JUMPDEST 
0x1cb: V147 = 0x208
0x1ce: V148 = 0x4
0x1d0: V149 = CALLDATALOAD 0x4
0x1d1: V150 = 0x2
0x1d3: V151 = 0x20
0x1d7: M[0x20] = 0x2
0x1d8: V152 = 0x0
0x1dc: M[0x0] = V149
0x1dd: V153 = 0x40
0x1e1: V154 = SHA3 0x0 0x40
0x1e4: V155 = ADD V154 0x2
0x1e5: V156 = S[V155]
0x1e6: V157 = 0x1
0x1e9: V158 = ADD V154 0x1
0x1ec: JUMP 0x208
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x208, V154, V158, V156]
Exit stack: [V7, 0x208, V154, V158, V156]

================================

Block 0x1ed
[0x1ed:0x1f5]
---
Predecessors: [0x3a]
Successors: [0x1f6]
---
0x1ed JUMPDEST
0x1ee PUSH2 0x1f6
0x1f1 PUSH1 0x1
0x1f3 SLOAD
0x1f4 DUP2
0x1f5 JUMP
---
0x1ed: JUMPDEST 
0x1ee: V159 = 0x1f6
0x1f1: V160 = 0x1
0x1f3: V161 = S[0x1]
0x1f5: JUMP 0x1f6
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x1f6, V161]
Exit stack: [V7, 0x1f6, V161]

================================

Block 0x1f6
[0x1f6:0x207]
---
Predecessors: [0x1ed, 0x314]
Successors: []
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x40
0x1f9 DUP1
0x1fa MLOAD
0x1fb SWAP2
0x1fc DUP3
0x1fd MSTORE
0x1fe MLOAD
0x1ff SWAP1
0x200 DUP2
0x201 SWAP1
0x202 SUB
0x203 PUSH1 0x20
0x205 ADD
0x206 SWAP1
0x207 RETURN
---
0x1f6: JUMPDEST 
0x1f7: V162 = 0x40
0x1fa: V163 = M[0x40]
0x1fd: M[V163] = S0
0x1fe: V164 = M[0x40]
0x202: V165 = SUB V163 V164
0x203: V166 = 0x20
0x205: V167 = ADD 0x20 V165
0x207: RETURN V164 V167
---
Entry stack: [V7, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, S1]

================================

Block 0x208
[0x208:0x246]
---
Predecessors: [0x1ca]
Successors: [0x247, 0x28d]
---
0x208 JUMPDEST
0x209 PUSH1 0x40
0x20b DUP1
0x20c MLOAD
0x20d SWAP1
0x20e DUP2
0x20f ADD
0x210 DUP3
0x211 SWAP1
0x212 MSTORE
0x213 PUSH1 0x60
0x215 DUP1
0x216 DUP3
0x217 MSTORE
0x218 DUP5
0x219 SLOAD
0x21a PUSH1 0x2
0x21c PUSH1 0x1
0x21e DUP3
0x21f AND
0x220 ISZERO
0x221 PUSH2 0x100
0x224 MUL
0x225 PUSH1 0x0
0x227 NOT
0x228 ADD
0x229 SWAP1
0x22a SWAP2
0x22b AND
0x22c DIV
0x22d SWAP1
0x22e DUP3
0x22f ADD
0x230 DUP2
0x231 SWAP1
0x232 MSTORE
0x233 DUP2
0x234 SWAP1
0x235 PUSH1 0x20
0x237 DUP3
0x238 ADD
0x239 SWAP1
0x23a PUSH1 0x80
0x23c DUP4
0x23d ADD
0x23e SWAP1
0x23f DUP8
0x240 SWAP1
0x241 DUP1
0x242 ISZERO
0x243 PUSH2 0x28d
0x246 JUMPI
---
0x208: JUMPDEST 
0x209: V168 = 0x40
0x20c: V169 = M[0x40]
0x20f: V170 = ADD V169 0x40
0x212: M[V170] = V156
0x213: V171 = 0x60
0x217: M[V169] = 0x60
0x219: V172 = S[V154]
0x21a: V173 = 0x2
0x21c: V174 = 0x1
0x21f: V175 = AND V172 0x1
0x220: V176 = ISZERO V175
0x221: V177 = 0x100
0x224: V178 = MUL 0x100 V176
0x225: V179 = 0x0
0x227: V180 = NOT 0x0
0x228: V181 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V178
0x22b: V182 = AND V172 V181
0x22c: V183 = DIV V182 0x2
0x22f: V184 = ADD V169 0x60
0x232: M[V184] = V183
0x235: V185 = 0x20
0x238: V186 = ADD V169 0x20
0x23a: V187 = 0x80
0x23d: V188 = ADD V169 0x80
0x242: V189 = ISZERO V183
0x243: V190 = 0x28d
0x246: JUMPI 0x28d V189
---
Entry stack: [V7, 0x208, V154, V158, V156]
Stack pops: 3
Stack additions: [S2, S1, S0, V169, V169, V186, V188, S2, V183]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V188, V154, V183]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x208]
Successors: [0x24f, 0x262]
---
0x247 DUP1
0x248 PUSH1 0x1f
0x24a LT
0x24b PUSH2 0x262
0x24e JUMPI
---
0x248: V191 = 0x1f
0x24a: V192 = LT 0x1f V183
0x24b: V193 = 0x262
0x24e: JUMPI 0x262 V192
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V188, V154, V183]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V188, V154, V183]

================================

Block 0x24f
[0x24f:0x261]
---
Predecessors: [0x247]
Successors: [0x28d]
---
0x24f PUSH2 0x100
0x252 DUP1
0x253 DUP4
0x254 SLOAD
0x255 DIV
0x256 MUL
0x257 DUP4
0x258 MSTORE
0x259 SWAP2
0x25a PUSH1 0x20
0x25c ADD
0x25d SWAP2
0x25e PUSH2 0x28d
0x261 JUMP
---
0x24f: V194 = 0x100
0x254: V195 = S[V154]
0x255: V196 = DIV V195 0x100
0x256: V197 = MUL V196 0x100
0x258: M[V188] = V197
0x25a: V198 = 0x20
0x25c: V199 = ADD 0x20 V188
0x25e: V200 = 0x28d
0x261: JUMP 0x28d
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V188, V154, V183]
Stack pops: 3
Stack additions: [V199, S1, S0]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V199, V154, V183]

================================

Block 0x262
[0x262:0x26f]
---
Predecessors: [0x247]
Successors: [0x270]
---
0x262 JUMPDEST
0x263 DUP3
0x264 ADD
0x265 SWAP2
0x266 SWAP1
0x267 PUSH1 0x0
0x269 MSTORE
0x26a PUSH1 0x20
0x26c PUSH1 0x0
0x26e SHA3
0x26f SWAP1
---
0x262: JUMPDEST 
0x264: V201 = ADD V188 V183
0x267: V202 = 0x0
0x269: M[0x0] = V154
0x26a: V203 = 0x20
0x26c: V204 = 0x0
0x26e: V205 = SHA3 0x0 0x20
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V188, V154, V183]
Stack pops: 3
Stack additions: [V201, V205, S2]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V201, V205, V188]

================================

Block 0x270
[0x270:0x283]
---
Predecessors: [0x262, 0x270]
Successors: [0x270, 0x284]
---
0x270 JUMPDEST
0x271 DUP2
0x272 SLOAD
0x273 DUP2
0x274 MSTORE
0x275 SWAP1
0x276 PUSH1 0x1
0x278 ADD
0x279 SWAP1
0x27a PUSH1 0x20
0x27c ADD
0x27d DUP1
0x27e DUP4
0x27f GT
0x280 PUSH2 0x270
0x283 JUMPI
---
0x270: JUMPDEST 
0x272: V206 = S[S1]
0x274: M[S0] = V206
0x276: V207 = 0x1
0x278: V208 = ADD 0x1 S1
0x27a: V209 = 0x20
0x27c: V210 = ADD 0x20 S0
0x27f: V211 = GT V201 V210
0x280: V212 = 0x270
0x283: JUMPI 0x270 V211
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V201, S1, S0]
Stack pops: 3
Stack additions: [S2, V208, V210]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V201, V208, V210]

================================

Block 0x284
[0x284:0x28c]
---
Predecessors: [0x270]
Successors: [0x28d]
---
0x284 DUP3
0x285 SWAP1
0x286 SUB
0x287 PUSH1 0x1f
0x289 AND
0x28a DUP3
0x28b ADD
0x28c SWAP2
---
0x286: V213 = SUB V210 V201
0x287: V214 = 0x1f
0x289: V215 = AND 0x1f V213
0x28b: V216 = ADD V201 V215
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V201, V208, V210]
Stack pops: 3
Stack additions: [V216, S1, S2]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V216, V208, V201]

================================

Block 0x28d
[0x28d:0x2bb]
---
Predecessors: [0x208, 0x24f, 0x284]
Successors: [0x2bc, 0x302]
---
0x28d JUMPDEST
0x28e POP
0x28f POP
0x290 DUP4
0x291 DUP2
0x292 SUB
0x293 DUP3
0x294 MSTORE
0x295 DUP6
0x296 SLOAD
0x297 PUSH1 0x2
0x299 PUSH1 0x1
0x29b DUP3
0x29c AND
0x29d ISZERO
0x29e PUSH2 0x100
0x2a1 MUL
0x2a2 PUSH1 0x0
0x2a4 NOT
0x2a5 ADD
0x2a6 SWAP1
0x2a7 SWAP2
0x2a8 AND
0x2a9 DIV
0x2aa DUP1
0x2ab DUP3
0x2ac MSTORE
0x2ad PUSH1 0x20
0x2af SWAP2
0x2b0 SWAP1
0x2b1 SWAP2
0x2b2 ADD
0x2b3 SWAP1
0x2b4 DUP7
0x2b5 SWAP1
0x2b6 DUP1
0x2b7 ISZERO
0x2b8 PUSH2 0x302
0x2bb JUMPI
---
0x28d: JUMPDEST 
0x292: V217 = SUB S2 V169
0x294: M[V186] = V217
0x296: V218 = S[V158]
0x297: V219 = 0x2
0x299: V220 = 0x1
0x29c: V221 = AND V218 0x1
0x29d: V222 = ISZERO V221
0x29e: V223 = 0x100
0x2a1: V224 = MUL 0x100 V222
0x2a2: V225 = 0x0
0x2a4: V226 = NOT 0x0
0x2a5: V227 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V224
0x2a8: V228 = AND V218 V227
0x2a9: V229 = DIV V228 0x2
0x2ac: M[S2] = V229
0x2ad: V230 = 0x20
0x2b2: V231 = ADD 0x20 S2
0x2b7: V232 = ISZERO V229
0x2b8: V233 = 0x302
0x2bb: JUMPI 0x302 V232
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V231, S7, V229]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V231, V158, V229]

================================

Block 0x2bc
[0x2bc:0x2c3]
---
Predecessors: [0x28d]
Successors: [0x2c4, 0x2d7]
---
0x2bc DUP1
0x2bd PUSH1 0x1f
0x2bf LT
0x2c0 PUSH2 0x2d7
0x2c3 JUMPI
---
0x2bd: V234 = 0x1f
0x2bf: V235 = LT 0x1f V229
0x2c0: V236 = 0x2d7
0x2c3: JUMPI 0x2d7 V235
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V231, V158, V229]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V231, V158, V229]

================================

Block 0x2c4
[0x2c4:0x2d6]
---
Predecessors: [0x2bc]
Successors: [0x302]
---
0x2c4 PUSH2 0x100
0x2c7 DUP1
0x2c8 DUP4
0x2c9 SLOAD
0x2ca DIV
0x2cb MUL
0x2cc DUP4
0x2cd MSTORE
0x2ce SWAP2
0x2cf PUSH1 0x20
0x2d1 ADD
0x2d2 SWAP2
0x2d3 PUSH2 0x302
0x2d6 JUMP
---
0x2c4: V237 = 0x100
0x2c9: V238 = S[V158]
0x2ca: V239 = DIV V238 0x100
0x2cb: V240 = MUL V239 0x100
0x2cd: M[V231] = V240
0x2cf: V241 = 0x20
0x2d1: V242 = ADD 0x20 V231
0x2d3: V243 = 0x302
0x2d6: JUMP 0x302
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V231, V158, V229]
Stack pops: 3
Stack additions: [V242, S1, S0]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V242, V158, V229]

================================

Block 0x2d7
[0x2d7:0x2e4]
---
Predecessors: [0x2bc]
Successors: [0x2e5]
---
0x2d7 JUMPDEST
0x2d8 DUP3
0x2d9 ADD
0x2da SWAP2
0x2db SWAP1
0x2dc PUSH1 0x0
0x2de MSTORE
0x2df PUSH1 0x20
0x2e1 PUSH1 0x0
0x2e3 SHA3
0x2e4 SWAP1
---
0x2d7: JUMPDEST 
0x2d9: V244 = ADD V231 V229
0x2dc: V245 = 0x0
0x2de: M[0x0] = V158
0x2df: V246 = 0x20
0x2e1: V247 = 0x0
0x2e3: V248 = SHA3 0x0 0x20
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V231, V158, V229]
Stack pops: 3
Stack additions: [V244, V248, S2]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V244, V248, V231]

================================

Block 0x2e5
[0x2e5:0x2f8]
---
Predecessors: [0x2d7, 0x2e5]
Successors: [0x2e5, 0x2f9]
---
0x2e5 JUMPDEST
0x2e6 DUP2
0x2e7 SLOAD
0x2e8 DUP2
0x2e9 MSTORE
0x2ea SWAP1
0x2eb PUSH1 0x1
0x2ed ADD
0x2ee SWAP1
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 DUP1
0x2f3 DUP4
0x2f4 GT
0x2f5 PUSH2 0x2e5
0x2f8 JUMPI
---
0x2e5: JUMPDEST 
0x2e7: V249 = S[S1]
0x2e9: M[S0] = V249
0x2eb: V250 = 0x1
0x2ed: V251 = ADD 0x1 S1
0x2ef: V252 = 0x20
0x2f1: V253 = ADD 0x20 S0
0x2f4: V254 = GT V244 V253
0x2f5: V255 = 0x2e5
0x2f8: JUMPI 0x2e5 V254
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V244, S1, S0]
Stack pops: 3
Stack additions: [S2, V251, V253]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V244, V251, V253]

================================

Block 0x2f9
[0x2f9:0x301]
---
Predecessors: [0x2e5]
Successors: [0x302]
---
0x2f9 DUP3
0x2fa SWAP1
0x2fb SUB
0x2fc PUSH1 0x1f
0x2fe AND
0x2ff DUP3
0x300 ADD
0x301 SWAP2
---
0x2fb: V256 = SUB V253 V244
0x2fc: V257 = 0x1f
0x2fe: V258 = AND 0x1f V256
0x300: V259 = ADD V244 V258
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V244, V251, V253]
Stack pops: 3
Stack additions: [V259, S1, S2]
Exit stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, V259, V251, V244]

================================

Block 0x302
[0x302:0x313]
---
Predecessors: [0x28d, 0x2c4, 0x2f9]
Successors: []
---
0x302 JUMPDEST
0x303 POP
0x304 POP
0x305 SWAP6
0x306 POP
0x307 POP
0x308 POP
0x309 POP
0x30a POP
0x30b POP
0x30c PUSH1 0x40
0x30e MLOAD
0x30f DUP1
0x310 SWAP2
0x311 SUB
0x312 SWAP1
0x313 RETURN
---
0x302: JUMPDEST 
0x30c: V260 = 0x40
0x30e: V261 = M[0x40]
0x311: V262 = SUB S2 V261
0x313: RETURN V261 V262
---
Entry stack: [V7, 0x208, V154, V158, V156, V169, V169, V186, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V7, 0x208]

================================

Block 0x314
[0x314:0x331]
---
Predecessors: [0x3c1]
Successors: [0x1f6]
---
0x314 JUMPDEST
0x315 POP
0x316 POP
0x317 PUSH1 0x40
0x319 SWAP2
0x31a SWAP1
0x31b SWAP2
0x31c ADD
0x31d MLOAD
0x31e PUSH1 0x2
0x320 SWAP2
0x321 SWAP1
0x322 SWAP2
0x323 ADD
0x324 SSTORE
0x325 PUSH1 0x1
0x327 DUP1
0x328 SLOAD
0x329 DUP2
0x32a ADD
0x32b SWAP1
0x32c SSTORE
0x32d SWAP3
0x32e SWAP2
0x32f POP
0x330 POP
0x331 JUMP
---
0x314: JUMPDEST 
0x317: V263 = 0x40
0x31c: V264 = ADD 0x40 V81
0x31d: V265 = M[V264]
0x31e: V266 = 0x2
0x323: V267 = ADD 0x2 V90
0x324: S[V267] = V265
0x325: V268 = 0x1
0x328: V269 = S[0x1]
0x32a: V270 = ADD 0x1 V269
0x32c: S[0x1] = V270
0x331: JUMP 0x1f6
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, S1, S0]
Stack pops: 8
Stack additions: [S4]
Exit stack: [V7, V79]

================================

Block 0x332
[0x332:0x340]
---
Predecessors: [0x8d]
Successors: [0x186, 0x341]
---
0x332 JUMPDEST
0x333 DUP3
0x334 DUP1
0x335 ADD
0x336 PUSH1 0x1
0x338 ADD
0x339 DUP6
0x33a SSTORE
0x33b DUP3
0x33c ISZERO
0x33d PUSH2 0x186
0x340 JUMPI
---
0x332: JUMPDEST 
0x335: V271 = ADD V92 V92
0x336: V272 = 0x1
0x338: V273 = ADD 0x1 V271
0x33a: S[V90] = V273
0x33c: V274 = ISZERO V92
0x33d: V275 = 0x186
0x340: JUMPI 0x186 V274
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, V92, V94, V108]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, V92, V94, V108]

================================

Block 0x341
[0x341:0x343]
---
Predecessors: [0x332]
Successors: [0x344]
---
0x341 SWAP2
0x342 DUP3
0x343 ADD
---
0x343: V276 = ADD V108 V92
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, V92, V94, V108]
Stack pops: 3
Stack additions: [S0, S1, V276]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, V108, V94, V276]

================================

Block 0x344
[0x344:0x34c]
---
Predecessors: [0x341, 0x34d]
Successors: [0x186, 0x34d]
---
0x344 JUMPDEST
0x345 DUP3
0x346 DUP2
0x347 GT
0x348 ISZERO
0x349 PUSH2 0x186
0x34c JUMPI
---
0x344: JUMPDEST 
0x347: V277 = GT V276 S2
0x348: V278 = ISZERO V277
0x349: V279 = 0x186
0x34c: JUMPI 0x186 V278
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, S2, S1, V276]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, S2, S1, V276]

================================

Block 0x34d
[0x34d:0x361]
---
Predecessors: [0x344]
Successors: [0x344]
---
0x34d DUP3
0x34e MLOAD
0x34f DUP3
0x350 PUSH1 0x0
0x352 POP
0x353 SSTORE
0x354 SWAP2
0x355 PUSH1 0x20
0x357 ADD
0x358 SWAP2
0x359 SWAP1
0x35a PUSH1 0x1
0x35c ADD
0x35d SWAP1
0x35e PUSH2 0x344
0x361 JUMP
---
0x34e: V280 = M[S2]
0x350: V281 = 0x0
0x353: S[S1] = V280
0x355: V282 = 0x20
0x357: V283 = ADD 0x20 S2
0x35a: V284 = 0x1
0x35c: V285 = ADD 0x1 S1
0x35e: V286 = 0x344
0x361: JUMP 0x344
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, S2, S1, V276]
Stack pops: 3
Stack additions: [V283, V285, S0]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V90, V107, V283, V285, V276]

================================

Block 0x362
[0x362:0x3a8]
---
Predecessors: [0x3c1]
Successors: [0x3a9, 0x3c5]
---
0x362 JUMPDEST
0x363 POP
0x364 POP
0x365 PUSH1 0x20
0x367 DUP3
0x368 ADD
0x369 MLOAD
0x36a DUP2
0x36b PUSH1 0x1
0x36d ADD
0x36e PUSH1 0x0
0x370 POP
0x371 SWAP1
0x372 DUP1
0x373 MLOAD
0x374 SWAP1
0x375 PUSH1 0x20
0x377 ADD
0x378 SWAP1
0x379 DUP3
0x37a DUP1
0x37b SLOAD
0x37c PUSH1 0x1
0x37e DUP2
0x37f PUSH1 0x1
0x381 AND
0x382 ISZERO
0x383 PUSH2 0x100
0x386 MUL
0x387 SUB
0x388 AND
0x389 PUSH1 0x2
0x38b SWAP1
0x38c DIV
0x38d SWAP1
0x38e PUSH1 0x0
0x390 MSTORE
0x391 PUSH1 0x20
0x393 PUSH1 0x0
0x395 SHA3
0x396 SWAP1
0x397 PUSH1 0x1f
0x399 ADD
0x39a PUSH1 0x20
0x39c SWAP1
0x39d DIV
0x39e DUP2
0x39f ADD
0x3a0 SWAP3
0x3a1 DUP3
0x3a2 PUSH1 0x1f
0x3a4 LT
0x3a5 PUSH2 0x3c5
0x3a8 JUMPI
---
0x362: JUMPDEST 
0x365: V287 = 0x20
0x368: V288 = ADD V81 0x20
0x369: V289 = M[V288]
0x36b: V290 = 0x1
0x36d: V291 = ADD 0x1 V90
0x36e: V292 = 0x0
0x373: V293 = M[V289]
0x375: V294 = 0x20
0x377: V295 = ADD 0x20 V289
0x37b: V296 = S[V291]
0x37c: V297 = 0x1
0x37f: V298 = 0x1
0x381: V299 = AND 0x1 V296
0x382: V300 = ISZERO V299
0x383: V301 = 0x100
0x386: V302 = MUL 0x100 V300
0x387: V303 = SUB V302 0x1
0x388: V304 = AND V303 V296
0x389: V305 = 0x2
0x38c: V306 = DIV V304 0x2
0x38e: V307 = 0x0
0x390: M[0x0] = V291
0x391: V308 = 0x20
0x393: V309 = 0x0
0x395: V310 = SHA3 0x0 0x20
0x397: V311 = 0x1f
0x399: V312 = ADD 0x1f V306
0x39a: V313 = 0x20
0x39d: V314 = DIV V312 0x20
0x39f: V315 = ADD V310 V314
0x3a2: V316 = 0x1f
0x3a4: V317 = LT 0x1f V293
0x3a5: V318 = 0x3c5
0x3a8: JUMPI 0x3c5 V317
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, V291, V315, V293, V310, V295]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, V293, V310, V295]

================================

Block 0x3a9
[0x3a9:0x3b4]
---
Predecessors: [0x362]
Successors: [0x3b5]
---
0x3a9 DUP1
0x3aa MLOAD
0x3ab PUSH1 0xff
0x3ad NOT
0x3ae AND
0x3af DUP4
0x3b0 DUP1
0x3b1 ADD
0x3b2 OR
0x3b3 DUP6
0x3b4 SSTORE
---
0x3aa: V319 = M[V295]
0x3ab: V320 = 0xff
0x3ad: V321 = NOT 0xff
0x3ae: V322 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V319
0x3b1: V323 = ADD V293 V293
0x3b2: V324 = OR V323 V322
0x3b4: S[V291] = V324
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, V293, V310, V295]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, V293, V310, V295]

================================

Block 0x3b5
[0x3b5:0x3c0]
---
Predecessors: [0x3a9, 0x3c5, 0x3d7]
Successors: [0x18e]
---
0x3b5 JUMPDEST
0x3b6 POP
0x3b7 PUSH2 0x314
0x3ba SWAP3
0x3bb SWAP2
0x3bc POP
0x3bd PUSH2 0x18e
0x3c0 JUMP
---
0x3b5: JUMPDEST 
0x3b7: V325 = 0x314
0x3bd: V326 = 0x18e
0x3c0: JUMP 0x18e
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, S2, S1, S0]
Stack pops: 4
Stack additions: [0x314, S3, S1]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, 0x314, V315, S1]

================================

Block 0x3c1
[0x3c1:0x3c4]
---
Predecessors: [0x18e]
Successors: [0x314, 0x362]
---
0x3c1 JUMPDEST
0x3c2 POP
0x3c3 SWAP1
0x3c4 JUMP
---
0x3c1: JUMPDEST 
0x3c4: JUMP {0x314, 0x362}
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, S3, {0x314, 0x362}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, S3, S1]

================================

Block 0x3c5
[0x3c5:0x3d3]
---
Predecessors: [0x362]
Successors: [0x3b5, 0x3d4]
---
0x3c5 JUMPDEST
0x3c6 DUP3
0x3c7 DUP1
0x3c8 ADD
0x3c9 PUSH1 0x1
0x3cb ADD
0x3cc DUP6
0x3cd SSTORE
0x3ce DUP3
0x3cf ISZERO
0x3d0 PUSH2 0x3b5
0x3d3 JUMPI
---
0x3c5: JUMPDEST 
0x3c8: V327 = ADD V293 V293
0x3c9: V328 = 0x1
0x3cb: V329 = ADD 0x1 V327
0x3cd: S[V291] = V329
0x3cf: V330 = ISZERO V293
0x3d0: V331 = 0x3b5
0x3d3: JUMPI 0x3b5 V330
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, V293, V310, V295]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, V293, V310, V295]

================================

Block 0x3d4
[0x3d4:0x3d6]
---
Predecessors: [0x3c5]
Successors: [0x3d7]
---
0x3d4 SWAP2
0x3d5 DUP3
0x3d6 ADD
---
0x3d6: V332 = ADD V295 V293
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, V293, V310, V295]
Stack pops: 3
Stack additions: [S0, S1, V332]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, V295, V310, V332]

================================

Block 0x3d7
[0x3d7:0x3df]
---
Predecessors: [0x3d4, 0x3e0]
Successors: [0x3b5, 0x3e0]
---
0x3d7 JUMPDEST
0x3d8 DUP3
0x3d9 DUP2
0x3da GT
0x3db ISZERO
0x3dc PUSH2 0x3b5
0x3df JUMPI
---
0x3d7: JUMPDEST 
0x3da: V333 = GT V332 S2
0x3db: V334 = ISZERO V333
0x3dc: V335 = 0x3b5
0x3df: JUMPI 0x3b5 V334
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, S2, S1, V332]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, S2, S1, V332]

================================

Block 0x3e0
[0x3e0:0x3f4]
---
Predecessors: [0x3d7]
Successors: [0x3d7]
---
0x3e0 DUP3
0x3e1 MLOAD
0x3e2 DUP3
0x3e3 PUSH1 0x0
0x3e5 POP
0x3e6 SSTORE
0x3e7 SWAP2
0x3e8 PUSH1 0x20
0x3ea ADD
0x3eb SWAP2
0x3ec SWAP1
0x3ed PUSH1 0x1
0x3ef ADD
0x3f0 SWAP1
0x3f1 PUSH2 0x3d7
0x3f4 JUMP
---
0x3e1: V336 = M[S2]
0x3e3: V337 = 0x0
0x3e6: S[S1] = V336
0x3e8: V338 = 0x20
0x3ea: V339 = ADD 0x20 S2
0x3ed: V340 = 0x1
0x3ef: V341 = ADD 0x1 S1
0x3f1: V342 = 0x3d7
0x3f4: JUMP 0x3d7
---
Entry stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, S2, S1, V332]
Stack pops: 3
Stack additions: [V339, V341, S0]
Exit stack: [V7, 0x1f6, V47, V64, V79, V81, V90, V291, V315, V339, V341, V332]

================================

Block 0x3f5
[0x3f5:0x3f6]
---
Predecessors: [0x1a2]
Successors: [0x45]
---
0x3f5 JUMPDEST
0x3f6 JUMP
---
0x3f5: JUMPDEST 
0x3f6: JUMP 0x45
---
Entry stack: [V7, 0x45]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Function 0:
Public function signature: 0x121b93f
Entry block: 0x47
Exit block: 0x45
Body: 0x45, 0x47

Function 1:
Public function signature: 0x2da8f764
Entry block: 0x8d
Exit block: 0x1f6
Body: 0x8d, 0x17a, 0x186, 0x18e, 0x197, 0x1f6, 0x314, 0x332, 0x341, 0x344, 0x34d, 0x362, 0x3a9, 0x3b5, 0x3c1, 0x3c5, 0x3d4, 0x3d7, 0x3e0

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0x1a2
Exit block: 0x45
Body: 0x45, 0x1a2, 0x1bd, 0x3f5

Function 3:
Public function signature: 0xe6821bf5
Entry block: 0x1ca
Exit block: 0x302
Body: 0x1ca, 0x208, 0x247, 0x24f, 0x262, 0x270, 0x284, 0x28d, 0x2bc, 0x2c4, 0x2d7, 0x2e5, 0x2f9, 0x302

Function 4:
Public function signature: 0xebec7352
Entry block: 0x1ed
Exit block: 0x1f6
Body: 0x1ed, 0x1f6

Function 5:
Public fallback function
Entry block: 0x45
Exit block: 0x45
Body: 0x45

